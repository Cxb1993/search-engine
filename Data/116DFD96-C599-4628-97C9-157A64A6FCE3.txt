2三維多面體模型一致表面參數化、模型分割與俱風格
化型變技術之研究(2/2)
計畫編號：NSC 95－2221－E－006－368
執行期間： 95 年 8月 1 日至 96 年 10 月 31 日
計畫主持人： 李同益
中文摘要
今年為二年計劃中最後一年，今年主要成果:提出一個利用半自動3D特徵多邊型
切割方法與系統實現模型。此外，我們利用sketch概念，建構出類似Teddy 系統
之俱風格化模型與型變動畫系統。有別於Teddy，本系統能更表現出多樣化與風
格化模型與型變動畫。
計畫成果自評部份
This is our last year result of a two-year project (2005/08-2007/10). Overall, our
research results match the original planning. We have developed many related
techniques and also published several related journal or international conference
papers. We believe our results have advanced techniques in this area. In the following,
we list all related publication.
1. (2007) Tong-Yee Lee, Shao-Wei Yen I-Cheng Yeh, “Texture Mapping with Hard
Constraints Using Warping Scheme,” (accepted) IEEE Transactions on
Visualization and Computer Graphics
2. (2007) Tong-Yee Lee, Chao-Hung Lin, Yu-Shuen Wang, Tai-Guang Chen ,"
Animation Key-frame Extraction and Simplification Using Deformation Analysis,"
(accepted) IEEE Transactions on Circuits and Systems for Video
Technology
3. (2007) Tong-Yee Lee, Chao-Hung Lin, Hung-Kuo Chu, Yu-Shuen Wang,
Shao-Wei Yen, Chang-Rung Tsai, "Mesh Pose-Editing Using Examples",
Computer Animation and Virtual Worlds Journal, Volume 18, Issue
4-5 (September - December 2007), pp. 235-245.
4. (2007) Tong-Yee Lee, Ping-Hsien Lin, Shao-Wei Yen, Zhi-Yuan Yao, Jin-Lung
Lin, “Exaggeration Cloning From Example Sequence,” (Invited paper)
International Journal of Computer Sciences and Engineering Systems
(preliminary version appeared in CASA 2007, June 11th-13th, 2007,Belgium).
414. (2006) Tong-Yee Lee, Zhi-Yuan Yao, Hung-Kuo Chu, Ming-Jen Tai, and
Cheng-Chieh Chen," Generating Genus-n-to-m Mesh Morphing Using Spherical
Parameterization",International Conference on Computer Animation and
Social Agents (CASA 2006), Geneva, Switzerland, 2006.
15. (2006) Tong-Yee Lee, Ming-Te Chi, Chung-Ren Yan, Chiung-Fu Chen, Yen-Chi
Lin, “Stylized Motion for 3D Character Rendering and Animation,” ,International
Conference on Computer Animation and Social Agents (CASA 2006),
Geneva, Switzerland 2006,
65. Smoothing the cutting boundaries using [1] between the partitioned components.
The details of these five stages will be presented in the following sections.
3. WYSIWYG Approach
3.1 Dual Graph Generation
In order to find the distance from one face to other faces through the surface of the mesh, we have to
define the distance metrics between two adjacent faces. After defining this distance metrics, then we
can connect each of them by an edge to form the Dual Graph. Finally, we apply all-pairs shortest path
algorithm to solve the distance between all faces. Currently, there are two distance metrics used to
generate Dual Graph in the system. For static meshes, we refer to [1] and set the distance between two
adjacent faces by the combination of angle between them and the geodesic distance from the center of
one face to the center of the other. The formal expression is shown as follow:
,
)_(
)(_
)1(
)(
),(
))(),((
DistAngavg
DistAng
Geodavg
ffGeod
fdualfdualWeight
ij
ji
ji




where Geod(fi,fj) is the geodesic distance between face i and face j, αij is the angle between these two
faces, and δ is the proportion (weight) of geodesic distance and angular distance which is adjusted by 
user.
3.2 Feature Specification
In [1], the system finds faces which are far away from each other and set them as feature points
automatically. But as we mentioned before, sometimes user may want to separate the particular
partition from original mesh, the automatic process can not always satisfy user’s desire. Therefore, our
system decides to take user specifications as feature points and decomposes the static meshes
accordingly.
8the ideal cutting boundary is not clear to our system and may be different to users. To have a better
control over the decomposition, the user should point out more features on the mesh to specify the
partition. For example, Figure 3 is an almost convex object; the angular distance has slight influence
on the cutting boundary. Thus, meaningful partitions can not be defined definitely and are different
from user to user. The user has to point out more features to specify the cutting boundary if he or she
has special requirement for the decomposition.
Figure 3: The almost convex object should be decomposed with more feature points to indicate the
shape of the boundary.
3.3 Face Clustering
After the position of the feature points are indicated, the system will decide which partition each face
belongs to based on the distance between the face and the feature points. Faces are hard to stride across
a concave edge because of the distance through it is much larger than a convex one. Therefore, the
partitions can be separated at concave edges. To achieve our face clustering, we need to minimize the
objective function:
)),(min( fpfdis
iFPfp
Here, f is the face which is being considered now, and FPi is a set of feature points representing
partition i. After this process, each face in the mesh can be assigned to a partition. But it is not a stable
state. Due to unobvious concave edges or the distance from the face to several feature points are close,
some faces near boundary may be assigned to the wrong partition. Therefore, our algorithm execute
10
troublesome to point out feature points by user, especially when there are lots of partitions to cut.
We believe that advances in artificial intelligence may overcome this situation. The system will
learn where the marked regions are depending on the kind of dual graph and result of
decomposition when the user draws some area on the mesh. Therefore, the automatic process for
future decomposition scheme will be parameter free and satisfy the desire of the user as much as
possible.
Acknowledgements
This work is supported by National Science Council, Taiwan, Republic of China under contract No.
95-2221-E-006-193-MY2 and 95-2221-E-006-368.
Figure 4: Different hierarchical segmentations of Dino and Tree Frog by user specifications. A user
can decide how fine the level is in different region of the mesh.
12
[10] Katz, S., Leifman, G., and Tal, A., “Mesh segmentation using feature point and core 
extraction,” Visual Computer 21, 8- 10, 865–875, 2005.
[11] Hsueh-Yi Sean Lin, Hong-Yuan Mark Liao, and Ja-Chen Lin, "Visual Salience-Guided Mesh
Decomposition," IEEE Trans. on Multimedia, vol. 9, No. 1, pp. 46-57, Jan. 2007.
14
Keywords: Sketching interface, shadow and motion strokes
1 Introduction
To many 2D artists, the burden of switching to 3D modeling lies in the difficulties
associated with current 3D modeling packages. Our goal is to introduce a practical
and easily understood and controlled sketch-based modeling and animation approach.
Although our system limits the modeling ability because some features cannot be
modeled in a single view, to us, this is more analogues to our experience with drawing
using pen and paper on a blank canvas. Taking into account the recent works on
sketch-based modeling interfaces [1-14], our work presents interesting contributions
offering a natural pen-and-paper like interface for non-skilled 3D modeling users as
well as deformation for animation control. From the interaction point of view, the
main contributions are:
 The modeling module based on skeleton and silhouette strokes is complemented
by providing additional internal and shadow strokes to add more detail to the
model.
 Natural stroke metaphors are provided, i.e. shadow and motion strokes, for users,
which are commonly found in traditional 2D cartoons.
 The proposed method takes advantage of pen pressure information from the
tablet input to influence how object inflation is produced. The pressure linked
with motion strokes is also utilized in animation timing and interpolation control.
2 Related Works
A number of efforts have been devoted to devising appropriate stroke and sketch
based interfaces for 3D modeling [1-14]. The Teddy system [1], a pioneer work,
16
following three major components: Modeling (Section 3.1), Deformation (Section
3.2) and Animation (Section 3.3).
3.1 Modeling
3.1.1 User Stroke Handling
The modeling process starts with user input strokes. Strokes are handled as a series of
points containing pressure information from the tablet input. Usually, an image can be
loaded into the system as a reference for the user to follow. The user draws the model
using three kinds of user strokes: feature strokes (black), skeleton strokes (blue) and
shadow strokes (gray), as shown in Figure 1(b). Feature strokes are further
categorized into two kinds: silhouette strokes (Figure 2(c)) and internal strokes
(Figure 2(d)). Silhouette strokes are used to draw around the contour of the object and
should form a closed region. Silhouette strokes are used as the principle guide in
model construction. Internal strokes, on the other hand, are drawn inside the object to
indicate the fine detail within the object. Skeleton strokes indicate where the user
thinks the bones are. Skeleton strokes are used in model construction and greatly
simplify the deformation and animation process.
(a) (b) (c) (d) (e) (f)
Figure 2. (a) User strokes overlaid onto an image; (b) feature strokes; (c) silhouette
strokes; (d) internal strokes. In (e) and (f), illustration of shadow strokes and the
relationship with feature strokes: (e) a bump and (f) an indentation.
Shadow strokes are a collection of parallel strokes representing an area covered by the
18
Figure 3(c). To reduce the complexity of the lifting process, we require all triangles in
each sub-region must have at least two edges connecting the skeleton stroke and
silhouette stroke.
(a) (b) (c) (d) (e) (f)
Figure 4. Two undesirable triangulations.
However, the CDT algorithm might create two kinds of triangles violating our
requirement: one case is a triangle with at least two edges connecting the silhouette
stroke, as shown in Figure 4(b), the other case is a triangle that has at least two edges
connecting the skeleton stroke, as shown in Figure 4(e). In both cases, an edge swap
operation is preformed on these undesirable edges to obtain results similar to the ones
shown in Figures 4(c) and (f).
Since the skeleton may not be a smooth curve, the resulting model will also not be
smooth. Therefore, a smoothing process is applied to the skeleton. A simple
smoothing mask  25.05.025.0 is adopted to perform curve smoothing in 2D. For each
vertex ivs on skeleton to be smoothed, the new vertex location of ivs
is
11
' 25.05.025.0   iiii vsvsvsvs , where 1ivs , ivs and 1ivs are three consecutive skeleton
vertices, and repeat this process over the entire skeleton several times. After this
smoothing process, the isolated region is again triangulated with the smoothed
skeleton.
20
shows the local frame system of a half cross-section along the skeleton. The location
of 2p is determined by:
)pressure3.06.0(. 12 Rxyp )pressure3.06.0(. 22 Rzp
where 1R is the width of the curve, and 2R is the height of the curve. As the
pressure goes up, 2p moves toward the red dot; when the pressure becomes closer to
0, 2p moves down to the white dot. In the above equation, constants 0.6 and 0.3 are
determined from our experimental practice. This spline controlling scheme adds more
expressiveness to the final model construction. Two examples are shown in Figure
6(b).
Figure 7. How the spline affected by the pressure on feature stroke.
After the splines are generated, the last step is uniform spline sampling, followed by
triangulation using these new sample points, as shown in Figure 3(d). This reference
model is constructed to give the Z value over the entire region, and only the
information on Z value is used in the stylized model construction. Therefore, no
further refinement of the reference model is performed to deal with long narrow
triangles that may exist in the reference model.
22
Figure 8(d). Vertices fv on the stylized model styM get their height value by getting
the depth value z at its corresponding location on the reference model refM constructed
in section 3.1.2. That is, styf Mv  , ),(. refff Mvheightzv  , where ),( Mpheight returns the
height value at the location p on mesh M. After all the height values are assigned, the
system checks the resulting triangles to see if any too large triangles are left. If there
are, these triangles are again subdivided. New vertices introduced in the subdivision
process obtain the height values using the same method. This process continues until
all triangles are fine enough. To form a closed model, we simply generate the back of
the stylized model by mirroring the stylized model relative to the view-plane. This is
the last step in stylized model construction.
3.1.4 Feature Refinement
The features are hinted by both internal and shadow strokes. In general, internal
strokes drawn by the user are not closed. To form an influence region of a feature
stroke, we close the unclosed internal stroke by fitting a spline at the two end points
with other vertices along the stroke as control points. If there are shadow strokes lying
in the influence region of an internal stroke, we group them together and relate them
to this internal stroke. To add more details in the modeling, the influence region of the
internal stroke and the relative shadow strokes are taken into account to compute the
additional displacement Z along the Z direction for all vertices under this closed
region. This displacement Falloff
d
d
ceLiftDistanDirectionZ 



2
1
2 , and
 LengthArckeNumberShadowStroFalloff / , where Direction is either +1 or -1 depending
on the location of the shadow strokes. With the assumption of a virtual light source
located at the upper right corner of the screen, when shadow strokes appear in the
24
Otherwise the system performs automatic texturing on the model. For texturing, we
found that parallel projection works well in most cases.
3.2 Deformation
In this section, we present the interface designed for deformation. The user can simply
circle the region he or she wants to deform by lasso line as shows in Figure 11(a), or
click on any part of the region like Figure 11(b) and the selection is done. If the user
circled a region using a lasso line, the user-drawn skeleton corresponding to the
selected region is also found by the system, as shown by the red line in Figure 11(a).
(a) (b)
Figure 11. Two selection modes: (a) circle the region of influence and (b) click on the
region.
To perform skeleton based deformation, the user draws the target stroke on the screen
and the system automatically deforms the selected part using a warping algorithm [23]
so its skeleton matches the user drawn skeleton as shown in Figure 1(f). The source
stroke in this case is the skeleton drawn by the user during modeling. A smoothing
process as mentioned in Section 3.1.2 can be applied to the edge of the selection to
avoid sharp discontinuity in the deformed model.
A contour-based deformation is also done by specifying a set of source and target
strokes; in this case, the source stroke is the contour of the selection. Instead of
26
(a) (b) (c) (d)
Figure 16. Illustration of key-framing. (a) Original model. (b) Specify target stroke at
the key-frame. (c) Resulting animation sequence. (d) Illustration of correct
interpolation achieved by specifying motion stroke. Linear interpolation fails to
capture the desired deformation that is correct to most people, and with the guidance
of motion stroke, the interpolated strokes looks more natural.
(a) (b) (c) (d)
Figure 17: Illustration of using motion stroke to: (a-b) utilize pressure information in
the motion stroke to control the rate of the animation; (c-d) add additional control
over the animation time interval with multiple motion strokes.
3.3.2 Motion Stroke
The Motion Stroke concept comes from a common expression found in many comic
strips that are trying to show the spatial relationship between parts at different times.
The use of motion stroke in the system serves two purposes: 1) to help the system
perform interpolation of deformation strokes correctly, and 2) to give the user the
facility to indicate the rate of the movement. Figure 16(d) shows the motion stroke
concept used to generate correct interpolated strokes. The user draws the motion
stroke after specifying the deformation target stroke. The shape of the motion stroke
28
4 Results
Our system was implemented on an Intel Pentium4 2.4GHz machine, with 1GB of
RAM and a nVidia Ti4600 graphics card. The interface of the proposed system is
illustrated in the accompanying video. In addition, we also illustrated how to generate,
deform and animate models using the proposed system in the video. For all test
examples, the construction time is taken in few seconds, so that the proposed
approaches are suitable as an interactive tool for modeling and animation. The
capabilities of our system are sufficient enough to construct a simple 3D object and its
deformations for animation.
The experimental modeling results shown in this paper are very pleasing. Emphasize
once again that our goal is not to write a compute vision algorithm, but to introduce a
practical and easily understood-and-controlled sketch-based modeling and animation
approach, and then tune the constants to make it work well. In Figure 18, we
deformed the tree frog example to generate different poses. Figure 19 shows a
sequence of deformation operations used to deform a pig model. Its’ ears are 
deformed in an exaggerated style easily using skeleton-based or contour-based
deformation. Figure 20 shows the user interface to perform key-framing and the
motion stroke to manipulate and animate the m&m man model. More details can be
viewed in the video. Figure 21 shows an interesting animation result. Get a still frame
from the animation My Neighbor Totoro as a reference image, using our system,
modeling some objects such as trees, flag, kid’s leg, Totoro’s ears in this frame and 
then animating it. Please see the accompanying video for the actual deformation and
animation results.
30
and animation. The system is easy to use and reasonably fast. On the interactive point
of view, the system uses pen pressure, natural stroke metaphors to the user, and fine
details edition thanks to the internal strokes. However, this system is far from
complete as a full-featured 3D modeling solution it lacks many of the fundamental
tools found in most software packages. For example: cutting and erasing unwanted
parts. The only way to “edit” the model is by redrawing the entire set of strokes to
rebuild a model. There are a lot of possibilities for future enhancements in various
areas. For example, automatic stroke type recognition is a hard to solve problem, but
it can make the user interface completely stroke-based and avoiding the need for
buttons or any selection process.
Acknowledgements
This work is supported in part by National Science Council, Taiwan, Republic of
China under contract No. 95-2221-E-006-368, and also is supported in part by
Industrial Technology Research Institute, South, Tainan under contract No.
B200-96CD3
References
[1] IGARASHI T., MATSUOKA S. AND TANAKA H. Teddy: a sketching
interface for 3d freeform design. In Proceedings of ACM SIGGRAPH, pp.
409–416, 1999.
[2] ARAUJO B. AND JORGE J. Blobmaker: Free-form modeling with variational
implicit surfaces. In Proc. of the 12th Portuguese Computer Graphics Meeting,
17–26, 2003.
[3] Karpenko O. AND Hughes J. F. SmoothSketch 3D free-form shapes from
complex sketches. ACM Transactions on Graphics, Vol. 25, No. 3 (SIGGRAPH
32
[12] KHO Y. AND GARLAND M.:Sketching mesh deformations. In SI3D ’05: 
Proceedings of the 2005 symposium on Interactive 3D graphics and games,
ACM Press, New York, NY, USA, pp. 147–154, 2005.
[13] OWADA S., NIELSEN F., NAKAZAWA K. AND IGARASHI T.:A Sketching
Interface for Modeling the Internal Structures of 3D Shapes. Proceedings of 3rd
International Symposium on Smart Graphics, Lecture Notes in Computer
Science, Springer, Heidelberg, Germany, July 2-4, 2003, pp.49-57.
[14] ALEXA A., GAILDRAT V. AND BARTHE L. Interactive modeling from
sketches using spherical implicit function. In Proceedings of AFRIGRAPH 2004,
pp. 25-34, 2004.
[15] DRAPER G. M. AND EGBERT P. K.: A gestural interface to free-form
deformation. In Graphics Interface, A K Peters, CIPS, Canadian
Human-Computer Commnication Society, pp.113–120, 2003.
[16] Nealen A., Sorkine O., Alexa M. AND Cohen-Or D.: A sketch-based interface
for detail-preserving mesh editing. ACM Trans. Graph. 24, 3, pp. 1142–1147,
2005.
[17] DAVIS J., AGRAWALA M., CHUANG E., POPOVIC Z. AND
SALESIN D.:A sketching interface for articulated figure animation. In
SCA’03: Proceedings of the 2003 ACM SIGGRAPH/Eurographics 
symposium on Computer animation, Eurographics Association,
Aire-la-Ville, Switzerland, Switzerland, pp. 320–328, 2003.
[18] Matthew Thorne and David Burke and Michiel van de Panne. Motion doodles:
an interface for sketching character motion, ACM Trans. Graph., Vol. 23, No. 3,
(SIGGRAPH 2004) pp. 424-431.
[19] LI Y., GLEICHER M., XU Y.-Q. AND SHUM H.-Y.:Stylizing motion with
drawings. In SCA ’03: Proceedings of the 2003 ACM SIGGRAPH/Eurographics
 1
 
中 華 民 國 96年 8月 20 日 
 
 
報告人姓名  李同益 服務機構 
及職稱 
成功大學資訊系 
時間 
會議 
地點 
96. 8/02 ~8/12 
美國  
San Diego, 
CA, USA 
 
本會核定 
補助文號 
 
國科會95 年度計劃 
95-2221-E-006-368-
出席國際會議補助
項目 
 
會議 
名稱 
(中文)  
 
 
(英文) 
2007 ACM國際
電腦圖學年會 
ACM 
SIGGRAPH 
2007 
 
發表 論文  無   
 
 
 
 
 3
最新 CG 市場的走向。本人(計畫主持人)並利用大會開始前一天(8/04)
時間拜訪鄰近 UCSD大學。 
 
三、 具體完成之工作 
本次會議從 8/05 至 8/09，議程十分緊湊，包括 technical program 如
paper，sketches，poster，包羅萬象由淺至深 tutorial course課程，精彩
art gallery，animation show & electronic theater，最酷的 emerging 
technologies與琳琅滿目 CG產品 show。主持人與 2名博士班研究生儘
量去參觀與參與。往往一天下來從 6:30起床，8:30開始上課或參觀，
一直到深夜才拖著疲憊的身軀回到旅館。 
 
論文發表者，主要的還是來自一些 CG Lab重鎮，如：MIT、Stanford、
U.W.、Caltech 、Microsoft Research Asia (MSRA)與 Columbia U.等，
值得一提是今年香港科技大學研究能量大爆發、共發表 6 篇
SIGGRAPH papers表現特別亮眼，反觀國內值得深思。除此之外，大
會也安排眾多 sketch session，提供了 SIGGRAPH遺珠的 paper發表，
雖然是 short paper，但是 paper quality和 paper discussion還是相當精
采。今年因為帶了 2 個博士班學生，相對於過往獨自一個人，能聽到
更多場次的 course note以及 paper session，並能在會場互相討論，使得
這次的行程收穫更為豐富。 
 
 5
Interfaces: Techniques and Applications topic，而這些課程都由筆者的學
生們挑有興趣的部份，各別去聆聽。此外筆者特別去聆聽有關 Practical 
Least-Squares for Computer Graphics course。 
 
今年光是Microsoft Research Asia和香港各大學(香港科技大學, 香港大
學與香港中文大學)，就發表了十多篇的論文，其驚人的產量，更是讓
我們不得不急起直追。而筆者在會後也有跟香港科技大學戴秋蘭教授
研究團隊共進午餐，並了解她們未來可能發展的情況，以及討論是否
能夠跟她們有一些學術上的交流，希望未來能夠有合作的空間。結果
是非常令人振奮，八月底筆者兩位博士班學生將前往該校半年合作明
年 SIGGRAPH 2008 submission。 
 
除了在學術上的參觀之外，每年的 SIGGRAPH 照慣例都會有精采的
Animation Theater 和 Electronic Theater，此外還有許多最新的電影如
Spiderman III片段，並輔以拍攝 CG過程，可以了解如何運用最新 CG
技術於目前 Movie 產業上，是十分珍貴而難得的經驗。當每年看到這
些精采的影片的時候，總是覺得外國在圖學這方面真的是日新月異，
每年的品質都不斷往上提升，相較於台灣的業界，相信可能還有一大
段的距離要追趕。 
 
最後一提是明年開始會有兩次 SIGGRAPH conference，一次在 USA本
 1
 
中 華 民 國 96年 8月 20 日 
 
 
報告人姓名  李同益 服務機構 
及職稱 
成功大學資訊系 
時間 
會議 
地點 
96. 8/02 ~8/12 
美國  
San Diego, 
CA, USA 
 
本會核定 
補助文號 
 
國科會95 年度計劃 
95-2221-E-006-368-
出席國際會議補助
項目 
 
會議 
名稱 
(中文)  
 
 
(英文) 
2007 ACM國際
電腦圖學年會 
ACM 
SIGGRAPH 
2007 
 
發表 論文  無   
 
 
 
 
 3
最新 CG 市場的走向。本人(計畫主持人)並利用大會開始前一天(8/04)
時間拜訪鄰近 UCSD大學。 
 
三、 具體完成之工作 
本次會議從 8/05 至 8/09，議程十分緊湊，包括 technical program 如
paper，sketches，poster，包羅萬象由淺至深 tutorial course課程，精彩
art gallery，animation show & electronic theater，最酷的 emerging 
technologies與琳琅滿目 CG產品 show。主持人與 2名博士班研究生儘
量去參觀與參與。往往一天下來從 6:30起床，8:30開始上課或參觀，
一直到深夜才拖著疲憊的身軀回到旅館。 
 
論文發表者，主要的還是來自一些 CG Lab重鎮，如：MIT、Stanford、
U.W.、Caltech 、Microsoft Research Asia (MSRA)與 Columbia U.等，
值得一提是今年香港科技大學研究能量大爆發、共發表 6 篇
SIGGRAPH papers表現特別亮眼，反觀國內值得深思。除此之外，大
會也安排眾多 sketch session，提供了 SIGGRAPH遺珠的 paper發表，
雖然是 short paper，但是 paper quality和 paper discussion還是相當精
采。今年因為帶了 2 個博士班學生，相對於過往獨自一個人，能聽到
更多場次的 course note以及 paper session，並能在會場互相討論，使得
這次的行程收穫更為豐富。 
 
 5
Interfaces: Techniques and Applications topic，而這些課程都由筆者的學
生們挑有興趣的部份，各別去聆聽。此外筆者特別去聆聽有關 Practical 
Least-Squares for Computer Graphics course。 
 
今年光是Microsoft Research Asia和香港各大學(香港科技大學, 香港大
學與香港中文大學)，就發表了十多篇的論文，其驚人的產量，更是讓
我們不得不急起直追。而筆者在會後也有跟香港科技大學戴秋蘭教授
研究團隊共進午餐，並了解她們未來可能發展的情況，以及討論是否
能夠跟她們有一些學術上的交流，希望未來能夠有合作的空間。結果
是非常令人振奮，八月底筆者兩位博士班學生將前往該校半年合作明
年 SIGGRAPH 2008 submission。 
 
除了在學術上的參觀之外，每年的 SIGGRAPH 照慣例都會有精采的
Animation Theater 和 Electronic Theater，此外還有許多最新的電影如
Spiderman III片段，並輔以拍攝 CG過程，可以了解如何運用最新 CG
技術於目前 Movie 產業上，是十分珍貴而難得的經驗。當每年看到這
些精采的影片的時候，總是覺得外國在圖學這方面真的是日新月異，
每年的品質都不斷往上提升，相較於台灣的業界，相信可能還有一大
段的距離要追趕。 
 
最後一提是明年開始會有兩次 SIGGRAPH conference，一次在 USA本
