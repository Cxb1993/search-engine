 1 
 
行政院國家科學委員會補助專題研究計畫 
□期中進度報告 
期末報告 
 
具機密性、匿名性與公平保護之可否認驗證協定的改良研究 
 
 
計畫類別：個別型計畫   □整合型計畫 
計畫編號：NSC 100-2221-E-032 -039 - 
執行期間： 100年 8月 1日至 101年 7月 31日 
 
執行機構及系所：淡江大學資訊工程系 
 
計畫主持人：黃心嘉 
共同主持人： 
計畫參與人員： 游政翰、李彥賜、蔡泓志 淡江大學資工系 研究生 
 江雅筑、張語新 淡江大學資工系 大學生 
成果報告類型(依經費核定清單規定繳交)：精簡報告  □完整報告 
 
 
本計畫除繳交成果報告外，另含下列出國報告，共 ___ 份： 
□移地研究心得報告 
□出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
 
中   華   民   國 100 年 9月 10日 
 3 
[2-9] are proposed.  Those protocols are classified into two classes.  One class is the interactive DAPs [2-6] 
and one class is the non-interactive DAPs [7-9].  The non-interactive DAPs are more efficient than the 
interactive DAPs for less communication cost. 
The deniability of DAPs is based on the fact that the receivers have the same ability as the senders to 
produce the authenticator.  If a malicious receiver intends to frame up the sender, then the sender cannot 
prove his/her innocence.  To solve this problem, Hwang and Ma [10] proposed the concept of sender 
protection for the non-interactive DAP.  By the sender protection, the sender can show that the message and 
authenticator are actually sent from him/her.  Moreover, Hwang and Ma [11] also proposed a non-interactive 
DAP providing sender anonymity and protection to protect both senders’ identities and innocence.  Hwang 
and Chao [12] proposed their DAP with sender anonymity and protection to improve the efficiency of Hwang 
and Ma’s [11] protocol.  However, those DAPs [10-12] provide only sender protection.  The innocent 
receivers still suffered some false incrimination from senders.  To protect the receivers, Hwang and Chao [13] 
proposed an interactive DAP providing anonymity and fair protection to protect both senders’ and receivers’ 
benefits and identities.  However, their interactive manner makes the expensive communication cost. 
The message confidentiality is important for the DAPs [11-13] providing anonymity, but those DAPs 
[11-13] that do not provide the message confidentiality for the transmitted messages are sent in plaintexts.  
The message may contain some secret data and some sensitive information related to the senders’ and 
receivers’ identities.  The sensitive identity information may damage the anonymity protection provided by 
those DAPs [11-13].  Moreover, the release of the secret data may damage the senders’ or receivers’ benefits.  
Therefore, the message confidentiality is important for the DAPs [11-13] providing sender/receiver anonymity.  
Moreover, two interactive DAPs [14, 15] also notice the importance of the message confidentiality for 
interactive DAPs. 
Our contribution 
To efficiently provide the message confidentiality, Hwang and Sung [16] first proposed the promise of 
signcryption scheme based on the Zheng’s [17] signcryption scheme and Nguyen’s promised of Schnorr and 
Schnorr-like signature schemes [18].  By utilizing the promise of signcryption, they proposed their efficient 
non-interactive DAP-CASP providing anonymity and sender protection, and message confidentiality.  
Moreover, by utilizing the DAP-CASP and Kudla’s non-interactive designated verifier proof scheme [19], the 
first non-interactive DAP-CAFP [20] is proposed to provide anonymity and fair protection, and message 
confidentiality. 
Those DAPs [11-13, 16, 20] provide the (sender) anonymity based on the assumption that both the sender 
and receiver know one another in advance.  However, this assumption is impractical.  The sender is an 
active one during the DAP, so the sender has to determine who the intended receiver is.  The assumption that 
senders know the intended receiver is practical.  On the other hand, the intended receiver is usually passive; 
it is impractical to assume that the receiver knows the sender’s identity.  Moreover, the DAP-CASP and 
DAP-CAFP provide indistinguishable security against chosen plaintext attacks (IND-CPA for short).  It is 
better to provide message confidentiality satisfying indistinguishable security against adaptively chosen 
ciphertext attacks (IND-CCA2 for short).  To remove the assumption and enhance the message 
confidentiality, our non-interactive DAP providing anonymity, fair protection, and IND-CCA2 message 
confidentiality is proposed. 
三、文獻探討 
The Schnorr signature scheme [21] and its promise [18], the non-interactive designated verifier scheme 
 5 
Step 2: Compute h= H2(c, T, M, m, , yB, yA). 
Step 3: Check whether or not h= H2(c, T, M, m, , yB, yA).  If h= H2(c, T, M, m, , yB, yA), then the 
designated verifier is convinced that the massage m is really sent by the signer. 
The underlying security hard problem is the decisional Diffie-Hellman problem (DDHP). 
DDHP: Let G be a group with prime order q and g be a random generator of G.  The DDHP is to determine 
whether or not g
c
= g
ab
 by giving the random elements g
a
, g
b
, and g
c
 in G. 
四、研究方法 
By utilizing Hwang and Sung’s promise of signcryption and the non-interactive designated verifier proof 
scheme, we proposed our non-interactive fair deniable authentication protocol with indistinguishable message 
confidentiality against adaptive chosen ciphertext attacks and anonymity. 
五、結果與討論 
There are three players in our FDAP-ICA: Sender A, Intended Receiver B, and Judge J.  Our FDAP-ICA 
is composed of three phases: Setup, Authentication, and Verification phases.  In Setup phase, the system 
parameters and functions are published.  The promised signcryptext and the transferring evidence are 
produced by A and sent to B in authentication phase.  After receiving the promised signcryptext and evidence, 
B validates the received in a deniable way that B cannot convince the other the received being from A.  
Finally, B proves that the message is really transferred from A to J in verification phase.  Those phases are 
described, respectively. 
Setup Phase 
First of all, two large public primes p and q with p= 2q+1 are chosen.  The parameter g is an element 
with order q in Zp
*
 while the multiplicative cyclic-subgroup G= {g
1
 mod p, g
2
 mod p, g
3
 mod p, … , gq mod p} 
with order q in Zp
*
 is also published.  The symmetric key encryption function Ek(m) and decryption function 
Dk(m) are published as well, where m is the message and k is the session key.  There are seven one-way hash 
functions: Hq1, Hq2, Hl1, Hl2, HG1, HG2, and Hp.  Hq1 and Hq2 map from {0, 1}
*
 to Zq
*
, HG1 and HG2 map from {0, 
1}
*
 to group G, Hp maps from {0, 1}
*
 to Zp
*
, and Hl1 and Hl2 map from {0, 1}
*
 to {0, 1}
l
, where l is the bit 
length of a binary string.  Each user i has his/her own randomly-chosen private key xi from Zq
*
 and the public 
key yi= g
xi mod p. 
Authentication Phase 
There are two algorithms in the authentication phase: Signcryption and Designcryption.  By using 
Signcryption algorithm, A generates the promised signcryptext (C, V, S) and the evidence  with the 
corresponding proof (w, r, h, d).  By using Designcryption algorithm, B decrypts and verifies the promised 
signcryptext (C, V, S) and validates the evidence  with the help of the proof (w, r, h, d).  These two 
algorithms are described below. 
Signcryption Algorithm 
Suppose that Sender A wants to generate the promised signcryptext (C, V, S) and the evidence  with the 
proof (w, r, h, d) on the message m.  The sender performs the following procedure. 
Step 1: Choose two random integers  and k Zq
*
.
 
Step 2: Compute = g mod p, V= Hq1(g
k
 mod p||HG1(m)||||yB), s= k+ VxA mod q, S= g
s
 mod p, K= Hl1((yB)
s
 
mod p, S), and x= Hp(yB

 mod p, ). 
Step 3: Encrypt the message m by performing C= EK(m||||yAx||Hl2(yB

 mod p, m, yA, )). 
Step 4: Compute the evidence = HG2(m||S||K||)
xA mod p. 
Step 5: Choose three random integers w, r, and t Zq
*
. 
 7 
Security Proofs and Analysis 
Our FDAP-ICA satisfies six security properties: Message confidentiality, intended receiver, sender 
anonymity, receiver anonymity, deniability, and fair protections.  First, the indistinguishable game is defined 
for message confidentiality. 
Definition 1 (Indistinguishable Security against Adaptively Chosen Ciphertext Attacks) 
Our FDAP-ICA satisfies indistinguishable security against adaptively chosen ciphertext attacks, if no 
polynomial-time adversary A wins the following indistinguishable game with 1/2+, where the advantage  is 
non-negligible. 
Indistinguishable Game 
This game contains two players, Challenger C and adversary A and consists of three phases, Setup, 
Collecting, and Challenging and Guessing phases.  In Setup phase, Challenger C constructs some public 
parameters and some oracles described below. 
Decryption Oracle D: On the query consisting of the promised signcryptext, evidence and the proof, the 
decryption oracle D may return the corresponding message m. 
Hash Oracle HG1: On the message m, HG1 first checks whether or not m is found in its local list.  If m is 
queried, HG1 returns the same HG1(m) found in its local list; otherwise, HG1 returns a random values as HG1(m) 
and stores (m, HG1(m)) in its local list. 
Hash Oracle HG2: On the query (m||S||K||), HG2 first checks whether or not (m||S||K||) is found in its local list.  
If (m||S||K||) exists in its local list, HG2 returns the same HG2(m||S||K||) according to its local list; otherwise, 
HG2 returns a random values as HG2(m||S||K||) and stores ((m||S||K||), HG2(m||S||K||)) in its local list.  
Hash Oracle Hl1: On the query (S
xB mod p, S), Hl1 looks it up in its local list.  If ((S
xB mod p, S), K) is found, 
Hl1 returns K; otherwise, a random chosen value K is returned and ((S
xB mod p, S), K) is added into the local 
list. 
Hash Oracle Hl2: On the input (yB

 mod p, m, yA, ), Hl2 looks it up in its local list.  If ((yB

 mod p, m, yA, ), 
Hl -value) is found, Hl2 returns Hl -value; otherwise, a randomly chosen value Hl -value is returned and ((yB

 
mod p, m, yA, ), Hl -value) is stored. 
Hash Oracle Hq1: On the query (SyA
-V
 mod p||HG1(m)||||yB), Hq1 looks it up in the local list.  If ((SyA
-V
 mod 
p||HG1(m)||||yB), V) is found, Hq1 returns V; otherwise, a random chosen value V is returned and ((SyA
-V
 mod 
p||HG1(m)||||yB), V) is added into the list. 
Hash Oracle Hq2: On the query (c||T||M||m||||), Hq2 looks it up in its local list.  If ((c||T||M||m||||), h) is 
found, h is returned; otherwise, a randomly chosen value h is returned and ((c||T||M||m||||), h) is stored in the 
local list. 
Setup Phase 
In Setup phase, C generates system parameters, builds the public hash functions, and public and private 
keys of A and B.  Then C sends A system parameters, the public hash functions, and the public keys of A and 
B. 
Collecting Phase 
A is allowed to collect some promised signcryptext (C, V, S) and evidence  with proof (w, r, h, d) on 
message m in two different ways.  One way is that A randomly chooses a message m and obtains the 
corresponding promised signcryptext (C, V, S) and evidence  with proof (w, r, h, d).  In this way, the 
challenger C utilizes the Signcryption algorithm to generate the promised signcryptext (C, V, S) and evidence 
 with proof (w, r, h, d) on the message m.  One way is that A randomly chooses the promised signcryptext 
 9 
Otherwise, write the new record ((m||S||K||),  xA
-1 
mod p) into HG2’s local list  
Step 8: Compute T= g
d
yA
(h+w)
 mod p, and M= HG2(m||S||K||)
d(h+w) mod p= (xA
-1
mod p)
d(h+w) mod p. 
Step 9: Check whether or not any record in Hq2’s local list is matched with ((?||T||M||m||||), h) with the 
partial value (?||T||M||m||||).  If any record with different value h is found, then return “error”.  If 
partially matched record, write ((?||T||M||m||||), h) into in Hq2’s local list. 
The “error” message means that the query ((C, V, S), , (w, r, h, d)) is illegal. 
Challenging and Guessing Phase 
In this phase, A sends two different messages m0 and m1 to C.  C chooses a random bit e{0, 1}, 
signcrypts me, and sends the corresponding ((C', V', S'), ', (w', r', h', d')) to A by the following procedure. 
Step 1: Choose ' in Zq
*
 randomly and compute '= g' mod p. 
Step 2: Choose V' in Zq
*
 randomly, set S'= g
a
 mod p, and compute g
k
= S'yA
-V'
 mod p. 
Step 3: Compute HG1(me) using oracle HG1.  Then check whether or not the local list of Hq1 contains the 
record ((g
k
 mod p||HG1(me)||'||yB), V').  If the record ((g
k
 mod p||HG1(me)||'||yB), V') exists, then go 
back to Step 1; otherwise, write the record ((g
k
 mod p||HG1(me)||'||yB), V') into the local list of Hq1.  
In other word, V'=Hq1(g
k
 mod p||HG1(me)||'||yB). 
Step 4: Compute K'= Hl1(g
c
 mod p, S') using Oracle Hl1 and x'= Hp(yB
'
 mod p, ') using Oracle Hp, and 
obtain the signcryptext C'= EK'(me||'||yAx'||Hl2(yB
'
 mod p, me, yA, ')). 
Step 5: Compute '= HG2(me||S'||K'||')
xA mod p. 
Step 6: Choose three random integers w', r', and t' in Zq
*
, compute c'= 'w'(yB
'
)
r'
 mod p, T'=g
t'
 mod p, M'= 
HG2(me||S'||K'||')
t'
 mod p, h'= Hq2(c'||T'||M'||me||'||'), and d'= t'–xA(h' + w') mod q. 
Step 7: Send the challenge ((C', V', S'), ', (w', r', h', d')) to A. 
After receiving the challenge, A is still allowed to query C for other messages except m0 and m1.  If A 
outputs a correct answer e' and e= e', C outputs “gc gab (mod p).”  If A outputs an incorrect answer e' and e 
e', C outputs “gc mod p gab mod p.”  If A cannot answer after the polynomial time-bound of A, C outputs “gc 
mod p gab mod p.” 
Probability Analysis of C Solving DDHP 
Let Pr[C_S] and Pr[C_F] be the successful and failure probability of C on solving DDHP, respectively.  
Then Pr[C_F]= 1- Pr[C_S].  The successful/failure probability analysis of C is consisted of the following four 
cases. 
Case 1: g
c  gab (mod p) and e'= e. 
Since the probability of A winning the game is Pr[e'= e]= 1/2+, then the successful probability of C 
solving DDHP is Pr[g
c  gab (mod p) and e'= e] =  in this case. 
Case 2: g
c  gab (mod p) and e'  e. 
Since the probability of A losing the game is Pr[e' e]= 1/2-, then the failure probability of C solving 
DDHP is Pr[g
c  gab (mod p) and e'  e] = . 
Case 3: g
c 
(mod p)  gab (mod p) and K is correct. 
The encryption key K is correct due to the collision of hash function Hl1.   Since Hl1 is assumed to be an 
ideal hash function, the collision probability is 1/2
l
.   As a result, the probability of this case is Pr[g
c 
mod p  
g
ab
 mod p, K is correct, and e' = e]= (1 – 1/q)  while Pr[gc (mod p)  gab (mod p), K is correct, and e'  
 11 
failure probability is . 
Case 2: g
c 
mod p  gab mod p but hash collision occurs. 
If A returns "valid" but g
c 
mod p  gab mod p, then DDHP-A fails to solve DDHP.  Since Hl1 is an ideal 
hash function, the collision probability is 1/2
l
.  As a result, the failure probability of this case is (1- ) .  If 
A returns "invalid" and g
c 
mod p  gab mod p, then DDHP-A solves the DDHP successfully.  Therefore, the 
successful probability of this case is (1- ) (1-). 
Case 3: g
c 
mod p
  gab mod p and no hash collision occurs. 
In this case, DDHP-A gives an incorrect challenge to Algorithm A.  If A returns "valid" but g
c 
mod p  
g
ab
 mod p, then DDHP-A fails to solve DDHP.  The failure probability of this case is (1- ) (1-).  If 
A returns "invalid" and g
c 
mod p gab mod p, then DDHP-A successfully solves the DDHP.  Therefore, the 
successful probability of this case is (1- ) . 
According to the above probability analysis, the failure probability of DDHP-A solving DDHP is 
+(1-1/q) +(1-1/q) (1-)< +(1/2l)+(1-) for <1 and (1–)<1.  Since both q and 2l are very large 
and  is non-negligible, the failure probability is negligible.  In other words, the successful probability 
solving DDHP is non-negligible.  However, the DDHP is believed to be a hard problem, so no one is able to 
validate the ((C, V, S), , (w, r, h, d)), besides the sender and the intended receiver.  Therefore, our protocol 
satisfies the intended receiver property. 
Lemma 1 (Promise Property) 
The promise of Schnorr signature (V, S) on message m provides promise property in our protocol, where 
S = g
s
 (mod p). 
Proof 
Everyone can forge the promise of Schnorr signature (V, S) on any message m' by processing the 
following steps: 
Step 1: Choose k' in Zq
*
 and ' in Zp
*
 randomly. 
Step 2: Compute V'=Hq1(g
k'
 mod p||HG1(m')||'||yB) and S'= g
k'
yA
V' 
mod p. 
Since S'= g
k'
yA
V' 
mod p, the equation V'=Hq1(S'yA
-V'
 mod p||HG1(m')||'||yB) holds. 
Sender Anonymity 
A protocol satisfies sender anonymity against adaptively chosen message attacks if no probabilistic 
polynomial-time algorithm wins the following sender anonymity game with non-negligible advantage more 
than 1/2. 
Sender Anonymity Game 
 13 
otherwise  is a random integer chosen from Zq
*
-{1}. 
Step 2: Compute = g mod p, V= Hq1(g
k
 mod p||HG1(m)||||yB), x= Hp(yB

 mod p, ), S= ga mod p, K= 
Hl1((g
c
)
 
mod p, g
a
 mod p), C= EK(m||||yIx||Hl2(yB

 mod p, m, yI, )), and = HG2(m||g
a
 mod 
p||K||)xI mod p. 
Step 3: Choose three random integers w, r, and tZq
*
. 
Step 4: Compute c= w(yB
 
)
r
 mod p, T= g
t
 mod p, M= HG2(m||g
a
 mod p||K||)t mod p, h= Hq2(c||T||M||m||||), 
and d= t– xI(h+ w) mod q. 
Step 5: Send the challenge ((C, V, S), , (w, r, h, d)) to A. 
After receiving the challenge, A is still allowed to query C for other promised signcryptexts and the 
evidences with the proofs on some queried message except the challenging message.  Finally, A guesses who 
the sender is.  If A guesses correctly, C outputs “gc gab (mod p);” otherwise, C outputs “gc mod p gab mod 
p.”  If A cannot guess after its polynomial time-bound, C outputs “gc mod p gab mod p.” 
Probability Analysis of C Solving DDHP 
The failure probability Pr[C_F] of C solving DDHP is analyzed below.  Two cases cause the failure for 
challenger C to solve DDHP.  One case is that g
c  gab (mod p) but the adversary guesses incorrectly.  
Another case is that g
c
 mod p gab mod p, the collision of the hash function Hl1 occurs, and the adversary 
gives the correct guess.  The probability of the first case is (1/2-)/q since the losing probability of A is 1/2-.  
The probability of the second case is ((q-1)/q)(1/2
l
)(1/2+).  The failure probability Pr[C_F] of C to solve 
DDHP is (1/2-)/q +((q-1)/q)(1/2l)(1/2+)< 1/q+ (1/2l).  The sum of 1/q + (1/2l) is negligible for both q and 2l 
are very large.  Therefore, the failure probability Pr[C_F] is negligible while the successful probability 
solving DDHP is non-negligible.  Fortunately, the DDHP is believed to be very hard, so our protocol satisfies 
the sender anonymity against the adaptively chosen message attacks. 
Receiver Anonymity 
A protocol satisfies receiver anonymity against adaptively chosen message attacks if no probabilistic 
polynomial-time algorithm wins the following receiver anonymity game with non-negligible advantage more 
than 1/2. 
Receiver Anonymity Game 
This game contains two players: The adversary and the challenger.  This game consists of three phases, 
Setup, Collecting and Guessing phases.  In Setup phase, the challenger constructs the system parameters, the 
hash oracles, the encryption oracle, and one sender’s and two receivers’ public keys.  The adversary is 
allowed to know those public keys and public parameters and functions. 
In Collecting phase, the adversary chooses some legal messages and queries the encryption oracle to 
obtain the promised signcryptexts and the evidences with the proofs that are from the sender sending to 
anyone of the two receivers.  Finally, the adversary sends the challenger one chosen message. 
In Guessing phase, the challenger randomly selects one receiver and generates the challenge that is the 
promised signcryptext and the evidence with the proof on the received message for the chosen receiver.  
Finally, the adversary guesses about who the receiver is. 
Theorem 4 (Receiver Anonymity) 
Except Sender A and the intended receiver B, no one wins the receiver anonymity game with 
non-negligible advantage against adaptively chosen message attacks based on the hardness of DDHP in the 
random oracle model. 
Proof 
 15 
gives the right guess.  The probability of the first case is (1/2-)/q since the losing probability of A is 1/2-.  
The probability of the second case is ((q-1)/q)(1/2
l
)(1/2+).  The failure probability Pr[C_F] of C on solving 
DDHP is (1/2-)/q +((q-1)/q)(1/2l)(1/2+)< 1/q + 1/2l.  The value of 1/q + 1/2l is negligible for both q and 2l 
are much larger than 1.  Therefore, the failure probability Pr[C_F] is also negligible while the successful 
probability solving DDHP is non-negligible.  The DDHP is believed to be very hard, so our protocol 
provides receiver anonymity against the adaptively chosen message attacks. 
Theorem 5 (Deniability) 
Our FDAP-ICA satisfies the deniability property.  Namely, our FDAP-ICA fulfills the property that both 
the intended receiver B and the sender A can generate the promised signcryptext (C, V, S) and the evidence  
with the proof (w, r, h, d). 
Proof 
Lemma 1 shows that B can generates the promise (V', S') on a message m', and Theorem 1 shows that 
only B can designcrypt the ((C, V, S), , (w, r, h, d)).  Consequently, the intended receiver B can generate the 
((C', V', S'), ', (w', r', h', d')) as follows: 
Step 1: Choose k' in Zq
*
 and ' in Zp
*
 randomly. 
Step 2: Compute HG1(m'), V'= Hq1(g
k'
 mod p||HG1(m')||'||yB), S'= g
k'
yA
V'
 mod p, DH'= 'xB mod p, K'= Hl1(S'
xB 
mod p), and x'= Hp(DH'). 
Step 3: Compute C'= EK'(m'||'||yAx'||Hl2(DH', m', yA, ')). 
Step 4: Choose ' Zp
*
, d', , and  Zq
*
 randomly. 
Step 5: Compute c'= ' mod p, T'= gd'yA

 mod p, M'= HG2(m'||S'||K'||')
d'' mod p, h'= 
Hq2(c'||T'||M'||m'||'||'), w'= ( – h') mod q, and r'= (- w')xB
-1
 mod q. 
Therefore, the legal ((C', V', S'), ', (w', r', h', d')) can be generated by both the sender A and the intended 
receiver B.  No one other than A and B can designcrypt the ((C', V', S'), ', (w', r', h', d')).  Therefore, A can 
deny the fact that ((C', V', S'), ', (w', r', h', d')) is generated by himself/herself.  Moreover, the intended 
receiver B cannot convince the third party that the message is sent from A. 
Fair Protections 
Fair protections consist of two parts: Sender protection and receiver protection.  By the sender 
protection, Sender A can claim and prove that the message is actually sent by him/her.  On the other hand, if 
A denies that the message is sent from him/her, B has the evidence to show that the message is actually sent by 
A with the help of the trusted Judge J. 
Theorem 6 (Sender Protections) 
The sender protection of our protocol is based on the unforgeability of Schnorr signature scheme. 
Proof 
Sender A releases the secret value s to prove that he/she is the actual sender of the promise of signcryptext 
(C, V, S).  After releasing the secret value s, everyone can recover the session key K= Hl1((yB)
s
 mod p, S) and 
(m||||yAx||Hl2(yB

 mod p, m, yA, )), and validate (m, V, s) by the equation V= Hq1(g
syA
-V
 mod 
p||HG1(m)||||yB).  Since (V, s) is the Schnorr signature on the message (m||||yAx||Hl2(yB

 mod p, m, yA,)) in 
essence, (V, s) is also existentially unforgeable based on DLP [23].  Therefore, A can convince anyone that 
he/she is the actually signer. 
Theorem 7 (Receiver Protections) 
The receiver protection of our protocol is based on the undeniability of the Chaum and van Antwerpen’s 
undeniable signature scheme. 
 17 
9, pp. 1315-1323, 2008. 
[15] E.-J. Yoon and K.-Y. Yoo, “Secure Deniable Authentication Protocol Based on ElGamal Cryptography,” 
Networks, Vol. 45, pp. 193-194, 2005. 
[16] S.-J. Hwang and Y.-H. Sung, “Confidential Deniable Authentication Using Promised Signcryption,” 
Journal of Systems and Software, Vol. 84, Issue 11, pp. 1652-1659, 2011. 
[17] Y. Zheng, “Digital Signcryption or How to Achieve Cost(Signature & Encryption) << Cost(Signature) + 
Cost(encryption),” Advances in Cryptology — CRYPTO'97, LNCS 1294, New York: Springer-Verlag, 
1997, pp. 165-179. 
[18] K. Nguyen, “Asymmetric Concurrent Signatures,” in Proceedings of Information and Communications 
Security Conference (ICICS 2005), LNCS 3783, New York: Springer Verlag, 2005, pp. 181-193. 
[19] Caroline J. Kudla, “Special Signature Scheme and Key Agreement Protocols,” Ph.D. dissertation, Royal 
Holloway, University of London, Egham, Surrey, England, 2006. 
[20] Y.-H. Sung, “Deniable Authentication Protocols with Confidentiality, Anonymity, and Senders’ and 
Receivers’ Protections,” M.S. thesis, University of Tamkang, Taipei country, Taiwan R.O.C., 2010. 
[21] C. P. Schnorr, “Efficient Identification and Signatures for Smart Cards,” Advances in Cryptology: 
Proceedings of CRYPTO’ 89, LNCS 435, G. Brassard, Ed., New York: Springer Verlag, 1990, pp. 
239-252. 
[22] W. Diffie and M. E. Hellman, “New Directions in Cryptography,” IEEE Transactions on Information 
Theory, Vol. 22, Issue 6, pp. 644-654, Nov. 1976. 
[23] D. Pointcheval and J. Stern, “Security Arguments for Digital Signatures and Blind Signatures*,” Journal 
of Cryptology, Vol. 13, Issue 3, pp.361-396, 2000. 
[24] D. Chaum and H. van Antwerpen, “Undeniable Signatures,” Advances in Cryptology: Proceedings of 
CRYPTO’ 89, LNCS 435, G. Brassard, Ed., New York: Springer Verlag, 1990, pp. 212-216. 
[25] G. Ateniese, “Efficient Verifiable Encryption (and Fair Exchange) of Digital Signature,” in Proc. of 
ACM Conference on Computer and Communications Security (CCS’ 99), ACM Press, New York, U.S.A., 
1999, pp. 138-146. 
100 年度專題研究計畫研究成果彙整表 
計畫主持人：黃心嘉 計畫編號：100-2221-E-032-039- 
計畫名稱：具機密性、匿名性與公平保護之可否認驗證協定的改良研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
