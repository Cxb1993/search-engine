traffic status, so that the end nodes can slow down or speed up the sending rate according
to the message received. For an implicit method, the end nodes adjust their sending speed
according to the behavior of the network traffic. For example, if there are some packets
lost during transmission (load transfer), the end node can detect it and adjust the sending
rate.
In general, two fixed threshold methods are used for load balancing–single threshold
level algorithms and double threshold levels algorithms - and the load threshold levels for
these algorithms are fixed and predefined [1, 8]. In order to smooth the threshold levels,
in our previous work [3], I use fuzzy logic control method. Fuzzy logic control is a
natural extension to the two threshold level approaches. It improves the performance
without pre-defining the threshold values. Fuzzy logic approach can deal more efficiently
with a system’s changes for balancing loads and can improve system’s performance.
However, it is possible that network congestion happens during the process of load
transfer because a sender may send large amount of loads to receivers and these loads
may cause the congestion of the network links. Therefore, how to reduce the traffic in
network systems is an important issue. There are some network congestion control
algorithms [2, 4, 7] that use pre-defined thresholds to decide whether the network is
congested. Instead of the pre-defined thresholds that those algorithms use, I propose a
new congestion control method using fuzzy logic concepts for our load balancing
algorithm.
In this project, I discuss an implicit feedback congestion control method during the
process of load balancing. This method is implemented by changing the membership
functions according to packet loss. I explain later how a node’s membership functions are
adjusted according to the network congestion status and therefore result in increase or
decrease of the amount of loads for load transfer.
2. System Model
In this study, I assume that underlying computer networks have a hierarchical structure. I
use the system model as described in our previous work [3]. For example, as shown in
Figure 1, several nodes form a group and each group contains a node called designated
representative (DR), which communicates with the DRs in other peer groups. Group 1
contains three nodes–A.1.1, A.1.2, and A.1.3 and A.1.2 is the DR in this group. Group 2
contains four nodes –A.2.1, A.2.2, A.2.3, and A.2.4 and A.2.2 is the DR of the group.
Group 3 contains four nodes –B.1, B.2, B.3 and B.4 and B.1 is the DR of the group. All
three groups are physical groups. Group 4 is a logical group at the next level of the
3.1 How to Change Membership Functions
The changes of the membership functions are based on the status of the network. The
main purpose of membership function changes is to reduce the drop rate of packets when
network congestion occurs. Of course, the change of membership functions may also be
used to increase the utilization of network links when the network is not congested. There
are two main cases for changing membership functions. I will talk about these two cases
and discuss how the membership functions change.
Case 1: Membership functions change when network is congested
The network is considered as congested when a sender does not get acknowledgements
from receivers or a receiver does not receive all the packets sent by a sender. In order to
reduce the traffic of a network and therefore reduce the drop rate, a sender has to decrease
its heavily loaded and the very heavily loaded regions of its membership functions while
increasing the very lightly loaded and lightly loaded regions, so that the output
probability after applying the fuzzy logic load balancing control to the sender is smaller
than that before the membership functions are changed. Since the areas of heavily loaded
and very heavily loaded regions are smaller than before, the load balancing activities are
reduced as the network traffic becomes heavier. Figure 2 shows how the values of the
coordinates of the functions are changed, so that the lightly loaded region and very lightly
loaded region for the new membership functions are larger than those of the original
membership functions, where a < a’, b < b’, c < c’, d < d’, e < e’, f < f’, g < g’, and h < h’.
For example, the new positions of the coordinates of the membership functions are
increased by multiplying the original positions by 2.
Case 2: Membership functions change when the receiver receives all the packets
I consider the change of membership functions when the network is not congested in this
case. A network is not congested when a receiver receives all the packets from a sender
during a period of time. When a sender gets the reply from a receiver which indicates that
the receiver has received all the packets and the network is not congested, the sender
changes its membership functions to find a larger output probability in order to send more
packets to a lightly-loaded node next time when it needs to execute load balancing
transfer algorithm.
Membership functions are changed by decreasing the lightly loaded region or the
indicates that the network is congested. This decreases the load transfer probability.
Section 3.1 describes the methods for adjusting the membership functions according
to the network congestion status.
4. If the sender gets an acknowledge from the receiver indicating the receiver receives
all the packets, then the sender adjusts its membership functions by increasing the
heavily loaded and very heavily loaded regions and decreasing the very lightly
loaded and lightly loaded regions. This increases the load transfer probability.
5. The sender uses the new membership functions for fuzzy logic load balancing
control when it needs to transfer loads to other nodes in the future.
4. Preliminary Simulation Results and Analysis
4.1 Simulation Environment
Network simulator NS-2 [10] is used for our simulation study. Figure 4 shows the system
used for the simulation. There are three groups in the system with 3 nodes in each group.
Each group represents a local area network. User Datagram Protocol (UDP) [6] is used in
the system. The communication speed for each link is considered to be 5Mb/sec. Jobs
arriving to a node are exponentially distributed. It is assumed that the mean job
inter-arrival rate for each node is λ, the service time for each node is S, and the
utilization for that node is U =λS. I assume that S is equal to 50 time units and the
utilization for all the nodes in the system is less than 1 except for Node 1 in Physical
Group 1 and Node 4 in Physical Group 2, which generate jobs more than what their
queues can store. This forces these nodes to transfer some of their loads to other nodes
when their loads are above the heavily loaded threshold level. Arriving jobs are dropped
when the node’s queue is full.
Figure 4: System Model for Simulation
4.2 Simulation Results
