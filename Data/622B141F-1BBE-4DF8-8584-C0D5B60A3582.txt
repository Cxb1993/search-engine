 2 
 
行政院國家科學委員會專題研究計畫期末報告 
異質無線網路之視訊傳輸技術與應用--子計畫二: 
異質無線網路中視訊轉換編碼之研究 
計畫編號: NSC 98-2221-E-008-062- 
執行期限: 98 年 8 月 1 日 到 99 年 10 月 31 日 
主持人: 林銀議 教授 
計畫參與人員: 李育銘、黃裕傑、江仲豪、林加典、林成、方延能
一、中文摘要 
新一代的 H.264/AVC 不管是壓縮率和影像品
質都明顯優於以往的視訊標準，因此 H.264/AVC
的應用已經普及於各種無線網路及電視廣播及多
媒體裝置。不同網路環境下的傳輸能力皆不相同，
伺服端透過網路以即時的方式傳輸視訊串流於電
腦或手機…等用戶端，如何使視訊串流滿足各種頻
寬要求是一大課題。其中轉換編碼則是關鍵的技
術，其中包括再量化技術(re-quantization)、時域畫
面跳張技術(frame-skipping)、空域降解析度技術
(spatial resolution reduction)。本子計畫針對利用再
量化技術以降低位元速率，並提出轉換編碼技術中
畫面間快速模式決策、多幅參考畫面的移動估計以
及畫面內快速模式決策演算法以降低轉換編碼時
的計算複雜度作一探討，而相關的研究成果已經發
表於知名期刊 (IEEE Trans. CE, Nov. 2009 [1])及
知名國際會議(ICIP 2009 [2]、ISCAS 2010 [3]、PCM 
2009 [4])上。 
關鍵字: 異質無線網路系統、畫面間轉換編碼、畫
面內轉換編碼、H.264/AVC 影像編碼。 
 
 
二、Abstract 
The newest H.264/AVC achieves significantly 
better performance in PSNR and visual quality at the 
same bit-rate compared with prior video coding 
standard. Therefore, applications of H.264/AVC 
become popular and important in multimedia content 
transfer between networks and devices. However, 
because different networks and devices might have 
various channel bandwidths, the coded video bit 
stream has to be converted to different format to meet 
requirements. Transcoding is one key technology and 
there are several schemes such as re-quantization, 
frame-skipping and spatial resolution reduction. This 
project focuses on re-quantization transcoding and 
proposes an efficient inter/intra decision algorithm 
for H.264/AVC video transcoding to reduce 
computation cost while maintaining high coding 
performance.  
Keywords: Heterogeneous wireless network system, 
inter-frame transcoding, intra-frame transcoding, 
H.264/AVC video coding. 
 
 
 4 
 
其實也佔有一定的比例，若將其忽略可能會造成一
定程度的誤差；當原始巨區塊型態為計算複雜較高
的 L2 分割模式時其經重新編碼後之巨區塊型態其
經重新編碼後之巨區塊型態仍為 L2 之分割模式依
舊維持著高比例，因此對於簡化計算複雜度並無太
大的幫助；而當原始巨區塊型態為 I4MB 時其經重
新編碼後之巨區塊型態分佈則較為平均；當原始巨
區塊型態為 I16MB 其經重新編碼後之巨區塊型態
為 L2 及 I4MB 的比例相當低。而編碼區塊樣式也
有相同的情形，就整體而言我們無法從此獲知明確
的巨區塊型態對應，因此接下來將採用其他方法。 
針對畫面間(intermode)模式預測加速演算法探討 
1. 基於零區塊(zero-block)之畫面間區塊模式決策
演算法︰ 
由於重新再量化的關係，使用以 8×8 大小的
編碼區塊樣式來無法明確地分辯影像特性。而我們
利用文獻[5]所提出 4×4 零區塊為單位的快速模式
演算法並加以變化使其可適用於轉換編碼上。而我
們之作法為當原始巨區塊為畫面間模式時，先利用
一目前巨區塊內所取得之所有原始移動向量，並計
算其平均值而成為一個合成向量，利用此合成向量
先進行位移的動作找到其參考巨區塊，再計算目前
巨區塊與參考巨區塊之差餘值絕對誤差和；而當原
始巨區塊為畫面內模式時，因為無原始移動向量資
訊，所以才以與文獻[5]相同之方式直接以與目前
巨區塊對應位置(collocated)上即移動向量為(0,0)
之巨區塊當作其參考巨區塊，並計算其零區塊的個
數。 
【表 2】基於零區塊樣式之區塊分割模式分佈情形 
(a) 原始巨區塊為畫面間模式時之分佈情形 
 Orig_Inter
# of ZB
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
1.67 (0.68, 0.51) 3.73 (1.17, 0.85) 1.91 (1.03, 0.73) 3.17 (1.76, 0.66) 0.01 (0.01, 0.01) 0.00 (0.00, 0.00)
1.72 (1.02, 1.43) 15.87 (4.39, 2.26) 8.77 (4.43, 2.12) 15.47 (6.90, 1.43) 0.09 (0.07, 0.03) 0.00 (0.00, 0.00)
1.50 (1.12, 0.53) 1.62 (0.94, 0.68) 1.10 (0.93, 0.58) 1.39 (1.22, 0.55) 0.00 (0.00, 0.02) 0.00 (0.00, 0.00)
1.48 (0.85, 0.51) 2.29 (0.91, 0.69) 1.41 (0.94, 0.58) 1.99 (1.42, 0.58) 0.01 (0.00, 0.02) 0.00 (0.00, 0.00)
1.28 (1.80, 0.65) 0.89 (1.10, 0.79) 0.72 (0.97, 0.64) 0.71 (0.90, 0.47) 0.00 (0.00, 0.01) 0.00 (0.00, 0.00)
1.48 (1.56, 0.65) 1.34 (1.29, 0.79) 1.00 (1.16, 0.67) 1.06 (1.13, 0.52) 0.00 (0.00, 0.01) 0.00 (0.00, 0.00)
1.03 (2.58, 1.16) 0.63 (1.10, 1.02) 0.52 (0.94, 0.78) 0.35 (0.63, 0.37) 0.00 (0.00, 0.01) 0.00 (0.00, 0.00)
1.21 (2.18, 0.90) 0.79 (1.15, 0.91) 0.59 (0.96, 0.69) 0.52 (0.78, 0.44) 0.00 (0.00, 0.01) 0.00 (0.00, 0.00)
1.04 (2.62, 1.68) 0.45 (0.99, 1.24) 0.34 (0.73, 0.75) 0.17 (0.34, 0.27) 0.00 (0.00, 0.00) 0.00 (0.01, 0.00)
1.18 (2.80, 1.67) 0.61 (1.30, 1.35) 0.50 (0.98, 0.86) 0.29 (0.52, 0.36) 0.00 (0.00, 0.01) 0.00 (0.01, 0.00)
0.94 (2.88, 2.79) 0.39 (0.84, 1.18) 0.28 (0.55, 0.65) 0.09 (0.17, 0.15) 0.00 (0.00, 0.00) 0.01 (0.01, 0.01)
1.02 (2.64, 2.26) 0.39 (0.91, 1.33) 0.32 (0.64, 0.74) 0.12 (0.24, 0.22) 0.00 (0.00, 0.00) 0.00 (0.00, 0.01)
1.05 (3.33, 4.29) 0.27 (0.71, 1.16) 0.15 (0.29, 0.42) 0.03 (0.05, 0.06) 0.00 (0.00, 0.00) 0.01 (0.01, 0.01)
0.97 (3.14, 3.74) 0.39 (1.01, 1.49) 0.24 (0.55, 0.63) 0.05 (0.10, 0.11) 0.00 (0.00, 0.00) 0.01 (0.02, 0.03)
1.44 (3.31, 7.40) 0.28 (0.49, 0.91) 0.09 (0.11, 0.19) 0.00 (0.01, 0.01) 0.00 (0.00, 0.00) 0.02 (0.04, 0.04)
1.07 (3.32, 5.50) 0.26 (0.63, 1.03) 0.12 (0.20, 0.31) 0.01 (0.02, 0.03) 0.00 (0.00, 0.00) 0.01 (0.02, 0.02)
QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36)
5.47 (12.70, 27.76) 0.41 (0.45, 0.77) 0.08 (0.06, 0.12) 0.00 (0.00, 0.00) 0.00 (0.00, 0.00) 0.07 (0.18, 0.17)
Skip 16x16 16x8, 8x16 L2 I4MB I16MB
 
(b) 原始巨區塊為畫面內模式時之分佈情形 
 Orig_Intra
# of ZB
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0 0.07 (0.09, 0.09) 0.71 (0.69, 0.55) 1.81 (1.90, 1.64) 4.18 (7.43, 3.56) 40.80 (28.14, 9.48) 0.07 (0.04, 0.24)
0.07 (0.02, 0.02) 0.00 (0.15, 0.27) 0.09 (0.18, 0.97) 0.11 (0.60, 2.43) 1.22 (1.04, 3.43) 0.00 (0.00, 0.04)
0.00 (0.00, 0.04) 0.13 (0.24, 0.51) 0.22 (0.55, 0.99) 0.22 (1.35, 2.21) 1.77 (3.69, 3.91) 0.04 (0.02, 0.18)
0.00 (0.13, 0.09) 0.20 (0.29, 0.33) 0.27 (0.35, 0.73) 0.13 (0.24, 1.35) 1.33 (0.60, 1.86) 0.09 (0.11, 0.18)
0.02 (0.00, 0.02) 0.22 (0.09, 0.38) 0.18 (0.13, 0.88) 0.04 (0.42, 1.61) 1.08 (0.82, 2.21) 0.07 (0.04, 0.15)
0.04 (0.00, 0.02) 0.13 (0.15, 0.31) 0.22 (0.22, 0.44) 0.11 (0.27, 0.57) 1.11 (0.15, 0.75) 0.04 (0.09, 0.15)
0.04 (0.02, 0.00) 0.15 (0.22, 0.35) 0.20 (0.20, 0.51) 0.09 (0.31, 0.66) 0.57 (0.18, 0.97) 0.09 (0.09, 0.11)
0.13 (0.18, 0.13) 1.26 (0.40, 0.55) 0.15 (0.27, 0.13)
0.09 (0.09, 0.11) 0.20 (0.20, 0.35) 0.38 (0.29, 0.53) 0.13 (0.18, 0.46) 0.88 (0.29, 0.55) 0.18 (0.09, 0.04)
0.11 (0.09, 0.13) 0.60 (0.04, 0.09) 0.33 (0.22, 0.13)
0.27 (0.15, 0.11) 0.35 (0.38, 0.27) 0.33 (0.35, 0.31) 0.15 (0.20, 0.20) 0.38 (0.20, 0.11) 0.29 (0.11, 0.18)
0.29 (0.09, 0.09) 0.53 (0.18, 0.09) 0.60 (0.53, 0.29)
0.31 (0.24, 0.22) 0.84 (0.42, 0.38) 0.69 (0.27, 0.40) 0.27 (0.02, 0.15) 0.71 (0.13, 0.09) 0.62 (0.18, 0.15)
0.11 (0.04, 0.00) 0.04 (0.02, 0.00) 0.93 (0.33, 0.29)
1.13 (0.57, 0.46) 1.22 (0.51, 0.69) 0.99 (0.20, 0.24) 0.02 (0.02, 0.00) 0.09 (0.00, 0.02) 0.97 (0.24, 0.22)
0.00 (0.00, 0.00) 0.02 (0.00, 0.00) 2.54 (2.41, 1.77)
2.39 (0.86, 1.17) 1.13 (0.55, 0.62) 0.49 (0.33, 0.24) 0.02 (0.04, 0.00) 0.00 (0.00, 0.00) 0.71 (0.42, 0.38)
L2 I4MB I16MB
QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36)
Skip 16x16 16x8, 8x16
5.22 (26.64, 34.46) 1.61 (1.86, 1.33) 0.44 (0.38, 0.20)
1.88 (0.75, 0.93) 1.35 (0.64, 0.64) 0.99 (0.22, 0.13)
1.08 (0.77, 1.08) 1.41 (1.35, 1.30) 1.28 (0.86, 0.33)
0.35 (0.24, 0.11) 0.73 (0.42, 0.35) 0.80 (0.18, 0.31)
0.04 (0.27, 0.35) 0.51 (1.08, 0.44) 0.51 (0.75, 0.44)
 
【表 3】基於原始巨區塊型態下之巨區塊型態分佈 
 
Hit Rate (%)
Orig_Skip
Orig_16x16
Orig_16x8, 8x16
Orig_L2
Orig_I4MB
Orig_I16MB
SUM 25.31 (48.20, 62.99) 30.24 (19.20, 18.29) 17.97 (15.32, 11.41) 25.07 (16.11, 6.36) 1.10 (0.77, 0.57) 0.31 (0.39, 0.38)
0.15 (0.37, 0.50) 0.16 (0.16, 0.16) 0.16 (0.13, 0.17) 0.11 (0.21, 0.25) 0.96 (0.66, 0.45) 0.06 (0.07, 0.07)
0.09 (0.20, 0.22) 0.04 (0.01, 0.01) 0.02 (0.00, 0.00) 0.00 (0.00, 0.00) 0.00 (0.00, 0.00) 0.08 (0.02, 0.01)
1.99 (6.82, 10.48) 4.91 (4.59, 4.83) 9.20 (5.20, 3.02) 3.24 (2.72, 0.99) 0.04 (0.03, 0.04) 0.06 (0.09, 0.08)
1.97 (7.28, 12.85) 4.57 (6.16, 8.10) 5.75 (6.95, 5.95) 19.19 (11.05, 4.49) 0.06 (0.06, 0.08) 0.03 (0.07, 0.10)
17.67 (18.29, 18.57) 0.79 (0.38, 0.16) 0.24 (0.07, 0.03) 0.05 (0.01, 0.00) 0.00 (0.00, 0.00) 0.04 (0.05, 0.04)
3.43 (15.24, 20.36) 19.77 (7.90, 5.03) 2.60 (2.97, 2.24) 2.47 (2.12, 0.63) 0.02 (0.01, 0.01) 0.04 (0.08, 0.07)
Skip 16x16 16x8, 8x16 L2 I4MB I16MB
QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36) QP20 (QP28, QP36)
 
 
 
【圖 2】基於原始巨區塊型態下之巨區塊型態分佈 
如【表 2】，我們可以發現，當零區塊個數為
16 時，Skip 及 16×16 區塊分割模式占了很高的比
例，而其它區塊分割模式的比例因為占極少數，所
以此時我們將只進行此兩種區塊分割模式之移動
估測。當零區塊個數介於 12 到 15 之間時，Skip
及 L1 區塊分割模式占了相當高的比例，而 L2 分
割模式的比例很小，幾乎可以將其忽略，因此我們
將只進行 Skip 及 L1 區塊分割模式之移動估測。當
 6 
 
區塊為畫面內模式時，以 H.264/AVC 預設之預測
向量為搜尋中心，在以±5 像素點的搜尋範圍內可
找到最佳移動向量的可能性也達九成左右。 
【表 6】原始巨區塊為畫面內模式下之最佳移動向
量分佈 
 Orig_Intra
abs(SR) QP20 QP28 QP36
﹦0 0.520 0.626 0.637
≤ 1 0.733 0.808 0.837
≤ 2 0.818 0.862 0.878
≤ 3 0.852 0.890 0.906
≤ 4 0.885 0.912 0.928
≤ 5 0.902 0.925 0.939
CDF
 
另外，我們發現當合成後之原始移動向量與
H.264 預設之預測向量之間差異(α)很小甚至為相
同的向量時，那麼此合成後之原始移動向量的準確
性就更加提高了如【圖 4】。 
 
 
【圖 4】原始移動向量與 H.264 預設之預測向量間
差異性示意圖 
【表 7】基於向量間差異性下之最佳移動向量分佈 
 Orig_Inter
abs(SR) QP20 QP28 QP36
≤ α 0.744 0.789 0.831
≤ α+1 0.922 0.931 0.948
CDF
 
如【表 7】，我們可以看到當我們以合成後之
原始移動向量為為搜尋中心，最佳移動向量有七成
至八成以上的比例會落在±α搜尋視窗之內，算是
不低的比例了；而再將搜尋視窗擴大為±(α+1)
時，就會有高達九成以上的比例了。這表示當合成
後之原始移動向量夠準確時只需要±α大小的搜尋
範圍，但當合成後之原始移動向量不夠準確時，就
需要將搜尋視窗擴大為±(α+1)，接下來我們再利
用被合成的原始移動向量內部之間的差異性來判
斷此合成後之原始移動向量的準確性。因為合成後
之原始移動向量其來源為數個不等的原始移動向
量，而這些原始移動向量彼此之間會有其相異性，
所以當其差異性過大時，合成後之原始移動向量的
準確性就會降低。以 16×8 為例，其內部之間的差
異性如【式 1】、【式 2】所示。 
 

h
et
t
d
as
s
h
et
t
d
as
s mvymvymvxmvx0 【式 1】 
 

p
mt
t
l
is
s
p
mt
t
l
is
s mvymvymvxmvx1 【式 2】 
 
  
 
 
    (a) 原始移動向量      (b) 16×8 之差異 
【圖 5】被合成之原始移動向量內部差異性示意圖 
接著我們將藉由計算向量差異值 β 及上述之
統計分析提出可變搜尋視窗演算法，而其詳細做法
如下︰ 
 當原始巨區塊為畫面內模式時︰此時因無原
始移動向量資訊，因此我們採用 H.264/AVC
預設之預測向量(PMV)為搜尋中心，在±5 像
素點的搜尋視窗內進行移動估測。 
 當原始巨區塊為畫面間模式時︰此時因有原
始移動向量資訊，我們將依照各區塊分割模
式將其合成為一合成向量，且計算合成後之
原始移動向量與 H.264 預設之預測向量之絕
對距離差值α。 
(1)當欲進行移動估測之區塊分割模式為
16×16 時，因其即為一個完整之巨區塊大
小對於一巨區塊的失真程度影響很大，所
以我們以合成後之原始移動向量為搜尋
中心，在±5 像素點的搜尋視窗內進行移動
估測。 
 8 
 
接著對當原始巨區塊為畫面內模式時進行分
析由【表 2(b)】可以觀察到︰ 
 當零區塊個數介於 12 到 16 之間時，較大部
分的比例在巨區塊型態為 I16MB 區塊模式，
而 I4MB 較少，故我們只進行 I16MB 之模式
預測。 
 當零區塊個數介於 0 到 11 之間時，巨區塊型
態為 I4MB 與 I16MB 區塊模式的比例較為平
均，因此我們進行 I4MB 與 I16MB 之模式預
測。另外從【表 3】，我們可以知道，當原始
巨區塊型態為 I16MB其經重新編碼後之巨區
塊型態為 I4MB 的比例相當低因此當原始巨
區塊型態為 I16MB 我們只進行 I16MB 之模
式預測。 
最後我們以演算法流程圖來整合並示意基於
零區塊之畫面內區塊模式決策法演算法流程如【圖
7】 
 
 
【圖 7】可變搜尋視窗演算法流程 
2. 加強型快速畫面內預測演算法︰ 
由於當原始模式為畫面間模式時就沒有屬於
畫面內模式之原始預測資訊可利用，所以我們將
I4MB 之九種與 I16MB 之四種預測模式皆列為候
選模式中。 
而當原始模式為畫面內模式時，我們可以從
【圖 8】觀察到，當重新編碼之量化參數較低時，
I4MB 之巨區塊型態分佈的機率很高，而隨著重新
編碼之量化參數持續往上增加，I4MB 之巨區塊型
態分佈的機率隨之降低，取而代之的是 I16MB 巨
區塊型態的分佈機率隨之升高，因此我們可以得知
原本在重新編碼之量化參數較低時原本為 I4MB
之巨區塊型態，隨著量化參數持續增加而轉移至
I16MB之巨區塊型態的機率很高；而原本為 I16MB
之巨區塊型態，會隨著量化參數持續增加而轉移至
I4MB 之巨區塊型態的機率很低，即會繼續保持
I16MB 之巨區塊型態。如此一來我們便可以利用
此特性，對於原始視訊串流的預測資訊作一個劃分
處理，那就是若取得之原始巨區塊型態為 I16MB，
則在重新編碼時就只進行 I16MB 預測；反之若取
得之原始巨區塊型態為 I4MB，則重新編碼時就
I4MB 及 I16MB 預測都進行。 
 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51
Pr(I4MB) Pr(I16MB)
QP
Pr
ob
ab
ili
ty
 
【圖 8】可變搜尋視窗演算法流程 
而原始 I4MB 與 I16MB 巨區塊型態內還含有
其原始預測模式，接下來我們對於原始預測模式與
重新編碼預測模式對應關係在重新編碼量化參數
為 20、28 及 36 下進行統計，如【表 8】、【表 9】
所示。 
由【表 8】我們可以觀察到重新編碼之預測
模式為與原始預測模式相同之模式及其相鄰兩個
 10 
 
我們可以看到我們可以看到轉換編碼為量化參數
為 20 及 36 下，快速畫面間預測轉換編碼演算法
(Proposed)相較於複雜型轉換編碼法(CCPDTP)之
節省時間已經超過 90%，平均達到 94%左右，而
與時間節省最多之簡易型轉換編碼法(SCPDTP)相
比也僅相差在 5%左右；而影像品質(PSNR)平均下
降了 0.027dB 至 0.141dB 左右而位元率(bit-rate)平
均增加了 0.26%至 1.03%左右。就整體影像品質平
均效能方面也是不錯的，然而相較於簡易型轉換編
碼法算是已經將影像品質之效能大幅提升不少了。 
【表 12】在相同量化參數下之效能比較 
(a) 量化參數為 20 下之效能比較 
 
SCPDTp Proposed SCPDTp Proposed SCPDTp Proposed
Football -0.205 -0.026 3.36 -0.19 -99.11 -93.72
Foreman -0.341 -0.008 16.54 0.10 -98.93 -92.91
CarPhone -0.431 -0.052 13.39 0.48 -98.95 -93.51
Claire -0.677 -0.110 10.10 0.17 -99.10 -95.87
Grandma -0.329 0.003 9.77 0.98 -99.14 -94.97
Stefan -0.910 -0.028 9.15 0.11 -99.16 -93.44
Paris -0.878 -0.017 6.20 -0.09 -99.10 -94.44
Mobile -0.075 -0.003 8.03 0.07 -99.05 -92.65
Container -0.377 -0.018 10.60 0.41 -99.29 -95.23
Salesman -0.154 -0.008 14.00 0.52 -99.18 -92.47
-0.438 -0.027 10.11 0.26 -99.10 -93.92
QP=20 PSNR(△dB) Bitrate(△%) Total Time(△%)
sequence
QCIF
CIF
Avg.  
 (b) 量化參數為 36 下之效能比較 
 
SCPDTp Proposed SCPDTp Proposed SCPDTp Proposed
Football -0.241 -0.013 28.20 2.37 -99.26 -94.27
Foreman -1.470 -0.253 81.40 -1.47 -98.83 -93.69
CarPhone -1.327 -0.214 65.73 -0.49 -98.81 -94.25
Claire -0.934 -0.249 46.29 -0.53 -98.78 -95.99
Grandma -0.520 -0.057 25.05 -1.36 -99.06 -96.49
Stefan -0.817 -0.164 75.88 5.81 -99.19 -93.25
Paris -0.639 -0.105 47.37 1.31 -99.07 -95.83
Mobile -0.697 -0.241 93.67 3.48 -99.11 -92.34
Container -0.625 -0.107 69.14 0.58 -99.04 -96.26
Salesman -0.635 -0.010 106.99 0.57 -99.00 -95.27
-0.790 -0.141 63.97 1.03 -99.02 -94.77
Bitrate(△%) Total Time(△%)
sequence
QCIF
CIF
Avg.
QP=36 PSNR(△dB)
 
不同量化參數下之效能比較，將量化參數設
定為 20、24、28、32、36 及 40，從位元率失真曲
線(rate distortion curve, RD curve)及轉換編碼時間
比較圖，來比較三種演算法在不同量化參數下的效
能，如【圖 10】。而圖中橫軸皆表示位元率，而縱
軸分別表示影像品質(以 dB 表示)、轉換編碼時間
(以秒表示)，由位元率失真曲線圖中可以看到我們
所提出之快速畫面間預測轉換編碼演算法
(Proposed) ，其位元率失真曲線都相當貼近複雜型
轉換編碼法(CCPDTP)，在影像品質上有著不錯的
表現，反觀簡易型轉換編碼法(SCPDTP)在相同之
位元率(bit-rate)下影像品質(PSNR)平均下降了大
概有 1 至 3dB 不等在較高的量化參數下甚至下降
達 3dB 以上；而由轉換編碼時間比較圖中可以看
到我們所提出之快速畫面間預測轉換編碼演算法
已經較複雜型轉換編碼法節省了絕大部份的轉換
編碼時間，而有著近乎於簡易型轉換編碼法的轉換
編碼時間節省程度了，因此我們所提出之快速畫面
間預測轉換編碼演算法可以使得轉換編碼獲得有
效且大幅的加速，同時仍可以維持一定畫面品質效
能。 
24 
26 
28 
30 
32 
34 
36 
38 
40 
42 
44 
0 500 1000 1500 2000 2500 
CCPDTp SCPDTp Proposed
Bitrate(kbps)
P
SN
R
(d
B
)
0 
30 
60 
90 
120 
150 
180 
210 
240 
270 
0 500 1000 1500 2000 2500 
CCPDTp SCPDTp Proposed
Bitrate(kbps)
T
im
e 
(s
)
        (a) 位元率失真曲線                (b) 轉換編碼時間 
【圖 10】不同量化參數下之效能比較(Football.qcif)   
六、結論 
我們基於統計分析有效的利用了原始畫面間
預測之資訊及其特性，先針對加速畫面間模式預測
進行探討，提出基於零區塊之畫面間區塊模式決策
法、快速多幅參考畫面選擇演算法及可變搜尋視窗
演算法，藉此加速移動估測；接著針對加速畫面內
模式預測進行探討，提出基於零區塊之畫面內區塊
模式決策法並提出加強型快速畫面內預測演算法
來進行加以應用，最後將所有演算法整合成一個快
速畫面間預測轉換編碼演算法，此演算法可較複雜
型轉換編碼法節省高達平均 94%左右的轉換編碼
時間，降低了複雜型轉換編碼法之轉換編碼時間，
但卻同時也能保持與複雜型轉換編碼法相近的畫
面品質效能。 
七、參考文獻 
[1] Y. Lin and J. D. Wu, “Cascaded mode decision for MPEG-2 to 
H.264/AVC intra frame transcoding,” IEEE Transactions on 
Consumer Electronics, vol. 55, no. 4, pp. xx-xx, Nov. 2009. 
[2] C. D. Wu and Y. Lin, “Efficient inter/intra mode decision for 
H.264/AVC inter frame transcoding,” Proceeding of IEEE ICIP, 
pp. 3697-3700, Nov. 2009. 
[3] C. D. Wu and Y. Lin, “Efficient algorithm for H.264/AVC intra 
frame transcoding,” Proceeding of IEEE ISCAS, pp. 2856-2859, 
June 2010. 
[4] J. D. Wu and Y. Lin, “MPEG-2 to H.264/AVC Intra Frame 
Transcoding,” PCM2009. Lecture Note in Computer Science, 
Vol. 5879, pp. 1020-1031. Springer, Heidelberg (2009). 
[5] Y. M. Lee and Y. Lin, “Zero-block mode decision algorithm for 
H.264/AVC,” IEEE Transactions on Image Processing, vol. 18, 
no. 3, pp. 524-533, Mar. 2009. 
[6] K. C. Hou, M. J. Chen and C. T. Hsu, “Fast motion estimation 
by motion vector merging procedure for H.264,” Proceeding of 
IEEE ICME, pp.1444-1447, July 2005. 
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本子計畫除了與其它子計畫舉辦了大型研討會（Workshop on Multimedia and 
Wireless Communication 2010），將期末成果展示於 2010 全國電信研討會。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
