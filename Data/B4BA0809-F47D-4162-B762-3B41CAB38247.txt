圖一: 代理人溝通架構
1. Interaction Protocol Ontology & Protocol
Storage:
Interaction Protocol Ontology描述協
定可分成兩部分：1) protocol constructs
and 2) interaction sequences，這些資訊皆
儲存在Protocol Storage中。其中protocol
constructs在系統初始化時讀入，以決定採
用的Protocol Drivers。Interaction sequences
則讓Protocol Drivers在運行時取得Next
CA。另外，這個Protocol Storage是互動的
雙方共同分享的儲存空間。
2. Protocol Drivers:
Protocol需經由CA的交換才得以驅
動。Protocol Drivers中，包含運行時所需
使用的Communicative Acts Drivers，如:
Request, Agree, Refuse, Inform, Failure
等。每一個Driver皆是Thread，當協定初
始化後，這些Drivers被load到系統中，並
不斷檢查下列：
1) Agent Mental States Storage中某個
Agent的State是否滿足使該CA成立的
feasibility preconditions (FP)/ rational
effect (RE)，
2) Agent Mental State是否符合OWL-S
Description中的Input/Output(I/O)，並
且能使Precondition/Effect(P/E)成立。
CA的上述兩項檢查都成功時，即可將這
個 CA pushes至Transport Channel。
3. Agent Mental Ontology & Agent Mental
State Storage:
Agent Mental Ontology描述Agent的
三種Internal States: 1) Belief, 2) Intention
與3) Uncertainty。Agent Mental State資訊
存放在Agent Mental State Storage。其中，
Belief描述Agent目前相信什麼？Intention
描述Agent目前想要做什麼？Uncertainty
描述Agent目前不確定什麼？
另外這Storage存放的是Agent私有
的內部狀態，在運行時Protocol Driver在此
取得Agent Mental States。所以不能與其他
的agents分享。
4. Domain Knowledge:
又稱為Auxiliary Ontology，是support
OWL-S Description的重要文件。是用來描
述 Input, Output的資料型態 (DL-based
Type)以及Precondition, Effect內的變數資
料型態。
5. OWL-S Description:
OWL-S的描述文件，包含有Profile,
Process, and Grounding三部分。Profile與
Process中的IOPE是提供給Drivers檢查的
重要資訊。
四、實作
下列說明上節所描述的各元件的實作細
節：
1. Interaction Protocol Ontology & Protocol
Storage
OWL 為 基 礎 的 Interaction Protocol
Ontology 是一個語意標籤集，用來描述 Agent
間溝通的各項屬性。
圖四: 查詢 Protocol Storage內容
2. Protocol Drivers
Protocol Drivers是一群 Java Thread，每一
個 Thread皆實作 FIPA 的 CA，在此我們拿出
其中一個較為常見的 CA,‘Request’來說明。
FP:
FP (a) [i/j] ∩
Bi Agent (j, a) ∩
Bi Ij Done (a)
RE:
Done (a)
如上所示，要執行 Request的條件有三：
1) FP (a) [i/j]: service “a”部 份
precondition必需要存在於 agent“i”的
mental attitudes.
2) Bi Agent (j, a): agent “i”相信 agent
“j”是唯一可以執行 service“a”的人.
3) Bi Ij Done (a): agent “i”相信 agent
“j”有意圖完成 service“a”.
執行後成立的條件必須：
1) Done (a): service“a”已經完成.
為檢查這些條件我們的 Request Driver使
用 OWL-S API與 Protégé OWL API來分別對
OWL-S Description 的 IOPE 與 Agent Mental
State進行狀態檢查。
3. Agent Mental State Storage & Agent
Mental Ontology
Agent代表參與互動的個體:
1. 可 以 被 agent 協 調 的 service 屬 性
“coordinates”描述 . 注意 :這裡所指的
service即為OWL-S service。
2. Intetion 的型態，由屬性“hasIntention”
描述。這些 type of intention可以是 1)
perform action, 2) handle error, 3) pass
information, 4) request information or 5)
negotiate agreement.
例如，agent参與某個服務的協調可以如下
描述:
<!--a Book Buying Service-->
<Service rdf:ID="BookBuyingService"/>
<!--Agent John intents to perform coordinating
Book Buying Service-->
<Agent rdf:ID="John">
<coordinates rdf:resource="#BookBuyingService"/>
<hasIntention rdf:resource="#PerformAction"/>
</Agent>
在這例子中，agent John在協調時，有意圖
執行 book buying service這個 action.
4. Domain Knowledge
Domain knowledge是由 OWL所描述的特
定問題領域的知識。圖五中，我們定義了買書
服務的領域知識 . 某個 “service” 提供賣
“books”, 並且他賣的書有“title”, “price”以及
買賣狀態“hasOrdered”。此外，該服務有
“members”表示買書這是否為 VIP。
Fig. 6: Domain knowledge
5. OWL-S Description
OWL-S Description 是依照 OWL-S 1.1
specification 所定義出來的網路服務，所以在
此 省 略 ， 完 整 的 描 述 可 以 参 閱
http://www.daml.org/services/owl-s/1.1/以得到
更完整的說明。
五、結論
本研究的成果有三:
1. 定義 Agent Interaction Ontology，
2. 實作 Interaction Protocol API 與
3. 實作 Protocol Drivers。
在語意網上的 FIPA代理人溝通機制之研究 出國報告
A Study of FIPA Agent Communication Mechanism over Semantic Web
計畫編號: NSC95-2221-E-008-082
執行期限:95/08/01~96/07/31
報告人: 博士生 林永峰
本人於 2007年 7月 23-27至中國
北 京 參 加 the Thirty-first Annual
Internal Computer Software &
Application Conference (COMPSAC
2007)，中的 The Second IEEE Internal
Workshop on Engineering Semantic
Agent System 2007 (ESAS 2007)。文章
刊登在 Proceedings of the 31th Annual
International Computer Software and
Applications Conference, Volume II,
pages 147-152。會中發表 95-96年國科
會計畫的研究成果。
在演說中，闡述本年度研究的重
點 Semantic Web 上的代理人溝通機
制，首先介紹 Agent Communication的
歷史沿革，接著說明當今熱門的
Semantic Web 為 何 需 要 Agent
Communication的協助，然後說明本文
的主旨，FIPA 的 Interaction Protocol
如何應用在 Semantic Web上，最後並
以我們實作的成果做為總結。演說後
與會場聽眾有許多提問並因此獲得許
多的指教，並與聽眾在私下用餐時亦
交換實做上的經驗細節。
此外會中也聽到許多在本領域中
優秀的外國學者演說，如英國
University of Southampton 著 名 的
Electronics & Computer Science (ECS)
實驗室的 Liang Xiao闡述如何以 rules
來 描 述 Agents 之 間 的
communication，以及如何讓人可以手
動的更改高階的 Agent Interaction
Model以適應其多變的環境。
另外，也聽到學者說明在 Semantic
Web上 Temporal推論的原理與應用。
以此方法為基礎，提供趨勢分析的服
務以分析 Semantic Web上資源的使用
情況。
此 外 ， 尚 有 學 者 探 討 各 家
Agent-Oriented Software Engineering
(AOSE) 方法論的優缺點，並提出一個
視覺上的輔助工具以改善當前方法論
的缺失。
在此次大會中，我也曾與同行友
人多次與大陸學者交換意見，大陸學
者 (在美國任教) 在言語中也多次讚
賞台灣的資訊技術以及資訊技術的普
在語意網上的 FIPA代理人溝通機制之研究 出國報告
A Study of FIPA Agent Communication Mechanism over Semantic Web
計畫編號: NSC95-2221-E-008-082
執行期限:95/08/01~96/07/31
報告人: 博士生 林永峰
本人於 2007年 7月 23-27至中國
北 京 參 加 the Thirty-first Annual
Internal Computer Software &
Application Conference (COMPSAC
2007)，中的 The Second IEEE Internal
Workshop on Engineering Semantic
Agent System 2007 (ESAS 2007)。文章
刊登在 Proceedings of the 31th Annual
International Computer Software and
Applications Conference, Volume II,
pages 147-152。會中發表 95-96年國科
會計畫的研究成果。
在演說中，闡述本年度研究的重
點 Semantic Web 上的代理人溝通機
制，首先介紹 Agent Communication的
歷史沿革，接著說明當今熱門的
Semantic Web 為 何 需 要 Agent
Communication的協助，然後說明本文
的主旨，FIPA 的 Interaction Protocol
如何應用在 Semantic Web上，最後並
以我們實作的成果做為總結。演說後
與會場聽眾有許多提問並因此獲得許
多的指教，並與聽眾在私下用餐時亦
交換實做上的經驗細節。
此外會中也聽到許多在本領域中
優秀的外國學者演說，如英國
University of Southampton 著 名 的
Electronics & Computer Science (ECS)
實驗室的 Liang Xiao闡述如何以 rules
來 描 述 Agents 之 間 的
communication，以及如何讓人可以手
動的更改高階的 Agent Interaction
Model以適應其多變的環境。
另外，也聽到學者說明在 Semantic
Web上 Temporal推論的原理與應用。
以此方法為基礎，提供趨勢分析的服
務以分析 Semantic Web上資源的使用
情況。
此 外 ， 尚 有 學 者 探 討 各 家
Agent-Oriented Software Engineering
(AOSE) 方法論的優缺點，並提出一個
視覺上的輔助工具以改善當前方法論
的缺失。
在此次大會中，我也曾與同行友
人多次與大陸學者交換意見，大陸學
者 (在美國任教) 在言語中也多次讚
賞台灣的資訊技術以及資訊技術的普
