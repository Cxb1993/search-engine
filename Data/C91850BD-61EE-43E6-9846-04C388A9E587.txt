policy. Capacity allocation entails deciding on the 
profitable product mix and production quantities of 
each product group at a given site in a particular 
period of time. Capacity expansion (or reduction) 
identifies the optimal capacity addition (or 
decrease) policy that involves the timing, types and 
quantities of capacity investments. 
  In this research project, three directions are 
proposed to be studied on the stochastic capacity 
planning: (1) Construct a dynamic capacity planning 
model (DCP) using the stochastic dynamic programming 
by considering the correlations of the demand 
variations in the consecutive periods； (2) Evaluate 
the optimality and robustness of the DCP solutions 
through Monte Carlo simulation； (3) Due to the curse 
of dimensionality, stochastic dynamic programming is 
computationally infeasible because of the size of the 
state and action spaces for realistic problems. 
Therefore, we develop a simulation-based approximate 
dynamic programming algorithm to generate near-
optimal dynamic capacity policy by combining 
stochastic simulation, mixed integer programming and 
Bellman iteration. And use the heuristics to achieve 
the objective of real time decision making. 
  This three-year research project cooperates with a 
TFT-LCD manufacturer. By collecting experimental data 
from industry, the proposed DCP model will be 
verified. Furthermore, Monte Carlo simulation, used 
to generate different demand scenarios, is used to 
evaluate the robustness of DCP model and to compare 
the performance of capacity expansion derived by the 
previous study of deterministic model and two-stage 
stochastic programming. 
 
英文關鍵詞： TFT-LCD、Capacity Planning、Stochastic Dynamic 
Programming、Monte Carlo Simulation、Approximate 
Dynamic Programming 
 
 II 
 
圖目錄 
圖 1國內三大面板廠出貨量資料(資料來源：各公司法說會公開資料)   ...................... 1
圖 2 三階段產能與產品組合規劃示意圖(陳 2006)   ....................................................... 3
圖 3 兩階隨機規劃法示意圖(張 2007)   ........................................................................... 4
圖 4 「以陰影價格為基之分解演算法」示意圖(示 2008)   ............................................ 5
圖 5 以情境樹為基之多階隨機規劃示意圖(朱 2009)   ................................................... 6
圖 6 隨機動態規劃決策示意圖(朱 2009)   ....................................................................... 6
圖 7 Cheng et al. (2004)所探討問題的動態規劃時序圖   .................................................. 8
圖 8 ADP的種類(Katanyukul et al. 2011)   .......................................................................... 9
圖 9 Choi(2004) Cost-to-go Barrier 示意圖   .................................................................... 10
圖 10 Chio (2004) 即時近似動態規劃流程圖   ............................................................... 10
圖 11 Chio(2009) State Similarity Criteria示意圖   ........................................................... 11
圖 12 Pratikakis(2008) Rolling Horizon MILP示意圖   .................................................... 12
圖 13 單階層多廠區之隨機動態產能問題   .................................................................... 14
圖 14 線性折舊的概念   .................................................................................................... 16
圖 15 隨機動態規劃及確定型產能結果與實際需求的差異(產品 20.1”B)   .............. 24
圖 16 隨機動態規劃及確定型產能結果與實際需求的差異(產品 32.0”B)   .............. 24
圖 17 Profit Distribution of Different Optimization Model   .............................................. 26
圖 18 近似動態規劃主要流程   ........................................................................................ 28
圖 19 利用需求移轉機率產生N條需求路徑   ................................................................. 29
圖 20 求解N條需求路徑的MILP產生對應的N條決策路徑   ........................................ 30
圖 21 N×M種狀態路徑組合   ............................................................................................ 31
圖 22 有限的狀態空間(Restricted State Space)   ............................................................. 32
圖 23 狀態的決策子空間(Sub-Action Space)   ................................................................ 32
圖 24 更新狀態移轉機率值   ............................................................................................ 33
圖 25 在有限的狀態空間內進行隨機動態規劃   ............................................................ 35
圖 26 本研究提出之即時近似動態規劃   ........................................................................ 36
圖 27 透過k-NN方法尋找鄰近狀態  ............................................................................... 37
圖 28 k-NN為基之即時近似動態規劃流程   .................................................................... 38
圖 29 滾動式近似動態規劃示意圖 (1/4)   ...................................................................... 38
圖 30 滾動式近似動態規劃示意圖 (2/4)   ...................................................................... 39
圖 31 滾動式近似動態規劃示意圖 (3/4)   ...................................................................... 39
圖 32 滾動式近似動態規劃示意圖 (4/4)   ...................................................................... 40
圖 33 滾動為基之近似動態規劃流程   ............................................................................ 41
圖 34 不同Problem Size下的計算複雜度   ...................................................................... 44
圖 35 SDP、k-ADP與R-ADP在不同Problem Size的執行時間   ..................................... 44
 1 
 
壹、 前言 
TFT-LCD產業具有非常複雜且獨特的製程環境，其生產製程主要分為三大部分：陣列製
程(Array process)、組立製程(Cell process)和模組製程(Module process)。此三大製程基本上為
各自獨立的製造廠，所有的面板都必須經過此三個製程進行加工，才能成為最終的 TFT-LCD
面板。其中，前兩大製程的機台、設備投資昂貴，故非常重視產能的利用，屬於產能導向的
生產製程且生產模式為計劃式生產；模組製程則因為採購物料的前置時間較長，著重於物料
的分配，屬於物料導向的生產製程且生產模式為接單式生產。所以產能規劃涵蓋的範圍主要
是指產能導向的陣列製程和組立製程。而 TFT-LCD產業的生產製程的瓶頸通常主要發生在陣
列製程的曝光機台，因此本研究主要針對陣列製程進行產能規劃的問題探討。 
TFT-LCD 業陣列製程通常會透過購買瓶頸機台的附屬資源─光罩來增加產能，但購買光
罩的前置時間通常要一個月左右，且一套光罩需花費好幾百萬元的成本，對於公司中長期的
營運績效有很大的影響。再加上 TFT-LCD面板的需求波動劇烈，業務人員很難做出準確的需
求預測提供給生產規劃人員，若需求預測與實際需求差異大，可能會造成產能不足，無法及
時滿足顧客，或是擴充過多的產能，造成成本的浪費。     
此外，由國內三大面板廠 2000年第 2季至 2008年第 4季的歷史出貨量資料發現，除了
需求的劇烈波動之外，亦可觀察出前後期需求之間的相依性，也就是說假使這一期的需求屬
於高需求，則下一期會有較高的機率仍為高需求，如圖 1所示。 
 
Unit Shipment (milion)
0
5
10
15
20
25
20
00
/Q
2
20
00
/Q
4
20
01
/Q
2
20
01
/Q
4
20
02
/Q
2
20
02
/Q
4
20
03
/Q
2
20
03
/Q
4
20
04
/Q
2
20
04
/Q
4
20
05
/Q
2
20
05
/Q
4
20
06
/Q
2
20
06
/Q
4
20
07
/Q
2
20
07
/Q
4
20
08
/Q
2
20
08
/Q
4
AUO Large Size Panel Unit Shipment (milion)
CMO Large Size Panel Unit Shipment (milion)
CPTT Large Size Panel Unit Shipment (milion)
 
圖 1國內三大面板廠出貨量資料(資料來源：各公司法說會公開資料) 
 
 本研究第一年計畫針對 TFT-LCD產業的陣列製程，考量需求的不確定性以及前後期需求
的相依性，建立隨機動態規劃模型，依據各期可能發生的需求情境，動態的決定光罩附屬資
源的購買數量與時機，以及最佳的生產產品組合，以期達到最大化淨利潤。 
 當產能規劃所考量的廠區、產品和擴充上限持續增加，以及規劃期間拉長，需求情境離
散化的程度變多，狀態變數、決策選項以及運算次數都呈指數成長，導致 SDP模型面臨 Curse 
of Dimensionality的問題，使得求解 SDP耗費資源和時間，甚至出現資料量過大無法負荷的
情況。為了解決 SDP模型所面臨的問題，本研究第二年計畫使用近似動態規劃(Approximate 
 3 
 
陳(2006)與 Lin et al. (2007)對於 TFT-LCD面板業之策略層次的產能與產品組合規劃問題
進行探討。首先，其釐清 TFT-LCD面板業之產能與產品組合規劃問題的規劃目的，並針對產
品族特性、生產鏈特性、產品族與生產鏈關聯特性、需求預測與供給產能差異等問題特性作
分析，歸納出 TFT-LCD生產鏈之產能與產品組合規劃問題的特性與規劃議題，再依據「問題
架構」與「規劃議題」兩個維度，將 TFT-LCD生產鏈之產能與產品組合規劃問題作分類與定
義。接著，其針對 TFT Array多廠區（單階層多廠區）確定型產能規劃問題，提出三階段之
規劃方法論將原本複雜之產能與產品組合規劃問題分解成各階段之子問題，再以數學規劃模
式建構各階段之產能與產品組合規劃問題。（1）階段一：產能與產品組合分配，將需求預測
與供給產能作最佳化的組合分配，以達到最大邊際貢獻；（2）階段二：產能擴充，當需求預
測大於供給產能時，評估是否可擴充產能以滿足最大化需求；（3）階段三：產能填補，當各
廠區仍有剩餘產能時，則建議額外投入之產品族與投入數量，以降低產能損失成本，創造最
大化之利益。，此三階段產能與產品組合規劃方法流程如圖 2所示。 
 
Phase 1
產能與產品組合分配
（capacity configuration）
Phase 2
產能擴充（capacity expansion）
Phase 3
產能填補（capacity exploitation）
三階段產能與產品組合規劃
產能擴充
↓
重新規劃
yes
是否有未滿足需求？
no
yes
是否有擴充產能？
no
產能與產品組合
規劃結果
輸入資料
 
圖 2 三階段產能與產品組合規劃示意圖(陳 2006) 
 
Chen et al. (2008a)針對單階層多廠區產能規劃問題提出了一整合混整數規劃模型來同步
決定產能分配與產能擴充決策，其中產能擴充決策只考量如何透過購買附屬資源（即為 Array
製程中的光罩）來擴充某產品在某廠區的產能；由於此數學模型為整合混整數規劃模式加上
TFT-LCD產業的資料量非常龐大，因此提出了以陰影價格為基的啟發演算法來有效率的求解
大規模 TFT-LCD單階層多廠區產能規劃問題，此解法可以在合理的時間內找到近似最佳解。 
Chen et al. (2008b)則將此單階層多廠區產能規劃的混整數規劃模型透過實際的 TFT-LCD
產業案例來實證其可行性，同時也透過敏感度分析發現需求與產能的變動將會造成產能規劃
與產能擴充結果有大幅的改變，因此若只考量單一確定性預測需求的產能規劃將無法應付變
化快速與不確定的環境，故這也種下本研究往隨機產能規劃問題探討的動機。 
張(2007)提出一產能規劃之整合模式，將上述需求確定性之單階層多廠區產能規劃問題
建構混整數規劃模式，以最大化淨利潤為目標，同時考量產能分配與產能擴充兩個議題，若
有剩餘產能並不會進行產能填補，所有的生產與擴充決策皆是以淨利潤為指標。接著，張(2007)
 5 
 
保守策略（Conservative strategy），前者選擇增加單位邊際利潤最高的產品之產能，而且儘
可能滿足所有市場需求，後者同時考量單位邊際利潤與未滿足之需求預測量決定擴充產能與
否，擇一策略進行即可求得可行的產能分配計劃與產能擴充計劃，最後，也藉由實際案例驗
證本研究提出之演算法可在有限的時間內求得較佳的可行解，以及分析兩策略之適用時機，
進而給予規劃人員幾點建議：（1）除非供給產能遠小於需求產能，選擇任一策略無明顯差異，
否則應選擇保守策略為佳、（2）若產品族銷售價格越低，選擇保守策略越好；若價格越高，
則兩策略無差異、（3）若擴充成本攤提時間短，選擇保守策略為佳；若攤提時間長，則兩策
略無差異。 
 
 
圖 4 「以陰影價格為基之分解演算法」示意圖(示 2008) 
 
朱(2009)則是在單一陣列生產階層多個世代數製造廠的環境，考量需求不確定性，以及
前後期需求的相依性，動態地決定各期所需的產能與產能配置。其作法首先利用ARIMA(p,d,q)
模式建立需求預測模式，產生需求分配，並考慮前後期需求的相依性，通過情境樹的方式建
構隨機動態規劃模式，如圖 5所示，以期找出穩健(Robust)的產能擴充決策，並依此產能擴
充決策的結果，規劃各期最佳的生產產品組合，以達到最佳的產能配置結果，其隨機動態規
劃模式決策如圖 6所示。 
 7 
 
時，要如何透過多個需求情境為基礎的二階段隨機混整數規劃模式來決定穩健的產品投資策
略與多廠區產能規劃以達到期望利潤最大化。 
張(2007)針對 TFT-LCD產業之需求波動劇烈的特性，提出以情境樹為基之兩階隨機規劃
法(Scenario-based two-stage stochastic programming)建構隨機性數學模式。先將不確定性之因
子轉變成離散情境，對於每個離散情境除了具有確定性的數值外，還包含了發生該離散情境
的機率值。再利用兩階隨機規劃法，將決策變數與限制式分為兩大類：第一階段（First-stage）
之決策為不隨未來不確定性改變而改變，因擴充產能的前置時間較長且成本較高，將擴充產
能的決策視為第一階段之決策；第二階段（Second-stage）為考量第一階段之決策下做出之決
策，此決策隨著未來不確定性改變而改變，例如：各廠區投入生產的種類與數量會隨著未來
需求量的多寡而隨之改變的決策。 
在此所提到的離散情境為每一期都有相同的高需求或是低需求，例如在第 t期產生的需
求預測情境為高需求，則在此情境下第 t+1期到第 T期皆為高需求。但實際上當第 t期為高
需求時，第 t+1期也有可能會產生低需求的情況，如圖 5所示。 
此時無法一次決定未來多期的決策，必須在每一期做決策，同時要考量下一期的需求有可能
為高需求或是低需求，且發生高需求與發生低需求會各有一個發生的機率值，因此在每一期
必須考量下一期可能發生的需求情境與各情境發生的機率，決定一個最穩健的決策，為一多
階的規劃情況。 
為解決此多階的隨機規劃問題，文獻中較多利用動態隨機規劃的方法來求解，以下探討
文獻上所使用的隨機動態規劃法。 
 
2.3 隨機動態規劃應用於產能規劃議題的相關文獻 
Rajagopalan et al. (1998)探討的產能規劃問題納入考量不斷地技術性突破環境因素，且其
時間點和重要性為未知。一個在這種環境中的製造廠，必須決定現在技術的產能購買量以滿
足未來的需求成長，同時決定是否更新舊有的技術設備。此篇研究建構此問題的建構
Re-generation Point-based動態規劃模型，同時利用符合問題特性的方法減少狀態空間和運算
資源，以解決此難以處理的複雜問題。 
Bhatnager et al. (1999)最先考慮需求不確定性與隨機性，將馬可夫決策過程(MDP)模式應
用於半導體製程中的產能規劃問題，主要決定何時需增加廠區內哪一個製程的產能，與何時
需轉變生產的模式，即生產製程的轉換。建立馬可夫決策過程模式後，此篇文獻進行了以下
四個實驗：(1)比較不同需求分配之下的最佳解決策、(2)比較不同的存貨與缺貨成本之下的最
佳解決策、(3)比較不同的生產成本與製程轉換成本之下的最佳解決策、以及(4)在起始狀態為
(1, 1, 1, 1)時，比較不同生產結構的最佳解決策。以次四個實驗來提供生產規劃人員在不同的
生產環境之下，最佳的產能規劃決策為何。 
Asl et al. (2003)探討在具有不確定性的情況，在可重組式的製造系統(reconfigurable 
manufacturing system)中主要的產能為人力資源，因此擴增產能(人力)需要一段前置時間才能
實現。此研究利用馬可夫決策程序尋找最佳產能擴充計畫，同時進一步透過資訊回饋產生局部
最佳化的決策，以增加最佳產能計劃的穩健性。 
Cheng et al. (2004)探討在具有不確定性的情況下，針對產能規劃與存貨控制的多目標決
策問題，提到面對變動且具有隨機性質的環境之下，公司必須決定最佳的產能擴充計劃與生
產策略，滿足多個複雜的規劃目標。因為在每個時間點必須同時決定擴充產能的數量與存貨
 9 
 
例，此篇研究建構多階隨機動態規劃模型，透過馬可夫模型表達未來未知的市場需求，更進
一步地和滾動式二階隨機規劃進行比較。 
 
為解決上述文獻將隨機動態規劃應用於更大型問題時，所面臨的複雜為解決此多階的隨
機規劃問題，以下進一步探討文獻上所使用的近似動態規劃。 
 
2.4 近似動態規劃應用於產能規劃議題之相關文獻 
近似動態規劃(Approximate Dynamic Programming ,ADP)用來求解實務的馬可夫決策問
題，使用學習為基(Learning-based)或模擬為基(Simulation-based)的近似方法。Katanyukul et 
al.(2011)整理 ADP的架構如圖 8。其中，Learning-based ADP使用像是 Regression的 Learning 
Technique，近似每個狀態執行各決策選項的績效值。而 Simulation-based ADP透過像是蒙地
卡羅的模擬方法，近似每個狀態執行各決策選項的績效值。當問題的模型已知，則可使用
Simulation-based ADP，此方法介於 Analytical和 Learning-based之間；Analytical必須藉由問
題的模型中求解，而 Learning-based即使是問題模型未知的情況下仍可求解。而
Simulation-based ADP須要透過問題的模型求解，但是並非全然地仰賴分析，一部分透過模擬
提供資訊，以輔助較佳決策的選擇。本研究所使用的是 Simulation-based ADP(SADP)。模擬
的資料用來縮減狀態空間、決策空間，以及近似動態規劃的移轉機率，最後再利用 value 
iteration或 Rollout Approach求得最佳決策路徑。 
 
Approximate Dynamic 
Programming
Simulation-based Learning-based
Reduced State Space
(Choi et al.)
RTADP
Reduced Action Space
(Patrikakis et al.)
Rollout
(Choi et al.)
Learning 
Technique
Function 
Approximation
Q-learning
Dual Heuristic 
Programming
Look-up Table
Aggregation
Linear 
Combination of 
Features
 
圖 8 ADP的種類(Katanyukul et al. 2011) 
 
 Choi et al.(2004)使用離散時間的馬可夫鏈，描述具有隨機性的資源限制排程問題
(Resource-Constrained Project Scheduling Problem, RCPSP)，以表達不確定性參數間的關聯性。
此隨機最佳化問題可透過動態規劃求解，然而因運算資源龐大，使得問題有求解上之困難，
因此，文中提出將 Heuristics結果結合動態規劃的方法，透過 3種符合問題特性的 Heuristic 
Policies，集合在 Heuristic Policies中出現的狀態，而僅在此狀態子空間內進行隨機動態規劃。
 11 
 
制後，和在整個狀態空間中進行的隨機動態規劃相比，此演算法大大地縮減運算的時間，且
不失求解的品質。 
 Choi et al. (2005)利用隨機動態規劃的方法解決一個具有需求不確定性的大型供應鏈管理
問題，此問題考量了多個產品，要求得一個最佳的製造和配銷的決策。針對供應鏈管理中擁
有多產品的大型問題，此篇文獻提出了一個近似動態規劃的演算法，利用 restricted heuristic
來限制狀態和決策的空間大小，並以混整數規劃來建立數學模型，最後，以一實際的例子來
將所提出的演算法和 Sutton and Barto (2000)所提出的 Rollout Approach方法做比較，可得到此
演算法可以有效的解決大型的動態規劃問題。 
 Choi et al.(2006)提出一新穎的基於動態規劃之最佳化演算法架構，以求解隨機性之多產
品多廠區的供應鏈管理問題。文中透過不同的 Heuristics提供模擬和有限的狀態空間中可靠的
局部最佳決策，而模擬產生的不同需求實現路徑，而這些透過模擬所產生的資料提供即時決
策評估的起始績效值(initial “profit-to-go” values)，而對於在有限狀態空間外的情境評估，則透
過使用相似狀態準則(state similarity criteria)的方式，對於實際發生且未在有限狀態空間中的
狀態依照準則的優序尋找已模擬之狀態進行估計，如圖 11所示。更進一步地，若模擬的穩
健性已夠，則可透過不須進行 Bellman Iteration的 Rollout Approach進行線上決策(on-line 
decision)，實驗使用 50組馬可夫過程中的新情境，規劃時間為 100期，結果證實文中提出的
演算法可大幅減少運算時間，並有效改善求解品值。 
 
圖 11 Chio(2009) State Similarity Criteria示意圖 
 
Balasubramanian et al. (2004)建構可以表示為 State-Task Networsk(STNs)的隨機性多產品
排程問題之多階隨機規劃模型。有些決策與未知參數無關，但有些決策須根據未知參數實現
後才能訂定。為了解決多階隨機規劃所面臨運算複雜度的問題，作者進一步提出基於縮短規
劃期間架構的二階隨機規劃模型之近似策略。實驗結果指出文中所提出的近似策略之期望利
潤值在多階隨機混整數規劃結果的幾個百分比範圍內，而運算時間更短。 
 Pratikakis, N. E.(2008)對於產能規劃問題之求解提出滾動式線性規劃（Rolling Horizon 
MILP）之概念，該方法近似於實務之做法，在時間點 t預測未來規劃期間(t~T)內各期的市場
需求，所預測的 t~T期各產品的需求量(dekt)視為確定型產能規劃問題的輸入參數值，求解一
組涵蓋(t~T)期對應的最佳產能擴充計畫，並且執行此計畫中第 t期的擴充決策。當時間轉移
到下一期(t+1)，t+1期的需求實現(Demand Realized)，重新預測(t+2~T)規劃期間中各期的需求
情境，同樣將此更新的預測需求量視為確定型產能規劃之輸入值，依此再求解一組涵蓋(t+1~T)
 13 
 
健產能擴充結果，透過蒙地卡羅模擬法(Monte Carlo Simulation)所產生的不同需求情境，來驗
證本研究提出隨機動態產能規劃模式可以提供較佳與穩健的產能規劃結果；最後，所探討的
隨機產能規劃問題為度放大，透過建立近似動態規劃模型，以隨機模擬與 Heuristic之方法有
效縮小狀態與決策空間，並僅在該空間內搜尋最佳決策，且達到即時決策之穩健規劃結果。
茲將本研究目的整理如下： 
 第一年研究目的 
(1) 針對 TFT-LCD 產業的單階層多廠區產能規劃問題，考量需求的不確定性以及前後期之
間需求的相依性，建構隨機動態規劃模型，利用此模型提出最佳的產能分配計劃與穩健
的產能擴充計劃。 
(2) 比較過去研究所提出的確定性產能規劃模式（Chen et al.；2008a, Chen et al.；2008b）、情
境為基之兩階隨機產能規劃模式（張；2007, Lin et al.；2008a）與隨機動態產能規劃模式
所求得的穩健產能擴充結果，透過蒙地卡羅模擬法(Monte Carlo Simulation)所產生的不同
需求情境，來驗證本研究提出隨機動態產能規劃模式可以提供較佳與穩健的產能規劃結
果，並藉此分析需求的波動對規劃結果的影響。 
 第二年研究目的 
(1) 由於實際案例的資料規模相當大，造成隨機動態規劃模型的狀態數過多而求解上的困
難，因此本研究將提出近似動態規劃演算法(Approximate Dynamic Programming)來求解大
型問題。 
 第三年研究目的 
(1) 隨機模擬會忽略現實中可能發生之狀態，使得近似動態規劃因尚未考慮未模擬之狀態而
造成決策困難，因此本研究透過建構即時近似動態規劃(Real-Time Approximation 
Dynamic Programming)模型，求解單階層多廠區隨機動態規劃模型，在節省求解資源的
前提下，可達到即時決策(Real-Time Decision Making)之目的。 
(2) 透過實際的產業數據，驗證本研究提出的模型之可行性，並透過蒙地卡羅模擬(Monte 
Carlo Simulation)，與第一年計劃中的隨機動態產能規劃結果進行比較，藉此瞭解本研究
模型之效益。 
(3) 進一步更改案例中的參數，在不同的環境下進行模型的實驗分析，探討相關參數對於模
型之影響。此外，透過統計檢定尋找顯著影響求解結果之因子，以說明本研究所提出之
模型的適用環境。 
 
肆、 需求不確定之單階層多廠區隨機動態產能規劃 
3.1 問題定義 
本研究針對一具有附屬設備生產特性之產能規劃問題，於 TFT-LCD產業中，考量單一陣
列製程之生產階層，且擁有多個世代數製造廠的生產環境，每一世代數之製造廠可以生產多
種特定產品族。在已知各產品機種在未來多期的需求情境的平均需求量、各需求情境發生的
機率、每個陣列廠區總產能，以及加工各產品機種在各廠區的可獲得產能的資訊下，面對未
來多種產品族需求的不確定性，考慮製造廠在有限的產能供給情況，決定規劃期間內每期各
廠區所生產的產品族之組合與數量，進行最佳的產能分配決策，以及當供給無法滿足需求時，
透過購買瓶頸機台之附屬設備－光罩以擴增各製造廠區各產品族之可用產能，達到穩健的產
 15 
 
 產能擴充決策 
  依據各製造廠當時的總產能、各產品族於各製造廠當時擁有的產能、當期需求狀態
為的需求量、各製造廠對於各產品族的附屬資源之產能擴充上限、各製造廠對於各產品
族的附屬設備之單位擴充產能量、各製造廠對於各產品族的附屬設備之擴充能力、各製
造廠區於當時購買各產品族所需之單位附屬資源的成本，並考慮各製造廠對於各產品族
到目前為止擴充的附屬設備總數量以及前後期考量前後期需求的相依性，於每一規劃期
動態地進行各製造廠購買各種產品族的附屬設備─光罩之決策，同時決定需要購買的數
量。 
 產能分配決策 
    依據各產品族於各製造廠的產能耗用率、各產品族於各製造廠的經濟切割數、當期
各產品族於各製造廠的生產良率、各產品族於各時間點的邊際利潤、各產品族由市場淘
汰的時間點以及當時擁有的產能和前一期的產能擴充決策，決定當期各製造廠最適合的
生產產品族組合與生產數量。 
 績效指標 
本研究以最大總淨利潤(Total Profit)為規劃目標，並考量產能擴充所須攤提的成本。其計
算公式如下： 
)(
)(
Cost Expansion)Profit inalTotal Marg( 
Cost Expansion     
)able costTotal vari()Revenue Total( 
)Totla Cost()Revenue Total( 
)itTotal Prof(
總產能擴充成本總邊際利潤
總產能擴充成本
總生產變動成本總銷貨收入
總成本總銷貨收入
總淨利潤
−=
−
−=
−=
 
總產能擴充成本依據各產品族的附屬設備─光罩預計由市場上淘汰的時間點(Phase-out 
time)和各產品族的附屬設備─光罩購入的時間點所決定。由光罩購入的時間點開始計算每期
攤提的擴充成本，再考慮擴充的光罩數量與規劃期間內使用該光罩的期數，即可求得總產能
擴充成本。 
其中，產能擴充成本計算的方式為線性攤提(Linear Depreciation)，以圖 14說明。在時間
點 t購買附屬設備增加特定產品族 p的產能，而預計產品族 p在 tlfp期會從市場上淘汰。整個
規劃期間為 T期，若在這段時間內產品族 p未從市場淘汰，表示 tlfp>T，則折舊率為購買時
間點 t和規劃期間 T期的差距，除以產品族 p預計從市場淘汰的期數和規劃期間 T期的差距。
但若預計淘汰的時間點 tlfp期短於規劃期間 T期，表示 tlfp<T，則折舊率為為購買時間點 t和
淘汰的時間點 tlfp期的差距，再除以產品族 p預計從市場淘汰的期數和規劃期間 T期的差距，
折舊率如式(1)。 
 
( )
1
1,min
+−
+−
ttlf
ttlfT
p
p  (1) 
 17 
 
iktca
供給參數(Supply Parameters) 
： 第 i廠對於產品族 k的附屬設備於時間 t的起始可用產能 (單位：sheet) 
itcw ： 第 i廠於時間 t的起始總產能 (單位：sheet) 
ikcf ： 第 i廠對於產品族 k的產能耗用率 (單位：per sheet) 
ikcr ： 第 i廠對於產品族 k的經濟切割數 (單位：pieces/ per sheet) 
iktye ： 第 i廠對於產品族 k於時間 t的生產良率 (單位：per sheet) 
ikeb
產能擴充參數(Capacity Expansion Parameters) 
： 第 i廠對於產品族 k的附屬設備之擴充上限 (單位：sheet) 
ikeu ： 
第 i 廠對於產品族 k 的附屬設備之單位擴充產能量 (單位：單位附屬設
備) 
ikea ： 第 i廠對於產品族 k的附屬設備之擴充能力  
( ikea =1，表示第 i廠可以擴充產品族 k的附屬設備；反之亦然) 
iktec
成本參數(Cost Parameters) 
： 第 i廠對於產品族 k於時間 t購買單位附屬設備的成本 
(單位：單位附屬設備) 
ktξ
狀態變數(State Variables) 
： 產品族 k於時間 t的需求狀態 (ex : { }, ,kt H M Lξ ∈ ) 
tξ ： 時間 t需求狀態的向量。 ( ), 1t k K t Kξ ξ ∈ ×=  
ikttm ： 第 i廠對於產品族 k到時間 t為止擴充的附屬設備總數量 
ttm ： 
到時間 t為止擴充附屬設備總數量的陣列。 ( ), ,t i I k K t I Ktm tm ∈ ∈ ×=  
 
決策變數(decision variables) 
Decision) Allocation(Capacity 產能分配  
iktXQ ： 第 i廠對於產品族 k於時間 t的投入量 
tXQ ： 於時間 t投入量的陣列。 ( ), ,t i I k K t I KXQ XQ∈ ∈ ×=  
 Decision)Expansion (Capacity 產能擴充  
iktEM ： 第 i廠對於產品族 k於時間 t附屬設備的擴充數量 
tEM ： 於時間 t附屬設備擴充數量的陣列。 ( ), ,t i I k K t I KEM EM ∈ ∈ ×=  
 
 時間(Time)：
隨機動態規劃模式(Stochastic Dynamic Programming Model) 
{ }NT ,...,2,1=  
 狀態(State)： ( ),t t tS tm ξ= ，其中，到時間 t為止擴充附屬設備總數量的陣列可表示為式(2)，
而時間 t需求狀態的向量則為式(3)。 
 
 19 
 
( ) ( ) ( ) ( )( ) ( )( )
( )( )
1 1 21 1 2 1 1
1
| , ,..., | , ,...,
|
t t t t Ktt t K t
ktk t
k
P P
P
ξ ξ ξ ξ ξ ξ ξ ξ
                  ξ ξ
+ + + +
+
=
= ∏
 (8) 
 
 回饋(Reward) 
    式(9)為動態規劃的回饋方程式，在狀態 St，採取決策 At的情況下，考量擴充成本後，
進行產能分配所得到的利潤。式(10)為隨機動態規劃中產能分配的目標函式，表示總利潤
最大化。其計算方式為各產品機種於各廠區的單位邊際利潤乘上產出量，其中產出量為考
慮切裂後的面板與生產製程中的良率，為投入量乘上經濟切割率與良率。 
( , ) ( ) ( )
( , ) ( )
t t t t t t t
t t t t t
R S EM P S C EM
P tm C EM
  
                     ξ
= −
= −
 (9) 
( )( , )t t t ikt ikt ik ikt
i k
P tm Max pr XQ cr yeξ  = × × × 
 
∑∑  (10) 
s.t.  
( )      ikt ik ikt kt
i
XQ cr ye de k Kξ× × ≤ ∀ ∈∑  (11) 
      ( )ikt ik it
k
XQ cf cw      i I× ≤ ∀ ∈∑  (12) 
           ,ikt ikt ikt ikXQ ca tm eu i I k K  ≤ + × ∀ ∈ ∀ ∈  (13) 
      0     ,iktXQ i I k K  ≥ ∀ ∈ ∀ ∈  (14) 
      ( )
( )min , 1
( )
1
k
t t ikt ikt
i k k
ph T t
C EM EM ec
ph t
  − +
  = × ×
  − +  
∑∑  (15) 
      Optimality Equation： 
      
{ }
1
* *
1 1
*
1 1 1
( ) max ( , ) ( )
max ( , ) ( | , ) ( )
t
t
t
t t t t t t tEM
t t t t t ikt t tEM S
V S R S EM E V S
            R S EM P S S EM V S
  
    
+
+ +
+ + +
 = +  
  = + × 
  
∑
 
(16) 
     Boundary Condition： *( ) ( ) ( , )T T T T T T TV S P S P tm ξ= =  (17) 
式(11)到式(14)為產能分配的限制式。式(11)為需求滿足限制式，即產出量要小於等於需
求預測量。式(12)為廠區總產能限制式，考量各產品機種於不同的廠區生產一單位所耗用的
產能不同，所以各產品機種於廠區耗用產能的總和，必須小於此一廠區的整廠總產能。式(13)
為各產品機種可獲得產能限制式，各產品機種可獲得的產能包括原有的產品機種於廠區的產
 21 
 
之下，計算直到各期為止所得到的最大淨利潤，以 t=4為例，將第 4、5、6三期各情境的產
能分配所得到的利潤，扣除第 4、5期各情境的擴充成本，取其中的最大值，即為第 4期的
optimal reward。由表 2可得到在第一期(t=1)時，產能狀態為沒有產能的擴充，即 capacity state
皆為 0，當需求實現為低需求或中需求或高需求時，會有其分別對應的產能分配計劃與產能
擴充計劃，假設實際需求為低需求(L)，依據低需求的情境值可得到產能分配的決策為(16000, 
12000, 12000, 0, 6706.63, 5954.57, 16000, 16000, 9049.75, 0)，並決定產能擴充計劃為
(0,2,0,0,0,0,1,2,0,0)。當時間到 t=2時，如表 3，根據 t=1時低需求的產能擴充決策結果，可得
到當時產能的狀態為(0,2,0,0,0,0,1,2,0,0)，若實際需求為高需求(H)，則產能分配的結果為(16000, 
31600.1, 12000, 0, 6396.08, 18000, 32000, 48000, 11464.2, 4621.5)，且可得到在高需求之下的產
能擴充決策為(1,0,0,0,0,0,1,0,0,0)。以此類推，可得到在各規劃期間面對不同的需求情境，隨
機動態規劃能夠隨著需求的波動，於各期決定最佳的產能擴充計劃與產能分配計劃，以滿足
不同的需求狀態。 
 
 
表 2 規劃結果(t = 1) 
Capacity State 
Demand 
State 
Capacity Allocation Decision 
Capacity Expansion 
Decision 
Optimal 
Reward 
(tm_11,tm_12, 
tm_13,tm_14, 
tm_15,tm_21, 
tm_22,tm_23, 
tm_24,tm_25) 
(de_s) 
(XQ_11,XQ_12,XQ_13,XQ_14,XQ_15, 
XQ_21,XQ_22,XQ_23,XQ_24,XQ_25) 
(EM_11,EM_12, 
EM_13,EM_14, 
EM_15,EM_21, 
EM_22,EM_23, 
EM_24,EM_25) 
U*(s) 
(0,0,0,0,0,0,0,0,0,0) L (16000, 12000, 12000, 0, 6706.63, 5954.57, 16000, 16000, 9049.75, 0) (0,2,0,0,0,0,1,2,0,0) 122,042,000 
(0,0,0,0,0,0,0,0,0,0) M (16000, 12000, 12000, 0, 7547.5, 8211.8, 16000, 16000, 10184.5, 0) (0,2,0,0,0,0,1,2,0,0) 124,396,000 
(0,0,0,0,0,0,0,0,0,0) H (16000, 12000, 12000, 0, 8388.36, 10469, 16000, 16000, 11319.3, 0) (1,1,0,0,0,0,2,2,0,0) 128,830,000 
 
表 3 規劃結果(t = 2) 
Capacity State 
Demand 
State 
Capacity Allocation Decision 
Capacity Expansion 
Decision 
Optimal 
Reward 
(tm_11,tm_12, 
tm_13,tm_14, 
tm_15,tm_21, 
tm_22,tm_23, 
tm_24,tm_25) 
(de_s) 
(XQ_11,XQ_12,XQ_13,XQ_14,XQ_15, 
XQ_21,XQ_22,XQ_23,XQ_24,XQ_25) 
(EM_11,EM_12, 
EM_13,EM_14, 
EM_15,EM_21, 
EM_22,EM_23, 
EM_24,EM_25) 
U*(s) 
(0,2,0,0,0,0,1,2,0,0) L (16000, 33789.4, 12000, 0, 5977.46, 6278.55, 0, 48000, 6920.05, 0) (0,0,0,1,0,1,1,0,0,0) 105,859,000 
(0,2,0,0,0,0,1,2,0,0) M (8425.18, 20506.2, 12000, 0, 2675.28, 18000, 32000, 48000, 9192.13, 6939.03) (0,0,0,1,0,1,1,0,0,0) 111,650,000 
(0,2,0,0,0,0,1,2,0,0) H (16000, 31600.1, 12000, 0, 6396.08, 18000, 32000, 48000, 11464.2, 4621.5) (1,0,0,0,0,0,1,0,0,0) 119,728,000 
(1,1,0,0,0,0,2,2,0,0) L (434.614, 2360.79, 12000, 0, 5977.46, 18000, 41256.5, 48000, 6920.05, 0) (0,1,0,0,0,0,0,0,0,0) 105,970,000 
(1,1,0,0,0,0,2,2,0,0) M (20221.7, 8317.63, 12000, 0, 7939.95, 9116.69, 48000, 48000, 9192.13, 0) (0,1,0,0,0,0,0,0,0,0) 111,762,000 
(1,1,0,0,0,0,2,2,0,0) H (32000, 19411.5, 12000, 0, 9453.38, 6264.34, 48000, 48000, 11464.2, 591.876) (0,1,0,0,0,0,0,0,0,0) 119,886,000 
 
 
 
 
 23 
 
表 7 規劃結果(t = 6) 
Capacity State 
Demand 
State 
Capacity Allocation Decision 
Capacity Expansion 
Decision 
Optimal 
Reward 
(tm_11,tm_12, 
tm_13,tm_14, 
tm_15,tm_21, 
tm_22,tm_23, 
tm_24,tm_25) 
(de_s) 
(XQ_11,XQ_12,XQ_13,XQ_14,XQ_15, 
XQ_21,XQ_22,XQ_23,XQ_24,XQ_25) 
(EM_11,EM_12, 
EM_13,EM_14, 
EM_15,EM_21, 
EM_22,EM_23, 
EM_24,EM_25) 
U*(s) 
(0,2,0,2,0,1,2,2,0,0) L (16000,22458.68,12000,9223.71,3428.97,107.11,0,34045.76,0,0) - 13,640,270 
(0,2,0,2,0,1,2,2,0,0) M (16000,16508.93,12000,21789.94,6296.1,16667.89,48000,48000,0,2379.65) - 25,236,319 
(0,2,0,2,0,1,2,2,0,0) H (5776,36000,12000,32000,12000,36000,27229.61,48000,2365.74,1018.24) - 30,181,768 
(0,2,0,3,0,2,2,2,0,0) L (16000,22458.68,12000,9223.71,3428.97,107.11,0,34045.76,0,0) - 13,640,270 
(0,2,0,3,0,2,2,2,0,0) M (16000,16508.93,12000,21789.94,16667.89,48000,48000,0,2379.65) - 25,236,319 
(0,2,0,3,0,2,2,2,0,0) H (3372.71,36000,12000,34356.17,12000,42737.61,22770.1,48000,0,1018.24) - 30,404,423 
(1,2,0,2,0,1,2,2,0,0) L (16142.23,22458.68,12000,9223.71,3428.97,0,0,34045.76,0,0) - 13,640,270 
(1,2,0,2,0,1,2,2,0,0) M (32000,16508.93,12000,7466.39,8100.62,4619.16,48000,48000,14381.72,0) - 25,236,319 
(1,2,0,2,0,1,2,2,0,0) H (5776,36000,12000,32000,12000,36000,27229.61,48000,2365.74,1018.24) - 30,181,768 
(1,2,0,3,0,2,2,2,0,0) L (16142.23,22458.68,12000,9223.71,3428.97,0,0,34045.76,0,0) - 13,640,270 
(1,2,0,3,0,2,2,2,0,0) M (32000,16508.93,12000,7466.39,8100.62,4619.16,48000,48000,14381.72,0) - 25,236,319 
(1,2,0,3,0,2,2,2,0,0) H (3372.71,36000,12000,34356.17,12000,42737.61,22770.3,48000,0,1018.24) - 30,404,423 
 
 可觀察到確定型模式的規劃結果，因為輸入需求分配的期望值，也就是需求情境為中需
求，擴充的決策較為保守。且確定型模式依據中需求情境所做的擴充決策，並不會隨著實際
需求的波動而改變，當實際需求為高需求或是低需求時，容易造成擴充過多的產能，或是需
求無法滿足，這些對於公司的營運皆有很大的影響。此外，由於擴充的決策不同，各期各產
品的生產產品組合與投入生產量也有所差異。 
根據以上隨機動態規劃的規劃結果，第一年的研究可分為以下兩部分加以探討： 
 產能擴充決策結果 
利用隨機動態規劃所求得的產能擴充計劃，考慮了前後期需求之間的相依性，在每個決
策時間點皆會考慮下一個時期所有可能發生的需求情境，其決策的結果會隨著情境的改變而
有所不同。舉例來說，在規劃時間為 t=1時，需求若為高需求，其擴充決策為(1,1,0,0,0,0,2,2,0,)，
若為低需求或中需求，其產能擴充決策皆為(0,2,0,0,0,0,1,2,0,0)；假設第一期實際發生的需求
為中需求，做了(0,2,0,0,0,0,1,2,0,0)的擴充決策，則在規劃時間為 t=2時，廠內的產能狀態為
(0,2,0,0,0,0,1,2,0,0)，面對下一期的需求若為高需求時，產能擴充的決策為(1,0,0,0,0,0,1,0,0,0)，
若下一期為中需求或是低需求，其產能擴充的決策為(0,2,0,0,0,0,1,2,0,0)。因此，規劃人員依
據此產能擴充的結果，可決定在各個規劃期間內，當對面不同的需求情境時，該採取哪一種
產能擴充計劃較為適當。 
  產能分配決策結果 
當廠內的產能狀態不同，或是產能擴充計劃不同，會造成投入的產品組合不同。當面對
相同的需求情境時，因為擴充所造成產能狀態的改變，使得生產產品組合有所改變。以表 3.5
的 t=2為例，同樣為(0,2,0,0,0,0,1,2,0,0)的產能狀態，分別對應高需求和中需求(16000, 31600.1, 
12000, 0, 6396.08, 18000, 32000, 48000, 11464.2, 4621.5)與(8425.18, 20506.2, 12000, 0, 2675.28, 
 25 
 
 根據Wagner和 Berman(1995)所提出的 value of information的定義，本研究利用樣本內的
需求情境比較隨機動態規劃模式與張(2007)所提出之確定型模式、以情境為基之二階隨機規
劃的 3種衡量指標，分別為： 
 Value of stochastic solution to deterministic solution(VSS)=SP - EEV 
 SP表示利用二階隨機規劃模式所求得的目標函數(利潤)；EEV則是利用確定型模式所求
出的規劃結果。 
 Value of stochastic dynamic solution to deterministic solution (VDP)=SDP – EEV 
SDP表示利用隨機動態規劃模式所求出的利潤；EEV則是利用期望確定型模式所求出的
期望利潤。 
 Value of stochastic dynamic solution to stochastic solution (VDS)=SDP – SP 
SDP表示利用隨機動態規劃模式所求出的利潤；SP表示利用二階隨機規劃模式所求得的
目標函數。 
 表 8顯示三種最佳化模式的最佳目標值，以及表 9則呈現三種衡量指標的結果。 
 
表 8 最佳化模式之目標值  
 
 
表 9 VSS、VDP和 VDS計算結果 
 
 
 接著，利用由 ARIMA(p, d, q)需求預測模型所產生的需求分配，以蒙地卡羅模擬法進行
抽樣，針對各期各產品分別抽樣得 N 筆(N≧30)的樣本外需求情境（out-of-sample demand 
scenarios），並求出此 N筆需求情境中各期各產品的需求期望值，來代表各期各產品的需求量。 
 分別將隨機動態規劃模式所規劃出來穩健的產能擴充結果、確定性產能規劃模式與情境
為基之兩階隨機產能規劃模式所求得的穩健產能擴充結果，投入最佳化的產能分配模式中，
分別求得與計算每個樣本外需求情境在不同三個模式產能擴充結果下之產能分配的結果與獲
得的利潤值，如表 10。蒐集所有樣本外需求情境的利潤值可以畫出所有樣本外需求情境在不
同模式下所產生的利潤分配圖（profit distribution），如 圖 17。 
 27 
 
伍、 模擬為基之近似動態規劃模式 
 隨機動態規劃(Stochastic Dynamin Programming, SDP)的核心重點是「Bellman Iteration」。
Bellman Iteration的過程中，狀態空間中的每個狀態不斷地更新它的值(Profit-to-go Value)。在
離散的系統中，Bellman Iteraiton所須耗用的計算資源與衡量的狀態數量和每個狀態的決策數
量直接相關，因此，離散狀態的數量隨著狀態的維度指數地成長。本研究延續朱(2009)所探
討的 TFT-LCD產能規劃議題，其隨機又多階的最佳化問題須處理的狀態和決策變數的維度已
經不在傳統的 value iteration解決的範圍之內。除此之外，SDP的模型與問題間有很高的關聯
性，須仔細地定義 SDP的主要元素(狀態、決策、狀態移轉機率和回饋方程式)。當問題具有
以下幾點特性時，SDP存在限制： 
 高維度的離散狀態空間 
 在 SDP之中，狀態是必要被定義的元素，且為每一個步驟衡量最佳決策提供充足的資訊。
為避免狀態空間劇增，盡可能將狀態空間定義越小越好，但又能提供充足的資訊以衡量最佳
決策。然而，本研究所探討的實務問題中，高維度的狀態空間是無法避免的；同時，狀態須
包含對於不確定性的資訊，而狀態變數的數量即為不確定性資訊的數量。舉例而言，在第三
章所定義的 TFT-LCD產業之產能規劃問題中，狀態變數包含各產品於當期的需求情境，以及
各製造廠到當期為止所累積擴充各產品附屬設備的數量。因此，當產能規劃所考量的廠區、
產品和擴充上限的增加，甚至需求情境細分的程度，狀態變數隨之劇增。以「N個廠區、K
個產品、擴充上限為 B和 S種需求情境」的產能規劃議題為例，狀態空間包含「Sk×(B+1)N×K」
個狀態變數用來表示上述的狀態。因此，即使考量很少的製造廠和產品的產能規劃問題，動
態規畫模型都包含高維度的狀態空間，導致 SDP求解耗資源，甚至是無法求解的情況。 
 複雜的狀態移轉 
 在 SDP之中，Bellman Iteration計算每個狀態執行可行決策的期望績效值(Expected 
profit-to-go Value)。於已知一種狀態和一個決策的情況，精確地計算期望績效值須得知下一期
所有可能轉移到的狀態，以及對應的移轉機率值。存在複雜的狀態和決策關係的大型問題內，
要依序計算所有可能狀態轉移的移轉機率值是不可能的；另外，因為代表不確定性資訊的狀
態變數是無法控制的，它受到潛在的機率模型影響，使得精確地計算所有可能的狀態移轉更
加困難。因此，設法迴避不必要的狀態移轉，但同時能精確地近似期望績效值，是本研究的
重點之一。 
 高維度的決策空間 
 即使能盡量避免高維度的狀態空間，實務問題中的複雜又高維度的決策空間限制 Bellman 
Iteration於有限的時間內收斂。以本研究所探討的 TFT-LCD產業之產能規劃議題為例，考量
「N個廠區、K個產品、擴充上限為 B」，決策空間包含「(B+1)N×K」個決策變數用來表示各
製造廠對於各產品的附屬設備之擴充數量決策。隨著所規劃的製造廠和產品數量之增加，以
及更高的擴充上限，每個狀態所須衡量的決策空間劇增。在離散系統中，即使僅考量可行的
決策能使得決策空間縮小，但是高維度的決策空間仍使得 SDP無法衡量所有可行的決策。 
 
 因此，SADP能用於解決隨機和多階的最佳化問題。本研究第二年計劃與第一年計劃探
討相同的 TFT-LCD產能規劃議題，進一步使用 SADP進行求解。 
 
 29 
 
 
圖 19 利用需求移轉機率產生 N條需求路徑 
 
Step1.2 透過不同 Heuristics產生局部最佳決策(Generate Suboptimal Heuristics Policies) 
    本研究同時使用確定型數學規劃方法和亂數法選取較佳的決策路徑。 
 Linear Programming Relaxation Based Policy 
    將 Step1.1 所抽出每一組的需求路徑，對應得到各期的需求量(deξkt)，視為確定型混整數
線性規劃(Deterministic Mixed Integer Linear Programming)中的一組參數值，為了避免問題複
雜度增加時，混整數線性規劃求解上出現無法求解的情況，故本研究採用 Linear Programming 
Relaxation的方法，省去產能擴充決策變數 EMt為整數的限制式。接著，確定型線性產能規劃
的結果可求得一組各期最佳的產能擴充決策，如果此產能擴充決策 EMt出現購買非整數套數
的附屬設備時，將其值四捨五入，概念如圖 20所示。 
確定型線性規劃模式如下，參數和決策變數定義於 3.2小節的隨機動態規劃模式中： 
( ) ( )
i i
M   1
1
ik ikt
ik ikt
k t k t k
ec EMax pr XQ T t
ph t
 ×
× − × − + − + 
∑∑∑ ∑∑∑  (19) 
s.t.  
( )      ,ikt ik ikt kt
i
XQ cr ye de k K t Tξ× × ≤ ∀ ∈ ∀ ∈∑  (20) 
      ( ) ,ikt ik it
k
XQ cf cw      i I t T× ≤ ∀ ∈ ∀ ∈∑  (21) 
      
ik
ikt '
' 1
XQ   , ,
t
ikt ik ikt
t el
ca eu EM i I k K t T  
= +
≤ + × ∀ ∈ ∀ ∈ ∀ ∈∑  (22) 
      TtK,kI,i  ebEMeu ik
t
elt
iktik
ik
∈∀∈∀∈∀≤× ∑
+= 1'
'  (23) 
      , 0     , ,ikt iktXQ EM i I k K t T  ≥ ∀ ∈ ∀ ∈ ∀ ∈  (24) 
 
式(19)為產能規劃的目標函式，表示總利潤最大化。其計算方式為各產品機種於各廠區
 31 
 
 
圖 21 N×M種狀態路徑組合 
 
    在 N×M 種狀態路徑組合內，一個狀態可能重複出現 n 次，加總每次在狀態路徑中出現
的績效值，再除以重複出現的次數 n，此經過平均的績效值視為該狀態的起始績效值(Initial 
Profit-to-go Value)。實際的運算如式(26)。 
 
( )
( )
n
n
n
t
t
∑
=
SV
SV  (26) 
 
其中， 
n：狀態 St重複出現的次數 
V(St)n：狀態 St 在第 n次出現時的績效值 
V(St)：狀態 St 的平均績效值 
 
Step2. 定義有限的狀態空間和決策子空間(Identification of Restricted State Space and 
Sub-Action Space) 
Step2.1 定義有限的狀態空間(Identification of Restricted State Space) 
「有限的狀態空間(Restricted State Space)」不包含在隨機模擬程序中未被挑選的狀態。另外，
在此有限的狀態空間中，對於重複出現多次的狀態，經過統整之後僅記錄該狀態值一次。因
此 Step2.1利用 Step1隨機模擬的資料將整個狀態空間(Full State Space)縮減為一有限的狀態空
間(Restricted State Space)，而 SDP僅在此有限的空間範圍內進行最佳決策路徑的搜尋，如圖 
22所示。 
 33 
 
Step2.3 更新移轉機率值(Update Transition Probability) 
    當整個可能發生的需求情境空間相當龐大，並非能透過模擬實現所有可能發生的情境，
而在 Heuristics選出的一產能擴充決策轉移到下一期可能發生的狀態之中，因為某些需求情境
的移轉機率值較低，因此在 Step1.1透過蒙地卡羅模擬產生需求路徑的過程中，這些需求狀態
ξt並未被囊括於 Step2.1定義的「有限的狀態空間(Restricted State Space)」內，如圖 24所示。 
 
 
圖 24 更新狀態移轉機率值 
 
Step3. Bellman Iteration 
    Bellman Iteration僅計算 Step2.1所定義有限的狀態空間(Restricted State Space)中所囊括的
狀態之績效值(Profit-to-go Value)；再者，僅限於 Step2.2中針對有限狀態空間中的各狀態所定
義的決策子空間(Sub-Action Space)─A St中搜尋最佳決策，而非是整個決策空間；最後，計算
各狀態決策選項的期望績效值，其條件機率為 Step2.3針對有限狀態空間內的狀態移轉，所重
新計算的移轉機率。於上述三大原則中，本研究所探討的產能規劃問題之 Bellman Iteration透
過式(27)尋找各時期不同狀態的最佳決策。 
( ) [ ] [ ]{ }tttitt
AEM
t
i EMSSVEMSRESV
tS
t
,|,max 1
1
+
∈
+ +=  (27) 
    經過適當的重複次數之後，有限狀態空間中的狀態之績效值(Profit-to-go Value)─V*(St)可
取得其收斂狀態的值。亦即持續進行 Bellman Iteration 程序，直到 Vi達到收斂狀態，符合停
止條件如式(28)即停止。此時視 Vi為最佳績效值 V*。 
 
ε<
−∑
+
k
V
VV
k
i
ii 1
 
(28) 
 
 
 
 
 35 
 
陸、 即時近似動態規劃模式 
 以隨機動態規劃求解多期的最佳化問題須在整個狀空間(State Space)裡找尋最佳狀態路
徑(State Trajectory)，但一般而言，最佳方案中出現的狀態數量遠小於整個狀態空間中所有狀
態的數量，因此蒐尋整個狀態空間不僅費時且須衡量許多非必要之狀態。本研究提出兩種即
時近似動態規劃(Real-Time Approximate Dynamic Programming, RTADP)架構，主要概念來自
以下兩個問題： 
1. 如何定義有限的狀態空間(Restrict State Space)，且儘在這可能涵蓋最佳方案的有限狀
態空間中找尋最佳解？ 
2. 若實際發生的狀態不位於有限狀態空間時，該如何進行最佳決策？ 
 在第一個問題上，在本研究第二年計畫中透過馬可夫鏈蒙地卡羅模擬，依據需求狀態的
移轉機率，抽樣可能發生的需求路徑(Demand Trajectory)，此外，再透過 Heuristic的方式，產
生產能擴充路徑(Capacity Expansion Trajectory)。這些需求與產能擴充路徑即構成有限的狀態
空間以及與狀態相關聯的決策，而僅須在此空間內進行狀態值的估計，並透過前推歸納法
(Forward Induction)進行求解，所使用的概念可透過圖 25說明。在整個狀態空間很龐大的情
況，RTADP的結果和 SDP的兩者之間存在差異，特別是當問題的狀態空間非常大的時候，
模擬所抽取的資料並無法涵蓋整個狀態空間。RTADP中，有限的狀態空間中的狀態依據狀態
移轉法則所進行的模擬得到，而狀態績效值的衡量僅在此有限的狀態空間中進行，並非在整
個狀態空間中進行，因此，RTADP最糟的狀況仍可以找到模擬資料中的局部最佳方案。 
 
 
圖 25 在有限的狀態空間內進行隨機動態規劃 
  
 第二個問題來自於第一個問題的求解方法。我們透過抽樣的方式產生欲衡量的狀態，而
尚未被抽取出的狀態則採取忽略的方式處理，因此在這有限狀態空間裡的狀態數量可能遠小
 37 
 
圖 27 透過 k-NN方法尋找鄰近狀態 
RTADP結合 k-Nearest Neighbor Approximation方法之演算法架構，其主要的三大步驟如
下，主要流程如圖 28： 
 Step 1：離線近似動態規劃 (Off-Line Approximation Dynamic Programming) 
 Step 2：產生樣本外需求情境 (Generate Out-of-Sample Demand Trajectories) 
 Step 3：透過 k-Nearest Neighbor Approach衡量樣本外需求情境(Evaluation for 
Out-of-Sample Demand Trajectories within k-Nearest Neighbor Approach) 
 
Step1 Off-Line Approximation Dynamic Programming 
Step1.1 Stochastic Simulation  
Step3  Evaluation for Out-of-Sample Demand Trajectories 
within k-Nearest Neighbor Approach
Step2 Generate Out-of-Sample Demand Trajectories Sampling
Original Transition 
Probability
 Demand 
Trajectory from 
t=1 to t=T
Markov Chain Monte 
Carlo Simulation
Step1.1.1 Generate In-Sample Demand Trajectories (Paths) 
Original Transition 
Probability  N Demand Trajectories
Step1.2  Identification of the subset of state and action spaces using 
the simulation data
Markov Chain Monte 
Carlo Simulation
Step1.2.1 Identification of Restricted State Space 
Step1.3 Bellman iteration (Forward Induction)
to find near-optimal policy 
Step1.1.2 Generate Suboptimal Heuristics Policies 
M Capacity 
Expansion Policies
MILP based 
Policies
Random 
Policies
Step1.1.3 Calculate Initial (Average) Profit-to-go Value by 
Stochastic Simulation
Step1.2.2 Identification of Implicit Subaction Space 
Step1.2.3 Update Transition Probability 
 
 39 
 
圖 30 滾動式近似動態規劃示意圖 (2/4) 
接著，透過衡量每條需求路徑之績效值與決定最佳狀態，可以得到在 t=1時需求狀態為
高需求 H下的最佳決策。 
當時間轉移 t=2，需求實現為高需求，如圖 31所示，因為在 t=1時已考量 t=2時可能發
生的所有狀態，因此在 t=1時所進行的決策適合 t=2時的高需求，決策是穩健的。 
 
 
圖 31 滾動式近似動態規劃示意圖 (3/4) 
 
現在時間位於 t=2，如圖 32所示，重複與 t=1時的步驟，對於離目前時間距離為一期的
時間考量所有可能發生之需求狀態，而對於離現在期間為兩期以上之期間則透過蒙地卡羅隨
機模擬進行抽樣，此種抽樣方式就稱為 Next Period Full Demand Sampling，不僅能降低決策的
狀態空間，也能確保每一期間的決策具有效性。滾動為基之近似動態規劃(Rolling-Horizon 
based Approximate Dynamic Programming, R-ADP)之主要的六大步驟如下，主要流程如圖 33
所示。 
 
 41 
 
圖 33 滾動為基之近似動態規劃流程 
5.3 案例驗證 
 產業實例驗證 
 本研究利用國內某面板廠陣列製程的供給產能相關資訊，考慮 2 個陣列製造廠、生產 5
種產品機種，規劃時間長度為 6個月；每種產品附屬設備的擴充前置時間皆固定為 1個月；
各期的預測需求分配離散成低需求(L)、中需求(M)與高需求(H)三個需求情境，且假設規劃時
期內各產品的需求情境皆相同；各製造廠擴充各產品的附屬設備上限皆為 2 套光罩。實驗結
果將與隨機動態規劃進行相比，並以與 SDP 最佳解的差異比例(Solution Gap、Performance 
Gap)、搜尋狀態空間(Explored State Space)、產能擴充解的差異程度(Policy Difference)、運算
時間(CPU Time)為績效，其中 Policy Difference之計算方式如式( 30 )，實驗結果如表 14所示。 
     ∑
1
2=
Dimension
ADPRTSDP )S-S(ifferenceDolicyP  ( 30 ) 
 
表 14 即時近似動態規劃模擬實驗之績效結果 
 
In-Sample Measurements Out-of-Sample Measurements 
  
Optimal 
Reward 
Solution 
Gap 
States 
Explored 
% of Space 
Explored 
CPU 
Time (sec) 
Average 
Profit 
Performance 
Gap 
Policy 
Difference 
SDP 119,885,311   1,180,980   3353 116,273,848   
k-ADP  
Avg  119,865,518 0.29% 555 0.05% 46 116,224,480 0.042% 1.245  
Max  120,961,400 0.90% 598  0.05% 51  116,273,848 0.000% 0.000  
Min  118,528,944 1.13% 501  0.04% 42  116,166,662 0.092% 2.000  
R-ADP 
Avg 
     
116,211,860 0.053% 2.370 
Max 
     
116,221,340 0.045% 2.279 
Min 
     
116,201,474 0.062% 甲、  
   
 由表 14可得知，在樣本內實驗中，k-ADP執行 10次的結果中，與 SDP最佳解的差異平
均為 0.29%，且僅搜尋平均 0.05%的整個狀態空間即可找到與 SDP相似的最佳解，大量減少
運算的次數，且僅耗費 1.3%的 SDP執行時間。而在樣本外實驗部分，k-ADP與 R-ADP所得
之平均利潤與 SDP只有約 0.04%與 0.05%之差距，且 k-ADP在最好的狀況下可找到與 SDP
相同的最佳產能擴充決策。 
 
 因子環境探討 
  本實驗使用同 5.1小節情境之實務案例，將探討的因子包含各產品族之邊際利潤(prkt)、
各產品族的附屬設備起始產能(caikt)、產能擴充成本(ecikt)、與各需求狀態的移轉機率
(p(ξt+1|ξt))。在所探討的四個數據因子中，產能擴充成本、各產品族之邊際利潤與各產品族的
附屬設備起始產能分別探討高與低 2種情形，而需求狀態的移轉機率則探討平均、走頹與積
極 3種情形，如表 15所示。四因子進行交互組合後，共在 23×3=24種環境下探討 k-ADP與
R-ADP之求解的效率與品質。 
 43 
 
 
 Large Scale Problem求解 
 在動態規劃求解的問題中，影響狀態和決策空間中的變數數量之關鍵因素為廠區數和產
品數，增加任一廠區或產品，導致狀態和決策變數呈指數性增長，使得 SDP無法在有限時間
內求解的情況。因此本研究將問題的狀態空間放大，以下將探討五個不同狀態數量層次的問
題，驗證本研究所提出之模型可在有限時間內進行求解，可有效節省耗費之資源，SDP、k-ADP
與 R-ADP之執行運算時間如表 17所示。其中，第 3個實驗的 demand states為 Non-identical 
demand，意指在每個規劃期間所有產品的需求狀態並非一致的，且各產品的需求狀態移轉機
率不相同。舉例而言，H代表高需求，M為中需求，L為低需求，舉例而言，H代表高需求，
M為中需求，L為低需求。第 t期的需求狀態為(H,H,H,H,H)，每一個 H代表每一個產品族的
需求狀態。假設移轉到第 t+1期的需求狀態為(M,H,H,H,M)，代表只有第 1和第 5個產品族為
中需求(M)，其餘第 2、3和 4產品族為高需求(H)，因此該實驗擁有的狀態數量為第 2個實驗
的 81倍。 
 
表 17 不同的問題大小下之 SDP、k-ADP與 R-ADP之執行效能 
Experiment 
Number 
Problem Size 
(Site, Product, Period, 
demand states) 
State 
Space 
Action 
Space of 
each State 
Computational 
Complexity 
Calculation Times (sec.) 
SDP k-ADP R-ADP 
1 (2,2,4, Identical) 96 16 486 3 1 30 
2 (2,5,6, Identical) 1.18×106 7.87×103 7.00×106 3,353 46 28,920 
3 (2,5,6, Non-identical) 9.57×107 7.87×106 5.67×108 262,656 25,760 114,008 
4 (3,6,6, Identical) 7.75×109 5.17×108 1.18×1013 >1 week 5,036 116,812 
5 (3,7,6, Identical) 2.09×1011 1.39×1010 2.54×1015 >1 week 13,896 201,600 
 
 當隨著規劃的廠區與產品增加後，問題所涵蓋的狀態與決策空間隨之成長，在 SDP模型
中所須的運算複雜度大幅增加，如圖 34所示，使得所需的計算時間也隨之增加，如圖 35所
示。在同一實驗下，三種模型中，以 k-ADP的求解速度最佳，其中，SDP模型至第 4個與第
5個實驗時在有限的一週時間內已無法求得產能擴充最佳路徑，但若使用 k-ADP與 R-ADP模
型進行求解，則可在約三天的時間內求得一近似最佳解。 
 
 45 
 
得到較高的利潤。 
(5) 透過觀察 90%VaR可得知，在 90%的信心水準之下，隨機動態規劃模式在最差的情況下
所求得的利潤會比二階隨機規劃佳，表示在可容忍的信心水準之下，隨機動態規劃所求
得的最小利潤會比二階隨機規劃所求得的最小利潤高，可降低風險與增加更多的利潤。 
 延伸第一年計畫成果，為縮短求解空間與時間，本研究第二年計劃提出近似動態規劃
(Approximate Dynamic Programming Algorithm, ADP)法，結合蒙地卡羅模擬、Heuristics和前
推歸納法(Forward Induction)更有效率地得到最佳的產能分配結果與穩健的產能擴充計劃。本
研究的第二年研究成果可歸納如下： 
(1) 依據第一年計畫研究成果所整理的 TFT-LCD產業產能規劃問題的相關數據，延伸其單
階層多廠區的隨機動態規劃模式，建立近似動態規劃數學模式。 
(2) 在第一年計畫研究成果所應用的實際產業案例中，本研究的近似動態規劃只搜尋 0.01%
的狀態空間即可逼近與第一年計畫研究成果隨機動態產能規劃模式相同的最佳期望利
潤值，CPU Time為隨機動態產能規劃模式的 4.5%。至於文獻中提出的 Rollout 
Approach，在同樣搜尋 0.01%的狀態空間後，逼近的最佳期望利潤值仍與隨機動態產能
規劃模式的結果有 4.41%的 Gap。 
(3) 透過不同大小的產能規劃問題，驗證此研究模式可實際應用於 TFT-LCD產業的產能規
劃問題，其中包含第一年計畫研究成果所應用的實際產業案例，並進一步延伸加入第一
年計畫研究成果未考量的因子─各產品於各期的需求情境並非一致，使得狀態空間數量
增為原本的 81倍。 
 在第二年成果中，本研究直接將近似動態規劃逼近的最佳期望利潤值與隨機動態規劃的
結果進行比較，此方式並未考量現實環境中各種可能出現的需求狀態，而無法達到即時決策
(Real-Time Decision Making)的效果。故本計畫第三年進一步利用蒙地卡羅模擬抽樣樣本外的
各種需求狀態，提出k-NN為基之近似動態規劃(k-Nearest-Neighbor based Approximate Dynamic 
Programming, k-ADP)，以及滾動為基之近似動態規劃(Rolling-Horizon based Approximate 
Dynamic Programming, R-ADP)，以及根據近似動態規劃求得各狀態的最佳決策路徑之最佳產
能擴充決策，以增加求解的有效性與穩健性。本研究第三年的成果歸納如下： 
(1) 依據第一年計劃所整理的 TFT-LCD 產業產能規劃問題的相關數據與單階層多廠區的隨
機動態規劃模式，並延伸吳(2011)所提出之模擬為基之近似動態規劃模型，建立即時近
似動態規劃數學模式，提出 k-NN為基礎之近似動態規劃演算法，以及滾動為基之近似
動態規劃演算法，以達到節省運算資源與即時決策兩大目的。 
(2) 本研究將案例驗證分為樣本內實驗與樣本外實驗，分別驗證提出模式之有效性與決策
規劃之穩健性。透過模地卡羅模擬抽樣多組不同的需求路徑，比較其平均淨利潤值與
決策的差異度(Policy Difference)，以確保不論在何種情境下，本研究所提出之兩模式都
能進行適當的產能擴充決策。 
(3) 在第一年計劃所應用的實際產業案例中，本研究進一步考量各產品於各期的需求情境
並非一致的情形，計算複雜度高達 5.67×108，並衡量 100組樣本外需求情境。在 k-NN
為基之近似動態規劃中只搜尋 0.031%的狀態空間即可逼近朱(2009)隨機動態產能規劃
模式的最佳平均利潤值，且 CPU Time為隨機動態產能規劃模式的 9.81%。而以滾動為
基之近似動態規劃則所需的 CPU Time為隨機動態產能規劃模式的 43.41%即可求得近
似的最佳平均利潤值。 
 47 
 
參考文獻 
[1]  示欣惠，「二階層多廠區產能規劃—以 TFT-LCD產業為例」，國立清華大學工業工程與工
程管理學系碩士論文，2008。 
[2]  朱曉晴，「考量需求不確定性之隨機動態產能規劃—以 TFT-LCD產業為例」，國立清華大
學工業工程與工程管理學系碩士論文，2009。 
[3]  吳蘇容，「模擬為基之近似動態規劃應用在 TFT-LCD產能規劃問題」，國立清華大學工業
工程與工程管理學系碩士論文，2011。 
[4]  林則孟、陳子立、吳蘇容，「模擬為基之近似動態規劃應用在 TFT-LCD 隨機產能規劃問
題」，中國工業工程學會 100年度研討會，2011。 
[5]  卓佳儀，「即時近似動態規劃應用於 TFT-LCD隨機產能規劃問題」，國立清華大學工業工
程與工程管理學系碩士論文，2012。 
[6]  陳韋均，「TFT Array多廠區之產能與產品組合規劃問題」，國立清華大學工業工程與工程
管理學系碩士論文，2006。 
[7]  陳子立、林則孟，2008，「需求不確定下之 TFT-LCD 多廠區隨機產能規劃模式」， 九十
七年度中國工業工程學會年會論文，中原大學。 
[8]  張益菁，「考慮需求不確定之單階多廠產能規劃問題-以 TFT-LCD 產業為例」，國立清華
大學工業工程與工程管理學系碩士論文，2007。 
[9]  楊宗翰，「考量需求與價格相關之隨機動態產能規劃—以 TFT-LCD產業為例」，國立清華
大學工業工程與工程管理學系碩士論文，2010。 
[10]  Ahmed, S, “Semiconductor Tool Planning via Multi-Stage Stochastic Programming”, 
Proceedings of 2000 International Conference on Modeling and Analysis of Semiconductor 
Manufacturing, pp.153-157, 2002. 
[11]  Asl, F. M. and Ulsoy, A. G., “Stochastic Optimal Capacity Management in Reconfigurable 
Manufacturing Systems”, CIRP Annals - Manufacturing Technology, Vol.52(1), pp.371-374, 
2003. 
[12]  Balasubramanian, J. and Grossmann, I. E., “Approximation to Multistage Stochastic 
Optimization in Multiperiod Batch Plant Scheduling under Demand Uncertainty”, Industrial 
Engineering Chemical Research, 43, pp.3695-3713, 2004. 
[13]  Bhatnager, S., Gaucherand, E. F., Fu, M. C., He, Y. and Marcus, S. I., “A Markov Decision 
Process Model for Capacity Expansion and Allocation”, Proceedings of the 38th Conference 
on Decision & Control, pp.1380-1385, 1999. 
[14]  Ceryan, O. and Koren, Y., “Manufacturing Capacity Planning Strategies”, CIRP Annals - 
Manufacturing Technology, Vol.58(1), pp.403-406, 2009. 
[15]  Chen, T. L., Lin, J. T. and Fang, S. C., “A Shadow-Price Based Heuristic for Capacity Planning 
of TFT-LCD Manufacturing”, Journal of Industrial and Management Optimization, 6, 
pp.209-239, 2010. 
[16]  Cheng, L., Subrahmanian, E. and Westerberg, W., “Multi-objective decisions on capacity 
planning and production-inventory control under uncertainty”, Industrial & Engineering 
Chemistry Research, 43, pp.2192-2208, 2004. 
 49 
 
working paper, under review, 2012. 
[31]  Pratikakis, N.E., Realff, M. J. and Lee, J. H., “A Real Time Adaptive Dynamic Programming 
Approach For Planning and Scheduling”, Computer Aided Chemical Engineering, Vol. 21, 
pp.1179-1184, 2006. 
[32]  Pratikakis, N.E., Realff, M. J. And Lee, J. H., “Accounting Risk in Multistage Stochastic 
Problems Using Approximate Dynamic Programming”, 8th International IFAC Symposium on 
Dynamics and Control of Process Systems, pp.153-158, 2007. 
[33]  Pratikakis, N.E., “Multistage Decisions and Risk in Markov Decision Processes : Towards 
Effective Approximate Dynamic Programming Architectures”, Georgia Institute of Technology, 
2008. 
[34]  Pratikakis, N.E., Realff, M. J. and Lee, J. H., “Strategic Capacity Decision-Making in A 
Stochastic Manufacturing Environment Using Real-Time Approximate Dynamic 
Programming”, Naval Research Logistics, Vol.57 (3), pp. 211–224, 2010. 
[35]  Rajagopalan, S., Singh, M. R. and Morton, T. E., “Capacity Expansion and Replacement in 
Growing Markets with Uncertain Technological Breakthroughs”, Management Science, 44(1), 
pp.12-30, 1998. 
[36]  Romauch, M. and Hartl, R. F., “Demand Facility Location with Stochastic Demands”, Lecture 
Notes in Computer Science, 3777, pp.180-189, 2005. 
[37]  Stephan, H. A., Gschwind, T. and Minner S., “Manufacturing Capacity Planning and the Value 
of Multi-stage Stochastic Programming under Markovian Demand”, Flexible Services and 
Manufacturing Journal, Vol. 22, pp 143-162, 2010. 
[38]  Sutton, R. S. and Barto, A. G., Reinforcement Learning, 3rd edition, (The MIT Press, 
Cambridge, Massachusetts, USA). 
[39]  Swaminathan, J. M., “Tool capacity planning for semiconductor fabrication facilities under 
demand uncertainty“, European Journal of Operation Research, 120, pp.545-558, 2000. 
[40]  Swaninathan, J. M., “Tool procurement planning for wafer fabrication facilities: a 
scenario-based approach“, IIE Transactions, 34, pp.145-155, 2002. 
[41]  Wu, C. H. and Chuang, Y. T., “An innovative Approach for Strategic Capacity Portfolio 
Planning under Uncertainties”, European Journal of Operational Research, 207(2), 
pp.1002-1013, 2010. 
 2 
一、參加會議經過 
    此次IAM 2012會議總計四天，約有一百二十餘人與會；總共有來自12個國家198篇文章投稿與
應用創新和管理發展有關論文，經審查後接受來自9個國家的145篇文章於研討會上發表。整個會
議使用帛琉大飯店Palasia Hotel Palau，整體環境非常優美，研討會場外即為飯店所在帛琉之島嶼
克洛群島最熱鬧的市中心。論文發表主要分為上下午共六個場次，連續三天(7/16-7/18)共18場次，
主要以英文的發表方式為主。議程包含受邀、專題研討會，Poster論文展。會議之主題包含：
E-business (ERP, CRM, E-Learning, BPR, etc.)、Environment and energy、Financing and 
commercializing innovation、Healthcare、Human resource management、Human resource management 
issues in innovation、Innovation in services, logistics and supply chain management、Intellectual property 
and knowledge management、Managing collaboration、Marketing、Management information systems、
Project management、Technological innovation, product or industrial innovation、Technology or 
innovation of multinational corporations, regional or organizational innovation、Best practices in 
particular industries、Other relevant topics。 
     
    我主持其中一場次，安排於7/17上午C2場次，同時在該場次由我博班學生邱俊智口頭發表國
科會研究計畫成果「Simulation Optimization-Based Hybrid PSO Application of Resources Allocation 
Problem in Manufacturing Line」，內容主要是論述提出一個新的演算方法架構(Particle swarm 
optimization and optimal computing budget allocation )兩種演算方法的結合，應用在生產製造系統中
隨機性離散型資源分配問題，期望解決在問題為large scale時模擬費時的問題。此篇文章引起在場
學者極高興趣，並當場針對演算法適應性及結果進行討論。在此場次的同時，台科大工管所教授
亦發表一篇對現階段研究甚有啟發性的論文，此論文主要在強調利用設計模擬退火法(simulated 
annealing)求解應用在Open Location Routing Problem(OLRP)及facility location problem問題，此類問
題在deterministic問題就為NP-Hard的問題了，更不用說在實務上此類問題還會存在著randomness
現象，使得問題更複雜化；所以是一個很好的啟發，將可考慮利用本研究所提出之隨機模擬最佳
化，以使求解更有效率。 
 
二、與會心得 
    會場規劃完善，且提供學者學術交流平台，可利用此機會與相關領域的學者交流研究心得。
本次研討會最大收穫則為與管理領域中與會學者相關的研究內容的討論且聽了幾場與本研究相關
領域之論文發表，可供未來研究的方向，並可藉此省思與檢討目前的研究。此會議雖是一國際性
會議，但是參與的人絕大部份是東方面孔的台灣人，外國學者較少參加，是此次會議的一大遺憾。 
 IAM 2012 
International Conference on 
Innovation and Management 
Date: July 15‐18, 2012    Venue: Republic of Palau 
 
 
Acceptance Letter 
 
Dear James T. Lin, Chun‐Chih Chiu, Chao‐Jung Huang: 
 
It  is our pleasure  to  inform you  that your paper has passed  through  the 
review  process  and  been  accepted  by  the  IAM2012.  This  is  the  formal 
acceptance  letter  of  your  paper  submission,  "Simulation Optimization  Based 
Hybrid PSO Application of Resources Allocation Problem in Manufacturing Line” 
(Paper ID: P0200). 
 
Thanks  for your participation and contributing to  IAM2012  in Republic of 
Palau. 
 
 
 
 
 
Sincerely, 
 
 
Kuang Hui Chiu 
Conference Chair 
 
James T. Lin, Chun-Chih Chiu and Chao-Jung Huang 
International Conference on Innovation and Management, Republic of Palau, July 15-18, 2012. 
1. Introduction 
Stochastic optimization problems cannot closed-form the mathematical model in the 
complex system, such as buffer allocation, machine allocation, job sequencing, etc. And then, 
the resource allocation problem is a difficult NP-hard combinatorial optimization problem 
which the performance be estimated in noisy environment.  The performance evaluation is 
often estimated only using simulation by multiple sampling. Chen et al. (2000) presented 
discrete-event systems (DES) simulation is a popular tool for analyzing systems and 
evaluating decision problems since real situations rarely satisfy the assumptions of analytical 
models. While DES simulation has many advantages for modeling complex systems, 
efficiency is still a significant concern when conducting simulation experiments. 
On the other hand, simulation replications only give estimates of the performance of 
each alternative, there is a potential for incorrect selection. And therefore optimizing the 
system performance becomes even more computationally infeasible. The evaluation of 
performance of a design for complex discrete event systems through simulation is usually 
very time-consuming, so many papers have proposed methods to solve the problem. He et al. 
(1992) proposed ordinal optimization (OO) to deal with the optimization problems of discrete 
event dynamic systems, which are always difficult to solve because of the lack of structure, a 
large search space, the stochastic nature of such systems and time-consuming simulation 
evaluation. OO is a technique introduced to attack this difficulty in system design by looking 
at “order” in performances among designs instead of “value” and providing a probability 
guarantee for a good enough solution instead of the best for sure. OO aims to obtain good 
enough solutions with high probability instead of seeking the exactly optimal solution.  
Pan et al. (2006) proposed OO could significantly reduce the computational cost for 
identifying the good-enough solutions, there is still potential for further improvement of 
performance by intelligently determining the number of simulation replications among 
different solutions instead of equally simulating all solutions. Accordingly, Chen et al. (2000) 
proposed the optimal computing budget allocation (OCBA) technique to optimally choose the 
number of simulation replications for all of the solutions to enhance simulation efficiency 
with a given computing budget.  
Due to the large scale problem under uncertainty and the existence of many local optima, 
so to improve efficiency for this problem in which not all the possible solutions can be 
simulated, some simulation optimization procedures have been combined with algorithms. 
Recent years, the study on evolutionary algorithms in uncertain environments has been an 
interesting issue in the international academic fields, especially the research on designing 
effective and robust algorithms. Kuo and Yang (2011) presented many researchers have 
purposed that by integrating optimization algorithms, computer simulation can determine the 
best combination more rapidly and more efficiently. Common optimization algorithms in 
computer simulations are Tabu search, neural network, simulated annealing and genetic 
James T. Lin, Chun-Chih Chiu and Chao-Jung Huang 
International Conference on Innovation and Management, Republic of Palau, July 15-18, 2012. 
2.2 Optimal Computing Budget Allocation 
We consider statistical selection procedures that use only a small number of samples to 
identify the best out of a set of solutions with a high probability. There is a multitude of 
selection procedures in the literature. (Bechhofer et al., 1995) give a comprehensive 
introduction into statistical selection methods. Two-stage procedures use the samples of a 
first stage to estimate means and variances. In the second stage, an additional amount of 
samples is drawn for each candidate solution, each amount depending on the variance and the 
overall required probability of correct selection. Sequential procedures allow even more than 
two stages. Such methods use either an elimination mechanism to reduce the number of 
alternatives considered for sampling, or they assign additional samples only to the most 
promising alternatives. The intuition is to use all available information as soon as possible to 
adjust the further process in a promising way. The most sophisticated sampling approaches 
include the information about variances and the desired probability of a correct selection and 
adjust the overall number of samples accordingly. In this paper, we use a procedure that 
assigns a fixed total number of samples to candidate solutions, but sequentially decides how 
to allocate the samples to different candidate solutions. A recently suggested sequential 
approach that falls into this category is the optimal computing budget allocation (OCBA) 
(Chen et al., 2000). OCBA is based on Bayesian statistics and aims at maximizing the 
Probability of Correct Selection (P{CS}). Then the five steps of OCBA are illustrated as 
follows. 
Step 1: Implement the initial simulation. First, 0n  iterations of the simulation of each 
alternative were performed to acquire the expected value and variance. Based on the 
definition of the question, each design alternatives went through initial simulation 
experiments with simulation times of 0n ( 0n =5,6,…20). 
Step 2: Determine the next iteration simulation budget allocation Δ 
Step 3: The Δ from Step 2 is used to calculate the next simulation time for each alternative 
iteration through the following equation. It is mainly determined by the distance from 
the expected value of the optimal alternative, with greater simulation times for closer 
distance and greater variance. 
( )
( )
 
,1
21
1
2
1
1














=








−
−
=
∑
≠=
+
+
+
+
k
bii i
l
i
b
l
b
ibj
jbi
l
j
l
i
s
NsN
JJs
JJs
N
N
 
where 
1+l
iN , 1+ljN denotes i -th or j -th alternatives’ simulation times in iteration 1+l . 
1+l
bN  denotes the simulation times for the best object in iteration 1+l . 
is , js denotes the standard deviation of the i-th or j-th alternative. 
James T. Lin, Chun-Chih Chiu and Chao-Jung Huang 
International Conference on Innovation and Management, Republic of Palau, July 15-18, 2012. 
 
Fig. 1 PSOOCBA
 
 Flow Chart 
3. Problem description 
A flow-shop production line consists of the serial arrangement of machines or 
work-stations which are linked together by material handling devices that transfer items 
between the machines. In flow-shop-type lines, items pass through all the machines in the 
same sequence and the buffer zones divide the line into stages. The performance of such a 
production line is impaired by variations in the behavior of the stages due to either machine 
failures or processing time variations. The effects of such variations can often be mitigated by 
the use of interstage buffers between machines, which temporarily hold WIP 
(work-in-process inventory). When any stage is under repair on taking too much time to 
process a work piece， the WIP at buffers may enable the production flow to continue along 
the line.  
As shown in Fig. 2, a flow-shop production line which is composed of n machines in 
series and (n - 1) buffers between the machines is the system of our interest in this research. 
This paper considered a manufacturing line consisting of four workstations, three finite-size 
buffers (queues), and an infinite supply of blank parts. The performance index is revenue, so 
if manufacturing line add a buffer capacity, it may cost $5,000, buying a machine, it may cost 
$25,000, and Revenue of selling a product is $100. Here, we are to deal with the ways of 
allocating buffer capacities in this n-machine production line in which the machines are 
James T. Lin, Chun-Chih Chiu and Chao-Jung Huang 
International Conference on Innovation and Management, Republic of Palau, July 15-18, 2012. 
between PSOOCBA and exhaustive method is 99.86%, respectively. Despite PSOOCBA
Table1. Summary of performances in the three methodologies 
 is an 
excellent method, a problem is show in table3. The performance of OCBA, probability of 
correctly selecting (P{CS}), becomes low when the PSO converge, so it couldn’t determine 
the optimal solution in the problem. Currently, the PSO continue iteration through controlling 
the simulation budget or judge the P{CS} in OCBA procedure, when one of these condition 
is satisfied. 
Search method iteration replications optimal Profit 
PSO 5 OCBA 3,520 (3,2,3,3,2,1,2) 125,440 
PSO 5 100*30*5=15,000 (3,2,3,3,1,1,2) 120,200 
Exhaustive method － 81,000*30=2,430,000 (3,2,3,3,2,1,2) 122,980 
 
Table2. Comparisons of replications savings based on PSOOCBA 
Search method iteration Avg. total # of replications Replications improvement gap 
PSO 5 OCBA 3,520 － 
PSO 5 100*30*5=15,000 76.53% 
Exhaustive method － 81,000*30=2,430,000 99.86% 
 
Table3. P{CS} of PSOOCBA 
Search method iteration P{CS} 
PSO 5 OCBA -3.45 
 
Based on this studied, we considered both the search method and the evaluation 
technique in PSOOCBA. It not only applies the population-based searching framework of PSO 
for exploration and exploitation in large designs space, but also applies OCBA to evaluate the 
swarm and identify the good-enough designs, through effect allocation the limited number of 
simulation replications for good particles. Again, PSOOCBA 
 
converges to the optimal solution 
with less simulation replications. 
5. Conclusion 
This paper proposed an effective approach simulation optimization framework that 
combined PSO with OCBA for resource allocation problem optimization in manufacturing 
line. After validation and evaluation of performance, among the three methodologies, PSO, 
PSOOCBA
Although PSO
 and exhaustive method, it has been found to have the best problem-solving effect 
and to reduce the replications. 
OCBA is the best among the three methodologies, some problems still have 
to consideration. PSO features become very similar to each alternative when particles become 
converge. And then, the performance of OCBA, probability of correctly selecting (PCS), 
becomes low, so it couldn’t determine the optimal solution in the problem. 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/23
國科會補助計畫
計畫名稱: 隨機性之產能規劃問題-以TFT-LCD業為例
計畫主持人: 林則孟
計畫編號: 98-2221-E-007-072-MY3 學門領域: 生產系統規劃與管制
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
