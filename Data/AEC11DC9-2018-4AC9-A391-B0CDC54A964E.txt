 
 
1 
 
行政院國家科學委員會補助專題研究計畫 成果報告   
□期中進度報告 
 
 
以雲端服務為導向之Linux虛擬叢集管理 
 
計畫類別：個別型計畫   □整合型計畫 
計畫編號：NSC 100－2221－E－005－065－ 
執行期間： 100年 8 月 1日至 101年 7 月 31日 
 
執行機構及系所：中興大學 應用數學系 
 
計畫主持人：顏增昌 
共同主持人： 
計畫參與人員：蘇己盛、陳家祐、林旺盛 
 
 
 
成果報告類型(依經費核定清單規定繳交)：精簡報告  □完整報告 
 
本計畫除繳交成果報告外，另須繳交以下出國心得報告： 
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
 
中   華   民   國  101 年 10 月 21 日 
附件一 
 
 
3 
服務與應用，實現雲端服務強調的隨需取用與隨處使用的概念。為了掌握機先行政院亦積極推動成立
「台灣雲端運算產業聯盟」，並宣佈 2010 年為台灣雲端運算元年，希望透過產、官、學、研界的力
量，推動台灣成為全球雲端服務整案輸出大國，引領全球雲端運算最新技術與服務的發展。 
    雲端運算的核心來自於虛擬化技術，藉由虛擬化技術提供 SaaS、PaaS、及 IaaS等服務，其中 SaaS
適合以虛擬叢集的方式來提供服務。為了便利虛擬叢集的管理，目前已有 VNUML、MLN、libvirt等部
署虛擬叢集的相關軟體。由於虛擬機器主要由 kernel 及 root filesystem 兩部分組成，為提供一般
使用上的需要，root filesystem通常為客製化，且至少 2GB以上。為了快速部署虛擬叢集，虛擬叢
集管理軟體通常會先產生 root filesystem的樣版(Template)，再由樣版產生使用者所需的檔案系統
(Root filesystem)並進行環境設定、軟體安裝、及系統更新，最後以複製的方式大量製造檔案系統，
以達到快速部署虛擬叢集的目的。以固定的樣版部署虛擬機器，則所架設的虛擬叢集只能執行樣版所
安裝的軟體套件；而當使用者所需的軟體工具與樣板中已安裝者不同時，即使只有些許的差異，如系
統版本、軟體版本等，虛擬叢集管理軟體就需產生新的檔案系統樣版。如此不但浪費實體機器的磁碟
儲存空間，造成管理上的負擔，也提高了樣版的重複性與複雜性。反之，若樣板只做基本安裝，對於
一般使用者而言，由於缺乏系統管理的經驗與軟體安裝的訓練，使用者可能安裝到不必要的程式，造
成系統效能的消耗，或者安裝不當使軟體資料庫(software database)發生錯誤。 
    本計畫實作 VCS(Virtual Cluster for SaaS)虛擬叢集管理平台，使用者只需透過 Web介面點選
所需的虛擬機器數量及所需的軟體，VCS便自動產生客製化的檔案系統並部屬虛擬叢集，以便利使用
者並減輕管理者的負擔。VCS以軟體即服務的概念，建置虛擬叢集環境，不但減少樣版的重複性及複
雜性，也增加虛擬叢集環境的多樣性。此外，由於檔案系統動輒數十 GB，在 VCS 中我們也加入 ceph
分散式儲存系統以加快檔案系統存取的速度並提升系統的效能。 
 
四、研究目的 
    雲端運算自 2006年 8月 9日 Google的執行長 Eric Schmidt 揭櫫了雲端運算的序幕後，2006年
12月 Amazon開始提供 Amazon EC2服務、2008年 1月 Salesforce的 Force.com開始上線、2008年 4
月 Google的 Google App Engine登場、及 2008年 10月Microoft的Windows Azure也如雨後春筍般地
相繼發表端運算已是 IT 產業不可逆的主流趨勢。而雲端運算的核心技術為虛擬化技術，以虛擬叢集
提供 SaaS 服務，則是雲端運算最重要的應用。本計畫開發 VCS虛擬叢集管理系統，透過 web介面提
供使用者在任何時間、任何地點依其需求取得客製化的隨選服務(On-demand service)，同時對 CPU、
memory、及 I/O等計算資源可以依照使用者的實際需要動態調整提供 QoS的服務。本計劃之主要目的
如下： 
1.探討雲端運算與叢集計算的差異以開發雲端服務導向的虛擬叢集管理系統； 
2.分析 Linux 虛擬機器的檔案系統，探討 filesystem template hierarchy 的設計，以加速虛擬
叢集的部屬； 
3.探討雲端服務的架構以設計虛擬叢集描述語言； 
4.以 ceph分散式儲存系統，提升雲端運算之可靠性及擴充性； 
 
五、相關研究 
    擬化技術依其架構可概分為半虛擬化技術 (Paravirtualization)與全虛擬化技術 (Full 
Virtualization)。半虛擬化技術此技術不會模擬所有的硬體裝置，但需修改虛擬作業系統(Guest OS)
的核心，利用 HyperVCSor 進行管理虛擬機器及以特殊主作業系統直接對硬體發送指令，所以有較好
 
 
5 
    製作一個檔案系統如同安裝實體機器一般，可藉由光碟機裝機或者經由網路裝機，然而從實體機
器的角度，檔案系統就是一般檔案，透過複製的方式，快速的產生一份相同的檔案，對虛擬機器的來
說，就像是快速產生一台相同設定、軟體套件與內容的虛擬機器，而被複製的檔案系統就稱為”樣
板”(template)。透過樣版，使用者可以節省安裝作業系統與軟體的時間。複製樣版所產生的檔案系
統，並不能真正完全運作，因為網路設定、機器名稱等尚與樣板相同，如果同時啟動可能會造成 IP
衝突，使用者將無法登入及使用所需的虛擬機器。因此，我們必須對檔案系統做一連串的設定，以確
保檔案系統可以正常運作。 
    VCS產生檔案系統的步驟如下： 
1. 取出 XML描述檔內的參數。 
2. 確認節點是否存在樣板，假如不存在則向主控端詢問，主控端存在樣板則透過 ssh 傳送到節
點上；若主控端不存在所需樣板時則回傳錯誤。 
3. 複製樣板，並改名為 XML所指定的參數值。 
4. 產生掛載點，掛載新的檔案系統。 
5. 修改檔案系統設定與安裝軟體套件。 
6. 卸載檔案系統及刪除掛載點。 
 
2. 套件管理 
不同需求的使用者，對樣板也有不同的需求，例如：軟體工具、套件版本、編譯器類型等。因此，
多種版本的樣板可以給予使用者更多的選擇，但是過多的樣板，不但對管理者造成負擔、占據實體機
器的硬碟空間，對使用者也造成困擾。VCS 對於檔案系統的產生上不僅提供選擇樣版的選項，並增加
套件清單的項目。樣板搭配套件清單(T&P-Templates & Package list)的組合可讓使用者有更多的選
擇，也減少樣版的複雜性及重複性。圖 1.為 VCS與其他虛擬叢集管理工具產生檔案系統方式的比較，
其中圖左為一般的產生方式，圖右為 VCS的產生方式。 
 
 
 
 
 
 
 
圖 1、產生檔案系統方式的比較： 
 
3. 叢集管理 
VCS將叢集的管理分成實體機器、虛擬機器、虛擬叢集三部分。 
1. 實體機器管理－VCS使用主從式架構，使用者可以登入主控端使用文字模式來操作叢集環境，
也可以使用一般瀏覽器，透過網頁模式來操作叢集環境。為了快速部署虛擬叢集及方便軟體
上的維護，當虛擬機器需要作大量更新時，VCS 自動增加映射伺服器，而不必經由網際網路
的途徑來進行 upgrade。 
 
 
7 
3. Monitor：叢集監控模組。 
ceph的安裝過程如下： 
1. 安裝套件 
$ sudo aptitude install ceph 
$ sudo mkdir -p /srv/ceph/{osd,mon,mds} 
2. 系統設定 
   $ sudo emacs /etc/ceph/ceph.conf 
[global] 
    auth supported = cephx 
    keyring = /etc/ceph/keyring.admin 
    log file = /var/log/ceph/$name.log 
    pid file = /var/run/ceph/$name.pid 
[mon] 
    ;; sudo mkdir /srv/ceph/mon /srv/ceph/osd 
    ;; sudo mkdir /srv/ceph/mon/mon.$id 
    mon data = /srv/ceph/mon/mon.$id     
[mds] 
    keyring = /etc/ceph/keyring.$name 
[osd] 
    ;; sudo mkdir /srv/ceph/osd/osd.$host 
    ;; sudo mount -t btrfs /dev/sdb /srv/ceph/osd/osd.$host 
    osd data = /srv/ceph/osd/osd.$host 
    osd journal = /srv/ceph/osd/osd.$id.journal 
    osd journal size = 1000 ; journal size, in megabytes 
    keyring = /etc/ceph/keyring.$name 
 
[mon.scss] 
    host = Storage-Server 
    mon addr = 140.120.8.250:6789 
 
[mds.scss] 
    host = amm-Server 
 
[osd.0] 
    host = amm-Server 
[osd.1] 
    host = amm-Client01 
[osd.2] 
    host = amm-Client02 
[osd.3] 
    host = amm-Client08 
 
 
9 
七、計畫成果 
雲端的興起帶來新的資訊環境，人們可以不用在個人電腦上執行軟體或程式，而透過網際網路來
遠端操作或以 SaaS 所提供虛擬環境來操作軟體，使得個人電腦成為與雲溝通的端點。藉由雲端的概
念，以虛擬化技術架構虛擬叢集環境來提供軟體上的服務或高效能運算的平台，不僅可節省硬體支出、
減少機房空間、減輕軟硬體維護負擔，更能節能省碳以符合綠能概念。 
在虛擬叢集的管理上，VCS 將使用者所需的軟體及環境先行部署，除了方便使用者快速的使用虛
擬叢集內的資源，並可根據使用者不同工作量的需求，來動態的調整所需的資源環境，半自動化的整
合虛擬叢集平台，減少使用者在虛擬叢集環境的繁瑣檔案設定。VCS 以 XML 為系統環境描述語言，
透過 XSLT可輕易將其移轉到其它使用 XML的雲端管理系統，如 openStack。VCS也是用 XLink技術
來描述內部結構，以簡化虛擬叢集間的複雜連結關係。檔案系統樣版及套件清單的結合，減少樣板的
複雜性及重複性，並提高檔案系統的多樣性與使用者的自由度，來實踐 SaaS服務。 
 
 
 
 
 
2 
二、與會心得 
本人除了在Soft Computing session發表論文外，還參加Mobile & Wireless Broadband及System and 
Applications等sessions，這些新的input引發了我的研究視野，也感謝國外學者提供相關文獻供我參考，
並交換e-mail俾利日後連繫。在這次的研討會中，瞭解許多不同領域之最新研究方向，以及認識許多
相關領域的研究學者專家，可謂是此行最大之收獲。 
三、考察參觀活動(無是項活動者略) 
四、建議 
    參加國際學術研討會可以訓練表達、臨場反應及應對的能力，建議應多鼓勵研究生及學者多
參加這些國外所舉辦的國際會議，以拓展視野。 
五、攜回資料名稱及內容 
  大會議程及論文集。 
六、其他 
  感謝國科會提供經費補助，使我能有此機會參與國際會議。 
Provision of Load-balanced Linux Packages  
Mirror Service in Private Cloud
Tseng-Chang Yen 
Department of Applied Mathematics 
 National Chung-Hsing University 
250 Kuo-Kuang Rd., Taichung, Taiwan 402 
tcyen@amath.nchu.edu.tw 
 
Pei-Yuan Tang 
Department of Computer Science and Engineering 
 National Chung-Hsing University 
250 Kuo-Kuang Rd., Taichung, Taiwan 402 
pytang@cs.nchu.edu.tw 
 
Abstract— In this paper, we develop LMSS(Load-balance Mirror 
Service System) by using LVS to monitor the connection of the client, 
and MLN to dynamically deploy the virtual machine so as to 
establish mirror service cluster, thus ensuring the quality of mirror 
service. Besides, we also use tunnel technology to make the mirror 
servers deployed in different areas integrate as a single-entry virtual 
mirror cluster. In addition, we use a filtering mechanism of 
iptables mangle to assign near mirror servers to offer service 
according to the source location of the client, reaching load balance 
of the server when it meets vast update needs of Linux package. The 
demonstration has shown that our method can reduce 25% of the 
average download time. 
Keywords-private cloud; Linux server; mirror service; load balancing 
I.  INTRODUCTION  
The need of using Linux open source cloud management 
tool, such as UEC[1] and OpenNEbula[2], to establish private 
cloud so as to offer internal service has risen. To enhance the 
efficiency and security of the Linux system, regularly updating 
software packages and upgrading the kernel version of the 
system is needed. The major issued versions of Linux also 
supply convenient package management systems, such as yum 
of RedHat and synaptic of Debian, thus simplifying the work 
of managing packages. Since the data center of the cloud 
environment is composed of numerous real machines and 
virtual machines that offer service, when the system 
administrators or users want to execute updates or to install 
software packages, it can be foreseen that the appointed mirror 
site set formerly in /etc/apt/source.list would bring 
about network jam and influence the clients’ connection quality 
due to excessive download requests from the machines in the 
environment.  
This paper will discuss that, through IaaS, how we can 
establish network package mirror service virtual cluster and 
dynamically deploy virtual machines according to the 
connection needs of the clients’ updates, ensuring the quality of 
package mirror service. We use MLN[3-5] to deploy the mirror 
service virtual machines in networks in different areas quickly, 
thus becoming convenient for the administrators to manage and 
dispatch resources. Furthermore, we use LVS[6](Linux Virtual 
Server) to integrate virtual machines deployed in various 
network areas into single-entry mirror service virtual clusters, 
and to monitor the source and connection quantities of the 
client. We use iptables mangle to filter the IP site of the 
source, thus dispatching nearby mirror service virtual clusters 
to complete the request of updates. This architecture can 
prevent the phenomenon of network jam caused by excessive 
system load, which results from the massive rise of the need of 
connection numbers in the environment. Hence, downloading 
time can be efficiently reduced, and the client is able to receive 
faster and more stable mirror service. 
II.  CLOUD COMPUTING 
From the perspective of the clients, on-demand self-service 
and ubiquitous network access are the main features of the 
cloud; the reason is that we can use the service offered by the 
cloud supplier, regardless of the related details about hardware 
facilities. Concerning technology, cloud computing can 
accomplish fast deployment, dynamic resource dispatch, 
enhanced resource utility rate, and reduced energy 
consumption through using virtualization technology.  
A. Cloud Deployment Model and Services 
The three possible cloud deployment models include public 
cloud, private cloud, and hybrid cloud. Public cloud is the 
cloud environment in which users rent the service provided by 
the cloud supplier, and use with other users or businesses. 
Considering security and internal needs, private cloud is the 
cloud environment established in private network, only 
offering usage in the internal environment rather than open to 
the public. Hybrid cloud is the cloud environment that 
combines the deployment of public cloud and private cloud. 
Cloud computing providers offer their services according to 
three fundamental models: IaaS, PaaS, and SaaS. IaaS offers 
users to rent infrastructures like virtual host,  storage, and etc., 
with Amazon EC2 being this type of service. PaaS lets users 
need not establish hosts and operating systems themselves, so 
as to concentrate on programming development. One of its 
famous instances is Google App Engine provided by Google. 
In SaaS, users can access to the software service regardless of 
time and location through the Internet, such as Google Map. 
B. Cloud Administration Tools 
The main purpose of cloud administration tools is to assist 
users to establish and deploy private cloud environments fast, 
and offer related instructions or web-based management tools. 
Due to the request for establishing private cloud from 
businesses and academic communities, several Linux-based 
open source private cloud administration tools are developed, 
such as Enomaly ECP[10] (Elastic Computing Platform),  MLN, 
UEC(Ubuntu Enterprise Cloud), and OpenNEbula[2]. 
Offering the real network service, such as WWW. 
When LVS uses the ipvsadmto command to execute 
management work, the setting mode can be divided into the 2 
types as follows: 
(1) Director  mode: 
#ipvsadm –A|E –t|u|f service-address 
[-s scheduler] [-p timeout] [-M netmask] 
(2) Real Server mode: 
 #ipvsadm –a|e –t|u|f service-address 
-r server-address [g|i|m] 
[-w weight] [-x upper] [-y lower] 
IV. SYSTEM IMPLEMENTATION  
The implementation environment of the system is shown in 
Figure 3. Real hosts ac12 and ac10, located in Lab 511 in 
Information Science Building, are Debian squeeze systems 
with AMD Athlon™64*2 Dual Core Processor 4600+ CPU 
and 4GB memory. Real host SNMLab-178, located in Room 
702b in Science Building, is Debian squeeze system with 
Athlon™ΙΙx2 240 CPU and 4GB memory. Each virtual 
machine is also Debian squeeze system equipped with 1G 
memory, and 70G image file. The implementation of LMSS 
can be divided into private cloud deployment system and LVS 
load balancing system, and we will discuss them in detail in 
the next two subsections. 
A. The Private Cloud Deployment System  
We use KVM[16] (kernel-based Virtual Machine) to create 
a virtual machine image file, and then install both apt-get 
mirror and apach2 packages in this image file to provide 
mirror service. When MLN deploys virtual clusters, it has to 
set relative parameters in the deployment environment by the 
MLN Language. Our system augments MLN by using KVM to 
establish  virtual clusters; this  MLN-based management tool is 
called as KMLN. KMLN adopts Copy-On-Write(COW) 
methods to establish virtual machines that offer mirror service 
quickly.  
B. LVS Load Balancing System 
As is shown in Figure 3, real machine ac12 is the frontend 
of LVS-director. Install the ipvsadm package in ac12, and 
use VS/TUN , one of the 3 IP load balance modes of LVS, as 
the forwarding mechanism to combine mirror sites in different 
LANs. The virtual machines offering service in the backend 
only have to set the IP of director ac12 as the router. The 
delivery method of VS/TUN is that director forwards the 
requests it receives to the servers that offer mirror service in the 
backend, according to the default algorithm; when the server 
responds to the requests, the respond can be sent to the client 
through an independent route without the forwarding of 
director. In the LMSS architecture, ac10 and ac12 belong to 
the same domain. When director ac12 receives a request from 
the client, it can directly dispatch this request to the virtual 
machines established on ac10 to offer mirror service. Since 
SNMLab178 and ac12 belong to different LANs, the virtual 
machines established on real machine SNMLab178 cannot 
directly communicate with ac12. Hence, it cannot receive the 
client’s request forwarded by director ac12. To solve the 
problem stated above, we use the Linux system tunnel 
technology to establish virtual routes, which can dispatch the 
clients’ requests that ac12 receives to the virtual machines 
established on SNMLab178, thus offering mirror service.  
Figure 3. The deployment of LMSS 
C. IPtables Mangle 
iptables is a user space application program that allows a 
system administrator to configure the tables provided by the 
Linux kernel firewall and the chains and rules it stores. In the 
Linux system, iptables can analyze the headers of IP packets, 
such as the type and the flow of the packets, the source and 
destination of IP and port numbers, and the network card 
interface through which the packets enter. There are 3 types of 
built-in rule table, which are filter, nat and mangle. LMSS uses 
mangle rule table of iptables to filter the source location of the 
client, with the purpose to select mirror servers in the same 
domain to offer service. Therefore, on the PREROUTING rule 
chain of iptables mangle, for particular IP source location 
(140.129.15.0/24), types of service request (tcp, port) and 
destination IP 140.120.8.112, the mark is set to be 1. The 
setting method is as follows: 
# iptables –t mangle –A PREROUTING 
-s 140.120.15.0/24 –d 140.120.8.112 
-p tcp - -dport 80 –j MARK- -set-mark 1 
LMSS uses ac12 as the LVS director, and it uses the IP 
address 140.120.8.112 of ac12 as the single entry location of 
the mirror service cluster. In ac12, we have to setup all relative 
information about mirror servers, and the setting method are as 
follows: 
(1) enable forwarding: 
# echo 1 >  /proc/sys/net/ipv4/ip_forward 
(2) LVS configuration: 
# ipvsadm –A –t 140.120.8.112:80 -s rr 
# ipvsadm –a –t 140.120.8.112:80 
  -r 192.168.0.100:80 –i 
# ipvsadm –a –t 140.120.8.112:80 
-r 192.168.0.101.80 –i 
(3) The LVS-director adopt default load balance algorithm 
(Round Robin) to dispatch the backend mirror servers to 
offer downloads. To let the clients with mark value, as 
mentioned in section IV.B, use particular mirror servers to 
  
Figure 6. Distributed multiple mirror service 
 
Figure 7. Average download time for distributed mirror service 
VI. CONCLUSION 
The convenience of cloud computing has made more and 
more businesses and research organizations to put efforts in 
establishing private cloud due to the consideration of security 
and requirement. The information center established by private 
cloud is composed of numerous real machines and virtual 
machines that could be located in different local area networks. 
It is certainly not simple to efficiently update the Linux system 
and to serve fast requests of downloading packages. 
LMSS uses private cloud to establish mirror service 
systems with load balance, uses MLN to quickly deploy mirror 
service virtual machines on different local area networks, and 
uses IPIP tunnel technology and LVS to combine into mirror 
service virtual clusters with single entries. In our experiment in 
the concentrated single area, the results have showed that, with 
the rising of the client number, using cluster servers to offer 
package downloads reduced 20% of the average time needed 
compared with a single server. In the experiment conducted in 
distributed multiple areas, the results indicates that, iptables 
mangle, used by the system to establish filter mechanism and 
to offer mirror servers in the same area, allows the client to 
acquire nearby mirror service to attain global load balance. 
Thus, the average download time of the client has decreased by 
25%, which not only efficiently solved the problem of network 
jam, but also offers stable and fast service. 
REFERENCES 
[1]  UEC, Available from: 
https://help.ubuntu.com/community/UEC , April 2011. 
[2]  OpenNEbula, Available from: 
http://opennebula.org/ ,April 2011. 
[3] Kyrre, B.a.J.S. ,”MLN,” Available from: 
http://mln.sourceforge.net/index.php ,April 2011. 
[4] Kyrre M Begnum “Managing Large Networks of Virtual 
Machines,” USENIX Association Berkeley, pages 16 – 16, 2006. 
[5] Begnum, K., N.A. Lartey, and L. Xing, “Cloud-Oriented Virtual 
Machine Management with MLN,” CloudCom 2009, p. 266-
277,2009. 
[6] Zhang, W. “Linux Virtual Server,” Available from: 
http://www.linuxvirtualserver.org ,April 2011. 
[7] Armbrust, M., et al., “Above the clouds: A Berkeley view of 
cloud computing,” Tech. Rep, UCB/EECS-2009-28, EECS 
Department, U.C. Berkeley, Feb 2009. 
[8] Cerbelaud, D., S. Garg, and J. Huylebroeck, “Opening the clouds: 
qualitative overview of the state-of-the-art open source VM-
based cloud management platforms,” Springer-Verlag New York, 
Inc. ,2009. 
[9] Cordeiro, T., et al., “Open Source Cloud Computing Platforms,” 
in Grid and Cooperative Computing (GCC), 2010 9th 
International Conference on 2010. 
[10] Enomaly, Available from: http://www.enomaly.com , 
April 2011. 
[11] Xen, Available from: http://xen.org/ ,April 2011. 
[12] UML, Available from: http://user-modelinux. 
sourceforge.net/ ,April 2011. 
[13] VMware, Available from: 
http://www.vmware.com/ ,April 2011. 
[14] Eucalyptus, Available from: 
http://www.eucalyptus.com/ ,April 2011. 
[15] Hybridfox, Available from: 
http://open.eucalyptus.com/wiki/hybridfox,April 2011. 
[16] KVM, Available from: http://www.linuxkvm. 
org/page/Main_Page ,April 2011. 
[17] Tseng-Chang Yen, Shang-Juh Kao and Felix Hsu, “XLCMS — 
A Scalable and Distributive Linux Virtual Cluster Management 
System”, In Proceedings of The International Conference on 
Information Networking 2009, Chiang Mai, Thailand, January 
21-24, 2009. 
[18] Tseng-Chang Yen, “The Management of Linux Virtual 
Lab by Dual Load-Balancing”, In Proceedings of The 
40th International Conference on Computers and 
Industrial Engineering, Kobe, Japan, July 25-28, 2010. 
[19] Ian Foster, Yong Zhao, Ioan Raicu and Shiyong Lu, “Cloud 
Computing and Grid Computing 360-Degree Compared”, Grid 
Computing Environments Workshop, 2008. 
100年度專題研究計畫研究成果彙整表 
計畫主持人：顏增昌 計畫編號：100-2221-E-005-065- 
計畫名稱：以雲端服務為導向之 Linux 虛擬叢集管理 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 2 2 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
