matching problem is based on filling out an 
(m+1)*(n+1) dynamic programming matrix and therefore 
needs O(mn) time.  So far, the performance of this 
dynamic programming method has been further improved 
many times using several different approaches.  One 
thread of these approaches is the so-called bit-
parallel algorithms that exploit the hardware 
parallelism of bit-vector operations to speed up 
their performance.  If all the edit operations of 
insertions, deletions and substitutions are allowed, 
the bit-parallel algorithm proposed by Myers in 1999 
is one of the best current algorithms for the 
approximation string matching problem and its time 
complexity is O(mn/w), where w is the computer word 
size.  In practical applications, however, the bit-
parallel algorithms often suffer from a serious 
problem that the pattern length is limited by the 
computer word size.  Currently, it is still a 
challenge how to make the bit-parallel algorithms to 
deal with long patterns in a more efficient way.  In 
this project, introduced five general logical 
operation problems and also designed their bit-
parallel algorithms.  Finally, we used two of the 
five bit-parallel algorithms to solve the approximate 
string matching problem such that the length of the 
pattern string can be longer than the computer word 
size. 
 
英文關鍵詞： Approximation String Matching； Pattern Recognition； 
Computational Biology； Dynamic Programming； Bit-
Parallel Algorithm； Logical Operation 
 
 2 
中文摘要 
關鍵詞：近似字串比對；樣本辨識；計算生物；動態規劃；位元平行計演算法；邏輯運算 
 
在傳統的字串演算法裡，近似字串比對是主要的問題之一，因為它可應用在許多不同的地方，包括文
章搜尋、字串辨識與計算生物等等。給定一個全文字串 ntttT 21= 與一個樣本字串 mpppP 21= ，
近似字串比對問題的目的是要去尋找全文字串裡所有的位置使得結束在這些位置的子字串都與樣本字
串之間的編輯距離小於或等於一個事先給定的錯誤邊界值 k，或者同等於對全文字串裡的每一個位置
i，去找出 ),1( iT 的字尾使得這個字尾與樣本字串之間的編輯距離小於或等於 k，其中 itttiT 21),1( = (即
T 中長度為 i 的字首)。傳統解決這個近似字串比對問題的方法就是利用一個動態規劃演算法去填寫一
個大小為(m+1)×(n+1)的矩陣，因此需要 O(mn)的時間複雜度。到目前為止，這個動態規劃演算法的執
行效能已經被利用許多不同的方法加以改進了許多次，其中之一便是所謂的位元平行演算法，它是利
用硬體上位元向量運算的平行特行來加速執行效能。如果同時允許插入、刪除與替換這三種編輯指令
的話，那麼Myers在 1999年所提出的位元平行演算法是目前最好的之一，其時間複雜度為 O(mn/w)，
其中 w為電腦字的長度。然而，在實際的應用上，位元平行演算法經常得飽受一個嚴重的問題，那就
是樣本字串的長度得受限於電腦字的長度。在這個計畫中，我們介紹了五種常見的邏輯運算問題，同
時也設計出他們相對應的位元平行演算法，最後我們再利用其中二種位元平行演算法來解決近似字串
比對問題使得樣本字串的長度可以超出電腦字的長度。 
 4 
前言 
近似字串比對演算法的定義如下：給予一個全文字串  ntttT 21= 與一個樣本字串
mpppP 21= ，近似字串比對問題的目的是要去尋找全文字串裡所有的位置使得結束在這些位置的子
字串都與樣本字串之間的編輯距離小於或等於一個事先給定的錯誤邊界值 k [WM92、Gus97、LTC+05、
Lee10]。解決這個問題的經典方法是 Seller [Sel80]所提出的動態規劃演算法去填寫一個(m+1)×(n+1)的
矩陣，所花費的時間複雜度為 O(mn)，Landau和 Vishkin [LV89]也對此演算法提出了改進方法，使得時
間複雜度降到 O(mn/k)，近年來，由於電腦特性的發展，使用位元來來解決問題的方法相當受到重視，
Myers在 1999年提出了使用位元平行計算的方式[Mye99]來填寫 Seller所建立的二維矩陣，使得時間複
雜度降到 O(mn/w)。 
一、 研究目的 
Myers的位元平行計算演算法[Mye99]是目前解決近似字串比對問題最有效率的方法之一，但是位
元平行計算演算法也使得原本的問題遇到了新的挑戰，若樣本字串的長度大於電腦字的長度，我們的
演算法就必須對樣本字串做分割以及事後的接合，這些動作都會增加演算法的時間複雜度。如何不增
加原本演算法的負擔，就變成了很重要的議題。在我們的計畫當中，我們不額外去做一些多餘的運算，
而是把Myers演算法的公式加以推導，使得Myers演算法也可以有效率地使用在樣本字串較長的實驗
當中。 
二、 文獻探討 
給予一個字串 maaaA 21= ，我們定義 ),( jiA 是其中位置由 i到 j的一個子字串。Seller [Sel80]提
出的傳統解決近似字串比對問題的方法是去計算一個(m + 1)×(n + 1)的動態規畫矩陣 c(0…m, 0…n)。定
義 )(iS 是 ),1( iT 的一個字尾，它和 ),1( jP 的編輯距離是所有 ),1( iT 的字尾群中最小的。接下來我們定義
),( jic 是 )(iS 和 ),1( jP 的編輯距離。在 Sellers所提出的演算法中， ),( jic 可由以下的公式給計算出來： 
 



−−−−+=−−=
==
))1,1(),1,(),,1(min(1)()1,1(),(
),0(,0)0,(
jicjicjicelseptifjicjic
jjcic
ji
 (1) 
舉例來說，如果 accgatT = 以及 aaacgaP = ，使用以上的公式，我們可以建立一個動態規劃矩陣
如下圖。 
 
 i 0 1 2 3 4 5 6 
j  T a c c g a t 
0 P 0 0 0 0 0 0 0 
1 A 1 0 1 1 1 0 1 
2 A 2 1 1 2 2 1 1 
3 A 3 2 2 2 3 2 2 
4 C 4 3 2 2 3 3 3 
5 G 5  4 3 3 2 3 4 
6 A 6 5 4 4 3 2 3 
 6 
( )1, −∆ jih
( )jih ,∆
( )jiv ,1−∆ ( )jiv ,∆
),( jic
)1,( −jic)1,1( −− jic
),1( jic −  
圖 4: c(i, j)以及其三個鄰居 c(i, j-1)，c(i-1, j)和 c(i-1, j-1) 
到目前為止， h∆ 和 v∆ 所包含的值為 1, 0 和-1，為了能夠使用位元運算，我們必須把 h∆ 和 v∆ 轉
為 Boolean的形式如下所示： 
 
)1),((),(
)1),((),(
)1),((),(
)1),((),(
−=∆≡
+=∆≡
−=∆≡
+=∆≡
jihjimh
jihjiph
jivjimv
jivjipv
 (2) 
以及我們令 1),( =jieq 如果 ji pt = ，否則 0),( =jieq 。同樣的，我們可以把以上的這些定義都用矩
陣的方式表示如下： 
 )),(,),2,(),1,(()( mipvipvipviPV =  
 )),(,),2,(),1,(()( mimvimvimviMV =  
 )),(,),1,(),0,(()( miphiphiphiPH =  (3) 
 )),(,),1,(),0,(()( mimhimhimhiMH =  
 ( )),(,),2,(),1,()( mieqieqieqiEQ =  
根據公式(1)和我們的假設，我們可以獲得以下新的公式： 
 c(i, j) = min{ c(i－1, j－1) + (1－eq(i, j)), c(i－1, j) + 1, c(i, j－1)+1} (4) 
我們再把公式(4)替換到 h∆ 和 v∆ 的定義中獲得以下的公式： 
 ( ) { } ))1,(1()1,(),,1(),,(, −∆−+−∆−∆−=∆ jihjihjivjieqminjiv   (5) 
 ( ) { } )),1(1()1,(),,1(),,(, jivjihjivjieqminjih −∆−+−∆−∆−=∆   (6) 
Myers證明了 ),( jipv 可由平行計算的方法如下： 
 ))1,(),1(),(()1,(),( −−¬−= jiphorjimvorjieqorjimhjipv   (7) 
同理，可求得以下公式： 
 )),1(),(()1,(),( jimvorjieqandjiphjimv −−=  (8) 
 )),1()1,(),((),1(),( jipvorjimhorjieqorjimvjiph −−¬−=  (9) 
 ))1,(),((),1(),( −−= jimhorjieqandjipvjimh  (10) 
而 PV, MV, PH和 MH最後推導可用以下的公式求得： 
 PH(i) = MV(i-1)| ~(((EQ(i) and PV(i-1)) + PV(i-1)) xor PV(i-1)) or EQ(i) or PV(i-1)) (11) 
 MH(i) = PV(i-1) and ((EQ(i) and PV(i-1)) + PV(i-1)) xor PV(i-1)) or EQ(i)  (12)  
 PV(i) = MH(i) | ~(EQ(i) | MV(i) | PH(i)) (13)  
 MV(i) = PH(i) & (EQ(i) | MV(i)) (14) 
由以上的公式，動態規畫矩陣可以由 i =1到 i = m，一行一行的建立起來。 
 8 
 ),1()1),1((()),1(,]1,1[( jipvxorjipvxipvjx −+−≡−−∈∀  (22)  
最後，我們總結公式(20)(21)(22)，我們可以獲得最後以下的公式： 
 
)),1())0,(
),1()1),1(((()),()),1(
)),1()),1(),((((((),1(),(
jipvorimhand
jipvxorjipvorjieqorjipvxor
jipvjipvandjieqorjimvjiph
−
−+−−
−+−¬−==
 (23)  
我們可以把這些位元值放到位元矩陣中來做運算，如下所示： 
 
))0,(
))1())1()1)1((((()))())1(
))1())1()(((((()1(()(1
imhand
iPVandiPVxoriPVoriEQoriPVxor
iPViPVandiEQandiPViMH
−−+−−
−+−−=
 (24)  
 
))1())0,(
)1()1)1(((())())1(
))1())1()(((((()1()(1
−
−+−−
−+−¬−==
iPVorimhand
iPVxoriPVoriEQoriPVxor
iPViPVandiEQoriMViPH
 (25)  
若樣本字串長度小於電腦字的時候，我們依然使用 Myers的演算法。當樣本字串長度大於電腦字
(32位元或 64位元)的時候，我們就必須將樣本字串做切割為  wPPPPP /10 = 。根據我們的切割方式，
我們也重新定義我們的位元陣列(3)，如下所示： 
 )))1(,(,),2,(),1,((),( wjipvwjipvwjipvjiPV ×++×+×=   
 )))1(,(,),2,(),1,((),( wjimvwjimvwjimvjiMV ×++×+×=   
 )))1(,(,),1,(),,((),( wjiphwjiphwjiphjiPH ×++××=   (26)  
 )))1(,(,),1,(),,((),( wjimhwjimhwjimhjiMH ×++××=   
 ( )))1(,(,),2,(),1,(),( wjieqwjieqwjieqjiEQ ×++×+×=   
根據公式(25)和(26)，我們得到以下的公式： 
 
)),()),1(
)),1()1),1((((())),()),1(
)),1()),1(),((((((),1((),(
wjimhandjiPVand
jiPVxorjiPVorjiEQorjiPVxor
jiPVjiPVandjiEQandjiPVjiMH
×−
−+−−
−+−−=
 (27)  
 
)),1()),(
),1()1),1(((()),()),1(
)),1()),1(),((((((),1(),(
jiPVorwjimhand
jiPVxorjiPVorjiEQorjiPVxor
jiPVjiPVandjiEQorjiMVjiPH
−×
−+−−
−+−¬−=
 (28)  
我們用同樣的方法可以求得位元運算的公式，如下所示： 
 )),(),1(),((),(),( jiPHorjiMVorjiEQorjiMHjiPV −¬=  (29)  
 )),1(),((),(),( jiMVorjiEQandjiPHjiMV −=  (30) 
藉由公式(27)(28)(29)(30)，雖然樣本字串大小超過電腦字的大小，我們依然可以把樣本字串切
成小的子字串，並藉由新的公式來建立原本的動態規劃矩陣。 
四、 結果與討論 
位元平行演算法是目前用來解決問題的演算法當中極有效率的演算法之一，不僅僅可以運用在字
串比對，資料探勘，生物資訊等方面，對於加速運算和電路萃取也有很大的幫助，雖然位元平行演算
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                           101年  10月 23日 
報告人姓名 李熾隆 服務機構 
及職稱 
國立清華大學資訊工程學系 
碩士班研究生 
     時間 
會議 
     地點 
101年 10月 3日至 10月 5日 
泰國曼谷 
本會核定 
補助文號 
NSC100-2221-E-007-128 
會議 
名稱 
 (中文) 2012年國際生物資訊研討會 
 (英文) International Conference in Bioinformatics (InCoB) 2012 
發表 
論文 
題目 
  (英文) Ordering partially assembled genomes using block-interchanges 
報告內容應包括下列各項： 
一、參加會議經過 
國際生物資訊研討會(International Conference in Bioinformatics, InCoB)至今已經舉
辦至第十一屆，此次的會議舉辦在泰國的曼谷，會期為 2012年 10月 3日至 10月 5日
為期三天，共計有 90場演講報告以及 69張海報發表。此次口頭報告的地點分別有五個
演講廳，ball room B、krunthep1、krunthep2、krunthep3、krunthep4，keynote speaker以
及 plenary speaker皆是安排在上午於 ball room B進行演講，而其他的 oral speaker依照
報告的主題分別於下午的時段安排在五個不同的會議室同時進行報告，與會者可依各自
的領域相關選擇參與。而海報的呈列則是安排在 ball room B外的長廊，依照海報編號的
奇數以及偶數分兩日報告。 
Keynote 1 報告的主題為以統計的方式來實驗並估計在疾病中機能上變異的個數。
Keynote 2報告的主題為 Genomic medicine’s milestones and future，說明 whole-genome 
approach對於藥物上的研究開啟了新的領域，GWAS可幫助我們探索那些與疾病相關的
基因。Keynote 3報告主題為 Bioinformatics within and beyond biology，生物資訊學對於
了解基因、蛋白質或是基因表現上有相當大的助益，不過為了達到一些實際上的應用，
往往必須結合除了生物學之外的科學，像是生態學、神經網路等等。Keynote 4 則是介
紹甚麼是 comparative eukaryote genomics，目前的發展以及在未來這個領域所碰到的挑
戰會是甚麼。 
在眾多的報告之中，學生選擇了與學生所做的問題相關的報告去參與，主題為「A de 
novo next generation genomic sequence assembler based on string graph and MapReduce 
cloud computing framework」。由於定序技術的進步，定序出來的 reads長度已經比以往
長上許多，定序的深度也比以往的層級更高。然而使用這種高通量的技術來組合 de novo
的基因體上有兩種挑戰必須克服：第一，即使是使用最先進的多核處理器，實體記憶體
的容量仍然不足以應付組合演算法中資料結構的需求。除此之外，在使用圖形理論模型
來記錄 reads之間的交集時，既有的組合演算法尚未能對結構上的缺陷做最適當的處理。
因此這篇他們開發了分散式的基因體組合程式，其構想結合了 string graph 以及
MapReduce的架構，並輔以 edge-adjustment來處理 sequencing errors，來完成組合 reads
的目標。 
學生本次參與的海報報告安排在會議第一天的下午四點半至六點，報告題目為
「Ordering partially assembled genome using block-interchanges」，共有四位與會者聆聽學
表 Y04 
 
 
二、與會心得 
參與國際性研討會能了解當前學者所著重的議題，並且藉由學者們彼此間的討論，
集思廣益，激發出新穎的研究思維。在會議的過程中，可以接觸到來自世界各地不同背
景的學者，對於相同的問題，能夠挑出框架提出不同的見解，對於研究有莫大的幫助。
在此要感謝國科會提供的國外差旅補助金，讓學生能順利地完成參與會議的活動。參加
這次國際性的生物資訊研討會確實讓學生受益匪淺。 
 
三、考察參觀活動(無是項活動者省略) 
無 
 
四、建議 
國際性學術交流研討會議提供了相同領域的學者一個彼此交流的平台，藉由這樣的機會
能夠獲得他人以不同的觀點所出發的意見，藉而激盪出更多知識的火花。多鼓勵在台學
者參與國際性的研討會勢必能有所益處。 
 
五、攜回資料名稱及內容 
會議流程表：各個演講時間和地點。 
會議論文摘要集：口頭報告及海報論文摘要。 
與會證明書。 
贊助廠商介紹。 
 
六、其他 
無 
 
 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：盧錦隆 計畫編號：100-2221-E-007-128- 
計畫名稱：有效率的位元平行演算法以解決近似字串比對問題 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 3 3 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
