Besides, we will study the related issue aforementioned for the case of
multi-core processors under LPIA architecture and other issue caused such as
devising algorithms for processing core remapping. Also, we are going to modify a
scheduling system simulator and analyzer (Cheddar) for verifying and comparing the
performance of various low-power scheduling algorithms in imprecise computation
model. Our research will be centered on the applications of real-time systems,
embedded systems, and mobile/portable devices.
Keywords: real-time system, low-power scheduling algorithm, imprecise computation
model, x86 platform, LPIA.
二、前言
即時系統相關的排程設計技術之應用已日漸普及於各種電子、資訊系統與相
關產品之中，例如多媒體系統中的伺服器，寬頻通訊的交換主機以及生產流程控
管所需的管理資訊系統等。尤其是近年來在許多的可攜式或嵌入式電子裝置或系
統中，特別強調即時性以及對電源管理之重要性，我們將研究的對象定於x86平
台上，特別是符合LPIA架構之系統。
三、研究目的
本計畫之研究目的專注在於用非精確計算模式下的即時排程方法(real-time
scheduling in imprecise computation model)並結合x86 平台(針對Linux/Solaris)與
Intel 最新的LPIA 架構[22]之特性來研究分析與實作出相關的低功率即時排程
演算法及排程機制，以達成系統所要求的即時性以及對電源等系統珍貴資源
(processing resources, eg. energy, memory, bandwidth)作有效之運用。換句話說，
我們的目標就是系統在即時(real-time)與電源(energy)的限制條件(constraints)下
應用非精確計算模式透過適當的排程器與演算法之設定，妥善地分配LPIA 架構
中記憶體及頻寬等資源來達成排程之目標(objectives)，例如：服務品質之提供、
耗電量最小化。
四、文獻探討
非精確計算模型以及相關的排程技術[1-9]與應用[10-20]已經被發展一段時
間了，它們被用來提供更具彈性的即時排程法並提供了一個讓系統優雅降級
(graceful degradation)的方式。在此模型中，每一個工作在邏輯上可分為兩部分:
主要部分(mandatory portion)以及可選擇部分(optional portion)。每一個工作必須
在期限(deadline)前做好，而其中可選擇部分是可被部分或全部犧牲的以換取更佳
的可排程性(schedulability)或達到被要求的服務品質(Quality of Service, QoS)。因
此，我們可以將非精確計算模型中，欲線上排程之工作集合T = {T1, T2, …,
Tn}，其中每個工作Ti 具下列參數:
五、研究方法
即時系統相關的排程設計技術之應用已日漸普及於各種電子、資訊系統與相關產
品之中，例如多媒體系統（e.g. VoD, Video on Demand）上的伺服器，寬頻通訊
的交換主機以及生產流程控管等。尤其是近年來在大多數的可攜式、手持式或嵌
入式電子裝置或系統中，特別強調即時性以及對電源管理之重要性。所以，本計
畫欲研究與探討之課題符合當前我國電子、資訊相關產業之需求也符合最新x86
平台與低功耗處理器技術發展之趨勢，其背後相關理論之分析亦具有學術上之價
值。由於LPIA 架構、相關的x86 低功耗處理器以及Solaris 程式碼等皆是最近才
揭露之資訊，所以國內外有關之技術與研究還在很初期的階段，這也正是我們
投入此研究的主要目的。
我們計畫以三年的時間，研究即時系統中非精確計算模式下的排程方法在
x86 平台針對Linux/Solaris 並且在LPIA 架構下(包含multi-core processor)所產生
的相關課題，並將藉由修改一免費且開放原始碼之模擬與分析器：Cheddar[29]
使其具備imprecise computation model的分析能力以驗證所研發的排程器與各種
排程方法在x86 平台上(Linux/Solaris)的效率及優缺點。
簡單地說，第一年(即本案)：修改Cheddar、了解LPIA、及研究低功率排程
器與排程法；第二、三年：分別探討在Linux、Solaris 平台的特性、效率及優缺
點。我們的研究範圍將設定於即時系統、嵌入式系統(embedded systems)、移動
式或手持式裝置(mobile/portable devices)等應用領域，其成果將可供學術界與工
業界作為參考。
六、結果與討論
根據多次實驗的結果得知，由於x86平台上on-line tasks的行為差異(arrival
behavior)可能很大，使得QSM中，調節器之參數設定的難度大為增加。接著利用
[10]中Adaptable Processors)的概念以改進QSM，並作為 real-time與power的
trade-off之初步解決方法，其原理是利用可調節執行功率(或效率)的處理器中之
參數設定使得系統中每一個task的執行時間為可調整的；換言之，即將要miss
deadline的task可藉由加速執行之處理器來縮短其執行時間以便能夠meet task’s
deadline。
因此，若在一般的real-time task scheduling model下探討且未考慮系統資源，
將不易延伸該概念至imprecise computation model上。所以，第二、三年後續的研
究可以繼續改良QSM，並考慮x86系統之可用資源的調配(例如：記憶體, I/O)，
使得在一定的要件下，power的增加可以使task的processing time線性下降，以簡
化此QSM之排程複雜度並進而比較兩者在性質上/效能上之優劣點，或是開發新
的應用。
此外，今年(第一年)我們已研究了在非精確計算模型下之x86即時系統，除
了先了解了最新的LPIA 架構外，還要把評量工具準備好：並將修改一個開放原
