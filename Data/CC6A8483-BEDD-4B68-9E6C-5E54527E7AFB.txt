 2
據  2004 年的  Standish Group CHOAS 
Report 得知只有不到  1/3 的軟體專案 
(software project) 是成功的 [6]，因此，近
來專案管理已漸漸地受到重視。根據美國
專案管理學會的定義，專案為一個暫時的
努力以創造出一個唯一的產品、服務或結
果 [7]。對於專案管理的定義，Kerzner 定
義為一個有系統的規劃、排程及控制流程
以確保專案得以成功 [8]，軟體系統的開發
之所以困難重重，主要是因為存在太多的
不確定因素。因此 Brooks 提到因為有太
多不可預測的問題及困難存在且無法避
免，導致大型軟體系統的開發之成本增
加、進度落後及錯誤層出不窮  [9]。因此，
一個軟體專案在執行前必須要有完善的專
案規劃，對專案的大小進行估算以決定所
要投入的人力及成本， Albrecht 提出以功
能點分析的方式來對軟體的大小規模進行
分析 [10]。另外，Boehm 則是針對專案的
人力及成本的預估提出了一個以經驗為基
礎的演算式之模型 [11]。對於專案管理，
目前已有一些組織及單位提出及制定了一
些和專案管理相關的標準及導引，包括了
卡內基美隆大學軟體工程學院的整合式能
力成熟度模型 [12]、美國專案管理學會的
專案管理知識體系 [7]、英國政府最新版本
的控制環境下之專案 [13]、國際標準化組
織的 ISO 9000 系列 [14, 15, 16] 及美國電
子電機工程師學會和美國電子工業協會共
同合作的軟體生命週期流程的工業版 [17, 
18, 19] 等。 
 
四、研究方法 
本研究定義了四種不同的角色，每一
個角色有其不同的責任工作。同時，我們
也定義了幾種不同的角色關係，根據這些
定義的角色及角色關係，我們發展了一個
多角色的協同共作機制及流程模型。 
 本研究所定義的角色有四種，其說明
如下： 
z Customer：委託軟體公司來開發其所
需要的軟體系統。 
z Director：軟體公司的主管，可以決定
要給予多才資源給專案。 
z Project manager：負責進行專案的規
劃、管理及控制以確定專案可以在期
限內完成。 
z Project member：負責進行系統分
析、設計、實作及測試。 
對於 project member，我們再將其分成
小組組長及小組成員。小組組長負責指
揮小組成員執行所指派的工作，同時也
必須和 project manager 進行報告及溝
通。而小組成員的工作便是執行 project 
manager 所分配的工作，小組成員的身
份可以是需求分析師、系統分析師、系
統設計師、程式設計師及系統測試師等。 
 根據所定義的角色，我們可以定義幾
種不同的角色關係，其角色關係的訂定主
要是依水平責任關係及垂直責任關係如下
圖所示： 
z 水平責任關係：包括  customer 及 
project manager. 
z 垂直責任關係：包括了  director、
project manager 及 project member. 
 
 以下為我們所定義的角色關係及其說
明： 
z Director-project manager ： Director 
有權力決定要給予專案多少的資源，
project manager 必須要與 director 進
行溝通以取得資源，同時也有義務對 
director 進行專案的報告。 
z Project manager-team leader：Project 
manager 是規劃、指導及控制專案進
行的角色，team leader 用以控制特定
任務的進行如測試等。同時， team 
leader 也扮演著  project manager 及 
project member 之間的溝通橋樑。 
z Team leader-team leader：在一個專案
中，存在多個小組進行不同的任務，
雖然是不同的任務，但小組之間仍須
將其資訊共享出來，以便專案內的溝
通能更加流暢。 
z Team member-team member：在一個
 4
 
PMC planning：這個活動主要是產生 
PMC plan 及各種 baseline，這個 plan 指
出專案監控的各種不同的度量指標。 
Data collection：Data collection 的主要目
標是從各種不同的角色收集到所需的資料
與資訊，根據 PMC plan，專案成員必須要
回報給專案適當的資料以便進行分析。 
PMC tracking：專案經理人必須定時或不
定時地追蹤專案的狀態以便做出適當的反
應或專案的調整。 
Data analysis：將所收集到的各種不同的資
料進行分析。 
Corrective action：依據資料分析的結果及
所訂定的計畫，專案經理人必須要決定目
前的專案的執行是否和所預期的規劃有所
誤差，這個誤差是否在可容忍的範圍之
內，應該要有什麼樣的矯正活動，同時必
須要決策通知相關人員。 
 
五、結論與討論 
 對於軟體系統的開發，除了開發技術
外，專案管理也是非常重要，專案管理所
牽涉到的議題常常存在很多不確定及不可
預測的成分，如何有效地規劃及監控是專
案成功與否的重要因子，專案管理之所以
複雜的原因在於人與人之間的溝通複雜性
太高，因此，專案經理人應該在專案執行
時進行監控，同時要讓專案成員之間的溝
通訊息可以有效地傳遞。本研究計畫針對
這樣的問題，提出一個多角色協同共作的
專案監控流程及機制來改善專案開發時成
員之間的溝通，在本研究中，我們定義了
幾個不同的角色及角色關係，藉由這些角
色及關係的定義，可能使專案內的溝通較
具有依據及效率，最終的目的是要提升專
案的成功率及軟體的品質。 
 
六、成果自評 
 本研究成果，已經達成計畫預期成
果，我們也已將所提出之方法發表於在台
北所舉行的 ICS 2006 [20]及在台中所舉行
的 TCSE 2007 [21]。同時，我們也計畫將
本成果再做適度修改並且投稿至相關的期
刊。 
 
七、參考文獻 
[1]  W. W. Royce, Managing the 
Development of Large Software 
Systems: Concepts and Techniques, In 
Proceedings of WESCON, 1970. 
[2]  W. Boehm, A Spiral Model of 
Software Development and 
Enhancement, IEEE Computer, 
21(5):61–72, 1988. 
[3]  C. Larman and V. R. Basili, Iterative 
and Incremental Development: A Brief 
History, IEEE Computer Society, 
36(6):47–56, 2003. 
[4]  P. Kruchten, The Rational Unified 
Process: An Introduction, 
Addison-Wesley, 2000. 
[5]  K. Beck, Extreme Programming 
Explained, Addison-Wesley, 1999. 
[6]  The Standish Group, CHAOS Report, 
http://www.standish.com, 2004. 
[7]  Project Management Institute, A Guide 
To The Project Management Body Of 
Knowledge Third Edition, Project 
Management Institute, 2004. 
[8]  H. Kerzner, Project Management: A 
Systems Approach to Planning, 
Scheduling, and Controlling Eight 
Edition, Wiley, 2003. 
[9]  F. Brooks, The Mythical Man-Month: 
Essays on Software Engineering, 
Addison-Wesley, 1975. 
