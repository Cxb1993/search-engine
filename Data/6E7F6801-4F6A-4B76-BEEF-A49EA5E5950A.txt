 2
已推行於許多 RFID 技術應用的領域，特
別在供應鏈管理  (supply chain manage-
ment) 上更是廣泛的應用，最著名的就是
美國沃瑪 (Wal-Mart) 的全球物流供應鏈
管理系統。 
由於企業中，來自於 EPCglobal 前端
讀取器的原始資料  (row data) 非常龐
大，ALE 中介軟體必須快速的過濾這些資
料，再送給後端的事件擷取系統 (capture 
application) 依商業邏輯分析並轉換成有
意義的事件 (event) 資料，最終儲存於單
一或多個 EPCIS 的資料庫中。保存於
EPCIS 的大量事件資料，將提供給各種相
關系統做應用，例如：商業流程的資料查
詢或邏輯決策。以 Wal-Mart 為例，其資料
倉儲中儲存了過去 65 週中全美 3000 家分
店中的每一筆交易紀錄，總共有好幾百
tera bytes，而這僅是交易紀錄尚未包含物
品等其他相關資料。如何在 EPCglobal 架
構下針對大量資料執行即時的過濾、分
析、轉換、儲存以及查詢，將是這計畫所
要研究的課題。 
三、研究方法 
隨著網際網路的蓬勃發展，以及企業
界與日俱增的資料量，系統服務的可用
度、可靠度及其安全度，已成為系統服務
供應商、網路服務供應商、軟體服務供應
商及使用者共同關注的焦點。促使我們重
新思考現有以 EPCglobal 架構為基礎之
RFID 企業整合應用系統，如何調整擴充
以因應當前及未來所面臨的快速變化環
境。 
因此，我們將輔以雲端運算技術
[FZRL08]來設計實作 RFID 基礎建設中，
需要即時處理大量原始資料轉換的中介軟
體部份，並符合 ALE 之規範。RFID 中介
軟體的功能是負責讀取器 (Reader) 和上
層應用程式之間的交換資訊；經由中介軟
體收到讀取器讀取到的資料，經過過濾和
篩選成有意義資訊，提供給後端的企業資
訊系統。中介軟體不但能降低企業導入 
RFID 技術的門檻，而且應用程式並不需
要去管理複雜的 RFID 讀取器的連接就可
以有效的管理 RFID 讀取器。因此中介軟
體除了降低應用程式的複雜性外也提供了
更有效率的硬體管理。 
雲端運算 (cloud computing)，從本質
上來看，是一種分散式運算 (distributed 
computing) 的新運用。其最基本的概念，
是透過網際網路將龐大的運算處理程序 
(process)，自動分拆成無數個較小的子程
序  (subprocess) ，再交由多部伺服器 
(multi-server) 所組成的龐大系統，透過搜
尋與運算分析之後，再將處理結果回傳給
使用者端。在如此的分散式系統內，藉由
資訊的交換來分享訊息。但是由於分散式
環境中包含了許多異質且複雜的動態組
態，而這些潛在的因素是造成無法有效率
的利用分散在不同的系統上的資源。因此
為了有效管理不同的硬體設備、作業平
台，以及隨時變動的網路負載，我們必須
建立有效的方式來管理分散在不同系統上
的資源。 
四、研究成果與討論 
本計畫的研究成果提出一個符合
EPCglobal 標準的中介軟體，其系統架構
以元件模組化為基礎，並整合 LLRP、RP
與客製化 API 的讀取器控制標準。以元件
模組化的方式設計，讓系統提高延展性。
同時透過模組化的便利性，模組設計也預
留了可擴充模組的架構，因應面對未來多
變化的需求。 
4.1 分散式 ALE 中介軟體系統架構 
我們所設計 RFID 中介軟體如【圖 1】 
 
【圖 1】Distributed ALE module Architecture 
 4
Data Process Module 
中介軟體收集前端讀取器所讀到的標
籤資料，並起透過過濾與群組化過程把重
複性的資料去除並且把客戶端有興趣的資
料擷取出來，因此，這些資料才對於後端
應用系統或資訊系統才有意義。 
在過濾或是群組之前，我們必須透過
標籤資料標準 (Tag Data Standard, TDS) 
[11]把前端讀取器所讀到的 96 bits 的 EPC
碼轉成 URI 的表示式，並且結合客戶端所
定義的樣版 (pattern) 來過濾標籤資料，最
後把處理完成的資料送給 report generator 
module，並且依照客戶端所定義的報告格
式產出報告。 
Report Generator Module 
此模組主要功能是將各週期運作的結
果，依照 ALE 1.1 所規定的報告格式產生
報告。其中 report generator module 包含了
產生 ECReport 與 CCReport 的功能。
Notification module 為 report generator 
module 裡面的子模組，此模組主要的功能
是將 report generator module所產生的報告
依據客戶端所指定的位址傳送此報告。
Notification module 所支援的傳送的協定
包含多數常見的傳輸協定如檔案傳輸協定
(FTP)、SMTP 等。 
同時，此模組也提供了非同步的機制
以及同步的機制來回傳客戶端所定閱的報
告；所謂的非同步的機制是當客戶端下達
指令後不必等待 ALE 做回應，而客戶端可
以持續的執行不同的應用程式，直到 ALE
完成一份完整的報告之後，才依照客戶端
所指定的位置傳送此報告。同步的機制是
指客戶端必須等待 ALE 完成一份完整的
報告之後才可以繼續的執行另一個應用程
式。 
Reader control Module 
由於市面上實體讀取器的種類繁多，
如何設計一個共同的介面將不同的實體讀
取器整合為一將會是一個重要的課題。以
EPCgolbal ALE 1.1 的觀點來看待讀取
器，ALE 將會以一個抽象的單位來涵蓋不
同的實體讀取器，我們稱這個抽象的單位
叫做邏輯讀取器；所以我們必須設計在中
介軟體與實體讀取器二者之間建立一個
Reader control module 來做為彼此之間的
溝通管道。 
 
【圖 4】Reader Control Module 
如【圖 4】所示，中介軟體所下達的
指令是以邏輯讀取器為一個單位；在一個
邏輯讀取器中可以包含不同通訊協定的實
體讀取器。由於上述的原因，Reader control 
module 就必須負責將指令轉換成不同通
訊協定的指令。以目前我們所設計 Reader 
control module 包含了 LLRP Library、RP 
Library、與 Customized API 等模組。 
Dispatcher Module 
此模組是一個子模組，存在上述的各
模組中。此模組主要是用來控管伺服器與
伺服器之間的訊息，並且針對伺服器的負
載平衡來做調整。此模組有提供幾項的功
能，像是管理在分散式環境中的主機的資
源、負責訊息的更新並且傳遞到不同的主
機上、負責分派或是分割工作量到不同的
主機上。 
4.2 分散式處理機制 
延續上個章節所探討的系統模組，此
章節將介紹我們所設計之中介體的流程，
並做進一步的描述。在系統流程中，我們
將會以分散式的觀點來描述整個過程。 
在網路上的節點可能是一台個人電
腦、伺服器或者是任何一台設備，皆可執
行任一個我們所設計的系統模組。每一個
節點可以執行一個以上的模組，並且根據
不同的模組執行不同的工作。但是為了降
 6
這些資訊以適當方法傳給 slave node，然後
使 slave node 可以即時的更新資訊。 
更新 master node 資訊的詳細流程如
【圖 8】所示，當上層(或是下層)的 slave 
node(或是 master node)把資訊傳給上層(或
是下層)的 master node 時，master node 的
dispatcher module 將藉由 listener event 元
件來接受訊息，並且藉由 parser manager 
unit 來分析資訊，然後把必要的資訊藉由
blackboard manager unit 存在一個全域的
記憶體內。此記憶體提供了一個開放的空
間儲存一些即時的資訊，例如像是底層的
Slave node 的 cup 負載、記憶體的使用
量、I/O 的負載等。開放此空間的主要的
目的是為了兩種目的：第一個目的是為了
效能，程式執行中可以直接存取記憶體的
資料而不用再到資料庫或是其他的 master 
node 抓取資料；另一個目的是為了多執行
序的程式，當程式建立新的執行序時，我
們沒有辦法再對此執行序做直接的存取或
是溝通，所以我們必須提供一個特別的區
域來記載一些控制指令並且告訴執行序程
式到此特殊的記憶體來抓取必要的指令。 
 
【圖 8】Update master node information 
【圖 8】第 4 到 5 步驟在說明假使有
資訊必須跨階層的時候，我們還是需要利
用到 message delivery 元件的 unit，先把資
料封裝成 XML 的格式，並且藉由 control 
action 元件的 search manager unit 把需要
此資訊的 master node 與 slave node 的位置
資訊告訴 send manager unit，然後把此資
料藉由網際網路傳送到指定的位置。 
Load Balancing Process 
傳統的負載平衡的方法，頻繁的訊息
交換主要都集中在 RFID middleware 的運
作上，這樣的設計不但沒有辦法有效的幫
助中介軟體提高效率， 後可能導致系統崩
潰的主要原因。因此，我們藉由設計一個
模組化的元件來解決這個問題，這個元件
只是一些簡單的監控程式在中介軟體中，
而不管中介軟體內部是如何運作或是執行
什麼特別的工作，所以此模組可以容易的
重複利用以及佈署到其他的模組中。 
系統負載平衡的流程圖如【圖 9】所
示，(1)Master node 必須以週期性的詢問
Slave nodes 的工作負載、CPU、 I/O、
memory 的負載，(2)並且藉由 Blackboard 
manager unit 把 Slave nodes 的工作負載資
訊記錄到一個全域的記憶體中。(3)當此層
的 Master node 利用 Receive manager unit
接受到上層的 Slave node 的資料時，(4)會
藉由 parser manager unit 把資料剖析整
理，(5) 與 (6)並且藉由 chooser manager 
unit 來選擇一個工作負載較小的 Slave 
node 來執行任務， (7)但是假如所有的
Slave nodes 的工作負載都非常大時，(8)
我們會利用Balance manager unit來把工作
量切成數等份，(9)最後藉由 Encapsulation 
manager unit 把資料封裝成 XML 的格式，
然後派發給不同的 slave nodes 來做處理。 
 
【圖 9】Load balancing process 
五、結語 
本著以往對於 EPCglobal 基礎架構
的研究經驗與成果，此計畫針對我們所發
展的  EPCglobal Network 架構平台基
礎，輔以雲端運算的分散式技術來建置。
除了可以加速 ALE 中介軟體處理大量來
自讀取器的原始資料、儲存日積月累的龐
大事件資料外，更可讓中小企業不需消耗
成本建置 ALE 軟硬體，即可加入以
EPCglobal 為基礎之供應鏈環境，提升企
業的競爭力。 
過去舊式的中介軟體架構通常是以整
個完整的中介軟體作複製然後佈屬到不同
機器與環境上。但是此方法不但無法有效
的管理中介軟體，而且當中介軟體需要修
改或擴充不同功能時，在最遭的情況下，
 8
行政院國家科學委員會補助專題研究計畫■ 成 果 報 告   □期中進度報告  
 
EPCcloud: 一個雲端運算技術的 EPCglobal 基礎架構 
EPCcloud: An EPCglobal Architecture Framework Based on Cloud Computing 
Technology 
 
計畫類別：■ 個別型計畫  □ 整合型計畫 
計畫編號：NSC 99-2221-E-035-069  
執行期間：99 年 08 月 01 日至 100 年 07 月 31 日 
 
計畫主持人：黃秋煌 教授 逢甲大學 資訊工程學系 
共同主持人：賴坤助 教授 逢甲大學 通訊工程學系 
計畫參與人員：劉欽寶、陳裕昌、呂緯翰、朱凌儒 
 
 
成果報告類型(依經費核定清單規定繳交)：■精簡報告  □完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、
列管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
          
執行單位：逢甲大學資訊工程學系 
 
中   華   民   國  一 ０ ０   年   十   月   三   十   日 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：黃秋煌 計畫編號：99-2221-E-035-069- 
計畫名稱：EPCcloud: 一個雲端運算技術的 EPCglobal 基礎架構 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
