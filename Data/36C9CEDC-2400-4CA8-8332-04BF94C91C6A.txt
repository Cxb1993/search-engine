高點時，即將攔水壩予以連結形成多個封閉
曲線，亦完成分水嶺演算法之程序。 
本計劃以Beucher等學者[2]所提出分水
嶺演算法為主體，該方法於影像進行平滑化
(Smoothing)與梯度化(Gradient Thresholding)
等前處理步驟完成後，首先即針對影像執行
偵 測 與 標 記 各 區 域 最 小 值 (Regional 
Minima)。以區域最小像素值為中心像素，依
其與相鄰像素之灰階梯度值相等與否為判斷
基準。若相等則視為平原區域；反之，則為
非平原區域。其次再依循相同之判斷基準，
逐步提升對於各區域像素之平原與非平原區
域之認定，以進行模擬氾濫之步驟。依
Ordered Queue設計概念需使用256個先進先
出佇列，故若以該法逕行研製該硬體，則其
研發成本甚高。 
Cheng-Hung Li等學者[7]就重覆使用該
佇列之概念，僅使用單一先進先出佇列。並
藉由載入儲存輸入影像記憶體資料，故不需
產生中心像素其相鄰位址即可逕行比對步
驟。而本計劃亦具備重覆佇列使用之概念，
於輸入、平原區域與非平原區域各使用一個
串進並出之佇列，並同步進行中心像素與其
相鄰像素之比對程序，以降低硬體研發成本
與提升執行效率。 
 
三、結果與討論 
   
首先藉由偵測步驟取得尚未標記之區域
像素最小值，以該像素值為中心像素並將其
置入暫存器。於佇列初始化後，再將其置入
佇列之中。其次，藉其與相鄰之八個像素點
進行灰階值同步比對與判斷步驟。若相鄰像
素與中心像素值相同，則設定該像素與中心
像素為相同之標記；反之，若其相鄰像素之
灰階值與其相異或尚未標記，則亦將該相鄰
像素置入佇列再行比對與判斷。藉此進行大
規模區塊擴散步驟，將可充分運用佇列並降
低其使用成本。 
 
演算法 
Procedure Local minima detection 
labeling(F,L) 
Input: Morphological multiscale gradient 
image { }NDFF f →:    
Output: Labelled image { }NDLL f →:  
INIT <=-2; NARM <= -1; 
Area_Label <= -1; 
Reset the label image L with INIT 
/* { }NDFF f →: ：灰階之輸入影像；{ }NDLL f →: ：輸出影像；Area_Label 為現
今標記值，重置輸出影像為 INIT。*/ 
 
for all ( )INITpLwithDp =∈ )(  do 
    SIPO_INIT ( )MQ ; 
    L(p) <= Area_Label; 
    SIPO_ADD ( )MQp, ; 
    PA_FLAG<= 0; 
/* 若輸入像素點之標記為初始值，則將其置
入 SIPO，並將 Area_Label 予以修正，
PA_FLAG 設為 0。 */ 
 
while sipo queue  not empty do MQ
      q <= SIPO_REMOVE ( ); MQ
      for all )(qNr G∈  do 
        if F(r)<F(q) then 
          PA_FLAG<= 1; 
        else if (F(r)==F(q)) and (L(r)==INIT) 
then 
          L(r) <= Area_Label; 
          SIPO_ADD ( ) ; MQr,
        end if 
end for 
end while 
/* G 為 22 ZZ ∗ 之子集合， 為中心像素
p 之相鄰像素。當 SIPO 為非空乏狀態，則與
相鄰之八個像素點進行灰階值同步比對與判
斷步驟。若相鄰像素值大於與中心像素，則
設定 PA_FLAG 值為 1；反之，若相鄰像素與
中 心 像 素 值 相 同 ， 則 設 定 該 像 素 之
Area_Label 值與中心像素相同，並將其置入
)( pNG
 2
