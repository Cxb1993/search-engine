 1 
 
行政院國家科學委員會補助專題研究計畫 
成果報告   
□期中進度報告 
 
大學雲：分散式雲端運算中介軟體－ 
子計畫 A2：動態計算資源供應系統 
 
計畫類別：□個別型計畫   整合型計畫 
計畫編號：NSC99-2218-E-002-028- 
執行期間：99年 8月 1日至 100年 7月 31日 
 
 
執行機構及系所：台灣大學資工系 
 
計畫主持人：劉邦鋒教授 
 
 
 
成果報告類型(依經費核定清單規定繳交)：精簡報告  □完整報告 
 
本計畫除繳交成果報告外，另頇繳交以下出國心得報告： 
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
□出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，□一年二年後可公開查詢 
 
中   華   民   國  100  年  10  月  28  日 
 
 3 
Abstract 
Power consumption is one of the most critical problems in data centers. One effective way to reduce 
power consumption is to consolidate the hosting workloads and shut down physical machines which become 
idle after consolidation. Server consolidation is a NP-hard problem. In our project, we propose two new 
algorithms, Dynamic Round-Robin (DRR) and Hybrid, which combines DRR and First-Fit, for energy aware 
virtual machine scheduling and consolidation. We also propose an accurate power model to estimate the 
power consumption resulted from each algorithm. Strategies we proposed are compared with GREEDY, 
ROUNDROBIN and POWERSAVE scheduling strategies implemented in the Eucalyptus Cloud system. Our 
experiment results show that our DRR and Hybrid algorithms reduce power consumption by 56.4% and 
55.9% respectively, compared with the ROUNDROBIN scheduling strategy in Eucalyptus. DDR and Hybrid 
also result in 3% less power consumption on average, compared with the POWERSAVE scheduling strategy 
in Eucalyptus. 
 
Keywords: Cloud Computing, Data Center, Power Saving, Virtual Machine Consolidation. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 5 
[9], [10] proposed a dynamic allocation policy aiming at satisfying the conflicting goals of maximizing the 
quality of users’ experience while minimizing the cost for the provider. Their model considers limited user 
patience time and the fact that servers energy consumption depends on servers’ utilization. Liu et al. [8] 
present the GreenCloud architecture, which enables comprehensive online-monitoring, live virtual machine 
migration, and VM placement optimization. Chase et al. [1] presents the design and implementation of 
architecture for resource management in a hosting center operating system, with an emphasis on energy as a 
driving resource management issue for large server clusters.  
The major difference between our work and most existing works is the underlining application workload. 
Most of the energy saving works in the literature focuses on the workload of HTTP requests. The virtual 
machines running web servers are created to process those requests. The goal is to reduce power consumption 
by using fewer virtual machines or increasing the load of virtual machines, at an acceptable price of increased 
response time or less QoS guarantee. In contrast, our work focuses on deploying virtual machines to physical 
machines. These virtual machines can be associated with most kinds of application workload, or general 
applications. Therefore, the workload considered in our work is virtual machines, not individual HTTP 
requests. The goal is to deploy these virtual machines to cores so that various performance indices can be 
satisfied. 
 
四、 研究方法 
A. SYSTEM MODELS 
The power consumption model and the migration model in our VM provision framework is defined in 
this section. The power consumption model measures power usage of a physical machine and the migration 
model describes the migration mechanism and measures its incurred cost. 
1. Power Consumption Model 
The power consumption of a physical machine is assumed to be a function of its CPU load. Previous 
studies [5], [2] shows that the power consumption of a physical machine is the sum of the idle power (or 
base power) and a linear function of its CPU load. 
In order to verify that power consumption is a linear function of CPU load, built-in power meters in 
the physical machines is used to measure the power usage under different CPU loads. CPU load in our 
project is defined as ”the sum of the loading of each core”. For example, if there are four cores with loading 
100%, the CPU load of this physical machine will be 400%. 
The experimental result is shown in Figure 1, where the x-axis is the number of cores with 100% load, 
and y-axis is the power consumption reading from the power meter. The physical machine used has two 
CPUs, each with four cores. 
The result verifies the linearity of the power consumption as a function of the number of cores with 100% 
load. The shorter line in Figure 1 indicates the power consumption from deploying heavily loaded virtual 
machines on the cores of the same CPU, and the longer line indicates the power consumption when 
deploying virtual machines to two different CPUs as much as possible. Figure 1 concludes that both lines 
 7 
are the percentage load of the source and the destination machine respectively, α is the idle power ratio,  
is the peak power of a physical machine,  is the time the migration takes, and L is the extra load caused 
by the migration process. 
 
The notations are summarized in table I. 
 
B. VM DEPLOY STRATEGY 
Virtual machine consolidation is an NP-hard problem. The problem can be stated as follows. Virtual 
machines with different hardware requirements, such as the number of cores and the size of memory, must 
be deployed to physical machines with fixed hardware capacity in a way that minimizes the number of 
physical machine used. This consolidation problem is harder than the bin packing problem [13], which is 
known to be NP-hard [6]. It is easy to see that greedy method for bin packing problem, like First-Fit 
method, can also be modified and applied to our consolidation problem. 
The First-Fit method is an approximation algorithm to the bin packing problem, with approximation 
factor of 2 [15]. Modifications can be made to the First-Fit method to fit into the context of our 
consolidation problem. The First-Fit method attempts to deploy a virtual machine to the first machine in a 
physical machine list that can accommodate this virtual machine. If no physical machine is found, then a 
new physical machine will be booted to host this virtual machine. Despite that the First-Fit method is a 
simple and effective heuristic to the bin packing problem; it may not be a good solution to our 
consolidation problem. 
A more complicated virtual machine consolidation problem is considered in our project. In addition to 
 9 
C. IMPLEMENTATION 
This section introduces some design issues that arose during our algorithm implementation. 
1. Retirement Threshold 
The first implementation issue is to determine a proper retirement threshold. As mentioned in section 
IV-A, a physical machine will be forced to shut down if in “retiring” for a sufficiently long period of time. 
This waiting time threshold is denoted as “retirement threshold”. If the threshold is too small, there will be 
a large number of migrations, which increases energy consumption. If the threshold is too large, then it will 
postpone consolidation and increase the number of physical machines required, which also increases energy 
consumption.  
The threshold can be determined by considering the migration time and the remaining execution time 
of virtual machines. The intuition is that if a virtual machine almost finishes its execution, then it is not 
necessary to migrate it. On the other hand, if the remaining execution time of a virtual machine is still long, 
consolidating it with other virtual machines is very likely to save energy. 
The two equations of the overall energy consumption, one with decision to migrate a virtual machine 
and the other not to migrate a virtual machine, respectively, is defined in the following. A condition can be 
found to make these two equations have equal values, which means the energy consumption is the same for 
either migrating or not migrating. A proper retirement threshold can then be computed from this condition. 
The energy consumption for migrating the virtual machine is defined as Equation 2. On the other hand, 
the energy consumption for not migrating the virtual machine can be defined as in Equation 3. Es and Ed 
are respectively the energy consumption of the source and destination physical machines if not migrating 
the virtual machine. 
 
The energy consumption of migrating and not migrating the virtual machine strikes a balance while 
Equation 2 equals to Equation 3. The two equations have the same value under the condition that the 
remaining execution time of a VM  equals to µ , which is defined in Equation 4. 
 
While a physical machine is going to retire, instead of deciding whether to migrate each virtual 
machine by their remaining execution time , which is not known, the threshold  is used as the 
retirement threshold. If a virtual machine with remaining execution time  less equal than µ , meaning no 
migrating it is more energy saving, the virtual machine will eventually finish before the physical machine 
starts to migrate virtual machines. On the other hand, if  is greater than , meaning migrating is a better 
choice, the virtual machine will be migrated after the retirement threshold exceed. 
In Equation 4, L, α, and  are all constants. Therefore, the threshold µ can be calculated in advance. 
Notice that the remaining execution time  is not needed while running our Dynamic Round-Robin. The 
threshold  is calculated and fixed. A retiring physical machine will be shut down after a waiting time of 
. Every unfinished virtual machine will be migrated no matter how long the remaining execution time is. 
 11 
 
Table II compares the power consumption from Dynamic Round-Robin (DRR) we propose and the 
Power-Saving First-Fit method. The Power-saving First-Fit is the same as the First-Fit heuristic except 
that when a machine becomes idle, it is shut down to conserve energy. Energy consumption is estimated 
according to our power model before the experiment, and then compares the results with actual power 
meter reading after the experiment. 
As can be seen from Table II, there is very small difference between the estimated power and the 
measured power. The reason for this discrepancy could be caused by the assumption that a virtual 
machine always has 100% load, while the actual load of a virtual machine is more complicated. It takes 
some time for a virtual machine to initialize, and the workload could vary during the execution of a 
virtual machine. Another possible reason for this discrepancy could be that the power overhead is 
slightly overestimated in our power model; therefore the actual power is smaller than the estimated 
power. Nevertheless, the estimation error is within 5%, and the power saving percentage is consistent, 
either in estimated or measured power. As a result, the estimation from our power model is believed to 
be accurate enough to evaluate different scheduling algorithms. 
C. Large Scale Simulation Results 
Simulations have been made to see how much energy can be saved by our algorithms for a large 
number of incoming virtual machines. Our simulator simulates a data center with 600 8-core Xeon 
servers connected by Gigabit Ethernet switches. In each simulation run (i.e. test case), there are 2000 
incoming virtual machines. The simulator records the numbers of physical machine used, the number of 
migrations, and the total energy usage at every time unit of the simulation. 
1. Different Retirement Threshold 
The first simulation applies different retirement thresholds to observe how these thresholds affect 
performance. Recall that retirement threshold is the length of time from a virtual machine finishes its job 
to the time that the virtual machine on the physical machine is migrated. The retirement threshold is set 
to be 0, 5, 10 and 30 minutes in the simulation for comparison purpose. CPU load is also used to 
determine whether to retire a physical machine, as described in Section V. That is, despite the time in 
retiring state, a physical machine migrates the hosting virtual machines if the loading of physical 
machine decreases under a certain threshold, 50% in our case, during retiring. 
Figure 2 illustrates the average power consumption of three power-saving algorithms (that is, they 
all shut down idle machines). The average power consumption (y-axis) is normalized by using the power 
consumption of the power saving First-Fit algorithm as the baseline. Every set of bars represent the 
results of a test case from different algorithms. The first four are the results of Dynamic Round-Robin 
using different retirement thresholds, the fifth bar(marked as “’D’) uses CPU load as the retirement 
criteria, and the last two bars are the results of power-saving Round-Robin and First-Fit. 
 13 
power consumption respectively when compared with the power consumption required by 
ROUNDROBIN policy. Furthermore, our algorithms save 3% more power on average than 
POWERSAVE scheduling policy in Eucalyptus. 
E. Summary 
We demonstrate the effectiveness of our algorithms in both small scale experiments and large scale 
simulations. Experiments have been run on an 8-node homogeneous environment, and the experimental 
results show that proposed Dynamic Round-Robin consumes less energy than the First-Fit method. The 
experimental results also validate our system model. Large scale simulations have also been performed. 
The simulation results show that using physical machine load as the retirement threshold save more 
energy than using time as the retirement threshold. The average power consumption from different 
algorithms are compared and analyzed. Dynamic Round-Robin reduces the average number of power-on 
physical machine by 4.5%, and reduces average power consumption by 2%. The Hybrid method has the 
best performance among all algorithms – it saves the number of power-on physical machines by 5%, and 
average power consumption by 3%. Comparison between our power consumption results with the three 
scheduling options in Eucalyptus are also presented, and the result shows that the saving is about 45% in 
power when compared with their default setting. 
 
 
 15 
[5] Xiaobo Fan, Wolf-Dietrich Weber, and Luiz Andre Barroso. Power provisioning for a warehouse-sized 
computer. In Proceedings of the 34th annual international symposium on 
Computer architecture, ISCA ’07, pages 13–23, New York, NY, USA, 2007. ACM. 
[6] Michael R. Garey and David S. Johnson. Computers and Intractability; A Guide to the Theory of 
NP-Completeness. W. H. Freeman & Co., New York, NY, USA, 1990. 
[7] Liting Hu, Hai Jin, Xiaofei Liao, Xianjie Xiong, and Haikun Liu. Magnet: A novel scheduling policy for 
power reduction in cluster with virtual machines. In CLUSTER, pages 13–22. IEEE, 2008. 
[8] Liang Liu, Hao Wang, Xue Liu, Xing Jin, Wen Bo He, Qing Bo Wang, and Ying Chen. Greencloud: a 
new architecture for green data center. In Proceedings of the 6
th
 international conference industry session on 
Autonomic computing and communications industry session, ICAC-INDST ’09, pages 29–38, New York, NY, 
USA, 2009. ACM. 
[9] Michele Mazzucco, Dmytro Dyachuk, and Ralph Deters. Maximizing cloud providers’ revenues via 
energy aware allocation policies. Cloud Computing, IEEE International Conference on, 0:131–138, 2010. 
[10] Michele Mazzucco, Dmytro Dyachuk, and Marios Dikaiakos. Profit-aware server allocation for green 
internet services. Modeling, Analysis, and Simulation of Computer Systems, International Symposium on, 
0:277–284, 2010. 
[11] Daniel Nurmi, Rich Wolski, Chris Grzegorczyk, Graziano Obertelli, Sunil Soman, Lamia Youseff, and 
Dmitrii Zagorodnov. The eucalyptus open-source cloud-computing system. In Proceedings of the 2009 9th 
IEEE/ACM International Symposium on Cluster Computing and the Grid, CCGRID ’09, pages 124–131, 
Washington, DC, USA, 2009. IEEE Computer Society. 
[12] Shingo Takeda and Toshinori Takemura. A rank-based vm consolidation method for power saving in 
datacenters. Information and Media Technologies, 5(3):994–1002, 2010. 
[13] Vijay V. Vazirani. Approximation Algorithms, chapter Bin Packing, pages 74–78. Springer Verlag, 2001. 
[14] Xen. http://www.xen.org. 
[15] Binzhou Xia and Zhiyi Tan. Tighter bounds of the first fit algorithm for the bin-packing problem. 
Discrete Appl. Math., 158:1668–1675, August 2010. 
 
 
 
 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/06/19
國科會補助計畫
計畫名稱: 子計畫二：動態計算資源供應系統
計畫主持人: 劉邦鋒
計畫編號: 99-2218-E-002-028- 學門領域: 資訊
無研發成果推廣資料
專任助理 0 0 100%  
其他成果 
(無法以量化表達之
成果如辦理學術活
動、獲得獎項、重要
國際合作、研究成果
國際影響力及其他協
助產業技術發展之具
體效益事項等，請以
文字敘述填列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
