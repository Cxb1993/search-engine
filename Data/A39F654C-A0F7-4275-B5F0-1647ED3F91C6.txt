 1
 
 
 
主動式攻擊對網際網路金鑰交換協定影響之研究 
 
 
摘要 
 
IPSec(IP 安全協定)對封包進行加密與認證的處理，保障了資料在公眾網路傳送時免於
被窺視、修改。然而，在套用 IPSec 之前，通訊的雙方必須先擁有共享的鑰匙，除了最基
本的預先共享金鑰外，透過網路金鑰交換(Internet Key Exchange, IKE)協定來進行金鑰與安
全關聯協商，可以讓雙方共享的金鑰更具變化，藉以增強資料在網路傳送時的安全度。IKE
是由 IETF 所制定，但是由於協定太過複雜並且容易遭受阻絕服務式(Denial-of-Service, DoS)
攻擊，因此有許多學者紛紛提出不同的解決方案要來取代原本的 IKE。在本論文裡，我們
分析了現有的 IKE 協定，針對其所不足的地方加以改進，提出了一個更安全且更具效率的
網路金鑰交換協定，並透過實驗來驗證，我們的協定在抵擋阻絕服務式攻擊，以及在協商
金鑰與安全關聯的效率上有更好的表現。 
關鍵詞：網路安全，IP 安全協定，網路金鑰交換協定，阻絕服務式攻擊，身份認證 
 
 
Abstract 
 
IPSec provides encryption and authentication for data packets and protects the data from 
being modified. However, the keys must be shared between two peers before IPSec can be 
functioned. Besides basic pre-shared key, using IKE to negotiate keys and security associations 
(SAs) can make keys more variable, enhancing the security of the packets over the Internet. IKE 
is drawn up by IETF, but it is too complexity and vulnerable to DoS attack. Therefore, many 
researchers have proposed different solutions to replace original IKE. In this paper, we analyze 
exiting IKE protocols and improve their weaknesses and shortcomings then propose a more 
secure and efficient IKE. We also show that our protocol is robust to defense DoS attack and 
more efficient in negotiating keys and SAs through experiment. 
 
Keywords: Network Security, IPSec, Internet Key Exchange (IKE), Denial-of-Service (DoS), 
DDoS, Identity Authentication. 
 
 
 
 
 3
碼，發起者須將包含該訊息認證碼的訊息回傳
給回應者來證明並非使用偽造的 IP，另外會將
所收到的第三個訊息及所回應的第四個訊
息，存放到快取裡，目的是如果將來收到重複
的第三個訊息封包時，直接回應相對的第四個
訊息，無須再付出計算會議金鑰的代價，以避
免 CPU 的 DoS 攻擊。Arcanum[11]利用一個只
有回應者知道的數值來與其它的資訊產生一
個 cookie 值，同樣可避免偽造 IP 的 DoS 攻擊；
另外使用 stack 存放預先計算的 Diffie-Hellman
公開參數與私密鑰匙對，可省去在收到發起者
的連線請求時所需的線上指數運算，避免 CPU
的 DoS 攻擊。 
    Haddad[2]修改 Hirose[1]的金鑰交換協
定，使之可適用於協商 IPSec 的金鑰與安全關
聯，協商過程如圖 1 所示(圖中有網底部分為
加密的訊息)，為了修正原有的弱點，加入了
TimeStamp(TS)來避免重送(replay)攻擊，使用
會議金鑰來對發起者的身份作加密的保護以
及確保第三個訊息的完整性，並利用 lookup 
table 來過濾重複收到的封包，以避免遭受 CPU
的 DoS 攻擊。Haddad[2]的金鑰交換協定僅有
第一階段 IKE 的協商，第二階段的協商是利用
快速模式來協商 IPSec 的金鑰與安全關聯，在
IKEv1[4]尚需要三個訊息的交換才能完成，協
商過程如圖 2 所示(圖中有網底部分為加密的
訊息)： 
 
 
 
圖 2 第二階段協商(快速模式) 
 
 
3. 本論文之網路金鑰交換協定 
 
Haddad[2]的金鑰交換協定主要針對第一
階段 IKE 金鑰與安全關聯的協商部分進行探
討，並不包含第二階段 IPSec 安全關聯的協
商，第二階段的協商是利用第一階段協商所得
到的金鑰來加密交換的訊息，在進行一次第一
階段協商後，可以再進行多次的第二階段協
商，藉以增加 IPSec 的安全性。最早在 IKEv2[7]
允許通訊雙方在第一次進行協商時，將第二階
段的協商於第一階段來進行，之後如 IPSec 欲
更新彼此的金鑰與安全關聯，可以直接進行第
二階段協商，這樣可以減少雙方在第一次進行
協商時所需交換的訊息數目，增加金鑰交換協
定協商的效率，因此本論文的金鑰交換協定將
會採用這樣的設計方式。圖 3 為本論文之網路
金鑰交換協定，圖中有網底部分為加密的訊
息，框線部分為本論文的網路金鑰交換協定與
Haddad[2]協定的差異之處，除此之外於第三個
訊息無需再將 ur回傳給回應者。 
將一些與使用者身份無關的數值(kr, rr, ur, 
xr) 透 過 離 線 (off-line) 的 預 先 運 算
(pre-computation)，可以省去回應者在收到連線
請求後所需的線上 (on-line)指數運算，然而
Hirose[1]與 Haddad[2]都未交代如何來處理並
使用預先運算的數值，假如回應者在收到一個
連線請求後，就使用掉一組預先運算的數值，
攻擊者將可利用發送大量的連線請求給回應
者，使得回應者用完所有預先運算的數值，此
時回應者就必須再經計算以產生一些數值來
使用，而產生這些數值(kr, rr, ur, xr)所需的計算
成本比產生會議金鑰所需的計算成本要高，因
此將會導致回應者遭受 CPU 的 DoS 攻擊。 
Haddad[2]為了增加原本協定的安全性加
入了一些的數值(如 ci、cr、TS 與 hi)，讓惡意
的攻擊者無法輕易對協定造成威脅，當模數 p
越大時(bits 數越多)所增加的資料量幾乎以倍
數 成 長 ， 以 乙 太 網 路 的 最 大 傳 輸 單 元
(MTU)1500bytes 而言，超過該大小的封包都需
要進行 IP 分段(IP fragment)傳送，回應者在收
到分段傳送的封包時，會將它先存放到等待重
組的佇列中，等收到剩下的封包後便進行 IP
分段重組(IP fragment reassembly)，而在佇列裡
的分段封包，如未經重組將會保留 30 或 60 秒
[6]。由於金鑰交換協定大都利用 UDP 協定來
進行傳送，封包是否成功的傳送給對方將無法
得知，因此惡意的攻擊者仍可利用大量分段但
不完整的封包，佔據回應者等待重組的佇列，
讓正常使用者的分段封包無法進行重組，也因
此無法進行金鑰的協商，導致 DoS 攻擊[6]。 
本論文所提之協定將這些可預先計算的
數值先行計算後存放到一個檔案中，當需要用
到這些數值時，便從檔案之中將數值取出，透
過這樣的方式，原本 Haddad[2]金鑰交換協定
裡的 cr = Er (kr, TS, ur, xr)將改成 cr = Er (offset, 
TS)，使用 offset 到檔案之中取出相關的數值，
另外發起者回傳的第三個訊息無須再夾帶 ur，
HDR, HASH(1), SA, Ni, KE, IDci, IDcr 
HDR, HASH(2), SA, Nr, KE, IDci, IDcr 
HDR, HASH(3) 
發起者 (Initiator) 回應者 (Responder)
 5
給發起者後，並不需要紀錄任何的資訊，因此
不會遭受記憶體的 DoS 攻擊。透過預先運算能
避免在收到連線請求後所需的線上運算，可以
避免遭受 CPU 的 DoS 攻擊，並且只有在一次
成功的金鑰協商後，回應者才會使用下一組預
先計算的資料，不會因為攻擊者不斷重複的發
送第一個訊息，而把預先運算的資料給耗盡，
也能有效的避免遭受 CPU 的 DoS 攻擊。 
    如攻擊者想利用不斷重複的發送第三個
訊息給回應者，迫使回應者去作產生金鑰與認
證對方的運算，也將會被回應者所建立的表格
檢查出封包是否重送，因此也無法造成 CPU 的
DoS 攻擊。所建立的表格並不會無限的擴大，
所 記 錄 的 資 料 筆 數 將 會 是 在 有 效 的
TimeStamp(TS)裡，所能進行金鑰協商的最大次
數，以防止記憶體的 DoS 攻擊並且增進查表的
效率。另外，節省傳送所需的資料量(cr)可以減
少第二與第三個訊息封包的大小，盡可能避免
封包需要 IP 分段傳送，可以降低發生 IP 分段
DoS 攻擊的機會，這樣的作法使得 cr的資料長
度變短，有可能讓攻擊者較容易猜到原本加密
的內容，但是即使攻擊者猜到內容為何，也無
法取得用來計算會議金鑰用的 kr值，及用來確
認對方有對自己認證用的 xr值。 
    Haddad[2]僅有讓回應者去檢驗發起者是
否有真正的計算會議金鑰，並沒有讓發起者去
檢驗回應者是否有真正的計算會議金鑰，在本
論文的協定中我們使用了 ec 來讓發起者滿足
明確的金鑰確認(Explicit key confirmation)的特
性，因此可避免未知金鑰攻擊[8]。 
 
 
4. 實驗與結果 
 
我們以 Linux 作業系統作為程式的開發環
境，分別實作出了 Haddad[2]以及本論文的網
路金鑰交換協定，並進行了 DoS 攻擊的測試，
協定中所使用之雜湊函數、加解密演算法以及
相 關 亂 數 、 質 數 的 產 生 與 運 算 皆 使 用
OpenSSL[5]所提供之 Library。 
 
 
4.1 實驗環境與設定 
 
實驗環境架構如圖 4 所示，PC-A 與 PC-B
皆使用 Linux 作業系統，並且都不運行
X-Windows，以 PC-A 作為發起者，PC-B 作為
回應者，這兩部電腦是透過 Switch (D-Link 
DES-1016D 16-Ports 10/100 Fast Ethernet 
Switch) 連接在同一個區域網路裡，而當作攻
擊者的電腦則位於另外一個子網路中。 
    實驗的目的是為了測試當回應者遭受到
DoS 攻擊時，正常的發起者在跟回應者進行金
鑰協商時，是否會受到攻擊者影響，因此我們
分別記錄了發起者在正常情況下及回應者在
遭受 DoS 攻擊情況下，發起者與回應者在進行
金鑰協商所需的時間，另外記錄了回應者在遭
受 DoS 攻擊時 CPU 的使用狀態。 
 
 
 
Switch
10/100 MB/s Ethernet
PC-B
OS: Linux
CPU: 1800MHZ
Memory: 512MB
PC-A
OS: Linux
CPU: 450MHZ
Memory: 512MB
Initiator
IP: 163.25.148.7x
Responder
IP: 163.25.148.7x
LAN
Attacker
IP: 163.25.148.5x  
 
圖 4 DoS 攻擊測試環境圖 
 
 
我們分別進行了三種 DoS 攻擊的測試，描
述如下： 
一、 使用第一個訊息，攻擊者僅發送大量的第
一個連線請求的訊息給回應者，即攻擊者
在發出第一個訊息給回應者後，不理會回
應者所回傳的第二個訊息。 
二、 使用第三個訊息，攻擊者發出第一個連線
請求的訊息給回應者，且收到回應者所回
應的第二個訊息後，重複發送有效的第三
個訊息給回應者。 
三、 使用第一與第三個訊息，攻擊者結合上述
兩種攻擊方式，同時發送大量的第一與第
三個訊息給回應者。 
在第一種攻擊方式中，我們分別讓攻擊者
每秒發送 500 次與 1000 次的連線請求給回應
者；在第二種攻擊方式中，則分別讓攻擊者每
秒回應 500 個與 1000 個有效的第三個訊息給
回應者；在第三種攻擊方式中，則分別讓攻擊
者每秒發出總數 500 個與 1000 個的第一與第
 7
每秒1000個第三訊息
0
10
20
30
40
50
60
70
80
90
100
1 11 21 31 41 51 61
時間 (s)
CP
U 
使
用
率
 (%
)
User Sys Idle
 
圖 6 回應端於第二種攻擊下 CPU 使用狀態 
 
 
每秒總數1000個之第一與第三訊息
0
10
20
30
40
50
60
70
80
90
100
1 11 21 31 41 51 61
時間 (s)
CP
U 
使
用
率
 (%
)
User Sys Idle
 
圖 7 回應端於第三種攻擊下 CPU 使用狀態 
 
當攻擊者所發動的 DoS 攻擊，造成回應者
CPU 的空閒時間處於 0%時，即超過了回應者
CPU 處理能力的上限，回應者因無法馬上處理
完攻擊者的封包，在回應者接收封包的暫存區
將充斥著攻擊者的封包，使得正常發起者所發
送的封包無法被回應者接收，即使回應者此時
能夠回覆第二個訊息給發起者，但是發起者所
回傳的第三個訊息也不一定能夠再進得了暫
存區讓回應者來接收。只要攻擊者停止了 DoS
攻擊，回應者 CPU 的空閒時間很迅速的就能恢
復到 100%，繼續服務正常的連線請求。 
 
 
5. 結論 
 
本論文基於 Haddad[2]的金鑰交換協定，
提出了一個改良的網路金鑰交換協定，使用了
四個訊息來協商 IPSec 所需的金鑰與安全關
聯，透過較少的計算量、資料量及協商的回合
數來完成協商，提高了金鑰與安全關聯協商的
效率；而對預先運算的處理，也讓攻擊者的
DoS 攻擊無法產生作用；另外也增進了原本協
定的安全性，讓通訊雙方都能夠去作明確的金
鑰確認，可避免未知金鑰攻擊；實驗的結果也
驗證了我們的網路金鑰交換協定具有抵擋 DoS
攻擊的能力，讓 DoS 攻擊無法對金鑰與安全關
聯的協商造成影響。 
經由協定的修改，可讓攻擊者無法輕易的
達成 DoS 攻擊的目的，降低 DoS 攻擊所造成
的影響，使用不同等級的電腦其所能承受 DoS
攻擊的程度也不同，且每部電腦的處理能力都
是有限的，要全面防堵 DoS 攻擊仍需搭配網路
上其他的設備，譬如防火牆、網路入侵偵測或
防禦系統，方能夠架構出一個安全的網路環
境。 
 
 
誌謝: 本論文得以順利完成，感謝行政院
國科會專題研究計畫案 (NSC94-2213-E- 
130-022)的經費支持。 
 
 
參考文獻 
 
[1] S. Hirose, K. Matsuura, “Key Agreement 
Protocols Resistant to a Denial-to-Service” 
IEICE Trans. On Information and Systems, 
Vol.E84-D, No.4, pp.477-484, April 2001. 
[2] Haddad, H., Berenjkoub, M., Gazor, S., “A 
PROPOSED PROTOCOL FOR INTERNET 
KEY EXCHANGE(IKE)”, Electrical and 
Computer Engineering, Canadian Conference, 
May 2004. 
[3] Diffie W, Hellman M, “New direction in 
cryptography”, IEEE transactions on 
Information Theory, Vol. 22, Issue 6, 
p.644-654 , Nov 1976. 
[4] D. Harkins and D. Carrel, “The Internet Key 
Exchange (IKE)”, RFC 2409, November 
1998. 
[5] OpenSSL Project, http://www.openssl.org/ 
[6] Charlie Kaufman, Radia Perlman and Bill 
Sommerfeld, “DoS Protection for UDP-Based 
Protocols”, CCS’03, Washington, DC, USA, 
October 27-31, 2003. 
[7] Charlie Kaufman, “Internet Key Exchange 
(IKEv2) Protocol”, IETF, 
draft-ietf-ipsec-ikev2-17, September 23, 2004. 
[8] Blake-Wilson S, Menezes A, “Authenticated 
Diffie-Hellman key agreement protocols”, 
Proceedings of the 5th Annual Workshop on 
Selected Areas in Cryptography (SAC’98), 
