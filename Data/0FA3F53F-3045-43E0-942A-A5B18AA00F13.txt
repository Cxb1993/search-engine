1 
行政院國家科學委員會補助專題研究計畫成果報告 
「最小 k 分割問題」與相關問題之演算法的研究 
A study on the minimum k-cut problem and some related 
problems 
計畫編號：NSC－97－2221－E－007－118 
執行期限：97 年 08 月 01 日至 98 年 07 月 31 日 
主持人：王 炳 豐   國立清華大學資訊工程學系 
 
一、摘要 
 
 給定一個圖形 G 和一個整數 k，「最
小  k 分割問題」  (the minimum k-cut 
problem) 討論的是如何用最小的 cost 將 
G 的 vertex set 分割為 k 個部份。這個
問題由於在實際生活中具有許許多多的
重要應用 (例如: clustering, VLSI design, 
task allocation in distributed computing 
systems, and network reliability)，所以一直
是計算機科學中最重要的基礎研究問題
之一。在許多實際應用上，(例如: the graph 
augmentation problem and network 
reliability problem)，找到所有的 minimum 
cuts 或 small cuts 比找到一個 minimum 
cut 更為重要，所以有許多的研究在探討
如何找出所有的 minimum cuts 或 small 
cuts。 
 計劃主持人在過去這一年全力投入這
一方面的研究，目前已經有相當不錯的研
究成果。我們將「最小 k 分割問題」相關
研究上一個非常重要的核心問題 : cut 
enumeration problem 的  delay 改進為 
Õ(nm)。這個問題之前最好的結果是 
Õ(n2m)，是由著名的  Prof. Vazirani and 
Yannakakis 在 1992 年提出。利用我們在 
cut enumeration problem 上的改進結果，
我們也將「最小 k 分割問題」在 k = 3, 4, 
5, 6 時的 upper bounds 都降低一個 Õ(n) 
的 factor。 
  
關鍵詞：最小 k 分割、圖形理論、演算
法設計與分析、資料結構、最大流量 
 
Abstract 
 
Let G be an edge-weighted undirected 
graph with n vertices and m edges. A k-cut is 
a partition of the vertex set into k non-empty 
disjoint subsets. The minimum k-cut 
problem is to find a k-cut that minimizes the 
total weight of the edges whose endpoints 
are in different subsets. The minimum k-cut 
problem has many important real-world 
applications, such as clustering, VLSI 
design, task allocation in distributed 
computing systems, and network reliability. 
It is one of the most important and 
fundamental problems in computer science 
and thus has received much attention in the 
literature. 
We have studied the minimum k-cut 
problem for one year and have already got 
some good results: we have improved the 
delay for the cut enumeration problem from 
Õ(n2m) to Õ(nm) and we have reduced the 
3 
 Vazirani and Yannakakis [10] introduced 
the problems of enumerating cuts of a graph 
by non-decreasing weights. There are four 
problems, depending on whether the graph is 
directed or undirected, and on whether we 
consider all cuts of the graph or only s-t cuts 
for a given pair of vertices s, t. These 
enumeration problems were motivated by an 
application in studying the reliability and 
connectivity of networks [10]. For each of the 
problems, Vazirani and Yannakakis gave an 
efficient algorithm that requires at most n − 1 
maximum flow computations between two 
successive outputs. Since a maximum flow 
computation can be done in Õ(nm) time, the 
delays of their algorithms are Õ(n2m). In this 
project, we have obtained improved 
algorithm for each of the enumeration 
problems. The delays of our algorithms are 
O(nmlog (n2/m)). Our algorithms have the 
same schema as Vazirani and Yannakakis's 
algorithms. Our improvement is based on a 
delicate application of Hao and Orlin's 
minimum cut algorithm to their framework. 
Our improved results are formally stated in 
the following theorem. 
 
Theorem 1. The cuts of a directed graph can 
be enumerated in the order of non-decreasing 
weights with O(nmlog (n2/m)) time delay 
between two successive outputs. 
 
Theorem 2. The s-t cuts of a directed graph 
can be enumerated in the order of 
non-decreasing weights with O(nmlog (n2/m)) 
time delay between two successive outputs. 
Theorem 3. The cuts of an undirected graph 
can be enumerated in the order of 
non-decreasing weights with O(nmlog 
(n2/m)) time delay between two successive 
outputs. 
 
Theorem 4. The s-t cuts of an undirected 
graph can be enumerated in the order of 
non-decreasing weights with O(nmlog 
(n2/m)) time delay between two successive 
outputs.  
 
3.3  Improved algorithm for the  
 minimum {3, 4, 5, 6}-cut problem 
 
 Consider the minimum k-cut problem 
for k = 3, 4, 5, 6. For k = 3, Nagamochi and 
Ibaraki [6] had an O(n3mlog (n2/m))-time 
algorithm, and Burlet and Goldschmidt [1] 
had an O(n3m + n4log n)-time algorithm. For 
k = 4, Nagamochi and Ibaraki [6] had an 
O(n4mlog (n2/m))-time algorithm. For k = 5 
and 6, Nagamochi, Katayama, and Ibaraki [7] 
showed that the problem can be solved in 
O(nkmlog (n2/m)) time. 
 Vazirani and Yannakakis's algorithms 
have been used as basic subroutines in the 
above solutions of the minimum {3, 4, 5, 
6}-cut problems. Therefore, our improved 
algorithms for cut enumeration can also be 
applied to reduce the running time of these 
solutions by a factor of Õ(n). Our new results 
for the minimum {3, 4, 5, 6}-cut problems 
are formally stated as follows. 
 
