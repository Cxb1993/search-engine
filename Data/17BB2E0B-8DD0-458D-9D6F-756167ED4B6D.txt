 1
一. 中英文摘要 
摘要 
無線感測網路(簡稱 WSN)是由一群數量龐大的無線感測節點所構成。然而，這些感測節點
很容易因為本身的低成本設計或是在佈署過程造成節點的損壞。除此之外，損壞的節點也
會一直回報不可靠的資訊。當資料融合節點(fusion center)融合損壞節點的影響成分變大
時，可能會使得資料融合節點做出錯誤的決定。並且感測節點的錯誤型態相當廣泛，使得
要設計出錯誤容忍的機制非常困難。這個研究提出在無線感測網路當中使用錯誤的節點隔
離，藉著連續暫時儲存下來的區域決策(local decision)，資料融合節點即可試圖指出錯誤的
節點。在這個研究裡，設計紀錄表來記錄從所有節點傳送的區域決策歷史訊息。資料融合
節點再由這個紀錄表的資訊來判斷出哪一個節點在過去的行為表現是不正常就認定它為損
壞的節點。為了改善這分散式系統在做決策的效能，被判定為損壞的節點所回傳的資料在
做決策融合的過程將不被採用。因為無線感測網路的計算能力受到限制，所以一個採用簡
單資料統計的快速辨別出錯誤節點且低複雜度的錯誤偵測方法被我們提出。 
關鍵詞：無線感測網路、錯誤容忍偵測、故障節點偵測、決策融合法則、紀錄表。 
Abstract 
Wireless sensor networks (WSN) are composed of a large number of sensor nodes. However, the 
sensor nodes in WSN are very prone to damage due to the low-cost design and random 
deployment. Additionally, the faulty sensor nodes always report unreliable information. The 
fusion center may make a wrong decision when the combined effect of faulty nodes is great. 
Moreover, the wide range of the sensor fault types renders the design of fault-tolerant detection 
very difficult. This work addresses fault isolation in WSN where the fusion center attempts to 
identify faulty nodes through temporal sequences of received local decisions. A record table is 
designed to record the history of local decisions transmitted from all nodes in this study. The 
fusion then identifies a faulty node whose behavior is unusual through the information in the 
record table. The corresponding data transmitted by faulty nodes will be isolated in the decision 
fusion process in order to improve the detection performance of the distributed system. Because 
of the computing capability constraint in WSN, a low-complexity fault detection scheme, which 
adopts simple statistics to quickly identify faulty nodes, is proposed. 
Keywords: Wireless sensor networks, fault-tolerant detection, sensor fault detection, decision 
fusion, record table. 
 3
detection based on a collaboratively sequential detection scheme. After identifying faulty 
members, the fusion center isolates the corresponding data of faulty nodes in the decision fusion 
process. Therefore, a final decision made based only on the information of normal nodes is more 
dependable. 
The considered scenario has many applications such as health monitoring and security 
surveillance. A deployed sensor network in each of these applications may have to report its 
decision at every measured time step; for this reason, an appropriate strategy can be immediately 
adopted when an unexpected event occurs. 
The problem of distributed decision fusion in WSN has received much attention because of 
many important applications [1], [6], [11], [12], [18], [19], [24], [25]. Faulty nodes may degrade 
the performance of the distributed hypothesis testing. As the aforementioned statement, the types 
of sensor faults in WSN are diverse. A possible approach to tolerate diverse sensor faults is 
employing a robust fusion rule [2], [7], [15]. Those approaches consider the fusion performance 
in one snapshot. However, estimating the failure probabilities of faulty nodes in one particular 
snapshot is difficult. Conversely, faulty nodes might be detectable if sensor nodes transmit local 
decisions to the fusion center sequentially. 
Some related investigations have addressed variants of fault detection problems. The fault 
detection by central testing can be found in [3], [4]. The distributed fault detection problem for 
general nonlinear, non-Gaussian stochastic systems with multiple sensor nodes has been 
addressed [10]. The work in [14] applied the non-parametric statistics-based technique for 
identifying faulty nodes in a sensor network. However, the ultimate objective in this study is to 
improve the performance of hypothesis detection instead of aiming at the performance of the 
misbehavior sensor identification. 
This work also considers the problem of sensor fault detection as follows. The fusion center 
can identify a faulty node by judging whether its behavior is very different from the others since 
each node sends its local decision to the fusion center at every time step. Therefore, a sensor fault 
detection scheme with a record table, which records the history of all local decisions during the 
monitor process, is proposed. The faulty nodes would be collaboratively determined by 
comparing each node’s behavior with the joint behavior contributed from all nodes. Owing to the 
computing capability constraint in WSN, the proposed scheme uses average and standard 
deviation as the statistics for quantifying the behavior of each node. Since the employed statistic 
is quite simple, applying the proposed sensor fault detection scheme in real applications is 
feasible. 
(四) 研究方法 
1. System Model and Problem Formulation 
This section first describes the system model and the problem formulation. This work 
concentrates the attention on sensor fault detection in WSN for improving the performance of the 
hypothesis testing. However, the kinds of sensor fault types in a sensor network are actually very 
density at each node is also identical. For all sensor nodes, let PD denote the probability of 
detection, PM denote the probability of miss, and PF denote the probability of false alarm. 
PD = P(Decide H1 | H1 present), 
PM = P(Decide H0 | H1 present), 
PF = P(Decide H1 | H0 present). 
Let’s consider the fusion center is processing information at time step T. The preliminary 
decisions are gathered together and the record table is updated to time step T. The fusion center 
then begins to utilize the proposed sensor fault detection scheme for the identification of faulty 
members. If node si is indicated as faulty, its local decisions u
t
i, t from 1 to T, will be ignored in 
the decision fusion process. Continuously, the fusion center applies the likelihood ratio 
computation to decide a final decision. Through removing incorrect local decisions, final 
decisions made based only on the information of normal nodes are more dependable. The 
detection system can certainly isolate faulty nodes in a network since the fusion center executes 
the fault detection process at every time step. Therefore, a superior performance of the hypothesis 
testing in WSN could be anticipative by applying the proposed sensor fault detection scheme. 
Since an identical local decision rule is employed at each node, the optimal fusion rule in 
this work is reduced to the K-out-of-NT fusion rule based on a well-known result of distributed 
detection [18], where T is the current time step The optimal value of K(N, T) obtained by the 
minimization of error probability criterion can be written as 
 

 
otherwise,,0
0;  if, 
   ),(
**  KK
TNK  
where  denotes the standard ceiling function, and 
 
 )1(/)1(log
)1/()1(log
1
0
*
DFFD
NT
DF
PPPP
PP
K 



 



 

 
B. Sensor Fault Types 
A sensor network is very likely to contain faulty nodes, because sensor nodes are usually 
low-cost and randomly deployed in the monitored environment. Additionally, the sensor faults 
may include hardware or software damage resulting in all misbehavior; hence, the types of sensor 
faults are diverse. 
This work primarily considers three kinds of sensor faults. The first fault type is that a faulty 
sensor node is frozen to transmit a fixed local decision ‘0’ to the fusion center regardless of the 
real observation. This type of sensor fault is named stuck-at-zero fault. Similarly, the second fault 
type is called stuck-at-one fault when a faulty node always transmits a fixed decision ‘1’ to the 
fusion center. The third sensor fault type is that a faulty sensor node randomly reports decision ‘0’ 
 5
proposed fault detection scheme just applies average and standard deviation as the statistics to 
quantify the behavior of each node. Let R tavg and R
t
SD respectively denote the average and standard 
deviation of rates among all sensor nodes at time step t as (3) and (4). 
 R tavg = 
1
N
i=1
N
 Rti  (3) ,
 R tSD = 
1
N1i=1
N
 (Rti  R tavg  (4) )2.
Faulty nodes can be collaboratively decided by comparing each node’s behavior with the 
joint behavior contributed from all nodes. The fusion center in this work judges that node si is 
faulty when Rti is very distant from R
t
avg as (5). 
 |Rti  | > .R tavg R tSD  (5) 
Fig. 2 shows a sensor node is indicated as faulty if its rate locates in the outside of the 
normal region which ranges form (R tavg  R tSD) to (R tavg  R tSD). The reason is this node’s behavior 
is very different from the joint behavior contributed from all sensor nodes. 
 
Fig. 2 Fault detection rule. 
Faulty sensor nodes always report undependable information to the fusion center regardless 
of the present hypothesis. The unreliable local decisions may cause the distributed detection 
system to make an incorrect final decision. For improving the performance of the hypothesis 
detection in WSN, the fusion center in this work identifies faulty members at every time step. 
Once a sensor node is indicated as faulty, the fusion center will remove the local decisions 
transmitted by this node in the decision fusion process. Therefore, final decisions made based 
only on the data of normal nodes are more believable. 
However, the initial design of the proposed fault detection scheme may incorrectly work in a 
fault-free situation. The rates of all normal nodes are very approximate, because all nodes follow 
the same conditional probability. Consequently, the standard deviation of rates among all nodes is 
small. Several rates of normal nodes possibly locate in the outside of the normal region. The 
reason is the ratio of the area of the normal region to the total area is around 0.683 [21]. Some 
normal nodes are wrongly indicated as faulty. For reducing the probability of erroneous judgment, 
the proposed approach needs a threshold to determine if any faulty node exists in the network. 
 7
This work is the extension of the previous study [20]. The primary difference is that each 
 9
Given H1, R
t = detection probability PD. 
Given H0, R
t = false alarm probability PF. 
Continuously, the theoretical average of rates among all nodes regardless of the number of 
faulty nodes and sensor fault types is derived. Let NF denote the real number of faulty nodes in a 
network and RF denote the expected ratio of decisions ‘1’ to all decisions sent by a faulty node. 
For example, the RF of stuck-at-zero fault, stuck-at-one fault, and random fault are 0, 1, and 0.5 
respectively. On the other hand, the expected rate of a normal node is directly represented by the 
detection probability PD. If NF and RF are known in advance, the theoretical average of all rates in 
any condition can be easily obtained. Let R tavg(NF, RF) denote the theoretical average of rates 
among all nodes at time step t. Given H1, R
t
avg(NF, RF) can be expressed as 
 R tavg(NF, RF) = 
1
N[(NNF)PD + (NF)RF] = 
NNF
N PD + 
NF
N RF. (8) 
Obviously, the value of R tavg(NF, RF) is constant at every time step according to the 
observation in (8). 
After deriving the theoretical average, the theoretical standard deviation of rates among all 
nodes is consecutively derived. For a normal node, the number of all possible rate vales is (T + 1) 
at time step T. Each possible rate value can be presented by the corresponding combination of the 
number of decisions ‘1’ from all decisions. Furthermore, the probabilities of making decisions ‘1’ 
and ‘0’ are PD and PM respectively. Therefore, calculating the squared deviation needs to consider 
all possible rate values and corresponding combinations. On the other hand, for a faulty node, the 
squared deviation is directly calculated through RF and the theoretical average of all rates. Let 
R tSD(NF, RF) denote the theoretical standard deviation of rates among all nodes at time step t. 
Given H1, R
t
SD(NF, RF) can be expressed as 
 R tSD(NF, RF) = {
NNF
N 
i=0
t
Cti PDi PMti [(i/t)  R tavg(NF, RF)]2 
 + 
NF
N [RF  R
t
avg(NF, RF)]2}0.5. (9) 
If NF and RF are known beforehand, (9) can be used to calculate the standard deviation of all 
rates in any condition. 
Nevertheless, (9) has a drawback in terms of complexity. For normal sensor nodes, the 
computational amount of the squared deviation will raise when time gradually increases. 
However, the complex operation is unsuitable in WSN. For this reason, (9) needs further 
simplification. After deriving (See derivation in Appendix), given H1, R
t
SD(NF, RF) is simplified as 
 R tSD(NF, RF) = {
NNF
N [(R
t
avg(NF, RF)  PD)2 + (1/t)PDPM] 
 + 
NF
N [RF  R
t
avg(NF, RF)]2}0.5. (10) 
All variables in R tSD(NF, RF) are constant except (1/t) according to the observation in (10). 
Therefore, the computational amount of the theoretical standard deviation is greatly decreased. 
 Fig. 4 The flow chart of the proposed sensor fault detection scheme. 
3. Simulation Results 
The performance of the proposed scheme is compared with that of the conventional 
approach. The conventional approach refers to the distributed detection employing the likelihood 
ratio fusion rule without eliminating unreliable local decisions from the likelihood ratio 
computation. In these simulations, the types of sensor faults and the number of faulty nodes are 
unknown in advance. 
 11
A. Simulation Setup 
This study lets the conditional densities at the sensor nodes be Gaussian with unit variance. 
Under H0 and H1, the mean at all sensor nodes is assumed to be zero and m respectively. 
Consequently, each sensor node makes the local decision based on the bisection threshold m/2. 
Accordingly, the signal-to-noise ratio (SNR) can be defined as 20 log10m. The number of 
deployed nodes N is set to 10 in all simulated conditions, and the likelihood ratio threshold λ is 
set to 1. Assume that NF is smaller than a half of N. The reason is that if NF is too large, the 
system would confuse faulty nodes with normal nodes. 
Two parameters, RF and rd, in the threshold function are discussed. When the hypothesis H1 
is present, the stuck-at-zero fault has the greatest probability of resulting in wrong final decisions. 
Similarly, given H0, the stuck-at-one fault obviously has the greatest probability of resulting in 
incorrect final decisions. For this reason, this work sets RF to 0 in the threshold function under H1. 
Continuously, the concept of MiniMax [17] is applied to choose an optimal rd when some faulty 
nodes exist in a network. Let two faulty nodes with distribution {PD, PF} = {RF, RF}, where RF 
ranges from 0 to 1 and the error rates of final decision are evaluated at t = 20. The SNR is at 0 dB. 
Based on the aforementioned assumptions, Monte Carlo methods are used to obtain the 
simulated performance. The performances of the proposed scheme with two different rd, 0.4 and 
1.0, are evaluated. The true hypothesis and faulty sensor nodes are randomly chosen at the 
beginning of every iteration step. 
B. Result and Analysis 
The proposed sensor fault detection scheme with a threshold function, whose rd is 0.4, is 
identified as ‘Proposed scheme with rd = 0.4’. Similarly, the proposed scheme with a threshold 
function, whose rd is 1.0, is identified as ‘Proposed scheme with rd = 1.0’. The conventional 
approach which does not isolate incorrect local decisions is denoted as ‘Conventional approach.’ 
The result at 0 dB SNR in a fault-free situation is shown in Fig. 7. After updating the record 
table, the average and the standard deviation among all rates will be calculated. The fusion center 
applies (12) to judge whether any faulty sensor node exists in the network. The fault detection 
process will not be executed if the condition of monitored region is determined to be fault-free. 
0 10 20 30 40 50 60 70 80 90 100
10−4
10−3
10−2
10−1
100
Time
Er
ro
r r
at
e 
of
 fi
an
l d
ec
isi
on
Conventional approach
Proposed scheme with rd = 0.4
Proposed scheme with rd = 1.0
 
Fig. 7 Performance comparison of the proposed scheme and the conventional in a fault-free 
situation at 0 dB SNR. 
Obviously, R tSD is sometimes larger than H(t) in the beginning. The reason is the rate of each 
normal node is unstable in the first several time steps. If the number of divergent rates is large 
enough, the standard deviation is consequently large. Therefore, the monitored region of interest 
is determined to possess some faulty nodes. In the fault detection process, several normal nodes 
deviating from the majority are wrongly indicated as faulty at the moment. 
However, Fig. 7 shows that these ignored local decisions are helpful to make correct final 
decisions. When the true hypothesis is H1, the expected ratio of decisions ‘1’ to all decisions 
which have been transmitted to the fusion center by a normal node is PD. A node is indicated as 
faulty when its rate is distant form the average among all rates. There are two possible cases that 
the rate of the node is very large or very small. Unfortunately, given H1, the probability of a node 
 13
 15
nodes actually degrade the performance of hypothesis testing given H1 if they are not removed 
from the likelihood ratio computation. 
When sensor faults deviate from normal nodes, the error rate of the proposed scheme 
gradually declines. The proposed scheme improves the fusion performance when RF of the faulty 
nodes moves towards 0 and 1. Additionally, the detection performance of the designed scheme is 
the best when the sensor fault type is the stuck-at fault. 
However, when RF trends to 0.5, the performance of proposed scheme is worst than that of 
the conventional approach. The reason is faulty nodes cause the value of R tavg to move towards 0.5. 
Under H1, the rates of some normal nodes are possibly greater than the upper bound of normal 
region, (R tavg + R
t
SD); similarly, given H0, the rates of some normal nodes are probably smaller 
than the lower bound of normal region, (R tavg  R tSD). The fusion has the probability of indicating 
extraordinary normal nodes as faulty. However, these ignored local decisions of normal sensor 
nodes could help the distributed sensor network to detect correct hypotheses. Oppositely, the 
detection performance of the conventional approach is the best when RF of the faulty nodes is 
close to 0.5. The reason is the ratio of decisions ‘1’ to all decisions sent to the fusion center by a 
random fault is around 0.5; therefore, the faulty nodes do not significantly affect the judgment of 
the conventional approach. 
On the other hand, when the value of rd is 1.0, the fusion center determines conditions with 
faulty nodes, whose rates are not divergent enough, to be fault-free. Therefore, the performances 
of the proposed scheme are close to those of the conventional approach in many situations. 
However, Fig. 8 indicates the proposed scheme still outperforms the conventional approach when 
the sensor fault type trends to the stuck-at fault. 
In fact, an actual network probably contains various sensor fault types at the same time. For 
convenience, a sensor network, which simultaneously contains three considered kinds of sensor 
fault types including stuck-at-zero fault, stuck-at-one fault, and random fault, is investigated. The 
fault type of individual faulty node is randomly decided at the beginning of every iteration step. 
The SNR is still set to 0 dB. 
The detection performance in a situation containing two faulty nodes is shown in Fig. 9. The 
trend of the proposed scheme in the first time steps is identical to the aforementioned statement. 
When the result of fault detection becomes effective, the proposed scheme is superior to the 
conventional approach in terms of hypothesis detection. Fig. 9 indicates the proposed sensor fault 
detection scheme substantially improve the hypothesis detection performance. 
The performance of the proposed scheme in a network with four faulty nodes is evaluated. 
The result is illustrated in Fig. 10. The fusion error probability of the conventional approach 
becomes slack when four faulty nodes occur in the network. On the contrary, the proposed 
scheme can certainly identify the faulty sensor nodes and remove incorrect local decisions of 
faulty nodes at performing distributed decision fusion. The fusion center employing the proposed 
scheme maintains a superior performance in hypothesis detection. Therefore, the proposed 
scheme has the capability to assist the distributed detection system in making more dependable 
5.02
0
2
})],([                       
)],()/[({),(
FF
t
avgF
F
t
i
FF
t
avg
it
M
i
D
t
i
F
FF
t
SD
RNRR
N
N
RNRtiPPC
N
NNRNR

 


 
The simplification of R tSD(NF, RF) focuses on the squared deviation of normal nodes. For 
convention, let a denote R tavg(NF, RF). 
]21[])1(2)1[(   
])2(2)2[(])3(2)3[(   
])2(2)2[(])1(2)1[(
)()1()2(   
)3()2()1()0(
])[()],()/[(
22211
1
2222
2
2233
3
2222
2
2211
1
2
2211
1
222
2
233
3
222
2
211
1
2
0
2
0
2
aaPaa
t
t
t
tPPC
aa
t
t
t
tPPCaa
tt
PPC
aa
tt
PPCaa
tt
PPCaP
a
t
tPCa
t
tPPCa
t
tPPC
a
t
PPCa
t
PPCa
t
PPCa
t
PC
a
t
iPPCRNRtiPPC
t
DM
t
D
t
t
M
t
D
t
t
t
MD
t
t
MD
tt
MD
tt
M
t
D
t
tM
t
D
t
tM
t
D
t
t
t
MD
tt
MD
tt
MD
tt
M
t
o
t
i
it
M
i
D
t
i
t
i
FF
t
avg
it
M
i
D
t
i




















 


 
5.02
2
22
2222
121
2
231
3
321
2
211
1
12
1121
2
231
3
321
2
211
1
112
11
2
22
2
332211
111
2
221
3
331
2
221
1
11
211
1
22
2
33
3
22
2
11
1
})],([                            
]1)),([({),(
1)()1(1)(
11)2()11(2
])1(1)1(2   
)1(3)1(2)1(1[2
]12   
321[)(2)(
])1(
2
)2)(1(      
2
)2)(1(3)1(21[   
)(2   
)(
FF
t
avgF
F
MDDFF
t
avg
F
FF
t
SD
MDDDDD
DDDDDDD
t
DD
t
D
t
tD
t
D
t
t
t
DD
tt
DD
tt
DDD
t
DM
t
D
t
tM
t
D
t
t
t
MD
tt
MD
tt
MD
t
DMD
t
DM
t
DM
t
DM
t
D
t
MD
t
MD
t
MD
t
DM
t
D
t
tM
t
D
t
t
t
MD
tt
MD
tt
MD
t
DM
t
D
t
tM
t
D
t
t
t
MD
tt
MD
tt
MD
tt
M
RNRR
N
N
PP
t
PRNR
N
NNRNR
PP
t
PaPP
t
Pa
P
t
P
t
PaPaP
t
t
t
PaPa
PPPC
t
tPPC
t
t
PPC
t
PPC
t
P
t
PaPa
PPPC
t
tPPC
t
t
PPC
t
PPC
t
P
t
PaPPPaPP
PPP
t
tPP
t
tt
PP
t
ttPP
t
tPP
t
aPPPCPPCPPCPPCPP
aPPPCPPCPPCPPCPPCP







































 
 17
 19
Prentice-Hall, 1993. 
[5] K. Chakrabarty, S. S. Iyengar, Hairong Qi, and Eungchun Cho “Grid coverage for 
surveillance and target location in distributed sensor networks,” IEEE Transactions on 
Computers, vol. 51, no. 12, pp. 1448–1453, December 2002. 
[6] J.-F. Chamberland and V. V. Veeravalli, “Asymptotic results for decentralized detection in 
power constrained wireless sensor networks,” IEEE Journal of Selected Areas in 
Communications, vol. 22, no. 6, pp. 1007–1015, August 2004. 
[7] B. Chen, R. Jiang, T. Kasetkasem, and P. K. Varshney, “Channel aware decision fusion in 
wireless sensor networks,” IEEE Transactions on Signal Processing, vol. 52, no. 12, pp. 
3454–3458, December 2004. 
[8] P. N. Chen and A. Papamarcou, “New asymtotic results in parallel distributed detection,” 
IEEE Transactions on Information Theory, vol. 39, no. 6, pp. 1847–1863, November 1993. 
[9] S. S. Dhillon and K. Chakrabarty, “Sensor placement for effective coverage and surveillance 
in distributed sensor networks,” in Proceedings of the 2003 IEEE Wireless Communications 
and Networking Conference, vol. 3, pp. 1609–1614, March 2003. 
[10] Q. Cheng, P. K. Varshney, J. Michels, and C. M. Belcastro, “Distributed fault detection via 
particle filtering and decision fusion,” in Proceedings of the 8th International Conference on 
Information Fusion, vol. 2, pp. 1239–1246, July 2005. 
[11] T. Clouqueur, K.K. Saluja, and P. Ramanathan, “Fault tolerance in collaborative sensor 
networks for target detection,” IEEE Transactions on Computers, vol. 53, no. 3, pp. 320–333, 
March 2004. 
[12] D’Costa and A. M. Sayeed, “Data versus decision fusion for distributed classification in 
sensor networks,” in Proceedings of the 2003 IEEE International Conference on Acoustics, 
Speech, and Signal Processing, vol. 1, pp. 585–590, April 2003.  
[13] N. Heo and P. K. Varshney, “Energy-efficient deployment of intelligent mobile sensor 
networks,” IEEE Transactions on Systems, Man and Cybernetics-Part A: Systems and 
Humans, vol. 35, no. 1, pp. 78–92, January 2005. 
[14] F. Koushanfar, M. Potkonjak, and A. Sangiovanni-Vincentelli, “On-line fault detection of 
sensor measurement,” Proceedings of IEEE Sensors, vol. 2, pp. 974–979, October 2003. 
[15] R. Niu, B. Chen, and P. K. Varshney, “Decision fusion rules in wireless sensor networks 
using fading channel statistics,” in Proceedings of the 37th Annual Conference on 
Information Sciences and Systems, pp. 12–14, March 2003. 
[16] K. Pister, J. Kahn, B. Boser, S. Morris, and MLB Co., “Smart dust: autonomous sensing and 
communication in a cubic millimeter,” http://robotics.eecs.berkeley.edu/ ~pister/SmartDust. 
[17] M. D. Srinath, P.K. Rajasekaran, and R. Viswanathan, Introduction to Statistical Signal 
Processing with Applications, Prentice Hall, 1996. 
[18] P. K. Varshney, Distributed Detection and Data Fusion, New York: Springer-Verlag, 1997. 
[19] R. Viswanathan and P. K. Varshney, “Distributed detection with multiple sensors: part 
I–fundamentals,” Proceedings of the IEEE, vol. 85, no. 1, pp. 54–63, January 1997. 
[20] J.-Y. Wu, D.-R. Duh, T.-Y. Wang, and L.-Y. Chang, "On-line sensor fault detection scheme 
for wireless sensor networks," in Proceedings of the 2007 International Conference on 
Wireless Networks, pp. 329-334, 2007. 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                          98 年  8 月  3 日 附件三
 報告人姓名 陳侶親 
服務機構
及職稱 
國立暨南國際大學資訊工程學系
兼任助理 
時間會議 
地點 
2009/7/13–2009/7/16 
美國拉斯維加斯 
本會核定
補助文號
NSC-97-2221-E-260-001 
會議 
名稱 
 (中文)2009年無線網路國際研討會 
 (英文) The 2009 International Conference on Wireless Networks (ICWN'09) 
發表 
論文 
題目 
 (中文)使用飽和計數器來改善無線感測網路在最終決策的精準度 
 (英文)Using a Saturation Counter to Improve the Accuracy of Final Decision 
in Wireless Sensor Networks 
報告內容應包括下列各項： 
一、參加會議經過 
這次到美國拉斯維加斯參加 the 2009 International Conference on Wireless Networks 會
議，會議的日期是從 7月 13日到 7月 16日，我的報告日期是安排在第二天。這個研討
會有很多 session: 有 security + mobile computing、sensor networks、protocols + energy 
efficiency、routing & Qos + performance analysis & evaluation、wireless networks + novel 
applications、sensor networks + Bluetooth + novel applications、general: wireless networks
等。我報告的 session是 sensor networks，在這邊看見了不少亞洲的面孔，其中包括了一
些韓國、與日本的學者。在我報告完後，有幸遇到一個在佛羅里達讀大學的台灣人與我
做了一些交流，感覺是個不錯的經驗。 
二、與會心得 
能夠參加此國際研討會讓我獲益良多，不但可以開拓自己的視野與增廣見聞外，也可以增加
自己的人生經歷。經過了這次在國際研討會上發表論文的經驗，我也更加覺得英文語言能力
的重要。以前總是待在臺灣幾乎沒有什麼機會說英文，這一次總算是得到全程說英文的實戰
經驗。這是我第一次出國而且又是自己出國，那種因為國家不同所看見的文化衝擊，是令我
印象格外深刻的。下次若有機會，我決定再到國外走走。 
三、考察參觀活動(無是項活動者省略) 
無。 
四、建議 
我覺得一個大學生或是研究生都應該要培養一些世界觀，出國就是最直接的辦法。建議
就是要鼓勵台灣的學生應該要多多出國去看看不同的文化。當然在出國的時候必須要準
備足夠行前的功課，才不會在出國時變得慌亂。 
五、攜回資料名稱及內容 
WORLDCOMP `09 Conference Schedules 
Proceedings of ICWN’09 Vol. I 
Proceedings of ICWN’09 Vol. II 
會議論文光碟 
小背包 
六、其他 
無。 
表 Y04 
 
Fig. 1: System model of a two-layer fusion network.
2.1 System Model
Assume that the environment condition is under a binary
hypothesis, H0 or H1, and a two-layer wireless sensor
network is considered [2], [6]. An illustration from Fig. 1
may be informative. This system consists of a fusion center
and N identical wireless sensor nodes. Each member of
wireless sensor nodes is denoted by si, where i = 1, · · · , N .
Every wireless sensor node makes a binary local decision,
which is according to the phenomenon, individually through
the local decision rule γ at each time interval. Let xti denote
the observation from the phenomenon and uti denote the
local decision of the ith sensor node, and t is the time index.
Also, the local decision rule γ, which is employed at each
sensor node, is shown as (1).
uti = γ(x
t
i) (1)
After every wireless sensor node making a local decision,
each local decision is transmitted to the fusion center, which
is denoted by s0, and the fusion center collects local deci-
sions to make a final decision ut0 for time step t according to
the final decision rule, which is a k-out-of-N rule, as shown
in (2).
ut0 =
 1 if u
t
1 + · · ·+ utN > k
0 if ut1 + · · ·+ utN < k
R∗ otherwise
(2)
where k is a given integer with 1 ≤ k ≤ N , and R∗ is
random ‘1’ or ‘0’. In this work, all decisions such as local
decisions and final decisions are considered to be binary.
2.2 Problem Formulation
This work considers that the current phenomenon is
dependent on the previous phenomenon. Before turning to
the problem formulation, a few remarks should be made con-
cerning signal-to-noise ratio (SNR). Since the phenomenon
observations in Gaussian noise are considered in this work,
the SNR of the environment is supposed to be 0dB. Conse-
quently, assume that the event observed by a wireless sensor
node is xti = c
t + zti , where c
t is the actual phenomenon
and zti is a Gaussian random variable with zero mean and
unit variance. Moreover, define that the bi-level environment
conditions as follows: E0 ≡ {ct presents a non-event} and
E1 ≡ {ct presents an event}. Also, define that c0 is mean of
E0, and c1 is mean of E1. Therefore, the density functions
of the observation in E0 and E1 are respectively expressed
as (3).
P (xti|Eh) =
1√
2pi
e
−(xti−ch)2
2 (3)
where h is ‘0’ or ‘1’.
Recall that the local decision rule γ employed at each
node is computing the likelihood ratio test with a threshold
λ as (4).
γ ≡ P (x
t
i|E1)
P (xti|E0)
uti = 1
R
uti = 0
λ (4)
After some mathematical manipulations with (3) and (4),
equation (5) can be obtained.
xti
uti = 1
R
uti = 0
2 lnλ+ (c1)2 − (c0)2
2(c1 − c0) = K
∗ (5)
According to the local decision rule λ, however, ev-
ery wireless sensor node has a probability of normality,
probability of false alarm, probability of miss detection,
and probability of detection in local decisions. Thus, these
probabilities in local decision can be denoted as (6).
Pn = P (uti = 0|E0) = Q(−∞,K∗, c0)
Pf = P (uti = 1|E0) = Q(K∗,∞, c0)
Pm = P (uti = 0|E1) = Q(−∞,K∗, c1)
Pd = P (uti = 1|E1) = Q(K∗,∞, c1)
(6)
where Pn, Pf , Pm and Pd are the probabilities of normality,
false alarm, miss and detection separately in local decision.
Additionally, Q(a, b, c) is defined as (7).
Q(a, b, c) =
∫ b
a
1√
2pi
e
−(x−c)2
2 dx (7)
Assume that λ = 1, Pf = Pm = ε and Pn = Pd = φ can
be obtained expectably. Thus, the final decision accuracy by
using k-out-of-N rule can also be obtained according to the
binomial theorem as (8) and (9).
PF = PM =
N∑
i=k
CNi × φN−i × εi = α (8)
PN = PD = 1− α = β (9)
Fig. 2: The state diagram used to analyze RErrorEC=0(θ) when
the maximum counter value is θ.
There are two error sources: one is purely from the
affection of noise, and the other is from the detection time
delay. Therefore, RError(θ) can be obtained as (13).
RError(θ) =
RErrorEC=0(θ)[MTI− τ(θ)EC] + τ(θ)EC
MTI
(13)
where RErrorEC=0(θ) is the final decision error rate when
environment condition is stable; MTI is the maximum time
interval that the WSN is out of work, and EC is the number
of event changes. The MTI can be obtained by estimating
the expected power supply time of wireless sensor nodes,
and the EC can be estimated by statistics. Therefore, the
continuing work is to analyze RErrorEC=0(θ) and τ(θ). Using
finite state machines and Markov process are considered to
analyze RErrorEC=0(θ) and τ(θ).
This work considers that the decision counter has 2θ
states when the maximum counter value is set to θ, and
each counter value is presented in a state, as shown in Fig.
2. Because of the symmetry between two hypotheses, this
work only considers that the environment condition is non-
event for initialization and not changed during monitoring.
Moreover, the whites represent the states of DF (t) = 0; the
grays indicate the states of DF (t) = 1. Also, each directed
arc stands for the transition probability α (β) for DP (t) = 1
(0).
The transition probability in Fig. 2 can be denoted by
pi,j where i (j) indicates the current (next) state. Therefore,
the set of one step transition probabilities is denoted by the
matrix Pθ, as (14).
Pθ =

p0,0 p0,1 · · · p0,2θ−1
p1,0 p1,1 · · · p1,2θ−1
...
...
. . .
...
p2θ−1,0 p2θ−1,1 · · · p2θ−1,2θ−1
 (14)
Notably, Pθ can be generated regularly. For the finite
chain, the state probabilities at time t is denoted by the row
vector (15).
Fig. 3: The state diagram used to analyze τ(θ) when the
maximum counter value is θ.
p(t) =
[
p0(t) p1(t) · · · p2θ−1(t)
]
= p(0)Ptθ (15)
where p(0) =
[
1 0 · · · 0] for initialization and Ptθ is
(Pθ)t. Based on Fig. 2, therefore, the RErrorEC=0(θ) can be
obtained by summing up all gray states probabilities, as
shown in (16).
RErrorEC=0(θ) =
1
MTI
2θ−1∑
i=θ
MTI∑
t=1
pi(t) (16)
Let α (β) represent the transition probability DP (t) = 0
(1). For the analysis of τ(θ), the finite state machine is
shown as Fig. 3. Notably, only the condition changing from
non-event to event is considered because of symmetry. The
grays represent the miss states in the final decision; the
white one indicates the state of DF (t) = 1 after τ(θ)
delay. Additionally, the transition probability in Fig. 3 can
be denoted by di,j . Therefore, the transition matrix can be
denoted by Dθ, as (17).
Dθ =

d0,0 d0,1 · · · d0,θ
d1,0 d1,1 · · · d1,θ
...
...
. . .
...
dθ,0 dθ,1 · · · dθ,θ
 (17)
Let t′ be the time when the environment condition is
changing from non-event to event, and the range of t′ is
from 1 to MTI. The state probabilities at time t is denoted
by the row vector as (18).
d(t) =
[
d0(t) d1(t) · · · dθ(t)
]
= d(t′)Dt−t
′
θ (18)
where d(t′) is the state vector when t = t′ and Dt−t
′
θ
represents (Dθ)t−t
′
. The interest is that d(t′) can be obtained
from (15).
d(t′) =
[
d0(t′) d1(t′) · · · dθ−1(t′) dθ(t′)
]
=
[
p0(t′) p1(t′) · · · pθ−1(t′)
2θ−1∑
i=θ
pi(t′)
]
(19)
