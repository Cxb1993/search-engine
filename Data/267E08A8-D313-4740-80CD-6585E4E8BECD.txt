 2 
一、 緣由與目的 
旅行家問題是一個具有相當歷史的組合數學問題。這個問題可以用下列的圖形意義來解
釋。給定一個擁有 n個點的完全圖 G=(V,E)以及每個點之間的權值。TSP是要去找到一個最
短的旅行路徑，他可能是由其中任意的一點出發，並且拜訪途中的每一個點一次（而且是
唯一的一次），然後回到出發的原點。TSP是一個在計算複雜理論中很經典的問題，亦即，
它是相當難解的。 
目前而言，旅行家問題演算法的應用是非常廣泛的，而如何去找到一個好的演算法來解
決這個問題也更顯的重要。很明顯地這個問題能用暴力法來計算找出最佳解，但也因為 n
個城市的組合是指數關係，所以它所花的時間跟複雜度也是呈指數關係。由複雜度來看，
它是一個難以解決的 NP-hard 問題，至今仍無法在多項式時間內找到他的答案，而藉由近
似解法找到的適合解也無法保證它是最佳的。然而，在生物資訊的領域中，有很多的問題
是可以被轉換為 TSP求解的，諸如多重序列比對問題[4]、基因組序列（genome sequencing）
[9]、實體對應（physical mapping）[5]、互補脫氧核醣核酸普遍性序列（cDNA universal strings）
[14]、演化樹重建（evolutionary tree reconstruction）[12]，以及蛋白質結構預測（protein structure 
prediction）[3]等。 
值得注意的是，分支界定演算法是最常用來提高求解 NP-hard問題的效率之演算法。在
某些研究中，分支界定法已經被用來在平行電腦、叢集電腦及分散式電腦上解決 TSP的問
題。 
Grid 及叢集計算間的主要區別在於資源的管理方式。叢集計算是屬於中央資源管裡的
方式，而所有的運算點相互依靠的在一起工作，就像個單一的運算資源。反之，Grid 的每
一個點具有獨立的資源管理能力。也就因為它的強大運算能力，所以它是用來解決 TSP的
好選擇之一。 
Richard Wiener 的演算法[16]是建構在分支界定法上的用來解決 TSP問題最好的演算法
之一。他可以接受 n × n 的非對稱矩陣，亦即，他不需遵守三角不等式。然而，目前該演
算法還沒有 Grid的版本。在本年度的計畫中，我們以 Richard Wiener的演算法作為核心基
礎，去設計一個可以在格網環境中使用的 TSP解決器，並將之整合進WebGrid的環境中，
以方便使用者使用。 
為了展示 Grid環境的強大運算能力，我們利用 TSP解決器來解決多重序列比對的問題。
之所以會選擇使用多重序列比對問題是因為它是在計算生物領域中的重要問題之一。而且
我們也瞭解到，目前的多重序列比對軟體往往需要花費好長的一段時間來求得解答；而且
有的軟體還會因為序列過長而無法執行。藉由與分散式系統作比較，我們可以藉由我們的
實驗數據來證明，我們的演算法在增加 Grid環境中的電腦數有很顯著的進步。 
“所有配對總合”的分數是目前最廣泛的用來選擇最佳化比對方法的標準。這種多重序
列比對的問題可以用 Needleman and Wunsch的延伸動態程式設計的演算法來為兩個序列定
序，我們就稱作 sum-of-pairs ( SP-score ) 。然而，在最差的狀況下，它仍需要 O(2knk)的時
間來為 k 個長度為 n 的序列定序。最差情況中所需的指數時間會迫使動態程式設計的技術
被限制到只能比對個數少，且長度短的序列。事實上，SPMSA 的問題是一個 NP-complete
 4 
這種旅行的方式我們稱為“樹的環狀旅行順序（circular tour of the tree）。每一個邊都被
經過兩次，且每個樹葉都會被經過一次。換句話說，他們認為序列 ABCD 利用 MSAM 量
測出來的分數應該是誘導成對的比對 [A, B]M, [B, C]M, [C, D]M, [D, E]M及 [E, A]M （除以 
2） 的總和，我們稱作M的 CS-score。 
在大多數的例子中，真實的序列演化樹經常不是那麼的有用且正確的。這也意味著，我
們必須找到一個方法去建構一個序列的環狀路線，但不使用已知的演化樹，所以我們還是
利用 SP-score的方式來做為本次計畫中，TSP Solver的輸入資訊。 
我們的 TSP 解決器是先將要做比對的序列兩兩間求得一權值後（SP-score），再將它存
成非對稱矩陣給予我們的演算法使用。最後，演算法會依據使用者的結果導向需求來算是
相對應的結果，並轉換為一多重序列比對的解輸出。 
我們會在第二節敘述整個研究的方法及大致的演算法。而在第三節裡，我們會展示我們
實際的實驗數據作佐證。最後，我們會在第四節中給予一些結論。 
 
二、 研究方法 
在我們所設計的程式環境中，我們會先要求使用者將所需用來做多重序列比對的序列
遵循美國 NCBI（National Center for Biotechnology Information）協會所制訂的 FASTA 的格
式儲存成檔案（參照圖三）。 
 
圖三、FASTA格式範例 
 
之後藉由 XML網頁程式的上傳介面上傳至主機。當主機接收到檔案後，會先將檔案
中的序列兩兩做比對，並依照、配對（match）、錯配對（mismatch）及間格（gap）給予不
同的配分。最後，我們將這些分數存成一個矩陣。TSP的優點就是，我們的矩陣不一定要
是對稱的。因為兩序列中，以不同的序列做為基準所求得的值將會不相同，而非對稱的矩
陣也可以大大提升我們最後得到的結果的正確率。在求取輸入矩陣的部分，我們使用 Grid
來幫助我們加快執行速度。因為如果使用者輸入的序列量大且長度都不短，使用 Grid會是
一個不錯的選擇。 
當完成這個非對稱的輸入矩陣之後，我們就將它交由 TSP去求解。在執行 TSP的時候，
如同前面所說，我們利用分支界定演算法來加快求解速度。當每得到一組解時，我們就會
更新臨界值。也就是說，如果我們決定要往下走的下一個點會造成積分高於臨界值，我們
就可以立刻捨棄它，並尋找其他的解。在我們的程式中，我們多加入了一個稱為”優先順序”
 6 
 
圖四、TSP Solver使用者介面 
 
 
圖五、MSF格式檔案範例 
 
三、 研究結果 
我們實際的使用亂數產生的輸入矩陣以及 17條禽流感的 PB2病毒序列做實驗（參考
表一）。在我們的實驗中，我們分別利用單機環境、分散式系統，以及不同數量的 Grid主
機環境做比較（參考表二、三）。很明顯的，這類需要大量計算的問題，使用單一處理器絕
 8 
在實際測試後，我們所得到的 17條 PB2序列求得的結果為 1 à 8 à 17 à 14 à 2 à 4 
à 13 à 9 à 7 à 6 à 5 à 3 à 16 à 10 à 12 à 15 à 11 à 1，此一結果與知名多重序列比
對軟體 ClustalW所得到的結果相近，而執行的速度卻比 ClustalW快。 
事實上，我們針對實驗的環境作了一個測試。我們利用不同的運算能力主機來作為格
網運算環境的 Server，來測試演算法求解的速度。根據表五的結果顯示，將運算能力越好
的主機作為整個格網運算環境的主 Server將可以提升一些運算的時間。也可以使得我們的
演算法得到更好的效能。 
 
Server Name CPU RAM 
P P4 2.6G 256M 
A P4 3.4G 256M 
B P4 2.6G 256M 
C P4 2.0G 256M 
D P4 2.4G 1G 
E P4 3.0G 1G 
F XEON 2.0G 512(PC133) 
表四、格網環境主機規格 
 
Number of machines Server OS environment times(second) 
1(D) N/A W Single 34.016 
1(D) E W GRID 42.454 
3(D,E,F) D W GRID 20.422 
3(D,E,F) E W GRID 18.266 
4(A,B,C,P) A L GRID 12.511 
4(A,B,C,P) B L GRID 10.23 
4(A,B,C,P) C L GRID 10.369 
表五、TSP求取 17條禽流感 PB2病毒於不同運算能力格網主機上所需執行時間 
 
四、 結論與自評 
由於政府正致力於生物科技、奈米科技等 IT 產業的發展，而這些產業都相當需要高速
的運算環境，以利研究與設計的模擬；因此如何提供一個簡單且易於分享的強力運算機制，
是有其發展之必要性。 
多重序列比對問題在生物資訊領域中一直扮演著很重要的一環。其中一個應用就是，藉
由多重序列比對的結果，我們可以去描繪出演化樹的樣貌，用來推測演化的大概情況。但
是目前來說，對於大量序列或是長序列而言，求取多重序列比對結果所需的時間依舊相當
的冗長。本計畫藉由利用 Grid的計算能力來實測解決多重序列比對問題的能力。透過我們
的實驗數據，我們可以很明顯的看到，藉由 Grid的卓越運算能力，用其解決多重序列比對
