Journal of Aeronautics, Astronautics and Aviation, Series A, Vol.40, No.3, pp.183 - 188 (2008)                               183 
 
Technical Note 
System Performance on Dual CAN-Bus Network for 
Avionics System Applications* 
 
 
 
Chin E. Lin** and Hung-Ming Yen 
 
Department of Aeronautics and Astronautics, National Cheng Kung University 
No. 1, University Road,, Tainan 701, Taiwan, R.O.C. 
 
 
ABSTRACT 
 
This paper presents prototype fabrication and verification on two 
different configurations of dual CAN (Controller Area Network) bus system.  
New circuit designs of bus selector and memory mapping technique are 
discussed with promotion from single bus system.  With successful 
implementations, these two circuit systems are compared with system tests.  
The system CPU load using bus selector is much less than the memory 
mapping by software under close reliability and stability performance.  
Circuit board fabrication and test is verified and extended into PC 
controlled operation. Each node will be connected to real instruments or 
sensors, as well as several simulated signals.  The dual bus IP board design 
is based on standard CAN communication stacks by firmware for different 
integration requirements.  In system verification, a primary flight display 
suitable for small aircraft application for data exchange and control is 
constructed and tested. 
 
Keywords: Dual bus system, Controller Area Network (CAN), Time 
Trigger Protocol (TTP), SATS 
 
 
                                                 
* Manuscript received, Dec. 20, 2007, final revision, Jan. 28, 2008 
** To whom correspondence should be addressed, E-mail: chinelin@mail.ncku.edu.tw 
I. INTRODUCTION 
 
The Controller Area Network (CAN) is a fieldbus 
technology that is generally used in critical control 
applications in areas such as plant control, automotive, 
robotics, avionics and aerospace.  Concerning on CAN 
bus performance, Time Trigger Protocol (TTP) is added 
to enhance system availability and stability.  However, 
as for reliability concern in avionics, many studies are 
focused on dual data bus to elevate system reliability. 
For Small Aircraft Transportation System (SATS) 
[1], digital avionics will become a necessary standard to 
enhance operation functions and promote flight safety.  
However, digital avionics system requires high reliability 
performance in data exchange between terminals to 
controller or Central Processing Unit (CPU).  Data bus 
technology is designed based on digital signal processing 
within a central control device to perform data exchange 
among terminals and controllers for modern aircrafts.   
The concept of Integrated Modular Avionics (IMA) 
was therefore introduced into air transport large aircraft.  
Some intelligent consideration using power data bus 
interconnection was developed for small aircraft using 
different configuration [2].  In large aircrafts, ARINC 
429 and 629 are typical standards for such IMA 
installations [3].  However, ARINC data bus 
specifications might be too huge, too complicate and too 
expensive to merge into small aircrafts. 
Within two decades, the CAN has become a new 
standard for modern vehicles.  From the implementation 
of CAN, more intelligent functions can be designed into 
new vehicles for more secure, more reliable, more 
comfortable, and more efficient under prompt message 
acquisition and exchange inside the vehicle.  The same 
concept is adopted in small aircrafts. However, there are 
some insufficient specifications for CAN application into 
avionics [4]. 
Data transfer reliability, stability, and security are 
factors of concern to improve from the conventional 
CAN into aviation standard [5].  Digital avionics 
implementation using single bus CAN plus TTP 
configuration has been studied [6, 7, 8].  Some 
SYSTEM PERFORMANCE ON DUAL CAN-BUS NETWORK FOR AVIONICS SYSTEM APPLICATIONS 185
and output serial transmit data stream to the bus. 
 
 
 
 
Figure 3  Hardware using bus selector. 
 
 
2.3 Control Box 
To fulfill the IMA requirement as LRU capability, a 
control box is designed to install the IP boards for power 
source and external communication ports for the tests.  
The photo coupler PC910L is applied to all circuit 
connecting to each other, especially the power source and 
the dual bus line.  There are four IP board spaces in the 
control box to connect to dual CAN bus.  The control 
box offers three independent power sources and connects 
a communication port onto the panel for MCU control 
signal and message interface. 
 
III. DUAL CAN-BUS SOFTWARE 
 
Under the dual CAN system architecture, the 
software supports the system operation, one as the 
supervisor software of PC, and the other as the firmware 
in the AT89S52. 
 
3.1 Supervisor Node 
The PC software is designed to display and 
supervise the messages of the CAN bus, developed by the 
VB (Visual Basic).  If the CAN IP board receives a 
CAN message from bus line, the message will also be 
transmitted to PC via RS-232 and be displayed on 
monitor and be recorded automatically. 
 
3.2 Firmware 
The firmware is written with C program.  It 
contains three major parts to initialize CAN station, to 
transmit and to receive messages. 
(a) Initialization of SJA1000 can only be executed in 
“Reset mode”.  In this stage, there are several jobs to 
complete, including to select the operation mode or 
filter mode, set the Acceptance Code Register (ACR) 
and Acceptance Mask Register (AMR), determine 
Board Rate and Interrupt Enable Register (IER), and 
etc.  When the initialization has accomplished, the 
SJA1000 can be implemented for normal 
communication in “Operating mode”. 
(b) When a transmission is executed, the host controller 
should find whether the priority transmission was 
completed, or whether the Transmit Buffer Status is 
released.  Then the host controller transmits the data 
into the Transmit Buffer according to the data format 
of CAN protocol, and commands SJA1000 to execute 
the message transmission. 
(c) The reception of messages can autonomously be 
carried by SJA1000 in the receiving flow.  When 
SJA1000 receives a message from CAN bus line, it 
will send an interrupt signal to MCU .  Then the 
external interrupt function carries the message 
reception from SJA1000 immediately.  At the same 
time, it disables the external interrupt 0 and transmits 
the received message to MCU.  After MCU receives 
the message successfully, the external interrupt 0 is 
then enabled to wait for the next interrupt signal from 
SJA1000.  The received messages are placed into 
Receive Buffer firstly.  Then host controller can 
transfer the message to its local message memory 
(SRAM) and release the Receive Buffer. Finally, the 
host controller outputs the message via RS232 from 
its local message memory. 
 
IV. INTEGRATION AND TEST 
 
In the implementation, the dual CAN-bus has been 
tested in aviation system and vehicle system.  In 
avionics, the Hybrid Data Bus (HDB) [7, 10] system 
architecture is built on the proposed dual CAN IP board 
using firmware and human interface design.  Both 
memory mapping and bus selector circuit systems are 
tested for avionics in this paper.  No matter how the 
control box is connecting to any sensors, the input data 
can be broadcast or point-to-point exchange among the 
CAN based network.  Figure 4 shows the proposed 
avionics data bus configuration for small aircraft in the 
integration test.   By the similar configuration, a vehicle 
system is simulated in tests.   The following test items 
are suitable for either implementation. 
 
4.1 Flight Data Exchange on Dual CAN-Bus 
The test architecture for a Dual CAN-Bus system is 
introduced.  The tests are carried out from node to node 
message transmission for control program verification.  
Then by integrating other peripheral devices, the test 
carried multiple nodes cross message transmission.  The 
developing CAN bus control program can also be applied 
for surveillance and recording for statistics analysis.  In 
SATS application, the test system simulates the function 
of a Digital Flight Data Recorder (DFDR).  With proper 
linkage, DFDR can deliver message down to ground 
surveillance via GPRS mobile communication in this 
proposed system integration.  Low altitude flight is 
assumed.   
In this paper, a microprocessor data simulator is 
fabricated to generate feasible flight data, including speed, 
altitude, pitch, yaw, roll, with real time GPS data.  The 
simulated data are fed into the flight computer through 
the dual CAN bus system, and can be displayed on the 
Primary Flight Display (PFD). 
Figure 5 shows the peripheral flight data by node to 
node transmission.  In this figure, one set of flight data 
is transmitted through the CAN-based network.  The 
SYSTEM PERFORMANCE ON DUAL CAN-BUS NETWORK FOR AVIONICS SYSTEM APPLICATIONS 187
ultra-light aircraft.  These flight data are fully examined 
in their reality and feasibility on speed, altitude, pitch, 
yaw, roll and heading.  The flight data generator from a 
CAN IP node is broadcasting the flight data to all CAN 
buses periodically.  These data are displayed on a virtual 
instrument on PC.  The control box also can connect 
with the GPS module for the GIS display.  The digital 
avionics instrument is developed and completed into 
integration.  An electronic map is displayed together 
with the required flight data.  The virtual instrument 
includes the displays of velocity, the attitude of airplane, 
altitude, climbing rate, heading and the Geographic 
Information System (GIS).  Figure 6 shows the 
approach guidance form that is specially designed for 
pilot flying around an unfamiliar area by digital map 
guidance.  The presenting electronic map is always 
indicating to North.  With GIS display, pilot can easily 
be aware of his current location and heading toward 
destination.  The GIS is especially good for low altitude 
flights during final approach. 
 
 
 
 
Figure 6  The approach guidance display. 
 
 
In this paper, the supervisor node human interface is 
designed not only with digital flight instrument and 
control panel, but also a DFDR function to record flight 
data on CAN bus, as for general flight record or 
maintenance analysis record.  In addition to the flight 
instruments, Traffic alert and Collision Avoidance System 
(TCAS) as well as Ground Proximity Warning System 
(GPWS) can be functioned into the avionics system via 
ground surveillance operation. 
 
V. DISCUSSION AND CONCLUSIONS 
 
In this paper, the proposed dual CAN-bus system is 
designed and implemented for aviation system and 
vehicle system.   Dual CAN has the main purpose to 
elevate higher reliability.  It is a special demand to 
avionics.  However, in vehicle applications, dual CAN 
network can still offer to certain advantages for complex 
system organization. 
The proposed two configurations of bus selector and 
memory mapping are fabricated and tested after 
simulations.  From experiments, both circuit designs are 
feasible to operation functions and reliable in system 
performance.  On the IP board design, memory mapping 
requires dual SJA1000 that reliability is inherently 
enhanced to higher level.  However, the firmware needs 
to initialize and interrupt both SJA1000 separately and 
independently.   It is, therefore, the firmware core size 
requires larger for the memory mapping than that of bus 
selector.   Relatively, the CPU loading for the memory 
mapping is also larger than that of bus selector.   In the 
firmware design of the memory mapping IP board, 
messages are directly transmitted into their corresponding 
SRAM to activate the transmission function.  Therefore, 
the time sequence of Bus 2 will have 10 μs delay from 
Bus 1.  On receiving message, two different index 
pointers are used to record the transmission condition as 
reference baseline for bus switching.  This results in a 
data loss on Bus 1 failure to switch to Bus 2.  The same 
problem can be eliminated using bus selector, since the 
firmware of bus selector follows the design on single bus 
system without a rewrite process.  On the bus selector 
circuit design and fabrication, IC component reliability 
becomes greater concern. 
This paper extends the preliminary work on 
developing dual CAN-bus for aviation system and 
vehicle system.  The applications for avionics network 
on small aircrafts or ultra lights are highlighted.  
Focusing on the reliability enhancement, some circuit are 
designed with a redundancy concept to introduce dual 
CAN bus IP board in the implementation.  Both 
memory mapping and bus selector are introduced to 
improve the system reliability on dual CAN system.  
However, the bus selector achieves much simpler 
hardware and firmware implementation than the memory 
mapping.  Both dual CAN-bus systems present superior 
performance in fault detection and real time operation 
capability in certain degree. 
In this paper, the proposed Hybrid Data Bus (HDB) 
system concept [10] for small aircraft is demonstrated.  
To test the data transmission function, multifunction 
flight data generator using microprocessor is designed in 
this paper to generate genuine flight data for tests.  By 
integration into PC, the supervisor node can send 
commands to operate the flight actuators as a part of 
flight control loop.  The preliminary test has been 
verified to fulfill small aircraft applications. 
As for avionics flight instruments, there is available 
software system to design a digital virtual instrument for 
small aircraft avionics.  They can be built into different 
forms of display panel, flight control instrument, as well 
as other implementations.  In the proposed dual CAN 
bus system, real time data processing, flight situation 
display, data storage function as DFDR, and TCAS are 
also considered into SATS avionics. 
In conclusion, this paper demonstrates some 
research ideas and some preliminary results from the 
Avionics Laboratory.  The dual CAN-bus system can 
offer high reliability electronic system for wider varieties 
of avionics applications. 
 
Journal of Aeronautics, Astronautics and Aviation, Series A, Vol.40, No.4, pp.259 - 268 (2008)                               259 
 
Technical Note 
System Development of Time Triggered Dual CAN Bus 
System for Small Aircraft Avionics* 
 
 
 
C. E. Lin**, H. M. Yen, and C. C. Li 
 
Department of Aeronautics and Astronautics, National Cheng Kung University 
No.1, Ta-Hsueh Road, Tainan 701, Taiwan, R.O.C. 
 
 
ABSTRACT 
 
Digital avionics using integrated module avionics (IMA) has made the 
system architecture simplified and operation flexible to carry digital data 
access. Digital data bus system using controller area network (CAN) for 
small aircrafts has superior accidental event capability [1]. However, the 
predictability on data transmission still requires enforcement. The 
arbitration mechanism in CAN has assigned higher priority to those high 
frequency data or important flight data. CAN bus have some drawbacks 
such as unpredictable delays on lower priority message and data lose under 
high bus load operation. The time trigger mechanism can be added onto 
CAN mechanism by TTCAN chip to improve the time scheduling in 
periodic data transmission [2], but it is strict and complex to synchronize 
the time sequence. To enhance the function of CAN bus and improve its 
stability and reliability, a dual CAN bus is proposed to extend the original 
single bus prototype in hardware and software [3]. Consequently, the 
complexity in time sequence synchronization in TTCAN chip has brought 
significant development effort on dual data bus system. This paper classifies 
the data frequency and assigns a new timing concept to implement this dual 
CAN bus system. The application of time trigger concept on dual CAN bus 
system is found to improve its performance. 
 
Keywords: Dual bus avionics, Controller area network (CAN), Time- 
Triggered CAN (TTCAN), System hardware and software 
 
 
                                                 
* Manuscript received, Mar. 24, 2008, final revision, Jul. 25, 2008 
** To whom correspondence should be addressed, E-mail: chinelin@mail.ncku.edu.tw 
I. INTRODUCTION 
 
The Controller Area Network was developed by 
Bosch in 1986 [4].  Before its development, the data 
transmission interface was a huge and complex 
construction. CAN is a serial, asynchronous, 
multi-master communication protocol for connecting 
electronic control modules, sensors and actuators in 
automotive and industrial applications.  It is based on 
the broadcast communication mechanism. This broadcast 
communication is achieved by using a message oriented 
transmission protocol.  The communication using CAN 
network is designed in event triggered characteristics, 
which means that the nodes will send messages at the 
trigger of an event in the node.  Under such arrangement, 
peak loads may occur when several messages are 
requested to transmit at the same time.  The CAN has a 
non-destructive arbitration mechanism that guarantees 
the sequential transmission of all messages according to 
their identifier priority.  Real time requirement indicates 
that a task responds to an event in a predictable way 
within the scheduled time limit.  The network latency is 
an important factor when this system is analyzed.  If a 
communication medium is used in a hard real time 
system, the latency must be predictable.  In CAN, the 
latency depends on the busload and the priority of tasks.  
For a Real Time Operating System (RTOS), which is 
based on static cyclic scheduling of all tasks, system 
integration and compensability are served when the 
communication on the CAN network also follows a 
synchronized schedule [5]. 
Time-Triggered CAN (TTCAN) is a higher-layer 
System Development of Time Triggered Dual CAN Bus System for Small Aircraft Avionics 261
condition and dormant environment is on the airborne.   
Figure 3 shows the failure rate parameter of each 
part.  The RELEX software predicted the failure rate of 
each part used in the Hybrid Data Bus system.  
Following the reliability distribution theorem, the 
exponential distribution was chosen to represent the 
general electrical parts. For example, the failure rate of 
SJA1000 is 0.029041, and the reliability is  in 
exponential distribution. 
-0.029041e
 
 
 
 
Figure 3  Failure rate of each part. 
 
 
The system is constructed by parts in accordance 
with the reliability series, parallel and redundant math 
models. We have developed three predicting products of 
CAN bus hardware designed in our laboratory.  The 
CAN system is adopted to build the interface bus, and 
CAN IP module board for data bus architecture.  The 
arrangement of parts in the single bus system can be 
regarded as a serial reliability model in our previous 
work [3].  The bus selector configuration for dual CAN 
system is extended from the single CAN bus system from 
one transceiver to dual transceivers, as shown in Figure 4.  
In the single CAN bus system, only transceiver A is 
fabricated.  The reliability predicting values in each part 
are defined as R11(t), R12(t), R13(t), R14(t) and R35(t).  
The single bus connects IP Board, the reliability values 
model of single bus and IP Board is in serial model.  
The failure rate of each part module has its index as iλ .  
The total reliability value of single bus is: 
 
51 2 3 4 bus(2 2 2 2 2 )
single( )
tR t e λ λ λ λ λ λ− + + + + +=  
 
As shown in Figure 4, the messages are transmitted 
on the IP board from TX of CAN controller to the dual 
bus on a bus selector configuration.  The parallel model 
is used in transceivers A and B after CAN controller 
modules; while the serial model is used in other modules.   
Figure 4 shows the transmitting IP board concept in the 
bus selector dual bus.  Its receiving route just reverses 
the flow directions on each module.  
Hence, the receiving IP board of the bus selector 
system for dual CAN bus is combined with the redundant 
model and serial model.  The total reliability value is: 
 
 
Figure 4  Transmitting IP board in bus selector. 
 
 
1 2 3 4 6 5 5
5
bus bus 5
-2( ) - - -2
total bus selector
-
- -2 - 5
( ) (2 )
( )                       (2 ) [ ] 
2
t t t t
t
t t t
R t e e e e
t ee e e
λ λ λ λ λ λ λ
λλ λ λ λ
+ + += × × −
× − × +
 
An additional circuit configuration termed as 
memory mapping [3] doubles the CAN controller 
(SJA1000) and transceiver in parallel, as shown in Figure 
4.  Because of the introduction of a second CAN 
controller (SJA1000), its cost is much higher in return of 
higher reliability.  The total reliability value of the 
memory mapping configuration becomes: 
 
1 2 3 4 4
5 5 bus bus
-2( ) - -2 2
memory mapping
- 2- -2 2                           
( ) (2 )
(2 ) (2 )  
t t t
t tt t
R t e e e
e e e e
λ λ λ λ λ
λ λλ λ
+ +
−
= × −
× − × −  
 
The reliability comparison of single and dual CAN 
bus is shown in Figure 5.  From this graph, it is possible 
to observe that the reliability of each case remains almost 
the same value within the 200 hours of work, and in an 
acceptable range until about the end of 1000 working 
hours.  However, the reliability decreased rapidly as the 
working time becomes 10000 hours.  For example, 
when the reliability becomes 0.9, the single bus works 
about 14000 hours, and the dual bus with bus selector 
and the memory mapping work for 20000 hours of 
operation.  That means the reliability for the redundant 
case is much better than the traditional CAN bus, and the 
double hardware system has the highest reliability.  
Considering the cost of hardware and the complexity of 
programming, the bus selector module is chosen in our 
CAN hardware system. 
 
IV. HYBRID DATA BUS SOFTWARE DESIGN 
 
The message identifier defines the priority of a static 
message during the bus access.  When the bus is free, 
any communication node connecting to the CAN bus 
may start to transmit a message.  If two or more nodes 
start transmission at the same time, the bus conflict will 
be resolved by an arbitration using the identifier and the 
lowest identifier transmission will be delayed.  In the 
proposed Hybrid Data Bus (HDB) communication there 
is a system matrix to solve the problem.  The time  
System Development of Time Triggered Dual CAN Bus System for Small Aircraft Avionics 263
 
 
Figure 7 The Master Schedule station flow 
diagram. 
 
 
 
 
Figure 8  The receive station flow diagram. 
 
 
4.5 Hybrid Data Bus Transmission 
For the event-triggered process of the HDB 
transmission, the acceptance mask function and 
arbitration is used to implement the event trigger 
communication.  In the scheduling, control stick, ATC 
transponder and VHF communication transceiver are 
event triggered processes.  Their identifiers are 
0211~0219, 0311~031f, 0411~041f and 0511~051f, 
respectively.  Their identifier group assignment on the 
first byte and the third byte are exactly the same with 
each other for all the node groups.  The acceptance 
mask function is used to mask the second and the fourth 
bytes.  When the HDB begins the event-triggered 
transmission, the MS node only transmits one reference 
message and all the group of event triggered nodes will 
be active by using the acceptance mask function.   
Therefore all the event-triggered nodes can receive 
the reference message and begin the transmission process.  
This transmission is an arbitrating process by their 
priorities and all nodes transmit messages.  For example 
in the proposed HDB system matrix schedule, the basic 
cycle 0 process is A-B-A-Event-A.  The MS node 
schedules the identifier of reference message first, then 
starts the basic cycle 0 transmission process, as shown in 
Figure 9.  For the time slot of system matrix, the bit rate 
of the bus is 500 kbps and the range of time slot is 46 ms.  
The capacity of time slot on the bus contains 184 
messages in 46 ms. 
 
 
 
 
Figure 9 Basic cycle 0 transmission process on the 
HDB system. 
 
 
V. DUAL CAN BUS SYSTEM TEST 
 
In order to test the transmission capability of the 
proposed CAN system, two signals square wave and sine 
wave by the host controller AT89S52 are established.  In 
System Development of Time Triggered Dual CAN Bus System for Small Aircraft Avionics 265
 
 
Figure 12 HDB system test architecture of group A. 
 
 
Table 2  HDB system test of group A condition. 
 
Node Identifier Mask Period Message Type 
MS 0x0111 0x0000 50ms Reference Message 
Node A-1 0x013a 0x000f 100ms Sine Wave Sample 
Node A-2 0x0131 0x000f 100ms 8 byte Message
Node A-3 0x0132 0x000f 100ms 8 byte Message
Node A-4 0x0133 0x000f 100ms 8 byte Message
Node A-5 0x0134 0x000f 100ms 8 byte Message
 
 
Table 3  HDB system test of message A condition. 
 
Node Identifier Mask Period Message Type
MS 0x0111 0x0000 50ms Reference Message 
Node A 0x013a 0x000f 100ms Sine Wave 
Node B 0x051a 0x0000 non Non 
 
 
From the test, all the sample points of sine wave in 
the time slot can be transmitted completely in which the 
reception node receives the intact signal when this 
transmission has no high bus load problem.   
In Figure 12, four additional nodes are added to 
transmit the data in the test.  The added four nodes (A-2 
to A-5) have higher priority than A-1 node to produce the 
sine wave.  These 4 nodes transmit the messages and 
occupy the bus load only 2.2%, in which the total bus 
load only 2.8%.  The test result is just like the previous 
test of one-to-one node transmission in which all the 
sample points of sine wave can be transmitted completely. 
In arbitration field, the lowest priority node (sine wave 
node) must wait other nodes to transmit.  In the worse 
situation, the lowest priority must wait four nodes 
transmission time. For the HDB system, the transmission 
possesses not only predictable in the time slot but also no 
overload problem. 
 
5.3 Development of the Monitoring MS Station 
The proposed function of the Monitoring MS station 
watches the MS node.  This station connects to a 
personal computer and can be turned on or off by the user 
in case of need.  The MS node receives the command 
message on the bus, when the user enters two characters 
“AB” to turn on the MS node and begins to transmit the 
reference message during the system matrix cycle.  
When the user enters “QR”, the MS node is turned off to 
stop transmitting the reference message.  The HDB 
system has been operated by the MS node and can be 
stopped at any time of necessity.  But if the user enters 
wrong characters the Monitoring MS station will be idle.  
Using the function of Monitoring MS station, a redundant 
MS node can be added to enhance the HDB performance.  
 
5.4 Implementation of the HDB System on Digital 
Flight Instrument 
In the dual CAN bus system verification on the 
proposed HDB system, an Electronic Flight Instrument 
System (EFIS) for small aircraft is implemented and 
tested as shown in Figure 13.  The proposed EFIS 
adopts Visual Basic 6.0.  Each subsystem is composed 
of an MSP430 microprocessor and its sensors to generate 
the necessary flight data and then fed into the main 
computer.   In this phase of study, some simulation data 
such as GPS data, speed, attitude, climb rate, heading, 
roll, and pitch are used.  All microprocessors transmit 
the simulation data to HDB nodes via RS232 and all 
nodes wait for reference message to transmit from bus 
and then transmit the simulation to the digital instrument 
node.  The test results are shown in Figure 14. 
 
VI. DISCUSSION AND CONCLUSION 
 
Today digital avionics play a main role in modern 
aviation system.  To enhance the small aircraft into 
higher function capability, the avionic data bus system 
must be reliable, stable and flexible in high-speed 
transmission with low cost.  A comparison of ARINC 
systems for air transportation aircrafts shows that CAN is 
very suitable for small aircrafts [1, 3].  It is extremely 
flexible in protocol and data format for highly reliable 
data communication in microprocessor-based systems.  
Promoting from automobile systems, the application of 
CAN into aviation system is appreciated with multiple 
protocol implementations. 
System Development of Time Triggered Dual CAN Bus System for Small Aircraft Avionics 267
[7] Department of Defense, “Military Handbook- 
Reliability Prediction of Electronic Equipment,” 
(MIL-HDBK-217F), December 1991. 
[8] Zuberl, K. M. and Shin, K. G., “Scheduling 
Messages on Controller Area Network for 
Real-Time CIM Applications,” IEEE Transactions 
on Robotics and Automation, Vol. 13, No. 2, April 
1997, pp. 310-314. 
[9] Cavalieri, S., “Proposal and Evaluation of Dynamic 
Assignment of Priorities in CAN,” IEEE 
Transactions on Industrial Informatics, Computer 
Stander and Interface, Vol. 28, Issue 5, June 2006, 
pp. 531-552. 
[10] Lin, C. E. and Yen, H. M., “System Performance on 
Dual CAN-Bus Network for Avionics System 
Applications,” Journal of Aeronautics, Astronautics 
and Aviation, Series A, Vol. 40, No. 3, September, 
2008. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Chin E. Lin  C. C. Li  S. F. Tai  C. F. Tsai  S. C. Chiang  T. C. Chen 2
redundant communication is required. Radio Data 
System (RDS) a part of Intelligent Transportation System 
(ITS) for traffic information broadcast.  It can be 
adopted carry message exchanges from downlink and 
uplink [7, 8] as a redundant system.  In the proposed 
application, RDS presents two-way VHF data 
communication of downlink and uplink. Each aircraft 
downlinks its position data to ground ATC server [9], and 
receives a broadcast data reversely.   
Traffic Collision Avoidance System (TCAS) [10] is 
an active airborne system in 30 seat air transport aircrafts 
to prevent mid-air collisions in civil aviation aircraft. It 
prompts the flight crew in-air situation and provides 
Traffic Advisory (TA) and Resolution Advisory (RA) 
maneuver indications when it detects a conflict threat. 
What about those smaller aircrafts flying in the sky? If 
TCAS is able to be installed in GA or ULA, it will be 
helpful to pilots. However, TCAS is too expensive to 
afford by GA owners as well as ULA operators. As for 
terrain avoidance, aircraft can check the distance to the 
hazardous ground obstacles to escape from approaching.  
With local a terrain database, the Ground Proximity 
Warning System (GPWS) can also be built onto EFIS and 
ATC server for any surveillance airspace. 
Under well-organized communication supports, 
according to real time aircraft positioning data, traffic in 
airspace can be analyzed following conflict detection 
strategies and collision avoidance resolutions [11]. Both 
mobile communication and RDS carries downlink and 
uplink for data transmission. Once the ground server 
receives all aircraft downlink position data in airspace, 
these aircraft position data can be re-arranged to 
broadcast to airborne aircrafts after a necessary delay 
time. The airborne EFIS computer and ATC server 
receive the same message with short delays, both systems 
can perform software on TCAS and GPWS, 
simultaneously. 
This paper develops TCAS/GPWS functions using 
the similar concept of TCAS-I for GA and ULA in small 
area and low altitude flights.  Simulations and flight 
tests of the proposed TCAS/GPWS performance are 
demonstrated in local airspace. 
 
II. EFIS FOR ULA 
 
Figure 1 shows the proposed EFIS for ULA.  This 
system designs full aviation function into an integrated 
digital hardware [11, 12].  The proposed EFIS has the 
conceptual configuration with the following 
specifications: 
(1) Instrument functions: speed (0-200 mph), altitude 
(6,000 feet AGL), climb speed, azimuth (360), 
attitude (p, y, r), digital map (GIS), battery monitor 
(12V, 10A), fuel monitor;  
(2) Advanced functions: automatic dependent 
surveillance (ADS), digital flight data recorder 
(DFDR), traffic alert and collision avoidance system 
(TCAS), ground proximity warning system (GPWS);  
(3) Main computer: industrial compute (1GHz CPU, 
512MB RAM, 4GB SSD or above, Microsoft 
Windows XP Embedded OS);  
(4) Display: 12” touch panel, high intensity LCD display, 
resolution 800x600;  
 
 
 
 
Figure 1  EFIS of ULA. 
Chin E. Lin  C. C. Li  S. F. Tai  C. F. Tsai  S. C. Chiang  T. C. Chen 4
4.1 RDS System  
RDS is a standard for sending small amounts of 
digital information using conventional frequency 
modulation (FM) radio broadcasts.  RDS has been 
developed in the European Broadcasting Union (EBU) 
for more than two decades in Traffic Message Channel 
(RDS-TMC) [7] for car navigation as a part of ITS.  
RDS offers wide-range transmission in low-price 
availability.  Under high frequency (HF) spectrum, RDS 
needs to setup an appropriate antenna to cover 30~40 km 
for data transmission.  Some relay station may also be 
required for wider operating airspace.  
RDS uses a 57±2.4 kHz subcarrier to carry digital 
data at 1187.5 bits per second.  57 kHz was chosen as 
the third harmonic of the 19 kHz pilot tone for FM stereo, 
as shown in Figure 3, and will not cause any interference 
or inter-modulation to pilot tone, or to the stereo 
difference signal at 38 kHz.  RDS data stream gives an 
overall bandwidth for the data signal of approximately 5 
kHz, centered on 57 kHz [7, 8]. 
 
 
 
 
Figure 3  Frequency spectrum of RDS. 
 
 
As serial data transmission system designed for 
mobile communication, the data stream in RDS is 
partitioned into data groups and blocks.  One group 
consists of four blocks of 104 bits [8], each has 26 bits 
long.  One block consists of 16 bits information word 
and 10 bit CRC check word and offset word, as Figure 4 
 
 
 
 
Figure 4  Structure of base-band coding of RDS. 
 
 
4.2 RDS Data Capacity Limits 
Figure 5 clearly shows that the RDS coding is 
structured so that the messages repeat most frequently in 
short acquisition time, and normally occupy the same 
fixed positions within a group.  This allows decoding 
without reference to any block outside that contain the 
information.  The first block of each group always 
contains a PI code, whereas the PTY code and the TP flag 
occupy fixed positions in block 2 of every group [8]. 
 
 
 
 
Figure 5  RDS Data format. 
 
 
The group type code is specified by 4 bit code that 
defines the group type from 0 to 15.  The 4 bit code is 
sent in the first 4 bits of the second block of every group.  
In addition, the fifth bit B0 of this block defines the 
“version” (A or B) of the group type.  In version “A” 
groups, the PI code is inserted in block 1 only.  In 
version B, the PI code is inserted in blocks 1 and 3.  
There are totally 32 groups type of RDS.  Groups are, in 
general, reserved for a particular application or message 
type, for example, RT, CT, TMC, and so on.  The RDS 
has fairly low bit rate of 1187.5 bps. Its channel capacity 
is a rather limited.  The four check words in each group 
of 104 bits occupy a total of 40 bits, and that each group 
address needs 5 bits, one arrives at a useful bit rate of:  
 
1187.5 - (1187.5/104) * (40 + 5) = 673.7 bps.  
 
In comparison with the data rate to wireless 
communication in Mbps, RDS is really low data rate as 
its bottleneck for applications.  However, RDS has 
complete different aspect of transmission to mobile 
communication.  Its low data rate does not affect the 
proposed TCAS application.  RDS becomes a good 
choice in cooperation to mobile communication.  
 
4.3 Surveillance Data Arrangement 
The surveillance data for the TCAS of ULA includes 
ID, GPS longitude, latitude and velocity.  It is about 30 
bytes ASCII code for each ULA. The maximum data 
capacity of one RDS data group is only 64 bits.  The 
surveillance data needs to be reduced by encoding to suit 
for RDS communication. 
After some RDS capacity tests, 53 bits in one RDS 
group is decided to use in TCAS downlink and uplink, as 
shown in Figure 6.  The 53 bits are the 16bits of block 1, 
block 3 and block 4, and 5 bits PTY of block 2.  The 
TCAS data for each ULA is encoded by the following 
descriptions to fit the RDS capacity. 
(a) Longitude and Latitude: It is easy to identify the 
location of ULA in a limited airspace across a 
longitude or latitude.  The integer part can be 
omitted when transmitting by RDS.  Therefore it  
 
 
 
 
Figure 6 Data format for TCAS.  
Chin E. Lin  C. C. Li  S. F. Tai  C. F. Tsai  S. C. Chiang  T. C. Chen 6
 
 
Figure 7  TCAS data timeframe in redundant mode. 
 
 
approach is also defined in time frame.  The separation 
bubble has its characteristics as shown in Figure 8: (1) 
shape in ellipse; (2) direction coincides with aircraft’s 
heading; (3) extrapolated arrow reflects velocity and 
Traffic Advisory (TA).  TA may not be necessary to be 
48 seconds, but must be longer than the pilot’s reaction 
time of 12.5 seconds.  In software implementation, TA 
should be adjustable in program setting to fit into 
different airspace. An extrapolated arrow from the 
ownership aircraft to certain distance ahead is also 
defined in time frame [10, 14, 15].  Therefore, 
separation bubble and extrapolated arrow will stretch out 
as aircraft speed increases.  
Since all aircraft will downlink its real time position 
data to ATC server, ATC server will firstly check some 
possible conflict situations in the airspace.  When any 
two aircrafts intersect their extrapolated arrows or 
intruding into any separation bubble, a conflict threat is 
generated in ATC server.  The server will display glitter 
or tone warning to remind the ATC controller of detecting 
a conflict threat.  ATC controller can call pilots 
immediately to pass the warnings. 
 
 
 
 
Figure 8  TCAS separation concept. 
 
 
In Figure 1, the airborne EFIS computer will also 
receive uplink message of all aircraft in the vicinity 
airspace.  The EFIS will also check separation between 
nearby aircraft and perform TCAS program using the 
aircraft data as ATC server does.  Once any conflict 
threat is detected, the EFIS will generate an alert to pilot.  
Conflict threat can be defined as an intrusion into 
extrapolated arrow or separation bubble in TCAS.   
Based on such process running the same TCAS 
program, the server software should set longer TA time, 
such as 30~48 seconds, than that of EFIS.  Pilots can 
immediately react to escape from conflict following 
visual flight rule (VFR).   VFR conflict resolution is an 
international standard in air traffic operation.  The rules 
account the maneuverability and phase of flight that 
aircrafts have involved.   
GPWS software is also executing to check aircraft 
separation to any terrains or ground obstacles from 
database.  A terrain database is established in ATC 
server as well as on EFIS for the operating airspace.  
According to flight requirement, the surveillance 
data downlink is set at every 5 seconds. “Five-second” 
period is determined according to the secondary 
surveillance radar (SSR) refresh rate.  The message 
uplink is carried by mobile communication or RDS after 
each 5 second period, when downlink data have been 
reorganized in ATC server.  Some other observable time 
delay of about 0.88 second is measured due to downlink 
and uplink in communication systems.  It makes a real 
delay of about 6 seconds in the proposed TCAS.  
The proposed software system will build two 
functions for collision avoidance as TCAS and GPWS. 
This paper utilizes an extrapolated arrow to estimate 
upcoming situation among aircrafts and terrains. TCAS 
and GPWS are independent software running 
coordinately. 
 
5.2 TCAS Functional Architecture 
The proposed TCAS software is composed of three 
key functions of sensing, detection and avoidance, as 
shown in Figure 9.  TCAS procedure starts with sensing 
the nearby aircraft data from uplink message.  Based on 
the aircraft message from ATC uplink, the detection 
function can determine through data fusion if conflict is 
sensed from one extrapolated arrow to another separation 
bubble or its extrapolated arrow.  The detection function 
can reflect current information around the operating 
aircraft.  If the system detects a conflict threat to aircraft, 
an audio alert will be generated on EFIS display or ATC 
monitor, simultaneously.  In practical system, ATC 
controller will notice this conflict threat 6 seconds in 
advance.  ATC controller may send warning signals to 
remind both conflicting pilots.  Pilots must execute 
evading maneuvers according to Visual Fight Rule (VFR) 
right away and reconcile the conflict situation [12, 15].  
In the proposed system, ULA pilots perform TCAS 
following VFR procedures. 
 
(a) Sensing 
The sensing function processes message collection 
to the vicinity airspace.  The aircraft data is obtained 
from the uplink message from mobile communication 
and RDS simultaneously.  The broadcasted data format 
includes aircraft identification (ID), longitude (Lon), 
latitude (Lat), and velocity (Speed in knots) around the 
airspace, as previously discussed in Figure 6.  For the 
proposed applications, aircraft is flying in low altitude, 
vertical separation is very difficult to identify.  To 
simplify the system performance for ULA flights, only 
2-D separation is considered.  The WGS84 global 
coordinate system representing (East, North) is used. 
 
Chin E. Lin  C. C. Li  S. F. Tai  C. F. Tsai  S. C. Chiang  T. C. Chen 8
2 2
2
( ) ( )
10
B C B C
B
B
x x y y
T
V
− + −
= −  (7) 
 
By utilizing the time data, the situation to describe 
the approaching aircrafts can be expressed as the 
following two cases. 
 
(1) Non conflict situation [16] 
If the temporal separation between two aircrafts is 
larger than zero, the time has no overlapping. It 
represents there is no intersection between them.  It 
predicts no conflict in the near future, as Figure 11. 
 
 
A
t
1 2B B
t
−
B
t
 
 
Figure 11  Time of no conflict. 
 
 
(2) Probable conflict situation 
If 
A
T  occurs between the start of 
1 2B B
T
−
 and the 
end of 
1 2B B
T
−
, they are overlapping.  This represents a 
possible conflict or intersection.  This condition can 
estimate an approaching incident may happen in the near 
future, as Figure 12. 
 
 
A
t
1 2B B
t
−
B
t
 
 
Figure 12  Time to conflict.  
 
 
(3) Intrusion into separation bubble 
Referring to TCAS separation bubble in Figure 8, 
when the intruding aircraft’s extrapolated arrow enters 
the bubble of the ownership aircraft, a warning light will 
glitter to alert the pilot of conflict threat.  Pilot must 
immediately react to reconcile the conflict.  This is very 
important to TCAS performance and can be regarded as 
the ultimate line of defense to prevent possible mid-air 
collision.  Both TCAS and GPWS apply with separation 
bubble intrusion to detect the conflict.   
 
VI. SIMULATION AND TEST 
 
The proposed TCAS performs two scenarios of test, 
one on ground ATC server and the other on airborne EFIS 
computer.  All aircraft downlink their GPS positions to 
ATC server, and all aircraft data in an operating airspace 
will be uplinked to all aircraft through communication 
network.  Mobile communication and RDS are 
cooperating to carry data transmission in redundant 
performance.  
ATC server will activate TCAS software whenever 
flights are launched.  Either ATC server or EFIS has to 
install TCAS parameters for a specified airspace to run 
TCAS and GPWS software. ATC server requires a longer 
TA, than that on EFIS computer, for at least 6 seconds.   
6 second time frame is obtained from the 5 second uplink 
delay plus 0.88 second transmission delay.  In TCAS 
tests, TA of 48 and 20 seconds for ATC server and for 
EFIS is predetermined in the parameter setting, and then 
is reduced to 36 and 20 seconds by steps to test its limit. 
The extrapolated arrow is tested from 3 minutes to 2 
minute.   
Since most ULA operating around 500-2000 feet 
AGL, vertical separation is not practical in the proposed 
TCAS.  Vertical separation does not used. Therefore, 
planar conflict detection and resolution is only applied.   
The TCAS software is programmed for ATC server 
as follows: 
(a) Set “Airport ID” to check aircraft within specific 
airspace; Airport ID will constrain the downlink data 
to certain group of aircraft in operation;  
(b) Set TA as 48 seconds for ATC sever;  
(c) Set extrapolated arrow to 3 minutes;  
(d) Read real time data buffer for aircraft positions in 
ATC server;  
(e) Check aircrafts one pair after another, finishing all 
within 3 minutes; 
(f)  Check aircraft separation to assert potential threat 
in the surveillance airspace, if any extrapolated arrow 
intersects to each other;  
(g) If any potential threat is searched, generate an alert 
tone to ATC controller, and glitter the conflict 
aircrafts; 
(h) ATC controller commands conflict avoidance to 
pilots; 
(i) Return to (d), check next loop. 
The same TCAS software is also processed for 
airborne EFIS computer as follows: 
(a) Set “Airport ID” check aircraft within 20 km in this 
airspace;  
(b) Set TA as 20 seconds for airborne EFIS computer;  
(c) Set extrapolation to 2 minutes; which is shorter than 
that on ATC server;  
(d) Read real time data buffer for aircraft positions on 
airborne EFIS computer, lock on possible conflict 
aircrafts; aircraft data on ATC buffer leads 6 seconds 
to EFIS data buffer due to uplink time delay;  
(e) Check aircraft in Radar Mode with 20 km;  
(f)  Check potential conflict by extrapolated arrow in 
GIS Mode, if an intrusion is detected into to 
ownership separation bubble; if not, return to (d) for 
next loop. 
(g) If yes, generate an alert tone to ownership pilot, and 
glitter on the intruding aircraft;  
(h) Perform traffic avoidance by right turn escape rule, 
Chin E. Lin  C. C. Li  S. F. Tai  C. F. Tsai  S. C. Chiang  T. C. Chen 10 
6.2.1 Parallel Conflict in the Same Direction 
When the conflicting aircraft in the same direction, 
heading 270 degree in simulation, the ownership aircraft 
is catching up to cause an intrusion, as shown in Figure 
14(a).  The ownership aircraft continues to catch up 
with the leading aircraft.  Before and after the leading 
aircraft hits the ownership aircraft separation bubble, the 
TCAS warning lights will change as shown in Figure 
15(a) and (b).  By taking the right turn resolution 
process, the leading aircraft will leave the ownership 
aircraft separation bubble, and the warning light turns 
green, as Figure 15(c). 
 
6.2.2 Parallel Conflict in Opposite Direction 
The second scenario initializes the ownership 
aircraft heading 090 at 42 m/s in opposite direction to the 
intruder aircraft heading 270 at 46 m/s speed, 
respectively.  Within the maximum sensing range of 9 
km, the TCAS detects the conflict threat as shown in 
Figure 16(a).  When both extrapolated arrows (2 
minutes) of the intruding aircraft and ownership aircraft 
meet together, a conflict threat warning is activated to 
turn into yellow.   If the intruding aircraft does not 
change flight direction, a warning signal turns into red 
with an alarm to pilot. 
Under conflict alert, the ownership aircraft takes 
right turn for traffic resolution prior to the intruding 
aircraft, as shown in Figure 16(a).  The intruding 
aircraft also takes a right turn to avoid, as Figure 17(b) 
and (c).  The warning signal of red will turn to green 
until the intruding aircraft leaves the ownership aircraft 
separation bubble, as Figure 17(d). 
 
6.2.3 Intersecting with no Threat 
The third scenario assumes two aircrafts are 
intersecting to a short distance, when the ownership 
aircraft is heading 315 at 42 m/s speed and the intruding 
aircraft is heading 225 at 46 m/s.  A planar intersection 
is sensed as Figure 18(a). The ownership aircraft arrives 
the interesting point at 25 seconds; while the intruding 
aircraft enters and leaves the ownership separation 
bubble at 48 to 68 seconds, as Figure 18(b). 
Since there is a 23 second time lag, and is longer 
than the setting TA, the conflict is critical but not 
threatened.  
When both aircrafts proceed to fly, the extrapolated 
arrow of the intruding aircraft will surely hits the 
ownership separation bubble.  However, the conflict 
detection will not cause a potential threat if their speeds 
maintain unchanged.  The conflict situation is critical as 
shown in Figure 19(a) where no alert is ever generated, 
until the extrapolated arrow of the intruding aircraft 
intersects behind the ownership aircraft, the traffic is 
clear, as in Figure 19(b).  Since ULA does not result in 
serious wake turbulence to affect the following ULA, 
Figure 19(b) is acceptable. 
 
6.2.4 Intersecting with Threat 
The fourth scenario assumes two aircrafts are 
intersecting to 8 km separation, when the ownership 
aircraft is heading 090 at 42 m/s speed and the intruding 
aircraft is heading 360 at 46 m/s.  Their planar 
intersection is sensed as Figure 20(a) that the ownership 
aircraft will arrive the intersecting point at 58 seconds; 
while the intruding aircraft enters and leaves the 
separation at 41 to 61 seconds.  The time to intersection 
is definitely a potential threat to the ownership aircraft, 
that detection light in yellow is glittered, as Figure 20(b). 
The conflict alert is generated to warn the ownership 
aircraft to take right turn avoidance, as Figure 20(c).  
While the ownership aircraft continues to escape from the 
intersection, the conflict detection is releasing from threat 
level to detect level in yellow and the resolved in green 
again, as shown in Figure 21(a) and (b).   
 
6.2.5 GPWS activation 
Figure 22 shows the GPWS performance in ULA 
airspace.  When the software is activated, terrain 
database is called to check possible obstruction in the 
heading vicinity.  Once the aircraft’s extrapolated arrow 
intersects any terrain, an alert to pilot and to ATC  
 
 
 
(a) 
 
(b) 
 
(c) 
 
Figure 16 The head-on conflict from (a) sensing at 
9 km, (b) detecting, (c) alert. 
Chin E. Lin  C. C. Li  S. F. Tai  C. F. Tsai  S. C. Chiang  T. C. Chen 12 
 
(a) 
 
(b) 
 
(c) 
 
Figure 20 Conflict intersection, (a) sense, (b) 
detect, (c) right turn to avoid. 
 
 
6.3 System Support  
This simulation GIS software adopts “PaPaGo! 
SDK” functions: “Gis2Scr” and “Scr2Gis” to map the 
flight data from flight tests in the published airspace.  
Single aircraft flight is prescheduled in test route to 
acquire several sets of flight data.  Then accompanying 
data sets are generated accordingly on the screen 
coordinate.  The screen coordinate data are transformed 
into WGS-84 coordinate to map onto GIS software for 
simulation and display.  Simulation data are initiated at 
different time frames to test different scenarios of parallel 
or intersect to flights.  The conflict situation is sensed 
and detected to generate appropriate alert or warning 
signals to pilots from EFIS.  The simulation verifies the 
proposed TCAS and GPWS of functionally capable to 
assist ULA pilot as well as ATC controller for safe flight 
performance in ULA airspace.  
 
VII. CONCLUSIONS 
 
 
(a) 
 
(b) 
 
Figure 21 Intersection conflict resolution, (a) 
escaping, (b) resolved. 
 
 
 
 
Figure 22  GPWS terrain alert. 
 
 
The objective of this paper establishes an airborne 
collision avoidance system for small aircrafts in low 
altitude flights.  TCAS and GPWS are designed into the 
system on ATC server and on EFIS computer.  
Supporting from TCAS-I concepts, the propose collision 
avoidance performance can enhance low altitude flight in 
high aviation safety.  The proposed system adopts 
mobile communication surveillance to establish G
3
 
function [5, 6] to design and implement TCAS/GPWS 
function on GIS display and radar display on EFIS. The 
airborne EFIS receives all aircrafts information in the 
airspace and then maps their positions on GIS.  Pilot can 
understand relative relationship with other aircrafts from 
the display.  Besides, this system can estimate aircrafts 
輕航機回報系統 成大研發 
 
【聯合報╱記者修瑞瑩／台南報導】 2009.05.04 03:15 am 
  
成功大學航太系研發超輕飛機數
位航電儀表系統，協助飛機回報
位置與防碰撞，民航局審核中，
航太系教授林清一昨天表示，系
統過關後，將有助開闢台灣第一
條長程輕航機飛行路線。  
國內目前核准的輕航機飛行空
域，只有屏東大鵬灣上空數平方
公里，各地偶爾會見到輕航機從
頭上呼嘯而過，幾乎都是非法。
林清一表示，計畫申請的第一條
長程路線，從屏東賽嘉繞經墾丁
到花蓮鳳林，總長 400 公里，未
來輕航機越野長程的合法飛行不
再是夢想。  
林清一表示，輕航機在 92 年合法化後，全台共開放 13 個空域，其中只有大鵬灣經民
航局審核通過，其他尚待審核，每一個空域只有數平方公里，如果每一個玩家都守法，
「飛不了幾分鐘就要回頭。」民航局未能開放長程飛行，主要原因是機上缺乏回報系統，
無法回報位置，民航局不能管控。  
成大航太系研發數位航電儀表系統，結合衛星定位（GPS）、電子地圖（GIS）及行動
數據（GPRS），不僅飛行者能清楚在地圖上看到自己的位置，不易迷失，航管單位也
能輕易掌控。  
他指出，這套系統在輕航機發展成熟的澳洲等國家也有，但成大研發的系統更優越，同
時可避撞，兩機在接近碰撞前會發出警示，成本約只有 5 萬元，比起國外的 20 到 30
萬元，便宜數倍。  
成大同時希望成為未來的輕航機管制中心，所有的飛航資料都回傳成大，再傳送到航管
單位。他表示，未來如果輕航機都能加裝這套系統，就有機會獲民航局同意進行越野飛
行。  
【2009/05/04 聯合報】@ http://udn.com/  
成功大學航太系教授林清一（右）與學生研發超輕飛機數位航
電儀表系統，從儀表上可以看到飛機的位置等資料，費用卻不
高。 
記者修瑞瑩／攝影 
 
