for-Tat 
 
2  
selfish behavior of each peer thus decides the cooperation level as well as the 
overall P2P system performance.   
 
While every peer concerns his own utility, the fully cooperative strategy is hard 
to enforce in P2P system [8].  Many peer uses resource but do not contribute, it 
may cause the serious downgrade of the performance of the system.  This is the 
so-call “free-rider” problem encountered in almost every P2P system.  To counter-
strike this problem, a common technique is to employ some variant of the tit-for-
tat strategy [9] in the P2P system, notably BitTorrent [4][5].  As a result, this tech-
nique not only promotes the level of cooperation but also puts a limitation of sys-
tem performance[12-17].   
 
To study the impact of cooperation level to system performance, DeFigueiredo, 
Venkatachalam and Wu analyzed both the fully cooperative systems and the com-
pletely non-cooperative systems [10].  With these two extreme benchmarks in 
hands, it’s easier for us to understand the impact of cooperative level to the overall 
system performance.  They showed that the gap between these two extremes is 
huge, and then an interesting question may be raised for variant tie-for-tat strategy, 
“Which extreme is it closer to, fully-cooperative or completely non-cooperative”? 
They examine both Direct Reciprocity and Indirect Reciprocity strategies, and 
showed striking similarities between the results for the IR strategy and the cli-
ent/server model.    
 
To study further on the theoretical bound of the tit-for-tat strategies, we define 
the tolerant level of tit-for-tat strategies and exploit on that a particular instance of 
tolerant level 1.  We then design a Fibonacci transmission scheme to efficiently 
distribute content in such system.  We show similarities between the results for the 
Fibonacci transmission and the fully cooperative system. 
 
This paper is organized as follows.  Section 2 provides the background informa-
tion. Symbols and cooperation level are introduced.  Section 3, we define the toler-
ant level of Tit-for-Tat strategy.  Section 4 shows the Fibonacci transmission 
scheme which is used to solve a special case, and Section 5 uses the result in previ-
ous section to provide the final solution.  Section 6 concludes the paper. 
Background 
To compare performance in different scenario, we assume a perfect network 
core such that bottlenecks are found only at the edges.  To clearly deal with the 
selfish behavior, the unlink capacity of Peer i represents the peer’s willingness to 
cooperate, instead of a physical limitation.  In this paper, we consider the worst 
case scenario of an instant flash crowd, where all N peers request a file of size Z 
4  
 
Fig.  1 Fibonacci transmission scheme 
In Figure 1(a), at time 1, the seed uploads a piece to peer 1. At time 2, the seed 
is able to upload to other peer, but we temporarily let the seed be off duty, and let 
peer 1 uploads to peer 2.  At time 3, U1 = 1 and D1 = 1, peer 1 is able to upload to 
peer 3, and peer 2 uploads to peer 4.  At time 4, U1 = 2 and D1 = 1, peer 1 refused 
to upload anymore.  Instead of, peer 2, 3 and 4 is uploading at time 4. The black 
node represents the seed, red nodes means the peer has uploaded twice, yellow 
nodes uploads once, and the white nodes upload nothing.  To help the analysis, we 
illustrate the scenario by Figure 1(b).  The piece is denoted by “A”, the number 
below peer i represents Di – Ui.   If the value is -1, then the peer refused to upload. 
 
Suppose the number of peer is sufficiently large.  It is interesting to check the 
spreading speed under such scheme.  There are only three possible values of Di – 
Ui , -1, 0 and 1.  According to the value of Di – Ui, we may classify each peer that 
has receive piece into three groups, N(-1), Z(0), and P(1).  Let Ft-1 denotes the Fi-
bonacci sequence, F0 = 0, F1=1, and Ft = Ft-1 + Ft-2 for t > 1. 
 
Lemma 1. If the number of peer is sufficiently large, at time t, the number of 
peer in Group N, Z and P is Ft-1 – 1, Ft-2, and Ft-1 respectively. 
Proof.  At time 2, the number peer in Group N, Z and P is 0, 0, 1, respectively, 
and initial condition follows.  To show the induction, assume at time k, the num-
ber of peer in three Groups is Fk-1 – 1, Fk-2, and Fk-1 respectively.  Each peer in 
Group Z and P may upload at time k + 1.  It then produces peers in Group P.  Af-
ter the upload, peer in Group Z falls into Group N, and peer in Group P are now in 
Group Z.  The number of peer in Group N is Fk-1 – 1 + Fk-2 = Fk – 1.  The number 
of peer in Group Z is Fk-1.  The number of peer in Group P is Fk-2 + Fk-1 = Fk .   
 
Since the number of nodes is corresponding to some Fibonacci number, we call 
it “Fibonacci transmission scheme”.  It is powerful as there are Ft-1 transmissions 
at time t, and the order of growth rate is exponential. Denote by St, the total num-
6  
References 
1. http://www.emule-project.net/.  
2. http://www.bitcomet.com/. 
3. http://www.gnutella.com/. 
4. http://bittorrent.org/. 
5. B. Cohen, “Incentives build robustness in BitTorrent＂. In Workshop on Economics of Peer-
to-Peer Systems, Berkeley, CA, USA, June 2003. 
6. Z. Ge, D. R. Figueiredo, S. Jaiswal, J. Kurose and D. Towsley, “Modeling Peer-Peer File 
Sharing Systems＂. In Proceedings of IEEE INFOCOM, 2003. 
7. D. Qiu and R. Srikant, “Modeling and Performance Analysis of BitTorrent-Like Peer-to-Peer 
Networks＂. In Proceedings of ACM SIGCOMM, 2004. 
8. X. Yang and G. de Veciana, “Service Capacity of Peer to Peer Networks＂. In Proceedings of 
IEEE INFOCOM, 2004. 
9. T. Locher, S. Schmid, and R. Wattenhofer. “Rescuing tit-for-tat with source coding＂. In 7th 
IEEE International Conference on Peer-to-Peer Computing, 2007. 
10. D. do B. DeFigueiredo, B. Venkatachalam and S. Wu, “Bounds on the Performance of P2P 
Networks Using Tit-for-Tat Strategies＂. In 7th IEEE International Conference on Peer-to-
Peer Computing, 2007. 
11. A. Legout, G.  Urvoy-Keller, and P. Michiardi. “Understanding BitTorrent: An Experimental 
Perspective＂. Technical report, INRIA, 2005. 
12. Tang Y., Wang, H., and Dou W. “Trust Based Incentive P2P Network＂, Proceedings of the 
IEEE International Conference on E-Commerce Technology for Dynamic E-Business (CEC-
East＇04), 2004. 
13. Richard T. B. Ma, Sam C. M. Lee, John C. S. Lui, David K. Y. Yau, “An Incentive Mecha-
nism for P2P Networks＂, Proceedings of the 24th International Conference on Distributed 
Computing Systems (ICDCS＇04), p. 516-523, 2004. 
14. David Hales, “Form Selfish Nodes to Cooperative Networks-Emergent Link-based incentives 
in Peer-to-Peer Networks＂, Proceedings of the Fourth International Conference on Peer-to-
Peer Computing (P2P＇04), 2004. 
15. Chiranjeeb Buragohain , Divyakant Agrawal , Subhash Suri, “A Game Theoretic Framework 
for Incentives in P2P Systems＂, Proceedings of the 3rd. International Conference on Peer-
to-Peer Computing, p.48, September 01-03, 2003. 
16. Shih-Neng, Wu, “The Evaluation of Inquiry-based Learning with Incentive Mechanism on 
Peer-to-Peer Networks＂, Master Thesis, Department of Information Management, National 
Sun Yat-sen University, Taiwan, R.O.C. 2003. 
17. Karl R. Lang and Roumen Vragov, “A Pricing Mechanism for Digital Content Distribution 
Over Peer-to-Peer Networks＂, Proceedings of Hawaii International Conference on Systems 
Sciences, January, p. 211a-211a, 2005. 
18. Stefan Saroiu, P. Krishna Gummadi, and Steven D. Gribble, “A measurement study of peer-
to-peer file sharing systems,＂ in Proceedings of Multimedia Computing and Networking, 
San Jose, January 2002. 
19. T.S. Eugene Ng, Yang hua Chu, Sanjay G. Rao, Kunwadee Sripanidkulchai, and Hui Zhang, 
“Measurement-based optimization techniques for bandwidth-demanding peer-to-peer sys-
tems,＂ in proceedings of IEEE INFOCOM03, San Francisco, April 2003. 
20. A. R. Bharambe, C. Herley, and V. N. Padmanabhan, “Analysing and improving bittorrent 
performance,＂ Microsoft Research, Microsoft Corporation One Microsoft Way Redmond, 
WA 98052, USA, Tech. Rep. MSR-TR-2005-03, February 2005. 
 For ZR (or ZED) device, its address can be obtained 
by Formula (2) (or Formula (3)). 
𝐴𝐴𝑛𝑛 = 𝐴𝐴𝑝𝑝𝑝𝑝𝑝𝑝𝑝𝑝𝑛𝑛𝑝𝑝 + 𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝐶𝑝𝑝(𝑑𝑑𝑝𝑝𝑝𝑝𝑝𝑝𝑝𝑝𝑛𝑛𝑝𝑝 ) × (𝑛𝑛 − 1) + 1, 1 ≤ 𝑛𝑛 ≤ 𝑅𝑅𝑅𝑅(2) An = Aparent + Cskip(dparent ) × Rm + n, 1 ≤ n ≤ (Cm − Rm)  (3) 
The DAAM is excellent for its simplicity and efficiency.  
However, it also brings in the orphan problem (devices cannot 
join the network), and the detour problem (the path along the 
tree edges is not the shortest one).  We concern the orphan 
problem only. 
III. 2-LAYER DAAM 
2-layer DAAM (2DAAM) uses hierarchical scheme such 
that the 16-bit short address is divided into two parts.  The most 
significant bits are used in master layer, and the least 
significant bits in slave layer.  For instance, if the most 6 bits 
forms the master-layer and the rest 10 bits constitutes the slave- 
layer.  The network address can be represented as (ma, sa), 
where ma (sa) is the master (slave) address, and 0 <= ma < 64, 
and 0 <= sa < 1024.  The address of ZC is (0, 0).  Each layer 
has its own topological parameters, Cm, Rm and Lm, which is 
subject to the number of addresses in the layer.  During the 
network formation, ZC constructs the master tree following the 
topological parameters of master-layer.  After that, each node 
in the master tree acts as the ZC and constructs the slave tree 
following the topological parameters of slave-layer.   
The routing process can be described as follows.  An 
internal packet (the destination belongs to the slave tree of the 
source) is routed as DAAM.  An external packet has to be 
forwarded to local-ZC first, and then follows the tree path of 
master tree to arrive the ZC of destination. 
IV. LOCATION DAAM 
Usually, the WSNs are deployed in a geographical area.  
Hence, the Location information might be helpful in the 
construction of tree network.  For instance, consider the nodes 
in Figure 1.  Suppose that node Y is the parent of node X. Node 
X may have two children, where node A is its first child, and 
the second one is about to choose.  It is obvious that it is not a 
smart to take node B as its second child.  The communication 
range of node B overlaps with A and X, therefore it may result 
that most nodes on the bottom-right are failed to join the 
network.  On the other hand, the selection of node F or node G 
may produce a better result.  Below, we assume that each 
device knows its own coordinates. 
 
Figure 1.  Child Selections on Random Nodes 
 
We propose to use the distance as the criterion in the child 
selection.  Let {C1, C2, C3, ... , Ck} be the set of candidates of 
the child, and {R1, R2, R3, ... , Rq} be the set of reference points.  
Denote by d(X, Y) the distance between X and Y.  The 
distance of the candidate to all reference points are summarized 
in total.  Then, the largest one is chosen as the child.   
GPS has been widely deployed recently years.  However, to 
combine this technique directly to WSN has some difficulties.  
For indoor personal area network, there are many obstacles for 
GPS signals.  The precision of GPS is another consideration, 
and more importantly the energy consumption of GPS is often 
too heavy for low-power devices, such as sensors.  Although 
GPS may be too luxury for WSN, it is still possible to employ 
the techniques such as ToA (Time of Arrival), TDoA (Time 
Difference of Arrival), AoA (Angle of Arrival) and 
RSSI(Received Signal Strength Indication) as the basis of 
positioning. 
V. RSSI DAAM 
RSSI (Received Signal Strength Indication) can be used in 
the positioning of sensor network, although the process can be 
very long.  We then investigate the approach to use the RSSI 
directly as the criterion in the child selection.  The formula is 
the same as it in LDAAM, except that the distance is now 
measured by RSSI.  Notice that for nodes beyond the 
communication range, there is no RSSI.  It implies that the 
distance is only meaningful under the communication range. 
Take grid nodes in Figure 2 as an example.  The range of 
communication is 1.5, and each node has 8 neighbors.  The ZC 
is the center node, whose neighbors are A, B, C, D, E, F, G, and 
H.  Suppose that ZC may have two children, and the first 
selection is node A.  To determine the second child, the 
distance to ZC and to node A should be maximized.  The 
candidates are now B, C, D, E, F, G, and H.  From the point of 
view of node A, node B and D are neighbors, other 5 nodes are 
not.  Therefore, node B and D are out of the selection.  Node C, 
F and H are the best among the rest 5, from the point of view of 
ZC.  Hence, C, F and H have the same probability, 1/3, to be 
chosen as the second child of ZC.  It cannot guarantee that 
RDAAM choose the "best" node, but the example shows that 
some "bad" options can be eliminated. 
 
Figure 2.  Child Selections on Regular Nodes 
compromise, RDAAM achieves almost the same as LDAAM, 
with less cost.  The following figures show the tree structures.  
The blue edges in 2DAAM are the tree edges of master-layer.  
 
Figure 5.  DAAM Tree 
 
 
Figure 6.  2DAAM Tree 
 
 
Figure 7.  LDAAM Tree 
 
 
Figure 8.  RDAAM Tree 
 
VII. CONCLUSION 
Various techniques have been proposed and evaluated to 
solve the orphan problem.  2-DAAM works fine on the regular 
nodes, but it is very sensitive to the parameter of slave-layer, 
and the application needs to be studied further.  LDAAM and 
RDAAM show better performance with same routing effort.  
These three mechanisms can be used in conjunction of other re-
join techniques to solve orphan problem further.  The overhead 
in obtaining the location information or the heuristics in 
selection of child deserve further study. 
[1] 13-M. Yamaji, Y. Ishii, T. Shimamura and S. Yamamoto, “Wireless 
Sensor Network for Industrial Automation,” IEEE 5th International 
Conference on Networked Sensing Systems (INSS), Kanazawa, Japan, 
pp. 253, June 2008.  
[2] 11-M. S. Pan, H. W. Fang, Y. C. Liu and Y. C. Tseng, “Address 
Assignment and Routing Schemes for ZigBee-Based Long-Thin 
Wireless Sensor Networks,” IEEE Vehicular Technology Conference 
(VTC), Marina Bay, Singapore, pp. 173-177, 2008.  
[3] 14-H. Y. Huang, “The Experiment and Design of ZigBee Location 
System for Home-Care Applications,” Department of Photonics and 
Communication Engineering, Asia University, pp. 1-153, July 2009.  
[4] 47-Design and Construction of a Wildfire Instrumentation System Using 
Networked Sensors, http://firebug.sourceforge.net, 2009. 
[5] 25-ZigBee Alliance, www.ZigBee.org 
[6] 26-ZigBee Alliance, Network Layer Specification 1.0, Dec. 2004.  
[7] 20-Pan Meng-Shiuan, Tsai Chia-Hung and Tseng Yu-Chee, “The 
Orphan Problem in ZigBee Wireless Networks”, IEEE Transactions on 
Mobile Computing, 8(11), Pages: 1573-1584, 2009. 
[8] 19-Li-Hsing Yen and Wei-Ting Tsai, “The Room Shortage Problem of 
Tree-Based ZigBee/IEEE 802.15.4 Wireless Networks”, Computer 
Communications, Vol. 33, No. 4, pp. 454-462, Mar. 2010. 
[9] 22-T. Kim, S. Seo, C. P. Kit, Y. Kim, S. E. Yoo and D. Kim, 
“Experiments on mobile sink application in ZigBee networks,” IEEE 
International Symposium on Consumer Electronics (ISCE), pp. 1-4, 
April 2008.  
100年度專題研究計畫研究成果彙整表 
計畫主持人：蔡國煇 計畫編號：100-2221-E-019-049- 
計畫名稱：點對點網路的以牙還牙策略研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 0%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100% 撰寫中 
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
