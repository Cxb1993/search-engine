一、 摘要 
 
地理資訊系統誕生至今，其應用領域已
由自動繪圖、資源管理、土地利用發展以至
與地理位置相關的郵電通訊、水利電力、金
融保險、地質礦產、交通運輸等等多種領
域，而地形在其中佔了很重要的地位，尤其
是在地形的分柝與其他資料相互配合使用
的時候。由於電腦硬體快速成長，也使得越
來越多3D地形視覺化功能加入地理資訊系
統中，3D地形視覺化使得使用者更容易了
解其地形的面貌及地形資料。為了呈現3D
地形視覺化，通常在系統中需要有地形引擎
來幫助系統管理操作地形資料及根據地形
資料快速顯現3D地形。地形引擎除了是地
理資訊系統主要核心之ㄧ外，許多應用程式
也需要到地形引擎，如模擬、遊戲、土木工
程、石油/礦物的探測及任何需要呈現3D地
形應用程式等。  
在此計畫中，我們主要共有三個目標：  
 我們將參考著名的open source 地形引
擎訂出ㄧ個妥善的引擎架構。  
 我們將依照所訂出之架構，實作地形引
擎相關之功能，使今後要製作地形相關
軟體可以此引擎為基礎來開發，以簡化
及縮短軟體的製作過程及時間。然後將
此地形引擎釋出成為Open Source，希
望利用Open Source的特性與優點，激
發有心人士共同創作並改進或擴充此
地形引擎。  
 實作地形產生器及地形導灠系統，以我
們所開發制定的地形引擎為底層開
發，加強驗證此地形引擎的實用性。  
 
關鍵詞︰地理資訊系統、地形、引擎、模組、
合成、導灠。 
 
Abstract 
 
GIS (Geographic Information System) has 
been applied to many fields such as resource 
management, telecommunications, transporta-
tion, forestry and urban planning and so on. 
The terrain plays an important role in GIS, 
especially terrain analysis cooperates with 
other data. The more computer hardware 
grows, the more 3D terrain visualization is 
added in GIS. User can understand more 
about terrain aspect and data by 3D terrain 
visualization. For rendering 3D terrain, GIS 
usually involves a terrain engine to manage 
and process terrain data and renders 3D ter-
rain rapidly. Terrain engine is one main core 
of GIS, and many kind of applications also 
use it to develop such as simulation, game, 
civil engineering and petroleum/mineral ex-
ploration and so on.  
In this proposal, we have three goals：  
 We will refer to some famous terrain en-
gines and design a well terrain engine 
architecture。A well terrain engine can 
simplify and reduce process and time of 
the software development。  
 Implementing terrain engine is based on 
the architecture and some terrain appli-
cations can be based on the terrain en-
gine. Then, we plan to release the code 
we have developed as a basic of an open 
source project to the public.  
 Implementing terrain generator and na-
vigating terrain system are based on the 
terrain engine, and they are also used to 
verify the practicability of the terrain en-
gine.  
 
 四、 研究方法 
 
我們參考Virtual Terrain Projec、Demeter 
Terrain Engine及SOAR Terrain Engine等著
名的open source地形引擎架構，並使用微軟
的 Microsoft Visual C# 配合 Microsoft Di-
rectX 9.0c為主開發地形引擎、地形產生器
及地形導灠系統。 
以下分別描述地形產生器及地形導灠
系統，並說明與地形引擎的闗係： 
 地形產生器： 
    地形產生的方式，常常牵涉到大量資料
產生及繪製，使得地形產生的技術常常需要
在效能以及結果擬真度之間做取捨。一般而
言，現在產生地形方式可分成兩種；碎片地
形及物理侵蝕地形。碎片地形是基於碎片布
郎運動方式來產生地形，此方式的缺點是所
產生的地形較不真實。物理侵蝕地形是基於
模擬河流沖刷、雨水侵蝕及風力等多樣外在
因素來產生擬真地形，此種方式缺點是所計
算的時間是相當長。 
此系統利用真實存在的地形資料儲存
成地形資料庫為基礎，由使用者輸入地形元
件的資訊供系統參考，以便從地形資料庫中
找出與地形元件最為相似的真實地形來產
生合成真實地形。由於產生的地形資料是由
真實地形資料組合而成，所以產生出來的地
形具有真實性及合理性，且只需要把使用者
輸入的地形元素與地形資料庫相比對，所以
相對性不需要大量的運算時間。 
    圖 1 為地形產生器的流程與使用地形
引擎所提供的物件來產生地形。 
 地形導灠系統 
此系統使用 Ray-casting based 的地形
描繪，但是目前 ray-casting based 的地形描
繪主要仍有下列的問題：(1). 射線在開始進
行交點測試的位置距離實際上會交到交點
的位置仍太遠，會耗費許多多餘的交點測試
成本在運算上。(2). 所使用的 Empty space 
map 耗費較多的記憶體，因此不適合直接應
用到較大的地形描繪中，而我們提出的 2D
的 QBES map 用來提升射線交點測試的效
率。 
此系統簡化的 mesh 來建構  Terrain 
boxes，並將此 Terrain Boxes 的座標資訊做
轉換後輸出為 Entry point map 使得在做
Ray casting 的交點測試時的距離可以較接
近地形表面，並搭配 QBES map 的使用，
使得射線盡可能跨躍過空區間(Empty space)
的區域，進而減少射線作交點測試的次數而
加快速度。 
圖 2 為地形導灠系統與地形引擎所提
供的物件來導灠地形。 
 
圖 1、地形產生器的 framework 
 
圖 2、地形導灠系統的 framework 
- 4 - 
圖 5(a)、由幾個地形元件所合成有分支的地
形 
 
 
圖 5(b)、幾個相連地形元件的俯視圖 
 
 
 
圖 5(c)、幾個相連地形元件的透視圖 
 
  地形導灠系統  
此導灠系統使用Ray-casting based的地
形描繪，來加快描繪的速度。 
圖 6(a)和 6(b)分別為高山地形遠距離以
及近距離描繪結果。圖 7(a)和 7(b)分別為加
入燈光及霧的效果。 
 
 
圖 6(a)、高山地形遠距離的描繪結果 
 
 
圖 6(b)、高山地形近距離的描繪結果 
 
 
燈光效果 
 
- 6 - 
陳玄玲 譯, 台北市：旗標出版社, 2002, 
ISBN 957-717-841-3. 
[10]. Visual C# 2005程式開發與介面設計秘
訣, 章立民研究室 著, 基峰資訊, 2006, 
ISBN 986-181-013-7 
[11]. C# Primer Plus中文版, 瀟湘工作室 譯, 
基峰資訊, 2003, ISBN 986-421-406-3. 
[12]. C++ Primer ,ISBN: 
0201721481 ,Addison-Wesley Profes-
sional; 4 edition (February 14, 2005) 
[13]. Programming Visual C++ ,ISBN: 
1572318570 ,Microsoft Press; 5th 
Bk&Cdr edition (August 1998) 
[14]. Focus on 3D Terrain Programming, 
ISBN: 1-592000-028-2. Trent Polack, 
Primer Press (2003). 
[15]. Real-Time 3D Terrain Engines Using 
C++ and DirectX 9 ,ISBN: 1584502045, 
Charles River Media; 1 edition (June 
2003) 
[16]. GPU Gems: Programming Techniques, 
Tips, and Tricks for Real-Time Graph-
ics ,ISBN: 0321228324, Addi-
son-Wesley Professional; Bk&CD-Rom 
edition (March 22, 2004) 
[17]. GPU Gems 2 : Programming Techniques 
for High-Performance Graphics and 
General-Purpose Computation,ISBN: 
0321335597,Addison-Wesley Profes-
sional; Bk&CD-Rom edition (March 3, 
2005) 
[18]. Mandelbrot, B. B. and Van Ness, J. W., 
“Fractional Brownian motions, fractional 
noise and applications,” SIAM Review, 
10, 4, pp. 422-437, Oct., 1968. 
[19]. Mandelbrot, B. B., ”On the geometry of 
homogeneous turbulence, with stress on 
the fractal dimension of iso-surfaces of 
scalars.,” J. Fluid Mechanics, 72, 2, pp. 
401-416, 1975. 
[20]. Mandelbrot, B. B., “Stochastic models 
for the earth’s relief, the shape and frac-
tal dimension of coastlines, and the 
number area rule for islands.,” Proc. Nat. 
Acad. Sci. USA, 72, 10, Oct., 1975. 
[21]. Mandelbrot, B. B., “A fast fractional 
Gaussian noise generator.”, Water Re-
sources Research, 7, 3, pp. 543-553, June, 
1971. 
[22]. Mandelbrot, B. B., “Fractals: Form, 
Chance and Dimension.”, Freeman, San 
Francisco, 1977. 
[23]. Mandelbort, B. B., “The fractal geome-
try of nature”, WH Freeman, New York, 
1982. 
[24]. Haruyama, S. and Barsky, B., “Using 
stochastic models for texture genera-
tion.”, IEEE Computer Graphics and 
Applications, 4, 3, pp. 7-21, March, 
1984. 
[25]. Miller, G. S. P., “The definition and 
rendering of terrain maps”, Siggraph 86 
Proceedings. (Dallas, Tex., Aug). ACM, 
New York, pp. 39-48. 1986. 
[26]. Lewis, J. P., “Generalized Stochastic 
Subdivision”, ACM Transactions on 
Graphics, Vol. 6, No. 3, pp. 167-190, Ju-
ly, 1987. 
[27]. Fournier, G. Y., Fussell, D. and Carpen-
ter, L., “Computer Rendering of Stochas-
tic Models”, Communications of the 
ACM, Vol. 25, pp. 371-384, 1982. 
[28]. Nagashima, K., “Computer Generation 
of Eroded Valley and Mountain Ter-
rains,” The Visual Computer 13:456-464, 
1997. 
- 8 - 
