2MPPAC conveys critical information of each individual process regarding the departure of
the process mean from the target value and overall process variability on a single chart.
Pearn and Chen (1997) proposed a modification to the Cpk MPPAC combining the other
two capability indices Cpm and Cpmk. Such a chart can be helpful in grouping processes into
different performance categories based on their corresponding values of capability indices.
Furthermore, those charts can also prioritize the order of the processes for further quality
improvement effort should forcus on. But, all the above articles in developing and
applying those MPPACs ignored the sampling errors. Then, the performance information
provided by those charts is unreliable and misleading. Considering the sample errors Pearn
and Shu (2003) applied the lower confidence bounds of Cpk to modify the Cpk MPPAC. In
this paper, we apply the lower confidence bounds of CPU and CPL to the modified Cpk
MPPAC to provide reliable simultaneous capability control for multiple processes.
Key Words: Process capability index; Control chart; Cpk MPPAC; Capability zone
1. 簡介
統計製程管制圖被用來管制或監控製程績效，包含 , , , ,X R S 管制圖已經廣泛地
成為製造業的例行工作。這些圖表是品質改進相關作為的基本工具。對於在具有好幾
個製程需要同時被監控的多重生產線的現場，要同時評估與掌控整個工廠中每一條生
產線的品質與績效，對現場的工程師或主管而言是困難與費時的。
製程能力指標 (Process Capability Index)為製程參數 , , …, 與預設的規格上下
界 USL, LSL 的函數。指標值為一個無單位的數值，可用來衡量所感興趣的製程是否
具有足夠的製程能力，亦可用來比較不同生產線的製程績效。
具代表性的製程能力指標有 Cp, CPU, CPL, Cpk, Cpm 與 Cpmk。其中，指標 Cp, Cpk, Cpm,
與 Cpmk 被用來衡量具雙邊規格的製程，而被用來衡量僅具單邊規格的製程有 CPU與
CPL。分別定義如下：
Cp =
USL LSL
6

, CPU = 

3
USL
, CPL = 

3
LSL
,
Cpk =
USL μμ LSL
min ,
3σ 3σ
    
, Cpm =
2 2
USL LSL
6 σ (μ T)

 
,
Cpmk =
2 2 2 2
USL μ μ LSL
min ,
3 σ (μ T) 3 σ (μ T)
    
     
。
其中 USL 為規格上界，LSL 為規格下界，T 為目標值，為製程期望值，為製程標
準差。
4圖(一) Singhal (1991) 所提出的
「Cpk MPPAC」
圖(二) 區分「Cpk MPPAC」為六個
能力區塊：F、D、C、B、M、A
表(二) 六個能力區塊：F、D、C、B、M、A 與對應的品質等級
能力區塊 指標值的範圍 品質等級
F Cpk 1.00 不足的
D 1.00 Cpk 1.33 有能力的
C 1.33 Cpk 1.50 令人滿意的
B 1.50 Cpk 2.00 優秀的
M Cp  2.00 and Cpk  1.50 Motorola
A Cpk  2.00 超級的
圖(三) Cpk/Cpm 多製程區塊 圖(四) Cpk/Cpmk 多製程區塊
因為製程參數 與 是未知的，因此製程的( PU PL,C C )的真值，也是未知的。通
常分別以樣本平均數 X 與樣本標準差 S 來估計與 ，再算出能力指標的估計值。但
是上述的「Cpk MPPAC」並沒有考慮到抽樣誤差，由收集的樣本計算 CPU 與 CPL的估
6min{ PUCˆ , PLCˆ }遵循雙重非中 t 分配， pkˆC 所對應的信賴下限值不易求解。Pearn and Shu
(2003) 文中仔細研究 pkˆC 所對應的信賴下限值與未知參數 = (- m)/的關係，提供
Matlab 程式來求解 pkˆC 所對應的 Cpk 的信賴下限值。
Pearn and Shu (2003) 提出的改良型的「Cpk MPPAC」考慮抽樣誤差，改善了以往
的「Cpk MPPAC」可性度不足的問題。其建構改良型的「Cpk MPPAC」的主要過程為：
(1) 由樣本計算 PUCˆ 與 PLCˆ 的值，若 PUCˆ = x0、 PLCˆ = y0，則 pkˆC 的值為 min{ x0, y0}。
(2) 再以 Matlab 程式來計算 pkˆC 的值 min{ x0, y0}所對應的 Cpk 的信賴下限值 cK。同時
也以 Matlab 程式來計算 pkˆC = x0， pkˆC = y0 所對應的 Cpk 的信賴下限值 cKU 與 cKL，再將
點(cKU, cKL)標示在「Cpk MPPAC」之中(參見圖(五))，當然 cK = min{cKU, cKL}。
(3) 將所有製程的樣本所對應的點(cKU, cKL)標示出來，即完成 Cpk 多製程績效分析圖。
4. 建構改良型的「Cpk MPPAC」的新方法
若製程遵循常態分配 N(, 2)， 1USL X k S  ， 2LSL X k S  ，則 1 PUˆ3k C ，
2 PLˆ3k C 。CPU的 100%信賴下限 cU 滿足 Pr[CPUcU] =，即 Pr[Tn-1() 1k n ] =，其
中1 = 3 n cU。CPL的 100%信賴下限 cL 滿足 Pr[CPLcL] =，即 Pr[Tn-1() 2k n ] =，
其中2 = 3 n cL。以現成的套裝軟體，如 SAS、Maple、Matlab 等，不難計算 PUCˆ 與 PLCˆ
所對應的 CPU與 CPL的信賴下限 cU 與 cL。
我們提出建構改良型的「Cpk MPPAC」的新方法如下：
(1) 由樣本計算 PUCˆ 與 PLCˆ 的值，若 PUCˆ = x0、 PLCˆ = y0，則 pkˆC 的值為 min{ x0, y0}。
(2) 分別計算 PUCˆ = x0 與 PLCˆ = y0 所對應的 CPU與 CPL的信賴下限值 cU與 cL。再將點
(cU, cL)標示在「Cpk MPPAC」之中。 pkˆC 的值 min{ x0, y0}所對應的 Cpk 的信賴下限
值 cK 定為 min{ cU, cL}。
(3 ) 將所有製程的樣本所對應的點(cU, cL)標示出來，即完成 Cpk 多製程績效分析圖。
在步驟(2)中， pkˆC 的值 min{ x0, y0}所對應的 Cpk 的信賴下限值為 cK = min{ cU, cL}
和 Pearn and Shu (2003) 所提出的方法中的 cK = min{ cKU, cKL}，完全相等！所建構的
改良型的「Cpk MPPAC」也完全一樣！顯然，我們所提的新方法，計算過程較為容易。
對於遵循常態分配的製程，Pearn and Chen (2002) 指出 PUC = PUˆfb C 與 PLC =
PLˆfb C 分別為 CPU與 CPL的 UMVUEs，其中 f = n–1， 2 / [ / 2] / [( 1) / 2]fb f f f    。
若 1USL X k S  ， 2LSL X k S  ，則 1 PU3 / fk C b  ， 2 PL3 / fk C b  。CPU 的 100%信賴
下限 cU 滿足 Pr[CPUcU] =，即 Pr[Tn-1() 1k n ] =，其中1 = 3 n cU。CPL的 100%
信賴下限 cL 滿足 Pr[CPLcL] =，即 Pr[Tn-1() 2k n ] =，其中2 = 3 n cL。以現成的
套裝軟體，如 SAS、Maple、Matlab 等，也不難計算 PUC 與 PLC 所對應的 CPU與 CPL的信
賴下限 cU 與 cL。
由於 Cpk = min{CPU, CPL}，所以定義 Cpk 的估計量 pkC = min{ PUC , PLC }。以 CPU
