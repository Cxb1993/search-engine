2into a number of small time intervals and a static
economic dispatch has been employed to solve the
problem in each interval [11]. Attaviriyanupap et al.
[11] proposed a hybrid evolutionary programming
(EP) and sequential quadratic programming (SQP)
method to solve the DED problem considering the
non-smooth fuel cost function. A robust heuristic
method was used by Ham et al. [8] to solve the
DED problem. Victoire and Jeyakumar [12]
proposed a hybrid solution methodology integrating
particle swarm optimization (PSO) algorithm with
the sequential quadratic programming (SQP)
method for the DED problem. However, these three
methods required two phase computations. The
particle swarm optimization (PSO) method
proposed by Gaing [13] for solving the dynamic
economic dispatch problem. The population size is
set to x100 , where x is the number of decision
parameters. In so doing, much more computation
time is required to evaluate the fitness function.
Hybrid differential evolution (HDE) [14-15] is
a stochastic search and optimization method. The
fittest of an offspring competes one-to-one with that
of the corresponding parent, which is different from
the other evolutionary algorithms (EAs). This
one-to-one competition gives rise to a faster
convergence rate. However, this faster convergence
also leads to a higher probability of obtaining a
local optimum because the diversity of the
population descends faster during the solution
process. To overcome this drawback, the migrating
operator and accelerated operator are employed to
act as trade-off operators for the diversity of
population and the convergence property in HDE.
However, the selection of mutation operator is
another very important issue in HDE application. A
proper mutation operator can accelerate searching
out the global solution [16].
Colorni [17] proposed the concept of ant
system (AS) and applied to the traveling salesman
problem (TSP) [18]. Ant algorithm has been
inspired by the behavior of real ant colonies, in
particular, by their foraging behavior. As it is well
known, real ants are capable of finding the shortest
path from food sources to the nest without using
visual cues. Recently, the ant algorithm has been
applied to various optimization problems, such as
the short-term generation scheduling problem [19],
unit commitment [20], hydroelectric generation
scheduling [21], and so on.
In this study, an ant direction hybrid
differential evolution (ADHDE) for solving the
large-scale static and dynamic economic dispatch
problems is proposed. There are five mutation
operations stated in the paper, and the HDE uses
only one mutation operator during the solution
process. However, the proposed ADHDE method
embedded with the ant colony search which is able
to constantly choose different but most appropriate
mutation operators during the solution process to
accelerate searching out the global solution. This is
the most important merit of the proposed ADHDE
method. As mentioned above, the combination of
HDE and ant colony search has the advantage of
accelerating the search of the global solution. Since
in every generation, each ant selects a mutation
operator according to the heuristic and pheromone
information, so that the ant colony search helps to
find the proper mutation operator. To illustrate the
convergence property of the proposed method, one
15-unit static economic dispatch system and one
10-unit dynamic economic dispatch system are used
to compare the performance of the proposed method
with HDE, genetic algorithms (GAs) and simulated
annealing (SA).
2. Problem formulation
The reserve constrained static and dynamic
economic dispatch systems considering prohibited
operating zones can be mathematically described as
follows:
For static economic dispatch system,
  


i
iiiiiPi
iiP
PaPbcPF
ii
2minmin (1a)
where
i :index of dispatchable units
iF :fuel cost function of unit i
iP :power generation of unit i
:set of all dispatchable units
iii cba ,, :fuel cost coefficients of unit i
For dynamic economic dispatch system,
   
  ititii
T
t
n
i
itiitiiP
T
t
n
i
ititP
PPfe
PaPbcPF
itit

 
  
min
1 1
2
1 1
sin
minmin (1b)
where
i :index of dispatchable units
t :index of time intervals
4Units without prohibited operating zones
maxmin ititit PPP  (10b)
where
l
iP 1, :lower bound of the first prohibited zone of
unit i
l
jiP , :lower bound of the j-th prohibited zone of
unit i
u
jiP 1,  :upper bound of the (j-1)-th prohibited
zone of unit i
u
ni i
P , :upper bound of the in -th prohibited zone
of unit i
in :number of prohibited zone in unit i
(d) Ramping rate limits
For dynamic dispatch system,
maxmin ititit PPP  (11)
),max( )1(minmin itiiit DRPPP   (12)
),min( )1(maxmax itiiit URPPP   (13)
where
maxitP :maximum generation limit of unit i at
the t -th time interval
miniP :minimum generation limit of unit i
maxiP :maximum generation limit of unit i
)1( tiP :power generation of unit i at the
)1( t -th time interval
iUR :the up ramp limit of the i -th unit
iDR :the down ramp limit of the i -th unit
To solve the above-mentioned system, the ant
direction hybrid differential evolution is proposed
as follows.
3. Ant direction hybrid differential
evolution algorithm
The main idea of ant direction hybrid
differential evolution is to use the ant colony search
system for finding the proper mutation operator to
accelerate searching out the global solution. In
every generation, each of pN ants selects a
mutation operator according to heuristic
information and pheromone information. Different
from [17-21], the difference between the objective
function value in the next generation and the best
objective function value of the present generation
constructs a fluctuant pheromone quantity. The
fluctuant pheromone quantity is defined as follows:
pi Ni
otherwise
chosenisoperatormutationpropertheif
LK
Q
,...,1,
,0
, 




 (14)
In (14), the proper mutation operator is chosen
when the objective function value of the next
generation is better than the best objective function
value of the present generation. Where Q is a
constant and LK is defined as follows:
newpresent
new
objectbest
object
LK

 (15)
Where presentbest expresses the best objective
function value of the present generation and
newobject expresses the objective function value of
the next generation. The pheromone updating
applies the following rule.
i
Old
i
New
i   (16)
The coefficient  must be fixed to a value < 1 to
avoid an unlimited accumulation of trace. The
magnitude of the new pheromone was updated by
vaporizing )1(  percentage of pheromone from
the previous iteration and fluctuant pheromone
quantity in the current iteration. It is observed that
the probability of selecting mutation operator is
proportional to the pheromone quantity i and the
information pi Ni ,...,1,  . The information i is
defined as follows:
5.0
1
211 ))/)(((


n
j
G
ij
G
bj
G
iji ZZZ (17)
Where 1GijZ denotes the j-th gene of the i-th
individual in a population in the (G+1)-th
generation, and GbjZ denotes the j-th gene of the
best individual in a population in the G-th
generation. Hence, the probability of choosing a
mutation operator is defined as follows:




pN
i
ii
ii
i
t
t
tp
1
)(
)(
)(



 (18)
Where  and  are parameters to regulate the
influence of i and i, respectively.
The ADHDE method has five different
mutation operations. All these mutation operations
are based on the conception of difference vector
[22]. To illustrate how to determine the probability
of every mutation operation, a simple example
describing the concept of determining the
6]ˆ,...,ˆ,ˆ[ˆ 112
1
1
1   GmiGiGiGi ZZZZ and the present individual
],...,,[ 21
G
mi
G
i
G
i
G
i ZZZZ  . That is,



 



otherwiseZ
CnumberrandomaifZ
Z
G
gi
r
G
giG
gi
,ˆ
,ˆ
1
1 (23)
Where pNi ,...,1 ; mg ,...,1 ; and the crossover
factor ]1,0[rC is assigned by the user.
Step 5. Estimation and selection
The parent is replaced by its offspring if the
fitness of the offspring is better than that of its
parent. Contrarily, the parent is retained in the next
generation if the fitness of the offspring is worse
than that of its parent. Two forms are represented as
follows
 )ˆ(),(minarg 11   GiGiGi ZfZfZ (24)
 )(minarg1 GiGb ZfZ  (25)
Where minarg means the argument of the minimum.
Step 6. Migrating operation if necessary
In order to effectively enhance the
investigation of the search space and reduce the
choice pressure of a small population, a migration
phase is introduced to regenerate a new diverse
population of individuals. The new population is
yielded based on the best individual 1GbZ . The g-th
gene of the i-th individual is as follows:















otherwiseZZZ
ZZ
ZZ
ifZZZ
Z
G
bggi
G
bg
gg
g
G
bgG
bggi
G
bgG
ig
),(
),(
1
max
1
minmax
min
1
1
min
1
1

 (26)
Where i and  are randomly generated
numbers uniformly distributed in the range of ]1,0[ ;
pNi ,...,1 ; and mg ,...,1 .
The migrating operation is executed only if a
measure fails to match the desired tolerance of
population diversity. The measure is defined as
follows:
1
1 1
))1(/(  

 
p
N
bi
i
m
g
Z Nm
p
(27)
Where



 
 

otherwise
Z
ZZ
if
G
bi
G
bi
G
gi
Z
,1
,0
1
11
2 (28)
Parameter ]1,0[1 expresses the desired tolerance
for the population diversity and the gene diversity
with respect to the best individual. Z is the scale
index. From (27) and (28), it can be seen that the
value  is in the range of ]1,0[ . If  is smaller
than 1, then the migrating operation is executed to
generate a new population to escape the local point;
otherwise, the migrating operation is turned off.
Step 7. Repeat step2 to step 6 until the maximum
iteration quantity or the desired fitness is reached.
4. Examples
Once the ED takes account of the
prohibited-operating zones constraint, the
conventional Lagrangian multiplier based approach
is no longer directly applicable. In order to avoid
the unit’s operating into prohibited zones, a strategy 
is explored.
To overcome the unit’s operating in prohibited 
operating zones, a delimitation point, dijP , is
introduced for the j -th prohibited zone of unit i .
The delimitation point divides the prohibited zone
into two sub-zones, i.e., the left and right prohibited
sub-zones with respect to the point. When a unit
operates into one of its prohibited zones, the
concept of this strategy is to force the unit either to
move toward the lower bound of that zone from the
left sub-zone or to move toward the upper bound of
that zone from the right sub-zone.
To attain the purpose of moving the unit
validly, a delimitation ratio, , is defined first as
follows:
l
ij
u
ij
l
ij
d
ij
PP
PP


 (29)
Where uijP and lijP are the upper and lower
bounds of the j -th prohibited zone of unit i ,
respectively. If the ratio, , is smaller than 0.5, the
delimitation point is closer to the lower bound, lijP .
On the other hand, if the ratio is greater than 0.5, the
point is closer to the upper bounds, uijP . To
determine which bound the unit should move to, a
uniformly distributed random number,  1,0 , is
generated. If the random number  is bigger than
the ratio , then let the unit move to the upper
bound uijP ; otherwise, let the unit move to the lower
bound lijP .
One 15-unit static economic dispatch problem
and one modified 10-unit dynamic economic
dispatch from the literature are investigated and the
8Table 3. Computational results of the Example 1
Method GA SA HDE ADHDE
 MWP1 415.85 413.22 455.00 455.00
 MWP2 450.00 167.67 336.16 453.17
 MWP3 111.87 99.91 128.39 130.00
 MWP4 121.46 21.36 129.92 130.00
 MWP5 340.84 449.20 420.00 342.05
 MWP6 455.00 296.28 418.73 460.00
 MWP7 333.78 360.15 443.03 465.00
 MWP8 81.84 287.99 60.00 60.00
 MWP9 115.48 155.27 41.42 41.05
 MWP10 60.59 138.81 107.17 20.00
 MWP11 31.78 47.85 20.00 20.00
 MWP12 55.00 76.97 79.59 80.00
 MWP13 70.39 81.91 36.98 25.00
 MWP14 26.22 52.94 22.02 21.44
 MWP15 36.34 52.95 15.00 15.00
Power
loss MW
56.45 52.49 63.41 67.72
Total
generation
 MW
2,704.46 2,702.49 2,713.40 2717.72
Total
reserve MW
307.86 218.90 246.65 223.55
Cost h/$ 33,538.27 34,174.45 33,343.37 33,282.40
operating zones, and the remaining six units
contribute the required spinning reserve to the
system. The valve-point effects are also considered
in this example. Input data of the 10-unit system are
listed in Table 4. Table 5 lists the prohibited zones
of units 2, 5, 6, and 9. These zones result in four
disjoint feasible sub-regions for each of units 2, 5,
and 6, and three for unit 9. Hence those zones result
in a non-convex decision space which consists of
192 convex sub-spaces for every dispatch interval
of the example system.
The load demand of the system is divided into 24
dispatch intervals, shown in Table 6. The spinning
reserve is required to be greater than 5% of the load
demand at every dispatch interval. The setting
factors used in the ADHDE to solve the example
system are as follows. The population size, pN , is
set to 5. The maximum generation is 500. The
crossover factor, rC , is set to 0.8. The scaling
factor is set to 0.3. The second mutation operator is
used in the ADHDE. The two tolerances, 1 and
2, used in the migrating operation are both set to
0.1. These initial-setting factors for the HDE
method are the same as that for the ADHDE, except
that the HDE uses second mutation operator. The
computational results are shown in Table 7. From
Table 7, the fuel cost and CPU time obtained by the
HDE method are day/$2.243,343,1 and 41,736
sec, respectively. The fuel cost obtained by the
ADHDE method is day/$2.190,163,1 which is
slightly lower than that of the HDE method.
Table 4. Input data of the 10-unit system for example 2
Unit 1 2 3 4 5
ia 0.00043 0.00063 0.00039 0.00070 0.00079
ib 21.60 21.05 20.81 23.90 21.62
ic 958.20 1313.6 604.97 471.60 480.29
ie 450 600 320 260 280
if 0.041 0.036 0.028 0.052 0.063
miniP 150 135 73 60 73
maxiP 470 460 340 300 243
maxiS 50 0 30 30 0
iiB 0.000042 0.000069 0.000093 0.000093 0.000085
iUR 80.00 80.00 80.00 50.00 50.00
iDR 80.00 80.00 80.00 50.00 50.00
Unit 6 7 8 9 10
ia 0.00056 0.00211 0.0048 0.10908 0.00951
ib 17.87 16.51 23.23 19.58 22.54
ic 601.75 502.70 639.40 455.60 692.40
ie 310 300 340 270 380
if 0.048 0.086 0.082 0.098 0.094
miniP 57 20 47 20 55
maxiP 160 130 120 80 55
maxiS 0 50 50 0 0
iiB 0.000053 0.000092 0.000065 0.000042 0.000070
iUR 50.00 30.00 30.00 30.00 30.00
iDR 50.00 30.00 30.00 30.00 30.00
Table 5. Prohibited zones of units for example 2
Unit Zone 1 )(MW Zone 2 )(MW Zone 3 )(MW
2 ]225,185[ ]335,305[ ]450,420[
5 ]100,90[ ]168,153[ ]210,195[
6 ]85,77[ ]132,122[ ]153,143[
9 ]40,30[ ]65,55[
