行政院國家科學委員會補助專題研究計畫期末報告 
ㄧ個全新的晶片-封裝-印刷電路板共同設計與共同最佳化方法 (第三年) 
 
Abstract—Slow turn-around between design, package and system houses has been one of the primary concerns 
in semiconductor business. This is seriously lagging the development time of the system due to time-consuming 
interface design between chip, package and board. Due to this reason, we proposed this 3-year project, trying to 
study on this difficult problem and hoping to contribute more on the integration of the design flow. We have 
good results: we published 2 IEEE journal papers [11,12], 8 IEEE conference papers [13-20], some other 
submitted works, and filed one patent. Furthermore, we have attracted one Japan well-known researcher to 
collaborate with us, also co-published some works. This report mainly shows our integration in 3-year efforts. 
We greatly appreciate NSC supports in this research. 
 
In order to enable chip-package-board codesign to speedup the design process, we propose an 
approach to address this issue by efficiently planning wires for board and chip designs awareness, which 
includes the package pinout designation and corresponding wire planning in package and board. We model the 
problem as an interval intersection problem. Due to the special need in pin-out rules, we have developed an 
algorithm to resolve the problem. We then use some optimization techniques to further improve the objectives 
such as global wire congestion and length deviation. Our results show that we can perform a very efficient 
estimation considering those important objectives, even outperforming one recent related work in package 
congestion perspective. 
 
I. INTRODUCTION 
 
Nowadays larger gaps are emerging between chip, package, and board designs. More resources are spent 
on reaching a consensus between these three interfaces. Chip-Package-Board codesign targets at better system 
performance and shorter design cycles. It efficiently facilitates achieving a convergent solution. Fig. 1 shows 
the example of the whole platform: signals starting from I/O pads travel through many interfaces including RDL 
bumps, package balls, and printed circuit board (PCB). In modern VLSI designs, more than a thousand I/O pins 
are usually required to communicate with each other. Due to the demand for more I/Os, ball grid array (BGA) 
packaging has become a major interface between chip and PCB. Trade-offs between system performance and 
cost are therefore determined by BGA pin-out designation (also called ballout). 
 
[1] proposed an efficient approach to automate pin-out designation for package-board codesign. Their 
frameworks consider signal integrity (SI), power delivery integrity (PI) and routability (RA) in pin-out block 
design, and achieve close-to-minimum package size while providing good signal quality. However, more 
requirements should be further fulfilled in pin-out designation, in addition to the performance metrics 
mentioned above, to facilitate the routing works between chip, package and PCB. Moreover, the design on the 
chip side should also be accounted for, in order to reflect important design constraints to impact package wire 
planning. 
 
iterations between design house, package house and system house. This work proposes a feasible pinout 
designation which considers the ordered pin sequence in both die side and package side. These ordered pin 
sequences are passed to die RDL routing and PCB area routing, which are optimized by using previous works 
[2], [3], [4], [5], [6]. In other words, core designers can specify the preferred I/O pad ordering; system designers 
can specify the preferred bump pin-out designation. Our method can efficiently analyze if the preferences from 
both sides accommodate each other, before performing RDL routing and substrate routing. Thus the flow can be 
replaced by the proposed methodology, as shown in Fig. 3. 
 
 The rest of the report is organized as follows. Section II defines the problem of wire planning for 2-layer 
package design and PCB escape routing considering the ordered pin sequence. Section III describes the package 
ballout and wire planning approach; Section IV shows the optimization for various objectives to further 
strengthen our methodology. Section V shows the experimental results, followed by conclusion in Section VI. 
 
 
Fig. 2. Conventional flow suffers from costly rework and slow turn-around. 
 
 
Fig. 3. The proposed flow enables fast chip-package-board codesign respin. 
 Fig. 5. Problem Illustration. Each net is designated to a via and a ball; the corresponding wire planning of n1 is plotted. vi and bi are 
tied up to find initial solution. The numbers inside via and ball slots are initial solution for these two ordered pin sequence. 
 
III. PACKAGE PIN-OUT AND CORRESPONDING WIRE PLANNING 
 
A. Monotonic Global Routing in Wire Planning 
 
A route, from die-side pin to via and from ball to package-side pin, is called monotonic if it only 
intersects any straight line running parallel with the ordered pin sequence at most once. This definition is similar 
to the condition for monotonicity introduced in [7]. Fig. 6 shows eight routing scenarios of 2-layer package 
routing and PCB escape routing, only (a) and (e) are not monotonically assigned. [8] [10] have shown that the 
routing on the package layer-1 are monotonic when vias are monotonicly assigned. Following the same idea, 
when balls are designated to be monotonic, the PCB escape routing is monotonic. In Fig. 6, three nets (n1, n2, 
and n3) are assigned in eight different patterns. DOPS connects via on the first layer of package and POPS 
connects balls on PCB. DOPS is given as 1, 2, 3 and POPS is given as 2, 1, 3, in which the order of n1 and n2 
are reverse. They are called intersected nets since their flylines intersects with each other. 
 
Based on these scenarios, we can define the general rule of thumb for designating package pin-out and 
completing the monotonic global routing. Take Fig. 6(a) as an example, p1 (pin/net 1; with via v1 and ball b1) 
is on the left of p2, this order is consistent with DOPS but inconsistent with POPS. When the designated column 
number of n1 and n2 is not in the same order as in DOPS or POPS, that will cause the routing intersection 
during package layer-1 routing or PCB escape routing. To route without intersection, as shown in Fig. 6, 
different pin-out assignments will produce different routing results. These results are summarized as follows: 
(rowi means the row number of pi) 
 
• Case 1 (row1 = row2, column1 ≠ column2): 
In this case, p1 and p2 are located at the same row. To solve the routing intersection, the package layer-1 
routing or PCB escape routing must be non-monotonic (see Fig. 6(a) and (e)). 
11)  Until Ii has scanned every Ij 
12) increment i 
13) Until all nets are selected 
 
We have the following lemma: 
 
Lemma 1: 
  If there exists an edge between two vertices, then the child should be placed at the parent’s row + 1.  
 
Once we have the intersection graph, the initial pin-out designation can be produced by using a simple 
algorithm based on the pin-out designation rules. The detailed processes are shown below: 
 
Initial Pin-Out Designation Algorithm: 
1) i ← 1, j ← 2 
2) select net ni in DOPS, assign rowi = 1, columni = 1 
3) Repeat: 
4) select net nj in DOPS 
5) IF an edge exists between vtj and vti, Then 
6)  assign rowj based on Rule 1 
7)  assign columnj based on Rule 2 
8) ELSE 
9)  assign rowj = rowi 
10)  assign columnj based on Rule 1 
11) i ← j 
12) increment j 
13) Until all pins in DOPS have been assigned 
 
Fig. 5 shows an example of initial assignment. By using this designation algorithm, we can obtain the 
monotonic global routing for package design and PCB escape routing. In the next section, we propose the 
pin-out optimization methods considering the ways to minimize the package size, routing congestion and 
wirelength difference on each routing layer, which are critical concerns in chip-package-board codesign. 
 
 
 
Fig. 7. Interval diagram shows intervals of nets. The start and end points of arrows represent pin locations in die and package sides. 
 
 
Fig. 8. Intersection graph shows intersection relationship among nets. It is obtained by applying Interval-Scan Algorithm on interval 
diagram. In intersection graph, if two intervals (an interval in interval diagram is a node in intersection graph) intersect with each other, 
an edge exists.  
Each pair of vi and bi are tie-up as pi to search for a global optima in the first stage, and they are loosened to 
search for local optima in the second stage. Fig. 11 shows an optimization step for n3. p3 attempts to decrease 
cost by exploring its neighbors in (a), while v3 and b3 search to decrease their own cost separately. 
 
 
Fig. 9. Optimization for wire congestion. Originally, the cong cost is 22 for the assignment on the left. Moving via3 and ball3, like the 
assignment on the right, can reduce cong cost to 20.5. 
 
C. Cost Evaluation 
 
In the unified cost optimization, the cost function is defined as follows: 
 
  
 
where Costvi/bi indicates the cost of a via vi or a ball bi, and α, β, andγ are user-defined parameters. Each 
via/ball has a cost composed of Cong, Diff, and PS. And total cost is the sum of all vias/balls. Here we define 
the cost of three objectives separately. 
 
The cost of wire congestion of two via/balls is defined as: 
 
  
 
where #wirel/r denotes the number of wires which lie on the left/right, #channell/r denotes the number of 
routing channels on the left/right, shown in Fig. 12. Note that plating leads are metal wires so they also 
contribute to Cong.  
 
Fig. 11. Post Optimization. We first tie up v3 and b3 for global search, then we loosen this constraint so that they can separately find 
other local solutions to reduce the cost. 
 
 
Fig. 12. Cost evaluation (Cong and PS) for via and ball. For Cong(via3), there is one wire (dotted red) on the left of via3; 3 wires (2 
solid red and 1 dotted red) on the right of via3, so Cong(via3) is calculated as 1/1+3/1. For PS(via6), column2 is the right-most 
column which contributes to package size, there are 4 vias on column2, so PS(via6) is (0+1/4)*2*4. 
 
 
 
 
 
 
 
TABLE I 
COMPARE [10] AND OUR POST-OPTIMIZATION SCHEME WITH OUR PROPOSED INITIAL SOLUTION. IN OUR INITIAL 
SOLUTIONS, CONG, DIFF, AND PS ARE ALL EVALUATED AS 1.00. THE INITIAL SOLUTIONS OUTPERFORM [10] 
BECAUSE MOST COSTS OF [10] ARE GREATER THAN 1.00. GREEDY METHOD CAN FURTHER IMPROVE THE INITIAL 
SOLUTIONS BY 22% IN AVERAGE. THE RESULTS OF BENCH1 FOR [10] ARE NOT AVAILABLE 
 
 
Table II shows the results of two optimization schemes Greedy and LPC. Similar behaviors are observed 
for most of the results. They improve the initial solutions by 16% in tie-up mode. This can be further optimized 
in full mode to give a final improvement of 20-22% in average. Note that the initial assignment of bench1 is 
shown previously in Fig. 5. The execution time for all experiments is less than 1 second. 
 
TABLE II 
THE RESULTS IN DIFFERENT METHODS AND MODES, COMPARED WITH THE INITIAL SOLUTIONS. TAKE BENCH1 
AS AN EXAMPLE, THE RESULTS OF GREEDY METHOD IN TIE-UP MODE IMPROVES Diff AND PS BY 53% AND 25% 
RESPECTIVELY, BUT IT WORSENS Cong BY 27%. OUR POST OPTIMIZATION SCHEMES SHOW THAT THE 
IMPROVEMENTS COMPARED WITH THE PROPOSED INITIAL SOLUTION ARE AVERAGELY GREATER THAN 20%. 
 
 
[12] R.-J. Lee and H.-M. Chen, "Efficient Package Pin-Out Planning with System Interconnects Optimization 
for Package-Board Codesign," in IEEE Transactions on Very Large Scale Integration Systems (EI/SCI), 
vol. 19, no. 5, May 2011 (TVLSI-May-11) 
[13] C.-H. Lu, H.-M. Chen, C.-N. Liu, and W.-Y. Shih, "Package Routability- and IR-Drop-Aware Finger/Pad 
Assignment in Chip-Package Co-Design," Proc. of IEEE Design, Automation and Test in Europe, pp. 
845-850, April 2009 (DATE-09) 
[14] R.-J. Lee and H.-M. Chen, "Novel I/O-Bump Design and Optimization for Chip-Package Codesign," Proc. 
of IEEE Electrical Design of Advanced Package & Systems Symposium, December 2009 (EDAPS-09) 
[15] R.-J. Lee and H.-M. Chen, "Efficient Package Pin-Out Planning with Chip-Package Interconnects 
Optimization," Proc. of IEEE Electrical Design of Advanced Package & Systems Symposium, December 
2009 (EDAPS-09) 
[16] C.-Y. Lin, Y.-W. Chen, W.-J. Chen, and H.-M. Chen, "Fast Detection and Analysis Schemes for 
System-in-Package in the Presence of RAM," IEEE Workshop on RTL and High Level Testing, December 
2010 (WRTLT-10) 
[17] K.-S. Lin, H.-W. Hsu, R.-J. Lee, and H.-M. Chen, "Area-I/O RDL Routing for Chip-Package Codesign 
Considering Regional Assignment," Proc. of IEEE Electrical Design of Advanced Package & Systems 
Symposium, December 2010 (EDAPS-10) 
[18] R.-J. Lee and H.-M. Chen, "Row-Based Area-Array I/O Design Planning in Concurrent Chip-Package 
Design Flow," Proc. of IEEE Asia and South Pacific Design Automation Conference, January 2011 
(ASP-DAC-11) 
[19] T.-Y. Tsai, R.-J. Lee, C.-Y. Chin, C.-Y. Kuan, H.-M. Chen, and Y. Kajitani, "On Routing Fixed Escaped 
Boundary Pins for High Speed Boards," Proc. of IEEE Design, Automation and Test in Europe, March 
2011 (DATE-11) 
[20] R.-J. Lee, H.-W. Hsu, and H.-M. Chen, "Implementing the Practical Chip-Package-Board Codesign 
Considering Package Design and Board Escape Routing," ACM/IEEE Design Automation Conference, 
Work in Progress, June 2011 
 
H-M Chen <hmchen10@gmail.com>
1 封郵件
aspdac2011-tpc@mls.aspdac.com <aspdac2011-tpc@mls.aspdac.com> 2010年9月24日上午9:43
收件者: rjlee@vda.ee.nctu.edu.tw, hmchen@mail.nctu.edu.tw
Dear Hung-Ming Chen,
Congratulations!
It is our great pleasure to inform you that the paper below has been
accepted for regular presentation (30 minutes including Q&A) at
"The 16th Asia and South Pacific Design Automation Conference" (ASP-DAC 2011).
Paper ID:   1219
Title:      Row-Based Area-Array I/O Design Planning in Concurrent Chip-Package Design Flow
Author(s):  Ren-Jie Lee, Hung-Ming Chen (National Chiao Tung University, Taiwan)
ASP-DAC strives to maintain a high-quality technical program, and your paper
was one of only 104 regular papers accepted out of 300 papers submitted.
The reviewers and Program Committee chose your paper because it will
substantially add to the content and quality of the conference.
(1)
This acceptance is subject to submitting a camera-ready manuscript
by due date and making a presentation at ASP-DAC 2011.
Please follow the instructions in the guidelines on the web site below carefully
before preparing the final manuscript, and prepare all required materials by
each deadline.
   http://www.aspdac.com/aspdac2011/author/
Important points are:
 a. Due date of manuscript and copyright transfer is 5 pm JST, Nov. 15th, 2010.
 b. At least one author is requested to register the full conference before
   final manuscript submission.
 c. Page limit is 6. This limit can be extended by two more pages
    with page charge of 15,000 Japanese Yen per page.
 d. If necessary, please improve your paper by considering attached reviewers'
   comments when you finalize your paper.
Paper ID and password to submit your final manuscript are as follows.
          Paper ID:    1219
          Password:    bUbW8yB!t&
(2)
If you need VISA to come to Japan for presenting your paper,
please contact Conference Secretariat (aspdac2011@aspdac.com).
(3)
The title and authors of your final paper in PDF format *must* be
the same as those of your initial submission, which are shown
above. ASP-DAC 2011 does not allow any modifications of paper title
or addition/deletion of author names. Please check carefully the
title and authors of your final paper.
If you want to update authors' affiliations, please login at
Gmail - ASP-DAC 2011: Notification of Paper ID 1219 https://mail.google.com/mail/?ui=2&ik=9dc75c1a47&view=pt&q=asp...
1／3 2011/10/31 上午 11:48
I like the concept as well as the I/O bump design. However, the experiment design is very confusing. In short,
there is no way to tell the benefit of the concurrent design flow. The experiment has to be re-designed and
re-done.
Reviewer#4
[Overall score]
3. average
[Comment]
This paper proposes a concurrent design flow for area-I/O design.
To achieve the concurrency,
the authors construct the I/O-bump and P/G-bump tile designs and
the package-aware I/O-bump planning.
For the I/O-bump and P/G-bump tile designs,
the authors propose several bump designs.
The bumps have same dimensions and their placement is row-based.
On the other hand,
for the package-aware I/O-bump planning,
several algorithms are proposed.
From the several experimental results,
the authors confirm the efficiency of the proposed methods.
The problem is very interesting to the reviewer
However, the reviewer could not understand the necessity of the proposed designs and methods
for the concurrent design.
There is no description the way to utilize the proposed designs and methods.
For the experiments,
the authors tried that the initial I/O-bump tiles are either randomly placement or uniformly assigned.
But, the reviewer could not imagine the reason why the initial I/O-bumps tiles are placed such ways.
The reviewer considers that more sophisticated method leads better solution.
Reviewer#5
[Overall score]
3. average
[Comment]
The paper proposes a chip-package concurrent design flow by using I/O-bump tile and I/O-row based scheme. It
is a well-written paper although more analysis on the proposed algorithm seems necessary. Some comments are
listed below:
- In Table I, what is the meaning of 泥ie size variation�? What is the reference for the variation?
- In Fig. 3, the meaning of the arrows should be specified. A three-dimension diagram (as Fig. 6) may be helpful
here.
- In the greedy approach, choosing the shortest flyline without considering net crossing seems too simple. Some
advanced strategies may be developed on this aspect.
- In the experiment part, only one circuit is targeted as a case study. Moreover, no comparison is conducted
between this work and some previous research.
- From Table III and IV, it seems the choice of alpha and beta is so important for the performance. The authors
may give some hints to the readers on how to select suitable parameters for specific goals.
Gmail - ASP-DAC 2011: Notification of Paper ID 1219 https://mail.google.com/mail/?ui=2&ik=9dc75c1a47&view=pt&q=asp...
3／3 2011/10/31 上午 11:48
Fig. 1. The conventional design flow. It iteratively optimizes the locations
of core cells and I/Os, then performs the bump planning, RDL routing and
finishes the bump placement for package routing. This sequential design flow
takes long turn around time to meet all design requirements.
For chip-package codesign, their router completes both chip-
level routing from block ports to I/O pads and package-level
RDL routing from I/O pads to bump pads, thus improving the
design convergence.
All the aforementioned researches achieve some notable
results. However, the chip-package design has become increas-
ingly challenging, more considerations must be accounted for:
• These approaches assume that bumps are arranged in
fixed array locations with unique spacing, they then
design the area-array ICs by planning the I/O placement
with cost functions and constraints or connecting bumps
and I/Os with RDL routing. It is inevitable that area-
array I/O planning and RDL routing need a lot of
efforts to coordinate with the core cell placement and
routing. Moreover, the presumed uniform and fixed bump
location restricts the flexibility in optimizing both chip
and package designs.
• Most of previous works focus on designing area-array ICs
and do not emphasize on the package ballplan which is
given and optimized for PCB design. Without considering
package ballplan, the I/Os and bumps will possibly lead
to complicated package substrate routing, even failed
package design [10] [11].
• The conventional design flow, which is IC-centric [12],
has an implicit issue in design turn-around. As shown
in Fig. 1, chip designer usually assigns the initial I/O
placement according to the results of core cell floor-
planning. Next, the core cell placement and routing are
Fig. 2. The proposed concurrent chip-package design flow. Through package-
aware I/O-bump planning, it completes the core cell and I/O placement and
package routing simultaneously, thus reducing the design cycles between chip
and package.
iteratively optimized until the final results meet the design
requirement such as minimum total wirelength. After that,
this bottom-up design flow processes the bump planning
and RDL routing, then proceeds to the package-level
design including package ball assignment and routing.
The major disadvantage of this sequential design flow is
evident: it will probably result in long and costly re-spin
cycles on satisfying entire system’s design constraints.
B. Our Contributions
In order to account for those issues, here we propose
a realizable area-I/O design methodology. The contributions
presented in this paper are as follows:
• In this study, we propose a concurrent design flow as
shown in Fig. 2. Comparing with the sequential design
flow (Fig. 1), the concurrent one completes chip-level
core cell placement and routing and package-level bump-
ball routing in parallel, thus expectedly reducing the turn
around time when designing chip and package.
• To achieve concurrent design flow, one of the major
contributions is I/O-bump and P/G-bump tile designs.
Through designing the specific I/O-bump tiles (shown
in Fig. 3), complicated RDL routing efforts can be
avoided. Under such circumstance, not only is the signal
skew caused by RDL routing eliminated, but also the
RDL can be released for I/O power delivery. Therefore,
with the I/O-row based scheme (Fig. 4), I/O-bump tiles
can be freely placed at core area without keeping the
same spacing. As a result, we significantly improve the
flexibility in arranging I/Os and bumps for chip-level and
package-level design.
• Another contribution is the package-aware I/O-bump
planning in our concurrent design flow, which considers
package ball locations and the essential concerns of
Fig. 5. The I/O-bump tiles placement regions. The whole package will be
partitioned into four sectors and the initial placement of corresponding I/O-
bump tiles will be given within each sector.
SORT . This method sorts the I/O-bump tiles and produces
their proper order in accordance with the order of balls, thus
resulting in zero net crossing by monotonic package routing1.
The detailed steps are as follows (Orderball and Orderbump
are the assigned serial number for balls and bumps):
Sort package balls:
1) Orderball ← 0
2) Repeat:
3) sorting ball rows (top⇒bottom)
4) Repeat:
5) sorting balls (outer⇒inner)
6) ordering the ball: Orderball←Orderball + 1
7) Until all balls are sorted within a ball row
8) Until all ball rows are sorted within a package sector
Sort I/O-bump tiles:
1) Orderbump ← 0
2) Repeat:
3) sorting I/O-bump tiles (top⇒bottom, inner⇒outer)
4) ordering the bump: Orderbump←Orderbump + 1
5) Until all I/O-bump tiles are given an order within a
package sector
Balls and bumps which have the same numbers will be paired
for connection. Fig. 6 shows an example, the sorted order of
package balls and I/O-bump tiles will lead to non-crossing
package routing while applying the monotonic routing.
B. Shortening Flylines Between I/O-Bumps and Package Balls
Previous sorted method intuitively succeeds in producing a
zero-crossing package routing. However, regarding the pack-
age routing task, the net length is another critical factor
affecting its performance. Since the longer wirelength induces
the larger parasitic effects, nets from bumps to balls should
be routed as short as possible. Besides, to achieve impedance
matching, each net should be kept in the similar wirelength.
1The monotonic package routing is a routing method which routes nets
from die bumps to package vias on package top layer without U-turn path.
It consumes less routing resource and results in higher routing completion
compared with nonmonotonic routing method [6].
Fig. 6. Double sorting for planar planning. It sorts the I/O-bump tiles and
produces the proper order by referring to the order of balls, thus resulting in
zero net crossing when using the monotonic package routing. Such routing
method routes nets from die bumps to package vias on package top layer
without U-turn path.
For these two objectives, we apply a greedy way to shorten the
total wirelength and the length deviation called GREEDY .
The main idea of this method is to choose the shortest flyline
between bumps and balls greedily. This method also consists
of two stages: sorting balls and greedily find shorter flylines.
The first stage of process is same as that in the previous
method (ball sorting), and the detailed steps in the second
stage are listed below:
Choose the shortest flyline greedily:
1) Orderbump ← 0
2) given the ball order in SORT , starting from the first
ball
3) Repeat:
4) connecting the ball with all unchosen I/O-bump tiles
5) choosing one I/O-bump tile which can result in the
shortest flyline
6) ordering the chosen bump: Orderbump = Orderball,
move to the next ball
7) Until all balls are connected within a package sector
The flyline length is the Euclidean distance between the pack-
age ball and assigned bump, and the length deviation is the
difference between flyline length and the average length ob-
tained from SORT method. Fig. 7 shows the results achieved
by the GREEDY method. It shows that each ball is greedily
paired with the closest I/O-bump tile at the moment. As a
result, the GREEDY method reduces both total wirelength
and length deviation. Comparing with SORT method which
has zero-crossing routing, the GREEDY method arranges the
fairly different bump order. Therefore, it will inevitably cause
the net crossing in package routing and increase the package
design cost.
TABLE III
THE RESULTS ON TEST CASE d5 WHEN THE INITIAL I/O-BUMP TILES ARE
RANDOMLY PLACED IN EACH SECTOR.
Flyline criteria Total
Net Wirelength Length deviation runtime
crossing Total (um) Increase Total (um) Increase (sec)
]1a 0 5473480 1.010x 1432024 1.989x < 2.0
]2a 1056 5416680 − 720120 − < 2.0
]3a 0 5473480 1.010x 1432024 1.989x < 5.5
]4a 32 5461600 1.008x 1209704 1.680x < 5.5
]5a 140 5447080 1.006x 996644 1.384x < 5.5
]6a 376 5437040 1.004x 920888 1.279x < 5.5
(”−” stands for the baseline)
TABLE IV
THE RESULTS ON TEST CASE d5 WHEN THE INITIAL I/O-BUMP TILES ARE
UNIFORMLY ASSIGNED WITH FIXED BUMP SPACING.
Flyline criteria Total
Net Wirelength Length deviation runtime
crossing Total (um) Increase Total (um) Increase (sec)
]1b 0 5813320 1.007x 1645728 1.167x < 2.0
]2b 1432 5775240 − 1410436 − < 2.0
]3b 0 5813320 1.007x 1645728 1.167x < 5.5
]4b 24 5802480 1.005x 1505192 1.067x < 5.5
]5b 32 5794920 1.003x 1480016 1.049x < 5.5
]6b 148 5786320 1.002x 1374196 0.974x < 5.5
(”−” stands for the baseline)
The experimental results shown in Table III and Ta-
ble IV both are fairly reassuring and encouraging. The
SORT (]1a/]1b) heuristic works toward obtaining the zero
net-crossing in monotonic package routing through order-
ing I/O-bump tiles. Comparing with the other methods, the
GREEDY (]2a/]2b) heuristic succeeds in shortening the
total wirelength and length deviation for flylines. Furthermore,
the assignment algorithms WBIPT (]3a/]3b to ]6a/]6b)
balance the net crossing and length deviation. Comparing
the results in Table III and Table IV, the randomly assigned
initial I/O-bump tiles will produce the shorter wirelength and
length deviation among all planning methods due to higher
flexibility, and the uniformly arranged ones will cause smaller
net crossing number thus reducing package routing layers.
Fig. 8 is made by normalizing those performance metrics
with their average value. The results show that we can specify
the appropriate user-defined parameters (α and β) to determine
the priority of net crossing and length deviation according to
the design requirements, and to obtain a fairly good point to
continue with the detailed planning/routing. In other words,
the results can be utilized as preliminary feasibility studies
for all possible chip-package configurations.
V. CONCLUSION
In order to avoid much longer turn-around time with pack-
age and system houses, we study the realization of area-
array I/O design methodology, emphasizing on package design
awareness. With our setup in the design of I/O-bump tile and
I/O-row based scheme, we further develop a chip-package
concurrent design flow. Due to the early phase of I/O-bump
planning study, faster convergence can be expected from some
encouraging results.
Fig. 8. Results of normalized performance metrics. The assignment algo-
rithms (]3a to ]6a) can perform the tradeoffs between net crossing and length
deviation by specifying the suitable user-defined parameters (α and β).
REFERENCES
[1] J. Wang, K. K. Muchherla and J. G. Kumar, “A Clustering Based
Area I/O Planning for Flip-Chip Technology,” In Proc. International
Symposium on Quality Electronic Design, pp. 196-201, 2004.
[2] C.-Y. Chang and H.-M. Chen, “Design Migration From Peripheral
ASIC Design to Area-I/O Flip-Chip Design by Chip I/O Planning and
Legalization,” In IEEE Trans. on Very Large Scale Integration Systems,
vol. 16, no. 1, pp. 108-112, Jan. 2008.
[3] C. Tan, D. Bouldin and P. Dehkordi, “Design Implementation of
Intrinsic Area Array ICs,” In Proc. Seventeenth Conference on Advanced
Research in VLSI, pp. 82-93, 1997.
[4] V. Maheshwari, J. Darnauer, J. Ramirez and W. W.-M. Dai, “Design
of FPGAs with Area I/O for Field Programmable MCM,” In Proc.
ACM International Symposium on Field-programmable gate arrays, pp.
17-23, 1995.
[5] J.-W. Fang, I.-J. Lin, Y.-W. Chang and J.-H. Wang, “A Network-Flow
Based RDL Routing Algorithms for Flip-Chip Design,” In IEEE Trans.
on Computer-Aided Design of Integrated Circuits and Systems, vol. 26,
no. 8, pp. 1417-1429, Aug. 2007.
[6] J.-W. Fang, C.-H. Hsu and Y.-W. Chang, “An Integer-Linear-
Programming-Based Routing Algorithm for Flip-Chip Designs,” In
IEEE Trans. on Computer-Aided Design of Integrated Circuits and
Systems, vol. 28, no. 1, pp. 98-110, Jan. 2009.
[7] H.-M. Chen, I-M. Liu and D.-F. Wong, “I/O Clustering in Design Cost
and Performance Optimization for Flip-Chip Design,” In IEEE Trans.
on Computer-Aided Design of Integrated Circuits and Systems, vol. 25,
no. 11, pp. 2552-2556, Nov. 2006.
[8] J. Xiong, Y.-C. Wong, E. Sarto and L. He, “Constraint Driven I/O
Planning and Placement for Chip-package Co-design,” In Proc. Asia
and South Pacific Design Automation Conference, pp. 207-212, 2006.
[9] J.-W. Fang and Y.-W. Chang, “Area-I/O Flip-Chip Routing for Chip-
Package Co-Design,” In Proc. IEEE/ACM International Conference on
Computer-Aided Design, pp. 518-522, 2008.
[10] K. Sheth, E. Sarto and J. McGrath, “The Importance of Adopting
a Package-Aware Chip Design Flow,” In Proc. ACM/IEEE Design
Automation Conference, pp. 853-856, 2006.
[11] R.-J. Lee and H.-M. Chen, “Fast Flip-Chip Pin-Out Designation Respin
for Package-Board Codesign,” In IEEE Trans. on Very Large Scale
Integration Systems, vol. 17, no. 8, pp. 1087-1098, Aug. 2009.
[12] A. Fontanelli, S. Arrigoni, D. Raccagni and M. Rosin, “System-on-Chip
(SoC) Requires IC and Package Co-Design and Co-Verification,” In
Proc. IEEE Custom Integrated Circuits Conference, pp. 319-322, 2002.
[13] C. Tan, D. Bouldin and P. Dehkordi, “An Intrinsic Area-Array Pad
Router for ICs,” In Proc. 10th Annual IEEE International ASIC
Conference, pp. 265-269, 1997.
[14] T. Meister, J. Lienig and G. Thomke, “Novel Pin Assignment Algorithms
for Components with Very High Pin Counts,” In Proc. Design,
Automation and Test in Europe, pp. 837-842, 2008.
97 年度專題研究計畫研究成果彙整表 
計畫主持人：陳宏明 計畫編號：97-2221-E-009-174-MY3 
計畫名稱：ㄧ個全新的晶片-封裝-印刷電路板共同設計與共同最佳化方法 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 1 1 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 5 6 100%  
博士生 4 2 100%  
博士後研究員 1 1 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 8 8 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 1 1 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
