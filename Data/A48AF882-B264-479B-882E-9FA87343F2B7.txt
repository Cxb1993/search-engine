 1
行政院國家科學委員會專題研究計畫成果報告 
反覆貪婪演算法於平行機排程之理論與應用 
Iterated greedy algorithm for parallel machine scheduling:              
theory and applications  
計 畫 編 號：NSC 98－2221－E－027－117－ 
執 行 期 限：98 年 8 月 1 日 至 99 年 7 月 31 日 
主 持 人：應 國 卿 
 
中文摘要 
反覆貪婪（Iterated Greedy; IG）演算法
是近年來發展出的一種隨機局部搜尋法，其
應用於組合最佳化問題的求解十分簡單有
效。為開拓 IG 演算法求解排程問題的潛
能，本研究首先針對具順序相依整備時間的
動態平行機排程問題，提出一個新型的 IG
演算法，並以標準測試題庫驗證與比較 IG
演算法與其他現存演算法的求解績效。接
著，本研究進一步利用 IG 演算法求解一個
晶圓針測排程的實務問題，以期透過排程理
論研究與實務應用之結合，能對 IG 演算法
的理論研究有進一步的拓展外，並能提供晶
圓針測相關業者在生產排程實務上一個簡
單而有效的解決方案。 
關鍵詞：平行機排程、晶圓針測排程問題、反
覆貪婪演算法 
英文摘要 
The iterated greedy  (IG) algo rithm is a 
simple and ef fective stochas tic local search  
approach recently developed fo r dif ferent 
combinatorial optim ization p roblems. T o 
explore the potential of IG algorithm for solving 
scheduling problem s, th is study presented a 
novel IG algorithm  for the dynam ic parallel 
machine scheduling problem  with 
sequence-dependent setup times. To validate and 
verify the proposed IG algorithm, computational 
experiments were conducted on a benchm ark 
problem set and the experim ent results were 
compared to the state-of-the-art m eta-heuristics 
on the sam e benc hmark instances. T o 
demonstrate the app licability of IG algor ithm, a 
real-world scheduling problem  taken from  a  
wafer probing factory were tested. It is b elieved 
that the es tablished IG algorithm  will hopefully 
encourage practitioners to apply it to real-world 
parallel machine scheduling problems.  
Keywords: Parallel m achine scheduling, W afer 
probing scheduling problem , 
Iterated greedy algorithm 
一、前言 
排程是生產規劃的重要工作之一，其主要
內容係決定各項作業的加工順序及加工機
台，以使各類資源做最佳的配置，進而逹成特
定衡量準則最佳化之目的。然而，絕大多數的
排程問題均屬 NP-hard 問題，由於問題的複雜
度限制了最佳解法（Exact Method）應用於此
類問題的求解，因此，近年來學者廣泛使用各
Pfund et al. [11] 以及 Allahverdi et al. [12] 等
學者的研究文獻。PMSP 無論是以最大完工時
間（Makespan）、總流程時間（Total Flow Time）
或是總延遲時間 (T otal T ardiness)最小化為目
標函數的等效 PMSP，皆屬於 NP-complete 的
問題[13]。對於此類 NP-complete 的問題，實
務上常利用派工法則 [14-16]進行工作之排
序，派工法則雖然簡單易解，但求解品質較差
且不穩定，因此，當要求較佳且更穩定的求解
品質時，就必須使用更複雜而精巧的方法來求
解。 
1. 產品可依據其類型分為數個不同的工作
群組，每一個群組包含一個以上相同產
品類型之待測試晶圓批（以下簡稱為
job）。 
2. 測試機台為等效（Identical）平行機，jobs
之加工時間係由其產品類型決定，每一
個 job 必須經過其中任一測試機台進行
晶圓針測處理，且相同產品在任一測試
機台之加工時間均相同。 
3. 在同一測試機台上，若連續加工的兩個
jobs 屬於不同群組，由於不同群組之
jobs 的測試溫度可能不同，必須待升溫
或降溫後，方能繼續針測，因此其所需
的整備時間具有順序相依性。 
共通式啟發演算法(Metaheuristic) [17, 18] 
和分枝定界法（Branch and Bound; B&B）[19, 
20]是應用於求解 PMSP 最多的兩類方法。分
枝定界法雖然可求得全域最佳解，但所需的計
算時間與記憶體空間遠大於派工法則與共通
式啟發演算法，當應用在複雜的 PMSP 問題
時，通常無法求得最佳解，因此，導致學者們
的研究大量投入在發展以隨機性為基礎的共
通式啟發演算法上[21, 22]。 
4. 測試機台具有最大可用產能限制，且每
一 job 均必須於其約定的到期日前完成
測試及交貨。 
目前 WPSP 在實務上所採行的方法係
以派工法則為主，例如：Peam 等學者[25]
修改 Clark 和 Wright [26] 的節約演算法
(Saving Algorithm ）提出 Weighted Saving 
Algorithm (WSA) ，以進行實際案例研究。
此類方法雖然在使用上十分簡單，但實際應
用於生產上卻往往無法獲得近似最佳解之
排程。另一方面，在 WPSP 的相關研究上，
僅有少數的最佳化演算法[27]及啟發式演
算法[28]被提出。最佳化演算法需要花費大
量的計算時間，因此，較適用於計算小型的
問題，在實務上並不符合晶圓針測廠的需
求。啟發式演算法的優點則在於可以在較短
的時間內，產生一個令人滿意的近似最佳
解。因此，在 WPSP 之實務應用上應較能
滿足業者的需求。然而，受限於技術障礙，
此類方法在 WPSP 之應用文獻卻十分稀少。 
工件的動態抵達及順序相依整備時間是
排程實務上常見的條件，例如，在半導體製造
的晶圓封裝、測試、打線及針測等製程中均必
須考量此類因素。Ovacik 與 Uzaoy [23]兩位學
者最早探討具有工件動態抵達及順序相依整
備時間限制條件的平行機排程問題，並提出數
個 Rolling Horizon Procedure（RHP）演算法用
以求解此問題。最近，學者 Kim 與 Shin [24 ]
提出了一個 Restricted Tabu Search（RTS）演
算法求解相同的問題，實驗結果證實 RTS 演
算法的求解績效較 RHP、SA 及 TS 等演算法
為佳。然而，RTS 演算法的主要缺點在於其需
要繁複的參數調整及客製化。 
WPSP 係屬等效 PMSP 的一種變化型式，
其在排程時必須考慮工件群組、工件群組處理
時間、交期、機台產能限制及工件群組之順序
相依整備時間。一般而言，WPSP 在實務上具
有下列特性： 
四、研究方法 
本研究所探討之問題，不論是具順序相依
整備時間的動態 PMSP 或 WPSP，均具有
NP-complete 問題的特性，對於此類組合最佳
 3
airline crew scheduling, Lecture Notes in 
Computer Science, 1803, pp. 367-381. 
[3] McNaughton, R. (1959), Scheduling with 
[4] in, C. C. S. (1990), 
[5] wler, E.L., Lenstra, J. K. 
[6] ., Lenstra, J. K. and Rinnooy 
[7] . 
[8] Lenstra, J. K. and Rinnooy Kan, A. H.  G. 
[9] 
deadlines and loss functions, Management 
Science, 6, pp. 1-12. 
Cheng, T. C. E. an d S
A state-of-the-art review  of 
parallel-machine sch eduling res earch, 
European Journal of Operational Research, 
47, pp. 271-292. 
Graham, R. L., La
and Rinnooy Kan, A. H. G. ( 1979), 
Optimization and approxim ation in 
deterministic sequencing and scheduling: 
A survey. Annals of Discrete Mathematics, 
5, 287-326. 
Lawler, E.L
Kan, A. H. G.  (1982), Recent 
developments in determ inistic sequencing 
and scheduling: A survey. in: Dem pster, 
M.A.H., Le nstra, J.K. and Rirm ooy Kan, 
A.H.G. ( eds.), Determ inistic and  
Stochastic Scheduling, D. Reidel 
Publishing Company, Dordrecht, 35-74. 
Lenstra, J. K. and Rinnooy Kan, A. H.  G
(1984), An introduction to m ultiprocessor 
scheduling. Consiglio  Nazionale della 
Ricerche 5, Roma. 
(1984), Scheduling theory since 1981: An 
annotated bibliography. in: O’Eigertaigh, 
M., Lenstra, J.K. an d Rinnooy Karl, 
A.H.G. (eds.), Combinatorial 
Optimization: Annotated Bibliographies, 
Wiley, Chichester. 
Cheng, T. C. E. an d Sin, C. C. S. (1990), 
A state-of-the-art review  of 
parallel-machine sch eduling res earch. 
European Journal of Operational Research, 
47, 271-292. 
[10] Allahverdi, A., Gupta J. N. D. and  
Aldowaisan, T. (1999), A review of 
scheduling research involving setup 
considerations. OMEGA, 27, 219-239. 
[11] Pfund, M., Fowler, J. W. and Gupta J. N. 
D. (2004), A Survey of algorithm s for  
single and  m ulti-objective unr elated 
parallel-machine determ inistic 
scheduling problem s. Journal of the 
Chinese Institute of Industrial Engineers, 
21, 230-241. 
[12] Allahverdi, A., Ng , C.T., Chen g, T.C.E.  
and Kovalyov, M.Y. (2008), A survey 
of scheduling problems with setup times 
or costs. European Journal of 
Operational Research, 187, 985-1032. 
[13] Ull man, J. D. (1975), NP-com plete 
scheduling problem , Journal of 
Computing System  Science, 10, pp. 
384-393. 
[14] Eo m, D. H.,  Shin, H. J.,  Kwun, I. H. , 
Shim, J. K. and Kim , S. S. (2002), 
Scheduling jobs on parallel m achine 
with sequence-dependent fa mily set-up 
times, The Interna tional Jou rnal of  
Advanced Manufacturing Technology,  
19, pp.926-932. 
[15] Dustall, S. and W irth, A . (2005), 
Heuristic m ethods for the identical 
parallel machine flowtime problem with 
set-up tim es, Com puters & Operations 
Research, 32, pp. 2479-2491. 
[16] Chiang, T. C.,  Shen, Y. S.  and Fu, L.  C. 
(2008), A new paradigm  for rule-based 
scheduling in the wafer probe centre, 
International Journal of Production 
Research, 46, pp. 4111-4133. 
 5
Table 1   Mean value computations of the MATCS with FIP, RDH, SA_HEU, PCSCTF with LS and IG approach. 
RDH S A_HEU IG   *Initial solution 
by MATCS with 
FIP 
Solution CP U 
Time 
Solution CP U
time
Initial solution 
by PCSCTF 
with LS  
Solution CPU
Time
Solution of MATCS 
with FIP improved by 
PCSCTF with LS (%)
Solution of 
RDH improved 
by IG (%) 
Solution of 
SA_HEU improved 
by IG (%) 
N 30 2,935.7 1 ,483.0 203.32 1,412.5 6.35 1,7 99.0 1397.0 1. 18 38.72   6.16 1.11 
 50 7,593.8 3 ,177.0 176.68 2,986.7 13.95 3 ,984.2 2956.5 7. 27 47.53   7 .46 1.02 
 70 14,223.3 6 ,498.1 153.89 6,101.6 27.68 7 ,710.5 6066.9 25 .59 45.79   7.11 0.57 
 90 25,094.0 10,776.4 152.55 10,160.8 47.36 12 ,591.4 9948.6 67 .60 49.82   8.32 2.13 
M 4 19,102.3 8 ,335.8 170.46 7,941.5 39.32 9 ,655.7 7769.2 25 .89 49.45   7.29 2.22 
 6 11,019.8 5 ,127.2 172.02 4795.6 20.99 6 ,060.3 4762.3 26 .10 45.01   7.66 0.70 
 8 7,303.8 2 ,987.9 169.65 2,759.1 14.03 3 ,841.7 2745.2 24 .24 47.40   8.84 0.51 
F / 7 1N     12,136.4 5 ,486.9 168.87 5166.5 24.15 6 ,477.2 5094.6 25 .33 46.63   7.70 1.41 
 / 8 1N     12,789.3 5 ,480.4 172.51 5164.3 24.98 6 ,557.5 5089.9 25 .49 48.73   7.67 1.46 
  0.4       2,755.5 3.6 22.94 1.4 1.13 29.6 1.4 0.07 98.93 15 7.14 0.00 
 0.8 23,013.6 10,963.6 300.00 10,329.4 44.73 13,059.7 10183.1 50.75 43.25   7.66 1.44 
R 0.4 14,554.5 9 ,440.0 161.24 9,047.7 28.37 10,656.0 8929.8 22.21 26.79   5.71 1.32 
 1.0 10,485.5 1, 527.3 181.01 1,283.1 20.56 2,396.0 1254.7 28.61 77.15  21.73 2.26 
P 0.2 11,593.7 5, 230.5 165.77 4,967.1 24.29 6,339.8 4925.2 24.80 45.32   6.20 0.85 
 0.3 13,367.4 5, 736.7 175.82 5,363.7 24.84 6,695.0 5259.2 26.02 49.92   9.08 1.99 
Total Ave. 12,467.1 5, 483.6 170.71 5,165.4 24.57 6,517.4 5097.9 25.41 50.70  17.71 1.27 
*The problems which did not obtain any solution were taken out when computing the average solution for the modified ATCS. 
 
Table 2   Computational results of the proposed STIG  heuristic and the three 
best available meta-heuristic algorithms 
Problem set Algorithm # of best Sol. APRD (%) 
Total # of 
machines 
Ave. CPU 
time* 
STIG  120 0    360 0.031 JS10 
ACO  51   4. 7511   361    0 .151  
GA 120 0    360 0.128  
TS 119 0    361 0.136 
JS50 STIG  116  0 .0267  15 53 1.984 
 ACO   4 12.9246  15 14    5. 674 
GA   9  3 .9132  16 46 5.887  
TS   1  7. 9811  16 18 10.570 
JS100 IGST 120 0  3 014 26.820 
 ACO   0 16.0288  29 46   56.318 
GA   0  4 .7292  32 09 44.193  
TS   0 11.2469  31 79 74.377 
JS200 STIG  115  0 .0617  58 85  3 70.946 
 ACO   5 14.5332  58 47  8 03.553 
GA   0 15.1823  66 44 522.678  
TS   0 11.7065  62 45 530.279 
STIG  471  0.0221 10812 99.945 All problems 
ACO  60 12.0594 10668 216.423 
GA 129  5 .9561 11859 143.221  
TS 120  7.7336 11403 153.840 
*CPU time in seconds 
  
 7
98年度專題研究計畫研究成果彙整表 
計畫主持人：應國卿 計畫編號：98-2221-E-027-117- 
計畫名稱：反覆貪婪演算法於平行機排程之理論與應用 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 6 6 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
