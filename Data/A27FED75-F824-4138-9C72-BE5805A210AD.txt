2同方向 [7,8] 。一為絕對性差別服務 (absolute
differentiated service) ，藉由半靜態資源保留
(semi-static resource reservation)協定代替動態資源
保留(dynamic resource reservation)協定與允諾控制
等機制，達到與整合性服務網路相同的目的。二
為相對性差別服務(relative differentiated service)，
將網路中的封包流分成數個服務類別(Class)，並給
予各服物類別相對優先權。以佇列延遲時間為
例，Class i 中的封包流所獲得的服務品質將較好於
在 Class i+1 中的封包流所獲得的服務品質。比例
式差別模型 (Proportional Differentiation Model,
PDM)[7,8]能提供類別與類別之間的服務效率呈現
一個比例關係的差距，使得類別間服務效率的差
異可以被預期，甚至可以透過控制參數的值而達
到調整服務效率的差異。
在比例式差別模型服務架構中，各類別所獲
得的絕對服務品質與網路負載有密切的關連，藉
由動態調整封包流所歸屬的服務類別，以期待使
用者能以較經濟的花費來得到其所想要的服務品
質為本計畫的目地。以平均延遲時間做為各封包
流所要求的服務品質參數為例，藉由週期性的統
計各封包流的平均到達速率與系統佇列的平均長
度等資訊，根據 Conservation law[19,20]便可估計
各類別所能提供的佇列延遲時間，做為封包流是
否調整的依據。Dovrolis 演算法[21]與 SBDA 演算
法 [22]都是使用這個概念來達成動態類別的選
擇。然而Conservation law是以系統穩定狀態 steady
state)為基礎所推導的理論，使用流量測量的方
式，需要避免系統暫態(transient state)所造成的估
測誤差，Dovrolis 演算法與 SBDA 演算法對此問題
皆未多加探討；另外，Dovrolis 演算法與 SBDA 演
算法在決定每一個封包流所屬之類別是以暴力法
則(brute force)概念一次只對一個封包流進行判斷
與調整，如此造成演算法會有較高的時間複雜
度。量週期的大小以及參數平均值(在此指封包流
的平均到達速率與系統佇列的平均長度)計算方式
的不同將可能嚴重影響類別選擇的結果
因此，本計畫將以指數加權移動平均
(exponential weighted moving average)的概念來計
算封包流的平均到達速率與系統佇列的平均長
度，以避免系統暫態所造成的估測誤差。並以模
擬的方式來探討對調整權重值的大小與測量週期
的長度，以期更精準地估計各類別未來所提供的
服務品質，以作為封包流調整類別的基準。同時
為了降低動態類別選擇演算法的時間複雜度，在
決定每一個封包流所屬之類別，不同於暴力法則
一次只調整一個封包流且一次只提升一個類別的
方式，我們將對所有無法滿足其服務品質要求的
封包流調整到目前估算值能提供其所需服務品質
的最低類別，然而重新計算所有類別的平均到達
流量與能提供的服務品質估算值，再對未滿足的
封包流做調整，直到所有封包流都滿足或或已經
到達最高類別為止。由於使用類別跳躍的調整方
式與同時調整所有類別，大大降低演算法的時間
複雜度，我們也經由模擬實驗來驗證我們提出的
演算法大大改善了 Dovrolis 演算法與 SBDA 演算
法的效能。
二、比例式差別模型服務
比例式差別模型(Proportional Differentiation
Model, PDM)[7,8]具有下列兩個重要的特性：可調
整性(controllable)：網路的管理者必須可以根據類
別間的價格或其他判斷規則，調整類別的服務品
質差異間距 (quality spacing) ；以及可預測性
(predictable)：即使在短測量時間觀察下，類別間
服務效率的差異間距必須不受類別負載的變異性
所影響。換言之，類別間服務效率的差異間距必
須為固定。
以類別的佇列延遲為服務效率考量，假定
),( ttdi 表示在 ),( tt 時間間隔內所測量到
Class i 中封包的平均佇列延遲時間，對於任意兩個
Class i 與 Class j，其所測量到的封包的平均佇列
延遲時間 ),( ttdi 與 ),( ttd j 應該存在以下的
關係：
(1)
其中 i 為系統給予 Class i 的
延遲差別參數。
Dovrolis[7]發現依時間相依優先權概念所衍
生的 Waiting Time Priority(WTP)演算法[15-18]符
合比例式延遲差別模組概念。WTP 是一個依等待
時間長短而定其優先權概念的演算法，其封包的
優先權隨著在佇列中等待的時間增長而增大。
WTP 演算法描述如下:
1. 當每個封包到達排程器(scheduler)時，將以其
到達時間為其標籤。
2. 當 有 封 包 成 為 其 類 別 佇 列 的 排 頭
(head-of-line)時，對所有佇列中的排頭封包皆
重新依下列公式計算其優先權：
………………….(2)
其中 )(twi 為類別之排頭封包的等待時間，
is 為排程差異參數相當於延遲差別參數值
的倒數。
3. 排程器則選擇優先權最大封包成為下一個服
務的對象。
N
j
i
j
i where
ttd
ttd 



 


.....
),(
),(
21
iii stwtp  )()(
4越小時表示平均值較不受系統瞬間變化影響，相
反的，與值越大則表示平均質較著重於系統
暫態行為。另外，測量框架的大小，也將影響
測量結果。因此，我們撰寫模擬程式來分析,
與的值對於類別選擇結果的影響，以期能找出
適當的值使得類別選擇演算法能更精準地預測下
一個測量框架時各類別所獲得的佇列延遲時間。
實驗結果發現,與的值與封包流是否
具有猝然性和系統負載有關。當負載小於 0.7 時，
,與的值的影響不大。當負載大於 0.8 時，
若測量框架太小使得各封包流在測量週期間被服
務的封包個數太少。對於沒具有猝然性的封包流
與的值太大使得系統太著重瞬間變化，可能
使得系統無法準確估測下個週期中各類別的延遲
時間，導致有些封包流無法滿足其所要求。對於
具有猝然性的封包流與的值則不應太小，以
免系統未能獲得猝然訊務的資料，而造成系統無
法準確估測下個週期中各類別的延遲時間。
四、跳躍式類別調整演算法
不論是 Dovrolis 演算法或是 SBDA 演算法，
每當有任何一個封包流調整其類別時，系統就得
利用方程式 3 與方程式 4 重新計算各類別所提供
的延遲時間，由於每次只有一個封包流調整並只
調整到鄰近類別，造成系統有較大的計算成本。
因此我們將提出跳躍式動態類別調整演算法
(jumping dynamic class selection algorithm)
以較有效率的方式來調整各封包流之類別。
根據第三節所提過的動態類別調整的性質之
一：當有一個或多個封包流從較低的類別調整到
較高的類別且其餘的封包流沒有做調整時，各類
別所提供的服務將受影響而變得較差。換言之在
類別調整的過程中，毋須每調整一個封包流便重
新計算，對於所有封包流的需求，可先指定最小
且符合需求的類別，再運用方程式 3 與方程式 4
重新計算出各類別估計佇列延遲並判斷各封包流
是否滿足需求，如此將能更快速的對封包流進行
判斷。
首先所有使用者 },....,1{ Uu 的封包流依佇列
延遲要求做排序處理，在測量框架結束後，系統
根據方程式 5 與方程式 6 可預估下個測量週期中
系統佇列平均長度與封包流到達的平均速率。圖
4-1 所示為跳躍式類別調整演算法：將所有封包流
的類別設為 Class 1，運用方程式 3 與方程式 4 所
計算出各類別的估計佇列延遲，並依照各封包流
的需求，指定一個最小且符合需求的類別，再運
用方程式 3 與方程式 4 重新計算出各類別估計佇
列延遲並判斷各封包流是否滿足需求，若滿足則
已求得解；若不滿足所有封包流則重新指定最小
且符合需求的類別，直到所有封包流都滿足或已
經到達最高類別為止。
我們將進一步以模擬實驗評估跳躍式類別調
整演算法與、Dovrolis 演算法及 SBDA 演算法在類
別調整方面的效能。由於 SBDA 演算法得先透過
允許控制演算法得到封包流的最大服務類別，所
以我們將各別在不同的實驗環境下與 Dovrolis 演
算法及 SBDA 演算法針對系統重新計算各類別佇
列延遲的次數做比較。當系統負載低於 0.7 時，由
於負載偏低，幾乎都可以用最低類別來提供服務
並不需做調整，故計算次數沒有差別。
圖 4-2 為跳躍式類別調整演算法與 Dovrolis
演算法在系統負載為 0.9 下，與不同的測量框架大
小（從 2000 到 100000）時，調整機制之計算次數
比較。圖中以 Dovrolis 演算法所需的計算次數為 1
做正規化，從圖可以看出跳躍式類別調整演算法
所須計算的次數比 Dovrolis 演算法減少了幾萬倍
以上，而且測量框架越小，所獲得的效益也越大。
