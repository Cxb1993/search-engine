 1
 
行政院國家科學委員會專題研究計畫成果報告 
 
印刷電路板生產規劃決策支援系統之開發─ 
子計畫三：印刷電路板之設計評估與製造分析模式 
 
計畫編號：NSC 92-2213-E-155-056, NSC 93-2213-E-155-018,  
NSC 94-2213-E-155-005 
執行期限：92 年 8 月 1 日至 95 年 7 月 31 日 
 
主持人：蔡介元 元智大學工業工程與管理學系 
計畫參與人員：邱創政、謝玉貞、陳致融、蕭清泉、林昭妏 
執行機構及單位名稱：元智大學 工業工程與管理學系 
 
一、摘要 
目前，印刷電路板(Printed circuit board; PCB)製造廠商投資在新產品開發之設計評估與製造分析的研
發能量尚未成熟，造成現行 PCB 製造廠商大多過度依賴有經驗工程師的風險，及主觀判斷造成對 PCB 設
計評估與製造分析的負面影響，因此本研究將發展一為期三年的整合性 PCB 設計評估與製造分析模式，
使得 PCB 製造廠商能提供即時、完整、快速的反應 PCB 設計廠商的要求，同時讓接單後的工程製造資
料得以迅速且正確地產生，以利後續生產使用。 
 
二、緣由與目的 
台灣印刷電路板(Printed Circuit Board, PCB)產業發展至今，已有三十多年歷史。在上中下游的緊密配
合下，整體供應鏈體系的發展甚為迅速，為僅次於半導體產業之第二大電子零組件產業。以出口導向為
生產型態的台灣 PCB 產業，由於具備品質、價格與交期等方面競爭力，加上相關產品在資訊、通訊方面
的開發及應用，以及近年來在國際間樹立之 PCB 大國形象，促使國際間一些知名電子大廠紛紛來台下
單，造成出口市場的持續熱絡；1999 年台灣 PCB 在國際 PCB 業產值約佔 9.6﹪，僅次於日本、美國而
居世界第三。PCB 的功能，在於提供各種電子零組件安裝(Assembly)及互連(Interconnection)所需的平台
基地。PCB 產業的分工相當細膩，主要可分為上游廠商的電路板設計(Design)及配置(Layout)、中游廠商
的電路板印刷(Print)及製造(Manufacture)、下游廠商的 PCB 半成品加工及裝配(Assembly)等；分工細膩的
產業特性，加上上中下游廠商散佈全球各地，使此產業儼然形成一龐大供應鏈(Supply Chain, SC)體系。 
PCB 製造廠商對於設計廠商所下的新 PCB 產品訂單之的處理過程，主要分為預先評估與實際處理兩
部分。預先評估是指製造廠商接到詢價單時，針對設計廠商之產品設計內容、製程困難度、製程類別、
品質與交期等評估有無生產能力，待確定有能力生產後連同報價一併回覆設計廠商；實際處理是指當設
計廠商確認製造廠商生產能力與其報價均符合要求並發出正式訂單後，製造廠商對訂單所作之後續生產
動作。隨著電子產品輕巧化及其功能的不斷增加，迫使 PCB 設計廠商的產品設計漸趨複雜，造成 PCB
板單位面積內的層數、佈線數、元件數與孔數不斷增加，導致製造廠商在 PCB 的印刷與製造上更為困難
與繁瑣，連帶使各製造廠商在處理設計廠商之新產品訂單時，需要進行大量的設計評估與製造分析之作
業。 
過去有關 PCB 相關的研究多半集中於檢驗方式、視覺檢測、SMT 製程評估、組裝評估、PCB 防焊、
及其可靠度等的研究，對於 PCB 新產品分析評估方面的相關資料並不多，國內在此方面的探討與文獻亦
相當的不足。過去 PCB 製造業投注在新產品分析評估方面的注重程度遠遠小於在製程方面的注重，然而
在欲發展台灣為設計研發中心的同時，如何針對設計廠商之產品設計資料作及時快速地反應(Quick 
Response, QR)，以穩固 PCB 製造廠商在產業中的利基與地位，就成為當前 PCB 產業根留台灣一個非常
重要的議題。有鑑於此，本研究將發展一為期三年的整合性 PCB 新產品之設計評估與製造分析模式的研
究計劃。 
 
y 第一年計劃：以案例式推論為基之 PCB 新產品之品質缺陷預測系統 
PCB 新產品於生產過程中容易發生品質缺陷等問題，進而降低產品生產率並增加生產成本。實務上，
 3
}
manufacturing activities and settings are applied. Therefore, the design specification is suitable as the problem 
description part for a case. The major attributes of a design specification include board thickness, inner layer line 
width, tin thickness, aspect ratio and so on. The defect items generated by each past case are adopted and 
recorded with the solution elements involved in each problem. The common defect items consist of inner layer 
short, pad broken, scratch and so on. In addition, the cost caused by a defect item reflects its severity when 
repairing a PCB product. Therefore, the defect cost for each defect item is included into the solution part for a 
past case.  
To make clear explanation, let { XacB a ",2,1| ==  be the case-base with total X cases where  is the 
ath past PCB product cases. Let  be the problem description part for  where  is 
its dth design specification attribute. Let 
ac
),,,( 21 adaaa pppP "= ac adp{ }aaa costsetitemsetS ,=  be the solution part of . ac{ }Iiiitemset ppa ∈= |  is a set of defect items generated by  where  is a defect item in the universal 
defect item set I.  = 
ac pi
acostset { }||||,,2,1| aap itsemsetpm "=  is a set of corresponding defect costs for  
where  is the defect cost for the defect item  of . Noted that ||A|| represents the number of members 
in the set A. Therefore, the case representation for  can be described as 
aitemset
apm pi ac
ac { }aaa SPc ,=  
.  { }aaa costsetitemsetP ,,=
 
3.2. Case indexing 
Past cases similar to the new case are retrieved and used to predict the defect items for a new case. A 
vantage-based case indexing mechanism is developed to quickly locate similar past cases. A vantage case is a 
representative case on behalf of a group of similar past cases. Many clustering algorithms such as K-means, 
BIRCH, CURE, DBSCAN can be used to derive the vantage cases. The procedure for constructing a 
vantage-based case indexing mechanism is shown as follows:  
1. A clustering algorithm is used to partition all past cases in the case-base B into clusters according to their 
design specifications. Suppose that K clusters are generated after executing a clustering algorithm, so that 
 where  is the tth cluster and ∪Kt tCB 1== tC φ=st CC ∩ . 
2. For each cluster , its vantage case  is defined as the case that has the minimum sum of dissimilarity 
distances between itself and other past cases in . The vantage case  in  can be represented as: 
                 (1) 
where  is the dissimilarity distance function between two cases  and  and can be 
defined as: 
tC to
tC to tC
}|),dist({ arg ta
Cc
bat CcccMinimuno
tb
∈≡ ∑
∈
),(dist ba cc ac bc
∑ −×=
dallfor
bdaddba ppwcc ])([),(dist
2 .             (2) 
 is the importance weight of the dth design specification. The less the dissimilarity distance between  
and , the more similar the  and  are.  
dw ac
bc ac bc
3. In each cluster , the dissimilarity distance between each case  and  is evaluated using Equation 
(2). All cases in  are then assigned index numbers based on the ascending order of their dissimilarities. 
Therefore, the cluster  will be reorganized as 
tC ac to
tC
tC }),dist(),dist(|,,,,,,{ 1121 titiaiit ococcccccC ≤= −− ""  
where  is equal to  since the dissimilarity distance between  and itself is zero. Meanwhile, the 
radius  of  equals to 
1c to to
tr tC }|),(dist{ tatat CcocMaximumr ∈= .  
After each case is assigned an appropriate index number, the vantage-based case indexing mechanism 
construction is completed. With the indexing mechanism conducted in advance, the case retrieval procedure can 
be accelerated. A simple example of case indexing execution for eight cases is illustrated as Fig. 2.  
 
3.3. Case retrieval 
An efficient case retrieval procedure is developed to find similar cases from the case-base for a new case Q. 
A past case  is said similar to the new case Q if and only if the dissimilarity distance between  and Q is 
less than a user-defined dissimilarity threshold r. Therefore, all past cases similar to Q can be defined as the 
members in a set . The procedure for case retrieval is introduced as follows:  
ac ac
}),(dist |{ rQcBcSim aa
r
Q ≤∈=
1. For each cluster , compute the dissimilarity  between  and Q.  tC ),dist( Qot to
2. If , all past cases in  are not similar enough to Q because  and  have no 
intersection as shown in Fig. 3. Therefore, no further similarity evaluation is required for any past case in 
 with Q.  
rrQo tt +≥    ),dist( tC rQSim tC
tC
Qitemsetc _  can be evaluated as Y
m
Sim
m
icont pr
Q
p
p == ||||)(  where  is the accumulative defect cost 
corresponding to . Similarly, the contribution of the same defect item to the case-base B can be 
evaluated as 
pm
pi
X
m
B
m
icont ppp
'
''
||||
)( ==  where  and  is the defect cost caused by the a 
past case  in B on the same defect item . 
∑
=
=
X
a
pap mm
1
'
pam
ac pi
4. Perform a pruning operation. If , we claim that the defect item  is not worth to pay 
attention on it. Therefore, a pruning operation is executed to prune off the non-interesting defect items  
from   
)()( ' pp iconticont < pi
pi
Qitemsetc _ .
5. Return a set of interesting defect items. After all defect items in  are screened using step 3 
and 4, remainders in  can be considered as the interesting defect item for the new design Q. 
That is, . Consequently, the defect items 
for the new case are inferred well through the proposed reasoning algorithm.  
Qitemsetc _
Qitemsetc _
)}()(|_{_ ' ppQpQQ iconticontitemsetciitemsetcitemset <∈−=
 
3.5. Research results 
A practical data provided by a PCB manufacturer in Taiwan is used as a demonstration to show the 
performance and efficiency of the proposed CBR system. The PCB manufacturer offers design specification and 
defect problem data for one-year operation. After performing a serious of join and union operations, a case-base 
containing 1007 different PCB products is generated. As shown in Table 1, the design specification for each 
product consists of 21 attributes such as the board thickness, inner layer line width, inner layer line space, tin 
thickness, aspect ratio and so on. In addition, there are total 17148 defect problems reported among the 1007 
PCB products. Each defect problem specifies a defect item and its corresponding cost for a PCB product. There 
are 307 different defect items in this demonstration. 
To illustrate the proposed CBR system, a PCB product is selected from the case-base as the test (new) case 
in this example. The design specification of the new case is shown in Table 2. A z-score normalization is 
adopted for the new and past cases to unify all attributes of design specification (Han & Kamber, 2001). After 
the data pre-processing, a K-means clustering algorithm is selected to divide all past cases in the case-base into 
10 clusters. Noted that users can freely select different clustering algorithms and assign different number of 
clusters in this example. The clustering result is then used to index past cases and construct the vantage-based 
case indexing mechanism for our CBR system. The indexing result is summarized in Table 3. For instance, case 
243D7412C is a vantage case for cluster one. There are 204 cases in cluster one in which its radius is 4.328. 
When the new case is input into the CBR system, the case retrieval procedure as described in Section 3.3 is 
executed. If the dissimilarity threshold r is set as two (as suggested in Section 4.2), five similar past cases will be 
retrieved. They are Case 103F4002E, 103F4003C, 103F4027A, 103F4027B, and 243D7412C. The defect items 
and corresponding defect costs for each past case are shown in Table 4. Through the reasoning algorithm 
developed in Section 3.4, the defect items for the new case are inferred and shown in Table 5. The defect items 
reasoned by the CBR system are “inner layer short” and “outer layer short.” Both are considered as interesting to 
PCB manufacturers because of their relative high cost. In general, these two defect problems are caused by 
improper operations in the coppering and etching processes. Therefore, based on the predicted information, 
real-time improvement for the processes should be arranged before fabrication to prevent the possible defect. 
 
Table 1 An illustration for the case-base 
 
 
Table 3 A vantage-based indexing table  Table 2 The design specification of the test 
PCB product case  
 5
in a case-based D, where ,  is the ath past case, and X is the total number of past cases 
in D. Thus, the design specifications of a past case  in D can be represented as  where 
 is the ith design specification of  and Y is the total number of design specifications. 
},,1|{ XacD a "== ac
ac ),,,,( 1
a
Y
a
i
a sss ""
a
is ac
Similarly, let  represent the new PCB product case to be produced. The design specifications of  
are specified by users and represented as  where  is the ith design specification of . 
Fabricating a PCB product involves many production activities in which each activity is controlled by a set of 
process parameters. Therefore, to complete the PCB production, hundreds of process parameters need to be 
specified. Let 
Qc Qc
),,,,( 1
Q
Y
Q
i
Q sss "" Qis Qc
},,1|{ ZmpP m "==  be the set of all process parameters in PCB production activities where 
 is the mth process parameter. Besides, the production quality of each PCB product, which is affected by 
these parameters, is recorded also. Therefore, the solution part of a case consists of all Z process parameters and 
corresponding production quality. Mathematically, the solution part of a past case  in D is represented as 
 where  is the mth parameter value of  and  is its production quality value.  
mp
ac
) ,,,,,( 1
aa
Z
a
m
a qppp "" amp ac aq
 
4.2. Case retrieval 
The nearest neighbor search methods have been commonly applied in the case retrieval stage of a CBR 
system. This research proposes a novel nearest neighbor search method, called Significant Nearest Neighbor 
(SNN) search. The SNN search is developed based on the concept of statistical inference that evaluates whether 
the dissimilarity between two cases is significantly low or not using a dissimilarity probability distribution 
function. Therefore, a dissimilarity distribution function that describes the dissimilarity relationships of all pairs 
of past cases should be evaluated in advance. When a new case is presented, the dissimilarity between the new 
case and each past case in the case-base is calculated. If the probability of the dissimilarity value in the 
dissimilarity probability distribution is lower than a threshold value, the past case will be retrieved.  
1. Calculate all dissimilarities for all pairs of past cases in the case-base D. Let the dissimilarity between two 
cases  and  be  ac bc
∑
=
−=
Y
i
b
i
a
iba zzcc
1
2)(),(diss                                                              (3) 
where  is the standardization vale for the ith design specification for a past case . Noted that  is 
computed as =
a
iz ac
a
iz
a
iz ii
a
is σμ )( −  where ∑
=
=
X
a
a
ii sX 1
1μ  and 2
1
)(
1
1 ∑
=
−−=
X
a
i
a
ii sX
μσ . 
2. Generate a dissimilarity probability distribution function from the set of dissimilarity values. There are 
2)1(
2
−=⎟⎟⎠
⎞
⎜⎜⎝
⎛= XXXW  dissimilarity values in total. These dissimilarity values are viewed as a set of data 
described by the probability density function with the mean ∑
∈
=
  ,
),(diss1
Dcc
ba
ba
cc
W
μ  and standard deviation 
2
 ,
]),([diss
1
1 μσ −−= ∑∈ baDcc ccW ba . 
3. Evaluate the dissimilarity value between each past case  and the new case , and decide whether the 
past case  is retrieved or not. The dissimilarity  between  and  can be evaluated 
using Equation (1). Let  be the probability that any a dissimilarity value x randomly 
selected from the distribution is less than the dissimilarity between  and . If the probability 
 is less than a user-defined threshold, we claim that the dissimilarity between  and 
 is significantly low in statistics. Therefore, the past case  is similar enough to the new case  
compared to other cases, and is retrieved by the proposed SNN search. Explicitly, the past case  is 
retrieved if 
ac Qc
ac ),diss( Qa cc ac Qc
)],diss(P[ Qa ccx <
ac Qc
)],diss(P[ Qa ccx < ac
Qc ac Qc
ac
 
α<< )],diss(P[ Qa ccx                                    (4) 
where α  is a user-defined threshold. Since μ  and σ  have been evaluated in advance in Step 2, the 
Equation (2) can be further represented as:  
 
 7
values in decreasing order. 
5. Take out the first parameter which has highest selection priority from  and place it into . rP 'rP
6. If the number of principal parameters in  reaches the specified stopping criteria, the MCPS method 
stops. Otherwise, go back to Step 2 and execute Step 2 - 6 again.  
'rP
 
After the set of principal process parameters are obtained, the value range for each principal process 
parameter needs to be determined. Let ,  and  be the maximum, minimum and average values 
of all past cases in set  for a principal process parameter . It is intuitive that  is a 
reasonable value range for . However, the range can be further refined if the correlation between the 
parameter value and the production quality is considered.  
max
ip
min
ip
avg
ip
'rP ip ],[
max
i
min
i ppR =
ip
If the principal parameter  is positively related to the production quality q (i.e. ip 1),(0 ≤< qpiρ ), the 
value range of  can be set as  where  is the lower bound of R and . 
Noted that  is set as  if 
ip ],[
max
il pRR = lR maxilavgi pRp ≤≤
lR
max
ip 1),( =qpiρ , and  is set as the  if lR avgip 0),( =qpiρ . Based on this logic, 
we have )01()0),(( −−qpiρ = )()( avgimaxiavgil pppR −− . Therefore, the value of  can be calculated by lR
 
avg
i
avg
i
max
iil pppqpR +−×= )(),(ρ                                                             (8) 
 
Similarly, if the  is negatively related to q, (i.e. ip 0),(1 <≤− qpiρ ), the value range R can be further set as 
 where  is the upper bound of R and . Based on the similar logic, the value 
of  can be calculated by  
],[ u
min
i RpR = uR avgilmini pRp ≤≤
uR
 
avg
i
min
i
avg
iiu pppqpR +−×= )(),(ρ                   (9) 
 
4.4. Research results 
A practical data provided by a PCB manufacturer in Taiwan is used to demonstrate the process of 
identifying and evaluating the principal process parameters through the proposed CBR system. The PCB 
manufacturer offers various data about 1200 PCB products they have produced in the past years. After 
performing a serious of data pre-processing operations, a case-base containing 1000 different PCB products is 
generated. In the case-base, each product case contains 21 design specifications, 120 process parameters, and 
one production quality. The typical design specifications for a PCB product include board thickness, inner layer 
line width, inner layer line space, copper thickness, aspect ratio, and so on, while its process parameters include 
etching wire-speed, drilling pulsing width, desmear wire-speed, pulse electric current density, curtain coating 
weight, and so on. In addition, glass transition temperature is regarded as the production quality in this example. 
Table 6 illustrates some PCB product cases in the case-base. After the data pre-processing, the dissimilarities 
between all pairs of past cases in the case-base are calculated using Equation (3). Based on the set of 
dissimilarity values, we derive a probability density function f(x) with the mean = 0.89 and standard deviation = 
0.23.  
 
Table 6. An illustration for some PCB products in the case-base. 
Design specifications Process parameters  Quality 
Case 
ID 
Board 
thickness 
(mil) 
Inner 
layer 
line width 
(mil) 
Copper 
thickness 
(oz) 
… 
Aspect 
ratio 
(ratio) 
Etching 
wire-speed
(M/min) 
Drilling 
pulse 
width 
(mS) 
Desmear 
wire-speed
(M/min) 
Developed
time 
(sec) 
… 
Curtain 
coating 
weight 
(gw/cm2) 
 
glass 
transition 
temperature
(oC) 
1 32 2.0 1.5 … 7.2 5.0 5.3 3.0 16 … 18  98 
2 40 4.8 1.0 … 2.2 3.8 4.0 2.8 25 … 32  107 
3 54 4.0 2.5 … 3.7 0.6 5.5 0.5 35 … 26  122 
#  #  #  #  … #  #  #  #  #  … #   #  
999 46 5.2 1.5 … 5.8 1.2 7.1 1.2 30 … 20  114 
1000 60 5.5 3.0 … 4.4 2.8 6.4 2.5 45 … 35  109 
 
To demonstrate the proposed CBR system, this example takes a PCB product selected from the case-base as 
a test case in which its design specifications are shown in Table 7. Noted that all design specifications are 
standardized so that the scales of all design specifications can be uniform. When the test case is inputted to the 
CBR system, the dissimilarity value between each past case and the test case is calculated so that the 
 9
From this process model, the design specifications impacting fabrication costs are identified, and all activities 
are grouped into several cost centers based on the impact of the identified design specifications on the activities. 
In IDEF0 model, each box represents an activity, lines represent information flow or material flow whereby 
inputs enter the left side, output exit the right side, controls enter the top, and mechanisms enter the bottom of 
each box. The process model described by IDEF0 supports hierarchical decomposition such that activities can 
be decomposed into several detailed activities. An example decomposition of inner layer processing is also 
illustrated in Fig. 7(b).  
 
case-base
Case retrievel
Case reasoning
PCB fabrication process
Activity-based costing approach
new case
design specifications (known)
fabrication parameters (unknown)
fabrication cost (unknown)
Input a new design alternative
new case
design specifications (known)
fabrication parameters (known)
fabrication cost (unknown)
the most similar past case
design specifications (known)
fabrication parameters (known)
new case
design specifications (known)
fabrication parameters (known)
fabrication cost (known)
Output the fabrication cost for the 
new design alternative
cost estimation function of cost element #1
cost estimation function of cost element #2
cost estimation function of cost element #N
IDEF model
...
 
Fig. 6. The framework of the proposed CBR system for PCB Fabrication Cost Estimation. 
 
 
(a) Overall PCB fabrication process 
 
(b) The sub-fabrication process of A1 activity in (a) 
Fig. 7. The IDEF0 model of the PCB fabrication process. 
 
To identify the design specifications that impact costs, each activity box in IDEF0 model needs to be 
analyzed by designers. As illustrated in Fig. 7(b), the Prep Inner Layers and Print activity in A11 has inputs of 
dry file resist materials and artwork tools, and generates the printed inner cores as its output. This A11 activity is 
done for each layer and for each panel. Furthermore, the quantity of input material is a function of the number of 
layers and the number of panels. Therefore, the number of layers and the number of panels are identified as the 
members of design specifications for the A11 activity. The Develop, Etch, and Strip activity in A12 is analyzed 
similarly. It is found that the design specifications identified from A11 is the same from A12. Consequently, the 
 11
 
A. production cost element 
PCB products are fabricated with a batch-based way, so that a panel on a PCB board can be considered as 
the fabrication unit. As long as the production cost of a panel is calculated, the production cost in each cost 
center can be successfully calculated by the product of the production cost of a panel and the number of panels, 
Npanel. In addition, the production rate of each cost center is determined by the used fabrication parameters, so 
that the production rate can be considered as the major fabrication parameters for calculating the production cost. 
Therefore, the calculation functions of production costs PCILP, PCAOI, PCILL, PCDR, PCOLP, and PCSO in the ILP, 
AOI, ILL, DR, OLP, SO cost centers are listed from Equation (10) to Equation (15). 
 
ILPpanelcopperinlayerILP PRNWNPC ×××= )(                    (10) 
AOIpanelinlineAOI PRNLPC ××= )(              (11) 
ILLpanelinlayerILL PRNNPC ××= )(              (12) 
DRpanel
boardholedrill
stack
setupholedmDR PRNTDAR
TTNTPC ××−××+×= )(                (13) 
OLPpanelcopperOLP PRNWPC ××= )(              (14) 
SOpanelSO PRNPC ×=                 (15) 
 
B. Material cost element 
In general, the material cost of PCB products consists of the board-based material can circuit-based material 
costs. The board-based material is spent on the PCB board, so that it can be calculated by the product of the cost 
per unit of material usage and the total material usage. In addition, the circuit-based material is spent on the 
circuit of the PCB board, so that it depends on the circuit area located on the board. The circuit area on a board, 
Acircuit, can be estimated by Equation (16): 
 
fcirlinecirlinehole
pad
circuit ELWN
D
A ××+×= )
4
(
2π
           (16) 
 
which contains four design specifications, including the diameter of a pad Dpad, the number of holes Nhole, the 
width of a circuit line Wcirline, and the length of a circuit line Lcirline. In addition, it uses one fabrication parameter: 
the etching compensation degree Ef. 
The material cost calculation function MCILP in ILP cost center is represented as Equation (17) because the 
total material usage is equal to the product of the area of PCB board and the number of inner layers. Similarly, 
both the material cost calculation functions MCILL and MCOLP in ILL and OLP cost centers are represented as 
Equations (18) and (19) respectively when the prepregs materials are used in between all pairs of inner layers in 
ILL and the cooper materials are used on the board surface in OLP.  
 
copperinlayercircuitboardILP CNAAMC ××+= )(                 (17) 
prepregsinlayercircuitboardILL CNAAMC ××+= )(            (18) 
coppercircuitboardOLP CAAMC ×+= )(                  (19) 
 
C. Nonrecurring cost element 
The drilling (DR) and electrical test (ET) cost centers both require the generation of programs. The major 
design specification used to drive the nonrecurring cost in DR is the number of holes Nhole, while the one in ET 
is the number of test points Ntestpoint. Furthermore, the corresponding fabrication parameters in these cost centers 
are their individual program initialization time Tdrpi and Tetpi, and their individual program rum time for each 
hole Tdrrin and for each test point Tetrun. Therefore, the nonrecurring cost calculation functions NCDR in DR and 
NCET in ET cost centers are represented as Equation (20) and Equation (21) respectively. 
 
drpidrrunholeDR TTNNC +×= )(                   (20) 
etpietruntestpoET TTNNC +×= )( int                  (21) 
 
D. Yield-loss cost element 
There are three inspection actions located in the overall PCB fabrication process. They are located at AOI, 
DR, and ET cost centers. Let the yield of ILP cost center be YILP, the number of scrapped panels after 
performing ILP cost center equals to . Therefore, the yield-loss cost calculation functions )1( ILPpanel YN −×
 13
new design alternative, but also understands which activities take most expenditure. For example, as shown in 
Figure 8(c), the activities in the drilling cost center are the most expensive in the overall fabrication process for 
the new alternative. If the designer is not satisfied with the current design alternative, another alternative can be 
proposed and compared with current one using the proposed system.  
 
  
(a) input the design specifications (b) check the retrieved fabrication parameters 
 
 
(c) obtain the estimated fabrication cost  
Figure 8. The web interface of the proposed CBR system. 
 
六、參考文獻 
1. Aamodt, A., & Plaza, E. (1994). Case-based reasoning: foundational issues methodological variations, and 
system approaches. Artificial Intelligence Communications, 7(1), 39-59. 
2. Agrawal, A. & Graves, R. (1999). A distributed systems model for estimation of printed circuit board 
fabrication costs. Production Planning and Control, 10(7), 650-658. 
3. Aha, D. W., Kibler, D., & Albert, M. K. (1991). Instance-based learning algorithms. Machine Learning, 6, 
37-66. 
4. Belecheanu, R., Pawar, K. S., Barson, R. J., Bredehorst, B., & Weber, F. (2003). The application of case 
based reasoning to decision support in new product development. Integrated Manufacturing Systems, 14(1), 
36-45. 
5. Bentley, J. L. (1979). Multidimensional binary search trees in database applications. IEEE Transaction on 
Software Engineering, 5(4), 333-340. 
6. Chavez, E., Navarro, G., Baeza-Yates, R. A., Marroquin, J. L. (2001). Searching in metric spaces. ACM 
Computing Surveys, 33(3), 273-321.  
7. Chiu, C., Chang, P. C., & Chiu, N. H. (2003). A case-based expert support system for due-date assignment 
in a wafer fabrication factory. Journal of Intelligent Manufacturing, 14(3), 287-296.  
8. Duda, R. O., Hart, P. E., Stork, D.G. (2000). Pattern Classification, second ed., Wiley-interscience 
Publication, New York, USA. 
9. Ester, M., Kriegel, H., Sander, J., & Xu, X. (1996). A density-based algorithm for discovering clusters in 
large spatial databases. Proceeding of the 2nd International Conference on Discovery and Data mining, 
 15
