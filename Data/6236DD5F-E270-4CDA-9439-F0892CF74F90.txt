this project, we have analyzed and re-
searched into the algorithm of coding sys-
tem for the G.723.1 code to decrease proc-
ess the speech signal in real time. So, in 
this plan, our main research target is opti-
mization G.723.1 Coding, and research 
items are (1) we modified the algorithms of 
the original G.723.1 to fundamental opera-
tions coding process to optimize coder. (2) 
We arranged the structure and algorithms of 
the traditional G.723.1 to possessed MMX 
structure that was to optimize coder. (3) We 
develop a new algorithm for efficiently 
search (MP-MLQ) excitations to improve 
codec speed. (4)The optimized G.723.1 
code processes time and speech quality 
were evaluated.   
 
Keywords: 
    MultiMedia eXtention, fixed-point, 
MP-MLQ , G.723.1, instruction cycle, 
speech quality ,fast search algorithm. 
 
二、計畫緣由與目的 
隨音訊壓縮技術的進步與網路的普
及，以及個人電腦之速度快速的提昇及價
錢的大眾化，其技術應用之相關產品將會
快速實現為大眾化之產品，如數位行動電
話，網路電話 Voice over IP 是最近熱門話
題。ITU-T 提出運用在網路電話(internet 
phone)的語音壓縮標準 (speech compres-
sion standard)G723.1 和 G729 兩種標準 ，
而 G723.1 已廣泛被應用在網路上，如微軟
(Microsoft)的視窗作業系統(Windows Op-
eration System)內建的應用軟體  "Net-
Meeting"就是使用 G.723.1 當作網路電話
的語音壓縮標準。 
ITU-T 所制訂的語音壓縮標準有
6.3、5.3 kbit/s 的 G723.1 及 8 kbit/s 的
G.729，6.4 kbit/s 的 G.729D 這些都是使用
碼激式線性預測 (CELP)編解碼方式。 
G.723.1 語音壓縮架構就週期激發源
部分是採用計算量較高較精確的五階濾波
器預估閉迴路基週。對於非週期性的激發
脈衝之編碼在 5.3kbps 位元率是經由代數
碼激式線性編碼(Algebraic Coded Excited 
LPC)簡稱 ACELP 以求出脈衝激發訊號，
在 6.3kbps 位元率則用 Multi-Pulse Maxi-
mum Likelihood Quantization (MP-MLQ) 
Excitation編碼。本計劃主要是研究G.723.1
如圖一是編碼流程架構圖，G.723.1 原始程
式碼中所有的資料都是以 Word16 的格式
存放，即 16 位元的整數，在程式中就是利
用這 Word16 的變數去做加減乘除等等的
運算及儲存。為了減少捨去誤差(Round-off 
Error)，原始 G.723.1 的定點程式含有大量
規位的動作，極度的浪費 CPU 時間。因
此，我們為了降低此部分 CPU 時間。同
時，將所有 G.723.1 原始程式碼中的副程
式修改為基本運算指令。英代爾(Intel)近年
所銷售之 Pentium 處理器均俱有 MMX 功
能，本計畫另一目的是有效的改良現有
G.723.1 編碼演算法程式之結構以符合
MMX 架構,便可大量提高 CPU 即時壓縮
之速度效能，有效的減少 CPU 的處理時
間。我們粗略的檢視 G.723.1 編解碼演算
法的程式,發現編碼時需要大量計算迴旋
積分(Convolution Sum)以及自相關係數
(Autocorrelation)的運算，現將這些演算法
模組配合 MMX 架構做修改，將可有效的
改善編碼速度。例如濾波器與相關係數的
處理及計算有乘積相加的運算,需有很多
的相乘相加運算才能完成,在MMX的架構
中，則設計了有同時執行 4 個運算元相乘,
且在乘完之後並立即相加的指令 (即
PMADDWD 指令)，因此本來要 8 個指令
(4 個乘法運算與 4 個加法運算)，才能完成
的動作，利用一個 PMADDWD 的乘加指 
果傳回來。修改為直接將兩個 16 位元的整
數相減。例子：a3=sub(a1,a2);Î改成
a3=a1-a2; 乘法：Word32 L_mult(Word16 
var1,Word16 var2) 乘法是將兩個 Word16 
的變數擴充成 Word32 的變數，然後再做整
數的相乘，結果存到一個 Word32 的變數
中，然後再檢查其是否有 Overflow，如果
沒有就直接將這Word32變數左 shit一位
（乘 2），最後再將這 Word32 變數傳回去。
修改為直接將這兩個 Word16 的變數相
乘，相乘之後左 shift 一位。例子：a1= 
L_mult(a2,a3);Î 直 接 改 成 
a1=(a2*a3)<<1; 除 法 ：  Word16 
div_s(Word16 var1, Word16 var2) 先將
被除數跟除數擴充成 Word32 的格式，然後
進入一個 for 迴圈跑 16 次，判斷輸出的每
個位元是零還是一。修改為直接將變數右
移一個位元，最後再去做整數的除法。例
子 ： a1=div_s(a2,a3);Î 改 成 
a1=(a2>>1)/a3。 
本計畫研究目標另一項目是實現
MMX 結構，因 G.723.1 演算法之計算量分
析中，內積為負擔最重之運算，故本計畫
將內積運算以 MMX 指令實現，如此可減
少 CPU 運算時間之需求。以下我們舉一個
向量 ，向量 以 MMX 完成內積動作之
例子來說明。 
→
a
→
c
本計畫之研究是以 Microsoft Visual 
C++為模擬實驗平台，首先將編碼器與解
碼器整合在一起以利演算法之實驗及評估
整體系統其執行效能、語音品質。以兩男
兩女之語音且音量特選大增益及小增益進
行實驗，評估比較原 G.723.1 未修改演算
法及結構與修改成之 MMX 結構及直接使
用基本運算指令後整體系統其執行效能、
語音品質，如下 (表一)為未修改之執行效
能、語音品質，(表二)為修改過之執行效
能、語音品質，SNR 及 SegSNR 以 dB，時
間以秒為單位： 
表一：評估未修改之語音品質及 CPU 執行
時間 
 Frams SNR SegSNR 時間
Male#1 550 14.84 16.15 4.156
Male#2 99 13.78 14.30 0.781
Female#1 161 18.17 14.86 1.282
Female#2 125 18.52 18.53 0.984
 
表二：評估修改過之語音品質及 CPU 執行
時間 
 Frams SNR SegSNR 時間
Male#1 550 14.74 16.06 0.563
Male#2 99 13.57 14.12 0.094
Female#1 161 18.08 14.78 0.187
Female#2 125 18.29 18.34 0.140
 
其次本計劃另一研究成果是提出在
MP-MLQ 激發源搜尋演算法執行之前先
利用已有的 [ ]nd 訊號(子音框長 n=0…L)預
先篩選其絕對值較大的 N 個(N L/2)，假
如 N= L/2 如此可以減少一半的搜尋激發
脈波位置。表三為實驗結果之評估，由表
三可知取 N= 15 時 SegSNR=14.69 與原
MP-MLQ 演算法 (N= 30)在語音品質之比
較僅差 0.17dB，由於可知本計劃研究之快
速搜尋演算法將可提高 G.723.1 編碼效力。 
≤
 
表三：篩選不同的激發脈波位置數 N 相
對語音品質 SegSNR 之評估 
Candidate N Female #1 Female #2 Male #1 Male #2
30 14.86 18.52 16.15 14.30
25 14.77 18.31 16.01 14.13
20 14.74 18.30 15.93 14.12
15 14.69 18.24 15.78 14.00
10 14.34 17.98 15.37 13.94
MP-MLQ (N=30 original approach) 
 
