在第三年度中，我們考慮越庫問題具抽檢作業之排程問題。
在文獻中，大部分的研究均假設越庫中心只涵蓋配送作業。
然而，在許多環境中，抽檢亦是一個重要的作業，如海關。
考慮抽檢作業能將越庫問題更實務化且更有效益，因為延遲
的運送會降低顧客滿意度。我們針對此問題提出一個以免疫
球蛋白類型轉換為基礎的人工免疫系統演算法，此演算法能
夠比其他人工免疫系統演算法更貼近實際的人工免疫系統模
型。為評估此演算法，本研究另提出模擬退火法及禁忌搜尋
法求解此問題。透過測試不同樣本數的實驗，結果顯示本演
算法所產生的解優於其他演算法。 
中文關鍵詞： 物流、供應鏈、總完工時間、批次到達、二元整數規劃、排
程、演算法、類電磁演 算法、二階段供應鏈、越庫問題、抽
檢、免疫系統 
英 文 摘 要 ：  
英文關鍵詞：  
 
1 
 
行政院國家科學委員會專題研究計畫成果報告 
供應鏈及排程之整合 
The integration of supply chain and scheduling 
計畫編號：NSC－98－2221－E－011－052－MY3 
執行期限：98 年 8 月 1 日至 101 年 7 月 31 日 
主持人：廖慶榮 教授 台灣科技大學工業管理系 
計畫參與人員： 趙謙文 台灣科技大學工業管理系博士班 
 王福氣 台灣科技大學工業管理系博士班 
 郭有維 台灣科技大學工業管理系碩士班 
 張麗珍 台灣科技大學工業管理系碩士班 
 王聖瑋 台灣科技大學工業管理系碩士班 
 鄒馨慧 台灣科技大學工業管理系博士班 
 鍾翠萍 台灣科技大學工業管理系博士班 
 何兆中 台灣科技大學工業管理系博士班 
 羅烽瑞 台灣科技大學工業管理系碩士班 
 陳宛吟 台灣科技大學工業管理系碩士班 
中文摘要 
近年來，物流（logistics）與供應鏈（supply chain）備受大眾關注。在 21 世紀的新時代，
顧客期望的產品是高品質且能夠快速取得的，因此，在企業中物流與供應鏈便扮演相當重要
的角色。隨著全球化的發展，供應鏈的重要程度與日俱增，各大企業均視物流與供應鏈為企
業管理的核心部份，如何有效的管理與控制整體供應鏈的流程，以整合上、中、下游廠商，
成為企業最重要的課題之一。 
本計畫主要探討供應鏈排程（supply chain scheduling）相關問題的最佳化，並以批次概
念為主體，將供應鏈排程分為兩部份進行探討。第一部份考慮批次（batch）概念於生產排程
中；第二部份考慮車輛運輸排程問題（vehicle route problem；VRP），包含供應商（supplier）
運送原物料至製造商，以及製造商運送產品至零售商或顧客；第三部份考慮越庫問題考量抽
檢作業之排程問題。本計畫將探討如何達成零售商或顧客滿意度最大化。最後，我們將發展
的演算法實際導入供應鏈中，期望能夠使供應鏈中各個環節的資訊流通更快速且精確，以發
揮綜效。研究主要區分為以下三個部分： 
Part I: 等效平行機台在工件依批量到達下之排程問題 
在供應鏈排程文獻中，通常假設工作同時或單獨到達。但是在大多數實際情況這個假設
是無效的，因為工作通常分批到達，例如，半導體製造業最終測試廠。半導體廠為供應鏈裡
最為知名的產業，而分批到達的概念在少數的研究中曾經提及，但從作業的觀點上還沒有被
探索。本文首先提出了相同平行機批量到達最小化總完工時間的問題。因為這個問題是
NP-hard，本文提出啟發式演算法。經由計算結果證明，在中、大樣本問題中，其解與下限值
的誤差平均值僅為 2.12%，所提出的演算法可以有效地獲得良好的解。 
Part II: 應用類電磁演算法解決二階段供應鏈之生產與運輸排程問題 
在完成計劃的第一階段批次生產後，緊接著將討論的是兩階段的供應鏈問題。我們所探
討的生產系統包含兩個階段：第一階有 m 個生產速度不同的供應商，第二階段每個供應商包
3 
 
After getting the batch scheduling from the first step, we address a two-stage supply chain 
coordination problem this year. The first stage contains m suppliers with various production speeds 
while the second stage is composed of l vehicles each having a different speed and transport 
capacity. The objective is to minimize the maximum completion time. In this research, a new 
heuristic is proposed and an electromagnetism-like mechanism (EM) algorithm is developed to 
search good solutions. Computational results show that the proposed EM algorithm, embedded with 
the heuristic, can significantly improve an existing gendered genetic algorithm, with an average 
improvement of 20.66%, while using less computation time. 
Part III: Minimizing total tardiness for cross docking problem with sampling inspection 
Finally, we consider a cross docking problem with sampling inspection. In the literature, most 
papers assume that there is only distributing process in cross docking. However, sampling 
inspection is a specific operation for some products such as in the customs. Considering the 
sampling inspection is more practical and more useful for cross docking problem because late 
shipping always decreases customer satisfaction. We propose an isotype switching-based AIS 
(IS-AIS) for this NP-hard problem. The developed IS-AIS algorithm is a part of immune system 
which is called affinity maturation and is better fit the natural immune system than other 
immune-based algorithms. To verify the solution quality, two algorithms (Simulated Annealing 
algorithm and Tabu search) are proposed. Extensive experiments with different size problems show 
that the IS-AIS algorithm can efficiently yield better solutions than the other algorithms. 
Keywords: Logistics; Supply chain; Total completion time; Batch arrival; Binary integer program; 
Scheduling; Heuristic; Electromagnetism mechanism; Two-stage supply chain; 
Crossing dock; Sampling inspection; Immune system  
5 
 
convenience, we will refer to this SPT extension rule as the generalized SPT rule. For the problem 
with unequal arrival times, i.e., | |j jPm r C∑ , Yalaoui and Chu (2006) developed a branch and 
bound algorithm, which employs several dominant properties and two lower bounding schemes. 
Recently, Nessah et al. (2008) further developed a branch and bound algorithm for the weighted 
problem | |j j jPm r w C∑ . There are some studies dealing with different objectives for the parallel 
machine problem with zero arrival times, most of which focus on the total weighted completion 
time, e.g., Sarin et al. (1988), Belouadeh and Potts (1994), and Azizoglu and Kirca (1999).  
In this paper, we will develop a heuristic, based on a Binary Integer Programming (BIP) model, 
for the | |batch jPm r C∑  problem. To verify the heuristic, we also propose a branch and bound 
algorithm for finding the optimal solution to the problem. Extensive experiments show that the 
heuristic can find good solutions in a short time. 
2. The || jPm C∑  problem 
The jPm C∑  problem can be solved by the generalized SPT rule (Pinedo 2002). That is, 
jobs are partitioned into /n m⎡ ⎤⎢ ⎥  sets. The first set (with rank 1) consists of the m shortest jobs. The 
second set (with rank 2) consists of the second m shortest jobs, and so on. According to the 
generalized SPT rule, jobs with rank 1 are placed in the first positions of machines, jobs with rank 2 
in the second positions, and so on.  
Following the notation of Gupta and Ho (2001), jobs are first arranged by the SPT rule to 
obtain a sequence { (1), (2),..., ( )},nσ σ σ σ=  where the processing time ( ) ( 1)j jp pσ σ +≤  for 
1 1j n≤ ≤ − . Let ( ( ), ( ),..., (( 1) ))iS i m i t m iσ σ σ= + − +  for 1,2,..., 1i m= −  and 1,2,..., /t n m= . 
The optimal schedule for the jPm C∑  problem is to process jobs in the sequence iS  on 
machine i .  
3. The max| | /i jPm a C C∑  problem 
Gupta and Ho (2001) provides a Binary Integer Programming (BIP) model to formulate a 
two-identical parallel machine problem to minimize makespan subject to minimum total completion 
time, i.e., max2 / jP C C∑ . We extend their model to an m  identical parallel machine problem 
with non-zero available times of machines, i.e., max| | /i jPm a C C∑  where ia  denotes the time 
that machine i  is available to process jobs. The proposed BIP model tries to reduce the makespan, 
or equivalently machine idle time, by exchanging jobs with the same rank so that the total 
completion time remains unchanged.  
 
Let k  be the rank of jobs and define the decision variable as 
1   if job (( 1) ) is interchanged with job (( 1) ) 
0  otherwisekii
k m i k m i
x
σ σ
′
′− + − +⎧= ⎨⎩  
Then, max| | /i jPm a C C∑  can be formulated as the following BIP model:  
max
/ /
max (( 1) ) (( 1) ) (( 1) )
1 1, 1
Minimize
subject to
[ ]
for 1,..., (1)
n m m n m
kii k m i k m i i k m i
k i i i k
C
C x p p a p
i m
σ σ σ′ ′− + − + − +
′ ′= = > =
+ − ≥ +
=
∑ ∑ ∑  
7 
 
number of unscheduled jobs. Then the heuristic can be stated as follows. 
Step 0: Initialize hB  for 1,..., .h b=  Set 0.h =  
Step 1: Set 1.h h= +  Arrange the jobs in hB  by the SPT rule to obtain { (1),σ σ=  (2),...}σ .  
Step 2: If h b= , schedule the remaining jobs by the generalized SPT rule and STOP; otherwise, 
find the smallest number of q  such that  
( ) 1
1 1
q m
j h i
j i
p m r aσ +
= =
≥ × −∑ ∑                    (4) 
If no q  can be found, schedule jobs by the generalized SPT rule and go to Step 4. 
Schedule jobs (1), (2),..., ( )qσ σ σ  to the machines and move the unscheduled jobs, if exist, 
into 1hB + . If equality holds for eq. (4), go to Step 4. 
Step 3: If the following inequality holds, move job ( )qσ  into 1hB + : 
( ) 11 1
1
( )
( )
q m
j h ij i
h h U
p m r a
r r n
m
σ += =
+
− × −− < ×∑ ∑          (5) 
Step 4: Apply the BIP model to the jobs in hB  and exchange the jobs accordingly. Return to Step 
1. 
 
Steps 0 and 1 are self explanatory. In Step 2, we can simply schedule jobs in the last batch by 
the generalized SPT rule. For other batches, the jobs are added one by one until the sum of 
processing times is greater than the capacity of machines for the current batch. If the sum is less 
than the capacity, all the jobs can be scheduled; otherwise, we have to move some jobs to the next 
batch. The inequality (5) in Step 3 is used to judge whether the critical job ( )qσ  should be either 
included in the current batch or excluded. In the latter case, we assume, for simplicity, that it is 
scheduled in the next batch, and hence the completion time of the job is increased roughly an 
amount of 1( ).h hr r+ −  The right-hand side of inequality (5) is the increase in the total completion 
time when the critical job is included in the current batch. Finally, in Step 4 we apply the BIP model 
to minimize the idle times of machines by allowing jobs with the same rank to be interchanged so 
that the total completion time remains unchanged. The computational complexity of the heuristic is 
( )O nmb . 
 
Example 2. Consider a 3 | |batch iP r C∑  problem with job processing times given in Table 2. 
Applying the heuristic yields the following steps: 
Step 0: 1 2 3{1,2,3, 4,5,6}, {7,8,9,10,11}, {12}B B B= = = . Set 0.h =  
Step 1: Set 1 1.h h= + = (3,2,6,1,4,5)σ = . 
Step 2: Find (5) 4q σ= =  such that 3 2 6 1 4 13 3 4 0 12p p p p p+ + + + = ≥ × − = . Schedule jobs 
(3,2,6,1,4)σ =  to the machines and move job 5 into 2B . 
Step 3: Since 4 0 4 [13 (3 4 0)]/ 3 7 7 / 3− = ≥ − × − × = , keep job 4 in 1B . 
Step 4: Apply the BIP and exchange jobs 2, 3, 1, and 6. The new schedule is 1 (2,6)S = , 
2 (3, 4),S =  and 3 (1)S = , as depicted in Fig. 3. 
Step 1: Set 2.h =  (7,8,9,11,5,10)σ = . 
Step 2: Find (5) 5q σ= =  such that 7 8 9 11 5 13 3 8 13 11p p p p p+ + + + = > × − = . Schedule jobs 
(7,8,9,11,5)σ =  to the machines and move 10J  into 3B .  
Step 3: Since (8 4) 4 [13 (3 8 13)] / 3 2 4 / 3− = ≥ − × − × = , keep job 5 in 2B . 
Step 4: Apply the BIP and exchange jobs 7, 8, 9, and 11. The new schedule is 1 (2,6,8,9)S = , 
2 (3,4,5)S =  and 3 (1,7,11)S = . 
9 
 
1 62LB = 2 70LB =
0 4 8
 
Fig. 4. Graphical illustration of the lower bound for Example 3. 
 
Yalaoui and Chu (2006) developed a branch and bound algorithm for the | |j jPm r C∑  
problem. We investigated all the seven dominant properties they provided and found that only three 
of them are useful for our problem. To be complete, the three properties, corresponding to 
Properties 4, 5, and 6 in Yalaoui and Chu (2006), are restated below using the notation in this paper. 
Before introducing the properties, we need to define some additional notation. Let 
iS
n  be the 
number of scheduled jobs on iM . For a partial schedule K , let  
( ) min[ 1 , ]
ii S U
U K n m n n n= − + − −  be the least number of jobs to be scheduled on iM . Let 
max 1,..,( ) max ( )i m iU K U K==  and min 1,..,min i m ia a== .  
 
Property 2. Consider a partial schedule K . For any two unscheduled jobs j  and j′ , assigning 
job j  to machine i  at available time mina  can be dominated by assigning job j′  if  
min min maxmax[ , ] max[ , ] ( ) ( ( ) 1) 0j j j j j ja r p a r p p p U K′ ′ ′+ − − ≥ − × − ≥  
 
Property 3. Consider a partial schedule K . Let mina ′  be the second smallest machine finishing 
time. For any two unscheduled jobs j  and j′ , assigning job j  to machine i  at available time 
mina  can be dominated by assigning job j′  if  
min min{max[ , ] max[ , ]} [ ( ) 1]j j j ia r p a r U K′ ′+ − × − min minmin{max[ , ] max[ , ], min( )}j j kk Ka r a r p′ ′ ′ ∉≤ −  
 
Property 4. Consider a partial schedule K . For any two unscheduled jobs j  and j′ , assigning 
job j  to machine i  at available time mina  can be dominated by assigning job j′  if 
min min{max[ , ] max[ , ] } ( ( ) 1) 0j j j j j j ip p a r p a r p U K′ ′ ′− ≤ + − − × − ≤  
 In addition to the above three properties taken directly from Yalaoui and Chu (2006), we 
provide the following property to be used in our branch and bound algorithm.  
 
Property 5. Jobs in the same batch on a machine have to be scheduled in the SPT order. 
Proof. It can be proved by a pairwise interchange of jobs. 
We can now state the branch and bound algorithm, which employs the above four dominance 
properties along with two lower bounding schemes, in the following steps: 
 
Step 0: Initialization 
 Create a root node at level 0  where no job is placed. Compute a lower bound LB . Apply the 
proposed heuristic to obtain an upper bound UB . If UB LB= , the obtained schedule is optimal. 
Step 1: Branching 
 At level 1, there are n  nodes each representing a job placed in the first position on 1M  at 
11 
 
/( )jI p m b= ×∑ . The number of jobs for each batch was determined by / (0.8,1.2)n b U×  with 
the restriction of the specified n , i.e., the final batch consists of the remaining number of jobs. Ten 
instances were solved for each combination. The maximum computation time allowed is set as 
1,200 seconds.  
To analyze the impact of the lower bound and the dominance properties on the efficiency of 
the branch and bound algorithm, six different versions of branch and bound algorithms were 
constructed as follows:  
(i) BAB YC: The algorithm proposed by Yalaoui and Chu (2006). 
(ii) BAB CLS: The algorithm employing all the lower bounds and the dominance properties. 
(iii) BAB 1: The BAB CLS incorporating other properties (Properties 2, 3, and 7) in Yalaoui and 
Chu (2006). 
(iv) BAB 2: The algorithm employing 1LB  and all the dominance properties. 
(v) BAB 3: The algorithm employing 2LB  and all the dominance properties. 
(vi) BAB 4: The BAB CLS without Property 5. 
 
The computational results are summarized in Tables 4-6 where columns “Time”, “Node”, and 
“Unsolved” represent the average computation time, the number of nodes generated, and the 
number of unsolved problems, respectively. Examining the tables, we can make the following 
observations: 
1. From Table 4, we can observe that BAB CLS outperforms BAB YC for the considered 
| |batch jPm r C∑  problem. It is difficult to solve the problem by both algorithms for 20n ≥ .  
2. By comparing BAB 1 and BAB CLS in Table 4, we can conclude that Properties 2, 3 and 7 in 
Yalaoui and Chu (2006) are not useful in this problem. Incorporating these properties increases 
the computation time although it may reduce a small number of nodes.  
3. It can be observed from Table 5 that 1LB  is more powerful than 2LB  when each lower 
bound is used individually. However, the combined use of both lower bounds (i.e., BAB CLS) 
can further improve the branch and bound algorithm.  
4. It can be observed from Table 6 that Property 5 is useful in the branch and bound algorithm. 
 
Proposed heuristic 
 
The evaluation of the proposed heuristic is composed of two parts: (1) small size problems and 
(2) medium and large size problems. For small size, test problems were generated with 
10,15,20,25n =  and 2,3,4,5m = . The computational results are summarized in Table 7, where 
the performance is measured by the percentage error (PE) from optimum obtained by BAB CLS. 
PE is computed by PE [(heuristic solution optimal solution) /optimalsolution] 100%.= − × It can be 
observed from the table that the average PE is about 0.44 for small size problems. Since we cannot 
obtain optimal solutions for medium and large size problems, we also compute the percentage error 
from “lower bound” (denoted by PELB) in Table 7 with a comparison to PE (the true percentage 
error), where LBPE  =  [(heuristic solution ) / ] 100%.LB LB− ×  
For medium and large size, test problems were generated with 2,5,8m =  and 
50,100,200,500,1000n = . The parameters in this experiment are the same as before except that τ  
is varied with n  in order to assign appropriate number of jobs in each batch. The computational 
results are presented in Table 8, which shows that the heuristic can obtain a near optimal solution in 
less than 75.88 seconds for all medium and large size problems. The average PELB is only 2.12 with 
a maximum of 3.69. By comparing PE and PELB in Table 7, the true percentage error in Table 8 
must be much smaller. In general, the heuristic performs better as m  is increased because it is 
easier to reduce the machine idle time by the BIP model. Moreover, problems with smaller value of 
τ  are easier to solve because there are less number of batches.  
13 
 
Table 1 
Processing times for Example 1 
j  1 2 3 4 5 6 7 8 9 10 11 12 
jp  1 3 4 5 5 6 7 8 8 9 9 10 
 
 
 
Table 2 
Processing times of jobs for Example 2 
 1 0r =  2 4r =  3 8r =  
j  1 2 3 4 5 6 7 8 9 10 11 12 
jp  4 2 1 4 4 2 1 2 3 4 3 4 
 
 
 
Table 3 
Computation time (seconds) of the BIP model 
 n 
m 100 300 500 
2 1.040 1.219 1.458 
4 1.093 2.296 3.640 
6 2.668 3.032 11.975 
8 26.841 28.035 47.785 
 
 
15 
 
Table 5  
Analysis of the impact of the lower bounds  
  BAB 2 BAB 3 BAB CLS 
n  m  Time Node Unsol. Time Node Unsol. Time Node Unsol.
10 2 0.004 48.0 0 0.005 42.8 0 0.005 22.8 0 
 3 0.015 68.3 0 0.032 244.4 0 0.016 63.3 0 
 4 0.000 1.0 0 0.001 1.0 0 0.000 1.0 0 
 5 0.001 1.0 0 0.000 1.0 0 0.000 1.0 0 
Ave.  0.005 29.6 0.0 0.010 72.3 0.0 0.005 22.0 0.0 
15 2 0.173 960.6 0 0.650 3,573.0 0 0.161 754.8 0 
 3 1.245 4,324.2 0 8.048 29,369.8 0 1.053 3,331.0 0 
 4 2.036 3,817.8 0 14.166 44,697.4 0 1.712 2,475.3 0 
 5 2.020 4,594.3 0 76.768 163,005.9 0 2.897 4,519.9 0 
Ave.  1.369 3,424.2 0.0 24.908 60,161.5 0.0 1.456 2,770.3 0.0 
20 2 4.056 12,035.4 0 20.117 52,895.2 3 3.619 9505.4 0 
 3 56.691 134,121.8 0 271.801 597,586.0 7 59.224 120,325.0 0 
 4 306.049 246,738.8 12 93.283 107,259.6 12 141.484 106,451.0 7 
 5 0.002 1.0 10 150.340 131,960.4 6 16.026 15,522.1 5 
Ave.  91.700 98,224.3 5.5 133.885 222,425.3 7.0 58.594 66,346.1 3.3 
25 2 63.352 106,192.6 0 121.552 214,178.9 1 34.591 53,013.4 0 
Ave.  63.352 106,192.6 0 121.552 214,178.9 1.0 34.591 53,013.4 0.0 
 
 
 
Table 6  
Analysis of the impact of Property 5 
  BAB 4 BAB CLS 
n  m  Time Node Unsolved Time Node Unsolved
10 2 0.004 26.9 0 0.005 22.8 0 
 3 0.015 72.3 0 0.016 63.3 0 
 4 0.000 1.0 0 0.000 1.0 0 
 5 0.001 1.0 0 0.000 1.0 0 
Average  0.005 25.3 0.0 0.005 22.0 0.0 
15 2 0.445 2,431.7 0 0.161 754.8 0 
 3 2.030 6,639.7 0 1.053 3,331.0 0 
 4 2.456 3,301.8 0 1.712 2,475.3 0 
 5 2.834 4,859.8 0 2.897 4,519.9 0 
Average  1.941 4,308.3 0.0 1.456 2,770.3 0.0 
20 2 38.417 89,946.4 0 3.619 9505.4 0 
 3 159.117 280,641.8 3 59.224 120,325.0 0 
 4 95.578 80,956.6 9 141.484 106,451.0 7 
 5 17.468 16,633.0 6 16.026 15,522.1 5 
Average  77.645 117,044.5 4.5 58.594 66,346.1 3.3 
25 2 191.941 196,497.1 6 34.591 53,013.4 0 
Average  191.941 196,497.1 6.0 34.591 53,013.4 0.0 
 
17 
 
Table 8 
Computational results of the heuristic for  
medium and large size problems 
n  m τ Time PELB (%)
50 2 1.5 0.05 1.54 
  2.5 0.06 3.20 
 5 1.5 0.16 4.61 
  2.5 0.12 2.31 
 8 1.5 0.29 3.02 
  2.5 3.57 1.14 
Average   0.71 2.64 
100 2 3 0.12 1.56 
  5 0.08 3.01 
 5 3 0.45 2.03 
  5 0.32 2.76 
 8 3 93.56 2.76 
  5 0.35 0.66 
Average   15.81 2.13 
200 2 4.5 0.33 1.00 
  7.5 0.17 1.59 
 5 4.5 1.56 2.84 
  7.5 0.63 2.47 
 8 4.5 45.32 3.28 
  7.5 1.50 2.28 
Average   8.25 2.24 
500 2 6 1.23 0.92 
  10 1.61 1.22 
 5 6 7.69 2.38 
  10 3.51 2.33 
 8 6 43.57 2.70 
  10 8.58 1.88 
Average   11.03 1.90 
1000 2 7.5 4.13 0.72 
  12.5 2.43 0.96 
 5 7.5 23.93 1.33 
  12.5 12.87 2.09 
 8 7.5 75.88 1.23 
  12.5 32.22 3.69 
Average   25.24 1.67 
 
Self-Evaluation  
 
批次問題是供應鏈普遍會發生的進出貨問題，但已知的文獻中鮮少有提及批次問題的研
究。因此本計畫針對供應鏈排程之批次問題行深入的探討。本計畫於第一年度(本年度)先提
出一個啟發式演算法及分支界限演算法，以求得供應鏈在批次問題的排程。明年度（第二年
度）則將提出實際發生在供應鏈的排程問題。第三年度則考慮越庫問題具抽檢作業之排程問
題！期望未來有機會為供應鏈產業所採用。 
19 
 
heuristic may produce a solution better than a meta-heuristic but taking much less computation time 
(Liao et al. 2009). On the other hand, the solution from a heuristic can be used as an initial solution 
in a meta-heuristic. Therefore, in this report, we will first focus on developing a heuristic for the 
integrated production and transportation scheduling problem. To further improve the solution 
quality, an electromagnetism-like algorithm will be proposed.  
Electromagnetism-like (EM) approach, developed by Birbil and Fang (2003), is a relatively 
new population-based meta-heuristic. The EM meta-heuristic was originally proposed to solve 
continuous optimization problems (Birbil & Feyzioglu, 2003). Recently, it has been successfully 
applied for combinatorial optimization. For example, it has been done by Debels and Vanhoucke 
(2006) for a project scheduling problem and by Debels et al. (2006) to bias a move of a scatter 
search scheduling algorithm. The EM meta-heuristic has also been used by Maenhout and 
Vanhoucke (2007) for a nurse scheduling problem and by Chang et al. (2009) to solve a single 
machine scheduling problem.  
The rest of the report is structured as follows. In Section 2, the hypotheses and the notation for 
the problem are delineated. In Section 3, the solution representation used in the algorithms is 
presented. In Section 4 and 5, a heuristic and an EM algorithm are proposed for solving the problem, 
respectively. In Section 6, we demonstrate the computational results of the EM analysis and 
compare with GGA. Finally, Section 7 summarizes the concluding remarks and offer suggestions 
for future research. 
2. Problem definition 
2.1. Assumptions 
 
As stated by Zegordi et al. (2009), the considered problem involves a two-stage supply chain 
that has n  jobs (products) with different sizes. The first stage comprises m  suppliers with 
different production speeds and these suppliers have to produce n  jobs that have been ordered by 
a manufacturing company. The second stage comprises l  vehicles with variable speeds and 
variable capacities for transporting products from the suppliers to the manufacturing company. The 
size of each job and the capacity of each vehicle are known in advance, consistent with space and 
weight requirements. 
As the aspect of suppliers’ geographical zone, it is assumed that all suppliers are located in one 
geographical zone and the inter-supplier transportation times can be ignored. In some real-world 
situations the suppliers may not be located in one geographical zone but across multiple 
geographical zones. In this case, it is assumed that the original problem can be divided into multiple 
sub-problems such that each group of suppliers is located in a single geographical zone and 
suppliers are unable to share vehicles between different sub-problems (Zegordi et al., 2009). If the 
distance between any two suppliers cannot be ignored, they will be considered as being located in 
two different geographical zones. At time zero, it is assumed that each vehicle is located in the 
supplier zone and can carry products from the multiple suppliers to the company in a single batch. 
Each vehicle makes its delivery and returns to the supplier area for the next dispatch. The objective 
function of the problem is to minimize the maximum completion time for all jobs (i.e. the 
makespan).  
Based on the above assumptions, Zegordi et al. (2009) developed a mixed integer 
programming model for the problem. They used Lingo 8 software to solve the model on an Intel 
Core 2, 1.8 GHz PC. For a small size problem with 7 jobs, 3 suppliers and 4 vehicles, the optimal 
solution cannot be identified within 2 hours. Hence the authors employ a meta-heuristic to solve the 
problem. 
 
2.2. Notation and definitions 
 
The following lists the notation used in this report, along with their definitions:  
21 
 
Structure_B is composed of four different strings. The first string indicates a job index from a 
supplier perspective. The second string represents a supplier index of each job in the first string. 
The third string indicates a job index from a vehicle perspective. The fourth string represents a 
vehicle index of each job in the third string. For example, the illustrated example represented by 
Structure_A in Fig. 2 can be transformed into a Structure_B solution as shown in Fig. 3. 
 
Job_S 1 2 4 5 3
Supplier
Job_V
Vehicle
1 2 2 2 3
5 4 2 1 3
1 1 1 1 2
 
Fig. 3. Solution representation of Structure_B. 
 
3.2. Structure of particle 
 
Each particle in EM represents a solution of the problem and we can turn a particle into either 
Structure_A or Structure_B solution. However, EM is originally designed to solve the continuous 
problem, so it is necessary to define the particle as a continuous type. The particle is similar to the 
particle proposed by Tasgetiren et al. (2006). Let the particle be composed of four different strings, 
same as Structure_B. Then the particle can be stated as follows. 
 
3.2.1. Particle  
 
Let popSize  denote the number of particles and p  denote the particle index, 
1,2, ,p popSize= … . The first string is tpSX  that denotes the thp  particle at iteration t  from a 
supplier perspective and is defined as 1 2[ , , , ]
t t t t
p p p pnSX sx sx sx= …   where tpdsx  is a decimal 
number representing the position value of the thp particle with respect to the thd  dimension 
( 1,2, , )d n= K . 
The second string is tpSNX  that denotes the thp  particle at iteration t  from a supplier 
perspective and is defined as 1 2[ , , , ]
t t t t
p p p pnSNX snx snx snx= … , where tpdsnx  is an integer variable 
representing the position value of the thp  particle with respect to the thd  dimension. 
The third string is tpVX  that denotes the thp  particle at iteration t  from a vehicle 
perspective and is defined as 1 2[ , , . . . , ]
t t t t
p p p pnVX vx vx vx= , where tpdvx  is a decimal number 
representing the position value of the thp  particle with respect to the thd dimension. 
The fourth string is tpVNX  that denotes the thp  particle at iteration t  from a vehicle 
perspective and is defined as 1 2[ , , , ]
t t t t
p p p pnVNX vnx vnx vnx= … , where tpdvnx  is an integer variable 
representing the position value of the thp  particle with respect to the thd  dimension. 
We illustrate an example of a particle in Table 1 and define the second and the fourth strings of 
particle to be equal to the second and the fourth strings of Structure_B. The values of the second 
and the fourth strings indicate the permutation of suppliers and vehicles. The values of the first and 
the third strings can not indicate the permutation of jobs on a supplier and a vehicle. In order to 
convert a continuous position vector into a discrete job permutation, we adopt the Larger Value (LV) 
23 
 
1min{ ,  1,...,  }isC s m= . Let 1max{ ,  1,..., }iMSQ c i R= = . 
(e) Replace the value of VST  by max{ , }VMSQ ST , and go to (b). If there is no job in JS , 
then stop.  
(f) Transform Structure_A into Structure_B, and let SB  denote Structure_B.  
Step 2: Generate an initial particle from a solution using Step1. 
(a) The first string of an initial particle 1 2[ , , . . . , ]
t t t t
p p p pnSX sx sx sx=  denotes the inverse of 
the first string’s job index of SB . 
(b) The second string of initial particle 1 11 12 1[ , , . . . , ]
t t t t
nSNX snx snx snx=  is equal to the 
second string of SB . 
(c) The third string of an initial particle 1 11 12 1[ , , . . . , ]
t t t t
nVX vx vx vx=  denotes the inverse of 
the third string’s job index of SB . 
(d) The fourth string of an initial particle 1 11 12 1[ , , . . . , ]
t t t t
nVNX vnx vnx vnx=  is equal to the 
fourth string of SB . 
 
We elaborate on the heuristic as follows. The heuristic consists of two parts, where in the first 
part it focuses on arranging job i  with min{ ; 1,...,  }iP i n=  and max{ ;  1,...,  }ivol i n=  to a 
vehicle with max{ ;  1,...,  }kv k l=  and max{ ;kCap  1,...,  }k l= . In Step 1, we define a sequence of 
jobs in increasing order of i iP vol , so the job with min{ ; 1,...,  }iP i n=  and max{ ;  1,...,  }ivol i n=  
can be arranged first. In Step 2, we select a vehicle V  with max{ ;  1,...,  }kv k l=  and max{ ;kCap  
1,...,  }k l= , and we have to take VST  into consideration. Hence, we arrange each job to vehicle 
V  with max{ ,  1,...,  }k k kv Cap ST k l× − =  according to the order of JS . Suppose there are R  
jobs which can be arranged to vehicle V  and  1
R
ii vol=∑  is less than or equal to VCap . Then we 
denote SQ  as the sequence of jobs which had been arranged. After that, the job of SQ  is 
removed from JS  in order to avoid arranging the same job of SQ  repeatedly.  
In the second part, the heuristic focuses on arranging job i  of SQ  to a supplier. In Step 1(c), 
according to the SPT (Shortest Processing Time) rule, jobs in SQ  are rearranged in increasing 
order of iP . In Step 1(d), we start to arrange job i  to a supplier according to SQ  and select the 
supplier with 1min{ ,  1,...,  }isC s m= . Then, we calculate 1ic  for each job according to the order of 
SQ , and denote MSQ  as 1max{ ,  1,...,  }ic i a= . After all jobs of SQ  have been done in the first 
step, we compute VST . In Step 1(e), let max{ , }V VST MSQ ST= . Then we go to Step 1(b) until 
there is no job in JS . 
5. The EM algorithm 
This section details the EM algorithm developed to search for a near-optimal solution for the 
problem. 
 
5.1. The concept of EM 
 
Electromagnetism-like (EM) approach, developed by Birbil & Fang (2003), is a relatively new 
population-based meta-heuristic. It was originally proposed to solve continuous problems by 
simulating the physics of electrically charged particles repelling and attracting each other in a 
25 
 
t Iteration≤ . Return to Step 2. 
 
The EM framework is explained in the following. In Step 0, some parameters are initiated. In 
Step 1, an initial particle is generated by the PSSC heuristic in order to reduce the time of searching 
for a good solution. Then, the rest of the particles are generated randomly to avoid being trapped 
into local optima. In Step 2, an infeasible solution needs to be adjusted to make it feasible, and the 
particle with the best solution is recorded at any iteration. It makes the particles to reach a good 
solution region quickly. In Step 3, all particles are moved in order to search for the optimal solution. 
As explained in Step 2, after each iteration an infeasible solution needs to be adjusted to make 
it feasible. We develop an Adjustable (AD) rule (Step 3) for this purpose in the following steps: 
(a) If 0tpdsx ≤ , let ( 1)t tpd pdsx sx= × − ; if 1tpdsx > , set 1t tpd pdsx sx= −  until 0 1tpdsx≤ ≤ . Let 
t
pdvx  be the counterpart of 
t
pdsx . Use the LV rule to turn 
t
pdsx  and 
t
pdvx  into  
t
pdsπ  
and tpdvπ  
(b) If 0tpdsnx = , let 1tpdsnx = ; if tpdsnx m> , set t tpd pdsnx snx m= −  until 1 tpdsnx m≤ ≤ . 
(c)  If either tpdvnx l>  or 1 tpdvnx l≤ ≤  and t t
pd pdv vnx
vol Capπ > , then we choose the vehicle 
that can carry job tpdvπ  in the tbp  particle to replace tpdvnx . 
6. Computational results 
As stated earlier, the considered problem has been solved using a gendered genetic algorithm 
(GGA) by Zegordi et al. (2009). Here, we verify the performance of PSSC, EM, GGA and 
GGA-PSSC, where the test data will be generated according to the scheme proposed by Zegordi et 
al. (2009). To have a fair comparison, PSSC, EM, GGA and GGA-PSSC were coded in C++ on an 
Intel 1.65GHz under Windows XP with 2.00 GB RAM. After solving various test problems we 
empirically found that values of 20 for popSize and 50 for Iteration lead to better solutions, so these 
values were used in the experiments.  
In addition to comparing EM with GGA, we also compare EM with GGA-PSSC (gendered 
genetic algorithm using PSSC as an initial solution) to determine which meta-heuristic is better for 
the problem. All of the 270 randomly generated problems were solved by PSSC, EM, GGA and 
GGA-PSSC. The computational results are summarized in Tables 5 and 6.  
Table 5 provides the mean values of PSSC, EM, GGA and GGA-PSSC, along with the average 
relative percentage deviations of GGA from PSSC (RPD GGAPSSC), GGA from EM (RPD GGAEM) 
and GGA-PSSC from EM (RPD GGA-PSSCEM). The relative percentage deviations are defined as 
follows:  
PSSC
Sol. of GGA Sol. of PSSCRPD GGA 100
Sol. of PSSC
−= ×                  (3) 
EM
Sol. of GGA Sol. of EMRPD GGA 100
Sol. of EM
−= ×                  (4) 
EM
Sol. of GGA-PSSC Sol. of EMRPD GGA-PSSC 100
Sol. of EM
−= ×              (5) 
 
It is found from Table 5 that PSSC outperforms GGA, except for the case when the number of 
jobs is 10. The average improvement from all the 270 test problems is as high as 15.54% while 
PSSC took almost zero computation time. It is also observed that EM can improve the solution of 
GGA as high as 20.66%. With respect to the meta-heuristic itself, EM still outperforms GGA-PSSC 
with an average improvement of 3.05%.  
To be more specific, the numbers of suppliers and vehicles were generated by the same 
uniform distribution in Case 2, where the supply chain is balanced and there is no bottleneck. In 
27 
 
Liao, C.J., Shyu, C.C., Tseng, C.T., 2009. A least flexibility first heuristic to coordinate setups in a 
two-or three-stage supply chain. International Journal of Production Economics 117, 
127-135. 
Liao, C.J., Chao, C.W., Lin, C.H., 2009. Minimizing the sum of job completion times two-parallel 
machine. European Journal of Operational Research 197, 475-481. 
Maenhout, B., Vanhoucke, M., 2007. An electromagnetic meta-heuristic for the nurse scheduling 
problem. Journal of Heuristics 13, 359-385. 
Mason S. J., Ribera, P. M., Farris J. A., Kirk, R. G., 2003. Integrating the warehousing and 
transportation functions of the supply chain. Transportation Research Part E 39, 141-159. 
Tasgetiren, M.F., Liang, Y.C., Sevkli, M., Gencyilmaz, G., 2006. Particle swarm optimization and 
differential evolution for the single machine total weighted tardiness problem. International 
Journal of Production Research 44, 4737-4754. 
Xu, K., Dong, Y., Evers, P.T., 2001. Towards better coordination of the supply chain. 
Transportation Research Part E 37, 35-54. 
Yurtkuran, A., Emel, E., 2010. A new Hybrid Electromagnetism-like Algorithm for capacitated 
vehicle routing problems. Expert Systems with Applications 37, 3427-3433. 
Zegordi, S.H., Kamal Abadi, I.N., Beheshti Nia, M.A., 2010. A novel genetic algorithm for solving 
production and transportation scheduling in a two-stage supply chain. Computers & Industrial 
Engineering 58, 373-381. 
 
29 
 
Table 3 
Percentage improvement of NPS over PS in the dominant data set ( 40%)q =  
  Johnson’s rule  LPT NEH Dannenbring 
n  Avg Max N  Avg Max N Avg Max N Avg Max N 
5  2.95 20.35 44  7.54 26.07 70 5.81 28.99 53 4.85 30.50 47 
10  3.31 12.14 78  8.24 21.36 95 7.87 28.99 84 4.84 18.33 86 
20  1.22 7.85 80  4.06 11.81 87 4.95 12.68 93 1.48 6.83 88 
30  0.45 2.46 82  2.81 8.72 89 3.85 11.76 100 0.62 4.64 90 
40  0.21 2.64 69  2.63 6.42 95 2.83 7.54 99 0.33 2.33 80 
50  0.10 0.40 48  1.78 4.65 93 2.40 7.07 100 0.19 2.09 72 
60  0.09 1.83 65  1.30 4.70 81 2.29 8.76 99 0.11 1.53 71 
70  0.04 0.22 44  1.23 3.37 92 1.64 8.42 99 0.10 0.50 72 
80  0.04 0.25 43  1.09 3.21 87 1.44 6.10 100 0.07 0.28 71 
90  0.02 0.14 37  0.84 2.81 85 1.26 4.86 97 0.05 0.27 67 
100  0.02 0.13 31  0.90 2.77 90 1.28 5.82 97 0.04 0.16 65 
Mean  0.77 4.40 56.5  2.95 8.72 87.2 3.24 11.91 92.8 1.15 6.13 73.5
 
Table 4  
Percentage improvement of NPS over PS in the non-dominant data set ( 0%)q =  
  Johnson’s rule  LPT NEH Dannenbring 
n  Avg Max N  Avg Max N Avg Max N Avg Max N 
5  0 0 0  0 0 0 0.11 10.82 1 0.29 10.82 3 
10  0 0 0  0 0 0 0 0 0 0 0 0 
20  0 0 0  0 0 0 0 0 0 0 0 0 
30  0 0 0  0 0 0 0 0 0 0 0 0 
40  0 0 0  0 0 0 0 0 0 0 0 0 
50  0 0 0  0 0 0 0 0 0 0 0 0 
60  0 0 0  0 0 0 0 0 0 0 0 0 
70  0 0 0  0 0 0 0 0 0 0 0 0 
80  0 0 0  0 0 0 0 0 0 0 0 0 
90  0 0 0  0 0 0 0 0 0 0 0 0 
100  0 0 0  0 0 0 0 0 0 0 0 0 
Mean  0 0 0  0 0 0 0.01 0.98 0.09 0.03 0.98 0.27
 
Table 5  
Percentage improvement of NPS over PS in the non-dominant data set ( 20%)q =  
  Johnson’s rule  LPT NEH Dannenbring 
n  Avg Max N  Avg Max N Avg Max N Avg Max N 
5  0.22 9.41 5  1.16 15.42 19 0.16 9.41 4 0.27 9.41 5 
10  0.19 7.09 4  1.23 13.55 19 0.19 13.68 2 0.11 5.43 4 
20  0.00 0.00 0  0.10 3.33 7 0.00 0.00 0 0.00 0.00 0 
30  0.00 0.00 0  0.02 0.31 7 0.00 0.00 0 0.00 0.00 0 
40  0.00 0.00 0  0.03 2.03 6 0.00 0.00 0 0.00 0.00 0 
50  0.00 0.00 0  0.00 0.10 2 0.00 0.00 0 0.00 0.00 0 
60  0.00 0.00 0  0.00 0.00 0 0.00 0.00 0 0.00 0.00 0 
70  0.00 0.00 0  0.00 0.00 0 0.00 0.00 0 0.00 0.00 0 
80  0.00 0.00 0  0.00 0.00 0 0.00 0.00 0 0.00 0.00 0 
90  0.00 0.00 0  0.00 0.00 0 0.00 0.00 0 0.00 0.00 0 
100  0.00 0.00 0  0.00 0.00 0 0.00 0.00 0 0.00 0.00 0 
Mean  0.04 1.50 0.82  0.23 3.16 5.55 0.03 2.10 0.55 0.03 1.35 0.82
 
31 
 
Part III. Minimizing total tardiness for cross docking problem with sampling 
inspection 
1. Introduction 
Recently, many companies are required to satisfy more complicated customer demands. Thus, 
they are trying to obtain a high level of agility, flexibility, and reliability for various demands. One 
of the important methods is to distribute a cross docking. This is because the cross docking can 
reduce the inventory holding, order picking, transportation costs and delivery time. The concept of 
cross docking has been mentioned in some studies (Boysen and Fliedner, 2010), but there has been 
no results reported that consider the cross docking problem with the concept of sampling inspection. 
In the literature, it is often assumed that there is no sorting and processing in cross docking. 
However, this assumption is invalid in most practical situations because the sampling inspection is a 
normal process in cross docking. In cross docking, the purpose of the sampling inspection is to 
check the product’s content, weight and size matching with its delivery note in order to avoid an 
illegal transportation or deliver to the wrong place. The sampling inspection often enhances the 
completion time of the products from an inbound door to an outbound door. Therefore, the 
sampling inspection is also an important factor for the cross docking problem. In practical, it is 
quite often to inspect by the random sampling without considering the due date of the outbound 
truck. Selecting an appropriate product to do sampling inspection becomes very important. Thus, 
considering sampling inspection for the cross docking problem is necessary.  
The cross docking scheduling problem with sampling inspection for the inbound truck to 
minimize the sum of tardiness of the latest product on each outbound truck may be stated as follows. 
Boysen and Fliedner (2010) claimed that cross docking scheduling is closely related to a traditional 
machine scheduling problem and whenever possible we therefore take over the attributes of the 
Graham-notation. Following the three-field notation, the problem can be denoted as 
| , , |ioE t fix sample T∑ . E  designates that each dock door is either exclusively dedicated to the 
inbound or the outbound operations. iot  shows that transshipment time t  depends on the distance 
between an inbound dock door and an outbound truck. fix  represents an outbound truck departs at 
a predefined point in time, irrespective of the products loaded and sample  is sampling inspection. 
T∑  denotes the sum of tardiness of the latest product on each outbound truck or the total batch 
tardiness. In this paper, we also discuss the several products on an inbound truck and each product 
is shipped out to the different outbound trucks according to the customer orders, called sub-package 
constraint. The | , |ioE t fix T∑  problem without considering sub-package constraint has been 
shown to be NP-hard (Boysen and Fliedner, 2010) and hence the | , , |io sE t fix sample T∑  problem 
with considering sub-package constrain and one more constraint (sampling inspection) is also 
NP-hard. To the best of our knowledge, there exist no solution methods for the 
| , , |io sE t fix sample T∑  problem. Therefore, we will develop a heuristic to solve the proposed 
problem.  
Recently, Artificial Immune System (AIS) algorithms have attracted special attention in 
combination optimization problems especially in scheduling problem. Tavakkoli-Moghaddam et al. 
(2007) considered a no-wait flow shop scheduling problem with a new hybrid multi-objective 
algorithm based on a biological immune system. For the job shop scheduling problem, Khilwani et 
al. (2008) designed a clonal algorithm to solve various numerical and combinatorial real-world 
optimization problems, including job shop and other scheduling problems. An AIS algorithm for 
solving the minimum makespan problem of job-shop scheduling was proposed by Ge et al. (2008). 
An AIS based on integrated approach was also proposed by Bagheri et al. (2010) for solving a 
flexible job shop scheduling problem. To the best of our knowledge, there are no studies to solve 
cross docking problem by AIS algorithm. Therefore, we propose a new isotype switching-based 
33 
 
 
0 ( 1)
0
1 1
,max
0
; (3)
(4)
1 (5)
( ( ) ) ;  (6)
;  (7)
max{
(
i
i
k k
ij ji
i I i I n
i j i j
i
m
i I m M
i
m
m M
m m
i i i k j i k
m m r i r ji i
k D r j I r
i i
m i
i i
o m mo
k i k
o mo ji
k D j I
i j
x x j I k D
s h
s i I
C s F p x C p x i I m M
C C i I m M
T C w
d w x
∈ ∪ ∈ ∪ +≠ ≠
∈ ∈
∈
∈ = ∈ =
∈ ∈ ∪≠
= ∀ ∈ ∈
=
≤ ∀ ∈
= + + + ∀ ∈ ∈
≥ ∀ ∈ ∈
≥ +
∑ ∑
∑ ∑
∑
∑ ∑ ∑ ∑
∑ ) ,0} ; ; (8)
{0,1} ; (9)
{0,1} 0; ( 1);
(10)
o i
i
m i
k
ij
d i I o O m M
s i I m M
x i I j I n
k D
− ∀ ∈ ∈ ∈
∈ ∀ ∈ ∈
∈ ∀ ∈ ∪ ∈ ∪ +
∈
∑
 
 
The objective function denotes the total batch tardiness. Constraint (1) shows each inbound 
truck only can be processed once and constraint (2) defines that each dock door is utilized at most 
once by restricting the number of startup trucks to at most one per door. Constraint (3) ensures that 
the succession of inbound trucks at the dock doors is well-defined. Constraints (1-3) play the same 
role as flow conservation constraints in many network flow problems. Constraints (4) and (5) 
represent the number of sampling products and each product only can do at most once sampling 
inspection. Constraints (6) and (7) define completion time iC  for each inbound truck i . 
Constraint (8) ensures that shipments of late inbound trucks i  cannot reach a respective outbound 
truck o  whenever completion time iC  exceeds departure time od  and plus movement time kod  
required to move a shipment processed at inbound door k  to the outbound door truck o . 
Constraints (9) and (10) represent binary integrality requirement of 0–1 variables. 
 
Numerical Example  
To illustrate the proposed problem, consider an example with 7 inbound trucks in 3 inbound 
doors and 2 outbound trucks. The details ( imow  and 
i
mp ) of this problem are depicted in the Tables 
1 and 2. There are two different products on each inbound truck. Two products should be checked 
by sampling inspection with 2 time intervals. kod =[[6,2,3], [1,4,5]] and od  = [30,30,30].  
After using MILP formulation, inbound trucks 1, 6, 3, 4, and 2 are bounded in Door 1 and 
inbound trucks 7 and 5 are bounded in Door 2. The completion time of the product imC  are shown 
as Table 3. The value of total tardiness is 1. 
3. Nature immune system  
To restrict the nature, size, and location of microbial infection, animals have evolved a variety 
of defense mechanisms. The immune system is the central administration that animals use to defend 
35 
 
the basic features of an adaptive immune response to an antigenic stimulus. It establishes the idea 
that only those cells that recognize the antigens are selected to proliferate. The selected cells are 
subject to an affinity maturation process, which improves their affinity to the selective antigens.  
Our proposed IAIS is also the clonal selection theory but the maturation process is better fit the 
nature immune system by isotype switching. 
 
4.2. Structure of isotype switching-based artificial immune system 
 
The operative mechanisms of immune system are very efficient from a computational 
standpoint. The proposed IAIS in this paper was built on the changes of the immunoglobulin genes 
in the immune system. The steps of proposed IAIS are as followings. 
Step 1. Generate a population of A  antibodies. 
Step 2. Repeat C  times to choose IgG, IgE, or IgA to be a new type of antibody. If the new 
objective function is smaller than the old one, replace the antibody. 
Step 3. Eliminate antibodies except the best antibody in the population and generate the new 
antibodies and replace with the eliminated ones. 
Step 4. If the stopping criterion is reached, the heuristic is stopped; otherwise, go to Step 2. 
 
Encoding 
We will separate to two phases where the length of the first phase is represented by the number 
of inbound trucks and another one is showed by the number of sampling products (see Fig. 1). 
Integer random number R  which is generated by (1,1000)U  are generated in the two phases. 
Each inbound truck and each sampled product will have a random number (1,1000)R U=  can be 
decoded by specific way as the following we provide. These two phases are called string. 
 
 
Fig. 1. The figure of a string 
 
Decoding 
For the first phase with I  random number, we assign inbound truck to the inbound door 
defined by the remainder of /R d  where R  is random number. Then, we rearrange the sequence 
of each inbound door by the Shortest Random Number (SRN) rule which is assigned the first 
inbound truck with the smallest number to the door and the second inbound truck with second 
smallest string to the door and so on.  
 
Example 1. Consider a decoding with 6 inbound trucks and 3 inbound doors. The decoding process 
is given in Fig. 2. 
For the second phase, we have h  random numbers shown that the product can be defined by 
the remainder of /R m  and inbound truck can be obtained by the remainder of /R n .  
 
Example 2. Consider a decoding with 3 inbound trucks and 6 products (see Figure 3).  
Isotype switching 
According to the function of IgM in real immune system, IgM is a process to determine that this 
current antibody will become one of IgG, IgA, and IgE randomly. There are three phased mutation 
procedure was used, IgG, IgE and IgA shown as the followings.  
IgG 
37 
 
second set (large size problem), number of inbound trucks (I) (50,100),∈  number of outbound 
trucks (O) (10, 20,30, 40),∈  number of inbound doors (D) (10, 20,30, 40),∈  number of product 
type (M) (5,10,20),∈  and number of sampling inspection (H) (10,20,30,40).∈ The test problems 
were shown as Tables 4 and 5. Two different due dates were used: and s Ld d . To the reason of 
comparison, we also proposed the basic Simulated Annealing (SA, Kirkpatrick 1983) algorithm 
and Tabu search (TS, Glover 1989). All the algorithms keep searched until the same solution 
is repeated to find out over 500 times. 
Examining the Tables 6 and 7, we can make the following observations: 
For all problems, solving by IS-AIS is better than by other two algorithms for 54 instances 
(total 72 instances). The average CPU time of our proposed IS-AIS, SA, and TS are 11.93s, 165.82s, 
and 67.66s. The average first CPU time to reach the solution of our proposed IS-AIS, SA, and TS 
are 5.02s, 52.9s, and 0.74s. 
For the tight due date (dS) problem, IS-AIS performs better than the other two algorithms. For 
the dL problem, 17 instances out of 36 instances obtained by TS are better than by IS-AIS; the 
solutions of SA perform worse than other two algorithms.  
For the small size problem, 24 instances out of 36 instances obtained by IS-AIS performs 
better than other two algorithms. The average CPU time of our proposed IAIS, SA, and TS are 
12.92s, 214.99s, and 68.34s.  
For the large size problem, 30 instances out of 36 instances obtained by IS-AIS performs better 
than other two algorithms. The average CPU time of our proposed IS-AIS, SA, and TS are 10.94s, 
116.64s, and 66.99s.  
6. Conclusions 
In this paper, we have considered the cross docking problem with sampling inspection, i.e., 
| , , |io sE t fix sample T∑ . We have proposed an isotype switching-based AIS for this NP-hard 
problem. The developed IS-AIS algorithm is better fit the natural immune system than other 
immune-based algorithms. IS-AIS has three different mutation methods in isotype switching, where 
different combinations of the three mutation methods can search different solutions. The irregular 
search of isotype switching avoids falling into local optimum. To verify the solution quality, two 
algorithms (SA and TS) have been proposed. Extensive experiments with different size problems 
have shown that the IS-AIS algorithm can efficiently yield better solutions than the other 
algorithms. 
We may exploit the effectiveness of IS-AIS to other problems, such as scheduling problems 
and vehicle routing problems. Two changes may be made in somatic hypermutation and isotype 
switching of IS-AIS to further improve the algorithm; the easy mutation methods used may be 
replaced with other mutation methods, and the random selection can be changed by a dynamic 
environment while the algorithm is running. 
References 
Apte, U. M., Viswanathan, S., 2000. Effective cross docking for improving distribution efficiencies. 
International Journal of Logistics, 3 91-302. 
Bagheri, A., Zandieh, M. Mahdavi, I., Yazdani, M., 2010. An artificial immune algorithm for the 
flexible job-shop scheduling problem, Future Generation Computer Systems 26, 533-541. 
Boysen N, Fliedner M., 2010. Cross dock scheduling: classification, literature review and research 
agenda. Omega 38, 413-422. 
De Castro, L.N., Von Zuben, F.J., 2002. Learning and optimization using the clonal selection 
principle. IEEE Transactions on Evolutionary Computation 6, 239-251. 
Glover, F., 1986. Future paths for integer programming and links to artificial intelligence, 
Computers and Operations Research 13, 533-549 
39 
 
Table 1  
The detail of imow  
O m  
I  
1 2 3 4 5 6 7 
1 
1 1 0 1 1 0 1 0 
2 0 1 0 0 1 0 0 
2 
1 0 0 0 1 1 0 1 
2 0 0 0 0 0 1 0 
3 
1 0 1 0 0 0 0 0 
2 1 0 1 0 0 0 1 
 
 
 
Table 2  
The processing time of product m  on inbound truck i  
m  
i  
1 2 3 4 5 6 7 
1 3 1 3 2 6 1 8 
2 1 4 8 7 4 2 7 
 
 
 
Table 3  
The completion time of product m  on inbound truck i  
m  
i  
1 2 3 4 5 6 7 
1 3 17 12 14 19 5 11 
2 4 18 12 16 23 6 15 
 
41 
 
Table 6  
The computational results of small size problem 
Instances 
Solution First time to get solution Computational time 
IS-AIS SA TS IS-AIS SA TS IS-AIS SA TS 
S01S 22 22 22 0.00 0.00 0.00 0.09 1.50 1.03
S02S 17 18 78 0.02 0.02 0.03 0.16 2.47 1.56
S03S 45 45 270 0.00 0.03 0.11 0.27 4.27 2.61
S04S 8 8 8 0.00 0.02 0.00 0.11 1.70 1.13
S05S 36 124 135 0.00 0.03 0.00 0.17 2.92 1.80
S06S 88 100 255 0.00 0.02 0.06 0.33 5.33 3.19
S07S 13 13 13 0.00 0.02 0.00 0.11 1.89 1.23
S08S 31 46 186 0.00 0.05 0.00 0.20 3.31 2.03
S09S 113 113 122 0.02 0.42 0.03 0.38 6.49 3.58
S10S 31 52 49 0.09 1.16 0.05 0.33 4.97 2.22
S11S 50 72 73 0.02 1.99 0.24 0.39 8.16 3.74
S12S 128 139 248 0.59 0.66 2.16 1.25 11.31 8.22
S13S 10 58 11 0.02 0.11 0.14 0.27 4.30 2.53
S14S 58 82 71 0.31 1.61 0.67 0.74 8.52 4.64
S15S 162 185 179 1.36 7.95 1.38 2.09 20.13 8.28
S16S 20 54 67 0.02 0.06 0.05 0.30 4.63 2.66
S17S 92 133 91 0.08 4.88 1.06 0.53 12.34 5.39
S18S 188 214 508 1.64 6.20 0.84 2.45 19.47 8.36
S01L 0 69 0 0.02 0.22 0.05 2.88 46.31 26.27
S02L 20 283 0 4.88 4.55 0.09 9.64 81.80 46.13
S03L 585 603 2320 12.97 111.64 14.38 21.08 242.59 102.50
S04L 0 0 0 0.00 0.11 0.06 3.70 60.81 34.05
S05L 11 0 0 7.64 1.11 0.13 14.00 106.02 60.75
S06L 1010 942 3155 19.05 192.84 1.64 30.24 373.61 119.22
S07L 0 0 0 0.08 0.16 0.09 4.63 74.31 42.94
S08L 23 52 0 1.86 1.05 0.16 9.78 131.27 76.84
S09L 999 845 758 10.78 214.31 0.58 24.92 442.80 147.27
S10L 0 4 0 6.38 0.59 0.22 16.05 158.86 91.20
S11L 141 352 6 4.83 19.70 0.56 19.77 265.14 144.50
S12L 1021 991 3240 23.39 850.41 0.47 47.61 1252.02 242.11
S13L 12 39 0 2.61 0.84 0.22 13.97 191.86 105.73
S14L 214 46 4 11.59 50.67 0.69 29.74 352.81 172.31
S15L 1463 1368 291 27.25 1476.16 13.06 57.41 1978.91 310.44
S16L 1 0 0 23.86 3.02 0.25 37.05 223.69 121.00
S17L 157 202 0 20.33 268.30 0.39 41.61 630.06 200.77
S18L 841 348 0 34.61 415.55 1.42 70.83 1003.02 351.94
 
  
行政院國家科學委員會出席國際學術會議心得報告書 
 
計 畫 編 號： NSC 98-2221-E-011-052-MY3 
執 行 期 限：98 年 8 月 1 日至 99 年 7 月 31 日 
主   持  人：廖慶榮 
會 議 名 稱：The First POMS-HK International Conference 
會 議 地 點：Hong Kong  
會 議 日 期：December 30, 2009 
執 行 機 構：國立臺灣科技大學工業管理系 
 
 
一、前言 
 
POMS(Production and Operations Management Society/生產與作業管理學會)是位於美國的
生產與作業管理領域國際性學術組織，也是工業工程領域最重要的學術組織之一。前任香港
科技大學工業工程及物流管理系系主任李忠義博士目前擔任 POMS 亞澳地區的主席，在李忠
義博士的推動下，我國與大陸於 2008 年 6 月同時獲准成立分會，定名為 POMS-Taiwan 
Chapter，由本人擔任首任會長。 
香港於 2009 年 3 月申請成立 POMS-Hong Kong Chapter 分會，首任會長為香港中文大學
系統工程與工程管理系教授 Professor Janny M. Y. Leung （梁美兒博士），為推展會務，特舉
辦 The First POMS-HK International Conference 招募會員。為了慶賀香港分會成立，本人與葉
瑞徽教授一同參與本次國際研討會，一方面拓展 POMS-Taiwan Chapter 的知名度，一方面參
與 POMS-Hong Kong Chapter 活動以尋求進一步合作的機會。 
The First POMS-HK International Conference，由香港理工大學主辦，物流研究中心主任李
仲麟教授擔任會議主席，共有來自泛亞洲七個國家，約 100 多位學者參與盛會，以下報告參
加此次國際研討會的過程、心得、與收穫。 
 
二、會議過程與報告內容 
 
會議於 2009 年 12 月 30 日週三舉行，分為 17 個 Sessions 探討物流、產品設計、資訊技術、
科技管理、生產管理、後勤、與供應鏈管理，其間見到多位舊識及久聞其名的教授，如國際知
名學者 Hau L. Lee 教授、香港科技大學工業工程系前後任系主任 Chung-Yee Lee 教授與 Fugee 
Tsung 教授等，目前皆生產與作業管理領域的知名學者及國際著名期刊的主編。 
論文發表分為 17 個 Sessions 展開，共發表論文約 100 篇，分為以下主題： 
• Supply Chain Management 
• Financial Modeling 
• Empirical Studies in Operations Management  
• Inventory Management  
• Routing and Delivery Planning 
• Contracts and Incentives in Supply Chains 
• Pricing and Inventory Planning 
• Service Operations 
• Environmental Issues and Green Supply Chains 
• Production Planning and Control 
 3 
 
POMS-Taiwan Chapter 之國際交流。 
3. 本次研討會共有來泛亞洲多個國家，100 多位學者參與盛會，有效拓展台灣工業工程與管
理領域在國際舞台上的能見度，提昇國際交流的廣度與深度。 
 
四、結語與誌謝 
 
本屆研討會後，下次研討會將於香港科技大學舉辦，預計將由 POMS-Hong Kong Chapter
與 POMS-Taiwan Chapter 聯合舉辦，為兩分會合作開啟新的里程碑。本次能有機會代表台灣
POMS-Taiwan Chapter 出國參加 POMS-Hong Kong Chapter 成立研討會，是一個難得的經驗，
有機會與香港及澳亞地區工業工程學者交流學習，除了可以拓展國際視野外，又能學習新知，
感到非常具有意義。其感謝國科會提供這次參加國際研討會的補助，僅此誌謝。 
 
 5 
 
 
PANEL DISCUSSION
(5:05 pm – 6:00 pm; N001)
Production and Operations Management in a Changing Economy
Moderator:
Chung-Yee Lee
Chair Professor, Department of Industrial Engineering and Logistics Management, The Hong 
Kong University of Science and Technology
Panelists:
Hau L. Lee
Thoma Professor of Operations, Information and Technology, Graduate School of Business,
Stanford University
Janny M.Y. Leung
President, Production and Operations Management Society—Hong Kong Chapter
and Professor, Department of Systems Engineering and Engineering Management, The 
Chinese University of Hong Kong
Ching-Jong Liao
President, Taiwan Chapter, Production and Operations Management Society
and Professor & Vice President, National Taiwan University of Science and Technology
3/10
POMS-Taiwan Chapter
z Suggestions for POMS
¾ To establish a POMS-Australasia Society with its own 
regional board members
¾ To have a Chinese Language Website of POMS
¾ Membership
9 Discounted dues with less benefits 
9 Lifetime membership (or five-year membership)
¾ POMS Conference for Asia and Australia     
9 APIEMS (Asia Pacific Industrial Engineering and 
Management Society): Taiwan, Japan, Philippine, 
I d i Th il dn ones a, a an
9 IEEE International Conference on Industrial Engineering     
and Engineering Management (IEEM)
POMS-TAIWAN CHAPTER
4/10
IEM Dept. (58; 1030 faculty members)
College Univ. of Technology Universitiy
Σ๜׌಺Ꮠ଑
λ๜׌಺Ꮠ଑
ѷၠ׌಺Ꮠ଑
юе࣫׌ΣᏐ
юᡪ࣫׌ΣᏐ
ѳॳ࣫׌ΣᏐ
ଝ໐౱͹࣫׌ΣᏐ
ଝ໐ᓶ҂࣫׌ΣᏐ
జ໔࣫׌ΣᏐ
ΣӃΣᏐ
ΣဈΣᏐ
λѕΣᏐ
ܭਵΣᏐ
޽ۘΣᏐ
੭౉ΣᏐ
ٓܭ׌಺Ꮠ଑
ܭϿ׌಺Ꮠ଑
ڗ࡬׌಺Ꮠ଑
ܢׁ࣫׌ΣᏐ
ܢན࣫׌ΣᏐ
ܭ߲࣫׌ΣᏐ
ඩ່࣫׌ΣᏐ
໔ܳ࣫׌ΣᏐ
໵੩࣫׌ΣᏐ
λঈΣᏐ
λ๜ΣᏐ
ϏඣΣᏐ
ଝ໐৑Σ
గԐΣᏐ
జ๜ΣᏐ
߲ᄘ׌಺Ꮠ଑
ऎᇩᅳ౉Ꮠ଑
ॳѡ׌಺Ꮠ଑
ޯ֮࣫׌ΣᏐ
߲ю࣫׌ΣᏐ
߲ເ࣫׌ΣᏐ
࿱ࣸᑑ࣫׌ΣᏐ
࿒શ࣫׌ΣᏐ
ᇩܭ࣫׌ΣᏐ
юᡪΣᏐ
ғቨΣᏐ
ҚೝΣᏐ
೧҆ΣᏐ
๜௻ΣᏐ
࿮ӨΣᏐ
ႬҮ׌಺Ꮠ଑
ᑙଢ଼ᅳ౉Ꮠ଑
ᑱѵ׌಺Ꮠ଑
࠮ܭ࣫׌ΣᏐ
࠺ଢ଼࣫׌ΣᏐ
ᏹቨ࣫׌ΣᏐ
ᓘ๜࣫׌ΣᏐ
ӹвΣᏐ
ٓ࢘ΣᏐ
Ⴝ࿮ΣᏐ
ტፚΣᏐ
ᇼ໨ΣᏐ
ᕲӋΣᏐ
12 22 24 
POMS-TAIWAN CHAPTER
7/10
IEM Dept. with Ph.D. Program
University Ph D Master Master Total. . Full-Time Part-Time
ӹвΣᏐ 149 171 86 406
జ๜ΣᏐ 100 177 94 371
గԐΣᏐ 99 69 111 279
ҚೝΣᏐ 79 117 106 302
юᡪ࣫׌ΣᏐ 70 76 60 206
ϏඣΣᏐ 54 105 140 299
λঈΣᏐ 54 105 94 253
໔ܳ࣫׌ΣᏐ 43 173 61 277
ܭਵΣᏐ 37 127 37 201
λѕΣᏐ 17 61 69 147
೧҆ΣᏐ 14 64 71 149
юе࣫׌ΣᏐ 2 212 142 356
POMS-TAIWAN CHAPTER
8/10
IEM Research Sub-Programs
1 O i R h (S f C i Q i i. perat ons esearc  o t omput ng, uant tat ve 
Methods)
2 H F t (HCI I d t i l D i I d t i l. uman ac ors , n us r a  es gn, n us r a  
Safety) 
3 Production Systems (Operations Management  .  ,
SCM, Automation)
4 Information Systems (ICT MIS).   , 
5. Service Systems and Technology Management
POMS-TAIWAN CHAPTER
  
 
行政院國家科學委員會出席國際學術會議心得報告書 
 
計 畫 編 號： NSC 98-2221-E-011-052-MY3 
執 行 期 限：99 年 8 月 1 日至 100 年 7 月 31 日 
主   持  人：廖慶榮 
會 議 名 稱： The Second POMS-HK International Conference 
會 議 地 點：Hong Kong University of Science and Technology 
會 議 日 期： 100 年 1 月 6~7 日 
執 行 機 構： 國立臺灣科技大學工業管理系 
 
一、前言 
 
POMS (Production and Operations Management Society/生產與作業管理學會)是世界知名的
生產與作業管理領域國際性學術組織，也是工業工程領域最重要的學術組織之一。前任香港
科技大學工業工程及物流管理系系主任李忠義博士目前擔任 POMS 亞澳地區的主席，在李忠
義博士的推動下，我國與大陸於 2008 年 6 月同時獲准成立分會，我國分會定名為
POMS-Taiwan Chapter，由本人擔任首任會長。香港於 2009 年 3 月申請成立 POMS-Hong 
Kong Chapter分會，首任會長為香港中文大學系統工程與工程管理系教授Professor Janny M. Y. 
Leung（梁美兒博士）。 
POMS-Hong Kong Chapter 為推展會務，於 2009 年 12 月特舉辦 The First POMS-HK 
International Conference 招募會員，由香港理工大學主辦，物流研究中心主任李仲麟教授擔任
會議主席，共有來自泛亞洲七個國家，約 100 多位學者參與盛會。為了慶賀香港分會成立，
本人與現任會長葉瑞徽教授一同參與該次國際研討會。今年 The Second POMS-HK 
International Conference 由香港科技大學主辦，本人受聘為此次會議的 Program Committee 
成員（參見附錄），為了一方面拓展 POMS-Taiwan Chapter 的知名度，一方面參與 POMS-Hong 
Kong Chapter 活動以尋求進一步合作的機會，特別再度參加本次國際研討會。 
 
二、會議過程與報告內容 
 
會議於 2011 年 1 月 6～7 日於香港科技大學舉行，本次會議主題為「POM in the Economy 
Recovery」，分為 4 大 Sessions 探討物流、產品設計、資訊技術、科技管理、生產管理、後勤、
與供應鏈管理，其間見到多位舊識及久聞其名的教授，如 Christopher Tang 教授、Xie Min 教
授、香港科技大學運籌管理系前後任系主任 Chung-Yee Lee 教授與 Fugee Tsung 教授等，目前
皆為生產與作業管理領域的知名學者及國際著名期刊的主編，以及大陸「1 號店」創設者 Gang 
Yu 博士，並有台灣各大學十餘位學者參加。 
論文發表分為 13 個主題展開，共發表論文約 100 篇，分為以下主題： 
• Corporate social responsibility and sustainability  
• Environmental operations management  
• International operations management  
• Logistics  
• Production planning and control  
• Quality management  
• Revenue management  
 3 
 
Chapter 之國際交流。 
3. 本次研討會共有來泛亞洲多個國家，100 多位學者參與盛會，有效拓展台灣工業工程與管
理領域在國際舞台上的能見度，提昇國際交流的廣度與深度。 
 
四、結語與誌謝 
 
本屆研討會後，下次研討會將仍在香港舉辦，預計將由 POMS-Hong Kong Chapter 與
POMS-Taiwan Chapter 聯合舉辦，為兩分會合作開啟新的里程碑。本次能有機會代表台灣
POMS-Taiwan Chapter 出國參加 POMS-Hong Kong Chapter 成立研討會，是一個難得的經驗，
有機會與澳亞地區工業工程學者交流學習，除了可以拓展國際視野外，又能學習新知，感到非
常具有意義。感謝國科會提供這次參加國際研討會的資助，僅此誌謝。 
 
1 
 
行政院國家科學委員會出席國際學術會議心得報告書 
 
計 畫 編 號： NSC 98-2221-E-011-052-MY3 
執 行 期 限：99 年 8 月 1 日至 100 年 7 月 31 日 
主   持  人：廖慶榮 
會 議 名 稱： The First IIE Asian Conference 2011 
會 議 地 點：Shanghai Jiao Tong University, 
會 議 日 期： 100 年 6 月 10~12 日 
執 行 機 構： 國立臺灣科技大學工業管理系 
 
一、前言 
 
本次參加 IIE Asian Conference 2011，該會議由上海交通大學與香港科技大學共同主辦，
於6月10-12至在上海舉行，全程使用英文，會議議程等相關資料如附件一。IIE（Institute of 
Industrial Engineers）是世界工業工程（IE）最大的專業組織，今年是第一次舉辦亞洲的國
際會議，希望能彙集亞洲工業工程的學者與專家。本人擔任此次會議的 Regional Program 
Chair，並發表一篇論文。 
 
二、會議過程與報告內容 
 
此次會議內容非常豐富，第一天的所有活動在上海交大的閔行校區（Minhang Campus）
舉行。第一場 Keynote Speech 是由香港城市大學校長郭位（Way Kuo）（亦是台灣中央研
究院院士）主講 Reliability of the Nuclear Power System；第二場 Keynote Speech 是由 IIE 的
資深副理事長（Senior Vice President）Gregory H. Watson 主講 Rebirth of Scientific 
Management in the Internet Age；第三場由 University of California, Berkeley 教授 Candace Arai 
Yano 主講 Educating the Next Generation of Industrial Engineering Scholars；第四場由大陸工
程院士 Zhongtuo Wang 主講 From Traditional Systems Engineering to Complex Systems 
Engineering。以上四場 Keynote Speech 都非常精彩，與會者都受益良多。 
 
下午的四場 Panel 內容亦非常豐富，主題包括： 
z Meeting the Editors to Discuss the Research Publication Issues 
z IE in 2020’s 
z Discussions on Service-oriented Manufacturing 
z The Application of IE in Healthcare Engineering 
 
主持人以及與談人都是知名的國際學者，包括 Georgia Tech 的 Jianjun Shi 教授、香港科大
的 Chung-Yee Lee 教授、Fugee Tsung 教授、新加坡國立大學的 Loon Ching Tang 教授。此
外，亦安排多位產業界的專家參與討論，包括香港 SMTHK 的總裁 KB Chan、TQM Consultant 
Aaron Tong、Shanghai Prime Machinery 公司總經理 Kang Hu、China Rongsheng Heavy 
Industries Group 董事長 Qiang Chen。 
 
由於這是 IIE 在亞洲舉辦的第一次國際會議，IIE Senior VP Prof. Gregory Walton 在第
3 
 
5 
 
7 
 
9 
 
11 
 
 
 
 
IIE Asian Conference 2011 
June 10-12, 2011, Shanghai, China 
 
Dear Chien-Wen Chao, Shu-Cherng Fang , Ching-Jong Liao  
 
We are very pleased to inform you that your full paper entitled 
"A Discrete Electromagnetism-like Mechanism for the Permutation Flowshop Scheduling Proble
m " has been accepted by IIE Asian Conference 2011. We have received more than 200 full 
papers or abstracts submissions for the conference. We sincerely invite you to attend the 
conference and give an oral presentation. 
 
Please find below the detailed instructions regarding preparing the final submission and 
registration.  
 
1. Final full paper or abstract submission 
Please follow the specific format in the attachment named “Guideline for the Final Paper” to 
prepare the final version of your full paper/ abstract. Each full paper/abstract should follow the 
A4 paper format (Microsoft Word/ Latex) with title, authors' names, affiliations and email 
addresses, an 150-300 words abstract, with font size at 10 pts, only in English. 8 pages are 
limited. 
 
2. Registration and payment 
Each regular registration can register for at most two papers or abstracts, but each student 
registration can only register for one paper or abstract. If you are registered as a student, 
please scan and send your student identification to iie@sjtu.edu.cn. 
 
*VISA payment.  
You will find attached an authorization letter, please print it, sign by hand, scan, and e-mail 
the scanned copy to iie@sjtu.edu.cn.  
*Payment is required before May 15th to have your paper included. 
* On-site (June 10th).  
Cash only.  
For details, see 
http://iieasian2011.sjtu.edu.cn/register/guide.asp 
We charge different for early and late registration, so we strongly recommend you to register 
before April 15th to get a discount. 
3. Accommodation  
We suggest booking hotels early. The Longemont Shanghai is our recommendation. For details, 
see 
http://iieasian2011.sjtu.edu.cn/page.asp?id=101 
  
2011-04-01  
 
附件二 
13 
 
Abstract 
The permutation flow-shop scheduling problem (PFSP) is a production scheduling problem, 
which is one of the hardest combinatorial optimization problems. As the computational 
complexity of PFSF, the current exact methods are limited to solve small to moderate size 
problems. Hence, lots of meta-heuristics have been developed for PFSP to obtain a near-optimal 
solution within a reasonable computational time. Electromagnetism-like mechanism (EM) is a 
novel meta- heuristic, inspired by the attraction-repulsion mechanism of electromagnetism theory. 
A few applications of EM to scheduling problems are developed recently and the results show 
that EM is competent to solve PFSP. However, these EMs are not satisfied enough for solving 
PFSP. In this study, we present a new discrete EM (DEM) for minimizing the makespan of PFSP. 
In our algorithm, we propose an attraction- repulsion mechanism involving crossover and 
mutation operators. To validate the proposed algorithm, comparisons with two other discrete EMs 
are conducted. Computational results show that the proposed DEM is the best of the three 
versions.  
 
Keywords: Meta-heuristic; Electromagnetism-like mechanism; Flow-shop; Scheduling  
  
15 
 
and the vehicle routing problem (Yurtkuran and Emel [31]). In addition, Javadian et al. [32, 33] 
developed a discrete binary version of EM for solving the flowshop problem and traveling 
salesman problem. 
In this paper, we develop a new discrete version of EM (DEM) for solving the PFSP. It 
involves some crossover and mutation operators in the attraction-repulsion mechanism such that 
the proposed algorithm could generate integer valued solutions. To evaluate the performance of 
the proposed algorithm, in this paper, we compare the proposed DEM with two existing discrete 
EMs [26, 33] by solving PFSP with the minimum makespan.   
The rest of this paper is organized as follows. In Section 2, the basic ideas of EM are 
introduced. In Section 3, the proposed DEM is presented along with a simple example. In Section 
4, a computational experiment is conducted to evaluate the performance of the proposed 
algorithm. Finally, conclusions and future research are given in Section 5.  
 
2. Electromagnetism-like mechanism  
EM was first developed by Birbil and Fang [23] in 2003 for solving unconstrained nonlinear 
optimization problems with continuous variables in the following form:  
min ( )
s.t. [ , ],
f
l u∈
x
x
 (5) 
where [ , ] : { | , 1,..., }d k k kl u l x u k d= ∈ℜ ≤ ≤ =x , d presents dimension of the problem (i.e., the 
number of variables), and kl  and ku  are the lower and upper bounds of the kth coordinate, 
respectively. Because of the simplicity in maintaining feasibility, this model has been extensively 
studied by random method [34] and direct methods [35]. The EM has been tested to validate the 
efficiency and effectiveness in solving problem (5). Experimental results show that EM could 
converge rapidly to the global optimum, in terms of the number of function evaluations [36].  
EM was motivated by the attraction-repulsion mechanism of electromagnetism theory to 
move particles (i.e., solutions) toward optimality based on Cowan’s law [37]. In the solution 
space, each particle is assumed as a charged particle where the charge of each point is related to 
its objective function value. The point with a better objective function value possesses a higher 
charge, and vice versa. Then, points with higher charge attract other points, and points with lower 
charge repulse other points. Finally, the force exerted on a point via other points is inversely 
proportional to the distance between the points and directly proportional to the product of their 
charges. The basic procedures of the EM include initialization, local search, calculating total 
force, and movement. The generic pseudo-code for the EM is given in Algorithm 1.  
 
ALGORITHM 1. EM(NP, MAXITER, LSITER, )δ  
Input parameters:  
NP: the number of particles (i.e., population size) 
MAXITER: the maximum number of iterations 
LSITER: the maximum number of local search iterations 
δ : local search parameter, [0,1]δ ∈  
 1: initialization() 
 2: iteration← 1 
 3: WHILE iteration<MAXITER DO 
 4:  local search(LSITER, δ ) 
17 
 
π   the job permutation. (i.e., 1 2{ , ,..., }nπ π π=π ) 
Let max ( )C π  denote the makespan of the job permutation π  to be minimized. In what follows, 
we introduce the general scheme of the DEM with sub-procedures.  
 
3.1. General scheme of DEM 
The general scheme of DEM consists of three main procedures. They are the initialization of 
the algorithm (Initialization), the calculation of the charge of each particle (Com_charge), and the 
movement according to the attraction-repulsion mechanism (ATT_REP). The general scheme is 
described below.  
 
ALGORITHM 2. DEM(NP, MAXITER, ATT, REP, Num_select) 
Input parameters:  
NP: the number of particles (i.e., population size) 
MAXITER: the maximum number of iterations 
ATT: the parameter of attraction operator 
REP: the parameter of repulsion operator 
Num_select: the parameter of attraction-repulsion mechanism 
 1: Initialization() 
 2: iteration← 1 
 3: WHILE iteration<MAXITER DO 
 4:  ←q Com_charge() 
 5:  ATT_REP (q , ATT, REP, Num_select) 
 6:  iteration← iteration 1+  
 7: END WHILE 
 
3.2. Initialization 
Before executing the DEM, we need to set five input parameters as defined in Algorithm 2, 
including NP, MAXITER, ATT, REP, and Num_select. Procedure 1 gives the pseudo-code of the 
Initialization procedure. Suppose that 1 2( , ,..., )
i i i i
nπ π π=π  is the i th particle in the population 
representing a permutation of n jobs, in which ikπ  is the k th job in the permutation iπ , where 
1,...,k n= . In the literature, there exist some heuristics for solving the PFSP with makespan 
minimization [4, 5, 6]. CDS (algorithm of Campbell, Dudek, and Smith) method is presented by 
Campbell et al. [4] (line 1) and rapid access with extensive search (RAES) is developed by 
Dannenbring [5] (line 2). The complexities of CDS and RAES methods are 2 log( )nm mn n+  
and log( )n n nm+ , respectively. Although the method in Taillard [6] appears to be the best 
polynomial heuristic, its complexity is 2n m . In order to obtain a good initial solution effectively, 
CDS and RAES methods are appropriate for the initial population in our DEM and are described 
in the appendix. Notice that CDS method can generate 1m−  different permutations while 
RAES method generates only one permutation. Then, a GA exchange mutation operator [12] 
(lines 3-9) is used to generate the remaining NP m−  permutations from a permutation selected 
randomly among the known m permutations. The procedure ends with NP particles being 
identified and the particle with the best makespan is stored in bestπ  (line 10). In the procedure, 
19 
 
obtain a permutation and compute the total force. Hence, in the proposed DEM we develop a new 
mechanism executing the attraction and repulsion which involves crossover and mutation 
operators simultaneously. Equipped with the crossover and mutation operators, the proposed 
mechanism can work on permutation solutions to accomplish the intention of the original EM.  
In this mechanism, when max max( ) ( )
i jC C>π π , particle i tends to attract genes (jobs) from 
particle j. Hence, a crossover operator is used to ensure that the job in the specific position of 
particle j will be assigned exactly to the corresponding position of particle i. That means some 
jobs in particle i will be assigned to the same positions as in particle j since the objective value of 
particle j is better than that of particle i. Contrarily, when max max( ) ( )
i jC C≤π π , particle i tends to 
repel genes existing in particle j. Then, a mutation operator is employed to prevent the job in the 
specific position of particle j from being allocated in the same position of particle i. That means a 
job in particle i will not be allocated in the same position as in particle j since the objective value 
of particle j is worse than that of particle i. Procedure 3 gives the pseudo-code of ATT_REP 
procedure.  
 
PROCEDURE 3. ATT_REP() 
 1: FOR 1i =  to NP DO  
 2:  generate an empty vector 1 2( , ,..., )
i i i i
nο ο ο= ∈∅ο  
 3:  FOR 1j =  to NP DO 
 4:   IF max max( ) ( )
i jC C>π π  THEN 
 5:    FOR 1k =  to n DO //attraction 
 6:     (0,1)Uλ ←  
 7:     0Count ←  
 8:     IF i jATT q qλ < × ×  THEN 
 9:      i jk kο π←  
 10:      1Count Count← +  
 11:     END IF 
 12:     IF _Count Num select=  THEN 
 13:      1k n= +  
 14:     END IF 
 15:    END FOR 
 16:   ELSE  
 17:    FOR 1k =  to n DO //repulsion 
 18:     (0,1)Uλ ←  
 19:     0Count ←  
 20:     IF i jREP q qλ < × ×  THEN 
 21:      1
i j
n k kο π− + ←  
 22:      1Count Count← +  
 23:     END IF 
 24:     IF _Count Num select=  THEN 
 25:      1k n= +  
 26:     END IF 
21 
 
1 10 (734 724)exp
(734 724) (806 724) (810 724) (724 724) (832 724)
0.7049
q ⎡ ⎤− × −= ⎢ ⎥− + − + − + − + −⎣ ⎦
=
 
The remaining charge of each particle is shown in Table 2.  
Step 3. Movement: In this step, each particle is considered to be either attracted or repulsed 
by the other particles. First, generate an empty vector 1o  and consider the repulsion between 1π  
and 2π  since 1 2max max( ) ( )C C<π π . For 11π , a random number 0.3175λ =  is generated, which 
is larger than 1 2REP q q× × = 0.0200  so no repulsion is processed. Until 18π , a random number 
0.0139λ =  is generated, which is less than 1 2REP q q× × = 0.0200 . 18π  is repulsed by 28π , so 
set 1 210 8 1 8 8o π− + = = . Because Num_select 1= , we do not need to consider the remaining jobs. 
Similar repulsion occurs between 16π  and 36π , so set 1 310 6 1 6 5o π− + = = . Then, because 
1 4
max max( ) ( )C C>π π , 1π  is attracted by 4π . Consider 17π , a random number 0.7298λ =  is 
generated, which is less than 1 4ATT q q× × = 3.5247 . Hence, 17π  is attracted by 47π , so set 
1 4
7 7 1o π= = . Insert unscheduled jobs from 1π  into the empty positions of 1o  successively and 
obtain 1 =o (3,9,8,6,5,10,1,4,2,7) . In the first iteration of this numerical example, the other 
attractions occur between 23π  and 43π , 39π  and 19π , and 35π  and 45π . Hence, set 2 43 3 8o π= = , 
3 4
5 5 4o π= = , and 3 19 9o π= =  2 . The particles along with the makespan and the charge of each 
particle for the first iteration are shown in Table 3.  
Set iteration iteration 1= +  and repeat Steps 2 and 3. When iteration 50= , we get the final 
result shown in Table 4.  
 
4. Computational experiments  
To validate the effectiveness and efficiency of the proposed DEM, we need to conduct 
computational experiments on those reported testing problems and compare the results with 
existing methods in the literature. The experiments were conducted on the benchmark problems, 
given by Taillard [38], with 20,50,100n =  and m =  5,10,20 . There are 10 instances for each 
problem size and 90 problem instances in all. The problem instances and their best upper bounds 
can be downloaded from http://mistic.heig-vd.ch/taillard. In our computational experiments, all 
tests were conducted using a PC with an Intel Core 2 of 2.0 GHz CPU and 2.0 GB RAM. All 
algorithms used in this study were coded in JAVA.  
The performance of the DEM is compared with a discrete binary version of EM (BEM) of 
Javadian et al. [33] and a hybrid EM using random-key method (RKEM) of Chang et al. [26], the 
only two existing discrete versions of EM for the scheduling problem. The population size (NP) 
of these three algorithms is set at 20 and the initial solutions of the two competing algorithms are 
constructed according to Section 3.2. The same termination criterion (MAXITER) of 500 m×  is 
employed as in BEM and RKEM. The parameters of DEM are set by _ 1,2,5Num select =  for 
20,50,100n = , respectively; 10ATT = ; 45 10REP −= × . 10 runs are conducted for each 
problem instance. The average relative percentage deviation is computed as follows:  
23 
 
1 (M1) for each job for the ath auxiliary problem.  
Step 5. Compute ,2 ,1
aa
j j kk m a pθ = + −= ∑  and establish a column vector of processing times on 
Machine 2 (M2) for each job for the ath auxiliary problem.  
Step 6. Apply Johnson’s rule for the 2-stage problem established in Step 4 and Step 5 and 
determine the sequence aS  and store.  
Step 7. Check a with 1m− ; if 1a m< − , set 1a a= +  and repeat Step 4 to Step 6; if 
1a m= − , stop. 1m−  sequences are generated.  
 
RAES method [5] 
Step 1. Define ,j kp  to be the processing time for the j th job on the k th machine in the main 
problem and ,j kP  the auxiliary problem processing for the jth job on the k th machine 
( 1,2,...,j n=  and 1,2)k = ;  
,1 ,
1
( 1)
m
j j k
k
P m k p
=
= − +∑ , ,2 ,
1
( )
m
j j k
k
P k p
=
= ∑  
Step 2. Apply Johnson’s rule for the 2-stage problem established in Step 1 and obtain the 
sequence S .  
Step 3. Use the best immediate neighbor to generate further neighbors. Continue the process to 
generate new solutions with improved objective values until no further improved 
solution can be found.  
 
References 
[1] Rinnooy Kan AHG. Machine scheduling problems: Classification, complexity, and 
computations. PhD thesis, University Amsterdam; 1976.  
[2] Ignall E, Schrage L. Application of the branch-and-bound technique to some flowshop 
scheduling problems. Operations Research 1965; 13; 400-412. 
[3] Stafford EF. On the development of a mixed integer linear programming model for the 
flowshop sequencing problem. Journal of Operational Research Society 1988; 39; 
1163-1174.  
[4] Campbell HG, Dudek RA, Smith ML. A heuristic algorithm for the n job, m machine 
sequencing problem. Management Science 1970; 16; B630-B637. 
[5] Dannenbring DG. An evaluation of flow shop sequencing heuristics. Management Science 
1977; 23; 1174-1182.  
[6] Taillard E. Some efficient heuristic methods for the flowshop sequencing problems. 
European Journal of Operational Research 1990; 47; 65-74.  
[7] Rajendran C, Ziegler H. Ant-colony algorithms for permutation flowshop scheduling to 
minimize makespan/total flowtime of jobs. European Journal of Operational Research 2004; 
155; 426-438.  
[8] Andreas N, Omirou S. Differential evolution for sequencing and scheduling optimization. 
Journal of Heuristics 2006; 12; 395-411.  
[9] Onwubolu G, Davendra D. Scheduling flow shops using differential evolution algorithm. 
European Journal of Operational Research 2006; 171; 674-692.  
[10] Pan Q-K, Tasgetiren MF, Liang Y-C. A discrete differential evolution algorithm for the 
permutation flowshop scheduling problem. Computers and Industrial Engineering 2008; 55; 
795-816.  
25 
 
Applied Sciences 2008; 8; 3621-3629.  
[29] Roshanaei V, Khaleghei A, Balagh G, Esfahani MMS, Vahdani B. A mixed-integer linear 
programming model along with an electromagnetism-like algorithm for scheduling job shop 
production system with sequence-dependent set-up times. International Journal of 
Advanced Manufacturing Technology 2010; 47; 783-793.  
[30] Tavakkoli-Moghaddam R, Khalili M, Naderi B. A hybridization of simulated annealing and 
electromagnetic-like mechanism for job shop problems with machine availability and 
sequence-dependent setup times to minimize total weighted tardiness. Soft Computing 2009; 
13; 995-1006.  
[31] Yurtkuran A, Emel E. A new hybrid electromagnetism-like algorithm for capacitated vehicle 
routing problems. Expert Systems with Applications 2010; 37; 3427-3433.  
[32] Javadian N, Gol Alikhani M, Tavakkoli-Moghaddam R. A discrete binary version of the 
electromagnetism-like heuristic for solving traveling salesman problem. Lecture Notes in 
Computer Science 2008; 5227; 123-130.  
[33] Javadian N, Gol Alikhani M, Tavakkoli-Moghaddam R. Solving a single machine 
scheduling problem by a discrete version of electromagnetism-like method. Journal of 
Circuits, Systems, and Computers 2009; 18; 1597-1608.  
[34] Demirhan M, Özdamar L, Helvacıoĝlu L, Birbil Şİ. FRACTOP: A geometric partitioning 
metaheuristic for global optimization. Journal of Global Optimization 1999; 14; 415-435.  
[35] Huyer W, Neumaier A. Global optimization by multilevel coordinate search. Journal of 
Global Optimization 1999; 14; 331-355.  
[36] Birbil Şİ, Fang S-C, Sheu R-L. On the convergence of a population-based global 
optimization algorithm. Journal of Global Optimization 2004; 30; 301-318.  
[37] Cowan EW. Basic electromagnetism. Academic Press, New York; 1968.  
[38] Taillard E. Benchmarks for basic scheduling problems. European Journal of Operational 
Research 1993; 64; 278-285.  
 
  
27 
 
Table 4  
Final result of Example 1.  
iπ  max ( )iC π iq  
1 (3, 2,8,9, 6,5,10, 4,1, 7)=π  784 0.1193 
2 (3, 6,8,9,10,1,5, 2, 4, 7)=π  759 0.2523 
3 (3,8,9,6,10,5,2,1,4,7)=π  767 0.1985 
4 (3,8,9, 6,1,10,5, 4, 2, 7)=π  713 1.0000 
5 (7,3,8, 6,1,10, 4,5,9, 2)=π  876 0.0076 
 
 
Table 5  
Performance and CPU time of DEM and other two EMs. 
 BEM  RKEM DEM 
 n×  m avgΔ  minΔ avgt   avgΔ minΔ avgt  avgΔ minΔ avgt  
 20×  5 2.67 1.51 4.71 2.52 1.43 0.22 1.10 0.48 1.27 
 20×10 4.37 2.52 4.42 5.07 3.38 0.24 2.10 0.97 1.20 
 20×20 3.37 2.23 4.44 4.44 3.13 0.31 1.60 0.74 1.37 
 50×  5 1.32 0.57 58.95 1.40 0.65 1.56 0.24 0.11 7.10 
 50×10 6.48 5.20 54.45 7.72 6.53 1.79 2.97 2.12 6.72 
 50×20 8.48 7.30 55.64 9.94 9.06 2.15 4.07 3.24 7.30 
100×  5 0.74 0.41 463.61 0.71 0.39 8.05 0.21 0.05 33.79 
100×10 3.98 3.10 390.80 4.84 3.94 8.74 1.54 1.02 32.63 
100×20 8.79 7.73 370.71 10.38 9.90 10.37 4.56 3.85 33.72 
Avg. 4.47 3.40 156.41  5.22 4.27 3.71 2.04 1.40 13.90 
 
 
2 
 
Ulsan National Institute of Science and Technology (UNIST) 的 Vice President。  
Prof. Jung 提到許多如何能夠在一個系上（或學校）找出焦點方向，全力發展。 
 
10月15日下午參加 APIEMS 的 Board Meeting，這是此行最重要的目的。今
年的理事會出席理事相當踴躍，共二十餘位理事出席，包含台灣的三位：江行全
教授、周雍強教授和我本人。這次理事會共有15項議題，其中比較重要的是 
z 是否應建立 Fellow 制度？這個問題因為兩年前有人提起，去年會議中決
定成立一個委員會先行研議。會議中原則上建議朝此方向進行，並由該
委員會擬定實施細則，明年的理事會中再討論定案。本案的通過，對台
灣的工業工程學會跨入國際舞台，多了一個橋樑。 
z 確定明年的會議於12月初在泰國的普吉島舉行。 
z 兩位新任理事人選（蔡篤銘教授及簡禛富教授）順利獲得理事會通過，
使得台灣的代表在理事會的人數最多。 
z 許多理事對於目前 APIEMS 期刊的品質提出許多意見。會中決定將所提
出的議題彙整，並在次日的編輯會議中再詳細討論。 
 
下午的四場 Panel discussion 的內容亦非常豐富，主題包括： 
z Meeting the Editors to Discuss the Research Publication Issues 
z IE in 2020’s 
z Discussions on Service-oriented Manufacturing 
z The Application of IE in Healthcare Engineering 
 
主持人以及與談人都是知名的國際學者，包括 Georgia Tech 的 Jianjun Shi 教授、
香港科大的 Chung-Yee Lee 教授、Fugee Tsung 教授、新加坡國立大學的 Loon 
Ching Tang 教授。此外，香港方面安排多位產業界的專家參與討論，包括香港
SMTHK 的總裁 KB Chan、TQM Consultant Aaron Tong、Shanghai Prime Machinery 
公司總經理 Kang Hu、China Rongsheng Heavy Industries Group 董事長 Qiang 
Chen。 
 
本 人 和 博 士 生 鍾 翠 萍 共 同 發 表 論 文 An immunoglobulin-based artificial 
immune system for solving hybrid flow shop problem。大約有十餘人參加本篇論文
的發表，對於我們提出的 immunoglobulin-based artificial immune system 十分有興
趣，所發表的論文如附件二。 
 
四、結語與誌謝 
 
綜合而言，本次研討會相當盛大，但由於主辦的大陸方面，許多準備及後勤
工作沒有做得很好，參與人數並不太多，約200人左右，是歷年來最少的一次。
4 
 
 
 
The Twelfth Asia Pacific Industrial Engineering and 
Management Systems Conference 
October 14-17, 2011, Friendship Hotel, Beijing, China 
Title: An immunoglobulin-based artificial immune system for solving hybrid flow 
shop problem 
Authors: Ching-Jong Liao and Tsui-Ping Chung  
ID number: 336 
Dear Prof. Liao: 
 
According to the review reports on your submitted paper, I am pleased to inform you 
that, your above referenced paper has been accepted for publication in the 
Proceedings of the Twelfth Asia Pacific Industrial Engineering and Management 
Systems Conference to be held from October 14-17, 2011 in Friendship Hotel, Beijing, 
China. 
 
Early registration fee before August 15, 2011 is US$400 for faculty members and 
US$240 for students. Registration fee includes a copy of the conference proceedings, 
conference banquets, and all meals but not for hotel. Please read and complete the 
attached files carefully.  
 
Once again, thank you for your interest and cooperation. We are looking forward to 
seeing you in Beijing and sharing your wisdom. 
 
Sincerely yours, 
 
Zixiong Peng, Secretary, APIEMS 2011 
On behalf of Prof. Baoding Liu, General Chair 
Uncertainty Theory Laboratory 
Department of Mathematical Sciences 
Tsinghua University 
Beijing 100084, China 
Tel: +86.10.51536956 
apiems@math.tsinghua.edu.cn 
 
附件一 
6 
 
al.,2007; Zandieh et al., 2006; Debels et al., 
2006). In this paper, we will present an 
immunoglobulin-based AIS algorithm, called 
IAIS, for HFS with the objective of minimizing 
makespan. The proposed IAIS algorithm is 
based on a new somatic hypermutation method 
to reach affinity maturation and a new somatic 
recombination method, also called clonal 
selection. The IAIS will be tested on the 
benchmark problems of Carlier and Néron 
(2000). 
The remainder of this paper is organized as 
follows. In the next section, we introduce the 
immune response process and inspiration of the 
immune system. In section 3, a novel AIS 
algorithm is proposed. Computational results are 
provided in section 4. Finally, conclusions and 
future research directions are given in section 5. 
2. GENERAL SCHEME OF IMMUNE 
SYSTEM 
In this section, we introduce the “natural” 
immune system which is based on the book by 
Parham (2004). Animals use the immune system 
to defend their bodies from invasion by other 
organisms. Antibodies are produced by B cells 
of the immune system in response to infection. 
Their function is to bind pathogens when 
pathogens are encountered in the body. The 
molecules to which antibodies bind are called 
antigens. When antigens and antibodies have 
complementary shapes, they can bind together. 
After binding, the antibody disables the 
pathogens so that the pathogens are destroyed 
easily by the immune system.  
2.1 Somatic recombination 
Each antibody is formulated by the genes 
which are sequenced as a string. To produce 
additional diversity in the antigen-binding sites 
of antibodies, the partial genes of antibody are 
cut and spliced randomly by somatic 
recombination during the development of B cells. 
The process is also called clonal selection. 
2.2 Somatic hypermutation 
It is noted that antibodies are the secreted 
form of immunoglobulins. Immunoglobulins are 
divided into four isotypes (classes) including 
IgA, IgE, IgG, and IgM, where Ig stands for the 
immunoglobulin. Each isotype has specialized 
functions and each antibody belongs to an 
isotype of immunoglobulin.  
The first antibodies produced after an 
encounter with antigen is IgM. The function of 
IgM is to identify the antigen, after which it is 
transferred to one of another three isotypes, IgG, 
IgA, and IgE to disable the antigen. IgG is 
smaller and more flexible than IgM, and thereby 
it is easier to access antigen. The function of IgA 
is to transport and diffuse into extra vascular. No 
isotype of immunoglobulins can defend the 
antigen in the extra vascular except IgA. IgE is 
an immunoglobulin with the function of 
sensitization of mast cell which can destroy the 
antigen.  
The switching process from IgM to the 
one of three isotypes of immunoglobulins (IgG, 
IgA and IgE) is called somatic hypermutation. 
2.3 Affinity maturation 
Affinity is a force between antigen and 
antibody. The better the general fit between the 
interacting surfaces of antigen and antibody, the 
higher the affinity is. After somatic 
hypermutation, some of mutant antibodies with 
higher affinities may be produced. This 
phenomenon is called affinity maturation. 
2.4 Elimination 
The bone marrow pushes out billions of B 
cells into the peripheral circulation in a day. 
Those B cells are stored in a repertoire where 
there is a limited space for the B cells. Unless B 
cells encounter the specific antigen, B cells are 
dead within a period. Thus, B cells repertoire is 
never static, and newly generated antibodies are 
continually being tested against the antigen 
infection. 
According to the process of the immune 
response, the proposed artificial immune system 
is presented in the next section.  
3. THE PROPOSED AIS ALGORITHM 
In this section, the structure of the 
proposed immunoglobulin-based AIS algorithm 
(IAIS) is presented. The basic idea of IAIS is 
from the natural immune system where the 
objective is to disable the antigens quickly and 
effectively. Evolution of IAIS is based on the 
somatic recombination and affinity maturation of 
the natural immune system. The proposed 
algorithm is summarized in Figure 1.  
3.1 Somatic recombination 
A number B  of n  jobs are randomly selected 
in each antibody and the sequence of antibody 
with the best objective function in the current 
generation is used to be a standard string. Those 
selected jobs in the antibody should follow the 
sequence of the standard string to rearrange its 
sequence (see Figure 2). 
3.2 Somatic hypermutation 
There are four isotype immunoglobulins, 
8 
 
based algorithms, i.e., AIS and QIA. For the hard 
problems, IAIS can solve 18 of the 24 problems 
(75%) with the smallest average percentage 
deviation among the algorithms. For the easy 
problems, all methods can not reach LB for six 
of the problems, but actually they reach 
optimum for the six problems based on the total 
enumeration of possible schedules. Both IAIS 
and AIS algorithms can solve 47 of the 53 
problems (88.7%), but the average deviation of 
IAIS is only 0.95% compared to 0.99% of AIS. 
QIA can solve only 29 problems from the 53 
problems.  
The performance of all methods is 
summarized in Table 2, where the column “% 
solved” denotes percentage of the optimally 
solved problems, and “% deviation” denotes the 
average percentage deviation values for easy and 
hard problems.
 
Table 1 Comparison results of the immune-based algorithms on benchmark problems (bold represented 
problems are hard problems) 
Problem IAIS QIA AIS LB % deviation Cmax CPU Cmax CPU Cmax CPU IAIS QIA AIS 
j10c5a2 88 0.003  88 - 88 1 88 0.00  0.00  0.00  
j10c5a3 117 0.380  117 - 117 1 117 0.00  0.00  0.00  
j10c5a4 121 0.049  121 - 121 1 121 0.00  0.00  0.00  
j10c5a5 122 0.025  122 - 122 1 122 0.00  0.00  0.00  
j10c5a6 110 0.047  110 - 110 4 110 0.00  0.00  0.00  
j10c5b1 130 0.023  130 - 130 1 130 0.00  0.00  0.00  
j10c5b2 107 0.025  107 - 107 1 107 0.00  0.00  0.00  
j10c5b3 109 0.016  109 - 109 1 109 0.00  0.00  0.00  
j10c5b4 122 0.030  122 - 122 2 122 0.00  0.00  0.00  
j10c5b5 153 0.017  153 - 153 1 153 0.00  0.00  0.00  
j10c5b6 115 0.006  115 - 115 1 115 0.00  0.00  0.00  
j10c5c1 68 0.052  69 - 68 32 68 0.00  1.47  0.00  
j10c5c2 74 0.133  76 - 74 4 74 0.00  2.70  0.00  
j10c5c3 71 0.344  74 - 72 a 71 0.00  4.23  1.41  
j10c5c4 66 0.028  75 - 66 3 66 0.00  13.64  0.00  
j10c5c5 78 0.178  79 - 78 14 78 0.00  1.28  0.00  
j10c5c6 69 0.098  72 - 69 12 69 0.00  4.35  0.00  
j10c5d1 66 0.047  69 - 66 5 66 0.00  4.55  0.00  
j10c5d2 73 0.063  76 - 73 31 73 0.00  4.11  0.00  
j10c5d3 64 0.055  68 - 64 15 64 0.00  6.25  0.00  
j10c5d4 70 0.109  75 - 70 5 70 0.00  7.14  0.00  
j10c5d5 66 6.955  71 - 66 1446 66 0.00  7.58  0.00  
j10c5d6 62 0.025  64 - 62 8 62 0.00  3.23  0.00  
j10c10a1 139 0.022  139 - 139 1 139 0.00  0.00  0.00  
j10c10a2 158 0.128  158 - 158 18 158 0.00  0.00  0.00  
j10c10a3 148 0.047  148 - 148 1 148 0.00  0.00  0.00  
j10c10a4 149 0.295  149 - 149 2 149 0.00  0.00  0.00  
j10c10a5 148 0.105  148 - 148 1 148 0.00  0.00  0.00  
j10c10a6 146 0.141  146 - 146 4 146 0.00  0.00  0.00  
j10c10b1 163 0.030  - - 163 1 163 0.00  - 0.00  
j10c10b2 157 0.116  - - 157 1 157 0.00  - 0.00  
j10c10b3 169 0.025  - - 169 1 169 0.00  - 0.00  
j10c10b4 159 0.042  - - 159 1 159 0.00  - 0.00  
j10c10b5 165 0.056  - - 165 1 165 0.00  - 0.00  
j10c10b6 165 0.059  - - 165 1 165 0.00  - 0.00  
j10c10c1 115 a - - 115 a 113 1.77  - 1.77  
j10c10c2 117 a - - 119 a 116 0.86  - 2.59  
j10c10c3 116 a - - 116 a 98 18.37  - 18.37 
j10c10c4 120 a - - 120 a 103 16.50  - 16.50 
j10c10c5 125 a - - 126 a 121 3.31  - 4.13  
j10c10c6 106 a - - 106 a 97 9.28  - 9.28  
To summarize, the algorithms have 
average deviations as follows: 1.54% of IAIS 
from 77 problems, 1.64% of GA from 77 
problems, 1.47% of QIA from 41 problems, 
1.65% of AIS from 77 problems, and 1.77% of 
ACO from 63 problems. As to the required CPU 
time, AIS is computationally more expensive 
than IAIS even when a correction factor of 
1.7 /1.83 0.93=  was used. For example, the 
computation time by employing the correction 
factor for instance j10c5a2 by AIS is 
1 0.93 0.93s× =  which is substantially larger 
than 0.03 s of IAIS. After using the correction 
factor for AIS, IAIS takes less computation time 
than AIS. We can thus conclude that IAIS 
outperforms all the immune system based 
algorithms and other existing algorithms in 
solving the HFS problem. Therefore IAIS 
algorithm is quite competitive for the HFS 
problem.
10 
 
project scheduling. European Journal of 
Operational Research 169, 633–638. 
Engin, O., Döyen, A., 2004. A new approach to 
solve hybrid flow shop scheduling problems 
by artificial immune system. Future 
Generation Computer System 20, 
1083–1095. 
Gupta, J.N.D., 1988. Two-stage hybrid flowshop 
scheduling problem. Journal of the 
Operational Research Society 39, 359–364. 
Gupta, J.N.D., Hariri, A.M.A., Potts, C.N., 1997. 
Scheduling a two stage hybrid flow shop 
with parallel machines at the first stage. 
Annals of Operations Research 69 171–191. 
Gupta, J.N.D., Tunç, E.A., 1991. Schedules for a 
two stage hybrid flowshop with parallel 
machines at the second stage. International 
Journal of Production Research 29, 
1489–1502. 
Gupta, J.N.D., Tunç, E.A., 1994. Scheduling a 
two-stage hybrid flow shop with separable 
setup and removal times. European Journal 
of Operational Research 77, 415–428. 
Heydari, M., Fakhrzad, M.B., 2008. A heuristic 
algorithm for hybrid flow shop production 
scheduling to minimize the sum of the 
earliness and tardiness costs. Journal of the 
Chinese Institute of Industrial Engineers 25, 
105–115. 
Janiak, A., Kozan, E., Lichtenstein, M., Oğuz, C., 
2007. Metaheuristic approaches to hybrid 
flow shop scheduling problem with a 
cost-related criterion. International Journal 
of Production Economics 105, 407–424. 
Khalouli, S., Ghedjati, F., Hamzaoui, A., 2009. 
An integrated ant colony optimization 
algorithm for the hybrid flow shop 
scheduling problem, Computers and 
Industrial Engineering (CIE), 40th 
International Conference, France, 554 – 
559. 
Lin, H.T., Liao, C.J., 2003. A case study in a 
two-stage hybrid flow shop with setup time 
and dedicated machines. International 
Journal of Production Economics 86, 
133–143. 
Moursli, O., Pochet, Y.A., 2000. Branch and 
bound algorithm for the hybrid flowshop. 
International Journal of Production 
Economics 64, 113–125. 
Naseri, M.R.A., Nia, M.A.B., 2009. Hybrid flow 
shop scheduling with parallel batching. 
International Journal of Production 
Economics 117, 185–196. 
Niu, Q., Zhou, T., Ma, S., 2009. A 
quantum-inspired immune algorithm for 
hybrid flow shop with makespan criterion. 
Journal of Universal Computer Science 15, 
765–785. 
Oğuz, C., Ercan, M.F., 2005. A genetic algorithm 
for hybrid flow-shop scheduling with 
multiprocessor tasks. Journal of Scheduling 
8, 323–351. 
Parham, P., 2005. The Immune System, second 
edition. Garland Science Publishing. 
Prakash, A., Khilwani, N., Tiwari, M.K., Cohen, 
Y., 2008. Modified immune algorithm for 
job selection and operation allocation 
problem in flexible manufacturing systems. 
Advances in Engineering Software 39, 
219–232. 
Riane, F., Artibs, A., Elmaghraby, S.E., 1998. A 
hybrid three stage flow shop problem: 
Efficient heuristics to minimize makespan. 
European Journal of Operational Research 
109, 321–329 
Ribas, I., Leisten, R., Framinan, J.M., 2010. 
Review and classification of hybrid flow 
shop scheduling problems from a production 
system and a solutions procedure 
perspective. Computers & Operations 
Research 37, 1439–1454. 
Ruíz, R., Maroto, C., 2006. A genetic algorithm 
for hybrid flowshops with sequence 
dependent setup times and machine 
eligibility. European Journal of Operational 
Research 169, 781–800. 
Tavakkoli-Moghaddam, R., Rahimi-Vahed, A., 
Mirzaei, A.H., 2007. A hybrid 
multi-objective immune algorithm for a 
flow shop scheduling problem with 
biobjectives: Weighted mean completion 
time and weighted mean tardiness. 
Information Science 177, 5072–5090. 
Zandieh, M., Fatemi Ghomi, S.M.T., Moattar 
Husseini, S.M., 2006. An immune algorithm 
approach to hybrid flow shops scheduling 
with sequence-dependent setup times. 
Applied Mathematics and Computation 180, 
111–127. 
 
 2 
 
得與交流。在會議期間也見到多位舊識及久聞其名的教授，如 Jianjun Shi 教授、
Richard de Neufville 教授、香港科技大學運籌管理系系主任 Fugee Tsung 教授等，
目前皆為生產與作業管理領域的知名學者及國際著名期刊的主編。台灣方面，中
原大學、元智大學、明志科大等，均有多位教師帶領研究生參加，參加人數僅次
於主辦國新加坡。 
論文發表分為 26 個主題展開，共發表論文約 160 篇，分為以下主題：Applied 
Statistics and Probability、Business and Data Analytics、Decision Science and 
Technology、Engineering and Technology Management、Engineering Economy and 
Cost Analysis、Facilities Planning and Management、Flexibility in Engineering 
Design、 Flexibility/Real Options in Engineering、Global Manufacturing and 
Management、Healthcare Engineering and Management、Homeland Security、Human 
Factors、Industrial & Systems Engineering Education、Information Processing and 
Engineering、Intelligent Systems、Large scale complex systems、Manufacturing 
Systems 、 Operations Research 、 Production Planning and Control 、 Project 
Management、Quality Control and Management、Reliability and Maintenance 
Engineering、Safety Security and Risk Management、Supply Chain Management、
Systems Modelling and Simulation、System Safety  
 
本次會議除了學術論文發表外，主要有三場Keynote Presentation，第一場由
喬治亞理工學院Carolyn J. Stewart的講座教授Jianjun Shi主講，Jianjun Shi教授主
要研究為系統資訊與控制，也是較早進入此領域的學者，共發表了一本書與140
篇論文。目前也為IIE、ASME與IMFORMS的Fellow。此次講題為Data Fusion for 
In-Process Quality Improvement of Complex Systems。 
另一場由麻省理工學院的Richard de Neufville教授主講，目前研究領域為
inserting flexibility into the design of technological systems。此次講題為Flexibility 
in Engineering Design。 
最後一場邀請到的講者為目前 IIE的Senior Vice President, Gregory H. 
Watson ，講題為 The Challenge of Harmonization in Industrial Engineering 
Education。 
本人和博士生鍾翠萍共同發表論文Scheduling a single batch processing 
machine via artificial immune system。大約有十餘人參加本篇論文的發表，對於我
們提出的artificial immune system十分有興趣。所發表論文的Schedule參見附件
二，所發表的論文參見附件三。 
 
三、心得與收穫 
 
本次會議主要由國立新加坡大學工業工程 TANG Loon Ching 教授主持。綜
合會議之過程，有下列心得與收穫。 
 4 
 
附件一 
 
 
  
 
Presentation Schedule - 29 June 2012, Friday (Day 2)
IE in Taiwan
29 June 2012 11:00 - 12:30
Room: Venus II & III
Chairs: Du-Ming Tsai, Loo Hay Lee
James C. Chen
Erh Juei Wang
Shuo-Yan Chou
Shu-Kai Fan
IE in Hong Kong
29 June 2012 13:30 - 15:00
Room: Venus II & III
Chairs: Fugee Tsung, Ek Peng Chew
Fugee Tsung
Aaron Tong
Sammy Wan
Harry Li
IE in Japan
29 June 2012 15:30 - 17:00
Room: Venus II & III
Chairs: Takashi Irohara, Xue Ming Yuan
Kenichi Nakashima, Mitsutoshi 
Kojima
Tetsuo Yamada, Yusuke Kume
Hisashi Yamamoto
Keisuke Nagasawa, Takashi Irohara, 
Yosuke Matoba, Shuling Liu
Human Factors I
29 June 2012 11:00 - 12:30
Room: Jupiter I
Chairs: Brian Peacock
Yi-Lang Chen, Yi-Nan Liu
Chien-Hsin Yang, Tsung-Hsuan Tu
Yi-Lang Chen, Shu-An Yeh
Yopika Mutia Sandra, Agus Mansur, 
Amarria Dila Sari, Catur Siwi 
Handayaningtyas
Irna Azzadina, Yuni Ros Bangun
Chien-Chih Wang, Yi- Jen Tsai
Service Science, Management and Engineering 
29 June 2012 13:30 - 15:00
Room: Jupiter I
Chairs: Kay Chuan Tan, Artie Ng
Zhou Qi, Tan Kay Chuan
Hyung Sool Oh, Seung Ki Moon, Jose 
A. Ventura
Mustofa, A. Cakravastia, D. Irianto, B. 
P. Iskandar
Artie Ng
Lili Chen, Xi Zhang, Xiaoyun Xu
Zhou Yuan, Huang Boray, Hung Hui-
Chih
Special Session "IE Transformation to Improve China’s Productivity and Quality"
Productivity improvement with lean management in footwear industry in China and 
southeastern Asia
Applications of industrial engineering techniques on agriculture in Taiwan
Status and opportunities of Internet of Things: an industrial engineering perspective
Advanced process control framework in Taiwan’s semiconductor industry
Operations Management using Two Types of Kanbans in a Disassembly Line
Analysis of human spinal curvatures while bicycling on road
An ambulance location model incorporating failure and survival probabilities
A Novel Hybrid Approach for ICU Patient Mortality Prediction
Organizational slack resources and performance in a public health care service provider: 
an exploration study
A Servicing Strategy Involving Imperfect Repair for Products Sold with One-Dimensional 
Warranties
Service Reliability Evaluation using Fuzzy Failure Mode Effects Analysis and Grey Theory
The Drivers of Effectiveness and Efficiency in Service Design
Relationship Between Lower Muscles Activities and Dynamic Balance Force
Perception Configuration in Knowledge Sharing
An Ergonomics Study on Musculoskeletal Disorders and Hearing Loss of Telephone 
Customer Service Workers
Ergonomic Participatory Design and Evaluation New Rice Planter Tool as Revival of 
Agriculture’s Indonesia
Rotation of muscle activities while cycling with different handle heights
Item classification and policy selection based on canonical correlation analysis and 
regression analysis
Queueing Analysis of Disassembly Systems with Reverse Blocking Considering Sorting 
Traffic and Buffer Capacities
6
Sarah Shuchi, Robin Drogemuller, 
Tristan Kleinschmidt
Arun N Nambiar
Mehdi Ranjbar Bourani, Michel-
Alexandre Cardin
Yinghan Deng, Linmiao Zhang, Michel-
Alexandre Cardin
Sarah von Helfenstein
Melanie K. Wong, Richard de 
Neufville
Business Data and Analytics
29 June 2012 13:30 - 15:00
Room: Jupiter III
Chairs: Agus Mansur, Kah Wah Lai
Agus Mansur, Yasser Azka Ulil Albab, 
Abdul Djalal
We Shim, Dohyun Kim, Oh-Jin Kwon, 
Young-Ho Moon, Keun-Hwan Kim
Dohyun Kim, Oh-Jin Kwon, We Shim, 
Kyungsik Lee, Young Seon Jeong
Fariborz Kalashi, Ali Sorayaei, 
Sobhan Asian
Shu-Hua Chien, Ying-Hueih Chen
Jyh-Jeng Wu, Chang-Jhan Wang
Jyh-Jeng Wu, Ying-Hueih Chen
Shu-Hua Chien, Wan-Ju Lin
Eunhye Kim, Heawon Lee, Hongsuk 
Hu, Sangrak Lee
Imam Djati Widodo, Alva E. Tontowi, 
Subagyo
Facility Layout and Planning
29 June 2012 15:30 - 17:00
Room: Jupiter III
Chairs: Kien-Ming Ng, Gary Chen
Gary Chen, Ju-Chieh Lo
Nai-Chieh Wei, I-Ming Chao, Chia 
Ling Chung, Ruei Yang Weng
Mei-Shiang Chang, Ting-Chen Ku
Ji-Pyng Chiou, Chueh-Hsien Pan
Nikorn Sirivongpaisal, Sakesun 
Suthummanon, Supawan Srithip
Yanfeng Chu, Meimei DaiEvolution model of complex networks of industrial chain
Simulation Optimization for Cycle Time Improvement of Head Stack Assembly Process
Combining CODEQ and SQP methods for Dynamic Systems
A Slicing Tree and Harmony Search Based Heuristic for the Unequal-Area Block Facility 
Layout Problem
A genetic algorithm based approach for solving dynamic facility layout problem
Evaluating the Efficiency of the Financial Firms: A New Approach to Data Envelopment 
Analysis (DEA)
Analysis of the US registered patents using a signomial regression
Pareto Front Approach to Multi-objective Dynamic Facility Layout
New Product Success Forecasting Model Development: A Comparative Study
Workload Estimation and Balancing Method for Delivery Post Offices
Is there has trust transfer and repair in multi-channel? An empirical study of telecom 
service and mobile manufacturer in Taiwan
The relationship among trust repair, customer participation, positive emotion, and post-
trust
Effect of Open Innovation on the Value of Enterprises - Focus on Technology Alliance 
Networks
Analysis of Telecommunications Industry Consumer Movement in Indonesia with K-
Means Clustering
A Prototype for Investigating Flexible Decision Frameworks in Water Resource Planning
Natural Resource Recovery Systems for New City Design: Using Flexibility to Expand the 
Frontier of Best Practices
Flexibility in Biofuel Supply Chain System
Screening Flexible Design Strategies Efficiently to Improve the Lifecycle Performance of 
Engineering Systems: A Case Study in the LNG Industry
Holonic Manufacturing Systems - A current perspective
Flexible Airport Terminal Design: Towards a Framework
8
Ilkyeong Moon, Jianghui 
Wang, Sungchan Kim
Manufacturing Systems and Project Management
30 June 2012 11:00 - 13:00
Room: Jupiter II
Chairs: Sammy Wan, Aaron Chia
J. Seif, R. Tavakkoli-
Moghaddam, M. Baghersad
Shufan Liu, Syuanyu Zhang
Ju-Yong Lee, BongJoo Jeong
Sammy K.M. Wan 
Masahiro Nowatari
Young Seon Jeong, Kyungsik 
Lee, Raja Jayaraman
Information Processing and Engineering
30 June 2012 14:00 - 15:30
Room: Jupiter II
Chairs: Kim Leng Poh, Shu-Kai S.Fan
Shu-Kai S. Fan, Yi-Ru Su
Yu-Chiang Chuang
Seung Hwan Park, Sung-Shick 
Kim, Jun-Geol Baek, Cheong-
Sool Park, Jun Seok Kim, Hyunsoo Yoon, Jun-Geol 
Baek, Cheong-Sool Park, 
Young-Hak Lee
Tuananh Tran, Shoaib ul 
Hassan, Towqeer Sattar
Joonyoung Park
Production Planning and Control I
30 June 2012 11:00 - 13:00
Room: Jupiter III
Chairs: Gary Lin, Adam Ng
Gary C. Lin
Hui-Mei Wang, Fuh-Der Chou
Chun-Lung Chen
Hui-Mei Wang, Fuh-Der Chou
Chun-Cheng Lin, Jia-Rong 
Kang, Shu-Hsing Chung, Kai-
Shin Chou
Jun-Hee Han, Ji-Won Yang
Dah-Chuan Gong, Gary C. Lin, 
Jia-Lun Kang, Wen-Na Ma, Tsi-
Yang LuHorng-Chyi Horng
Production Planning and Control II
30 June 2012 14:00 - 15:30
Room: Jupiter III
Chairs: Dah-Chuan Gong, The Jin Ai
Tsui-Ping Chung, Ching-Jong 
Liao
The Jin Ai, Slamet Setio 
Wigati, Dah Chuan Gong
Trung Hieu Tran, Thi Thu Ba 
Nguyen, Kien Ming Ng
The Location Routing Problem with Multi-Compartments and Multi-Trips
A Constrained Clustering Approaches for Mixed Process Data Using Recursive Partitioning 
and Regression Trees
An Image Registration Method Based On Combined Normalized Mutual Information And 
Distance Transform
Fault Detection of Cyclic Signals Using Principal Curve Analysis in Semiconductor 
Manufacturing Process
Defect patterns classification on semiconductor wafer using multiclass support vector 
machine with dynamic time warping kernel
Confirmation on Teamwork Construction in Global First Line Worker Based on Religion
Flexible and Diverse Maintenance Activities in a Single Machine Scheduling Problem
System Dynamics Approaches for Improving Productivity in Hong Kong Construction 
Industry
Minimizing total tardiness on identical parallel machines under a machine availability 
constraint
Using PSO algorithm to design manufacturing parameters in semiconductor test vehicle
Investigation of Crowd Participation in a Crowdsourcing Project for New Product 
Development with Qualified Crowd
Developing heuristics to solve flexible flow lines scheduling problems with queue time 
Lot Sizing for a Production System with Two Imperfect Components and a Bivariate 
Geometric Distribution
Particle swarm optimization algorithms to hybrid flow shop scheduling problem with 
sequence-dependent setup times
An Economic Production Quantity on an Imperfect Production System over Finite Planning 
Horizon
Scheduling of LED chip sorting sequencing model in LED manufacturing
An improved water flow algorithm for job shop scheduling problem
Simulating the Effects of Order Review and Release on Scheduling Performance of a Hybrid 
Production Lot Size Determination in Considering Time-of-Value and Two Imperfect Key 
Production Subsystems
Scheduling a single batch processing machine via artificial immune system
Production and transportation planning in a two-level supply chain with shared processing 
Modeling the Material Allocation System for a TFT-LCD Module Factory Using Make-to-
stock Production
10
 12 
 
附件三 
 
Scheduling a single batch processing machine  
via artificial immune system 
 
Paper ID: 158 
 
Tsui-Ping Chung  
Ching-Jong Liao 
Department of Industrial Management,  
National Taiwan University of Science and Technology,  
Taipei, Taiwan 
 
 
Abstract 
This paper investigates the problem of minimizing makespan on a single batch processing machine. 
Each job has a release time and the batch capacity is bounded. Since the problem is NP-hard, an 
immunoglobulin-based artificial immune system algorithm, called IAIS, is developed to find an 
optimal or near-optimal solution. The proposed IAIS algorithm has two special features. First, we limit 
the searching area in the somatic recombination process in order to decrease the computational time. 
Second, several local search methods are mixed for use in each run to avoid losing the optimal solution. 
To verify IAIS, comparison with an existing algorithm is made. Computational results show that the 
proposed IAIS algorithm is very competitive for the single batch processing machine problem.  
 
Keywords 
artificial immune system, batch processing machine, release time, bounded batch capacity 
 
1. Introduction 
The motivation of this problem is the process in testing house of semiconductor. The process of 
testing house is often composed of four major steps including testing, lead scanning, baking, and 
packing. In the baking operation, IC chips in lots must be grouped into batches to put into the oven 
where the capacity is finite, and arriving lots cannot interrupt the baking process until the current lots 
are finished. In order to reduce the throughput time, the makespan criterion is considered.  
In this paper we consider a single batch processing machine problem wherey The proposed 
problem has been shown to be NP-hard by Lee and Uzsoy [1] even in the case when the batch bounded 
is determined by job sizes. 
In what follows, we review the recent literature related to the single batch problem with job 
release time. Liu and Yu [2] propose a pseudo polynomial algorithm is for the case with a fixed number 
of release dates. A greedy heuristic for the general problem is shown to have the best-performance 
bound 2. Sung and Choung [3] provide some heuristics to minimize makespan on a single burn-in oven 
in semiconductor manufacturing with different job release times. Wang and Uzsoy [4] combined a 
dynamic programming algorithm with a random key-based representation genetic algorithm to 
minimize the maximum lateness on a single batch processing machine in the presence of job available 
time. Li et al. [5] consider a problem of scheduling jobs with release times and non-identical job sizes 
on a single batching machine with minimize makespan. An approximation algorithm with a worst-case 
ratio 2+εis proposed. Lu et al. [6] consider the unbounded parallel batch machine scheduling with 
release dates and rejection. The objective is to minimize the sum of the makespan of the accepted jobs 
and the total rejection penalty of the rejected jobs. Binary NP-hard is shown and a polynomial 
algorithm is proposed.  
For the job sizes constraints, Zhang et al. [7] deal with the problem of minimizing makespan on a 
single batch processing machine. The batch size is bounded. Two approximation algorithms with 
worst-case of 3/2 and 7/4 are given. Dupont and Dhaenens-Flipo [8] provide a single-batch processing 
machine problem with non-identical capacity requirements to minimize the makespan. Some 
 14 
 
the specific antigen, B cells are dead within a period. Thus, B cells repertoire is never static, and newly 
generated antibodies are continually being tested against the antigen infection. 
According to the process of natural immune response, an artificial immune system algorithm is 
proposed in the next section.  
 
3. The proposed IAIS algorithm 
In this section, we propose the IAIS (immunoglobulin-based AIS) algorithm. The nature immune 
system is very complex and fathomless, and the new phenomenon is discovered day by day. However, 
in the literature the structure of most AISs is still based on a fix model with clone selection and 
mutation. The basic idea of the proposed IAIS is to develop a progressive system, where its structure is 
presented as follows.  
Step 1. Generate a population of A  antibodies. 
Step 2. For each antibody, somatic recombination and IgM are used. If the new objective 
function is smaller than old one, replace the antibody. 
Step 3. Repeat C  times to choose IgG, IgE, or IgA to be a new type of antibody. If the new 
objective function is smaller than old one, replace the antibody. 
Step 4. Eliminate antibodies except the best antibody in the population and generate the new 
antibodies and replace with the eliminated ones. 
Step 5. If reach the criterion, stop the heuristic; otherwise, go to Step 2. 
3.1 Encoding, Decoding, and Affinity calculation  
In this study, possible schedules are represented by integer-valued strings of length n. The n 
elements of the strings are the job numbers. Each possible schedule is represented by a string with n 
jobs. Those strings are accepted as antibodies of the AIS. The algorithm goes up to solution by the 
evolution of these antibodies.  
The decoding method is presented as follows. 
Step 1. Select the unscheduled job by the string sequence and place it in the first batch with 
enough space to accommodate it. If it does not fit an existing batch, create a new batch.  
Step 2. Repeat Step 1 until all jobs have been assigned to a batch.  
Step 3. Sequence the batches by the earliest release time (ERT) order on the machine. 
The string is accepted as an antibody of the proposed AIS algorithm. Many decoding methods are 
proposed in the literature due to avoid falling local search. However, using these methods in local 
search based algorithm spends more computational time.  
Each antibody has a makespan value that refers to the affinity value of current antibody. Affinity 
value is higher when antigens and antibodies have more complementary shapes. Therefore, affinity 
value of each schedule calculated by function Affinity( ) 1/ makspan( ),a a=  where a is the considered 
antibody. From the equation, a lower makespan value creates a higher affinity value.  
3.2 Population generation 
For each string of an antibody, a random value is given. The sequence of string is arranged by the 
increasing order of the random value. It is a simple method to find a new string. After executing A  
times, a new population is generated. 
3.3 Somatic recombination  
Each antibody is formulated by the genes which are sequenced as a string. To produce additional 
diversity in the antigen-binding sites of antibodies, the partial genes of antibody are cut and spliced 
randomly by somatic recombination during the development of B cells.  
A number D  of n jobs are randomly selected in each antibody and the sequence of antibody 
with the best objective function in the current generation is used to be a standard string. Those selected 
jobs in the antibody should follow the sequence of the standard string to rearrange its sequence. The 
function is to limit the searching area in order to decrease the computational time. 
3.4 Somatic hypermutation  
There are four isotype immunoglobulins, IgM, IgG, IgE, and IgA. Each isotype has a different 
function. If the makespan of a new string in IgM is larger than that of the old one, three isotype 
immunoglobulins, IgG, IgE, and IgA are randomly selected to be the next mutated method. 
IgM: The inverse mutation is used here. For a sequence s, let i and j be randomly selected two 
positions in the sequence. A neighbor of s is obtained by inversing the sequence of jobs 
between i and j positions. It is noted that it is not allowed to be mutated if | | 2i j− < . 
IgG: The pair-wise mutation is used. For a sequence s, let i and j be randomly selected two 
positions in the sequence. A neighbor of s is obtained by swapping these two jobs. 
 16 
 
J1S1-3 186  0.00  0.00  0.005 0.00  0.00  0.053  
J1S1-4 235  0.00  0.00  0.005 0.00  0.00  0.055  
J1S1-5 241  10.40  0.00  0.226 10.40  0.00  0.061  
Average  2.80  0.00  0.095 2.80  0.00  0.056  
J1S2-1 228  0.00  0.00  0.197 0.00  0.00  0.048  
J1S2-2 271  3.70  0.00  0.004 3.70  0.00  0.031  
J1S2-3 260  0.00  0.00  0.216 0.00  0.00  0.047  
J1S2-4 316  0.00  0.00  0.195 0.00  0.00  0.039  
J1S2-5 260  10.40  0.00  0.195 10.40  0.00  0.036  
Average  2.80  0.00  0.162 2.80  0.00  0.040  
 
Table 3: Comparison results on benchmark problems ( 20)n =  
  ACO IAIS 
Instance LB Gap std CT Gap std CT 
J2S1-1 399  19.70  0.00 0.777 19.70 4.24  0.194 
J2S1-2 349  0.00  0.00 0.808 0.00 0.00  0.161 
J2S1-3 400  13.10  1.76 0.849 13.10 2.92  0.205 
J2S1-4 372  28.20  5.79 1.110 28.20 2.98  0.198 
J2S1-5 339  4.20  0.00 0.090 4.20 0.32  0.192 
Average 372  13.00  1.51 0.727 13.00 2.09  0.190 
J2S2-1 427  5.50  0.00 0.400 5.50 0.00  0.209 
J2S2-2 548  6.30  0.00 0.271 6.30 0.00  0.130 
J2S2-3 562  9.80  0.00 0.296 8.30 0.00  0.167 
J2S2-4 532  6.20  0.00 0.270 3.50 0.00  0.125 
J2S2-5 556  0.00  0.00 0.282 0.00 0.00  0.150 
Average 525  5.60  0.00 0.304 4.70 0.00  0.156 
 
Table 4: Comparison results on benchmark problems ( 50)n =  
  ACO IAIS 
Instance LB Gap std CT Gap std CT 
J3S1-1 841  5.20  5.30 5.125 7.60 9.87  1.028 
J3S1-2 579  10.50  5.13 6.163 5.70 12.19  1.069 
J3S1-3 888  11.50  11.11 4.941 7.50 12.71  1.183 
J3S1-4 716  12.80  12.53 6.783 8.40 15.62  1.016 
J3S1-5 752  9.60  3.69 9.130 8.80 5.91  1.038 
Average 755  9.90  47.55 6.428 7.60 11.26  1.067 
J3S2-1 1213  18.60  0.00 2.235 18.60 0.00  1.098 
J3S2-2 1247  0.50  2.00 4.004 0.10 4.03  1.235 
J3S2-3 1297  5.70  0.00 2.361 5.70 2.20  1.175 
J3S2-4 1342  8.00  0.00 1.903 8.00 0.00  0.772 
J3S2-5 1176  7.20  2.35 2.527 7.00 0.00  1.049 
Average 1255  8.00  0.87 2.606 7.90 1.25  1.066 
 
Both of IAIS and ACO reach the same solutions in 23 of 40 instances. IAIS can find better 
solutions than ACO in 14 of 40 instances. The average Gap of IAIS is 6.98 better than of ACO with 
7.63. The algorithms have average standard deviation as follows: 3.95 of ACO and 5.66 of IAIS. For 
both algorithms, the computational time is increasing as the number of jobs becomes large but ACO 
need much more time to find a better solution. The average computational time of IAIS is 1.6 seconds 
while average computational time of ACO is 5.6 seconds. Computational results show that IAIS is very 
competitive for the single batch processing machine problem. 
 
 
Table 5: Comparison results on benchmark problems ( 100)n =  
  ACO IAIS 
Instance LB Gap std CT Gap std CT 
J4S1-1 1521  8.10  5.53 20.612 11.40 19.72  4.747 
 18 
 
13. Luo, H., Huang, G.Q., Zhang, Y., Dai, Q., and Chen, X., 2009, “Two-stage hybrid batching 
flowshop scheduling with blocking and machine availability constraints using genetic 
algorithm,” Robotics and Computer-Integrated Manufacturing, 25(6), 962–971. 
14. Chiang, T.C., Cheng H.C., and Fu, L.C., 2010, “A memetic algorithm for minimizing total 
weighted tardiness on parallel batch machines with incompatible job families and dynamic job 
arrival,” Computers & Operations Research, 37(12), 2257–2269. 
15. Wang, C., and Uzsoy, R., 2002, “A genetic algorithm to minimize maximum lateness on a 
batch processing machine,” Computers & Operations Research, 29 (12), 1621–1640. 
16. Malve, S., and Uzsoy, R., 2007, “A genetic algorithm for minimizing maximum lateness on 
parallel identical batch processing machines with dynamic job arrivals and incompatible job 
families,” Computers & Operations Research, 34(10), 3016–3028. 
17. Liao, L.M., and Huang, C.J., 2010, “Tabu search heuristic for two-machine flowshop with 
batch processing machines,” Computers & Industrial Engineering, 60(3), 426–432. 
18. Melouk, S., Damodaran, P., and Chang, P.Y., 2004, “Minimizing makespan for single machine 
batch processing with non-identical job sizes using simulated annealing,” International Journal 
of Production Economics, 87(2), 141–147. 
19. Engin, O., and Döyen, A., 2004, “A new approach to solve hybrid flow shop scheduling 
problems by artificial immune system,” Future Generation Computer Systems, 20(6), 
1083–1095. 
20. Bagheri, A., Zandieh, M., Mahdavi, I., and Yazdani, M., 2010, “An artificial immune 
algorithm for the flexible job-shop scheduling problem,” Future Generation Computer 
Systems, 26(4), 533–541. 
21. Prakash, A., Khilwani, N., Tiwari, M.K., and Cohen, Y., 2008, “Modified immune algorithm 
for job selection and operation allocation problem in flexible manufacturing systems,” 
Advances in Engineering Software, 39(3), 219–232. 
22. Woldemariam, K.M., and Yen, G.G., 2010, “Vaccine-enhanced artificial immune system for 
multimodal function optimization,” IEEE Transactions on Systems, Man, and Cybernetics, 
Part B: Cybernetics, 40(1), 218–228.  
23. Ge, H.W., Sun, L., Liang, Y.C., and Qian, F., 2008, “An effective PSO and AIS-based hybrid 
intelligent algorithm for job-shop scheduling,” IEEE Transactions on Systems, Man and 
Cybernetics, Part A: Systems and Humans 38(2), 358–368. 
24. Parham P., 2005, “The Immune System, second edition”, USA: Garland Science Publishing. 
 
 
 
2 
 
Ulsan National Institute of Science and Technology (UNIST) 的 Vice President。  
Prof. Jung 提到許多如何能夠在一個系上（或學校）找出焦點方向，全力發展。 
 
10月15日下午參加 APIEMS 的 Board Meeting，這是此行最重要的目的。今
年的理事會出席理事相當踴躍，共二十餘位理事出席，包含台灣的三位：江行全
教授、周雍強教授和我本人。這次理事會共有15項議題，其中比較重要的是 
z 是否應建立 Fellow 制度？這個問題因為兩年前有人提起，去年會議中決
定成立一個委員會先行研議。會議中原則上建議朝此方向進行，並由該
委員會擬定實施細則，明年的理事會中再討論定案。本案的通過，對台
灣的工業工程學會跨入國際舞台，多了一個橋樑。 
z 確定明年的會議於12月初在泰國的普吉島舉行。 
z 兩位新任理事人選（蔡篤銘教授及簡禛富教授）順利獲得理事會通過，
使得台灣的代表在理事會的人數最多。 
z 許多理事對於目前 APIEMS 期刊的品質提出許多意見。會中決定將所提
出的議題彙整，並在次日的編輯會議中再詳細討論。 
 
下午的四場 Panel discussion 的內容亦非常豐富，主題包括： 
z Meeting the Editors to Discuss the Research Publication Issues 
z IE in 2020’s 
z Discussions on Service-oriented Manufacturing 
z The Application of IE in Healthcare Engineering 
 
主持人以及與談人都是知名的國際學者，包括 Georgia Tech 的 Jianjun Shi 教授、
香港科大的 Chung-Yee Lee 教授、Fugee Tsung 教授、新加坡國立大學的 Loon 
Ching Tang 教授。此外，香港方面安排多位產業界的專家參與討論，包括香港
SMTHK 的總裁 KB Chan、TQM Consultant Aaron Tong、Shanghai Prime Machinery 
公司總經理 Kang Hu、China Rongsheng Heavy Industries Group 董事長 Qiang 
Chen。 
 
本 人 和 博 士 生 鍾 翠 萍 共 同 發 表 論 文 An immunoglobulin-based artificial 
immune system for solving hybrid flow shop problem。大約有十餘人參加本篇論文
的發表，對於我們提出的 immunoglobulin-based artificial immune system 十分有興
趣，所發表的論文如附件二。 
 
四、結語與誌謝 
 
綜合而言，本次研討會相當盛大，但由於主辦的大陸方面，許多準備及後勤
工作沒有做得很好，參與人數並不太多，約200人左右，是歷年來最少的一次。
4 
 
 
 
The Twelfth Asia Pacific Industrial Engineering and 
Management Systems Conference 
October 14-17, 2011, Friendship Hotel, Beijing, China 
Title: An immunoglobulin-based artificial immune system for solving hybrid flow 
shop problem 
Authors: Ching-Jong Liao and Tsui-Ping Chung  
ID number: 336 
Dear Prof. Liao: 
 
According to the review reports on your submitted paper, I am pleased to inform you 
that, your above referenced paper has been accepted for publication in the 
Proceedings of the Twelfth Asia Pacific Industrial Engineering and Management 
Systems Conference to be held from October 14-17, 2011 in Friendship Hotel, Beijing, 
China. 
 
Early registration fee before August 15, 2011 is US$400 for faculty members and 
US$240 for students. Registration fee includes a copy of the conference proceedings, 
conference banquets, and all meals but not for hotel. Please read and complete the 
attached files carefully.  
 
Once again, thank you for your interest and cooperation. We are looking forward to 
seeing you in Beijing and sharing your wisdom. 
 
Sincerely yours, 
 
Zixiong Peng, Secretary, APIEMS 2011 
On behalf of Prof. Baoding Liu, General Chair 
Uncertainty Theory Laboratory 
Department of Mathematical Sciences 
Tsinghua University 
Beijing 100084, China 
Tel: +86.10.51536956 
apiems@math.tsinghua.edu.cn 
 
附件一 
6 
 
al.,2007; Zandieh et al., 2006; Debels et al., 
2006). In this paper, we will present an 
immunoglobulin-based AIS algorithm, called 
IAIS, for HFS with the objective of minimizing 
makespan. The proposed IAIS algorithm is 
based on a new somatic hypermutation method 
to reach affinity maturation and a new somatic 
recombination method, also called clonal 
selection. The IAIS will be tested on the 
benchmark problems of Carlier and Néron 
(2000). 
The remainder of this paper is organized as 
follows. In the next section, we introduce the 
immune response process and inspiration of the 
immune system. In section 3, a novel AIS 
algorithm is proposed. Computational results are 
provided in section 4. Finally, conclusions and 
future research directions are given in section 5. 
2. GENERAL SCHEME OF IMMUNE 
SYSTEM 
In this section, we introduce the “natural” 
immune system which is based on the book by 
Parham (2004). Animals use the immune system 
to defend their bodies from invasion by other 
organisms. Antibodies are produced by B cells 
of the immune system in response to infection. 
Their function is to bind pathogens when 
pathogens are encountered in the body. The 
molecules to which antibodies bind are called 
antigens. When antigens and antibodies have 
complementary shapes, they can bind together. 
After binding, the antibody disables the 
pathogens so that the pathogens are destroyed 
easily by the immune system.  
2.1 Somatic recombination 
Each antibody is formulated by the genes 
which are sequenced as a string. To produce 
additional diversity in the antigen-binding sites 
of antibodies, the partial genes of antibody are 
cut and spliced randomly by somatic 
recombination during the development of B cells. 
The process is also called clonal selection. 
2.2 Somatic hypermutation 
It is noted that antibodies are the secreted 
form of immunoglobulins. Immunoglobulins are 
divided into four isotypes (classes) including 
IgA, IgE, IgG, and IgM, where Ig stands for the 
immunoglobulin. Each isotype has specialized 
functions and each antibody belongs to an 
isotype of immunoglobulin.  
The first antibodies produced after an 
encounter with antigen is IgM. The function of 
IgM is to identify the antigen, after which it is 
transferred to one of another three isotypes, IgG, 
IgA, and IgE to disable the antigen. IgG is 
smaller and more flexible than IgM, and thereby 
it is easier to access antigen. The function of IgA 
is to transport and diffuse into extra vascular. No 
isotype of immunoglobulins can defend the 
antigen in the extra vascular except IgA. IgE is 
an immunoglobulin with the function of 
sensitization of mast cell which can destroy the 
antigen.  
The switching process from IgM to the 
one of three isotypes of immunoglobulins (IgG, 
IgA and IgE) is called somatic hypermutation. 
2.3 Affinity maturation 
Affinity is a force between antigen and 
antibody. The better the general fit between the 
interacting surfaces of antigen and antibody, the 
higher the affinity is. After somatic 
hypermutation, some of mutant antibodies with 
higher affinities may be produced. This 
phenomenon is called affinity maturation. 
2.4 Elimination 
The bone marrow pushes out billions of B 
cells into the peripheral circulation in a day. 
Those B cells are stored in a repertoire where 
there is a limited space for the B cells. Unless B 
cells encounter the specific antigen, B cells are 
dead within a period. Thus, B cells repertoire is 
never static, and newly generated antibodies are 
continually being tested against the antigen 
infection. 
According to the process of the immune 
response, the proposed artificial immune system 
is presented in the next section.  
3. THE PROPOSED AIS ALGORITHM 
In this section, the structure of the 
proposed immunoglobulin-based AIS algorithm 
(IAIS) is presented. The basic idea of IAIS is 
from the natural immune system where the 
objective is to disable the antigens quickly and 
effectively. Evolution of IAIS is based on the 
somatic recombination and affinity maturation of 
the natural immune system. The proposed 
algorithm is summarized in Figure 1.  
3.1 Somatic recombination 
A number B  of n  jobs are randomly selected 
in each antibody and the sequence of antibody 
with the best objective function in the current 
generation is used to be a standard string. Those 
selected jobs in the antibody should follow the 
sequence of the standard string to rearrange its 
sequence (see Figure 2). 
3.2 Somatic hypermutation 
There are four isotype immunoglobulins, 
8 
 
based algorithms, i.e., AIS and QIA. For the hard 
problems, IAIS can solve 18 of the 24 problems 
(75%) with the smallest average percentage 
deviation among the algorithms. For the easy 
problems, all methods can not reach LB for six 
of the problems, but actually they reach 
optimum for the six problems based on the total 
enumeration of possible schedules. Both IAIS 
and AIS algorithms can solve 47 of the 53 
problems (88.7%), but the average deviation of 
IAIS is only 0.95% compared to 0.99% of AIS. 
QIA can solve only 29 problems from the 53 
problems.  
The performance of all methods is 
summarized in Table 2, where the column “% 
solved” denotes percentage of the optimally 
solved problems, and “% deviation” denotes the 
average percentage deviation values for easy and 
hard problems.
 
Table 1 Comparison results of the immune-based algorithms on benchmark problems (bold represented 
problems are hard problems) 
Problem IAIS QIA AIS LB % deviation Cmax CPU Cmax CPU Cmax CPU IAIS QIA AIS 
j10c5a2 88 0.003  88 - 88 1 88 0.00  0.00  0.00  
j10c5a3 117 0.380  117 - 117 1 117 0.00  0.00  0.00  
j10c5a4 121 0.049  121 - 121 1 121 0.00  0.00  0.00  
j10c5a5 122 0.025  122 - 122 1 122 0.00  0.00  0.00  
j10c5a6 110 0.047  110 - 110 4 110 0.00  0.00  0.00  
j10c5b1 130 0.023  130 - 130 1 130 0.00  0.00  0.00  
j10c5b2 107 0.025  107 - 107 1 107 0.00  0.00  0.00  
j10c5b3 109 0.016  109 - 109 1 109 0.00  0.00  0.00  
j10c5b4 122 0.030  122 - 122 2 122 0.00  0.00  0.00  
j10c5b5 153 0.017  153 - 153 1 153 0.00  0.00  0.00  
j10c5b6 115 0.006  115 - 115 1 115 0.00  0.00  0.00  
j10c5c1 68 0.052  69 - 68 32 68 0.00  1.47  0.00  
j10c5c2 74 0.133  76 - 74 4 74 0.00  2.70  0.00  
j10c5c3 71 0.344  74 - 72 a 71 0.00  4.23  1.41  
j10c5c4 66 0.028  75 - 66 3 66 0.00  13.64  0.00  
j10c5c5 78 0.178  79 - 78 14 78 0.00  1.28  0.00  
j10c5c6 69 0.098  72 - 69 12 69 0.00  4.35  0.00  
j10c5d1 66 0.047  69 - 66 5 66 0.00  4.55  0.00  
j10c5d2 73 0.063  76 - 73 31 73 0.00  4.11  0.00  
j10c5d3 64 0.055  68 - 64 15 64 0.00  6.25  0.00  
j10c5d4 70 0.109  75 - 70 5 70 0.00  7.14  0.00  
j10c5d5 66 6.955  71 - 66 1446 66 0.00  7.58  0.00  
j10c5d6 62 0.025  64 - 62 8 62 0.00  3.23  0.00  
j10c10a1 139 0.022  139 - 139 1 139 0.00  0.00  0.00  
j10c10a2 158 0.128  158 - 158 18 158 0.00  0.00  0.00  
j10c10a3 148 0.047  148 - 148 1 148 0.00  0.00  0.00  
j10c10a4 149 0.295  149 - 149 2 149 0.00  0.00  0.00  
j10c10a5 148 0.105  148 - 148 1 148 0.00  0.00  0.00  
j10c10a6 146 0.141  146 - 146 4 146 0.00  0.00  0.00  
j10c10b1 163 0.030  - - 163 1 163 0.00  - 0.00  
j10c10b2 157 0.116  - - 157 1 157 0.00  - 0.00  
j10c10b3 169 0.025  - - 169 1 169 0.00  - 0.00  
j10c10b4 159 0.042  - - 159 1 159 0.00  - 0.00  
j10c10b5 165 0.056  - - 165 1 165 0.00  - 0.00  
j10c10b6 165 0.059  - - 165 1 165 0.00  - 0.00  
j10c10c1 115 a - - 115 a 113 1.77  - 1.77  
j10c10c2 117 a - - 119 a 116 0.86  - 2.59  
j10c10c3 116 a - - 116 a 98 18.37  - 18.37 
j10c10c4 120 a - - 120 a 103 16.50  - 16.50 
j10c10c5 125 a - - 126 a 121 3.31  - 4.13  
j10c10c6 106 a - - 106 a 97 9.28  - 9.28  
To summarize, the algorithms have 
average deviations as follows: 1.54% of IAIS 
from 77 problems, 1.64% of GA from 77 
problems, 1.47% of QIA from 41 problems, 
1.65% of AIS from 77 problems, and 1.77% of 
ACO from 63 problems. As to the required CPU 
time, AIS is computationally more expensive 
than IAIS even when a correction factor of 
1.7 /1.83 0.93=  was used. For example, the 
computation time by employing the correction 
factor for instance j10c5a2 by AIS is 
1 0.93 0.93s× =  which is substantially larger 
than 0.03 s of IAIS. After using the correction 
factor for AIS, IAIS takes less computation time 
than AIS. We can thus conclude that IAIS 
outperforms all the immune system based 
algorithms and other existing algorithms in 
solving the HFS problem. Therefore IAIS 
algorithm is quite competitive for the HFS 
problem.
10 
 
project scheduling. European Journal of 
Operational Research 169, 633–638. 
Engin, O., Döyen, A., 2004. A new approach to 
solve hybrid flow shop scheduling problems 
by artificial immune system. Future 
Generation Computer System 20, 
1083–1095. 
Gupta, J.N.D., 1988. Two-stage hybrid flowshop 
scheduling problem. Journal of the 
Operational Research Society 39, 359–364. 
Gupta, J.N.D., Hariri, A.M.A., Potts, C.N., 1997. 
Scheduling a two stage hybrid flow shop 
with parallel machines at the first stage. 
Annals of Operations Research 69 171–191. 
Gupta, J.N.D., Tunç, E.A., 1991. Schedules for a 
two stage hybrid flowshop with parallel 
machines at the second stage. International 
Journal of Production Research 29, 
1489–1502. 
Gupta, J.N.D., Tunç, E.A., 1994. Scheduling a 
two-stage hybrid flow shop with separable 
setup and removal times. European Journal 
of Operational Research 77, 415–428. 
Heydari, M., Fakhrzad, M.B., 2008. A heuristic 
algorithm for hybrid flow shop production 
scheduling to minimize the sum of the 
earliness and tardiness costs. Journal of the 
Chinese Institute of Industrial Engineers 25, 
105–115. 
Janiak, A., Kozan, E., Lichtenstein, M., Oğuz, C., 
2007. Metaheuristic approaches to hybrid 
flow shop scheduling problem with a 
cost-related criterion. International Journal 
of Production Economics 105, 407–424. 
Khalouli, S., Ghedjati, F., Hamzaoui, A., 2009. 
An integrated ant colony optimization 
algorithm for the hybrid flow shop 
scheduling problem, Computers and 
Industrial Engineering (CIE), 40th 
International Conference, France, 554 – 
559. 
Lin, H.T., Liao, C.J., 2003. A case study in a 
two-stage hybrid flow shop with setup time 
and dedicated machines. International 
Journal of Production Economics 86, 
133–143. 
Moursli, O., Pochet, Y.A., 2000. Branch and 
bound algorithm for the hybrid flowshop. 
International Journal of Production 
Economics 64, 113–125. 
Naseri, M.R.A., Nia, M.A.B., 2009. Hybrid flow 
shop scheduling with parallel batching. 
International Journal of Production 
Economics 117, 185–196. 
Niu, Q., Zhou, T., Ma, S., 2009. A 
quantum-inspired immune algorithm for 
hybrid flow shop with makespan criterion. 
Journal of Universal Computer Science 15, 
765–785. 
Oğuz, C., Ercan, M.F., 2005. A genetic algorithm 
for hybrid flow-shop scheduling with 
multiprocessor tasks. Journal of Scheduling 
8, 323–351. 
Parham, P., 2005. The Immune System, second 
edition. Garland Science Publishing. 
Prakash, A., Khilwani, N., Tiwari, M.K., Cohen, 
Y., 2008. Modified immune algorithm for 
job selection and operation allocation 
problem in flexible manufacturing systems. 
Advances in Engineering Software 39, 
219–232. 
Riane, F., Artibs, A., Elmaghraby, S.E., 1998. A 
hybrid three stage flow shop problem: 
Efficient heuristics to minimize makespan. 
European Journal of Operational Research 
109, 321–329 
Ribas, I., Leisten, R., Framinan, J.M., 2010. 
Review and classification of hybrid flow 
shop scheduling problems from a production 
system and a solutions procedure 
perspective. Computers & Operations 
Research 37, 1439–1454. 
Ruíz, R., Maroto, C., 2006. A genetic algorithm 
for hybrid flowshops with sequence 
dependent setup times and machine 
eligibility. European Journal of Operational 
Research 169, 781–800. 
Tavakkoli-Moghaddam, R., Rahimi-Vahed, A., 
Mirzaei, A.H., 2007. A hybrid 
multi-objective immune algorithm for a 
flow shop scheduling problem with 
biobjectives: Weighted mean completion 
time and weighted mean tardiness. 
Information Science 177, 5072–5090. 
Zandieh, M., Fatemi Ghomi, S.M.T., Moattar 
Husseini, S.M., 2006. An immune algorithm 
approach to hybrid flow shops scheduling 
with sequence-dependent setup times. 
Applied Mathematics and Computation 180, 
111–127. 
 
 2 
 
得與交流。在會議期間也見到多位舊識及久聞其名的教授，如 Jianjun Shi 教授、
Richard de Neufville 教授、香港科技大學運籌管理系系主任 Fugee Tsung 教授等，
目前皆為生產與作業管理領域的知名學者及國際著名期刊的主編。台灣方面，中
原大學、元智大學、明志科大等，均有多位教師帶領研究生參加，參加人數僅次
於主辦國新加坡。 
論文發表分為 26 個主題展開，共發表論文約 160 篇，分為以下主題：Applied 
Statistics and Probability、Business and Data Analytics、Decision Science and 
Technology、Engineering and Technology Management、Engineering Economy and 
Cost Analysis、Facilities Planning and Management、Flexibility in Engineering 
Design、 Flexibility/Real Options in Engineering、Global Manufacturing and 
Management、Healthcare Engineering and Management、Homeland Security、Human 
Factors、Industrial & Systems Engineering Education、Information Processing and 
Engineering、Intelligent Systems、Large scale complex systems、Manufacturing 
Systems 、 Operations Research 、 Production Planning and Control 、 Project 
Management、Quality Control and Management、Reliability and Maintenance 
Engineering、Safety Security and Risk Management、Supply Chain Management、
Systems Modelling and Simulation、System Safety  
 
本次會議除了學術論文發表外，主要有三場Keynote Presentation，第一場由
喬治亞理工學院Carolyn J. Stewart的講座教授Jianjun Shi主講，Jianjun Shi教授主
要研究為系統資訊與控制，也是較早進入此領域的學者，共發表了一本書與140
篇論文。目前也為IIE、ASME與IMFORMS的Fellow。此次講題為Data Fusion for 
In-Process Quality Improvement of Complex Systems。 
另一場由麻省理工學院的Richard de Neufville教授主講，目前研究領域為
inserting flexibility into the design of technological systems。此次講題為Flexibility 
in Engineering Design。 
最後一場邀請到的講者為目前 IIE的Senior Vice President, Gregory H. 
Watson ，講題為 The Challenge of Harmonization in Industrial Engineering 
Education。 
本人和博士生鍾翠萍共同發表論文Scheduling a single batch processing 
machine via artificial immune system。大約有十餘人參加本篇論文的發表，對於我
們提出的artificial immune system十分有興趣。所發表論文的Schedule參見附件
二，所發表的論文參見附件三。 
 
三、心得與收穫 
 
本次會議主要由國立新加坡大學工業工程 TANG Loon Ching 教授主持。綜
合會議之過程，有下列心得與收穫。 
 4 
 
附件一 
 
 
  
 
Presentation Schedule - 29 June 2012, Friday (Day 2)
IE in Taiwan
29 June 2012 11:00 - 12:30
Room: Venus II & III
Chairs: Du-Ming Tsai, Loo Hay Lee
James C. Chen
Erh Juei Wang
Shuo-Yan Chou
Shu-Kai Fan
IE in Hong Kong
29 June 2012 13:30 - 15:00
Room: Venus II & III
Chairs: Fugee Tsung, Ek Peng Chew
Fugee Tsung
Aaron Tong
Sammy Wan
Harry Li
IE in Japan
29 June 2012 15:30 - 17:00
Room: Venus II & III
Chairs: Takashi Irohara, Xue Ming Yuan
Kenichi Nakashima, Mitsutoshi 
Kojima
Tetsuo Yamada, Yusuke Kume
Hisashi Yamamoto
Keisuke Nagasawa, Takashi Irohara, 
Yosuke Matoba, Shuling Liu
Human Factors I
29 June 2012 11:00 - 12:30
Room: Jupiter I
Chairs: Brian Peacock
Yi-Lang Chen, Yi-Nan Liu
Chien-Hsin Yang, Tsung-Hsuan Tu
Yi-Lang Chen, Shu-An Yeh
Yopika Mutia Sandra, Agus Mansur, 
Amarria Dila Sari, Catur Siwi 
Handayaningtyas
Irna Azzadina, Yuni Ros Bangun
Chien-Chih Wang, Yi- Jen Tsai
Service Science, Management and Engineering 
29 June 2012 13:30 - 15:00
Room: Jupiter I
Chairs: Kay Chuan Tan, Artie Ng
Zhou Qi, Tan Kay Chuan
Hyung Sool Oh, Seung Ki Moon, Jose 
A. Ventura
Mustofa, A. Cakravastia, D. Irianto, B. 
P. Iskandar
Artie Ng
Lili Chen, Xi Zhang, Xiaoyun Xu
Zhou Yuan, Huang Boray, Hung Hui-
Chih
Special Session "IE Transformation to Improve China’s Productivity and Quality"
Productivity improvement with lean management in footwear industry in China and 
southeastern Asia
Applications of industrial engineering techniques on agriculture in Taiwan
Status and opportunities of Internet of Things: an industrial engineering perspective
Advanced process control framework in Taiwan’s semiconductor industry
Operations Management using Two Types of Kanbans in a Disassembly Line
Analysis of human spinal curvatures while bicycling on road
An ambulance location model incorporating failure and survival probabilities
A Novel Hybrid Approach for ICU Patient Mortality Prediction
Organizational slack resources and performance in a public health care service provider: 
an exploration study
A Servicing Strategy Involving Imperfect Repair for Products Sold with One-Dimensional 
Warranties
Service Reliability Evaluation using Fuzzy Failure Mode Effects Analysis and Grey Theory
The Drivers of Effectiveness and Efficiency in Service Design
Relationship Between Lower Muscles Activities and Dynamic Balance Force
Perception Configuration in Knowledge Sharing
An Ergonomics Study on Musculoskeletal Disorders and Hearing Loss of Telephone 
Customer Service Workers
Ergonomic Participatory Design and Evaluation New Rice Planter Tool as Revival of 
Agriculture’s Indonesia
Rotation of muscle activities while cycling with different handle heights
Item classification and policy selection based on canonical correlation analysis and 
regression analysis
Queueing Analysis of Disassembly Systems with Reverse Blocking Considering Sorting 
Traffic and Buffer Capacities
6
Sarah Shuchi, Robin Drogemuller, 
Tristan Kleinschmidt
Arun N Nambiar
Mehdi Ranjbar Bourani, Michel-
Alexandre Cardin
Yinghan Deng, Linmiao Zhang, Michel-
Alexandre Cardin
Sarah von Helfenstein
Melanie K. Wong, Richard de 
Neufville
Business Data and Analytics
29 June 2012 13:30 - 15:00
Room: Jupiter III
Chairs: Agus Mansur, Kah Wah Lai
Agus Mansur, Yasser Azka Ulil Albab, 
Abdul Djalal
We Shim, Dohyun Kim, Oh-Jin Kwon, 
Young-Ho Moon, Keun-Hwan Kim
Dohyun Kim, Oh-Jin Kwon, We Shim, 
Kyungsik Lee, Young Seon Jeong
Fariborz Kalashi, Ali Sorayaei, 
Sobhan Asian
Shu-Hua Chien, Ying-Hueih Chen
Jyh-Jeng Wu, Chang-Jhan Wang
Jyh-Jeng Wu, Ying-Hueih Chen
Shu-Hua Chien, Wan-Ju Lin
Eunhye Kim, Heawon Lee, Hongsuk 
Hu, Sangrak Lee
Imam Djati Widodo, Alva E. Tontowi, 
Subagyo
Facility Layout and Planning
29 June 2012 15:30 - 17:00
Room: Jupiter III
Chairs: Kien-Ming Ng, Gary Chen
Gary Chen, Ju-Chieh Lo
Nai-Chieh Wei, I-Ming Chao, Chia 
Ling Chung, Ruei Yang Weng
Mei-Shiang Chang, Ting-Chen Ku
Ji-Pyng Chiou, Chueh-Hsien Pan
Nikorn Sirivongpaisal, Sakesun 
Suthummanon, Supawan Srithip
Yanfeng Chu, Meimei DaiEvolution model of complex networks of industrial chain
Simulation Optimization for Cycle Time Improvement of Head Stack Assembly Process
Combining CODEQ and SQP methods for Dynamic Systems
A Slicing Tree and Harmony Search Based Heuristic for the Unequal-Area Block Facility 
Layout Problem
A genetic algorithm based approach for solving dynamic facility layout problem
Evaluating the Efficiency of the Financial Firms: A New Approach to Data Envelopment 
Analysis (DEA)
Analysis of the US registered patents using a signomial regression
Pareto Front Approach to Multi-objective Dynamic Facility Layout
New Product Success Forecasting Model Development: A Comparative Study
Workload Estimation and Balancing Method for Delivery Post Offices
Is there has trust transfer and repair in multi-channel? An empirical study of telecom 
service and mobile manufacturer in Taiwan
The relationship among trust repair, customer participation, positive emotion, and post-
trust
Effect of Open Innovation on the Value of Enterprises - Focus on Technology Alliance 
Networks
Analysis of Telecommunications Industry Consumer Movement in Indonesia with K-
Means Clustering
A Prototype for Investigating Flexible Decision Frameworks in Water Resource Planning
Natural Resource Recovery Systems for New City Design: Using Flexibility to Expand the 
Frontier of Best Practices
Flexibility in Biofuel Supply Chain System
Screening Flexible Design Strategies Efficiently to Improve the Lifecycle Performance of 
Engineering Systems: A Case Study in the LNG Industry
Holonic Manufacturing Systems - A current perspective
Flexible Airport Terminal Design: Towards a Framework
8
Ilkyeong Moon, Jianghui 
Wang, Sungchan Kim
Manufacturing Systems and Project Management
30 June 2012 11:00 - 13:00
Room: Jupiter II
Chairs: Sammy Wan, Aaron Chia
J. Seif, R. Tavakkoli-
Moghaddam, M. Baghersad
Shufan Liu, Syuanyu Zhang
Ju-Yong Lee, BongJoo Jeong
Sammy K.M. Wan 
Masahiro Nowatari
Young Seon Jeong, Kyungsik 
Lee, Raja Jayaraman
Information Processing and Engineering
30 June 2012 14:00 - 15:30
Room: Jupiter II
Chairs: Kim Leng Poh, Shu-Kai S.Fan
Shu-Kai S. Fan, Yi-Ru Su
Yu-Chiang Chuang
Seung Hwan Park, Sung-Shick 
Kim, Jun-Geol Baek, Cheong-
Sool Park, Jun Seok Kim, Hyunsoo Yoon, Jun-Geol 
Baek, Cheong-Sool Park, 
Young-Hak Lee
Tuananh Tran, Shoaib ul 
Hassan, Towqeer Sattar
Joonyoung Park
Production Planning and Control I
30 June 2012 11:00 - 13:00
Room: Jupiter III
Chairs: Gary Lin, Adam Ng
Gary C. Lin
Hui-Mei Wang, Fuh-Der Chou
Chun-Lung Chen
Hui-Mei Wang, Fuh-Der Chou
Chun-Cheng Lin, Jia-Rong 
Kang, Shu-Hsing Chung, Kai-
Shin Chou
Jun-Hee Han, Ji-Won Yang
Dah-Chuan Gong, Gary C. Lin, 
Jia-Lun Kang, Wen-Na Ma, Tsi-
Yang LuHorng-Chyi Horng
Production Planning and Control II
30 June 2012 14:00 - 15:30
Room: Jupiter III
Chairs: Dah-Chuan Gong, The Jin Ai
Tsui-Ping Chung, Ching-Jong 
Liao
The Jin Ai, Slamet Setio 
Wigati, Dah Chuan Gong
Trung Hieu Tran, Thi Thu Ba 
Nguyen, Kien Ming Ng
The Location Routing Problem with Multi-Compartments and Multi-Trips
A Constrained Clustering Approaches for Mixed Process Data Using Recursive Partitioning 
and Regression Trees
An Image Registration Method Based On Combined Normalized Mutual Information And 
Distance Transform
Fault Detection of Cyclic Signals Using Principal Curve Analysis in Semiconductor 
Manufacturing Process
Defect patterns classification on semiconductor wafer using multiclass support vector 
machine with dynamic time warping kernel
Confirmation on Teamwork Construction in Global First Line Worker Based on Religion
Flexible and Diverse Maintenance Activities in a Single Machine Scheduling Problem
System Dynamics Approaches for Improving Productivity in Hong Kong Construction 
Industry
Minimizing total tardiness on identical parallel machines under a machine availability 
constraint
Using PSO algorithm to design manufacturing parameters in semiconductor test vehicle
Investigation of Crowd Participation in a Crowdsourcing Project for New Product 
Development with Qualified Crowd
Developing heuristics to solve flexible flow lines scheduling problems with queue time 
Lot Sizing for a Production System with Two Imperfect Components and a Bivariate 
Geometric Distribution
Particle swarm optimization algorithms to hybrid flow shop scheduling problem with 
sequence-dependent setup times
An Economic Production Quantity on an Imperfect Production System over Finite Planning 
Horizon
Scheduling of LED chip sorting sequencing model in LED manufacturing
An improved water flow algorithm for job shop scheduling problem
Simulating the Effects of Order Review and Release on Scheduling Performance of a Hybrid 
Production Lot Size Determination in Considering Time-of-Value and Two Imperfect Key 
Production Subsystems
Scheduling a single batch processing machine via artificial immune system
Production and transportation planning in a two-level supply chain with shared processing 
Modeling the Material Allocation System for a TFT-LCD Module Factory Using Make-to-
stock Production
10
 12 
 
附件三 
 
Scheduling a single batch processing machine  
via artificial immune system 
 
Paper ID: 158 
 
Tsui-Ping Chung  
Ching-Jong Liao 
Department of Industrial Management,  
National Taiwan University of Science and Technology,  
Taipei, Taiwan 
 
 
Abstract 
This paper investigates the problem of minimizing makespan on a single batch processing machine. 
Each job has a release time and the batch capacity is bounded. Since the problem is NP-hard, an 
immunoglobulin-based artificial immune system algorithm, called IAIS, is developed to find an 
optimal or near-optimal solution. The proposed IAIS algorithm has two special features. First, we limit 
the searching area in the somatic recombination process in order to decrease the computational time. 
Second, several local search methods are mixed for use in each run to avoid losing the optimal solution. 
To verify IAIS, comparison with an existing algorithm is made. Computational results show that the 
proposed IAIS algorithm is very competitive for the single batch processing machine problem.  
 
Keywords 
artificial immune system, batch processing machine, release time, bounded batch capacity 
 
1. Introduction 
The motivation of this problem is the process in testing house of semiconductor. The process of 
testing house is often composed of four major steps including testing, lead scanning, baking, and 
packing. In the baking operation, IC chips in lots must be grouped into batches to put into the oven 
where the capacity is finite, and arriving lots cannot interrupt the baking process until the current lots 
are finished. In order to reduce the throughput time, the makespan criterion is considered.  
In this paper we consider a single batch processing machine problem wherey The proposed 
problem has been shown to be NP-hard by Lee and Uzsoy [1] even in the case when the batch bounded 
is determined by job sizes. 
In what follows, we review the recent literature related to the single batch problem with job 
release time. Liu and Yu [2] propose a pseudo polynomial algorithm is for the case with a fixed number 
of release dates. A greedy heuristic for the general problem is shown to have the best-performance 
bound 2. Sung and Choung [3] provide some heuristics to minimize makespan on a single burn-in oven 
in semiconductor manufacturing with different job release times. Wang and Uzsoy [4] combined a 
dynamic programming algorithm with a random key-based representation genetic algorithm to 
minimize the maximum lateness on a single batch processing machine in the presence of job available 
time. Li et al. [5] consider a problem of scheduling jobs with release times and non-identical job sizes 
on a single batching machine with minimize makespan. An approximation algorithm with a worst-case 
ratio 2+εis proposed. Lu et al. [6] consider the unbounded parallel batch machine scheduling with 
release dates and rejection. The objective is to minimize the sum of the makespan of the accepted jobs 
and the total rejection penalty of the rejected jobs. Binary NP-hard is shown and a polynomial 
algorithm is proposed.  
For the job sizes constraints, Zhang et al. [7] deal with the problem of minimizing makespan on a 
single batch processing machine. The batch size is bounded. Two approximation algorithms with 
worst-case of 3/2 and 7/4 are given. Dupont and Dhaenens-Flipo [8] provide a single-batch processing 
machine problem with non-identical capacity requirements to minimize the makespan. Some 
 14 
 
the specific antigen, B cells are dead within a period. Thus, B cells repertoire is never static, and newly 
generated antibodies are continually being tested against the antigen infection. 
According to the process of natural immune response, an artificial immune system algorithm is 
proposed in the next section.  
 
3. The proposed IAIS algorithm 
In this section, we propose the IAIS (immunoglobulin-based AIS) algorithm. The nature immune 
system is very complex and fathomless, and the new phenomenon is discovered day by day. However, 
in the literature the structure of most AISs is still based on a fix model with clone selection and 
mutation. The basic idea of the proposed IAIS is to develop a progressive system, where its structure is 
presented as follows.  
Step 1. Generate a population of A  antibodies. 
Step 2. For each antibody, somatic recombination and IgM are used. If the new objective 
function is smaller than old one, replace the antibody. 
Step 3. Repeat C  times to choose IgG, IgE, or IgA to be a new type of antibody. If the new 
objective function is smaller than old one, replace the antibody. 
Step 4. Eliminate antibodies except the best antibody in the population and generate the new 
antibodies and replace with the eliminated ones. 
Step 5. If reach the criterion, stop the heuristic; otherwise, go to Step 2. 
3.1 Encoding, Decoding, and Affinity calculation  
In this study, possible schedules are represented by integer-valued strings of length n. The n 
elements of the strings are the job numbers. Each possible schedule is represented by a string with n 
jobs. Those strings are accepted as antibodies of the AIS. The algorithm goes up to solution by the 
evolution of these antibodies.  
The decoding method is presented as follows. 
Step 1. Select the unscheduled job by the string sequence and place it in the first batch with 
enough space to accommodate it. If it does not fit an existing batch, create a new batch.  
Step 2. Repeat Step 1 until all jobs have been assigned to a batch.  
Step 3. Sequence the batches by the earliest release time (ERT) order on the machine. 
The string is accepted as an antibody of the proposed AIS algorithm. Many decoding methods are 
proposed in the literature due to avoid falling local search. However, using these methods in local 
search based algorithm spends more computational time.  
Each antibody has a makespan value that refers to the affinity value of current antibody. Affinity 
value is higher when antigens and antibodies have more complementary shapes. Therefore, affinity 
value of each schedule calculated by function Affinity( ) 1/ makspan( ),a a=  where a is the considered 
antibody. From the equation, a lower makespan value creates a higher affinity value.  
3.2 Population generation 
For each string of an antibody, a random value is given. The sequence of string is arranged by the 
increasing order of the random value. It is a simple method to find a new string. After executing A  
times, a new population is generated. 
3.3 Somatic recombination  
Each antibody is formulated by the genes which are sequenced as a string. To produce additional 
diversity in the antigen-binding sites of antibodies, the partial genes of antibody are cut and spliced 
randomly by somatic recombination during the development of B cells.  
A number D  of n jobs are randomly selected in each antibody and the sequence of antibody 
with the best objective function in the current generation is used to be a standard string. Those selected 
jobs in the antibody should follow the sequence of the standard string to rearrange its sequence. The 
function is to limit the searching area in order to decrease the computational time. 
3.4 Somatic hypermutation  
There are four isotype immunoglobulins, IgM, IgG, IgE, and IgA. Each isotype has a different 
function. If the makespan of a new string in IgM is larger than that of the old one, three isotype 
immunoglobulins, IgG, IgE, and IgA are randomly selected to be the next mutated method. 
IgM: The inverse mutation is used here. For a sequence s, let i and j be randomly selected two 
positions in the sequence. A neighbor of s is obtained by inversing the sequence of jobs 
between i and j positions. It is noted that it is not allowed to be mutated if | | 2i j− < . 
IgG: The pair-wise mutation is used. For a sequence s, let i and j be randomly selected two 
positions in the sequence. A neighbor of s is obtained by swapping these two jobs. 
 16 
 
J1S1-3 186  0.00  0.00  0.005 0.00  0.00  0.053  
J1S1-4 235  0.00  0.00  0.005 0.00  0.00  0.055  
J1S1-5 241  10.40  0.00  0.226 10.40  0.00  0.061  
Average  2.80  0.00  0.095 2.80  0.00  0.056  
J1S2-1 228  0.00  0.00  0.197 0.00  0.00  0.048  
J1S2-2 271  3.70  0.00  0.004 3.70  0.00  0.031  
J1S2-3 260  0.00  0.00  0.216 0.00  0.00  0.047  
J1S2-4 316  0.00  0.00  0.195 0.00  0.00  0.039  
J1S2-5 260  10.40  0.00  0.195 10.40  0.00  0.036  
Average  2.80  0.00  0.162 2.80  0.00  0.040  
 
Table 3: Comparison results on benchmark problems ( 20)n =  
  ACO IAIS 
Instance LB Gap std CT Gap std CT 
J2S1-1 399  19.70  0.00 0.777 19.70 4.24  0.194 
J2S1-2 349  0.00  0.00 0.808 0.00 0.00  0.161 
J2S1-3 400  13.10  1.76 0.849 13.10 2.92  0.205 
J2S1-4 372  28.20  5.79 1.110 28.20 2.98  0.198 
J2S1-5 339  4.20  0.00 0.090 4.20 0.32  0.192 
Average 372  13.00  1.51 0.727 13.00 2.09  0.190 
J2S2-1 427  5.50  0.00 0.400 5.50 0.00  0.209 
J2S2-2 548  6.30  0.00 0.271 6.30 0.00  0.130 
J2S2-3 562  9.80  0.00 0.296 8.30 0.00  0.167 
J2S2-4 532  6.20  0.00 0.270 3.50 0.00  0.125 
J2S2-5 556  0.00  0.00 0.282 0.00 0.00  0.150 
Average 525  5.60  0.00 0.304 4.70 0.00  0.156 
 
Table 4: Comparison results on benchmark problems ( 50)n =  
  ACO IAIS 
Instance LB Gap std CT Gap std CT 
J3S1-1 841  5.20  5.30 5.125 7.60 9.87  1.028 
J3S1-2 579  10.50  5.13 6.163 5.70 12.19  1.069 
J3S1-3 888  11.50  11.11 4.941 7.50 12.71  1.183 
J3S1-4 716  12.80  12.53 6.783 8.40 15.62  1.016 
J3S1-5 752  9.60  3.69 9.130 8.80 5.91  1.038 
Average 755  9.90  47.55 6.428 7.60 11.26  1.067 
J3S2-1 1213  18.60  0.00 2.235 18.60 0.00  1.098 
J3S2-2 1247  0.50  2.00 4.004 0.10 4.03  1.235 
J3S2-3 1297  5.70  0.00 2.361 5.70 2.20  1.175 
J3S2-4 1342  8.00  0.00 1.903 8.00 0.00  0.772 
J3S2-5 1176  7.20  2.35 2.527 7.00 0.00  1.049 
Average 1255  8.00  0.87 2.606 7.90 1.25  1.066 
 
Both of IAIS and ACO reach the same solutions in 23 of 40 instances. IAIS can find better 
solutions than ACO in 14 of 40 instances. The average Gap of IAIS is 6.98 better than of ACO with 
7.63. The algorithms have average standard deviation as follows: 3.95 of ACO and 5.66 of IAIS. For 
both algorithms, the computational time is increasing as the number of jobs becomes large but ACO 
need much more time to find a better solution. The average computational time of IAIS is 1.6 seconds 
while average computational time of ACO is 5.6 seconds. Computational results show that IAIS is very 
competitive for the single batch processing machine problem. 
 
 
Table 5: Comparison results on benchmark problems ( 100)n =  
  ACO IAIS 
Instance LB Gap std CT Gap std CT 
J4S1-1 1521  8.10  5.53 20.612 11.40 19.72  4.747 
 18 
 
13. Luo, H., Huang, G.Q., Zhang, Y., Dai, Q., and Chen, X., 2009, “Two-stage hybrid batching 
flowshop scheduling with blocking and machine availability constraints using genetic 
algorithm,” Robotics and Computer-Integrated Manufacturing, 25(6), 962–971. 
14. Chiang, T.C., Cheng H.C., and Fu, L.C., 2010, “A memetic algorithm for minimizing total 
weighted tardiness on parallel batch machines with incompatible job families and dynamic job 
arrival,” Computers & Operations Research, 37(12), 2257–2269. 
15. Wang, C., and Uzsoy, R., 2002, “A genetic algorithm to minimize maximum lateness on a 
batch processing machine,” Computers & Operations Research, 29 (12), 1621–1640. 
16. Malve, S., and Uzsoy, R., 2007, “A genetic algorithm for minimizing maximum lateness on 
parallel identical batch processing machines with dynamic job arrivals and incompatible job 
families,” Computers & Operations Research, 34(10), 3016–3028. 
17. Liao, L.M., and Huang, C.J., 2010, “Tabu search heuristic for two-machine flowshop with 
batch processing machines,” Computers & Industrial Engineering, 60(3), 426–432. 
18. Melouk, S., Damodaran, P., and Chang, P.Y., 2004, “Minimizing makespan for single machine 
batch processing with non-identical job sizes using simulated annealing,” International Journal 
of Production Economics, 87(2), 141–147. 
19. Engin, O., and Döyen, A., 2004, “A new approach to solve hybrid flow shop scheduling 
problems by artificial immune system,” Future Generation Computer Systems, 20(6), 
1083–1095. 
20. Bagheri, A., Zandieh, M., Mahdavi, I., and Yazdani, M., 2010, “An artificial immune 
algorithm for the flexible job-shop scheduling problem,” Future Generation Computer 
Systems, 26(4), 533–541. 
21. Prakash, A., Khilwani, N., Tiwari, M.K., and Cohen, Y., 2008, “Modified immune algorithm 
for job selection and operation allocation problem in flexible manufacturing systems,” 
Advances in Engineering Software, 39(3), 219–232. 
22. Woldemariam, K.M., and Yen, G.G., 2010, “Vaccine-enhanced artificial immune system for 
multimodal function optimization,” IEEE Transactions on Systems, Man, and Cybernetics, 
Part B: Cybernetics, 40(1), 218–228.  
23. Ge, H.W., Sun, L., Liang, Y.C., and Qian, F., 2008, “An effective PSO and AIS-based hybrid 
intelligent algorithm for job-shop scheduling,” IEEE Transactions on Systems, Man and 
Cybernetics, Part A: Systems and Humans 38(2), 358–368. 
24. Parham P., 2005, “The Immune System, second edition”, USA: Garland Science Publishing. 
 
 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：廖慶榮 計畫編號：98-2221-E-011-052-MY3 
計畫名稱：供應鏈及排程之整合 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
