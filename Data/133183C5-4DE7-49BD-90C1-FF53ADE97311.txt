[8]. However, its corresponding quantum algorithm has 
been very rarely studied before. In this project, it 
is demonstrated that the DNA-based algorithm [8] for 
solving the vertex cover problem of any graph G with 
m edges and n vertices can be implemented by Hadamard 
gates, NOT gates, CNOT gates, CCNOT gates, Grover’s 
operators, and quantum measurements on a quantum 
computer. It is also demonstrated that if Grover’s 
algorithm is employed to accomplish the readout step 
in the DNA-based algorithm, the quantum 
implementation of the DNA-based algorithm is 
equivalent to the oracle work (in the language of 
Grover’s algorithm), that is, the target state 
labeling preceding Grover’s searching steps. This is 
to say that for the quantum implementation of the 
DNA-based algorithm [8], a faster labeling of the 
target state is attained, which also implies a 
quadratic speed-up for solutions to the vertex cover 
problem. It is shown that for solving the vertex 
cover problem of any graph G with m edges and n 
vertices, the proposed quantum algorithm is an 
alternative approach of currently available best 
solution. Furthermore, it is also shown how to 
combine molecular algorithms with the Grover 
algorithm to extend the range of the application of 
the Grover algorithm for finding the extreme values 
from unsorted databases/cost functions. Also it is 
demonstrated how for the same problem, molecular 
solutions are represented in term of unit vector in 
the Hilbert space. 
英文關鍵詞： Optimal Quantum Algorithms, Optimal Molecular 
Algorithms, Optimal Quantum Circuits, NP-complete 
Problems, Vertex Cover Problem. 
 
2 
 
digital computer. The vertex cover problem of any graph with m edges and n vertices 
is a NP-complete problem [6, 7], and its corresponding DNA-based algorithm was 
offered in [8]. To the best of the researchers’ knowledge, the quantum algorithm for 
solving the vertex cover problem has never been proposed before. It will be shown 
below that, if 2n possible solutions of the vertex cover problem can be represented by 
means of the arbitrary superposition of n quantum bits, then a quantum algorithm for 
solving the vertex cover problem is available with much reduced difficulty. 
文獻探討 
[1] R. P. Feynman. “In Minaturization”. D.H. Gilbert, Ed., Reinhold Publishing Corporation, New York, 1961, pp. 
282-296. 
[2] L. Adleman. “Molecular Computation of Solutions to Combinatorial Problems”. Science, 266: 1021-1024, Nov. 
11, 1994. 
[3] R. Feynman. “Simulating Physics with Computers”. Internation Journal of Theoretical Physics, Volume 21, 
No. 6/7, pp. 467-488, 1982. 
[4] A. M. Turing. “On Computable Numbers, with an Application to the Entscheidungsproblem”. Proceeding of 
London Mathematical Society (2), 42, pp. 230-265, 1936. 
[5] D. Deutsch. “Quantum Theory, the Church-Turing Principle and the Universal Quantum Computer”. 
Proceeding of Royal Society of London series A, 400, pp.97-117, 1985. 
[6] M. R. Garey, and D. S. Johnson. Computer and intractability: A Guide to the Theory of NP-Completeness. W. 
H. Freeman Company, New York, 1979. 
[7] R. Karp. “On the Computational Complexity of Combinatorial Problems”. Networks, Volume 5, pp. 45-68, 
1975. 
[8] M. Guo, W.-L. Chang, M. Ho, J. Lu and J. Cao. “Is Optimal Solution of Every NP-complete or NP-hard 
Problem Determined from its Characteristic for DNA-based Computing”. Biosystems, Volume 80, No. 1, pp. 
71-82, 2005. 
[9] P. Benioff. “Quantum Mechanical Models of Turing Machines That Dissipate No Energy”. Physical Review 
Letter 48, pp. 1581-1585, 1982. 
[10] D. Deutsch. “Quantum Computational Networks”. Proceedings of the Royal Society of London, Series A, 
Mathematical and Physical Sciences, Volume 425, No. 1868, pp. 73-90, September 1989. 
[11] E. Bernstein and U. Vazirani. “Quantum Complexity Theory”. Proceedings of the twenty-fifth annual ACM 
symposium on Theory of computing, pp. 11-20, 1993. 
[12] A. C.-C. Yao. “Quantum Circuit Complexity”. Proceedings of the 34th Annual Symposium on Foundations of 
Computer Science, pp. 352-361. 
[13] C. H. Bennett, E. Bernstein, G. Brassard and U. V. Vazirani. “Strengths and Weakness of Quantum 
Computing”. SIAM Journal on Computing, Volume 26, No. 5, pp. 1510-1523, October 1997. 
[14] D. Deutsch and R. Jozsa. “Rapid Solutions of Problems by Quantum Computation”. Proceedings of the Royal 
Society of London, Series A, Vol. 439, pp. 553-558, 1992. 
[15] E. Farhi, J. Goldstone, S. Gutmann and M. Sipser. “Quantum Computation by Adiabatic Evolution”. quant-ph 
4 
 
[32] G. Wu and N. C. Seeman. “Multiplying with DNA”. Natural Computing, Volume 5, Number 4, pp. 427-441, 
2006. 
[33] J. Macdonald, Y. Li, M. Sutovic, H. Lederman, K. Pendri, W. Lu, B. L. Andrews, D. Stefanovic and M. N. 
Stojanovic. “Medium Scale Integration of Molecular Logic Gates in an Automaton”. Nano Letters, 6(11), pp. 
2598-2603, 2006. 
[34] A. Ekani-Nkodo, A. Kumar and D. K. Fygenson. “Joining and Scission in the Self Assembly of Nanotubes 
from DNA Tiles”. Physical Review Letters, 93: 268301, 2004. 
[35] M. Dehnert, W.E. Helm and M.-Th. Hütt. “Informational Structure of two Closely Related Eukaryotic 
Genomes”. Physical Review E 74, 021913, 2006. 
[36] B. K. Müller, A. Reuter, F. C. Simmel and D. C. Lamb. “Single-Pair FRET Characterization of DNA 
Tweezers”. Nano Letters 6, 2814-2820, 2006. 
[37] R.M. Dirks, J.S. Bois, J.M. Schaeffer, E. Winfree and N.A. Pierce. “Thermodynamic Analysis of Interacting 
Nucleic Acid Strands”. SIAM Review, 49(1): pp. 65-88, 2007. 
[38] R. Lipton. “DNA Solution of Hard Computational Problems”. Science, 268: 542-545, 1995. 
[39] C.-W. Yeh, C.-P. Chu and K.-R. Wu. “Molecular Solutions to the Binary Integer Programming Problem 
based on DNA computation”. Biosystems, Volume: 83, Issue: 1, pp. 56-66, January, 2006. 
[40] M. Guo, M. Ho and W.-L. Chang. “Fast Parallel Molecular Solution to the Dominating-set Problem on 
Massively Parallel Bio-computing”. Parallel Computing, Volume, 30, Issue: 9-10, pp. 1109-1125, September - 
October, 2004. 
[41] L. M. Adleman. “On Constructing a Molecular Computer”. DNA Based Computers, Eds. R. Lipton and E. 
Baum, DIMACS: series in Discrete Mathematics and Theoretical Computer Science, American Mathematical 
Society, pp. 1-21, 1996. 
[42] M. Ho, W.-L. Chang, M. Guo and L. T. Yang. “Fast Parallel Solution for Set-Packing and Clique Problems 
by DNA-based Computing”. IEICE Transactions on Information and Systems. Vol. E-87D, No. 7, pp. 1782--1788, 
2004. 
[43] W.-L. Chang, M. Guo and M. Ho. “Towards Solution of the Set-splitting Problem on Gel-based DNA 
Computing”. Future Generation Computer Systems, Volume: 20, Issue: 5, pp. 875-885June 15, 2004. 
[44] W.-L. Chang and M. Guo. “Solving the Set-cover Problem and the Problem of Exact Cover by 3-Sets in the 
Adleman-Lipton's Model". BioSystems, Vol. 72, No. 3, pp. 263-275, 2003. 
[45] M. Ho. “Fast Parallel Molecular Solutions for DNA-based Supercomputing: the Subset-product Problem”. 
BioSystems, Volume 80, pp. 233–250, 2005. 
[46] Christiaan V. Henkel, Thomas Bäck, Joost N. Kok, Grzegorz Rozenberg and Herman P. Spaink. “DNA 
Computing of Solutions to Knapsack Problems”. Biosystems, Volume 88, Issue 1-2, pp. 156-162, March 2007. 
[47] Weng-Long Chang, “Fast Parallel DNA-based Algorithms for Molecular Computation: the Set-Partition 
Problem”. IEEE Transactions on Nanobioscience, Vol. 6, No. 1, pp 346-353, 2007. 
[48] W.-L. Chang, M. Ho and M. Guo. “Fast Parallel Molecular Algorithms for DNA-based Computation: 
Factoring Integers”. IEEE Transactions on Nanobioscience, Vol. 4, No. 2, pp. 149-163, 2005. 
[49] D. Boneh, C. Dunworth and R. J. Lipton. “Breaking DES Using a Molecular Computer”. In Proceedings of 
6 
 
96, pp. 170501. 
研究方法 
I. Quantum Algorithms for Calculating the Number of Ones to Legal Vertex Covers 
for Any Graph G with m Edges and n Vertices 
The following quantum algorithm is proposed to work on the physical quantum 
computer as proposed by Deutsch [5] and is used to calculate the number of ones to 
legal vertex covers for any graph G with m edges and n vertices. For convenience of 
presentation, suppose that ,1bx  ,
1
kr  ,
1
kc  ,
1
,, ajih  ,
1
0,, jif  ,
1
0,, jig  ,
1
0,0z  
1
,1 jiz  , and 
1
1,1  iiz  for 1  b  n, 0  k  m, 0  i  n  1, 0  j  i, and 0  a  i  j 
+ 1, subsequently, denote the value of their corresponding quantum bits to be 1. Also 
assume that ,0bx  ,
0
kr  ,
0
kc  ,
0
,, ajih  ,
0
0,, jif  ,
0
0,, jig  ,
0
0,0z  
0
,1 jiz  , and 
0
1,1  iiz  for 1  b  n, 0  k  m, 0  i  n  1, 0  j  i, and 0  a  i  j + 1, 
subsequently, denote the value of their corresponding quantum bits to be 0. Moreover, 
the notations used in Algorithm 4-2 below have been denoted in previous subsections. 
The first parameter w,in Algorithm 4-2 is used to represent the minimum size of 
vertices among legal answers, and its value is passed from the execution of Step (1a) 
in Algorithm 4-3 in next subsection. To increase the probability of success on 
measuring the answer from among 2
n
 choices, Grover’s algorithm [19] is integrated 
into the proposed quantum algorithm and is used to significantly increase the 
amplitudes of those answers. Grover’s operator is diffusion transform G, which is 
defined by matrix G as follows: Gi, j = ( n2
2
) if i  j and Gi, i = (1+ n2
2
). 
 
Algorithm 4-2 (w): Quantum algorithms for calculating the number of ones to legal 
vertex covers for any graph G with m edges and n vertices. 
(1) For an initial input   = 1   )(
0
 ,
0
  
1
  jiijni z    )(
1
0 ,0z   
)( 0 0,,
00
1 jiijni g    )(
0
0,,
00
1 jiijni f    
)))()((( 1 0,,
0
,,
1
 1 
00
1 jiajijiaijni hh     )(
01
  kmk c   )(
1
0c   
)( 11 kmk r   ),(
01
  bnb x  2
n
 possible choices of n bits (including all possible 
8 
 
)))(
0
 ,
0
1  lsjl z   
1
  ( is  ))(  ,
0
  lssl z   )(
1
0 ,0z   )(
0
0,,
01
1 edde
i
nd g

     
)((( 0,,
1
ed
j
de
i
id g

    )( ,1
0
0,, jiiji zxg     )))(
0
0,,
0
1 edje g   
))(( 0,,
00
1 eddeid g    )(
0
0,,
01
1 edde
i
nd f

    )((( 0,,
1
ed
j
de
i
id f

    
)( 1,,1
0
0,,   jijiiji hxf   )))(
0
0,,
0
1 edje f   ))(( 0,,
00
1 eddeid f    
)))()((( 1 0,,
0
,,
1
 1 
01
1 edaededade
i
nd hh  

   )(((( ,,
1
1
1
aededa
j
de
i
id h

    
)))( 1 0,,edh   ))(( ,,,
0
1,, jijijijiji hzh     )))((( 1,,1,1
0
,,
1
  ajiajiajijia hzh  
 )( 1 0,, jih   ))))()(((
1
0,,
0
,,
1
 1 
0
1 edaededaje hh     
)(((( ,,
1
1
00
1 aededadeid h    ))))(
1
0,,edh   )(
1
kmk c   )(
1
0c   
)( 1 kmk r   )),((
101
  bbnb xx    where FMNO is the quantum circuit in Figure 
4-8, and for m  k  1 quantum bits kc and kr  are all the results generated in Step (2). 
End For 
End For  
(5) 
0 ,1
2
)1(
1 


nn  = )
2
10
( ,wnz

  )( 22
0
  
1
    Iijni   )( 22I   
)( 22
0
  
0
1    Iijni   )( 22
0
  
0
1    Iijni   )))()((( 2222
1
 1 
00
1   IIjiaijni  
 )( 22
1
   Imk   )( 22I   )( 22
1
   Imk   )( 22
1
 Inb  
0 ,
2
)1(
1


nn  = 
)
2
10
(

  wn
z
n
,)1(
2
1
 )(  ,
0
  
1
  jiijni z    )(
1
0 ,0z   )( 0,,
00
1 jiijni g   
 )( 0,,
00
1 jiijni f    )))()(((
1
0,,,,
1
 1 
00
1 jiajijiaijni hh     
)( 1   kmk c   )(
1
0c   )(
1
kmk r   )).((
101
  bbnb xx    
(6) Since quantum operations are reversible by nature, the auxiliary quantum bits can 
10 
 
be implemented by Step (1) in Algorithm 4-2. 
 
Next Step (2) in Algorithm 4-2 works as the unitary operator QEC that is the 
quantum evaluating circuit in Figure 4-7. On the execution of Step (2) in Algorithm 
4-2, it is employed to find choices among 2n possible choices that satisfy each 
formula of the form .ji xx   After Step (2) is executed, the resulting state vector 
0 ,1  is obtained including those legal choices with 
1
mc  that contain at least one 
vertex from each edge in G and those illegal choices with 0mc  that dissatisfy the 
condition. This indicates that the function performed by Steps (2a) through (2d) in 
Algorithm 4-1 can be implemented by Step (2) in Algorithm 4-2 
Next, Step (4a) is embedded in the first loop in Algorithm 4-2 and works as the 
unitary operator FMNO, which is the quantum circuit in Figure 4-8. The step is 
applied to calculate the number of ones (the number of vertices) among the legal 
choices. After repeating Step (4a), the resulting state vector 
0 ,
2
)1(
1


nn  is obtained 
in which the number of vertices in each legal vertex cover is calculated. This implies 
that Steps (4a) through (4b) in Algorithm 4-1 can be implemented by Step (4a) in 
Algorithm 4-2.  
 
Next, one CNOT gate, ),
2
10
( ,wnz

in the execution of Step (5) is used to 
perform the oracle work (in the language of Grover’s algorithm), that is, the target 
state labeling preceding Grover’s searching step. The resulting state vector 
0 ,1
2
)1(
1 


nn  contains the part of the answer with phase 1 and the other part with 
phase +1. Since quantum operations are reversible by nature, the auxiliary quantum 
bits can be restored to their initial states by simply applying the reverse operation, 
and then they can be repeated for safe use. Therefore, the execution of Step (6) is 
used to reverse all those operations completed by Steps (4a) and (2). Next, on the 
execution of Step (7) in Algorithm 4-2, it applies Grover’s operator in Grover’s 
algorithm to perform the task of increasing the probability of success in measuring 
the answer. From Step (8) in Algorithm 4-2, after repeating to execute Steps (2) 
12 
 
Algorithm 4-3, if the answer is found from the wth execution of Step (1a) in 
Algorithm 4-3, then the wth execution of Step (1c) in Algorithm 4-3 is applied to 
terminate Algorithm 4-3. Otherwise, Steps (1a) through (1c) are executed until the 
answer to solving the vertex cover problem for any graph G with m edges and n 
vertices is found. 
結果與討論 
(1) In this research project, we have tried to set up a bridge between the physical 
quantum computer proposed by Deutsch and the biological molecular computer 
proposed by Adleman. 
(2) It is also demonstrated that the vertex-cover problem can be implemented by 
Hadamard gates, NOT gates, CNOT gates, CCNOT gates, Grover’s operators, and 
quantum measurements. 
(3) It is demonstrated how for the vertex-cover problem, molecular solutions are 
represented in term of a unit vector in a finite-dimensional Hilbert space. 
(4) We expect that our algorithm could be completed by a real quantum machine in 
the future. 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：張雲龍 計畫編號：99-2221-E-151-030- 
計畫名稱：在希爾伯特空間最佳化的數學表示方式和最佳化的平行奈米量子演算法對於 NP-Complete
問題的生物分子解 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
