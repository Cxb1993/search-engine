polynomial time computation. It is now known that 
from a one-way function, one can construct other 
basic cryptographic primitives such as pseudo-random 
generator (PRG), pseudo-random function (PRF), 
private-key encryption, bit commitment, zero-
knowledge proof, and digital signature. In fact, all 
these primitives are known to be equivalent in the 
sense that they can all be built based on any one of 
them. From a theoretical perspective, we seem to have 
a good understanding of the relationships among these 
cryptographic primitives. However, from a practical 
point of view, there are still some issues to be 
resolved.  
 
The issue which we studied in this project is the 
security loss in such cryptographic reductions. More 
precisely, when constructing a primitive Q from a 
primitive P, the security of primitive Q is often 
guaranteed against weaker adversaries than those 
against primitive P. Therefore, if we want to 
construct a primitive Q with a certain security 
level, we need to start from a primitive P with a 
much higher security level, which would require a 
substantial cost to implement and make it less 
attractive in practice. Many people have tried to 
improve these constructions but have had little 
success so far, and the goal of this project is to 
understand the reason of such security losses and why 
they are hard to avoid. We started from the most 
basic primitives, and studied the transformations 
from a weakly OWF to a strongly OWF, from a strongly 
OWF to a PRG, and from a PRG with a small stretch to 
a PRG with a large stretch. We considered a type of 
transformations done in a certain black-box way, 
which includes almost all the known cryptographic 
transformations. We showed that when doing 
transformations in such a black-box way, there are 
unavoidable losses of security in terms of the 
circuit size or distinguishing probability of 
adversaries. 
 
Security Loss in Cryptographical Constructions
Chi-Jen Lu
Institute of Information Science
Academia Sinica
Taipei, Taiwan.
E-mail: cjlu@iis.sinica.edu.tw
Abstract
Modern cryptography has provided us with
protocols for many interesting and important
tasks involving security issues. However, al-
most all of these protocols have their secu-
rity based on unproven assumptions which all
imply P NP, so having unconditional proofs
of security for these protocols seem far be-
yond our reach. One line of research then
is to identify the minimal possible assump-
tions and primitives, and use them to build
more and more advanced protocols. One
such primitive is one-way functions (OWF),
functions which are easy to compute but
hard to invert, with respect to polynomial
time computation. It is now known that
from a one-way function, one can construct
other basic cryptographic primitives such
as pseudo-random generator (PRG), pseudo-
random function (PRF), private-key encryp-
tion, bit commitment, zero-knowledge proof,
and digital signature. In fact, all these prim-
itives are known to be equivalent in the sense
that they can all be built based on any one
of them. From a theoretical perspective, we
seem to have a good understanding of the re-
lationships among these cryptographic prim-
itives. However, from a practical point of
view, there are still some issues to be re-
solved. The issue which we studied in this
project is the security loss in such crypto-
graphic reductions. More precisely, when
constructing a primitive Q from a primitive
P, the security of primitive Q is often guar-
anteed against weaker adversaries than those
against primitive P. Therefore, if we want to
construct a primitive Q with a certain secu-
rity level, we need to start from a primitive
P with a much higher security level, which
would require a substantial cost to implement
and make it less attractive in practice. Many
people have tried to improve these construc-
tions but have had little success so far, and
the goal of this project is to understand the
reason of such security losses and why they
are hard to avoid. We started from the most
basic primitives, and studied the transforma-
1
door) one-way permutation.
The second issue is that when construct-
ing a primitive from another, one often suf-
fers some kind of security loss. For example,
although one can construct a PRG from a
OWF, the proofs currently available can only
guarantee the security of the PRG for weaker
adversaries having a smaller running time (or
circuit size) than that for OWF. Therefore, if
we want to have a PRG with a certain secu-
rity level, we need to start from a OWF with
a much higher security level, which would
require a substantial cost to implement and
make it less attractive in practice. Similar
problems also occur in other constructions,
and people have tried to improve these con-
structions, but with limited success so far.
Again, one may wonder whether or not such
improvements are indeed impossible. Not
much seems to be known, and our goal is to
show that such security losses are basically
unavoidable. We would like to start from two
of the most basic primitives: OWF and PRG,
and study the task of hardness amplification
for OWF and the task of constructing PRG
from OWF.
We say that a function f is ε-hard for time
t (or size t), if any algorithm running in time
t (or any circuit of size t) must fail to in-
vert f(x) for at least ε fraction of x’s. The
task of hardness amplification is to trans-
form a function f which is ε-hard for time
t into a function f¯ which is (1 − δ)-hard for
time t¯, for some small δ and ε. According
to [24, 11], this is possible with t¯ = t/γ1,
for some γ1 = ((1/δ)/ log(1/ε))
O(1) (it seems
that a more careful analysis can give γ1 =
O((1/δ)/ log(1/ε))). That is, the hardness of
the new function f¯ is now measured against
algorithms with a running time (or circuit
size) smaller by a γ1 factor than that for the
initial function f . Therefore, when we want
to transform a weakly OWF (with hardness
n−O(1)) into a strongly OWF (with hardness
1 − n−ω(1)), we lose at least a polynomial
factor in the running time (or circuit size)
of adversaries. We say that a function g :
{0, 1}n → {0, 1}m is ε-random for time t (or
size t) if for any algorithm C running in time
t (or any circuit of size t), the probabilities
of C(u) = 1 and C(g(x)) = 1, over random u
and random x respectively, differ by at most
ε. According to [13], one can construct such
a function g with m > n (a PRG), which is ε-
random for time t/γ2 (or size t/γ2), from any
function f which is (1−n−Ω(1))-hard for time
t (or size t), for some γ2 = (n/ε)
O(1). From
[9], one can have γ2 = n
O(1)/ε2, for the sim-
pler case when m = n+ 1 and f is a permu-
tation. Furthermore, it is known that given
a PRG, one can construct from it another
PRG which has a larger stretch (see for ex-
ample [10]). More precisely, given any func-
tion g : {0, 1}n → {0, 1}m which is ε-random
for time t (or size t), one can construct a
new function g¯ : {0, 1}n¯ → {0, 1}m¯, with
m¯ = n+k(m−n), which is ε¯-random for time
t¯ (or size t¯), with t¯ = t−(m¯−m) and ε¯ = k·ε.
Note the blow up of ε¯ from ε by a factor of
k, which makes the resulting PRG (with a
larger stretch) less secure (easier to distin-
guish) than the initial PRG (with a smaller
stretch).
We would like to show the impossibility of
having a hardness amplification of OWF or
a construction of PRG from OWF which can
3
Definition 3. A weakly-black-box trans-
formation from (ε, n,m)-randomness to
(ε¯, n¯, m¯)-randomness consists of a non-
uniform randomized oracle algorithm R
satisfying the following condition. For any
function g : {0, 1}n → {0, 1}m, there exists a
function g¯ : {0, 1}n¯ → {0, 1}m¯ such that
• given any M : {0, 1}m¯ → {0, 1} which
can ε¯-distinguish g¯, there exists an ad-
vice α such that Rg,M ;α can ε-distinguish
g.
In the definitions above, we allow the oracle
algorithm R to be randomized while we con-
sider deterministic oracles M and D. This
means that we consider the easier task of
transforming hardness or randomness against
randomized adversaries to hardness or ran-
domness against deterministic adversaries,
which again makes our impossibility results
stronger. Moreover, we allow the oracle algo-
rithm R in general to make adaptive queries,
which can depend on the answers from previ-
ous queries. We will also consider the case
requiring that R only makes non-adaptive
queries, which do not depend on the answers
from previous queries but can depend on the
input, the random string, and the advice.
Observe that for the first two problems, the
security loss comes from the queries to oracle
M made by R. The reason is that if R makes
q queries toM , then to guarantee that Rf,M ;α
runs in time t (or has a circuit size t), we need
to have M runs in time t/q (or has a circuit
size t/q), so that we can say that if f is hard
for time t (or size t) then f¯ is hard for time t/q
(or size t/q). Thus, our main task is to show
that any such R must make a large number
of oracle queries to M .
Consider the first problem: weakly-black-
box hardness amplification from any ε-hard
function f to a (1 − δ)-hard function f¯ . To
illustrate our proof idea, let us focus on the
simpler case that the oracle algorithm R is a
uniform algorithm. The key is that when R
makes only a small number of queries, it can-
not distinguish well between a useful oracle
and a useless one for inverting f . More pre-
cisely, we know that a randomly chosen func-
tion f is likely to be hard to invert, without
the help of a useful oracle. Given such a hard
function f , let f¯ be the corresponding harder
function. Consider the probabilistic function
M such that independently for any input y¯,
M(y¯) is an element in f¯−1(y¯) with probability
about δ and M(y¯) = 0 otherwise. One can
show thatM is likely to invert f¯(x¯) for δ frac-
tion of x¯, in which case R using M as oracle
can invert f(x) for 1 − ε fraction of x. Now
suppose the oracle algorithm R only makes
a small number of queries to the oracle M .
Then for any input, all the queries to M are
likely to have the answer 0. Therefore, when
we replace the oracle M by an all-0 function,
the behavior of R does not change too much.
This means that by using such a useless con-
stant oracle (with no correlation with f), R
still can invert f well, which is impossible.
Thus, we can conclude that R must make a
large enough number of oracle queries.
The proof idea is similar in spirit for the
second problem: weakly-black-box transfor-
mation from any (1−δ)-hard function f to an
ε-random function g. That is, when R makes
only a small number of queries, it cannot dis-
5
((1− δ), n¯, m¯)-hardness. Then R must make
at least Ω((1/δ) log(1/ε)) oracle queries.
This implies that when doing hardness am-
plification in this way and considering adver-
saries as uniform (or slightly non-uniform) al-
gorithms, one can only guarantee the hard-
ness of the new function f¯ against adver-
saries with a computation time smaller by a
q factor, so a security loss of this factor is
in fact unavoidable. Our second result, The-
orem 2 below, shows that for any R which
can only make non-adaptive queries, it must
again makes at least q oracle queries or now
use an advice of exponential length.
Theorem 2. Let n ≤ m, 2−cn ≤ ε, δ ≤ c,
and ℓ ≤ 2cn, for a small enough constant
c > 0. Suppose an algorithm R uses an ad-
vice of length ℓ and realizes a weakly-black-
box amplification from (ε, n,m)-hardness to
((1− δ), n¯, m¯)-hardness. Then R must make
at least Ω((1/δ) log(1/ε)) oracle queries, if it
only makes non-adaptive queries.
This implies that when doing hardness am-
plification in this way and considering adver-
saries as non-uniform circuits of some small
exponential size, one can only guarantee the
hardness of the new function f¯ against adver-
saries with a circuit size smaller by a q fac-
tor, so a security loss of this factor is again
unavoidable.
In the second year of the project, we con-
sider the task of weakly-black-box construc-
tion of PRG from OWF, which transforms
(1 − δ)-hard functions into ε-random func-
tions. We obtained two results which show
that any algorithm R realizing such a con-
struction must make at least some q2 =
Ω(n/ε2) queries, unless it can use a long ad-
vice. More precisely, our first result of the
second year, Theorem 3 below, shows that
for any R which is allowed to make adaptive
oracle queries, it must make at least q2 oracle
queries or use some linear-size advice.
Theorem 3. Let n ≤ m, 2−cn ≤ ε, δ ≤ c,
and ℓ¯ ≤ cn for a small enough constant
c > 0. Suppose an algorithm R uses an ad-
vice of length ℓ¯ and realizes a weakly-black-box
transformation from ((1 − δ), n,m)-hardness
to (ε, n¯, m¯)-randomness. Then R must make
at least Ω(n/ε2) oracle queries.
Again, this implies that when construct-
ing PRG in this way and considering adver-
saries as uniform (or slightly non-uniform)
algorithms, a security loss of a q2 factor is
in fact unavoidable. Next, our second re-
sult of the second year, Theorem 4 below,
shows that for any R which can only make
non-adaptive queries, it must again make at
least q2 oracle queries or now use an advice
of exponential length.
Theorem 4. Let n ≤ m, 2−cn ≤ ε, δ ≤ c and
ℓ ≤ 2cn for a small enough constant c > 0.
Suppose an algorithm R uses an advice of
length ℓ and realizes a weakly-black-box trans-
formation from ((1 − δ), n,m)-hardness to
(ε, n¯, m¯)-randomness. Then R must make at
least Ω(n/ε2) oracle queries, if it only makes
non-adaptive queries.
Again, this implies that when constructing
PRG in this way and considering adversaries
7
Schemes. In Proceedings of Advances in
Cryptology—EUROCRYPT, pages 272–
287, 2002.
[3] Giovanni Di Crescenzo, Tal Malkin, and
Rafail Ostrovsky. Single database pri-
vate information retrieval implies obliv-
ious transfer. In Proceedings of Ad-
vances in Cryptology—EUROCRYPT,
pages 122–138, 2000.
[4] Yevgeniy Dodis and Leonid Reyzin. On
the Power of Claw-Free Permutations. In
Proceedings of Third International Con-
ference on Security in Communication
Networks, pages 55–73, 2002.
[5] Rosario Gennaro, Yael Gertner,
Jonathan Katz, and Luca Trevisan.
Bounds on the efficiency of generic
cryptographic constructions. SIAM
Journal on Computing, 35(1), pages
217–246, 2005.
[6] Yael Gertner, Tal Malkin, and Omer
Reingold. On the impossibility of bas-
ing trapdoor functions on trapdoor pred-
icates. In Proceedings of the 42nd An-
nual IEEE Symposium on Foundations
of Computer Science, pages 126–135,
2001.
[7] Yael Gertner, Sampath Kannan, Tal
Malkin, Omer Reingold, and Mahesh
Viswanathan. The relationship between
public key encryption and oblivious
transfer. In Proceedings of the 41st An-
nual IEEE Symposium on Foundations
of Computer Science, pages 325–335,
2000.
[8] Oded Goldreich, Shafi Goldwasser, and
Silvio Micali. How to construct random
functions. Journal of the ACM, 33(4),
pages 792–807, 1986.
[9] Oded Goldreich and Leonid A. Levin. A
hard-core predicate for all one-way func-
tions. In Proceedings of the 21st Annual
ACM Symposium on Theory of Comput-
ing, pages 25–32, 1989.
[10] Oded Goldreich. Foundations of Cryp-
tography: Basic Tools. Cambridge Uni-
versity Press, 2001.
[11] Oded Goldreich, Russell Impagli-
azzo, Leonid A. Levin, Ramarathnam
Venkatesan, and David Zuckerman.
Security preserving amplification of
hardness. In Proceedings of the 31st An-
nual IEEE Symposium on Foundations
of Computer Science, pages 318–326,
1990.
[12] Oded Goldreich, Silvio Micali, and Avi
Wigderson. Proofs that yield nothing
but their validity and a methodology of
cryptographic protocol design. In Pro-
ceedings of the 27th Annual IEEE Sym-
posium on Foundations of Computer
Science, pages 174–187, 1986.
[13] Johan H˚astad, Russell Impagliazzo,
Leonid A. Levin, and Michael Luby. A
pseudorandom generator from any one-
way function. SIAM Journal on Com-
puting, 28(4), pages 1364–1396, 1999.
[14] Russell Impagliazzo and Michael Luby.
One-way functions are essential for com-
9
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                            98 年 5 月 15 日 
報告人姓名  呂及人 
 
服務機構
及職稱 
 
中央研究院研究員 
 
     時間 
會議 
     地點 
98 年 4 月 27 日至 4月 30 日
德國科隆 
本會核定
補助文號
計畫編號： 
97-2221-E-001-012-MY3 
會議 
名稱 
 (中文) 
 (英文) Advances in Cryptology – Eurocrypt 2009 
發表 
論文 
題目 
 (中文) 
 (英文) On the security loss in cryptographic reductions 
附件三
 
表 Y04 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/31
國科會補助計畫
計畫名稱: 密碼單元建構的安全性研究
計畫主持人: 呂及人
計畫編號: 97-2221-E-001-012-MY3 學門領域: 計算機理論與演算法
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
