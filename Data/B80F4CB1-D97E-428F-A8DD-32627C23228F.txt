 2
行政院國家科學委員會專題研究計畫年度報告 
以本體論為基之醫療知識整合服務系統設計與實現(II) 
Design and Implementation of an Ontology-based Medical Knowledge  
Integrated Service System (II) 
 
             計畫編號：NSC97-2221-E-327-038 
             執行期限：97 年 08 月 01 日至 98 年 07 月 31 日 
             主持人：陳育仁 國立高雄第一科技大學 會計資訊學系 
   共同主持人：陳裕民 國立成功大學 製造資訊與系統研究所 
蘇永盛 國立高雄第一科技大學 會計資訊學系 
               羅永欽 私立高雄醫學大學 醫療資訊管理學系 
   計畫參與人員：趙中岳 國立成功大學 製造資訊與系統研究所 
                           鄭雅如、顏嘉慧 國立高雄第一科技大學 會計資訊學系 
                Abstract 
    Knowledge-based economies view 
knowledge as the most important asset for a 
knowledge worker in an organization. 
Organizational knowledge can be effectively 
retrieved, managed and shared to create 
competitive advantage that other organizations 
could not imitate. The healthcare organizations 
get the knowledge not only from themselves but 
also from others. Distributed case-based 
reasoning systems (DCBRS) play important 
roles in knowledge-driven cross-organizational 
healthcare collaboration environment by 
supporting knowledge sharing.  
    This study develops a novel mechanism for 
ontology-based distributed case-based reasoning 
using ontology and a proposed multistage 
algorithm to effectively support knowledge 
sharing within a cross-organizational healthcare 
collaboration environment. Tasks involved in 
this study are as follows: (i) design an 
ontology-based distributed case-based reasoning 
architecture and procedure, (ii) develop 
techniques related to the ontology-based 
distributed case-based reasoning, and (iii) 
implement an ontology-based distributed 
case-based reasoning mechanism. Developing 
methods associated with ontology-based 
distributed case-based reasoning involves the 
definition and representation of a user query 
model, definition and representation of a 
knowledge case model, definition and 
establishment of knowledge case index structure, 
and development of a distributed knowledge 
case retrieval and knowledge case adaptation 
methods. Study results will facilitate 
heterogeneous knowledge sharing among 
healthcare organizations in a 
cross-organizational healthcare collaboration 
environment. 
Keywords: Ontology, Case-based reasoning, 
Cross-organizational healthcare 
collaboration, Knowledge retrieval 
 
1. Introduction 
Collaboration among healthcare 
organizations is an industry strategy for 
promoting competition [5][10][16][18][21]. The 
varied medical information and knowledge are 
behind in each healthcare organization. The 
medical professionals of cross-organizational 
healthcare collaboration could use and share 
medical information and knowledge via the 
Internet and other information technologies 
under one rationalized and collaborative process. 
One issue in achieving a knowledge-driven 
cross-organizational healthcare collaboration is 
how to retrieve appropriate medical knowledge 
held by healthcare organizations or personnel in 
a cross-organizational healthcare collaboration 
environment.  
    Knowledge retrieval enables healthcare 
organizations in a cross-organizational 
healthcare collaboration environment to create 
competitive advantage, especially during 
diagnosis, treatment, surgical operation. 
Case-based reasoning (CBR) methods have been 
   4
reasoning system (Fig. 1). This architecture 
consists of case ontology, domain ontology, a 
distributed case base, and ontology-based 
case-based reasoning. These components are 
described briefly as follows.  
(1) Case ontology: The case ontology 
designed in this study is a representation 
for describing the data relationships 
between different sources because each 
healthcare organization has its own case 
representational format. The ontology 
schema is used as a basic content format 
while establishing new data. Therefore, 
defining a case ontology can help in 
transforming different case formats into a 
standard format in distributed 
environments.  
(2) Domain ontology: The domain ontology is 
used to describe the relationships among 
and restrictions to related vocabulary for 
particular domains (e.g., computer, 
automobiles, and medicine). This study 
utilizes the established domain ontology 
as the synonym set to define synonyms for 
domain vocabulary, deal with the problem 
of semantic heterogeneity and transform 
different vocabulary into standard 
vocabulary, as well as use the 
relationships and restrictions among 
different concepts from domain ontology 
as rules for case adaptation.  
(3) Distributed case base: Knowledge cases 
inside each case base in the distributed 
case base will continue growing and 
accumulating as user problem-solving 
frequency increase, and will become an 
important knowledge source for 
ontology-based distributed case-based 
reasoning.  
(4) Ontology-based case-based reasoning: 
Ontology-based case-based reasoning 
primarily retrieves similar knowledge 
cases from a distributed environment and 
adapts these similar knowledge cases 
using the defined domain ontology to 
obtain a proper knowledge case for users. 
 
Ontological 
Cases
Case Ontology
Ontology 
Server
Domain Ontology
CBR System
Healthcare Organization A
Case Base
CaseaseCase
CBR System
Healthcare Organization B
Case Base
CaseaseCase
CBR System
Healthcare Organization N
Case Base
CaseaseCase
‧
‧
‧
Distributed Case Base
Ontology-Based 
Case Base 
Reasoning 
Users
Legend
Term Instance
Link with
Link with
 
Figure 1. Ontology-based Distributed Case- 
     based Reasoning Architecture 
 
2.2 Ontology-based Distributed Case-based 
Reasoning Procedure 
    Based on the ontology-based distributed 
case-based reasoning architecture in Section 
2.1, this section presents the procedure of 
ontology-based distributed case-based 
reasoning to effectively support knowledge 
sharing in a distributed environment as shown 
in Fig. 2.  
    In this procedure, the ontology-based 
distributed cases are first refined, and then 
similar knowledge cases most suited for user 
reference are retrieved through rules-based 
reasoning with domain knowledge. Several 
techniques involved in the procedure of 
ontology-based distributed case-based 
reasoning are developed - query model 
definition and representation, knowledge case 
model definition and representation, knowledge 
case index structure establishment, distributed 
knowledge case retrieval method development, 
and knowledge case adaptation method 
development. These techniques are described in 
Section 3. 
 
   6
definition of basic case data, including case 
name, date, contributor, and address of the 
distributed case base. The problem comprises 
the related descriptions for the case problem, 
which can be classified using qualitative and 
quantitative data. The solution is the 
description of related knowledge and 
experience for dealing with the problem, 
including intent, reasons, principles, experience, 
content and creativity.  
 
Name
Solution_DescriptionProblem_Attribute
SolutionProblem
Case
Knowledge
Content
Address
Date
Contributor
Case_Feature
Qualitative_Data Quantitative_Data
Intent
Experience
Principle Content
Creativity Reason
rdfs:rang rdfs:rangrdfs:rang
rdfs:rang rdfs:rangrdfs:rang
rdfs:rangrdfs:rang
rdfs:rang
rdfs:rang
rdfs:rang
rdfs:rang
conto:hasSolution
conto:hasProblem
conto:hasAttribute conto:hasSolution_Decription
conto:hasCase_Feature
conto:hasContributor
conto:hasDate
conto:hasIP
conto:hasName
conto:hasCreativity
conto:hasIntent
conto:hasReason
conto:hasPriciple
conto:hasExperience
conto:hasContent
conto:hasQualitative_Data conto:hasQuantitative_Data
1..n
1..n
1 1 1 1
1
1
1 1
111
1
1
1
1
11
1
1..n
1
1
1
1
1
11
Legend
Concept
Relationship
1
1..n
1
1
1
1
1
1
1
1
1
1
 
Figure 5. Schema of Ontology-based Knowledge  
Case Model 
 
Based on the defined ontology-based 
knowledge case model, namespaces are 
declared using OWL [8] to provide a reference 
for distributed healthcare organizations to build 
cases and to avoid using a same name for 
different cases and distinguish between markup 
languages. The related attributes of the 
ontology-based knowledge case model can be 
established in the OWL format in terms of the 
defined class, property, and class restriction. 
 
<!-- ########## ########## ########## ########## -->
<!-- Class: Base Classes Defined -->
<!-- ########## ########## ########## ########## -->
<owl:class rdf:ID="Case">
  <rdfs:label>Case Type</rdfs:label>
  <rdfs:comment>The generic Class 'Case' whose 
  instantiation would be a typical Case.
  </rdfs:comment>
<owl:class>
<owl:class rdf:ID="Problem">
  <rdfs:label>Problem</rdfs:label>
  <rdfs:comment>Problem description of a case. A case 
   can have 1(max) problem slot.
  </rdfs:comment>
  <rdfs:range rdf:resource="#Literal"/>
<owl:class>
<owl:class rdf:ID="Solution">
  <rdfs:label>Solution</rdfs:label>
  <rdfs:comment>Solution description for a case. A case 
  can have 1(max) Solution slot.
  </rdfs:comment>
  <rdfs:range rdf:resource="#Literal"/>
<owl:class>
   . . . 
<!-- ########## ########## ########## ########## -->
<!-- Property: Base Properties Defined -->
<!-- ########## ########## ########## ########## -->
<owl:ObjectProperty rdf:ID="hasProblem">
  <rdfs:domain rdf:resource="#Case"/>
  <rdfs:range rdf:resource="#Problem"/>
</owl:ObjectProperty>
<owl:ObjectProperty rdf:ID="hasSolution">
  <rdfs:domain rdf:resource="#Case"/>
  <rdfs:range rdf:resource="#Solution"/>
</owl:ObjectProperty>
   . . .  
<!-- ########## ########## ########## ########## -->
<!-- Class: Class Restrictions Defined -->
<!-- ########## ########## ########## ########## -->
<owl: Class rdf:about="#Case">
  <rdfs:subClassOf>
    <owl:Restriction owl:cardinality="1">
      <owl:onProperty rdf:resource="#hasProblem"/>
    </owl:Restriction>
  </subClassOf>
  <rdfs:subClassOf>
    <owl:Restriction owl:cardinality="1">
      <owl:onProperty rdf:resource="#hasSolution"/>
    </owl:Restriction>
  </subClassOf>
</owl:Class>
   . . . 
 
3.3 Knowledge Case Index Structure 
Establishment 
Based on the basic structure of domain 
ontology (Fig. 6), the knowledge case index 
structure is defined (Fig. 7).  
 
Root
Class
Sub-Class
Instance
Reference
Class
Instance
Slot/
Axiom
Slot/
Axiom
Slot/
Axiom
Legend
Class/Subclass
Slot/Axiom
Instance
Refer_to
Relationship
 
Figure 6. Domain Ontology Framework 
 
    Generally, the elements in the domain 
ontology [8][11] are Class, Slot, Axiom and 
Instance; these elements are described briefly 
as follows.  
(1) Class: This indicates a class or concept, 
such as a liver or kidney, in a human’s 
mind.  
(2) Slot: The slot is used to describe an 
attribute of a concept or relationship 
between concepts.  
(3) Axiom: The axiom creates relationships or 
   8
resonance theory, and information retrieve 
methods.  
 Cases in distributed environments have 
two feature attributes, namely, qualitative and 
quantitative. Qualitative attributes mean words 
or fixed values used to express attribute 
variables, whereas quantitative attributes 
indicate precise values used to show attribute 
variables. Due to the difference between 
feature attribute classes, different methods exist 
for dealing with this issue. Therefore, this study 
first normalizes these qualitative and 
quantitative attributes such that their values are 
0~1, then matches and searches for similar 
cases.  
 For similar cases with quantitative data, 
the features of quantitative attribute are first 
determined to match the similarity for 
quantitative data using a nearest neighbor 
algorithm. Fuzzy clustering is then conducted 
using theα－cut concept in fuzzy theory. With 
this cluster result, the triangle fuzzy 
membership function is applied to calculate the 
triangular membership function that is matched 
with each cluster. Last, quantitative data from 
each case can be calculated using the triangular 
membership function to determine the 
membership value of quantitative data.  
    For similar cases with qualitative data, a 
numerical translation table for normalizing 
numerical data (such that all values are 0~1) is 
first defined, then to fill in all the qualitative 
and quantitative numerical data into the 
relationship tables for case and feature. Similar 
cases are subsequently clustered using fuzzy 
adaptive resonance theory for retrieving similar 
cases. The degree of similarity between each 
similar case and the query case is then derived 
using the euclidean-distance algorithm. Finally, 
these similar cases are ranked based on their 
similarity values and facilitate the case 
adaptation process. Figure 9 shows the case 
retrieval process and related methods.  
 
Calculate the 
Similarity and 
Ranking of Clustered 
Cases 
Translate  Qualitative 
Features into 
Numerical Data
Calculate the Fuzzy 
Value
Cluster Cases 
Depend on Their 
Features
Calculate Each 
Triangular Shape 
Membership 
Functions 
Normalize the 
Numerical Data
Fill  Normalizative 
Features with the 
Table
Cluster Quantitative 
Features Depend on 
Similarity
Calculate the 
Similarity of 
Quantitative Features
Determine the 
Feature Type?
CaseaseCaseaseOntological 
Cases
Ontological 
Query
CaseaseCaseaseSimilar 
Cases
Quantitative FeaturesQualitative Features
Nearest-Neighbor 
Algorithm
Fuzzy Theory—
α-cut Clustering 
Calculating Formula of 
Triangular Shape 
Membership Function 
Triangular Shape 
Membership Function 
The Translative Table 
of Qualitative Feature 
Fuzzy Adaptive 
Resonance Theory
Euclidean-Distance 
Algorithm
Legend
Decision
Action
Method
Action Flow
Support
Cases related 
Features Table
  
Figure 9. Case Retrieval Process and Related  
Methods 
 
3.4.2 Distributed Case Clustering Method 
In this subsection, the fuzzy adaptive 
resonance theory (fuzzy ART) [14][15][17] is 
employed to deal with the case clustering issue.  
    Figure 10 presents the fuzzy ART 
architecture with the upper and lower two 
levels included. The lower level is the input 
layer for input vectors, and the upper layer is 
the output layer for output classes. 
 
Output Class (J): J1, J2, … , Jn
Output 
Level
Input 
Level
‧  ‧  ‧
‧  ‧  ‧
Input Vector (I): I1, I2, … , Im  
Figure 10. Fuzzy ART Architecture 
 
    Steps for fuzzy ART algorithm are as 
follows.  
Step 1. Set parameters, including the initial 
weight value Wij=1, parameter α=0.5, 
learning rate β=0.8, and vigilance 
value ρ =0.5.  
Step 2. Input a new case feature vector S into 
   10
allValuesForm(C) 
someValuesFrom C.P∃  
P(x, y) and y 
=someValuesForm(C) 
hasValue C.P  P(x, y) and y = hasValue(v) 
minCardinality nP≤  minCardinality(P) = N 
maxCardinality nP≥  maxCardinality(P) = N 
 
Additionally, OWL provides many 
restriction equations to axiom with the purpose 
of restricting property and class. Each different 
class feature is created via attribute restrictions; 
different attribute restrictions can illustrate the 
required representative data for a certain class. 
Table 2 presents the relationship equations for 
OWL attribute restrictions. 
 
Table 2. OWL Axioms 
Axiom DL Syntax Example 
subClassOf 21 CC ⊆  21 CC ⊆  
equivalentClass 21 CC ≡  21 CC =  
disjointWith 21 CC ¬⊆  21 CC ≠  
sameIndividualAs { } { }21 XX ≡  21 II =  
differentFrom { } { }21 XX ¬⊆  21 II ≠  
subPropertyOf 21 PP ⊆  21 PP ⊆  
equipmentProperty 21 PP ≡  21 PP =  
inverseOf 
−≡ 21 PP  
If P1(x, y) then P2(y, 
x) 
transitive PP ⊆+  
If P(x, y) and P(y, z) 
then P(x, z) 
symmetric 
−≡ 11 PP  If P(x, y) then P(x, y)
functional P1T ⊆≤  
If P(x, y) and P(x, z) 
then y = z 
inverseFunction −⊆≤ P1T  
If P(y, x) and P(z, x) 
then y = z 
 
4. Prototype Implementation 
    Based on the proposed techniques for 
ontology-based distributed case-based 
reasoning in Section 3, this section first 
presents the mechanism process and 
implements a prototype of mechanism. Then, 
the system evaluation for user satisfaction is 
conducted to meet the retrieved results by the 
system.  
 
4.1 Mechanism Process 
The mechanism process is established 
according to related processes and methods 
developed from ontology-based distributed 
case-based reasoning. This process has the 
following five phases : query and ontological 
case parser ; features normalization ; cases 
retrieval ; cases adaptation ; and cases display 
(Fig. 11). These phases are described as 
follows.  
 
Users
Input Query
Distributed 
Ontological 
Case Base
(DOCB)
Adaptive 
Rule Base
(ARB)
Adapted 
Case
Domain 
Ontology
Ontology-Based Distributed Cased-Based Reasoning Mechanism
Ontology-Based Distributed Case-Based Reasoning
Case 
Ontology
Sub-algorithm 1_Query and Ontological Cases Parser
Sub-algorithm 2_Features Normalization
Sub-algorithm 3_Cases Retrieval
Sub-algorithm 4_Cases Adaptation
Sub-algorithm 5_Cases Display
Figure 11. Mechanism Algorithmic Process 
 
(1) Query and ontological cases parser: This 
step reads the user query cases and 
ontological cases from the distributed case 
base. The algorithmic structure is as 
follows.  
Sub-algorithm 1: Query and ontological 
cases parser  
Input: qt []: Query tags and ct[]: cases tags  
Process:  
Method 1: Getting qt[] from query 
model  
      Method 2: Parser ct[] from 
ontology-based case 
base 
Output: The lf[], nf[] and start features 
normalization 
(2) Normalizing features: After reading the 
feature data in the tag of the ontology-based 
distributed case, feature semantic 
heterogeneity is solved first. Next, 
qualitative and quantitative data features 
are normalized. The algorithmic structure is 
as follows.  
   12
Server 2000, and Micromedia Dreamweaver 
MX 2004.  
Figures 12 and 13 present portions of the 
user interfaces for the ontology-based 
distributed case-based reasoning mechanism 
for cross-organizational healthcare 
collaboration environment. Figure 12 presents 
the knowledge case retrieval and ranking 
interface. Figure 13 shows the user interface of 
knowledge case adaptation. Figure 14 presents 
the screen for knowledge contents of the most 
similar and adapted knowledge case.  
 
 
Figure 12. Snapshot of the Knowledge Case 
Retrieval and Ranking Interface 
 
 
Figure 13. Snapshot of the Knowledge Case 
Adaptation Interface 
 
 
Figure 14. Snapshot of Knowledge Content of 
the Most Similar and  
Adapted Knowledge Case 
 
4.3 System Evaluation from the User 
Satisfaction Perspective 
    To measure user satisfactions, the Delphi 
method [7] has become a widely used tool for 
acquiring a consensus-based opinion from a 
panel of experts. Therefore, this study conducts 
the Delphi method to investigate the ten users’ 
satisfactions for their retrieved results by the 
system. By using the designed questionnaire 
shown in Table 3, the finding indicates that 
over ninety percent of uses satisfied the results 
for retrieving and ranking knowledge cases in 
cross-organizational healthcare collaboration 
environment. 
 
5. Conclusion and Perspectives 
   This study developed a mechanism for 
ontology-based distributed case-based 
reasoning in cross-organizational healthcare 
collaboration environment using ontology and 
a proposed multistage algorithm to help users 
retrieve the most similar knowledge cases from 
a distributed case base based on the description 
of user query requirements. Therefore, tasks 
included in this study were as follows: (i) 
design the ontology-based distributed 
case-based reasoning architecture and 
procedure; (ii) develop techniques related to 
ontology-based distributed case-based 
reasoning; and (iii) implement the 
ontology-based distributed case-based 
reasoning mechanism. Development of 
techniques associated with ontology-based 
distributed case-based reasoning involved the 
following tasks: (1) user query model definition 
and representation; (2) knowledge case model 
definition and representation; (3) knowledge 
Case_03 is the best 
knowledge Case 
by adaptation 
Retrieved 
Knowledge Cases 
   14
[12] Haque, B. U., Belecheanu, R. A., Barson, 
R. J. and Pawar, K. S., Towards the 
application of case based reasoning to 
decision-making in concurrent product 
development (concurrent engineering), 
Knowledge-Based Systems, Vol. 13, No. 
2-3, pp. 101-112, 2000. 
[13] Huang, N. and Diao, S. H., 
Ontology-based enterprise knowledge 
integration, Robotics and 
Computer-Integrated Manufacturing, Vol. 
24, No. 4, pp. 562-571, 2008. 
[14] Kim, M. H., Jang, D. S. and Yang, Y. K., 
A robust-invariant pattern recognition 
model using Fuzzy ART, Pattern 
Recognition, Vol. 34, No. 8, pp. 1685-1696, 
2001. 
[15] Lopes, M. M., Minussi, C. R. and Lotufo, 
A. P., Electric load forecasting using a 
fuzzy ART&ARTMAP neural network, 
Applied Soft Computing, Vol. 5, No. 2, pp. 
235-244, 2005. 
[16] Ortega, E. M., Burgun, A., Duff, F. L. and 
Beux, P. L., Collaborative environment for 
clinical reasoning and distance learning 
sessions, International Journal of Medical 
Informatics, Vol. 70, No. 2-3, pp. 345-351, 
2003. 
[17] Pacella, M., Semeraro, Q. and Anglani, A., 
Manufacturing quality control by means of 
a Fuzzy ART network trained on natural 
process data, Engineering Applications of 
Artificial Intelligence, Vol. 17, No. 1, pp. 
83-96, 2004. 
[18] Sung, M. Y., Kim, M. S., Kim, E. J., Yoo, 
J. H. and Sung, M. W., CoMed: a real-time 
collaborative medicine system, 
International Journal of Medical 
Informatics, Vol. 57, No. 2-3, pp. 117-126, 
2000. 
[19] Tsai, C. Y., Chiu, C. C. and Chen, J. S., A 
case-based reasoning system for PCB 
defect prediction, Expert Systems with 
Applications, Vol. 28, No. 4, pp. 813-822, 
2005. 
[20] Tseng, H. E., Chang, C. C. and Chang, S. 
H., Applying case-based reasoning for 
product configuration in mass 
customization environment, Expert Systems 
with Applications, Vol. 29, No. 4, pp. 
913-925, 2005. 
[21] Weaver, C. A., Warren, J. J. and Delaney, 
C., Bedside, classroom and bench: 
Collaborative strategies to generate 
evidence-based knowledge for nursing 
practice, International Journal of Medical 
Informatics, Vol. 74, No. 11-12, pp. 
989-999, 2005. 
[22] Wilson, R. G., A genetic algorithm for 
circulant euclidean distance matrices, 
Applied Mathematics and Computation, 
Vol. 97, No. 2-3, pp. 197-208, 1998. 
[23] Wriggers, P., Siplivaya, M., Joukova, I. 
and Slivin, R., Intelligent support of 
engineering analysis using ontology and 
case-based reasoning, Engineering 
Applications of Artificial Intelligence, Vol. 
20, No. 5, pp. 709-720, 2007. 
[24] Yang, B. S., Tian Han and, Kim, Y. S., 
Integration of ART-Kohonen neural 
network and case-based reasoning for 
intelligent fault diagnosis, Expert Systems 
with Applications, Vol. 26, No. 3, pp. 
387-395, 2004. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
An Ontology-Based Distributed Case-Based Reasoning for  
Virtual Enterprises 
 
 
Yuh-Jen Chen, Assistant Professor                        Yuh-Min Chen, Professor 
Yung-Sheng Su, Associate Professor             Institute of Manufacturing Engineering 
    Department of Accounting and                      National Cheng Kung University 
 Information Systems                                    Tainan, Taiwan, ROC  
              National Kaohsiung First University                          
 of Science and Technology  
 Kaohsiung, Taiwan, ROC 
   yjchen@ccms.nkfust.edu.tw 
 
 
Abstract 
 
Due to the advent of knowledge-based economy and 
virtual enterprise business model, the enterprises get 
the knowledge not only from themselves but also from 
others. In order to support knowledge retrieval in 
virtual enterprises, the distributed case-based 
reasoning system (DCBRs) plays an important role for 
enabling knowledge-driven virtual enterprises.  
Hence, this paper aims to develop a mechanism for 
ontology-based distributed case-based reasoning using 
characteristic of ontology and a proposed multistage 
algorithm, to effectively support knowledge retrieval 
within the virtual enterprise environment. This study 
involves the following tasks: (i) designing an ontology-
based distributed case-based reasoning architecture 
and procedure, (ii) developing techniques related to 
the ontology-based distributed case-based reasoning, 
and (iii) implementing an ontology-based distributed 
case-based reasoning mechanism. In developing 
techniques related to the ontology-based distributed 
case-based reasoning, which involves definition and 
representation of user query model, definition and 
representation of case model, definition and 
establishment of case index structure, and development 
of distributed case retrieval and case adaptation 
methods. 
Index Terms—Ontology, Case-based reasoning, 
Knowledge retrieval, Virtual enterprise  
 
1. Introduction 
 
A virtual enterprise (VE) [5, 9] is a temporary 
consortium of autonomous, diverse, and possibly 
geographically dispersed organizations that pool their 
resource to meet short-term objectives and exploit fast 
changing market trends. A VE is a dynamic alliance of 
member companies, they join to take advantage of a 
market opportunity. Each member company will 
provide its own core knowledge such as problem-
solving methods and experiences in designing, 
developing or manufacturing products to the VE. One 
issue in realizing this knowledge-driven VE is how to 
retrieve appropriate product knowledge among 
companies or personnel involved in the virtual 
enterprise.  
Knowledge retrieval is an important process that 
enables companies in the virtual enterprise to create 
competitive advantages, especially in the product 
design and development. Case-based reasoning (CBR) 
techniques have been widely employed for knowledge 
retrieval to help knowledge workers complete their 
tasks.[1, 4, 6] However, all researches on CBR systems 
merely focus on retrieving cases in the same system 
and using a pre-defined standard of domain knowledge, 
but the need of sharing knowledge among 
heterogeneous CBR systems has not been considered. 
Moreover, traditional CBR systems only provide 
similar cases without performing case adaptation. This 
circumstance causes a bottleneck in retrieving 
heterogeneous product knowledge and experience in 
virtual enterprise environments.  
Ontology [7, 8] is an agreement about a shared 
conceptualization, which defines an entity, attribute 
and relationship among knowledge concepts within a 
specific domain using explicit descriptions and 
specifications that present an interoperable format both 
humans and machines can understand, thereby 
realizing knowledge sharing and reuse.  
International Conference on Complex, Intelligent and Software Intensive Systems
978-0-7695-3575-3/09 $25.00 © 2009 IEEE
DOI 10.1109/CISIS.2009.23
128
2.2. Ontology-based distributed case-based 
reasoning procedure 
 
This section designs an ontology-based distributed 
case-based reasoning procedure (Fig. 2.) to effectively 
support knowledge sharing in distributed environment. 
In this procedure, the ontology-based distributed 
cases are first refined, and then similar knowledge 
cases that are more suitable for user’s reference need 
are retrieved through rules-based reasoning with 
domain knowledge. There are several techniques 
involved in the procedure of ontology-based 
distributed case-based reasoning to be developed. They 
are “query model definition and representation”, ”case 
model definition and representation”, “case index 
structure establishment”, “distributed case retrieval 
method development”, and “case adaptation method 
development”. These are detailed in Section 3. 
 
 
Figure 2. Ontology-based distributed case-based 
reasoning procedure 
 
3. Ontology-based distributed case-based 
reasoning techniques 
 
The section specifies the techniques of ontology-
based distributed case-based reasoning. These 
techniques involves query model definition and 
representation, case model definition and 
representation, case index structure establishment, 
distributed case retrieval method development, and 
case adaptation method development, all of which are 
discussed in the following subsections. 
 
3.1. Query model definition and representation 
 
According to the above basic structure of RDF [2, 3] 
and combining with the multiplicity concept of the 
Unified Modeling Language (UML), the structured 
query model is presented as shown in Fig. 3. There are 
three parts in this structured query model, as discussed 
in the following:  
1) Concept: represents nouns that users 
described in the query model.  
2) Attribute: means features of each concept; 
they are used to describe appearance or 
characteristics of a concept.  
3) Attribute-Value: indicates the characteristic-
value of each attribute, which can be used to 
distinguish different concepts. 
 
 
Figure 3. Structured query model representation 
 
3.2. Case model definition and representation 
 
This study proposes the ontology-based case model 
(i.e., Case Ontology) so that all knowledge cases in a 
virtual enterprise environment could be transferred into 
a standard format in order to solve the heterogeneous 
problem from case formats. 
As shown in Fig. 4, the schema of ontology-based 
case model is defined to represent the ontology-based 
cases. The schema contains three parts, namely “case 
feature”, “problem”, and “solution”. The case feature 
is the definition of the basic case data including case 
name, date, contributor, and address of distributed case 
base. The problem is exactly the related characteristic 
descriptions for case problem, which can be classified 
into two information types of qualitative and 
quantitative data. While the solution is the description 
of related knowledge and experience for dealing with 
the problem, including intent, reason, principle, 
experience, content and creativity. 
 
 
Figure 4. Schema of ontology-based case model 
 
 
 
130
level is the input level for input vectors; the upper 
layer is the “Output Layer” for output classes. 
 
 
Figure 8. Case retrieval process and related methods 
 
 
Figure 9. Fuzzy ART architecture 
 
Steps for Fuzzy ART Algorithm are as follows: 
Step 1. Set parameters: Including the Initial Weight 
Value Wij=1, Select Parameter α=0.5, Learning 
Rate β=0.8, Vigilance value  ρ=0.5. 
Step 2. Input new Case Feature Vector S in input level. 
Step 3. Calculate the Select Function Tj for each 
operative unit in each output level, the equation 
is as shown in (1): 
w
wT
j
j
j
I
+
∧= α
                                 (1) 
Step 4. Select winning unit  Tθ = maxj{Tj}. 
Step 5. Resonance Test (i.e. the similarity test), the 
equation is as shown in (2): 
ρθ ≥∧
I
I w
                            (2) 
       If Tθ < ρ (Vigilance value) go to step 6, otherwise 
go to step 7.  
 
Step 6. Test if there is any other available output level 
cluster: If there is any output level cluster 
could be tested for similarity value, then go to 
step 4. Try to find the next output cluster with 
the bigger select function value otherwise it 
means there is no more output cluster to do 
resonance test. Then, we could create a new 
cluster and set a new weight value. 
Step 7. Adjust the weight value of output level cluster, 
the equation is as shown in (3) : 
( ) ( ) oldoldnew WWI θθθ ββ −+∧= 1W        (3) 
3.4.3. Distributed case ranking. The Similarity 
Ranking method for distributed case is Euclidean-
distance Algorithm, the equation is as shown in (4) : 
∑
=
−=
n
k
jkik YX
1
2
jiij )()Y , (X D
               (4) 
Dij (Xi, Yj) in above equation is: the distance 
between the i th query case and the j th distributed 
case ; 
        n: the number of attributes; 
        X: attribute value of the query case; 
        Y: attribute value of distributed case; 
        Xi: attribute value of the i th query case; 
        Yj: attribute value of the j th distributed case; 
        Xik: the k th attribute value of the i th query case; 
        Yjk: the k th attribute value of the j th distributed 
case. 
The distributed case with the shortest distance to 
the query case is exactly the most similar distributed 
case, the equation is as shown in (5).  
( )Y) , (X DS ii*i •= Min                   (5) 
In this equation, Di․ (Xi, Y) is: the distance value 
between all the distributed cases and the i th query case; 
 
       Si*: the similarity value between the i th query case 
and the most similar distributed case. 
 
3.4.4. Case adaptation method. Basically, Case 
Adaptation is using relationship and restrictions 
132
reference, the algorithm structure is as shown 
below:  
 
Sub-algorithm 1: Display Cases (DC) 
Input: ac[]: Adapted Cases 
Process: Method 1: Storing the Input ac[] in ODCB 
                  Method 2: Showing the Input: (1) Ranking 
                                                                  (2) Display  
Output: The content of ac[] then terminate 
Ontology-Based Distributed Cased-Based 
Reasoning Mechanism 
 
 
Figure 10. Mechanism algorithm process 
 
4.2. Prototype implementation 
 
    This study implements a prototype of the ontology-
based distributed case-based reasoning at the 
Enterprise Knowledge Management Laboratory of 
National Kaohsiung First University of Science and 
Technology. The implementation environment is as 
follows: computer hardware - Intel Celeron CPU 2.6 
GHz; and software - MS Windows XP Professional, 
Tomcat 5.5 of Apache, MS SQL Server 2000, and 
Micromedia Dreamweaver MX 2004.  
    Figures 11, 12 and 13 present portions of the user 
interfaces for the ontology-based distributed case-
based reasoning mechanism for virtual enterprises. 
Figure 11 presents the screen of requirement 
description for the user, while Fig. 12 presents the 
cases retrieval and ranking interface. Figure 13 shows 
the user interface of case adaptation.  
 
 
Figure 11. Snapshot of requirement description 
interface 
 
Figure 12. Snapshot of cases retrieval and ranking 
interface 
 
 
Figure 13. Snapshot of cases adaptation interface 
 
5. Conclusions and perspectives 
 
This study uses mainly the ontology features and 
Case-based Reasoning method to develop one 
134
 1
出席國際學術會議心得報告 
                                                             
計畫編號  NSC97-2221-E-327-038 
計畫名稱  以本體論為基之醫療知識整合服務系統設計與實現(II) 
出國人員姓名 
服務機關及職稱 
 陳育仁/國立高雄第一科技大學會計資訊系/助理教授 
會議時間地點  2009.03.16~2009.03.19/日本福岡(Fukuoka, Japan) 
會議名稱  International Conference on Complex, Intelligent and Software Intensive 
 Systems 
發表論文題目 An Ontology-Based Distributed Case-Based Reasoning for Virtual Enterprises 
 
一、參加會議經過 
    本次會議報到日為 16 March 2009 上午 8:00~10:00，會議開幕儀式則於當日(16 March)上
午 10:00 舉行，之後隨即展開與會人士彼此間的交流。本人於 16 March 2009 上午 9:30 完成
報到手續並領取所有會議資料文件。於 16 March 便展開各論文的宣讀，本次共有上百篇論文
獲准發表，其發表方式分為口頭宣讀與海報展示兩種。每部分皆包含以下各子項：(1)Agent 
Technology, (2)Human-Oriented Systems, (3)Evolving Systems, (4)Intelligent and Cognitive 
Systems and Applications, (5)Genetic Programming and Algorithms, (6)Fuzzy Logic and Fuzzy 
Systems, (7)Neuro-computing and Applications, (8)Knowledge-based Systems, (9)Dynamic 
Systems, (10)Parallel and Distributed Algorithms, (11)Databases and Data Mining, (12)Grid and 
P2P Infrastructures, (13)Data Intensive and Computing Intensive, Applications Scheduling, 
Resource Discovery and Allocation, (14)JXTA-based Applications, (15)Large-scale Collaborative 
Problem Solving Environments, (16)Methodology and Practice of Semantic Grid and Web, 
(17)Web and Grid Service-based Applications, (18)Ubiquitous Computing Applications, Pervasive 
Computing and Applications, (19)Multimedia Systems and Applications, (20)Human-Robots, 
(21)Embedded Systems, (22)Overlay Networks for P2P Systems, (23)Autonomous Systems, 
(24)Autonomic Computing, (25)Bio-inspired Systems and Applications, (26)Fault-Tolerant 
Systems, (27)Heterogeneous Networks, (28)Heterogeneous Wireless Networks, (29)Sensor 
Networks, (30)Ad Hoc Networks, Sensor and Actor Networks, (31)High-Speed Networks, 
(32)Routing Algorithms, (33)Software QoS, (34)Adaptive Software-Intensive Systems, (35) 
Self-Modifying Software Systems, Self-Designing and Self-Maintaining Software.  
    本人所提兩篇論文經大會審核，均獲准於 16 March 2009 下午 2:00~3:30 在 Session 
「 Artificial Intelligence and Applications 」，由本人以英文口頭宣讀方式進行「 An 
Ontology-Based Distributed Case-Based Reasoning for Virtual Enterprises」之研究報告與問題回
 1
出席國際學術會議心得報告與論文 
                                                             
計畫編號  NSC96-2221-E-327-038 
計畫名稱  以本體論為基之醫療知識整合服務系統設計與實現(II) 
出國人員姓名 
服務機關及職稱 
 陳育仁/國立高雄第一科技大學會計資訊系/助理教授 
會議時間地點  2009.03.16~2009.03.19/日本福岡(Fukuoka, Japan) 
會議名稱  International Conference on Complex, Intelligent and Software Intensive 
 Systems 
發表論文題目 
1. An Ontology-Based Distributed Case-Based Reasoning for Virtual 
Enterprises.  
2. Development of a Distributed Product Knowledge Service System.  
 
一、參加會議經過 
    本次會議報到日為 16 March 2009 上午 8:00~10:00，會議開幕儀式則於當日(16 March)上
午 10:00 舉行，之後隨即展開與會人士彼此間的交流。本人於 16 March 2009 上午 9:30 完成
報到手續並領取所有會議資料文件。於 16 March 便展開各論文的宣讀，本次共有上百篇論文
獲准發表，其發表方式分為口頭宣讀與海報展示兩種。每部分皆包含以下各子項：(1)Agent 
Technology, (2)Human-Oriented Systems, (3)Evolving Systems, (4)Intelligent and Cognitive 
Systems and Applications, (5)Genetic Programming and Algorithms, (6)Fuzzy Logic and Fuzzy 
Systems, (7)Neuro-computing and Applications, (8)Knowledge-based Systems, (9)Dynamic 
Systems, (10)Parallel and Distributed Algorithms, (11)Databases and Data Mining, (12)Grid and 
P2P Infrastructures, (13)Data Intensive and Computing Intensive, Applications Scheduling, 
Resource Discovery and Allocation, (14)JXTA-based Applications, (15)Large-scale Collaborative 
Problem Solving Environments, (16)Methodology and Practice of Semantic Grid and Web, 
(17)Web and Grid Service-based Applications, (18)Ubiquitous Computing Applications, Pervasive 
Computing and Applications, (19)Multimedia Systems and Applications, (20)Human-Robots, 
(21)Embedded Systems, (22)Overlay Networks for P2P Systems, (23)Autonomous Systems, 
(24)Autonomic Computing, (25)Bio-inspired Systems and Applications, (26)Fault-Tolerant 
Systems, (27)Heterogeneous Networks, (28)Heterogeneous Wireless Networks, (29)Sensor 
Networks, (30)Ad Hoc Networks, Sensor and Actor Networks, (31)High-Speed Networks, 
(32)Routing Algorithms, (33)Software QoS, (34)Adaptive Software-Intensive Systems, (35) 
Self-Modifying Software Systems, Self-Designing and Self-Maintaining Software.  
    本人所提兩篇論文經大會審核，均獲准於 16 March 2009 下午 2:00~3:30 在 Session 
「 Artificial Intelligence and Applications 」，由本人以英文口頭宣讀方式進行「 An 
Ontology-Based Distributed Case-Based Reasoning for Virtual Enterprises」與「Development of a 
