  
摘要 
 
本計畫研究卡氏網格於含複雜邊界流場之應用性能。流場
藉由 Navier-Stokes 方程及連續方程求解得之，解答邏輯過
程採用分步法(Fractional Step Method)。流場中，含複雜邊
界之障礙物則以 J.F. Ravoux 等人發展的內嵌法 ( Embedding 
Method ) 處理之，並藉由本計畫發展之多層網格法增加障礙
物附近流場之解析度。本文數值方法以具二階精準度之中
央插分法離散 Navier-Stokes 方程之空間項，時間項方面則
利用 Adams-Bashforth 法處理對流項，以 Crank-Nicolson 法
處理擴散項。本文首先以計算方型穴流測試本文數值模式
於不含複雜邊界流場之有效性。透過與 Ghia 等人的研究結
果 ( J. Comput. Phys., 1982 ) 比對，結果十分吻合，證實本
文數值模式之正確性。隨後，經由流過圓柱渦漩逸出流場 
之計算，測試本計畫多層網格法之計算效率，結果顯示，
多層網格法具局部網格加密，整體流場計算效率提昇之
效。最後，應用本文數值模式於渦漩逸出流場之抑制研
究，經由控制圓柱之作用，主圓柱上卡門渦漩(Karmann 
vortex)幾達完全抑制之效果。 
 
ABSTRACT 
 
In this paper, the local grid refinement is focused by using a multi-
block technique. The Cartesian grid numerical method is developed for 
simulating unsteady, viscous, incompressible flows with complex 
immersed boundaries. A finite volume method is used in conjunction 
with a two-step fractional-step procedure. The key aspects that need to 
be considered in developing such a multi-block solver are imposition of 
interface conditions on the inter-block boundaries and accurate 
discretization of the governing equation in cells that are with block-
interface as a control surface. A new interpolation procedure is 
presented which allows systematic development of a spatial 
discretization scheme that preserves the spatial accuracy of the 
underlying solver. The present multi-block method has been tested by 
two numerical examples to examine its performance in the two 
dimensional problems. The numerical examples include flow past a 
circular cylinder symmetrically installed in a Channel and flow past 
two circular cylinders with different diameters. From the numerical 
experiments, the ability of the solver to simulate flows with 
complicated immersed boundaries is demonstrated and the multi-block 
approach can efficiently speed up the numerical solutions. 
 
KEY WORDS:  Cartesian grid, multi-block, fractional-step. 
 
INTRODUCTION 
 
In the numerical simulation of complex physical phenomena, the 
crucial requirement is predictability, i.e., that the simulation results 
remain faithful to the actual physical processes. Errors resulting from a 
lack of spatial resolution are particularly deleterious. However, over-
resolving is computationally expensive. As a result, how to efficiently 
and effectively solve the partial differential equations which represent 
the mathematical model of physical problems concerned becomes a 
subject of active research in numerical analysis (Chacon and Lapenta, 
2006, Ding and Shu, 2006). 
In general, there are two approaches to obtain accurate solution of 
PDEs. One approach is to employ high-order numerical method, and 
the other is to improve the resolution through the computational grid. 
Mesh refinement is desirable to improve spatial resolution by using 
uniform or non-uniform grids. The uniform mesh refinement is that the 
resulting grid evolution equation is generally less nonlinear and less 
stiff which becomes very efficient in conjunction with the line 
successive-overrelaxation (SOR) solver. However, the uniform mesh 
refinement is not perfect for the applications, of which the solution may 
need different resolutions for different regions. 
In this paper, we develop a structured, multi-block Cartesian grid 
method for simulating unsteady, viscous, incompressible flows with 
complex immersed boundaries. One drawback of adopting multi-block 
method as the local refinement technique is that the resulting multi-
block grids are uniform and the corresponding evolution equations is 
less stiff and very efficient in conjunction with line-SOR. For the 
numerical simulations of flow past bluff body problems in the present 
study, we used an Immersed Boundary (IB) method where the solid 
object is represented by a distributed body force in the Navier–Stokes 
equations.  
The current paper will focus on describing these and other salient 
features of the numerical methodology, validating the accuracy and 
fidelity of the approach and demonstrating the capabilities of the solver 
in some complex configurations.  
 
NUMERICAL METHODOLOGY 
 
Fractional-Step Method 
We first describe the underlying solver, the fractional-step method, 
for a Cartesian mesh. The governing equation is the unsteady, viscous, 
incompressible Navier–Stokes equation written in terms of the 
primitive variables. This equation is discretized on a Cartesian mesh 
using a cell-centered colocated (non-staggered) arrangement of the 
primitive variables ( p,u ). The integral form of dimensionless 
governing equations is given by mass conservation  
0=⋅∫ dSnuCS ,                                                                                     (1) 
and momentum conservation 
dS)nu(udVu
t CSCV
⋅+∂
∂ ∫∫ dSn)u(RedSnp CSCS ⋅∇+−= ∫∫
1     (2) 
This is used as the starting point for deriving a second-order accurate 
finite-volume method. In the above equations CV and CS denote the 
control-volume and control-surface, respectively, and n  is a unit 
vector normal to the control-surface. A second-order accurate, two-step 
fractional step method is used for advancing the solution in time. In this 
time-stepping scheme, the solution is advanced from time level “n” to 
“n+1” through an intermediate advection-diffusion step where the 
momentum equations without the pressure gradient terms are first 
advanced in time. A second-order Adams–Bashforth scheme is 
employed for the convective terms and the diffusion terms are 
discretized using an implicit Crank–Nicolson scheme. This eliminates 
the viscous stability constraint which can be quite severe in simulation 
of viscous flows. At this stage, in addition to the cell-center velocities 
which are denoted by u , we also introduce face-center velocities U . 
In a manner similar to a fully staggered arrangement, only the 
component normal to the cell-face is computed and stored (see Fig.1). 
The face-center velocity is used for computing the volume flux from 
each cell in our finite-volume discretization scheme. The semi-discrete 
form of the advection-diffusion equation for each cell can therefore be 
written as  
=Δ
−
∂
∂ ∫ dVt
uu
t
n*
CV dS)]nU(u)nU(u[
nnnn
CS ⋅−⋅−
−−∫ 1132
1  
dSn)uu(
Re
n*
CS ⋅∇+∇+ ∫2
1 ,                                                          (3) 
 cell-center velocities at the east surface can not be computed by using 
Eqs. 11~12 directly, we need to computed velocities at the ghost cell by 
introducing appropriated interpolations first. In this study, a simple way 
devoted to calculate these ghost velocities is using averaged velocity of 
the occupied D2 cells instead, i.e.,  
,/)uuuu(uu GE 44321 +++==                                                      (14) 
where subscript G denotes the D1 ghost cell (for instant E=G, E denotes 
the eastern cell), as shown in Fig.2 (a), which control volume is 
occupied by those four 1, 2, 3, and 4 D2 cells. With the use of Eq. 14, 
the general form of the cell-surface velocities, Eq. 12 can be preserved. 
Most importantly, the second-order accurate of the present numerical 
method are also prevented. 
 
P
3
2w
n
1
2
4
e
1w
E
DS
N NE
W
s
w
(a)
2W
1W
2
D1
(G)
(G)
(G)
(G)
1
P
S
E
D
U w
N
W
1 2
34
(1P)
(1E)
(1NE)
(1N)
(b)
2D
(G)
s
n
e
(G)
(G)
 
Fig. 2 Schematic plots of refinement cells. (a) Coarse cell. (b) Fine cell. 
 
That is the block-interface processing which plays the essential 
part of the present multi-block method. In the general advection-
diffusion equation Eq. 10, except eu  and ev  which has been processed 
in the previous paragraph, there are some other terms such as eU , 
e)x/u( ∂∂  and e)x/v( ∂∂  located at the block interface. Where eU  
and e)x/u( ∂∂  and e)x/v( ∂∂  are used for computing the volume flux 
and momentum flux, respectively, from D1 to D2 cells. Although there 
are varied interpolations available, we use the volume and momentum 
flux from D2 to D1 cells instead, i.e.,  
    22211 dyUdyUdyU wwe ×+×=× ,                                                  (15) 
    
=×∂
∂+×∂
∂=×∂
∂
22211 dy)x
u(dy)
x
u(dy)
x
u( wwe
2
2
22
2
2
11 dy
dx
uudy
dx
uu WW ×−+×−                                                       (16) 
where dy1 and dy2 denote the vertical lengths of D1 and D2 cells, 
respectively. It has to noted that the use of Eqs. 15~16 can make sure 
the mass and the momentum diffusion fluxes, respectively, through the 
D1 and D2 domain interface and vice versa are consistent. 
(3)D2 cells with domain interface 
For the D2 cells with domain interface as shown in Fig.2 (b), since 
Wu , and Wv  are not defined in the computational domain, the general 
form of the cell-face velocities (Eq. 12) can not be applied directly, we 
need to compute these terms by introducing second order accurate 
interpolations. Similar to the processing of ghost D1 cells, these ghost 
velocities are obtained by using averaged value of those adjacent 
velocities, i.e.,  
,/)uuuu(uu GW 44321 +++==                                                      (17) 
where Puu 11 = , 2112 /)uu(u EP += , 
411113 /)uuuu(u NNEEP +++= ,  and 2114 /)uu(u NP += , in which 
the subscript 1P, 1E, 1N, and 1NE denote those corresponding D1 cell, 
D1 eastern, northern, and north-east cells, respectively, as shown in 
Fig.2 (b). Here, NENEEE v,u,v,u 1111  are not defined in our 
computational domains, these velocities are again obtained from Eq. 14. 
Computing *U  and *V  
Following the advection-diffusion step, the intermediate face-
center velocity *U  and *V are computed by interpolating the 
intermediate cell-center velocity.  
(1) For fine-fine or coarse-coarse non-inter-domain cell-face 
21 /)uu(U
*
j,i
*
j,i
*
j,i ++= , 21 /)vv(V * j,i* j,i*j,i ++= .                            (18) 
(2) For fine-coarse domain interface 
At the fine-coarse domain interface shown in Fig. 2, eU  is 
obtained from Eq. 15, 
22211 dyUdyUdyU
*
w
*
w
*
e ×+×=× . 
While wU1 and wU 2  are computed by interpolating the 
intermediate cell-center velocity, i.e., 
2111 /)uu(U Ww +=  and 2222 /)uu(U Ww += ,                            (19) 
where subscripts 1W and 2W denote those ghost D2 cells, consequently, 
Wu1  and Wu2  are again obtained from ghost cell equation (Eq. 17).  
Solving pressure 
The scalar form of the pressure descritization equations (Eq. 6) can be 
read as 
dx])
y
p()
y
p[(dy])
x
p()
x
p[( s
n
n
n
w
n
e
n
∂
∂−∂
∂+∂
∂−∂
∂ ++++ 1111
]dx)VV(dy)UU[(
t
1 *
s
*
n
*
w
*
e −+−Δ=                                                       (20) 
(1) Cells without domain interface 
 By second order accurate center difference method, pressure 
gradients at cell surface are computed from 
dx/)pp()x/p( PEe −=∂∂ , dx/)pp()x/p( WPw −=∂∂ , 
dy/)pp()y/p( PNn −=∂∂ , dy/)pp()y/p( SPs −=∂∂              (21) 
(2) D1 cells with domain interface  
For those D1 cells with domain interface as shown in Fig. 2(a), the 
pressure gradient term at the interface, e)x/p( ∂∂ , need to be processed 
rather than be computed by using Eq. 21 directly. In a manner similar 
to the momentum diffusions processing, the pressure gradient is 
obtained from the diffusion consistency equation, 
=×∂
∂+×∂
∂=×∂
∂
22211 dy)x
p(dy)
x
p(dy)
x
p( wwe
2
2
22
2
2
11 dy
dx
ppdy
dx
pp WW ×−+×− .                                                  (22) 
 are strongly dependent on the resolutions. The difference of Cl obtained 
by B1G1 to that from B1G2 up to 34.4%, while differences of dC  and 
St between coarse (B1G1) and finer (B1G2) grids are 6.8% and 5.0%, 
respectively. Although the improve numerical results of B1G2 to B1G1 
are significant, the B1G2 grid number are four times of B1G1 and the 
CPU time can be more than 6 times of that of B1G1, which means there 
is necessary of a local refinement. To explore the local-refinement-
domain inference on the simulated results, we performed a series of 
numerical simulations by the 2block method arranging the refined area 
around the circular cylinder. Eight grid systems denoted by B2D1 to 
B2D8 are conducted, the refined area of each grid system can be seen 
in Fig. 4 and the grid numbers, including coarse (G1) and finer (G2) 
grid numbers, are listed on Table 1. From the numerical results listed 
on Table 1, it is noted that refined grids around cylinder improve the 
numerical simulation results significantly. For instant with extra 6,000 
refined grids (B2D5 in Table 1), about 20% of the G1 grid number, the 
present 2block method can predict a closely resembled results of B1G2. 
This local-refined-domain inference study not even demonstrates 
efficiency of the present multi-block method, but also indicates the 
local-refinement necessary around the circular cylinder.  
From the image of the local-refined-domain inference study, we 
conducted a three block grid system B3G3 for simulating this vortex 
shedding flow with high resolutions. In B3G3 grid system, the 
computational domain are divided into 3 blocks, which arranged 
uniformly distribution of coarse (G1), finer (G2), and finest (G3) 
Cartesian grids, respectively, where G1 denotes a uniform cell with 
h.yx 020=Δ=Δ , G2 denotes a uniform cell with h.yx 010=Δ=Δ , and 
G3 denotes a uniform cell with =Δ=Δ yx  h.0050 . Computational 
vorticity contours of B3G3 are simulated and plotted on Fig. 5, in Fig. 5 
the 3 blocks are also marked. It is seen from Fig. 5 that the vorticity 
contours are distributing around those block-interfaces smoothly, which 
shows that the present multi-block grid works smoothly even across 
complex and reversed flow fields. Numerical results of dC , Cl, and St, 
grid numbers, and CPU time of B3G3 simulations are collected, these 
values are listed on Table 2 and compared to those results or values of 
B1G1, B1G2, and B2D5. All the computations are carried out on a 
personal computer with Pentium 4 (3.4G) and Fortran 90 compiler. As 
shown on Table 2 that the computational results are greatly improved 
over those of B1G1, B1G2, and B2D5. It is expected that 
computational results are closed to the grid independent results, 
although further investigations are necessary. For instance, we found 
that the simulated Cl differences between B1G1, B1G2, and B2D5 to 
that of B3G3 are up to 39%, 7.2% and 7.9%, respectively. While the 
present multi-block method improves the coarse single-block 
simulations greatly, the grid size and CPU time of multi-block method 
are still preserved at the coarse-grid level. So far, it can be observed 
from the numerical tests that our multi-block algorithm can achieve an 
equivalent accuracy as it obtains on the finest uniform mesh, and at the 
same time greatly save the CPU time. 
0 5
x
-2
-1
0
1
2
y D1 D2 D3
D4 D5 D6 D7
D8
 
Fig. 4 Refine domain plots of B2D1 to B2D8. 
 
Table1 Computational results of mean drag coefficient and lift 
coefficient amplitude of various 1block and 2block grid systems 
Grid dC Diff. to B1G2 lC  Diff. to B1G2
Grid 
number
B1G1 2.608 6.8% 0.510 34.4% 26,250
B1G2 2.797 0.0% 0.777 0.0% 105,000
B2D1 2.759 1.4% 0.687 11.6% 27,850
B2D2 2.785 0.4% 0.760 2.2% 29,850
B2D3 2.796 0.0% 0.779 0.3% 32,650
B2D4 2.791 0.2% 0.768 1.2% 31,050
B2D5 2.791 0.2% 0.771 0.8% 32,250
B2D6 2.791 0.2% 0.770 0.9% 33,450
B2D7 2.791 0.2% 0.770 0.9% 35,850
B2D8 2.792 0.2% 0.772 0.6% 39,050
 
0 5
x
-2
-1
0
1
2
y
G1
G2
G3
 
Fig. 5 Computed vorticity contours in the near wake of the flow past a 
circular cylinder in a channel at Re=500 with grid system B3G3. 
Table2 Computational results of mean drag coefficient, lift coefficient 
amplitude, Strouhal number, and CPU time of various 1block, 2block, 
and 3block grid systems 
Grid 
system d
C  
Dif. to
B3G3 
lC  
Dif. to 
B3G3 
St 
Dif. to 
B3G3 
Grid 
number
CPU(mi
n) 
B1G1 2.608 
6.8% 
0.510 
34.4% 
0.277 
0.0% 
26,250
 
174 
B1G2 2.797 
0.0% 
0.777 
0.0% 
0.276 
0.3% 
105,000 800 
B2D5 2.791 
0.2% 
0.771 
0.8% 
0.277 
0.0% 
32,250 227 
B3G3 2.828 
0.0% 
0.837 
0.0% 
0.277 
0.0% 
40,100 300 
We then focused on predicting the critical Reynolds number for a 
blockage ratio of 0.2. The bifurcation analysis of Chen et al. (1995) 
indicates that for this particular blockage ratio the critical Reynolds 
number is 231. This result has been confirmed by Ye et al. (1999). 
Herein, we devoted to simulated results of B1G1, B1G2, and B3G3. 
For each grid system, we have performed numerical simulations 
ranging from a Reynolds number of 225 to 270 in order to pinpoint the 
critical Reynolds number. From the flow stability analysis of the 
present study (not shown), it is expected that the first bifurcation of 
steady flow happens between Re = 225 and 270. The bifurcation of 
flow past circular as well as square cylinders has been clarified as a 
supercritical pitchfork bifurcation. In order to show the characteristic of 
the bifurcation, 2lC  as a function of Re is plotted in Fig. 6. Since the 
linear relation ReCl ∝2  holds, the supercritical pitchfork bifurcation 
from steady flow to vortex shedding flow is confirmed (Peng, 2003). 
We explore the bifurcation of present vortex shedding flow by 
investigating 2lC  vs. Re in a similar manner with all the three B1G1, 
B1G2, and B3G3 grid systems. The value of 2lC  as functions of Re are 
 G1
G2
(a)
 
G3
G1
G2
(b)
 
Fig. 9 Computed iso-vorticity plots and multi-block grid of the flow 
past (a) a single cylinder and (b) two cylinders with different diameters. 
 
286 288 290 292 294 296 298 300
t
-0.4
-0.3
-0.2
-0.1
0.0
0.1
0.2
0.3
0.4
C
l
: single
θ:
= 20
o
: θ= 25 = 40 o
:
:
:θ
θ
θ
= 30
= 35o
o
o
 
Fig. 10  Computational Cl of flow past two cylinders of different 
diameters at Re=100 with various position angles. 
 
Fig. 10 shows the computed lift coefficient history on the main 
cylinder at Reynolds number equals to 100. For the purpose of 
comparison, the lift coefficient on a single cylinder is also plotted. It 
can be seen from Fig. 10 that the effect of the small cylinder on the 
mean force coefficients is significant. Specifically, the suppression of 
the mean lift on the large cylinder is significant for all the computed 
cases with oo 4020 ≤≤ θ (Fig. 10). The maximum suppression ratio of 
Cl,Amp on the main cylinder is found around o25=θ . The mean lift and 
drag coefficients, amplitude of lift coefficients, and St of the main 
cylinder as functions of the position angle of the small cylinder were 
collected and listed on Table 3. From Table 3, it is seen that the 
maximum suppression ratio of Cl,Amp on the main cylinder is about 4%.  
    To investigate the effect of the control cylinder on the suppression of 
the vortex shedding clearly, Fig. 11 showed vortisity distributions at 
Re=80 and o30=θ . It is clear that when there is control cylinder exist 
availably, the vortex shedding pattern is suppressed apparently. 
    This numerical study investigated the suppression of vortex shedding 
of the main cylinder on the effect of a small control cylinder in the 
wake. The application gave reasonable and satisfactory results 
comparable with the available experimental and numerical results in 
literature and showed the feasibility of the present model.  
 
Table 3 Computational results of flow past two cylinders of different 
diameters at Re=80 with various position angles. 
θ  
dC  lC  lC   
glesin,l
l
C
C
 
St 
20 1.335 -0.008 0.0127 5.4% 0.142 
25 1.337 -0.008  0.0 0.0%  0.0 
30 1.349 -0.0053 0.0035 1.5% 0.152 
35 1.371 -0.0043 0.0377 16.2% 0.160 
40 1.389 -0.0058 0.0540 23.1% 0.166 
single 1.465 0.0 0.2333 100% 0.166 
 
(a)
 
(b)
 
Fig. 11 Iso-vorticity plots of the flow past (a) a single cylinder and (b) 
two cylinders with different diameters at Re=80 and o30=θ . 
 
CONCLUSIONS 
 
A multi-block Cartesian grid method has been developed which 
allows us to simulate unsteady, viscous incompressible flows. Two 
numerical experiments have been carried out to examine the 
performance of present multi-block algorithm. Simulations of flow past 
a circular cylinder placed symmetrically in a channel have been carried 
out in the Reynolds number range from 225 to 500. Key quantities 
obtained from our simulations agree well with established numerical 
results. And we find that the solver is able to predict the critical 
Reynolds number of vortex shedding with a high degree of precision. 
The present numerical method is then used to study the vortex shedding 
suppression problem. The application gave reasonable and satisfactory 
results comparable with the available experimental and numerical 
results in literature and showed the feasibility of the present model. 
Numerical experiments indicate that the present multi-block 
method can achieve a solution of comparable accuracy to that obtained 
by traditional finite difference on the uniform fine grid at the equivalent 
finest resolution, but significantly reduce the grid size and CPU time. 
Further more, with add of an immersed boundary method, the current 
multi-block solver is able to simulate those complex boundary flows 
with ease thereby demonstrating the advantage of the current approach 
for such complex flows. 
 
ACKNOWLEDGEMENTS 
 
This work was supported by the National Science Council of the 
Republic of China (Taiwan) under Contract Nos. NSC 95-2221-E-260-
006- and the Institute of Physics, Academia Sinica, Taiwan, Republic 
of China. 
 
REFERENCE 
Paper No. ISOPE-2007-__ First author’s last (family) name __ Total number of pages __ 
出席第十七屆國際離岸海洋與極地工程 
研討會報告 
由國際外海和極地工程學會 (ISOPE) 所主辦的第十七屆國際離岸海洋與極地工程學術會議，於七月
一日至七月六日在葡萄牙里斯本 (Lisbon) 的 Corinthia Lisoa Hotel 舉行。計有來自全世界 48 個國家的
專家學者參加此次盛會，為國際海洋、海岸、水理和海下技術之重要會議，在海洋工程相關領域中最為
壯大的研討會之一。 
本人於六月三十日由台北中正機場搭機前往葡萄牙里斯本。此次會議分為 120 個場次時段，計發表 608 
篇的論文，涵蓋的主題非常廣泛。本人的論文發表安排在第三天，會中有熱烈的交流討論。論文如下。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 The face-center velocity is used for computing the volume flux from 
each cell in our finite-volume discretization scheme. The semi-discrete 
form of the advection-diffusion equation for each cell can therefore be 
written as  
=Δ
−
∂
∂ ∫ dVt
uu
t
n*
CV dS)]nU(u)nU(u[
nnnn
CS ⋅−⋅−
−−∫ 1132
1  
dSn)uu(
Re
n*
CS ⋅∇+∇+ ∫2
1 ,                                                          
(3) 
where u  is the intermediate cell-center velocity and CV and CS 
denote the volume and surface of a cell, respectively. Following the 
advection-diffusion step, the intermediate face-center velocity U  is 
computed by interpolating the intermediate cell-center velocity. 
 
W E
S
N
P
v
u U
V
e
n
s
w
NENW
SW SE
5-point stencil for regular cello :
p
 
Fig. 1 Schematic plots of the regular Cartesian cells and arrangement of 
cell-center and face-center velocities. 
 
The advection-diffusion step is followed by the 
pressure-correction step  
,dVpdV
t
uu
CV
n
CV
*n
∫∫ +
+
∇=Δ
− 11                                                        
(4) 
where we require that the final velocity field satisfy the integral mass 
conservation equation given by 
0
1 =⋅+∫ dSnU nCS .                                                                      
(5) 
This results in the following equation for pressure 
,dS)nU(
t
dSn)p(CS CS
*n∫ ∫ ⋅Δ=⋅∇ +
11                                                 
(6) 
which is the integral version of the pressure Poisson equation. Note that 
the pressure correction step is represented by Eq. 4 and is well posed 
only if the velocity component normal to the boundary is specified. The 
velocity boundary condition consistent with Eq. 4 is 
NvNu
nn ⋅=⋅ ++ 11 , where v  is the prescribed boundary velocity and 
N  is the unit normal to the boundary of the flow domain. It can be 
easily shown that this implies that 01 =⋅∇ + N)p( n  be used as the 
boundary condition for Eq. 6. Once the pressure is obtained by solving 
this equation, both the cell-center (cc) and face-center (fc) velocities are 
updated separately as  
cc
n*n )p(tuu 1
1 ++ ∇Δ−= , fcn
*n
)p(tUU 1
1 ++ ∇Δ−= .        
(7) 
It should be pointed out that the pressure gradient computed at the 
face-center is not simply an interpolated version of the pressure 
gradient at the cell-center. For instance with reference to Fig. 1 the 
x-direction pressure gradient at the cell center is computed as  
,x/)pp()x/p( WEp Δ−=∂∂ 2                                        
(8) 
whereas the same gradient on the east face is given by 
.x/)pp()x/p( PEe Δ−=∂∂                                         
(9) 
It follows that 
1+n
U  is not simply an interpolated version of the 
face-center velocities 
1+n
u . In fact the pressure equation (Eq. 6) is 
discretized in terms of the pressure gradients on the cell faces and with 
the separate update of the face-center velocity as shown in Eq. 7, exact 
satisfaction of Eq. 5 is guaranteed. 
Multi-Block Methodology 
In this study, the local grid refinement technique is completed by a 
muiti-block method. Sketch of the flow domain and the inside coarse 
and fine grid area are plotted and shown as in Fig.2. For simplicity, we 
illustrate our multi-block technique in a two-dimensional (2D) flow 
with a 2-block domain. It is worth noting that the present multi-block 
technique can be further applied to a 3D flow and higher multi-block 
domain without mystery. As shown in Fig.2, the coarse and fine grid 
domains are denoted by D1 by D2, respectively. Again, for simplicity, 
the fine grid length is defined as half as that of coarse grid. Our 
approach is to solve the flow in both D1 and D2 domains simultaneously 
according to the procedure of fractional step method.  
The advection-diffusion step 
    The approach for a multi-block method is extended from the single 
block method. We get start from the advection-diffusion step, the scalar 
form of *u  discretization equation (Eq. 3) can be read as follows ( *v  
equation is similar and not shown in this paper),  
=Δ
− dxdy
t
uu n*
]dx)Vu(Vu(dy)UuUu[({ ns
n
s
n
n
n
n
n
w
n
w
n
e
n
e −+−− 32
1
]}dx)VuVu(dy)UuUu([ ns
n
s
n
n
n
n
n
w
n
w
n
e
n
e
11111111 −−−−−−−− −+−−
dx])
y
u()
y
u[(dy])
x
u()
x
u{[(
Re s
*
n
*
w
*
e
*
∂
∂−∂
∂+∂
∂−∂
∂+
2
1  
}dx])
y
u()
y
u[(dy])
x
u()
x
u[( s
n
n
n
w
n
e
n
∂
∂−∂
∂+∂
∂−∂
∂+                      
(10) 
Where u  and v  are the x- and y-directions velocities, respectively, 
at the cell-center, eU , wU , nV , and sV  are the introduced face 
center velocities. 
    Eq. 10 is the discretization form of advection-diffusion equation 
for a general cell. We will describe how these equations are 
implemented in cells without domain interface, in D1 cells with domain 
interface, and in D2 cells with domain interface in sequence. 
(1)Cells without domain interface 
   For those control volumes without domain interface, Eq. 10 is 
 (1) For fine-fine or coarse-coarse non-inter-domain cell-face 
21 /)uu(U
*
j,i
*
j,i
*
j,i ++= , 21 /)vv(V * j,i* j,i*j,i ++= .                            
(18) 
(2) For fine-coarse domain interface 
At the fine-coarse domain interface shown in Fig. 2, eU  is 
obtained from Eq. 15, 
22211 dyUdyUdyU
*
w
*
w
*
e ×+×=× . 
While wU1 and wU 2  are computed by interpolating the 
intermediate cell-center velocity, i.e., 
2111 /)uu(U Ww +=  and 2222 /)uu(U Ww += ,                            
(19) 
where subscripts 1W and 2W denote those ghost D2 cells, consequently, 
Wu1  and Wu2  are again obtained from ghost cell equation (Eq. 17).  
Solving pressure 
The scalar form of the pressure descritization equations (Eq. 6) can be 
read as 
dx])
y
p()
y
p[(dy])
x
p()
x
p[( s
n
n
n
w
n
e
n
∂
∂−∂
∂+∂
∂−∂
∂ ++++ 1111
]dx)VV(dy)UU[(
t
1 *
s
*
n
*
w
*
e −+−Δ=                                                       
(20) 
(1) Cells without domain interface 
 By second order accurate center difference method, pressure 
gradients at cell surface are computed from 
dx/)pp()x/p( PEe −=∂∂ , dx/)pp()x/p( WPw −=∂∂ , 
dy/)pp()y/p( PNn −=∂∂ , dy/)pp()y/p( SPs −=∂∂              
(21) 
(2) D1 cells with domain interface  
For those D1 cells with domain interface as shown in Fig. 2(a), the 
pressure gradient term at the interface, e)x/p( ∂∂ , need to be 
processed rather than be computed by using Eq. 21 directly. In a 
manner similar to the momentum diffusions processing, the pressure 
gradient is obtained from the diffusion consistency equation, 
=×∂
∂+×∂
∂=×∂
∂
22211 dy)x
p(dy)
x
p(dy)
x
p( wwe
2
2
22
2
2
11 dy
dx
ppdy
dx
pp WW ×−+×− .                                                  
(22) 
(3) D2 cells with domain interface 
For those D2 cells with domain interface as shown in Fig.2 (b), 
since W is ghost cell and Wp  is not defined in the computational 
domain, the pressure gradient at the east surface can not be computed 
by using Eq. 21 directly, we need to computed ghost pressure pG 
(pG= Wp ). Similar to the advection-diffusion processing, the 
interpolation is listed as  
44321 /)pppp(pp GW +++== ,                                                
(23) 
where Ppp 11 = , 2112 /)pp(p EP += , 
411113 /)pppp(p NNEEP +++= , and 2114 /)pp(p NP += , in 
which Ep1  and NEp1 are not defined in our computational domains, 
these pressures are once again obtained from the ghost sell equation 
,/)pppp(pp GE 443211 +++==                                                 
(24) 
where subscript G denotes the D1 ghost cell (G=1E, 1E denotes the 
eastern cell), as shown in Fig.2 (a), which control volume is occupied 
by those four D2 cells denoted by 1, 2, 3, and 4. 
Velocity correction 
Once the pressure is obtained by solving pressure equation, both 
the cell-center and face-center velocities are updated separately as  
cc
n*n )x/p(tuu ∂∂Δ−= ++ 11 , and ccn*n )y/p(tvv ∂∂Δ−= ++ 11 ; 
fc
n*n )x/p(tUU ∂∂Δ−= ++ 11 , and fcn*n )y/p(tVV ∂∂Δ−= ++ 11 . 
Again, we will describe how the cell-center velocity be corrected 
in cells without domain interface, in D1 cells with domain interface, and 
in D2 cells with domain interface, and how the face-center velocity be 
corrected at the non domain-interface and at the domain interface in 
sequence. 
(1) Cell-center velocity correction in cells without domain interface 
For instance with reference to Fig. 1, velocity correction at the cell 
center is computed as  
dx/)pp(tu)x/p(tuu WE
*
p
*n 21 −×Δ−=∂∂×Δ−=+                   
(25) 
(2) Cell-center velocity correction in D1 cells with domain interface 
For those D1 cells with domain interface as shown in Fig.2 (a), 
since Ep  is not defined in the computational domain, the cell-center 
velocity can not be corrected by using Eq. 25 directly, we need to 
computed Ep  by introducing appropriated interpolation first. The 
ghost pressure is the averaged pressure of the occupied D2 pressures 
(Eq. 24), i.e.,  
,/)pppp(pp GE 44321 +++==                                  
(3) Cell-center velocity correction in D2 cells with domain interface 
For those D2 cells with domain interface as shown in Fig. 2(b), 
since Wp  is not defined in the computational domain, the pressure 
gradient at the east surface can not be computed by using Eq. 25 
directly, we need to computed Wp  first. Similar to those processing 
in the previous paragraph, the ghost pressure is computed by Eq. 23,  
    44321 /)pppp(pp GW +++== ,                                
(4) Velocity correction at non inter-domain face-center 
For fine-fine or coarse-coarse non inter-domain face-center, we 
have general form of velocity correction at face-center as 
dx/)pp(tU)x/p(tUU PE
*
e
n*n −×Δ−=∂∂×Δ−= ++ 11             
(26) 
(5) Velocity correction at domain interface 
At the fine-coarse cell interface shown in Fig. 2, coarse cell 
face-center velocity, 1+neU , is obtained from the consistent equation 
( Eq. 15), 
2
1
22
1
11
1 dyUdyUdyU nw
n
w
n
e ×+×=× +++ , 
while 11
+n
w,U and
1
2
+n
w,U  are corrected by Eq. 26 with the fine mesh 
domain ghost velocity formulation Eq. 17. 
Immersed Boundary method 
In this study, a simple concept of Immersed Boundary method is 
adopted for numerical simulation of bluff body flows by using a 
distributed body force in the Navier-Stokes equations instead of the 
existence of solid body. The governing equations for fluid flow are 
solved everywhere, including cells which are occupied by the solid 
body. The distributed body force is determined at every time step of the 
iteration by requiring the value of the velocity in those cells to match 
the prescribed velocity of the solid body. Similar procession has been 
applied by Ravoux et al. (2003) and they referred it as Embedding 
method. 
 
NUMERICAL  RESULTS 
  
0 5
x
-2
-1
0
1
2
y
G1
G2
G3
 
Fig. 5 Computed vorticity contours in the near wake of the flow past a 
circular cylinder in a channel at Re=500 with grid system B3G3. 
Table2 Computational results of mean drag coefficient, lift coefficient 
amplitude, Strouhal number, and CPU time of various 1block, 2block, 
and 3block grid systems 
Grid 
system d
C  
Dif. to 
B3G3 
lC  
Dif. to 
B3G3 
St 
Dif. to 
B3G3 
Grid 
number 
CPU(mi
n) 
B1G1 2.608 
6.8% 
0.510 
34.4% 
0.277 
0.0% 
26,250 
 
174 
B1G2 2.797 
0.0% 
0.777 
0.0% 
0.276 
0.3% 
105,000 800 
B2D5 2.791 
0.2% 
0.771 
0.8% 
0.277 
0.0% 
32,250 227 
B3G3 2.828 
0.0% 
0.837 
0.0% 
0.277 
0.0% 
40,100 300 
We then focused on predicting the critical Reynolds number for a 
blockage ratio of 0.2. The bifurcation analysis of Chen et al. (1995) 
indicates that for this particular blockage ratio the critical Reynolds 
number is 231. This result has been confirmed by Ye et al. (1999). 
Herein, we devoted to simulated results of B1G1, B1G2, and B3G3. 
For each grid system, we have performed numerical simulations 
ranging from a Reynolds number of 225 to 270 in order to pinpoint the 
critical Reynolds number. From the flow stability analysis of the 
present study (not shown), it is expected that the first bifurcation of 
steady flow happens between Re = 225 and 270. The bifurcation of 
flow past circular as well as square cylinders has been clarified as a 
supercritical pitchfork bifurcation. In order to show the characteristic of 
the bifurcation, 2lC  as a function of Re is plotted in Fig. 6. Since the 
linear relation ReCl ∝2  holds, the supercritical pitchfork bifurcation 
from steady flow to vortex shedding flow is confirmed (Peng, 2003). 
We explore the bifurcation of present vortex shedding flow by 
investigating 2lC  vs. Re in a similar manner with all the three B1G1, 
B1G2, and B3G3 grid systems. The value of 2lC  as functions of Re 
are plotted as shown in Fig. 6. It is noted that Recr is evaluated as 
Recr=230.7, Recr=234.2, and Recr=262.6 for B3G3, B1G2, and B1G1, 
respectively. Comparing with numerical result (Recr=231) of Chen et al. 
(1995) and Ye et al. (1999), it is found that the predicted Recr of present 
B3G3 is in very good agreement with previous studies, while error of 
simulated results of B1G2 and B1G1 are about 1.4% and 13.7%, 
respectively. 
  
220 230 240 250 260 270 280
Re
-0.01
0.00
0.01
0.02
0.03
0.04
0.05
0.06
C
l A
m
p
Recr = 262.6Recr = 230.7 Recr = 234.2
2
: B1G1
: B1G2
: B3G3
 
Fig. 6 2Amp,lC  as functions of Re and critical Reynolds numbers Recr. 
 
Flow past two circular cylinders with different diameters 
    The second test case is flow past two cylinders with different 
diameters. In 1990, Strykowski and Sreenivasan investigated the 
suppression of the vortex shedding from a circular cylinder by 
introducing a small circular cylinder at low Reynolds numbers. Since 
the experiments of Strykowski and Sreenivasan (1990), many 
experimental and computational studies have been performed in order 
to control wake flows at supercritical Reynolds numbers. Sakamoto et 
al. (1991) and Sakamoto and Haniu (1994) studied the suppression of 
the fluid force acting on a square cylinder and a circular cylinder, 
respectively, at high Reynolds number in subcritical regime. Dalton et 
al. (2001) also simulated the suppression of lift force on a circular 
cylinder by a small cylinder numerically.  
Recently, there were numerical studies directed towards the flow 
past two cylinders of different diameter (Zhao et al., 2005, Delaunay 
and Kaiktsis, 2001, Yang et al., 2001, and DALTON and Xu, 2001). 
These numerical studies were either based on the finite element method 
or finite volume method with body fitted grids. In this study, flow past 
two circular cylinders of different diameters is investigated numerically. 
The Navier-Stokes equations are solved using present multi-block grid 
method. The aim of this study is to investigate the ability of the present 
numerical method by solving the suppression of the vortex shedding 
flow behind the two-cylinder system which was kind of difficult to 
reach by a Cartesian grid method. The two cylinders considered in this 
study are shown in Fig. 7. The diameter ratio between the small 
cylinder and the large cylinder is 0.2. The Reynolds number based on 
the diameter of the cylinders is 100(80) for the large cylinder and 20(16) 
for the small cylinder. The gap between the small cylinder and the large 
cylinder is 2.0 times the diameter of the large cylinder. The position 
angle of the small cylinder relative to the flow direction ranges from 
20o to 40o. In all computations, a rectangular computational domain is 
used. The large cylinder is located at 5D from the inflow boundary. The 
distance between the large cylinder and the outgoing boundary is 20D. 
The two lateral boundaries are located at 7D away from the large 
cylinder. The effects of the position angle of the small cylinder on drag 
and lift coefficients, pressure distributions around the cylinders, the 
vortex shedding frequencies from the two cylinders and flow 
characteristics are investigated. 
 
 θ  
dC  lC  lC   
glesin,l
l
C
C
 
St 
20 1.335 -0.008 0.0127 5.4% 0.142 
25 1.337 -0.008  0.0 0.0%  0.0 
30 1.349 -0.0053 0.0035 1.5% 0.152 
35 1.371 -0.0043 0.0377 16.2% 0.160 
40 1.389 -0.0058 0.0540 23.1% 0.166 
single 1.465 0.0 0.2333 100% 0.166 
 
(a)
 
(b)
 
Fig. 11 Iso-vorticity plots of the flow past (a) a single cylinder and (b) 
two cylinders with different diameters at Re=80 and o30=θ . 
 
CONCLUSIONS 
 
A multi-block Cartesian grid method has been developed which 
allows us to simulate unsteady, viscous incompressible flows. Two 
numerical experiments have been carried out to examine the 
performance of present multi-block algorithm. Simulations of flow past 
a circular cylinder placed symmetrically in a channel have been carried 
out in the Reynolds number range from 225 to 500. Key quantities 
obtained from our simulations agree well with established numerical 
results. And we find that the solver is able to predict the critical 
Reynolds number of vortex shedding with a high degree of precision. 
The present numerical method is then used to study the vortex shedding 
suppression problem. The application gave reasonable and satisfactory 
results comparable with the available experimental and numerical 
results in literature and showed the feasibility of the present model. 
Numerical experiments indicate that the present multi-block 
method can achieve a solution of comparable accuracy to that obtained 
by traditional finite difference on the uniform fine grid at the equivalent 
finest resolution, but significantly reduce the grid size and CPU time. 
Further more, with add of an immersed boundary method, the current 
multi-block solver is able to simulate those complex boundary flows 
with ease thereby demonstrating the advantage of the current approach 
for such complex flows. 
 
ACKNOWLEDGEMENTS 
 
This work was supported by the National Science Council of the 
Republic of China (Taiwan) under Contract Nos. NSC 
95-2221-E-260-006- and the Institute of Physics, Academia Sinica, 
Taiwan, Republic of China. 
 
REFERENCE 
 
1. Chacon, L, and Lapenta, G (2006). “A fully implicit, nonlinear 
adaptive grid strategy,” J Comput Phys, Vol 212, pp 703-717. 
2. Ding, H, and Shu, C (2006). “A stencil adaptive algorithm for 
finite difference solution of incompressible viscous flows,” J 
Comput Phys, Vol 214, pp 397-420. 
3. Peng, YF, Shiau, YH, and Hwang, RR (2003). “Transition in a 2-D 
lid-driven cavity flow,” Comput & Fluid, Vol 32, pp 337-352. 
4. Ye, T, Mittal, R, Udaykumar, HS, and Shyy, W (1999). “An 
accurate Cartesian grid method for viscous incompressible flows 
with complex immersed boundaries,” J Comput Phys, Vol 156, pp 
209-40. 
5. Chen, JH, Pritchard, WG, and Tavener, SJ (1995). “Bifurcation for 
flow past a cylinder between parallel planes,” J Fluid Mech, Vol 
284, pp 23-52. 
6. Strykowski, BJ, and Sreenivasan, KR (1990). “On the formation and 
suppression of vortex ‘shedding’ at low Reynolds numbers,” J Fluid Mech, 
Vol 218, pp 71-107. 
7. Sakamoto, H, Tan, K, and Haniu, H (1991). “An optimum suppression of 
fluid forces by controlling a shear layer separated from a square prism,” J 
Fluid Eng, Vol 113, pp 183-9. 
8. Sakamoto, H, and Haniu, H (1994). “Optimum suppression of fluid forces 
acting on a circular cylinder,” J Fluid Eng, Vol 116, pp 221-7. 
9. Dalton, C, Xu, Y, and Owen JC (2001). “The Suppression of lift on a 
circular cylinder due to vortex shedding at moderate Reynolds numbers,” J 
Fluid Struct, Vol 15, pp 61-28. 
10. Lei, C, Cheng, L, and Kavanagh, K (2000). “A finite difference solution of 
the shear flow over a circular cylinder,” Ocean Eng, Vol 27, pp 271-90.  
11. Zhao, M, Cheng, L, Teng, B, and Liang, D (2005). “Numerical simulation 
of viscous flow past two circular cylinders of different diameters,” Appl 
Ocean Research, Vol 27, pp 39-55. 
12. Delaunay, Y, and Kaiktsis, L (2001). “Control of circular cylinder wakes 
using base mass transpiration,” Phys Fluid, Vol 13, No 11, pp 3285-302. 
13. Young, DL, Huang, JL, and Eldho, TI (2001). “Simulation of laminar 
vortex shedding flow past cylinders using a coupled BEM and FEM 
model,” Comput Method Appl Mech Eng, Vol 190, pp 5975-5998. 
14. Dalton, C, Xu, Y, and Owen, JC (2001). “The Suppression of lift on a 
circular cylinder due to vortex shedding at moderate Reynolds numbers,” J 
Fluid Struct, Vol 15, pp 617-628. 
