  I 
中文摘要 
[關鍵字]：網路攻擊與防禦、最佳化問題、資源配置策略、權限升級、攻擊順序、存活度 
從過去學者的研究可知，網際網路的拓撲具有冪次律分佈 (Power-law Degree Distribution) 的特
徵，而且容易遭致各種惡意攻擊；因此，近年來資訊安全領域的相關研究工作獲得了更多的關注。
其中，網路存活性研究更是資訊安全研究中不可忽視的一項重要議題。最初，研究人員僅著重於網
路上隨機失敗所造成的影響，以測試相關網路的強固性和可靠性。然而，基於不斷改善資訊安全之
需求日漸增長，目前研究人員更注重於防範惡意攻擊之防護能力，並將其概念結合至網路存活性領
域共同發展。 
網路營運者（防禦者）必須對其所管控之網路，投資一筆有限的預算（例如：金錢、時間、人
力），並加以妥善配置；另一方面，攻擊者所擁有的資源亦是有限的，且不可能攻擊那些所需成本
超過自身能負擔的網路。因此，潛在的攻擊者（特別是智慧型攻擊者）也會因應網路營運者所採用
的資源配置策略，調整其攻擊策略，俾便以最少的攻擊成本達成預定之攻擊目的。在有限的預算下，
網路營運者要如何不停的變更他們的防禦（資源分配）策略，以應付攻擊者不斷變化的各種可能攻
擊行為；來提高網路中重要（核心）節點的存活度，是本計畫的研究重點。在本報告中，採用數學
規劃法來建立此一資源分配的問題模型（為一混合、非線性、整數規劃模型），來求解此一複雜的
規劃問題。 
在本計畫中，我們提出一個兩階的數學規劃模型來描繪網路攻防情境以及攻擊者行為；其中內
層問題，我們探討攻擊者欲利用最小攻擊成本來攻克網路上多個核心節點，而在其攻擊過程中，會
不斷的累積攻擊經驗，使未來的攻擊成本有效的降低；此外，在攻擊者攻克某一節點後，亦可在此
節點上進行權限提昇，如此攻擊者便可擁有足夠的權限來探測更多此節點上的資訊；在此，亦衡量
這些資訊可能會對網路所造成的影響，亦即，攻擊者在攻克多個核心節點時，會同時讓這些資訊所
造成的影響，達到一定程度的傷害；而在外層問題中，目標網路的管理者則能有效配置其有限防禦
資源，使攻擊者需花費的攻擊成本最大化。為了求得此問題的最佳解，我們採用以模擬退火法為基
礎的演算法來處理此問題，並設計出多種不同的初始解以及尋找鄰近解的方法，藉此獲得近似最佳
解。經由計算實驗，驗證了本計畫所提出的解法，具有高度的效率及有效性。 
 
英文摘要 
Keywords: Network Attack and Defense, Optimization Problem, Resource Allocation Strategy, Privilege 
Escalation, Attack Sequence, Survivability 
It has been shown that the Internet’s topology can be characterized by a power-law degree distribution 
and is consequently highly susceptible to malicious attacks. As a result, the research area of information 
security has attracted increasing attention in recent years. Network survivability is another important re-
search domain. Initially, researchers focused on the effect of random failures on networks and tested the 
robustness and dependability of networks. However, given the need to constantly improve information se-
curity, researchers are now paying more attention to protection against malicious attacks and to combining 
the concept with the field of network survivability.  
To enhance network survivability effectively, a network operator (defender) must invest a fixed amount 
of budget (e.g. money, time, and manpower) and distribute it properly. On the other hand, an attacker also 
has limited resource to launch an attack, so he or she will not choose to compromise a network if the in-
curred attack cost exceeds the acceptable level. Thus, a potential attacker will always adjust his strategies 
to compromise a network at minimal cost, if he knows the defense resource allocation strategy of the net-
  1 
一、 報告內容 
1. Introduction 
Internet provides us with many convenient services, such as video conference, file transfer, and 
E-commerce applications. However, it also brings us some threats to information security and privacy, 
because cyber criminals can connect to others’ computers to steal information or modify some important 
data via Internet.  
Since Internet has become essential to business operations, numbers of trades are accomplished through 
this computer network. Some critical data are usually stored in computers or other multimedia devices. 
Therefore, protecting these data is an important issue for enterprises. A remote backup can ensure that 
systems can provide uninterrupted services or quickly recover from a disaster or a malicious attack. In 
this manner, critical data is copied and stored in different centers, all of which can provide the main ser-
vice independently. Consequently, an attacker who wants to completely crash business service or net-
works may need to compromise all of these data centers which have the capability of providing essential 
services.  
Furthermore, in an attack scenario, after compromising a node, an attacker can choose whether to probe 
this node and access valuable information or not. For instance, the attacker may gain some useful infor-
mation like the routing tables which can help him to get the whole picture of the network topology. 
Another example is that the attacker may access some vital information like the customer data of an 
E-commerce company. When this kind of information is stolen, it not only causes some privacy issues but 
also leads to financial loss. 
To access more information, the attacker may need to escalate to gain more user rights. In [1], the au-
thor analyzed the attack behavior and found some characters: an attacker in the low user-level may usual-
ly exploit several vulnerabilities on a computer system to get a certain privilege escalation. They indi-
cated that the attacker at a certain user- level owned the corresponding user privileges and resources of 
that system. Thus, how to manage the vulnerability well is important for protecting a node from being at-
tack. According to [2], the author measured this by the total effect of vulnerabilities in a system. There-
fore, managing vulnerabilities well would be an important mission in computer security. 
When an attacker compromises a node, he may gain experience and escalated authorities. Using the 
experience efficiently he can reduce the costs of future attacks. For example, when the attacker compro-
mises a node, he may learn how to intrude other systems via the same kind of vulnerabilities on the com-
promised node. In [3], the author conducted intrusion experiment for empirical data. By analyzing the 
collected data, the author split the intrusion process into three phases based on attacker behavior: the 
learning phase, the standard attack phase, and the innovation phase. McDermott et al. [4] pointed out that 
potential intelligent intruders will more probably attack the target as time goes by. Therefore, the intruder 
cannot compromise the target today may be more likely to compromise the target in the future. 
Because the budget is finite, it is important for a network operator/defender to allocate his budget effi-
ciently. However, there are seldom theoretical studies modeling the attacker behavior and the of-
fense-defense scenarios in mathematical ways [5]. Therefore, we propose a mathematical model. It de-
scribes and formulates the effect of Accumulated Experience and Escalation of attackers (AEE) in a 
quantitative way. 
In the AEE Model, the attacker’s objective is to compromise multiple core nodes and minimize the total 
  3 
W 
The index set of all Origin-Destination pairs (O-D pairs), where the origin is node 
o; and the core nodes are d (where d∈D) 
Ei 
The index set of all the privilege levels on node i (e.g., 0, 1, 2,…), where i∈N and 
level 0 means node i is compromised without escalation. 
Li The index set of all the level on node i exclusive of level 0, where i∈N 
Pw The index set of all candidate paths of an O-D pair w, where w∈W 
δpijl 
An indicator function, which is 1 if node j (at privilege level l) is the pervious node 
of node i on path p, and 0 otherwise (where i, j∈N, p∈ Pw, l∈Ei) 
σpil An indicator function, which is 1 if of node i (at privilege level l) is on path p, and 0 
otherwise (where p∈Pw, i∈N, l∈Ei) 
S The index set of all stages 
S(k) The index set of the stage 1 to stage k-1, where k∈S 
e
ile  
The experience gained by the attacker after escalating to level l on node i, where 
i∈N, l∈ Ei 
c
ie  The experience gained by the attacker after compromising node i, where i∈N 
ilI  
The impact incurred by accessing information from level l on node i after escala-
tion, where i∈N, l∈Ei 
T 
The threshold of total impact, which is the damage level that the attacker needs to 
reach. 
B The total defense budget 
 
In this formulation, the attack sequence is represented by a term, stage. Stage n means the attack is 
launched on the n-th step of the attack action.  As noted earlier, once the attacker escalates to a higher 
level on a compromised node, he might know some links he did not know before escalating to the level. 
Thus, the network we modeled here can be viewed as an artificial two-dimensional network. The decision 
variables are defined as Table 2. 
Table 2 Decision Variables  
Notation Description 
ysil 
1 if node i is compromised at stage s and escalated to level l of the node, and 0 
otherwise (where s∈S, i∈N, l∈Ei) 
xp 1 if path p is selected as the attack path, and 0 otherwise (where p∈ Pw) 
cbi  
The defense budget allocated to protect node i from being compromised, where 
i∈N 
e
ilb  
The defense budget allocated to protect node i from being escalated, where i∈N, 
l∈Li 
ˆ ( )c ci ia b  The threshold of the attack budget required to compromise node i, where i∈N 
ˆ ( )e eil ila b  
The threshold of the attack budget required to escalate to level l on node i, where 
i∈N, l∈Li 
 
  5 
nodes, i.e., nodes that are not core nodes or intermediate nodes on the paths towards core nodes. Finally, 
the escalation levels are adjusted to satisfy the corresponding constraints. The second solution is a ran-
dom-based algorithm. The difference between this solution and the first one is the criteria for choosing 
the next node. In this case, when choosing the next target node, we always choose a reachable node at 
random as the next attack node, instead of choosing the node with the smallest weight. The third solution 
is similar to the first one; the weight of each node is the ratio of the cost to experience. The time complex-
ity of all the initial solutions is O(|N|log|N|). 
The approaches for searching neighbor solutions can be divided into three parts: change of the attack 
sequence, change of the attack tree, and change of the escalation levels of compromised nodes. We use 
two different techniques to change the attack sequence. The first rearranges the whole traversed sequence. 
We start from the source node and randomly choose a compromised node that can be reached from the 
source node and re-label its sequence. Then, we repeat this process until all the compromised nodes are 
visited again. The second technique randomly exchanges the attack sequences of two compromised nodes. 
We also divide methods of changing the attack tree into two parts. The first a compromised node is ran-
domly chosen on the attack tree by the attacker and the compromised nodes, which were compromised 
after the choose node, are reset to uncompromised. Then, we start from the chosen node to find other 
paths randomly in order to complete the attack. Therefore, the new attack tree will be the same with the 
original tree before the node was chosen. The second method only adjusts small parts of the original at-
tack tree. We use two methods for this task. One changes the path between two compromised nodes that 
are adjacent to each other in the attack tree and adjust the attack sequence if necessary. The other com-
promises an additional node that is not necessary for the original attack tree or it removes an unnecessary 
node from the original attack tree. This is reasonable because the attacker may gain some additional expe-
rience from the extra attack and that experience may help him reduce the cost of future attacks. Finally, 
we also develop two ways to change the escalation levels. One randomly exchanges the escalation levels 
on two compromised nodes. The other escalates to a higher level or drops to a lower level on a randomly 
chosen compromised node. Although we develop several methods to search neighbor solutions, we only 
choose one approach at random to search for neighbor solutions in each loop. The time complexity of 
searching neighbor solutions is O(|N|log|N|). 
 
4. Computation Experiments 
4.1 Computation Experiments with the AEE Model 
To measure the effective of our proposed algorithms, we design the simple algorithm 1 S1. It can be di-
vided into an outer part and an inner part. At outer loop, we ignore the effect of experience and then run 
the Prim’s Algorithm and calculate the total cost. Next, starting from the source and replacing the weight 
of each node with the value that the original nodal cost subtracts the effect of its experience. We start 
from the source and replace the weight of each node with the value that the original nodal cost subtracts 
the effect of its experience. The effect would be calculated by the experience factor of the current target 
node multiplying the total cost of all the nodes which are compromised after the current node on the at-
tack tree. Then, we run the SA procedure which is the inner loop of this heuristic to adjust the sequence 
and escalation levels.  
We use different initial solutions to distinguish our approaches. The first one is the Prim-based algo-
  7 
For Figures 7 and 8, we could observe that networks with degree-based defense budget allocation 
strategy are the most robust. If a node with more connectivity, it may be also a shortcut in a network. 
Thus, the attacker could use this node to reach his targets more quickly. Hence, if the defender protects 
these nodes more, it would become more difficult for the attacker to reach the target nodes. The vulnera-
bility-based defense budget allocation is the most vulnerable way to protect all the networks. The reason 
is that if a node is vulnerable, it may be allocated much budget in this allocation strategy. But if the node 
is on the edge of the network and the attacker could also reach his goal without compromising it. 
 
 
Fig. 1 Experiment Topology 1 
 
Fig. 2 Experiment Topology 2 
0.00%
0.02%
0.04%
0.06%
0.08%
0.10%
Grid
Networks
Random
Networks
Scale-free
Networks
Er
ro
r R
ate TSA_Prim
TSA_Weight
TSA_Random
Fig. 3 The Error Rate of Networks with 9 Nodes   
0.00%
0.02%
0.04%
0.06%
0.08%
0.10%
0.12%
0.14%
47 80 101
Number of Nodes
Er
ror
 R
ate TSA_Prim
TSA_Weight
TSA_Random  
Fig. 4 The Error Rate of Proposed Approaches under 
Experimental Networks 1   
0.00%
0.01%
0.02%
0.03%
0.04%
0.05%
0.06%
0.07%
0.08%
0.09%
0.10%
10 49 81 100
Number of Nodes
Er
ro
r TSA_Prim
TSA_Weight
TSA_Random  
Fig. 5 The Error Rate of Proposed Approaches under Experimen-
tal Networks 2 
0
10
20
30
40
50
60
0 20 40 60 80 100 120 140 160
Number of Nodes
At
tac
k C
os
t
TSA_Prim TSA_Weight TSA_Random S1
 
Fig. 6 Comparison of Proposed Approaches under 
Scale-free Networks with Degree-based Defense Budg-
et Allocation Strategy 
0
5
10
15
20
25
30
35
40
0 20 40 60 80 100 120 140 160
Number of Nodes
At
tac
k C
os
t
Uni Deg Vul
 
Fig. 7 Comparison of Random Networks with Different Defense 
Budget Allocation Strategies 
0
5
10
15
20
25
30
35
40
0 20 40 60 80 100 120 140 160
Number of Nodes
At
tac
k C
os
t
Uni Deg Vul
 
Fig. 8 Comparison of Scale-free Networks with Differ-
ent Defense Budget Allocation Strategies 
(0.8, 8) 
(1, 10) 
(0.6, 9)
Core Node    
Intermediate Node  
on the Path towards 
Core Node 
(1, 10)  (exp., cost) 
    (exp., cost) 
1st Type  (1, 20) 
2nd Type  (0.98, 5) 
 
  9 
二、計畫結果自評 
執行進度表 
月 次 
 
 
 
工作項目 
九十七年九月
 
九十七年十月
 
九十七年十一月
 
九 七年十二月
 
九十八年一月
 
九十八年二月
 
九十八年三月
 
九十八年四月
 
九十八年五月
 
九十八年六月
 
九十八年七月
 
建設基礎軟硬體環境和規
劃研究平台及人員配置 
*** 
*** 
*** 
*** 
         
研讀相關資料及論文  
*** 
*** 
***
***
        
規劃與進行網路存活度
問題及研究 
   
***
***
***
***
***
***
     
訂定及分析存活度指標
及建立攻防模型 
     
***
***
***
***
    
實驗操作及比較      
***
***
***
***
***
***
   
實驗結果分析        
***
***
*** 
*** 
*** 
*** 
 
研發並建構網路定量存
活度分析系統 
        
*** 
*** 
*** 
*** 
***
***
製作結案文件          
*** 
*** 
***
***
預定進度累計百分比 5 15 20 25 30 45 55 65 75 90 100
  
本計畫執行情形，與原訂計畫相符，如上表所示，已達成下列預期目標：  
 
※ 建設基礎軟硬體環境、規劃研究平台、研究人員到位；研讀資訊安全、網路存活度及
風險分析相關文獻；規劃與進行網路存活度問題先期前瞻議題之研究。 
※ 建立網路攻防模型，訂定及分析存活度指標，利用數學規劃法等最佳化技巧、研擬相
關解題策略，並就各類型網路拓樸進行模擬。 
※ 將前一步驟所得之結果與其他依經驗法則所得之結果相比較，以驗證其績效；著手研
發並建構網路定量存活度分析系統雛型。 
 
本計畫之相關研究成果共計獲登國際學術會議論文兩篇（分別發表於 WMSCI 2009 以及 SC 
2009 之國際學術會議，另期刊論文投稿準備中），培育網路存活度及風險分析人才 (博士班學生二
名、碩士班學生七名)，使具備下列學術研究之能力： 
 
 國科會補助出席國際會議報告 計畫編號: NSC97-2221-E-002-131- 
報告人姓名 陳霈語 身分別 博士班研究生 
就讀校院( 科系所)  國立臺灣大學資訊管理學系暨研究所 
指導教授姓名 林永松 職稱 副教授 
服務機關 國立臺灣大學資訊管理學系暨研究所 
會議名稱  2008 International Conference on Computational Intelligence and Security (CIS 2008) 
會議時間 自民國 97 年 12 月 13 日起至民國 97 年 12 月 17 日 
會議地點國家 中國大陸 州、城市 蘇州 
會議主辦機構名稱  IEEE 
論文題目  
(如為本會專題研究計畫之成果，請列出計畫編號 )NSC 97-2221-e-002-131 
A Near-Optimal Redundancy Allocation Strategy that 
Minimizes a System’s Vulnerability to Hazardous Events and 
Malicious Attacks 
 
 
 
 
