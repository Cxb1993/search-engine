2行政院國家科學委員會專題研究計畫成果報告
(更一般化鑽孔作業問題之研究)
(The study of more generalized hole-making problems)
計 畫 編 號：NSC 98-2221-E-150-031
執 行 期 限：98年 8月 1日至 99年 7月 31日
主 持 人：謝益智 國立虎尾科技大學工業管理系(所)
計畫參與人員：蔡勇藝、周瑋婷、李堃銓 國立虎尾科技大學工業管理系(所)
Abstract
This study investigates the optimization of
hole-making operations with multiple tools in
which a hole may require various tools to its
final size. The objective of this problem is to
minimize the summation of tool airtime and tool
switch time for the hole-making operations.
As known, the problem is NP-hard. In this
study, we show a property that any infeasible
permutation of hole-making operations can be
transformed into a feasible one. Based upon
this property, we apply a PSO based approach
for solving a benchmark hole-making problem
with the number of feasible operation sequences
up to 5.41031. Numerical results indicate that
the applied PSO approach can find superior
solutions for the benchmark problem in the
literature.
Introduction
A typical plastic injection mould could have
over 100 holes of different diameters, depths,
tolerances, and surface specifications which
require various tools and a large number of tool
switches. Due to the point-to-point tool
movement in hole-making, a significant amount
of processing time is spent on switching tools
and moving the table from one drilling location
to another [1]. Merchant [2] reported that
moving time and switch time of tools take on
average 70% of the total time in a
manufacturing process. Additionally, a
specific hole usually requires different sets of
tools and a particular tool may be used in
several holes. To reduce tool moving time,
one may not move to another hole until a hole is
completely drilled by using several tools of
different diameters. This, however, will lead
to excessive tool switches. On the other hand,
to reduce tool switch time, one may complete
all operations on all holes that require the
current tool. This, however, will increase the
moving time of tools. Therefore, a trade-off
between these two options is necessary for the
optimization of hole-making operations.
Despite the importance of tool-path
optimization, the hole-making problem has not
been addressed fully in literature [1]. Based
on the traveling salesman problem, Walas and
Askin [3] and Chauney et al. [4] proposed
heuristic algorithms to minimize the total tool
moving distance in punching operations.
Ssemakula and Rangachar [5] used an artificial
intelligence approach to generate an operation
sequence for manufacturing processes.
Roychoudhury and Muth [6] examined several
heuristic techniques for the operation sequence
of NC punch press. Luong and Spedding [7]
addressed a process planning in hole-making
operations and developed a generic knowledge
based system for process planning and cost
estimation in hole-making. Taiber [8]
presented a search procedure to minimize the
number of tool changes, non-cutting tool path,
machining time, and tool cost for prismatic
workpieces. In addition, several researchers
proposed various approaches to solve the
problem of hole-making operations, e.g.,
Kolahan and Liang [1], Onwubolu and Clerc [9],
Ghaiebi and Solimanpur [10] etc.
In this study, a particle swarm optimization
(PSO) based algorithm is applied for the
optimization of hole-making operations such
that the summation of tool airtime and tool
switch time is minimized. A benchmark
4of tool airtime and tool switch time. Eq. (4)
ensures that each operation of a hole is assigned
to only one position in the operation sequence
of hole-making. Similarly, Eq. (5) guarantees
that only one operation is assigned to a position
of the operation sequence. Constraint (6)
represents the precedence of operations of each
hole. Constraint (7) indicates that the decision
variables are 0-1 values.
Property and Example
Since there are ni operations for hole i, a
feasible solution of problem (3)-(5) and (7)
must exist ni locations of sequence operations,
namely, k1, k2, …
in
k , such that:
1... ,,,2,,1, 21  ini knikiki xxx
(8)
Let
Li={k1}{k2}…{
in
k }={l1, l2, …, 
in
l },
l1<l2< …<
in
l . (9)
Thus, we may use the following Eq. (10) to
replace Eq. (8).
1... ,,,2,,1, 21  ini lnilili xxx
(10)
Following Eqs. (8)-(10) for all holes, we can
transform an infeasible operation sequence of
hole-making into a feasible one without using
Constraint (6). Thus, we may use this
transformation to relax Constraint (6) and then
solve the problem of (3)-(5) and (7). More
specifically, we may solve the following
mathematical programming for the operation
sequence of hole-making problem.
Min 
 

 



I
i
n
j
I
ii
i
n
j
N
k
kjiijkij
i i
xxa
1 1
'
1' 1'
1
1
1''
'

   



I
i
n
j
I
i
n
j
N
k
kjiijkjiij
i i
xxS
1 1 1' 1'
1
1
1'''',
'
(11)
st i
N
k
ijk njIix ,...,2,1,,...,2,1,1
1
1



(12)
Nkx
I
i
n
j
ijk
i
,...,2,1,1
1 1

 
(13)
kjixijk ,,},1,0{  (14)
where xijk satisfies the feasible operation
sequence of hole-making with the use of Eqs.
(8)-(10). Note that we delete the redundant
term (Tij, Ti’j’) of Eq. (3), since Sij, i’j’ is the
switch time from tool Ti’j’to tool Tij., i.e., if(Tij,
Ti’j’)=0, then we may let Sij, i’j’= in our
formulation.
Example. Consider the example in [10] with
12 holes and 6 various tools. This example
has 36 operations for hole-making and its
corresponding data are shown in Fig. 2, Table 1
and Table 2. For example, Hole 2 requires in
the order of Tools 1, 3, 4, 5 to its final size, and
Hole 8 requires in the order of Tools 1, 3 to its
final size, respectively. Suppose that there is
an infeasible operation sequence of
hole-making that satisfies Eqs. (3)-(5) and (7),
namely:
17 25 34 23 21 31 28 19 1 18 24 32 35 26 20 22 9
13 14 10 6 2 3 4 7 5 11 15 36 27 30 33 12 16 8 2 (15)
The feasible operation sequence of
hole-making must satisfy the orders of tools for
for all 12 holes in Table 1. Clearly, there are
five violations of operation order marked in box
in (15). Now, by Eqs. (8) and (15), we have
x2,1,26=x2,2,21=x2,3,25=1 and x10,2,36=x10,3,31=1.
Using Eq. (9), we have L2={26}{21}{25}=
{21,25,26} and L10={36}{31}={31,36}.
Therefore, by Eq. (10) we have x2,1,21=x2,2,25
=x2,3,26=1 and x10,2,31=x10,3,36=1. Thus the new
feasible operation sequence of hole-making is:
17 25 34 23 21 31 28 19 1 18 24 32 35 26 20 22 9
13 14 10 5 2 3 4 6 7 11 15 36 27 29 33 12 16 8 30
Lemma 1. Any permutation of {1,2,…,N}
can be transformed into a feasible operation
sequence of hole-making.
Proof. The proof is omitted.
PSO Based Approach
Particle swarm optimization (PSO) was
developed by Kennedy and Eberhart [11]. In
PSO, the movement of particles is affected by
three factors, namely, inertia, particle best
position (pbest) and global best position (gbest).
The inertia is the velocity of the particle in the
latest iteration and can be controlled by the
inertia weight. The purpose of the inertia is to
hinder particles from moving back to their
current positions. The pbest position is the
best solution found by each particle by itself so
far. The gbest position is the best solution
6References
[1] F.Kolahan and M. Liang: Int. J. Mach. Tool.
Manu. Vol. 40 (2000), p. 1735
[2] R.L. Merchant: Int. J. Vehicle Des. Vol. 6
(1985), p. 121
[3] R.A. Walas and R.G. Askin: IIE Trans. Vol.
6 (1984), p. 280
[4] F.Chauney, R.R.Loulou and E.Wagneur:
INFOR Vol. 25 (1987), p. 26
[5] M.E. Ssemakula and R.M. Rangachar:
Comput. Ind. Eng. Vol. 16 (1989), p.161
[6] B.Roychoudhury and J. Muth: Int. J.
Comput. Ind. Eng. Vol. 28 (1995), p. 367
[7] L.H.S. Luong and T. Spedding: Int. J. Manu.
Tech. Vol. 10 (1995), p. 411
[8] J.G. Taiber: Adv. Eng. Softw. Vol. 25 (1996),
p. 41
[9] G.C. Onwubolu and M. Clerc: Int. J. Prod.
Res. Vol. 42 (2004), p. 473
[10]H.Ghaiebi and M. Solimanpur: Comput. Ind.
Eng. Vol. 52 (2007), p.308
[11] J. Kennedy and R.C. Eberhart RC.:
Proceedings of IEEE International
Conference on Neural Networks.
(Piscataway, NJ 1995)
[12] J. Kennedy, R.C. Eberhart and Y. Shi:
Swarm Intelligence. (Morgan Kaufmann,
CA 2001)
[13] Y. Shi and R.C. Eberhart: Proceedings of
the 7th International Conference on
Evolutionary Programming. (Springer,
NewYork 1998)
 上述僅供參考，本研究部份結果正準備投
稿國際著名學術期刊。
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
1.Using an Effective Immune Based Evolutionary Approach for the Optimal 
Operation Sequence of Hole-Making with Multiple Tools, Journal of 
Computational Information Systems, (Accepted). (EI) 
 
2.另一篇期刊論文審查中。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
