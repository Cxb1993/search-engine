 2
calculation priority of each pixel for the partial 
distortion computing. And then, the normalized 
partial distortion search with the proposed dynamic 
search range decision algorithm is performed 
according to the priority of each pixel. Thus the 
computational complexity can be reduced 
enormously. The limitation of the bandwidth and 
the unreliability of the transmission environment 
always result in that the video bitstream transmitted 
in these channels should be coded in low bitrate. In 
this research project, the insertion of an intra-coded 
MB, which is a kind of spatial localization 
technique, is employed to provide temporal 
localization of errors by decreasing the temporal 
dependency in the coded video sequence. The low 
bitrate environment will take high quantization 
parameters to cause the blocking artifact and high 
error sensitivity. Therefore, one of the goals in this 
project is to develop a post-filter technique, which 
is applicable in a real-time decoding system and 
provides a good visual quality of decoded video. 
Proposed Methods 
1. Fast Motion Estimation Algorithms 
1.1 Review of NPDS [1] 
The principle of the NPDS is briefly described here. 
Based on half-stop idea, the partial distortion of the 
NPDS is defined as a group of pixels’ distortions 
instead of a single pixel’s distortions. Therefore, the 
block distortion D(x,y;u,v) is divided into 16 partial 
distortions (dp), where each partial distortion 
consists of 16 points spaced equally between 
adjacent points, as shown in Fig. 1. The p-th partial 
distortion is defined as 
|)4,4(1
∑
3
0
∑
3
0
)4,4(|),;,(
vptjyupsix-tI-
i j p
tjypsixtIvuyxpd
++++++
= = ++++= (1)
where (sp,tp) is the offset of the upper left corner 
point of the p-th partial distortion from the upper 
left corner point of the candidate block, the i and j 
indicate the index of the sub-MB at the vertical and 
horizontal positions, respectively, and It(x,y) 
indicates the pixel intensity at the coordinate (x,y) 
in the frame t. The order of calculation of dp is 
depicted in the left part of Fig. 1. The p-th 
accumulated partial distortion is defined as 
∑
=
=
p
1i
)v,u;y,x(id)v,u;y,x(pD  (2)
The NPDS matches all the search points inside 
the search window as that in the FS. The search 
begins at the origin search point and moves outward 
with a spiral scanning path. During each block 
matching, the NPDS compares each accumulated 
partial distortion Dp with the normalized minimum 
distortion (NMD: pDmin/16, where Dmin is the 
current minimum distortion). The comparison starts 
from p=1 and proceeds toward p=16, and the 
comparison is stopped if the normalized partial 
distortion of the candidate vectors is larger than the 
NMD. 
Fig. 1 The group of pixel locations for the calculation 
order of the partial distortion dp. 
1.2 Proposed Priority-Based NPDS Algorithm 
From the definition of the NPDS, we observe that 
the fixed partial distortion calculation order is 
adopted for the entire MBs. This mechanism is 
based on the assumption that all MBs have the same 
distortion behavior. However, this assumption 
won’t be valid while the objects exhibit the high 
motion activity in the sequence.  Based on the 
above explanation, the proposed priority-based 
NPDS algorithm takes the distortion behavior of the 
individual pixel into consideration. As shown in Fig. 
1, an MB is firstly divided into sixteen sub-MBs 
and each sub-MB contains sixteen pixels. For the 
(0,0) position, the SAD is calculated for the entire 
pixels and the absolute difference of each pixel are 
stored temporarily. Afterwards, the sorting 
operation is performed for the individual sub-MB 
according to the previous stored absolute difference 
of the pixels. Thus, sixteen priority lists are defined 
by (3), and they will be used as the partial distortion 
calculation order for the rest candidates. 
}3,2,1,0{j,i}},3,2,1,0{pj,it,16p1|
p
j,it{j,it
}3,2,1,0{j,i}},3,2,1,0{pj,is,16p1|
p
j,is{j,is
∈∈≤≤=
∈∈≤≤=
(3)
For any 
j,i
t
p
j,it,j,i
s
p
j,is ∈∈ , the following 
condition  should be satisfied. 
p)1pj,it,
1p
j,is;v,u;l,k(D)
p
j,it,
p
j,is;v,u;l,k(D ∀
++≥  (4)
where 
|)vpj,itj4l,u
p
j,isi4k(1-tI-
)pj,itj4l,
p
j,isi4k(I|)
p
j,it,
p
j,is;v,u;l,k(D t
++++++
++++=
(5)
In [2], the authors show the information of the 
other positions can be predicted from the (0,0) 
 4
with the adaptive search range decision. Tables 3 
and 4 demonstrate the PSNR and the computational 
complexity comparison between the proposed 
algorithms and the other fast motion estimation 
algorithms. The simulation environment settings are 
listed as follows. The search range is set to +/-7, 
100 frames are encoded, and all benchmarks are 
QCIF format. 
From Table 3, the PSNR degradation of the 
proposed algorithms is about 0.02 dB. The 
proposed adaptive search range decision algorithm 
updates the search range of the current coding MB 
dynamically. Consequently, the prediction accuracy 
of the proposed adaptive search range decision 
depends on the motion behavior of the benchmark. 
Therefore, our proposed algorithm can keep the 
PSNR degradation less than 0.08 dB. 
Table 4 shows the computational complexity 
comparison.  The Abs., Add., Com., LS, RS, and 
XOR indicate the absolute, addition, comparison, 
left-shift, right-shift, and XOR operation, 
respectively. From Table 4, we observe that the 
priority-based NPDS algorithm without and with 
the adaptive search range decision can achieve at 
least 11.27 and 27.17 times faster than full search, 
respectively. The proposed algorithm PB-NPDS 
provides better PSNR performance. By adopting the 
proposed adaptive search range decision algorithm, 
the more speedup ratio can be obtained. 
Fig. 4 Flowchart of the proposed algorithm. 
Table 1 PSNR comparison (dB) for different thresholds 
PSNR News M&D Silent Foreman Carphone Coastguard Mobile Tennis Football 
Spiral FS 37.39 37.84 35.88 33.17 34.35 31.17 26.37 29.72 20.51 
TH = 1 37.36 37.79 35.78 33.09 34.28 31.13 26.36 29.27 20.18 
TH = 2 37.36 37.80 35.80 33.11 34.30 31.14 26.36 29.46 20.29 
TH = 3 37.37 37.81 35.84 33.12 34.30 31.14 26.36 29.52 20.33 
TH = 4 37.37 37.81 35.86 33.12 34.30 31.14 26.36 29.57 20.35 
TH = 5 37.37 37.81 35.86 33.13 34.30 31.14 26.36 29.58 20.36 
TH = 6 37.37 37.81 35.87 33.14 34.31 31.14 26.36 29.59 20.36 
TH = 7(PB-NPDS) 37.37 37.81 35.87 33.14 34.31 31.14 26.36 29.6 20.36 
 
Table 2 Coding speed comparison for different thresholds 
Speed up News M&D Silent Foreman CarPhone Coastguard Mobile Tennis Football 
Spiral FS 1.00 1.00 1.00 1.00 1.00 1.00 1.00 1.00 1.00 
TH = 1 94.77 56.94 71.19 38.94 35.25 43.26 93.83 23.89 13.15 
TH = 2 64.26 38.43 51.53 29.03 27.17 33.24 63.46 19.61 11.21 
TH = 3 43.93 28.25 37.21 22.58 21.61 25.46 43.45 16.47 9.95 
TH = 4 31.07 21.79 27.52 18.04 17.67 19.94 30.73 13.95 9.02 
TH = 5 22.83 17.29 20.95 14.69 14.64 15.92 22.55 11.97 8.30 
TH = 6 17.36 14.05 16.41 12.34 12.39 13.09 17.13 10.41 7.78 
TH = 7(PB-NPDS) 13.75 11.87 13.29 11.41 11.27 12.38 13.58 9.49 7.45 
 
Table 3 PSNR(dB) comparison for various motion estimation algorithms 
 FS PD-FS NPDS[7] APDS[8] (K=1) NAPDS[9] PB-NPDS PB-NPDS + ASR 
Foreman 33.17 33.17 32.99 33.15 33.04 33.14 33.11 
News 37.39 37.39 37.21 37.34 37.28 37.37 37.36 
Carphone 34.35 34.35 34.20 34.28 34.25 34.31 34.30 
Coastguard 31.17 31.17 31.09 31.12 31.07 31.14 31.14 
Mobile 26.37 26.37 26.33 26.36 26.35 26.36 26.36 
Silent 35.88 35.88 35.73 35.84 35.79 35.87 35.80 
 6
motion-compensated prediction at the input of the 
DCT are approximated by a Laplacian distribution 
with zero mean. Thus, we can utilize the DCT 
coefficients to derive the activity measurement for a 
MB. It can be shown that the DCT energy of the 
residual is proportional to the spatial activity 
measurement of a MB. Since these high activity 
MBs may cause high distortion area, they might be 
in high protection area. 
n
MB
n
MB
n
MB ModeNZMED ×= (13)
n
MB
n
MB
n
MB EPEMEDLI ×= (14)
The motion estimation distortion (MED) is 
shown in (13), where NZnMB denotes the number of 
the non-zero transform coefficients in an MB n, and 
ModenMB is the coding mode for the MB n. For 
instance, in H.264, 0 is the skip mode and 1 is the 
Inter 16x16. After EPE and MED are gathered, the 
Lost Influence will then be calculated with (14). 
The LI will be used to measure an MB’s lost 
influence when it is damaged. 
2.2 Intra Refreshed Macroblock Decision 
When the LI has been calculated for an MB, the 
number and position for the intra coded MB will be 
decided in a frame of a GOP. The number of the 
intra refresh MB will first be decided with 
decoder’s response. In Fig. 5, the decoder will 
response the error rate to the transcoder after 
decoding a GOP. 
PERNN GOPTotalMB
GOP
Intra ×=  (15)
(15) decides the number of intra-refreshed MB 
in a GOP. GOPIntraN  is token of the intra coded MB 
number, GOP
TotalMBN  is the number of MB in a GOP, 
and PER means the packet error rate that responses 
from the decoder. 
GOP
Intra
GOP
i
FrameiFrane
Intra NEPE
EPEN ×= (16)
The number of the intra coded MB will be 
allocated to each frame by (16), where iFrameIntraN  
represents the number of intra coded MB for frame 
i. From (11) and (12), EPEnFrame and EPEGOP are the 
error propagation effects of a frame and GOP, 
respectively. GOPIntraN  is the total number of intra 
coded MB for a GOP from (15). After the number 
of intra coded MB for a frame has been decided, the 
positions of the MBs will then be allocated. In our 
proposed transcoder, the LI from (14) for each MB 
will be ranked in each frame, and the iFrame
IntraN  MBs 
with the highest LI will be undoubtedly set as intra 
mode. 
This is the case, however, if iFrame
IntraN  is greater 
than the number of total MB in a frame, e.g. 396 
MBs for CIF, the iFrameIntraN  for the current frame will 
be set as the MB number of the frame, and the 
remainder intra coded MBs will be allocated into 
GOP
IntraN  to dispatch to other frames in the GOP. 
2.3 Simulation Results 
The experimental results are presented in this 
section. We compare the subjective quality and 
objective quality of our method with Random and 
CAIR with PT [5] in different error rates. 
“Random” means the intra MB refresh method in 
H.264 which decides intra MBs by using random 
processing. The testing benchmarks are Mobile, 
Table Tennis, Foreman and Stefan with CIF frame 
size and Carphone, Foreman, News and 
Mother&Dauthter (M&D) for QCIF size. 
We initially code the testing benchmark 
sequences into bitstreams, then the transcoder will 
transcode them into the target bitstreams. All the 
simulations are implemented in H.264’s reference 
software JM 10.1 [6]. The error model will also 
affect the bitstream to simulate the channel 
condition. In the simulation environment, the initial 
bitstreams are coded as 100 frames in 256Kbps for 
CIF and 64Kbps for QCIF. The frame rate is set as 
30 frames per second. The initial bitstreams have no 
intra MB refresh mechanism. For the transcoder, 
the rear-encoder in the transcoder will code the 
video sequences with the same bitrate and frame 
rate, but the bitstreams are coded into RTP format. 
For the error environment in this simulation, the 
packet loss rates are set as 5%, 10% and 20%, 
respectively. Fig. 6 shows the subjective 
comparison of various methods for Table Tennis 
sequence. 
Tables 5 and 6 compare the average PSNR and 
bitrate of the proposed algorithm, random, CBERC, 
regular and CAIR with PT for CIF sequences. Since 
our proposed method utilizes recursive error 
concealment as the measurement tool, it can 
achieve lower distortion and higher quality in error 
concealment. Hence, in these tables, we can 
observe that our proposed method has better quality 
than the previous works with less bits consumption. 
Tables 7 and 8 show the average PSNR and bitrate 
comparison of the proposed algorithm, random, 
CBERC, regular and CAIR with PT for QCIF 
sequences. The results can achieve higher quality 
with similar bitrate consumption. Fig. 6 presents the 
subjective quality comparison for frame #44 of 
Table Tennis sequence with 20% packet loss rate. 
In those figures, our proposed algorithm can 
provide clear table, poster and complete body. 
 8
edge feature of an image. Therefore, the Sobel 
operator is adopted here to generate the gradient 
maps in both of the horizontal and vertical 
directions. 
Via this approach, differential images GR and 
GC are generated from the original image F, where 
the changes in grey levels are accentuated. The row 
(GR) and column (GC) gradient images are 
generated with convolution masks: 
),k,j(H)*k,j(F)k,j(G RR =  (17)
),k,j(H)*k,j(F)k,j(G CC =  (18)
where (j, k) are the coordinates of the pixel of the 
image and HR and HC are the row and column 
convolution masks respectively. This is translated 
into a linear combination of pixels in a small 
neighborhood of the pixel over which the gradients 
are calculated. In this case, the convolution masks 
of Sobel operator are the following: 
⎢⎢
⎢
⎣
⎡
⎥⎥
⎥
⎦
⎤
−
−
−
=
101
202
101
H R
 
.121
000
121
HC
⎢⎢
⎢
⎣
⎡
⎥⎥
⎥
⎦
⎤−−−
=  (19)
Fig. 8 shows how the gradient values are 
extracted from the block boundaries horizontally 
and vertically. For the vertical and horizontal 
boundary, the gradient value subsets are defined as 
following: 
},Nn,k,j;blocknn
;rowkk;10n8j5n8|)k,j(G{V
th
th
R
∈=
=+≤≤+=  
}.Nn,k,j;blocknn
;10n8k5n8;columnjj|)k,j(G{H
th
th
C
∈=
+≤≤+==
Fig. 8 The six gradient values across the boundary used 
for blocking artifact detection and mode selection. 
Fig. 9 Two cases of the mask (HR) applying to the 
neighboring blocks (assume n=0, k=2). 
According to our observation, the pixels of the 
8×8 block usually have the similar gradients if the 
blocking artifact exists. In Fig. 9(a), since the mask 
does not cross the block boundary, the small GR(5, 
2), GR(6, 2), GR(9, 2) and GR(10, 2) will be obtained. 
On the contrast, GR(7, 2) and GR(8, 2) are large 
when the mask overlaps the two neighboring blocks 
as shown in Fig. 9(b). Hence, criteria can be 
derived which estimate whether the block boundary 
with blocking artifact or not. The criteria are 
defined as follows: 
),|)k,j(Gmax()k,8n8(G
)|)k,j(Gmax()k,7n8(G
rowkk,10n8~8n8jRR
rowkk,7n8~5n8jRR
th
th
=++=
=++=
=+
∨=+
(22)
).|)k,j(Gmax()8n8,j(G
)|)k,j(Gmax()7n8,j(G
7n8~5n8k,columnjjCC
7n8~5n8k,columnjjCC
th
th
++==
++==
=+
∨=+
(23)
If the criterion is not satisfied, the deblocking 
process for block boundary is dropped since the 
blocking artifact may not exist. Otherwise, the 
procedure is changed to the next decision stage for 
deciding the precise position of blocking artifact. 
In further observation, the blocking artifact does not 
occur alone. In other words, the blocking artifact 
will appear with another row or column. Therefore, 
the criteria are defined as follows: 
,,0
)22(,1
⎩⎨
⎧=
otherwise
satisfyrowgneighborinofoneif
NBFlag R (24) 
,,0
)23(,1
⎩⎨
⎧=
otherwise
satisfycolumngneighborinofoneif
NBFlagC (25) 
where NBFlagR and NBFlagC denote the flag of 
neighboring row and column, respectively. If the 
flag is set to 1, the boundary of the row or column 
contains the blocking artifact. Therefore the 
locations of these flags need to be stored for later 
using. 
3.2 Removal of Blocking Artifact 
After the blocking artifact detection has been done, 
the mode selection is conducted to determine the 
best mode. Each pixel is assigned to one of the 
three modes according to the complexity among the 
Sobel values. The definition of the complexity is 
listed as follows: 
.otherwise1,
2xif0,
Δ(x)  where
,)SΔ(Scomplexity
5i
1i
1ii
⎩⎨
⎧ ≤=
−= ∑=
=
+
 (26)
The complexity is then compared to Tm. In the 
simulations, Tm is set to 3. When the complexity is 
smaller than Tm (complexity=1 or 2), the mode 1 will 
be selected. When the complexity is equal to Tm, the 
block boundary belongs to the mode 2. When the 
value of complexity is larger than Tm (complexity=4 
or 5), the mode 3 will be used. 
 10
Table 10 PSNR (dB) comparisons of the Hall Monitor 
sequence for loop-filter [6], Tai [9] method, Ku [10] 
method and the proposed method. 
 64k 80k 96k 128k 160k
No-filtering 32.98 33.57 34.20 35.23 35.95
In-loop 
filter 33.42 34.03 34.70 35.74 36.36
Tai [9] 33.31 33.79 34.27 35.52 36.19
Ku [10] 33.30 33.82 34.23 35.67 36.18
Proposed 33.38 33.85 34.38 35.66 36.21
 
 
(a) Original frame (b) Without blocking artifacts removal 
 
(c) In-loop filter [6] (d) Tai [9] method 
 
(e) Ku [10] method (f) Proposed method 
Fig. 11 The “enlarged” visual results in the parts of the Hall 
Monitor sequence (32th frame, 30 frames/s, 80 kbits/s) 
generated by the compared methods. 
Project Evaluation 
The proposed algorithms have been implemented in 
H.264 reference software. These proposed 
algorithms in this research can be easily 
implemented in mobile devices to improve the 
computational efficiency of H.264. The results of 
the fast motion estimation algorithms have been 
presented in [11] and [12]. In the next year, for this 
research project, the region-of-interest (ROI) 
determination, ROI error resilience and frame rate 
transcoding will be studied. 
References 
[1] C. Stiller and J. Konrad, “Estimating motion in 
image sequences,” IEEE Signal Processing 
Magazine, Vol.16, No.4, pp.70-91, July 1999. 
[2] B. Montrucchio and D. Quaglia, “Now sorting- 
based lossless motion estimation algorithms and 
a partial distortion elimination performance 
analysis,” IEEE Transactions on Circuits and 
Systems for Video Technology, Vol.15, No.2, 
pp.210-220, February 2005. 
[3] M.-J. Chen, C.-S. Chen and M.-C. Chi, 
“Temporal error concealment algorithm by 
recursive block- matching principle,” IEEE 
Transactions on Circuits and Systems for Video 
Technology, Vol. 15, No. 11, pp. 1385-1393, 
November 2005. 
[4] I-M. Pao and M.-T. Sun, “Modeling DCT 
coefficients for fast video encoding,” IEEE 
Transactions on Circuits and Systems for Video 
Technology, Vol. 9, pp. 608-616, June 1999. 
[5] C.-M. Chen, Y.-C. Chen and C.-W. Lin, 
“Error-resilience transcoding using content- 
aware intra-refresh based on profit tracing,” in 
Proceedings of IEEE International Symposium 
on Circuits and Systems, pp. 5283-5286, May 
2006. 
[6] Joint Video Team software JM10.1. 
http://bs.hhi.de/~suehring/tml/download/  
[7] W. K. Pratt. Digital Image Processing. New 
York, NY: Wiley, 1978. 
[8] H.-W. Park and Y.-L. Lee, “A post-processing 
method for reducing quantization effects in low 
bit-rate moving picture coding,” IEEE 
Transactions on Circuits and System for Video 
Technology, vol. 9, no. 1, pp. 161-171, 
February 1999. 
[9] S.-C. Tai, Y.-R. Chen, C.-Y. Chen and Y.-H. 
Chen, “Low complexity deblocking method for 
DCT coded video signals,” IEE Proceedings- 
Vision, Image and Signal Processing, Vol. 153, 
no. 1, pp. 46-56, February 2006. 
[10] C.-F. Ku and M.-J. Chen, “Post-processing 
deblocking filter for block-based video 
decoder,” Workshop on Consumer Electronics 
and Signal Processing, 2005. 
[11] C.-C. Yang, G.-L. Li and M.-J. Chen, “Priority- 
based normalized partial distortion search 
algorithm for fast motion estimation,” in 
Proceedings of IEEE Asia Pacific Conference 
on Circuits and Systems, pp. 1252-1255 
December 2006. 
[12] C.-C. Yang, G.-L. Li and M.-J. Chen, “Priority- 
based normalized partial distortion search 
algorithm and adaptive search range decision 
for fast motion estimation,” Nation Symposium 
on Telecommunications, December 2006. 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                          95年 12 月 15 日 
報告人姓名 陳美娟 服務機構
及職稱 
國立東華大學電機工程學系 
教授 
 
     時間 
會議 
     地點 
95年 12月 4日~12月 7日 
新加坡 
本會核定
補助文號
95-2221-E-259-017 
 
會議 
名稱 
 (中文) 2006國際電子電機工程師學會亞洲太平洋電路與系統研討會 
 (英文) 2006 IEEE Asia-Pacific Conference on Circuits and Systems 
發表 
論文 
題目 
 (中文) 基於優先權之正規化部份失真快速移動估計搜尋演算法 
 (英文) Priority-Based Normalized Partial Distortion Search Algorithm for Fast 
Motion Estimation 
(中文) 應用於 H.264 視訊編碼標準之有限狀態邊緣吻合快速移動估計演
算法 
 (英文) Fast Motion Estimation Algorithm by Finite-State Side Match for 
H.264 Video Coding Standard 
報告內容應包括下列各項： 
一、參加會議經過 
 
2006 國際電子電機工程師學會亞洲太平洋電路與系統研討會(2006 IEEE Asia-Pacific 
Conference on Circuits and Systems)是由國際電子電機工程師學會電路與系統分會
(Circuits and Systems Society)主辦， 12月 4日至 12月 7日於新加坡河畔之國尊河畔飯
店(Grand Copthorne Waterfront Hotel )舉行，新加坡是一個繁榮的大都市，因其市容美麗
清潔，更以”花園城市”著稱。新加坡所處的地理位置是世界的十字路口之一，得天獨厚
的地理條件使之發展成為東南亞的商業明珠，並成為了亞洲主要的金融、電子、旅遊、
貿易、航空及海事貨運中心。 
此會議集合了亞太地區頂尖的研究學者與專家共同分享其在電路與系統領域當中的研
究設計經驗與實作成果，依其研究屬性，可分為 17個不同的主題： 
1. 類比訊號處理(Analog Signal Processing) 
2. 生物醫學電路與系統(Biomedical Circuits and Systems) 
3. 盲信號處理(Blind Signal Processing) 
4. 細胞類神經網路及陣列運算(Cellular Neural Networks and Array Computing) 
5. 通訊電路及系統設計(Circuits and Systems for Communications) 
6. 計算機輔助網路設計(Computer-Aided Network Design) 
