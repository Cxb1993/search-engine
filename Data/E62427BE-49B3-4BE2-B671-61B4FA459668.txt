 I
目錄 
目錄 ....................................................................................................................................... I 
圖目錄 ................................................................................................................................ IV 
表目錄 ................................................................................................................................ VI 
Abstract ............................................................................................................................... X 
第一章 緒論 ......................................................................................................................... 1 
1.1  研究背景及動機 ................................................................................................... 1 
1.2  研究目的 ............................................................................................................... 1 
1.3  研究假定與假設 ................................................................................................... 2 
1.4  研究流程 ............................................................................................................... 3 
第二章 文獻探討 ................................................................................................................. 6 
2.1 人工智慧 ................................................................................................................ 6 
2.1.1 基因演算法 ................................................................................................. 6 
2.1.2 模糊邏輯 ..................................................................................................... 9 
2.1.3 類神經網路 ............................................................................................... 11 
2.1.4 粒子群演算法 ........................................................................................... 16 
2.2 演化式模糊類神經推論模式 .............................................................................. 18 
2.2.1 基本概念 ................................................................................................... 18 
2.2.2 優點及缺點 ............................................................................................... 20 
2.3 分散式處理 .......................................................................................................... 20 
2.3.1 基本概念 ................................................................................................... 21 
2.3.2 分散式處理特性 ....................................................................................... 21 
2.3.3 優點及缺點                                                  25 
2.3.4 網路服務 ................................................................................................... 25 
第三章 演化式模糊類神經推論模式 II ........................................................................... 28 
3.1 模式架構 ............................................................................................................... 28 
 III
6.3  研究成果 ............................................................................................................ 82 
參考文獻 ............................................................................................................................. 83 
 V
圖 3.14 選擇示意圖 .......................................................................................................... 44 
圖 3.15 粒子更新示意圖 .................................................................................................. 45 
圖 4.1 系統開發過程圖 .................................................................................................... 46 
圖 4.2 系統使用過程圖 .................................................................................................... 48 
圖 4.4 資料庫結構圖 ........................................................................................................ 50 
圖 4.5 系統首頁畫面 ........................................................................................................ 51 
圖 4.6 基因演算法頁畫面 ................................................................................................ 52 
圖 4.7 群集演算法頁畫面 ................................................................................................ 52 
圖 4.8 參數設定頁畫面 .................................................................................................... 53 
圖 4.9 專案預測頁畫面 .................................................................................................... 54 
圖 4.10 查詢結果頁畫面 .................................................................................................. 54 
圖 4.11 查詢結果頁畫面 .................................................................................................. 55 
圖 5.1 XOR 隸屬函數圖 .................................................................................................... 58 
圖 5.2 XOR 模糊類神經架構圖 ........................................................................................ 59 
圖 5.3 XOR 收斂趨勢圖 .................................................................................................... 59 
圖 5.4 承包商績效預測 FNN 結構圖 .............................................................................. 64 
圖 5.5 轉承包商預測收斂趨勢圖 .................................................................................... 64 
圖 5.6 概念性估計建築 FNN 結構圖 .............................................................................. 69 
圖 5.7 建築工程成本概估收斂趨勢圖 ............................................................................ 70 
圖 5.8 專案成功度預估 FNN 結構圖 .............................................................................. 73 
圖 5.9 專案成功度預估收斂趨勢圖 ................................................................................ 73 
圖 5.10 自動產生相似程度 FNN 結構圖 ........................................................................ 77 
圖 5.11 自動產生相似程度收斂趨勢圖 .......................................................................... 78 
 
 VII
表 5.20 分散式處理環境 ................................................................................................... 79 
表 5.21 分散式處理比較表 ............................................................................................... 79 
 
 IX
2.0 之求解效能，此階段導入 PSO 演算法並設計 PSO 演化程序。第二年運用分散式
計算建立 EFNIM 2.0 運算架構，透過 Web Service 技術將 EFNIM 2.0 演化步驟分散
於多部子電腦平行計算，以大幅縮短運算時間，此外，為有效推廣 EFNIM 2.0 研究
成果，此階段開發 EFNIM 2.0 網路系統，以方便使用者使用並降低應用成本。最後，
為驗證 EFNIM 2.0 GAs 與 EFNIM 2.0 PSO 效能，本研究以 Exclusive-Or (XOR)及真
實營建管理問題進行測試。 
本研究所發展的 EFNIM 2.0 能有效改善 EFNIM 缺點，並提升運算與分析效能，
此外，可依據營建管理問題特性開發成為多方面的智慧型決策支援系統，有效輔助
決策人員進行決策分析，進而提昇營建管理決策的有效性。 
 
關鍵詞：演化式模糊類神經推論模式 2.0、模糊邏輯、類神經網路、基因演算法、粒
子群最佳化演算法、實數編碼、分散式計算、網路系統、決策支援、營建管
理 
 
 XI
run simultaneously on multiple computers. Therefore, computation time can be reduced. 
Web Services are developed using .NET framework to enhance running efficiency; 4) 
develop a web-based application to enhance implementation convenience and reduce 
hardware/software cost; and 5) implement EFNIM 2.0 framework using Particle Swarm 
Optimization (PSO) for an over-all improvement. 
This project is complete in two years. The goal of the first year is to develop a 
floating number representation to encode FL and NNs variables. A multi-cut-point 
crossover operator is designed according to real-coded codification to explore NNs 
topology schema. GAs are used to search for optimum solution. In addition, to 
experiment the performance of PSO in EFNIM 2.0, PSO is adopted as the other 
evolutionary algorithm in EFNIM 2.0. The second year focuses on developing a 
distributed system to split up EFNIM 2.0 program into parts that run simultaneously on 
multiple computers communicating over a network. In addition, a web-based system is 
established for user’s convenience. Computing hardware and software cost can also be 
reduced. Finally, performances of EFNIM 2.0 GAs and EFNIM 2.0 PSO are compared by 
using Exclusive-OR (XOR) and practical construction management problems. 
The proposed EFNIM 2.0 (GAs, PSO) significantly improves EFNIM. It can be used 
as multifarious intelligent decision support system to facilitate decision-making in 
construction management.  
 
Keywords: Evolutionary Fuzzy Inference Model 2.0, Fuzzy Logic, Neural Networks, 
Genetic Algorithms, Particle Swarm Optimization, Floating Number Representation, 
Distributed Computing, Web-Based System, Decision-Making, Construction Management 
 
 2
 
1.3 研究假定與假設 
 
本研究目的是使用人工智慧(AI)的概念與技術，提升工業工程管理績效，模型假定 
(Hypotheses)和假設(Assumptions)說明如下: 
假定： 
1. EFNIM 使用實數編碼較浮點編碼能縮短編碼長度，獲得更精確的模式。 
2. 使用分散式處理能減少處理時間 
3. 使用群集演算法優於基因演算法的求解時間 
假設： 
1. 線性的梯形和三角形隸屬函數(Membership Functions, MFs)是適當的近似值。 
2. 向前推論神經網路(Feedforward NN) 模型可適當地代表輸入-輸出間之映射關
係。 
3. 案例資料適當且分布均勻。 
4. 問題的影響因素已確定。 
5. 大部分工程管理問題使用 AI 概念解決。 
 
 4
1. 找尋相關文獻 
找尋相關領域文獻，包含如何使用人工智慧解決問題、基因演算法找尋最佳解、如何
使用網頁提供服務等等，並了解相關技術之優缺點。 
2. 描述研究目標 
定義要解決之問題，明確描述問題的背景及結構。 
3. 訂定研究範圍 
研究的範圍是可達成的合理時間及成果，所以研究的範圍必須是明確的。 
4. 回顧相關文獻 
回顧相關文獻後，從中找尋相關方法及知識，以利未來建立模型時的需要。相關主題
包含基因演算法、分散式處理、演算法及網頁服務等。 
5. 探討過去研究發現 
過去的研究發現提供我們進一步的改良，相關主題包含演化式模糊類神經推論模式
(EFNIM)、模糊理論(Fuzzy Logic, FL)、類神經網路(Neural Network, NN)、基因演算
法(Genetic Algorithms, GA)、分散式運算以及群集演算法(Particle Swarm Optimization , 
PSO)等。 
6. 最佳化基因演算法 
使用C/C++程式語言，演練基因演算法，並將程式執行最佳化。 
7. 建立群集演算法 
使用C/C++程式語言，演練群集演算法，並將程式執行最佳化。 
8. 導入分散式處理 
透過呼叫Web Service方式將運算分散至網路上其他電腦進行運算，達到減少運算時
間的效果。 
9. 建立網路服務 
使用C#程式語言，撰寫ASP.Net網頁包含伺服端及介面端之程式進行演練，並將程式
執行最佳化。 
10. 規畫系統 
 6
第二章 文獻探討 
 
2.1 人工智慧(Artificial Intelligence, AI) 
 
2.1.1 基因演算法(Genetic Algorithms, GA) 
 
2.1.1.1 基本概念 
 
最早在1975年由John Holland首次提出以基因遺傳演算法來解決數學最佳化的問題。
其主要啟發自達爾文的進化論：物競天擇、強者生存的定律；模擬生物基因有選擇較
好的(Selection)、交配(Crossover)及突變(Mutation)的能力，使產生更優秀的新生代的
程序；將要解的最佳化問題轉化為染色體及基因的模型，再藉著基因擇優、交配及突
變的過程去尋求最佳解。 
基因演算法主要由以下步驟所構成：1. 編碼方式 2. 參數設定 3. 定義適合度函數 4. 
產生初始母體 5. 計算適應值 6. 交配 7.突變 8. 選擇 9. 終止條件，其演算流程圖
如圖2.1所示。P(t)代表該世代的母體、t為世代數。 
開始
初始母體
計算適應值
交配P‘(t)
突變P‘‘(t)
滿足終止條件
結束
計算適應值
否
選擇P(t+1)
是
 
圖 2.1 基因演算法流程圖 
 8
4. 基因交配 
將所選擇與複製的兩個染色體，以模擬自然界生物交配的現象，交換彼此染色體字串
中部份的染色體，通常會保留兩個染色體所相同的部份，並產生新的染色體個體，其
目的希望透過交配後的染色體能得到更佳的適應值。 
5. 基因突變 
在自然界的生物，有時基因會產生突變，透過這些突變機制來增加族群在生存環境產
生變化時的適應能力，透過此生存原理，使在搜尋過程中，對某些設計空間的忽略做
出彌補的措施，也就是避免使適應值會落在區域解。 
 
 
2.1.1.2 應用在工業工程 
 
基因演算法應用在工業工業領域是很常見的，像是應用在排程或是堆疊等用來減少浪
費的問題上。 
在應用基因演算法求解長方體堆疊問題 (李其憲 2005). 內容主要在討論如何把很多
大小不同的長方體要放入數個不同空間大小的容器時，找出其最佳的擺放組合，這個
問題可以應用在物品的儲藏，避免過多空間的浪費造成運送與儲存的成本。而此篇的
編碼方式在物件擺放的順序，透過基因演算法改變物件擺放順序，直到最後搜尋到最
佳的擺放率。 
在基因演算法於預鑄工廠排程最佳化之研究 (汪書帆 2006)，內容主要在討論找出在
預鑄廠生產情況的流程型生產排程模型，考慮生產暫存區容量，並以多目標基因演算
法對此模型進行搜尋，找出最小完工時間與最小延遲懲罰。而此篇的編碼方式為工件
加工的順序，透過基因演算法改變加工的順序，直到最後搜尋到最佳的組合。 
 
 
2.1.1.3 優點及缺點 
 10
方式、模糊規則及解模糊化(Klir and Yuan 1995)。FLSs的概念圖如圖2.2所示： 
 
說明
輸出
模糊化 模糊推論
模糊規則
組成元素
知識
解模糊
解模糊方法設定
控制流 資料流 系統物件 需求物件
輸入
 
圖 2.2 模糊邏輯系統概念圖(FLS) 
1. 模糊化 
模糊化是將輸入的變數轉換成對應的隸屬函數變數，其中部份函數的方法有分成高
斯、梯形及三角等。 
2. 模糊規則 
模糊規則是連接在輸入及輸出集合之間，這些規則是專業知識的表示法及經常被表達
的句法形式，例如建築品質好代表包商的表現是好的。 
3. 推論方式 
模糊的推論方式是模仿人類的決策過程，利用隸屬函數取得各規則的適合程度，然後
綜合各規則的適合度得到適當的推論，即使規則條件部分的命題不完全一致，也能依
據一致度的高低比較得到合適的推論。 
4. 解模糊化 
將模糊推論所得的推論結果量化為輸出變數的隸屬函數值。實際應用於系統操作，必
須將模糊推論所得到的語意轉化成一明確的輸出值，許多解模糊化的方法如最大值、
 12
2.1.3.1 基本概念 
 
類神經網路理論起源於1950 年代，當時科學家模仿人類大腦的組織及運作方式，開
始提出稱之為「感知機」的神經元模型，這是最簡單也是最早的類神經模型，其通常
被拿來做分類器使用。 
類神經網路透過本身的學習力(learning ability)、訓練力(training ability)，由輸入的資
料中歸納出隱含關係，學習完成後，以各神經元間連結強弱程度來表示，並且將此關
係儲存於各人工神經元中。如果再遇到相似的輸入，就會自動依照所學習成的關係，
來產生最近似的輸出，就算是資料不完整或是混亂的時候，類神經網路也會作出最佳
的預測，即是所謂回想(recall)或聯想(association)的過程。類神經網路不需要借助事先
建立好的程序和知識，它具備一般化(generalization)的能力，可以自動找出資料中所
隱含的模式或特微(賴碧瑩 2005)。 
神經元是神經網路裡基本的元件，神經細胞的構造如圖2.3所示。簡化的人工神經元，
如圖2.4所示為一個單位的人工神經元，包含輸入連接、權重值、偏差值、活化值、
輸出值及輸出的連接。在圖2.4內，輸入是模仿連接細胞的樹狀突;權重是自然神經在
突狀神經的力量; 偏差值表示神經元內安定的水平; 活化作用代表神經元內的極性狀
態; 輸出代表神經元的能量。 
 14
交互作用與問題的內在結構的能力，輸出層處理單元用以輸出訊息給外在環境。 
 
輸出輸入
隱藏層輸入層 輸出層
說明
連接 神經元 未知連接資料流
 
圖2.5 典型的多層網路模式 
 
類神經網路模式最主要的可分四大種： 1. 監督式學習網路。 2. 無監督學習網路。 3. 
聯想式學習網路。 4. 最適化應用網路。倒傳遞網路 (Back-propagation Network , BPN) 
是由 Rumelhart et al.（1986）所提出，是目前類神經網路學習模式中，最具代表性且
應用最普遍的學習模式之ㄧ。 
倒 傳 遞 類 神 經 網 路 的 架 構 為 多 層 感 知 器 配 合 誤 差 倒 傳 遞 演 算 法 (Error 
BackPropagation , EBP)為學習演算法，屬多層前向式網路，是以監督式學習方式處理
輸入輸出間的非線性映射關係，達到準確分類的效果。 
 
2. 誤差倒傳遞演算法 
人工智慧的學習演算法之一，常用於類神經網路系統的訓練，對一個系統輸入樣本測
試資料後，實際輸出值與希望達到的期望有差異時，該誤差由輸出端向輸入端的神經
元反向修正。誤差倒傳遞演算法的架構如圖2.6所示。 
 16
 
類神經網路的缺點： 
1. 類神經透過不斷的訓練逐漸趨近的方式來調整權限值，計算量會很大，因此只能
處理有限的神經元及連結數目。 
2. 類神經網路所用的結構模式並不能保證是最佳的，因為有無限組的組成模式，因
此所得的結果也不能保證是最佳的。 
3. 類神經網路所得到的結果，並無法提供解釋其因果關係的能力。 
4. 在某些需要高度可靠度的地方，例如核電廠的監控，類神經網路可能就無法使用。 
 
 
2.1.4 粒子群演算法(Particle Swarm Optimization, PSO) 
 
2.1.4.1 基本概念 
 
粒子群最佳化演算法是Kennedy和Eberhart於1995年時提出，藉由鳥群或魚群在覓食時
可能不知道最佳的覓食點在哪裡，憑著自己的感覺和經驗去尋找，當其中某隻鳥尋找
到較佳的位置時，鳥群彼此間會互相影響，飛去較佳的位置，而兩位學者將這種特性，
應用於尋求空間中最佳解的位置。 
粒子群演算法的流程如圖2.7所示，步驟分別為設定相關參數、初始速度及位置、計
算適應值、紀錄粒子個體最佳解(pbest)及群體最佳解(gbest)、更新利子位置與速度及
判斷是否符合終止條件等。 
 18
5. 滿足終止條件 
判斷是否中止條件，通常為滿足目標值或達到執行次數。 
  
 
2.1.4.2 優點及缺點 
 
PSO透過群體中粒子的合作與競爭而產生群體智慧，吸引著所有粒子往最佳解的方向
搜索，而且在數值最佳化等問題中表現出良好的求解能力，其方法相當簡單快速，對
於多重最佳解問題可以提供良好的解決方案。但是粒子群演算法仍存在容易陷入區域
最佳解及搜索精度不高等缺點，因此通常PSO會混合其他方法來改善傳統PSO的缺
點。 
 
 
2.2 演化式模糊類神經推論模式(EFNIM) 
 
2.2.1 基本概念 
 
演化式模糊類神經推論模式是將基因演算法(GA)、模糊邏輯(FL)及類神經網路(NNs)
三種人工智慧技術結合起來，利用彼此的優點整合出一個模糊類神經的推論模式。 
過去在單獨使用類神經時，都是在固定的網路結構下透過訓練得到權重值，並以此來
預測出想得到的解答，因此並無法保證在此固定的結構下能得到最佳解。此模式跟以
往不同的是，是先找出最佳的類神經網路結構及參數，再對過去資料作訓練及預測，
所謂的結構也就是包含類神經網路的隱藏層數、每一層的神經元數，以及其參數的最
佳化，如圖2.8所示為ENIM的基本架構圖。 
 
 20
初始母體
計算適應值
選擇
輪盤法 交配
計算適應值
突變
說明
控制流 資料流 步驟
 
圖 2.9 EFNIM 結構簡化圖 
 
 
2.2.2 優點及缺點 
 
演化式模糊類神經推論模式的優點： 
1. 因為是先找出最佳化的類神經模糊結構及參數，因此會較直接使用固定的結構參
數效果佳。 
2. 模擬人類大腦的決策的過程，可以透過過去的資訊來進行預測。 
 
演化式模糊類神經推論模式的缺點： 
1. 需要較長的運算時間。 
2. 染色體過大時會造成問題複雜。 
3. 模型的穩定性還不夠完整。 
 
 
2.3 分散式處理 
 22
由分散式的運算結構出發，藉由將網路上的各個節點串聯起來，結合所有的節點一起
去做一份工作來達到高速運算的功能，網格計算則是由分享共用異質性以及地理上分
開的資源為出發點，著重在探討資源的存取方式， 並藉由將虛擬組織的概念將資源
整合起來以達成高速運算的目的。 
 
2. 支援向量機之最佳化參數與屬性篩選之分散式資料探勘系統—以粒子群最佳化演
算法為基礎(段建帆 2005)：以分散式運算架構實作，採用Web Service 技術來建置此
分散式運算架構，利用PSO 作為屬性篩選與分散式運算工作分配的演算法，並以SVM 
作為分類器，以PSO 尋優得到屬性篩選之解，帶入SVM 分類器，得到分類正確率，
再將正確率回傳給PSO 以做為下一步尋優方向。透過此運算架構，運用多部個人電
腦來做分散式運算，可以降低系統成本，並縮短整體運算時間，快速得到實驗結果。
其步驟大約如下： 
建立資料→設定參數→初始化→使用Web Service計算Fitness→回傳Fitness結果並檢
查是否已達演化條件。 
此篇研究著重在使用Web Service技術來建置分散式運算架構，使用PSO演算法來找尋
SVM的最佳參數。 
 
3. 分散式基因演算法執行效率最佳化之研究(洪光鈞 2005)：調整群體規模、遷移時
機以及遷移率進行多次求解實驗，針對結果探討如何利用調整相關參數改善演化效
能，並嘗試利用資料探勘推導出各遷移參數與適應值的關係式，以找出最佳的遷移參
數組合，進一步提升預測解題的效果與品質。  
此篇研究著重在分散式基因演算法的島嶼模式，找出最好的模式參數，分散方式為透
過區域網路的多台電腦進行。 
 
4. 利用叢集運算系統模擬軀體感覺神經網路模型(吳偉豪 2003)：為利用基因演算法
解決軀體感覺神經網路模型本身的全域最佳解問題。分散的方式為使用MPI平行處
 24
表 2.2 平行基因演算法模式類型(Erick 1992) 
 
主僕式 
平行基因演算法 
原則﹕ 
． 不改變傳統GA搜尋的行為。 
． Master只負責傳送基因字串給其
他處理器與收集計算結果。 
特點： 
． 容易建構，適合在每個node之
計算量大且通訊量少之情況。 
． 可以直接運用在各種GA的理
論。 
 
細粒型 
平行基因演算法 
 
原則﹕ 
． 每一個node完成一個serial GA。
． 有一個限制個體(individual)互動
的空間架構，每一個個體只能
與相鄰的個體比較與交換。 
特點： 
．  當鄰近的區域有較佳解出現
時，將會迅速傳播給整個個體。
 
 
 
 
 
 
 
 
 26
Web Service是在網際網路上提供其他程式或系統呼叫的程式，有如函式(function)的
效果，只不過是透過網路的方式呼叫，而這些程式間是用XML做為溝通的媒介。 
現今已經有相當多的工具及實際運用案例，在Web Service的應用上，如圖2.10可以區
分幾個部份： 
1. Service：提供其他程式呼叫的程式，由提供者將其公佈在網路上提供服務。 
2. 服務提供者：提供服務及服務本身的執行環境。 
3. 服務要求者：某Client或應用程式，搜尋使用Web Service。 
4. 目錄服務機構(UDDI Registry)：儲存Web Service的地方，讓提供者註冊要公開
的資訊，並提供要求者查詢的服務。 
 
Service
服務要求者
目錄服務
機構
2. 查詢 1.註冊
3.呼叫使用
 
   圖 2.10 Web Service 參與角色之互動 
 
Web Service 的主要的效益包括(Microsoft)： 
1. 改良網站的效能：分散式的結構是提供最好的使用者經驗的關鍵。因為能夠最
佳化每個資料庫所包含的類型，並根據對資料的存取模式協調效能，可以確保
是用最快速的方式將資料傳送到瀏覽器。 
2. 可用性：使用實體分散的結構與內容片段，那麼假設某個資料庫是離線或是某
個伺服器無法運作，只有網站的片段無法使用，並且只有一小部份的使用者受
 28
第三章 演化式模糊類神經推論模式2.0 
 
3.1 模式架構 
 
演化式模糊類神經推論模式II (EFNIM II)的架構以原EFNIM為基礎而發展，主要由基
因演算法、類神經及模糊邏輯組合而成，架構圖可以參考原始模式(如圖2.8及圖2.9)，
模式目的在透過基因演算法找出最佳的模糊類神經的網路結構及參數。 
圖3.1為模糊類神經的架構圖，所需要的模糊變數經過模糊化、隱藏層及解模糊化後
得到輸出，而這些網路結構皆會轉換成編碼來進行基因演算法的計算，最後得到最佳
的結構參數。 
 
a1
.
.
.
.
.
.
模糊化 隱藏層 解模糊
輸入變數 輸出
MFs
.
.
A區塊 B區塊
c11 w11
b1
.
.
.
 
圖 3.1 模糊類神經架構 
 
除了原本模式的運作流程之外，EFNIM II新增分散處理及網路服務的功能，如圖3.2 
EFNIM II資料流程圖所示，使用者可以透過網路開啟網頁介面來執行主機端的服務，
主機端的演算法透過Web Service的方式分散呼叫子電腦的Web Service來計算染色體
或粒子適應值，然後在主機端整合及運算。 
 30
 
 
3.2 模式流程 
 
EFNIM II分別運用基因演算法與群集演算法來找出最佳隸屬函數分布、類神經網路的
網路結構和參數，上述兩者演算法流程如圖3.4及圖3.5所示，類神經網路結構參數及
模糊邏輯採用相同的編碼方式。 
No
t = t +1 Yes
開始
初始母體P(t)
適應值
終止條件
突變P’’(t)
適應值
選擇P(t+1)
完成
交配P’(t)
 
圖 3.4 基因演算法程序圖 
 
 32
相同的點，(c)為正常情況下一個變數通常會由三個以上的隸屬函數所組成，這個圖的
編碼由五個頂點S1-S5及四個斜邊寬度W1-W4所組成，整個模糊邏輯的隸屬函數的編碼
字串如圖3.7所示先紀錄頂點位置、再記錄斜邊寬度，接著再記錄下一個變數的隸屬
函數。 
S5
0
1
X1 X2 X3 X4 X1 X2=X3 X4
S1 S2 S1=S2
MF1 MF2 MF3
S1 S2 S3 S4
W1 W3
W2 W4
(a)標準MF (b)特殊MF (c) MF組合
 
圖 3.6 隸屬函數 
 
--- --- --- --- --- --- --- --- ----
S1 S2 S3 S4 S5 W1 W2 W3 W4
Summit Widths
MFs變數1
MF字串
rlsu rlwi
4386
 
圖 3.7 SWRM 編碼字串 
 34
 
NNs的BRM編碼 
 
BRM是類神經網路的編碼方式，由圖3.8模糊類神經的結構圖可以看到每個神經元是
由包含從前層神經元是否相連及權限，還有神經元本身的活化函數及偏差值等四項數
值所構成，因為不同的隱藏層有不同的上層神經元數目，因此在編碼時會產生不同的
編碼寬度。 
在編碼時使用者需要輸入包含隱藏層數目、神經元數目、所有參數的上下限、精準度
等等，使運算時能產生隨機的母體編碼，進而找出最佳化的結構參數。 
 
a1
.
.
.
.
.
.
模糊化 隱藏層 解模糊
輸入變數 輸出
MFs
.
.
A區塊 B區塊
c11 w11
b1
.
.
.
 
圖 3.8 模糊類神經結構 
 
在圖3.9的A區塊是模糊化層與第一個隱藏層之間的編碼(圖3.8)，共分成連接、權重、
活化與偏差值四個編碼區段，編碼的寬度代表上層的神經元數目，其中是否連接與權
重值是與上層神經元的連接、權重(圖3.8)，因此在第一隱藏層的每個神經元會有上層
神經元數目的連接與權重值的編碼，而偏差與活化值則是每個神經元擁有一個編碼數
 36
NNL 是類神經網路編碼長度， isbh 是該層神經元的數目， isbrcn 是該層神經元的編碼長
度，總和所有區塊的後就是總編碼長度。 
模糊化層的神經元數目為 
ivMF
i
fi nnnn                   (3.7) 
i
finn 是模糊化層的神經元數目， MFn 是有幾個模糊變數， ivn 是模糊變數區分的等級
數。 
i
crcn 當與上層神經元有相接時為1，無相連時則為0，因此其編碼長度為1， iwrcn 、 ibrcn
與 iarcn 代入公式(3.4)算出其編碼長度，公式上下限值與精準度同樣由使用者輸入。 
舉例： 
隱藏層2層, 模糊變數2, 每個分成3等級, 隱藏層分別有2及3個神經元,權重、偏差及活
化值分別為0~1, -1~0及1~2, 精準度到小數點3位 
代入公式(3.4)可以得到權重、偏差及活化值的編碼長度 
i
wrcn =3 , iarcn =3 , ibrcn =3 
代入公式3.7得到模糊化層神經元數目 
i
finn =2×3=6 
代入公式(3.5)得到神經元編碼長度 
1
sbrcn  =6×(1+3)+3+3 =30 
2
sbrcn  =2×(1+3)+3+3 =14 
3
sbrcn  =3×(1+3)+0+0 =12 
代入公式(3.6)得到類神經網路總編碼長度 
NNL  =2×30+3×14+12×1 =114 
 
 
隨機產生母體 
 
初始母體時將使用者所輸入的相關參數隨機產生包含神經層數與每層的神經元數
 38
 
---
---
---
---
---
---
---
---
子電腦 1
Web Service
子電腦 2
Web Service
子電腦 3
Web Service
網路
母體染色體
確認有三台子電腦
進行切割
1
2
3
4
5
6
1
2
3
4
5
6
計算適應值
回傳結果
2 3 2 ---
3 4 1 2
2 3 2 ---
3 4 1 2
---
---
0
0
 
圖 3.11 分散式處理示意圖 
 
 
在Web Service的使用上，需要在主機程式程式端設定分散子電腦的相關位址設定，
透過多工的特性來呼叫子電腦的Web Service，呼叫的函式如下所示： 
函式名稱(專用密碼，染色體編碼陣列，編碼相關設定陣列) 
 
專用密碼是為了避免其他不相關的使用者透過網路來呼叫這個函數，因此必須符合密
碼時才能成功的使用這個函數；染色編碼陣列是將原染色體依照有幾個子電腦後分割
成數個子陣列；編碼的相關設定包含所有編碼所需的編碼長度等在計算適應值必須知
道的相關設定，因為子電腦並無主機網頁端所執行的相關參數資料，所以透過陣列的
方式傳送給子電腦。 
 
 
3.2.3 計算個體 
 
 40
    110  rj
wiwi
wiwi lbubdvlbwi                        (3.8) 
w1 =0+55×(0.4–0.1)/(102-1) =0.1667 
類神經網路的編碼方式如圖3.9所示，按照編碼的方式依序能知道每個神經元包含是
否連接、權重、活化與偏差值的編碼，再透過公式(3.8)得到實際的數值。 
 
 
計算目標函數 
 
當編碼解碼為實際數值後，就可以進行目標函數的計算，目標函數的公式如下所示 
mccscv cwerawob                        (3.9) 
其中 obv 是目標函數， awc 是衡量準確性的係數， ers 是誤差， cwc 是衡量複雜權重的係
數，mc是結構複雜值。 
mc為總和所有模糊類神經內的神經元數目。 
ers 是在計算均方根誤差(RMSE)，其公式如下所示 
  2/12
1 1













 
 
cnip
n
n
n
m
acde
er
nn
oo
s
ip cn
                      (3.10) 
是均方根誤差， deo 是目標值， aco 是實際值 
模糊類神經網路的計算如下面所示，首先找出模糊變數輸入值對應的相對值，其公式
如下 
lbub
lbvv
ci
de

                            (3.11) 
糢糊化層 
dev 是模糊相對值， civ 是輸入值，lb是模糊變數下限值，ub是模糊變數上限值 
找出模糊變數的相對值後，接著找出模糊變數下不同階層的隸屬函數值，公式如下 
 42
Ψ(·)是解模糊函數，目前在模糊類神經常被用到分別為平均輸出、平均權重和權重總
和，公式如(3.18)、(3.19)、(3.20)所示 
 


 D
k
mk
m
m
w
netnet
1
          (3.18) 
 


 D
k
k
m
m
y
netnet
1
              (3.19) 
  mm netnet                    (3.20) 
 
 
計算適應值 
 
適應值(Fitness Value)主要用來評估染色體(粒子)的好或壞，並透過演算法的運算來得
到更好的目標值，在這邊適應值及目標函數的關係如下 
k
obk
ft
v
v 1              (3.21) 
k
ftv 是第k個染色體(粒子)的適應值， obv 是第k個染色體(粒子)的目標函數 
 
 
3.2.4 基因演算法流程 
 
計算出染色體的目標函數及適應值後，透過基因演算法的相關演化過程來找出更佳的
目標值。 
 
 
交配 
 
交配的用意在透過良好的母體的染色體交換，希望能得到更佳的目標值。如圖3.12所
 44
 
圖 3.13 基因突變示意圖 
 
 
選擇 
 
選擇的方式延續EFNIM之擴展模式，當母體計算出適應值後，從母體內選擇要保留的
下個世代母體，本研究使用的是輪盤法，如圖3.14所示，母體經過交配及突變後，會
產生部份新的染色體，將這些染色體計算適應值後，透過輪盤法產生新世代的母體。 
輪盤法的用法簡單來說，將適應值改成百分比的形式後，隋機產生0-1的值，依此選
出全部的新世代母體。 
2416783
331583849
13342
223314
2415838
331678349
13322
338678349
交配
突變
突變
輪盤法
2416783
331583849
2415838
338678349
新世代母體
母體
 
圖 3.14 選擇示意圖 
 46
第四章 系統規劃與發展 
 
4.1 物件導向系統發展流程 
 
本研究使用物件導向的電腦技術來開發EFNIM系統，物件導向系統的開發過程如圖
4.1所示，開發過程並使用UML來對物件導向作出標準的規格語言說明。 
 
計畫 建立 實行
分析 設計 建構 測試
定義系
統需求
定義初步
系統使用
過程、系
統概念及
系統架構
找出系統
使用過程
找出系統
概念
定義系統
行為
定義互動
關係
定義系統
程式類別
定義資料
庫結構
 
圖 4.1 系統開發過程圖 
 
 
4.1.1 定義系統需求 
 
在計劃階段，依照使用者所需要的功能來定義出系統的功能，本研究所定義的系統需
求如表4.1所示 
 48
4.1.2 系統分析 
 
系統分析是建立系統必要的工作，分析了解系統的過程、概念、要求及行為，並將之
描述出來。 
系統用法過程描述系統與使用者在使用的過程。清楚地提供系統參與者定義系統用法
過程資訊。本研究的系統使用過程如圖4.2所示。 
 
使用者
初始母體
基因演算法
群集演算法
計算適應值
專案訓練
專案預測
專案結果
行為者 Use case 連接 單向連接
說明
 
圖 4.2 系統使用過程圖 
 
EFNIM II系統是由許多概念組成的複雜系統。為了減少系統的複雜性, 找出系統概念
這個工作將整體概念分成許多更小的子概念集合。系統行為是將使用者與系統之間的
行為透過圖表的方式顯示出來。 
4.1.3系統設計 
 
定義互動關係在描述一個動作怎麼完成其任務功能，本研究包含專案訓練、專案預測
及專案結果顯示等三大功能，其互動關係圖如圖4.3所示。 
 50
result_name
ite
best_fitness
RMSE
avg_fitness
fitness_running
result_name
code_number
code
code
result_name
ite
maxtrix_num
fuz_lay_max
fuz_lay_min
fuz_neuro_max
fuz_neuro_min
fuz_num
caw
ccw
cross_rate
mu_rate
decimalNo
parameter
1
1..＊
1..＊
1
11
Project
result_name
MF_1
MF_2
MF_3
MF_4
MF_5
MF_6
MF_7
MF_8
MF_9
MF_10
MF_output
Max
Min
MF
1
1
1
result_name
layer_no
neuro_no
bias
activation
con
weight
FNN_struct
result_name
MF_no
Summit
width
MF_SW
1
Project_name
result_name
fitness
best_fitness_ite
cost_time
result
project_name
Description
project
1..＊
1..＊
1
1..＊
 
圖 4.4 資料庫結構圖 
 
 
4.1.4 系統建構 
 
根據前面的分析及設計後建構系統，在本研究內使用的程式語言是”Microsoft Visual 
Studio C#.Net”，使用的資料軟體為”Mircrosoft Access”來建立資料庫系統。 
 
 
 
 
4.1.5 系統測試 
 
為了保證系統能正確地符合要求, 系統會透過測試。資料庫管理、演算過程、計算結
果, 和基準類型各個作用將被測試。透過除錯直到系統能完全地符合要求。 
 52
 
從首頁選取專案訓練模組並選擇演算法，若是選擇基因演算法如圖4.6所示，群集演
算法如圖4.7所示 
 
圖 4.6 基因演算法頁畫面 
 
 
圖 4.7 群集演算法頁畫面 
 
 54
 
圖 4.9 專案預測頁畫面 
 
專案結果模組 
 
從首頁選取專案查詢模組後進入該網頁，輸入專案名稱及所要選擇之查詢項目，按下
查詢按鈕即可查詢相關的專案資料，如圖4.10所示，查詢結果如圖4.11。 
 
圖 4.10 查詢結果頁畫面 
 56
第五章 模式驗證 
 
5.1 參數設定 
 
本研究透過五個問題，驗證 EFNIM II 模式與原模式的差異，比較與分析包含推論準
確性與運算所需時間。模式的差異點整理如表 5.1 所示，驗證模式的基本參數設定如
表 5.2 及表 5.3。  
 
表 5.1 EFNIM 與 EFNIM II 差異點 
 EFNIM EFNIM II 
編碼方式 位元 實數 
演算法 GA GA 或 PSO 
執行平台 單機 單機或多機 
程式撰寫語言 VB C# 
人機介面 應用程式 網頁 
 
表 5.2 演算法參數 
參數 數值 
世代數 5000 
母體數 50 
交配率 0.5 
突變率 0.01 
正確率係數 1 
 
 58
表 5.4 XOR 結果比較 
 EFNIM EFNIM II (GA) EFNIM II (PSO) 
RMSE 0 0 0 
時間(秒) 326 136 32 
最佳 
世代數 
48 289 37 
 
EFNIM II使用基因演算法所求出的最佳模糊類神經架構如圖5.1為隸屬函數，圖5.2為
網路架構。 
 
-0.1 1.1
1
0
-0.1 1.1
1
0
MF MF
模糊變數1 模糊變數2
 
圖 5.1 XOR 隸屬函數圖 
 60
 
GA與PSO的收斂趨勢如圖5.3所示，GA在289世代得到最佳解，PSO在37世代即得到
最佳解，可見在簡單的問題上，PSO擁有較好的效率。 
EFNIM II在XOR問題所得之FNN架構圖較EFNIM模式佳，雖然EFNIM在48世代即找
尋到，但EFNIM所得之複雜度為7，EFNIM II為3，推測EFNIM在得到RMSE為0時即
停止世代運算，因此複雜度較大。 
 
 
5.3 承包商績效預測 
 
此問題引述吳宗桂(2001)收集承包商表現的案例資料，透過承包商最後三次表現預測
未來績效，吳宗桂(2001)收集14個承包商的34個下包商數據案例，包含22個輸入案例
和12個測試集合引用的資料如表5.5。 
 62
表 5.5 轉承包商預測數據(續) 
21 66 62 58 68 0.7083 
22 76 74 76 76 0.7917 
測試數據 
23 60 56 62 66 0.6875 
24 66 60 56 68 0.7083 
25 68 66 60 66 0.6875 
26 66 68 66 66 0.6875 
27 66 66 68 70 0.7292 
28 76 66 66 76 0.7917 
29 74 66 70 76 0.7708 
30 76 70 76 74 0.7917 
31 76 76 74 76 0.7917 
32 80 74 76 76 0.8333 
33 86 76 76 80 0.8958 
34 88 76 80 86 0.9167 
 
 (輸入最小值 , 輸入最大值) = (-9.6 , 105.6) 
EFNIM II經由上述的數據訓練後結果與EFNIM比較如表5.6所示，測試數據的預測表
如表5.7所示，所得到的最佳模糊類神經結構如圖5.4所示。 
 
 64
輸入變數1
輸入變數2 輸出值
輸入變數3
b1 = -0.1481
b2 = -0.8098
a1 = 1.2747
a2 = 1.4983
W11 = 0.36
W31 = 0.64
W51 = 0.99
W41 = 0.90
W61 = 1.00
W71 = 0.29
W101 = 0.60
W91 = 0.41
W121 = 0.86
W131 = 0.35
W32 = 0.03
W151 = 0.01
W42 = 0.67
W52 = 1.00
W132 = 0.17
W62 = 1.00
W142 = 0.89
W11 = 0.61
W21 = 0.29
 
圖 5.4 承包商績效預測 FNN 結構圖 
 
EFNIM II在承包商績效預測所得之FNN架構圖與EFNIM模式差不多，同樣都是15 – 
2 – 1的結構，複雜度較EFNIM略高，RMSE則是差不多。 
 
圖 5.5 轉承包商預測收斂趨勢圖 
 
GA與PSO的收斂趨勢如圖5.5所示，GA在4947世代收斂得到最佳解，PSO在846世代
收斂，從圖5.5得到，PSO所得的RMSE較GA差，不過收斂完成的速度較GA快。 
 
 66
表 5.8 建築工程成本概估數據 
no 輸入值 輸出 正規 
訓練數據 
1 872.9 1 67 1 50 6423 10 3 2 2 19519 0.4325
2 1646.8 1 0 1 24 6163 11 2 2 3 21370 0.5203
3 2168.9 1 0 1 13 6240 14 2 2 3 29499 0.9056
4 1777.7 2 150 1 79 8314 7 1 1 2 18631 0.3904
5 2869.9 1 46 1 146 17348 9 2 1 3 27844 0.8272
6 3756.8 1 25 1 87 5966 10 2 3 3 29731 0.9167
7 3018.9 1 0 1 201 21766 16 2 2 2 17041 0.1350
8 890.6 1 127 1 12 9545 12 3 1 1 14129 0.1770
9 5778.8 1 150 1 227 39390 14 3 1 1 12154 0.0833
10 2862.8 1 0 1 78 15240 12 2 2 3 22070 0.5535
11 1851.1 1 74 1 182 11910 14 3 2 2 16906 0.3086
12 2148.7 2 43 1 46 15659 14 2 2 1 14864 0.2118
13 3225.9 1 90 1 128 15900 9 2 1 1 12287 0.0896
14 2786.7 2 0 1 133 32888 24 4 2 2 18894 0.4029
15 833.0 1 152 1 126 7775 14 3 2 2 19629 0.4377
16 1315.6 3 243 1 10 6899 6 2 3 2 19151 0.4150
17 2302.0 1 87 1 58 18465 14 3 3 3 25601 0.7208
18 806.9 1 33 1 72 7854 14 3 3 3 23977 0.6438
19 4375.3 1 0 1 49 14029 11 2 3 3 27083 0.7911
20 790.0 1 97 1 32 5571 12 2 2 1 14713 0.2046
 
 68
表 5.9 參數代表意義(續) 
 
裝飾類 
基本 
普通 
豪華 
1 
2 
3 
 
設施類 
基本 
普通 
豪華 
1 
2 
3 
 
表 5.10 輸入參數範圍 
參數意義 最小值 最大值 
住戶面積 32.76 2507.66 
地質 0.8 3.2 
影響住戶數 -24 264 
地震衝擊 0.8 3.2 
住戶計劃數 -12.6 258.6 
總房屋面積 662.42 12939.05 
頂樓 4.2 25.8 
地下室 0.7 4.3 
裝飾 0.8 3.2 
設施 0.8 3.2 
 
經由上面的訓練數據後得到概念性估計建築結果比較表如表5.11所示，測試數據的預
測表如表5.12所示，所得到的最佳模糊類神經結構如圖5.6所示。 
 70
 
 
圖 5.7 建築工程成本概估收斂趨勢圖 
GA與PSO的收斂趨勢如圖5.7所示，GA在4988世代收斂得到最佳解，PSO在765世代
收斂，從圖5.7得到，PSO所得的RMSE較GA差，不過收斂完成的速度較GA快。 
 
 
5.5 專案成功度預估 
 
此問題引述自柯千禾(2002)，CAPP (Contentious Assessment of Project Performance)將
專案成功之影響因素分為10項，並藉由此10個因子來進行專案成功度的預測，因素分
別為設計完成度、所有開支、承包商費用保證、所有項目花費保證、花費時間、突發
事件機率、加工時間、更改訂單的花費、更改訂單的品質及天氣造成的損失天數。 
CAPP 根據54個項目分析項目的重要水準，並從這54個項目中，找出其中15個可用在
建築領域的處理項目，前12個項目用來做為訓練模型，並透過後面3個項目進行測試，
數據如表5.13所示，輸出結果所代表的意義如表5.8所示。 
 72
表 5.14 輸出結果參數代表意義 
參數意義 代表數值 
順利完成 1.00 
準時或在估計內 0.66 
較差 0.33 
失敗 0.00 
 
表 5.15 專案成功度預估預測結果比較 
 EFNIM EFNIM II(GA) EFNIM II(PSO) 
RMSE 0.0362 0.0493 0.1436 
時間(秒) 5437 681.453 497.328 
最佳 
世代數 
4968 4968 536 
 
表 5.16 專案成功度預估測試數據 
編號 輸出 FL NNs EFNIM EFNIM II 
13 0.000 0.5571 0.9029 0.0316 0.1139 
14 0.6667 0.4403 0.9531 0.7095 0.7561 
15 1.000 0.3210 0.7631 0.9668 0.9782 
RMSE 0.5237 0.5637 0.0326 0.0845 
 
 74
II使用GA所得之收斂圖與EFNIM類似，最佳解在5923世代。 
 
 
5.6 自動產生相似程度 
 
此問題引述李(Lee, 2002)，該學者透過文學回顧、採訪、專家與問卷調查確認12個影
響日程表延遲費用的因素，李收集41個基本的案件得到31個由基本案件得到的相似程
度數據，其中3個作測試參數，如表5.17所示。 
 76
表5.17 自動產生相似程度數據(續) 
21 － 0 － 0 0 － － － － － 0 0 0.2 
22 － 0 － － － － － － 1 － － 0 0.6 
23 － 0 0 0 － － － 0 0 － － 0 0.2 
24 － － 0 0 － － － － － － － 1 0.6 
25 － 0 － － － 0 － － － 0 － 0 0.2 
26 － 0 0 － － － 0 － 0 － － － 0.2 
27 － 1 0 － 0 － － 1 0 － － － 0.4 
28 1 0 － － 0 0.5 － 1 － － 0 － 0.6 
預測數據 
29 － 1 0 1 － － － 0 － － 0 1 1.0 
30 － 1 0 0 － 1 － 1 0 － － － 0.8 
31 0 1 － － － 1 － 1 － － － － 1.0 
 
(輸入最大值 , 輸入最小值) = (-0.1 , 1.1) 
經由上面的訓練數據後得到動態的專案成功預測結果比較表如表5.18所示，測試數據
的預測表如表5.19所示，所得到的最佳模糊類神經結構如圖5.6所示。 
 78
60 – 1 – 2 – 4 – 2 – 3 – 1 – 1，EFNIM II所得結構雖只有三個隱藏層，但網路複雜度
EFNIM較好，RMSE則差不多。 
 
 
圖 5.11 自動產生相似程度收斂趨勢圖 
GA與PSO的收斂趨勢如圖5.11所示，GA在4996世代收斂得到最佳解，PSO在420世代
收斂，從結果來看，PSO所得的RMSE較GA差，不過收斂完成的速度較GA快。EFNIM 
II使用GA所得之收斂圖與EFNIM類似，最佳解在4239世代。 
 
 
5.7 分散式處理比較 
 
透過Web Service的方式，以多台電腦的形式進行分散的處理，分散式環境如表5.20，
並與使用單台電腦的情況下進行比較，本研究使用第一個XOR問題(P1)及第三個建築
工程成本概估問題(P3)做為簡單及複雜問題的代表來進行測試，其結果如表5.21所示。 
 80
 
 
 
5.8 討論 
 
從上面所導入的五個問題所得到的結果，可以發現一些比較的結果，包含 
1. EFNIM與EFNIM II所訓練得到的誤差與預測結果並沒有太大的差異，但所需的運
算時間大幅的降低。 
2. GA所得到的誤差與預測結果皆優於PSO所得到的結果，而PSO的運算時間則優於
GA。 
3. GA與PSO的運算時間直接受到模糊變數數量與訓練樣本的數量影響，當兩者都較
小時，PSO運算時間明顯優於GA，反之則並不明顯。但若以收斂趨勢來看，PSO
可用較短的世代數，因此在運算時間上，仍明顯優於GA。 
4. 分散式所得的結果並不如預期，原因在連接Web Service所需的時間太長，在小母
體或小問題時，使用分散所需時間遠大於單機執行，僅在大問題且大母體的情況
下會優於單機執行。 
 82
分散式電腦的功能。 
2. 分散式運算： 
改變分散式的演算法，使用其他的分散方式來代替主僕式分散，例如島嶼或細粒
型的分散式演算法，減少呼叫Web Service的次數，增加計算速度。 
 
對於未來能加入的建議提出如下： 
1. 使用多目標演算法來求取多個目標的結果。 
2. 結論的分析使用ROC(Receiver Operator Characteristic)曲線法或其他方法來呈現。 
3. 運用其他演算法提高推論精確度並減少計算時間。 
 
6.3  研究成果 
 
量化成果 
本研究成果共計發表3篇SCI期刊論文，其他研究成果將陸續發表。 
1. Ko, C. H. and Wang, S. F. (2011). “Precast Production Scheduling Using 
Multi-Objective Genetic Algorithms.” Expert Systems with Applications, 38(7) 
8293–8302 (EI, SCI).  
2. Ko, C. H. and Wang, S. F. (2010). “GA-based decision support systems for precast 
production planning.” Automation in Construction, 19(7) 907–916 (EI, SCI).  
3. Cheng, M. Y., Tsai, H. C., Ko, C. H., and Chang, W. T. (2008). “Evolutionary Fuzzy 
Neural Inference System for decision making in geotechnical engineering.” Journal of 
Computing in Civil Engineering, ASCE, 22(4), 272-280 (EI, SCI).  
 
質性成果 
1. 本研究為綜合使用模糊理論、類神經網路、基因演算法與粒子演算法之首創研究之
一。 
2. 本研究開發之 EFNIM II 為運用粒子演算法尋找類神經網路參數之前導研究之一。 
3. EFNIM II 改良 EFNIM 模式於電腦運算效能與二進位字串編碼過長等缺點。 
4. 本研究開創運用模糊理論、類神經網路、基因演算法與粒子演算法，解決營建管理
問題，提升營建管理之人工智慧技術。 
5. 模式驗證之問題皆為電腦科學於營建管理領域之創新應用，提供新穎解決問題之方
法。 
6. 本研究所開發之 EFNIM II 可協助無人工智慧背景之人員解決 ill-structured, complex, 
uncertain, nonlinear, and incomplete 之營建管理問題。 
7. EFNIM II 可做為開發決策支援系統之核心，提升解決問題之效率。 
 
 
 84
for unstable slopes.” Computer-Aided Civil and Infrastructure Engineering, 18(1), 
63–76. 
Cheng M. Y., Ko C. H., and Chang, W. T. (2002). “Evolutionary fuzzy neural inference 
system for decision-making in geotechnical engineering.” 91, Sino-Geotechnics, 
31–38 (in Chinese). 
Cheng, M. Y., Tsai, H. C., Ko, C. H. and Chang, W. T. (2008a). “Evolutionary Fuzzy 
Neural Inference System for Decision-Making in Geotechnical Engineering.” Journal 
of Computing in Civil Engineering, ASCE, 272-280. 
Cheng, M. Y., Ko, C. H., and Lin, Y. C. (2008b) “Prediction of diaphragm wall deflection 
in deep excavations using evolutionary fuzzy neural inference model.” Journal of the 
Chinese Institute of Civil and Hydraulic Engineering, 12(2), 175-182 (in Chinese). 
Cheng, M. Y., Tsai, H. C., Ko, C. H. and Chang, W. T. (2008a). “Evolutionary Fuzzy 
Neural Inference System for Decision-Making in Geotechnical Engineering.” Journal 
of Computing in Civil Engineering, ASCE, 22(4), 272-280. 
Chen, M. Y., and Wu, T.K. (2005). “Construction Conceptual Cost Estimates Using 
Support Vector Machine.” 22nd International Symposium on Automation and 
Robotics in Construction ISARC 2005 - September 11-14, 2005, Ferrara (Italy). 
Chi, J., Koyuturk, M., and Grama, A. (2006). “Conquest: A coarse-grained algorithm for 
constructing summaries of distributed discrete datasets.” Algorithmica, 45(3) 377-401. 
CII (1996). Predictive tools: Closing the performance gap. Research Summary, RS107-1, 
The Construction Industry Institute, Austin, Texas. 
CIOB (1997). Code of Estimating Practice. 5th ed., The Chartered Institute of Building, 
Ascot, United Kingdom. 
Coulouris, G., Dollimore, J., Kindberg, T. (2000). Distributed Systems: Concepts and 
Design, Addison Wesley. 
Cordon, O., Gomide, F., Herrera, F., Hoffmann, F., Magdalena, L. (2004). “Ten years of 
 86
Jaradat, M.A.K., and Langari, R. (2009). “A hybrid intelligent system for fault detection 
and sensor fusion.” Applied Soft Computing Journal, 9(1) 415-422. 
Kennedy, J. and Eberhart, R. (1995a). “A new optimizer using particle swarm theory.” 
Proceedings of the IEEE International Conference on Micro Machine and Human 
Science, 39-43.  
Kennedy, J. and Eberhart, R. (1995b). “Particle swarm optimization.” Proceedings of the 
IEEE International Conference on Neural Networks, 4, 1942-1948.  
Kennedy, J. and Eberhart, R. (1999). “Empirical study of particle swarm optimization.” 
Proceedings of the IEEE International Conference on Evolutionary Computation, 
1945-1950.  
Kim, D.H. (2008). “Optimal learning of fuzzy neural network using artificial immune 
algorithm.” Neural Network World, 18(2) 147-170. 
Ko, C.H. and Cheng, M.Y. (2003). “Hybrid use of AI techniques in developing 
construction management tools.” Automation in Construction, 12(3), 271-281. 
Ko, C. H. and Cheng, M. Y. (2007) “Dynamic prediction of project success using artificial 
intelligence.” Journal of Construction Engineering and Management, ASCE, 133(4), 
316-324. 
Ko, C. H., Cheng, M. Y., and Wu, T.K. (2007). “Evaluating sub-contractors performance 
using EFNIM.” Automation in Construction, 16, 525-530. 
Kobayashi, K., and Ohbayashi, M. (1999). “A new indirect encoding method with variable 
length gene code to optimize neural network structures.” Proceedings of the 
International Joint Conference on Neural Networks, IEEE, Piscataway, New Jersey, 6, 
4409–4412. 
Krishnamoorthy, C. S. (2000). “Artificial intelligence and knowledge-based expert systems 
for civil engineering applications.” Indian Concrete Journal, 74(12), 732–738. 
Kumaraswamy, M. M., and Matthews, J. D. (2000). “Improved subcontractor selection 
 88
dynamics and fuzzy logic modelling for construction risk management.” Construction 
Management and Economics, 26(11) 1197-1212. 
Noureldin, A., El-Shafie, A., Reda Taha, M. (2007). “Optimizing neuro-fuzzy modules for 
data fusion of vehicular navigation systems using temporal cross-validation.” 
Engineering Applications of Artificial Intelligence, 20(1) 49-61. 
Ok, S.C. and Sinha, S.K. (2006). “Construction equipment productivity estimation using 
artificial neural network model.” Construction Management and Economics, 24(10) 
1029-1044. 
Papazoglou, M. (2007). Web Services: Principles and Technology. Prentice Hall. 
Rajasekaran, S., and Vijayalakshmi Pai, G. A. (2000). “Simplified fuzzy ARTMAP as 
pattern recognizer.” Journal of Computing in Civil Engineering, ASCE, 14(2), 92–99. 
Rumbaugh, J., Jacobson, I., and Booch, G. (1999). The unified modeling language 
reference manual. Addison-Wesley, Reading, Massachusetts. 
Roh, S.B., Pedrycz, W., Oh, S.K. (2007). “Genetic optimization of fuzzy polynomial neural 
networks.” IEEE Transactions on Industrial Electronics, 54(4) 2219-2238. 
Shelly, G.B., Cashman, T.J., and Rosenblatt, H.J. (2007). Systems Analysis and Design, 
Course Technology. 
Shen, C.C., Cheng, S.H., Hsieh, K.L. (2007). “The application of AI technique for 
cost-benefit analysis.” WSEAS Transactions on Communications, 6(4) 628-635. 
Su, R. (2005). “Global and local consistencies in distributed fault diagnosis for 
discrete-event systems.” IEEE Transactions on Automatic Control, 50(12) 1923-1935. 
Sudjono, E. (2007). Evolutionary Fuzzy Hybrid Neural Network for Decision-Making in 
Construction Management, MS Theisi, Department of Construction Engineering, 
National Taiwan University of Science and Technology. 
Tam, C. M., Leung, W. T., and Liu, D. K. (2002). “Nonlinear models for predicting 
hoisting time of tower cranes.” Journal of Computing in Civil Engineering, ASCE, 
 90
李奇憲，應用基因演算法求解長方體物件堆疊問題” 碩士論文, 私立大葉大學工業工
程與科技管理學系, 民國93年。 
汪書帆，基因演算法於預鑄工廠排程最佳化之研究” 碩士論文，私立大葉大學工業工
程與科技管理學系，民國 94 年。 
段建帆，支援向量機之最佳化參數與屬性篩選之分散式資料探勘系統－以粒子群最佳
化演算法為基礎，碩士論文， 私立華梵大學資訊管理學系，民國94年。 
詹群毅，以網路服務為基礎之點對點運算平台－企業網格計算之實現，碩士倫文，國
立台灣大學資訊管理學系，民國93年。 
 
 92
之一。 
(3) EFNIM II 改良 EFNIM 模式於電腦運算效能與二進位字串編碼過長等缺點。
(4) 本研究開創運用模糊理論、類神經網路、基因演算法與粒子演算法，解決營
建管理問題，提升營建管理之人工智慧技術。 
(5) 模式驗證之問題皆為電腦科學於營建管理領域之創新應用，提供新穎解決問
題之方法。 
(6) 本研究所開發之 EFNIM II 可協助無人工智慧背景之人員解決 ill-structured, 
complex, uncertain, nonlinear, and incomplete 之營建管理問題。 
(7) EFNIM II 可做為開發決策支援系統之核心，提升解決問題之效率。 
 
 
 1
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                 日期： 2011  年 8 月 9 日 
一、參加會議經過 
7月 10 日 搭機出國 
7 月 12 日 參加 IGLC 19：產業日 
7 月 13 日至 7月 15 日 參加 IGLC 19：研討會 
7 月 16 日 參觀當地營建專案 
7 月 17 日 參加(籌辦)IGLC 19：夏令學校 
二、與會心得 
Lean is 0 time, 0 cost, with perfect quality. 
If you are doing something about bakery, you are in the bakery industry. 
If you didn’t define “making-do,” how do you improve it? 
Customers in the construction projects are “clients” or “end-users?” 
Collaboration is important: no one knows as much as everyone. 
Lean construction is composed of organization, commercial, and operating systems. (Will’s view) 
Lean construction is composed of organization, product, and process plus people. (Deen’s view) 
三、考察參觀活動 
PROJECT: Edificio Universidad Pacífico 
計畫編號 NSC 98-2221-E-020-035-MY2 
計畫名稱 演化式模糊類神經推論模式 2.0 於營建管理決策之研究 
出國人員
姓名 柯千禾 
服務機構
及職稱 國立屏東科技大學土木系副教授 
會議時間 2011 年 7 月 12 日至 2011 年 7 月 17 日 會議地點 利馬，祕魯 
會議名稱 
(中文)2011 年(第 19 屆)國際精實營建年會 
(英文)2011 (19th) Annual Conference of the International Group for Lean 
Construction (IGLC) 
發表論文
題目 
(中文) Reducing Precast Fabrication Inventory Framework 
(英文)降低預鑄廠生產存貨 
 1
REDUCING PRECAST FABRICATION 
INVENTORY FRAMEWORK 
Chien-Ho Ko1 
ABSTRACT 
The objective of this study is to develop a framework for precast fabricators to reduce 
the inventory. The framework consists of three components. A time buffer evaluation 
is used to avoid fabricators losing capacity by considering demand variability. The 
second component, due date adjustment, shifts production curve closer to erection 
dates to reduce inventory. The third scheduling component arranges production 
sequences to achieve multi-objectives using genetic algorithms. The developed 
framework could reduce the level of finished goods inventory without changing 
production resources.  
KEY WORDS 
Precast fabrication, demand variability, inventory, scheduling.  
 
INTRODUCTION 
Precast fabricators face numerous challenges as they strive for business success. 
Among them, demand variability is arguably the biggest headache (Ballard and 
Arbulu 2004, Ko and Ballard 2005). One of the ways to protect fabricators against the 
impact of demand variability is to finish products later relative to delivery dates. Thus, 
risks of changes in delivery schedules and manufacturing a product that is either not 
yet needed or falling victim to design changes can be reduced (Ko and Ballard 2004). 
However, how much later relative to the required delivery date fabricators can still 
deliver products on time but reduce the level of finished goods inventory is a question.   
According to the buffering law, systems with variability must be sheltered by 
some combination of inventory, capacity, and time (Hopp and Spearman 2000). The 
root method for solving problems induced by variability is to eliminate it (Khan 2003). 
Precast fabricators thus should constantly endeavor to reduce variability. Meanwhile, 
before variability has been totally removed, proper buffers are necessary to protect 
fabricators from the impact of changeability in demand. To deliver products on time 
(or Just-In-Time), a time buffer with a smaller inventory is needed. Otherwise, precast 
fabricators lose capacity due to overtime vicious cycles induced by variability. 
The objective of this study is to develop a framework for precast fabricators to 
reduce the level of finished good inventory. Fuzzy logic and multi-objective genetic 
algorithm are adapted to achieve this goal. This paper first introduces the process of 
precast fabrication. A production strategy is then proposed to reduce the inventory 
level. To carry out the production strategy, a framework is developed. Three 
                                                          
1 Associate Professor, Department of Civil Engineering, National Pingtung University of Science 
and Technology, 1, Shuefu Rd., Neipu, Pingtung 912, Taiwan, e-mail: fpecount@yahoo.com.tw, 
phone: +886-8-7703202, fax: +886-8-7740122; Research Director, Lean Construction Institute-
Taiwan; Executive Director, Lean Construction Institute-Asia 
 3
Time buffer 
evaluation
Due date 
adjustment
Production 
scheduling
Activity Result
Legend
Method
Time
buffer
Production
curve
Production
sequence
Fuzzy logic Productionstrategy
Multi-objective
GA
Control flow Data flow
 
Figure 2: Framework of reducing inventory 
TIME BUFFER  EVALUATION 
Applying a production strategy that finishes production later relative to the delivery 
date, can ideally reduce the finished goods inventory. Unfortunately, variability such 
as late material supply, lost productivity, unplanned machine down time, and 
variation in setup times (molds) exists everywhere in the precast production system. 
Fabricators may be pushed out of capacity if every element is fabricated just-in-time. 
A proper time buffer between the delivery date and production due date is therefore 
necessary, just-in-case. Demand variability is arguably the biggest headache when 
fabricators strive for business success. To avoid producing products that succumb to 
demand variability, elements should be fabricated later relative to the delivery dates. 
In contrast, for a situation in which the demand variability is relatively less, 
production loading can be mitigated if elements are fabricated relatively earlier. This 
allows fabricators to have more capacity for prior jobs.  
DUE DATE ADJUSTMENT 
A time buffer evaluated in the previous section is regarded as a cushion to avoid 
having the fabricator becoming out of capacity. To support the erection schedule with 
less inventory, production due dates are pulled with the evaluated buffer. The derived 
adjusted production curve thus shifts closer to the erection curve.  
PRODUCTION SCHEDULING 
Once the production due dates have been determined, the next issue is how to finish 
products according to the due dates. This goal cannot be achieved without production 
schedules. Applying computational methods in recast production scheduling evolves 
from computer simulation to genetic algorithms (Dawood 1993, Dawood and Neale, 
1993, Dawood 1996). Previous studies showed that production resources have a 
crucial impact on throughput. In addition, precast production is a flowshop 
sequencing problem that can be solved using computational methods. Genetic 
 5
Dawood, N.N. and Neale, R.H., 1993, Capacity planning model for precast concrete 
building products. Journal of Building and Environment, 28 81-95. 
Dawood, N.N., 1996, A simulation model for eliciting scheduling knowledge: an 
application to the precast manufacturing process. Journal of Advances in 
Engineering Software, 25 215-22. 
Hopp, W.J. and Spearman, M.L., 2000, Factory Physics: Foundations of 
Manufacturing Management. 2nd edition. New York: McGraw-Hill.  
Khan, A., 2003, The role of inventories in the business cycle. IEEE Engineering 
Management Review, 31(4): 39. 
Ko, C.H. and Ballard, G., 2004, Demand variability and fabrication lead time: 
Descriptive research. phase I. Technical Report. University of California at 
Berkeley. Berkeley. CA.  
Ko, C.H. and Ballard, G., 2005, Fabrication lead time and demand variability: An 
empirical study. Proceedings of the Construction Research Congress, American 
Society of Civil Engineers. San Diego. CA: 17-21.  
Leu, S.S. and Hwang, S.T., 2002, GA-based resource-constrained flow-shop 
scheduling model for mixed precast production. Automation in Construction, 11 
439-452. 
Pulat, B.M. and Pulat, P.S., 1992, A decoupling inventory model and an application. 
IEEE Transactions on Engineering Management, 39(1) 73-76. 
Riley, D.R., Diller, B.E., and Kerr, D., 2005, Effects of delivery systems on change 
order size and frequency in mechanical construction. Journal of Construction 
Engineering and Management, 131(9) 953-962. 
Spearman, M.L., 2002, To pull or not to pull. what is the question? Part ii: making 
lean work in your plant. White Paper Series. Factory Physics. Inc.: 1-7. 
Vern, K. and Gunal, A., 1998, Use of simulation for construction elements 
manufacturing. Proceedings of the Winter Simulation Conference, 2 1273-1277. 
98 年度專題研究計畫研究成果彙整表 
計畫主持人：柯千禾 計畫編號：98-2221-E-020-035-MY2 
計畫名稱：演化式模糊類神經推論模式 2.0 於營建管理決策之研究 
量化 
成果項目 
實際已達
成數（被接
受或已發
表） 
預期總達成
數(含實際
已達成數)
本計畫
實際貢
獻百分
比 
單位 
備註（質化說明：如數
個計畫共同成果、成
果列為該期刊之封面
故事...等） 
期刊論文 0 0 100%  
研究報告 /技術報
告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 2 2 100% 
人次 
 
其他成果 
(無法以量化表達之
成果如辦理學術活
動、獲得獎項、重要
國際合作、研究成果
國際影響力及其他
協助產業技術發展
之 具 體 效 益 事 項
等，請以文字敘述填
列。) 
量化成果 
本研究成果共計發表 3篇 SCI 期刊論文，其他研究成果將陸續發表。 
1.Ko, C. H. and Wang, S. F. (2011). ’Precast Production Scheduling Using 
Multi-Objective Genetic Algorithms.’ Expert Systems with Applications, 
38(7) 8293–8302 (EI, SCI).  
2.Ko, C. H. and Wang, S. F. (2010). ’GA-based decision support systems 
for precast production planning.’ Automation in Construction, 19(7) 
907–916 (EI, SCI).  
3.Cheng, M. Y., Tsai, H. C., Ko, C. H., and Chang, W. T. 
(2008). ’Evolutionary Fuzzy Neural Inference System for decision making 
in geotechnical engineering.’ Journal of Computing in Civil Engineering, 
ASCE, 22(4), 272-280 (EI, SCI).  
 
質性成果 
1.本研究為綜合使用模糊理論、類神經網路、基因演算法與粒子演算法之首創研
究之一。 
2.本研究開發之 EFNIM II 為運用粒子演算法尋找類神經網路參數之前導研究之
一。 
3.EFNIM II 改良 EFNIM 模式於電腦運算效能與二進位字串編碼過長等缺點。 
4.本研究開創運用模糊理論、類神經網路、基因演算法與粒子演算法，解決營建
管理問題，提升營建管理之人工智慧技術。 
5.模式驗證之問題皆為電腦科學於營建管理領域之創新應用，提供新穎解決問題
之方法。 
6.本研究所開發之 EFNIM II 可協助無人工智慧背景之人員解決 ill-structured, 
complex, uncertain, nonlinear, and incomplete 之營建管理問題。 
7.EFNIM II 可做為開發決策支援系統之核心，提升解決問題之效率。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
