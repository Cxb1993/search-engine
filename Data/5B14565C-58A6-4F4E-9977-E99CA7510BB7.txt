1 
行政院國家科學委員會專題研究計畫成果報告 
在機器加工限制平行機上總流程時間最小化的問題 
Scheduling parallel machines with machine eligibility restrictions 
 to minimize total completion time 
計 畫 編 號：NSC 97-2221-E-228 -005 
執 行 期 限：97 年 8 月 1 日至 98 年 7 月 31 日 
主 持 人：林建宏  景文科技大學 國際貿易系 
 
一、摘要 
多數的平行機問題的探討，都假設所有的
機器都可以加工每一個工件。然而，在實際情
況中，有時工件僅能被部分機器來加工。這些
問題經常見於製造業與服務業(例如：晶圓測
試、食品加工廠、信用卡公司…等)。本研究
討論一個總流程時最小化的平行機問題，其中
機器與工件分成多種等級，而每一工件只可以
被比自己(工件本身的等級)等級高或同等級
的機器來加工。基於問題本身的加工限制，本
研究發展出一個特定演算法以達到計算時間
的減少。 
關鍵詞：平行機、機器加工限制、總流程時間
最小化 
Abstract 
The parallel machine problem has been 
discussed extensively under the assumption that 
all machines are capable of processing every job. 
However, in some practical situations a job can 
only be processed on a subset of the parallel 
machines. The problem often meets in the actual 
manufacturing environment and service industry 
(e.g. wafer testing, food processing plant and 
credit card company etc.). In the study we 
consider a parallel machine in which machines 
and jobs can be classified into mutiple levels. 
Each job is allowed to be processed on a 
particular machine only when the level of the 
job is no lower than the level of the machine. 
The objective of the problem is to minimize 
flowtime (the sum of job completion times). 
Based on the special structure of the problem, 
we develop a special streamlined algorithm that 
achieves dramatic computational savings. 
Keywords: Parallel machines; Machine eligibility 
restrictions; Flowtime minimization 
二、緣由與目的 
本研究為針對多部平行機具有機器加工
限制(machine eligibility restrictions)的系統，討
論總流程時間(flowtime)最小化的問題。所謂
平行機的環境是指系統中有數部機器可進行
加工，只要工件經過其中一部機器，即完成加
工程序。在平行機的文獻中，有按照機器間加
工速率異同的分類，本研究探討的是等效平行
機 (identical parallel machines)，是指所有機器
有著相同的加工速率，所以工件經過任何一部
機器的加工時間都是相同的。 
在典型平行機問題的探討，都假設每部機
器是可對任何一個工件進行加工，本研究的機
器加工限制是指部份工件僅可被部分特定機
器來加工。令符號 ( )M k 來表示可加工工件 kJ
機器的集合。若機器 ( )aM M k∉ ，則 aM 無法
對工件 kJ 進行加工，此為加工限制。另外，
Pinedo (1995)曾討論一種巢狀(nested)加工限
制的情況：在待加工的工件集合中，任意兩個
工件 iJ 與 jJ ，其加工機器集合分別為 ( )M i 與
( )M j 。若是巢狀加工限制下，則 ( )M i 與 ( )M j
件必定存在的下列四項集合關係的其中一項。 
( ) ( )
( ) ( ) 
M i M j
M i M j
∩ =∅
⊂   
3 
僅可加工等級「低」的工件。 
四、問題說明 
本節將先介紹雙等級加工限制問題與其
演算法，再介紹多等級加工限制問題與演算法
的發展，最後介紹雙類巢狀加工限制問題並提
出演算法。 
雙等級加工限制平行機問題 
有關雙等級加工限制問題的描述如下：有
總數n 個工件，只需經過m 部平行機器中任一
部機器即可完成加工，其中工件與機器都有等
級「高」與等級「低」兩種水準。其中等級「高」
的機器有 Hm 部，可加工所有的工件；而其餘
( )L Hm m m= − 部等級「低」的機器，僅可加工
Ln 個等級「低」的工件。探討準則是總流程
時間最小化，按照排程三欄式的符號標記，此
問題是屬於 / /j jPm M C∑ 的一種。 
而 Liao 等人(2009)針對此問題發展出相
當有效率的最佳解演算法。他們先以 SPT 法
則得到一般平行機問題(沒有考慮加工限制)
的總流程時間最佳解。以此結果排程作為討論
對象，以符號 ( )i Hn 表示所有機器的第 i位置中
等級「高」的工件數。若所有的 ( )i Hn 是小於或
等於等級「高」的機器個數，即 ( )i H Hn m≤ ，
即可得到最佳解。因為在此問題中相同位置的
工件，彼此交換並不會增加整個系統的總流程
時間，所以可將等級「高」工件移動到等級「高」
機器進行加工，以符合加工限制。當 ( )i H Hn m>
的情況發生，則需要調整第 i位置的等級「高」
工件以符合機器加工限制。其調整方式，將多
出的等級「高」工件向左方(前方)或右方(後方)
選擇等級「低」工件交換，使得系統的總流程
時間增加量為最小。其演算法的步驟下： 
步驟 0: 加入適當數量的虛擬工件(加工時間
為零)，使得 /n m 為整數。 
步驟 1: 將所有工件(不管等級)按照 SPT 法則
排序，並依序分派到m 部機器上，得
到一排程 S 與總流程時間T 。先從前
面位置開始檢查是否有違反加工限
制，令 1k = 。 
步驟 2: 若 /k n m> ，則停止演算法，得到最
佳排程 S 以及最佳解T 。 
步驟 3: 若 ( )k H Hn m≤ ，則 1k k= + 並回到步驟
2；否則 i k= 。 
步驟 4: 若 1i = ，則 1k k= + 、 1Lk = ，並增加
m 個虛擬工件到 S 前面，令 Ln n m= +
並到步驟 6。 
步驟 5: 若 1( )i H Hn m− ≥ ，則 1i i= − 並回到步驟
4；否則 1Lk i= − 。 
步驟 6: 令工件集合 A為自欄 Lk 至 1k − 中，各
欄中等級「低」工件具有最大處理時
間的集合。令工件集合B 為自欄 1Lk +
至 k 中，各欄中等級「高」工件具有
最小處理時間的集合。令 AT 與 BT 分別
為 A與 B 中處理時間的總和。在排程
S 中，互換 A與 B 中的工件，可得到
一新排程 LS ，令 ( )L B AT T T T= + − 與
重設 i k= 。 
步驟 7: 若 1 /i n m+ > ，則 RT = ∞並到步驟 10。 
步驟 8: 若 1( )i H Hn m+ ≤ ，則 1i i= + 並回到步驟
7；否則 1Rk i= + 。 
步驟 9: 令工件集合C 為自欄 1k + 至 Rk 中，各
欄中等級「低」工件具有最小處理時
間的集合。令工件集合D為自欄 k 至
1Rk − 中，各欄中等級「高」工件具有
最大處理時間的集合。令 CT 與 DT 分別
為C 與D中處理時間的總和。在排程
S 中，互換C 與D中的工件，可得到
一新排程 RS ，令 ( )R C DT T T T= + − 。 
步驟 10: 若 L RT T≤ ， 則 LS S= 、 LT T= 與
Ln n= ；否則 RS S= 與 RT T= 。回到步
驟 3。 
演算法的複雜度為 ( )( )2 LO m n m× × ，其
中 ( )L Hm m m= − 為等級「低」的機器數。 
而這總流程時間最小化的問題，可用重新
定義工件的處理時間來表示加工限制，並可以
用線性規劃來表示 (Alagöz 與  Azizoğlu ，
2003)。此問題的處理方式是，增加 ( 1)n m× −
個處理時間為零的虛擬工件，形成一指派問
題，並以大家熟知的匈牙利(Hungarian)法來求
解。而 Liao 等人(2009)的演算法，並與匈牙利
法相互比較，計算實驗結果顯示其發展演算法
於計算效能上是優於匈牙利法。 
5 
雙類巢狀加工限制問題 
在前述的內容中，曾說明等級問題為巢狀
加工問題的特例。所以，本研究除了將雙等級
問題延伸至多等級問題外，我們也進一步討論
雙類巢狀加工限制問題。依據 Pinedo (1995)
所提出巢狀加工限制的定義，若兩工件 iJ 與
jJ 的加工機器集合分別為 ( )M i 與 ( )M j ，則
( )M i 與 ( )M j 件必定存在下列其中的一項。 
( ) ( )
( ) ( ) 
( ) ( ) 
( ) ( ) 
M i M j
M i M j
M j M i
M i M j
∩ =∅
⊂
⊂
=
 
所以，前面討論的等級問題是符合上述四
項中的後三項條件。依據上述定義，雙類巢狀
加工問題的可定義如下：系統中有「A」類與
「B」類機器兩類別，而工件則會有「A」類、
「B」類與「C」類三種，其中「A」類工件僅
被「A」類機器加工，而「B」類工件僅被「B」
類機器加工，另有「C」類工件是可被「A」
類與「B」類機器來加工。 
當雙類巢狀加工問題，缺少某些類工件
時，問題就變成雙等級問題。例如：當問題中
僅有「A」類與「C」類工件時，此時就成為
等級「高」的機器與工件(「A」類機器與「A」
類工件)與等級「低」的機器與工件(「B」類
機器與「C」類工件)的雙等級問題。同理，僅
缺少「A」類工件，也是一個雙等級問題。 
經由上述的說明，整個雙類巢狀加工問題
是可以用雙等級問題的演算法來計算的。其演
算法如下： 
步驟 1: 將「A」類的機器與工件視為等級「高」
的機器與工件，其餘類別的機器與工
件視為等級「低」的機器與工件，並
以雙等級問題的演算法進行求解，最
後得到排程 1S 與總流程時間 1T 。 
步驟 2: 針對排程 1S 。將「B」類的機器與工
件視為等級「高」的機器與工件，其
餘類別的機器與工件視為等級「低」
的機器與工件，再以雙等級問題的演
算法進行求解，得到排程 S 與總流程
時間T 。 
每類工件各以一次雙等級問題的演算
法，來移除該類工件的加工限制，所以此演算
法的複雜度為 ( )( )4 LO m n m× × 。 
五、結果與結論 
在計算實驗中，將針對所提出的多等級問
題與雙類巢狀加工問題演算法的計算效能進
行探討。演算法是以 Visual Basic 程式語言撰
寫，實驗環境是在處理器為 Intel Pentium M 
processor 1.60 GHz 與記憶體 512MB 的筆記
型電腦上執行的。而各類工件的加工時間由
(1,500)均勻分佈所產生。 
針對多等級問題，以符號 ( )km 與 ( )kn 表示
等級 k 的機器數與工件數，本研究以
(1) 2m = 、 (2) 2m = 、 (3) 2m = 作為固定機器數，
而工件數 (1)n 、 (2)n 、 (3)n 均分別以 10，50，100
等三種不同的數量，交互產生共有 27 種不同
的題組，每一題組都以 100 題目重複計算，並
記錄整個題組(100 個題目)的計算完成時間總
和，計算結果如表一所示。 
以表一的結果來看，若 (1)n 與 (2)n 維持不
變，當 (3)n 數量的增加時，則計算完成時間呈
反比，是由於等級最低的工件增加，使得一開
始 SPT 法則的分派結果中，需要調整加工限
制的情況減少，使得計算完成時間減少。若 (2)n
與 (3)n 維持不變，當 (1)n 數量的增加時，則計算
完成時間呈正比。是由於等級最高的工件增
加，使得一開始的分派結果，需要調整加工限 
 
 
表一 多等級問題的六機計算結果 
(1) (2) (3)2, 2, 2m m m= = = (1)n    
(2)n  (3)n  10 50 100 
10 10 0.047 0.344 0.719 
 50 0.047 0.156 0.625 
 100 0.016 0.031 0.391 
50 10 0.156 0.297 0.688 
 50 0.063 0.125 0.547 
 100 0.047 0.047 0.281 
100 10 0.313 0.453 0.891 
 50 0.156 0.234 0.391 
 100 0.078 0.063 0.250 
求解 100 題的時間總和(單位：秒)  
