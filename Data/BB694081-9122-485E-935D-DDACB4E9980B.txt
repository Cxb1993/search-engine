2 
中文摘要 : 
本計畫以整合普遍式計算、多模式平台與服務導向架構為研究目標，應用各種不同的現代
資訊技術並採納其它可用的元件與方法來達成整合。此為期二年的國科會計畫內容包含普
遍式計算在多模式平台上的服務導向架構的研究與應用，以及其相關科技的管理議題。本
研究將接續過去的國科會研究計畫“Service oriented computing technology and application 
for tourism industry＂，吸取其經驗及學習歷程並彙整應用至屬於尖端科技的普遍式計算，
使其架構更為完善。此外，本計畫建立了一多模式服務導向架構的範型，研究適當的服務
導向架構與適合的行動設備基礎建設與支援技術。並設計簡單的應用實作來呈現如何以多
模式平台實行普遍式計算。完成應用實作之後，本計畫進而轉向使用者行為的研究來了解
此應用實作所提出的多模普遍式服務導向計算的優缺點。透過對照與分析使用者研究的結
果後將可利用其發現來修改提出更精進的普遍式計算方法與技術，以設計出更完整及成功
的多模式服務導向架構範型。以本計畫相關研究成果所撰寫的論文，已有5篇刊載在EI、
SCI、或SSCI國際期刊中，另有1篇論文刊載於國際專書中。 
 
關鍵詞：普遍式計算、多模式平台、科技化服務與應用、服務導向架構、使用者研究、科
技管理 
 
Abstract: 
Our project aims to work on the integration of pervasive computing, multimodal platform, 
and service oriented architecture (SOA) technologies, by incorporating various contemporary 
information and communication technology (ICT) approaches, as well as adopting other readily 
available components and methodologies. This NSC sponsored two year project deals with the 
research and implementation of a pervasive computing enabled multimodal SOA research and 
applications, together with their corresponding technology management issues. This research 
project continued the efforts of our previous NSC project entitled “Service oriented computing 
technology and application for tourism industry”, by utilizing the lesson and experience learned 
from that project and enhancing it by incorporating the state-of-the-art pervasive computing 
technologies.  
Specifically, this project derived a multimodal SOA paradigm, by investigating appropriate 
SOA together with suitable and desirable infrastructure and technology supports for pervasive 
devices. A sample application for demonstrating how to support pervasive computing through 
multimodal approaches was designed and implemented in this project. Afterwards, a user study 
was conducted to investigate the advantage and disadvantage of the proposed and implemented 
SOA based multimodal approach for supporting pervasive computing. The findings from the user 
study and comparison analysis can be used to refine the proposed approach and technical design 
for increasing the odds of success of our pervasive computing enabled multimodal SOC paradigm. 
Our research results related to this two year research project have generated 5 journal papers 
published in international refereed journals (indexed by EI, SCI, or SSCI). In addition, there is 
also a related article published as an international academic book chapter.  
 
Keywords: Pervasive Computing, Multimodal Platform, e-Services & Applications, Service 
Oriented Architecture, User Study, Technology Management 
 
4 
interfacing with various types of distributed devices such as PC’s, handheld computers, PDA’s, 
WAP-enabled wireless devices, phones, and others (Chang and Minkin, 2006). This architecture 
overcomes the difficulties by singularizing the business and application logic while expanding 
device interfaces (see Figure 1). Under this architecture, since common business and application 
logic is centralized, the maintenance is much easier. The multimodal approach facilitates the 
sharing of the business logic and the back-end processes in a multiple-tiered application 
environment, and frees up the time and resources for concentrating on the design and 
implementation specifics of user interface for each device. However, the corresponding task for 
implementing a multimodal application is not trivial. In this respect, it would be valuable for this 
project to study how a voice-enabled MWS can be implemented with multimodal 
transformations. 
 
 
Figure 1:  The multimodal approach for enhancing the Service Oriented Computing (SOC) 
paradigm 
 
In their influential paper on the challenges associated with nomadic or pervasive computing, 
Lyytinen and Yoo (2002) outlined eight research themes and twenty research questions, covering 
a wide range of topics in the heart land of information systems research. If we are to choose a 
research question posed by them that comes nearest to what we do here, it is their research 
question 1.1, namely: “How do we design and integrate sets of personalized mobile services that 
support users’ task execution in multiple social and physical contexts?” The contribution of our 
research lies in showing how MWS can be designed to provide an interactive voice channel using 
an Apache web server, a voice server, and a Java servlet engine. We also illustrated how 
multimodal user-interface pages for supporting various wireless devices have been implemented 
by using technologies including the eXtensible Markup Language (XML), eXtensible Stylesheet 
6 
Internet. 
∙ to identify the limitations and barriers to the proposed pervasive computing enabled 
multimodal SOC application paradigms.  
 
2.  Multimodal Pervasive System Architecture Design  
A multimodal system can make computer technologies more usable for people by adopting 
multiple communication channels with appropriate devices, such as desktops, laptops, phones, 
PDAs, pocket PCs, and others. Jaimes and Sebe (2007) mentioned that the research of 
multimodal architecture involves at least three aspects: the multimodal system, the user of the 
system, and the interaction between the user and the system. Application systems accessible 
through multimodal interfaces can provide alternative communication methods to end-users in 
different situations and environments, and multimodal systems represent a new direction for 
computing that draws from novel input and output technologies (Cohen and McGee, 2004).  
Among various modalities, the voice channel has been investigated in many prior studies as 
a primary input method (Oviatt, 1999). For example, Yu and Ballard (2004) developed a 
multimodal learning system capable of learning the sound patterns of words and their semantics 
from users’ everyday activities. Trabelsi et al. (2002) designed a multimodal architecture 
combining speech with other input modalities to facilitate the creation of multimodal 
m-commerce systems. Johnston et al. (2002) implemented MATCH (Multimodal Access To City 
Help) with a mobile speech-pen interface to access the restaurant and subway information in New 
York City. Mitchell et al. (2006) described a multimodal architecture utilizing the speech 
interface and a WAP browser to support the Mobile Office applications. Oviatt (1999) conducted 
a survey and found that multimodal system users would issue 80% of their commands through 
only single mode of interface. Indeed, the flexibility of a multimodal application is an advantage 
allowing users to adapt their interactions (by selecting or alternating between communication 
modes) based on user preferences or environmental settings (Johnston et al., 2002; Mitchell et al., 
2006; Jaimes and Sebe, 2007). Therefore, the first stage of this research project focused on using 
the hands-free speech interface for the purpose of shifting away from the conventional 
windows-icons-menus-pointers interfaces and providing users with greater flexibility, naturalness, 
and portability. 
Multimodal application architecture was adopted in this study by utilizing various modes of 
interface to interact with end users. Its back-end servers remain important and intact in this 
approach, and it may adopt new communication channels to facilitate the interactions between 
various types of access devices and back-end servers. Mobile phone was chosen as the pervasive 
device for accessing our multimodal web application prototype, the multimodal web system 
(MWS), through voice user interface technologies. Traditionally, IVR systems are based on 
proprietary hardware and software technologies, with the development and deployment tightly 
integrated on the same hardware platform (Turner, 2004). This has resulted in high development 
costs. Non-portable proprietary software cannot be deployed on different platforms and it is 
inherently difficult to upgrade or modify. A multimodal language is needed to support 
8 
telephones, wired or wireless. When a phone call is made, the voice router will convert the call to 
the Voice over IP (VoIP) and redirect the voice packets to the voice server. When the voice server 
starts, VoiceXML browsers start up and wait for calls. Each browser works for one telephone call. 
The browser gets VoiceXML texts from the web server through the HTTP protocol, and performs 
text-to-speech translations for voice users on telephones. When users dial in the voice system, the 
telephone and media components of the voice server process the calls. We used Java servlets and 
Java Database Connectivity (JDBC) to access and connect to a MySQL relational database. Both 
the MySQL database and the JDBC driver (mysql-connector-java-3.1.1-alpha-bin.jar) that we 
used were available for free download at http://dev.mysql.com. Java servlets were used for 
validating login, constructing user request, processing the request, and generating XML output. 
Afterwards, we use XSLT to convert XML documents into HTML, VoiceXML, and Wireless 
Markup Language (WML) formats to suit different devices. XSLT can be integrated into web 
application architecture and used to perform additional tasks within an application that uses XML 
as its data representation model. Specifically, XSLT together with Java can transform server-side 
data into various formats to fit different modes of client-side interface (Burke, 2001). 
 
3.  J2EE implementation of multimodal transformation 
In addition to the PC based web browser interface and the speech based voice user interface, we 
also enhanced our MWS system to work with other wireless devices including PDA, BlackBerry, 
and Pocket PC. In this section, we describe how MWS was implemented to transform XML 
documents into various formats (HTML, VoiceXML, and WML) depending on the device type. 
Figure 3 shows the logical model of this multimodal transformation process, which was done 
using the J2EE Servlet Filter model and Java Server Pages (JSP) technology. To achieve the goal 
of object-oriented programming, we designed this logical model using the 
Model-View-Controller (MVC) framework (Krasner and Pope, 1988) and the Design Patterns 
(Gamma et al., 1995). Servlet Filter can be invoked before or after the invocation of a particular 
servlet or JSP, based on the incoming URL mapping specified as the central controller servlet in a 
Struts framework. When a request comes from the client (Browser, PDA, Phone, etc.), the 
controller servlet gets invoked, and then the controller invokes an appropriate action based on the 
mapping of the submitted URL, as defined in the Struts configuration file (i.e., struts-config.xml). 
Inside the action, the specified web controller logic (such as the parsing of parameters) is 
processed, and then a corresponding business logic bean (such as an Enterprise Java Bean) is 
invoked, which can communicate to the database server and perform necessary database 
operations in the appropriate transactional scope. A response from the business bean then is 
encapsulated in the action response and a proper JSP is invoked. 
The JSP would be coded for supporting the XML format. References to proper XSLT 
stylesheets would be dynamically generated based on the Multiple-purpose Internet Mail 
Extension (MIME) type of the incoming requests. After a servlet/JSP process is completed, the 
Servlet Filter based XSLT transformation can be applied to modify the servlet/JSP response. Such 
modification would encompass the application of an appropriate XSLT stylesheet (as defined 
10 
  new ByteArrayOutputStream( ); 
trans.transform(xmlSource, new StreamResult(resultBuf)); 
 
res.setContentLength(resultBuf.size( )); 
res.setContentType(request.getHeader(“user-agent”)); 
res.getOutputStream().write(resultBuf.toByteArray( )); 
res.flushBuffer(); 
 
 In this code fragment, several JAXP classes are used. First, the TransformerFactory class 
follows the factory design pattern to generate a new instance of XSLT transformer. The XSLT file 
name would be supplied as a parameter, while the original XML source would come from the JSP 
response. The ByteArrayOutputStream class would be utilized to write the transformer output 
temporarily and the content length, content type, and content itself would be set using the results. 
Note that the content type is obtained using the “user-agent” header, which is a standard header 
for the HTTP 1.0 protocol and above. 
 The advantages of this approach include the ability to better separate the model, view and 
controller in the application (Krasner and Pope, 1988). This model introduces an additional view 
tier (XSLT stylesheet) which is completely separate from any Java or logical processing, and 
encourages developers to use optimal design strategies and not to mix the Java code with the view. 
This model also introduces the flexibility of device-independent JSP. Simply speaking, it contains 
just XML data which can be converted into any appropriate view for each type of device, thus 
supporting various formats including HTML, VoiceXML, and WML. 
 
4.  Service Oriented Architecture Design  
Service oriented architecture (SOA) provides a way to integrate and use various types of 
distributed, loosely coupled, and discovery based services to construct a new service in a network 
environment. In SOA, a service is not just a computer program, but a clearly defined independent 
business operation that can be combined and reused to compose more complex services. SOA can 
coordinate in information technology environment to reuse resources and make computer systems 
more stable, thus saving resources, decreasing development costs, and improving business 
process (Uleman, 2006; Brenner and Unmehopa, 2007). Being offered through publicly defined 
standards and communication protocols, each SOA service can work independently with its own 
operating system, programming language, and hardware platform (Walker, 2007). In this project, 
Web services technology was used to implement SOA mainly because Web services provide the 
basis for the development and execution of business processes that are distributed over the 
network and available via standard interfaces and protocols (Huhns and Singh, 2005). As shown 
in Figure 1, there are three functionally classified roles in SOA, including "Service Requester", 
"Service Provider", and "Service Broker" (Brenner and Unmehopa, 2007).  
 
12 
 
Figure 5:  System architecture and component diagram 
 
This prototype consists of 5 major components described delow:  
 
1. the service broker server (SBS) which contains a UDDI based service database and a Web 
services handler for providing a connection between service requesters and service providers, 
2. the content server (CS) which is a service provider generating data and publishing content 
information to SBS in WSDL format, 
3. the content service server (CSS) which contains a content database for generating application 
content locally. For the information unavailable locally, the information can be acquired by 
CSS from other content providers through the joint efforts of SBS, CS, and other CSS, 
4. the user client (UC) which is a PC or device that contains a feed reader for subscribing to the 
e-catalogue service,  
5. the content provider client (CPC) which enables the content provider to remotely manage 
catalogue content. 
 
This content service prototype was developed by adopting SOA, Web application paradigm, 
and other information and communication technologies including object-oriented design and 
pervasive computing. In addition to the required logic for user registration, authentication and 
entitlement, the desired content service was built on the aforementioned pervasive computing 
enabled multimodal SOA approach for providing various supporting functions and operations 
through various modules, including the content creation and management module, HTTP 
communication module, Web services interaction module, personalization and customization 
module, user/group management module, reporting module, security management module, 
notification and confirmation module, and software download and installation module. The 
14 
To support various types of pervasive devices in a conventional way, multiple applications 
have to be independently developed with each to satisfy one type of device. This practice will 
exponentially increase the cost and complexity of a service when new devices or changes are 
introduced. To overcome this issue, we have implemented an approach which enables a 
multimodal application to simultaneously interface with various types of devices (including PC’s, 
PDA’s, mobile phones, etc.) by singularizing the business and application logic while expanding 
the device interfaces. Since the common business and application logic is centralized in this 
approach, the maintenance of one multimodal application is easier and more cost-effective than 
the maintenance of multiple unimodal applications. In addition to this technical advantage, 
MWS-based systems may also broaden the spectrum of users to the general population as 
suggested by Trabelsi et al. (2002). 
Nowadays, mobile and wireless technologies are becoming increasingly prevalent, and there 
is a growing demand for technologies that will allow users to connect to the Internet from 
anywhere through appropriate access devices. In the near future, human-computer voice 
interfaces will become important tools for solving the accessibility limitations of conventional 
human-computer interfaces (Feng et al., 2006). Our project shows that a multimodal web system 
may support the voice channel via mobile phones. This approach may solve the accessibility 
limitations of conventional interfaces and offer the attractive benefits of pervasive computing. 
Despite less information available through the voice channel, there are still opportunities to 
supplement the Internet channel with the voice channel, particularly in situations including in an 
on-the-go situation or in outdoors environment (Johnston et al., 2002; Mitchell et al., 2006; 
Jaimes and Sebe, 2007). Therefore, we suggest MWS could be initially used in such situations to 
increase the odds of success. Maybe there would be different, extracted, and important attributes 
influencing the perception and acceptance of the system. For example, it is inappropriate for tasks 
requiring privacy and inappropriate for tasks containing ambiguous words. Future studies may 
investigate individual difference traits to identify more information about users’ attitudes and 
their acceptance of MWS from different groups of users and under various task/usage scenarios. 
This study proposed a pervasive computing enabled multimodal SOA platform for taking 
advantage of the unique strength of multimodal SOC technologies to overcome the limitations of 
traditional communication channels and to enhance the effectiveness and efficiency of traditional 
business applications. Our study focused on two main concepts, multimodal services interface 
and service oriented architecture. Based on pervasive computing enabled multimodal SOA 
platform, sample services system prototypes were designed and implemented to enhance the 
effectiveness and efficiency of business functions.  
Our research contributes to a better understanding of designing multimodal web systems in 
the pervasive computing environment. Pervasive computing is a new technological arena with 
many exciting technologies and vast application potentials. Research into the design and 
implementation of a useable multimodal web system is likely not only to widen the scope of its 
practical application but to contribute to developing a design theory for supporting pervasive 
computing through various pervasive devices. More experiments will be designed and performed 
in our future research to get study results on different handheld devices, for a more 
16 
accessing web applications via voice cellular phone: a model comparison approach," 
Behaviour & Information Technology, Vol. 28, No. 5, pp. 471-484. 
[NSC-96-2221-E-005-088-MY2] [SSCI] [SCI] 
 
In addition to the aforementioned academic papers, Prof. Chang’s research efforts related to 
this NSC sponsored project also generated two invention patent applications. Actually, these two 
patent applications were derived from our research efforts for the purpose of providing valuable 
and desirable information system services. Theses two patent applications have been filed with 
Taiwan Intellectual Property Office in November 2007 and January 2008 respectively, and they 
are briefed below: 
 
[1] “System and method for interactive data backup”,  R.O.C. Patent Application, 
Application Date: Nov-12-2007, Case Number: 96142686. [互動式資料之備份系統及
其方法。 中華民國專利, 申請日期: 2007/11/12, 申請案號: 96142686。] 
[2] “Dynamic data backup mechanism based on backward web feeds”,  R.O.C. Patent 
Application, Application Date: Jan-18-2008, Case Number: 97102046. [逆轉式資料動
態備份裝置。 中華民國專利, 申請日期: 2008/01/18, 申請案號: 97102046。] 
 
Based on the fact that several academic papers related to our current NSC research project 
have been accepted for publication and two invention patent applications have been filed with 
Taiwan Intellectual Property Office, we are therefore assured that our research accomplishment 
meets the original goal of designing a pervasive computing enabled multimodal application 
paradigm. Recently, we have started the effort to design and implement feasible system 
architecture for expanding our pervasive multimodal application paradigm into a service oriented 
computing (SOC) environment. This effort will be continued throughout the second year of our 
research project. As soon as we complete this needed multimodal SOC paradigm, we will begin 
developing at least a couple of sample applications. Afterwards, the developed applications can 
be used to conduct the evaluation of the impacts of the SOC technology on consumers’ attitudes 
as well as users’ acceptance of pervasive computing enabled multimodal SOC applications. The 
expected research results derived from this on-going research may be referenced for the purpose 
of the design and development of successful business applications to catch the revolutionary 
opportunity and benefit of the pervasive computing enabled multimodal SOC paradigm. The last 
but not the least, it is expected that our research team will continue our research efforts and 
generate valuable research achievements via publishing more academic papers and/or applying 
for some more invention patents. 
 
7. References 
Anerousis, N. and Panagos, E. (2002) ‘Making voice knowledge pervasive’, IEEE Pervasive 
Computing, Vol. 1, No. 2, pp. 42-48. 
Brenner, M.R. and Unmehopa, M.R. (2007) ‘Service-oriented architecture and Web Services 
18 
Larman, C. (2002). Applying UML and Patterns—an Introduction to Object-Oriented Analysis 
and Design and the Unified Process. New Jersey: Prentice-Hall. 
Larson, J.A. (2003) ‘VoiceXML and the W3C speech interface framework’, IEEE Multimedia, 
Vol. 10, No. 4, pp. 91-93. 
Luttenberger, N., Reuter, F. and Koberstein, J. (2004) ‘XML language binding support for 
pervasive communication in distributed virtual shared information spaces’, Proceedings of 
Second IEEE Annual Conference on Pervasive Computing and Communications Workshops, 
pp. 181-186, Orlando, Florida. 
Lyytinen, K. and Yoo, Y. (2002) ‘The next wave of nomadic computing’, Information Systems 
Research, Vol. 13, No. 4, pp. 377-388. 
Mitchell, S., Pavlovski, C.J., Smith, B., Stavropoulos, H. and Wood, D. (2006) ‘Multimodal 
natural language platform supporting cellular phones’, Mobile Computing and 
Communications Review, Vol. 10, No. 3, pp. 34-45. 
National Communications Commission (2008) Telcom Services Subscribers per 100 Inhabitants, 
Telcom Figures in 2008. Taiwan: National Communications Commission. (Retrieved October 
2, 2009) http://www.ncc.gov.tw/english/files/09041/220_429_090416_1.ppt#756,6,Telecom 
Services Subscribers per 100 inhabitants  
Newcomer, E. and Lomow, G. (2004) Understanding SOA with Web Services (Independent 
Technology Guides). Addison-Wesley Professional, Boston. 
Oviatt, S.L. (1999) ‘Ten myths of multimodal interaction’, Communication of the ACM, Vol. 42, 
No. 11, pp, 74-81. 
Rebman, C.M., Aiken, M.W. and Cegielski, C.G. (2003) ‘Speech recognition in the 
human-computer interface’, Information & Management, Vol. 40, No. 6, pp. 509-519. 
Roussos, G., Marsh, A.J. and Maglavera, S. (2005) ‘Enabling pervasive computing with smart 
phones’, IEEE Pervasive Computing, Vol. 4, No. 2, pp. 20-27. 
Sun Microsystems (2004) Online information on Java 2 Platform, Standard Edition (J2SE), and 
Java 2 Platform, Enterprise Edition (J2EE). (Retrieved September 2, 2005) 
http://java.sun.com/j2se and http://java.sun.com/j2ee/releases/  
Trabelsi, Z., Cha, S.-H., Desai, D. and Tappert, C. (2002) ‘A voice and ink XML multimodal 
architecture for mobile e-Commerce systems’, Proceedings of the 2nd international workshop 
on Mobile commerce, Atlanta, USA, pp. 100-104. 
Turner, K. J. (2004) ‘Analysing interactive voice services’, Computer Networks, Vol. 45, No. 5, 
pp. 665-685. 
Uleman, R. (2006) ‘Service oriented architecture unveiled’, Geospatial Solutions, Vol. 16, No. 6, 
pp. 30-33. 
Walker, L. (2007) ‘IBM business transformation enabled by service-oriented architecture’, IBM 
Systems Journal, Vol. 46, No. 4, pp. 651-667. 
Yu, C. and Ballard, D.H. (2004) ‘A multimodal learning interface for grounding spoken language 
in sensory perceptions’, ACM Transactions on Applied Perceptions, Vol. 1, No. 1, pp. 57-80. 
Zhai, S., Kristensson, P.-O. and Smith, B.A. (2005) ‘In search of effective text input interfaces for 
off the desktop computing’, Interacting with Computers, Vol. 17, No, 3, pp. 229–250. 
20 
可供推廣之研發成果資料表 
■ 可申請專利  □ 可技術移轉                                   日期：2009 年 10 月 22 日 
國科會補助計畫 
計畫名稱：具『普遍式計算』功能之『多模式』服務導向計算範型
計畫主持人： 張樹之   
計畫編號：    NSC96-2221-E-005-088-MY2          
學門領域：    WEB 技術 (資訊工程二) 
技術/創作名稱 逆轉式資料動態備份裝置 [已申請中華民國專利, 申請日期: 2008/01/18, 申請案號: 97102046] 
發明人/創作人 張樹之、張譽騰 
中文：本發明涉及一種逆轉式資料動態備份裝置，特別係指一種安全性高、且
可即時備份的逆轉式 WFB【Web-feed-based】資料動態備份裝置，該資料動態備
份裝置包含有一服務提供端網路暨電腦系統及至少一使用者端網路暨電腦系統
所組成，透過逆轉 Web Feed 架構，當使用者欲備份資料時，將先上本系統之服
務提供端，設定服務提供端系統使其完成訂閱使用者端之 Web Feed，隨即完成
定時/期備份之 Web Feed 設定，稱本發明之逆轉式 WFB 基礎架構【Backward 
Web-feed-based Framework】，爾後，服務提供端將依個人化/客製化使用設定，只
要 Web Feed 設定之指定位址/路徑/目錄/資料夾內的檔案有所異動，將自動把該
位址/路徑/目錄/資料夾內的檔案經特殊加密上傳備份且儲存於服務提供端。透過
此一設計，使得服務提供端網路暨電腦系統將即時、隨時、長期且安全地儲存
此備份資料，解決了使用者因忘記備份、沒有經常備份、不當使用、電腦中毒
而造成重要資料遺失、損毀、或是中毒的風險與遺憾，強化知識經濟的產出。技術說明 
英文：This invention provides a new method and system to conduct data backup in a regular 
and personalized/customized way. It can be used to substitute for the traditional methods on 
personal data backup. This creative method uses backward web-feed based framework, 
algorithm, and backup process to conduct data backup. When users (e.g., students, 
intellectuals, or researchers) conduct data backup, the present system will regularly and 
automatically compare the files within a particular folder (i.e., a preset backward RSS-feed
path) and then upload the backup files and save them to our remote secure database. The 
present system also provides a user-friendly and real-time backup retrieve mechanism. Thus, 
the present invention implicitly and explicitly provides backup function that can not only save 
user’s incomplete data (due to irregular backup, inappropriate uses, & virus infected, etc.), but 
also enhance the user’s knowledge output (extremely important in the knowledge-economics 
era). Moreover, it can be combined with the Web-service systems of e-commerce to 
dramatically improve the quality for digital-data management. 
可利用之產業 
及 
可開發之產品 
本專利具市場性、創新性、實用性與研究性，且其應用如上所示，本專利將在上述所有
產業中，提供使用者重要資料的維護性、保存性、安全性、與管理性，改善個人重要資
料使用經驗，同時強化知識經濟產出；且此專利的應用，具足市場開發潛力，小型如數
位內容/線上出版/教育產業、中型如多媒體/交通/旅遊產業、大型如全球 3C/手機/PDA/電
腦暨電子商務產業的採用，都能以本專利獲得可觀的知識資本與獲利。 
技術特點 
因應知識經濟的大量數位資料與多媒體檔案(有研究指出，關於個人的資料，必
須要有 7 個以上的備份)，個人必須特別著重個人資料的保護、儲存與備份。因
此，本發明之特點為，逆轉 RSS 架構，以個人化/客製化(personalized/customized)
為基礎，在特殊檔案與路徑比對規則以及備份流程下，提供一大眾普及之個人
化/客製化 資料備份系統(backup system)服務，尤其能夠協助高級知識份子隨時
隨地備份重要資料，減少檔案遺失、損毀、或是中毒的風險與遺憾，強化知識
經濟的產出，為一種新創之電子商務環境下，個人化的資料備份系統及方法。
推廣及運用的價值 
本專利技術功能緊緊與市場需求的產品相結合，具高度市場確定性，且具商業
化的具體途徑，為電子商務(e-commerce)相關產業、數位內容(Digital Content)暨多
媒體產業、電腦科技產業、電子產業應用、電腦/線上出版產業、教育產業、旅
遊服務應用暨通訊產業、交通運輸暨物流(Logistics)產業、其他產業用途所需之
電腦科技暨多媒體技術應用，並結合網路服務導向(Web Service-oriented)與普遍式
計算(Pervasive Computing)，以數位生活(Digital Life)為概念，數位內容(Digital 
Content)為基礎，可望全面提升數位資料(Digital Data)之管理品質，同時也可應用
於電子商務平台(Service Network Platforms)、影音檔案儲存、電腦科技、系統備份
等等，以改善使用者日常資料儲存、維護與使用經驗，同時兼具強化高級知識
份子知識經濟產出之功效。 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位研發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
附件二 
表 Y04 
International Conference on Complex, Intelligent and Software Intensive Systems)會議摘要
(Program Guide)乙冊及該研討會論文集光碟(CD-ROM) 乙片。論文集內含所有與會報告之
學術研討論文全文，而本人此次參與國際會議論文宣讀發表之論文亦登載於此 IEEE 
Computer Society 出版之論文集中。其相關出版資料如下: 
 
• Shuchih Ernest Chang (2009), "An innovative internet service for backing up data on 
personal computer and mobile devices," Proceedings of 2009 International Conference on 
Complex, Intelligent and Software Intensive Systems (CISIS 2009), pp. 531-536, March 
16-19, 2009, Fukuoka, Japan. [EI]  
六、附件 (宣讀發表之論文全文) 
 
podcast subscribers choose among available feed 
channels [5]. A podcast is a web feed of files placed on 
the Internet for interested users’ subscriptions, and 
podcasters’ websites provide both the direct download of 
their files and the subscription feed of automatically 
delivered content. Such direct and automatic content 
delivery is what distinguishes a podcast from a simple 
download or real-time streaming. Indeed, podcast can be 
viewed as a convergence of broadcast and Internet 
service, and serves as yet another exemplary case of the 
pervasive computing technology [6]. Although most 
podcast audiences may not wish to become podcast 
technology experts, they would inevitably be influenced 
by the potential benefits of using podcast technology for 
enhancing the quality of their digital lifestyle. Thus, it 
would be quite interesting to describe how podcast 
technology can support the proposed Backward Web-feed 
Based Framework (BWBF), and illustrate via a practical 
implementation that the innovative BWBF system can 
facilitate the automatic and asynchronous off-site backup 
services in a cost-effective and easy-to-operate way. 
 
2. Research background 
2.1. Data backup processes 
 
“Whatever can go wrong, will go wrong,” states 
Murphy’s law. Disaster recovery (DR) service is a must 
for all organizations and individuals to achieve the goal of 
minimizing the data-loss caused by various incidents. As 
pointed out by prior research, every DR solution involves 
a set of fundamental underpinning processes including: 
(1) data backup, (2) off-site replica generation, (3) data 
migration across storage pools, (4) expiration of backed-
up data, and (5) reclamation [2].  
For creating a backup copy of a client data into the 
storage repository, the administrator, who would be a 
home computer user in our case, has to decide the 
location of the backed-up data, and then a replica of the 
data can be created in a medium on-site or off-site. In 
general, the off-site approach is usually preferred since it 
provides an additional level of security. For performance 
reason, the off-site backup medium is usually a hard disk 
or disk array. Later on, the data on the disk can be 
migrated into a relatively slower medium such as a 
backup tape for cost efficiency. Sooner or later, a 
particular backed-up file may expire because too many 
new versions of the file are created and some old versions 
of the file would become useless. Finally, the expired 
files would be deleted and the original medium space 
occupied by the deleted file can be reclaimed and reused 
for storing other backed-up data.  
In general, the front-end processes of the data backup 
and recovery schemes would have to get the clients (i.e. 
home computer users) involved, while other back-end 
processes (including off-site replica generation, data 
migration, data expiration, and media reclamation) could 
be handled by technically competent persons or 
operations staffs in charge of managing the off-site 
servers. This study proposed a novel approach to deal 
with the backup services by adopting the web application 
paradigm, which consists of a web-based front-end and a 
web-enabled service back-end. The web-based front-end 
should be easy to use and offer some relative advantages 
over existing technologies, while the back-end processes 
should be transparent to home computer users. The web-
enabled backup services would become implementation 
independent as long as it follows well defined and 
acceptable open standards such as the Web Services and 
other applicable information technologies.  
As a matter of fact, this study adopted a web-based 
and service-oriented architecture which might utilize 
various modes of interface to interact with end users. In 
this web-based application architecture, the back-end 
servers remain important and intact, and the front-end 
may adopt new communication channels to facilitate the 
interactions between the access devices and the back-end 
servers. This study would focus on the front-end of the 
off-site backup service, for achieving the goals of user-
centric design.  
 
Table 1. The  estimated per-gigabyte costs for  
building a high capacity (terabyte) backup server 
(Source: Linux Journal [7]) 
 
 
2.2. Cost effective off-site backup 
 
High-capacity storage media (such as hard disk 
drives, flash memory sticks, and DVDs) have been widely 
used in our daily life, and their prices are becoming more 
and more affordable during the past few years. It was 
reported that a backup system with high (terabyte) storage 
capacity had become an affordable option for home PCs 
and consumer-level computers [7]. As shown in Table 1, 
a new server equipped with about two terabytes of 
backup/storage space can be built for less than $1.50 per 
gigabyte (GB). Nowadays, we can expect that the costs 
Type Configuration Capacity (TB) 
Cost per 
GB ($) 
ATA/SATA Disk Internal disk 0.4 0.56 
Linux Desktop* Three internal disks 1.2 0.84 
Linux Desktop* Three internal disks plus two USB external 2.0 0.73 
LaCie 2TB 
Storage 
Network server 
appliance 2.0 1.15 
Linux Server** Six internal disks 2.4 1.21 
Linux Server** Six internal plus two USB external 3.2 1.08 
*Intel Celeron D 478 325 2.53GHz, 256MB of RAM.  
**Intel SC5275 chassis, Intel ATX Motherboard, dual-3GHz 
Xeon CPUs, 2GB of RAM. 
532
advantage of the potential business and technical benefits 
of podcast, RSS, and the web application paradigm.  
The conceptual model was proposed to illustrate the 
specialized web-feed-based delivery channel, capture the 
concept of specialization of podcast content, emphasize 
the identified podcast perspectives for various application 
domains, and take advantage of the benefit of podcast-
enabled audience segmentation by conducting targeted 
communication activities. Indeed, this proposed model 
stresses the following characteristics: 
 
y Audiences can interact with the medium 
y Firms (i.e. services providers) and audiences (i.e. 
clients) can interact in a way that is actually a radical 
departure from traditional communication 
environment 
y Firms can provide specialized contents to the medium 
and interact with each target group 
 
Since podcast is by itself very selective in a sense that 
it allows service providers to target the right segment of 
potential clients, the production process of podcast 
service could customize the services to suit various client 
segments. The core concept of this model is to produce 
specific content customized for each determined target 
groups, and to achieve the goal of offering the 
opportunity to respond to the needs of each client 
segment properly. It is also possible to make different 
brand image and offer the desirable service specialized or 
customized for each client segment. However, adopters of 
this conceptual model must account for the fact that 
podcast audiences may not only actively choose whether 
or not to approach the firm’s websites [11], but exercise 
unprecedented control over the management of the 
services they interact with, i.e., decide whether or not to 
subscribe to any particular service. 
 
 
Figure 2. The conceptual model for pulling the 
backup content (where P1, P2, ... and Pn 
represent the delivery of Backup_1, Backup_2, 
and Backup_n respectively.) 
 
Through the interviews conducted in our prior study, 
an important communication characteristic about two-
way interaction was identified as a highly desirable 
feature [12]. Thus, in addition to the traditional 
podcasting delivery channel, which is typically from the 
podcast server to multiple clients/audiences, an opposite 
delivery channel (from BFBW clients to the backup 
server) is also established in the BWBF framework for 
the purpose of pulling backup contents (files) from client 
machines to the remote backup server. Figure 2 shows the 
conceptual model proposed by this study to achieve the 
desired backward web-feed-based delivery of digital data. 
 
3.2. The front-end of the off-site backup service 
 
It is important to realize that this proposed conceptual 
model has to be adapted or modified to fit the particular 
needs and the specific requirements for each targeted 
domain specific application. The application domain of 
this study is in the context of off-site backup services as 
described in the previous sections. For this particular 
application domain, BWBF was developed by utilizing 
the conceptual models (see Figure 1 and Figure 2) to 
facilitate the design and implementation of web-feed-
based remote/off-site backup service architecture. Figure 
3 illustrates how an individual (e.g. a home computer 
user) can interact (via BWBF) with the off-site backup 
service to safe-keep his/her important files. 
 
 
Figure 3. An example of how home computer users 
interact with the BWBF-based backup service. 
 
As mentioned earlier, an off-site backup service 
consists of both the front-end processes (including the 
data backup process and the data recovery process) and 
the back-end processes (including off-site replica 
generation, data migration, data expiration, and media 
reclamation). The back-end processes of the proposed 
BWBF-based backup services can be implemented by any 
existing and feasible back-end approaches or algorithms, 
such as those described in [3, 13]. Actually, they remain 
intact and can be actually implementation independent as 
long as it follows well defined and acceptable open 
standards such as the Web Services or other similar 
popular Internet technologies. This study focuses on the 
front-end processes including primarily the use case 
scenarios related to client-server interaction during data 
backup process and the data recovery process, in which 
the clients (home computer users) are involved.  
 
3.3. The implemented BWBF backup service 
 
P2 (Pull) 
Backup_1 
Backup_2 
Backup_n 
Off-site 
Backup 
Server 
Client 1 
… …Client 2 
Client n 
Medium 
(RSS Feed) 
Medium 
(RSS Feed) 
Medium 
(RSS Feed) 
P1 (Pull) 
Pn (Pull) 
…
534
