 2
雜度(Code Complexity)分析[1,2,3]，學習式
評量標準（Learning-based Metrics）分析
[4,5,6]，或是軟體修改日誌（Change Log）
分析[7,8,9]等方法來預測軟體的錯誤位
置，但是這些方法若不是其預測效能差強
人意，要不其過程要先經過長時間的軟體
分析，對專案管理者而言仍有其時間限制
的壓力。在這些過往文獻分析中，我們也
發現，傳統的研究很少涉獵到以軟體使用
者回報的錯誤報告為分析內容，因此我們
基於過往在機器學習（machine learning），
文字探勘（ text mining）及資訊擷取
（information retrieval）研究上所獲得的寶
貴經驗，以內容分析相關的理論及技術來
探討軟體錯誤位置預測的效能改進。 
在本計畫中，我們利用資訊擷取與機
器學習之理論與技術對錯誤報告萃取重要
資訊，來改進軟體錯誤預測的效能，建構
一個智慧型錯誤預測與錯誤定位機制，以
提升軟體錯誤預測的準確率。並針對實際
的軟體專案進行測試，以實驗本機制的有
效性。 
 
三、結果與討論 
 
在本計畫中，我們觀察軟體專案中的
錯誤報告，發現在已修正的錯誤報告中，
存在著共現位置（Co-location）的特性。
也就是如果某些錯誤報告具有語意上的相
似度（Semantic similarity），那麼這些錯誤
報 告 所 對 應 到 的 錯 誤 修 正 位 置
（Fault-prone location）會出現叢聚性，形
成的叢聚我們稱之為 FP-corelated 叢聚。
例如圖一當中的情況，錯誤報告#618 與
#764，而#764 與#2173 彼此之間存有語意
上的相似關係。因此他們分別對於 entries 
模組以及 status 模組形成兩個 FP-corelated
叢聚。因此我們的設計概念如下：當有新
的錯誤報告 BRx 進來的時候，我們將 BRx
與不同的 FP-corelated clusters 進行語意相
似度的辨別，然後按照相似的情況來進行
排序。利用 FP-corelated 叢聚的特性，最
後得出可能需要除錯的程式碼位置。 
而在我們實驗過程當中同時發現，由
於錯誤報告彼此之間的關鍵語意有時候並
不容易區別，因此為了加強 FP-corelated
叢聚分類器的鑑別度，我們再設計一個共
現叢集內縮（co-location shrinkage）機制，
將叢集特徵資訊加強。此叢集內縮機制之
演算法如圖二所示。其中，L 用來表示共
同引用的模組位置名稱，也代表其
co-location 的叢集，b 則是在該叢集中的錯
誤報告特徵向量，c 是該叢集中所有錯誤
報告，經過以特徵向量方式表示以後所算
出來的質心（centroid），而 b’則是經過內
縮以後的新的錯誤報告特徵向量。 
 
經由以上的處理，最後再經由 SVM
（Support Vector Machine）的分類器，經
過學習以後，我們即用來辨識新進的錯誤
報告。因此，整個處理流程共分成下面三
個步驟：（1）將歷史錯誤報告進行 NLP 的
前置處理，取出他們的特徵值成為特徵向
量，（2）將有共現位置特性的歷史錯誤報
告向量建構相對應的 FP-corelated 叢集，
（3）進行 SVM 分類器學習，並對新進的
錯誤報告進行分析。 
針對以上的機制，我們分別以三個實
圖一、對於具有共現特性的錯誤報告進行
FP-corelated 叢集，並進行叢集內縮。 
圖二、Co-location shrinkage (CLS)演算法。 
 4
刊上[11]，而我們目前正進一步探討相關
的議題。 
本研究計畫也帶動本實驗室內相關的
碩博士論文研究，目前針對一些衍生的議
題，我們正持續進行研究當中。因著計畫
的進行，我們也有其他相關研究的發表
[12]。 
總體而言，本研究成果在學術成就上
的貢獻為提升軟體錯誤報告可能修改程式
碼目標之預測效能。在技術創新上，本研
究成果主要是採用了進一步的智慧型探勘
技術，透過實驗中對實際軟體專案的實證
來以驗證了其有效性。其影響性乃在於對
軟體品質維護工作上，可協助軟體工程師
儘速找出需要修改之程式碼。目前的成果
雖然在實際應用上還有許多未盡成熟的地
方，但這個議題目前受到歐美不少軟體工
程界的人士探討，未來仍有進一步發展的
潛力。 
 
五、參考文獻 
[1]  23. T. M. Khoshgoftaar and J. C. Munson. 
“Predicting Software Development Errors 
Using Software Complexity Metrics.” IEEE 
Journal on Selected Areas in 
Communications, Vol. 8, No. 2, pp. 
253–261, 1990. 
[2]  40. R. Subramanyam and M. S. Krishnan. 
“Empirical Analysis of CK Metrics for 
Object-oriented Design Complexity: 
Implications for Software Defects.” IEEE 
Trans. on Software Eng., Vol. 29, No. 4, pp. 
297–310, 2003. 
[3]  49. T. Zimmermann and N. Nagappan. 
“Predicting Subsystem Defects Using 
Dependency Graph Complexities.” In Proc. 
of the 18th IEEE Int’l Symp. on Software 
Reliability Eng. (ISSRE 2007), pp. 227–236, 
2007. 
[4]  28. O. Mizuno and T. Kikuno. 
“Prediction of Fault-Prone Software 
Modules Using Generic Text 
Discriminator.” IEICE Trans. on 
Information and Systems, Vol. E91-D, No. 4, 
pp. 888–896, 2008. 
[5]  31. S. Neuhaus, T. Zimmermann, C. 
Holler, and A. Zeller. “Predicting 
Vulnerable Software Components.” In Proc. 
of the 14th ACM Conf. on Comp. and 
Communications Security (CCS 2007), pp. 
529–540, 2007. 
[6]  45. W. E. Wong, L. Zhao, Y. Qi, K.-Y. 
Cai, and J. Dong. “Effective Fault 
Localization using BP Neural Networks.” 
In Proc. of the 19th Int’l Conf. on Software 
Eng and Knowledge Eng. (SEKE 2007), pp. 
374–379, 2007. 
[7]  15. T. L. Graves, A. F. Karr, J. S. Marron, 
and H. Siy. “Predicting Fault Incidence 
Using Software Change History.” IEEE 
Trans. on Software Eng., Vol. 26, No. 7, pp. 
653–661, 2000. 
[8]  16. A. E. Hassan and R. C. Holt. “The 
Top Ten List: Dynamic Fault Prediction,” In 
Proc. of Int’l Conf. on Software 
Maintenance (ICSM 2005), pp. 263–272, 
2005. 
[9]  25. S. Kim, T. Zimmermann, E. J. 
Whitehead, Jr., and A. Zeller. “Predicting 
Faults from Cached History,” In Proc. of 
the 29th Int’l Conf. on Software Eng. (ICSE 
2007), pp. 489–498, 2007. 
[10]  9.  Ing-Xiang Chen, Cheng-Zen Yang, 
Ting-Kun Lu, Hojun Jaygarl, “Implicit 
Social Network Model for Predicting and 
Tracking the Location of Faults.” In 
Proceedings of the 32nd Annual IEEE Int’l 
Computer Software and Applications Conf. 
(COMPSAC 2008), July 2008, pp. 136-143. 
[11]  A4. Ing-Xiang Chen, Chien-Hung Li, and 
Cheng-Zen Yang, “Mining Co-location 
Relationships among Bug Reports to 
Localize Fault-Prone Modules.” IEICE 
Trans. on Information and Systems, Vol. 
E93-D, No. 5, May 2010, pp.1154-1161. 
[12]  1.  I-Hsuan Huang, Ko-Chen Chang, 
Yu-Chi Lu, and Cheng-Zen Yang, 
“Countermeasures against MAC Address 
Spoofing in Public Wireless Networks 
using Lightweight Agents.” In  Proc. of 
the 5th Annual International Wireless 
Internet Conf. (WICON 2010), March 
2010.  
 
 
?????????????????????????????????????????
???????????????????????????????? 
???????????????? 4? 10???????????????????
??????? Linköping University? Di Yuan????????????????????
????????????????????????????????????? Dragon 
Venture??? Henry Ines?????????????????????????????
??????????????????????????????????????????
??????????????WICON 2010???????? 
?? ???? 
???????????????????????????????????????
?????????????????????????????????????????
??????????????????? 
 ??????????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
??????????????? 
 ??????????????????????????????????????
?????????????????????????????????????????
?????????????????? 
?? ?? 
WICON ??????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
????????????????????? 
 ???????????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
???? 
???????????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
?????????????????????????????????????????
?????????????? 
?? ????????? 
?????????????????????? Call for Paper???? 
?? ?? 
 
 
???????????? 
 
 
 
 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：楊正仁 計畫編號：98-2221-E-155-033- 
計畫名稱：軟體維護中以探勘技術為基礎之智慧型錯誤預測與追蹤 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100% 
成果已經發表在
IEICE 
Transactions on 
Information and 
Systems 期刊上。
研究報告/技術報告 0 0 100%  
研討會論文 1 1 20% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
