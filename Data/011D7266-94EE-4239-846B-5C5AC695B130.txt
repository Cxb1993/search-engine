2undirected and directed graph is investigated. Some features are included in the algorithm such as:
multi-sources, multi-sinks, capacitated or uncapacitated links. Other new features are also addressed like
specified/unspecified maximal outdegree for all nodes, specified/unspecified outdegree (indegree) for sources
(sinks), naturally deployed feasible cycles as in the real cases, and new attributes such as budgets, time,
weight, etc. To evaluate the proposed algorithm, the undirected versions of the 40 benchmarks in NETGEN [8]
are investigated. The limits of nodes and arcs are not constrained in the proposed algorithm as long as the
computer memory affordable. NETGEN had a limited size of 8000 nodes and 35000 arcs in different network.
However, a graph of 8000 nodes with 36000 arcs was generated by the proposed approach. Unlike NETGEN
involving thousand lines of codes, a sample code of no more than 43 lines in PROLOG is tested for examples.
The remainder of the work is described as follows: Some mathematic preliminaries, assumptions and the
theoretical aspects are addressed in Section 2. Section 3 describes the algorithm of graph generation. Then, the
undergoing of the algorithm is illustrated by some numerical examples in Section 4. The 40 benchmarks plus
one extra case are also drawn in Section 4.
2. Nomenclature
2.1 Notation
G =(A,N,S,T) be a undirected network where A is the set of arcs, N is the set of nodes, S is the set
of sources, and T is the set of sinks with parenthesized negative sink number.
ai the ith arc.
NN the number of nodes.
AN the number of arcs.
α =e1, e2,…, eAN be a linked path structure for arcs where ei is a pointer to a list.
SCN the number of sources.
SC the set of branches from sources.
SKN the number of sinks.
SK the set of branches into sinks.
MD the maximal outdegree (indegree) of a node (sink). When setting of 0, a random setting is
conducted.
NC the set of branches from nodes except sources and sinks.
SCD the outdegree of sources. When setting of 0, a random setting is conducted.
SKD the indegree of sinks. When setting of 0, a random setting is conducted.
LB the lower bound of an attribute for an arc.
UB the upper bound of an attribute for an arc.
PER the percentage of arcs distributed with attributes.
LA a list of attributes for arcs.
4such situation.
Lemma 2.3: A cycle of length two is a parallel in undirected graph.
We can employ the directed graph as a framework but restrict the cycle length in it no less than 3, and
add the additional reverse edges like the edge 6 in Fig. 1 to get the equivalent directed graph. Then, the
undirected version is obtained by back transformation.
3. Mathematic preliminaries
In fact, arcs, nodes, and outdegrees are not totally independent parameters for configuring a flow network.
The following lemmas denote the relationships without proof.
Lemma 3.1




SKNNN
i
iloutAN
1
|| (1)
where NNSCN+SKN, MD=max{|louti|, |linj|i, j }.
Lemma 3.2
If NN = SCN+SKN, then MD must not be greater than min{SCN/SKD, SKN/SCD}.
Lemma 3.3
If NN > SCN+SKN, then NN must not be less than SKN(1+SKD).
Lemma 3.4
If NN > SCN+SKN, then NN must not be less than SCN(1+SCD).
Lemma 3.5
MDAN/(NN-SKN) (2)
Lemma 3.1 gives the relationship among arc number, node number, source number, sink number, and the
maximal outdegree. Lemma 3.2 provides a specific situation in the 40 benchmarks causing parallels and
proves that the network generated by NETGEN would involve parallels. For example, G(200, 1300, 100, 100,
MD, SCD, SKD, 0, 0, 0) (the benchmark 1 in Klingman et al., 1974) is not a feasible configuration because
MD must be greater than or equal to 13. However, 100/13 < 13 which violates Lemma 3.2. Such a
configuration would cause parallels. Lemma 3.3 gives the hint for the selection of SKD. Lemma 3.4 gives the
hint for the selection of SCD. Lemma 3.5 gives the hint for the selection of MD. Any parameter setting against
6 louti ≠ loutw, the non-loop condition.
 For all llouti and l ≠ k, then el ≠ loutw, the non-parallel condition.
 For each preceding loutr, then either loutr ≠ loutw and |loutr| > 1 or loutr = loutw but |louti|>1, the
non-cycle-loop condition.
 |linj| < MD and |louti(linj{k})| < 2, the condition of adding to the in-branch of sinks.
Finally, all arcs are allocated properly if and only if the following lemma holds.
Lemma 3.12



AN
klouti
ki
j
j 1
(3)
4. Algorithm
4.1 The linked path structure
The linked list structure was well known in efficiency for searching or sorting tasks [10]. Then, a linked
path structure L ={S, lout1, lout2, …, loutAN} is a 2-layer linked list structure, where the first layer is an
ordered arc set with its members, the 2nd layer, pointing to the sets of out-branches of each node respectively,
and the first element (indexing by 0) indicating the sources. For example, the corresponding linked path
structure for the directed graph in Fig. 1 is {{(1, 2)}, (3, 4), (5, 6), (5, 6), (-1), (-1), (3,4)}. So, L(0) = {(1, 2)}
is the set of sources. L(1) = (3, 4) denotes Arc 1 which points a node with the out-branches, 3 and 4. The
algorithm for generating a feasible undirected graph is briefly described as that: Firstly, we randomly generate
sources, sinks and other nodes. Next, the residual edge attachment is performed. To guarantee all edges
belonging to the paths from sources to sinks, a policy of node by node connection from sources to sinks is
conducted; meanwhile, Theorem 2.3 is checked. After the graph being generated, Theorem 2.4 is checked.
Finally, the attributes for each edge are generated according to the setting of parameters. Let LA be a list of
attributes for edges, then the additional reverse edges have no need for the attributes.
Based on the lemmas discussed above, the algorithm for generating a feasible flow network is briefly
described as that: Firstly, we randomly generate sources, sinks and other nodes. Next, the residual-arc
attachment is performed. To guarantee all arcs belonging to the paths from sources to sinks, a policy of node
by node connection from sources to sinks is conducted; meanwhile, Lemma 3.11 is checked. After the
network being generated, Lemma 3.12 is checked. Finally, the attributes for each arc are generated according
to the setting of parameters.
Algorithm 1: The generation of a flow network G.
Step 1. If MD=0, then MD=random(AN - 1).
Step 2. Create sources.
a. For 1iSCN do
b. If SCD=0, then SCD=random(MD).
c. louti={i1, i2,…, iSCD}. // Randomly choose SCD arcs.
d. IfloutjSC and loutjlouti=, then SC=SC{louti}, else redo Step (2c).
Endfor.
Step 3. Create sinks.
8End.
End.
Endfor.
Endfor.
Step 7. Add reverse arc to the directed arc excluding those arcs connected with sources and sinks.
a. RA = AN // RA is the reverse arc.
b. For 1iAN do
c. If iSCSK, then begin
d. RA = RA + 1 and iloutj .
e. loutRA = loutj . // Add the node pointed by the reverse arc.
f. loutw = loutw {RA} for all loutw = louti. // Insert reverse arc to the out-branches of all the node equaling the node
pointed by arc i.
End.
Endfor.
Step 8. Perform attribute distribution.
a. For 1iAN do // The attribute for an edge may be the capacity, cost, time, weight, or budget.
b. CHOICE is random(100).
c. If CHOICE PER, then LA = LA{random(UB-LB)+ LB}, else LA = LA  {-1}. // -1 is a handy notation for
uncapacitated edges.
Endfor.
Step 9. Output “The Sources:” S, “The Sinks:” T, “The Linked Path Structure:” L, “The AtributeList:” 
Step (2) requires O(SCD*SCN) storages to store sources. Step(3) requires O(SKD*SKN) storages to store
sinks. Step (4) requires O(MD*(NN-SCN-SKN)) storages to store other nodes in the worst case. Step (5)
requires O(MD*NC) storages to store nodes in the worst case. Step (6) requires O(MD*NN) storages to store
nodes in the worst case. Step (7) requires O(AN) storages to store attributes. In sum, the total storage space
needed is O(MD*NN) in the worst case. Assume the random number is uniformly distributed. Step (2)
requires O(SCN) time to generate sources. Step (3) requires O(SKN*SCN) time to generate sinks. Step (4)
requires O(NC*SKN) time to create other nodes. Letis the number of residual arcs. Then, Step (5) requires
O(*SKN) time to attach residual arcs. Step (6) requires O(AN*NN) time to connect branches in the worst
case. Step (7) requires O(AN) time to generate attributes for arcs. Step (7) requires O(AN) time to add reverse
arcs. Step (8) requires O(AN) time to generate attributes for edges. In short, the total computational time
needed is O(AN * NN) in the worst case.
5. Numerical examples
Fig. 3 illustrates some popular networks in the literature (Chen and Lin, 2008) which can be generated by
the algorithm proposed.
10
Reference
1. S. G. Chen, Y. K. Lin. (2009). On performance evaluation of ERP systems with fuzzy mathematics,
Expert systems with applications, 36 (3) 6362-6367. (SCI, Impact factor: 2.596, Rank: 1/64).
2. S. G. Chen, Y. K. Lin. (2008). An evaluation method for enterprise resource planning systems,
Journal of the Operations Research Society of Japan, 51 (4) 299-309. (SCI, Impact factor:0.200,
Rank:58/60)
3. S. G. Chen. (2010a). Optimal Logistic Planning in Robust Supply Chain Management with The
Consideration of Service Failures, International Journal of Production Economics, Under review.
(SCI, Impact factor: 2.068, Rank: 3/37) NSC 98-2221-E-236-011.
4. S. G. Chen. (2010b). Optimal Network Planning in Two Site's Communication with Link Failures,
Information Science, Under review. (SCI, Impact factor: 3.291, Rank: 6/116) NSC
99-2221-E-236-009.
5. S. G. Chen. (2010c). Optimal Staff Planning and Performance Evaluation in a Process-based Business,
Journal of the Operational Research Society, Under review. (SCI, Impact factor: 1.009, Rank: 36/73)
NSC 98-2221-E-236-011.
6. S. G. Chen. (2010d). Optimal Capacity Planning and Performance Evaluation in Automated
Manufacturing Systems, International Journal of Production Research, Under review. (SCI, Impact
factor: 0.803, Rank: 23/37) NSC 98-2221-E-236-011.
7. S. G. Chen, Y. K. Lin. (2010). An approximate algorithm for the robust design in a stochastic- flow
network, Communications in Statistics Theory and Methods, 39: 2440-2454. (SCI, Impact factor:
0.406, Rank: 88/100).
8. S. G. Chen. (2010e). Search for all minimal paths in a general directed flow network, Computers &
Industrial Engineering, Under review. (SCI, Impact factor: 1.491, Rank: 10/37) NSC
98-2221-E-236-011.
9. S. G. Chen. (2010f). Generation of a large scale undirected flow network for solving network
problems, Computers & Operations Research, Under review. (SCI, Impact factor: 2.116, Rank: 9/73)
NSC 98-2221-E-236-011.
10. S. G. Chen. (2009a). Fast Sizing of a stand-alone PV system based on the observed extremes over
threshold, Renewable Energy, Under review. (SCI, Impact factor: 1.663, Rank: 22/67) NSC
98-2221-E-236-011.
11. S. G. Chen. (2009b). Generating Large Scale Network for Solving the Flow Network Problems, In:
Proceedings of 2009 IEEE International Conference on Industrial Engineering and Engineering
Management, Hong Kong, Dec. 8-11, 2009, pp. 1728-1732. (EI) NSC 98-2221-E-236-011.
12. S. G. Chen. (2009c). Optimal Sizing Stand-alone PV Systems in Terms of Extreme Value Theory, In:
Proceedings of IEEE TENCON 2009, Singapore, Nov. 23-26, 2009. (EI) NSC 98-2221-E-236-011.
13. W. H. Yu, S. G. Chen. (2010). The linguistic performance index for ERPS --- A case study on the
order fulfillment process in Wen Chiang Limited Co., Master Thesis, Tungnan University, 2010 NSC
98-2221-E-236-011.
14. J. Y. Lin, S. G. Chen. (2010). The Bayesian performance index for ERPS --- A case study on the
order fulfillment process in the car supply chain company, Master Thesis, Tungnan University, 2010
NSC 98-2221-E-236-011.
15. K. W. Hsu, S. G. Chen. (2010). Using Analytic Hierarchy Process to the implementation of fuel cell
leak-proof redesign－A case study on A-type Zinc-air fuel cell, Master Thesis, Tungnan University,
2010 NSC 98-2221-E-236-011.
16. 陳星光，林義貴，(2008a). 企業內部網路之效能評估方法，台灣（新發明申請中） NSC
98-2221-E-236-011, NSC95-2221-E-011-222-MY3.
17. S. G. Chen, Y. K. Lin, (2008b). Method for evaluating performance of internal network in an
enterprise. USA(新發明申請中) NSC 98-2221-E-236-011, NSC 95-2221-E-011-222-MY3.
18. 陳星光，林義貴，(2008c). 利用模糊邏輯評估企業內部網路效能的方法，台灣（新發明申請中）
NSC 98-2221-E-236-011.
19. D. Klingman, A. Napier, J. Stutz, (1974). NETGEN: a program for generating large scale capacitated
assignment, transportation, and minimum cost flow network problems, Management Science, 1974,
20, 814–821.
22010 IEEE International Conference on Trends and Developments in Converging
Technology (TENCON 2010)
一、參加會議經過
本次會議為 IEEE Region 10(亞太區)工程界的年度盛會，主要回顧今年亞太區工程
學者的研究成果並提出來讓大家討論與切磋．會議在 2010/11/21~23 於日本福岡國際
Congress Center舉行, 吸引來自全球各地超過 500名學者參與(含台灣知名大學教授十
數人)約 707 篇論文的發表，盛況空前，討論熱烈．本人很榮幸獲邀口頭發表一篇論文。
二、與會心得
首先感謝國科會補助本次國際會議的經費，使申請人得以參與這次全球工程學術界
的盛會．申請人是受到大會重視個人所提的太陽能配置理論應重視氣候變遷因素，而受
邀口頭報告，深感榮幸．也激勵申請人在太陽能應用領域提出更多有用的研究成果．
回顧二、三十年來工程界在太陽能的應用上，一直假設每年的氣候狀況不變，因此
幾乎所有的文獻均只採用一年內的天候資料，作為太陽能應用設計的參考，並據此提出
各式最佳參數設計的方法與實證．2008 年申請人首度提出沒有兩年的天候狀況會是相同
的，並依據「極限值理論」提出配合氣候變遷因素而達成的最佳太陽能應用配置理論，
本文在第一時間曾受到工程界很大的爭論，但是由此次會議大家的討論情況看來，顯然
已被許多學者所接受，並認為往後太陽能或其他再生能源的應用也應該將氣候變遷因素
納入考量．讓申請人深感與有榮焉．
三、建議
參加本次研討會給申請人的感覺是，參與國際學術研討會是與國際學術接軌的一個
重要社交場合。國際間，針對各種專業領域不乏有許多知名學者，然而對於一個私校學
者而言，國際上對於學術貢獻的客觀性值得國內學術界借鏡。反觀國內學術界，通常不
特別重視私校學者在學術上所做的努力。在會議交流的過程中，可從學者問答之間，感
受國外學者所關注的焦點，並使我們對整體研究趨勢有些了解，有助掌握新的研究方
4國科會補助專題研究計畫項下出席國際學術會議心得報告
日期：100 年 8月 17 日
計畫編號 NSC 99-2221-E-236-009
計畫名稱 整合個人績效的 ERP 績效評估指標之研究
出國人員
姓名
陳星光
服務機構
及職稱
東南科技大學工業工程與管理系
助理教授
會議時間
99 年 12 月 9 日至
99 年 12 月 9日
會議地點 香港
會議名稱
(中文)2010 IEEE 工業工程與工程管理國際研討會
(英文)2010 IEEE International Conference on Industrial
Engineering and Engineering Management (IEEM 2010)
發表論文
題目
(中文)製作大型無向網路圖以解決流量網路問題
(英文) Generating Large Scale Undirected Graph for Solving Flow
Network Problems
6外學者間所關注的焦點，並使我們對整體研究趨勢有些了解，有助掌握新的研究方向。
因此，教育部或國科會往後應盡量補助國內一些私校優秀年輕學者或博士生，多參與國
際學術會議，開拓其國際視野；同時，也希望能多多補助支持國內私立大專院校，承辦
一些大型國際會議，使無法獲得出國補助的學生及國內年輕老師，也能參與國際會議，
增加與國外學者進行交流與見習的機會，亦可提升台灣在國際上的知名度。
四、攜回資料名稱及內容
攜回的資料，除了該會議的詳細議程，以及一片大會論文光碟(CD-ROM)外，另外還
有國際學者間滿滿的友誼．
五、其它
明年本盛會將移師新加坡，也望請國科會在經費上能大力襄助成行．
99 年度專題研究計畫研究成果彙整表 
計畫主持人：陳星光 計畫編號：99-2221-E-236-009- 
計畫名稱：整合個人績效的 ERP 績效評估指標之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 2 2 100%  
研究報告/技術報告 1 1 100% 國科會結案報告 
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100% 兼任碩士生助理 
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 7 7 100% 
篇 
 
國外 
論文著作 
專書 1 1 100% 章/本 
S. G. Chen. 
(2011). Optimal 
capacity 
planning and 
performance 
evaluation in a 
process-based 
business with 
the 
consideration of 
system failures, 
a chapter In: 
Business Process 
Modeling: 
Software 
Engineering, 
Analysis and 
Applications, 
NY: Nova Science 
Publishers, 
March 2011. 
 
