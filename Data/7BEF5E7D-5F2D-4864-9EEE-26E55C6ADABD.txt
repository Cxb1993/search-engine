 2
一、中英文摘要 
自從嵌入式指令壓縮系統的概念於
1990 年代初期被提出後[1]，低功率嵌入
式系統設計就成為一門相當新而發展快速
的研究領域。本計劃由記憶體功率消耗的
觀點來研究嵌入式計算系統之架構，同時
以選擇性壓縮演算法(Selective Code 
Compression, SCC)之技術實作一個低功
率嵌入式計算系統。 
要實作完成低功率指令壓縮式系統，
發展一套有效的壓縮演算法輔助計算機運
算是有必要的。本計劃中，我們使用
(Lempel-Ziv-Welch, LZW)演算法發展出
一個指令的動態壓縮、解壓縮方法，這個
方法在解壓縮的部分可以與平台計算機協
同執行。 
本計劃選擇使用 VLIW 架構作為實現
目的之計算機系統。我們利用 VLIW 架構在
指令的靜態平行排程技術做為壓縮資訊的
來源，將基本的指令排程技術中一般定義
的基本區塊(Basic Block, BB)，推廣為我
們所自定義的分支區塊(Branch Block, 
BRK)，以實現一個理想的 VLIW 指令壓縮系
統雛形。值得注意的是，只要分支區塊可
以配合平台編譯器平行技術進行優化操作，
一個指令壓縮計算系統獨立於底層的編譯
平行技術，並不因其改變而受影響。 
 
關鍵詞：LZW編碼演算法，動態壓縮，VLIW。 
 
Abstract 
The study of code compression has 
expanded rapidly since the theoretical model 
of low-power embedded system design was 
introduced in the early 1990's [1]. In this 
project, we studied the architecture of 
embedded computing systems from the 
memory power consumption point-of-view 
and using Selective-Code-Compression 
approach to realize our design. 
To implement a low power instruction 
compression on embedded systems, it is 
necessary to develop an efficient code- 
compression algorithm. Based on LZW 
compression, we designed a cost-effective 
compression and decompression method in 
our project. Our decompression method has 
to be easily implemented and should 
collaborate with the CPU at the same time. 
In this project, we choose TI’s VLIW 
DSP architecture as our target general- 
purpose computer. We took advantage of 
several characteristics of VLIW processors, 
such as the reordered parallel execution. 
After we get the basic-blocks, we can then 
extend the ideas to be branch-blocks. Be 
attention that the general purpose computer 
will not to be affected with our definition of 
branch-block, because it has independent 
property with Compiler optimization 
technologies. 
 
Keywords: LZW compression , dynamic- 
compression, VLIW 
行政院國家科學委員會專題研究計畫成果報告 
利用程式碼壓縮之低功率嵌入式系統設計 
A Low-power Code-compression Design on the Architecture of VILW Computers 
 
計畫編號：97 – 2218 – E – 011 -016
 
執行期限：民國97年10月01日到98年10月31日 
主持人
  
：林昌鴻
  
台灣科技大學電子工程學系助理教授
 
 4
(4) 對 BRK 進行實機平台上之分佈統計
並推估解壓縮成本 
我們將在以下對每個步驟做詳細的介紹 
 
步驟(1)我們要先對於 TI-C6000 的執行 
檔（COFF 格式）做結構分析，其檔案結 
構如圖 1 所示。 
 
圖 1:COFF 檔案結構 
 
檔案結構有三個主要的區塊，分別是.text
區塊放置本文指令碼、.data 區塊放置程式
資料碼、.table 區塊放置系統配置資訊碼，
其中我們將針對.text 區塊做程式碼擷取。 
 
步驟(2)我們將擷取好的本文指令碼，做程
式碼流程解析建立 BB，並還原編譯器所排
程好的（Control-Flow-graph，CFG），BB
是一個程式碼流程分析中的基本單元，其
定義為數個指令集合而成的區塊，以流程
控制指令為其區塊的結束，而由 BB 方面
組成的流程關係圖即為 CFG，如圖 2 所
示。 
 
圖 2: Mediabench 中的 modem benchmark 之
CFG 部分截圖 
 
步驟(3)將建立而成的 BB 延伸為 BRK，形
成分支區塊後，在程式碼流程上便可以使
用 BRK 做為新的基本單元。這項延伸定義
在之後的即時性解壓縮中扮演著重要的角
色；原理可由圖 2 來說明，CFG 中白色的
BB 代表此區塊只有發生一次的分支跳躍
目的，具有可合併性，而紅色 BB 代表著
有兩個以上的分支跳躍目地在這個區塊發
生，這也代表著此區塊具有不可被合併的
特性必須作為一個流程控制的進入點，所
以我們可以利用這個紅色的 BB 作為一個
新流程的起始，然後在以此 BB 向鄰近白
色的 BB 進行合併的動作，直到碰到下一
個紅色區塊為止，而每一個合併的 BB 集
合，我們給它一個新的定義名稱為
（Branch-block，BRK），如此可產生新的
CFG 關係如圖 3。 
  
圖 3: Mediabench中的 modem benchmark
將 BB 合併為 BRK之 CFG 部分截圖 
 
當我們得到BRK的CFG關係後，就可以開
始 進 行 實 機 的 資 料 分 佈 資 訊 收 集
(Branch-block profiling)、和推估解壓縮成
本(Decompression-cost)。 
 
步驟(4)對BRK進行實機資訊收集，這部分
我們使用由Vinodh Cuppu 在1999年[38]所
開發完成之TI-C6000 DSP模擬器，作為實
機資訊的收集依據。並針對
 mediabench 
 6
二元檔，因為我們採用查表的方式管理壓
縮位址的讀取、寫入，所以我們可以清楚
的瞭解壓縮前後BRK位址的明確範圍。 
 
五、實驗結果
 
 
以下圖表，是針對我們所制訂的選擇性
壓縮演算法對
 Media-Benchmark 17組不
同類型的測試程式所做的總體壓縮率(CR)、
與解壓縮成本 (Decompression-cost)做統
計：
 
 
圖 5: Mediabench ,Compression-ratio 
 
圖 6: Mediabench ,Decompression-cost 
 
從圖 5、6 可看出綠色線（CR）值範圍
在 78~94%之間，而 decompression-cost 部
分，紅色線（ORG）為未經過選擇性壓縮
的解壓縮成本估算值、淺綠色線(SCC)為經
過選擇性壓縮的解壓縮成本估算值，從圖
6 可看出兩項數值差異很大，甚至在某些
benchmark 可以看出差異更大；所以我們
發現我們提出的方法在解壓縮的時候的確
會得到很好的執行效能、和較低的功率消
耗。 
六、總結
 
 
可以從各項的圖表中得知，經過選擇
性壓縮演算法壓縮過後的壓縮率會比全資
料壓縮的壓縮率來的高，這是因為在我們
所制訂的選擇性準則中，加入了
 P 因子的
緣故，所以有些區塊會因為被
 P 因子考量
到該區塊在未來解壓縮的時候可能會造成
解壓縮成本過高而被剔除，並且在資料實
際壓縮時每一個分支區塊都必須清空壓縮
表格重頭開始執行壓縮演算法，如此才能
確保在程式碼流程中是以分支區塊為基本
的處理單元；這是一個難以取捨的問題，
在這裡我們犧牲壓縮率來彌補解壓縮功率
的成本消耗和得到較高的執行效能，雖然
會使得總體壓縮率不如全區塊壓縮來的低，
但在功率消耗、即時性效能執行上會比起
沒有選擇性的策略來的好，並且在程式碼
的流程中解決跳躍指令的壓縮位址處理上
可以和現有的選擇性策略演算法做延伸結
合，在多方有利的因素的考量下，失去些
微較好的壓縮率是我們可以接受的範圍。
  
 
七、計畫成果自評 
 
 本計畫研究 VLIW 架構指令壓縮的用
應性，並以實作的方式在 TI-C6000 DSP 的
平台上達成實作嵌入式計算系統壓縮之雛
形，在能源考量日益漸重的時代下，具有
智慧型的壓縮演算法與即時性的動態解壓
縮方式，我們相信會成為低功率嵌入式系
統設計上的一個嶄新方向。 
而我們在未來的工作上就是要進一步
的去設計一個即時性的解壓縮硬體來達成
我們方法的實體驗證，因為在實際的應用
上所會面臨的問題會有助於我們對策略方
法的修正與功耗估算將會更為精準，這部
分我們將使用 FPGA 來做為前端的硬體設
計，而開發 FPGA 所用的 HDL 語言具有很
高的移植性，在往後的即時性解壓縮晶片
的製作上將會是非常有利的基石。 
