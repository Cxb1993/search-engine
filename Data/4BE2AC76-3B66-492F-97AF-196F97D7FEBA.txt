 2
concurrently on FPGA, forming a 
heterogeneous environment. Such an 
environment requires an operating system, 
which needs to be more powerful than 
traditional ones, to manage both the 
hardware and the software tasks. This new 
type of operating systems is called 
Operating Systems for Reconfigurable 
Systems (OS4RS). 
In this project, we focus on 
implementing an embedded operating 
system, which support hardware task 
management, on a heterogeneous and 
reconfigurable environment, the Xilinx 
ML310 development board. The board 
consists of a Virtex-II Pro FPGA, into 
which we can download a soft ISP as well 
as a number of hardware tasks. The 
implementation results will be described in 
this report.  
 
Keywords: OS4RS, Reconfigurable 
Computing, Operating Systems, Embedded 
Systems, FPGA 
 
 
二、計畫緣由與目的 
嵌入式系統的主要運算單元基本上
可 分 為 三 類 ： 處 理 器 (processor), 
Application Specific IC (ASIC), 與可重新
組態的硬體 (reconfigurable hardware)。第
一類運算單元所執行的運算為『軟體』程
式，後兩類運算單元則執行『硬體』程式。
在早期，可重新組態的硬體（如 FPGA）
並沒有大量地用在實際系統上。因為
FPGA 的成本比 ASIC 高，所以多數廠商
由於成本考量，在產品量產時大多選用
ASIC，因此 FPGA 大多是用在系統雛型
(prototype)的建置上。因其可重新程式化
(reprogrammable)的特性，使其應用在系
統早期開發時可以較方便進行系統除
錯，進而降低開發的成本。 
然而，隨著 FPGA 容量的提升以及
重新組態模式的演進，這類的運算單元已
經開始運用在各類應用上。例如：mobile 
systems, wearable computing, multimedia 
processing…等等。近年來，逐漸有一些
取代 ASIC 的趨勢。除此之外，近年來
FPGA 的 partial reconfiguration 的特性更
增 加 了 它 的 利 基 ， 不 但 蓬 勃 了
reconfigurable computing 的研究，更提升
了它的彈性與實用性，鞏固其在運算單元
上的位置。 
所謂的 partial reconfiguration，即為
FPGA 可以讓使用者下載電路到它的一
部份區域去。在此同時，FPGA 其他區域
的那些先前已經下載的電路仍可繼續運
行，並不會受到電路下載的干擾。這代表
著，目前 FPGA 可以同時動態的執行多個
不相關電路。當一個電路執行結束後，其
所使用到的 FPGA 區域可以給另一電路
使用（只要該 FPGA 區域的大小足以容納
新的電路）。若我們把一個電路視為一個
硬體任務(hardware task)，那這類 FPGA
就類似於 multiple processors。前者可以同
時執行多個硬體任務，後者則可以同時執
行多個軟體任務(software task)。 
因為前述原因與 FPGA 的彈性，我
們預期 FPGA 將在電腦計算系統（尤其是
嵌入式系統）的領域中扮演愈來愈重要的
位置。未來的嵌入式系統，除了包含
embedded processor 及周邊 IO 外，也會開
始包含 FPGA。(甚至，在一些情況下，
FPGA也可能利用 soft processor core直接
取代 hard embedded processor core) 因
此，我們認為，未來的嵌入式系統將是一
個同時存在軟體任務與硬體任務的異質
(heterogeneous) 且 可 重 新 組 態
(reconfigurable) 環境，其必同時支援
hardware 及 software multi-tasking。就像
我們目前所熟知的嵌入式系統，可以動態
執行多個 software programs。未來的嵌入
 4
 
interface
靜態電路
32bitData ND RDY
PRM1 PRM2 PRM3 PRM4
BUS MACRO BUS MACRO BUS MACRO BUS MACRO
 
圖二. 動靜態電路溝通 
 
為了評估動態硬體任務載入的效
能，我們在四個動態重組區域上都製作
了運算浮點數平方根的電路，每個區域
都產生了兩個 bitstream，一個為浮點數
電路檔，另一個為空白電路檔，接下來
我們把所有的 bitstream 放在 CF 卡上，
然後透過 ICAP 來動態重組 FPGA。我
們測量從 CF 卡讀取 bitstream 資料到重
組態完成所需時間。測試結果顯示，每
個 bitstream 的重組態花費時間約在 0.2
秒。運算浮點數平方根的電路較空白電
路的載入多了 50ms。 
 
 
四、計畫結果自評 
 在此計畫年度，我們已完成將
uC/OS-II 移植到 ML310 上之 Microblaze
的工作。同時，我們擴充 uC/OS-II，使其
具有硬體任務管理能力。最後，我們規劃
若干個動態硬體區域，並設計一電路以支
援 Microblaze 上之軟體與動態載入之硬
體任務間溝通的機制。我們已著手將此計
畫成果投稿到國際會議。 
 
 
五、參考文獻 
[1] B. Blodget, S. McMillan, and P. Lysaght, “A 
Lightweight Approach for Embedded 
Reconfiguration of FPGAs”, Proceedings of 
the IEEE Design Automation and Test in 
Europe, 2003, pp. 339-340 
[2] B. Blodget, P. James-Roxby, E. Keller, S. 
McMillan, and P. Sundararajan, “A 
Self-reconfiguring Platform”, Proceedings of 
the Field-Programmable Logic and 
Applications, (Springer-Verlag), Sept. 2003, 
pp. 565-574 
[3] S. Guccione, D. Levi and P. Sundararajan, 
“JBits: Java Based Interface for 
Reconfigurable Computing”, Proceedings of 
the Military and Aerospace Applications of 
Pro-grammable Devices and Technologies 
International Conference, 1999. 
[4] M. Huebner, T. Becker, and J. Becker, 
“Real-time LUT-based Network Topologies 
for Dynamic and Partial FPGA 
Self-reconfiguration”, Proceedings of the 
Symposium on Integrated Circuits and 
Systems Design, 2004, (ACM), pp. 28-32 
[5] G. Mermoud, “A Module-Based Dynamic 
Partial Reconfiguration Tutorial”, Logic 
Systems Laboratory, Ecole Polytechnique 
Federale de Lausanne, Nov. 2004. 
[6] K. Nasi, T. Karouhalis, M. Danek, and Z. 
Pohl, “FIGARO - An Automatic Tool Flow 
for Designs with Dynamic Reconfiguration”, 
Proceedings of Field Programmable Logic 
and Applications, Aug. 2005. 
[7] P. Sedcole, B. Blodget, T. Becker, J. 
Anderson, and P. Lysaght, “Modular 
Dynamic Reconfiguration in Virtex FGPAs,” 
IEEE Proceedings - Computers and Digital 
Techniques, vol. 153, May 2006.  
[8] W. Herbert and P. Marco, “Reconfigurable 
Hardware OS Prototype”, Technical Report 
TIK Nr. 168, Swiss Federal Institute of 
Technology (ETH), Apr. 2003. 
[9] I. A. Williams and N. W. Bergmann, 
“Embedded Linux as a Platform for 
Dynamically Self-reconfiguring 
Systems-on-chip”, Proceedings of 
International Conference on Engineering of 
Reconfigurable Systems and Algorithms 
(ERSA '04), Nevada, 2004. 
[10] Xilinx Inc., “Using a Microprocessor to 
Configure Xilinx FPGAs via Slave Serial or 
SelectMAP Mode”, XAPP502, Available at 
http://www.xilinx.com/ 
bvdocs/appnotes/xapp502.pdf, Nov. 2002. 
[11] Xilinx Inc., “Two Flows for Partial 
Reconfiguration: Module Based or Difference 
Based”, XAPP 290, Available at 
http://www.xilinx.com/ 
bvdocs/appnotes/xapp290.pdf, Sept. 2004. 
[12] Xilinx Inc., “Using Partial Reconfiguration to 
Time-Share Device Resources in   Virtex-II 
and Virtex-II Pro”, XAPP255, Available at 
http://www.xilinx.com/ 
bvdocs/appnotes/xapp138.pdf, May 2005. 
[13] Xilinx Inc., “Early Access Partial 
Reconfiguration User Guide for ISE 8.1.01i”, 
UG208, Available at 
http://www.xilinx.com/support/prealounge/pr
otected/ index.htm, Mar. 2006. 
