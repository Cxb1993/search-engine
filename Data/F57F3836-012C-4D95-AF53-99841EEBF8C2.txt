 
 
目    錄 
 
一、中英文摘要 
二、前言 
三、研究目的 
四、文獻探討 
五、研究方法 
六、結果與討論 
七、計畫成果自評 
八、參考文獻 
 
 
 
 2
 4
In recent years 3D game engines have 
made a tremendous advance in the graphical 
presentation of interactive worlds. A number 
of optimization and specialization techniques 
for the graphics pipeline and the 
representation of the scene geometry allow 
the depiction of a graphically rich world in 
varying detail. While the main scope of 
current game graphics still lies in generating 
photorealistic images, other fields of 
application favor the use of 
non-photorealistic images for artistic 
expression. Lately, computer graphics 
research has turned to the field of 
nonphotorealistic rendering and there are a 
number of solutions for the generation of still 
images. If, however, we consider 
non-photorealistic animation or even 
real-time rendering, we encounter two 
challenging problems: The first is the 
maintenance of frame-to-frame coherence 
and the second is the ability of a 3D engine 
to render non-photorealistic images of a 
given scene in real-time. The development of 
current 3D engines aims at more and more 
realism, mainly through an extensive use of 
elaborated textures. There are only very few 
computer games that incorporate 
non-photorealistic style elements. 
 
The preservance of frame coherence is 
one of the most intriguing challenges of NPR 
animation. Although there are an increasing 
number of non-photorealistic rendering 
systems aiming at the generation of various 
different styles (impressionistic paintings, 
technical illustrations, pen-and-ink etc.), 
there are few systems dealing with the goal 
of frame-to-frame coherence. For instance, 
the system presented by SALESIN et al. 
creates pen-and-ink illustrations, a style 
similar to what we are aiming at. It is based 
on stroke textures, collections of strokes 
arranged in different patterns, to generate 
texture and tone. However, like other 
comparable approaches, stochastic methods 
are used to model the line deviations of a 
hand drawing, which makes them unsuitable 
for the generation of animation. 
 
The aim of a game engine, in general, is 
to supply an interactive virtual environment 
for the interaction of one or several players 
with objects and characters of the virtual 
world. Although there are numerous different 
game engines, and even more 3D engines, we 
can characterize a game engine by its main 
components (which, of course, may differ 
from engine to engine): (1) a special purpose 
3D engine, which is optimized for real-time 
rendering and ensures the generation of a 
constant frame rate for fluent animation. (2)a 
set of rules defining the behavior of the 
virtual world, like kinematic control, 
dynamic simulation, collision detection and 
AI for the behavior of non-player characters. 
(3) a network component supporting 
multi-player interactions. 
 
3D engines of current computer games 
focus almost exclusively on realistic 
rendering. We would like to use 
non-photorealistic visualization elements in a 
3D environment; we somehow have to 
combine NPR and game engines. Base on the 
results of our researches in recently year, we 
have developed the virtual brush and created 
brush strokes for the outline and texture 
strokes. We use the brush to synthesize trees 
and rocks in Chinese landscape painting. 
 
This work proposes a game engine 
designed to generate photorealistic images 
can be extended to produce 
non-photorealistic. We introduce new 
hardware-based methods to accomplish 
Chinese ink paintings. The combination of 
the highly optimized processing of a game 
engine and the use of hardware for NPR 
algorithms yields real-time animation of 
Chinese ink paintings. The particular 
advance of this method is that it yields the 
first real-time, frame-coherent Chinese ink 
animations which maintain both tone and 
texture. 
 
 
 
 
Keywords：Computer Graphics, Computer 
Game, NPR(non-photorealistic rendering) , 
Chinese Ink Painting, Game Engines, 
Real-Time Rendering 
 
 6
Mapping 則是提供讓場景更逼真的方
法，不只是表面顏色的修改，Environment 
Mapping 和 Bump Mapping 的使用也越
來越普遍。為了減少成像的步驟硬體卡也
支 援 Multi-texturing 和 Flexible 
Blending ，可達到多重真實成像的效
果。同時對 Environment Mapping 和
Per-pixel Lighting 硬體卡也支援座標對
位的方法。 
然而目前硬體卡並不支援 NPR 成
像技術的功能，在尚無任何一張繪圖卡支
援 NPR 成像技術之時，對 3D 成像引擎
的設計而言，要使影像質要有繪畫的風格
的確是一項挑戰。唯一的方法就是使用
OpenGL 和 DirectX 的 line drawing 之類
的低階繪圖程式指令，和 vertex shader、 
pixel shader 等新一代硬體所帶來的最新
API 功能來完成。本計劃則針對 3D 成
像引擎部份的技術，進行開發「3D 電腦
遊戲引擎的藝術化成像技術研究」，主要
掌握藝術化成像技術原理，結合水墨國畫
技法產生技術，研究開發配合繪圖加速卡
功能產生即時水墨成像技術。此項前瞻技
術研發深具挑戰性， 
第一年已完成開發白描技法的硬體
加速功能。線條是繪畫的基本元素，無論
東、西方的繪畫，都可以用簡單的線條快
速的將物體的輪廓與特徵描繪出，同時將
物體從背景中抽離成為主體。因為輸入的
資料結構是 3D Polygonal 的物體模型
(Modle)，如人物、花、竹、山石等物件，
經由本計畫的技術處理可自動產生白描
的水墨國畫。這一套自動化的描繪過程首
先擷取三維模型的幾何形狀資訊，建立物
體邊緣處理技術，從中分析以獲致白描輪
廓的參考依據，然後產生適當的勾勒筆
觸，及變化豐富的皴擦渲染效果。 
 
第二年度已完成研究使用光影色調
的貼圖方法與水墨渲染的貼圖特效混
合，針對畫面的像素以 Smooth Threshold 
Function，結合 Indication Mapping 和
Stroke Lighting 來達到水墨的濃淡的效
果。所以在遊戲引擎的即時成像上必須改
善水墨畫效果產生的運算速度。目前的繪
圖加速卡都有支援 Multi-texturing 和
Pixel Shader 的功能，可完成上述工作事
項。例如 NVIDIA CineFX 允許在單一
pixel shader 程式中可以取用最多 16 組不
同的材質。這些材質可以是定義表面屬性
的任何事物；例子包括了有凹凸貼圖
（bump map）、gloss/ specularity 貼圖、環
境貼圖（environment map）、陰影貼圖
（shadow map）和 albedo 貼圖。另外可
以透過使用來自 frame buffer 的多材質取
樣來進行創造。像模糊、空心、以及非真
實圖形的成像效果和 toon 著色技術以及
painterly 效果。 
本年度研究主要建構在前二年完成
的技術，整合應用在水墨金魚的實際互動
電腦遊戲。根據水墨畫金魚的筆劃結構，
建立金魚之 3D 模型，再加以水墨畫風格
成像，與筆觸 texture 之合成，實現水墨
金魚之視覺效果。 
 
 
四、 文獻探討 
 
根據不同的繪圖風格，在 NPR 的研
究上可分成幾個不同的方向，例如：以西
畫為主的彩繪[9]、影線畫[11, 19]、鉛筆
畫[28, 29]與及剛筆墨畫[30, 31, 32]等，另
以中國水墨畫為主的岩石水墨畫[23]、樹
木水墨畫[24]及動物水墨畫[26]等。而本
研究目標為將中國水墨風格應用的三維
電腦遊戲引擎上，以呈現中國水墨風格的
遊戲場景，與動物水墨畫[26]有些相似。 
五、 研究方法 
 
本年度在整合應用上所需的水墨畫
模擬技術，是屬於對象描繪的方法，必須
能夠將 3D 場景中的物件，以水墨畫的風
格成像。而前二年所完成的技術，主要以
輪廓描繪和內部著色為重點，使成像結果
能夠表現出筆墨的特性進而捕捉水墨畫
的神情，除了透過筆墨特性的模擬之外，
最重要的，還是要能夠掌握畫家運用筆墨
的手法。 
中國水墨畫的造型講究骨法用筆，常
以線條表達物體的型態，因此，對於物體
模型的塑造，必須以傳統中國畫的造型結
構為出發點，將每一個筆劃視為單一一個
幾何物件，並考慮每一筆劃在三維空間的
位置。將每一個筆觸視為一個物件的造型
方式，對於不同的幾何物件，可以有各自
的著色程序，並可針對不同的筆觸，以著
色程序模擬其「運筆」及「用墨」的技法。 
本計劃中的水墨金魚，即為水墨筆觸
模型所組合而成的型態。採取以筆觸為建
模單位的理由，除了造型概念外，在本計
劃中更是為了表現水墨畫線條的流動
感，而有此考量。單一筆觸物件除了包含
筆劃的造型之外，還增加了動態行為的定
義，藉此產生水墨畫線條的流動效果。首
先將介紹其中處理靜態造型的水墨畫風
格成像方法，而筆觸的動態行為定義則屬
於下一章節之內容。 
 
圖 1 以單一筆觸為造型單位 
 
本計劃所需的水墨畫風格成像技
術，就是建立在前二年的基礎上，並進一
步要求實現即時互動的目標。提升運算速
度是其中的關鍵，而此目標可以利用自訂 
Vertex Shader 與 Pixel Shader 來達成。其
中實現水墨渲染效果的方法，主要是以 
cosn 函數，模擬墨色由濃到淡的衰減變
化。在實作上，主要分為兩個步驟。首先，
對於每一個筆觸，以攝影機所見的範圍為
基準，辨識出筆觸的內部與邊緣。接下
來，再將墨色的濃淡變化，根據辨識結果
由內而外分布於其上，以表現出墨色漸層
變化的渲染效果。以上成像的程序皆於
GPU 中執行，可利用硬體加速達到即時
運算的目標。辨識筆觸的內部與邊緣在
Vertex Shader 中處理，而墨色濃淡的變化
則於 Pixel Shader 中完成。 
 
5.1 辨識筆觸之內部與邊緣 
辨識筆觸物件之內部與邊緣的方
法，是透過筆觸物件的各頂點法向量 N
與攝影機視線向量 I 的夾角 θ 作為判斷，
由於筆觸的形狀為凸多邊形，因此夾角 θ
愈小，表示該面愈靠近內部，反之則靠近
邊緣。θ 之計算方式如下：  
⎟⎟
⎟⎟
⎠
⎞
⎜⎜
⎜⎜
⎝
⎛
×
•== →→
→→
−
IN
INvAngle 1cos)(θ  
實作上，於 Vertex Shader 中執行以
上運算式，並將結果(θ 值)寫入頂點之材
質屬性，以供後續 Pixel Shader 之用。因
此，Vertex Shader 的輸出結構 (Output 
Structure)中，除了必要的頂點位置資訊之
外，還包含了 θ 值。其資料結構如下： 
struct VS_Output 
{ 
 float4 Pos  : POSITION; 
 float Theta  : TEXCOORD; 
}; 
 8
    
n=10, A=0.5, W=1 
 
 10
n=10, A=1, W=2 
圖 3(b) 墨色渲染效果 
 
 
 
六、 結果與討論 
 
本研究對於實作環境的要求，主要在
於圖形與控制功能的支援，在圖形方面，
需 要 能 夠 支 援 DirectX9.0+ 與 
Vertext/Pixel Shader1.0+ 的顯示卡，在控
制方面，則必須使用支援 3D Tracker 的
開發工具。本研究實際上所使用的硬體環
境，為 Pentium4 (3.0 GHz) 與 1024 MB
的 RAM，顯示卡為 GeForce FX 5200 
(128MB)，輸出設備(投影機)為 Sectrum 
RX-3910，輸入設備 (3D Tracker)則為
Polhemus FASTRAK。在軟體環境方面，
作 業 系 統 為 Microsoft Windows XP 
Service Pack 2，開發工具為 DirectX SDK 
9.0。圖 6 為本研究的系統架構，最上層
的 Content Layer 為主要的實作內容，而
基礎環境則由 Engine Layer 與 System 
Layer 所構成。 
 
Virtual Objects 
Controller Shaders Behaviors 
Content 
La er
    
Plugin Render 
Engine 
Behavioral 
Engine 
Software 
Engine 
Layer 
    
3D Tracker 
API 
Direct3D OS API 
Hardware 
System 
Layer 
圖 6 系統架構 
 
本研究之水墨畫風格成像的成果，主
要表現在水墨金魚的實作中。根據水墨畫
金魚的筆劃結構，建立金魚之 3D 模型，
再加以水墨畫風格成像，與筆觸 texture
之合成，實現水墨金魚之視覺效果。圖 7
與圖 8 為成像之結果。 
 
圖 7 原始物件與水墨畫風格成像 
 
 
圖 8 水墨畫金魚之成像結果 
 
 12
[5] Gao Ling Mei, “Chinese Painting by 
Chang Da-Chien,” Published in 1988 by 
Art Book Co., Ltd.  
[6] Aaron Hertzmann, “Painterly Rendering 
with Curved Brush Strokes of Multiple 
Sizes,”  Proceedings of SIGGRAPH 98, 
pp. 453-460, 1998. 
[7] Hertzmann,A.,and Zorin, D. “Illustrating 
Smooth Surfaces.” Proceedings of 
SIGGRAPH 2000, Computer Graphics, 
Annual Conference Series, pp. 517–526. 
[8] Victoria L. Interrante. Illustrating Surface 
Shape in Volume Data via Principal 
Direction-Driven 3D Line Integral 
Convolution. Proceedings of SIGGRAPH 
97, pp. 109–116, August 1997. 
[9] Lake, A., Marshall, C., Harris, M., and 
Blackstein, M. “Stylized rendering 
techniques for scalable real-time 3d 
animation.” Proceedings of NPAR2000, 
pp.13–20. 
[10] Jintae Lee, “Simulating oriental 
black-ink painting”, IEEE Computer 
Graphics & Applications 1999; 19(3): 
pp.74-81. 
[11] Jintae Lee, “Diffusion rendering of 
black ink paintings using new paper and 
ink models”, Computer & Graphics 25 
(2001), Page 295~308.  
[12] Peter Litwinowicz, “Processing Images 
and Video for An Impressionist Effect,” 
Proceedings of SIGGRAPH 97, 1997. 
[13] Yung Liu, “Ten Thousand Mountains,” 
Published in the United States in 1984 by 
Shui-Yun-Chai Studio, pages 56–73 East 
Hampton Boulevard, Bayside, New York 
11364. 
[14] Markosian,L.,Kowalski,M.A.,Trychin,S
.J.,Bourdev,L.D., Goldstein,D.,and 
Hughes, J. F. “Real-time nonphotorealistic 
rendering.” Proceedings of SIGGRAPH 
97, pp. 415–420. 
[15] Yutaka Ohtake, Masahiro Horikawa, 
Alexander Belyaev. “Adative smoothing 
tangential direction fields on polygonal 
surfaces”. Computer Graphics and 
Application, 2001 Proceedings of 9th 
Pacific Conference. pp. 189-197. 
[16] Praun,E.,Hoppe,H.,Webb,M.,and 
Finkelstein, “A Real-Time Hatching”. 
Proceedings of SIGGRAPH 2001, 
Computer Graphics, Annual Conference 
Series, pp. 579-584. 
[17] Suguru Saito and Masayuki Nakajima, 
“3D physics-based brush model for 
painting", Proceedings of SIGGRAPH 
99:conference abstracts and applications, 
Page 226 August 8 - 13, 1999, Los 
Angeles, CA USA. 
[18] Salisbury,M. P.,Wong,M. T.,Hughes, J. 
F., and Salesin,D. H. “Orientable textures 
for image-based pen-and-ink illustration”. 
Proceedings of SIGGRAPH 97, pp. 
401–406.. 
[19] Sousa, M. C., and Buchanan, J. W. 
“Observational model of blenders and 
erasers in computer-generated pencil 
rendering.” Proceedings of Graphics 
Interface ’99, pp. 157–166. 
[20] Sousa,M. C.,and Buchanan,J.W. 
“Computer-generated graphite pencil 
rendering of 3d polygonal models.” 
Computer Graphics Forum, Vol.18, No.3 , 
pp. 195–208, 1999. 
[21] Steve Strassmann, ”Hairy Brushes,” 
Proceedings of ACM SIGGRAPH 86, pp. 
225-232. 
[22]  Der-Lor Way, Zen-Chung Shih, “The 
synthesis of rock textures in Chinese 
landscape painting”. Computer Graphics 
Forum, Vol. 20, No. 3, pp. C123-C131, 
2001.   
[23] Der-Lor Way, Yu-Ru Lin, Zen-Chung 
Shih, “The synthesis of trees in Chinese 
landscape painting using silhouette and 
texture strokes”, Journal of WSCG  
Volume 10, Number3,2002, pp. 499-507. 
[24]  Sheng-Wen Huang, Der-Lor Way, 
Zen-Chung Shih, “Physical-Based Model 
of Ink Diffusion in Chinese Ink Paintings”, 
accepted and to appear in Proceedings of 
WSCG 2003 conference. 
 14
[44] Claes, J., Di Fiore, F., Vansichem, G. 
and Frank van Reeth, F. Fast 3D Cartoon 
Rendering with Improved Quality by 
Exploiting Graphics Hardware. 
Proc. of Image and Vision Computing 
New Zealand (IVCNZ) 2001, pp. 13-18. 
[45] Freudenberg, B., Masuch, M. and 
Strothotte, T. Walk-Through Illustrations: 
Frame-Coherent Pen-and-Ink Style in a 
Game Engine. Computer Graphics Forum 
(Proc. of EuroGraphics '01), pp. ?--?.  
[46] Lake, A., Marshall, C., Harris, M. and 
Blackstein, M. Stylized Rendering 
Techniques for Scalable Real-Time 3D 
Animation. Proc.of NPAR '00, pp. ?--? 
[47] Mohr, A., Bakke, E., Gardner, A., 
Herrman, C. and Dutcher, S. NPRQuake 
(2000) 
[48] Lander, J. Under the Shade of the 
Rendering Tree. Game Developer 
magazine, Feburary 2000. 
 
