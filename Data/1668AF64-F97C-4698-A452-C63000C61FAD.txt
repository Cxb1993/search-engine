中文摘要 
 
推薦系統的主要概念在於能夠從大量的資料中搜尋並推薦使用者合適的解答。而推薦系統
可以區分為三類：「協同式」、「內容導向」以及「知識導向」推薦系統，其中知識導向推薦系統
主要用於知識性的資訊或知識性商品的推薦。知識導向推薦的特色在於引導使用者描繪出自身
的需求，並且推薦系統透過知識庫幫助使用者推薦產品。為了瞭解使用者的需求，通常都會利
用問卷或是對話框( Dialog )與人互動，系統必須具備推理能力將互動的回饋解釋轉換成使用
者的喜好，藉由使用者的限制條件進一步計算出滿足使用者需求的答案。 
本計畫的研究目的在於應用知識導向推薦機制於劇本互動式軟體代理人系統中，並且以網
路小說社群為例，實作 eNovelAdvisor 軟體代理人。對於讀者而言，面對網路上大量的創意作品，
往往僅能透過作品分類、線上排行以及簡單的搜尋條件讓系統列出作品清單，然而讀者面對清
單也不知該如何挑選。其實讀者挑選知識性商品時，若作者能夠解說與推薦，相信能讓讀者正
確地找到合適的作品。當系統初步挑選可能的小說清單後，讀者可以透過與 eNovelAdvisor 進行
互動，其互動模式必須包含「問卷」以及「解說」。其中，eNovelAdvisor 以問卷方式可以獲得
讀者互動過程的回饋資料，而回饋資料將由 eNovelAdvisor 導入 Knowledge-based filtering，來再
次過濾出合適的小說，當讀者挑選了適合的作品之後，可以要求 eNovelAdvisor 對該作品進行解
說，以便加強讀者對該作品的忠誠度。 
關鍵詞：推薦系統、知識導向推薦機制、互動式代理人、eNovelAdvisor 
 I
1. 前言 
由於網際網路的成熟，使得資訊的交流
變的更輕易，加上Web2.0主張分享無國界的
觀念，許多個人化服務空間蓬勃發展，凡舉
網路寫作分享空間、個人部落格社群等，然
而從另一角度來看卻也造成使用者必須時常
面對大量資料，靠自己的能力找出符合所需
的資訊，一旦資訊呈現太過單薄或者使用者
不完全了解自己的喜好是什麼時，單純利用
關鍵字搜尋程式並不易過濾出合適的資訊，
因此通常花費許多時間去過濾資訊。 
近年來許多研究探討如何設計一套推薦
系統(Recommender System)引導協助使用者
辨識符合需求或者興趣的物品，解決審視能
力不足的困境，因此本研究的目的設計並提
供一個推薦系統，能夠適合現今部落格文章
或網路小說的推薦。 
一個推薦系統通常都會有建置使用者模
組 (User-model construction) 和 產 生 推 薦
(Recommendation generation)兩個階段[1]，因
為需求因人而異，所以從使用者獲得一些資
訊來當作推薦根據通常是推薦系統的第一步
驟，有了使用者資訊再藉由過濾機制配合演
算法推論出可能的結果，因此推薦系統涵蓋
了資訊擷取(Information retrieval)和人工智慧
(Artificial intelligence)的技術，跟據不同的使
用者模型資料就會有不同的過濾演算法，而
推薦系統的方法發展至今大可分為三種，分
別 是 合 作 式 過 濾 (Collaborative 
filtering)[2,3]、內容導向過濾 (Content-based 
filtering)[4]和知識型推薦 (Knowledge-based 
recommender)[5,6,7,8]，其中知識型推薦的優
點在於系統必須與使用者互動，協助使用者
貢獻出自己對於商品的知識，讓系統協助使
用者找尋想要的資訊，使用者不必長期使用
系統，建構自身的喜好模型，也能夠達到推
薦的效果。 
知識型推薦適用於金融商品以及數位產
品等較為複雜的商品。然而網路小說、部落
格文章並不像相機和電腦等等規格明顯的物
品，能夠以量化的特徵值來描述其商品內
容，本研究加入互動式動畫代理人(Embodied 
Conversational Agent, ECA)作為使用者與系
統之間互動的介面。ECA目的在於提供擬人
化的溝通技巧[9]，例如：肢體語言、情感、
言詞的語調以及說話的方式，以便在虛擬環
境中讓使用者可以更了解系統所傳達的訊
息，過去ECA也在許多領域(例如：數位教學、
數位娛樂以及數位醫療等等系統)被用來協助
人與電腦系統之間的溝通。先前的研究中，
本研究團隊已經設計並且開發一個標記語言
用以描述並動畫代理人的行為，稱為互動式
劇本標記語言 (Interactive Drama Makeup 
Language, IDML)[10]，網路小說作家能夠依
據IDML編寫出想展示讀者的廣告，當系統推
薦讀者作品時，讀者可以透過廣告來加以判
斷對該項作品的喜好程度。 
 
2. 文獻研討 
目前常見的推薦系統在方法上分成三
種： 
 合作式過濾(Collaborative filtering)。合作
式過濾的特色在於搜集使用者對物品的
評價 (Rating score)當作主要的推薦依
據，為了縮小範圍提升準度，通常會將
使用者給予過的評價視為表示該使用者
興趣的模組，藉此就可以找出相同興趣
的使用者族群，預測對某物品可能的評
分。例如：兩個買過幾本相同書籍的顧
客，對於這些書籍的評價都是相近的，
那麼系統就會推薦其中一人有購買且評
價高分的書給另外一名沒有購買的顧
客。這種推薦機制的好處是有機會能夠
推薦使用者意想不到的產品。而缺點在
於推薦的精準度必須仰賴大量的歷史資
料，以 1及系統無法判別新使用者的興
趣，將使用者作歸類動作，並且當有新
產品推出時，沒有人給予評分，這項產
                                                 
 
 1
方法。3.1描述如何選取小說的特徵，當作將
小說轉換成多維度資料點的屬性。3.2介紹在
推薦流程剛開始時，利用K-Means分群法來
協助使用者快速找尋合適的小說。3.3說明如
何動態產生使用者可能的評論，好讓使用者
給予回饋達到下一步推薦，以及所使用的演
算法Apriori。 
 
3.1 特徵值選取 
    小說和部落格文章等諸如此類的推薦物
品是屬於個人化的資訊，並且給每個讀者的
看法觀點皆不同，所以在推薦的過程裡無須
經過使用者需求與物品資訊的轉換，如同內
容式導向推薦的作法，直接取物品的特徵即
可反應使用者的喜好，我們在特徵值的選取
和定義上秉持兩個原則： 
 特徵要能反映物品內容，區別出和其他
物品不同所在：不同類型的物品就會有
不同的特徵，但特徵要能普遍適用於同
一類型的物品，反映物品之間的差異，
如此一來使用者或多或少能夠了解物品
的不同之處，系統也能夠去判別之間的
差異，協助使用者找尋所要找的結果。 
 對於每一物品特徵值的給予要能公平公
正：所謂的公平公正是指必須經過一個
共通且誤差小的手續去產生此物品的特
徵值，特徵值反應的是對小說的內容感
受程度，因此很難用邏輯方式來界定差
異，且由於人人觀點看法不同，特徵值
不能只依賴極少數人的觀感來評定，所
以我們利用大眾讀後的感想來評定協調
每個物品的特徵值，作家再一開始會先
給予基本特徵值，之後讀者可以再近一
步的分享對這篇小說的看法，讓物品所
呈現出來的觀感達到一個妥協。 
 
3.2 相似尋找 
   有了物品特徵能夠區別物品差異並且展
現使用者喜好後，我們即可利用系統判別找
尋出類似的小說，在推薦流程的初始，系統
會詢問使用者理想中小說可能具備的特徵，
藉由這樣的資訊當作找尋的依據，我們使用
了一個分群的演算法稱作K-Means，協助我們
找出具有類似特徵、差異較小的小說。在資
料挖掘裡分類的演算法又分為兩種類型，分
別是監督式學習(Supervised learning)和非監
督式學習(Unsupervised learning)。監督式學習
意指利用已知現有分類好的資料，來對新資
料做比對分類的依據，主要特性是必須透過
訓練資料(Training set)來界定出類與類之間
的界線，以便對新進來的資料做分類的動
作，屬於這種學習的方法，我們一般統稱為
分類(Classification)。而非監督式學習則是事
前完全不知道分類的標籤，憑著量測資料與
資料之間的相似度(Similarity)，或稱做距離
(Distance) ， 來 對 整 體 資 料 做 建 立 分 群
(Clustering)的動作。介紹了以上兩種類型方
法，針對而我們推薦流程，為了達到讓系統
協助使用者即時區分物品差異的目的，因此
我們選用非監督式學習的分類法，而K-Means
就是非監督式學習類型的分群方法之ㄧ。
K-Means演算法有以下六個步驟： 
Step1：首先決定分群數目。 
Step2：隨機決定各群組之群聚中心。 
Step3：計算各點資料與各群組群聚中心之距
離。 
Step4：找出最鄰近的群聚中心並且分類到該
群組。 
Step5：重新計算各群組的群聚中心。 
Step6：倘若群聚中心沒有改變，或更新幅度
小於容 
忍值則結束演算法，否則重複Step3.4.5.6。 
K-Means演算法對於找出資料有明確集中的
地方具有不錯的成效，因此我們希望藉此找
出跟使用者理想資料點最鄰近的群組資料作
為推薦的備援。而在一開始的分群數目不僅
決定分群數目，也會影響分群集合的大小，
因此我們可以把它視為使用者對於找尋相似
小說的容忍度，或許分群數目越大，所找出
來的結果就會越少越鄰近，相反的分群數目
 3
器，瀏覽找尋天使帝國裡的小說，當收到推
薦或者對某篇小說有興趣時，就能下載該小
說的廣告，利用天使帝國提供的播放器呼叫
ECA 展示廣告內容。而最後一部份就是天使
帝國虛擬網路社群的推薦機制，此推薦包含
兩個模組，分別是相似小說尋找(Similarity 
finding)和評論產生(Critiques generation)，這
兩個模組裡面都存在一個或多個演 
 
圖 6. 系統架構圖 
算法，配合存取資料庫的資料去計算出可能
的結果，進而回饋給讀者。 
 
4.2 系統介紹 
當作家撰寫完小說時，即可透過圖 7 的
IDAT 編輯屬於自己小說的廣告劇本，IDAT
可分兩區塊，介面右邊是分幕操作區塊，介
面左邊是場景圖形化區塊。使用者可以非常
容易的建構 ECA 的互動流程劇本，撰寫完以
後即可將劇本上傳至天使帝國虛擬網路社群
的資料庫裡。 
 
圖 7. IDAT 編輯器介面 
    之後當讀者在瀏覽天使帝國找尋想閱讀
的小說時，即可透過圖8推薦頁面，描述出自
己理想中的小說內容，然而天使帝國的小說
共有九種類型，我們根據這九種類型設計出
屬於每類的特徵，例如言情類可以調整悲劇
喜劇、角色關係等特徵，靈異類則讓使用者
調整懸疑程度、驚悚或溫馨等特徵。而特徵
值在定義的時候，我們將每個特徵分為五個
層級的特徵值，其中以第三級當作預設值也
是平衡級，好比很差、差、普通、好、很好，
但是高層級與低層級代表的是相反矛盾的意
義，並不僅僅只有單向思考。 
 
圖 8. 天使帝國推薦頁面 
我們以這樣的概念設計特徵，讓使用者
可以快速簡易的填入自己的喜好，經過轉換
就可以形成一個虛擬的理想資料點，系統將
會利用K-Means演算法配合使用者所給予的
模糊度當作分群的數目將此類小說做分群動
作，並且計算理想小說距離哪一群組最近，
則將此群組的小說根據與理想點的相似度列
表給使用者看，如圖9。 
 
圖 9. 推薦結果列表 
    讀者即可挑選所喜愛的小說，點選觀看
小說廣告，作家所設計的廣告劇本，就會被
ECA讀取，進而與使用者作展示互動，如圖
10，倘若展示完卻對這部小說沒興趣，則ECA
會詢問使用者感受，提供使用者互動按鈕，
像是「長度更短」、「對白較多」這樣的特
徵描述讓使用者作微調的動作。系統會先前
所找尋出來的同一群組結果裡作調變，倘若
 5
 7
[11] Robin Burke , The Wasabi Personal 
Shopper: A Case-Based Recommender 
System , Proceedings of the 11th 
Conference on Innovative Applications of 
Artificial Intelligence , 1999 . 
[12] Alexander Felfernig , Gerhard Friedrich 
and Lars Schmidt-Thieme , Recommender 
Systems , IEEE Intelligent Systems ,  
May/June 2007 
[13] J. Reilly, K. McCarthy, L. McGinty, and B. 
Smyth , Dynamic critiquing , In 
Proceedings of the 7th European 
Conference on Case-Based Reasoning 
(ECCBR-04), pages 763–777. Springer, 
2004. Madrid, Spain. 
[14] J. Zhang and P. Pu , A comparative study 
of compound critique generation in 
conversational recommender systems , In 
Proceedings of the 4th International 
Conference on Adaptive Hypermedia and 
Adaptive Web-Based Systems (AH 2006), 
pages 234–243. Springer, 2006. Dublin, 
Ireland, June 21-23, 2006. 
[15] 天 使 帝 國 虛 擬 網 路 社 群  , URL : 
http://angelcity.idv.tw/ 
 
三、建議 
 
目前國內的資訊網路大多將重點放在 3C 電子設備的代工，少數如 ACER、ASUS 以及
HTC 有考慮到硬體與網路應用的結合，雖然 HTC 近年來積極發展智慧型手機以及相關的
應用，然而需要國內的電信業龍頭(如中華電信)能夠更加積極提供網路服務的基礎建設，
否則國內業者僅負責為國外大廠作 OEM 或 ODM，將無助於台灣未來佈建實質的網路服
務架構。此次在韓國首爾，看到許多行動通信用戶在搭乘大眾捷運時有使用行動裝置收看
電視新聞或是電視節目的習慣，可見得韓國人已經習於融入行動通信的生活中，要達到這
樣的效果端賴於政府能夠降低電信費率以及完整的網路服務應用的提供，也因此帶動韓國
企業投入於行動通信的硬體開發，使得近年來韓國的電子產品逐漸站穩全球的市佔率，這
正是國內的業者必須去正視的現狀。 
 
四、攜回資料名稱與內容 
 
ICUIMC 2009 論文集電子檔 CD 一片 
typical user interfaces with simple widgets, for example buttons. 
Furthermore, general users prefer to have a simple mechanism to 
design interactive narrations between ECAs and audiences. They 
hope to create an interactive process that enables the audience to 
affect the motions of an ECA and enables the ECA to present 
different dialogues according to the audience’s action.  
In this paper, we propose an XML-based interactive drama 
markup language (IDML) that allows general users to create 
ECA-based user interfaces without learning primitive 
programming languages. For the animation of ECA, IDML 
follows the principles of the current researches to support high-
level avatar motions. The tagging structures of the IDML not only 
provide tags for scripting ECA motions, but provide tags for 
rapidly generating graphical interfaces. Moreover, IDML 
integrates the concept of the Interactive Drama [13-15] to allow 
general users to design interactive narrations on the software 
application where the audiences are main characters to directly 
influence the events in a story. 
In [14], an interactive drama is conceptually composed of 
several acts, and each of acts is composed of several scenes. 
Therefore, an interactive drama provides multiple branching 
narrations. Each narration is run by an event to move the plot 
forward as a whole [16,17]. Therefore, an interactive drama 
written in IDML has a hierarchical structure consisted of one 
Drama Blocks, a set of Act Blocks, and a set of Scene Blocks. 
When scripting an interactive drama written in IDML, a story 
consisted of branching narrations must be firstly designed. Then a 
drama block written in IDML is to represent and generate GUIs 
with a set of buttons for the audience to recount sequence of 
narrations in the designated story. The drama block also has tags 
to link several branching narrations in terms of act blocks. The 
concrete of an act block is the presentation of a sequence of the 
ECA motions. Each of ECA motions is represented in individual 
scene block that is the smallest unit of an interactive drama.  
In order to give the general user’s relief from learning XML, 
this study also provides a visual tool for authoring interactive 
dramas. The authoring tool provides visual windows consisted of 
GUI widgets to facilitate generations of interactive dramas in 
IDML. Through this authoring tool, general users can reduce time 
and effort to learn IDML and easy to create the ECA-based user 
interfaces. 
The remaining paper is organized as follows. In the section 2, 
an overview of the Interactive drama is given. Section 3 
introduces the hierarchical structure of IDML and its tagging 
structure. In section 4, we present a visual authoring tool for 
IDML. Section 5 provides conclusions and future research 
directions. 
2. Related word 
In this paper, the markup language, IDML, provides XML tags 
for scripting high-level ECA motions and further provides tagging 
structures for generating GUIs. IDML referred to the concept of 
Interactive drama to develop a hierarchical structure that enables 
general users to design branching narrations between ECAs and 
audiences. Interactive drama has been applied on storytelling 
system and commercial computer game system [18,19]. The 
interactive drama allows the author enough flexibility to write a 
story that he desires to tell, while at the same time provides the 
audience appropriate freedom to directly influence the narration 
content [15]. Moreover, in order to assist the author easy to write 
and maintain the story, interactive drama divided the story into 
hierarchical structure consisted of Drama, Act and Scene. Fig. 1 
shows the hierarchical structure of the interactive drama. 
 
Figure 1. The hierarchical structure of the interactive drama. 
Through this structure, authors can apply first-person dramatic 
experience to produce a story within branching narrations, to 
orchestrate control events and characters, and to adjust narration 
flows according to the user’s interactive actions with the system. 
3. Hierarchical structure of IDML 
Based on the concept above, IDML supports three types of 
script blocks in XML tagging structures: Drama block, Act block, 
and Scene block. Our terminology is referred to dramatic terms. In 
the narration phase, the author uses drama block and act block to 
script the story and the branching narrations which are carried out 
by act blocks. Drama block supports specific XML tags to specify 
the starting act block and XML tags to link a super act block and 
its children. Then in the scene phase, individual ECA and his 
action is scripted in each scene block. The sequence of coherent 
scene blocks is scripted in the act block. The remaining parts of 
this session will describe three blocks in detail. In order to 
enhance the description of three scripts, the XML notations of 
Altova XMLSpy [20] shown in Fig. 2 is used to help structural 
illustrations of three blocks. 
 
Figure 2. The XML notation of Altova XMLSpy. 
Fig. 6 is a simple example for an act block. In this narration, the 
ECA orderly displays two motions. Two motions are scripted in 
two scene blocks where identification numbers are SB11 and 
SB12 respectively. 
3.3 Scene Block 
 
Figure 7. Tagging structure of scene block. 
A scene block is used to script the presentation of an ECA. Fig. 
7 shows the tagging structure and the DTD of scene block script. 
A script of scene block begins with the <SB> element and ends 
with </SB> element. The <SB> element has SB_id attribute to 
specify the unique identification number of the scene block. The 
general information of the scene block is able to be specified with 
the <annotation> element. The <actor> element specifies the 
involved ECA. In this study, the animated characters are based on 
Microsoft Agent animation engine. If one installed the family of 
Microsoft Windows systems, he can have several default 
Microsoft agents and each of agents has the unique name. The 
<behaviors> element has four sub-elements, including <motion>, 
<speech>, <reference> and <pause>. The <motion> and the 
<speech> are two elements for scripting an ECA’s presentation. 
Microsoft provides relevant function library compliant with 
several programming languages for programming Microsoft 
agents. The primitive functions for Microsoft agents have been 
abstracted in high-level motions in this research, for example 
Blink, Sad, Greet, Read, LookDown, etc.  
Therefore a high-level motion can be specified by the <motion> 
element. The <reference> is optional element to specify the 
necessary external objects such as movie clips, audio files, or 
other text files. When orderly running external files, the 
synchronization problem must be concerned. The scene block 
provides the <pause> element to interrupt script execution for a 
specified amount of time. Currently, the <pause> element is 
specified by manually setting time interval. Through the <pause>, 
an external file is run until its previous one was finished. We 
execute the above-mentioned examples of each block to show the 
final view of the ECA in Fig. 8. 
 
Figure 8. The final view of the ECA. 
4. IDML Authoring Tool 
 
Figure 9. IDML authoring tool. 
It is not easy for an author who is not XML professional to edit 
interactive dramas written in IDML. We provide alternative 
approach to edit interactive dramas by using a visual authoring 
tool. This visual tool must serve the following requirements: 
 If a story is complex, this story may contain a number of 
narrations. The visual tool is capable of showing the 
structure of the story. 
 The structure of the story must illustrate the relation map of 
narrations and each narration is depicted in a visual block. 
 When adding or deleting a narration, the structure is able to 
be repainted immediately. 
 The visual tool must provide GUIs for author to easily 
create, delete, and modify three kinds of IDML blocks. 
Fig. 9 is a screenshot of IDML visual authoring tool. Current 
version is running on Microsoft Windows system. The window-
style layout of this visual tool will help authors to be used to 
manipulate. While creating a new “Drama” from the top panel of 
the visual tool, a canvas will be generated. After adding a 
narration (i.e. act block), a rectangle visual block with 
identification number will be represented the act block and 
depicted in the canvas. While describing an act block is one child 
of another act block, a visual line will be automatically depicted 
to link two act blocks. Besides visual mode, this visual tool also 
supports source code mode for authors to view and directly 
modify the source of the drama. Moreover, this visual tool also 
provides functionality for authors to preview the edited ECAs. 
