 2 
不同的領域中取得認證與授權，當同儕間需
要合作時，但卻無共同的認證架構或是信任
(trust)的基礎。此外，網路中的每個同儕，皆
具有識別標記(identifier)，讓網路中的人能夠
尋找。所以我們將專注於以身份基礎
(identity-based)，同儕網路中認證的機制的設
計，讓網路中的同儕能協議(agree)共同的密
鑰(shared secret Key)，能夠在接下來的應用
中使用，近而達到機會性合作(opportunistic 
collaboration)。 
II. 預期的架構 
為了理解真實同儕網路的架構與其運做方
式，我們將用P2P-SIP(SIP over P2P)當範例研
究，在其中部署(employ)認證與授權機制，設
計需要的協定 (protocol)：利用系統中心
(Security authority)發給P2P-SIP用戶代理人
(user agent)的認證標記(token)，達到以下兩個
目標：一、使P2P-SIP用戶代理人(user agent)
之間能雙向認證(mutual authentication)，並建
立共同密鑰以供接下來的應用或服務使用。
二、使P2P-SIP用戶代理人能和認證中心
(authentication authority)相互認證，而認證中
心能藉此收費並管理用戶代理人。之後再進
一步的思考其他重要的應用，並附與它認證
與授權所需要的架構與協定。 
 
III.  設計原則/方法 
1.具隱含驗證的公開金鑰(implicitly certified 
public key)：公鑰非直接的存在於憑證中，
而是需要使用者和系統中心聯合產生的公
鑰重建資料(reconstruction data)重組產生，
以下將介紹兩個使用「具隱含驗證公開金
鑰」最有名的兩個系統，並結合其特性，
以達我們要目標： 
1.1身分基礎的公開金鑰(公鑰)系統：身份基
礎的公開金鑰系統是由Shamir在1984年提
出，最大的特色是以使用者的識別標記
(identifier)為公鑰，對應的密鑰則由系統中
心算出。此系統的優點在於系統中心所需
儲存的參數較傳統憑證基礎的密碼系統少
很多。而壞處在於系統中心知道每個人的
識別標記，系統中心能偽裝成任何人而不
被發現，而且過程中認證中心發給使用者
的認證標記(或是私鑰)需要透過安全的管
道傳送，一般而言不容易達到。此系統架
構在2003年由Boneh和Franklin利用Weil對
達到身分基礎的公開金鑰系統，利用橢圓
曲線密碼學(Elliptic curve cryptography)，讓
更短的金鑰能有更強的安全強度，進一步
節省計算和通訊成本。
 
 
1.2自我認證(self-certified)公鑰系統： 
自我認證公鑰系統是由Girault在1991年提
出，並且定義了公開金鑰系統的三個信任
層次如下： 
1 系統中心知道所有使用者的密
鑰，且在任何時候都可以假扮
任何使用者而不被發現 
2 系統中心不知道使用者的密
鑰，但是仍可以假造出不合法
(存在)的使用者而不被發現 
3 系統中所有的詐騙行為(或是
假扮行為)都會被偵測出來 
同時Girault提出達到信任層次三的系統，優
點在於系統中心不知道使用者的密鑰(基於
離散對(discrete logarithm)的問題)，而系統
中心必需要使用者提供的資料才能算出公
鑰，所以系統中心無法偽造特定使用者的
公鑰，而使用者可經由驗算公鑰的正確及
有效性，所以系統中所有的假造行為都會
被偵測出來。此系統最大的特色也是優點
在於公鑰即憑証，且公鑰的驗証可以延遲
至其他密碼運算是一併完成，讓計算成本
和通訊效率更好，並能有效的防止系統中
心的詐騙行為。 
 4 
個被稱做 UCONabc [12]的使用性控制模組。
這個模組產生三個元件：授權、契約和狀態。
這 三 個 元 件 和 屬 性 多 變 性 (attribute 
mutability)結合，將可以適當的描述使用性
控制策略。 
    在這方面的成果，我們想要建構一個基
於 UCONabc framework ，並可用於數位家庭
多媒體應用的具體使用性控制模組，以及使
用一個時間性邏輯模組檢查器，J-Mocha ，
來驗證根據我們設計的模組所寫出來的使用
性控制策略是否正確。  
 
方法 
 第一，我們想要嘗試發展一個對於多媒體
使用性控制策略的具體型式。藉由分析不
同的處理行為，舉例來說像是一個小孩只
被允許在父母規定的特定時間及位置觀
看電視，我們找出多媒體使用性控制策略
的必需元件，再將這些必需元件與那些在
UCONabc 架構內的元件互相比較，因而
開發出一個具體的策略模型。圖一是使用
UML 呈現多媒體使用性控制策略的必需
元件。 
 藉由時態邏輯檢核方法分析使用性控制
模型，我們想要達到以下兩件事情： 
  不連續性檢核：它能找出在那些可能導
致錯誤例子的策略所產生的矛盾。 
  使用性條件分析：它能發現一個或多個
例子的集合，這些例子符合一組的策略。 
結果 
我們選擇使用時態邏輯檢核軟體J-Mocha來
驗證我們的策略是否正確，並使用UNITY這套
程式規範語言來表達我們的策略。我們初步
的研究顯示出使用性控制策略的規格需要複
雜的資料結構，而這些資料結構在通常二元
決策圖為主的模型檢核軟體是沒有被提供的
Figure 1. UML Diagram of Multimedia Usage Control Policies 
-name : string(idl)
-rating : RATINGS
-length : short(idl)
-paytype : PAYMENT_TYPES
-usageNum : double(idl)
-isUsing
Multimedia
-Name : string(idl)
-Availability : boolean(idl)
Device
+G
+PG
+PG-13
+R
+NC-17
+NR
<<enumeration>>
RATINGS
+Bedroom
+Living Room
<<enumeration>>
LOCATIONS
+Play
+Edit
<<enumeration>>
OPERATIONS
+is_adult() : boolean(idl)
-name : string(idl)
-age : short(idl)
-credit : double(idl)
-location : LOCATIONS
-priority
User
+payment_agreement() : boolean(idl)
+update_credit() : double(idl)
+use_device() : boolean(idl)
-curTime
-operation : OPERATIONS
-devLocation : LOCATIONS
Usage
*
-End1
*
-End2
+Free
+Pay-Per-Use
+Pay-Per-Second
<<enumeration>>
PAYMENT_TYPES
-End3
*
-End4
*
-value : double(idl)
Payment
End1
End2
End34
 6 
Client Peer
Peer
Peer Peer
Peer
Peer
Peer
Client
Client Client
Client
Client
Client
Client
Client
Client
Bootstrap 
Server
Authentication 
Server
 
圖三、P2PSIP 同儕網路的階層架構圖 
多個不同的 P2PSIP 網路與傳統的 SIP 網域
(domain)相互連結後稱做 P2PSIP 網路聯盟
(federation)，如下圖所示。一個 P2PSIP 網路
會包含一個以上的 SIP 網域，並且會有 P2P
代理伺服器與其他網路聯繫，若要尋找的資
源不在同一個網路裡時，就會透過 P2P 代理
伺服器去詢問，甚至利用類似 DNS(domain 
name system)的方式查詢。 
P2P Overlay DNS
           P2P Overlay
SIP Domain
SIP 
Domain
SIP Domain
P2P Overlay
SIP Domain
SIP 
Domain
             P2P Overlay
SIP Domain
SIP 
Domain
Proxy
P2P User Agent
User Agent
P2P Proxy
圖四、P2PSIP 網路聯盟 
 
 以 JXTA 為同儕網路的基礎平台 
我們選擇 JXTA 來建構同儕疊代網路，JXTA
是一個專為同儕網路而設計的開放式網路平
台。JXTA 提供了一系列基本的開放式協定
(open protocol)和一個發展同儕網路應用程
式的平台。JXTA 的架構圖如下： 
JXTA Core
Core Services 
Indexing 
Searching
Sun Services 
Prensence CMS
3rd Party 
Services
Sun JXTA
Applications
3rd Party 
Applications
JXTA Shell 
Peer cmdsApplications
Applications
ServicesServices
CoreCore
Security
Peer Groups Peer Pipes
Peer 
Monitoring
PeersPeers
 
圖五、JXTA 架構圖 
下面介紹 JXTA 中的幾個基本單元： 
公告(advertisement)是用來描述 JXTA 網路裡
各種網路資源的 XML 文件，所描述的網路資
源包括同儕節點、同儕節點群組、管線
(pipe)、及服務等。同儕節點要先搜尋到該項
資源的公告，再藉由公告裡的資訊來取得並
使用該項資源。 
同儕節點群組(peer group)是一群擁有共同特
徵的同儕節點的集合。同儕節點群組是由同
儕節點自行組織而成的，每一個同儕節點可
以同時屬於多個同儕節點群組，提高了許多
彈性。 
集結節點(rendezvous super-peer)是一個擁有
額外功能的同儕節點，它會快取(cache)一些
同儕節點的公告的索引(index)，並且傳遞「發
現要求」(discovery request)，幫忙其他同儕節
點尋找資源。每一個集結節點都會維護一份
清單，裡面記錄著它所知道的其他集結節點
以及它所服務的同儕節點，集結節點之間會
利用不嚴謹同步(loosely-consistent)的DHT 來
協尋網路上的資源。同儕節點會將「發現要
求」傳給集結節點，集結節點則會幫忙傳遞
這個要求給其他的集結節點與同儕節點，直
到有同儕節點能夠回應這個要求或者要求逾
時為止。 
以下圖為例，下半部為實體網路 (physical 
 8 
III. 設計原則/方法 
 Erasure Correction Codes (ECC) 
當現在的網路的遺失率很高的時候，如果傳
送的封包仍然是將一整個畫面放到一個封包
的方式傳遞的話，可想而知因為由於每一個
封包所含有資訊較多，因此當遺失一個封包
時，所需要付出的代價是十分的高的。而另
一方面想像一下在上下載頻寬差異很大的情
形，假若要傳一個為 450KB/秒的畫面，而上
載頻寬卻只有 56KB/秒，因此可以清楚發現
到我們根本無法使用到現有上載頻寬來傳
輸，如果傳輸單位是用 450KB/秒的畫面來傳
的話。 
由上面二個描述可以發現到傳輸的基本單位
應該要變小，而我們叫這些較小的傳輸單位
為 stripe。在 Trickle 中使用 Erasure Correction 
Code(ECC)的方式來產生許多的 stripe，而下
面是產生 stripe 的過程設，假設原始資料大小
為|F|，而我們利用 ECC 產生|P|同位元檢查
碼，而 F 和 P 之間符合了美好的數學的性質，
我們 FoP切成 n 等分，而每一個等分的大小
為
|F|+|P|
n
，而這每一個等分就為一個
stripe，我們可以看的出來每一個 stripe 的大
小遠比我們的原始資料小很多，因此我們遺
失封包時所損失的資料量變小了許多。而我
們重整F時我們只要收到這 n個 stripe中的任
m 個 stripe 就可以還原，而這 m 個 stripe 的總
共資料量大約是原始資料量的(1+ε)倍。 
 
圖七：利用多個樹狀結構(Tree Structures) 
做資料的轉寄(Data Forwarding)。 
 
圖八：Helper 節點概念圖。 
 Multiple Trees 
SplitStream 是第一個提出用 Multiple Tree 來
傳送我們的資料，而我們利用 Multiple Tree
來傳送我們的資料，主要的用意是希望我們
能夠產生不同的傳輸路徑。而這一類的應用
層多點傳播的服務，首先都將資料切成小的
片段1，而對於每一個片段我們利用不同的傳
輸路徑傳到使用者上，而使用不同的傳輸路
徑主要是為了風險分擔的考量，當我們傳送
一些多餘的資料藉由不同的路徑傳輸，我們
只會有一少部分的資料會遺失掉，因此不同
路徑的傳輸使我們避免掉了 single point 
failure 的問題，而使得我們的系統更有彈性，
因此在我們的系統 Trickle 中，我們也用到了
Multiple Tree 的概念。 
(1)  Multiple Trees 和  ECC 相結合使
用 
Trickle 利用了 ECC 和 Multiple Tree 的
方法做了很緊密的結合，使得每一個
使用者分別從不同的路徑上得到一小
段的資料，而一個使用者只要能夠得
到足夠多的這些小片段的資料就可以
還原原始的資料，而這樣子的傳送方
式使得我們更有彈性的能夠對抗封包
的 遺 失 、 也 使 得 總 處 理 能 力
(Throughput)增加和讓傳送的延遲縮
短。 
____________________________________ 
1在 SplitStream 中則是利用 Multiple Description 
Code (MDC) 來將資料分成小的片段 
 10 
低。 
 Reduce maintenance cost 
在Trickle中我們是利用多點傳播樹(Multicast 
Tree)來傳輸多媒體串流的封包。在傳統上維
持一棵樹所需花的代價不小，因此在 Trickle
的系統中在維持樹的資料結構上，我們希望
達到以下二個目標: 
1. 在維持樹的結構時所需要記錄的資
訊能夠越少越好。 
2. 在樹的優化過程中所需要資料的交
換量越少越好。 
因此我們希望記錄的東西為都是局部性的資
料，而不是全域性的資料。以下是 Trickle 的
多點傳播樹所需記錄的資訊:                              
 
圖九：在一個多方廣播之樹狀結構引入
Helper。 
一個使用者的所包含的有它的父親、它的孩
子和在其子樹中最長的路徑是在它那一個孩
子中開始還有子樹中最長路徑的延遲為何，
而子樹中最長路徑是一個遞迴的關係式，可
以由它孩子的子樹的最長路徑加上它和孩子
之間的延遲互相比較得到。以圖九為例，假
設每一個邊的延遲為 1，使用者 p 需要記錄
其父親 r 還有它的孩子 c 和 x，而子樹 Tp最
長的路徑為 p->x->z，而我們需要記錄使用者
x，能夠找出最長路徑為何放便之後做樹的優
化之用，而這些資訊都是局部性的，而沒有
全域性的。 
 
 Tree Optimization 
接著下來，我們開始考慮每一個使用者在相
同一棵樹中做跳動而讓使用者得到更好的服
務。而我們希望優化的目的是使得我們的多
點傳播樹最長的路徑能夠越小越好，而在其
中我們有一個限制就是每一個在樹上的點所
能貢獻的 out-degree 是有限的。 
我們希望能夠找出一個有秩序且簡單的跳動
步驟讓每一個點有一個依循的方法來做樹的
跳動，因此我們參考[16]中的作法，在[16]中
作者介紹了一些跳動樹的基本動作是值得我
們學習的，首先以下介紹基本的跳動都是每
一個點帶著它的子樹一起跳動，在[16]中介紹
二種最基本的動作 : Swap operation 和
Transfer Operation，Swap Operation 就是樹上
的二個點分別帶著他們的子樹一起交換位
置，如圖十所示 s 和 c 分別帶著他們的子樹
Ts和Tc交換他們在樹上的的位置，而 Transfer 
Operation 則是一個點帶著它的子樹找另一個
點為父親，如圖十所示，c 帶著他的子樹 Tc
由原本為 p 的孩子，而變成 q 孩子。 
1. Local Transformation 
而 [16] 中 介 紹 了 五 種 樹 調 整 的 方
法 :(1)Child Promote ， (2)Parent-Child 
Swap，(3)Iso-level-2 Swap;(4)Iso-level-2 
Transfer 和(5)Aniso-level-2 Swap。以下我
們分別對這五種調整方法做介紹，Child 
Promote 就是一個點變成他祖父的孩
子，而 Parent-Child Swap 則是父親和孩
子 在 交 換 他們在樹上的位置，而
Iso-level-2 Swap 則是二個點他們擁有相
同的祖父而他們彼此交換他們樹的位
置，而 Iso-level-2 Transfer 和 Swap 很像
只是他們不是交換位置，而是另一個轉
移 到 位 置 而成為另一個點兄弟，
Ansio-level-2 Swap 則是二個點擁有相同
的祖先，對一個點而言這個祖先是他的
 12 
送 機 制  (Multi-source transport 
architecture for H.264 SVC) 
I. 目標 
在異質網路環境下，面對各式各樣的多媒體
接收平台以及數量龐大的連接數目，如何提
供視訊群播服務是一大挑戰，在設計上的考
量可分為視訊編碼與傳送機制兩方面： 
1. 視訊編碼 
 接收設備異質性 
必頇依不同接收設備所需，提供畫
面大小、畫率、與畫質的可調能力。 
 解碼強韌性 
必頇在資料遺失下，仍以所收到的
資訊提供最佳的解碼品質。 
2. 傳送機制 
 網路異質性 
必頇容許接收端透過不同的網路頻
寬與型態進行連線。 
 網路結構可擴充性 
必頇適用於不同的連接數目，並避
免網路頻寬過載的情形。 
 網路強韌性 
必頇容忍底層網路發生封包遺失，
而提供穩定的解碼品質。 
面對視訊編碼的要求，我們採用可調視訊編
碼(Scalable Video Coding)以匹配各種不同接
收設備在運算能力、播放品質以及動態頻寬
的需求。可調視訊編碼的目的是以單一的壓
縮 視 訊 位 元 流 (Bit-stream) 提 供 時 間 
(Temporal)、空間 (Spatial)、和噪訊比(SNR)
可調性(Scalability)。其編碼架構是以 H.264
作為基本層(Base Layer)，並在基本層之上建
立多個時間、空間、和噪訊比之增強層
(Enhancement Layers)，讓接收端可藉由接收
不同的增強層以達到所需的解碼品質。 
以圖十二為例，此一可調視訊編碼位元流的
編碼設定提供了空間與時間可調性。對於要
求 QCIF 解析度、每秒 15 張畫面的接收端而
言，傳送基本層 A 即可；對於要求 CIF 解析
度、每秒 30 張畫面的接收端而言，則應傳送
增強層 B, C, D。每個可調層(Scalable Layer)
對於不同的接收設備的重要性應該依據視訊
的位元率-失真效能來決定，而接收設備可以
依據不同的重要性各取所需。 
 
圖十二：空間與時間可調性 
假設某接收設備之播放品質為 CIF30，但所
接收到的資訊並不足以提供相等的解碼品
質、則解碼器應該利用放大 QCIF30 畫面或
者複製 CIF15 畫面等方法補足所缺少的畫
面，盡可能符合播放品質之要求。 
面對傳送機制的要求，我們採取的網路架構
結合了主從式 (Client-Server) 與同儕網路
(Peer-to-Peer)架構。這個架構包含了三種抽
象的網路節點，分別扮演不同的角色： 
1. 來源節點(Source Node) 
由服務提供者架設的來源伺服器，負責
提供視訊。 
2. 中繼節點(Relay Node) 
又稱媒體伺服器(Media Gateway)，負責
轉送視訊，可分攤來源節點的網路流量。 
3. 接收節點(Receiver Node) 
訂閱(Subscribe)視訊群播服務的接收端。 
值得注意的是，網路中的實體伺服器可以同
時扮演中繼節點與接收節點的角色。至於節
點與節點之間的路徑，我們都視為虛擬連結
(Virtual Link)，而實際上這些虛擬連結所代表
的可能是不同的底層網路，甚至不一定只有
單一路徑。我們認為此架構具備以下之優點： 
1. 允許節點之間透過同儕網路建立連結。 
2. 允許多媒體伺服器之間透過應用層群播
(Application Layer Multicast)的方式轉送
視訊。 
3. 允許接收節點以主從式架構向媒體伺服
 14 
 可調視訊編碼位元流擷取之可調層排序
優化  (Rate-distortion optimized layer 
priority for SVC bit-stream extraction) 
將可調視訊編碼運用於視訊群播服務，面對
各種不同接收設備在運算能力、播放品質以
及動態頻寬的需求，如何有效進行位元流擷
取(Bit-stream Extraction)使每個接收端都獲
得最佳的解碼品質是一大挑戰。我們將探討
如何優化可調視訊編碼的可調層排序，讓不
同接收設備在不同的位元率下獲得最佳的解
碼品質。 
可調層排序的用處在於決定哪些可調層的重
要性較高，在不同的位元率下，哪些可調層
應該優先解碼。優化排序時，必頇考量可調
層的特性如下： 
 每個可調層對於接收端的重要性可能不
同。 
 同一可調層對於不同接收端的重要性可
能不同。 
 可調層對於接收端的重要性可能因視訊
內容而異，隨時改變。 
 可調層對於接收端的重要性可能因接收
端所取得的可調層而異。 
 不同可調層之間有所謂的相依性
(Dependency)，例如：略過基本層將造成
接收了增強層仍無法解碼。 
由於問題過於龐大，我們先忽略可調層之間
的相依性可能改變，並將可調層之間的估測
結構(Inter-Layer Prediction Structure)皆假設
為可調層 l 可從可調層 l-1 來估測。 
時間可調性可以利用多層次的雙向估測
(Hierarchical B-picture Prediction)達成。以
GOP 大小 8 為例，時間軸上的畫面可分為 4
群，以不同的 TL (Temporal Level)表示，分別
代表不同畫率，如圖十六。圖中的箭頭表示
了不同畫面之間的編碼依性。TL=2 的畫面可
以從 TL=1 的畫面來估測，而 TL=1 的畫面可
以從 TL=0 的畫面來估測，以此類推。 
 
圖十六：可調視訊編碼之相依性 
另外，空間可調性與噪訊比可調性架構可以
從縱軸上的畫面來說明，由下而上可分為 4
群，分別代表了不同的畫面解析度與畫質。
最底層為 QCIF 解析度、低畫質的基本層；
第二層為 QCIF 解析度、高畫質的噪訊比增
強層；第三層為 CIF 解析度、低畫質的空間
增強層；第四層為 CIF 解析度、高畫質的噪
訊比增強層。 
在不違背可調層之間的相依性下，同樣的位
元率可以有很多種可調層排序方式。優化可
調層排序的方法可分為全域性優化(Global 
Optimal)與區域性優化(Local Optimal)兩類： 
1. 全域性優化 
將所有可能的排序全部列舉，進行暴力
搜尋(Exhaustive Search)，找出面積最小
的 位 元 率 - 失 真 曲 線 (Rate-distortion 
Curve)。以圖十七為例，有兩組可調層
排序，A→B→C→D 與 A→C→B→D。
可以發現 A→B→C→D 的位元率-失真
曲線面積較小，在相同的位元率下可以
獲得較佳的解碼品質。 
2. 區域性優化 
優化可調層排序時，斜率(Slope)最大的
可調層將優先排序。相較於全域性優
化，此方法可能找出的排序並非最佳
解，但運算速度較快。斜率的計算如下： 
 16 
調層的重要性排序並不相同。 
5. 全域性優化的結果比區域性優化好，故
仍有其價值，圖十九中有兩種方法之比
較。 
圖十九：Local 與 Global 之比較 
6. 列舉所有可調層排序與 Convex Set 簡化
後所得的結果符合。Convex Set 的概念
即解碼可調層時不容許有缺少某些相依
可調層的狀況。圖二十可見排序相符。 
 
圖二十：Convex set 簡化之結果 
 
 
References 
[1] C. Diot, B. Levine, J. Lyles, H. Kassem, 
and D. Balensiefen, “Deployment issues 
for the IP multicast service and archi-
tecture,” in IEEE Network, Jan. 2000. 
[2] M. O. Rabin, “Efficient dispersal of 
information for security, load balancing, 
and fault tolerance,” in JACM, Apr. 1989. 
[3] M. Castro, P. Druschel, A.-M. Kermarrec, 
A. Nandi, A. Rowstron, and A. Singh, 
“Splitstream: High-bandwidth multicast in 
cooperative environments,” in SOSP, Oct. 
2003. 
[4] M. Castro, P. Druschel, A.-M. Kermarrec, 
and A. Rowstron, “Scribe: A large-scale 
and decentralized application-level 
multicast infrastructure,” IEEE JSAC, vol. 
20, no. 8, October 2002. 
[5] E.K.Lua, J. Crowcroft, M. Pias, R. 
Sharma, S. Lim. “A Survey and 
comparison of Peer-to-Peer Overlay 
Network Schemes”. IEEE Communi-
cations Survey and Tutorial. March 2004. 
[6] E. Damiani, etc. “A Reputation-Based 
Approach for Choosing Reliable Resource 
in Peer-to-peer Networks” ACM CCS’02. 
November, 2002. 
[7] B. K. Alunkal, etc. “Reputation-Based 
Grid Resource Selection” 
[8] A. Josang, E. Gray, M. Kinateder. 
“Analyzing Topology of Transitive Trust”. 
Proceeding of the First International 
Workshop on Formal Aspects in Security 
& Trust (FAST). September, 2003. 
[9] S. D. Kamvar, Mario T. Schlosser, 
Hector Garcia-Molina. “EigenTrust 
Algorithm for Reputation Management in 
P2P Network” WWW2003, May 2003. 
[10] D. F. Ferraiolo, R. Sandhu, S. Gavrila, D. 
R. Kuhn, R. Chandramouli. “Proposed 
NIST Standard for Role-Based Access 
Control”. ACM Transactions on 
Information and Systems Security 
(TISSEC) 4(3). August 2001. 
[11] R. K. Thomas, R. Sandhu. “Models, 
Protocols and Architectures for Secure 
國立交通大學博士班研究生 
出席國際會議報告 
 
報告人姓名 范詩辰 報告日期 10/10/2007 
系所及年級 工工所博二 核定文號   年 月 日 
  ０7D192 
連絡電話 0971-096-908 電子信箱 maggiefan15@yahoo.com.tw 
會議期間 October 7-10, 2007 會議地點 Montreal, Quebec, Canada 
會議名稱 
（中文）國際電機工程師學會之系統，人類，與控模分會 
（英文） 2007 IEEE International Conference on System, Man and 
Cybernetics 
發表論文題目 （中文） 老年人適用之健康照護智慧型手機 （英文） Health Pal: A PDA Phone that will take care of your health 
 
 報告內容包括下列各項： 
一、 參加會議經過 
在 2006 年 7 月的時後，我們的團隊開始此篇論文的計劃，主要是發展
專為老年人設計的行動通訊裝置，由我們學校三個領域的團隊共同合作，分
別是人因工程、工業設計以及資工的團隊來合作，此計劃在 2007 年 2 月結
案，有不錯的初步結果，於是老師们建議我們寫成 paper 去投搞，很幸運的
就投上了這次的 SMC conference，我們團隊的人都很興奮，努力有了點成
中該位講者 Antony Rowe 利用 time-synchronized windows of sensor samples
來與移動感應器連結，在使用者身上加裝此種感應器，不僅可以使中央控
制系統知覺使用者的位置，更能感應室內的光線，溼度，溫度，聲音的變
化，藉由這些資料來比對使用者的位置，因而可以成功的、準確的定位使
用者在室內環境的位置。這項科技可以應用於智慧家庭，數位監控病房中，
使得家中老人或病房中的病患需要急救時，可以很快的由遠端控之系統加
以定位。這項演說不僅說明清楚，表達生動，演說者帶來實際完成的 mobile 
beacon 來加深聽眾的印象。這些演說技巧這是我可以學習之處。  
三、 建議 
1. 我覺得國內大學應多舉辦跨領域的國際會議，非專注於特定的領域，
就像電子產品可能要經過技術、設計、人因等領域才能發展出好的電子產品，
所以跨領域間的整合可以帶給各領域間不少衝擊，朝往更創新的方向，而若
國家內多舉行國際性的會議，也可以增加我們的知名度與競爭力。 
2. 在此次會議中認識了許多國外的大學生也來參加會議，不只是西方的
學生，我們亞洲的學生也去的非常多，像是韓國、日本等等，這些國家都很
積極努力的鼓勵推動他們的學生，以增加競爭力，所以我覺得國家應該也多
鼓勵以及給與我們的學生機會去參加國際會議，一來是可以幫助增長學生的
見聞，二來也是可以讓我們的學生也在國際上露面，提升我們的競爭力。 
