三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 2 頁 10/21/2006
面 (minimal binding surface) 的計算與建立資料庫，有助於以功能為導向的搜
尋，並使得搜尋比對結果可以提供功能位置及藥物結合的建議。
這個蛋白質三維資料的處理系統，將由以下四個模組構成：
(1)三維資料庫搜尋模組
(2)特徵擷取模組
(3)部分資料比對演算法
(4)蛋白質結合區塊分析模組
關鍵字: 電腦圖學、三維模型搜尋比對、蛋白質三維模型搜尋比對、蛋白質功能
位置、最小結合表面、生物資訊
英文摘要
A large number of 3D models are created and available on the Web, since more and
more 3D modeling and digitizing tools are developed for ever-increasing applications.
The techniques for content-based 3D model retrieval then become necessary. Our
approach in the past measures the similarity among 3D models by visual similarity.
One hundred orthogonal projections of an object, excluding symmetry, are encoded
both by Zernike moments, Fourier descriptors Circularity, and Eccentricity as features
for later retrieval. The visual similarity-based approach is robust against similarity
transformation, noise, model degeneracy etc., and provides 42%, 94% and 25% better
performance (precision-recall evaluation diagram) than three other competing
approaches: (1)the spherical harmonics approach developed by Funkhouser et al.,
(2)the MPEG-7 Shape 3D descriptors, and (3)the MPEG-7 Multiple View Descriptor.
Partial matching is another problem to be solved, and Spin-Image method is a
potential solution. Based on the past experience, we proposed to apply our techniques
to the protein alignment and function retrieval problem.
Protein active sites are the regions of protein-protein interaction. Those sites of
protein activities decide the functionality of proteins, and those areas could be the
binding sites for drugs. It is very important for chemists and biologists to specify out
where are the active sites or binding sites of protein. However, the acquired 3D
structure data of protein grow extremely in recent years. We need more technologies
to specify the active sites of protein systematically by computers. How to retrieve
proteins by function similarity by searching possible binding sites is another
important issue.
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 4 頁 10/21/2006
本人正好有機會於 2003年 8-12 月在 Princeton 大學做 Visiting Fellow，與電腦
圖學界的 Tom Founkhouser教授於 3D search engine方面合作。又與Mona Singh
教授在生物資訊方面合作，最後又與 Laura Landweber教授 (Dept. Ecology and
Evolutionary Biology) 合作 [Liang05]，由他們提出Molecular mimicry problem。
因此本研究計畫得以成型。
二、背景目的及文獻探討
由於近年來三維模型製作的技術發展快速，使用虛擬雕刻系統、三維場景動畫編
輯軟體、三維掃瞄器等，大量的三維模型被製作出來。因此如何從龐大的三維模
型資料庫中找出使用者需要的三維模型，成為一個重要的課題。在以三維物件相
互比對的部分，比對過程分為六個階段、並於各個過程逐次作淘汰的動作，另外
用以描述三維物件的述詞皆以少量的資料量表示。因此，由一萬多個三維模型中
找出相似模型的時間由原來的一分鐘大幅減少為兩秒鐘，而由二維圖形搜尋相似
三維物件的過程也降為 0.1 秒。
然而，這些技術若要用於三維分子之上，則必須有相當不同的方法與領域知識。
例如，病毒是由蛋白質所構成的，人體也是。其實生命體中的種種生命現象都和
蛋白質有關。
蛋白質有各種催化及生理機能，是細胞的主要工作機器，其功能乃源自蛋白質分
子所具有的「特定構形」及「催化活性」；此種構形的形成，又因於組成蛋白質
的胺基酸排列次序。各種長短的蛋白質有不同的胺基酸組成與排列，造就了多樣
而多功的蛋白質繽紛世界。像其它巨分子一樣，蛋白質鏈也是由小分子單位 (胺
基酸) 一個一個連接成的。[Juang97]
蛋白質的功能與活化位置有高度的相關性，活化位置是蛋白質與基質或配體交互
作用的地方，會使得蛋白質觸發某些作用，如化學變化、三維結構變化等
[Brady00]。因此，多個蛋白質如果有相同的功能，則非常有可能它們也都會有
相似的三維局部結構[Chen02]。
隨著越來越多的蛋白質藉由儀器取得三維結構資料，這些蛋白質有什麼樣的功能
變成一個受人注目的問題。PDB (Protein Data Bank) [Bernstein77]目前紀錄了超過
23600 個蛋白質的三維結構，在 2005 年，PDB 紀錄的蛋白質三維結構，預計
將會超過 35000 個[Hendlich03-1]。如何藉由蛋白質的三維結構，進而得知蛋白
質的功能、活化位置的區域成為研究上的一項重要問題。
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 6 頁 10/21/2006
是蛋白質，而擴大到 tRNA、DNA 的三結結構，或是蛋白質與核酸結構的複合
物時，將會出現問題。
在本計畫中，我們提出了一個運用幾何資訊的方法。運用這個方法，得以預測分
子可能擁有的功能及活化位置。我們預計提出的解決部分比對的方法 (針對一般
分子的比對)，將包含三個步驟，第一個步驟是利用 Geometric Hashing 來找出
Global alignment。
第二步驟, 以前述所找出的 Global alignment 一對對配對結果當輸入，然後用
Interactive Closet Point 來做最佳化。局部最佳化 (local optimization) 其結果將會
加入更多的配對原子 (以一個 distance threshold 之內)。以上第二部分將形成一
個 Interactive 方式，直到不能夠再增加配對原子為止。
第三步驟考慮到所謂的 buried surface problem。其原因是，我們所得到的配對原
子很可能位在分子的表面之內，就無法與其他的 ligand 或蛋白質形成 binding。
因此，第三步將要計算所謂的 minimal binding surface。此部分表面將位在
Solvent Accessible Surface。如果此部分面積太小，即使擁有了 binding site residue
的三維結構，也無法其他分子作用或結合。
上述三步驟除第一部分已經有人發表外，其他第二第三部分都是一種創新。我們
將三個步驟合併起來，實作出一套工具程式，並放在網路上供大家使用。
蛋白質在生物內部的許多反應都佔了相當重要的地位，而蛋白質則是由許多胺基
酸一個個相互連接而成。自然界中胺基酸的種類共有二十種，其性質各異，但是
基本構造都是一樣的。胺基酸的構造如圖一所示，其中心為碳原子，接在碳原子
上的有羧基 (-COOH)、胺基 (-NH2)、支鏈 (side chain) 。
圖一
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 8 頁 10/21/2006
由 N、Cα、C 決定新座標系統的方法如圖三，其計算方法則如下：
1. 由 C N

求 得 與 之 平 行 的 單 位 向 量
1e

.......................................................................................................................................(1)
2. 2e

由下列方法求得
1
2
1
e C C
e
e C C






...............................................................................................................(2)
3. 3e

則由下列方法求得
3 2 1e e e 
 
......................................................................................................................(3)
圖三
對蛋白質中的每個胺基酸，都使用上述方法求得新的座標系統。相對應於新的座
標系統，每個原子也都會有新的三維座標。在下一個步驟，也就是 Geometry
Hashing Algorithm (幾何雜湊演算法)，必須用到這些新的三維座標。
通常蛋白質的三維構形與其擁有的功能有相當大的關係。因此有相同功能的蛋白
質，也通常有局部的相似結構。由上述，相同功能的蛋白質間的相似局部構造，
則可以用來表示活化位置。
因此，我們將使用 Geometry Hashing Algorithm (幾何雜湊演算法) [Haim97]，來
找尋蛋白質間的相似結構。原本 Geometry Hashing Algorithm是電腦視覺中用來
比對幾何特徵的一個方法。在辨識物體這項運用上，此演算法能夠有效率地執
行，且能夠以平行處理來加速。同時，它也能被用來做局部區域的比對。
為了解決兩個物體可能各自在不同的座標系統的問題，每次座標轉換的新座標點
都會紀錄下來，這個步驟稱之為前處理，在這個階段，會把所有求得的資料都放
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 10 頁 10/21/2006
圖四 Geometry Hashing Algorithm
Hashing 函式以原子到原點的距離當作索引，以原子的三維座標為輸出值。例
如，A1 在某個座標系統下的座標為 (x, y, z)，則它的 Hashing函式的索引計算
方式為 。值得注意的是，兩個蛋白質如果有相似局部結構，其相似結構中的相
對應原子的位置並不會完全一樣。當兩個原子之間的距離在一定距離之內（例如
1A內），則這兩個原子視為同一點。
另外，兩個蛋白質也有可能在幾何上分別擁有相似位置的原子，但其化學性質卻
截然不同。我們使用了胺基酸序列比對常用的相似矩陣：Dayhoff PAM250，來
提高我們方法的正確率。如果兩個分子在空間中距離相近，即相距在 1A之內，
則使用 PAM250 來求得貢獻的分數，如果在空間中沒有相近的原子，其貢獻的
分數為 PAM250 中的最小值，也就是 -8。表一為 PAM250 相似矩陣。
表一 PAM250 相似矩陣。
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 12 頁 10/21/2006
IUBMB (The International Union of Biochemistry and Molecular Biology) 將酵素分
為六類。列之如下：
EC1 Oxidoreductase
EC2 Transferase
EC3 Hydrolase
EC4 Lyase
EC5 Isomerase
EC6 Ligase
這個分類準則是依據各自相異的化學反應特性。接下來，我們將簡述我們選擇測
試資料的方法與原因。並且也將會列出依據我們的方法所得到的正確率與詳細實
驗結果。
依照蛋白質功能的不同，將 EC5 下的所有蛋白質分類，並且把這些蛋白質的活
化位置的三維結構紀錄下來。蛋白質活化位置的幾何結構能夠決定蛋白質的功
能。因此有相同功能的蛋白質，其活化位置附近的形狀也十分相似。因此我們把
PDB 中擁有活化位置資訊的蛋白質收集起來，並取出活化位置的三維結構資
訊，集合成為活化位置資料庫。資料庫中的每一個活化位置都對應特定的蛋白質
功能及酵素分類代碼 (enzyme class number, E.C. No.) 。其中酵素分類代碼表示
活化位置的特性。
接下來，將解釋如何選擇受測蛋白質，及如何將之與活化位置資料庫中的活化位
置做比對。收集所有 EC5 下已知酵素分類代碼、但未知活化位置區域的蛋白
質，當作受測蛋白質。如果已知酵素分類代碼，也知活化位置區域的蛋白質，也
當作受測蛋白質，則一定能夠完全比對出活化位置資料庫中的某個活化位置，如
此會使得結果偏頗。
對每個受測蛋白質，我們將會找出其三維結構與活化位置資料庫每個活化位置的
相似三維局部結構，同時會算出每兩者之間的相似程度，並且找出相似程度最高
的蛋白質。接著比較受測蛋白質的 E.C. No. 與最相似活化位置的 E.C. No.，如
果兩者相同，則受測蛋白質的相似局部結構部份，非常有可能即是其活化位置。
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 14 頁 10/21/2006
四、結果與討論
第一年預期完成之工作項目為：
a. 完成三維資料模型的比對系統，能將三維分子資料納入，直接比對。
對一般三維資料模型，嘗試部分比對。
b. 完成視覺化的比對分析系統，並將部分蛋白質片斷資料比實作部分成果。
第一年預期完成的工作項目都有順利完成。直到目前為止，我們已實作完成預定
進度。並將系統置於網頁上供人使用做分子三維結構比對與功能分類。
http://www.cmlab.csie.ntu.edu.tw/~jsyeh/3Dprotein/ 及
http://www.cmlab.csie.ntu.edu.tw/~zick/bio/index.html 有個別的介紹及工具下載。
線上比對系統是以工具方式放於網路 (http://3d.csie.ntu.edu.tw/ProteinRetrieval)
供全世界人使用，就如同之前我們的 3D search engine (http://3d.csie.ntu.edu.tw)
一樣。並將創新部分發表為國際期刊與會議論文。
目前本研究於 2005年於 Bioinformatics 期刊發表。另一部分成果則發表在國際
會議 IEEE Sixth International Symposium on Multimedia Software Engineering
(IEEE-MSE2004) Special Session on Bioinformatics, FL, USA。兩篇論文如下，並
將內容附於此報告之後。值得一提的是，我們是最早可以將 DNA/RNA 及蛋白
質三維結構混合做比較的實作。我們計畫中所研發出來的工具程式，也被
Princeton 的研究團隊使用[Liang05]，用以解釋 Molecular Mimicry 的問題並發
表於 2005 Aug 的 RNA 期刊中。
1. Jeng-Sheng Yeh, Ding-Yun Chen, Bing-Yu Chen and Ming Ouhyoung, A
Web-based Three-dimensional Protein Retrieval System by Matching Visual
Similarity, accepted to appear in Bioinformatics (Application Note)
2. Pei-Ken Chang, Chien-Cheng Chen and Ming Ouhyoung, A Tool for Structure
Alignment of Molecules. Proc. of IEEE Sixth International Symposium on
Multimedia Software Engineering (IEEE-MSE2004) Special Session on
Bioinformatics, pp. 354-361, Miami, USA, Dec. 2004. (ISBN 0-7695-2217-3)
中研院黃明經教授的研究，則除了提供最佳比對外，也提供所有次佳的比對可能
性，而且速度非常快。請見 [Shih and Hwang 2003, Shih and Hwang 2004]。
第二年預期完成之工作項目為:
c. 將利用分子所特有的 binding surface 性質，找出 minimal binding
surface (the buried surface problem)，建出分子表面的結構與 minimal
binding surface 後，再找到更多的特殊特徵資料。
d. 將上面提到的特殊性質，將對映特徵合併加入蛋白質搜尋系統當中，將
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 16 頁 10/21/2006
五、實作結果及效能描述
分子對齊的部分，我們的工具可以用來比較兩個不同種類的分子。在Princeton
University中的Dept. of Ecology and Evolutionary Biology，由教授Laura Landweber
領導的團隊的一個研究生Mr. Han Liang提供了分子擬態的資料和些許問題。
主要狀況是發生在不同分子間比對時，尤其是 DNA/RNA 對於 蛋白質的結構比
對部分。所以除了在前面所提到的 Geometry Hashing for protein structure 原始
reference frames 座標軸的定義外，關於 DNA/RNA 的比較軸有如下的修改，使
得能比較的分子更具有普遍性及一般性。其中下圖(a)為蛋白質結構的座標基底
計算。(b) 為任意分子之基底。
而下圖中的 (a) 為依照 Amino Acid 結構所建構之座標基底。(b) 為依照核酸結
構所建構之基底。
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 18 頁 10/21/2006
Alignment of two molecules using our tool for RRF vs. tRNA, where the atom
number is over 1000 and the computation time is about 24 minutes on a Pentium-4
3GHz PC. (Selmer et. al 1999 shows that the binding to ribosome is at different place
and orientation.), and again the orientation is manually selected.
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 20 頁 10/21/2006
我們的方法比較好的理由如下 :
1. 在一組成對原子的固定RMSD，我們的方法有最多的骨幹分子Ca。
2. 給定固定的對稱的數字Ca，我們的方法有最低的RMSD。
關於計算的時間方面，最主要的時間是花在第一個步驟 geometry hashing 部
分。在蛋白質的例子中，座標系都只建立在氨基酸Ca原子上，因此只需少量的
運算。比對六對蛋白質時，所有的對齊計算可在6秒到47秒的時間中做完.表格2
記錄了在一台Pentium-4 3 GHz 電腦上的計算時間。
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 22 頁 10/21/2006
在http://3d.csie.ntu.edu.tw/ProteinRetrieval/ 上面，我們總共有25,120種蛋白質，注
意，在PDB中的DNA檔案是不包含在內的。根據我們網路伺服器的統計，在2003
年6月到2004年6月，共有1177個使用者曾經使用過這套系統。
現在我們的系統更加入了25,120種蛋白質的模型，更與RCSB PDB每週都做同步
更新。
研究成果
目前本研究已成為國際會議 IEEE Sixth International Symposium on Multimedia
Software Engineering (IEEE-MSE2004) Special Session on Bioinformatics, FL, USA
的正式論文。同時也被 Bioinformatics 期刊所接受，兩篇論文如下:
1. Pei-Ken Chang, Chien-Cheng Chen and Ming Ouhyoung, A Tool for Structure
Alignment of Molecules. IEEE Sixth International Symposium on Multimedia
Software Engineering (IEEE-MSE2004) Special Session on Bioinformatics, FL,
USA
2. Jeng-Sheng Yeh, Ding-Yun Chen, Bing-Yu Chen and Ming Ouhyoung, A
Web-based Three-dimensional Protein Retrieval System by Matching Visual
Similarity, to appear in Bioinformatics (Application Note)
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 24 頁 10/21/2006
d. 將上面提到的特殊性質，將對映特徵合併加入蛋白質搜尋系統當中，將
會得到更準確及更快速的比對結果。
e. 在部分分子片斷資料比對 (partial matching)，實作出比對的演算法
這個部分我們完成預計目標。其中部分分子片斷資料比對，我們是使用 spin
images 來達成。並且我們還使用了圖型處理加速器 (GPU) 來幫忙做部分資料比
對 (partial matching) 的加速。
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 26 頁 10/21/2006
我們的方法比較好的理由如下 :
1. 在一組成對原子的固定RMSD，我們的方法有最多的骨幹分子Ca。
2. 給定固定的對稱的數字Ca，我們的方法有最低的RMSD。
[Shilane04] P. Shilane, P. Min, and T. Funkhouser, “The Princeton Shape
Benchmark”, Proceedings of International Conference on Shape Modeling and
Applications (SMI’04), Palazzo Ducale, Genova.
[Liang05] H. Liang, L.F. Landweber: Molecular mimicry: Quantitative methods to
study structural similarity between protein and RNA. RNA (2005) 11(8): 1167–1172.
成果自評三：使用圖型加速單元(GPU)來做分子三維模
型比對
關於部分分子結構的比對，我們使用 spin images 來達成。在計畫中，我們另外
實作出 GPU 的演算法部分，將分子三維模型比對的部分程式碼重新以 GPU
Code 來做改寫，利用 GPU 的快速運算的特性，將部分核心比對的程式碼部分
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 28 頁 10/21/2006
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 30 頁 10/21/2006
[Chen_CGW02] Ding-Yun Chen and Ming Ouhyoung, "A 3D Object Retrieval
System Based on Multi-Resolution Reeb Graph", Proc. of Computer Graphics
Workshop, pp.16, Tainan, Taiwan, June 2002.
[Chen_EG03] Ding-Yun Chen, Xiao-Pei Tian, Yu-Te Shen and Ming Ouhyoung, "On
Visual Similarity Based 3D Model Retrieval", Proc. EUROGRAPHICS, Granada,
Spain, Sept. 2003.
[Chen_ICS02] Ding-Yun Chen, Ming Ouhyoung, "A 3D Model Alignment and
Retrieval System", Proc. of ICS2002 (International Computer Symposium), Hualien,
R.O.C, December 2002.
[Chen_Thesis03] Ding-Yun Chen, Three-Dimensional Model Shape Description and
Retrieval Based on LightField Descriptors, PhD Thesis, National Taiwan University,
2003.
[Haim97] Haim J W: Geometric hashing: an overview. IEEE Comput. Sc. and
Eng.(1997) 4: 10-21. [Hendlich03-1] M. Hendlich, A. Bergner, J. Gunther, G. Klebe:
Relibase: design and development of a database for comprehensive analysis of
protein-ligand interactions. J. Mol. Biol. (2003) 326:607-620.
[Hendlich03-2] M. Hendlich, A. Bergner, J. Gunther, G. Klebe: Utilising structural
knowledge in drug design strategies: applications using Relibase. J. Mol. Biol. (2003)
326:621-636.
[Honig03] S. Goldsmith-Fischman and B. Honig, "Structural genomics:
Computational methods for structure analysis", Protein Sci., September 1, 2003; 12(9):
1813 - 1821.
[Johnson97] Andrew Johnson, Spin-Images: A Representation for 3-D Surface
Matching, Ph.D. thesis, Robot ics Institute, Carnegie Mellon University, Pittsburgh,
PA, Aug. 1997
[Kim03] D. Kim, D. Xu, J.-t. Guo, K. Ellrott, and Y. Xu, "PROSPECT II: protein
structure prediction program for genome-scale applications", Protein Eng., September
1, 2003; 16(9): 641 - 650.
[Lamdan88] Y. Lamdan and H. Wolfson, "Geometric Hashing: A General and
Efficient Model-Based Recognition Scheme", Proceedings of the IEEE Second
International Conference on Computer Vision, Dec. 1988, pp 38-249.
三維模型檢索及其應用於分子三維結構比對與功能分類 (2/2)
國立台灣大學資訊工程學系 第 32 頁 10/21/2006
[Siddiqi99] K. Siddiqi, A. Shokoufandeh, S. Dickinson, and S. Zucker, "Shock
Graphs and Shape Matching", International Journal of Computer Vision, Volume 30,
1999, pp 1--24.
[Smith02] G.R. Smith, M.J.E. Sternberg: Prediction of protein-protein interactions by
docking methods. Structure Biol. (2002) 12:28-35.
[Tian_Thesis03] Xiao-Pei Tian, A 3D Model Retrieval System Based on MEPG-7
3DSSD, Master Thesis, National Taiwan Univesity, June 2003.
[Totrov97] M. Totrov, R. Abagyan: Flexible protein-ligand docking by global energy
optimization in internal coordinates. Proteins. (1997) S1:215-220.
[Wang95] Leuo-hong Wang, Cheng-yan Kao, Ming Ouhyoung, Wen-chin Chen,
"Molecular Binding: A Case Study of the Population-Based Anneealing Genetic
Algorithm", Proc. of ICEC'95 (1995 IEEE International Conference on Evolutionary
Computing), pp. 41-50, Australia, Nov. 1995.
[Yeh06] Jeng-Sheng Yeh, Jen-Yuan Chiang, Ting-Hao Huan, Li-Fong Lin,
Ming-Yang Yu, Jean T.C. Tsai, Chung-Lin Wen, Liang-Kai Wang, Ding-Yun Chen,
Yung-Yu Chuang, Bing-Yu Chen, Ming Ouhyoung, “Hand-Shadow Illusions and 3D
DDR Based on Efficient Model Retrieval”, Emerging Technologies, SIGGRAPH
2006, Boston, MA. Jul 2006.
[Zemla03] A. Zemla, "LGA: a method for finding 3D similarities in protein
structures", Nucleic Acids Res., July 1, 2003; 31(13): 3370 - 3374.
“bti458” — 2005/5/2 — page 1 — #1
BIOINFORMATICS APPLICATIONS NOTE Vol. 00 no. 0 2005, pages 1–2doi:10.1093/bioinformatics/bti458
Article type
A web-based three-dimensional protein retrieval system by
matching visual similarity
Jeng-Sheng Yeh1,∗, Ding-Yun Chen1, Bing-Yu Chen2 and Ming Ouhyoung1,3
1Department of Computer Science and Information Engineering, 2Department of Information Management and
3Graduate Institute of Network and Multimedia, National Taiwan University, Taipei 106, Taiwan
Received on July 10, 2004; revised on January 24, 2005; accepted on April 18, 2005
Advance Access publication …
ABSTRACT
Summary: A web-based three-dimensional (3D) protein retrieval
system is available for protein structure data including all PDB and
FSSP dataset. In this system, we use a visual-based matching method
to compare the protein structure from multiple viewpoints. It takes
<3 s for each query with 90% accuracy on an average.
Availability: The web-based query interface and downloadable files
can be accessed via http://3d.csie.ntu.edu.tw/ProteinRetrieval/
Contact: jsyeh@cmlab.csie.ntu.edu.tw
Supplementary information: Further details of the proposed method
The URL
does not
open the
web page.
Please
check the
URL and the
details in it.
are available at http://graphics.csie.ntu.edu.tw/∼jsyeh/3Dprotein/
INTRODUCTION
There are more than 25 000 protein structure files in Protein Data
Bank (PDB) (Berman et al., 2000, http://www.pdb.org/) now, with
an additional one hundred added per week. Hence an increasing
necessity for protein structural retrieval. Therefore we propose a
visual-based method to find the similarity of protein structures
automatically, and which can also provide some clues for protein
classification.
Several algorithms and servers have been proposed to analyse
those protein structures in Protein Data Bank (PDB) in order to help
in the prediction of protein functions, as the shape of protein may
determine its function. The following tools are mainly based on align-
ment of primary structure (1D sequence data), secondary structure
(helix/sheet) and/or 3D atom coordinates. For instance, EMBL SSM
(Krissinel and Henrick, 2003) uses a graph-matching algorithm to
map secondary structure elements as a first step to iteratively align
atoms. To compare the 3D protein structures, the Dali/FSSP (Holm
and Sander, 1998) database has been developed based on exhaustive
3D structure comparison of protein structures currently in PDB. Sev-
eral image processing-based methods were also proposed for protein
structure comparisons (Sandak et al., 1995; Chi et al., 2004). Shape
histogram (Ankerst et al., 1999) is used to compare the 3D structure
of the surface of proteins. Here, however, we would like to provide
an alternative tool based on views instead of atom positions only.
In this paper, we present a visual-based protein retrieval sys-
tem, which is available on Internet with web-enabled interface. The
concept of the visual-based matching method is based on human
perception, therefore, the result of retrieval can be used and manipu-
lated more intuitively and quickly. Biologists can receive the ranked
∗To whom correspondence should be addressed.
results of a given query. The design of user interface is described as
follows.
Using our system, the user can specify a PDB ID as an input to
query similar protein structures. That is, the proteins that look similar
to the query protein will be displayed in terms of visual similarity
ranking. The users can also pick one of the results for further query
by clicking again. If users want to query by an unpublished protein
structure, they can upload the protein structure file in PDB format.
The server will calculate the necessary 3D features and make a query.
For output display, users can choose their preference for dis-
play. One of the configurations is to display all figures of protein
in similarity ranking. Another configuration displays the results with
metadata information from PDB files including protein name, EC
number and SwissProt ID. This system output can link to other online
databases, such as OCA (Prilusky, 2004, http://bip.weizmann.ac.il/
oca-bin/ocamain/) and PDBsum (Laskowski, 2001).
METHODS
The proposed method is based on LightField descriptors (Chen et al., 2003)
to match 3D protein structures in visual-based similarity. The core idea of
the multi-view projection method is to compare 3D object with multiple
3D projection views. The retrieval process is divided into off-line feature
extraction and on-line protein retrieval.
In off-line feature extraction, the projection views are first pre-rendered
from the solvent-accessible surface of protein, which is computed by
Connolly’s msp package (Connolly, 1983). Then the 2D shape Zernike
moment descriptors and Fourier descriptors are extracted as features for each
projection view. In our system, 100 projection views are rendered around the
centre of 3D structure for the visual-based matching.
In on-line protein retrieval, the dissimilarity value of two proteins is
calculated by the summation of the distance between descriptors in each
corresponding view. In addition, in order to accelerate the matching speed in
such a large database, we use iterative algorithms and early rejection of non-
relevant models. To iteratively reject non-relevant protein structures, lower
frequency parts of Zernike moment descriptors and Fourier descriptors are
matched in the initial stage, and higher frequency parts of those descriptors
are applied in each stage to refine the top ranked results of retrieval. After
iteratively rejecting models stage-by-stage, the entire database (more than
25 000 proteins) can be queried in <3 s in a Pentium 4 2.4 GHz PC. Figure 1a
shows a typical example of protein retrieval in the proposed web-based
system.
DISCUSSION
In our experiments, the 4997 proteins, which are listed in the first
362 classes (representative sets from 12asA–1bsvA) in the FSSP
© The Author 2005. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oupjournals.org 1
A Tool for Structure Alignment of Molecules 
 
 
Pei-Ken Chang, Chien-Cheng Chen and Ming Ouhyoung 
Department of Computer Science and Information Engineering, National Taiwan University 
{zick, ccchen}@cmlab.csie.ntu.edu.tw, ming@csie.ntu.edu.tw 
 
 
Abstract 
 
In this paper, a novel tool is proposed to align two 
molecules (not just proteins) based on their 3D 
structural data, and the user can observe the result of 
alignment visually via the tool. Most existing tools are 
designed only for alignment of proteins. Here, a new 
tool is developed to address shared structural features 
between protein structures and tRNA structures, that is, 
molecular mimicry, although they are two very 
different types of molecules. 
In order to align two molecules A and B, Geometric 
Hashing is applied to globally find initial matching of 
approximately overlapped atoms, thus parts of 
molecule A can be matched to parts of molecule B. 
Next, a fine tuning process is introduced, which is 
based on local optimization of overlapped parts, and 
the Iterative Closest Point (ICP) is used until the 
number of overlapped atoms within a given distance 
threshold can not be increased any more. The results 
show that our method is useful to structurally align 
two molecules, not restricted to align two proteins only. 
Besides, our tool outperforms in terms of RMSD and 
number of matched atom pairs in comparison to other 
tools. 
 
1. Introduction 
 
Search engines for 3D models have been developed 
in recent years [1] [2], however, can similar techniques 
be used in molecules? If so, the benefit can be great. 
The reason is that large number of protein structures 
can be determined by high throughput machines, 
classifying proteins into families and assigning 
functions to those novel proteins become major tasks 
in recent years. The Protein Data Bank (PDB) 
currently contains more than 25,000 structures and it is 
estimated that the number of structures in the PDB 
may exceed 35,000 by 2005. Though proteins have 
been grouped together on the basis of structural 
similarities in the FSSP [3], CATH [4], and SCOP 
databases [5], much effort still has been put into 
finding the similarities among proteins. Moreover, the 
rapid growth in the amount of structural data of 
proteins far exceeds the ability of experimental 
techniques to identify the locations and key amino 
acids of active sites. Although the structural genomics 
initiative (SGI) proposes to solve 10,000 protein 3D 
structures in this decade, however, many biological 
functions still remain unknown. 
With the help of alignment tools, the structural 
similarity between proteins is revealed, as well as the 
functional and evolutional relationships. Holm and 
Sander [6] mentioned that structural similarities among 
distantly related proteins are often preserved in the 
process of evolution, but very little similarity at the 
sequence level. 
There is an interesting problem studied, that is 
molecular mimicry. The molecular mimicry problem [7] 
is that a protein and a nucleic acid share a similar 
substructure, and sometimes it will even extend to 
similarity in interaction. Nissen et. al [8] indicated that 
the structure of Elongation Factor-G is similar to that 
of the complex of Elongation Factor-Tu and tRNA. 
Selmer et. al [9] mentioned that Ribosomal Recycling 
Factor looks like tRNA. In addition, exploitation of 3D 
structural data is a key factor to enhance structure-
based drug design (SBDD), and the prediction of 
protein functions and possible active sites in proteins 
have become quite popular in SBDD, especially at 
front-ends to molecular docking [10] [11] or 
alternative active sites are sought otherwise. 
This paper is organized as follows. Some related 
works are discussed in section 2. The geometric 
hashing algorithm and ICP algorithm we use are 
detailed in section 3. The experimental results are 
provided in section 4 while conclusion is given in 
section 5. 
 
2. Previous Work 
 
In general, structure alignment based on 3D 
structure has been shown to be NP complete by 
are independent of the scene and thus can be computed 
offline to reduce the time needed for recognition. 
Accessing to the memory is based on geometric 
information that is invariant of the object’s pose and 
computed directly from the scene. During the 
recognition phase, the method accesses the previously 
constructed hash table using the indices of the encoded 
coordinate information of the input object and finds 
their common spatial features. 
In the phase of preprocessing, we calculate one 
basis for each residue to generate coordinates for each 
atom in a protein. In the phase of recognition, we 
choose a reference frame of the protein B. For each 
different reference frame of protein A in the hash table, 
we accumulate the number of matched atoms by 
checking whether there are two atoms close enough. 
We set a threshold distance MatchThres (MatchThres 
= 1 to 2Å is proper), beyond which atoms will not be 
considered as a match. If no atoms can be matched 
within MatchThres, we assign the score to 0. If there is 
an atom within MatchThres, we assign the score to 1. 
The process is repeated with each reference frame of 
the protein B until all the reference frames of these two 
proteins have been tested. 
In the case of aligning two different kinds of 
molecules, the algorithm is slightly modified while 
creating the bases. For each atom whose coordinate is 
P, select two atoms connected with the atom, assuming 
that the coordinates for these two atoms are Q1 and Q2 
respectively. The rule for constructing basis is 
 
1. Normalize 1PQ
JJJJK
 to 1e
JK
 
2. 1 22
1 2
e PQe
e PQ
×= ×
JK JJJJKJJK
JK JJJJK  
3. 3 2 1e e e= ×
JJK JJK JK
 
 
and is illustrated in Figure 1(b). The origin of the 
new coordinate frame is P. If an atom is connected 
with n atoms, there would be )1( −× nn  coordinate 
frames made for this atom. In this way, the number of 
constructed coordinate frames is too large so that the 
execution is not efficient. In order to decrease the 
execution time, the criteria for selecting atoms to 
create bases is listed in Table 1. Then we calculate two 
bases for each residue, while we calculate four bases 
for each nucleotide. In proteins, the “ CA ” atom is 
on the backbone and attached with a side-chain, and 
the “ CB ” atom is the attached atom. In nucleic acids, 
the “ C4*” atom and the “ C3*” atom are both on the 
similar position as the “ CA ” atom in proteins. And 
“ O4*” atom and “ C2*” are on the similar position as 
the “ CB ” atom in proteins. This is illustrated in 
Figure 2. 
 
Table 1. The rule for selecting atoms to 
construct coordinate frames. 
Type of the 
molecule 
Name of the 
atom lie in P 
Name of the 
atom lie in Q1 
Proteins “ CA ” “ CB ” 
“ C4*” “ O4*” Nucleic Acids 
“ C3*” “ C2*” 
 
  
(a) (b) 
Figure 1. Calculation of a basis. (a) The protein structure. (b) The general molecule structure. 
 
Figure 4. EFG vs. EF-tu/tRNA complex 
(Nissen et. al 1995 shows that the binding to 
ribosome is at the same place and orient-
tation.) This picture is from Professor Laura 
Landweber’s group of Ecology and Evolu-
tionary Biology Dept. Princeton University, 
and the orientation is manually selected. 
 
Figure 5. RRF vs tRNA (Selmer et. al 1999 
shows that the binding to ribosome is at 
different place and orientation.), and again 
the orientation is manually selected. 
 
and the translation vector is ( )2718.331501.656722.36−  
 
4.2. Comparison with Other Alignment Tools 
 
In order to compare with other tools, we will use 
the same set of proteins as in the paper of 
Blankenbecler et al. [19]. Note that other protein 
alignment methods usually use the knowledge of 
matched 1D sequence alignment for proteins, and they 
are optimized for proteins only focusing on backbone 
atoms Cα matching. Our tool does not have this 
assumption, and will work for arbitrary molecules, 
including tRNA. Still, for comparison purpose, we use 
the same set of six proteins. Figure 8 shows that our 
tool is better compared to other methods, where Figure 
8(a) is reported from Blankenbecler’s [19], in which 
Yale [26], Dali [27] [28], CE [17] and Lund [19] 
methods are compared, while Figure 8(b) is from our 
tool as compared to data in Figure 8(a). 
The reasons why our method is better are 
1. Given a fixed RMSD for pairs of matched 
atoms, our method has the most number of 
backbone Cα atoms; 
2. Given fixed number of matched Cα, our method 
has the lowest RMSD. 
In terms of computation cost, the major cost is in 
the first step, the geometric hashing. In the case of 
proteins, the coordinate frames are generated from the 
amino acid Cα atoms only, and thus the computation 
cost is low. For the six pairs of target proteins, all 
alignment calculation is done ranging from 6 seconds 
to 47 seconds. Table 2 shows the computation time on 
a Pentium-4 3GHz PC. 
In the case of molecules such as RNA and DNA, 
the nucleic acid has a carbon ring in its base, and 
therefore the number of possible coordinate frames 
tends to be much more than that of proteins. Certainly, 
the computation time is longer. In the case of RRF vs. 
tRNA, where there are over 1000 atoms in tRNA, the 
computation time is around 24 minutes, while in the 
case of EFG vs. EF-tu/tRNA complex (over 4000 
atoms), the computation time can be as long as 36 
hours on the same 3 GHz PC. Even so, our tool can 
still solve this problem, which is a very important 
problem called "molecular mimicry". As far as we 
know, our method is the first one to solve this kind of 
problems, because our algorithm is sequence 
independent, and does not use the knowledge of 1D 
sequence similarity in molecule pairs. 
 
5. Conclusion 
 
A novel tool is developed to align two molecules 
based on 3D structural data. In contrast to other 
algorithms, it takes more computation time to align 
two molecules by our tool. However, other tools might 
be restricted to align two proteins. The experiments are 
conducted based on the data from the PDB and 
demonstrate that the proposed tool is useful and 
versatile. 
The first experiment is the molecular alignment 
problem. Given two molecules, our tool will generate 
the rotation matrix and translation vector so that the 
above two molecules are optimally aligned. In our 
experiments, the results are the same, no matter where 
we randomly place the molecules in a different 
location with different orientation. 
 
   
(a) (b) 
Figure 8: Alignment results for a set of protein pairs in terms of RMSD of matched atom pairs 
and number of aligned atoms (N). In this figure, (a) is from Blankenbecler et al. fuzzy alignment 
method. The results from Yale (red squares), Dali (green triangles), CE (blue circles), and Lund 
method (solid lines) are also given in their paper. (b) is from our tool as a comparison. It shows 
that our results are better as compared with other methods. 
 
Table 2: Computation time of alignment of six pairs of proteins, where MatchThres means the 
threshold used in initial geometric hashing, while the other columns are in seconds. 
MatchThres (Å) 8DFR-4DFRa 1MBD-1MBA 1TIE-4FGF 1CID-2RHE 7FABl2-1REIa 1FXIa-1UBQ
1.0 7 5 4 3 2 1 
1.5 9 6 5 5 2 1 
2.0 11 7 6 5 3 1 
2.5 13 10 8 7 3 2 
3.0 18 12 9 9 4 3 
3.5 22 16 13 11 5 3 
4.0 30 20 15 13 7 3 
4.5 37 26 20 18 8 6 
5.0 47 34 24 22 10 6 
 
In the second experiment, several protein pairs are 
used to compare the results with four popular 
alignment tools, namely Yale [26], Dali [27] [28], CE 
[17] and Lund [19] methods. Our tool performs the 
best in terms of RMSD and number of matched atom 
pairs. 
 
6. References 
 
[1] D.Y. Chen, X.P. Tian, Y.T. Shen, and M. Ouhyoung, “On 
visual similarity based 3D model retrieval” Comput. Graph. 
Forum, 22(3), 2003, pp. 223-232. 
 
[2] T. Funkhouser, P. Min, M. Kazhdan, J. Chen , A. 
Halderman, D. Dobkin, and D. Jacobs, “A search engine for 
3d models” ACM T. Graphics, 22(1), Jan. 2003, pp. 83-105. 
 
[3] L. Holm and C. Sander, “Touring protein fold space with 
Dali/FSSP” Nucl. Acids Res., 26, 1998, pp. 316-319. 
 
[4] C.A. Orengo, A.D. Michie, S. Jones, D.T. Jones, M.B. 
Swindells, and J.M. Thornton, “CATH - a hierarchic 
classification of protein domain structures”, Structure, 5(8), 
Aug. 1997, pp. 1093-1108. 
 
[5] A.G. Murzin, S.E. Brenner, T. Hubbard, and C. Chothia, 
“SCOP: a structural classification of proteins for the 
investigation of sequences and structures”, J. Mol. Biol., 247, 
1995, pp. 536-540. 
 
[6] L. Holm and C. Sander, “Mapping the protein universe”, 
Science, 273, Aug. 1996, pp. 595-602. 
 
[7] P. Nissen, M. Kjeldgaard, and J. Nyborg, 
“Macromolecular mimicry”, EMBO J., 19, 2000, pp. 489-495. 
 
[8] P. Nissen, M. Kjeldgaard, S. Thirup, G. Polekhina, L. 
Reshetnikova, B.F.C. Clark, and J. Nyborg, “Crystal 
structure of the ternary complex of Phe-tRNAPhe, EF-Tu, and 
a GTP analog”, Science, 270, Dec. 1995, pp. 1464-1472. 
 
[9] M. Selmer, S. Al-Karadaghi, G. Hirokawa, A. Kaji, and A. 
Liljas, “Crystal structure of Thermotoga maritima ribosome 
recycling factor: a tRNA mimic”, Science, 286, Dec. 1999, 
pp. 2349-2352. 
 
[10] V. Cappello, A. Tramontano, and U. Koch, 
“Classification of proteins based on the properties of the 
Hand-Shadow Illusions and 3D DDR Based on Efficient Model Retrieval
Jeng-Sheng Yeh∗ Jen-Yuan Chiang∗ Ting-Hao Huan Li-Fong Lin Ming-Yang Yu Jean Y.C. Tsai
Chung-Lin Wen Liang-Kai Wang Ding-Yun Chen Yung-Yu Chuang Bing-Yu Chen Ming Ouhyoung†
National Taiwan University‡
1 Introduction
Just like the popular Dance Dance Revolution (DDR) dance game
original created by Konami, we build an installation art system that
can either let children play hand-shadow illusions, or let them pose
their body within limited time with background music playing, so
that the human pose can match the hint images dynamically shown
on the screen.
Figure 1: Playing in Hand-Shadow Illusions and 3D DDR with the
help of a multi-view 3D model retrieval system in an efficient way.
2 Exposition
Two demos, Hand-Shadow Illusions and 3D DDR, sharing the same
concepts and software engines, are composed of three components.
∗Joint first author
†Contact person
‡Email: {jsyeh, liubiti, richardg, lifong, yuminyung, jean, jonathan,
yolux, dynamic, cyy, robin, ming}@cmlab.csie.ntu.edu.tw
The first component is a multi-camera system. Game players stand
on a stage with several cameras surrounding them. Our capturing
system uses background matting to segment the human body from
the background and produces the silhouette images from many dif-
ferent views.
In Hand-Shadow Illusions, we use one camera to capture one or
two different hand shadows at the same time on the same projec-
tor screen. It may also be possible to use two cameras in different
places with network connection to play the game together. Further-
more, 3D DDR can use three cameras to capture different views at
the same time.
The second component is an efficient model retrieval server. This
server can receive a set of descriptors (dozens of integers) of each
view as a query and find similar shapes from the model database.
We transform the silhouette images obtained from the first compo-
nent to a set of descriptors, submit those descriptors as query keys
to this server, and get model candidates in terms of visual similarity.
Hand-Shadow Illusions uses a full-set of the database stored in the
server, which has tens of thousands models. The return over HTTP
is less than two seconds in average. On the other hand, 3D DDR
uses a local database which contains only hundreds of models for
real-time response.
The last component embeds those models in the display for the two
demos.
3 Conclusion
We proposed an installation art system based on efficient model
retrieval technology, and provided two demos, Hand-Shadow Illu-
sions and 3D DDR.
4 Acknowledgement
We would like to thank Digimax and Ming Hsun Yu for providing
the audios used in our system. This project is partially supported
by NSC 94-2752-E002-007-PAE and NSC 94-2213-E-002-035.
References
CHEN, D.-Y., TIAN, X.-P., SHEN, Y.-T., AND OUHYOUNG, M.
2003. On visual similarity based 3d model retrieval. Computer
Graphics Forum 22, 3, 223–232. (Eurographics 2003 Confer-
ence Proceedings).
FUNKHOUSER, T., MIN, P., KAZHDAN, M., CHEN, J., HALDER-
MAN, A., DOBKIN, D., AND JACOBS, D. 2003. A search
engine for 3d models. ACM Transactions on Graphics 22, 1,
83–105.
Online Submission ID: paper 0364
Pr
Figure 2: The bunny and its spin image by a reference point Pr.
The bunny and its spin image by a reference point Pr.
However, there are few drawbacks of the original spin images al-
gorithm. If the points on the model surface are not dense enough,
the spin-images will not actually represent the 3D surface informa-
tion for 3D matching. Let take tetrahedron as an extreme example.
There are only four vertices in the tetrahedron. If we run the orig-
inal algorithm on the tetrahedron, the resulting spin image consists
of only 4 points. Another example is a cube. If the original algo-
rithm calculates the spin images of a cube model with eight ver-
tices, each spin image will contain only 8 points inside. Figure 3 is
an example to demonstrate this drawback.
Such problem happened because our application for protein re-
trieval is very different from the original applications, including
3D object recognitions or registrations, which have scanned points
dense enough on the 3D surfaces.
Another drawback should be happened if the 3D objects are mod-
eled with different vertices densities. If the density of points is
higher, the resulting spin-images will become darker. If the den-
sity of points is too low, the spin-images may not fully describe the
features of 3D models. Because of the spin images of original al-
gorithm will be affected by the point numbers on model surface,
different resolutions and triangle numbers of a given model will be
a sensitive factor of spin images. The comparison of different spin
images with different point density will be a problem.
One possible solution to conquer those two possible problems is
to make the points on each surface dense enough and to have the
same point density. There is no such problem in the original pa-
per of spin-images because all the 3D data each model are scanned
by the same scanner (K2T GRF Patterned Light Sensor) [Johnson
1997] such that the condition of the point density can be similar.
If we want to match geometries, which are acquired from differ-
ent source, the geometry subdivision or surface remeshing may be
necessary.
On the other hand, we proposed another extension of the spin image
in next section by OpenGL projection matrix and triangle rasteriza-
tion method, which can also conquer this problem. .
3 Fast Spin Images Generation
The original implementation [Johnson 1997] uses the algorithm
above to generate the spin-images. However, the possible refer-
Figure 3: An example (sheared cube shape) to demonstrate the pos-
sible drawback of the original spin image definition. It happens
when the scanned points on 3D surface are not dense enough. The
left figure is the shaded image of a pencil shape model. The middle
figure displays the vertices of the model.
ence points may be more than ten thousands, the calculation time of
spin-images should be accelerated. Therefore, with the progress of
GPU technologies, some researchers use Graphics Processing Units
(GPU) on video acceleration cards to reduce the computation time
of spin-images. There is an implementation of pure GPU algorithm
with vertex shader by Nehab [Nehab 2004]. His implementation
algorithm is listed in Figure 4.
void main(
float3 x: POSITION, float3 xn: NORMAL, float3 c: COLOR,
uniform float3 p, uniform float3 pn, uniform float support_width,
out float4 vp: POSITION, out float4 vc: COLOR
) {
float f, r, h;
float3 d;
// convert to cylindric coordinates
d = x - p;
h = dot(pn, d);
r = sqrt(dot(d, d) - h*h);
// convert to clip-space
f = 2.0/(support_width);
r = f*r - 1;
h = f*h;
// return data
vp = float4(r, h, 0, 1);
vc = float4(c, 1);
}
Figure 4: The algorithm for spin-image generation by a vertex
shader. (Code source from [Nehab 2004])
Our spin images generation is implemented by Cg language, and
coordinate transformation is used. As far as we know through pri-
vate communication [Nehab 2004], Nehab in Princeton University
had developed similar method in his course project. The simplest
method is to project the vertex points into the spin image plane. The
result is a dotted image, as in Figure 5(a) to Figure 5(f). In short,
given a mesh model and its vertex points, the more vertex points we
have, the denser is the generated spin images, as we can see from
Figure 5(a) to (f). However, no matter how dense is the resulted
image, we will always see empty spots inside the image (Fig. 5(e)),
which is developed from Nehabs method.
If we are going to compare two such images to find its similarity
value, which is exactly the purpose of the partial matching prob-
lem, empty spots inside an image are not allowed, since similarity
between two spin images as a function of the difference of density
at each pixel will be distorted. Our solution is to create a density
function, but not using the projected dots to approximate it. As-
suming that the density function at each polygon is fixed, then the
angle A between the polygon and its projected plane can be used to
generate a density function in term of 1/COS(A). That is, the larger
the angle A, the denser is the projected area. In this case, the re-
sulting spin image is independent of the vertex points at the object
surface. If there is an overlapped region projected from two differ-
2
Online Submission ID: paper 0364
5 Results of Applications in Molecular
Binding
Our problem is defined as: Given a pocket (receptor), find similar
pockets (receptors). We have two case studies, and the first case is a
query of dihydrofolate reductase (DHFR) in the database. We have
107 proteins in the database which has seven DHFR proteins inside.
The second case is a query of thrombin (PDB ID: 1h8dH). There is
one other thrombin (PDB ID: 1abiH) in the testing database. Within
35 minutes in a Pentium IV 2.4 GHz machine, a query receptor
site can be used to retrieve possible proteins that also have similar
receptor sites from 107 different proteins.
Figure 7 is the query results in 3D viewing snapshots. Every pro-
tein in each subfigure is viewed in four different directions. (The
upper-left one is viewed from upper-left; the upper-right one is
viewed from upper-right; the lower-left is viewed from lower-left;
the upper-right is viewed from lower-left.) Figure 7 (a) is the query
protein (DHFR, PDB ID: 1ddrA). Figure 7 (b) and (c) are two re-
turned positions of 1ddrA in our testing database. The pocket in
the center of each view is the possible candidate of docking, which
is agreed by the ground-truth information. All the corresponding
receptors and pockets are recalled in our test. Figure 7 (d) and (e)
are two returned positions of 1ddrB. Figure 7 (f) and (g) are two
returned positions of 1dhjA. Figure 7 (h) and (i) are two returned
positions of 1dhjB. Figure 7 (j) and (k) are two returned positions
of 4dfrA. Figure 7 (l) and (m) are two returned positions of 4dfrB.
Figure 7 (n) and (o) are two returned positions of 8dfr. Figure 8 is
the corresponding spin images of the 3D views in the test in Figure
7.
(a)
(b) (c)
(d) (e)
Figure 7: The 3D views (four different views) of the query of recep-
tor (DHFR, 1ddrA) in the case study of the Receptor-to-Receptor
Problem.
The spin images of the query receptor (the upper left most) and
similar receptors (the rest) in the first case study of the Receptor-to-
Receptor Problem..
(a)
(b)
(c)
(d)
(e)
(f)
(g)
Figure 8: The spin images of the query receptor (the upper left
most) and similar receptors (the rest) in the first case study of the
Receptor-to-Receptor Problem.
6 Conclusions
Speedup of spin images generation and comparison of the images
within GPU is proposed. We also applied this to a partial matching
problem: the molecular binding problem. Given an unknown pro-
tein or molecule, if we can find its potential binding pockets, then
we can search through existing proteins in PDB to retrieve proteins
that also have similar binding pockets.
In our implementation, the number of spin images of one molecule
can be over 6000, and the storage size is one gigabyte. Compari-
son of a query image to the above stored images takes 50 seconds
for a 2.4 GHz CPU. However, speedup factor of spin images gen-
eration using vertex shaders can be over 3500, and comparison of
a query image and 6000 generated spin images generated online
within GPU can be done within 30 seconds. Furthermore, the stor-
age of spin images (hundreds and thousands of Gigabytes) can be
totally reduced, since it cab be generated online.
For our application of molecular binding, a query receptor site can
be used to retrieve possible proteins that also have similar receptor
sites from 107 different proteins. The rate of precision for the ex-
periment above with a database of 107 candidates is (i) 68 percents
for the top rank retrieved results, and (ii) 95 percents for top five
ranked retrieved results, that is, the correct answer is one of the top
five candidates. This can be potentially a very good filter to filter
out the impossible candidates for further analysis in drug design.
[Nehab 2004]
Reference
4
