 2
 
中文摘要 
過去光罩派工的研究大部分應用於存貨生產之晶圓廠，該類型的晶圓廠著重產出量的績效
表現。本研究針對接單生產之晶圓廠，發展以高達交率為目標之光罩派工法則。此派工法
則包含三種基本概念：生產線平衡、避免飢餓以及家族式派工。透過模擬的方式，本研究
所提法則與過去方法在不同長短之光罩設置時間下進行比較。實驗的結果顯示本研究所提
法則在大部分情況下皆優於過去方法。 
 
Abstract 
This paper develops a dispatching algorithm to improve on-time delivery for a make-to-order 
semiconductor wafer fab with two special characteristics: mask setup and machine dedication. A 
new algorithm is proposed for dispatching series workstations. Simulation experiments show that 
the algorithm outperforms the previous methods both in on-time delivery rate, cycle time, and 
only slightly less than the best benchmark in throughput. The experiments are carried out in ten 
test scenarios, which are created by the combination of two product-mix-ratios and five 
mask-setup-times. 
 
Keywords: semiconductor dispatching, make-to-order, on-time delivery rate, machine-dedication, 
mask setup. 
 
1. Introduction 
Semiconductor manufacturing is a complex process. Hundreds of operations are required to 
produce a wafer. A semiconductor factory (also called a fab) typically involves several dozens 
workstations. A workstation is a group of functionally identical machines that process several 
operations on the same wafer. A job (also called a lot), which is a cassette that typically carries 25 
wafers, may have to enter a workstation several times. Due to the reentry characteristics, we may 
have a great many types of WIP (work-in-process) waiting before a workstation for 
dispatching—a decision for determining which job should be processed first while a machine is 
available. The dispatching decision for a semiconductor fab is very important because it could 
significantly affect the fab performance such as on-time delivery, cycle time and throughput.  
Dispatching decisions for a wafer fab have been extensively studied in the literature. Most 
studies aimed to develop dispatching rules to reduce cycle time and increase throughput (Lu et al. 
1994, Li et al. 1996, Yoon and Lee 2000). Some intend to reduce the tardiness (Lu and Kumar 
1991, Kim et al. 2001). Some others aimed to improve the on-time delivery, in addition to the 
improvement of cycle time and throughput (Kim et al. 1998b, Lee et al. 2002, Dabbas and 
Fowler 2003). Yet, most previous studies assume that there is no mask setup time for a stepper. 
Steppers are very important machines in a fab, which essentially perform the exposure 
operations. An exposure operation is to “photo-print” a circuit pattern onto a wafer by light 
projection through a mask, which records the circuit pattern. Different exposure operations 
require different masks. The change of mask on a stepper requires a setup time. Mask setup for a 
stepper should therefore be considered in wafer dispatching. Yet, only a few studies on 
semiconductor dispatching (Kim et al. 1998a, Chern and Liu 2003) concern the mask setups of 
steppers. 
In an up-to-date fab, one of the distinguished features is machine-dedication. It demands a 
job being dedicatedly processed by a particular machine while it enters a workstation. That is, 
machines in a workstation cannot be taken as exactly identical for some critical operations. With 
the machine-dedication characteristic, the capacity of a workstation would be reduced because its 
machines cannot mutually support in capacity when processing the critical operations. Imposing a 
significant constraint on workstation capacity, the machine-dedication characteristic is therefore 
indispensable while developing dispatching decisions for an up-to-date fab. 
Steppers in a fab can be categorized into two types: high-resolution and low-resolution. In a 
fab, the machine-dedication constraint is imposed only on high-resolution steppers. That is, once 
 4
2.1. Releasing Decisions 
 Releasing decisions are to determine when to release a job to a fab, and determine which job 
to release. Methods for releasing decisions can be classified into two types: open-loop control 
and closed-loop control. Open-loop control denotes that a job is released to a fab based on a 
predetermined schedule, which is independent of the current status of the fab. Uniform releasing 
policy, a typical method of open-loop control, releases jobs “uniformly” (Glassey and Resende 
1988a). That is, the release rate and release pattern on each day is identical. Closed-loop control 
denotes that the time when a job is released depends on the current WIP status of the fab. Along 
the line of closed-loop control, Glassey and Resende (1988b) developed a starvation avoidance 
(SA) algorithm; Wein (1988) developed a workload regulation (WR) algorithm; Bechte (1988) 
used a queueing model to compute the WIP threshold for releasing new jobs; Spearman et al. 
(1990) proposed a CONWIP (constant WIP) method. This research adopts the uniform releasing 
policies in the simulation experiments. 
 In a fab with machine-dedication, at the time point of releasing a job, a stepper-assignment 
decision must be made. That is, the job should be assigned to a high-resolution stepper for 
processing the critical exposure operations of the job. In this research, the decision is based on the 
accumulated load of each high-resolution stepper. That is, at a job releasing time point, the job to 
be released is assigned to the high-resolution stepper that is the lowest in terms of accumulated 
load. The main idea of this stepper-assignment decision is to keep each high-resolution stepper 
balanced in load from a long-term perspective.  
 The stepper-assignment or machine-assignment decision can also be intricately formulated 
as a linear programming (LP) program if the cycle time between any two subsequent operations 
on a high-resolution stepper is certain and available (Gamila and Motavalli 2003, Liaw 2004). 
However, the cycle time in a MTO fab is usually with stochastic behavior; the adoption of such 
LP formulations needs to be further justified. In the simulation experiments, we adopt the 
heuristic of balancing accumulated-load because it is widely used in practice. 
 
2.2. Dispatching Decisions 
Dispatching is to determine which one to process among the jobs waiting before a 
workstation. Different types of workstations need various dispatching methods. Workstations in a 
fab in general can be classified into two types: batch workstation, and series workstation. A batch 
machine processes several jobs at a time; for example, a furnace machine may process six jobs 
(150 wafers) simultaneously to reduce processing cost. In contrast, a series machine (e.g., a 
stepper machine) processes one wafer at a time until all the wafers in the job has been completed.  
Many algorithms for the dispatching of batch workstations have been published (Weng and 
Leachman 1993, Kim el at. 1998a). Among these, the most commonly used one in industry is the 
minimum batch size (MBS) method. The MBS method denotes that the batch size (the number of 
jobs simultaneously processed) should exceed a predefined threshold, which can be determined 
by a queuing model (Neuts 1967, Phojanamongkolkij et al. 2002). While two or more batches 
meet the MBS threshold, the first-in-first-out (FIFO) rule is applied to break the tie in 
determining dispatching priorities.  
High-resolution steppers are usually the bottleneck of a fab because they are very expensive 
and relatively limited in quantity. In a fab, only the high-resolution steppers have 
machine-dedication feature, while the others (either series or batch machines) do not have the 
characteristics. Since high-resolution steppers are a type of series machines, we therefore classify 
the series workstations into two types: dedicated and non-dedicated. A typical dedicated 
workstation includes several high-resolution steppers, which are accommodated in a particular 
area but cannot support each other in capacity due to the constraint imposed by 
machine-dedication. 
This research focuses on developing the dispatching algorithms for two types of series 
workstations, by assuming that the MBS dispatching algorithm has been applied to the batch 
workstation. The main objective is to maximize the on-time delivery, and the other two 
performance criteria are throughput and cycle time. A semiconductor product (also called IC, 
integrated circuit) is a component of a consumer product such as cell phone and computer. Late 
 6
release rate Ri. That is, in the ideally line-balanced case, 1==
i
ij
ij R
νλ  for each i and j. The 
deviation of ijλ  from 1 indicates the degree of unbalance for product i on segment j. 
While ideally line-balanced, the standard WIP level for segment j of product i is Std_WIPij = 
iij RCT ⋅ . That is,
ij
ij
iij
ij
ij WIPStd
WIP
RCT
WIP
_
=⋅=λ . The job-family with the highest ijλ  should be first 
processed in order to smooth the WIP distributions among segments and head for line balancing. 
In Step 4, to maximize on-time delivery rate, we use CR (critical ratio) method to prioritize 
the jobs in the selected job-family. The CR of a job denotes the ratio of its remaining time over its 
remaining processing time, which is intended to measure the possibility of on-time delivery. The 
lower the CR value, the lower is the possibility of on-time delivery and should be processed first. 
Other dispatching rule such as SRPT (shortest remaining processing time) might be a good 
heuristic for other performance criteria such as throughput (Walrand 1988). However, this 
research concerns more on on-time delivery; therefore CR is proposed.  
 
3.2. Dispatching for Non-dedicated Workstations 
 For a non-dedicated workstation, its number of job-families can be I * J * K, where I 
denotes the number of products, J denotes the number of route segments, and K denotes the 
number of dedicated-steppers. Likewise, there are two decisions for the dispatching of 
non-dedicated workstations: (1) choosing job-family, and (2) prioritizing the jobs for the chosen 
job-family.  
 This research uses the concept of starvation avoidance (SA) (Glassey and Resende 1988b) to 
choose the job-family. As stated, the dedicated-steppers are bottleneck (Lee 2002) in a fab; 
therefore, it is important to supply enough jobs to each dedicated-stepper to prevent it from being 
starved.  
The procedure for dispatching non-dedicated workstations is presented below, where N 
denotes the workstation for making the dispatching decision and D denotes the dedicated-stepper 
workstation (Figure 1). To undergo the procedure, a pre-simulation has to be carried out in order 
to determine CTijk, which denotes the mean cycle time of the job-family (product i on segment j 
assigned to dedicated-stepper k) from workstations N to D. 
 
Procedure Dispatching_Non-dedicated_ Workstations 
Step 1: Compute the flow rate ( ijkν ) for each job-family as below, where WIPijk denotes the WIP 
level of the job-family (product i on segment j assigned to dedicated-stepper k) from 
workstations N to D. 
ijk
ijk
ijk CT
WIP=ν  
Step 2: Compute the normalized flow rate ( ijkλ ) as below where Ri denotes the ratio of release 
rate for product i.  
iijkijk R/νλ = ,  
Step 3: Select the job-family that has the minimum normalized flow rate. 
         )min(),,( *** ijkArgkji λ=  
Step 4: Use CR (critical ratio) to prioritize the jobs in the selected job-family.  
 
3.3. Comparison of the Two Dispatching Algorithms  
 Of the above two dispatching algorithms, the one for dedicated-steppers is to balance the 
throughput among segments, and is called a line-balancing (LB) dispatching. The other one, for 
non-dedicated workstations, is to prevent dedicated-steppers from being “starved”, and is called a 
starvation-avoidance (SA) dispatching.  
 The LB dispatching is designed from the perspective of controlling the output mix of 
 8
dispatching algorithms. An analysis of variance (ANOVA) is carried out to justify the effects of 
the dispatching rules (Montgomery 1991). The ANOVA results (Table 4) showed that the 
dispatching rules had significant effect on each performance metric (at the significance level of 
0.01) in each product mixes. The Duncan’s multiple range tests were also performed to categorize 
the dispatching rules based on their performances and the results are given in Table 5. 
<< Insert Table 3 about here>> 
<< Insert Table 4 about here>> 
<< Insert Table 5 about here>> 
From these results, we could conclude that LBSA-F outperforms the four benchmarks in 
terms of on-time-delivery rate and cycle time, in each product mixes (RA and RB). Yet, in terms of 
throughput, LBSA-F performs the best in product mix RA while ranks the third in product mix RB. 
 The reason why LBSA-F in RB does not perform as well as that in RA is analyzed below. 
Comparing to RA = (1:1:1:1:1), the production volume of each product in RB = (1:2:3:1:2) is less 
uniform. Using the normalized flow rate ( ijλ ) as the main dispatching criterion, the LBSA-F 
tends to make the on-time-delivery rate of each product as close as possible. Therefore, in dealing 
with small-volume products, masks have to be changed more frequently. This implies the increase 
of total mask setup time, which consequently leads to the decrease of bottleneck utilization and 
fab throughput. The above analysis is supported by the experiment results of LBSA-F, which 
indicated that the average utilization of dedicated-stepper in RA is 99.38% while that in RB is 
99.25%. 
Comparing with LBSA-I, LBSA-F performs better in each performance metric. This finding 
seems reasonable because the LBSA-I, an individual-based algorithm, tends to change mask more 
frequently and consequently reduce throughput. Since both LBSA-F and LBSA-I use the 
normalized flow rate ( ijλ ) as the main dispatching criterion, the reduction of throughput in 
LBSA-I tends to reduce its on-time-delivery. This finding indicates that s = 90 sec. is a substantial 
amount in terms of mask setup, and cannot be ignored in developing dispatching algorithms. 
 
4.3 Experiment Results for Various Cases of s 
 Over the years, the mask setup time has been progressively reduced due to the advance of 
technology. To justify the performance of LBSA-F algorithm in various fabs, from a traditional 
fab to a future one, simulation experiments are performed for ten test cases, which are the 
combination of five mask setup times (s = 0, 30, 90, 180, 360) and two product mixes (RA and 
RB). 
 Figure 3 and Figure 4 respectively show the experiment results in product mix RA and RB. In 
the two figures, the performance of FCFS-F is taken as a baseline for comparison. That is, the 
performance difference between a dispatching algorithm and FCFS-F is revealed in the figures. 
The trends of the two figures appear quite consistent. Therefore, we refer to Figure 3 in analyzing 
the experiment results.  
Part (a) in Figure 3 indicates that, in terms of on-time-delivery rate, LBSA-F outperforms the 
other four algorithms for each s. The comparison between LBSA-F and SDA-F indicates that 
their difference in performance is increased while s becomes smaller. It reveals that SDA-F 
performs well in the case of s = 360 but no so while s = 90 or smaller. Seemingly, the smaller the 
mask setup time, the higher is their performance differences. This indicates that the variation of 
mask setup time indeed affects the performance of dispatching algorithms and cannot be ignored. 
 Part (b) in Figure 3 reveals that LBSA-F also outperforms the other four algorithms for each 
s, in terms of mean cycle time. In the experiments, the due date of each job has been 
predetermined. Therefore, the shorter the production cycle time, the higher is the 
on-time-delivery rate. The finding about on-time-delivery and that about cycle time appear quite 
consistent. 
 Part (c) in Figure 3 reveals that LBSA-F performs well for each s, in terms of throughput. 
The performance of LBSA-F only slightly differs from the best benchmark in each s. As shown in 
the figure, the throughput of LBSA-I performs well in the cases of s = 0, 30, 90, but drops 
significantly in the cases of s = 180 and 360. This implies that family-based dispatching 
 10
priorities between MTO and MTS products may have to be dynamically determined. This 
initiates a need for enhancing LBSA-F to perform well in such a hybrid product environment. 
 
 
Acknowledgement 
 The authors are grateful to Taiwan Semiconductor Manufacturing Corp. for providing data 
for simulation experiments. This research is partially supported by a research project 
NSC90-2622-E009-001. 
 
References 
Bechte, W., 1988, Theory and Practice of Load-Oriented Manufacturing Control. International 
Journal of Production Research, 26, 375-395. 
Chern, C. C. and Liu, Y. L., 2003, Family-based scheduling rules of a sequence           
-dependent wafer fabrication system. IEEE Transactions on Semiconductor Manufacturing, 
16(1), 15-25. 
Dabbas, R. M. and Fowler, J. W., 2003, A new scheduling approach using combined dispatching 
criteria in wafer Fabs. IEEE Transactions on Semiconductor Manufacturing, 16(3), 501-510. 
Gamila, M. A. and Motavalli, S., 2003, A modeling technique for loading and scheduling 
problems in FMS. Robotics and Computer Integrated Manufacturing,  19, 45-54. 
Glassey, C. R. and Resende, M. G. C., 1988a, A scheduling rule for job release in semiconductor 
fabrication. Operations Research Letters, 7(5), 213-217. 
Glassey, C. R. and Resende, M. G. C., 1988b, Closed-loop Jop shop release control for VLSI 
circuit manufacturing. IEEE Transactions on Semiconductor Manufacturing, 1(1), 26-46. 
Ignall, E. J., 1965, A review of assembly line balancing. The Journal of Industrial Engineering, 
16(4), 244-254. 
Lee, Y. H., Park, J. and Kim, S., 2002, Experimental study on input and bottleneck scheduling for 
a semiconductor fabrication line. IEEE Transactions on Semiconductor Manufacturing, 34(2), 
179-190. 
Li, S., Tang, T., and Collins, D. W., 1996, Minimum inventory variability schedule with 
applications in semiconductor fabrication. IEEE Transactions on Semiconductor 
Manufacturing, 9(1), 145-149. 
Liaw, C. F., 2004, Scheduling two-machine preemptive open shops to minimize total completion 
time. Computers & Research, 31, 1349-1363. 
Lu, S. H. and Kumar, P. R., 1991, Distributed scheduling based on due dates and buffer priorities. 
IEEE Transactions on Automatic Control, 36(12), 1406–1416. 
Lu, S. C. H., Ramaswamy, D. and Kumar, P. R., 1994, Efficient scheduling policies to reduce 
mean and variance of cycle-time in semiconductor manufacturing plants. IEEE Transactions 
on Semiconductor Manufacturing, 7(3), 374-388. 
Kim, Y. D., Lee, D. H. and Kim, J. U., 1998a, A simulation study on lot release control, mask 
scheduling, and batch scheduling in semiconductor wafer fabrication facilities. Journal of 
Manufacturing Systems, 17(2), 107–117. 
Kim, Y. D., Kim, J. U., Lim, S. K. and Jun, H. B., 1998b, Due-date based scheduling and control 
policies in a multiproduct semiconductor wafer fabrication facility. IEEE Transactions on 
Semiconductor Manufacturing, 11(1), 155-164.    
Kim, Y. D., Kim, J. G., Choi, B. and Kim, H. U., 2001, Production scheduling in a semiconductor 
wafer fabrication facility producing multiple product types with distinct due dates. IEEE 
Transaction on Robotics and Automation, 17(5), 589-598. 
Montgomery, D. C., 1991, Design and Analysis of Experiments (New York: Wiley). 
Neuts, M. F., 1967, A general class of bulk queue with Poisson input. Ann. Math. Stat., 38, 
759–770. 
Phojanamongkolkij, N., Fowler, J. W. and Cochran, J. K., 2002, Determining Operating Criterion 
of Batch Processing Operations for Wafer Fabrication. Journal of Manufacturing Systems, 
21(5), 363-379. 
 12
Table 2: A comparison of dispatching algorithms 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 3: Experiment results for s = 90 sec. (a) product mix RA , (b) product mix RB 
 
 
 
 
 
 
 
 
 
(a) 
 
 
 
 
 
 
 
 
 
  (b) 
Dedicated workstation Non-dedicated workstation Dispatching 
algorithm 
Steppers Steppers Non-steppers 
LBSA-F LB-F SA-F SA 
LBSA-I LB-I SA-I SA 
SDA-F SDA-F SDA-F FCFS 
FCFS-F FCFS-F FCFS-F FCFS 
LWL-F LWL-F LWL-F FCFS 
RA 
On-time delivery 
rate Cycle Time Throughput Dispatching 
Algorithm Mean
 
St. dev.
 
Mean
(day)
St. dev
(day)
Mean
(lot) 
St. dev. 
(lot) 
LBSA-F 88% 3.2% 23.4 1.3 5523.4 9.6 
LBSA-I 78% 2.4% 23.8 2.7 5507.0 11.3 
SDA-F 9% 1.8% 28.8 2.8 5341.9 27.3 
FCFS-F 48% 10.1% 25.2 1.4 5504.7 12.9 
LWL-F 49% 6.4% 25.3 1.9 5520.2 13.2 
RB 
On-time delivery 
rate Cycle Time Throughput Dispatching 
Algorithm Mean
 
St. dev.
 
Mean
(day)
St. dev
(day)
Mean
(lot) 
St. dev. 
(lot) 
LBSA-F 89% 2.7% 23.4 1.3 5512.9 8.0 
LBSA-I 82% 1.3% 23.6 3.6 5507.5 9.3 
SDA-F 21% 4.6% 27.6 2.9 5338.9 14.7 
FCFS-F 70% 6.0% 24.5 1.1 5541.7 10.9 
LWL-F 55% 5.4% 25.0 1.7 5533.1 17.4 
 14
Table 5: Duncan’s multiple range test for s = 90:  
(a) product mix RA, (b) product mix RB 
 
 
Rule Throughput Results Rule CT Results Rule On-time delivery rate Results
LBSA-F 5523.400  A LBSA-F 23.4481 A LBSA-F 0.877284 A 
LWL-F 5520.200  A LBSA-I 23.8143 B LBSA-I 0.780176 B 
LBSA-I 5507.000  B FCFS-F 25.1950 C LWL-F 0.492436 C 
FCFS-F 5504.700  B LWL-F 25.2575 C FCFS-F 0.476221 C 
SDA-F 5341.850  C SDA-F 28.8196 D SDA-F 0.088803 D 
(a) 
 
 
Rule Throughput Results Rule CT Results Rule 
On-time delivery 
rate Results
FCFS-F 5541.700  A LBSA-F 23.40683 A LBSA-F 0.888542  A 
LWL-F 5533.100  B LBSA-I 23.58496 B LBSA-I 0.815768  B 
LBSA-F 5512.900  C FCFS-F 24.48898 C FCFS-F 0.700032  C 
LBSA-I 5507.500  C LWL-F 25.00969 D LWL-F 0.548924  D 
SDA-F 5338.900  D SDA-F 27.61668 E SDA-F 0.213940  E 
(b) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 1 Segments in a process route 
 
 
0
200
400
600
800
1000
1 2 3 4 5 6 7 8 9
Time (month)
Th
ro
ug
hp
ut
   
&
  W
IP
 (l
ot
)
WIP
Throughput
 
Fig. 2 Time plots of throughput and WIP 
 
N 
seg 1 seg 2 seg 3
Dedicated operation Non-dedicated operation
D 
 16
-0.6
-0.4
-0.2
0
0.2
0.4
0 30 90 180 360
Mask setup time (seconds)
On
-ti
me
 de
liv
ery
 ra
te LBSA-F
LBSA-I
SDA-F
FCFS-F
LWL-F
 
(a) 
-8
-6
-4
-2
0
2
4
0 30 90 180 360
Mask setup time (seconds)
Cy
cle
 tim
e (
da
ys
) LBSA-F
LBSA-I
SDA-F
FCFS-F
LWL-F
 
(b) 
-400
-300
-200
-100
0
100
200
300
0 30 90 180 360
Mask setup time (seconds)
Th
ro
ug
hp
ut 
(lo
ts) LBSA-F
LBSA-I
SDA-F
FCFS-F
LWL-F
 
(c) 
Fig. 4 Performance comparison for various mask setup times, with product mix RB, (a) on-time 
delivery rate, (b) cycle time, (c) throughput. 
 
 
 
 
 
 
 
 
