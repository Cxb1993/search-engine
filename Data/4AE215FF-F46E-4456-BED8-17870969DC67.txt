1 
1. INTRODUCTION 
With the quick and ongoing growth of digitalized information, more and more data are being 
exchanged. Data transferred would be safe from eavesdrop or modification if participants communicate 
over a secure channel. However, building and maintaining a secure channel for any two prospective 
participants isn't a good solution to provide secure communication.  
Generally, communication parties communicate over an insecure channel (an open channel). This 
channel could be a telephone line, computer network or Internet, for example. It is not difficult to have a 
tapping device tagged on these channels. Therefore, there are eavesdroppers and intruders who can 
intercept and modify messages transmitted in an open channel. 
Let’s call the message to be transmitted plaintext m. Plaintext can be text data, executable program or 
any kind of information. Instead of sending plaintext to a recipient, an encryption scheme E(.) is used to 
encrypt a plaintext and obtain a ciphertext c. Then the ciphertext is transmitted to the recipient. The 
recipient can turn the received ciphertext into plaintext by a decryption scheme D(.). Needless to say, there 
must be some methods so that the processes of enciphering and deciphering work correctly, namely m = 
D(c) = D(E(m)), and no one except the recipient can decrypt the ciphertext to obtain the embedded 
plaintext. In the public-key cryptography [1-4], each participant has a published public key pk and a 
hidden secret key sk. Let pkr (pks) and skr (sks) denote the recipient’s (sender’s) public key and secret key. 
Then the sender using the recipient’s public key to construct a ciphertext, c = E(pkr, m), and sends it to the 
recipient. Upon receiving ciphertext c, the recipient uses secret key to recover plaintext, m = D(skr, c). 
Theoretically, any eavesdropper should have no idea about the plaintext, since only the recipient knows 
secret key skr. In this way (using encryption scheme), the recipient’s privacy is protected. 
In some applications the recipient may require to make sure of the originator of each message 
received, e.g. key agreement, e-commerce, secure e-mailing. In the public-key setting, the scheme of 
digital signature can be used to generate a signature on either the plaintext or ciphertext. Then, sender 
sends recipient the signature together with the ciphertext. This signature confirms that the ciphertext was 
constructed and sent by the sender. Thus the sender’s authenticity is protected. Since any modification of 
the original ciphertext will be detected by the signature, the signature protects the integrity of message. 
Furthermore, the signature also provides the property of non-repudiation. That is to say that the sender 
cannot deny having sent recipient the message. 
Traditionally, the schemes of encryption and digital signature are consecutively applied to message to 
achieve the properties of privacy, authenticity, integrity, and non-repudiation. Namely, enciphering comes 
after signing on a plaintext (sign-then-encrypt) or signing comes after enciphering a plaintext 
(encrypt-then-sign). The computational cost is thus the sum of the cost of the two steps. It is possible to 
integrate enciphering and signing into a single step while still provides the four properties as mentioned 
above. Indeed, a combination of ElGamal encryption [5] and signature scheme with message recovery 
[6-7] was presented in [7]. The scheme of authenticated encryption in [8] and schemes of signcryption in 
[9] are also integration of digital signature and encryption. The terminologies signcryption and 
3 
adaptive chosen message attack; for encryption the new scheme achieves indistinguishable under the 
adaptive chosen ciphertext attack. Again, we give brief description about the security goal and attack 
model of signature scheme. The terminology existentially unforgeable originally defined in [25] is a 
common security goal of signature. This means that any adversary should have a negligible probability in 
forging a valid signature on a new message. The attack model is called adaptive chosen message if a 
signing oracle is available to adversary while forging a signature. More information can be found in [4, 
25-27]. 
So far the authenticated encryption schemes with publicly verifiable [12, 18-22] are unconditionally 
verifiable. Namely, once a matched plaintext is released from recipient, then everyone can verify whether 
the plaintext was sent and signed by the sender. It is also called “convertible authenticated encryption 
scheme” in [28]. In some applications, the recipient may only want to release the plaintext and do not 
release “publicly verifiable information” till a decisive moment. Our new scheme provides this favor 
without additional computation, i.e. the recipient can choose to release “only the corresponding plaintext” 
or “all the publicly verifiable information”. Without enough information, every one except the recipient 
cannot recognize that some messages were a signature of the sender.   
Furthermore, the proposed authenticated encryption is also secure against one-more-decryption 
attack [29]. Under this attack, an adversary tries to decrypt (l + 1) plaintexts from given l ciphertexts (l > 
1). In the applications of private information retrieval, a security guarantee against attack of this type 
would be desirable.   
1.3 Organization  
Section 2 introduces notation. Section 3 describes the proposed scheme and proves the correctness as 
well as security. Section 4 discusses the scheme’s performance. Finally, Section 5 concludes the paper.  
2. NOTATION  
Let p and q be two large primes and q divide (p - 1). The notation used in the paper is as follows. Zq 
denotes the addition group modulo q; Zp denotes the addition group modulo p; Z*p denotes the 
multiplicative group modulo p; g is an element of Z*p and we write g ∈ Z*p; a cyclic group G ⊂ Z*p is 
generated by g (g is a generator of G), i.e. G = {gi mod p| i = 0, 1, …, (q - 1)}; G’ = G \ { p1,…, pi} = {x| x 
∈ G and x ∉ { p1,…, pi}}; use |G| to denote the cardinality of G (|G| = q); a ←R G denotes that an element 
a is randomly and uniformly selected from G; x ← y denotes that value of y is assigned to x. Assume that 
primes p, q and generator g have been chosen such that finding the discrete logarithm in G is hard. Namely, 
given an attacker p, q, g, and an element y ←R G, it is assumed that finding x ∈ Zq such that y = gx mod p 
is computationally intractable. 
Also, a||b denotes a concatenation of strings a and b; f(.) is a one-way permutation function defined 
as f(.): G → G; H(.) is a one-way collision-resistant hash function with domain {0, 1}* and range Zq. 
Furthermore, we assume that the hash function H(.) and permutation function f(.) have been modeled as a 
random oracle [30]. 
3. PROPOSED SCHEME  
A recipient randomly selects xr from Zq and computes yr = gxr mod p, then publishes yr as her/his 
A ciphertext (c, e, s) is essential a signature of Sig-scheme, i.e. a signature on message c || m || yr || ys, 
where m = c ⋅ f((gs(ys)e)xr) mod p, k’ = ((gs(ys)e)xr mod p) mod q, e = H(c || m || yr || ys || (gk + k’ mod p)), s = 
(k - e ⋅ xs) mod q. Namely, Sig-scheme is a variant of Schnorr signature with restricted verifiable 
information. Nobody except sender and recipient can verify this signature unless the recipient releases 
plaintext m and k’. Thus the result of the following lemma seems reasonable.    
Lemma 2. The signature scheme Sig-scheme is at least as secure as Schnorr signature scheme.  
Proof. In the following, we will include message in signature at our convenience. With the knowledge of 
secret key xr, recipient transforms a ciphertext (c, e, s) into a Schnorr signature. The details of 
transformation are as follows. Recipient runs the algorithm Authen-Dec(.) and obtains m’, k’. Then a 
Schnorr signature (m’’, e, s’) is obtained. Namely, message m’’ = c || m’ || yr || ys, commitment is gk + k’ mod 
p, response s’ = s + k’, and challenge e is a hash value on concatenation of message m’’ and commitment, 
i.e. e = H(c || m’ || yr || ys || (gk + k’ mod p)).  
Although recipient is able to convert a signature of Sig-scheme, (c, e, s), into a Schnorr signature, 
recipient cannot transform an ordinary Schnorr signature (m, e, s) into a Sig-scheme signature, (c’, e’, s’). 
An exception is that message m = c’ || m’ || yr || ys and c’ = m’ / f((gs(ys)e)xr) mod p. Then (c’, e, s’) is a 
Sig-scheme signature, where s’ = (s - k’) mod q and k’ = ((gs(ys)e)xr mod p) mod q. However, this situation 
will occur with negligible probability.  
Let the quantity (A) be A’s advantage of forging a Sig-scheme signature under 
adaptive chosen message attack model. We conclude that  
cma-uf scheme-SigADV
cma-uf scheme-SigADV (A) ≤ (A)           (1) cma-uf sig-SchnorrADV
or else the adversary can first forge a Sig-scheme signature and then transform it into a Schnorr signature. 
Therefore a Schnorr signature can be forged with a higher probability than (A), this 
contradicts the assumption that (A) is A’s maximum advantage of forging a Schnorr 
signature.    
cma-uf sig-SchnorrADV
cma-uf sig-SchnorrADV
The insider security introduced in [24] is a stronger notion for the security of authenticated 
encryption. Assume that an adversary is given recipient’s secret key and the adversary still cannot forge a 
signature with non-negligible probability. Then the signature scheme is secure against insider attack. We 
see that our Sig-scheme is secure against insider attack. 
Benefiting by that a ciphertext is also a signature of Sig-scheme; the proposed authenticated 
encryption is also secure against one-more-decryption attack. In our scheme, a success in 
one-more-decryption attack implies that given l ciphertexts (signatures), an adversary can construct 
another ciphertext different from those l ciphertexts. It would be impossible for an adversary (include 
recipient) to do that, since the security of Sig-scheme is strong enough to resist this attack, by Lemma 2. 
3.3 Security of Encryption 
In the following, we will use the technique of sequences games described in [32] to prove the security 
goal of encryption. Our proof consists of six games, Game0, Game1, …, Game5. Game0 demonstrates the 
definition of security goal and attack model. Namely, a challenger who honestly runs the algorithm 
5 
Now we try to compute the quantity of  using the following games and differences 
(transitions) between games.  
CCA2 Enc-AuthenADV
3.3.2 A change in decryption oracle 
Game1:  
xs ←R Zq, xr ←R Zq, ys ← gxs mod p, yr ← gxr mod p, b ←R {0, 1} 
Upon the ith encryption query:  
(mi0, mi1) ← A (ys, yr, ψ1, ..., ψi-1)    
ki ←R Zq, Yri ← (yr)ki mod p, ci ← mib / f(Yri) mod p, k’i ← Yri mod q 
ei ← H(ci || mib || yr || ys || (gki + k’i mod p)), si ← (ki – ei ⋅ xs) mod q, ψi ← (ci, ei, si) 
Return ψi to A(.) as the answer 
Upon the jth decryption query (ψ’j denotes the jth ciphertext (c’j, e’j, s’j)): 
Return “invalid” as the answer   // ψ’j ∉ {ψa | a = 1, …, Qj } 
b’ ← A (ψ1, ..., ψqe, m’1, ..., m’qd) ∈ {0, 1} 
 
Note that in Game1, the decryption oracle always returns “invalid” to the adversary in response to 
his/her decryption queries. Let S1 define the event that b = b’ in Game1. Also F defines the event in Game1 
that for some j = 1, …, qd, the adversary queried decryption oracle with a ciphertext (c’j, e’j, s’j), and the 
ciphertext is such that Y’rj ← (gs’j(ys)e’j)xr mod p, m’j ← c’j ⋅ f(Y’rj) mod p, k’j ← Y’rj mod q, s’’j ← s’j + k’j 
mod q, e’’j ← H(c’j || m’j || yr || ys || (gs’’j(ys)e’j mod p)) and e’j = e’’j. It is clear that Game0 and Game1 will 
proceed identically unless event F occurs. Essentially, the event F implies that the adversary has 
successfully forged a signature of Sig-scheme. By Lemma 2 in Section 3.2, event F occurs with probability 
less than qd ⋅  (.), i.e.  cma-uf sig-SchnorrADV
Pr[F] ≤ qd ⋅ (.) ≤ qcma-uf scheme-SigADV d ⋅ (.).   (3) cma-uf sig-SchnorrADV
The Difference Lemma in [32] describes the relationship between events S0, S1, and F. It states that | 
Pr[S0] – Pr[S1] | ≤ Pr[F]. Therefore the following inequality is obtained. 
| Pr[S0] – Pr[S1] | ≤ qd ⋅ (.)             (4) cma-uf sig-SchnorrADV
3.3.3 Permutation function f(.) is replaced by a truly random faithful permutation function 
Game2:  
xs ←R Zq, xr ←R Zq, ys ← gxs mod p, yr ← gxr mod p, b ←R {0, 1} 
Upon the ith encryption query:  
(mi0, mi1) ← A (ys, yr, ψ1, ..., ψi-1)  
ki ←R Zq, Yri ← (yr)ki mod p, k’i ← Yri mod q 
Pi ←R G 
If (Pi ∈ { p1,…, pi-1}) then Pi ←R G \ { p1,…, pi-1} 
pi ← Pi
ci ← mib / pi mod p 
ei ← H(ci || mib || yr || ys || (gki + k’i mod p)), si ← (ki – ei ⋅ xs) mod q, ψi ← (ci, ei, si) 
7 
Difference Lemma, we have  
| Pr[S2] – Pr[S3] | ≤ Pr[Collision3] ≤ |G|2
qe
2)( .         (7) 
3.3.5 Hash function H(.) is replaced by a truly faithfully random function 
Game4:  
xs ←R Zq, xr ←R Zq, ys ← gxs mod p, yr ← gxr mod p, b ←R {0, 1} 
Upon the ith encryption query:  
(mi0, mi1) ← A (ys, yr, ψ1, ..., ψi-1)  
ki ←R Zq, Yri ← (yr)ki mod p, k’i ← Yri mod q 
Pi ←R G, pi ← Pi
ci ← mib / pi mod p 
ei ← R Zq, si ← R Zq, Yi ← gsi (ys)ei mod p    // now ei and si are random 
If (ci || mib || yr || ys || Yi = cj || mjb || yr || ys || Yj) for some j < i  
Then ei ← ej, si ← sj, k’i ← k’j
Else the hash value of H(ci || mib || yr || ys || Yi) is ei  
ψi ← (ci, ei, (si – k’i) mod q)  
Return ψi to A(.) as the answer 
Upon the jth decryption query: 
Return “invalid” as the answer     
b’ ← A (ψ1, ..., ψqe, m’1, ..., m’qd) ∈ {0, 1} 
 
Note that in Game4, the hash function H(.) is replaced by a truly faithfully random function. 
Then the difference between Game3 and Game4 is just the difference between the hash function H(.) and 
a truly faithfully random function, more information about random and pseudo random functions 
please refer to [4, 32]. Let (.) be this difference and Sprf(.)HADV 4 the event that b = b’ in Game4. Then we 
have 
| Pr[S3] – Pr[S4] | ≤ (.).                   (8) prf(.)HADV
3.3.6 The truly faithfully random function is replaced by a truly forgetfully random function 
Game5:  
xs ←R Zq, xr ←R Zq, ys ← gxs mod p, yr ← gxr mod p, b ←R {0, 1} 
Upon the ith encryption query:  
(mi0, mi1) ← A (ys, yr, ψ1, ..., ψi-1)  
ki ←R Zq, Yri ← (yr)ki mod p, k’i ← Yri mod q 
Pi ←R G, pi ← Pi
ci ← mib / pi mod p 
ei ← R Zq, si ← R Zq, Yi ← gsi (ys)ei mod p   // now ei and si are random 
9 
11 
5. CONCLUSION 
This paper has presented a secure authenticated encryption scheme. In the aspect of signature, it is 
shown at least as secure as the Schnorr signature scheme which we have included in the proposed scheme. 
It is possible to integrate with other signature scheme, e.g. DSA signature scheme. Depending on the 
amount of information released by recipient, a signature is either publicly verifiable or not.  
As for the encryption, it is secure against one-more-decryption attack. Also, the adversary’s 
advantage in guessing random bit b is directly related to the advantage of forging a signature as shown in 
equation (11).  
As discussed in Section 3.2, the proposed scheme’s signature is secure against insider attack. But 
encryption is not. If an adversary has the knowledge of sender’s secret key, then recipient’s privacy is lost. 
It would be a challenge to construct an authenticated encryption to prevent both signature and encryption 
from insider attack.   
REFERENCES 
1. W. Diffie and M. E. Hellman, “New directions in cryptography,” IEEE Transactions on Information 
Theory, Vol. IT-22, pp. 644-654, 1976. 
2. A. Menezes, P. van Oorschot, and S. Vanstone, Handbook of Applied Cryptography, New York, London, 
Tokyo, CRC Press, 1996. 
3. H. Delfs and H. Knebl, Introduction to Cryptography-Principles and Applications, New York, Hong 
Kong, Springer-Verlag, 2002. 
4. M. Bellare, Course note: Introduction to Modern Cryptography, http://www- cse.ucsd.edu/users/mihir/, 
Chapter 11, 2004. 
5. T. ElGamal, “A public key cryptosystem and a signature scheme based on discrete logarithms,” IEEE 
Transactions on Information Theory, Vol. IT-31, pp. 469-472, 1985. 
6. K. Nyberg and R. A. Rueppel, “A new signature scheme based on the DSA giving message recovery,” 
Proceedings of the 1st ACM Conference on Computer and Communications Security CCS’93, ACM 
press, pp. 58-61, 1993. 
7. K. Nyberg and R. A. Rueppel, “Message recovery for signature schemes based on the discrete 
logarithm,” Advances in Cryptology- EUROCRYPT’94, LNCS 950, pp. 182-193, 1994. 
8. P. Horster, M. Michels, and H. Petersen, “Authenticated encryption schemes with low communication 
costs”, Electronics Letters, Vol. 30, No. 15, pp. 1212-1213, 1994. 
9. Y. Zheng, “Digital signcryption or how to achieve cost (signature and encryption) << cost (signature) + 
cost (encryption)”, Advances in Cryptology- CRYPTO’97, LNCS 1294, pp. 165-179, 1997. 
10. M. S. Hwang and C. Y. Liu, ”Authenticated encryption schemes: current status and key issues,” 
International Journal of Network Security, Vol. 1, N0. 2, pp. 54-66, 2005. (http://isrc.nchu.edu.tw/ijns/). 
11. Y. M. Tseng and J. K. Jan, “An efficient authenticated encryption scheme with message linkages and 
13 
of Cryptology, Vol. 13, N0. 3, pp. 361-396, 2000. 
28. T. S. Wu and S. L. Hsu, “Convertible authenticated encryption scheme,” The journal of Systems and 
Software, Vol. 39, No. 3, pp. 281-282, 2002. 
29. C. P. Schnorr and M. Jakobsson, ”Security of signed ElGamal encryption”, Advances in 
Cryptology-ASIACRYPT 2000, LNCS 1976, pp. 73-89, 2000. 
30. M. Bellare and P. Rogaway, “Random oracles are practical: a paradigm for designing efficient 
protocols”, Proc. of the 1st ACM Conference on Computer and Communications Security CCS’93, 
ACM press, pp. 62-73, 1993. 
31. K. Ohta and T. Okamoto, “On the concrete security treatment of signatures derived from 
identification,” Advances in Cryptology- CRYPTO’98, LNCS 1462, pp. 354-369, 1998. 
32. V. Shoup, “Sequences of games: A tool for taming complexity in security proofs,” 
http://eprint.iacr.org/2004/332, May 27, 2005. 
33. A. Lenstra and E. Verheul, “Selecting cryptographic key sizes”, The Third International 
Workshop on Practice and Theory in Public Key Cryptography (PKC2000), LNCS 1751, pp. 
446-465, 2000. 
計畫成果自評 
  本計畫檢視各式各樣的鑑別式加密法之後，在不影響計算量與通訊量的前題之下，提出
具備“有條件的認證加密者身份＂功能的鑑別式加密法，並驗證其安全性能。 
受惠於本計畫的發表文章如下: 
Publications: 
1. F. Y. Yang, “A Secure Scheme for Authenticated Encryption,” Cryptology ePrint Archive 2005/456, 
December 2005, http://eprint.iacr.org.
2. F. Y. Yang, “A Secure and Efficient Scheme for Signed ElGamal Encryption,” The 16th Information 
Security Conference 2006 ISC2006, Taichung Taiwan, pp. 497-505, 2006. 
3. F. Y. Yang, “An Authenticated Encryption Scheme — Schnorr signature + RSA encryption,” The 16th 
Information Security Conference 2006 ISC2006, Taichung Taiwan, pp. 67-76, 2006. 
 
