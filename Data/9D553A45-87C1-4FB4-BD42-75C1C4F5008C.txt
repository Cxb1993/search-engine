 I 
摘要 
 
網際網路的興起與其便利性將有利於檔案分享應用的發展。本計畫提出一個
基於橢圓曲線密碼系統的階層式行動代理架構，如同處理行動代理人與主機端間
金鑰管理及存取控制問題般，以解決行動代理人們之間的相似問題。所提出的機
制具備如跨平台，自我管理，行動性以及其他不同的存取特色，以支援在分散式
環境底下的異質資料庫管理系統。並且引發出金鑰管理的安全及在非特有網路下
存取分散式環境的控制安全。眾所皆知，密碼系統必須被賦予實際可用的安全控
制方法以存取網際網路上的活動。所提出的方法將成功安全地存取行動代理人與
主機端間的關聯性並同時節省已使用的存儲空間。如此一來將使得行動代理人能
有效地操作並為行動計算能力放置於一個安全的執行環境。 
 
關鍵詞：橢圓曲線密碼系統，行動代理，存取控制，行動性，異質資料庫，
分散式環境 
 III 
目錄 
 
摘要 ........................................................................................................ I 
Abstract ................................................................................................ II 
1 Introduction ..................................................................................... 1 
2 Overview of Volker and Mehrdad’s Scheme .................................. 3 
3 Overview of Proposed Approach .................................................... 6 
3.1 Mathematic Background of Elliptic Curve Cryptography ..... 6 
3.2 Proposed Hierarchically-based Mobile Agent Framework .... 7 
4 Discussion of Security Risks and Relevant Measures .................. 10 
4.1 Reverse Attack ...................................................................... 10 
4.2 Conspiracy Attack ................................................................ 10 
4.3 External Collective Attack .................................................... 11 
4.4 Equation Breaking Attack .................................................... 11 
5 Analysis of Performance Efficiency ............................................. 12 
6 Conclusion .................................................................................... 14 
References ........................................................................................... 15 
計畫成果自評(含學術成果發表) ...................................................... 18 
 2 
A mobile agent continuously visits other agents to exchange information while 
roaming around the servers in the networks carrying out its tasks. However, 
convenient as a mobile agent is, there are several potential security risks [11] in 
making contact with others in the Internet, especially for business activities. The 
security risks occur in different situations as described below.  
One, protecting hosts from access by unauthorized parties. Two, protecting hosts 
from attacks by malicious agents, e.g., an agent might assume the identity of legal 
agent to request for services. Three, protecting agents from attacks by another agent, 
e.g., an agent tries to hinder another agent by constantly sending messages to the 
agent, causing the receiving end server to overload and the computation time to 
increase. Finally, protecting agents from attacks by malicious hosts, e.g., a host might 
impersonate an agent so as to deceive the agents or to ignore the requests of the agents. 
A malicious host deliberately delays an agent’s request, or even terminates an agent’s 
connection without warning causing other agents awaiting response from this agent to 
enter into a deadlock. Also, a malicious host can deliberately make an agent fail to 
carry out his task causing the agent to be live locked. 
The first three risks are caused by the agents. They are resolvable through 
cryptography technologies that can control agents’ access. The final risk is caused by 
a malicious host that controls the accessing and roaming activities of mobile agents. It 
is quite difficult to prevent a malicious server from attacking. Therefore, this work is 
intended as a solution to the attacks from the host authorities. 
Numerous attempts to raise the security of mobile agents were made by scholars. 
A. Corradi, R. Montanari, and C. Stefanelli [12] presented a mobile agent structure 
called SOMA. The structure was build with an agent, agent server, management 
system, and security approach. With the same functions as SOMA, N. M. Karnik and 
A. R. Tripathi [13] proposed a structure called Ajanta. Besides, a tree structure was 
developed by Volker and Mehrdad [14], with the functions of mobile agent 
authorization, key management, and access control. However, the scheme did not take 
into consideration the efficiency of key management. Therefore, the scheme has two 
faults, bulky mobile agent codes and excessive calculations for encryption/decryption 
of keys. In recent years, Chang and Lin [15] proposed a key management scheme with 
hierarchically-based structure to reform the inefficient key management in Volker and 
Mehrdad’s scheme. Although Chang and Lin corrected the faults in Volker and 
Mehrdad’s scheme, their proposal remained inefficient as the scheme required the use 
 4 
and controlling access of agents. 
 
Figure 1: Tree-based Mobile Agent Framework 
According to the data patterns ─ either static or mutable, the mobile agent 
framework is separated into two branches. The static branch stores constant data that 
will not change during the agent’s lifetime, such as class codes, security policies, and 
so on. As to the mutable branch, the contents are alterable data like the return results, 
the instances of the classes, and the confidential contexts. Confidential information, 
whether static or mutable, always remains private. Also, after an agent achieves the 
target on a host, the host can alter the state of the agent and the information carried by 
the agent on the spot. Access control methods are competent so as to protect the secret 
resources from being accessed by unauthorized personnel; there are numerous similar 
related studies. In this section, the key management and access control method [14] 
presented by Volker and Mehrdad is given as an introduction to the subject, as 
follows. 
The method by Volker and Mehrdad can be applied to public key cryptosystems, 
or symmetric encryption systems. Access control can be attained in the following 
manner. For the static branch, a folder is created for each visited host within the 
static/sctx/acl folder. If agent owner wants to send mobile agent onto the Internet to 
carry out assigned tasks like information retrieval or Internet transaction, the agent 
owner must first set the traveling route and access policies before sending the agent. 
The agent owner encrypts the confidential file with its matching secret key using a 
 6 
The observations of the tree-based mobile agent structure are discussed in the 
following.  
One is that the tree-based structure wastes a lot of memory storing the key, that is, 
the decryption key is repetitively stored under different folders. In the example shown 
in Fig. 2, DK1 can be found in static/sctx/acl/S1, static/sctx/acl/S2, and 
static/sctx/acl/S4. Similar consumption of memory occurs in archiving DK2, DK3, DK4, 
DK5, and DK6. Clearly, the tree-based structure enlarges the size of a mobile agent. 
The other is that the method costs a large computation amount for public key 
computation. Since the decryption key is restored in various hosts’ folders 
static/sctx/acl/Si, more computations for public key encryption are needed to maintain 
the confidentiality of the folder.  
Minimizing storage space and public key calculations are in support of the target 
to make a mobile agent migrate freely in the Internet. For practical application, this 
study presents an efficient key management and access control method based on 
hierarchically-based mobile agent structure. 
 
III. Overview of Proposed Approach 
III.I Mathematic Background of Elliptic Curve Cryptography 
    The elliptic curves used in cryptography are of two types and defined as: the 
prime curves over Zp for software applications and the binary curves over GF(2n) for 
hardware applications. In the finite field Zp, an elliptic curve is represented as E: y2 = 
x3 + ax + b, where (a, b)  Zp and 4a3 + 27b2 ≠ 0 (mod p). The elliptic curve indicates 
the integer points set that contains all points over the elliptic curve and a point of 
infinity O. The point of infinity O is the third point of intersection of any straight line 
with the curve, so that there are points including (x, y), (x, –y), and O on the straight 
line. The necessity of 4a3 + 27b2 ≠ 0 (mod p) is to guarantee that the curve y2 = x3 + 
ax + b (mod p) will not cause repeated factors. The set Ep(a, b) defines a finite 
Abelian group, then the calculation in the finite Abelian group can be precisely 
executed because the occurrence of round off error in cryptographic application is 
disallowed. 
The set of elliptic curve points forms a commutative finite group under the rules 
of addition operation, and it must satisfy the rules below:  
 8 
 
Figure 3: Hierarchically-based Framework for Mobile Agents to Migrate 
In the hierarchy, the leaf node indicates the decryption key DKj, where DKj is 
used to decrypt the confidential files; the internal nodes represent the hosts Si. Also, 
an agent owner can form an accessible network to obtain the decryption key located at 
the leaf node. From the example shown in Fig. 4, the accessible network allows the 
root node S1 to have authority over all decryption keys and S2 to have authority over 
DK1, DK2, and DK3. 
 
Figure 4: Accessible Network of Decryption Keys for Mobile Agents 
If agent owner wants to send mobile agent onto the Internet to carry out assigned 
tasks, before he sends the agent, he must first decide which hosts are to be visited by 
the agent and what information can be accessed by the visited host. Next, he encrypts 
the confidential file using the key, DKj. A symmetric cryptosystem like the AES can 
be used for the encryption. Then, he constructs the accessible network according to 
the access policies, and assigns a non-repeated superkey ni to each internal node (host). 
Each superkey is encrypted using public key cryptosystem, that is, the public key of 
the host is used to encrypt the superkey. When the agent visits the host and 
 10 
    From the example in Fig. 3, HDK1(x), HDK2(x), HDK3(x), and HDK4(x) are 
constructed as follows.  
46434144
363533323133
252423222122
14121111
)]()][()][([)(
)]()][()][()][()][([)(
)]()][()][()][()][([)(
)]()][()][([)(
DKPnfxPnfxPnfxxH
DKPnfxPnfxPnfxPnfxPnfxxH
DKPnfxPnfxPnfxPnfxPnfxxH
DKPnfxPnfxPnfxxH
DKDKDKDK
DKDKDKDKDKDK
DKDKDKDKDKDK
DKDKDKDK




    To derive DK4, S1 takes n1 and PDK4 into the public polynomial HDK4(x), as 
derived below. 
4
464413441
4644134411441
4644134411441
414
  
)]()()][()([  0  
)]()()][()()][()([  
 ])()([ ])()([ ])()([   
 ))((   
DK
DKPnfPnfPnfPnf
DKPnfPnfPnfPnfGnnfGnnf
DKPnfPnfPnfPnfPnfPnf
PnfH
DKDKDKDK
DKDKDKDKDKDK
DKDKDKDKDKDK
DKDK




 
 
IV. Discussion of Security Risks and Relevant Measures 
Potential security risks and corresponding solutions are demonstrated in this 
section. The result shows that the proposed method is secure enough for practical 
applications. 
IV.I Reverse Attack 
When two hosts Si and Sm form a relationship such as Sm ≤ Si, or when Si and Sm 
are located on the same level in a hierarchy, an attempt by Sm to forcefully hack the 
superkey of Si is called a reverse attack. In disjoint-entity hierarchy, any two hosts are 
independent from each other. When Sm, who does not have authority over Si, tries a 
reverse attack on Si, it must challenge Pi = niG where the difficulty depends on the 
ability to solve the ECDLP. When information is sparse, a subordinate host cannot in 
reverse determine the superkey of the preceding host. 
IV.II Conspiracy Attack 
This risk results when internal members cooperate to hack another host. In 
directed accessible network, it should be noted that an upper-level host might suffer a 
conspiracy attack from the lower level subordinate hosts. Take for example the hosts 
in Fig. 3. Suppose S4 and S5 reach an agreement to conspire against S1. Although it is 
possible to hack the desired superkey using known information, this attack shall fail 
because the problem is a kind of ECDLP. 
 12 
When x = f (n2PDK3), then the result of f (n2PDK3) – f (nDK3P2) can be derived as 
follows. 
  )]()][()][()][([ 
 )(   )()(
63533313
33
2332 PnfxPnfxPnfxPnfx
DKxHPnfPnf
DKDKDKDK
DK
DKDK 
  
In this case, all S2 can legally obtain is n2 and DK3 and no other. Without 
sufficient information, even though HDK3(x) is eventually cracked by S2 through the 
shared DK3, S2 shall only obtain: (1) nDK3 through which S2 can obtain DK3, but 
because DK3 is inherently accessible by S2, so it does not matter; (2) P3, but since P3 
is inherently a public parameter, S2 cannot determine n3, so it does not matter. 
Therefore, hacking n3 fails because n3 is not included in the structure of HDK3(x).  
 
V. Analysis of Performance Efficiency 
According to Volker and Mehrdad’s access control scheme, under static/sctx/acl, 
each host’s folder must store and manage several decrypt-able confidential file’s 
decryption key. The number of decryption keys depends on the amount of files that is 
accessible by the host. But Volker and Mehrdad’s scheme neglected the problem of 
efficient key management. Because there are a lot of common files among the 
confidential files accessible to the visited hosts, a lot of space is wasted repeatedly 
storing decryption key causing the size of the mobile agent to be too large. This 
causes the mobile agent to consume excessive bandwidth while moving between the 
various hosts. Also, because the decryption key is repeatedly stored under the 
static/sctx/acl folder, agent owner must use more public key encryption operations to 
protect the confidentiality of the related folders. And the computation amount needed 
by the visited hosts to decrypt the decryption key is also increased. This could easily 
cause inefficiency problems when the host executes the mobile agent codes. 
In recent years, Chang and Lin [15] proposed a key management scheme with 
hierarchically-based structure to reform the inefficient key management in Volker and 
Mehrdad’s tree-based structure. In studies performed by Chang and Lin, it was proved 
that, be it the storage amount of decryption key or the calculations needed to derive 
the decryption key, their key management method far excels that of Volker and 
Mehrdad’s. Therefore, we shall directly compare our scheme to Chang and Lin’s 
scheme in the efficiency analysis. 
 14 
    In Chang and Lin’s scheme, the modulus exponentiation operation consumes the 
most time. In ours, it is the elliptic curve multiplication operation. These two 
operations require far greater time complexity as compared to other operations like 
multiplication, addition, hash function, etc. Therefore, the performance analysis 
performed above is based only on the modulus exponentiation operation and elliptic 
curve multiplication operation required by the two schemes. Also, consulting the 
studies of Koblitz et al. [18], in the operation of pg k mod , k is a random integer of 
160 bit, p is a prime number of 1024 bit, and the elliptic curve multiplication 
operation is used to calculate sG, where )( PZEG  and 1602p , where s is a 
random number of 160 bits. Integrating the above, the operation relations are as 
follows:  
MULEXP TT 240  
MULMULEC TT 29_   
The performance analysis between Chang and Lin’s scheme and our scheme is 
illustrated by Table 1. From the result of the comparison, we can see that be it in 
terms of storage space or computation amount, the performance of our scheme far 
excels that of Chang and Lin’s.  
Table 1: The comparison of Chang and Lin’s scheme to the proposed scheme 
Comparison Items Chang and Lin’s Scheme The Proposed Scheme 
Required Storage Space ) 1024 1024( mr   bits ) 320 160( mr   bits 
Required 
Computation 
Cost 
Time 
Complexity 
2r PKT  + 
  ri iSrm 1 )( EXPT  
2r PKT  + 
  ri iSrm 1 ))(2( MULECT _
Rough 
Estimate 
2r PKT  + 
240   ri iSrm 1 )( MULT
2r PKT  + 
29   ri iSrm 1 ))(2( MULT
 
VI. Conclusions 
In advanced networking research, issues on mobile agents have always been 
popular interest. Effectively utilizing resources over the Internet greatly enhances the 
efficiency of an organization and economizes computational overhead. With regard to 
 16 
Applications and Technologies, 2006, pp.454-459. 
[7] O. Esparza, J.L. Muñoz, M. Soriano and J. Forné, Secure Brokerage 
Mechanisms for Mobile Electronic Commerce, Computer Communications, 
Vol.29, No.12, 2006, pp.2308-2321. 
[8] B. Arunachalan, J. Light and I. Watson, Mobile Agent based Messaging 
Mechanism for Emergency Medical Data Transmission Over Cellular 
Networks, Proceedings of the 2nd International Conference on Communication 
Systems Software and Middleware, 2007, pp.1-6. 
[9] B. Orgun and J. Vu, HL7 Ontology and Mobile Agents for Interoperability in 
Heterogeneous Medical Information Systems, Computers in Biology and 
Medicine, Vol.36, No.7-8, 2006, pp.817-836. 
[10] A. Koliousis and J. Sventek, A Trustworthy Mobile Agent Infrastructure for 
Network Management, Proceedings of the 10th IFIP/IEEE International 
Symposium on Integrated Network Management, 2007, pp.383-390. 
[11] A. Karmouch, Mobile Software Agents for Telecommunications, IEEE 
Communications Magazine, Vol.36, No.7, 1998, pp.24-25. 
[12] A. Corradi, R. Montanari and C. Stefanelli, Security Issues in Mobile Agent 
Technology, Proceedings of the 7th IEEE Workshop on Future Trends of 
Distributed Computing Systems (FTDCS ‘99), IEEE Computer Society Press, 
Cape Town, South Africa, 1999, pp.3-8. 
[13] N.M. Karnik and A.R. Tripathi, A Security Architecture for Mobile Agents in 
Ajanta, Proceedings of the International Conference on Distributed Computing 
Systems, Taipei, Taiwan, 2000, pp.402-409. 
[14] R. Volker and J.S. Mehrdad, Access Control and Key Management for Mobile 
Agents, Computers and Graphics (Pergamon), Vol.22, No.4, 1998, 
pp.457-461. 
[15] C.C. Chang and I.C. Lin, A New Solution for Assigning Cryptographic Keys 
to Control Access in Mobile Agent Environments, Wireless Communications 
and Mobile Computing, Vol.6, No.1, 2006, pp.137-146. 
[16] V.S. Miller, Use of Elliptic Curves in Cryptography, Advances in Cryptology: 
Proceedings of Crypto '85, Volume 218 of Lecture Notes in Computer Science, 
1986, pp. 417-426. 
 18 
計畫成果自評 
 
I. 原訂計畫目標： 
本年度(第三年度)的計畫研究重點在於設計一個可在分散式環境底下且
能支援異端資料庫的存取控制管理系統，並以密碼學為安全方法的基礎以避
免 P2P 檔案分享機制於檔案分享時遭到非法的竊聽，得以維護檔案之機密性。 
 
II. 研究內容與原計畫相符程度 
完全符合。 
 
III. 預期目標達成情況與綜合自評 
本項計畫執行三年以來，在台大資工系賴飛羆教授的帶領與督導下，研
究進行的進度與原先計畫的進度完全一致。第一年研究設計一個植基於橢圓
曲線密碼系統與單向雜湊函數的存取控制管理系統，不僅所需的計算量較
少，並在安全性不變的前提下所需金鑰長度亦可更加簡短，達到記憶體儲存
空間降低之需求，其研究成果已於 2008 年發表於國際知名期刊中；第二年研
究主要在於網路節點間通訊資料機密性的維護，藉由提出的會議金鑰協定，
可讓多個網路節點共同建構出一把會議金鑰，藉此分享檔案達到 P2P 網路資
訊交換的機密性，本研究亦已整合成果並於 2009 年發表於國際知名期刊；而
第三年設計之在分散式環境底下，支援異端資料庫的存取控制管理系統，是
以第一年研究成果為基礎加以延伸並改進，使其得以跨平台、於分散式環境
系統底下作業，另其存取系統更適合應用於實際生活中，此成果亦在 2009 年
發表於國際期刊；由此顯見，本計畫之執行相當成功。 
 
