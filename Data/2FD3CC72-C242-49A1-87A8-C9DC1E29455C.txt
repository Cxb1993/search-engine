  I
中文摘要 
基於過去的相關研究與使用者回饋，本研究更進一步提出了高階的遊戲整體設計解決
方案，用以改善現有遊戲引擎中的不足。本計劃中，主要有四大方向：「高階遊戲狀態之設
計模式」在於整體設計模式將引入「遊戲狀態」的概念，利用狀態的描述與移轉，來實現
在遊戲世界中不同情況的轉變，並強化原有的Command 機制以及高階元件以達到簡化遊戲
整體內容的設計；「遊戲互動之多元輸入」除了強化裝置的互動設計，更將近端裝置的狹義
輸入，擴大到從網路端，甚至是檔案等來源的廣義輸入的概念，賦予互動設計新思維。「網
路元件之設計架構」則對遊戲網路化提出高階式網路元件，以第三方物件一致化架構，得
以處理遊戲中的網路性質，讓使用者不必接觸到低階的網路細節；「遊戲介面之簡化設計」
則以使用者介面管理機制，再次設計多種高階元件予以簡化過往繁複介面的開發過程。相
對於以往的核心架構，藉由本次計畫的更新目標下將會獲得全面性的翻新，打破過往較為
中低階的思考及開發模式，最終也將計劃成果整合於新版ISGD 遊戲引擎，以提供本校學
生的遊戲教學、專題製作以及比賽之用，更期望未來能推廣至國內其他學校與社群，讓更
多人可以投入相關產業，以強化國家競爭力。 
 
關鍵詞：網路遊戲引擎、遊戲狀態、多元互動輸入、簡化開發、高階元件 
 
  III
目錄 
前言 .................................................................................................................................................. 1 
研究目的 .......................................................................................................................................... 1 
文獻探討 .......................................................................................................................................... 1 
研究方法 .......................................................................................................................................... 6 
1.高階遊戲狀態之設計模式 ................................................................................................... 6 
2.網路元件之設計架構 ........................................................................................................... 7 
3.遊戲互動之多元輸入 ........................................................................................................... 7 
4.遊戲介面之簡化設計 ......................................................................................................... 10 
結果與討論 .................................................................................................................................... 12 
參考文獻 ........................................................................................................................................ 13 
計畫成果自評 ................................................................................................................................ 14 
  2
式庫出現，為的就是減少開發者在於網路連線層級所耗費的時間，像是 ACE、Enet 以及計
畫所使用的 RakNet[19]。RakNet 是以 C++撰寫而成，為了網路遊戲而提供多種網路功能，
除了基本的連線外，諸如像是網路資料庫、語音通訊、加密傳輸、認證機制、網路大廳、
自動更新資料和其餘網路功能。 
3 網路多媒體平台架構元件 
Microsoft DirectX DirectPlay Lobby主要是針對開發遊戲多媒體平台架構的技術，其中
網路多媒體平台所需要的元件其實大同小異，因此本計劃報告將簡略地針對Microsoft 
DirectX DirectPlay Lobby來探討網路多媒體元件。 
3.1 DirectPlay Lobby 
在DirectPlay Lobby的架構中，其主要是透過五個主要元件所組成。而除了可建置Lobby 
Servers在網際網路上提供Client端實際連接與運行，其他四個元件都必須安裝在使用者的個
人電腦上才能夠執行。以下將列出DirectPlay Lobby 包含的五個元件：大廳伺服端
（LobbyServer）、大廳客戶端（Lobby Client）、支援大廳的遊戲（Lobbyable GameApplicaiton）、
DirectPlay 大廳客戶端元件(DirectPlay Lobby Client Object)、大廳遊戲程式元件（DirectPlay 
Lobbied Application Object）。 
大廳客戶端元件(DirectPlay Lobby Client Object) 和大廳遊戲程式元件（DirectPlay 
Lobbied Application Object）負責連接遊戲程序和大廳客戶端，並且通過私有平台進行聯絡，
其架構如下圖所示： 
 
圖2、概述DirectPlay Lobby Architecture 
4 多重裝置互動設計介面 
近年來多數的專家與學者，對於人機介面領域中所謂的多模式系統 (Multimodel 
System)，開始進行更多的研究與探討，其中學者 Oviatt 曾完善地描述出多模式系統的定義：
「多模式系統主要是由兩個或兩個以上的使用者輸入模式組成，例如手勢（manual gesture）、
碰觸（touch）、語音（speech）、頭部（head）和肢體動作（body movement）等訊號識別。
之後經過系統運算處理，最後藉由多媒體的方式來呈現，此種系統提供了電腦和使用者一
種全新的互動方式。」[13]，定義中指出，多模式系統即是將大量的數出入裝置做一個綜合
性的整合，因為裝置都有個別的特性，若能將這些裝置做恰當的融合，就可以讓人類與系
統之間有更新穎的互動體驗。以下將介紹關於多模式互動裝置設計介面上所提出的相關研
究。 
 
  4
4.3.4 行動裝置－手機 
手機裝置多半都包含有照相功能，也可媲美數位相機，一方面在多點觸控熱潮的影響
下許多觸控螢幕手機的產生也將取代傳統按鍵，也有業者在手機中加入加速度感測器
(Accelerometer)[17]，藉由感測手機的搖晃及水平程度來進行遊戲的操作。 
5 使用者介面設計與探討 
 學者施宏霖於「簡化開發使用者介面之研究與實作」[8]的研究中表示圖形介面是影響
玩家是否願意完這款遊戲的一大主因，特別是一開始玩家就會碰到使用者介面，這也是玩
家對於遊戲的第一印象，是否夠精美、直覺和好操作，這當然都是開發遊戲過程中所要考
量的重點。以下將分別對於 WPF 與 XAML 使用者介面設計模式以及 Ogre Overlay 的二維
介面概念分別進行簡述。 
5.1 WPF 與 XAML 
WPF(Windows Presentation Foundation)[25]屬於Microsoft .NET Framework 3.0的一部分，
發展的目標就是為了提供先進的技術，協助軟體開發人員建立實用又華麗的使用者介面，
並能整合了文字、媒體、圖形、動畫播放和其他等特色的介面。而 XAML[26]是為了讓開
發人員方便設計而由 Microsoft 開發的一種豐富行標記語言。以 XML 為基礎，支援新的軟
體開發模型，為許多不同的使用者介面概念提供原生支援，例如繪圖、動畫、控制項內含
項目、控制和文件流程，以及豐富資料聯結模型。 
5.2 Ogre Overlay 
Ogre[19]透過 Overlay 來處理二維圖像的部分，容器 (OverlayContainer)和元素
(OverlayElement)是 Overlay 中主要的兩個物件，這是一個簡單的基礎，其中更衍生出了包
括 PanelOverlayElement，BorderPanelOverlayElement 以及 TextAreaOverlayElement 這些特
化功能的子類別。Overlay 的底部(根物件)必須是一個表層容器類型(OverlayContainer)。容
器可以包含其他元素亦能被互相嵌套。對於每一個繼承於 OverlayElement 的容器元素，都
必須以父容器為基準進行定位。 
研究方法 
本計劃之研究方法將從高階遊戲狀態之設計模式、網路元件之設計架構、遊戲互動之
多元輸入以及最後的遊戲介面之簡化設計，依序作說明。 
1 高階遊戲狀態之設計模式 
本計劃提出 Game State 管理架構與機制以解決開發團隊在處理大量遊戲狀態的負擔，
並且提出強化原有的 Command 機制以及增加高階元件數量，進一步減少開發團隊所需撰
寫的程式碼，降低開發門檻，幫助他們可以把更多時間專注在遊戲內容上。 
採用 FSM 的觀念設計，以系統化的管理及 FSM 直觀的概念幫助開發團隊解決複雜
的遊戲狀態，流程製作，並且提供切換狀態前、後 Customize 的彈性；並且以複合狀態的
概念建構大小狀態。在切換狀態的過程中，自動幫設計者 Store、Restore 共通部份，減輕設
計者負擔。以參照的觀念重複使用狀態圖，並且運用一些特殊定義的圖示簡化狀態圖的呈
現，以便提供更簡潔的狀態圖給開發團隊。 
  6
在遊戲的開發者設定物件資訊時，可以決定該物件於網路遊戲中的同步程度，分為 High、
Medium、Low 三種程度，遊戲引擎會針對遊戲開發者所設定的優先權來決定同步化程度，
在網路更新時期，即針對不同程度的第三方物件做一致性的處理。 
3 遊戲互動之多元輸入 
3.1 多元輸入架構 
本計劃中遊戲互動之多元輸入是依循前人的一致化裝置架構上的概念延續。原架構中
的裝置互動設計面連接的單位並非以遊戲裝置為依據，而是以各裝置的操作動作為連接區
塊的單位。如下圖所示的架構，左邊為原本一致化裝置的架構，動作區塊中包含了外部裝
置和訊號處理兩個部分，並分化出一層具通用性的裝置訊號轉換模組來呈現出不同的輸入
方式，經由這層來將訊號做處理並轉換成遊戲命令。在裝置訊號轉換模組中，不管訊號由
何而來，而是在乎是否可做轉換處理，如此的輸入方式就不再只是從裝置輸入產生而來，
而且可能是不同來源目地的訊號資料，這樣的「廣義輸入」概念將變得更抽象，有別於過
去訊號資料只產生於近端裝置的「狹義輸入」型式，更能加強抽換裝置的變換彈性。 
 
圖6、多元輸入架構圖 
3.2 轉換模組之高階元件 
為了要簡化遊戲在此部分的開發流程，故增加不一樣的操作模式是必要的。除了將原
架構中原有的設計模式轉換為本計劃中的高階元件之外，也新增高階設計元件，以下為本
計劃新增之較主要的高階設計元件，提供遊戲開發者使用。 
3.2.1 指向性模組之指向辨識元件 
指向辨識意指讓玩家用指向裝置來控制鼠標，畫出相對應的圖型，例如：用滑鼠控制
鼠標，於畫面上繪製方形，圓形等型狀來觸發遊戲命令，可以自由的給予不同的遊戲不同
的操作方式。每一種圖型若是以一筆畫的方式畫出，則其軌跡的方向和順序騎時會不太一
樣，透過記錄這些玩家畫出的軌跡點，利用內部處理計算出圖型的直線軌跡組合，完成以
後，將資料輸出用以比對是屬於何種圖型，再觸發對應的遊戲命令。 
3.2.2 聲音模組之語音辨識元件 
聲音的原始訊號相當複雜，必須透過電腦的採樣來轉成數位訊號，再經由語音辨識引
擎對此訊號做辨識，當辨識完成後會傳送出一系列的引擎事件(Event)，例如：一個指令被
辨識後的事件、一段聲音被開始輸入後的事件等；而在辨識流程前，會從使用者在互動設
計介面中先設定好的語音辨識元件中抽取參數，經由適當轉換後產生原本Speech SDK的文
法結構(Grammar)交由語音引擎事先讀取，只要確認為辨識成功的事件，即可透過元件內部
  
 命令區塊除了基本的一對一動作與裝置連接外
所謂的並聯方式，表示不同的互動輸入要同時發生才能觸發遊戲的事件
表示互動輸入必須依序的發生才能使遊戲事件產生
的延伸組合。如上圖所示，玩家必須先踩下跳舞機某兩個按鍵
定）再利用Wii裝置做Motion Trigger 
本計劃的串聯與並聯原件能針對不同的遊戲進行輸入方式的設計
化性。 
4 遊戲介面之簡化設計 
以市面上的遊戲設計介面來做歸納分析
件，定義設計圖形和使用者介面所要用的屬性及參數
4.1 介面管理與模版機制 
藉由以上流程，本機制的主要模組有
說明及架構如下圖所示： 
(1).介面描述：以資料驅動的方式讓使用者描述各物件和初始位置
(2).事件驅動：於 XML 中已針對性的方式描述哪些介面有特定的控制方式明確的決定介面
中受控制的物件要執行何種動作
8
，也可以藉由彼此的並聯和串聯來使用
，而且在串聯機制中也可以有並聯元件
，於特定時間內
的動作，就可以觸發CM_ArtCharAttack 
，也可以讓遊戲的互動更具變
，找出其一般介面基礎的元素和常用的功能元
，進而設計出一套描述語言
 
圖9、遊戲使用者介面架構圖 
：規則函式模組、事件驅動模組
 
圖10、介面管理架構圖 
。 
(Action)和產生何種效果 
。
；串聯的主要概念
（使用者決
攻擊的遊戲命令，
。 
、流程控制模組，
  10
<Object RenderNode="Sprite2DGroup" Name="isgdLogo" Type="Panel"> 
<Params> 
<EngParam Name="Position" Value="0.3 0.1"/> 
<EngParam Name="Size" Value="0.4 0.2"/> 
<EngParam Name="Material"> 
<MatParam Name="Texture" Value=" isgdLogo.tga" /> 
</EndParams> 
</Params> 
</Object> 
圖13、圖形介面產生描述圖 
 藉由本計劃的架構描述方式，使用者在設計遊戲介面時便可以直接改變參數來定義圖
型介面的數值，甚至是旋轉、縮放、捲軸拉動、加上文字敘述或是動畫的處理上都可以輕
鬆而簡單的實作出來。 
結果與討論 
本計劃是架構於本計劃主持人之前之研究之上[1-7]，研究計畫的核心為簡化使用者開
發遊戲的 3D 線上遊戲引擎。本計劃更加強了簡化開發的精神；計畫將從四方面著手切入，
分別為一致化裝置架構、直覺化編輯器、強化網路處理能力以及網路遊戲平台架構之設計。 
在高階遊戲狀態之設計模式上，目的分為兩部份，分別是在遊戲狀態管理架構機制以
及 Command 及高階元件機制，希望達到幫助開發團隊有效簡化大量的 Game State 管理，
降低設計 GameState 的困難度，簡化撰寫 State 的負擔，進而縮短開發時程，簡化遊戲開發
的困難度。並透過 Command 以及高階元件的協助，儘量不用寫程式就能做出一款完整的遊
戲。且透過高階元件機制讓開發團隊可以方便的描述使用新的元件。 
在網路元件之設計架構上，目的是希望在不影響單機遊戲的開發過程的前提下，使單
機遊戲網路化，所提出的高階網路獨立機制。針對網路與單機遊戲的不同處進行一致化，
以及將使用者操作的物件進行一致化，使用者只要專心於開發單機遊戲的設計與遊戲規則，
對於網路遊戲化，只要連結網路相關元件，以及增添些許參數，使用者不必處理低階的網
路連線細節，而使用高階的介面來實做網路遊戲，減少遊戲網路的開發困難。 
在遊戲互動之多元輸入部分，將裝置的開發以共通性的互動設計界面來降低遊戲開發
者製作遊戲時使用外部裝置開發上的問題。原架構中「裝置本身」與「裝置訊號的處理」
的高耦合性也被有效的抽離，重整於一致性架構底下。使得遊戲命令的來源不只有原本的
近端裝置更可以使用網路來的遠端裝置，甚至是從檔案或是其它訊號資料的輸入，把原本
裝置的輸入更廣義化，轉化成一種廣義的輸入方式。裝置的替換上也為靈活與輕鬆，也新
增了手機裝置，把它轉換成行動模擬互動裝置，藉此也證實了多元輸入遠端裝置設計實行
上的可能性，遊戲開發者在開發遊戲時，透過此介面的設定也可以組合各種來源裝置和遊
戲之間的連結方法，更能給設計者有多樣化的設計方式。 
最後在遊戲介面簡化設計部分，簡化了使用者介面的開發流程，以介面管理的機制強
化了這一方面的設計方式。使用者藉由資料驅動的方式用參數就可以簡單的定義使用者介
面也富有更大的彈性和變化性，團隊也就可以更專注於內容上的開發。除了既有的高階介
面元件外，更提供了多樣的相對應描述介面，開發者就不需要在去重新思考開發方式，透
過本計劃的功能就可以簡單的描述設定方式來有效的縮減復雜性高的介面開發作業。 
 
  12
[24] Wikipedia.Guitar controller,http://en.wikipedia.org/wiki/Guitar_controller 
[25] Windows Presentation Foundation, http://wpf.codeplex.com/ 
[26] XAML, http://msdn.microsoft.com/zh-tw/library/cc189054(VS.95).aspx 
計畫成果自評 
本計劃最終目的主要為簡化遊戲開發上的繁複流程，但此部分現今並不多人去討論與
研究，目前本計劃已經有各項的實體成果，也都實際的應用在遊戲開發上，更驗證了本計
劃研究上的可行性和持續的修正發展方向，本研究成果也不單單只是學術上的研究，更是
可以實際應用來簡化使用者開發的計劃。藉由本次的研究發展與實質補助，本計劃也發表
許多延伸性的論文，本申請人在此領域已有多年經驗，在實際的使用過程中也累積了相當
的回饋與成果，並讓大學部學生使用本計劃之成果「IS.GD 遊戲引擎」，近幾年來也積極參
與各項數位遊戲的比賽( KT 科技與人文藝術創意競賽、4C 數位創作競賽等)，除了將遊戲
成果向外推廣外，也驗證了本引擎實際的價值。 
本計劃延伸性的相關主題的研討會論文、碩士論文如下： 
1. 鄭武堯、廖偉鵬、陳明源，“多元遊戲輸入之共通性架構設計與實作＂，ICIM 第 20 屆
國際資訊管理學術研討會－資訊科技與創新, 2009 
2. 鄭武堯、廖偉鵬、鄭創予，”以遊戲狀態導向簡化遊戲開發之架構＂, 二○○九數位生
活科技研討會, 成功大學 
3. 陳明源，「多元遊戲輸入之共通性架構設計與實作」，世新大學資訊管理學系碩士論文, 
2009 
4. 鄭創予，「以遊戲狀態導向簡化遊戲開發之系統架構設計與實作」，世新大學資訊管理
學系碩士論文, 2009 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：鄭武堯 計畫編號：98-2221-E-128-005- 
計畫名稱：遊戲狀態與多元輸入之高階網路遊戲引擎設計與實作 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 1 1 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
