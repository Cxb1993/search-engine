中文摘要 
現今顧客對產品需求轉變為少量多樣的型態，電子產品的生產方式也隨之改變，由過
去的大量生產轉變為多樣少量式的生產，因此造成設計與製造上的困擾；而模組化的應用
可以有效解決此問題，目前已被廣泛的被應用在各個領域，如產品設計、工程應用、與軟
體開發等。因為過去鮮少有研究針對電子相關產品進行研究，且從實地與業者訪談結果得
知，目前其生產型態多為客製化的方式，但也可以發現所生產的產品內部零件多有共用之
情形，此因模組化零件不但可降低開發生產成本外，更可降低生產時間，增加系統效率。
因此若能將內部零件模組化，可一併解決生產管理、存貨控制與生產排程上的困擾，且客
戶能以較低廉的價格，迅速得到所需要之電子零組件。 
此外，環保議題日漸重要，企業亦不得不採取新的策略以因應此綠色趨勢。概括而言，
如何從生產製造導入”綠色”概念，並有效實行綠色供應鏈將是各企業目前的重大課題。因
此本整合型計畫包含從前端研發設計階段、生產至回收，導入綠色供應鏈之觀念以符合各
地環保法令要求，並從連接器產品之模組化架構的設計面、管理面與製造面進行詳盡的分
析。 
本計畫首先從設計面著手，目的是將電子零組件模組化，方法是透過子計畫二所提之
BOM (Bill of Material)表進行產品分類，並劃分出產品家族，將此分類資訊提供子計畫一之
預測、存貨以及採購管理時所需要的產品資訊，並加入由子計畫三所提之綠色考量，進而
篩選出其因績效衝突點所得知之欲改善關鍵零組件及模組化元件。總計畫將透過上述所提
及的設計面、管理面與製造面對連接器產業進行探討，將分三年共三個子計劃針對模組化
生產需求預測、產品資料管理、綠色供應鏈管理等系統進行研究與整合。 
子計劃一完成了預測模式的建構，主要包含因子的挑選以及研究方法的確立。進而比
較此模型與其他預測模型之各種績效表現，找出各種模型間的優缺點；子計畫二完成共用
件模組探勘系統，包含單階層樹狀展開、計算單階樹之相似度與找出產品間可模組化功能
的結構，因此透過此成果將應用在手機產品上，並完成系統的測試與評估，且提供子計畫
一與子計畫三所需之資訊。子計畫三主要以供應鏈作業參考模式(Supply Chain Operations 
References Model, SCOR)釐清連接器產業之供應鏈架構，並加入綠色考量，進而篩選出其
因績效衝突點所得知之欲改善關鍵零組件及模組化元件。目前已完成現行 SCOR 模式之建
立及供應鏈績效分析資料蒐集，將建構連接器產業之綠色供應鏈。 
關鍵詞：模組化、生產規劃、製造管理系統 
1. Motivation 
The concept of modularization has been widely applied to many domains, the main purpose is 
to increase the speed of development or production and decrease the complexity of design. If we 
take the program development as an example, each modularization represents a specific function 
and defines the interface to communicate external. Therefore, if we develop software, the 
modularization code can be utilized, but not develops from the starting; this advantage makes the 
speed of development increase. Moreover, due to the communication within different module 
calls via public interface and send data, the module program just needs to realize the interface 
which offers callable function, but not to realize the computing logic of the system, therefore, 
modularization will be packaged and decrease the complexity of the system. Furthermore, due to 
each module should be tested repeatly, the accuracy of module is correct for future utilization. 
The introduction of modularization can be applied to diversified domain. This project takes the 
process of assembling cameras which is shown as figure 1; module A is the production of lens; 
module B is the production of camera bodies. The two modules can be developed separately and 
define the interface to connect or communicate. When different production request occurs, we 
can select the proper lens and camera bodies via current existing modules, we may also change 
the lens or camera bodies to fit the change of demands. 
 
Module A Module B
 
Figure 1. Diagrammatic sketch for modularization product 
 
Base on the concept of this research, we aimed at the connectors to implement the research 
due to the insufficient research in this domain. However, the company closed down during the 
period of this research, we utilize the cell phones as the industry to replace the connectors. The 
reasons we choose cell phones to do the research are similar to connectors which are listed as 
follows: 
1. The production types are mostly customized 
2. The components in these products are shared 
3. The demands of consumers are high 
As connectors industry, if the components can be modularized, this can solve the issues in 
production management, inventory control and production scheduling. Moreover, the customers 
simultaneously consider many aspects to enhance the competition superiority. Another important 
issue is to optimize the resources utilization. According to the three aspects proposed, 
branch-project 2 is responsible to establish the products data and classification; branch-project 1 
will proceed the sales forecasting base on the classification and offer to the branch-project 3 to 
design an exhaustive supply chain. The relationship of each branch-project will be described in 
the following section. 
3.  Branch-project Correlation 
This project proposed a three-year integrated project which contains three branch-projects, 
these projects discuss about design, management and manufacturing, which are described as 
follows and plotted as figure 2: 
1. Branch-project 1: Modularization Product Demand Forecasting System 
2. Branch-project 2: Modularization Product Data Management System 
3. Branch-project 3: Analysis and Design for Modularization Green Supply Chain Management 
 
 
Figure 2. Architecture Diagram for Correlation of each branch-project 
 
This project mainly aim at developing a modularization manufacturing management system, 
the sales data in this research is from January 2007 to June 2009 which is firstly offered to 
branch-project 1 to do the qualitative analysis, then the data are classified into several categories. 
The next step is then utilizing neural network (NN) to analyze the product cost. The major 
purpose for branch-project 1 is to generate the production forecasting information which is from 
the output of NN. 
Since the forecasting information is transmitted to the integrated project, the information is 
adopted by the BOM which is used to generate the components of products. The following step 
products into the same product group and simplify assembly process with common modules from 
these product groups. A new product similarity measurement method is proposed can easily 
evaluate product similarity in any pair of products based on single-level tree (SLT). Every 
product can be decomposed to several SLTs. According to these SLTs, we can easily understand 
every product structure and evaluate any pair of products similarity. The hierarchical clustering 
algorithm is applied to cluster similar product structures into product groups. Then the common 
module mining algorithm is applied to mining common module from these product groups. These 
common modules of in very product group are used to simplify assembly process in their product 
group. In other words, these similar product in the same product group, they have their assembly 
process respectively. The common module is used to simplify these assembly processes that 
become a common assembly process.   
The proposed method can successfully find common modules from several variant product 
groups. We can use these common modules to simplify assembly process and reduce the 
productive cost and the time of assembly and make this study more valuable. 
4.3 Branch-project 3: 
Recently, many countries announced environmental legislation associated with the automotive 
materials, such as Directive 2000/53/EC of the End-of-Life Vehicles Directive (ELV) by 
European Union. The ELV Directive aims to enhance recyclability and reduce waste when 
vehicles reach their end-of-life phases. Also, the ELV Directive influences the business strategies 
of the automotive industry which must take into account the green requirement. The automotive 
industry focuses on green design to upgrade its supply chain into the green supply chain. Thus, it 
is important to manage the automotive green supply chain and to study the interaction between 
green module design and recyclability for the suppliers and manufacturers. In this research, we 
intend to discuss the automotive green supply chain from the early design stage. We formulate a 
total cost model of the automotive green supply chain which includes the green design cost, the 
recycle revenue, and the waste cost. Among them, this research focuses more on the green 
involvement of green design, which combines recyclability, modularization, with the weight ratio 
of recyclable components. Due to the difficulty of collecting real data on the impact of green 
module design, a hypothetical supply chain and a simulation model is tested based on the 
collected data from an automotive company in Taiwan. In the case study, two different modules 
of an automotive model are tested. The results show that better green module design and green 
consideration can reduce the total cost of an automotive supply chain. 
5. Contents of Branch-projects 
5.1 Branch-project 1: Modularization Product Demand Forecasting System 
This research focused on forecasting the new product manufacturing unit cost. The case 
selected in this research is mobile phone. The data collected in this research started from 2007/1 
CT: Tact Time 
SQ: Production Station Quantity 
 
Hence, the PUC in formula (1) could be defined by (5) 
 
PUC ={TC ×{Σ[TPQ ×(
60
SQCT × )]/TOH }}/TPQ               (5) 
 
According to formula (5), to increase TPQ value or to decrease TOH value will help to 
minimize PUC. 
The product total manufactured cost (PTC) could be also calculated by the formula (6) 
 
PTC = PEC + PNC                             (6) 
 
PEC: Product Exception Cost 
PNC: Product Normal Cost 
 
PEC is defined by (7) and PNC is defined by (8) 
 
PEC  = PTC × PEHR                            (7) 
 
PNC  = PTC ×(1- PEHR )                         (8) 
 
PEHR: Product Exception/Hours Ratio 
 
According to formula (2), PTC =TC × POHR ,hence PTC could be as formula (9) and the 
formula (9) about PTC could be also as formula (10) by applied formula (3) 
 
PTC =[( POHR ×TC )× PEHR ]+[ POHR ×TC ×(1- PEHR )]          (9) 
 
PTC =[(
TOH
PTOH ×TC )× PEHR ]+[(
TOH
PTOH ×TC )×(1- PEHR )]        (10) 
 
In formula (10), the smaller PEHR value and the lower PTC value will be obtained. 
In this research, we use stepwise regression to select the significant variables about product 
total output hours (PTOH), total cost (TC) and the ratio of exceptional product to hours (PEHR), 
the resulting variables are discussed below. 
Qualitative factors: 
The lower RMSE value, the better forecasting performance in the model and the BPN model is 
more convergent. 
5.1.2 Methodology 
There are three main stages in this research, the first stage is the variables selection stage and 
this stage is to select many possible variables which may influence production manufacturing unit 
cost significantly. In order to eliminate the unrelated variables, Stepwise Regression Analysis 
(SRA) was applied to choose the key variables considered in the forecasting model. The second 
stage is Case-Based Reasoning stage, and K-mean clustering technique is adopted to cluster 
collected data to the different group. The final stage is BPN forecasting stage, training cases in 
each sub-group divided by previous stage are used to train BPN in order to forecast the new 
product manufacturing unit cost. The framework is described as figure 3 and the details of each 
stage are described as follows. 
 
Data Collection
CBR
Yield of 
mobile 
phones
Forecasted 
achieve rate
The total 
production time 
of mobile 
phones
Line 
balance 
The interval 
between SR 
and MP 
Neural Network
Y1 Y2 Y3 Y4 Y5
PUC
 
Figure 3. Architecture of This research 
 
Stage 1: K-mean cluster 
The K-means clustering method (Johnson & Wichern, 2002) is probably the most well known 
method among researchers. The algorithm starts with k initial seeds of clustering, one for each 
processing is performed in each node in the hidden and output layers. As for the number of layers 
and number of nodes, they will be further decided using design of experiment. The 
back-propagation learning algorithm is composed of two procedures: (a) a feed forward step and 
(b) a back propagation weight training step. These two separate procedures will be explained in 
detailed as follows: 
(a) Feed Forward 
Assume that each input factor in the input layer is denoted by ,  and  represent the 
output in the hidden layer and the output layer, respectively and  and  can be expressed as 
follows: 
 
                      (13) 
 
                        (14) 
 
Where the  and  are the bias weights for setting threshold values, f is the activation 
function used in both hidden and output layers, and  and  are the temporarily computing 
results before applying activation function f . In this study, a sigmoid function (or logistic 
function) is selected as the activation function. Therefore, the actual outputs  and  in hidden 
and output layers, respectively, can be also written as: 
 
                            (15) 
 
                            (16) 
 
The activation function f introduces the non-linear effect to the network and maps the result of 
computation to a domain (0, 1). This sigmoid function is differentiable. The derivative of the 
sigmoid function in formula (3) and (4) can be easily derived as: 
 
                               (17) 
 
(b) Back Propagation Weight Training 
The error signal  at the output of neuron j in this research at iteration n is defined by (18) 
Where 
∑
=
=′=Δ
K
k
jkkjj wXf
1
)( δ                          (25) 
 
The new weight in the hidden-input links can be now corrected as: 
 
jiij xw Δ⋅⋅=Δ α                               (26) 
And 
)()()1( nwnwnw ijijij Δ+=+                        (27) 
Training the BPN with many samples is a very time-consuming task. The learning speed can 
be improved by introducing the momentum term η . Usually, η  falls in the range [0, 1]. For 
the iteration n, the weight change wΔ  can be expressed as following: 
 
)(
)()1(
nw
Enwnw ∂
∂×+Δ×=+Δ αη                     (28) 
 
5.1.3 Experimental Results 
In this research, five quantitative factors ( ~  are selected as input variables and PUC is 
the output value of neural network, the normalized data of each variable are listed as table 1: 
 
Table 1. The normalized sample data 
Model 
Yield of mobile 
phones (Y1)% 
Forecasted 
achieve rate 
(Y2)% 
The total production 
time of mobile phones
(Y3)min 
Line balance 
(Y4)% 
The interval 
between SR and 
MP (Y5)week 
PUC 
001 0.9000  0.6830  0.1000  0.9000 0.2067  0.1000  
002 0.7879  0.1000  0.7220  0.6188 0.6333  0.6826  
003 0.5357  0.5142  0.3828  0.5738 0.1000  0.4411  
004 0.1000  0.9000  0.9000  0.1234 0.9000  0.9000  
005 0.2795  0.5967  0.4162  0.5273 0.2956  0.6581  
006 0.3195  0.2731  0.7958  0.1000 0.5444  0.7205  
007 0.7515  0.6179  0.1461  0.7576 0.1267  0.2274  
008 0.1432  0.1237  0.5032  0.4354 0.5533  0.5685  
009 0.8279  0.2471  0.7105  0.5738 0.4467  0.8262  
010 0.8968  0.5301  0.4686  0.6748 0.3044  0.4417  
5.2 Branch-project 2: Modularization Product Data Management System 
A product structure can be composed of several SLTs. The SLT similarity measurement can be 
used to find similar product structure. When two product structures both contain similar (or the 
same) SLTs, the two products might have high similar structure. Let product similarity value in 
PTi and PTj is defined as: 
 
( )
( , )( , )
max | |,| |i j
TMSV i jPTS i j
S S
=  (30)
 
where ( , )TMSV i j  is the function that evaluates the sum of similarity of similar SLTs in PTi and 
PTj, iS  is the number of SLTs in ith product structure tree (PTi) and ( )max | |,| |i jS S  is the max 
number of SLT in PTi and PTj.  
A structure parsing algorithm was developed to find similar product structures. Let P = {1, …, 
N} be the set of all product structures where N is the total number of product structures. Let St = 
{1,…,M} be the set of SLTs of tth product structure where M is total number of SLTs in tth 
product structure. Figure 6 shows the pseudo-code of proposed structure parsing algorithm. 
Structure parsing algorithm takes each product structures and SLTs of each product structures as 
input and get a matrix of product structure similarity as the output. The algorithm first calculates 
SLT similarity value SV(k,l) for each pair of SLTs in any pair of product structures and be stored 
in SS(k,l) , as in equation (1), as shown in lines 1-7. Notes that SS(k,l) is a matrix that stores the 
similarity value for each pair of SLTs in any pair of product structures. The TMSV function is 
used to find the sum of similarity of similar SLTs in PTi and PTj then to calculates Product 
similarity value PS(i,j), as shown in lines 8-9.  
The TMSV function first find the maximal value in SS(k,l) and The maximal value will be 
stored in Max. Then, the two similar SLTs be stored in row and column. If the maximal value 
equal to 0, the loop will be stopped, as shown in lines 15-25. The Max will be stored in TVS 
(total value of SLTs) and let Max equal to zero, as shown in lines 26-27. The two similar SLTs in 
similarity of other SLTs in SS(k,l) is zero, as shown in lines 28-33. 
 
Input: a set P = {1,…,N}; St = {1,…,M}  
Output: The matrix of product structure similarity PS(i,j) 
1. For each product structure i in P { 
2.   For each product structure j in P { 
3.     For each single level tree k in Si { 
4.       For each single level tree l in Sj { 
5.         calculate SS(k,l) = SV(k,l) 
6.       } 
7.     } 
8.     TVS = TMSV(i,j) 
9.     PS(i,j) = PTS(i,j)   
10.   } 
11. } 
12. TMSV(i,j) 
(c) Common Module Mining Algorithm 
Let { }1,...C G=  be the set of all product groups where G is the total number of product group. 
Let { }1,..gS M=  be the set of SLTs of gth product group where M is the total number of SLTs of 
gth product group. Let α represent the minimum similarity degree in SLT(i) and SLT(j), and γ 
represent the minimum support, which are all decided by users depending on their needs. Figure 
8 shows the pseudo-code of the proposed common module mining algorithm. The C, Sg, α and γ 
is the input to the algorithm and get sets of ,{ | , }g i gFS g C i S∈ ∈ and ,{ | , }g i gDC g C i S∈ ∈ as the 
output, where ,{ | , }g i gFS g C i S∈ ∈  be the set of common components of ith SLT of gth product 
group and ,{ | , }g i gDC g C i S∈ ∈  be the set of diverse components of ith SLT of gth product group. 
The algorithm first calculates SLT similarity value SV(i,j) for each pair of SLTs, as in (30), as 
shown in lines 2-8. If SV(i,j) is greater than or equal to α, j will be storesd in SN(i,j). Notes that 
SN(i,j) is a matrix that stores the number j of SLT(j). Otherwise, the similarity in the two SLTs is 
not high enough and will not be further discussed. Each row in SS matrix is viewed as a set of 
transactions (Ti) where an entity in each row represents a transaction. In each transaction, the 
items are the content of children nodes of SLT(j), as shown in lines 10-14. 
Next, the Apriori function is used to derive common component Fi, as shown in line 15. The 
Apriori function is designed to find a set of items that appear frequently in the database through 
several iterations. The algorithm makes an additional database scan to find frequent items and 
generate a set FSg,i, as shown in lines 16-20. Notes that FS g,i is a set that stores frequent items in 
transaction t. If FS g,i repeatedly stores the same transaction, repeated transaction should be 
deleted, as shown in lines 22-28. How to find diverse components of all frequent SLTs in FS g,i, as 
shown in lines 29-35 The diverse components are stored in DC g,i. 
In Apriori algorithm, a set of items is termed as an itemset. If an itemset contains k items, it is 
called a k-itemset. Furthermore, the support of an itemset is defined as the fraction of the itemset 
in the records of a database. If the support of an itemset exceeds the user-assigned threshold, 
called as minimum support (γ), the itemset is considered as a frequent itemset. Figure 9 shows the 
modified pseudo-code of the Apriori algorithm. The Ti and γ are the input to the Apriori function 
and the Fk-1 is output. Let Ck denote the set of candidate k-itemsets, Fk denote the set of frequent 
k-itemsets and γ is threshold of support counts which is decided by users depending on their 
needs. The procedure initially makes a database scan over the data set to determine the support of 
each item. Upon completion of this step, the set of all frequent 1-itemsets F1 will be known, as 
shown in lines 2 and 3. 
 
Input: two set C = {1,…G} and Sg = {1,…M}; α is threshold of SLT similarity value; γ is 
threshold of support. 
(k-1)-itemset of frequent (k-1)-itemsets at random. The (k-1)-itemset is represented common 
component of all SLTs in transaction t. 
 
Apriori (Ti , γ) 
1. { 
2.   k= 1 
3.   {}{ }γσ ×≥Λ∈= NiIiiFk )(  
4.    repeat 
5.      k = k +1  
6.      Ck=apriori-gen(Fk-1) 
7.      For each transaction Tt ∈ { 
8.        Ct = subset(Ck, t) 
9.        For each candidate itemset 
tCc∈ { 
10.          ( ) ( ) 1+= cc σσ  
11.        } 
12.      } 
13.      { }{ }γσ ×≥Λ∈= NcCccF kk )(  
14.    until  Fk =φ  
15.    return Random(Fk-1) 
16. } 
Figure 9. The modified pseudo-code of the Apriori algorithm 
 
5.2.2 Implementation and Experimental Results 
A simulation experiment is conducted to understand the effects of the proposed a clustering 
common module mining method for variant products. The proposed method is implemented on a 
PC using Visual Basic.Net language with 3.0G CPU and 1.5G memory. 
(a) A Set of Product Structures 
Thirty product structures are used to demonstrate the feasibility of the proposed a clustering 
common module mining method. The thirty product structures, X1 to X30, are visually illustrated 
in Figure 10. All SLTs in the thirty product structures can be extracted by starting from the root 
node of a product structure and traveling the branches in the structure with the breadth-first 
search way. Total 125 SLTs is extracted but twenty-two of the total SLTs are not needed. 
Therefore, we have totally 103 SLTs.  
 
users can take M3 instead of M1 and M2 to reduce the number of generated modules. We 
discover when α is 0.9 and 1, there will be no common module generated. The mining result is as 
shown in table 3. 
 
Table 3. Retrieved common modules with different setting in first cluster, When α is 0.5~0.8 
Cluster common components diverse components modules 
1 
{ M, V, J } {φ , N} 
{ M, V, N} {φ , J} 
{M, V} {N, J, NJ} 
 
In mining result of first cluster, we can get three common modules M1, M2 and M3 from 
product structures X1, X3 and X5. M1 is retrieved from product X3 and X5. M2 is retrieved from 
product X1 and X5. M3 is retrieved form product X1, X3 and X5. Therefore, M3 can instead of 
M1 and M2 and can simplify assembly process. The productive cost and the time of assembly can 
significantly reduced by utilizing available common modules method. The assembly process is as 
shown in figure 11. 
 
Figure 11. Assembly module model in first cluster 
 
5.3 Branch-project 3: Analysis and Design for Modularization Green Supply Chain 
Management 
As shown in figure 12, at the point of suppliers’ and auto manufacturers’ view, material 
simplification, recyclability and modularization are three important considerations of green 
modules. Material simplification is to confirm that the substances of the adopted materials can be 
recycled, and cannot include the prohibited substances of GADSL. Recyclability means the 
components for material simplification, modularization for dismantlability, polymeric parts 
indication, the adoption of recycled materials, etc. Thus, this mathematical model formulates 
these green characteristics to study the influence of green modules between the green design 
stage and the recycle stage. Also, the goals are waste reduction, cost saving of waste treatment, 
and increasing recyclability at the recycle stage. 
5.3.1 Assumptions 
The assumptions for the green total cost model are as follows. 
(a) The proposed sedan contains several green modules. 
(b) Green modules must be in compliance with the ELV Directive.  
(c) At the green design phase, only three green characteristics: the weight ratio of recyclable 
components, material simplification, and modularization, are taken into consideration. 
(d) The model is estimated based on per green module.  
(e) In the auto industry, the green design cost of each module is included in the unit cost of green 
modules. 
(f) The green design cost is calculated based on that the unit cost of the green module multiplies 
the green degree and the modularization degree. 
(g) The dismantling cost is influenced by the substitutability factor of modularization. 
(h) The recycle revenue is influenced by the modularization degree. 
(i) The recycle revenue and the waste cost are estimated based on the weight of the green 
module. 
(j) The end-of-life green modules have three component conditions: component reuse, material 
reuse, and waste. The component conditions of green modules vary with the influence of the 
auto user characteristics.  
(k) The recycle center dismantles ELV to original green modules first, and sorts them with 
component conditions.  
(l) The as-is (current) condition is that green modules are not recycled back to suppliers through 
dismantling treatment. The to-be (future) conditions are that green modules are recycled back 
to suppliers by two component conditions: component reuse and material reuse through 
recycle treatment. 
(m) If suppliers use the recycled components or materials from the recycle center into green 
modules, the unit cost of green modules is reduced.  
5.3.2 The Cost Model 
Notation 
b: recyclability degree
 Green Design Involvement 
z Green Degree 
– Recyclability degree, r 
– Material Simplification: 
Weight ratio of recyclable components,β
z Modularization Degree (Mikkola, 2003)
– Interface-constraint factor,δ 
– Number of unique components, u 
– Substitutability factor, s 
Recycle Condition 
z Dismantling Degree, s+1 
z Component Reuse, θi = 3 
z Material Reuse, θi = 2 
z Waste, θi = 1 
 
Auto manufacturer & Suppliers
End
of 
Life
Recycle Center
 
Figure 13. Framework of module model 
 
(a) Green Degree 
In the green design phase, the module must evaluate the weight ratio of recyclable component, 
β, to be compliance with the ELV Directive. The module has two kinds of components: 
recyclable and non-recyclable. In the end-of-life phase, components may be sorted by three 
conditions: component reuse, material reuse, and waste, which are independent and exclusive. In 
other words, any component of a green module must be handled by one of three conditions. Eq. 
(31) represents the recyclability degree, b, which affects the sensitivity of recyclability associated 
with different recyclable conditions. When r approaches 1, the recyclability degree represents 
perfect recyclability. When b approaches 0, the recyclability degree represents worst 
recyclability. 
 
        |
|
M
M
i
i
b |
|
1
3
][∏
==
θ
 (31)
 
Eq. (32) calculates the weight percentage of recyclable components, β, according to ISO 
22628, which defines road vehicles recyclability and recoverability-calculation method. 
 
∑
∑
∈
∈=
Mi
i
MMi
i
w
w
c\β   (32)
 
For example, in figure 14, the module has three components (|M|=3): two recyclable 
components (C1, C3, |Ma|≤2 or |Mb|≤2) and one non-recyclable component (C2, |Mc|=1). Then, 
M1 can be dismantled into three recycle conditions: waste, material reuse, component reuse. The 
recycle condition of C2 is 1 (θ2 = 1). The recycle condition of C1 and C3 would be 2 or 3 (θ1 = 2 
or 3, and θ3 = 2 or 3) depend on the end-of-life component conditions. Thus, r would be 0.3333, 
0.2222, or 0.1481 (b = 3×3×1/27, 3×2×1/27, or 2×2×1/27). 
 
For instance, in figure 15, module M2 is made of three components (|M|=3): two unique 
components (|Na|=2, C4 and C5) and one standard component (|Nb|=1, C6). C4 shares one 
interface (k4=1) with C5, C5 shares two interfaces (k5=2) with C4 and C6, and C6 shares one 
interface (k6=1) with C5. Thus, the interface constraint factorδis 1.3333 (δ=(1+2+1)/3). The 
substitutability factor s is 1 (s = 2/(1+1)). 
 
 
C4
C5 
C6 
M2
C8  M3
C7
C9
C4, C6：unique components 
C5：standard component 
C7：unique component 
C8, C9：standard components  
Figure 15. Module unique composition 
 
As shown in eq. (36), the green degree verifies the green degree of green design involvement. 
The green design involvement in a given product architecture is constrained by the recyclability 
degree and the weight ratio of recyclable components. 
 
Modularization Degree = δsM
u
e ||2
2
−  (36)
 
(c) The Total Cost Model 
As shown in eq. (37), the green design involvement, G (b), combines recyclability, material 
simplification with modularity to verify the green design involvement degree of a given module. 
The green design involvement in a given product architecture is constrained by the green degree 
and the modularization degree. 
 
( )bsMu eebG - βδ −+= − 1)( ||2 2  (37)
 
The variable of this model are the recyclability degree, b, and the number of unique 
components, u. Besides the variables, three important factors are the weight ratio of recyclable 
components, β, the interface constraint factor, δ, and the substitutability factor, s. 
In addition, through automotive practical cases, we will estimate the total cost of green supply 
chain, and measure how to minimize it. The total cost model includes the green design cost, the 
recycle revenue, and the waste cost. In general, the green design involvement degree will 
decrease the green design cost. The recycle revenue will depend on the weight percentage of 
component reuse or material reuse. 
The total cost model is as follows. 
 
Total Cost = 
( ) ⎟⎟⎠
⎞
⎜⎜⎝
⎛ +++×
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜
⎝
⎛
−+ ∑∑∑
∈∈∈
−
a
Mi
i
Mi
i
Mi
i
bsM
u
crrcee
bac
-  βδ 1||2
2
 
∑
∈
− −×+++
aMi
i
c
sM
u
Rets δ||2
2
)1(  ∑∑∑
∈∈∈
− ++−×
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜
⎝
⎛
−+
bcb Mi
iii
Mi
ii
Mi
i
i
m
sM
u
dwdwwRe αδ )(1 ||2
2
 
(42)
In this research, the total cost model aims to show the interaction of green design and recycle. 
When green design involvement multiplier is changed, it actually will influence the total cost of 
the whole green supply chain. For example, when the auto manufacturer enhances recyclability, r, 
the amounts of recycled components will be increased. When the recycled components go back to 
original suppliers to reuse, the price of recycled components will directly be reduced. On the 
other hand, when the auto manufacturer improves the modularization degree of the same green 
module, it is to influence the dismantling cost at the recycle phase. 
5.3.4 Experimental Results 
For validation the proposed model, a case of vehicle manufacturing process is adopted. In this 
research, with changing the recycle conditions of seat frame, the results of simulation are 
presented as shown in table 4. It is argued that the total cost will be reduced through the reuse 
increasing of end-of-life components by original suppliers. Also, the green cost will be increased 
with r increasing. The sum of the material revenue and the component revenue is the same due to 
depending on the weight of seat frames. 
With the reuse increasing, the material revenue is decreased, but the component revenue is 
increased. The sum of the material revenue and the component revenue almost is the same 
because of depending on the weight of end-of-life vehicles without any wastage. 
 
Table 4. Simulation results to respective recycle conditions for front seats 
(θCushion, θSeat Frame, 
unique) 
(1, 2, 2) (1, 2, 2) (1, 3, 2) (1, 2, 1) (1, 3, 1) (1, 2, 0) (1, 3, 0)
Recyclability 0.2222 0.2222 0.3333 0.2222 0.3333 0.2222 0.3333 
Modularization 0.3679  0.3679 0.3679 0.6065 0.6065 1.0000  1.0000 
Green Deign Cost          
Green Cost 1,256,640 991,182 1,040,500 991,182 939,282  991,182  770,851 
Modularization Cost 1,378,960 1,088,011 944,729 1,793,106 1,406,027 2,957,700 1,902,900 
Dismantling Cost 3,933,600 3,933,600 3,933,600 2,949,760 2,949,760 1,966,800 1,966,800 
Seat Frame Recycle 
Revenue               
