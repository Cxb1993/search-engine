Energy-Aware Scheduling for Embedded Real-Time
Systems with Rechargeable Batteries
Abstract
Due to the power limited nature of embedded systems, power efficiency is one issue
in the design of embedded systems. We propose a design in which an embedded system is
powered by dual rechargeable batteries and the batteries don’t operate simultaneously. We
propose a linear programming based approach to extend the lifetime of batteries. With the
proposed approach, the lifetime of a battery will be extended and the design complexity of
the system will be reduced. A simulation model is built to investigate the performance of
the proposed approach. The capability of the proposed approach is evaluated by a series
of simulations, for which we have encouraging results.
1 Introduction
In the past decade, the requirements for embedded systems have been increasing rapidly
and most embedded systems are battery-operated. Due to the power limited nature of embed-
ded systems, power efficiency is one issue in the design of embedded systems. Dynamic Volt-
age/Frequency Scaling (DVS) is one of the most effective technique to extend the lifetime of
battery or reduce power consumption in real-time systems, due to that the energy consumption
of CMOS circuits is quadratically proportional to the supply voltage [15]. Another effective
technique is the Dynamic power management (DPM) policy that control if the system various
components should to be shut down according some condition [8].
The related work can be divided into two categories: One assumes that the energy used
by an embedded system is unlimited and the systems operate without energy storage. Many
proposed algorithms are designed to extend the executing time of each instances by stealing
the slack time and scaling the processor speed. The other assumes that the energy storage of a
battery supplies the energy to an embedded system [9, 17].
The secondary category can be divided into two subtypes: The first subtype is that the
battery is not recharged [5] and the other one is that the battery is rechargeable [14]. For some
applications of the secondary subtype, the location of the embedded devices, as well as the
method of deployment, would make it hard to replace power sources each time a device loses
power. Renewable sources are starting to gain popularity with regards to the powering de-
vices for various applications. Solar energy is a major source of energy especially for outdoor
applications.
Most of the embedded systems are powered by a battery or batteries that can be recharged.
The embedded systems use such batteries are like sensor nodes which are deployed outside.
1
2 System Model and Task Model
In this paper, the discussed embedded system is equipped with dual batteries as shown in
Figure 1. In the run time, only one battery is activated, and the other one is charged if the
battery state is not full. Otherwise, it is stand by. For simplicity we assume that the recharge
duration RD from empty state to full state is constant. When the energy of the current active
battery is exhausted, then the system will switch to use the other battery. Let sw denote
the duration of switching from one battery to the other one, and sw is constant. During the
switching duration of batteries, the system will not allow any tasks to run. We consider that this
switching duration is viewed as a virtual task executing named switch task for convenience.
In fact while the switch task is executing to start executing, the energy of battery is almost
exhausted and the remaining energy can just keep data in main memory. No tasks needing
computation power can be executed without power supplying except switch task, in other
words no task could preempt switch task.
Figure 1: The Dual Batteries System
In the system there is a task set T consisting of n independent periodic tasks τ1, τ2, ..., τn,
and task τi is defined by a 3-tuple {Pi, Ci, Di}, where Pi is its period, Ci is its worst-case
executing time running at the fastest frequency, and Di is its deadline. We assume the deadline
is equal to the period. τi,j is denoted the jth instance of task τi. The processor we consider has
a limited range of m discrete frequencies and the frequencies are normalized to the maximum
frequency level. The frequency set is denoted as F = {Fi|1 ≤ i ≤ m} in a non-decreasing
order. Suppose F1 = Fmin and Fm = Fmax, where Fmin > 0 and Fmax = 1. Without loss
of generality if Fi < Fj , i < j. The time to switch between two frequency levels is in the
microseconds range [7] and the execution time for tasks is normally the milliseconds range,
thus the overhead from one frequency to another is negligible. We assume the processors
consume both dynamic and static power during busy intervals and only static power during
idle intervals including the time of battery switching. If fi is denoted the frequency assigned
to τi, then its corresponding dynamic power function is P (fi). We assume that while fi is
equal to fj , the P (fi) is also equal to P (fj). The processor’s power P (f) is proportional to
v2f and v ∝ f , where v means a voltage level. The static power is constant.
Problem Formulation We consider a DVS processor which can execute under its discrete
voltage and frequency. The targeted problem could be defined as follows: Given a task set,
non-preemptive switchtask and the system model with discrete frequency levels, find a fea-
sible frequency set {fi|1 ≤ i ≤ n} to minimize the number of switching times during a
3
Lemma 1 A set of n (periodic and aperiodic) tasks and a virtual switch task τsw is schedulable
by EDF scheduling if
∀ k
k=1,...,n
(
k∑
i=1
Ci
Pi
) +
sw
Pk
≤ 1. (2)
where sw is the execution time of the switch task τsw and Pk is the period of task τk.
Proof. In our model, only the switch task could cause block for the other tasks. The proof
can be done by replacing the blocking time Bk in Equation 2 with the executing time sw of
switch task τsw. ¤
In this section we investigate the sub-optimal solution to the frequencies assigned prob-
lem. The goal is to minimize the switching times during a finite interval, on the other hand,
maximizing the lifetime of the device battery is our aim. We first formulate this problem as an
integer linear programming problem as follows: Let Y be a frequency assignment matrix and
Y is an n × m matrix of binary variables, where n is the task number and m is the number
of frequency levels. Each element yi,j is set as 1 if the frequency Fj is selected for task τi.
Otherwise yi,j is set to 0. As a result, the cross product of frequency assignment matrix Y
and the vector of frequency levels gives a frequency assignment and such the assignment can
maximum the lifetime of a battery. The targeted problem is to derive a matrix Y satisfying the
following equations to maximum the lifetime L:
Maximum L (3)
subject to
∀ k
k=1,...,n
(
m∑
j=1
k∑
i=1
Ci
PiFi
yi,j) +
sw
Pk
≤ 1 (4)
m∑
j=1
n∑
i=1
d L
Pi
eP (fi)Ci
Fi
yi,j + Pstatic · (L−
m∑
j=1
n∑
i=1
d L
Pi
eCi
Fi
yi,j) ≤ Ebudget − Pstatic · sw (5)
L ≥ RD (6)
Fi ∈ F, ∀i = 1, .., n, (7)
m∑
j=1
yi,j = 1,∀i = 1, .., n, (8)
and yi,j ∈ {0, 1},∀i = 1, .., n, and j = 1, ..,m (9)
whereL is the duration of exhausting energy of battery, in other words L is denoted the lifetime
of the battery. Ebudget is denoted the capacity of the battery and Pstatic · sw is the energy
consumption which supports the data maintenance during the battery switching.
Equation 3 indicates our aim to maximize the lifetime of battery over the system. The
lifetime depends on the variable frequency/voltage setting of each tasks and the frequencies
are discrete. The binary variable yi,j could determine a discrete frequency Fj assigned to a task
τi. Equation 4 presents the EDF schedulability analysis, and guarantees that no deadlines can
be missed. Equation 5 presents the energy constraints where the total energy consumption can
not exceed the capacity of the battery, where d L
Pi
e is denoted the number of invoked instances
5
3.3 Refine Frequencies
This section will propose a greedy approach to refine the frequencies which are rounded
in the above section to extend longer lifetime of battery. It need exponential time to derive
the optimal frequency assignment by adjusting rounded frequencies because the number of
adjustment combinations is exponential. Therefore the greedy approach is proposed.
The idea is that we adjust the frequencies of any pair of tasks and then compute the new
lifetime. Note that when the number of tasks is n, there are n2 permutations. We select the
permutation with the maximal lifetime as a candidate which may be improved again. The
candidate frequency assignment will be adjusted recursively by the above procedure. The
refinement process is to adjust the rounded frequency levels for the chosen task pair. There
are three adjustment selections for the frequency for one task in a selected task pair, which
are the task is executed at the next higher frequency level, at the original frequency level,
and at the next lower frequency level. We use the symbols “+1”/(“-1”) to represent that the
rounded frequency is adjusted to the next higher/(lower) frequency level and “0” to represent
the rounded frequency is not adjusted.
The pseudo code of the refinement approach is showed in lines 8-23 of Algorithm 1. We
will discuss the detail in the following: The input 1 L and {fi} are denoted the derived solution
of Equations 10 to 14. We use lines 3-5 to round the frequencies derived by the LP solver.
Line 6 derives a factorR denoted the maximum power consumption ratio between two near
discrete frequencies. The lifetime of battery is inversely proportioned to the power consump-
tion P (f). After rounding, the increase of the power consumption of an instance of task τi
whose frequency is changed from P (fi) to P (f ∗i ) for each instance is no more than P (fi) ·R.
Therefor the lifetime of battery after the rounding procedure, Lrd, will be longer than LR . In
other words, Lrd ≥ LR . Besides, to let the state of the other battery be full state the lifetime of
battery must be larger than the recharge duration RD. Therefore, the low bound of the lifetime
of battery is max{L
R
, RD}. In order to derive the new lifetime Lrd of battery after rounding,
we rewrite Equation 12 shown in the following:
n∑
i=1
Lrd
Pi
P (fi)
Ci
fi
+ Pstatic · (Lrd −
n∑
i=1
Lrd
Pi
Ci
fi
) ≤ Ebudget − Pstatic · sw
Lrd ≤ Ebudget − Pstatic · swn∑
i=1
( 1
Pi
Ci
fi
)(P (fi)− Pstatic) + Pstatic
The equation is used to derived the higher bound of Lrd. Then a binary search procedure 3
is used to derive Lrd shown in line 7.
Lines 9-11 describe the refining step for all task pairs according the above refinement idea.
Procedure 2 is used to test the operation permutation of a task pair. The longest lifetime of
battery will be derived in line 12. j and k are denoted the index of tasks and the corresponding
refine operation are op1 and op2. Lines 13 - 22 derive the frequencies for tasks τj and τk with
the original frequencies and the operations. For example (j, k,+1,−1) means the frequency
of τj will be speeded up to the next higher frequency and the frequency of τk will be slowed
down to the next lower frequency level. In order to get a better solution under a limited time
complexity, we use a used defined variable γ to control the refinement times. The derived
frequency assignment in the z iteration will be tried to re-improved in the z + 1 iteration.
7
Procedure 2 REF(j, k, op1, op2, Lrd, {f ∗i })
1: Let Lref = max{Lj,k}, and x and y represent the frequency index of tasks τj and τk,
respectively.
2: if Fmin ≤ Fx+op1 ≤ Fmax then
3: f ∗j ← Fx+op1
4: end if
5: if Fmin ≤ Fy+op2 ≤ Fmax then
6: f ∗k ← Fy+op2
7: end if
8: if ∀ k
k=1,...,n
(
k∑
i=1
Ci
Pi
) + Bk
Pk
> 1 then
9: return 0
10: else
11: return BinarySearch(max{L
R
, RD}, Ebudget−Pstatic·swn∑
i=1
( 1
Pi
Ci
f∗
i
)(P (fi)−Pstatic)+Pstatic
, Ebudget, {f ∗i })
12: end if
Procedure 3 BINARYSEARCH(Llow, Lup, Ebudget, {f ∗i })
1: while Llow ≤ Lup do
2: if Llow = Lup or
n∑
i=1
Llow
Pi
P (f∗i) Cif∗i +Pstatic ·(Llow−
n∑
i=1
Llow
Pi
Ci
f∗i ) = Ebudget−Pstatic ·sw
then
3: return Llow
4: else if
n∑
i=1
Llow
Pi
P (f∗i) Cif∗i + Pstatic · (Llow −
n∑
i=1
Llow
Pi
Ci
f∗i ) < Ebudget − Pstatic · sw then
5: Lup = bLlow+Lup2 c
6: else
7: Llow = bLlow+Lup2 c
8: end if
9: end while
9
the rounding and refinement technique derives the frequencies based on the solution of the
rounding technique, the worse solution of the rounding technique results in a worse solution
under the refinement. We observe that the distribution of the utilization equal to 0.4 is similar
to that of the utilization equal to 0.5 in Figures 3(a) or 3(b). Compared with Figure 3(a),
to improve the normalized lifetime, the refinement technique makes more tasks use lower
frequencies than the rounded frequencies as shown in Figure 3(b). Therefore, tasks while the
utilization is 0.4 have the worse performance than tasks while the utilization is 0.5. The similar
phenomenon also exist between the tasks with the utilizations equal to 0.5 and 0.6. Note that
when the number of a tested task set is different, the distribution of derived frequencies by the
rounding technique is similar.
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.90
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Utilization
 
 
Rounding
Rounding+Refinement
(a) number of tasks is 2
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.90
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Utilization
 
 
Rounding
Rounding+Refinement
(b) The number of tasks is 4
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.90
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Utilization
 
 
Rounding
Rounding+Refinement
(c) The number of tasks is 6
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.90
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Utilization
 
 
Rounding
Rounding+Refinement
(d) The number of tasks is 8
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.90
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Utilization
 
 
Rounding
Rounding+Refinement
(e) The number of tasks is 10
Figure 2: The normalized lifetime under different numbers of tasks.
Figure 4 shows the absolute lifetime under different task number. From Figures 4(a), 4(b)
and 4(c), we can observe that the lifetime are similar, no matter what the number of tasks is.
11
0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
Utilization
 
Rounding
Rounding+Refinement
Exhaustive Method
(a) The number of tasks is 6
0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
Utilization
 
Rounding
Rounding+Refinement
Exhaustive Method
(b) The number of tasks is 8
0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
Utilization
 
Rounding
Rounding+Refinement
Exhaustive Method
(c) The number of tasks is 10
Figure 4: The absolute lifetime under different numbers of tasks.
is changed to 0.6. While the total utilization is equal to 0.1, 0.2, and 0.3, the normalized life-
time in Figure 8 is less than that while the normalized lifetime in 6. This is because while the
processor has more frequency levels, the proposed approach has a lower probability to derive
good frequency assignment.
Compared with Figure 8(a), the normalized lifetime of Figure 8(b) is obviously less. This
is because a higher switch cost affects Equation 4. From Figure 9, we can observe that the
proposed algorithm derives lower frequencies for the task set with the switch cost equal to
5 than those when the switch cost is 40. The reason is that the higher switch cost results in
that tasks need be executed at higher frequencies. The derived normalized lifetime is inversely
proportioned the power consumption which is proportioned to the cube of frequency.
From Figures 7 and 9, we can observe that most tasks use lower frequencies when the
processor has ten discrete frequency levels. This is due while the number of discrete frequency
level is 10, the derived frequency by the LP solver will be rounded up to a lower frequency
than that when the number of discrete frequency level is 5.
Figure 10 shows the simulation results when the processor has five and ten discrete fre-
quencies with γ = 1, 3, 5, and 7, respectively. In the figures, the trend of the performance are
similar. When the γ value is larger, the performance is better. The reason is that the num-
ber of tested refinement permutations are increasing and the probability of deriving the better
solution is also increasing. Therefore, the normalized lifetime will be improved.
13
[10] C.L Liu and J. W. Layland. Schedule Algorithm for Multiprogramming in a Hard Real-
Time Environment. Journal of the ACM, 20(1):46–61, January 1973.
[11] S. Liu, Q. Qiu, and Q. Wu. Energy aware dynamic voltage and frequency selection for
real-time systems with energy harvesting. In DATE ’08: Proceedings of the Conference
on Design, Automation and Test in Europe, pages 236–241, 2008.
[12] B. Luca, C. Giuliano, M. Alberto, M. Enrico, and S. Riccardo. Battery-driven dynamic
power management of portable systems. In ISSS 00: Proceedings of the 13th iInterna-
tional Symposium on System Synthesis, pages 25–30, 2000.
[13] P. Mejia-Alvarez, E. Levner, and D. Mosse´. Adaptive scheduling server for power-aware
real-time tasks. ACM Transactions on Embedded Computing Systems (TECS), 3(2):284–
306, May 2004.
[14] C. Moser, L. Thiele, L. Benini, and D. Brunelli. Real-time scheduling with regenerative
energy. In ECRTS ’06: Proceedings of the 18th Euromicro Conference on Real-Time
Systems, pages 261–270, 2006.
[15] G. Qu. What is the limit of energy saving by dynamic voltage scaling? In ICCAD
’01: Proceedings of the 2001 IEEE/ACM international Conference on Computer-Aided
dDesign, pages 560–563, 2001.
[16] G. Quan and X. Hu. Energy efficient fixed-priority scheduling for real-time systems
on variable voltage processors. In DAC ’01: Proceedings of the 38th annual Design
Automation Conference, pages 828–833, 2001.
[17] C. Rusu, R. Melhem, and D. Mosse´. Multi-version scheduling in rechargeable energy-
aware real-time systems. J. Embedded Comput., 1(2):271–283, 2005.
15
0.15 0.4 0.6 0.8 10
0.2
0.4
0.6
0.8
1
Frequency
 
 
sw 5
sw 40
(a) Total Utilization=0.4
0.15 0.4 0.6 0.8 10
0.2
0.4
0.6
0.8
1
Frequency
 
 
sw 5
sw 40
(b) Total Utilization=0.5
0.15 0.4 0.6 0.8 10
0.2
0.4
0.6
0.8
1
Frequency
 
 
sw 5
sw 40
(c) Total Utilization=0.6
0.15 0.4 0.6 0.8 10
0.2
0.4
0.6
0.8
1
Frequency
 
 
sw 5
sw 40
(d) Total Utilization=0.7
Figure 7: The distribution of frequencies derived by the rounding and refinement technique
when the processor has five feasible discrete frequency levels.
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.90
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Utilization
 
 
Rounding
Rounding+Refinement
(a) Switch Cost = 5
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.90
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Utilization
 
 
Rounding
Rounding+Refinement
(b) Switch Cost = 40
Figure 8: The normalized lifetime when the processor has 10 evenly discrete frequency levels
17
2國科會補助專題研究計畫成果報告自評表
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估
■ 達成目標
□ 未達成目標（請說明，以 100 字為限）
□ 實驗失敗
□ 因故實驗中斷
□ 其他原因
說明：
2. 研究成果在學術期刊發表或申請專利等情形：
論文：□已發表 ■未發表之文稿 □撰寫中 □無
專利：□已獲得 □申請中 ■無
技轉：□已技轉 □洽談中 ■無
其他：（以 100 字為限）
目前部份成果已發表在國際會議 Annual International Conference on
Real-Time and Embedded Systems (RTES 2010)
附件二
1國科會補助專題研究計畫項下出席國際學術會議心得報告
日期：99 年 11 月 10 日
一、參加會議經過
本人於韓國當地時間 5 月 20 日到達韓國釜山機場，本人於會議當日（21 日）抵達釜山
樂天飯店 42 樓會議地點辦理報到手續，始獲知參加國家及人數眾多，會場各國人士熱絡之場景令
人印象深刻。會議三天有一系列令人注意的 keynote，我仔細聽了幾場。當天下午有個開幕儀式，
由該會議主持人及與會之貴賓致詞，說明本會議舉辦之目的是為了提供國際間學術交流及技術合
作之管道，在這過程中遇見了不少從台灣前往的學者。一連三天之論文發表，論文發表之方式採
用上台報告。大致上，同時會有三個 session 一起進行，所以我選擇我有興趣的 session 參與。
第一天:
由於本次是結合和兩個會議一起舉辦，所以有的 Keynote 是屬於網路領域的。我聽了一場 Keynote，
題目為 Efficient Web Browsing with Perfect Anonymity Using Page Prefetching，由澳洲 Deakin 大學
的 Wanlei Zhou 教授演講。以下就他的演講做一些大概的描述：
Anonymous web browsing is a hot topic with many applications since more and more critical events
are performed on the Internet that require anonymity and privacy. The dominant strategy of achieving
anonymity is packet padding with dummy packets as cover traffic. However, this method introduces two
inherent problems: extra bandwidth and extra delay, it is therefore cannot meet both perfect anonymity
and strict delay constraints of web browsing. In order to resolve these challenges, we creatively propose
to use the predicted web pages that users are going to access as the cover traffic rather than dummy
packets. Moreover, users may expect a tradeoff between anonymity degree and the cost, we therefore
defined anonymity level as a metric to measure anonymity degrees. We established a mathematical
model for anonymity systems, and transformed the anonymous communication problem into an
計畫編號 NSC 98-2221-E-390 -016
計畫名稱
具可充電電池之嵌入式系統上的即時排程
出國人員
姓名
郭錦福
服務機構
及職稱
國立高雄大學
會議時間
99年 5月 21日至
99年 5月 23日
會議地點 韓國釜山
會議名稱
(中文)第十屆平行處理演算法與架構國際研討會
(英文) The 10th International Conference on Algorithms and Architecture for Parallel Processing
發表論文
題目
(中文)具兩個異質性多處理器系統上之即時工作排程
(英文) Real-Time Task Scheduling on Heterogeneous Two-Processor Systems
附件四
3convergence of competing IT paradigms for delivering our 21st century vision along with pathways for
future research.
之後有三個session同時進行，我參加了其中的一個session “Parallel Architectures”。晚上是歡迎晚
會，和與會的他國學者做了一次學術交流。
第三天:
參加完第一場關於 Multi-core and multithreaded architecture 的 session 後即離開。雖然下午主辦單位
有舉辦免費的釜山觀光，不過由於當天釜山雨下的很大，所以就沒參加。
二、與會心得
由於過去參加過許多國際研討會，此次研會令人感到不同的是它的規模不小，結合了兩個國
際會議一起舉辦。這樣的研討會可促進學者彼此間更進一步的交流。另外，會議所在的釜山是韓
國第一大港，定位上就如同台灣的高雄，釜山的地理位置並不是很好，因為被山面海，所以整個
港口的腹地不大，但卻是韓國造船的重鎮。此外，由於是提早一天到韓國，所以抽空去參觀了一
間位於釜山的半山腰上，具有一千四百多年歷史的寺廟，對於韓國政府維護古蹟的作法相當佩服，
這些值得我們台灣借鏡的地方。且在釜山遇到很多台灣學者，彼此交換名片，有些學者也允諾若
有機會可以到高大演講，藉此可以提高學校的知名度。
三、考察參觀活動(無是項活動者略)
四、建議
教師應多加國際性的研究會議，多了解世界研究趨勢，以拓展研究視野，勢必可以讓所
有研究生在進行國際交流時更無後顧之憂，對於提昇國際競爭力ㄧ定會有很好的鼓勵效果。
五、攜回資料名稱及內容
會議論文集 CD
六、其他
5二、與會心得
由於過去參加過許多國際研討會，此次研討會令人感到規模不大，結合了兩個國際會議一起
舉辦。這樣的研討會可促進學者彼此間更進一步的交流。另外，會議所在的新加坡是一個交通樞
紐，觀賞了新加坡著名的金沙飯店，看到他們的經濟成長。另外，他們種族成分很複雜，有各式
各樣的人種與宗教，不過都能和平相處。
三、考察參觀活動(無是項活動者略)
四、建議
教師應多加國際性的研究會議，多了解世界研究趨勢，以拓展研究視野，勢必可以讓所
有研究生在進行國際交流時更無後顧之憂，對於提昇國際競爭力ㄧ定會有很好的鼓勵效果。
五、攜回資料名稱及內容
會議論文集
六、其他
98年度專題研究計畫研究成果彙整表 
計畫主持人：郭錦福 計畫編號：98-2221-E-390-016- 
計畫名稱：具可充電電池之嵌入式系統上的即時排程 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 3 100%  
博士生 1 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 3 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
