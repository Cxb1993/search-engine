 
行政院國家科學委員會專題研究計畫成果報告 
具交期協調機制之鋼鐵業二階段排程研究 
The two-stage steel manufacturing scheduling with due date negotiation mechanism 
計 畫 編 號：NSC 97-2221-E-239 -029 - 
執 行 期 限：97 年 8 月 1 日至 98 年 10 月 31 日 
主 持 人：楊明賢   國立聯合大學經營管理學系 
共同主持人：  
計畫參與人員：林其憲、嚴可航   國立交通大學工業工程與管理學系
中文摘要 
鋼鐵製品主要依序透過煉鋼連續鑄造、軋鋼二階
段製程產生，其中鋼材切割規劃對鋼鐵製程的生產
規劃、生產排程有直接影響，故本研究以鋼材切割
規劃作為協調煉鋼連續鑄造、軋鋼二階段製程的依
據。訂單導向之生產方式使得製程間的生產規劃須
一併考慮，而非彼此獨立，因此製程間的協調、合
作，可透過以顧客訂單需求為主的鋼材切割規格組
合(cutting pattern)規劃進行，使製成品存量達到
最小化。本研究考慮的鋼材切割規格組合(cutting 
pattern)問題是連結不同階段製程生產規劃的核
心，目前鋼鐵業仍多依賴生管人員之經驗完成鋼材
切割規劃，除了不易成為系統化知識之外，且反應
客戶插單或訂單變動導致的排程變動，相當耗時。
鋼材切割規格組合問題屬一維切割存貨問題
(one-dimension cutting stock problem)且相當複
雜，本研究考慮符合訂單導向鋼鐵生產的特性，發
展求解切割問題的兩種模式，以達成鋼材產品庫存
最小化的目標。由於鋼材切割規格組合問題需同時
考慮規格組合數、規格組合向量變數及各規格組合
重複切割次數三類決策變數，使得問題非常複雜並
難以在有限時間內獲得最佳解，因此除了整合整數
規劃模式之外，考慮實務上可接受的規劃時間上
限，發展納入規劃經驗之兩階段整數規劃模式，以
快速求得比人工規劃更好的規劃結果。研究中所發
展的整合規劃模式，是以最小化庫存為目標，同時
求解鋼材切割規格組合向量變數與該組合對應之重
複切割次數。至於兩階段模式，第一階段以最小化
鋼胚廢料為目標，納入規劃經驗求解出較有可能的
規格組合向量變數而非列出所有的規格組合後，再
將所得的規格組合，輸入第二階段規劃，以最小化
成品庫存為目標，求解各規格組合對應之重複切割
次數，以縮短求解時間。本研究應用限制規劃軟體
進行求解，並以實務的切割規劃問題，對所發展的
兩種模式進行績效驗證與討論。 
關鍵詞：二階段製程協調、一維切割存貨問題、鋼
材切割、規格組合 
Abstract 
This research developed two programming models 
which can be used to coordinate the scheduling of the 
two stage processes. Therefore, we proposed the 
integrated programming model and the two-stage 
programming model for solving the steel process 
one-dimension cutting stock problem with the objective 
to minimize the total inventory, in which the demands 
of all product specification should be satisfied. The 
integrated model simultaneously solve the combination 
of some product specifications (pattern) corresponding 
to the available cutting length of a steel slab and solve 
the cutting times of each combination of product 
specifications (pattern). However, the two-stage 
programming model solves these two type of variables 
by two related models iteratively and including 
predetermined parameters obtaining from planning 
experiences to reduce the solution time. A performance 
comparison for the developed models implemented on 
a set of actual customer orders is also provided. 
Keywords ： two-stage process coordination, 
one-dimension cutting stock problem, steel cutting, 
product specifications combination 
1. 前言與研究目的 
本研究聚焦於鋼材切割規劃，以此作為
協調煉鋼連續鑄造、軋鋼二階段製程的依
據。因此針對鋼材切割規格組合問題，發展
兩種的數學規劃模式，以提昇規劃模式的求
解品質並使模式具有調整彈性與求解效
率。如此規劃人員不須花費時間於複雜計
算，專注於訂單變動的處理，適當地變更排
程計劃以為因應。鋼材切割規格組合規劃，
是連結連續鑄造與軋鋼兩階段鋼鐵製程生
產規劃的核心，有效的鋼材切割規格組合數
學規劃模式，將可幫助鋼鐵業者發展卓越的
訂單導向生產方式，以建立核心競爭優勢。 
篇探討原料切割問題的研究，求取最小化切
割原料成本，研究中將成品需求的滿足加入
考慮，在方法上則是將規格組合向量變數應
切割幾次放寬為連續變數但不需列出所有
的規格組合向量變數以簡化問題，他們所發
展的 Column Generation 演算法，亦為後續
多篇原料切割問題研究所採用。但 Gilmore 
and Gomory (1961, 1963)為確保求解速度，
求取實數解後，再進位成整數，此種方式將
難以確保求解品質。一維切割存貨問題之非
線性的典型解決方式，如 Kantorovitch (1960) 
的作法，係先產生所有的規格組合向量變數
(the pattern vectors)，接著問題便簡化為每個
規格組合向量變數應重複生產幾次，這樣的
作法在小問題時可行，但面對實務的大型問
題仍有適用的困難。產品規格組合切割問題
係整數問題，但整數問題隨著問題規模擴大
將更難求解， 
處理一維切割存貨問題之非線性特定
的另一種解決方式，先設定每一種切割規格
組合之長度的範圍，然後再求解每一種規格
組合向量變數的切割次數 (Giannelos and 
Georgiadis 2001; Johnston and Sadinlija 
2002)，但是仍然須要同時求解規格組合向
量變數與其所對應的重複切割次數，所以在
大型問題時並不適用。Johnston and Sadinlija 
(2004) 針對一維切割問題，在滿足需求限制
下，設定規格組合向量變數的上下限值，建
立整數規劃模型並考慮訂單交期以決定規
格組合向量變數順序，以求取最佳解，求解
目標包含最小化總使用長度、最小化廢料、
最小化規格組合數等。鄭瑞富、李宇欣(2007)
針對鋼筋裁切廠問題，考慮切割順序限制，
目標為求解最小化原料使用量，構建整數規
劃模式，並應用 CPLEX 之分支界限法求最
佳解。此方法仍然遇到在處理大型問題的時
間過長問題。Dikili et al. (2007, 2008) 發展
一個相似觀點的啟發法，透過滿足廢料最小
化、規格組合數最小化目標，迅速求得成品
規格組合向量變數，以滿足訂單需求，然
而，Dikili et al. (2007, 2008)只驗證適用於各
種規格之需求水準相近之小規模訂單需求
的切割組合規劃，未在實務需求之訂單數目
水準下驗證其方法的績效。至於產品規格組
合數最小化之目標，隨著鋼材切割設備的進
步，其重要性已經改變，因為不同規格組合
之間的調整時間已大幅下降，並且考慮滿足
客戶多種規格的訂單需求，實務上對產品規
格組合數是否最小化並不特別注意。 
本論文的結構如下：第 2、3 節將分別
介紹本研究所發展的整合規劃模式與兩階
段規劃模式，除問題定義、除數學規劃模式
介紹之外，亦以架構說明規劃模式如何配合
限制規劃軟體、給定的參數值、結合人工規
劃經驗產生規格組合等進行運作。第 4 節為
規劃模式之績效分析，透過鋼鐵業的實例驗
證整合規劃模式與兩階段規劃模式的求解
速度與品質。第5節為結論與未來研究方向。 
2. 整合規劃模式 
由於成品切割問題，需同時求解產品規
格組合數、規格組合向量變數與對應每一種
規格組合之重複切割次數，導致問題複雜度
過高，因此本研究結合限制規劃之概念與技
術，發展整合規劃模式與兩階段規劃模式，
並配合限制規劃軟體求解問題，以縮短求解
時間。限制規劃是透過問題需求與限制，尋
求滿足問題所有需求與限制之可行解，並從
中選擇最好的解之求解方法來解決此問
題，Brailsford et al. (1999)將限制規劃定義為
運用電腦化程式發展模式化語言，讓使用者
能簡單地、輕易地描述限制滿足問題，並透
過複雜的電腦演算法有系統地、有效率地求
解限制滿足問題。以下將針對產品規格切割
規劃問題進行簡單的介紹，並提出整合規劃
模式與兩階段規劃模式架構、數學模式與調
整機制說明。 
 
 
整合規劃模式可用於 K 類產品需求切
割規劃的求解，若在可接受求解時間上限
內，無法求得規格組合向量變數與對應重複
切割次數之最佳解，則停止模式的求解及決
定是否增加規格組合數，但增加規格組合
數，將導致求解時間增加，可能發生無法於
可接受的時間內求解的情況，因此停止模式
求解，獲得可行解，最後求得最佳解或可行
解必優於規格組合數為 M-1、M+1 的求解。 
2.2.1 數學規劃模式 
Min 
= =
−∑ ∑
1 1
( D )
K M m
k m k
k m
x y      (1)   
S.T. 
 ≥ 0 and integermkx    = 1, 2, ..., 1, 2, m Mk = ..., K      (2)  
 ≥ 0 and integermy   =  1, 2, ..., m M     (3)  
 λ
=
− ≤ ∑
1
AL L
K m
k k
k
x    =  1, 2, ..., m M     (4) 
=
≤∑
1
L  AL
K m
k k
k
x       =  1, 2, ..., m M      (5)                
  
=
≤ ∑
1
D
M m
k k m
m
x y      =  1, 2, ..., k K      (6)  
  
=
≤ × +∑
1
D (1 δ )
M m
k m k
m
x y =  1, 2, ..., k K    (7) 
在整合規劃模式中，某特定鋼種 j、公
稱尺寸 p情況下，規格組合向量變數、重複
切割次數皆為決策變數;成品需求量、規格
長度、鋼胚可用長度、廢料寬裕值、成品庫
存比例皆為參數。第(1)式為目標式，為最小
化成品庫存；第(2)、(3)式說明決策變數需為
整數，並大於等於 0。此限制主要作用是符
合鋼鐵製造廠鋼胚切割實務條件，以利模型
求解。第(4)、(5)式兩者代表規格組合所對應
的最大鋼胚廢料長度及鋼胚使用長度限
制。此限制主要作用是符合鋼鐵製造廠切割
實務條件，以利模型求解。第(6)式為確保所
有規格組合的 k種規格成品供應量大於等於
k種規格成品的需求量;第(7)式表達 k種規格
成品的存貨策略限制。第(6)、(7)限制主要作
用是給予決策變數 mkx 、範圍值，除縮短模
式求解時間外，且符合鋼鐵製造廠鋼胚切割
規劃實務條件，以利模型求解。 
2.2.2 應用整合規劃架構求解最佳解 
為說明圖 2 所述的整合規劃架構配合
前述的整數規劃模式，可求得最佳解，考慮
以下範例，共有 4 種規格(K=4)， 1L ~ 4L 分
別為 8, 10, 12, 14；需求 1D ~ 4D 分別為 5, 11, 
6, 2，由於整合規劃架構需要先決定規格組
合數，故令分組增量值 G＝5，如此將使所
有的規格，按照需求量，分為 3 組(故 M＝
3)，應用 OPL Studio 3.5 建立的對應的整數
規劃模式求解此 4 種規格示例，求解時間
0.20 秒獲得最低庫存量為 0，對應的決策變
數值為規格組合向量(0, 5, 0, 0)重複切割 2
次、(0, 0, 3, 1)重複切割 2 次、(5, 1, 0, 0)重
複切割 1 次。若增加 M 值為 4，則求解時間
增加為 4.17 秒，仍可求得與 M＝3 之同一個
最佳解。若 M 值為 2，則求解時間只有 0.01
秒，庫存量為 5 ((1, 3, 1, 0)重複切割 5 次、
(0, 1, 1, 2)重複切割 1 次，並非最佳解。由於
以上的求解時間都未達到求解時間上限，故
M＝3 之解為最佳解。 
 
3. 兩階段規劃模式 
3.1 兩階段規劃模式 
由於整合規劃模式在實務上切割規劃
問題需同時求解規格組合向量變數與其對
應之重複切割次數二項決策變數，因此難以
在可接受時間內取得最佳解。故本研究發展
另一求解模式，將兩項決策變數分為兩階段
求解，以顧及求解品質並縮短求解時間。第
一階段在考慮各種產品長度規格下，產生多
組規格組合向量變數。這些規格組合向量變
數的產生，除需考慮產品長度規格外，尚須
加入考慮各類產品需求及產品存貨的降
低。第二階段，再將第一階段產生的多組產
品規格組合向量變數，透過最小化產品庫存
整數規劃模式的運行，減少所需搜尋可行
解，如此將可簡化問題，縮短求解時間，求
第二階段規劃，即以最小化成品庫存支
數為目標，求解規格組合向量變數對應之重
複切割次數，並確認成品庫存總支數是否在
最低庫存水準之下。若成品庫存總支數在最
低庫存水準之上，則加入考慮規格組合向量
變數與其需求量的關係，重新進入第一階段
規劃中，透過規格組合向量變數與其需求量
相乘，利用分組增量值，以決定產品規格 k併
到不同規格群組，重新進行產品規格分組，
產生多組規格群組，因此形成規格群組集合
Ⅱ，重複進入最小化鋼胚廢料整數規劃模式
中，在第一階段與第二階段間重複上述求解
過程，直至達到最低庫存目標。 
3.2 數學規劃模式 
最小化鋼胚廢料求解模式 
Min     
=
∑
1
AL L
K m
k k
k
- x                  (8) 
S.T.      
≥ 0 and integermkx     = 1, 2, ..., 1, 2, m Mk = ..., K      (9) 
λ
=
− ≤ ∑
1
AL L
K m
k k
k
x     =  1, 2, ..., m M     (10) 
=
≤∑
1
L  AL
K m
k k
k
x         =  1, 2, ..., m M    (11) 
最小化成品庫存求解模式 
Min   
= =
−∑ ∑
1 1
( D )
K M m
k m k
k m
x y                (12) 
S.T. 
=
≥∑
1
D
M m
k m k
m
x y           =  1, 2, ...,  k K  (13) 
≥ 0 and integermy       =  1, 2, ..., m M (14) 
在兩階段規劃模式，規格組合向量變
數、重複切割次數皆為決策變數;鋼胚可用
長度、廢料寬裕值、成品需求量、產品規格
長度皆為參數：式(8)即為第一階段求解目
標，最小化鋼胚廢料；式(9)代表在規格組合
向量中所有變數需為整數，並大於等於 0；
式(10)、(11)兩者代表規格組合向量變數所
對應的最大鋼胚廢料長度及鋼胚使用長度
限制。式(12)即為第二階段求解目標，最小
化成品庫存；式(13)為確保規格組合向量變
數的k種規格成品總供應量大於等於k種規
格成品的需求量。式(14)為決策變數中重複
切割次數須為整數，並大於等於 0。 
兩階段規劃模式中，由於具有較大調整
彈性，因此將成品庫存的限制，以人工方式
加以考慮，與整合規劃模式中將成品庫存的
限制加入數學模式，成為第(7)式限制式的方
式不同。 
4. 規劃模式之績效分析 
本研究以某鋼鐵製造廠 H 型鋼實際訂
單資料，提出三實例 A、B、C，資料包含
各成品鋼材長度規格、需求量，如表 1 所
示，用以驗證兩階段規劃模式的實際運行績
效，並與整合規劃模式、人工規劃等，比較
求解績效、求解時間。 
表 1 實例 A、B、C 成品長度規格、需求量 
長度( Lk ) 8.0 9.0 10.0 10.5 11.0 12.0
需求( Dk ) 5 19 6 2 5 0 
長度( Lk ) 15.5 16.0 16.5 17.0   
A
 
需求( Dk ) 80 100 29 2   
長度( Lk ) 7.0 9.0 9.5 10.0 10.5 11.0
需求( Dk ) 11 1 16 3 1 8 
長度( Lk ) 12.0 13.0 13.5 14.0 15.0 16.0
需求( Dk ) 76 11 50 95 3 8 
長度( Lk ) 17.0 18.0     
B
 
需求( Dk ) 42 20     
長度( Lk ) 6.0 8.0 8.5 9.0 9.5 10.0
需求( Dk ) 1 44 40 401 3 377
長度( Lk ) 10.5 11.0 11.5 12.0 12.5 13.0
需求( Dk ) 3 61 4 356 3 55 
長度( Lk ) 13.5 14.0 15.0 16.0 16.5  
C
需求( Dk ) 3 44 70 23 60  
4.1 模式執行過程 
為說明本研究提出的整合規劃模式與
兩階段規劃模式，下述以實例 B 進行兩模式
求解過程說明如下。實例 B 包含 14 種產品
長度規格及需求，如表 1 所示，其餘參數包
含：鋼胚可用長度(AL)為 48m、廢料寬裕值
(λ)為 2m、最低庫存水準(δ)為 5%、分組增
格長度 7.0 的成品，可同時歸入新增規格群
組 1、群組 2 中，依序將 14 種產品規格透
過此群組劃分方式，新增 4 組規格組合向量
變數，形成規格群組集合Ⅱ。重複上述步
驟，求取規格群組集合Ⅱ中 4 組規格群組的
規格組合向量變數，刪除重複出現規格組合
向量變數後，共求得 117 組規格組合向量變
數。 
透過第一階段規格群組集合Ⅰ、Ⅱ所產
生的 154 組規格組合向量變數與 14 種產品
規格需求量，進入第二階段最小化成品庫存
模式，求解時間合計為 73.87 秒，目標值成
品庫存支數為 2 支，小於最低庫存水準，因
此停止兩階段規劃模式執行。 
4.2 模式績效比較 
下述將進行整合規劃模式、兩階段規劃
模式與人工規劃實例求解績效、求解時間比
較，數學模式的求解是透過 OPL Studio 3.5
限制規劃軟體，可接受求解時間上限設定為
50000 秒，實例 A、B、C 的求解績效、求
解時間比較如表 2、表 3 所示。 
表 2 實例 A、B、C 求解時間整理表 
實例 B 實例 C  實例 A
第一次 第二次 第一次 第二次
整合模式規格
組合數 7 8 7 8 
整合模式(秒) 8826.03 10559.83 1653.42 40554.33
第一階 0.94 1.03 3.15 1.03 兩階段
模式
(秒) 第二階 0.44 0.03 73.84 77.09 
求解速度方面，如表 2 所示，透過上述
實例可知，實例 A 在整合規劃模式中，規
格組合數限制(給定)為 6 情況下，求解時間
為 33209.01 秒，求得最佳解;規格組合數限
制(給定)為 7 情況下，求解時間為 8826.03
秒，求得可行解;規格組合數限制(給定)為 8
情況下，求解時間為 0.02 秒，求得可行解;
兩階段規劃模式執行時間在第一階段為
0.94 秒，第二階段為 0.44 秒，執行 1 次;實
例 B 在整合規劃模式中，規格組合數限制為
8 情況下，求解時間為 10559.83 秒，求得可
行解。兩階段規劃模式重複進入第一階段 2
次，第一次求解時間為 1.03 秒，第二次求
解時間為 3.15 秒;第二階段共執行 2 次，第
一次求解時間為 0.03 秒，第二次求解時間
為 73.84 秒;實例 C 在整合規劃模式中，規格
組合數限制為 7 情況下，共執行 2 次，第一
次求解時間 1653.42 秒，無法求解，第二次
求解時間 40554.33 秒，求解時間合計為
42207.75 秒情況下，求得可行解。兩階段規
劃模式執行時間在第一階段為 1.03 秒，第
二階段為 77.09 秒。在人工規劃方面，透過
調查得知，上述實例所需花費求解時間，平
均約為 20 分鐘，因此在求解速度方面，兩
階段規劃模式明顯優於整合規劃模式與人
工規劃。 
求解結果方面，如表 3 所示，實例 A，
在整合規劃模式中，規格組合數限制為 6 情
況下，庫存支數最後降至最低庫存水準之下
最佳解為 2 支;規格組合數限制為 7 情況
下，庫存支數最後降至最低庫存水準之下可
行解為 1 支;規格組合數限制為 8 情況下，
庫存支數最後降至最低庫存水準之下可行
解為 17 支。兩階段規劃模式中，庫存支數
最後降至最低庫存水準之下為 4 支。在人工
規劃方面，庫存支數為 4 支，但需透過其它
成品庫存遞補 2 支;實例 B，整合規劃模式
中，可行解為 17 支，在最低庫存水準 18 支
之下。兩階段規劃模式中，庫存支數最後降
至最低庫存水準之下為 2 支。在人工規劃方
面，庫存支數為 9 支，但需透過其它成品庫
存遞補 3 支;實例 C，整合規劃模式中，可行
解為 290 支，在最低庫存水準 78 支之上。
兩階段規劃模式中，庫存支數最後降至最低
庫存水準之下為 2 支。在人工規劃方面，庫
存支數為 5 支，但需透過其它成品庫存遞補
1 支。 
 
量變數，而本研究只需 4 組規格組合向量變
數，因此整合規劃模式更優於 Dikili et al. 
(2007)。兩階段規劃模式求解結果與 Dikili et 
al. (2008) 相同；以規格組合數而言，Dikili 
et al. (2008) 需 7 組規格組合向量變數，而
本研究也需 7 組規格組合向量變數，因此不
論是以求解結果或規格組合數而言，兩階段
規劃模式與 Dikili et al. (2008) 相同。透過
上述比較可知本研究所提整合規劃模式與
兩階段規劃模式，可成功應用於 Dikili et al. 
(2007, 2008) 的小型問題，求解的結果優於
或等同於他們的方法。然而在大型問題上，
Dikili et al. (2007, 2008) 並未進行績效驗
證， 
5. 結論與未來研究方向 
本研究探討鋼材切割規格組合問題，此
問題屬一維切割存貨問題且是連結兩階段
鋼鐵製程生產規劃的核心。鋼材切割規格組
合問題，需同時求解規格組合數、規格組合
向量變數及各規格組合重複切割次數三類
決策變數，使得問題更為複雜，本研究提出
整合規劃模式，藉由預先估計初始的規格組
合數，再由整數規劃模式求解，並視需要增
加規格組合數，可降低問題複雜度，並求得
最佳解。若問題規模擴大，則難以在可接受
時間內求得最佳解，故本研究亦發展兩階段
規劃模式，首先藉由納入規劃經驗求解出較
有可能的規格組合向量變數而非列出所有
的規格組合向量變數後，再加入考慮訂單中
不同規格長度產品需求量，成功求解規格組
合向量變數對應之重複切割次數，以迅速獲
得績效良好的產品規格組合切割規劃結果。 
應用本研究所提出的兩種規劃模式，求
解鋼鐵業的三個規劃問題，結果顯示：整合
規劃模式，較適用於產品規格為 10 種的小
規模問題，而產品規格為 14 與 17 種的較大
規模問題，同時考慮求解時間與求解績效，
仍以兩階段規劃模式明顯優於人工規劃模
式與整合規劃模式。另外，與文獻上的方法
比較之後，本研究所提整合規劃模式與兩階
段規劃模式，用於文獻之小規模實例的求
解，求解品質相當或更好；並且本研究的方
法能適用於訂單規模更大的環境。 
未來研究方面，本研究將朝如何改善整
合規劃模式，以縮短求解時間，以及產品規
格組合切割規劃如何估算所需粹取鋼液爐
數，並產生成品切割排程、鋼胚軋延排程、
鋼液粹取排程等方向繼續進行，以形成鋼鐵
業完整生產規劃模式。由於兩階段規劃模式
可迅速求得績效良好的鋼材切割規格組
合，聯繫兩階段鋼鐵製程之生產規劃以滿足
客戶訂單的需求。若需要快速完成排程變動
以回應客戶插單或訂單變動，本研究所提出
的模式將有助於達成卓越的顧客服務。 
 
參考文獻 
[1] Brailsford, S. C., Potts, C. N., and Smith, B. M. 
(1999), “Constraint satisfaction problems: 
algorithm and applications,” European Journal of 
Operational Research, 119 (December), 557-581. 
[2] Dikili, A. C., Sarioz, E., and Pek, N. A. (2007), 
“A successive elimination method for 
one-dimensional stock cutting problems in ship 
production,” Ocean Engineering, 34 (September), 
1841-1849. 
[3] Dikili, A. C., Takinaci, A. C. and Pek, N. A. 
(2008), “A new heuristic approach to 
one-dimensional stock-cutting problems with 
multiple stock lengths in ship production,” Ocean 
Engineering, 35 (May), 637-645.  
[4] Dyckhoff, H. (1990), “A typology of cutting and 
packing problems,” European Journal of 
Operational Research, 44, 145-159. 
[5] Giannelos, N. F. and Georgiadis, M. C. (2001), “A 
model for scheduling cutting operations in paper 
converting process,” Industrial and Engineering 
Chemistry Research, 40 (24), 5752-5757. 
[6] Gilmore, P. C. and Gomory, R. E. (1961), “A 
linear programming approach to the cutting stock 
problem, Part I,” Operations Research, 9 
(November-December), 849-859. 
[7] Gilmore, P. C. and Gomory, R. E. (1963), “A 
linear programming approach to the cutting stock 
 1
???????????? 
                                                             
???? NSC 97-2221-E-239 -029 - 
???? 
?????????????????? 
The two-stage steel manufacturing scheduling with due date negotiation 
mechanism 
?????? 
??????? 
?  ?  ?  ??????????? 
?????? August 2-6, Shanghai, China 
???? 20th International Conference on Production Research 
?????? THE CUTTING STOCK PROBLEM IN THE MANUFACTURING TO ORDER STEEL PRODUCTION 
?????? August 6-8, Hong Kong, China 
???? 2009 INFORMS International Conference on Service Science 
?????? The Expected Setup time and waiting time for a Finite-Capacity Service System Encountering Uncertain Customer Arrivals 
 
???????? 
 
?? ???? ?? 
Aug 2, 2009 ???????????????????? 
??????????? 
z Tuomo Kassi, Professor, Director D. Sc., Lappeenranta 
University of Technology, Finland 
z Dipl.-lng. Thimo Zahn, Wissenschaftlicher Mitarbeiter, 
Germany  
z Liang Changxin, Chief Engineer, Shanghai Electric Group 
Co., Ltd. Central Academe, China 
z Kong Fansen, Professor, Director of Dept. of IE, Jilin 
Univeristy, China 
 
 
Aug 3, 2009 
Session 2-01 
(9:30-12:00) 
Keynote paper presentation  
 
1. “Technology and Innovation Management in the Future”  
Hans-Jörg Bullinger*, Dieter Spath, Joachim Warschat, 
Alexander Slama, Peter Ohlhausen 
*Fraunhofer-Gesellschaft, Hansastraße 27 c 80686 München 
Fraunhofer Institute for Industrial Engineering, Nobelstraße 12 
70569 Stuttgart 
2. MASS CUSTOMIZATION- CURRENT TRENDS AND 
APPLICATIONS 
B. L .MacCarthy 
 
 ??? Organizing 
Committee???
? 
Prof. Dr. Li Ming 
 
 ???
International 
Programme and 
Advisory 
Committee???
 3
CONSTRAINTS 
3. A LEAN MES ANALYSIS TO PROVIDE 
AUTOMATED VALUE STREAM MAPPING 
4. SAMPLE PATH OPTIMIZATION OF 
CONTINUOUS-FLOW TRANSFER LINES WITH 
DELAY 
5. THE IMPACT MECHANISM ANALYSIS OF 
INFORMATION SYSTEM AND ITS EVOLUTION ON 
KNOWLEDGE WORK 
6. ANALYSIS OF SELF-BALANCING PRODUCTION 
LINE WITH INDIVIDUAL LEARNING 
Aug 5, 2009 
 
????????????????? 
 
 
 
Aug 6, 2009 
(9:30-10:30) 
Keynote Presentation I  
Topic: Internationalization of Higher Education, Prof. Way 
Kuo, City University of Hong Kong 
 
 
 
 
???????
?? 
Coffee Break  
 
Coffee Break  
? Prof. Mitchell M. Tseng, Hong Kong University of Science 
and Technology ?? 
 
 
 
 
 5
and Manufacturing Industry, Qiang-rong Tang 
2. 218-Determinants of Organizer Exhibition Service 
Quality as perceived by Insurance Company in Campus 
Exhibition, Fang-Yu Chang 
3. 243-Knowledge Transfer in Computer-Mediated 
Communication Services: An Analysis of Influences of 
Identity and Organizational Citizenship Behavior 
Perspectives, Hokyoung Shin 
4. 271-Pricing and Inventory Control for Perishable 
Products with Demand Cannibalization and Substitution, 
Ting Wu 
 
 ??? 271???
???????
????????
????????
???????
???????(?
?????)???
????????
???????
??? 
 
 
 ????????
???????
????? 
 
Aug 6, 2009 
(18:00-) 
Dinner  
 
 
??ICPR20???? 
1. ????????????? 
?????????????????????????????????????
??????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????-?????? 
????????? Professor Kassi ?????????????????????
?????????????????????????? 
2. ??????????????????? 
?????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??????????????????????????????????? 
20th International Conference on Production Research 
 1
SOLVING THE CUTTING STOCK PROBLEM IN THE MANUFACTURING TO ORDER 
STEEL PRODUCTION 
 
M.H. Yang1 and C.K. Kao2 
1Department of Business Management, National United University, 1, Len-Da, Miao-Li, Taiwan, ROC. 
2Department of Industrial Engineering and Management, National Chiao Tung University, 1001 University 
Road,  Hsinchu, Taiwan, ROC. 
 
Abstract 
For the manufacturing of steel products, all products are processed sequentially through three stages of 
processes, refining, continuous casting, and rolling, in which the cutting pattern planning will be directly 
related to the detail planning and scheduling among the processes. For a manufacturing to order steel 
factory including three stages of processes, the productions at theses processes are inter-related and 
should be coordinated rather than being treated as mutually independent. That is, rather than establishing 
high level of work-in-process between stages, the production coordination among the process stages is 
conducted through the cutting pattern planning to meet the summarized demands of customers in the 
perspective of product specification. In this paper we consider the one-dimension cutting stock problem with 
the objective to minimizing the total inventory, in which the demands of all product specifications should be 
satisfied. At the rolling mill, steel products of specific length are produced by cutting the milled steel, 
transformed from a beam billet or a bloom, corresponding to some specific pattern in the cutting plan. An 
integer programming model is firstly developed to solve the cutting problem optimally, and then a two-stage 
programming model is proposed to derive a solution of quality in a short time. To obtain an optimal solution 
for the considered problem, three categories of decision variables should be solved simultaneously, that is, 
the number of cutting patterns, the vector variables in a cutting pattern, and the repeated runs for a pattern, 
which implies the complexity of the problem and usually can not be solve optimally within accepted time. The 
two-phase model first finds a limited number of superior patterns, rather than lists all possible patterns, 
through grouping certain product length types depending on the magnitudes of customer orders, then 
determines the repeated runs of all patterns in the list to generate a quality solution quickly. A comparison 
on the performances of the proposed models basing on actual customer orders is also provided.  
 
Keywords:  
one-dimension cutting planning problem, manufacturing to order, steel production, integer programming 
model, specification combination pattern 
 
1 INTRODUCTION 
Manufacturing to order is a differential competition strategy 
for the steel production industry which traditionally 
emphasized on high production efficiency and economic 
scale to achieve the low-price competence. Therefore, for 
a manufacturing to order steel factory including three 
stages of processes, refining, continuous casting, and hot 
rolling, the productions at theses processes are inter-
related and should be coordinated rather than being 
treated as mutually independent. In this paper, we point out 
the cutting pattern planning can be used as the mechanism 
to coordinate the productions among these processes. 
That is, rather than establishing high level of work-in-
process between stages, the production coordination 
among the process stages is conducted through the cutting 
planning to meet the summarized demands of various 
types of product from customer orders, for specific nominal 
size and steel grade.   
For the considered processes of steel production, firstly 
raw materials (scrap and pig iron) are converted into liquid 
iron in the D.C. electric arc furnace and then are refined. 
Secondly, the liquid iron is poured into a shape mold and 
then continuously cast into solid H-beam billet. At the final 
stage, the H-beam billet is heated to reach at a certain 
level of temperature through reheating furnace, and then is 
transformed through several sub-steps of hot rolling mill, 
hot saw, cooling, straightening, and finally finished H-beam 
steel products of specific length are produced. Note that, at 
the hot rolling mill, H-beam billet is firstly transformed into 
milled H-beam with required width and length, and then is 
sawed according to a specific cutting pattern, which are 
both determined at the cutting planning. A cutting pattern is 
a combination of types of lengths of product corresponding 
to a milled H-beam with an available length, in which a 
pattern consists of one or more than one types of product 
length of H-beam steel product. Therefore, in backward of 
the sequence of production processes, the cutting plan can 
be used as a coordination mechanism for proceeding the 
production planning, both at the processes of continuous 
casting and refining.  
Gilmore and Gomory [1] conducted the fist study of 
material cutting problem to minimize material cost while 
satisfying the demand. Gilmore and Gomory [1, 2] utilized 
column generation to relax the integer problem by implicit 
generation of the patterns, which needs past processing to 
provide integer solution. Regarding breaking the non-
linearity, Kantorovitch [3] generated all possible patterns 
and then deal with the repeated runs of a pattern. Another 
approach (Giannelos and Georgiadis [4]; Johnston and 
Sadinlija [5]) restricts run lengths to pre-specified usage 
level range and determines patterns to match each usage 
level. However, it still falls short of determining the run 
lengths and patterns at the same time and can not handle 
large-scale problems. Johnston and Sadinlija [6] provided a 
new model resolving the non-linearity in the one-
dimensional cutting stock problem by a novel use of 
decision variables and constraints to represent the non-
linear relationship. Dikili et al. [7, 8] proposed similar 
heuristic approaches, a successive elimination, to solve the 
one dimensional cutting stock problem by generating 
feasible solutions that reducing material waste through 
smallest number of different patterns. However, the 
proposed heuristic was evaluated by small-scale problems.   
In this paper, we develop two programming models for 
solving the cutting planning to meet the summarized 
demands from customer orders with the objective of 
minimum additional inventory in all types of product length. 
The considered milled H-beam cutting problem is an one-
dimension cutting stock problem which needs to be solved 
the cutting patterns and the repeated times of a pattern 
20th International Conference on Production Research 
 3
of type k product also should not against the inventory 
policy, which is expressed in Equation (7).  
Min 
= =
−∑ ∑
1 1
( D )
K M m
k m k
k m
x y      (1)   
S.T. 
 ≥ 0 and integermkx          = 1, 2, ..., 1, 2, m Mk = ..., K      (2)  
 ≥ 0 and integermy         =  1, 2, ..., m M      (3)  
 λ
=
− ≤ ∑
1
AL L
K m
k k
k
x           =  1, 2, ..., m M      (4) 
=
≤∑
1
L  AL
K m
k k
k
x               =  1, 2, ..., m M      (5)                
  
=
≤ ∑
1
D
M m
k k m
m
x y               =  1, 2, ..., k K      (6)  
  
=
≤ × +∑
1
D (1 δ )
M m
k m k
m
x y      =  1, 2, ..., k K    (7) 
 
Optimal solution by integer programming model  
To illustrate the implementation of the integer programming 
model be capable of deriving optimal solution for a cutting 
planning problem, consider the following problem including 
4 types of product length (K=4) to planned on the rolled H-
beam with available length (AL) of 50, in which the product 
length 1L ~ 4L  are equal to 8, 10, 12, 14 respectively, and 
product demand 1D ~ 4D  are equal to 5, 11, 6, 2 
respectively.  For a pattern with vector (5, 1, 0, 0), it 
indicates the following variables with their corresponding 
values, =11 5x , =12 1x , =13 0x , 14 0x = .   
To solve the considered problem by setting G=5 and λ=0, 3 
groups of types of product length (M=3) can be obtained. 
With OPL Studio 3.5 as the tool for solving the built integer 
model basing on the 4 types of product length problem, a 
optimal solution with 3 patterns and no finished good 
inventory was obtained, in which the computation time is 
0.2 second and the three patterns are (0, 5, 0, 0), (0, 0, 3, 
1), (5, 1, 0, 0) to be respectively cut for 2, 2, and 1 times of 
repeated run. The previous solution is shown to be optimal 
by the following further model running. If M is increased as 
4 and then proceeds the running of integer model, the 
computation time is extended as 4.17 seconds and the 
same solution obtained as that of M=3. If M is decreased 
as 2, then the computation time is reduced to be 0.01 
second but the inventory arising to be 5, the two patterns 
are (1, 3, 1, 0) and (0, 1, 1, 2) to be respectively cut for 5 
and 1 times of repeated run. 
3 TWO-STAGE PROGRAMMING MODEL 
Since the integer programming model might have the 
difficulty of obtaining optimal solution for real-world scale 
cutting planning problem within accepted time, that is, the 
simultaneously solving two categories of decision variables 
in the integer programming model, the variable in the 
vector of a pattern and the repeated runs of a pattern, we 
develop another model, a two-stage programming model to 
reduce the solution time for a solution of quality. In the first 
stage, cutting patterns will be generated from the set of 
types of product length, in which there patterns are closely 
related to the K types of product length included in the 
considered summarized demand and contribute to the 
reduction of the finished goods inventory among of all 
types of product. In the second stage, another integer 
programming model trying to minimize the finished goods 
inventory over the generated patterns in the first stage is 
developed to efficiently solve a feasible solution for a 
cutting planning problem, which should not against the 
inventory policy.  
3.1 Implementation of two-stage programming model 
Consider the cutting pattern (5, 5) list in section 2.1 
carrying with demand 1D 10=  and 2D 2=  corresponding 
to 1L 8=  m and 2L 12=  m. If there is 2 times of cutting for 
the pattern (5, 5), then there will have 10 pieces of supply 
in 8 m and 10 pieces of supply in 12 m and finally have 
finished goods inventory of 8 in product length 12 m. 
Therefore, two types of product length, carrying large 
difference in demands, grouped to generate cutting 
patterns will have possibility of causing inventory, such as 
the (5, 5) case shown. However, accounting not only the 
demand kD corresponding to a product length Lk  but also 
the variable mkx  in the pattern m will eventually help the 
reduction of inventory. Therefore, in the first stage of the 
two-stage model, Dk  or 
m
k kx D  are used to establish the 
set of types of product length to form the group set I and 
the group set II of product length type, in which the 
magnitude of Dk  or 
m
k kx D  is applied to decide if the k 
type product length belongs to the same group with the 
range defined by incremental G. The rules of grouping the 
set of types of product length are developed to generate 
cutting patterns which contribute to the reduction of the 
finished goods inventory.   
 
Figure 2: The concept structure for implementing the two-
stage integer programming model 
Before the execution can move to the second stage, a 
second-stage condition should be satisfied. If all the 
generated patterns from the first stage can include all types 
of product length, having none zero demand, and have 
these types appearing in the patterns at least R time, R is a 
parameter, then another integer programming model trying 
to minimize the finished goods inventory in the second-
stage will be applied to efficiently solve a feasible solution 
for a cutting planning problem. The concept structure of the 
two-stage programming model is shown in Figure 2. 
20th International Conference on Production Research 
 5
4.2 Performance comparisons 
Here we implement a performance comparison among the 
integer programming model and the two-stage 
programming model for the three testing problems, in 
which the results are also compared with the solution 
obtained by the current way, that is, by experienced cutting 
planners. Problems are solved through the OPL studio 3.5, 
which is a module of ILOG, and the accepted upper limit of 
solution time is set as 50000 seconds. The computation 
times and the solutions for the three testing problems are 
shown in Table 2 and Table 3.  
For the solving of testing problems through the integer 
programming model, as the increasing of the number of 
types of product length, the computation time is increasing 
too. For the solving of testing problems `through the two-
stage model, the computation times, either in first-stage or 
in second-stage, are significantly reduced, that is, the two-
stage model is quite efficient. Note that the computation 
time via experienced planners, typically, it is roughly 
estimated to be 20 minutes, which is longer than the two-
stage model. Regarding the comparison on solution quality, 
although the integer programming model has the demerit 
of long computation time, this model, capable of obtaining 
optimal solution, can generate a solution of quality when 
the problem size is restricted at a certain level, which can 
be shown for the solving of problem A. As the problem size 
increasing, the proposed two-stage programming model 
can efficiently solve problem B and C and obtains the best 
solution among the three considered approaches.  
  
Table 2: The computation times of the proposed models for 
solving three testing problems 
B C  A 
1st Run 2nd Run 1st Run 2nd Run
M set in model 7 8 7 8 
Integer model 8826.03 10559.83 1653.42 40554.33
First-
stage 0.94 1.03 3.15 1.03 Two-
stage 
model Second-
stage 0.44 0.03 73.84 77.09 
 
Table 3: The solutions summarized from three testing 
problems solved by the proposed models  
B C  A 
1st Run 2nd Run 1st Run 2nd Run
M set in model 7 8 7 8 
Sol. By Integer 
model 1 17 N/A 290 
Sol. By two-
stage model 4 83 2 2 
Sol. by current 
way 4* 9** 5*** 
  *  Needs 2 additional products from inventory 
 **  Needs 3 additional products from inventory 
***  Needs 1 additional products from inventory 
 
Comparisons with other approach 
To further verify the performances of our proposed models, 
we provide another comparison with the approach 
designed by Dikili et al. [7, 8], who proposed heuristics on 
the planning of steel product cutting problem. Table 4 
shows the two small problem solved by Dikili et al. [7, 8], in 
which the considered problem is significantly smaller than 
those considered in this paper. For the first problem 
consisting of 6 types of product length, the integer 
programming model, AL=100, λ=0 and G=6, can be 
applied to obtain a solution of no additional inventory with 
M set to be 4 and the computation time equal to 7.69 
seconds. Note that this solution is better than that derived 
by Dikili et al. [7] because of the reduction of the number of 
cutting patterns, which is 5 in Dikili et al. [7]. 
For the second problem consisting of 5 types of product 
length, the two-stage programming model, AL=100 m and 
70 m, λ=0, G=15, and R=1, generates 2 groups of types of 
product length and then produces 37 cutting patterns, in 
which the computation time is 1.16 seconds. After the 
execution of the second-stage of the model, a solution of 
no additional inventory is obtained with the computation 
time 0.09 seconds, which is same as that derived by Dikili 
et al. [8].  
Table 4: The product length types and corresponding 
demands of the two small problems  
Dikili et al. [7] 
Product length ( Lk ) 60 50 30 25 20 10
Demand ( Dk ) 6 7 6 2 0 16
Dikili et al. [8] 
Product length ( Lk ) 60 40 30 20 10
Demand ( Dk ) 5 18 8 16 12
 
5 CONCLUSIONS 
In this paper, we considered the one-dimension milled H-
beam cutting stock problem and developed a superior 
model for efficiently generating a solution of quality for the 
cutting planning problem in the manufacturing to order 
steel production. To obtain an optimal solution for the 
considered problem, three categories of decision variables 
should be solved simultaneously, that is, the number of 
cutting patterns, the vector variables in a cutting pattern, 
and the repeated runs for a pattern, which implies the 
complexity of the problem and usually can not be solve 
optimally within accepted time. Therefore, we proposed 
another two-phase model which first finds a limited number 
of superior patterns, rather than lists all possible patterns, 
through grouping certain product length types depending 
on the magnitudes of customer orders, then successively 
determines the repeated runs of all considered patterns to 
generate a quality solution quickly.  
To test the performances of our proposed models, three 
cutting planning problems from a steel factory were 
included. Although the integer programming model has the 
demerit of long computation time, this model, capable of 
obtaining optimal solution, can generate a solution of 
quality for the size of problem restricted at a certain level. 
As the problem size increasing, another proposed two-
stage programming model can efficiently solve problems in 
real-world scale. After the performance comparisons in 
larger problems, it reveals that the proposed two-stage 
model has the potential of obtaining best solution among 
the considered approaches. Further comparing with the 
heuristic approach in literature, our two proposed models 
can provide better or same solution for small problems 
studied in literature. However, in the performance 
comparisons conducted in this paper, our approaches have 
been tested by the real-world problems at large-scale.   
  
6 REFERENCES 
[1] Gilmore P. C. and Gomory R. E., A linear 
programming approach to the cutting stock problem, 
Part I, Operations Research, 1961, 9, 849-859. 
The Expected Setup time and waiting time for a Finite-Capacity 
Service System Encountering Uncertain Customer Arrivals 
Ming-Hsien Yang* 1, Shu-Hsing Chung2, and Ching-Kuei Kao2 
                                                          
* Corresponding author. Tel.: +886-37-381591; Fax: +886-37-332396; E-mail: ymh@nuu.edu.tw (M. H. Yang). 
1 Department of Business Management 
National United University 
Miao-Li, Taiwan, ROC 
2 Department of Industrial Engineering and Management 
National Chiao Tung University 
Hsinchu, Taiwan, ROC 
ABSTRACT 
For a system with finite-capacity resource to provide several types of services, setup is required to prepare the 
resource for providing specific type of service, in which setup time should be added to the processing time and be 
treated as the total service time. The development of analytic model for expected setup contributes to the evaluation 
of capacity reduction due to switching the setting of a resource to response to the type of demand request from a 
customer with uncertain arrivals. The inter-arrival time of a specific type of customer is independently and 
exponentially distributed. After the arrival of a customer with specific type of demand, he or she enters the waiting 
line, in which a FIFO rule is applied to choose next customer. Besides, we also develop analytic model to calculate 
the waiting time in service line to facilitate the performance evaluation from customer perspective. To analyze the 
accuracy of the proposed probabilistic models, an experimental design with various arriving conditions among 
several types of service, which corresponds to various resource utilization rates, is conducted.  
1. INTRODUCTION 
For an operational service system designed for producing several types of services according to customer order, a 
setup of the finite-capacity resource to switch from the current setting to a different one usually is necessary and can 
not be regarded as a part of service processing time. Thus, setup time may take up a large part of the capacity of the 
service resource. When a customer of specific product type, indicating a customer order, arrives at the system, he or 
she will enter the queue line and waits a period of time, and then starts the serving executed on a resource of the system. 
In this paper, the first-in first-out (FIFO) rule is applied to choose next customer to be served. Before starting the 
processing of the type of service required by the next customer, the service resource should be paused and proceeds 
setup if the previously completed type of service is different from that of next customer. Therefore, not only direct 
service processing time but also the setup time consumes the capacity of service resource, which indicates that total 
setup time is related to the capacity reduction of service system.   
Setup times or setup costs plays a crucial role in both manufacturing and service environments, including many 
applications in various production, service, and information processing systems [1]. Therefore, an efficient evaluation 
of the waste from setups, the purpose of this paper, might help to bring the benefits arising from reducing the setup 
time/cost. There are two types of setups, (1) sequence-independent and (2) sequence-dependent, the second is a 
generality of the first and is considered in this paper. Besides, there are two levels of setup time problem [2], including 
the lower level concerning the role of setup in scheduling jobs [3, 4, 5], and the higher level concerning that in 
decision making at the production planning and control [6]. The dynamic behavior of job arriving was studied by 
some researches [4, 5, 6]. Reference [6] defined the probability of a setup is necessary for an arriving job complying 
with Poisson process underlying the FIFO and the FSR dispatching rules, however, did not address the setup 
probability for an arriving job of specific product type. Reference [4, 5] assumed an independent Poisson arrival of a 
job with product type j and arrival rate λj and defined the probability of requiring a setup in a time interval. However, 
their equations simplified the setup probability to constantly be (1 1 )J−  without considering the effect of the product 
type of an arriving job.  
Considering the setup time can not be ignored in the service time of customers, which is related to the waiting time 
of customer before being serviced, we also develop analytic model for calculating the expected waiting time of 
customers to provide the performance evaluation from customer perspective. To estimate the waiting time in M/G/1 
expected mean setup time for product type j customers arriving in the time interval (0, RT] is defined as 
1, ,[ ] [ ]
jn
ij FIFO ij FIFO jE S E S n== ∑ , where nj＝λj×RT and j=1, 2, …, J. Finally, the expected mean setup time of customers 
arriving in the time interval (0, RT] is derived as 1 11 ,[ ] [ ]j
nJ J
j jiFIFO ij FIFO jE S E S n= === ∑ ∑ ∑ . 
2.4. THE EXPECTED SERVICE TIME CONTAINS THE SEQUENCE-DEPENDENT SETUP TIME 
Suppose that the service time of customers equals its processing time plus its setup time with sequence-dependent. 
Thus, the expected service time of customers is also divided into three situations and is shown as Equation (4). First, 
the service time of the ith product type j customer would be zero with the condition customers not arrive in time 
interval (0, RT] and the probabilities is equal to Pr[Tij>RT]. Second, the service time of the ith product type j customer 
would be equal to its processing time with the condition one customer arriving within the time interval (0, RT] and the 
new arrival customer needs no setup and the probability is equal to Pr[Tij≦RT](λj/λ). Third, if the earlier customer 
processed on the resource belongs to the product type r, then the probability that the ith customer of product type j 
arrives in the time interval (0, RT] and setups is required is equal to Ps,ij,FIFO(λr/λc), where r＝1, 2, …, J and r≠j, and 
1,
c J
r r j rλ λ= ≠= ∑ . 
( ), , ,
1
1
Pr 0 Pr
                 Pr 1
J
j r
ij FIFO ij ij j s ij FIFO j jrc
r
r j
J
j r
ij j jrc
r
r j
E S T RT T RT pt P pt s
T RT pt s
λ λ
λ λ
λ λ
λ λ
=≠
=≠
⎡ ⎤ ⎡ ⎤ ⎡ ⎤= > × + ≤ + +⎣ ⎦ ⎣ ⎦ ⎣ ⎦
⎡ ⎤⎛ ⎞⎢ ⎥⎡ ⎤= ≤ + −⎜ ⎟⎣ ⎦ ⎢ ⎥⎝ ⎠⎢ ⎥⎣ ⎦
∑
∑
              (4) 
where ptj is the processing time of product type j customers. Then, the expected mean service time of the product type 
j customers and the expected mean service time of customers are shown as 1, ,[ ] [ ]j
n
ij FIFO ij FIFO jE ST E ST n== ∑  and 
1 11 ,[ ] [ ]j
nJ J
j jiFIFO ij FIFO jE ST E ST n= === ∑ ∑ ∑  respectively, where nj=λj×RT and j=1, 2, …, J. 
2.5. THE EXPECTED WAITING TIME CONTAINS THE SEQUENCE-DEPENDENT SETUP TIME 
Using the Pollaczek-Khinchin formula for the mean waiting time in the M/G/1 queue to estimate the waiting time 
of customers through the use of the concept of residual service time [8], then the waiting time of customers equals the 
remaining time of the unfinished customer on the resource plus the time needed to serve the customers ahead in the 
queue. Thus, the expected waiting time of the ith customer of product type j is defined as Equation (5). 
, , , ,ij FIFO ij FIFO q ij FIFOE W E R E W⎡ ⎤ ⎡ ⎤ ⎡ ⎤= +⎣ ⎦ ⎣ ⎦ ⎣ ⎦                                                                                                      (5) 
First, consider the remaining time of the unfinished customer on the resource. One customer arrives, this time for 
an arriving customer would be necessary while there is one or more customer in the system. For the case if there are 
n 1 ≧ customers in the system, suppose that there are θ customers present in the system and the ith customer of product 
type j arrives at the system, then the expected residual service time until one unfinished customer completed its 
processing on the resource is shown as Equation (6). 
( ) ( )
( ) ( ) ( )
, 0 0
2 2
, , , , ,0
1 1 1
1
1 1                  1
2
ij
j ij
RT t
ij FIFO ij ij
ij
tJ JRT j r
ij s j FIFO j rj s j FIFO j ij ij FIFOc
j i rij
r j
E R p R t dt f t dt
t
p f t P pt s P pt dt p ER
t
θ θ
λ
θ θ
λ λ
λ λ= = =
≠
⎡ ⎤ =⎣ ⎦
⎡ ⎤⎢ ⎥= + + − =⎢ ⎥⎢ ⎥⎣ ⎦
∫ ∫
∑∑ ∑∫
 (6) 
where pθ represents the probability that there are θ≧1 customers present in the system, R(t) represents the residual 
service time of the unfinished customer on the resource, Tij represents a gamma random variable with parameters i and 
λj, and ERij,FIFO is defined as Equation (7). 
customer is staying in the queue line. Thus, the new arriving has to spend the time serving one waiting customer ahead 
in the queue, and then the expected time needed to serve one waiting customer ahead in the queue is shown as 
Equation (8). For a new arriving customer of the ith customer of product type j and there are three customers present in 
the system, thus this mean that there are two customers in the queue line. Therefore, the expected time needed to serve 
two waiting customers ahead in the queue is shown as Equation (9). 
To facilitate the calculation of EWQθ-1,ij,FIFO, it need to be reformulated and can be shown as Equation (10). Then 
the expected time needed to serve the customers ahead in the queue for a new arriving customer of the ith customer of 
product type j is shown as 2, , 1, ,[ ]q ij FIFO ij FIFOE W EWQθ θ
∞
= −= ∑ . Suppose that there would arrive nj independent 
customers in the time interval (0, RT] for the product type j. Thus, the expected mean waiting time for the product type 
j customers under the FIFO rule is calculated as 1, ,[ ] [ ]j
n
ij FIFO ij FIFO jE W E W n== ∑ , and the expected overall mean 
waiting time under the FIFO rule is computed as 1 11 ,[ ] [ ]
jnJ J
j jiFIFO ij FIFO jE W E W n= === ∑ ∑ ∑ , where nj=λj×RT and j=1, 
2, …, J. 
3. SENSITIVITY AND ACCURACY ANALYSIS OF THE PROPOSED MODELS  
To verify the efficiency and the accuracy of the proposed probabilistic model, a simulation model is built to 
simulate the inter-arrival time of customers with exponential distribution, in which the dispatching of customers for 
processing on the resource is according to the FIFO rule, and the sequence-dependent setups is included for two 
different types of consecutive customers on one the resource. 
The simulation is implemented according to the experimental design by varying two control parameters: length of 
the time interval (RT), and total arrival rate (λ), where the vector of customer arrival rate among eight product types is 
shown as λ = a[0.001342 0.001577 0.001804  0.000917 0.001145 0.001443 0.000817 0.000955], then 8 1j jaλ λ== ∑  
customers in 60 seconds and 0<a≦1. For each combination, the simulation model contains the vector of customer 
processing time among eight product types, PT = [15 75 85 45 55 10 80 125], and ST represents the matrix of 
sequence-dependent setup time for switching product types on the resource. “Second” is the unit of processing time 
and setup time. Note that the simulation results are collected for each combination after 10,000 independent 
simulation runs. 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢
⎣
⎡
=
045751545604530
450607560759045
301504530907530
604575045904515
301530450453015
156030459007560
304530757560090
156045604530150
ST  
In order to verify the efficiency of the total arrival rate (λ), the expected total number of setups (E[NSFIFO]), the 
expected mean setup time per customer (E[SFIFO]), the expected mean service time per customer (E[STFIFO]), the 
expected mean waiting time per customer (E[WFIFO]), and the expected utilization rate of the resource (ρFIFO＝
λE[STFIFO]) are shown in Figure 1-4 for various run times and total arrival rates, where six levels of run time (RT) are 
considered: 4, 8, 12, 16, 20, and 24 hours, and ten levels of the total arrival rate (λ) are considered: aλ ( 8 1j jaλ λ== ∑  
customers in 60 seconds), where a = 1.00, 0.99, 0.980, 0.97, 0.96, 0.95, 0.90, 0.85, 0.80, and 0.75. 
Figure 1 shows the total arrival rate by the simulation model for various run times, and the mean total arrival rate 
by the simulation model. The total arrival rate by the simulation model increases when the run time is longer with the 
smaller value of λ, but decreases as run time is longer with the larger value of λ. The total arrival rate by the simulation 
model has the larger variance with smaller value of λ, but its variance becomes smaller with the larger value of λ.  
Figure 2 shows E[NSFIFO] increases when the total arrival rate and the run time increase because the total number 
of arriving customers is increasing. In Figure 2 the relationship between E[NSFIFO] and the total arrival rate (λ) is close 
to a linear line and the slope of this line increases as the run time is longer. Similarly, E[NSFIFO] is approximate a 
multiple of times as the run time contains a quantity of times. The change of E[NSFIFO] between two distinct points of 
the run time is increasing as the run time is increasing. Table 1 shows the average absolute error of estimated setups of 
3.7782. Furthermore, the average absolute error percentages of expected setup time, expected service time, expected 
waiting time, and estimated resource utilization rate are all smaller than 10%. In general, the probabilistic model under 
FIFO rule can estimate the number of setups, the sequence-dependent setup time, the service time, the waiting time, 
and the utilization rate of resource more accurately. Therefore, our models can, in some extent, accurately calculate the 
total setup time and efficiently evaluate the waste coming from setups, and calculate the service time to evaluate the 
waiting time of customer and the utilization rate of resource in the service system. 
REFERENCES 
[1]    A. Allahverdi and H. M. Soroush: “The significance of reducing setup times/setup costs”, European Journal of Operational 
Research, Vol. 187, pp. 978–984, 2008. 
[2] A. Allahverdi, J. N. D. Gupta and T. Aldowaisan: “A review of scheduling research involving setup considerations”, Omega, 
Vol. 27, pp. 219-239, 1999. 
[3]   C. C. Chern and Y. L. Liu: “Family-based scheduling rules of a sequence-dependent wafer fabrication system”, IEEE 
Transactions on Semiconductor Manufacturing, Vol. 16, pp. 15-25, 2003. 
[4] G. M. E. Vieira, J. W. Herrmann and E. Lin: “Analytical models to predict the performance of a single machine system under 
periodic and event-driven rescheduling strategies”, International Journal of Production Research, Vo. 38, pp. 1899-1915, 
2000. 
[5] G. M. E. Vieira, J. W. Herrmann and E. Lin: “Predicting the performance of rescheduling strategies for parallel machine 
systems”, Journal of Manufacturing Systems, Vol. 19, pp. 256-266, 2000. 
[6] H. Missbauer: “Order release and sequence-dependent setup times”, International Journal of Production Economics, Vol. 
49, pp. 131-143, 1997. 
[7]    D. Gross and C. M. Harris, Fundamentals of Queueing Theory, 3rd ed., John Wiley, 1998. 
[8]    W. C. Chan, Performance Analysis of Telecommunications and Local Area Networks, Kluwer Academic Publishers, 2002. 
Table 1: Results of the accuracy of the probabilistic model 
a 1.00 0.99 0.98 0.97 0.96 0.95 0.90 0.85 0.80 0.75 
Total arrival rate 0.0100 0.0099 0.0098 0.0097 0.0096 0.0095 0.0090 0.0085 0.0080 0.0075
RT (hrs) 5 6 7 8 9 12 24 24 24 24 
AESetups 2.2437 2.3939 2.488 2.6911 2.7291 2.9624 3.7782 3.7568 3.7067 3.5907
AEPSetup time (%) 9.4913 8.5502 8.0629 7.3819 7.0699 6.1416 4.4717 4.4538 4.5323 4.6834
AEPService time (%) 9.5645 8.5861 8.1187 7.4417 7.1064 6.1943 4.4841 4.4931 4.5765 4.7311
AEPUtilization (%) 4.5890 4.1743 4.5240 4.5211 4.6935 4.4544 4.2503 4.6411 5.0139 5.3395
Proposed model 4.4387 7.3132 2.3884 4.1641 7.6381 9.1662 5.2021 4.5883 6.3975 9.0673AEPWaiting time 
(%) Equation (11) 44.5687 43.0746 47.7621 49.8376 50.2306 51.0305 47.0628 42.5439 39.9865 38.5204
7.5 8 8.5 9 9.5 10
x 10-3
7.5
8
8.5
9
9.5
10
x 10-3
Given total arrival rate
To
ta
l a
rri
va
l r
at
e
The givn total arrival rate
Total arrival rate at RT=4hrs
Total arrival rate at RT=8hrs
Total arrival rate at RT=12hrs
Total arrival rate at RT=16hrs
Total arrival rate at RT=20hrs
Total arrival rate at RT=24hrs
Mean total arrival rate
 
Figure 1: The given total arrival rate and the total arrival rate 
by the simulation model 
0
5
10
15
20
7
8
9
10
x 10-3
0
200
400
600
800
Run timeTotal arrival rate  
Figure 2: Surface plot of the expected total number of setups 
for various run times and total arrival rates 
