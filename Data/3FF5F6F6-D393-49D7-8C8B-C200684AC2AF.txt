 
中 文 摘 要 ： 雲端運算的優勢主要利用虛擬化技術處理資料與運算來有效
節省建構與維護成本。現今已有許多的應用以雲端運算為平
台在開發，雲端運算的發展不僅使得資訊的取得更加方便及
快速，也推動了數位商品的發展。隨著消費意識漸趨成熟，
消費者把目光轉移到在選購網路上的數位商品上的隱私保
護、付費選擇、安全性、可回復性、匿名性、公正性、有效
率性、可驗證性。但透過網路存取的雲端服務充滿著各類安
全問題，若沒有適當之安全防護與管理機制，這些服務將受
到嚴重之抑制與損失。目前網際網路上已知有許多前端使用
者無法察覺的攻擊，諸如：DNS Cache 攻擊與 Router 攻擊
等。若無適當的安全防護機制，使用者端點將無任何的安
全。而相關雲端計算的安全防護機制若沒有完善，雲端服務
未來發展將受到嚴重的挑戰。 
   為了讓雲端計算環境之安全機制更加完善，第一年我們設
計與實作雲內安全與隱私保護加值服務。我們所設計的隱私
保護加值服務包括數位商品交易服務、數位商品交換服務
等。由於雲端計算的興起漸漸的也促成數位商品的發展，本
計畫將讓買家在雲內可以透過關鍵字搜尋來找到賣家存放在
雲內符合相對應關鍵字的數位商品並解決買家可能在雲內沒
有帳戶的認證問題。 
第二年我們設計跨雲認證及端點間安全防護之機制。在跨雲
認證方面，由於雲端計算的興起，公有雲與私有雲紛紛出
現。但目前各個雲之間或許有互相引用，但每個使用者對任
何雲都必須申請一個帳號，因此針對帳號的管理也越來越困
難。本計畫設計單一簽入系統來使用各個雲提供的服務以降
低帳號管理複雜性且將設計代理認證機制來加強我們的跨雲
認證付費技術。另外目前雲端運算大部分安全研究都著重於
雲內及雲和端點間的安全，而端點方面的防護機制卻較少被
研究。另外端點之金鑰的管理 
及個人資料保護也需有方便與容易使用的安全防護機制。我
們也處理低成本與容易使用的端點間安全防護的機制設計與
實作，達成整體雲內及雲外及端點的安全整合。 
由我們所提出的計劃，我們在雲端運算環境對隱私保護加值
服務、跨雲認證及端點間安全防護之安全機制，提供一系列
最佳的解決方案。參與的研究生也學習到雲端運算之關鍵資
訊安全技術，提升學生就業競爭力或繼續深造的潛力。 
中文關鍵詞： 雲端計算，隱私保護，安全服務，代理付費，跨雲認證，端
點安全 
英 文 摘 要 ： The major benefit of cloud computing is reducing the 
constructing and maintaining cost by the IT 
clouds and security mechanisms between clients in 
cloud computing environments. Also, all graduate 
students have learned and designed the key 
technologies for information security in cloud 
computing. 
英文關鍵詞： cloud computing, privacy protection, security 
service, delegation payment, AAA between clouds, 
client security 
 
 2
45, 50, 51, 52, 53]。 
另外, 我們也對跨雲認證及兩端點間安全防護研究。在跨雲認證方面，由於雲端的興起，
不僅公家單位在創造雲，像一些企業本身也設立了私有雲供公司內部使用，更不用說本
身就已經是提供雲服務的公司了。但目前各個雲之間或許有互相引用，但每個使用者不
管到哪朵雲卻必須申請一個屬於這個雲的帳號，因此針對帳號的管理也越來越困難。在
第二年的計畫中，本計畫將設計跨雲間的認證機制，本計畫想透過單一帳號來使用各個
雲端服務來減少帳號的管理且使用代理認證技術 [24, 25, 27, 45, 46, 52] 來認證使用
者，並利用橢圓曲線密碼系統 [20, 22, 23, 31, 49] 來達到高安全性及低成本。另外隨者
硬體的快速發展，智慧型手機的功能也日漸強大，而軟體開發者也不停針對特定手機開
發適合在手機上操作的應用軟體，展現手機上各式各樣的功能。現在手機已不僅僅只是
一個通話的工具，以往一些須在電腦上才能完成的工作，如網頁瀏覽、電子郵件收送、
連結社群網站、文件閱讀及工作行程安排等事項，已能透過智慧型手機輕鬆完成。現在
使用者可在手機上瀏覽各入口網站，也可以透過電子郵件收發郵件，甚至連上 Google 
Maps 查詢地圖。最近因智慧型裝置市場的蓬勃發展，使用者對於智慧型手機安全防護
的需求也逐漸增加。目前已知有許多前端使用者無法察覺的攻擊, 諸如: DNS Cache 攻
擊與 Router 攻擊等。隨著雲端運算的發展，端點的安全防護將越來越重要，本計劃也
設計智慧型手機上兩端點間之安全防護機制。 
 
三、文獻探討  
    
  隨著雲端的平台慢慢成熟，以商家的觀點來看，商家透過雲端平台進行交易，不僅
大大的降低了實體店面的成本、節省了大量的人力、販賣商品變的多元，除此之外最重
要的是販賣的對象變得無國界，跳脫以往實體店面的地域性，甚至減輕了許多用戶端的
負擔，也因此各式數位商品也漸漸的推出。使用者在網路上瀏覽數位商品、購買數位商
品、進行付費、存取商品。 
    以消費者的觀點來看，在網路上購買數位商品，不僅更容易比價，數位商品的選擇
變多，在尋找商品所花費的時間上也大大的減少，因此可以降低相關成本。而隨著消費
意識漸趨成熟，消費者把目光轉移到在選購網路上的數位商品上的隱私保護、付費選
擇、安全性  (Security)、可回復性  (Recoverability)、匿名性  (Anonymity)、公正性 
(Fairness)、有效率性 (Efficiency)、可驗證性 [2, 12, 16, 18, 30, 33, 34, 36, 37, 40]。 
另一方面，隨著可上網之可攜式行動裝置的盛行，近期行動裝置使用率明顯快速成
長，除了筆記型電腦外，現在智慧型手機、平板電腦…等也漸漸普及，IDC 預估今年底
行動裝置的出貨量將成長 55%，Gartner 亦指出，屆時將有 12 億人口運用行動電話漫遊
網路，網路變得無所不在，其更促成了雲端服務的需求。而行動應用程式商店之快速發
展，Gartner 預估，2010 年全球消費者在行動應用程式商店上消費的金額將高達 62 億
美元。 
智慧型手機市場的快速成長，使得網絡犯罪工具在過去幾年來卻越來越受到網路罪
犯的喜愛。目前網際網路上已知有許多前端使用者無法察覺的攻擊, 諸如: DNS Cache 
攻擊與 Router 攻擊等。若無配合相關的認證機制，讓使用者無限制的上網則使用者端
點將無任何的安全。據報導台北為全世界殭屍網路密度最高的地區，相關雲端計算的安
全防護機制若沒有完善的措施，雲端服務發展未來將受到嚴重的挑戰。 
  
四、研究方法 
本研究在第一年將著重在雲內相關安全與數位商品的交易與隱私保護安全機制。我
們將分為協定設計、與實作兩大部分來大略描述本計劃所提出雲端運算安全交易與隱私
 4
1. 使用者 (user)： 雲端服務的使用者。 
2. 拜訪的雲伺服器 (Visited Location Register, VLR)：提供服務的雲伺服器，此伺服器
沒有使用者的註冊資料。 
3. 註冊的雲伺服器 (Home Location Register, HLR): 使用者註冊的雲伺服器，對沒有在
此註冊的使用者而言，功能同於拜訪的雲伺服器。 
 
    由於雲內相對於雲外而言，其控管相對嚴格，並且我們在第一年的服務設計上，已
具備雲內的付費與隱私和安全交換機制，因此我們將接續第一年的服務和第二年的跨雲
認證基礎上，強調兩端點間的隱私及安全保護機制，設計與實作出適用於此次計畫所提
出的加值服務所涵蓋的兩端點間安全和隱私保護機制。對於大多數使用者而言，目前可
實行線上作業的端點選擇主要來源於一般電腦和智慧型手機。在一般電腦方面，隨著網
際網路指數性的進步下，人類對於線上的攻防技術也越來越多樣，使得現今大多數人的
電腦上均存在著各式各樣的漏洞以及各種資料竊取程式，有鑑於此，我們在兩端點安全
設計上，主要致力達成目標在於：對金鑰的控管、端點內的資訊防護、買方的身分隱私
以及兩端點藉由雲伺服器所達成的安全傳輸，其中包含傳輸資料的機密性 
(Confidentiality)、正確性 (Integrity) 和鑑別性 (Authentication)。 
    此外，我們也設計解決目前智慧型手機所存在的普遍性安全問題。包含手機遺失而
引起手機上個人重要資訊洩漏因而造成相對的安全問題等，另外我們也將探討智慧型手
機上網交易以及與社群網站之間的交流行為所可能發生的安全與隱私問題，並設計出能
在行動裝置上預防詐欺、偽造，以及使用者完整身分匿名與欺騙者辨識之功能。  
    在端點安全防護的達成上，如前所述，主要分為一般電腦和智慧型手機，在電腦端
點的應用上，考慮到一般電腦具備較高的處理能力，因此我們初步設計安全機制和提供
兩端點隱私保護，以兩端點雙方內的金鑰利用公開金鑰基礎建設如 RSA [33] 等非對稱
加密方法保護為基礎，進行後續相關交易行為和金鑰控管。 
在智慧型手機端點的應用上，因考慮於目前智慧型手機裝置之中央處理系統與記憶
體內存量大小還尚未能進行快速運算，若欲提高智慧型手機整體的快速運算，則會快數
消耗電量，且近年來為了確保 RSA 的安全，已經持續增加金鑰長度，而這也加重了採
用 RSA 的負擔。本計劃主要構想是盡可能降低行動裝置端上的運算量，將較大量之運
算交由雲伺服器端以進行運算，相較於 RSA，橢圓曲線密碼學  (Elliptic Curve 
Cryptography，ECC) 需要較少的運算時間，且只需要少量位元就可達到等同或更高於
RSA 的安全性，也因而能降低處理的負擔，因此本計劃之智慧型手機安全方面，擬採用
橢圓曲線密碼學為基礎，進行後續相關交易行為和金鑰控管。 
以下我們將會說明本計畫中所預計提出來的兩端點間安全防護機制。在此機制我們
以一般兩端點交易機制為範例來說明。此範例中，系統架構中將預計包含了三個角色：
賣方(The seller)、買方(The buyer)、雲伺服器(The cloud server)。為利於使用者使用，我
們將提供端點控管平台。對賣方而言，主要透過此平台進行資料表格的加密，包含各項
商品之金鑰對及商品，並於上傳至雲伺服器時，利用賣方私鑰解密並透過 SSL 加密通
道使用。針對買方而言，也是透過端點控管平台對買方所須產生之資料表進行加密，並
於使用時利用該平台解密使用。和賣方的不同點在於，買方可透過平台選擇匿名登入或
匿名購買與否。以下將為上述三個角色做初步性之描述： 
1. 賣方(The seller): 屬於端點之一部分，包含電腦及智慧型手機，為雲伺服器之租用者，
擁有上傳及下載之權限。 
2. 買方(The buyer): 屬於端點之一部分，包含電腦及智慧型手機，為雲伺服器之使用
者，僅有下載之權限。 
 6
使用者基本資訊的維護。 
 
(二) 賣方準備階段： 
此階段主要對應第一年服務之賣方上傳商品服務，詳細步驟如下： 
 
步驟 1: 此部分主要為基本資訊的維護，於一般電腦端點 MT=RSA(Ts,PKp)，於智
慧型手機端點部份 MT=ECC(Ts,PKp)，另外考慮到因受限於智慧型手機行動裝置相對於
電腦端點較低的記憶體，賣家將數位商品皆儲存於手機裡的可能性較低，因此此平台將
只對賣家所產生的金鑰及金鑰表格進行加密，將大部份的運算盡可能的置於伺服器端而
非手機上，以減少對手機空間、效能的負擔，並於傳送連線使用 SSL 加密以確保資料
安全。 
 
步驟 2: 當賣方需使用保存之金鑰或商品時取出 Ts：PRs = RSA(MR,PRp)，Ts = 
RSA(MT,PRs) 。 
 
(三) 買方初始階段 
此階段主要對應第一年服務之買方商品搜尋服務。 
 
步驟 1、2: 同賣方準備階段之步驟 1 和 2，差別僅為 id=b。 
 
步驟 3: 此部分為達成前述之匿名性隱私功能，買方登入部分，須先利用平台註冊
re，並和雲伺服器取得該端點身分之 cer 存於平台內。 
 
步驟 4: 買方進行匿名登入時，僅需利用平台與雲伺服器之共通 seed，Nop=O(seed) 
即可進行登入。 
 
步 驟 5: 買 方 交 易 時 若 欲 使 用 匿 名 功 能 ， 須 產 生 匿 名 帳 號 ， 計 算
Non=sign(cer(Xr),H(re+time)) ， 最 後 於 雲 伺 服 器 該 產 品 之 賣 方 資 訊 儲 存
CT=RSA(PKs,time) 。 
 
（四）金鑰管理階段： 
雖然金鑰根據前兩階段已被保護，然而如金鑰的產生、權限、備份和擴充等問題，
對於賣方眾多的金鑰數量，仍存在著管理上的需求，因此針對此問題，透過賣方在雲上
的不可匿名性，我們初擬使用透過雲的存取來解決金鑰的備份和擴充，並利用端點控管
平台來進行權限設定。 
 
在一般電腦端點安全實作部分，考慮到目前一般電腦作業系統、智慧型手機作業作
系統及雲伺服器三方開發環境與相容性之所需密碼模組類別庫支援情形，一般電腦端初
擬使用 Java IDE 並搭配 Bouncy Castle Crypto APIs for Java 和 jPBC 所提供的各種密碼
元件來進行加解密的問題解決，並在賣方金鑰控管以及買賣雙方帳號之雲伺服器資料庫
的連線和處理使用 JDBC 來進行相關功能的達成；智慧型手機端則在 Android 平台下使
用，並使用與一般電腦相同之開發工具來完成隱私與安全防護機制之實作。 
目前一般電腦端在買賣雙方資料保護的加密選擇下，因該端點之加密目標僅為金鑰
和部分數位商品，故在此初擬利用 RSA 加密系統進行資料之加解密保護。在買方匿名
性功能部分，將計畫搭配第三方機構或自然人憑證來進行雜湊帳號的數位簽章，並且在
 8
Systems,” IEEE Computer, Vol. 30, No. 9, pp. 28–35, 1997. 
[3] J. Baek, R. Safiavi-Naini, and W. Susilo, “Public Key Encryption with Keyword Search 
Revisited,” Proceedings of the International Conference on Computational Science and 
Its Applications, Part I, LNCS 5072, 2008. 
[4] J. Beuchat, J. Detrey, N. Estibals, E. Okamoto, and F. Rodriguez-Henriquez, “Hardware 
Accelerator for the Tate Pairing in Characteristic Three Based on Karatsuba–Ofman 
Multipliers,” Proceeding of Workshop on Cryptographic Hardware and Embedded 
Systems, LNCS 5747, Springer, New York, pp. 225–239, 2009. 
[5] B. Boneh, G. D. Crescenzo, R. Ostrovsky, and G. Persiano, “Public Key Encryption with 
Keyword Search,” Proceedings of Eurocrypt, LNCS 3027, pp. 506-522, 2004. 
[6] R. Buyya, C. Yeo and S. Venugopal, “Market-Oriented Cloud Computing: Vision, Hype, 
and Reality for Delivering IT Services as Computing Utilities,” Department of 
Computer Science and Software Engineering, The University of Melbourne, Australia, 
2008. 
[7] D. Chaum, “Untraceable Electronic Mail, Return Addresses and Digital Pseudonyms,” 
Communications of the ACM, Vol. 24, No. 2, pp. 84-88, 1981. 
[8] L. Chen, and C. Kudla, “Identity Based Authenticated Key Agreement Protocols from 
Pairings,” CSFW, pp. 219-233, 16th IEEE Computer Security Foundations Workshop, 
2003. 
[9] X. Chen, F. Zhang, and S. Liu, “ID-based Restrictive Partially Blind Signatures and 
Applications,” Journal of Systems and Software, Vol. 80, pp. 164-171, 2007. 
[10] Y. J. Choie, E. Jeong, and E. Lee, “Efficient Identity-based Authenticated Key 
Agreement Protocol from Pairings,” Applied Mathematics and Computation, Vol. 162, 
Issue 1, pp. 179-188, 2005. 
[11] C. Costello, H. Hisil, C. Boyd, J. M. G. Nieto, and K. K. Wong, “Faster Pairings on 
Special Weierstrass Curves,” Proceeding of the Second International Conference on 
Pairing-based Cryptography, LNCS 5671, Springer, New York, pp. 89-101, 2009. 
[12] W. Diffie, and M. E. Hellman, “New Directions in Cryptography,” IEEE Transactions 
on Information Theory, Vol. 22, pp. 644-654, 1976. 
[13] J. Fan, F. Vercauteren, and I. Verbauwhede, “Faster Fp-arithmetic for Cryptographic 
Pairings on Barreto–Naehrig Curves,” Proceeding of the Workshop on Cryptographic 
Hardware and Embedded Systems, LNCS 5747, Springer, New York, pp. 240–253, 
2009. 
[14] D. Ferullo, “Legal implications of a digital environment,” Journal of Library 
Administration, Vol. 40, No. 1–2, pp 23–40, 2004. 
[15] H. Guo, Y. Mu, X. Zhang, and Z. Li, “Novel and Efficient Identity-Based Authenticated 
Key Agreement Protocols from Weil Pairings,” Springer-Verlag, Berlin Heidelberg, 
2009. 
[16] A. Harding, “SSL Virtual Private Networks,” Computers & Security, Vol. 22, Issue 5, 
pp. 416-420, July 2003. 
[17] S. Hodson, “What Is Cloud Computing,” http://www.winextra.com/2008/05/02/ 
what-is-cloud-computing, May 2008. 
[18] M. Hou, and Q. Xu, “Constructing Secure Two-Party Authenticated Key Agreement 
Protocol Based on Certificateless Public Key Encryption Scheme,” Proceedings of 4th 
International Conference on Computer Science & Education, 2009. 
[19] A. Joux, “The Weil and Tate Pairings as Building Blocks for Public Key 
Cryptosystems,” Proceedings of the 5th International Symposium on Algorithmic 
Number Theory, LNCS 2369, pp. 20–32, 2002. 
[20] A. Jurisic, and AJ. Menezes, Elliptic Curves and Cryptography, pp. 1–13, 1997. 
[21] D. Kammler, D. Zhang, P. Schwabe, H. Scharwaechter, M. Langenberg, D. Auras, G. 
 10
[44] S. Wang, Z. Cao, and F. Cao, “Efficient Identity-based Authenticated Key Agreement 
Protocol with PKG Forward Secrecy,” International Journal of Network Security, Vol. 7, 
No. 2, pp. 181-186, 2008. 
[45] H. Wang, “A Proxy Ring Signature Scheme with Revocable Anonymity from Bilinear 
Pairings,” International Conference on Multimedia Information Networking and 
Security, pp. 191-194, 2009. 
[46] R. C. Wang, W. S. Juang, C. L. Lei, “A Privacy and Delegation Enhanced User 
Authentication Protocol for Portable Communication Systems,” Taiwan Information 
Security Center (TWISC), NSC 98-2219-E-011-001, 2009. 
[47] S. Wang, Z. Cao, K. R. Choo, and L. Wang, “An Improved Identity-based Key 
Agreement Protocol and Its Security Proof,” Information Sciences, Vol. 179, Issue 3, pp. 
307-318, 2009. 
[48] W. A. Warr, Cloud Computing, Wendy Warr & Associates, 2009. 
[49] L. Washington, "Elliptic Curves: Number Theory and Cryptography", Chapman & 
Hall/CRC, 2003. 
[50] X. Xiangjun, and S. Hailiang, “Digital Signature Scheme Based on the Inverse Bilinear 
Pairing Operation Problem,” WASE International Conference on Information 
Engineering, pp. 225-228, 2009. 
[51] T. Yuen, and V. Wei, “Fast and Proven Secure Blind Identity-Based Signcryption from 
Pairings,” LNCS 3376, Springer, New York, pp. 254–271, 2005. 
[52] F. Zhang and K. Kim, “Efficient ID-Based Blind Signature and Proxy Signature from 
Bilinear Pairings,” LNCS 2727, Springer, New York, pp. 218-219, 2003. 
[53] Z. Zhao, “ID-Based Authenticated Blind Signature Scheme from Bilinear Pairings,” 
CISW, pp.725-728, 2007. 
[54] W. Juang, C. Fan and M. Chen, "Efficient Fair Content Exchange With Robust 
Watermark Ownership," International Journal of Innovative Computing, Information 
and Control, Vol. 7. No. 8, pp. 4653~4667, ICIC International press, Japan, August 
2011. 
[55] C. Fan, W. Juang and M. Chen, "P2P Fair Content Exchange with Ownership Transfer," 
International Journal of Innovative Computing, Information and Control, vol. 8. no. 6, 
June 2012, ICIC International press, Japan.  
[56] M. Chen, C. Fan, W. Juang and Y. Yeh, "An Efficient Electronic Cash Scheme With 
Multiple Banks Using Group Signature," International Journal of Innovative Computing, 
Information and Control, Vol. 8, No. 7, ICIC International press, Japan, July 2012. 
[57] 黃筱鈞, 莊文勝, “社交網站安全且有效率之用戶隱私保護機制,” 電子商務研究, 
Vol. 10, No. 3, pp. 257-268, NTPU Press, Taipei, Taiwan, August 2012.  
[58] J. Huang, W. Juang, C. Fan and H. Liaw, “Robust and Privacy Protection 
Authentication in Cloud Computing,” International Journal of Innovative Computing, 
Information and Control, Vol. 9, No. 11, pp. 4247-4261, ICIC International press, Japan, 
November 2013. 
[59] Y. Shu, W. Lu, J. Huang, H. Huang and W. Juang, "The Implementation of Secure and 
Efficient Digital Goods Trading Systems Using Bilinear Pairing," The 6th Joint 
Workshop on Information Security, Kaohsiung, Taiwan, October 5-6, 2011. 
[60] 黃政嘉, 莊文勝, "雲端運算環境下有效率且強固之隱私保護身份驗證機制," 第十
二屆產業資訊管理學術暨新興科技實務研討會, 台北, 台灣, November 2011.  
[61] 呂威廷, 莊文勝, "雲端運算環境下安全且有效率之三方動態會議金鑰協商機制," 
2011 資訊安全技術創新應用研討會, 台北, 台灣, December 2011. 
[62] 黃筱鈞, 莊文勝, "社交網站安全且有效率之用戶隱私保護機制," 第十五屆電子商
務學術研討會, 台北, 台灣, Feb. 2012.  
International Journal of Innovative
Computing, Information and Control ICIC International c©2012 ISSN 1349-4198
Volume 8, Number 6, June 2012 pp. 3875–3890
P2P FAIR CONTENT EXCHANGE WITH OWNERSHIP TRANSFER
Chun-I Fan1,∗, Wen-Shenq Juang2 and Ming-Te Chen1
1Department of Computer Science and Engineering
National Sun Yat-sen University
No. 70, Lienhai Road, Kaohsiung 80424, Taiwan
∗Corresponding author: cifan@faculty.nsysu.edu.tw; ecsemtchen@gmail.com
2Department of Information Management
National Kaohsiung First University of Science and Technology
No. 2, Jhuoyue Road, Nanzih, Kaohsiung 811, Taiwan
wsjuang@ccms.nkfust.edu.tw
Received February 2011; revised June 2011
Abstract. In recent years, due to the maturity of network and information technologies,
p2p (peer to peer) networks grow rapidly. Users (called peers) can upload or download
files such as digital contents to or from other peers in a p2p network. Usually, the
digital contents can contain the watermarks for ownership claim and protection. To
date, a lot of buyer-seller watermarking schemes were proposed, but none of them is
suitable for peers to exchange their digital contents in a p2p network. By the way, if
peers attempt to exchange their digital contents by using these schemes directly, none
of them can guarantee that the digital content exchange is efficient and secure between
peers. In addition, how to exchange the digital contents fairly in a p2p network is another
problem since a peer may not honestly forward her/his digital content to another peer.
On the other hand, due to the feature of p2p networks, there may be a free-rider situation
happening and it causes the unfair result in the content exchange process among peers.
In this paper, we propose an efficient and fair p2p digital content exchange scheme for
solving all the above problems. Our proposed scheme can exchange the watermarked
digital content securely and keep the exchanging process fair to each other.
Keywords: Digital right, Digital watermark, Secure fair content exchange, Mutual
authentication, P2P
1. Introduction. P2P (peer to peer) networks recently grow and are used rapidly due
to the maturity of network technologies. In a p2p network, there are lots of independent
servers (called super node) and personal computers (called peers). Some p2p servers also
can form a self-organized entity and serve as the server peers to build a p2p network with
many client peers.
In a p2p network, some peers play the role of the client peer and the others play the
role of the server peer. A client peer can connect to the server peer and the server peer
accepts this connection with the client peer after receiving this query and obtaining the
client peer information. If this client peer connects to the server peer successfully, it can
query the server peer about the information of the desired data including the IP addresses
of the peers which may contain the desired files, the desired files’ status, and so on. When
a client peer obtains this information from the server peer, it can ask the server peer to
redirect its connection to another client peer containing the desired data. Then a client
peer can negotiate with other peers to exchange their digital content after authenticating
with each other successfully. Although, there were some authentication schemes proposed
3875
P2P FAIR CONTENT EXCHANGE WITH OWNERSHIP TRANSFER 3877
viruses or the malicious codes inside after exchanging their digital contents with each
other. It will also cause them the unfair situation at this time.
In [9], their scheme focuses on the payment mechanism for peers after they purchased
the digital contents from the content provider peer in a p2p network. The content provider
peer and the original content creator peer can get their corresponding commission and
payment from the bank peer, respectively. However, it is unreasonable that any powerful
peer can be upgraded to be a bank peer when the current bank peer malfunctions now.
However, this new bank peer may not be the trusted by the other peers without doing
any authentication approach with the other client peers. By the way, how it maintains
all transactions of the previous bank peers without knowing the information about each
client peer is another problem. On the other hand, their scheme does not guarantee the
payment transaction fairly. If the current bank peer fails when the client peer is paying
for its downloaded digital contents, then the new bank peer may not have the payment
record of this client peer and this client peer may be asked to pay for the downloaded
digital contents again. In this situation, the client peer cannot be able to ask the dispute
resolution without the help of the trusted party in their scheme. Moreover, in this scheme,
the client peer cannot avoid the unfair situation that it received the fake content from the
content provider peer and free-rider problem.
In [30], they proposed a fair exchange p2p file market scheme with their payment
mechanism. In their scheme, each peer can share its files to another peer and she/he has
to pay the content provider peer before downloading the intended digital contents. Their
approach adopts the certificate and the digital signature as the payment token. In the
exchanging protocol of their proposed scheme, the content provider peer has to forward
the decryption key K to the downloading peer without any encryption after confirming
the payment with the bank peer. If there exists a malicious attacker between the content
provider and the downloading peer, she/he may intercept this key K and then can use
it to decrypt all the intercepted ciphertexts in the same transaction. Moreover, in this
scheme, they also suffer the unfair situation when the client peer received the fake content
from the malicious content provider peers and the free-rider problem.
In order to cope with all the above problems, we propose a novel efficient and secure fair
p2p digital exchange scheme. Our proposed scheme provides efficient and secure digital
content exchange and keeps the fair property in a p2p network.
3. Preliminaries.
3.1. Bilinear pairing. Let G1 be a cyclic additive group of a prime order q and G2 be a
cyclic multiplicative group of the same order q. A bilinear pairing is a map e : G1×G1 −→
G2 which satisfies the following properties:
1. Bilinearity: e(aP, bQ) = e(P,Q)ab for all P,Q ∈ G1 and a, b ∈ Z∗q .
2. Non-degeneracy: There exists P ∈ G1 such that e(P, P ) 6= 1.
3. Computability: There is an efficient algorithm to compute e(P,Q) for all P,Q ∈ G1.
3.2. Security assumptions. First, we introduce the security assumptions as follows:
Assumption 1 k-CAA assumption. We say that the k-CAA Assumption (for G1)
holds if for any probabilistic polynomial time adversary E the probability that E on
input
(
P, sP, h1, h2, . . . , hk ∈ Z∗q , 1s+h1P, 1s+h2P, . . . , 1s+hkP
)
outputs Q1 for some h ∈ Z∗q
such that Q1 =
1
s+h
P is negligible. The probability of success of E is taken over the
uniform random choice of h ∈ Z∗q and the coin tosses of E.
Assumption 2 k-mBDH assumption [44]. We say that the k-BDHI Assumption
(for G2) holds if for any probabilistic polynomial time adversary E the probability that E
P2P FAIR CONTENT EXCHANGE WITH OWNERSHIP TRANSFER 3879
3. After setting these functions, KGC picks up a secret value s ∈ Z∗q as the system
private key and it also computes Ppub = sP as the system public key. On the other
hand, KGC produces the secret key of each parties. KGC generates qA = h(IDA) and
SA =
1
s+qA
P for Alice. Then it computes qB = h(IDB), SB =
1
s+qB
P , qS = h(IDS)
and SS =
1
s+qS
P for Bob and the server, respectively. After generating these secret
keys, it forwards them to Alice and Bob by a secure channel.
KGC publishes the system parameter param = (l, t, e, q, g,G1, G2, P, Ppub, h,H1, H2) and
keeps the master-key s in secret.
4.3. The registration and key-agreement phase. In this phase, we assume that
there exist three parties Alice (A for short), Bob (B for short) and the server (S for short)
in a p2p network. The KGC generates the server’s key pairs and publishes the system
parameter param = (l, t, e, q, g, G1, G2, P, Ppub, h,H1, H2). Then A and B do the followings,
respectively.
1. First, A generates the exchange digital content in the following.
1.1 Prepare the exchange description ExcA on the intended digital content mA.
1.2 Compute the hash value tA = H1(ExcA||IDA||NA) by using H1 with a fresh
nonce NA and two random numbers a, b, l ∈ Z∗q .
1.3 Produce the hash value qs = h(IDS) and the public key QS = Ppub + qsP . Then
she computes GA = abQS, tu = e(abP, P ) = g
ab and Gl = l ∗ P .
1.4 Compute SA = (ab + tA)
1
s+qA
P and forward (ExcA, NA, IDA, SA, QS, GA, tA, tu,
Gl) to S.
2. On the other hand, B also generates his exchange digital content as the same process
as A does.
2.1 Prepare his exchange description ExcB on his exchange object mB.
2.2 Compute the hash value tB = H1(ExcB||IDB||NB) by using H1 with a nonce
NB and two random numbers c, d, n ∈ Z∗q .
2.3 Produce the hash value qs = h(IDS) and the public key QS = Ppub + qsP . Then
he computes GB = cdQS, tr = e(cdP, P ) = g
cd and Gn = n ∗ P .
2.4 Compute SB = (cd+ tB)
1
s+qB
P and forward (ExcB, NB, IDB, SB, QS, GB, tB, tr,
Gn) to S.
3. After receiving these tuples from A and B, S does the following.
3.1 Compute qs = h(IDS) and QS = Ppub + qsP . After generating these pa-
rameters, it computes two hash values tA = H1(ExcA||IDA||NA) and tB =
H1(ExcB||IDB||NB) and the following equations to verify GA, SA, GB and SB.
(i) e(GA, SS)
?
= e
(
abQS,
1
s+qs
P
)
= e(abP, P ) = tu = g
ab.
(ii) e(GB, SS)
?
= e
(
cdQS,
1
s+qs
P
)
= e(cdP, P ) = tr = g
cd.
(iii) e(SA, Ppub + qAP )
?
= e
(
(ab+ tA)
1
s+qA
P, sP + qAP
)
= e((ab + tA)P, P ) =
gab+tA = tug
tA .
(iv) e(SB, Ppub + qBP )
?
= e
(
(cd+ tB)
1
s+qB
P, sP + qBP
)
= e((cd + tB)P, P ) =
gcd+tB = trg
tB .
3.2 After verifying these equations, it selects e, f ∈R Z∗q and computes tv = e ∗ P
and t′v = f ∗ P and computes z = H1(tu||tv||NA + 1||NS||e ∗ Gl) and z′ =
H1(tr||t′v||NB + 1||N ′S||f ∗ Gn). S forwards (z, tv, NS) and (z′, t′v, N ′S) to A and
B, respectively.
P2P FAIR CONTENT EXCHANGE WITH OWNERSHIP TRANSFER 3881
6.2.3 Generate the exchange message C1 = (hA, IDA, N
′
A, ExcA).
7. After generating the above tuples, A forwards (N ′A, ExcA, τA, hA, C1) to B. When B
receives this tuple, he checks that If hA = H1(N
′
A||τA||IDA||ExcA) is valid or not. If
yes, then he computes his response in the following.
7.1 Compute the authentication token TA,B = h(τA||τB||τb ∗ τA) and the hash value
hB = H1(N
′
A+1||N ′B||IDA||IDB||ExcA||ExcB||τB), where τB = τb ∗P , τb ∈R Z∗q .
7.2 Generate the temporary key k4 = H1(TA,B) and produce the ciphertext C2 =
Ek4(hB, IDB, N
′
B, ExcB).
After generating the above tuples, B forwards (N ′B, τB, C2) to A. When receiving
this tuple from B, A decrypts C2 and checks N
′
B as the same process as B does. If
it is valid, A can make sure that the current communicating party is B. Then A
computes its response to B in the following.
7.3 Compute the hash value h′A = H1(N
′
B + 1||ExcB||TA,B).
7.4 Compute the session key sskA,B = H2(τA||τB||τa ∗ τb ∗ P ).
After generating the above tuples, she forwards h′A back to B. When B receives h
′
A, he
can verify it with the shared token TA,B and N
′
B. If they are valid, B also computes
its session key sskA,B = H2(τA||τB||τb ∗ τA).
8. After preparing its session key sskA,B, A generates the signature S
′
A1
=
t′A1
s+qA
P and
the hash value t′A1 = H1(tA||SA1 ||R7), where R′7 = r′7∗P and r′7 ∈R Z∗q . Then she gen-
erates the ciphertext EsskA,B(SA1 , tA1 , S
′
A1
, t′A1 , ExcA, ExcB, h(W
′
B), h(m
′
A), R
′
6, R
′
7)
and sends it back to B.
9. B decrypts the ciphertext after he has gotten the ciphertext EsskA,B(SA1 , tA1 , S
′
A1
, t′A1 ,
ExcA, ExcB, h(W
′
B), h(m
′
A), R
′
6, R
′
7). He produces the session key sskA,B and de-
crypts EsskA,B(SA1 , tA1 , S
′
A1
, t′A1 , ExcA, ExcB, h(W
′
B), h(m
′
A), R
′
6, R
′
7).
9.1 He performs the checking of the signatures (SA1 , S
′
A1
) and the hash values (tA1 ,
t′A1) to see whether they are valid or not.
9.2 If yes, then he producesH1(ExcA||IDA||h(m′A)||h(W ′B||R′6)) andH1(tA1||SA1 ||R′7)
and compares them with tA1 and t
′
A1
, respectively. If they are valid, B believes
that ExcA was confirmed by the server S. Then B computes the ciphertext
EsskA,B(SB1 , ExcB, tB1 , h(W
′
A), h(m
′
B),m
′
B, R
′
5) and forwards it to A.
10. After receiving it, A does the followings.
10.1 A decrypts EsskA,B(SB1 , ExcB, tB1 , h(W
′
A), h(m
′
B),m
′
B) and performs the check-
ing as the same process as B does.
10.2 If they are valid, A forwards EsskA,B(m
′
A) to B. If B cannot decrypt it or it can
not pass the verification, then B forwards EsskB,S(SA1 , tA1 , S
′
A1
, t′A1 , ExcA, ExcB,
h(W ′B), h(m
′
A), R
′
6, R
′
7) to S and could ask S for a dispute resolution.
11. After A and B obtain the desired digital contents, respectively, A and B can perform
the following watermarking embedding operations, respectively.
11.1 A decrypts m′B with her random value r1, i.e., m
′
B ∗H1(i ∗ R′5) = mB ⊕ k1 and
preparesW ′A = WA⊕k1. Then she inputsmB⊕k1 andW ′A into her watermarking
algorithm under the ⊗ operation and obtains the final result M ′A = mB ⊗W ′A.
11.2 B also performs the same action as A does. He also can produce his own digital
content M ′B = mA ⊗W ′B.
4.5. The resolution phase. In this phase, B forwards A’s signature to the server S and
asks S for the dispute resolution.
1. Firstly, B prepares the partial signature EsskB,S(SA1 ,tA1 , S
′
A1
,t′A1 , ExcA, ExcB, h(W
′
B),
h(m′A), R
′
6, R
′
7) and forwards it to S.
P2P FAIR CONTENT EXCHANGE WITH OWNERSHIP TRANSFER 3883
Table 1. Properties comparisons
P1 P2 P3 P4 P5 P6 P7 P8
Ours Y es Y es Y es Y es Medium Optional Y es Y es
[9] No No No No N/A N/A No Y es
[30] No No No No High N/A Y es Y es
P1: Content Exchange; P2: Authentication and Key Agreement
P3: Without Watermark Certificate Authority; P4: Watermark Ownership
P5: Computation Cost (Low: ≤ 500M | Medium: 1000M ≥ and ≥ 500M | High: > 1000M)
P6: Optional(Robust or Fragile Watermark)/Robust Watermark
P7: Fairness; P8: P2P Environment
Y es: Satisfied; No: Not Satisfied; N/A: Not Provided
Table 2. Efficiency comparisons
Registration and Content Resolution
Total Costs Approximation
Key-agreement Phase Exchange Phase Phase
Ours
11H+3ECA
35H+1ECA 46H+4ECA
+4ECM+4ECP
+9ECM+1ECP 3SymEnc +13ECM+ 834M+6⊕+2⊗
+17SymEnc +1⊗ 20SymEnc
+6⊕+2⊗ +5ECP+6⊕+2⊗
[30] N/A 7Exp+2H N/A 7Exp+2H 1881M
Exp: Modular Exponential Operation; M : Modular Multiplication Operation
SymEnc/Dec: Symmetric Encryption or Decryption over An Elliptic Curve
ECP : Bilinear Pairing Operation over An Elliptic Curve; ECM : Multiplication over An Elliptic Curve
ECA: Addition over An Elliptic Curve; H: Hash Operation
⊗: Watermark Embedding Operation; ⊕: Partial Encryption Operation; N/A: Not Provided
and assume that PubEncec/PubDecec is the public key encryption in an elliptic curve,
respectively.
In [30], we find that their scheme does not have the formal security analysis. Their
scheme also assumes that each peer has to apply a “capital certificate” before performing
their fair exchange protocol. It also needs a Certificate Authority (CA) to manage the
capital certificate list as the PKI infrastructure in the p2p network. We think that it
is unsuitable and unreasonable for a p2p network since most of p2p networks work in
the anonymous status without deploying and checking the certificate of each peer. By
the way, the computation cost of their scheme is about 7Exp + 2H ∼= 1881M . In our
scheme, the cost is about 834M+6⊕+2⊗. Table 1 and Table 2 are the functionalities and
performance comparisons.
7. Conclusions. In this paper, we offer the lightweight authentication method to provide
fair and secure digital content exchange and avoid the free-rider problem in a p2p network.
In our proposed scheme, the client peer also can authenticate the server peer in a p2p
network, exchange her/his digital content fairly with the other peer and also provide many
nice properties.
Acknowledgment. This work was partially supported by the National Science Coun-
cil of the Taiwan under grants NSC 100-2221-E-327-019-MY2, NSC 100-2219-E-110-003,
NSC 100-2219-E-110-005 and “Aim for the Top University Plan” of the National Sun
Yat-sen University and Ministry of Education, Taiwan.
P2P FAIR CONTENT EXCHANGE WITH OWNERSHIP TRANSFER 3885
[28] M. Deng and B. Preneel, On secure and anonymous buyer-seller watermarking protocol, Proc. of
ICIW, pp.524-529, 2008.
[29] M. J. Lee, K. S. Kim and H. K. Lee, Forensic tracking watermarking against in-theater piracy, Proc.
of the 11th International Workshop of Information Hiding 2009, LNCS, vol.5806, pp.117-131, 2009.
[30] M. Zuo and J. Li, Constructing fair-exchange P2P file market, Proc. of the Grid and Cooperative
Computing, LNCS, vol.3795, pp.941-946, 2005.
[31] NIST FIPS PUB 186-2, Digital Signature Standard, National Institute of Standards and Technology,
U. S. Department of Commerce, 2001.
[32] N. Koblitz, A. Menezes and S. Vanstone, The state of elliptic curve cryptography, Designs, Codes
and Cryptography, vol.19, pp.173-193, 2000.
[33] N. Hopper, D. Molnar and D. Wagner, From weak to strong watermarking, Proc. of Theory of
Cryptography, LNCS, vol.4392, pp.362-382, 2007.
[34] N. W. Lo and K.-H. Yeh, A novel authentication scheme for mobile commerce transactions, In-
ternational Journal of Innovative Computing, Information and Control, vol.6, no.7, pp.3093-3103,
2010.
[35] N. W. Lo and K.-H. Yeh, A practical three-party authenticated key exchange protocol, International
Journal of Innovative Computing, Information and Control, vol.6, no.6, pp.2469-2483, 2010.
[36] P. Gilbert, Forensic analysis of digital image tampering, Proc. of the IFIP International Federation
for Information Processing, pp.259-270, 2006.
[37] Q. Huang, G. Yang, D. S. Wong and W. Susilo, Ambiguous optimistic fair exchange, Proc. of
Advances in Cryptology-ASIACRYPT 2008, LNCS, vol.5350, pp.74-89, 2008.
[38] R. Aringhieri and D. Bonomi, A simulation model for trust and reputation system evaluation in a
P2P network, Proc. of Computational Intelligence, Theory and Applications, pp.169-180, 2006.
[39] R.-C. Wang, W.-S. Juang and C.-L. Lei, A robust authentication scheme with user anonymity for
wireless environments, International Journal of Innovative Computing, Information and Control,
vol.5, no.4, pp.1069-1080, 2009.
[40] R. Tso, X. Yi and X. Huang, Efficient and short certificateless signature, Proc. of CANS 2008,
LNCS, vol.5339, pp.64-79, 2008.
[41] S. Han, M. Fujiyoshi and H. Kiya, An efficient reversible image authentication method, IEICE Trans.
Fundamentals, vol.E91-A, pp.1907-1914, 2008.
[42] S. Hohenberger, Advances in Signatures, Encryption, and E-Cash from Bilinear Groups, Ph.D. The-
sis, Massachusetts Institute of Technology, 2006.
[43] S. Siersdorfer and S. Sizov, Automatic document organization in a P2P environment, European
Conference on IR Research, LNCS, vol.3936, pp.265-276, 2006.
[44] S. Mitsunari, R. Sakai and M. Kasahara, A new traitor tracing, IEICE Trans. Fundamentals, vol.E85-
A, no.2, pp.481-484, 2002.
[45] T.-S. Wu, H.-Y. Lin, C.-L. Hsu and K.-Y. Chang, Efficient verifier-based authenticated key agreement
protocol for three parties, International Journal of Innovative Computing, Information and Control,
vol.6, no.2, pp.755-762, 2010.
[46] V. D. V. Michiel, N. L. Aweke and K. Ton, Electronic content delivery and forensic watermarking,
Multimedia Systems, vol.11, no.2, pp.174-184, 2005.
[47] V. V. Das, Buyer-seller watermarking protocol for an anonymous network transaction, Proc. of
ICETET, pp.807-812, 2008.
[48] W. Diffie and M. Hellman, New directions in cryptography, IEEE Transactions on Information
Theory, vol.IT-22, no.6, pp.644-654, 1976.
[49] W. S. Jaung, Efficient three-party key exchange using smart cards, IEEE Transactions on Consumer
Electronics, vol.50, no.2, pp.619-624, 2004.
[50] W.-S. Juang, RO-cash: An efficient and practical recoverable pre-paid oﬄine E-cash scheme using
bilinear pairings, Journal of Systems and Software, vol.83, no.4, pp.638-645, 2010.
[51] W.-S. Juang, C.-L. Lei, H.-T. Liaw and W.-K. Nien, Robust and efficient three-party user authen-
tication and key agreement using bilinear pairings, International Journal of Innovative Computing,
Information and Control, vol.6, no.2, pp.763-772, 2010.
[52] Y. Hu, A watermarking protocol for privacy tracing, Proc. of ISECS, pp.882-885, 2008.
[53] Z. Li, J. Higgins and M. Clement, Performance of finite field arithmetic in an elliptic curve cryp-
tosystem, Proc. of the 9th IEEE International Symposium on Modeling, Analysis, and Simulation of
Computer and Telecommunications Systems, pp.249-256, 2001.
P2P FAIR CONTENT EXCHANGE WITH OWNERSHIP TRANSFER 3887
and C ′ is prefixed by:
(τ1, (m1, a
′
1), (µ1, α1)), (τ3, (m2, a
′
2), (µ2, α2)), . . . , (τ2ρ−3, (mρ−1, a
′
ρ−1), (µρ−1, αρ−1)).
2. We say that C is a matching conversation to C ′ if there exist τ0 < τ1 < . . . < τR and
a1 = a
′
1, . . . , aρ = a
′
ρ and α1 = α
′
1, . . . , αρ−1 = α
′
ρ−1 such that C
′ is prefixed by:
(τ1, (m1, a
′
1), (µ1, α1)), (τ3, (m2, a
′
2), (µ2, α2)), . . . , (τ2ρ−3, (mρ−1, a
′
ρ−1),
(µρ−1, αρ−1), (τ2ρ−1, (mρ, a′ρ), ∗)
and C is prefixed by:
(τ0, λ, (m1, a1)), (τ2, (µ1, α
′
1), (m2, a2)), . . . , (τ2ρ−2, (µρ−1, α
′
ρ−1), (mρ, aρ)).
If C is a matching conversation including appendices to C ′ and C ′ is a matching
conversation including appendices to C, Πsi,j and Π
t
j,i are said to have had matching
conversations including appendices.
Definition A.3. (No-matchingE(k)) Let No-matchingE(k) denote the event that, there
exist (i, j, s) such that an oracle Πsi,j accepted but there is no oracle Π
t
j,i, which has had a
matching conversation to Πsi,j under the presence of a polynomial time attacker E, with
i, j /∈ I (where I denotes the set of the parties corrupted by E) and s, t ∈ N .
Definition A.4. (Good-GuessE(k)) We say Good-GuessE(k) that is the event that, there
exist an polynomial time attacker E that she/he can correctly guess that she/he is given
the real session key or a random number after performing the Π protocol successfully,
where k is the system security parameter.
Definition A.5. A protocol Π is a secure mutual authentication protocol if for every
adversary E:
1. If Πsi,j and Π
t
j,i have matching conversation, then both oralces accept.
2. The probability of No-matchingE(k) is negligible, where k is the system security
parameter.
Definition A.6. A protocol Π is a secure authentication and key agreement protocol if
the following requirements are satisfied:
1. If Π is a secure mutual authentication protocol.
2. If Πsi,j and Π
t
j,i hold the same session key after performing Π protocol successfully.
3. The probability of Good-GuessE(k) is negligible.
Definition A.7. (Freshness) A instance Πki is fresh if the following conditions are true
at the conclusion of the simulation of the proposed protocol:
1. If Πki,j has not been queried, Reveal(i, k).
2. If there existed Πk
′
j,i partner with Π
k
i,j where Π
k′
j,i has not been queried, Reveal(i, k).
3. The partner of Πki,j is not an insider attacker.
Definition A.8. (Forward Security(FS)) An adversary A is now allowed to ask all queries
including Corrupt(i) (or Corrupt(j)) which returns the secret key of party pi (or pj) to
A during the simulation. A protocol Π is forward secure that if A cannot compromise the
past information even the Corrupt(i) (or Corrupt(j)) are queried.
Theorem A.1. Our p2p fair content exchange scheme (P2PFCES for short) is a (t0,
ε0, qh, qH1, qs, qE)-secure mutual authentication and key agreement protocol under the
assumption that k-CAA problem is intractable.
P2P FAIR CONTENT EXCHANGE WITH OWNERSHIP TRANSFER 3889
breaks the k-CAA problem with the probability ε0 at most qs send queries, qh hash queries,
and qc corrupt queries.
Proof: First, we consider an adversary A attacking the P2PFCES in the sense of the
forward security. Let Forge be the event that there exists at least one forged signature
in the P2PFCES. We can derive that
PrA[Good-GuessE(k)] ≥ PrA[Forge] + PrA[Good-GuessE(k) ∧ Forge],
where b and b′ are the coin flips chosen by the simulator and the attacker, respectively.
Beginning this proof, we also define other two lemmas to complete this proof. 
Lemma A.2. We claim that there is no attacker A that can forge the authentication
transcripts with the non-negligible probability ε0= PrA[Forge] ≥ 10q
2
H1
(qs+1)(qs+qH1 )
q
in the
polynomial time bound t′ ≤ 120686qH1 t0
ε0
.
Proof: First, we consider the following case that when there exists a forger that she/he
can forge the authentication transcripts between user A or B. It means that she/he can
impersonate a client to authenticate with server S. In order to compute the advantage of
A from this case, we use A to construct a challenger F that generates a valid message
< IDi, Gi, Si >. F generates all key pairs for users A, B and server S. Then it simulates
all oracle queries to A as in Theorem A.1. Let Forge be the event that A generates a
new and valid message tuple < IDi, Gi, Si >. The probability of A satisfies
PrA[Forge] ≥
10q2H1(qs + 1)(qs + qH1)
q
,
where t′ ≤ 120686qH1 t0
ε0
. By Lemma A.1, we can conclude that the probability PrA[Forge]
is negligible. 
Lemma A.3. We claim that there is no attacker A that can correctly guess the session
key with the non-negligible probability
Pr
[
Good-GuessE(k) ∧ Forge
] ≥ (1− ε) 1
22l
· 1
qH2
· 1
qs
in the polynomial time t′ ≤ t + (qs + qH2)trn, where trn denotes the time to produce a
random number.
Proof: In the second case, A attempts to get the session key sskA,B in the random
oracle model, she/he must ask theH2(τA||τB||τa∗τb∗P )H2 query in the A’s aspect. On the
other hand, it is the same situation in B’s aspect. So we just consider the communication
between A and S. We construct the attacker B which breaks the k-mBIDH problem
using A as the subroutine with non-negligible probability. First, B is given an instance
of the k-mBIDH problem
(
e,G1, G2, P, sP, tP, h, h1, h2, . . . , hk,
1
s+h1
P, 1
s+h2
P, . . . , 1
s+hk
P
)
,
where k ≥ qH2 , qs. Its goal is to compute e(P, P )
1
s+h
t. B sets the public system parameters
< e,G1, G2, P, Ppub, g, h
′, H1, H2 > which it lets Ppub = sP , g = e(P, P ), SS = 1s+h1P and
QS = sP + h1P accompanying with h
′, H1 and H2 random oracles. Then B gives these
parameters to A. In order to compute the advantage of A, B guesses α correctly such
that A asks its Test query in the α-session. After preparing these system parameters, B
also simulates the oracle queries of A in the following.
• h′-query: When A makes the query with IDi and if IDi = IDA, then B chooses
h from the k-mBIDH problem instance and sets h = h(IDA) and returns it to A.
Otherwise, it forwards hi and adds < IDi, hi > into the empty list Lh′ , where i =
2 ∼ k.
International Journal of Innovative
Computing, Information and Control ICIC International c©2012 ISSN 1349-4198
Volume 8, Number 7(A), July 2012 pp. 4469–4482
AN EFFICIENT ELECTRONIC CASH SCHEME WITH MULTIPLE
BANKS USING GROUP SIGNATURE
Ming-Te Chen1, Chun-I Fan1,∗, Wen-Shenq Juang2 and Yi-Chun Yeh2
1Department of Computer Science and Engineering
National Sun Yat-sen University
No. 70, Lienhai Road, Kaohsiung 80424, Taiwan
ecsemtchen@gmail.com; ∗Corresponding author: cifan@faculty.nsysu.edu.tw
2Department of Information Management
National Kaohsiung First University of Science and Technology
No. 2, Jhuoyue Road, Nanzih, Kaohsiung 811, Taiwan
wsjuang@ccms.nkfust.edu.tw; u9724830@nkfust.edu.tw
Received March 2011; revised July 2011
Abstract. In 2008, an electronic cash scheme with multiple banks based on group sig-
natures was proposed by Wang et al. They adopted a group blind signature scheme based
on bilinear pairings to generate the electronic cash and it can be verified by the bilin-
ear pairings operation. However, we find some security problems in their approach. By
the way, the cost of communication and computation in their scheme can be improved
further. Hence, we propose an efficient and secure e-cash scheme from bilinear pairings
with multiple banks. Not only can our approach solve all the security problems in Wang
et al.’s scheme but also offer lower computation and communication cost.
Keywords: Blind group signature, Bilinear pairing, E-cash, Multiple banks
1. Introduction. With the flourishing development of the Internet technology, the phe-
nomenon of people performing financial transactions via the Internet is gradually popu-
lar in the e-commerce environment. This situation is called electronic payment service
[9, 13, 18]. Because of the insecure Internet environment, customers will face any kinds
of security threats when performing electronic payment service with banks. A malicious
attacker can carry out eavesdropping, tampering, stealing or performing other illegal acts
on the customers’ transaction data when they are doing this service with banks. Then it
will result in that consumers’ sensitive privacy information (such as customers’ identity
and password of financial cards) is stolen and she/he can impersonate one of customers to
withdraw e-cash from banks. In order to prevent these threats happening, the electronic
payment services must consider the security requirements including the authentication of
customers, confidentiality of e-cash, and non-repudiation of e-cash.
When a customer pays her/his e-cash to a merchant, it should make that the merchant
and the bank do not know who pays the e-cash anonymously. By the way, the merchant
should be able to check the e-cash fast by using efficient e-cash verification method. In
1983, the first electronic cash (e-cash) was proposed by Chuam [4] and it adopted the
blind signature as the building primitive.
In the meanwhile, there were some signature schemes [2, 21, 23] and some electronic
cash payment mechanisms [14, 19, 22] also proposed. For the growing emphasis on the
privacy protection of customers in electronic payment systems, the blind signature seems
to be a perfect solution. Nevertheless, the blind signature cannot offer the fully anonymity
4469
AN EFFICIENT ELECTRONIC CASH SCHEME WITH MULTIPLE BANKS 4471
prime order q and (G2,×) denote a cyclic multiplicative group of a prime order q. Let
e : G1 × G1 → G2 be a bilinear pairing. The bilinear pairing must satisfy the following
three properties.
1. Bilinear: for ∀P,Q ∈ G1 and a, b ∈ Z∗q ,
e(aP, bQ) = e(abP,Q) = e(P, abQ) = e(P,Q)ab.
2. Non-degeneration: for all P ∈ G1 and Q ∈ G1, such that e(P,Q) 6= 1.
3. Computability: for any P,Q ∈ G1, there is an efficient algorithm to compute e(P,Q)
in polynomial time.
We continue to make a description of some hard problems which are related to bilinear
pairings.
1. Discrete Logarithm Problem (DLP):
Given two elements P,Q ∈ G1, DLP is to calculate an integer n, such that Q = nP .
2. Computational Diffie-Hellman problem (CDHP):
Given (P, aP, bP ), which P ∈ G1 and a, b ∈ Z∗p , CDHP is to compute abP .
3. Inverse Computational Diffie-Hellman Problem (Inv-CDHP):
Given P , aP , a ∈ Z∗p , Inv-CDHP is to compute a−1P . It is a variation of CDHP.
We assume that there does not exist any polynomial time algorithm to solve DLP,
CDHP, and Inv-CDHP with a non-negligible probability.
2.2. Tan et al.’s ID-based group signature scheme from bilinear maps. In 2003,
an ID-based group signature scheme from bilinear maps was proposed by Tan et al. [25].
Their scheme is based on the key-escrow method in Chen et al.’s scheme [20]. Let G1 and
G2 be two cyclic groups of a prime order q and e : G1 × G1 → G2 be a bilinear pairing
function. Let h1 : {0, 1}∗ × G1 → Z∗q and h2 : {0, 1}∗ × G1 → G1 be two hash functions.
We briefly describe it in the following.
1. The setup phase: The key control center (KCC for short) first announces the public
information (e, q, P, Ppub, G1, G2, h1, h2). Let Ppub = sP be the public key of KCC,
where s be a master private key and h1, h2 be two hash functions.
2. The extracting phase: A user A computes her/his public key rP , where r is a random
number. A transmits rP and her/his identity IDA to KCC. Then KCC computes
SIDA = sh2(IDA‖rP ) and sends it back to A.
3. The joining phase: A computes (rP, xP, IDA, rxP ) and forwards it to KCC, where
x is a random number. KCC uses the equation SIDA = sh2(IDA‖rP ) to prove that
A knows SIDA and verifies whether e(rxP, P ) = e(xP, rP ) or not. If these two
equations are satisfied, KCC generates the partial certificate SA = sh2(IDA‖rxP )
for A. Thus, (SA, rxP ) is the member certificate of IDA.
4. The signing phase: Let m be the message to be signed. A generates U = k1rxP
and computes W = (q − k1)xP , R = k2h2(IDA‖U +W ), H = h1(U +W + R) and
V = Hk2SA + k1rxh2(m‖U +W + R), where k1, k2 are two random values of Z∗q .
Finally, (U,W,R, V ) is the group signature of the message m.
5. The verification phase: The verifier has to compute H = h1(U +W + R) to check
the validity by using the equation e(V, P ) = e(R,Ppub)
H · e(h2(m‖U +W +R), U).
6. The opening phase: When KCC gets a signature of m, KCC can use the following
three equations e(U, P )e(W, rP ) = e(rxP, P ), e(SA, P ) = e(h2(IDA||rxP ), Ppub),
and e(SIDA , P ) = e(h2(IDA||rP ), Ppub) to find out the identity of the user A.
3. Our Proposed Scheme. Now we propose our e-cash scheme based on group signa-
tures. There are four kinds of participants: the central bank, the banks, the customer and
AN EFFICIENT ELECTRONIC CASH SCHEME WITH MULTIPLE BANKS 4473
If a customer Ci attempts to join a group, she/he then performs in the following.
Step 1: Ci chooses a secret value xci ∈ Z∗q and generates the relative public key
xciP . Ci then submits the information
(
rcP, xciP,
1
H(xciP )+H(rc)
P, IDCi , SIDCi
)
to
the central bank.
Step 2: When the central bank obtains the information, she/he uses the following two
verification Equations (1) and (2) to verify whether the public keys IDCi and SIDCi
are correct or not. If yes, the central bank will send Sci = sH1
(
ti,
1
H(xciP )+H(rc)
P
)
to
IDCi secretly. Otherwise, this phase will be stopped. Then the central bank records(
rcP, xciP,
1
H(xciP )+H(rc)
P, IDCi
)
in the customer member table in private.
SIDCi
?
= sH1(IDCi‖ti, rcP ), (1)
eˆ
(
H(xciP )P +H(rc)P,
1
(H(xciP ) +H(rc))
P
)
?
= eˆ(P, P ). (2)
Step 3: On receiving the partial member certificate Sci in Step 2, Ci can verify Sci by
computing eˆ(Sci , P ) = eˆ
(
H1(ti,
1
H(xciP )+H(rc)
P ), Ppub
)
. If yes, the customer obtains
her/his complete member certificate
(
1
H(xciP )+H(rc)
P, Sci
)
.
Step 4: Then the central bank will forward the information vi = H(IDBi , Sci) to each
eligible bank Bi (i = 1, 2, 3, . . . , k) via a secure channel.
If a bank Bi attempts to join a group, then she/he performs in the following. As the
above three steps done by the customer, Bi must run the same process to get her/his own
member certificate. Then Bi can use this certificate to generate the signature of electronic
cash later. The registration process is shown in the following.
Step 1: Bi randomly chooses a secret number αbi ∈ Z∗q and computes the public key
αbiP . She/he forwards the information
(
rbP, αbiP,
1
H(αbiP )+H(rb)
P, IDBi , SIDBi
)
to
the central bank.
Step 2: When the central bank receives the request from Bi, she/he can check the cor-
rectness of the request by verifying if SIDBi
?
= sH1(IDBi‖Ti, rbP ) and eˆ
(
H(αbiP )P
+H(rb)P,
1
H(αbiP )+H(rb)
P
)
?
= eˆ(P, P ). If yes, the central bank records
(
rbP , αbiP ,
1
H(αbiP )+H(rb)
P , IDBi
)
about Bi in the bank member table. Then she/he generates
SBi = sH1
(
Ti,
1
H(αbiP )+H(rb)
P
)
and sends it back to Bi secretly.
Step 3: Finally, Bi can verify SBi by using eˆ(SBi , P )= eˆ
(
H1
(
Ti,
1
H(αbiP )+H(rb)
P
)
, Ppub
)
.
If it is valid, Bi will get her/his member certificate
(
SBi ,
1
H(αbiP )+H(rb)
P
)
.
3.4. The withdrawal protocol. The participants in this phase are the customer and
the bank. Before the customer requests for the signature of electronic cash from Bi, they
should perform the authentication process. The customer and the bank have to prove
that they know the secret Sci between them. The authentication phase is shown in the
following.
Step 1: The customer chooses a random number rcj ∈ Z∗q and computes the hash value
vi = H(IDBi‖Si), then she/he sends a request with a nonce γ1 and the encrypted
message Evi(rcj, H(IDBi‖γ1)) to the bank Bi.
AN EFFICIENT ELECTRONIC CASH SCHEME WITH MULTIPLE BANKS 4475
her/his account, she/he must send the information
(
m, R˜, V˜ , W˜ , Ti,
1
H(αbiP )+H(rb)
P
)
and(
θ,R′′, V ′′,W ′′, ti, 1H(xciP )+H(rc)
P
)
to the bank Bj. The bank can perform if
(
θ, R′′, V ′′,
W ′′, ti, 1H(xciP )+H(rc)
P
)
is valid by checking eˆ(W ′′, P ) ?= eˆ(R′′ + V ′′Qˆ, Ppub) and verifying
if
(
m, R˜, V˜ , W˜ , Ti,
1
H(αbiP )+H(rb)
P
)
has not been used before. If both of the verification
are valid, Bj deposits the money into the merchant’s account.
3.7. The customer tracing protocol. If the bank Bj discovers the double spend-
ing of some e-cash, she/he can ask the central bank to find out the owner of the e-
cash. The central bank requests the information
(
m, R˜, V˜ , W˜ , Ti,
1
H(αbiP )+H(rb)
P
)
and(
θ,R′′, V ′′,W ′′, ti, 1H(xciP )+H(rc)
P
)
from Bj. She/he uses
1
H(αbiP )+H(rb)
P to check the bank
member list and finds out who the real signer of the e-cash is. Then she/he checks if the
following two equations hold.
eˆ
(
H(xciP )P +H(rc)P,
1
(H(xciP ) +H(rc))
P
)
?
= eˆ(P, P ), (3)
eˆ(Sci , P )
?
= eˆ
(
H1(ti,
1
H(xciP ) +H(rc)
P ), Ppub
)
. (4)
If these two equations are valid, the double spending customer will be found.
3.8. The revoking protocol. Assume that the central bank has a certificate revocation
list which records the information of the revoked group members. We assume that the
format of each item in the certificate revocation list is (QIDBi , Trevoke) and (QIDCi , trevoke)
for the bank and the customer, respectively, where (QIDBi , Trevoke) is a group member
with the public key QIDBi (or QIDCi ) at the time Trevoke (or trevoke). Anyone can request
the certificate revocation list to check whether the communicating party is included in a
group or not.
4. Security Analysis.
4.1. Correctness considerations.
Proposition 4.1. In the registration phase, the central bank can check the validity of
the public key of the registrant (the customer or the bank) by verifying the equation
eˆ
(
H(xciP )P +H(rc)P,
1
(H(xciP )+H(rc))
P
)
= eˆ(P, P ).
Proof:
eˆ
(
H(xciP )P +H(rc)P,
1
(H(xciP ) +H(rc))
P
)
= eˆ((H(xciP ) +H(rc))P, (H(xciP ) +H(rc))
−1P )
= eˆ(P, P )(H(xciP )+H(rc))∗(H(xciP )+H(rc))
−1
= eˆ(P, P ).
Proposition 4.2. In the withdrawal phase of our scheme, the equation eˆ(W˜ , P ) = eˆ(R˜+
V˜ Q, Ppub) is used to check the correctness of the signature
(
m, R˜, V˜ , W˜ , Ti,
1
H(rbP )+H(αbi )
P
)
of the e-cash by the customer. In the payment phase, the merchant also can use the
equation eˆ(W˜ , P ) = eˆ(R˜ + V˜ Q, Ppub) to verify the e-cash of the customer.
AN EFFICIENT ELECTRONIC CASH SCHEME WITH MULTIPLE BANKS 4477
account of the merchant by the bank Bj and the central bank will record this used e-cash
information.
4.4. Anonymity. When the merchant obtains the e-cash
(
m,R′,V ′,W ′,Ti, 1H(αbiP )+H(rb)
P
)
and the signature of the transaction information
(
θ, R′′, V ′′,W ′′, ti, 1H(xciP )+H(rc)
P
)
from
IDCi in the payment stage, she/he cannot learn the identity of IDCi . Since xci and rc
are randomly chosen and they are protected by the hash function H, no one can link
the customer’s identity with 1
H(xciP )+H(rc)
P except the central bank (as described in the
customer tracing protocol).
4.5. Properties comparison. In this section, we will describe the properties comparison
among our e-cash scheme and related schemes. We summarize the comparison in Table 1.
In Table 1, we can see that our e-cash scheme not only can satisfy all the security properties
such as customer’s anonymity protection, mutual authentication, e-cash verification, and
customer tracing protocol but also can prevent double spending and the e-cash forging.
4.6. Efficiency analysis and comparison. Our scheme is based on the bilinear map-
ping in elliptic curves. Comparing with RSA, a small length key will be used to achieve
the same security of RSA. For example, in ECC, the key length of 192-bit has the same
security level with the key length of 1024-bit in RSA.
We assume that ECp is the pairing operation on elliptic curve, ECm is the point scalar
multiplication operation on elliptic curve, ECA is two points addition operation on el-
liptic curve, TH is the computation cost of one-way hash function, Ts is the search time,
T (S) is the time of a symmetric encrypting/decrypting operation, T (D) is the time of
a Diffie-Hellman operation, I is the computation cost of the inverse operation, ⊕ is the
computation cost of the exclusive-or operation, and M is the multiplication operation in
a modulo as referenced in [6, 7]. Let C1 be the communication cost, C2 be the computa-
tion cost of the central bank, C3 be the the computation cost of the customer, C4 be the
computation cost of the bank, C5 be the computation cost of the merchant, C6 be the
computation cost of TTP, and C7 be the computation cost of verification. We assume
that a random number in Z∗q is 160 bits, a point over elliptic curve is 160 bits, the output
size of SHA-1 is 160 bits, and the block size of AES is 128 bits. From [24], we assume
that E is the computation cost of a modulo exponentiation in a 1024-bit modulo and we
also find out the relations such as E ∼= 8.24ECm, E ∼= 600TH , E ∼= 3.2ECp, ECA ∼= 5M ,
I ∼= 0.9M and E ∼= 240M . The performance comparisons are shown in Tables 2-7.
From Table 3, we can see that the total computation cost in Popescu et al.’s scheme is
about 342M , that in Chou et al.’s scheme [10] is about 885M + 2T (D), that in Wang et
al.’s scheme is about 372M , and that in our scheme is about 571.9M .
From Table 4, we can see that the communication cost of the withdrawing protocol
in our scheme is 160 ∗ 4 = 640 bits and the communication cost for the authentication
protocol in our scheme is 640 bits. Thus, C1 in Table 4 is only 1280 bits. In Wang et al.’s
scheme [17], the communication cost of the withdrawing protocol is 160 ∗ 7 = 1120 bits
and the communication cost for the authentication protocol is 640 bits. Thus, C1 of [17]
in Table 4 is 1760 bits. The communication cost of the withdrawing protocol in Chou et
al.’s scheme [10] is 384 + 1952 = 2336 bits and Popescu et al.’s scheme is 160 ∗ 7 = 1120
bits. In [3], they do not provide the authentication protocol before performing the issuing
phase. We only need three messages to complete the issue of e-cash. On the other hand,
there are five messages in Wang et al. and Popescu et al.’s scheme.
In Table 4, we include the cost of communications and computation of authentication
protocol in the withdrawal protocol. The computation cost of withdrawing an e-cash for
AN EFFICIENT ELECTRONIC CASH SCHEME WITH MULTIPLE BANKS 4479
Table 3. Cost comparisons of the registration protocol among our e-cash
scheme and related schemes
Our Wang [17] Chou [10] Popescu [3]
C1 1088 bits 832 bit 1184 bits 1152 bits
C2
1ECm + 1TH 1ECm + 1TH 1ECm + 1TH∼= 31M ∼= 31M N/A ∼= 31M
C3 2ECm + 2TH 2ECm 1ECp + 1ECm+ 3ECm
1TH∼= 62M ∼= 60M ∼= 221M ∼= 90M
C4 2ECm + 2TH 2ECm∼= 62M ∼= 60M N/A N/A
C6 1ECp + 5ECm+
N/A N/A 4TH + 1ECA+ N/A
1M
∼= 236.9M
C7 4ECp + 3ECm+ 2ECp + 2ECm+ 2T (D) + 3ECp+ 2ECp + 2ECm+
4TH + 1ECA+ 1TH 6ECm + 1TH+ 1TH
1M 1ECA + 1M∼= 416.9M ∼= 221M ∼= 427.9M + 2T (D) ∼= 221M
Total 571.9M 372M 885M+2T (D) 342M
N/A: Not Available
Table 4. Cost comparisons of the withdrawal protocol among our e-cash
scheme and related schemes
Our Wang [17] Chou [10] Popescu [3]
C1 1280 bits 1760 bits 2336 bits 1120 bits
C3 2ECm + 2ECA+ 5ECm + 3ECA+ 1ECp + 3ECm+ 3ECm + 4ECA+
3TH + 3T (S) 3TH + 1M 2TH + 5M+ 2TH
1I + 2T (D)
∼= 71M + 3T (S) ∼= 168M ∼= 176.9M + 2T (D) ∼= 111M
C4 3ECm + 3TH+ 5ECm + 2TH+ 1ECp + 4ECm+ 4ECm + 2TH
3T (S) 1M 3TH + 4M+
1I + 2T (D)
∼= 91M + 3T (S) ∼= 152M ∼= 208.9M + 2T (D) ∼= 121M
C7 2ECp + 4ECm+ 2ECp + 4ECm+ 6ECp + 12ECm+
3ECA 3ECA 2TH + 7M+ N/A
2I + 1ECA∼= 295M ∼= 295M ∼= 849.8M
Total 457M+6T (S) 615M 1235.6M+4T (D) 232M
N/A: Not Available
In the deposit phase of Table 6, C7 of our scheme only needs two pairings operations,
four point scalar multiplication operations, and one addition of point operation. Through
Table 6, we see that C7 of our scheme is the lowest than the other schemes.
5. Conclusions. In this paper, we have proposed a new e-cash scheme with multiple
banks. Our scheme can satisfy all the security properties such as the customer’s anonymity
protection, non-repudiability of e-cash, and unforgeability of e-cash. Our scheme is also
AN EFFICIENT ELECTRONIC CASH SCHEME WITH MULTIPLE BANKS 4481
100-2219-E-110-005, and “Aim for the Top University Plan” of the National Sun Yat-sen
University and Ministry of Education, Taiwan.
REFERENCES
[1] A. Shamir, Identity-based cryptosystems and signature schemes, Proc. of CRYPTO’84, LNCS,
vol.196, pp.47-53, 1985.
[2] C.-I Fan, C.-I Wang and W. Z. Sun, Fast randomization schemes for Chaum blind signatures,
International Journal of Innovative Computing, Information and Control, vol.5, no.11(A), pp.3887-
3900, 2009.
[3] C. Popescu and H. Oros, An off-line electronic cash system based on bilinear pairings, Proc. of the
14th International Workshop on Systems, Signals and Image Processing, pp.438-440, 2007.
[4] D. Chaum, Blind signature for untraceable payments, Proc. of Crypto on Advances in Cryptology,
pp.199-203, 1983.
[5] F. Hess, Efficient identity based signature schemes based on pairings, Proc. of the 9th Annual Inter-
national Workshop on Selected Areas in Cryptography, LNCS, vol.2595, pp.310-324, 2003.
[6] F. Zhang and K. Kim, Efficient id-based blind signature and proxy signature from bilinear pairings,
Proc. of the 8th Australasian Conference on Information Security and Privacy, LNCS, vol.2727,
pp.218-219, 2003.
[7] F. Zhang, R. Safavi-Naini and W. Susilo, An efficient signature scheme from bilinear pairings and
its applications, Proc. of the 7th International Workshop on Theory and Practice in Public Key
Cryptography, LNCS, vol.2947, pp.277-290, 2004.
[8] F. Zhang, F. Zhang and Y. Wang, Electronic cash system with multiple banks, Chinese Journal of
Computers, vol.24, no.5, pp.455-462, 2001.
[9] J.-H. Yang and C.-C. Chang, An efficient fair electronic payment system based upon non-signature
authenticated encryption scheme, International Journal of Innovative Computing, Information and
Control, vol.5, no.11(A), pp.3861-3873, 2009.
[10] J. S. Chou, Y. Chen, M. H. Cho and H. M. Sun, A novel id-based electronic cash system from
pairings, Cryptology ePrint Archive, Report 2009/339, 2009.
[11] J. Zhong and D. He, A new type of group blind signature scheme based on bilinear pairings, IACR
Eprint Archive, http://eprint.iacr.org/2006/439.pdf, 2006.
[12] M. Stadler, M. M. Piveteau and J. Camenisch, Fair blind signatures, Proc. of International Confer-
ence on the Theory and Application of Cryptographic Techniques, EUROCRYPT’95, LNCS, vol.921,
pp.209-219, 1995.
[13] N. Asokan, P. A. Janson, M. Steiner and M. Waidner, The state of the art in electronic payment
systems, IEEE Computer, vol.30, pp.28-35, 1997.
[14] S. Canard and A. Gouget, Divisible e-cash systems can be truly anonymous, Proc. of the 26th
Annual International Conference on the Theory and Applications of Cryptographic Techniques, EU-
ROCRYPT 2007, LNCS, vol.4515, pp.482-497, 2007.
[15] S. Park, S. Kim and D. Won, ID-based group signature, Electronics Letters, vol.33, no.19, pp.1616-
1617, 1997.
[16] S. V. Solms and D. Naccache, On blind signatures and perfect crimes, Computers and Security,
vol.11, pp.581-583, 1992.
[17] S. Wang, Z. Chen and X. Wang, A new certificateless electronic cash scheme with multiple banks
based on group signatures, Proc. of 2008 International Symposium on Electronic Commerce and
Security, pp.362-366, 2008.
[18] W. Qiu, A fair off-line electronic payment system, Contributions to Ubiquitous Computing, Studies
in Computational Intelligence, vol.42, pp.177-195, 2007.
[19] W. Qiu, K. Chen and D. Gu, A new oﬄine privacy protecting e-cash system with revokable
anonymity, Proc. of the 5th International Conference on Information Security, ISC 2002, LNCS,
vol.2433, pp.177-190, 2002.
[20] X. Chen, F. Zhang and K. Kim, New id-based group signature from pairings, Journal of Electronics
(China), vol.23, pp.892-900, 2006.
[21] Y.-F. Chung and K.-H. Huang, Chameleon signature with conditional open verification, International
Journal of Innovative Computing, Information and Control, vol.5, no.9, pp.2829-2836, 2009.
[22] Y. Frankel, Y. Tsiounis and M. Yung, Indirect discourse proofs: Achieving efficient fair off-line e-cash,
Proc. of International Conference on the Theory and Applications of Cryptology and Information
Security, ASIACRYPT’96, LNCS, vol.1163, pp.286-300, 1996.
International Journal of Innovative
Computing, Information and Control ICIC International c©2013 ISSN 1349-4198
Volume 9, Number 11, November 2013 pp. 4247–4261
ROBUST AND PRIVACY PROTECTION AUTHENTICATION
IN CLOUD COMPUTING
Jheng-Jia Huang1, Wen-Shenq Juang2,∗, Chun-I Fan1
and Horng-Twu Liaw3
1Department of Computer Science and Engineering
National Sun Yat-sen University
No. 70, Lienhai Rd., Kaohsiung 80424, Taiwan
jhengjia.huang@gmail.com; cifan@faculty.nsysu.edu.tw
2Department of Information Management
National Kaohsiung First University of Science and Technology
No. 2, Jhuoyue Rd., Nanzih, Kaohsiung 811, Taiwan
∗Corresponding author: wsjuang@nkfust.edu.tw
3Department of Information Management
Shih Hsin University
No. 1, Lane 17, Sec. 1, Mu-Cha Rd., Taipei 116, Taiwan
Received September 2012; revised March 2013
Abstract. In the cloud environments, the cloud user can use low computing devices
to connect to the clouds. For checking the identities of the user and the cloud server,
they must do mutual user authentication before using the cloud services. Also, the trans-
mitted messages between them must be protected. These environments are different with
traditional client-server environments since a cloud user may use many various devices
to connect to the cloud server to do authentication. It will face the following problems.
The first problem is that some devices only have low computing and memory ability.
The second problem is that the cloud user may have many various devices for storing
secret sensitive information. If some devices are lost, it is hard to recover the sensitive
information stored in these devices. In order to solve all the above problems, we propose
a lightweight robust and privacy protection authentication scheme for cloud computing.
Our proposed authentication scheme can prevent the insider attack even if the secret in-
formation stored in a cloud database is compromised and the oﬄine dictionary attack
even if the secret information stored in a user’s device is compromised. Also, the cloud
user can freely choose his password to use our proposed authentication scheme.
Keywords: Cloud computing, Information security, Privacy protection, Identity au-
thentication, Low-resource device
1. Introduction. The cloud computing [1,2,8,10,15,22] is growing rapidly in recent years.
In a cloud computing environment, the user can transfer some computing loading to the
cloud server since the server has high computing ability. Therefore, the user does not
need the device that has strong computing ability to connect to the cloud server. In this
environment, the user can use many various devices to login to various clouds.
In this environment, the user authentication between the user and the cloud may face
the following four problems. The first problem is that the attacker may try to forge the
cloud server to get the cloud user’s data and information. The second problem is that
the attacker may try to get the cloud user’s identity information from the communication
messages between the cloud server and the cloud user. The third problem is that the
attacker may try to generate many fake request messages to cause the DDOS attack [11].
4247
ROBUST AND PRIVACY PROTECTION AUTHENTICATION 4249
2.2.2. The registration phase.
1. The user selects a password PWi and a random number b, and computes h(PWi‖b).
Then the user sends the parameters IDi, h(PWi‖b) to the server.
2. After the server getting the message, if IDi is a new identifier, the server sets the
card identifier CIi = 1 and stores the record IDi, CIi in its registration table. If IDi
is not a new identifier, the server sets the card identifier CIi = CIi+1 and stores the
record IDi, CIi = CIi + 1 in its registration table. Therefore, the server generates
bi = Es(h(PWi‖b)‖IDi‖CIi‖h(IDi‖CIi‖h(PWi‖b))) and Vi = h(IDi, s, CIi). The
authentication tag is h(IDi‖CIi‖h(PWi‖b)). The server issues a smart card to the
user. The contained parameters are bi, Vi, IDi, CIi.
3. The user stores the parameters bi, Vi, IDi, CIi, b into the smart card.
2.2.3. The precomputation phase.
1. The smart card generates the random number r, and computes and stores the pa-
rameters e = (r×G) and c = (r× Ps) = (r× x×G) as a point over EP before the
start of the log-in phase.
2.2.4. The log-in phase.
1. The user inserts his smart card into a card reader and inputs his password PWi.
Then, the smart card sends the parameters bi and EVi(e) to the server.
2. After receiving the message, the server decrypts bi by the secret key s. The server
computes Vi = h(IDi, s, CIi) and decrypts EVi(e) to obtain e. The server checks if
(a) the authentication tag is equal to h(IDi‖CIi‖h(PWi‖b));
(b) IDi is registered;
(c) CIi is stored in the table.
If any of the verifications is false, the server will stop the log-in request. If all
of the verifications are true, the server selects a random number u and computes
c = (e × x) = (r × x × G) and Ms = h(c‖u‖Vi). Therefore, the server sends the
parameters u,Ms to the smart card.
3. After the smart card getting the message, the smart card computes and checks ifMs
is equal to h(c‖u‖Vi). If it is not, the smart card will stop the log-in phase. Otherwise,
the smart card computes MU = h(h(PWi‖b)‖Vi‖c‖u) and Sk = h(Vi, c, u). Then,
the smart card sends the parameter MU to the server.
4. After the server getting the message, the server computes and checks that the MU
is equal to h(h(PWi‖b)‖Vi‖c‖u). If it is not, the server sends a wrong password
message to the user. The user can input the password PWi. Then, the smart card
can compute MU . Then, the smart card sends the parameter MU to the server
again. If the number of the password verifications exceeds the allowed time, the
server will stop the log-in request. Otherwise, the server accepts the log-in request
and computes Sk = h(V i, c, u).
2.2.5. The password-changing phase.
1. The user inputs a new password PW ∗i and a new random number b
∗. Then, the
smart card computes ESk(IDi, h(PW
∗
i ‖b∗)). The smart card sends the parameter
ESk to the server.
2. After the server getting the message, it decrypts ESk to obtain IDi and h(PW
∗
i ‖b∗)
by Sk. The server computes a new b∗i = Es(h(PW
∗
i ‖b∗)‖IDi‖CIi‖h(IDi‖CIi‖h(P
W ∗i ‖b∗))) and sends the parameter ESk(b∗i ) to the smart card.
3. After the smart card getting the message, the smart card decrypts it by Sk. Then,
the smart card stores the new parameters b∗i and b
∗ in its memory.
ROBUST AND PRIVACY PROTECTION AUTHENTICATION 4251
2.4. Singh et al.’s scheme.
2.4.1. The parameter generation phase.
1. The server selects an elliptic curve E over a finite FP . The discrete logarithm problem
is hard in E(FP ) and a point G ∈ E(FP ) that the subgroup is generated by a large
order n.
2. The server publishes the parameters p, E,G, n.
2.4.2. The registration phase.
1. The server creates V = h(ID‖KS)⊕ h(PW ) and IM = EKS(ID‖r), where the pass-
word PW and the identity protection random number r are selected by the server
and the parameter KS is the private key of the server.
2.4.3. The authentication phase.
1. The user inputs his password PW and the smart card chooses the random integer
rc from [1, n− 1]. Then, the smart card computes Gc = rc × G and sends the
parameters IM,Gc to the server.
2. After the server receiving the message, the server decrypts the parameter Gc to
obtain ID‖r. The server verifies if this ID is valid. If this verification is false, the
server stops this phase. If this verification is true, the server creates Gs = rs×G,
KSU = h(h(ID‖KS)‖(rs×Gc)), and MS = h(KSU‖Gc‖Gs). The server sends the
parameters MS, Gs to the smart card.
3. After the smart card receiving the message, the smart card computes V
′
= V⊕
h(PW ) and KSU = h(V
′‖(rc×Gs)). Then, the smart card verifies if the value MS
is equal to h(KSU‖Gc‖Gs). If it is not, the smart card stops this phase. If it is
true, the smart card computes MU = h(KSU‖Gs) and sends the parameter MU to
the server.
4. After the server receiving the message, the server verifies if the parameterMU is equal
to h(KSU‖Gs). If it is not, the server stops this phase. Otherwise, it is successfully
authenticated between the server and the user. Then, the server establishes the
session key KSU with the user.
2.4.4. The password-changing phase.
1. The user inputs his old password PW , and requests the smart card to change the
password. Then, the user inputs his new password PW ∗.
2. The user’s smart card creates V ∗ = V ⊕ h(PW )⊕ h(PW ∗) and h(ID‖KS)⊕ h(P
W ∗). Therefore, the smart card updates the parameter V with the parameter V ∗.
2.5. Li et al.’s scheme.
2.5.1. The parameter generation phase.
1. The server chooses a large prime P and finds a generator point G.
2. The server selects a random number x and computes the public key PS = (x×G).
3. The server publishes the parameters (PS, P,EP,G, n).
2.5.2. The registration phase.
1. The user selects the password PW and the random string b. Therefore, the user
sends the parameters ID, h(pw‖b), N0 to the server.
ROBUST AND PRIVACY PROTECTION AUTHENTICATION 4253
3. After the smart card receiving the message, the smart card decrypts the parameter
Ek to obtain b
N∗
ID , ID,CI,N
∗ by the session key k. Then, the smart card stores the
new parameters bN
∗
ID , VID, ID,CI, b
∗ in its memory.
3. Our Proposed Scheme. In our proposed scheme, it has four participants and five
phases. The participants are the cloud user, the cloud user’s device, the cloud server, and
the key delegation center (KDC) [17,20]. The phases are the parameter generation phase,
the registration phase, the pre-computation phase, the log-in phase, and the password-
changing phase. Our proposed authentication mechanism not only uses elliptic curve
cryptosystem (ECC) [6,12,14,18,27] to identify the cloud user and the cloud server in
the log-in phase, but also uses public one way hash functions [19,23,26] to authenticate
the cloud user’s identity information in the registration phase and the log-in phase. Our
proposed authentication mechanism uses the related parameters to create the session key
in the log-in phase. The cloud user can use the session key [3,7,9,16,24] to encrypt and
decrypt the data of communication between the cloud user and the cloud server after the
log-in phase. In our proposed authentication mechanism, the cloud user does not scare
collution between the cloud server and the key delegation center (KDC) since the cloud
server can get the key stored in the key delegation center (KDC); it cannot decrypt it to
get the needed information. Also, the cloud user can choose his password freely.
3.1. Notations. The notations for our proposed scheme are defined as follows:
1. h(): Public one-way hash function.
2. EAK(): Secure symmetric encryption algorithm with the secret key AK.
3. DAK(): Secure symmetric decryption algorithm with the secret key AK.
4. b: Random number chosen by the user.
5. G: Generator point of a large order.
6. bi: User’s authentication tag.
7. sk: Session key agreement’s key.
8. ‖: String concatenation operator.
9. x: Server’s private key based on elliptic curve cryptosystems.
10. r: User’s private key based on elliptic curve cryptosystems.
11. u: Server’s private key based on elliptic curve cryptosystems.
12. Ps: Server’s public key based on elliptic curve cryptosystems.
3.2. The parameter generation phase. In this phase the cloud server can generate
some parameters as follows:
Step 1. The cloud server can find a generator point G of order n, in which n is a large
divisor, and n×G = O.
Step 2. The cloud server selects a random number x as its private key and keeps it secretly.
Step 3. The cloud server computes the public key Ps = (x × G) and publishes the pa-
rameters (Ps,G, n).
3.3. The registration phase. Any user in this phase will do it only once. The user can
use her/his smart device after this phase to verify identity. When the cloud user needs to
register a new one in the cloud server, the cloud user should perform the following steps
with the cloud server and the KDC (key delegation center).
1. The cloud user i can use any smart device to the cloud server and input its identity
information. Then, the smart device creates the AES key AK and encrypts b by
AK. Then, the smart device computes h(pw‖b) and gives IDi, h(pw‖b), EAK(b) to
the cloud registration server, where b is a random number chosen by the cloud user
ROBUST AND PRIVACY PROTECTION AUTHENTICATION 4255
sends the parameter h(pw‖b) to the cloud server again. If bi∗ is equal to bi, the
cloud server selects a random number u and computes c = e × x = r × x × G and
Ms = h(V i‖c‖u). Then, the cloud server sends the parameters u and Ms to the
smart device.
3. After the smart device receiving the message, the smart device computes Ms and
checks if the parameter Ms is equal to h(V i‖c‖u). If it is not, the smart device
revokes the log-in phase. Otherwise, the smart device computes Mu and sk, where
Mu = h(h(pw‖b)‖V i‖c‖u) and sk = h(V i‖c‖u). Then, the smart device sends the
parameter Mu to the cloud server. At this time, the cloud server is authenticated
by the smart device.
4. After the cloud server receiving the message, the cloud server computes Mu and
checks if the parameter Mu is equal to h(h(pw‖b)‖ V i‖c‖u). If it is not, the cloud
server revokes the log-in phase. Otherwise, the cloud server accepts the log-in request
and computes a session key sk, where sk = h(V i‖c‖u). At this time, the smart
device is authenticated by the cloud server. Both sides can use the session key sk to
decrypts and encrypts the messages of communication.
3.6. The password-changing phase. The cloud user can change his password in this
phase when the user thinks that she/he should do it or the user lost his smart device any
time. If the cloud user’s password is changed successful, the smart device can update the
new parameter V i∗ in the pre-computation phase. When the cloud user needs to change
his password, the cloud user needs to agree on a session key with the server through the
log-in phase in advance.
1. After the user inputs his new parameters pw∗ or b∗ and the smart device has finished
the log-in phase. The smart device checks if b has changed. If it is true, EAK(b) =
EAK(b
∗). If b has not been changed, EAK(b) = EAK(b). Then, the smart device
encrypts the parameters h(pw∗‖b∗), EAK(b) by sk and sends Esk(h(pw∗‖b∗), EAK(b))
to the cloud server, where sk = h(V i‖c‖u).
2. After the cloud server receiving the message, the cloud server decrypts the parameter
Esk by sk to obtain h(pw
∗‖b∗) and EAK(b). Then, the cloud server selects a random
number s and computes CIi, bi
∗, V i∗, where CIi = CIi + 1, bi∗ = h(IDi‖CIi‖
h(pw∗‖b∗)) and V i∗ = h(IDi‖s‖CIi). Then, the cloud server encrypts the parameter
V i∗ by sk and stores the parameters CIi, bi∗, V i∗, EAK(b). Then, the cloud server
sends the parameters Message and Esk(V i
∗) to the smart device, where Message
is the password changing successful message by the cloud server.
3. After the smart device receiving the message, the smart device decrypts Esk by sk to
obtain V i∗ to store the parameter V i∗ in the smart device. Then, the smart device
encrypts the parameters AK, V i∗ by pw and sends IDi and Epw(AK, V i) to the
KDC.
4. After the KDC receiving the message, the KDC stores the parameters IDi, Epw
(AK, V i) in the KDC database and gives Message to the smart device, where
Message is successful message by the KDC.
4. Discussion.
4.1. Security analysis.
4.1.1. Mutual authentication. In our proposed scheme, the goal of mutual authentication
is to create a robust and powerful session key sk between the cloud user and the cloud
server. In Step 2 of the log-in phase of our proposed scheme, after the smart device
receiving u and Ms from the cloud server, it will compute Ms and verify if Ms =
ROBUST AND PRIVACY PROTECTION AUTHENTICATION 4257
4.2.2. Choosing and changing passwords by users. In Li’s scheme, in order to increase the
entropy of the password, the server always gives the random password to the user, but this
password is hard to remember for user. Therefore, if the user wants to inquire or change
her/his password. It will increase the extra cost for the server. In our proposed scheme,
the cloud user can choose his password pw and the random number b to do authentication.
It would increase the entropy of the password. The random number b will be encrypted
by AK. Then, the ciphertext will be sent to the key delegation center to store it. It not
only can increase the entropy of the password and the high security level, but also can
provide the funtion to choose and change the password.
4.2.3. No time-synchronization problem. In the log-in phase, in order to prevent the replay
attack, timestamps can be used to prevent this problem. This approach will cause the
time-synchronization problem. In our proposed scheme, we use two nonces r and u to
compute Ms and Mu. Challenge and response between the user’s smart device and the
cloud login server is used in our scheme for preventing the replay attack. Therefore, we
do not have the time-synchronization problem in our proposed scheme.
4.2.4. No quota limit of the number of a user’s smart devices. In the registration phase,
the user’s smart device encrypts the parameter b by the key AK and stores the ciphertext
in the cloud server. In the pre-computation phase, the user’s smart device checks if the
smart device does not have AK, V i or Message. If yes, the smart device has to request
the key delegation center to get the new parameter Epw(AK, V i). It can prevent the user
from logining the server with the new smart device. In the password-changing phase, the
parameter CIi changes every time when the user changes his password. Therefore, the
parameter V i will be different when the parameter CIi is changed. Then, the smart device
sends the parameters IDi, Epw(AK, V i) to the key delegation center. After receiving IDi
and Epw(AK, V i), the key delegation center stores the parameters IDi and Epw(AK, V i)
in the key delegation center database and sends Message to the smart device.
4.2.5. Identity protection. In our proposed scheme, there are two kinds of the identity
protection: 1. identity protection of the user’s smart device; 2. identity protection of
communication between the cloud server and cloud user. In identity protection of the
user’s smart device, the user’s smart device does not store any personal information or
the high secret information in the smart device. It only has encryption or decryption
operation keys AK and V i. In identity protection of communication between the cloud
server and cloud user, it only sends the parameters h(pw‖b) and e. The parameters are
encrypted by V i. Therefore, the attacker cannot get the cloud user’s identity information
of communication between the cloud server and the cloud user.
4.2.6. Providing session key agreement. After the log-in phase, any communication can
use the session key to encrypt or decrypt the messages. In the pre-computation phase of
our proposed scheme, the user’s smart device will choose the nonce r. Then, the cloud
log-in server chooses the nonce u in the log-in phase. The nonces will be different every
time. After this phase, the cloud log-in server and the user’s smart device can create the
session key parameter sk by himself.
4.2.7. Without any user’s identity information in the user’s smart device. We assume
that the attacker can get the smart device. She/he will use any tools to get the infor-
mation in the smart device. In our proposed scheme, we can solve the smart device lost
problem because we store the user’s identity information and the encryption parameters
in the cloud server and the key delegation center. Therefore, the user’s smart device only
temporarily stores the parameters AK and V i in the cloud device.
ROBUST AND PRIVACY PROTECTION AUTHENTICATION 4259
[24] needs 4 Hash operations and 2 Sym operations and 1 ECM operations. Sun et
al.’s scheme [4] needs 4 Hash operations and 1 Sym operations and 2 ECM operations.
Singh et al.’s scheme [13] needs 4 Hash operations and 1 Sym operations and 2 ECM
operations. Li et al.’s scheme [25] needs 10 Hash operations and 10 Sym operations
and 1 ECM operations. The detail efficiency comparison among our scheme and related
schemes is shown in Table 2.
Table 2. The computation cost comparison among our scheme and related schemes
P1 P2 P3 P4
Our scheme 2Hash 2ECM 3Hash+ 1Sym 1ECM + 1Sym∼= 0.8M ∼= 58M ∼= 1.6M +4Hash ∼= 31M
Juang et al.’s scheme [24] 3Hash+ 1Sym 2ECM 3Hash+ 1Sym 1ECM + 2Sym∼= 1.6M ∼= 58M ∼= 1.6M +4Hash ∼= 31.4M
Sun et al.’s scheme [4] 2Hash+ 1Sym NA 2ECM + 4Hash 2ECM + 1Sym∼= 1.2M ∼= 59.6M +4Hash ∼= 60M
Singh et al.’s scheme [13] 2Hash+ 1Sym NA 2ECM + 4Hash 2ECM + 1Sym∼= 1.2M ∼= 59.6M +4Hash ∼= 60M
Li et al.’s scheme [25] 2Hash+ 3Sym 2ECM 8Hash+ 4Sym 1ECM + 10Sym∼= 2M ∼= 58M ∼= 4.8M +10Hash ∼= 37M
P1: The computation cost of the registration for the server
P2: The computation cost of the pre-computation phase for the cloud user’s device
P3: The computation cost of the login for the user’s device
P4: The computation cost of the login for the server
The detail functionalities comparison among our scheme and related schemes is shown
in Table 3.
Table 3. The functionality comparison
P1 P2 P3 P4 P5 P6 P7 P8 P9 P10 P11 P12
Our scheme Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes
Juang et al.’s scheme [24] Yes Yes Yes Yes Yes Yes Yes Yes Yes No No Yes
Sun et al.’s scheme [4] Yes Yes No Yes Yes Yes Yes No Yes No No No
Singh et al.’s scheme [13] Yes Yes No Yes Yes No Yes No No No No No
Li et al.’s scheme [25] No No Yes Yes Yes No No Yes Yes No No No
P1: Low communication and computation cost
P2: No password table
P3: Choosing and changing passwords by users
P4: No time-synchronization problem
P5: Mutual authentication
P6: Revoking the lost cards without changing the user’s identity
P7: Identity protection
P8: Providing session key agreement
P9: Preventing the oﬄine dictionary attack with the smart device
P10: No quota limit of a user’s smart device
P11: Without any user’s identity information in the user’s smart device
P12: Preventing the insider attack
5. Conclusions. In the cloud environment, the cloud server has more computing and
storage ability. The user can transfer the major computing loading to the cloud and can
store the secret information in the cloud. This will cause that an attacker tries to get
this valuable information and do various attacks. Therefore, in this environment, how to
provide a secure authentication mechanism that the user can use many various devices to
ROBUST AND PRIVACY PROTECTION AUTHENTICATION 4261
[17] M. K. Franklin and M. K. Reiter, Fair exchange with a semi-trusted third party, Proc. of the 4th
ACM Conference on Computer and Communications Security, pp.1-5, 1997.
[18] N. Koblitz, Elliptic curve cryptosystems, Mathematics of Computation, vol.48, pp.203-209, 1985.
[19] R. C. Merkle, One way hash functions and DES, Proc. of Advances in Cryptology, 1998.
[20] R. Ranchal, L. B. Othmane, A. Kim, M. Kang and M. Linderman, Protection of identity informa-
tion in cloud computing without trusted third party, IEEE International Symposium on Reliable
Distributed Systems, pp.368-372, 2010.
[21] V. Miller, Use of elliptic curves in cryptography, Advances in Cryptology Cryptology, Lecture Notes
in Computer Science, vol.218, pp.417-426, 1985.
[22] W. A. Warr, Cloud Computing, Wendy Warr and Associates, 2009.
[23] W. S. Juang, Efficient password authenticated key agreement using smart cards, Computers and
Security, vol.23, pp.167-173, 2004.
[24] W. S. Juang, S. T. Chen and H. T. Liaw, Robust and efficient password-authenticated key agreement
using smart cards, IEEE Transactions on Industrial Electronics, vol.55, pp.2551-2556, 2008.
[25] X. Li, W. Qiu, D. Zheng, K. Chen and J. Li, Anonymity enhancement on robust and efficient
password-authenticated key agreement using smart cards, IEEE Transactions on Industrial Elec-
tronics, vol.57, pp.793-800, 2010.
[26] X. Wang, Y. L. Yin and H. Yu, Finding collisions in the full SHA-1, Advances in Cryptology, Lecture
Notes in Computer Science, pp.17-36, 2005.
[27] Z. Li, J. Higgins and M. Clement, Performance of finite field arithmetic in an elliptic curve cryptosys-
tem, The 9th IEEE International Symposium on Modeling, Analysis, and Simulation of Computer
and Telecommunications Systems, pp.249-256, 2001.
[28] Z.-Y. Cheng, Y.-Liu, C.-C. Chang and S.-C. Chang, A smart card based authentication scheme for
remote user login and verification, International Journal of Innovative Computing, Information and
Control, vol.8, no.8, pp.5499-5511, 2012.
Conference on Information Security今年於韓國首爾舉辦。今年此次會議共有共有三
場邀請演講與 20 篇論文發表。會議主題涵蓋密碼協定、認證、網路安全、數位鑑識、
國際標準等。主要參與之學者有大陸、台灣、韓國、日本亞洲等國資訊安全學者。 
貳、 論文發表 
本次會議有兩天論文發表議程，其中含 20 篇論文發表。整體觀之，Asia Joint 
Conference on Information Security是以資訊安全應用議題為主軸，內容相當多元。 
所接受論文發表包括密碼協定、認證、網路安全、數位鑑識、國際標準等議題。本
人於會中發表一篇認證應用的論文，名稱為 “An Efficient and Practical Fair 
Buyer-anonymity Exchange Scheme Using Bilinear Pairings”，以下簡述本人發表
論文摘要內容。 
公平交換方案能用於電子商務中交換數位商品與付款。為了提供離線交易，大部分
的公平交易方案需要可信賴的第三方去解決爭議並保證交換中的公平性。另外，如果交
換的內容一部分為付款，買方匿名性將是提供一個好的屬性來吸引消費者使用所提出的
機制。為解決上述問題，我們提出一安全且有效能的買方匿名公平交換機制。在我們我
提出的方法上，我們使用橢圓曲線上的雙線性配對來降低計算與通訊成本。由於在交換
階段只有客戶與商家需要參與，我們所提出的方案提供真正的離線式交易。另外我們所
提出的方案提供買方匿名性的功能。圖一為參與會議之照片。 
 
圖一: AsiaJCIS 2013會議參加照片 
 2 
參、 結語 
此次赴韓國首爾參加 2013 年第八屆亞洲資訊安全國際會議，有機會與亞洲學者一
同深入討論資訊安全應用研究未來的可能發展方向。參加此次會議，可以強烈感受到資
訊安全研究在亞洲地區的蓬勃發展，令人印象深刻。另外由於資訊安全應用的蓬勃發展, 
其所帶來的機會與挑戰也於會中學者所注意與熱烈討論。而資訊安全應用與實務所面臨
的資訊安全管理，隱私保護，認證等安全問題也也是推行這些應用所必須面對與解決的
迫切問題。 
非常感謝國科會能提供足夠的經費讓本人參加此盛會。對本人而言，目睹亞洲學者
在資訊安全應用研究工作上的表現，也讓我們能掌握資訊安全應用的主流研究趨勢。 
肆、 攜回資料 
本次參加會議所攜回之資料有下列兩項： 
1. 會議論文集。 
2. 大會議程手冊。 
 
 4 
[27]. Let H(·) and h(·) be two cryptographic hash function
where H :{0,1}∗ → G1 and h:{0,1}∗ → Zq and let P be a
generator of the group G1. The bilinear pairing is given as ê:
G1 ×G1 → G2, which satisfies the following requirements:
1) Bilinearity: For all x,y,z ∈ G1, ê(x +
y, z)=ê(x, z)ê(y, z) and ê(x, y + z)=ê(x, y) ê(x, z).
2) Non-degeneracy: There exists two x, y ∈ G1 such
that ê(x, y) = 1.
3) Computability: There exists an efficient algorithm to
compute ê(x, y) for all x, y ∈ G1.
A. Digital pseudonyms using bilinear pairings
The concept of digital pseudonym was introduced in [4].
A digital pseudonym is a pseudo identification combined with
her/his random chosen public key certificated by the trusted
third party. Using the corresponding private key of a digital
pseudonym, one person can sign a message and keep his
identification secretly. For using digital pseudonyms, a digital
signature scheme must be adopted. In 2004, a signature scheme
using bilinear pairings was introduced [27]. We will briefly
review the signature scheme in [27] in the following.
Let x be a signer’s secret key and the corresponding public
key be Ppub = xP . When the signer wants to sign a message
m, then she/he performs the following.
1) The signature generation: The signer does the follow-
ing:
1) Compute s = 1
h(m)+xP .
2) The signature of m is s.
2) The signature verification:
1) To verify the signer’s signature s on m, the verifier
can verify if ê(h(m)P + Ppub, s) = ê(P, P ).
In the following, the correctness of the signature s for the
message m can be justified.
ê(h(m)P +Ppub, s) = ê((h(m)+x)P, (h(m)+x)
−1P ) =
ê(P, P )(h(m)+x)(h(m)+x)
−1
= ê(P, P ).
B. Partially blind signature in bilinear pairings
Two improved partially blind signature schemes were pro-
posed in [5]. In this subsection, we will introduce the PKI-
based partially blind signature scheme proposed in [5].
When a requester requests a partially blind signature from
the signer, she/he negotiates with the signer a common in-
formation c. Let x ∈ Zq be the signer’s secret key. The
corresponding public key is Px = xP . Then they do the
following.
1) The signature generation:
1) The signer randomly chooses a number r ∈R Zq,
computes U = rH(c) and then sends U to the
requester.
2) After receiving U, the requester generates two ran-
dom numbers α, β ∈R Zq, computes U ′ = α(h(U)+
β)H(c) and δ ≡q α−1h(m,U ′) + β. She/He then
sends δ back to the signer.
3) Upon getting δ, the signer computes V ≡q (h(U) +
δ)x + r and then sends V back to the requester.
4) After getting V, the requester computes V
′
=
α(V H (c)− U). The signature of m is (U ′, V ′, c).
2) The signature verification: To verify the signature
(U ′, V ′, c) on the messagem, anyone can check if the equation
ê(V
′
, P )= ê(U
′
+ h(m,U
′
)H(c)), Px) holds.
The correctness of the signature (U ′, V ′, c) on the message
m can be verified in the following.
Proposition 1. If the requester and the signer follow the
signature generation protocol properly, then the following
equation holds: ê(V ′ , P ) = ê(U ′ +h(m,U ′)H(c), Px), which
is used in the signature verification process to verify the
validation of the signature (U ′, V ′, c) on the message m.
ê(V
′
, P )
=ê(α(V H (c)− U), P )
=ê(α((h(U) + δ)x+ r)H(c) − αU, P )
=ê(α((h(U) + α−1h(m,U
′
) + β)x+ r)H(c) − αU, P )
=ê(α(h(U) + (α−1h(m,U
′
) + β))H(c), xP )
=ê(αh(U)H(c) + αβH(c) + h(m,U
′
)H(c)), Px)
=ê(U
′
+ h(m,U
′
)H(c), Px). 
III. OUR PROPOSED SCHEME
Without loss of generality, we assume that the fair exchange
scheme is executed in a secure transaction, e.g. SSL, like all
other well-known fair exchange schemes. We assume that there
are two persons for charging the preparation and resolving the
dispute of the fair exchange scheme. One is the trusted bank for
issuing smartcards and anonymous e-cash, and the other is the
trusted service provider for issuing smartcards, and registering
and certificating digital goods. We also assume that the smart
cards issued by these two trusted bank and service provider
and used in our scheme are tamper-resistant.
Our scheme consists of five phases: (1) the initializing
phase, (2) the setup phase, (3) the preparation phase, (4) the
exchange phase, and (5) the resolving dispute phase. In the
initializing phase, the bank and the service provider generate
their private keys and publish the corresponding public keys.
Then, in the setup phase, the bank will issue an e-cash
smartcard to a customer. In this phase, a digital pseudonym
is issued by the bank by a partially blind signature scheme
and stored in this tamper-proof smartcard. Also, the service
provider will issue a smartcard containing a digital pseudonym
to a merchant. This phase only needs to be executed once
for a customer or a merchant except that she/he had revorked
her/his smartcard. In the preparation phase, the merchant will
prepare the certificated encrypted digital goods by the help of
the service provider. The customer will request partially blind
signatures as anonymous e-coins from the bank. This phase can
be executed offline and in advance. In the exchange phase, the
customer and the merchant exchanges the digital goods with
the anonymous e-coins. If there exists any error, the customer
20
(3.1) Getting anonymous e-coins
Before exchanging the digital goods with e-coins, C needs
to withdraw anonymous e-coins. To withdraw an anonymous
e-coin, C’s smart card and B do the following.
1) B randomly chooses a number rb ∈ Zq and computes
Ub = rbH(c),where c is the withdrawal date of this
e-coin. Then she/he sends Ub to C’s smartcard.
2) After getting Ub, C’s smartcard does the following.
a) Choose two random numbers α ∈ Zq and
β ∈ Zq, compute U ′b = α(h(Ub) + β)H(c)
and δ ≡q α−1h(m,U ′) + β, where m is
the blind message contained a predefined
message pattern for the e-coin.
b) She/he then send δ to B.
3) Upon receiving δ, B computes Vb ≡q (h(Ub)+δ)xb+
rb and sends Vb back to C’s smartcard. B deducts w
dollars from C’s bank account for this e-coin, where
w is the denomination of this e-coin.
4) After receiving Vb, C’s smartcard computes V ′ =
α(VbH(c) − Ub). The e-coin is (U ′, V ′, c) and will
be stored in C’s smartcard for being used in the
exchange phase.
(3.2) Getting the certificate of the digital goods
Before exchanging the digital goods with e-coins,M needs
to request the digital goods and get the certificate of this digital
goods from S. To do this, M ’s smart card and S do the
following.
1) The smartcard sends her/his certificate
(U ′s set, V ′s set), the expiration date expirem,
and the corresponding public key Pm pse and
the description of the digital goods desc to S for
requesting the digital goods.
2) If the certificate has not been used and verified
before, S verifies the validability of this certifi-
cate (U ′s set, V ′s set) by checking if ê(V
′
s set, P )=
ê(U
′
s set + h(Pm pse, U
′
set) H(expirem)), Ps). If
the verification is valid or it had verified before,
she/he then computes the common key sksm =
h(xsPm pse, timestampsm) between S and M for
this transaction, where timestampsm is the times-
tamp for generating the one-time common key be-
tween S and M . She/he then encrypts the digi-
tal goods Egoods = Esksm(goods). Then she/he
signs the encrypted goods, and the description of
the digital goods desc on the digital goods goods
by computing s′ = (1/(h(Egoods||desc) + xs))P,
stores (U ′s set, V ′s set, s′) in his database, and sends
the encrypted goods Egoods, the certificate of this
encrypted goods s′, and the timestamp timestampsm
to M .
3) After receiving (Egoods, s′, timestampsm), M ’s
smartcard will store it for the later use in the exchange
phase.
(4) the exchange phase:
When C wants to exchange the digital goods with the
payment, C’s smartcard and M ’s smartcard do the following.
1) C ′s smartcard computes the common key skbc =
h(xc psePb, timestampbc) between S and M for
this transaction, where timestampbc is the timestamp
for generating the one-time common key between
B and C, and encrypts the payment Ee−coin =
Eskbc (payment), where payment is the collection
of valid e-coins (U ′, V ′, c)s withdrawn in the prepa-
ration phase and the total value of payment is
equal to the value of the exchanged goods goods.
Then she/he signs the encrypted payment Epayment,
the description of the digital goods desc, and
the timestamp timestampbc by computing s′pse =
(1/(h(Epayment||desc||timestampbc) + xc pse))P,
stores (U ′, V ′, s′pse, c, timestampbc) in his database,
and sends the encrypted payment information and the
certificate (Epayment, s′pse, c, timestampbc) to M . If
this is the first time to visit M , she/he also sends the
pseudonym (Pc pse, U ′b set, V ′b set, expirec) to M .
2) If this is the first time for C to visit
M , M can verify the validity of the
pseudonym by checking if ê(V
′
b set, P ) =
ê(U
′
b set + h(Pc pse, U
′
b set)H(expirec)), Pb).
If the verification is valid or it had verified
before, this pseudonym is valid issued by B. M
then checks if (Epayment, s′pse) is already in his
database for preventing the double-spending.
M then checks the validability of s′pse by
checking if ê(h(Epayment||desc||timestampbc)P +
Pc pse, s
′
pse) = ê(P, P ). If yes, she/he sends
(Egoods, s
′) to C.
3) C checks the validity of s′ by checking if
ê(h(Egoods||desc)P + Ps, s′) = ê(P, P ). If yes,
she/he sends the common key skcb to M .
4) M then can decrypt the encrypted payment Epayment
by computing Dskbc(Epayment) = payment. She/he
then sends the common key skms to C.
5) After receiving sksm from M, C then can decrypt
the encrypted digital goods Egoods by computing
Dsksm(Egoods) = goods.
Since our proposed can achieve offline transaction by using
tamper-resistant smartcard,M can send the payment payment
to the bank for depositing the payment after the end of
the exchange process. The bank can check if this payment
payment is already in his database for preventing the double-
deposition of the merchant.
(5) the offline resolving dispute phase:
If there exists any dispute, C or M can request the help of
S or B to send skms or skcb to decrypt the encrypted goods
or payment.
(5.1) Case 1: the customer requesting help
1) C sends (Egoods, s′, timestampsm) and
(Pm pse, U ′m set, V ′m set, expirem) to S.
2) S verifies the validity of (U ′s set, V ′s set)
and s′ by checking if ê(V
′
s set, P ) =
ê(U
′
s set + h(Pm pse, U
′
s set)H(expirem)), Ps)
and ê(h(Egoods||desc)P + Ps, s′) = ê(P, P ). If yes,
S computes sksm = h(xsPm pse, timestampsm)
and sends sksm back to C.
22
is a trusted tamper-proof device, the encypted payment will
correctly be encrypted by the common key sk bc and signed
by the private key of the digital pseudonym issued by the
bank. Also, the encrypted digital goods will be prepared by
the service provider properly. If any error occurs, the customer
or the merchant can request the help of the service provider or
the bank to do the offline resolving dispute, get the common
secret key, and decrypt the encrypted payment or digital goods.
So our proposed scheme can provide fair transaction.
C. Double-spending prevention
In the exchange phase, the merchant will check if the
payment (Epayment, s′pse) is already in his database for
preventing the customer from double-spending. If the cus-
tomer can generate a different payment (E ′payment, s′pse) from
(Epayment, s
′
pse), she/he can do double-spending. Based on
the assumption of the digital signature scheme mentioned in
Section 2 is secure and the smartcard is a trusted tamper-proof
device, the customer can not do double-spending.
D. Double-deposition prevention
After the bank receiving the payment payment, she/he
will check if the used e-coin has been deposited by
the merchant for preventing the merchant from double-
deposition. For managing the e-coins stored in the
trusted tamper-resistant smartcard concisely, the signed
payment s′′pse = (1/(h(Epayment||desc||timestampbc) +
xc pse))P can be slightly modified to s′′pse =
(1/(h(Epayment||desc||timestampbc||M) + xc pse))P.
This will include the identity of the merchant M in the
signed payment and prove that these e-coins were spent in
this merchant.
E. Buyer-anonymity
An exchange protocol is buyer-anonymous if and only if
the customer’s identity is not revealed after the exchange phase
in the protocol. Under the assumption of secure partially blind
signature scheme in Section 2, all partially blind signatures as
e-coins signed by the bank are unlinkable regarding the same
withdrawal date. No one, except the customer, can know who
withdraws this e-coin.
F. Truly offline transaction
An optimistic exchange protocol is offline if and only if
the merchant and the customer can exchange their digital
valued goods without needing the help of any third party when
participants are honest and if any error occurs, a trusted third
party can do the offline dispute resolving. In the exchange
phase of our proposed scheme, only the customer and merchant
are involved. Under the assumption of the smartcard is a trusted
tamper-proof device, the encypted payment will correctly be
encrypted by the common key skbc. Also, the encrypted digital
goods will be prepared by the service provider properly in
advance. If any error occurs, the customer or the merchant
can request the help of the service provider or the bank to
do the offline resolving dispute. So our proposed scheme can
provide truly offline transaction for fair exchange.
TABLE II. PERFORMANCE COMPARISONS AMONG OTHER SCHEMES
AND OUR PROPOSED SCHEME
[17] [1] Our scheme
C1 N/A 6E 5ECM+1ECA+6M+8H+1S∼= 1440M ∼= 161 M
C2 31E+9M+24S+16H 14E 4ECP+4ECM+2ECA+1M+4H+5S∼= 2373M ∼= 3360M ∼= 436 M
C3 12E+4H+5S 9E 4ECP +2ECM+2ECA+4H∼= 908M ∼= 2160M ∼= 370M
C4 N/A 5248 1364
C5 15232 11424 1128
C6 3072 7168 976
C1: Compuation cost of the preparation phase
C2: Compuation cost of the exchange phase
C3: Compuation cost of the offline resolving dispute phase
C4: Communication cost of the preparation phase (bits)
C5: Communication cost of the exchange phase (bits)
C6: Communication cost of the offline resolving dispute phase (bits)
N/A: Being combined into the exchange phase
V. PERFORMANCE AND FUNCTIONALITY COMPARISONS
We summarize the communication and computation com-
plexity of related fair exchange schemes in Table II. For
security consideration [14], [19], let p be of 1024 bits and
q be of 160 bits in [19] and n be of 1024 bits in [14] in
order to make the discrete logarithm problem or the factoring
problem infeasible [14], [19]. Let the output size of secure
one-way hashing functions [20] be 160 bits. Let E be the time
of one modular exponential operation in a 1024-bit modulo,
H be the time of one hashing operation, S be the time of
one block symmetric encryption/decryption operation, M be
the time for one modular multiplication in a 1024-bit modulo,
ECM be the time for the multiplication of a number over
an elliptic curve, ECP be the time for the bilinear pairing
operation of two numbers over an elliptic curve, and ECA be
the time for the addition of two numbers over an elliptic curve
[11], [12], [13]. Assume that an elliptic curve over a 163-
bit field has the same level of the security of 1024-bit public
key cryptosystems such as the Diffie-Hellman or the RSA
cryptosystem [13]. Since a point in an elliptic curve consists of
(x,y)-coordinate and for any x-coordinate, so only two possible
y values are in an elliptic curve. We can efficiently encode a
point in an elliptic curve over a 163-bit field using a 164-bit
value. Assume the digital goods if of 128 bits for measuring the
performance of the related schemes. The size of the payment
will depend on the payment scheme used in each scheme.
Assume that E ∼= 8.24 ECM for the implementation with the
StrongARM processor in 200MHz as referenced in [13]. We
also find the relationship E ∼= 600H, E∼= 240 M, ECA ∼= 5M,
and E ∼= 3.2 ECP in [15], [24], [25] . We also can find the
relationship S ∼= 3.4H in [24], where the hash function is SHA
and the corresponding symmetric cryptosystem is IDEA used
in the construction of the Abreast Davies-Meyer one-way hash
function.
Since the initializing phase is executed only once, we do
not compare this cost with related schemes. For a customer or
a merchant, since the setup phase is executed only once for
her/his smartcard and then this smartcard can be used until
it is revoked, we also do not compare this cost with related
schemes.
The computation cost of the preparation phase is not clear
since it is merged to the exchange phase in [17]. The compu-
24
TABLE V. RELATED COMPUTATION COST AND KEY SIZE BASED ON
BILINEAR PAIRING
Operation Execution time or key size
ECA 0.213 minisecond
ECP 63.715 miniseconds
KS 152 bits
ECA: The execution time of two points addition operation on elliptic curve
ECP : The execution time for bilinear pairing operation on elliptic curve
KS : The public/private key size based on bilinear pairing
Also, tamper-resistant smartcards are used in our proposed
scheme for providing the truly offline and fair transaction. Our
proposed scheme can provide the buyer-anonymity function
that will attract privacy concerned customers to use this value
added service. Compared with the related schemes, our pro-
posed fair buyer-anonymity exchange scheme is more efficient,
flexible, and practical for various network environments.
Acknowledgment
This work was supported in part by the National Science
Council of the Republic of China under the Grant NSC 100-
2221-E-327-019-MY2.
REFERENCES
[1] A. Alaraj and M. Munro, ”An Efficient e-Commerce Fair Exchange
Protocol That Encourages Customer and Merchant to Be Honest,”
SAFECOMP 2008, LNCS 5219, pp. 193-206, 2008.
[2] F. Bao, R. Deng and W. Mao, ”Efficient and Practical Fair Exchange
Protocols With Off-line TTP,” In IEEE Symposium on Security and
Privacy, pp. 77-85,1998.
[3] C. Chang and Y. Lai, ”A Flexible Date-attachment Scheme on E-cash,”
Computers & Security, Vol. 22, No. 2, pp. 160-166, 2003.
[4] D. Chaum. ”Untraceable Electronic Mail, Return Addresses, and Digital
Pseudonyms,” Commu. of the ACM, Vol. 24, No. 2, pp. 84-88, 1981.
[5] S. Chow, L. Hui, S. Yiu and K. Chow, ”Two Improved Partially Blind
Signature Schemes From Bilinear Pairings,” Cryptology ePrint Archive,
Report 2004/108.
[6] P. Ezhilchelvan and S. Shrivastava, ”A family of Trusted Third Party
Based Fair-exchange Protocols,” IEEE Transactions on Dependable and
Secure Computing, Vol. 2, No. 4, pp. 273-286, 2005.
[7] C. Fan and Y. Liang, ”Anonymous Fair Transaction Protocols Based on
Electronic Cash,” International Journal of Electronic Commerce, Vol.
13, No. 1, pp. 131-151, 2008.
[8] N. Gonzalez-Deleito and O. Markowitch, ”Exclusions and Related
Trust Relationships in Multi-party Fair Exchange Protocols,” Electronic
Commerce Research and Applications, Vol. 6. No. 3, pp. 343-357, 2007.
[9] W. Juang, C. Lei and H. Liaw, ”Privacy and Anonymity Protection
with Blind Threshold Signatures,” International Journal of Electronic
Commerce, Vol. 7 , No. 2, pp. 145-159, Winter 2002-2003.
[10] W. Juang, ”D-Cash: A Flexible Pre-paid E-cash Scheme for Date-
attachment,” Electronic Commerce Research and Applications, Vol. 6,
No. 1, pp. 74-80, New York, Elsevier Press, 2007.
[11] A. Jurisic and A. Menezes, Elliptic Curves and Cryptography, pp.1-13,
1997.
[12] N. Koblitz, A. Menezes and S. Vanstone, ”The State of Elliptic Curve
Cryptography,” Designs, Codes and Cryptography, Vol. 19, pp. 173-193,
2000.
[13] K. Lauter, ”The Advantages of Elliptic Curve Cryptography for Wireless
Security,” IEEE Wireless Communications, Vol. 11, No. 1, pp. 62-67,
2004.
[14] A. Lenstra, E. Tromer, A. Shamir, W. Kortsmit, B. Dodson, J. Hughes
and P. Leyland, ”Factoring Estimates for a 1024-bit RSA Modulus,” In
Laih, C. (ed.), Advances in Cryptology-AsiaCrypt’03, Lecture Notes in
Computer Science, 2894, pp. 55-74, Springer, New York, 2003.
[15] Z. Li, J. Higgins and M. Clement, ”Performance of Finite Field Arith-
metic in an Elliptic Curve Cryptosystem,” Ninth IEEE International
Symposium on Modeling, Analysis, and Simulation of Computer and
Telecommunications Systems (MASCOTS’01), pp. 249-256, 2001.
[16] X. Liang, Z. Cao, R. Lua and L. Qin, ”Efficient and Secure Protocol in
Fair Document Exchange,” Computer Standards & Interfaces, Vol. 30,
No. 3, pp. 167-176, 2008.
[17] S. Lin and D. Liu, ”A Fair-Exchange and Customer-Anonymity Elec-
tronic Commerce Protocol for Digital Content Transactions,” Proceed-
ings of 4th International Conference on Distributed Computing and
Internet Technology- ICDCIT 2007, LNCS 4882, pp. 321-326, 2007.
[18] S. Micali, ”Simple and Fast Optimistic Protocols for Fair Electronic
Exchange,” Proceedings of the twenty-second annual symposium on
Principles of distributed computing, pp. 12-19, 2003.
[19] NIST FIPS PUB 186-2, ”Digital Signature Standard,” National Institute
of Standards and Technology, U. S. Department of Commerce, 2001.
[20] NIST FIPS PUB 180-2, ”Secure Hash Standard,” National Institute of
Standards and Technology, U. S. Department of Commerce, 2004.
[21] Y. Okada, Y. Manabe and T. Okamoto, ”Optimistic Fair Exchange Pro-
tocol for E-Commerce,” Proceedings of Symposium on Cryptographic
and Information Security-SCIS 2006, 2006.
[22] I. Ray, I. Ray and N. Natarajan, ”An Anonymous and Failure Resilient
Fair-exchange e-Commerce Protocol,” Decision Support Systems, Vol.
39, pp. 267-292, 2005.
[23] I. Ray and H. Zhang, ”Experiences in Developing a Fair-exchange e-
Commerce Protocol Using Common Off-the-shelf Components,” Elec-
tronic Commerce Research and Applications, Vol. 7, No. 2, pp. 247-259,
2008.
[24] B. Schneier, Applied Cryptography, 2nd edition, John Wiley & Sons
Inc., 1996.
[25] K. Takashima, ”Scaling Security of Elliptic Curves with Fast Pairing
Using Efficient Endomorphisms,” IEICE Trans. on Fundamentals, Vol.
E90-A, No.1, pp.152-159, 2007.
[26] H. Vogt, H. Pagnia and F. Gartner, ”Using Smart Cards for Fair Ex-
change,” The Second International Workshop on Electronic Commerce
-WELCOM 2001, LNCS 2232, pp. 101-111, 2001.
[27] F. Zhang, R. Safavi-Naini and W. Susilo, ”An Efficient Signature
Scheme from Bilinear Pairings and Its Applications,” In G. Goos, J.
Hartmanis, and J. van Leeuwen (ed.), Public Key Cryptography-PKC
2004, Lecture Notes in Computer Science, 2947, pp. 277-290, Springer,
New York, 2004.
[28] N. Zhang, Q. Shi, M. Merabti and R. Askwith, ”Practical and Efficient
Fair Document Exchange Over Network,” The Journal of Network and
Computer Applications, Vol. 29, No. 1, pp. 46-61, 2006.
[29] L. Zhang, Q. Wu and B. Qin, ”Identity-based optimistic fair exchange
in the standard model,” Security and Communication Networks, doi:
10.1002/sec.652, 2012.
[30] Y. Zhao, ”An Optimistic Protocol for Distributed Fair Exchange,” Sixth
International Conference on Innovative Mobile and Internet Services in
Ubiquitous Computing(IMIS), pp. 395-399, July 2012.
26
100年度專題研究計畫研究成果彙整表 
計畫主持人：莊文勝 計畫編號：100-2221-E-327-019-MY2 
計畫名稱：雲端計算安全與隱私保護技術之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 3 3 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 6 6 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 3 3 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
