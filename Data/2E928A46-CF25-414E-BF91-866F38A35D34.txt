I 
 
摘要：行動計算與雲端計算是目前受到最多關注的關鍵字，而這兩種技術則包含了相當多
值得深入探討的議題。在資訊安全方面，最常見且最廣為人知的，即是身分認證和信任關
係建立的問題。而在行動計算方面，則是由於電池壽命的限制，迫使我們必須採取更有效
率的密碼演算法及金鑰管理系統。在本計畫中，我們的目標在於建立一程式庫，專門針對
上述兩個領域常見的問題，進行有效率密碼演算法和程序的實作。本計畫第一年實作多變
量密碼系統，本報告將會詳盡說明我們將如何研究探討上述的領域，並實作相關的密碼程
式庫，以提供其他子計畫、甚至是更多的系統開發者使用。
關鍵字：行動計算、雲端計算、資訊安全、多變量密碼系統
Abstract: Mobile Computing and Cloud Computing are both very catchy buzzwords today.
However, there are many things that can go wrong with either or both, and common to both is the
need for authentication and trust establishment. When computing and especially battery power is
limited, we need to have efficient algorithms for cryptographic primitives and key management
schemes. In this project, we aim to establish efficient implementation of primitives and
algorithms that is commonly needed across many areas. We focus on multivariate cryptosystems
in the first year. This report covers how we plan to investigate in these areas and build our
libraries that will be integrated into other projects, and can be used for other purposes.
Keywords: Mobile computing, cloud computing, information security, multivariate cryptography
2 
 
目前多變量加密方案面對這幾個主要的挑戰。新奇性導致了不信任感與長期都
乏人問津。因此相較於 RSA 或 ECC 只有相當少的安全性論證或最佳化。多變
量系統的特性是擁有相當長的公鑰甚至是私鑰。這也讓多變量系統一樣需要較
佳的系統，一如處理 RSA 緩慢的私密對應關係。
在此我們將專注討論在低資源系統的實作。我們將會使用 TTS 作為說明用的範
例，但是以下的原則對於簡縮大部分的多變量加密方案金鑰都是適用的。金鑰
scheduling 讓智慧卡攜帶一個小型的”迷你金鑰”，藉此重建真正的金鑰以及私
密對應關係。另一方面，我們也可以改變線性矩陣的結構，透過這樣的方法可
以減少  與  的參數。因此，我們可以得到一個只需要原來 40%運算時間的私
鑰
雖然大部分的多變量加密金鑰方案都相當快速，而且公鑰的長度都相當的長(因
此非常自然的想要減少記憶體使用量的都會從此出發)，我們認為我們的成果必
須用以下的觀點重新省視。一個加密系統不應只是”很快”，而是盡其可能得
快；在諸多運用當中，我們只需在卡片上儲存私鑰；有些運算可以容忍相對危
險但是必須符合極度有限資源下的限制。RSA 就是一個絕對無法放進低階
RFID 的範例。但是多變量加密系統有可能被塞進這樣的系統，如果他的私鑰可
以被簡縮到一定程度。而針對小型片段進行運算的加密方案也會是個良好的選
擇。多變量加密系統的核心對應矩陣決定了它的性質，特別是他的弱點。所以
如果一個核心對應關係在密碼分析上的複雜度是2   ，使用超過 100 個參數去
建立核心對應矩陣並不會增加安全，反而會導致系統不必要的呆重。
繼續接下來的內容之前，我們必須強調現在並沒有多變量金鑰加密系統的解析
安全性證明，多變量金鑰加密系統的安全性目前仍是未知。這篇論文主要是探
討關於實作的部分，因此即使我們針對現存的攻擊進行實驗後論證加密的可靠
性，但是關於安全性的數學在此加以省略。
在設計與實作針對多變量金鑰系統的金鑰簡縮之前，在此先說明為什麼要針對
現存的加密系統進行修改而非發明新的加密系統。現存的加密系統象徵了前人
累積下來的經驗以及歷史，如果能夠良好的加以改良，我們可以期盼繼承良好
的特性以及重複使用舊有的程式碼，因此減少了錯誤的可能性。
目前主要有四種方法可以做為多變量加密系統的可逆核心對應暗門 :Imai-
Matsumoto’s C*及其後繼變形 SFLASH, PHI+; HFE; Unbalanced Oil-and-
Vinegar; Stepwise Triangular System。這些設計都具有O    的加密複雜度。
4 
 
一般來說，key scheduling(從原本的金鑰產生子鑰或 round key)並不會縮點執行
職間。事實上，通常這會讓所有過程都變的緩慢。但是通常這些都被視為可接
受的，因為短金鑰確實是有它的優勢所在。在 SFLAH 的發表論文裡面，作者
就提到可以購過 key schedule 來進行 SFLASH。我們將會講這個主義與實際執
行相連結，並且提出一個可控制的方法
在這裡我們有幾個可能的候選人。AES 具有已經經過驗證的組合語言程序可供
使用，不管是在 PC 上或者是 8051 單晶片上面。所以我們可以使用 Rijndael 金
鑰生成程序。或者我們也可以使用諸如 RC4 之類的 stream cipher，或者是一些
快速的迴授型 pseudo random number generator (PRNG)。
我們可以很自然地把所有的過程視為 PRNG 或者是 stream cipher。還有兩個可
以觀察到的特點：我們把子鑰(任意數字)放到 buffer 裡面並在需要時輸入資訊；
如果我們希望只在有需要的時候輸出公鑰，我們就需要可以用任意的次序計算  與    。這是一件非常困難的事情，除非我們所需要計算的暫存並不大，因
為我們或許需要為每個階段保存 6~7 個暫存態。
將  與  進行 LU 分解成     ，其中 L 跟 U 代表的是 lower-triangular 與
upper-triangular，D 則是可逆的對角矩陣。接下來透過適當的參數安排與重組以
後，我們可以算出    與    的矩陣積，再把常數項重新加回計算出來的答案
在這裡我們要論證，key scheduling 對於多變量加密系統是有效且可用的。經過
實驗，我們可以在 8051 單晶片上面的 ROM 以 8KB 塞入 SFLASH，以及 4KB
的容量容納 TTS。
四、研究方法
矩陣的分解並不是新玩意。在 GF(q)上面共有    !     1              …         的可逆 N*N 矩陣存在。但是為了要產生一個可逆的矩陣，通
常我們會使用 LU decomposition，但是他只能夠產生   1         個 non-
singular 矩陣。為了要減少儲存空間的需求，我們需要用不同的方法進行矩陣的
分解。
在已發表的文章當中，前人曾經做過兩種用一個 O(n)線性向量乘法步驟取代
non-singular 矩陣乘法：D(J-P)D:將  跟  都展開成L J     的形式，其中 L
跟 R 都是可逆的對角畫矩陣，J 是一個系數皆為 1 的矩陣，  則是一個
6 
 
五、結果與討論
使用了以上這些技巧後，針對任何 TTS 的中心映射關係，我們都可以做出一個
TTS 分支，其中  與  都可以表示為    C    的形式並稱呼為        。我
們只使用 GF(16)的元素來建構中心映射關係。另外，所有的排列都是綁定的:對
於維度少於 32 的情況，每個項目我們只需要 5 bits 去儲存。所以，私鑰總共需
要的儲存量為 289bytes。
安全與機密的議題，譬如認證以及資料的整體性對某些特殊的運用上是非常重
要的。不幸的是，傳統的公鑰加密系統並無法在這些狀況下進行食用，因為這
些感應裝飾所需要的運算資源過於有限。因此，多變量加密系統譬如 enTTS 便
找到了他的可用武之地。
傳統的感應節點只有非常小的 RAM 可以使用，跟與其相較稍大疫點的 PROM，
以及相對之下相當大的 flash 記憶體用來儲存資料以及其他輔助資訊。這對於達
成高效能的簽名是有所幫助的，因為通常這些資料節點需要透過這樣的機制對
於未處理的資料進行處理以維繫資料的完整性。對於驗證方面，我們需要把公
鑰儲存在 flash 記憶體內，因為公鑰通常都過長，無法置入在 RAM 當中。在此，
這是可以忍受的，因為驗證通常都是在相對資源有所餘裕的基地台，雖然在某
些情況下也仍然是靠一般的節點在擔當這個工作。
我們對簽名的過程來對 enTTS(20,28)進行效能的量測。平均的簽名時間是 71 毫
秒，平均的驗證時間則是 726 毫秒。在此需要特別提出一點，在我們進行驗證
的時候，我們花費了相當多的時間在讀取 8680-byte 的公鑰。我們相信如果金鑰
可以儲存在具有更大的 RAM 的系統上面，驗證的速度可以更進一步的加速。
但即使是遇到這樣的問題，這個結果仍然相當的有說服力，特別是與相對傳統
的公鑰加密系統如 ECC 相比較。
8 
 
[15] L. K. Grover, A fast quantum mechanical algorithm for database search, Proc.
28th Annual ACM Symposium on the Theory of Computing, (May ’96) pp. 212–
220.
[16] J. Hill, R. Szewczyk, A. Woo, S. Hollar, D. E. Culler, and K. S. J. Pister, System
Architecture Directions for Networked Sensors, Proc. 9th International
Conference on Architectural Support for Programming Languages and Operating
Systems (November 2000), pp. 93–104.
[17] A. Kipnis, J. Patarin, and L. Goubin, Unbalanced Oil and Vinegar Signature
Schemes, CRYPTO’99, LNCS 1592, pp. 206–222.
[18] D. Malan, M. Welsh, and M. Smith, A Public-Key Infrastructure for Key
Distribution in TinyOS Based on Elliptic Curve Cryptography, First IEEE
International Conference on Sensor and Ad hoc Communications and Networks
(SECON), Santa Clara, CA, USA, October, 2004.
[19] T. Matsumoto and H. Imai, Public Quadratic Polynomial-Tuples for Efficient
Signature-Verification and Message-Encryption, EUROCRYPT’88, LNCS 330, 
pp. 419–453.
[20] J. Patarin, Cryptanalysis of the Matsumoto and Imai Public Key Scheme of
Eurocrypt’88, CRYPTO’95, LNCS 963, pp. 248–261.
[21] J. Patarin, Hidden Fields Equations (HFE) and Isomorphisms of Polynomials
(IP): Two New Families of Asymmetric Algorithms, EUROCRYPT’96, LNCS 
1070, pp. 33–48.
[22] J. Patarin, L. Goubin, and N. Courtois, C∗−+ and HM: Variations Around Two
Schemes of T.Matsumoto and H. Imai, ASIACRYPT’98, LNCS 1514, pp. 35–
49.
[23] J. Patarin, N. Courtois, and L. Goubin, FLASH, a Fast Multivariate Signature
Algorithm, CT-RSA’01, LNCS 2020, pp. 298–307. Updated version available at
http://www.cryptonessie.org/
[24] P. W. Shor, Algorithms for quantum computation: Discrete logarithms and
factoring, Proc. 35nd Annual Symposium on Foundations of Computer Science
(S. Goldwasser, ed.), IEEE Computer Society Press (1994), 124-134.
[25] B.-Y. Yang, Y.-H. Chen, and J.-M. Chen, TTS: High-Speed Signatures on a
Low-Cost Smart Card, CHES’04, LNCS 3156, pp. 371–385.
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
