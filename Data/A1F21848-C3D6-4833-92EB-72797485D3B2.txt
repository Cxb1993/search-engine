（一） 中文摘要: 
本計畫的主要成果是發展以知態邏輯為基礎的資訊融合語意學。知態邏輯可以表達多代理
人系統中每一個 agent 的資訊、知識或信仰，但因每個 agent 所擁有的資訊可能互相衝突，
因此如何將這些資訊融合在一起，去蕪存菁，便成為一個重要的問題。我們的重點是建構
此類邏輯系統的語意學。在這個兩年的計畫中，我們完成了以下資訊融合方法的知態邏輯
語意學: (1)多數決法則，(2)優先法則， (3)協商法 ，(4)一般化聚合法。同時，我們也考慮
資訊不準確時的融合運算。由於現存的大部分資訊融合方法都將融合運算視為後設層級的
運算子，我們方法的特點是將融合運算加到目標邏輯語言中，如此一來，我們不僅可以使
用資訊融合的結果來推理，同時也可以對融合的過程進行推理。 
關鍵詞：知態邏輯，資訊融合，多數決法則，優先法則，協商法，一般化聚合法，可能度
邏輯 
（二） 英文摘要: 
In this project, we formulate some main belief fusion and revision approaches with epistemic 
logic semantics. The fusion operators considered in this project include majority merging, 
arbitration, and general merging. Some modalities corresponding to belief fusion and revision 
operators are added to epistemic logics and the Kripke semantics of these extended logics are 
explored. Furthermore, we also consider the fusion operators for uncertain beliefs. While most 
existing approaches treat belief fusion and revision operators as meta-level constructs, these 
operators are directly incorporated into our object logic language. Thus it is possible to reason 
about not only the merged results but also the fusion process in our logics. 
Keywords：epistemic logic, belief fusion, majority merging, arbitration, general merging, 
possibilistic logic 
（三） 報告內容： 
本計畫成果主要分成三個部分，第一部份為以優先法則為基礎的資訊融合邏輯，此一部分
係延續我們先前的研究成果，並已發表於 ACM Transactions on Computational Logic，2005
年的期刊中。第二部份則以多數決法則，協商法 ，與一般化聚合法等為基礎的知態邏輯語
意學，此一部分為本計畫中主要的研究成果，並已發表於 Journal of Applied Non-classical 
Logics，2004 年的期刊中。第三部份係考慮將第一部份的成果推廣到資訊不準確的情況下，
其主要成果分別發表於國際會議 IJCAI2005 與 RSFDGrC2005 中。 
 
 
 
 
A Modal Logic Framework for Multi-Agent
Belief Fusion
CHURN-JUNG LIAU
Academia Sinica, Taipei, Taiwan
This article provides a modal logic framework for reasoning about multi-agent belief and its fusion.
We propose logics for reasoning about cautiously merged agent beliefs that have different degrees of
reliability. These logics are obtained by combining the multi-agent epistemic logic and multi-source
reasoning systems. The fusion is cautious in the sense that if an agent’s belief is in conflict with those
of higher priorities, then his belief is completely discarded from the merged result. We consider two
strategies for the cautious merging of beliefs. In the first, called level cutting fusion, if inconsistency
occurs at some level, then all beliefs at the lower levels are discarded simultaneously. In the second,
called level skipping fusion, only the level at which the inconsistency occurs is skipped. We present
the formal semantics and axiomatic systems for these two strategies and discuss some applications
of the proposed logical systems. We also develop a tableau proof system for the logics and prove the
complexity result for the satisfiability and validity problems of these logics.
Categories and Subject Descriptors: F.4.1 [Mathematical Logic and Formal Languages]: Math-
ematical Logic—Modal logic; I.2.4 [Artificial Intelligence]: Knowledge Representation Forma-
tions and Methods—Modal logic
General Terms: Design, Languages, Theory
Additional Key Words and Phrases: Epistemic logic, multi-sources reasoning, database merging,
belief fusion, belief revision, multi-agent systems
1. INTRODUCTION
Recently, attention has been focussed on the infoglut problem in information
retrieval research due to the rapid growth of internet information. If a key-
word is input to a commonly used search engine, it is not unusual to receive
a list of thousands of web pages; the real difficulty is not how to find informa-
tion, but how to locate useful information. Many software agents have been
designed to solve the infoglut problem while conducting searches. The agents
search through the web and try to find information matching the user’s need.
A preliminary version of this article has appeared as “A conservative approach to distributed belief
fusion,” In Proceedings of the 3rd International Conference on Information Fusion, MoD4–1.
Author’s address: Institute of Information Science, Academia Sinica, Taipei 115, Taiwan; email:
laiucj@iis.sinica.edu.tw.
Permission to make digital or hard copies of part or all of this work for personal or classroom use is
granted without fee provided that copies are not made or distributed for profit or direct commercial
advantage and that copies show this notice on the first page or initial screen of a display along
with the full citation. Copyrights for components of this work owned by others than ACM must be
honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers,
to redistribute to lists, or to use any component of this work in other works requires prior specific
permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 1515
Broadway, New York, NY 10036 USA, fax: +1 (212) 869-0481, or permissions@acm.org.
C© 2005 ACM 1529-3785/05/0100-0124 $5.00
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005, Pages 124–174.
126 • Churn-Jung Liau
merged. In this case, everything can be deduced from the distributed beliefs
due to the notorious omniscience property of epistemic logic; the merged result
will then be useless for further reasoning.
Instead of directly merging all beliefs of the agents together, there are many
sophisticated techniques for knowledge base merging [Baral et al. 1991, 1992,
1994; Cholvy 1994; Cholvy and Hunter 1997; Konieczny 2000; Konieczny and
Pino Pe´rez 1998, 1999; Lin 1994, 1996; Lin and Mendelzon 1999; Nebel 1994;
Pradhan et al. 1995; Subrahmanian 1994]. Most approaches treat belief fu-
sion operators as meta-level constructs, so for a given set of knowledge bases,
fusion operators will return the merged results. Some of the approaches pro-
pose concrete operators that can be used directly in the fusion process, while
others stipulate the desirable properties of reasonable belief fusion operators
by postulates. However, few of the approaches have the capability to reason
about the fusion process.2 One of a few exceptions is multisource reasoning
[Cholvy 1994].
Multisource reasoning models the fusion process of multiple databases in a
modal logic. Its goal is to merge a set of databases according to a total ordering
of the set that is to be merged. Each database is a finite and satisfiable set of
literals. Two attitudes for merging are considered. According to the suspicious
attitude, if a database contains a literal that is inconsistent with those in the
databases with higher reliability, then the database is completely discarded
from the merged result. On the other hand, according to the trusting attitude,
if a literal in a database is inconsistent with those in the databases with higher
reliability, only the literal is discarded, and other literals in the database are
still considered if they are consistent with those in the databases of higher
reliability.
Since multisource reasoning is modeled in a modal logic framework, it is
very useful when integrated with epistemic logic. Its restriction is that each
database must be a set of literals; however, in the multi-agent epistemic logic,
it is expected that more complex compound formulas will be believed by agents.
Therefore, we have to extend the multisources reasoning to the more general
case. To achieve the purpose, the distributed knowledge operators in multi-
agent epistemic logic can be used. What we have to do is to adapt the multi-agent
epistemic logic so that the distributed knowledge among a group of agents with
reliability ordering can also be defined. However, since the set of facts believed
by an agent is closed under classical logical equivalence, whereas the trusting
attitude of multi-source reasoning adopts a syntax-dependent fusion, it cannot
be modeled directly. For example, if p and q are both believed by an agent and
¬p ∨ ¬q is believed by another agent with higher reliability, then using the
trusting attitude, either p or q should be in the merged result (assuming no
other conflicts exist); however, it is obvious that the belief of the first agent is
equivalent to p ∧ q, and if it is expressed in this way, then no belief of the first
agent (except the obvious tautology) should be included in the merged belief.
Therefore, we only consider the merging of beliefs according to the suspicious
attitude; this approach is very cautious from the viewpoint of belief fusion.
2A more detail comparison of these approaches and ours is given in Section 5.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
128 • Churn-Jung Liau
compare the proposed logics with some existing works. Finally, we conclude and
discuss some further research directions in Section 6.
1.1 Notational Preliminary
In the following presentation, we extensively use the notions of ordering rela-
tions. Let X be a set, then a binary relation ≥ over X is:
(1) reflexive if x ≥ x for all x ∈ X ;
(2) transitive if x ≥ y ∧ y ≥ z ⇒ x ≥ z for all x, y , z ∈ X ;
(3) anti-symmetric if x ≥ y ∧ y ≥ x ⇒ x = y for all x, y ∈ X ;
(4) a pre-order if it is reflexive and transitive;
(5) a partial order if it is a pre-order satisfying anti-symmetry;
(6) a total pre-order (or connected order) if it is a pre-order and x ≥ y ∨ y ≥ x
for all x, y ∈ X ;
(7) a total order if it is a total pre-order satisfying anti-symmetry.
We write x > y as the abbreviation of x ≥ y and y ≥ x, and the binary
relation “>” is the strict version of ≥. For example, if “≥” is a total order, then
“>” is a strict total order. An element y is said to be an immediate >-successor
of another element x if x > y , and there does not exist any element z ∈ X such
that x > z and z > y . A total order (X , ≥) contains a partial order (X , ≥′) if
x ≥′ y ⇒ x ≥ y for all x, y ∈ X .
To encode the degrees of reliability of n agents, we use ordering relations over
any subset of {1, . . . , n}. Let T On denote the set of all possible total orders over
any nonempty subset of {1, . . . , n}, then we can associate with each total order in
T On a unique syntactic notation. Let X = {i1, i2, . . . , im} be a nonempty subset
of {1, . . . , n} and ≥ be a total order such that i j ≥ ik iff j ≤ k for all 1 ≤, j , k ≤ m,
then the syntactic notation for (X , ≥) is the string
i1 > i2 > · · · > im.
In this article, the capital letter O is used as meta-variables ranging over such
notations. Let O be the string i1 > i2 > · · · > im, then the set {i1, i2, . . . , im} is
called the domain of O and is denoted by δ(O). In this case, O > im+1 denotes
i1 > i2 > · · · > im > im+1 if im+1 ∈ δ(O). As the syntactic notation is unique for
each total order, we can also identify the notation with the total order itself, so
we can write O ∈ T On. Furthermore, the upper-case Greek letter  is used as
meta-variables ranging over nonempty subsets of T On.
Analogously, if (X , ≥) is a partial order, then its syntactic notation is
{x > y | x, y ∈ X , y is an immediate >−successor of x}.
We use the capital letter Q as meta-variables ranging over such notations and
also identify it with the corresponding partial order. Let Q be a partial order
over X , then T O Q denotes the set of all total orders over X containing Q .
We use some standard notations for binary relations in the following presen-
tation. If R ⊆ X × Y is a binary relation between X and Y , we write R(x, y)
for (x, y) ∈ R and R(x) for the subset { y ∈ Y | R(x, y)}. A binary relation
R ⊆ X × Y is serial if ∀x∃ y R(x, y).
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
130 • Churn-Jung Liau
2.2 Semantics
The semantics for DBFcn is based on the possible world semantics for multi-
agent epistemic logic [Fagin et al. 1996].
Definition 3. A DBFcn model for the language Lc is a structure
(W, (Ri)1≤i≤n, V ),
where
—W is a set of possible worlds,
—Ri ⊆ W × W is a serial binary relation over W for 1 ≤ i ≤ n,
—V : 0 → 2W is a truth assignment mapping each atomic proposition to the
set of worlds in which it is true.
From the binary relations Ri ’s, we define two sets of derived relations. First,
for each nonempty G ⊆ Ag , we define
RG = ∩i∈GRi.
Second, for each O ∈ T On, the relation RcO is defined in an inductive way as:
RcO>i(w) =
{
RcO (w) if
⋂
j∈δ(O>i)R j (w) = ∅,
RcO (w) ∩Ri(w) otherwise,
for any w ∈ W . The superscript c denotes level cutting fusion and can usually
be omitted when the context is clear.
Let O = i1 > i2 > · · · > im and define G j = {i1, i2 . . . , i j } for 1 ≤ j ≤ m and
assume k is the largest j such that
⋂
i∈G j Ri(w) = ∅, then we have
RO (w) =
⋂
i∈Gk
Ri(w).
In other words, beliefs from agents after level k are completely discarded from
the merged result. Our rationale behind this is that if belief in level k + 1 is
not acceptable, then any belief in a less reliable level is also not acceptable.
Therefore, k plays the role of a dynamic threshold in uncertainty reasoning.
Informally, Ri(w) is the set of worlds that agent i considers possible under
w according to his belief, so RG(w) and RO (w) are the set of worlds which are
considered possible under w, respectively, according to the direct fusion and
the ordered fusion of agents’ beliefs. The informal intuition is reflected in the
definition of the satisfaction relation.
Definition 4. Let M = (W, (Ri)1≤i≤n, V ) be a DBFcn model and  be the
set of wffs of Lc, then the satisfaction relation |=M ⊆ W ×  is defined by the
following inductive rules (we use the infix notation for the relation and omit
the subscript M for convenience):
(1) w |= p iff w ∈ V (p) for any p ∈ 0,
(2) w |= ⊥ and w |= ,
(3) w |= ¬ϕ iff w |= ϕ,
(4) w |= ϕ ∨ ψ iff w |= ϕ or w |= ψ ,
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
132 • Churn-Jung Liau
is presented. That is,
D{i}ϕ ≡ Biϕ,
where D{i}ϕ and Biϕ correspond, respectively, to wffs [{i}]ϕ and [i]ϕ in our logic.
However, we do not need this axiom because [i]ϕ ≡ [{i}]ϕ can be derived from
G2, O1, and MP. We can therefore write [i] for both modalities [i] and [{i}].
The two axioms O1 and O2 recursively define the merged belief in terms of
distributed belief. O1 is the case when
⋂
j∈δ(O>i)Ri(w) = ∅, whereas O2 is the
opposite case.
The derivability in the system is defined as follows: A wff ϕ is derivable from
the system DBFcn, or put simply, ϕ is a theorem of DBF
c
n, if there is a finite
sequence ϕ1, . . . , ϕm such that ϕ = ϕm and every ϕi is an instance of an axiom
schema or obtained from earlier ϕ j ’s by the application of an inference rule. It
is written as DBFcn ϕ if ϕ is a theorem of DBFcn. Let  ∪ {ϕ} be a subset of wffs,
then ϕ is derivable from  in the system DBFcn , written as  DBFcn ϕ, if there
is a finite subset ′ of  such that DBFcn
∧
′ ⊃ ϕ. We will drop the subscript
when no confusion occurs.
Some basic theorems can be derived from the system DBFcn.
PROPOSITION 1. For any O = i1 > i2 > · · · > im and G j = {i1, i2 . . . , i j }(1 ≤
j ≤ m), we have:
(1)  (¬[G j ]⊥ ∧ [G j+1]⊥) ⊃ ([O]ϕ ≡ [G j ]ϕ), where the wff [G j+1]⊥ is deleted
from the antecedent when j = m.
(2)  ([O]ϕ ∧ [O](ϕ ⊃ ψ)) ⊃ [O]ψ ,
(3)  ¬[O]⊥,
(4)
ϕ
[O]ϕ
.
PROOF. The proof of all propositions and theorems can be found in the
appendix.
Proposition 1(1) shows that any total order can be separated into a head
and a tail according to some consistency level, and the merged belief according
to the ordering is just the distributed belief of the agents from the head part.
Proposition 1(2) and 1(4) show that merged belief inherits the properties of the
distributed belief since the former is equivalent to the latter for the head part
of the ordering. Furthermore, Proposition 1(3) shows that belief fusion keeps
consistency.
We have the soundness and completeness results for the system DBFcn.
THEOREM 2.1. For any wff of DBFcn, |= ϕ iff  ϕ.
2.4 Applications and Examples
The level cutting strategy is especially useful in situations where levels are
of crucial importance to reasoning. In particular, if we would like to accept
only statements above some threshold level and the threshold is determined
by the consistency of statement, then a level cutting strategy can be used. In
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
134 • Churn-Jung Liau
so for any classical wff ϕ, (ϕ, Incons(S)) is a trivial logical consequence of S.
On the contrary, if S |=PL1 (ϕ, α) for some α > Incons(S), then ϕ is called a
nontrivial consequence of S.
To model the nontrivial deduction of PL1, we assume that the weights of PL1
wffs in a set S are drawn from a finite subset V = {α1, . . . , αn} of (0, 1]. Without
loss of generality, we can assume α1 > · · · > αn. For 1 ≤ i ≤ n, let us define Si
as:
Si = {ϕ | (ϕ, αi) ∈ S}.
Assume that G is a subset of {1, 2, . . . , n}, then G is consistent for S if ⋃i∈G Si
is classically consistent, otherwise, it is inconsistent for S. A subset G is a
maximal consistent agent group for S if G is consistent for S and for any i ∈
G, G ∪ {i} is inconsistent for S. Let MCAGS denote the class of all maximal
consistent agent groups for S, then we can associate with S a set S of wffs in
Lc as:
S =
n⋃
i=1
{[i]ϕ | ϕ ∈ Si} ∪ {¬[G]⊥ | G ∈ MCAGS}.
The nontrivial deduction can then modeled in the logic DBFcn in the following
way.
PROPOSITION 2. Let S be a set of PL1 wff and each Si be classically consistent,
then for any ϕ ∈ L(0), ϕ is a nontrivial consequence of S iff S DBFcn [1 >
2 > · · · > n]ϕ.
We illustrate this application with an example from Dubois and Prade [1991].
Example 1 (Dubois and Prade [1991]). Let us consider a knowledge base
S consisting of the following PL1 facts:
—if Le´a is a student, then it is rather certain that she is young,
—if Le´a is young, then it is fairly certain that she is single,
—if Le´a is a student and is a mother, then it is almost certain that she is not
single,
—Le´a is a student.
Let p1=“Le´a is a student”, p2=“Le´a is young”, p3=“Le´a is single”, and p4 = “Le´a
is a mother”, then our premise S is the following set:
{[1]p1, [2](p1 ∧ p4 ⊃ ¬p3), [3](p2 ⊃ p3), [4](p1 ⊃ p2), ¬[{1, 2, 3, 4}]⊥}.
Therefore, we can derive
S DBFc4 [1 > 2 > 3 > 4](p2 ∧ p3).
However, if we add to S another fact “Le´a is a mother”, then S becomes the
set
{[1]p1, [1]p4, [2](p1 ∧ p4 ⊃ ¬p3), [3](p2 ⊃ p3), [4](p1 ⊃ p2),
¬[{1, 2, 3}]⊥, ¬[{1, 2, 4}]⊥, ¬[{1, 3, 4}]⊥, ¬[{2, 3, 4}]⊥},
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
136 • Churn-Jung Liau
Table I. Degrees of Confirmation for
Statements in the Lottery Paradox
Statement Degree of Confirmation∨N
i=1 pi very high
¬pi(1 ≤ i ≤ N ) fairly high
pi(1 ≤ i ≤ N ) very low
In accordance with this table, we can construct a set of wffs  as follows:{
[1]
N∨
i=1
pi
}
∪ {[2]¬pi | 1 ≤ i ≤ N } ∪ {[3]pi | 1 ≤ i ≤ N } ∪ {¬[{1, 3}]⊥}.
Note that ¬[{1, 3}]⊥ is added into  because the beliefs of agent 1 and 3 (i.e.,∨N
i=1 pi and pi(1 ≤ i ≤ N )) are consistent. Consequently, we have   [1 >
2 > 3]
∨N
i=1 pi; we do not however have   [1 > 2 > 3]pi for any pi, though
  ¬[{1, 3}]⊥. This is due to the fact that levels play the role of thresholds in the
reasoning. When inconsistency occurs at level 2, the threshold of acceptance is
set to level 1, so even though the statements at level 3 are completely consistent
with those at level 1, they cannot be accepted. Indeed, the result is intuitively
reasonable. Though we accept the fact that someone will win, it is very unlikely
that all persons will win.
2.4.3 Information Security in Multilevel Systems. Information security is
concerned with whether the disclosure of information is authorized, whereas
the objective of multilevel information security is to protect information that is
classified with respect to a multilevel hierarchy. Two main tasks are essential
for the information security in multilevel systems: authorization and authenti-
cation. With authorization, an agent can obtain permission to access informa-
tion, and by authentication, the agent safe-guarding the information can decide
whether an agent requesting access right has permission. In a distributed com-
puting environment, the authorization center is, in general, independent of
the information center, so it is necessary for the information center to decide
whether the request of an agent can be granted. In the next example, we show
that level cutting fusion can help reduce the probability of security breach.
Example 3. In the following simplification of a realistic scenario, we as-
sume the existence of n agents with different levels, an authorization center,
and an information center in which multilevel secrecy is resident. Authoriza-
tion is achieved by the distribution of a key to the agents who are permitted
to access the information. As the pieces of information change with time, the
authorization center may decide to change and redistribute the key. Depend-
ing on the classification levels of the information at the time when the key is
distributed, the authorization center will dynamically decide to which level of
agents information access is permitted. However, since the authorization center
is independent of the information center, the latter does not know the decision
of the former, so all the information center can do is to decide whether grant the
access request of an agent by checking his/her key. The scenario is illustrated
by Figure 2.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
138 • Churn-Jung Liau
1 − (1 − α)n−l to α. The point is that the agent at level l + 1 will help block the
security intrusion of other agents if it is a verity agent.
3. LOGIC FOR LEVEL SKIPPING FUSION
Though the level cutting strategy is useful in practice, it is sometimes too cau-
tious from the perspective of information fusion. A less cautious strategy is to
skip only the agent causing inconsistency and continue to consider the next
level. This strategy corresponds to the suspicious attitude of multisource rea-
soning and has been used in belief revision by Nebel [1994]. To model the belief
fusion using this strategy, we introduce the logic DBFsn for level skipping dis-
tributed belief fusion in this section.
3.1 Syntax
Let Ls denote the language of DBFsn with syntax formally defined as:
Definition 5. The alphabet of Ls is same as that of Lc, and the wffs of Ls
are defined by rules 1-4 for that of Lc and the following fifth rule.
(5) if ϕ is a wff, so are []ϕ for any nonempty  ⊆ T On.
When  is a singleton {O}, we write [O]ϕ instead of [{O}]ϕ. If  =
{O1, . . . , Om} is such that |δ(Oi)| = 1 for all i’s, then [] is the distributed belief
operator among ordinary agents. Therefore, the language is more general than
that of DBFcn.
3.2 Semantics
For the semantics, a DBFsn model is same as a DBF
c
n model, so given a model
(W, (Ri)1≤i≤n, V ), we can define RsO inductively.
RsO>i(w) =
{RsO (w) if RsO (w) ∩Ri(w) = ∅,
RsO (w) ∩Ri(w) otherwise,
for any w ∈ W . As in the case ofRcO , the superscript s denotes the level skipping
strategy and can be omitted when the context is clear. We can also define
R =
⋂
O∈
RO .
Then, the satisfaction relation between the possible worlds and wffs of Ls
must satisfy clauses (1)–(4) of Definition 4 and the following fifth clause.
(5) w |= []ϕ iff for all u ∈ R(w), u |= ϕ.
In accordance with the definition, [O > i]ϕ will be equivalent to the dis-
tributed fusion of [O]ϕ and [i]ϕ when the belief of i is consistent with the
merged belief of O. To axiomatize reasoning under the strategy, we can view O
as a virtual agent and consider the distributed belief between O and i. How-
ever, to get a bit more general, we also consider the distributed belief among a
group of arbitrary virtual agents. This is why we include wffs of the form []ϕ
in Ls.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
140 • Churn-Jung Liau
Example 4. If a set of premises  = {¬[{1, 2}]⊥ ∨ ¬[{1, 3}]⊥, [1](p ⊃
q), [2]p, [3]¬q} is given for three agents, then it can be derived that
 DBFs3 [1 > 2 > 3]((p ∧ q) ∨ (¬p ∧ ¬q))
and
 DBFc3 [1 > 2 > 3](p ⊃ q).
The wff ¬[{1, 2}]⊥ ∨ ¬[{1, 3}]⊥ says that if the beliefs of agents 1 and 2 are
incompatible, then those of 1 and 3 are compatible, so the level skipping strategy
will either accept the belief of agent 2 or ignore it and consequently accept
that of agent 3. This example shows that we can reason with the compatibility
of the agents’ beliefs in the uniform framework of epistemic reasoning and
information fusion.
The next example shows that the belief about belief may play a role in the
fusion process.
Example 5. Assume there are two agents whose beliefs are described by
the following set:
 = {[1]¬[{1, 2}]⊥, [1]p, [1][1]p, [1][2]q
[2][{1, 2}]⊥, [2]q, [2][2]q, [2][1]p}
It can then be shown that [1 > 2]p∧[2 > 1]q, [1][1 > 2](p∧q)∧[1][2 > 1](p∧q),
and [2][1 > 2]p ∧ [2][2 > 1]q are derivable from  in both DBFs2 and DBFc2.
Thus the belief of agent 1 is incorrect because he wrongly believes that he
is consistent with agent 2, while agent 2 in fact disagrees with him on the
consistency between them.
Sometimes, it is possible to infer individual agent beliefs from their merged
beliefs. The next example shows a very simple case.
Example 6. Assume it is known that two premises [1 > 2]p and [2 > 1]¬p
hold, then we have the following derivation in DBFs2:
(1)¬[{1, 2}]⊥ ⊃ ([1 > 2]p ⊃ [{1, 2}]p) O1′
(2)¬[{1, 2}]⊥ ⊃ ([2 > 1]¬p ⊃ [{1, 2}]¬p) O1′
(3)([1 > 2]p ∧ [2 > 1]¬p) ⊃ (¬[{1, 2}]⊥ ⊃ ([{1, 2}]
p ∧ [{1, 2}]¬p)) 1, 2, P, MP
(4)([1 > 2]p ∧ [2 > 1]¬p) ⊃ (¬[{1, 2}]⊥ ⊃ [{1, 2}]⊥) 3, P, G1, MP, Gen
(5)([1 > 2]p ∧ [2 > 1]¬p) ⊃ [{1, 2}]⊥ 4, P
(6)[{1, 2}]⊥ ⊃ ([1 > 2]p ⊃ [1]p) O2′, MP
(7)[{1, 2}]⊥ ⊃ ([2 > 1]¬p ⊃ [2]¬p) O2′, MP
(8)([1 > 2]p ∧ [2 > 1]¬p) ⊃ ([1]p ∧ [2]¬p) 6, 7, P, MP
When there are more than two agents, the situation becomes more complicated.
However, it is still possible to derive some individual or partially merged beliefs
from the totally merged ones.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
142 • Churn-Jung Liau
{[1]p, [2]q}; however, if T1 = {p∧q}, then it is simply translated into {[1](p∧q)}.
This results in the following proposition.
PROPOSITION 3
(1) Let S be a preferred subtheory of T, then there exists a total ordering O ∈
T O Q such that S |= ϕ iff T DBFsn [O]ϕ for any classical logic formula ϕ.
(2) Let O ∈ T O Q be a total ordering over {1, 2, . . . , n}, then there exists a pre-
ferred subtheory S of T such that S |= ϕ iff T DBFsn [O]ϕ for any classical
logic formula ϕ.
Example 7. Let us consider a slightly modified version of the meeting ex-
ample presented in Brewka [1991]. In that example, the following level default
theory is given:
T1 = { COLD, VACATION ⊃ ¬R1, COLD ⊃ ¬R2, COLD ⊃ SICK}
T2 = {R2, R2 ⊃ ( SICK ⊃ ¬R1)}
T3 = {R1, R1 ⊃ MEETING}.
Then S = T1 ∪ T3 ∪ {R2 ⊃ ( SICK ⊃ ¬R1)} is a preferred subtheory of (T1, T2, T3)
and it can be seen that S |= MEETING. By our simulation steps, there are 8
agents and the translated theory T is
{[1] COLD, [2](VACATION ⊃ ¬R1), . . . , [8](R1 ⊃ MEETING)} ∪ {¬[G]⊥ | G ∈ MCAG8}
Since {1, 2, 3, 4, 6, 7, 8} ∈ MCAG8, it can be shown that T DBFsn [1 > · · · >
8]ϕ ≡ [{1, 2, 3, 4, 6, 7, 8}]ϕ for all wff ϕ. using the definition of T , we have
T DBFsn [{7, 8}] MEETING, so T DBFsn [1 > · · · > 8] MEETING holds.
One of the earliest approaches to knowledge merging is to manipulate the
maximal consistent subsets of the union of component databases. In Baral et al.
[1991, 1992, 1994], knowledge bases with integrity constraints are combined
by a meta-level combination operator to form a new knowledge base. While in
Baral et al. [1991, 1994], logic programs and default logic theories that have
different semantics than the classical logic are considered, the basic mechanism
for combining first-order theories in Baral et al. [1992] can be considered a
special case of reasoning with a preferred subtheory. In Baral et al. [1992], a
combination operator C maps a set of knowledge bases {T1, . . . , Tk} and a set
of integrity constraints IC into a new knowledge base C(T1, . . . , Tk , IC) that
can be roughly considered as the disjunction of maximally consistent subsets
of T1 ∪ T2 ∪ · · ·∪ Tk with respect to IC. More precisely, let T = (IC, T1 ∪ · · ·∪ Tk)
be a level default theory and PF T is the set of preferred subtheories of T , then
C(T1, . . . , Tk , IC) =
∨
S∈PF T
∧
S.
Therefore, by Proposition 3, we have the following result.
COROLLARY 1. Let T = (IC, T1 ∪ · · · ∪ Tk) be a level default theory and the
partial ordering Q be defined as in the simulation Step 7, then for all classical
logic formula ϕ,
T DBFsn [Q]ϕ ⇔ C(T1, . . . , Tk , IC) |= ϕ.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
144 • Churn-Jung Liau
Fig. 4. A full adder.
(3) [i](¬ab(c1) ∧ · · · ∧ ¬ab(ck)) if i is associated with a subsystem consisting of
the components c1, . . . , ck , and
(4) ¬[G]⊥ if G is a maximal consistent agent group, that is, [G]⊥ is not deriv-
able from the preceding three kinds of wffs.
Let σ : {2, . . . , n} → {2, . . . , n} be a bijective function and O denote the total
ordering 1 > σ (2) > · · · > σ (n), then the set
D = {c ∈ COMPS | S DBFsn [O]¬ab(c)}
constructs a diagnosis of the system S. We will say that the ordering O respects
the reliability of the components if for any c and c′ ∈ COMPS such that c is more
reliable than c′, the agent associated with c precedes that associated with c′ in
O. If we have enough reliability information of the components, the number of
possible diagnoses will reduce when only orderings respecting the reliability of
the components are considered for the diagnostic reasoning.
Example 8 (Flat Diagnosis). Let us consider the diagnosis of a digital cir-
cuit shown in Figure 4. This circuit has been extensively used in the literature
[Reiter 1987]. The atomic components of the circuit consist of two “exclusive-or”
gates X 1 and X 2, two “and” gates A1 and A2, and one “or” gate R1. The system
description SD contains the following classical logic formulas:5
¬ab(X 1) ⊃ out(X 1) ≡ (in1(X 1) ⊕ in2(X 1))
¬ab(X 2) ⊃ out(X 2) ≡ (in(A2) ⊕ out(X 1))
¬ab(A1) ⊃ out(A1) ≡ (in1(X 1) ∧ in2(X 1))
¬ab(A2) ⊃ out(A2) ≡ (in(A2) ∧ out(X 1))
¬ab(R1) ⊃ out(R1) ≡ (out(A1) ∨ out(A2))
and the observation OB contains
in1(X 1), ¬in2(X 1), in(A2), ¬out(X 2), ¬out(R1).
5The formula p ⊕ q denotes the abbreviation of (p ∧ ¬q) ∨ (¬p ∧ q).
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
146 • Churn-Jung Liau
Fig. 5. The uniform notation for modal logic formulas.
general hard to find a proof for a given formula in an automatic way because
with the use of the modus ponens rule, we have to look for a proof of ψ and
ψ ⊃ ϕ for the proof of ϕ. However, since ψ may be an arbitrary formula without
any relation to the target formula ϕ, the search has to be exhaustive.
Other calculi, such as resolution, Gentzen’s sequent calculus, and tableau
methods, have been proposed for the purpose of automated theorem proving.
The subformula property of these methods makes it possible to find a proof
by managing only the formula and its subformula. Among them, the tableau
method (or its variant, Gentzen’s sequent calculus) has received much atten-
tion in the automation of modal logic theorem prover recently. While resolu-
tion is the commonly-used proof method in classical logic, it is less attractive
in the modal logic realm due to the requirement that formulas must be con-
verted into normal form before applying resolution-style rules. The advan-
tage of the tableau method is its strong connection with the semantics as
each tableau rule reflects the semantic intuition behind a logical connective or
operator.
The pioneering proof methods for modal logic were developed by Fitting
[1983], in which the systems of prefixed tableaux are presented. A system of
prefixed tableaux makes explicit reference to the possible worlds in the Kripke
model. We can consider the prefixed tableau method an instance of the general
methodology of labelled deductive systems proposed in Gabbay [1996]. Instead
of representing possible worlds as prefixes that describe paths in the model
from the initial world as in Fitting’s systems, Baldoni et al. [1998] develop a
tableau calculus for multimodal logics by giving each new possible world an
atomic name and representing explicitly the accessibility relationships among
them. Following the method in Baldoni et al. [1998], we also present the tableau
calculus for our logic in that way.
To avoid repetition of some structurally similar rules, a uniform notation
invented by Smullyan [1968] and extended in Fitting [1983] has been adopted
extensively in the tableau methods for modal logics. The uniform notation speci-
fies the decomposition of a formula into its components and is shown in Figure 5.
The rationale behind the tableau proof method is to find a counter-model
for the negation of a wff. If this is impossible, then the original wff is valid.
Therefore, to test the validity of a wff ϕ, let w be a prefix denoting an arbitrary
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
148 • Churn-Jung Liau
that we identify the singleton {i} with i. Also, when the rules are applied, a
prefix is new if it has never appeared in the branch; otherwise, it is called an old
prefix.
These rules are divided into three groups. First, there are two kinds of classi-
cal rules. The extension rules add the conclusions to the end of a branch directly,
and the added nodes are organized as a branch and attached to the end of the
original branch. The forking rules add the conclusions as the children of the end
node of the original branch. In the propositional case, all forking rules have ex-
actly two conclusions, so one is the left child and the other is the right child,
and the proof tree is binary.
Second, the modal rules can be seen as a special instance of those for inclusion
modal logics and incestual modal logics in Baldoni [1998]. In particular, the
rule D is due to the serial accessibility relation for each individual agent, and
can be characterized by a special incestual axiom. However, it must be noted
that the unrestricted application of rule D may cause nontermination of the
proof search process since we can always introduce a new ρi-successor for any
prefix currently available in the branch. Therefore, we require that the following
conditions must be satisfied before the rule D can be applied to an available
prefix w:
(1) there are some necessity formulas νi such that w : νi has appeared previ-
ously, and
(2) there does not exist any prefix w′ and subset of agents G such that i ∈ G
and wρGw′ has been in the branch.
In other words, for each available prefix w and agent i, rule D is applied at most
once, and only when the prefix appears in the front of some ν formulas.
As for other modal rules, they are only applicable to distributed belief oper-
ators. Since a modal operator [G] can be seen as a special kind of [] operator,
it exists in both logics DBFcn and DBF
s
n. Therefore, the modal rules, as well as
classical rules, are common to DBFcn and DBF
s
n.
On the other hand, the DBFcn rule and DBF
s
n rule, as the names suggest, are
specific to the respective logics. These rules are direct translations of the axioms
O1, O2, O1′, and O2′. By repeatedly applying these rules, all modal operators
can be ultimately reduced to the distributed belief operators in the form [G], so
the modal rules can then be applied.
A branch in a tableau is closed if it contains w : ⊥, w : ¬, or both w : ϕ
and w : ¬ϕ for some prefix w and wff ϕ. A branch not closed is called an open
branch. A tableau is closed if all its branches are closed. Note that, in ordinary
modal tableaux, we have to find an open branch in every newly accessed possible
world for the construction of a counter-model. However, by using prefixed wffs,
an open branch in our modal tableaux corresponds to a bunch of open branches
in ordinary modal tableaux.
A wff ϕ is tableau provable in DBFcn(respectively, DBF
s
n), denoted by ‖−DBFcnϕ
(respectively, ‖−DBFsnϕ), if there is a closed tableau with w : ¬ϕ as its root, using
the set of classical, modal, and DBFcn(respectively, DBF
s
n) rules. Such a closed
tableau is said to be a proof of ϕ. Then we have:
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
150 • Churn-Jung Liau
Fig. 7. A tableau proof for the wff in Example 4.
is tableau provable. The proof is given in Figure 7. By using the macro DBFsn
rule, the tableau tree is no longer binary. Indeed, the proof in Figure 7 is split
into four branches below the double lines due to the occurrence of ¬[1 > 2 >
3]((p ∧ q) ∨ (¬p ∧ ¬q)), where δ(1 > 2 > 3) has four subsets containing 1. The
first three branches are shown in Figure 7(a), whereas the last branch is shown
in Figure 7(b). Before splitting occurs, we apply α rule to the wffs repeatedly.
For the first three branches, the πG and νG rules are needed to obtain the
desired refutation. However, for the last branch, only β rule is needed. Note
that we in fact use the generalized νG rule instead of the ρ rule. Therefore,
since wρ{1,2,3}w′, w : [1](p ⊃ q), w : [2]p, and w : [3]q appear in the first branch,
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
152 • Churn-Jung Liau
are essentially constants independent of the size of ϕ. Furthermore, the bound
is quite loose, but it is enough for the present purpose.
The bound on |Sub+c (ϕ)| and |Sub+s (ϕ)| guarantee that the pretableau con-
structed for ϕ in DBFcn or DBF
s
n has a height at most O(m
2) by using exactly
the same proof as that in Halpern and Moses [1992]. Since the nodes in the
pretableau for ϕ are labeled with subsets of Sub+c (ϕ) or Sub
+
s (ϕ), the label of
each node can be represented by a length O(m) bit-string again. Therefore, by
using DFS, the total space needed for deciding the satisfiability of ϕ is O(m3).
This shows that the satisfiability problem for DBFcn and DBF
s
n is in PSPACE.
Since both DBFcn and DBF
s
n are extensions of the multi-agent epistemic logic
KDDn , which in turn is an extension of the normal modal logic KD [Chellas
1980], and it has been shown that the satisfiability problem for KD is PSPACE-
complete [Ladner 1977], we can know that the satisfiability problem for DBFcn
and DBFsn is PSPACE-hard. Therefore, we have:
THEOREM 4.2. The satisfiability problem for DBFcn and DBF
s
n is PSPACE-
complete.
Using this theorem, the validity problem for DBFcn and DBF
s
n is co-
PSPACE-complete. However, since PSPACE is deterministic complexity class,
co-PSPACE is identical to PSPACE, so the validity problem for DBFcn and DBF
s
n
is also PSPACE-complete.
5. EXTENSIONS AND RELATED WORK
5.1 A Generic Extension
While we adopt a modal logic approach to belief fusion, there have also been a
lot of work done on knowledge merging using meta-level operators. The main
approaches include the following:
(1) Combination based on maximal consistency [Baral et al. 1991, 1992, 1994;
Benferhat and Garcia 1998].
(2) Combination by meta-information [Pradhan et al. 1995; Subrahmanian
1994].
(3) Merging by majority [Lin 1994, 1996; Lin and Mendelzon 1999].
(4) Arbitration [Liberatore and Schaerf 1995; Revesz 1993, 1997].
(5) General merging [Konieczny 2000; Konieczny and Pino Pe´rez 1998, 1999].
(6) Belief revision and update [Alchourro´n et al. 1985; Katsuno and Medelzon
1991a, 1999b].
In the meta-level approach, a merging operator is generally used to combine
a set of knowledge bases T1, T2, . . . , Tn, where each knowledge base is a theory
in some logical langauge. The main difference between our approach and the
meta-level approach is that the belief fusion operators are incorporated into the
object language in our logic, so we can reason with the merged results and also
about the fusion process. These meta-level fusion operators can be divided into
syntax-based or semantics-based types. A general scheme for semantics-based
knowledge merging operators is shown in Figure 8.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
154 • Churn-Jung Liau
PROPOSITION 5. Let T = {T1, . . . , Tn} be a set of knowledge bases in a propo-
sitional logic language, then for any semantics-based merging operator  with
extra parameters κ, there exists an Le model M = (W, (Ri)1≤i≤n, V ) and w ∈ W
such that w |=M T and for any propositional formula ϕ,
w |=M [({1, . . . , n}, κ)]ϕ iff (T1, . . . , Tn, κ) |= ϕ.
A direct corollary of the proposition is:
COROLLARY 3. If T |= [(G, κ)]ϕ, then (T1, . . . , Tn, κ) |= ϕ.
Admittedly, the syntactic and semantic extension of the modal logic framework
for the semantics-based merging operators is quite general and preliminary.
For each individual merging operator, more details must be worked out in some
specific way. In particular, the axiomatic and proof systems for each specific
logic may be quite different. Also, the converse of Corollary 3 may not hold for
general cases, however, it would be interesting to know whether it indeed holds
for some specific merging operators. This will be left for further research and
we believe that the general methodology proposed in this article will be helpful
for such development.
5.2 Related Works
The most similar previous work is multi-agent epistemic logic [Fagin et al.
1996] and multisource reasoning [Cholvy 1994]. On the one hand, it is clear
that DBFcn and DBF
s
n extend the multi-agent epistemic logic KD
D
n . On the other
hand, in multisource reasoning, fusion modalities are only applicable to literals
(i.e., atomic formulas or their negations), whereas our fusion modalities may
be applied to any complicated wffs. Therefore, our logics add expressive power
to both multi-agent epistemic logic and multisource reasoning.
Modal logic for representing inconsistent beliefs is another research area
related to both epistemic logic and belief fusion. In Meyer and van der Hoek
[1998], an epistemic default logic is proposed for the representation of inconsis-
tent beliefs caused by default reasoning. The logic is based on S5P developed in
Meyer and van der Hoek [1991, 1992, 1993] for modelling the monotonic part
of default reasoning that deals with plausible assumptions. The basic modali-
ties of S5P consist of an S5 epistemic operator K and a number of K45 belief
operators Pi(1 ≤ i ≤ n). A wff Piϕ means that ϕ is a plausible working belief in
accordance with some context or default rules. Since conflict between default
rules is not unusual, it is possible that Piϕ∧ Pj ¬ϕ holds. Though Pi corresponds
to an application context of some default rules, it can also be seen as the belief
operator of some agent, so in this regard, the logic is like a multi-agent epistemic
logic with an S5-based epistemic operator as its authority. However, instead of
reasoning about the merging of different working beliefs in the logic directly,
a downward reflection approach is adopted in Meyer and van der Hoek [1998].
Since Pi operators are only applied to objective wffs in Meyer and van der Hoek
[1998], the downward reflection function maps a set of S5P wffs (especially
wffs of the form Piϕ) into a set of nonmodal formulas. Some downward reflec-
tion mechanisms are employed to resolve the inconsistency between working
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
156 • Churn-Jung Liau
sophisticated belief fusion operators proposed in knowledge base merging.
While most of the knowledge base merging research takes the fusion process as
a meta-level operator, our approach incorporates it into the object logic directly.
Therefore, it is possible to integrate the belief fusion operators into the multi-
agent epistemic logic. The advantage of using epistemic logic is its capability
to reason with not only the beliefs about the objective world but also the beliefs
about beliefs.
In our discussion of the belief fusion logic, we did not distinguish between
belief and information. However, in a genuine agent systems, an agent’s belief
may be different than the information he sends to or receives from other agents.
Thus, in general, we should have a set of modal operators [ j ]i such that [ j ]iϕ
means that agent i receives the information ϕ from j . In particular, [i]iϕ may
represent the observation of agent i himself, which should be the most reliable
information source for i. Then, agent i may form his belief by fusing the infor-
mation he received from different agents according to the degrees of trust he
has on other agents. The fusion may be represented by the operators [O]i. If
we consider [ j ]iϕ as the communication of message ϕ from j to i, then we have
a general framework for reasoning about an agent’s belief and communication.
In such a framework, we can discuss problems like deception of agent. For ex-
ample, [O]iϕ ∧ [i] j ¬ϕ may mean that agent i deceives agent j by telling j the
negation of what i believes. In [Demolombe and Liau 2001], an application of our
basic systems to reasoning about beliefs and trusts of multiple agents has been
proposed along this direction. However, more work remains to be done for real
applications. These applications may also take advantage of some fundamental
work on multi-agent belief revision [Dragoni 1992; Dragoni and Giorgini 2001;
Dragoni et al. 1997; Galliers 1992; Kfir-Dahav and Tennenholtz 1996].
In this article, we consider the reliability ordering over agents, so the belief
of one agent is either completely discarded or completely accepted. A possible
extension is to partially accept the belief of one agent in the fusion process. For
example, we can trust agent 1 about topic A and trust agent 2 about topic B,
then in the merged belief, we can selectively discard the belief of agent 1 about
topic B and the belief of agent 2 about topic A. This kind of extension will require
reliability orderings over pairs of agent and information. A logic for partially
accepting some of what one agent says has been proposed in Liau [2003].
In a recent article, it was shown that multi-source reasoning can be applied
to deontic logic under conflicting regulations [Cholvy and Cuppens 1999]. Es-
sentially, conflicting regulations are merged according to their priorities in a
way analogous to the fusion of information. However, inherited from the re-
striction of multisources reasoning, it is also required that each regulation to
be merged must be a set of deontic literals. Now, by the systems developed here,
it is expected that the general forms of regulations can also be merged.
A real difficulty in the application of our logic to model the database merg-
ing reasoning is the representational problem of the databases. In some ex-
amples of Sections 2 and 3, we suggest to find all maximal consistent agent
groups in advance and add the wff
∧
G∈MCAG ¬[G]⊥ to the representation. This
is rather time-consuming work. In practice, we can omit this part and check
the consistency of some agent groups when it is necessary during the course
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
158 • Churn-Jung Liau
(4) By induction on |δ(O)|: if |δ(O)| = 1, this is an instance of Gen rule. Assume
it is the case for modal operator [O], let us consider the proof for [O > i]
1.ϕ Assumption
2.[O]ϕ Ind. Hyp.
3.[δ(O > i)]ϕ Gen
4.[O > i]ϕ ≡ ([δ(O > i)]ϕ ∨ [O]ϕ) O1, O2, P, MP
5.[O > i]ϕ 2, 3, 4, P, MP
A.2 Proof of Theorem 2.1
The proof of the theorem is based on that for S5Dn in Fagin et al. [1992, 1996]. As
usual, the verification of the soundness part is a routine checking, so we focus on
the completeness part. Let L denote a logical system. A wff ϕ is L-inconsistent
if its negation ¬ϕ can be proved in L. Otherwise, ϕ is L-consistent. A set 
of wffs is said to be L-inconsistent if there is a finite subset {ϕ1, . . . , ϕk} ⊆ 
such that the wff ϕ1 ∧ · · · ∧ ϕk is L-inconsistent; otherwise,  is L-consistent.
A maximal L-consistent set of wffs (L-MCS) is a consistent set χ of wffs such
that whenever ψ is a wff not in χ , then χ ∪ {ψ} is L-inconsistent.
On the other hand, ϕ is L-satisfiable iff there exists a L model M and a
possible world w such that w |=M ϕ, otherwise ϕ is L-unsatisfiable. Sometimes,
the prefix L will be omitted without confusion. To prove the completeness, we
will show that every DBFcn-consistent wff is DBF
c
n-satisfiable.
Let I = T On ∪2{1,2...,n} −{∅} be the set of all modal operators for the language
DBFcn. A pseudo DBF
c
n structure is a tuple (W, (R∗I )I∈I , V ) where W and V are
defined as in DBFcn models and eachR∗I is a binary relation on W . Furthermore,
it is required that R∗{i} is a serial relation for each 1 ≤ i ≤ n. The satisfaction
clauses for DBFcn wffs in pseudostructures are defined as usual, so for example,
we have w |= [O]ϕ iff for u ∈ R∗O (w), u |= ϕ. What make difference is that in
a pseudostructures, each R∗I is considered as an independent relation instead
of the intersection of other individual ones. A pseudostructure M ∗ is called a
pseudomodel if all wffs provable in DBFcn are valid in M
∗. A DBFcn wff ϕ is
pseudosatisfiable if there exists a pseudomodel M ∗ and a possible world w such
that w |=M ∗ ϕ.
The following two results will be proved:
LEMMA 1
(1) If ϕ is DBFcn-consistent, then ϕ is pseudo-DBF
c
n-satisfiable.
(2) If ϕ is pseudo DBFcn-satisfiable, then it is DBF
c
n-satisfiable.
The first result is proved by a standard canonical model construction proce-
dure. A canonical pseudostructure M ∗ = (W, (RI )∗I∈I , V ) is defined as follows:
—W = {wχ | χ is a DBFcn-MCS}, in other words, each possible world corresponds
precisely to a DBFcn-MCS.
—R∗I (wχ1 , wχ2 ) iff χ1/I ⊆ χ2 for all I ∈ I, where χ1/I = {ϕ | [I ]ϕ ∈ χ1}.
—V : 0 → 2W is defined by V (p) = {wχ | p ∈ χ}.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
160 • Churn-Jung Liau
This finishes the proof for the second part of Lemma 1 and by combining the
two parts, we have proved the completeness theorem for DBFcn.
A.3 Proof of Proposition 2
Let k denote the largest integer such that αk > Incons(), then Gk =
{1, 2, . . . , k} is a subset of some maximal consistent agent group for S and
Gk+1 = {1, 2, . . . , k + 1} is inconsistent for S, so by the definition of S , we
have S DBFcn ¬[Gk]⊥ ∧ [Gk+1]⊥. (In the case of k = n, Gk+1 is omitted.)
Since ϕ is a nontrivial consequence of S, it is a classical logical consequence
of
⋃
i∈Gk Si, we have S DBFcn [Gk]ϕ. Therefore, by Proposition 1(1), we have
S DBFcn [1 > 2 > · · · > n]ϕ.
A.4 Proof of Theorem 3.1
This proof is analogous to that for Theorem 2.1. The difference is that we do
not have a counterpart for Proposition 1.1 in the system DBFsn. First, a pseudo-
DBFsn structure is analogously defined as a tuple (W, (R)∅=⊆T On , V ) and it is
required that R{i} is serial for all 1 ≤ i ≤ n. Then, a pseudo-DBFsn model is a
pseudo-DBFsn structure in which all wffs provable in DBF
s
n are valid.
We still have to prove the following lemma.
LEMMA 4
(1) If ϕ is DBFsn-consistent, then ϕ is pseudo-DBF
s
n-satisfiable.
(2) If ϕ is pseudo-DBFsn-satisfiable, then it is DBF
s
n-satisfiable.
The first part of the lemma is proved exactly in the same way as in Lemma 1.
It can also be obtained that if ϕ is DBFsn-consistent, then ϕ is pseudo-DBF
s
n-
satisfiable in a tree-like model M ∗ = (W, (R∗)∅=⊆T On , V ).
However, the proof of the second part is somewhat different. Let us define
the level of a modal operator  as l () = maxO∈ |δ(O)| and the length of 
as () = the number of elements O in  such that |δ(O)| = l (). Then we
define a function Ag∗ : W × (2T On − {∅}) → (2{1,2,...,n} − ∅) from the model M ∗
by
Ag∗(w, ) =


⋃
O∈ Ag
∗(w, {O}) if || > 1,
Ag∗(w, {O}) ∪ {i} if  = {O > i} and w |=M ∗ ¬[{O, i}]⊥,
Ag∗(w, {O}) if  = {O > i} and w |=M ∗ [{O, i}]⊥,
{i} if  = {i}.
Note that since Ag∗(w, ) is a subset of agents, it can also be used as a modal
operator for level 1. We can now construct a DBFsn model M = (W, (Ri)1≤i≤n, V )
from M ∗ such that Ri =
⋃
l ()=1,i∈R∗.
LEMMA 5
(1) For all w ∈ W, modal operators , and wffs ϕ, we have w |=M ∗ []ϕ ≡
[Ag∗(w, )]ϕ.
(2) R(w) =
⋃{R∗′ (w) | l (′) = 1 ∧ Ag∗(w, ) ⊆ ′} for all w ∈ W and modal
operators , where R is defined in Section 4.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
162 • Churn-Jung Liau
— || > 1: by definition
R(w) =
⋂
O∈
RO (w)
=
⋂
O∈
⋃
{R∗′ (w) | l (′) = 1 ∧ Ag∗(w, {O}) ⊆ ′}
=
⋃
{R∗′ (w) | l (′) = 1 ∧
⋃
O∈
Ag∗(w, {O}) ⊆ ′}
=
⋃
{R∗′ (w) | l (′) = 1 ∧ Ag∗(w, ) ⊆ ′}.
Finally, we can prove the counterpart of Lemma 3 for DBFsn
LEMMA 6. For any w ∈ W and wff ϕ, w |=M ∗ ϕ iff w |=M ϕ.
PROOF. By induction on the structure of ϕ, the only interesting case is ϕ =
[]ψ ,
w |=M ∗ []ψ ⇔ w |=M ∗ [Ag∗(w, )]ψ (Lemma 5(1))
⇔ w |=M ∗ [′]ψ for all ′ such that l (′) = 1 and Ag∗(w, ) ⊆
′ (V3)
⇔ u |=M ∗ ψ, ∀u ∈
⋃
{R∗′ (w) | l (′) = 1 ∧ Ag∗(w, ) ⊆ ′}
⇔ u |=M ψ, ∀u ∈ R(w) (induction hypothesis and Lemma 5(2))
⇔ w |=M []ψ.
This completes the proof of the second part of Lemma 4 and the completeness
theorem for DBFsn.
A.5 Proof of Proposition 3
(1) Let S = S1 ∪ · · · ∪ Sk , then extend the partial ordering Q such that for
all x, y ∈ {1, 2, . . . , n}, if ϕi j1 ∈ Si and ϕi j2 ∈ Si, where i = g1(x) = g1( y),
g2(x) = j1 and g2( y) = j2, then x > y in the extended ordering. In other
words, agents corresponding to those formulas in S have precedence over
those not. Let O be any total ordering containing such extended partial
ordering, then O ∈ T O Q . By the definition of the preferred subtheory, we
have T DBFsn [O]ϕ ≡ [GS]ϕ, where GS = { f (i, j ) | ϕij ∈ S}. From the
definition of T , it follows that T DBFsn [GS]ϕ iff S |= ϕ for any classical
formula ϕ.
(2) Let us denote ϕij by ϕm if f (i, j ) = m and without loss of generality, we can
assume that O = 1 > 2 > · · · > n, then we can define S1 = {ϕ1} and
Si+1 =
{
Si ∪ {ϕi+1} if Si ∪ {ϕi+1} isconsistent,
Si otherwise
Let S = Sn and G = {m | ϕm ∈ S}, then it is obvious that T DBFsn [O]ϕ ≡
[G]ϕ. Since O respects the preference between different Tis, it can be seen
that S is a preferred subtheory of T by the construction. By the definition
of T , T DBFsn [G]ϕ iff S |= ϕ for any classical formula ϕ.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
164 • Churn-Jung Liau
LEMMA 8. Let L denote DBFcn or DBF
s
n and ϕ be a wff in L, then ‖−Lϕ implies
|=L ϕ.
PROOF. First, it is noted that a closed tableau is not satisfiable. If |=L ϕ, then
there exists an L model M = (W, (Ri)1≤i≤n, V ) and u ∈ W such that u |=M ¬ϕ,
so the initial tableau that consists of only the root node w : ¬ϕ is satisfiable
by the prefix assignment I with I (w) = u. Since ϕ is tableau provable in L, a
closed tableau will result from that initial tableau by repeated application of the
tableau rules. However, by the preceding lemma, any tableaux obtained in this
way, including the closed one, should also be satisfiable. This is a contradiction,
so |=L ϕ is impossible if ϕ is tableau provable in L.
To prove the completeness of the tableau calculus, we assume that the
tableau starting with the formula w : ¬ϕ is not closed, so there is at least
an open branch on which no more rules can be applied. The open branch may
be finite or infinite. Let S denote the tableau formulas appearing on this open
branch. We first show that the set S contains “enough information” for con-
structing a countermodel of ϕ.
Definition A.1. A set S of tableau formulas is said to be downward satu-
rated if it satisfies the following conditions:
(1) there does not exists any atomic wff p and prefix w such that w : p ∈ S and
w : ¬p ∈ S;
(2) if ¬¬ψ ∈ S, then ψ ∈ S;
(3) if w : α ∈ S, then w : α1 ∈ S and w : α2 ∈ S;
(4) if w : β ∈ S, then w : β1 ∈ S or w : β2 ∈ S;
(5) if w : νG ∈ S, then w′ : νG0 ∈ S for all w′ such that wρGw′ ∈ S;
(6) if w : πG ∈ S, then w′ : νG0 ∈ S for some w′ such that wρGw′ ∈ S;
(7) for each w, if there exists νi such that w : νi ∈ S, then there exists G and
w′ such that i ∈ G and wρGw′ ∈ S;
(8) if wρG1w
′ ∈ S, then wρG2w′ ∈ S for all G2 ⊆ G1.
Definition A.2. A downward saturated set S of tableau formulas is DBFcn-
saturated if in addition it satisfies the following two conditions:
(1) if w : [O > i]ψ ∈ S, then both w : [δ(O > i)]⊥ and w : [O]ψ ∈ S or both
w : ¬[δ(O > i)]⊥ and w : [δ(O > i)]ψ ∈ S
(2) if w : ¬[O > i]ψ ∈ S, then both w : [δ(O > i)]⊥ and w : ¬[O]ψ ∈ S or both
w : ¬[δ(O > i)]⊥ and w : ¬[δ(O > i)]ψ ∈ S
Definition A.3. A downward saturated set S of tableau formulas is DBFsn-
saturated if in addition it satisfies the following two conditions:
(1) if w : [ ∪ {O > i}]ψ ∈ S, then both w : [{O, i}]⊥ and w : [ ∪ {O}]ψ ∈ S or
both w : ¬[{O, i}]⊥ and w : [ ∪ {O, i}]ψ ∈ S
(2) if w : ¬[ ∪ {O > i}]ψ ∈ S, then both w : [{O, i}]⊥ and w : ¬[ ∪ {O}]ψ ∈ S
or both w : ¬[{O, i}]⊥ and w : ¬[ ∪ {O, i}]ψ ∈ S
From these definitions, we immediately have the following lemma.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
166 • Churn-Jung Liau
PROOF. As usual, the lemma can be proven by induction on the complexity
of the wff.
The basis cases: if w : p ∈ S, then by the construction of V , w |=MS p and if
w : ¬p ∈ S, then by the saturation of S, w : p ∈ S, so by the construction of V ,
w |=MS ¬p.
The inductive step is considered case by case.
(1) The Classical Cases: If w : ¬¬ψ ∈ S, w : α ∈ S, or w : β ∈ S, then it can be
easily proven in the usual way.
(2) The π Case: If w : πG ∈ S, then by the saturation of S, there exists a prefix
w′ such that w′ : πG0 ∈ S and wρGw′ ∈ S. By Lemma 10, RG(w, w′), and
by the inductive assumption, w′ |=MS πG0 , so w |=MS πG according to the
semantics.
(3) The ν Case: This is a more complicated case. We first note that if i = j
and w is both i-dead end and j -dead end, then dw,i = dw, j . Therefore, by
the definition of RG , if |G| > 1, then for all w ∈ P and d ∈ D, ¬RG(w, d )
holds. Furthermore, if w is not an i-dead end, then ¬Ri(w, d ) holds for all
d ∈ D. Assume w : νG ∈ S for some G such that |G| > 1, then for all w′
such thatRG(w, w′), we have wρGw′ ∈ S by Lemma 10, so by the saturation
of S, w′ : νG0 ∈ S. Due to the inductive assumption, this means that for all
w′, if RG(w, w′), then w′ |=MS νG0 , so w |=MS νG by the semantics. For the
case of w : νi ∈ S, if w is not an i-dead end, then the proof is exactly as
above. However, if w is an i-dead end, then by the saturation condition 7, it
is impossible that there is any νi such that w : νi ∈ S, so the ν case is done.
(4) The O Case: There are two subcases depending on w : [O]ψ ∈ S or w :
¬[O]ψ ∈ S. We will prove the first subcase and the second can be proven
analogously. The proof is based on another induction on the cardinality of
δ(O). If |δ(O)| = 1, then the result has been proven in the ν case. Assume
the result holds for all O such that |δ(O)| ≤ k and let O > i be a total
order such that |δ(O)| = k. Due to the DBFcn saturation of S, if w : [O >
i]ψ ∈ S, then either w : [δ(O > i)]⊥, w : [O]ψ ∈ S or w : ¬[δ(O > i)]⊥, w :
[δ(O > i)]ψ ∈ S. For the former case, w |=MS [δ(O > i)]⊥ by the ν case and
w |=MS [O]ψ by the inductive assumption. By the semantics, this means
that ∩ j∈δ(O>i)R j (w) = ∅ and for all w′ ∈ RO (w), w′ |=MS ψ . Therefore,
w |=MS [O > i]ψ , since RO>i(w) = RO (w) if ∩ j∈δ(O>i)R j (w) = ∅. For the
latter case, w |=MS ¬[δ(O > i)]⊥ by the π case, so it follows ∩ j∈δ(O>i)R j (w) =
∅. This implies RO>i(w) = Rδ(O>i)(w), so w |=MS [O > i]ψ since w |=MS
[δ(O > i)]ψ by the ν case.
(5) The  Case: There are also two subcases depending on w : []ψ ∈ S or
w : ¬[]ψ ∈ S. We still prove only the first subcase. The proof is based on
an induction on the lexicographical ordering >lex over the pairs (l (), ())
of levels and lengths of . For the basis case, if l () = 1, then  is simply
a subset of agents, so the result holds by the ν case. Let ′ =  ∪ {O > i}
be a subset of total orders such that |δ(O > i)| = l (), then it can be shown
that
(l (′), (′)) >lex (l ( ∪ {O, i}), ( ∪ {O, i})),
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
168 • Churn-Jung Liau
Fig. 9. Repeated application of DBFsn rules for the derivation of macro DBF
s
n rules.
(b) i ∈ G, so G ⊆ δ(O). By inductive assumption (see the left subtree of
Figure 9), we can show that
11 = {w : [G ∪ {i}]⊥} ∪
{
w : ψ | ψ ∈ OG
}
21 = {w : [ ∪ G]ϕ} ∪
{
w : ψ | ψ ∈ OG
}
and
{w : [ ∪ G]ϕ} ∪ {w : ψ | ψ ∈ O>iG } ⊆ 11 ∪ 21.
A.8 Proof of Theorem 4.2
First, we prove the following lemma.
LEMMA 13. The satisfiability problem for DBFcn and DBF
s
n is PSPACE-hard.
PROOF. The proof can be achieved by reducing the satisfiability problem for
propositional modal logic KD to that for DBFcn and DBF
s
n. Let 0 be the set of
atomic propositions, then the set of well-formed formulas (wff) for KD is the
least set containing 0 and closed under Boolean connectives and the unary
modal operator . For the semantics, a KD model is a triple (W,R, V ), where
W is a set of possible worlds, R is a serial binary relation over W , and V is a
truth assignment, and the main clause for the satisfaction are:
—w |= ϕ iff for all u ∈ R(w), u |= ϕ.
Obviously, we can translate wffs of KD into those of DBFcn or DBF
s
n. The trans-
lation τ is defined by
(1) τ (p) = p if p ∈ 0,
(2) τ (¬ϕ) = ¬τ (ϕ) and τ (ϕ ∨ ψ) = τ (ϕ) ∨ τ (ψ),
(3) τ (ϕ) = [1]τ (ϕ).
By the semantics, we have |=KD ϕ iff |=DBFcn τ (ϕ) iff |=DBFsn τ (ϕ) for any wff ϕ
of KD. Therefore, the PSPACE-hardness of the satisfiability problem for DBFcn
and DBFsn follows immediately from the PSPACE-completeness of KD, which
has been shown in Ladner [1977].
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
170 • Churn-Jung Liau
Fig. 11. The pretableau for (¬[1]p ∧ ¬[2]p) ∧ [1 > 2]p.
Step 2(a) and the application of rule D to Step 2(c) in that procedure. A set 
of wff is called blatantly inconsistent if for some formula ψ , both ψ and ¬ψ is
in  or ⊥ ∈ . We assume an arbitrary enumeration of the wffs is given, so in
Step 2(a), we can find the least witness to the fact that a set of wffs is not closed
under all of classical and DBFcn (or DBF
s
n) rules.
Then, all proofs that the algorithm for deciding the satisfiability of Kn wffs
need polynomial space can be carried out in the cases of DBFcn and DBF
s
n by our
definitions of Sub+c (ϕ) and Sub
+
s (ϕ) (possibly with the difference of a constant
factor). The main results are summarized as follows:
LEMMA 15
(1) For all wffs of size m, the DBFcn or DBF
s
n pretableau construction procedure
terminates and the final tree constructed in the procedure has height at most
O(m2).
(2) A wff ϕ is DBFcn (or DBF
s
n) satisfiable iff the DBF
c
n (or DBF
s
n) pretableau
construction for ϕ returns “ϕ is satisfiable”.
(3) The DBFcn (or DBF
s
n) pretableau construction procedure needs O(m
3) space
by using of depth-first search.
Example 11. We present a simple example to illustrate the pretableau con-
struction procedure. Let us consider the formula
ϕ0 = (¬[1]p ∧ ¬[2]p) ∧ [1 > 2]p,
then our procedure will construct a tree in Figure 11. In that tree, L(s0) = {ϕ0},
L(s1) = L(s0) ∪ {¬[1]p ∧ ¬[2]p), [1 > 2]p},
L(s2) = L(s1) ∪ {¬[1]p, ¬[2]p}
L(s31) = L(s2) ∪ {[{1, 2}]⊥, [1]p}
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
172 • Churn-Jung Liau
BENFERHAT, S. AND GARCIA, L. 1998. A local handling of inconsistent knowledge and default bases.
In Applications of Uncertainty Formalisms, A. Hunter and S. Parsons, Eds. Lecture Notes in
Artificial Intelligence, vol. 1455. Springer-Verlag, New York, 325–353.
BOUTILIER, C. 1993. Revision sequences and nested conditionals. In Proceedings of the 13th In-
ternational Joint Conference on Artificial Intelligence. 519–525.
BOUTILIER, C. 1995. Generalized update: Belief change in dynamic settings. In Proceedings of the
14th International Joint Conference on Artificial Intelligence. 1550–1556.
BREWKA, G. 1991. Nonmonotonic Reasoning: Logical Foundations of Commonsense. Cambridge
University Press.
CHELLAS, B. 1980. Modal Logic: An Introduction. Cambridge University Press.
CHOLVY, L. 1994. A logiccal approach to multi-souces reasoning. In Knowledge Representation
and Reasoning under Uncertainty, M. Masuch and L. Po´los, Eds. Lecture Notes in Computer
Science, vol. 808. Springer-Verlag, New York, 183–196.
CHOLVY, L. AND CUPPENS, F. 1999. Reasoning about norms provided by conflicting regulations . In
Norms, Logics and Information Systems, P. McNamara and H. Prakken, Eds. IOS Press, 247–
262.
CHOLVY, L. AND HUNTER, A. 1997. Information fusion in logic: A brief overview. In Qualitative and
Quantitative Practical Reasoning (ECSQARU’97/FAPR’97). Lecture Notes in Artificial Intelli-
gence, vol. 1244. Springer-Verlag, New York, 86–95.
DARWICHE, A. AND PEARL, J. 1997. On the logic of iterated belief revision. Artif. Intel. 89, 1, 1–29.
DEMOLOMBE, R. AND LIAU, C. J. 2001. “A logic of graded trust and belief fusion”. In Proceedings of
the 4th Workshop on Deception, Fraud and Trust in Agent Societies. 13–25.
DENNETT, D. 1987. The Intentional Stance. MIT Press, Cambridge, Mass.
DRAGONI, A. 1992. A model for belief revision in a multi-agent environment. In Decentralized A.I.
3. Proceedings of the 3rd European Workshop on Modeling Autonomous Agents in a Multi-Agent
World, Y. Demazeau and E. Werner, Eds. Elsevier Science Publisher, 103–112.
DRAGONI, A. AND GIORGINI, P. 2001. Revisining beliefs received from multiple sources. In Frontiers
in Belief Revision, H. Roth and M. Williams, Eds. Kluwer Academic Publisher, 431–444.
DRAGONI, A., GIORGINI, P., AND BAFFETTI, M. 1997. Distributed belief revision vs. belief revision in
a multi-agent environment: First results of a simulation experiment. In Multi-Agent Rationality:
Proceedings of the 8th European Workshop on Modelling Autonomous Agents in a Multi-Agent
World, M. Boman and W. V. de Velde, Eds. Lecture Notes in Artificial Intelligence, vol. 1237,
Springer-Verlag, New York, 45–62.
DUBOIS, D., LANG, J., AND PRADE, H. 1991. Fuzzy sets in approximate reasoning, Part 2: Logical
approaches. Fuzzy Sets and Systems 40, 203–244.
DUBOIS, D., LANG, J., AND PRADE, H. 1994. Possibilistic logic. In Handbook of Logic in Artificial
Intelligence and Logic Programming, Vol. 3 : Nonmonotonic Reasoning and Uncertain Reasoning,
D. Gabbay, C. Hogger, and J. Robinson, Eds. Clarendon Press—Oxford, 439–513.
DUBOIS, D. AND PRADE, H. 1988. An introduction to possibilistic and fuzzy logics. In Non-Standard
Logics for Automated Reasoning, P. Smets, A. Mamdani, D. Dubois, and H. Prade, Eds. Academic
Press, Orlando, Fla., 253–286.
DUBOIS, D. AND PRADE, H. 1991. Epsitemic entrechment and possibilistic logic. Artif. Intel. 50,
223–239.
DUBOIS, D. AND PRADE, H. 1992. Belief change and possibility theory. In Belief Revision,
P. Ga¨rdenfors, Ed. Cambridge University Press, 142–182.
DUBOIS, D. AND PRADE, H. 2000. Possibility theory in information fusion. In Proceedings of the 3rd
International Conference on Information Fusion. TuA–1.
FAGIN, R., HALPERN, J., MOSES, Y., AND VARDI, M. 1996. Reasoning about Knowledge. MIT Press.
FAGIN, R., HALPERN, J., AND VARDI, M. 1992. What can machines know? On the properties of knowl-
edge in distributed systems. JACM 39, 2, 328–376.
FITTING, M. 1983. Proof Methods for Modal and Intuitionistic Logics. D. Reidel Publishing
Company.
GABBAY, D. 1996. Labelled Deductive Systems. Oxford University Press.
GABBAY, D. AND GUENTHNER, F., Eds. 1984. Handbook of Philosophical Logic, Vol II: Extensions of
Classical Logic. D. Reidel Publishing Co., Dordrecht, The Netherlands.
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
174 • Churn-Jung Liau
Reasoning with Uncertainty (ECSQARU’93), M. Clarke, R. Kruse, and S. Moral, Eds. Lecture
Notes in Computer Science, vol. 747. Springer-Verlag, New York, 265–273.
MEYER, J.-J. C. AND VAN DER HOEK, W. 1995. Epistemic Logic for AI and Computer Science.
Cambridge University Press, Cambridge, UK.
MEYER, J.-J. C. AND VAN DER HOEK, W. 1998. Modal logic for representing incoherent knowledge.
In Handbook of Defeasible Reasoning and Uncertainty Management Systems, Vol. 2, D. Gabbay
and P. Smets, Eds. Kluwer Academic Publisher, 37–75.
NEBEL, B. 1994. Base revision operator and schemes: semantics representation and complexity.
In Proceedings of the 11th European Conference on Artificial Intelligence. Wiley, New York, 341–
345.
PRADHAN, S., MINKER, J., AND SUBRAHMANIAN, V. 1995. Combining databases with prioritized infor-
mation. J. Intel. Inf. Syst. 4, 3, 231–260.
REITER, R. 1987. A theory of diagnosis from first principles. Artif. Intel. 32, 57–95.
REVESZ, P. Z. 1993. On the semantics of theory change: Arbitration between old and new infor-
mation. In Proceedings of the 12th ACM SIGACT-SIGMOD-SIGART Symposium on Principles
of Database Systems. ACM, New York, 71–82.
REVESZ, P. Z. 1997. On the semantics of arbitration. Int. J. Algebra Computat. 7, 2, 133–160.
SEGERBERG, K. 1995. Belief revision from the point of view of doxastic logic. Bull. IGPL 3, 4,
535–553.
SEGERBERG, K. 2001. The basic dynamic doxastic logic of AGM. In Frontiers in Belief Revision,
H. Roth and M. Williams, Eds. Kluwer Academic Publisher, 57–84.
SHOHAM, Y. 1993. Agent-oriented programming. Artif. Intel. 60, 1, 51–92.
SMETS, P. 2000. Data fusion in the transferable belief model. In Proceedings of the 3rd Interna-
tional Conference on Information Fusion. WeA–1.
SMULLYAN, R. 1968. First-Order Logic. Springer-Verlag, New York.
SPOHN, W. 1988. Ordinal conditional functions: A dynamic theory of epistemic states. In Cau-
sation in Decision, Belief Change, and Statistics, II, W. Harper and B. Skyrms, Eds. Kluwer
Academic Publishers, 105–134.
SUBRAHMANIAN, V. 1994. Amalgamating knowledge bases. ACM Trans. Datab. Syst. 19, 2, 291–
331.
WILLIAMS, M. 1994. Transmutations of knowledge systems. In Proceedings of the 4th In-
ternational Conference on Principle of Knowledge Representation and Reasoning, J. Doyle,
E. Sandewall, and P. Torasso, Eds. Morgan-Kaufmann San Francisco, Calif., 619–629.
WOOLDRIDGE, M. AND JENNINGS, N. 1995. Intelligent agents: theory and practice. Knowl. Eng.
Rev. 10(2), 115–152.
ZADEH, L. 1978. Fuzzy sets as a basis for a theory of possibility. Fuzzy Sets and Systems 1, 1,
3–28.
Received January 2002; revised February 2003 and August 2003; accepted August 2003
ACM Transactions on Computational Logic, Vol. 6, No. 1, January 2005.
Belief Fusion and Revision: An Overview
Based on Epistemic Logic Semantics 1
Churn-Jung Liau
Institute of Information Science
Academia Sinica, Taipei, 115, Taiwan
E-mail: liaucj@iis.sinica.edu.tw
ABSTRACT. In this paper, we formulate some approaches to belief fusion and revision using epis-
temic logic semantics. Fusion operators considered in this paper are majority merging, ar-
bitration, and general merging. Some modalities corresponding to belief fusion and revision
operators are incorporated into epistemic logics. The Kripke semantics of these extended log-
ics are presented. While most existing approaches treat belief fusion and revision operators as
meta-level constructs, we directly incorporate these operators into our object logic language.
By doing so, we both extend the expressive power of epistemic logic and enhance the techniques
of information fusion.
KEYWORDS: Epistemic logic, database merging, belief fusion, majority merging, arbitration, gen-
eral merging, belief revision, multi-agent systems.
1. Introduction
Philosophical analysis of knowledge and belief has stimulated the development of
epistemic logic [HIN 62]. This kind of logic has attracted the attention of researchers
from such diverse fields as artificial intelligence (AI), economics, linguistics, and the-
oretical computer science. AI researchers and computer scientists have developed
some technically sophisticated formalisms and applied them to the analysis of dis-
tributed and multi-agent systems [FAG 96, MEY 95].
Epistemic logic, in relation to AI and computer science, emphasizes the interac-
tion of agents. This results in the development of multi-agent epistemic logic. One
representative example of such logic is proposed by Fagin et al. [FAG 96]. This ap-
1. A preliminary version of this paper appeared in the proceedings of ECSQARU [LIA 03b].
Journal of Applied Non-Classical Logics.Volume 14 – n◦ 3/2004, pages 247 to 274
Belief Fusion and Revision 249
knowledge. We also discuss related work for conditional logic in Section 6. Finally,
in Section 7, we present our conclusions and suggest directions for further research.
2. Preliminaries
LetL denote the multi-agent epistemic logic with distributed knowledge [FAG 96].
The alphabet of L contains the following symbols:
1) a countable set Φ0 = {p, q, r, . . .} of atomic propositions
2) the propositional constants⊥ (falsum or falsity constant) and> (verum or truth
constant)
3) the binary Boolean operator ∨ (or), and unary Boolean operator ¬ (not)
4) a set Ag = {1, 2, . . . , n} of agents
5) the modal operator-forming symbols [ and ]
The set of well-formed formulas (wffs) is defined as the smallest set that contains
Φ0 ∪ {⊥,>} and is closed under Boolean and modal operators:
WFF := p | ⊥ | > | ¬ϕ | ϕ ∨ ψ | [G]ϕ
where p ∈ Φ0, G ⊆ Ag, and ϕ,ψ ∈ WFF . The intuitive meaning of [G]ϕ is “The
group of agents G has distributed belief ϕ”. According to [FAG 96], a group has
distributed belief of ϕ if the belief of ϕ is distributed among its members, so that by
pooling their beliefs, the members of the group can deduce ϕ, even though no member
of the group individually believes ϕ.
Other classical Boolean connectives ∧ (and),⊃ (implication), and≡ (equivalence)
are defined as abbreviations. Also, we write 〈G〉ϕ as an abbreviation of ¬[G]¬ϕ.
When G is a singleton {i}, we write [i]ϕ instead of [{i}]ϕ, so [i]ϕ means that agent i
knows ϕ. Furthermore, the auxiliary symbols “(” and “)” (i.e. left and right parenthe-
ses) are used to avoid ambiguity of wffs.
For the semantics, a possible world model for L is a structure
(W, (Ri)1≤i≤n, V ),
where
– W is a set of possible worlds,
– Ri ⊆W ×W is a serial binary relation 2 overW for 1 ≤ i ≤ n, and
– V : Φ0 → 2W is a truth assignment that maps each atomic proposition to the set
of worlds in which the proposition is true.
From the binary relationsRi’s, a derived relationRG for each nonempty G ⊆ Ag is:
RG = ∩i∈GRi = {(w, u) | ∀i ∈ G, (w, u) ∈ Ri}.
2. A binary relationR is serial if ∀w∃uR(w, u).
Belief Fusion and Revision 251
where dist is a function denoting the distance between a propositional interpretation
and a knowledge base. When the propositional language is finite, the Dalal distance
(or Hamming distance) between two interpretations of the language is used [DAL 88].
This distance is defined as the number of atoms whose valuations differ between these
two interpretations. Let dist(w,w′) denote the Dalal distance between two interpre-
tations w and w′. Then, the distance from w to a theory T , i.e. dist(w, T ), is defined
as:
dist(w, T ) = min{dist(w,w′) | w′ |= T}.
The merged resultMerge(T1, T2, · · · , Tk;wt) is defined as:
{ϕ | ∀w ∈ min(Ω,), w |= ϕ},
where Ω is the set of all propositional interpretations and  is ({T1,T2,··· ,Tk},wt). In
other words, the models ofMerge(T1, T2, · · · , Tk;wt) are the propositional interpre-
tations that have the shortest weighted total distance to the knowledge bases.
3.2. Epistemic logic for majority merging
The weighted merging operator proposed in [LIN 96] can be incorporated into
epistemic logic in the following way. Syntactically, a new class of modal operators,
[⊕(G,wt)], for any nonempty G ⊆ {1, 2, · · · , n} and any list wt consisting of n
positive real numbers, is added to our logic language. The wff of the majority merging
logic (Lmm) is defined as:
WFF ::= p | ⊥ | > | ¬ϕ | ϕ ∨ ψ | [G]ϕ | [⊕(G,wt)]ϕ
where p ∈ Φ0,G ⊆ Ag, and ϕ,ψ ∈WFF , andwt is a list of n positive real numbers.
We also assume Φ0 is finite for the language of Lmm.
The list wt is used to encode the importance or reliability of agents. If agent i is
considered more important or more reliable than agent j, then the ith element of wt
is greater than its jth element. It is tempting to propagate the weights into a group
of agents, so that we have a weight wt(G) for each group G. This weight may be
useful in the belief fusion of two groups of agents. However, we do not really need
this because if we want to merge the beliefs of two groups G1 and G2, we can simply
merge the beliefs of agents in G1 ∪G2.
Let (W, (Ri)1≤i≤n, V ) be a model for L, then for each w ∈W , define Vw : Φ0 →
{0, 1} and Aw : Ag → 2W as follows:
Vw(p) = 1⇔ w ∈ V (p) and Aw(i) = Ri(w),
for each p ∈ Φ0 and i ∈ Ag. A generalized Dalal distance (or Hamming distance)
δ :W ×W → {0, 1, · · · , |Φ0|+ n} is defined as
δ(w, u) = |{p ∈ Φ0 | Vw(p) 6= Vu(p)}|+ |{i ∈ Ag | Aw(i) 6= Au(i)}|,
Belief Fusion and Revision 253
2) |= ¬[G]⊥ ⊃ ([G]ϕ ⊃ [⊕(G,wt)]ϕ)
3) |= ¬[⊕(G,wt)]⊥
4) if G′ ⊆ G is a group such that∑i∈G′ wt(i) >∑i∈G wt(i)/2, then
|= (∧i∈G′ [i]l) ⊃ [⊕(G,wt)]l,
where l is an atomic proposition or its negation (i.e. a literal)
5) if i ∈ G is an agent such that wt(i) >∑j∈G−{i} wt(j), then
|= [i]ϕ ⊃ [⊕(G,wt)]ϕ
Proof: LetM be any Lmm model and w be any possible world inM . We prove that
each result is satisfied in w.
1) We show ∩i∈GRi(w) ⊆ min(W,w(G,wt)). Let u ∈ ∩i∈GRi(w), then
distw(u, i) = 0 for each i ∈ G by definition. Thus, u ∈ min(W,w(G,wt)) due to∑
i∈G distw(u, i) = 0. The result is then satisfied in w by the definition of satisfac-
tion.
2) We show that ∩i∈GRi(w) 6= ∅ implies min(W,w(G,wt)) ⊆ ∩i∈GRi(w).
Let u ∈ min(W,w(G,wt)). Observing the proof of 1), we can find that∑
i∈G distw(u, i) = 0 holds. Since each distw(u, i) is nonnegative, we have
distw(u, i) = 0 for each i ∈ G. This means that for each i ∈ G, there exists
w′ ∈ Ri(w) such that δ(u,w′) = 0. By the indiscernibility condition of the model,
we have u ∈ ∩i∈GRi(w). Again, the result is satisfied in w by the definition of
satisfaction.
3) Because the range of δ is finite, there does not exist any infinitely descending
chain for the ordering w(G,wt). Consequently, min(W,w(G,wt)) must be nonempty
and the result holds by the definition of satisfaction.
4) The proof is analogous to that of Theorem 4.1 in [LIN 96]. Assume that the
result is not satisfied, then w |= ∧i∈G′ [i]l and w 6|= [⊕(G,wt)]l hold. The former
implies that for all i ∈ G′ and u ∈ Ri(w), u |= l, whereas the latter implies that
there exists u0 ∈ min(W,w(G,wt)) such that u0 |= ¬l. By the saturation condition,
there exists another world u′ |= l and δ(u0, u′) = 1. This implies distw(u′, i) =
distw(u0, i)−1 for all i ∈ G′, and distw(u′, i) ≤ distw(u0, i)+1 for all i ∈ G−G′.
Thus,∑
i∈G
distw(u′, i) · wt(i) ≤
∑
i∈G
distw(u0, i) · wt(i) +
∑
i∈G−G′
wt(i)−
∑
i∈G′
wt(i)
<
∑
i∈G
distw(u0, i) · wt(i).
This contradicts u0 ∈ min(W,w(G,wt)), so the result must be satisfied. Note that the
last inequality holds due to the assumption about the wt list.
Belief Fusion and Revision 255
2) Cutting: Let us first define the modal depth of wffs in L as:
a) depth(p) = depth(⊥) = depth(>) = 0 if p is a propositional atom,
b) depth([G]ψ) = depth(ψ) + 1 for any nonempty G ⊆ Ag,
c) depth(¬ψ) = depth(ψ),
d) depth(ψ1 ∨ ψ2) = max(depth(ψ1), depth(ψ2)).
Let depth(ϕ) = m, then we cut off the worlds not reachable from the root w within
m steps. More precisely, let
U = {w′ |6 ∃(w0, w1, · · · , wk) such that k ≤ m,w0 = w,wk = w′,
and ∀0 ≤ j ≤ k − 1, (wj , wj+1) ∈ ∪i∈AgRi}
Let us define the modelM0 = (W0, (R0i )1≤i≤n, V 0), where
- W0 =W − U ,
- R0i = (Ri ∩ (W0 ×W0)) ∪ {(u, u) |6 ∃u′ ∈W0 such that (u, u′) ∈ Ri},
- and V 0(p) = V (p) ∩W0 for each atom p.
Note thatM0 is a tree-like model of depth m except each of its leaf nodes has a self-
loop for each agent i. It can be seen that we still have w |=M0 ϕ.
3) Adding arcs: To make the model satisfy the indiscernibility condition, we have
to add some necessary arcs into the finite depth tree M0. This can be achieved by
scanning the nodes backward from the leaf nodes to the root. It can be seen that the
indiscernibility condition is satisfied for the leaf nodes, which have distance m from
the root. For 1 ≤ k ≤ m, let us defineMk = (W0, (Rki )1≤i≤n, V 0), where
Rki = Rk−1i ∪ {(u, u2) | u is a node with distance (m−k) from the root and
∃u1, u2 ∈W0 such that [ δk−1(u1, u2) = 0, (u, u1) ∈ Rk−1i ,
and (u, u2) 6∈ Rk−1i ]}
In the definition above, we use δk−1 to denote the generalized Dalal distance in the
modelMk−1. When all necessary arcs are added in this way,Mm is a model satisfying
the indiscernibility condition and we still have w |=Mm ϕ.
4) Saturating: For each u ∈ W0 and p ∈ Φ0, if there does not exist u′ ∈ W0 such
that δm(u, u′) = 1 and Vu(p) = 1 − Vu′(p), then take a new world u0 and call it the
p-flipping world of u. Now, our modelM ′ is defined as (W ′, (R′i)1≤i≤n, V ′), where
W ′ =W0 ∪ {u0 | u0 is the p-flipping world of some u ∈W0 for some p ∈ Φ0}
R′i = Rmi ∪ {(u0, u′) | u0 is the p-flipping world of some
u ∈W0 for some p ∈ Φ0 and (u, u′) ∈ Rmi }
V ′(p) = V0(p) ∪ {u0 | u0 is the p-flipping world of some u 6∈ V0(p)}
Obviously,M ′ satisfies both the saturation and the indiscernibility conditions, so it is
an Lmm model. Furthermore, we have w |=M ′ ϕ. Therefore, our result is proved.
Belief Fusion and Revision 257
To understand these conditions, let us imagine a pseudo-distance measure µ :W×
W → <+ ∪ {0}, which satisfies at least the following two properties for any w, u ∈
W : (i) µ(w, u) = 0 iff w = u and (ii) µ(w, u) = µ(u,w). The measure µ is extended
to the domain 2W × 2W as µ(S, T ) = infw∈S,u∈T µ(w, u) for any S, T ⊆ W . Note
that we have µ(S, T1∪T2) = min(µ(S, T1), µ(S, T2)) by this definition. The ordering
A ≤C B can be defined as
A ≤C B ⇔ µ(A,C) ≤ µ(B,C). (1)
Then, the five conditions are fairly obvious properties of this definition.
The arbitration between two sets of models A and B is defined as
A4B = min(A,≤B) ∪min(B,≤A) (2)
Note that although the relation ≤A is defined between sets of models, only singleton
comparison is used in the definition of arbitration. By slightly abusing the notation,
≤A may also denote an ordering between models.
4.2. Epistemic logic for arbitration
To incorporate the arbitration operator of [LIB 95, LIB 98] into epistemic logic,
first note that according to (2), arbitration is commutative, but not necessarily associa-
tive. Thus, the arbitration operator should be a binary operator between two agents.
We can add a class of modal operators for arbitration into our logic just as in the case
of majority merging. However, to be more expressive, we will also consider the inter-
action between arbitration and other epistemic operators. We therefore define the set
of arbitration expressions(AE) over Ag recursively as the smallest set containing Ag
and closed under the binary operators +, ·, and4:
AE ::= i | a+ b | a · b | a4b
where i ∈ Ag and a, b ∈ AE.
Here, + and · correspond respectively to the distributed belief and the “everybody
knows” operators in multi-agent epistemic logic [FAG 96]. The wff for arbitration
logic (Lar) is defined as:
WFF ::= p | ⊥ | > | ¬ϕ | ϕ ∨ ψ | [a]ϕ
where p ∈ Φ0, a ∈ AE, and ϕ,ψ ∈ WFF . We no longer need the operator [G]
because it is a special case of operators [a]. In other words, we can take [i1 + i2 +
· · ·+ ik] as [G] where G = {i1, i2, · · · , ik}. For example, [1 + 2 + 3]ϕ means that ϕ
can be deduced if the beliefs of agents 1, 2, and 3 are pooled, even though none of the
three agents individually believes ϕ, and [2 · 5]ϕ means that both agent 2 and agent
5 believe ϕ, whereas [143]ϕ means that the arbitration of the beliefs of agent 1 and
agents 3 can deduce ϕ.
Belief Fusion and Revision 259
1) Axioms:
a) P: all tautologies of the propositional calculus
b) ([a]ϕ ∧ [a](ϕ ⊃ ψ)) ⊃ [a]ψ
c) ¬[{i}]⊥
d) [a]ϕ ∨ [b]ϕ ⊃ [a+ b]ϕ
e) [a · b]ϕ ≡ ([a]ϕ ∧ [b]ϕ)
f) [a4b]ϕ ≡ [b4a]ϕ
g) [a4b]ϕ ⊃ [a+ b]ϕ
h) ¬[a+ b]⊥ ⊃ ([a+ b]ϕ ⊃ [a4b]ϕ)
i) ([a4(b · c)]ϕ ≡ [a4b]ϕ) ∨ ([a4(b · c)]ϕ ≡ [a4c]ϕ)
∨([a4(b · c)]ϕ ≡ [(a4b) · (a4c)]ϕ)
j) [a]ϕ ∧ [b]ϕ ⊃ [a4b]ϕ
k) ¬[a]⊥ ⊃ ¬[a+ (a4b)]⊥
2) Rules of Inference:
a) Modus ponens(MP):
ϕ ϕ ⊃ ψ
ψ
b) Necessitation(Nec):
ϕ
[a]ϕ
Figure 2. An axiomatic system for the logic of arbitration
Lar, written as Σ `Lar ϕ, if there is a finite subset Σ′ of Σ such that `Lar
∧
Σ′ ⊃ ϕ.
Theorem 3 shows the soundness of the axiomatic system, though, as yet, it is unclear
whether the system is complete.
Theorem 3 For any wff ϕ, `Lar ϕ implies |=Lar ϕ, where |=Lar ϕ denotes that ϕ is
valid in all coherent Lar models.
Proof: The validity of axioms (a) through (e) is easily proven from the semantics of
L. Also, it is easy to show that the inference rules are validity-preserving. The proof
of the validity of axioms (f) through (k) is essentially the same as that for theorem
5 of [LIB 98]. Note that the limit assumption for coherent models is needed for the
validity of axiom (k).
Belief Fusion and Revision 261
5. General Merging
5.1. Review of basic concepts
In [KON 98], an axiomatic framework unifying the majority merging and arbitra-
tion operators is presented. A set of postulates common to majority and arbitration
operators is proposed to characterize the general merging operators, and additional
postulates for differentiating them are considered. In [KON 98], a knowledge base is
also a finite set of propositional sentences. The general merging operator is defined
as a mapping from a multi-set 6 of knowledge bases (called a knowledge set) to a
knowledge base. Therefore, the arbitration operator defined using this approach can
merge more than two knowledge bases, whereas the definition of the arbitration oper-
ator in [LIB 95, LIB 98] can only merge two knowledge bases. The merging operator
is denoted by 4. For each knowledge set E, 4(E) is a knowledge base. A semantic
characterization based on syncretic assignment is given for the merging operators. A
syncretic assignment maps each knowledge set E to a pre-order ≤E over interpreta-
tions such that conditions reflecting the postulated properties of the merging operators
must be satisfied. Then 4(E) is the knowledge base whose models are the minimal
interpretations according to ≤E .
This framework is further extended to deal with integrity constraints in [KON 99].
LetE be a knowledge set and ϕ be a propositional sentence denoting the integrity con-
straints. The merging of knowledge bases in E with integrity constraint ϕ, 4ϕ(E),
is a knowledge base that implies ϕ. The models of 4ϕ(E) are characterized by
min(Mod(ϕ),≤E). 4ϕ(E) is called an IC merging operator. According to the se-
mantics, it is obvious that 4(E) is a special case of IC merging operator 4>(E).
When E contains exactly one knowledge base, the operator is reduced to the AGM re-
vision operator proposed in [ALC 85]. Therefore, IC merging is able to cover majority
merging, arbitration, and the AGM revision operator.
5.2. Epistemic logic for general merging
The wff of IC merging logic(Lic) is defined as:
WFF ::= p | ⊥ | > | ¬ϕ | ϕ ∨ ψ | 2ϕ | [G]ϕ | [4ϕ(G)]ψ
where p ∈ Φ0, G ⊆ Ag, and ϕ,ψ ∈ WFF . Note that in addition to the distributed
belief operator and the fusion operator, we also add the alethic modal operator 2,
which will be useful in the statement of some valid properties of the logic. As usual,
we write ¬2¬ϕ as ϕ.
6. A multi-set, also called a bag, is a collection of elements over a domain which allows multiple
occurrences of elements.
Belief Fusion and Revision 263
possible worlds may be infinite in our case, we adopt the system-of-spheres semantics
as described in [BOU 94b, BOU 94a] for the fusion operator [4ϕ(G)].
The next theorem shows several important valid wffs in Lic.
Theorem 5
1) |= [4ϕ(G)]ϕ
2) |= ϕ ⊃ ¬[4ϕ(G)]⊥
3) |= ¬[G]¬ϕ ⊃ ([G](ϕ ⊃ ψ) ≡ [4ϕ(G)]ψ)
4) |= 2(ϕ1 ≡ ϕ2) ⊃ ([4ϕ1(G)]ψ ≡ [4ϕ2(G)]ψ)
5) |= [4ϕ1∧ϕ2(G)]ψ ⊃ [4ϕ1(G)](ϕ2 ⊃ ψ)
6) |= ¬[4ϕ1(G)]¬ϕ2 ⊃ ([4ϕ1(G)]ψ ⊃ [4ϕ1∧ϕ2(G)]ψ)
Proof: We only prove 3) and the remaining ones can be proven analogously. Let
M = (W, (Ri)1≤i≤n, V,≤) be an Lic model and w ∈ W . Assume w |= ¬[G]¬ϕ
holds, then there exists u0 ∈ ∩i∈GRi(w) such that u0 |= ϕ holds. First, by conditions
1) and 2) for Lic models, we have u ≤wG u0 iff u ∈ ∩i∈GRi(w) for any u ∈ W .
Thus, if w |= [G](ϕ ⊃ ψ) holds, then for any u ≤wG u0, u |= ϕ ⊃ ψ. Therefore,
w |= [4ϕ(G)]ψ. Second, if w |= [4ϕ(G)]ψ holds, then there exists w0 |= ϕ such
that for any u ≤wG w0, u |= (ϕ ⊃ ψ). Again, by conditions 1) and 2) for Lic models,
we have u ≤wG w0 for any u ∈ ∩i∈GRi(w). Therefore, w |= [G](ϕ ⊃ ψ) holds.
Note that the set of L wffs is a subset of Lic wffs. The next theorem shows that
Lic is a conservative extension of L.
Theorem 6 For each L wff ϕ, |=L ϕ iff |=Lic ϕ.
Proof: To prove this theorem, we only need to show the following two facts:
1) IfM = (W, (Ri)1≤i≤n, V,≤) is an Lic model, thenM ′ = (W, (Ri)1≤i≤n, V )
is an L model such that for all w ∈W and L wff ϕ, we have w |=M ϕ iff w |=M ′ ϕ.
2) IfM = (W, (Ri)1≤i≤n, V ) is an L model, then there exist ≤ such thatM ′ =
(W, (Ri)1≤i≤n, V,≤) is an Lic model, and for all w ∈ W and L wff ϕ, we have
w |=M ϕ iff w |=M ′ ϕ. To prove this, let ≤ be defined as:
w ≤U w′ ⇔ |{U ∈ U | w ∈ U}| ≥ |{U ∈ U | w′ ∈ U}|.
It is then easily verified that ≤ indeed satisfies the conditions for Lic models.
The next example is a realistic scenario to show the expressive power of Lic.
Example 3 Let us consider the following scenario. There are two managers (agents
1 and 2) in a company. Agent 1 receives reports from three assistants (agents 3,4 and
5), whereas agent 2 is responsible for collecting external information from sources 6
and 7. Agent 1 forms his belief by merging the beliefs of his assistants, but agent 2
Belief Fusion and Revision 265
where ψ  ϕ is the result of updating the knowledge base ψ by ϕ.
Both belief revision and update may occur in the observation of new information
ϕ. For belief revision, it is assumed that the world is static, so if new information is
incompatible with the agent’s original beliefs, the agent may have an incorrect belief
about the world. The agent will try to accommodate the new information by min-
imally changing his original beliefs. However, for belief update, it is assumed that
the world is dynamic, so the agent’s belief may become outdated, though it may have
been correct for the original world. The agent will assume that possible worlds are
those resulting from the minimal change of the original world. In [BOU 95], a gener-
alized update model is proposed which combines aspects of both revision and update.
It shows that a belief update model is inadequate without modelling the dynamic as-
pect (i.e. the events causing the update) simultaneously. Since modelling the dynamic
change of external worlds is beyond the scope of this paper, we will not model belief
update in our logic. Therefore, we will only focus on the belief revision operator.
6.2. Epistemic logic for belief revision
Let us now consider the possibility of incorporating the belief revision operator
into epistemic logic. In addition to the original definition of revising a knowledge
baseψ with new informationϕ, there is an alternative reading for the revision operator.
That is, we can consider ◦ as a prioritized belief fusion operator that gives priority to
its second argument [MAY 01]. In knowledge base revision, these two interpretations
are essentially equivalent. However, from the perspective of our logic in multi-agents
systems, they may be quite different. Roughly speaking, i ◦ ϕ denotes the result of
revising the beliefs of agent i with new information ϕ, whereas i ◦ j is the result of
merging the beliefs of agents i and j by giving priority to j. Therefore, in the logic
of revision (Lrv), we define the set of revision expressions (RE) and the set of wffs in
the following way:
RE ::= i | r ◦ i | r ◦ ϕ
where i ∈ Ag is an agent symbol and ϕ is any wff in L, and
WFF ::= p | ⊥ | > | ¬ϕ | ϕ ∨ ψ | 2ϕ | [G]ϕ | [r]ϕ
where i ∈ Ag, p ∈ Φ0, G ⊆ Ag, r ∈ RE, and ϕ,ψ ∈WFF .
Note that a revision expression allows us to represent a revision sequence, which
is directly related to iterated revision in [BOU 93, DAR 97]. Furthermore, since an
agent index i is also a revision expression, the wff [i]ϕ has a different meaning than
[{i}]ϕ. It appears that [{i}]ϕ can no longer be abbreviated as [i]ϕ. However, it turns
out that our semantics makes [{i}]ϕ and [i]ϕ equivalent.
To interpret the modal operator in our semantic framework, we define an Lrv
model as
(W, (Ri)1≤i≤n, V,≤)
where
Belief Fusion and Revision 267
Proof: LetM = (W, (Ri)1≤i≤n, V,≤) be any Lrv model and u be any world inW .
We show that all these wffs are satisfied in u.
1) and 2): Follow from the definition of the satisfaction condition immediately.
3): Holds because ≤S is a total pre-order for any sequence of belief states S.
4) and 5): Hold because ≤τu(r◦>) and ≤τu(r◦⊥) are both equal to ≤τu(r).
6): If u |= 2(ϕ1 ≡ ϕ2), then we have |ϕ1| = |ϕ2| and τu(r ◦ ϕ1) = τu(r ◦ ϕ2).
Therefore, the result follows immediately.
7): If u |= [r ◦ (ϕ ∧ ψ1)]ψ2, then there exists w0 ∈W such that
∀w ≤τu(r◦(ϕ∧ψ1)) w0, w |= ψ2. (6)
There are two cases:
Case 1: If |ϕ ∧ ψ1| 6= ∅, then without loss of generality, we can assume w0 |=
ϕ ∧ ψ1 (otherwise, we can find another w′0 ≤τu(r◦(ϕ∧ψ1)) w0 satisfying
the condition). From (6), this implies
∀w ≤τu(r) w0, w |= ϕ ∧ ψ1 ⇒ w |= ψ2. (7)
Let us now consider any w ≤τu(r◦ϕ) w0. By the assumption for this
case, we have w |= ϕ and w ≤τu(r) w0. If w |= ¬ψ1 holds, then we
have w |= ψ1 ⊃ ψ2. If w |= ψ1 holds, then we have w |= ψ2 by (7).
Therefore, for any w ≤τu(r◦ϕ) w0, we have w |= ψ1 ⊃ ψ2. This means
u |= [r ◦ ϕ](ψ1 ⊃ ψ2).
Case 2: If |ϕ∧ψ1| = ∅, then we have two subcases. If |ϕ| = ∅, then the result
follows from 3), 5) and 6). If |ϕ| 6= ∅, then let us take a u0 |= ϕ. For any
w ≤τu(r◦ϕ) u0, we have w |= ϕ, so w |= ¬ψ1 and w |= ψ1 ⊃ ψ2 hold.
This means u |= [r ◦ ϕ](ψ1 ⊃ ψ2).
8): The proof is analogous to that of 7) and is omitted.
9): Follows from the fact that min(W,≤τu(i◦j)) = Ri(u) ∩ Rj(u) if Ri(u) ∩
Rj(u) 6= ∅.
10): Due to the seriality assumption, Ri(u) is nonempty. Let us take a w0 ∈ Ri(u),
then for any w ≤τu(r◦i) w0, we have w ∈ Ri(u). Therefore, u |= [i]ϕ implies
u |= [r ◦ i]ϕ.
As in the cases of Lar and Lic, we also have the following theorem.
Theorem 8 For each L wff ϕ, |=L ϕ iff |=Lrv ϕ.
Belief Fusion and Revision 269
where KB is a finite representation of the theory K. Since there is only one global
ordering R in a CO∗ model, the logic is appropriate only for the revision of a single
theory K. On the other hand, our logic allows the revisions of many agents’ belief
states. Furthermore, since the ordering R in a CO∗ model is global, ϕ KB→ ψ is true in
a world iff it is true in all worlds, thus no iterated revisions are allowed in the model.
In [BOU 93], this restriction is lifted by allowing the revision of the ordering R to R′
simultaneously. The idea is to move the most plausible ϕ-models with respect to R
to the most plausible level of R′ and keep the rest of R unchanged. Our assignment
of a total pre-order to a sequence of belief states is based on the same idea. However,
while the definition of [BOU 93] presumes the existence of minimal models for any
propositional formulas, we do not need this assumption.
In [FRI 94], a logic with conditional and epistemic operators is used in belief revi-
sion. Conditional and epistemic sentences are interpreted in an abstract belief change
system (BCS). The two basic components of a BCS are a set of belief states and a
belief change function. The latter maps each belief state and sentence of some base
language into a new belief state. In a more concrete preferential interpretation, each
belief state s is interpreted as a subset of possible world K(s), and a pre-order s
over the possible worlds is associated with s. In this regard, s corresponds to ≤K(s)
in our semantic models and the conditional wff ϕ > ψ in the logic L> of [FRI 94] is
roughly equivalent to our wff [i ◦ ϕ]ψ for a fixed agent i. However, since in L>, the
antecedent ϕ of a conditional is restricted to a wff in the base language L, it does not
allow epistemic wffs of the form Bϕ. It is argued that the antecedent must be observ-
able whereas conditional wffs are unobservable, so we should not allow conditional
wffs in the antecedent. However, in multi-agent systems, one agent may learn the be-
liefs of other agents through communication, so we should not exclude this flexibility.
Another significant difference between BCS and our logic is that BCS only allows
revision of a belief state by a sentence, while in our system the prioritized fusion of
two belief states held by two agents is incorporated.
A dynamic doxastic logic for belief revision is proposed in [SEG 95] and further
developed in [SEG 01]. By using the notations of [SEG 95], the doxastic operator
B and two kinds of dynamic modal operators [+ϕ] and [−ϕ] for propositional wff
ϕ are taken as the basic constructs of the language. The operators [+ϕ] and [−ϕ]
correspond to the expansion and contraction operators of AGM theory respectively.
Thus, the revision operator [◦ϕ] is defined as [−(¬ϕ)][+ϕ] according to Levi’s identity
[ALC 85]. The wffs of the language are interpreted with respect to a hypertheory. A
hypertheory H is a set of subsets of possible worlds linearly ordered by inclusion,
and is similar to the widening ranked model defined in [LEH 95]. However, the latter
assumes that the subsets of models are indexed by natural numbers. A hypertheory is
said to be replete ifW (i.e. the set of all possible worlds) is inH . From the hypertheory
H , a pre-order ≤H overW can be defined as:
w′ ≤H w ↔ ∀U ∈ H ∧ w ∈ U∃U ′ ∈ H,U ′ ⊆ U ∧ w′ ∈ U ′.
Belief Fusion and Revision 271
spite of these differences, the development of proof theory for epistemic fusion logics
could take these previous works as good starting points.
Furthermore, we have presented several validity formulas for each logic intro-
duced in this paper. Most of them are translated from postulates of corresponding
information fusion operators. In the case of arbitration, all postulates in [LIB 95] can
be translated into corresponding wffs in Lar. Therefore, we make them into an ax-
iomatic system. Though we can not yet prove the completeness of the system, we
tend to believe it is indeed complete. In other cases, not all postulates in correspond-
ing information fusion operators can be expressed in our framework. This suggests
that further extensions of syntax and semantics of Lmm, Lic and Lrv may be needed.
Acknowledgements
I would like to thank three anonymous referees for their valuable remarks.
8. References
[ALC 85] ALCHOURRÓN C., GÄRDENFORS P., MAKINSON D., “On the logic of theory
change: Partial meet contraction and revision functions”, Journal of Symbolic Logic,
vol. 50, 1985, p. 510–530.
[ARL 92] ARLO-COSTA H., SHAPIRO S., “Maps between nonmonotonic and conditional
logic”, NEBEL B., RICH C., SWARTOUT W., Eds., Proceedings of the 3rd International
Conference on Principle of Knowledge Representation and Reasoning, Morgan Kaufmann,
1992, p. 553–564.
[BEN 97] BENFERHAT S., DUBOIS D., PRADE H., “From semantic to syntactic approaches
to information combination in possibilistic logic”, BOUCHON-MEUNIER B., Ed., Aggre-
gation and Fusion of Imperfect Information, p. 141–161, Physica-Verlag, 1997.
[BEN 03] BENFERHAT S., KACI S., “Logical representation and fusion of prioritized informa-
tion based on guaranteed possibility measures: Application to the distance-based merging
of classical bases”, Artificial Intelligence, vol. 148, num. 1–2, 2003, p. 291–333.
[BLA 01] BLACKBURN P., DE RIJKE M., VENEMA Y., Modal Logic, Cambridge University
Press, Cambridge, United Kingdom, 2001.
[BOL 95] BOLDRIN L., SOSSAI C., “An algebraic semantics for possibilistic logic”, Pro-
ceedings of the 11th International Conference on Uncertainty in ArtiOcial Intelligence,
1995, p. 24–37.
[BOL 96] BOLDRIN L., SOSSAI C., “Partial information and necessity-valued logic”, Pro-
ceedings of the 6th International Conference on Information Processing and Management
of Uncertainty in Knowledge-Based Systems, 1996, p. 941–946.
[BOL 97] BOLDRIN L., SOSSAI C., “Local possibilistic logic”, Journal of Applied Non-
Classical Logic, vol. 7, num. 3, 1997, p. 309–333.
[BOL 99] BOLDRIN L., SAFFIOTTI A., “A modal logic for merging partial belief of multiple
reasoners”, Journal of Logic and Computation, vol. 9, num. 1, 1999, p. 81–103.
Belief Fusion and Revision 273
[DUB 00] DUBOIS D., PRADE H., “Possibility theory in information fusion”, Proc. of the
Third International Conference on Information Fusion, 2000, p. TuA-1.
[FAG 96] FAGIN R., HALPERN J., MOSES Y., VARDI M., Reasoning about Knowledge, MIT
Press, 1996.
[FRI 94] FRIEDMAN N., HALPERN J., “Conditional logics of belief change”, Proceedings of
the National Conference on Artificial Intelligence, AAAI Press, 1994, p. 915–921.
[GÄR 88] GÄRDENFORS P., Knowledge in Flux: Modeling the Dynamics of Epistemic States,
MIT Press, 1988.
[HIN 62] HINTIKKA J., Knowledge and Belief, Cornell University Press, 1962.
[KAT 91a] KATSUNO H., MEDELZON A., “On the difference between updating a knowledge
base and revising it”, Proceedings of the Second International Conference on Principles
of Knowledge Representation and Reasoning (KR’91), Morgan Kaufmann Publisher, 1991,
p. 387–394.
[KAT 91b] KATSUNO H., MEDELZON A., “Propositional knowledge base revision and mini-
mal change”, Artificial Intelligence, vol. 52, 1991, p. 263–294.
[KON 98] KONIECZNY S., PINO-PÉREZ R., “On the logic of merging”, Proceedings of the
Sixth International Conference on Principles of Knowledge Representation and Reasoning
(KR’98), Morgan Kaufmann Publisher, 1998, p. 488–498.
[KON 99] KONIECZNY S., PINO-PÉREZ R., “Merging with integrity constraints”, HUNTER
A., PARSONS S., Eds., Proccedings of the Fifth European Conference on Symbolic and
Quantitative Approaches to Reasoning with Uncertainty (ECSQARU’99), LNAI 1638,
Springer-Verlag, 1999, p. 233–244.
[KON 00] KONIECZNY S., “On the difference between merging knowledge bases and com-
bining them”, Proceedings of the Seventh International Conference on Principles of
Knowledge Representation and Reasoning (KR’00)., Morgan Kaufmann Publisher, 2000,
p. 135–144.
[LEH 95] LEHMANN D., “Belief revision, revised”, Proceedings of the 14th International
Joint Conference on Artificial Intelligence, 1995, p. 1534–1540.
[LIA 92] LIAU C.-J., LIN I.-P., “Quantitative modal logic and possibilistic reasoning”, NEU-
MANN B., Ed., Proceedings of the 10th ECAI, John Wiley & Sons. Ltd, 1992, p. 43–47.
[LIA 93] LIAU C.-J., LIN I.-P., “Proof methods for reasoning about possibility and necessity”,
International Journal of Approximate Reasoning, vol. 9, num. 4, 1993, p. 327–364.
[LIA 96] LIAU C.-J., LIN I.-P., “Possibilistic Reasoning—A Mini-survey and Uniform Se-
mantics”, Artificial Intelligence, vol. 88, 1996, p. 163–193.
[LIA 03a] LIAU C.-J., “Belief, information acquisition, and trust in multi-agent systems–A
modal logic formulation”, Artificial Intelligence, vol. 149, 2003, p. 31–60.
[LIA 03b] LIAU C.-J., “Epistemic logics for information fusion”, NIELSEN T., ZHANG N.,
Eds., Proc of the 7th European Conference on Symbolic and Quantitative Approaches to
Reasoning with Uncertainty, LNAI 2711, Springer-Verlag, 2003, p. 489–501.
[LIA 04] LIAU C.-J., “A modal logic framework for multi-agent belief fusion”, ACM Trans-
actions on Computational Logic, to appear, 2004.
[LIB 95] LIBERATORE P., SCHAERF M., “Arbitration: A commutative operator for belief
revision”, Proceedings of the Second World Conference on the Fundamentals of Artificial
Intelligence (WOCFAI ’95), 1995, p. 217–228.
 
 
 
 
 
 
Part III 
Ordered Belief Fusion in Possibilistic Logic 633
belief of an agent may be wrong. Therefore, in general, there will be conﬂict
between the beliefs to be merged. In this case, everything can be deduced from
the distributed belief due to the notorious omniscience property of epistemic
logic, so the merged result will be useless for further reasoning. To resolve the
inconsistency of merged belief, ordered fusion operators are incorporated into
multi-agent epistemic logic. This has resulted in the development of fusion logics
[3,4,8,9], in which the reliability ordering of agents is taken into account when
their beliefs are merged.
While multi-agent epistemic logic does not consider the uncertainty of beliefs,
a quantitative modal logic (QML) has been proposed for reasoning about such
beliefs [10,11,12]. The direct fusion of uncertain beliefs is also considered in
possibilistic logic, PL⊗n , which extends QML with distributed belief operators
[1]. The inconsistency problem in the direct fusion of beliefs also arises in the
direct> fusion of uncertain beliefs. Therefore, in this paper, we propose the
ordered fusion of uncertain beliefs to resolve the problem.
2 Review of Previous Approaches
In this section, we review some logics for distributed belief fusion. For brevity,
we only sketch the syntax and semantics of these logics, and omit their proof
methods.
2.1 Direct Fusion in Epistemic Logic
In [6], some variants of epistemic logic systems are presented. Using the naming
convention in [2], the most basic system with distributed beliefs is called KDn , with
n being the number of agents and D denoting the distributed belief operators. In
this system, logical omniscience is the only property imposed on agents’ beliefs.
Nevertheless, we further require that the belief of each individual agent should
be consistent, even though the agents’ collective beliefs may be in conﬂict. Thus,
we actually use the logic KDDn in [6], where an axiom D is used to guarantee the
consistency of each agent’s belief.
The alphabet of KDDn consists of the following symbols: a countable set Φ0 =
{p, q, r, . . .} of atomic propositions; the propositional constants ⊥ (falsum or
falsity constant) and  (verum or truth constant); the binary Boolean operator
∨ (or) and the unary Boolean operator ¬ (not); a set Ag = {1, 2, . . . , n} of
agents; the modal operator-forming symbols “[” and “]”; and the left and right
parentheses “ (” and “)”.
The set of well-formed formulas (wﬀs)is deﬁned as the smallest set containing
Φ0 ∪ {⊥,} and is closed under Boolean operators and the following rule2:
– if ϕ is a wﬀ, then [G]ϕ is a wﬀ for any nonempty G ⊆ Ag.
The intuitive meaning of [G]ϕ is “The group of agents G has distributed belief ϕ”
2 We change the syntactic notation of epistemic logic in [6] slightly.
Ordered Belief Fusion in Possibilistic Logic 635
{i1, i2, . . . , im} is called the domain of O and denoted by δ(O). In this case,
O > im+1 denotes i1 > i2 > · · · > im > im+1 if im+1 ∈ δ(O). As the syntactic
notation is unique for each total order, we can also identify the notation with
the total order itself, so we can write O ∈ T On. Furthermore, the upper-case
Greek letter Ω is used to denote meta-variables ranging over nonempty subsets
of T On.
In [9], two logics for ordered distributed belief fusion are proposed. The ﬁrst,
DBFcn, is based on a level cutting strategy. The set of DBFcn wﬀs is deﬁned by
the rules for KDDn and the following rule:
– if ϕ is a wﬀ, then [O]ϕ is a wﬀ for any O ∈ T On.
Intuitively, [O]ϕ means that ϕ is derivable from the merged beliefs of agents in
δ(O) according to the speciﬁc order of O.
For the semantics, a DBFcn model is a possible world model (W, (Ri)1≤i≤n, V )
for KDDn . For each O ∈ T On, a derived relation, RcO, is deﬁned inductively as
follows:
RcO>i(w) =
{RcO(w) if ⋂j∈δ(O>i)Rj(w) = ∅,
RcO(w) ∩Ri(w) otherwise,
for any w ∈ W . The superscript c denotes level cutting fusion and can usually be
omitted when the context is clear. The following satisfaction condition is then
added to those of epistemic logic:
w |= [O]ϕ iﬀ for all u ∈ RO(w), u |= ϕ.
Let O = i1 > i2 > · · · > im. Also, deﬁne Gj = {i1, i2 . . . , ij} for 1 ≤ j ≤ m
and assume k is the largest j such that
⋂
i∈Gj Ri(w) = ∅; then we have
RO(w) =
⋂
i∈Gk
Ri(w).
In other words, beliefs from agents below level k are completely discarded from
the merged result. Our rationale is that if a belief in level k +1 is unacceptable,
then any belief in a less reliable level is also unacceptable.
The second logic, DBFsn, is based on a level skipping strategy, which only
skips the agent causing the inconsistency and continues to consider the next level.
This strategy corresponds to the suspicious attitude of multi-source reasoning
[3], and has also been used in belief revision by Nebel [14]. The set of DBFsn is
the smallest set containing Φ0 ∪ {⊥,}, and is closed under Boolean operators
and the following rule:
– if ϕ is a wﬀ, so is [Ω]ϕ for any nonempty Ω ⊆ T On.
When Ω is a singleton {O}, we write [O]ϕ instead of [{O}]ϕ. If Ω = {O1, . . . , Om}
such that |δ(Oi)| = 1 for all 1 ≤ i ≤ m, then [Ω] is the distributed belief oper-
ator among ordinary agents. Therefore, the language is more general than that
of DBFcn.
Ordered Belief Fusion in Possibilistic Logic 637
3 Ordered Fusion in Possibilistic Logic
To resolve the inconsistency problem in PL⊗n , we combine DBF
c
n (resp. DBF
s
n)
with PL⊗n . Since possibilistic logic is inconsistency-tolerant [5], we introduce
a parameter, , to denote the degree of inconsistency tolerance. Recall that a
possibility distribution π : X → [0, 1] is normalized if Π(X) = supx∈X π(x) = 1.
A normalized possibility distribution represents a consistent belief state. If π
is not normalized, i.e., supx∈X π(x) < 1, π represents a partially inconsistent
belief state. 1− supx∈X π(x) is called the inconsistency degree of π, and denoted
by ι(π).
3.1 Level Cutting Fusion in Possibilistic Logic
In this subsection, we present a logic for reasoning about possibilistic belief fusion
based on a level cutting strategy. The logic is called CFPL⊗,n , where  is the
inconsistency tolerance degree of the logic. The set of CFPL⊗,n wﬀs is deﬁned as
the smallest set containing Φ0 ∪ {⊥,}, and is closed under Boolean operators
and the following rule:
– if ϕ is a wﬀ, then [G]aϕ, [O]aϕ, [G]+a ϕ, and [O]
+
a ϕ are wﬀs for any nonempty
G ⊆ Ag, any O ∈ T On, and any rational number a ∈ [0, 1].
As in epistemic logic, we use [i] instead of [{i}] when {i} is a singleton. The
intuitive meanings of [i]aϕ and [Ag]aϕ are respectively the same as those of
Biaϕ and Daϕ in PL
⊗
n . However, we not only consider a single agent and the
set of all agents, but also any nonempty subset of agents. [G]+a ϕ is similar to
[G]aϕ, except that the former means the strength of belief is greater than a.
Additionally, we have modal operators corresponding to the ordered fusion of
uncertain beliefs. [O]aϕ (resp. [O]+a ϕ) means that an agent merging distributed
beliefs in accordance with the ordering O will believe ϕ with a strength of at
least (resp. more than) a.
For the semantics, a CFPL⊗,n -model is a tuple M = (W, (πi)1≤i≤n, V ) such
that W is a set of possible worlds; each πi maps each world w to a possibility
distribution πi,w : W → [0, 1] over W such that ι(πi,w) ≤ ; and V maps elements
in Φ0 to subsets of W . Note that we require the inconsistency degree of the belief
state of each single agent to be no more than . This is the inconsistency tolerance
degree of the logic. Any belief with inconsistency beyond this degree must be
discarded. Let us now deﬁne derived possibility distributions πG,w and πO,w from
{πi | 1 ≤ i ≤ n} for each nonempty subset G ⊆ Ag, O ∈ T On, and w ∈ W as
follows:
πG,w =
⊗
i∈G
πi,w
πO>i,w =
{
πO,w if ι(
⊗
j∈δ(O>i) πj,w) > ,
πO,w ⊗ πi,w otherwise,
Then, the satisfaction relation |= for the CFPL⊗,n -model is deﬁned as
Ordered Belief Fusion in Possibilistic Logic 639
– Axioms:
1. P: all tautologies of propositional calculus
2. Bookkeeping ( denotes either [G] or [O]):
(a) cϕ ⊃ +d ϕ if c > d
(b) +c ϕ ⊃ cϕ
(c) 0ϕ
(d) ¬+1 ϕ
3. G1:
(a) ([G]aϕ ∧ [G]a(ϕ ⊃ ψ)) ⊃ [G]aψ
(b) ([G]+a ϕ ∧ [G]+a (ϕ ⊃ ψ)) ⊃ [G]+a ψ
4. G2: ¬[i]+ ⊥
5. G3: if G1 ∩G2 = ∅, then
(a) ([G1]aϕ ∧ [G2]bϕ) ⊃ [G1 ∪G2]a⊕bϕ
(b) ([G1]
+
a ϕ ∧ [G2]+b ϕ) ⊃ [G1 ∪G2]+a⊕bϕ
6. O1:
(a) ¬[δ(O > i)]+ ⊥ ⊃ ([O > i]aϕ ≡ [δ(O > i)]aϕ)
(b) ¬[δ(O > i)]+ ⊥ ⊃ ([O > i]+a ϕ ≡ [δ(O > i)]+a ϕ)
7. O2:
(a) [δ(O > i)]+ ⊥ ⊃ ([O > i]aϕ ≡ [O]aϕ)
(b) [δ(O > i)]+ ⊥ ⊃ ([O > i]+a ϕ ≡ [O]+a ϕ)
– Rules of Inference:
1. R1 (Modus ponens, MP):
ϕ ϕ ⊃ ψ
ψ
2. R2 (Generalization, Gen):
ϕ
[G]1ϕ
Fig. 1. The axiomatic system for CFPL⊗,n
Furthermore, we also deﬁne πΩ,w for each Ω ⊆ T On and w ∈ W as
πΩ,w =
⊗
O∈Ω
πO,w.
Then, the satisfaction relation |= for the SFPL⊗,n -model is deﬁned as
– w |= [Ω]aϕ iﬀ NΩ,w(|ϕ|) ≥ a,
– w |= [Ω]+a ϕ iﬀ NΩ,w(|ϕ|) > a,
where |ϕ| is the truth set of ϕ in the model, and NΩ,w is the necessity measure
associated with πΩ,w. The deﬁnition of the validity and consequence relation is
the same as above.
An axiomatic system can be also developed for SFPL⊗,n by generalizing the
corresponding axioms in DBFsn, as shown in Figure 2.
Ordered Belief Fusion in Possibilistic Logic 641
Table 1. Logics for belief fusion
without uncertainty with uncertainty
direct fusion KDDn DBF
c
n /DBF
s
n
ordered fusion PL⊗n CFPL
⊗,
n /SFPL
⊗,
n
References
1. L. Boldrin and A. Saﬃotti. A modal logic for merging partial belief of multiple
reasoners. Journal of Logic and Computation, 9(1):81–103, 1999.
2. B.F. Chellas. Modal Logic: An Introduction. Cambridge University Press, 1980.
3. L. Cholvy. A logical approach to multi-souces reasoning. In M. Masuch and
L. Po´los, editors, Knowledge Representation and Reasoning under Uncertainty,
LNCS 808, pages 183–196. Springer-Verlag, 1994.
4. L. Cholvy. Reasoning about data provided by federated deductive databases. Jour-
nal of Intelligent Information Systems, 10:49–80, 1998.
5. D. Dubois, J. Lang, and H. Prade. Possibilistic logic. In D.M. Gabbay, C.J. Hogger,
and J.A. Robinson, editors, Handbook of Logic in Artificial Intelligence and Logic
Programming, Vol 3 : Nonmonotonic Reasoning and Uncertain Reasoning, pages
439–513. Clarendon Press - Oxford, 1994.
6. R. Fagin, J.Y. Halpern, Y. Moses, and M.Y. Vardi. Reasoning about Knowledge.
MIT Press, 1996.
7. J. Hintikka. Knowledge and Belief. Cornell University Press, 1962.
8. C. J. Liau. A conservative approach to distributed belief fusion. In Proc. of the
Third International Conference on Information Fusion, pages MoD4–1, 2000.
9. C.J. Liau. A modal logic framework for multi-agent belief fusion. ACM Transac-
tions on Computational Logic, 6(1):124–174, 2005.
10. C.J. Liau and I.P. Lin. Quantitative modal logic and possibilistic reasoning. In
B. Neumann, editor, Proceedings of the 10th ECAI, pages 43–47. John Wiley &
Sons. Ltd, 1992.
11. C.J. Liau and I.P. Lin. Proof methods for reasoning about possibility and necessity.
International Journal of Approximate Reasoning, 9(4):327–364, 1993.
12. C.J. Liau and I.P. Lin. Possibilistic reasoning—a mini-survey and uniform seman-
tics. Artificial Intelligence, 88:163–193, 1996.
13. J.-J. Ch. Meyer and W. van der Hoek. Epistemic Logic for AI and Computer
Science. Cambridge University Press, 1995.
14. B. Nebel. Base revision operator and schemes: semantics representation and com-
plexity. In Proceedings of the 11th European Conference on Artificial Intelligence,
pages 341–345. John Wiley & Sons, 1994.
15. L.A. Zadeh. Fuzzy sets as a basis for a theory of possibility. Fuzzy Sets and Systems,
1(1):3–28, 1978.
