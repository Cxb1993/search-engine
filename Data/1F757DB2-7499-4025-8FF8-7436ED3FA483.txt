1行政院國家科學委員會專題研究計畫成果報告
考量資源限制及順序相依整備時間之不相關平行機台排程問題研究(I)
A study on unrelated parallel machine scheduling problems with
constrained resources and sequence-dependent setup time (I)
計 畫 編 號：NSC 96-2221-E-155-058
執 行 期 限：96年 8月 1日至 97年 7月 31日
主 持 人：蔡啟揚 元智大學工業工程與管理學系
計畫參與人員：高逸偉,王苡宸,吳函諭,彭育穎 元智大學工業工程與管理學系
摘要
本研究的動機來自於半導體封裝測試廠的記憶體檢測排程問題，這類問題屬於單目標排
程中的平行機台的排程問題，同時具有限及產品相依資源（可使用機台、測試功能卡及產品
載具）的限制與產品處理順序相關的整備時間（功能卡換裝測試及測試環境溫度調整）考量，
是複雜度極高的組合最佳化問題，屬於 NP-hard 問題。本研究以總時程時間(Makespan)最小
化為主要目標，發展兼具求解速度及求解品質的演算方法。首先應用最佳化方法中的分支界
限法(branch and bound technique, BnB)發展演算法。同時，考量業界重視的求解速度，另外設
計出以混合式鄰近搜尋法的模擬退火法(simulated annealing, SA)以及改良式交配和突變法則
的基因演算法(genetic algorithm, GA)。最後根據例題大小以及結構來設計不同的測試例題，藉
著測試結果來評估發展的分支界限法的績效。實驗結果顯示，分支界限法於小、中型規模例
題有不錯的求解品質及效率。
關鍵詞：有限資源、平行機台排程問題、總時程最小化
1. 緣由與目的
排程在工業界上的運用相當廣泛，舉凡半導體 IC封裝測試、液晶薄膜顯示器(TFT-LCD)、
印刷電路板(PCB)…等，都需要藉由排程來決定工件在各種機台上的最佳加工順序，以減少不
必要的人工成本及相關資源的浪費。本研究的動機來自於半導體封裝測試廠的 IC檢測排程問
題，每一批的 IC必須經由測試機台一一測試其功能是否正常，生管人員必須決定各批 IC 要
於哪一部測試機台上進行測試，而指派到同一機台之各批 IC亦須決定處理的先後順序。測試
產品來自不同顧客，其功能及型式各不相同，在進行 IC測試前，機台必須配合測試項目載入
特定程式（裝設功能卡），程式設定好後還必須先以標準工件進行測試，確認該程式設定無誤
後，才可以正式開始測試批的處理。此外，不同形式的產品需要先裝入配合的載具(handler)，
才能將 IC 透過載具依序載入特定機台上進行測試。有些產品因測試項目的需求或是顧客指
定，必須在特定測試機種上進行測試，在處理相同產品時所需的測試時間也會因使用機台的
新舊而有所不同。另外，測試環境溫度也要配合所測試產品批的需求在測試開始前先做調整。
33. 研究方法
本研究首先建立資源限制下等比例式非等效平行機台排程問題的數學模式，分別在分枝
界限法、模擬退火法及基因演算法為基礎發展三種演算法求解上述排程問題。
3.1 資源限制的等比例式非等效平行機台排程問題數學模式
由於本研究討論的有限資源的情況下，過往的數學模式對於我們的研究並不是有相當契
合，而多加了有限資源的條件之下，以目前的文獻中，並沒有在連續時間下，直接建構有限
資源排程問題數學模式的資料。因此鄭志傑[2] 加入了 Dastidar & Nagi[5] 所提出假設時間為
離散型態來求解有限資源排程問題的假設條件，以 Anagnostopoulos & Rabadi[4] 所提出的排
程問題數學模式為基礎，將連續時間依設定之時間單位分割為若干時間點，並配合各工件的
加工時間，逐一確定所有工件在排程系統時間內佔用資源情況，以確保符合有限資源的限制
條件。
符號定義
n ： 工件數。
m ： 機台數。
p ： 資源種類數。
Cj ： 工件 j的完工時間。
Tj ： 工件 j的基礎加工時間。
Vk ： 機台 k的加工速率。
Pj,k ： 工件 j在機台 k上的加工時間。
nl ： 資源 l的數量。
xi,j,k,t ： 二元變數，若為 1表示工件 j在機台 k上直接排在工件 i之後加工且完工時間為 t，
為 0則表示其他。
x0,j,k,t ： 二元變數，若為 1表示工件 j在機台 k上為第一個加工工件且完工時間為 t，為 0
則表示其他。
xi,0,k,t ： 二元變數，若為 1表示工件 j在機台 k上為最後一個加工工件且完工時間為 t，為
0則表示其他。
HV ： 一個極大的正整數。
Tt ： 時間分割的集合。
Aj,k,s ： 二元常數，若為 1表示工件 j在機台 k上的加工時間大於 s單位的時間分割，為 0
則表示其他。
yj,k,s,w ： 二元變數，若為 1表示工件 j於時間 w正在機台 k上加工且加工時間大於 s單位
的時間分割，為 0則表示其他。
rj,k,l ： 二元常數，若為 1表示工件 j於機台 k上加工時需要資源 l，為 0則表示其他。
0
n
i
i
Minimize C

 (1)
Subject to


  

n
ji
i
m
k
t
tt
tkji njx
h
0 1
,,, ,,1,1
0
 (2)
53.2 分枝界限法
本研究採用深度優先分支界限法(虛擬碼圖 1.所示)，其中在利用模擬退火法所得近似最
佳解做為初始上限值，在依深度優先法所尋找分支後之最小值。當此分支探底時，則判斷此
分支之探底值是否可以取代原先的目標值。本研究所使用的淘汰法則為(1)分支節點的下限值
大於上限值；(2) 分支節點違反資限制；(3)分支節點排法重複出現時。
圖 1. 深度優先分支界限法之虛擬碼
本研究提出下限值計算方式如下：
Step 1. 計算已排序的工件在各機台上的完工時間及最大完工時間。
Step 2. 計算未排序的工件在標準機台的處理時間總合。
Step 3. 計算各機台與最大完工時間差距。
Step 4. 計算各機台差距與各機台加工速率乘積總合。
Step 5. 計算未排序工件預測值。
Step 6. 將最大完工時間與未排序工件預測值相加即為下限值。
3.3 模擬退火演算法
本研究解決比例式非等效平行機台排程問題設計模擬退火法(虛擬碼圖 2.所示)，其中本
研究所使用混合式區域搜尋法，分別為(1)55%的雙點交換式變動；(2)25%的2-OPT變動；
(3)15%的前後調動法；(4)5%的隨機變動。
7圖 3. 基因演算法之虛擬碼
上述演算法中，第 12-28 行為整個基因演算法之核心部份，先是透過輪盤法選擇出 2 組
parents，在透過一定機率交配、突變及局部改善搜尋，其中會針對交配或突變後的 childrens，
以 IsFeasible()進行檢查是否需進行修正，其中局部改善搜尋最後直到找到可行解修正次數C1N
被超過。其中 N為現在 childrens的鄰近解總數，C1為給定之常數。當演化世代到一定的世代
gmax或執行時間(run time)到夠久的 RTe 或母群體偏差率到設定的 Dev e則停止演化，並輸出在
比例式非等效平行機台問題的最佳解。
4. 研究結果
為了驗證本研究提出之有限資源下的比例式非等效平行機台排程模式的績效，本章根據
建立的演算法，進行參數設定。本研究執行架構以 Visual C++ 6.0撰寫程式，執行環境為 Intel
Core2 Duo E8200 2.6GHz (2GB RAM)，作業系統為Windows XP 之個人電腦下進行例題測試。
4.1 測試例題
本研究將建立三種不同工件數、機台數和功能卡種類數組合之小、中及大型規模的測試
例題做為參數測試之用，資料如表 1.所示。
9題求解時，最佳解均可 530 秒內獲得。以平均執行時間來看，也可發現演算法的求解效率受
到例題中可用資源數量多寡的影響非常大，當可用資源的數量由少增多時，可看出 SA及 GA
的求解速度都是越快且求解品質越好。
在大型例題部份，本研究所使用 TBnB 於 3,600 秒後停止分支並以所得之最佳解或近似
最佳解與 SA及 GA(以表 4.進行設定)所得近似最佳解之最小值進行比較。首先針對 TBnB的
上下限值及節點數績效評估，本研究使用的初始上下限值之平均值分別可達距離最佳解
2.592%及 17.541%的範圍，可得知其初始上下限值能有效縮小搜尋範圍。其中，由於此問題
規模以 3,600秒下進行分支界限法求解，於 90題的例題中，僅有 15題的例題能在 3,600秒內，
以初始上限值的標準下搜尋到最佳解，其餘皆大於或等於初始上限值，由此可知 TBnB 對於
大型規模問題搜尋有一定程度上的困難，因而接下只針對 SA及 GA進行評估。
表 4. SA及 GA於大型規模問題之參數設定表
演算法 控制因子 代碼 參數水準 演算法 控制因子 代碼 參數水準
起始溫度 T0 T0 = f(X) 母群體數 ps 100(組)
結束溫度 Te T0 / 10 世代數 gmax 1,500(代)
下降移動次數 C1 1,800(次) 交配率 pc 0.9
總移動次數 C2 3,000(次) 突變率 pm 0.7
修正次數 C3 100(次) 修正次數 C1 100(次)
冷卻率 α 0.9 執行時間 RTe 3,600(s)
執行時間 RTe 3,600(s) 母群體偏差率 Dev 0.000
SA
平均執行次數 AVG 10(次)
GA
平均執行次數 AVG 10(次)
其中，資源種類數為(RT)2到 4的情形下，SA與 GA分別以 40秒及 1250秒內搜尋到不
錯的近似最佳解，其整體的最佳解平均偏差率分別在 4.00%及 2.81%。以資源種類數為 2 為
基準下來檢視各方法， SA的平均執行時間分別為 24.112、17.819及 6.845，其標準差從 16.126
降至 7.865，而 GA執行時間為 25.036、20.076及 18.869，標準差從 10.460降至 2.300，都很
快的停止演化，由此可以說明，SA及 GA在可用資源的數量增加時，其執行時間會越快且其
間差距變小，從執行時間角度下相比較時，SA優於 GA，但穩定度則是 GA優於 SA。
5. 結論
本研究以半導體封裝測試廠的 IC檢測排程為基礎，問題包含平行機台的限制條件、資源
為有限的情形，以及工件、機台和資源的相互關係，而以總時程時間(Makespan)最小化當作
目標，提出新的下限值計算，同時利用模擬退火法做為上限值，利用分支界限法求得最佳解，
將例題分為小、中和大型規模問題，並且根據例題資源種類數以及資源強度劃分不同的例題
結構，透過各種方式進行比較與分析，而實驗結果顯示，分支界限法可在分支界限法於小、
中型規模問題，可以分別以 60秒及 600秒的搜尋時間內有效求得最佳解或近似最佳解，而大
型規模問題，則可考慮使用模擬退火法或基因演算法，對於考量求解時間的產業來說，將會
有相當大的應用空間。也顯示出當資源種類越多的情形下，例題的複雜度提高，計算時間也
隨之增長；而可用資源的數量增多時，表示問題不受資源所限制，因此計算時間較長。
6. 參考文獻
