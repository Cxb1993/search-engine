 2 
implement the web interface in the DICOM server directly. This approach will constitute 
an image server that supports traditional DICOM query/retrieve protocols and the web 
accessibility. Both DICOM viewer and web browser can link the server for acquiring and 
viewing medical images. This is a proper approach for developing the DICOM server and 
web server simultaneously. And it will constitute to a single product for handling medical 
image. However, lots of PACS servers are commercial products that have already been 
setup in a healthcare environment. It would be very difficult, if not impossible, to modify 
those commercial systems. For those DICOM servers that already have constructed in the 
healthcare departments, another approach for building the web accessibility would be 
feasible. This approach constructs a gateway system that supports DICOM query/retrieve 
protocols as a role of Service Class User (SCU).  With these protocols, the gateway 
system could search and acquire image that stored in the PACS server. And one could 
build web server in the gateway system for accessing medial images through a browser. 
Through the gateway, one can also use a browser to expose images that already stored in 
the PACS server. The medical image content repository plays both as a gateway and a 
server. The architecture and functionalities of the server that we plan to develop are 
described as 
follows:
 
Figure 1. The architecture and interactions of the PACS, image content server, and 
browser. 
 4 
Page 1. Repository search portal  
Typically, courseware creators search and expose content repository. After that, the 
creators would assign a specific learning content in the LMS for learners. Search portal 
page is the image repository entry point. This portal should have the ability to 
authenticate users. When courseware creator linked to an image repository through LMS, 
LMS should pass the user ID to the image repository. And the image repository should 
authenticate the user. After authentication, the repository portal will provide interface for 
creator to input criteria for searching and exposing medical image contents.  
 
Page 2. Matching result page 
This page lists the search results that match the criteria. The page provides courseware 
creator the whole view of matching results (brief descriptions and small picture of each 
image object). With the interface on the page, creator can identify and retrieve image 
object of particular interests. 
 
Page 3. Image editing page 
The page provides fine view of the specific image. It also provides editing capability of 
the image. Creator can adjust the presentation (scaling, window level, contouring, 
measurement, and annotations) of the image. After the image adjusting, an URI will be 
generated to represent the Presentation State (PS) [8] of the image. This generates a 
teaching asset represented by the URI. The URI will be forwarded to LMS as a linking 
point of content in LMS courseware.   
 
Page 4. Learning asset page 
After the authoring processing described on image editing page, learner can view the 
courseware in the LMS and can retrieve the asset form the repository through the URI in 
the courseware. It is the learning asset (the image with presentation state authored by 
courseware creator) not the raw image provided to learner. With the presentation assigned 
to the image, creator can share their view of clinical images to learner. 
 
 
 6 
of pixel data into Tag7fe00010. Consequently, the file sizes of XML data converted from 
DICOM objects usually are small enough that can easily handled by browser. When 
browser requests a specified image for display, the XML data would also been loaded to 
browser also. The XML data can be handled by JavaScript in our RIA solution. Therefore 
the data in DICOM elements can also be displayed on browser.  And some tags also 
provide useful information for us to handle the image on browser. For example, 
according to the Tag00280030 (Pixel Spacing), we can acquire the real size of each pixel. 
Consequently, we can also perform measurements and calculate the real distance of lines 
that drawing on medical images. 
 
As that addressed in the introduction, there are more than 70 clinical data objects have 
been defined in DICOM standard. Some of the objects (such as radiotherapy planning 
results, ECG waveforms, and structured reports) have very sophisticated data structure. 
DICOM standard uses nested data elements (SQ: Sequence Data element) to deal with 
the sophisticated data. The complicated structuralize DICOM object may be generated in 
specialized modalities or domain specific information systems. And the DICOM objects 
could be transferred to PACS server for long term storage. However, the domain specific 
DICOM objects usually can not be handled by DICOM viewer. We need specialized 
programs to deal and present specific DICOM objects. And these requirements usually 
were not supported by a general purpose DICOM viewer. In our RIA solution, the 
DICOM objects will be converted into XML data. And we can design specified web 
pages for handling different type of DICOM objects. For example, design an ECG 
viewing web page to deal ECG XML data converted for ECG DICOM object. Or, create 
a treatment planning view web page to handling RT planning results and CT images. 
Following is a XML example converted from DICOM RT object (Figure 3). Using the 
XML data, we can present RT planning results on web. 
 
 8 
system that can handle all the DICOM objects defined in current DICOM standard and present 
all the DICOM data appropriately. Except for 2D and 3D images or audio and video data, most 
of information defined in DICOM standard can be transferred into XML files as that in 
examples 5. The XML data can easily processed in RIA web solutions. Using web architecture, 
we can construct lots of special purpose web servers to handle a variety of clinical data. The 
results of all the special purpose web servers can be integrated together by HTTP linkages. 
Consequently, all the clinical data can be presented appropriately in a single browser. 
Following figure presents a simple architecture for using web solutions to handle medical 
images and RT results. 
 
 
Figure 4. A web framework for handling DICOM image and RT data. DICOM image and RT 
data can be processed in separate web servers. Eventually, both of data can be presented on the 
same browser. 
 
The processing and presentation of radiotherapy data have lots of domain specific 
requirements. Figure 5 shows a preliminary result that using RIA solution for presenting RT 
image and contours.  
 
 10 
contours on the images are erasable and editable on browser. And we can select a specific 
contour on the user interface, as on the right bottom image a small blue rectangle has be 
defined. In the small rectangle contains a deep blue contour. And the description of the contour 
would be displayed in a message box as that shows in figure 9(ROI : Region of Interest, CTV: 
Clinical Target Volume). So, RT results with the reference images can be handled in the RT 
web system.  
 
Discussion 
Other than system development, there are also some issues that require further 
investigation and discussion for adopting RIA solutions in healthcare domain. First, as 
that we presented in example 3, we use DICOM WADO protocols for browser to access 
specific images and assign the presentation of the images. In figure 7, we have also 
shown that using WADO liked request with two extra parameters (View axis and Location 
index) for navigating 3 cross section views of a series of medical images. And in figure 11 we 
also show that web protocol can be used for accessing huge microscopic images and video 
data. Consequently, a carefully considerate web accessing specification might be used as a 
standard for sharing all the clinical contents. The specification might be similar to current 
WADO standard with some extension and modification.   
 
Other than standardized web accessing protocol, the RIA solutions would also require 
wildly and stably supported by browsers. This would be very important for us adopting 
RIA solutions to share clinical documents across healthcare enterprises and to handle 
EMR (Electronic Medical Records)  that require of long term preserving. Currently, 
there are several RIA solutions using different specifications and technologies. This study 
selected Microsoft Sliverlight for handling web computer graphics because Sliverlight is 
easy to integrate with Microsoft Visual Studio .net web programming. And Sliverlight 
web pages are supported by most of popular browsers (Microsoft IE 6, 7 and Firefox 2, 3, 
Safari 2, and Google chrome 1). However, the RIA solutions, browsers, and platforms 
 12 
http://www.ihe.net/Technical_Framework/index.cfm#IT  Accessed September 20, 2009 
 
 
