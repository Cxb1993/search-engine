learning algorithms, and implement 
these technologies into an FPGA and 
realize an embedded system in the 
following three years. In this year, we 
are planning to design a 
functional-link-based neuro-fuzzy 
network (FLNFN), which can generate 
the consequent part of a nonlinear 
combination of input variables to 
approximate the desired output more 
effectively. An online learning algorithm, 
which consists of structure learning and 
parameter learning, is also used. The 
structure learning depends on the 
entropy measure to determine the 
number of fuzzy rules. The parameter 
learning can adjust the shape of the 
membership function and the 
corresponding weights of the consequent 
part of the fuzzy rules. To demonstrate 
the capability of the FLNFN, we will 
apply some simulations in different 
areas including recognition, prediction, 
and control problems. We will integrate 
the functional-link-based neuro-fuzzy 
networks into FPGA (Field 
Programmable Gate Array) using the 
VHDL (Very High Speed Integrated 
Circuit Hardware Description Language) 
and apply to solve the nonlinear control 
problems. 
Keywords: Neuro-fuzzy network, 
functional link neural network, on-line 
learning, VHDL, Field Programmable 
Gate Array (FPGA). 
二、緣由與目的 
近 年 來 ， 類 神 經 模 糊 網 路
(Neuro-fuzzy network)[1]-[3]已經成為
一熱門的研究議題，並且應用在預
測、控制、辨識、影像處理、決策等
領域上。其中，類神經模糊網路的兩
種典型類別分別是：Mamdani-type類神
經模糊網路[4]-[5]與TSK-type類神經
模糊網路[6]-[7]。Mamdani-type類神經
模糊網路是分割輸入空間，再將推論
部指定到那些空間，因此所需的模糊
法則個數相對的會比較多；相對的，
TSK-type類神經模糊網路所使用的模
糊法則個數會比Mamdani-type類神經
模糊網路更少，它是將Mamdani-type
類神經模糊網路推論部之模糊集合以
一線性函數的方法取代。許多文獻
[6]-[7]已經證實TSK-type類神經模糊
網路於網路架構與學習效率方面皆比
Mamdani-type類神經模糊網路優秀。在
傳統的TSK-type類神經模糊網路中，
它的推論部是以輸入訊號的線性組合
函數完成，而其網路輸出具有局部近
似目標輸出的功能。不幸地，傳統的
TSK-type類神經模糊網路的推論部無
法提供完全的映射能力。NARA[8]和
CANFIS[9]利用 多 層類神經 網路
(multilayer neural network)當作模糊法
則的推論部，藉由類神經網路是非線
性函數的特性使得類神經模糊網路的
推論部能使網路輸出更具體且更逼近
目標輸出，但此方法的收斂速度太慢
且計算複雜度太高。 
傳統的模糊系統是由一連串的「若
～則～(If～Then～)」模糊法則組合而
成。而模糊法則的選擇常常依賴適合
的決策知識。很明顯地，要由專家從
一個複雜系統中，對所有輸入－輸出
的資料找出適合模糊系統使用的法則
是困難的。為了解決這個困難點，在
算法的開發，為了解決實際問題，因
此再將所得到的結果以硬體來實現，
並於嵌入式系統中實現時序預測問
題、影像處理問題及控制問題。本計
畫中我們將設計一個函數鏈結類神經
模糊網路 ( f u n c t i o n a l - l i n k - b a s e d 
neuro-fuzzy network，稱為FLNFN)，並
發展其相關線上學習演算法。函數鏈
結類神經模糊網路是利用函數鏈結神
經網路當作類神經模糊網路的推論
部。函數鏈結神經網路(functional link 
neural network，稱為FLNN) [22]能夠克
服多層類神經網路收斂速度慢的一些
缺點，它是利用了函數展開(functional 
expansion)來取代神經元中的活性函
數。函數鏈結神經網路是一種單層的
類神經網路架構，由於使用了函數展
開的方式，使得它能夠在高維度的輸
入空間中提供更好的非線性決策邊界
(nonlinear decision boundaries)能力。而
所開發的線上學習演算法包括了結構
學習及參數學習，在結構學習方面，
結合了輸入空間的分割及模糊法則的
產生。至於參數學習方面，是為了調
整網路中的所有參數。所發展的網路
架構剛開始時，並無節點(即模糊法則)
的存在，模糊法則的產生完全由線上
演算法同時進行結構及參數學習所完
成，使用者不需要事先設定模糊法則
數。最後我們將使用FPGA來實現所提
出的網路架構及相關的學習演算法，
並架構在嵌入式系統中，如此便可將
其實際應用於控制、時序預測和影像
處理等等方面的問題，藉此來達到一
個低成本、高效能、高適應性具有即 
時運算的要求。 
三、研究方法 
 設計一個新的類神經模糊網路架構 
(1)、函數鏈結神經網路 
函數鏈結神經網路(FLNN)最初是
由Patra等人[22]提出，作者藉由基本函
數近似定理，隨機線性組合輸入信
號，擴展輸入信號空間，成功地將多
層感知機中的隱藏層省略掉，並簡化
多層感知機的架構，使FLNN結構具有
比多層感知機結構更快的收斂速度及
較少的計算負荷。作者同時也證明
FLNN的性能優於多層感知機。FLNN
的函數近似採用三角函數多項式去擴
展輸入信號空間的維度，也成功地應
用在非線性動態系統的識別與非線性
通 道 等 化 。 FLNN 是 將 輸 入 信 號
T
nxxx ] ...  [ 21=X 經 函 數 展 開 成
T
N x...xx )](  )( )([ 21 φφφ=Φ ，N個線性獨立的
函數，將n維信號空間映對至N維信號
空間，即 Nn RR → ，n<N；它的理論
基礎在[22]中討論與分析，其主要的目
的是將原先在低維度信號空間線性不
可分離之問題轉換到高維度信號空
間，藉以形成線性可分離之問題，以
便還原正確信號。此映對函數有多種
選擇，譬如：Legendre、Chebyshev多
項式和三角函數sin(x)或cos(x)，其中以
具有N次部分和的Fourier級數為最佳
近似函數。因此，三角基底函數 
(trigonometric  polynomial basis 
functions) 可 由
{ }...xcosxsinx...,xcosxsinx ), ( ), ( ,  ), ( ), ( , ,1 222111 ππππ
組成，若輸入信號有超過2個以上的變
數，其外積項(outer product terms)加上
三角基底函數當做函數擴展(function 
expansion)Φ(X) ，會有較佳之收斂效
果。Patra等人[22]證實在如此函數擴展
選擇下，利用倒傳遞學習演算法，
FLNN應用在非線性動態系統識別
上，其映對準確度比多層感知機好很
模糊法則，此層完成模糊邏輯法則前
鑑部匹配工作，所以此模糊節點完成
模糊且(fuzzy AND)或積(product)動作 
             
∏=
i
)(
ij
)(
j uu
23
       (3) 
第四層：在這一層中節點稱為後鑑部
節點(consequent node)，每個節點是第
三層的輸出乘上第一層和連結權重的 
線性組合， 
        
)(
1
0
34 ∑
=
+=
n
i
iijj
)(
j
)(
j xwwuu
   (4) 
第五層：此層的節點稱為輸出節點
(output node)，在此層中，將完成解模 
糊化的動作 
 
∑
∑ ∑
∑
∑
=
= =
=
=
+
=== p
j
)(
j
p
j
n
i
iijj
)(
j
p
j
)(
j
p
j
)(
j
)(
u
xwwu
u
u
uy
1
3
1 1
0
3
1
3
1
4
5
)(
(5) 
(3)、函數鏈結類神經模糊網路 
函數鏈結類神經模糊網路(FLNFN)
是整合了傳統TSK-type類神經模糊網
路及函數鏈結神經網路，主要是利用
FLNN的特性取代了TSK-type類神經
模糊網路的後鑑部，如圖三所示。整
個網路架構可區分為五層，第一層和
第五層分別代表輸入層和輸出層，第
二層為歸屬函數層，第三層為法則
層，第四層為同步接收函數鏈結神經
網路的輸出訊號及第三層輸出訊號。
在此架構中，是以非線性組合作為推
論部，此種方式的模糊法則如下表示
之： 
Rule-j: 
NjNijijj AxAxAxAx  is  and ...  is  and ...  is  and  is  IF 2211
MMjjj
M
k
kkjj
w...ww
wyˆ
φφφ
φ
+++=
= ∑
=
2211
1
 THEN        
其中Rule-j指出第j個法則，Aij是模糊集
合，xi為網路輸入變數，推論部是利用
函數鏈結神經網路的局部輸出 jyˆ 表示 
出一連串非線性組合。 
 發展一個線上學習演算法 
線上學習演算法包括－結構學習
(structure learning) 和 參 數 學 習
(parameter learning)演算法，如圖四所
示。結構學習包含輸入空間的分割和
模糊法則的建立。而參數學習主要為
了調整網路中所有的參數。所發展的
網路剛開始時，並無節點(即模糊法則)
的存在，模糊法則的產生由線上同時
進行的結構與參數學習所完成。 
x1
x2
F.E.
x1
x2
y
w11w21
wM1.
.
.
.
.
.
.
.
.
.
.
.
.
.
.
第一層 第二層 第三層 第四層 第五層
N
or
m
al
iz
at
io
n
1yˆ
2yˆ
3yˆ
1φ
2φ
Mφ
∑
∑
∑
 
圖三、函數鏈結類神經模糊網路 
整個學習的方式，可利用誤差倒傳
遞學習演算法(Back-propagation 
algorithm)的觀念，調整網路架構中的
歸屬函數及法則之權重。而能量函數
或誤差函數，亦可定義為： 
          2)]()([
2
1 tytyE d−=      (7) 
在上式中，yd(t)表示目標輸出值，y(t)
表示模型輸出值，若能在學習過程中
把誤差函數的值降低，將可引導此架
構的參數沿著期望的方向調整。因
此，整個學習的方法和誤差倒傳遞學
習法則的精神是一致的。至於函數鏈
結類神經模糊網路內部參數的調整可 
由下面的通式表示： 
        ( ) ( ) ⎟⎠
⎞⎜⎝
⎛
∂
∂−+=+
w
Etwtw η1    (8) 
其中，w為每一個節點的調整參數，η
為學習速率。每一層中每個類神經元 
之誤差訊號計算如下： 
w
a
a
E
w
functionactivation
functionactivation
E
w
E
∂
∂
∂
∂=
∂
∂
∂
∂=∂
∂ )(
)(
           (9) 
之後利用(8)和(9)式，對每參數做修正 
推導。 
 
 設計一FPGA實現函數鏈結類神經
模糊網路 
我們將利用所設計的函數鏈結類
神經模糊網路模組及相關學習演算
法。當學習完畢後，表示整個架構已
經學習完成，因此可以開始著手設計
並實現於硬體上，整體的流程如圖五
所示。 
 
圖五、整體流程圖 
本計劃主要是使用Xilinx公司所出版
的ISE6.2i軟體來做程式編輯及電路設
計，以及MODELSIM SE 5.7g軟體來做
模擬，使用的晶片為Xilinx Virtex-4 
XC4V LX160-FF1148，此晶片是內含
於我們所使用的V4-IP5000平台中，此
平台內含兩顆FPGA晶片共有3200萬
個邏輯閘，可作為FPGA_IP驗證。首
先我們會先對FPGA的整個設計流程
做個大約的簡介。接著在設計函數鏈
結類神經模糊網路的FPGA硬體架構
時，我們必需先定義好輸入值、運算
輸出值及網路架構中全部參數值的數
值表示方式，因此我們首先會敘述計
畫中所用的數值表示方式，之後在對
困難度較高較難以硬體實現的數學函
式想出解決的方法及實現的方式。最
後，在將整個函數鏈結類神經模糊網
路以FPGA硬體實現。 
(1)、FPGA設計流程 
以往在設計數位電路時，大多是以
IC以及相關電子元件根據所設計的電
路圖，將電子元件插置於麵包板上或
者焊接於電路板上，然後在使用信號
產生器所產生的信號輸入到電路，在
以示波器或邏輯分析儀等裝置來觀測
電路的輸出信號，藉此來完成電路功
能的測試與驗證，假如測試出來的信
號有誤的話，則必須再去對電路做修
改，但是這種方法當所設計的電路邏
輯數目很大時就會造成許多的不變與
困難，特別是在很複雜的積體電路設
開 始
設 計 構 想 與
程 式 編 輯
電 路 合 成
( S y n t h e s i s )
功 能 模 擬
( F u n c t i o n  S i m u l a t i o n )
電 路 實 現
( I m p l e m e n t )
時 序 模 擬
( T i m i n g  S i m u l a t i o n )
規 劃
( C o n f i g u r e )
使 用 於 系 統
功 能 正 確
與 否 ?
驗 證 是 否
成 功 ?
否
否
是
是
 
圖六、FPGA設計流程圖 
表一：數值表示方式 
 
表二：數值表示誤差量 
 
(3)、設計並實現高斯函數與sine和
cosine運算函式 
在函數鏈結類神經模糊網路的硬
體實現過程中，我們將會遇到兩個困
難點，第一個就是類神經模糊網路架
構中高斯函數的指數(exponential)運算
部分，第二個就是在函數鏈結神經網
路(FLNN)中的sine和cosine運算。高斯
函數算式部分如公式(2)所示，由公式
可知高斯函數是一個複雜的運算函
式，所以將高斯函數實現在硬體中是
很困難的。因此很多學者皆在尋求解
決 的 方 法 ， 其 中 查 表 法 (Look-up 
table，LUT)為最傳統且簡單的方式
[27]，雖然可以很快且準確的得到與輸
入相對應的答案，但是這個方法需要
針對每筆資料的輸入與輸出值做事先
建表的工作，而且當要實現更高的精
準度時，所要花費的前置建表時間及
所佔的資源也會相對的提高很多。因
此，在本計劃中我們將採用泰勒展開
式(Taylor series)來對高斯函數做精確
的逼近，並且為了避免在硬體實現高
斯部份時，因為數入數值過大或過
小，而造成溢位問題導致產生較大誤
差情況發生，所以我們還會加入查表
法來針對誤差較大的部份做補償的動
作。另外，在sine和cosine運算部份我
們也是採用泰勒展開式來對函數做精
確的逼近。如下為泰勒展開式的表示
式 
)
!!4!3!2
1(1
432
n
xxxxx/e
n
x ++++++=− K   (11) 
圖十、函數鏈結類神經模糊網路 
全部元件 
圖十一、硬體實現模糊化單元 
 
圖十二、硬體實現推論處理單元 
 圖十三、硬體實現後鑑部單元 
圖十四、硬體實現解模糊化單元 
四、實驗結果 
▓水槽溫度系統控制 
在此計畫中，我們將提出的方法應
用在水槽溫度系統的控制，水槽系統
溫度的控制是藉由下列的公式進行運
算: 
       
CT
tyY
C
tu
dt
tdy
R
)()()( 0 −+=    (14) 
其中 y(t)是系統的輸出溫度，u(t)是熱
流動， 0Y 是房間溫度，C 是系統的等
效熱能，TR 是在系統的邊界和周圍之
間的等效熱變电阻。 
假設 TR 和 C 為常數，此系統在
公式(14)中被重寫為: 
040)(50 ]1[)(1
)1(
)()1( yeku
e
e
kyeky Tsky.
Ts
Ts α
α
α α
δ
−
−
−
− −++
−
+=+ (15)
其 中 此 系 統 中 的 400151 −= e.α ，
3679738 −= e.δ 和 0Y =25.0( C° )。輸入
u(k)限制在 0 到 5 伏表示電壓單位，樣
本間隔為 Ts=30。 
圖十五為傳統應用在線上訓練策
略的區塊圖，此策略中分為兩個階段: 
(一)訓練階段，(二)控制階段。在訓練
階段中，開關 S1 和 S2 連接點 1 和 2
成為一個訓練迴圈。在這個迴圈中，
訓練資料的輸入向量和期望可以定義
為 )](  )1([)( kykykI pp += 和 )(ku 。而在
 
(b) 
圖十七: (a) FLNFN 控制器在水槽系統
中在脈衝雜訊下的變化。(b) FLNFN 
控制器，TSK-type NFN 控制器和 
FLNN 控制器的誤差曲線圖。 
在許多工業控制上，一個共同的
特性就是參數容易改變在不可預知的
狀狀下。因此在第三個測試中，我們
加入了 )2(70 −∗ ku. 值到設備的輸入在
60 th 的地方，並且和其它控制器進行比
較，圖十八 (a)為當設備動態變化
FLNFN 所控制的變化，圖十八(b)為其
它控制器所控制對應的誤差圖。而所
測試的 FLNFN 控制器、PID 控制器、
模糊控制器、函數鏈結類神經網路控
制器和TSK-type的控制器的SAE值分
別為 263.3，322.2，273.5，311.5 和 
265.4。 
 
(a) 
 
(b) 
圖十八: (a) FLNFN 控制器在水槽系統
中當發生改變時的變化。(b) FLNFN 
控制器，TSK-type NFN 控制器和 
FLNN 控制器的誤差曲線圖。 
最後的模擬，我們測試斜面溫度
點的追蹤，其溫度定義如下: 
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
≤<°
≤<°−∗+
≤<°−∗+
≤<°−∗+
≤°
=
1209070
9070))70(5060(
7050))50(8044(
5030))30(5034(
3034
)(
kforC
kforCk.
kforCk.
kforCk.
kforC
kyref (18)
 
圖十九(a)為 FLNFN 控制器追蹤的效
能，圖十九(b)為 FLNFN 控制器、PID
控制器、模糊控制器、函數鏈結類神
經網路控制器和 TSK-type 的控制器所
對應的追蹤誤差，其 SAE 值分別為
44.2， 100.6，88.1，98.4 和 54.2。由
結果可以發現我們所提出的方法在溫
度的控制上都要優於其它的控制器。 
 
(a) 
 
(b) 
圖十九: (a) FLNFN 控制器在水槽系統
中斜面溫度追蹤。(b) FLNFN 控制器， 
TSK-type NFN 控制器和 FLNN 控制
器的誤差曲線圖。 
各模擬例子所得到的 SAE數據圖
如下表三所示: 
 
 
[13] 張 耀 文 等 譯 ，  “XILINX 
FPGA/CPLD 數位邏輯 設 計 實
習” ，全華科技圖書1998。 
[14] 林灶生、劉紹漢，“最新VHDL晶
片設計” ，全華科技圖書2004。 
[15] 鄭群星，“FPGA/CPLD數位晶片
設計入門-使用Xilinx ISE 發展系
統”，全華科技圖書 2007。 
[16] T. H. Li, S. J. Chang, and Y. X. 
Chen, “Implementation of 
human-like driving skills by 
autonomous fuzzy behavior control 
on an FPGA-based car-like mobile 
robot,” IEEE Trans. Industrial 
Electronics, vol. 50, no. 5, pp. 
867-880, Oct. 2003. 
[17] H. Hiroomi ,“A new digital 
pulse-mode neuron with adjustable 
activation function,” IEEE Trans. 
Neural Networks, vol. 14, no. 1, pp. 
236-242 , Jan. 2003. 
[18] C. M. Kim, H. M. Park, T. Kim, Y. 
K. Choi, and S. Y. Lee, “FPGA 
implementation of ICA algorithm 
for blind signal separation and 
adaptive noise canceling,” IEEE 
Trans. Neural Networks, vol. 14, no. 
5, pp. 1038-1046, Sep. 2003. 
[19] D. J. Kim, “An implementation of 
fuzzy logic controller on the 
reconfigurable FPGA system,” 
IEEE Trans. Industrial Electronics, 
vol. 47, no. 3, pp. 703-715, June 
2000. 
[20] M. Krips, T. Lammert, A. Kummert, 
“FPGA implementation of a neural 
network for a real-time hand 
tracking system,” IEEE 
International Workshop, pp. 
313-317, Jan. 2002. 
[21] M. A. Hannan Bin Azhar and K.R. 
Dimond, “Design of an FPGA 
based adaptive neural controller for 
intelligent robot navigation,” in 
Proc. Euromicro Symposium, pp. 
283-290, Sept. 2002. 
[22] J. C. Patra, R. N. Pal, B. N. 
Chatterji, and G. Panda, 
“Identification of nonlinear 
dynamic systems using functional 
link artificial neural networks,” 
IEEE Trans. on Syst., Man, and 
Cybern., vol. 29, Apr. 1999. 
[23] C. E. Shannon, “A mathematical 
theory of communication,” Bell 
System Technology Journal, vol. 27, 
pp.623-656, 1948. 
[24] B. Parhami, Computer Arithmetic 
Algorithms and Hardware Designs, 
Oxford university press, 2000. 
[25] M. T. Tommiska, “Efficient digital 
implementation of the sigmoid 
function for reprogrammable 
logic,” Computers and Digital 
Techniques, vol. 150, pp. 403-411, 
Nov. 2003. 
[26] J. J. Blake, L. P. Maguire, “The 
implementation of fuzzy systems, 
neural networks and fuzzy neural 
networks using FPGAs,” 
Information Sciences, vol. 112, pp. 
151-168, Dec. 1998. 
[27] X. Yu and D. Deut, “Implementing 
neural networks in FPGA,” in Proc. 
Hardware Implemen. Neural Netw. 
Fuzzy Logic Inst. Elect. Eng. 
Colloq., pp. 1-5, Mar. 1994. 
