2 
operation control, knowledge modeling and 
applications on manufacturing information 
systems. Besides, many efforts have been 
conducted to increase the functionality of 
CIM systems by adding specialized modules 
such as simulators, knowledge-based systems, 
natural language interfaces, and etc. [1,2] 
 A significant effort in recent CIM 
development was carried out by SEMATECH 
[3] who had layout and created an open 
framework for the integration of 
manufacturing execution system (MES) 
applications in semiconductor factories. Its 
CIM framework aims at (1) reducing new 
MES application development/integration 
cost and cycle time, (2) reducing new factory 
ramp-up time, (3) providing a stronger, 
broader base of viable application suppliers, 
(4) increasing productivity of member 
company CIM system support teams. A full 
set of functional components were defined as 
the specification of its framework using 
interface definition language (IDL). 
Furthermore, it utilized CORBA [4] as the 
common interface that defines the 
architecture of an Object Request Broker, 
which enables and regulates interoperability 
between objects and applications across 
heterogeneous languages and computer 
boundaries. 
 Nevertheless, the CIM framework 
specification defined by SEMATECH has 
focused solely on the integration of MES 
applications that concentrate on the control at 
the shop level of manufacturing systems. In 
order to provide a more generic framework 
for a broader manufacturing architecture, in 
this paper we have: 
y incorporated components of 
manufacturing applications at the factory 
engineering level, which include product 
design, process planning and material 
requirement planning, to expand 
SEMATCH CIM framework to be more 
generic as shown in figure 1. Our 
previous work has provided basic 
components and functionalities [5,6]. 
y presented a systematic design and 
analysis methodology, by expanding our 
previous work, [7] for the framework that 
has to be updated whenever new 
applications or new functionalities were 
developed and integrated into existing 
CIM systems.  
 
MES Application 1
Factory
Services
Components
MES Application 2
Factory
Management
Components
Factory
Labor
Components
Material
Management
Components
Process
Specification
Components
Advanced
Process
Control
Components
Machine
Control
Components
Material
movement
Components
Schedule
Management
Components
Factory
Layout
Design
Components
Part
Design
Components
Process
Planning
Components
Machine
Specification
Components
Labor
Specification
Components
Order
Planning
Components
Shop Floor
Control
Components
MES Application 3
CAD Application 1
CAD Application 2
CAD Application 3
CAM Application 1
CAM Application 2
CAM Application 3
MRPII Application 1
MRPII Application 2
MRPII Application 3
CORBA
Fa
ct
or
y 
O
pe
ra
tio
n
Le
ve
l
Fa
ct
or
y 
En
gi
ne
er
in
g
Le
ve
l
C
O
R
B
A
O
M
A
To
En
te
rp
ris
e 
Fr
am
ew
or
k
SEMATECH CIM Framework
 
Figure 1. An Expanded SEMATECH CIM 
Framework 
 
 Recent evolution on object oriented 
design and analysis (OO D&A) in software 
engineering has promoted the development 
of Unified Modeling Language (UML) [8]. 
UML is a modeling language for 
documenting and visualizing the specific 
artifacts in the object-oriented(OO) analysis 
and design [9,10]. It is a generic syntax for 
creating a logic model of a system, and is 
normally used to describe a computer system 
as it is understood at various points during 
analysis and design. Jim Rumbaugh et al. [11] 
and Grady Booch [12] had constructed 
various original OO D&A tools in each of 
their own methods, but with a common 
graphical representation. Ivar Jacobson [13] 
added syntax for defining requirements with 
use case. UML has been approved by Object 
Management Group (OMG) and become an 
industrial standard modeling tool in all 
aspects of software development.  
 On the other hand, Petri net is a 
powerful modeling tool used in the 
development of discrete event systems, such 
as production planning, network 
communication, rule-based expert systems, 
[14,15] that require the design and analysis 
of precedence constraints and concurrencies 
of activities involved. Petri net theory has 
been proposed and applied particularly for 
design and analysis of systems that exhibit 
concurrent, parallel, asynchronous, 
distributed, and/or stochastic behaviors 
[16,17,18]. High level Petri nets, such as 
colored Petri nets, [19,20] were developed 
and used in the modeling and analysis for 
4 
Part
PartNumber:PartNo
PartDescription:String
RevisionLevel:Integer
SupersedesPartNumber:PartNo
SupersededByPartNumber:PartNo
EffectivityStartDate:Date
EffectivityEndDate:Date
Product part
Engineering Change
1
Bills Of Material (BOM)
0..1
Process Plan 0..1
1 Durable part Consumable part
1
1
1 1
1
*
 
Figure 3 Part Design Group Information 
Model 
 The Product Design component 
provides the representation for various types 
of Product to be viewed at the Factory 
Engineering level. Contents concerning 
product geometry, product engineering 
specification and product data state are 
services provided by the interfaces in this 
component. A ProductDesigner provides 
lifecycle management and coordination for 
product object engineering data. Figure 4 
represents the Product Design component 
information model. The Product interface 
provides for the representation of any 
product part under design at the factory 
engineering design sector. 
Part
Product
BOMUnitOfMeasure:String
DrawingNumber:Integer
DrawingSize:String
DrawingFileName:String
CAD Product
CAD State:Char
CAD DrawingFileName:String
CAM Product
CAM State:Char
CAM DrawingFileName:String
MRP II Product
MRP II State:Char
PurInvUnitOfMeasure:String
UOMConversionFactor:Integer
SourceCode
StandardCost:Money
LeadTime:Time
new()
release()
change()
hold()
obsolete()
remove()
new()
release()
change()
hold()
obsolete()
remove()
new()
release()
change()
hold()
obsolete()
remove()
Product Designer
design and update
Component Designer
 
Figure 4 Product Design Component 
Information Model 
  
We have presented a generic framework 
by expanding the object model defined in the 
SEMATCH CIM framework with 
components representing various entities of 
the distributed manufacturing engineering 
systems such as products, resources, and 
processes. Furthermore, it deals with the 
functioning of the integrated manufacturing 
systems as it operates to satisfy the market 
demand. The object model defined in the 
expanded CIM framework among CAD, 
CAM, MRP II, and MES are generalized to 
make it more flexible for many other 
industries as well as semi-conductor’s. To 
apply it to any other industry, it will be 
necessary to modify only those objects 
defined in MES specifically for 
semi-conductor industry (eg. Wafer and Die 
in Product management group) to objects 
used in the intended industry. Our goal is to 
present a methodology in performing 
integration at today’s manufacturing 
environment by creating a common, modular, 
flexible, and integrated object model that 
unifies an advanced object-oriented 
architecture concept and heterogeneous 
manufacturing application development in an 
open and multi-supplier manufacturing 
environment. This framework will provide a 
reusable, integrated system framework that 
clearly specifies the functional interface 
boundaries, and standard information model 
of the required components in general 
manufacturing systems, not only for 
semi-conductor industry as addressed by 
SEMATCH. We have also presented how to 
utilize UML and Petri nets to systematically 
design and analyze the dynamic behaviors in 
the framework to manage and control 
information flow that has to be updated 
whenever new applications or new 
functionalities were developed and integrated 
into existing CIM systems. Transformation 
rules from UML diagrams to Petri nets and 
Algorithms for analyzing structural 
properties of Petri nets are developed 
accordingly. Finally, a sample scenario was 
detailed and analyzed for its dynamic 
behaviors to ascertain the applicability of the 
design methodology. 
四、參考文獻 
1. J.Y. Pan, J.M. Tenenbaum, and J. 
Glicksman, “A Framework for 
Knowledge-Based Computer-Integrated 
Manufacturing,” IEEE Transactions on 
Semiconductor Manufacturing, vol. 2, no. 
2, pp. 33-46, May 1989. 
