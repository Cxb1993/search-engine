 2
cannot be obtained directly. Section 4 presents the 
validation results of the proposed framework and methods 
implemented with the MINE Authoring Tool [16]. Finally, 
conclusions are drawn in Section 5. 
2. Metadata Analysis 
ADL, an organization for integrating existing 
E-Learning standards, has established a Content 
Aggregation Model based on nine categories of the IEEE 
1484.12.1-2002 Learning Object Metadata (LOM) 
standard. In this model, the learning object is separated 
into different Content Model Components, namely Asset, 
SCO, Activity, Content Organization and Content 
Aggregation. Each SCORM Content Model Component 
has corresponding requirements for each of metadata 
element (shown in Table 1).  
Table 1. The statistics for each Content Model Component 
(CMC) requirements 
CMC
Element type 
Content 
Aggregation 
Content Organization / 
Activity / SCO Asset
Parent 19 19 19 
Mandatory 0 11 8 
Optional 58 47 50 
Total Number 77 
Table 1 reveals that the number of Mandatory elements 
for the Content Aggregation is zero, implying that all 
metadata elements in this layer are optional. In other words, 
a learning object without any metadata is also a 
SCORM-compliant course. Therefore, the learning object 
creator will not fill in the complete metadata actively and it 
results in repositories are difficult to search. 
Parent elements in the table act as “containers” for 
other elements. That is Parent elements have no values 
associated with them. Hence, 58 elements need to be filled. 
Among the Mandatory elements, 1.1.2 Entry and 3.1.2 
Entry are reserved elements with values assigned by 
Handle System [6]. After removing the parent, optional 
and reserved elements from the total element number, each 
SCO and Asset should at least fill in nine and six elements 
respectively. However, the efficient reusability of learning 
object and accurate retrieval ability of repository depends 
on the completeness of the metadata (58 elements). As 
shown in Fig. 1, the more complete the metadata, the 
higher it’s filling-in cost, but the lower the overall 
searching costs. 
 
 
Filling in 58 elements is merely a time-consuming task 
for metadata specialists, but is also a real challenge for 
creators who are strange to the metadata. Creators have to 
learn an unfamiliar but whale standard before creating a 
SCORM-compliant learning object. This is the main cause 
of low reusability of learning objects. Therefore, this 
investigation attempts to generate metadata automatically 
for each learning object by constructing a Metadata Wizard. 
This method reduces the total cost by lowering the cost of 
filling in metadata. The dotted lines in Fig. 2 denote the 
fall in Total Costs and Overall Filling-In Metadata Costs. 
Additionally, ensuring that each learning object has 
complete metadata helps for creating a practical repository 
environment. 
 
3. Framework of Metadata Wizard 
The metadata elements are split into two categories 
User-Defined and System auto-Filled. The creator sets the 
values of User-Defined elements depend on subjectivity of 
creator. System auto-Filled are generated by the Metadata 
Wizard. Figure 3 depicts the Metadata Wizard Framework, 
which has two kernels, the Metadata Wizard and the 
Deduction Engine. These kernels are described in detail as 
follows. 
Figure 1. Trade off between Searching Costs and 
Filling in Metadata Costs 
Cost 
Total Costs 
Overall Filling-In 
Metadata Costs
Overall Searching 
Costs 
Metadata Completeness 
Figure 2. The decrement of Total Costs when
        Metadata Wizard applied 
Overall Filling-In 
Metadata Costs
Total Costs 
Metadata Completeness 
Overall Searching 
Costs 
Cost 
 4
 
Figure 4. MINE Authoring Tool partial interface 
Figure 5 depicts the relevant Metadata Wizard settings 
in the “Metadata” drop-down menu. 
 
 Figure 5. The “Metadata” drop down menu 
The “User Profile” and “Questions” functions allow 
users to modify their personal data and their answers to 
improve the accuracy of deduction. The “Options” 
function enables the user to disable particular deduction 
rules. The left window of Fig. 6 illustrates the Question 
Agent interface, which allows users to design their own 
interactive questions and corresponding deduction rules. 
All the rules in the Deduction Engine, including the Copy 
and If-Then Functions, can be modified in the right-hand 
window. After design the deduction rules, they can be 
saved as a rule template for sharing. 
Besides, the “Metadata” drop-down menu has 
“Generate” and “Completed generation” functions. The 
“Generate” function generates individual learning object 
metadata, and the “Completed generation” function 
generates all learning objects metadata under the content 
organization. Finally, the “CA metadata editor” can be 
applied to display and edit the generated Content 
Aggregation Metadata. After a course is created, the 
“Completed generation” function is embedded in the 
“Save” function to regenerate and double-check all 
metadata. 
 
Figure 6. The Question Agent and Deduction Engine 
interface 
Table 2 lists the “System Provided” element, which 
represents information obtained directly from the 
Environment Agent and User Profile. “System Deduced” 
means information extracted form the Deduction Engine. 
After reserved and parent elements are subtracted from the 
total number of elements, 54 elements have to be filled out. 
The automatic generation rate is at least 61% when the 
Metadata Wizard Framework is implemented. The result 
indicates that the Metadata Wizard decreases the creator 
loading in absolute terms. 
Table 2. Statistics for automatic generation of each Content 
Model Component (CMC) 
CMC
Catalog 
Content 
Aggregation 
Content Organization / 
Activity / SCO Asset 
Reserved 4 4 4 
System Provided 15 15 20 
System Deduced 20 20 13 
Generation Rate 65% 65% 61% 
5. Conclusions 
Learning objects with metadata facilitates the 
searching and discovery across repository systems. 
Metadata can also help determine which content model 
component to be delivered to the learner at run-time. The 
metadata completeness plays an important role in the 
reusable and searchable issues. However, the complicated 
LOM results in a low motivation to fill out metadata 
results. Therefore, this study proposes a Metadata Wizard 
Framework consisting of a Metadata Wizard and a 
Deduction Engine. Metadata for each Content 
Organization layer are generated automatically by 
processing the Agents and Rules. The proposed Model not 
only produces complete of metadata within SCORM 
 
 
 
 
 
 
