 2 
行政院國家科學委員會專題研究計畫成果報告 
小世界基因演算法之設計 
A Design of Small-World Genetic Algorithms 
計畫編號：NSC 95-2221-E-156-006- 
執行期限：2006年 8 月 1 日至 2007年 9 月 30 日 
主持人：紀宗衡 真理大學資管系 
 
  
 
一、中文摘要 
 
來自於小世界具備有效網路搜尋的啟
發，我們嘗試將小世界的概念落實於新型
態基因演算法的設計。在本研究中，我們
探討的議題主要以基因編碼與解碼為主。
在編碼上，主要的概念來自於小世界的群
聚現象，因此我們設計了中性冗餘編碼來
反映群聚的效果，實驗證明這樣的冗餘編
碼能有效保留基因演算法在搜尋過程中不
可或缺的多樣性。在解碼上，我們藉由多
個具有重複性質値的適應性函數以反映小
世界中人們透過人際網絡所展現的搜尋過
程，我們的實驗也證明這樣的解碼方式，
不僅能夠加快搜尋的效果，同時也的確能
夠因為解碼的多樣性而避免早熟收斂的現
象，換言之，在編碼的冗餘性與解碼上的
多樣性，都有助於基因演算法求解過程中
主要的開發與利用等兩種力量。我們將這
樣的設計應用在求解逆物流的網路設計問
題，相較於簡單基因演算法，我們發現這
樣的設計都能以較少的成本，儘快得到到
全域的最佳解而獲得比較好的逆物流網路
規劃。 
 
關鍵詞：小世界、基因演算法、逆物流 
 
Abstract 
 
Inspired by many confirmed small 
world phenomena, we try to put the built-up 
small-world theory into be an efficient effect 
with new genetic algorithms. In this research, 
our focuses were on the coding and decoding 
mechanisms used by in the Genetic 
Algorithms. For the coding part, neutral 
redundant coding was inspired from the 
cluster usually found in the small world 
phenomenon and in further applied to the 
modification of GA’s. The preservation of 
diversity can not be missed out in the 
searching process of GA’s has been proved 
by the experimental results. As the decoding 
part, a new mechanism has been designed to 
follow the searching process in the 
interpersonal network which is a small world 
with the multiple overlapped fitness 
functions. The experimental results showed 
the better solution quality was gained with 
little chance to fall into the premature 
convergence because the multi-faceted 
values of an individual were concerned. In 
short, both of the redundancy in coding and 
diversity in decoding are helpful to improve 
the balance exploitation and exploration 
forces. We examined our new design with 
the network designing problem of reverse 
logistics. It is showed a lower-cost network 
could be gained with less time. 
 
Keywords: Small World, Genetic Algorithms, 
Reverse Logistics 
 
二、前言 
 
基因演算法已經普遍被應用到工程、
管理與其他社會科學等領域，關於這方面
的發展，從 1970年代開始一直到今天，都
是想要追求更為快速精準的演算法，所以
David Goldberg於1998年針對此目標提出
能夠快速、可靠以及正確解決困難問題的
基因演算法並將之稱為「令人滿意的基因
演 算 法 」 (competent genetic 
algorithms)，David Goldberg 的提倡也正
反映著，至今我們對於基因演算法的求解
過程始終還是沒能有一個全面與透徹的了
解和統一的共識，以至於在效能上的突破
 4 
小世界這方面的探討則肇始於 1967
年，社會心理學家 Stanley Milgram[37]
主導的一場實驗，檢驗人們可以在多少的
步驟內將信件寄達一個指定的陌生人手
中，到了 1970年代，Duncan Watts、Steven 
Strogatz 與其他研究學者更將此研究擴展
到真實世界的領域，例如演員或學者合作
網路、電力系統、線蟲神經網路和全球資
訊網等，相關的研究皆證實這些網路都具
備了小世界的拓撲特性。 
從 Duncan Watts 一開始討論人際網絡
中任兩人之間最短距離的尺度與存在性開
始，之後並提出許多模型來描述建立的小
世界以進一步解小世界現象，除此之外，
同時也吸引了許多其他領域的學者加入這
方 面 的 研 究 ， 包 括 有 物 理 學 家
Albert-Laszlo Barabasi 等人對於建構小
世界與利用小世界搜尋機制的探究等。本
研究則主要利用 Duncan Watts 等人所提出
的小世界特徵和二分網路來作為改善基因
演算法發想的起源。 
 
四、研究方法 
 
根據選擇壓力，就可以經由評估下一
代族群的品質來展現適應行為，而選擇壓
力的適當與否都必須接受收斂性的檢驗，
因此，對於基因演算法，一個好的設計在
於能否反映出適當的選擇壓力。因此，我
們採取兩個進程，一個從源頭的編碼，間
接影響選擇壓力，另一個則從解碼來直接
影響選擇壓力，同時，為了要能夠獨立這
些影響的效果，對於其他的基因運算子，
我們盡可能採取最簡單的形式。 
因為對於一般的選擇方法，已經有非
常多的相關文獻，因此，我們通常會固定
在簡單的選擇方法，而將重點放在藉由編
碼來產生能夠適應選擇壓力的個體。根據
John Holland 的猜測，演化的適應過程，
主要來自於許多更小的建構單元逐步組合
成可以通過篩選的個體，這樣的過程，通
常曠日費時，但是一旦放寬篩選的條件，
就會因為過強的多樣性產生交叉競爭而無
法有效組合，但是如果緊縮篩選的條件，
又會因為過強的淘汰率，導致過早收斂的
早熟現象，因此要如何平衡多樣性與效
率，成為此議題的主要關鍵。小世界的群
聚現象來自於族群特徵的相似性而形成個
體的冗餘性，因此我們擷取小世界的群聚
效果而採用了冗餘編碼，同時，根據 Franz 
Routhlauf 的研究，除非能夠釐清其對應空
間的拓璞結構，否則不規則對應的冗餘編
碼將會因為對應空間的扭曲現象而難以預
估其成效，因此我們採用比較好控制的均
勻冗餘編碼。並且，編碼的方式如果太過
複雜，就可能比較難以具備一般性，因此
我們採用簡單的「互斥或」(XOR)運算來實
施冗餘編碼並觀察其結果。 
關於解碼，是選擇運算的前哨，因此
一旦個體被貼上固定的適應値標籤之後，
從全域的觀點來看，其個體的命運就已經
底定，但我們認為，這並不足以描述我們
對於演化所感受到的經驗，個體是全域的
一部分，所以個體與全域應該是一個互動
的過程，鮮難明確地切分為先決定個體或
是先決定全域觀點，因此，我們的看法是：
標籤應該要能夠盡量延後確定！但在實際
的操作上，並不容易落實這樣的推論，因
此我們採用多個觀點，讓選擇運算能夠盡
量從更多的觀點來看待個體的「價值」，
而非從單一標準來淘汰「不適應」的個體，
所以，我們擷取小世界中的特徵路徑與二
分網路的概念，藉由提供個體多種但是重
疊的價值評估方式，這樣的觀念是透過解
碼用的適應函數來展現其解碼的多樣性，
其背後的精神在於嘗試從全域的觀點來區
分不同個體所可能隸屬的群體，並藉由重
複性，來達到二分網路的小世界搜尋效
果。但是採用了多個重疊適應函數之後，
個體的評估無法再以原先基因演算法常用
的選擇運算子來評估，因此我們採用多目
標優化問題求解中較為好用的中位數排名
法，但有必要先在此陳述多個重疊適應函
數與多目標適應函數的差異在於：1.多目
標的目的在於形成最後的單一目標値以供
選擇運算子來從事選擇，2.多目標函數並
不考慮個體的多面價值與該價值在解空間
的位置，因此，採用多個重疊函數，可以
展現單一個體的多個最後目標値，與該個
體的價值分類在整個解空間所形成的價值
網路，而整個搜尋過程就是沿著這個網路
來進行，而非整個解空間的隨機搜尋，如
 6 
closed-loop supply chains: An example 
from the automotive industry,” European 
Journal of Operational Research, Vol. 171, 
2006, pp. 1033-1050. 
[13] J. R. Stock, Product Returns/Reverse 
Logistics in Warehousing: Strategies. 
Policies and Programs, Oak Brook, IL: 
Warehousing Education and Research 
Council, 2005. 
[14] D. Watts, P. S. Dodds, and M. E. J. Newman, 
“Identity and Search in Social Networks,” 
Science, Vol. 296. no. 5571, 2002, pp. 
1302 – 1305. 
 
 
 
七、計畫成果自評 
 
我們不僅將小世界的經驗整合到基因
演算法的改善之中，也同時修正了 Franz 
Routhlauf 對均勻冗餘編碼的假設。這原先
是一個兩年期的計畫，在執行計畫的第一
年期間之內，我們總共發表了兩篇相關的
英文會議論文與兩篇中文會議論文，發表
論文期間也獲得日本學者的重視與合作提
案，同時也獲得大陸學者的迴響，我們也
因為這些互動與火花更因此衍生出許多後
續的研究，目前也正積極準備投稿 SCI 的
期刊。但遺憾沒有能夠獲得第二年國科會
專題計畫審核委員的認同，儘管如此，我
們會斟酌評審會員所給予的意見來修正計
畫繼續從事相關的研究，並期待能有更好
的結果及審核委員們下一次的青睞。 
 
 
 
an intermediate transfer site; and refurbishing site 
includes reproduction plant, recycling plant, 
decontamination plant, and original manufacturing site. 
We want to set up proper collection site and 
refurbishing site on that 1000× 1000 squared area to 
get the lowest total transportation cost. This cost 
includes fixed and variable cost, and meanwhile allows 
origination site to deliver the products directly to 
refurbishing site. But that cost will be higher than 
going through collection site and coming back to 
refurbishing site. Our focus is not on this problem 
model proposed by [7] but the solution genetic 
algorithms instead. Interesting readers can refer [7] for 
more details.  
Model parameters 
Bj maximum capacity in collection site j 
Fj fixed cost to set up a collection site j 
Gk fixed cost to set up a refurbishing site k 
ai products collected in origination site i 
Dk maximum capacity of refurbishing site k 
Pmin minimum collection site to setup 
Pman maximum collection site to setup 
Qmin minimum refurbishing site to setup 
Qman maximum refurbishing site to setup 
Cijk Transportation cost from origination site i, 
through collection site j, to refurbishing site k 
 
Decision variables 
Xijk The quantity ratio of products delivered from 
origination site, through collection site, to 
refurbishing site. 
Pj Whether to set up j collection site (To set up 
is 1, otherwise is 0) 
Qk Whether to set up k refurbishing site (To set 
up is 1, otherwise is 0) 
 
Mathematical formulation 
∑ ∑∑∑∑ ++
j k
kkjj
i j k
ijkiijk QGPFXaCMin  (1) 
s.t. ∑∑ =
j k
ijk iallforX 1  (2) 
 ∑∑ ≤
j
j
k
ijki jallforBXa  (3) 
 ∑∑ ≤
i
k
j
ijki kallforDXa  (4) 
 ∑∑ ×≤
i
j
k
ijk jallforPIX ||  (5) 
 ∑∑ ×≤
i
k
j
ijk kallforQIX ||  (6) 
 ∑ ≤≤
j
j PPP maxmin  (7) 
 ∑ ≤≤
k
k QQQ maxmin  (8) 
 10 ≤≤ ijkX  (9) 
 }1,0{∈jp  (10) 
 }1,0{∈kQ  (11) 
Objective function (1) is the minimum total cost, 
and among them the first item is the transportation cost 
of every site. Item 2 and item 3 are the fixed cost of 
collection site and refurbishing site respectively. 
Constraint (2) represents that all goods in origination 
site have to be delivered directly to refurbishing site or 
through collection site and back to refurbishing site. 
Constraint (3) and (4) represents that the total quantity 
delivered from all origination site to someone 
collection site and refurbishing site can not surpass the 
maximum capacity of that site. Constraint (5) and (6) 
represents only to consider collection site and 
refurbishing site already setup. Constraint (7) and (8) 
represents that the quantity of opened collection site 
and refurbishing site has to be a figure between 
minimum and maximum number of sites. Constraint (9) 
represents the ratio of transportation volume is a value 
in between 0 to 1. Constraint (10) and constraint (11) 
are decision variables, 0 is closed and 1 is open. 
 
3. GA redundancy  
 
In GA, there are two relationships, encoding and 
decoding, existing between coding space and solution 
space. Proper encoding method can ensure feasibility 
and usability of the final optimized solution [6]. 
Instead of using 1-to-1 encoding as most GA did, we 
applied XOR operation to two adjacent bits and 
doubling the length of the original chromosome. This 
encoded one bit of information contented with fixed 
number of bits as the uniform redundant encoding. 
Though it was simple, this overrepresentation would 
amplify the coding and searching space with a fixed 
ratio. This indeed complicated the result estimation. 
However, researchers viewed redundancy as either 
diversity loss or cross-competition [11]. One school of 
scholars believed that extra redundancy will improve 
the performance of the genetic searching; but another 
school believed that the application of redundancy 
would decrease the performance. Our experiment 
results came out in favor of positive side especially 
when expressive elitism and infeasible solutions were 
considered. 
On the other hand, the phenotype to solution was 
usually 1-to-1 mapping. However, when problems to 
be solved are multi-attribute, the projection from many 
attributes to a single fitness function may cause the 
straightforward search. Real shortcuts are possibly 
neglected. Duncan Watts proposed a small-world 
related model to explain the searchability of social 
affiliation networks in terms of recognizable personal 
identities [14]. Affiliation networks are basically 
convergence. On the other hand, the quality of 
generation solutions in SWRGA is not very stable. 
 
It usually costs much time to give a birth to a 
feasible solution. Moreover, due to the abandonment of 
infeasible solutions which might directly cause 
population extinct, next we focused on the replacement 
and penalty for infeasible solutions. 
For the replacement approach, also in order to 
compare whether with or without redundant encoding 
would affect solution quality, we compared SGA, 
SWGA, SWRGA, and RGA in the 4 testing problems 
and got the average from 100 times of experiments. 
The result showed that RGA had the best result.  
Because directly discarding infeasible solutions 
might cause varied population size, and randomly 
generating new solutions might cause changes in 
mutation ratio, we found that it was better to keep 
infeasible solutions with proper penalty value. As 
shown in the table 2, where –P means solution with 
penalty and –R means solution replacement, we found 
that an application of penalty approach could improve 
solution quality effectively. It shows SWGA-P was the 
best. 
We also wanted to know whether there was any 
other mechanism to evoke the potential of SWGA. 
Thus, we began to focus on pressure, and considered 
the median rank approach. Because the median rank 
approach could not be applied to other GAs in previous 
experiments, so it was very suitable to be used on 
checking our expectation and conjecture on the 
potential of SWGA. The results showed SWGA with 
median rank approach and penalty strategy was the 
best. As to the combination of f1, f4, and f5, it was better 
than other GA variations with infeasible solution 
replacement noted by “*-R” though this SWGA2-P 
was not as best as SWGA-P.  
Regarding solution time, when problem size turns 
into problem P100_40_30, the complexity will become 
very huge. No matter using exhaustive search or 
mathematic programming, they were both difficult to 
find out the optimal solution in a reasonable time. 
According to experiment results, when the revolution 
generation was 1000 generations, solution quality of 
SWGA was better than the rest approaches mentioned 
so far no matter what the problem size was used.  
 
More about the solution quality, literature [11] 
showed that the performance for uniform redundant 
encoding and none redundant encoding was the same. 
By the stimulation coming from their work and our 
experiment results, we proposed a conjecture: if 
infeasible solutions exist in the searching space, 
applying uniform redundant encoding could possibly 
improve solution performance of GA. Moreover, if we 
unfolded the elites’ codes in the reverse XOR way 
such as 10 could be unfolded to 1000, 1011, 0100, and 
0111, we found it was the best known by now, when 
cooperating expressive elitism with RGAE-P as shown 
in Table 3. Meanwhile, the constraints of reverse 
logistics design problems were usually complicated 
and their dimensions were usually lower than their 
Table 1. A comparison of total costs between with (α) 
and without (β) collection sites. 
 
Problems α β Improvement 
P30_14_12 179313 227286 21.11% 
P40_20_15 610546 1193365 48.84% 
P50_30_20 712523 1394585 48.91% 
P70_30_20 846715 1730747 51.08% 
P100_40_30 1257207 2214092 43.22% 
 
Figure 1. The evolution process for four varied GAs 
 Table 2.  Comparison of GAs with varied redundancy. 
 
Problems  SGA-P SGA-R difference 
P30_14_12 173297.46 181916.15 8619 
P40_20_15 598484.97 613589.52 15105 
P50_30_20 681953.82 723700.13 41746 
P100_40_30 1191061.52 1275342.89 84281 
Problems  RGA-P RGA-R difference 
P30_14_12 172716.69 178107.06 5390 
P40_20_15 591019.41 601701.94 10683 
P50_30_20 681104.99 708667.10 27562 
P100_40_30 1188794.39 1261072.33 72278 
Problems  SWGA-P SWGA-R difference 
P30_14_12 170553.09 178346.59 7794 
P40_20_15 589262.21 609539.60 20277 
P50_30_20 674322.79 720377.22 46054 
P100_40_30 1164197.12 1264054.62 99858 
Problems  SWRGA-P SWRGA-R difference 
P30_14_12 241261.79 277096.44 35835 
P40_20_15 719177.91 758727.16 39549 
P50_30_20 987953.53 1002204.58 14251 
P100_40_30 1684039.01 1731362.55 47324 
