 2
行政院國家科學委員會專題研究計畫期中進度報告 
點對點資訊分享系統在有線及無線網路上之設計與實作 (III) 
Design and Implementation of P2P Systems on Wired and Wireless 
Networks (III) 
計畫編號：NSC 94-2213-E-194-001 
執行期限：92 年 8 月 01 日至 95 年 07 月 31 日 
主持人：黃仁竑  國立中正大學 資訊工程系  
Email: rhhwang@cs.ccu.edu.tw 
一、中文摘要 
隨著運算與網際網路技術的快速發
展，使得需要大量複雜運算的資訊科技應
用與服務，得以透過整合數以千萬計的個
人電腦的運算能力來實現。由於具有高延
展性以及高強度的優點，點對點架構已經
逐漸取代傳統的客戶端／伺服器架構成為
網際網路應用設計的主流。由於底層網路
的異質性以及缺乏集中式的管理機制，如
何於不同的底層網路環境下，設計一個點
對點資訊分享系統已經成為目前非常重要
的研究主題。在一個點對點資訊分享系統
中，系統的基礎架構(infrastructure)、資訊
的搜尋以及在網際網路或異質無線隨意網
路上的應用是比較重要的研究議題。所
以，在此一三年計畫中，我們探討了分散
式具結構性(distributed but structured)的點
對點系統的基礎架構(infrastructure)與疊
加網路(overlay network)設計問題、點對點
視訊串流系統問題以及在無線網路上的點
對點系統設計、可行性應用設計與實作等
問題。在這三年中，我們共發表了四篇國
際會議論文及四篇國際期刋論文，另有兩
篇論文送國際會議審查中。我們也參加了
四次全國實作性的比賽，獲得不錯的成績。 
關鍵字：點對點系統,應用層群播,服務疊
加網路,資料共享系統, 蟲群智慧 
 
Abstract 
Rapid development of computing and 
Internet technologies makes applications 
and services requiring mass and complex 
computing capability possible to be 
provided by integration of computing power 
of billions of personal computers around the 
world. Because of high scalability and 
robustness, the peer-to-peer system model 
becomes preferable than traditional 
client/server model for Internet applications 
and services. Due to heterogeneity of 
underlying networks and lack of the 
centralized control, how to design a P2P 
information sharing system under various 
underlying networks has become a 
challenge issue. Especially, we focused on 
the distributed but structured infrastructure, 
P2P live video streaming, and P2P killer 
applications over MANET. We were not 
focused on theoretical problem, but also 
implemented several practical P2P systems. 
Based on the results of this project, we had 
published four conference papers, four 
journal papers, and won four competitions. 
Keywords: Peer-to-Peer, Application 
Layer Multicast, Overlay Network, 
Information Sharing, Swarm Intelligence 
 
二、前言 
網際網路技術的演進使得各式各樣的
資訊能夠透過網際網路應用程式，更廣泛
與快速的傳播給所有的電腦使用者。然
而，隨著資料量日益龐大，以及網際網路
使用者的急速增加，傳統客戶端／伺服器
架構的網際網路應用程式正面臨延展性不
佳的嚴重問題。為提升網際網路應用程式
的延展性，許多研究提出點對點系統設計
的解決方案。在一個點對點系統中，每個
 4
Algorithm)，使系統節點在點對點系統中的
位置與實際的網路位置能近似對應。但此
造成了系統節點分部不平衡的情形，進而
降低架構式點對點系統的整體效能，所以
我們並不討論此機制。另一個為鄰近節點
選 擇 法 (Proximity Neighbor 
Selection)[24]，此機制為系統節點在建置
路由表時，選擇與其網路延遲較低之節點
成為其路由記錄(Routing Entry)。而又在分
散式網路環境中，無法輕易取得系統節點
彼此間網路延遲資訊，所以此機制必需付
出相當大的成本來維護路由表的完整性及
正確性，形成系統維護負擔過高的問題。
另一方面，因為分散式點對點系統中，節
點的加入和離開都是無法預期的，這更增
加了架構式點對點系統在維護上的困難
度。因此，我們希望透過將系統節點以一
個新的定址機制組織成為一階層式架構，
來降低系統節點維護路由表的負擔且能快
速的維護路由表完整性和正確性。 
 
(2)點對點視訊串流系統:為了保證傳輸品
質，目前的多媒體應用層群播技術主要應
用頻寬優先(Bandwidth first)演算法，透過
與節點進行頻寬量測的方式來為新加入節
點選擇能提供最大可用頻寬的節點為其在
群播樹中的父節點。由於頻寬優先演算法
往往需要大量的頻寬量測，以及無法保證
找到提供最大可用頻寬的節點，因此容易
造成新加入節點等待加入系統時間過長，
以及高服務拒絕率的問題。另一方面，由
於頻寬優先演算法容易使得新加入節點成
為群播樹的末端，因此容易造成服務中斷
率過高的問題。因此，我們希望透過將節
點依照所能提供可用頻寬組織成為一階層
式從聚架構，來降低新加入節點等待加入
系統時間以及服務拒絕率過高的問題。此
外，我們希望透過形成「寬短群播樹」的
方式來減低服務中斷率過高的問題。 
此外目前應用層群播的研究通常只針
對 於 同 質 型 網 路 環 境 (Homogeneous 
Network Environment)作討論，也就是說在
這前提下，基本假設網路上每位使用者的
能力與行為都被視為相同。然而透過分析
一個真正實際運作系統的使用者紀錄，發
現實際目前網路上的使用者都存在非常高
的差異性，透過一些可以量化的數據，例
如網路頻寬、網路接取技術、封包遺失率、
網路延遲、節點穩定性，整個網路環境是
異 質 型 的 網 路 環 境 (Heterogeneous 
Network Environment)。設計應用層群播時
必需要嚴加考慮這些因素對於系統所造成
的影響，時別是使用者的網路頻寬以及在
系統持續停留的時間等兩個因素對於應用
層群播整體效能有著決定性的影響。建構
多棵獨立的群播樹可避開單一節點變動而
同時造成多棵群播樹斷裂的問題，即每個
節點只在一棵群播樹擔任中繼節點，而在
其他群播樹為葉節點，故每個節點的變動
只會影響到一棵群播樹，因此大幅度改善
系統的強韌度。使用多描述編碼(Multiple 
Description Coding)[25]透過特殊的編碼方
式把一份視訊串流分割成多份可獨立解碼
的子串流，隨著接收者收到的子串流數量
越多，即可還原出與原始資料失真越少的
畫面品質，即使是只收到一份子串流，接
收者還是可以還原出部份的畫面。使用
MDC 的好處在於透過不同的路徑傳遞不
同的子串流，即使有一條路徑中斷，對於
接收者的影響也甚微，所以 MDC 非常適
合使用於網路視訊資料的傳遞。所以我們
提出可快速建構多棵獨立群播樹的一個特
殊 overlay 架構，並利用 MDC 將視訊分流
在不同群播樹上傳送。 
 
(3)低節點移動性行動隨意網路資訊分享
系統: 在一個行動隨意網路中，若節點移
動性較低，則利用網路節點組織成一邏輯
架構來形成一個資訊分享系統，不但可達
到系統的高延展性，且因為節點移動性
低，此邏輯架構維護的訊息成本也不會太
高。因此，我們希望研究如何設計並實作
出應用於低節點移動性行動隨意網路的架
構式點對點資訊分享系統。在此點對點分
享系統中，會有兩個設計上的問題需要解
決。第一個問題就是一個節點如何知道自
身在邏輯架構中的位置。因此，我們開發
出新的動態定址技術使得節點根據其通訊
 6
最新版本的即時性資訊(高系統強
度)。 
z 同時搜尋擁有最新版本的節點以及
由查詢者到該節點的路徑以減少查
詢者從開始搜尋到可以與擁有最新
版本的節點進行互動的等待時間。
(低搜尋等待時間) 
四、文獻探討 
目前的應用層群播技術主要分為三
類：架構式(infrastructure-based)，點對點
式(P2P-based)，客戶端／伺服器架構延
伸式(Client/Server extension based)。在架
構式應用層群播技術中，資料來源與一
些具代理伺服器(proxy server)角色的機
器形成群播樹，客戶端節點則透過其中
一個代理伺服器來接收資料，目前架構
式 應 用 層 群 播 技 術 主 要 包 括
Overcast[1]，Scattercast[3]，OMNI[4]三
個方法。一般說來，如何選擇代理伺服
器使得系統效能最大化仍舊是目前架構
式應用層群播技術的一個最大問題。另
一方面，點對點式應用層群播技術的群
播樹則由系統中的節點組成，在點對點
式應用層群播技術中，每個節點必須負
責群播樹上的資料轉送。NARADA[2]，
ALMI[5] ， TBCP[6] ， TAG[7] ，
PeerCast[8] ， P2cast[9] ， RITA[10] ，
NICE[11]，以及 ZIGZAG[12]為幾個點對
點式應用層群播技術中較具代表性的例
子。此外，CoopNet[13]為目前唯一採用
客戶端／伺服器架構延伸式應用層群播
來傳送多媒體串流資訊的一個技術。此
方法假設串流伺服器擁有強大的運算能
力以及充裕的可用頻寬。因此客戶端主
要還是透過與伺服器連線的方式來取得
資料，只有在伺服器負載過重的時候才
從其他客戶端接收資料。 
目前架構式的點對點資訊分享技術主
要分為三類：客戶端／伺服器架構式
(Client/Server based)，無架構式點對點資
訊分享系統(Unstructured P2P File Sharing 
System)和架構式點對點資訊分享系統
(Structured P2P File Sharing System)。在客
戶端／伺服器架構式，如 Napster[17]，其
資訊儲存及搜尋全部都依賴伺服器端處
理，而無架構式點對點資訊分享系統主要
為 Gnutella 系統[18]。其利用洪流方式
(Flooding)，亦即對所有系統節點發出詢問
訊息來達到檔案尋找的目的。然而，這兩
種的資訊搜尋方式都會使得系統的延展性
很差，造成搜尋效率隨著系統節點數的增
加而急速下降。而在架構式點對點系統
下，所有節點被組織成一個邏輯性架構。
檔案位置的搜尋則依據邏輯性架構的設
計，利用不同的演算法來進行，但都可在
O(logN)次的搜尋得到結果。由於檔案搜尋
不需透過特定檔案伺服器或廣播方式，故
架構式點對點系統擁有較佳的延展性，但
是此類的點對點系統每個節點必須要維護
一個 logN 大小的路由表，相對的增加系統
的負載。在架構式點對點資訊分享系統方
面較著名的系統有Chord[19]、Tapestry[20] 
及 Pastry[21]、CAN[22]。 
在研究點對點視訊串流部份，近來使
用應用層群播架構傳播多媒體串流的研究
已經非常蓬勃發展，這其中包含了許多的
研究主題，本論文只針對於應用層群播系
統的強韌度相關研究進行探討。[26-29]
為建構單一群播樹的架構，其中資料來源
節點扮演群播樹的樹根，所有的系統參與
者扮演群播樹的中繼節點或是葉節點，此
系統的重大缺點在於為了改善資料傳遞的
效率以及節點的不穩定因素，當中繼節點
發生變動或是錯誤時，容易造成部份的系
統參與者無法收取到資料，而發生斷訊的
情況。 
為了改善單一群播樹架構系統強度不
足的問題，[30]提出 server-based 的多群
播樹架構，透過計算能力強且頻寬充足的
伺服器，系統參與者向伺服器註冊相關的
訊息，由伺服器為系統參與者找尋每棵群
播樹上適合的節點當作其父節點，多群播
樹架構的確可以大幅度改善系統的強度，
減少斷訊節點發生，但 server-based 的架
構容易讓伺服器有過多的系統維持負擔變
成效能的瓶頸點，此外，某些節點可能在
多棵群播樹上都擔任中繼節點，造成單一
節點變動或是離開會同時造成多棵群播樹
 8
其資訊被查詢的頻率超過一個界限時，此
資訊擁有者便開始定期廣播宣告訊息來宣
告其所擁有的資訊。另一方面，當資訊被
查詢的頻率低於該界限時，資訊擁有者便
停止廣播宣告訊息，而由查詢者送出查詢
訊息來進行資訊搜尋。 
在傳統行動隨意網路資訊搜尋技術
中，只要所要求資訊的任一個版本被找
到，此搜尋可以判定成功。然而，在即時
性資訊搜尋中，必須要能夠在同一資訊的
所有版本中，找到最新的一個。因此，一
個即時性資訊搜尋結果的好壞必須以所找
到的版本的即時性來判定。找到的版本越
新，則代表搜尋的結果越好。 
蟲群智慧[54]是指經由觀察大自然
中具社會行為之昆蟲(如螞蟻)間一些簡單
的行為以及互動，所得到的一種智慧性的
行為。雖然群體中每個個體(如一隻螞蟻)
只會因應環境的變化(如其他螞蟻遺留下
的費洛蒙)進行一些簡單的行為，但透過間
接溝通的方式，使得這樣的行為可以拿來
應用於解決許多如網路中兩點間最短路徑
搜尋等最佳化的問題。基本上，一個應用
蟲群智慧的方法利用費洛蒙的數量來代表
問題中所找到的一個解的好壞，費洛蒙數
量越多代表越好的解。一開始，系統隨機
的尋找問題的一個解，並產生相對數量的
費洛蒙。系統接下來會以目前所找到的最
佳解為基礎來找尋更好的解，當更好的解
被找到時，所產生的費洛蒙數量也會隨之
增加。透過這樣的方式，使得真正系統中
的最佳解可以”逐漸”被找到。此外，蟲群
智慧也可以因應環境的變化造成最佳解改
變的情況下，仍可以找到新的最佳解。 
五、研究方法 
(1)具位置知覺之點對點檔案系統: 
在具位置知覺之點對點資訊分享技
術方面，為了解決鄰近節點選擇法中，
無法在分散式網路環境輕易取得系統節
點彼此間網路延遲資訊，形成系統維護
負擔過高的問題和架構式點對點系統在
維護上困難度的問題。我們希望利用將
系統節點組織成為階層式架構的方式來
解決這兩個問題。 
目前主流的架構式點對點系統，如
Pastry、Chord 或 CAN 等架構式點對點系
統的定址方式都是以平面定址方式(Flat 
Addressing)，這使得系統節點之間並無
直接的關係。這造成了路由表在維護時
必須盲目的尋找系統節點來修復路由表
中已從系統離開的節點資訊，形成點對
點系統本身或是路由表維護成本過高的
問題[55-56]。這在 Ratul Mahajan 等[57]
有類似的討論和質疑，而其也提出利用
UDP 的方式來減少點對點系統維護的成
本。但是又引發了 UDP 本身不是可靠性
的傳輸協定，所以點對點系統必須自行
做到可靠性傳輸，這與點對點系統所要
形成的疊加網路利用可靠性 TCP 協定來
傳輸資訊的原意有了出入。雖然減少了
系統維護成本但也增加了傳送資料時的
複雜度。 
因此，我們提出了一個名為 Laptop
的具位置知覺之點對點資訊分享技術，
將系統中節點組織為如圖三的階層式架
構定址機制，使得系統節點得已利用此
階層式架構來維護整個點對點疊加網和
系統節點的路由表，而此系統不僅擁有
低的維護成本，而且保留了其他點對點
系統高效率的搜尋能力(O(logN))。 
在圖一的例子中，每個系統節點是
以隨機方式選擇進入點的方式加入此點
對點網路，而每個節點都會被限制子節
點數，若被加入的節點的子節點數滿
了，則把新加入的節點轉往任一子節
點，直到找到子節點數未滿之節點，則
新節點就成為其子節點。在加入此網路
後會從父節點得到一個階層式虛擬網路
位址，進而形成如圖一中的階層式網路
架構，這裡以子節點數為三為例。以這
樣的架構，節點之間就有了父子關係，
我們將利用此父子關係來減少對點疊加
網和路由表維護成本過高的問題。每個
系 統 節 點 會 只 需 定 時 的 送 出 一 個
HEARTBEAT 訊息檢查父節點是否突然
離開了系統，若父節點突然離開，則此
父節點的子節點會啟動一個修補程序，
 10
因 此 ， 我 們 提 出 了 一 個 名 為
P2broadcast 的多媒體應用層群播技術，
將系統中節點組織為如圖三的階層式叢
聚架構，使得新加入節點得以避免選擇
路徑包含國際線路，以及 ISP 對等連線
的節點作為群播樹中的父節點：  
 
P1.A.TWP2.A.TW P4.C.TW P5.D.JP P6.E.JPP3.B.TW
P1.A.TW P4.C.TW P5.D.JP P6.E.JPP3.B.TW
P1.A.TW P5.D.JP
L2
L1
L0
 
圖三:階層式叢聚架構 
 
P2.A.TW
P6.E.JP
P4.C.TW
P1.A.TW
P5.D.JPP3.B.TW
 
圖四:群播樹 
在圖三的例子中，節點 P1.A.TW 與
P2.A.TW 位於台灣的一個名為”A”的 ISP，
中，P3.B.TW 與 P4.C.TW則分別位於台灣的兩
個 ISP，”B”與”C”中。另一方面，P5.D.JP 與 
P6.E.JP 則分別位於日本的兩個 ISP，”D”
與”E”中。實線代表群播樹中的單播連線
(unicast connection)，虛線則代表該節點
同時出現在兩個不同階層 (level)中。其
形成的群播樹如圖四。在這個例子中，
節點 P1.A.TW代表多媒體伺服器，其他則為
客戶端。在此架構中，階層 L0 叢聚中的
單播連線包含台灣與日本間的國際連
線；階層 L1 各個叢聚中的單播連線包含
同一國家的各個 ISP 間的 ISP 對等連
線。因此，新加入節點可利用由上而下
(top down)的方式快速的選擇能夠提供
較大可用頻寬的節點叢聚，再從其中利
用樹搜尋(tree traversal)演算法選擇父節
點，進而降低加入系統等待時間以及服
務拒絕率。 
由於頻寬優先演算法容易形成深群
播樹(deep multicast tree)，使得伺服器到
各個節點間路徑間平均的節點數會隨著
系統節點數增加而快速增加，如此一
來，每個節點因為其他節點離開而造成
服務中斷的機率也隨之增加。因此，我
們提出的多媒體應用層群播技術在新加
入節點選擇其父節點時，不再只考慮可
用頻寬，而是利用 Cost function 來綜合
判斷各個可能的父節點的適當性。我們
所提出的 Cost function 主要包含新加入
節點到一個可能的父節點間路徑的可用
頻寬，往返延遲(RTT)，新加入節點在群
播樹中的深度(depth)，以及第一個 Hop
的往返延遲。透過此 cost function，使得
群播樹得以形成一短寬樹，進而降低各
個節點的服務中斷拒絕率。 
在異質型網路環境下，建立強韌有效
率的應用層群播主要有兩個問題需要被解
決，第一，如何建立多棵獨立的群播樹；
第二、如何增加資料傳遞的效率，我們透
過建立階層式方形網路圖形(Hierarchical 
Square Network Graph, HSNG)，解決建立
多棵獨立群播樹的問題；使用以測量為基
礎的建構協定 M-HSNG 建構有效率的應
用層網路拓樸。 
 首先說明組成HSNG的基礎結構方形
網路圖形(Square Network Graph, SNG)。 
SNG 以變數 n 作為圖形的描述，記作
n nSNG × ，定義 1 給予圖形節點與邊的定義，
稍後給予圖形性質分析。 
定義 1： { , }n nSNG V E× = 為一個方形網路圖
形，其中 
1,1 , , ,
, , ,
{ ,..., ,..., | ,1 ,1 }
{( , ) | , , ,1 , }
i j n n i j
i j i k k j
V v v v v i n j n
E u v u V v v V k n u v
= ≤ ≤ ≤ ≤
= ∈ ∈ ≤ ≤ ≠
 
 
圖五: 4 4SNG × 的架構圖 
V 為 n nSNG × 中的所有節點的集合，每個
 12
維護 2( 1)n − 個 Child-SNG，這樣所產生的維
持負擔太大，為了更平衡 HSNG 的架構，
做 出 一 個 取 捨 ， 每 排 縱 列 節 點
1, 2, ,, ,..., (2 )k k n kv v v k n≤ ≤ 設定為只接出一個
Child-SNG，所以 ( 1)n − 組縱列節點只接出
( 1)n − 個Child-SNG，降低HSNG維持負擔。 
假設有 N 位參與者的環境，使用
n nSNG × 作為 HSNG 的基礎，每個 n nSNG × 最
多可容納 2n 個參與者，得知系統會建構出
2
N
n
個 n nSNG × ，又每個 n nSNG × 可向外面接出
( 1)n − 個 n nSNG × ，可以推算出 HSNG 樹狀結
構的高度為 21log Nn n− ，在 n nSNG × 中依照 3.2
節拓展樹建構演算法所得到的拓展樹樹高
為 2，進而得到建構出來的 n棵節點互異擴
展樹的高度為 212 (log )Nn n−× ，可保證在
HSNG 上建置節點互異擴展樹的高度是和
系統參與者數量成指數關係。例如有 1000
位參與者的環境，使用 4 4SNG × 當作 HSNG
的基礎，可建構出 4 棵高度為 8 的節點互
異擴展樹。 
M-HSNG 協定包含節點加入時的處
理策略與節點離開或是發生錯誤時的處理
機制，建構適合在異質型網路環境下運作
的應用層系統。M-HSNG 採用測量的方式
來建立 HSNG 拓樸，節點在加入系統時透
過與 SNG 管理者溝通的方式，找尋一個離
自己最適合的 SNG 加入，考量到視訊串流
需要低延遲的特性，在此採用網路延遲當
作考量。考量到異質型網路環境下，節點
有不同網路頻寬與節點穩定度的特性，在
M-HSNG 協定中，每個 n nSNG × 只建立 2n 棵
群播樹，換句話說，在 n nSNG × 所有節點中，
有一半是中繼節點，另外一半是完全葉節
點(Pure Leaf-node)，即在任何群播樹上都
沒有子節點的節點，完全葉節點的設計被
使用於改善系統的強度。 
在系統中預設有一個被廣為所知的
視訊串流伺服器，此伺服器同時也是 HSNG
結構中 Root-SNG 的 SNG 管理者，新進節點
向伺服器送出帶有自己頻寬資訊與節點錯
誤率的訊息(透過先前加入系統的紀錄或
由使用者自行輸入接取網路的方式得
知)，伺服器會依造訊息內容給予新進節點
描述標籤(高效能節點、低效能節點)，並
告知視訊編碼資訊包括壓縮視訊所使用的
加解碼形式和子串流數量( s )，與 HSNG 結
構資訊包括有所使用的 SNG 大小( n )與在
SNG 當中建構的群播樹的數量(m )，其關
係為 2ns m≤ ≤ 。 
新進節點必須要加入 HSNG 結構中某
個 SNG，以便找到資料來源的父節點。尋
找可加入的 SNG 過程為一個迭代式的處理
程序，新進節點沿著 HSNG 樹狀結構由上而
下找尋可加入的 SNG，這個程序稱為 SNG
找尋程序。每個 SNG 管理者對於新進節點
的拜訪(收到新進節點的拜訪訊息)時有三
種處理方式，首先，如果所屬的 SNG 尚未
額滿，就會接受(Accept)新進節點加入這
個 SNG 當中；第二，如果 SNG 目前是額滿
的狀況，但是目前有成員比新進節點離
SNG 管理者還要遙遠，即有成員和 SNG 管
理者之間的網路延遲大於新進節點與 SNG
管理者之間的網路延遲，則具有最大網路
延遲的成員會被替換出 SNG (Replace)，
讓新進節點加入，被替換出的節點會再次
運行 SNG 找尋程序；最後，如果目前拜訪
的 SNG 既不可加入也無成員可被替換，SNG
管理者會告訴新進節點其 Child-SNG 的
SNG 管理者的資料，新進節點會測量與這
些 SNG 之間的網路延遲，找尋一個最接近
的 SNG，送出拜訪訊息，而延著 HSNG 結構
往下繼續找尋(Sink)，直到不能夠繼續往
下為止(到達 Leaf-SNG) ，因為每個 SNG
當中只有一個管理者， 故不會因為測量網
路延遲而影響到加入系統的時間。 
如到達 Leaf-SNG 仍不能加入，若新進
節點屬於高效能節點有三種處理方式(1) 
詢問最後拜訪 SNG 的兄弟 SNG 是否可以加
入，(2)自己創建一個新的 SNG 成為其 SNG
管理者，成為最後拜訪 SNG 的兄弟 SNG，
(3) 自己創建一個新的 SNG 成為其 SNG 管
理者，成為最後拜訪 SNG 的 Child-SNG，
新進節點評估何種方案與伺服器之間有較
短的網路延遲，則採取該方案。若新進節
點為低效能節點，則會沿著加入的途徑回
溯到 Root-SNG 找尋之前拜訪過但是因為
網路延遲因素而沒送出拜訪訊息的 SNG，
 14
個網路資訊存放不平均的問題。因為節點
移動而造成的網路分裂與網路合併問題，
我們也提出了解決的方法。 
另外我們也將點對點技術應用在一隨
意網路的線上虛擬遊戲上，獲得 2003 行動
娛樂應用大賽最佳技術獎。分散式虛擬環
境 (Distributed Virtual Environment,DVE)
近幾年來在有線網路上的應用已經相當成
熟，但是在行動隨意無線網路（Mobile Ad 
Hoc Network,MANET）上卻很少有人探討
如何製作分散式虛擬環境。在此篇論文當
中，我們對傳統有線網路上的虛擬環境所
使用的網路架構先做探討，發現如何有效
的利用頻寬是決定分散式虛擬環境品質的
一個重要關鍵，而且在以往的研究當中，
發現群播技術（Multicast）可以有效的減
少頻寬的使用，於是我們決定在行動隨意
無線網路這樣頻寬有限的環境下，使用群
播技術來製作 DVE。我們先提出了一個階
層叢聚式的樹狀結構來對行動隨意無線網
路上的節點定址，在此定址模式下，可以
很有效率的繞送封包，然後我們利用此架
構發展了一個新的小群組多點傳播（Small 
Group Multicast）演算法。最後我們將我
們提出的演算法與目前現有的演算法做了
一些模擬與分析，來證明我們提出的方法
在節省頻寬上極具功效，並且我們利用我
們提出的理論，實地的在個人數位助理
（PDA）上製作了一個簡單的分散式虛擬
環境，用以證明我們的理論實際上可行。 
 
(4) 高節點移動性行動隨意網路資訊分享
系統:  
為解決在高移動性行動隨意網路
中，如何點對點方式有效率得找尋與分
享檔案，我們提出一個名為 P2P file 
sharing system based on Swarm 
Intelligence (P2PSI) 的點對點檔案分享
技術。在描述 P2PSI 之前，我們先對我
們針對環境做兩點假設。第一點，假設
網路上大部分節點都是所謂搭便車節點
[59]，而只有少部分節點分享大部分檔
案，這些節點即是所謂熱點。第二點，
每個熱點偏好儲存自己所感興趣類型檔
案[60]。一般而言，熱點會儲存自己所感
興趣類型檔案中較熱門檔案。 
P2PSI 主要包含兩個程序(process):
散佈(advertisement)與探索(discovery)程
序。散佈程序表示每個熱點會定期散佈
一個 seed 訊息到有限範圍內的節點，而
seed 訊息描述此熱點所分享的檔案資
訊。然而 seed 訊息可能因包含大量分享
檔案列表造成訊息過於巨大，因此我們
利用 Bloom filter[61]技術去壓縮訊息大
小。當節點接收到 seed 訊息後，將會快
取紀錄 seed 訊息中所包含的資訊。之後
如果此節點被詢問是否有某檔案資訊
時，如快取中有紀錄則可立刻回應給查
詢節點。而在探索程序中，當某節點想
找尋某檔案時，它會發出 query 訊息去尋
找擁有此檔案節點網路位置。而 query
訊息將會被中繼節點根據本身擁有的費
洛蒙表單來轉送(relay)。一旦檔案擁有節
點的網路位置被得知，一個 reply 訊息將
會被產生及回傳給查詢節點以及會沿途
留下費洛蒙資訊。如此一來，後續如有
其他節點也想查詢一樣類型的檔案時，
query 訊息將有很大機會根據之前所留
下費洛蒙訊息找尋到檔案資訊，而不需
要將 query 訊息廣播於整個網路上。 
每個節點都會有一份費洛蒙表單
用來記錄通往每個鄰居節點的費洛蒙強
度，某鄰居節點的費洛蒙強度越強代表
有多少機率傳送 query 訊息往此鄰居節
點；越高的費落蒙代表有越高機率傳送
query 訊息往此鄰居節點。表一顯示一個
費落蒙表單的範例，每一列代表檔案的
類型(例如：音樂或電影類型)，而每一行
代表鄰居節點。而表單中的儲存費落蒙
強度是以 pvn,t來表示，n 表示鄰居節點而
t 表示檔案類型，因此 pvn,t大小就表示當
要搜尋 t 類型檔案時有多大機率將 query
訊息傳送給 n 鄰居節點。需要注意地是，
由於我們假設一個熱點有分享 t 檔案類
型，則很可能此熱點擁有很多此類型的
檔案。因此在費落蒙表單中只紀錄檔案
的類型而不是詳細的檔案名稱，避免表
單大小會因大量檔案而變的十分巨大。
而費落蒙表單中的鄰居節點的取得是每
 16
點的費洛蒙強度，因此在跨層式設計
中，當某節點收到在應用層收到 P2PSI
的控制訊息，它也同時加強 ARA 路由表
單中相對應的費洛蒙強度。如此每節點
都到 P2PSI 的控制訊息時也同時學習到
相關路徑資訊。 
跨層式設計P2PSI運作流程如圖十一
所示，在散佈過程中每熱點會定期發出
seed訊息。當節點從鄰居節點收到seed訊
息後，它不但快取紀錄此熱點的相關訊
息，也增強ARA路由表單裡到此鄰居節點
的費洛蒙強度。因此節點得知此熱點存在
與到此熱點的路徑資訊。而在探索過程
裡，查詢節點發送query訊息去找尋檔案而
中繼節點則根據費洛蒙表單來轉送此訊
息。在此例中，中繼節點2快取資料中有紀
錄所要求的檔案資訊，因此節點2回應
reply訊息給查詢者。而中間些接收到reply
訊息的中繼節點，這些節點不但加強P2PSI
中費洛蒙表單裡相對應的費洛蒙強度，也
加強了ARA路由表單中裡相對應的費洛
蒙強度。因此當查詢者收到reply訊息後即
可得知熱點的網路位置與到此熱點的路徑
資訊，故查詢節點可立刻從熱點建立連線
下載資料。除此之外，跨層式設計架構也
利用ARA路由協定所取得的鄰居節點資
訊來避免發送hello訊息造成不必要的訊息
成本。 
Other 
Application P2PSI
TCP/UDP
Application Layer
Transport Layer
Network Layer IPv4/IPv6
ARA Routing Protocol
MAC Layer IEEE 802.11
Physical Layer Network Interface
Data Routing
Inter-layer 
information exchanges
 
圖十: 跨層式設計架構圖 
(5) 行動隨意網路上之即時性資訊搜尋技
術:  
為解決在行動隨意網路中，非即時性
資訊搜尋技術應用於即時性資訊搜尋時，
所產生資訊氾濫的問題。我們提出一個名
為 ALADIN 的即時性資訊搜尋技術。在
ALADIN 中，每個資訊擁有者會定期的尋
找到另一個擁有比自己所擁有版本更新的
版本的資訊擁有者的路徑，透過這些路
徑，當任何一個資訊擁有者接收到查詢其
擁有資訊的查詢訊息時，此查詢訊息就可
以逐漸的被轉送到擁有最新版本的資訊擁
有者，而不需要將查詢訊息廣播於整個網
路上。 
 
update
update
update
Requestor
Network Layer Application Layer Network Layer Application Layer
Intermediate Node 2
Network Layer Application Layer
HotSpot
ARA P2PSI
Network Layer Application Layer
Intermediate Node 1
QUERY
REPLY
REPLY
QUERY
ARA P2PSI ARA P2PSIARA P2PSI
Reinforce pvnode1,t
   Discovery Process
Matching !
   Advertisement Process
cache the information 
SEED
Download File
Reinforce pheromone 
of ARA to HotSpot
Reinforce pheromone 
of ARA to HotSpot
Reinforce pheromone 
of ARA to HotSpot
Reinforce pvnode2,t
 
圖十一: 跨層式 P2PSI 運作範例 
 
我們利用圖十二來展示一個查詢訊
息如何被轉送到擁有最新版本的資訊擁
有者。如圖十二(A)，網路中節點 A，C，
G，以及 L 為四個即時性資訊的擁有者。
此四個資訊擁有這所代表節點中的數字
表示其版本所產生的時間，其中產生於
時間 1 的版本為最舊的版本，產生於時
間 10 的版本為最新的版本。因此 A 擁有
最舊的版本，而 L 擁有最新的版本。如
圖十二(B)所示，資訊擁有者 A，C，G，
以及 L 會定期發送一個較新版本查詢訊
息來找尋一條到擁有較新版本的資訊擁
有者的路徑。此訊息被一節點接收後會
被機率性的繼續轉送到此節點的其中一
個鄰居節點，直到其到達一個擁有較新
版本的資訊擁有者。當一個擁有較新版
本訊息的資訊擁有者接收到較新版本查
詢訊息時，它會送回一個較新版本回應
訊息給送出較新版本查詢訊息的資訊擁
 18
擁有者所發出的較新版本查詢(回覆)訊
息，透過非經常性隨機漫步特性，之後
所收到的由資訊產生於時間點 t，且 t < T
的資訊擁有者所送出的較新版本查詢訊
息，仍可能(很小的機率)轉送至 b 以外的
其他鄰居節點。透過這樣的機制，使得
一個資訊擁有者有機會找到更短的路徑
至另一個資訊擁有者，或找到另一條路
徑至擁有比目前所知更新版本資訊的資
訊擁有者。 
ALADIN 利用資訊擁有者定期搜尋
至擁有較新版本資訊擁有這路徑的方
式，來避免查詢訊息氾濫的問題。然而，
隨著網路上資訊擁有者的增加，可能造
成過多的較新版本查詢(回覆)訊息同時
存在於網路中，造成搜尋效率不佳的問
題。為解決這個問題，我們提出讓擁有
較新版本資訊的資訊擁有者經常送出較
新版本查詢訊息，擁有較舊版本資訊的
資訊擁有者則減少送出較新版本查詢訊
息的頻率，如此一來，同時存在於網路
上的較新版本查詢(回覆)訊息即可減少。 
 
六、結果與討論 
(1)具位置知覺之點對點檔案系統: 
此部份成果發表之論文有: 
[1] Chi-Jen Wu, De-Kai Liu and Ren-Hung Hwang, “A 
Location-Aware Peer-to-Peer Overlay Network,” 
International Journal of Communication Systems, to 
appear. (SCI)  
[2] Chi-Jen Wu, De-Kai Liu, and Ren-Hung Hwang, 
“Locality-aware and Low Maintenance Overhead P2P 
System,” IASTED Communications, Internet and 
Information Technology conference (CIIT 2005), Oct. 
31-Nov. 2, 2005, Cambridge, MA, USA. 
 
在具位置知覺之點對點檔案分享
技術方面，我們設計一系列的模擬實驗
來證明我們所提的 Laptop 擁有良好的路
由效能，包含路由路徑長度、路由路徑
長度分部比率和路由延遲與 IP 路由比率
(Latency Stretch)[23]。我們也以模擬來評
估 Laptop 在未修護路由表情形下，有大
量系統節點突然離開時的路由成功率。
最後則評估 Laptop 是否有一般階層架構
式點對點網路的負載不平衡問題[28]。在
模擬環境中我們使用了兩種不一樣的網
路拓樸環境，一個是由美國喬治亞理工
學院所發展的是階層式網路模型 (T-S 
model)[29]，我們以 GA-Teach 為代表。
另一個是美國波士頓大學所發展的類
Internet 網路模型(AS model)[30]，我們以
AS 為代表。而在 Laptop 的架構上，我們
設定每個系統節點最多只能擁有十六個
子節點，模擬實驗共做十次，在每次會
做二十萬次的路由。 
在圖十三中，我們分別在這兩種網
路模型下評估 Laptop 的平衡路由路徑長
度在網路節點數為一萬至十萬下的變化
情形。由圖十三中我們可以看出 Laptop
擁有極佳的路由效能。在十萬個節點的
網路中，每次的搜尋只需求小於四個
hops 就可以到達目的地。而圖十四中，
我們模擬 Laptop 在十萬個節點網路中的
路由 hop 數，由圖十四中可以看出在十
萬節點的網路中，Laptop 最長需要五個
hops 就可以到達目標節點。這與其他的
點對點系統相比，Laptop 有與其他點對
點系統相同的最長路由長度。以十萬個
節點網路來說，Laptop 所需的最長路徑
為⎡log16100000⎤ = 5。所以在 Laptop 若在
一個無節點失敗的網路中所需要的最長
路由長度是可以被預估的而且圖十四也
證明了 Laptop 路由演算法有很好的效
能。 
在圖十五中，我們分別在這兩種網
路模型下評估 Laptop 在網路節點數為一
萬至十萬下的變化情形的平衡路由路徑
的 Stretch 比值。我們在這裡只有拿出 AS
拓樸的結果來討論，因為在 GA-Tech 拓
樸的結果是與 AS 拓樸差不多的。由圖十
五中證明，Laptop 網路的路由延遲與 IP
路由比率是非常低的。這與另一個點對
點系統，Pastry 所得到的效能是一樣的
[24]，約是比 IP 路由多出百分之四、五
十的差距。但是我們提出的 Laptop 網路
在系統的維護方式和成本上都比 Pastry
來的容易及低。 
圖十六中，我們在 AS 拓樸網路下
模擬有大量的節點失敗情況且無修護節
點路由表的情形下，Laptop 的路由成功
 20
[5] 實作系統進入電信軟體加值大賽寬頻數位學習組決
賽。 
 
在 P2Broadcast 方面，我們設計一系
列的模擬實驗利用與 BF 演算法比較的
方式，來證明我們所提的 P2broadcast 擁
有較低的新加入節點等待加入系統時
間，服務拒絕率，以及服務中斷率。圖
十七為兩個方法在服務拒絕率方面的比
較。很明顯的 P2broadcast 能夠大幅改善
BF 演算法的高服務拒絕率。我們相信能
夠有這樣大幅改善的原因有兩個：階層
式叢聚架構以及在 Cost function 中考慮
First Hop RTT。如之前所提，階層式叢
聚架構能夠避免新加入節點選擇路徑包
含網路瓶頸的系統節點成為父節點，服
務拒絕率因此可以有效降低。另一方
面，考慮 First Hop RTT 可使得擁有較大
存取線路(access link)頻寬的點有較大的
可能性位於群播樹的上游，如此一來，
新加入節點利用樹搜尋(tree traversal)演
算法時就有較大的可能性選擇這些可用
頻寬可能較大的節點作為父節點，進而
降低服務拒絕率。 
由於目前的可用頻寬量測技術均非
常耗時，所以新加入節點等待加入系統
時間主要取決於新加入節點加入系統時
所需可用頻寬量測的次數。圖十八為 BF
演算法與 P2broadcast 在頻寬量測次數方
面的比較，其結果顯示 P2broadcast 大約
可比 BF 演算法節省 2/3 的可用頻寬量
測。由於 P2broadcast 只在找到能夠提供
較大可用頻寬的節點叢聚後，才在其中
進行頻寬量測以決定其在群播樹中的父
節點，因此可比 BF 演算法節省可用頻寬
量測的次數，進而降低新加入節點等待
加入系統時間。 
為了評估 P2broadcast 在減少服務中
斷率的程度，我們利用「重新連線節點
比例」作為我們的評量標準。重新連線
節點比例定義為當一節點主動或系統失
誤被動離開點對點系統時，所需重新連
線的節點數，與當時系統所有節點數的
比值。圖十九為 BF 演算法與 P2broadcast
在重新連線節點比例方面的比較，其結
果顯示 P2broadcast 擁有較小的重新連線
節點比例，亦即有較少的節點會因為其
他節點離開而必須重新連線。其主要原
因是 P2broadcast 會使得群播樹成為一寬
短樹，而 BF 演算法容易形成深群播樹。 
 
0
0.05
0.1
0.15
0.2
0.25
0.3
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Arrival rate (arrivals/min)
B
lo
ck
in
g 
ra
te
BF
P2broadcast
 
圖十七: 服務拒絕率 
0
1
2
3
4
5
6
7
8
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Arrival rate (arrivals/min)
N
um
be
r o
f b
an
dw
id
th
 e
st
im
at
io
ns
BF
P2broadcast
 
圖十八: 頻寬量測次數 
0
0.01
0.02
0.03
0.04
0.05
0.06
0.07
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Arrival Rate (arrivals/min)
Re
co
nn
ec
t P
ee
rs
 R
at
io
BF
P2broadcast
 
圖十九: 重新連線節點比例 
一個節點在重新連線時，可能因為
可用頻寬不足而被迫離開系統。圖二十
為 BF 演算法與 P2broadcast 在強迫離線
節點比例方面的比較。強迫離線節點比
例定義為當一節點主動或系統失誤被動
離開點對點系統時，所需重新連線的節
點數，與當時系統所有節點數的比值。
其結果顯示 P2broadcast 在這方面的表現
與 BF 演算法比較有大幅的改進。其主要
原因在於 P2broadcast 利用短寬樹的特性
來降低被迫重新連線的節點數，並利用
 22
網路延遲去除以直接以 unicast 和伺服器
取得資料的網路延遲所得的比值，HSNG
約在 3 左右，並且隨著節點數量的增加，
呈現穩定的狀態並不隨之增加；但是 RMF
則否，RMF 產生了一個不貼近實際底層網
路結構的網路拓樸，造成傳輸延遲快速的
增加，隨著節點數量的增加，會越來越嚴
重。 
錯誤容忍與系統強度的觀點在於越多
節點能夠收到較多資料流表示系統錯誤容
忍的能力越好，系統強度也越強。[32]的
實驗中，多路徑架構提供比單路徑架構更
佳的錯誤容忍率，及更強韌的資料傳輸系
統，在此就不再對單路徑與多路徑的錯誤
容忍進行比較，本論文把焦點集中於低效
能節點的錯誤率是數倍於高效能節點錯誤
率的情況。 
 
 
圖二十三: 相對延遲增加率 
 
 
圖二十四: 錯誤容忍 
圖二十四顯示在 2000 個節點的環境
下，當高效能節點的錯誤率為 5%時，逐
漸由 5%提高低效能節點的錯誤率至
25%，顯示 HSNG 具有較佳的錯誤容忍能
力，特別是當高效能節點錯誤率為 5%以
及低效能節點錯誤率為 25%的情況下，
HSNG 保持有 75%的使用者可以接收到 3
份以上的資料流，而 RMF 只有 35%，此
外 RMF 約有 10%的使用者處於完全斷線
的情況，也就是完全接收不到任何的資料
流。 
 
(3)低節點移動性行動隨意網路資訊分享
系統: 
此部份成果已發表於: 
[1] Chia-Feng Li, Ren-Hung Hwang, and Chiung-Ying 
Wang, “A Location-Aware P2P Information Sharing 
System in Bluetooth-Based Mobile Ad Hoc Network,” 
International Conference on Wireless Networks, 
Communications, and Mobile Computing 
(Wirelesscom 2005), June 13-16, Maui, Hawaii, 
U.S.A. 
[2] Chiung-Ying Wang, Jia-Ren Cheng, and Ren-Hung 
Hwang, “A Scalable Location-Aware Peer-to-Peer 
System for MANET,” IEE Mobility Conference, Nov. 
2005, Guang-Zhou, China.  
[3] Ren-Hung Hwang, Chiung-Ying Wang, Cheng-Ying Li, 
and Yuh-Shyan Chen, “Mobile IPv6-based Ad Hoc 
Networks: Its Development and Application,” IEEE 
Journal on Selected Area in Communications (JSAC), 
Vol. 23(11), Nov. 2005, pp. 2161- 2171. (SCI,EI) 
另實作比賽獲得: 
[1] 經濟部工業局第二屆無線通訊軟體競賽通訊軟體技
術類佳作 
[2] 2003 行動娛樂應用大賽最佳技術獎 
[3] 2004 IPv6 程式設計比賽實作組佳作 
 
我們以平均路由效能、平均網路
Piconet 數量、平均每個 Piconet 內的 Slave
數 量 、 平 均 樹 狀 結 構 階 層 數 、
DRR(Destination Reachable Ratio)、樹狀階
層高低節點故障對網路的影響、平均網路
傳輸效能等參數將我們所提的 P2P 
BlueTree 與 BlueTree 及 BlueStars 等前人
所提的方法做模擬分析比較。我們的模擬
環境的各項參數為:模擬範圍為 200m x 
200m，每個藍芽裝置節點傳輸半徑為
10m，每個節點限定最多只能有 7 個子節
點，節點的產生由亂數產生決定，每種網
路都重複模擬產生 10 次。 
首先，我們比較三種方法的平均加權
路徑長度。本模擬在所建構的 P2P 
BlueTree 網路、BlueTree 網路、BlueStars
 24
網路之間，分析其原因是 P2P BlueTree 網
路中每個 Piconet 內的 Slave 數量適中，不
會有 BlueStars 網路建立過多 Piconet，而
造成許多 Piconet 內的 Slave 數量很少的情
形。 
 
圖二十六:平均 Piconets 數量 
 
 
圖二十七: 平均每個 Piconet 內的 Slave 數量 
接下來我們評估各方法所建的樹狀
結構的高度。我們模擬比較 BlueTree 和
P2P BlueTree 兩種網路，每種網路都重複
產生 50 次，然後平均計算其結果。模擬結
果如圖x所示，我們可觀察到P2P BlueTree
網路在樹狀階層數量上平均比BlueTree網
路多 1~2 階層，這顯示 P2P BlueTree 網路
並不會有嚴重歪斜樹的產生，我們分析其
原因為 P2P BlueTree 網路的特殊邏輯位址
本身就有察覺區域位置的效果，這可以幫
助節點在傳輸範圍內選擇樹狀結構最適合
的位置加入，防止嚴重的歪斜樹發生。 
最 後 我 們 評 量 DRR (Destination 
Reachable Ratio)。DRR 的定義是計算當有
部分節點關機或離開，造成的網路斷裂，
此時的網路連通比率。我們模擬亂數選出
10%或 20%的節點，標記這些節點為關機
或離開，產生 10000 次的連線要求並建立
路徑，但並不傳送資料封包，此模擬的目
的是計算每條連線所經過的路徑是否會經
過這些標記的節點轉送封包，經過這些節
點的這條連線就算是連線失敗，將可連通
的資料連線數再除以全部的資料連線數，
我們稱之為網路連通率。 
 
圖二十八: 平均樹狀結構階層數 
圖 二 十 九 和 圖 三 十 所 示 分 別 為
DRR(10%)以及 DRR(20%)情形模擬結
果，X 軸是節點數量，Y 軸為網路連通率。
網路在不使用路由快取情況下，且沒有考
慮網路修復的情況，P2P BlueTree 網路與
BlueTree 網路的連通率在 DRR(10%)或
DRR(20%)時相差都不大，我們分析其原
因，可能是樹狀結構網路本身瓶頸在
Blueroot 所造成的影響，降低了網路連通
率。P2P BlueTree 網路使用路由快取之後
連通率提高很多，紀錄 One-Hop-Away 資
訊的連通率至少提高了 0.15，而紀錄
Two-Hop-Away 資訊的連通率則至少提高
了 0.2 以上，紀錄 Two-Hop-Away 資訊的
網路連通率明顯增加許多，分析其原因為
紀錄 Two-Hop-Away 資訊使得路徑縮短
了，相對遇到有問題的節點機率將會減
少，所以紀錄 Two-Hop-Away 資訊是必要
的，因為在無線環境下網路連通率是非常
重要。 
 
 26
能都被限制住了，因為樹狀結構傳輸瓶頸
在 Blueroot 的 缺 點 。 但 是 紀 錄
One-Hop-Away 資 訊 與 紀 錄
Two-Hop-Away 資訊的效能則改善了平均
至少 3 以上，明顯的表現出使用路由快取
使得效能提升。 
 
(4) 高節點移動性行動隨意網路資訊分享
系統:(此部份成果已送 WCNC’07 國際會
議審查中) 
我們利用 Qualnet 網路模擬工具來
評估我們所提出的 P2PSI 方法的效能。
模擬環境是存在 50-200 個行動節點在
1200 x 1200 公尺的範圍中移動，其中
20%的節點是所謂熱點 [59]。每節點傳
輸半徑是 200 公尺，節點移動的模型是
採用隨機移動模型(Random Waypoint)，
而暫停時間設為 30 秒。每節點移動速度
是從每秒 2 公尺到每秒 10 公尺。 
在此模擬中，所有熱點和 1000 個不
同的檔案分成四種類型，如表三所示。
此外我們假設每一類型中每檔案都會有
一個熱門度(popularity)來代表此檔案熱
門程度，熱門度是根據 Zipf 分佈[63]計
算得來，而歪斜(skew)系數 θ 根據先前研
究測量實際網路狀況[64]而設定此係數
為 0.8。為了表現出許多節點都擁有較熱
門的檔案，我們假設在每一類型中每檔
案中前 80%最受歡迎的檔案會被所有一
樣類型的熱點所擁有，而剩下 20%檔案
則會隨機散佈在同類型的熱點上。同樣
地，在模擬中每行動節點都會根據檔案
熱門度(Zipf 分佈)定期的發出查詢，而我
們設定每 5 秒鐘查詢一次。此外每次模
擬將會執行 30 次，每次模擬 600 秒。最
後所取得的結果將計算其平均值與 95%
信賴區間大小。 
比較的對象為同樣利用跨層式設計
概念，名為 CLdsr和 CLdsdv 的服務搜尋協
定。CLdsr是修改原有 DSR 繞徑協定在廣
播搜尋路徑時發出的 rreq 封包中新增一
些欄位來描述所要找尋的服務資訊。一
旦 rreq 封包被服務提供者(即熱點)接收
到後，將會回應一個 rrep 封包。同樣地，
CLdsr也在 rrep 封包新增欄位紀錄所提供
服務的資訊。最後當詢問者接收到 rrep
封包即可同時獲得所需求服務是哪節點
提供與到此節點的路徑資訊。類似地，
CLdsdv 修改原有 DSDV 繞徑協定的路由
表單中增加欄位記錄目前網路中有提供
服務的相關資訊。因此節點可以透過平
常定期交換路由表單同時地學習到路徑
和網路中有哪些服務相關資訊。 
表三: 熱點和檔案所屬類型分類 
類型 屬於此類型熱點數量 檔案編號
類型 1 所有熱點中 30%的節 1~300 
類型 2 所有熱點中 30%的節 301~600
類型 3 所有熱點中 20%的節 601~800
類型 4 所有熱點中 20%的節 801~1000
 
一般來說吞吐量(Throughput)、傳輸
延遲時間與電力的消耗是在行動隨意網
路中重要的評估參數。因此在模擬中評
估參數將包含訊息成本、檔案要求成功
率與平均來回所經路徑長。這些評估參
數將在各種環境下測量，例如，不同節
點數目與不同節點移動速度環境下測量
並分析在節點多寡及移動速度快慢有何
影響。訊息成本定義為在所有節點送出
的訊息總數(包含網路層和應用層所產生
的訊息)，而檔案要求成功率則定義為成
功找尋到檔案擁有者並成功完整下載。
最後，平均來回所經過路徑長定義為查
詢者與檔案擁有者(熱點)成功下載檔案
平均來回需經過路徑長，此參數是為反
映出我們採用ARA路由協定是否有較傳
統路由協定有更好的表現。 
圖三十三比較跨層式設計 P2PSI 與
CLdsr跟 CLdsdv在節點數量為 50 到 200 的
情況下訊息成本成長幅度。顯示在節點
數量多時候跨層式設計 P2PSI 有較低的
訊息成本，而 CLdsr與 CLdsdv 在節點數量
多則有較高的訊息成本。由此可知，跨
層式設計 P2PSI 在節點量多時候所產生
訊息量較少，這對於行動無線網路中電
量消耗減少有正面的意義。 
 28
Number of Nodes
50 100 150 200
A
ve
ra
ge
 R
ou
nd
-T
ri
p 
H
op
 C
ou
nt
2
3
4
5
6
7
8
9
Cross-layer P2PSI
CLdsr
CLdsdv
 
圖三十七: 在不同節點數量中平均來回路徑長 
圖三十八則表示 CLdsr 有較長平均來回
路徑長，原因一樣在於 CLdsr 不會主動找
尋目前最佳的路徑，而跨層式設計 P2PSI
則可透過 query 與 seed 訊息找到最短的路
徑。另一方面，CLdsdv 的平均來回路徑長
隨節點速度增加而快速減少，這是因為在
模擬中平均來回路徑長只有當節點成功取
回檔案才會計算。但是根據圖 7顯示CLdsdv
的檔案要求成功率隨節點速度增加而快速
下降，這暗示 CLdsdv 可能只擁有有限範圍
內鄰近節點的路由資訊，因此只能向這些
鄰近節點取回檔案，因此模擬結果顯示
CLdsdv 隨節點速度增加有較短平均來回路
徑長。 
 
Mobility Speed (m/s)
2 4 6 8 10
R
eq
ue
st
 S
uc
ce
ss
 R
at
io
 (%
)
0.6
0.7
0.8
0.9
1.0
Cross-layer P2PSI
CLdsr
CLdsdv
 
圖三十八: 在不同節點速度中平均來回路徑長 
 
(5) 行動隨意網路上之即時性資訊搜尋技
術:  
此部份成果已被 Ad Hoc Networks 期刊接
受: 
[1] De-Kai Liu, Chaiporn Jaikaeo, Chien-Chung Shen and 
Ren-Hung Hwang, “Querying time indexed information in 
mobile Ad hoc networks,” Elsevier Ad Hoc Networks 
Journal, to appear. 
 
在行動隨意網路即時性資訊搜尋方
面，我們設計一系列的模擬實驗利用與
一個基於訊息廣播，名為 Q-FLOOD 的
即時性資訊搜尋方法比較的方式，觀察
ALADIN 在訊息成本，搜尋成功率，搜
尋時間，以及所找到資訊版本的即時性
等四個方面的效能。當一個 Q-FLOOD
查詢者欲找尋最新版本的即時性資訊
時，其會將最新版本查詢資訊廣播於整
個網路上，而擁有所需資訊的資訊擁有
者則會送回帶有其資訊版本產生時間資
訊的最新版本回覆訊息給查詢者。查詢
者則根據所收到的最新版本回覆訊息判
斷哪個資訊擁有者擁有最新版本的資
訊。此外，與 ALADIN 相同，最新版本
回覆訊息會記載其所經過的節點，因
此，Q-FLOOD 也可同時搜尋到擁有最今
版本的資訊擁有者，以及查詢者至該資
訊擁有者的路徑。如前面章節所述，當
非即時性資訊搜尋技術應用於即時性資
訊搜尋時，會產生查詢訊息氾濫的問
題。因此， Q-FLOOD 實際上可被視為
直接將非即時性資訊搜尋技術應用於即
時性資訊搜尋的一個範例。在我們的模
擬實驗中，訊息成本定義為在所有節點
收到與送出的訊息總數，而所找到資訊
版本的即時性則定義為網路上最新版本
產生時間，減去所找到版本產生時間的
差。因此，若此數值越小則代表找到越
新版本的資訊，也就代表找到的資訊越
具有即時性。 
圖三十九、四十、四十一分別為
ALADIN 與 Q-FLOOD 在不同的資訊查
詢率，節點移動速度，以及網路節點個
數的情況下在訊息成本方面的比較。很
明顯的，ALADIN 基本上可以節省至少
50%的訊息成本。不同於 Q-FLOOD 將最
新版本查詢訊息廣播至整個網路，
ALADIN 使得網路中只有部分節點參與
最新版本查詢訊息的轉送，且利用蟲群
智慧中正向(負向)回應，以及非經常性隨
 30
 
圖四十四: 不同網路節點個數的查詢成功率 
 
雖然，ALADIN 在搜尋成功率的表
現較 Q-FLOOD 為差，但我們仍須同時
考慮所找到資訊版本的”品質”如何。圖
四十五、四十六、四十七則分別為
ALADIN 與 Q-FLOOD 在不同的資訊查
詢率，節點移動速度，以及網路節點個
數的情況下在所找到資訊版本的即時性
方面的比較。很明顯的從這些圖中得
知 ， ALADIN 幾 乎 都 可 以 找 到 比
Q-FLOOD 更新版本的資訊。因此，
ALADIN 所找到的資訊版本的品質較
好。其主要原因在於 Q-FLOOD 由於產
生過多的最新版本查詢(回覆)訊息於網
路上，因此網路碰撞的情形相當嚴重。
也造成由最新版本資訊擁有者所送出的
最新版本回覆訊息非常可能在傳回給查
詢者的過程中遺失。使得查詢者無法找
到最新版本的資訊。在這些圖中，
Q-FLOOD 所找到資訊版本即時性的變
異性相對於 ALADIN 也較大，也間接證
實了我們對這個現象的解釋。 
 
圖四十五: 不同資訊查詢率所找到資訊版本的即
時性 
 
圖四十六: 不同節點移動速度所找到資訊版本的
即時性 
 
圖四十七: 不同網路節點個數所找到資訊版本的
即時性 
 
圖四十八、四十九、五十則分別為
ALADIN 與 Q-FLOOD 在不同的資訊查
詢率，節點移動速度，以及網路節點個
數的情況下在搜尋時間方面的比較。
Q-FLOOD 是一種訊息氾濫式的資訊搜
尋方式，因此其所得到由查詢者到資訊
擁有者的路經一定為最短路徑。另一方
面，ALADIN 則是一種隨機漫步式的資
訊搜尋方式。雖然這樣的方式可能使得
搜尋的時間加長。然而，透過正向(負向)
回應，以及非經常性隨機漫步可以使得
查詢者有機會找到與資訊擁有者間的較
短路徑，而減少所需的搜尋時間。因此，
雖然 ALADIN 的搜尋時間較 Q-FLOOD
為長，但由於兩者的搜尋時間差異很小
(約 20ms)，我們相信對一個電腦使用者
而言幾乎感覺不到其中的差異。 
透過這些模擬實驗，我們已經展示
出 ALADIN 相對於 Q-FLOOD 具有較高
的延展性以及所搜尋資訊的即時性。雖
然在搜尋時間以及搜尋成功率不及
 32
International Conference on Supercomputing, 
2002. 
[17] The Napster home page, 
http://www.napster.com/ 
[18] The Gnutella home page, 
http://gnutella.wego.com/ 
[19] I. Stoica, R. Morris, D. Karger, M. F. Kaashoek, 
and H. Balakrishnan, “Chord: A scalable 
peer-to-peer lookup service for Internet 
applications,” in Proceedings of SIGCOMM, 
2001. 
[20] B. Y. Zhao, J. Kubiatowicz, and A. Joseph, 
“Tapestry: An Infrastructure for Fault-tolerant 
Wide-area Location and Routing,” UCB Tech. 
Report UCB/CSD-01-1141. 
[21] A. Rowstron, and P. Druschel, “Pastry: 
Scalable, distributed object location and routing 
for large-scale peer-to-peer systems,” in 
Proceedings of IFIP/ACM International 
Conference on Distributed Systems Platforms, 
2001. 
[22] S. Ratnasamy, P. Francis, M. Handley, R. Karp, 
and S. Shenker, “A Scalable 
Content-Addressable Network,” in Proceedings 
of SIGCOMM, 2001. 
[23] S. Ratnasamy, M. Handley, R. Karp, and S. 
Shenker, “Topologically-Aware Overlay 
Construction and Server Selection,” In 
Proceedings of IEEE INFOCOM , 2002. 
[24] M. Castro, P. Druschel, Y. C. Hu, and A. 
Rowstron, “Exploiting Network Proximity in 
Peer-to-Peer Overlay Networks,” in 
Proceedings of International Workshop on 
Future Directions in Distributed Computing, 
2002. 
[25] V. K. Goyal, "Multiple description coding: 
compression meets the network," IEEE Signal 
Processing Magazine, 2001.  
[26] Y.Chu, S.Rao, S.Seshan, and H.Zhang, 
“Enabling conferencing applications on the 
internet using an overlay multicast 
architecture,” in Proc. ACM SIGCOMM, Aug. 
2001, pp. 55–67. 
[27] S. Banerjee, B. Bhattacharjee, and C. 
Kommareddy, “Scalable application layer 
multicast,” in Proc. ACM SIGCOMM, Aug. 
2002, pp.205–217. 
[28] Duc A. Tran, Kien A. Hua, and Tai Do, “A 
Peer-to-Peer Architecture for Media 
Streaming,” IEEE Journal on Selected Areas in 
Communications, Jan. 2004. 
[29] DK Liu, and RH Hwang, “P2broadcast: a 
hierarchical clustering live video streaming 
system for P2P networks,” International 
Journal of Communication Systems, Sep. 2005, 
pp. 619-637. 
[30] V. N. Padmanabhan, H. J. Wang, P. A. Chou, 
and K. Sripanidkulchai, “Distributing 
streaming media content using cooperative 
networking,” in Proc. ACM NOSSDAV, 
May2002, pp.177–186. 
[31] M. Castro, P. Druschel, A.-M. Kermarrec, A. 
Nandi, A. Rowstron, and A. Singh, 
“SplitStream : High-bandwidth content 
distribution in a cooperative environment,” 
presented at the IPTPS, Berkeley, CA, Feb. 
2003. 
[32] R. Tian, Q. Zhang, Z. Xiang, Y. Xiong, X. Li, 
and W. Zhu, “Robust and efficient path 
diversity in application-layer multicast for 
video streaming,” IEEE transactions on circuits 
and systems for video, Aug. 2005. 
[33] X. Zhang, J. Liu, B. Li, and T.-S. P. Yum, 
“DONet/CoolStreaming: A Data-driven 
Overlay Network for Live Media Streaming,” 
in Proc. IEEE INFOCOM, 2005. 
[34] “PPStream project,” http://www.ppstream.com/ 
[35] Y. Chu, A. Ganjam, T. S. E. Ng, S. G. Rao, K. 
Sripanidkulchai, J. Zha and H. Zhang, “Early 
Experience with an Internet Broadcast System 
based on Overlay Multicast,” in Proc. USENIX, 
June 2004. 
[36] K. Sripanidkulchai, B. Maggs, and H. Zhang, 
“An Analysis of Live Streaming Workloads on 
the Internet,” in Proc. Internet Measurement 
Conference, 2004. 
[37] M. Bishop, S. Rao, and K. Sripanidkulchai, 
“Considering Priority in Overlay Multicast 
Protocols under Heterogeneous Environments,” 
in Proc. IEEE INFCORM, Barcelona, April 
2006 
[38] E. Zegura, K. Calvert, and S. Bhattacharjee, 
“How to model an internetwork,” in 
INFOCOM96, San Francisco, CA, 1996.  
[39] M. Papadopouli and H. Schulzrinne, “Effects of 
Power Conservation, Wireless Coverage and 
Cooperation on Data Dissemination among 
Mobile Devices,” in Proc. ACM SIGMOBILE 
Symposium on Mobile Ad Hoc Networking & 
Computing, pp. 117-127, Oct. 2001.  
[40] A. Klemm, C. Lindemann, and O. Waldhorst, 
“A Special-Purpose Peer-to-Peer File Sharing 
System for Mobile Ad Hoc Networks,” in Proc 
IEEE Semiannual Vehicular Technology, Oct. 
2003, pp. 2758– 2763.  
[41] G. Lau, M. Jaseemuddin, and G. Ravindran, 
“RAON: A P2P Network for MANET,” in Proc. 
2nd IEEE International Conf. on Wireless and 
Optical Communications Networks, pp. 
316-322, Mar. 2005.  
[42] U. C. Kozat and L. Tassiulas, “Network Layer 
Support for Service Discovery in Mobile Ad 
Hoc Networks,” in IEEEINFOCOM, San 
Francisco, USA, April 2003.  
 34
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                            94 年 11 月 3 日 
報告人姓名  
黃仁竑 
 
服務機
構 
及職稱 
 
國立中正大學資訊工程系 
 
     時間 
會議 
     地點 
94.10.31-94.11.2 
美國波士頓 
本會核定
補助文號
NSC 94-2213-E-194-001 
會議 
名稱 
 (中文) 通訊、網路及資訊技術國際研討會 
 (英文) International Conference on Communications, Internet and Information Technology
發表 
論文 
題目 
 (中文) 具位置知覺及低負荷的點對點資訊系統 
 (英文) Location-Aware and Low Maintenance Overhead P2P System 
報告內容應包括下列各項：(報告如次頁) 
一、參加會議經過 
 
二、與會心得 
 
三、考察參觀活動(無是項活動者省略) 
 
四、建議 
 
五、攜回資料名稱及內容 
 
六、其他 
 
 
 
附件三
 
 36
題，給了一個上午的 tutorial。在 Ali 教授的 keynote speech 中，主要是介紹
他這幾年來努力制定的一些可以讓 Ethernet over WDM 的協定與機制，使得
以往需要一些 layer 2 協定，如 SONET/SDH，的 overhead 可以消除，讓
Ethernet 更有效率地跑在光纖上。目前，此技術已從 LAN 到 MAN 到目前
的 global (WAN)的境界，將可讓 end-to-end 都以 Ethernet 的技術連接。 
筆者次此大會除報告一篇論文外，還負責與 Texas State University 的
Furman Haddix 教授共同主持第二天下午第六個 session 的會議。此 session
從下午 2 點到 5 點，中間休息半個小時。表定有 11 篇論文發表，但一篇由
中國大陸學者投稿的論文無人發表，所以只有 10 位講者。每人有 20 分鐘
的 presentation，所以使得 session 一直到近六點才結束。在此 session 中，
由 Haddix 教授主持上半個 session，由我主持下半個 session。首先是由我
present 我們以”Location-Aware and Low Maintenance Overhead P2P System”
為題的論文。在此論文中，我們提出一個新的 P2P 的 infrastructure，以解決
在 distributed but structured 的 P2P 系統中，routing 不 efficient、routing table 
maintain cost 太高及 P2P overlay structure maintenance overhead 太高的問
題。我們利用 cache 及固定時間交換 hello 訊息時順便收集目前 active 的 peer
的訊息，來大幅度解決 overhead 太高的問題，再利用 Proximity Neighbor 
Selection (PNS)技術來提高 routing 的效率。第二篇是由日本 Osaka 大學的
Wakamiya 教授發表有關如何整合不同 P2P 系統的論文，主要的想法是提供
gateway 來轉換不同 P2P 系統間的 search 跟 retrieval 問題，例如在 BT 跟
eDonkey 之間。此想法在國內也有人做，只是在理論上可行，在實際實作上
受限於不同 P2P 軟體不是 open source，較難有效率實現。第三篇是由
University of Delaware 的博士生 Peng Wang 先生介紹他們為實現
Core-Stateless Fair Queueing (CSFQ)中需要有效率估算各 flow 的流量的
algorithm，主要的想法是只要統計各 flow label 流過的 packet 數，據以估算
目前的流量，並以回饋機制來增加或減少各 flow 的流量。第四篇是由馬來
西亞National Tenaga University的Ong教授介紹他們如何引進美國猶他大學
的 NetBed 系統(一個整合 emulation、simulation 及實際網路的模擬環境)並
應用在醫療照護(Healthcare)的網路上。環境是建了，但仍是以 run ns2 模擬
為止，尚無法加入 emulation 或從真實系統取得資料。第五篇是由東京理工
學院(Tokyo Institute of Technology)的博士生 Yuthapong Somchit 報告他們對
有 QoS (部份 reliable)的 multicast 所提出的 flow control 的研究。主要的想法
是靠 QoS multicast router(QMLS)來提供 loss packet 的 retransmission 將會造
成 router 很大的負擔及很多不必要的 NAK，所以他們提出依目前 loss 的情
形來判斷一個 router 是要在 normal router 的 state 或是轉成 QMLS router 的
state，以達到某個百分比以下的 pack loss rate 又能減少 active QMLS router
的數量。以上五篇 present 完後，上半個 session 也就跟著結束。 
下半個 session 由我主持，第一篇是由加拿大 Concordia University 的研
 38
 
五、攜回資料名稱與內容 
筆者攜回此次大會（CIIT 2005）論文集光碟片一片，內容包含所有在
會中發表之論文。另大會也很貼心地發給每一個 present 的人一張
presentation 證明，也給了我一張當 session chair 的證明。 
 
 
update the routing information of its parent node. This 
approach enables LAPTOP to route efficiently with low 
routing table maintenance overhead as compared to 
previous approaches. The maintenance overhead of the 
overlay network are also relatively low since a LAPTOP 
node only checks its connectivity to its parent node 
periodically, while most other P2P systems need to check 
the connectivity with a set of nodes. With these novel 
features, the routing path length in a LAPTOP overlay 
network is bounded by O(logdN) hops and the routing 
table size of the node is bounded by logd N ×(d-1), where 
N denotes the number of nodes and d represents the 
maximum degree of each node.  
The rest of this paper is organized as follows. Section 
2 then presents the overview of LAPTOP and describes 
how LAPTOP solves the two challenges mentioned above. 
The mathematical analysis and simulation results for 
evaluating the performance of LAPTOP then are 
presented in sections 3 and 4. Finally, section 5 offers 
conclusions and future research directions.  
2. Design of LAPTOP 
LAPTOP utilizes the basic principles of the PNS 
approach to construct a hierarchical overlay network. 
However, the overlay network in LAPTOP is formed in a 
self-organizing manner. Specifically, LAPTOP enables a 
newcomer to randomly select a LAPTOP node as its 
parent node to obtain a logic address and to form a tree-
based overlay network. LAPTOP also employs a 
hierarchical addressing scheme to facilitate the PNS 
mechanism process. Thus, unlike other approaches that 
need to periodically exchange a large number of messages 
among nodes, a LAPTOP node only exchanges 
information with its parent node periodically. 
2.1 LAPTOP Operations 
The overlay topology formed by LAPTOP is a tree, but 
each node builds a routing table to aid routing process and 
strengthen system robustness. Each node in LAPTOP has 
a node address which is used to indicate the logical 
location of the node in the overlay, and is represented by a 
sequence of dotted decimal numbers, resembling the IP 
address format but with a variable length. The address of 
LAPTOP node is formally defined as follows:  
Definition 1 (Node address): Each node has a unique 
address represented by a dotted decimal number, in which 
each decimal number ranges from 1 to d, where d denotes 
the maximum degree of a node in LAPTOP. The 
LAPTOP overlay network assumes that a root node is a 
preparation node that is initially assigned the address, “1” 
and should never fail.  
 
1) Host joining: When a new node joins the LAPTOP 
overlay network it will invoke the Join procedure to 
locate its parent location in the overlay network and 
obtain its node address. As in mOverlay [14], the 
approach described here assumes the existence of a well-
known bootstrap node, which can be a single machine or 
a set of machines. The bootstrap node maintains a global 
node information cache and will guide a new node to find 
its parent node. Therefore, the first step of the join 
procedure is to contact the bootstrap node to obtain 
information. In LAPTOP, the start node, which refers to 
the potential parent node of the new node, is randomly 
selected from the existing nodes. The new node selects 
the start node as its parent node if the degree of the start 
node is not full; otherwise, the start node will randomly 
select one of its child nodes as the new start node for the 
new node. The procedure is repeated until a parent node is 
found. The parent node then creates a logic address by 
appending a unique number to its own address for the new 
node. The advantage of this join procedure is that the 
constructed overlay tree is likely to be a balanced tree due 
to the random selection of the start node.  
Figure 1 shows an example of the join procedure. The 
maximum degree of a node is 3. The new node first 
contacts with the bootstrap node and gets a randomly 
selected start node whose address is 1.1. The new node 
then contacts with node 1.1, but is redirected to node 1.1.1 
since the degree of node 1.1 is full. Thus, the new node 
becomes the child node of node 1.1.1 and is assigned an 
address of 1.1.1.1. 
 
1 (Root node)
1.1 1.2 1.3
1.1.1 1.1.2 1.1.3 1.2.1 1.2.2 1.2.3 1.3.1 1.3.2 1.3.3
1.2.3.11.1.2.1 1.3.3.11.2.1.1 1.2.1.2 1.3.2.1New node
Bootstrap node
1. Fetch a random node
2. Locate parent
3. Get address
 
Fig. 1: Example of the Join procedure 
 
Node address 1.2.3.1
default routing set
1.2
Routing table
1.1.x
1.3.x
140.123.105.14
120.190.10.3
192.83.193.39
120.140.190.1
110.19.100.17
1.2.1.x
1.2.2.x
1.2.3.2.x
1.2.3.3.x
1.1.3
1.3.2.1
1.2.1.1
1.2.2
10.123.195.2201.2.3
 
Fig. 2: Routing information at node “1.2.3.1” 
 
2) Message routing: LAPTOP takes advantage of its 
hierarchical address to achieve efficient message routing. 
LAPTOP can route message in less than ⎡ ⎤Ndlog  steps if 
the overlay tree is balanced. The longest prefix matching 
scheme is adopted as the default routing scheme for 
LAPTOP.  
In LAPTOP, each node maintains a default routing set 
and a routing table for message forwarding. Each entry in 
these tables comprises the logic address of a node, as well 
Therefore, a node will notice the leave/failure of its child 
or parent node. The failure of a child node can easily be 
handled by its parent node by marking the absence of a 
logic address in its child list. Meanwhile, the failure of a 
single parent node is handled by the grandparent node 
using a “take over” mechanism. Specifically, when a node 
does not receive the ACK of the Heartbeat message from 
its parent node before the expiry of its timer, it will send a 
CONTENTION message to its grandparent node. (Notably, 
the address information of ancestor nodes is in the default 
routing set.) By waiting for a certain period of time, the 
grandparent node will select one of the child nodes that 
have sent the CONNECTION message to take over the 
duty of the failed node. The parent node updates its 
routing information to reflect this change, and also 
forwards update information to all of the child nodes to 
which it has sent the CONNECTION message. The 
criteria for selecting the take over node are 
implementation dependent, and one possible choice is to 
select the node with the least number of child nodes. A 
node which is already a take over node should not send a 
CONTENTION message to the grandparent node, but 
should simply notify the grandparent node of its existence. 
For multiple simultaneous node failures, if the failed 
nodes do not have a parental relationship, the failure 
recovery process can be performed independently as 
aforementioned. In cases where failed nodes have 
ancestor-descendant relationship in the overlay, a child 
node of a failed node may be unable to contact its 
grandparent node, since the grandparent node is also 
failed. In this case, the child node will receive no response 
from the grandparent node. The child node will then 
select the closest ancestor and contact it again until it 
receives a response from some ancestor node. In the worst 
case, its ancestors had been failed, it can reach the root 
node which is assumed to always be up. The found 
ancestor then selects a takeover node for its failed child 
node. The process is repeated for each level such that a 
new selected takeover node selects a takeover node for 
the failed node located one level below. 
3. Performance Analysis of LAPTOP 
This section analyzes the complexity of several major 
algorithms of LAPTOP. 
3.1 Node Joining Algorithm 
LAPTOP adopts a random tree traversal scheme for a 
newcomer to find its parent node on the overlay network. 
Lemma 1: The Join procedure requires less than 
O(logdN) steps to locate the parent of each newcomer, 
where N denotes the number of nodes in the system 
and d represents the maximum degree of a node. 
PROOF:  
A newcomer initially is assigned a randomly selected start 
node by the bootstrap node. In the worst case, the start 
node is a level 1 node, and the new node is redirected to a 
child node because the degree of the start node is full 
which repeated again and again, until a newly selected 
start node is a leaf of the current overlay. Since the start 
node is randomly selected, the overlay tends to be a 
balanced tree and the height of the overlay tree should be 
bounded by O(logd N). Therefore, the complexity of the 
Join procedure is bounded by O(logd N). □ 
3.2 Node Routing Algorithm 
Now we will show that the length of a routing path in 
LAPTOP in bounded by O(logd N). 
Lemma 2: The length of a routing path is bounded by 
O(logd N) hops, where N denotes the number of nodes 
in the system and d represents the maximum degree of 
a node. 
PROOF:  
We shall assume that the routing table of each node is 
correct and up to date. Due to the longest prefix matching, 
each routing step takes the message to a node that has a 
longer common prefix with the destination node. Since 
the length of the prefix is bounded by the height of the 
overlay tree, the length of a routing path should be 
bounded by O(logd N) hops. □ 
If the routing table is inaccurate due to many 
simultaneous node failures, the length of a routing path 
should not increase too much since with the maintenance 
set, the message will be forwarded to a node of a sub-tree 
that is approaching the destination.  
3.3 Node Recovery Algorithm 
The tree structure and hierarchical self-addressing scheme 
enables LAPTOP to efficiently handle overlay network 
change due to departure of a node, either gracefully or 
abruptly. 
 Lemma 3: The recovery procedure overhead is 
bounded by O(dlogdN)  in terms of number of nodes to 
contact. 
PROOF: 
For a single failure, the recovery procedure involves at 
most d children nodes and the parent of the failed node. 
Therefore, the communication overhead is bounded by 
O(d) in terms of nodes involved or messages to send. For 
multiple node failures, a child node may need to contact 
multiple ancestors, but the number of contact node is 
bounded by the height of the overlay tree, which is 
O(logdN) for a balanced tree. A take over node needs to 
be selected for each failed node, which requires a 
communication overhead of O(d). Therefore, in the worst 
case, the overall communication overhead is bounded by 
O(dlogdN).  □         
In summary, Table 1 compares the maintenance 
overhead of existing well-known P2P systems with 
LAPTOP in terms of the amount of control messages sent. 
Generally, hosts in a decentralized but structured P2P 
system must periodically exchange control messages to 
maintain the overlay structure as well as its routing table. 
As shown in Table 1, LAPTOP has a competitive network 
diameter compared to Pastry (by having d set comparable 
to b) and its network diameter is much smaller than Chord. 
On the other hand, the number of control messages sent 
by each host in LAPTOP is significantly less than that in 
Pastry and Chord. The major difference is that LAPTOP 
