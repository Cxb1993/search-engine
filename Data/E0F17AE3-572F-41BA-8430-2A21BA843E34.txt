2 
 
一、 摘要  
先進的交通管理系統(ATMS)有助於交
通管理的優化，以此為目標，應用先進的交
通號誌控制器來提升效率，本年度計畫應用
軟體代理人與嵌入式系統技術，支援再生能
源裝置協助 ATMS 執行，建立一個完整的交
管控制系統，達到好的節能與備援的機制。
本文提出三個部份研究：路口策略分析、電
源管理代理人 PMA(Power Management 
Agent)、成本效益評估。路口分析方式利用
車流分級方式配合 PMA 制定確切的策略為
主，PMA 支援交控裝置電源供應的主要控制
端，並負責發佈不同的電源管理策略給控制
器，成本效益的分析上，依照嵌入式系統模
擬的建置設備，分為建置成本加上消耗成
本，評估再生能源加入交控裝置之可行性。 
關鍵詞：智慧型交通控制系統, 嵌入式系統, 
軟體代理人, 再生能源, 機動式
智慧型交通控制器 
    Advanced Traffic Management Systems 
(ATMS) contribute to traffic management, 
optimization of this objective, the application 
of advanced traffic signal controllers to 
enhance the efficiency, this year's program 
application agents and embedded systems 
technology to support renewable energy 
installations to help ATMS implementation, 
the establishment of a complete intersection 
control systems, to achieve good 
energy-saving and redundant mechanisms. In 
this paper, we propose the three-part study: 
intersection strategic analysis, power 
management agent, cost-benefit analysis. 
Intersection analysis with the use of traffic 
classification methods, PMA Support Traffic 
Control Devices of the main control and 
responsible for the different power 
management policies issued to the controller. 
Cost-benefit analysis, in accordance with the 
embedded system simulation environment is 
divided build-cost and consumption-cost, 
assessment of renewable energy by adding the 
feasibility of traffic control device. 
Keyword: Advanced Traffic Management Systems 
(ATMS), Embedded Systems, Software 
Agent, renewable energy, Mobile 
Intelligent Traffic Controller 
二、 前言 
近年來交通管理系統研究以先進式交
通管理系統為藍圖，並且結合資訊、通訊、
電子與交管等技術與知識，以軟體代理人與
嵌入式系統結合交通控制中心，進行自主性
與相互合作式的交通管理。除了在前一年度
研究中，所提到能改善現有交通控制器的：
體積旁大、無法處理複雜功能、機動性不足
外，系統穩定性與節能概念也被列入考量
中，其中包括電源管理、節能、防災與備援
等。 
在考慮到系統穩定性中，為了能夠讓交
控設備能穩定運作，又能導入防災節能的概
念，故提出在原先交通號誌控制器旁加入一
個電源管理裝置，來支援交通號誌控制器運
作，如圖 1： 
市電 
 
 
再生能源 
交通控
制設備 
電源控
制裝置 
圖 1 交通號誌設備電力供應概念圖 
4 
 
策略來符合先進式的交通管理系統。 
軟體代理人，為一可在異質網路上遷移到另
一主機上，並可以與其他的代理人相互溝通
與協調，而在交管與再生能原研究上，也有
一些相關的應用例子，主要是希望能透過代
理人自主與遷徙的主要特性，達到機動與策
略發佈的功能，自主為主要能夠獨立管理一
個電源控制器，所產生的電原管理代理人，
電源管理代理人主要應用在每個路口的控
制器上，並組織推理、分析與指派動作，並
透過網際網路達到可遷徙特性，可以在中心
與地方路口間相互移動合作來完成工作。 
五、 研究方法 
本章節將介紹整合式電源管理系統相關系
統歸劃說明及配置與管理策略等實施方試： 
5.1 系統模組與說明 
運用再生能源與市電做為兩種供電來
源，雖然再生能源的應用已經漸漸普及生活
上，但能與市電結合的再生能源裝置，其大
多數的價格昂貴且無法有效的客製化，而一
般式再生能源設備也無法符合整合式先進
交通管理號誌控制器之各種裝置，所以在本
研究中我們應用一組可以結合市電並聯的
設備，EPRC-G-110V 做為我們結合市電與
再生能源的轉換裝置，而再生能源來源此以
太陽能發電設備為主，並應用 8051[4]與單
板電腦設計一個可程式化之控制裝置，8051
晶片負責硬體設備控制器並透過 rs232 接收
單板電腦傳來的指令，單板電腦上利用代理
人自主方式與可遷徙的特性，進行路口設備
的電源管理與控制 
系統上，整體系統架構如圖 3，系統可
分成幾個部份，上部籃色為軟體與應用程
式，軟體與應用程式分為： 
 交通策略控制與指派 
對路口實施交管策略與策略更新為主 
 電源管理策略控制 
實施路口上交通號誌控制器的電源供
應監控，用來分析路口權重值與相對應
策略分析與指派。 
 無線資訊傳輸控制 
傳接收路口間傳輸之訊息即代理人溝
通與遷徙控制 
綠色為硬體的部份與模組，其中分為單板電
腦控制與底層硬體部份： 
 交通號誌與電源控制器 
  橘色區塊為嵌入式單板電腦部份，上包
含交通號誌控制裝置與電源管理裝置
的主要控制核心部份。 
 交控模組 
  交通號誌系統與 CMS，號誌硬體為路
口必備設備，而資訊可變標誌(CMS)為
一般主要幹道上一些顯示之交通資訊。 
 綠能模組 
以繼電器與光感電阻為主體的硬體控
制電路，負責控制與切換電路，配合電
源管理策略應用。 
 通訊模組 
  以 ZigBee 為主要發送模組，連接路口
與路口間通訊，配置於每一個路口上。 
 
       圖 3 系統架構模組 
5.2 環境配置 
6 
 
5.4 管理策略 
  再生能源使用方式，我們依照一般常見
的使用方法，再配合市電倂聯與一些電源控
制的需求模式，先設定出幾種電源管理的策
略，軟體代理人再依照策略的不同內容進行
管理策略的發佈，藉此靈活的控制再生能源
與市電的控制，以達到節能的效果，下面列
出目前訂出的幾條再生能源與市電轉換策
略，以下說明以再生能源的使用為主。 
 常駐節能節約策略 
在常駐供應節能策略之下，再生能源
的使用，為設備主要供應來源，設備
的權值初始化啟動之後，以為了節省
市電的使用為目的，在最佳化的供應
狀態下，充電大於負載，全日以再生
能源為主，而充電不足時，系統將會
切換為電池支援，當蓄電池處於低電
量狀態或出現故障時，切換為市電供
應設備，此種策略通常用在車流較少
的非主要路口與路段，及負責設備較
少的地方。 
 成本節約策略 
再生能源的使用在日間時段供應路口
所需要的電力，一邊充電一邊供應，
負責應付日間用電時段，市電則在晚
上使用，一來夜間離峰時段電費較
省，而白天補充於電池的再生能源則
儲存起來當作備援電力使用，到隔日
能在繼續補充再生能源時再啟用再生
能源供電，這種策略通常用於再生能
源裝置蓄電無法長時間功應夜間用
電，及路口車流適中與設備數量中
等，權值中等的路口，這種類型多為
一般的中小型路口為主。 
 
 
圖 7 常駐節能節約策略流程 
 
 
圖 8 成本節約策略流程圖 
8 
 
將其實作出一套完整的系統，那再生能源裝
置的普及度便是大大的提升，而大量建置下
的成本是否能符合他的成本效益?這是一個
值得去探討的問題，如果加入再生能源於交
管系統上能夠達到穩定與節省成本的話，那
這樣的實驗方向是可行的，以我們的實驗為
例，我們所使用的再生能源為小型的太陽能
發電裝置，並分成基本建置成本與消耗性成
本兩類，下去評估看實作的可能性。 
基本建置成本：太陽能板、市電交流電轉換
裝置、直交流轉換器、嵌入
式單板電腦。 
消耗性成本：蓄電池 
  若以功率發揮之理想狀態為例，依照交
通部統計處資料顯示，以 97 年為例，台灣
中部地區的年平均日照時數約為 1953 小
時，並依照所使用的太陽能板所產生的發電
量 50W 為單位，計算其年平均所能生產電
量與成本比較。 
  若太陽能板輸出功率為 50W，則每 20
小時為一度電，所以若在理想日照狀態下一
年可產生約 98 度的電，以台電非營利電價
標準計算，電價一度為 2.1 元，98 度產值為
206 元(產能也會隨著電度提升相對高，如超
過 500 度以一度 4 元計算)，由此數據我們
發現，這樣計算所生產的電能無法在短時間
內打平，我們試著加入不同規格的太陽能板
加以比較，其加消耗性成本之圖表，來探討
設備上成本的關係，消耗成本為蓄電池，以
一最低限的一年壽命估算： 
0
10000
20000
30000
40000
50000
1 2 3 4 5 6 7 8 9 10時間/年
成
本 50w 100w 200w 500w 1000w 消耗成本
 
圖 11 太陽能與消耗成本關係 
由圖我們可以看出來，太陽能輸出的功
率越大，能越快的將消耗成本所打平並慢慢
回收建置成本，所以若產生電能如果能大過
消耗成本，這樣在實作上，的確是有提高了
實作性。 
  為何不討論基本建置成本？因為在章
節 2 有提到，市電與再生能源併聯技術之建
置價格較其他再生能技術類型昂貴許多，所
以他所能回收的成本是很緩慢的，需要要好
幾年以上。 
表 2 再生能源設備成本比較 
發電規格 基本建置成本 
50W NT 15000 
100W NT 23680 
200W NT 35680 
500W NT 約 10 萬 
1000W NT 約 20 萬 
 
6.2 實作概況 
目前系統建置以單一路口設施配備為
主，配置方式與圖 4相同，可分為硬體與軟
體部份。 
 硬體平台 
主控制模組：主控模組還是與交控模
組所使用的控制平台為同一個，威盛
公司開發之 EPIA 嵌入式單板，做為主
要做為電源控制器。市電與再生能源
連接轉換裝置使用綠色能量公司生產
EPRC-G-110V 市電&直流電轉換控制
裝置，做為接收再生能源與市電轉換
控制裝置。 
 軟體平台 
控制中心建置上，代理人的執行環境
還是 JADE[6]作為主要的執行環境，主
要也是配合交控系統所使用介面與控
制上一致性與整合。在代理人控制流
程上，目前主要先分為三種控制流
程，最為節能評估的基楚。 
10 
 
Sustainable Energy Technologies, 2008. 
ICSET 2008. IEEE International 
Conference on24-27 Nov. 2008 
Page(s):46 – 50 
[3] 洪國書、林志敏、方郭洺、林良泰、楊
豐瑞，「以嵌入式系統與軟體代理人支
援整合式交通號誌控制裝置之研究」，
2008 Symposium on Digital Life 
Technologies , 1 , 2008-06. Tainan.。 
[4] 黃嘉輝，「8051 單晶片原理與應用使用
C語言」，民國 98 年 2 月。 
[5] 交通部科技顧問室，「符合 NTCIP 的無
線寬頻 ATMS 交控示範系統(一)」，民國
94 年、95 年 3 月。 
[6] Java Agent Development Framework, 
http://jade.tilab.com/ 
[7] 經 濟 部 太 陽 光 電 示 範 資 訊 網
http://210.69.121.54/moea/Docs/index.ht
ml 
[8] 冠 宇 宙 有 限 公 司 ，
http://www.uniergy.com.tw/frame-home.
htm 
[9] 鍾翼能，林漢年，「臺灣地區推廣太陽
能發電系統之研究」，大葉大學電機工
程學系碩士論文，民國 92 年 6 月。 
[10] 交通部，智慧型交通資料蒐集、處理傳
播與旅行者行為系列之研究-號誌化道
路路況資訊偵測方法與格式訂定，民國
92 年 11 月。 
[11] 交通部運輸研究所，先進車量偵測技術
測試評估作業程序研擬及驗證之研
究，民國 91 年 3 月。 
[12] 台灣赫立訊科技科技股份有限公司, 
URL: http://www.wirelessplug.com/ 
F_index.asp 
[13] 奈米龍科技股份有限公司, URL: 
http://www.luckypowertech.com/SunPow
er.aspx 
[14] 台灣電力公司，台北公館試驗所大樓
20kWp 太陽能光電示範系統規劃及設
置計畫完成報告，民國 90 年 12 月。 
[15] 「台灣燃料電池產業發展策略之研
究」，台灣經濟研究院，民國 90 年 11
月。 
[16] 黃啟倫，「燃料電池與鉛酸電池混合式
電源轉換器之研製」，雲林科技大學電
機工程系碩士論文，民國 95 年 6 月。 
[17] 邱清泉，「臺灣地區推廣太陽能發電系
統之研究」，大葉大學電機工程系碩士
論文，民國 92 年 6 月。 
[18] 林顯宗，「小容量風力發電機的研製」，
逢甲大學電機工程學系碩士論文，民國
91 年 6 月。 
[19] S. Thomas and M. Zalbowitz, “Fuel 
Cells-Green Power,” Los Alamos 
National Laboratory (LA-UR-99-3231), 
November 1999. 
[20] 白玉良，太陽能光電池技術資料，碩升
股份有限公司。 
[21] 袁成明、黃慶連、林清一，小型光伏電
池之研究(85 年 6 月)。 
[22] 吳財福、張健軒、陳裕愷，太陽能供電
與照明系統綜論，全華科技圖書公司。 
[23] 莊嘉探，太陽能工程(太陽能電池篇)，
全華科技圖書公司。 
[24] Nicholas p. Cheremisionff, Fundamentals 
of Wind Energy, Ann ArborScience, 
1979. 
[25] 「台灣燃料電池產業發展策略之研
究」，台灣經濟研究院，民國 90 年 11
月。 
[26] 中華交通號誌協會，電腦化交通號誌控
制器規格之研訂(二)，民國 90 年 2 月。 
[27] 黃世中，「市電並聯電力轉換系統之數
位控制器的研製」，雲林科技大學電機
工程系碩士論文，民國八十九年六月。 
[28] 吳財福、張健軒、陳裕愷，太陽能供電
與照明系統綜論，全華科技圖書公司。 
[29] 林良泰，幹道與網路號誌時制設計，93
年度交通工程人才培訓課程，民國 93
年 9 月。 
[30] 吳峰羽，“以太陽光電能與市電為電源
之多輸入電力轉換器研製＂，國立中正
大學電機研究所碩士論文，民國 91 年。 
[31] 林聖賢，「市電併聯型太陽能與風能發
電系統研製」，中正大學電機工程所碩
士論文，民國 91 年。 
 Advenced Data Hiding And Coding Techniques For Audio Signals  
 Intelligent Vidio Proceessing 
 Joint Source Channel Coding And Applications  
 Biometrics - From Sensors to Standardization  
 Intellighent Watermark Hiding and Digital Image Processing  
 Intelligent Watermarking Techniques, Image Authentication and Visual Cryptography  
 Steganography and Watermarking  
 Peer-to-Peer Multimedia Networking and Applications  
 Network Security  
 Event Analysis in Videos  
 Intelligent Signal and Image Processing  
 Multi-View Image Processing  
 Image Feature Extraction, Compression and Watermarking   
 
等議程及方向。由於這個會議的前瞻性與重要性，非常多的論文投稿，今年的 COOL Chips XI 
2008 一般論文共有接近 250 餘篇論文投稿，但僅有 120 篇一般論文獲得接受與發表，接受率
僅 50％，是一個相當高水準的國際會議。  
 
二、與會心得：  
 
在此次會議場上，除了幾個電腦發展的先進國家，如美國、英國、香港，韓國，大陸，日本、
加拿大、與歐洲各國外，中華民國在此次會議中也有相當多篇論文的發表，例如逢甲大學資
工系林志敏教授，張真誠教授，國立成功大學楊中平教授，國立中山大學，國立高雄應用科
技大學，朝陽科技大學，樹德科技大學，國立高雄第一科技大學等。由此可見，國內除了電
腦電子工業的進步外，在資訊隱藏與多媒體訊號處理科技研究的方面其實也可謂與世界各國
齊名。 
本人在軟體整合，嵌入式系統，高速乘法器設計方面的研究已有多年，此次參與會議與本人
實驗室的研究團隊共同發表了一篇論文﹐" Software Integration for Applications with 
Audio Stream "﹐會中見到了許多資訊隱藏與多媒體訊號處理研究領域的先進學者，配合嵌
入式系統與網際網路的快速發展，將來如果能以快速有效的方法來開發更多多媒體應用軟
體，將有利於國內的經濟發展與資訊產業的茁壯。  
 
三、建議  
 
目前國內的資訊業正蓬勃發展中，尤其重點放在資訊硬體相關的產業，由於硬體業的發展只
能跟在國際大廠，如 IBM，日本 NEC 等的腳步之後，為他們作 OEM 或 ODM 來獲得比較辛苦的
利益。其實以國人目前的人力素質以及聰明才智，應該更可以在資訊隱藏與多媒體訊號處理
以及其在嵌入式系統，網際網路科技的創作與發展方面有很大的發揮空間。我們也許不能立
即與歐美大廠，如 IBM，FUJISU，SONY，競爭市場，但是對於相關的關鍵應用及周邊產業，
尤其從資訊隱藏與多媒體訊號處理以及嵌入式系統科技所帶來的商機以及教育領域等在地化
或華文相關的研究應是我們發展應用相關資電訊科技的起點。  
Software Integration for Applications with Audio Stream 
Jim-Min Lin, Wen-Gung Cheng, and Guo-Ming Fang 
Department of Information Engineering and Computer Science 
Feng Chia University, Taichung City, Taiwan 
jimmy@fcu.edu.tw 
Abstract 
Developing software systems by integrating the 
existing applications becomes mature and practical. 
Our previous works have successfully achieved the 
goal of intercepting/redirecting the data in the form of 
files and characters by adopting the wrapper 
technique. However, there are a huge number of 
multimedia applications today. In order to glue the 
multimedia based software applications, we try to 
build a wrapper module that redirects the audio data 
as the proposed approach in this paper. A Linux driver 
example that uses the ALSA library and a speech 
control system by integrating Skype and SphinxIII is 
also given to demonstrate our approach.  
1. Introduction 
Software projects consisting of existing software 
components received increasing interest in 
Component-Based Software Engineering (CBSE) [1-4]. 
One important intention of component-based 
development is that software developers can rapidly 
develop new software systems by reusing existing 
software components. Recently, studies [5-10] 
increasingly propose approaches to build software 
systems from Commercial Off-The-Shelf (COTS) [11] 
software applications because COTS products were 
well tested by customers and give higher reliability and 
correctness. 
There have been a huge number of commercial 
software applications manufactured for MS-Windows 
operating systems. These software applications provide 
diverse and high-level functionality. However, there 
still exist several natural problems and pitfalls raised 
from COTS-based software development. Most of MS-
Windows applications are commercial software 
products distributed over the markets. The source of 
software tools is seldom available from vendors. Thus, 
most MS-Windows applications are regarded as black-
box applications. This characteristic incurs the 
difficulty and complexity of reusing MS-Windows 
applications in a new software system. 
For integrating MS-Windows COTS applications 
into software systems, our previous works [12-14] 
have presented a component wrapping approach. It 
uses I/O interception/redirection technique to adapt the 
GUIs of a MS-Windows application into 
programmable interfaces through message queue and 
clipboard space techniques. However, the approach 
can handle only input/output data in forms of files and 
character strings. Stream-based inputs/outputs, such as 
video/audio streams, are not able to be dealt with. 
Therefore, the previously proposed wrapper approach 
can not support the integration of multimedia COTS 
applications. 
An approach will be proposed in this paper to focus 
on integrating stream-based COTS multimedia 
software applications. In order to successfully integrate 
stream-based applications, some issues must be 
considered. The input and output data for a multimedia 
application may be video or audio stream. In order to 
connect stream data between two multimedia 
applications, building a virtual device is adopted as the 
method. Moreover, the data stream synchronization is 
a critical issue for this research.  
The rest of this paper is organized as follows: we 
briefly describe our previous works in Section 2. A 
stream-based software integration approach is 
explained in Section 3. In Section 4, a case study is 
given as an example. Finally, this study is concluded in 
Section 5. 
2. Software integration through wrapper 
The wrapping approach was proposed in many 
previous works to achieve software integration. To 
integrate a Windows application into a software system, 
the Windows applications are firstly encapsulated by a 
wrapper program. The wrapper hides the operation 
International Conference on Intelligent Information Hiding and Multimedia Signal Processing
978-0-7695-3278-3/08 $25.00 © 2008 IEEE
DOI 10.1109/IIH-MSP.2008.235
1126
function instead of a physical device when applications 
export the audio data. Therefore, an application can 
redirect its output audio stream to other applications in 
which input channels are bound to the wrapper module. 
The playback and capture functions in a wrapper 
module provide the interface to export/receive audio 
data to/from applications. To redirect the audio data 
from an application to another application, the wrapper 
module should be responsible for storing the audio 
data in a buffer space and synchronizing buffer 
read/write. 
To synchronize the access to the buffer spaces 
between playback and capture functions, we adopt the 
spinlock scheme to deal with the coordination issue. It 
should be noted that, the ALSA sound modules use the 
interrupt_handle() function to process interrupts, 
deadlocks may occur when an interrupt requests to 
lock a DMA buffer but this buffer has already locked 
by others. To overcome this problem, we use two 
functions - spinlock_irq() and spinunlock_irq(), to do 
locking/unlocking and interrupt disable/enable 
interrupt at the same time. 
4. An example 
To demonstrate the feasibility of the proposed 
approach, we develop a Voice Flight Status 
Information System (VFSIS) (See Figure 4) in which 
two audio media applications, Skype and ShinxIII [16], 
are integrated. Skype is a very popular Internet phone 
software package and ShinxIII is a freeware for speech 
recognition in Linux. The VFSIS is composed of a 
database server and multiple clients distributed on the 
Internet. Users on  client sites can call to the server site 
through the Skype and then say commands to this 
remote server. The remote server consists of Skype 
and ShinxIII. On receiving client’s voice command, 
Skype will forward the audio stream to ShinxIII for 
speech recognition and translation into the 
corresponding text command string. The required 
scheduled flight information is then retrieved from the 
flight status database by inputting the text command 
strings to the flight status database.  Finally, the 
retrieved information will be translated into voice 
signal (audio data stream) by a Text-to-Speech (TTS) 
module and then return the voice to the client through 
the Skype. 
Figure 5 shows a program slice for activating 
SphinxIII to recognize the speech command. The 
function ioctl() is used to get the “\n” (new line) 
character to start/stop the speech recognition process 
because SphinxIII can be started/stopped just by 
pressing a <CR> key. In the sample code, the 
execution interval between the starting and stopping of 
SphinxIII is set to 5 seconds. SphinxIII won’t output 
the results of speech recognition until it stops 
execution. 
Skype
remote users 
wrapper module
Sphinx 
recognition results
command 
analysis and 
information 
inquiry 
information aplay 
audio stream
file 
Speech recognition 
Speech 
report 
Figure 4. The system structure of VFSIS 
Figure 5. Controlling SphinxIII to recognize 
speech 
The second part (see Figure 6) of the server site is 
for the command word analysis and information 
inquiry. The result of speech recognition will be sent to 
a MySQL database for looking up the desired flight 
information, such as Airlines and Flight Code, 
Scheduled Arrival Time, Actual Arrival Time, 
Assigned Gate, and Delay Status. The server side 
VFSIS GUI is shown in Figure 7. 
recognition results
flight number Schedule/Actual Time, Airlines, Gate … 
…
…
database 
Figure 6. Command word analysis and 
information inquiry 
The VFSIS server will trigger the database system 
to inquire the information about the requested flight 
code.  
The last part of VFSIS is to report result information in 
speech. This functionality could be implemented either 
by using a COTS (Commercial Off-The Shelf) audio 
player which plays the specified speech wave files or 
just through a COTS TTS application to transform the 
1128
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 97-2221-E-035-076 
計畫名稱 機動式智慧型交通控制系統之研究 – 整合嵌入式系統與軟體代理人及再生能源支援機動式智慧型交通控制器之研究 
出國人員姓名 
服務機關及職稱 
逢甲大學資訊工程學系 林志敏 教授 
會議時間地點 2009 年 4 月 1 日～2009 年 4 月 3 日於越南寬濱省東海市（Dong Hoi, Quang Binh Province）寬濱大學（Kuang Binh University）舉行 
會議名稱 2009 亞洲智慧型資訊與資料庫系統研討會（2009 First Asian Conference on Intelligent Information and Database Systems, ACIIDS） 
發表論文題目 An Agent-Based Workflow System for Assisting in IC Design       
 
 
一、參加會議經過： 
2009年ACIIDS亞洲智慧型資訊與資料庫系統研討會（2009 First Asian Conference on 
Intelligent Information and Database Systems）首度於今年在越南寬濱省東海市（Dong Hoi, 
Quang Binh Province）的寬濱大學（Kuang Binh University）所舉辦的，從4月1日 至 3
日，一共為期三天。此國際會議是由 IEEE Computer Society與越南寬濱大學，波蘭 Wroctaw
大學所共同舉辦，是在以探討未來以網路為基礎的生活習慣下，智慧型資訊系統（Intelligent 
Information System）與資料庫系統的理論，技術，與實務，以及其在各資訊系統領域之應
用，為亞洲的重要國際學術會議，同時獲得國際學刊International Journal of Intelligent 
Information and Database Systems (IJIIDS)為其發行會議論文集專刊。今年的ACIIDS會議
一共有來自亞洲及歐洲將近十餘國家的八十餘位的專家參加大會。會議中除了論文的發表之
外，更邀請了多位國際傑出學者前來作智慧型資訊與資料庫系統未來發展方向的小型課程
（Tutorial），講題包括： 
 
Intelligent Distributed Intrusion Detection Systems of Computer Communication 
Systems (by Dr. Adam Grzech)，On Scheduling Problems with an Intelligent Use of the 
Learning Effect, By Prof. Radosław Rudek,)，Engineering Open, Adaptive and Distributed 
Systems with Agents, by Prof. Tzung-Pei Hong)等。 
 
在論文發表方面，今年ACIIDS2009的重點包含非常廣泛﹐議題有現今最熱門的智慧型資訊與
資料庫系統技術與應用的相關理論與技術﹐以及其他軟體代理人，資料庫運算的新方法 – 包
括： 
 
Artificial Intelligence, Artificial Social Systems, Automation Systems and Control, 
體業的發展只能跟在國際大廠，如 IBM，日本 NEC 等的腳步之後，為他們作 OEM 或 ODM 來獲
得比較辛苦的利益。其實以國人目前的人力素質以及聰明才智，應該更可以在資訊軟體的創
作與發展方面有很大的發揮空間。我們也許不能與微軟 MICROSOFT 競爭作業系統類的軟體，
但是對於應用軟體，尤其從 INTERNET 以及 Software Agent 所帶來的商機以及教育領域等在
地化或華文相關的研究應是我們發展應用軟體的起點。 
 
四、攜回資料名稱與內容：  
 
ACIIDS 2009 CD 論文集一冊。 
 
 
use the proposed scripting language and agents to handle the 
system workflow for users, an interaction model may be 
presented to describe the execution environment. Figure 1 
shows the agent interaction model. 
 
 
Figure 1.  Agent Interaction Model 
There are five kinds of agents in this model. They can be 
used to handle the workflows for assisting in IC design. 
Repository agent is a public agent. It stores the global data, 
sharing file and synchronization variables, which could be 
used to support the cooperation among agents. Directory 
Facilitator in a multi-agent system is usually used to provide 
the yellow page service. It records the information about the 
services provided by other agents. The Dispatcher is the 
agent that directly interacts with the IC Designer. It may get 
a script from the user. According to the script, the dispatcher 
creates needed task agents and delegates their own workflow 
to them. The global data and synchronization variables in a 
script are also declared to the Repository Agent by the 
dispatcher. A Task Agent is a mobile agent executing the 
workflow which tasks are defined in the script. In order to 
migrate around the network to request services, task agents 
may query the directory facilitator about needed service 
information. A Service Agent can provide services to other 
agents. In order to publish managed services, it registers the 
services’ information to directory facilitator. 
To control agent workflows, the script describes the 
workflow tasks of task agents. It involves the service access, 
flow control, data exchanging and synchronization among 
agents. The defined scripting syntaxes are explained in 
follows. 
B. Syntaxes forTtask Allocation 
The proposed script is major to describe the agent tasks 
for accessing the services provided by EDA tools. Therefore, 
the basic syntaxes in the script are used to identify the 
necessary task agent and specify the desired services. 
Referring to the task list, a task agent can automatically 
access the required services for handling the IC design 
procedure.  
Because all tasks may be assigned to separate task agents 
for parallel execution, the agents must be defined by using 
“tagent” statements before their tasks are described. The 
statement defines an agent with an agent name, and an agent 
block belonging to the agent. The workflow tasks of the 
agent are described in the block. After all agents are defined, 
a “start” statement can be used to start the workflow. When 
all tasks are finished or a task failure occurs, a task agent 
could use a “kill” statement to end its lifecycle. 
During a task agent accesses a service provided by a 
service agent, the service input and output may be included 
in the agent communication messages or additional files. A 
“dotask” statement is used to specify a desired service and 
describe the input/output data and files of the service. In a 
script, variables could be declared to save data. A “defdata” 
statement can be used to define a local data variable. The 
local data variable is usually declared by using the statement 
in an agent block for exchanging data between tasks of an 
agent. The output of previous service invocation can be the 
input to next service invocation.  
Moreover, to control the lifecycle of task agents and the 
access time of services, some time limits are also described 
in script. Because a task agent may travel around network 
hosts to access services, the life time of a task agent could be 
indicated in the “-ttl” (time to life) parameter of a tagent 
statement. When requesting a service, a task agent could wait 
for a timeout to limit the service response time. If the service 
is not finished in time, the task is judged a failure. The “–
time” parameter of a dotask statement can be used to specify 
the timeout value. 
C. Syntaxes for Information-Sharing 
In a multi-agent system, agents may share information 
for cooperating with each other. In the proposed scripting 
approach, the sharing information can be data string or file 
resource. A data string is the computing result or response of 
a service invocation. For IC design, this could be the notify 
message in the EDA tools. The file resource could be the 
VHDL source code or report files. 
The sharing information can be put on the sharing space 
maintained by the repository agent. In a multi-agent system, 
blackboard mechanism is one method used to support agent 
communication. The “defdata” statement can also be used to 
define global data. The global data is defined out of all agent 
blocks for exchanging data between task agents. The global 
data will be saved on the repository agent automatically. The 
file resource can also be stored on the sharing space. The 
“fput” and “fget” statements are used to store and retrieve 
files from the repository agent with specifying a identify tag.  
With the information sharing mechanism, the data flows 
of the separate task agents handling an IC design procedure 
can be combined. 
D. Syntaxes for Conditional Control 
For a task agent, the execution flow of agent tasks could 
be control by conditional statements. Therefore, an agent 
may decide the follow-up tasks according to the indicated 
conditions. This can also be used to handle some exception 
during task execution.  
The execution path will be determined by the “if” 
statement with string matching. The response or result of a 
service invocation can be used to compare with a specified 
string. If the data is equal to the specified string, the 
statements in the “then” block will be performed. Otherwise, 
the statements in the “else” block will be performed.  
3582
for supporting agent naming, communication and migration. 
Figure 3 shows the deployment of agents and services. 
 
JADE main container
JADE DF 
agent
Repository 
agent
JADE agent container
TA01Dispatcher
TA02
JADE agent container
Service
agent 2 Simulation 2
ModelSim
JADE agent container
Service
agent 1 Simulation 1
ModelSim
Network
JADE agent container
Service
agent 3
Synthesis, 
Place&Route
Xilinx ISE
 
Figure 3.  Deployment of Agents and Services 
In Figure 3, these services run on separate computers. 
Because the place & route processing has higher time cost, 
the Xilinx ISE tools may need to perform on the computer 
with better system performance. Besides, a FPGA system 
design may involve several IC components. These 
components can be simulated concurrently. Therefore, two 
service agents are deployed to provide the service of function 
simulation.  
The following sections will explain how to encapsulate 
the EDA tools by using the wrapping approach. 
A. Wrapping ModelSim for Constructing Function 
Simulation Service 
The Mentor Graphic ModelSim can be used to perform 
the function simulation for VHDL codes. It can simulate the 
input signals of an IC component and verify its output 
signals. This step needs to compile and simulate the VHDL 
codes. In ModelSim, the transcript window can be used to 
input commands for performing the processing. User can use 
the “vcom” and “vsim” commands to compile and simulate 
VHDL codes respectively. The wrapper program can be used 
to input these commands by using keyboard events and MS-
Windows clipboard space.  
Because the function simulation may need a mount of 
test data, a VHDL test bench, test input and desired output 
should be provided to the implemented Simulation service. 
The test input and output are provided from files through the 
“textio” mechanism of ModelSim. After the function 
simulation has finished, we can get the text message in the 
transcript window to check whether the simulation of VHDL 
codes is success. 
B. Wrapping Xilinx XST for Constructing Synthesis 
Service 
The Xilinx XST (Xilinx Synthesis Technology) is the 
tool included in the Xilinx ISE (Integrated Software 
Environment) design suite to allow the synthesis of a HDL 
design. The synthesizer tool can translate RTL (Register 
Transfer Level) VHDL codes to gate-level design. 
The operations in this step are almost automatic. Only 
some timing constraints about the IC components need to be 
inputted. In the tool, the user constraints can be edited in text 
manner. The text type of constraints can be saved in a text 
file in advance, and then be inputted by the wrapper program 
through the clipboard space.  
C. Wrapping Xilinx ISE for Constructing Place & Route 
Service 
The Xilinx ISE tool can perform the place and route of 
the specified gate level component after synthesis. The 
Place&Route service only needs to specify the effort level of 
the processing. The effort level property can be set by using 
keyboard and mouse events. The report of place & route is in 
the form of text. It can be gotten by using the clipboard 
space. 
D. Example Script 
In order to show the usage of the proposed scripts, we 
give an example script in the follows. 
 
defsync IC1_sync 
tagent TA01 
{ 
defdata IC1_sim 
bring IC1.vhd,tb1.vhd,td1.dat,tr1.dat 
dotask Simulation1 -cont 'vhdl:IC1.vhd bench: tb1.vhd 
in:td1.dat out:tr1.dat' -resp $(IC1_sim) -fin IC1.vhd, 
tb1.vhd, td1.dat, tr1.dat 
if IC1_sim equ 'verify ok' then 
fput IC1.vhd -tag IC1_VHDL -sync $(IC1_sync) 
else 
error $(IC1_sim) 
fi 
kill 
} 
tagent TA02 
{ 
defdata IC2_sim 
bring IC2.vhd,tb2.vhd,td2.dat,tr2.dat,IC3.vhd, tc.txt 
dotask Simulation2 -cont 'vhdl:IC2.vhd,bench: tb2.vhd, 
in:td2.dat,out:tr2.dat' -resp $(IC2_sim) -fin IC2.vhd, 
tb2.vhd, td2.dat,tr2.dat 
if IC2_sim equ ‘verify ok’ then 
joint $(IC1_sync) 
else 
error $(IC2_sim) 
kill 
fi 
fget IC1_VHDL -file IC1.vhd 
dotask Synthesis -cont 'vhdl:IC1.vhd,IC2.vhd, IC3.vhd 
constraint:tc.txt' -fin IC1.vhd,IC2.vhd, IC3.vhd,tc.txt 
dotask Place&Route -cont 'vhdl:IC1.vhd,IC2.vhd, 
IC3.vhd constraint:tc.txt effort:Standard report:rpt.txt' -
fin IC1.vhd, IC2.vhd,IC3.vhd,tc.txt -fout rpt.txt 
dotask Home -cont 'file:rpt.txt' -fin rpt.txt 
kill 
} 
start TA01,TA02 
 
36054
