2 IEEE COMMUNICATIONS LETTERS, ACCEPTED FOR PUBLICATION
optimal with 𝐼 = 2. Since this algorithm checks if the optimal
path is found at the end of every iteration, it may stop before
WAVA reaches the maximum iteration. Therefore, although its
maximum complexity is 𝐼 VA trials, its average complexity is
lower.
Equation (1) clearly shows that if 𝒓 circularly shifts left
by 𝑛ℓ positions, where 0 ≤ ℓ ≤ 𝐿 − 1, and is used as
the input of an ML decoding algorithm, the decoding output
becomes 𝒖′ = (𝑢𝑛ℓ, 𝑢𝑛ℓ+1, . . . , 𝑢𝑁−1, 𝑢0, 𝑢1, . . . , 𝑢𝑛ℓ−1). In
other words, the ML tailbiting path circularly shifts left by ℓ
levels [3]. This may produce a value of ℓ such that the WAVA
can find the optimal solution at the first iteration. By defining
the reliability of received code bit 𝑗 as ∣𝜙𝑗 ∣, the value of ℓ is
chosen by [5]
ℓ = argmax
ℓ
𝑅ℓ, (2)
where
𝑅ℓ ≜
𝑛ℓ+𝑛𝑚−1∑
𝑗=𝑛ℓ
∣𝜙𝑗 ∣.
This is a heuristic choice. Although this choice reduces the
complexity of the WAVA, it is necessary to consider constant
complexity of finding ℓ. Decoding each received codeword
requires the constant complexity, which is significant at a high
signal-to-noise (SNR) ratio.
III. NEW TBCC DECODING ALGORITHM
The optimal value of ℓ is the one that finds the optimal path
in the first iteration of WAVA. That is, one VA trial should
be enough to determine the optimal initial decoding position.
Note that the optimal position may not be unique or may not
exist. Instead of using the heuristical approach, the proposed
decoding algorithm finds the optimal position by an exhaustive
search. In other words, the starting position for the first VA
trial of WAVA varies level by level until the optimal path
is found. When the decoding algorithm obtains the optimal
path, it finds the optimal position. However, the maximum
complexity of the exhaustive search equals 𝐿 VA trials, which
is too high to implement.
Instead of repeatedly applying the first VA trial of WAVA
to the received codeword, the proposed algorithm employs the
result of the VA with ℓ = 0 to find the optimal initial position.
That is, if the algorithm does not find the optimal path after the
VA, for every state at the 𝐿th level it subtracts the metric of the
first level of its corresponding path from the state metric for
that path. For example, let 𝒘(𝑖) = (𝑤(𝑖)0 , 𝑤
(𝑖)
1 , . . . , 𝑤
(𝑖)
𝑁−1) ∈ ˜
be the corresponding path of the 𝑖th state at the 𝐿th level. The
metric of the state, 𝑚(𝑖), is then
𝑚(𝑖) =
𝑁−1∑
𝑗=0
(𝑤
(𝑖)
𝑗 ⊕ 𝑦𝑗)∣𝜙𝑗 ∣.
After substraction, the metric becomes
𝑚(𝑖) =
𝑁−1∑
𝑗=𝑛
(𝑤
(𝑖)
𝑗 ⊕ 𝑦𝑗)∣𝜙𝑗 ∣.
The algorithm then uses the metrics at the 𝐿th level as the
initial metrics and applies the VA to one more level using
(𝑟0, 𝑟1) as the received code bits. The condition for the optimal
Fig. 1. Illustration for proposed algorithm
path is checked again. The aforementioned process, illustrated
in Fig. 1 for a rate 1/2 code, is repeated until the optimal
condition is satisfied.
Therefore, this study proposes a new decoding algorithm
for TBCCs as follows.
Step 1. Initialize the metrics of all states at the zeroth level to
zero. Set the starting level ℓ = 0 and the final level ℓ′ =
𝐿. Extend the received vector to (𝑟0, 𝑟1, . . ., 𝑟𝑁−1, 𝑟0,
𝑟1, . . ., 𝑟𝑁−1). Define 𝑚(𝑖) as the metric of state 𝑖 at
level ℓ′ and 𝜇(𝑖) as the increased metric of the survivor
path of state 𝑖 from level ℓ to ℓ+ 1.
Step 2. Apply the VA to the extended vector from level ℓ to ℓ′.
Step 3. If the best path at level ℓ′ is a tailbiting path from level ℓ
to ℓ′, then go to Step 6. Otherwise, for 𝑖 = 0, 1, . . . , 𝑆−
1, 𝑚(𝑖) = 𝑚(𝑖) − 𝜇(𝑖).
Step 4. Perform the VA from level ℓ′ to ℓ′ + 1 with the initial
metrics 𝑚(𝑖).
Step 5. ℓ = ℓ+ 1 and ℓ′ = ℓ′ + 1. If ℓ′ < 2𝐿, go to 3.
Step 6. Output the information bits corresponding to the best
path.
Step 1 establishes a window with a width of 𝐿 + 1 levels,
i.e., from level ℓ = 0 to ℓ′ = 𝐿. The window slides one level
right in each iteration from Step 3 to Step 5. In addition to 2𝑆
addition and 𝑆 comparison operations for the Viterbi update
in Step 4, 𝑆 addition and 𝑆 − 1 comparison operations are
required for the tailbiting-path check in Step 3. All survivor
paths fall within the window. Since the size of the extended
vector is 2𝑁 = 2𝑛𝐿, the final level cannot be greater than
2𝐿. If the final level is 2𝐿, the iteration must end and the
path with the minimum metric is the output of the algorithm
even if it may not be a tailbiting path, as implied by Steps 5
and 6. The output of the algorithm is not guaranteed to be
optimal, except that only one iteration is performed according
to [2]. Moreover, if no substraction is done in Step 3, the
proposed algorithm will be similar to the algorithm in [1],
whose performance is worse than WAVA [2].
IV. PERFORMANCE EVALUATION
The simulations in this section investigate the computational
load and the word error rate (WER) of the proposed decoding
algorithm over the additive white Gaussian noise (AWGN)
channel. Assume that the codeword is BPSK-modulated.
Hence, the received vector is
𝑟𝑗 = (−1)𝑣𝑗
√
𝐸𝑠 + 𝜆𝑗 ,
IE
EE
Pr
oo
f
IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY 1
Reliability-Based Adaptive Distributed Classification
in Wireless Sensor Networks
1
2
Hung-Ta Pai, Member, IEEE3
Abstract—In many wireless sensor networks, local sensors4
adopt binary decisions because they can be transmitted to a5
fusion center using very low power. However, if a binary decision6
is wrong, the probability of the fusion center making a wrong7
final decision is dramatically increased. This study proposes a8
reliability-based adaptive method to resolve this problem with9
little extra computation. Before a sensor makes a binary local10
decision, its observation must be evaluated. Unreliable ranges are11
set for this evaluation. If the sensor’s observation result does not12
fall within the unreliable range, the sensor makes a local decision.13
Otherwise, the sensor must make another observation. The op-14
timal unreliable ranges are then derived. This study applies the15
proposed method to an existing distributed classification scheme16
using the binary decision. Performance analysis shows that this17
approach efficiently reduces the misclassification probability at the18
fusion center. Simulation results show that the transmission power19
is reduced by 7.5 dB to achieve a misclassification probability of20
0.1 under some practical conditions.21
Index Terms—Adaptive algorithm, binary decision, distributed22
classification, reliability, wireless sensor networks (WSNs).23
I. INTRODUCTION24
W IRELESS sensor networks (WSNs) include many tiny25 low-cost battery-powered sensors in a small area [1],26
[2]. These sensors monitor environmental variations and then27
transmit observation results to a fusion center [3]–[7]. For28
example, seismic and acoustic data are collected by several sen-29
sors and then transmitted to a fusion node for joint processing to30
detect, classify, and/or track vehicles [6]. To lower the transmis-31
sion burden, the observation results are typically represented32
by a local decision made at each sensor. This local decision33
requires fewer bits than the observation result. For example,34
many distributed classification schemes adopt a binary deci-35
sion, which only needs 1 bit to represent the observation result36
[8]–[10]. However, the environmental variation caused by a37
phenomenon, e.g., a car, is usually interfered with random noise38
such that the observation result varies from time to time and39
from sensor to sensor. The 1-bit representation may not be cor-40
rect. The correct probability of the representation is dependent41
on the observation signal-to-noise ratio (OSNR). Particularly,42
the noise interference is very serious in a harsh environment,43
e.g., a battlefield, fireplace, or polluted area. Moreover, much44
Manuscript received September 28, 2009; revised May 15, 2010; accepted
August 10, 2010. This work was supported by the National Science Council of
the Republic of China, Taiwan, under Contract NSC 97-2221-E-305-001-MY2.
The review of this paper was coordinated by Dr. T. Taleb.
The author is with the Graduate Institute of Communication Engineer-
ing, National Taipei University, Sanhsia 23741, Taiwan (e-mail: htpai@mail.
ntpu.edu.tw).
Digital Object Identifier 10.1109/TVT.2010.2068319
information is lost using 1-bit representation. The fusion center, 45
which makes a final decision based on received local decisions 46
rather than actual observation results, is therefore much more 47
likely to falsely classify environmental phenomena. That is, 48
when a sensor makes a wrong decision, it significantly increases 49
the probability of misclassification at the fusion center. 50
A sequential detection algorithm for the sensor [11], instead 51
of the fusion center [12], [13], has been proposed to reduce 52
the probability of the sensor making an incorrect decision. The 53
sensor collects observations one by one until certain conditions 54
are satisfied and then makes a local decision based on these 55
observations. However, since this method only derives the 56
condition for binary observations and requires extra storage for 57
multiple observations, it is not a practical algorithm. 58
This study proposes a reliability-based adaptive reobserva- 59
tion method. First, unreliable ranges are derived for each sensor. 60
If the observation result of a sensor falls in this unreliable range, 61
the sensor must abandon it and make another observation. This 62
approach ensures the reliability of the final observation result. 63
Consequently, the local decision based on this result is also 64
reliable and the misclassification probability at the fusion center 65
is reduced significantly. In practice, although the number of 66
observations is limited, the reliability of the local decision can 67
still dramatically be improved. Since the unreliable range can 68
be combined with the decision rule and no extra storage is 69
required for numerous observation results, little extra cost is 70
needed for this adaptive reobservation meth d. 71
The proposed method can be applied to any distributed 72
classification scheme that uses binary local decision. This study 73
uses the distributed classification fusion using error-correcting 74
codes (DCFECC) proposed by Wang et al. [10] to demonstrate 75
the superiority of the proposed method, which is designed 76
to overcome unrecognized sensor faults and transmission er- 77
rors. The transmission error is unavoidable because of noisy 78
channels between the sensor and the fusion center. The error 79
probability is closely related to the channel signal-to-noise ratio 80
(CSNR). Performance analysis shows that the misclassification 81
probability is improved tenfold at OSNR = 5 dB. Moreover, 82
simulation results show that a 7.5-dB CSNR gain is obtained 83
at a misclassification probability of 0.1 when the OSNR, which 84
characterizes the noise interference of the observation, equals 85
5 dB, and the number of observations is limited to four. 86
Namely, the transmission power of the sensor can be reduced 87
to 10−(7.5/10) = (1/5.6) when the power of the channel noise 88
is fixed. 89
The remainder of this paper is organized as follows. 90
Section II briefly addresses the distributed detection problem in 91
WSNs and previous studies on this topic. Section III introduces 92
0018-9545/$26.00 © 2010 IEEE
IE
EE
Pr
oo
f
PAI: RELIABILITY-BASED ADAPTIVE DISTRIBUTED CLASSIFICATION IN WIRELESS SENSOR NETWORKS 3
Assumption 3: The jth received local decision vj only de-162
pends on the jth local decision uj .163
Equation (3) can then be rewritten as164
Pe =
∑
i,u,v−vj
∫
y
P (Hi)
[
P (vj=1|u)p(u|y)p(y|Hi)Cvj=1,ci
+ P (vj=0|u)p(u|y)p(y|Hi)Cvj=0,ci
]
dy (4)
where vj=bv = (v1, . . . , vj−1, bv, vj+1, . . . , vN ), bv ∈ {0, 1},165
and v − vj represents the elements of v, except vj . The local166
decision rule of each sensor should be derived to minimize167
the misclassification probability Pe in (4). Namely, the local168
decision uj of sensor j for a fixed observation yj should be169
determined according to all terms, except p(uj |yj), on the right-170
hand side of (4). Define171
Dj(T)=
∑
i,u−uj ,v−vj
∫
y−yj
p(Hi)p(v−vj |u−uj)
×p(u−uj |y−yj)p(y−yj |Hi)
×
{[
Cvj=0,ci
(
1−pj10
)
+Cvj=1,cip
j
10
]
−
[
Cvj=0,cip
j
01+Cvj=1,ci
(
1−pj01
)]}
dy−yj .
(5)
Notably, u− uj and y − yj represent the elements of u and y,172
except uj and yj , respectively, and P jbvbu = P (vj = bv|uj =173
bu), bv, bu ∈ {0, 1} describes the noisy transmission of local174
decision j. When bv = bu, P jbvbu indicates the error probability175
of the transmission between sensor j and the fusion center.176
Therefore, the local decision rule of sensor j can be specified by177
T (yj) =
∑
i
p(yj |Hi)Dj(T)
uj=1≥
<
uj=0
0 (6)
where T (yj) is defined as the threshold function. That is, if178
T (yj) ≥ 0 for a fixed observation yj of sensor j, the local179
decision uj of sensor j will be 1. Otherwise, uj equals 0. Since180
T (yj) is a continuous function, the local decision rule can181
be represented using a threshold set as in (1). For example,182
assume that Kj = 2. If T (2,1)j ≤ yj < T (2,2)j , then T (yj) ≥ 0.183
Otherwise, T (yj) < 0. As a result, the threshold set associated184
with sensor j is {T (2,1)j , T (2,2)j }. Moreover, (5) shows that the185
jth local decision rule depends on not only the code matrix T186
but also the value of p(u− uj |y − yj), which is derived from187
the local decision rules in other sensors. Wang et al. adopted a188
person-by-person optimization (PBPO) approach to determine189
all of the local decision rules [10].190
Distributed classification fusion using soft-decision decoding191
(DCSD) was later developed to improve the reliability of final192
decisions [20]. In this approach, the received local decision at193
the fusion center is represented as a real number instead of a bit.194
However, the observation results are highly noisy in a harsh en-195
vironment, and the local decisions based on these observations196
have a high error of probability. Representing the local decision197
with multiple bits does not improve the reliability of the local198
decision. In WSN applications [1], environmental variations199
could be transient or remain steady for an extended period.200
Employing more sensors is the only approach to increase ob- 201
servation reliability for a transient phenomenon. On the other 202
hand, Pai et al. proposed a 2-D coded classification scheme 203
that makes multiple observations of a steady phenomenon [21]. 204
The sensor makes a local decision for each observation. This 205
multiobservation scheme increases the reliability of the obser- 206
vation effectively but not efficiently, as some observation results 207
may be unreliable. These unreliable results waste transmission 208
power and may cause the fusion center to make a wrong 209
final decision. Later, an adaptive reobservation algorithm was 210
proposed to improve the reliability of the observation result 211
using linear combining techniques [22]. However, extra storage 212
and computation are needed for the combining. Moreover, this 213
algorithm is heuristic and only designed for the DCFECC. 214
III. ADAPTIVE REOBSERVATION MECHANISM 215
A. Proposed Mechanism 216
LetHj,0 andHj,1 be the sets of phenomena that the local de- 217
cision uj should be 0 and 1 at sensor j, respectively. According 218
to the local decision rule in (1), the error and correct decision 219
probabilities, i.e., P (e)j (Hi) and P
(c)
j (Hi), of sensor j given Hi 220
can be represented as 221
P
(e)
j (Hi) =
{
P (uj = 1|Hi), Hi ∈ Hj,0
P (uj = 0|Hi), Hi ∈ Hj,1 (7)
P
(c)
j (Hi) = 1− P (e)j (Hi)
=
{
P (uj = 1|Hi), Hi ∈ Hj,1
P (uj = 0|Hi), Hi ∈ Hj,0 (8)
respectively. From (1) and (7), P (e)j (Hi) can be computed as 222
P
(e)
j (Hi) =
⎧⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪⎩
∑
k=1,3,...,Kj−2
T
(Kj,k)
j ∫
T
(Kj,k+1)
j
p(yj |Hi)dyj
+
∞∫
T
(Kj,Kj)
j
p(yj |Hi)dyj , when Hi ∈ Hj,0
∑
k=3,5,...,Kj
T
(Kj,k)
j ∫
T
(Kj,k−1)
j
p(yj |Hi)dyj
+
T
(Kj,1)
j ∫
−∞
p(yj |Hi)dyj , when Hi ∈ Hj,1.
If P (e)j (Hi) is high, the local decision of sensor j is unreliable. 223
Sensor j thus wastes power in transmitting an unreliable local 224
decision. Accordingly, P (e)j (Hi) should be reduced. 225
When the observation result yj at sensor j is near the 226
threshold T (Kj ,k)j , the error decision probability is usually high 227
according to the distribution detection theory [19] and the 228
coding theory [23]. Thus, we can define an unreliable range as 229{
yj |T (Kj ,1)j − λj,1 ≤ yj ≤ T (Kj ,1)j + λj,1
}
⋃{
yj |T (Kj ,2)j − λj,2 ≤ yj ≤ T (Kj ,2)j + λj,2
}⋃
· · ·⋃{
yj |T (Kj ,Kj)j − λj,Kj ≤ yj ≤ T (Kj ,Kj)j + λj,Kj
}
IE
EE
Pr
oo
f
PAI: RELIABILITY-BASED ADAPTIVE DISTRIBUTED CLASSIFICATION IN WIRELESS SENSOR NETWORKS 5
Fig. 2. Threshold functions at the OSNR = 5 dB for (a) sensor 1 and
(b) sensor 6.
cluster of a WSN [24]. The cluster includes N = 10 sensors288
and a fusion center. All hypotheses are equally likely to occur.289
These hypotheses are assumed to have Gaussian-distributed290
probability density functions (pdfs) with the same standard291
deviation σ2 and means of 0, 1, 2, and 3, respectively. Table I292
serves as the code matrix. The OSNR at each sensor is defined293
as −10× log10 σ2. When the OSNR = 5 dB and the channel294
noise is zero, i.e., N0 = 0, the threshold functions, i.e., T (y1)295
and T (y6) in (6), of sensors 1 and 6 are illustrated in Fig. 2(a)296
and (b), respectively. The threshold functions of sensors 2–5 are297
similar to that of sensor 1. Consequently, sensors 1–5 have only298
one threshold, i.e., Kj = 1 for j = 1, 2, . . . , 5, and the local299
decision can be represented by300
uj =
{
0, yj > T
(1,1)
j
1, yj ≤ T (1,1)j
for j = 1, 2, . . . , 5. Assume that λj,1 = λj for j = 1, 2, . . . , 5.301
Similarly, the threshold functions of sensors 7–10 are similar to302
Fig. 3. Conditional pdfs of p(y|H1), p(y|H2), p(y|H3), and p(y|H4) and
unreliable ranges at the OSNR = 5 dB for (a) one threshold (sensors 1–5) and
(b) two thresholds (sensors 6–10).
that of sensor 6. Thus, sensors 6–10 have two thresholds, i.e., 303
Kj = 2 for j = 6, 7, . . . , 10, and then 304
uj =
{
0, yj < T
(2,1)
j or yj ≤ T (2,2)j
1, T (2,1)j ≤ yj < T (2,2)j
for j = 6, 7, . . . , 10. Fig. 2(b) shows that since the two thresh- 305
olds are symmetric, it is reasonable to let λj,1 = λj,2 = λj for 306
j = 6, 7, . . . , 10. As a result, we can numerically calculate the 307
optimal λj,opt such that P (e)j (D,Λj) is minimized. That is 308
λj,opt = argmax
λj
P
(e)
j (D,Λj).
Fig. 3 depicts the conditional pdfs of p(y|H1), p(y|H2), 309
p(y|H3), and p(y|H4) at the OSNR = 5 dB. This figure 310
IE
EE
Pr
oo
f
PAI: RELIABILITY-BASED ADAPTIVE DISTRIBUTED CLASSIFICATION IN WIRELESS SENSOR NETWORKS 7
Fig. 5. In the case of N = 10 sensors, D = 4, and the noise-free channel,
analytical results of the DCFECC with the proposed mechanism in the misclas-
sification probability are shown.
Consequently325
Pe =
∑
i,u
P (Hi)Cu,ci
10∏
j=1
P (uj |Hi).
Notably, (7) and (8) indicate that when the proposed mechanism326
is applied, P (uj |Hi) can be calculated by (9).327
Fig. 4(a) and (c) shows the average error decision probability328
at sensor j after applying the adaptive reobservation method.329
When the OSNR = 5 dB, the optimal λ(1) and λ(2) increases330
as more observations are allowed, i.e., D increases. This is not331
surprising because a larger D implies that a better observation332
can be achieved and a wider unreliable range is needed for333
a better observation. However, the average number of obser-334
vations at sensor j is also augmented, as Fig. 4(b) and (d)335
illustrates. When D = 4 and the OSNR = 5 dB, λ(1)opt = 0.63,336
and λ(2)opt = 0.58. Fig. 5 shows the misclassification probability337
at the fusion center. The misclassification probability, with λ(1)opt338
and λ(2)opt, is the lowest in all cases when the channel is noise-339
free. When the OSNR = 5 dB, the misclassification probabil-340
ity is approximately 0.007. On the other hand, the DCFECC341
(the case of λ(1) = λ(2) = 0) only achieves a misclassification342
probability of 0.07. That is, the proposed approach improves343
the misclassification probability tenfold.344
However, the average number of observations per sensor345
R(4,Λ) is the largest when λ(1) = λ(1)opt = 0.63 and λ(2) =346
λ
(2)
opt = 0.58, as Fig. 6(a) shows. If an active sensor is used in347
WSNs, the OSNR should be normalized by R(D,Λ) for a fair348
comparison. Namely349
OSNR = −10× log10 σ2 + 10× log10 R(D,Λ). (11)
Fig. 6(b) shows that the proposed mechanism with λ(1) =350
λ(2) = 0.4 has the best performance and outperforms the351
DCFECC by 1.8 dB at a misclassification probability of 0.01.352
Moreover, in this case, the average number of observations per353
sensor is less than 1.5, i.e., R(D,Λ) < 1.5.354
Fig. 6. In the case of N = 10 sensors, D = 4, and the noise-free channel,
analytical results of the DCFECC with the proposed mechanism in (a) the aver-
age number of observations per sensor and (b) the misclassification probability
are shown.
All WSN sensors should consume the same power to maxi- 355
mize the life of the network. Otherwise, some sensor with more 356
power consumption than others will run out of energy more 357
quickly, and then, the network with fewer sensors will not work 358
normally [25], [26]. Accordingly, if the power consumption for 359
the observation cannot be ignored (e.g., in active sensors), the 360
average numbers of observations at all sensors should be the 361
same. Fig. 7(a) shows that the relation between λ(1) and λ(2) 362
at different OSNRs when all sensors have the same average 363
number of observations. The relations at the OSNR = 3, 5, and 364
7 dB are close to each other. When λ(1) is set, λ(2) can be 365
found through the relation to assure that the average numbers of 366
observations of all sensors are approximate. Fig. 7(b) illustrates 367
the optimal value of λ(1) that minimizes the misclassification 368
probability. When the OSNR increases, the optimal value of 369
λ(1) decreases, i.e., the unreliable range is condensed. In the 370
case of OSNR = 5 dB and CSNR →∞, (0.79, 0.48) is the 371
optimal pair for (λ(1), λ(2)). 372
IE
EE
Pr
oo
f
PAI: RELIABILITY-BASED ADAPTIVE DISTRIBUTED CLASSIFICATION IN WIRELESS SENSOR NETWORKS 9
Fig. 9. In the case of D = 4 and CSNR = 10 dB, the misclassification
probability using different numbers of sensor nodes is shown.
Fig. 10. In the case of N = 10, D = 4, and OSNR = 5 dB, the mis-
classification probability versus packet error rate using (λ(1), λ(2)) = (0, 0)
(DCFECC) and (0.63, 0.58) is shown.
a PHENOM packet is received at sensor j, the sensor executes427
the proposed mechanism to make a local decision and then428
sends the decision to the fusion center using a UDP packet over429
802.11 MAC. Let the packet error rate vary from 0.25 to 0.01.430
Fig. 10 shows that the proposed mechanism still significantly431
outperforms the DCFECC.432
Finally, when the power consumption for the observation433
cannot be ignored, every sensor should make the same number434
of observations to extend the life of the WSN. The relation of435
λ(1) and λ(2) should be similar to that shown in Fig. 7(a). For a436
fair comparison among different combinations of (λ(1), λ(2)),437
the OSNR is normalized using (11). Fig. 11 shows that the438
adaptive reobservation mechanism with λ(1) = 0.4 and λ(2) =439
0.24 outperforms the DCFECC by approximately 1.7 dB at440
a misclassification probability of 0.01. Moreover, the per-441
formance of the mechanism is similar to the one using the442
linear combining for previous observations and the current443
observation, i.e., equal-gain combination (EGC) [22]. Notably,444
Fig. 11. In the case of N = 10 sensors, D = 4, CSNR = 10 dB, and the
same average number of observations at all sensors, the misclassification
probability using different pairs of λ(1) and λ(2) is shown.
the EGC needs more power and hardware than the proposed 445
mechanism because of the extra storage for the previous ob- 446
servation and the extra computation for the linear combining. 447
Furthermore, the extra computation requirement of the EGC 448
extends the observation duration. Since the persisting time of 449
the phenomenon is limited, the allowed maximum number of 450
observation D may decrease, and then, the performance of the 451
EGC may degrade. 452
V. CONCLUSION 453
This study presents an adaptive reobservation mechanism 454
to combat a noisy observation environment in WSNs. The 455
proposed mechanism can be combined with any existing dis- 456
tributed detection algorithm using binary local decision. Perfor- 457
mance analysis of the mechanism is provided. We then apply 458
the mechanism to the DCFECC. Simulation results show that 459
the adaptive reobservation mechanism can extend the life of the 460
WSN 5.6 times longer than the DCFECC under practical 461
conditions, in which the transmission power consumes the 462
most sensor power. On the other hand, when the observation 463
power cannot be ignored, the proposed mechanism outperforms 464
the DCFECC by approximately 1.7 dB at a misclassification 465
probability of 0.01, and fewer than 1.5 observations are required 466
for each sensor. In the future, we would like to implement the 467
proposed scheme in the real world. 468
REFERENCES 469
[1] I. F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci, “A survey 470
on sensor networks,” IEEE Commun. Mag., vol. 38, no. 8, pp. 102–114, 471
Aug. 2002. 472
[2] D. Culler, D. Estrin, and M. Srivastava, “Overview of sensor networks,” 473
Computer, vol. 37, no. 8, pp. 41–49, Aug. 2004. 474
[3] S. A. Aldosari and J. M. F. Moura, “Detection in decentralized 475
sensor networks,” in Proc. ICASSP, Montreal, QC, Canada, May 2004, 476
pp. 277–280. 477
[4] J.-F. Chamberland and V. V. Veeravalli, “Asymptotic results for decentral- 478
ized detection in power constrained wireless sensor networks,” IEEE J. 479
Sel. Areas Commun., vol. 22, no. 6, pp. 1007–1015, Aug. 2004. 480
[5] J. N. Tsitsiklis, “Decentralized detection by a large number of sensors,” 481
Math. Control Signals Syst., vol. 1, no. 2, pp. 167–182, 1988. 482
Time-slotted voting mechanism for fusion data assurance in wireless sensor
networks under stealthy attacks
Hung-Ta Pai a,*, Jing Deng b, Yunghsiang S. Han a
aGraduate Institute of Communication Engineering, National Taipei University, Taiwan
bDepartment of Computer Science, University of North Carolina at Greensboro, USA
a r t i c l e i n f o
Article history:
Received 21 July 2009
Received in revised form 19 January 2010
Accepted 18 April 2010
Available online 24 April 2010
Keywords:
Wireless sensor networks
Data fusion
Data aggregation
Information assurance
Stealthy attack
a b s t r a c t
In wireless sensor networks, data fusion is often performed in order to reduce the overall message trans-
mission from the sensors toward the base station. We investigate the problem of data fusion assurance in
multi-level data fusion or transmission in this paper. Different to a recent approach of direct voting where
the base station polls other nodes directly regarding to the received fusion result, we propose a scheme
that uses the time-slotted voting technique. In this scheme, each fusion node broadcasts its fusion data or
‘‘vote” during its randomly assigned time slot. Only the fusion result with enough number of votes will be
accepted. Thus, our scheme eliminates the polling process and eases the energy consumption burden on
the base station or the fusion data receiver, which could well be the intermediate nodes. Our analysis and
simulation results support our claim of superiority of the proposed scheme.
 2010 Elsevier B.V. All rights reserved.
1. Introduction
Wireless sensor networks (WSNs) comprisemany tiny, low-cost,
battery-powered sensors in an area of interest [1,2]. The sensors
detect environmental variations and then transmit the detection
results to a base station [3,4]. The detection results are usually pro-
cessed before they are transmitted to the base station, reducing the
overall transmission energy consumption. This process is called
data fusion [5–7] or data aggregation [8,9]. The sensor that collects
the detection results from other sensors and performs the data
fusion is a fusion node. The fusion data are then sent to the base sta-
tion through multiple hops or a direct link (i.e., one hop).
Although fusion signiﬁcantly lowers the trafﬁc between the
fusion node and the base station, the fusion node is more critical
and vulnerable to malicious attacks than regular sensors [10,11].
If a fusion node is compromised, then the base station cannot en-
sure the correctness of the collected fusion data. This problem of
fusion data assurance arises because the detection results are not
sent to the base station at all and the fusion result cannot be
veriﬁed. In WSNs with multi-level of data fusions or transmission,
this problem becomes more severe as the early fusion results are
fused multiple times before reaching the base station and the
intermediate fusion nodes may be compromised.
Several approaches have been proposed to address this attack in
WSNs with fusion results directly transmitted to the base station
[12–15]. Some of the approaches may be easily extended to a mul-
ti-hop version [13]. Some works will be described in detail in next
section. The scheme by Deng et al. [16] is speciﬁcally designed to
assure the fusion data received at the base station in the multi-
hop network. The method constructs multiple paths between the
fusion node and the base station. The base station obtains a copy
of the fusion result through each route and then compares all of
the received fusion results. However, as the potential number of
compromised nodes increases, the number of required paths
increases. Furthermore, transmitting several copies of the fusion
results toward the base station consumes a large mount of power.
Therefore, an efﬁcient method for fusion data assurance is needed.
This work proposes a time-slotted voting scheme combining the
concept of time division multiple access with direct voting mech-
anism proposed by Pai and Han [15]. In the direct voting mecha-
nism, the base station receives the fusion data from a randomly
chosen fusion node and then polls other sensor nodes, as wit-
nesses, for votes on the fusion data. The vote is exploited to verify
the correctness of the fusion data and the base station consumes
some extra power to verify the data fusion results. In WSNs with
multi-level of data fusion or transmission, however, the intermedi-
ate fusion nodes do not have such extra power to verify the
incoming fusion results. Therefore, the direct voting mechanism
will not work well in WSNs with multi-level of data fusions or
transmission. Instead, we propose to use a proactive veriﬁcation
0140-3664/$ - see front matter  2010 Elsevier B.V. All rights reserved.
doi:10.1016/j.comcom.2010.04.021
* Corresponding author. Tel.: +886 2 8674 7094; fax: +886 2 2674 4448.
E-mail address: htpai@mail.ntpu.edu.tw (H.-T. Pai).
Computer Communications 33 (2010) 1524–1530
Contents lists available at ScienceDirect
Computer Communications
journal homepage: www.elsevier .com/ locate/comcom
nodes, which cannot simply take the base station’s role because
their limited battery power.
3. Time-slotted voting mechanism
3.1. Network structure and algorithm
The structure in Fig. 2 is extended to a multi-hop fusion sce-
nario. Fig. 3 illustrates the network structure for data fusion assur-
ance in such WSNs with N sensors andM1 fusion nodes. H hops are
required to transmit the fusion result to the base station from the
fusion node. At the hth hop, h = 1,2, . . . ,H  1,Mh+1 fusion nodes1
are grouped at the h + 1 layer to receive and forward the fusion re-
sult. Note that the relation between Mh+1 and Mh is arbitrary. Local
time synchronization is assumed at each layer.2 The base station ob-
tains the fusion result at the Hth hop (the ﬁnal hop). This network
structure can be found in clustered WSNs [20]. Several real multi-
hop sensor networks can be found in [21].
In the direct-voting scheme, the base station consumes most
power in the polling process. In this work, we propose a time-slot-
ted voting approach, in which every fusion node at one layer of the
multi-hopWSN transmits its vote or fusion result to the fusion node
at the next layer in a pre-assigned and ﬁxed time slot. With such
pre-assigned time-slotted transmissions, no polling is necessary.
We use the fusion process of the hth layer fusion nodes as an
example for discussion. Fusion nodes of other layers follow the
same procedure. Assume there areMh fusion nodes at the hth layer.
In general, each of the Mh fusion nodes gets a chance to submit
its data or vote, unless it is unnecessary (this point will become
clear later). The transmission schedule for these Mh fusion nodes
can be rotated to balance their power consumption. All fusion
nodes will listen while other fusion nodes at the same layer trans-
mit. A threshold Th is used in order to decide whether a certain re-
sult has obtained enough votes.
Without loss of generality, we name the Mh fusion nodes at the
hth layer as node 1,2, . . . , i, . . . ,Mh according to the sequence of their
transmission schedule. Therefore, node 1 sends ﬁrst and node 2
sends next, and so on. When it is node i’s turn to transmit, it will
choose the ﬁrst clause that agrees with its observation thus far:
C1. If more than Th votes have been submitted to support a cer-
tain fusion result, node i remains silent.
C2. If no fusion result has received at least Th  (Mh  i) votes,
node i remains silent.
C3. If there has been a fusion result transmitted earlier on (by
one fusion node whose transmission schedule is ahead that
of node i), node iwill send an agreement vote to support this
result.
C4. Otherwise, it will send its fusion result.
At the end of the transmission time slots of all fusion nodes at
this layer, if there exists a data fusion result with at least Th sup-
porting votes, this result will be accepted.
We explain the intuitive reasons to follow the different clauses
in our algorithm as below. Our algorithm ensures that a data fusion
node sends its data only when it is necessary to do so. The objec-
tive of each hop is to ensure an agreement on a correct data fusion
result. If there has been such a result with more than Th supporting
votes (including the original sender), other nodes do not need to
vote (hence clause C1). In some scenarios, the nodes close to the
end of the transmission sequence may see that, even if all the rest
of fusion nodes agree with the currently most-popular result, there
is no way to come up with a result with at least Th supporting
votes. Therefore, it is useless to send in more votes or even new
data (hence clause C2). Clause C3 simply states that a fusion node
will send an agreement vote to support a result that has been sub-
mitted before. Clause C4 makes sure that someone will submit new
results when there is a chance to obtain enough votes.
3.2. Discussions of the algorithm
We have the following discussions of the algorithm that we just
explained:
Transmission schedule. The order of the time slots is important.
The node with the ﬁrst time slot, i.e., the ﬁrst node, must transmit
its fusion result. Assuming that, in general, the fusion result has
more bits than the vote, the ﬁrst node will consume more power
than other nodes. Moreover, if the ﬁrst node is compromised, all
other nodes will have to send more bits, on an average, as shown
in Section 3.3. Since no information about compromised nodes is
known, the order should be random and should be changed period-
ically such that all nodes consume approximately the same power.
This will lead to a more balanced power consumption of sensors in
the WSN.
Promiscuous mode. Data broadcasting techniques are adopted in
this scheme because the data must be received at all fusion nodes
of all layers. All nodes must save every received fusion result in or-
der and the number of its corresponding supports (i.e., votes). Such
records play a critical role for each node, e.g., node i, to decide
which of the clauses among C1, C2, C3, and C4 to take.
Multi-layer fusion. All fusion nodes employed in Fig. 3 have the
same inputs and outputs. However, this network structure model
can be extended to a network with multi-layer fusion [13]. The
nodes in every layer may be divided into several groups such that
a tree-structured network is formed. The nodes in a fusion group
can fuse the detection results of the sensors in the same fusion
group and then securely get fusion results from the fusion groups
of the previous (lower) layer. Finally, the nodes can combine all of
these fusion results to produce a new fusion result and transmit it
to the next (higher) layer. Note that every node in the network may
have the same functions, including data sensing, transmitting, data
fusion, and data fusion assuring.
3.3. Performance analysis
First of all, since the assurance process is performed with the
transmission of the fusion result to the base station, the delay is
ﬁxed and equals toMs,where s is the duration of one time slot, and
Fig. 3. Structure of a multi-hop wireless sensor network for distributed detection
using N sensors, M1 fusion nodes, and Mh fusion nodes as intermediate nodes,
h = 2,3, . . . ,H, at the hth hop.
1 We use ‘‘fusion nodes” instead of ‘‘intermediate nodes” since all sensors in the
WSN might fuse data from different sources.
2 Since communication overheads for the local time synchronization could be O(1)
[19] and the local synchronization is also necessary in many other applications, we
will ignore the extra power consumption for the local time synchronization.
1526 H.-T. Pai et al. / Computer Communications 33 (2010) 1524–1530
of the partial cooperation in Fig. 4(a) has a little lower probability
of accepting a forged result than the case of the full cooperation in
Fig. 4(b). However, the probabilities of accepting a correct result in
both cases are identical. Notice that it is possible that no result is
accepted.
Since the node transmits data by broadcast, the communication
trafﬁc must be divided into two parts: transmission and reception.
In short range communications, the reception dominates the
power consumption. Nevertheless, the transmission consumes
much more power than the reception in long range communica-
tions [22]. Because the number of the receiving nodes at each
transmission equals to the number of nodes at two neighboring
layers, the reception power can be easily derived from the trans-
mission trafﬁc. Hence, we will only focus on the derivation of
transmission trafﬁc.
The analysis for the transmission trafﬁc assumes that a compro-
mised node always disagrees with the correct fusion result and
transmits the forged fusion result. Whether such a compromised
node prefers to send a completely different fusion result depends
on Pf: If the compromised node attempts to trick the receive node
to accept the forged fusion result, then it always agrees with the
fusion result transmitted by other compromised nodes, i.e., Pf = 1.
If Pf = 0, however, the compromised node always disagrees with
the current fusion results.
In this work, overhead is adopted as a transmission trafﬁc index.
The overhead is deﬁned as the total number of bits, except the bits
for one copy of the correct fusion result, transmitted to the base
station by uncompromised nodes during the data assurance process.
Furthermore, we only consider the complexity when a correct fu-
sion result can be sent to the base station since when a forged
one is accepted by the base station or when no result is accepted
by the station the network is either useless or must be re-orga-
nized or re-deployed. Since only receiving correct fusion result is
considered, both attack models mentioned previously will have
the same complexity.
For a transmit node, denote kh(v) as the number of bits required
for agreeing with the vth transmitted fusion result. Note that kh(v)
may include packet headers that are needed for transmission. If
Pf = 1, the correct fusion result transmitted by an uncompromised
node is the ﬁrst transmitted result with probability (Mh  Ch)/Mh
or the second transmitted result with probability Ch/Mh. When
the fusion result is valid in the hth hop, i.e., the number of uncom-
promised nodes is greater than the threshold (Mh  Ch > Th), the
number of agreeing votes on the correct fusion result is Th. The
average overhead at the hth hop is then given by3
Ohðpf ¼ 1Þ ¼
Mh  Ch
Mh
khð1ÞTh þ ChMh khð2ÞTh:
We can ﬁnd that the overhead increases as Th increase. That is the
overhead is O(Th) in the hth hop. The total overheads are repre-
sented by
PH
h¼1Ohð1Þ. Furthermore, every receive node only has to
take and save two versions of fusion results. One is correct and
the other is forged.
When Pf = 0, every receive node at the hth layer must take and
save at most Ch + 1 versions of fusion results, where one is correct
and the others are forged. The overhead at the hth hop is related to
the time slot where the ﬁrst uncompromised node appears to
transmit its fusion result. The probability that the ﬁrst uncompro-
mised node is located at the vth node, v = 1,2, . . . ,Ch + 1, i.e., v  1
compromised nodes transmit their fusion results before it, is repre-
sented by
P0ðvÞ ¼
Mh  v
Ch  v þ 1
 
Mh
Ch
  :
The above analysis is derived as the problem of counting for Ch
black balls (compromised nodes) and Mh  Ch white balls (valid
uncompromised nodes) together since all compromised nodes
(uncompromised nodes) have the same behavior. Similar to the case
of Pf = 1, when the fusion result is valid, the average overhead in the
hth hop is given by
Ohðpf ¼ 0Þ ¼
XChþ1
v¼1
P0ðvÞkhðvÞTh:
Similarly, the overhead is O(Th) in the hth hop and the total over-
head is the summation of the overheads of all hops, i.e.,
XH
h¼1
Ohð0Þ:
Next we describe a method to assign kh(v) for different vs. When
the transmit node agrees with the ﬁrst transmitted result, it sends
nothing. When the transmit node agrees with the vth transmitted
result, where v > 1, it sends the value of v  2. Thus,
khðvÞ ¼
0 v ¼ 1;
1 v ¼ 2;
dlog2ðv  1Þe v > 2:
8><
>:
Fig. 5 shows the overheads in the hth hop while Mh = 11,Th = 5
and Mh = 21,Th = 10. The case of Pf = 0 has higher overhead than
the case of Pf = 1. Notice that the base station accepts the forged fu-
sion result when Ch > 5 for Mh = 11 and Ch > 10 for Mh = 21. By
Fig. 5, there are less than three and six bits of overhead in one
hop for Mh = 11 and 21, respectively. Notice that the overhead is
strongly related to the number of compromised nodes, not the fu-
sion nodes. Thus, only the case ofMh = 11 is shown in the following
simulations. Similar results can be found in when Mh = 11,Th = 10
as shown in Fig. 6. The case considering the packet size will be gi-
ven in next section.
When the communication range between two layers is long, the
transmission trafﬁc dominates the power consumption. The over-
head of the proposed scheme is O(THk), where T is the maximum
number among all Th and k is the maximum number of bits in
any agreed message which contains the bits required for agreeing.
Since T is much less than the total number of nodes, M, and k is
usually less than the length of MAC,4 the power consumption of
the proposed method is much lower than the method in [18],
O(MD HK). On the other hand, when the communication range is
short, the power consumption of the reception must be considered.
The communication of the proposed scheme becomes O(TKHk),
where K = max{M1,M2, . . . ,MH}, because the number of receiving
nodes at the h-hop is Mh1 +Mh. Since K  D, the power consump-
tion of the proposed scheme is still lower than the method in [18].
3.4. Non-fully connected networks
The algorithm detailed in Section 3.1 requires that all sensor
nodes in the same data fusion group can hear each other. When
these nodes are not fully connected or when collisions or packet
loss occur at the overhearing nodes, it is possible that some sensors
cannot hear from others. Based on our algorithm (Step 2d), such
nodes may send data fusion results instead of their votes. Although
this increases the voting overhead, which depends on the chance of3 We are considering a general situation that the bits required for agreeing with vth
transmitted fusion result might different for vs. If they are the same, then Oh(1) is
simply khTh, where kh is the number of such bits. 4 A common length for an MAC is about 128 bits.
1528 H.-T. Pai et al. / Computer Communications 33 (2010) 1524–1530
and 200 bits, that are Th/2 times of 40 and 80 bits, respectively,
when Mh = 11,Th = 5 as illustrated in Fig. 7.
The nodes in the same layer of a WSN are sometimes not fully
connected. That is, some fusion nodes cannot overhear the data
that the other fusion nodes transmitted to the intermediate node
in the upper layer. The disconnected fusion node must send its fu-
sion result at its time slot. Fig. 8 presents the overheads when the
number of disconnected nodes is zero, one, and two. Notice that
the curve of the disconnected case level off because the overhead
mainly comes from the disconnected nodes. Every disconnected
node must send its fusion results according the algorithm. There-
fore, the overhead doubles when the number of the disconnected
nodes increases from one to two. However, the overhead is not
lasting as explained in Section 3.4.
5. Conclusions
Wireless sensor networks are expected to be deployed to differ-
ent ﬁelds to collect useful data for the base station. Due to the large
number of sensors and the amount of incoming data, data fusion is
often performed to reduce the overall trafﬁc from sensors toward
the base station. In this work, we investigate the information
assurance issue of the data fusion process, in which compromised
sensor nodes may launch stealthy attacks to trick data fusion nodes
and eventually the base station to accept false results.
In this work, we have proposed a time-slotted voting scheme to
achieve data fusion assurance in multi-hop fusion fashion, where
data fusions are performed along the path where the results are
sent toward the base station. In each of these fusion hops, a thresh-
old Th is set. If a fusion result is supported by more than Th votes in
the hth hop, it is accepted at the next layer. The scheme provides
good security against sensor node compromise. Moreover, the traf-
ﬁc to be transmitted at hth hop is O(Th).
References
[1] I.F. Akyildiz, W. Su, Y. Sankarasubramaniam, E. Cayirci, A survey on sensor
networks, IEEE Communications Magazine 38 (8) (2002) 102–114.
[2] D. Culler, D. Estrin, M. Srivastava, Overview of sensor networks, IEEE Computer
37 (8) (2004) 41–49.
[3] J.-F. Chamberland, V.V. Veeravalli, Asymptotic results for decentralized
detection in power constrained wireless sensor networks, IEEE Journal on
Selected Areas in Communications 22 (6) (2004) 1007–1015.
[4] A. D’Costa, V. Ramachandran, A.M. Sayeed, Distributed classiﬁcation of
gaussian space–time sources in wireless sensor networks, IEEE Journal on
Selected Areas in Communications 22 (6) (2004) 1026–1036.
[5] D.L. Hall, S.A.H. McMullen, Mathematical Techniques in Multisensor Data
Fusion, second ed., Artech House, Norwood, MA, 2004.
[6] Y. Lin, B. Chen, P.K. Varshney, Decision fusion rules in multi-hop wireless
sensor networks, IEEE Transactions on Aerospace and Electronic Systems 41
(2) (2005) 475–488.
[7] S. Yiu, R. Schober, Nonorthogonal transmission and noncoherent fusion of
censored decisions, IEEE Transactions on Vehicular Technology 58 (1) (2009)
263–273.
[8] A. Boulis, S. Ganeriwal, M.B. Srivastava, Aggregation in sensor networks: an
energy-accuracy trade-off, Ad Hoc Networks 1 (2–3) (2003) 317–331.
[9] Z. Ye, A.A. Abouzeid, J. Ai, Optimal stochastic policies for distributed data
aggregation in wireless sensor networks, IEEE/ACM Transactions on
Networking 17 (5) (2009) 1494–1507.
[10] P. Sholander, A. Harris, J. Brown, Intersensor information assurance for DoD
tactical networks, in: Proc. of MILCOM 2002, vol. 2, Anaheim, CA, Oct. 2002, pp.
1456–1461.
[11] A. Perrig, J.A. Stankovic, D. Wagner, Security in wireless sensor networks,
Communication of the ACM 47 (6) (2004) 53–57.
[12] H. Chan, A. Perrig, B. Przydatek, D. Song, SIA: secure information
aggregation in sensor networks, Journal of Computer Security 15 (1)
(2007) 69–102 .
[13] H. Chan, A. Perrig, D. Song, Secure hierachical in-network aggregation in
sensor networks, in: Proc. of ACM CCS ’06, Alexandria, VA, Nov. 2006, pp.
278–287.
[14] W. Du, J. Deng, Y.S. Han, P.K. Varshney, A witness-based approach for data
fusion assurance in wireless sensor networks, in: Proc. of GLOBECOM 2003,
vol. 3, San Francisco, CA, Dec. 2003, pp. 1435–1439.
[15] H.-T. Pai, Y.S. Han, Power-efﬁcient data fusion assurance using direct voting
mechanism in wireless sensor networks, IEEE Transactions on Computers 57
(2) (2008) 261–273.
[16] J. Deng, R. Han, S. Mishra, A performance evaluation of intrusion-tolerant
routing in wireless sensor networks, in: Proc. of IPSN 2003, Palo Alto, CA, 2003,
pp. 349–364.
[17] T.-Y. Wang, Y.S. Han, P.K. Varshney, A combined decision fusion and
channel coding scheme for fault-tolerant classiﬁcation in wireless wensor
networks, IEEE Transactions on Wireless Communications 5 (7) (2006)
1695–1705.
[18] K.B. Frikken J.A. Dougherty IV, An efﬁcient integrity-preserving scheme for
hierachical sensor aggregation, in: Proc. of ACM WiSec ’08, Alexandria, VA,
2008, pp. 68–76.
[19] K. Sun, P. Ning, C. Wang, Fault-tolerant cluster-wise clock synchronization for
wireless sensor networks, IEEE Transactions on Dependable and Secure
Computing 2 (3) (2005) 177–189.
[20] O. Younis, M. Krunz, S. Ramasubramanian, Node clustering in wireless sensor
networks: recent developments and deployment challenges, IEEE Network 20
(3) (2006) 20–25.
[21] K. Römer, F. Mattern, The design space of wireless sensor networks, IEEE
Transactions on Wireless Communications 11 (6) (2004) 54–61.
[22] G. Mergen, Q. Zhao, L. Tong, Sensor networks with mobile access: energy and
capacity considerations, IEEE Transactions Communications 54 (11) (2006)
2033–2044.
1530 H.-T. Pai et al. / Computer Communications 33 (2010) 1524–1530
三、考察參觀活動(無是項活動者略) 
  無。 
四、建議 
  參加在歐美國家舉行之會議，應提高補助。 
五、攜回資料名稱及內容 
  含有會議論文集之 USB 隨身碟。 
六、其他 
  無。 
 
 
 
97年度專題研究計畫研究成果彙整表 
計畫主持人：白宏達 計畫編號：97-2221-E-305-001-MY2 
計畫名稱：藉由對咬尾迴旋碼之序列解碼建立在 IEEE 802.16e 中直接重傳機制之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 3 2 150%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
