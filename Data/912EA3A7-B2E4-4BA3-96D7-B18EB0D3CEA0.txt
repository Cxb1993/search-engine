 1
適用於單資料率及雙資料率之動態隨機存取記憶體控制器智產設計（3/3） 
計畫編號：NSC-96-2221-E-390-032 
執行期間：96 年 8 月 1 日至 97 年 10 月 31 日 
主持人：陳春僥 國立高雄大學電機工程學系副教授 
 
中文摘要— 
本計畫為動態隨機存取記憶體（SDRAM）
控制器矽智產設計，介面以符合前瞻微處理器
匯流排架構為目標。為了使本 IP 設計易於重覆
使用，控制變數儘量以參數化設計，以符合各
種不同 SDRAM 的特性需求。設計過程依 IP 
Qualification Guideline 規範進行。本設計依
UMC 0.18μm 製程之元件庫進行邏輯合成，並完
成 Gate Level 模擬驗證等 IP 設計流程。另外，
搭配 Micron 64MB SDRAM MT48LC2M32B2-6
模 組 及 Micron 128MB DDR SDRAM 
MT46V8M16TG-75Z 模組進行控制驗證，模擬
驗 證 結 果 顯 示 本 計 畫 所 設 計 的 SDRAM 
Controller 可以準確的控制 SDRAM。 
關鍵字：動態隨機存取記憶體、矽智財、
AMBA、AHB、參數化、記憶體控制器。 
 
Abstract— In this project, we design a digital 
intellectual property for the controllers of Single 
Data Rate Synchronous Dynamic Random Access 
Memory (SDR-SDRAM) and Double Data Rate 
Synchronous Dynamic Random Access Memory 
(DDR-SDRAM).  This design is based on 
Advanced Microcontroller Bus Architecture 
(AMBA) which is the most popular interface for 
developing system-on-a-chip design.  For the 
purpose of reusability, most of the control 
variables are parameterized that provides the high 
flexibility for controlling the SDR-SDRAMs and 
DDR-SDRAMs with different specifications.  
The whole design follows IP Qualification 
Guideline.  Moreover, this design has been 
synthesized according to the UMC 0.18-μm cell 
library and verified by using Example AMBA 
SYstem provided by Chip Implementation Center 
(CIC).  It has been verified on Altera’s Nios 
Development Kit as well.  
Keywords : DDR SDRAM, , AMBA, AHB, 
intellectual property (IP) parameter, memory 
controller。 
I. 前言、文獻探討、研究目的 
半導體製程的進步，帶動了晶片系統
（System-on-a-Chip，SoC）設計風潮。SoC 設
計的挑戰在於時間、成本、效能與功率消耗間
折衷和智產（Intellectual Property，IP）間的整
合。IP 是 SoC 設計的核心。目前大多數的 IP 皆
被歐美等國家所掌控，對於邁向全球 IC 設計首
席寶座的台灣，增加屬於國內所設計及掌控的
IP，例如 LCD Controller、SDRAM Controller
等，相當重要。 
在國內，IP Qualification 聯盟，為了提升國
內 IC 相關產業之競爭優勢，結合學界與業界
在 92 年制定了國內 IC 產業的 IP Qualification
標準，以做為 IP 品質評比與交換的標準，便利
本土 SoC 產業 IP 之流通，為國內 SoC 產業競
爭力提昇之關鍵 [2]。此舉讓既競爭又合作的 IC
設計、IP 供應及 IC 設計服務等半導體領域的相
關業者，擁有一個相互交流的整合型交易空
間，使得我們的 IC 設計產業能夠更迅速且清楚
地掌握市場上現有的 IP 資源。 
大多數系統都需要記憶體，記憶體模組需
求量也日益增大。目前系統對儲存速度的要求
越來越快，為了使記憶體的儲存速度提升，必
需使用儲存速度較快的靜態隨機存取記憶體
( Static Random Access Memory，SRAM )或同步
動態隨機存取記憶體（Synchronous DRAM，
SDRAM）。但因 SRAM 面積大，所以目前的主
流是使用 SDRAM。 
目 前 SDRAM 控 制 器 為 了 直 接 配 合
SDRAM 的動作，輸入的命令通常較多。在 SoC
中，有時為了有效增加系統記憶體容量，通常
會使用同步動態隨機存取記憶體控制器連接外
部 SDRAM。而在連接 SDRAM 時，需特別注意
這四個問題：第一、row 和 column 位址必需要
多工輸入；第二、資料必需要定期更新；第三、
資料存取時間；第四、功率消耗的問題。因此
設計一個高效能的 SDRAM 控制器是本計畫的
 3
Address，再將所指定的位址做讀取動作，此時
RAS_N 及 WE_N 為 High，其餘皆為 Low；
WRITE 命令的主要功能和 READ 相似，為選擇
Column Address，再將資料寫入所指定的位址，
此時只有 RAS_N 為 High，其餘皆為 Low。 
PRECHARGE 命令則是將 Row 除能，用以
接受下一個 ACTIVE 命令的執行，以讓新的
Row 致能，此時只有 CAS_N 為 High，其餘皆
為 Low；REFRESH 命令則是將 SDRAM 內所儲
存的資料做更新動作，以避免電荷隨時間流失
而使資料錯誤。 
LOAD MODE 命令則是載入模式暫存器的
資料，用以選擇資料讀取的模式，例如：CAS 
Latency、Burst Length 等。此時所有的控制訊號
皆為 Low。圖四為 SDRAM 的模式暫存器 
（ Mode Register ），其主要的功能為設定
SDRAM 存取時的各種狀態。此模式暫存器的設
定值取自位址線較低 12 個位元，分別由 A0~A2
控制 SDRAM 的 Burst Length，Burst Length 為
做一次 READ 或 WRITE 時，所存取的資料筆
數，主要可以分為三種模式，分別為 2、4 及 8
筆。由 A3 控制 SDRAM 的 Burst Type，可分為
Sequential 及 Interleaved 。由 A4~A6 控制
SDRAM 的 CAS Latency，可分為 2、2.5 及 3，
其主要功用則為進行 READ 命令時，會過一個
CAS Latency 才由 SDRAM 的 DQ 將資料讀取出
來。由 A7~An 控制 SDRAM 的 Operation Mode，
可 分 為 Normal Operation 及 Normal 
Operation/Reset DLL。BA0 及 BA1 則是控制
Mode Register Definition 可分為 Base mode 
register 及 Extended mode register。 
 
 
表一 控制命令與控制訊號之對照表 
 
 
 
 
C
O
M
M
A
N
D
D
EC
O
D
E
CONTROL
LOGIC
MODE
REGISTER
REFRESH
COUNTER
ADDRESS
REGISTER
ROW-
ADDRESS
MUX
2
2
8
BANK
CONTROL
LOGIC
COLUMN-
ADDRESS
COUNTER/
LATCH
12
12
12
14
BANK
ROW-
ADDRESS
LATCH
&
DECODER
BANK 0
MEMORY
ARRAY
(4,096X256X32)
SENSE AMPLIFIERS
BANK1
BANK2
BANK3
8192
12
4096
I/O GATING
DQM MASK LOGIC
READ DATA LATCH
WRITE DRIVERS
COLUMN
DECODER
8
256
(X 32)
32
32
DATA
OUTPUT
REGISTER
DATA
INPUT
REGISTER
4 4
32
DQM[3:0]
DQ[31:0]
ADDR[11:0]
BANK[1:0]
WE_N
CAS_N
RAS_N
CS_N
CLK
CKE
 
圖一 Micron 128MB SDRAM 架構圖 
 
 5
 
圖三 Micron 128MB DDR SDRAM 架構圖 
 
 
圖四 Micron DDR SDRAM Mode Register 
 7
 
表三 界面信號 
hclk AHB Controller
信號 信號方向 解釋
AHB SLAVE系統時脈
AHB SLAVE系統重置訊號，低電位動作hresetn
AHB SLAVE的選擇訊號hselsdrctr
Controller SDRAM
AHB Controller
AHB Controller
htrans AHB Controller AHB SLAVE資料傳輸模式
AHB SLAVE位址線haddr
AHB SLAVE Burst長度及型式hburst
AHB Controller
AHB Controller
hwrite AHB Controller AHB SLAVE READ及WRITE的控制訊號
AHB SLAVE傳輸資料的資料寬度hsize
AHB SLAVE的寫入資料訊號hwdata
AHB Controller
AHB Controller
hready AHB Controller AHB SLAVE狀態訊號
AHB SLAVE回應訊號hresp
AHB SLAVE的讀取資料訊號hrdata
AHB Controller
AHB Controller
sd_cke SDRAM Clock Enable
Controller SDRAMsd_cs_n SDRAM Chip Enable，低電位動作
Controller SDRAMsd_ras_n SDRAM Row Address Enable，低電位動作
Controller SDRAMsd_cas_n SDRAM Column Address Enable，低電位動作
Controller SDRAMsd_we_n SDRAM Write Enable，低電位動作
Controller SDRAMsd_addr SDRAM Address bus
Controller SDRAMsd_bank SDRAM Bank Select
Controller SDRAM
sd_dqm SDRAM Data Mask SelectController SDRAM
sd_dq SDRAM Data Bus  
 
 
 
表四 設計參數 
 
 
 9
 
 
圖八 AHB to SDRAM WRITE 時序圖 
 
 
 
 
 
 
 
 
 
圖九 AHB to SDRAM READ 時序圖 
 
 11
圖七為 SDRAM POWER ON 時序圖。當
AHB 系統重置後必需等 Vdd 及 Clk 穩定
100us 。 此 時 必 需 經 過 一 次 的 All Banks 
PRECHARGE 及兩次 Auto REFRESH 後，再執
行 LOAD MODE REGISTER 將 SDRAM 的特性
儲存，SDRAM 控制器才能進入 IDLE 開始正常
運作。 
圖八為 AHB to SDRAM WRITE 時序圖。當
T1 時執行 AHB Write Transfer，首先會輸出
HREADY = 0 鎖住 AHB，並開始執行 ACTIVE，
而後再執行 WRITE 將 HWDATA 的資料由 DQ
寫入 SDRAM，直到完成 AHB Write Transfer 發
出BURST TERMINATE，再執行PRECHARGE。 
圖九為 AHB to SDRAM READ 時序圖。當
T1 時執行 AHB Read Transfer，首先會輸出
HREADY = 0 鎖住 AHB，並開始執行 ACTIVE，
而後再執行 READ 將 DQ 的資料由 HRDATA 讀
回 AHB，直到完成 AHB Read Transfer 發出
BURST TERMINATE，再執行 PRECHARGE。 
圖十為若控制器內部 REFRESH 計數器倒
數為 0 時，執行 AUTO REFRESH。圖十一為當
一段間沒有 AHB Transfer 要求時執行 SELF 
REFRESH。 
B2. DDR-SDRAM 控制器 
設計主要考量有四： 
1. 使用一個中央處理單元 (Central 
Contrroll Unit，CPU)指令方式即可
完成輸入 row 和 column 位址。 
2. 設置內部計時器，定時做分散式更
新(distributed refresh)。 
3. 若無控制命令輸入時，自動進入
SELF REFRESH 模式，節省功率消
耗。 
4. 適當的保持 row 位址的選擇，提高
SDRAM 效率和減少對 SDRAM 動
作，即可降低 SDRAM 存取時間和
功率消耗。 
 
 
 
 
 
圖十二 DDR SDRAM 控制器系統方塊圖 
 
 
 
 13
圖十二為 DDR-SDRAM 控制器系統方塊
圖，左邊為 AHB Slave 端，中間為本計畫
DDR-SDRAM 控 制 器 ， 右 邊 為 off-chip 
DDR-SDRAM。表五為 DDR-SDRAM 控制器輸
出輸入信號。 
表六為 DDR-SDRAM 控制器設計參數，藉
由設定參數，可快速地調整控制器以符合不同
記憶容量 SDRAM 模組之時序要求。 
圖十三所示為本 SIP 所設計出的 SDRAM 
控制器之有限狀態機（Finite State Machine，
FSM）。根據 SDRAM 模組規格書之定義，在
POWER ON 時 ， 必 需 先 執 行 All Banks 
PRECHARGE ，再執行兩次 LOAD MODE 
REGISTER（LMR）、再執行一次 All Banks 
PRECHARGE ， 最 後 再 執 行 二 次 AUTO 
REFRESH（REF），以將 SDRAM 的特性載入。
完成這些動作後，方使 SDRAM 控制器處於
IDLE 狀態。FSM 處於 standby 狀態後，如果沒
有任何事件發生的話，將會一直執行 nop 命令，
直到有控制事件發生，才會離開 standby 狀態，
執行該控制事件。在 SDRAM 存取可分成二種
方向，一為 single write mode，而另一種為
sequential full page burst read mode。 
 
C. ASR 省電預測模式 
ASR (Active Same Row) page 策略，當連續
active row 位址一樣，則使用 open page，當連二
次 active row 位址不一樣，則使用 close page，
目的是為了在區域性高時，保持 bank active，提
高存取效率，區域性低時，保持 bank inactive，
減少功率消耗。圖十四為 ASR page 策略的流程
圖，先判斷是否有 AHB 存取命令，判斷 row 
miss、bank miss 或 hit。如果為 row miss，則執
行 all bank precharge，變成 bank miss。如果為
bank miss，則執行 active。如果為 hit 時，則執
行一次 read 或 write 的命令，存取資料。執行完
read 或 write 的命令，如果還有 AHB 存取命令，
則回到存取位址判斷 hit 或 miss，重覆存取流
程。如果無 AHB 存取命令且 open page 被設定，
則保持 bank active 回到 standby 狀態；如果 open 
page 沒被設定，則執行 all bank precharge 到
standby 狀態。 
 
 
 
 
制
圖十三 DDR-SDRAM 控器之有限狀態機 
 
 15
 
圖十六 AHB to SDRAM WRITE 時序圖 
 
 
圖十七 AHB to SDRAM READ 時序圖 
 
圖十五為 SDRAM POWER ON 時序圖。當
AHB 系統重置後必需等 Vdd 及 Clk 穩定
200us 。 此 時 必 需 經 過 一 次 的 All Banks 
PRECHARGE 及 兩 次 LOAD MODE 
REGISTER ， 再 執 行 一 次 的 All Banks 
PRECHARGE 後，最後在執行二次 Auto 
REFRESH 再執行將 SDRAM 的特性儲存，
SDRAM 控制器才能進入 IDLE 開始正常運作。 
圖十六為 AHB to SDRAM WRITE 時序
圖。當 T1 時執行 AHB Write Transfer，首先會
輸出 HREADY = 0 鎖住 AHB，並開始執行
ACTIVE，而後再執行 WRITE 將 HWDATA 的
資料由 DQ 寫入 SDRAM，直到完成 AHB Write 
Transfer 發出 BURST TERMINATE，再執行
PRECHARGE。 
圖十七為 AHB to SDRAM READ 時序圖。
當 T1 時執行 AHB Read Transfer，首先會輸出
HREADY = 0 鎖住 AHB，並開始執行 ACTIVE，
而後再執行 READ 將 DQ 的資料由 HRDATA 讀
回 AHB，直到完成 AHB Read Transfer 發出
BURST TERMINATE，再執行 PRECHARGE。 
圖十八為若控制器內部 REFRESH 計數器
倒數為 0 時，執行 AUTO REFRESH。圖十九為
當一段間沒有 AHB Transfer 要求時執行 SELF 
REFRESH。 
 17
III. 結果與討論 
SDR-SDRAM Controller 結果 
在完成 AHB 介面的設計後，進行 Function
驗證和 Fault Coverage 測試。 
A. 應用方法： 
1. 設定 SDRAM Row、Column、Bank 和
Data Bus 寬度； 
2. 設定工作時脈 hclk； 
3. 依工作時脈換算 SDRAM Timing (clock 
unit)； 
4. 依工作時脈換算休眠時間 (clock unit)； 
5. 在 AHB Decoder 上設定本 IP 在 AHB 系
統所用的記憶體空間範圍。 
 
B. Function 驗證 
撘配 SDRAM 模組做驗證。假設 AHB 的傳
輸的資料寬度為 32 位元，因此在模擬驗證上使
用資料寬度為 32位元的Micron SDRAM做模擬
及驗證。Function 測試方式為以 Testbench 驗
證、軟體驗證、硬體驗證實例。 
 
B1. Testbench 驗證 
假設 AHB 的傳輸的資料寬度為 32 位元，
因此在模擬驗證上使用資料寬度為 32 位元的
Micron 128 MB SDRAM MT48LC2M32B2-6 模
組做模擬及驗證。在使用 UMC 0.18μm 製程元
件庫合成後，模擬結果如圖二十到圖三十三所
示： 
PRE REF REF LMR
100us CL = 3 Full Page模式  
圖二十 INITIALIZE and LMR 
 
 
A
H
B
 S
LA
V
E
SD
R
 S
D
R
A
M
 
圖二十一 Continuous WRITE (Burst Length = 1) 
 
 
A
H
B
 S
LA
V
E
SD
R
 S
D
R
A
M
 
圖二十二 Continuous WRITE (Burst Length = 4) 
 
 
A
H
B
 S
LA
V
E
SD
R
 S
D
R
A
M
 
圖二十三 Continuous WRITE (Burst Length = 8) 
 
 
ACT WE PRE
AHB
Write 16 data
Write 16 data
 
圖二十四 Continuous WRITE (Burst Length = 16) 
 
 
A
H
B
 S
LA
V
E
SD
R
 S
D
R
A
M
 
圖二十五 Continuous WRITE (Burst Length = N) 
 
 
 19
B2. 軟體驗證（EASY） 
在軟體驗證方面，我們使用 ARM 所提供之
Example AMBA System（EASY）。EASY 提供一
個模擬測試 AMBA 的平台，讓使用者可以將所
設計好的 IP 如圖三十四所示安排進行驗證。藉
此平台可在短時間內發展客戶需要的產品。圖
三十四為 AHB EASY 連接圖。從圖中可以很清
楚地看到：CPU 經由 AHB 與週邊溝通，而本設
計之記憶體控制器即置於 AHB 上。 
 
B3. 硬體驗證（NIOS） 
在硬體驗證方面，本設計以 Altera 公司所
發行的 Nios Development Kit Stratix Edition 實
驗板為平台進行驗證。圖三十五為其功能方塊
圖。此實驗板具有 SDRAM 等週邊元件，正好
為此 SDRAM 控制器提供了極佳的驗證環境。
此 SDRAM 控制器是以 AHB 為界面，而 Nios
實驗板中亦提供相關的匯流排橋接界面。 
Nios 實驗板中的匯流排稱為 Avalon Bus，
為一連接微處理器與週邊至可規化系統單晶片
之匯流排；而 Avalon-to-AHB bridge 則是介於
Avalon Bus 與 AHB 之界面。本 IP 即是利用此
界面來連結 Avalon Bus 與 AHB Bus 而達成資料
與命令傳輸之目的。圖三十六為 Avalon-to-AHB 
Bridge 之界面。下列的步驟敘述了將本設計之
SDRAM 控制器（即 AHB Slave）嵌入 Altera
公司所發行的 Nios Development Kit Stratix 
Edition 實驗板與其內部之 Nios RISC CPU（即
Avalon Master）整合的過程。 
1. Avalon-to-AHB Bridge 只會在接到由
AHB 仲裁器發出 hgrant 訊號後才開始
傳送資料信號。 
2. 將來自 Avalon-to-AHB Bridge 提供之
記憶體位址訊號 haddr     和 AHB 控
制訊號傳送到 SDRAM 控制器之後，
Nios RISC CPU（Avalon master）即可
傳送資料。 
3. AHB slave 在時脈上升邊緣時對 haddr 
和 AHB 控制訊號進行取樣。 
4. 當 SDRAM 控制器處於忙碌狀態時，則
SDRAM控制器之AHB wrapper即發出
邏輯準位為 low 的 hready 信號。 
5. 在下一個時脈上升緣時，Avalon master
會收到經由 waitrequest 訊號所發出的
slave 的等待要求。 
6. 當 AHB slave 完成處理資料後，AHB 
slave 會顯示 hready 並完成傳送資料。
對於一個讀取信號而言，AHB slave 會
在 hrdata 顯示資料，且 Avalon master
會在 readdata 對這個資料取樣。 
 
圖三十五 Nios 系統之功能方塊圖 
 21
表七 Performance Factors (64 MBx32，UMC18.v)不含 PADs 
 
C. Fault Coverage 測試 
獲得合成完之 gate level netlist 後，以
SYNTEST DFT 軟體去針對 gate level netlist 測
試 fault coverage。 
DDR-SDRAM Controller 結果 
在完成 AHB 介面的設計後，進行 Function
驗證和 Fault Coverage 測試。 
A. 應用方法： 
1. 設定 SDRAM Row、Column、Bank 和
Data Bus 寬度； 
2. 設定工作時脈 hclk； 
3. 依工作時脈換算 SDRAM Timing 
(clock unit)； 
4. 依工作時脈換算休眠時間  (clock 
unit)； 
5. 在 AHB Decoder 上設定本 IP 在 AHB
系統所用的記憶體空間範圍。 
B. Function 驗證 
撘配 SDRAM 模組做驗證。假設 AHB 的傳
輸的資料寬度為 32 位元，因此在模擬驗證上使
用資料寬度為 32位元的Micron SDRAM做模擬
及驗證。Function 測試方式為以 Testbench 驗
證、軟體驗證、硬體驗證實例。 
 
B1. Testbench 驗證 
假設 AHB 的傳輸的資料寬度為 32 位元，
因此在模擬驗證上使用資料寬度為 32 位元的
Micron 128 MB SDRAM MT48LC2M32B2-6 模
組做模擬及驗證。在使用 UMC 0.18μm 製程元
件庫合成後，模擬結果如圖三十八到圖四十所
示： 
圖三十八  Initialization and Load Mode Register 
 23
 
圖四十  Power-down and self refresh with bank inactive 
 
B2. 軟體驗證（EASY） 
在軟體驗證方面，我們使用 ARM 所提供之
Example AMBA System（EASY）。 
 
B3. 硬體驗證（NIOS） 
在硬體驗證方面，本設計以 Altera 公司所
發行的 Nios Development Kit Stratix Edition 實
驗板為平台進行驗證。 
 
C. Fault Coverage 測試 
獲得合成完之 gate level netlist 後，以
SYNTEST DFT 軟體去針對 gate level netlist 測
試 fault coverage。 
 
討論 
SDRAM 的 Power 及初始化由本 IP 自動產
生，不需要 AHB 去驅動。AHB 只需指定位址
即可讀寫 SDRAM，而且可任意讀寫連續 N 筆
的資料。最後當本 IP 閒置時，SDRAM 進入 Self 
Refresh 節省功率。另外當 AHB Master 在 Burst 
Transfer 中存取忙碌時，會對 SDRAM 作 Clock 
Suspend。 
存取 SDRAM 後就 PRECHARGE，讓 Bank
保持在 IDLE 下減少功率消耗和下一次取存同
一 Bank 不同 Row 的時間。問題來了，當二次
的取存都在相同的 Bank、Row 時，PRECHARGE
就是多餘的，所以我們必需建立一套機制決定
在取存 SDRAM 是否 PRECHARGE，而且在功
率和效率中取得平衡點。 
另外，當存取可能會從跨越相鄰的 Row 時
會產生 ERROR。所以當存取到後面的 Column
時適時的 ACTIVE 相鄰的 Row 解決 ERROR。
這相鄰的 Row 可能在不同的 Bank 中。 
SDRAM 的 Power 及初始化由本 IP 自動產
生，不需要 AHB 去驅動。AHB 只需指定位址
出席國際學術會議心得報告 (1/2) 
                                                             
計畫編號 NSC 96-2221-E-390-032 
計畫名稱 適用於單資料率及雙資料率之動態隨機存取記憶體控制器智產設計（3/3）
出國人員姓名 
服務機關及職稱 
陳春僥 Chuen-Yau Chen 
國立高雄大學電機工程學系 副教授 
會議時間地點 自 2008 年 8 月 10 日至 2008 年 8 月 13 日 美國田納西州諾克斯維爾 
會議名稱 The 51st Midwest Symposium on Circuits and Systems 
 
一、參加會議經過及與會心得 
8 月 10 日起，「The 51st Midwest Symposium on Circuits and Systems」於美國田納西州諾克斯維
爾展開為期四天的會議。大會中除了有來至各國的學者專家進行學術論文發表與交流之外，
亦於 8 月 11、12 及 13 日各安排一場專題演講。 
美國 Georgia Institute of Technology 的 Professor Paul Hasler 主講「Is Analog VLSI becoming 
a reality?」。這場演講中提到了近幾年來人類對於功能強大而可攜性高之電子產品的需求不斷
的提升。然而，伴隨這些強大功能而生的功率消耗問題卻是一個相當棘手而重要的課題。試
圖在有限的功率（更貼切一點，應該是能量！）環境中，實現高度運算達到強大功能是大家
努力的目標。Professor Paul Hasler 主張以類比電路技術來解決這個問題。從功率的觀點而言，
以類比電路技術可以較數位電路技術低許多數量級的功率實現相關的功能，但其缺點在於彈
性較低，對於不同規格、不同應用的適應性較低。但是，隨著類比信號處理技術、neuromorphic 
engineering 及可重組式類比方法的發展，這些問題將逐漸被克服。 
以色列 Ben-Gurion University 的 Professor Benjamin Arazi 主講「From security protocols, 
through their implementation circuitry, to secure memory and beyond: a case study and open 
problems」。這場演講中提到了無限感測器及 RFID 等行動式元件（mobile components）間的
保密通信已儼然成為網路保密領域中基本的分支。這當中將牽涉到對於傳輸中的消息進行保
護使之免於在傳輸過程中受到更動，並驗證其傳送源的合法性。Professor Benjamin Arazi 提到
這個保密通信的硬體實現在行動式元件中是一科學與工程的挑戰。同時，Professor Benjamin 
Arazi 亦在演講中提出一個硬體最小化的方法。 
美國德州 IBM Austin Research Laboratory 的 Dr. Charles J. Alpert 主講「Physical Synthesis: 
the Good, the Bad, and the Ugly」。這場演講中提到了十年前晶片設計中逐漸增加的連線延遲
（wire delay）在 cell placement 後的最佳化中成了一個棘手的問題，而 physical synthesis 也適
時地提供設計者一個相當有力的幫助。早期的 physical synthesis tools 是以單純的 scripts 包覆
在傳統的 placement 和 logic logic synthesis 最佳化上。但是，技術的進步已漸漸將日益增加的
壓力加諸 physical synthesis tools 上。當前的 physical synthesis tools 不僅在 timing 上需合乎日
益提升的頻率，還需肩負其他如功率管理、routability 及 variability 的方面的任務。這對於 tool 
及設計者而言都是日益艱鉅的工程。 
在論文發表方面，主題涵蓋甚廣，包括：1) 類比濾波器；2) 放大器與比較器；3) 資料轉
