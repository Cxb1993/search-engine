2 
 
 
目錄 
 
一、報告內容 ………………………………………………………………… 3 
二、參考文獻 ………………………………………………………………… 7 
三、計畫成果自評 …………………………………………………………… 8 
四、可供推廣之研發成果資料表 …………………………………………… 9 
 
 
4 
 
concern is particularly critical as requirements are the 
main focus of software customers. 
 
 
3. OBJECT-BASED, ATTRIBUTE-ORIENTED 
IMPACT ANALYSIS APPROACH 
 
3.1. Method framework 
In order to handle changes and impacts for various 
types of stakeholders, this research proposes a holistic 
approach with total-quality control. Such an approach is 
attribute-oriented and object-based. It characterizes 
product items and relates heterogeneous items by using 
attributes and linkages. It models the change propagation 
processes by using object technologies. 
Due to the size limitation, this paper briefly 
introduces the proposed work. Prior to introducing the 
method, several terms ought to be addressed: (1) “item” 
refers to a generic, configurable entity class that is 
managed by the proposed method or system; (2) 
“changeable item” refers to the item that can be handled 
by the system; and (3) “impacted item” refers to an 
affected item due to a change. Item is specialized into four 
sub types: software component, requirement, design 
document, and external data.  
In the proposed approach, an item is characterized 
by attributes. Items may have relationships with each 
others. Linkage is used to represent the relationships. 
Therefore, two items are connected (related) by a Linkage, 
which is characterized by attributes as well. The 
fundamental framework of this method, according to the 
statements mentioned above, is illustrated in Fig.1: 
 
Fig.1. The model framework of the proposed attribute-oriented impact 
analysis method 
 
3.2. Method components: changeable items, linkages, and 
attributes 
3.2.1. Types of items  
As the above section indicates, items or changeable 
items can be design document, software component, 
external data, and requirement.  
3.2.2. Attributes of items 
1) Attributes of Software Component 
Dependencies of two software components have 
been discussed in [2]. This paper extends the concept and 
defines ten attribute prototypes for a software component. 
The attributes are illustrated in Fig. 2: 
 
 
Fig. 2. Attributes of software components 
 
2) Attributes of Design Document 
By following IEEE Recommended Practice for 
Software Design Descriptions [7], this paper defines ten 
attribute prototypes for a design document (Figure 3): 
 
Fig. 3. Attributes of design documents 
 
3) Attributes of External Data 
6 
 
In order to demonstrate the work of the proposed 
approach, a software prototype, Early-Phase Identifier of 
Change (EPIC), is implemented. By using Java 
technologies, EPIC is platform independent and the object 
concepts used in the methodology can be implemented 
effectively. For example, this paper employs JGraph, an 
open source Java graph visualization and layout library 
that greatly enhance as WYSIWYG.  
 
4.2. Example: Web-based FAQ System 
The Web-based FAQ System [13] is built by using 
Java Server Pages (JSP), Java Servlets and JavaBeans 
technology. The system also implements the Model-
View-Controller (MVC) pattern and the Command 
pattern, which intend to make Web-based FAQ System 
highly modifiable and reusable. Figure 8 shows the 
architecture of this software example. 
 
 
Fig. 8. The architecture of Web-based FAQ System 
For the reason of size limitation, some details might 
not be shown in the following demonstration. In this 
example, the first case is to find out the impacts if the data 
syntax of the FAQ database is changed. By running the 
impact analysis, result of the analysis is shown in Figure 9: 
 
 
Fig. 9. The result after running the impact analysis of EPIC for the Web-
based FAQ System example (1) 
 
As shown in Figure 9, the impact of changing the 
data syntax of the FAQ database is not small. Thus, this 
change affects the data syntax attribute of 
FaqRepository.java, FaqBean.java, GetCommand.java, 
DeleteCommand.java, AddCommand.java, Update-
Command.java, add.jsp, upd_menu.jsp, del_menu.jsp and 
delete.jsp. 
The next case is to find out the impacts of changing 
the interface of the Command.java. Therefore, the 
attribute, identity of interface, of Command.java is added 
to change list. Figure 10 after running the impact analysis: 
 
 
Fig. 10. The result of running impact analysis (2) 
 
As the result indicates, if the interface of 
Command.java is changed, FaqAdminServlet.java and all 
the commands that extend Command.java will be affected. 
Moreover, if FaqAdminServlet.java is moved, then, the 
location at runtime of FaqAdminServlet.java is changed 
correspondingly. 
 
 
Fig. 11. The result of running impact analysis (3) 
 
8 
 
三、成果自評 
3.1. 與原計畫相符程度 
有關與原計畫相符程度茲說明如下： 
z 本計畫均按原計畫執行預算 
z 本計畫均按原規劃時程進行 
z 本計畫均達到原先規劃之目標 
3.2. 達成預期目標狀況 
根據原計畫書之預期效益內容： 
1 Such an approach is attribute-oriented and object-based that (1) characterizes 
components by attributes, and (2) models change propagation process using object 
technologies. 
2 Such an approach allows handling heterogeneous changes. 
3 Such an approach allows identifying heterogeneous impacts. 
4 A computerized program is implemented to identify change impacts automatically. 
z 針對第一點，本研究已建立完成。 
z 針對第二及第三點，本研究所建立的方法可處理如程式碼、資料庫、功能需求、及文件
類等異質軟體系統內容的變更影響搜尋。 
z 針對第四點，本研究已實作出一軟體系統。因此皆有達到原預期效益。 
3.3. 研究成果之學術或應用價值 
本研究擬在近日向學校申請專利。本研究內容經個人自我評估為基礎型發明，是在於本研究
所建立的關聯機制，可應用在他領域中，凡涉及到需要建立異質事物的關聯上來做其他應用。例
如 Construction Engineering 中，以建造一建築為例，若能在藍圖階段，能將異質項目例如內容建
物(廚房、客廳等等)、水路線、電路配線設計、電話路線配置等等建立關聯。在於某項目變更(例
如廚房變造)時即能快速了解相關其他設計的連動分析。 
3.4. 是否適合發表在學術期刊或申請專利 
本研究擬在近日向學校申請專利。並已獲 IEEE Conference on IEEM 接受發表。然需先了解專利
申請與論文發表之先後關係〉，再作最適之安排。 
 
 
 
10 
 
英文： 
Change is inevitable in computer software’s lifecycle. 
Uncontrolled software related changes are one of the major risks that 
turn software processes and work products into chaos. Currently, the 
methods of change impact analysis technically focus on the impacts on 
items of the same type.  
Such code-based or homogeneous impact information is actually 
insufficient with regard to the total success of a change action. In joint 
system development environment, this is particularly true as various 
types of stakeholders wish to know not only technical code impacts 
regarding a change, but also managerial, holistic influences on the 
entire system for making cost-effective decisions of the change action.
Therefore, this research proposes a holistic approach for change 
impact analysis. It manages changes from the total-quality aspect by 
considering software, requirements, and documents comprehensively 
while strategically. The approach applies object technologies and uses 
attributes for defining and linking heterogeneous items and further 
establishing the feature change propagation mechanism. 
可利用之產業 
及 
可開發之產品 
軟體開發產業中，有關組態管理 (Configuration Management)工
具，或需求管理工具的變更影響分析功能。或是他產業中，有關
組態管理的變更影響分析功能。 
技術特點 
吾人常說，蘋果香蕉梨子不能相比，或風馬牛不相及。然而
若因為某種業務需要而要將這些事物相題並論、或作異質事物關
聯的研究，現在可以透過本發明所提的方法來做到。 
以軟體發展業務來說，軟體系統的內容除了程式碼外，通常
還包括其他例如文件類、資料庫、及功能需求類等。因此一軟體
系統的變更，其影響所及除了程式碼，還包括其他異質項目。且
原始變更項目除了軟體程式，也可能是上述種類的任何一種。變
更影響搜尋要能更全面(擴及到異質項目)，或更有彈性(從任何異
質項目開始)，其關鍵就在於如何建立異質項目的關聯。 
本研究所提出的方法，以軟體系統為例，就是可以不侷限於
程式碼的異質組態物件、且是跨階段的全面品質導向變更搜尋方
法。此方法運用物件技術、透過建立屬性(Attribute)的方式將系統
中個別種類(類別，Class)之組態物件特徵化，並運用 Composition 
