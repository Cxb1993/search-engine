 I
1. 中、英文摘要 
在音樂資訊查詢（music information retrieval）領域中，「從音樂物件中擷取出代表內涵
（content）的音樂資訊作為特徵值是重要的研究重心」。從音樂物件中擷取出特徵值之後，
可以作為更有效的音樂分析與查詢，並提供更多樣化的服務。 
在本計畫裡面，我們的資料格式是 MusicXML。根據樂理（music theory）與曲式（music 
form）的理論為基礎，從古典樂曲的音樂物件中，擷取出可以呈現音樂結構的特徵。參考
「曲式」的結構特徵（structural feature）之階層性規則（hierarchical rule）特色，將這擷取
出來的音樂特徵，建立出一棵樹狀資料結構，構成一棵具有樂理特徵、樂理結構的曲式樹
（MF-tree）。同時，我們也提出曲式樹的 dissimilarity function，利用曲式樹計算出音樂物件
的不相似度。最後，採用階層式分群（hierarchical clustering）與系統實作來展示分群的效
果。 
 
In the music information retrieval field, the most important topic is to extract the feature 
which represents the content from the music objects. Therefore, the content feature is useful for 
music analysis, music retrieval and other services.  
In this project, our data form is MusicXML. We extract the structural feature from the 
classical music object and it is based on music theory and music form. According to the 
hierarchical rule of music form, we construct a tree structure which is called MF-tree, that is 
provided with the music theory feature and structure in the MF-tree. At the same time, we also 
propose the dissimilarity function of MF-tree to calculating the dissimilarity of music objects. 
Finally, we adapt the hierarchical clustering and system implementation to show the clustering 
effectively. 
 
關鍵詞：特徵擷取（Feature extraction），曲式樹（MF-tree），階層式分群（Hierarchical 
clustering）。
 2
2.2. 文獻探討 
目前的相關研究，我們分別針對音樂特徵的擷取，音樂的辯識（music recognition），音
樂的分類以及 XML 的結構相似（structure similarity）來作介紹： 
關於音樂特徵擷取的研究，Miura[Miur03]介紹旋律的pitch spectrum，利用pitch spectrum
作為 similarity description，並且，可以容易地判斷出歌曲中的移調（transposition）。Wai[Wai03]
對於多音音樂資料庫（polyphonic music database），提出一個 stream segregation algorithm，
將數個音高（pitches）分攤成數個 stream，呈現出旋律線（melody line）概念的音樂特徵。
Hsu[Hsu01] 定義出「nontrivial repeating pattern」的音樂特徵，利用 correlative matrix 和
RP-tree 快速地找到最長的 exact repeating patterns。Hsu[Hsu04]更進一步提出找尋近似的重
覆片段，經由切割（cut）與樣型合併（pattern_join），發展出一個 level-wise 的方法來找尋
近似的重覆片段。 
對於音樂曲式結構的辯識，Liu[Liu02]以 Johann Strauss waltz centos 為範例，根據樂理
提出了三種假設。以四個小節為單位，設計出一個新的結構（稱之為：Melody-tree）。一棵
Melody-tree 是一棵三層的樹，利用 Melody-tree 作為 form recognition 的重要特徵。
Seifert[Seif03]則利用語意的關係（semantic relationship），根據專家決定出重要的音樂片段
（稱之：characteristic motifs），設計出 Leadsheet-tree，作為音樂的辯識。 
音樂分類的研究中，Shan[Shan02]利用和弦（chord）特徵研究不同的特徵表示（feature 
representations），設計出一個 music style 的發掘和分類方法，幫助音樂查詢系統發掘 music 
style。Kuo[Kuo02] 提出一個 music filtering system，根據使用者的行為（behavior），利用
multi-type melody style 的分類方法發掘出 melody patterns，推薦音樂物件給使用者。
Kuo[Kuo04]針對 melody style 的查詢，提出四種查詢的類型，查詢結果會提供給使用者新
穎的（new）或是不知道（not known）的樂曲。 
關於 XML 結構相似的研究，Wang[Wang04]利用 structural information 的概念，提出一
個 hierarchical algorithm（命名為：S-GRACE），減少當 XML documents 儲存在 relational tables
查詢時所需要的 join cost。Canfora[Canf04]提出一個 XML 相似計算的方法，作為 information 
extraction systems 的評估。Bertino[Bert04]對於 XML document 與 DTD 利用 structural 
similarity，提出一個 matching algorithm，以及相關的應用，如：XML documents 的分類、
DTD structure 的評估、結構性查詢的評估、XML documents 的 selective dissemination、XML 
document 內容的保護（protection）。Lee[Lee02]進一步地利用 structure similarity 結合語意
（semantics）的概念，提出 XClust algorithm，有效的整合 DTD schema。 
2.3. 研究目的 
我們的研究目的是針對 MusicXML 格式，從古典樂曲的音樂物件中，擷取出音樂特徵
（feature extraction）與分類應用（classification）。我們面臨的第一個問題是：從古典樂曲
的音樂物件中，擷取出音樂結構特徵，呈現音樂的結構，建構出一棵曲式樹。第二個問題
是：曲式樹的不相似度計算法，以及分類的方法。 
2.4. 研究方法 
2.4.1. MusicXML 的介紹 
XML 是在資訊交換上，目前廣泛被使用的一種資料格式。在這樣的趨勢下，以 XML
的技術為基礎，發展出一種新的音樂資料格式稱之為 MusicXML。MusicXML 的設計目的
是：為了音樂資訊的分析與擷取。MusicXML 是一種儲存樂譜（score-like）的資料格式，
包含了符號式（symbolic）的音樂資料，以及許多的 metadata。如：作者（creator）、譜號
（clef）、節拍（beat）、小節（measure）…等的音樂相關資訊。 
首先，我們先舉個簡單的例子來說明一個 MusicXML document 的結構。從布拉姆斯
（Johannes Brahms）的「旋律（Wie Melodien）Op.105」中，選取出的一段樂譜（如：Figure 
2 左方所示）。這段樂譜的第一部（Voice）之第一小節在 MusicXML document 中（如：Figure 
Definition 1：曲式樹是一棵四層的樹，有以下三個性質： 
Property 1：從根節點計算起，第一層是「音樂物件節點（music object）」，第二層是「樂章
節點（movement）」，第三層是「片斷節點（segment）」，第四層是「子片斷節點（subsegment）」。 
 
 4
)
)
Property 2：對於每一個節點而言，一個節點會對映到一個「音樂序列（music sequence）」，
記為 ；表示在音樂物件中，從「第 拍」到「第 拍」的音樂序列（music sequence）。 ( 21 , bb 1b 2b
 
Property 3：對於每一個 internal 節點而言，所有子節點的音樂序列，會形成父節點的一個
分割（partition）。 
 
Example 1： 
我們選取巴哈（J.S. Bach）的「郭得堡變奏曲（Goldberg Variation）BWV 988」的第四變奏
之十一個小節來舉例說明，並且，將此音樂片段視為一個音樂物件，參考 Figure 4。對於
Figure 4 左方的音樂片段來說，整個音樂片段就是一個音樂物件，所以對映到 Figure 4 右方
的音樂物件節點 。同時，也就是一個樂章，相對於 Figure 4 右方的樂章節點( 40, 1 ( )40, 1 。
在樂章節點包含的音樂序列中，從序列的第一拍算起，計算至第九拍為休止符，其音長大
於一拍，得到一個音樂序列，將此音樂序列視為一個片斷特徵，相對於 Figure 4 右方的第
一個片斷節點 。在片斷節點包含的音樂序列中，從序列的第一拍算起，計算至第七拍
的音長大於等於兩拍時，得到一個音樂序列，將此音樂序列視為一個子片斷特徵，相對於
Figure 4 右方的第一個子片斷節點 。 
( )9,1
( )7,1
       
Figure 4：巴哈（J.S. Bach）的郭得堡變奏曲第四變奏之十一個小節與相對應的曲式樹 
■ 
2.4.3. 曲式樹的不相似度計算法（dissimlarity function） 
在上一個章節中，我們已經介紹了建構曲式樹的方法，利用曲式樹呈現出音樂的結構。
接下來，我們介紹曲式樹的不相似度計算法。首先，我們根據節點之間是否重疊，決定節
點是否相似。如果重疊，則計算節點之間的不相似度，否則就視為不相關，且不予計算，
利用節點的重疊隱含著結構的概念。然後，對於每一個 internal 節點來說，其不相似度是利
用子節點的不相似度得到。因此，我們先介紹 Function ( )vuover , ，將節點代表的音樂序列
正規化於 0 至 1 之間後，判斷出節點之間是否重疊，然後，再介紹曲式樹的不相似度計算
法。 
 
Definition 2：Function 節點重疊（overlapping） ( vuover , )
)給予兩個節點 與 ，則節點重疊： ( )21,: aau ( 21,: bbv
( )
⎪⎩
⎪⎨
⎧ <≤<≤=
otherwise.,  0
or ,  if,   1
,
211211
M
a
N
b
M
a
N
b
M
a
N
b
vuover  
其中， M 是包含 節點之音樂物件節點的音樂序列之個數，u N 是包含 節點之音樂物件節
點的音樂序列之個數。 
v
 6
)( )0,1,10,3,0,1,2, 與 ，由於 與 重疊，則： ( 1,0,43,3,0,1,0, 2a 2b
( ) ( ) ( )( ) ( ) 42.01||4,0,1,0,1,0,3,3||||1,1,0,2,1,0,3,0||
4,0,1,0,1,0,3,31,1,0,2,1,0,3,01, 22 =×⎟⎟⎠
⎞
⎜⎜⎝
⎛ ⋅−=baDS sub  。  
■ 
Definition 4：Function  ( )baDSseg ,
給予兩個片斷節點 與 ，則 與 的不相似度： a b a b
( )
( ) ( ) ( )
⎪⎩
⎪⎨
⎧ === ∑ ≤≤≤≤
otherwise.,                           N/A
1, and 1 if ,
, 1,1
ji
njmi
jisub
seg
baovera,boverk
,baDS
baDS  
其中， 是 的 child， ，m 是 的子片斷節點數目， 是 的 child，ia a mi ≤≤1 a jb b nj ≤≤1 ，n
是b 的子片斷節點數目， ( )∑
≤≤≤≤
=
njmi
ji kbaover
1,1
, 。 
 
Example 4： 
延續 Example 4。由於，片斷節點 與片斷節點 重疊，並且，子片斷節點 與 重疊、
與 重疊、 與 重疊、 與 重疊。計算出 與 的不相似度為 0.3， 與 的不
相似度為 0.1， 與 的不相似度為 0.42， 與 的不相似度為 0.2，則得到兩個片斷節
點的不相似度，為
a b 1a 1b 1a
2b 2a 2b 3a 2b 1a 1b 1a 2b
2a 2b 3a 2b( ) ( ) 255.042.042.01.03.0, =+++=baDSseg 。 
■ 
同樣地，我們利用計算片斷節點的方法，得到樂章節點與音樂物件節點的不相似度。 
 
Definition 5：Function  ( )baDSmov ,
給予兩個樂章節點 與 ，則 與 的不相似度： a b a b
( )
( ) ( ) ( )
⎪⎩
⎪⎨
⎧ === ∑ ≤≤≤≤
otherwise.,                           N/A
1, and 1 if ,
, 1,1
ji
njmi
jiseg
mov
baovera,boverk
,baDS
baDS  
其中， 是 的 child， ，m 是 的片斷節點數目， 是 的 child， ，n是
的片斷節點數目，
ia a mi ≤≤1 a jb b nj ≤≤1
b ( )∑
≤≤≤≤
=
njmi
i kaover
1,1
jb, 。 
 
Definition 6：Function  ( )baDSobj ,
給予兩個音樂物件節點 與 ，則 與 的不相似度： a b a b
( )
( ) ( ) ( )
⎪⎩
⎪⎨
⎧ === ∑ ≤≤≤≤
otherwise.,                           N/A
1, and 1 if ,
, 1,1
ji
njmi
jimov
obj
baovera,boverk
,baDS
baDS  
其中， 是 的 child， ，m 是 的樂章節點數目， 是 的 child， ，n是
的樂章節點數目，
ia a mi ≤≤1 a jb b nj ≤≤1
b ( )∑
≤≤≤≤
=
njmi
i kaover
1,1
jb, 。 
我們利用曲式樹的不相似度計算法，計算出兩棵曲式樹的不相似度，然後，利用階層
式分群，得到音樂分類的結果。 
2.4.4. 階層式分群 
在介紹曲式樹的不相似度計算法之後，我們採用階層式分群（hierarchical clustering）
[Theo99]，將音樂物件作分類。初始設定每一個音樂物件分別為一個叢集，在所有的叢集
in = the number of documents of class X 
jn = the number of documents of cluster T 
The F-measure of cluster T and class X： 
( ) ( ) ( )( ) ( )X,TX,T
X,TX,TTXF
RecallPrecision
RecallPrecision2, +
××= 。 
The overall F-measure = ( TXF
n
n
TX
i ,max∑ )，其中 n is the number of documents。  
由 overall F-measure 的數值反映出分群結果的品質，數值的範圍從 0 到 1，數值越大顯
示品質越好。之後，我們將 overall F-measure 以 F-measure 稱之。 
2.5.2. 實驗結果 
我們採用同樣的實驗資料，將每一個音樂物件，擷取出整首音樂的旋律字串、音高分
佈與音長分佈，將旋律字串利用 editing distance function，計算音樂物件的相似度。將音高
分佈與音長分佈利用向量內積，計算音樂物件的相似度。最後，再經由階層式分群得到分
群的結果，並且，也利用 F-measure 來評估分群的效果。我們將這三種方法稱之為 Naïve
的 pitch string（以 Naïve-PS 表示）、Naïve 的 pitch histogram（以 Naïve-PH 表示）以及 Naïve
的 duration histogram（以 Naive-DH 表示），將這三種方法得到的分群效果與我們提出的方
法比較。 
我們根據 Table 1 將分群數目設定為 3。Figure 16 展示我們的方法與 Naïve 方法對於音
樂分類的效果。實驗的結果顯示，我們的方法得到的分類效果相對於 Naïve 方法呈現出較
好的效果，因此，證實了我們的想法。由於，在計算音樂物件的相似度時，我們將音樂物
件利用樹狀結構來表示，根據節點的位置重疊與否，決定節點的是否相似，進而得到曲式
樹的相似度。因此，我們不是單純的選取整個音樂物件的音樂特徵來計算，而是利用樹狀
結構來表示音樂物件，作為音樂物件的特徵表示。這樣不僅可以提升音樂物件相似度的準
確率，同時也增加了音樂分類的效果。另外，我們可以觀察到一件事，由 Naïve 的方法得
到的分類結果之數值都是相同。但是，我們得到的分類結果之數值，卻有高低之差。因為
在資料不同的音樂特性下，例如：兩首聽起來相似的歌曲，他們的音高分佈是相近的，但
是音長分佈是不相近的。利用 Naïve 的方法，是無法區別出這樣的差異，但是，我們利用
結構的概念，讓兩首即使是聽起來都相似的歌曲，卻可以辨識出這樣的差異。 
 
Figure 3：MF-tree vs. Naïve 的分類效果 
2.6. 結論 
我們針對 MusicXML 格式的古典音樂物件，參考曲式的階層性規則，建構出一棵具有
樂理特徵、樂理結構的曲式樹（MF-tree），並提出曲式樹的不相似度計算法。最後，利用
系統實作作為我們成果的展示。 
就音樂特徵擷取的概念來說，我們已經不再拘泥於使用字串來表示音樂特徵，而進一
步的利用結構來呈現出音樂物件，建構出一棵樹狀結構的曲式樹，並且，也藉由曲式樹得
到音樂物件的不相似度。不過，對於特徵的擷取以及不相似度計算的方法，我們認為還有
發展的空間。 
 8
 參考文獻 
[Bert04] Bertino, Elisa, Giovanna Guerrini, and Marco Mesoti, “A Matching Algorithm for 
Measuring the Structural Similarity between An XML Document and A DTD and its 
Applications,” Information Systems, Vol. 29, No. 1, March 2004. 
[Canf04] Canfora, Gerardo, Luigi Cerulo, and Rita Scognamiglio, “Measuring XML Document 
Similarity: A Case Study for Evaluating Information Extraction Systems,” in Proc. of 10th IEEE 
International Symposium on Software Metrics, 2004. 
[Delp] http://delphi.ktop.com.tw/loadfile.asp?TOPICID=13896274&CC=310786 
[Hsu01] Hsu, Jia-Lien, Chih-Chin Liu, and Arbee L. P. Chen, “Discovering Nontrivial Repeating 
Patterns in Music Data,” IEEE Transactions on Multimedia, Vol. 3, No. 3, September 2001. 
[Hsu04] Hsu, Jia-Lien, Arbee L.P. Chen, and Hung-Chen Chen, “Finding    Approximate 
Repeating Patterns form Sequence Data,” in Proc. of 5th International Conference on Music 
Information Retrieval, 2004. 
[Jone74] Jones, G. T., Music Theory, Harper & Row, Publishers, New York, 1974. 
[Krum90] Krumhansl, C. L., Cognitive Foundations of Musical Pitch, Oxford University Press, 
New York, 1990. 
[Kuo02] Kuo, Fang-Fei, and Man-Kwan Shan, “A Personalized Music Filtering System Based on 
Melody Style Classification,” in Proc. of IEEE International Conference on Data Mining
（ICDM）, 2002. 
[Kuo04] Kuo, Fang-Fei, and Man-Kwan Shan, “Looking for New, Not Known Music Only: 
Music Retrieval by Melody Style,” in Proc. of the 4th ACM/IEEE-CS Joint Conference on Digital 
Libraries, 2004. 
[Lars99] Larsen, Bjornar, and Chinatsu Aone, “Fast and Effective Text Mining Using 
Linear-Time,” in Proc. of ACM International Conference on Knowledge Discovery in Data 
Mining（SIGKDD), 1999. 
[Lee02] Lee, Mong Li, Liang Huai Yang, Wynne Hsu, and Xia Yang, “XClust: Clustering XML 
Schemas for Effective Integration,” in Proc. of ACM International Conference on Information 
and Knowledge Management（CIKM）, 2002.  
[Liu02] Liu, Dan, Nai-Yao Zhang, and Han-Cheng Zhu, “Form Recognition for Johann Strauss’s 
Waltz Centos Based on Music Features,” in Proc. of IEEE International Conference on Machine 
Learning and Cybernetics, 2002. 
[Miur03] Miura, Takao, and Isamu Shioya, “Similarity among Melodies for Music Information 
Retrieval,” in Proc. of ACM International Conference on Information and Knowledge 
Management（CIKM）, 2003.  
[Narm90] Narmour, E., The Analysis and Cognition of Basic Melodic Structures, The University 
of Chinese Press, Chicago, 1990. 
[Reco] http://www.recordare.com/default.asp 
[Seif03] Seifert, Frank, and Wolfgang Benn, “Semantic Relationship and Identification of 
Music,” in Proc. of IEEE International Conference WEB Delivering of Music, 2003. 
[Shan02] Shan, Man-Kwan, Fang-Fei Kuo, and Mao-Fu Chen, “Music Style Mining and 
Classification by Melody,” in Proc. of IEEE International Conference on Multimedia and Expo.
（ICME）, 2002. 
