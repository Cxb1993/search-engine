 2 
 
 
摘要—覆蓋問題是感測網路研究的重要領域之一。基於
感測器在設計上一般具備局部性的感測能力與有限的通訊
能力，如何建構有效的覆蓋範圍與保持覆蓋區域的完整
性，根據實際應用的差異而有不同考量。而本計畫著重於
當感測器的感測範圍僅侷限於有限角度範圍的情形。我們
嘗試以覆蓋連結數最高的感測器節點為起點，逐步加入最
能增進覆蓋效率的其他節點。模擬結果顯示，此類覆蓋方
式能有效連結大部分網路，使得在覆蓋區域中的物件能在
被持續監控的情形下自由移動。  
 
關鍵字—感測網路、角度限制、覆蓋  
 
I. 簡介 
由於近年來感測器相關技術的進步，使得對感測器
的一些環境上的限制也相對的降低，讓無線感測網路上
的一些研究也能夠實際的應用在各個領域上。有關無線
感測網路的研究議題有很多 [1][2]，包含的層面很廣，
從硬體到軟體都有可研究的主題。然而，感測器在本身
設計上的特性，一般的感測器在一開始布建之後就無法
移動其位置，使得其涵蓋的區域上分佈的感測器密度會
有所不同，無法均勻的分佈。加上感測器本身電池的消
耗，造成感測器本身的存活時間有限，進而就會影響到
整個網路的存活時間。延伸出許多關於網路覆蓋的問
題。 
對於無線感測網路的研究，覆蓋問題是其中一個很
熱門的議題。在我們日常生活中，運用各種的設備器材
來監視目標，都會存在著覆蓋問題。所以覆蓋問題是在
日常生活中最常被應用的技術。例如畫廊問題與海洋覆
蓋問題等。 
一個感測器所能感應到的範圍即稱為其覆蓋區
域，而覆蓋問題則研究分析整個無線網路覆蓋區域的生
成以及特性。而感測器與應用上的條件不同，造成探討
的範疇就不盡相同。所以在覆蓋問題上，Cardei與Wu [3]
提出了下列的分類： 
1. 感測器的放置方式:可以分為事先決定與隨機
放置兩種。在客觀的環境允許下，事先決定感
測器的放置方式，可以很有彈性的去應付各種
特別的情境。而隨機放置感測器的方法，則是
考慮利用到特殊的方式才能散佈感測器，例如
使用空投的方式來散佈，很難精準的決定各個
感測器的放置位置，因此會造成感測器的密度
不均勻以及起始位置上的偏差。 
2. 感應與通訊的範圍：在無線感測網路上，感測
器可以擁有相同或不同的感應範圍和通訊範
圍。例如，視訊感測範圍一般大於感測器的通
訊範圍，而視訊感測的角度則可能會小魚一般
的感測器通訊範圍。如果是紅外線的感測範圍
則會小於感測器的通訊範圍。不一樣的感測器
材則形成覆蓋問題不同的限制條件。 
3. 演算法的分類:演算法可以分為集中處理與分
散式(或局部)處理。集中式的演算法，一般需
要一台額外的伺服器來收集整個網路的情
形，進行資料的整合以及運算。而分散或是局
部式演算法，感測器可以藉由得到附近的鄰近
感測器的資料做局部的運算，來決定本身的狀
態。 
4. 其他特殊目的:無線感測網路的連通性、有效
率的節省電源方式、使用最少的感測器個數或
是延長網路的生命週期。 
一般文獻中所探討的覆蓋問題，均假設感測器在放
置之後，就不會再有所移動。如果要用感測網路所要覆
蓋的目標來進行分類的話，可以分成下列三種基本類
型: 
1. 區域覆蓋(Area Coverage):這類型最主要的
目的就是讓整個無線網路去覆蓋(監視)目標
區域。例如:圖 1 中，隨機放置所形成的無線
感測網路覆蓋一個所要監視的矩型區域。連通
的黑點就是正在工作的感測器，其整體的感測
範圍能覆蓋整個矩型區域;白點則為休眠中的
感測器。此類的問題，通常都會探討如何使用
最少數目的感測器來覆蓋所要的整個區域，通
常還會考慮到黑點的電源消耗所影響到的整
體的生存時間，利用剩下的白點來延續覆蓋整
個區域的時間，而這樣的機制則會與排成的設
計有關。 
有限感測能力下的感測網路覆蓋研究 
項天瑞,謝松翰 
國立台灣科技大學資訊工程系 
 4 
同，在高密度中的區域，感測器的同時運作會造成太多
資源的消耗以及浪費，而感測器的電源有限，整個感測
的情形在感測器的電源用盡時，就停止運作，必頇重新
布建，不符合經濟效應。 
 
 
在解決上述問題通常就分為「事先決定」與「隨機
偵測」兩種。在許多論文[4][5][6][7][8]中都是以事
先決定來探討。主要的構想都是把在整個網路還沒開始
運作時，利用適合的演算法，把感測器分成好幾個子群
組，再將子群組的時間錯開。 
在隨機偵測中，通常限制感測器只能知道其通訊範圍
內鄰近感測器的運作情形。利用這些有限資訊，自行判
斷是否要進入休眠，或是從休眠中進入工作狀態。將不
需要工作的感測器休眠，用來減少電池的消耗，達到延
長整個無線感測網路的生存時間。隨機偵測最大的好處
在於每個感測器不需要知道整個無線感測網路運作的
方式，只要知道周圍鄰近感測器的工作情形即可決定自
己本身的運作方式。能夠減少運算量，進而更有效率的
去應付整個網路的變化，比事先規劃的網路更富有彈
性。Tian  和 Ceorganas[9] 使用隨機偵測的方式處理
覆蓋問題，探討用隨機偵測的方式，最小在工作模式下
的感測器數目。Ye 等人則提出感測器由休眠狀態到工
作狀態，然後因電源耗盡，退出整個無線感測網路的模
式與熱帶雨林生長的方式相似。在熱帶雨林中，因為植
物生長茂密，會造成在底下的種子接收不到陽光，所以
無法生長，整個森林就會維持在一個穩定的密度平衡。
種子則是先進入休眠狀態，等到其他的樹木枯死，接收
到陽光，則開始生長，進而成長為樹木。利用這樣的概
念，Ye等讓感測器經過一段時間後，就自行運算是否決
定由休眠狀態中甦醒轉成工作狀態。 
 
II. 研究目的 
在無線感測網路的覆蓋問題研究中，大部分的研究
都是探討如何在維持所要覆蓋區域或目標點的情況
下，延長整個無線感測網路的生存時間。而之前所提到
的障礙覆蓋(Barrier coverage)這類的覆蓋問題，在整
個無線感測網路布建好的應用，則是相對的比較少被拿
來討論。 
而在現實的應用中，感測器的感測範圍通常不一定
可以把周圍給完全覆蓋。例如視訊感測，其感測的範圍
則會受限於感測器的視角。而我們的研究目標則是在於
研究如果感測器的感測範圍不是形成一個圓，而是同於
視訊感測器一樣有個固定的視角限制時，則應該如何產
生一個良好的覆蓋。如圖五，假設感測器的通訊範圍可
以將周圍完整的覆蓋，但是感測的角度則是受限於視角
的大小，在前述的覆蓋問題中，通訊網路的連通性保證
了整體感測網路的連通性。而由於感測器的感測範圍成
扇型，不同於一般圓形的感測範圍，使得感測網路互相
覆蓋的情形，不再是以兩圓相交的狀態來判定。 
 
 
如圖6的例子，圖6的(2)(3)雖然感測器的通訊範圍
互相覆蓋(表示可以得到對方的運作狀況)，但是因為各
自的感測的角度關係，造成兩個都是各自獨立的感測區
域。 
 
在一個有限密度的的無線感測網路中，有限數量的
感測器隨機散布在整個區域，不一定都會形成圖6(1)的
情形。各個感測器通訊範圍互相覆蓋，但是感測範圍卻
因為角度的關係，造成雖然整個無線感測網路的通訊網
路為連通，但是感測的範圍卻無法覆蓋整個區域，造成
監控上的盲點。提高感測器分佈的密度來增加覆蓋的範
圍，但是這樣卻不是較為經濟的方法。所以本計畫探討
實際覆蓋區域的特性與改進方法。考慮即使未完全覆蓋
圖6 
圖5 
圖4:擁有兩個子群組的無線
感測網路 
感測器 
通訊範圍 
感測範圍 
+ 
 6 
 
 
C. 度數(degree)的計算 
 每個感測器x在計算其度數，會嘗試與鄰近的感測器
相連通，找出可以與最多的感測器連通的感測角度，而
鄰近的感測器(還沒有受到限制條件的感測器)則都假
設其感測角度會為了達成與感測器x相連通而轉向感測
器x。如圖12(1)所示，感測器A、B、C在尚未決定其感
測角度時，可能其感測範圍都無法連通，而當我們在計
算感測器A的度數時，則將鄰近的感測器B、C，旋轉其
感測角度，嘗試與感測器A先連接，在圖12(2)中，我們
知道感測器A、B可以使其相連通，而感測器A的在這個
角度的度數則為1，但使感測器A在改變感測角度，如圖
12(3)，可以同時與感測器B、C相連接，可以得到更大
的度數2，而當感測器A以被選擇，則其所選擇的感測角
度以及所影響的感測器B、C就都受到與感測器A先連接
的條件限制。 
 
圖12 
 
    我們假設鄰近的感測器都會旋轉其角度來達到一
個較大的度數。所以在計算上，我們可以考慮單一感測
器x的兩倍距離的感測範圍，只要鄰近的感測器是落入
兩倍距離的感測範圍內，則我們可以保證其會與感測器
x 相連通。如圖13所示，左圖的淺色地帶為其感測器A
的某個角度感測範圍，圖13(2)中的外圓是以兩倍感測
範圍所圍出之範圍，當我們以圖13(1)的感測器A的感測
角度來計算其度數時，我們只要確定鄰近的感測器會落
入右圖的淺色範圍內，在淺色範圍內的感測器都可以適
當的改變自己的感測角度來與感測器A相連，所以我們
只要計算落入淺色區域內的感測器數量，就可以知道感
測器A在這個感測角度的度數為何。 
 
圖13 
 
演算法1： 
我們對一個無線感測網路G=(V,E)，V={1,2,…n}，
(V為感測器集合，每個感測器都有ID，從1,2…n)，假
設U為已決定感測角度的感測器集合，C為被限制住感測
角度的感測器集合，當某一個感測器x決定本身的感測
角度，則會間接的影響到鄰近的感測器所能選擇的角
度，被影響的感測器必頇要已與感測器x的感測範圍先
連通的情況下來重新計算本身的度數(degree)，其度數
則是計算與V-U集合的可能連通個數。在演算法1中我們
除了第一次選擇最大度數的感測器是在於所有的感測
器集合V中，之後我們每次都是在被限制中的感測器集
合C中去挑選一個最大度數的感測器，以確保我們可以
一開始就可以保有一個最大連通數量的感測網路。當我
們遇到同時有兩個以上的感測器擁有最大度數時，我們
優先選擇ID最小的感測器。在每次挑選集合C中的最大
度數時，有可能會面臨到集合C不管如何去轉動其受限
制的角度，都無法在影響在集合V-U-C的感測器，即集
合C中最大的度數為0時，此時我們就將集合C中的所有
感測器都與集合U相連接，然後在集合V-U中從最大度數
開始尋找可以與集合U相連接的感測器，在重複其動
作。集合的關係圖如圖14所示，已經確定感測角度的集
合U，在外圈會有1-hop距離的感測角度受到限制的集合
C，以及還沒決定角度，也不受到已經決定角度的感測
器影響的集合V-U-C。 
 
 
 
 
 
 
 
 
 
 
圖14 
 
由於事先就可知道感測器分佈的情形，所以一開始
就可以得知所有感測器所能面對最高度數(degree)的
角度，以及其對應的度數。演算法1的步驟如下： 
圖11 
U 
C 
 8 
 
 
 
而我們將演算法1所跑出來的感測網路圖形取出，計算
其瓶頸線段(bottleneck)的數量，由於我們的目的是希
望可以在任兩個感測範圍內移動，都可以在感測器的感
測範圍監視下而不會有盲點，如果在沒有瓶頸線段的網
路代表當我們從某個感測器的感測範圍，走到另一個感
測器的感測範圍時，不會因為途中的感測器失去作用，
而造成了新的盲點。 
    圖19、20、21為經過演算法1所計算的感測網路圖
形，以及其瓶頸線段的發生位置。 
 
 
 
 
我們由圖19、21可以知道，當我們的感測範圍可以
形成一個迴圈時，在迴圈的附近都不會有瓶頸線段，可
以大量的減少瓶頸線段的產生。在我們實驗的數據來
看，演算法1的結果產生的瓶頸線段都在比重21左右。 
，如表1。 
 1 2 3 4 5 6 
compon
ent 
90 93 90 65 83 44 
Bottle
neck 
25 11 18 15 24 8 
% 27.8 11.8 20 23.1 28.9 18.2 
 7 8 9 10 AVG.  
compon
ent 
95 94 98 64 81.6  
Bottle
neck 
25 28 19 5 17.8  
% 26.3 29.8 19.3 7.8 21.3  
表1 
 
我們使用演算法2所得到感測網路圖形如下圖22、
23。使用演算法2會使得感測範圍較為密集，但也是因
為密集的關係，使得不同區域的感測網路可能無法互相
連通，如圖22，則製造了兩塊大小相接近的感測範圍，
淺色區塊的感測器個數為54，左下方的區塊的感測器個
數為39。 
圖21 
Component: 64 
Bottleneck : 5 
Component: 90 
Bottleneck : 18 
圖18 
圖17 
環境： 
感測器個數:100 
感測角度:60度 
通訊半徑:50像素 
感測半徑:50像素 
Component:77 
A 
Component: 93 
Bottleneck : 11 
圖19                       圖20 
