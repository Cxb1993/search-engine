  
整合異質網路之多媒體服務無縫隙轉移服務 
陳旻秀 
中華大學資訊工程學系 
mxchen@chu.edu.tw 
摘要 
Session Initiation Protocol(SIP)被廣泛地被應用於網際網路電信領域中，同時也被採用為VoIP與3GPP的
信號通訊協定，因此SIP的發展成為網際網路電信領域中備受矚目的研究議題。SIP的研究可分為四大方向，
分別是terminal mobility、personal mobility、service mobility與session mobility。本論文將針對session mobility
這個議題提出如何利用SIP讓使用者能在進行通話的過程中，自由的變換通話設備或將視訊串流隨意分流或
取回的使用機制。我們提出一套機制，以解決收回整合的問題。最後我們採用開放原始碼的軟體電話來進行
實做，並驗證這套機制的可行性。 
1.序論 
隨著網路頻寬的快速增加，許多網路應用
服務也漸漸被開發出來。以即時通訊為例，過
去即時通訊服務必須透過電信網路來進行，
人們透過手機或有線電話撥打朋友的電話號
碼來聯絡感情，並按照通話的時間長短繳交
費用給電信供應商，而通話時間與距離越長
所需繳交的費用也越多。有鑑於跨國通信費
用的昂貴與網際網路的普及應用，研究人員
便開始研究如何透過價格較低網際網路進行
遠距離對話的方法。其研究成果就是我們今
天所看到的Voice over Internet 
Protocol(VoIP)，原理是將語音轉換成資料串
流(stream)後，透過網路送至收話端，收話端
收到語音資料串流後，再轉換成語音撥放出
來，利用這樣的方式，使得收話端可以聽到
發話端所說的話。資料串流的應用還不僅如
此，舉凡目前網路上的網路電視，線上音
樂，都是利用資料串流的原理發展出來。然
而，隨著資料串流服務的普及使用，如何讓
使用者更方便的控制資料串流服務，成了重
要的課題，Session Initiation Protocol(SIP)[1]
因此而誕生。 
SIP是一種用於連線服務管理的通訊協
定，可以建立、終止、修改連線服務。透過
SIP的協助，使用者可以選擇連線的對象，然
後發出控制訊息要求與對方建立連線服務，
或在已經不需要使用到該連線的時候發出控
制訊息與對方中斷連線服務。根據SIP的應用
範圍可以分為四大方向，分別是 terminal 
mobility、personal mobility、service mobility
與session mobility。 
Terminal mobility利用SIP基礎架構使終
端機可任意切換網路，目的與功能相似於
Mobile IP。service mobility讓使用者的服務設
定與SIP帳號結合，只要登入SIP帳號即可取
得服務的設定，免除設定的繁瑣程序。
Personal mobility則架構出一個SIP URI間對應
的環境，讓SIP使用者可以將不同的SIP URI
提供給不同的對象族群，將每個SIP URI的用
途作明確的區分。session mobility討則論如何
讓連線服務在兩個user agent任意移轉的問
題。 
在這四大方向中又以session mobility最引
人注目，其原因在於單純的建立與終止連線
早已經不符合使用者的需求，使用者需要能
對連線服務做更進一步的控制，如連線服務
自由移轉。比方說，一般行動裝置受限與體
積較小的限制，必須縮小螢幕及降低攝影機
的解析度，當使用者在戶外時，沒有其他選
擇只能利用行動裝置與其他人溝通。然而當
使用者回到家中，有高階的視訊及音訊產品
可用時，使用者可能會想改用這些設備來獲
得更好的通訊品質。以前的作法必須中斷原
本在行動裝置上通訊的連線服務，再利用家
中裝置重新與對方建立連線服務進行通訊，
這樣的過程不僅麻煩且相當的不方便。因此
有人提出了連線服務移轉[2][3]的想法，將連
線服務直接移轉到另一個裝置上，省去了瑣碎
的連線服務重新建立程序。 
  
MN2建立連線服務。透過這樣的方式，來達
到連線服務的移轉。 
若使用 3PCC的連線服務移轉方式，
MN1則必須扮演control的角色。一開始由
MN1向MN2發出INVITE，MN2接受後回傳
SDP，MN1再將MN2的SDP填入INVITE訊息
發送給 CN， CN也在接受後回傳 SDP給
MN1，MN1以OK的形式回送給MN2，使得
CN與MN2都有對方的SDP資訊並建立CN與
MN2的連線服務以取代CN與MN1的連線服
務。 
2.2 連線服務分流 
REFER與3PCC的連線服務移轉方式提
供了使用者更便利的操作，但是若要將連線
服務分流到多個user agent，RFC規範中還沒
有相關的解決方案。因此國立中正大學的黃
仁竑教授針對這個問題進行研究，並提出完善
的連線服務分流機制[4]。其主要貢獻在於原
始的REFER機制在進行移轉連線服務時，並
沒有相關資訊指出要將連線服務分流，使得連
線服務只能全部移轉，而[4]所提出的分流機
制將原始的REFER機制加上了一個Mobility 
header指出要移轉的是連線服務中的哪部
分，進而達到分流的目的。Mobility header的
定義如下： 
Syntax: 
Mobility=“Mobility” HCOLON callid * (SEMI 
mobility-param) 
mobility-param =mobility-media / 
generic-param  
mobility-media =“media”EQUAL token 
使用這套機制可以使連線服務自由的被
分流，但是卻存在分流出去的連線服務卻無
法收回的問題，造成使用者必須到每一個被
分流的裝置上去終止連線服務的不便。 
R. Shacham等學者也針對連線服務的分
流與整合作過相關的研究[5][6]。將REFER與
3PCC的方式合併使用，把所有接受分流的裝
置組成一個虛擬裝置，並選出一個裝置作為
虛擬裝置的代表裝置，若有兩台裝置
audio_dev與video_dev分別要接受同一個連線
服務的音訊及視訊，則他們必須組成虛擬裝
置，並選擇audio_dev或video_dev作為代表裝
置。 
假設這兩個虛擬裝置的代表裝置為
audio_dev，當MN想要將連線服務分流到
audio_dev與video_dev上，會送出一個REFER
訊息給audio_dev，audio_dev在收到REFER訊
息後會發出 INVITE向 video_dev索取視訊
SDP，取得視訊SDP後，audio_dev將視訊與
音訊SDP填入INVITE傳給CN，要求取代原
本MN的連線服務。在這套的機制中，不需
要對REFER作任何的更動，但是分流過程中
所需的訊息數量較多，造成網路與主機負荷
提高，更因為所有接受分流的裝置都要預先
組成虛擬裝置而在實用性上更會大打折扣。 
比較[4]與[5]所提出的連線服務移轉分流
機制，雖然[5]的機制較為完善，但是需要浪
費比較多的訊息數量才能達到分流的目的，且
接受分流的裝置必須要事先組成虛擬裝置，這
使得自由移轉的美意蒙上了一層陰影。反之[4]
所提出的機制雖然無法收回與控制被分流出
去的連線服務，卻擁有較高的分流自由度與較
低的網路負載的優勢。因此我們利用Nested 
REFER將[4]所提出的設計加以延伸，建構出
可將連線服務自由移轉、分流與取回的環境。 
3.架構 
Nested REFER為RFC 3892[7]所規範，原
始設計為當兩台裝置無法直接進行溝通時，可
以使用Nested REFER透過中間的裝置來轉達
REFER訊息，完成連線服務移轉的功能。原
始REFER訊息的Refer-To欄位應該填入要
REFER的對象的SIP URI，而Nested REFER
將 Refer-To欄位的內容作修正，以下為
Refer-To內容的例子： 
Refer-To:<sip:C.example;method=REFER?Re
  
出的Nested REFER來進行連線服務的回收，
我 們 在 javax.sip.header 套 件 中 加 入 了
ReferredByHeader 介 面 ， 並 在
gov.nist.javax.sip.header 套 件 中 實 作
ReferredBy。並針對相關的所使用到的class
進行修正後得以正常的執行我們我提出的機
制。 
 
圖 3 SIP-Communicator的軟體組成 
5.實驗 
經過改寫過的SIP communicator軟體如圖 
4，為了驗證我們所提出的機制是否可行，我
們使用四台user agent設計了三種情境模式，
分別是1.移轉並取回全部連線服務、2.分流並
取回部份連線服務、3.在對方主機也進行分
流連線服務的情況下分流並取回連線服務。 
情境1中，我們使用三台user agent，分
別稱為A、B與C。先讓A與B建立連線，接著
從A向C發出移轉全部連線服務的命令，使C
取代A與B進行連線服務，然後再由A向C發
出收回全部連線服務的命令，恢復A與B之間
的連線服務，過程如圖 5。我們實際操作了
情境1並在電腦B上觀察封包繪製出圖 6。 
 
圖 4 sip-communicator畫面 
從圖 6我們可以看出，在大約7秒的時候A
進行了連線服務移轉，使得原本A與B之間傳
送的封包數變為零，而B與C之間有封包開始
傳送，直到15秒時，A作了連線服務回收，才
使得A與B之間又有封包開始傳送。 
情境2同樣使用到3台電腦，不同於情境1
的地方在於A不是將連線服務全部移轉，而是
將視訊連線服務分流給C，如圖 7。同樣的我
們也在B上觀察封包傳輸狀況繪製成圖 8。A
在7秒時將視訊連線服務分留給C，使得A與
B之間只剩下音訊連線服務在進行，因為音
訊所需的資料量遠小於視訊，所以我們可以
看到大部分的封包都由A轉向C，直到15秒，
A下了收回視訊連線服務後B與C之間的封包
數量才歸零。 
 
圖 5情境一移轉連線服務 
  
[1] J. Rosenberg, H. Schulzrinne, G. 
Camarillo, A. Johnston, J. Peterson, R. 
Sparks, M. Handley and E. Schooler, “SIP: 
Session Initiation Protocol”, RFC 3261, 
IETF, June 2002 
[2] R. Sparks, “The Session Initiation Protocol 
(SIP) Refer Method”, RFC 3515, IETF, 
April 2003 
[3] J. Rosenberg, J. Peterson, H. Schulzrinne 
and G. Camarillo, “Best Current Practices 
for Third Party Call Control (3pcc) in the 
Session Initiation Protocol (SIP)”, RFC 
3725, IETF, April 2004 
[4] Chen-Jui Peng, Min-Xiou Chen and 
Ren-Hung Hwang , “SSIP: Split a SIP 
Session over Multiple Devices”, Technical 
Co-Chair, ANW2005 Technical Program 
Committee 
[5] R. Shacham , H. Schulzrinne , S. Thakolsri 
and W. Kellerer ,  “Session Initiation 
Protocol(SIP) Session Mobility 
draft-shacham-sipping-session-mobility-0
4”, IETF , July 2007 
[6] R. Shacham, H. Schulzrinne, S. Thakolsri 
and W. Kellerer, “The virtual 
device:expanding wireless communication 
services through service discovery and 
session mobility,” IEEE international 
conference on wireless and mobile 
computing, networking and 
communications, 2005. (WiMob'2005), 
Volume 4, Aug. 22-24, 2005, Page(s):73 – 
81 
[7] R. Sparks, “The Session Initiation Protocol 
(SIP) Referred-By Mechanism”,RFC 
3892 ,IETF, Sep 2004 
[8] JCP, “JSR-32: JAIN SIP Specification,” 
http://www.jcp.org/en/jsr/detail?id=32 
[9] NIST, “NIST-SIP 1.2 – SIP Libraries and 
Tools for the People,” 
http://www-x.antd.nist.gov/proj/iptel/ 
[10] Network Research Team, 
“SIP-Communicator A Java Softphone 
based on JAIN SIP with audio/video and 
instant,”https://sip-communicator.dev.java
.net/ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
2007年所遭遇的研究瓶頸提出了看法。而 Hasan教授則提出了在不同平台使用 Jabber來
傳遞即時訊息的技術與架構。而來自羅馬尼亞的 Talafovά教授的研究群則提出了在手機
平台如何藉由 SMS來傳遞多媒體資料與閱讀的技術。而來自韓國的Wong教授的研究團
隊，則提出了在 Urban環境如何建構定位服務的系統。 
而第二天一早主辦單位安排了最後一場 Plenary Lecture，不過由於偏向於物件辨識使
用類神經網路的技術，與報告者領域差異太大，因此並未參加。而第二天的第一場 session
所報告的主題環繞在資料傳輸與應用的範疇。首先是由 Imoto教授報告在 multipath傳輸
干擾問題的研究成果。在該報告中提出使用多個平行傳輸的 pilot訊號，來強化傳輸訊號
在傳輸過程中產生的 multipath干擾的測量準確率。而來自保加利亞的 Longo教授，則針
對資料傳輸的模組提出了研究報告。他們所設定的環境是在多類型的網際網路環境，他
們提出了在給定路徑平均節點數的條件下，在假設環境下的終端對終端的封包遺失率的
研究成果。而 Zorba教授則針對了在 HSDPA-HDR的環境下，對傳輸延遲限制服務的效
能討論成果。Berger 教授則在具有限制空間緩衝區 Crossbar 交換器的環境下，提出了有
效率的 Queuing 架構，並針對其所提之架構進行了效能的分析與比較。Baglavas 教授則
是在使用 cell 基礎的選徑器環境，提出了一個新的排程策略，並根據其所提之策略進行
了效能的分析與比較。Mortensen教授則設計了使用互動式調整權重的排程策略。他的方
法先將封包依照類別分類收集，然後再使用互動式調整權重的排程策略進行封包排程。
最後並根據其所提之策略進行了效能的分析與比較。而本 session最後由韓國的Wong教
授提出了一個在分散式計算環境下的軟體設計架構。 
在下午的三場 session所報告之主題分別為天線傳輸技術研究、傳輸編碼應用研究與
衛星通訊技術研究，與報告者所學領域有所差距，因此並未參加。而晚上則由主辦單位
策劃主辦了一個豐富的晚宴。 
第三日的第一場 session主題則是在無線感測網路範圍。首先由來自韓國的 Koo教授
提出了在無線感測網路環境下，使用循序偵測技術來感測物件的技術。利用他們所提之
技術，對於無線感測網路的物件定位精確度能夠有效提升。而 Al-Shawabkeh 教授則在
4G的無線網路環境下，針對頻寬資源的管理提出了最佳的管理策略。根據他們所提的技
巧，在特定的環境下，確實能夠達到最佳的資源管理。然而其所提之技術能否擴展至更
大範圍的應用卻仍有待商榷。 
第三日下午，報告者在Wireless Communications and Networks主題的 session報告了
在WCDMA的多個展頻碼分配問題的研究成果。此外，來自羅馬利亞的 Bojkovic教授，
則提出了一個新的跨層級的軟體傳輸技術。他們的研究成果是架構在無線網路的基礎
上，他們希望能藉由跨層級的技術來有效率提升視訊資料傳輸的服務品質。利用他們所
提之技術，確實能夠提升視訊串流資料在無線網路環境的傳輸品質。而 Palade教授則在
一個混合式的無線網路環境中，提出了一個新的資源管理與預留機制。利用他們所提之
機制，確實能夠有效管理有限的無線網路資源。 
二、與會心得 
由於從台灣到希臘並沒有班機直飛，且碰上暑假的旅遊旺季，因此在機票訂購與航
班選擇上吃了苦頭。最後受限於經費限制，選擇了荷蘭航空的班機，然而在抵達雅典機
場需要轉機兩次才能到達，這次的旅程更是疲憊。然而抵達雅典並不是整個行程的結束，
在選購飛往克里特島的班機上也不是十分順遂，儘管如此還是抵達了克里特島的
Heraklion機場。但是從 Heraklion機場到達開會的 Agios Nikolaos小鎮仍有約 70公里的
