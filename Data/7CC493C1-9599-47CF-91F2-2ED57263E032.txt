 1
行政院國家科學委員會專題研究計畫成果報告 
擷取多層感知機學習規則以解析電力系統暫態穩定度之臨界清除時間 
 
計畫編號: NSC  95 - 2221 - E - 214 - 088 -  
執行期限: 95年8月1日至96年7月31日 
主持人: 林堉仁 義守大學電機系 (yjlin@isu.edu.tw) 
 
一. 中文摘要 
本計畫以多層感知機，找出有哪些原因會影響電力系
統暫態穩定度的臨界清除時間。首先說明一個可以解
析出多層感知機輸入與輸出之間對映關係的方法，藉
以找出有哪些輸入因素較影響電力系統臨界清除時
間，再來詳盡地列出計畫執行步驟，並透過兩個電力
系統的案例說明此方法的可行性。 
 
關鍵詞 : 電力系統暫態穩定度，臨界清除時間，多層
感知機 
 
Abstract 
This project describes the procedures for reasoning 
critical clearing time (CCT) by means of extracted rules 
from a multilayer perceptron (MLP) artificial neural 
network. Extracted rules will be presented in ‘IF-THEN’ 
statement. Case studies using two power systems shall 
justify the method. 
 
Key Words: Power System Transient Stability, Critical 
Clearing Time, Multilayer Perceptrons  
 
二. 緣由與目的 
Critical clearing time (CCT) is usually referred to 
measure the transient stability of a power system. It 
denotes the secure time for clearing the contingency, 
usually the three-phase ground fault. A large value of 
CCT means that the power system has ample time to 
handle the contingency. It depends on generator inertias, 
line impedances, grid topology, operating conditions, 
fault type and location. Computation of CCT is quite 
straightforward and analytic for single machine infinite 
bus power systems. But for the case of multi-machine 
power systems, analytic method for the calculating CCT 
doesn’t actually exist. It is always obtained by repeated 
time-domain simulations which are very time-consuming. 
Meanwhile, CCT evaluation using time-domain methods 
can only be done off-line. Some researchers used the 
Lyapunov theory to compute CCT but this is usually 
suffering from lack of precisely modelling [1-2]. To 
reduce the computation burden and implement on-line 
assessment, a number of studies had been conducted by 
artificial neural networks (ANN) to determine the CCT 
for a multi-machine power system [3-10]. We might 
group those studies into two major categories. The first 
one concerns the ANN structures modification to improve 
the performance [4-5, 7, 9-10], and the second category 
investigates the synthesis of power system signals into 
new ones for ANN [6, 8].  
 
Not all researchers favoured the application of ANN to 
rapidly determine CCT, however. Huang, Lam and Yee 
had shown that large error might occasionally occur in the 
prediction [11]. Neither increasing the number of hidden 
layer neuron nor adding extra training data could reduce 
the maximun error in predicted CCT. Hobson and Allen 
had reached conclusion that the idea of using ANN for 
CCT prediction owned many difficulties, even though 
various efforts had been made including using different 
number for hidden layer number and trying a variation of 
training data pre-conditioning [12]. In spite of that, many 
studies have been proposed on some amendment to CCT 
using ANN [13-20].  
 
 In addition to the misjudgement of CCT resulting from 
ANN, another major drawback of using this artificial 
intelligent technique is the black box characteristic [21-
22]. Most researchers argue that ANN has the black box 
charcterristic. It is mysterious, not transparent. We can 
just observe from outside but can’t understand the 
inferrence inside the box. ANNs merely provide CCT 
prediction rather explanation. Among artificial intellgent 
techniques, decision tree (DT) and its extended methods 
are frequently recommended for securing explanation of 
the inferrence and presenting in IF-THEN rules [23-24]. 
Using the spliting attributes and spliting values, one can 
readily write down the rules for reasoning CCT. However, 
recent research has disapproved the myth that ANNs were 
black boxes [25-29]. We can gain a good insight into the 
ANN black boxes by inspecting the way how neurons 
connect. This paper uses the method published in [30-31] 
to extract rules from a trained MLP ANN and reason a 
multi-machine power system CCT. 
 
三. 研究方法與成果 
3.1   Multlayer Perceptron Network 
Consider a MLP which contains input layer, hidden layer 
and output layer. The number of neuron in both input and 
output layer depends on the problem itself; while the 
 3
well. Once the parameters of the MLP have been 
determined, we then start to train the MLP. We apply 
delta learning rule to modify the weighs between input-
hidden and hidden-output layer, and the threshold values 
in hidden and output layer’s neurons.  
 
We apply testing data to testify the trained MLP in Step 4. 
If the performance is not satisfactory, we might return to 
Step 2 for further modifications. These modifications 
include: transform the training data into different digit 
number (Step 2), increase or decrease the neuron number 
in the MLP (Step 3), or train the MLP again with different 
initial weight and threshold values (Step 3). As been 
reported in literature, MLP has a conventional problem in 
falling local minimum. It will be not unexpected that the 
trained MLP might not perform well.  
 
Once the MLP been trained and testified, in Step 5 we can 
start to extract rules from the trained MLP, as being 
described in Section II. 
 
3.4   Case Study on 9-Bus Power Systems 
Fig. 2 shows the structure of this system. We assumed 
Generator 1 to be very large in capacity so that it 
represented the infinite bus in this study. System data 
could be found in [33].  
 
Fig. 2. 9-bus power systems 
 
In Step 1 we generated the training and testing data. The 
terminal voltage magnitude and active power generation 
of each generator bus, and active and reactive power 
demands of each load bus, were selected as the input 
attributes for our data. Hence there were totally 10 input 
attributes in this test system, 4 from two generator buses 
and 6 from three load buses. Each input attribute was 
varied at random from -10% to 10% from its nominal 
value. We created 300 operating conditions in this 
manner. Next, a three-phase ground fault was applied at 
bus 1. The fault was cleared afterward in a manner that 
pre-fault and post-fault power systems topology was 
identical. For these 300 operating conditions, we 
computed their individual CCT with regarding to this 
contingency. To this end, data dimension was 300×11; 
that is, we had 300 cases, and each case consisted of 10 
input attributes and 1 output attribute. The input and 
output attributes were listed in Table I.  
 
The data generated so far was presented in continuous 
number. In Step 2 we tranformed them into four binary 
digits which presented very high, high, low and very low. 
For each input attribute, if it was between extra 10% and 
5% from its nominal value, we considered it as very high 
and coded it as (1, 0, 0, 0). If the attribute was within 
extra +5% from its nominal value, we treated it as high 
and coded as (0, 1, 0, 0). If the attribute was within -5% 
from its nominal value, then we treated it as low and 
coded as (0, 0, 1, 0). Finally, if the attribute was with -5% 
to -10% from its nominal value, we treated it as very low 
and coded as (0, 0, 0, 1). The similar encoding procedure 
applied to output attribute, CCT. Thus, in Step 2 the data 
we had at hand was 300×44. Index of input and output 
neurons were given in Table II. We had 40 binary input 
attributes and 4 binary output attributes.  
 
In Setp 3, the MLP had 40, 10 and 4 neurons in input 
layer, hidden layer and output layer respectively. The 
learning cycle, learning rate, the change of learning for 
each learning cycle and minimum of learning rate were 
set to 99, 4, 0.98 and 0.3, respectively. We employed two 
thirds of data, 200, as the MLP training data, and the 
remaining one thirds of data, 100, as the testing data. In 
Step 4 we found the best MLP performance was 82% 
accurate after several trials. Next we entered Step 5. Table 
III records the significant inputs for both “Very High 
CCT” output class and “Very Low CCT” output class. 
The significant inputs were ranked from most significant 
and decreased afterward. We could obtain rules as 
follows.  Rule for “Very High CCT” tates that “IF neuron 
8 OR neuron 1 OR neuron 16 OR neuron 9 OR neuron 33 
OR neuron 17 THEN Very High CCT.” And Rule for 
“Very Low CCT” states that “IF neuron 5 OR neuron 4 
OR neuron 13 OR neuron 20 OR neuron 36 OR neuron 
28 THEN Very Low CCT.” Put this “Very High CCT” 
rule into plain words, it would be as follows. “IF the 
power produced at generator 2 is very low (neuron 8) OR 
voltage at generator 2 is very high (neuron 1) OR the 
power produced at generator 3 is very low (neuron 16) 
OR the voltage at generator 3 is very high (neuron 9) OR 
the power consumed at bus 8 is very high (neuron 33) OR 
the power consumed at bus 5 is very high (neuron 17) 
THEN the CCT would be very high.”  
 
The same procedures can be applied to Rule for “Very 
Low CCT.”  
 
To validate those rules, we had calculated the CCT for the 
cases listed in Table IV. For example, regarding to neuron 
8, it showed that if the power generated at generator 2 
was very low, reducing from 163.00 to 149.92 MW, then 
 5
algorithms to properly select fewer input attributes for 
MLP.  
 
It can be observed from Table VII and VIII that the ranks 
of significant inputs are not absolute consistency. 
However, after several trials, we find that the significant 
inputs appear in “Very High CCT” class would never 
display in “Very Low CCT” class. Moreover, the first two 
significant inputs for either “Very High CCT” and “Very 
Low CCT” class are very alike.  
 
Multicontingency and multiple fault locations in this 
study were not particularly dealt with. What we had done 
in this paper was to cope with them one by one.  
 
Once the input attributes that significantly affect CCT 
were found, we could develop preventive control strategy 
accordingly. For example, in the 39-bus power systems 
case, if we want to enhancement the transient stability 
with respect to contingency 1, we can increase the power 
generation of generator 2, or increase the voltage 
magnitude of generator 2, or reduce the active power 
demand at bus 18, or reduce the active power demand at 
bus 25.   
 
五. 計畫成果  
With the aid of this report, we have published the 
following conference papers 
1. Lin, Y.J., “Application of Health Care Issues 
Analogy and Data Mining Techniques to Power 
Systems Transient Stability Preventive Control 
Design,” CD-ROM for the 2nd International 
Symposium on Health Care Inforamtion Mangement, 
Taipei, March 30, 2007. 
2. Lin, Y. J., “Application of Multilayer Perceptrons for 
Improving Moulding Machine Efficiency,” 
Proceeding of the IEEE International Conference on 
Information Acquisition, Jeju Island, Korea, July 9-
11,  2007. 
3. Lin, Y. J., “Reasoning on Critical Clearing Time with 
the Rules Extracted from a Multilayer Perceptron 
Artificial Neural Network,” accepted on the 14th 
International Conference on Intelligent System 
Applications to Power Systems, Kaohsiung, 2007 
 
六. 參考文獻 
[1] M. Moechtar, T. C. Cheng and L. Hu, “Transient Stability of 
Power System - A Survey,” Conference Record of 
Microelectronics Communication Technology Producing Quality 
Products Mobile and Portable Power Emerging Technologies, pp. 
166-171, Nov. 1995 
[2] M. Pavella, “Power system transient stability assessment - 
traditional vs modern methods,” Control Engineering Practice, 
Elsevier Science Ltd., vol. 6, pp. 1233-1246, 1998.  
[3] M. A. El-Sharkawi, “Neural Networks’ power - How they help in 
electric load forecasting and security assessment,” IEEE Potentials, 
vol. 15, no. 5, pp. 12-15, Dec.’96/Jan.’97, 1996.   
[4] D. J. Sobajic, Y. H. Pao, “Artificial neural-net based dynamic 
security assessment for electric power systems,” IEEE Transaction 
on Power Systems, vol. 4, no. 1, pp. 220 - 228, Feb. 1989. 
[5] Y. H. Pao, D. J. Sobajic, “Combined use of unsupervised and 
supervised learning for dynamic security assessment,” IEEE 
Transaction on Power Systems, vol. 7, no. 2, pp. 878 - 884, May 
1992.  
[6] K. L. Lo, R. J. Y. Tsai, “Power system transient stability analysis 
by using modified Kohonen network,” Proceeding of IEEE 
International Conference on Neural Networks, pp. 893 - 898, 1995. 
[7] A. L. Bettiol, A. Souza, J. J. Todesco, J. R.. Tesch Jr., “Estimation 
of Critical Clearing Times Using Neural Networks,” Proceeding of 
IEEE International Conference on Power Technology (PowerTech 
2003), 2003. 
[8] C. Pothisarn, S. Jiriwibhakron, “Critical Clearing Time 
Determination of EGAT System Using Artificial Neural 
Networks,” Proceeding of IEEE PES Summer Meeting, vol. 2, pp. 
731 - 735, 2003.  
[9] A. M. Sharaf, T. T. Lie, H. B. Gooi, “Transient stability and critical 
clearing time classification using neural networks,” Proceeding of 
2nd IEE International Conference on Advances in Power System 
Control, Operation and Management (APSCOM-93), pp. 365-372, 
Dec. 1993. 
[10] V. L. Paucar, F. C. Fernandes, “A Methodology Based on Neural 
Networks for the Determination of the Critical Clearing Time of 
Power Systems Transient Stability,” Proceeding of IEEE 
International Conference on Power Systems (PowerCon 2002), pp. 
2669 - 2673, 2002. 
[11] K. S. Huang, D. M. Lam, H. S. Yee, “Neural-net based critical 
clearing time prediction in power system transient stability 
analysis,” Proceeding of 2nd IEE International Conference on 
Advances in Power System Control, Operation and Management 
(APSCOM-93), pp. 679-683, Dec. 1993. 
[12] E. Hobson, G. N. Allen, “Effectiveness of artificial neural networks 
for first swing stability determination of practical systems”, IEEE 
Trans. on Power Systems, vol. 9, no. 2, pp. 1062 – 1068, 1994. 
[13] I. M. El-Amin, A. A. M. Al-Shams, “Transient stability using 
artificial neural networks,” Electric Power Systems Research 40, 
pp. 7-16, 1997. 
[14] Y. Mansour, E. Vaahedi, M. A. El-Sharkawi, “Dynamic Security 
Contingency Screening and Ranking Using Neural Networks,” 
IEEE Trans. on Neural Networks, vol. 8, no. 4, pp. 942-950, July 
1997. 
[15] S. K. Tso, X. P. Gu, Q. Y. Zeng, K. L. Lo, “Deriving a transient 
stability index by neural networks for power-system security 
assessment,” Engineering Applications of Artificial Intelligence 11, 
pp. 771-779, 1998. 
[16] S. K. Tso, X. P. Gu, Q.Y. Zeng, K. L. Lo, “An ANN-based 
multilevel classification approach using decomposed input space 
for transient stability assessment,” Electric Power Systems 
Research 46, pp. 259-266, 1998. 
[17] K. Morison, “Power System Security in the New Market 
Environment: Future Directions,” Proceeding of 2002 IEEE Power 
Engineering Society Summer Meeting, vol. 3, pp. 1416-1417, 2002. 
[18] K. Morison, L. Wang, et al., “Critical Requirements for Successful 
On-Line Security Assessment,” Proceeding of 2004 IEEE PES 
Power Systems Conference and Exposition, vol. 3, pp. 1676 - 1680, 
Oct. 2004. 
[19] K. Morison, “On-Line Dynamic Security Assessment using 
Intelligent Systems,” Proc. 2006 IEEE Power Engineering Society 
General Meeting, 2006. 
[20] H. Sawhney, B. Jeyasurya, “A feed-forward artificial neural 
network with enhanced feature selection for power system transient 
stability assessment,” Electric Power Systems Research 76, pp. 
1047-1054, 2006. 
 7
TABLE V      INPUT AND OUTPUT ATTRIBUTES FOR 39-BUS POWER SYSTEMS 
Input 1 Input 2 Input 3 Input 4 Input 5 Input 6 Input 7 Input 8 Input 9 Input 10
Vg 2 Pg 2 Vg 3 Pg 3 Vg 4 Pg 4 Vg 5 Pg 5 Vg 6 Pg 6 
Input 11 Input 12 Input 13 Input 14 Input 15 Input 16 Input 17 Input 18 Input 19 Input 20
Vg 7 Pg 7 Vg 8 Pg 8 Vg 9 Pg 9 Vg 10 Pg 10 Pd 13 Qd 13 
Input 21 Input 22 Input 23 Input 24 Input 25 Input 26 Input 27 Input 28 Input 29 Input 30
Pd 14 Qd 14 Pd 17 Qd 17 Pd 18 Qd 18 Pd 21 Qd 21 Pd 23 Qd 23 
Input 31 Input 32 Input 33 Input 34 Input 35 Input 36 Input 37 Input 38 Input 39 Input 40
Pd 24 Qd 24 Pd 25 Qd 25 Pd 26 Qd 26 Pd 27 Qd 27 Pd 28 Qd 28 
Input 41 Input 42 Input 43 Input 44 Input 45 Input 46 Input 47 Input 48 Input 49 Input 50
Pd 29 Qd 29 Pd 30 Qd 30 Pd 32 Qd 32 Pd 35 Qd 35 Pd 36 Qd 36 
Input 51 Input 52 Output 1        
Pd 38 Qd 38 CCT        
 
 
TABLE VI      NEURON INDEX OF SELECTED INPUT ATTRIBUTES FOR 39-BUS POWER SYSTEMS - CONTINGENCY 1 ONLY 
Input Neurons Output Neurons
1~4 5~8 9~12 13~16 17~20 21~24 25~28 29~32 33~36 37~40 41~44 45~48 49~52 1~4 
Pg 2 Pg 9 Vg 9 Pd 14 Vg 3 Pg 8 Pd 25 Vg 2 Vg 10 Pg 6 Pd 18 Pg 5 Vg 6 CCT 
 
 
TABLE VII      RULE EXTRACTION FOR 39-BUS POWER SYSTEMS - CONTINGENCY 1 ONLY 
Output Neuron Output Neuron Class Input Neuron 
1 Very High CCT 1 29 44 28 49 5 
2 High CCT 37 1 25 2 6 43 
3 Low CCT 4 13 8 12 32 24 
4 Very Low CCT 48 8 12 23 4 30 
 
 
TABLE VIII      RULE EXTRACTION FOR 39-BUS POWER SYSTEMS - CONTINGENCY 1 ONLY - ANOTHER MLP  
Output Neuron Output Neuron Class Input Neuron 
1 Very High CCT 1 29 28 5 39 16 
2 High CCT 1 37 28 2 5 21 
3 Low CCT 4 20 8 32 25 12 
4 Very Low CCT 8 48 40 4 51 13 
 
 
TABLE IX      RULE TEST FOR 39-BUS POWER SYSTEMS - CONTINGENCY 1 ONLY 
Input Neuron Index Attribute Operating Condition CCT 
  Rating & Nominal Case 0.24 
1 Increase Pg 2  1000 Î 1080 0.27 
29 Increase Vg 2 1.03 Î 1.08 0.25 
44 Reduce Pd 18  522 Î 500 0.25 
28 Reduce Pd 25  224 Î 200 0.25 
48 Reduce Pg 5  632 Î 580 0.23 
8 Reduce Pg 9 830 Î 760 0.22 
 
 
TABLE X      NEURON INDEX OF SELECTED INPUT ATTRIBUTES FOR 39-BUS POWER SYSTEMS - CONTINGENCY 2 ONLY 
Input Neurons Output Neurons
1~4 5~8 9~12 13~16 17~20 21~24 25~28 1~4 
Pg 2 Vg 3 Pg 3 Pg 6 Vg 5 Pg 9 Pd 30 CCT 
 
 9
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 95-2221-E-214-088- 
計畫名稱 擷取多層感知機學習規以解析電力系統暫態穩定度之臨界清除時間 
出國人員姓名 
服務機關及職稱 
義守大學電機系助理教授 林堉仁 
會議時間地點 民國 96 年 7 月 9 至 11 日   韓國  濟洲島 濟洲市 
會議名稱 IEEE International Conference on Information Acquisit ion (ICIA)
發表論文題目 
Application of Rules Extracted from a Multilayer Percentron Network to  
Moulding Machine Efficiency Improvement 
 
 
 
 
一、 參加會議經過 
 
IEEE 2007 ICIA 於 7 月 9 日(星期一) 到 11 日(星期三) 在韓國濟洲島濟洲市 Ramada Plaza Hotel
舉行。此次大會係以生化(bio-)、奈米(nano-)、微感測元件(micro sensors)與以生物基礎之演算法
(bio-inspired algorithms)來進行訊息擷取為主題。據主席表示，此次投稿論文數約 200 餘篇，經過
審核之後，最後被接受論文約有 140 餘篇，論文接受率約為 70%。參加學者以韓國、中國大陸為
大宗；另有少數來自加拿大、澳洲、孟加拉以及中華民國等國研究學者。我於 7 月 9 日清晨搭遠
東航空班機自高雄小港國際機場起飛，經由桃園國際機場轉機直飛韓國濟洲島。於 7 月 9 日當地
時間下午 2 點抵達會場，旋即參加海報張貼論文之討論場次，並於下午 5 點進行這次出差的主要
任務：口頭簡報場次之論文宣讀。簡報完畢後，現場共有兩個問題提問：一位是韓國籍學者，另
有一位韓國籍研究生，我均一一回答與他們討論。第二天 10 日我全程參加研討會各場次，也出幾
個問題與幾位論文作者進行討論，交換他們在研究過程中所獲得的意見。第三天大會議程只有半
天，且由於班機稍緊迫，在飯店整理行李後我遂直奔機場搭機返國。 
 
 
 
Application of Rules Extracted from a Multilayer 
Percentron Network to Moulding Machine 
Efficiency Improvement  
 
Y.-J. Lin 
Dept. of Elect. Eng., I-Shou University 
Kaohsiung, Taiwan, 840, ROC  
Email: yjlin@isu.edu.tw 
 
 
 
Abstract- It has been found that artificial neural network 
(ANN) has been widely applied to manufacturing industry. 
Most of ANN-based applications focus on yield prediction and 
fault diagnosis. This paper describes a multilayer perceptron 
(MLP) network based method for tuning a moulding machine 
parameter. Once the MLP has been trained, we will draw ‘IF-
THEN’ rules from it and find out which input parameters may 
significantly affect the moulding machine process efficiency. In 
additon, we can learn from rules that how to tune those input 
parameters. Moulding process engineers can accordingly tune a 
moulding machine input parameters and increase its efficiency. 
Practical numerical data obtained from a moulding machine at 
an IC packaging company in Taiwan justifies the feasibility of 
this method. It appears that the proposed method can be 
applied to other manufacturing process.  
I. INTRODUCTION 
Moulding in IC packaging referrs to the process of 
encapsulating integrated circuit (IC) devices with heated 
molten moulding compound [1]. The purposes of moulding 
for IC are to prevent product from any possible short circuit 
such as caused by dust, enhance product mechanical strength, 
and dissicipate heat generated from the circuit. Conventional 
moulding operations, such as moulding compound tablet 
loading, devices removal and cleaning, were manual. 
Morden moulding process in IC packaging industry is 
usually controlled by electronic technology, and is completed 
by automatic moulding machines.  
 
Moulding department administrators always concern the 
efficiency, or the cycle times, of the moulding machine, in 
additoin to its yield rate. It has been found that tuning  
moulding machine parameters for less machine cycle times is 
not an easy task. Many moulding process engineers usually 
spend a lot of time in learning how to adjust a moulding 
machine’s parameters so that it can deliver semiconductor 
products smoothly and efficiently. It has also been found that 
the optimal setting of a moulding machine is always done by 
tuning machine’s parameters one after one, and by trial and 
error. In practice, tuning an individual parameter of a 
moulding machine requires at least 15 minutes, including 
stop the machine, adjust the parameter and turn it on. If the 
parameter tuning could not improve the moulding machine’s 
efficnency, process engineers need to repeat the same 
procedures. However, the delivery time of semiconductor 
products is very crucial. Finding out the machine optimal 
parameters in try and error manner shall be not plausible. 
Once the optimal parameters had been found, department 
administers would simply leave the setting for the moulding 
machine. When engineers stop the moulding machine for the 
maintenance, the parameter setting needs to be done again as 
the process engineers restart the machine. Systematic method 
for doing so is highly demanded and recommended. As far as 
our best knowledge, systematic method to adjust a moulding 
machine parameters for efficientive operation has not been 
available yet among several well-known packaging 
companies in Taiwan.  
 
The artificial intelligence (AI) techniques have been 
applied widely in many manufacturing issues, for example, 
system-on-a-chip electronics [2], automotive market [3] and 
so on [4]. Artificial neural network (ANN) refer to the field 
of AI research that emulates the biological neural network. In 
comparision with other AI techniques, ANN finds itself 
superior at learning and pattern recognition. Typical ANN 
applications in manufacturing inculde yield rate prediction, 
fault diagnosis, classification and so on. Most studies have 
used ANN to predict or classify the manufacturing process 
output result [5-10]. Other studies have paid attention to fault 
diagnosis by using ANN [11-13]. However, there is little 
research on the practical improvement of manufacturing 
process with the assistance of ANN. Most researchers argue 
that ANN has black-box charcterristic, and also argue that 
the inferrence in ANN appears hardly transparent. Hence, 
process improvement using an ANN had been done at 
merely predicting what the answer is, in stead of reasoning 
why the answer is. They merely provide a prediction rather 
than improve the process performance.  
 
However, extraction learned rules from a trained ANN has 
shown this myth no longer valid [14-18]. This paper 
describes the method of using multilayer perceptron (MLP) 
artificial neural network to increase the moulding machine’s 
efficiency. In addition to predict an output class, we consider 
using the knowledge extracted from MLP [19-20] to identify 
the key machine parameters, adjust those parameters and in 
turn improve moulding machine efficiency. Historical 
operating data of a moulding machine, containing various 
input parameters and the corresponding efficiency output, is 
collected for MLP training. The proposed method comprises 
of two major phases. The first phase use MLP to predict the 
moulding machine process output efficiency classification. 
Proceedings of the 2007 International Conference on Information Acquisition
July 9-11, 2007, Jeju City, Korea
1-4244-1220-X/07/$25.00 ©2007 IEEE                         269
moulding compound are correctly positioned. If not, the 
LOADER will beep an alarm. Next the LOADER places two 
slices of unmoulded devices and moulding compound in 
MODULE #1. At the same time, the L/F SHIFT rotates to 
line up with L/F FEEDER, which is waiting for IN MG 
pushing another unmoulded device. Above processes keep 
going until MODULE #2, #3 and #4 are fully loaded. All 
these four MODULEs are clamped and heated up at the 
temperature between 165~180oC, are also suppressed with 
pressure at 25~35 tons in order to melt and compress the 
moulding compound.  
 
 
 
 
Fig. 2. Moulding Machine 
 
 
 
Fig. 3. Moulding Machine Schematic Diagram  
 
The moulding machine will wait for cooling compound 
from liquid state to solid state. Then those four MODULEs 
will release the moulded devices as the temperature reduced. 
UNLOADER then picks up the moulded devices and puts 
them into DEGATE where they are tailored the surplus 
compound. Finally the moulded devices are delivered to 
OUT MG.  
 
B. Adjustable Parameters 
After consulting with the moulding process engineers, we 
observe that there are seven input parameters may 
significantly affect the moulding machine cycle times. They 
are described in detail as follows.  
 
‘CURE TIME’ denotes the time required for the moulding 
compound to cool down. It is usually between 40 to 120 
seconds, but in this study two different times are operated: 
60 and 90 seconds, respectively. 
 
‘LOADER (L/R)’ denotes the speed of LOADER moving 
left and right. From the moulding machine panel, this input 
attribute unit is marked as ‘%’. It usually ranges from 15% to 
30%. Although the higher LOADER speed might increase 
the placement of un-moulded devices into MODULEs, we 
might also increase the possibility of moulding machine 
malfunction. In addition, this input attribute has to cooperate 
with CURE TIME.  
 
‘LOADER (F/B) (M)’ is the speed for LOADER moving 
forward and backward when LOADER loads devices into 
SHIFT and MODULEs. It usually ranges from 10% to 20%. 
The unit, ‘%’, is observed from the mould machine panel. 
This input attribute needs to cooperate with UNLOADER 
F/B. If UNLOADER F/B attribute is slower than this one, 
there may be an event that a moulded device still stays in 
MODULEs while another un-moulded device is going to be 
pushed in by LOADER. Therefore, it might cause the 
moulding machine fault alarm. 
 
‘LOADER (F/B) (H)’ is the speed for LOADER moving 
forward and backward when LOADER unloads devices into 
SHIFT and MODULEs. It usually ranges from 10% to 20%. 
The unit, ‘%’, is still the same with the one observed from 
the mould machine panel.  
 
‘UNLOADER (L/R)’ indicates the speed of UNLOADER 
moving left and right to retire the moulded devices. It is 
usually ranged from 15% to 30%.  
 
‘UNLOADER (F/B) (H)’ is the speed of UNLOADER 
moving forward and backward to retire the moulded devices. 
It is usually between from 10% to 20%. It has to cooperate 
with CURE TIME.  
 
‘CULL TIME’ denotes the duration of moulded product 
from UNLOADER to DEGATE. It has to cooperate with 
CURINT TIME. There are two options in this study: 10 and 
20 seconds.  
 
Output of the moulding machine is machine’s cycle times, 
denoted by ‘M/C TIME’. It ranges from 26 to 46 seconds.   
 
IV. METHODOLOGY  
The sequence of steps for the proposed method is shown in 
Fig. 4.  
 
Step 1 aims to collect a dataset of some actual operating 
cases from the moulding machine. This dataset will be 
further divided into training set and test set. Notice that the 
collected data in this step are in their original numerical 
formats measured from the moulding machine’s display 
panel.  
 
  271
Rule 1: IF neuron 12 AND neuron 4 AND neuron 8 AND 
neuron 10 AND neuron 6 AND neuron 1 THEN Output class 
A. 
 
Put it into plain words, they would be as follows. For Rule 
1, “IF the UNLOADER (F/B) (H) is 20% (neuron 12) AND 
the LOADER (L/R) is 30% (neuron 4) AND the LOADER 
(F/B) (H) is 20% (neuron 8) AND the ULOADER (L/R) is 
30% (neuron 10) AND the LOADER (F/B) (M) is 20% 
(neuron 6) AND the CURE TIME is 60 seconds (neuron 1) 
THEN the output M/C TIME would be less than 30 seconds”.  
 
The same inference procedure was applied to Rule 2 and 
Rule 3, as shown in Table III.  
 
From above three rules, we can accordingly identify the 
input parameters that significantly affect the moulding 
machine output M/C TIME, and also realise how to tune 
those parameters. For example, moulding process engineers 
can adjust the UNLOADER (F/B) (M) largely, say 20%, to 
reduce the moulding machine output cycle times M/C TIME,  
 
We had applied these rules to a moulding machine at the 
IC packaging company. Tuning the parameters as the manner 
described in Table IV, we found that the moulding machine 
output M/C TIME agreed very well with the rules, as shown 
in Table IV, where there three rules test results were given. If 
we adjusted UNLOADER (F/B) (M) from 20% to 10%, the 
moulding machine efficiency suddenly slowed dwon, from 
less then 30 seconds (Class A) to at least 34 seconds (Class 
B), as indicated in Rule 2. 
 
TABLE I 
RAW DATA 
 Input Attribute Output 
 CURE TIME 
LOADER  
(L/R) 
LOADER 
(F/B) (M) 
LOADER 
(F/B) (H) 
UNLOADER 
(L/R) 
UNLOADER 
(F/B) (H) 
CULL 
TIME 
M/C 
TIME 
Case 1 90 15% 10% 20% 15% 10% 10 45.2 
Case 2 90 30% 20% 20% 15% 10% 10 43.4 
… … … … … … … … … 
 
TABLE II 
TRANSFORMED DATA AND MLP INDEX  
 Input Attribute Output 
 CURE TIME 
LOADER  
(L/R) 
LOADER 
(F/B) (M) 
LOADER 
(F/B) (H) 
UNLOADER 
(L/R) 
UNLOADER 
(F/B) (H) 
CULL 
TIME 
M/C 
TIME 
Categories 60 90 15 30 10 20 10 20 15 30 10 20 10 20 A B C 
Case 1 0 1 1 0 1 0 0 1 1 0 1 0 1 0 0 0 1 
Case 2 0 1 0 1 0 1 0 1 1 0 1 0 1 0 0 0 1 
… … … … … … … … … … … … … … … … … … 
NeuronsIndex 1 2 3 4 5 6 7 8 9 10 11 12 13 14 1 2 3 
 
TABLE III 
EXTRACTED RULES  
 Antecedent (IF part) Consequent (THEN part) 
Rule 1 12 4 8 10 6 1 Class A 
Rule 2 11 4 8 6 2 1 Class B 
Rule 3 3 7 5 11 14 2 Class C 
 
 
VI. CONCLUSIONS 
This paper has described a method for increasing 
moulding machine efficiency using MLP. We have fulfilled 
two major objectives: one is for the identification of 
significant input parameters of a moulding machine affects 
the moulding machine processing time, the other is for the 
knowledge of how to tune those parameters. Practical 
moulding machine data demonstrates, and also justifies, the 
proposed method. It is found that we can improve the 
performance of a moulding machine using the proposed m 
ethod. It appears that the proposed method can be applied to 
other manufacturing process improvement problems.   
 
ACKNOWLEDGMENT 
This paper is granted with the aid of the National Science 
Council (NSC) project numberd NSC 95-2213-E-214-088-.  
 
REFERENCES 
[1] R. R. Tummala, Fundamentals of Microsystems Packaging, 
McGraw-Hill Companies, Inc., 2001.  
[2] Y. Dote and S. J. Ovaska, “Industrial Applications of Soft Computing: 
A Review,”, Proceeding of IEEE, vol. 89, no. 9, pp. 1243-1265, 
Septermber 2001.  
[3] G. S. May, “Intelligent SOP manufacturing,”, IEEE Trans. on 
Advanced Packaging, vol. 27, no. 2, pp. 426-437, May 2004.  
[4] N. Rychtyckyj, “Intelliggent Systems for Manufacturing at Ford 
Motor Company,” IEEE Intelligent Systems, pp. 16-19, Jan./Feb. 
2007.  
  273
