—國科會專題研究計畫結案報告—
計算賽局理論之研究
呂學一
國立台灣大學資訊工程學系
Abstract
For a positive number c and an n-node graph G, Aspnes, Chang, and Yampolskiy
formulated the problem of finding a node subset S of G such that c · m + 1n
∑
i n
2
i
is minimized, where m is the cardinality of S and ni is the number of nodes in the
i-th connected component of G \ S. The best currently known approximation algo-
rithm, also due to Aspnes, Chang, and Yampolskiy, for this NP-complete problem
is an O(log1.5 n)-approximation. In the present article, we show that the problem re-
mains NP-complete even if G is planar. Moreover, we give an O(logn)-approximation
algorithm for the problem for any planar G.
1 簡介
For any set S, let |S| denote the cardinality of S. Let G be a graph. Let V (G) consist of
the nodes of G. Let |G| = |V (G)|. Let ‖G‖2 = ∑i |Gi|2, where Gi is the i-th connected
component of G. For any node subset S of G, let G \ S denote the graph obtained from G
by deleting the nodes in S and the edges incident to S. For instance, if S consists of the
black nodes in the graph G shown in Figure 1(a), then ‖G \ S‖2 = 21, where G \ S is as
shown in Figure 1(b).
Given an n-node graph G and two numbers b and c, the inoculation problem is to find a
node subset S of G with |S| ≤ b that minimizes
c · |S|+ 1
n
· ‖G \ S‖2.
Without loss of generality, one can assume b ≥ 1, c ≥ 0, and n ≥ 2 (to ensure that
log2 n ≥ 1), since otherwise the problem becomes trivial. To address a game-theoretical
model of network security (see, e.g., [2, 3, 6–8, 10, 11, 13–19, 21]), Aspnes, Chang, and Yam-
polskiy [4] formulated the problem with b = n (i.e., imposing no upper bound on |S|) to
describe the following scenario of virus attack. Suppose that each infected node incurs 1
1
The rest of the paper is organized as follows. Section 2 gives the preliminaries. Sec-
tion 3 gives our algorithm. Section 4 concludes the paper.
2 Preliminaries
For the rest of the paper, let G be the input n-node planar graph. For any node subset S
of G, let
φ(S) = ‖G \ S‖2.
Clearly, n− |S| ≤ φ(S) ≤ (n− |S|)2 holds for any S.
2.1 Hardness
Lemma 2.1. The inoculation problem remains NP-complete even if G is planar, b = n, and
1
n
< c < 3
n
.
Proof. The proof is modified from that of Aspnes et al. [5, Theorems 3 and 10]. Since
computing the minimum cardinality of node cover for planar G is NP-complete [9], it
suffices to show that the cardinality of any optimal solution for the inoculation problem
with b = n and 1
n
< c < 3
n
for G is the same as the cardinality of any minimum node
cover of G. We show that S is a minimum node cover for G if and only if S is an optimal
solution of the inoculation problem with b = n and 1
n
< c < 3
n
.
Let S1 be a minimum node cover for G. Let S2 be an optimal solution for the inocula-
tion problem for G with b = n and 1
n
< c < 3
n
. Aspnes et al. [5, Theorem 10] guarantees
that S2 is a node cover of G as long as c < 3n . Therefore,
|S1| ≤ |S2|. (1)
Since S1 and S2 are both node covers of G, we have
φ(S1) = n− |S1| (2)
φ(S2) = n− |S2|. (3)
Since S1 is a feasible solution for the inoculation problem, we have
c · |S2|+ φ(S2)
n
≤ c · |S1|+ φ(S1)
n
.
It follows from c > 1
n
and Equations (2) and (3) that
|S2| ≤ |S1|. (4)
Combining Equations (1) and (4), we have |S1| = |S2|. The lemma is proved.
3
Algorithm 1 main procedure
Input: a planar graph G and two numbers b and λ ≥ 1.
Output: a node subset S of G.
• Step 1: Let S be an arbitrary node subset of G with |S| = b.
• Step 2: Repeat the following sub-steps.
– Step 2a: Find a nonempty node subset R of G\S such that Condition C1 holds.
– Step 2b: If Conditions C2 and C3 hold, then
let S = S ∪R and proceed to the next iteration of the repeat-loop.
Otherwise, exit the repeat-loop and proceed to Step 3.
• Step 3: The output depends on Condition C2.
– If Condition C2 holds, then let the output S be S ∪R.
– If Condition C2 does not hold, then let the output S be S.
3.2 Finding a (5λ log2 n, 2)-solution
Given a number λ ≥ 1, we show how to compute a (5λ log n, 2)-solution for the inocula-
tion problem. For any node subsets R and S of G, the gain of R with respect to S is
gain(R,S) =
φ(S)− φ(S ∪R)
|R| .
With the following conditions for number λ and node subsets R and S of G, Algorithm 1
gives the main procedure.
• Condition C1: gain(R, S) ≥ 1
λ
· gain(Sˆ, S) holds for any node subset Sˆ of G with
|Sˆ| ≤ b.
• Condition C2: gain(R,S) ≥ 1
2bλ
· φ(S).
• Condition C3: |S ∪R| ≤ 3bλ log2 n.
Observe that Algorithm 1 can only abort at Step 2a. If Algorithm 1 does not abort,
then the following lemma ensures the correctness of Algorithm 1.
Lemma 3.2. For any chosen parameter λ ≥ 1, if Algorithm 1 does not abort, then Algorithm 1
computes a (5λ log2 n, 2)-solution S for the inoculation problem by executing Step 2a at most n
times.
5
As for the case that Condition C2 does not hold in Step 3, we have
φ(S)
2bλ
> gain(R,S) ≥ gain(Sˆ, S)
λ
=
φ(S)− φ(S ∪ Sˆ)
|Sˆ|λ ≥
φ(S)− φ(Sˆ)
bλ
,
where the first inequality is by the fact that Condition C2 does not hold and the second
inequality is by the fact that Condition C1 holds. Thus, φ(S) = φ(S) < 2φ(Sˆ).
3.3 Implementing Step 2a
Lemma 3.3. If S is a node subset of G, then the following statements hold for any connected
component H of G \ S and any node subset C of H .
1. φ(S)− φ(S ∪ C) = |H|2 − ‖H \ C‖2.
2. gain(C, S) ≥ |H|
quot(A,C)
holds for any node cut 〈A,C〉 of H .
3. gain(C, S) ≤ 3|H|
quot(A,C)
holds for some node cut 〈A,C〉 of H .
Proof. Statement 1. One can easily verify the statement by observing that (a) each con-
nected component of G \ (S ∪C) is either a connected component of G \ S or a connected
component of H \ C, and (b) each connected component of G \ S other than H remains a
connected component of G \ (S ∪ C).
Statement 2. Let B = V (H)\ (A∪C). Since 〈A,C〉 is a node cut of H , we have |A| ≤ |B|.
It follows from |H| = |A|+ |B|+ |C| that
|H|2 − |A|2 − |B|2 ≥ |H| · (|H| − |B|) = |H| · (|A|+ |C|). (7)
By Statement 1 and Equation (7), we have
gain(C, S) =
|H|2 − ‖H \ C‖2
|C| ≥
|H|2 − |A|2 − |B|2
|C| ≥
|H| · (|A|+ |C|)
|C| =
|H|
quot(A,C)
.
Statement 3. Let A be a node subset of H \ C with maximum size such that 〈A,C〉 is a
node cut ofH . LetB = V (H)\(A∪C). For the case 3|B| ≤ 2|H|, we have |H| ≤ 3(|A|+|C|).
It follows from Statement 1 that
gain(C, S) ≤ |H|
2
|C| ≤
3|H| · (|A|+ |C|)
|C| =
3|H|
quot(A,C)
.
The statement holds. As for the case 3|B| > 2|H|, we have |B| > 2|A|. Observe that
|H|2 − |B|2 = (|H|+ |B|)(|H| − |B|) ≤ 2|H|(|A|+ |C|). It follows from Statement 1 that
gain(C, S) =
|H|2 − ‖H \ C‖2
|C| ≤
|H|2 − |B|2
|C| ≤
2|H|(|A|+ |C|)
|C| =
2|H|
quot(A,C)
,
7
Since Sˆi is a node subset of Hi, it follows from Lemma 3.3(1) that∑
i
φ(S)− φ(S ∪ Sˆi) =
∑
i
|Hi|2 − ‖Hi \ Sˆi‖2 = φ(S)− φ(S ∪ Sˆ). (9)
Combining Equations (8) and (9), we have
gain(C, S) ≥ φ(S)− φ(S ∪ Sˆ)
λ · |Sˆ| =
1
λ
· gain(Sˆ, S).
Therefore, Condition C1 holds.
3.4 Proving Theorem 1.1
Proof. By letting λ = 7+ 8
²
, Lemmas 3.2 and 3.4 together ensure that a
((
35 + 40
²
)
log2 n, 2
)
-
solution for the inoculation problem can be found in O(n5+²) time. The theorem follows
immediately from Lemma 3.1.
4 結論
We leave open the approximability of the inoculation problem for general parameter b.
It would be of interest to see if our techniques can be extended to work for this general
version for planar graphs.
5 計畫成果自評
本計畫從本人比較熟悉的approximation algorithm in planar graph切入賽局理論相關課
題的研究, 與原本計畫書中所訂定的方向相符, 在一年的時間之內, 將原先的preliminary
result加以finalize把證明釐清,得到預計的結果.感謝國科會的支持,讓本計畫得以順利完
成.
References
[1] E. Amir, R. Krauthgamer, and S. Rao. Constant factor approximation of vertex-cuts
in planar graphs. In Proceedings of the 35th Annual ACM Symposium on Theory of
Computing, pages 90–99, 2003.
[2] R. Anderson and T. Moore. The economics of information security. Science Magazine,
314(5799):610–613, October 2006.
9
[14] M. Mavronicolas, V. G. Papadopoulou, A. Philippou, and P. G. Spirakis. A graph-
theoretic network security game. In Proceedings of the 1st International Workshop on
Internet and Network Economics, Lecture Notes in Computer Science 3828, pages 969–
978, 2005.
[15] M. Mavronicolas, V. G. Papadopoulou, A. Philippou, and P. G. Spirakis. Network
game with attacker and protector entities. In Proceedings of the 16th Annual Interna-
tional Symposium on Algorithms and Computation, Lecture Notes in Computer Science
3827, pages 288–297, 2005.
[16] M. Mavronicolas, V. G. Papadopoulou, A. Philippou, and P. G. Spirakis. A graph-
theoretic network security game. International Journal of Autonomous and Adaptive
Communications Systems, 1(4):390–410, 2008.
[17] M. Mavronicolas, V. G. Papadopoulou, A. Philippou, and P. G. Spirakis. A network
game with attackers and a defender. Algorithmica, 51(3):315–341, June 2008.
[18] D. Meier, Y. A. Oswald, S. Schmid, and R. Wattenhofer. On the windfall of friendship:
Inoculation strategies on social networks. In Proceedings of the 9th ACM Conference on
Electronic Commerce, pages 294–301, 2008.
[19] T. Moscibroda. Locality, Scheduling, and Selfishness: Algorithmic Foundations of Highly
Decentralized Networks. PhD thesis, ETH Zurich, 2006.
[20] T. Moscibroda, S. Schmid, and R. Wattenhofer. When selfish meets evil: Byzantine
players in a virus inoculation game. In Proceedings of the 25th Annual ACM Symposium
on Principles of Distributed Computing, pages 35–44, 2006.
[21] Z. Nikoloski. Graph-Theoretic Approach to Modeling Propagation and Control of Network
Worms. PhD thesis, University of Central Florida, 2005.
11
