2 
 
器(switch based)之通訊網路。而 fat-tree
拓樸[18]，由於擁有許多良好的特性，
使得 Fat-Tree 拓樸在這近二十年來常常
成為研究單位以及產業界建置高效能大
量 平 行 處 理 (massively parallel 
processing，MPP)系統以及叢集系統所使
用的互連網路拓樸。 
除了硬體的選擇，軟體的搭配在叢
集系統中也是不可或缺。針對特定網路
架構特性研發互連網路通訊系統軟體，
尤其是針對高效能運算需求做最佳化以
及擴充，通常能讓叢集系統效能得到更
大的發揮。本計畫將研究基於 Fat-Tree
網路拓樸的 InfiniBand 叢集系統之建置
以及相關系統軟體及應用程式介面
（ Application Programming Interface, 
API）之開發。 
本計畫第一年的研究主軸為基礎
架構設計如下： 
基礎架構設計 
 網路拓樸 (Network Topology) 
 繞徑方法 (Routing Scheme) 
 網路管理 (Subnet Manager) 
 多點傳播 (Multicast) 
 模擬器 (IBA Simulator) 
◎網路拓樸與繞徑方法： 
我們選定 InfiniBand 架構以及
fat-tree拓樸，作為本計畫研究建置叢集
系統之互連網路的主題。以 InfiniBand
架構結合 fat-tree 拓樸來實作互連網
路，可以預期到以兩者本身具有的優勢
互相結合，該網路架構極為適合應用在
需要高速、高頻寬的互連網路環境如叢
集系統之連接。由於截至目前為止尚未
有相關的研究探討 InfiniBand與 fat-tree
的結合在叢集系統上的應用，並且
fat-tree拓樸的連結方式也有許多各種不
同的實作方法，因此本計畫剛開始的重
點將著重在研究如何有效地結合 IBA以
及 fat-tree，掌握這兩種架構各自的特
性，建構出基於 fat-tree拓樸的 InfiniBand
互連網路以用來連結叢集系統。 
◎網路管理： 
InfiniBand 的網路管理機制是由子
網路管理員(Subnet Manager, SM)程式
以 及 子 網 路 管 理 仲 介 (Subnet 
Management Agents, SMA)程式所共同
完成的，然而 InfiniBand Architecture 
Specification雖然定義了Subnet Manager
應該具有的功能及特性，但是對於如何
完成這些功能的機制或是演算法，例如
探索拓樸的演算法，當拓樸新增或刪除
其中的節點時如何更新路由表，使用什
麼路由演算法以及如何將計算好的路由
表散佈給各個交換機等，並沒有在規格
書中制定，使得在開發 Subnet Manager
時有更大的彈性來獲得更好的效能。 
在網路管理相關的研究中，我們將
會嘗試在以上所提出可以彈性實作的各
個部分發展更好的演算法來建構出一套
更有效率的 subnet manager機制。 
◎多點傳播： 
無論是平行計算或是多媒體應用
程式，我們不難發現很多都是以通訊傳
輸資料為瓶頸(communication-bounded)
的應用程式。在這樣的需求下，多點傳
播 (multicast)機制被廣泛地應用。
InfiniBand 網路架構提供了硬體支援的
多 點 傳 播 機 制 (hardware support 
mulitcast)。封包的複製是由交換器負
責。對於一個擁有多點傳播位址的封
包，交換器會複製所需的封包並將這些
封包傳遞(forward)到對應的連接埠。但
如何在 InfiniBand 上提供有效率以及避
免死結(deadlock free)的繞徑演算法仍是
重要的研究議題。我們將會針對基於
fat-tree 拓樸的 InfiniBand網路架構研發
提供有效率的多點傳播機制。 
◎模擬器： 
由於目前學術界尚未有合適的
InfiniBand模擬器，可以用來模擬我們提
出之基於 fat-tree拓樸的 InfiniBand互連
網路，因此我們需要開發一套 InfiniBand
網路模擬器，用來驗證我們所提出的各
種方法。 
4 
 
這樣的平行化設計建構在乙太網
路上，其發展在效能和可研展性的需求
已經到達了極限，InfiniBand高速網路架
構的提出之後，這樣的極限又有了新的
發展空間。 
本計畫的這個部份將針對上述缺
失，整合平行化檔案系統、平行化輸入
輸出，並結合 InfiniBand 的特點，內容
將包括： 
 平行化檔案系統： 
 遠端直接存取記憶體 (Remote 
Direct Memory Access, 
RDMA)。 
 檔案系統的檔案配置  (File 
Striping)。 
 平行化資料輸入輸出： 
 非 連 續 資 料 格 式 存 取 
(Non-contiguous File Access)。 
 多 點 資 料 分 散 收 集 
(Multi-node data 
Scatter/Gather)。 
 資料傳輸管理方面： 
 傳輸管理者  (Communication 
Manager)。 
三、 文獻研討 
◎網路拓樸與繞徑方法： 
Fat-tree 是一種通用的網路連接拓
樸，它可以有效地利用所有用來連接網
路的硬體資源 [18]。各種不同形式
fat-tree拓樸被使用在研究計畫以及實作
在一些商業的機器中 [19][24][26]。
Fat-tree 與傳統的樹狀結構最主要的差
異在於 fat-tree 比較類似真實生活中的
樹。傳統樹狀結構的連線通道頻寬是固
定的，因此當網路的負載很重的時候，
在接近樹根(root)的地方，將會產生很嚴
重的網路雍塞。而 fat-tree的連線通道被
設計成越接近樹根則連線通道頻寬就越
寬，這樣將可以有效地解決網路在高負
載的情況下雍塞的狀況。在一個基於
fat-tree的互連網路中，樹葉點(leaf node)
表示處理器，而中間的節點表示交換
器，連接這些節點的線代表雙向的資料
通道。圖一(a)為傳統的二元樹，圖一(b)
則是二元 fat-tree，我們可以發現二元
fat-tree的資料通道連線在越接近 root時
越寬，即表示同一時間內能允許更多資
料通過。圖一  (c)則是更詳細的二元
fat-tree，事實上二元 fat-tree是數個擁有
不同連接阜(port)數量的交換器，藉著使
用多條相同頻寬的連線同時連接，達到
增加頻寬的目的。 
(a) (b)  
External Connections
Processor
Switch
(c)  
圖一： (a) 二元樹 (b) 二元 fat-tree. 
(c) 詳細的二元 fat-tree連接法 
InfiniBand 網路是一種基於封包交
換 (packet-switching)的點對點網路架
構，所有連接在 InfiniBand 網路中的設
備如處理器，記憶體，儲存裝置等等之
間互相交換傳送的訊息以及資料，皆是
透過 InfiniBand 頻道介面卡 (channel 
adapter)包裝成一個一個的封包再送到
InfiniBand 網路之中，由網路中的
InfiniBand 交換器 (switch)或者路由器
(router)負責轉送這些訊息封包到目的地
再由目的地裝置的頻道介面卡接收這些
封包。至於這些封包該送往哪個輸出埠
(output port)全部都是由儲存在交換器以
及路由器裡面的轉送表(forwarding table)
決定，因此轉送表的設定便成為
InfiniBand網路中非常重要的一環，即使
採用的網路拓樸像 fat-tree 一樣具有再
6 
 
如圖二所示，一個 software DSM 
system 可以讓那些原來獨立的處理器共
享一個統一的位址空間，通常也稱作虛
擬共享記憶體空間。在這樣的系統裡，
任何一個處理器可以直接訪問整個虛擬
共享記憶體空間的任何位置[21]。在邏
輯上，每個處理器都有一個 software 
DSM layer，這個 software DSM layer負
責局部記憶體空間和虛擬共享記憶體空
間之間的位址轉換，更重要的是，它必
須維持整個虛擬共享記憶體空間的一致
性。也就是說，任何一個處理器的讀操
作(read operation)都應該保證能讀到最
新寫操作(write operation)所寫入的值，
而不管這個寫操作是在哪一個處理器上
執行的。這樣，從使用者的角度來看，
他們除了需要做一些計算工作的劃分以
外，就好像使用傳統的 sequential 
machine一樣方便。 
共享記憶體的程式模型比訊息傳
遞(message passing)模型要簡單的多，因
為程式設計者在寫共享記憶體的應用程
式的時候，只需要考慮任務的劃分，而
不需考慮資料的分布與傳遞，這也是
software DSM system得到廣泛研究的原
因。一個系統成功與否是由使用者來決
定的，提供給使用者一個友善的程式介
面有著很重要的作用。系統提供什麼樣
的程式介面包括兩方面：(1)對程式設計
者的基本要求，這主要是由記憶體一致
性模型來決定的，越嚴格的記憶體一致
性模型對程式設計者的要求越低。(2) 
共 享 記 憶 體 的 程 式 模 型 有 兩 種
SPMD(single program multiple data)和
SMP(symmetric multi-processor)，SPMD
是由訊息傳遞程式模式演進而來的，對
於熟悉 MPI或 PVM的使用者來說容易
接受。一般來說，系統應該提供一個容
易理解和簡單的程式介面，不應過度增
加程式設計者的負擔，而且其程式介面
應該儘可能接近傳統的共享記憶體系
統，以降低設計程式的難度，便於程式
移植。software DSM system的實作層次
與程式介面關係密切，在語言層次的系
統上設計程式，必須要學習新的語言，
非常麻煩，而在編譯器層次和函式庫層
次的系統上，使用者的負擔明顯減輕許
多。目前一般 software DSM system的程
式介面都是用標準的 C或 FORTRAN外
加函式來使用。 
◎平行檔案系統、平行化輸入／輸出以
及傳輸管理： 
目前在平行檔案系統以及平行化
輸入／輸出較具有規模的研究有以下兩
項︰ 
1. PVFS：Parallel Virtual File System 
PVFS [28]是由 Clemson 大學發展
的一套平行化檔案系統，將許多個人電
腦組成叢集式環境，致力於高效能和高
可延展性。共容於 Linux 作業系統，使
用者不需修改程式中檔案存取呼叫的
CPU
Cache
Local
Memory
CPU
Cache
Local
Memory
CPU
Cache
Local
Memory
……
Node 1 Node 2 Node N
Shared Virtual Memory Space
System Area Network
(InfiniBand, Myrinet, Ethernet...etc.)
圖二 共享虛擬記憶體空間 
8 
 
我們根據 Down/Up 無死結路由演
算法[34]做出包含探索拓樸、路徑計算
及路徑分佈的 subnet manager機制，並
在各項步驟使用比現有的 subnet 
manager[2][4]更好的方法以達到更有效
率的管理 subnet的目的。 
我們將針對探索拓璞、路徑計算及
路徑分佈等各分項工作研究出更有效率
的演算法或是機制，並把各分項工作整
合成一套 subnet manager的協定，且在
整合的過程中加以最佳化。最後將我們
的 subnet manager 機制和其他現有的
subnet manager 機制做模擬的評估及比
較，來證明我們的機制有更好的效率。 
多點傳播︰ 
多點傳播在平行的應用程式中是
常用的運算，因此多點傳播運算的效能
將會影響程式之運算以及通訊效能。在
基於 fat-tree拓樸的 InfiniBand系統區域
網路中進行多點傳播運算時，由於
fat-tree多路徑的特性將會使得資料封包
被複製了多次，造成封包大量重複的情
形出現，這些多餘的封包將會減低平行
程式的效能以及造成網路的雍塞，因
此，本項目的重點即是要研究如何利用
InfiniBand 所提供的硬體多點傳播支
援，設計出一套有效率的多點傳播機
制，使得多點傳播的工作能夠在最短的
時間完成，同時解決封包重複的問題， 
模擬器︰ 
這個項目的主要工作是依據 IBA
的規格書，以物件導向程式設計方法實
作出通用型 IBA網路架構的模擬器，以
用來驗證所提方法之可行性以及分析效
能。此模擬器需要具備有任意組成網路
拓樸的能力，以及實作出 IBA規格中所
定義的 Virtual Lane(VL)，cut-through 封
包轉送法以及流量控制等等必要的元
素，務求模擬器的表現以及實驗數據接
近真實硬體之情況。 
 
B. 第二年 
遠端直接記憶體存取︰ 
InfiniBand 具備一可有效率傳輸的
特性︰遠端直接記憶體存取 (Remote 
Direct Memory Access, RDMA)。遠端直
接記憶體存取(RDMA)與傳統網路傳輸
在程式邏輯上有很大的不同；傳統網路
傳 輸 介 面 多 採 用 傳 送 － 接 收
(send-receive)的機制，這種機制需要雙
方對稱的運作，傳輸需要有一方作傳
送，而另一方作接收的動作才能夠被完
成。而遠端直接記憶體存取機制最大的
不同就在於其僅需要一方的動作即可完
成，並不需要另一方作相對應的傳送或
接收動作；如此的機制相當適於分散式
共享記憶體系統作記憶體頁面抓取或更
新的動作。再者，遠端直接記憶體存取
機制已是 InfiniBand architecture(IBA)規
格內的一動作，故我們能夠將此一方便
且有效率的機制置入分散式共享記憶體
系統當中。除了與傳統傳送－接收運作
類似的動作之外，在 IBA中亦訂有遠端
記憶體存取-atomic的動作，此一運作即
如其名，能夠保證該動作為不可分割，
其對於分散共享記憶體系統當中維持同
步性的動作亦為一大利器。 
分散式共享記憶體系統︰ 
z 記憶體一致性︰ 
分散式共享記憶體系統使用分頁
複製(page replication)的方法來提供共享
記憶體環境，分頁的資料將會被複製並
傳送給需要存取的機器之上；要如何確
保在所有節點上的記憶體都能保持一
致，使程式結果不致於出錯就得靠一致
性維持模型了；嚴謹一致性模型（strict 
consistency)在每一次改變分頁內容時便
會觸發分頁無效(page invalid)的機制使
其他共享分頁的節點知曉分頁已過期的
情況，而在下一次的存取需求時再作分
頁更新的工作，這樣的模型雖然最相容
於真實共享記憶體環境，但因為每次的
10 
 
憶 體 存 取 這 項 特 性 達 到 零 複 製
(zero-copy)資料。傳統的資料傳輸方式
分為使用者模式和核心模式 (kernel 
mode)，使用者的資料儲存在使用者模式
的緩衝區(buffer)中，當需要透過網路傳
輸資料時，作業系統會在核心模式中要
求一塊記憶體緩衝區，將資料從使用者
模式複製到核心模式的緩衝區裡，最後
作業系統再將資料透過網路卡傳送出
去。在傳統的資料傳輸作法一定要透過
作業系統，額外的一次資料複製是無法
避免的。隨然記憶體資料複製速度極
快，然而在大量資料傳輸的情形下，也
累積了相當多複製的時間。RDMA讓使
用者直接從使用者模式存取遠端的記憶
體，不需要透過作業系統而達到零資料
複製。 
平行化資料輸入輸出： 
這部分將針對非連續資料傳輸設
計合適的描述方式以及傳輸管理介面。
InfiniBand 提供一個簡單的非連續資料
敘述方式，紀錄非連續資料中每一段資
料的開始位置、長度，這些資訊儲存在
一個分散收集列(Scatter/Gather List)的
資料結構中，透過這一個敘述，
InfiniBand 能由硬體支援將不連續部分
收集起來，傳輸至遠端電腦並儲存在記
憶體內連續的空間中。如圖三所示，這
樣的描述方式只支援單點(single node)
對單點的傳輸方式，也就是一次只能在
兩台電腦間傳輸資料。 
 
圖三 InfiniBand網路中的 RDMA傳輸資料 
在平行檔案系統中，資料需要從一
台電腦分散到許多電腦上，或從許多電
腦收集到一台電腦上，本計畫將延伸上
述描述方式，由單點對單點傳輸方式擴
展到單點對多點甚至多點對多點傳輸，
只需透過一個描述即可完成上述動作，
如圖四。 
 
圖四 多點傳輸資料示意圖 
資料傳輸管理： 
InfiniBand 網路架構有其特殊的網
路特性，包括佇列配對(Queue Pair)、資
料傳輸路徑和流量控制...等等，平行檔
案系統和平行輸入輸出介面都需要控制
這些基本網路資源，將這些網路部分獨
立成一個資料傳輸管理的物件，利於和
檔案系統及輸入輸出介面整合。
InfiniBand 提供了硬體支援的傳輸管理
者(Communication Manager)，本計畫將
擴充其功能來滿足我們的需求，協助完
成資料流在伺服器端(Server-side)和客
戶端(Client-side)間傳輸，並管理網路的
資源。 
五、 結果與討論 
下面我們歸納本計畫兩年來的主
要研究成果： 
• 網路拓樸：我們提出 m-port n-tree，
是一種以相同 port 數目的 switch 建
構 fat-tree網路拓樸的方式 [22]。 
• 繞徑方法：在 m-port n-tree InfiniBand 
network上面，我們提出了MLID的
繞徑方法，用以解決 InfiniBand網路
在 fat-tree 網路上面的定址以及繞徑
12 
 
[12] InfiniBand™ Trade Association, 
InfiniBand™ Architecture Specification 
Volume 1, Release 1.1, November 2002. 
[13] InfiniBand™ Trade Association, 
http://www.InfiniBandTA.com. 
[14] A. Jouraku, A. Funahashi, H. Amano, 
and M. Koibuchi,”L-turn routing: An 
Adaptive Routing in Irregular 
Networks,” the International Conference 
on Parallel Processing, pp.374-383, Sep. 
2001. 
[15] Tse-Ming Kao, "A Multithreaded DSM 
System with Thread Migration for 
Memory Locality over InfiniBand," 
Master Thesis, National Tsing Hua 
University, Hsinchu, Taiwan, July 2005. 
[16] Pete Keleher, “The Relative Importance 
of Concurrent Writers and Weak 
Consistency Models,” Proceedings of 
the 16th Int'l Conf. on Distributed 
Computing Systems (ICDCS-16), pp. 
91-98, May 1996. 
[17] Hsien-Tin Kuo, Jiazheng Zhou, Xuan-Yi 
Lin, and Yeh-Ching Chung, "An 
Efficient and Low Overhead Random 
Forwarding Table Construction Method 
for Deadlock-Free Routing Algorithms," 
Proceedings of IASTED International 
Conference on Parallel and Distributed 
Computing and Systems (PDCS), USA, 
November 2005, pp. 725-730. 
[18] C. E. Leiserson, “Fat-Trees: Universal 
Networks for Hardware-Efficient 
Supercomputing,” IEEE Transactions on 
Computers, vol. 34, no.10, October 1985, 
pp. 892-901. 
[19] C. E. Leiserson et al., “The Network 
Architecture of the Connection Machine 
CM-5,” in Proceedings of the 4th Annual 
ACM Symposium on Parallel Algorithms 
and Architectures, June 1992, pp. 
272-285. 
[20] Kai Li, “IVY: a shared virtual memory 
system for parallel computing,” 
Proceedings of 1988 International 
Conference on Parallel Processing, 
volume 2, pp. 94--101, August 1988 
[21] Kai Li and Paul Hudak, “Memory 
Coherence in Shared Virtual Memory 
Systems,” ACM Transactions on 
Computer Systems, 7(4):321-359, 
November 1989. 
[22] Xuan-Yi Lin, Yeh-Ching Chung, and 
Tai-Yi Huang, "A Multiple LID Routing 
Scheme for Fat-Tree-Based InfiniBand 
Networks," Proceedings of IEEE 
International Parallel and Distributed 
Processing Symposiums (CD-ROM), 
USA, April 2004. 
[23] P. López, J. Flich, and J. Duato, 
“Deadlock-Free Routing in InfiniBand™ 
through Destination Renaming,” in 
Proceedings of the International 
Conference on Parallel Processing, 
ICPP '01, Sept. 2001, pp. 427-434. 
[24] Meiko World Incorporated, Computing 
Surface 2 reference manuals, 
preliminary edition, 1993. 
[25] MPI-I/O, 
http://www-unix.mcs.anl.gov/mpi/ 
[26] H. L. Muller, P. W. A. Stallard, and D. H. 
D. Warren, “An evaluation Study of a 
Link-Based Data Diffusion Machine,” in 
Proceedings of the 8th International 
Parallel Processing Symposium, 
IPPS’94, (Cancun, Mexico), April 1994, 
pp. 115-128. 
[27] T. M. Pinkston, B. Zafar, and J. Duato, 
“A method for applying Double Scheme 
dynamic reconfiguration over 
InfiniBand”, In Proc. Int’l Conf. on 
Parallel and Dist. Processing 
Techniques and Applications, June 2003. 
[28] PVFS, 
http://www.parl.clemson.edu/pvfs/ 
[29] J. C. Sancho, A. Robles, J.Flich, P. 
López, and J. Duato, “Effective 
Methodology for Deadlock-Free 
Minimal Routing in InfiniBand 
Networks,” in Proceedings of the 
International Conference on Parallel 
Processing, ICPP '02, Aug. 2002, pp. 
48-57. 
[30] J. C. Sancho, A. Robles, and J. Duato, 
“Effective Strategy to Compute 
Forwarding Tables for InfiniBand 
Networks,” in Proceedings of the 
International Conference on Parallel 
Processing, ICPP '01, Sept. 2001, pp. 
48-57. 
