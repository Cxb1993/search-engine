利用禁忌搜尋及螞蟻演算混合模式進行營建工地配置規劃 
 
梁永魯   
立德管理學院資訊管理學系助理教授 
 
 
摘要 
臨時設施在營建工地施工過程中佔有重要地位，完善的設施對施工期長的營建工地更是重
要。適當的設施佈置，不僅提供施工人員到工地施工的便利性，而且也能降低營建的總成本。
在工地佈置規劃中，有許多不同的佈置替代方案，對每一個不同的規劃方案而言，它牽涉到
決定成本的多寡。在決定工地佈置的規劃技術中，傳統最佳化技術容易陷入局部最佳佈置的
解答空間，而不能有效降低成本。在這篇論文裡，智慧型的禁忌搜尋及螞蟻演算混合模式技
術成功地發展來解決工地設施佈置最佳化的問題。這個研究同時證明該混合模式技術在解決
工地設施佈置上，甚至超越基因演算法的效率。 
 
關鍵詞：營建工地配置，最佳化，禁忌搜尋法，螞蟻演算 
 
Hybrid Model of Tabu Search and Ant Algorithm for Construction Site Layout 
Planning 
 
 
Lou Y. LIANG 
Assistant Professor 
Department of Information Management, Leader University, 
Tainan 70946, Taiwan, R.O.C. 
 
 
ABSTRACT 
Site facilities layout varies with the duration and magnitude of the works. For the construction of 
long-term jobs, it is necessary to build temporary facilities with the entire amenity and services in 
the sufficient site layout. Basically, the estimates of initial layout planning are considered in 
evaluating the relative costs of a project. They are complied to successfully solve such problems. In 
this paper, an intelligent hybrid model of tabu search and ant algorithm technique has been 
developed to solve with some alternatives, have regard to decision-making and costs for every level 
of work in the project. A comparison is presented to demonstrate the efficiency of hybrid search in 
solving the site facilities layout problem. This study has indicated that hybrid search technique 
could have a significant impact and better than the genetic algorithms on the problem of site 
facilities layout arrangement. 
 
Key words: Site facility layout, Optimization, Tabu search, Ant algorithm 
 
 
 
 
 
 
 
 
 
I 
其中 
    (2) 














=
×
 
TCL....... TCL TCL
:    
:    
:    
TCL ...... TCL TCL
TCL........ TCL TCL
TCL
q Mkq2 Mkq1 Mkq
q Mk2 Mk1 Mk
q Mk2 Mk1 Mk
qqMk
,,,
,2,2,2
,1,1,1
)(
TCLMkij = MLmij  × C Mk                (3) 
MLmkij = FLMkij × Dij                                     (4) 












=
×
qMkqMkqMkq
qMkMkMk
qMkMkMk
qqMk
FL  ...........  FL FL
:   
:   
FL............  FL  FL
FL.............  FL  FL
FL
,2,1,
,22,21,2
,12,11,1
)(
 (5) 
DL(q×q) = 不同位置距離矩陣， Dij = 位置 i 及 j 間距離 
FMk(q×q) = 單位時間不同設施資源流通 Mk 頻率矩陣 
FMkr, s =單位時間設施 r 及 s 資源流通 Mk 頻率矩陣 
CMk = 資源流通 Mk 的距離成本，TCLMk(q×q) = 不同位置資源流通 Mk 總成本矩陣 
TCLMki, j =位置 i 及 j 資源流通 Mk 總成本矩陣 
MLMki, j = 單位時間不同位置 i 及 j 資源流通 Mk 總往返距離 
FLMk(q×q) =單位時間不同位置資源流通 Mk 頻率矩陣 
FLMki,j =單位時間位置 i 及 j 資源流通 Mk 頻率矩陣 
在佈置點中，距離矩陣 DL可用下列公式求出： 
Dij = |XLj – XLi | + | YLj-YLi |       (6) 
 
其中(XLi, YLi) 為位置 i 座標 
 
在往返設施頻率，矩陣 F可以用來計算其資源流通的數量，再這個模式中臨時設施的數量與
佈置點數目是相同的，如果佈置點的數目大於設施數量，則將假設增加一些臨時設施，其距
離及往返頻率將令其為零。 
 
2 
隨機選擇一點(位置 2) 
1  5  3  4  2  6
 
插入步移       插入點(位置 5之前) 
         
1  2  5  3  4  6
 
圖 1 插入步移法及交換步移法表示 
 
4.螞蟻演算法 
4.1  演算法則 
1992 年 Dorigo 等專家首先提出的螞蟻理論中，將螞蟻演算法(Ant Algorithm)應用於旅行
推銷員問題上，其後許多螞蟻理論相關研究，用在各個領域問題上做探討。螞蟻演算法是藉
由各路徑上費洛蒙(pheromone) 的分佈濃度，判斷下一個應該拜訪的城市。每個 iteration，
螞蟻將各自從不同的城市出發，在拜訪過所有城市後，回到該隻螞蟻的出發點，並且進行費
洛蒙濃度的更新。 其主要的搜尋機制有二: 其一為機率選擇規則，另一為費洛蒙濃度的更
新。Dorigo [6] 定義螞蟻在 i 城市選取下一個城市 j 的機率為:  
 



∈⋅
⋅= ∑
∈
allowed  j if              
))(()]([
))(())((
otherwise                                                   0
)(, βα
βα
ητ
ητ
tt
tttP
ijij
allowedk
ijij
k
ji  
其中 α,β 為控制參數，τij 是路徑(i,j) 存留之費洛蒙值，ηij 為啟發資訊，螞蟻演算法
中之α、β參數值設定能使系統快速地搜尋到最佳解，錯誤的參數值則會導致求解過程產生
發散或停滯不前的狀況。 
螞蟻選擇下一個拜訪城市的機率，是根據城市間能見度（距離的倒數）以及城市間費洛蒙濃
度兩者間的函數而定，其中，城市間的能見度在每個iteration 是相同的。 
 
4.2 費洛蒙濃度更新 
費洛蒙濃度則會在每隻螞蟻完成旅程後進行更新，以作為下一隻螞蟻在旅程中，選擇行經路
線的參考依據。費洛蒙濃度更新公式有兩種分別為局部更新及全面更新： 
 
1.局部更新: 
a. 螞蟻密度模式更新 
        ∆  

 +=
otherwise         0
 1  t  t  toime between t  j and i  from  goesant  k   theif        thQk
ijτ
 
b.螞蟻質量模式更新 
        

 +=∆
otherwise            0
1  t  t toime between t  j and i   from   goesant  k   theif     / thijk
ij
dQτ   
 
4 
40     0      0     0     0      0      0      0       0      0       0  
0     0      0     0     0     50     0      0       0      0       0  
0     0      0     0     0      0      0      0       0      0       0  
 0     0      0     0     0      0      0      0       0      0       0  
0     0      0     0     0      0      0      0       0      0       0  
 0     50    0     0     0      0      0     50      0      0       0  
0     0      0     0     0      0      0      0       0      0       0  
 0     0      0     0     0     50     0      0       0      20     30
0     0      0     0     0      0      0      0       0      0       0  
 0     0      0     0     0      0      0     20      0      0       0  
0     0      0     0      0     0      0     30      0      0       0  
=




















=
Mk
R
C
F
 
( c) 模板, FF 
8
0     0      0     0     0      0      0      0      0      0       0  
0     0      0     0      0     0      48    0      0      0       0  
0     0      0     0     0      0      0      0      0      0       0  
 0     0      0     0     0      0      0      0      0      0       0  
0     0      0     0     0      0      0      0      0      0       0  
 0     0      0     0     0      0      0      0      0      0       0  
0     48    0     0     0      0      0      0      0      0       0  
 0     0      0     0     0      0      0      0      0      0       0  
0     0      0     0     0      0      0      0      0      0       0  
 0     0      0     0     0      0      0      0      0      0       0  
0     0      0     0      0     0      0      0      0      0       0  
=




















=
Mk
F
C
F
 
(d) 預鑄成品, FC 
5.8
0
0
0
0
=




















=
Mk
C
C
0      0      0      48     0      0      0      0      0     20      28 
0      0      0      48     0      0      0      0      0      0       0   
0      0      0      0       0      0      0      0      0      0       0   
 48    48     0      0       0      0      0      0      0      0          
0       0      0      0       0      0      0      0      0      0          
 0       0      0      0       0      0      0      0      0      0       0   
0       0      0      0       0      0      0      0      0      0          
 0       0      0      0       0      0      0      0      0      0       0   
0       0      0      0       0      0      0      0      0      0       0   
 20     0      0      0       0      0      0      0      0      0       0   
28     0      0      0       0      0      0      0      0      0          
F
 
 
11 個座落位置相對的距離矩陣 D 如下：             
 




















=
0       49    23     38     40    52     44     29    22    31    19
 49     0       58    43     45    17     25     20    27    18    30
23     58     0       15     33    61     53     38    31    40    38
 38     43     15     0      18    46     38     23    36    45    53
40     45     33     18      0    28     20     25    38    47    55
 52     17      61     46    28     0      8      23     30    21    33
44     25      53     38    20     8      0       15    22    27    35
 29     20      38     23    25    23     15     0      13    22    30
22     27      31     36    38    30     22     13     0     9      17
 31     18      40    45    47    21     27     22    9      0      12
19     30      38    53    55    33     35     30    17    2 1      0
D
 
 
 
7.結果比較 
    本文中以 Cheung [3]的模式及其使用的基因演算法所得結果，作為主要比較參考。應用
禁忌搜尋及螞蟻演算混合模式，如同基因演算法一般，在不同的參數值下，表現出解品質的
6 
3. Cheung, S. O., Tong, T. K. and Tam, C. M. (2002). “Site pre-cast yard layout arrangement 
through genetic algorithms.” Automation in Construction, 11, 35-46. 
4. Glover, F. (1986). “Future Paths for Integer Programming and Links to Artificial Intelligence.” 
Computers Operations Research, 5, 533-549. 
5. Glover, F. (1993). A User's Guide To Tabu Search. Annals of Operations Research, 41, 3-28. 
6. Dorigo, M., Maniezzo, V. and Colorni, A. (1996). “The Ant System: Optimization by a Colony 
of Cooperating Agents.” IEEE Trans. Syst. Man Cybern. Part B, 26 (1), 29-41. 
 
計劃成果自評 
 
本研究已完成的成果如下： 
發展出一套禁忌搜尋及螞蟻演算法之混合模式演算法，並且利用所發展之演算法求解，評估
其求解能力。針對此混合模式演算法與營建工地配置規劃結合，並求得其最佳解，成功地分
析並且證實該混合模式演算之可行性及效率，可提供日後研究學者參考之用。另外本研究將
整理更詳細的內容來發表在學術期刊上。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
8 
