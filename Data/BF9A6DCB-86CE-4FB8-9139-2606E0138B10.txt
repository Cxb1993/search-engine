 1 
 
類比積體電路重複設計次數降低之研究 
“A Study on the Reduction of Re-design Iterations in Analog Integrated Circuit Design” 
計畫編號：NSC 98－2221－E－155－053 
執行期間：98 年 8 月 1 日 至 99 年 7 月 31 日 
計畫主持人：曾奕倫  元智大學資訊工程學系(所) 助理教授  
 
一、中文摘要 
在一個考慮佈局圖效應的類比積體電路設計
方法中，切割含參數多邊形是一個重要的步驟。
為了處理複雜的含參數多邊形的限制條件，研究
人員曾經使用限制規劃的技術，並且用於可以切
割含參數多邊形的演算法內。雖然限制規劃的方
法可以用來處理非常複雜的限制條件，但是，以
限制規劃為基礎的含參數多邊形切割演算法執
行速度相當的耗時。在這個研究當中，我們開發
了一個新的含參數多邊形的切割演算法，該演算
法是使用混合整數線性規劃的技術，並且，該演
算法可以用來切割 45 度角之含參數多邊形。由
實驗結果顯示，新的演算法的執行速度，最高可
以比之前的方法快 150 倍以上。 
二、英文摘要 
Partitioning parameterized polygons is an 
essential process in a proposed layout-aware 
analog integrated circuit design flow. To deal with 
constraints associated with parameterized polygons, 
constraint programming (CP) technologies have 
been used in a previous partitioning algorithm. 
Although CP solvers are capable of coping with 
complex constraints, CP-based partitioning 
processes can be very time-consuming. In this 
research, we developed a new partitioning 
algorithm which used mixed integer linear 
programming (MILP) technologies in the 
partitioning of parameterized 45-degree polygons. 
Experimental results showed that more than 150X 
speedup can be achieved for partitioning 
parameterized polygons containing very complex 
constraints. 
三、關鍵詞 (keywords) 
類比電路佈局圖設計 (analog layout design), 
預估寄生元件的值 (parasitics estimation), 含參
數多邊形 (parameterized polygons), 切割多邊形 
(partitioning of polygons), 混合整數線性規劃 
(mixed integer linear programming)。 
四、前言 
Traditional analog integrated circuit design 
methodologies split circuit synthesis and physical 
layout design into different phases. Since analog 
circuits are usually very sensitive, physical layout 
effects, such as parasitics, can have significant 
influence on the performance and even the 
functionality of the design. Lack of considering 
layout effects in the circuit synthesis phase can 
result in numerous re-design iterations. Developing 
new analog design flows, methodologies, and 
automation tools are thus required in order to solve 
the problem. 
五、研究目的 
This research project is aimed at reducing 
re-design iterations which occur in traditional 
analog integrated circuit design flow. 
六、文獻探討 
In the design of analog integrated circuits, it is 
essential to consider the effects of layout-induced 
parasitics early in the design flow [1, 2]. Lack of 
considering parasitics early (e.g., in the circuit synthesis 
phase) may result in numerous re-design iterations, 
which include repetitive runs of circuit sizing, circuit 
simulation, physical layout generation, parasitics 
extraction, and post-layout simulation. Moreover, in 
extreme cases, the design may never converge. 
To solve the problem of re-design iterations arising 
in analog integrated circuit design, many layout-aware 
circuit synthesis methodologies have been proposed 
[3-6]. Among them, the methodology based on 
parameterized polygons [5] allows parasitics to be 
 3 
Cn, !Cn+1}, then the constraint Cn+1 can be derived 
from the set of constraints {C1, C2, … , Cn}. 
The comparison procedure is detailed below. 
COMPARE(inputConstraints, fa, fb) 
Input. A set of constraints, inputConstraints, and two linear 
expressions, fa and fb. 
Output. Return 0 if fa = fb, return -1 if fa < fb, return 1 if fa > fb, 
and show error messages if otherwise. 
1. result1  HasSolution(inputConstraints, fa, fb, “ ”) 
2. result2  HasSolution(inputConstraints, fa, fb, “ ”) 
3. if reslut1 is TRUE and result2 is FALSE then 
4.     Return 0 
5. result3  HasSolution(inputConstraints, fa, fb, “ ”) 
6. result4  HasSolution(inputConstraints, fa, fb, “ ”) 
7. if reslut3 is TRUE and result4 is FALSE then 
8.     Return -1 
9. result5  HasSolution(inputConstraints, fa, fb, “ ”) 
10. result6  HasSolution(inputConstraints, fa, fb, “ ”) 
11. if reslut5 is TRUE and result6 is FALSE then 
12.     Return 1 
13. Show error messages and exit the program since fa and fb 
cannot be compared. 
In our implementation of the comparison 
procedure, a hash table (not shown in the pseudo 
code) is used to store comparison results so that 
comparisons that have previously been carried out 
do not need to be performed again. The procedure 
HASSOLUTION(), which is invoked by the 
comparison procedure, is outlined below. 
HASSOLUTION(inputConstraints, fa, fb, relation) 
Input. A set of constraints, inputConstraints; two linear 
expressions, fa and fb; and the relational operator of 
the two linear expressions, relation. 
Output. Return TRUE if an MILP solver can find a solution 
under the constraints (which include 
inputConstraints and the constraint whose left side 
is fa, right side is fb, and the relational operator is 
relation), and return FALSE if otherwise. 
If the relational operator of a constraint is “”, 
“ ”, or “ ”, the constraint usually can be directly 
specified by an application programming interface 
(API) function which is provided by an MILP 
solver package. If the relational operator of a 
constraint is “ ”, the constraint may need to be 
converted. Specifically, the constraint (A   B) 
can be converted into the following two constraints: 
(A – B)   M1BV – 1 
(B – A)   M2 (1 – BV) – 1 
In the above constraints, A and B are linear 
expressions, and both of their values must be 
integers. Additionally, BV is a binary variable 
(whose value can only be 0 or 1), and M1 and M2 
are constants whose values should be sufficiently 
large. For other types of relational operators, the 
constraint (A   B) can be converted into (A   B – 
1), and the constraint (A   B) can be converted 
into (B   A – 1). As a result, all of these converted 
constraints can be directly specified by API 
functions of an MILP solver package. To further 
improve the performance of the comparison 
procedure, on the other hand, the procedure can be 
parallelized since each invocation of 
HASSOLUTION() can be executed by a single thread 
or process. 
八、結果與討論 
The proposed comparison procedure and the 
partitioning algorithm have been implemented in 
Java programming language, and the Gurobi 
Optimizer version 3.0.1 (released in the year of 
2010) was used to solve formulated MILP 
problems. Experiments were carried out on a 
workstation which had an Intel Core 2 Quad 
Q9550 2.83GHz CPU and 8GB of DRAM. Table II 
shows the results of partitioning Polygons 1 and 2 
(defined in [5]) with different values of k, and 
Table III shows the results of partitioning Polygon 
A (defined in this report). All of these polygons 
were designed to have very complex constraints. 
For all of these parameterized polygons, the new 
MILP-based partitioning algorithm outperforms 
the CP-based partitioning algorithm. Parameterized 
polygons containing only simple constraints can be 
partitioned nearly as fast as partitioning 
fixed-coordinate polygons. 
We proposed the use of an MILP solver in 
solving comparison problems occurring in the 
partitioning of parameterized 45-degree polygons. 
The new MILP-based algorithm is capable of 
partitioning not only parameterized orthogonal 
polygons and parameterized 45-degree polygons, 
but also fixed-coordinate orthogonal polygons and 
fixed-coordinate 45-degree polygons. Compared 
with the algorithm proposed in [5], in addition, the 
new MILP-based algorithm is very efficient. The 
proposed partitioning algorithm can be used as the 
TABLE I.  NEGATION OF EACH RELATIONAL OPERATOR 
Relational Operator 
Negation of the Relational 
Operator 
   
    
   
   
    
   
 
 5 
[4] I-Lun Tseng, Huan-Wen Chen, Che-I Lee, and Adam 
Postula, “Constraint-Based Dogleg Channel Routing 
with Via Minimization,” In Proceedings of the 12th 
International Conference on Artificial Intelligence 
(ICAI), Vol. 2, pp. 666-672, Las Vegas, Nevada, USA, 
2010.  (Regular Research Paper)  (acceptance rate: 
28%)  (EI, DBLP) 
[5] I-Lun Tseng, Che-I Lee, Huan-Wen Chen, and Adam 
Postula, “Decomposition of Parameterized 
Orthogonal Polygons via Formal Transformations,” In 
Proceedings of the International Conference on 
Digital Content (ICDC), pp. 871-877, Taiwan, 
December 2009. 
[6] 李哲逸, “以限制規畫與混和整數線性規畫為基礎
之 可 避 開 障 礙 物 的 交 換 盒 繞 線 器 
(Obstacle-Avoiding Switchbox Routers with 
Constraint Programming and Mixed Integer Linear 
Programming),” 碩士論文，元智大學資訊工程學
系(所)，2010年 9月。 
[7] I-Lun Tseng, Estimation of Analog Layout Parasitics 
with Parameterized Polygons: Algorithms for 
Partitioning Parameterized Polygons, LAP Lambert 
Academic Publishing, December 2009.  [ISBN: 
978-3838330303] 
 
1 <= a <= 100 
1 <= c <= 100 
1 <= d <= 10 
1 <= e <= 10 
1 <= f <= 1000 
1 <= g <= 1000 
1 <= h <= 1000 
1 <= i <= 1000 
1 <= j <= 1000 
1 <= k <= 1000 
1 <= m <= 1000 
1 <= n <= 1000 
10001 <= p <= 90000 
1 <= q <= 1000 
1 <= r <= 1000 
1 <= s <= 1000 
1 <= t <= 90000 
1 <= u <= 1000 
1 <= v <= 90000 
1 <= w <= 90000 
f > g+4d 
s > c-2d-3e+10-a 
s < c+2d-3e+10-a 
s > q 
q < c-6d-3e+10-a 
t > 10000+4d+a 
t < 10000+3m-3n 
4d+a == 2m-2n 
v < 10000+m-n 
v > 10000 
w < 10000+2m-2n 
w > 10000+m-n 
s > q-c+2d+3e-10+a+q 
2a-2d == c-2d-3e+10-a-q 
m < q-c+2d+3e-10+a+q-2a+2d-k 
c-6d-3e+10-a > q-c+2d+3e-10+a+q-2a+2d 
i > q-c+2d+3e-10+a+q 
q-c+2d+3e-10+a+q > i-j 
i-j > i-6d 
i-6d-n == 2a+4d+p-10000-4m+4n 
i-6d > q-c+2d+3e-10+a+q-2a+2d 
r < g 
r > g-4d 
k < i-6d-m 
p > t 
p < p-2d+2a 
h < g-4d 
m > n 
i < u 
u < q 
4m-4n+10000 < 2a-2d+p-q+u 
c-6d-3e+10-a < s 
q < c-2d-3e+10-a 
u < c-6d-3e+10-a 
v < 10000+3m-3n 
c+2d-3e+10 > s 
c+2d-3e+10 > c+2d-3e+10-a 
s > q-c+2d+3e-10+a+q-2a+2d 
s > q-c+2d+3e-10+q-a 
i < c-6d-3e+10-a 
a-c+2d+3e+2q-10 < c-6d-3e+10-a 
a-c+2d+3e+2q-10 < u 
i-6d < c-6d-3e+10-a 
i-6d < a-c+2d+3e+2q-10 
v < w 
4d+3e+2q-10-a-c < q 
4d+3e+2q-10-a-c < i 
4d+3e+2q-10-a-c < i-j 
2a-2d+p > v 
p > v 
p > m-n+10000 
2a-2d+p > t 
c-4d-3e+10-a < s 
2a-2d-i+p+q > t 
2a-2d+p > 3m-3n+10000 
h < r 
f > c+2d-3e+g-1s+10-a 
a < 16d-c+3e-i+2q-10 
Figure 2.  The list of constraints of a parameterized polygon (Polygon A). 
TABLE II.  COMPARISONS OF CPU TIMES FOR CP-BASED AND MILP-BASED PARTITIONING ALGORITHMS 
 CP-Based Partitioning Algorithm [5] MILP-Based Partitioning Algorithm 
Polygon 1 Polygon 2 Polygon 1 Polygon 2 
  k = 1,000 1.66 sec. 1.46 sec. 0.55 sec. 0.69 sec. 
  k = 100,000 1.66 sec. 8.28 sec. 0.55 sec. 0.69 sec. 
  k = 200,000 1.66 sec. 15.47 sec. 0.55 sec. 0.69 sec. 
  k = 500,000 1.66 sec. 38.97 sec. 0.55 sec. 0.69 sec. 
TABLE III.  COMPARISONS OF CPU TIMES FOR CP-BASED AND MILP-BASED PARTITIONING ALGORITHMS 
 
# of Vertices 
# of Trapezoids 
Partitioned 
CP-Based Partitioning 
Algorithm [5] 
MILP-Based Partitioning 
Algorithm 
Speedup 
Polygon A 67 33 872.39 sec. 5.62 sec. 155X 
 
 
Figure 3.  The geometric structure of a parameterized 
45-degree polygon (Polygon A). 
 7 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
 
以設計一個混和訊號的系統單晶片  (Mixed-Signal System-on-a-Chip, or 
Mixed-Signal SoC) 來說，設計該晶片的類比電路所花費的時間通常會超過設計該
晶片的數位電路所花費的時間。因此，持續不斷地從事與類比積體電路設計自動化
相關的研究，對積體電路設計以及整個半導體產業都非常的重要。 
本研究團隊採用以含參數多邊形為基礎之類比電路設計方法，使用該方法可以
改善類比電路設計過程中的重複設計 (re-design iterations) 的問題，進而減少設計
類比電路所花費的時間。由於此研究計畫經費的補助，本研究團隊已經改良切割含
參數多邊形的演算法，由實驗結果證明，新的演算法的執行速度可以比之前的方法
快 150 倍以上。在未來，我們將持續開發與含參數多邊形相關的演算法，以及與
類比積體電路設計自動化相關的研究。 
 
 
                
 2 
IF-THEN-ELSE 類型的 constraints。 
在 ICAI’10 所發表的論文，將會被送到 EI, DBLP, 以及 IET Inspec 等檢索 
(index) 資料庫進行歸檔，該作業預計會在 10 月底完成。並且，本研究團隊此次所發
表的論文，被 ICAI’10 歸類為 Novel Applications & Methodologies，可見主辦單位對
於 ICAI 會議以及我們所發表的論文的重視程度。在未來，本研究團隊也會繼續將 
ICAI 當成投稿的目標之一。 
由於此次所發表的論文有不錯的評價，本研究團隊已經將我們所提出的方法予以
改良，並且已經在近期投稿到  SCIE 等級之期刊。在未來，我們也會嘗試應用 
constraint programming 的技術於解決其他的問題上 (包含 VLSI design automation 與 
analog design automation 的相關問題)。 
三、考察參觀活動 (無是項活動者略) 
無。 
四、建議 
Worldcomp 總共包含 22 個國際會議，涵蓋的範圍相當廣 (例如：硬體設計、嵌
入式系統、演算法、平行處理、網路、無線網路、軟體工程、人工智慧、計算生物學、
電腦圖學、影像處理、電腦科學等)。而且，發表在 Worldcomp 的論文，可以在幾個
主要的檢索資料庫 (e.g., EI, DBLP, Inspec) 查詢到資料。另外，會議期間在暑假，也
是其優點。 
五、攜回資料名稱及內容 
所攜回的資料包含：Worldcomp 2010 之會議論文集光碟一片  (含所有 
Worldcomp 2010 之所有會議的論文電子檔)、ICAI 2010 之紙本會議論文集第二冊 
(Volumn II)、與會者之姓名牌、會議報名/註冊之收據、印有會議標誌之手提袋一個。 
六、其他 
無。 
 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：曾奕倫 計畫編號：98-2221-E-155-053- 
計畫名稱：類比積體電路重複設計次數降低之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 4 2 100% 
篇 
 
論文著作 
專書 1 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
