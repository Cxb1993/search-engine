行政院國家科學委員會專題研究計畫成果報告 
 
以生物分子結合探討奈米藥物傳輸系統 
A study of nano drug delivery system based on biomolecular binding 
 
計畫編號：NSC 95-2221-E-366-020-MY2 
執行期限：95 年 8 月 1 日至 97 年 10 月 31 日 
主持人：董信煌   樹德科技大學資管系 
摘要: 本計畫是一個二年期計畫以分子結合的眼光來探討藥物傳輸系統。在第一年度
的研究中我們使用文件探勘的方法來自動篩選在探討蛋白質交互作用的生醫文件。這
是一項二元分類的問題，有許多機器學習演算法可應用於此分類預測問題。然而要得
到好的分類效果就必須使用好的屬性來替文件編碼。我們使用字瀕的向量模式替生醫
文件編碼，再使用資訊獲利量，t-檢定(Baldi and Long, 2001)，潛在語意索引及基因演
算法加支持向量機的包裝法來選擇屬性。經由實驗分析，Baldi and Long的t-檢定法可
以使用最少的資源來挑到最好的屬性。第二年度的研究重心則是以蛋白質序列為基礎
來預測兩條蛋白質序列是否會結合，使用Database of Interacting Proteins (DIP)的酵母菌
(S. cerevisiae)結合資料庫為實驗平台，本研究證實可以使用核融合的技術整合蛋白質
序列的不同觀點(包括一級及二級結構資訊)達成預測的目的。整體而言，本計畫是先
以文獻的眼光探討蛋白質的結合，之後再從蛋白質序列本身來研究生物巨分子的結
合。 
 
關鍵字:文件探勘、分子結合、潛在語意索引、核融合、分類預測 
 
Abstract: This is a two year project discussing drug delivery systems from the viewpoint of 
molecular binding. In the first year, we used techniques from text mining to automatically 
filter biomedical documents that are related to protein-protein interactions. This is a binary 
classification problem, and many machine learning tools exist for this task. In order to get 
good results, it is important to encode documents with right attributes. We first used term 
frequency vector space model to encode a biomedical document, then applied various feature 
selection methods to find the set of proper features. These methods include information gain, 
t-statistics from Baldi and Long (2001), latent semantic index and a wrapper method of 
genetic algorithm plus support vector machine. It is found that the t-statistics from Baldi and 
Long (2001) can provide efficient feature selection with minimum computing resources. In 
the second year, we focus directly on the protein sequences themselves to predict whether 
two sequences will bind together. Using the Database of Interacting Proteins (DIP) as an 
experimental platform, we show that kernel fusion can be used to integrate different 
perspectives of protein sequences including primary and secondary structure to predict the 
binding of two protein sequences. Overall, this project started with a text mining technique to 
find out documents discussing protein interactions, and proceeded to use the protein 
sequences directly to predict the molecular binding of such sequences. 
 
Keywords: text mining, molecular binding, latent semantic index, kernel fusion, classification 
prediction 
 
2. 研究方法 
 
第一年計畫: 文件探勘 
 
本計畫的第一年是以資訊檢索(information retrieval)的方法來自動篩選出 PPI 相關的文
件。首先假設我們有一堆生醫文件，譬如說從 NCBI 網站下載了一些文件，這些文件
有些是在討論 PPI 相關的文件(稱為 PPI positive)，有些則不是(稱為 PPI negative)。為
了降低維度及可能的雜訊影響，因此對這些文件先做 Porter 字根(stemming)處理、常用
字(stop-word)處理及去除出現頻率太低的字。一般而言，經由這些前置處理的工作之
後，剩下來的關鍵字個數還是會很多，如何做有效的屬性選取是應用機器學習的重要
議題。在這個 PPI 相關文件探討中，首要的目標是選取屬性並搭配合適的演算法來改
善預測率。一般常用的屬性選取有三種方法 
 
1. 過濾法 (filtering): 先用一個獨立於分類演算法之外的技術挑出屬性，再使用這
些屬性及分類法來做訓練及預測。 
2. 包裝法 (wrapper): 這裡屬性選取就與所選取的演算法有關了，譬如說我們以
SVM 為分類機制，則包裝法會變成一個搜尋問題 – 如何找到各個原始屬性的組
合，使得 SVM 利用這些屬性組合來預測時效果會是最好的。 
3. 混合法: 混合前述的兩種技術。 
 
我們以四種方法來粹取 PPI 文件探勘的重要屬性，分別討論於下: 
 
1. 使用資訊獲利(IG)的過濾法 
 
這是許多文件採掘所使用的方法。資訊量可以使用Shannon的謪(entropy)的概念來
計算，一個集合的entropy越大代表其資料的分佈越亂。假設訓練集中有np筆PPI 
positive及nn筆PPI negative的文件，則它的資訊量可以用I(np, nn)來代表: 
)(log)(log),( 22 nm
n
nm
mnmI +−+−=  
當我們把訓練集依每份文件是否包含一個關鍵字，譬如說 “interact”，分為兩類時
可得到兩個子集合S={d | d 含 “interact”}, T={d | d 不含 “interact”}。假設S中有m1及
m2個PPI positive及PPI negative的文件，T中有n1及n2個PPI positive及PPI negative的
文件，使用 “interact”為屬性來判斷PPI相關的問題可得到如下的資訊量 
),(
||||
||),(
||||
||),( 2121 nnITS
TmmI
TS
STSA +++=  
基本上就是 S 與 T 子集合資訊量的加權平均。如果 “interact”是個很好的關鍵字，
那麼它所提供的資訊獲利 
),(),( TSAnnIIG np −=  
將會很大。IG 的過濾法就是利用上述的方法來篩選出 IG 最大的前幾個關鍵字，
必須注意的是在使用 IG 法時只能用訓練集來篩選關鍵字，因為我們必須假設測試
集文件的類別是未知的。 
 
2. 使用統計方法來挑關鍵字的過濾法 
 
Baldi and Long (2001)在探討基因表現量的分析中使用 t 檢定來篩選特定基因的表
件q在k個最顯著的潛在語意之下的座標。在正常情況之下，k 比秩(r)還要小的
多，因此，SVD可以視為一種特徵縮減的方法。 
使用潛在語意索引來粹取屬性時可以考量所有的文件(包括訓練集和測試集)，
因為 LSI 的粹取並不需要使用到測試集的文件類別判斷。相對應於前述的兩種方
法只能用訓練集來粹取關鍵字，LSI 的做法確實擁有很大的優點。為了要能與其
它方法相比，在本研究中我們做了一些調整。當我們計算 SVD 分解時將只以訓練
集的矩陣來做，擇定了索引個數 k 之後再以(2)式來計算測試集中的文件之向量模
式。此法稱為 folding-in 的方法(Berry et al., 1994)，它俱有能以最精簡的方式來新
增文件或字詞到原始已找到潛在語意索引的資料集中。 
 
4. 以基因演算法加 SVM 的包裝法 
 
如前所述包裝法是以一特定分類法為技術，在眾多屬性組合中搜尋最佳的組合來
決定屬性。在此我們以基因演算法(Genetic Algorithm, GA)為搜尋法，SVM 為分類
演算法。基因演算法俱有強大的搜尋能力而 SVM 則有優良的分類效能，因此若能
結合此二演算法來找尋合理的屬性，或許能提升 PPI 文件探勘的功效。 
 
第二年計畫: 整合不同來源資訊預測分子結合 
 
本年度我們將從序列及結構的觀點來探討兩條蛋白質的結合。文獻中已有許多在探討
PPI 的研究結果，事實上這可分為兩種問題來看: (1) 給定一組蛋白質序列，是否能推測
它們會結合; 及(2) 若已知它們會結合，試找出連結的區域。在本年度中，我們延續上
年度的研究議題，因此使用第一個問題為研究主題。文獻中有許多探討兩條蛋白質是
否會結合的預測問題，因為兩條蛋白質序列長度不同，如何把它們表示成相同長度的
向量或是其它特定的屬性，使得機器學習的分類演算法可以應用是這個問題困難之
處。如同上一年度處理文件問題一般，這也是一個屬性選取的問題。 
Chen and Liu (2005) 認為蛋白質的領域(domain)是會發生 PPI 的重要特徵，因此他
們使用 domain 來編碼。首先找出訓練集及測試集中的所有 domain，每一個 domain 對
應了一個分量，該分量的值就決定於考量中的兩條蛋白質共擁有多少個對應的 domain: 
若兩條蛋白質都沒有此 domain 則分量值為 0，若只有一條蛋白質有此 domain 則分量
值為 1，若兩條蛋白質都有此 domain 則分量值為 2。之後，Chen and Liu (2005)使用訓
練集中的蛋白質組及 random forest decision tree 演算法來訓練分類器，並把它用來預測
測試集中的蛋白質組。Liu et al. (2005) 則使用跨不同物種的資料先估計 domain-domain
間交互作用的機率值，再以此資訊及最大概似法來預測酵母菌中的 PPI。Aytuna et al. 
(2005) 結合序列與結構的方式來預測 PPI。他們使用一個簡單的假設: 假如已知蛋白質
A 及 B 會結合，而蛋白質 a 與 A 在結合點結構類似(由序列的相似度來判斷)，蛋白質 b
與 B 在結合點結構類似(由序列的相似度來判斷)，則蛋白質 a 與 b 應該也會結合。在
此法中，要事先知道結合點的位置所在。 
上述方法都使用結構特徵來替蛋白質組(protein pair)編碼，Bock and Gough (2001) 
則只使用序列及氨基酸的物理化學條件(如親水性、極性、溶水表面積等)當做預測屬
性。在 Bock and Gough 的方法中，他們基本上是用統計量(如某一氨基酸所佔的比例等)
來特徵化一條序列(Dubchak et al., 1995)。此外，Han et al. (2004) 也使用 Dubchak et al. 
(1995)的編碼方式來預測會與 RNA 連結的蛋白質是那些蛋白質，但是他們不預測一組
蛋白質序列是否會結合。 
在本年度中，我們將整合不同的資訊來源預測一組蛋白質序列是否會結合。假設
是其結構編碼。因此每一組訓練集中的protein-protein組合或測試集中的protein-protein
組合，都有相同函意的等長度編碼。此時，可以使用單一SVM來做分類器。 
 
A2: 把序列及結構編碼分開處理，並用Lanckriet et al. (2004a, 2004b)中的核熔合的方法
將它們整合起來。也就是說序列編碼(Sp, Sr)的部分可以用核函數K1，而結構編碼 (Tp, 
Tr)的部分可以用核函數K2來分開處理，之後為了能同時處理序列及結構資料，我們考
量核函數的線性組合 
 
0,0, 212211 ≥≥+= µµµµ KKK  
 
其中的 1µ 及 2µ 分別是代表了序列及結構方面的資料之權重。Lanckriet et al. (2004b)證
明了最佳化的 1µ 及 2µ 權重是可以透過一個二次限制的二次規劃 (Quadratically 
Constrained Quadratic Programming, QCQP)問題來求得: 
 
C
y
iydiagKydiagnt
cte
T
i
T
T
t
≤≤
=
=≥
−
α
α
αα
αα
0
0
2,1,)()()/1(
2max
,
r
rr
r
 
 
這個 QCQP 是半正定規劃(semipositive programming)問題的一種特例，而且它有很有效
的數值解法。常見的 SVM 如 A1 是一個一次限制的二次規劃問題，它與上述的 QCQP
最大不同點在於它條件限制的地方都是一次式，而上述的 QCQP 則有二次式的條件限
制。Lanckriet 等人並以實際的例子來說明如何熔合不同的資料而得到比單一的 SVM
核函數還要好的效果。他們認為加入了 1µ 及 2µ 權重可以讓我們去分別強調序列與結構
的重要性，而 QCQP 所解出來的 1µ 及 2µ 權重正好代表了這兩類型的屬性之最佳組合。 
 
3. 實驗分析 
 
根據上節的研究方法我們進行實驗設計及資料分析。 
 
第一年計畫: 文件探勘 
 
3.1. 資料收集 
先從 NCBI 網站使用 interact 及 engage 等為關鍵字搜尋生醫文件摘要，之後再使用人
工閱讀的方法來判斷一篇文件是 PPI positive (P)或 PPI negative (N) 類別。這樣共收集
了 1000 篇文件，其中 600 篇為 P 類別 400 篇為 N 類別。 
 
3.2. 資料前處理 
使用 Porter 演算法(http://www.tartarus.org/~martin/PorterStemmer/)對 1000 篇文件做字根
處理再隨機的把它們分成兩等份。training set 有 500 篇文件，其中 300 篇為 P 類別 200
篇為 N 類別; 剩餘的 500 篇為 testing set，其 P, N 類別分佈如 training set 一般。對於
training set 的 500 篇文件，使用 rainbow 軟體(http://www.cs.cmu.edu/~mccallum/bow/)來
擷取關鍵字並去除掉出現少於 6 篇文件的關鍵字。如此共可得到 1157 個字，我們將以
此 1157 關鍵字及字瀕方法來替 training set 及 testing set 的文件編碼。 
由這些實驗中我們發現一些有趣的現象: 
 
(1) 基本上 t-檢定選出的 500 個關鍵字與 IG 選出的 500 個關鍵字有很大的重疊性，這
表示此二種方法有很強的關連性。 
(2) 使用 GA+SVM 的包裝法是最花費時間的方法，雖然我們只設定了 50 代的演化次
數，但是其所花費的時間仍比其他方法多出好幾倍。 
(3) 除了 LSI 的方法之外，其他的幾種方法在 testing set 上的正確率都比基本的方法(使
用全部關鍵字)還要好。 
 
由於 LSI 並沒有預期的效果好，我們認為可能是使用 LSI folding-in 方式來計算 testing 
set 上文件的步驟出了問題，因此以重新計算(LSI recompute)的方式來替 testing set 文件
編碼。也就是說以 training set 的 1157 個關鍵字替 training set 及 testing set 的 1000 篇文
件編碼得到 1157x1000 的詞彙-文章矩陣，之後使用 SVD 分解此矩陣並取得前 500 大
的潛在語意索引編碼，再利用 SVM 於 training set 及 testing set 上的訓練及預測工作。
而為了防止過多的索引造成的雜訊問題，我們也試著使用 100，200，300 及 400 個潛
在語意索引。實驗結果如下 
 
使用 LSI recompute 分解 Training set 正確率 Testing set 正確率 
100 索引 97.8% 81.0% 
200 索引 96.6% 79.2% 
300 索引 99.0% 76.0% 
400 索引 99.6% 76.6% 
500 索引 100% 74.4% 
 
 
第二年計畫: 整合不同來源資訊預測分子結合 
 
3.5. 資料收集 
我 們 從 Database of Interacting Protein (DIP, http://dip.doe-mbi.ucla.edu/) 中 下 載 S. 
cerevisiae基因體的蛋白質結合資料庫(Gavin et al., 2002)，共計有 1361 條蛋白質參與了
3222 個分子結合互動。Gavin et al. (2002) 使用 bait-and-prey的方式探討酵母菌基因體
中的蛋白質結合情況，由於是整個基因體的探討，因此可以假設未列入DIP資料庫中的
蛋白質組，就是不結合的蛋白質組(即分類的負樣本)，而DIP資料庫中的蛋白質組則是
結合的蛋白質組(即分類的正樣本)。 
 
3.6. 資料前處理 
從上述的 DIP 酵母菌資料庫中，我們挑出參與結合互動的兩條蛋白質序列長度都是在
400 個氨基酸之內的序列組，共計有 572 組並使用了 384 條蛋白質序列，這 572 組蛋白
質序列成為實驗的正樣本。實驗的負樣本則是由 384 條蛋白質序列中，隨機組合兩條
序列並驗證它們的組合不在正樣本中，以這種方式我們也組合出 572 個負樣本。 
由一級結構(序列)資料衍生出來的屬性有帶電性(中性、正電、負電)及親水性
(hydrophobic 及 hydrophilic)兩種，這些衍生屬性可以由氨基酸的類別直接判讀出，例
如氨基酸 F 是中性及 hydrophobic。使用 Dubchak et al. (1995)編碼帶電性及親水性，而
序列本身則只計算每個氨基酸的組合量(composition)，這樣共計有 47 個實變量。 
第二類型的屬性則是使用 SSPro (Cheng et al., 2005)預測每條蛋白質序列的二級結
(2) 使用多重核函數及 QCQP 技術找到的核函數組合權重，往往能告訴我們單一核函數
要使用怎麼的γ 值才能得到最好的效果。 
 
(3) 基本上使用核融合時可以一次丟進多個γ 值，QCQP 最佳化之後會告訴我們那些γ
值是較佳的，因此可以節省試誤法所需要的時間。 
 
4. 討論 
 
本計畫的研究主題是以分子結合的觀點來探討藥物的標的傳輸。第一年度以文件探勘
的方式從大量的生醫文件中使用自動化的方式找到與 PPI 相關的文件。我們使用字瀕
向量來替文件編碼，但是考量不同的方法來篩選合適的屬性，這些包括過慮法的 IG，
t-檢定，LSI 及包裝法的 GA+SVM。經由實驗可以看出 t-檢定法的表現最佳，
GA+SVM 次之。t-檢定法只需使用甚少的計算資源，而包裝法的 GA+SVM 則需使用許
多的計算資源。潛在語意索引的編碼也是可行，然必須使用重新計算(LSI recompute)
的方法來編碼，而且也必須注意索引的個數不能太多。 
 第二年度的計畫則是使用蛋白質序列直接預測兩條蛋白質是否會結合。由於蛋白
質的序列長短不一，因此必須用特定的編碼方式才能使用常用的分類預測工具。
Dubchak et al. (1995) 提供適當的編碼方式解決了這個問題。此外，不同來源的資料可
以使用不同的核函數評估資料點之間的相似度，使用 QCQP 技術則可找到最佳的組合
權重來整合不同的核函數(資料來源)。實驗結果顯示 QCQP 確實可以達成進一步自動
化決定核函數的目的。 
除了上述兩種比較粗糙的觀點來看分子結合之外，還有一種方法是利用比較精密
的計算，也就是分子嵌入(molecular docking)的方式來探討分子結合。假設兩條蛋白質
序列的三級結構已知，則當它們結合在一起時，複合體的(complex)結構會是如何? 分
子嵌入使用分子動力學理論來尋找兩條分子結合的最佳狀況，它是以複合體的總能量
為依據來搜尋所有可能的結合。未來也可使用分子嵌入理論來探討兩條蛋白質的結
合，這對於藥物傳輸系統的設計會有很大的幫助 
throughput interactions data from diverse organisms”, Bioinformatics, Vol. 21, No. 15, pp. 
3279-3285 
 
Marcotte, E. M., Xenarios, I., Eisenberg, D. (2001) “Mining literature for protein-protein 
interactions”, Bioinformatics, Vol. 17, No. 4, pp. 359-363 
 
Ono, T. et al. (2001) “Automated extraction of information on protein-protein interactions 
from the biological literature”, Bioinformatics, Vol. 17, No. 2, pp. 155-161 
 
Ricardo, B., Ribeiro-Neto, B. (1999) “Modern Information Retrieval”, Addison-Wesley 
Longman 
 
Rost, B. (1996) “PHD: predicting one-dimensional protein structure by profile based neural 
networks”, Methods in Enzymology, 266, pp. 525-539 
 
Protein Homology Modeling with Heuristic Search for Sequence Alignment 
Shing-Hwang Doong 
ShuTe University 
tungsh@mail.stu.edu.tw
Abstract
Molecular biology provides several important 
techniques to modern cancer research. Among them, 
protein structure prediction offers important insights 
towards the understanding of a protein’s biochemical 
functions, which may eventually lead to the discovery 
of new cancer drugs. Homology modeling is an 
important technique for protein structure prediction. 
However, this modeling technique suffers from a 
misalignment between the template and the target 
sequences. The situation deteriorates when the 
sequence identity between the two is low. In this study, 
using the Modeller program we applied three heuristic 
search algorithms, namely genetic algorithms, tabu 
search and particle swarm optimization, to align the 
template-target pair. Two model assessment scores, 
GA341 and DOPE, were used to guide the search 
process. A preliminary result showed that, under the 
same constraints on computational resources, genetic 
algorithms produced the best search result, and DOPE 
provided more effective assessment for the search. 
1. Introduction 
Protein tertiary structures are important factors for 
the biological functionality of proteins. Modern cancer 
researches often involve studies of synthetic or natural 
proteins to look for possible cancer drugs. In the 13th
European  Cancer Conference (ECCO) held at Paris in 
2005, Farokhzad and Langer announced the successful 
implementation of nano-particle bio-conjugate 
technique in achieving the goal of targeted delivery of 
cancer drug to prostate cancer cells. Their success 
depends on a good understanding of the structure of a 
specific protein that attaches only to prostate cancer 
cells – the PSMA (Prostate Specific Membrane 
Antigen.)  
The structures of proteins can be determined by X-
ray crystallography or nuclear magnetic resonance 
(NMR) spectroscopy. However, these lab-based 
experiments have not kept up with the speed of the 
discovery of new protein sequences, thus the 
sequence-structure gap has widened even more. Due to 
the advancement in information technology, protein 
structures can now be predicted with various degree of 
accuracy in silicon. With newly developed algorithms 
in machine learning, availability of high quality 
biological data and enhanced computing power of 
modern CPUs, structures of many novel proteins are 
predicted in a computer. 
Structure prediction methodologies can be classified 
into three categories: homology or comparative 
modeling, fold recognition and ab initio computation. 
By and large, the homology modeling approach has the 
most successful result [16]. In this approach, the 
structure of a target sequence is inferred from the 
structure of a template sequence with known structure. 
The homology modeling procedure generally starts 
with the selection of template sequences. These 
template sequences have published tertiary structures 
from lab experiments, and they enjoy some degree of 
homology to the target sequence. Secondly, a pair 
alignment between a template sequence and the target 
sequence is performed, and a structure of the target 
protein is computed using this alignment and stereo-
chemical rules. For example, Modeller is a well-known 
homology modeling program that implements 
satisfaction of spatial restriction [16]. 
High sequence identity (>40%) between the 
template and target pair generally implies high degree 
of sequence homology and high confidence in pairwise 
alignment, and this renders good results for 
comparative modeling. On the other hand, when the 
sequence alignment crosses the twilight zone with 
sequence identity between 20% and 35%, these 
inferences can not be said with much confidence [15]. 
Rost has shown that when the sequence identity is less 
than 25%, then less than 10% of the protein pairs are 
homologous. Therefore, it is much more difficult to 
detect sequence homolog when the sequence identity is 
low. In addition to this difficulty, low sequence 
identity also implies difficulty in properly aligning the 
template-target pair for homology modeling. 
Fischer et al. [3] have prepared 68 pairs of remotely 
related protein structures for the test of fold 
assignments methods. Sequences in a pair bear no 
statistically significant sequence similarity. Sequence 
Proceedings of the 40th Hawaii International Conference on System Sciences - 2007
1©1530-1605/07 $20.00     2007 IEEE
[18]. If the structure is deemed problematic, a new 
template can be tried or a new alignment between the
template-target can be tried.
Modeller provides two compact indicators for the
goodness of fit of the target structure. Below we
briefly introduce these two indicators which become
the guiding criterion in our heuristic search of best
alignment.
2.2.1. GA341. This is a compact formula that assesses
the goodness of fit of the constructed structure. The
formula involves a Z-score (Zs) calculated with a
statistical potential function [14], target-template
sequence identity (Si) and a measure of structure 
compactness (Sc) as follows:
GA341 =              (1) )exp(/)()][cos(1 sci ZSSiS

This formula was evolutionarily obtained by using
different combinations of functions and features on a
training set of models. The technique is similar to
symbolic regression obtained by using genetic
programming. The GA341 score ranges from 0 to 1. If 
the score is near 0 the constructed target model tends
to have an incorrect fold; on the other hand, if the
score is close to 1, the constructed model tends to be
comparable to at least low resolution X-ray structures 
[9].
2.2.2. DOPE. Discrete optimized potential energy is a
statistical potential optimized for model assessment.
The DOPE score is designed for selecting the best
structure from a collection of models built by Modeller.
The lower this potential energy is, the better the
modeled structure. Currently, the DOPE score is not
normalized so that the score has an arbitrary scale. 
When using GA341 score as the heuristics for 
searching the best alignment, the problem becomes a 
maximization problem, namely we try to find the best
placement of gaps in the template and the target
sequences so that the GA341 score of the constructed
model is maximized. On the other hand, if the DOPE 
score is used for model evaluation, then we get a
minimization problem.
As discussed above, when the template sequence
has been decided, the best homology modeling result is
obtained by aligning the template-target pair properly,
and this alignment procedure is considered as a search 
problem for placing the gaps in the sequences. Though
this is a finite solution space problem, the combination
number is so large that it prohibits a brute force search 
for the best alignment [19]. This is partly due to the
fact that each run of the homology modeling
corresponding to an alignment requires substantial
computing time. Efficient search algorithms have long
been studied and sought in the field of machine
learning. Nowadays, there are several well-known
heuristic search algorithms available, and we introduce 
three of them in the following, namely genetic
algorithms, tabu search and particle swarm
optimization.
2.3. Genetic Algorithms
Of all three heuristic algorithms studied here,
genetic algorithms (GAs) are probably the most well-
known and historic. GAs were modeled and developed
by Holland [8] and they are probabilistic search
methods guided by the principles of evolution and
natural genetics. GAs are well known for their ability
to perform parallel search in complex solution spaces 
and have the following advantages over traditional
search methods: (1) GAs directly work with a coding
of the parameter set; (2) search is carried out from a 
population of points; (3) payoff information is used
instead of derivatives or auxiliary knowledge; and (4) 
probabilistic transition rules are used instead of
deterministic ones. GA is a robust optimization
algorithm that has been shown to work in many hard
computational optimization problems. The solutions
determined by GA are normally global optimum rather
than local optimum as determined by analytic methods
if such methods are available.
GA begins with an encoding of the problem
variables into a string of genes. Each gene represents a
solution component to the problem, e.g. the location of
a specific gap, and the string of genes, called an 
individual or chromosome, represents a possible
solution to the search problem. Initially, the population 
of individuals is generated randomly or by some
heuristic methods. Each individual in a population is
assessed by using a fitness function to evaluate its
appropriateness to the search problem. For example,
suppose we assume that there are 10 gaps in the
template sequence and 5 gaps in the target sequence,
then an encoding of a solution to the alignment
problem can be set up as follows:
(g1, g2, …, g10, h1, h2, …, h5)                         (2) 
where each gi indicates an integer value representing
the position of the i-th gap in the template sequence
and each hj is an integer for the position of the j-th gap 
in the target sequence. Of course, one must make sure
that the gaps do not collide into the same position, but
this can be done in the program logic. The fitness
Proceedings of the 40th Hawaii International Conference on System Sciences - 2007
3
do not remember their past, a particle in PSO is much
like a tabu search solution that remembers its past best
performance. In addition to this past best individual
solution, called a local best solution (lbest), a particle
also remembers the past best solution from a group of
particles in its neighborhood, called a global best
solution (gbest). Then, the movement of the particle is
determined jointly by the lbest and gbest. More
specifically, let denote the current
position of a particle,  the
individual’s best position up to the generation k, and 
the global best solution of the
particle up to the current generation. A movement for
the particle is defined as follows [11]:
))(),...,(( 1 kxkx n
))(),...,(( ,1, kpkp nll
))(),...,(( ,1, kpkp ngg
))()()((
)()()(()()1(
,22
,11
kxkpkc
kxkpkckvkv
iig
iilii

 
U
U
(4)
                                              (5) nivi ,...0,0)0(   
                              (6) )1()()1(   kvkxkx iii
Here c1 is called the cognitive acceleration constant
and c2 is called the social acceleration constant. The 
cognitive constant determines the weight from the
individual particle’s cognition of past performance,
while the social constant defines the strength of the
group behavior. )(1 kU  and )(2 kU  are random
numbers drawn from the uniform distribution on the
unit interval (0, 1). Without complicated genetic
operators, this flock of artificial swarm particles flow
in the solution space by the mixture effect of personal 
experience and group experience. The sum of these
acceleration constants is normally assumed to be four. 
PSO has a relatively short history compared to the 
other two search approaches. However, the algorithm
has lately been intensively researched in various fields
to study its applicability. The original PSO was
designed for particles with continuous components.
Kennedy and Eberhart [12] have designed a discrete
version of PSO to solve discrete optimization problem.
In the discrete version, a component is encoded with
Gray codes with binary digits, the velocity of each 
digit is updated as in equation (4), and the new
position of a particle is determined using the following
formula:
¯
®
­ t
 
otherwise
kvs
kx ii ,1
))1((,0
)1(
U
              (7) 
where
ve
vs 
 
1
1
)(                                                 (8) 
is the sigmoid function, and U is random number
chosen from the uniform distribution on the unit
interval (0, 1). 
In terms of our sequence alignment problem, we
can use the same encoding methodology in equation (2) 
to represent the gap positions. The only difference is
the procedure used to derive the next solution (or 
population of solutions) by using different search
algorithms and different model evaluation indicators
(GA341 vs. DOPE). 
2.6. Search Assessment 
When the search procedure is finished, a solution 
will be designated as the final solution. An alignment
between the template and the target sequences will be
performed according to this solution and a homology
modeling is followed to get a structure for the target
sequence. How to evaluate this structure as the final
assessment to the heuristic search procedure to align 
the template-target pair? Since we are using data from
John and Sali [9] which contained template-target pairs
with all known structures, we can compare the
predicted structure with the PDB structure of the target 
sequence.
In order to compare two structures of the same
sequence of amino acids, a translation and rotation of
one of the structures must be done in order to minimize
the RMSD (Root Mean Squared Deviation):
nyxRMSD
n
i
ii /)(
2
1
¦  
 
&&
                     (9) 
where ix
&
 and iy
&
denote the spatial coordinates of the
atom in these two structures, and || || denotes the
Euclidean distance between two points in space. This
is a well-known problem called protein superpostition 
problem which has been solve by Kearsley [10].
DC
In addition to the RMSD measure, one can also
compute the percentage of residues that are with 5 
Angstrom deviation (native overlap) between the two
Proceedings of the 40th Hawaii International Conference on System Sciences - 2007
5
of solutions. This explains that the GA341 score may 
not be a good indicator for the search of an alignment 
that improves homology modeling. The results for the 
same search algorithms with DOPE score as the fitness 
evaluation are listed in table 2. The GA approach has 
improved the performance even more. 
Table 2. DOPE score as fitness value 
Algorithm RMSD (A) Native overlap 
DP
GA
Tabu search 
PSO
3.207
2.362
3.048
3.762
0.88
0.97
0.92
0.81
3.2. 2RHE (3 - 108) – 3HLA (4:B – 98:B) 
2RHE is a Bence-Jones protein and serves as the 
template sequence, while 3HLA is an antigen in HLA-
AW68 and serves as the target sequence. Residues 3 – 
108 of 2RHE are aligned with residues 4 – 98 in chain 
B of 3HLA by CE, and the reported sequence identity 
is 2.4%. An initial alignment provided by dynamic 
programming adds 0 gaps to 2RHE and 11 gaps to 
3HLA. An additional 20 gaps are added to the end of 
either sequence. This makes a solution string with 51 
components: 20 + 31 = 51. The number in a population 
of solution is 102 in GA and PSO, and the number of 
moves in tabu search is 102, 51 each in either direction 
of a selected gap. The results for GA341 and DOPE 
based score are listed in tables 3 and 4. 
Table 3. GA341 score as fitness value 
Algorithm RMSD (A) Native overlap 
DP
GA
Tabu search 
PSO
15.245
15.151
14.245
15.245
0.16
0.16
0.16
0.16
Table 4. DOPE score as fitness value 
Algorithm RMSD (A) Native overlap 
DP
GA
Tabu search 
PSO
15.245
7.579
15.209
15.245
0.16
0.46
0.17
0.16
From this experiment, one observes that the 
combination of GA and DOPE scores provide the best 
solution. 
3.3. 1BOV (2:A – 69:A) – 1LTS (17:D – 102:D) 
1BOV is the cell-binding B oligomer of verotoxin-1 
and serves as the template sequence in this experiment, 
while 1LTS is the E. Coli heat labile enterotoxin and 
servers as the target sequence here. The structural 
alignment program CE aligns residues 2-69 in chain A 
of 1BOV to residues 17-102 in chain D of 1LTS. The 
sequence identity is 4.4%. Since tabu search and PSO 
do not show promising results within the time limit for 
the other two experiments, we perform the test for this 
pair of sequences with GA only. An initial alignment 
provided by the dynamic programming inserts 18 gaps 
to 1BOV and 0 gaps to 1LTS. An additional 2 gaps are 
added to the end of each sequence, and this makes a 
solution string with 22 components. A generation in 
GA has 44 solution strings. The results are listed in 
table 5. 
Table 5. GA341 and DOPE score 
Algo/Score RMSD (A) Native overlap 
DP
GA341
DOPE
11.088
6.927
8.579
0.36
0.37
0.20
For all the experiments, public domain software 
packages have been adopted to implement various 
search algorithms, and a privately encoded program 
was written to perform various accounting tasks: 
converting back and forth between solution strings and 
sequence alignments, calling Modeler 8.2 to perform 
homology modeling, extracting scores from the log file, 
handling scores caching and directing the flow of 
search algorithms.  
For the GA algorithm, we used JGAP – Java 
Genetic Algorithm Package [13]; OpenTS package [6] 
was used to implement tabu search and GenOpt was 
the package for PSO [20]. 
4. Discussions 
Homology modeling provides a feasible means to 
expand the structure database of protein sequences. 
However, the result of this approach depends very 
much on the quality of the alignment between the 
template and the target sequences. This is especially 
critical when the sequence identity between the two 
sequences is low (<30%). 
In this study, we considered the sequence alignment 
problem as a search problem for correctly placing the 
gaps in the respective sequences. Several heuristic 
search algorithms, including genetic algorithms, tabu 
search and particle swarm optimization from machine 
learning have been tried to find the best alignment for 
homology modeling. In addition to the algorithms, two 
different scoring functions have been adopted to 
provide heuristics for these search procedures: the 
Proceedings of the 40th Hawaii International Conference on System Sciences - 2007
7
[19] M. Waterman, Introduction to computational biology, 
Maps, sequences and genomes, Chapman & Hall/CRC, Boca 
Raton, 1995 
[20] M. Wetter, GenOpt - Generic optimization program,
Lawrence Berkeley National Lab., 2004, 
http://SimulationResearch.lbl.gov.
Simple GA { 
t = 0
      generate initial population P0
      evaluate population P0
      while (stopping criterion is not fulfilled) 
{
Pt+1 = Ӭ(Pt) //Ӭʳ̅˸̃̅˸̆˸́̇̆ʳ̆˸˿˸˶̇˼̂́ʿʳ˶̅̂̆̆̂̉˸̅ʳ
ʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳʳ˂˂ʳ˴́˷ʳ̀̈̇˴̇˼̂́ʳ̂̃˸̅˴̇˼̂́
t = t + 1 
          evaluate population Pt
     } 
}
Figure 1. Simple genetic algorithm
Initial alignment with dynamic programming
Prepare first generation of solutions
Iterate through GA
steps until time limit
is reached
Iterate through tabu
search steps until time
limit is reached
Iterate through PSO
steps until time limit
is reached
Assess search with RMSD and native overlap
Figure 2. Flow chart of experiments 
Proceedings of the 40th Hawaii International Conference on System Sciences - 2007
9
A TWO STAGE INFERENCING OF GENE REGULATORY NETWORK WITH 
REGRESSION AND SWARM OPTIMIZATION
Doong, S.H.
ShuTe University, KaoHsiung, Taiwan
tungsh@mail.stu.edu.tw
Introduction
Gene regulatory networks (GRNs) capture important activation and 
repression activities of gene expressions by nucleotide or protein products of 
other genes. We model the dynamic of a GRN via two systems of ordinary 
differential equations (ODEs): the Lotka-Volterra system (LVS) and the S-
system (SS). Synthetic data are generated and used to recover the network 
structure. Regression techniques are adopted to find an approximate solution, 
which is used as a seed in the second stage of particle swarm optimization 
(PSO) search for better solutions. 
Method
The dynamic of GRN
The LVS                                      The SS
Synthetic data
For each system, an initial data                                and a fourth order 
Runge-Kutta algorithm are used to generate gene profile data.
Converting to systems of algebraic equations
Each ODE is converted to a system of algebraic equations through two steps: 
(1) Each trace data                         is smoothed with cubic splines
interpolation to get finer resolution of the trace. (2) Finite differences using 
smoothed data at the midway of [ti, ti+1] are taken to estimate Xj’(ti). This 
results in a system of m algebraic equations.
Solving the Regression Problem (RP)
Derivative based Gauss-Newton method is used to solve the system of 
algebraic equations. The maximum number of iteration is set to 5000. A 
boundary point from the constraint set of the parameters is picked to start the 
iteration. The relative offset convergence measure of Bates and Watts is used 
to determine convergence (Bates and Watts, 1981).
Particle swarm optimization
The unknown network parameters (aj, bjk for LVS and aj, bj, gjk, hjk for SS) are 
encoded as components in an artificial particle. The merit of a particle is 
measured by (the smaller the fitter) formula
(1)
The Y profile is obtained by solving the ODE system with coefficients
decoded from the particle and a fourth order Runge-Kutta algorithm. The 
swarm evolves as described in Kennedy and Eberhart (1995).
The flowchart
Results
For each system, three approaches to PSO are tested: (1) All particles in the 
first generation are randomly created (AllRand); (2) One particle in the first 
generation consists of initial guess in the Gauss-Newton iteration, and the 
remaining are randomly created (H1); (3) One particle in the first generation 
consists of solution from the regression problem, and the remaining are 
randomly created (H2). Ten trials are conducted for each approach with 
different random seeds. Each generation consists of 20 particles, and each 
trial terminates with a maximum generation of 1000. Err in (1) is reported for 
the comparison purpose. The theoretical minimum value of Err is 0, when 
exact parameters are recovered.
The LVS
The SS
Conclusion
The proposed two stage approach (H2) to inference a GRN works pretty well 
for LVS. With solution found in the first regression stage as a seed, the PSO 
converges very quickly with an Err that is substantially lower than the other 
two approaches (Table 1). For the S-system, though the average Err from the 
two-stage approach (H2) is still the smallest among the three approaches, the 
difference is not statistically significant (Table 4). This may be due to two 
reasons: (1) The smoothing of an S-system profile is not trivial; techniques 
better than cubic splines must be considered to interpolate the traces. (2) 
Solving a nonlinear regression problem resulted from the S-system is much 
more difficult than solving a linear regression problem resulted from LVS. 
Notice that transcendental functions are involved in the S-system. 
Voit and Savageau (1985) have shown the equivalence between S-system 
and LVS. Therefore, these two canonical systems have the same expressive 
power to interpret observation data, though the conversion between them is 
not trivial. It may be a good time to model  gene regulatory network with LVS 
and use the two stage approach to solve the LVS.
References
Bates, D.M. and Watts, D.L. (1981) “A relative offset orthogonality
convergence criterion for nonlinear least squares”, Technomerics, 123, pp. 
179-183
Kennedy, J. and Eberhart, R.C. (1995) “Particle swarm optimization”, 
Proceedings of the IEEE international conference on neural networks, IV, pp. 
1942-1948
Voit, E.O. and Savageau, M.A. (1985) “Equivalence between S-systems and 
Volterra systems”, Mathematical BioSciences, 78, pp. 47-55
Acknowledgement
This research was supported in part by a grant from National Science Council 
of Taiwan under the contract number NSC95-2221-E-366-020-MY2.
njXbXatX
n
k
n
k
h
kj
g
kjj
jkjk ,1,)(
1 1
' L=−= ∏ ∏
= =
;,1,)()(
1
' njXbaXtX
n
k
kjkjjj L=+= ∑=
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
gene 1
gene 2
gene 3
gene 4
gene 5
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
gene 1
gene 2
gene 3
gene 4
gene 5
)(,),( 0 mjj tXtX L
))(,),(()( 0010 tXtXtX nL
r =
∑∑
= =
−= n
j
m
i
ijij tXtYErr
1 0
2))()((
Smooth with cubic splines
Estimate derivatives
Convert ODE to RP
Solve RP, use solution 
as an initial particle
Continue the PSO search
 t-statistics p-value (two tail) 
AllRand vs. H1 -0.734 0.482 
AllRand vs. H2 0.752 0.471 
H1 vs. H2 0.950 0.367 
 
 Min Max Average Std. Dev. 
AllRand 1.2356 2.9212 1.8011 0.5047 
H1 0.9772 2.5363 1.9458 0.4106 
H2 1.1452 2.7885 1.7431 0.4650 
 
 Min Max Average Std. Dev. 
AllRand 0.3899 7.4294 3.0102 1.9910 
H1 0.9576 6.9113 3.2627 1.5990 
H2 1.28E-9 5.73E-8 1.18E-8 1.72E-8 
 
 t-statistics p-value (two tail) 
AllRand vs. H1 -0.709 0.496 
AllRand vs. H2 4.781 0.001 
H1 vs. H2 6.453 0.0001 
 
Table 1: Descriptive statistics of Err from 10 trials
Table 2: Paired t-test between 3 approaches
Table 3: Descriptive statistics of Err from 10 trials
Table 4: Paired t-test between 3 approaches
