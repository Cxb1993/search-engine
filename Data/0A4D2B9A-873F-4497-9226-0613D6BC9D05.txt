1 
 
A.  INTRODUCTION 
 Cognitive radio (CR) is a wonderful technology that can make intelligent and efficient use of 
spectrum bandwidth for the users, whoever they are, wherever they are, and at whatever time they need 
it. However, there are just too many issues that are still left open or unaddressed in the design and 
implementation of a CR system. The issues include the design of an efficient RF front-end that can be 
used for CR, the hardware and software codesign of CR systems, the dynamic and partial 
reconfiguration techniques that can be adapted for CR, and the efficient smart reasoning and learning 
mechanisms for CR. To solve the above four issues, this project is focused on the development of an 
embedded system platform targeting at CR designs. The proposed REasoning And Learning with 
Intelligent FPGA Embedded CR (REALIFE-CR) platform has tried to solve the above four issues 
through the collaboration of four different subprojects, titled as follows: 
(1) Subproject 1 (PI: Sao-Jie Chen) 
Design and Implementation of a Radio Frequency Multi-Band/ Multi-Bandwidth Transceiver with 
Fast Calibration Time for I/Q Un-balance and DC Offset Cancellation 
(2) Subproject-2 (Co-PI: Chu Yu) 
Design and Implementation of a CR Baseband Transceiver 
(3) Subproject 3 (Co-PI: Mao-Hsu Yen) 
FPGA with Real-Time RTR Architecture for Cognitive Radio 
(4) Subproject-4 (Co-PI: Pao-Ann Hsiung) 
Design and Implementation of a Reasoning And Learning Framework for Cognitive Radio 
 
B. RELATIONSHIPS BETWEEN SUBPROJECTS 
Fig. B.1 interprets the CR SoC platform and its architecture. Following the layers division as 
described in IEEE 802.11a/b/g standard, our research team is divided into 4 sub-project groups. The 
relationships between subprojects are shown in Fig. B.2. Since the power of cognitive radio and 
software defined radio is based on the ability of controlling the communication system in a more flexible 
method. The more parameters a software baseband can provide for upper (MAC and Application) layers, 
the more power of a CR platform can be expected.  
 
 
 Fig. B.1.  CR SoC Platform Architecture.  
3 
 
 
Fig. B.3.  Block Diagram of CR Baseband Transceiver. 
Joint Tactical Radio System (JTRS) is a US Department of Defense program aimed to create a 
global communication network of scalable and interoperable SDRs for US and allied terrestrial, 
maritime and airborne joint forces. JTRS is built upon an OSI- (Open Systems Interconnection-) like 
model of Software Communication Architecture (SCA) as shown in Fig. B.4 [4], where the waveform 
application layer consists of some software applications that implement the waveform software 
components responsible to process the received data from the antenna to the end-user and vice versa. A 
radio platform is the set of software and hardware layers, which provide the services needed by the 
waveform application layer through an abstraction layer API. 
 
 SCA is a software architecture allowing separation between waveform applications and radio 
platform. The SCA specifies an Operating Environment in which waveform applications are executed. 
The Operating Environment enables some Abstraction Layer APIs to manage waveform applications. 
The environment is composed of a Core Framework, a minimum CORBA compliant middleware and a 
POSIX compliant Real-Time Operating System (RTOS). The Core Framework is a set of interfaces and 
related behaviors used mainly to load, deploy and run waveform applications. A middleware is a 
software layer between the application layer and the network hardware layer providing services and 
enabling transparent communications between distributed applications.  
 
5 
 
Chen and his two PhD students (Jui-Chieh Lin and Ying-Chenrg Lan) had visited Sandbridge 
Technologies in New York twice, on January 5th, 2009 and March, 2010 respectively, to further study 
techniques on how to connect an RF front end to the evaluation board and how to optimize the 
performance of the SB3010/3011 board.  
 
 
 
 
 
 
 
Fig. B.5. Collaboaration Between Subprojects. 
 
C.  ACHIEVEMENTS 
The achievements in the first two years for each subproject will be detailed in Sections I to IV (Part 
ONE) of this report. The third-year results will be detailed in Sections V to IX (Part TWO) of this report, 
respectively compiled by the PI and co-PIs in charge. 
 
REFERENCES: 
[1] J. Mitola III, Cognitive Radio Architecture, John Wiley & Sons, Inc., 2006. 
[2] B. A. Fette, Cognitive Radio Technology, Elsevier Inc., 2006. 
[3] SDRF-06-P-0009-V1.0.0, Cognitive Radio Definitions and Nomenclature, September 2008. 
[4] G. Gailliard, E. Nicollet, and M. Sarlotte, “Transaction Level Modelling of SCA Compliant 
Software Defined Radio Waveforms and Platforms PIM/PSM,” IEEE Design, Automation & Test in 
Europe Conference (DATE), pp. 966-971, Apr. 2007 
[5] M. Uhm “Making the Adaptivity of SDR and Cognitive Radio Affordable,” DSP Magazine, PP. 
25-27, May 2006. 
[6] L. Pucker and G. Holt, “Extending the SCA Core Framework Inside the Modem Architecture of a 
Software Defined Radio,” IEEE Radio Communications, pp. s21-s25, March 2004. 
[7] Z. Ye, J. Grosspietsch, and G. Memik, “An FPGA Based All-Digital Transmitter with Radio 
Frequency Output for Software Defined Radio,” IEEE Design, Automation & Test in Europe 
Conference (DATE), pp. 16-20, Apr. 2007. 
[8] S. Haruyama and R. Morelos-Zaragoza, “A Software Defined Radio Platform with Direct 
Conversion: SOPRANO,” IEEE the 54th Vehicular Technology Conference, pp. 1558-1560, Oct. 
2001. 
[9] J.-P. Delahaye, J. Palicot and P. Leray, “A Hierarchical Modeling Approach in Software Defined 
Radio System Design,” IEEE Workshop on Signal Processing Systems, pp. 42-47, Nov. 2005. 
  
ARALF 
Framework 
(Subproject 4) 
RF Front-End 
(Subproject 1) 
SW Baseband 
(Subproject 2) 
Reconfigurable CR Platform 
(Subproject 3) 
Queen’s Univ. 
 (MOBIGIG) 
Univ.Wisconsin 
Madison  
7 
 
I. DESIGN AND IMPLEMENTATION OF AN INTEGRATED RADIO FREQUENCY 
MULTI-BAND/MULTI-BANDWIDTH WIRELESS TRANSCEIVER WITH FAST CALIBRATION 
TIME FOR I/Q UN-BALANCE AND DC OFFSET CANCELLATION 
 
First-year and second-year reports compiled by Sao-Jie Chen and Wei-Yi Hu 
 
1.  BACKGROUND 
This subproject is proposed to design a RF multi-band/multi-bandwidth transceiver in CMOS 
process. The working frequency range covers 800MHz, 2.4GHz, and 5GHz bands. The architecture uses 
some novel devices such as, multi-band low noise amplifier (LNA) and power amplifier (PA), 
multi-band voltage control oscillator (VCO)/phase lock loop (PLL), fast I/Q imbalance calibration loop, 
fast auto gain control (AGC) and DC offset cancellation loop, and multi-bandwidth low pass filter (LPF) 
with high accuracy.  
 
2. ARCHITECTURE DESIGN AND CHIP IMPLEMENTATION 
Our achievements in the first two years are listed in the following: 
(1) A multi-band/multi-bandwidth transceiver architecture design, including transceiver system 
technology survey [1,2], design, implementation, and knowledge representation for each 
individual block. 
(2) A multi-band/multi-bandwidth transceiver kernel design, including a multi-band and low-power 
LNA, a multi-bandwidth LPF, and a multi-band VCO/PLL. 
 
2.1  RF Transceiver Architecture Design 
The proposed transceiver architecture is shown in Fig. I.1. Zero-IF architecture is chosen because 
of its simple architecture, low BOM cost, and suitable for multi-protocol design.  Using our 
multi-band/multi-bandwidth wireless transceiver architecture, still need to overcome the drawbacks of 
this architecture: I/Q un-balance, DC offset cancellation and LPF bandwidth accuracy for using in future 
mobile systems. 
Recently, our lab has some achievements in full transceiver implementation for Bluetooth 
application as shown in Fig. I.2. This is an important achievement for us to implement CR transceiver in 
the future.  The details of our achievement will be described as follows and we will refer to the related 
techniques for our CR transceiver design to overcome all above drawbacks in zero-if receiver 
architecture. 
9 
 
The transmitter uses direct I/Q modulation. DC offset is cancelled by the digital I/Q calibration 
loop designed individually in I/Q paths. The 3-order Butterworth LPF with a 1MHz bandwidth is 
implemented to filter out the DAC quantization noise.  More than 42dBc DC offset cancellation and 
37dBc side-band suppression are achieved in this transmitter design. 
The design and implementation of a pure RF front-end CMOS transceiver IC with combined 
PGA/RSSI function are presented.  Gain calibration that follows LNA gain mode selection will be done 
automatically to calibrate the output power of a receiver and determine its RSSI. An on-chip transformer 
generates both input and output impedance transformations for LNA and PA respectively and connects 
directly to the input of LNA and the output of PA. 
The limiter chain includes seven 8dB and one 10dB gain stages providing a total of 66dB gain.  
The PGA is formed by the seven 8dB gain stages from the limiter chain, a gain selection switch, and one 
0-to-7dB gain stage. Controlling the gain selection switch and the 0-to-7dB gain stage, different gain 
stage outputs can be selected from 0 to 63dB in 1dB step. 
In order to overcome the variation of process, supply voltage, and temperature (PVT), a 
master-slave gain cell calibration mechanism is used to calibrate the 8dB gain cells as shown in Fig. I.3. 
Slave gain cells are driven by a master gain calibration loop with 8±0.15dB accuracy. Using 8dB voltage 
ratio (2.512R/R) can eliminate the variation effects.  Differential comparator provides a negative 
feedback to control the master gain cell locking in 8dB condition. 
Different to the conventional RSSI design, no extra circuit is needed in this design and a 63dB 
(6-bit) RSSI range is achieved according to the LNA gain mode and PGA calibration results. The seven 
8dB gain stages form the 3-bit MSB of RSSI and one 0 to 7dB gain stage forms another 3-bit LSB. 
Therefore, RSSI output is determined after gain calibration procedure is done. The minimum calibration 
time required for the PGA calibration is 12µs as shown in Fig. I.4. 
 
 
Fig. I.3. Mast-slaves Gain Cell Calibration Mechanism. 
 
In the proposed receiver, the DC offset cancellation is started when the receiver is enabled. The 
calibration functions are triggered after DC offset cancellation in the receiver, which include LNA gain 
mode selection and PGA calibration with RSSI capability.  Fig. I.4 shows the calibration steps in the 
receiver and the results of constant-amplitude output signal obtained after calibration. 
 
11 
 
 
Fig. I.6. Synthesizer Phase Noise Performance. 
 
 
2.2 Multi-band RF Receiver Front-End Design 
 This part demonstrates a multi-band front-end circuit including a multi-band LNA and an adaptive 
current-injection mixer. The proposed multi-band LNA is composed of a two-stage amplifier as shown 
in Fig. I.7. The first stage is a dual-loop feedback amplifier which deals with the issue of 50Ω input 
matching and low noise figure. The second stage is a band-selection amplifier which is configurable for 
900MHz, 1.8GHz, 2.4GHz and 5.2GHz bands by switching capacitors and resistors. It is proposed to 
enhance high voltage gain, low noise figure and low power consumption. In Fig. I.8, the proposed mixer 
has resistive feedback to control the injection current automatically, which can compete with process 
variation significantly. The proposed mixer can operate in low supply voltage with high conversion gain 
(CG) due to the mechanism of current-injection. 
S1 S1
S2 S2
C1 C2
C3 C4
Coff CoffLoff Loff
L1 L2
Vb1
Vb2 Vb2
+Vin-
Vout- Vout+
VDD VDD
VDD VDD
VDD VDD
C5
M2
M3
M1
M4
M5 M6
M7 M8
R1 R2
M9 M10
RL RL
 
Fig. I.7. Proposed Multi-Band LNA. 
 
13 
 
 
Fig. I.11. CG Simulation in 0.9GHz Band. 
 
 
Fig. I.12. CG Simulation in 1.8GHz Band. 
 
 
Fig. I.13. CG Simulation in 2.4GHz Band. 
 
 
Fig. I.14. CG Simulation in 5.2GHz Band. 
 
15 
 
Table I-1. Performance Summary of Front-end. 
 0.9GHz 1.8GHz 2.4GHz 5.2GHz
S11(dB) -15 -17.5 -19.5 -14 
Gain(dB) 45 41 40.5 45.4 
NF(dB) 2.6 2.5 2.4 3.1 
IIP3(dBm) -30.5 -28.5 -26 -30 
Power 9.36mW 
Area 0.62mm2 
Process TSMC 0.13μm 
 
 
2.3 Low-Power Low-Noise VCO 
  In a modern communication wireless system, low power consumption circuits are becoming more and 
more important. To achieve low power consumption and low phase noise requirements in a 
Voltage-Control Oscillator (VCO) design, a novel current-reused VCO is proposed as shown in Fig. I.19. 
 
 
 
Fig. I.19. Proposed Current-Reused VCO. 
 
  The proposed architecture can enhance the Q-factor of a current-reused VCO [3]. Furthermore, it 
redistributes the amplitude of the current-reused VCO [6]. Therefore, we can achieve better FOM 
parameter than other current-reused VCO [4] [8]. 
 
  The simulation results are shown in Figs. I.20 to I.22. They represent different process corner 
variations, i.e. TT, 50C, SS, 100C, and FF, 0C, respectively.  The performance parameters are 
summarized in Table I-2. Also, according to Table I-3, we know that the performance of our proposed 
low-power VCO has a good FOM. 
 
 
17 
 
 
Fig. I.23. Results for Adjusting Vctrl from 0.2 volt to 1 volt for SS, 100C. 
 
Table I-2. Simulation Results for Corner Variation 
 Center 
Frequency 
( GHz ) 
Phase 
Noise 
(dBc/Hz)
Power 
Dissipation 
( mW ) 
( VCO Core)
FOM 
( dBc/ 
Hz ) 
TT, 50C 6.06 -113.2 0.72 -190.3 
SS, 100C 5.73 -114.5 1 -189.62 
FF, 0C 6.444 -113.1 0.55 -191.9 
 
 
Table I-3. Benchmarks 
Ref. VCO Center 
Frequency 
( GHz ) 
Phase Noise 
(dBc/Hz) 
Power 
Dissipation 
( mW )  
( VCO Core) 
FOM 
( dBc/ 
Hz ) 
[3] 11.55 -110.8 @ 1MHz 8.1 -183 
[4] 16 -111 @ 1MHz 8.1 -186.8 
[5] ** 11.2 -106 @ 1 MHz 4.8 -180 
[6] ** 28 -112.9 @ 1 MHz 12 -190.9 
[7] 1.38 -128.7 @ 1 MHz 2.2 -186.9 
[8] 1.98 -103 @ 100 KHz 1 -189.3 
This Work 
(Simulation) 
(SS, 100C) 
5.73 -114.5 1 -189.62 
** means the chips are implemented with 0.13 m and the others is implemented with 0.18 m 
 
  
19 
 
c c c c
c
c
Vb_N1
Vb_P1
c
c
GND_OTA
VDD_OTA
c
c
Vb_P0
Vb_N0
VDD_COMP VDD_COMP VDD_OTA
c
c
Vb_N1
Vb_P1
c
c
GND_OTA
VDD_OTA
c
c
Vb_P0
Vb_N0
VDD_COMP VDD_COMP VDD_OTA
IN_P
IN_N
OUT_N
OUT_P
VDD_COMP VDD_COMP VDD_COMP VDD_COMP
INV1 INV2 INV3
INV7 INV8 INV9 INV10
INV4 INV5 INV6
 
Fig. I.26. Proposed OTA Circuit. 
 
 
Fig. I.27. Gm Sweeping Simulation Results of OTA. 
 
Table I-4. Bandwidth Range at four Modes. 
Mode VDD_OTA(V) BW (MHz) Postsimulation
11 1.2 11.68 0.85 7.31 
10 1.2 8.6 0.95 4.16 
01 1.2 6.22 0.85 2.87 
00 1.2 2.89 0.95 0.92 
 
Since the transconductance and capacitance varied with process and temperature variations, a 
tuning scheme should be used to maintain the time constant in this low Q filter design. Magnitude 
mode=11 
 
mode=10 
 
mode=01 
 
mode=00 
21 
 
Fig. I.30. Schematic of Comparator and PD. 
 
 
(a) (b) 
 
(c) (d) 
Fig. I.31. Post-simulation Results of LPF with Tuning Loop at Mode=11 (a) AC Response, (b) IIP3, (c) 
Noise Figure, and (d) THD.  
 
 
(a) (b) 
 
(c) (d) 
Fig. I.32. Post-simulation Results of LPF with Tuning Loop at Mode=00 (a) AC Response, (b) IIP3, (c) 
Noise Figure, and (d) THD. 
23 
 
II.  DESIGN AND IMPLEMENTATION OF A CR BASEBAND TRANSCEIVER  
 
First-year and second-year reports compiled by Yu Chu and Jui-Chieh Lin 
 
1. BACKGROUND  
Traditionally, people implement baseband (BB) functions on a reduced instruction set computer 
(RISC) processor. RISC is a hardware chip designed for a specified standard with limited flexibility. 
Another method is to use a reconfigurable data path. The reconfigurable data path architecture can share 
some hardware components that are common within a standard. For example, Fast Fourier Transform 
(FFT) is a common device in both transmitter and receiver under almost every communication standards. 
Conventional transceivers adopt duplex path and share the FFT in different time slots through a switch. 
Mitola proposed a software defined radio (SDR) architecture [1], where most of the baseband functions 
are computed with a specifically designed digital signal processor (DSP). Since all the baseband 
functions can be seen as digital computation, we can simply switch between different BB standards by 
uploading different programs. In such an SDR architecture, we can share almost the entire hardware in a 
DSP core that can be reconfigured.  
Sandbridge Technologies Inc. is one of the leading companies that have developed an SDR platform. 
The Sandblaster Evaluation Board Series 301x (SB3010 and 3011) is composed with 4 parallel DSP’s, 
each owing an extended instruction set suitable for communication development.  
2. IEEE 802.11G STANDARD 
The IEEE 802.11g standard has been announced by the IEEE in 2003. OFDM modulation is used to 
achieve a higher data rate. The 802.11g system utilizes 2.4 GHz band and provides data rates of 6, 9, 12, 
18, 24, 36, 48, 54 Mbit/s. Among them, the transmitting data rates and receiving data rates of 6, 12 and 
24 Mbit/s are mandatory rates. The system uses 52 out of 64 sub-carriers for data transmission, the rest 
are left null as guard band and guard band ratio is 0.1875. The 802.11g adopts modulation techniques 
such as binary and quadrature phase shift keying (BPSK/QPSK), 16 quadrature amplitude modulation 
(16-QAM), and 64 quadrature amplitude modulation (64-QAM). 802.11g uses convolution code as 
forward error correction (FEC) with a coding rate of 1/2, 2/3 or 3/4.  
The 802.11g transmitter baseband is comprised with the following components: scrambling, 
convolution code and puncturing (channel encoding), interleaving, constellation (or symbol) mapping, 
pilot insertion and OFDM modulation (IFFT). The receiver block diagram consists of: synchronization, 
OFDM demodulation (FFT), equalization, constellation de-mapping, de-interleaving, Viterbi 
convolution code decoding, and descrambling (channel decoding). Fig. II.1 interprets the block diagram 
of an OFDM BB transceiver. 
25 
 
ISA support. Therefore, we adopt a composition to resolve the obstacle. 
 
 
 
 
 
The solution proposed adopts instructions supported by C: bit level XOR, AND and shift and 
therefore can be easily ported to different platforms and devices. To demonstrate the portability of this 
method, we implement the transmitter in the IEEE 802.11a standard. The platform of implementation is 
TI c64x DSP [2] and Sandbridge Technologies SB3011 baseband evaluation board [3]. 
We adopt FFT programs provided for both platforms since the FFT is a general and widely spread 
function unit which can be called directly without knowledge of ISA. The rest of this paper is organized 
as follows: A vectorized technique is discussed in Section 3-A. In Section 3-B, a systematic method to 
composite puncturer and interleaver is discussed. In Section 4, results on both TI c64x DSP board and 
Sandbridge Technologies evaluation board are reported. 
 
5. TRANSMITTER BLOCKS IMPLEMENTATION 
5.1 Unfolding Scrambler and Vectorized FEC 
With a linear feedback shift register structure, the scrambler is a recursive algorithm that has a loop 
bound [4] of XOR/2 where XOR is the computing time for an XOR operation. This loop bound can be 
achieved by unfolding the loop twice. The input data is XORed with the scrambler and generate 8-bit 
scrambled data by one XOR operation. The illustration of such unfolded scrambler is shown in Fig. II.3. 
The FEC encoder is vectorized and optimized [5] as: 
 
W1=X^(X<<2);
W2=W1^(X<<6);
YA=W2^(W1<<3);
YB=W2^(W1<<1);  
Fig. II.2. Illustration of 802.11a Transmitter.
27 
 
Table II-1: 802.11a Bit-Oriented Operation Profile on TI-C64x. 
Data 
Rate 
(Mb/s) 
Scramb
ler 
(Cycle) 
FEC 
Encoder
(Cycle) 
Comp. 
Blocks 
(Cycle) 
Mapper(
Cycle)
TX 
(Cycle) 
6 21 16 114 170 784 
9 32 36 114 170 815 
12 42 42 181 256 984 
18 63 58 181 256 1021 
24 84 75 381 352 1355 
36 126 107 381 352 1429 
48 168 139 566 431 1719 
54 189 155 518 431 1756 
 
Table II-2: 802.11a Bit-Oriented Operation Profile on SB3011. 
Data 
Rate 
(Mb/s) 
Scramb
ler 
(Cycle) 
FEC 
Encoder
(Cycle) 
Comp.
Blocks
(Cycle)
Mapper 
(Cycle)
TX  
(Cycle) 
6 44 10 257 116 622 
9 61 15 257 116 644 
12 70 19 374 186 844 
18 97 24 374 186 876 
24 128 35 854 528 1740 
36 178 49 854 528 1804 
48 232 65 1293 656 2441 
54 259 73 1293 656 2476 
 
Table II-3: Comparison Table of 802.11a TX. 
Platform Sandbridge-SB3011 TI -C64X 
Data 
Rate 
(Mb/s) 
This 
work 
(Cycle) 
Modified 
[6]  
(Cycle)
Array Version
(Cycle)  
This 
work 
(Cycle)
[6]  
 
(Cycle)
Array 
Version 
(Cycle)  
6 622 1882 19586 784 877 17872 
9 644 2032 19706 815 933 18012 
12 844 3529 36964 984 1004 38932 
18 876 3704 37205 1021 1078 39217 
24 1740 6551 213198 1355 1198 234257 
36 1804 6901 213678 1429 1348 234737 
48 2441 12195 344089 1719 1498 354898 
54 2476 12370 344329 1756 1582 355155 
  
 
29 
 
 
 
Fig. II.5.  Block diagram of a Typical OFDM system. 
 
At present, the progress of our sub-project is shown in Fig. II.5, where functional blocks with color 
have their HDL designs completed and the white functional blocks are not carried out yet, but they are in 
progress. In addition, the designs of UART and GPIO parts have done in this midterm work. Next, we 
will introduce these functional block in the following subsections. 
 
 
8.  FUNCTIONAL UNITS OF OFDM 
In this subsection, we will introduce some functions in the proposed architectures as described 
above, which have been validated by using Verilog HDL. These proposed functions include channel 
encoding/decoding, interleaver/deinterleaver, symbol mapping/ de-mapping, and FFT/IFFT hardwares.  
 
8.1 Channel Encoding 
Channel encoding is composed of a scrambler and a convolution encoder. The scrambler is used to 
scramble the wanted transmission data, such that the data stream do not contain a series of 0’s or 1’s. 
This randomized transmission data will make the receiver to get synchronous signals in a easier way. 
Our design for such a scrambler is shown in Fig. II.6.   
 
 
Fig. II.6. Proposed Scrambler Architecture. 
 
Convolutional coding puts some redundant bits into the original transmission data for us to be able 
to detect and correct errors on the receiver. The convolutional encoder will generate 1 to 2 extra output 
bits for each input data. The output is dependent on the input data and the current state of the encoder. 
Fig. II.7 illustrates the block diagram of our proposed convolutional encoding hardware.  
 
Channel 
Encoding Interleave
Symbol
Mapping
Frame
Formation S/P IFFT P/S
Channel 
Decoding
Software
Demodulation
Frame
Extraction P/S FFT S/P
Preamble
Pilot
Channel
Estimation
Data
In
Data
Output
Tx
RxDe-Interleave
31 
 
8.3 Symbol Mapping 
Quadrature amplitude modulation (QAM) is the most popular modulation for the OFDM system. 
This kind of QAM is subdivided into in-phase and quadrature parts. The rectangular constellations are 
especially easy to implement. According to the rectangular constellation, a mapper is used to map a 
small group of bits into a symbol. Our design hardware for four types of QAM’s is shown in Fig. II.10. 
  
 
Fig. II.10.  Proposed Symbol Mapping Architecture. 
 
8.4 Fast Fourier Transform  
In sight of the FFT algorithm, we design a new pipelined architecture [9] for computing a 64-point 
FFT, as shown in Fig. II.11. This design requires two complex multipliers only, and three types of 
processing elements (PE). These PE structures are shown in Figs. II-12 to II.14, respectively. 
 
 
Fig. II.11.  Pipelined FFT Architecture. 
 
 
Fig. II.12.  PE3 used in Proposed FFT Architecture. 
 
33 
 
 
Fig. II.16. Proposed Viterbi Architecture. 
 
8.6 UART  
    錯誤! 找不到參照來源。 II.17 is our proposed UART architecture. The component will be 
used in the microprocessor system shown in Fig. VII.14, and is responsible for communicating with 
outside peripheral devices. This design will also be integrated with other peripheral devices in our 
designed system. 
 
 
Fig. II.17.  Proposed UART Architecture. 
 
The functional simulation of the proposed architecture has been justified by using Verilog HDL. 
The result evidences the validation of the proposed architecture.  
 
9. FUTURE WORKS AND CONCLUSION 
Future works of our subproject is to go on the implementation of the remaining functional unit in 
Fig. II.5. In the next year, we will also plan to carry out another wireless baseband standard, IEEE 
802.11b, and combines the IEEE 802.11a/g into one configurable baseband chip for supporting software 
BMU
ACSU
PMMU
64x1
Path
Select
New RE
SMU64x1
Output
64x6
Path
State
Current
Path
64 to 1
MUX
...
64x6
6
64x9
64x9
4x42x1
1
64x6
0
1
serialization 
TX_FSM
bit cell 
counter
transmitter 
counter
TxTx_enable
Tx_input
de-serialization 
RX_FSM
bit cell 
counter
transmitter 
counter
Rx_Output D D Rx
Ｒx_ready
Tx_done
35 
 
III. FPGA WITH REAL-TIME RTR ARCHITECTURE FOR COGNITIVE RADIO: BUILDING A 
RECONFIGURABLE SDR ARCHITECTURE FOR IEEE 802.11B/G  
 
First-year and second-year reports compiled by Mao-Hsu Yen 
 
1.  BACKGROUND 
In 1999, Joseph Mitola defined a cognitive radio (CR) is “a radio that is aware of its surroundings 
and adapts intelligently” [1]. In fact, a cognitive radio is the convergence of the many pagers, PDAs, cell 
phones, and many other single-purpose gadgets we use today. They will come together over the next 
decade to surprise us with services previously available to only a small select group of people, all made 
easier by wireless connectivity and the Internet [2]. However, the traditional wireless hardware does not 
have the flexibility to support Cognitive Radio. To implement Cognitive Radio needs a full function 
Software Defined Radio. How to implement SDR is the key point to make the Cognitive Radio come 
true. Thus, in this subproject, we propose a reconfigurable SDR architecture with FPGA for the 
real-time Cognitive Radio using the GNU Radio and USRP platform. 
 
2. GNU RADIO AND USRP FOR RECONFIGURABLE SDR ARCHITECTURE 
 GNU Radio 
GNU Radio is a free software development tool kit that provides the signal processing runtime and 
processing blocks to implement software radios using readily-available, low-cost external RF hardware 
and commodity processors [3]. It is widely used in hobbyist, academic and commercial environments to 
support wireless communications research as well as to implement real-world radio systems. 
 
 USRP 
The USRP (Universal Software Radio Peripheral) is designed to allow general purpose computers 
to function as high bandwidth software radios. In essence, it serves as a digital baseband and IF section 
of a radio communication system.  
 
 USRP and Cognitive Radio System 
Cognitive radio is a smart wireless communications technology. It will be able to find and connect 
with any nearby open radio frequency to best serve the user. Cognitive radio needs a flexibility 
communication platform. Therefore, we will implement an SDR prototype using GNU Radio and the 
USRP platform, and provide the SDR prototype (experimental platform) for all subprojects in our 
REALIFE-CR Project.  
37 
 
Threads
Com
m
and Line Interface
Software M
AC/Physical Layer
Cognitive Support Fuctions 
Global Parameters 
USRP
User Input
 
 
Fig. III.2. Multi-Threading Software Architecture for Cognitive Radio. 
 
 
 
(a) 
39 
 
 
REFERENCES 
[1] J. Mitola and G. Q. Maguire, "Cognitive radio: Making software radios more personal," IEEE 
Personal Communications, vol. 6, no. 4, pp. 13-18, Aug. 1999. 
[2] A. B. MacKenzie, J. H. Reed, P. Athanas, C. W. Bostian, R. M. Buehrer, L. A. DaSilva, S. W. 
Ellingson, Y. T. Hou, M. Hsiao, P. Jung-Min, C. Patterson, S. Raman, and C. da Silva, “Cognitive 
Radio and Networking Research at Virginia Tech," Proceedings of the IEEE, vol. 97, no. 4, pp. 
660-688, Apr. 2009. 
[3] GNU Radio, http://gnuradio.org/trac/wiki  
[4] Universal Software Radio Peripheral, http://www.ettus.com/ 
[5] Universal TUN/TAP driver, http://vtun.sourceforge.net/tun/ 
 
 
41 
 
 
 
Fig. IV.1.  Adaptive Reasoning and Learning Framework. 
 
  The MOCBR method works as follows. Whenever a problem is detected by the CR engine, a 
set of objectives is determined and MOCBR tries to search for stored cases that are similar to the current 
environment and can be used to achieve a desired objective by applying some stored solutions. Note that 
the environment is defined in terms of a set of meters and their values, and a solution is defined in terms 
of a set of knobs and their values. Examples of meters include modulation type, symbol rate, protocol 
type, channel type, and frequency. Knobs could be transmitting power, symbol rate, protocol type, 
channel type, and frequency. Note that some system parameters are both meters and knobs. MOCBR 
tries to formulate a solution that can achieve the determined objectives. However, since the solution is to 
be formulated from successful cases related to different objectives, there might be some contradiction 
between the cases as to how knobs are to be turned. In this situation, MOCBR resolves the conflict by 
choosing to primarily achieve the objective that can be most easily done, that is, the objective 
corresponding to the case that is most similar to the current environment. 
MOCBR uses similarity thresholds, local similarity, and global similarity to determine how similar 
a case is with the current environment. In the following, we define single-objective and multi-objective 
cases. Let G, M, and K represent the set of all possible goals (objectives), meters, and knobs, 
respectively. 
 
Definition 1. A single-objective case (SOC) is defined as Cs=<g, , Ms, , Ks, >, where g  G,  is a 
valuation of g, Ms M,  is a valuation of the meters in Ms, Ks K, and  is a valuation of the knobs in 
Ks. This case represents a scenario in which the objective g can be made to attain the valuation  by 
assigning the valuation  to the knobs in Ks when the meters in Ms have the valuation . 
 
 
43 
 
E.  CONCLUSION OF PART ONE 
For Subproject 1, studying and surveying different architectures and technologies for a 
multi-band/multi-bandwidth RF transceiver have been completed in the first two years, and we have 
designed and taped out 5 chips [C1-C5], and published two papers [1-2]. The third years’ main job is 
listed in the following. 
(1) Start design architectures and develop I/Q imbalance calibration loop and DC offset 
cancellation loop. 
(2) Verify the functionalities of the implemented multi-band/multi-bandwidth transceiver modules 
and architectures. 
(3) Evaluate the multi-band/multi-bandwidth transceiver performance. 
For Subproject 2, we have completed the designs of all the functional units in an IEEE 802.11a/g 
baseband (BB), namely channel encoding, interleaver/deinterleaver, symbol mapping, and FFT units in 
the first two years. These units are designed under low-power constraint and lower hardware cost. In 
addition, we have also some current results published in well-known conference and symposium [3-6]. 
Future work of this subproject will continue on the implementation of the few remaining BB 
functional units. In the third year, we will also plan to carry out some other useful functions, such as 
spectrum sensing and inner transceiver for supporting software defined radio.  
For Subproject 3, we have implemented an SDR prototype using GNU Radio and the USRP platform 
[7], and provided a reconfigurable SDR prototype for all subprojects in the REALIFE-CR Project. We 
have also built a video conference environment through TCP/IP over the GNU Radio and USRP 
Platform. Furthermore, we have implemented the IEEE 802.11b to transfer text, sound and video on the 
USRP platform by using the Ekiga software.  
Future work to be done in the third year will implement baseband SDR hardware and software for 
the 802.11 b/g standard on the FPGA and USRP platforms. We will also plan to study the MAC 
communication protocols and integrate it into our SDR baseband architecture by using USRP platform 
and FPGA.  
For Subproject 4, the research contributions mainly include the techniques that are proposed and 
implemented in the Adaptive Reasoning and Learning Framework (ARALF) for a CR system [8]. There 
are numerous open issues related to such a framework design and this project has helped to solve most 
of the issues with working solutions. The state-of-the-art techniques proposed in the ARALF design will 
be enhanced through the second and third years of this project. The technological tradeoffs in the 
implementation of ARALF are currently a hot topic of research and this project provides up-to-date 
answers to the tradeoff issue in the context of cognitive radios.  
With respect to technology contributions, the ARALF framework developed through the first two 
years of this sub-project provides a preliminary solution to cognitive radio designs. Taiwan’s 
communication industry is gradually moving towards SoC design under the encouragement of the 
government and educational institutes. By the end of the third year required by this project, there will be 
a need for an ARALF framework for such complex CR architecture. Thus, the proposed project will thus 
play a major role in the success of the CR-based communication design paradigm in Taiwan. 
 
  
45 
 
F.  DETAILED REPORT: PART TWO 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Part TWO 
  
47 
 
2. DESIGN CONCEPT 
   The architecture of our proposed current-reused LC-VCO using Q-enhancement technique is shown 
in Fig. V.2. Fig. V.3 shows the equivalent circuit of negative conductance. Equivalent impedance Zeq 
without involving the parasitic effect is given by: 
 
4 1 2
2
1 2
( )x m N N
e q
N N
v g S C CZ
I x S C C
     
 
4
2
1 2 1 2
1 1m
N N N N
g
S C C SC SC
                (1) 
 
4
2
1 2
m
eq
N N
gR
w C C
             (2) 
 
1 2
1 2
N N
eq
N N
C CC
C C
   ,          (3) 
 
where 4mg  is the transconductance of M4 and w  is the operating frequency. 
 
 
 
 
Fig. V.2. The Proposed Current-Reused VCO with Q-Enhancement Technique. 
 
 
 
 
 
49 
 
 
 
Fig. V.4. Equivalent Half Circuit the Proposed VCO 
 
 
Based on [10], the quality factor of the cascode connection configuration without CN1 and CN2 is 
given by: 
 
4 ,1
2
M d r a i n
e f f
C
Q LG
           (6) 
 
where 4 ,M d r a inC  is the total capacitance at the drain of M4. 
 
From (4) and (6), the total conductance at the drain of M4 is: 
 
_ _//eff L active device L active deviceG G G G G    
 
2
4 1 2
2 2 2
2 4 1 2( )( )
2
S m N N
m N N
R g C C w
L g C C ww
           (7) 
According to Equations (5) and (7), as e f fG is reduced, the values of Av and Q are increased. 
Thus the phase noise would be improved by the larger voltage amplitude and better quality factor. 
 
 
3. EXPERIMENTAL RESULTS 
The simulation results are shown as follows. Fig. V.5, Fig. V.6, and Fig. V.7 show the phase noise 
under the conditions TT, 50C; SS, 100C; and FF, 0C, respectively. The phase noise would be -117 
dBc @ 1 MHz (TT, 50C) , -116.1 dBc @ 1 MHz (SS, 100C ) and -116.2 dBc @ 1 MHz (FF, 0C). 
 
51 
 
The tuning range of the proposed VCO is shown in Fig. V.8. The prototype chip of the proposed 
VCO is implemented in TSMC 0.18 μm one-poly six-metal RF CMOS technology. Fig. V.9 shows the 
layout view. 
 
 
Fig. V.8. Tuning Range of the VCO. 
 
 
 
Fig. V.9. Layout View of the VCO. 
 
 
  
53 
 
REFERENCE 
 
[1] M. Tiebout, “Low-power low-phase-noise differentially tuned quadrature VCO design in standard 
CMOS,” IEEE J. Solid-State Circuits, vol. 36, no. 7, pp. 1018–1024, Jul. 2001. 
[2]  Z. Li and K.K.O, "A low-phase-noise and low-power multiband CMOS voltage-controlled 
oscillator,” J. Solid-State Circuits, vol. 40, no. 6, pp. 1296-1302, Jun. 2005. 
[3]  N.-J. Oh and S.-G. Lee, “Current reused LC VCOs,” IEEE Microw. Wireless Compon. Lett., vol. 
15, no. 11, pp. 736–738, Nov. 2005. 
[4]  J.-P. Hong, S.-J. Yun, N.-J. Oh, and S.-G. Lee, “A 2.2-mW backgate coupled LC quadrature VCO 
with current reused structure,” IEEE Microw. Wireless Compon. Lett., vol. 17, no. 4, pp. 298–300, 
Apr. 2007. 
[5]  S.-J.Yun, S.-B. Shin, H.-C. Choi, and S.-G. Lee, “A 1mWcurrent-reuse CMOSdifferential 
LC-VCO with lowphase noise,” in IEEE ISSC Tech. Dig., Feb. 2005, vol. 1, pp. 540–616. 
[6]  D. B. Leeson, “A simple model of feedback oscillator noises spectrum,” Proc. IEEE, vol. 54, pp. 
329–330, Feb. 1966. 
[7]  A. Hajimiri and T. H. Lee, “A general theory of phase noise in electrical oscillators,” IEEE J. 
Solid-State Circuits, vol. 33, pp. 179–194, Feb. 1998. 
[8]  B. Park, S. Lee, S. Choi, and S. Hong, “A 12-GHz Fully Integrated Cascode CMOS LC VCO with 
Q-Enhancement Circuit,” IEEE Microw. Wireless Compon. Lett, vol. 18, no. 2, pp. 133–135, Feb. 
2008. 
[9]  T. H. Lee, The Design of CMOS Radio-Frequency Integrated Circuits. London, U.K.: Cambridge 
Univ. Press, 1998. 
[10]  C. Y. Wu and S. Y. Hsiao, “The design of a 3 V 900 MHz CMOS bandpass amplifier,” IEEE J. 
Solid-State Circuits, vol. 32, no. 2, pp. 159–168, Feb. 1997. 
[11] C.-L. Yang and Y.-C. Chiang, “Low phase-noise and low-power CMOS VCO constructed in 
current-reused configuration,” IEEE Microw. Wireless Compon. Lett., vol. 18, no. 2, pp. 136–138, 
Feb. 2008. 
[12]  Y. Han, L. E. Larson, and D. Y. C. Lie, “A low-voltage 12 GHz VCO in 0.13 _m CMOS for 
OFDM applications,” Silicon Monolith. Integr. Circuits RF Syst., pp. 18–20, Jan. 2006. 
[13]  Y. Wachi, T. Nagasaku, and H. Kondoh, "A 28GHz Low-Phase-Noise CMOS VCO Using an 
Amplitude-Redistribution Technique," ISSCC Dig. Tech. Papers. pp. 482-483, Feb. 2008. 
[14]  S.-J. Yun, N. D. B. Yen, I. Lee, J.-T. Lee, and S.-G. Lee, “A differentially-tuned voltage 
controlled oscillator using symmetric transformer,” IEEE Microw.Wireless Compon. Lett., vol. 18, 
no. 7, pp. 464–466, Jul. 2008. 
  
55 
 
when the primary users try to access the same spectrum to avoid collisions. Consequently, the SUs shall 
perform periodic spectrum sensing to detect the presence of the primary users. A spectrum sensing 
scheme directly impacts the spectrum utilization by reducing the interference rationed to primary users. 
Therefore, spectrum sensing has become a crucial issue for cognitive radio.  
 Conventional ad-hoc spectrum sensing techniques, such as energy detection, cyclic prefix detection, 
and the spectral correlation function (SCF) detection have been widely investigated and their 
implementations have been studied [5][6]. Along with the evolution of cognitive radio technology, more 
accurate sensing algorithms, including systematic spectrum sensing, were proposed [7]. Since there has 
not yet been research on the implementation and complexity of the systematic spectrum sensing 
approach for multi-standard cognitive radio, our work provides an implementation survey of this 
algorithm. 
 
3. SPECTRUM SENSING SCENARIOS  
Scenarios for spectrum sensing are specified in: 802.11a/b/g/n [8, 9], 802.16d (Fixed WiMAX) [13] 
and 802.16e (Mobile WiMAX) [14]. 
An 802.11b/g system has 14 channels in the 2.4 GHz band, each 5 MHz wide. 802.11a operates 
using 5.15–5.25, 5.25–5.35 and 5.725–5.825 GHz unlicensed national information structure (U-NII) 
bands. 802.11a has 12 non-overlapping channels. Operating channels in 802.11a are 20 MHz wide. 
802.11n operates in the same frequency band as 802.11a. It can achieve higher data rates because of its 
provision to use double-width 40 MHz channels. 
 From a global perspective, the 2.3 GHz, 2.5 GHz, 3.5 GHz, and 5.7 GHz bands will most likely be 
used for WiMAX deployments. The WiMAX Forum has identified these bands for initial 
interoperability certifications. In Fixed WiMAX, the 3.5 MHz mode operates at 3.5 GHz and the 10 
MHz mode operates at 5.7 GHz, with 56 and 9 channels respectively. In Mobile WiMAX, the 5 MHz 
mode operates at 2.3 GHz, 2.5 GHz, and 3.5 GHz with 4, 37, and 39 channels respectively. 
 Fig. VI.1 shows the frequency spectrums used by the wireless communication standards discussed 
previously.  
 
 
Fig.VI.1. Frequency Spectrum Usage for Targeted Standards. 
 
4. SPECTRUM SENSING STRATEGY 
In this section, we describe our methodology for detection of spectrum utilization. The 
methodology is applicable to different sensing scenarios, even though the particular sensing techniques 
adopted may change. 
2 2.5 3 3.5 4 4.5 5 5.5 6
802.16e
802.16d
802.11a
802.11b
802.11g
802.11n
57 
 
 
5. SPECTRUM SENSING TECHNIQUES 
In this section, we briefly introduce the adopted three systematic spectrum sensing techniques : 
namely received signal strength indicator (RSSI), cyclic prefix (CP), and spectral correlation function 
(SCF) detection techniques. 
 
5.1. Received Signal Strength Indicator 
A straightforward approach to detect the existence of a single primary user is to measure the 
received signal energy. Such a process, known as the received signal strength indicator (RSSI), does not 
necessarily require receiver synchronization. RSSI offers a reasonably reliable channel strength 
assessment even at low signal levels [15]. It can be shown that the optimal detector is the energy 
detector [16]: 
1 1 2
0 0
1( ) ( ) ,( )
L N
RSSI
t n
RSSI r
L r n 
 
 
                                         (1) 
where r(n) is the complex input signal, L is the average time to prevent burst detection error, N is length 
of the observation period, and   is a pre-determined threshold.  
The block diagram of the RSSI detector is shown in Fig. VI.3, based on Equation (1). 
 
 
 
Fig. VI.3. Block Diagram of the RSSI Detector. 
 
 
5.2. Cyclic Prefix Detection 
A positive RSSI result is not sufficient to determine a PU exists since the detected energy may 
come from interference or other SUs using the same bands. Therefore, classification of signals by other 
intrinsic properties is required. By means of a cyclic prefix (CP) in OFDMA systems, the spectrum 
sensing system can determine the existence of an active primary OFDM system in the selected frequency 
sub-band. The initial setup is similar to [17]. The receiver collects 2 FFT CPN N  samples at the sampling 
rate1 sT . It is assumed that the sampled region contains one complete OFDMA symbol, so that the 
detection problem becomes: 
Let I  and 
~
I  be two sampling intervals with CP samples, where I contains the cyclic prefix and 
~
I contains its replica: 
~
{ , 1,..., 1}
{ , 1 ,..., 1}
CP
FFT FFT B
I N
I N N N
  
  
   
                                  (2) 
59 
 
 
5.3. Spectral Correlation Function (SCF) Detection 
 
A signal x(t) can be defined as second order cyclostationary (in the wide sense) if its 
autocorrelation function, 
( , ) { ( 2) ( 2)}R t E x t x t                                   (5) 
is periodic in time t for each time lag τ. These periodicities can be examined using the cyclic 
autocorrelation function (CAF) [19], 
           (6) 
for cyclic frequency  and measurement interval t. 
The second-order cyclostationarity gives rise to specific correlation patterns that occur in the 
spectrum of the signal. These patterns can be used to examine the cyclostationarity of the signal and can 
be analyzed using the spectral correlation function (SCF) [19], 
 
     
(7) 
where ܺଵ ∆௙⁄ ሺݐ, ݒሻ ൌ ׬ ݔሺݑሻeି௜ଶగ௩௨௧ାଵ ଶ∆௙⁄௧ିଵ ଶ∆௙⁄ du represents the complex envelope of the narrow-band-pass 
component of x(t) with center frequency v and bandwidth f. Together the CAF and SCF provide a 
comprehensive means of examining the second-order cyclostationarity of a signal. 
In order to examine the use of cyclostationary signatures in the process of cognitive network 
coordination, a low-complexity spectral correlation estimator should be designed for practical 
implementation. Existing OFDM receiver designs typically involve the use of a Fourier transform in 
order to demodulate a received signal. In designing an estimator based on the use of a Fourier transform, 
it may be possible to incorporate the use of cyclostationary signatures through minor modifications to an 
existing OFDM receiver design. 
The design adopted uses a time-smoothed cyclic cross periodogram [20]: 
1
*
0
1[ ] [ ] [ ] [ ]
L
x
t
S k X k X k W k
L
  

 
                      
(8) 
where W[k] denotes a smoothing spectral window and X[k] is the Fourier transform of the received 
signal x[n], 
1
2
0
[ ] [ ]
N
i nk N
n
X k x n e 
 

   
Estimates are calculated using L windows of length N, where N is the duration of a single OFDM 
symbol. This estimator has been shown to be a consistent, asymptotically unbiased, and complex 
normally distributed estimator for the cyclic cross spectrum [20]. By estimating the cyclic cross 
spectrum at a range of cyclic frequencies, the SCF is obtained. 
2 2
2
1( ) l i m ( ) ( )
2 2
t i t
x tt
R x t x t e d t
t
           
2( ) ( ) j f tx xS f R e d
      
2 *
1 12
1lim lim ( , ) ( , )
2 2
t
f ftf t
fX t f X t f d t
t
 
           
61 
 
Table VI.1(a). Parameters in OFDM-based systems. 
 FFT/data 
(samples)
CP 
(ratio/ 
samples)
GI 
duration
Symbol 
duration 
802.11a/g 64/48 1/4 (16) 0.8us 4.0us
 
802.11n 
64/52
1/4 (16) 0.8us 4.0us
1/8 (8) 0.4us 3.6us
128/108
1/4 (32) 0.8us 4.0us
1/8 (16) 0.4us 3.6us
802.16d 256/192 1/8 (32) 8.0us 72.0us
802.16e 512/360 1/8 (64) 11.4us 102.9us
 
Table VI.1(b). Number of Symbols for Accuracy Requirements. 
Symbols 
Required RSSI CP SCF 
 1 4 60 
Effective 
Time (μs) 
RSSI CP SCF 
802.11a/g 4.0 16.0 240
802.11n 
4.0 16.0 240
3.6 14.4 216
4.0 16.0 240
802.16d 72.0 288.0 4320
802.16e 102.9 411.6 6174
 
Table VI.2. General C Code’s Execution Cycles. 
RSSI CP SCF
802.11a/g 2849 477856 2253203
802.11n 
2849
477856
2253203
254604
5665
1823528
4966612
946980
Fixed 
WiMAX 11297 3646584 10376996
Mobile 
WiMAX 22561 14305068 22708023
 
  
63 
 
Table VI.5. CP Execution Cycles for Different Codes. 
 General C –o2 
Intrinsic  
-o2 
Call DSPLib 
-o2 
802.11a/g 70844 21396 24124 
802.11n 
70844 21396 24124 
67152 20684 23620 
140556 28312 32640 
134152 28020 32512 
802.16d 268380 41368 49408 
802.16e 536848 68584 81752 
 
Table VI.6. SCF Execution Cycles for Different Codes. 
 General C –o2 
Intrinsic 
-o2 
Call DSPLib 
-o2 
802.11a/g 281537 957899 78621 
802.11n 
281537 957899 78621 
637183 1926203 168205 
802.16d 1228397 3841211 325773 
802.16e 2810231 7685228 718972 
 
6.3 Overall Performance 
Table VI.7 lists the execution cycles of each three detector function after optimization. Table VI.8 
shows the corresponding execution times assuming that the clock frequency of the DSP is 600 MHz. 
Since the results presented in Tables 1 to 6 are for sensing a respective single channel, the number of 
channels supported by the standards should be considered. 
 For intervals (a) and (c), we use the RSSI detector to sense the existence of a single primary user. 
The execution time is: 
0.546 4 0.546 37 0.332 56 40.978us us us us      . 
For interval (b) in case-2, the CP detector is employed to separate between OFDM 802.11g and 
non-OFDM 802.11b. The execution time is calculated as: 
(0.172 35.73 ) 14 502.628us us us   . 
Finally, for interval (d), which is the most complex, the SCF detector is executed three times for three 
different bandwidths. The execution time is calculated as: 
(0.332 406.24 ) 9 (0.225 107.34 ) 12us us us us     (0.172 213.85 ) 6 6233.742us us us    . 
Consequently, performing the systematic spectrum sensing for the most complicated band under our 
scenario takes 6777.348μs, or approximately 7ms. 
A summary of the number of symbols required to meet the accuracy requirements is listed in Table 
VI.9. It can be observed that the RSSI and SCF detectors have less processing time than the required data 
duration. Therefore, future DSPs employing these two algorithms can operate at lower speeds. For the 
CP, however, the processing time is slower than the speed of input streaming data. Since the spectrum 
65 
 
7. CONCLUSIONS 
In this work, we proposed a methodology to perform multi-standard spectrum sensing. By 
analyzing the overlap of the operating frequencies for different standards, we propose a spectrum 
sensing mechanism, including received signal strength indicator (RSSI), cyclic prefix (CP) detection, 
and spectral correlation function (SCF), to detect 802.11a/b/g/n, Fixed WiMAX and Mobile WiMAX. 
The complexity analyses among these ad-hoc sensing mechanisms are performed. The spectrum sensing 
program takes 7ms on a 600MHz sense the spectrums containing 802.11a/b/g/n, Fixed WiMAX and 
Mobile WiMAX standards on a TI TMS320C6416 DSP running at 600MHz. The most cycle consuming 
operations are sum of squares operations. Our simulation results indicate a future spectrum sensing 
accelerator may be an ASIC/FPGA/ASIP that operates at 41.9 MHz, given an assumed updating period 
of 0.1 seconds. Moreover, a fast sum-of-squares hardware can greatly increase the efficiency of such an 
accelerator.  
 
REFERENCES 
 
[1] J. Z. Sun, J. Sauvola, and D. Howie, “Features in future: 4G visions from a technical perspective,” 
in Proc. 2001 IEEE Global Telecommun. Conf. (GLOBECOM ‘01), Nov. 2001, pp. 3533-3537. 
[2] Federal Communications Commission (FCC), “Spectrum policy task force,” ET Docket no. 02-135, 
Nov. 15, 2002. 
[3] J. Mitola III and G. Q. Maguire, Jr., “Cognitive radio: Making software radios more personal,” 
IEEE Pers. Commun., vol.6, no. 4,pp. 13-18, Aug. 1999. 
[4] J. Mitola, “Cognitive Radio: An integrated agent architecture for software defined radio,” PhD 
dissertation, Royal Institute of Technology (KTH), Sweden, 2000. 
[5] D.Cabric, S. M. Mishra, R.B. Brodersen, “Implementation Issues in Spectrum Sensing for 
Cognitive Radios”, 38th Annual Asilomar Conference on Signals,Systems and Computers, 
November 2004. 
[6] W.A.Gardner, “Signal Interception: A Unifying Theoretical Framework for Feature Detection”, 
IEEE Trans. on Communications, vol. 36, no. 8. August 1988. 
[7] S.-Y. Tu, K.-C. Chen, and R. Prasad, “Spectrum sensing of OFDMA systems for cognitive radio 
networks”, IEEE Trans. Veh. Technol., vol. 58, no. 7, pp. 3410–3425, Sep. 2009. 
[8] IEEE Standard 802.11-1999. Part 11: Wireless LAN Medium Access Control (MAC) and Physical 
Layer (PHY) specifications, Aug. 1999. 
[9] IEEE Standard 802.11b-1999 (R2003). Part 11: Wireless LAN Medium Access Control (MAC) 
and Physical Layer (PHY) specifications—High-speed Physical Layer in the 5 GHz Band, Jun. 
2003. 
[10] IEEE Standard 802.11a-1999 (R2003). Part 11: Wireless LAN Medium Access Control (MAC) 
and Physical Layer (PHY) specifications—Higher-Speed Physical Layer Extension in the 2.4 GHz 
Band, Jun. 2003. 
[11] IEEE Standard 802.11g-2003. Part 11: Wireless LAN Medium Access Control (MAC) and 
Physical Layer (PHY) specifications—Amendment 4: Further Higher Data Rate Extension in the 
2.4 GHz Band, Jun. 2003. 
67 
 
VII.  DESIGN AND IMPLEMENTATION OF A CR BASEBAND TRANSCEIVER (II) 
 
Third-year report compiled by Chu Yu 
  
1. BACKGROUND 
As the progress of wireless communications, different frequency bands have been occupied by 
different users, and these precious resources become more and more crowdy and will be in shortage 
soon. According to the reseach report, the usage percentage of any single band is around 2% only, which 
means we have a very low usage rate for these precious bandwidth resources. To use these resources 
efficiently, a new concept of Cognitive Radio (CR) has emerged. Our main project objective is to realize 
a CR Transceiver SoC Platform. Here, this sub-project 2 is responsible to design a multi-mode baseband 
transceiver for CR, which will support multiple protocols and multi-bands, such as IEEE 802.11a/b/g. 
This third-year report will continue the describe the results we obtained for last one year.  
 
2. INTRODUCTION 
The block diagram as shown in Fig. VII.1 is our proposed baseband architecture. It consists of four 
main parts: the Transceiver and Configurable Logic Device (CLD) (designed by sub-project 3) are used 
to perform all the required Software Defined Radio functions; the Network Processor is to support the 
Run-Time Reconfiguration of the CLD, perform the packet routing functions implemented in the 
embedded OS kernel, update the adapted transmiison parameters, adjust the spectrum, and perform the 
cognitive and learning mechanism; and the Interface part to provide all the I/O functions for the users, 
such as USB, I2C, GPIO and Smart Card, etc.  
 
 
Fig. VII.1.  Block Diagram of CR Baseband Transceiver. 
 
Fig. VII.2 shows the block diagram of an Orthogonal Frequency Division Multiplexing (OFDM) 
modulation based IEEE 802.11a/g architecture. For the transmitter, input data come from the ARM 
processor, then passed to the channel encoder which uses convolution encoding technique. Next, the 
interleaver will scramble the signal to decrease the burst error occurrence. Finally, scrambled signals 
with addition of some preamble pilots are fed into IFFT to form the wanted output signals with 
orthogonal multicarrier. For the receiver, the operations performed are the inverse of the transmitter ones, 
but some channel compensations are required to properly recover the original signal stream.   
 
69 
 
resolve this issue, an interleaving scheme is adopted to prevent the foregoing error-burst 
occurrence. The scheme is mainly to break up an original consecutive data-stream into a 
scrambled data by permutation, thus ensuing data fidelity.     
Many classical implementations of block interleaving hardware use a RAM-based 
structure [1]-[4], generally bounded with some complicated calculations together to generate 
the permuted memory address. Therefore, the aforementioned operation will introduce a 
longer critical path for calculating the memory address. The main advantages of these kinds 
of structures are at their low occurrence of memory access which reduces significant power 
consumption, and their providing an arbitrary permutation. On the other hand, another 
implementation, the first-in-first-out (FIFO) structure, can be used to implement the block 
interleaver/deinterleaver instead of the forgoing RAM-based structure. The advantage of this 
structure is mainly at its requiring a simple finite-state-machine (FSM) to control the 
operation, without the need of a complicated address generator. Accordingly, the clock rate of 
its hardware operation is usually higher than that of the RAM-based structure. However, this 
FIFO structure consumes much more power owing to all the FIFO elements being active at 
every clock cycle. Therefore, we present a unified block interleaving/deinterleaving 
architecture to compromise between the above two structures. The proposed architecture 
consists of many FIFO banks and a simple FSM control unit, where a FIFO bank is 
composed of a row size of 1-bit registers corresponding to a column in the 2-D memory array. 
Note that each FIFO bank is not fully cascaded together. Thus, as for memory power 
dissipation, our proposed architecture at each clock cycle will only consume the total power 
of one FIFO bank rather than those of all memory banks. Thus, our design can operate at a 
higher clock rate and obtain acceptable power consumption. 
In sight of the interleaving algorithms, we has presented a unified architecture to 
perform block interleaving or block deinterleaving, in Section II.8.2. Its functional simulation 
has been justified by Verilog HDL implementation. The result evidences the validation of the 
proposed architecture. For applications in IEEE 802.11a/g or IEEE 802.16e, our design 
requires about 6.6k gates, and has a working frequency up to 300 MHz synthesized in TSMC 
0.18µm CMOS technology. To further validate our proposed architecture, we also implement 
this architecture on an EPF10K20TC144-3, which is an FPGA chip. The result shows that the 
proposed architecture works very well with the consumption of 861 logic elements. In 
addition, a chip layout of our designed interleaver/deinterleaver is shown in Fig. VII.3. 
71 
 
3.4 Fast Fourier Transform  
Fast-Fourier-transform (FFT) processor is an important key component for the 
implementation of wideband OFDM systems. It can support the most spectrum efficient 
multi-carrier modulation technique used in OFDM systems.  
The split-radix algorithm, first clearly described and named by Duhamel and Hollman [6] 
in 1984, required fewer multiply-and-add operations than any previous power-of-two 
algorithm. The split-radix FFT becomes a popular type of FFT algorithm because its 
complexity is lower than the radix-4 or any other higher-radix power-of-two FFT. Its 
algorithm can be described by: 


 1)2/(
0
2/2
1 ])[][(]2[
N
n
nk
NWNnxnxkX                                 (1) 
 

 1)4/(
0
4/4
3
4
1
2
1  ])[][(])[][( ]14[
N
n
n
N
nk
N WWNnxNnxjNnxnxkX   (2) 
 

 1)4/(
0
3
4/4
3
4
1
2
1  ])[][(])[][( ]34[
N
n
n
N
nk
N WWNnxNnxjNnxnxkX  (3) 
According to the above algorithm, we construct a fundamental split-radix signal flow 
graph as shown in Fig. VII.. Clearly, it contains a mix of radix-2 and radix-4 decompositions. 
Further decompositions for higher-point FFT can be obtained through this fundamental unit 
only. Fig. VII.6 shows such a 64-point FFT signal flow graph [7].  
 
 
Fig. VII.5.  Split-Radix FFT Signal Flow Graph.  
73 
 
3.5 Inner Receiver 
Fig. VII. illustrates the inner receiver architecture of an OFDM system, where the FFT 
design has been described above. The designs of the remaining modules will be described in 
the following subsections.   
 
Fig. VII.9.  Inner Receiver Architecture of OFDM. 
 
3.5.1 Signal Detection and Carrier Frequency Estimation 
The architecture of Fig. VII.4 shows a mechanism to detect coarse timing (training 
symbols defined in the short preamble of an OFDM system), which signal comes from the 
transmitter. The coarse timing signal refers to the OFDM short preamble. Since the timing 
signal denotes the start frame of the OFDM signal, this signal r must be required to find first. 
This architecture mainly employs the auto-correlation function to obtain the validated symbol 
signal. The formulations regarding in this feature are described by:  



1
0
* )()(
L
m
LmdrrdP md                             (4) 



1
0
* )()(
L
m
LmdrrdC Lmd                           (5) 
2
2
))((
)(
)(
dC
dP
dM 
,
                                (6) 
where r(d) or rd is the received time-domain signal and d the time index, the star symbol * 
stands for its conjugate. Both P(d) and C(d) are an auto-correlation function of the received 
signal r(d) with its delayed version r(d+L), where L=16 is the number of data samples 
defined in the 802.11a short preamble. M(d) is a ratio function representing the peak of the 
timing metric, which indicates the detection of the short training symbol. 
 
75 
 
 
3.5.3 Channel Estimation and Equalizer 
   The object of channel estimation is to obtain the channel response. This transmission 
channel response will introduce phase and amplitude distortions to the transmitted symbol. 
Therefore, we need to compensate this phenomenon by using the circuit as shown in Fig. 
VII..      
 
Fig. VII.13.  Channel Estimator and Equalizer. 
 
3.5.4 Phase Compensation 
   Through the CFO estimation, the OFDM receiver still has some errors. These errors are 
introduced by the non-ideal characteristic of the carrier frequency, for example, that caused 
by the Doppler Effect. The above effects make the received constellation rotated, which will 
impose on the subsequent channel decoding processing. Hence, the phase compensation, as 
shown in Fig. VII., is required for decreasing bit error rate.     
 
Fig. VII.14.  Circuit of Phase Compensation. 
 
3.6 Demapping  
    Fig. VII. illustrates the demapping structure for BSK, QPSK, 16-QAM, and 64-QAM 
modulations. The output of his structure is a 4-level value, which supports the soft decision 
Viterbi decoding.    
77 
 
The BMU used in our design adopts an efficient structure, which is proposed by Black 
and Meng [14]. This kind of structure provides low-cost hardware design. The unit can 
compute the branch metrics of the states ‘00’, ‘01’, ‘10’, ‘11’ for every input data at a 1/2 
code rate, respectively.  
As described in the previous subsection, the original VD algorithm for k = 3 can be 
described as:   
 },min{ ,11,2,00,01,0 ititititit BMPMBMPMPM                 (7) 
},min{ ,00,2,11,01,1 ititititit BMPMBMPMPM                 (8) 
},min{ ,10,3,01,11,2 ititititit BMPMBMPMPM                 (9) 
},min{ ,01,3,10,11,3 ititititit BMPMBMPMPM                (10) 
where PMn, t = i denotes the n-th path metric at the i-th stage, and BMr, t = i stands for the branch 
metric of the state r at the i-th stage. A straightforward implementation for the above four 
equations obviously requires 8 adders, 4 comparators, and a lot of multiplexers. To reduce the 
hardware cost, an area-efficient CSAU structure that applies the resource sharing technique is 
proposed. The proposed structures with the PMM are shown in Fig. VII., which is an example 
of k = 3. The bit length of the adder used in the structure is equal to 9 bits. Obviously, the new 
design requires 4 adders, and uses less bit lengths (5 bits for the 4 quantized levels) in the 
comparators. Therefore, its hardware complexity will cost less by about 50% compared to the 
classical ACSU. In addition, to avoid overflow occurrence after computing the new path 
metric, a normalization mechanism [14] used in the CSAU is required. 
 
 
Fig. VII.17.  Proposed CSAU and PMM Structures. 
PM00 Reg.
PM1
+
+
PM10 Reg.BM00
BM11 M
U
XCMP
PM0
PM0
M
U
X
PM2
M
U
X
N
orm
alization
DB0
CSAU PMM
M
U
X
CMP
PM0
PM1
CISR
NISR
PM01 Reg.
PM3
+
+
PM11 Reg.BM01
BM10 M
U
XCMP
PM2
PM1
M
U
X
PM3
M
U
X
N
orm
alization
DB1
CSAU PMM
M
U
X
CMP
PM2
PM3
CISR
NISR
CMP: comparator            MUX: multiplexer  
NISR: next state region   CISR: current state region
79 
 
 
Fig. VII.19.  State Transition and Viterbi Decoding Output from our Design. 
 
Through the CSAU and PSLU processing, all the probable survivor paths are 
constructed. Also, the output bit-streams of these paths are further stored in the RAM storage 
of SMU. Therefore, the most probable survivor path can be chosen according to the minimum 
hamming distance in all the survivor paths. The chosen circuit diagram is depicted in Fig. 
VII.7. Here, the current state records the one with the minimum hamming distance. Then, the 
current state will be used to search which path to be the most probable survivor path. 
Through the 4-to-1 encoder, the CSU will generate the address of RAM storage in the SMU.     
 
Fig. VII.7.  Proposed CSU Structure. 
 
Based on our modified VD algorithm as described above, the number of decision bits 
will be 2k-2 only, as shown in Fig. VII.. This result shows that our design requires relatively 
less computation resources for calculating the path metric. In addition, in order to correctly 
record the output bit-stream of the survivor path into RAM, the PSLU, CSU, PSU used in our 
design are required, where the PSU needs 646=384 bits of registers to store the state 
transition. 
 
 
 
T = 1T = 0 T = 2 T = 4T = 3 T = 5 T = 6 T = 7
00
10
01
11
0
00
0
01
1
10
0
01
1
10
0
00
1
11
0
00
1
11
1
10
0
01
1
10
0
01
1
11
0
00
1
11
1
10
1
11
0
00
1
11
0
01
1
11
0
00
1
11
0
00
0
01
1
10
0
01
00 11 10 10 00 01 11ReceivedCode Word
Current 
State
PathState0
4‐to‐1
Encoder
Output
=
=
=
=
PathState1
PathState2
PathState3
81 
 
 
Fig. VII.22.  Block Diagram of MAC Transmitter. 
 
3.8.2 MAC Receiver 
    The block diagram of the MAC receiver supporting IEEE 802.11 is shown in Fig. VII.. 
The design consists of shifter controller block (SCB), frame control header (FCH), 
Duration/ID (DID), MAC address (Addr), frame sequence control (FSC), body, and frame 
check sequence (FCS) decoders.  
 
Fig. VII.23.  Block Diagram of MAC Receiver. 
 
RX_ACK 
RX_RTS                                        En_MAB 
RX_ CTS                                        En_Retry 
RX_Data                              Access_Granted 
 
Ram_ready   
 
                                En_BFB                            Tx_Finish 
 
En_TFB 
                    Frame_Done 
                                                    Frame_Subtype 
 
FCH 
DID 
Addr1 
Addr2                                    Tx_out 
Addr3 
Addr4 
FSC 
 
                                                                    DATA 
 
                                                                    FCS 
 
 
 
 
 
 
Transmit 
Control 
Block（TCB）
Medium 
Allocation 
Block(MAB) 
 
Build 
Frame 
Block(BFB) 
 
Transmit 
Frame 
Block(TFB) 
RAM 
CRC 
FCH Decoder
Shifter 
controller 
Block
DID Decoder
Addr Decoder
FSC Decoder
Body Decoder
FCS Decoder
Su
bt
yp
e
Ty
pe
FC
H
va
lid
DID Enable
Addr Enable
FSC Enable
Body Enable
FCS Enable
In
FBC
FCH Enable
Data
DID Value
Addr. Value
Sequence No.
Fragment No.
Frame Error
83 
 
20, no. 1, pp.14-16, Jan. 1984. 
[7] H. Shousheng and M. Torkelson, “Designing pipeline FFT processor for OFDM 
(de)modulation,” in Proc. International Symposium on Signals, Systems, and 
Electronics (ISSSE ’98), pp. 257–262, Oct. 1998. 
[8] Chu Yu, Mao-Hsu Yen, Pao-Ann Hsiung, and Sao-Jie Chen, “A Unified Block 
Interleaving/Deinterleaving Architecture for Wireless Communication Applications,” in 
Proc. the 2008 VLSI Design/CAD Symposium. 
[9] Chu Yu, Mao-Hsu Yen, Pao-Ann Hsiung, and Sao-Jie Chen, “Design of a High-Speed 
Block Interleaving/Deinterleaving Architecture for Wireless Communication 
Applications,” in Proc. the 2009 IEEE int'l Conference on Consumer Electronics. 
[10] Chih-Jhen Chen, Chu Yu, Mao-Hsu Yen, Pao-Ann Hsiung, and Sao-Jie Chen, “Design 
of a Low Power Viterbi Decoder for Wireless Communication Applications,” in Proc. 
the 2010 IEEE Int’l Symposium on Consumer Electronics, Jan. 2010, pp. 1-4. 
[11] Chu Yu, Chih-Jhen Chen, Mao-Hsu Yen, Pao-Ann Hsiung, and Sao-Jie Chen, “A 
Memoryless Viterbi Decoder for OFDM Systems,” in Proc. the 2010 VLSI Design/CAD 
Symposium, Aug. 2010, pp. 45-48. 
[12] Mao-Hsu Yen, Chu Yu, Kuang-Yu Shie, Yu-Hsiang Huang, and Jiun-Liang Lin, Oct. 
2010, “Implement an SDR Platform by Using GNU Radio and USRP,” 2010 
Conference on Innovative Applications of System Prototyping and Circuit Design, 
PAL2010, pp.154-159. 
[13] Chu Yu, Yi-Ting Liao, Mao-Hsu Yen, Pao-Ann Hsiung, and Sao-Jie Chen, “A Novel 
Low-Power 64-point Pipelined FFT/IFFT Processor for OFDM Applications,” in Proc. 
the 2011 IEEE Int’l Conference on Consumer Electronics. Jan. 2011, pp. 452-453. 
[14] C. B. Shung, P. H. Siegel, G. Ungerboeck, and H. K. Thaper, “VLSI architectures for 
metric normalization in the Viterbi algorithm,” in Proc. IEEE International Conference 
on Communications, vol. 4, Apr. 1990, pp. 1723-1728. 
  
85 
 
The generation of digital RF signals has drawn a lot of interest among researchers and 
engineers. There are many kinds of wireless communication systems currently in use. SDR 
technology is needed for multimode and multi-standard communication devices, allowing 
end users to move between domains, footprints and maintain serviceability. One definition of 
SDR is that the SDR is a radio in which the digitization is performed at some stage 
downstream from the antenna. Then the radio can use flexible and reconfigurable hardware 
such as FPGA to implement the digital signal processing algorithms. As technology advances, 
for an ideal SDR, the digitization might be at, or very close to the antenna, such that almost 
all the radio communication functionalities can be realized using software. The advantages of 
all-digital transmitters are: potential high efficiency power amplification, the capabilities of 
digitally combining signals from multiple channels, and software programmability. 
GPP processors are available with enough processing performance for many waveforms. 
GPP processors employ a serial processing architecture for many front-end preprocessing 
functions and baseband processing such as channelization (ex. digital up/down conversion), 
interpolation, decimation, signal equalization, and radio frequency (RF) tuning. As 
technology advances, even the wideband applications, the GPP processors have ability to deal 
with wideband waveforms. And, GPP processors give the most flexible software development 
environment. Thus, in this subproject, we proposed a reconfigurable SDR architecture 
implemented on the GNU Radio software toolkit and USRP hardware device with GPP 
processors. The architecture diagram of our proposed SDR platform is shown in the Fig. 
VIII.1. 
 
Fig. VIII.1: Dynamic reconfigurable SDR platform. 
 
2. SDR Platform Architecture 
Our SDR Platform consists of a GNU Radio software kits and some USRP hardware 
devices to form a prototype SDR platform for our CR project. Details of the prototype design 
will be described in this section. 
  
87 
 
 
Fig. VIII.3: USRP Block Diagram. 
 
The USRP has 4 high-speed analog-to-digital converters (ADCs), each running at 12 bits 
per sample, 64 MS/s (Mega Samples per second). There are also 4 high-speed 
digital-to-analog converters (DACs), each running at 14 bits per sample, 128 MS/s. These 
four input and four output channels are connected to an Altera Cyclone EP1C12Q240C8 
FPGA. The FPGA, in turn, connects to a USB 2.0 interface chip, the Cypress FX2, and to a 
computer. The USRP can be connected to the computer via a high speed USB 2.0 interface 
only, and will not work with USB 1.1. So in principle, we get two receivers (RX, input) and 
two transmitters (TX, output) since the signal in each channel has to be split into I and Q 
signals. 
The internal data flow in the USRP hardware devices is shown in Fig. VIII.4. For 
instance, at the transmit path, the data will be started from the host PC, transferred onto these 
USRP devices via the USB 2.0 interface and saved into a buffer on FPGA, then the data 
respectively go through the CIC interpolation, HBF (Hilbert Filter), and DUC (digital up 
converter) function blocks designed in FPGA. And the digital data are transformed to an 
analog signal by the DAC (digital-to-analog converter). At the end, the analog signal will be 
transmitted via the RF front-end daughterboard. 
89 
 
 
Fig. VIII.5: SDR Platform Diagram Composed with GNU Radio and USRP. 
 
2.4  Implementation 
We have set up a reconfigurable SDR Platform by using the GNU Radio and USRP. We 
choose GNU Radio version 3.2.2 for our software development environment. The hardware 
environment is USRP which includes both the USRP motherboard as shown in Fig. VIII.6 
and the RFX2400 daughterboard as shown in Fig. VIII.7, respectively. The RF front-end 
daughterboard RFX2400 comes with a band-pass filter around the ISM-band (2400-2483 
MHz). The filter can be easily bypassed, allowing for coverage of the full frequency range. 
 
 
Fig. VIII.6: USRP Motherboard. 
 
 
Fig. VIII.7: USRP RFX2400 Daughterboard. 
91 
 
 
Fig. VIII.9: TCP/IP Network Stack in SDR Platform. 
 
Furthermore, we implemented a Java language based GUI (Graphical User Interface) 
application in the user space for intelligently automatic reconnection after disconnecting and 
provide a GUI for user to control communication parameters. Based on the TUN/TAP device 
drivers, we build a video conference environment by using this TCP/IP model over the GNU 
Radio and the USRP. Finally, we use the VLC application software for examination to 
transfer texts, files, and audio/video stream on our USRP platform, as shown in Fig. VIII.10 
and Fig. VIII.11. 
 
Fig. VIII.10: Video Stream Server Screenshot 
93 
 
Architecture of a Software Defined Radio,” IEEE Radio Communications, pp.s21-s25, 
Mar. 2004. 
[7] Zhuan Ye, John Grosspietsch, and Gokhan Memik, “An FPGA Based All-Digital 
Transmitter with Radio Frequency Output for Software Defined Radio,” EDAA pp.1-6, 
2007. 
[8] Shinichiro Haruyama and Robert Morelos-Zaragoza, “A Software Defined Radio 
Platform with Direct Conversion: SOPRANO,” Proc. IEEE Semiannual Vehicular 
Technology Conf., Atlantic City, NJ, pp.1558-1560, 7-11, Oct.2001. 
[9] Jean-Philippe Delahaye, Jacques Palicot and Pierre Leray, “A Hierarchical Modeling 
Approach in Software Defined Radio System Design,” SIPS 2005, Athens-Greece, 
pp.42-47, Nov. 2005. 
[10] GNU Radio, [Online]. Available: http://gnuradio.org/ 
[11] Ettus Research LLC, Universal Software Radio Peripheral, [Online]. Available: 
http://www.ettus.com/ 
[12] Universal TUN/TAP Driver, [Online]. Available: http://vtun.sourceforge.net/tun/ 
[13] Chu Yu, Mao-Hsu Yen, Pao-Ann Hsiung, and Sao-Jie Chen, “A Unified Block 
Interleaving/Deinterleaving Architecture for Wireless Communication Applications,” in 
Proc. The 2008 VLSI Design/CAD Symposium. 
[14] Chu Yu, Mao-Hsu Yen, Pao-Ann Hsiung, and Sao-Jie Chen, “Design of a High-speed 
Block Interleaving/Deinterleaving Architecture for Wireless Communication 
Applications,” Consumer Electronics, 2009. ICCE '09. Digest of Technical Papers 
International Conference on, pp.1-2, 10-14 Jan. 2009. 
[15] Mao-Hsu Yen, Chu Yu, Haw-Yun Shin and Sao-Jie Chen, “A Three-Sided Rearrangeable 
Switching Network for Binary Fat Tree,” International Journal of Electronics, 2010. 
(accepted) 
[16] Haw-Yun Shin, Mao-Hsu Yen, Chih-Cheng Tseng and Hung-Huan Liu, “Fast data 
access and energy-efficient protocol for wireless data broadcast,” Wireless 
Communications and Mobile Computing, 2010. (accepted) 
  
95 
 
(1) Observation 
 Cognitive radios which are based on software-defined radio (SDR) use not only radio 
information but space and system information, to aid awareness and reasoning. The domain 
information is called ontology. Table IX.1 shows the information which CR systems could be 
observed and supported by the ARALF framework. 
 
Table IX.1. Radio, Space, and System Ontology. 
Radio Space System 
Licensed Channel Temperature CPU Utilization 
Primary User Speed Remaining Battery Life 
Access Point Density In/Outdoor Power Supply 
Opposite CRs’ Distance Location Time 
Multi-Path   
SNR   
Path Loss   
Packet Jitter   
Delay Spread   
Doppler Spread   
 
(2)  Plan 
 This stage manages objectives and system parameters and forwards them to the 
awareness and reasoning stages as shown in Table IX.2. This stage also gathers information 
of the knobs that are installed in the CR system. The information includes knobs’ names, 
types, and their value bounds. Knob values are normalized for standardization of computing 
models. The objectives are classified into optimization and constraint satisfaction. 
Optimization objectives are usually a user’s preferences, such as power consumption, security, 
etc. Constraint-satisfaction objectives are usually an application’s requirement, such as 
throughput, bit error rate, etc. 
  
97 
 
knobs and meters and the output layer represents an objective. 
 
(4)  Reasoning 
 This stage solves the Constraint Satisfaction Problem (CSP) or Constrained 
Optimization Problem (COP) according to user’s preferences and application’s requirements. 
Reasoning functions provide solutions based on the information collected by the awareness 
functions. In this stage, meta-heuristics, constrained programming methods, case-based 
reasoning, and rule-based reasoning (RBR) are used to solve CSPs and COPs. 
 In general, solving a CSP needs to make tradeoffs between the solution accuracy and the 
computation time. For example, a CR is required to meet three objectives: throughput of at 
least 200 KB/s, BER of at most 1%, and power consumption of at most 20 watts. A method 
with low solution accuracy will result in a large number of re-configurations of the radio 
devices so as to continually satisfy all given constraints. In general, to maximize the 
feasibility of a solution over an acceptable span of time, a solution should be equally distant 
from all the constraints in the solution space. Thus, given a polyhedron representing the 
feasible solution space, its center could be considered as the best solution. Geometry based 
methods and the Space-Efficient and Multi-Objective Case-Based Reasoning (SEMO CBR) 
[1] method can be used to solve CSPs by finding such best solutions via corresponding 
polyhedral centers. 
 In solving COP, one need to optimize some quantity while satisfying other quantified 
constraints. For example, a user may want to reduce power consumption while requiring the 
throughput to be greater than 200KB/s and the BER less than 1%. Solving such problems 
could be very difficult because the optimizing objectives and the constrained objectives 
conflict with each other usually. Excessively optimizing will cause the constraints to be not 
satisfied. Solutions to COPs would be usually at the boundaries of some constraints. Thus, if 
the awareness function is not accurate enough, the solutions will not satisfy the constraints. 
Meta-heuristics and rule-based reasoning can be used to provide solutions to COPs. 
 
(5)  Learning 
 In order to find solutions for CSPs and COPs efficiently and accurately, learning 
functions refine the experiences obtained from the observation and awareness stages into 
rules or cases, which can be used as reasoning functions when problems occur. The learning 
functions we use in this stage include both RBR and CBR. 
 CBR records past system states, including objectives and corresponding meters and 
knobs, as cases in run-time. CBR can provide solutions when awareness functions have not 
gathered enough information yet. If the environment is complex, which signifies the 
awareness function may not be accurate, CBR can provide more accurate solutions. 
99 
 
speculation ability is practicable. 
 
Table IX.3. Accuracy of ANN. 
Sf 0.907 0.731 0.502 0.123 0.02 
Sol  0.9283 0.8868 0.7534 0.7472 0.6243 
 
4.  SPACE-EFFICIENT AND MULTI-OBJECTIVE CASE-BASED REASONING 
 Case-Based Reasoning (CBR) uses past experiences in the form of cases to reason for 
future actions. Given the current environment conditions when one or more problems occur, 
CBR selects the most appropriate case from the database for achieving the objective(s). Two 
of the most important issues in conventional CBR for CRs include (1) CBR needs a large 
storage space because of the large number of cases, and (2) lack of a sound and complete 
method to obtain an optimal solution for the multi-objective problem. For the former, CR 
systems are not equipped with much storage because of mobility. In other words, the size of 
database is limited. For the latter, conflicts may occur among objectives. For example, 
maximizing throughput and minimizing power consumption are contradicting goals. As a 
solution in this project, we proposed a novel method namely Space-Efficient and 
Multi-Objective Case-Based Reasoning (SEMO CBR) [1], which does not need a large space 
to record cases and can achieve multiple objectives simultaneously. Our SEMO CBR method 
also tries to meet conflicting objectives. 
 Before going into the details of the SEMO CBR algorithm, we describe the 
terminologies and notations as follows. A meter is an observable environment characteristic 
and we use m to denote a meter and M to denote the set of all meters in a CR system. A knob 
is an adjustable system characteristic and we use k to denote a knob and K to denote the set of 
all knobs in a CR system. An objective is a system characteristic that affects the performance 
of applications and we use o to denote an objective and O to denote a given set of objectives 
in a CR system. Given an objective ݋ ∈ ܱ, the ordered set of meters related to o is denoted 
by ܯ௢ ⊆ ܯ, the ordered set of knobs related to o is denoted by ܭ௢ ⊆ ܭ, and the target value 
(lower bound) given by a user is denoted by ݐܽݎ௢ ∈ Թ, where Թ is the set of real numbers. 
Note that the valuation of system characteristics in ܯ ∪ ܭ ∪ ܱ varies over time, thus we use 
the function val(x, t) to represent the value of characteristic ݔ ∈ ܯ ∪ ܭ ∪ ܱ at time t. For 
ease of notation, we will also use val(X, t) to denote the ordered set of values of all 
characteristics in X at time t. Let cur denote the current valuation of all system characteristics 
in ܯ ∪ ܭ ∪ ܱ, that is, ܿݑݎ ൌ ሼሺݔ, ݒ݈ܽሺݔ, ݊݋ݓሻሻ|ݔ ∈ ܯ ∪ ܭ ∪ ܱሽ, where now is the current 
time. 
The proposed SEMO CBR method is based on the Divide-and-Conquer paradigm. Cases 
are recorded in different databases that are classified according to the respective objectives. 
101 
 
 Since a candidate solution is a set of cases, each of which corresponds to a different 
objective, there might be similar knobs corresponding to different objectives in the candidate 
solution. It is necessary to determine a unified value for each similar knob for achieving all 
the objectives simultaneously. For knob integration, we classify the knobs into three types, 
namely numeric, discrete, and independent. Each type of knob is integrated differently 
according to the statistics() function as defined in Table IX.4. Given a candidate solution δS 
and a knob k, let Sk  S such that for all o in Sk, v(co, k) is defined for some case co in δS 
corresponding objective o. If |Sk|  2, then we say k is a similar knob. The values of a similar 
knob k is collected into a set ܸ ൌ ⋃ ሼݒሺܿ௢, ݇ሻሽ௢∈ௌೖ , which is then unified into a single value 
using the following conversion function. Once all similar knob values are converted, the 
candidate solution becomes a feasible solution. 
ܿ݋݊ݒ݁ݎݐሺߜௌ, ݇ሻ ൌ ݏݐܽݐ݅ݏݐ݅ܿݏሺܸሻ 
where statistics() is defined and illustrated in Table IX.4. 
 
Table IX.4. Integration Methods for the three Knob Types. 
Knob type statistics(V) Result for V = {1,1,2,3,8} Knob example
Numeric knob average(V) 3 Tx Power 
Discrete knob median(V) 2 Bit Rate 
Independent knob mode(V) 1 Channel 
 
The SEMO CBR method seeks for the best candidate solution (δbest) by quantifying the 
consistency among the set of similar knobs using a unity metric. Algorithm 1 gives the details 
of this procedure, where the seek() function is recursively invoked to evaluate all cases in a 
candidate solution. First, only those cases that meet the corresponding objective (v(co, o)  
taro) and is within a given lower bound on similarity to the current environment (called 
tolerance in the algorithm) are evaluated by the seek() function. When the cases 
corresponding to all objectives are found (one per objective), the cases are collected into a 
candidate. A unity metric [1] is defined to represent the consistency of a set of knobs gathered 
from different cases corresponding to the objectives in a candidate. The candidate whose 
unity is the highest has the highest possibility to achieve all the objectives simultaneously. 
The best candidate is then converted into a solution and applied to the system. If there is no 
candidate, it means that all the cases in the database are not quite similar to the current 
environment. The detailed illustration and definition of the whole algorithm can be referred to 
in [1]. 
103 
 
ratios of successful solutions to 10000 problems for different number of cases in the database, 
using the conventional CBR and the SEMO CBR methods. Compared to the conventional 
CBR, the SEMO CBR method can successfully solve more problems in all experiments, with 
a maximum of 274% in the experiment of 10 cases in the database. In the second set of 
experiments, the target values of objectives were raised to at least half that of the maximum 
value. This implies that the requirements of the CR user or the environment are stricter. As 
shown in Fig. IX.3, the difference of performance is more conspicuous than the first set of 
experiments, with a maximum of 797% improvement in the experiment of 10 cases in the 
database between the SEMO CBR and the conventional CBR methods. 
 Fig. IX.4 shows different execution times with different target values, namely zero and 
0.3. When the number of cases in the database of each objective is under 500, the execution 
time of SEMO CBR is almost negligible. However, the execution time starts getting longer 
with increasingly larger databases. As mentioned before, since the storage capacity of a CR 
device is a major limitation, the proposed SEMO CBR solves the problem with conventional 
CBR by maintaining a lower number of cases in the databases and completing the reasoning 
task in a tolerable execution time in a CR system. 
 
 
Fig. IX.2. Experiment 1: Conventional CBR vs. SEMO CBR (0.25≤taro≤1). 
 
Fig. IX.3. Experiment 2: Conventional CBR vs. SEMO CBR (0.5≤taro≤1). 
105 
 
resulting in an overall decrease in the total system configuration time overhead. Thus, in this 
method, we proposed the use of a reasoning function based on finding the barycenter target 
solution and the MC method to efficiently find the barycenter. 
 We performed experiments to check the efficiency of using MC in approximating the 
barycenter target solution with ANN as our awareness function. Similar to the previous 
experiments, we also vary the fraction of feasible solutions Sf and check the probability P of 
the MC speculated solution matching that of a real solution. The experiment results are 
shown in Table IX.5. 
 
Table IX.5. Probability of Speculative Barycenter. 
Sf 0.060 0.041 0.024 0.012 0.005 0.000944 
P 1.000 1.000 1.000 0.975 0.850 0.250 
  
As observed from the experiment results, the matching probability P is very high (P = 1) 
even for very small fractions of feasible solutions (Sf  0.024), meaning that the probability of 
MC speculating the correct barycenter is very high even if the number of feasible solutions is 
very small. Also note how P decreases to 0.25 when Sf is smaller than 0.001. This is 
acceptable because the fraction of feasible solutions is just too small.  
The two experiment results tabulated in Tables IX.3 and IX.5 have demonstrated that the 
combination of ANN (awareness function) and finding barycenter (reasoning function) with 
an efficient MC heuristic will be an appropriate method to solve the constraint satisfaction 
problem. 
 
5.2. Genetic Algorithm (GA) 
 GA draws their inspiration from species evolution and survival of the fittest in nature. 
The chromosomes and fitness function are the fundamental concepts in GA. The 
chromosomes represent the candidate solutions, while the fitness functions express the 
objective of the algorithm. The candidate solutions are evaluated by the fitness function and 
the values mean the performance of candidate solutions. 
 The objectives to be met in a CR system are usually numerous and the relationships 
among them are intricate. Therefore, deterministic search algorithms based on conventional 
methods usually cannot find optimal parameter values with respect to the performance 
metrics. GA has been widely used to solve multi-objective problem such that a CR system is 
dynamically configured in response to the varying communication environment. We set the 
radio parameters as genes in a chromosome and select the most suitable chromosomes 
through evaluation by the fitness function. The GA solution is close to the real optimization 
solution which we generated by brute force (exhaustive search), but GA exhibits a more 
107 
 
incrementally changing a single element of the solution. The algorithm ends when it cannot 
find a better solution from the neighbors of the currently found local optimal solution. 
 HC is a surprisingly effective algorithm. To reflect the changing environment in 
real-time and to generate solutions efficiently for CR problems, HC is an interestingly viable 
method. Another advantage of HC is that it is simple to implement. For example, the values 
of radio parameters are either increased or decreased, then the objectives values are evaluated, 
and it is determined whether the CR system should adopt the new radio parameter values or 
not. The HC has the local optimum problem, but it can be overcome easily by using random 
walks. 
 In the experiments to evaluate the efficiency of HC, we employed the LA as our 
awareness method. There are two constraints, namely throughput and bit error rate, to be 
satisfied and one objective, namely power consumption, to be optimized. Throughput is 
constrained to be greater than 300KB/s and bit error rate is constrained to be smaller than 
20%. LA training is performed using fifty cases. As shown in Table IX.7, the best real result 
is 41w for the power consumption. There is only about 15% probability that HC can find the 
solution with the fitness function by LA, while HC still has about 46% solutions not meeting 
the constraints. The results showed that using LA+HC to solve constrained optimization 
problems is also impractical. When the result of the solution satisfies the constraints, the 
average real result is about 60.5w, with about 19w difference compared to the best real 
solution. The difference is too large and unacceptable. Hence, HC is a very fast algorithm, 
but its accuracy still needs to be improved. 
 
Table IX.7. Results of LAHC. 
Experiments Results 
The real optimized objective (power consumption) 41w
The ratio of LAHC failing to find any solution  15%
The solution found by LAHC 60.500078w
The ratio of LAHC’s solutions not meeting constraints  46.812423%
Difference between real optimized objective and LAHC’s solution 19.500078w
 
6.  SPECTRUM SENSING 
 Due to the underutilization of spectrum and consumers’ demand for wireless service, 
cognitive radio (CR) was proposed as a solution. One of the essential functions of cognitive 
radio is spectrum sensing, which unlicensed users sense and detect spectrum holes (no 
licensed user accesses the channel) and access the spectrum hole for utilizing spectrum 
efficiently. Opportunistic unlicensed access improves the utilization of spectrum by 
109 
 
 
Fig. IX.5. Hidden Primary User Problem. 
 
 Detecting Spread Spectrum Primary Users 
 Most wireless network protocols such as IEEE 802.11 a/b/g allow the devices to operate 
at one frequency or channel only, which are called single-radio. Unlike single-radio, 
double-radio can be employed in IEEE 802.22, hence CR devices can monitor the spectrum 
status, while transmitting data using two or more frequencies or channels. However, it is 
difficult to detect primary users because the power of the primary user is distributed over a 
wide range of the spectrum, even though the actual information bandwidth is much narrower.  
 Sensing Duration and Frequency 
 Based on the IEEE 802.22 standard, the sensing period is selected as 30 seconds 
followed by 30 seconds of non-sensing operation. This cycle of alternate sensing and 
non-sensing is repeated. It is important for the cognitive user to avoid occupancies and 
interference to the primary user whenever the primary user wants to operate on the band. 
Therefore, we must consider the real-time features ahead of implementing cooperative or 
non-cooperative spectrum sensing. 
 Decision Fusion in Cooperative Sensing 
 In the case of cooperative sensing, it is a challenge task to share information among 
cognitive radios and combining the result from various measurements. Furthermore, there are 
two kinds of decisions made by each cognitive device with shared information: soft and hard. 
The difference between these two decisions is the probability of missed opportunity. It is 
important to consider the overhead of sharing information among cognitive radios and 
combining the results for a decision fusion. Besides the latency of routing in a network, it is 
essential that every cognitive node should collect and compute related data quickly for the 
precise information to detect primary users. 
 Security 
111 
 
to its autocorrelation function. 
 Wavelet Detection 
 For the detection of wideband signals, the wavelet approach offers advantages in terms 
of both implementation cost and flexibility. For disadvantage, this approach does not work 
for spread spectrum and has high computational cost. 
 
7.  RADIO ENVIRONMENT EMULATOR 
 In this project, we designed and implemented a Radio Environment Emulator (REE) for 
cognitive radio system analysis. REE contains several parts: (1) an environment 
characteristics generator, (2) a network emulator based on the well-known open-source 
network simulator (NS2), (3) a space and system simulator (SSS) for emulating the space and 
system characteristics that are lacking in the NS2 simulator, and (4) a limiter and packet 
processor (LPP). Fig. IX.7 illustrates the architecture of REE, including the process flow in 
the emulator. 
   
Fig. IX.7. Radio Environment Emulator diagram. 
 
In real life, people can use cognitive radio devices to transmit data, video, music, or 
whatever they want, but the transmission quality will depend on the environment condition, 
such as transmission distance, building, weather, etc. When using CR devices, people may 
demand quality of service (QoS), which usually is a combination of different objectives. In 
REE, we consider the combination of three objectives, namely throughput, data accuracy and 
power consumption. Throughput means the average rate of successful message delivery over 
a communication channel, which is correlated with data bit rate, communication protocol, 
and the presence/absence of building. Data accuracy represents the percentage of correct data 
Data Stream Data StreamLimiter & Packet Processor
Environment 
Characteristics 
Generator 
NS2
Space and
System 
Simulator
SEMO 
Case Based 
Reasoning
Solution
Generator
Human Machine Interface 
Radio Environment Emulator
CR Engine
Meters 
Objectives
(NS2 version)
Objectives
Meters
Knobs Knobs ObjectivesMeters
Data 
Processed 
DataSocket Socket
113 
 
 
Fig. IX.8. Experimental Architecture of Radio Environment Emulator. 
 
The final effects of the changed objectives can be observed from the client VLC 
software. When the bandwidth is high enough and the network condition is good, the 
streaming should be smooth, as shown in Fig. IX.9. If packet error rate (PER) is high, then 
we can observe some breaking frames during the playback, which looks like Fig. IX.10. In 
Fig. IX.11, some parts of the frame are broken. For the throughput objective, we can observe 
that the video was interrupted and the whole frame may be severely broken. 
 
Fig. IX.9. A Video Frame with Sufficient Throughput and Small PER. 
 
Fig. IX.10. A Video Frame with High PER. 
115 
 
G.  CONCLUSION OF PART TWO AND SUMMARY OF THREE-YEAR ACHIEVEMENTS 
For Subproject 1, studying and surveying different architectures and technologies for a 
multi-band/multi-bandwidth RF transceiver have been completed in the first two years, and 
we have designed and taped out 5 chips [C1-C5], and published two papers [6,7]. In the third 
year, we taped out 6 more chips [C6-C11] and published two papers [2,13].  
Main achievements of the past three years of research are summarized in the following. 
(1) Design RF front-end architectures and develop I/Q imbalance calibration loop and 
DC offset cancellation loop.  
(2) Verify the functionalities of the implemented multi-band/multi-bandwidth 
transceiver modules and architectures. 
(3) Evaluate the multi-band/multi-bandwidth transceiver performance. 
(4) Write software in C program for spectrum sensing and run it on a TI platform.  
 
For Subproject 2, we have completed the designs of all the functional units in an IEEE 
802.11a/g baseband (BB), namely channel encoding, interleaver/deinterleaver, symbol 
mapping, and FFT units in the first two years. These units are designed under low-power 
constraint and lower hardware cost. And we had also 4 of our results published in well-known 
conference and symposium [5,8,9,16]. In the third year, we had carried out some other useful 
functions, such as spectrum sensing and inner transceiver for supporting software defined 
radio, and have published 9 more papers [1,10-16,20].  
Main achievements of the past three years of research are summarized as follows. 
(1) A memoryless Viterbi Detector (VD) with low latency was designed, as shown in Fig. 
G.1. Unlike the traditional register exchange method, our design is based on a 
modified VD algorithm. Therefore, all the probable survivor paths without any 
branches can be found. This result shows that our design can eliminate the storage 
space to directly produce the output bit steam. Since the SMU is not needed, our 
design consumes lower power consumption and spends lower chip area than other 
designs. Moreover, to improve the VD performance, a proposed predictive scheme 
has been introduced in our design. This scheme can efficiently reduce the bit error rate. 
These features make our design suitable for application in portable wireless devices. 
117 
 
802.11b to transfer text, sound and video on the USRP platform by using the Ekiga software.  
In the third year, we implemented baseband SDR hardware and software for the 802.11 
b/g standard on the FPGA and USRP platforms. We studied the MAC communication 
protocols and integrated it into our SDR baseband architecture by using USRP platform and 
FPGA, more papers have been published from the research results of this subproject 
[3,4,13,17,19].  
Main achievements of the past three years of research are summarized as follows. 
(1) Use USRP hardware devices and GNU Radio software kits to build an SDR Platform 
to supply a stable and robust digital communication capability for the CR main 
project. 
(2) Extend the SDR platform APIs to supply more CR-oriented functions, such as 
Spectrum Sensing, Channel Switching, and Dynamic Reconfiguration. 
(3) Both the improved Channel Switching mechanism and the fast spectrum sensing 
feature provide a better automatic reconnection capability. 
(4) Build simple MAC and PHY layers for the GNU Radio. 
(5) By using a virtual point-to-point TUN/TAP network device, we can easily connect 
our SDR/CR platform to the Linux OS kernel for the users to access internet through 
our designed MAC and PHY. 
(6) Use a hierarchical design concept (1) to integrate all the system software modules 
written in Java, Python, and C++ languages, with the TUN/TAP device drivers; (2) 
to integrate the USRP hardware devices with the GNU Radio software kits and 
Linux OS kernel; and (3) to provide a GUI for the users to dynamically reconfigure 
the communication parameters. 
 
For Subproject 4, the research contributions mainly include the techniques that are 
proposed and implemented in the Adaptive Reasoning and Learning Framework (ARALF) 
for a CR system [22]. There are numerous open issues related to such a framework design 
and this project has helped to solve most of the issues with working solutions. The 
state-of-the-art techniques proposed in the ARALF design have been enhanced through the 
second and third years of this project. The technological tradeoffs in the implementation of 
ARALF are currently a hot topic of research and this project provides up-to-date answers to 
the tradeoff issue in the context of cognitive radios.  
In the third year, the goal of this subproject is to complete the design and implementation 
of an Adaptive Reasoning and Learning Framework (ARALF) for cognitive radios (CRs), 
which are based on software-defined radios (SDRs). The main value of ARALF is to 
119 
 
PUBLICATION LIST 
Journal Papers: 
1. Chu Yu, Mao-Hsu Yen, Pao-Ann Hsiung, and Sao-Jie Chen, “A Low-Power 64-point Pipeline 
FFT/IFFT Processor for OFDM Applications,” to appear in IEEE Trans. on Consumer 
Electronics, Feb. 2011.   
2. W. Y. Hu, J. W. Lin, K. C. Tien, Y. H. Hsieh, C. L. Chen, H. T. Tso, Y. S. Shih, S. C. Hu, and S. J. 
Chen, “A 0.18m CMOS RF Transceiver with Self Detection and Calibration Functions for 
Bluetooth V2.1 + EDR Applications,” IEEE Trans. on Microwave Theory and Techniques, Vol. 
58, No. 5, pp. 1367-1374, May 2010. 
3. M. H. Yen, C. Yu, H. Y. Shin, and S. J. Chen, “A Three-Sided Rearrangeable Switching Network 
for Binary Fat Tree,” to appear in International Journal of Electronics, 2010. 
4. Haw-Yun Shin, Mao-Hsu Yen, Chih-Cheng Tseng, and Hung-Huan Liu, “Fast Data Access and 
Energy-efficient Protocol for Wireless Data Broadcast,” 2010 Wireless Communications and 
Mobile Computing, 14 Jan. 2011. 
Conference Papers: 
5. C. Yu, M. H. Yen, P. A. Hsiung, and S. J. Chen, “Design of a High-Speed Block 
Interleaving/Deinterleaving Architecture for Wireless Communication Applications,” 
International Conference on Consumer Electronics (ICCE), Las Vegas, Nevada, USA, Jan. 2009, 
paper 4.2-1. 
6. J. W. Lin, D. T. Yen, W. Y. Hu, C. Yu, M. H. Yen, P. A. Hsiung, and S. J. Chen, “A 900 MHz to 
5.2 GHz Dual-Loop Feedback Multi-band LNA,” International Symposium on Circuits and 
Systems (ISCAS), Taipei, Taiwan, ROC, May 2009, pp. 1024-1027. 
7. W. Y. Hu, J. W. Lin, K. C. Tien, Y. H. Hsieh, C. L. Chen, H. T. Tso, Y. S. Shih, S. C. Hu, and S. J. 
Chen, “A RF Transceiver with Auto Signal Detection and Combined PGA/RSSI in 0.18μm 
CMOS for V2.1 Bluetooth Applications,” IEEE Radio Frequency Integrated Circuits Symposium 
(RFIC), Boston, Massachusetts, USA, June 2009, pp. 109-112. 
8. J. C. Lin, C. Yu, M. H. Yen, P. A. Hsiung, S. J. Chen, and Y. H. Hu, “Parallel Implementation of 
Convolution Encoder for Software Defined Radio on DSP Architecture,” International 
Symposium on Systems, Architectures, Modeling, and Simulation (SAMOS), Samos, Greece, July 
2009, pp. 180-186. 
9. J. C. Lin, M. J. Fan-Chiang, M. J. Hsieh, C. Yu, S. J. Chen, and Y. H. Hu, “An Instruction Set 
Architecture Independent Design Method For Embedded OFDM-Based Software Defined 
Transmitter,” IEEE International SOC Conference (SOCC), Belfast, Northern Ireland, UK, 
September 2009, pp. 207-210. 
121 
 
County, Taiwan (R.O.C.), pp.413-419, 16 Oct. 2009. 
20. C. Yu, C. J. Chen, M. H. Yen, P. A. Hsiung, and S. J. Chen, “A Memoryless Viterbi Decoder for 
OFDM Systems,” 2010 VLSI Design/CAD Symposium, KaoHsiung, Taiwan, ROC, August 2010, 
pp 45-48. 
21. K.-S. Huang, C.-H. Lin, and P.-A. Hsiung, “A Space-Efficient and Multi-Objective Case-Based 
Reasoning in Cognitive Radio,” Proceedings of the IET International Conference on Frontier 
Computing — Theory, Technologies and Applications, Taichung, Taiwan, August 2010. 
 
Book Chapter: 
22. Pao-Ann Hsiung, Sao-Jie Chen, Mao-Hsu Yen, Yu Chu, Chih-Hseng Lin, Ken-Shin Huang, and 
William C. Chu, “An adaptive reasoning and learning framework for cognitive radios,” in 
Handbook of Research on Mobile Software Engineering: Design, Implementation and Emergent 
Applications, IGI Clobal, Mar. 2010. 
 
Chip Tapeout 
C1. 低功率多頻帶低雜訊放大器 (T13RF-97C-079b, 2008-08) 
C2. 多頻帶射頻前端電路 (T13RF-97D-41b, 2009-02) 
C3. 適用於802.11a/Bluetooth接收機之低通濾波器  (T13RF-98A-055b, 2009-04) 
C4. 多頻帶射頻前端電路 (T13RF-98A-056b, 2009-04) 
C5. 適應型預增強雙向收發器 (T13RF-98A-090b, 2009-04) 
C6. 7.5G可程式大範圍無電感高速延遲鎖相迴路式頻率合成器 (T13RF-98A-098b, 2009-04) 
C7. 5 GHz 低功率電壓控制振盪器(T18-98D-155, 2009-09) 
C8. 低功率低閃爍雜訊CMOS直接降頻接收機 (T18-99B-185, 2010-03) 
C9. 1Gb/s GFSK解調器與時脈資料復原電路整合晶片設計 (TN90RF-99C-39, 2010-09) 
C10. 高效能柯比斯電壓控制振盪器 (T18-100A-207, 2011-01) 
C11. 低功率增益提高之電壓控制振盪器 (T18-100A-209, 2011-01) 
 
第五天（9月30日，週四）上午前往IBM Austin Research Lab (ARL)洽談未來可能合
作事宜，詳細行程參見附錄。翌日（10月1日，週五）上午前往UT Austin 拜訪Professors 
Yale Patt及Jacob Abraham洽詢明年邀請他們來台參加SoCC 2011之可能性，均獲得他們
肯定的答覆。任務完成後開車前往Austin機場搭乘16:05之DL4019班機前往Memphis再轉
17:50之DL3980班機於20:48抵達Madison。 
10月4日(週一) 本人於Madison搭乘達美航空DL2858的12:00班機於Monneapolis
轉14:30的DL619班機於10月5日17:05許抵達東京成田機場。然後搭乘18:50的DL275
班機於 10 月 5 日 22:00 許返抵台北。 
ICCAD 2010 
本人於 11 月 7 日(週日) 晚搭乘中華航空 CI 004 的 23:20 班機於 18:20 許抵達 San 
Francisco。旋即租車開往 San Jose 機場附近之旅館安頓妥當以便參加三天之
International Conference on CAD (ICCAD)。 
11月8日(週一)上午即到ICCAD大會會場所在之Double Tree旅館報到，取得名牌、
研討會議程簡介一冊、及會議論文集CD等資料。上午參加Opening Session and Keynote 
Address，由UC San Diego之James C. Bouwer主講Multi-Scale Microscopy of the Nervous 
System: The Challenge of Imaging and Organizing Data Across Spatial Scales Spanning。接
著參加Tutorial 1: Designing for Uncertainty: Addressing Process Variations and Aging 
Issues in Digital Systems。下午參加Tutorial 2: Reliability Analysis and Optimization at 
System-Level: A Straddle Between Complexity and Accuracy，及Tutorial 3: Analog 
Challenges in Nanometer CMOS and Digitalization of Analog Functionality。晚上參加了
ACM/SIGDA Member Meeting 聆聽由Scott Kirkpatrick之演講。 
第三天（11月9日，週二）參加上午的Tutorial 4: System-Level Design  An Industrial 
Perspective。中午參加Lunch Presentation由Lanza TechVentures之Lucio Lanza主講
Semiconductor and EDA Industr  A New Business Model。下午參加Session 6C: 3-D-ICs 
and Detection of Faults and Hardware Trojans及Session 7B: Parallel Methods for Power 
Grid and Interconnect Analysis。晚上參加了Reception Banquet。 
第四天（11月10日，週三）參加上午的Tutorial 7: Digital Microfluidic Biochips: A 
Vision for Functional Diversity and More than Moore 及下午的Tutorial 8: Manufacturing, 
CAD and Thermal-Aware Architectures for 3-D MPSoCs。至此會議結束。 
11月11日(週四) 8月16日 (週一) 中午車開往San Jose機場搭乘美國航空AA1052的
14:00班機經Chicago轉美國航空AA5028的21:45班機於22:30許抵達Madison。翌日本人
即到UW Madison的ECE Department，和胡玉衡教授討論合作研究事宜。 
11月15日(週一) 本人於Madison搭乘美國航空AA3313的14:20班機經Dallas轉
AA1421的19:20班機於21:05許抵達加州San Francisco。然後搭乘11月16日(週二)中華航
空CI 003的00:05班機於11月17日06:00許返抵台北。 
 
國際合作國外研究 
撰寫人: 陳少傑 
 
UW Madison Summer Visit and EITC 2010 
7月 2日(週五)上午搭乘中華航空CI 008的 23:20班機於 20:45許抵達Los Angelos，
然後搭乘美國航空 AA1092 的 23:55 班機於 7 月 3 日 05:45 抵達 Chicago 後再轉 AA5018
班機於 7 月 3 日(週六)08:15 許抵達 Madison。翌日本人即到 UW Madison 的 ECE 
Department 報到。此次本人預計於 UW Madison 停留至 9 月 10 日，和胡玉衡教授進行
密切之合作研究。 
7 月 30 日(週五) 本人於 Madison 搭乘美國航空 AA5022 的 14:55 班機於 Chicago 轉
AA1561 班機於 21:15 許抵達加州 San Francisco。然後搭乘 7 月 31 日(週六)中華航空 CI 
003 的 02:05 班機於 8 月 1 日 06:00 許返抵台北。 
8 月 3 日(週二)搭乘高鐵前往高雄參加假高雄義大皇冠假日飯店舉之「第二十一屆
超大型積體電路設計暨計算機輔助設計技術研討會」(The 21st VLSI Design/CAD 
Symposium)。8 月 6 日(週五)搭乘高鐵返抵台北。 
8月12日(週四)上午搭乘中華航空CI 004的23:10班機於 19:50許抵達San Francisco。
8 月 13 日(週五)租車開往 Stanford 大學之 Guest House 安頓妥當。 
8 月 14 日(週六)參加 EITC 2010 的 SoC/C4I (System-on-Chip; and Content, Computer, 
Communications, Consumer Electronics, and Integration) Workshop 的議程及主持
D1-W4-T1: System-on-Chip Design Automation 的議程。並參加 8 月 15 日(週日)全天的議程
至會議結束。今年的 SoC/C4I Workshop 之 25 位講者為由本及陳良基教授邀請，陣容堅
強，與會者收獲良多。詳情請參閱所附之“Report of EITC 2010”報告。 
8 月 16 日 (週一) 下午搭乘美國航空 AA554 的 13:55 班機於 Chicago 轉美國航空
AA5028 班機於 22:25 許返抵 Madison。 
9 月 10 日(週五) 本人於 Madison 搭乘美國航空 AA5024 的 18:35 班機於 Chicago 轉
AA2078 班機於 22:50 許抵達加州 San Francisco。然後搭乘 9 月 11 日(週六)中華航空 CI 
003 的 02:05 班機於 9 月 12 日 06:00 許返抵台北。 
 
  
Computing Opportunities and Challenges”. Dr. James Larsen from the iWICS, Inc. presented 
“Beyond 3G™, Unlimited Capacity”, Dr. Zye-Kong Cheng from iCHIPdesign, presented “A 
Multimedia Routing Algorithm in Multipath Environment”, and Professor Yu-Hen Hu from 
UW Madison presented “Recent Progress in Design Methodologies for Software Defined 
Radio”. The one speaker from Japan, Professor Kazuya Masu of Tokyo Institute of 
Technology presented a topic on “Physical design challenge to cognitive radio/software 
defined radio” and the one professor from Taiwan, Professor Chen-Yi Lee from National 
Chiao-Tung University presented “Recent Progress in Communications SoC’s”. 
For the Multimedia SoC Design and New Media tracks, we have invited five speakers from 
USA and one from Taiwan. Dr. Yen-Kuang Chen from Intel Corporation, delivered a talk on 
“Debunking the 100x GPU vs. CPU Myth: An Evaluation of Throughput Computing on CPU 
and GPU”. Dr. Bor-Yeu Tsaur from Kopin Display Corporation presented “Innovation and 
Commercialization of Microdisplay for 3D Applications”. Dr. Scott Chun-Yang Chen from 
Facebook presented “Data Infrastructure at Facebook”. Dr. Ching-Yung Lin from IBM T. J. 
Watson Research Center presented "Mine Your Business! Value and Utilization of Implicit 
Social Networks", and Dr. Chuo-Ling Chang from TokBox, Inc. presented “Technical 
Challenges and Solutions in Web-based Video Conferencing Systems”. Professor Jiun-In 
Guo from National Chung-Cheng University delivered a talk on “Low Power Video 
Technology for Multimedia SoC Design”. 
  
 
 
 
  
 
出國研究心得報告 
 撰寫人:蘇逸霈 
 98 年 11 月 28 日 
 
   本人於 2009 年 8 月 25 日(週二) 搭乘國泰航空 CX531 20:20 經香港再轉 CX255 
00:35 班機，抵達英國 London 後再轉 8 月 26 日(週三)之英倫航空 BD82 班機前往北愛
爾蘭 Belfast，當日安頓妥當後，即刻（8 月 26 日，週三下午）前往 Queen’s University 
of Belfast 之研究中心 ECIT 向 Prof. Sakir Sezer 報到，開始二個月之訪問研究，每個星
期與 Prof. Sakir Sezer 的討論獲益良多。 
   2009 年 10 月 15 日(週四) 本人從北愛爾蘭 Belfast 搭乘英倫航空 BD85 11:20 班機，
抵達倫敦並於 10 月 23 日(週五)搭乘國泰航空 CX252 12:35 班機前往香港，再轉國泰
航空 CX530 09:10 班機於 10 月 24 日抵達桃園機場，結束為時二個月之出國訪問研
究。詳細之研究心得報告書如附件。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Low Power Low Noise VCO  
2. Design Concept 
  The architecture of our proposed current-reused LC-VCO using Q-enhancement technique 
is shown in Fig. 2. Fig. 3 shows the equivalent circuit of negative conductance. Equivalent 
impedance Zeq without involving the parasitic effect is given by 
 
4 1 2
2
1 2
( )x m N N
e q
N N
v g S C CZ
I x S C C
     
 
4
2
1 2 1 2
1 1m
N N N N
g
S C C SC SC
            (1) 
 
4
2
1 2
m
eq
N N
gR
w C C
             (2) 
 
1 2
1 2
N N
eq
N N
C CC
C C
             (3) 
 
where 4mg  is the transconductance of M4 and w  is the operating frequency. 
 
 
 
 
Fig. 2. The proposed current-reused VCO with Q-enhancement technique. 
 
 
 
 
 
 
Fig.4. The equivalent half circuit of proposed VCO 
 
 
Based on [10], the quality factor of the cascode connection configuration without CN1 
and CN2 is given by 
 
4 ,1
2
M d r a i n
e f f
C
Q LG
           (6) 
 
where 4 ,M d r a inC  is the total capacitance at the drain of M4. 
From (4) and (6), the total conductance at the drain of M4 is 
_ _//eff L active device L active deviceG G G G G    
 
2
4 1 2
2 2 2
2 4 1 2( )( )
2
S m N N
m N N
R g C C w
L g C C ww
           (7) 
According to Equations (5) and (7), as e f fG is reduced, the values of Av and Q are 
increased. Thus the phase noise would be improved by the larger voltage amplitude and better 
quality factor. 
  
Fig. 7. Phase noise under FF, 0C. 
 
 
The tuning range of the proposed VCO is shown in Fig. 8. The prototype chip of the 
proposed VCO is implemented in TSMC 0.18 μm one-poly six-metal RF CMOS technology. 
Fig. 9 shows the layout view. 
 
 
Fig. 8. Tuning range of the VCO. 
 
 
Table I. PERFORMANCE COMPARISON 
 
Ref. VCO Center 
Frequency 
( GHz) 
Phase 
Noise 
(dBc/Hz)
Power 
Dissipation 
( mW ) 
(VCO Core)
FOM  
(dBc/Hz ) 
[8] 11.55 -110.8 @ 
1 MHz 
8.1 -183.0 
[11] 16 -111 @ 
1MHz 
8.1 -186.8 
[12] ** 11.2 -106 @ 
1 MHz 
4.8 -180.0 
[13] ** 28 -112.9 @ 
1 MHz 
12.0 -190.9 
[14] 1.38 -128.7@
1 MHz 
2.2 -186.9 
[5] 1.98 -103 @ 
100 KHz
1.0 -189.3 
This Work  
(Simulation)  
(TT, 50C) 
5.129 -117 @ 
1 MHz 
1.006 -191.16 
 
 
 
4. Conclusion 
 
A fully integrated low power and low phase noise LC CMOS VCO is proposed and 
fabricated. The proposed VCO oscillates in a 5 GHz band, whose power consumption is 
about 1mW, and phase noise is -117 dBc at 1 MHz offset. The FOM of the VCO is -191.16 
dBc/Hz. 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/02/28
國科會補助計畫
計畫名稱: 具推理與學習能力及內嵌智慧型FPGA之感知無線電平台(3/3)
計畫主持人: 陳少傑
計畫編號: 98-2220-E-002-007- 學門領域: 晶片科技計畫--目標導向型研究
計畫
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
Our research team members are collaborating with two distinguished 
international research groups. The first collaborating team is led by 
Professors Yu-Hen Hu and Michael Schulte at the University Wisconsin -
Madison, Wisconsin, USA and the second team is led by Professors John 
McCanny and Sakir Sezer (co-PI of the MOBIGIG project) at the Queen's 
University, Belfast, Northern Ireland, UK. Our interaction with the 
Wisconsin team is focused on Intelligent CR adaptation algorithm, as well 
as, software defined radio (SDR) implementation over a SandBlaster 
SB3011development board. Our collaboration with the MOBIGIG project is 
focused on the multi-band RF front-end design and novel communication 
system architecture development. 
 
The PI of sub-project 1 (Prof. Sao-Jie Chen) has been the Techincal 
Program Committee members and served as Session Chair of International 
Symposium on Quality Electronic Design (ISQED), IEEE International SOC 
Conference (SOCC). He is now serving as the General Chair of SOCC 2011 
which will be held in Taipei, on Sep. 26-28, 2011. The PI of sub-project 
2 (Prof. Chu Yu) has filed a patent on his baseband component design. 
The PI of sub-project 4 (Prof. Pao-Ann Hsiung) has been the Program 
Co-Chair and Session Chair of International Symposium on Networking and 
Wireless Communications. 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
