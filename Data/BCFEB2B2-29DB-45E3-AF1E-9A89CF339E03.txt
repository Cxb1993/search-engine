Learning the Stylistic Similarity Between Human Motions 171
Fig. 1. A system for human motion adaptation adapts a user-supplied (example) motion to a new
environment while preserving its stylistic details. Left: A typical example motion (walking on
the flat ground, with the left foot raised off the ground in this snapshot), which is geometrically
undesirable with respect to the intended environment shown here, in that the foot-contact con-
figurations deviate from the targets on the marble steps so much that severe penetrations into
the marble steps occur. Middle: The intended new motion for this particular scenario (example
motion and intended environment), which has been adapted to the surface of the marble steps
without being stylistically distorted. Right: A stylistically undesirable new motion for the same
scenario, where the foot contacts have been adapted to the surface of the marble steps while the
left foot penetrates into the marble steps due to the abnormally straight pose of the left leg.
to automating this similarity judgment, using single-class SVM (1-SVM) [2] and ker-
nel PCA (KPCA) [3] to model the distribution of stylistically similar motion pairs.
Moreover, in order to extract from two motions appropriate features for use with these
statistical techniques, we propose a set of rules for segmentation of human motions and
alignment of segmented motions, which rules form a structural paradigm for treating
human motions that is novel in the world of character animation.
One concern about our model of stylistic similarity would be the lack of a formal
definition of what we mean by “style,” which term always derives its definition from
some subjective taxonomy implied by its context. Since the algorithms we adopt for
building the model, i.e. 1-SVM and KPCA, generalize entirely from the training data,
the “styles” considered in this work are actually defined by the exact labeling system
used in the CMU Graphics Lab Motion Capture Database. In practice, we collected
walking, running, and jumping data exactly as they are labeled in the database. We
believe that the proposed technique for modeling stylistic similarity can be applied to
any specific setting of stylistic taxonomy, or even any other perceptual (perhaps not
visual) modalities, as long as appropriate data and features can be provided.
2 Related Work
Extraction of stylistically relevant features from human motion is essential to the effec-
tiveness and efficiency of the following two tasks:
– Style-based posture estimation: In [4], each transition pose in jumps was rep-
resented by some centers of body-part mass while estimated. In [5], joint angles,
vertical components in pelvis orientation, and their time-derivatives were extracted
for estimation of the probability density of human posture in a particular style of
motion; and
Learning the Stylistic Similarity Between Human Motions 173
4 A Framework for Human Motion Adaptation
4.1 Parameterization
The new motion to be optimized is represented by a vector made up of the following
variables:
– 6 rigid DOFs per frame for pelvis motion; and
– 60 standardized principal components for each motion segment of each limb with
which the character touches the environment. Any limb or torso that never touches
the environment inherits its motion from the example motion without taking up any
variables.
A concatenation of a 25-sample version of the angular signals represented by the 60
components can be computed by transforming the components according to a learned
subspace [18].
For subspace learning, we have collected 98 motion clips of such types as climbing,
jumping, running, walking, etc. By collecting limb-specific motion segments across
all the clips, we have as training data 514 (507, resp.) segments for the left leg (right
leg, resp.). After performing PCA on the training patterns extracted from the training
segments [18], we found the first 60 of the 175 principal components for each (7-DOF)
leg to account for about 99.9% of the total variation.
The low dimensionality of this motion representation is intended to avoid any pro-
hibitive amount of computation time or failure of convergence in the optimization,
which would generally be incurred by simply representing the motion by tens of postu-
ral variables per frame.
4.2 Constraints and Objectives
The synthesized motion x∗ minimizes the function
F(x) = wp ·P(x)+ wc ·C(x)+ wq ·Q(x)
subject to the constraints S(x)≥ 0 and bl ≤ V(x) ≤ bu.
The objective function P(·) represents the stylistic similarity of the new motion to the
example motion, giving the sum-square value of Nl + Nw nonnegative distortion scores
based on the KPCA, where Nl is the number of limb-specific motion segments repre-
sented by x, and Nw is the number of whole-body motion segments in each of the new
motion and the example motion. Each distortion score measures the stylistic distortion
of a motion segment in the new motion from its aligned counterpart in the example
motion, so that the score is close to zero if and only if the aligned pair is stylistically
similar. In addition, C(·) represents the sum-square distance of end-effectors from user-
specified targets during contacts, and Q(·) penalizes 1) excessive contact torques about
centers of support [4,19], and 2) loss of balance [4] at frames specified by the user for
balancing.
The constraint function S(·) also represents the stylistic similarity of the new motion
to the example motion, giving a vector of Nl +Nw similarity scores based on the 1-SVM.
Each similarity score measures how a pair of aligned motion segments (a segment in the
Learning the Stylistic Similarity Between Human Motions 175
Fig. 2. Whole-body feature extraction. Left: The procedures. (FK stands for forward kinematics.)
Middle: The reference frame. The character exactly faces the left. Right: The COMs computed.
all the postures, the process finally produces an 18K-dimensional vector as the feature
vector. We set K to 6 in all experiments.
Limb-Specific Features. The feature vector for a pair of motion segments (A,B) of a
limb is 30-dimensional, composed of the first 15 standardized principal components for
each of A and B. The 15 components are extracted from each segment by the analysis
procedures given in Section 4.1, except with a further truncated subspace.
5.2 Building the Models
To sample the similarity region in the space defined by each extracted set of features,
i.e. to gather training patterns, we have collected about 70 pairs of captured motion
clips, each pair formed by two motions of the same type (walking, jumping, or running)
and with the same sequence of end-effectors in contact with the environment (e.g. two
walks both starting with a left-foot contact and lasting for five steps, or two jumps both
composed of a doubly supported takeoff, a flight stage, and a doubly supported landing,
so that their segmentations can be aligned). To extract three sets of training patterns
from the clips (one dataset for whole-body features, one for left-leg features, and the
other for right-leg features; in each dataset we have approximately 90 patterns from
walking, 70 from jumping, and 90 from running), we applied the whole-body feature
extraction procedure described in Section 5.1 to each pair of aligned whole-body motion
segments found in each pair of clips, and the limb-specific procedure in Section 5.1 to
each pair of aligned limb-specific (leg) motion segments found in each pair of clips.
Models Based on the 1-SVM. As the first part of our modeling efforts, for each dataset
{pi ∈ Rn : i = 1, . . . , I} , we fit a hypersurface {p ∈ Rn : fs(p) = 0} to the boundary
samples in the dataset such that fs(pi) ≥ 0, ∀i ∈ {1, . . . , I}, i.e. all the training patterns
lie on the same side of the supporting hypersurface, using the single-class SVM training
routine in the OSU Support Vector Machines Toolbox, which is based on the LIBSVM
library. 1-SVM [2] and the better-known two-class SVM differs in that instead of find-
ing a separating hypersurface between the respective supports of two groups of training
patterns, the 1-SVM algorithm simply estimates the support of a single group of training
patterns, i.e. its purpose is to detect novelty given a set of usual patterns.
Learning the Stylistic Similarity Between Human Motions 177
lower-order principal axes. Note that as an inner product in the centered ∞-D space,
‖z‖2 can be computed via fk(·, ·) and centering [3]. In our experiments, the cut-off
order Oc is set to 16 for the whole-body dataset and to 22 for each single-leg dataset.
To estimate the modeling accuracy of each set of fitted hypersurfaces learned by
the KPCA algorithm, we have conducted 20-fold cross-validation on the corresponding
dataset. For the hypersurfaces fitted to the whole-body dataset, we plot the histogram of
the relative leakage over all validating patterns in Figure 3; for the hypersurfaces fitted
to the single-leg datasets, the same histograms are again computed, as not shown here
due to the space limit. For every set of fitted hypersurfaces, the average relative leakage
over all the validating patterns is found to be roughly 0.1, and about 90% of the patterns
are found to have relative leakages below 0.2.
6 Adaptation Experiments
In our implementation of the adaptation system presented in Section 4, for better effi-
ciency of the optimization, we apply the transformation proposed by Schittkowski [21]
to the constrained nonlinear least squares problem defined in Section 4.2. The result-
ing nonlinear program is coded in ANSI Fortran 77, augmented with sparse deriva-
tive computation by the ADIFOR 2.0 automatic differentiation tool, and solved by the
sparse nonlinear programming routine in the NAG Fortran Library, which is based on
the SNOPT package described in [22], on a Pentium-4 1.8-GHz PC running Red Hat
(7.2) Linux with 512-MB RAM. Note that low-dimensional representation of human
motion serves here to prevent variables from significantly outnumbering constraints,
thereby favoring the efficiency of SNOPT and ADIFOR-generated codes. In our exper-
iments, every adaptation took less than thirty minutes.
To evaluate the effectiveness of our adaptation system, we have tested it on 18 distinct
motion adaptation tasks. In these tasks, the example motions are of the types walking,
jumping, and running (6 tasks for each type) and apart from those used in preparation
of the datasets from which the models of stylistic similarity were learned, and most of
them are each composed of 3 or 4 whole-body motion segments. We specified contact
targets such that each example motion significantly deviates from the associated targets
in the new environment, and the targets still look attainable for the specific activity
in the example motion, thereby controlling the task difficulty. By playing back and
watching each of the 18 synthesized motions, we found that each motion exhibits the
intended style, as well as a realistic contact during each contact event. All these tasks
were performed with the same parameter setting, except that in running tasks only 30
standardized principal components were used to represent each leg motion segment
in order for the number of variables to roughly match the relatively small number of
constraints in running tasks. Only ending frames in jumps were marked for balancing.
To verify the necessity of enforcing stylistic similarity to the example motion, we
created a crippled version of our system by dropping from the nonlinear program the
functions representing the similarity, i.e. S(·) and P(·), and repeated all the above 18
tasks using this crippled version instead. The new motions resulting from this verification
were each found to be stylistically distorted. Manifestations of such distortion include
abnormal poses, abnormal variations in speed of movement, and abnormal directions of
Learning the Stylistic Similarity Between Human Motions 179
3. Scho¨lkopf, B., Smola, A., Mu¨ller, K.R.: Nonlinear component analysis as a kernel eigenvalue
problem. Neural Computation 10 (1998) 1299–1319
4. Liu, C.K., Popovic´, Z.: Synthesis of complex dynamic character motion from simple anima-
tions. In: SIGGRAPH. (2002) 408–416
5. Grochow, K., Martin, S.L., Hertzmann, A., Popovic´, Z.: Style-based inverse kinematics.
ACM Trans. Graph. 23 (2004) 522–531
6. Arikan, O., Forsyth, D.A., O’Brien, J.F.: Motion synthesis from annotations. ACM Transac-
tions on Graphics (TOG) 22 (2003) 402–408
7. Ben-Arie, J., Wang, Z., Pandit, P., Rajaram, S.: Human activity recognition using multidi-
mensional indexing. IEEE Trans. Pat. Anal. Mach. Intel. 24 (2002) 1091–1104
8. Rao, C., Yilmaz, A., Shah, M.: View-invariant representation and recognition of actions.
International Journal of Computer Vision 50 (2002) 203–226
9. Gleicher, M.: Motion editing with spacetime constraints. In: Proceedings of the 1997 sym-
posium on Interactive 3D graphics. (1997) 139–ff.
10. Gleicher, M.: Retargetting motion to new characters. In: SIGGRAPH. (1998) 33–42
11. Lee, J., Shin, S.Y.: A hierarchical approach to interactive motion editing for human-like
figures. In: SIGGRAPH. (1999) 39–48
12. Popovic´, Z., Witkin, A.: Physically based motion transformation. In: SIGGRAPH. (1999)
13. Sulejmanpasˇic´, A., Popovic´, J.: Adaptation of performed ballistic motion. ACM Trans.
Graph. 24 (2005) 165–179
14. Tak, S., Ko, H.S.: A physically-based motion retargeting filter. ACM Trans. Graph. 24 (2005)
15. Pollard, N.S., Behmaram-Mosavat, F.: Force-based motion editing for locomotion tasks. In:
Proceedings of the IEEE International Conference on Robotics and Automation. (2000)
16. Pollard, N.S.: Simple machines for scaling human motion. In: Computer Animation and
Simulation ’99. (1999)
17. Liu, C.K., Hertzmann, A., Popovic´, Z.: Learning physics-based motion style with nonlinear
inverse optimization. ACM Trans. Graph. 24 (2005) 1071–1081
18. Fod, A., Mataric´, M.J., Jenkins, O.C.: Automated derivation of primitives for movement
classification. Autonomous Robots 12 (2002) 39–54
19. Fang, A.C., Pollard, N.S.: Efficient synthesis of physically valid human motion. ACM
Transactions on Graphics (TOG) 22 (2003) 417–426
20. de Leva, P.: Adjustments to Zatsiorsky-Seluyanov’s segment inertia parameters. J. Biome-
chanics 29 (1996) 1223–1230
21. Schittkowski, K.: Solving constrained nonlinear least squares problems by a general purpose
SQP-method. In Hoffmann, K.H., et al., eds.: Trends in Math. Optim. (1988) 295–309
22. Gill, P.E., Murray, W., Saunders, M.A.: SNOPT: An SQP algorithm for large-scale con-
strained optimization. Technical Report NA–97–2, Dept. Mathematics, UCSD (1997)
Arimoto 演講＂What is a break through toward human 
robotics＂，對於機器人學術領域的研究學者來說，都是啟
人深思的研究方向。 
 
此外，為了增加機器人最新應用研究成果之資訊揭露，主辦
單位也辦理 11 場次之 workshops/tutorials，參加人數甚為
踴躍。由於本次論文發表數量眾多，因此主辦單位每天同時
安排 16 組，每組每次發表 5-6 篇論文，每篇論文發表 18 分
鐘，總計 188 場次於三天會期內完成發表，這個現象反應出
世界各國對於引進機器人，並且與人互動，增進人類生活品
質的看法形成共識，從投入人力及經費從事智慧型機器人，
從事學術應用的研發規模可一窺端倪。 
 
本人此次報告有關利用內外橢球近似凸多面體邊界，進行二
凸多面體碰撞偵測的方法，進一步延伸到凸多面體頂點，可
作均勻或不均勻位移的變形情況。本次會議來自台灣之學者
及教授，包括財團法人精機中心的二位考察專員，約 15 位
受邀與會，本人亦利用此次機會，與台灣學者及教授交換訊
息，增進彼此領域之瞭解，進而尋求合作研究之機會與可
