the first approach, two transceivers are needed. One is for 
keeping in touch with all other STAs on the dedicated control 
channel. The other is for dynamically switching to the selected 
data channel for data exchanges. The protocols [2][10] using 
only one transceiver would suffer from the problems we 
mentioned in the introduction. In the second approach, only 
one transceiver is needed and this transceiver has to stay in 
control and data periods alternately. 
Next, we compare the maximal number of data channels 
that can be fully utilized (called data capacity in the report) for 
both approaches. Let Tn and Td denote the average time to 
complete negotiations and to complete data exchanges 
between a transmission pair, respectively. Suppose that Tn < Td. 
Then, in the first approach, there are at most Td/Tn transmission 
pairs that can finish negotiations on the control channel during 
one Td on the data channel. As discussed in [3], the data 
capacity is Td/Tn. In the second approach, let the length of a 
control period be Tc. Then, the total number of transmission 
pairs that can finish negotiations is Tc/Tn. All these 
transmission pairs will simultaneously enter the data period 
and will be distributed to at most Tc/Tn data channels. Hence, 
the data capacity is Tc/Tn. 
The advantages and disadvantages of these two approaches 
are summarized below. 
z Dedicated control channel 
Advantages: The dedicated channel can serve as a broadcast 
channel. Channel negotiations can be done anytime. 
Disadvantages: The dedicated channel on which only control 
packets are transmitted may have low channel utilization. The 
data capacity is dependent on the bandwidth of the dedicated 
channel which can not be dynamically adjusted. 
z  Common control period 
Advantages: The common channel can be used to transfer 
data packets during data periods, which increases channel 
utilization. The hardware cost is low because only one 
transceiver is needed. The data capacity is dependent on the 
length of a control period which can be dynamically adjusted. 
Disadvantages: Time synchronizations among STAs are 
needed. It takes cost to transmit any broadcast message within 
a data period. Channel negotiations can not be done anytime, 
and hence this may cause a long delay on the delivery of 
pending data packets. 
Actually, there are other approaches to do negotiations. 
HRMA [11] and SSCH [12] use the rendezvous time slots 
during frequency hopping to do negotiations. Each STA uses a 
local broadcast (i.e., multiple unicasts) in HMCP [13] and a 
broadcast channel in PCAM [14] to inform neighboring STAs 
its channel setting. 
B. Channel Selection Strategy 
In the following, we discuss how to agree with a common 
channel during negotiations. We consider this issue from two 
aspects: channel selection criterion and selection decision 
maker. 
We classify various channel selection strategies into two 
categories: global and local schedules. Every STA can know 
the channel activities of all other STAs in the global schedule, 
but can know the channel activities of neighboring STAs in the 
local schedule. 
The pre-requirement of using the global schedule is that all 
STAs are within one-hop distance. In MAP [9], the common 
control period is used, during which all oncoming transmission 
pairs do negotiations. Every STA will collect these negotiation 
data and will have a global view about how many transmission 
pairs will take place and how long each transmission pair will 
spend. According to this information, every STA can do the 
same shortest-job-first scheduling algorithm to schedule these 
transmission pairs onto appropriate channels. Though the 
optimal schedule can be found, this method can not be applied 
in multi-hop network environments. 
In the local schedule, there are three criteria that can be used: 
idle state (MAP [9], AMNP [2], DCA [3], DPC [4], RBCS [5], 
MCMAC [7]), traffic load (MMAC [8], HMCP [13]), and 
random assignment (MCDA [6]). Using the idle state, the 
channel that will become idle at the earliest is selected. Using 
the traffic load, the channel that has the lightest traffic load is 
selected. Using the random assignment, the channel is 
randomly selected. Channel selections using the first two 
criteria incur the overhead on information collection, while 
channel selections using the last criterion may have poor 
performance. 
Next, we discuss who makes the final decision on the 
channel selection during negotiations. We classify the decision 
strategies into three categories: sender, receiver, and hybrid. 
In the sender-based scheme, always a sender decides a data 
channel according to its own selection criterion to exchange 
data with a receiver. The receiver may either conditionally or 
unconditionally accept the decision. If the unconditional accept 
is applied, this kind of protocols needs another channel 
contention on the selected data channel to prevent collision at 
the receiver side. If the conditional accept is applied, the 
receiver can reject the decision if its own selection criterion is 
violated. The latter case may involve several rounds of 
negotiations between the sender and receiver. Each round of 
negotiations involves a two-way handshake. Examples of this 
scheme contain DPC [4] and MCDA [6]. 
In the receiver-based scheme, a sender tells its 
corresponding receiver the state (idle or traffic load) of each 
data channel it knows. Then the receiver compares this 
received information with its own one and then decides a data 
channel to be used. If the neighbors at the sender side need to 
be informed with the decision result, these negotiations will 
involve a three-way handshake. The delivery of channel states 
becomes an overhead. Examples of this scheme contain DCA 
[3], MMAC [8], and MCMAC [7]. 
In the hybrid-based scheme, a sender tells its corresponding 
receiver the state of each data channel and the 
recommendation of one data channel. If the receiver accepts 
the recommendation, this scheme works as a sender-based one. 
Otherwise, this scheme works as a receiver-based one. An 
example of this scheme is AMNP [15]. 
 
Figure 1.  Process of channel negotiations and data exchanges. 
IV. PERFORMANCE EVALUATION 
We simulate the proposed protocol using the CSIM [18] 
language. We mainly compare our scheme (abbreviated as 
Novel) with DCA and MMAC. 
A.  Simulation Model 
For simplicity, we consider a fully connected topology 
where all nodes are within the radio range of each other. Also, 
we disable power management in our scheme for fair 
comparison. Each traffic flow is generated by the Poisson 
distribution. The network parameters are followed by the IEEE 
802.11 system. We assume that each channel has the same 
bandwidth of 2Mbps and the average channel error rate is 10-4. 
The default channel number is three. 
In the simulation, we use the following metrics to measure 
the performance. 
_ * _ _
_
Packet Length No Successful PacketsThroughput
Total SimTime
=  
_ __
_ _
Total Packet DelayAvgerage Delay
No Successful Packets
=  
PacketsGeneratedTotalNo
PacketsDropNoRateDrop
___
__(%)_ =
_ * _ _
_ * _
Packet Length No Successful PacketsUtilization
Total SimTime No Channels
=  
B. Simulation Results 
Figure 2 shows the throughput comparisons as the number 
of STAs (sender nodes) increases. The network load becomes 
heavy when the number of STAs is large. When the network 
load is low, all protocols perform similarly. As network load 
grows to near saturation, Novel performs significantly better 
than DCA as well as MMAC. This is because the bandwidth of 
the control channel is fully utilized by the proposed protocol. 
Novel which uses the counter-based channel selection can 
simplify the channel decision process and can balance channel 
load on the network. 
DCA has to concern with the released time of each data 
channel and then agrees with a free channel before data 
transmission. Moreover, only one data packet can be 
transmitted after negotiations. This results in complex channel 
negotiations and ineffective reservation when data 
transmissions fail on the selected data channel. 
MMAC has to pay the penalty of the ATIM window during 
which data packets can not be delivered. We have selected the 
best ATIM window size for MMAC in the simulation, but its 
throughput is still lower than Novel. 
0
200
400
600
800
1000
1200
1400
1600
1800
10 20 30 40 50 60 70 80
Number of STAs
Th
ro
ug
hp
ut
 (K
bp
s)
Novel
DCA
MMAC
 
Figure 2.  Throughput vs. Number of stations. 
Figure 3 shows the average packet delays of different 
protocols as the network load increases. As can be seen, DCA 
and Novel have the similar delay. MMAC has a high delay, 
since STAs have to wait for the ending of the current ATIM 
window before transmitting data packets. Moreover, not every 
transmission pair can finish channel negotiations during an 
ATIM window. These pairs have to wait for the next ATIM 
window, and this will also postpone packet delivery. 
0
10
20
30
40
50
60
70
10 20 30 40 50 60 70 80
Number of STAs
A
ve
ra
ge
 D
el
ay
 (m
s)
Novel
DCA
MMAC
 
Figure 3.  Average Delay vs. Number of stations. 
Figure 4 compares the drop rates of the protocols. The 
higher drop rate represents the lower reliability of the protocol. 
Novel has the lowest drop rate among all. DCA suffers from a 
high drop rate because of serious contentions (per-packet 
negotiations and re-negotiations) on the control channel. 
0%
10%
20%
30%
40%
50%
60%
70%
80%
90%
10 20 30 40 50 60 70 80
Number of STAs
D
ro
p 
R
at
e 
(%
)
Novel
DCA
MMAC
 
Figure 4.  Drop Rate vs. Number of stations. 
