)(xρ  usually has two nonzero terms, we shall assume that 
 kk xxx )1()( 1 ρρρ −+= − . 
Given the polynomial )(xλ  of bit nodes, the value of ρ of 
check nodes can be completely determined as [6] 
 ]1)1([ −+= kAkρ , (1) 
where 
 
1
1)1(
2 +
−+=−= ∑
≥ kki
RA
vd
i
i ρρλ .      
Then 
k
kk
A +
+= ρ
)1(1
. Because 10 << ρ , we take 
)/1(floor Ak =  and the ρ  shown in (1). 
Because higher values of vd  is wanted to satisfy the 
existence condition of 1)('1
1 ≥− xfη , we consider the set 
),,,( 2 vdm λλλ L  instead of the set ),,( 12 −vdλλ L  of larger 
dimension, which shows that the inclusion of the range 
),,( 11 −+ vdm λλ L  may not effectively lower the threshold. 
Because bit nodes of higher degree may get higher error 
protection, the value of 
vd
λ  may be specified for the design. 
In this paper we will not fix the value of 
vd
λ  and we will 
search its optimal value. The index m  is to be chosen by trial 
and error. 
The PSO algorithm starts from a set of degree solutions of a 
population of size N. The initial values for the elements of 
each solution are randomly generated subject to the 
constraints of )(xρ  and )(xλ . 
For each generation the velocity of each solution is updated 
as [18]  
)gbest(rand)pbest(rand 2211 iiiiii xcxcwvv −+−+←
, (3) 
where w is an inertial parameter, 1c  and 2c  are weighting 
coefficients, 1rand  and 2rand  are random numbers 
uniformly distributed over (0, 1), and ipbest , gbest  are  the 
best positions for the i-th solution and for the whole 
population, respectively. The inertial parameter w can be 
chosen in many desired ways and it represents the inertial 
moving of the solution in the search space. When the number 
of iterations grows, the value of w  reduces toward a limited 
value minw , which can be determined by trial and error. An 
initial weight 9.max =w  and a final weight 4min =w  were 
chosen, respectively, one updates the weight w as [18] 
 min
max
minmax iter)iter
iter1)(( wwww +×−−=  (4) 
where maxiter is the maximum iteration number, and iter is the 
current iteration number. We found the values used in [17] 
yield suitable results within a smaller amount of computation 
time. And the position of the solution was updated as  
 vxx +← , 
Given an initial trial value ),,( 2 mλλ L  of the solution 
vector, we multiply it with a value M  to form the position 
vector. When the position and velocity of each updated 
solution greater than their upper bound, they are reset to these 
maximum values. Because the elements of ),,( 2 mλλ L  
should not lower than zero we took the absolute vale of the 
updated position. The position and speed of each solution are 
also restricted in their maximum range. 
III. THE DENSITY EVOLUTION METHOD  
In the message passing algorithm (MPA), messages 
transmit LLR back and forth at the edges of bipartite graph. 
There are two classes of nodes: variable nodes and check 
nodes. The edges pass messages to their connected nodes, 
where messages get updated iteratively.  
LDPC code may be defined by its parity check matrix 
H = },{ nmH , where =nmH , 0 or 1 [14]. Let )(lv  be the 
LLR message from variable nodes to check nodes in the lth 
iteration, and )(lu  be the LLR message from check nodes in 
the lth iteration. Define }1,:{)(M == nmHmn  as the set of 
edges that are connected to the nth variable node, and 
}1,:{)(N == nmHnm  as the set of edges that are connected 
to the mth check node. At the l-th iteration the decoding is 
given as follows [14]: 
 ∑∈+= nnMm
l
munr
l
nv \)(
)(
2
2)(
σ
,   
Nnnn ,,1),(N L=∈ , (5) 
 ∏∈= nmNi
l
iv
l
mu
\)(
)
2
)(
tanh()
2
)(
tanh(  
Mmmm ,,1),(M L=∈ . (6) 
The degrees of the variable and check nodes are denoted by 
|)(M|, nnvd =  and |)(N|, mmcd = , respectively. 
Let lμ  and lm  denote the average values of )(lu  and )(liv , 
 lμ = ])([ luE ,  ])([ livElm = . (7) 
B. The threshold for irregular LDPC code 
Similarly, for irregular LDPC code, we modify the curves 
)(1 xf  and )(2 xf  as [15] 
 
.)1()(
)),(
2
(1)(
,
2
)1(
1
),ch()(2
))((1
2
)(1 ,
xjxjh
xjh
vd
j
k
jxkg
vd
j
jj
mxxf
xkg
cd
k k
xf
η
λ
λ
η
η
ρ
−=
∑≥
−Ψ=
∑≥ −
=
−=
−Ψ∑≥=
 (19) 
As before for the first curve )(1 xf , it is not related to the 
SNR and is determined by the degree profiles. So the shape of 
)(1 xf  can be modified by choosing various degree 
distributions. For another one )(2 xf , it is a straight line of 
slope η  and its location at the horizontal axis is at chmx = , 
which is decided by the SNR. Given the degree profiles we 
can solve the equation 
 ch))((
1
2
1 mxxkg
cd
k k
−=−Ψ∑≥
− ρη  (20) 
for chm . It is clear that the curve is decided by the degree 
profiles and the function )(xΨ . Because we require that 
there is only one solution for (20) for locating the threshold, 
we can solve )(')(' 2
1
1
1 xfxf −− =ηη , i.e. 
 1)('1)(|)]'(
1
2
[ =−=−Ψ∑≥ xkgxkguu
cd
k k
ηρ , (21) 
where 
)(|2
)(')(2)1()1()('1 xjhv
vd
j
vvkjjkxkg =∑≥ Ψ
−Ψ−−=− λη , (22) 
 xjxjh )1()( −=η , (23) 
 )]'(1[ u−Ψ = ))(1('/1 u−ΨΨ . (24) 
IV. NUMERICAL RESULTS 
Due to this rapid fall off to the error probability floors of 
LDPC codes, optimal code design will be compared by using 
thresholds instead of their bit error rates. As shown in the 
former sections, the degree distribution will change the slopes 
of the two curves and the threshold is decided by the slopes of 
them. Then it is nature to draw the curves of slopes and 
compare the points at which the slopes of )(1
1 xf−η  and 
)(2 xf   equal 1. The smaller the point is the lower thresholds 
may attain. 
For irregular LDPC codes there exits at least two roots of 
0)(''1
1 =− xfη . So one needs to restrict the search region 
over *),0( x  as shown in Figure 2. Because there may be 
many roots, it may generate many fixed points. So care should 
be taken when irregular code design is used although the 
threshold can be lower than the one for the same rate of 
regular code. 
Figure 2 and Figure 3 illustrate the curves of )(1 xf  and 
)('1
1 xf−η  for various pairs of ( vd , cd ), respectively. The 
root of 1)('1
1 =− xfη  moves from 14.10 =x  to 1.20 =x  
when the components of the degree pair ( vd , cd ) get smaller. 
The curve )('1
1 xf−η  is more curly for the one of higher 
degrees of ( 20=vd , 9=cd ) than the one with ( 6=vd , 
5=cd ). 
One needs to be cautious that the values of )('1
1 xf−η  may 
be smaller than 1, and then the solution will not exist. In 
Figure 2 the curve )('1
1 xf−η  <1 for the degree pair ( 6=vd , 
5=cd ). This can be checked with the table of 
1)('1
1 =− xfη  before one starts the search for the solution. If 
no solution exists, then there may be some fix point and 
decoding failure may occur. 
V. CONCLUSIONS 
We have shown the method for locating the thresholds for 
both regular and irregular LDPC codes without using 
simulations to find these values. The analysis is based on the 
two curves formed by the expected values of the LLR 
messages sent from the variable nodes and check nodes. 
Derivatives of these curves are used to find the solutions. 
Based on the iterative MP decoding algorithm, the success of 
the decoding depends on the decoding tunnel’s shape. 
We have shown the numerical method to accurately 
calculate the expected value of the message transmitted from a 
check node. Accurate evaluations of the integrals are crucial 
for the search of the threshold, which may lie close to the 
Shannon limit. The analytic method derived by using 
Gaussian approximation makes the search for good node 
degree distribution much easier. 
After the threshold of a LDPC code is found, the search for 
the distribution is usually implemented by using intelligent 
algorithms such as genetic or evolutionary algorithms due to 
the high dimension of the solution. In general these algorithms 
require a pool of solutions and a fitness function is applied to 
evaluating the goodness of the solutions. The best group will 
be chosen to generate a new population as candidate of the 
  
Irregular, eta F1' (x)/eta; (dv=20, dc=9), (dv=6, dc=5), (dv=9, dc=7)
0
1
2
3
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
x
y
F1'(x)/eta,dv=6,dc=5
x*
F1'(x)/eta,dv=20,dc=9
F1'(x)/eta,dv=9, dc=7
x0
 
Figure 2 The curves of )('1
1 xf−η . The root 0x  for 1)('11 =− xfη  gets smaller when  vd  and cd  get larger. In 
the neighborhood of the solution 0x  the curve gets steeper for the set vd =20, cd =9 than the set vd =6, cd =5. 
The root moves from 14.10 =x  to 1.20 =x . 
  Page 1 of  1  
WTS2009-Wireless Telecommunications Symposium  
第 八 屆 WTS2009 無 線 通 訊 研 討 會  
賀  嘉  律  
國 立 中 央 大 學 通 訊 系 教 授  
 
一 、 前 言  
此 會 議 係 屬 於 WTS 組 織 於 2009 年 4 月 22-24 日，在 捷 克 布 拉 格
(Prague)舉 行 。 其 目 的 是 聚 集 關 於 無 線 通 訊 、 網 路 與 服 務 等 有 專 精 的
學 者 專 家，作 論 文 發 表 並 交 換 心 得，進 而 促 進 國 際 間 相 互 合 作 的 機 會。 
二 、 會 議 概 況  
會 議 共 分 三 天 舉 行，主 題 專 注 於 無 線 通 訊 與 相 關 之 技 術，今年特
地於歐洲舉辦，希望能夠與歐洲有進一步的聯繫。  
本 人 在 此 會 議 提 出 論 文 為 ： Analysis of Threshold of Regular and 
Irregular LDPC Codes Using Gaussian Approximation，論 文 主 題 在 探
討 如 何 使 用 高 斯 近 似，探 討 規 則 與 不 規 則 LDPC 碼 的 門 檻，以作為設
計該類碼的標準。這篇文章是進年在該碼的一個突破，經評審被歸類
於高評分文章，故 十 分 引 起 與 會 學 者 的 注 目。  
此 次 會 議 算 是 小 而 美 型 的，主 題 又 是 主 要 在 探 討 無 線 通 訊 與 網 路
服 務 ， 故 與 會 者 提 出 不 少 建 言 與 深 度 的 看 法 。  
在 捷 克 布 拉 格，同 時 還 遇 見 來 自 台 灣 鴻 海 在 歐 洲 工 作，參 加 Intel 
IDF 研 討 會 之 人 員，倍 感 親 切。  
三 、 建 議  
感 謝 國 科 會 輔 助 參 加 這 次 會 議，能 至 加 拿 大 參 加 這 種 國 際 會 議 ，
有 機 會 碰 到 專 家 學 者 真 是 很 好，此 外 對 新 知 的 獲 得 也 有 很 大 的 收 穫 。 
 
