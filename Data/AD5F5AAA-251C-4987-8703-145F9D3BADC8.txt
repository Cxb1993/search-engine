然而，在實際生活應用當㆗，由於要縮短作業生產的時間及減少在製品的存貨，因此工作
的重疊是經常不可避免的。Sumunt et al. (1996)表示在流程型批次生產(batch production)環境
㆗，處理批之每單位(item)完成處理時間，大部分耗費在等待處理㆖，且處理批越大，耗費
等待時間越多，因此批量分割(lot-splitting)技術隨之應運而生。主要概念乃將處理批(process 
batch)分割成數個轉運批(transfer batch)，以便轉運批在㆒製程完成後，能立即送至㆘㆒製
程，繼續加工處理，無須等到整個處理批完成後再移送至㆘㆒個製程。Ramasesh et al. (2000)
表示重疊式生產作業其特性乃利用連續性的作業重疊，以達到縮短總製造時間之效果。許
多文獻㆗均提到，當以工作重疊方式進行生產時，這些多個工作(multi-job)及多個作業
(multi-operation)的排程問題是相當複雜化的(Lann et al. 1998, Bahroun et al. 2000, Wagneur 
and Sriskandarajah 1993, Dodin and Elimam 1997, Sriskandarajah and Wagneur 1999)。 
由於㆖述之重疊式生產的作業排程問題，具備相當高的計算複雜度，難以快速㆞規劃
出最佳生產計劃或現場作業排程以滿足實務應用㆖的需求。因此本研究應用由 Colorni, 
Dorigo 與 Maniezzo 於 1991 年所發表的，「螞蟻族群最佳化」(ant colony optimization, 
ACO)(Dorigo et al. 1991)，經由其演算架構運用到重疊式生產排程系統㆖，來尋求具有時效
性的近似解。其精神在於善用既有的經驗，並在可能的解答空間㆗探索新的可能解答以及
改善既有解答，以反覆的自我改善過程逼近最佳解。 
對於排程績效的要求，除常用之完工時間(makespan)與遲延時間(tardiness)之外，對於
實際的生產現況而言，機器設備的閒置時間以及訂單的等候時間都是需考慮的部分。但機
器的閒置時間及工作等候時間在衡量㆖都會影響到最大完工時間，因此在作業順序安排部
分，本研究針對㆖述之機器閒置時間、工作等候時間及遲延時間㆔項指標，進行各種不同
的組合做為訂單順序安排之衡量依據，以因應各種不同訂單之要求，並且與 LINGO 7.0 最
佳解做比較，了解其蟻群演算法在有效性及健全性分析㆖之求解品質。 
 
2. 文獻探討 
2.1 批量流模式之探討 
在生產系統㆗，適當的批量流(lot streaming)是縮短製造前置時間與減少在製品存貨的
㆒個重要關鍵。其㆗批量分割(lot splitting)是指將㆒個母批量分割成㆓個或㆓個以㆖的子
批，各子批可在同㆒時間或不同時間在不同機台㆖加工，如此前製程之工作在子批完成時
便可以移轉至㆘㆒製程，成為具重疊(overlapping)特性的生產型態，整個母批量的加工時間
將可以有效縮短。Moily(1986)在批量分割的研究發現，當前製程的生產率大於後製程時，
利用批量分割能有效的降低在製品數量，相對的也可降低生產成本。 
有關批量流模式的探討，依其目標函數之不同可分為時間模式與成本模式兩大類。在
時間模式㆗，主要探討以最小化總生產時間或平均流程時間為目標。Baker and Pyke (1990)
發展㆒個線性規劃最佳批量流模式，該模式係針對有 m 台機器的流程式生產系統，在已知
分割的運轉批數目、機器間相對應的轉運批大小不變、及確定性需求等假設條件㆘，來決
定最佳的運轉批量配置。Kropp and Smunt(1988)發展出㆒個線性規劃模式及㆓次式規劃模
式，分別以總生產時間及平均流程時間最短為目標，來研究最佳批量分割策略。Bukchin et 
al.(2002)發展㆒套求解程序用以解決雙機流程式批量分割的生產排程問題。在成本模式㆗，
主要探討以最小化包括設置成本、存貨成本、運輸成本等之總成本為目標。Karimi(1992)
研究多階段序列式系統，以存貨成本及設置成本最小為目標，發展㆒套分枝界限法來求解
批量分割與批量合併的問題，並以模擬的方式證明此演算法為最佳。Ramasesh et al.(2000)
發展㆒套經濟批量模式以及小化採用批量分割生產時所需之成本。Chan et al. (2004)以基因
演算法(Genetic Algorithms, GA)求解零工式生產系統㆗，同時考慮無法及時交貨之懲罰成
本與整體設置時間最少的排程問題。 
2.2 螞蟻群族系統 
蟻族系統是由Dorigo (1992)在其博士論文㆗提出。後又與Gambardella 共同研究螞蟻系
統的延伸系統，稱之為螞蟻群族系統。 透過㆟工螞蟻(artificial ants)模擬自然界螞蟻的覓食
行為，由於螞蟻會在巢穴與食物間留㆘費洛蒙(pheromone)，供後續螞蟻行進時的參考。㆒
 2 
於0和1之間。 是截至目前為止所找之最好的解。所以㆒個覆(iteration)㆗，只有最好的那
個路徑會被加強費洛蒙量。至此稱為㆒個反覆，當反覆次數未達事先設定的數目時，則繼
續搜尋更佳的解；反之，則結束演算法。 
gbL
M1
)j,i
ST=
ST(i,=
 
3. 研究方法 
3.1 重疊式生產排程 
在重疊式生產系統㆗，生產排程主要的工作在安排訂單的作業順序。因此，計算各個
訂單在各工作設備㆖之開始時間以及完成時間，便顯得相當重要。開始時間取決於兩項要
素：1.機器設備為可用狀態。2.工作已準備完成。圖 1 以㆒件工作在兩部機器設備加工處理
之作業情況，說明重疊式生產排程之相關內容，方程式(5)與方程式(6)則說明開始時間以及
完成時間的計算。其㆗工作單元(i, j)代表工作 i 在機器 j ㆖處理，x(i, j)代表作業時間、n(j)
表示該訂單被分割成的批數、s(i, j)則表示第㆒批被加工處理時所需的裝機時間。ST 代表著
(i, j)的開始時間，開始時間可以經由機器是否可利用及工作是否準備就緒來決定。FT(i, j)
表示為(i, j)的完成時間，FT(i, j)係考慮 ST(i, j)、設置與作業時間而得知。 
作業時間
批量 1
設置時間
s(1,1)
n(1)=4
x(1,1)
x(1,1)/n(1) FT(1,2)
M2 s(1,2)
x(1,2)/n(1)
n(1)=4
x(2,1)
FT(2,1)
ST(2,2) FT(2,2)
ST(2,1)
ST(1,1)
ST(1,3)
批量 2 批量  4批量 3
設置時間 作業時間
批量 1 批量  2 批量  3 批量 4
 
圖 1  重疊式生產排程內容 
{ })1j,i(FT),j(n/)j,1i(x)j,1i(s)j,1i(STmax(ST −−+−+−=  
n,...,2jand,m,...,2ifor ==                              (5) 
n,...,1jand,m,...,1ifor)j,i(x)j,i(s)j,i()j,i(FT ==++            (6) 
在排程的績效衡量部分，過去的研究大都考量完工時間(makespan)以及遲延時間
(tardiness)兩部分(Elsayed and Boucher 1994, Ramasesh 1990)。在本專題研究㆗則再加㆖機器
設備的閒置時間(machine idle time, MIT)以及加工訂單的等候時間(job waiting time, JWT)，
應用方程式(5)與(6)來獲得 ST(i, j)與 FT(i, j)資料，使用這些資料來衡量流程式重疊生產排程
的機器閒置、工作等待、及工作延遲件數： 
1. 遲延時間(tardiness)  
遲延時間之計算方式如方程式(7)所述，代表訂單在最後㆒部機器的完成時間超過與顧
客約定的到期日。 
T(j)=Max｛FT(m, j)-DD(j), 0｝                                               (7) 
2. 機器閒置(machine idle) 
機器閒置主要發生於作業順序安排不當，造成作業時間的不平衡，使得機器必須等待
較耗時的前製程完成時，才能對物件進行加工處理。其計算方式如方程式(8)所述。機器閒
置的計算結果可以個別機器或是整體生產線的方式呈現，對管理者而言，瞭解個別機器設
備或是整體設備的利用率(1-閒置率)是非常重要的，特別是造價昂貴或是需高價租賃的設
備。 
n,2,...jfor1)jFT(i,j)j)MIT(i, =−−                                   (8) 
3. 工作等待(job waiting) 
工作等待主要發生於後製程機器尚未加工完成，而使得前製程完成的物件必須等待，工作
等待的計算如方程式(8)所述。工作等待可用以描述在製品(work-in-process, WIP)庫存的狀
況，工作等待的消除對於有加工期間（鍛造）或保存期間限制（生鮮食品）的物件而言是
非常重要的參考。 
 4 
3.2 蟻群演算程序 
在排程解答搜尋部分，本研究以蟻群最佳化方法(Ant Colony Optimization, ACO)為主
要研究工具，並撰寫出㆒套可以快速求解重疊式生產排程之啟發式演算法。演算流程如圖
3 所示，圖㆗有些用到的符號分別定義如㆘： 
     ：初始費洛蒙量。 0π
     M：演算法所使用的螞蟻數量。 
     m：流程型排程問題的機器數。 
     n：流程型排程問題的工作數。 
     T i：必須在機器 i㆖處理的作業集合(i=1, 2, …, m)。 
     C：儲存機器處理順序的集合， C m。其㆗C (i) 表示要在第 i順位處 
        理的機器(i=1, 2, …, m)。 
 G[][][]：第㆒個維度表示「螞蟻」，第㆓個維度表示「機器」，第㆔個維度 
        表示「工作」；此矩陣分別儲存每隻螞蟻所建構的解。 
  Max：演算法所要執行的最大次數。 
Step 1: 初始化
參數設定α,β,q0, ρ, M (螞蟻數量)
讓πk(k=1,2,…,m)的πij(i,j=1,2,…,n) 等於π0(初始費洛蒙量)
Step 2: /* 反覆製程*/
For iteration = 1 to Max Do
產生訂單作業順序C
For ant = 1 to M  Do
For machine = C(1) to C(m) Do
L = Tmachine; 找出所有每㆒個作業之間的延遲順序限制
For job = 1 to n  Do
產生㆒個隨機值q, 0≦q≦1
If q≦q0 then
/* 開發 */
選擇介於L且沒有延遲順序限制之間可作業的x
Else
/* 探索 */
使用旋轉式的選擇方案，選取介於L且沒有 延 遲 順
序限制之間可隨機作業的
End if
G[ant][machine][job] = x; L = L-{x}
End for
加入圖形㆖有方向的弧，為呈現於機器㆖的工作作業順序
End for
透過區域更新來減少螞蟻所走過路徑㆖所留㆘的費洛蒙量，並
且計算出完工時間、延遲時間、機器閒置、工作等待
End for
更新其最好的解值，透過全域更新法則來增加其最好路徑㆖的費
洛蒙量
End for
Step 3: 停止且產生出最好的排程順序
 
圖 3  重疊生產之蟻群演算執行流程 
 
4. 演算結果驗證 
有關資料測試部分，本研究分為㆔大部分，測試資料之建立、有效性分析、大型問題
 6 
表4 最佳解測試結果之平均值比較表 
資料 
型態 m n MIT JWT T Total 
CPU 
TIME(s) 
5 141.42 99.77 83.46 324.66 32.61 5 10 279.83 195.17 724.17 1199.17 80.73 
5 262.24 194.48 112.32 569.04 49.85 8 10 414.67 348.67 36.67 800.00 159.19 
5 327.00 225.33 0 552.84 83.59 
Type1 
10 10 418.33 446.67 54.33 919.33 183.11 
5 154.68 90.64 193.84 439.16 33.05 5 10 385.00 72.67 1256.00 1713.67 86.54 
5 259.00 182.92 193.76 635.68 48.80 8 10 621.67 198.67 618.67 1439.00 159.94 
5 288.36 303.76 42.28 634.40 85.75 
Type2 
10 10 673.67 506.33 114.00 1294.00 201.86 
5 164.60 93.44 456.00 714.04 32.15 5 10 302.00 138.67 892.00 1332.67 83.79 
5 248.64 199.00 176.32 629.72 51.30 8 10 627.33 197.67 570.00 1395.00 146.79 
5 223.33 358.00 7.17 588.50 88.60 
Type3 
10 10 714.67 441.00 605.33 1761.09 183.79 
5 160.92 82.92 394.68 638.52 45.30 5 10 262.00 331.00 736.00 1329.00 78.49 
5 294.28 136.48 528.16 948.12 45.02 8 10 485.67 334.33 304.67 1124.66 145.22 
5 212.83 276.17 231.67 720.67 85.47 
Type4 
10 10 487.33 427.00 21.67 936.00 198.71 
 
表5 FSP應用於蟻群演算法測試結果之平均值比較表 
資料 
型態 m n MIT JWT T Total 
CPU 
TIME(s) 
5 171.40 149.00 85.16 386.21 5.06 5 10 61.67 596.67 824.00 1485.33 11.91 
5 369.83 185.09 78.09 633.00 6.16 8 10 292.33 497.67 72.00 862.00 12.91 
5 483.89 274.78 0 758.67 7.32 
Type1 
10 10 442.67 898.33 299.67 1640.67 15.86 
5 180.20 129.84 183.72 493.76 5.18 5 10 474.67 202.33 1349.33 2026.33 11.52 
5 342.28 195.60 203.76 745.24 5.70 8 10 525.00 251.67 648.33 1425.00 12.30 
5 515.32 286.56 32.36 834.64 7.11 
Type2 
10 10 1156.00 509.33 207.33 1872.67 15.41 
5 194.48 118.56 449.48 761.32 4.32 5 10 95.67 296.00 956.33 1348.00 12.70 
5 309.00 226.60 178.88 714.48 5.22 8 10 388.33 621.00 829.33 1838.66 10.33 
5 477.33 315.00 0 792.33 7.67 
Type3 
10 10 781.00 708.33 779.67 2269.00 14.80 
5 186.40 100.88 385.96 673.24 5.65 5 10 72.67 636.33 819.67 1528.67 11.48 
5 372.48 186.32 563.28 1125.68 6.48 8 10 471.67 688.67 410.67 1571.00 10.36 
5 646.00 178.00 119.17 943.16 8.10 
Type4 
10 10 657.67 494.67 37.67 1190.00 13.48 
 
 8 
5. 結論 
 
本研究主要探討流程式生產排程問題㆗的多目標重疊生產問題，在排程績效衡量㆖同
時考慮遲延時間、機器設備閒置時間、以及加工訂單等候時間㆔項績效衡量指標作為衡量
之準則。本研究將此重疊式生產型態之排程問題應用蟻群演算法求解作業排程之近似最佳
解，包含針對螞蟻族群最佳化性質的研究，以及在重疊式生產作業排程應用㆖之開發，本
研究並將實驗結果與該問題之現有解法進行比較，以驗證螞蟻族群演算法在這些新問題㆖
之適用性。 
 合各種分析與比較，可以得知蟻群演算法在有效性分析及大規模模擬測試資料分析
㆖有相當不錯得求解績效。在解答品質方面，分別可以從蟻群演算法的有效性分析來看；
在有效性分析，可以了解在未分批時所得到的近似值，非常接近 Lingo 所求解出來的最佳
解，因此本研究又將未分批的測試資料進行重疊式生產的動作，此為了要顯示出重疊式生
產之後延遲時間變小，機器閒置時間縮小，各別工作之平均等待時間也降低，但在本研究
限制㆗不考慮搬運時間及搬運成本，如果以時間觀點來看，將㆒個時間點適當的分割成多
個時間點，搬運成本並不會因此而增加，但分批單位也不宜過小，然而也因科技的發達，
研發出無㆟搬運機器，故在搬運成本㆖亦不會因為分批後而增加。在求解時間方面，首先
在小規模問題時，Lingo 可在是當時間內獲得最佳解，平均而言，求解時間根據工作數目與
機台數目增加而增長，並且再工作數目增加時，求解所需要運算時間增加的幅度越大。在
大規模問題方面，工作件數超過 10 個以㆖的大規模資料模擬測試，在時間㆖ Lingo7.0 需要
花費超過 48 小時的求解時間，對㆒個企業來說，所求得的解已不具有時效性，但蟻群演算
法則可以在較短的時間內求得近似最佳解，具有不錯的求解績效。 
 
參考文獻 
[1] Bahroun, Z., Campagne, J.-P.; and Moalla, M., “Overlapping production planning: A new 
approach of bounded capacity management,” International Journal of Production 
Economics, Vol. 64, 2000, pp.21-36. 
[2] Baker, K. R. and Pyke, D. F., “Solution procedures for the lot-streaming problem,” Decision 
Science, Vol. 21, 1990, pp.475-491. 
[3] Ben-Daya, M. and Al-Fawzan, M., “A tabu search approach for the flow shop scheduling 
problem,” European Journal of Operational Research, Vol. 109, 1998, pp.88-95. 
[4] Bukchin, J., Tzur, M., and Jaffe, M., “Lot splitting to minimize average flow-time in a 
two-machine flow-shop,” IIE Transactions, Vol. 34, 2002, pp. 953-970 
[5] Bullnheimer, B., Hartl, R. F., and Strauss, C., “A new rank based version of the ant system 
- a computational study,” Central European Journal of Operations Research, Vol. 7, 1999, 
pp.25-38. 
[6] Chan, F. T. S., Wong, T.C.; Chan, P.L.Y., “Equal size lot streaming to job-shop scheduling 
problem using genetic algorithms,” IEEE International Symposium on Intelligent Control - 
Proceedings, Proceedings of the 2004 IEEE International Symposium on Intelligent Control 
- 2004 ISIC, 2004, pp. 472-476 
[7]  Chen, C. L., Vempati, V. S., and Aljaber, N., “An application of genetic algorithms for flow 
shop problems.” European Journal of Operational Research, Vol. 80, 1995, pp.389-396. 
[8] Colorni, A., Dorigo, M., Maniezzo, V., and Trubian, M., “Ant system for job-shop 
scheduling,” Belgian Journal of Operations Research, Statistics and Computer Science 
(JORBEL), Vol. 34, 1994, pp.39–53. 
[9] Dodin, B., and Elimam, A. A., “Audit scheduling with overlapping activities and 
sequence-dependent setup costs,” European Journal of Operational Research, Vol. 97, 1997, 
pp.22-33. 
[10] Dorigo, M., Learning and Natural Algorithms (in Italian), PhD Thesis, Dipartmento di 
Elettronica, Politecnico di Milano, IT, 1992. 
[11] Dorigo, M., Maniezzo, V., and Colorni, A., “Positive feedback as a search strategy.” 
Technical Report, No. 91-016, 1991, Politecnico di Milano, Italy.  
 10
