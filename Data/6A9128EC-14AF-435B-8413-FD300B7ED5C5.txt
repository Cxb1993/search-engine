 2
of compatible triangle models. Then, we solve the shape interpolation by combining, 
1) a global pose interpolation of near-rigid components from the source shape to the 
target shape with 2) a local gradient field interpolation for each pair of components, 
followed by solving a Poisson equation in order to reconstruct an interpolated shape. 
We demonstrate the flexibility of proposed algorithm by a set of aesthetically pleasing 
interpolation results and two extended applications. 
 
Keywords： Shape interpolation, pose configuration, multi-resolution mean shift 
(MMS) clustering 
 
計畫成果自評 
In 3D computer animation research, it is very important to provide the animator a 
very intuitive way to edit animation meshes. Many well-known computer graphics 
research laboratories have devoted significantly time into its related topics. In this 
three-year project, we investigated related animation editing research issues and 
developed novel techniques to advance this important area. In particular, we presented 
new example-based editing methods to produce a meaningful deformation of the 
entire mesh for animation applications. In this project, the example meshes are from 
the key-frames of existing animation sequence. The highlights of our research results 
consist of four parts: (1) decomposition of animation meshes, (2) skeleton extraction, 
(3) example-based animation editing, and (4) physical-based simulation.  
 
This is our final report of this three-year project. Overall, our research results match 
the original planning well. Some of the above research results were published on 
several top-ranking Journal papers such as ACM Transactions on Graphics (TOG) and 
IEEE Transactions on Visualization and Computer Graphics (TVCG). And also some 
results were published on top-ranking conference such as ACM 
SIGGRAPH/SIGGRAPH Asia. These publications can be found in the PI’s 
 4
Computer Graphics (also in Proceedings of IEEE Visualization 2008), Volume 
14, Number 6, November, 2008 (SCI/EI). 
7. Yu-Shuen Wang, Tong-Yee Lee, ““Example-driven Animation Synthesis ” The 
Journal of Visual Computer (selected as a special issue of CGI 2008, Graphics 
International 2008, accepting rate: 39/220=17%,Istanbul, Turkey, June 2008) 
(SCI/EI) 
8. Tong-Yee Lee, Chao-Hung Lin, Hung-Kuo Chu, Yu-Shuen Wang, Shao-Wei 
Yen, Chang-Rung Tsai, "Mesh Pose-Editing Using Examples", Computer 
Animation and Virtual Worlds Journal, Volume 18, Issue 4-5 (September - 
December 2007), pp.235-245. (SCI/EI) 
9. Hung-Kuo Chu, Tong-Yee Lee, “Multi-resolution Mean Shift Clustering 
Algorithm for Shape Interpolation,” IEEE Transactions on Visualization and 
Computer Graphics, vol. 15, No. 5, pp. 853-866, 2009 (SCI/EI). 
10. Yao-Yang Tsai, Wen-Chieh Lin, Kuangyou B. Cheng, Jehee Lee, Tong-Yee Lee, 
“Real-time Physics-based 3D Biped Character Animation Using an Inverted 
Pendulum Model ” IEEE Transactions on Visualization and Computer 
Graphics, March/April Issue, Vol. 16, No. 2, pp. 325-337,2010 (SCI/EI).  
 
報告內容 
此次報告內容是以介紹研究成果，一篇 IEEE TVCG Shape Interpolation (2009)為
主要內容。依照國科會專題研究計畫成果報告撰寫格式規定，本計畫已有論文發
表者(須於論文致謝部分註明補助計畫編號)，得作為成果報告內容或附錄，並請
註明發表刊物名稱、卷期及出版日期。論文資訊如下，並下頁起附加論文內容為
成果報告內容。 
Hung-Kuo Chu, Tong-Yee Lee, “Multi-resolution Mean Shift Clustering Algorithm for 
Shape Interpolation,” IEEE Transactions on Visualization and Computer Graphics, vol. 15, 
No. 5, pp. 853-866, 2009 (SCI/EI, ISI ranking: 8/86 = 9%@2008, 11/84=13%@2007). 
 
 
compatible 2D triangulations. However, it is not easy to
extend this technique from 2D to 3D because it requires
nontrivial compatible tetrahedralizations.
The differential representation of mesh has become very
popular, in particular, for mesh deformation application.
For shape interpolation, 3D morphing, and editing, many
works have been proposed to interpolate meshes repre-
sented in differential representation, including the inter-
polations of gradient fields [38], Laplacian coordinates [1],
pyramid coordinates [32], and local frame representation
854 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 15, NO. 5, SEPTEMBER/OCTOBER 2009
Fig. 2. Shape interpolation between two lion shapes (shown in the color tan) with significant pose variation. Intermediate shapes are shown in blue.
(a) Gradient field interpolation generates serious self-intersection. (b) Apply a global rigid transformation before gradient field interpolation. Note the
unnatural bending at the tail. (c) The proposed method.
Fig. 1. (a) Linear interpolation of vertex position. Notice the shrinkage defects that are observed in the forelimbs of the lion shape. (b) Shape
interpolation using gradient field interpolation. Input shapes are shown in the color tan.
Authorized licensed use limited to: National Cheng Kung University. Downloaded on October 11, 2009 at 22:55 from IEEE Xplore.  Restrictions apply. 
structure can be used to interpolate or blend among input
shapes. In Section 6, we will demonstrate this extension with
some applications.
4 POSE CONFIGURATION AND ARTICULATED
STRUCTURE EXTRACTION
In this section, our goal is to automatically compute pose
configurations fPiji ¼ 1 . . .ng from a set of input meshes
fMiji ¼ 1 . . .ng. One of the input meshes is selected as the
reference mesh, called MR. We define each pose configura-
tion P as follows. Let P ¼ fN;Eg be a hierarchical graph to
describe the pose configuration. N ¼ fc1; . . . ; ckg and E ¼
fe1; . . . ; elg represent nodes and edges of the graph,
respectively. Among each node, cj ¼ fKj;Xjg denotes a
near-rigid component whereKj encodes the connectivity of
the simplicial complex (triangles, vertices, and edges) and
Xj represents the vertex coordinates. In other words, each
mesh M is decomposed into several disjointed components
and each component contains connected triangles. All pose
configurations have identical edges E and similar nodes N
(i.e., all connectivities Kj are identical but vertex coordi-
nates Xj can be different).
4.1 Mean Shift (MS) Clustering
To extract the near-rigid components, we use a nonpara-
metric MS clustering algorithm [12], [14] to cluster triangles
with similar rotation sequences, as was presented by James
and Twigg [17]. In their work, the input data of the MS
clustering algorithm are a set of points which represent
rotation sequences (i.e., a row vector collecting and
concatenating rotation matrices) of the mesh triangles. The
output are the shifted points of triangles and a set of
statistically significant modes. A triangle is assigned to the
closest mode if the L1-norm distance between its shifted
point and the closest mode is within a threshold. As a
result, several rigid clusters are obtained and each of them
contains triangles with similar rotation sequences. The
remaining unclustered triangles (i.e., not assigned to any
significant mode) are called flexible triangles. However, each
cluster is not always a connected component, i.e., the
triangles in a rigid cluster may be scattered over several
disconnected regions (Fig. 3a). The scattering result will
hinder us from constructing an articulated structure for
pose configuration. To obtain disjointed components, we
separate each rigid cluster into several subclusters, each of
which contains connected triangles. However, this naı¨ve
approach may potentially lead to an excessive number of
small clusters (Fig. 3b) which represent the local surface
variation rather than a global pose variation. Likewise, a
repeat process of clustering flexible triangles until no
flexible triangle is left will result in generating an excessive
number of small clusters, too. In addition, the MS clustering
algorithm is computationally expensive. The computational
complexity of MS is OðnF Þ, where n and F represent the
number of input meshes and triangles, respectively. As
illustrated in Fig. 3, it requires 6.8 minutes to handle
11 input meshes with 35K triangles.
4.2 Multiresolution Mean Shift Clustering
To resolve the above-mentioned problems in directly
applying the MS clustering on the original resolution of
mesh sequences, we propose a multiresolution version of
the MS clustering algorithm. By means of a coarse-to-fine
approach, we can extract most significant near-rigid clusters
in the coarser level and progressively extract smaller ones.
As shown in Fig. 4, the larger clusters such as head, trunk,
thighs, and shanks are extracted in the coarse level while
the smaller ones, such as fingers, are extracted in the finer
856 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 15, NO. 5, SEPTEMBER/OCTOBER 2009
Fig. 3. A naı¨ve application of the MS clustering potentially produces an excessive number of small clusters. The bottom images show 10 input
meshes used in the MS clustering. (a) Reference mesh and the result of MS clustering. Each colored cluster represents a rigid cluster while the black
regions represent flexible triangles. (b) Separate each rigid cluster in (a) into smaller, disjointed subclusters. (c) More small clusters are generated
when using only the second and the ninth mesh as input.
Authorized licensed use limited to: National Cheng Kung University. Downloaded on October 11, 2009 at 22:55 from IEEE Xplore.  Restrictions apply. 
all triangles in Fi [ ~Fi. The output includes new rigid
clusters Ci ¼ fijjj ¼ 1 . . . kig and flexible triangles Fi. Note
that Ci and Fi may contain virtual flexible triangles which
originally represent the rigid clusters in Ci. In the next step,
we use three (and only) clustering conditions to update Ci
and Fi, such that the final rigid clusters are representative
of global pose variation and no excessive number of small
clusters are generated.
Condition #1: 9i 2 Ci : i \ ~Fi ¼ ;.1 There is no
virtual flexible triangle in i, i.e., no rigid cluster in Ci
has similar rotation sequences with triangles in i. We
separate i into several disjointed subclusters and retain
the one with the maximum area of triangles. Triangles in
the remaining subclusters are removed from i and
inserted into Fi (Fig. 6a). In this manner, we ensure that
the most representative cluster i is obtained.
Condition #2: 9i 2 Ci : i \ ~Fi 6¼ ;. Assume that there
are n  1 virtual flexible triangles in i and denote the
corresponding rigid clusters in Ci as fi1; . . . ; ing. Then,
we iteratively update each cluster i 2 fi1; . . . ; ing by
assigning a triangle f 2 i to i if f is connected (i.e.,
sharing any edge) to i. If two updated clusters become
connected, they are merged into a single cluster. For those
triangles that are not merged into any rigid cluster, we
remove them from i and insert them into Fi. As a result,
i is separated into several rigid clusters and we insert
these rigid clusters back into Ci. Therefore, triangles are
merged into existing rigid clusters with similar rotation
sequences and rigid clusters with similar rotation se-
quences are merged, too. Fig. 6b illustrates the case: there
are two virtual flexible triangles in i and the correspond-
ing rigid clusters are disconnected from each other after
merging connected triangles in i. Fig. 6c illustrates
another case: two updated rigid clusters are connected
and merged into a single cluster.
Condition #3: 9f 2 Fi : f 2 ~Fi. We remove the triangle
f from Fi and insert the corresponding rigid cluster in Ci
into Ci. In this condition, this cluster will not be updated at
the current iteration (Fig. 6a).
Step 2: Reversing process using vertex-split operation.
Up to now, we have rigid clusters Ci and flexible triangles
Fi in the ith level of resolution. To proceed to the next level,
we reverse the mesh sequences from ðMi1; . . . ;MinÞ to
ðMiþ11 ; . . . ;Miþ1n Þ and update Ci and Fi using vertex-split
operations. Each vertex-split operation involves one vertex
and its two neighboring edges. After splitting, each edge is
split into two edges and two new triangles are created.
Therefore, for each new triangle, the only task is to
determine to which rigid cluster the triangle should be
assigned or to insert the triangle to Fi. We accomplish this
858 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 15, NO. 5, SEPTEMBER/OCTOBER 2009
1. The logic expression 9x 2 X : P ðxÞ means that there exists one x in X
such that the expression P ðxÞ is true.
Fig. 6. Illustration of the clustering condition #1 and #2. Images in the first column show the inputs to the MMS clustering algorithm with rigid clusters
colored in tan and blue and flexible triangles colored in gray. The second column shows the clustering result with a new pink cluster. After applying
our clustering conditions, the updated clusters are shown in the third column.
Authorized licensed use limited to: National Cheng Kung University. Downloaded on October 11, 2009 at 22:55 from IEEE Xplore.  Restrictions apply. 
5 SHAPE INTERPOLATION
With the extracted pose configurations, we are now ready to
interpolate between shapes. Fig. 10 illustrates the progress
of shape interpolation and each step will be elaborated in
the following sections.
5.1 Pose Transformation
The pose transformation consists of a set of rigid
transformations and each of them transforms a component
of PT to the corresponding component of PS . Since both PS
and PT are organized hierarchically, we compute the rigid
transformations hierarchically by applying the parent’s
rigid transformation to its children components before
optimizing (1) to find the local rigid transformations of
children components. We denote the pose transformation
from PT to PS as TT!S ¼ fðtiT!S;qiT!SÞji ¼ 1 . . . kg, where
ðtiT!S;qiT!SÞ indicates a local rigid transformation (trans-
lation and rotation, respectively) of the ith component and
k is the number of components.
860 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 15, NO. 5, SEPTEMBER/OCTOBER 2009
Fig. 9. Extracted near-rigid components and their input meshes.
Fig. 10. Illustration of shape interpolation.
Authorized licensed use limited to: National Cheng Kung University. Downloaded on October 11, 2009 at 22:55 from IEEE Xplore.  Restrictions apply. 
862 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 15, NO. 5, SEPTEMBER/OCTOBER 2009
Fig. 12. More shape interpolations with significant poses variation.
Fig. 11. Shape interpolation of the male shape from a crouched pose to a stretched pose (both shown in tan).
Fig. 13. Given three keyframe shapes (shown in tan), our method smoothly interpolates the intermediate shapes (shown in blue), providing a useful
tool for animators to rapidly create keyframe animation sequences.
Authorized licensed use limited to: National Cheng Kung University. Downloaded on October 11, 2009 at 22:55 from IEEE Xplore.  Restrictions apply. 
transformations (Interpolate), prefactorization (Factor) of
the coefficient matrix of the Poisson equation, the average
timing to generate each intermediate shape by solving the
Poisson equation (Solve), and total timing of the process
(Total ¼ Extractþ Interpolateþ Factor). Since each inter-
mediate shape is generated on the fly, we do not include the
timing of generating 50 frames and just list the average
timing of solving the Poisson equation for each frame. For
the multitarget shape blending, the “Solve” time also
includes the blending of transformations among each input
shape. As shown in the table, the complexity of the
proposed method is dominated by the extraction of pose
configuration which scales according to the complexity of
the shape and the number of input shapes. In Table 2, we
also compare five experimental results with [19] in terms of
performance. The timing of [19] is measured on a PC with
Intel Core 2 Duo T7700 2.4 GHz CPU and 4 GB RAM. Note
that for the purpose of comparison, we regenerate the result
of Fig. 11 by using only source and target shapes as input to
the MMS clustering algorithm. The unit of timing of both
tables is measured in seconds.
We also compare our MMS clustering algorithm with MS
clustering algorithm using examples of Figs. 3 and 9. We
performfive iterationsofMSclusteringon flexible triangles to
get rigid and flexible clusters. The final near-rigid compo-
nents are obtained by the erosion process (Section 4.3). Fig. 16
shows the side-by-side comparison of the MMS and MS
clustering algorithm. Table 3 indicates that our MMS
clustering algorithm can not only generate smaller number
of components than MS clustering algorithm, but also 3-
11 times faster than direct application of MS clustering
algorithm.
In Fig. 17, we compare our results with those of Xu et
al. [38] and Kilian et al. [19]. For each example, only a
certain frame with noticeable difference is shown. We
refer readers to the accompanying video, which can be
found on the Computer Society Digital Library at http://
doi.ieeecomputersociety.org/10.1109/TVCG.2009.40, for a
complete comparison of the interpolation sequences. As
shown in the video, our results are superior to those of
Xu et al. [38] and comparable or even better than those of
Kilian et al. [19].
7 CONCLUSION AND FUTURE WORK
In this paper, we propose a practical solution to interpolate
shapes with a wide range of pose variation. A novel MMS
clustering algorithm is proposed to automatically and
efficiently compute the pose configuration. Then, we solve
the vertex trajectory problem of shape interpolation as a
combination of global pose transformation and local detail
transformation of surface triangles, followed by solving a
Poisson equation to reconstruct an interpolated shape. We
demonstrate the success and usefulness of our method
through several examples and two applications. There are
some future works to be further investigated. Our MMS
clustering algorithm may potentially fail in the case that
shapes not only vary in pose but also have large deforma-
tion on the surface. Under this circumstance, the MMS
clustering algorithm fails to extract near-rigid components
for representing pose variation because the rotation
sequences of triangles are quite different, i.e., generating
864 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 15, NO. 5, SEPTEMBER/OCTOBER 2009
TABLE 2
Timing Comparison with Those of Martin et al. [19]
Fig. 16. Comparison of extracted near-rigid components. (a) The proposed MMS clustering algorithm. (b) The iterative application of MS clustering
algorithm.
TABLE 3
Comparison with MS Clustering Algorithm
Authorized licensed use limited to: National Cheng Kung University. Downloaded on October 11, 2009 at 22:55 from IEEE Xplore.  Restrictions apply. 
[20] V. Kraevoy and A. Sheffer, “Cross-Parameterization and Compa-
tible Remeshing of 3D Models,” Proc. ACM SIGGRAPH ’04,
pp. 861-869, 2004.
[21] T.-Y. Lee, Y.-S. Wang, and T.-G. Chen, “Segmenting a Deforming
Mesh into Near-Rigid Components,” The Visual Computer, vol. 22,
no. 9, pp. 729-739, 2006.
[22] J.E. Lengyel, “Compression of Time-Dependent Geometry,” Proc.
Symp. Interactive 3D Graphics, pp. 89-95, 1999.
[23] Y. Lipman, O. Sorkine, D. Levin, and D. Cohen-Or, “Linear
Rotation-Invariant Coordinates for Meshes,” ACM Trans. Graphics,
vol. 24, no. 3, pp. 479-487, 2005.
[24] N.J. Mitra, L. Guibas, and M. Pauly, “Partial and Approximate
Symmetry Detection for 3D Geometry,” ACM Trans. Graphics,
vol. 25, no. 3, pp. 560-568, 2006.
[25] N.J. Mitra, Personal Comm., 2009.
[26] N.J. Mitra, L.J. Guibas, and M. Pauly, “Symmetrization,” Proc.
ACM SIGGRAPH ’07, p. 63, 2007.
[27] S.I. Park and J.K. Hodgins, “Capturing and Animating Skin
Deformation in Human Motion,” ACM Trans. Graphics, vol. 25,
no. 3, pp. 881-889, 2006.
[28] E. Praun, W. Sweldens, and P. Schro¨der, “Consistent Mesh
Parameterizations,” Proc. ACM SIGGRAPH ’01, pp. 179-184, 2001.
[29] S. Schaefer and C. Yuksel, “Example-Based Skeleton Extraction,”
Proc. Symp. Geometry Processing, pp. 153-162, 2007.
[30] J. Schreiner, A. Asirvatham, E. Praun, and H. Hoppe, “Inter-
Surface Mapping,” ACM Trans. Graphics, vol. 23, no. 3, pp. 870-
877, 2004.
[31] T.W. Sederberg, P. Gao, G. Wang, and H. Mu, “2D Shape
Blending: An Intrinsic Solution to the Vertex Path Problem,” Proc.
ACM SIGGRAPH ’93, pp. 15-18, 1993.
[32] A. Sheffer and V. Kraevoy, “Pyramid Coordinates for Morphing
and Deformation,” Proc. 3D Data Processing, Visualization, and
Transmission Conf. (3DPVT), pp. 68-75, 2004.
[33] K. Shoemake and T. Duff, “Matrix Animation and Polar
Decomposition,” Proc. Conf. Graphics Interface, pp. 258-264, 1992.
[34] R.W. Sumner and J. Popovic, “Deformation Transfer for Triangle
Meshes,” Proc. ACM SIGGRAPH ’04, pp. 399-405, 2004.
[35] R.W. Sumner, M. Zwicker, C. Gotsman, and J. Popovic, “Mesh-
Based Inverse Kinematics,” ACM Trans. Graphics, vol. 24, no. 3,
pp. 488-495, 2005.
[36] S. Toledo, “Taucs: A Library of Sparse Linear Solvers, Version 2.2,”
http://www.tau.ac.il/stoledo/taucs, 2003.
[37] O. Weber, O. Sorkine, Y. Lipman, and C. Gotsman, “Context-
Aware Skeletal Shape Deformation,” Proc. Computer Graphics
Forum, vol. 26, no. 3, pp. 265-273, 2007.
[38] D. Xu, H. Zhang, Q. Wang, and H. Bao, “Poisson Shape
Interpolation,” Proc. ACM Symp. Solid and Physical Modeling,
pp. 267-274, 2005.
[39] H.-B. Yan, S.-M. Hu, and R. Martin, “Skeleton-Based Shape
Deformation Using Simplex Transformations,” Proc. Int’l Conf.
Computer Graphics, pp. 66-77, 2006.
[40] T.-Y. Lee and P.-H. Huang, “Fast and Intuitive Polyhedra
Morphing Using SMCC Mesh Merging Scheme,” IEEE Trans.
Visualization and Computer Graphics, vol. 9, no. 1, pp. 85-98, 2003.
[41] C.-H. Lin and T.-Y. Lee, “Metamorphosis of 3D Polyhedral
Models Using Progressive Connectivity Transformations,” IEEE
Trans. Visualization and Computer Graphics, vol. 11, no. 1, pp. 2-12,
Jan./Feb. 2005.
[42] T.-Y. Lee, C.-H. Lin, Y.-S. Wang, and T.-G. Chen, “Animation Key-
frame Extraction and Simplification Using Deformation Analysis,”
IEEE Trans. Circuits and Systems for Video Technology, vol. 18, no. 4,
pp. 478-486, Apr. 2008.
Hung-Kuo Chu received the BS degree in
computer science/engineering from the National
Cheng-Kung University, Tainan, Taiwan, in 2003.
Now, he is pursuing the PhD degree at the
Department of Computer Science and Informa-
tion Engineering, National Cheng-Kung Univer-
sity. His research interests include geometry
modeling, mesh deformation, and perception
analysis.
Tong-Yee Lee received the PhD degree in
computer engineering from Washington State
University, Pullman, in May 1995. He is currently
a distinguished professor in the Department of
Computer Science and Information Engineering,
National Cheng-Kung University, Tainan, Tai-
wan, ROC. He leads the Computer Graphics
Group, Visual System Laboratory, the National
Cheng-Kung University (http://graphics.csie.
ncku.edu.tw/). He is the recipient of the 2008
Distinguished Research Award, the 2005 and the 2006 First-Class
Principal Investigator Award from the National Science Council of
Taiwan, ROC, and the 2003 Youth Engineer Award, the Chinese Institute
of Engineers, ROC. His current research interests include computer
graphics, nonphotorealistic rendering, image-based rendering, visualiza-
tion, virtual reality, surgical simulation, medical visualization and medical
system, and distributed and collaborative virtual environments. He is an
associate editor for the IEEE Transactions on Information Technology in
Biomedicine with a tenure from 2000 to 2010. He is also on the editorial
advisory board of the Journal Recent Patents on Engineering, an editor of
the Journal on Information Science and Engineering, and a region editor
of the Journal of Software Engineering. He served as a member of the
international program committees of several conferences including IEEE
Visualization, Pacific Graphics, the IEEE Pacific Visualization Sympo-
sium, the IEEE Virtual Reality, the IEEE-EMBS International Conference
on Information Technology and Applications in Biomedicine, the Joint
Virtual Reality Conference of EGVE-ICAT-EuroVR, the International
Conference on Artificial Reality and Telexistence, and the International
Conference in Central Europe on Computer Graphics, Visualization, and
Computer Vision. He is a member of the IEEE and the ACM.
. For more information on this or any other computing topic,
please visit our Digital Library at www.computer.org/publications/dlib.
866 IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, VOL. 15, NO. 5, SEPTEMBER/OCTOBER 2009
Authorized licensed use limited to: National Cheng Kung University. Downloaded on October 11, 2009 at 22:55 from IEEE Xplore.  Restrictions apply. 
 2
regular 
technical 
papers) 
 
 
 
 
2010 ACM 國際繪圖年會 
 (2010 ACM SIGGRAPH Annual Conference Series) 
 
一、 目的 
ACM SIGGRAPH 2010 是由 ACM SIGGRAPH Committee 委員會所主
辦的大型國際研討會，為電腦圖學研究領域中最重要且最盛大的研討
會。參加本次會議目的主要是發表 2 篇 regular technical papers (oral 
presentation)，與本實驗室合作學者如 Prof. Niloy, Prof. Olga, Prof. TT 
Wong, and Prof. Daniel Cohen Or 討論 ACM SIGGRAPH 2011 投稿事
宜。由於不少學者參與此盛會，趁此機會與他們進行學術交流，並尋
求合作機會。參與此盛會之時，除了學術上的斬獲之外。此次出席會
議，也見識到國外學者的研究精神與態度，藉由多方面的接觸，期望
於將來有助於發表更傑出的研究成果，並開闊本身視野。 
 
 4
課程，精彩 animation festival/art gallery/electronic theater，最新 emerging 
technology show/live demo 與 CG 產品 exhibition。此次本實驗室有兩篇
technical papers 發表，是唯一來自台灣論文。此兩篇 technical papers 的
paper titles 與 abstract 如下: 
 
 
Motion-based Video Retargeting with Optimized Crop-and-Warp 
 
 
 
We introduce a video retargeting method that achieves high-quality 
resizing to arbitrary aspect ratios for complex videos containing diverse 
camera and dynamic motions. Previous content-aware retargeting methods 
mostly concentrated on spatial considerations, attempting to preserve the 
shape of salient objects in each frame by removing or distorting 
homogeneous background content. However, sacrificeable space is 
fundamentally limited in video, since object motion makes foreground and 
background regions correlated, causing waving and squeezing artifacts. We 
solve the retargeting problem by explicitly employing motion information 
and by distributing distortion in both spatial and temporal dimensions. We 
combine novel cropping and warping operators, where the cropping 
removes temporally-recurring contents and the warping utilizes available 
homogeneous regions to mask deformations while preserving motion. 
Variational optimization allows to find the best balance between the two 
operations, enabling retargeting of challenging videos with complex 
motions, numerous prominent objects and arbitrary depth variability. Our 
method compares favorably with state-of-the-art retargeting systems, as 
demonstrated in the examples and widely supported by the conducted user 
study. 
 6
 
 8
認識學者參加，在休息時間，也能趁此機會經驗交流，獲益良多。最
後特別高興的是在 SIGGRAPH 期間本人被推荐舉辦 Pacific Graphics 
2011 as Program Co-chair。 
 
附錄 
最後，筆者參加此次會議，帶回了論文集一冊，由衷感謝補助筆者參
加 SIGGRAPH 2010 
 2
regular 
technical 
papers) 
 
 
 
 
2010 ACM 國際繪圖年會 
 (2010 ACM SIGGRAPH Annual Conference Series) 
 
一、 目的 
ACM SIGGRAPH 2010 是由 ACM SIGGRAPH Committee 委員會所主
辦的大型國際研討會，為電腦圖學研究領域中最重要且最盛大的研討
會。參加本次會議目的主要是發表 2 篇 regular technical papers (oral 
presentation)，與本實驗室合作學者如 Prof. Niloy, Prof. Olga, Prof. TT 
Wong, and Prof. Daniel Cohen Or 討論 ACM SIGGRAPH 2011 投稿事
宜。由於不少學者參與此盛會，趁此機會與他們進行學術交流，並尋
求合作機會。參與此盛會之時，除了學術上的斬獲之外。此次出席會
議，也見識到國外學者的研究精神與態度，藉由多方面的接觸，期望
於將來有助於發表更傑出的研究成果，並開闊本身視野。 
 
 4
課程，精彩 animation festival/art gallery/electronic theater，最新 emerging 
technology show/live demo 與 CG 產品 exhibition。此次本實驗室有兩篇
technical papers 發表，是唯一來自台灣論文。此兩篇 technical papers 的
paper titles 與 abstract 如下: 
 
 
Motion-based Video Retargeting with Optimized Crop-and-Warp 
 
 
 
We introduce a video retargeting method that achieves high-quality 
resizing to arbitrary aspect ratios for complex videos containing diverse 
camera and dynamic motions. Previous content-aware retargeting methods 
mostly concentrated on spatial considerations, attempting to preserve the 
shape of salient objects in each frame by removing or distorting 
homogeneous background content. However, sacrificeable space is 
fundamentally limited in video, since object motion makes foreground and 
background regions correlated, causing waving and squeezing artifacts. We 
solve the retargeting problem by explicitly employing motion information 
and by distributing distortion in both spatial and temporal dimensions. We 
combine novel cropping and warping operators, where the cropping 
removes temporally-recurring contents and the warping utilizes available 
homogeneous regions to mask deformations while preserving motion. 
Variational optimization allows to find the best balance between the two 
operations, enabling retargeting of challenging videos with complex 
motions, numerous prominent objects and arbitrary depth variability. Our 
method compares favorably with state-of-the-art retargeting systems, as 
demonstrated in the examples and widely supported by the conducted user 
study. 
 6
 
 8
認識學者參加，在休息時間，也能趁此機會經驗交流，獲益良多。最
後特別高興的是在 SIGGRAPH 期間本人被推荐舉辦 Pacific Graphics 
2011 as Program Co-chair。 
 
附錄 
最後，筆者參加此次會議，帶回了論文集一冊，由衷感謝補助筆者參
加 SIGGRAPH 2010 
96年度專題研究計畫研究成果彙整表 
計畫主持人：李同益 計畫編號：96-2628-E-006-200-MY3 
計畫名稱：以範例為基礎之 3D 電腦動畫編輯與多面體網格技術研究與發展 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 3 3 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 10 10 100% 數個計畫共同成果 
研究報告/技術報告 0 0 100%  
研討會論文 8 8 100% 
篇 
數個計畫共同成
果 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
