 I
摘要 
 
案例式推理系統（Case-based Reasoning, CBR），其特色是經由推理案例庫（Case base）中
類似問題的解答，來解決目前所面臨的新問題。累積越多案例，在求解新問題時會有較高
的機率搜尋到相似案例；然而，累積的案例數量越多，所需要的比對時間就會增加；同時，
雜訊案例（noisy case）亦有可能也被儲存。因此，在案例式推理系統中儲存的案例數量以
及求解效率之間的取捨（trade-off）就變成一個值得的研究的議題。傳統的案例式推理系統
會使用縮減技術（Case reduction technique）刪除案例庫中多餘且具有同質性的案例，但是
相對地案例中所蘊含的知識也將ㄧ併被消除。本計畫將利用一個資料探勘工具—關聯性法
則（Association rules）來發展一個案例縮減技術。此一技術將利用關聯性法則針對案例庫
中具有同質性的案例進行萃化，將其轉換成規則形式儲存，以減少案例儲存的空間需求。
如此，不僅能保留案例中所蘊含的知識，也不會浪費儲存空間。本計畫期望透過所發展案
例縮減技術能在不影響求解的正確性的前提下減少案例儲存的數量，甚至能提高求解的正
確性。本計畫將使用 12 個 UCI 資料庫數據進行驗證，並利用一個真實醫學案例證明此一
案例縮減技術在實務上應用的可行性。 
 
關鍵詞：案例式推理系統、案例縮減技術、關聯性法則 
 
 
 
 
Abstract 
 
Case-based reasoning (CBR) is a type of problem solving technique which uses previous cases to 
solve new, unseen and different problems. Although a larger number of cases in the memory can 
improve the coverage of the problem space, the retrieval efficiency will be downgraded if the 
size of the case-base grows to an unacceptable level. In CBR systems, the tradeoff between the 
number of cases stored in the case-base and the retrieval efficiency is a critical issue. This paper 
addresses the problem of case-base maintenance by developing a new technique, the 
association-based case reduction technique (ACRT), to reduce the size of the case-base in order 
to enhance the efficiency while maintaining or even improving the accuracy of the CBR. The 
experiments on 12 UCI datasets and an actual case from Taiwan’s hospital have shown superior 
generalization accuracy for CBR with ACRT (CBR-ACRT) as well as a greater solving 
efficiency. 
 
Keywords: Case-based reasoning; Case reduction technique; Association rules 
 
 
 1
1. 計畫成果自評 
本計畫研究成果豐碩且顯著，並已將研究成果發表並刊登於國際學術期刊
Information Sciences，該期刊收錄於 SCI，其 Impact Factor 在 2008 年度為
3.095，在 Computer Science, Information Systems 期刊類別中排名第 8 名（共
收錄 99 種期刊），在此感謝國科會提供經費補助，使得此研究能順利圓滿完
成。詳細論文刊登資訊如下： 
Cheng-Hsiang Liu, Long-Sheng Chen, Chun-Chin Hsu, 2008, An 
association-based case reduction technique for case-based reasoning, Information 
Sciences, 178, pp. 3347–3355. 
 
2. 前言&文獻探討 
案例式推理（Case-based Reasoning）主要是利用過去求解問題的經驗與知識，來解決
目前所遭遇之問題。因為案例式推理主要是尋求相似的案例進行求解，所以它的可應用領
域範圍會較其他人工智慧技術來的廣。案例式推理的求解過程是先將所遭遇之新問題描述
成一新案例(Case presentation)，再從案例庫中找出最相似的案例(Retrieval)，所挑選出最相
似的案例與新案例也不可能完全相同，故要依照所搜尋出之舊案例的解再作調整
(Adaptation)，再將調整出的結果與實況做比對 (Validation/Test)，如果適當，則此案例將會
被增加到案例庫中(Feedback)。由上述得知，案例式推理相當接近真實人類決策的過程，而
且它的速度很快，也不需要瞭解先前的解為何成功，是一個在概念上很容易被接受的資料
探勘技術。推理過程中最重要的步驟是案例擷取（Case retrieval），最知名的擷取演算法為
k-NN（k nearest neighbor algorithm），其主要利用一個距離函數從案例庫中截取出與新案例
最相似（距離最近）的 k 個舊案例，再根據這 k 個案例的解來產生出新案例的解。最常使
用的距離函數如公式（1）所示。公式（1）當中的 w1, w2, …, wn 是變數權重。 
( ) ( ) ( ) ( )222222111 ..., nnn qxwqxwqxwqxDIS −×++−×+−×= ...........................................................(1) 
目前案例式推理已經成功應用到許多領域，例如：軟體開發流程預估[8]、文件擷取系
統之開發[22]、機台失誤辨識[14]、訂單交期指派[5, 7, 17]、基金評比[12, 18, 19]以及個人
財務破產預判[3, 11]。然而，案例式推理在實務上的應用仍有數個問題尚待解決：（1）當
案例庫越大時，搜尋出相似案例的機會就越高，但所需的儲存空間需求越大，相對地所需
要的案例比對時間就越長；（2）同樣地，案例庫所儲存的案例數越多，雜訊資料（noisy data）
同時存在於案例庫的機會也越高，對求解品質將會有影響。目前已有許多學者發展出案例
縮減技術（Case reduction technique）來解決案例式推理中儲存案例數與求解效能之間的取
捨問題。 
案例縮減技術的發展主要分成兩大方向[25]：案例保留、案例萃化。案例保留主要是
透過刪除記憶庫中重複且預測能力差的案例，以減少案例儲存數量，進而縮短案例擷取時
間。案例保留技術可分成三大類[25]：遞增型（incremental）、遞減型（decremental）、批次
型（batch）。遞增型技術主要是將案例庫中符合標準的案例一一篩選至 S 集合，篩選完畢
後，未來案例式推理系統將使用 S 集合進行問題求解。知名的技術有：Condensed Nearest 
 3
案例縮減技術
案例保留 案例萃化
Nested Generalized 
Exemplar（NGE）[23]
Prototype [4]
遞增型 遞減型 批次型
Condensed Nearest 
Neighbor (CNN) [10] 
Instance Based Learning 
Algorithms 2 and 3 (IB2 
and IB3) [2]
Reduced Nearest 
Neighbor (RNN) [9]
Selective Nearest 
Neighbor (SNN) [16]
Wilson’s rule [24]
Decremental Reduction 
Optimization Procedures 
1-5 (DROP 1-5) [25]
All k-NN [21]
以關聯性為基礎之案例縮減技術
（Association-based Case Reduction Technique, ACRT）
關連性法則
（Association rules mining）
10 UCI 資料庫 真實醫學案例
CBR with ACRT (CBR-ACRT)
CBR-NGE, 
CBR-CNN, 
CBR-RNN, 
CBR-DROP(3)
Decision Trees, 
Neural Networks, 
Case-based Reasoning
Associative Classification
（績效比較階段）
（技術發展階段）
（文獻探討階段）
 
圖一  研究架構圖 
 
本計劃期望所發展之縮減技術能在不影響案例式推理系統求解的正確性的前提下減
少案例儲存的數量，甚至提高求解的正確性。本計畫預計將所發展之以關聯性為基之案例
縮減技術（Association-based Case Reduction Technique, ACRT）與其他知名案例縮減技術
（NGE、CNN、RNN、DROP(3)）在 12 個常見的 UCI 資料庫內進行績效比較。另外，案
例式推理系統搭配所發展之以關聯性為基之案例縮減技術（CBR with ACRT, CBR-ACRT）
也將應用於一個真實醫學案例，並與其他知名分類工具－傳統案例式推理系統（CBR）、
決策樹（Decision Trees）、類神經網路（Neural Networks）以及關聯性分類（Associative 
Classification）－進行比較，以證明 CBR-ACRT 在實務上分類問題應用的績效表現。 
 
 5
 
圖二  案例式推理系統搭配以關聯性為基礎之案例縮減技術（CBR-ACRT）之運作架構 
 
 7
Car categorical 6 4 1728 
Cleve categorical, numerical 13 2 303 
Crx categorical, numerical 15 2 653 
Heart numerical 13 2 270 
Hsv categorical 11 4 122 
Iris numerical 4 3 150 
Nursery categorical 8 5 12960 
Vote categorical 16 2 232 
Zoo categorical 16 7 101 
 
同時本計畫亦將所發展之 CBR-ACRT 系統應用於糖尿病診斷之實例。實驗中包含
1,066 筆診斷案例，每一筆資料包括 20 個屬性，包括：年齡、性別、尿酸、蛋白質、…、
等。所有案例最後分成兩類：有糖尿病與無糖尿病。本計畫將 CBR, CBR-CNN, CBR-RNN, 
CBR-DROP(3), CBR-ICF, NGE, C4.5, CBA, and back-propagation neural networks (BPN)納入
作為績效比較對象，以證明 CBR-ACRT 在實務上分類問題應用的績效表現。績效比較結果
如表三所示，CBR-ACRT 系統的預測錯誤率為所有分類器中最低，只有 2.32％。由此可知，
本計畫所發展之 CBR-ACRT 系統對於真實案例的預測表現也相當不錯。 
 
5. 結論與未來研究建議 
本計畫利用一項資料探勘工具—關聯性法則進行案例縮減作業，用以提昇案例式推理
系統之預測效能。本計畫首先利用關聯性法則找出具有同質性的案例中物件屬性與資料類
別之間的關係，採用具有強關聯性的規則來取代案例，如此可以在不遺漏任何案例中所蘊
含的知識下減少案例儲存數量。使用本計畫所發展之 CBR-ACRT 系統求解一個新的問題
時，推理系統會先利用規則庫中的關聯性法則進行類別判定，若無吻合的規則可適用，則
改用案例庫中的案例進行推理求解，推理過程主要利用 k-NN 演算法搜尋案例庫中相似的
案例，根據相似案例的類別分佈狀況來預測此新案例的資料類別。 
本計畫所發展之以關聯性為基之案例縮減技術（Association-based Case Reduction 
Technique, ACRT）與其他知名案例縮減技術（NGE、CNN、RNN、DROP(3)）在 12 個常
見的 UCI 資料庫內進行績效比較，比較結果顯示 ACRT 能在不影響預測能力情況下大幅縮
減 CBR 系統案例的儲存數量。另外，本計畫亦將 CBR-ACRT 系統應用於一個真實醫學案
例，並與其他知名分類工具－傳統案例式推理系統（CBR）、決策樹（Decision Trees）、類
神經網路（Neural Networks）以及關聯性分類（Associative Classification）－進行比較，以
證明 CBR-ACRT 在實務上分類問題應用的績效表現，實驗結果顯示 CBR-ACRT 的分類正
確率為所有分類器中最高的。綜合來說，本計畫所發展之案例縮減技術不只能提昇 CBR
系統案例搜尋的效率，亦同時能提高 CBR 系統的分類預測能力。 
未來後續研究方向有二：建立一個機制監測 CBR-ACRT 系統分類預測誤差，用以評
估何時需要更新 ACRT 技術所建立之關聯性法則；再者，發展其他技術應用於案例式推理
系統之案例縮減技術為另一未來研究方向。 
 
 9
 
表三  真實案例比較結果 
Classifier error rate size 
CBR 4.15 100.00   
CBR-ACRT 2.32 9.28   
CBR-CNN 10.23 10.11   
CBR-RNN 4.09 2.43   
CBR-DROP(3) 2.81 1.20   
CBR-ICF 2.41 4.95 
NGE 30.27 -- 
C4.5 2.85 -- 
BPN 3.12 -- 
CBA 3.10 -- 
 
 
6. 參考文獻 
[1] R. Agrawal, R. Srikant, Fast algorithm for mining association rules, in: Proceeding of the 
20th VLDS conference, Santiago: Morgan Kaufmann, 1994, pp. 487-499. 
[2] D.W. Aha, D. Kibler, M.K. Albert, Instance-based learning algorithms, Machine Learning 6 
(1991) 37-66. 
[3] S.M. Bryant, A case-based reasoning approach to bankruptcy prediction modeling, 
International Journal of Intelligent Systems in Accounting, Finance & Management 6 (3) 
(1997) 195-214. 
[4] C.-L. Chang, Finding prototypes for nearest neighbor classifiers, IEEE Transactions on 
Computers 23-11 (1974) 1179-1184. 
[5] P.-C. Chang, J.-C. Hsieh, T.W. Liao, A case-based reasoning approach for due-date 
assignment in a wafer fabrication factory, in: Proceedings of the 4th International 
Conference on Case-Based Reasoning, Berlin: Springer-Verlag, 2001, pp. 648-659. 
[6] G. Chen, H. Liu, L. Yu, Q. Wei, X. Zhang, A new approach to classification based on 
association rule mining, Decision Support Systems 42 (2006) 674-689. 
[7] C.-C. Chiu, P.-C. Chang, N.-H. Chiu, A case-based expert support system for due-date 
assignment in a wafer fabrication factory, Journal of Intelligent Manufacturing 14 (3-4) 
(2003) 287-296. 
[8] G.R. Finnie, G. E. Witting, J. Desharnais, Estimating software development effort with 
case-based reasoning, in: Proceeding of the 2nd International Conference on Case-Based 
Reasoning, Berlin: Springer Verlag, 1997, pp. 13-22.  
[9] G.W. Gate, The reduced nearest neighbor rule, IEEE Transactions on Information Theory 
IT-18-3 (1972) 431-433. 
[10] P.E. Hart, The condensed nearest neighbor rule, IEEE Transactions on Information Theory 
 11
7. 出席國際學術會議心得報告 
 
計畫編號 資料探勘技術應用於提昇案例式推理系統效能之研究 
計畫名稱 97-2221-E-164-010- 
出國人員姓名 
服務機關及職稱
劉正祥 
修平技術學院工業工程與管理系 助理教授 
會議時間地點 April 17 - 20, 2009, Singapore 
會議名稱 2009 International Conference on Advanced Management Science (ICAMS 2009) 
發表論文題目 Batching machine scheduling with two-stage transportation consideration 
 
(1)、參加會議經過 
本人於 4/16 搭乘華航班機前往新加坡。由於華航班機是在下午三點十分起飛，因此
離開新加坡海關時已是晚上九點。下機後感覺新加坡真是一個國際化的城市，許多外國人
前往新加坡度假或是辦公。而且新加坡人人會講英語，那怕是五六十歲的老先生老太太，
難怪每年新加坡在 ESL 機構所舉辦之英語能力檢定考試中成績都是亞洲國家中最高的。不
過新加坡海關辦事效率應該還有改進的空間，因為我光是在海關等待查驗證照所花費的時
間就將近四十分鐘，比起台灣海關的效率就差了點。離開海關後，隨後再花三十分鐘搭乘
交通車前往住宿飯店–美麗華大飯店，位於研討會舉辦地點–濠景大飯店正對面。 
4/17 上午前往研討會舉辦地點濠景大飯店（Riverview Hotel）辦理報到。由於剛好濠
景大飯店正在進行局部空間之改建，所以感覺研討會接待處有點小且擁擠。完成報到後，
領取研討會所提供之相關資訊與禮品，其中包括一個旅行背包、一本論文集（紙本）、一個
識別證、一本會議手冊以及一個精美禮品。不過出乎意料的是居然沒有提供論文集光碟，
這在其他研討會中是不常見的。過去所參加之研討會都因為環保因素只提供光碟不提供紙
本論文集，這次所參加的 2009 國際先進管理科學研討會（2009 International Conference on 
Advanced Management Science）正好與其他研討會相反，提供紙本論文集不提供光碟。完
成報到後，當日下午研討會並無排定任何行程，因此我就與其他共同參與研討會之作者同
遊新加坡市區。到了新加坡之後，比較不能適應的是氣溫，四月份白天的氣溫平均為 28
度，而且濕度又高，因此比起台灣七八月時的酷暑有過之而無不及。新加坡市區的交通運
輸相當方便有捷運有公車，比較特別的是我在新加坡五天四夜的行程中沒看過任何警察巡
邏或是指揮交通。經過詢問當地人後了解新加坡的警察都在辦公內透過監視器察看各路口
的狀況，一有狀況會立即出動支援。 
4/18~4/19 本人全程參與研討會。此次參加的學者相當踴躍，除了新加坡附近的東南
亞國家之外，大陸、韓國、日本、美國也有許多學界人士與會，其中來自印度的學者人數
相當多。我特別注意到大陸參加的人士，人數不少，比起台灣學者人數還要多很多。此次
研討會共收錄 755 篇論文，當中有 226 篇論文被選定進行口頭報告，本人所投稿之論文亦
包含在內。本人被排定在 4/18 日下午 15:45–17:45 之間於 Meeting Room B（Session IV）
An association-based case reduction technique for case-based reasoning
Cheng-Hsiang Liu a,*, Long-Sheng Chen b, Chun-Chin Hsu c
aDepartment of Industrial Engineering and Management, Hsiuping Institute of Technology, No. 11, Gongye Road, Dali City, Taichung County 412-80, Taiwan
bDepartment of Information Management, Chaoyang University of Technology, No. 168, Jifong E. Road, Wufong Township, Taichung County 413-49, Taiwan
cDepartment of Industrial Engineering and Management, Chaoyang University of Technology, No. 168, Jifong E. Road, Wufong Township,
Taichung County 413-49, Taiwan
a r t i c l e i n f o
Article history:
Received 17 October 2007
Received in revised form 16 April 2008
Accepted 7 May 2008
Keywords:
Case-based reasoning
Case reduction
Case base maintenance
Classiﬁcation
Association rules
a b s t r a c t
Case-based reasoning (CBR) is a type of problem solving technique which uses previous
cases to solve new, unseen and different problems. Although a larger number of cases in
the memory can improve the coverage of the problem space, the retrieval efﬁciency will
be downgraded if the size of the case-base grows to an unacceptable level. In CBR systems,
the tradeoff between the number of cases stored in the case-base and the retrieval efﬁ-
ciency is a critical issue. This paper addresses the problem of case-base maintenance by
developing a new technique, the association-based case reduction technique (ACRT), to
reduce the size of the case-base in order to enhance the efﬁciency while maintaining or
even improving the accuracy of the CBR. The experiments on 12 UCI datasets and an actual
case from Taiwan’s hospital have shown superior generalization accuracy for CBR with
ACRT (CBR–ACRT) as well as a greater solving efﬁciency.
 2008 Elsevier Inc. All rights reserved.
1. Introduction
Case-based reasoning (CBR) is a general problem solving method with a simple and appealing deﬁnition that emphasizes
ﬁnding appropriate past solutions to new problems [8]. CBR solves a problem very quickly since it only reads the training
data without further processing. In addition, because it can learn complex concept descriptions, it can also accurately gen-
eralize many applications. Recent successful applications of CBR for engineering applications include software estimation
[9], document retrieval system development [31], mechanism failure identiﬁcation [20], and due date assignment
[6,8,24]; and for business applications they include bond rating [15,25,26], medical diagnosis [12], and bankruptcy predic-
tion [4,14]. However, CBR has several practical problems. First, it tends to be slow for a large training set because the entire
set must be searched for each test case. Second, since a lot of cases are stored in the memory for maintaining the general-
ization accuracy, noisy cases are stored as well, which can degrade generalization accuracy. Therefore, it is important to ﬁnd
the most economical way to retrieve the most similar case, which minimizes the time spent solving the problem at hand.
To date, much research has been done in this area, with the focus being on the design of the case reduction technique. One
way of designing a case reduction algorithm is to decide whether to retain a subset of the original instances or whether to
modify the instances using a new representation [34]. Wettschereck [32] presented an algorithm, the Nested Generalized
Exemplar (NGE), which uses hyper-rectangles to take the place of one or more instances, thereby reducing the storage
requirement. Chang [5] introduced an algorithm, in which each instance in a training set is treated as a prototype. The pro-
cess, merging the two nearest instances of the same class into a single prototype, is repeated until classiﬁcation accuracy
starts to suffer. On the other hand, some algorithms seek to retain a subset of the original training data. When searching
0020-0255/$ - see front matter  2008 Elsevier Inc. All rights reserved.
doi:10.1016/j.ins.2008.05.006
* Corresponding author. Tel.: +886 4 24961123x1412.
E-mail addresses: chliu@mail.hit.edu.tw, chliu.uw@gmail.com (C.-H. Liu).
Information Sciences 178 (2008) 3347–3355
Contents lists available at ScienceDirect
Information Sciences
journal homepage: www.elsevier .com/locate / ins
returning relationships among the collection of elements. A typical application that can be built using an association function
is the market basket analysis. By discovering association rules in basket data, one tries to ﬁnd groups of items that are fre-
quently sold together in order to infer items from the presence of other items in the customer’s shopping cart. These rules
can be expressed as ‘XY? Z [support = 5%, conﬁdence = 70%]’. This association rule means that 5% of all the records under
analysis show that items X, Y and Z are jointly present. A conﬁdence of 70% implies that 70% of the records contain X and Y
also contain Z. Generally, association rules are regarded as interesting if they satisfy both minimal support and minimal con-
ﬁdence thresholds. These thresholds can be speciﬁed by experienced users or domain experts. One of the efﬁcient algorithms
for mining association rules is the Apriori algorithm by Agrawal and Srikant [1]. It generates all rules in two steps:
1. Find all the frequent item sets that satisfy the minimal support threshold.
2. Generate all the association rules that satisfy the minimal conference threshold using the frequent itemsets.
A classiﬁcation rule is of the form X? Z, where X is a set of attribute-values, and Z is a class label. A classiﬁcation rule can
be regarded as an association rule of a special kind, in which only the class attribute is considered in the rule’s consequent. A
new approach, the associative classiﬁcation (AC) proposed by Liu et al. [21], explores association relationships between ob-
ject attributes and class labels for classiﬁcation. If strong associations among some frequent attribute-values and class labels
can be observed in training data, then the future object of similar attribute-values can be classiﬁed [18]. Many experimental
studies have shown that AC builds more accurate classiﬁers than traditional classiﬁcation techniques such as decision trees
[28]. The adapted AC algorithm presented in Janssens et al. [13] proved to generate signiﬁcantly better results than the asso-
ciation ruleset, C4.5, AC and CART at the 5% level of signiﬁcance.
In this study, a set of association rules with greater predictive capability is derived from the training data. For each rule, all
cases correctly classiﬁed by the current rule will be deleted in order to reduce the size of the case-base. It is anticipated that
replacing the cases classiﬁed by rules with a higher predictive capability will improve or at least not degrade the general-
ization accuracy of the CBR.
3. Development and evaluation of the ACRT
This section discusses in detail how to induct a set of association rules to take the place of cases stored in the memory
without degrading the predictive accuracy. This section is divided into four subsections, namely, notations, association-
based case reduction technique (ACRT), the framework of CBR–ACRT, and CBR–ACRT application in ten datasets from the
UCI collection.
3.1. Notations
Let T be a training data set where each transaction has n distinct attributes A1, A2, . . ., An and a class label in
C = {C1,C2, . . . ,Cm}. Some attributes are continuous and the apriori-type methods mainly focus on the discrete ones. Therefore,
in the case of continuous attributes, any discretization method can be used. For categorical attributes, all possible values are
mapped to a set of positive integers.
Deﬁnition 1. A row in T can be described as a combination of attribute names Ai and values ai, plus a class label Cj.
Deﬁnition 2. An itemset X can be described as a set of items in which each item can be described as an attribute name Ai and
a value ai.
Deﬁnition 3. An X that satisﬁes the minsupp threshold is called a frequent itemset.
Deﬁnition 4. A rule r maps an X to a speciﬁc Cj, denoted as XCj, where Cj 2 C is the class.
Deﬁnition 5. For rule r: XCj, the percentage of rows in T matching X and having Cj is called the support of r, denoted as
Dsupp(r).
Deﬁnition 6. The ratio of the number of rows in T matching X and having Cj versus the total number of rows matching X is
called the conﬁdence of r, denoted as Dconf(r).
X is called to be a p-itemset, if X contains p items. For rule XCj, X is referred to as the antecedent of the rule and Cj as the
consequent of the rule.
3.2. Association-based case reduction technique
In this section, a technique is proposed for discovering a compact set of association rules. By applying those rules to the
case-base, certain sets of cases that are covered by those rules can be removed from the case-base. Fig. 1 provides a pseudo-
code for the association-based case reduction technique (ACRT).
C.-H. Liu et al. / Information Sciences 178 (2008) 3347–3355 3349
showed that when the following strategies are incorporated into the mining process, the rules will be free of redundancy and
conﬂict.
Strategy 1: if 1-Dconf(XCi) < a, then any rule like XYCj is excluded.
Strategy 2: if jXj < 2jTja, then any rule like XYCj is also excluded; where Y \ X = ;.
3.3. The framework of CBR–ACRT
A CBR system with ACRT is presented in this section. Fig. 2 illustrates the framework of CBR with ACRT (CBR–ACRT). After
discovering the associations between attributes and class labels, the ACRT reduces the size of the case-base by making use of
the mining results. A compact set of rules discovered by the ACRT is not only applied to reduce the cases that are correctly
classiﬁed by them, but is also employed as a pre-classiﬁer for CBR. All rules are sorted according to their conﬁdence and sup-
port in descending order. In classifying an unseen case, the ﬁrst rule that satisﬁes the case classiﬁes it. This process ensures
that only the highest ranked rule classiﬁes test object. If at this point during classiﬁcation rules can answer a given query,
then no further action is required; otherwise the nearest neighbor (NN) algorithm is applied to ﬁnd the best match from the
reduced case-base when the query lies outside the induced concept region. When implementing the NN algorithm the sim-
ilarity between an old case (say casep) and a given query case (say caseq) can be measured by Eqs. (2) and (3).
Similarityðcasep; caseqÞ ¼
Xn
i¼1
wi  Simðpi; qiÞ ð2Þ
Simðpi; qiÞ ¼
0; if Ai is categorical and pi 6¼ qi;
1; if Ai is categorical and pi ¼ qi;
1 jpi  qij; if Ai is numerical;
8><
>:
ð3Þ
Case-base
Rule-based
Classification
Finding
Solution?
Reduced
Case-base
Retrieval
Adaptation
No
Case-base
Reduction
Solution
SolutionYes
Rules
Relevant Case
Association-based Case
Reduction Technique 
(ACRT)
New Case
Fig. 2. The framework of CBR–ACRT.
C.-H. Liu et al. / Information Sciences 178 (2008) 3347–3355 3351
which also improves the generalization accuracy. That also supports our intuition that the homogeneous cases should be
reduced, but that the solving knowledge inherited in those cases should be derived as an assistant to solve new problems
in a more efﬁcient manner.
4. Applying the CBR–ACRT to an actual case
In this section, we applied CBR–ACRT for solving a real classiﬁcation problem, diabetes diagnosis, to investigate whether
expected beneﬁts can be observed in practice. In this actual data from a hospital in Taiwan, there are a total of 1066 cases,
each with a diagnosed outcome and 20 attributes including age, sex, uric acid, glucose, total protein, etc. There are two clas-
ses, positive (non-diabetic) and negative (diabetic). All attributes reﬂect the results of biochemical or physical tests. Two
questions are addressed to verify the effect of our proposed technique on the performance improvements for CBR. The exper-
iments described here are designed to answer the following questions.
Question 1: Is the ACRT of reducing the cases stored in the case-base resulting in accuracy and storage requirements, bet-
ter than using CNN, RNN, DROP(3), ICF and NGE ?
Question 2: Is the CBR–ACRT of classifying a new case into a category resulting in accuracy, better than using conven-
tional CBR and other classiﬁers?
In order to answer these questions, the results of the CBR–ACRT are compared with those of other methods such as CBR,
CBR–CNN, CBR–RNN, CBR–DROP(3), CBR–ICF, NGE, C4.5, CBA, and back-propagation neural networks (BPN). BPN is the com-
monly used technique in classiﬁcation problems. BPN uses the gradient steepest descent method to minimize the total
square error of the output computed by the net. The C4.5 builds a decision tree to classify unseen objects, which is both easy
to practice and comprehend. The CBA uses an apriori-type association rules mining approach to generate classiﬁcation rules
with a = 0.05 and b = 0.50.
Ten methods were tested with a 10-fold cross-validation method, and established based on the same training data. The
error rate was consistently used to measure the prediction accuracy of ten classiﬁers. The error rate shown in Table 4 is the
Table 2
Generalization error rate and storage requirements of CBR, CBR–ACRT, CBR–CNN, CBR–RNN, CBR–DROP(3), CBR–ICF and NGE
Dataset CBR CBR–ACRT CBR–CNN CBR–RNN CBR–DROP(3) CBR–ICF NGE
Error % Size Error % Size Error % Size Error % Size Error % Size Error % Size Error % Size
Australian 19.21 100.00 14.15 5.33 25.98 29.03 20.38 10.39 18.77 8.23 16.27 13.29 63.15 –
Balance 35.97 100.00 34.58 65.10 54.15 53.56 44.32 1.62 35.00 3.88 36.97 34.17 53.85 –
Breast 4.96 100.00 3.77 1.85 4.93 6.93 5.60 2.21 11.38 1.29 5.16 67.98 52.80 –
Car 23.73 100.00 21.69 33.33 23.47 27.02 33.26 2.40 41.53 2.94 26.68 15.72 32.10 –
Cleve 23.72 100.00 18.84 6.34 32.86 31.72 24.45 13.29 21.06 9.31 25.51 15.24 64.53 –
Crx 17.29 100.00 14.99 2.88 28.64 27.38 18.14 8.73 16.16 10.26 15.98 15.19 49.18 –
Heart 27.82 100.00 20.93 6.17 33.24 34.20 24.00 12.18 24.62 9.92 22.21 19.26 44.12 –
Hsv 55.32 100.00 36.49 37.52 62.07 62.11 53.96 16.12 42.38 5.28 40.72 19.49 39.54 –
Iris 4.68 100.00 4.05 17.33 5.79 8.81 6.70 5.11 4.46 6.67 4.61 37.56 4.54 –
Nursery 22.50 100.00 15.27 65.98 24.84 29.54 33.17 9.39 35.77 4.87 25.76 27.36 61.45 –
Vote 9.05 100.00 6.49 0.00 10.75 11.54 9.76 3.64 13.89 3.21 9.78 10.11 81.27 –
Zoo 5.02 100.00 2.68 21.78 6.47 14.52 10.88 15.73 19.45 14.96 12.39 51.38 16.52 –
Average 20.77 100.00 16.16 21.97 26.10 28.03 23.72 8.40 23.70 6.73 20.17 27.23 46.92 –
Table 3
The detail information of CBR–ACRT and NGE
Dataset CBR–ACRT NGE
Number of rules Number of hyperrectangles
Australian 7 106
Balance 3 146
Breast 11 30
Car 5 195
Cleve 24 58
Crx 15 50
Heart 23 30
Hsv 8 62
Nursery 1 779
Iris 5 31
Vote 8 23
Zoo 4 53
C.-H. Liu et al. / Information Sciences 178 (2008) 3347–3355 3353
[4] S.M. Bryant, A case-based reasoning approach to bankruptcy prediction modeling, International Journal of Intelligent Systems in Accounting, Finance
and Management 6 (3) (1997) 195–214.
[5] C.-L. Chang, Finding prototypes for nearest neighbor classiﬁers, IEEE Transactions on Computers 23–11 (1974) 1179–1184.
[6] P.-C. Chang, J.-C. Hsieh, T.W. Liao, A case-based reasoning approach for due-date assignment in a wafer fabrication factory, in: Proceedings of the 4th
International Conference on Case-Based Reasoning, Springer-Verlag, Berlin, 2001, pp. 648–659.
[7] G. Chen, H. Liu, L. Yu, Q. Wei, X. Zhang, A new approach to classiﬁcation based on association rule mining, Decision Support Systems 42 (2006) 674–
689.
[8] C.-C. Chiu, P.-C. Chang, N.-H. Chiu, A case-based expert support system for due-date assignment in a wafer fabrication factory, Journal of Intelligent
Manufacturing 14 (3–4) (2003) 287–296.
[9] G.R. Finnie, G.E. Witting, J. Desharnais, Estimating software development effort with case-based reasoning, in: Proceeding of the 2nd International
Conference on Case-Based Reasoning, Springer Verlag, Berlin, 1997, pp. 13–22.
[10] G.W. Gate, The reduced nearest neighbor rule, IEEE Transactions on Information Theory IT-18-3 (1972) 431–433.
[11] P.E. Hart, The condensed nearest neighbor rule, IEEE Transactions on Information Theory 14 (1968) 515–516.
[12] C.-C. Hsu, C.-S. Ho, A new hybrid case-based architecture for medical diagnosis, Information Sciences 166 (1–4) (2004) 231–247.
[13] D. Janssens, G. Wets, T. Brijs, K. Vanhoof, Adapting the CBA algorithm by means of intensity of implication, Information Sciences 173 (4) (2005) 305–
318.
[14] H. Jo, I. Han, H. Lee, Bankruptcy prediction using case-based reasoning, neural networks and discriminant analysis, Expert Systems with Applications
13 (2) (1997) 97–108.
[15] K.S. Kim, I. Han, The cluster-indexing method for case-based reasoning using self organising maps and learning vector quantisation for bond rating
cases, Expert Systems with Applications 21 (3) (2001) 147–156.
[16] A.J.T. Lee, R.W. Hong, W.M. Ko, W.K. Tsao, H.H. Lin, Mining spatial association rules in image databases, Information Sciences 177 (7) (2007) 1593–
1608.
[17] G. Lee, W. Yang, J.M. Lee, A parallel algorithm for mining multiple partial periodic patterns, Information Sciences 176 (24) (2006) 3591–3609.
[18] W. Li, J. Han, J. Pei, CMAR: accurate and efﬁcient classiﬁcation based on multiple class-association rules, in: ICDM 2001, San Jose: IEEE Computer
Society, 2001, pp. 369–376.
[19] Y. Li, S. Zhu, X.S. Wang, S. Jajodia, Looking into the seeds of time: discovering temporal patterns in large transaction sets, Information Sciences 176 (8)
(2006) 1003–1031.
[20] T.W. Liao, Z.M. Zhang, C.R. Mount, A case-based reasoning system for identifying failure mechanisms, Engineering Applications of Artiﬁcial Intelligence
13 (2) (2000) 199–213.
[21] B. Liu, W. Hsu, Y. Ma, Integrating classiﬁcation and association rule mining, in: KDD-98, 1998, New York.
[22] R. Pan, Q. Yang, S.J. Pan, Mining competent case bases for case-based reasoning, Artiﬁcial Intelligence 171 (2007) 1039–1068.
[23] G.L. Ritter, H.B. Woodruff, S.R. Lowry, T.L. Isenhour, An algorithm for a selective nearest neighbor decision rule, IEEE Transactions on Information
Theory 21–6 (1975) 665–669.
[24] D.Y. Sha, C.-H. Liu, Development and evaluation of a tree-indexing approach to improve case-based reasoning: illustrated using the due date
assignment problem, International Journal of Production Research 44 (15) (2006) 3033–3049.
[25] K.S. Shin, I. Han, Case-based reasoning supported by genetic algorithms for corporate bond rating, Expert Systems with Applications 16 (2) (1999) 85–
95.
[26] K.S. Shin, I. Han, A case-based approach using inductive indexing for corporate bond rating, Decision Support Systems 32 (1) (2001) 41–52.
[27] B. Smyth, M.T. Keane, Remembering to forget: a competence-preserving case deletion policy for case-based systems, in: Proceeding of the 13th
International Joint Conference on Artiﬁcial Intelligence, Morgan Kaufmann, San Francisco, 1995, pp. 377–382.
[28] F. Thabtah, P. Cowling, Y. Peng, MCAR: multi-class classiﬁcation based on association rule, in: The 3rd ACS/IEEE International Conference, 2005, pp. 33–
39.
[29] I. Tomek, An experiment with the edited nearest-neighbor rule, IEEE Transactions on Systems, Man, and Cybernetics 6 (6) (1976) 448–452.
[30] C.Y. Wang, S.S. Tseng, T.P. Hong, Flexible online association rule mining based on multidimensional pattern relations, Information Sciences 176 (12)
(2006) 1752–1780.
[31] I. Watson, H. Watson, CAIRN: a case-based document retrieval system, in: N. Filer, I. Watson (Eds.), Proceedings of the 3rd United Kingdom Case-Based
Reasoning Workshop, University of Manchester, 1997.
[32] D. Wettschereck, A hybrid nearest-neighbor and nearest-hyperrectangle algorithm, in: F. Bergadano, L. de Raedt (Eds.), Proceedings of the 17th
European Conference on Machine Learning, 1994, pp. 323–335.
[33] D.L. Wilson, Asymptotic properties of nearest neighbor rules using edited data, IEEE Transactions on Systems, Man, and Cybernetics 2 (3) (1972) 408–
421.
[34] D.R. Willson, T.R. Martinez, Reduction techniques for instance-based learning algorithms, Machine Learning 38 (3) (2000) 257–286.
[35] J.X. Yu, Z. Chong, H. Lu, Z. Zhang, A. Zhou, A false negative approach to mining frequent itemsets from high speed transactional data streams,
Information Sciences 176 (14) (2006) 1986–2015.
C.-H. Liu et al. / Information Sciences 178 (2008) 3347–3355 3355
between reducing setup cost and the resulting increase in 
processing time. The objective of this paper is to minimize 
the sum of the makespan and setup cost. Tang and Gong [1] 
presented an algorithm H with a worst-case ratio arbitrarily 
close to 2. Although the algorithm H produces “good” 
solutions much faster than the optimization model, the 
performance is very sensitive to problem instance variability. 
The time required to compute a coordinated schedule is very 
important in practice. Clearly, finding the true optimal 
schedule may cost a manager much more in terms of time 
and/or computational resources than would finding an 
acceptable solution within a shorter time using a heuristic. 
Although mathematical models have been used to determine 
coordinated schedules, managers often prefer to use simpler 
approaches. Quite often, a heuristic may only work well 
specific situations. Metaheuristic-based approaches, such as 
genetic algorithms (GAs) and tabu search (TS), can be used 
to improve upon any heuristic’s performance when local 
search is implemented as a post-processing mechanism [15].  
In this paper, two genetic algorithms with different 
results representation are proposed to analyze the hybrid 
problem of two-stage transportation and batch scheduling. 
Genetic algorithms (GAs) have been used in the literature to 
analyze NP-hard problems efficiently. The two metaheuristic 
approaches are compared with known solutions by algorithm 
H in terms of solution quality. The results of the experiments 
indicate that the metaheuristic approaches can find a solution 
better than the one obtained by algorithm H in an acceptable 
amount of computation time. 
 
II. PROBLEM DESCRIPTION 
In the following we describe the model to be studied in 
this paper. At the beginning of a planning horizon, there are 
n jobs that initially located at the warehouse, requesting for 
processing. All the jobs need to be transported to the 
batching machine by a crane. The crane is initially located at 
the warehouse and has unit capacity. The crane takes T1j units 
of time for job j from the warehouse to the batching machine 
and T1 units of time to travel back to the warehouse. The 
batching machine can process multiple jobs simultaneously 
for a prescribed period of time independent of the number of 
jobs being processed. Once processing is begun on a batch, 
no job can be added or removed from the machine until the 
processing of the whole batch is completed. The processing 
time of a batch on the batching machine is a constant P 
independent of the batch size (number of jobs in each batch). 
Let K be the capacity of the batching machine, and hence, 
each batch cannot have more than K jobs. Each batch to be 
processed occur a setup cost. After the processing, jobs must 
be delivered to the corresponding customer by only one 
vehicle. The vehicle has unit capacity and is initially located 
at the manufacturing facility. The transportation time for job 
j from the machine to the customer is T2j, and the empty 
moving time of the vehicle back to the machine is T2. The 
completion time of a job is defined as the time when it 
arrives at the customer. Makespan and setup cost are two 
major measures in this paper. Our objective is to find a 
coordinated schedule of production and transportation with 
the goal of minimizing the sum of the makespan and setup 
cost, defined as Z=Cmax+α(R). Here, R denotes the number of 
batches to be processed on the batching machine, and α(R) is 
a non-decreasing function of R.  
 
III. GENETIC ALGORITHMS 
Genetic algorithm (GA) which was first introduced by 
Holland [16] has proven to be particularly useful for solving 
complex combinational problems. Although GAs can be 
used to analyze various types of problems, let’s consider the 
case where a GA is to be used to determine a coordinated 
schedule. First, the GAs chromosome structure must be 
defined. A chromosome is a collection of numbers/characters 
that describes a solution for the problem being analyzed. 
Some number of chromosomes is generated to create the 
GAs initial population. Let the size of the initial population 
be PS chromosomes. In the present study, a chromosome is 
divided into two segments: job transporting sequence and 
job-to-batch assignment. Consider an example problem 
instance have six jobs, this coordinated schedule can be 
represented as Figure 1. 
 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
15
14
06
02
11
03
⎪⎩
⎪⎨
⎧
→
→
→
3)5(
2)4,6,2(
1)1,3(
BatchJob
BatchJobJobJob
BatchJobJob
 
Figure 1. The chromosome structure of the proposed GA 
 
where Yi1 denotes the index of the job in position O of the 
job transporting sequence (O∈ [1, …, 6]); if a job is the last 
job of a batch, the gene Yi2 is set to one and is set to zero 
otherwise.  
The following operations describe one generation of a 
GA. The fitness of each chromosome is assessed by 
computing its objective function. The individual 
chromosome with the greater objective value has the higher 
fitness. Once each chromosome’s fitness value has been 
assessed, the Roulette Wheel Selection is implemented to 
select chromosomes for the crossover operation. Under this 
scheme, the fitter chromosomes have a higher probability to 
be chosen than others. Two chromosomes are selected, 
which are commonly referred to as parents. Some feasible 
subset of genes is swapped between two parents, producing 
two new chromosomes, referred to as offspring. After the 
crossover operation, mutation is used subject to the 
probability of introducing new genes within the selected 
chromosome, to propagate offspring with more diverse 
characteristics. After the offspring are created, their fitness 
values are assessed. Also, Elitism which refers to the best θ% 
of the population being transferred from the previous 
generation to the current generation is employed. As stated 
previously, crossover and mutation are two major operations 
used in the GA approaches. In Figure 2, the third row (job) 
has been exchanged between Parent 1 and Parent 2. In the 
current study, row-based mutation (RM) operation is 
implemented and defined as the re-generation of Yij values in 
V. COMPUTATIONAL RESULTS 
In order to compare the performance of GA and MGA, 
an extensive set of problem instances with different 
characteristics were generated for the Z problem objective 
(Table 1) as calculated by Equation (1). The factors to be 
evaluated are scenario type, number of jobs and capacity of 
batching machine. Among these factors, this paper 
investigated two scenarios for transportation times of jobs, 
setup cost and processing time on the batching machine, as 
shown in Table 2. Each factor combination in Table 1 is 
replicated 10 times. Total 180 instances are generated with 
18 combinations.  
 
Table 1. Experimental design for computational study 
Factors Levels Level Description 
Scenario Type 2 Scenario I and II 
Number of Jobs (n) 3 30, 50, 100 
Capacity of Batching (K) 3 5, 10, 15 
 
Table 2. Parameters for Scenarios I and II 
Parameters Scenario I Scenario II 
T1j and T2j T1j ~DU(5, 15), 
T2j ~DU(5, 15) 
T1j ~DU(15, 50), 
T2j ~DU(15, 50) 
T1 and T2 T1=5, T2=5 T1=15, T2=15 
P P~DU(1, 5) P~DU(1, 15) 
Setup Cost  β~DU(1, 5) β~DU(1, 15) 
 
For each instance, the Z values yielded by GA and MGA 
were compared with the solution value of algorithm H 
proposed by Tang and Gong [1]. The GA, MGA and 
algorithm H are implemented and analyzed on a computer a 
Pentium III 1300 MHz CPU and 384 MB RAM. Algorithm 
H is based on Johnson’s rule and first-only-empty (n, K) 
(FOE(n, K)) algorithm to determine a coordinated schedule. 
The shape of algorithm H can be described as follows. 
Step1: Partition the jobs into two sets, with Set N1 containing 
all the jobs with T1j+T1≤T2j+T2 and Set N2 all the jobs 
with T1j+T1>T2j+T2. 
Step 2: Form a permutation πH in which all jobs in Set N1 
precede each of those in Set N2; the jobs in Set N1 are 
sequenced in non-decreasing order of T1j; while the 
jobs in Set N2 are sequenced in non-increasing order 
of T2j. Then the entire job sequence is determined. 
Step 3: Apply algorithm FOE(n, K) to schedule the jobs on 
the batching machine. FOE(n, K) denotes the batching 
in which the first batch contains the first   jobs and the 
next batches are all full of jobs up to K jobs. 
After some preliminary tests, GA and MGA parameters 
are set as population size (PS) = 100, number of iterations (T) 
= 300, crossover rate = 0.8 and mutation rate = 0.05. 
The results of the factorial experiment are summarized in 
Table 3. Each item in this table is an average of the ten 
replications of the experiment. Boldface and italic are used to 
indicate the best result for each factor combination. The 
“Improved %” column in the table indicates the percentage 
difference between the average objective value obtained by 
the current approach and algorithm H. From Table 3, some 
important observations can be made: (1) MGA and GA can 
defeat algorithm H for all of the tested conditions; (2) it is 
noted that MGA can always outperform GA under all tested 
conditions; (3) the improvements of MGA and GA over 
algorithm H may increase when n is close to K. This result is 
similar to that found in the work of Tang and Gong [1] in 
which the algorithm H gets worse when n is close to K; (4) it 
is interested to note that the scenario type has no obvious 
influence on the improvement percentages of Z obtained by 
the metaheuristic approaches (GA and MGA) and the 
algorithm H under the same n and K. 
 
Table 3. Computational results of Z for GA, MGA and 
algorithm H 
n K  Approach Scenario I  Scenario II Z Z 
30 5 MGA 488.8  1574.6 
  GA 492.0  1583.6 
  H 515.3  1665.6 
 10 MGA 491.0  1525.9 
  GA 494.4  1534.6 
  H 569.8  1799.1 
 15 MGA 497.3  1594.6 
  GA 500.5  1600.9 
  H 662.6  2101.5 
50 5 MGA 798.7  2552.8 
  GA 805.5  2568.2 
  H 830.4  2640.9 
 10 MGA 800.5  2551.6 
  GA 809.7  2570.4 
  H 875.6  2771.8 
 15 MGA 806.3  2596.7 
  GA 815.8  2629.3 
  H 935.7  3006.7 
100 5 MGA 1581.4  4986.3 
  GA 1591.2  5011.7 
  H 1605.5  5071.4 
 10 MGA 1559.9  4905.9 
  GA 1589.9  4983.2 
  H 1628.9  5137.2 
 15 MGA 1573.1  4916.3 
  GA 1597.3  5004.8 
  H 1676.7  5240.3 
 
Based on the above experimental results it can be 
concluded that our proposed algorithm, GA and MGA, can 
significantly improve Z over algorithm H under different 
scenario types, number of jobs and capacity of batching 
machine. The GA and MGA efficiently produce a near-
optimal solution in less than 55 and 35 seconds respectively, 
when examining 30-order problem examples. Although the 
algorithm H requires average less than 1 second to find a 
solution for the same 30-order problem example, the 
出席國際學術會議心得報告 
 
計畫編號 資料探勘技術應用於提昇案例式推理系統效能之研究 
計畫名稱 97-2221-E-164-010- 
出國人員姓名 
服務機關及職稱 
劉正祥 
修平技術學院工業工程與管理系 助理教授 
會議時間地點 April 17 - 20, 2009, Singapore 
會議名稱 2009 International Conference on Advanced Management 
Science (ICAMS 2009) 
發表論文題目 Batching machine scheduling with two-stage 
transportation consideration 
 
一、參加會議經過 
本人於 4/16 搭乘華航班機前往新加坡。由於華航班機是在下午三點十分起飛，因此
離開新加坡海關時已是晚上九點。下機後感覺新加坡真是一個國際化的城市，許多外國人
前往新加坡度假或是辦公。而且新加坡人人會講英語，那怕是五六十歲的老先生老太太，
難怪每年新加坡在 ESL機構所舉辦之英語能力檢定考試中成績都是亞洲國家中最高的。不
過新加坡海關辦事效率應該還有改進的空間，因為我光是在海關等待查驗證照所花費的時
間就將近四十分鐘，比起台灣海關的效率就差了點。離開海關後，隨後再花三十分鐘搭乘
交通車前往住宿飯店–美麗華大飯店，位於研討會舉辦地點–濠景大飯店正對面。 
4/17上午前往研討會舉辦地點濠景大飯店（Riverview Hotel）辦理報到。由於剛好濠
景大飯店正在進行局部空間之改建，所以感覺研討會接待處有點小且擁擠。完成報到後，
領取研討會所提供之相關資訊與禮品，其中包括一個旅行背包、一本論文集（紙本）、一個
識別證、一本會議手冊以及一個精美禮品。不過出乎意料的是居然沒有提供論文集光碟，
這在其他研討會中是不常見的。過去所參加之研討會都因為環保因素只提供光碟不提供紙
本論文集，這次所參加的 2009國際先進管理科學研討會（2009 International Conference on 
Advanced Management Science）正好與其他研討會相反，提供紙本論文集不提供光碟。完
成報到後，當日下午研討會並無排定任何行程，因此我就與其他共同參與研討會之作者同
遊新加坡市區。到了新加坡之後，比較不能適應的是氣溫，四月份白天的氣溫平均為 28
度，而且濕度又高，因此比起台灣七八月時的酷暑有過之而無不及。新加坡市區的交通運
Notification of Acceptance IACSIT-SC 2009 
2009 International Conference on Advanced Management Science (ICAMS 2009) 
2009 International Conference on Intelligent Building and Management (ICIBM 2009) 
2009 International Conference on Bioinformatics and Biomedical Technology (ICBBT 2009) 
April 17 - 20, 2009, Singapore 
http://www.iacsit.org/2009sc/index.htm 
 
Dear Cheng-Hsiang Liu, 
Paper ID : Y362 
Paper Title : Batching machine scheduling with two-stage transportation consideration 
The review process for 2009 International Conference on IACSIT Spring Conference 2009 (IACSIT-SC 2009) has been 
completed. The conference received about 755 submissions from Email and Electronic Submission System, which were 
reviewed by international experts, and 226 papers have been selected for oral presentation. Based on the recommendations 
of the reviewers and the Technical Program Committee, we are pleased to inform you that your paper identified above has 
been accepted for oral presentation. You are cordially invited to present the paper orally at IACSIT-SC 2009 to be held on 
17 - 20, April 2009, Singapore. 
This notification email serves as our formal acceptance of your paper as well as an invitation to present your work at 
IACSIT-SC 2009. Please note that this email will be sent to your co-author(s) (if any), as well. 
(Important) So in order to register the conference successfully, you must finish 
following FOUR steps. 
1. Filling and Submitting the IEEE Copyright Release Form. (Step 7 of the website below) (Before February 20, 2009) 
http://www.ieeeconfpublishing.org/cpir/AuthorKit.asp?Community=CPS&Facility=CPS_Apr&ERoom=IACSIT-SC+2009 
2. Format your paper according to the Template carefully, and submit your final paper in pdf format. (Step 8 of the website 
below) (Before February 20, 2009)  
http://www.ieeeconfpublishing.org/cpir/AuthorKit.asp?Community=CPS&Facility=CPS_Apr&ERoom=IACSIT-SC+200
9 
3. Finish the payment of Registration fee at the Bank. (The bank transfer information can be found in the Registration 
form) 
4.  Send your filled registration form (.doc format) and the scanned payment (in jpg format) to us at iacsit@vip.163.com. 
(Before February 27, 2009) 
If the above requirements are met by the set deadlines, the paper will be included in the conference proceeding, and 
will be listed in IEEE Xplore and be indexed by both EI (Compendex) and ISI Thomson (ISTP). 
Batching machine scheduling with two-stage transportation consideration 
 
Cheng-Hsiang Liu 
Department of Industrial Engineering and Management 
Hsiuping Institute of Technology 
No.11, Gongye Rd., Dali City, Taichung County 412-80, Taiwan 
E-mail: chliu.uw@gmail.com 
 
 
Abstract—This paper considers a coordinated scheduling 
problem where there is a crane available in the first-stage 
transportation that transports job from the warehouse to a 
batching machine and there is a vehicle available in the second-
stage transportation to deliver completed jobs from the 
machine to the customer. The coordinated scheduling problem 
of production and transportation operations deals with 
sequencing job transportation and combining the jobs into 
batches. For the problem with minimizing the makespan and 
total setup cost, Tang and Gong [1] proved that this problem is 
strongly NP-hard. This paper presents two genetic algorithm 
(GA) approaches with different results representation for this 
scheduling problem. Experimental results demonstrate that the 
regular GA and modified GA (MGA) can find near-optimal 
solutions in an acceptable amount of computational time. 
Among these metaheuristic approaches, MGA is superior to 
the GA in terms of both the computing time and solution 
quality.  
Keywords- batch scheduling; transportation; metaheuristic 
I.  INTRODUCTION 
In the last few years, scheduling problems with 
transportation coordination, which play a major role in 
supply chain management, have received a lot of attention. 
Problem that address the coordination of machine scheduling 
and job transporting are certainly more practical than those 
scheduling problems that do not consider the transportation 
factor. 
Some literatures concerning the scheduling model with 
transportation considerations focusing on the transportation 
of finished jobs to customers can be found. Pundoor and 
Chen [2] considered a make-to-order production-distribution 
system with one supplier and one or more customers that 
optimize an objective function involving the maximum 
delivery tardiness and the total distribution cost.  Lee and 
Chen [3] investigated machine scheduling problem involving 
the transportation of the finished jobs to customers, which 
explicitly consider constraints on both transportation 
capacity and transportation times. Chang and Lee [4] 
extended Lee and Chan’s work to the situation where each 
job occupies a different amount of storage space in the 
vehicle. Zhong et al. [5] examined a single machine and a 
parallel machine scheduling problems with job delivery 
coordination, in which each job demands different amount of 
storage space during transportation. Chen and Vairaktarakis 
[6] studied an integrated scheduling model of production and 
distribution operation. In their model, a set of jobs are first 
processed in a facility and then delivered to the customers 
directly without intermediate inventory. Soukhal et al. [7] 
investigated two-machine flow shop scheduling problems 
taking transportation into account. Both transportation 
capacity and transportation times are explicitly taken into 
account in their models. Li et al. [8] developed a single-
machine scheduling model that incorporates routing 
decisions of a delivery vehicle which serves customers at 
different locations. Hall et al. [9] studied a scheduling model 
with the restriction that there are a fixed set of delivery dates 
at which the completed orders can be delivered. Wang and 
Cheng [10] and Ji et al. [11] considered a scheduling 
problem in which n independent and simultaneously 
available jobs are to be processed in the first stage. In the 
second stage, the jobs are delivered in batches and the 
delivery date of a batch is equal to the completion time of the 
last job in the batch. Chen and Lee [12] studied a general 
two-stage scheduling problem, in which jobs of different 
importance are processed by one first-stage processor and 
then, in the second stage, the completed jobs need to be 
batch delivered to various pre-specified destinations in one 
of a number of available transportation modes. Other related 
problems have been studied by Tang and Liu [13], Li and Ou 
[14] and Tang and Gong [1]. Tang and Liu [13] considered a 
scheduling problem for a two-machine flowshop where a 
single machine is followed by a batching machine and there 
is a transporter to carry the jobs between machines. Li and 
Ou [14] studied a single machine scheduling model that 
incorporates the scheduling of jobs and the pickup and 
delivery arrangements of the materials and finished jobs. 
Tang and Gong [1] studied a coordinated scheduling 
problem of hybrid batch production on a single batching 
machine and two-stage transportation connecting the 
production. They showed that the general problem is 
strongly NP-Hard. Based on their experimental results, the 
coordination of production scheduling and logistic 
operations can help to improve overall system performance 
and reduce the total operation cost.  
This paper extends Tang and Gong’s work to the 
situation where there is a crane available in the first-stage 
transportation that transports job from the warehouse to a 
batching machine and there is a vehicle available in the 
second-stage transportation to deliver jobs from the machine 
to the customer. If we combine several different jobs 
together into a batch, we reduce the number of individual 
setups and therefore the total setup cost. Producing the jobs 
in a batch generally increases processing time when 
compared to the processing time required to produce the jobs 
individually. Thus, there is a trade-off when batching jobs, 
a randomly chosen row. Figure 3 shows a mutation operation 
in the example described above. In Figure 3, the fourth row 
(order) has been mutated. The procedure is repeated until the 
terminating criteria are met. 
 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⇒
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⇒
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
14
12
01
15
13
06
15
12
01
04
13
06
22
12
05
16
04
01
03
12
04
16
15
01
03
11
OffspringParent
OffspringParent
 
Figure 2. Crossover operation of the proposed GA 
 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⇒
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
12
04
03
15
01
06
12
04
16
15
01
03  
Figure 3. Mutation operation of the proposed GA 
 
Since the genes used in both crossover and mutation 
operations are randomly generated, the feasibility of the 
resulting offspring is not known in advance. It is evident that 
both crossover and mutation operations do not always 
produce a feasible solution. Hence, an additional feasibility 
checking routine is performed after an offspring is generated. 
This correction mechanism is designed to move jobs from 
the over-capacity batches to other batches with surplus 
capacity. This correction mechanism can be algorithmically 
stated as follows. 
 
 
 
Although the solution yielded by GA approach proposed 
in this section may be good, a large amount of computational 
time and storage requirement would still have elapsed. 
Hence, a modified GA (MGA) approach is developed that 
can determine a near-optimal coordinated schedule. 
 
IV. MODIFIED GENETIC ALGORITHM (MGA) 
As scheduling problems with transportation coordination 
involves two decisions, job transporting sequence and batch 
scheduling, the results representation in Figure 1 cannot be 
simplified until one of the two decisions is known. Hence, 
using a heuristic that the sequence of jobs is known a priori, 
one can reduce the results representation in Figure 1 to a 
single dimension. The Johnson’s rule which is the most well 
known optimal rule applicable to a large class of flowshop 
problems says that job i precedes job j in an optimal 
sequence if: min{ti1, tj2}≤min{ti2, tj1}[17]. Implementing 
Johnson ’ s rule, the two and three-machine flowshop 
problems and makespan as performance criterion can be 
optimally solved. Makespan is one of the criteria used in this 
study. In this case, feeding the resulting job sequence 
produced by Johnson’s rule to GA for assigning jobs into 
batches would reduce the computational efforts, so as to 
improve the solving efficiency. For making the Johnson’s 
rule general, let us define Aj=T1j+T1 and Bj=T2j+T2. The steps 
of Johnson’s rule are as follows [17]. 
(1)Let U={j| Aj < Bj} and V={j| Aj ≥ Bj}. 
(2)Arrange the members of set U in non-decreasing order of 
Aj and members of set V in non-increasing order of Bj. 
(3)An optimal sequence is the ordered set U followed by the 
ordered set V. 
After implementing Johnson’s rule, the resulting job 
sequence is fed into the modified GA (MGA) approach. The 
chromosome structure in Figure 1 is no longer applicable in 
the MGA approach. Without the existence of the job 
sequence, this study is simply a batching decision problem. 
Figure 4 describes the corresponding results representation 
used in this paper for a six job example. Figures 5 and 6 
depict the crossover and mutation operations used this 
chromosomal structure. Again, crossover, mutation 
operations and the correction mechanism used in original 
GA is also applied to MGA. 
 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
1
1
0
0
1
0
 
Figure 4. The chromosome structure of the proposed MGA 
 
For each Batch Bj 
{ 
  If Vol (Bj)＞K Then 
  { 
If Vol (Bj)－K＋Vol (Bj+1) ≦ K Then 
  Select the job J* with the maximum  
completion time on the crane; 
  Bj+1＝Bj+1 ∪ J*; 
Else 
      Insert a new batch in position (j＋1); 
      Bj+1＝Bj+1 ∪ J*; 
Bj＝Bj－J*; 
  } 
} 
