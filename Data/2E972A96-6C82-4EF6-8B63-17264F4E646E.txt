. 
Real-Time Hardware Implementation of 
Intelligent Adaptive Fuzzy Neural Network Controller 
For Uncertain Nonlinear Systems 
 
Abstract- In the thesis, true hardware implementation of 
an on-line intelligent adaptive TSK FNN controller is 
performed to control the planetary inverted pendulum. The 
hardware platform is dSPACE DS 1104 R&D control 
board under Windows XP running with MatLab. Excellent 
agreements have been obtained between theoretical 
simulation and hardware implementation. The effects of 
computational time delay for controller is also investigated 
through both software simulation and hardware emulation 
and by building SimuLink blocks in MatLab. The 
estimated maximum computational time delay can be quite 
practical for the industrial applications to choose cheaper 
hardware platform with less cost 
 
Keywords: Fuzzy Neural Network, TS-type FNN Model, 
On-line Inteligent Adaptive Control, Delay Time. 
 
1 Introduction 
When we want to control a system, it usually has to be 
identified to have a mathematical model. But, in fact, it is 
often difficult to get the mathematical model, because the 
mathematical models of most systems are complex. Fuzzy 
neural network such as Takagi-Sugeno(TS)-Type FNN 
Model can simplify the process of identification of a 
system, and then the identified model can be controlled by 
the control technique. An on-line intelligent adaptive 
control was proposed in [1], which uses optimally trained 
TS-type FNN model [2] to identify an uncertain nonlinear 
system and then designs the controller with pole placement 
technique. Theoretically, applying the approach can obtain 
the TS-type FNN model of an uncertain nonlinear system 
in real-time environment and get a good controller to 
achieve the control specifications. The results of 
simulating some examples in [1] are good. But, it needs a 
large amount of computation to accomplish the training 
model, even though the optimal training [3] and the least 
square initialization [4] have shortened the process of 
training. In the implementation, computational delay will 
be an important factor in time delay. 
The theme of the thesis is to implement a controller 
to control a system with on-line intelligent adaptive 
control for uncertain nonlinear system using TS-type FNN 
models. The planetary inverted pendulum [7] will be 
controlled within the hardware platform, DS 1104 R&D 
control board. As the excellent results of some examples 
presented in the thesis [1], our simulation for the planetary 
inverted pendulum controlled by the on-line intelligent 
adaptive control approach is fine, too. For implementation 
of the on-line optimal training controller, the design of on-
line training process and the estimation for initial matrices 
for TS-type FNN model are the two major problems. The 
first one is how to train TS-type FNN model on-line. We 
use the “memory” and “pulse generator” blocks to build a 
training block to achieve the on-line training. We can 
determine the re-training time instant by setting the “pulse 
generator” block. For the second problem, it will be 
explained later. 
 
 
2 TS-Type FNN Model for Uncertain 
Systems 
A system can be represented by the following rules of 
TS-type FNN model [2], where Fij is the FNN set. 
 
( ) ( )1 1,1 1,
1 11 1
1
( ) ( ) ( )
Rule : 
  If    is    and . . . and   is  
 then                            
                               
                                                     
Rul
g gz t F z t F
x t A x t B u t= +
# #
( ) ( )1 ,1 ,
( ) ( ) ( )
e : 
   If    is    and . . . and   is  
  then            
r g r g
r rr r
r
z t F z t F
x t A x t B u t= +
 
  (1) 
 
The above FNN system should be inferred as [1]: 
1
( ) ( ( ))[ ( ) ( )]
        ( ) ( )
r
i i if f
i
f ff
x t z t A x t B u t
A x t B u t
μ
=
= +
= +
∑             (2) 
where 
T
g tztztztz ])(....)()([)( 21=  
∑ ∏
∏
= =
==
r
i
g
j
ij
g
j
ij
i
F
F
tz
1 1
1
)(
))((μ  Î  1))((
1
=∑
=
r
i
i tzμ     (3) 
. 
to design the controller [1]. The overall design process can 
be seen from the following Figure 2, which is from [1]. 
 
Uncertain Nonlinear
System
))(),(()( tutxftx =
)(tx
Controller
pKGain
)(tu
On-line Optimal 
Trained TS-type 
FNN Model
Design of tracking 
controller
Adaptive  Rules
Reference Input
)(tur
+
− )(tx
)(tε
)(tus
−
+
 
Figure 2. Overall design process 
 
 
3 Design Algorithm 
Step (1)    Specify desired stable poles. 
Step (2)  Define the r nominal operating points and the 
corresponding membership functions 
for )(tx and )(tx . Use any input u(t) to excite 
the uncertain nonlinear system and measure 
sufficient data information of )(tx and )(tx . 
In real implementation, it is easier to use step 
commands to trigger the system to get 
sufficient response data. Apply (5) to find the 
initial weighting matrix ( )0iW of each 
subsystem for i=1, …, r. 
Step (3)       Apply pole placement to design the controller. 
Step (4)     If the norm of tracking error > e1, a specified 
threshold, GOTO Step (2),    Else GOTO Step 
(5). 
Step (5)     Measure on-line )(tx and )(tx . For i=1,…, r, 
applying (18) to find the optimal learning 
rates to train the weighting matrix of each 
subsystem. The optimal training must 
continue until relative errors of Wi are less 
than another pre-defined threshold e2. 
Step (6)      GOTO Step (3) 
 
Adaptive Rules for updating the closed-loop system in 
Figure 2-2 
If Thresholdt >||)(|| ε  
               Apply all Steps to update the TS-type FNN 
model, us(t) and Kp 
Else 
Stand Still 
End. 
 
 
4 Real-Time Control of Planetary 
Inverted Pendulum 
      We perform the simulation for the inverted pendulum 
system in SimuLink. The control objective of this control 
system is to stabilize the inverted pendulum. The dynamic 
equation of the planetary train type inverted pendulum is 
shown in (20) [7]. 
0 0149.3003sin 2214.3uθ θ= +                 (20) 
The control system model and the controller are shown in 
Figures 3 ~ 5. Figure 6 illustrates the trajectory for θ0 with 
the initial condition [ ]0 0 2 0.17θ θ⎡ ⎤ = −⎣ ⎦ . 
 
 
Figure 3. Simulation model of the planetary inverted 
pendulum system 
 
Figure 4. Block diagram of “Design Controller” in  
Figure 3 
 
. 
 
Figure 10. Block diagram of “FNN controller” 
 
In Figure 10, the “Trained TK-Model” block produces the 
inferred (Af, Bf) system matrices to represent the inverted 
pendulum system and the “Design Controller” block 
applies pole placement technique to design the controller. 
Figure 11 shows the detail of the “Trained TK-Model” 
block and the detail of the “Design Controller” block can 
be seen in Figure 12. Figure 13 shows the trajectory for 
0θ . 
 
 
Figure 11. Block diagram of “Trained TK-Model” 
 
 
Figure 12. Block diagram of “Design Controller” 
 
 
Figure 13. Trajectory of θ0 during the stabilization of the 
pendulum 
 
Figure 14 shows the trajectory of θ0 for the stabilization of 
the pendulum with time delay = 0.019s. 
 
Figure 14. Trajectory of θ0 to stabilize the pendulum with 
time delay = 0.019s 
 
Figure 15 shows the trajectory of θ0 for the stabilization of 
the pendulum with time delay =0.020s. 
 
 
Figure 15. Trajectory of θ0 to stabilize the pendulum with 
time delay = 0.020s 
 
From Figure 14, 0.019s is almost the maximum allowed 
time delay for the real inverted pendulum control system 
with on-line optimal trained controller in the dSPACE 
control platform. The maximum allowed delay time for the 
inverted pendulum control system in simulation is about 
