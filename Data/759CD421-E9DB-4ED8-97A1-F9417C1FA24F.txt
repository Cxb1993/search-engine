I 
行政院國家科學委員會專題研究計畫成果報告 
節能通訊網路設計 
Energy Efficient Communication Networks 
計畫編號：NSC 100-2221-E-194-057 
執行期間：100 年 08 月 01 日至 101 年 07 月 31 日 
主持人：李詩偉   國立中正大學通訊工程研究所 
計劃參與人員：李詩偉、李光益、林玠青、侯凱鈞、洪一夫、劉世修 
國立中正大學通訊工程研究所 
 
摘要 
本計劃主要在研究如何設計節省 IP 網路以減少現有 IP 網路的電能消耗，本計畫執行共獲得兩項
主要成果: 
1. 節能網路拓樸規劃以及路由權值設定: 
由於 IP 網路路由必須遵守最短路徑，因此鍊路的路由權值(link weight)的指派直接影響路由與
網路流量分佈，我們應用網路最佳化技術將節能網路模型為一個整數規畫問題，以決定各個鍊路的啟
閉狀態以及開啟的鍊路的路由權值。問題的目標函數為最小化網路總鍊路耗能，模型中的限制式包含
鍊路流量上限限制以避免網路壅塞。針對此問題我們發展出一個近似演算法以求取該問題的近似最佳
解。 
2. 分散式鍊路啟閉管控演算法與無迴路動態路由技術: 
我們提出一個分散式的 energy-aware 鏈路管控演算法使得路由器可以動態決定鏈路的狀態，達
到將流量少的鍊路進行關閉並經由將訊務重新導入至其它路由器以達到節能目的。路由器透過演算法
獲得一組鏈路資料流量的高臨界值與低臨界值，用來與路由器鏈路上實際的資料流量做比較，決定該
鏈路的啟閉狀態。這一組臨界值會依網路負載與耗能狀態動態調整以期使效能與耗能可以達到平衡。
本研究並且提出一動態無迴路訊務轉送技術，以保證訊務重新導入至其它路由器時不會發生迴路現象。 
上述研究成果業已發表至國際期刊與會議中，以下依照上述研究成果，分別描述於本研究報告中。 
 
關鍵詞：節能網際網路、動態鍊路控管、網路拓樸規劃、路由權重設定、網路最佳化。 
Key Words:  Energy Efficient IP Network, Dynamic Link State Management, Network Topology Planning, 
Link Weight Assignment, Network Optimization.
2 
than the problem faced in network protection. 
In recent years, several green network design papers have been published. In [19], the authors formulate 
an optimization problem to determine the network topology based on a demand matrix. Due to its NP-hard 
property [20], the optimization model is solvable only for small networks. For large scale backbone networks, 
Chiaraviglio et al. [21] develop two heuristic approaches, named Least-Flow and Ransom. To reduce the 
computational complexity, Least-Flow sorts overall links in increasing order according to its carried flow, 
while Ransom treats all links in random order. Both approaches shuts down the sorted links one by one 
according to the order until the network connective constraint is violated or one of active links becomes 
overflow. The two approaches were performed in the practical backbone network [22]. The results show that 
more than 23% of the energy could be saved per year. 
The works in [23,24] study IP networks with rate adaptive elements. The power consumption of an active 
network element is a function of the traffic amount. A network element consumes zero power as it is turned 
off. In [23], the min-power iterative greedy method is used to decide the routing path based on the least 
marginal cost. In [24], the rate adaptive routing problem is formulated as an integer linear programming 
problem. Both link and node capacities are included in the objective function and the constraints. However, 
these power-saving approaches [21-24] only determine the on/off states for the network equipment. They 
don’t provide the required link metric for link state routing protocols. 
An Energy-Aware Algorithm (ERA) for OSPF protocol was presented in [25]. ERA selects some routers 
as Exporter Routers (ERs) and some routers as Importer Routers (IRs). The ERs compute their own shortest 
path trees (SPT) by the Dijkstra algorithm, while the IRs modify their SPTs to match the SPTs of ERs so as to 
turn off the redundant links. However, the link capacity constraint is not considered in it. Thus, authors 
indicate the ERA algorithm can be used only if the traffic load is low. Otherwise, the network would suffer the 
risk of link overflow.  
In our design, the network control and management system is responsible to collect historical demand 
matrix for different time periods. Based on the demands, our algorithm determines the energy-aware network 
topology and link metric for each period. The computational results are downloaded to each router. As a time 
period ends, each router performs topology changes by itself in a distributed manner. The required protocol 
function is outside the scope of this work, which needs to be studied in the future.  
The contribution of this work is presented in two parts. First we model the optimal link weight 
assignment problem as an integer linear programming problem. In the model, not only minimizing energy 
consumption but also physical capacity constraints are considered. We propose a mixed solution approach 
(called LR&HS) that combines the Lagrangean relaxation and the harmonic series based algorithm to tackle 
the problem. In the solution procedure, we take the Lagrangean relaxation technique to transform the original 
problem into its dual form and apply subgradient method to obtain a set of Lagrangean multipliers. This set of 
multipliers is used as an initial link weight to become the input to the harmonic series based approach. 
Although both approaches can solely provide a solution to the green network design problem, interestingly 
combining these two approaches together reaches a solution that outperforms those two methods individually. 
The second contribution comes from our proposal of a distributed routing table update algorithm. Our 
approach guarantee loop free packet forwarding at the transient period of network topology changes. As we 
have mentioned, changing network topology is performed in a distributed manner at the end of each time 
period. Without stringent synchronization among routers, routing loops would be formed and result in a lot of 
4 
 
 

Ll
qll
Pp Ll
plpl wxw
w
  KkPq k  ,  (3) 
 Zwl  Ll  (4) 
 
llk
Kk Pp
plp yCdx
k
~
 
  Ll  (5) 
 1or  0ly  Ll  (6) 
The objective function is to minimize the sum of the energy consumption of all active links. Constraint 
(1) and (2) require that there is a path selected for each OD pair. Constraint (3) requires that the selected path 
should be the shortest one among all paths between the source node and the destination node. Constraint (4) 
specifies the weight for each link must be an integer number to meet the specification of link state routing 
protocols (including IS-IS and OSPF). Constraint (5) is the flow bound constraint. It requires that the total 
flow going through link l should be less than a pre-specified value lC
~ . For a link with physical capacity Cl, 
lC
~ is equal to r Cl, where r is a ratio less than 1. For example, if r=0.8, the total flow on link l will be limited 
to 80% of the physical capacity. By doing so, we could tolerate traffic bursty on each active link. Finally, each 
link is either active or inactive in Constraint (6). If link is in inactive state, it is turned off and no power is 
consumed.  
The problem is NP-complete [20], and is unlikely to obtain an exact solution for realistic networks in 
real-time. We propose a Lagrangean relaxation based solution approach to obtain a suboptimal solution to 
Problem (IP). We first remove constraint (3) and (4) of IP to obtain Problem IP’.  
Problem (IP’): 
 
Ll
ll ymin  
subject to 
 1 
 kPp
px  Kk   (1) 
 1or  0px  KkPp k  ,  (2) 
 
llk
Kk Pp
plp yCdx
k
~
 
  Ll  (5) 
 1or  0ly  Ll  (6) 
In the next section, we will show how to use the solution obtained from Problem IP' to derive an 
approximate solution to Problem IP. 
I.2 The Lagrangean Relaxation and Primal Feasible Heuristic Algorithms 
The Lagrangean relaxation (LR) method has been successfully employed to solve complex mathematical 
problems by means of constraint relaxation and problem decomposition. Particularly for solving linear integer 
problem, unlike the traditional linear programming approach that relaxes integer into non-integer constraints, 
the LR method generally leaves integer constraints in the constraint sets while relaxing complex constraints 
such that the relaxed problem can be decomposed into independent manageable subproblems. Through such 
relaxation and decomposition, the LR method provides tighter bounds and shorter computation time on the 
optimal values of objective functions than those provided by the linear programming relaxation approach in 
many instances [27].  
6 
objective is the shortest path cost multiplied by its demand volume dk. One could perform Dijkstra shortest 
path algorithm to obtain a solution. Using naive implementation of a priority queue gives a run time 
complexity O(|N|2) or implementing the priority queue with a Fibonacci heap makes the time complexity 
O(|N|log|N|+|L|). A much efficient way to solve the problem is to use the all pair shortest path algorithm, it 
could obtain all of the routing at a time with computation complexity O(|N|2log|N|+|L||N|) using Johnson’s 
algorithm.  
According to the weak Lagrangean duality theorem [27], Zdual (μ)  is a lower bound of the Problem (IP’) 
for any non-negative Lagrangean multiplier vector μ  0. Therefore, we want to determine the greatest 
lower bound by solving Proble Dual_IP’. We use subgradient method to resolve Problem Dual_IP’ for 
obtaining the optimal Lagrangean multiplier vector μ. The algorithm is denoted as Lagrangean Relaxation 
(LR) algorithm, shown in Figure 1.  
In Figure 1, the algorithm is run for a fixed number of iterations (i.e., Iteration_Number). In every iteration 
k, the two sub-problems (S1 and S2) are solved (described above), resulting in the generation of a new 
Lagrangean multiplier vector. Then, the function value of Zdual (μk) that is a new lower bound is generated. If 
the new lower bound is tighter (greater) than the current best achievable lower bound (LB), the new lower 
bound is designated as the LB. Otherwise, the LB value remains unchanged. Significantly, if the LB value 
remains unimproved for a number of iterations that exceeds a threshold, called Quiescence_Threshold (QT), 
the step size coefficient () of the subgradient method is halved, in an attempt to reduce oscillation possibility. 
Specifically, in the “update-step-size” and “update-multiplier” procedures in Figure 1, the Lagrangean 
multiplier vector μ is updated as kkkk b 1 , where k  is the step size, determined by 
2/))(( kdualkk bZUB   , in which k is the step size coefficient, UB is the current achievable least upper 
bound obtained from the Primal Heuristic Algorithm described next, and bk is a subgradient of Zdual(μ) with 
vector size |L|. Entry l of the subgradient is 
llk
Kk Pp
plp yCdx
k
~ 
 
 . 
Algorithm LR: 
1. begin 
2.     initialize the Lagrangean multiplier vector μ0:= 0; 
3.     UB:= 
Ll
ll y  and LB:=NODE－1; /*upper and lower bounds on   */ 
4.     quiescence_age:=0; 
5.     step size coefficient :=2; 
6.     for each k:=1 to LR_Iteration_Number do 
7.     begin 
8.         Solve sub-problem S1; 
9.         Solve sub-problem S2;  
10.      Zdual=Zs1+Zs2;   /*Equation (8)*/ 
11.      if Zdual>LB  then LB:=Zdual and quiescence_age:=0; 
12.      else quiescence_age:=quiescence_age+1; 
13.      if quiescence_age ≥ Quiescence_Threshold then  :=/2 and quiescence_age:=0; 
14.      for each link l 
15.            if link flow fl > 0  and ll Cf ~  then activate link l ; 
16.      Calculate total power consumption ub;  
17.      if ub<UB then UB:=ub;   /* ub is the newly computed upper bound */ 
18.      update step-size and compute new multiplier vector μk; /* by subgradient method */ 
19.  end 
8 
13.         begin 
14.             if fl=0 then 
15.                 A:=A－{l}; /* turned off link l*/ 
16.                 wl:=∞; /* set inactive link weight=∞*/ 
17.             end 
18.         end 
19.     else 
20.         for each active link lA do 
21.         begin 
22.            if fl > lC
~
 
23.                wl:=wl+1/Iteration; 
24.            end  
25.         end 
26.     end 
27.     Select a link j whose flow fl is least in active links A; 
28.     if fj < jC
~  
29.         wj:=wj+1/Iteration; 
30.     end  
31. end. 
Figure 2. Harmonic Series (HS) Weight Adjustment Algorithm. 
 
I.3 Distributed Loop-free Routing Update (DLRU) 
The proposed Lagrangian Relaxation based heuristic algorithm determines a set of network topologies 
and link weight metrics to minimize energy consumption for different time periods in a day. The routers 
receive those topologies and link metrics from the network management system and accordingly update their 
routing tables distributedly to meet the new network topology at the point of time period changes. We define 
the transient period to be the duration for network to converge to its target topology. The transient period 
consists of the link activation time and the protocol processing time. In addition, time difference among 
routers are also included in the transient period. Time difference comes from the inaccuacy between any two 
local clocks (for example, several sens of msec for routers using NTP protocol [29]). The lack of strigent 
synchronization among routers would cause undesired traffic loops during the transient periods of topology 
changes.  
In order to avoid traffic loops, we proposed a Distributed Loop-free Routing-table Update (DLRU) 
scheme to control the correct timing sequence for updating routing tables. Each router performs DLRU to 
determine when to replace its table with a new one. Through the proposed DLRU scheme, we guarantee no 
loop existing during the transient periods of topology changes. 
In DLRU, the sequence for each router to update its routing table for destination d is shown below. 
According to the original routing path, an upstream router x has to update its routing table before its 
downstream routers. To guarantee the correct update sequence, each router maintains a wait set W(d) for 
destination d. Initially, the wait set W(d) of each router includes its all adjacent upstream nodes on the original 
10 
images are consistent. Therefore, link (x,y) is impossible to be the first link of the loop.  
ii. Both routers use new routing tables: the same reason as Case i.  
iii. Router x uses old routing table and y uses new routing: Since x delivers packets to y in the loop, y 
must be the next hop node of x according to old routing. However, DLRU requires that, according 
to the original routing paths, an upstream node must update its routing table before all of its 
downstream nodes, it contradicts that y has finished its routing table update before x. Therefore, x 
uses old routing table and y uses new routing table, and link (x,y) is the first link in the loop is not 
possible.  
iv. Router x uses new routing table and y uses old routing table: It is clear that there is no loop if all the 
nodes along the path behind node y use their old routing tables. Therefore, to let Case iv holds, there 
must exits a link, say (i,j), where router i uses old routing table and j uses new routing table. 
However, it contradicts the case shown in iii. Therefore, x uses new routing table and y uses old 
routing table cannot exist. 
■ 
 
I.4 Experimental Results 
We evaluate LR, HS, and LR&HS algorithms on four benchmark networks shown in Figure 5. For 
simplicity, in our experiments, we set power consumption parameter α to be the same for each link. Therefore, 
the problem is equivalent to minimize the number of active links for each topology while maintaining enough 
DLRU Algorithm /*x: the router performs DLRU*/ 
STEP1 /*build wait set*/ 
1.    for each destination d 
2.        for each neighbor router y 
3.            if  router x is the original next hop of router y for destination d 
4.                router y is inserted into W(d); 
5.            end 
6.        end 
7.    end 
STEP2 /*sequence update routing table*/ 
8.    for each destination d 
9.        if W(d)=Φ 
10.         router x updates routing table for destination d; 
11.         send OK(d) message to the original next hop routers; 
12.     end 
13. end 
STEP3 /*update wait set*/ 
14. if router x receives OK(d) message from router y 
15.     remove router y from W(d); 
16. end 
Figure 4.  Distributed Loop-free Routing Update (DLRU). 
12 
[26]. Since there is a capacity constraint (5) in our problem, a penalty term 2)~(

 


  lk
Kk Pp
plp Cdx
k
  is added to 
the objective function (8) to form a penalty term for the links with flow larger than link capacity. The value of 
 u  is equal to u if u is non-negative; otherwise, it is equal to 0. In our experimentation of SA, the number of 
iterations in the SA approach is set to 100,000 (5,000 in [26]) and the temperature control parameter T=T×
0.9985 as it appears in [10]. The range of link cost metric is set to [1,100] and the initial value is 50 for each 
link. During the solution procedure, we obtain a solution if the capacity constraint is satisfied for all links. The 
links with zero flow are turned off.  
Figure 6 depicts the experimental results from LR, HS, SA, and LR&HS. The lower bound (LB) values 
obtained from solving the dual problem are also included. Each point in Figure 6 is an average from 10 
experiments generated by different random seeds. The demand volume for each od-pair is randomly 
determined by uniform distribution. The mean demand for each pair is shown in the horizontal axis. The 
capacity of every link was set to 100 for each benchmark network. We fed different mean demand into 
different benchmark network to ensure SA is solvable in each given mean demand.  
Through Figure 6, we discover that LR&HS outperforms the other algorithms in all cases. It can reduce 
network energy consumption up to 35%-50% compared to the SA and the HS. We also observe that in most 
cases, LR is located between SA and LR&HS. LR has better performance when the mean traffic demand is 
light in the network. It becomes more closed with HS as the mean demand increases. Although LR and HS 
can provide a solution to the problem, the quality of their solutions is not good enough. Interestingly, the 
LR&HS algorithm turns out to be the best one by simply combing LR and HS together. 
In the second set of experiments, we perform those algorithms on randomly generated networks. In the 
first part, we perform experiments on network with fixed degree but with different number of nodes. Figure 7 
(a) depicts the results for networks with different number of nodes. Each point plotted in Figure 7 is an 
average under 10 networks. The mean degree of the networks is fixed to 3 and demand is fixed to 1 for all OD 
pairs. As the size of the network increases, the numbers of active links increase for all algorithms. Both SA 
and HS have very similar performance. Both algorithms need more links to stay in working. LR and LR&HS 
have very close performance on number of active links for small networks. In fact, for number of nodes 
smaller than 18, both algorithms have the same performance. However, as the network size increases, LR 
grows up quickly. For networks with 27 average nodes, the performance of LR is close to SA and HS. 
  
12 15 18 21 24 27
0
10
20
30
40
50
60
70
80
N
um
be
r o
f A
ct
iv
e 
Li
nk
s
Number of Nodes
 LR  LB  LR&HS  HS  SA
Mean Degree = 3
Mean Demand = 1
 
12 15 18 21 24 27
0
10
20
30
40
50
60
70
80
90
100
 
N
um
be
r o
f A
ct
iv
e 
Li
nk
s
Number of Nodes
 LR  LB  LR&HS  HS  SA
Mean Degree = 4
Mean Demand = 1
 
(a) Random network with mean degree = 3      (b) Random network with mean degree = 4 
 Figure 7. Performance in random networks with fixed degree. 
14 
It needs 80000 iterations to converge. The HS has only slight improvement as the number of iterations 
increases. For LR&HS, increasing the number of iterations cannot improve performance. It indicates that 
LR&HS can converge to its final solution in shorter computation time. 
Please note that both the computation times of a processing iteration in LR and LR&HS are less than one 
quarter of the time used in the SA. It is because SA needs to evaluate several link weights before obtaining the 
lowest upper limit and highest lower limit of each link weight to obtain routing changes for at least one OD 
pair. This sensitivity testing is the most time consuming procedure in the SA that makes the SA take longer 
computation time than the Lagrangean based heuristics 
 
I.5 Conclusion and Future Work 
In this work, we formulate the IP network energy consumption problem as an integer linear programming 
problem. Due to the problem is an NP-hard problem, we use the Lagrangean relaxation technique to transform 
the problem into its dual problem and propose three heuristic algorithms to resolve it. In addition, a 
Distributed Loop-free Routing Update approach was proposed to avoid the transient loops during network 
topology changes. Experimental results demonstrated that our proposed scheme can efficiently reduce 
network energy consumption up to 35%-50% more than other approaches. 
Although our approach is applied for energy aware topology design in pre-determined different time 
periods, this approach can also be applied in a dynamic manner. As network state changes (from heavy traffic 
demand to light traffic demand or in the contrary), the proposed Lagrangian Relaxation based Heuristic 
scheme can be used to determine a new network topology containing minimum power active links in it. The 
routers receive the new link metric from the network management system and accordingly update their 
routing tables. By applying DLRU for routing table update, there is no need to perform stringent 
synchronization among routers. The detailed network protocol for such operations is needed to be desinged in 
the future. 
References 
[1] Maruti Gupta and Suresh Singh, “Greening of the Internet,” in Proc. ACM SIGCOM, pp. 19-26, 2003. 
[2] Yi Zhang, Pulak Chowdhury, Massimo Tornatore, and Biswanath Mukherjee, “Energy Efficiency in 
Telecom Optical Networks,” IEEE Communications Surveys & Tutorials, vol. 12, no. 4, 2010.  
[3] Paschalis Tsiaflakisa, Yung Yib, Mung Chiang, Marc Moonen, “Green DSL: Energyefficient DSM,” in 
Proc. IEEE ICC’09, Dresden, Germany, June 2009. 
[4] Björn Skubic and Dave Hood, Ericsson, “Evaluation of ONU Power Saving Modes for Gigabit-Capable 
Passive Optical Networks,” IEEE Network Magazine, pp. 20-24, March/April 2011.  
[5] Steven S. W. Lee and Alice Chen, “Design and Analysis of a Novel Energy Efficient Ethernet Passive 
Optical Network,” in Proc. ICN’10, April, 2010. 
[6] Hong-Hsu Yen, Steven S. W. Lee, and Florence G. H. Yap, “A Novel Optimization-based 
Bandwidth-aware Minimum Power Multicast Routing Algorithm in Green Wireless Networks,” 
Accepted to be published in Springer The Journal of Supercomputing. 
[7] Kai Lin, Min Chen, Sherali Zeadally, Joel J.P.C. Rodrigues, “Balancing Energy Consumption with Mobile 
Agents in Wireless Sensor Networks,” Future Generation Computer Systems, in Press. 
16 
[27] R. Ahuja, T. Magnanti, and J. Orlin, “Network Flows: Theory, Algorithm, and Applications,” Prentice-Hill, 
1993. 
[28] M. Pióro, Á. Szentesi, J. Harmatos, A. Jüttner, P. Gajowniczek, and S.Kozdrowski, “On OSPF Related 
Network Optimisation Problems,” in Proc. IFIP ATM IP, 2000. 
[29] D. L. Mills et. al. “Network Time Protocol Version 4: Protocol and Algorithms Specification,” RFC 5096, 
June 2010. 
[30] S. Antonakopoulos, S. Fortune, and L, Zhang “Power-aware Routing with Rate-adaptive Network 
Elements,” in Proc. IEEE Globecom 2010 Workshop on Green Communications, Dec. 2010. 
[31] A. P. Bianzino, C. Chaudet, F. Larroca, D. Rossi, and J.-L. Rougier, “Energy-Aware Routing: a Reality 
Check,” in Proc. IEEE Globecom 2010 Workshop on Green Communications, Dec. 2010. 
[32] A. Cianfrani, V. Eramo, M. Listanti, M. Marazza, and E. Vittorini,“An Energy Saving Routing 
Algorithm for a Green OSPF Protocol,” in Proc. IEEE INFOCOM, pp. 1-5, Mar. 2010. 
18 
Exporter Routers (ERs) and some routers as Importer Routers (IRs). The ERs compute their own Shortest 
Path Trees (SPT) by Dijkstra algorithm, while the IRs modify their SPTs to match the SPTs of ERs so as to 
turn off the redundant links. However, it does not consider the link capacity constraint. Thus, the ERA 
algorithm can be used only for network in light load.  
In this work, we proposed a new algorithm to control link states in IP networks. The target of our design is 
not only to reduce power consumption, but also to avoid congestion on links. The contribution of the work is 
three-fold. First, in this work, we propose a Distributed Energy-aware Link Management (DELM) algorithm 
to dynamically determine the states of the links. A router performs the algorithm according to two threshold 
values that are used to serve as reference marks for comparing link flow amount. As a traffic volume falls 
below the low-threshold, the link becomes a candidate for being turned off. On the contrary, if the flow that 
should go through a sleeping link is larger than the high-threshold, the link will be activated and go back to 
work. In the algorithm, these thresholds are updated based on the network traffic condition. It makes the 
network dynamically maintain an energy efficient topology with only turning on necessary links. The 
algorithm can balance network loading and power saving. 
The second contribution of the work comes from the fast loop free flow redirection when a link’s state is 
changed. We borrow link metric from link state routing protocols to determine node potential for each 
destination node. The potential for a node pair is the shortest path cost between them. It is used to help in 
determining loop free next hop routing nodes. This technique enables us to redirect flows on the fly without 
suffering from long convergence of link state routing protocols. Please note that link state routing protocols 
are still working in our system. They are used in broadcasting link metric, maintaining the whole topology 
image, and exchanging network information. Only shortest path routing is relaxed in our system.  
The third contribution of the work comes in that we propose an optimization model to determine a link 
metric and a set of active links for constituting the most power saving topology. By providing an average 
demand matrix for the origin-destination (OD) pairs, the proposed optimization formulation can determine the 
optimal network topology and link weight assignment. Predominately, the model not only minimizes energy 
consumption but also takes physical capacity constraints into consideration. We apply the obtained link metric 
for the DELM algorithm. For a network with stable demands between OD-pairs, the obtained network 
topology is the most energy efficient network topology. As the demand changes, DELM will determine a new 
topology that adapts the network to traffic distribution.  
The remainder of this report is organized as detailed below. In Section II.1, we first give the proposed 
DELM algorithm. In Section II.2, we present the problem formulation for determining optimal link metric for 
DELM. In Section II.3, we demonstrate the simulation results and make performance comparisons on three 
well-known benchmark networks. Finally, concluding remarks are made in Section II.4. 
II.1 DISTRIBUTED ENERGY-AWARE LINK MANAGEMENT 
In this section, we present the proposed Distributed Energy- aware Link Management (DELM) algorithm. 
In DELM, a threshold value T is used to decide the state of links. Those links with flow smaller than T are 
turned off for energy saving and their flows are redirected to other links. The higher the T value is, the greater 
the energy saving for the network. In order to avoid frequently turning on and off the links, we apply double 
thresholds, Thigh and Tlow, instead of a single threshold T to increase the stability. The value of Thigh is 
larger than Tlow by a constant gap Δ. If the flow amount on an active link is smaller than Tlow, the router 
checks the network connectivity to examine the possibility of  turning off the link. If there exists at least one 
20 
eligible next hop node for traffic with destination d. If it is true for all destination node d (the for loop in Line 
10 of Figure 1), link l can be turned off. 
 
Algorithm DELM: 
/* Router n is the node performing the code*/ 
/* A is the set of active links of node n */ 
1. begin 
2.     for each link outnLl  
3.         if Al  then /*l is in power saving mode*/ 
4.             if highl Tf ˆ  then 
5.                 activate link l; 
6.                 A:=A∪{l}; /*l is included in set A*/ 
7.             end if 
8.         else 
9.             if lowl Tf   then /*check the possibility to turn off l*/ 
10.                 for each destination }{\ nNd   
11.                     if )()( dNHlhead  then 
12.                          flag:=AlternatePath(A,n,l,d); /*Fig. 2*/ 
13.                          if flag = false then break; end if 
14.                     end if 
15.                 end for 
16.                 if flag≠false then 
17.                     turn off link l; 
18.                     A:=A\{l}; /*l is removed from set A*/ 
19.                 end if 
20.             end if 
21.         end else 
22.     end for 
23. end. 
Fig. 1. Pseudo code for the DELM algorithm  
 
AlternatePath(A,n,l,d) 
/*test if link l can be turned off*/ 
1. begin 
2.     for each link }{\ lALk outn   /*check all active links*/ 
3.         x:=head(k); 
4.         if pt(n,d)>pt(x,d) then return true;   
 /* if link l is powered off, node x will be the new next hop node for the re-directed traffic to destination node
*/ 
5.        end if 
6.     end for 
22 
lg : =1, if link l has to be turned on; = 0, otherwise; 
d
lu : =1, if link l is on a shortest path to destination node d;= 0, otherwise; 
d
nx : shortest path cost from node n to destination node d; 
d
ly : =1, if link l is used to carry packets with destination d; = 0, otherwise; 
d
lz : volume of flow to destination node d carried on link l; 
lw : weight of link l; wl is a non-negative integer; 
 
 
Problem (IP): 

Ll
ll gmin  
subject to: 
1 
 outnLl
d
ly  nNdNn \,   (1) 
l
d
l gy   NdLl  ,  (2) 
d
Ll
d
l Hz
in
d


 Nd   (3) 
nd
Ll
d
l
Ll
d
l hzz
in
n
out
n


 NdNn  ,  (4) 
d
l
d
l yMz   NdLl  ,  (5) 
l
Nd
d
l Cz
~

 Ll  (6) 
0)()(  d ltaild lheadl xxw              NdLl  ,  (7) 
)1()()(
d
l
d
ltail
d
lheadl uMxxw        NdLl  ,  (8) 
1
 outnLl
d
lu  nNdNn \,   (9) 
0ddx  Nd   (10) 
1)1()()(  dld lheadd ltail yMxx        NdLl  ,  (11) 
Zwl  Ll  (12) 
1or  0dly  NdLl  ,  (13) 
1or  0dlu  NdLl  ,  (14) 
24 
connectivity is maintained for any OD-pair in the given network. Constraint (6) requires that the total flow on 
each link cannot exceed a predetermined capacity upper bound 
lC
~ . Constraints (7), (8), (9), and (10) are used 
to determine the decision variable dnx , which is the length of the shortest path from node n to destination d. 
Constraint (7) is the triangle inequality. It requires that given a destination node d, the length starting at the 
tail node of a link, must be greater than or equal to the length starting at the head node. In fact, the equality 
holds, if and only if, the considered link l is on the shortest path. The shortest path condition is true as dlu is 1. 
More specifically, Constraint (7) and Constraint (8) jointly force 0)()(  d ltaild lheadl xxw  when dlu is 1. 
Constraint (9) requires that there is at least one shortest path for each node n to destination node d. Constraint 
(10) states that the path length from any node to itself must be 0. Finally, Constraint (11) states that head(l) is 
an eligible next hop node for tail(l) if head(l) has a shorter distance to the destination node than tail (l) does. 
II.3 Simulation Results 
We have carried out simulations on three benchmark networks shown in Figure 4. The capacity 
lC
~ of every 
link was set to 100 Mb for each benchmark network. In the simulations, we applied a LINGO optimization 
solver to find the solution of Problem (IP). The obtained link metric is then input to the proposed DELM 
algorithm. The gap Δ between Thigh and Tlow was fixed to 10. For simplicity, we set power consumption 
parameter l to be the same for each link. Therefore, the problem is equivalent to minimize the number of 
active links for each network under physical capacity constraint.  
We make performance comparisons on three link weight metrics. The results are plotted in Figure 5. The 
link metric denoted as Opt is obtained by solving Problem (IP). For metric denoted Unit, weight is assigned to 
be 1 for each link. In the third link metric (Rand), weight for each link is determined randomly within the 
range [1, 65535].  
We discover from Figure 5 that the number of active links increases with the expending mean demand. For 
each benchmark network, MLLTh=90 requires less active links than MLLTh=70. It is because of using 
MLLTh=90 that network links can sustain more traffic than MLLTh=70. We also discover that link weight 
strongly influences the total power consumption. Unit metric has the worst performance among the three 
metrics. In fact, it requires all links to remain in active state. The link weight obtained from the optimization 
model requires the least number of active links in all experimental cases. The maximum gaps between Opt 
and Rand are 11.9%, 37.2%, and 36.5% for NSF, GTE and COST239 networks, respectively. The maximum 
gaps between Opt and Unit are 11.9%, 44.0%, and 36.5% for NSF, GTE, and COST239 networks. The results 
indicate that combining the DELM algorithm and the optimal link metric obtained from Problem (IP) can 
effectively reduce the network energy consumption. 
II.4 Conclusion 
In this work, we proposed the DELM algorithm for dynamic link management for adapting a network to 
traffic distribution. The feature of the DELM is that we have designed a distributed thresholds update 
mechanism to serve as a reference for deciding the states of links. In addition, the proposed DELM algorithm 
can guarantee loop free routing during turning on and off the links. Since the link metric strongly influences 
the performance, we also developed an integer linear programming model to help in determining optimal link 
metric. Through simulation comparisons, we discover that combining the proposed DELM algorithm and the 
 1
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：101 年 1 月 1 日 
一、參加會議經過 
本次出國主要之目的是參加 IEEE Global Communications Conference (Globecom 
2011) 國際研討會，並發表一篇論文，論文名稱為 “A Distributed Link Management 
Algorithm for Energy Efficient IP Networks”。論文在探討如何動態關閉負載較輕的網路鏈
路(link)以達到節能並於負載提昇時開啟網路鏈路，以避免網路壅塞。本論文所提出的節
能方法具備避免因為網路拓樸改變導致資料傳送路徑形成迴圈(loop)的問題。 
節能已成為設計下世代網際網路的重要考量點，在作法上對於負載較輕的路由器鏈
路可以將經過此鏈路的資料移轉到其他路徑，然後將該路由器的輕負載鏈路關閉，以降
低網路整體的耗能。這也就是說具有節能特性的網路必須能夠依照網路負載的變化，動
計畫編號 NSC 100-2221-E-194-057 
計畫名稱 節能通訊網路設計 
出國人員
姓名 李詩偉 
服務機構
及職稱 中正大學通訊系副教授 
會議時間 
100 年 12 月 5 日
至 
100 年 12 月 9 日 
會議地點 美國休斯頓 
會議名稱 
(中文) 2011 年 IEEE 全球通訊會議 
(英文) IEEE Globecom 2011 
發表論文
題目 
(中文) 節能 IP 網路之分散式鏈路管理演算法 
(英文) A Distributed Link Management Algorithm for Energy Efficient IP 
Networks 
 3
Industry Technical Presentations。 
 
12 Technical symposia:  
AHSN: Ad Hoc and Sensor Networking 
CRN: Cognitive Radio and Network 
CSS: Communication & System Security 
CSWS: Communication Software, Services, and Multimedia Applications 
CT: Communication Theory 
CQRM: Communications QoS, Reliability, and Modeling 
NGN: Next Generation Networking 
ONS: Optical Networks and Systems 
SAC: Selected Areas in Communications 
SPC: Signal Processing for Communications 
WC: Wireless Communications 
WN: Wireless Networking 
二、與會心得 
本次參加 Globecom 2011 會議，除了發表論文外，也參加了 keynote speech 以及
tutorial 課程，熱門的通訊研發的方向以行動網路以及雲端為主。而應用上包括影音應用
與醫療應用也比較被期待。在技術的討論上，無線通訊與網路的論文相當多，MIMO、
Cognitive Radio、Energy Efficient 等相關會議討論很熱烈，其他包括 Security、Routing 等
討論也是重點。 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/11/01
國科會補助計畫
計畫名稱: 節能通訊網路設計
計畫主持人: 李詩偉
計畫編號: 100-2221-E-194-057- 學門領域: 網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
