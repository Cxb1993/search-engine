監控系統之移動事件濃縮記錄與查詢 
摘要 
    本計畫提出一種視訊濃縮技術，將一段長時間的影片匯總成一段短時間的影
片，顯示原始影像中較重要的移動事件。我們將原影片在時間和空間上做濃縮，不同
時間點發生的移動物件可以同時的被顯示在這段濃縮影片之中。此影片濃縮技術，能
夠將廿四小時的監視影片濃縮至數分鐘的影片，最重要的是能夠把每個追蹤偵測到的
事件記錄下來並且能夠貼上標籤，以便調閱事件的發生時間以及內容。相信此技術對
於警方辦案或是相關人員在資料庫的搜索時都會有很大的幫助及效率上的改善。本計
畫包括四個主要子題: (1)建立背景模型; (2)去除移動物件之殘影及陰影; (3)追蹤並記
錄移動事件; (4)混合時空影片濃縮。廠商可進一步整合本計畫開發之雛形系統，配合
網路攝影機擷取有效資訊，進行後端分析或視訊索引，透過監控伺服器的智慧型電腦
視覺功能進行偵測、分類、分析。 
 
關鍵詞： 智慧型監控系統、視訊濃縮、移動物件擷取、影片接合、查詢調閱 
 
一、 研究計畫目的及重要性 
 
視訊監視市場短期可預測的強勁成長態勢為晶片製造商帶來了巨大商機，隨著視
訊監視應用的日益普及，以及其向全網路化系統和網際網路協議(IP)的轉變，該市場
正呈現出蓬勃發展的態勢。依據國際知名市調機構 iSuppli 所發表的資料顯示： 2011
年全球影像監控設備，包括攝影機、Digital Video Recorders (DVRs)及網路伺服器將
成長到 119 億美金，這個市場在 2006 年時只有 66 億美金的規模[1, 2, 3]。視訊監視
設備的出貨量將從 2006 年的 3,000 萬成長至 2011 年的 6,600 萬套，年複合成長率達
17.1%。IP 攝影機將在 2011 年取代閉路電視攝影機，成為視訊監視應用中的主要設
備(圖一)，監視攝影機晶片市場規模也將從 2006 年的 5.25 億美元成長到 2011 年的
12.5 億美元。而根據 Frost & Sullivan 預估 2005~2012 年 IP 監控市場的年複合成長
率為 47%[3, 4, 5]。全球 DVR 市場規模及成長率亦非常強勁(圖二)。 
 
 
圖一、IP 攝影機可望在 2011 年取 CCTV，成為主流視訊監視技術(資料來源：
iSuppli)。 
 
Image
Squence
Background
Constructio
n
Foreground
Segmentati
on
Background
Lasping
Object
Tracking
Event
Extraction
Output
(Synopsis 
Video)
Stitching
 
圖五、 視訊濃縮系統流程圖 
 
二、 進行步驟與相關方法 
 
為了濃縮監視影片，我們必須在空間和時間方面做壓縮。首先建立每個物件或事件
的資料庫，記錄每個事件發生和結束的時間、位置及背景，再針對每個事件發生的
總時間做濃縮(時間)並讓多個事件同時播放(空間)。要取出並儲存物件有以下的步
驟。 
 
步驟一、建立背景模型： 
  一般建立背景是針對影像中每點像素各以三個高斯機率模型來近似其像素值，
如下公式(1)： 
11 1( ; , ) exp ( ) ( )
2(2 )
T
d
g x x x  

       
 
                         (1) 
比較求出的機率值是否大於一個閥值(通常設為0.7左右)，符合的話則為背景。雖然
這樣的方式精確，卻也花費不少運算時間，導致整體系統效能大大降低。因此，我
們的方法改善Gaussian Mixture Model (GMM)[30]，利用高斯混和模型的想法來建構
我們提出的方法。首先我們先找出一個乾淨的背景，乾淨的背景不僅能避免移動物
體導致建構背景上的錯誤，也能減少遺留物對背景的誤判。我們是利用判斷像素顏
色的穩定度來建構背景，如下兩個數學式(2)、(3)所示： 
2 1( , ) ( , )
Record( , ) 1   ,    ( , )
Record( , ) 2
0                         ,    
t t
t
background
I x y I x y
x y I x y T
x y
otherwise
  
  
 


             
(2) 
( , )
( , )
   ,     Record   :   fps ( , )
0                 ,   
t
i
i t N
x y
I x y
when N numbers ofB x y
N
otherwise
 


 



                   (3) 
    當目前影像 ( , )tI x y 與前兩次影像( 2( , )tI x y 與 1( , )tI x y )差值小於一個閥值
( backgroundT )，就將目前像素的記錄值( ( , )Record x y )加一，由於我們攝影機環境以戶外場
景為主，其光影變化容易干擾背景，因此我們把 backgroundT 通常設為3左右(閥值不常更
1( , )   ,    ( , ) ( , ) <     1 second.
( , )
( , )  ,     
t t
objectI x y I x y I x y T and last for
B x y
B x y otherwise
 
 

               
(6) 
    在非移動物件的像素上，如果連續1秒內狀態為穩定(與前一張Frame的差值不超
過 objectT ，通常設為1)，則將此物件更新成背景。用此方法則能將產生的陰影雜訊濾
掉。 
步驟二、去除殘影及陰影： 
  我們用背景取出的前景除了會有物件主體之外，仍有許多多餘的部分像是殘影
或陰影，使得切割出來的物件破碎或還含有陰影的區域，不方便追蹤，在物件重疊
的時候也容易被當成同一物件，而將來當我們同時播放時也會因為有陰影而蓋住其
他物件。 
    由於物體移動的因素，一般用背景相減法擷取出來的前景物件會產生殘影，經
常會呈現零亂破碎的現象。為了彌補相減結果物體殘缺破碎的缺點，除了將與背景
相減法擷取出來的前景物件做形態學(Morphology)的 Closing 及 Opening 運算，我們
需再行找出屬於前景的邊緣，再將之整合。因為形態學(Morphology)的 Closing 及
Opening 運算僅能改善雜訊及修補邊緣，但是對於面積較大的殘影並沒有效用，我
們必須進一步判斷該影像區塊是否為物體移動所造成的殘影，且需判斷是移動前或
移動後所造成，以便決定修補及整合的策略。為了再強化切割後物件之完整性，我
們利用一連串的邊緣影像來判斷影像中的物件區域是屬於殘影或者出現的正確部
份。經過 Canny Edge Detection ( G )運算，整合取得適中之前景邊緣，我們將兩者
之正值取平均，最後再跟純背景相減法合併，並以閥值
1T 取得前景像素遮罩。我們
在前期國科會計畫“以人為本之視訊監控：遠距離行人追蹤與行徑分析 (NSC 
96-2221-E-305-008-MY2)”已提出完整的方法[33]。 
  除此之外，我們曾把影像在 HSV 空間上分析，發現前景包含了物件跟陰影，
陰影部分則在 HSV 空間上有較低的值，故可藉此特性用高斯濾波將陰影去除，使
得我們的物件方便追蹤和記錄[31]。另外 Grest 等學者也提到類似的方法，將 RGB
轉至 HSV 空間中，再經由 Cross Covariance 的強度來判斷物體與陰影[32]，也是一
個可以嘗詴與比較的方法，畢竟準確的切割陰影才能更加準確的追蹤物體，進而使
物件在建檔時更加的精準。但 HSV 在速度上便顯得極為緩慢，畢竟需要三層更次
去計算再經由過濾，在時間的比較之下，速度較快的則是轉至 YCrCb 空間上去做，
但仍是有三種的閥值需要拿捏，因此如何在去除陰影的效果與物件完整度之間得到
一個平衡點也是非常重要的一環。我們已先行開發一個前景物件分割的子系統雛
型，下圖是我們的雛型實驗結果。採用我們的方法時，背景的雜訊大部份都可以成
功的被濾除同時可以去除部份的陰影。 
步驟三、追蹤並記錄移動事件： 
  去除陰影後，我們就開始追蹤，但是在物件移動的過程中，常常會有和其他物
件遮蔽(Occlusion)或是會突然消失再出現的情況發生(例如被柱子擋住)，我們利用
Kalman濾波器來預估移動物體下一個時間的位置[34,35]。為了追蹤物件，計算出每
一張影像中物件的位置和速度。此時運用Kalman濾波的兩個步驟，預測和修正。預
測步驟使用狀態模組(7)、(8)來預測下一個新的狀態 
將其變換為依據物件動作的起始，透過中值濾波運算建造一個區間影像來更換背
景。背景的明確變換通常發生在日夜切換時，這個因素也需列入考慮。  
e. 縫合物件與階段行背景並植入同步視訊，此步驟會考慮到這些物件動作在不同的
時間下卻可以顯示在同一時間的濃縮畫面，且背景為根據當前時間及上一步驟
(步驟 d)所產生的背景資訊。 
 
四、 實作結果與討論 
    整個系統我們使用了 Intel 公司所發行的 OpenCV 函式庫搭配 Microsoft 
Visual Studio 2008，我們將整個系統拆成各個部分，像是背景模型的建立、前景事件
的擷取、前景事件陰影去除、前景事件遮罩補強、前景事件持續追蹤與紀錄等，而依照
順序逐一分工、討論以及實作。流程圖如下: 
 
 
圖八、系統流程圖 
b. 移動事件的追蹤： 
移動事件的追蹤則是使用 OpenCV內建的連通成份擷取以及 Kalman Filter 函式來
進行線性方向的位置預測，用前景事件的中心點搭配歐幾里得距離平方以及前景事件的
RGB色彩資訊來做雙方比較達到追蹤效果。我們並參考了另外一篇論文而設計了物件結
構，使用 linked-list 記錄著前景事件的起始幀數編號、結束幀數編號、Kalman Filter
各個矩陣資訊、前景事件的影像資訊等資料。 
圖十三即是我們所用的物件結構，一個主要的事件會有一個 Object 結構，而事件
的位置資訊以及色彩資訊則是由 linked-list的 FrameInfo結構所連結起來，系統會不
斷追蹤該事件，直到判斷此事件已結束或是出界才會停止記錄並釋放佇列中的空間，比
較 histogram的地方則是使用 FrameInfo中的 img 成員。 
 
 圖十一、  濃縮影片 
 
圖十二、  調閱原始事件影片 
  
圖十三、原始影片(左)；成功擷取出前景事件並分別標號(右) 
五、結論 
我們所發展的系統能夠將一全天候廿四小時的監視影片除去無移動事件之影像，使
得影片能濃縮至幾秒鐘、幾十秒，甚至是數分鐘的影片，降低後端監控人員之工作量同
時在審查時也節省掉大量不必要的時間，最重要的是能夠把每個追蹤偵測到的事件記錄
下來並且能夠寫上標籤，以便調閱事件發生時間以及搜索事件之用。最後將每個標籤過
的事件統合整理並濃縮致一短片中一次撥出，就可不必從頭到晚觀看整個監視影片，而
只需從這幾十秒的縮影片中仔細觀察需要注意的事件即可。若是想單獨瀏覽出某個事件
也可對母畫面直接點選事件或是輸入關鍵字搜尋在子畫面中獨立播放，因為在每個標籤
過的移動是建中即有時間點與位置的索引，故若是想更仔細的觀察某個事件也可直接搜
索調閱，也避免了無謂的時間耗費，大大節省了時間成本。 

