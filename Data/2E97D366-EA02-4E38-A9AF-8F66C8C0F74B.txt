 I
中文摘要 
無線感測網路是由一群可感測環境或目標物的感測器所構成的無線網路，此類感測
器具有低能量之特性及無線通訊能力，可被部署在某些特定區域內收集有用的資訊，並
將感測到的資料傳送給距離較遠的基地台，以完成感測任務的目的。在感測網路中，當
匯集點需要感測環境中一般事件的資料，例如事件的型態、內容、發生的次數及時間等，
可使用資料散佈的技術來完成，所謂的資料散佈就是探討匯集點的詢問與感測點的資
料，如何有效利用感測點傳遞的問題。資料散佈的方法雖然可以將感測到的事件資料傳
送至匯集點，然而，在物體追蹤的應用環境中，當物體會不斷改變位置或持續移動時，
資料散佈的方法會因物體持續改變位置而產生大量資料，無法有效提供匯集點所需的資
訊。 
在本計畫的第一年，我們針對一般事件資料的取得，提出軌道架構的資料散佈機
制，我們方法主要是在一個矩形區域的感測網路中，根據網路的密度、大小，以及感測
點的傳輸半徑，選取適當的軌道寬度，建立軌道的架構，將感測的事件傳遞至軌道上，
並配合能量考量來選擇資料散佈的路徑，讓行動匯集點可藉由軌道提供的資訊，快速取
得散佈在網路中的資料。 
在本計畫的第二年，我們則提出有效的物體追蹤及資料回報機制，主要作法是將利
用網格架構來劃分整個網路環境，並在網格架構上利用排程技術，減少工作感測點的數
量，並達到較佳的能量消耗平衡。我們針對行動匯集點設計有效的權重機制，使工作點
能迅速傳送感測資料至行動匯集點，並減少匯集點移動時所需的位置更新成本。此外，
我們亦設計一簡單的物體追蹤機制，讓工作點藉由設定追蹤旗標來有效率地收集物體的
資料。最後，模擬結果顯示我們的方法能有效降低所有感測點的能量消耗，並減少資料
傳送至行動匯集點的步數。 
 
關鍵詞：無線感測網路、資料散佈、軌道、行動匯集點、物體追蹤、網格。 
 
Abstract 
Wireless sensor networks consist of numerous sensor nodes that can monitor a variety of 
environments or track objects. These sensors with low battery power and wireless communi-
cation ability are deployed to collect useful information from some regions or specific fields, 
and transmit them to the sink. In most applications in which a sink needs data such as type, 
content, and frequency or time of events, data dissemination is an intended way to distribute 
sink’s queries and event data among sensors. Although data dissemination schemes deliver 
event data to the sink efficiently, however, in some scenarios of applications that require ob-
jects to be tracked, the objects that move constantly or change location continuously will 
produce tremendous data, thus diminishing the efficiency of data dissemination. 
In the first year, we propose a railroad infrastructure to support applications that simply 
require event data. Our railroad infrastructure is established by selecting the proper width of 
the railroad, and this selection is based on node density, network size, a node’s transmission 
range. Therefore, a detected event can be disseminated to the railroad efficiently, and the data 
dissemination path is then constructed with power consideration. Consequently, the mobile 
sink can acquire data quickly by querying the dissemination nodes located in the railroad. 
In the second year, we propose an efficient data reporting and object tracking scheme to 
support applications that require objects to be tracked. The proposed scheme divides the sen-
sor network into grid structure and utilizes an active node selection and scheduling method to 
reduce the number of active sensors in each grid and balance the energy consumption. To 
guide the current position of the sink and reduce the update cost as the sink moves, we design 
an elegant weight function for active nodes. By the weight function, the tracking data can be 
forwarded to the mobile sink efficiently. In addition, we also propose a simple object tracking 
method in which an object can be detected by two or more active nodes with tracking flags. 
 1
一、前言 
無線感測網路[1]是由很多小型的感測裝置所組成的，散佈在某一特定的區域內去執
行特定的任務，這些感測點具有偵測事件、收集、處理及傳送資料的能力。無線感測網
路主要以應用為導向，在感測點部署的區域內，針對使用者的需求，收集並回傳感測到
的事件及資料，以提供使用者即時的事件資訊，或是長期的追蹤和分析[2-3]，其廣泛地
被應用在軍事、醫療、生態監測、民生方面等等。 
目前有許多研究以應用角度切入，解決實際應用環境所遭遇的問題，像是利用行動 
機器人(mobile robot)或是行動感測點，使網路上的感測點能知道位置的定位議題[4]；或
是探討如何有效的部署感測點使網路達到良好的效能，以及在有障礙物的感測環境中如
何有效率的部署感測點，來完成資料的收集並獲得較好的感測覆蓋率[5]。由於感測點主
要以電池供應能量，故有很多的議題針對有效利用感測點能量來作相關的研究探討，例
如將感測點排程以同時達到節省能量並維持足夠的感測覆蓋率的排程議題[6]；此外，不
同的應用中，使用者可以在感測網路自由移動並向感測點要求所需的資料，因此越來越
多的研究考慮如何將網路中的事件或感測資料有效率的傳送至會移動的匯集點或使用
者[7-8]；而有的應用除了要得到事件發生的資訊外，使用者也希望能取得特定事件發生
的位置以及事件移動的軌跡等資訊[9-10]。 
 
二、研究目的 
在無線感測網路中，感測點所回傳的訊息，像是資料的改變或異常、偵測到物體入
侵或移動等，皆可視為感測點依照使用者的需求，主動或被動的將事件產生的資料回傳
至使用者；因此，依使用者的需求而言，網路中事件發生所感測到的資料可以歸納為以
下兩類： 
z 一般事件的資料 (事件發生的種類、發生的次數及時間)：在一般的應用環境中，使用
者對感興趣或特定的事件將所需的資料發出詢問，或是針對固定發生的事件，間斷或
持續性的取得所產生的資料；這類的應用可以根據使用者的需求，設計有效的資料散
佈技術來完成[11-14]。 
z 移動事件的追蹤 (事件發生位置、事件移動過程的軌跡)：在較大的感測網路中有事件
發生時，使用者除了需要得到上述一般事件的資料外，更需要的是事件發生的位置及
移動事件的軌跡等資訊，以符合使用者應用上的需求，此時則可透過事件或物體追蹤
的機制[9-10][15-18]，以有效取得軌跡及位置等資訊。 
在本計畫第一年，我們針對一般事件資料的取得，設計軌道架構的資料散佈機制，
其依網路的密度、大小，以及感測點的傳輸半徑，選取適當的軌道寬度，建立軌道的架
構，將感測的事件迅速地傳遞至軌道上，使行動匯集點可藉由軌道提供的資訊，快速取
得散佈在網路中的資料，減少資料傳送的時間。此外，在軌道上建立資料散佈的路徑時，
我們亦考量感測點的剩餘能量，以平衡感測點的能量消耗。而在本計畫的第二年，我們
提出有效的物體追蹤及資料回報機制，其利用網格架構來劃分整個網路環境，以提昇感
測點管理、物體追蹤以及資料傳遞的效率。我們在網格架構上利用排程技術，減少工作
感測點的數量，並達到較佳的能量消耗平衡。我們針對行動匯集點設計有效的權重機
制，使工作點能迅速傳送感測資料至行動匯集點，並減少匯集點移動時所需的更新成
本，此外我們也設計物體追蹤機制，讓工作點藉由設定追蹤旗標來有效率地收集物體的
資料，最後，我們利用一簡單的維護機制來處理網格內無感測點的問題。 
 
三、以軌道架構作為傳遞的資料散佈機制 (第一年) 
我們所提出的資料散佈機制，分為三個部分，包含軌道的建置、資料散佈以及維護
機制。 
 
 3
的感測點(含自己)可作為散佈訊息的候選點，則當 rTw < 時，如圖 2，經過一番推導計算，
我們可得下列不等式，而其將提供我們 w 值之選取的下限。 
 
 
d
t
T
wwT
T
w
T
r
r
r
r >−+
−−
× 2
22
2
2 1
360
1arcsin2180
π   (4) 
  
 
 
 
 
 
 
 
 
 
 
 
圖 2 軌道寬度( rTw < ) 圖 3 軌道寬度( rTw ≥ ) 
 
另一方面，當 rTw ≥ 時，如圖 3，為了使事件或匯集點在軌道大都能順利散佈或取
得訊息，我們設定散佈的感測點對整個軌道的覆蓋率為 c，則我們推導出下列式子，而
其將提供我們選取 w 值之上限。 
 
 ( )
c
Tw r
12
332 +
≤
π   (5) 
由(4)(5)兩式，我們即可順利選取軌道的適當寬度。 
 
3.2 資料散佈 
當軌道建置好，來源點可將事件訊息散佈至軌道，以方便匯集點發出查詢封包至軌
道上迅速取得事件的摘要；而若需要該事件的詳細資料時，可直接經由軌道上的感測點
另建一條合適的路徑，以取得事件的詳細資料。 
 
(1)感測點的分工 
假設每個感測點都知道自己的位置資訊。因此，在軌道的寬度、位置決定好後，每
個感測點均可知其是否位於軌道區域內。我們針對軌道區域範圍內、外的感測點作說
明，首先軌道外的感測點，會負責事件的偵測，並將事件摘要傳送至軌道上，以及收到
查詢訊息後路徑建立的資料傳輸。而軌道內的感測點，則針對不同的事件，依據我們提
出的資料散佈方式，將訊息散佈至軌道上，這些點稱之為散佈點，其餘的感測點除了路
徑建立的需求外，則不理會訊息封包。因為每個事件的位置不同，所以每次負責的散佈
點可能都不同，因此，有平衡軌道上的感測點之能量消耗的效果。 
 
(2)事件訊息之散佈 
在網路架構中，當事件發生時，偵測到此事件的感測點會成為來源點(source)，並選
 w
rT
 
θ
w
rT
 5
集點需要偵測事件的詳細資料，則需要建立路徑，其先取得來源點和匯集點間的相對位
置，並計算路徑建立是否會經過軌道，當匯集點代理人發現此路徑並未通過軌道，即可
判定匯集點和來源點的位置在同側，此時匯集點代理人回傳訊息給匯集點，由匯集點自
行建立至來源點的路徑，以取得資料。 
如圖 6 所示，路徑之選取我們採用優先考慮路徑長短，在盡可能之下，讓資料或訊
息傳送路徑為最短路徑，再者考量剩餘能量多寡，當路徑上的感測點能量低於該感測點
能量的 0.1 倍，表示能量剩餘過少，因此我們考量利用剩餘能量最多且靠近目的點的感
測點作為下一步的路徑選擇。反之，若當匯集點代理人判斷，匯集點與來源點的路徑會
穿越軌道，則由匯集點代理人直接建立至來源點之傳送路徑，如圖 7 所示。 
另外，當多個匯集點同時要求相同事件的資訊，來源點收到不同匯集點發出的詢問
封包，若該兩個詢問封包有部份路徑重疊，則在資料回傳過程，可共用重疊的路徑，減
少不必要的資料傳送過程，如圖 8 所示。 
 
  
 
 
Sink
New sink agent
Sink
Old sink agent
 
圖 8 匯集點資料取得與路徑共用 圖 9 匯集點移動的路徑通知 
 
 
dissemination node
Sink
Sink agent New sink agent
Source
Sink
 
 
 
圖 10 匯集點移動資料傳遞過程(路徑不
重建) 
圖 11 匯集點移動資料傳遞過程(路徑部份
重建) 
 
(4)匯集點的移動 
當整個網路中軌道內的散佈點已建置完成，若匯集點移動，並要求來源點的資料
時，我們針對移動的匯集點提出處理資料散佈的方式，以下分為兩部份來說明。首先，
若匯集點發出查詢封包後並移動部份距離，但仍可與選定的匯集點代理人作溝通，此
時，來源點資料仍可順利傳遞至匯集點，因此我們不重新選取匯集點代理人。但是若匯
集點失去和匯集點代理人的聯繫，此時，會重新找尋新的匯集點代理人，並同時將匯集
點新位置傳遞給舊匯集點代理人，而舊匯集點代理人收到新匯集點代理人告知匯集點移
動的消息時，則會放棄匯集點代理人的職務，並清除和匯集點有關的紀錄，如圖 9。而
 7
(1) 模擬環境假設與參數設定 
我們使用 Java 語言設計一無線感測網路之模擬環境，所設定的參數如下： 
z 模擬空間：120m × 80m、240m × 160m 
z 感測點數：600、2400，感測點的初始能量為 0.2J，傳輸半徑：10m  
z 資料封包大小：64 bytes，訊息封包：32 bytes 
z TTDD 的分格邊長：20m 
 
(2) 效能分析 
我們將分析我們方法的通訊成本並和 TTDD 及 Railroad 做比較，通訊成本代表整個
網路中所有被產生的封包傳輸量，因此，通訊成本會直接的影響到網路生存時間。我們
假設在一個區域 m×n( nm ≥ )的矩形區域，均勻分佈 N 個感測節點。並根據 Railroad 的
分析模組的三種訊息型態: event notification(pe)，query(pq)，data(pd)，假設有 b 個匯集點
和 a 個來源點在感測區域，所有事件和查詢封包的數量可被寫成bq和ae ， e為事件平
均數量， q為查詢平均數量。 
因此，可推導出我們方法的通訊成本為 
Ncpea
m q2
)12( − + Npea
n e2
22 − + Ncpqa
n
b
n q
)
2
223)12(( −+− + Ncpea
n d
2  (6) 
Railroad 的通訊成本為 
Npqb
mn
nm
q
)(2 + + )4()(4
22
dqeq peapeapeapqbmn
Nnmac
+++
+   (7) 
TTDD 的通訊成本為 
cpqmNNacpepqap
N
N
Ldqq
L 12
3)(
2
14
+++ )(
12
)49( 22
qqd pqbpqbpeamn
Nnmc ++++   (8) 
圖 13 至圖 16 為使用上述公式所產生的效能分析圖，在圖 13 中，當查詢封包數量
較少時，Railroad 花費較少的能量在 source notification 部分，故其相較於我們的方法，
有較少的能量消耗。當查詢封包數量增加時，Railroad 則需消耗較多的能量於無效率的
query forward 上。而 TTDD 主要花費大部分的能量在對不同來源點建立分格架構，因此
在查詢封包數量較少時，通訊成本較高；當查詢封包數量增加時，匯集點可透過分格上
的散佈點取得資料，故其比 Railroad 有較少的能量消耗。在圖 14 中，若事件數量增加
時，我們的方法花費較多的能量在將偵測的事件摘要散佈於軌道上的散佈點，故比
Railroad 的通訊成本高，但仍比 TTDD 的通訊成本少。圖 15 及圖 16 顯示，我們的方法
在匯集點數量及來源點數量皆增加時，通訊成本比 TTDD 及 Railroad 還少。 
 
 
0
10000
20000
30000
40000
50 100 200 300 400 500
Total number of queries
Co
mm
un
ica
tio
n c
os
t
Proposed 
Railroad 
TTDD
 
 
0
4000
8000
12000
16000
5 15 25 50 75 100
Total number of events
Co
mm
un
ica
tio
n c
os
t
Proposed 
Railroad 
TTDD
 
圖 13 查詢封包數量與通訊成本關係圖
(N=600, 10 sinks, 5 sources) 
圖 14 事件數量與通訊成本關係圖
(N=600, 10 sinks, 5 sources) 
 9
0
50
100
150
200
250
300
350
1 2 3 4 5 6
Number of sinks
To
tal
 ho
p c
ou
nts
 (h
op
s/r
ou
nd
)
Proposed (w=12)
Railroad (w=10)
TTDD (α=20)
 
0
20000
40000
60000
80000
1 2 3 4 5 6 7
Number of sinks
To
tal
 en
erg
y c
on
su
mp
tio
n (
μ
J/p
er 
rou
nd
) Proposed (w=12)
Railroad (w=10)
TTDD (α=20)
 
圖 19 不同匯集點個數的平均步數 
(120m×80m , N=600, 5 sources) 
圖 20 不同匯集點個數的能量消耗情形 
(240m×160m, N=2400, 5 sources) 
 
0
200
400
600
800
1000
1 2 3 4 5 6 7 8
Number of sinks
To
tal
 ho
p c
ou
nts
 (h
op
s/r
ou
nd
)
Proposed (w=12)
Railroad (w=10)
TTDD (α=20)
 
0
20000
40000
60000
80000
0 5 10 15 20
Sink Speed
To
tal
 en
erg
y c
on
su
me
 (μ
J/p
er 
ro
un
d)
Proposed (w=12)
Railroad (w=10)
TTDD (α=20)
 
圖 21 不同匯集點個數的平均步數 
(240m×160m, N=2400, 5 sources) 
圖 22 匯集點移動速度之總能量消耗 
(120m×80m, N=600, 1 sinks, 10 queries) 
 
 
四、以網格架構為基礎的資料回報及物體追蹤機制 (第二年) 
我們所提出的資料回報及物體追蹤機制，包含四大部分，分別是網格管理及工作點
的選取、資料回報、物體追蹤以及維護機制。 
 
4.1 網格管理及工作點的選取 
 
(1) 網格管理 
在大而密的無線感測網路中，為避免感測資料的重複性過高及節省感測點的能量消
耗，有效管理感測點是必要的。因此，我們使用網格架構(grid structure)來劃分整個感測
網路，如圖 23 所示，每一網格有其對應之座標，為了完整的感測資料及感測點的溝通，
我們定出分格邊長 d，感測半徑 s，及傳輸半徑 t 之關係如圖 24 所示。 
 
  
A(4,1)
(0,0)B
 
 
圖 23 以網格(grid)架構劃分感測網路 圖 24 感測半徑、傳輸半徑與網格邊長之關係
  d  
感測半徑 ds 5=  
傳輸半徑 dt 22=  
 11
  
 
 
 
 
 
 
 
 
 
 
圖 27 工作點分級演算法 圖 28 工作點在不同回合中之分級範例 
 
 
 
 
 
 
 
 
 
 
 
 
圖 29 工作點的分級示意圖 
 
當每一個工作點已被分成 level 1 或 level 2 之後，我們更進一步定義其中具有更高
等級的工作點，我們的定義如下： 
 
定義一：一個工作點其斜對角四個工作點都存在且均為 level i 的工作點(i≧2)，則此工
作點亦屬於 level (i+1)。 
 
根據定義一，每一工作點藉由與其鄰近工作點溝通後，得知其所屬的最高 level 值，
即 L'(p)值，圖 29 為一個 13×9 網格的感測網路，其中 A 點有四個 level 2 的鄰居，故 A
點也屬於 level 3，以此類推，B 點的最高 level 值為 4，C 點的最高 level 值為 5，最後我
們可得到，L(A) = 1、L'(A) = 3、L(B) = 1、L'(B) = 4、L(C) = 1、L'(C) = 5。而其他在網路
邊緣工作點，其無法從定義一得知其最高的 level 值，因此，我們便設其最高 level 值與
其初始的 level 值相同，即 L'(p)等於 L(p)。 
 
(2) 權重值的建立 
當匯集點發出詢問封包(query packet)至所有工作點時，各工作點便建立其權重值
w，藉以瞭解各點離匯集點之遠近，之後再進一步求出工作點的最高權重值 w'，以指引
各工作點如何順利回傳資料至行動匯集點。 
首先，我們令匯集點發出的封包為 Sink_Query，其格式為＜sink_id, type, weight, 
object_info, round＞。其中 type 代表發出此封包的角色(0 為匯集點, 1 為 level 1 的工作點, 
2 為 level 2 的工作點)，weight 代表發送此封包的工作點對匯集點之權重值 w，object_info
為匯集點所需的物體資訊，round 為回合數。因此，每個收到 Sink_Query 封包的工作點
p，藉此此封包得到自己的權重值 w(p)，且若需要，得更新 type 或 weight 值，然後再將
Sink_Query 廣播出去。Sink_Query 的初始格式為<sink_id, 0, 0, 1, object_info, 1>，此權重
 13
時，總共只有六個工作點需更新其 w'值，故更新成本不高，不會造成太多感測點的能量
消耗。 
 
 
圖 33 更新最高權重值(w')之演算法 
 
 
圖 34 更新最高權重值(w')的範例 
 
 
圖 35 工作點回傳感測資料至匯集點之範例 
 
(4) 回傳資料至行動匯集點 
當所有工作點均設定其 w 與 w'值後，若有某工作點要傳送感測資料至行動匯集點，
其從四個鄰居工作點中，選擇 w'值最小的工作點，並將感測資料傳至此工作點，若有多
 15
記錄回傳的路徑，最後工作點若收到第一個回傳訊息時，便以此訊息記錄的路徑，將收
集的資料傳給發出該訊息的工作點，如圖 37 所示，A 點發現物體快離開自己的感測範
圍，因物體所在的鄰近網格內己無工作點存在，意即無旗標值為 1 的工作點，此時 A 點
廣播一個 TTL 值為 3 的封包，而 B 點收到其封包後就回傳一個訊息給 A 點，之後 A 點
就可沿著該路徑將感測物體的資料傳給 B 點，使得物體追蹤能持續下去。 
 
4.5 模擬結果與分析 
我們的方法與 TNT[18]和 SNEM[17]方法進行效能分析及模擬，在模擬環境中，我
們假設感測點隨機但均勻的散佈在網路中，感測點皆不具移動性，且初始能量都相同，
此外有一個匯集點及一個物體在網路環境中移動。每個感測點都具有資料融合的能力，
且假設兩點間的廣播封包不會遇到干擾或碰撞等問題，故任兩點在傳送半徑範圍內傳送
及接收封包皆能成功。我們針對不同的模擬項目來進行效能的比較，項目詳細說明如下： 
z 成功率(successful rate)：其代表感測點是否可將感測到的資料，藉由權重值，成功
回傳資料至行動匯集點的百分比。 
z 平均回傳步數(average hop count)：其為感測點成功將資料回傳至行動匯集點所花費
的步數。 
z 每回合總能量消耗(average total energy consumption)：每回合所有工作點的總能量
消耗，在此我們只考慮資料的傳送與接收的能量消耗，而在感測(sensing)和閉置(idle)
時的能量消耗，則不列入評估。我們採用的感測裝置電量消耗模組為 the first order 
radio model[19]。 
 
(1) 模擬環境假設與參數設定 
我們使用 C++語言設計一無線感測網路之模擬環境，所設定的參數如下： 
z 網路範圍：13×13、15×15、17×17、19×19、21×21 (網格) 
z 感測點數：400、600、800、1000 
z 感測點的初始能量為 0.25J  
z 資料封包大小：2000 bits，訊息封包：64 bits 
z 網格邊長：12.5 m 
z 匯集點的移動速度: 10 m/s，物體的移動速度 15 m/s (使用 Random Waypoint 
Model) 
z Ta = 1 秒，Tsb = 1~7 秒 (Sink beacon interval) 
 
(2) 模擬結果 
圖 38 顯示我們的方法在不同網路大小及 sink beacon interval (Tsb)下的模擬結果，由
結果可知，我們的方法在感測點回傳資料至匯集點的成功率至少為 90%以上，而不同網
路大小及 sink beacon interval (Tsb)對於平均回傳步數的影響則不明顯，代表我們的方法
在權重值維護方面有良好的效果。圖 39 為我們的方法與 TNT 方法在不同的網路環境
下，平均每回合的能量消耗與平均回傳步數的效能比較，由於我們的方法有排程的機
制，故可避免掉許多不必要的能量消耗，再者我們利用匯集點廣播封包的方式來維護其
權重值，故感測點要回傳資料給匯集點時，可利用權重值，將資料迅速回傳，不會有多
餘的感測點去發送資料封包。而 TNT 則是感測點要傳送資料時，需廣播資料封包給四
個鄰居，因此，當感測點數量越多，能量消耗的情形就越嚴重。而在平均回傳步數方面，
在我們的方法中，感測點回傳資料至匯集點時，感測點可用對角線的傳送方式來傳送資
料封包，而 TNT 則是將資料廣播給上下左右四個鄰居，因此，我們的方法的平均回傳
步數會比 TNT 少。 
 17
有感測點會對物體做感測的動作，當物體移動後，就會將感測到的資料傳送至不會移動
的匯集點，所以只要物體有移動，感測點就會不斷的分別傳送資料給匯集點；而我們的
方法只需少量的感測點來追蹤物體，且只需一個感測點來整合資料並回傳至匯集點，因
此可節省能量消耗。另外，當網路越大時，我們的方法在能量消耗的上升趨勢也比 SNEM
平緩。 
 
六、學術論文 
本計畫在二年執行期間，已投稿國內外相關領域之會議，並獲得最佳論文獎，投稿
之相關學術論文如下： 
1. S.-F. Hwang, K.-H. Lu, Y.-S. Wang, and C.-R. Dow, “An Efficient Data Reporting Scheme in Large Wireless 
Sensor Networks with Mobile Sinks,” Proceedings of International Computer Symposium (ICS2008), pp. 
212-218, Tamsui, Taiwan, Nov. 13-15, 2008. 
2. S.-F. Hwang, K.-H. Lu, L.-R. Yang, and C.-R. Dow, “Efficient Data Reporting for Object Tracking in Wire-
less Sensor Networks with Mobile Sinks,” Proceedings of the 14th Asia-Pacific Conference on Communica-
tions (APCC 2008), Tokyo, Japan, Oct. 14-16, 2008. 
3. Yi-Wen Huang, Shiow-Fen Hwang and Chyi-Ren Dow, "A Railroad-Based Data Dissemination in Wireless 
Sensor Networks," Proceedings of the 3rd Workshop on Wireless, Ad Hoc, and Sensor Networks (WASN), pp. 
27-36, Sep. 2007. Tamkang, Taiwan. (Best Paper Award) 
4. L.-R. Yang, S.-F. Hwang, and C.-R. Dow, “在匯集點可移動的無線感測網路上有效的物體追蹤與回報機
制,” Proceedings of the 13th Mobile Computing Workshop, Apr. 20, 2007. 
 
七、計畫成果自評 
本人所提之研究計畫在二年執行期間已順利完成，並達原計畫目標，而研究成果也
已投稿相關學術論文。 
 
參考文獻 
[1] I. F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci, “Wireless sensor networks:a survey,” Com-
puter Networks, vol. 38, no. 4, pp. 393-422, 2002. 
[2] S. Lindsey, C. S. Raghavendra and K. M. Sivalingam, ”Data Gathering Algorithms in Sensor Networks Us-
ing Energy Metrics,” IEEE Trans. on Parallel and Distributed Systems, vol. 13, no. 9, pp. 924-935, 2002. 
[3] Y. Yu, V.K. Prasanna, and B. Krishnamachari, “Energy Minimization for Real-Time Data Gathering in 
Wireless Sensor Networks,” IEEE Trans. on Wireless Communications, Vol. 5, No. 11, pp. 3087-3096, 
2006. 
[4] K.-F. Ssu, C.-H. Ou, and H. C. Jiau, ”Localization With Mobile Anchor Points in Wireless Sensor Net-
works”, IEEE Trans. on Vehicular Technology, Vol. 54, No. 3, pp. 1187-1197, 2005. 
[5] C. Y. Chang, C. C. Hsieh, and H. R. Chang, “Obstacle-Free Robot Deployment Algorithm for Wireless 
Sensor Networks,” Proc. of the Workshop on Wireless, Ad Hoc, and Sensor Networks, pp. 93-99, 2005. 
[6] Y. Y. Lin, Y. Y. Su, S. F. Hwang, and C. R. Dow, "A Cluster-Based Coverage-Preserving Scheduling 
Scheme for Wireless Sensor Networks," Proc. of the Workshop on Wireless, Ad Hoc, and Sensor Networks, 
pp. 457-462, Aug. 2005. 
[7] P. Baruah, R. Urgaonkar, and B. Krishnamachari, “Learning-Enforced Time Domain Routing to Mobile 
Sinks in Wireless Sensor Fields,” Proc. of IEEE LCN, pp. 525-532, 2004. 
[8] K.-i. Hwang, J. In, Y.-h. Yun, D.-s. Eom, “Dynamic Sink Oriented Tree Algorithm for Efficient Target 
Tracking of Multiple Mobile Sink Users in Wide Sensor Field,” Proc. of IEEE Int’l Conf. on Vehicular 
Technology, pp. 4607-4610, 2004. 
[9] W.-P. Chen, J.C. Hou, and L. Sha, “Dynamic Clustering for Acoustic Target Tracking in Wireless Sensor 
Networks,” IEEE Trans. on Mobile Computing, Vol. 3, No. 3, pp. 258-271, 2004. 
[10] W. Zhang and G. Cao, “DCTC: Dynamic Convoy Tree-Based Collaboration for Target Tracking in Sensor 
Networks,” IEEE Trans. on Wireless Communications, Vol. 3, No. 5, pp. 1689 – 1701, 2004. 
[11] C. Intanagonwiwat, R. Govindan, D. Estrin, J. Heidemann, F. Silva, “Directed Diffusion for Wireless Sensor 
Networking,” IEEE/ACM Trans. on Networking, Vol. 29, No. 1, pp. 2-16, 2003. 
[12] H. S. Kim, T. F. Abdelzaher, and W. H. Kwon, “Dynamic Delay-Constrained Minimum-Energy Dissemina-
tion in Wireless Sensor Networks,” ACM Trans. on Embedded Computing Systems, Vol. 4, No. 3, 
pp.679-706, 2005. 
[13] H. Luo, F. Ye, J. Cheng, S. Lu, and L. Zhang, “TTDD: Two-Tier Data Dissemination in Large-scale Wire-
less Sensor Networks,” Wireless Networks, Vol. 11, No. 1-2, pp.161-175, 2005. 
Proceedings of APCC2008 copyright (c) 2008 IEICE 08 SB 0083
Efficient Data Reporting for Object Tracking in
Wireless Sensor Networks with Mobile Sinks
Shiow-Fen Hwang, Kun-Hsien Lu, Liang-Ren Yang, Chyi-Ren Dow
Department of Information Engineering and Computer Science
Feng Chia University, Taichung, Taiwan 40724, R.O.C.
{sfhwang, p9217988, m9443617, crdow}@fcu.edu.tw
Abstract—Object tracking is an important application
in wireless sensor networks (WSNs). However, most of
researches focus on how to track mobile objects accurately
and do not consider data reporting, especially when sinks
move arbitrarily in the sensor field. In this paper, we
propose an efficient data reporting method for object
tracking in WSNs with mobile sinks. In our network
environment, the sensor field is divided into several grids.
Only some nodes are elected as active nodes for tracking
the object and reporting data, the others are in sleep mode
for saving energy. Moreover, a simple scheduling is given
to balance the energy consumption of nodes. To guide the
current position of the sink and reduce the update cost as
the sink moves, we design an elegant weight function for
active nodes. By the weight function, the tracking data can
be forwarded to the mobile sink efficiently. In addition, we
also propose a simple object tracking method in which an
object can be detected by two or more active nodes with
tracking flags. Simulation results show that our proposed
method outperforms than TNT and SNEM in terms of the
energy consumption and average hop counts.
I. INTRODUCTION
With advances in micro-electro-mechanical systems
(MEMS) technology, wireless communications and digital
electronics have enabled the development of wireless sen-
sor with low cost processor and low power consumption.
Wireless sensor networks usually consist of numerous
sensor nodes that are able to monitor a variety of envi-
ronments or track objects. These sensor nodes with light-
weight and wireless communication ability are deployed
to collect useful information from some regions or specific
fields, and then transmit the specific data to a given sink
or a base station.
Object detection and tracking are important issues in
wireless sensor networks. Many object tracking researches
have been proposed in recently years [1-4]. Most of them
focus on how to track mobile objects accurately and
do not consider data reporting, especially when the sink
moves arbitrarily in the sensor field. For example, a large
number of sensors are deployed in a forest to monitor
and track mobile objects, such as animals. A mobile
observer equipped with PDA moves around the forest,
and issues a query to request sensors to track animals. In
such scenario, efficient data reporting for mobile observers
is essential to receive the information sent by sensors.
In [5], Q. Ye et al. have proposed two protocols, called
TNT and PTNT, to address sink mobility problem. In
TNT, each node maintains a tracking counter and sets
up a beacon timer. The mobile sink broadcasts a beacon
periodically to its neighbor nodes. If a neighboring node
receives the beacon, then increases its tracking counter
by 1, otherwise, decreases that by 1 when the beacon
timer expires. Therefore, the sensed data can be forward
to the mobile sink by using the sequence of the tracking
counters. However, in this scheme, inefficient paths could
be incurred due to the special movement patterns of the
sink, thus result longer transmission delays. Although the
authors also proposed PTNT to address this problem and
finds shorter path than TNT, but nodes need to consume
more energy than TNT due to the increase of control
information.
In [6], X. Du et al. have proposed a Sensor Network
Energy Management (SNEM) protocol to track objects by
utilizing grid structure. The idea of SNEM is to allow the
sensor nodes located in the neighbor grids of the object’s
grid to be awake. Other nodes enter to sleep mode to save
energy. Although SNEM aims to guarantee the accurate
tracking of objects, but it still needs many nodes to detect
and track objects.
In this paper, we propose an efficient data reporting
method for object tracking in WSNs with mobile sinks. In
our proposed method, the sink issues a query to request
nodes to track objects, and the sink moves arbitrarily
until it receives the object information. We define the
above process as a tracking round. Hence, our method
contains two parts: data reporting and object tracking. In
data reporting part, the sensor field is divided into several
grids, and one node is selected as a head in each grid. In
order to save energy, only some heads become active nodes
to track objects and forward data. We classify all active
nodes into multiple levels. The classified levels are utilized
to construct the weights of active nodes according to the
proposed algorithm, when the active nodes receive a query
from the mobile sink. Therefore, the object information
can be efficiently forwarded along the path determined
by the active nodes’ weights. When the sink moves, it
only needs to locally broadcast an update packet to its
neighboring active nodes. Here, we use the classified levels
to limit the flooding scope of the update packet so that the
energy consumption can be reduced. In object tracking
part, according to our node scheduling, the object can be
detected by two or more active nodes with tracking flags.
Then, the collected data of these active nodes which detect
the object will be aggregated and forwarded to the mobile
sink along the path described above.
This paper is organized as follows. Section II introduces
the network model including grid construction and node
scheduling. Section III describes efficient data reporting.
Section IV describes object tracking. Section V summa-
Proceedings of APCC2008 copyright (c) 2008 IEICE 08 SB 0083
level 1
level 2
level 3
level 4
level 5
A
B
C
Fig. 6. An example of the classified levels in a 13×9 (grids) network.
WeightConstruction(Sink Query<sink id, type,
weight, object info, round>)
An active node p with L(p) receives a sink
query packet for the first time.
if (type = 0 and L(p) = 1) or
(type = 1 and L(p) = 2) or
(type = 2 and L(p) = 1) then
w(p) = weight
type = L(p)
if L(p) = 2 then
weight = weight + 1
end if
broadcast sink query packet
end if
Fig. 7. Weight construction algorithm.
level value, L′(p), in advance. The following definition 1
is used to find the highest level of the active node p.
Definition 1. For an active node p, if its four (diagonal)
neighboring active nodes exist and all of them belong to
level i (i ≥ 2), then the active node p belongs to level
(i+ 1).
By definition 1, the active node p can know which
levels it belongs to by locally communicating with its
neighboring active nodes, and p can find its L′(p). We
observe that an active node will be closest to the center of
sensor field if its highest level value is maximum. Fig. 6
shows an example of the classified levels in a 13×9 (grids)
network. First, level 1 active node A has four neighboring
level 2 active nodes, thus node A belongs to level 3. Then,
level 2 active node B has four neighboring level 3 active
nodes, node B belongs to level 4. Final, level 3 active node
C knows that it also belongs to level 5 in the same way.
Consequently, we have L(A) = 1, L′(A) = 3, L(B) = 2,
L′(B) = 4, L(C) = 1, and L′(C) = 5. In addition, if a
level 1 or level 2 active node does not have highest level,
we define that its highest level value is equal to its low
level value.
B. Weight Construction
When a mobile sink would like to obtain the information
about some mobile objects, it issues a Sink Query Packet
(SQP), and then broadcasts it to all active nodes. Each
active node receiving the SQP packet builds its low level
weight, w, and highest level weight, w′. Both of w and
w′ are utilized to forward data during data reporting. The
procedures of low level weight construction and highest
level weight construction are described as follows.
S
0
0
1
1
1
1 1
1
2 2 2
2
2
2
2
2
2 2
3 3 3 3
3
3
3
3
3
3
4
4
4
4
Fig. 8. An example of low level weight (w) construction. The mobile
sink locates in the right-bottom corner of the sensor field (i.e. gird (8,0)).
The number displayed in the right-bottom corner of each grid indicates
w.
0
1
S
0
0
1
1
1
1 1
1
2 2 2
2
2
2
2
2
2 2
3 3 3 3
3
3
3
3
3
3
4
4
4
4
2
2 1
1
01
Fig. 9. An example of highest level weight (w′) construction. The
number displayed in the right-bottom corner of each grid indicates w and
another number displayed in the right-top corner of each grid indicates
w′. Note that some grids do not be labeled w′ values, it means that w′
is equal to w.
The SQP format is Sink Query<sink id, type, weight,
object info, round>, where the type field represents the
role of the active node sending the SQP packet, the round
field means current round number, and the object info
field is the used to identify the object, such as an animal’s
trajectory in the future ten minutes. The type value is 0, 1,
or 2, which indicates the mobile sink, level 1 active node,
or level 2 active node, respectively. The initial format of
the SQP packet is Sink Query<sink id, 0, 0, object info,
round> generated by the mobile sink. An active node p
receiving the SQP packet for the first time determines if it
should rebroadcast the SQP packet or not, and then sets up
its w(p) according to the weight construction algorithm as
shown in Fig. 7. In this algorithm, there are three cases that
an active node will rebroadcast the SQP packet. Note that
only level 2 active nodes, which receive the SQP packet
from other neighboring level 1 active nodes, increase the
weight field recorded in the SQP packet by 1. Fig. 8 shows
an example of low level weight (w) construction. We can
observe that an active node far way from the sink will has
larger w than that of other active nodes near to the sink.
After the active node p obtains its w(p), it uses (1) to
calculate w′(p). Fig. 9 shows an example of highest level
weight (w′) construction.
w′(p) = max{w(p)− (L
′(p)− L(p)
2
), 0} (1)
C. Weight update for Sink Mobility
In this subsection, we describe how active nodes update
their weights while the sink moves. The sink broadcasts a
Sink Beacon Packet (SBP) periodically to its neighboring
active nodes every time period TSB . The SBP format is
Sink Beacon<sink id, type, i>, where i is used to limit
broadcast scope, and its initial value is 1. The type field
Proceedings of APCC2008 copyright (c) 2008 IEICE 08 SB 0083
and its collected data. Finally, if the active node founds
that the collected data have satisfied the object info field
recorded in the SQP packet, it first exchanges its collected
data with its neighboring active nodes. Then, one of these
active nodes which has smallest w′ will be selected to
transmit the aggregated object information to the sink by
using the data reporting method described in Section III.
Fig. 13 shows an example of object tracking. In Fig.
13(a), the active nodes A and B detect an object, such as
a tank, and then set their Tf as 1. When the object is about
to move out of the active node A’s sensing range as shown
in Fig. 13(b), node A transmits its collected data to the
active node B with Tf = 1. In Fig. 13(c), the active node
A sets its Tf as 0, and the active node C also transmits
its collected data to B due to the departure of the object.
Moreover, the active node D sets its Tf as 1 because it
detects the object. Fig. 13(d) is a similar situation as shown
in Fig. 13(c).
V. SIMULATION RESULTS
In the simulation environment, the network is divided
into 13×13, 15×15, 17×17, 19×19, 21×21 grids with
400, 600, 800, 1000, 1200 nodes, respectively. The first
order radio model [7] is used to calculate the energy
consumption of a sensor node. The size of a data packet is
2000 bits and the size of a control packet is 64 bits. A sink
with speed 10 m/s and a object with speed 15 m/s are de-
ployed and the random way-point model is employed. We
set TA as 1 second, and vary TSB (sink beacon interval)
from 1 to 7 seconds. We simulate three metrics including
packet delivery ratio, average hop counts, and average
energy consumption per round. The packet delivery ratio
is defined as the ratio of the number of data packets
successfully received by the sink to the number of data
packets reported by active nodes. Fig. 14 shows successful
rate and average hop counts under different network sizes
and sink beacon intervals. The results indicate that our
method has at least 90% successful rate even in high
1 2 3 4 5 6 7
80
85
90
95
100
Pa
ck
et
 d
el
ive
ry
 
ra
tio
 (%
)
Sink beacon interval  (second)
 13x13
 15x15
 17x17
 19x19
 21x21
(a)
1 2 3 4 5 6 7
0
2
4
6
8
10
12
14
Av
er
ag
e 
ho
p 
co
un
ts
Sink beacon interval  (second)
 13x13
 15x15
 17x17
 19x19
 21x21
(b)
Fig. 14. The results of packet delivery ratio and average hop counts
under different network sizes and sink beacon intervals.
13x13 15x15 17x17 19x19 21x21
0.00
0.02
0.04
0.06
0.08
0.10
0.12
0.14
0.16
0.18
0.20
Av
e
ra
ge
 e
ne
rg
y 
co
ns
u
m
pt
io
n
 p
er
 ro
un
d 
(Jo
u
le
)
Network size
 Proposed
 TNT
(a)
13x13 15x15 17x17 19x19 21x21
2
4
6
8
10
12
14
16
 
Av
e
ra
ge
 h
op
 c
ou
n
ts
Network size
 Proposed
 TNT
(b)
Fig. 15. The results of average energy consumption per round and
average hop counts for our proposed method and TNT under different
network sizes.
13x13 15x15 17x17 19x19 21x21
0.00
0.02
0.04
0.06
0.08
0.10
0.12
Av
e
ra
ge
 e
ne
rg
y 
co
n
su
m
pt
io
n
 p
er
 
ro
un
d 
(Jo
u
le
)
Network size
 Proposed
 SNEM
Fig. 16. The result of average energy consumption per round for our
proposed method and SNEM under different network sizes
beacon interval and large network size, and the effect
for average hop counts is unobvious. Fig. 15 shows the
comparison of our method and TNT. Our method has
less energy consumption than TNT because the number
of active nodes in our method is minimized. Our weight
construction also results less average hop counts then
TNT. Fig. 16 shows the energy consumption comparing
to SNEM. Our method has less energy consumption than
SNEM because the number of active nodes needed in our
method to track objects and to report data is less than that
of SNEM.
VI. CONCLUSION
In this paper, an efficient data reporting method for
object tracking in WSNs with mobile sinks is proposed.
In data reporting phase, the proposed method reduces
the number of active nodes to save energy and uses the
classified levels to construct the active nodes’ weights.
Therefore, the object information can be efficiently for-
warded along the path determined by the active nodes’
weights. In object tracking phase, according to our node
scheduling, the object can be detected by a number of
active nodes to keep the object information. Simulation
results shows our method outperforms than TNT and
SNEM, in terms of the energy consumption and average
hop counts.
ACKNOWLEDGMENT
This research is supported by the National Science
Council of the Republic of China under grant number
NSC-96-2628-E-035-074-MY2.
REFERENCES
[1] Y. Xu and W.-C. Lee, ”On Localized Prediction for Power Efficient
Object Tracking in sensor networks”, in Proc. of International
Conference on Distributed Computing Systems Workshops, pp. 434-
439, 2003.
[2] Y. Xu, J. Winter, and W.-C. Lee, ”Dual Prediction-Based Reporting
for Object Tracking Sensor Networks,” in Proc. of International
Conference on MOBIQUITOUS, pp. 154-163, 2004.
[3] Y. Xu, J. Winter, and W.-C. Lee, ”Prediction-Based Strategies for
Energy Saving in Object Tracking Sensor Networks” in Proc. of
IEEE MDM, pp. 346-357, 2004.
[4] W. Zhang and G. Cao, ”DCTC: Dynamic Convoy Tree-Based
Collaboration for Target Tracking in Sensor Networks,” IEEE Trans.
on Wireless Communications, vol. 3, no. 5, pp. 1689-1701, 2004.
[5] Q. Ye and L. Cheng, ”A Lightweight Approach to Mobile Multicas-
ting in Wireless Sensor Networks,” International Journal of Ad Hoc
and Ubiquitous Computing, vol. 2, no.1/2, pp. 36 - 45, 2007.
[6] X. Du and F. Lin, ”Efficient Energy Management Protocol for
Target Tracking Sensor Networks” in Proc. of IEEE International
Symposium on Integrated Network Management, pp. 45-58, 2005.
[7] W.R. Heinzelman, A. Chandrakasan, and H. Balakrishnan, ”Energy-
Efficient Communication Protocol for Wireless Microsensor Net-
works,” in Proc. of the 33rd Hawaii International Conference on
System Sciences, 2000.
