 2
一、中英文摘要：  
以 DWT 為基礎之適應性量化與資訊隱藏之研究 
1. 計畫中文摘要 
關鍵字：量化、資訊安全、資訊隱藏、離散小波轉換。 
本計劃擬以 JPEG2000 流程為基礎，並結合離散小波轉換(Discrete Wavelet Transform, 
DWT)與量化、資訊隱藏等理論，進行壓縮率、影像品質、與藏匿容量等重要評估參數之改
良與妥協。整個計劃包含兩大部分(1)適應性量化器之設計、(2)頻率域資訊隱藏技術之開
發。 
根據實驗的結果發現，對同一影像分別施行分別標準量化與適應性量化，適應性量化
的影像品質高於 JPEG 標準量化器(在相同壓縮率之下)。因為各別影像的像素分布值都不盡
相同，使用單一個固定量化器並無法滿足所有影像的特別需求，這是很自然的結果。所花
費的代價是，每一張影像都必須先個別計算其像素分佈的一些特徵值，才能設計出此影像
專屬的量化器。然而，以 Pipeline 架構的 JPEG 整體系統而言，這樣額外的時間延遲是可
被忽略的(只要再管線上多加上一層量化前處理)。因此，本計畫將對進行 DWT 前之原始影
像量化問題，做適應性之考量與研究，以提升壓縮率與影像品質。 
另一方面，由於網際網路之盛行，資訊安全的議題在近年來格外受到矚目。一般為了
防止重要資料在傳輸的過程中被擷取或偽造，在資料傳輸之前通常都會對資料進行加密
(Encryption)的動作以保護資料的安全。但是重要資訊加密後，若是呈現出無意義的亂碼
形式，反而受到矚目而容易引來競爭者或網路駭客之蓄意擷取與破壞。因此除了較傳統的
資訊加密解密、數位浮水印等技術之外，另有一稱為資訊隱藏術(Steganography)的主題，
其角色也逐漸鮮明而趨於重要。與傳統加密法不同的是，藏匿資料以後的資料與原始資料
相當類似，以肉眼(耳)看(聽)不出明顯之不同。 
由於 DWT 的特性是能把原始影像資料區分為低頻與高頻的部分，而人類肉眼對低頻訊
號較為敏感。因此本計畫將針對做完 DWT 轉換後的 DWT 係數直接進行資訊隱藏的動作，其
優點是(1)充分利用 DWT 之特性，將欲隱藏之重要資訊嵌入肉眼較不敏感的中高頻帶，而盡
量保持低頻係數之完整性。如此一來，在維持一定影像品質的前提之下，將可藏入更大容
量的重要資訊而不被發覺。(2)與傳統施行於空間域的資訊隱藏技術相比，省去了解壓縮
(DWT 的反轉換, IDWT)的時間。 
 
DWT-based Adaptive Quantization and Steganography 
2. Abstract(計畫英文摘要) 
Keywords：Quantization, Security, Steganography, Discrete Wavelet Transform 
This project intends to focus research on two parts of JPEG2000 flow. One is the 
quantization before Discrete Wavelet Transform (DWT) and the other is the data hiding 
technique called Steganography. The evaluation criteria would be PSNR (Peak Signal to Noise 
Ratio), Compression Ratio, and Hiding Capacity. We try to improve the algorithms in terms of 
these 3 parameters and find an appropriate compromise. The project tasks include (1) Adaptive 
Quantizer Design and (2) Steganography on frequency domain. 
 
According to our preliminary experiment results, the adaptive quantizer produces higher 
PSNR than the standard one. This is quite natural since the adaptive one is capable to adjust its 
quantization process case by case. In other words, images with different pixel distribution will 
 
Step3：選出量化區塊的數量，且左右的量化區塊數量須為相等，假設先設定各為 10 個區
塊，則量化區間為：左量化區間寬度為(-40-(-128))/10=8.8，無條件進位為 9;右量化區
間為(127-(-40))/10=16.7，無條件進位為 17。區塊切割結果如圖三所示，其中剩餘區間
為因無法整除而導致的較小區塊(左邊那塊寬 7，右邊那塊寬 13)。 
 
圖三:量化區間指派 
Step4：左區間量化值：(數值-量化中心點)/左量化區間寬，右區間量化值：(數值-量化中
心點)/右量化區間寬，所得的數值取整數如圖四所示。 
          
圖四: 量化結果 
 
B.反量化過程: 
Step1：將量化係數載入，進行係數復原，分為三個部份： 
 小於 0：((係數-0.5)*左量化區間寬)+量化中心點 
 等於 0：即為量化中心點的值(實例的值是-40) 
大於 0：((係數+0.5)*右量化區間寬)+量化中心點 
其中 0.5 為反量化重建參數，結果如圖五所示。 
      
圖五:反量化 
 
Step2：將上述數值作反向平移，即全加上 128(即 d/2)，得到重建的影像，如圖六所示。
  
 4
 
圖八:兩種反量化器得到不同之近似影像 
  
(2)資訊隱藏 
A.重要資訊藏入過程： 
Step1：將原始影像進行 DWT。 
Step2：對想要隱藏的重要資訊編碼。(a)將重要資料相鄰的 2 個bit轉為 10 進制(0、1、2、
3)，(b)將其相鄰的兩個值相減，此時前、後相鄰值相減會有 16 種組合其結果共有 7種狀
況，分別為 1、2、3、0、-1、-2、-3，(c)將相減之後的值分別對應到狀態對應表中的值，
如圖十六所示。舉一實例，假設欲隱藏的原始重要資料為0100101101011100 先轉換成為
10231130，再相減而得到 1,-1,0,3。Step3 將根據圖九，把這四個差值與相減狀態藏入三
個高頻子頻帶。 
 
   10 進制相減結果                      狀態對應表 
                           圖九 
 
Step3：資訊嵌入。(a)把相減之後的 10 進制值的絕對值(有 0,1,2,3 四種值，需用兩個bits
表示)嵌入HH 區塊。嵌入的順序為由左至右、由上到下(如圖十(a)所示)，直接使用LSB置
換法將之嵌入每個像素的最右 2個bit中，(b)將狀態對應表的編碼嵌入LH及HL區塊中。狀
態對應表中有底線的值藏入LH，而沒有底線的部分則藏入HL。若底線為 2個bit則表示LH
中的像素值需嵌入 2個bit，另外當相減結果為 3或-3 時，則只需將狀態對應表只需編 1 
bit，將此bit藏入LH，HL則不用藏。記錄相減狀態的LH及HL區塊與紀錄差額絕對值的HH，
其嵌入的順序是一樣的(圖十(a))。依同一個例子繼續說明，假設DWT轉換後的值為圖十
(b)，我們先將 1,-1,0,3 嵌入HH的四個係數。接著分析相減狀態:1 是由 1-0 而來，在狀態
 6
 
                   圖十一 
 
 
圖十二 
 
(c)最後由 HL 區塊依序取出每個係數中的 LSB，若其對應到的 HH 係數為 3則不用取，將 LH
與 HL 所取出的 LSB 的 bit 合併為 HH 區塊的狀態對應值，HH 區塊內的每個係數依照其所對
應到的狀態還原成原始相減前的 10 進制值，即還原成 0、1、2、3這 4種情況，再將此 4
種情況之 10 進制值轉回 2進制，再依序排好。 
依先前藏入過程的同一個例子來說明，經過DWT後的結果如圖十(d)。首先從HH中每個像素
取出 2個bit將其轉成 10 進制，其結果為 1、1、0、3。HH為 1 之處LH要取出 2個bit，取
出後為00;HH為-1 之處LH要取出 2個bit，取出後為11;HH為 0 之處LH要取出 1個bit，取出
後為0;HH為 3 之處LH要取出 1個bit，取出後為0。最後，從HL係數中各多取出 1個bit依次
為 0、0、1而最後對應的HH為 3 所以不用取。將LH與HL合併後與HH取出的值將其轉回相減
前的值依序為 10231130，再將其轉成 2進制為 01001011010111002。 
將LH區塊內的每一個係數值的倒數第二的LSB取出，(對應到HH區塊內取出的值為 10 進
制的 1的位置不取)，如圖十三所示。依藏入過程同一實例說明，對應到HH的值為 1故不取，
依序為-1 也不取，再來取出 1，最後取出 0，最後將其排序後為 102。 
 
                          圖十三 
 
將HL區塊內的每一個係數值的倒數第二個LSB取出，如圖十四所示。根據上例，其依序
取出的結果為 1101，將其排序後為 11012。 
 8
