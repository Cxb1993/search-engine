 
行政院國家科學委員會專題研究計畫成果報告 
 
以語意網與混合服務為方法中介 WEB2.0 多樣應用 
 
計劃編號：NSC 97－2221－E－218－047－ 
執行期限：97 年 8 月 1 日 至 98 年 7月 31 日 
主持人：陳志達   南台科技大學資管系 
計畫參與人員：黃為寅   南台科技大學資管系 
              李奕璋   南台科技大學資管系 
              江啟賓   南台科技大學資管系 
              邱保欽   南台科技大學資管系 
              房欣漢   南台科技大學資管系 
 
摘要 
本計劃提出利用語意網相關技術，建立旅遊排程相關的本體論，再利用 RSS 資訊蒐集
系統來收集資訊，透過本體論將收集而來且有意義的資訊結構化，並讓電腦可以做資訊剖
析，依各種不同情況做適性化的旅遊排程，同時採用 Ajax 的非同步處理特性來降低伺服器
的負擔，在旅遊行程中可利用 GPS 擷取使用者所在位置去做與位置相關的服務，提供使用
者適性化的旅遊行程規劃與旅程相關資訊。另外在網際網路盛行之下，資料量變得相當繁
雜，使得在資訊搜尋和整合上增加其困難性，並且讓資料搜尋準確性大大折扣；因此，本
研究亦可針對異質資料源之資料進行搜集，提供語意搜尋和具有資訊整合性的新聞事件關
聯與追蹤模組，來建置一個異質資料元處理的中介系統，希望提供高準確性的搜尋技術和
完整的資訊整合。以達到：(1) 利用語意網路技術以提升資訊搜尋之準確性；(2) 建構新
聞事件關聯與追蹤模組以達到資訊高整合性和便利性。 
最後本計劃提出並建構一個以「混合性網路服務」（mashup）為基礎的資訊平台，利用
以「用戶端混合服務模式」來結合不同來源資訊與服務。一般的行動使用者在透過行動通
訊設備查詢地理資訊時，往往需要與自身所處位置相關的資訊內容，因此本計劃在研究過
程中設計並建製了一個資訊平台，由使用者提供地理位置上各種類型的 POI（Point of 
Interesting）資訊，如熱門的風景名勝、旅遊景點、公共設施等，透過電子地圖服務工具將
這些具有主題意義的地點標示出來，並利用 mashup 的概念結合第三方網站所提供之網路服
務、網路應用程式介面與其他資訊內容，讓系統能夠提供交通狀況、天氣預測、實景圖片
與鄰近地點查詢的加值 POI 資訊，解決單機軟體所提供的資料無法即時更新的時效性問
題，以及地域性資訊缺乏的缺點。 
關鍵字：語意網、RSS、事件追蹤、本體論、混合性網路服務、POI 
需要花上更多時間和人力去過濾所搜尋到的結果，才能夠找出真正符合需求的資訊，因此，
如何能依據使用者的查詢，快速而準確的得到所要的資訊，是目前在 web 資訊爆炸的時代，
最受矚目的研究課題。 
因此若能有一個資訊平台，能夠整合網際網路上各種類型的資訊，能配合旅遊排程規
劃提供使用者所需要的資訊事件簿，並適時適地的提供給一般使用者或行動使用者，將可
解決一般資訊系統與單機軟體所提供的資料，無法即時更新的時效性問題，以及地域性資
訊缺乏的缺點。 
 
二、研究目的 
圖 1、系統整合概念圖 
圖 1 為整個計畫的概觀圖，其中包括 Information Retrieval Module、Annotation and 
Scheduling Module、News Event Relation and Tracker Module 與 Mashup Module 四個部分。 
提供旅遊使用者一個可以自動收集資訊並將資訊加以規劃整合的資訊平台，利用收集
所得之資訊為使用者量身製作客製化行程。使用 Information Retrieval Module 來負責收集網
路上的 RSS 的文件。為了有效的利用這些資料，導入語意註解的概念，利用 Annotation and 
所提供的平台介面，同時也可藉著使用者的分享來增進本系統的資訊。 
2. 提供自動註解 
 利用 RSS 收集器在網路上收集相關的旅遊 RSS feed，把收集而來的旅遊
資訊透過旅遊本體論詞彙加上自動加上註解，最後存在旅遊資料庫。 
2. Scheduling 
由使用者提供旅遊資訊以及利用 RSS 收集器在網路收集相關的旅遊資訊，藉由本
體論來去判讀所收集而來資訊內容為何，再依據使用者的需求，透過評估法則來因應
行程中的旅遊狀況，系統不但符合需求可以自動調整行程，更可達到同時在排程的過
程中，也利用本體論來描述類別與類別之間的屬性，來加強排程的效益。 
1. 提供可以因應旅遊狀況而有所調整的評估法則 
 因應行程中可能發生的旅遊狀況，來建立一個評估法則，用來讓系統可
以依照此表而有所調整。 
2. 提供符合使用者需求的旅遊景點 
 建立一個考慮使用者權重、成本、時間等因子的景點權重公式，配合評
估法則來挑選適合使用者的景點。 
3. 提供一個有效益的排程 
 利用景點之間的最小距離以及透過本體論所建立景點與景點之間相鄰的
屬性，藉此來做相關排程的依據。 
3. News Event Relation and Tracker Module 
此模組主要負責鎖定某一事情、人物、地名進行相關資料搜尋和持續追蹤，分析新
聞事件所要表達的語意，並且過濾掉不需要及重複的資訊；在完成每一個新聞事件之
後，再將這些新聞事件彼此互相關聯，讓整個模組更加完整，使用者檢索更為方便。 
4. 自製化個人新聞事件，依個人喜好和排版進行呈現 
 在眾多新聞中，使用者皆可在當中訂閱自己所需的新聞事件，並且照著自己喜
歡的方式進行排版，以呈現出使用者最習慣的畫面和排版。 
5. 針對某一新聞，進行所有歷史檢索和後續追蹤 
 對於有興趣的新聞，可以在此訂閱此議題的新聞，系統自動匯整出相關資訊，
包含此議題的歷史新聞和後續追蹤；以讓使用者大量減少搜尋和過濾某一議
題的時間與繁雜的工作。 
6. 新聞事件產生後，可供每人訂閱，以達到資源共享 
 使用者自訂完成新聞事件後，資料會送給予使用者和系統資料庫，系統資料
庫會將最新之新聞事件或最熱門新聞事件在系統首頁上呈現，其他使用者若
有興趣亦可點看或訂閱。 
4. Mashup Module 
以用戶端混合服務模式的方式，建構一個整合系統本身資料與第三方網路服務的行
四、研究方法 
1. 規劃資訊擷取模組(Information Retrieval Module)，功能可分為三項功能。 
1. 定時擷取 
 
 
 
 
 
 
 
 
 
圖 3、資訊擷取模組架構圖 
系統將會預設每 30 分鐘(可自行修改時間間隔)擷取 RSS URL Database 內所
有 RSS 資料進行剖析與儲存。此功能主要是與比對模組和整合模組配合。 
 
 
 
 
 
 
 
圖 4、定時擷取功能的的資料模型 
 
 
 
 
 
 
 
 
 
 
 
圖 5、定時擷取介面 
3. 文件剖析 
為了判斷資訊提供者是否有發布新的資訊，然後只保留最新的資訊儲存到系
統的 Parsed Information Document Storage(PIDS)。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 8、擷取程序流程 
2. Annotation and Scheduling Module(註解及排程模組) 
Annotation and Scheduling Module 主要可分為註解組件(Annotation Component)、
旅遊排程器（Scheduling Component）和旅遊整合組件(Integration Component)三個元
件，在註解組件中，所負責的工作就是將資訊擷取模組所收集而來的資料加入語意和
註解，在此分為二個部份，第一部份便是人工手動(Manual)加入註解，將一些基本的
資訊或是難以自動化註解工作，透過人工的方式來完成；第二部份則是透過註解函式
(Annotation Function)和本體論(Ontology)詞彙庫去產生自動(Automatic)註解，透過一
些基本簡單的詞彙和語意方式去推論產生註解，如：新聞中有“王建民”的名字，王
建民便是投手中的一個實例，在推論時，便會依照投手類別應有的屬性進行可能的推
 User-Interface Module：使用 Ajax Framework 所建構的使用者操作介面。透過
Ajax Framework 所提供的豐富用戶端網頁所呈現出的使用者介面。 
 POI Module：透過電子地圖服務，輔助系統將資料庫中的 POI 資料展現在使用
者瀏覽器上。 
 Mashup-Image Module：解析網路相簿的圖像 RSS Feeds 至 POI 資訊中，以提
供使用者圖像資訊的瀏覽服務。 
 Mashup-Weather Module：將台灣各縣市之氣象資訊結合到系統中，讓使用者
在查詢 POI 資訊的同時，也能將該地區的氣象資訊提供給使用者。 
 Integrating Module：由一個整合伺服器與資料庫組成，主要工作是提供用戶端
連接第三方網站所需要的 JavaScript 函式庫，以及系統所使用的 Ajax 函式庫。 
模組規劃： 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 9、系統架構圖 
在圖 9 的系統運作概觀圖中，用戶端的一般使用者或行動使用者，使用瀏覽器
對系統發出請求（例如：查詢某城市地圖），系統在收到請求後回應用戶端一個應
用網頁，在該應用網頁中已包含了使用者介面與第三方服務網站提供的JavaScript
函式（Google Maps API），使用者透過瀏覽器在應用頁面中執行動作時，便會觸發
函式呼叫第三方網站（Google Maps）來提供服務。第三方網站在讀入用戶端的請
