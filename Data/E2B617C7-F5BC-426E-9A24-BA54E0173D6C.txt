2 
1. Introduction 
This year project is the last year of a 
three-year project. The framework of this 
multiple year project is shown in Figure 1. 
The first year is to construct the supply chain 
operations reference model for green supply 
chain. We developed a methodology for 
analyzing and designing green supply chain 
operations. In the second year, we evaluate 
the postponement strategy in the product 
manufacturing. Postponement is to move the 
“point of differentiation” for the customized 
product in the manufacturing process closer 
toward the point of purchase. We found out 
the best push/pull boundary for the 
manufacturing process to minimize the 
system-wide cost which includes inventory 
cost, setup cost, and response lead time. In 
this year, we try to find the effect of module 
design to the total cost in the green supply 
chain. 
 
 
Second year 
Third year 
 
First year Green Supply Chain 
Third year 
 
Postponement Strategy 
Production/Sales 
Module Design Common Parts Design
R&D 
Component Material  Waste 
End of Life
Recycle/reuse 
 
Figure 1. The framework of the project 
 
Since 1990, many scholars and 
practitioners have focused on modularization 
such as modular innovation, modular system, 
modular components and modular product 
design, modular product architecture, 
remodularization, modularity, and 
modularization sensitivity (Mikkola, 1999). 
In fact, there is increasing evidence to reduce 
the cost of product development that if 
makers do modularization well, they can 
delegate more product development 
responsibilities to the suppliers (Mikkola, 
2003). 
Porter and van der Linde (1995) 
reasoned in general terms that investments in 
greening can be resource saving, waste 
eliminating and productivity improving. The 
close-loop supply chain includes the 
traditional supply chain and the reverse 
supply chain. When products are recycled or 
taken back vehicles travel back upstream in 
the chain. This backward loop reenters the 
supply chain at a certain level, this could be 
at the dealer level (reutilization of parts) but 
also further upstream in manufacturing 
(remanufacturing) or even the supplier level. 
Modularity is designing a system that is 
divided into a set of functional units (named 
modules) that can be composed into a larger 
application. A module represents a set of 
related concerns. It can include a collection 
of related components, such as features, 
views, or business logic, and pieces of 
infrastructure, such as services for logging or 
authenticating users. Modules are 
independent of one another but can 
communicate with each other in a loosely 
coupled fashion. 
According to Baldwin and Clark (1997) 
modularity is a solution to conceive a 
modular system (that means a product or a 
process of growing complexity). The 
modular system is decomposed in parts 
(called modules or subsystems) that are 
projected and produced separately although 
4 
and assumptions are described in section 2. 
The proposed mathematical model of total 
cost of the modularity design is presented in 
section 3. The cases of two automotive 
modules are presented to illustrate how the 
model can be applied to analyze the impact 
of product modularity on reverse logistics. A 
simulation study and analysis on modules 
return for ELV for the supply chain is 
presented in section 4. The paper concludes 
with discussions and proposals for future 
research in section 5. 
 
2. PROBLEM STATEMENT AND 
ASSUMPTIONS 
2.1 Problem Statement 
As shown in Figure 2, at the point of 
suppliers’ and auto manufacturers’ view, 
material simplification, recyclability and 
modularization are three important 
considerations of green modules. Material 
simplification is to confirm that the 
substances of the adopted materials can be 
recycled, and cannot include the prohibited 
substances of GADSL. Recyclability means 
the possibility of the component reuse or 
material reuse. Modularization means the 
degree of dismantlability whether the vehicle 
can be dismantled easier. On the other hand, 
at the point of the recycle center’s view, 
dismantling is its important consideration of 
green modules. The dismantling degree will 
influence the time, manpower, and recycle 
conditions of green modules. Through the 
auto manufacturer and suppliers considering 
material simplification and modularization, 
the recycling amount of the end-of-life 
vehicles should have been increased. The 
component reuse or material reuse should be 
increased. 
 
Parts Reuse & Waste 
Truck 
Material flow ；    Demand flow ；   Return flow ；   Information flow 
 Green Module Green Car 
z Material Simplification
z Recyclability 
z Modularization
z Component Reuse
z Material Reuse 
z Waste 
Truck
Suppliers
 Overseas
Sea Freight 
(Urgent by Air)
Manufacturer  
Truck 
Consumers 
  
Recycle Center
End-of-Life 
 Domestic
To-be Material Flow
z Material Simplification 
z Recyclability 
z Modularization 
Figure 2. Flows in the automotive green 
supply chain 
 
Srivastava (2007) defined green supply 
chain management as “integrating 
environmental thinking into supply chain 
management, including product design, 
material sourcing and selection, 
manufacturing processes, delivery of the 
final product to the consumers as well as 
end-of-life management of the product after 
its useful life.” Green modules play the main 
parts in the product design. An automotive 
green supply chain pays lots of green 
involvement, including money and 
manpower. It is doubtful whether investing 
heavily in green improvement can get 
appropriate benefits. Thus, how to minimize 
the green design cost and the recycle cost in 
green supply chain for car industry is 
important. This research would analyze the 
trade-off between the green design cost and 
the recycle cost. The proposed method can 
help an auto manufacturer to develop 
appropriate and profitable end-of-life 
strategies for car models. 
Usually, an auto manufacturer and its 
suppliers co-develop green modules at the 
green design stage. These green modules 
contain important green characteristics: the 
weight ratio of recyclable components for 
material simplification, modularization for 
dismantlability, polymeric parts indication, 
the adoption of recycled materials, etc. Thus, 
6 
wi: the weight of a component i αi: residual rate of material recycling of 
component i β: the weight ratio of recyclable 
components δ: interface-constraint factor 
θi: recyclable conditions: θi = 3, for 
component reuse; θi = 2, for material 
reuse; θi = 1, for waste 
 
3.2 The Mathematical Model 
The green design involvement degree 
combines material simplification, 
recyclability with modularization, as shown 
in Figure 3. The auto manufacturer and 
suppliers focus on recyclability, material 
simplification and modularization of green 
modules at the green design phase. Also, the 
substitutability factor of modularization 
influences the dismantling degree. This 
strategy increases the amount of component 
reuse and material reuse at the recycle phase. 
In other words, if suppliers increase the 
usage of the recycled components and 
materials from the recycle stage, we can 
expect that the green design cost will be 
reduced. The total supply chain cost will be 
decreased due to this closed-loop system. In 
this research, the components of the module 
can have two categories: recyclable category 
and unique category. We explain two 
categories by two figures respectively. 
 
 
Green Design Involvement 
z Green Degree 
– Recyclability degree, r 
– Material Simplification: 
Weight ratio of recyclable components,β 
z Modularization Degree (Mikkola, 2003)
– Interface-constraint factor,δ 
– Number of unique components, u 
– Substitutability factor, s 
Recycle Condition 
z Dismantling Degree, s+1 
z Component Reuse, θi = 3 
z Material Reuse, θi = 2 
z Waste, θi = 1 
 
Auto manufacturer & Suppliers 
 
End
of 
Life 
Recycle Center
Figure 3. Framework of module model 
 
3.2.1 Green Degree 
In the green design phase, the module 
must evaluate the weight ratio of recyclable 
component, β, to be compliance with the 
ELV Directive. The module has two kinds of 
components: recyclable and non-recyclable. 
In the end-of-life phase, components may be 
sorted by three conditions: component reuse, 
material reuse, and waste, which are 
independent and exclusive. Eq. (1) represents 
the recyclability degree, b, which affects the 
sensitivity of recyclability associated with 
different recyclable conditions. When b 
approaches 1, the recyclability degree 
represents perfect recyclability. When b 
approaches 0, the recyclability degree 
represents worst recyclability. 
        |
|
M
M
i
i
b |
|
1
3
][∏
==
θ
 (1)
Eq. (2) calculates the weight percentage 
of recyclable components, β, according to 
ISO 22628, which defines road vehicles 
recyclability and recoverability-calculation 
method. 
∑
∑
∈
∈=
Mi
i
MMi
i
w
w
c\β   (2)
For example, in Figure 4, the module 
has three components (|M|=3): two 
recyclable components (C1, C3, |Ma|≤2 or 
|Mb|≤2) and one non-recyclable component 
(C2, |Mc|=1). Then, M1 can be dismantled 
into three recycle conditions: waste, material 
reuse, component reuse. The recycle 
condition of C2 is 1 (θ2 = 1). The recycle 
condition of C1 and C3 would be 2 or 3 
(θ1 = 2 or 3, and θ3 = 2 or 3) depend on the 
end-of-life component conditions. Thus, r 
would be 0.3333, 0.2222, or 0.1481 (b = 
3×3×1/27, 3×2×1/27, or 2×2×1/27). 
8 
involvement in a given product architecture 
is constrained by the green degree and the 
modularization degree. 
( )bsMu eebG - βδ −+= − 1)( ||2 2  (7)
The variable of this model are the 
recyclability degree, b, and the number of 
unique components, u. Besides the variables, 
three important factors are the weight ratio of 
recyclable components, β, the interface 
constraint factor, δ, and the substitutability 
factor, s. 
As shown in eq. (8), when the auto 
manufacturer and suppliers design and 
assemble the green module, they will spend 
the green design cost. The green design cost 
includes in the unit cost of all components 
and the assembly cost. If suppliers adopt 
recycled components or materials, they are 
charged by different unit costs. 
Green Design Cost  
( ) ⎟⎟⎠
⎞
⎜⎜⎝
⎛ +++×
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜
⎝
⎛
−+= ∑∑∑
∈∈∈
−
a
Mi
i
Mi
i
Mi
i
bsM
u
crrcee
bac
-  βδ 1||2
2
(8)
Eq. (9) presents the dismantling cost 
associated with the substitutability factor, s. 
When the modularization degree increases, 
the substitutability factor decreases. The 
dismantling cost will be decreased related of 
the modularization degree. 
Dismantling Cost = ts ×+ )1(  (9)
Eq. (10) presents the recycle revenue 
that is the financial aid of all recyclable 
components from the government. The 
modularization degree can influence the 
possibility of component reuse and material 
reuse of the same components.  
Recycle Revenue 
∑∑
∈
−
∈
− −×
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜
⎝
⎛
−+−=
ba Mi
i
i
m
sM
u
Mi
i
c
sM
u
wReRe )(1 ||2||2
22
δδ (10)
The waste cost is the disposal cost of 
non-recyclable components or the disposal 
cost of residual materials after material 
recycling, as shown in eq. (11). 
Waste Cost = ∑∑
∈∈
+
bc Mi
iii
Mi
ii dwdw α  (11)
The total cost model is the sum of eqs. 
(8)~(11). 
Total Cost = 
( ) ⎟⎟⎠
⎞
⎜⎜⎝
⎛ +++×
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜
⎝
⎛
−+ ∑∑∑
∈∈∈
−
a
Mi
i
Mi
i
Mi
i
bsM
u
crrcee
bac
-  βδ 1||2
2
∑
∈
− −×+++
aMi
i
c
sM
u
Rets δ||2
2
)1(  
∑∑∑
∈∈∈
− ++−×
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜
⎝
⎛
−+
bcb Mi
iii
Mi
ii
Mi
i
i
m
sM
u
dwdwwRe αδ )(1 ||2
2
(12)
In this research, the total cost model 
aims to show the interaction of green design 
and recycle. When green design involvement 
multiplier is changed, it actually will 
influence the total cost of the whole green 
supply chain. When the recycled components 
go back to original suppliers to reuse, the 
price of recycled components will directly be 
reduced. On the other hand, when the auto 
manufacturer improves the modularization 
degree of the same green module, it is to 
influence the dismantling cost at the recycle 
phase. 
 
4. CASE STUDY 
In this section, we analyze three 
modules, the body, the bumper and the front 
seat, by estimating their green design 
involvement. We briefly describe the 
modules by three directions: the weight ratio 
of recyclable components, recyclability, and 
modularization. 
10 
brand new components. 
10. The recycle center owns different 
tech-ability to recycle different materials. 
This recycle condition is based on the 
actual tech-ability of the recycle center. 
 
4.1 The Body 
We can roughly divide an auto body into 
five components: one body frame and four 
doors. According to GBOM, the materials of 
an auto body contains of 90 % steel, and 
other alloy. Among these materials, both steel 
and alloy can be recycled by standard 
treatments. Through recycle technology, the 
recycled materials or components can be 
reused by marketing demand. Figure 6 shows 
the assembly and recycle phases of an auto 
body. We simulate two conditions: the as-is 
assembly and recycle phases (the current 
condition) and the to-be assembly and 
recycle phases (the to-be condition). We 
compare kinds of to-be assembly and recycle 
phases to analyze recyclability based on the 
result of the as-is assembly and recycle 
phases.  
 
Recycle Center
Suppliers & Auto manufacturer 
Green Design Cost & Assembly Cost 
Waste
Recycle Revenue
A body 
Assembly 
Doors 
Body frame 
  Material reuse  
Reuse
Waste Cost
Doors 
Dismantling 
Body frame 
Component
Reuse?
No
Yes
Recycle? 
Component reuse 
As-Is Condition 
To-Be Condition 
No, Residual waste 
Yes 
Yes 
No
Figure 6. Assembly and Recycle Phases of an 
Auto Body 
We calculate the recyclability degree, b, 
based on different recycle conditions. Table 1 
presents the results of different recycle 
conditions. The green design cost, the waste 
cost, the recycle revenue, and the total cost of 
the as-is condition depend on the 
recyclability degree. The dismantling cost 
depends on the modularization degree. Thus, 
the dismantling cost is the same as the same 
number of unique components. After further 
simulating the to-be conditions, we compare 
the to-be results with the as-is results. 
 
4.2 The Bumper 
We can roughly divide an auto bumper 
into three components: one chrome-grille, 
one grille, and one face-bumper, which all 
belong to unique components. According to 
GBOM, the materials of three components 
are 100% ABS, but one of grilles is plated 
chrome. Actually, ABS can be recycled by 
standard treatment. Now, the recycle 
conditions of all components are material 
reuse (the as-is condition) or component 
reuse (the to-be condition). In the future, 
through recycle technology, the recycled 
materials or components can be reused by 
marketing demand. 
Figure 7 shows the assembly and 
recycle phases of an auto bumper. This 
simulation has two conditions: the as-is 
assembly and recycle phases (the current 
condition) and the to-be assembly and 
recycle phases (the future condition). By 
changing recyclability degree, r, we simulate 
future conditions to analyze recyclability, 
material simplification, and modularization 
based on the result of the current condition. 
 
4.2.1 Sensitivity Analysis – The Recycle 
Conditions, θ 
Because ABS can be recycled, the 
weight ratio of recyclable components is 1 (
β=1). Thus, we calculate the substitutability 
factor (s=0.75) and the interface-constraint 
factor (δ=1.33). Table 1 presents results of 
different recycle conditions. θG is the recycle 
12 
Table 2. Results of different recycle conditions for the bumper, u=3 
 
|M| = 3, β =1 
 s =0.75,δ=1.33 
AS-IS TO-BE I TO-BE II TO-BE 
III 
TO-BE 
IV 
TO-BE V TO-BE 
VI 
TO-BE 
VII 
TO-BE 
VIII 
(θCG, θFB, θG ) (2, 2, 2) (2, 2, 2) (3, 2, 2) (2, 3, 2) (2, 2, 3) (3, 2 3) (3, 3,2) (2, 3,3) (3, 3, 3)
Recyclability 0.2963 0.2963 0.4444 0.4444 0.4444 0.6667 0.6667 0.6667 1 
Modularization 0.2231 0.2231 0.2231 0.2231 0.2231 0.2231 0.2231 0.2231 0.2231
Green Deign Cost  
Green Cost 608,960 556,975 765,077 766,462 775,942 1,033,755 1,024,388 1,035,863 1,327,118 
Modularization Cost 529,760 484,274 475,218 476,029 481,933 473,479 469,177 474,351 467,847 
Dismantling Cost 1,601,600 1,601,600 1,601,600 1,601,600 1,601,600 1,601,600 1,601,600 1,601,600 1,601,600 
Component Revenue 0 0 -601 -9,142 -1,187 -1,775 -14,943 -10,450 -11,028 
Material Revenue -49,560 -49,357 -48,841 -40,263 -48,227 -47,770 -39,832 -39,016 -38,525 
Waste Cost 7,753 7,775 7,685 6,298 7,651 7,582 6,268 6,148 6,093 
Total Cost 2,698,513 2,601,267 2,800,138 2,800,983 2,817,712 3,066,871 3,094,244 3,068,496 3,353,105 
 
Dollar
-60
-50
-40
-30
-20
-10
0
AS-IS (2, 2, 2) (3, 2, 2) (2, 3, 2) (2, 2, 3) (3, 2 3) (3, 3,2) (2, 3,3) (3, 3, 3)
Component Revenue Material Revenue
 
Figure 9. Recycle revenues to different 
recycle conditions, u=3 
4.2.2 Sensitivity Analysis - Unique 
Component, u 
Practically, the bumper includes three 
unique components (u=3). Figures 10~12 
explain the relationship between the to-be 
total costs and the recycle conditions. It is 
argued that the total cost will be reduced 
through the reuse increasing of recycled 
components by original suppliers. Figures 
10~12 present the relationship between the 
total cost and the recycle conditions with 
different u. 
 
Dollar (unit: 1,000)
0
500
1,000
1,500
2,000
2,500
3,000
3,500
4,000
AS-IS (2, 2, 2) (3, 2, 2) (2, 3, 2) (2, 2, 3) (3, 2 3) (3, 3,2) (2, 3,3) (3, 3, 3)
Total Cost Green Cost
Modularization Cost Dismantling Cost
 
Figure 10. Total cost to respective recycle 
conditions, u=2 
Dollar (unit: 1,000)
0
500
1,000
1,500
2,000
2,500
3,000
3,500
4,000
AS-IS (2, 2, 2) (2, 3, 2) (2, 2, 3) (3, 2, 2) (3, 2 3) (3, 3,2) (2, 3,3) (3, 3, 3)
Total Cost Green Cost
Modularization Cost Dismantling Cost
 
Figure 11. Total cost to respective recycle 
conditions, u=1 
 
Dollar (unit: 1,000)
0
1,000
2,000
3,000
4,000
5,000
AS-IS (2, 2, 2) (2, 3, 2) (2, 2, 3) (3, 2, 2) (3, 2 3) (3, 3,2) (2, 3,3) (3, 3, 3)
Total  Cost Green Cost
Modularization Cost Dismantling Cost
 
Figure 12. Total cost to respective recycle 
conditions, u=0 
 
4.2.3 Sensitivity Analysis – The Number of 
Components, |M| 
If the auto manufacturer changes its 
bumper design to combine two components, 
grille and chrome-grille, into one component, 
the number of components (|M|) and the 
unique components (u) will be changed. The 
simulation result is presented in Table 3. 
Among these transitions, (2, 2), (2, 3), or (3, 
2) can achieve lower cost. Therefore, before 
reaching the ideal to-be recycle condition, (2, 
14 
the same because of depending on the weight of end-of-life vehicles without any wastage. 
 
Table 4. Simulation results to respective recycle conditions for front seats 
 
(θCushion,,θSeat Frame,, unique) (1, 2, 2) (1, 2, 2) (1, 3, 2) (1, 2, 1) (1, 3, 1) (1, 2, 0) (1, 3, 0)
Recyclability 0.2222 0.2222 0.3333 0.2222 0.3333 0.2222 0.3333 
Modularization 0.3679  0.3679 0.3679 0.6065 0.6065 1.0000  1.0000 
Green Deign Cost               
Green Cost 1,256,640 991,182 1,040,500 991,182 939,282  991,182  770,851 
Modularization Cost 1,378,960 1,088,011 944,729 1,793,106 1,406,027 2,957,700 1,902,900 
Dismantling Cost 3,933,600 3,933,600 3,933,600 2,949,760 2,949,760 1,966,800 1,966,800 
Seat Frame Recycle Revenue               
SF Material Revenue -52,800  -52,800 -33,330 -52,800 -20,818  -52,800    
SF Component Revenue     -19,470   -31,982    -52,800 
Cushion Waste 2,640  2,640 2,640 2,640 2,640  2,640  2,640 
Total Cost 6,519,040 5,962,633 5,868,669 5,683,888 5,244,909 5,865,522 4,590,391 
 
5. CONCLUSION 
In this research, our mathematical 
model is based on the green design 
involvement degree which combines these 
three factors. The green design involvement 
degree will decrease gradually with material 
reuse or component reuse increasing. When 
the auto manufacturer adopts more unique 
components, the green design involvement 
degree will be decreased. When the weight 
ratio of recyclable components increases, the 
green design involvement will increase. 
From the case study, an auto body, we 
can identify the influence of the green design 
involvement degree to total cost of the auto 
supply chain. We can know that the total cost 
of the auto supply chain will be decreased 
with respective recycle conditions.  
In the future, we can collect more auto 
modules to verify our mathematical model. 
One interesting extension of our model is to 
measure the total cost of green supply chain 
with adding the time factor. On the other 
hand, we can further replace modularization 
with easy-dismantling design. 
 
REFERENCES 
1. Baldwin, C. Y. and Clark, K. B. (1997) 
Managing in an age of modularity, 
Harvard Business Review, September/ 
October, 84-93. 
2. Edwards, C.J., Bhamra, T. and 
Rahimifard, S. (2006) A design 
framework for end-of-life vehicle 
recovery, Proceedings of the 13th CIRP 
International Conference on Life Cycle 
Engineering, Leuven, Belgium, 
365-370. 
3. Fisher, M., Ramdas, K. and Ulrich, K. 
(1999) Component sharing in the 
management of product variety: A case 
study of automotive braking systems, 
Management Science, 45, 297-315. 
4. McCutcheon, D. M., Raturi, A. S. and 
Meredith, J. R. (1994) The 
customization-responsiveness squeeze, 
Sloan Management Review, 35, 89-99. 
5. Mikkola, J. H. (2003) Modularity, 
component outsourcing, and inter-firm 
learning, R&D Management, 33, 
439-454. 
6. Mikkola, J. H. and Gassmann, O. 
(2003) Managing modularity of product 
architectures: Toward an integrated 
theory”, IEEE Transactions on 
Engineering Management, 50, 204-218. 
7. Mikkola, J. H. (2005) Modeling the 
effect of product architecture 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                           97 年 12 月 15 日 
報告人姓名  丁慶榮 
 
服務機構
及職稱 
元智大學工業工程與管理學系 
副教授 
     時間 
會議 
     地點 
12/3/2008～12/5/2008 
巴里島 
本會核定
補助文號
NSC 95-2221-E-155-065-MY3 
會議 
名稱 
 (中文)  
 (英文) The 9th Asia Pacific Industrial Engineering & Management Systems 
Conference 
發表 
論文 
題目 
 (中文) 
 (英文) A Tree Search Algorithm for the Manufacturer’s Pallet Loading 
Problem 
 
報告內容應包括下列各項： 
一、參加會議經過 
12/2/2008 
本人於上午十點與系上其他四位教授及十餘位博、碩士生搭乘長榮航空班機飛巴里島，於當
地時間下午三點十分抵達巴里島國際機場，再轉搭由旅行社所安排的巴士到下榻的飯店。 
 
12/3/2008 
早上用餐後，於九點半到達研討會的會場報到及領取研討會相關資料，原預定聽取由大會安
排 University of Texas at Dallas 的 Prof. Suresh Sethi 發表專題演講，但由於 Prof. Sethi 的班機
延誤，演講延至隔日早上八點舉行；於是利用空餘時間與其他與會的國內外專家學者閒聊，
有許多是過去參加研討會舊識的朋友。下午的第一場次就發表本次研討會的第一篇論文，由
於是第一場次，所以在場的與會人士相當多，並於會後與多位學者討論相關的議題。 
 
12/4/2008 
早上用餐後，於八點到達研討會的會場，並聽取昨天原本大會安排的專題演講。接著發表本
次研討會的第二篇論文，雖然是早上的第一場次，但參與的專家學者仍相當多，有幾位在場
人士也提供建議及問題。下午除了聽取與本身研究相關的供應鏈管理及物流管理場次外，也
發表本次的最後一篇論文，發表完後與多位學者討論相關的議題。晚上參加大會在沙灘上舉
行的晚宴，與其他台灣的專家學者一起享用美食及大會所準備的印尼舞蹈，期間與許多人分
享本次的心得。 
 
12/5/2008 
早上九點再到會場聽本所的其他博碩士生發表論文，及供應鏈管理及物流管理場次；下午則
附件三
 
 A Tree Search Algorithm for  
the Manufacturer’s Pallet Loading Problem 
 
Kun Chih Wu†1 and Ching-Jung Ting2
Department of Industrial Engineering and Management, Yuan Ze University, Chung-Li, TAIWAN 
Email: s968907@mail.yzu.edu.tw1  
ietingcj@saturn.yzu.edu.tw 2
 
Abstract. Transportation and warehouse costs are the two major components of the total logistics cost. To 
increase the material handling efficiency both in transit and in the warehouse, pallets have been used widely 
in logistics systems. The manufacturer’s pallet loading problem (MPLP) is to pack identical smaller boxes 
onto a rectangle pallet to maximize the pallet utilization. In this research, we solve the MPLP based on a two-
phase algorithm. In the first phase, the maximum number of items is found by solving a mathematical model. 
In the second phase, a tree search algorithm is proposed to obtain a feasible layout. The tree search algorithm 
is to move sets of boxes that may be in different orientations instead of moving individual boxes during the 
search process. The idea here is to reduce the possible loading combinations and only find a feasible pattern 
for given number of boxes. Different data sets from the literature are tested. The results show that the 
proposed tree search algorithm can find feasible layout efficiently. 
 
Keywords: Pallet Loading Problem, Mathematical Model, Tree Search, Logistics Management  
 
 
1. INTRODUCTION 
 
Pallets have been used widely in the logistic systems 
to increase the material handling efficiency. Optimize 
packing of pallets can reduce the logistics cost both in 
transit and in the warehouse. The Manufacturer’s Pallet 
Loading Problem (MPLP) consists in packing identical 
boxes onto a rectangular pallet and maximizing number of 
boxes without overlapping. MPLP is a particular case of 
general Pallet Loading Problem (PLP). Hodgson (1982) 
mentioned that manufacturers produce large amount of 
identical goods and only identical boxes are considered for 
packing. In practical application, box’s edge is orthogonal 
to the pallet’s edge and vertical orientation is fixed, hence 
multiple layers are considered in this problem. If boxes 
with the same layout are arranged in different layers, the 
problem can be treated as placing identical small rectangles 
(a, b) (i.e. the bottom face of boxes) onto a large rectangle 
(L, W) (i.e. the pallet surface). According to classification 
of Wäscher et al. (2007), this problem belongs to the two-
dimensional, rectangular identical item packing problem 
(IIPP) of Cutting and Packing (C&P) problems. 
MPLP’s optimum of most instances belongs to a 
simple layout pattern that can be solved efficiently by a 
simple heuristic. Most construction heuristics are based on 
dividing a pallet into several blocks. A block is a 
homogeneous pattern which consists of rectangles with the 
same orientation. Steudel (1979) proposed a two-phase 
four-block based heuristic for the MPLP. The dynamic 
programming was adopted for finding maximum perimeter 
utilization in the first phase, and the solution pattern was 
revised in second phase. Scheithauer and Terno (1996) and 
Morabito and Morales (1998) improved four-block to a 
more complex layout pattern by recursive procedures, in 
which each block is divided into more smaller blocks. This 
kind of particular structure of blocks called G4-structure 
which can solve most of the MPLP instances. G and Kang 
(2001) improved the recursive method to solve the large 
scale MPLP. Martins and Dell (2008) proposed several 
heuristics and their G5-heuristic can solve 95% over three 
million instances of equivalent classes. 
Though most instances of MPLP can be solved by 
block based heuristics, few instances’ optima with complex 
layout called superior-order pattern (Pureza and Morabito 
2006) can only be solved by exact solution algorithms. 
Dowsland (1987) transformed the MPLP to a pallet loading 
graph, and solved MPLP by means of finding a maximum 
independent set. Bhattacharya et al. (1998) proposed the 
MBFS algorithm which can solve the MPLP effectively by 
depth-first search method. Lins et al. (2003) presented a L-
shape structure based recursive approach which separates a 
pallet into several L-shape. Martins and Dell (2008) 
proposed a HVZ algorithm for dealing with MPLP, 
however, few equivalent classes needs more than 24 hours 
________________________________________ 
† : Corresponding Author 
1627
 partitions for both the length and the width of the pallet. 
Hence, if we solve one instance of an equivalence class, in 
particular with the lowest dimensions, we have solved all 
the other instances of the class. For this reason, a reduced 
model corresponding to the original model and the problem 
can be resolved without losing the generality. The reduced 
model can be formulated as follow: 
Model I 
Max   
( ) ( ∑∑ −∈−∈ += baaWRj jbabWRi i VHZ     ,,,, ) (3)
Subject to：  
( ) ( )∑ −∩∈ babWRkRi ih aH   ,, ( ) ( ) LbV baaWRkRj jv ≤+ ∑ −∩∈   ,,  ( )babWRk ,,−∈ (4)
0≥iH  ( )babWRi ,,−∈  (5)
0≥jV  ( )baaWRj ,,−∈  (6)
  
The variables and constraints only considered are based 
on the feasible partition (1). In the constraint (4), the ranges 
are modified by the feasible partitions, the Rh and Rv, which 
can be formulated as   
Rh(k)={i|max(1, k-b+1) ≤ i ≤ min(W-b+1, k)} (7)
and 
Rv(k)= {j|max(1, k-a+1) ≤ j ≤ min(W-a+1, k)} (8)
Through the reduction, the instance shown in Figure 1 
can be reduced as 
Max Z = H1 + H3 + H4 + V1 + V3  
Subject to： 
3H1 +   2V1  ≤ 8 
 3H3 +  2V1 + 2V3 ≤ 8 
 3H3 + 3H4 +  2V3 ≤ 8 
H1, H3, H4 ≥ 0 and integer 
V1, V3 ≥ 0 and integer 
Variables and constraints of row 2 is removed, since 
rectangles are placed starting from row 2 would cause 
wasting area between row 1 and row 2. Rectangles placed 
starting from row 2 would be moved to row 1 intuitively, 
and hence the variables and the constraint of row 2 become 
redundant. 
 
2.2 Phase II: A Constraint Programming Model for 
the Layout Pattern 
 
A constraint programming model was proposed by Wu 
and Ting (2007b) for the second phase. This model is 
developed according to Beasley (1985) and offers the 
constraints to avoid overlapping of rectangles. This model 
is shown as follow: 
Model II 
1
),1min(
),1max(
),1min(
),1max(
),1min(
),1max(
),1min(
),1max(
≤+ ∑ ∑∑ ∑ +−
−=
+−
−=
+−
−=
+−
−=
rbL
brp
saW
asq
pq
raL
ari
sbW
bsj
ij VH  
r∈R(L-b, a, b), s∈R(W-b, a, b) 
(9)
j
aL
i
ij HH =∑+−=
1
1
j∈R(W-b, a, b) (10)
q
bL
p
pq VV =∑+−=
1
1
 q∈R(W-a, a, b) (11)
( )1,0∈ijH  i∈R(L-a, a, b), j∈R(W-b, a, b) (12)
( )1,0∈pqV  p∈R(L-b, a, b), q∈R(W-a, a, b) (13)
Constraint (9) restricts that the rectangles could not 
overlap. Constraints (10) and (11) ensure that the solution 
equals to the result obtained in the first phase, in which Hj 
and Vq represent the number of H-rectangles and V-
rectangles obtained in the first phase, respectively. 
 
3. TREE SEARCH FOR PHASE II 
 
In the first phase, we adopt the model proposed by Wu 
and Ting (2007b) to find the optimal number of rectangles. 
In this paper, we propose a tree search algorithm to 
generate a layout pattern for the second phase. Similar to 
model II, the tree search would find a feasible layout 
pattern based on the number of H-rectangles and V-
rectangles starting from each row. 
The fundamental rule for tree search is refer to 
Bhattacharya et al. (1998), who suggested to place all the 
V-rectangles on the left to the H-rectangles. The procedure 
is illustrated by a (8, 5, 3, 2) example as shown in Figure 2. 
 
 
(a) placing rectangles of (V1, H1)=(1, 2) 
 
(b) placing rectangles of (V3, H3)=(1, 1) 
 
row 1
row 2
row 3
row 4
row 5
(c) placing rectangles of (V , H )=(0, 1) 
H H
V
row 1
row 2
row 3
row 4
row 5
H HV
H
V
row 1
row 2
row 3
row 4
row 5
HH
H
H V
V
4 4
Figure 2: The packing procedure based on all the V-
rectangles is left to H-rectangles. 
 
APIEMS 2008 Proceedings of the 9th Asia Pasific Industrial Engineering & Management Systems Conference
Nusa Dua, Bali – INDONESIA  December 3rd – 5th, 2008      
1629
 3.2 Insertion 
 
Since a tree structure can represent a layout pattern, a 
feasible layout can be generated. To construct a complete 
tree structure, the block-nodes starting from each row have 
to be inserted one by one. In the insertion, a block-node is 
inserted below an existing block-node. In the following, we 
use the new-node to denote the inserted block-node and the 
upper-node denote the existing block-node. The pseudo 
code of insertion can be described as follows. 
 
Insert (H, V) 
Selection: 
select a upper-node u from candidates with the priority 
based on H and V 
Creating new-node: 
create a new-node n based on H and V 
Separation: 
If n.width< u.width and n.orientation = u. orientation 
separation(n, u) 
End 
Determine type of n according the n.width and u.width 
Creating switch-node: 
create switch-node for all new-nodes are adjacent 
 
Suppose rectangles starting from row k are inserted, 
and the input is (Hk, Vk). There are four steps required in the 
insertion: 
1. Selection: the first step of the insertion is to select an 
upper-node from candidates. An upper-node must be a 
block-node whose last row must be k-1. The upper-node 
is not necessary to be an external, since the block-nodes 
can have more than one child. If the internal have an 
available space for the rectangles of row k, the internal 
could be an upper-node as well. And then the upper-
block with the same orientation as new-node has higher 
priority to be selected.  
2. Creating a new-node: a new-node must have the number 
of rectangle less than or equal to the upper-node. After 
inserting a new-node, the number of remainder 
rectangles starting at row k has to subtract the number of 
rectangles of the new-node. 
3. Separation: After a new-node is inserted, if the width of 
the new-node is less than the upper-node and the 
orientation of new-node is the same as the upper-node, 
then the separation would be processed. The purpose of 
the separation is to keep the branches of the tree as 
independent as possible, and that can enable the 
branches to be switched simply. Suppose a new-node n 
is inserted into an upper-node u and u have to be 
separated. The first step is to create a new upper-node, 
nR on the right to u. Then the number of rectangles of u 
and the number of rectangles of nR both have to be 
adjusted. The second step is to determine if the parent of 
the upper-nodes should be separated. If the condition is 
satisfied, then separating the parent of upper-nodes. 
Repeat this step until the condition is not satisfied. 
Figures 6(a)-6(d) show the separation operations. 
Because that the second step must run iteratively, the 
complexity of this step is O(d) where d is depth of the 
new-node. 
 
1h 
1h 
2h 
 
(a) Before separation (b) After separation 
 
(c) Before separation of 
more than one parent 
(d) After separation of 
more than one parent. 
3h
1h
7v 
1h 
1h 
1h 
2h 
2h 
7v
3h
3h
1h
Figure 6: Illustration of separation 
 
4. Creating a switch-node: The last step in the insertion is 
to create switch-nodes. A switch-node is a parent of 
block-nodes, where every children are rectangles 
starting from the same row and being adjacent. If the 
separation in step 3 is done, then all the block-nodes that 
are separated must have the same switch-node as parent. 
An example is shown in Figure 6 (d). 
After insertion, there are three possible states of the 
new-node according to the relationship between the new-
node and the upper-node. Figure 7 shows the three states 
and each is defined as follows.  
1. Even: the width of rectangles of the new-node equals to 
the width of the upper-node.  
2. L-shape-top (L-t): the width of the new-node is less than 
the upper-node. An example of L-shape-top is shown as 
Figure 7 (b) that the rectangle at the top has a protrusion 
over the rectangle at the bottom. It means that an 
available space exists under the protrusion.  
3. L-shape-bottom (L-b): the width of the new-node is 
greater than the upper-node. This state indicates that the 
rectangle at the bottom has a protrusion over the 
rectangle at the top shown as Figure 7 (c).This state 
would cause an infeasible layout pattern. 
When L-b state occurs, the switching operation would 
be taken to adjust the infeasible layout. The switching 
 
APIEMS 2008 Proceedings of the 9th Asia Pasific Industrial Engineering & Management Systems Conference
Nusa Dua, Bali – INDONESIA  December 3rd – 5th, 2008      
1631
 the nodes below have another bind-node, then the lower 
bind-node needs to be verified again.  
 
 
(a) Case I (b) Case II 
 
(c) Case III (d) Case IV 
Figure 9: Four cases of the combination of candidates. 
 
For instance, in Figure 10 (a), the processed-node 
needs to be switched to most right of bind-node a. The 
bind-node b should be verified first. Since there are a 
switch-node as the parent of node 2 and the processed-node, 
the processed-node can be switched to the most right of 
bind-node b. Similarly, the bind-node b can be switched to 
the most right of bind-node a. The result of recursion is 
shown as Figure 10 (b). However, the nodes would not be 
moved in the verification, only the relationship of nodes is 
verified. 
Finally, an example shown as Figure 11 illustrates how 
the verification works while Protrusion Conflict occurs. 
After indentation node B is determined, the only candidate 
of switch-node is node a, because that switch-node b 
cannot make T and B be adjacent. In Figure 11, B and T 
have co-switch-node a and it belongs to Case I. The 
objective is to move the branch of B and let B as neighbor 
of T. However, the branch of I belongs to a bind-node and 
in the middle position of bind-node. The verification has to 
confirm T can be switched to the most right or most left of 
the bind-node. In this case, the node T can be switched to 
most right of bind-node, and the branch of B can be moved 
to right-side of the bind-node as well. Then T and B can be 
adjacent. At last, the candidate of switch-node can be 
confirmed after verification. 
 
3. Switching: 
As soon as the candidates of the switch-node are 
selected and verified, the switching operation can be 
processed. Three parts are included in this step:  
a) Releasing: the shape of branches would be changed, that 
is the width of the branches is not even. Hence, after 
switching, this branch cannot move anymore and some 
block-nodes should be released from the switch-node. In 
addition if children of a switch-node become less than 
and equal to one, then the switch-node should be deleted. 
b) Switching: after releasing the relationship of switch-
nodes, the block-node can be switched. The switching 
procedure is similar to the verification, but the 
verification only considers the relationship between each 
node. The actual switching would be done in this step. 
  
T  
 
 
 
B 
e 
  
T   B
a
c 
c) Linking Revision: the switching changes the place of 
block-nodes and affects the parent-child relationship 
between block-nodes. Therefore, the linking between 
block-nodes should be revised according to the place.  
  
T  
 
 
 
B 
c d 
 
 T  
 
 B
b 
d d) Binding: as soon as the L-b and the L-t are switched, the 
block-nodes have to be bound together. Besides binding 
the L-b and the L-t, all the block-nodes have been 
switched need to be bound together. 
 
switch-node
processed-node
   
7  6 
 3 
5
2
4
1
bind-node 
 
b 
a 
(a) before switching to the right 
(b) after switching to the right 
   
4  7 
 1 
6
2
5
3 
a 
b 
Figure 10: Switching the processed node when bind-node 
exists. 
switch-node
6 8 5
B 2 
4
1
7 
3 
bind-node 
T
 
L-b 
L-t T
B
a 
b
Figure 11: Illustration of the verification procedure.  
 
An example of the switching operation is shown as 
Figure 12, the L-b node B and the L-t node T are required 
to be adjacent. In Figure 12 (a), suppose the switch-nodes a 
and b are selected from candidates. The combination of the 
 
APIEMS 2008 Proceedings of the 9th Asia Pasific Industrial Engineering & Management Systems Conference
Nusa Dua, Bali – INDONESIA  December 3rd – 5th, 2008      
1633
 remainder 21 instances from Pureza and Morabito (2006) 
include two sets: the first 10 instances are easier instances 
and the reminder 11 instances belong to superior-order 
pattern are difficult instances. Four layouts of instances 
obtained by the tree search algorithm are shown in Figure 
13. The first layout in Figure 13(a) is a simple instance 
from G and Kang’s (2001) data set. The remainder layout 
of figure 13 (b)-(d) are difficult instances which belong to 
superior-order pattern. 
The computational results are shown in Tables 1 and 2. 
There are three different combinations of approaches 
involved in the results. Two of them are two-phase 
algorithm and both dealing with first phase by solving 
Model I. Then, one of them treat second phase via solving 
Model II and the other one treat second phase via the tree 
search algorithm. The last approach deals with the problem 
by solving Beasley’s (1985) model. 
The results in Tables 1 and 2 show that the 
computational times of tree search perform much better 
than those of Model II. The combination of Model I and 
tree search is better than other approaches. In Table 1, 
comparing computational time in the phase II, tree search 
has smaller computational time in 12 of 17 instances. The 
total computational time of Model I and the tree search is 
more efficiency than Beasley’s Model, 11 of 17 instances 
have smaller computational time. In Table 2, 15 of 21 
instances derived by the tree search have better 
performance than Model II. 14 of 21 instances obtained by 
combination of Model I and tree search have best result. 
Overall, the computational time of Model I shares a large 
percentage of the total run time of the two-phase approach. 
The average computational time also indicates that the tree 
search has better performance than other two approaches.  
 
  
(a) Instance (53, 51, 9, 7) (b) Instance (61, 38, 6, 5) 
 
(c) Instance (93, 46, 13, 4) (d) Instance (108, 65, 10, 7) 
Figure 13: Optimal layouts are obtained by the tree search 
algorithm in the second phase. 
 
Table 1 the computational results in G and Kang (2001) 
 
Time (sec) 
Phase I Phase II No. (L, W, a, b) 
Model I Model II tree search
Model I + 
Model II 
Model I + 
tree search Beasley
D1 (1000, 1000, 205, 159) 0.09 0.30 0.05a 0.39 0.14b 0.36 
D2 (1000, 1000, 200, 150) 0.09 0.24 0.08 0.33 0.17 0.42 
D3 (22, 16, 5, 3) 0.03 0.06 0.03 0.09 0.06 0.08 
D4 (30, 22, 7, 4) 0.02 0.06 0.03 0.08 0.05 0.09 
D5 (46, 34, 11, 6) 0.02 0.05 0.02 0.07 0.04 0.06 
D6 (50, 36, 11, 7) 0.02 0.06 0.06 0.08 0.08 0.06 
D7 (14, 10, 3, 2) 0.02 0.03 0.02 0.05 0.04 0.06 
D8 (53, 51, 9, 7) 0.03 0.17 0.25 0.20 0.28 0.60 
D9 (63, 60, 11, 8) 0.66 0.14 0.20 0.80 0.86 0.92 
D10 (76, 73, 13, 10) 0.05 0.16 0.13 0.21 0.18 0.59 
D11 (86, 82, 15, 11) 0.36 0.17 0.41 0.53 0.77 0.95 
N1 (3750, 3063, 646, 375) 5.36 2.28 0.06 7.64 5.42 10.39 
N2 (40, 33, 7, 4) 0.28 0.11 0.05 0.39 0.33 4.52 
N3 (1200, 800, 176, 135) 0.67 0.73 0.20 1.40 0.87 0.55 
N4 (34, 23, 5, 4) 0.02 0.17 0.11 0.19 0.13 0.50 
N5 (57, 44, 12, 5) 0.17 0.14 0.19 0.31 0.36 0.66 
N6 (87, 47, 7, 6) 0.09 10.53 0.91 10.62 1.00 35.28 
average 0.47 0.91 0.16 1.37 0.63 3.30 
a: best between Model II and tree search 
b: best among three approaches
 
 
APIEMS 2008 Proceedings of the 9th Asia Pasific Industrial Engineering & Management Systems Conference
Nusa Dua, Bali – INDONESIA  December 3rd – 5th, 2008      
1635
