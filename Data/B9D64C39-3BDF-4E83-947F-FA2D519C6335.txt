 2
行政院國家科學委員會專題研究計劃年度報告 
以派屈網路為基礎整合道路資源與號誌控制 
之塑模、分析及其實現(3/3) 
(Modeling, Analysis and Implementation of Integration Shared Road Resources 
with Traffic Control Systems based on Petri nets) 
 
計劃編號：NSC 95－2218-E-606-001 
執行期限：95 年 08 月 01 日至 96 年 07 月 31 日 
主持人：黃義盛 國防大學理工學院電機電子工程系 
E_mail: yshuang@ccit.edu.tw 
研究人員：鍾達翔、顏沛峯、蔡逸峰 國防大學理工學院 
 
一、中文摘要 
本子計劃主要探討道路資源與號誌控制之塑
模、分析及其實現方法。以台北市的交通狀
況而言，如有任一路口的交通號誌秒差不正
常時，此單一事件將會立即影響到附近週圍
的十字路口交通的流暢度，進而導致整體交
通系統的癱瘓。就申請人所瞭解，此問題是
由於局部道路資源(即道路使用面積)過度的
使用而產生，為解決此一問題，本計劃中將
以道路資源為依據，針對道路的資源的利用
率逹到某一程度時，立即對於鄰近的交通號
誌進行節制，因而提高相關的道路資源的有
效利用，進而解決交通堵塞的窘態。本計劃
引進以派屈網路(Petri nets)的技術，針對現有
道路系統的特徵，諸如某一路口發生阻塞所
造成鄰近路口連續發生的互動現象，進行塑
模及分析的研究工作。此外，相對於封閉式
的決策執行架構，本整合型計劃所提出的智
慧型運輸系統，將原專屬各子計劃的資料庫
進行彙整，得到一致性的決策資料庫，以便
架構各子計劃的研究課題。為逹此目標，本
年度內欲涵蓋的研究項目包括： 
(1)針對主要道路十字路口進行塑模、分
析； 
(2)針對該主要道路之鄰近道路十字路口
進行塑模、分析; 
(3) 整合道路信息相關資料庫及道路流量
控制預估器之實現。 
關鍵詞：派屈網路、智慧型運輸系統、號誌
控制。 
Abstract 
Modeling, analysis and implementation of 
shared road resources and traffic control 
systems are proposed in this subproject.  It’s 
well known that abnormal queuing length 
(number of a vehicles that are stopped by red 
signals) and time delay (a vehicle’s time lose 
due to red signals) at any intersection will affect 
the traffic in the neighborhood immediately, and 
further lead to whole traffic paralysis.  To our 
knowledge, such a problem occurs when shared 
road sources (i.e., roads area used) are 
over-utilized.  To solve such a problem, the 
idea of employing Petri nets to intelligent 
transportation system is proposed in this 
subproject. Traffic control systems exhibit a 
high degree of concurrency, and can be 
characterized by shared road resources, resource 
conflicts and the tendency to deadlocks and 
overflows. They also require synchronization, 
scheduling and control to achieve optimal or 
even satisfactory performance.  By using Petri 
nets technology, we can model and analyze any 
problem in a traffic system, such as the chain 
reactions caused by a bottleneck at an 
 4
誌(即是紅、黃、綠燈)，若東西向為紅燈，則
東西向的車輛可以直行、右轉或左轉，反之
南北向亦同。 
 
圖一：具有二相紅綠燈之十字路口 
綜觀目前國內外所發表的文獻可瞭解到，若
以派屈網路為工具來塑模的話，我們可以得
到圖二的結果。該項結果，雖然可以反應出
該路口的交通控制行為模式，然而其缺點正
是其無迴授(Feedback)能力，因為道路的目前
使用率的狀況，系統並能未能顯示出，因而
路口交通容易阻斷而不利行車。本子計劃的
首要目標，將會在系統的模型中納入，允許
車輛在道路使用的最大負荷。以圖二而言，
將會在 P7, P8, P9, P10, P11, P12, P13, P14 中
加入道路資源的條件，據此即可以得到真實
的道路系統模型，而本系統模型即可透過上
述的道路資源的情況進行分析。此外，本子
計劃的重要性，在於其理論是國內外首創針
對交通系統提出死鎖避免的演算法；在實務
上是將道路資源利用交通號誌來節制其使用
率，但願利用該計劃的執行期間，能夠找出
所有道路系統的死鎖因素，進而完成死鎖避
免的演算法，藉以確保都會區道路的順暢。 
P1
P2
P3
P4
P5
P6
P7
P8
P9
P10
P11
P12
P13
P14
 
圖二：具有二相紅綠燈之十字路口之派屈網
路模型 
三、研究方法 
在現有智慧型運輸系統塑模的研究中，對於
所提出以 Petri nets 為塑模方法的文獻中，我
們可以瞭解到，其建模標的皆是針對單一交
通號誌的考量為主，文獻中所討論比較複雜
的範例，只是擴充其交通號誌複雜度而已，
例如將紅燈右轉及綠燈左轉的號誌信號也納
入系統的模型中。然而，本總計劃所提出的
智慧型運輸系統考量的範疇並不是只針對單
一交通號誌而是全面大區域的運輸系統，包
括有高速公路的閘道管制和主要幹線及鄰近
的交通系統。因此傳統的交通號誌的塑模觀
念，並不合乎本計劃的要求。 
據此，本子計劃的目標將提出合乎實際的交
通運輸系統的 Petri nets 模型。申請人所採用
研究方法，是利用塑模彈性製造系統的觀
念，將所有相關的道路視為交通運輸系統的
共享資源之一部份，其中所有道路的使用車
輛即為系統所欲待加工的原物料，而所有的
交通號誌是用來節制道路共享資源的分配任
務，藉以逹到交通運輸系統的流暢(即避免相
互爭奪道路的有限資源，所造成交通系統的
堵塞)，而各種不同的道路使用路徑即可視為
彈性製造系統中各種不同的產製品。 
為有效的找出交通運輸系統正確的派屈網路
模型，申請人藉著過去重事塑模彈性製造系
統諸多的研究經驗中得知，為能順利逹成此
一目標，本子計劃的研究方法應著重在如何
規範道路共享資源的使用率，因此所有的道
路應可視為共享資源的一環。若以彈性製造
系統的觀點而論，該項塑模觀念將毫無疑問
的可以獲得佐證。就申請人所瞭解到，對於
智慧型交通運輸系統的塑模而言，該項塑模
觀念不僅可以簡化塑模過程的難度，而且可
獲得正確交通運輸系統的模型。其詳細研究
方法及原因如下所述： 
由於每條道路的可用面積並不相同(即在同
一時間允許使用的車輛數並不相同)，為能配
合子計劃(三)的影像處理資料庫，因而在塑
模道路共享資源時，本子計劃將以道路尚可
使用的面積的百分比為表示的模式。此模式
表示的優點，不僅可以簡化各道路資源模型
的複雜度，同時亦可統一資料庫的格式，而
且對於整個道路資源的塑模並不失真，依然
 6
區 Vin 代表一輛車正通過十字路口；最後當一
個標記位於站區 Vout 則表示一輛車駛離十字
路口。值得注意的是在站區 Rv和變遷 Mout間
的方向弧表示（Arc Expression）中的 mi (亦即
m1, m2, m3…)將由實際的十字路口測量獲得
而代入。 
接著將討論交通訊號塑模，為了能在十字路
口顯示出各種時相，因此建構一個具有四個
訊號指示燈，甚至五個訊號指示燈的這樣一
種交通號誌燈模型是必須的。又如前所述，
交通訊號燈直接控制了車輛進出十字路口，
因此交通訊號燈的塑模為本單元的研究重
心。由圖四所示之基本交通訊號模型可以分
成四個子模型，它們分別為東、西、南、北
向的交通訊號模型，亦即代表十字路口的四
個交通號誌燈。我們發現一個很有趣的現
象，就是這四個子模型間並未有方向弧來連
結，其主要原因在於時間彩色派屈網路限制
元素的發生須俟系統時間到達，也由於這樣
的一個現象，使得交通訊號模型變的容易判
讀。 
為解釋交通訊號模型，我們以東向交通控制
訊號的子模型為例。在此子模型內有四個被
稱為訊號指示的站區 EGR, EGS, EY, ER 和三
個變遷 T1, T3, T5。當一個標記儲存於站區
EGR (EGS)代表東向的訊號指示 GR (GS)為亮
燈；而站區 EY (ER)含有一個標記則代表東向
的訊號指示 Y (R)為亮燈。在基本交通訊號控
制模型中之 si = {s1, s2}，si為由二位元所組成
的一個數值，第一個位元代表這個交通訊號
控制模型位於市區道路交通網的第幾個路
口，第二個位元則表示該交通號誌燈於該組
交通號誌燈（亦即十字路口的四個交通號誌
燈）之亮燈順序。同時因此數值的存在，將
會有微小的時間加到系統上，通常為千分之
十秒的倍數，實際情況須視十字路口數量，
惟此增加的時間將不會影響燈號延滯，簡言
之，它只是提供系統作為交通訊號燈亮燈的
順序。 
延伸交通控制訊號模型 
建構在基本交通訊號模型上，三種延伸交通
控制訊號模型分別獲得，如圖五、圖六及圖
七所示。類型一（如圖五所示）描述三個綠
燈指示（亦即 GR, GS 和 GL）同時亮燈。在
類型一中,我們在基本交通訊號模型內加入四
個站區 EGL, WGL, NGL 和 SGL，這些站區代
表一組交通號誌燈在四個方向的左轉指示，
通常這樣的交通號誌燈皆放置在車流較小的
道路，另為了達到簡化目的，三個綠燈指示
合而唯一，最後僅以一個綠燈表示。  
類型二（如圖六所示）描述綠燈指示 GR 和
GS 熄燈後，GL 接著才亮燈。在此類型中, 我
們除了加入四個站區EGL, WGL, NGL 和 SGL 
在基本交通訊號模型外，在各子模型內還分
別增加了一個額外的站區（亦即 PL1, PL2, 
PL3 和 PL4）及一個額外的變遷（亦即 TL1, 
TL2, TL3 和 TL4），這些額外的站區和變遷通
常是用來模擬較複雜的交通訊號變換情形。  
類型三（如圖七所示）是我們所一直強調的
一個交通複雜訊號模型，然而它卻很容易的
被時間彩色派屈網路塑模，主要在於我們將
站區 EGR (WGR)與變遷 T7 (T8)連結，結果當
北向（南向）號誌燈的三個綠燈指示亮時，
此時東向（西向）號誌燈 GR 也同時燈亮。而
其真正的關鍵在於我們使用了三個分開的綠
燈指示（亦即 GS, GL 和 GR），藉由這樣的交
通訊號模型，任何複雜的交通訊號變化皆可
求得。於此類型中我們也加入一些站區及變
遷在基本的交通訊號模型，其中站區 NGL 和
SGL 代表訊號指示燈；站區 PR1 和 PR4 代表
右轉車被允許駛入十字路口；另外額外的站
區（亦即 PR2, PR3, PR5 和 PL6）和額外的變
遷（亦即 TR1, TR2, TR3 和 TR4）也是用來模
擬較複雜的交通控制訊號。  
Rv
Vout
Mout
Min Intval
Vin
NGR
NGS
NR
NY
L
T11
T7
T9
L
L
L
EGR
EGS
ER
EY
L
T5
T1
T3
L
L
L
WGR
WGS
WR
WY
L
T6
T2
T4
L
L
L
SGR
SGS
SR
SY
L
T12
T8
T10
L
L
L
1`gn@+(1000τx1+s2)
l@+1000(τx2-3)
l@+3000-s2
l@+1000(τx2-3)
l@+1000τx1+s2
l@+3000-s2
l@+1000τx1+s2
1`gs@+(1000τx1+s2)
l@+1000(τx2-3)
l@+1000(τx2-3)
l@+1000(τx1-3)
l@+1000(τx1-3)l@+1000(τx1-3)
l@+1000(τx1-3)
1`ge@+s1 1`gw@+s1
l@+3000l@+3000
l@+1000τx2 l@+1000τx2
1`(0,ge)++1`(0,gw)++
1`(0,gs)++1`(0,gn)
LI
NL
NL
NL
(n,l) l
l
l
l
(n,l)
(n,l)
(n,l)
l
l
l
l
l
l
l
l
l
l
(n,l)
(n,l)
(n,l)
(n,l)
(n,l)
(n,l)
(n,l)
(l,i)
1`(ge,i1)++
1`(gw,i2)++
1`(gn,i3)++
1`(gs,i4)
(n+1,l)@+
(case i of 
i1=>m1
|i2=>m2
|i3=>m3
|i4=>m4)
EGL
NGL SGL
WGL
l@+1000(τx1-3)
(n,l)
(n,l)
L
l@+1000(τx2-3)
L
(l,i)
L
l@+1000(τx2-3)
l
l@+1000(τx1-3)
L
l
l
l
(1,gw)
(1,ge)
(1,gn)
(1,gs)
 
圖五：類型一延伸交通訊號模型 
 8
T5
NS_G
T6
NS_Y
T7
NS_R
(d,n,t,ct)@+case ct 
of ct1=>τ11-3
|ct2=>τ12-3
...
|ctj=>τ1i-3  
P3
T3
P2
T2
P1
T1
(d,n+1,t,ct)@+case 
ct of ct1=>τ21
|ct2=>τ22
...
|ctj=>τ2i
(d,n,t,ct)@+3
if n> =n1 +1 andalso <=n2 
then (d,n,t2) else empty 
Database
NS traffic lights
P5
T8
T9
EW_G
T10
EW_Y
T11
EW_R
(d,n,t,ct)@+case ct 
of ct1=>τ21-3
|ct2=>τ22-3
...
|ctj=>τ2i-3  
(d,n,t,ct)@+3
CP1 CP2
EW traffic lights
E E
e
e
e
e
T*CT
D*N*T*CT D*N*T*CTD*N*T*CT
D*N*T*CT
T4
P4
if d=ew then (d,n,t,ct) 
else emptyif d=ns then (d,n,t,ct) 
else empty
D*N*T*CT
D*N*T*CT
D*N*T
D*N*T*CT
D*N*T
D*N*T*CT
D*N*T*CT
if n<= n1 then (d,n,t1) 
else empty 
if n> nmax +1 then (d,1,t1) 
else empty 
......
1`(ns,1,t1,ctj)@+0
1`(ew,1,t1,ctj)@+τ1i
1`e@+0
1`(t1,ct2)+
1`(t2,ct1)+
…
+1`(ti,ctj)
*i
Two sub-models:
:signal timing plan model
:signal indication model
 
圖八：交通訊號時間安排系統之 TCPN 模型 
 
交通訊號時間安排模型的功用在於針對每日
不同時程分配不同的訊號循環，亦即該模型
在於評估某時程所適用之訊號循環，因此在
模型中無時間延滯及延遲的考慮。我們必須
計算訊號循環次數，依此判斷是否進入下一
個時程（ti+1），如果為進入下一個時程，則將
給予一個新的訊號循環。標記組合元素的定
義同交通號誌訊號模型，只是其元素組成不
僅只有四個，尚有二個元素（t, ct）及三個元
素（d, n, t）的組成。 
在變遷 T2 及站區 P2 間有數個方向弧表示，
其主要目的在於決定目前時間屬於那一個時
程。ri 表示一訊號循環在一個時程的次數，
因此 ni 可由下列公式獲得 ∑
=
+∈=
n
i
ii Inrn
1
, ，
例如：n2 = r1+r2。 一但訊號循環次數等於 ni，
則目前時程  (ti) 將會進入下一個時程 
(ti+1)，同時目前標記（d, n, ti）將會變成（d, n, 
ti+1）。另外定義一個每日訊號循環最大次數是
必要的，因為系統須判別一天是否結束，然
後 nmax 將重新設定，代表系統又回到初始標
記狀態。 
簡言之，當一個標記由站區 P1 移至站區 P2
時，標記為三個元素（d, n, ti），然而當標
記由站區 P2 移至站區 P3時，標記已變為四
個元素（d, n, ti, cti），cti為由站區 Database
所提供。交通訊號時間安排系統模型是由已
有標記的站區 NS_R, EW_R 和 CP2 開始， 這
三個標記時間戳記分別為 0, τ1i, 0。此時只
有一個限制元素（T1, <d = ns, n = 1, t = 
t1, ct = ct1>）為可激發及已準備，當該限
制元素發生後，則標記將由站區 NS_R 和 CP2 
移至站區 P1，代表位於南北向號誌燈之紅燈
將熄掉，而此時新標記只有三個元素（d = ns, 
n = 1, t = t1），表示一個訊號循環將被評估
後分配，該標記也正進入交通訊號時間安排
的子模型中。由於該子模型無時間延滯及延
遲考慮，因此標記之時間戳記仍為零，因此
將連續發生，直到時間戳記改變為止。接著
限制元素（T2, <d =ns, n = 1, t = t1>）發
生，此時標記將移入站區 P2，注意 ti 在移至
站區 P2時，將評估後給予適當值，此動作在
於顯示系統仍處於目前時程或將進入下一個
時程。 接著限制元素（T3, <d = ns, n = 1, 
t = t1, ct = ct1>）發生，標記將移入至站
區 P3，此時新標記變成四個元素 (d = ns, n 
=1, t = t1, ct = ct1)，其新元素訊號循環
(ctj)乃由站區 Database 所提供。由於元素
之 d = ns，故當限制元素 (T4, <d = ns, n = 
1, ct = t1, ct = ct1>) 發生後，標記將移
至站區 P4，如果 d = ew則標記將會移至站區
P5，之後標記進入向交通號誌訊號的子模型
中。 
4.3 市區道路交通網智慧型交通訊號控制系統
描述 
本市區道路交通網交通訊號控制系統為一個
複雜的系統，該系統將所有可能的重要元素
均已包含，如交叉路口、連接兩交叉路口之
路段、交通號誌訊號及車輛等，並做了以下
的假設： 
• PCUs（車輛單位長）為 4.5 公尺，兩交叉
路口道路長(lL)為 150 公尺。 
• 交通為尖峰時刻，車速均在 10 km/hr 之下。 
 10
圖十二: 禁止進入子模型 
 
本計畫針對所提出模型進行以下三組數據去
測試性能（1）s = s1 = s2 = s3 = 0.6;（2）s = s1 
= s2 = s3 = 0.80;（3）s1 = 0.4, s2 = 0.6, s3 = 
0.8，結果如表一所示。 
 
表一： 狀況一及狀況二道路之車輛容量 
Interval Control model 
 
L1 
 
L2 
Spend 
time PCUs 
Spend 
time PCUs 
s=0.6 
PIC 31221 +53 41222 +53
ROC 38421 -13 48222 -13
PIC 45621 +13 55622 +13
ROC 3@+46821 -3 3@+56822 -3
s=0.8 PIC 41621 +53 51622 +53
ROC 7@+46421 -8 7@+56422 -7
s={0.4+
0.6+0.8
} 
PIC 32621 +53 42022 +53
ROC 40221 -13 49222 -13
PIC 12@47021 +12 56222 +13
    12@57022 -12
“+”: represents the incoming cars;  “-”: represents 
the outgoing cars 
 
五、計畫成果自評 
本子計畫之研究內容與原計畫相符程度極為
相近、並已達成本子計畫預期目標。茲將本
計劃完成的工作項目條列如下： 
z 系統化的將智慧型交通訊號控制系統對
應至彩色派屈網路模型； 
z 提出模組化的彩色派屈網路模型塑模方
法； 
z 以 Occurrence Graphs (OG)驗證系統的定
性問題; 
z 以 Simulation Method 驗證系統的定性問
題。 
z 完成智慧型交通訊號控制系統之彩色派
屈網路模型，該模型俱有判斷交通擁塞 
的能力並能調節交通號誌的變化時間以
維持交通的順暢。 
 
本子計畫研究成果相當適合在學術期刊發
表，其應用價值亦同。本計劃於執行期間在
學術期刊發表相關的計畫成果非常豐碩，計
發表期刊論文 3篇(SCI/EI) 和國際會議論文
4篇學術論文發表情形如下： 
1. Yi-Sheng Huang, “Design of Traffic Light 
Control Systems Using Statecharts,” The 
Computer Journal, vol. 49, no.6, pp. 
634-659, 2006. (EI) (SCI)  
2. Yi-Sheng Huang, Ta-Hsiang Chung and 
Ting-Hui Lin, “Design and Analysis Urban 
Traffic Lights Using Timed Colour Petri 
Nets,” 2006 IEEE International Conference 
on Networking, Sensing and Control. Ft. 
Lauderdale, Florida, USA, April 23-25, pp. 
248-253, 2006. (EI) 
3. Yi-Sheng Huang and Ta-Hsiang Chung, “An 
Urban Traffic Control System Using Timed 
Coloured Petri Nets,” 12th IFAC Triennial 
Symposium on Information Control Problems 
in Manufacturing (INCOM06), Saint-Etienne, 
France, May 17-19, Vol. 3, pp. 333-338, 
2006. 
4. Yi-Sheng Huang and Ta-Hsiang Chung, “A 
Timed Coloured Petri Net Supervisor for 
Urban Traffic Networks,” IMACS 
Multiconference on “Computational 
Engineering in Systems Applications” 
(CESA), Beijing, China, October 4-6, 2006, 
Vol. II, pp. 2151-2156. 
5. Yi-Sheng Huang and Ta-Hsiang Chung, “A 
Simulation-based of Traffic Lights System 
Using Timed Coloured Petri Nets” Submitted 
to International Conference on Natural 
Computation and International Conference 
on Fuzzy Systems and Knowledge Discovery 
(ICNC'06-FSKD'06). 
6. Yi-Sheng Huang and Ta-Hsiang Chung, 
“Modeling and Analysis of Urban Traffic 
Lights Control Systems Using Timed 
CP-nets” Accepted by The Journal of 
 12
Trans. on Vehicular Technology, Vol. 45, pp. 
391-400, 1996. 
[19] J. Wang, C. Jin, Y. Deng, “Performance 
analysis of traffic net works based on 
stochastic timed Petri net models”, IEEE Intl. 
Conf. Engineering of Complex Computer 
Systems, pp.77-85, 1999. 
[20] L. M. Wang and X. L. Xie, “Modular 
modeling using Petri nets,” IEEE Trans. 
Robotics Automat., vol. 12, pp. 800-809, 
1996. 
[21] Shaojun Feng and Choi Look Law, 
“Assisted GPS and its impact on navigation 
in intelligent transportation systems”, The 
IEEE 5th International Conference on 
Intelligent Transportation Systems, pp. 
926 –931, 2002. 
[22] Gerland, H.E., “ ITS Intelligent 
Transportation System: fleet management 
with GPS dead reckoning, advanced 
displays, smartcards, etc”, Vehicle 
Navigation and Information Systems 
Conference, 1993., Proceedings of the 
IEEE-IEE , pp. 606 –611, 1993. 
[23] White, C.C., “Intelligent transportation 
systems: integrating information technology 
and the surface transportation system”, 
IEEE International Conference on SMC, 
Volume 5, pp. 4000 –4003, 1995 
[24]Yilin Zhao, “Mobile phone location 
determination and its impact on intelligent 
transportation systems”, IEEE Transactions 
on Intelligent Transportation Systems, Vol. 1 
Issue: 1, pp. 55 –64, 2000.  
[25] Shenai, K.; McShane, E.; Trivedi, M., 
“Electronics technologies for intelligent 
transportation systems”, IEEE Conference 
on Intelligent Transportation System, pp. 
302 -3079. 1997. 
[26] Overbolt, J.L., Krill, W.K. and Ka Chi 
Cheok, “Determining and controlling 
emergent behavior in intelligent 
transportation systems”,Digital Avionics 
Systems Conference, Proceedings., 17th 
DASC. The AIAA/IEEE/SAE, vol.2, pp. I37/1 
-I37/5, 1998. 
 
In the past decade, finite state machines (FSMs) have been
used for the modeling of discrete event systems because of
their inherent simplicity. Based on FMSs, Ramadge and
Wonham [9, 10] and the work that followed [11] analyze
control problems in the framework of state machines.
However, in other control problems where a large number
of components operate concurrently, the state-machine-
based modeling approach becomes awkward as the resultant
number of states will grow exponentially with the number
of parallel components. This problem of state explosion
constitutes a severe shortcoming of the state-machine
modeling framework [12]. To alleviate the modeling
complexity of the state-machine formalism while preserving
many of its appealing features, a statechart modeling
framework is introduced by Harel [13, 14]. It extends
ordinary state-machines by endowing them with natural
constructs of orthogonality, depth, broadcast synchroniza-
tion and many other sophisticated features that strengthen
its modeling power. In summary, Harel’s statechart is best
described as follows:
Statecharts ¼ FSM + depth + orthogonality + broadcast.
In particular, (i) states are organized in a hierarchy of
superstates and substates thereby achieving depth. (ii) States
are composed in parallel thereby achieving concurrency.
(iii) Transitions are allowed to take place at all levels of
the hierarchical structure, thereby achieving descriptive
economy. Overall, statechart provides insights into causality,
concurrency and synchronization of the modeled systems.
Based on Harel’s statecharts, the related study includes the
following. Brave and Heymann [12] proposed hierarchical
state machines (HSMs), which is a simplified version of
statecharts that extend state-machines by adding only
hierarchy and orthogonality features. HSMs are well suited
for modeling and specification of complex processes such as
manufacturing systems, communication network and air
traffic control systems etc. In modeling analysis, Masiero
et al. [15] proposed an algorithm to create a reachability
tree for statecharts and also showed how to use this tree
to analyze dynamic properties of statecharts. Related to
software implementation of statechart-based systems, Harel
et al. [16] introduced a set of STATEMATE tools, with a
heavy graphical orientation, intended for the specification,
analysis, design and complex reactive systems. In [13] it
is proposed that statecharts can be beneficially used as
a behavioral hardware description language. Although a
traffic-light-controller has been presented using statechart
[13], it just presented a simple traffic light. Coleman et al.
[17] showed us how to use statecharts in object-oriented
design. And Huang et al. [18] submitted a methodology of
elevators control by statecharts. Moreover, Borges et al. [19]
and Sowmya and Ramesh [20, 21] extended statecharts to
deal with reactive systems. Other developments involving
traffic light control method using Petri nets were reported
in [22, 23, 24, 25]. In summary, there are several modeling
tools (i.e. Petri net [22], timed Petri net [24], stochastic timed
Petri net [26], Hybrid Petri net [22] and fuzzy logic [8])
applied in traffic light control domain. From the modeling
point, they are hard to present clearly their phase alter-
nations. Especially, they are hired in an urban traffic lights
system. However, this paper focuses on the use of statecharts
to model an urban traffic lights control system. The
applications of statecharts to eight-phase, six-phase and
two-phase traffic lights are illustrated. The advantage of the
proposed approach is the clear presentation of traffic lights’
behaviors in terms of conditions and events that cause the
phase alternations.
As mentioned above, there is only one type of phase
transition discussed in an urban net [4]. The variation of a
vehicle’s direction in a four-way intersection is always two
phases [25, 26], four phases [26] or even eight phases [4].
Recently, DiFebbraro et al. [22] proposed an urban traffic
controller which includes four-phase and three-phase
transitions. However, they did not address the comparat-
ively complicated movement direction of traffic flow in
intersections. For example, a traffic light has not only red,
yellow and green lights, but also has a left turn arrow on
green, a right turn arrow on green and a straight arrow on
green. As a result, it is possible to have both of a right
turn arrow on green and a red signals turn on in an
eastbound traffic light and also a green signal turns on in
the northbound traffic light. The phase transition of the
preceding example has been considered in our eight-phase
transition. The situation is usually envisioned in urban
traffic lights. In addition, an analysis method of reachability
states is employed in our statecharts models.
The rest of the paper is organized as follows: Section 2
provides a brief description of statecharts. Section 3 presents
an urban traffic network and their phase transitions. Section 4
depicts how to model the traffic light systems using state-
charts. And Section 5 presents the urban traffic network
controller. Conclusions are present in Section 6.
2. THE STATECHART FORMALISM
The statecharts method was introduced as a visual formalism
for specifying the behavior of complex reactive systems [14].
The notion of states constitutes the basic component of
statecharts. States in a statechart can be repeatedly combined
into higher level states (or, alternatively, high-level states can
be refined into lower-level ones) using AND and OR modes of
clustering [13]. As a result, states may be embedded into
superstates thus creating hierarchies of states. Superstates
may be one of two types: AND-state or XOR-state. The
former captures the notion of independence, e.g. image
and sound may be at the same time in a television. The
latter corresponds to refinement of states, e.g. a light bulb
either stays on OFF or ON state. The components of an
Traffic Light Control Systems Using Statecharts 635
The Computer Journal, Vol. 49 No. 6, 2006
The reachability tree can be used to analyze two properties
of a given statechart. The two properties will be informally
described below. A statechart is said to be reachable if a state
configuration Ak is reachable from another state configura-
tion Ai. A statechart is said to be reversible when for each
state configuration Ai reached from the initial configuration
A0, there is a sequence of events that leads back to A0.
3. AN URBAN TRAFFIC NETWORK
3.1. Intersection models
Figure 2 shows an urban traffic network with nine intersec-
tions. In this paper, the nine intersections are divided into
three categories: (i) main road intersection, called A; (ii)
minor road intersection, called B; (iii) tertiary road intersec-
tion, called C. In Figure 2, only one (i.e. A) belongs to the
main road intersection, four intersections (i.e. B) belong to the
minor road intersection, and four intersections (i.e. C) belong
to the tertiary road intersection. Regularly, there are four traf-
fic lights, i.e. northbound, southbound, eastbound and west-
bound traffic lights, placed at each intersection. Here two
types of traffic lights are hired. The first type consists of
five signal lights (i.e. Figure 3a): a red light signal (R), a
yellow (Y), a left turn arrow on green (GL), a right turn
arrow on green (GR) and a straight arrow on green (GS).
There are either eight-phase or six-phase transitions available
from this kind of the traffic light. The second type, as shown
in Figure 3b, consists of three signal lights, i.e. R, Y and a
green signal (G). Only two-phase transitions can be derived
from this simple kind of the traffic light. Considering the
traffic flow, we assume the traffic light has eight-phase
transitions at A. While the traffic lights have six-phase tran-
sitions at B. And the traffic lights have two-phase transitions
at C. It is worthy to notice that there is only one type of
phase transition presented in earlier literatures [13, 21, 26].
However, three types of phase transitions will be discussed
later.
3.2. Phase transition models
Consider the traffic area reported in Figure 1, which consists
of intersection A, B and C. Flows at the intersection A are
assumed to be ruled by an eight-phase traffic light. The
rules of the phases are shown in Figure 4a, which are defined
FIGURE 2. A traffic network with nine intersections.
FIGURE 3. (a) Five-light signal. (b) Three-light signal.
FIGURE 4. (a) The eight-phase transition. (b) The phases’ alter-
nating order.
Traffic Light Control Systems Using Statecharts 637
The Computer Journal, Vol. 49 No. 6, 2006
complexity of the described system grows. The
hierarchical decomposition offered by statecharts
uses a mechanism that condenses information.
(ii) Concurrency descriptions: the ability to describe con-
currency is crucial. Statecharts support a natural way
of describing concurrency at any hierarchical level,
without causing awkward sequential descriptions.
(iii) Timing specifications: statecharts offer local-looking
capabilities for timing specification in states. How-
ever, since such timing constraints can appear in states
on any level and also in any orthogonal component,
this actually admits global timing constraints.
For convenience, the following discussions of the urban
traffic lights control system models are alleviated while the
author abbreviates some of the states’ names as follows:
 TRAFFIC_LIGHT_CONTROLLER_A becomes A;
 TRAFFIC_LIGHT_CONTROLLER_B1–B4 becomes
B1–B4;
 TRAFFIC_LIGHT_CONTROLLER_C1–C4 becomes
C1–C4.
To clarify relations among these substates of statecharts,
we employ the definitions [12] to describe the behavior of
the statecharts. Notice that the definitions are involved in
our hierarchical trees (i.e. such as Figure 7). Here, we
introduce the definitions by a compact way as follows.
S is the finite set of states of H, consisting of S+, the
subset of XOR-states, S?, the subset of AND-states and Sbasic,
the subset of basic states. The hierarchical structure of H’s
states is represented by the binary relation ‘ on S, called
the hierarchy relation and satisfies the following conditions:
(i) There exists a unique state, called the root state of
H and denoted r ¼ (r(H)), such that for no state
a 2 S, a ‘ r.
(ii) For every state a 2 S, a 6¼ r. There exists a unique
state b 2 S such that b ‘ a. The state b is called the
immediate superstate of a, whereas a is an immediate
substate of b.
(iii) A state a 2 S has no immediate substates if and only if
a is a basic.
(iv) If b‘ a then either b 2 S+ ^ a =2 S+ or b 2 S? ^ a 2 S+.
It is clear that the pair (S, ‘) defines a tree called the
hierarchy of H. The transitive closure of ‘ is denoted ‘+.
Thus a ‘+ b means that b is a (not necessarily immediate)
substate of a. For a state a with immediate substates
a1, a2, . . . , ak, we shall sometimes identify a with its set of
immediate substates by writing a ﬃ a1 ·    · ak whenever
a is an AND-state and a ﬃ a1 +    + ak whenever a is an
OR-state. Based on the above definitions, we can construct
any target system’s model accordingly by hierarchical tree
and their mathematical models. In the following paragraphs,
we will show how to construct traffic light control system
models using our hierarchy trees.
4.1. A statechart of the eight-phase traffic light
First, we construct a hierarchical tree diagram as shown in
Figure 7 based on the eight-phase traffic light’s hardware
FIGURE 7. The hierarchical tree diagram of the traffic_light_controller_A.
Traffic Light Control Systems Using Statecharts 639
The Computer Journal, Vol. 49 No. 6, 2006
Besides, all state configurations of this paper are defined and
are listed in Table 1.
In Figure 8, we have five orthogonal sates (e.g. N_A, S_A,
W_A, E_A and TIMER) and we have default entrances. And
we have time bounds on the duration of being in a state (e.g.
precisely 3 s in four of the states in N_A, S_A, W_A and E_A
respectively). Actions can appear along transitions as in
Mealy automata (e.g. a is generated when making the transi-
tion between two states of N_A, triggered by the d event.
Some of similar capabilities of Figure 1 are explained
below. Once T1 reaches 1 s, an event T1_tm triggers and an
action l is taken. The action l causes the initial state con-
figuration changing to (ANGL, ASGL, AWR, AER), called
state A1. In the meantime, the phase A1 is derived. Once T2
reaches 45 s, an event T2_tm triggers and an action d is
taken. The action d immediately forces the state configuration
A1 to change to ((ANGL ^ ANGS ^ ANGR), ASR, AWR,
(AEGR ^ AER)), called state A2. In fact, in this period, the
substate ASGL of S_A is changed to ASR via ASY. It means
that the left turn arrow on green signals for 42 s and then the
yellow light signals 3 s. Although the yellow light (ASY) does
not involve in the phase transitions, the state configuration
exists still. Hence, such state configurations are called
transient states. For another example, a state configuration
(ANGL, ASY, AWR, AER) is also a transient state (i.e. TA1),
since one of the elements of the configuration is with a
yellow light.
It is interesting that the substate T2 of TIMER will generate
periodically an event T2_tm with an action d. Once the next
action d is generated, the state configuration A2 should be
immediately change to ((ANGS ^ ANGR), (ASGS ^ ASGR),
AWR, AER), called state A3. It is worthy to notice that the
action d stimulates another action p simultaneously. The two
actions cause the state A2 to be changed to state A3. Finally, a
state configuration (ANR, (ASR ^ ASGR), AWR, (AEGL ^
AEGS ^ AEGR)), called A8, is obtained via several events
and/or actions. Once the next action d is generated, the
state A8 should be changed to the initial state A0. At this
moment, the substate T2 of TIMER should be brought to
T1 since an event m is triggered by an event be2_tm (i.e.
introduced in Figure 11). Briefly, the initial state will hold
for 1 s. It means the four sets of traffic lights signal red lights
for 1 s simultaneously.
For clarity, a reachability tree of the statechart model is
depicted in Figure 9. Based on the foregoing notation, we
introduce the reachability tree as follows. The reachability
tree includes one initial state A0, eight phase states and six
transient states. First, the initial state A0 should be changed
to A1 when an event l is taken. In the meantime, the new
state should be held for 42 s. Then the state is changed to a
transient state TA1. Till the event d is generated again,
the transient state is changed to A2. And then a new event
d is generated, the state A2 should be passed to the state A3.
The state A3 should be changed to a new transient state
(i.e. (ANY, ASR, AWR, (AER ^ AEGR)) automatically after
42 s. Finally, the state should come back to the initial state
by an action m. It is worthy to mention that the eight phase
states meet the eight-phase transitions. In summary, we can
TABLE 1. The state configurations of the statecharts.
State configuration (N_A, S_A, W_A, E_A) for the intersections A, Bi and Ci (i.e. i ¼ 1, 2, 3, 4)
A0 ¼ (ANR, ASR, AWR, AER) Bi2 ¼ (BNGS ^ BNGR, BSGS ^ BSGR,
BWR, BER)
TA4 ¼ (ANR, ASR, AWGL, AEY)
A1 ¼ (ANGL, ASGL, AWR, AER) Bi3 ¼ (BNR, BSGL ^ BSGS ^ BSGR,
BWR, BER)
TA5 ¼ (ANR, ASR, AWY, AEGS ^ AEGR)
A2 ¼ (ANGL ^ ANGS ^ ANGR, ASR,
AWR, AEGR ^ AER)
Bi4 ¼ (BNR, BSR, BWGL ^ BWGS ^
BWGR, BER)
TA6 ¼ (ANR, ASGR ^ ASR, AWR, AEY)
A3 ¼ (ANGS ^ ANGR, ASGS ^ ASGR,
AWR, AER)
Bi5 ¼ (BNR, BSR, BWGS ^ BWGR,
BEGS ^ BEGR)
TBi1 ¼ (BNY, BSGS ^ BSGR, BWR, BER)
A4 ¼ (ANR, ASGL ^ ASGS ^ ASGR,
AWGR ^ AWR, AER)
Bi6 ¼ (BNR, BSR, BWR, BEGL ^
BEGS ^ BEGR)
TBi2 ¼ (BNR, BSY, BWR, BER)
A5 ¼ (ANR, ASR, AWGL, AEGL) Ci0 ¼ (CNR, CSR, CWR, CER) TBi3 ¼ (BNR, BSR, BWY, BEGS ^ BEGR)
A6 ¼ (ANGL ^ ANR, ASR, AWGL ^
AWGS ^ AWGR, AER)
Ci1 ¼ (CNG, CSG, CWR, CER) TBi4 ¼ (BNR, BSR, BWR, BEY)
A7 ¼ (ANR, ASR, AWGS ^ AWGR,
AEGS ^ AEGR)
Ci2 ¼ (CNR, CSR, CWG, CEG) TCi1 ¼ (CNY, CSY, CWR, CER)
A8 ¼ (ANR, ASGR ^ ASR, AWR,
AEGL ^ AEGS ^ AEGR)
TA1 ¼ (ANGL, ASY, AWR, AER) TCi2 ¼ (CNR, CSR, CWY, CEY)
Bi0 ¼ (BNR, BSR, BWR, BER) TA2 ¼ (ANY, ANGL ^ ANGS ^ ANGR,
AWR, AER)
Bi1 ¼ (BNGL ^ BNGS ^ BNGR, BSR,
BWR, BER)
TA3 ¼ (ANR, ASY, AWGR ^ AWR, AER)
Traffic Light Control Systems Using Statecharts 641
The Computer Journal, Vol. 49 No. 6, 2006
Likewise the foregoing subsection, the statechart
of the traffic light controller (i.e. TRAFFIC_LIGHT_
CONTROLLER_B1) is modeled in Figure 11 using the hier-
archical tree. The statechart consists of four superstates:
N_B1, S_B1, W_B1 and E_B1. They correspond to with
the four-way of the traffic light. It is very important to note
that some of events/actions are related to the statechart A.
According to the preceding discussion, the system should
be passed from the initial state configuration B0 into the
state configuration B6. Figure 12 depicts the more detail
operations of the statechart model in a reachability tree. In
summary, the reachability tree includes: one initial state B0,
six phase states (i.e. B1  B6) and four transient states (i.e.
TB1  TB4). And the six phase states again meet the six-phase
transitions. As a result, the six-phase statechart model is with
reachability and reversibility.
4.3. A statechart of the two-phase traffic light
In this subsection, the author demonstrates the development
of the hierarchical tree and statechart models of a two-phase
traffic light by a compact way. Generally, this kind of traffic
lights is used in a general road. The two-phase traffic light
system’s models are shown in Figures 13 and 14 respectively.
Likewise, a reachability tree of the statechart is also obtained
and shown in Figure 15. The reachability tree includes one
initial state C0, two phase states (i.e. C1  C2) and two tran-
sient states (i.e. TC1  TC2). And also the two phase states
meet the two-phase transitions.
It is worthy to notice that the two-phase traffic light needs
180 s for a set cycle time. On the other hand, the system cycle
of the urban traffic network system needs 360 s. Hence,
the event g or event m can bring the transient state TC1 to
state C1 or state C0 respectively.
5. THE URBAN TRAFFIC NETWORK
CONTROLLER BY STATECHARTS
In this subsection, we attempt to control an urban traffic net-
work which consists of nine intersections. As mentioned
above, the nine intersections are divided into three groups:
main street intersection, minor street intersection and tertiary
street intersection. Obviously, we have to design a different
control system for each traffic light. Nevertheless, it is a
tough work to design a mechanism for coordinating the firing
sequences of the traffic lights as we want.
5.1. Modeling of the urban traffic lights controller
Figure 2 shows the urban traffic network with nine inter-
sections. The traffic network consists of three different
types of intersections. There are one intersection A, four inter-
sections B and four intersections C. Based on the foregoing
discussion, we can construct the associated hierarchical tree
in Figure 16, which serves as overview of the urban traffic
network system. Note that parts of the hierarchical trees have
been presented in the Section 4.
Intuitively, one can realize the relations of the states in
the hierarchical tree as the previous example. The top-level
state of the hierarchical tree is decomposed into 10 states,
which are for the nine traffic lights except the state TIMER.
The root state r ¼ (r(URBAN TRAFFIC CONTROLLER))
with AND is decomposed into 10 states. And the relation of
the root state is described as r ﬃ A · B1 · B2 · B3 · B4 ·
C1 · C2 · C3 · C4 · TIMER. In terms of statechart model-
ing, all of the states are viewed as AND-states. We describe
the AND relation as follows:
{A, B1, B2, B3, B4, C1, C2, C3, C4, TIMER 2 URBAN
TRAFFIC CONTROLLER?}.
Again we can construct the associated statechart model
accordingly by hierarchical tree and their mathematical mod-
els. In the next paragraph, we will show how to construct
the urban traffic network system’s statechart model through
top-down procedure. According to the hierarchical tree (i.e.
Figure 16), the associated statechart can be constructed
and shown in Figure 17 which describes the overview of
the statechart model of the urban traffic network. The system
of the URBAN TRAFFIC CONTROLLER consists of 10 sub-
states. Based on the concept of AND-state, we know these
FIGURE 11. A statechart controller of the six-phase transitions.
Traffic Light Control Systems Using Statecharts 643
The Computer Journal, Vol. 49 No. 6, 2006
the name of the state appears inside their rectilinear box. The
transitions are drawn as splined arrows with the triggers
severing as labels. The triggers of the transitions in this
paper are events/actions to be regarded as instantaneous.
Here, the initial state shows us all the traffic lights are
going red light. In the next subsection, we can check of the
scenarios of the URBAN TRAFFIC CONTROLLER statechart
system by a zoom way.
5.2. Analysis of the urban traffic lights controller
In this subsection, we attempt to analyze the urban traffic
network. Based on the foregoing discussion, we know the
substates of the URBAN TRAFFIC CONTROLLER statechart
system are all orthogonal components. However, it is a
tough work to present all concurrent states together. For
this reason, we propose a new modeling tool, called con-
current state graphs, to model all the concurrent states in
FIGURE 16. The hierarchical tree diagram of the urban traffic system.
FIGURE 17. The urban traffic network controller by statechart.
Traffic Light Control Systems Using Statecharts 645
The Computer Journal, Vol. 49 No. 6, 2006
entrances. According to the foregoing discussion, the system
should be changed from phase state_0 into phase state_1,
once an event l is triggered. Indeed, the system should
come back to the initial state in a system cycle time. We
would like to emphasize all the transient states should be
held active for 3 s. That is the yellow lights go flashing for
3 s. More precisely, phase state_1 should be changed into
transient state_0 after 42 s. And then the transient state_0
should be changed into phase state_2 after 3 s. The physical
meaning is that the phase’s change of traffic lights is needed
via Y lights. Note that the other elements are remaining their
current states in the meantime. For example, A1 ¼ (ANGL,
ASGL, AWR, AER) is changed to TA1 ¼ (ANGL, ASY, AWR,
AER) and then is changed to A2 ¼ (ANGL, ASR, AWR, AER).
As the foregoing discussion, we can conclude that the occur-
rent state graph forms a cycle. It hints that the initial node
is reachable from the other nodes. As a result, the rever-
sibility and reachability properties can be derived from the
method.
5.3. Implementation of the Urban Traffic Lights
Controller
The block diagram of the urban traffic network control system
is shown in Figure 19. In this control system, a number of
sensors (i.e. timers) are used to determine the statuses of the
traffic lights. The primary function of an urban traffic lights
controller, modeled by the statecharts, is to coordinate the
traffic lights of the nine intersections.
We defined the plant of the control system as the part of the
system that is to be controlled. Traffic lights’s statues are
changed by triggering events and/or active actions. As the
control objective, we want the system output, i.e. changes
of the traffic lights, to correspond to the phase transitions.
In this way, each of the operation sequences can be regarded
as a concatenation of operations performed at the traffic light
network system. In terms of statechart modeling, each opera-
tion can be constructed by
(i) a triggered event signifying the ‘event’ of the intended
operation is initiated and followed by
(ii) an active action representing the status of concurrent
transitions being taken.
The traffic lights’ states are changed by the events. It is
interesting to note that an event can be labeled not only
with the trigger that causes it to happen, but also optionally
with an action. If an action is present when the event takes
place, the specified action is carried out instantaneously.
To illustrate how these three components of the control
block work together, let us consider the following example:
First, the traffic lights system stays at an initial state, i.e. all
the R signals turn on in the initial states. When T1 reaches 1 s,
an event T1_tm triggers and an action l would take place
concurrently. Figure 20 helps us understand the operation
of the events and actions.
In this example, we use three elements (i.e. (ANR, BNR,
CWR)) to represent the part of the initial configuration. Once
an action l is generated, the action should be broadcasted
to the other orthogonal components. Hence, the action l
causes the initial state configuration (ANR, BNR, CWR)
changed to (ANGL, BNGL ^ BNGS ^ BNGR, CWR). In the
meantime, all the statuses of the traffic network are shown in
Figure 21a. Next, when T2 reaches 45 s, an event T2_tm
triggers and an action d would take place concurrently.
In the same time, an action a is also generated (i.e. d/a).
Both actions d and a are broadcasted to the other orthogonal
components concurrently. Hence, the action d causes the
state configuration (ANGL, BNGL ^ BNGS ^ BNGR, CWR)
changed to (ANGL ^ ANGS ^ ANGR, BNGL ^ BNGS ^
BNGR, CWR) and the action a causes the state configuration
(ANGL, BNGL ^ BNGS ^ BNGR, CWR) changed to (ANGL,
BNGS ^ BNGR, CWR). Because both state transitions are
changed in the same time, the final state configuration will
become (ANGL ^ ANGS ^ ANGR, BNGS ^ BNGR, CWR)
after d/a triggering. In the meantime, all statuses of the traffic
network are shown in Figure 21b. This is all the control
sequence of this example. In order to design and implement
the traffic network control system, the object-orient program-
ming technique is used. The demonstration program is written
with Visual Basic 6.0 taking about 350 Kbytes, whose opera-
tion flow is modeled by statecharts. The nine pictures in
Figure 21 are the phase transitions of the traffic lights for
the nine intersections in Figure 2 respectively. Figure 21
also shows two phase transitions’ statuses of the traffic lights
of the urban traffic network.
FIGURE 19. The block diagram of the urban traffic network control system.
Traffic Light Control Systems Using Statecharts 647
The Computer Journal, Vol. 49 No. 6, 2006
ACKNOWLEDGEMENTS
This work was supported in part by the National
Science Council of Taiwan, ROC, under Grant NSC93-
2218-E-014-002.
REFERENCES
[1] Lee, J. H. and Lee-Kwang, H. (1999) Distributed and coopera-
tive fuzzy controllers for traffic intersection group. IEEE
Trans. Syst. Man Cybern., 29, 263–271.
[2] Robertson, D. I. and Bretherton, R. D. (1991) Optimizing net-
works of traffic signals in real time-the SCOOT method. IEEE
Trans. Veh. Technol., 40, 11–15.
[3] Figureiredo, L., Jesus, I., Machado, J. A. T., Ferreira, J. R. and
Martins de Carvalho, J. L. (2001) Towards the development of
intelligent transportation systems. In Proc. IEEE Intelligent
Transportation Systems, Oakland, CA, August 25–29,
pp. 1206–1211, IEEE, Piscataway, New Jersey.
[4] List, G. F. and Cetin, M. (2004) Modeling traffic signal control
using Petri nets. IEEE Trans. Intell. Transport. Syst., 5,
177–187.
[5] Dinopoulou, V., Diakaki, C. and Papageorgiou, M. (2002)
Simulation investigations of the traffic-responsive urban
control strategy TUC. In Proc. IEEE Intelligent Transportation
Systems, Dearborn, MI, October 1–3, pp. 458–463. IEEE,
Piscataway, New Jersey.
[6] Abu-Lebdeh, G. and Benekohal, R. F. (2000) Genetic algo-
rithms for traffic signal control and queue management of
oversaturated two-way arterials. J. Transport. Res. Board,
1727, 61–67.
[7] Chin, D. C., Spall, J. C. and Smith, R. H. (1999) Evaluation of
system-wide traffic signal control using stochastic optimization
and neural networks. In Proc. ACC 99, San Diego, CA, June
2–4, pp. 2188–2194. IEEE, Piscataway, New Jersey.
[8] Lin, Q., Kwan, B. W. and Tung, L. J. (1997) Traffic signal
control using fuzzy logic. In Proc. IEEE Systems, Man and
Cybernetics, Orlando, FL, October 12–15, pp. 1644–1649.
IEEE, Piscataway, New Jersey.
[9] Ramadge, P. J. and Wonham, W. M. (1987) Supervisory
control of a class of discrete event processes. SIAM J. Contr.
Optimiz., 25, 206–230.
[10] Ramadge, P. J. and Wonham, W. M. (1987) On the supremal
controllable sublanguage of a given language. SIAM J. Contr.
Optimiz., 25, 637–659.
[11] Ramadge, P. J. (1989) Some tractable supervisor control prob-
lems for discrete event systems modeled by Buchi automata.
IEEE Trans. Automat. Contr., 34, 10–19.
[12] Brave, Y. and Heymann, M. (1993) Control of discrete event
systems modeled as hierarchical state machines. IEEE Trans.
Automat. Contr., 38, 1803–1819.
[13] Drusinsky, D. and Harel, D. (1989) Using statecharts for hard-
ware description and synthesis. IEEE Trans. Comput.-Aided
Des., 8, 798–807.
[14] Harel, D. (1987) Statecharts: a visual formalism for complex
system. Sci. Comput. Program., 8, 231–274.
[15] Masiero, P. C., Maldonado, J. C. and Boaventura, I. G. (1994)
A reachability tree for statecharts and analysis of some
properties. Inform. Softw. Technol., 36, 615–624.
[16] Harel, D., Lachover, H., Naamad, A., Pnueli, A., Politi, M.,
Sherman, R., Shtull-Trauring, A. and Trakhtenbrot, M.
(1990) STATEMATE: a working environment for the develop-
ment of complex reactive systems. IEEE Trans. Softw. Eng.,
16, 403–414.
[17] Coleman, D., Hayes, F. and Bear, S. (1992) Introducing
objectcharts or how to use statecharts in object-oriented design.
IEEE Trans. Softw. Eng., 18, 9–18.
[18] Huang, Y. S., Chung, S. L. and Jeng, M. D. (2004) Modeling
and control of elevators by statecharts. Asian J. Contr., 6,
242–352.
[19] Borges, P. F., Masiero, P. C. and Ferreira de Oliveira, M. C.
(1999) Hypercharts: extended statecharts to support
hypermedia specification. IEEE Trans. Softw. Eng., 25,
33–49.
[20] Sowmya, A. and Ramesh, S. (1998) Extending statecharts with
temporal logic. IEEE Trans. Softw. Eng., 24, 216–231.
[21] Tzes, A., Kim, S. and McShane, W. R. (1996) Application of
Petri networks to transportation network modeling. IEEE
Trans. Veh. Technol., 45, 391–400.
[22] DiFebbraro, A., Giglio, D. and Sacco, N. (2004) Urban traffic
control structure based on hybrid Petri nets. IEEE Trans. Intell.
Transport. Syst., 5, 224–237.
[23] Lin, L., Nan, T., Xiangyang, M. and Fubing, S. (2003)
Implementation of traffic lights control based on Petri nets.
In Proc. IEEE Intelligent Transportation Systems, Shanghai,
China, October 12–15, pp. 1087–1090. IEEE, Piscataway,
New Jersey.
[24] Wang, H., List, G. F. and DiCesare, F. (1993) Modeling and
evaluation of traffic signal control using timed Petri nets. In
Proc. IEEE Systems, Man and Cybernetics, Le Touquet,
France, October 17–20, pp. 180–185. IEEE, Piscataway, New
Jersey.
[25] Tolba, C., Thomas, P., ElMoudni, A. and Lefebvre, D. (2003)
Performances evaluation of the traffic control in a single cross-
road by Petri nets. In Proc. IEEE Emerging Technologies and
Factory Automation, Lisbon, Portugal, September 16–19,
pp. 157–160. IEEE, Piscataway, New Jersey.
[26] Wang, J., Jin, C. and Deng, Y. (1999) Performance analysis of
traffic networks based on stochastic timed Petri net models. In
Proc. IEEE Engineering of Complex Computer Systems, Las
Vegas, NE, October 18–21, pp. 77–85. IEEE, Piscataway,
New Jersey.
Traffic Light Control Systems Using Statecharts 649
The Computer Journal, Vol. 49 No. 6, 2006
JOURNAL OF INFORMATION SCIENCE AND ENGINEERING  
1 
Modeling and Analysis of Urban Traffic Lights Control 
Systems Using Timed CP-nets ∗ 
 
YI-SHENG HUANG 1 and TA-HSIANG CHUNG2 
1Department of Electrical and Electronic Engineering, Chung Cheng Institute of Technology, 
National Defense University, Taoyuan 335, Taiwan, R.O.C.  
2School of Defense Science, Chung Cheng Institute of Technology,  
National Defense University, Taoyuan 335, Taiwan, R.O.C.  
 
Petri nets have been utilized as a visual formalism for the modeling of complex sys-
tem.  It illuminates the features on describing properties of causality, concurrency and 
synchronization.  This paper focuses on the use of Timed Coloured Petri nets (Timed 
CP-nets) to model a basic traffic control system.  A module of basic traffic control sys-
tem of Timed CP-nets model is successfully constructed.  The advantage of the pro-
posed approach is that any complicated traffic signal models will be easily obtained 
based on the module.  Moreover, a real-world supervisor of the urban traffic light sys-
tem, which consists of three intersections with multiple phases, is implemented by the 
new methodology.  The analysis method of place invariant is verified.  And the Oc-
currence Graphs (OG) is performed to demonstrate how the model enforces the signal 
lights’ transitions.  To our knowledge, this is the first work that proposes the new mod-
eling methodology to design the traffic light control systems by Timed CP-nets. 
 
Keywords: timed coloured Petri nets, traffic signal, phase transition, intelligent transpor-
tation system, and traffic control. 
1. INTRODUCTION 
With the growing number of vehicles, the traffic congestion and transportation de-
lay on urban arterials are increasing worldwide; hence it is imperative to improve the 
safety and efficiency of transportation.  Subsequently, several research teams focus 
their attention on the area of Intelligent Transportation System (ITS) [1-2].  In addition, 
they applied advanced communication, information, and electronics technology to solve 
transportation problems such as traffic congestion, safety, transportation efficiency [3].  
It is an important issue in traffic light control systems for two main reasons: 1) the traffic 
light control systems exhibit a high degree of concurrency 2) the systems might make the 
shared resources (i.e., intersection area) conflict and cause a tendency to deadlock and 
overload.  The control measures and strategies that utilize traffic-light controls are clas-
                                                 
∗ Received Nov. 6, 2006; revised Mar. 2; accepted Apr. 14, 2007.  
Communicated by Yi-Sheng Huang.(yshuang@ccit.edu.tw) 
* This paper was partially supported by NCS Grand NSC 94-2218-E-014-001. 
* This earlier version of this paper was presented at 2004 IEEE International Conference on System, Man and 
Cybernetics, Hawaii, October 10-12, 2005. 
 
MODELING AND ANALYSIS OF URBAN TRAFFIC LIGHTS CONTROL SYSTEMS USING TIMED CP-NETS 
 
3
 
2. THE BASIC DEFINATIONS OF TIMED CP-NETS 
In this section, we first introduce the definitions of Timed CP-nets.  The defini-
tions of the later are useful in establishing a Timed CP-nets model for a traffic signal 
control logical.  The definitions of Timed CP-nets are going to be presented here in a 
compact way.  In this paper, the author follows the original definitions of Timed 
CP-nets by Jensen [15-16]. 
Definition: A timed non-hierarchical CP-nets is a tuple TCPN = (CPN, R, r0) such that: 
1.  CPN = (Σ, P, T, A, N, C, G, E, I) satisfying the requirements below: 
(1) Σ is a finite set of non empty types, called colour sets. 
(2) P is a finite set of places. 
(3) T is a finite set of transitions. 
(4) A is a finite set of arcs such that: P ∩ T = P ∩ A = T ∩ A = Ø.   
(5) N is a node function.  It is defined from A into P×T ∪ T×P. 
(6) C is a colour function.  It is defined from P into Σ. 
(7) G is a guard function.  It is defined from T into expressions.  
(8) E is an arc expression function.  It is defined from A into expressions. 
(9) I is an initialization function.  It is defined from P into closed expressions that 
an expression is without variables. 
2.  R is a set of time values, also called time stamps. It is closed under＋and including 
0. 
3.  r0 is an element of R called the start time. 
For convenience, we employ a Timed CP-net model for a traffic light system (i.e., 
Figure 1) as an example to illustrate the related definitions.  In the following, we can 
easily to derive the equations form the Timed CP-net model.  And the equations are 
listed below: 
1. tm1 =1’(1,w)@0+1’(2,s)@0+1’1 
2. tm1[1,w]=0, tm1[2,s]=0   
3. tm1U=1’(1,w) +1’(2,s) +1’1 
4. Σ={INT,DATA,INT×DATA} 
5. P ={R1,Y1,G1,R2,Y2,G2,Ctrl} 
6. T ={T11,T12,T13,T21,T22,T23} 
7. A ={R1toT12,T12toG1,…} 
8. N(a)=(SOURCE,DEST) if a is in the form SOURCE to DEST.  
9. C(p)= ⎩⎨
⎧
×
=
otherwiseDATAINT
CtrlpifINT
                    
}{                                    
                  
10. G(t)=φ. 
11. E(a)=
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
==
==
=+
=+
toCtrlTaifelsethenspif
toCtrlTaifelsethenwpif
toRTaifpn
toRTaifpn
otherwisepn
21    2`1 1`1   
11    1`1 21`   
    221                     30@),(
111                     25@),(
                              ),(
  
MODELING AND ANALYSIS OF URBAN TRAFFIC LIGHTS CONTROL SYSTEMS USING TIMED CP-NETS 
 
5
 
 
Fig. 2. (a) The five signal lights of a traffic light. (b) The phase transition of  
the basic traffic control system.  
Based on the basic traffic light control system, three types of extended system 
which involve a left turn are obtained.  The first one describes that the vehicle turn left 
with the right turn and go straight at the same time.  In other words, the three green 
lights (i.e., GL, GS and GR) are turned on concurrently.  The second one indicates that 
there is only one of the three green lights going on.  It means that vehicles left turn is 
coming after right turn and go-straight.  The third one states a sophisticated traffic light 
control system.  It shows a green light is going on which allows the vehicles going 
straight, turning left and turning right in an intersection.  At this moment, the vehicles 
are allowed to turn right in its perpendicular direction. It is worthy to notice that this sit-
uation of traffic light has not discussed in the pioneer literatures.  However, this situa-
tion of traffic light is considered in this article and is constructed by Timed CP-nets 
model.  For example, an east traffic light GR is turning on.  At the moment, the north 
traffic light G is possibly to turn on.  Usually, the first one has two phases (i.e., shown 
in Fig. 3(a)), the second one has four phases (i.e., shown in Fig. 3(b)), and the last one 
has three phases (i.e., shown in Fig. 3(a)).  For convenience, a schedule of traffic light 
signal (i.e., table 1) is given for discussion of the traffic light control.  Note that the 
others phase duration involve yellow duration except τy2 and τy4.  The yellow duration is 
assumed as 3 seconds.  For insuring traffic safety, all traffic lights are all red in the 
phase transition completed, called short duration phase.  This phase duration is neg-
lected in this paper. 
 
 
Fig. 3. (a) Two phase transitions. (b) Four phase transitions. (c) Three phase transitions. 
Table 1. A signal timing plan. 
phase EW NS X-1 X-2 Y-
1 
Y-
2 
Y-
3 
Y-
4 
Z-
1 
Z-
2 
Z-
3 
Phase 
duration 
τew τns τx1 τx2 τy1 τy2 τy3 τy4 τz1 τz2 τz3 
MODELING AND ANALYSIS OF URBAN TRAFFIC LIGHTS CONTROL SYSTEMS USING TIMED CP-NETS 
 
7
 
between place Rv and transition Mout are measuring from the real intersections (i.e., in-
troduced in 5.3). 
 
 
Fig. 4. The Timed CP-nets model of basic traffic light control system. 
 
4.2. The Traffic Lights of Timed CP-nets Models  
The traffic lights of a generic traffic networks are defined according to a signal 
timing plan.  Especially, a signal timing plan controls vehicle stream (i.e., phase) in an 
intersection of predetermining time.  It is important to construct a precise traffic light 
whose model has four signal lights, even five signal lights in order to display a complex 
phase.  Hence, the model of traffic light is the kernel of the system model in this paper.  
 
4.2.1 The Basic Traffic Light Model 
The signal indication display model (i.e., shown in Fig. 4) could be divided into 
four sub-models.  Those are called north, south, east and west traffic light models.  
MODELING AND ANALYSIS OF URBAN TRAFFIC LIGHTS CONTROL SYSTEMS USING TIMED CP-NETS 
 
9
 
 
Fig. 5. The case I extended traffic light model. 
 
Fig. 6. The case II extended traffic light model. 
MODELING AND ANALYSIS OF URBAN TRAFFIC LIGHTS CONTROL SYSTEMS USING TIMED CP-NETS 
 
11
 
model is to continue discussing.  The enable binding elements (Mout, <n = 1, l = ge>) 
and (Mout, <n = 1, l=gw>) occur because the global time still remain s1.  As a result, the 
tokens are removed to places Vout and Rv.  Notice that the average time of interval ve-
hicles are given by place Intval in terms of incoming car.  The token in place Rv means 
that the next vehicle is ready for entering the intersection.  The tokens in place Vout 
represent vehicles are departure.  Next, these tokens in places Rv and Vout are removed 
to place Vin.  And the occurring sequence will repeat.  The circulations are terminated 
until the green duration is over. 
To go back to the traffic light model, the token should be moved to place EY (WY) 
from place EGL (WGL) and EGS (WGS) when the global time reaches 1000(τew -3)+s1 
(i.e., T3 and T4 firing).  It means the Y signal turns on for 3 seconds.  The token 
should be moved to place ER (WR) from place EY (WY) when the global time reaches 
1000τew +s1 time units.  Likewise, once the global time reaches 1000τew +s2 time units, 
the phases_2 is obtained.  It implies the marking is coming back to the initial marking.  
It is note that the signal variation and phase duration could be directly observed from the 
Timed CP-nets model.  These are also the features of the model. 
5. ANALYSIS OF THE URBAN TRAFFIC CONTROL SYSTEM  
A traffic light control system model must have certain features for proper and save 
operation.  For example, the controller should not lock up (deadlock) due to some un-
expected combination of actions, should not allow conflicting movements to have right 
of way simultaneously, should be able to serve all signal phases and return to some ini-
tial state.  A major strength of Timed CP-nets is the availability of methods for analyz-
ing the properties of the model.  Those properties of Timed CP-nets model reveal 
whether the model is reliable or not. 
There are three methods to analyze a Timed CP-nets model [14]: 1) occurrence 
graphs method; 2) simulation method and 3) invariant method.  In this section the basic 
traffic light control system model is analyzed by the occurrence graphs method and inva-
riant method.  In addition, the extended models proposed in section 4 are validated by 
simulating a real urban control system.   
 
5.1 Occurrence Graphs Method 
The basic idea behind occurrence graphs (OG) is to construct a graph containing a 
node for each reachable marking and an arc for each occurring binding element.  Also, 
it is intuitive in this approach to see that there is no possibility of deadlock in the net-
work. 
The occurrence graph is shown in the Fig.8.  Note that each node represents a 
marking, and the content of the marking is described by the text inscription of the node.  
And each arc represents the occurrence of a binding element, and the content of this 
binding element is described by the text attached to the arc.  For example, the text EGS, 
EGR, WR, SR and NR are used to describe the node N1.  This means that the signals GS 
and GR turn on in the east traffic light.  And the R’s turn on in the west, south and north 
traffic lights.  After a binding element T2 occurs, the marking will be changed to node 
N3.  It is worthy to note that the initial marking (i.e., node N0) shows all the R’s turn on 
MODELING AND ANALYSIS OF URBAN TRAFFIC LIGHTS CONTROL SYSTEMS USING TIMED CP-NETS 
 
13
 
(2) 
This invariant depicts that if the places NR and SR deposit separately a token.  
Then there must be the tokens in the signal indication places of east and west traffic light.  
It means that once a red signal goes on in the NS traffic lights, then G, Y or R turns on in 
the EW traffic lights.  
In the other way, the invariant NGS/NGR + NY + NR = ER/WR and SGS/SGR + SY 
+ SR = WR/ER  asserts that if there are two tokens deposited in separate place ER and 
WR, then there must be the tokens in the signal indication places of north and south traf-
fic light..  It shows that once R is going on in the EW traffic lights, then G, Y or R turns 
on in the NS traffic lights. 
The two equations (1) and (2) show the key invariants in the Timed CP-nets model.  
It proves that the control logic modeled by Timed CP-nets model is accurate and it does 
not allow any accident to happen. 
 
5.3 Simulation Results 
The Timed CP-nets model is implemented and simulated in the CPN tools [16].  In 
this section, the authors show how to calculate the number of vehicles that pass through 
intersections.  This simulation work is done by three real intersections which are lo-
cated at Taipei city in Taiwan (i.e., shown in Fig. 9).  In fact, the traffic is currently 
ruled by a fix time control strategy with a given signal timing plan.  The fixed durations 
of the real traffic light control system are listed in table 2.  For this simulation work, the 
average time of vehicle intervals (i.e., ij) of incoming cars into the intersections are 
needed by the CPN tools.  Therefore, the authors measure the data at the real intersec-
tions.  The data is collected five cycles of the green duration in one day.  Hence, the 
authors approximate the average time of vehicle interval for each cycle and the informa-
tion is shown in table 3.   
For convenience, the authors construct table 4 which is obtained from table 2 and 
table 3.   Table 4 is able to show the number of vehicles passing through the intersec-
tions.  For example, there are four columns in cycle 1 of the phase X-1.  The first/third 
column is the eastbound/westbound vehicle number (i.e., 20/22) which is simulated by 
the case I model. And the model is with average time of vehicle interval (i.e., 2.47/2.14 
seconds).  The second/forth column shows the real measurement data from the same 
intersection (i.e., eastbound/westbound). It is important to point that the simulation re-
sults are almost consistent with the real traffic one.   
 
 
Fig. 9. The three real intersections located in Taipei, Taiwan. 
Table 2. The phase duration of real traffic control system. 
phase X-1 X-2 Y-1 Y-2 Y-3 Y-4 Z-1 Z-2 Z-3 
MODELING AND ANALYSIS OF URBAN TRAFFIC LIGHTS CONTROL SYSTEMS USING TIMED CP-NETS 
 
15
 
(ii) Structural analysis of Timed CP-nets models was performed. 
(iii) The complex phase transition is successful to convert Timed CP-nets models.  
It is helpful to obtain a Timed CP-nets model for a sophisticated urban traffic 
lights system.  
To our knowledge, this is the first work that employs Timed CP-nets to construct 
the models of the urban traffic light systems. 
 
Table 4. Comparison of simulated and real traffic. 
Two-phase intersection   
Phase X-1 Phase X-2   
0
5
10
15
20
25
30
35
40
1 2 3 4 5  0
5
10
15
20
25
30
35
40
45
1 2 3 4 5
  
Three-phase intersection  
Phase Z-1 Phase Z-2 Phase Z-3  
0
10
20
30
40
50
60
1 2 3 4 5  0
10
20
30
40
50
60
70
80
90
1 2 3 4 5
0
10
20
30
40
50
60
70
80
90
1 2 3 4 5
 
Four-phase intersection 
Phase Y-1 Phase Y-2 Phase Y-3 Phase Y-4 
0
10
20
30
40
50
60
70
1 2 3 4 5  0
5
10
15
20
25
30
35
1 2 3 4 5
0
5
10
15
20
25
30
35
40
45
50
1 2 3 4 5
0
5
10
15
20
25
30
1 2 3 4 5  
□ :real data   □ :simulation results 
REFERENCES 
[1] D. I. Robertson and R.D. Bretherton, “Optimizing networks of traffic signals in real 
time-the SCOOT method,” IEEE Trans. Veh. Technol., Vol. 40, 1991, pp. 11-15. 
[2] J. H. Lee and H. Lee-Kwang, “Distributed and cooperative fuzzy controllers for 
traffic intersection group,” IEEE Trans. Systems, Man and Cybernetics, Vol. 29, 
1999, pp. 263-271. 
[3] L. Figureiredo, I. Jesus, J. A. T. Machado, J.R. Ferreira and J. L. Martins de Car-
valho, “Towards the Development of Intelligent Transportation Systems,” Proceed-
ings of IEEE Intelligent Transportation Systems, 2001, pp. 1206 – 1211. 
[4] M. Papageorgiou, C. Diakaki, V. Dinopoulou, A. Kotsialos, Y. Wang, “Review of 
Road Traffic Control Strategies,” Proc. IEEE, 2003, pp. 2043-2067. 
[5] F. Di Cesare, P. Kulp, K. Gile, and G. List, “The application of petri nets to the 
modeling analysis and control of intelligent urban traffic networks” Lecture Notes in 
Computer Science, 1994, pp 2-15.. 
[6] T. Murata, “Petri Nets: Properties, Analysis and Applications,”  Proc. IEEE, 1989, 
pp. 541-580. 
 Design of a Supervisor for Traffic Light Systems 705 
the cycle lengths are predetermined and of fixed duration. The approach via 
programmable logic control (PLC) and Petri nets synthesis is proposed in [5]. Its 
traffic lights contain three color lights, and each lane has a series light whose signal 
will be changed by the regular time intervals. And the model of traffic light is used by 
Petri nets. In [6] a signal timing plan is proposed by timed Petri net (TPN). The 
streams allowed us to proceed with the eight-phase of the signal timing plan. 
Recently, an urban traffic light controller using statecharts is proposed [7] which 
includes eight-phase, six-phase and two-phase.   
As mentioned above, the models of traffic light only have one set of phase 
duration.  But just we know the timing plan of traffic light should take into account a 
given time of day and determine the optimal splits; and optimal cycle time, based on 
the historical constant demands over the considered signalized urban area. It means 
that there should have many sets of phase durations which vary with the traffic flow 
in a day. As a result, the authors propose a new modeling methodology to tackle this 
difficult problem in this paper.   
2   The Description of the Basic Traffic System  
The vehicle movement that goes straight and turns right is usually to see in an 
intersection with two-way roads. Hence, such a system will be introduced in this 
section, is called a basic traffic system in this paper. The green lights are changed 
back and forth between the two directions (NS and EW). There are two phase in the 
basic traffic system. And the two phases consist of phase_NS and phase_EW. Their 
operations are described as follows. In phase_NS, the northbound and southbound 
vehicles are allowed to go straight and turn right. In phase_EW, the westbound and 
eastbound vehicles are allowed to go straight and turn right. Table 1 shows the 
schedule of the traffic light signals. There are a few definitions have to introduce in 
order to obtain TCPN model. The definition of “period cycle” represents one cycle of 
a period. And the definition of “day cycle” states one cycle of a day. As a result, there 
are several periods in a day cycle.  In addition, the phase_NS duration means the 
duration in NS direction of the basic traffic system. Similarly, the phase_EW duration 
represents the duration in EW direction of the basic traffic system. The duration of the 
phase includes both the duration of green and the duration of yellow. A cycle time is 
defined as the summation of the two durations. Note that there are filled with 
numerous repetition of cycle time in a period. For example, a period of a traffic 
system is 60 minutes and the traffic system’s cycle time is 120 seconds. Hence, the 
numbers of repletion are 30. 
Table 1. A schedule of traffic light signals 
Period t1 t2 … ti 
Execution time 0-h1 h1-h2 … hi-1-hi 
Phase_NS duration  τ11 τ12 … τ1i 
Phase_EW duration τ21 τ22 … τ2i 
Cycle time ct1 ct2 … ctj 
 Design of a Supervisor for Traffic Light Systems 707 
for the red durations in NS. And then the red duration in EW is controlled by the token 
of place CP1.  The physical means the red light of the traffic lights in EW is going on 
till the enabled binding element (T8, e) is taken.  Obviously, the red duration of traffic 
lights in EW is the τ1i seconds. It reveals that the vehicle streams only proceed in 
either NS or EW. 
T5
NS_G
T6
NS_Y
T7
NS_R
(d,n,t,ct)@+case ct 
of ct1=>τ11-3
|ct2=>τ12-3
...
|ctj=>τ1i-3  
P3
T3
P2
T2
P1
T1
(d,n+1,t,ct)@+case 
ct of ct1=>τ21
|ct2=>τ22
...
|ctj=>τ2i
(d,n,t,ct)@+3
if n> =n1 +1 andalso <=n2 
then (d,n,t2) else empty 
Database
NS traffic lights
P5
T8
T9
EW_G
T10
EW_Y
T11
EW_R
(d,n,t,ct)@+case ct 
of ct1=>τ21-3
|ct2=>τ22-3
...
|ctj=>τ2i-3  
(d,n,t,ct)@+3
CP1 CP2
EW traffic lights
E E
e
e
e
e
T*CT
D*N*T*CT D*N*T*CTD*N*T*CT
D*N*T*CT
T4
P4
if d=ew then (d,n,t,ct) 
else emptyif d=ns then 
(d,n,t,ct) 
else empty
D*N*T*CT
D*N*T*CT
D*N*T
D*N*T*CT
D*N*T
D*N*T*CT
D*N*T*CT
if n<= n1 then (d,n,t1) 
else empty 
if n> nmax +1 then (d,1,t1) 
else empty 
......
1`(ns,1,t1,ctj)@+0
1`(ew,1,t1,ctj)@+τ1i
1`e@+0
1`(t1,ct2)+
1`(t2,ct1)+
…
+1`(ti,ctj)
*i
Two sub-models:
:signal timing plan model
:signal indication model
  
Fig. 1. A simple traffic light TCPN model 
3.2   The Signal Timing Plan Model  
The sub-model of the signal timing plan model is the kernel of the TCPN model (i.e., 
Fig. 1). It is the model’s duty to assign the cycle times to the different periods. 
Especially, there are no any durations and delay times in the sub-model transition.  
 
 Design of a Supervisor for Traffic Light Systems 709 
Table 2. The phase transition of the intersections 
 Phase1 Phase2 Phase3 Phase4 
I1,I4,I5 
 
 
I2 
 
 
 
I3 
 
 
 
 
Table 3. The schedule of the signal timing plan 
 Period t1 t2 t3 t4 t5 t6 t7 t8 t9 
 Execution 
 time 
00:00-
01:00 
01:00-
05:00 
05:00-
07:00 
07:00-
09:00 
09:00-
13:00 
13:00-
16:30 
16:30-
19:00 
19:00- 
23:00 
23:00- 
24:00 
I1 Phase 1 60 46 60 110 110 110 110 95 60 
 Phase 2 60 44 60 90 90 90 90 85 60 
I2 Phase 1 80 60 80 140 140 140 140 120 80 
 Phase 2 40 30 40 60 60 60 60 60 40 
I3 Phase 1 55 30 55 85 85 85 85 80 55 
Phase 2 10 10 10 15 15 15 15 15 10 
Phase 3 45 40 45 85 85 85 85 70 45  
Phase 4 10 10 10 15 15 15 15 15 10 
I4 Phase 1 60 45 60 100 100 100 100 90 60 
 Phase 2 60 45 60 100 100 100 100 90 60 
I5 Phase 1 90 60 90 160 160 160 160 140 90 
 Phase 2 30 30 30 40 40 40 40 40 30 
The models of the intersection I1, I4 and I5 are the same as basic traffic system’s 
model. Hence, the module of basic traffic system could be applied directly to this type 
intersection. Form the schedule of the signal timing plan, there are four types of cycle 
time are given. For fitting the basic models, the notations ct1 = 90, ct2 = 120, ct3 = 180 
and ct4 = 200 are assigned. And then the values of ri and ni have to be determined.  
Because the type intersections have the same cycle time in the same period, the values 
of ri and ni should be the same. In this group, an example I1 is used to illustrate how to 
obtain the values ri and ni. Table 3 shows the execution time and the cycle time for 
every period of the intersection I1. From the table, the numbers of the repetition (i.e., 
ri) is easily to count. For example, the numbers of the repetition of r1 is 30 for the 
period t1 in the intersection I1.  As a result, all the numbers of the repetition (i.e., ri) 
are obtained and are shown in table 4.  Based on table 4, a formula is formed by the 
values ni (i.e., given in table 4). The formula is given as ∑
=
==
n
i
nirin 1
9, . For example, 
n2 = r1 + r2 = 30 + 160 = 190. It is worthy to notice that the values of ni in table 4 can 
be applied to intersections I2 and I3. In fact, the cycle times are the same between with 
the intersections I1, I2 and I3. 
 Design of a Supervisor for Traffic Light Systems 711 
execution time in each period. In order to design and implement the traffic light 
control system, the object-orient programming technique is used.  The demonstration 
program is written with Visual Basic 6.0 taking about 1.63 M bytes, whose operation 
flow is modeled by TCPN. Fig. 4 shows a snapshot of the urban traffic light system.  
In summary, the simulation results are the same as the predetermining time (i.e.,  
table 3). And the cycle time of each period is consistent with table 3.   
5   Conclusion 
This article presents the modeling, analysis and implementation of an urban traffic 
lights system using TCPN models.  The advantage of the proposed approach is the 
clear presentation of the system behavior and readiness for implementation.  To 
summarize, this paper has the following contributions: 1) This paper has been 
demonstrated how to use TCPN to model the traffic lights for the urban traffic lights. 
And then the applications of TCPN to urban traffic lights have been realized. 2) The 
schedule of the signal timing plan of the traffic system has been converted into TCPN 
models.  The examples are helpful us to obtain a TCPN model for a complex urban 
traffic lights system. 3) A module of basic traffic system of TCPN model has been 
constructed in this paper. The intended advantage of the proposed module is that 
designers can extend the module to meet complex traffic light systems. 
The authors believe that our research using TCPN to model traffic light systems 
will become more important in this field due to the increasing demands in many 
features of the traffic light systems.   
 
Acknowledgements. This work was supported by the National Science Council of 
Taiwan, R.O.C. under Grant NSC 94-2218-E-014-001. 
References 
1. Lei, J., Ozguner, U.: Decentralized Hybrid intersection control. In: proc. 40th IEEE Int. 
Conf. Decision and Control, vol. 2, pp. 1237–1242. IEEE Computer Society Press, Los 
Alamitos (2001) 
2. Murata, T.: Petri Nets: Properties, Analysis and Applications. Proc. IEEE 77, 541–580 
(1989) 
3. Peterson, J.L.: Petri net theory and the modeling of systems. Prentice-Hall, Englewood 
Cliffs (1981) 
4. Wang, H., List, G.F., DiCesare, F.: Modeling and evaluation of traffic signal control using 
timed Petri nets. Proc. Systems, Man and Cybernetics 2, 180–185 (1993) 
5. Li, L., Tang, N., Mu, X., Shi, F.: Implementation of Traffic Lights Control Based on Petri 
Nets. Proc. IEEE Intelligent Transportation Systems 2, 1087–1090 (2003) 
6. Dotoli, M., Fanti, M.P., Lacobellis, G.: Validation of an Urban Traffic Network Model 
using Colored Timed Petri nets. In: IEEE Int. Conf. on. Systems, Man and Cybernetics, vol. 
2, pp. 1347–1352 (2005) 
7. Huang, Y.S.: Design of Traffic Light Control System Using Statecharts. Computer 
Journal 49, 634–649 (2006) 
8. Jensen, K.: Coloured Petri Nets, vol. 1. Springer, New York (1995) 
9. Jensen, K.: Coloured Petri Nets, vol. 2. Springer, New York (1997) 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC95-2218-E-606-001 
計畫名稱 以派屈網路為基礎整合道路資源與號誌控制之塑模、分析及其實現實(3/3)
出國人員姓名 
服務機關及職稱 
黃義盛 國防大學理工學院電機電子系教授 
會議時間地點 October 4 - 6, 2006   Beijing, China     
會議名稱 2006 IMACS Multiconference on Computational Engineering in Systems Applications (CESA 2006) 
發表論文題目 
Yi-Sheng Huang and Ta-Hsiang Chung, “A Timed Coloured Petri Net 
Supervisor for Urban Traffic Networks,” IMACS Multiconference on 
“Computational Engineering in Systems Applications” (CESA), Beijing, China, 
October 4-6, 2006, Vol. II, pp. 2151-2156. 
 
一、參加會議經過 
 
民國 95年 10月 4日至 10月 6日，參加由 IMACS和國際電機電子學會暨 SMC協會，所共
同舉辦之 2006 IMACS 會議，會議地點位於大陸北京清華大學舉行。 
 
10 月 4 日 14:30，本人發表論文題目為「Design of Deadlock Prevention Supervisors Using 
Elementary Siphons」，於 10月 5日上午 10:40發表另一篇論文題目為「A Timed Coloured Petri 
Net Supervisor for Urban Traffic Networks」；和與會者有熱烈討論。此外，大會在會議期間安
排了共 5場大會演講。總計此大會共有 4個 Perri nets & Discrete Event Systems應用主題的討
論會，約 30多篇相當論文發表而大會所發表的論文計有 600餘篇，主題的廣泛與熱烈之討論，
令人印象深刻。大會主席安排完整而緊湊的議程，令人有不虛此行的感覺。民國 10月 9日返
回台灣。 
 
二、與會心得 
 
大會在此次會議的組織與議程上下了相當多的功夫，舉辦得非常成功。由於場地在清華大學
的 FIT Building 裡的一般的教室，因此無論是光線或隔音均不理想。另外，與會期間適逢大
陸十一黃金週，所到之處皆是人擠人的情景。 
與會的空檔，參觀的清華大學的校園，也順道參觀北京大學，二者差異很大。 
相信這次舉辦會議讓每位參加者獲益非淺，無論是論文的報告或旅遊的安排皆相當具有學習
的價值，使與會者更想繼續參加未來的場次。然而，個人除了將繼續研究個人的專業領域並
藉由參與國際會議的與會心得，期能拓展相關的研究領域。 
 
三、建議 
 A Timed Coloured Petri Net Supervisor for Urban Traffic Networks  
 
Yi-Sheng Huang 1, a , Ta-Hsiang Chung2 and Jenn-Huei Lin3
1Department of Aeronautical Engineering, Chung Cheng Institute of Technology, 
National Defense University, Taoyuan 335, Taiwan, R.O.C. 
2School of Defense Science, Chung Cheng Institute of Technology,  
National Defense University, Taoyuan 335, Taiwan, R.O.C. 
3Department of Electrical Engineering, Chung Cheng Institute of Technology,  
National Defense University, Taoyuan 335, Taiwan , R.O.C. 
a Corresponding author: Phone: +886-3-3906751, Fax: +886-3-3900487, E-mail: yshuang@ccit.edu.tw
 
 
Abstract - An urban traffic network of signalized 
intersections can be suitably modeled as discrete event 
system, in which the traffic light alternations are described 
by means of Timed Coloured Petri nets (TCPN).  In this 
paper, a model of such a network via TCPN is used to state 
and solve the problem of coordinating several traffic lights. 
Moreover, some relevant experimental results are 
presented and discussed.  The analysis of the control TCPN 
models is performed by Occurrence Graphs (OG) method.  
And then the relation of the liveness and reversibility of the 
control TCPN nets will be obtained.  Finally, an urban 
traffic lights’ control structure with nine intersections will 
be realized.   
 
Keywords: timed coloured Petri nets (TCPN), intelligent 
transportation system, and traffic light 
I. INTRODUCTION 
With the growing number of vehicles, the phenomenon 
of traffic congestion, which has become predominant 
problem, causes the transportations delay on urban 
arteries.  Hence it is imperative to improve the safety and 
efficiency of transportation.  The serious traffic 
congestion is due to the rapid increase in the numbers of 
vehicle, and the numbers of road are not enough to flow 
a great deal of vehicles.  However it is more difficult to 
build broad roads, because of the limitation of the 
existing building in the urban area, and need to spend a 
surprising amount on the lands which are developed 
become roads. 
An efficient traffic control system is more economic 
benefit in improve congestion of traffic flow.  Some 
researchers focus their attention on the area of Intelligent 
Transportation System (ITS) [FIG, 01; MAH, 99].  To 
study the technologies and scientific aspects with a goal 
that develop new systems, make road-vehicle systems 
safer and more efficient.  It is an important issue that 
traffic light control in road-vehicle systems.  The main 
reasons are the traffic light control systems exhibit a 
high degree of concurrency and the systems might make 
the shared resources (i.e., intersection area) conflict that 
cause deadlock and overload.  The control measures and 
strategies utilize traffic-light controls are classified into 
two categories [PAP,03]: 1) Fixed-time strategies and 2) 
Traffic-response strategies.  Fixed-time strategies take 
into account a given time of day and determine the 
optimal splits; and optimal cycle time, based on the 
historical constant demands over the considered 
signalized urban area.  On the other hand, traffic 
response strategies are that to construct a real-time 
control system with an optimum signal setting.  However 
an urban traffic control in most of industrialized 
countries has been used fixed-time strategies until now.  
Hence this paper centralizes traffic control systems on 
the fixed-time strategies.  Obviously, a high quality of 
traffic control system based on a precise traffic model. 
An individual intersection could be considered to be a 
discrete event system, in which the passing vehicles and 
traffic light timing represent its state.  And Petri nets (PN) 
have been proven to be a powerful modeling tool for 
various kinds of discrete event systems [MUR, 89; PET, 
81), and its formalism provides a clear means for 
presenting simulation and control logic.  Hence, the PN 
is availably applied in traffic control.  In fact, traffic 
control has been accomplished by using Petri nets [FEB, 
04; TOL, 03; TZE, 96; WAN, 99]. Concentrating on a 
traffic signal control model by PN is proposed by [LIN, 
03] and [LIS, 04].  The former models a two-way 
intersection with six lanes, and the places in PN are 
presented by states of traffic lights (e.g., both a straight 
light and a turn right light are in green in the north- and 
southern directions).  The implementation is approached 
by programmable logic controller (PLC).  However the 
readers can neither observe the variation of traffic 
signals directly nor obtain a traffic lights control in an 
urban network.  The latter construct the indication 
display module and phase-transition module by PN as an 
eight-phase traffic signal controller.  Although, the 
modules are suitably applied at the intersections of urban 
system, but the variety of traffic signals can not be 
observed directly either.  However, this kind of 
drawback seems to be existed.  As a result, the authors 
propose a new modeling methodology to tackle this 
difficult problem in this paper.  In summary, an urban 
traffic light control system which coordinating several 
traffic lights with eight-, six-, and two-phase has been 
designed and analyzed based on TCPN.  In addition, the 
lights that can create two-phase transitions.  It is worthy 
to notice that there is only one type of phase transition 
presented in the previous literatures [TZE, 96; TOL, 03].   
 
Fig. 1. AN URBAN NETWORK. 
 
 
Fig. 2. (a) FIVE-LIGHT SIGNAL. (b) THREE-LIGHT SIGNAL. 
B. The Phase Transitions  
For convenience, the main road intersection with the 
eight-phase transitions, shown in Fig. 3, is introduced.  
First, the phases’ alternating order is shown as follows: 
Phase B-1: Both the northbound and the southbound 
vehicles are allowed turn left.  
Phase B-2: Northbound vehicles permit go straight, turn 
left, and turn right.  At the same time, the 
eastbound vehicles may turn right  . 
Phase B-3: At this moment, both the northbound and the 
southbound vehicles may go straight and 
turn right.  
Phase B-4: At this moment, the southbound vehicles are 
allowed go straight, turn left, and turn right, 
and meantime the westbound vehicles may 
turn right. 
Phase B-5, phase B-6, phase B-7 and phase B-8 are 
similar to phase B-1, phase B-2, phase B-3 and phase B-
4, respectively.  Note that they are different in the 
heading directions.  
It is worthy to notice that one direction is green light 
which allows vehicles go straight, turn left, and turn 
right in an intersection. And its perpendicular direction 
allows the vehicles turn right on the red light at the same 
time.   This feature has not been addressed in the past 
work.  The feature can be found in phase B-2, phase B-4, 
phase B-6 and phase B-8.  Similarly, the six- and two-
phase transition could be derived, and they are shown in 
Fig. 4.  It is important that the phase transitions time are 
variable, and they may be designed in terms of travel 
time, queue lengths, and so on.  For legibility, the 
authors design two different phase transition times, i.e., 
45 and 90 seconds, in this paper.  
 
Fig. 3. THE EIGHT- PHASE TRANSITION. 
 
Fig. 4.(a) THE SIX- PHASE TRANSITION. (b) THE TWO- PHASE 
TRANSITION. 
IV. TCPN REALIZATION 
Petri nets have been applied to model various kinds of 
discrete event systems. Even traffic signal control has 
been achieved by using PN. For example, the 
applications of PN in traffic signal control [TOL,03; 
TZE,96; WAN, 99; LIN, 03] were proposed and a 
mathematical modular framework based on PN to model 
an eight-phase traffic signal controller by [LIS, 04] was 
also proposed. 
It is worthy to notice that only one type of phase 
transition was considered in [LIS, 04] and four types of 
phase transitions were discussed in [FEB,04].  However, 
they did not address the more complex phase transitions 
of the traffic lights.  In this paper, the authors present a 
new modeling methodology to model the complex phase 
transitions of the traffic lights with TCPN.  
A global clock is necessary in a TCPN model.  The 
global clock values represent the system model's time 
where they may either be discrete time or continuous 
time.  More precisely, each token has a time stamp on it.  
The time stamp describes the earliest model time at 
which the token can be moved by a binding element.  
Note here that one can define the time stamp unit as 
seconds, microseconds, or millennia and so on.  It 
depends completely on the designer. Please note that the 
authors assume one time unit is equal to 10 milliseconds 
in this paper.  
For convenience, the following discussions of the urban 
traffic network TCPN models are alleviated while the 
author abbreviates some of places’ notations as follows: 
• The R signal turning on in the northbound traffic light 
at intersection B becomes BNR; 
After TB6, TB7 and TB8 firing, five binding elements 
b5= (TB9, e), b12= (TB11, e), b8= (TB12, e), b11= 
(TB17, e) and b4= (TB19, e) are enabled.  The five 
tokens are with time stamps 13502, 13507, 13508, 18022 
and 22502, respectively. Likewise, the tokens are moved 
to place BNY from places BNGR and BNGF when the 
global time reaches 13508 time units.  At this moment, 
three cases are possible: 1) one token is moved to places 
BNR from place BNY; 2) another token is moved to 
BSGL; 3). the other token is moved to place BWGR from 
place BWR automatically. In other words, the GR signal 
turns on in the westbound traffic light. And then the GR 
should be held on for 44.95 seconds.  As a result, we can 
conclude that the phase B-4 is derived.  Likewise, at the 
global time 18022, 22503, 27016 and 31508 time units, 
the phases B-5, B-6, B-7 and B-8 are reached, 
respectively.  Note that the alternation of the traffic 
lights might be observed from the TCPN models directly.  
This is another important feature in this paper. 
B.  An Urban traffic lights control system  
In this subsection, we attempt to control an urban traffic 
network which consists of nine intersections (i.e., such 
as Fig. 1).  As mentioned above, the nine intersections 
are divided into three groups: main street intersection, 
minor street intersection and tertiary street intersection. 
Obviously, we have to design a different control system 
for each traffic light.  For the main street intersection, its 
TCPN models are proposed in Fig. 5.  The TCPN models 
are able to generate eight-phase transition.  It is worthy 
to notice that the six-phase and the two-phase transitions 
can be obtained in the same way.  Due to the space 
limitation, the paper shows all TCPN models of the 
traffic lights in table I by a compact way.  Although table 
I shows the structure of the TCPN models, they are easy 
to construct if we put some information on them.  In 
essence, the TCPN models are formed with phase 
transition concepts.  As a result, we have to coordinate 
the firing sequences of the traffic signal light’s control 
system as we want. 
TABLE I. 
THE URBAN NETWORK MODELS 
 Northbound Southbound Westbound Eastbound 
B 
   
A,C,E,H 
(f) (e)
D,F,G,I 
   
V.  THE EVALUATION OF PERFORMACE 
There are three methods to analyze a TCPN model: 1) 
occurrence graphs method; 2) simulation method and 3) 
invariant method [JEN, 95].  In our TCPN models, the 
invariant method is not suitable.  The basic idea behind 
place invariants is to construct equations which are 
satisfied for all reachable marking.  As an example, let 
us consider the token in a traffic light (i.e., shown in Fig. 
5) which has five-light signal.  Let us focus on the places 
BNGL, BNGS and BNGR. We know the three places are 
related with green light.  From our intuition about this 
case, we know that the number of tokens is not a 
constant.  Hence, the authors adopt the other two 
methods to analyze the traffic light control system.  In 
summary, the reversibility and liveness properties can be 
derived from the methods.  
A.   Occurrence Graphs method 
The basic idea behind occurrence graphs is to construct a 
graph containing a node for each reachable marking and 
an arc for each occurring binding element. Obviously 
such a graph may become very large, even for small 
TCPN.  Due to the cycle counters, our TCPN models 
have an infinite number of reachable markings and thus 
an infinite occurrence graph.  However, we can use one 
cycle occurrence graph as a simplified occurrence graph.  
This means that the simplified graph has a similar 
behavior to the original graph.  Hence we can get 
information about the dynamic properties of the original 
net by constructing an occurrence graph for the 
simplified net.   
 Note that each node represents a marking, and the 
content of the marking is described by the text inscription 
of the node.  And each arc represents the occurrence of a 
binding element, and the content of this binding element 
is described by the text attached to the arc. Based on the 
simplified occurrence graphs, we can conclude that the 
occurrence graphs are circulated.  It hints that the initial 
marking is reachable from the other markings.  As a 
result, there is no eventuality of a deadlock in this system. 
Briefly, the TCPN is with reversibility and liveness. B. 
Simulation    Results 
Observing the relations among the traffic lights’ iteration 
time, periodicity, and the initial time stamps, the 
predicable equations (5), (6) and (7) for the three types 
of “set cycle time” are derived as follows.   
tnB BnT +×= 36000                               (5) 
tnX XnT +×= 36000                               (6) 
     
tnY YnT +×= 18000                                   (7) 
Where TnB, TnX, TnY, Bt, Xt, Yt and n are all vectors, n is 
iteration times, Bt, Xt   and Yt  are the initial time stamps of 
the eight-phase,  six-phase, and two-phase traffic lights 
which are listed in table II.  The TnB represents the traffic 
