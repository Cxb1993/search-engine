中文摘要 
近年來控制器區域網路已經很普遍地應用到汽車、工業界等領域上，成為車身電子通訊網路的主要骨
幹之一。隨著車載資通訊應用的普及化，在整合車身電子通訊網路上將會遇到的問題包括：(1) 如何設計
車載閘道器來將車身電子通訊網路上的訊息擷取出來；(2) 如何選擇合適的通訊介面將擷取到的資訊經由
車載閘道器送到後端伺服器；(3) 如何縮短車載閘道器在軟硬體開發上的時程等。 
本計畫的主要研究目的是要提出一個快速又有效率的方法協助工程師們開發車載閘道器，使工程師們
可以不用管底層的驅動程式、作業系統、及硬體電路是如何設計，只要專心在上層應用程式的開發工作上。
本計畫實作的一個平台整合了控制器區域匯流排、藍牙和 USB 等通訊介面，並實作一個車載閘道器程式產
生器，供軟體設計師們選擇他們所需要的功能來快速地產生車載閘道器的程式框架，這些功能採用模組化
的設計方式，軟體設計師們只需要編修主程式來開發他們所需要的應用功能，為了提升車載閘道器執行多
工的能力，我們在提出的軟體框架上裝載一個小型的即時作業系統，經由我們提供的平台可以有效地縮短
開發時間及提升程式的效能。 
關鍵詞: 控制器區域網路、藍牙、閘道器、框架作業、即時作業系統 
 
Abstract 
In recent years, the control area network (CAN) has been widely adopted in automobile, industry control, and 
other fields. The CAN has become one of backbone of the intra-communication network inside a vehicle. With the 
popularity of telematics applications in integrated the vehicle intra-communication network, we will encounter the 
following problems including: (1) how to design a gateway to retrieval information from the vehicle 
intra-communication network; (2) how to choose an appropriate communication interface to send the retrieved 
information by the gateway to a backend server; (3) how to shorten the gateway in software and hardware 
development on schedule.  
The main purpose of this project is to a faster method to help engineers for developing a gateway. We 
implemented a platform to integrate communication interfaces that include CAN, Bluetooth, and USB and 
developed a program generator for engineers that they only need to focus in application development and do not 
need to care how to design the driver, operation system, and hardware. The engineers first select features designed 
in modular and then the program generator generates their program framework in shortest time. In order to enhance 
the performance of the gateway, we implemented a tiny real-time operation system running in the platform. With 
our platform, engineers only need to modify the main program for implementing their applications that reduces 
development time and the tiny real-time operation system can improve the performances.  
Keywords: Control area network, Bluetooth, gateway, framework, real-time operation system.  
及硬體電路是如何設計，只要專心在上層應用程式的開發工作上。本計畫實作的一個平
台整合了控制器區域匯流排、藍牙、和 USB等通訊介面，我們將設計一個車載閘道器的
程式框架產生器，藉由這個框架快速地依據設計者的應用需求產生該平台的框架程式碼
及參考電路，來幫助剛開始進入這個領域的使用者以較短的時間來熟悉微控制器的應用
與控制器區域網路核心的控制，讓工程師快速入門，進而縮短開發時間，特別是在整合
控制器區域網路之車載資通訊應用上。 
 
二、系統架構 
我們的架構是以微處理控制器為核心，如圖 1 所示，透過微處理控制器的功能
來實現我們要設計該平台架構的想法，有關於這顆微處理控制器可以達到的功能均
可以在這個架構來實現，此外，我們在微處理控制器上層規劃了一個小型的即時作
業系統來做程式的排程，這個作業系統是為了解決程式執行效率的問題，透過這個
作業系統來確保我們要處理的事件能在一定的時間內完成且不會有遺漏，而架構中
的小型即時作業系統是透過微處理控制器的計時器（TIMER）的功能來實現。 
在小型即時作業系統的上層可以看到我們規劃出來的通訊介面，這裡面包括了
CAN、UART、Bluetooth 等等的通訊介面，在我們的規劃是模組化的設計來呈現功
能，在最上層的應用每一個模組的擴充，使用者可以用繼承的方式來選擇他們所需
的應用，這樣的設計讓使用者可以很輕鬆的規劃出他們所要實現的功能，我們可由
圖 1 看到最上層均是我們應用的範圍，舉例來說：在車載診斷應用中，我們可以透
過 CAN 的模組來實現功能，最上層的車載診斷部份便可以繼承 CAN 的功能來實
現。 
 
 
 
 圖 2 車載閘道器雛型 
 
 
圖 3 車載閘道器之印刷電路板 
  
 圖 5 系統測試 
 
五、結論 
因控制器區域網路核心晶片內暫存器繁多，設計一個可以擷取車內資訊的應用有其困難
性。對一般工程師而言，開發車載閘道器必須要花費很多的時間在研讀相關的技術文件與
學習開發這些裝置的相關知識，造成車載閘道器開發時程過長。為了解決這個問題，我們
實作的一套車載閘道器的平台及框架程式產生器，能有效地協助工程師開發整合車身電子
通訊網路的車載資通訊應用程式。 
未來我們將朝向下列幾個方向進行相關研究： 
(1) 以模型檢查器來建立車身電子通訊網路之效能評估模型。 
(2) 研究其他車身電子通訊網路，如：LIN、MOST、FlexRey、Safe-by-Wire。 
(3) 實作更穩定更安全的車載相關之軟體元件。 
 
References 
[1] D. Paret “Multiplexed Networks for Embedded Systems CAN, LIN, FlexRay, 
Safe-by-Wire …,” Wiley, pp. 14-19, 2007. 
[2] C. Dressler and O. Fischer, “CAN basics: CAN in Automation history and CAN, part 1 of 
8,” Industrial Automation Asia, pp. 22-23, January 2007. 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■  達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
  計畫已完成車載閘道器的軟硬體設計，並實作一塊具備 CAN 及 Bluetooth 閘
道器的電路板及實作一套 OBU 程式產生器用來產生車載閘道器的程式框架。 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本計畫所完成的車載閘道器能成功地經由 OBDII 讀取車身電子通訊網路上的
資訊，如：轉速、油量等。我們也在福特 Focus 進行實車測試。為了減輕軟
體工程師發展車載相關應用程式的負擔，我們也實作一套 OBU 程式產生器，
可以產生軟體框架。本計畫成果也在日本大阪及中國海南島發表，特別是在
海南島舉辦的海峽兩岸四地無線電科技研討會引起與會者高度重視，是一項
非常實用又有產業價值的研究。 
 
 
 
 
 
一、參加會議經過 
今年7月13-16日參加由日本Osaka大學舉行的第八屆IEEEE International 
Conference on Industrial Informatics，此會議涵蓋主題可以分技術類主題
及特別主題。在技術類主題有15個主題，包括：大樓自動化和智慧型住宅、工
廠自動化、綠色資訊技術、感測與通訊、工業資訊學應用、人機介面等議題；
而在特殊主題則以進階軟體工程、能源和資訊技術、服務工程、行動/無線通訊
網路等議題。 
本人在Osaka舉行的IEEE研討會上，與本校鄧總務長恒發、鄧所長恢綱、楊老師
錦華、鍾老師明政等同仁共發表三篇文章，分別是「Modeling CAN Network Using 
PRISM」、「A Mesh Network Reliability Analysis Using Reliability Block 
Diagram」、「A Low Cost and Effective Implementation of Standby Mode Power 
Reduction」分別由本人、鄧所長恢綱、楊老師錦華進行口頭報告，鍾老師明政
對研討會也很感興趣和我們三人同行參加此研討會。「Modeling CAN Network 
Using PRISM」文章，全文如附件一。 
二、與會心得 
「Modeling CAN Network Using PRISM」是今年國科會的研究成果，我們
選擇了PRISM工具來進行塑模工作，該系統是以通訊閘道為核心，主要是評估 
CAN Bus的效能。PRISM是一套機率模型檢查工具，它提供了系統的正規模化和
分析，能展現隨機的行為，該工具提供了離散時間馬可夫鏈（Discrete-Time 
Markov Chains）、連續時間馬可夫鏈（Continuous-Time Markov Chains）、以
及馬可夫決策程序（Markov Decision Processes）。在此篇文章我們選用了連
續時間馬可夫鏈來建立閘道器使用CAN Bus的分析模式，在CAN Bus上來建立閘
道器和電子控制器間的訊息傳輸，由於CAN Bus是屬於優先權的滙流排，因此容
易造成低優先權訊息產生餓死現象。本篇文章建立三個電子控制器和一個閘道
器之間的通訊系統模型，並觀察四個優先權訊息：機油壓力指示、機油溫度指
示、煞車指示、齒輪變速指示等。優先權以機油壓力指示最高，機油溫度指示
Modeling CAN Network Using PRISM 
 
Cheng-Min Lin, Chen-Wei Yang
†
, Hui-Kang Teng
‡
, Ming-Cheng Chung, Kuo-Chen Lang, Heng-Fa Teng 
Department of Computer and Communication Engineering, Nan Kai University of Technology 
 Department of Information Engineering and Computer Science, Feng Chia University
†
 
Graduate Institute of Electrical Engineering, Nan Kai University of Technology
‡
 
lcm@nkut.edu.tw, P9525258@fcu.edu.tw, thk@nkut.edu.tw, t155@nkut.edu.tw, lkj@nkut.edu.tw, 
thf@nkut.edu.tw 
 
Abstract- Although the probabilistic model checking tool 
called PRISM had been applied in many communication 
systems, such as wireless local area network, Bluetooth, 
and ZigBee, the technique is not used in a controller area 
network (CAN). In this paper, we use PRISM to model the 
mechanism of priority messages for CAN because the 
mechanism lets CAN as leader in serial communication 
for automobile and industry control. Through modeling 
CAN, it is easy to analysis the characteristic of CAN for 
helping the development of security and efficiency for 
automobile. The Markov chain model helps us to model 
the behaviour of priority messages. According to the 
results of analysis and simulation, the high-priority 
messages have better throughput performance while 
low-priority messages have the potential to lose 
transmission when CAN traffic is higher.  
 
I. INTRODUCTION 
Control Area Network (CAN) has been one of the 
most successful network protocols since Robert Bosch 
GmbH introduced the serial bus system - CAN at the 
Society of Automotive Engineers (SAE) congress in 
February of 1986 錯誤! 找不到參照來源。 . 
Today, almost every new vehicle manufactured in 
Europe is equipped with a CAN network for accessing 
information from the electronic controller unit (ECU) 
deployed in an intra-vehicle network. The CAN 
protocol was adopted as an international standard in 
1993. Today, almost every new vehicle manufactured 
in Europe is equipped with a CAN network for 
accessing information from the electronic controller 
unit (ECU) deployed in an intra-vehicle network. 
According to the CAN specification reported by Bosch, 
CAN has several important properties, including 
prioritization messages, guarantee of latency times, 
configuration flexibility, etc 2. Due to its advantages in 
bus access conflict resolution, CAN has been widely 
adopted in automobile and industry control, such as 
vehicles 34, smart sensors 4.A,  distributed fuel 
system 5, spectrometer slow control system 5.A, 
real-time communication systems 67, fault 
confinement 8, time triggered communication 9, and 
remote sensing 10. 
Although the CAN network has been successful in 
automobile and industry control, few attempts have 
been made to use CAN theory in practical applications. 
Modeling plays a critical role in the development of 
reliability products related to automobile and industry 
control used in real-time environments. We attempt 
to model the behavior of priority messages in CAN 
networks using a probabilistic model checking 
technique. The proposed technique can help the 
information processing system designer to evaluate 
system design factors quantification such as 
performance and reliability. A probabilistic model 
checker called PRISM 10.A is used as an automatic 
formal verification technique for the analysis of 
systems which exhibit stochastic behavior. We use this 
tool to analyze an example of the behavior of four 
priority messages.  
In 2002, Kwiatkowska et al. 11 model the two-way 
handshake mechanism of the IEEE 802.11 standard 
with a fixed network topology using probabilistic 
timed automata (PTA). The PTA can represent both 
nondeterministic and probabilistic. Duflot et al. in 
2006 12 present a formal analysis of the discovery 
phase of the Bluetooth wireless communication 
protocol using the DTMC model. Fruth 13 models 
附件一、會議論文全文 
(2) 𝑠 ∈ 𝑆 is the initial state; 
(3) 𝐑: 𝑆 × 𝑆 → ℝ≥0 is the transition rate matrix; 
(4) 𝐿: 𝑆 → 2𝐴𝑃  is a labelling function which assigns 
to each state 𝑠 ∈ 𝑆  the set L(s) of atomic 
propositions (AP) that are valid in the state. 
For CTMCs, we should change the transition rate 
matrix R into the infinitesimal generator matrix Q. 
Hence, we calculate the matrix R to obtain the matrix 
Q. The calculation equation is given by 
𝐐 𝑠, 𝑠′ =  
𝐑 𝑠, 𝑠′ if 𝑠 ≠ 𝑠′
− 𝐑 𝑠, 𝑠′′ 𝑠′′ ≠𝑠 otherwise.
  (7) 
As discussed above, we try to model a small CAN 
network with a priority queueing system with four 
levels of priorities appeared at 14 as shown in Fig. 3. 
Nodes 1, 2, and 3 are ECUs and they are transmitters. 
Node 4 is a gateway via OBDII to connect a CAN bus. 
Node 4 is a receiver for collecting all messages sent by 
other three nodes. Every node equipped with a queue 
stored up to N messages excepting the gateway node 
has queue size 4 times larger than other nodes. Node 
1 sends the message of break indication with ID of 
20H repeating 100 ms without data. Node 2 transmits 
in cyclic order every 1000 ms the message gear 
information (ID 30H) with 8 byte data. Node 3 has two 
types of messages. One is the highest priority message 
to indicate oil pressure and the other is lowest priority 
message to indicate oil temperature. They are repeatly 
to be sent eight byte data at 200 and 1000 ms, 
respectively. Node 4 will delete its received data in 
cyclic order every 1000 ms. 
We model the above example of a four-priority 
queueing system using the PRISM language as 
shown in Fig. 4. The source code using the PRISM 
can be divided into four parts. (1) Model selection 
and constant values are declared. First of all, we 
declare the example is a CTMC model using the 
keyword of stochastic. Only one constant of queue 
size is specified to N to represent the maximum 
number of buffers used to store every class of 
messages. (2) Four node modules and one bus module 
are designed and denoted by BreakIndicate, 
GearIndicate, OilIndicate, MonitorControl, and Bus. 
Each module has one or two queues represented by BI 
in BreakIndicate, GI in GearIndicate, OP and OT 
OilIndicate, and MC in MonitorControl. Their queue 
length excepting MC is 4N is specified in those 
constant values of N, respectively. The behaviour of 
each message module is described by four commands, 
comprising a guard and one or more updates. A 
command takes the form of “[] guard ->rate1 : update1 
+ ... + raten : updaten;.” We use the first command to 
descript the above syntax. The guard, (BI<N) is a 
predicate over the two variables, BI and N, in the 
BreakIndicate module. The update, (BI’=BI+1) 
describes a transition to increase the variable BI if the 
guard, (BI<N) is true. The update, (BI’=BI+1) is also 
assigned an interarrival time of 50000 which will be 
assigned to the corresponding transition. Another 
update about the arrival rate occurs when the guard 
(BI=N) is held but no increase occurs in the queue BI. 
In the other words, the generated message is lost. We 
can use the synchronization mechanism which 
compels at least two actions in different modules to 
make simultaneous transitions. For example, arrival2 
C1 
Node 1: BreakIndicate 
Type: Transmitter 
Priority 2 
Queue size: N 
TXREP: 100ms 
ID: 20H 
Data: 0 Bytes 
C2 
Node 2: GearIndicate 
Type: Transmitter 
Priority 3 
Queue size: N 
TXREP: 1000ms 
ID: 30H 
Data: 8 Bytes 
C3 
Node 3: OilIndicate 
Type: Transmitter 
Priority 1 - Pressure 
Queue size: N 
TXREP: 200ms 
ID: 10H 
Data: 8 Bytes 
Priority 4 - Temperature 
Queue size: N 
TXREP: 1000ms 
ID: 40H 
Data: 8 Bytes 
(a)  
Node 4: MonitorControl 
Type: Receiver 
Queue size: 4*N 
DISREP: 1000ms 
 
C1 
CAN Bus 
C2 
Fig.  2. A CAN network with a four-priority queueing system 
consists of four nodes. 
C3 
(b)  
C1 
C2 
C3 
(c)  
C1 
C2 
C3 
(d)  
C1 
C2 
C3 
(e)  
Fig.  1. A priority queue system 
simulation time is 2x10
-6
 sec.    
In each module, the sending queue and receiving 
queue are combined as one queue for the messages 
observation. In Fig. 6, the CAN bus model is simulated 
with different queue number size from 1 to 10 in each 
module and the results are full queue probability. The 
BI full queue probability is the highest, because the 
arrival rate is higher than the others. Following the 
simulation step by step, the sending messages in BI 
should have more sending queues to serve. In MC full 
queue probability simulation, the full queue 
probability is also higher. Because the MC collects all 
messages, and the messages receiving rate is larger 
than service rate. In the other way, the idle probability 
is also simulated to observe the queue state. The OC 
and GC have low sending rate and the queue idle 
probability is higher than other, shown in Fig. 7. 
For verification the priority queueing model, each 
module message throughput is pointed out with 
different time and the queue size is fixed as 2. In Fig. 
8(a), the time from 0 to 1000 is simulated. The results 
show that the BI has higher priority to send the 
messages with high throughput and the others are 
kept down. Even the lower priority messages could 
not send out with the lower queue size, such as the 
OT. In Fig. 9, the simulation time is extend from 0 to 
100000, the numerical results show that the priority 
model is almost the same as the analysis of real CAN 
bus communication scenario response. 
 
Fig.  3. The full queue probability at steady-state is 
presented when N is changed from 1 to 10. 
 
 
Fig.7. The idle probability at steady-state is presented 
when N is changed from 1 to 10. 
 
 
(a) OP, OT, BI and GI 
 
(b) only OP and OT 
Fig. 8. The number of messages when N is 2 and T 
is from 0 to 1000 
const int T; 
P=? [ true U<=T ("OPQfull") ]  P=? [ true U<=T ("OTQfull") ]  
P=? [ true U<=T ("GIQfull") ]   P=? [ true U<=T ("BIQfull") ] 
P=? [ true U<=T ("MCQfull") ] P=? [ true U<=T ("OCidle") ] 
P=? [ true U<=T ("GCidle") ]  P=? [ true U<=T ("BCidle") ] 
P=? [ true U<=T ("MCidle") ]   
S=? [ "OPQfull" ]  S=? [ "OTQfull" ]  S=? [ "GIQfull" ]  
S=? [ "BIQfull" ] S=? [ "MCQfull" ] S=? [ "OCidle" ] 
S=? [ "GCidle" ] S=? [ "BCidle" ] S=? [ "MCidle" ] 
R{"OPmsg"}=? [ C<=T ] R{"OTmsg"}=? [ C<=T ] R{"BImsg"}=? [ C<=T ] 
R{"GImsg"}=? [ C<=T ] R{"OPloss"}=? [ C<=T ] R{"OTloss"}=? [ C<=T ] 
R{"BIloss"}=? [ C<=T ] R{"GIloss"}=? [ C<=T ]  
 
Fig. 5 Property of three-priority queueing system 
 
confinement in CAN networks,” IEEE Transactions on 
Industrial Informatics, Vol. 2,  No. 2,  pp. 78-85, May 
2006. 
9. M. Short, and M. J. Pont, “Fault-Tolerant Time-Triggered 
Communication Using CAN,” IEEE Transactions on 
Industrial Informatics, Vol. 3,  No. 2,  pp. 131 – 142, 
May 2007. 
10. E. Desa, P. K. Maurya, A. Pereira, A. M. Pascoal, R. G. 
Prabhudesai, A. Mascarenhas, R. Madhan,; S. G. P. 
Matondkar, G. Navelkar, S. Prabhudesai, and S. 
Afzulpurkar, “A Small Autonomous Surface Vehicle for 
Ocean Color Remote Sensing,” IEEE Journal of 
Oceanic Engineering, Vol. 32,  No. 2,  pp. 353-364, 
April 2007. 
A. Hinton, M. Kwiatkowska, G. Norman and D. Parker, 
“PRISM: A Tool for Automatic Verification of 
Probabilistic Systems,” In Proc. 12th International 
Conference on Tools and Algorithms for the 
Construction and Analysis of Systems (TACAS'06), 
Vol. 3920 of Lecture Notes in Computer Science, 
pp. 441-444, Springer, March 2006. 
11. M. Kwiatkowska, G. Norman and J. Sproston, 
“Probabilistic Model Checking of the IEEE 802.11 
Wireless Local Area Network Protocol,” In Proc. 
PAPM/PROBMIV'02, Vol. 2399 of Lecture Notes in 
Computer Science, pp. 169-187, 2002. 
12. M. Duflot, M. Kwiatkowska, G. Norman and D. Parker, “A 
Formal Analysis of Bluetooth Device Discovery,” 
International Journal on Software Tools for Technology 
Transfer (STTT), Vol. 8, No.6 , pp. 621-632, 2006. 
13. M. Fruth, “Probabilistic Model Checking of Contention 
Resolution in the IEEE 802.15.4 Low-Rate Wireless 
Personal Area Network Protocol,” In Proc. 2nd 
International Symposium on Leveraging Applications of 
Formal Methods, Verification and Validation (ISOLA'06), 
2006. 
14. W. Lawrenz, “CAN System Engineering From Theory to 
Practical Applications,” Springer, pp.86-87, 1997. 
15. M. Kwiatkowska, G. Norman and D. Parker, “Stochastic 
Model Checking,” Formal Methods for the Design of 
Computer, Communication and Software Systems: 
Performance Evaluation, Vol. 4486 of Lecture Notes in 
Computer Science (Tutorial Volume), pp. 220-270, 
2007. 
 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：林正敏 計畫編號：98-2221-E-252-016- 
計畫名稱：多功能車載通訊閘道器之研製 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 0 100%  
博士生 2 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 4 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
