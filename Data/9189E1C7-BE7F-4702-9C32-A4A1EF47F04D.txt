 2 
而歐、日的控制器大廠近年積極投入研發多功能、
智慧型控制器之領域，在控制器上開發可加工任意
輪廓圖形的 CAM 功能，故國內產業要走出自我的
一片天空，此方向的研發投入是刻不容緩的。有鑑
於此，本研究旨在發展雷射加工中常用的三軸加工
功能模組，並整合至解譯器系統上。 
薛[1]等人發展了一個適用於視窗環境下的機
械手臂動態模擬系統，藉由使用者輸入移動角度、
位置及速度，經過運動學與反運學的運算來獲得實
際位置，透過圖形動畫方式來模擬機械手臂的運
動。Dallaway[2]於 1994 年發展出一套具有圖形使
用者介面的操作系統，該系統可以針對機械手臂的
運動預先作軌跡規劃，但該系統仍舊在 Dos 環境下
作業，且缺乏與語言解譯器的連結，無法將數值運
算式轉成電腦可以了解及計值的型態。Asada[3]於
1989 年發展出一套考量移動位置與力量輸出的機
器人操作系統，該系統在移動機械手臂時，也量測
出機械手臂的力量輸出，針對操作者所要完成之動
作，以位置及力量來決定控制的方式，且該系統是
直接利用個人電腦來驅動機械手臂。而本計畫控制
三軸雷射加工機的運動方式，是以運動學與反運動
學的理論基礎，經由電腦運算求出路徑，在初期先
對控制器之解譯器系統進行功能評估與規劃，再進
行系統之設計，在依據解譯器設計準則進行實作，
並發展於作業平台之下。Jinno[4]於 1995 年提出將
機器人應用在磨光、倒角和拋光的作業上。該系統
使用以工作為導向的機器人語言，因此在力量控制
及作業設定上的表現較為突出。而本計畫的加工機
操作系統，並不將應用層面給限制在單一作業，而
是提供眾多具實用性的函數讓操作者使用，藉由函
數之間的靈活運用與變化，來適應各項的作業需
求。Akihiro[5]等人於 1992 年依據 SLIM(標準工業
機器人語言)發展出一套機器人語言解譯器，該系
統採用類似 Basic 語法來撰寫機器人程式碼，並具
有除錯的功能，然而該系統主要作為教育用途。
Vincent Idasiak[6]提出 IAda 機器人語言解譯器，他
所發展的解譯器具有動態配置與可以在多種機器
人上應用，透過 UNIX 架設網路可讓工作員在網路
上編輯語言與監督機器人的工作狀態，最後將語言
解譯器執行在 PUMA560 上控制機械手臂的動作。
Schildt[7]在其書中提出的解譯器的結構，此解譯器
具有偵錯的功能。 
本計畫乃針對雷射雕刻機台製作其操作系
統，發展其雷射加工的解譯器，提供畫圓、畫線等
基礎加工，並可透過這些指令運用解譯器具有的遞
迴、數值比較與運算等功能規劃出其他各種圖形，
而能提供編輯功能完善及具有 CAD/CMD 模擬等
功能。 
 
三、雷射雕刻機平台架構 
 
本計畫使用 ARM9 架構之發展系統的作為雷
射雕刻機平台的控制器，如圖 1 所示，其核心晶片
為 Samsung S3C2440 微處理器。由於 Linux 具有開
放原始碼、模組化設計、穩定性夠、跨平台、自行
開發等優點，所以本計畫 Linux 作業系統上發展機
台的控制器系統。 
 
圖 1、ARM 控制器 
 
本計畫之雷射機台 X 軸移動範圍為 700mm，
Y 軸移動範圍為 500mm，Z 軸控制平台上下移動對
雷射聚焦進行微調控制。機台光路示意圖如圖 2 所
示，其中光路系統由 CO2 雷射源、第 1 反射鏡、
第 2 反射鏡、第 3 反射鏡聚焦鏡組成，其中第 1 反
射鏡是固定式反射鏡負責雷射管所發出的雷射光
反射至第二反射鏡；第 2 反射鏡為沿 y 方向移動的
移動式反射鏡，負責接收第 1 反射鏡反射過來的雷
 4 
型態，QUOTE 代表用引號括住的字串。 
語言結譯器
COMMAND
數字 DELIMITER
解譯程式運算式語法分析程式
運算子 變數
括弧
QUOTE
STRING
NUMBER
VARIABLE
FINISHED
 
圖 4、解譯器基本結構圖 
 
解譯程式是針對操作者輸入之解譯碼針對每
一個字元進行分析，例如在解譯碼讀取到 A＝
B –(C+15) 則解譯程式會將其分解成 A、＝、B、
－、(、C、+、15、)九個部份，而每個部份皆為不
可再分的單元，稱之為基元，其中英文字 A、B、C
是辨識成 VARIABLE 型態，運算式與括弧是
DELIMITER 型態，而數字則是辨識成 NUMBER
型態，每種型態都會由函式 get_token 辨識出來，
並將型態儲存在 token_type 裡面可以供給所有程式
使用，本文所使用的解譯器都是由主程式進行呼叫
get_token函式並回傳 token_type 的型態讓主程式進
行找尋變數後的數值或是 case 敘述選擇適當的
COMMAND 來執行。 
在運算式語法分析程式中由get_exp函式處理
解譯碼的運算子與數字的計算，由上面的例子作解
釋，由 get_token 函式抓取到變數後則會進來
get_exp 函式的分析，get_exp 函式具有辨識＋、－、
＊、/以及括弧的功能，辨識完後再進行 case 敘述
選擇適當運算，運算後再將數值儲存回該變數裡
面。 
本計畫發展之解譯器的流程圖如圖 5 所示，
進入主程式後會利用 get_token()函數針對每一個自
旋進行基元的辨識，get_token 函數會逐一掃描雕刻
機解譯碼並去除空白(space)與跳格(tap)後，如果找
尋到的是 COMMAND 型態則表示為一個指令，
get_token 會將讀取到轉換成內部形式並搜尋該指
令所代表的整數型態並將型態儲存在 tok 裡面，主
程式會根據傳回的 tok 值選擇適當的 case 敘述來執
行，如果傳回的 token_type 為 VARIABLE 即表示
基元為一個變數，則指定變數名稱，倘若沒有發生
語法錯誤，則會繼續往下執行，直到檔案解譯結
束。其中 get_token()函數的流程圖如圖 6 所示，在
get_token()函數中考慮到使用者喜歡在撰寫解譯碼
時加入一些空格(space)與跳格(tab)字元，使程式更
容易略讀，所以本文在解譯器程式內寫入了忽略空
格或跳格的函數，當程式發現空格或跳格則越過空
格或跳格，將引數指向下一個字元；如果下一個字
元為運算子，則傳回運算子符號，並且將 token_type
設定為 DELIMITER，否則就檢查是否為一個用引
號括住的字串，接著檢查下一個語法單元是否為數
字；如果為 COMMAND 型態則將 token_type 設定
為 COMMAND 傳回主程式，主程式會選擇相對應
的解譯器指令進行動作。get_token()會依序檢查各
個字元的型態並回傳若上述情況沒有一個符合，就
表示已結束，頇將 token 設成零值字元(NULL)。 
開始
是否為命令
結束
讀取
雕刻機解譯碼
基元分析
get_token()
找尋相關功能函
數
解譯到檔案尾
判斷是否為變
數
不認識的指令結
束主迴圈
回到主程式
錯誤結束
指定變數
讀取一列程式碼
是
否
是
是
否
否
 
圖 5、解譯器的流程圖 
 6 
撰寫出機台專用加工指令如 Move、Line 指令等，
其中解譯器的語法如表 2 所示。 
 
迴圈語法指令 
本文在解譯器內加入了 For 迴圈的函式，一個
迴圈具有明確的循環範圈，也有明確的遞迴條件，
在這個迴圈內以堆疊的方式把控制變數的狀態和
迴圈內有關的資訊都除存在堆疊內，在每次遇到
NEXT 敘述就把這些資料取出來，並在更改變數之
後在取出來，因此在設計迴圈功能時，建立一個專
供迴圈使用的類別，此類別可儲存迴圈的起始和返
回列數，及迴圈的判斷條件和一個條件測試變數，
當條件測試變數滿足判斷條件，則該迴圈繼續執
行，直到迴圈條件不再滿足時，中止迴圈並重設解
譯列數，一個迴圈的製作即可完成。 
 
跳躍語法指令 
Gosub 跳躍到標籤指令頇明確的指向一個標
籤，因此在解譯開始即需掃描有無標籤，若發現標
籤定義及其名稱和所在列數，即將這些資料存入一
個標籤類別，因此當解譯到一個跳躍指令時，其處
理流程之首先的動作即是處理欲跳躍的標籤名，並
與解譯器的標籤物件進行名稱的比對，若無相符則
顯示錯誤訊息並中止解譯；若有相符的標籤名稱，
則根據該標籤物件的資料重設解譯列數，如此即可
完成跳躍指令的製作。 
取得標籤名稱
將解譯列號設為標籤
所在列號
從標籤表中取得該標
籤之資訊及所在列號
開始
返回主程式
標籤未定義
或不符語法
錯誤終止
是
否
 
圖 7、跳躍處理流程圖 
 
直線與移動加工指令 
移動（Move）指令，雷射軸的移動參數指令
Move (X1,Y1,Z1)，雷射軸移動到加工原點後以該點
為 X0,Y0,Z0 分別移動到 X1,Y1,Z1，雷射機台每次
移動到一個位置後就會自動紀錄該點座標，等待下
次移動或是加工時可以呼叫該點並可以算出目前
距離與移動距離。 
直線（Line）指令的部份，以 Line(X1,Y1,Z1) 
指令控制，以雷射軸目前的點當作（X0,Y0,Z0）移
動到（X1,Y1,Z1）。 
順向運動學的部份是利用已知各桿件的長度
及轉動角度，進而求解出末端桿件於絕對座標系的
位置。雷射切割機進行鏡片切割時，我們可由機台
關節座標（Xi、θi、Zi）經下列順向運動學方程式
求得加工件的座標(x、y、z)。 
)cos()( 10   ii XXx               (1) 
)sin()( 10   ii XXy               (2) 
0ZZz i                            (3) 
反運動學是利用已知各加工公件於絕對座標
系中的位置，反求對應之關節座標，經由下列方程
式之反運動學我們可以求得到（Xi、θi、Zi）的座
標。 
1
22 XyxX i                   (4) 
1
1tan   
x
y
i                    (5) 
0ZzZ i                         (6) 
 
P1 P2
P3P4
零點
Ө1
Ө2
Ө3
Ө4
Ө0
Ө1-Ө0
Ө2-Ө1
Ө3-Ө2
Ө4-Ө3
(X0, Ө0, Z0)
 
圖 8、點對點軌跡規劃圖 
軌跡規劃目標乃在提供移動指令定位雷射切
 8 
雷射切割，調整 Ton/Toff 的時間比，使雷射切割達
到最佳的效果，以調整 Ton/Toff 時間比的方式。當
加工物進行雷射切割或鑽孔時，所調整的時間比會
不同，配合進給速率，所產生的結果也會不同。例
如雷射切割時，切割軌跡的規劃與軌跡上每一點所
需要的切割時間，配合進給速率的調整，皆頇達到
最佳化控制，才能產生較佳的結果，雷射加工速度
控制圖如圖 11 所示。其中 Z 軸定位雷射加工，藉
由 X 與θ軸的移動配合加工時間來調整加工平台
移動的速度，可由加工軌跡的規劃使加工效率最佳
化。 
Z軸定位雷射加工         
t tttt加工時間 
t     
加工物件
Z         
Vx                
Vy         
加工速度 Vx      
 
圖 11、雷射加工速度控制圖 
 
雷射出光功率控制（Power），以 Power(參數
P) 指令控制，參數 P 代表雷射功率的大小。 
8-Bit
Prescaler
½
¼
1/8
1/16
TCLK0
Control
Logic0
5.1M
U
X
Dead Zone
Gerenator
Dead Zone
TOTU0
TCMPB0 TCNTB0
Control
Logic1
5.1M
U
X
Dead Zone
TOTU1
TCMPB1 TCNTB1
8-Bit
Prescaler
½
¼
1/8
1/16
TCLK0
Control
Logic2
5.1M
U
X
TCMPB2 TCNTB2
Control
Logic3
5.1M
U
X
TCMPB3 TCNTB3
TOTU2
TOTU3
Control
Logic4
TCNTB4
5.1M
U
X No Pin
PCLK
 
圖 12、PWM 順序功能圖 
 
本文所使用的 arm 控制器上有 5 個 16 位的計
時器。計時器 0、1、2、3 有脈寬調變功能（PWM），
其中 PWM 順序功能圖如圖 12 所示。計時器 4 則
為一般計時器，沒有輸出腳位。每個計時器擁有一
個可生成 5 種不同的時脈分割器（Clock Divider）
分別為 1/2、1/4、1/8 和 1/16 和 TCLK，而分割器
時脈是從相應的 8 位元的預分割器(Prescaler)接收
時脈。每個計時器輸入時脈頻率會根據預分割器
(Prescaler)與時脈分割器（Clock Divider）來分頻
PCLK，每個計時器輸入時脈的頻率 f 為 
f ＝ PCLK / { Prescaler +1}/divider    (10) 
當計時器開始後，計時器計數緩衝暫存器
（TCNTBn）會載入一個值到下數器中。計時器比
較緩衝暫存器（TCMPBn）會載入一個值到比較暫
存器中用來和下數器的值作比較。TCNTBn 和
TCMPBn 雙緩衝點使得頻率和負荷比發生改變
時，會產生一個方波輸出。 
雷射功率控制可通過控制 TCNTBn 控制頻率
與控制 TCMPBn 來控制工作週期，本文所使用的
雷射 power 頻率最低 2k HZ 就可以驅動雷射光，所
以只要將 TCNTBn 控制在 2k HZ 之後在控制
TCNTBn 就可以控制雷射功率。PCLK 為 50M Hz，
Prescaler 值為 0，divider 值為 1/2 帶入式（25）可
得到計時器輸入時脈的頻率為 25M Hz，如果要控
制頻率是 2k HZ，只要將計時器輸入時脈的頻率除
以 2k 可以得到 12500 的值，此值就是 TCNTBn 分
割 PCLK 後會產生 2k HZ 的值其波形如圖 13 所
示，最後只要 TCMPBn 的值與 TCNTBn 值相差 80
％就可以得出工作週期 80％。 
 
圖 13、雷射功率波形圖(f=2.00kHz, 工作週期 80%) 
 
五、實驗測試 
本文以兩個應用測試本計畫發展之解譯器之
性能。 
 10 
))sin(1( 1 iiir        (26) 
再經過順向運動學的轉換加工件座標，可得
到 N+1 個行經點（xi、yi、zi）為 
ciiii Xrx   )cos( 1   (27) 
ciiii Yry   )sin( 1   (28) 
cii ZZz       (29) 
經由 Line 輸出計算的結果，繪製出一個上下
顛倒的心臟圖，其加工圖如圖 15 所示，其圖片為
了使圖片好看，所以將其轉正。 
表 4、心臟線解譯碼 
home 
speed(120) 
power(80) 
home 
x=0 
y=0 
k=6 
for i=0 to 360 
    inc=i*3.14159/180.0 
tmp=k*(1+cos(inc)); 
    r1=tmp*cos(inc) 
r2=tmp*sin(inc); 
    if (i == 0)  then move(x+r1, y+r2,0); 
    line(r1, r2,0); 
next 
end 
 
 
圖 15、心臟線成品圖 
本章舉了這個例子來表現本文所開發出的雕
刻機解譯器，然而本文解譯器的所有功能，並非僅
是如此，尚有其它應用可供操作者來變化，可以利
用本解譯器來開發出實用的解譯碼，則有賴操作者
的巧思。 
 
六、結論 
本文以 arm 做為小型電腦與控制器在上面發
展了一套雷射雕刻機的解譯器並依序完成順向運
動學與反運動學之推導，針對加工路徑設計點對
點、直線、圓弧等軌跡規劃，控制雷射切割機進給
速度可達 100 mm/sec，三軸中心偏差量精度在
mm02.0 以內，使用者可以依照 Basic 程式設計基
礎運用在雷射解譯器上，繪製出其他變化出來。本
文在最後測試整個整個解譯器，由解譯器繪製一個
具有跳躍到標籤以及函數遞迴簡化程式碼的效果。 
 
七、參考文獻 
 
[1] 薛渡瀛、李廣齊，“機器手臂之動態模擬”，國
立虎尾技術學院自動化工程技術系專題報
告，民國八十七年十二月。 
[2] Dallaway, J.L., R.D. Jackson and R.M. 
Mahoney,“The User Intetrface For Interactive 
Robotic Workstations,”Proceeding of IEEE/RSJ 
International Conference on Intelligent Robot 
and Systems, Vol. 3, pp. 1682-1686, 1994. 
[3] Asada, H. and H. Izumi,“Automatic Program 
Generation From Teaching Data For The Hybrid 
Control of Robots,”IEEE Transactions on Robot 
and Automation, Vol. 5, No. 2 pp. 166-173, 
1989. 
[4] Jinno, M., F. Ozaki, T. Yoshimi, K. Tatsuno, M. 
Takahashi, M. Kanda, Y. Tamada and S. 
Nagataki,“Development of Force Controled 
Robot For Grinding, Chamfering and 
Polishung,” IEEE International Conference on 
Rbotics and Automation, vol. 2, pp. 1455-1460, 
1995. 
[5] Mastumoto, A. and M. Ando, “Interactive Robot 
