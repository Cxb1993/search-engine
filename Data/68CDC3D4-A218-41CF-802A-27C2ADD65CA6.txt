 A Constraint-based System for Product Design and Manufacturing 
 
 
Abstract 
Constraint-based modeling is one of the most modern 
methods to product design. This paper illustrates a 
collaborative design and manufacture procedures based 
on a new approach under the constraint-based solver on 
product design. Such a method can be used for the 
collaborative computer aided-design/manufacture 
systems. A developing model will be constructed from 
conceptual design to tool-paths generation and a case 
study of how to make a playing doll house was presented 
to verify this system.  
The solver generates geometric models automatically 
and hierarchically when sufficient constraint 
relationships between geometric objects are given. By 
examining this developing model, all different operations 
can be integrated tightly and quickly from different 
locations and sub-systems. Also, benefits such as 
reductions of designing time, prototype-testing and 
engineering personnel requirements, as well as mistake 
free operation and simplification of manufacturing are 
attainable. 
Keywords: Intelligent; Constraint-based solver; 
CAD/CAM 
 
1. Introduction 
Geometric constraints are used in many applications 
to define parameterized geometric models. This paper 
tries to build a configuration of product design base on 
constraint solver. In a parametric and feature-based CAD 
system, the shape of an object is represented by a 
parametric model. Basically, the parametric model 
imposes constraints on the entities of the geometric 
model, i.e. on its vertices and edges [1]. In a 
concept-based CAD system, the parametric model 
imposes constraints on object’s boundaries and directions. 
Currently, the constraint-based design paradigm is well 
established in modern modeling systems. In order to 
create instances of such a model, the corresponding 
geometric constraint problem must be solved. Generally 
speaking, such a problem has numerous solutions [2]. 
Selecting a significant solution is an important issue in 
geometric constraint solving, known as the 
multiple-solution problem or the root identification 
problem.  
Constraint-based modeling is one of the most modern 
approaches to product design. Hower and Graf [3] made 
a literature survey in constraint-based approaches prior to 
1996. Geometric constraints are at the heart of computer 
aided engineering applications, and also arise in many 
geometric modeling contexts such as virtual reality, 
graphics, layout, visualization, robotics, tolerances [4], 
artificial intelligence [5], and so on. Constraint-based 
geometric design also plays a significant role in 
computer aided design that has undergone greatest 
development in recent years. A geometric constraint 
problem is defined by a set of points 
},...,{ 1 npppP =  and a finite set of 
constraints },...,{ 1 ncccC = , which are defined over 
the points. It is to be expected that the set of constraints 
correctly defines the object, 32 −= npnc , and the 
problem is well-constrained, i.e., it has a finite number of 
solutions. In this case, solving geometric constraint 
problems consists in computing the relative position of 
each point of the geometric object. 
Generally there are two main categories to handle 
constraint-based in CAD systems, equation solvers and 
constructive solvers [6]. Symbolic [7-10] and numerical 
[6,11-13] approaches are grouped to equation solvers. 
These two approaches all translate geometric constraints 
into a system of equations. Numerical approach solves 
this equation by iterative methods, like Newton-Raphson 
root finding method. Symbolic approach solves the 
equation by exact symbolic computation and performs a 
number of algebraic transformations to simplify the 
dependencies between the variables. Rule-based 
networks, and feature and assembly representation [33]. 
Using the internet, this paper tries to integrate CAD and 
CAM to perform a smart interface in front of the 
customers. By using a simple ‘one-click’ operation, users 
can design a complete product management system 
without any technical knowledge regarding the internet. 
We believe that constraint-based solvers play a very 
important role in collaborative CAD. 
 
4. ‘One-Click’ Constraint-based solver 
There are two types of geometric constraints: 
relational and dimensional constraints [34]. For example, 
incidence and tangency are relational constraints while 
distances and angles are dimensional constraints. The 
geometric relationships cause the logical dependencies 
among the geometric objects. 
The basic primitives include straight lines and 
circular arcs. Denoting point i  by ijp  as the direction 
of j , the set of variables has the following form: 
)(
)...( 432114131211
ij
nnnn
y
yyyyyyyyp
=
=
     (1) 
where 4~1=j  in 2D (1:up, 2:down, 3:left, 4:right), 
6~1=j  in 3D (1:top, 2:bottom, 3:left, 4:right, 5:front, 
6:rear), n  is total number of the points.  
As the master object changes its size or position, the 
connected objects synchronously change their sizes and 
positions. Once the master object is stretched to a 
different position on the left bound, all the adherent 
objects will be stretched, i.e. all positions will shift to 
new positions at the same time similar to rectangle a . 
All the points use the same philosophy of scale as 
described below. 
Fig. 1 shows the dependency relationships between 
each of the two participating geometric objects. The 
arrows indicate the direction of dependency. There are 
also adherent objects which do not depend on any other 
geometric objects. These objects can also be represented 
by our method if we assume the evaluating operations for 
them are fixed. For example, a dimension may be an 
absolute data. We have constructed a unified method to 
represent geometric objects and relationships. A 
distinguishing feature of this method is that the 
relationships are embedded in the objects. Once we 
disturb the master bounding point, all the adherent 
objects connected to the master object will change 
automatically. 
There are four geometric modeling primitives used in 
the proposed approach, value, point, line and arc. An arc 
is a part of a circle’s circumference between two angles. 
We can regard a circle as an arc of 360 degrees. First we 
differentiate the types of the objects from the geometric 
models. Value is a numerical data. Point is a 2-tuple of 
number type. The pair of values represents a position in a 
2D coordinate system. Line is defined by two points at 
two ends. Arc consists of three values and a point to 
represent the radius, two angles and the center. Terms 
used in the proposed method are defined as follows: 
 
 
‧Object: An object consists of one or more straight 
lines or circular arcs. 
‧Master object: We define the master object as an 
‘Anchor’. An Anchor is the leading object of the 
group itself. 
‧Adherent object: Differ from Anchor is an active 
object, adherent objects are forced to connect to 
an Anchor.  
‧Position Fix: Instead of absolute position fixed, 
we define position fix is the relative position 
fixed between anchor and adherent object. 
‧Acting Direction: For a two-dimensional system, 
there are four bounding lines to activate the 
stretch operation. For a three-dimensional 
system, there are six bounding faces to active the 
stretch operation. Depending on the variant 
situations, users can specify different 
combination of the acting directions. 
 
Users can define Anchors in a design project 
repeatedly. An object can be an Anchor and an adherent 
object synchronously, i.e. a master object can be 
connected to any other Anchor. This is a hierarchical 
relationship a leading Anchor drags to disturb the 
bounding area; meantime all the connected objects 
change their sizes and positions individually. As shown 
pocketing, contouring, drilling, roughing and finishing. 
Every time the user changes the design shapes by 
click-and-drag, all adherent information will update for 
new design. 
 
5. Experimentation 
To demonstrate the proposed system in a real 
application, we now include an example using a doll 
house. This example shows the linking process between 
the design engineer and manufacture engineer of a global 
team to fulfill a just-in-time task.  
There are four different configurations in this case as 
shown in Fig. 4: conditions one, two, three and four. In 
condition one, the adherent objects will change sizes 
following the master object. In condition two, the 
adherent objects will change positions but retain their 
relative distances to the left of the master object. In 
condition three, the adherent objects will change 
positions but retain their relative distances to the right of 
master object. In condition four, the adherent objects will 
change sizes following the master object but retain their 
relative distances to the left and right of the master object. 
Every time the user disturbs the dragging points of the 
Anchor, all of the adherent objects change sizes or 
positions according to the constraint rules. 
 
As internet trade becomes more and more popular, 
people tend to go to virtual shops to order the 
merchandise. From this inspiration, this paper proposed a 
method to conquer this process from the design stage to 
the manufacturing stage for non-skilled manpower. The 
traditional trading models have recently changed greatly 
due to the Internet era. With the development and 
popularity of computer information technology, and the 
tendency for Internet trade, domestic and foreign 
companies have scrambled to launch online trading 
systems. Customers can visit web-sites to register order 
merchandise. Purchases online can be made using a 
credit card or through an authorized reseller in your area, 
such as a convenience store. Goods are delivered by 
express service and delivered at a pre-arranged time. 
When a customer decides the product’s material, 
size, styling, and color, a successful demonstration will 
entice the customer to explore more information of the 
product. According to the strategy in section 4, we take a 
doll house for example to verify our method in this 
section. First define Anchors, second specify constraints 
on adherent objects; and finally connect the adherent 
objects to an Anchor as shown in Fig. 5. Once the user 
drags the Anchor to different sizes of the doll houses as 
shown in Fig. 6, system will change the whole geometry 
to fit the customized design automatically as shown in 
Fig. 7 and Fig. 8. In this case, four constraint conditions 
are used to specify the constraint relationship. In 
compliance with Table 2, the effects of these constraint 
conditions are explained as following. In condition one, 
the adherent objects will be stretched company with the 
Anchor, i.e. sizes will be changed. In condition two, the 
adherent objects will not change their sizes but retain the 
relative distances with the Anchor on left direction. In 
condition three, the adherent objects will not change their 
sizes but retain the relative distance with the Anchor on 
right direction. On condition four, the adherent objects 
will be stretched to change their sizes but retain the 
relative distances with the Anchor on both left and right 
directions. Meanwhile, all information about tool-paths 
shall be updated. The tool library is specified according 
to the available tools in the machining center, which 
includes tool material, tool dimension, tool type, etc. 
 
6. Conclusion 
By manipulating such a constraint-based operation, 
we can expect jobs to be performed as follows. First, 
define an Anchor as a master object. Second, specify 
constraint rules on adherent objects. Finally, connect the 
adherent objects to the Anchor. Once the user disturbs 
the dragging points, all the adherent objects will be 
stretched in company with the Anchor. The solver 
generates geometric models automatically and 
hierarchically when sufficient constraint relationships 
between geometric objects are given. We must maintain 
the consistency of the geometric model when the 
dimensions of the model change. Also, complete the 
design and tool-path generation on the internet. 
In this paper we present a case study to demonstrate 
how to make a wooden doll house and furniture. By 
examining this development model, all different 
operations can be quickly and easily integrated based on 
knowledge-based design using graph representation. 
Computer-Aided Design 1998; 28(10):831-41. 
[18] Bouma W, Hoffmann CM, Fudos I, Cai J, Paige R. A 
geometric constraint solver. Computer-Aided Design 
1995; 27(6):487-501. 
[19] Fudos I, Hoffmann C.M. A graph-constructive 
approach to solving systems of geometric constraints. 
ACM Transactions on Graphics 1997; 
16(2):179-216. 
[20] Hoffmann CM, Kim KJ. Towards valid parametric 
CAD models, Computer-Aided Design 2001; 
33(1):81-90. 
[21] Fernando T, Murray N, Tan K. P. Wimalaratne, 
Software architecture for a constraint-based virtual 
Environment. Proceedings of the ACM symposium 
on Virtual reality software and technology; 1999. 
[22] Wang Y, Chen L, Huang Z, Wu J, Zhong Y. A 
History-Independent Modeling-Oriented Approach 
to Solve Geometric Constraints Between Features in 
3D Space. International Journal Advanced 
Manufacturing Technology 2005; 25:334-42. 
[23] Lai YL. Advancement of Integrated CAD/CAM 
Software System. PhD thesis. National Chung-Hsing 
University; 2004. 
 Eng M, Camarata K, Do EYL, Gross M. Designing 
a Physical Construction Kit for 3D Modeling. 
Generative Computer Aided Design Systems 
conference, Carnegie Mellon University, Pittsburgh, 
2004. 
[24] Sommerville I. Software engineering. Sixth ed. 
Wokingham: Addison-Wesley; 2001. 
[25] Brooks R. Towards a theory of the cognitive 
processes in computer programming. International 
Journal of Human-Computer Studies 1999; 
51:197-211. 
[26] Maryhauser A, Vans AM. Program comprehension 
during software maintenance and evolution. 
Computer 1995; 28:44-55. 
[27] Whitefield A. Human-computer interaction models 
and their roles in the design of interactive systems. 
Cognitive ergonomics: Understanding, learning and 
designing human-computer interaction. London: 
Academic Press; 1990. 
[28] Newell A, Simon HA. Human problem solving. 
Englewood Cliffs: Prentice Hall; 1972. 
[29] McDermid JA. Software engineer's reference book. 
Oxford: Butterworth-Heinemann; 1991. 
[30] Wood WH, Agogino AM. A Case-based Conceptual 
Design Information Server for Concurrent 
Engineering. Computer- Aided Design 1996; 
28(5):361-9. 
[31] Kao YC, Lin GC. CAD/CAM collaboration and 
remote machining. Computer Integrated 
Manufacturing Systems 1996; 9(3):149-60. 
 
Fig. 1. A hierarchical constraint relationship between 
objects. 
 
Fig. 2. Two different stretching groups Base-1 and 
Base-2. 
 
Fig. 3. Final solutions with different constraint 
definitions. 
出席國際學術會議心得報告 
                                                             
計畫編號 96-2221-E-212-023- 
計畫名稱 智慧型電腦輔助製造系統 
出國人員姓名 
服務機關及職稱 
賴元隆 
大葉大學 機械與自動化工程 助理教授 
會議時間地點 自 2008年 4月 25日  至  2008年 4月 27日  義大利/羅馬 
會議名稱 The International Conference on Industrial Systems Engineering (ICISE 2008) 
發表論文題目 Development of Machinable Ellipses by NURBS Curves 
 
一、參加會議經過 
本次會議在歐洲義大利羅馬舉行，由 WASET 國際學術組織所舉辦的研討會(見
http://www.worldacademyofsciences .org/)，其主題為「International Conference on Computer, 
Electrical, and Systems Science, and Engineering (CESSE)」，其下共有五個次級研討會，包
括本人所參與的 ICISE以外，尚有另外四個：ICODE、ICEIT、ICTE、和 ICET，因此，
吸引相當多國際學者參與各場次的論文發表。這些學者分別來自美國、丹麥、德國、英
國、希臘、馬來西亞、南韓、利比亞、挪威、土耳其、日本、以色列、伊朗、比利時、
中國、印度、…和地主國義大利等。會議從 4月 25日至 4月 27日於義大利羅馬Hotel Clodio 
Roma舉行，三天共有十個場次的論文發表會，大約 90篇文章。本次會議皆為正式宣讀
之論文，並無壁報論文的展示，本人於 4月 26日下午的第八場次口頭宣讀論文一篇，三
天期間聆聽多個場次的論文發表並與各國學者交流。 
 
 
二、與會心得 
本次研討會在每個時段僅安排一個場次進行，因此有機會可以聽到每一個場次的演
講。會議中除了學界的學術論文外，還包含多篇產業界發表的資料，例如 IBM等知名公
司。例如有一篇 Afzeri 博士所發表的論文頗吸引本人，論文題目為「Pin type Clamping 
Attachment for Remote Setup of Machining Process 加工程序之遠距設定夾持附件銷類
   
Abstract—Owning to the high-speed feed rate and ultra spindle 
speed have been used in modern machine tools, the tool-path 
generation plays a key role in the successful application of a 
High-Speed Machining (HSM) system. Because of its importance in 
both high-speed machining and tool-path generation, approximating a 
contour by NURBS format is a potential function in CAD/CAM/CNC 
systems. It is much more convenient to represent an ellipse by 
parametric form than to connect points laboriously determined in a 
CNC system. A new approximating method based on optimum 
processes and NURBS curves of any degree to the ellipses is presented 
in this study. Such operations can be the foundation of tool-radius 
compensation interpolator of NURBS curves in CNC system. All 
operating processes for a CAD tool is presented and demonstrated by 
practical models.  
 
Keywords—Ellipse, Approximation, NURBS, Optimum.   
I. INTRODUCTION 
UE to the widespread use of NURBS-based curve 
representation and motion control, the demand of 
High-Speed Machining (HSM) is increasing. In the application 
of HSM, one of the important components which are often 
neglected is the tool-path formed strategy. The successful 
application of HSM can only be realized in associating with 
proper CAM functions. There are many methods of drawing an 
ellipse, including foci, trammel, concentric-circle, 
oblique-circle, parallelogram [1], two-circle and four-center [2] 
methods. The ellipses may be regarded as a distortion of a circle 
by unequal scale factors in two directions. It is simple but not 
efficient for traditional tools to deal with, like scale and offset. 
It is much more convenient to represent an ellipse by 
parametric form than to connect points laboriously determined 
in a CNC system. Recently, Rosin [3] has made an impressive 
survey and comparison on four-arc approximation to ellipses. 
Qians [4] proposed an analytical function to find optimum arcs 
to approximate an ellipse by maximum error function. It has 
been widely used in CAD field for many years and is gradually 
applied in CAM area with the prevalence of NURBS 
 
 
Yuan L. Lai is with the Department of Mechanical and Automation 
Engineering, Da-yeh University, Changhua, Taiwan, R.O.C. (phone: 
+886-4-8511888; fax: 886-4-886-4-8511224, e-mail:  yllai@mail.dyu.edu.tw) 
Jian H. Chen is with the School of Physical Therapy, Chung Shan Medical 
University, Taichung, Taiwan, R.O.C.  
Jui P.  Hung is with the Department of Automation Engineering, National 
Chin-Yi University of Technology, Taichung, Taiwan, R.O.C.  
interpolators equipped in CNC controllers. With NURBS 
interpolation, the machining of sculptured surfaces is carried 
out on a series of NURBS curves rather than a large number of 
short lines or arcs, which is the case of CNC controllers 
equipped with linear and circular interpolators only. This 
results in more fluid tool paths, makes the tool change its 
moving direction more smoothly and maintains a higher 
average feed rate. 
Although approximations to circular arcs and full circles by 
parametric forms have been investigated [5-9], there has been 
very little work published on ellipses approximation using 
NURBS format. A real elliptic part can be made by the 
corresponding cutting paths guided by tool-radius 
compensation interpolator. In addition, these operations based 
on parametric curves offset algorithms [10-16].  
Fig. 1 illustrates the cutting task of NURBS-based CNC 
machining [17]. In modern CAD/CAM systems, more and 
more profiles are represented in parametric forms to meet the 
requirement of HSM. Many researchers have developed real 
time parametric interpolators for curve generation using 
NURBS basis function [18-22]. Some major commercial 
controller manufacturers have brought NURBS operations into 
industry, such as Fanuc 15M/16M [23] and Siemens 840D [24]. 
Once the spline format is sent to the controller, the processor 
directly interpolates the segments at extremely tiny intervals. 
The architecture of the controller has look-ahead features that 
will change the feed-rate dynamically to adapt the spindle to 
rapid changes in direction.  
This report tells a method based on optimum processes and 
NURBS curves of any degree to represent ellipses. By 
implementing the proposed algorithm on approximations for 
ellipses and ellipses offset, the results show accurate 
performances evidently. It can be made as comprehensive as 
one can image, the larger the number of control points is, the 
higher the quality of effectiveness is.  
The organization of the chapter is as follows. In section 2 the 
procedures for acquiring initial conditions are described. 
Section 3 discusses and builds global error functions and 
section 4 optimizes locations and weights of all control points. 
Examples and comparisons are illustrated in section 5. In 
section 6, the generated tool paths are verified through NURBS 
machining and close this study.  
  
Yuan L. Lai, and Jian H. Chen, and Jui P. Hung 
Development of Machinable Ellipses by NURBS 
Curves 
D 
PROCEEDINGS OF WORLD ACADEMY OF SCIENCE, ENGINEERING AND TECHNOLOGY VOLUME 28 APRIL 2008 ISSN 1307-6884
PWASET VOLUME 28 APRIL 2008 ISSN 1307-6884 154 © 2008 WASET.ORG
 The procedure using the proposed algorithm to obtain the 
initial condition is as follows:  
 
1. Form a matrix equation to represent the curve using the 
NURBS format.  
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
=
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
ijkijkjkjk
kikkk
kikkk
kikkk
jj P
P
P
P
tNtNtNtN
tNtNtNtN
tNtNtNtN
tNtNtNtN
tD
tD
tD
tD
...
)(.)()()(
.....
)(.)()()(
)(.)()()(
)(.)()()(
)(
...
)(
)(
)(
3
2
1
,,3,2,1
3,3,33,23,1
2,2,32,22,1
1,1,31,21,1
33
22
11
 , 
jnk ≤+≤≤ 12    
]][[][ PND =              (6) 
 
2. From step 1, if [N] is a Square Matrix then 
][][][ 1 DNP −=                 (7) 
3. If [N] is a Non-Square Matrix then 
]][[][ PND =       
][][]][][[][ 1 DNNNP TT −=         (8) 
[P]: unknown, [D]: known.  
 
4. In order to get [N], determine the parameters it , 
∑
∑
=
−
=
−
−
−
= l
s
ss
i
s
ss
i
DD
DD
t
t
2
1
2
1
max
 , 2≥l  
max
2
1
2
1
t
DD
DD
t l
s
ss
i
s
ss
i ∑
∑
=
−
=
−
−
−
= , 2≥l      (9) 
5. Solve the above equations to find [P] 
Repeat the above process, two NURBS curves )(tCa  and 
)(tCb  are obtained by specifying two different numbers of 
control points. In order to acquire a precise approximating 
curve, a bigger control point number is provided to )(tCa . The 
other one is provided a reasonable control point number to 
acquire a implementing curve )(tCb , which is expected to store 
fewer control points. This control point number depend on the 
major/minor ratio. Two NURBS curves are obtained to be the 
initial conditions. If there is no pressing reason for doing 
otherwise, here B-Spline should be defined as: No multiple 
control points. Open uniform knot vector. The format can be 
accepted by every CAD/CAM/CNC system presently in use. 
All default weights iw  are assigned one to each control point 
of the NURBS curve, which is the same as B-spline curve. By 
using the evaluating bound error function, the implementing 
curve )(tCb  will be modified to optimum conditions in section 
3.  
 
Fig. 2 Illustration of tangent and normal vectors of ( )tC  
 
B.  Approximating Offset Curve 
Second, the initial offset point-sequenced curve is sampled 
based on normal direction of the original curve, as shown in 
Fig. 2. Sampled points can be obtained by 
 
)()()( tndtCtCd
G⋅+=         (10) 
where )(tnG  is the unit normal vector of )(tC , d is the offset 
distance.  
 
22 )()(
))(),(()(
tytx
txtytn ′+′
′−′=G ,   )0,0())(),(( ≠′′ tytx    (11) 
Repeat the same procedures as described in previous section, 
an approximating offset curve ( )tCd  can be obtained. A 
corresponding NURBS curve )(tCe  is formed by ( )tCd . This 
offset NURBS curve also can be acquired by equation (4). 
Same as above, by using the evaluating bound error function, 
the implementing curve )(tCe  will be modified to optimum 
conditions in section 3. It seems the simplest way is to set 
parameter ][ it  spread the curve regularly.  
III. BUILD EVALUATING BOUND ERROR FUNCTIONS  
Equivalent Approximating Curves 
There were two popular approximating error measures at 
finite sample points along )(tC  by computing equations (13) 
and (15) in earlier studies.  
)()()( tCtCt ab −=ε                    (12) 
Minimize maximum Euclidean distance:  
))()(max())(max(1 tCtCtE ab −== ε         (13) 
or 
2)()()( tCtCt ab −=ε          (14) 
Minimize maximum squares distance:  
))()(max())(max( 22 tCtCtE ab −== ε         (15) 
 
The above measuring errors represent local variations. They 
need to be transformed to measure global variations throughout 
PROCEEDINGS OF WORLD ACADEMY OF SCIENCE, ENGINEERING AND TECHNOLOGY VOLUME 28 APRIL 2008 ISSN 1307-6884
PWASET VOLUME 28 APRIL 2008 ISSN 1307-6884 156 © 2008 WASET.ORG
 EBE equals to zero if orthogonality and exact distance are 
preserved.  
One purpose of this EBE function tries to maintain a constant 
distance d  between offset and base curves. The other more 
significant purpose can rectify these two curves approaching in 
the same direction.  
 
 
Fig. 3 Regularize the parameters of it  and jt  
The average Evaluating Bound Error EBEE  equals to zero if 
orthogonality and exact distance are preserved. Due to the 
convenience of comparing both base and offset curves, this 
study regularizes the parameters it  uniformly at finite m  
segments. The illustration of related curve’s phenomenon is 
shown in Fig. 3. There are two intentions of this error function, 
as shown in Fig. 3, one purpose of this EBE function tries to 
maintain a constant distance d  between offset and base curves. 
The other more significant purpose can rectify these two curves 
approaching same direction.  
IV. LOCATIONS AND WEIGHTS OPTIMIZATION 
This study used a radiating web-like search algorithm to 
detect optimum positions. In this method, optimum parameters 
should be defined first, i.e. radius step stepr , angle step stepθ  
and convergence mind . 
A program algorithm is offered below to help current control 
points to find the current optimum locations during each 
iteration.  
------------------------------------- 
Begin 
Compute initial iniE  
Set inicurrent EE =  
Set Searching_step 1=stepd  
stepnow dr =  
Do until minddstep <  
Do i = 1 to n_ang (
step
angn θ
π2_ = ) 
Set new location for current control point ip  
)cos( inowxix rpp θ+= , )sin( inowyiy rpp θ+=  
Compute iE  
If i=1 or inow EE >  then inow EE =  and inow pp =  
Loop i 
If nowcurrent EE >  then 
nowcurrent EE =  and stepnownow drr +=  and 
nowcurrent pp =  
Else 
stepnownow drr −=  and 5/stepstep dd =  
Endif 
Loop 
End 
------------------------------------- 
 
The default initial search-radius step 1=stepr . From the 
above algorithm, the stepd  is getting smaller and smaller, when 
it is less than convergence mind , i.e., mindrstep < , the search 
process will stop on this control point. During each evaluating 
iteration, we perturb the control points npp ~1  to evaluate the 
area error. Each control point change will affect the GBE 
function and influence the next searching iteration stage. Thus 
it may change the final convergence situation of the optimum 
solution. In order to meet 0G  continuity, the first and last 
control points were fixed at the exact positions. The second and 
thn)(  control points are restricted to locate at the tangent 
vectors of the start and end points of an ellipse, thus ensure 
NURBS curves can meet the requirement of 1G  continuity.  
A program algorithm is offered below to help current control 
points to find the current optimum weights during each 
iteration. This subroutine needs to be treated twice, one is 
positive direction, and the other is negative direction.  
------------------------------------- 
Begin 
Compute initial error iniE  
Set no_max = 5, no_err =  
Set inicurrent EE =  
Set Searching_step 1=stepd  
Do until no_err > no_max 
stepii dww +=  
Compute nowE  
If currentnow EE <  then 
nowcurrent EE =  
no_err=0 
Else 
stepii dww −=  
5/stepstep dd =  
no_err=no_err+1 
Endif 
Loop 
End 
------------------------------------- 
PROCEEDINGS OF WORLD ACADEMY OF SCIENCE, ENGINEERING AND TECHNOLOGY VOLUME 28 APRIL 2008 ISSN 1307-6884
PWASET VOLUME 28 APRIL 2008 ISSN 1307-6884 158 © 2008 WASET.ORG
 study, where code “G05 P10000” and code “G05 P0” are used 
to activate and turn off the HPCC function, respectively. In 
addition, “G06.2” is the cutting instruction, P is the order of 
NURBS, K represents knots and R represents their associated 
weights.  
 
 
Fig. 8 Tool-path generation of ellipses 
  
Fig. 9 MDF-board (Medium Density Fiberboard) machining of 
ellipses 
 
TABLE I 
MACHINING CODES FOR THE ELLIPSES USING NURBS 
Outer NURBS tool-path Inner NURBS tool-path 
G05 P10000 
P5 K0 X0. Y-66.005 R1. F30000 
K0 X-17.706 Y-66.002 R1. 
K0 X-43.677 Y-60.753 R1.047 
K0 X-103.174 Y-40.73 R1.019 
K0 X-99.535 Y40.486 R1.027 
K1 X-29.327 Y68.157 R1.027 
K2 X29.323 Y68.146 R1.027 
K3 X99.547 Y40.499 R1.027 
K4 X103.151 Y-40.746 R1.019 
K5 X43.7 Y-60.745 R1.047 
K6 X17.694 Y-66.003 R1. 
K7 X0. Y-66.005 R1. 
K8. 
K8. 
K8. 
K8. 
K8. 
G05 P0 
G05 P10000 
P5 K0 X0. Y-53.995 R1. F30000 
K0 X-15.546 Y-53.974 R1. 
K0 X-36.107 Y-49.614 R1.068 
K0 X-90.574 Y-34.851 R1.028 
K0 X-86.291 Y34.496 R1.039 
K1 X-24.236 Y55.54 R1.038 
K2 X24.219 Y55.523 R1.039 
K3 X86.344 Y34.518 R1.038 
K4 X90.476 Y-34.876 R1.027 
K5 X36.19 Y-49.601 R1.066 
K6 X15.516 Y-53.971 R1. 
K7 X0. Y-53.995 R1. 
K8. 
K8. 
K8. 
K8. 
K8. 
G05 P0 
 
   
Fig. 10 A MDF-board elliptic box 
VI. CONCLUSION 
This study introduces an accurate algorithm for ellipse 
approximation, an algorithm based on optimum processes and 
NURBS curves of any degree. In such a way, the original data 
used to define NURBS curves, which includes control points, 
weights and knots, will be transmitted into controllers as 
G-codes. The entire curve which was once described by many 
blocks of short lines or arcs now requires a single program 
block only. As a result, the size of NC programs can be greatly 
reduced. The size reduction is up to 1/10 to 1/100 relative to a 
linear-interpolation part program. This partially solved one of 
the disadvantages of applying linear and circular interpolations 
in HSM - large size of NC programs for complicated 
geometries. NURBS interpolation is one type of curve 
interpolation. To take advantage of the capability, one 
requirement is a CAM system capable of outputting NURBS 
tool paths. This method is serviceable in engineering 
applications. The proposed method detects optimum locations 
for each control point by perturbing them with a radiating 
web-like search algorithm. These control points form an 
accurate ellipse with a uniform knot vector which can be 
accepted by any modern CAD/CAM/CNC system. By 
implementing the similar processes but different error functions, 
an offset curve can be obtained with NURBS representation. 
Next stage of this research, by refining the searching 
correlation between control point positions and corresponding 
weights, the proposed operating model possibly work on 
approximation to general curves with NURBS curves. Such 
operations can be the foundation of tool-radius compensation 
interpolator of NURBS curves in CNC system.  
 
REFERENCES   
[1] F.E. Giesecke, A. Mitchell, H.C. Spencer, I.L. Hill, R.O. Loving, J.T. 
Dygdon,  Engineering Graphics, Macmillan, 1985. 
[2] C. Jensen, and J.D. Helsel, Engineering Drawing and Design, 
McGraw-Hill, 1985. 
[3] P.L. Rosin, A survey and comparison of traditional piecewise circular 
approximations to the ellipse, Computer Aided Geometric Design, 16, 
1999, pp.269-286. 
[4] W.H. Qian, and K. Qian, Optimising the four-arc approximation to 
ellipses, Computer Aided Geometric Design, 18, 2001, pp.1-19. 
[5] C. Blanc, and C. Schlick, Accurate Parametrization of Conics by NURBS, 
IEEE Computer Graphics and Applications, 16(3), 1996, pp.64-71. 
[6] J.M. Carnicer, E. Mainar, J.M. Pena, Representing circles with five 
control points, Computer Aided Geometric Design, 20, 2003, pp.501-511. 
[7] J.J. Chou, Higher order Bezier circles, Computer-Aided Design, 27, 1995, 
pp.303-309. 
PROCEEDINGS OF WORLD ACADEMY OF SCIENCE, ENGINEERING AND TECHNOLOGY VOLUME 28 APRIL 2008 ISSN 1307-6884
PWASET VOLUME 28 APRIL 2008 ISSN 1307-6884 160 © 2008 WASET.ORG
