 2
另外就是設計樣式探勘演算法[4,13]。本研
究於第二期研究期間提出了框架傳遞樣式
模 型 (FRPM ，  frame-relayed pattern 
model) ，如圖(一)所示，以其對序列進行
詳細的密碼子(codon)分析，FRPM 與採用
樣式頻率分析的方法[5]類似，但是它提供
更精確詳細的樣式頻率資訊以供更深入的
分析。 
 
圖一：FRPM 模型 
在以 FRPM 模型為序列分析的基礎之
下，本研究於第三期提出多面向序列樣式
(MFSP， multi-faceted sequence pattern)探
勘系統的設計構想，計畫於序列資料集中
探 勘 計 算 導 向 樣 式 (COP ， 
computation-oriented patterns)；COPs 是四
面向(4-faceted)的序列樣式，圖(二)為 COP
的 示 意 圖 ， 其 包 含 了 表 現 形 式
(expression)、位置(location)、範圍(range)
與權重(weight)，其為本研究計畫率先提出
的新穎概念。 
 
圖二： COP: computation-oriented pattern 
 
三、結果與討論 
 
為實現以 FRPM為基礎來探勘COP的
理想，本研究設計了一個多面向序列樣式
(MFSP， multi-faceted sequence pattern)探
勘系統。 MFSP由兩個元件構成，一是深
廣 度 結 合 密 碼 子 分 析 元 件 (DBFCA, 
depth-breadth fused codon analysis)，另一是
以 PSO[6,12]和 ANN[11,16]為基礎的敏感
度 分 析 [2,18] 元 件 (hPASA, hybrid 
PSO-ANN sensitivity analysis)，MFSP的系
統架構如圖(三)所示。 
 
圖三： MFSP 系統架構 
COP 樣式又再依本質上的不同區分成
單一框架樣式(UFP, uni-frame pattern)與多
重框架樣式(MFP, multi-frame pattern)，如
圖(四)所示。UFP是侷限於一個框架內但數
量眾多的短長度樣式，而MFP則是橫向分
佈於序列上的小聚落叢集樣式。 
 
圖四： UFPs in 5SS and 3SS 
在實現 MFSP 系統後，為驗證其有效
性(effectiveness)與可靠性(reliability)，本研
究計畫將其應用於人類第一號染色體的間
斷子(intron)序列，資料集分為 5 端剪接點
(5SS，5’ splice site)與 3端剪接點(3SS，3’ 
splice site)兩個子集，長度經由前期的研究
成果[8]決定為擷取 101 核酸，5SS 和 3SS
間斷子序列集分別有 22,448條序列樣本；
而於 5SS和 3SS資料集所探勘得到的UFPs
和MFPs分別列於表(一)與表(二)，COP樣
式的四面向資訊：表現形式(expression)、
位置(location)、範圍(range)與權重(weight)
皆明列於表中。 
 
表一：UFPs in 5SS and 3SS 
 4
MFSP 系統效能的驗證結果列於表
(三)。在右邊的是未加入權重資訊時的系統
效能，f1 measure的值可達 0.87的水準；
而表的左邊則上再加上COP樣式中的權重
資訊，可以看到 precision，recall和 f1三個
檢測值都全面提升了一些，此正可以看出
MFSP系統設計中以PSO-ANN進行的敏感
度分析而得到的權重資訊確時有其效果。
由此效能檢測實驗的結果看來，本研究所
設計的多面向序列樣式探勘系統 MFSP 是
為一個有效與可靠的序列樣式探勘系統，
預期其可廣泛應用於各種基因體序列的樣
式探勘。 
 
表三：MFSP系統效能的驗證 
 
五、參考文獻 
1. Abhijit A Patel and Joan A Steitz. Splicing 
double: insights from the second spliceosome. 
Nat Rev Mol Cel l Biol, 4(12):960–970, 2003. 
2. D M. Steiger and R Sharda. Analyzing 
mathematical models with inductive learning 
networks. European Journal of Operational 
Research, 93(2):387–401, 1996. 
3. G D Stormo, T D Schneider, and L M Gold. 
Characterization of translational initition stes in 
e. coli. Nucleic Acids Res, 10(9):2971–2996, 
1982. 
4. G D Stormo. Dna binding sites: representation 
and discovery. Bioinformatics, 16(1):16–23, 
2000. 
5. J W Fickett and C S Tung. Assessment of 
protein coding measures. Nucleic Acids Res, 
20(24):6441–6450, 1992. 
6. J. Kennedy and R. Eberhart. Particle swarm 
optimization. In IEEE International Conference 
on Neural Networks, volume 4, pages 
1942–1948, 1995. 
7. Kenzie D MacIsaac and Ernest Fraenkel. 
Practical strategies for discovering regulatory 
dna sequence motifs. PLoS Comput Biol, 
2(4):e36, 2006. 
8. Liou SW, Huang YF: Investigating the Intrinsic 
Differences in Flank Regions of Exon-Intron 
Junction Sites. In BMEI (2), Volume 2, IEEE 
Computer society 2008:96–101. 
9. M J Moore. Intron recognition comes of age. 
Nat Struct Biol, 7(1):14–16, 2000. 
10. P A Sharp. Splicing of messenger rna precursors. 
Science, 235(4790):766–771, 1987. 
11. P. Werbos. Beyond Regression: New Tools for 
Prediction and Analysis in the Behavioral 
Sciences .PhD thesis, Harvard University, 
Cambridge, MA, 1974. 
12. R Eberhart and Y Shi. A modifed particle swarm 
optimizer. In Proceedings of the IEEE 
International Conference on Evolutionary 
Computation, pages 69–73, 1998. 
13. S F Altschul, M S Boguski, W Gish, and J C 
Wootton. Issues in searching molecular 
sequence databases. Nat Genet, 6(2):119–129, 
1994. 
14. Saurabh Sinha. On counting position weight 
matrix matches in a sequence, with application 
to discriminative motif ?nding. Bioinformatics, 
22(14):e454–63, 2006. 
15. T. Cover and P. Hart. Nearest neighbor pattern 
classi?cation. Information Theory, IEEE 
Transactions on, 13(1):21–27, 1967. 
16. Tom M. Mitchell. Machine Learning. 
McGraw-Hill, New York, 1997. 
17. Xin Chen, Lingqiong Guo, Zhaocheng Fan, and 
Tao Jiang. Learning position weight matrices 
from sequence and expression data. Comput 
Syst Bioinformatics Conf, 6:249–260, 2007. 
18. Y Yoon, T Guimaraes, and G. Swales. 
Integrating artificial neural networks with 
rule-based expert systems. Decision Support 
Systems, 1994. 
報告內容應包括下列各項： 
一、參加會議經過 
第十屆企業資訊系統國際研討會於九十七年六月十二日至六月十六日在西班牙巴
塞隆納 Barceló Hotel Sants 飯店召開。會議地點就在巴塞隆納市區，離巴塞隆納國際
機場車程約 30 分鐘，交通很便利。會議地點在飯店二樓七個會場進行，會場還提供免
費有線及無線網路供與會者上網。會議第一天有四個會前 Workshops 進行。第二天有大
會開幕、ㄧ場 Keynote Presentation、和十個 Sessions 分為五個會場同時進行。第三
天ㄧ場 Keynote Presentation、和二十四個 Sessions 分為六個會場同時進行。第四天
一場 Keynote Presentation、和二十五個 Sessions 分為七個會場同時進行。最後一天
有一場 Keynote Presentation、和六個 Sessions 分六個會場同時進行。這次發表的論
文共 406 篇，其中口頭報告論文 245 篇、海報論文 161 篇，來自台灣的論文有 7篇。本
人於第四天發表論文，跟國外學者互動熱絡。 
 
二、與會心得 
參加本次國際會議感觸良多，尤其能與來自世界各地的知名學者及專家進行學術交
流，獲益甚多。這個研討會除了第七屆在美國舉辦外，其他都是在歐洲舉辦，所以參與
的學者以歐洲人居多，未來會議地點可能還是在歐洲各地，因為明年開會地點是在義大
利米蘭。主辦單位 INSTICC 相當熱誠款待，舉如用餐的準備、餘興節目的安排，都盡到
地主之誼，讓與會的學者都覺得不虛此行。這次本人參與了幾個有興趣的場次，如
Databases and Information Systems Integration；其中有幾個研究主題甚佳，可考
慮作為未來研究的方向。會場大部分的發表者都有出席，而且反應熱絡，值得國內學術
單位學習。 
 
三、建議 
首先感謝國科會在本人專題研究計劃下核給出席國際會議的補助，得與國際知名學
者進行學術交流。儘管在專題研究計劃下核給出席國際會議的機會不易，在此還是建議
國科會應多鼓勵國內學者參與國際會議以增廣見聞並吸收新知；另外國內學術單位也應
積極爭取舉辦知名的國際會議以提昇國際學術知名度，當然會場地點的選擇是相當重
要，國內舉辦過的國際會議地點大多侷限在大學校院，如能在名勝風景區舉辦，則較能
吸引國際知名學者參與。 
 
四、攜回資料名稱及內容 
大會論文集、光碟片、及未來國際會議宣傳資料 
 
五、其他 
無 
 
 2 RELATED WORK 
In principle, our research is based on the DOM API 
(i.e., Application Program Interface) which is 
supported by most native databases to access and 
manipulate XML documents. Although DOM API 
provides several interfaces to manipulate XML 
documents, we only focus on elements, attributes, 
and texts since they are the most important theme of 
data sharing. Similar to XML document trees, the 
Document Object Model (i.e., DOM) represents 
XML documents as trees, as shown in Figure 1. 
 
Figure 1: DOM tree representation. 
Till now, there are two classifications in the 
previous researches on concurrency control 
manipulation with DOM API. One is XML 
Transaction Coordinator (Haustein, 2004) that 
provides a taDOM tree for storing XML documents, 
and proposed the taDOM protocol to ensure 
serializability. The other one is Natix that proposed 
Doc2PL, Node2PL, NO2PL, and OO2PL protocols 
(Helmer, 2004) to ensure serializability. Since 
OO2PL has been verified to have the best 
performance, our research stretches OO2PL. 
Although OO2PL acquires locks on the pointers of 
nodes (i.e., the first child, the last child, the previous 
sibling, and the next sibling), OO2PL only classifies 
operations into observer and mutator ones. In order 
to enhance the concurrency degree, our protocol 
distinguishes operations more detailedly. 
3 DLP 
3.1 Operation Conflicts 
The operations in our protocol consist of eight types: 
R, N, IB, AP, UP, RN, RM, and RP standing for 
Read, Navigate, Insert-Before, Append, Update, 
Rename, Remove, Replace, respectively. R and N 
are both read operations, but R is for the 
manipulation of nodes and N is for the navigation of 
paths. 
We define a transaction T as a sequence of 
DOM API operations. Operation conflicts may occur 
when the operations from different transactions are 
interleaved with each other, thereby producing 
incorrect results. The criterion of correctness is 
based on the serializability of concurrent 
transactions. In order to analyze the conflicts 
between operations, we classify operations into 
content operations and structural operations. Content 
operations consisting of R, UP, and RN denote the 
ones which manipulate data values at nodes. 
Structural operations consisting of N, IB, AP, RM, 
and RP denote the ones which navigate or modify 
the structure of a DOM tree. The structural 
operations get involved in the pointers within a 
node. 
Different from that R reads the content of a 
target node (i.e., node name or text value), N reads 
the pointer of each node (i.e., the first child or the 
next sibling, et al.) along the path specified by a 
transaction. Next, RM (or RP) is similar to N, but it 
modifies the pointer to the target node into nil (or 
the pointer to the replacing node). Finally, IB (or AP) 
modifies the previous sibling pointer (or the last 
child pointer) of the target node into the pointer to 
the new node. However, not only the relevant 
pointer of the target node but also the pointers of 
related nodes should be modified together.  
Basically, the two kinds of operations would not 
conflict with each other, since content operations 
only manipulate node values, whereas structural 
operations only deal with the DOM structure. 
However, always a transaction executing a content 
operation has to use structural operation N to reach 
the target node. Thus, while these two kinds of 
operations work on the same target node, the 
involved structural operations would conflict with 
themselves.  
As mentioned above, we summarize the 
operation conflicts in Table 1 and 2. Within the 
matrix, symbols “○” and “×” denote the concurrent 
operations are OK and in conflict, respectively. 
Beside symbols “ ○ ”  and “ × ” , we also use 
symbol “ △ ”  to denote the concurrent operations 
are in conflict in some situation. 
Table 1: Conflict matrix of content operations. 
 R UP RN 
R ○ ○ × 
UP ○ × ○ 
RN × ○ × 
ICEIS 2008 - International Conference on Enterprise Information Systems
106
  
Figure 2: Locks issued on a DOM tree. 
incompatibility, T3 would remove node n3 
successfully. 
Besides, a possible schedule for the example 
following DLP is illustrated as shown in Figure 3. 
There, P- and X-lock with a subscript denote on 
what pointer they are issued; i.e., F for First child, L 
for Last child, P for Previous sibling, and N for Next 
sibling. T1 and T2 cannot be executed concurrently 
after step 7, since SC-lock on node n6 issued by T1 
would exclude W-lock on node n6 issued by T2. T2 
can acquire W-lock on node n6 and continue 
execution only after T1 releases SC-lock on node n6 
at step 11. 
 
Figure 3: Schedule for the example. 
4 PERFORMANCE 
EVALUATION 
4.1 Simulation Model 
In order to compare the performances among DLP, 
OO2PL, and taDOM, a simulation model is 
proposed, as shown in Figure 4. The model 
programmed with General Purpose Simulation 
System (i.e., GPSS World) consists of a transaction 
generator, several queues, a concurrency control 
mechanism to schedule transactions under these 
three protocols, and an object mechanism to access 
document nodes. 
 
Figure 4: Simulation model. 
4.2 Experiments 
The workload parameters used in the simulation can 
be classified into two types (i.e., transaction 
behavior and system environment), as shown in 
Table 4. The transaction behavior related parameters 
include 1) number of operations in a transaction (i.e., 
NOT), 2) percentages of exclusive operations (i.e., 
PEO), 3) transaction arrival time (i.e., TAT), and 4) 
restart time (i.e., RT). The system environment 
related parameters include 1) document sizes (i.e., 
DS) and 2) degree of multiprogramming (i.e., DMP). 
Finally, Table 5 shows all operational time cost. In 
the experiments, OO2PL and DLP have the same 
time cost, whereas taDOM has 1.5~2 times cost of 
them. The reason is that since the document 
structure in taDOM is different from the original 
DOM structure, it takes more time to execute 
operations. 
Table 4: Workload parameters. 
transaction behavior 
NOT 10~130 
PEO 25%, 50%, 
TAT 20 (μs) 
RT 3 (μs) 
system environment 
DS(in nodes) 781,3906, 9531 
DMP 1~18 
ICEIS 2008 - International Conference on Enterprise Information Systems
108
