p. 2 
中文摘要及關鍵詞: 
 
生物資訊是近年新崛起的一向新興領域，其結合了生物基因體計畫
產生出之大量序列資料以及資訊學之資料貯存採掘之應用。由於非
常大量序列產生，造成搜尋此對生物序列是非常費時而且不利於生
物學者研究的重要課題。隨著日益增多的基因體序列資料，利用叢
集式伺服器系統以及網格計算來協助生物序列搜尋有其必要性，但
是目前建構叢集式伺服器以及網格運算的工具尚在開發階段，並不
是非常容易使用尤其是管理，造成原來推動網絡的分散式資源再利
用的美意無法推展。一個方便而且自動設定的叢集式系統是一定要
的目標。目前以 BSD 架構為基礎的新 Mac 作業系統上內建了 Xgrid 
的解決方案以及 openDarwin  中  Bonjour 的 x86 自由軟體解決方
案，以便利快速而且自動連結設定跨網域的叢集式運算系統。 本研
究計畫是針對在生物資訊領域使用率相當高的序列分析軟體 
BLAST，做出非常便利使用的網路使用介面。由於 BLAST 是一般生物
研究室日常使用的軟體，而運算時間需消耗相當運算資源。因此建
立一個高速運算的 BLAST 叢集，便是許多大量使用序列比對的單位
迫切需要。 在現今的 Mac OS X 作業系統已內建了很方便的
Bonjour 簡化版網路連結功能套件，十分便於使用 Mac OS X 作業
系統的機器相互溝通，建立連結而完全不需要管理者進行繁複的網
路設定。利用此簡化版網路連結功能套件，我們可以非常容易地建
立網域內所有 Mac OS X 作業系統電腦的連結，加入 Apple 已內建 
Xgrid 管理介面於系統中，一般使用者可以在最短時間，開啟 
Xgrid 服務立即加入現有 Xgrid 為架構的網路系統，而不需太多而
繁複的設定。我們將 BLAST 常用程式套件，加入 Mac 電腦立即可
以參加大型序列比對運算，而簡易的 Xgrid 設定更兼顧了使用者的
考量。我們可以設定在一般使用者工作負擔輕時，無 CPU 負擔時自
動加入網路而不影響使用者工作。由於其方便性，預定會鼓勵同一
單位內的 Mac OS X 電腦加入運算叢集，提高單位內的電腦使用效
能，為方便更多生物學者使用，不要用指令列方式，我們在此開放
原始碼計畫下，建立了簡易使用介面以方便一般生物學者做比對搜
尋序列之用。 
 
生物資訊; 生物序列搜尋; Xgrid 
 
 
 
 
 
p. 4 
Introduction and significance: 
 Our laboratory has devoting much effort to develop bioinformatic 
tools for experimental research purposes and we have used the human 
dbEST database for the discovery of human genes and cSNP. Novel 
human genes could be identified by searching EST databases with query 
sequences of xenolog origins, which we use the term of comparative gene 
identification (CGI) for this kind of approach. For example, it is common 
to use newly identified yeast or mouse sequences to search human dbEST 
data set in order to identify their human orthologs. CGI approach was 
demonstrated to be beneficial by providing a better alignment scaffold 
with protein sequence queries. We have first used the completed C. 
elegans proteome as a template to assist human gene identification from 
EST data sets. With the available 18,452 C. elegans protein sequences 
analyzed, we found that 7,390 sequences could lead to identification of 
novel human genes. Further investigation of these 7,390 sequences has 
identified 150 novel human full-length transcripts. Further analysis of the 
Drosophila 14,100 protein sequences; we identified several more novel 
human genes, including the human crooked neck gene. This comparative 
gene identification approach provides a new technique for dbEST data 
reduction and for assembling human gene contigs. As the increasing 
number of EST entries as well as the diversified cDNA libraries used for 
EST sequencing, it has becoming the richest resource for expressed genes 
in many different individual. We were able to identify large number of 
cSNPs by our modified CGI bioinformatics approach. 
 Expressed sequence tag (EST) is nucleotide sequences generated 
from “single-pass” cDNA sequences of the ends of randomly selected 
clones from many different cDNA libraries. The rapid expansion of 
dbEST has created a richest resource in biomedical researches in gene 
identification and characterization as well as the development of cDNA 
microarray platform. Therefore, many laboratories around the world are 
involving in the EST cDNA library and microarray project. With a few 
hundreds to hundreds of thousands clones per project, a user friend EST 
sequence management system is necessary for small laboratories to 
organize and manage their EST sequences and cDNA clones. The system 
design is build with the needs of small biological laboratories in mind. 
We have established previously laboratory oriented EST sequence 
management software. This system has a web-based automated pipeline 
for annotating ESTs, including (1) DB search and annotation with 
keyword annotation feature and functional annotation based on the Gene 
Ontology terms. (2) Automated sequence clustering among user ESTs. (3) 
Laboratory based authorization management including member/group 
management; project management and custom DB management. (4) 
p. 6 
4. Internet agents volunteer to donate cycles with large-scale “@Home” 
calculations. 
5. Part-time agents run Xgrid tasks when otherwise not in use. 
 
 
Results and discussion: 
 In the beginning, we try to employ the mpiBLAST package and 
test the performance. The ROCK cluster solution was used first for easy 
set up and testing. Following several bench mark experiments, we have 
believed the mpiBLAST clustering approach will be limited due to the 
heavy I/O requirement in BLAST database search. We can not increase 
the best CPU usage to more than 6 CPU. One example of bench marking 
is illustrated below: 
 
  
 Therefore, we decide to focus on the Xgrid integration, not the 
mpiBLAST implementation for practical reasons. Since there are many 
Mac OS based machines in our Institute already, it is possible to form a 
computation cluster solution with the built in Xgrid module. It is very 
easy to set up the Mac system to join the Xgrid BLAST cluster in the 
system preference panel as shown in next page. 
qseq61
qseq62
qseq63
qseq64
qseq65
qseq66
qseq67
qseq68
qseq69
qseq70
p. 8 
With only few steps, the Xgrid environment can be established and 
function within very short time. The BLAST job can be submitted to the 
Xgrid controller using a simple command (one example below using 
Xgrid controller in host 192.168.0.10): 
xgrid -h 192.168.0.10  -p xxxxxxxx  -job submit blast.sh seq.txt 
The finished job can be viewed by another command: 
xgrid -h 192.168.0.10  -p xxxxxxxx -job results -id 41 -so 
/Users/blast/Desktop/out.txt 
 
The Xgrid cluster can be monitored with the build in AP Xgrid admin, we 
have 10 dual G4 systems joining the Xgrid BLAST cluster: 
 
 
 
