  I
一、 中文摘要 
在此計畫我們探討k次方樹根問題（k-th tree root problem）與Steiner k次方樹根問
題（k-Steiner root problem）。給一樹狀圖T，它的k次方圖，記為Tk，是一個節點
集與T相同，但兩節點在T中距離在k以內即是相鄰的圖形。 如果G是T的k次方
圖，則T稱為G的一個k次方樹根(k-th tree root)。給定一個圖形G與一個正整數k，
所謂的k次方樹根問題（k-th tree root problem）就是要找一個樹狀圖T使得T的k
次方圖就是G，如果T存在的話。所謂的Steiner k次方樹根問題（k-Steiner root 
problem）是k次方樹根問題的一種推廣：給定一個圖形G與一個正整數k，要找
的樹狀圖T滿足（1）T的節點集V(T)包含G的節點集V(G)且（2）T的k次方圖限制
在V(G)上恰好就是G。在k 為給定的狀況下，此問題稱為方根樹問題（Steiner方
根樹問題）。在此，G必是有弦圖。 
關於3-Steiner樹根問題，透過有弦圖的一個分解樹與maximal cliques和
minimal vertex separators在Steiner root的特殊拓樸結構， 設計了第一個多項式時
間的演算法。此初步結果已發表於WG2007，已改寫擴充為完整的論文正在投稿
中。  
 
關鍵詞： Steiner k次方樹根問題、k次方樹根問題、有弦圖 
  III
目錄 
 
一、 On 3-Steiner Root Problem -------------------------------------------1  
 
to have degrees (in the sense of unrooted tree) at least three, it is called the phylogenetic
k-leaf root problem. Such a tree T (if exists) is then called a phylogenetic k-leaf root of
G.
A tree T is called a steiner tree of vertex set V if V ⊆ V (T ). We define the Steiner-tree
k-root problem as follows:
Definition 3 Given a graph G and positive integer k, the Steiner-tree k-root problem
asks for a Steiner tree T of V (G) such that G is the subgraph of T k induced by V (G).
If such a tree T exists, it is called a Steiner-tree k-root of G. If we also require that all
Steiner nodes of T have degrees at least three, the problem is called phylogenetic Steiner-
tree k-root problem and we call such a tree a phylogenetic Steiner-tree k-root of G.
Nishimura, Ragde, and Thilikos [23] show that the k-leaf root problem can be solved
in O(|V |3) time for k ≤ 4. Lin et. al. show that the phylogenetic k-leaf root problem can
be solved in O(|V | + |E|) time for k ≤ 4 [21]. Chen et. al. show that the phylogenetic
k-leaf root problem can be solved in O(|V |+ |E|) time for any k if G has a phylogenetic
k-leaf root with degree at most δ.
2 Preliminaries
For any set S, let |S| denote the cardinality of S. All graphs in this paper are undirected
and simple, and have no self-loops. Let NG(v) denote the set of neighbors of v in graph G
and NG[v] denote NG(v) ∪ {v}. For a subset W ⊆ V , NG(W ) denotes
⋃
x∈W NG(x) \W .
Two distinct vertices u and v are true twins in G if NG[u] = NG[v]. For a subset U of
V (G), defineG−U to be the subgraph ofG induced by V (G)\U , i.e., G−U = G[V (G)\U ].
A separator of a connected graph G is a subset S of V (G) such that G− S has at least
two components. A separator S is a u-v separator if vertices u and v are in different
connected components of G − S. A separator (u-v separator resp.) S is minimal if no
proper subset of S is a separator (u-v separator resp.). A minimal vertex separator is a
minimal u-v separator for some u and v. Note that a minimal vertex separator is not
necessarily a minimal separator, as a minimal u-v separator may contain a minimal x-y
separator for some other pair of vertices x, y. A minimal vertex separator S is maximal
if there no other minimal vertex separator properly contains S. Let ∆(G) denote the
set of all minimal vertex separators of G, ∆∗(G) = {S ∈ ∆(G)|Sismaximal}, and
∆(v) = {S ∈ ∆(G) | v ∈ S}, the set of minimal vertex separators of G containing v. Let
K(G) denote the set of maximal cliques of G. For a vertex v ∈ V (G), let K(v) denote
the set of maximal cliques of G containing v. A vertex v in a graph G is simplicial
if NG[v] induces a clique. A perfect elimination ordering is an ordering of the vertices
of G, vσ(1), . . . , vσ(n), such that vσ(i) is a simplicial vertex in the subgraph induced by
{vσ(j) | i ≤ j ≤ n} for 1 ≤ i ≤ n.
For x, y ∈ V (G), the distance between x and y in G, denoted by dG(x, y), is the length
of a shortest path from x to y in G. For X ⊂ V (G) and y ∈ V (G) \ X, the distance
between X and y, denoted by dG(X, y), is the minimum among distances between y and
vertices in X.
2
v7
v14
v21
v27
v31 v32
v30v24
v15v10v1
v12
v2
v19
v25
v28
v22
v17
v29
v26
v20
v23 v18 v11
v16
v8
v3
v13
v6
v9 v5
v4
Figure 1: A tree T .
Definition 6 Let T be a tree. T consists of a single vertex if and only if δ(T ) = 0. T is
called an edge if δ(T ) = 1. T is called a star if δ(T ) = 2 and a twin-star if δ(T ) = 3.
Remark 1 Let T be a tree. The center of T consists of a vertex if and only if δ(T ) is
even. The center of T consists of two adjacent vertices if and only if δ(T ) is odd.
A branch at a vertex u of a tree T is a maximal subtree containing u as a leaf. Thus
the number of branches at u is the degree of u.
Definition 7 Let v and e = (u,w) be a vertex and an edge of a tree T , respectively. For
any natural number i, the i-neighborhood of vertex v in T , NT (v, i) is the set of vertices
at a distance up to i from v in T , i.e., NT (v, i) = {u | u ∈ V (T ) and d(u, v) ≤ i}. In
particular, NT (v, 0) = {v} and NT (v, 1) = NT [v].
The i-neighborhood of edge e in T , NT (e, i), is the union of i-neighborhoods of its
end-vertices, i.e., N(e, i) = N(u, i) ∪N(w, i).
We use N(v, i) and N(e, i) for NT (v, i) and NT (e, i), respectively, if T is understood
without ambiguity.
Let T (v, i) and T (e, i) denote the subtrees of T induced by NT (v, i) and NT (e, i),
respectively.
We will use the tree T shown in Fig. 1 to illustrate some aforementioned definitions
where V (T ) = {v1, v2, . . . , v32}. It appears in [22]. By definitions, we have following
equalities.
δ(T ) = 10;
NT (v15, 1) = {v10, v12, v15, v24};
NT (v15, 3) = {v10, v12, v15, v24, v1, v2, v21, v27, v30};
NT ((v15, v24), 2) = {v10, v12, v15, v24, v1, v2, v21, v27, v30}.
4
Definition 10 For simplicity, we use MVS for minimal vertex separator and MC for
maximal clique.
Remark 2 Suppose G is a connected induced subgraph of T k. For any MC K of G,
1 ≤ δ(T (K)) ≤ k. For any MVS S of G, 0 ≤ δ(T (S)) < k.
The following lemma can be proved easily from the definition of tree powers.
Lemma 5 Suppose G is an induced subgraph of T k and S is an MVS of G. For any
two real vertices x and y in different connected components of G[V \ S], respectively,
dT (x, y) > k.
Corollary 1 Suppose G is an induced subgraph of T 3 and S is an MVS of G. For any
two real vertices x and y in different connected components of G[V − S], respectively,
dT (x, y) > 3.
Definition 11 Let S be an MVS of G. Use KG(S) to denote the set {K | K ∈
K(G) and K ∩ S ∈ ∆(G)}. Use ∆G(S) for the set {S ′ | S ′ ∈ ∆(G) and S ′ ⊆ S}.
Let K be an MC of G. Use ∆G(K) to denote the set {S | S ∈ ∆(G) and S ⊂ K}.
Definition 12 Let S be a family of subsets of V (G) and U ∈ S. We say that U is
maximal with respect to S if S is not properly contained in any other set in S.
For simplicity, we say an MVS is maximal if it is maximal with respect to ∆(G).
An MC of a connected chordal graph contains at least an MVS.
Lemma 6 Suppose G is an induced subgraph of T 3. Let S be any minimal vertex sepa-
ratorof G with |S| > 2 and K be a maximal cliqueof with K ⊃ S. Then T (S) is a star
and T (K) is a twin-star. Furthermore, the central vertex of T (S) is one of the central
vertices of T (K).
Definition 13 Assume that S is a minimal vertex separator. Use c(S) to denote the
number of connected components of G[V − S].
Lemma 7 Suppose G is a connected chordal graph. Let S be any minimal vertex separa-
torof G, K be any maximal cliqueof G, and C be any connected component of G[V − S].
Then
1. K \ S is contained in a connected component of G[V \ S].
2. NG(C) ⊆ S and NG(C) is a minimal vertex separator.
3. If S is a maximal minimal vertex separator, then there exists exactly one maximal
cliqueK ′ such that K ′ \NG(C) ⊆ C and NG(C) ⊂ K ′.
6
For an MVS S = {v} of G and a connected component C of G[V \ S], define a Steiner
tree 3-root T1∗(C, S) of G[C + S] as follows if G[C ∪ S] having a Steiner tree 3-root:
if T12(C, S) 6= ∅ then
T1∗(C, S) is a tree in T12(C, S);
else if T11(C, S) 6= ∅ then
T1∗(C, S) is a tree in T11(C, S);
else if T10(C, S) 6= ∅ then
T1∗(C, S) is any Steiner tree 3-root of G[C ∪ S].
else
Report that G has no Steiner tree 3-root.
end if
Lemma 8 Suppose G is a chordal graph having a Steiner tree 3-root and S = {v} is an
MVS of G. In O(n) time we can obtain a Steiner tree 3-root of T of G from T1∗(C, S)’s
of all connected components C’s of G[V \ S] by identifying vertex v in all T1∗(C, S)’s.
Let G be an induced subgraph of the 3-th power of a tree T . Let S be a maximal
minimal vertex separatorof G and C1, . . . , Ck, be the connected components of G− S.
Lemma 9 Let C be a connected component of G − S. Then there is a unique maximal
clique K in G such that NG(C) ( K ⊂ C ∪NG(C) or a unique maximal minimal vertex
separatorS ′ in G such that NG(C) ( S ′ ⊂ C ∪NG(C).
Proof. S = NT [a] ∩ V (G) for some a in V (T ). It is obvious that V (C) is in a
branch B at a of T . Let {b} = B ∩ NT (a). First we consider the case that V (C) is
contained in one branch at b of B. Case distT (C, b) = 1. In this case NG(C) = S
and there is exactly one vertex w ∈ C of distT (w, b) = 1. If there is a vertex b′ ∈ S
such that distT (b
′, w) = 3, then S ∪ {w} form a maximal clique in G. It is the unique
clique in C ∪ NG(C) containing NG(C). Otherwise, if there is a vertex b′ ∈ S such that
distT (b
′, w) = 2, then S = {a, b} ∩ V (G) and S and NT (w) ∩ V (G) form a maximal
clique, which is the unique one containing S. Otherwise, S = {b}. In this case, any
maximal cliquein C ∩ NG(C) containing S must contain w. There is only one maximal
cliquecontaining S, otherwise {b, w} is a minimal vertex separator, which contradict the
assumption that S is maximal minimal vertex separator.
Case distT (C, b) = 2. In this case NG(C) = S ∩ {a, b}. If a ∈ NG(C), then NG(C)
and NT (w)∩V (G) form a maximal clique, which is the unique maximal cliquecontaining
NG(C). Otherwise, NG(C) = {b}. Let W = {x|x ∈ V (C), distT (x, b) = 2} 6= ∅. If there
are more than one maximal cliquein C∪NG(C) containing NG(C), then their intersection
is W ∪ {b}, which is a maximal minimal vertex separator.
Case distT (C, b) = 3. In this case, b is a real vertex and NG(C) = {b}. C is in one
branch of B at w. Thus, {x|distT (x, b) = 3, x ∈ C} and b form maximal clique in G.
Next, we consider the case that V (C) is contained in more than one branches of T at
b. In this case, distT (C, b) = 1. Thus, NG(C) = S. The rest of proof is the same as the
above case on distT (C, b) = 1.
With the above lemma, we may have a decomposition of an induced subgraph of T 3
for some tree T . 1. Select an arbitrary maximal minimal vertex separatorof G. Let
8
(d) Π(S, a, ∅, {aj}, {a}, {a1, . . . , ak} \ {aj}).
(e) Π(S, a, ∅, ∅, {aj}, {a, a1, . . . , ak} \ {aj}).
5. |S| ≥ 3 and S = {a1, . . . , ak} and the center is a Steiner vertex.
(a) Π(S, β, ∅, {a1, . . . , ak}, ∅, ∅).
(b) Π(S, β, ∅, ∅, {a1, . . . , ak}, ∅).
(c) Π(S, β, {aj}, ∅, {a1, . . . , ak} \ {aj}, ∅).
(d) Π(S, β, ∅, {aj}, ∅, {a1, . . . , ak} \ {aj}).
(e) Π(S, β, ∅, ∅, {aj}, {a1, . . . , ak} \ {aj}).
In the case that a maximal minimal vertex separatorS ′ is a child of maximal minimal
vertex separatorS. Let T be a Steiner 3-root of the induced subgraph of the component
represented by S ′, which is a connected component of G−S. By Lemma 9, S∩S ′ = {a} is
also a minimal vertex separator. Let the type of T respect to S ′ is Π(S ′, ?, S1, S2, S3, S4).
The the type of T respect to S∩S ′ is Π(S∩S ′, α, ∅, {a}, ∅, ∅). Then T can be augmented
to a Steiner 3-root T ′ of the subgraph induced by (V (T ) ∩ V (G)) ∪ S. In this case, the
center of S is a Steiner vertex, and the type of T ′ respect to S is Π(S, β, ∅, {a}, ∅, S \{a}).
If S ′ is a minimal vertex separator properly contained in a maximal minimal vertex
separatorS. Let T be a Steiner 3-root of the subgraph induced by the vertices of the
connected components C having NG(C) = S
′ and S ′. Suppose that the type of T respect
to S ′ is Π(S ′, ?, S1, S2, S3, S4). Let G′ be the subgraph induced by V (T ) ∩ V (G) ∪ S.
Consider that S ′ is of size 2. Then the center of S must be a real vertex a in S ′. If
S1 6= ∅, then there is no Steiner 3-tree root of G′. Otherwise, T can be augmented to a
Steiner 3-tree root of G′, with Π(S, a, ∅, S2, {a}, S \ S ′) as the type of T ′ respect to S.
Next consider the case that S ′ = {a} is of size 1. If S1 6= ∅ then there is no Steiner
3-tree root of G′. If S2 6= ∅ then the center of S must be a Steiner vertex. In this case
T can be augmented to a Steiner 3-tree root T ′ of type Π(S, β, ∅, {a}, ∅, S \ {a}). If
S1, S2 = ∅, the T ′ can be of type Π(S, β, ∅, ∅, {a}, S \ {a}) or Π(S, b, ∅, ∅, {a}, S \ {a}),
where b is the center of S.
Suppose G = (V,E) is a connected chordal graph and K is an MC of G where |S| = 1
for any S ∈ ∆(K). Let C be a connected component of G[V \ K]. Then NG(C) is an
MVS of G, NG(C) ⊂ K and |NG(C)| = 1. Compute T1∗(C,NG(C)) for every connected
component C of G[V \K]. We will show how to obtain a Steiner tree 3-root of G from
T1∗(C,NG(C))’s of all connected component C’s of G[V \K]. There are several cases.
1. The distance between C and NG(C) in T1∗(C,NG(C)) is greater than one for every
connected component C of G[V \K]. Construct a twin-star TK such that the central
vertices of TK are two Steiner vertices α and β and all vertices in K are leaves of
TK . For x ∈ K, the Steiner vertex that x is adjacent in TK can be anyone of α and
β. Obtain a tree T from TK and T1∗(C,NG(C))’s of all connected components C’s
by identifying vertex x in all trees for each x ∈ K, respectively.
2. There is exactly a connected component C of G[V \ K] such that the distance
between C and NG(C) is one and the distance between C
′ and NG(C ′) is greater
than one for any other connected component C ′ of G[V \ K]. Let v be the only
10
4. T211v(C, S) is the class of Steiner tree 3-roots T of G[C+S] satisfying the following
conditions:
• (u, v) ∈ E(T ).
• Vertex v is a leaf of T but u is not.
• Real(NT (u, 1)) = S.
5. T211u(C, S) is the class of Steiner tree 3-roots T of G[C+S] satisfying the following
conditions:
• (u, v) ∈ E(T ).
• Vertex u is a leaf of T but v is not.
• Real(NT (v, 1)) = S.
6. T210v(C, S) is the class of Steiner tree 3-roots T of G[C+S] satisfying the following
conditions:
• (u, v) ∈ E(T ).
• Vertex v is a leaf of T but u is not.
• S ⊂ Real(NT (u, 1)).
7. T210u(C, S) is the class of Steiner tree 3-roots T of G[C+S] satisfying the following
conditions:
• (u, v) ∈ E(T ).
• Vertex u is a leaf of T but v is not.
• S ⊂ Real(NT (v, 1)).
Lemma 10 Suppose G = (V,E) is a connected induced subgraph of T 3 of tree T where
S = {u, v} is an MVS of G. For a connected component C of G[V −S], either T22u(C, S)
or T22v(C, S) is empty if T22(C, S) is empty.
Proof. Assume that neither T22u(C, S) nor T22v(C, S) is empty. Then neither u nor
v is in any MVS in ∆(C). Let T be a tree in T22u(C, S) where β is the Steiner vertex
with NT (β, 1) = S. Let T
′ be the tree obtained from T by making vertex u a Steiner
vertex γ and adding a leaf vertex adjacent to β and make this leaf vertex the real vertex
u. Clearly T ′ is a tree in T22(C, S), a contradiction of the assumption that T22(C, S) is
empty.
12
Algorithm 2 Computing a Steiner tree 3-root of a chordal graph G
Input: A chordal graph G, a maximal MVS S = {u, v} of G where G has a Steiner tree
3-root T such that dT (u, v) = 2.
Output: A Steiner tree 3-root T of G where dT (u, v) = 2.
1: for each connected component C of G[V − S] where |NG(C)| = 1 do
2: TC ← T1∗(C,NG(C)).
3: end for
4: for each connected component C of G[V − S] where NG(C) = S do
5: if T22(C, S) is not empty then
6: Let TC be a tree in T22(C, S).
7: else if T22u(C, S) is not empty then
8: Let TC be a tree in T22u(C, S)
9: else if T22v(C, S) is not empty then
10: Let TC be a tree in T22v(C, S).
11: end if
12: end for
13: Obtain tree T from TC of all connected components C ofG[V−S] by identifying vertex
u, v, and the Steiner vertex β with Real(NTC (β, 1)) = S in all trees, respectively.
Algorithm 3 Computing a Steiner tree 3-root T of G[C + S] in T22(C, S)
Input: An MVS S = {u, v}, of chordal graph G = (V,E) having a Steiner tree 3-root T
of G[C + S] in T22(C, S).
Output: A Steiner tree 3-root T of G[C + S] in T22(C, S).
1: S must not be a subset of any MVS in ∆(G[C + S]).
2: Let K be the maximal clique of G such that S ⊂ K and K ⊆ C ∪ S.
3: Let TK be a twin-star such that the center vertices of TK are Steiner vertices γ and
β, u and v are leaves adjacent to β and all vertices in K \ S are leaves adjacent to γ
in tree TK .
4: if K = C + S then
5: Output tree TK as tree T and exit.
6: end if
7: for each connected component C∗ of G[V \K] where |NG(C∗)| ≥ 3 and C∗ ⊂ C do
8: Let TC∗ be a tree in T3∗γ(C∗, NG(C∗)).
9: end for
10: for each connected component C∗ of G[V \K] where |NG(C∗)| = 1 do
11: TC∗ ← T1∗(C∗, NG(C∗)).
12: end for
13: Obtain tree T from TK and TC∗ ’s of all connected components C
∗’s of G[V \K] with
C∗ ⊂ C by identifying vertex x in all trees for every vertex x ∈ K.
14: Output tree T .
14
Algorithm 5 Computing a Steiner tree 3-root T of G[C + S] in T211u(C, S)
Input: An MVS S = {u, v}, of chordal graph G = (V,E) having a Steiner tree 3-root T
of G[C + S] in T211u(C, S).
Output: A Steiner tree 3-root T of G[C + S] in T211u(C, S).
1: S must not be a subset of any MVS in ∆(G[C + S]).
2: Let K be the maximal clique of G such that S ⊂ K and K ⊆ C ∪ S.
3: Let TK be a twin-star such that the center vertices of TK are v and Steiner vertex β,
u is a leaf adjacent to v and all vertices in K \ S are leaves adjacent to β in tree TK .
4: if K = C + S then
5: Output tree TK as tree T and exit.
6: end if
7: for each connected component C∗ of G[V \K] where |NG(C∗)| ≥ 3 and C∗ ⊂ C do
8: Let TC∗ be a tree in T3∗β(C∗, NG(C∗)).
9: end for
10: for each connected component C∗ of G[V \K] where |NG(C∗)| = 1 do
11: TC∗ ← T1∗(C∗, NG(C∗)).
12: end for
13: Obtain tree T from TK and TC∗ ’s of all connected components C
∗’s of G[V \K] with
C∗ ⊂ C by identifying vertex x in all trees for every vertex x ∈ K.
14: Output tree T .
16
• The branch at γ containing u does not have any vertex in C.
3. T3vβ(C, S) is the class of Steiner tree 3-roots T of G[C + S] satisfying the following
conditions:
• There exists a Steiner vertex β ∈ S such that (u, β) ∈ E(T ) andReal(NT (β, 1)) =
S.
• All vertices in S − {v} are leaves of T and are adjacent to β.
• The branch at v containing β does not have any vertex in C.
4. T3γβ(C, S) is the class of Steiner tree 3-roots T of G[C +S] satisfying the following
conditions:
• There exist two Steiner vertices β, γ ∈ V (T ) such that (β, γ) ∈ E(T )
• All vertices in S are leaves of T and are adjacent to β in T .
• Real(NT (β, 1)) = S.
• The branch at γ containing β does not have any vertex in C.
For a two-tuple (C, S) where C is a connected component of G[V \ S], |S| ≥ 3, and
NG(C) = S, define Steiner tree 3-root T3∗β(C, S) of G[C + S] to be Steiner tree 3-
root T of G[C + S] where the central vertex of T (S) is a Steiner vertex β as fol-
lows:
if T3γβ(C, S) 6= ∅ then
T3∗β(C, S) is a tree in T3γβ(C, S);
else if T3vβ(C, S) 6= ∅ for some v ∈ S then
T3∗β(C, S) is a tree in T3vβ(C, S);
else
T3∗β(C, S) is undefined.
end if
For a two-tuple (C, S) where C is a connected component of G[V \ S], |S| ≥ 3, and
NG(C) = S, define Steiner tree 3-root T3∗u(C, S) of G[C + S] to be Steiner tree 3-
root T of G[C + S] where the central vertex of T (S) is a real vertex u ∈ S as fol-
lows:
if T3γu(C, S) 6= ∅ then
T3∗u(C, S) is a tree in T3γu(C, S);
else if T3vu(C, S) 6= ∅ for some v ∈ S then
T3∗u(C, S) is a tree in T3vu(C, S);
else
T3∗u(C, S) is undefined.
end if
Lemma 11 Suppose G is an induced subgraph of T 3, S ∈ ∆(G), |S| > 2, u ∈ S, and
C is a connected component of G[V − S]. If T3vu(C, S) is not empty for u, v ∈ S, then
every vertex in S − {u, v} is not in any MVS in ∆(G)−∆(S).
18
Algorithm 8 Computing a Steiner tree 3-root T of a chordal graph G with that the
central vertex of T (S) is real
Input: An MVS S, |S| ≥ 3, of chordal graph G = (V,E) having a Steiner tree 3-root T
such that the central vertex of T (S) is u ∈ S.
Output: A Steiner tree 3-root T of G such that the central vertex of T (S) is
u.
1: for each connected component C of G[V \ S] where NG(C) = S do
2: Let TC be a tree in T3∗u(C, S).
3: end for
4: for each connected component C of G[V − S] where NG(C) = {u, v} do
5: Let TC be a tree in T211v(C,NG(C)).
6: end for
7: for each connected component C of G[V \ S] where |NG(C)| = 1 do
8: TC ← T1∗(C,NG(C)).
9: end for
10: Obtain tree T from TC of all connected components C of G[V \ S] with NG(C) = S
by identifying vertex x in all trees for every vertex x ∈ S.
11: Output tree T .
Algorithm 9 Computing a Steiner tree 3-root T of G[C + S] in T3vu(C, S)
Input: A chordal graph G = (V,E), S ∈ ∆(G), |S| ≥ 3, u, v ∈ S, C is a connected
component of G[V \S], NG(C) = S, and G[C+S] has a Steiner tree 3-root T of G[C+S]
in T3vu(C, S).
Output: A Steiner tree 3-root T of G[C + S] in T3vu(C, S).
1: Let K be the maximal clique of G such that S ⊂ K and K ⊆ C ∪ S.
2: Let TK be a twin-star such that the center vertices of TK are v and u, all other vertices
in S are leaves adjacent to u and all vertices in K \ S are leaves adjacent to v in tree
TK .
3: if K = C + S then
4: Output tree TK as tree T and exit.
5: end if
6: for each connected component C∗ of G[V \K] where |NG(C∗)| ≥ 3 and C∗ ⊂ C do
7: Let TC be a tree in T3∗v(C∗, NG(C∗)).
8: end for
9: for each connected component C∗ of G[V \K] where |NG(C∗)| = 2 do
10: Let TC∗ be a tree in T21∗v(C∗, NG(C∗)).
11: end for
12: for each connected component C∗ of G[V \K] where |NG(C∗)| = 1 do
13: TC∗ ← T1∗(C∗, NG(C∗)).
14: end for
15: Obtain tree T from TK and TC∗ ’s of all connected components C
∗’s of G[V \K] with
C∗ ⊂ C by identifying vertex x in all trees for every vertex x ∈ K.
16: Output tree T .
20
Algorithm 11 Computing a Steiner tree 3-root T of G[C + S] in T3γu(C, S)
Input: An MVS S, where |S| ≥ 3 and u ∈ S, of chordal graph G = (V,E) having a
Steiner tree 3-root T of G[C + S] in T3γu(C, S) where γ is a Steiner vertex.
Output: A Steiner tree 3-root T of G[C + S] in T3γu(C, S).
1: Let K be the maximal clique of G such that S ⊂ K and K ⊆ C ∪ S.
2: Let TK be a twin-star such that the center vertices of TK are γ and u, all other
vertices in S are leaves adjacent to u and all vertices in K \ S are leaves adjacent to
γ in tree TK .
3: if K = C + S then
4: Output tree TK as tree T and exit.
5: end if
6: for each connected component C∗ of G[V \K] where |NG(C∗)| ≥ 3 and C∗ ⊂ C do
7: Let TC∗ be a tree in T3∗γ(C∗, NG(C∗)).
8: end for
9: for each connected component C∗ of G[V \K] where |NG(C∗)| = 1 do
10: TC∗ ← T1∗(C∗, NG(C∗)).
11: end for
12: Obtain tree T from TK and TC∗ ’s of all connected components C
∗’s of G[V \K] with
C∗ ⊂ C by identifying vertex x in all trees for every vertex x ∈ K.
13: Output tree T .
Algorithm 12 Computing a Steiner tree 3-root T of G[C + S] in T3γβ(C, S)
Input: An MVS S, where |S| ≥ 3, of chordal graph G = (V,E) having a Steiner tree
3-root T of G[C + S] in T3γβ(C, S) where γ and β are Steiner vertices.
Output: A Steiner tree 3-root T of G[C + S] in T3γβ(C, S).
1: Let K be the maximal clique of G such that S ⊂ K and K ⊆ C ∪ S.
2: Let TK be a twin-star such that the center vertices of TK are γ and β, all vertices in
S are leaves adjacent to β and all vertices in K \ S are leaves adjacent to γ in tree
TK .
3: if K = C + S then
4: Output tree TK as tree T and exit.
5: end if
6: for each connected component C∗ of G[V \K] where |NG(C∗)| ≥ 3 and C∗ ⊂ C do
7: Let TC∗ be a tree in T3∗γ(C∗, NG(C∗)).
8: end for
9: for each connected component C∗ of G[V \K] where |NG(C∗)| = 1 do
10: TC∗ ← T1∗(C∗, NG(C∗)).
11: end for
12: Obtain tree T from TK and TC∗ ’s of all connected components C
∗’s of G[V \K] with
C∗ ⊂ C by identifying vertex x in all trees for every vertex x ∈ K.
13: Output tree T .
22
Algorithm 14 Computing a Steiner tree 3-Root of G[C ∪ S] in T11(C, S)
Input: A chordal graph G, an MVS S = {v} of G, and a connected component C of
G[V \ S] where T11(C, S) 6= ∅.
Output: A Steiner tree 3-root of G[C∪S] in T11(C, S).
1: if C ∪ S is a clique then
2: Let T be a two-star such that the central vertices of T are all Steiner vertices.
3: Let the two central vertices of T be β and γ.
4: Let v be a leaf of T adjacent to β.
5: Let every vertex in C be a leaf of T adjacent to γ.
6: Output tree T and exit.
7: else if S ⊂ S ′ where S ′ ∈ ∆(G[C ∪ S]) and |S ′| ≥ 3 then
8: Let T be a Steiner tree 3-root of G[C ∪ S] such that the central vertex of T (S ′) is
Steiner and v is a leaf.
9: Tree T can be obtained by calling Algorithm 7 given graph G[C ∪S] and S ′ which
is an MVS of G[C ∪ S].
10: Output tree T and exit.
11: else if S ⊂ S ′ where S ′ is a maximal MVS in ∆(G[C ∪ S]) and S ′ = {u, v} then
12: Let T be a Steiner tree 3-root of G[C ∪ S] such that δ(T (S ′)) = 2, the central
vertex of T (S ′) is Steiner, and Real(NT (v, 1)) = {v}.
13: Tree T can be obtained by calling Algorithm 2 given graph G[C ∪S] and S ′ which
is a maximal MVS of G[C ∪ S].
14: Output tree T and exit.
15: else if S is not a subset of any MVS in ∆(G[C ∪ S]) then
16: Let K be the MC in K(G) such that v ∈ K and K ⊂ C ∪ S.
17: Let T be a Steiner tree 3-root of G[C ∪ S] such that T (K) is a twin-star, one of
the central vertices of T (K) is Steiner, denoted by α, (v, α) ∈ E(T ), and v is a leaf
of T .
18: if |S ′| = 1 for every S ′ ∈ ∆G[C+S](K) then
19: CAll Algorithm K1 to find such a Steiner tree 3-root of G[C + S].
20: else
21: Use Procedure 15 to find such a tree T .
22: end if
23: Output tree T .
24: end if
24
[6] Z.-Z Chen and Tatsuie Tsukiji, Computing bounded-degree phylogenetic roots of
disconnected graphs, Journal of Algorithms 59 (2006) 125–148.
[7] G. A. Dirac, On rigid circuit graphs, Abh. Math. Sem. Univ. Hamburg 25 (1961)
71–76.
[8] M. Dom, J. Guo, F. Hu¨ffner, and R. Niedermeier, Error compensation in leaf root
problem, in Proceedings of the 15th Annual International Symposium on Algorithms
and Computation (ISAAC 2004), Lecture Notes in Comput. Sci. 3341, Springer-
Verlag, Berlin, (2004) 389–401.
[9] M. Dom, J. Guo, F. Hu¨ffner, and R. Niedermeier, Error compensation in leaf power
problems, Algorithmica 44 (2006) 363–381.
[10] D. R. Fulkerson, and O. A. Gross, Incidence matrices and interval graphs, Pacjfic J.
of Math. 15 (1965) 835–855.
[11] F. Gavril, The intersection graphs of subtrees in trees are exactly chordal graphs, J.
Combin. Theory Ser. B 116 (1974) 47–56.
[12] S. K. Gupta and Amrinder Singh, On tree roots of graphs, Intern. J. Computer
Math. 73 (1999) 157–166.
[13] Frank Harary, Graph Theory, Addison-Wesley Publishing Company, 1969.
[14] Chin-Wen Ho and R. C. T. Lee, Counting clique trees and computing perfect elimi-
nation schemes in parallel, Infom. Process. Lett. 31 (1989) 61–68.
[15] W. Kennedy and Guohui Lin, 5-th Phylogenetic Root Construction for Strictly
Chordal Graphs, in Proceedings of the 16th Annual International Symposium on
Algorithms and Computation (ISAAC 2005), Lecture Notes in Comput. Sci. 3827,
Springer-Verlag, Berlin, (2005) 738–747.
[16] W. Kennedy, Guohui Lin, and Guiying Yan, Strictly chordal graphs are leaf powers,
to appear in Journal of Discrete Algorithms.
[17] H. Kong, G.Y. Yan, Algorithm for phylogenetic 5-root problem, Optimization Meth-
ods and Software (2003), submitted for publication.
[18] P. Sreenivasa Kumar and C. E. Veni Madhavan, Minimal vertex separators of chordal
graphs, Discrete Applied Math. 89 (1998) 155–168.
[19] P. Sreenivasa Kumar and C. E. Veni Madhavan, Clique tree generalization and new
subclasses of chordal graphs, Discrete Applied Math. 117 (2002) 109–131.
[20] Lap Chi Lau, Bipartite roots of graphs, in Proceedings of the fifteenth annual ACM-
SIAM symposium on Discrete algorithms (SODA 2004), (2004) 952–961.
[21] G.-H. Lin, P. E. Kearney, and T. Jiang, Phylogenetic k-root and Steiner k-root, in
Proceedings of the 11th Annual International Symposium on Algorithms and Com-
putation (ISAAC 2000), Lecture Notes in Comput. Sci. 1969, Springer-Verlag, Berlin,
(2000) 539–551.
26
