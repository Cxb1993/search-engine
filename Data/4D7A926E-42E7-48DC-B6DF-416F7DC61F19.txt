?????????????????????????????
?????????????????? 
???????? 
???????????????????????????
????????????????????:  
(1)???:  
????????????????????????
????????????????????????????
????????????????????????????
????????????????????????????
????????????????????????????
?????????? 
 
(2)???:  
???????????????????????
????????????????????????????
?????????????????????(responsive)??
????????????????????????????
?(tuning)?????????(?)?????????????
?????????????proactive? 
??????????????(?Project Console 
from Rational product suite, MS Project, WindChill, Primavera, 
Timeline, Work Bench, Project Scheduler, Agile???)?????
????????????????????????????
?????????(?WBS)???????????????
????????????????????????????
????????????????????????????
???????????????????????????
??(?Rational Suite ??Project Console)?????????
????????????????????????????
???? 
????????(???????????????????)
?????????????????????????? 
????????????????????????
????????????????????????????
????????????????????????????
????????????????????????????
????????????????????????????
????????????????????????????
????????????????????(?Flow engine)?
?????????????????? 
????????????????????????
???????????????CMMI????CMMI???
????????????????????????????
?CMMI?????????? 
?????????????????????????????
????????????????????????????
?????? 
? 1.????????????????????????????? ?? 
al. 2005]. A collaboration environment 
would also benefit from the situation of 
monitoring the project by the whole team, 
not the project manager himself. Therefore, 
collaborative management is required for 
software project management and tools for 
facilitating and aiding the collaborative 
environment becomes one of the research 
focuses.  
     
4. The concept of meeting flow 
management 
 
There are a number of methods 
regarding establishing and effectively 
managing collaborative environment. This 
paper presents another idea: modeling 
meetings that happen during software 
development and further managing meeting 
flows that organized by the meetings. 
Meetings are a common way to handle 
communication problems. However, like a 
double-edged sword, they can also be 
problematic. Numerous miscellaneous or 
fire- fighting meetings, both scheduled and 
unscheduled, are called every day. One 
expected result is daily, intensive meetings 
[Keil, et al., 2003]. Moreover, people 
usually do not pay too much attention to 
follow-up checks on the to-do lists created at 
the conclusion of most meetings. 
Organizations and project stakeholders 
spend much effort on ad-hoc meetings, yet 
there is no method to define and manage 
project meetings and integrate them into 
process flows to produce a more effective 
management style. 
Different meetings have different 
meeting objectives and agenda, and these 
can be prototyped in relevant meeting types. 
Meeting objectives can be modeled 
according to the needs of ad-hoc process 
guidelines, e.g. CMMI. In addition, meeting 
agenda could include certain critical 
document outputs, brainstorming laundry 
lists, or conclusions. Documents could be 
the work products resulting from specific 
practices in ad-hoc project practice 
standards, e.g., CMM/CMMI. In addition to 
reserved objectives and agenda, any extra 
and current issues can be added to the 
meeting during the preparation state or when 
the meeting proceeds. 
Therefore, the concept of the meeting 
flow project management has the following 
characteristics [Chen, 2005]: 
1. Modeling ad-hoc meetings happening 
during project development  
2. Getting the right information to the right 
people at the right opportunity: meetings 
3. Managing project’s process with 
meetings (Project development process 
model identified by meetings) 
4. Offering an collaborative environment 
for not only PM, but also the whole team 
to monitor project’s progress and resolve 
issues 
Current software tools do have the 
function of declaring ad-hoc documents. 
However, as mentioned earlier, they do not 
have a way to manage how the project 
documents are produced or to control the 
quality of the documents. The proposed 
method would continually control the 
outputs as each meeting is executed. 
 
5. The Computerized solution: MfPMIS 
 
The meeting-flow process model 
mentioned in this article can be further 
implemented as a computerized solution. 
With the help of computer technology, the 
meeting operation and the meeting 
workflow can be handled through 
computerized, GUI-based information 
systems.  
In the case of any geographical 
restrictions, meeting members may not be 
able to attend at the same place, which 
makes a meeting difficult to run. In addition, 
in order to speed up the administration 
processes and to serve management needs 
(e.g., meeting approval, meeting notification, 
and meeting document transfer and 
collection), there is a need for effective tools 
that help project teams operate and manage 
meetings and corresponding meeting 
  
 
 
 
 
Due to the space limitation, the 
following sections introduce the major use 
cases from the view point of the system user 
(high level management and the meeting 
host). When a software project is 
conceptualized or incepted, it needs to be 
registered in MfPMIS. Figure 4 shows the 
registration page for a new project. As the 
figure indicates, when a project is registered, 
it has to be specified the type of 
development SDLC mode (i.e. waterfall, 
incremental, et al.) for the software project. 
Scheduled start date and end date for that 
project can be specified if available, but are 
not necessary for a project that does not 
know exact start and end dates during the 
inception stage. 
In addition to the above information, 
project team members and the customer 
representative are assigned as well. Because 
MfPMIS is role-based, it would be OK for 
any change on the team members after the 
assignment has been made. 
 
 
 
 
 
 
 
After a project is incepted and is 
registered, a default meeting flow 
corresponding to the selected SDLC mode 
for the project is ready. Figure 5 and 6 below 
show the default meeting flow for the 
preparation phase (presale) of that project. 
The default meeting flow can be tailored due 
to, i.e. the sizes and the timelines of the 
projects.  
Different colors indicate different 
meeting statuses (A meeting object may 
have three states: in-preparation, 
under-progress, and accomplished). Three 
different colors, gray, blue and dark gray,  are 
used to indicate these three states 
correspondingly.  
The meetings on the main flow can be 
instantiated according to the serialized order 
shown in Figure 5 and 6. Relevant 
stakeholders can also set up time alerts for a 
meeting that is scheduled to be held at a 
specified time. 
 
Figure 4: Creating a new project in M fPMIS 
(A partial view)  
Figure 3: The meeting flow project management 
information system: M fPMIS 
  
 
 
 
 
 
A meeting is “accomplished” only 
when all the objectives and subjects are met; 
otherwise, the meeting stays “under 
progress” and thus needs to be called again 
until all the objectives (including any new 
issues) are met and relevant documents are 
finished and approved. 
Figure 10 and 11 illustrate such a 
situation. In these figures, a meeting (Project 
Feasibility Discussion) is under the second 
run because it was not completed all the 
agenda in its previous run. 
 
 
 
 
 
 
 
7. Monitoring project performance with 
MfPMIS 
 
A software project’s progress is visible 
via the progress of per meeting defined in 
the meeting flow particularly for the project. 
Furthermore, a common project monitoring 
resolution problem can be resolved with the 
help of MfPMIS.  
Current project management methods 
present a sliced monitoring style. Reviews, 
checkpoints, milestones are well defined and 
scheduled at a periodical basis. Yet between 
Figure 8: The management screen showing that 
a meeting is currently held 
 
Figure 9: The management screen showing that 
a meeting is currently held (cont’d) 
Figure 10: The screen for a meeting that is under 
the 2nd run 
Figure 11: The screen for a meeting that is 
under the 2nd run (cont’d) 
