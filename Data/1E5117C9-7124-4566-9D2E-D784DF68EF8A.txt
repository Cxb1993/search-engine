國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價值（簡要敘述
成果所代表之意義、價值、影響或進一步發展之可能性）、是否適合在學術期刊發表或申請專
利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 ■撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
研究以兩種方式處理本研究之多目標問題，一為確定性參數排程問題，另一使用模糊集合。前
者成果仍在撰寫中，另使用模糊集合方法之論文已被 SCI 期刊接受。 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價值（簡要敘述
成果所代表之意義、價值、影響或進一步發展之可能性）（以 500 字為限） 
本計劃第一年所研究問題為非相關平行機台排程，使用方法為將問題相關參數分為確定性
與非確定性兩種。演算法特性將配對方法納入解碼，使用權重式 ATCS 有效率求得單機排
程解，並使用多種目標權重同時求得多個區域非被支配解，實驗結果証實此法在大型工件
數與機台數在 NSGAII 與 SPEA2 方法下，以相同數量解比較下，皆遠優於不使用配對解碼。
另本研究修改 SPEA2 所發展之 CEMA 演算法，採用兩個母體，一個為精英解集合，另一
個為較劣解集合，同時採用競爭演化機制，可防止提早收斂而得到較優解。所發展之演算
法在多目標，每個目標為 Min-Max 或 Min-Weighted Sum，而所有目標皆屬同一類型或混合
兩種皆能發揮很好效果。 
 
 
 
 
performance of proposed algorithms: Purity, GD, Spread, Normalized hyper-volume (NHV), and 
pair-wise dominance contest (PDC). Our experimental results indicate that using WBM in decoding 
scheme will produce significantly better solutions than not using WBM, regardless of which 
algorithm is employed. The results also show that using random weights (RW) on objectives for 
evolution excels using fixed weights (FW). Finally, CEMA_RW performs best among all algorithms 
based on the same number of solutions calculated. 
Keywords: Multi-objective optimization, unrelated parallel machine scheduling, memetic algorithms, 
evolutionary algorithms, performance metrics 
 
1. 前言 
平行機台排程為單機排程問題的推廣，亦為彈性流線型排程之子問題，在業界應用很廣，
例如紡織業(Silva et al. 2006)、LCD 製造業(Chen 2009)、積體電路封裝(Yang 2009)、汽車組裝
廠(Agnetis et al. 1997)、PCB 組裝與製造(Alisantoso et al. 2003, Hsieh et al. 2003, Yu et al. 2004, 
Wu and Ji 2009)以及陶瓷磚製造(Ruiz and Maroto 2006)等。本計劃針對較廣泛之不相關平行機
台排程問題做探討，同時考慮兩個目標：總權重流程時間與總權重延遲時間。 
多年來，不相關平行機台排程問題之研究一直著重於單目標，幾個常用目標包括極小化
總完工時間(Piersma and Van Dijk 1996, Luis and Ruiz 2011)、總(權重)流程時間(Weng et al. 2001, 
Kim et al. 2009)、總(權重)延遲時間(Kim et al. 2002, Kim et al. 2003, de Paula 2010)、線性提早
與延遲時間(Bank and Werner, 2001)、共同交期(Adamopoulos and Pappis 1998)、與工件完工時
間變異數(Li et al. 2010) 等。求解方法包括廣泛式啟發式演算法、精確解求法、與撰寫數學模
式使用商業最佳化軟體等，有關平行機台排程問題之目標與求解方法，可參考 Logendran et al. 
(2007) and Allahverdi et al. (2008)。 
有關多目標平行機台排程問題之文獻相對較少，T’kindt et al. (2001)探討玻璃瓶子製造，
此為不相關平行機台問題極小化兩目標：機台工作負擔平衡與總利潤；Cochran et al. (2003)提
出兩階段多母體基因演算法求解，Gao (2010)提出人工免疫系統演算法求解極小化兩目標：總
完工時間及總提早與延遲時間，有關於多目標平行機台排程問題問題之文獻可參考 Hoogeveen 
(2005) and T’kindt and Billaut (2006)。 
2. 問題描述 
以下為描述 MO-UPMSP 問題所使用之符號解釋與數學模式： 
索引： 
m:  機台編號，m = 1,…, M 
j:  工件編號，j = 1,…, J 
M:  機台總數量 
J: 工件總數量 
archive; IA)，兩者依據上代表現競爭下代解之產生比例；(2) 使用權重配對解碼方式，改善解
之收斂性與分散性品質；(3) 使用 Fuzzy C means (FCM; Bezdek, 1981)保持兩貯存母體解之數
量。以下分別說明 CEMA 演算法之特性。 
3.1 競爭策略演化 
 令 GPt 代表第 t 代之演化母體 (generational population)，F1(GPt)為 GPt 第一線非被支配
解集合，|GPt| = N 為其個數。EAt 與 IAt 分別為第 t 代之效率解與非效率解之貯存母體，其個
數皆為 N 。rt 為使用 GPt  EAt.產生 GPt+1 個體數之比例，過程方式以
trtt
EAGP )(  表示，1-rt
則為使用 GPt  IAt.產生 GPt+1 個數比例。
trtt
EAGP )(  敘述如下： 
在 t 代時，計算 rt，亦即為 F1(GPt)內由 GPt-1  IA t-1.所產生之比例，此時便在 GPt  EAt.
以輪盤法選擇父母親以交配方式產生 Nrt  個數之 GPt+1，同時在 GPt  IAt.以輪盤法選擇交配方
式產生( tr1 ) N 個數之 GPt+1。之後將 GPt+1 之解依非支配概念排序，EAt+1.以 F1(GPt+1)  EAt.
之第一線前緣解產生，若其數量少於 N ，則逐次以第二、三等線前緣解補償之；若其數量多
於 N ，則以 Fuzzy C means (FCM)削減至 N 。對於 IAt+1.之處理，則以相反方式處理，在排序
後面非支配解前緣越優先納入。以下為 rt+1 之計算公式： 
1 1
1
1 1
| ( ) ( ) |
| ( ) |
tt t r t
t
t
GP EA F GP
r
F GP 



 


，其中為調整係數，使得 rt+1 < 1 
適應度函數計算方式如下： 
大致而言，採用與 SPEA2 類似方法。對每個 i(GPt EAt)，F(i) = R(i) + D(i)，其中，
( ) = |{ | ( ), }|t tS i j j GP EA i j  , 
( )
( ) = ( )
t ti j GP EA
R i S j
 
 , 
1
( ) =
2ki
D i
d 
。 ( )S i 代表有多少數量為
解 i 所支配， kid 則為與解 i 第 k 個最遠解之距離值，在本研究 0.5 ( )k N N
   
  
。 
圖 1 左邊描述 F(i)之(GPt  EAt)中計算方式，圖 1 右邊則描述 F(i)在(GPt  IAt)中之計算
方式。在圖 1左，S(a) = 1、S(b) = 3、S(f) = 2。F(b) = 0 因為 b 為非被支配解，F(f) =3 因為 f
為 b 所支配，而 f、h、j 被 f 所支配。解 j 為 b、c、f 所支配，故 F(j) = S(b) + S(f) + S(c) = 3 + 2 
+ 1 = 6。相對的，在(GPtIAt)中，每個解之適應度函數之計算方式則將最小化問題改為最大化
問題處理。 
 
採下列步驟： 
首先，對於超越上限之群組，以隨機方式挑選多餘之工件逐一將其放置於其它未滿上限
之群組，直到所有群組皆滿足上限；之後若有低於下限之群組，則隨機逐一從其它大於下限之
群組選取工件加入，直到所有群組皆滿足下限。 
3.3 交配與突變 
交配方式採用父母親每個基因比較，競爭結果採用隨機鍵之加總值是否大於 1，若是則選
擇母親基因，否則選擇父親基因；圖 2 為交配之一簡例。 
2.35 1.261.453.562.883.461.553.762.221.323.122.631.89 2.451.59
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
1.78 1.261.853.562.543.462.653.762.223.783.123.841.22 2.451.79
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
1.78 3.661.853.352.541.362.651.212.583.782.223.841.22 1.351.79
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
parent 1
parent 2
child
 
圖 2 交配例子說明 
當交配完成後，若有群組工件數量大於上限或小於下限，則採 3.2 節所述之修補措施，本研究
將稱此步驟為突變。 
3.4 權重目標搜尋方式 
本研究選擇固定權重(fixed weight，FW)與隨機權重(random weight，RW)兩種搜尋方式，
為使權重於解之搜尋有代表意義，搜尋過程中兩目標必須先標準化，此標準化參考解可使用
Nadir 目標值，過程中調整。以下說明兩種方法： 
(a) 當使用 FW 方式時，為求前緣散佈均勻，使用 7 種目標權重：{(w1, w2) = (1.0,0)、(0.8, 0.2)、
(0.6, 0.4)、(0.5, 0.5)、(0.4, 0.6)、(0.2, 0.8)、(0, 1.0)}等。每組權重演算一次，單機排程運算
則使用此組權重之 W-ATCS 求解，演化母體與貯存母體大小設為 20，演化世代數設為 100。
當解碼使用 WBM 時，每個子代個體運用 WBM 求到上述 7 種不同權重之區域非被支配解，
故共計算 20 x 100 x 7 x 7 = 98,000 個解；WBM 之計算時間為 O(n3)，其中 n 為群組數，故
此方式計算時間很短。當機台數為 10，此解碼方式可很迅速從 10!= 3628800 解中計算多個
(最多 7 個)區域非被支配解。 
當解碼不使用 WBM 時，為求公平比較需計算相同數量解；因此，對每個權重計算，演化
世代數設為 700。 
(b) 當使用 RW 方式時，則對每個個體皆從[0,1]中隨機產生一個權重，應用在單機排程上，而
在使用 WBM 之解碼上仍使用上述 7 種目標權重；演算世代數仍設為 100 代，重新啟動計
包括：NSGAII_FW，NSGAII_RW，SPEA2_FW，SPEA2_RW，CEMA_FW 以及 CEMA_RW。
所有演算法重複執行 10 次。 
本實驗之所有演算法皆使用 Visual Studio C++.NET 2008 撰寫，實驗環境為 Intel (R) Core 
(TM) i5-2400 @ 3.1 GHz and 4 GB DDR3。 
4.2 測試題產生方式 
本研究依 Lee and Pinedo (1997)自行產生中型(Moderate size; M)與大型(Large size; L)等兩
種測試例題，分別為：100 (工件) x 10 (機台) 與 200 x 10，每種測試題型各產生 3 題。 與 R
分別為 Due Date 之寬鬆變數與範圍變數，(, R) = (0.2, 0.8)代表 Due Date 較寬(Loose; L)，(0.5, 
0.5) 代表 Due Date 適中(Moderate, M)，(0.8, 0.2) 代表 Due Date 較緊(Tight; T)。符號 LT 為大
型題目(200x10)且 Due Date 較緊 ((, R) = (0.8, 0.2))，其測試例題求解困難度較高，反之 ML
則為較低。 
表 1 測試題資訊 
Problem size 
Test instances labeled with (, R) 
(0.2, 0.8) (0.5, 0.5) (0.8, 0.2) 
100 x10 ML01-03 MM01-03 MT01-03 
200 x 10 LL01-03 LM01-03 LT01-03 
 
4.3 演算法量測指標 
本研究使用 (1) proximity metric – Purity 與 GD；(2) diversity metric – Spread； (3) proximity 
and diversity metric - Normalized Hypervolume (NHV)；(4) Pair-wise dominance contest (PDC) 
等共五種量測指標進行演算法評估。 
4.4 單機排程效率分析 
本研究分別測試 3-opt 與 W-ATCS 進行單機排程求解，其權重式目標值為公式(4.1)，其中
iU 為目標 i 之目前最大值；W-ATCS 使用之公式參考 3.2 節。 
1 1 2 2
1 1
/ /
J J
j j j j
j j
w C U w v T U
 
   
       
   
   (4.1) 
本研究在各個權重組合下執行 100 次 3-opt 與使用 1 次 W-ATCS 法則進行單機排程求解，
使用三種測試題型：15 工件，20 工件以及 30 工件，( , ) (0.8,0.2)R  ，每種測試題型各 50 題，
依 Lee and Pinedo (1997) 所述方法產生，其結果如表 2-4 所示，由於兩目標值皆使用 nadir 解
值標準化關係，權重目標值皆小於 1。從表 2-4 可得知，各個組合下之最小化目標權重值，無
論從 Min、Avg 與 Max 觀之，W-ATCS 法則皆優於 3-opt 法則，且其計算時間較少，接近於 3
倍。演算法 3-opt 之 CPU time 為以 50 題為樣本，執行 1 題測試題之平均處理時間，每題為在
7 個權重目標下，執行 100 次 3-opt 之總和；W-ATCS 之 CPU time 為執行 1 題測試題之平均處
均值，其結論與表 5 一致；如表 6 之 MM 測試題，CEMA_RW 使用 WBM 其 NHV = 97.2%，
未使用 WBM 其 NHV = 16.5%。另隨著題目交期越緊，各演算法之 NHV 平均值有下降之趨勢。 
在計算時間上，使用 WBM 比不使用 WBM 來得有效率，此是由於計算解數量相同。當使
用 10 個機台時，解碼步驟首先須成 10 個群組，再使用 W-ATCS 求解 10 x 10 = 100 單機排程
解，之後再使用 WBM，同時找出 7 個不同或部分相同之區域非被支配解，而運算 7 次 WBM
之時間很快。當不使用 WBM 之解碼，求 7 個解則須產生 7 次編碼，每次編碼需計算機台-工
件群一次，再使用 W-ATCS 10 次求得 10 個機台單機排程解，最後再將兩目標值相加。兩者比
較下，不僅使用 WBM 解碼計算時間短，同時在相同編碼下，WBM 解碼每次解碼時是從 10! = 
3628800 解中同時找到多個區域非被支配解，而不使用 WBM 產生之解通常為這些區域非被支
配解所支配。 
 
 
圖 3 MT01 參考解前緣圖 
 
圖 4 LT01 參考解前緣圖 
CEMA_RW 24.7 0.1  26.4  0.2   24.1  0.1  25.2  0.4   24.7  0.2  26.1  0.2  
表 9 六種演算法使用 WBM 與否在 200 x 10 三種類型題目之平均計算時間 
Algorithm 
CPU time in seconds 
LL01-03  LM01-03  LT01-03. 
WBM No WBM  WBM No WBM  WBM No WBM 
 Av. Std. Av. Std.  Av. Std. Av. Std.  Av. Std. Av. Std. 
NSGAII_FW 68.9 0.2  61.8  0.3   68.4  0.1  61.6  0.2   67.9  0.2  62.0  0.3  
NSGAII_RW 68.2 0.2  62.0  0.2   67.5  0.2  62.1  0.2   68.5  0.3  61.9  0.3  
SPEA2_FW 69.6  0.1 66.7  0.3   68.9  0.3  67.0  0.3   69.5  0.2  67.6  0.4 
SPEA2_RW 68.9  0.2 66.3  0.3   68.6  0.2  66.7  0.2   68.9  0.2  67.9  0.4 
CEMA_FW 70.1 0.2 65.2  0.4   69.5  0.2  67.9  0.4   70.2  0.4  68.5  0.3  
CEMA_RW 69.8 0.3  66.2  0.4   69.4  0.3  67.7  0.2   70.1  0.3 68.4  0.2 
4.6 演算法效果表現 
表 10-11 顯示 6 種演算法使用 WBM 解碼模式於所有測試題之 Purity 質效果表現，由此可
得知演算法使用策略優於 FW 策略:如測試題 ML01，CEMA_FW Purity = 17.6% ， CEMA_RW
之 Purity = 41.2%；測試題 LL01，SPEA2_FW 之 Purity = 11.6% ，  SPEA2_RW 之
Purity=29.0% 。從平均值來看，演算法 CEMA_RW 優於其他演算法 Purity (M-set, L-set) = 
(58.5%, 49.7%)。整體而言，演算法 CEMA 最佳，其次為 SPEA2，NSGAII 最差。 
表 12-13 顯示 6 種演算法之 GD 質效果表現，其結論與 Purity 一樣，演算法使用 RW 策
略優於 FW 策略: 如測試題 MT01-03 ，CEMA_FW 之 GD = 2.8E-02，CEMA_RW 之 GD= 
4.1E-03；測試題 LT01-03，SPEA2_FW 之 GD = 8.8E-03，SPEA2_RW 之 GD = 1.6E-03。從平
均值來看，演算法 CEMA_RW 優於其他演算法，整體而言，演算法 CEMA 仍為最佳，其次為
SPEA2，NSGAII 最差。 
表 14-15 為演算法於測試題之 Spread 效果表現，演算法使用 RW 策略優於 FW 策略: 如
測試題 MM01-03，CEMA_FW 之 Spread = 0.653，CEMA_RW 之 Spread = 0.568；測試題
LM01-03，NSGAII_FW 之 Spread = 1.0，NSGAII_RW 之 Spread = 0.571。在測試題 M-sets 上，
演算法 CEMA_RW 優於其他演算法，但在 L-sets 上，除 LL01-03 外，NSGAII_RW 表現較佳，
整體而言，從平均值來看，演算法 CEMA 仍為最佳。 
表 16-21 為演算法於 PDC 量測指標上之效果表現，表 22-27 為演算法兩兩比較後之演算
法勝利次數統計表，演算法 i 優勝條件為i 大於j，反之則輸。從表 17 可得知: CEMA-FW > 
SPEA2-FW > NSGAII-FW; CEMA-RW > SPEA2-RW > NSGAII-RW; CEMA-RW > 
CEMA-FW 。符號 “>” 代表優於。CEMA-RW 則表現最佳。從表 23 可得知與表 17 一樣之結
論，CEMA-RW 表現最佳，其總贏得次數為 15 次，演算法使用 RW 策略優於 FW 策略。在其
他所有測試題上 CEMA-RW 仍為表現最佳，SPEA2-RW 為次佳。 
表 10 六種演算法在 100 x 10 三種類型題目之 Purity 平均表現值 
Av. Std.  Av. Std.  Av. Std.  Av. Std. 
NSGAII_FW 4.4E-04 1.0E+00  6.3E-03 9.7E-04  1.4E-02 4.0E-03  6.8E-03 5.4E-03 
NSGAII_RW 1.7E-03 6.7E-01  2.4E-03 3.7E-04  5.4E-03 2.3E-03  3.2E-03 1.6E-03 
SPEA2_FW 1.4E-03 1.0E+00  3.9E-03 7.7E-04  9.3E-03 3.0E-03  4.8E-03 3.3E-03 
SPEA2_RW 8.1E-04 7.3E-01  9.3E-04 1.7E-04  2.1E-03 1.4E-03  1.3E-03 5.6E-04 
CEMA_FW 1.2E-03 9.1E-01  3.3E-03 7.1E-04  8.8E-03 3.6E-03  4.4E-03 3.2E-03 
CEMA_RW 
a
1.1E-03 7.7E-01   
a
7.7E-04 3.6E-04   
a
1.6E-03 3.7E-04   
a
1.2E-03 3.6E-04 
a
Best in average  
表 14 六種演算法在 100 x 10 三種類型題目之 Spread 平均表現值 
Algorithm 
Spread 
ML01-03  MM01-03  MT01-03  M-sets 
Av. Std.  Av. Std.  Av. Std.  Av. Std. 
NSGAII_FW 0.672 0.023  0.717 0.092  0.763 0.022  0.717 0.045 
NSGAII_RW 0.593 0.089  0.578 0.025  0.662 0.011  0.611 0.042 
SPEA2_FW 0.613 0.101  0.699 0.046  0.686 0.065  0.666 0.070 
SPEA2_RW 0.592 0.028  0.584 0.017  0.648 0.083  0.608 0.042 
CEMA_FW 0.646 0.065  0.653 0.048  0.698 0.082  0.665 0.065 
CEMA_RW 
a
0.602 0.060  
a
0.568 0.005  
a
0.619 0.033  
a
0.597 0.033 
a
Best in average  
表 15 六種演算法在 200 x 10 三種類型題目之 Spread 平均表現值 
Algorithm 
Spread 
LL01-03  LM01-03  LT01-03.  L-sets 
Av. Std.  Av. Std.  Av. Std.  Av. Std. 
NSGAII_FW 0.873 0.017   1.0  0.025   0.958  0.082   0.980  0.041  
NSGAII_RW 0.823 0.023   
a
0.571  0.019   
a
0.609  0.011   0.668  0.018  
SPEA2_FW 0.91 0.008   0.996  0.074   0.877  0.093   0.928  0.058  
SPEA2_RW 0.82 0.029   0.639  0.030   0.684  0.055   0.714  0.038  
CEMA_FW 0.907 0.182   1.0  0.072   0.935  0.061   0.984  0.105  
CEMA_RW 
a
0.73 0.127    0.622  0.006    0.636  0.047    
a
0.663  0.060  
a
Best in average  
表 16 六種演算法在 100 x 10 ML 三個測試題 PDC 表現值 
Comparision 
(algorithm i, algorithm j) 
ML01  ML02  ML03 
αi / βi  αj / βj  αi / βi  αj / βj  αi / βi  αj / βj 
NSGAII_FW, SPEA2_FW 47/10  65/52  40/1  28/27  22/3  46/42 
NSGAII_FW, CEMA_FW 47/10  73/61  40/1  29/29  22/2  36/36 
SPEA2_FW, CEMA_FW 65/27  73/50  28/20  29/10  46/13  36/22 
NSGAII_RW, SPEA2_RW 28/0  30/30  17/0  38/38  46/0  63/63 
NSGAII_RW, CEMA_RW 28/0  31/31  17/0  30/30  46/0  74/74 
SPEA2_RW, CEMA_RW 30/7  31/24  38/14  30/26  63/21  74/48 
NSGAII_FW, NSGAII_RW 15/1  28/20  22/0  17/17  37/9  46/33 
NSGAII_FW, SPEA2_RW 15/0  30/30  22/0  38/38  37/0  63/63 
NSGAII_FW, CEMA_RW 15/0  31/31  22/0  30/30  37/0  74/74 
SPEA2_FW, NSGAII_RW 16/10  28/3  25/19  17/10  48/23  46/20 
SPEA2_FW, SPEA2_RW 16/4  30/20  25/5  38/33  48/2  63/62 
SPEA2_FW, CEMA_RW 16/1  31/30  25/4  30/29  48/2  74/66 
CEMA_FW, NSGAII_RW 24/24  28/4  25/19  17/8  41/29  46/18 
CEMA_FW, SPEA2_RW 24/6  30/14  25/8  38/32  41/5  63/63 
CEMA_FW, CEMA_RW 24/5  31/25  25/8  30/28  41/2  74/72 
 
表 19 六種演算法在 200 x 10 LL 三個測試題 PDC 表現值 
Comparision 
(algorithm i, algorithm j) 
LL 01  LL 02  LL 03 
αi / βi  αj / βj  αi / βi  αj / βj  αi / βi  αj / βj 
NSGAII_FW, SPEA2_FW 39/3  52/37  39/0  31/31  29/4  40/39 
NSGAII_FW, CEMA_FW 39/1  43/43  39/2  61/61  29/0  38/38 
SPEA2_FW, CEMA_FW 52/10  43/36  31/24  61/34  40/10  38/30 
NSGAII_RW, SPEA2_RW 45/10  63/55  52/18  52/41  38/4  30/27 
NSGAII_RW, CEMA_RW 45/8  46/39  52/22  28/21  38/3  48/39 
SPEA2_RW, CEMA_RW 63/29  46/30  52/29  28/24  30/16  48/25 
NSGAII_FW, NSGAII_RW 39/15  45/36  39/11  52/46  29/9  38/34 
NSGAII_FW, SPEA2_RW 39/7  63/58  39/6  52/52  29/8  30/26 
NSGAII_FW, CEMA_RW 39/10  46/42  39/5  28/27  29/4  48/44 
SPEA2_FW, NSGAII_RW 52/34  45/33  31/30  52/22  40/23  38/29 
SPEA2_FW, SPEA2_RW 52/22  63/45  31/30  52/27  40/13  30/22 
SPEA2_FW, CEMA_RW 52/21  46/36  31/12  28/20  40/9  48/38 
CEMA_FW, NSGAII_RW 43/40  45/24  61/46  52/21  38/27  38/27 
CEMA_FW, SPEA2_RW 43/28  63/43  61/36  52/23  38/17  30/19 
CEMA_FW, CEMA_RW 43/28  46/35  61/39  28/20  38/15  48/36 
 
表 20 六種演算法在 200 x 10 LM 三個測試題 PDC 表現值 
Comparision 
(algorithm i, algorithm j) 
LM 01  LM 02  LM 03 
αi / βi  αj / βj  αi / βi  αj / βj  αi / βi  αj / βj 
NSGAII_FW, SPEA2_FW 51/17  62/41  57/5  57/55  39/7  73/68 
NSGAII_FW, CEMA_FW 51/5  72/65  57/1  54/54  39/1  47/47 
SPEA2_FW, CEMA_FW 62/21  72/46  57/23  54/40  73/21  47/35 
SPEA2_RW 4  3  5   12 
CEMA_FW 3  2  3   8 
CEMA _RW 5  5  4   14 
 
表 23 六種演算法在 100 x 10 MM 三個測試題 PDC 兩兩比較贏的次數 
Algorithm 
Number of wins in contests   
Total 
MM 01  MM 02  MM 03   
NSGAII_FW 0  0  0   0 
NSGAII_RW 1  1  1   3 
SPEA2_FW 3  3  2   8 
SPEA2_RW 4  4  4   12 
CEMA_FW 2  2  3   7 
CEMA _RW 5  5  5   15 
 
表 24 六種演算法在 100 x 10 MT 三個測試題 PDC 兩兩比較贏的次數 
Algorithm 
Number of wins in contests   
Total 
MT 01  MT 02  MT 03   
NSGAII_FW 0  0  0   0 
NSGAII_RW 1  1  1   3 
SPEA2_FW 2  2  2   6 
SPEA2_RW 4  4  4   12 
CEMA_FW 3  3  3   9 
CEMA _RW 5  5  5   15 
 
表 25 六種演算法在 200 x 10 LL 三個測試題 PDC 兩兩比較贏的次數 
Algorithm 
Number of wins in contests   
Total 
LL 01  LL 02  LL 03   
NSGAII_FW 0  0  0   0 
NSGAII_RW 1  2  2   5 
SPEA2_FW 2  3  1   6 
SPEA2_RW 4  3  4   11 
CEMA_FW 3  5  3   11 
CEMA _RW 5  2  5   12 
 
表 26 六種演算法在 200 x 10 LM 三個測試題 PDC 兩兩比較贏的次數 
Algorithm 
Number of wins in contests   
Total 
LM 01  LM 02  LM 03   
 圖 5 LT01 rt 值震盪幅度圖 
5. 結論 
本研究提出 NSGAII、SPEA2 與 CEMA 結合 WBM 解碼模式求解兩目標 UPMSP 問題，並
使用 FW 與 RW 兩種策略搜尋方向，因此總共有 2 x 3 = 6 個演算法進行求解，每種策略方向
演算法 restarts 7 次。研究結果顯示: (1) 演算法使用 WBM 其結果在所有指標上皆優於未使用
者，(2) 演算法使用 RW 其結果在所有指標上皆優於 RW，(3) CEMA 之競爭動態參數 tr 可使演
算法增擴搜尋空間與避免提早收斂，整體而言 CEMA_RW 演算法表現最佳。 
參考文獻 
1. Adamopoulos, G.I., Pappis, C.P., (1998) Scheduling under a common due-date on parallel 
unrelated machines. European Journal of Operational Research 105:494-501. 
2. Agnetis, A., Pacifici, A., Rossi, F., Lucertini, M., Nicoletti, S., Nicolo, F., Oriolo, G., Pacciarelli, 
D., Pesaro, E., (1997) Scheduling of flexible flow lines in an automobile assembly plant. 
European Journal of Operational Research 97(2):348–62. 
3. Alisantoso, D., Khoo, L.P., Jiang, P.Y., (2003) An immune algorithm approach to the scheduling 
of a flexible PCB flow shop. International Journal of Advanced Manufacturing 22 
(11–12):819–27. 
4. Allahverdi, A., Ng, C.T., Ceng, T.C.E., Kovalyov,  M.Y., (2008) A survey of scheduling 
problems with setup times or costs. European Journal of Operational Research 187:985-1032. 
5. Bank, J., Werner, F., (2001) Heuristic algorithms for unrelated parallel machine scheduling with a 
common due date, release dates, and linear earliness and tardiness penalities. Mathematical And 
Computer Modelling 33:363-383. 
6. Chen, J.F., (2009) Scheduling on unrelated parallel machines with sequence- and 
machine-dependent setup times and due-date constraints. International Journal of Advanced 
22. Weng, M.X., Lu, J., Ren, H., (2001) Unrelated parallel machine scheduling with setup 
consideration and a total weighted completion time objective. International Journal of 
Production Economics 70: 215–226. 
23. Wu, Y., Ji, P., (2009) A scheduling problem for PCB assembly-A case with multiple lines. 
International Journal of Advanced Manufacturing 43:1189-1201. 
24. Yang, D., (2009) An evolutionary simulation-optimization approach in solving parallel-machine 
scheduling problem – A case study. Computers & Industrial Engineering 56:1126-1136. 
25. Yu, L., Shih, H.M., Pfund, M., Carlyle, W.M., Fowler, J.W., (2004) Scheduling of unrelated 
parallel machines- An application to PWB manufacturing. IIE Transactions 34 (11):921-931. 
表 Y04 
報告內容應包括下列各項： 
一、參加會議經過. 
活動報告： 
1. 9/5 – 下午到會場註冊 
2. 9/6 – 上午進入幾個 Sessions 聆聽發表者報告 
下午選擇幾個 Sessions 聆聽發表者報告 
晚上參加 Reception Party – 19.00 – 21.30 “Tagus River Boat Trip” 
3. 9/8 - 下午選擇幾個 Sessions 聆聽發表者報告 
16.40 – 17.00 口頭發表第一篇論文 “Parallel Population Evolutionary Algorithms for 
the Time-Cost Trade-Off Relation Project Scheduling Problem” 由博士生陳芝傑報告，
並回答問題，兩位德國、美國學者 (Prof. Weber and Prof. Wang) 皆稱讚其表現 
20.00 – 23.00 Banquet : “Restaurante Espaco Tejo” 與德州大學阿靈頓分校 Prof. Wang
一起參加 
4. 9/9 – 下午 16.20 – 18.00 以 poster 方式發表另一篇論文 
Archived Simulated Annealing with Two-Phase Matching Improvement for Unrelated 
Parallel Machine Scheduling to Minimize Fuzzy Makespan and Average Tardiness 
 
二、與會心得 
與會 95% 以上為歐美學者，參與研討會研究與報告態度都很認真，值得學習。 
會議舉行相當準時，每位 speaker 之時間皆按照規劃時間進行，即使有人缺席，session 
chair 仍讓此報告時間休息 20 分鐘，以讓下位 speaker 能準時報告。 
 
三、考察參觀活動(無是項活動者省略) 
 
四、建議 
 
 
五、攜回資料名稱及內容 
會議資料 – Program, Book of Abstracts, and CD-ROM Proceedings 
 
六、其他 
 
 
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：徐旭昇 計畫編號：99-2221-E-155-029- 
計畫名稱：多目標混合演化演算法於多功能機台排程問題解算之研究(I) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 2 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 4 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 2 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
