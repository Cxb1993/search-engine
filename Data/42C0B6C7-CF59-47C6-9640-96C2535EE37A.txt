 行政院國家科學委員會專題研究計畫成果報告 
複製可追查型 CDN-P2P 混合網路下之影音串流遞送設計與實作(2/2) 
計畫編號：NSC 95-2221-E-008-017 
執行期限：95 年 8 月 1 日至 96 年 7 月 31 日 
主持人：曾黎明  國立中央大學資訊工程研究所 
計畫參與人員：楊宏昌、簡廷宇、胡鈞証、黃克仲 
 
 
計畫成果摘要 
 
本計畫執行至今成果相當豐碩，相關研究已發
表期刊論文十篇，其中有五篇 SCI、EI 索引，有三
篇 EI 索引，兩篇是 invited paper，國際研討會論文
有三篇，另尚在審查的期刊論文有兩篇。 
我們針對內容遞送網路(CDN)以及點對點傳
輸網路(P2P)的特性，提出一個可讓原始內容提供
者知曉其內容被何者複製，且又能讓使用者就近取
得近端快取伺服器內容之複製可追查型 CDN-P2P
混合網路，並提出合乎複製可追查特性的兩階段近
端伺服器選擇法。 
接著探討如何利用近端使用者快取(Peer)來傳
送影音串流資料。由於 P2P 是針對傳輸一般檔案
所設計，其片斷選擇方法會令已下載的部分非常分
散，因此針對 P2P 環境提出一個動態的選擇片斷
方法，並修改 BitTorrent (BT)技術測試傳送影音串
流資料之可實現性。 
此外提出一個點對點串流的架構 P2PHB，結
合了先前所提之熱門視訊廣播法 Harmonic 
Broadcasting，將原本的分頻道設計適用在點對點
網路中，並以應用層群播的方式進行串流的轉送，
並提出了偵測與復原的機制，在進行特定錄放功能
如跳轉、倒轉時，有不錯的片段命中率。並針對熱
門度分析各節點提供快取之容量分析。 
 
1. 序論 
 
隨著網路頻寬的成長，對於影音多媒體串流 
(Media Streaming) 的需求也隨之增加，隨選視訊系
統 (Video-on-Demand；VoD) 的發展被認為是目前
網際網路應用的主流。由於影音多媒體串流的資料
量大、頻寬需求高、持續時間長，所以有人提出固
定耗用頻寬、無限制使用者且低等待時間的各種群
播  (Multicast) 傳 輸 演 算 法 ， 例 如 ： Fast 
Broadcasting [1,2] , Recursive Frequency-splitting 
Scheme [3]及 Harmonic Broadcasting [4]。然而直到
現在群播仍然無法普遍被應用，主要因素在於會增
加路由器的控制負擔及計算複雜度。 
還有人提出使用內容遞送網路  (Content 
Delivery Network；CDN) [5,6]，但是提供內容遞送
服務業者必須花費更多的成本來建置內容快取伺
服器。因此有人提出使用點對點傳輸網路 
(Peer-to-Peer；P2P) 技術來利用網路上眾多使用者
(Peer) 協助傳輸影音多媒體串流，來減輕影音多媒
體提供者網路能力與主機能力的負擔。點對點傳輸
網路藉由使用者直接連接其他使用者的電腦，進行
文件的交換與共用，讓個人電腦同時具備伺服器與
終端使用者的功能，使線上數以萬計的個人電腦形
成一種類似區域網路的共享平台，各個使用者間能
夠彼此分享電腦中的運算、記憶體以及檔案等共享
資源，成為另一網路環境型態，有別於傳統集中式
系統架構。但是當使用者彼此之間分享檔案的時
候，原始內容伺服器無法得知此複製行為，因此無
法確保原始內容提供者的智慧財產權，而造成極大
的衝擊。 
因此，本計畫針對內容遞送網路(CDN)以及點
對點傳輸網路(P2P)的特性，對於著作權保護與網
路建置成本的考量，以及更有效的提供遞送服務，
將 CDN 與 P2P 結合，提出一個可讓原始內容提供
者知曉其內容被何者複製，且又能讓使用者就近取
得近端快取伺服器內容之複製可追查型 CDN-P2P
混合網路[7]，並且提出一個合乎複製可追查特性
的兩階段近端伺服器選擇法(Server Selection)。該
架構下所有原始資料都由內容提供者所提供，而
CDN 業者則會在事先佈置在各地的內容複製快取
伺服器中儲存及快取資料，已提供使用者就近取得
服務，而內容複製快取伺服器也就成為點對點傳輸
網路系統裡的種子供應者。首先使用者向原始內容
伺服器報到，然後原始內容伺服器根據使用者資訊
產生源頭複製許可，回覆給使用者；接下來使用者
拿著源頭複製許可，透過 CDN 查詢找到近端內容
快取伺服器(Replica Server)，並向近端內容快取伺
服器請求複製下載服務。內容快取伺服器查核終端
使用者的源頭複製許可，檢查是否由原始內容伺服
器所產生。假設使用者之複製許可正確，便由內容
快取伺服器提供下載服務；或者經由近端使用者快
取(Peer Cache)選擇，查詢在使用者附近有近端使
用者快取，則產生點對點複製許可，回傳給使用
者。最後使用者再拿著內容快取伺服器所產生的點
對點複製許可，向使用者快取請求服務。使用者快
 3
 
3. 內容遞送系統禁止複製性 
內容快取伺服器不宜獨自產生源頭複製許
可，避免內容遞送網路發生私自盜賣內容的情況。 
 
4. 點對點遞送系統的可取用與禁止複製性 
臨時加入了使用者快取必須要有一種查核點
對點複製許可的機制，只是使用者快取是內容快取
伺服器一種延伸性的遞送服務，其關係宜由內容遞
送網路與點對點傳輸網路的伺服器兩者之間完成
複製認可的延伸動作，使用者快取無法逕自對其他
終端使用者進行下載服務。 
所有要到使用者快取進行複製下載的終端使
用者，都必須先到原始內容提供者報到取得源頭複
製許可，經過內容快取伺服器查核完成，取得由內
容快取伺服器核發產生的點對點複製許可。終端使
用者憑著內容快取伺服器所核發的點對點複製許
可，向經由內容快取伺服器取得同意再遞送服務的
使用者快取進行複製下載。 
使用者快取無法私自產生點對點複製許可，避
免使用者快取私自盜賣內容的情況發生。 
 
2.1.2 系統環境配置 
 
圖 2-1 為複製可追查型遞送網路之系統配置
圖，其包含以下各模組： 
z 原始內容伺服器 
產生源頭複製許可：原始內容伺服器根據使用
者資訊(例如使用者位址、請求內容資訊等等)以及
時間標記產生源頭複製許可，使用者必須擁有合法
源頭複製許可，才可得到內容快取伺服器之複製下
載服務或使用者快取服務。 
z CDN 查詢 
近端內容快取伺服器選擇：根據終端使用者或
其藉由本地網域名稱伺服器查詢的來源位址，選擇
近端內容快取伺服器服務。 
z 內容快取伺服器 
查核源頭複製許可：檢查使用者所提示之源頭
複製許可是否合法，即是確認許可是否自行偽造。
內容快取伺服器只有在查核使用者之源頭複製許
可正確時，才能提供複製下載服務。 
近端使用者快取選擇：根據終端使用者位址，
回覆給終端使用者最近的使用者快取位址。 
產生點對點複製許可：根據使用者資訊(例如
使用者位址、請求內容資訊等等)以及時間標記產
生點對點複製許可，使用者必須擁有合法點對點複
製許可，才可得到使用者快取之複製下載服務。 
z 使用者快取 
查核點對點複製許可：檢查終端使用者所提示
之點對點複製許可是否合法。使用者快取利用查核
點對點複製許可機制，來判斷是否提供終端使用者
內容下載服務。 
 
2.1.3 系統運作流程 
 
首先終端使用者向原始內容伺服器報到，然後
原始內容伺服器根據使用者資訊產生源頭複製許
可，回覆給終端使用者；接下來終端使用者拿著源
頭複製許可，透過 CDN 查詢找到近端內容快取伺
服器，並向近端內容快取伺服器請求複製下載服
務。內容快取伺服器查核終端使用者的源頭複製許
可，檢查是否由原始內容伺服器所產生。假設使用
者之複製許可正確，便由內容快取伺服器提供下載
服務；或者經由近端使用者快取選擇，查詢在使用
者附近有近端使用者快取，則產生點對點複製許
可，回傳給終端使用者。最後終端使用者在拿著內
容快取伺服器所產生的點對點複製許可，向使用者
快取請求服務。使用者快取檢查點對點複製許可是
否由內容快取伺服器所核發，如果相同，則由使用
者快取提供再遞送服務。 
在內容遞送網路中，內容快取伺服器被放置在
最接近終端使用者的位置，提供近端下載服務。內
容快取伺服器必須含有源頭複製檢查機制，才能夠
判斷終端使用者是否得到源頭複製複製許可。檢查
機制的函數公式由原始內容伺服器所提供，內容快
取伺服器則利用相同的公式檢查源頭複製許可。這
樣的方式，為確保內容資訊不被內容遞送服務業者
盜賣。內容快取伺服器並不等同於一般的代理伺服
器(proxy)，在未經原始內容伺服器報到取得源頭複
製許可，便無法使用下載。我們可以利用 PWFS 
(Pornographic Web Sites Filtering System) [12]系統
中透通代理伺服器(transparent proxy)的方式，產生
具有查核機制的容快取伺服器。 
在使用者快取部份，當終端使用者願意加入內
容遞送網路作為近端使用者快取，終端使用者所下
載的快取程式必須包含內容快取伺服器所提供的
點對點複製查核機制，檢查使用者是否得到內容快
取伺服器的點對點複製許可。如果終端使用者未先
到原始內容伺服器報到，而直接向使用者快取請求
下載，因為沒有得到內容快取伺服器的點對點複製
許可，所以無法提供服務。而點對點複製許可必須
在終端使用者已先通過源頭複製許可才能夠產
生，因此終端使用者還是必須先向原始內容伺服器
 
 
 
 
 
 
 
內容快取伺服器 
查核源頭 
複製許可 
原始內容伺服器 
 產生源頭 
複製許可 
使用者快取 
查核點對點 
複製許可
終端使用者 
產生點對點
複製許可 
CDN 查詢 
近端使用者快取選擇 
近端內容快取
伺服器選擇 
圖 2-1：系統配置圖 
 5
為具有某種程度上的相近。 
在我們的架構中，第一階段的伺服器選擇，必
須利用網域名稱當作地標點，因此我們希望減少地
標點的數量，又可改善準確度。因此在我們除了利
用地標點作為區域量測依據外，再加入歐幾里德距
離(Euclidean Distance)計算公式來提高選擇精確
度。當挑選出欲被選取的群組之後，利用此判斷公
式，說明如下： 
 
表 2-1：判斷公式參數表 
符號 描述 
Li 代表第 i 個地標點 
n 地標點個數 
Di 內容快取伺服器與 Li之間的 RTT 值
di 本地名稱伺服器與 Li之間的 RTT 值
 
得到以下式子 
∑== −= nii ii dDF 1 2)( …………(1) 
選取 F 值最小者，當作提供服務的內容快取伺服
器。如圖 2-4 中，CDN-DNS 根據本地網域名稱伺
服器位置查到兩台內容快取伺服器 A、B 都在區域
L3L1L2的區域內。利用式子(1)計算得到 
( ) ( ) ( ) 992090235240180110 222 ≈−+−+−=F A  
( ) ( ) ( ) 562030235210180130 222 ≈−+−+−=F B  
FB < FA，因此 CDN-DNS 回傳內容快取伺服器 B
的 IP 位址。 
上述方式為第一階段的近端內容快取伺服器
選擇法。在複製可追查型遞送網路架構下，我們希
望能夠利用已下載且願意分享內容的終端使用
者，當作使用者快取來減少內容快取伺服器的負
擔。下一小節將介紹內容快取伺服器如何管理使用
者快取，以及終端使用者如何利用近端使用者快取
來完成服務。 
 
2.2.3 近端使用者快取選擇法 
 
現有利用網域名稱伺服器來做為近端伺服器
選擇的方法中，是假設終端使用者透過本地網域名
稱伺服器查詢時，使用者距離此名稱伺服器很近，
所以只要找到該網域名稱伺服器附近的內容快取
伺服器，就假設該內容快取伺服器也會在終端使用
者的附近。但這樣的假設並非準確，因此我們利用
在第二階段的搜尋方法，來改進上述的問題。 
我們在第一階段時，利用網域名稱伺服器找出
在使用者本地名稱伺服器的內容快取伺服器。當終
端使用者連線到內容快取伺服器時，我們便擁有了
使用者實際的位址，因此我們可以利用這樣的資
訊，指派一台距離使用者最近的使用者快取或內容
快取伺服器來提供服務。 
當合法使用者連接到內容快取伺服器後，內容
快取伺服器便能正確掌握使用者實際來源位址。接
下來，我們提出近端使用者快取選擇法，來討論內
容取伺服器，如何提供近端使用者快取給鄰近的使
用者就近取得服務。圖 2-5 為近端使用者快取伺服
器選擇的流程，查核複製許可的部份，可參考圖
2-2 流程說明。 
以下針對各部份運作方式作更詳細介紹： 
z 資源紀錄表：紀錄所有加入欲作為使用者快
取的終端使用者所擁有的內容資訊。 
z 地標候選紀錄表：紀錄未經過地標選擇的使
用者快取，有就是當地標點數目不足時，有
可能成為地標的使用者快取紀錄在此。 
z 初始化系統 
 建立資源紀錄表。 
 建立地標候選紀錄表。 
 設定內容快取伺服器為第一個地標點。 
z 新增地標 
 對所有地標進行往返時間測量 
 如果使用者快取與其中一個地標點的
內容快取 
伺服器 A 
內容快取 
伺服器 B 
CDN-DNS 
L1 
CDN-DNS
L2 
CDN-DNS
L3 
90ms 
110ms 
240ms 
130ms 
210ms
30ms 
20ms 
235ms 
180ms 
本地網域名
稱伺服器 
圖 2-4：歐幾里德距離選擇範例 
使用者向內容快取
伺服器請求服務 
 
通知地標對使用者測量
往返時間 
刪除使用者快取 
近端使用者快取 
提供服務 
完成服務 
近端內容快取 
伺服器提供服務 
 
 
更新使用者快取 
資源紀錄表 
不存在
存在
否
否 
是 
是
檢查使用者快取 
使用者快取提供服務 
加入使用者快取服務 
圖 2-5：近端使用者快取選擇流程 
 7
由圖 2-8 結果得知，我們可以利用歐幾里德距
離來改善在分箱法(Binning scheme)上需要多個地
標點才能得到的效果，在利用網域名稱伺服器作伺
服器選擇查詢時，較少的地標點查詢，能夠更快的
回應的近端內容快取伺服器位置。 
最後我們分析加入判斷式(1)的兩階段伺服器
選擇與原來的分箱法作比較。圖 2-9，ML3SL3 表
示 M：加入判斷式(1)，L3：第一層使用 3 個地標
點，SL3：第二層使用 3 個地標點。由圖中可發現
在 ML3SL3 能夠找到與 L8 效果相近的近端伺服
器，而 ML4SL4 在 2025/225 的拓撲環境下，對於
近端伺服器的往返時間平均小於 40ms，優於分箱
法在 L8 的情形。 
 
2.4 系統實作 
 
在名稱伺服器部分，修改 BIND DNS 讓他可
以依照不同的詢問來源，回應不同的內容快取伺服
器的 IP 位址。內容快取伺服器以 Apache 與 squid
架設，並將設定成透通代理伺服器，如圖 2-10，所
有來詢問下載的終端使用者，都會先導向到查核複
製許可，允許後執行使用者快取管理程式。假設快
取中已有使用者所要的內容資料，則直接由快取
(cache)提供服務；倘若快取中沒有使用者所要的內
容資料，則由內容快取伺服器向原始內容伺服器取
回內容資料，再提供給終端使用者。管理程式會依
照使用者來源與下載內容，查詢是否存在近端使用
者快取，然後回應給使用者；並且詢問終端使用者
是否加入使用者快取。使用者快取程式則是在終端
使用者端安裝快取專用程式，其目前只支援網頁下
載服務，其測量模組以 PHP 完成。 
 
圖 2-10：將請求導向透通代理伺服器 
 
為確保沒有先經過原始內容伺服器報到的終
端使用者，無法從內容快取伺服器或者使用者快取
直接下在內容，我們提供以下方式來防止未到原始
內容伺服器報到的使用者，無法取得服務。選取一
個雜湊函數來當作我們判斷終端使用者有無經過
原始內容伺服器的依據。利用使用者的來源 IP 位
址以及所請求的內容名稱當作雜湊函數的輸入，經
由雜湊函數計算得到鍵值(key)，當作複製許可，內
容快取伺服器與使用者快取也擁有相同的雜湊函
數。當終端使用者向原始內容伺服器報到時，原始
內容伺服器會將經由雜湊函數計算出來的鍵值附
加在使用者請求的 URL 中。使用者拿著這個修改
過的 URL 向內容快取伺服器請求服務，內容快取
伺服器便會依照使用者的來源 IP 位址以及請求內
容名稱，經過與原始內容伺服器相同的雜湊函數計
算，如果所得的鍵值與請求的 URL 中的鍵值相
同，則表示終端使用者先經過原始內容伺服器報
到，因此內容快取伺服器可提供近端下載服務。使
用者快取確認終端使用者是否合法，同樣使用與內
容快取伺服器相同方式。例如使用者 140.115.50.53
請 求 內 容 服 務 http://123.dslab.ncu.tw/file/ 
download.php?object=foo.zip，原始內容伺服器使用
雜 奏 函 數 h(IP , Content) =  
5314ab9c502a14985bcd18b924681c2f (Key)，因此
使用者得到新的 URL， http://123.dslab.ncu.tw/ 
file/download.php?key=5314ab9c502a14985bcd18b9
24681c2f/foo.zip。如果內容快取伺服器與使用者快
取 經 由 雜 湊 函 數 計 算 後 得 到
5314ab9c502a14985bcd18b924681c2f 相 同 的 鍵
值，則表示合法的下載請求。 
 
圖 2-11：原始伺服器 123.ncu.tw 
 
0.00
10.00
20.00
30.00
40.00
50.00
60.00
70.00
80.00
90.00
540/60 1035/115 1530/170 2025/225
L6
L8
ML3SL3
ML4SL4
R
ou
nd
-tr
ip
-ti
m
e 
Node / Server 
圖 2-9：兩層式選擇與分箱法比較
0
20
40
60
80
100
120
140
160
180
200
540/60 1035/115 1530/170 2025/225
L2
L4
L6
MD L2
MD L4
MD L6
Node / Server 
R
ou
nd
-tr
ip
-ti
m
e 
圖 2-8：加入歐幾里德距離之 RTT
Web server 
透通代理伺服器 
Http request
Port 3128
查核複製許可 
原始內容
伺服器
Http reply 
使用者
 9
3. 使用BT技術測試傳送影音串流資料之
實現性 
 
3.1 BitTorrent 原理 
 
一般 BT 系統從發佈者發佈檔案到使用者下
載檔案的流程為：(1)發佈者將要發佈的檔案做成 
"torrent" 檔並且自己當 Seed，然後將 "torrent" 檔
發佈到 Tracker 上；(2)發佈者將 "torrent" 檔放在
網站上供使用者下載；(3)Peer 從網站上下載欲下
載檔案的 "torrent" 檔；(4)Peer 根據 "torrent" 檔
內的資訊得知 Tracker 位置，接著向 Tracker 索
取同樣下載這個檔案的 Peer 清單；(5)根據 Peer 
清單向 Seed 與其他 Peer 溝通並且下載檔案。 
在 Peer 跟 Seed 與其他 Peer 溝通後欲下載
檔案時，由於是跟多個來源請求下載服務，因此會
有跟哪一個來源請求下載哪一個片斷會有比較好
的效率的問題產生，而  BT 的片斷選擇  (Piece 
Selection) 法 [15] 主要是要將不同的片斷盡快的
分散到不同的 Peer 上，以增加 Peer 彼此之間分
享的效率，詳細的幾點原則說明如下： 
(1) 隨機第一個片斷 (Random First Piece)：盡快下
載一個完整的片斷，使得可和其他Peer交換片
斷。 
(2) 完整優先 (Strict Priority)：一個片斷完整下載
後，才可下載另一個片斷，這樣可以確認片斷
的完整與正確性。 
(3) 稀有優先 (Rarest First)：優先下載稀有的片
斷，防止該片斷消失不見。 
(4) 最後階段模式 (Endgame Mode)：同時跟很多 
Peer 要求最後幾個片斷，避免跟很慢的 Peer 
下載資料，影響到檔案完成時間。 
此外，BT 會根據對方 Peer 提供我們的下傳
速度給予適當的回報，對於提供較大下載速度的 
Peer 則對他提供上傳服務 (Unchoking)，對於其它
的 Peer 則暫時停止上傳動作 (Choking)。在任何
時 間 ， 每 個  Peer 都 還 有 一 個  "Optimistic 
Unchoking" 連線，這個連線並不管 Peer 的下載
速度如何，藉由此連線有可能找到更適合的合作伙
伴，而且對於剛加入下載的使用者，也才能得到下
載的機會。也因為有這些傳送規則，可以知道 BT 
系統中其它 Peer 加入或離開上傳資料給你的行
列是一件頻繁的事情。 
 
3.2 設計分析 
 
一般來說，利用 P2P 技術來傳遞影音多媒體
檔案的系統會有下列特性：(1)Peer 的上傳頻寬是
有限制的，可能會比影片播放速率還要小；(2)每
一個 Peer 所能提供的上傳頻寬不一定會一樣；
(3)Peer 會隨時加入或離開系統。所以一個影音串
流服務必須要同時向多個 Peer 請求服務，因此會
有下列問題產生：(1)選擇哪些來源 Peer 來服務；
(2)跟哪一個來源請求下載哪一個片斷會有比較好
的效率。 
現有 P2P 技術中最接近能解決上面問題的就
是現在相當熱門的 BT，當使用者越多時，BT 的
系統能力就越高，並且由於 BT 的阻塞演算法 
(Choking、Unchoking Algorithm) 的應用，所以使
用者上傳越大，下載速度就可能越大，可以算是一
種獎勵機制，不過由於 BT 技術原本是設計用來
抓取任何檔案，並非針對傳送影音串流資料所設計
的，因此要將 BT 技術應用於傳送影音串流資
料，就必須要更改某些地方，例如片斷選擇的部
份。 
使用  BT 技術應用於傳送影音串流資料，
Client 端軟體一定不同於一般的 BT 軟體，因為針
對影音檔案需要有適合的片斷選擇法，另外還要有
播放影音檔案的功能。至於 BT Server 部分需不
需要更動，是一個值得探討的問題，BT 的 Server 
即所謂的 Tracker，主要的功用就是告訴使用者，
目前有哪些 Peer 也在下載同樣的檔案或是這個
檔案有哪些 Seed，標準 Tracker 會給予隨機的 
Peer 清單，至於應用於傳送影音串流資料是否要
修改 Tracker 給予 Peer 清單的方法呢？若是需
要一個有品質保證的傳送影音串流資料系統，則去
更動 Tracker 是必要的，因為根據 Peer 清單內所
有 Peer 剩餘的服務頻寬是否還可以允許服務使
用者，來判斷是否讓目前的 Peer 加入傳送影音串
流資料系統，如果剩餘的 Peer 頻寬不夠，則回答
新要求的使用者一個空的清單，不過接下來的問題
就會變成，如何保證 Peer 所設定的上傳頻寬就是
真正的上傳頻寬，以及一個 Peer 同時上傳給多個 
Peer 時，如何保證和保持給予多個 Peer 當初所分
配的頻寬大小。至於不更動  Tracker 而只更動 
Client 端也是可行的，主要缺點就是頻寬無法保
證，所以下載速度會有所變化，此外，還需要考慮
到有 Peer 隨時離開與加入這種事情發生。我們的
實作上不考慮去更改這部分，因為標準 BT 的 
Tracker 給詢問者隨機的 Peer 清單，已經擁有負載
平衡的功能，不會使得所有的 Peer 都只去跟某幾
個 Peer 請求下載資料。 
利用 BT 技術傳送影音串流資料，影片發佈者
將要發佈的檔案做成 "torrent" 檔前，會考慮到是
否事先按照時間將檔案切成數個小檔案，這樣下載
時可以從前面的檔案抓起，主要的考量是目前的播
放器幾乎都是要檔案完整抓完才可以開始播，而且
支援檔案未下載完整即可播放的軟體所支援的影
音格式不多，所以假設將影片事先切割成數個小檔
案，這樣就可以將已完成的檔案用支援該影片格式
的播放器軟體來播放。事先切割的缺點則是，因為
要使得切割出來的檔案都能單獨播放，所以每個切
割出來的檔案都會依照格式在檔頭存有影片的資
訊，所以切出來的檔案總大小會比原來的檔案大小
來的大，而且這種額外付出 (overhead)，如果依照
越短的檔案間隔去切，overhead 就會越大。如表
 11
編號。 
 上面兩式可合起來，j = ⎡ ⎤ibB / 。 
(B)假設 Peer Pi 的速度 bi 接受下載請求且影
片為 VBR 時，此時要分配哪一個 Piece 給它？ 
Case 1：bi ≧αA 
 直接分配最前面未抓的 Piece 給它。 
Case 2：bi <αA 
 求出不等式 mh
b
Lth
i
h ≤≤>× 1,  的最小 
h 值。 
 則分配第 h+k 個以後的 Piece 給 Pi 
較為適合，且該 Piece 也要符合不等
式，未開始播放時 k 為影片頭已連續
分配的最後一個片斷，若開始播放後，
則 k 為目前播放到的片斷編號。 
 
圖 3-1 為我們的 CBR 影片片斷選擇法之範
例，假設 α=1，其中會出現四個 Peer，不同的時
間加入且 Peer 有可能傳完幾塊片斷就離去，這些 
Peer 的上傳頻寬假設為固定分別為，P1=B/2、
P2=B/4、P3=B/2、P4=B/4。 
z 時間 0 時：P1 加入，P1 頻寬 B/2 大於目前
的平均速度，所以跟 P1 抓取片斷 1。 
z 時間 3 時：P2 加入，P2 頻寬小於目前平均速
度，根據計算 j=B/(B/4)=4、K=1，所以找第 j+k 
之後尚未分配的片斷，即片斷 5。 
z 時間 4 時：P1 傳完前一個分配的片斷後，我
們繼續跟他請下一個片斷，因為 P1 頻寬大於
平均速度，所以跟他請求片斷 2。 
z 時間 5 時：P3 加入，P3 頻寬大於目前平均速
度，所以跟他請求片斷 3。 
z 時間 7 時：P4 加入，P4 頻寬小於目前平均速
度，根據相同的計算方法後，請求片斷 7 (即
第 4+3 之後的片斷)。 
z 之後同理類推。 
 
 
圖 3-1：片斷選擇範例 
 
VBR 的影片適合於事先將影片依時間切割成
數個檔案，而 CBR 事先切不切割都可以，事先切
割的話，只要知道切割後每個檔案的播放時間與檔
案大小，就可以使用我們的片斷選擇法來選擇要下
載的檔案，因為對於速度慢的 Peer，我們會去計
算適合下載的片斷，這時需要這些資訊，沒有事先
切割的影音檔案，則必須另外想辦法知道整個影音
檔案的每個時間點的 Bit Rate，另外預估目前已下
載的部分可以連續播放多長時間與還需要多久再
開始播放可以完整連續的播放，這也都是必要的資
訊。 
關於目前已下載的部分可以連續播放多長時
間，就是去計算從頭開始有多少個連續的片斷已下
載完成，再乘以每個片斷的播放時間所得到的值。
而還需要多久再開始播放可以完整連續的播放的
計算，就只能以目前的下載速度和已下載的情況去
估計，因為下載速度的變化是影響這個時間的最主
要 的 因 素 ， 而 粗 略 估 計 的 算 法 為 
)0,max( 影片長度目前的下載總速度
剩餘未抓的片斷總大小− 。 
 
3.4 效能分析 
 
我們依照以下三點因素評估哪一種因素是影
響使用 BT 技術應用於傳送影音串流資料之可實
現性最重要的因素。 
1. Peer 提供的平均傳輸速度：下載整個影片過程
中，整體平均傳輸速度。 
2. 系統平均的 Seed 數目：下載過程中，每個時間
平均有多少 Seed 在系統內。 
3. 系統平均的 Peer 數目：下載過程中，每個時間
平均有多少 Peer 在系統內。 
而我們依照上面三點因素評估兩個對使用者
來說比較重要的項目。 
1. 整體片斷及時到達率：從開始播放影片到影片
結束時，過程中有多少比例的片斷會在播放時
已經下載完成。 
2. 從頭連續及時到達率：從開始播放影片到影片
結束時，連續播放多少片斷沒出現中斷的情
形，佔全部片斷數的比例。 
 
表 3-3：實際量測的數據 
樣本
第一次得到
Tracker 回
應時間(秒)
收到第一
個片斷的
時間(秒)
整體平均傳
輸速度
(KB/S) 
系統平均的
Seed 數目 
系統平均的
Peer 數目
1 3 10 844.44 28.19 1.07
2 1 21 381.22 46.67 0.41
3 2 64 113.46 42.94 6.42
4 5 20 59.03 52.85 10.95
5 4 67 69.79 23.46 52.39
 
我們實際使用工具軟體下載網路上別人發佈
的檔案，並且測量數據和請求下載的情況，表 3-3
為測試的五個樣本得到的數據，根據實驗數據，可
以知道通常開始下載一個任務幾秒內就可以由
Tracker 得知 Peer 清單，而得到 Peer 清單後平均
30 幾秒後可以開始下載到第一個片斷，蠻符合之
前的 Optimistic Unchoking 所敘述的，每 30 秒讓
新的使用者 Unchoking。 
我們比較的片斷選擇法如下： 
 13
速度是影響到整體片斷及時到達率的最主要因
素。圖 3-3 為從頭連續及時到達率比較圖，我們可
以發現一樣的結果。 
 
0
0.2
0.4
0.6
0.8
1
1.2
1 2 3 4 5
樣本編號
整
體
片
斷
即
時
到
達
率
α=0.5
α=1
α=1.5
 
圖 3-4：門檻值設定比較圖 
 
至於門檻值要設為平均速度的多少倍比較適
合呢，我們使用 α=0.5、α=1 與 α=1.5，一樣使用前
面的五個樣本來比較我們的片斷選擇法，比較結果
如圖 3-4，發現 α值改變整體片斷即時到達率變化
不大，以樣本 4 與 5 來說，α=1.5 的整體片斷即時
到達率略為高一點。 
 
3.5 系統實作 
 
實作軟體環境如下： 
z 以 Azureus_2.2.0.2 [16] (Java Language) 為基礎
來改。 
z 搭配 VedioLAN Client (VLC) [17] 在影片未下
載完前即時播放影片，且 VLC 可以解決檔案讀
取被下載軟體鎖住的問題。 
 某些影片需要先下載片頭才可以播，例如
MPEG-4 和 DivX，因為播放這些類型的影片
需要一些檔頭資訊。 
 支援影音格式：MPEG-1, MPEG-2, MPEG-4, 
DivX, mp3, ogg, ... 
z 編輯與編譯工具為 eclipse [18]。 
z 作業系統為 Windows XP 
而隨選視訊系統的其他成員，如 Tracker 或其
他  Peer 皆是現有的軟體，例如  Client 軟體有 
BitComet [19]、ABC [20]、Shareaza [21] 等，而 
Tracker 我們所使用的 Azureus 本身內建 Tracker 
功能，所以我們直接使用他來測試。 
實驗軟體再播放影片時會遇到兩個問題，一個
是檔案讀取權限的問題，另一個是影片格式產生的
問題。通常下載軟體在檔案未完成前會頻繁的產生
寫入的動作，所以會把檔案設定為無法讓其他軟體
寫入與讀取，所以會造成大部分的播放軟體無法播
放影片，VLC 可以解決這方面的問題。另一個是
影片格式的問題，以 MPEG-1 來講，只有抓到影
片任何部分都是可以直接播放的，但是對於
MPEG-4、DivX 和 Rmvb 等格式的影片則必須要有
檔頭的資訊才可以播放，所以這種情況下一定要先
抓取檔頭。 
以 MPEG-4 來說通常是 AVI 格式的檔案，而
AVI 算是 RIFF 格式的檔案，RIFF (Resource 
Interchange File Format)是一個二進位的巢狀結構
檔案，它並不代表任何多媒體檔案，而它是把多媒
體檔案包裝在其定義的結構之中，RIFF 中的基本
單位就是 Chunk,如下： 
 
typedef struct _Chunk 
{ 
    DWORD ChunkId;  /* Chunk ID marker */ 
    DWORD ChunkSize;  /* Size of the chunk data in 
bytes */ 
    BYTE ChunkData[ChunkSize]; /* The chunk data */ 
} CHUNK; 
 
ChunkData 中又可包含別的 Chunck (Sub 
Chunk)，這樣的關係一直下去就如上所稱的巢狀結
構。而 AVI 屬於如上述的 RIFF 格式，AVI 內擺的
檔案資料包括了聲音與影像，它的 Chunk 結構如
下： 
 
struct _RIFF   /* "RIFF" */ 
{ 
    struct _AVICHUNK   /* "AVI " */ 
    { 
        struct _LISTHEADERCHUNK   /* "hdrl" */ 
        { 
            AVIHEADER AviHeader;     /* "avih" */ 
            struct _LISTHEADERCHUNK  /* "strl" */ 
            { 
                AVISTREAMHEADER StreamHeader; /* 
"strh" */ 
                AVISTREAMFORMAT StreamFormat; /* 
"strf" */ 
                AVISTREAMDATA StreamData;   /* 
"strd" */ 
            } 
        } 
        struct _LISTMOVIECHUNK  /* "movi" */ 
        { 
            struct _LISTRECORDCHUNK  /* "rec " */ 
            { 
                /* Subchunk 1 */ 
                /* Subchunk 2 */ 
                /* Subchunk N */ 
            } 
        } 
        struct _AVIINDEXCHUNK  /* "idx1" */ 
        { 
            /* Index data */ 
        } 
    } 
} 
 
如上所列，這是一個 AVI 的結構檔案，主要
RIFF chunk 包裝一個 AVI chunk，AVI chunk 之中
又包含了，LIST-HDR、LIST-MOVI、INDEX 三個
chunk，LIST-HDR chunk 之中主要是紀錄影音資料
的資訊，LIST-MOVI chunk 是存放影音資料的地
方，INDEX chunk 是紀錄影音長度的索引，可以用
來提供影片快轉或倒帶的資訊，所以必須至少要有
LIST-HDR 的資訊，才能知道如何去播放這個影音
檔案，而傳輸過程中假使 LIST-MOVI 內某些部分
遺失掉，播放過程中就可能會出現某些畫面出現雜
訊，但是如果遺失到 chunk 結構的部分，可能就需
 15
Sequence)欄位則是紀錄節點進行串流的下載速
度，在傳統 HB 中的 Hs 就是該片段所在的頻道
數，也就是 b/i，其中 b 為影片的播放流量、i 為所
在頻道數，但是在這裡要特別紀錄的原因是當有節
點使用了 VCR 功能之後，例如一開始使用者就直
接從第 i 個頻道開始播放，那麼就會與原本的下載
架構不符合，後面的錄放功能策略章節將會詳述如
何處理這樣的情形。 
 
 
圖 4-1 P2PHB 使用者加入示意圖 
 
 
圖 4-2 頻道 k 使用者加入示意圖 
 
4.3.1 快取策略 
 
首先我們需要了解的是原本的 HB 架構下至
少需要快取多少數量的片段，在[4]中，切割的片
段數為 1000 時所需要快取的片段佔全部影片長度
不會超過 37%，在一個片段播放間隔 d 的時間中，
Harmonic Broadcasting 需要快取的片段所佔的容
量最多為： 
                                                            
 )1*(
1
∑
+=
=
N
ij jN
SB      (1) 
其中 S 為片段容量，N 為切割的片段數，i 為
目前正在觀賞的片段。 
在有新的節點加入的時候，影音串流伺服器除
了會分派父節點給新的節點連接之外，伺服器也會
進行相關的熱門度統計，熱門度與節點的快取量是
正相關的，也就是說越是熱門的影片，伺服器就會
要求新加入節點快取越多的片段，但是當影片很少
人觀賞的時候，節點就可以調整自己快取的片段
量，不過增加或是減少並不是得到伺服器熱門度資
訊後立即調整，而是在節點看到下一個片段的時候
才進行調整，以免發生影片變冷門時原本有快取的
片段因為被伺服器通知不需要快取而被立即刪
除，造成不必要的重新連線延遲。在敘述了策略之
後，我們要先對熱門度( ρ )進行定義： 
                                                   
∑
=
−=
Q
k
know
k
I
1 *τρ     (2) 
其中 ρ 為影音串流伺服器的統計時間間隔，
而 I 為在統計時間間隔中所有到訪加入節點的數
量，Q 為常數，做為熱門度是否與過去統計有相關
的調整，當 Q 的數值越大就會計算到越多的過去
訪客到訪的紀錄，而當 Q=1 時就是只紀錄最近一
次的來訪量。 
根據(1)與(2)式，我們可以定義出需要由節點
快取的片段與節點本身播放就需要快取的片段量
總和為： 
] 
*
log)1*( , )1*[(
111
∑∑∑
=
−
+=+=
+=
Q
k
know
N
ij
N
ij k
I
jN
S
jN
SB τα
其中α 為常數，我們可以藉由控制調整因為影片
的熱門度對於片段快取需求量的依賴程度。另外因
為節點的快取量是有限的，所以節點可以視自己的
儲存空間是否足夠來決定是否要多快取這些片段。 
 
4.3.2 節點失敗偵測與復原 
 
在點對點網路中，所有的節點隨時都有可能加
入或是離開，提出節點失敗偵測與復原之前，我們
需要在一次回顧節點在加入系統時會做的其中一
件事情，就是紀錄影音串流伺服器、父系節點及祖
父系節點的 IP 位置資訊。 
這個時候後來加入的節點如果為子節點的
話，就只要與父節點要求相關的 IP 位置資訊，而
且由於父節點有其兄弟及祖父節點的 IP 位置資
訊，所以不需要再費工夫跟其他節點請求資訊。 
節點互相擁有 IP 清單的用意是在於當父節點
發生失敗時，可以利用清單上的列表進行修復，當
節點超過一個時間門檻(δ)沒有收到來自父節點
的串流，或是沒有收到子節點的回應時，就會認定
該節點已經失效，對於已經失效的父節點，採取的
策略是看看清單中的其他父節點是否可以提供串
流，將會採取同時詢問所有父節點的策略以節省時
間，如果可以的話，就往新的父節點接上，回復原
本的串流。但如果所有的父節點都已經失效，這個
時候就會轉向尋找祖父節點的串流，如果祖父節點
依然健在，就捨棄父節點向祖父節點連接。但是如
果連所有祖父節點也失效的時候，由於經過的時間
不可以過長，再重新尋找頻道伺服器群中可以連接
的節點太沒有效率，所以節點就只好緊急從影音串
流伺服器直接串流，維持播放的品質，經過每一個 
(影音串流伺服器的統計時間間隔) 就會重新檢查
這些節點是否可以重新接上其他適合的節點，讓伺
服器的頻寬得以節省，也可以讓節點可以有更好的
串流品質，所以我們可以把該流程簡化成以下流程
如圖 4-3 所示。 
 17
  使用者到訪間隔時間：遵循 lognormal 分佈
(
⎭⎬
⎫
⎩⎨
⎧ −−
2
2
2
))(log(exp
2
1
σ
μ
πσ
x
x
) 
其中 =3.59 ,  =1.52 
  節點個數：1000 個節點 
  在這裡我們以 GT-ITM[23]拓樸產生器產生
隨機的 transit-stub，並由 GT-ITM 決定每個
節點的傳送延遲時間。由兩個 transit domain
組成，其中兩個 transit domain 中又分布 8
個 stub domain。 
  節點頻寬：10Mbps/100Mbps 節點的接收頻
寬為 10Mbps，而影音串流伺服器與路由器
則為 100Mbps 
 
4.4.2 實驗數據與分析 
 
實驗一：起始延遲時間 
在實驗一中，我們將 1000 個點依照 lognormal
分佈加入網路進行串流，並且紀錄每個點的啟始延
遲時間，起始延遲時間指節點加入頻到伺服器群
時，先與影音串流伺服器取得連接的節點後，在與
新的父節點溝通，直到正式接收串流可以解出第一
張 I frame 為止的時間。如圖 4-5，在 P2PHB 的表
現(藍色,下方的線條)中，10000 個點來說的平均延
遲時間只有 1.495 秒，另外在 PPBS(紅色,上方的線
條)中，因受限於廣播的周期性，所以新加入的節
點必須要等下一個周期的廣播起始後才可以正式
開始播放，造成起始等待時間上升的情形，在這裡
的 d，也就是片段與片段之間的間隔時間為 30 秒
鐘，實驗結果得到 1000 個節點的平均等待時間為
12.75 秒。 
 
 
圖 4-5 起始延遲時間比較圖 
 
實驗二：失效復原時間 
實驗二中，我們假設點對點串流中的節點失效
情形發生(如圖 4-6)，針對點對點網路中，節點時
常會有來來去去的狀況，所以在此實驗 1000 個節
點中，如果在同一時間有 100 個節點同時失效時，
整個每個節點進行復原的時間需要多少。在本實驗
我們可以得到 PPBS 的平均延遲時間 1.804 秒，而
P2PHB 的延遲時間為 2.32 秒，此外在這裡需要討
論的是PPBS的延遲時間會隨著失效的節點不同有
很大的差異，因為 PPBS 的架構為廣播，所以當一
個節點失效的時候，系統的修復、所有的節點能不
能夠繼續看都仰賴備援節點的補上，如果第二優先
的節點也失效的話，那麼延遲時間就會再繼續增
長。 
 
 
圖 4-6 節點失效復原時間延遲圖 
 
實驗三：錄放功能快取命中率 
實驗三(如圖 4-7)，我們假設使用者做跳轉或倒
轉的功能距離與行為是均勻分布的，可以是播放時
間的任何一個點，並且假設使用者自己的快取空間
為最大，最多可以快取所有的影片空間。在這裡我
們以 Directstream[24]與 P2PHB 架構進行比較，原因
是因為 PPBS 架構上並不支援錄放功能，而實際上
PPBS 的運作環境也是在可廣播環境下，因此我們以
Directstream 進行效能評估的比較方向。我們可以發
現 P2PHB 有著比 Directstream 平均高 1.46 倍的快取
命中率，尤其在影片剛播放的時間，快取的命中率
較 Directstream 有著更顯著的表現。原因是 P2PHB
在播放初起會取 HN 的頻道下載量，在之後的所有
頻道都會依照 b/i 的速度進行快取，而 Directstream
則無，所以造成快取命中率的差異。 
 
 
圖 4-7 錄放功能命中率與播放時間圖 
 
5. 結論 
 
本計畫提出了一個在複製可追查內容遞送網
路架構下的近端伺服器選擇法。在複製可追查型遞
送網路架構下，終端使用者必須先向內容提供者報
到，才能進行下載服務。使用者第一階段先利用前
端的 CDN-DNS 找到最靠近本地網域名稱伺服器
的內容快取伺服器；當終端使用者向內容快取伺服
 19
construction and server selection", in Proc. 
INFOCOM, pp. 1190- 1199, 2002. 
[14] Ng, TSE, and H. Zhang. "Towards Global 
Network Positioning." Proceedings of ACM 
SIGCOMM IMW 2001, pp. 25-35, San 
Fransisco, CA, USA, Nov. 2001. 
[15] Bram Cohen, "Incentives Build Robustness in 
BitTorrent", May 22, 2003 
[16] Azureus. http://azureus.sourceforge.net/ 
[17] VLC. http://www.videolan.org/vlc/ 
[18] eclipse. http://www.eclipse.org/ 
[19] BitComet. http://www.bitcomet.com/ 
[20] ABC. http://pingpong-abc.sourceforge.net/ 
[21] Shareaza. http://www.shareaza.com/ 
[22] K.H. Ho, W.F. Poon and K.T. Lo, "Peer-to-Peer 
Broadcasting Scheme for Video-on-Demand 
System" International Symposium on 
Communications and Information Technologies 
Oct. 2006 
[23] E. Zegura, K. Calvert, and S. Bhattacharjee, 
“How to model an internetwork,”in 
INFOCOM96, San Francisco, CA, 1996. 
[24] Yang Guo，Kyoungwon Suh，J. Kurose，and D. 
Towsley ， “ A peer-to-peer on-demand 
streaming service and its performance 
evaluation, ＂  International Conference on 
Multimedia and Expo (ICME)，2003. 
 
 
 
