ii
圖 目 錄
圖 3.1 資料分佈於分類邊界示意圖 ..........................................................................15
圖 3.2 資料平移示意圖 ..............................................................................................16
圖 3.3 分類偏誤示意圖 1...........................................................................................19
圖 3.4 分類偏誤示意圖 2...........................................................................................20
圖 4.1 常態分配產生流程圖 ......................................................................................29
iv
表 4.11 分類次數—情境二 ........................................................................................35
表 4.12 分類機率—情境二 ........................................................................................35
表 4.13 熵與權重—情境二 ........................................................................................35
表 4.14 模擬車速資料—情境三 ................................................................................36
表 4.15 分類次數—情境三 ........................................................................................37
表 4.16 分類機率—情境三 ........................................................................................37
表 4.17 熵與權重—情境三 ........................................................................................37
2性，並提供較大範圍的資訊。資料融合的技術起初是用於軍事上的用途，後來便
逐漸應用到各個領域，其中也包括交通資料融合上的應用，過去曾有許多的研究
對資料融合的技術做探討，但各有使用上的限制及誤差。因此本研究期望能發展
一資料融合模式，用以整合交通資料，進而提供較可靠的即時路況資訊。
1.2 研究目的
本研究的主要目的在於發展一套合適的資料融合模式，用以整合不同來源
的交通資料(如：固定式車輛偵測器、影像偵測器、紅外線偵測器、GPS 探針車
等)，以提供駕駛者較精確、可靠之路況資訊。
1.3 研究範圍
資料融合的流程包括有資料的收集、過濾、分析以及結合，本研究僅考慮
結合的部分，對於資料收集、過濾及分析方面則不加探討。另外，交通資料的種
類很多，包括時間平均速度(Time Mean Speeds)、車間距(Headway)、車輛種類、
車道佔有率(Lane Occupancy)、車輛位置，車輛速度等，本研究發展的資料融合
模式可應用於各種交通資料融合上，在之後的章節則以平均車速為例來做探討。
4供資訊。
5. 增加時間與空間的範圍：各種偵測器的可用範圍不同，利用不同範圍的偵測
器來互相彌補不足的地方，提供較大範圍的資訊。
6. 降低成本：多個偵測器的平均成本會遠低於一個相同精確度的偵測器。
2.1.2 資料融合的方法與分類
資料融合可用單一或是多種處理程序來整合資料，也依提供給使用者資訊
的程度不同而有所區分。美國國防部將資料融合程度分為三個層級[9]：
 層級一：對收集到的原始資料做篩選及過濾，將極端值與不符合常理的部分
刪除或加以修正，使得修正後的資料較能代表實際的情況。以路段
交通資料來說，收集到的原始資料可能包括車輛因紅綠燈減速或停
等的部分，以及偵測器誤差所造成的異常值，所以在使用這些資料
的時候，必須先加以修正才較能符合實際的路段資訊。
 層級二：將兩個或兩個以上來源的資料，給予適當的權重，使其融合以提供
一個較可靠的資訊。固定式車輛偵測器與 GPS探針車為國內最常見
的路段交通資訊來源，但兩者的特性、使用範圍、誤差及同時段內
的資料數皆不盡相同，若將兩者收集到的資料以相同的權重融合，
來提供路段交通資訊，為一較不合理的做法，因此，使用層級二的
資料融合方法來決定各資料來源的權重再加以融合，對路段交通資
訊較能做精確的推估。
 層級三：對層級二的資訊加以解釋及說明，並提供解決的方案供使用者參
考。在路段交通資料上，層級二的資料融合能提供駕駛者路段上的
平均行駛速率，而層級三的資料融合能更進一步地告訴駕駛者此路
段是否擁塞，並於擁塞時建議駕駛者改走其他較順暢之道路，以節
省旅行時間。
6理論，結果發現三者判斷的正確性皆比單以影像或聲音來判斷的情況好，但這三
種方法卻無顯著的差異。
2003 年 Huadong et al.[6]更進一步地提出動態權重 Dempter-Shafer 理論
(Dynamic Weighted Dempster-Shafer Theory)，以同樣的實驗數據來比較此四種方
法(線性加總、DS理論、權重 DS理論及動態權重 DS理論)的成果，結果顯示，
以動態權重 DS理論來融合資料，有較高的正確率。
2004年曾治維[15]將 Dempter-Shafer理論應用於交通資料整合上，為了解決
兩資料來源的衝突，此模式先將兩組資料平移，依照其樣本數與標準差的特性，
移至同一平均值之後，再處理資料融合的程序。此研究結果發現雖然其模式能降
低兩資料來源的衝突，但卻容易將資料平移至樣本數較多之來源的平均值，若在
其誤差較大的情況下，融合後的結果則較不盡理想。
Andrej et al.[1]在 1999年提出以 TBM(Transferable Belief Model)來找出生產
線上的錯誤，並將其應用於直流馬達的錯誤測試。在銷售市場上，如何提高產品
的品質以及降低產品的製造成本是相當重要的，在一個自動化生產工廠裡，一條
龐大生產線也許有幾千幾萬個組件，我們無法精確的預測錯誤可能發生的地方，
TBM 就是在處理這種未知假設的問題。TBM 的概念與傳統的條件機率理論相
似，兩者的差別在於，傳統的條件機率理論會先定義出可能出現的集合，並且需
要各集合的先驗機率(priori probability)，而 TBM 會給予未知的集合一個機率函
數，且不需要各集合的先驗機率。以表 2.2來說，假設有兩個偵測器的推論結果
不相同，一個偏向於假設一，一個偏向於假設三，但是依傳統條件機率的融合方
式，卻會認同假設二，如此就有可能會造成偏誤，而 TBM則會給予未知的集合
一個機率函數。研究的結果認為 TBM容易與模糊邏輯結合應用，且測試的結果
發現，以 TBM 結合模糊邏輯的方法來診斷系統錯誤，正確率優於布林推論
(Boolean Reasoning)的結果。
8之後再用模糊回歸的方式取兩資料來源的權重，來估計路段上的平均車
速。Keechoo and YounShik用MAPE(Mean Absolute Percentage Error)的方式來比
較模糊回歸與幾何平均的測試結果，認為單純以幾何平均的方法來推估路段車
速，無法考慮車輛左轉以及公車上下客人的停等，而模糊回歸可將這部分的車
速，給予較低的歸屬函數，來反應因上述情形所造成的延滯。
1992年 Otman and Helen[10]為了解決這個問題，提出以團隊共識法(Team
Consensus Approach)來降低機器人內各偵測器觀測值的衝突。資料融合的技術在
機器人的領域上應用的相當廣泛，為了能使機器人清楚的了解周遭的情況，機器
人身上通常都會有許多的偵測器來量測附近物體的物理特性(如：位置、速度、
加速度等)，而在這些偵測器的量測結果中，時常會發生衝突，或者是單一偵測
器的準確度不高的情況，因此如何降低機器人內各偵測器觀測值的衝突，並提高
觀測值的正確性，就變成相當重要的一個課題。團隊共識法主要的概念是以可能
出現的集合機率來表示效用函數，由於每一個效用函數皆會影響其他偵測器的效
用函數，因此必須對其他的效用函數加以修正，直到收斂為止，如此各個資料來
源則會得到一個最佳的權重。Otman and Helen用 Shannon熵(Shannon Entropy)
來求出修正的權重。熵為信息理論 (Information Theory)的重要觀念，藉以描述關
於不確定性的數學度量，Otman and Helen的方法會使得融合後的資料具有最小
的熵值，也就是說能降低資訊的不確定性，並以機器人的辨識系統來做模擬測試。
2004年吳欣潔[14]將熵應用於交通資料的融合，以最佳權重法(The Optimal
Weighting Scheme)使得融合後的交通資訊有最小的不確定性，並以道路服務等級
對交通資料做分類，計算出各資料來源的熵再加以處理，此研究認為路段上車速
觀測值的異常可以反應在不確定性上，但是卻無法得知其固定誤差，且計算的熵
值與資料分類的標準有關。
10
三、模式構建
本章節將提出整合不同偵測器之交通資料融合模式，並以路段平均車速為
例來做探討。
從各偵測器取得的交通資料中，由於取樣差異與儀器誤差的不同，所以各
來源的資料特性(如樣本數、平均值、標準差等)亦有所不同，若我們將所有資料
來源的平均車速直接取平均值，來代表此時之路段平均車速，則有失其合理性，
因此交通資料融合常以加權平均的方式來處理。加權平均法為給予各偵測器適當
的權重再進行加總，如 3.1 式，首先我們可以從偵測器 i收集的資料中，得到路
段平均車速 iV ，再依各偵測器收集到的資料特性，給予不同的權重 iW，予以加
總，求得融合後的平均車速V 。
1
N
i i
i
V WV

 (3.1)
由 3.1式可知，融合後的平均車速會受到給予的權重所影響，因此要如何決
定各偵測器適合的權重 iW，為資料融合之重點所在。
本研究以最佳權重法來構建交通資料融合模式，計算每個資料來源的權
重，將不同的資料加以融合。最佳權重法的原理在於將系統的不確定性最小化，
使得融合後的系統有最低的不確定性。因此在用最佳權重法來獲得各偵測器的權
重前，必須先量測各偵測器的不確定性。
文獻中以 Shannon 熵來代表各偵測器的不確定性，應用於平均車速資料融
合上[14]，Shannon熵為信息理論(Information Theory)中不確定性的量測方法，利
用樣本空間集合發生的機率，來計算每組資料的不確定度。
綜合上述可知，本研究的資料融合模式主要分為熵的計算以及最佳權重法
兩個部分。本章 3.1、3.2節先對最佳權重法及熵的基本概念做一個簡單的敘述，
3.3 節介紹吳欣潔如何以最佳權重法將熵值最小化，應用於交通資料的融合上
12
將 Z分別對 iW與偏微分，使一階導函數為 0，求得：
22i i
W
H
 (3.7)
 1i
i S
W 

 (3.8)
綜合上列 3.7、3.8式：
2 12i S iH


 (3.9)
2
2
i
i S
H
 

  (3.10)
將 3.10式代入 3.7式得：
2 2
1
i
i i
i S
W
H H

  (3.11)
3.11 式即為各偵測器之最佳權重。由 3.11 式的結果可以發現，各偵測器的
權重與不確定性的平方和成反比，因此不確定性高的資料，會分配到較低的權
重；反之，不確定性低的資料，則會分配到較高的權重，利用此方法來降低總系
統的不確定性。由 3.11式可知，權重 iW為不確定性 iH 的函數，因此只要能求得
資料的不確定性 iH ，即可求得權重 iW。
3.2 熵(Entropy)
熵為一種不確定性的表示方式，最早為 Clausius 提出，當時是用來量測熱
力系統中的能量。到了 1940 年代後期，由於信息理論的需要而首次出現了
Shannon 熵，藉以描述關於不確定性的數學度量。
Shannon 假設樣本空間 X 中有n個事件，其中每一個事件 iw 發生的機率為
ip ， 1, 2,...,i n ，為了量測此樣本空間的「不確定度」，則定義一個函數
14
3.3 最佳權重法應用於交通資料融合
3.3.1資料分類及熵的計算
由於本研究之模式是利用各資料之熵值來決定融合的權重，因此我們必須
先計算各偵測器的熵，才能進一步地來推估權重。由 3.12 式可知，計算熵值必
須要有樣本空間內各集合發生的機率，然而路段平均車速為一連續性分佈的資
料，因此必須先對蒐集到之原始交通車速資料分類，才能進一步做熵值的計算，
再依各資料來源的熵來獲得權重。
根據交通部公路容量手冊，交通資料可依不同的道路等級，將服務水準分
成六級，如表 3.1所示，每個等級之服務水準各有不同的標準。為了簡化模式，
吳欣潔則將資料分類修正為三類[14]，如表 3.2所示。
表 3.1 道路服務水準分類
道路等級 I II III
自由車流速率(kph) 55 45 40
道路服務水準 平均車速(kph)
A >51 >43 >33
B 39~51 32~43 25~33
C 34~39 27~32 20~25
D 29~34 23~27 16~20
E 21~29 17~23 10~16
F <21 <17 10
表 3.2 修正後之分類
道路等級 I II III
自由車流速率(kph) 55 45 40
道路服務水準 平均車速(kph)
A >40 >30 >25
B 30~40 20~30 16~25
C <30 <20 <16
16
圖 3.2 資料平移示意圖
經過上述之資料平移，就能降低熵值受到資料分佈位置的影響，而僅以資
料的變異程度來決定資料的不確定性。表 3.3為資料平移的範例，我們採用道路
等級 I的分類來做示範，步驟如下：
1. 計算原始資料的平均車速：30.86kph
2. 道路分類範圍之中心值：35kph
3. 計算平均車速與中心值的差值D：35 30.86 4.14  kph，再將每筆資料
均加上 4.14 kph，使得經平移後的平均車速為分類範圍中心值 35kph。
18
有了各分類的機率函數之後，就可以來計算此組資料的熵。熵是被用來描
述資訊的不確定性，Shannon熵定義為
1 2
1
( ,..., ) log
n
n i i
i
H p p p p


其中 1( ,..., )nH p p 為熵， ip為每個可能出現集合的機率。
依照 Shannon熵的計算方法，可計算出表 3.4之資料的熵值為 1.524，即為
此組資料的不確定性之度量。
3.3.2 權重的計算
在求得熵值後，我們再進一步的利用熵值來計算各資料來源所得之平均車
速的權重，並用此權重推估融合後之路段平均車速。由 3.11 式可知，最佳權重
法求得各偵測器之最佳權重為
2 2
1
i
i ii S
W
H H
 
求得各偵測器之最佳權重後，再依 3.1式來融合各偵測器的平均車速，得到
融合後的平均車速。表 3.5為資料融合之範例，由範例中可以發現，經由最佳權
重法的計算，熵值較大的偵測器(Sensor 1)則會得到較低的權重。
表 3.5 資料融合範例
資料來源 平均速率 熵 權重 融合後之平均速率
Sensor 1 30.86 1.524 0.374
Sensor 2 34.71 1.179 0.626
33.27
20
表 3.6 分類偏誤範例 1
資料來源 Sensor 1 Sensor 2
標準差 3.07 2.88
次數 機率 次數 機率
A
B
C
1
26
3
0.033
0.867
0.100
0
28
2
0.000
0.933
0.067
熵 0.675 0.363
權重 0.225 0.775
或者當某一組資料的車速皆屬於同一個集合(其中一個集合的機率函數為 1)
時，則權重的計算則會變成無意義(熵值為 0)，如圖 3.3、表 3.7所示，在此偏誤
範中，Sensor 2的資料完全落於 B級中，所以 Sensor 2的不確定性為 0，權重為
無意義，如此便無法做資料融合的處理。
圖 3.4 分類偏誤示意圖 2
22
表 3.8 分類偏誤範例 3
資料來源 Sensor 1 Sensor 2
標準差 9.41 15.12
次數 機率 次數 機率
A
B
C
10
9
11
0.333
0.300
0.367
11
5
14
0.367
0.167
0.467
熵 1.580 1.475
權重 0.466 0.534
由於依文獻中之分類方法會有造成偏誤的可能，因此本研究提出距離權重
法來改善上述資料分類所造成的偏誤情況。明確分類法是以 0或 1的方式來做資
料次數的計算，而距離權重法是利用每一筆車速與相鄰兩類組中點的距離來計算
權重，以小數的方式來統計次數。首先，假設有 n筆車速資料，第 i筆資料的車
速為 iV，分配到第 j類的權重為 ijN ，各分類的組中點為 jm ，對於第 i筆資料 iV 來
說，若 iV 小於第 1類的組中點 1m ，則此筆資料在第 1類的次數為 1；若 iV 大於第
n類的組中點 nm ，則此筆資料在第 n類的次數為 1；若 iV 恰等於某一類的組中
點，則此筆資料在該類的次數為 1；若 iV 在某兩類的組中點之間，則依此車速與
這兩類的組中點的距離倒數 1jD
、 11jD

，來計算此筆資料分配至這兩類的權重，
如下列步驟所示。
24
正後，其權重為 0.559與 0.441，不致於造成偏誤。
因此用距離權重法來修正各資料機率函數的計算方式，不但可以減少資料
分佈大多於分類邊界附近以及變異程度過大的偏誤，也可以計算當 B 組的機率
為 1時的權重，改善上述之情況。
表 3.10 修正分類偏誤範例 1
資料來源 Sensor 1 Sensor 2
標準差 3.07 2.88
次數 機率 次數 機率
A
B
C
1
26
3
0.033
0.867
0.100
0
28
2
0.000
0.933
0.067
熵 0.675 0.363
固定
分類法
權重 0.225 0.775
次數 機率 次數 機率
A
B
C
1.79
26.42
1.79
0.060
0.881
0.060
1.76
26.48
1.76
0.059
0.883
0.059
熵 0.647 0.640
距離
權重法
權重 0.494 0.506
26
四、模擬測試
本研究在上一個章節已對資料融合模式的基本架構做介紹，期望以距離權
重法來改善最佳權重法的分類機率計算方式，降低上述偏誤的影響，為了了解修
正後的結果是否有明顯的改善，因此本研究以電腦模擬的方式，假設可能產生偏
誤的情況，分別計算出距離權重法以及明確分類法的結果，加以比較，希望能評
估模式改善的效果。本章在 4.1 節說明模擬資料的產生方式，4.2 節對測試情境
的設計做一個簡單的描述，4.3節將模擬測試的結果作分析。
4.1 模擬資料之產生
本研究期望以電腦模擬的方式，來測試距離權重法改善的效果，但由於要
以電腦產生模擬的車速資料，必須要先了解車速資料的分佈型態，所以本研究擬
用歷史交通資料，以配合度檢定來推估其分配的型式。
在歷史資料方面，採用一計程車車隊的 GPS資料，分佈的時間及地點如下，
車速資料如表 4.1所示。
日期：94年 10月 7日
時間：19:00~20:00
地點：新竹市東大路二段 武陵路口－水田街口段
首先我們假設母體為常態分配，建立對等假設如下：
0H ：母體為常態分配
1H ：母體非常態分配
設定型 I誤差風險值α=0.05，並計算相關參數，如表 4.2所示，並以卡方檢
定來看推論是否正確。
28
表 4.2 卡方檢定頻率分佈計算
接受 0H車速分類
(kph)
樣本頻率
機率 期望頻率
相對平方殘餘值
0-11 17 0.285 15.11 0.24
11-22 15 0.300 15.90 0.05
22-33 16 0.295 15.64 0.01
33-44 3 0.103 5.46 1.11
44-55 2 0.017 0.90 1.34
總和 53 1.000 53 2.75
由於設定的分類數為 5，常態分配的參數有均數及標準差兩個，因此卡方分
配的自由度為 5-2-1=2，而在α=0.05下， 2 (0.95;2) 5.99  ，判定法則為：
若 2 9.21X  ，則接受 0H ，母體為常態分配。
若 2 9.21X  ，則接受 1H ，母體非常態分配。
由表 4.2計算出相對平方殘餘值為 2.75，小於 5.99，因此接受 0H ，母體為
常態分配。
得知車速資料為常態分配後，本研究以 Visual Basic程式語言自行撰寫常態
分配產生器，來控制母體均數、標準差及樣本數，若產生的車速資料小於 0或大
於 70，則視為極端值刪除，直到產生足夠之樣本數，圖 4.1為車速資料產生流程
圖。
30
4.2 實驗設計
本研究與過去最佳權重法不同的地方，在於以距離權重法來改善明確集合
的分類方式，減少明確分類法所造成的偏誤，因此為了比較距離權重法與明確分
類法的差異，在實驗設計上，主要針對可能發生偏誤的情況來做情境的假設。
明確分類法可能發生偏誤的情況有三種：
1. 車速資料大多集中於分類 B，且部分資料於分類邊界附近。
2. 所有資料皆為同一分類。
3. 資料的變異程度過大。
以下則對上述三種情況來做實驗設計：
情境一：為了測試資料分佈集中於分類 B，且部分資料於分類邊界附近的情況，
因此設計兩資料的樣本數、母體均數相同，且母體標準差皆為 3，實驗
設計如表 4.3。理論上變異程度相同的兩組資料，所得的權重應相差不
大，藉由情境一的實驗來觀察以距離權重法是否能改善明確分類法的偏
誤。
表 4.3 實驗設計—情境一
資料 樣本數 母體均數 母體標準差
資料一
資料二
30
30
35
35
3
3
情境二：為了觀察所有資料皆為同一分類的情況，故將資料一的標準差設為 2，
則所有的資料會分至同一組內，由於此方案無法以明確分類法來計算權
重，所以僅觀察當資料二為不同標準差時，距離權重法是否能合理的分
配權重。實驗設計如表 4.4。
32
4.3 測試結果
本節將依照情境一、二、三設計的參數，來產生車速資料，觀察兩種分類
方法獲得的權重，並加以分析及比較。
4.3.1 情境一
情境一的計算步驟及結果如表 4.6 ~ 4.9所示。
由表 4.8可以得知，當資料分佈集中於分類 B的時候，以明確分類法計算，
分類 B 會有相當高的機率函數，而且又因為樣本數不多，每一筆資料的分類對
於機率函數的敏感度很高，因此只要在分類次數上相差一筆，就會容易造成兩組
資料的不確定性差異很大，而求得的權重也相去甚遠。如情境一的結果所示，兩
組資料的母體標準差相同，但以明確分類法計算得的權重，其中一組達七成左
右，而第三組的測試範例竟高達九成。以距離權重法計算，權重較不會受到分類
邊界的影響，兩組資料的權重皆在 0.4 ~ 0.6之間。
表 4.6 模擬車速資料—情境一
資料 樣本數 樣本均數 樣本標準差
資料一
資料二
30
30
35.2
35.5
3.07
2.88
資料一
資料二
30
30
35.2
35.5
2.91
2.78
資料一
資料二
30
30
34.5
36.2
2.79
2.78
資料一
資料二
30
30
35.7
34.8
2.90
2.79
34
4.3.2 情境二
情境二的計算步驟及結果如表 4.10 ~ 4.13所示。
由此結果可知，當車速資料皆於同一分類的時候，距離權重法仍可計算兩
資料的權重，且資料二的權重會隨著其標準差的提高而降低。另外，當資料二的
標準差為 4.23時，資料一的權重已達 0.81，其原因在於以 3.11式計算的權重，
除了與各資料的熵值有關以外，也和資料的熵值比有關，因此當兩資料的不確定
性較低時，熵值的差異對於權重的影響就會提高。由於情境二的標準差皆較情境
一小，如上述所言，同以距離權重法的結果來看，情境二的標準差對於權重的敏
感度較情境一來的高。
表 4.10 模擬車速資料—情境二
資料 樣本數 樣本均數 樣本標準差
資料一
資料二
30
30
35.1
34.9
1.99
3.20
資料一
資料二
30
30
35.6
33.8
1.81
4.23
資料一
資料二
30
30
34.9
32.8
1.81
5.18
資料一
資料二
30
30
35.0
36.3
1.80
6.40
36
4.3.3 情境三
情境三的計算步驟及結果如表 4.14 ~ 4.17所示。
由此結果可知，以明確分類法來統計次數，當標準差約為 10 的時候，A、
C類的次數就會大於 B類，因此若再將標準差加大，則熵反而會降低，權重會隨
之提高；以距離權重法來計算，標準差要提高到約為 17 時，A、C 類的次數才
會大於 B 類，因此可降低資料變異程度過大所造成偏誤的影響。但是，由於此
情境的資料變異程度皆較大，因此資料對於權重的敏感度會過小，以致於雖然權
重會隨著標準差的提高而降低，然而降低的幅度並不明顯。
另外，會造成此種偏誤的原因在於 B 類的區間較 A、C 兩類小，所以當資
料變異程度大時，A、C兩類的機率函數會大於 B類，因此若將分類的區間修正
為等距，也可以降低此種偏誤的影響。
表 4.14 模擬車速資料—情境三
資料 樣本數 樣本均數 樣本標準差
資料一
資料二
30
30
39.5
38.0
10.12
13.52
資料一
資料二
30
30
37.4
35.5
9.41
15.12
資料一
資料二
30
30
39.6
41.0
10.59
17.52
資料一
資料二
30
30
35.3
36.0
9.15
20.46
38
4.4 模擬測試小結
由上述各方案的結果，我們可以得到幾點結論：
1. 當資料分佈集中於分類 B的時候，以明確分類法計算，會因為資料對機率函
數的敏感度過大，而造成過度信賴某組資料的情況。以距離權重法計算，權
重較不會受到分類邊界的影響。
2. 當車速資料皆於同一分類時，用明確分類法無法計算權重；以距離權重法則
可計算，且權重會依標準差增大而變小，但由於一組資料的不確定性過小，
而導致此種情況資料變異程度對權重的敏感度提高。
3. 當資料的變異程度較大時，以明確分類法來計算，當標準差約為 10的時候，
熵值就會開始降低，而造成偏誤；以距離權重法來計算，標準差要提高到約
為 17時，熵值才會開始降低，因此可降低資料變異程度過大所造成偏誤的影
響。此外，也可將各分類的區間修正為等距，來降低資料變異程度大的影響。
4. 最佳權重法計算的權重會與各資料的熵值比有關，也就是說當所有資料的熵
值皆較大時，熵值的差異對於權重的影響會降低；而當某一組資料的熵值很
小時，則熵值對權重的敏感度會提高。
40
2. 本研究僅以資料的可靠度來做為資料融合的依據，建議未來可再發展以資料
的準確度為基礎的資料融合模式。
42
九十三年。
[15] 曾治維，「Dempster-Shafer理論於交通資料整合技術之應用」，國立交通大
學碩士論文，民國九十三年。
Jin-Yuan Wang and Chih-Kang Lin
出席國際學術會議心得報告
計畫編號 95-2218-E-009-011-
計畫名稱 用路人異質資訊融合與應用技術平台之開發--子計畫一：異質交通運輸資訊融合技術之研究(3/3)
出國人員姓名
服務機關及職稱
王晉元
國立交通大學 運輸科技與管理學系 副教授
會議時間地點 美國華盛頓特區，2007年 1月 20日～25日
會議名稱 Transportation Research Board Annual Meeting
發表論文題目 A Network Model for the Multiple Depot Vehicle Scheduling Problems ofPublic Transit
一、參加會議經過
本人於本年元月二十日到二十五日之間，與國立交通大學運輸科技與管理學系博士
候選人林至康，一同赴美國華盛頓特區參加 TRB年會，發表論文一篇。
本次會議，除了發表上述論文外，也與世界其他國家的研究人員交換研究心得，對
於正在進行與未來的研究方向與方法，彼此交換意見，對於學術發展與交流頗有助
益。
此外，林志康同學也與其他國家的研究生交換研究心得，對於其眼界的開拓與學術
訓練的培養都有著明顯的助益。
二、與會心得
（一）有關大眾運輸排班問題目前仍為運輸研究領域的重點研究項目之一。
（二）研究方法除了利用巨集式啟發解法外，由於電腦硬體效率的顯著提升，越來越多
的研究開始採用以分支定限為基礎的方法論。
（三）對於有關智慧型運輸系統，有越來越多的研究專注於此，尤其是有關旅行時間的
推估上。
A Network Model for the Multiple Depot Vehicle Scheduling
Problems of Public Transit
Jin-Yuan Wang and Chih-Kang Lin
3
models. A branch-and-bound based heuristic algorithm is also proposed to solve this model
efficiently without losing significant solution quality. Two real world case studies are
performed to evaluate the robustness of our formulation and the efficiency of the associated
solution algorithm. The results demonstrate that the proposed model is appropriate and
solution procedure for the MDVSP is efficient in solving the MDVSP.
KEY WORD
Vehicle scheduling; Vehicle scheduling; Multiple depots; Public transit;
Jin-Yuan Wang and Chih-Kang Lin
5
the above mentioned issues. Besides, a heuristic algorithm is also developed to solve this
model. This paper is organized as follows. We will first review previous relevant researches
and summarize the practical issues of the MDVSP. We then formulate a network model for
the MDVSP and develop a solution procedure. Finally, some computational tests are
performed on two real world cases.
LITERATURE REVIEW
1. Definitions of Terms
Block: A block is a set of trips that can be served by a single vehicle without violating any
constraint.
Deadhead trip: A deadhead trip means a vehicle moving from one location to another
without providing service.
2. Mathematical formulations for MDVSP
The MDVSP can be formulated in three different approaches: the minimal cost network
problem (1)(2)(3)(4)(5), the minimal circulation/assignment problem (6)(7)(8) and the set
partitioning/covering problem (3)(9). The minimal cost network formulation and the minimal
circulation/assignment formulation are built based on a network flow model, in which the
decision variable is associated with the arcs connecting two trips. A generic form of this
formulation is as follows(1).
Minimize
( , ) 

p
p
ij ij
p P i j A
c x (1)
Subject to 1
 

p
p
ij
p P j V
x i N (2)
0
 
  
p p
p p
ij ji
i V i V
x x  p P  pj V (3)
,

 p pn p j
j N
x v  p P (4)
 0,1pijx   p P ( , )  pi j A (5)
The objective function (1) seeks to minimize the total cost. Eq. (2) ensures that each trip
is performed exactly once. Eq.s (3) and (4) are fleet size and flow conservation constraints,
respectively. And Eq. (5) specify that each arc can be used at most once.
As for the set partitioning/covering problem formulation, the variables are associated
with blocks containing trips which can be served consecutively satisfying some constraints. A
generic form of this formulation is as follow(1).
Minimize
1
n
j j
j
c x

 (6)
Subject to
1
1
n
ij j
j
a x

 i T (7)
Jin-Yuan Wang and Chih-Kang Lin
7
represents time span and depot locations respectively. Each box represents a single trip,
which includes service duration, departure depot, arrival depot, and the service vehicle index.
The arc, connecting two boxes, indicates the sequence of trips served by a vehicle. Each
block includes trips that satisfy constraints and can be served by one vehicle, and each
vehicle has to return to the same depot from which it departs. The MDVSP is to find a set of
blocks which serve all trips with minimal objective value and minimal number of vehicles.
Because of the time dimension, any block in the MDVSP is acyclic, i.e. there are no cycles in
the block. We summarize a number of characteristics of MDVSP we considered in this
research.
(1) Each trip has to be served by one and only one vehicle;
(2) All trips need to be served by the minimal number of vehicles;
(3) The following attributes of each trip are known. That is, each trip i is associated with:
(a) is : the departure depot;
(b) ie : the arrival depot;
(c)i : the departure time;
(d)i : the length of service time, or duration;
(e) ioc : the cost of serving this trip;
(4) Different deadhead trip types (types of deadhead trips will be discussed later) are allowed;
(5) For any feasible solution, the costs of performing all trips (
1
N
ii
oc ) are the same, so this
cost can be ignored.
2. Model Formulation
Our proposed mathematical formulation for MDVSP is as follows:
Minimize
,
, ,
( ) ( ) ( ( )
( )
j ip p p
ij ij n p j ij
p P i j N p P j N p P i j N j i
c x x x
 
  
      
 
   
  
  
, , , ,
,
( )p p pij ij j n p j n p n p j n p j
p P i j N j N j N
x x x      
   
     (10)
s.t.
, , 
 
   p p p pij n p j ji j n p
i N i N
x x x x  p P j N (11)
,( ) 1
 
  p pij i n p
p P j N
x x i N (12)
,
p
n p j
p L j N
x N
 
 (13)
,
( , )
p p
n p j ij
p L j N p L i j I
x N x
   
   (14)
,( ) 0
p
i n p i
i N
p s x 

  p P  (15)
Jin-Yuan Wang and Chih-Kang Lin
9
which are:
Strategy 1: All depot deadhead trips and street deadhead trips are allowed–constraints (15),
(16) and (17) should be included in the model.
Strategy 2: Depot deadhead trips are allowed and street deadhead trips are not allowed –
constraints (15) and (16) should be included in the model.
Strategy 3: Depot deadhead trips are not allowed and street deadhead trips are allowed –
only constraint (17) should be included in the model.
Strategy 4: All depot deadhead trips and street deadhead trips are not allowed –none of
constraints (15), (16) and (17) is included in the model.
Notice that the total number of trips departing from each depot must be equal to that of
returning to the same depot if the fourth strategy is adopted (i.e.
, , 
 
 p pn p i j n p
i N j N
x x  p P ).
Otherwise, the solution is infeasible.
SOLUTION PROCEDURE FOR THE MDVSP
A heuristic algorithm is proposed to solve the MDVSP since it is a NP-hard problem. If
a depot is selected (called depot A) and ignore the other depots, the MDVSP can be viewed as
a single depot vehicle scheduling problem. This single depot problem can be solved by
using Brand-and-Bound or any efficient algorithm. Some of blocks in the solutions are
feasible and some are infeasible for this depot. A feasible block is the one with the first trip
from depot A and the last trip returning to depot A. Take all feasible blocks from the
network and repeat the procedures until every depot is selected. This algorithm can be
summarized below:
Step 1. If deadhead trip strategy 4 is adopted, proceed to Step 2; otherwise, go to Step 3.
Step 2. If the number of trips departing from each depot is equal to that of returning to the
same depot, go to Step 3. Otherwise, the problem is infeasible.
Step 3. Set p = 1 and ignore the other depots.
Step 4. If p=|P|, go to Step 8. Otherwise proceed to Step 5.
Step 5. Apply Branch-and-Bound or any efficient algorithm to solve the single depot vehicle
scheduling problem with only depot p is considered.
Step 6. Add every feasible block into set S and remove these blocks from the network.
Step 7. Set p = 1p and go to Step 4.
Step 8. Output set S as solution to the original MDVSP.
The flowchart of this solution procedure is shown in Figure 2.
This solution technique is a heuristic based on treating the multiple depots instance as a
single-depot one. If the number of trips is less than 1,000, Branch-and-Bound could produce
exact solution within reasonable amount of time (5). The required computational time for
this algorithm is available in the next section. If the number of total trips is large, any
Jin-Yuan Wang and Chih-Kang Lin
11
The comparisons of our solution to the KBA existing schedule are shown in Table 2.
Since the number of trips is relatively small, we can solve this instance to its optimality by
using Branch-and-Bound and compare with our solutions. Table 2 shows that the total cost of
using our heuristic algorithm is better than the KBA existing schedule. The savings are 14%,
14%, and 7% in these three scenarios. The most significant saving also comes from the
saving of required number of vehicles. Table 2 shows that the solution of our proposed model
can save up to four vehicles. Total costs and computation times of using the
Branch-and-Bound method and our heuristic algorithm in the KBA case are also shown in
Table 2. It shows that the computation time of using our heuristic algorithm is less than that
of using the Branch-and-Bound method in all scenarios. The time-saving rates are 99.65%,
99.54% and 98.08% in scenario 1, 2 and 3, respectively. This indicates our heuristic
algorithm solves large-scale MDVSP more efficiently than the B&B.
2. Sensitivity analysis
According to the above testing results, the most significant factor affecting the solutions
of the MDVSP is the capital cost per vehicle. The numerical experiments show that the
increment of the vehicle utilization cost causes a dramatic decrease in the number of vehicles.
When the capital cost per vehicle is greater than 1440 for TBC, the number of required
vehicles reaches the minimum value. In the same way, when the capital cost per vehicle is
greater than 2000 for the KBA, the number of required vehicles also reaches the minimum
number. Figure 3 and Figure 4 show the number of required vehicles versus the vehicle
capital cost for the TBC and the KBA. Figure 5 and Figure 6 show the vehicle capital cost
versus the total cost for the TBC and the KBA.
CONCLUSIONS AND FUTURE RESEARCH DIRECTION
A network model formulation for the MDVSP of public transit is presented in this paper.
The optimal number of vehicles and various deadhead trips constraints are also added to the
MDVS problem to address the real world operational conditions. A B&B based heuristic
algorithm is also proposed to solve the MDVSP. To verify both the efficiency and
effectiveness of our algorithm, we conduct two real world case studies in Taiwan with single
and multiple depots and compared our solutions to the existing real world and exact solutions.
From the first case study results, the solution using our heuristic algorithm is the optimal
solution and is superior to the existing TBC solution. Total costs are also improved by 1.76%
and 3.29% in scenario 1 and 2, respectively. Results of another case study show that total cost
improvements of KBA are more than 13% in scenario 1 and 2 and 6% in scenario 3. Time
saving rates in scenarios 1, 2 and 3 are 99.65%, 99.54% and 98.08%, respectively, with only
slightly deterioration to the exact solution. These results demonstrate that the proposed
solution procedure for the MDVSP is effective in solving real problems and hence useful for
practical operations.
Further integration of vehicle and crew scheduling process is very important because the
cost of vehicles and crews scheduling considered separately is probably much more than the
integrated one. Besides, developing more efficient heuristic algorithms for solving the
large-scale MDVSP is another important area for future research. Finally, the network model
for the MDVSP and the heuristic solution procedure can be used as tools to develop a
decision support system to help solve real-world vehicle scheduling problem.
Jin-Yuan Wang and Chih-Kang Lin
13
REFERENCE
1. Ribeiro, C. and Soumis, F., A Column Generation Approach to the Multiple Depot
Vehicle Scheduling Problem, Operations Research, Vol. 42, 1994, pp. 41-52.
2. Beasley, J. E. and Cao, B., A Tree Search Algorithm for the Crew Scheduling Problem,
European Journal of Operational Research, Vol. 94, No. 3, 1996, pp. 517-526.
3. Carraresi, P. and Gallo, G., Network models for vehicle and crew scheduling, European
Journal of Operational Research, Vol. 16, No. 3, 1983, pp. 139-151.
4. Lavoie, S., Minoux, M. and Odier, E., A new approach for crew pairing problems by
column generation with an application to air transportation, European Journal of
Operational Research, Vol. 35, No. 1, 1988, pp.45-58.
5. Ali, Haghani. and Mohamadreza B., Heuristic Approached for Solving Large-scale Bus
Transit Vehicle Scheduling Problem with Route Time Constraints, Transportation
Research Part 36A, 2002, pp.309-333.
6. Ali, Haghani., Mohamadreza, B. and Chiang, K. H., A comparative analysis of bus
transit vehicle scheduling models, Transportation Research Part 37B, 2003, pp.301-322.
7. Desaulniers, G., Desrosiers, J., Dumas, Y., Marc, S., Rioux, B., Solomon, M. M. and
Soumis, F., Crew Pairing at Air France, European Journal of Operational Research, Vol.
97, No. 2, 1997, pp. 245-259.
8. Yan., S. and Tu, Y. P., A Network Model for Airline Cabin Crew Scheduling, European
Journal of Operational Research, Vol. 140, No. 3, 2002, pp. 531-540.
9. Bodin, L., Golden B., Assad A. and Gall, M., Routing and Scheduling of Vehicles and
Crews–the State of the Art, Computers & Operations Research, Vol. 10, 1983, pp.
63-211.
10. Ball, M. O., Magnanti, T. L., Monma, C. L. and Nemhauser, G. L., Ch2. Time
Constrained Routing and Scheduling, in Handbooks in Operation Research and
Management Sciences Volume 8 : Network Routing, 1995.
11. Wang, J. Y. and Lin, C. K., A Generic Vehicle Scheduling Model for Inter-city Bus
Carriers under Fixed-timetable, Transportation Planning Journal, Quarterly, Vol. 35, No.
1, 2006, pp.107-130.
12. Orloff, C.S., Route Constrained Fleet Scheduling, Transportation science, Vol. 10, No. 2,
1976, pp. 149-168.
13. Paixao, J. and Branco, I.M., A Quasi-assignment Algorithm for Bus Scheduling,
Networks, Vol. 17, 1987, pp. 249-270.
14. Bodin, L. and Golden, B., Classification in vehicle routing and scheduling, Networks, Vol.
11, 1981, pp.97-108.
15. Ford, L. R. and Fulkerson, D. R., Flows in Networks, Princeton University Press, N. J.,
1962.
16. Bertossi, A. A., Carraresi, P. and Gallo, G., On Some Matching Problems Arising in
Vehicle Scheduling Models, Networks, Vol. 17, 1987, pp. 271-281.
17. Forbes, M. A., Hotts, J. N. and Watts, A. M., An Exact Algorithm for Multiple Depot
Vehicle Scheduling, European Journal of Operational Research, Vol. 72, 1994, pp.
Jin-Yuan Wang and Chih-Kang Lin
15
List of Tables
TABLE 1. Comparing the solution to the TBC solution -------------------------------------------16
TABLE 2. Comparing the solution to the KBA solution ----------------------------------------17
TABLE 3. Comparing results of cost and computation time between using the B&B method
and using our heuristic algorithm---------------------------------------------------18
List of Figures
FIGURE 1. The daily operation diagram for multiple depot vehicle scheduling--------------19
FIGURE 2. The flowchart of the solution procedure----------------------------------------------20
FIGURE 3. No. of vehicles vs. vehicle utilization cost for the TCB ----------------------------21
FIGURE 4. No. of vehicles vs. vehicle utilization cost for the KBA ----------------------------22
FIGURE 5. vehicle utilization cost vs. total cost for the TBC -----------------------------------23
FIGURE 6. vehicle utilization cost vs. total cost for the KBA -----------------------------------24
Jin-Yuan Wang and Chih-Kang Lin
17
TABLE 2. Comparing the solution to the KBA solution
Saving over the solution of TBC (%)Solution Vehicle idle
time
(NT dollars)
Vehicle
utilization cost
(NT dollars)
Deadhead trip
(NT dollars)
Total cost
(NT dollars)
# of
vehicles
used
Vehicle idle
time Vehicle cost Deadhead trip Total cost
Scenario 1
The B&B method 4770 1440000 3760 *1445146 25 36.48 13.79 308.69 13.91
Our heuristic algorithm 6520 1440000 2240 1448760 25 13.18 13.79 143.47 13.70
Scenario 2
The B&B method 4730 1440000 3760 *1448490 25 37.01 13.79 308.69 13.72
Our heuristic algorithm 4725 1440000 8500 1453225 25 37.08 13.79 823.91 13.43
Scenario 3
The B&B method 5375 1555200 920 *1561495 27 28.42 6.89 0 6.98
Our heuristic algorithm 4475 1555200 7680 1567355 27 13.18 6.89 734.78 6.64
TBC 7510 1670400 920 1678830 29
Note: The exchange rate was NT $1 =US $0.03051.
*:Optimal solution
Jin-Yuan Wang and Chih-Kang Lin
19
06：00 07：00 08：00 09：00 10：00 23：0011：00 22：00
A
B
C
D
00:00 ………
Trip 2
(06:15~07:20)
Depot : A→B
Vehicle 1
Trip 4
(07:30~08:40)
Depot : B→C
Vehicle 1
Trip 1
(06:00~07:00)
Depot : C→D
Vehicle 2
Trip 3
(07:20~09:00)
Depot : D→A
Vehicle 2
Trip 5
(09:00~10:00)
Depot : B→D
Vehicle 1
Trip N
(22:00~23:30)
Depot : D→A
Vehicle 1
A
B
C
D
Trip 6
(10:00~11:00)
Depot : A→b
Vehicle 2
Trip N-1
(21:30~22:40)
Trip : B→C
Vehicle 2
Time
Depots
24:00
Depots
Figure 1. The daily operation diagram for multiple depot vehicle scheduling
Jin-Yuan Wang and Chih-Kang Lin
21
596
114
73524545 45 45 45 45
0
100
200
300
400
500
600
700
0 2000 4000 6000 8000 10000
Vehicle utilization cost
N
o.
of
ve
hi
cl
es
No. of vehicles
Figure 3. No. of vehicles vs. vehicle utilization cost for the TCB
Jin-Yuan Wang and Chih-Kang Lin
23
0
200000
400000
600000
800000
1000000
0 2000 4000 6000 8000 10000
Vehicle utilization cost
To
ta
lc
os
t
Vehicle utilization cost
Figure 5. vehicle utilization cost vs. total cost for the TBC
