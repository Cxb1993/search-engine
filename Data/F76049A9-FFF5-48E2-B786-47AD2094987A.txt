multiple database scans: To discover a length-k pattern, they need k database scans for pattern 
validation. On the other hand, some of them are pattern-growth methods [6]: patterns are 
generated based on some lexicographic order by extendable (local frequent) items through item 
extension (or I-step) and sequence extension (or S-step). However this pattern-growth strategy 
requires an expensive matching cost finding local frequent items. In addition, another drawback, 
duplicate item extensions, arose in the closed pattern mining.  
Based on the analysis above, we have come up with a 3-phase model, FITS (First 
Item-extension Then Sequence-extension) for inter-transaction association mining. 
1. Frequent intra-transaction pattern generation (item-extension); 
2. Encode frequent intra-transaction pattern with a unique ID and construct them into an 
encoded horizontal database; 
3. Frequent inter-transaction pattern generation (sequence-extension). 
The FITS model is similar to previous FITI model [4]. However, a bi-format representation 
is introduced to utilize memory by storing both vertical and horizontal formats of the database. 
The idea is to use vertical-based format as an anchor to avoid repetitive scans over the horizontal 
database, while retaining the advantages of pattern growth to find local frequent items. Thus, no 
candidate generation is required in our model. This is the major difference between FITS and 
FITI since FITI apply an Apriori strategy to generate frequent continuities.  
Due to the large number of intra-transaction patterns that can be generated in the first phase, 
the encoded horizontal database as well as the vertical format can cost a lot of memory compared 
to original database. Thus, there is a strong need to reduce the number of discovered patterns. 
One such possibility is to mine frequent closed" inter-transaction patterns, i.e. those with no 
super-pattern having the same support, instead of all frequent inter-transaction patterns. 
Interestingly, we have found one great feature that relates closed intra-transaction patterns and 
closed inter-transaction patterns: if an intra-transaction pattern is not a closed pattern, it will not 
be a closed frequent inter-transaction pattern. Hence, the FITS model can well suit the situation 
for mining closed frequent inter-transaction patterns. The instant advantage is that no more 
duplicate item enumeration for closed inter-transaction pattern mining. We call the reduction of 
patterns in the first phase and the third phase for mining closed patterns bi-phase reduction. 
2. Problem Definition 
In this section, we define two inter-transaction mining tasks including frequent continuities and 
sequential patterns. The first inter-transaction mining task considers the problem in the 
transactional databases with an ordinal dimensional attribute, while sequential pattern consider 
the problem on the sequence databases or transactional databases with two ordinal dimensional 
attributes. 
2.1 Closed Frequent Continuities 
Definition 2.1. (Transactional Databases) Let E be a set of all events. An event set is a non-empty 
subset of E. A transactional database TD containing transactions in the form of (di,Xi), where di is 
dimensional attribute and Xi is an event set attribute (Xi ⊆ E). Note that the domain of the 
dimensional attribute di is an ordinal dimension and cab be divided into equal length interval, 
such as temporal and spatial unit. 
Definition 2.2. (Sliding Window) A sliding window W is a block of maxwin continuous 
 Figure 1 Enumeration Tree Comparison 
Due to the large number of intra-transaction patterns that can be generated in the first phase, 
the encoded horizontal database as well as the vertical format can cost a lot of memory compared 
to original database. Thus, there is a strong need to reduce the number of discovered patterns. 
One such possibility is to mine frequent ``close'' inter-transaction patterns, i.e. those with no 
super-pattern having the same support, instead of all frequent inter-transaction patterns. 
Interestingly, we have found one great feature that relates close intra-transaction patterns and 
close inter-transaction patterns: if an intra-transaction pattern is not a close pattern, it will not be a 
close frequent inter-transaction pattern. Hence, the FITS model can well fit the situation for 
mining close frequent inter-transaction patterns. The instant advantage is that no more duplicate 
item enumeration for close inter-transaction pattern mining. We call the reduction of patterns in 
the first phase and the third phase for mining close patterns bi-phase reduction. 
With a little modification, we have applied the FITS model to several inter-transaction 
mining tasks, including continuity pattern, and sequential pattern. Before discussing how to 
extend the FITS in inter-transaction, we first define some terms in FITS model. 
3.1 Closed Frequent Continuity Mining 
Following the FITS model, the ClosedPROWL algorithm also consists with 3 phases. The first 
phase involves the mining of closed frequent intra-transaction itemsets. The second phase is 
database transformation, where we encode each closed frequent itemset (abbreviated C.F.I.) with 
a unique ID and construct a recovered horizontal database. In the third phase, we discover all 
closed frequent continuities from the recovered horizontal database by concatenating a frequent 
continuity with its closed frequent itemsets using depth first enumeration. 
Figure 2 outlines the proposed Closed-PROWL algorithm. We apply two pruning strategies: 
sub-itemset pruning and sub-continuity pruning to reduce redundant enumeration in lines 9-11 
and 15 of the ClosedProject procedure, respectively. The sub-itemset pruning strategy can be 
stated as follows. 
Sub-itemset pruning: For two C.F.I. x and y in the project window list of a continuity P, if 
Sup(P ·[x]) = Sup(P ·[y]), the sub-itemset pruning works as following properties: 
1. If x ⊂ y, then remove x since all extensions of P ¢ [x] must not be close. 
2. If x ⊃ y, then remove y since all extensions of P ¢ [y] must not be close. 
3. If x.LocationList = y.LocationList and neither x ⊂ y nor x ⊃y, then remove both x and y, 
since all extensions of P·[x] and P· [y] must not be close. 
The sub-itemset pruning technique removes the non-closed sub-continuity of closed frequent 
continuities with zero offset since the pruning is invoked within a local search of continuity. For 
LayerPruning strategy to remove unnecessary enumeration in the same layer (line 4).  
 
Figure 3 COBRA Algorithm for closed frequent sequential patterns 
We output the new prefix sequence α only when it has the chance to be a close sequential 
pattern. This includes the following three cases: (1) |EL|<minsup (line 8) (2) |EL|<|FML| (line 
11-12) (3) |FEL|=φ (line 17-18). In the first case, no super-sequence of α can be generated as 
frequent patterns. In the second case, the supports of all super-sequences of α are less than α. In 
the third case, there are no extendable codes with the same support as α. This is equivalent to 
check for common codes that can be extended from the right direction (one of the two directions 
in BIDE). However, non close sequential patterns still can be generated. Therefore, we should 
make a closure checking to verify whether α is a closed sequential pattern or not. This is 
implemented by ExtPruning which maintains the set of generated sequences. 
4. Experiments 
In this section, we report the performance study of the proposed algorithms on both synthetic data 
and real world data. (Due to space limitation, we only show the result on real world data.) All the 
experiments are performed on a 3.2GHz Pentium PC with 3 Gigabytes main memory, running 
Microsoft Windows XP. All the programs are written in Microsoft/Visual C++ 6.0. 
 
Table 1 Comparison of various mining tasks 
 
4.1 Closed Frequent Continuity Mining 
Since the three phases of the proposed algorithms have good correspond once with three phases 
the cases (by a magnitude of 235).  
5. Conclusion 
In this project, we propose a 3-phase model FITS with a bi-format data representation for 
inter-transaction mining to overcome the drawbacks of the previous works. Based on the analysis 
in previous works, horizontal-base data representation is more suitable in database scans but it 
requires multiple database scans. Although, vertical-based representation is more efficient in 
support count but it will generate some unnecessary permutations for computation. Therefore, we 
utilize memory for storing both vertical and horizontal formats of the database. It combines the 
merit of two representations and makes pattern generation more efficient. In particular, FITS 
model is especially good for closed pattern mining. We have applied the FITS model to solve two 
inter-transaction pattern mining tasks including sequential patterns and frequent continuities. 
  
參考文獻及研究成果 
[1] R. Agrawal and R. Srikant, Fast algorithms for mining association rules, Proceedings of the 
20th International Conference on Very Large Data Bases (VLDB'94), 1994, pp. 487-499. 
[2] R. Agrawal and R. Srikant. Mining sequential patterns, Proceedings of the 11th International 
Conference on Data Engineering (ICDE'95), 1995, pp. 3-14. 
[3] H. Mannila, H. Toivonen, and A. I. Verkamo, Discovering frequent episodes in sequences, 
Proceedings of the First International Conference on Knowledge Discovery and Data Mining 
(KDD'95), 1995, pp. 210-215. 
[4] A.K.H. Tung, H. Lu, J. Han, and L. Feng, Efficient mining of intertransaction association 
rules, IEEE Transactions on Knowledge and Data Engineering (TKDE) 15 (2003), no. 1, 
pp.43-56. 
[5] J. Han and J. Pei, Mining frequent patterns by pattern-growth: Methodology and implications, 
ACM SIGKDD Explorations (Special Issue on Scalable Data Mining Algorithms), no. 2, 14-20. 
[6] K.-Y. Huang and C.-H. Chang. COBRA: Closed Sequential Pattern Mining Using Bi-phase 
Reduction Approach, DaWak 2006, Krakow, Poland.  
[7] K.-Y. Huang and C.-H. Chang. Efficient Mining Strategy for Frequent Serial Episodes in 
Temporal Database, The 8th Asia Pacific Web Conference (short paper), Harbin, China, Jan. 
16-18, 2006. LNCS 3841, pp. 824--829.  
[8] K.-Y. Huang, C.-H. Chang, and Kuo-Zui Lin, ClosedPROWL: Efficient Mining of Closed 
Frequent Continuities by Projected Window List Technology, SIAM International Conference on 
Data Mining (short paper), CA, USA, Apr. 21-23, 2005.  
 
 
