convective heat transfer is computed to demonstrate 
the model’s ability to handle complex geometries. 
All the applications had be given reasonable and 
satisfactory results and show the feasibility and 
accuracy of the present model in dealing with 
external flow problems with moving boundaries. 
 
英文關鍵詞： a new embedding finite element analysis； 
interpolation scheme； moving boundaries. 
 
around a pair of tandem cylinders and several bodies are investigated. We simulate the 
time-based variation of the flow phenomena for uniform flow past a pair of cylinders with 
various streamwise gaps between two cylinders. The results obtained of the drag coefficient 
and Strouhal number show excellent agreement with the results available in the literature. 
Additionally, details of the flow characteristics, such as velocity distribution, pressure, and 
vorticity fields are sketched in this study. Thus, it is concluded the combined embedding  
boundary method and FE discretizations are robust and accurate for solving 2D fluid flow 
with complex immersed boundaries. 
Keywords: embedding finite element method, interpolation scheme, immersed boundaries, 
drag and lift coefficients. 
1. Introduction 
In multidisciplinary science and engineering, numerical solution of the Navier-Stokes 
equations finds widespread application. With the increasing usage of simulation, the new 
numerical algorithms for solving Navier-Stokes equations is a continuous research going on 
in the field of CFD as a modeling tool in other frontiers of science. In the last several decades 
there has been seen more widespread use of Cartesian meshes for solving problems with 
irregular geometry. The simplicity and flexibility for this is the generation of the structural 
Cartesian grid compared with that required by body-fitted or unstructured finite element 
meshes. Notably, the computational savings of body-fitted or unstructured finite element 
meshes become a huge challenge when solving problems with a moving boundary. On the 
other hand, the underlying Cartesian mesh is used to constitute a powerful tool on the saving 
computational time. 
Various methods used to handle the flow in complex domains, one approach is Peskin’s [1] 
immersed boundary (IB) method that is commonly used in structure grids in Cartesian 
coordinate system. The IB method becomes more significantly related to CFD because the 
generation of grids to tackle the flows with complex stationary or moving boundaries is 
immersed boundary, we adopt a compact interpolation scheme near the immersed boundaries 
that allows us to retain the formally second order spatial accuracy and conservation property 
of the solver. The interpolation scheme is designed in the spirit of the shape function of the 
finite element method. 
The standard Galerkin finite element is equivalent to a central difference approximation, 
which produces unrealistic oscillations in the solution. The Characteristic-based split (CBS) 
[12-16] is one methodology to solve these kinds of problems. It has proved to be effective for 
almost any type of flow using a general time iterative algorithm. Notably, the temporal 
derivative of the CBS scheme is discretized along the characteristic in which a spatial 
Galerkin approximation can be used to avoid unrealistic oscillations during computations. 
This study uses an interpolation scheme near the immersed boundaries and the CBS finite 
element method for the discretization of the governing equations. The proposed methodology 
is based on the CBS, which can be used to solve large-scale engineering problems. The CBS 
numerical procedure can be used as a powerful scheme to simulate complex flow phenomena 
and has been successfully implemented for solving many engineering problems. 
 
2. Mathematical formulation 
2.1 Discretization of governing equations using the FE method 
An essential feature of the problems under consideration is the motion of the obstacles in a 
viscous fluid. The geometry of the obstacles may change or move substantially during the 
time domain of interest. Assuming the incompressibility approximation for the fluid medium, 
the solution of the dimensionless Navier-Stokes equations for incompressible viscous flows 
can be expressed as: 
Continuity equation 
0U∇ ⋅ =r                                   (1) 
Momentum equations 
{ }1 ˆ [ ] ( / 2) [ ]nU U t P t P+∇ ⋅ = + Δ −∇ + Δ ⋅∇ −∇r                        (5) 
We may assume the left-hand side (LHS) of Equation (5) equals zero, to enforce the 
incompressibility at each time step, if the higher order derivative terms is neglected, Equation 
(5) can be solved implicitly for the pressure and the scheme is obtained 
2 1ˆ0 [ ]nU t P += ∇ ⋅ + Δ −∇                            (6) 
If we obtain Uˆ  and 1+np , the final velocity field at each time step can be derived in the 
form  
1 1ˆ [ ]n nU U t P+ += − Δ ∇r                             (7) 
Equations (4, 6-7) were discretized by the standard Galerkin method using four-point 
rectangular bilinear elements in two dimensions. The resulting finite element equations can be 
integrated by the Galerkin weighting, 
Step1: 
1 ˆˆ { [ ] }T n T n nN U d N U t R S d+Ω ΩΩ = + Δ + Ω∫ ∫
r r
                       (8) 
Step2: 
2 1 ˆ( ) ( ) /T n TN P d N U td+Ω Ω∇ Ω = ∇ ⋅ Δ Ω∫ ∫                       (9) 
Step3: 
1 1ˆ{ [ ]}T n T nN U d N U t P d+ +Ω ΩΩ = − Δ ∇ Ω∫ ∫
r
                     (10) 
in which N  is the shape functions. The shape function for four-nodal rectangular element is 
given by, 
1
2
3
4
1 ( )( )
4
1 ( )( )
4
1 ( )( )
4
1 ( )( )
4
N b x a y
ab
N b x a y
ab
N b x a y
ab
N b x a y
ab
= − −
= + −
= + +
= − +
                             (11) 
in which a, b are the length and width of a rectangular element, respectively. 
Figure 2 (a) shows nodal point 1 external to the immersed boundary is represented by the 
values of the flow variables, in which the desired value of node 1 is evaluated using an 
interpolating scheme along the local normal to the immersed boundary. The value of virtual 
nodal point v can be performed in a compact form through four nodal points (1-4). Thus, the 
value of 1φ  can be interpolated using the immersed boundary value bφ  and virtual point 
value vφ . Here, the value of vφ  is fixed in the virtual point. We should project the nodal 
point 1 into the immersed boundary and find an extrapolation virtual point, which three points 
(b, 1, v) are the connection with a straight line and are perpendicular to the immersed 
boundary. A bilinear interpolation 2D shape function can be expressed as  
1 1 2 2 3 3 4 4v N N N Nφ φ φ φ φ= + + +                           (13) 
In particular, the value of 1φ  can be calculated by the linear approximation at the two points 
b and v: 
2 1
1 b v
L L
L L
φ φ φ= +                                   (14) 
where 1L  is the length between b and 1, 2L  is the length between 1 and v, L  is the length 
equal to 1 2L L+ , as illustrated in Figure 2(a). 
A compact interpolating function can be obtained by combining the above two Equations(13, 
14) as 
2
1 1 2 2 3 3 4 4
1 1
( ) b
LL N N N N
L L
φ φ φ φ φ− − − − =                        (15) 
The above equation can be used as a constraint and alters the underlying matrix operator in 
the rows corresponding to the boundary cell. We may substitute Equation (15) into the 
underlying matrix operator by using an implicit or explicit scheme. If an implicit scheme is 
used, the unknown variables are 1 2 3 4, , ,φ φ φ φ . However, we should use an iterative scheme to 
obtain a convergence state during each computational stage. 
Similarly, the application of the interpolation procedure is also used for approximating the 
constraint for the solution of the embedded cell region. A flow chart of the proposed model is 
provided in Figure 3. The first equations to be solved for the intermediate velocity field are 
given by Equation (8). The interpolating nodal values of each immersed cell outside the body 
are computed by Equations (15-18) in the entire mesh. For the cells located strictly inside the 
cylinder, the velocity field to a value of zero in the region inside the body. Outside the body 
the intermediate velocity field is solved by Equation (8) so that the flow remains unchanged. 
Due to the fact the fluid is incompressible and the body is rigid the equation for pressure are 
solved by Equation (9). The velocity field at time step n+1 is obtained by solving the Equation 
(10). The boundary conditions for velocity are known and are specified at all the boundaries. 
The pressure boundary condition at the boundary is computed by the Dirichlet or Neumann 
boundary conditions at the wall boundary. In the successive time step, we use the velocity and 
the pressure components from the previous time step as initial conditions and use an 
interpolation scheme based on the Equations (15-18) to get the intermediate velocity field for 
the intermediate time step. Then we compute the pressure and velocity fields at time step n+1. 
The above solution procedure is repeated until the prescribed time step is reached. 
 
3. Results and discussion 
First, we simulate our code by comparing results to those obtained in other benchmark 
studies. Uniform flow past a cylinder is selected to verify the proposed model by comparing 
others in the literature. We select cases of Reynolds numbers equal to 20, 40, 100, and 200 for 
the problem. 
3.1 Flow past a cylinder 
We have a circular cylinder embedded in a domain. Flow in the upstream is assumed to be 
uniform flow given by u=U. We adopt a cylinder of diameter D=1.0, which is embedded in a 
30 15D D×  computational domain. To vary the Reynolds number Re /UD υ= , we hold the 
velocity fixed at U=1 and vary υ . 
fact, the shedding of vortices alternates on the sides had been found by the experiment. Thus, 
the pressure distribution around the obstacle is asymmetric about the flow direction. In 
Figures 5 and 6, we plot the time-dependent behavior of the drag and the lift coefficients, DC
and LC  at Re=100 and 200, respectively. Generally, the results obtained from the currently 
proposed method are in good agreement with formerly cited results. 
3.2 Flow past a pair of tandem cylinders  
Apart from testing the code for the present formulation with respect to the flow past a cylinder, 
it is also required to verify the proposed model for the complicated obstacles immersing in the 
physical domain. The second test case is the flow around a pair of tandem cylinders. 
Zdravkovich [28] mentioned when more than one bluff body is placed in a fluid flow, the 
resulting hydrodynamics and vortex shedding phenomena are completely different compared 
with a single body at the same Reynolds number. The configuration of a pair of cylinders was 
placed inside the flow domain in 0 30x D≤ ≤  and 7.5 7.5D y D− ≤ ≤ . This case was used to 
test the behavior of the scheme on a non-uniform grids generated by a simple node generator. 
From the viewpoint of the traditional method to produce unstructured meshes or generate 
body-fitting meshes by coordinate transformation, our proposed method has a simple way to 
handle the mesh generation. In the present study, the two tandem cylinders were arranged 
with a streamwise gap of L. For the tandem arrangement, the distance between the centers of 
two identical cylinders with L was varied from 1.5D, 2D, 3D, 4D up to 5D. The 
implementation of the initial and boundary conditions are the same as those in the case for the 
flow around a circular cylinder. The definition of the Reynolds number is also based on the 
diameter of the cylinder. A pair of cylinders of diameter D=1 was placed inside the flow 
domain with the center of the first cylinder located at 7x D=  and 0y = , and the location of 
the second cylinder depending on various L. We simulated a series of cases for various 
streamwise gaps (L). First, the non-uniform grids with 301 151×  nodal points were chosen 
for Re=100 and 200. For the L=3D, the drag coefficient of upstream cylinder increases and 
two cylinders. The increases at the streamwise gap up to 3D and the L2C  obviously results in 
oscillatory characteristic over a period of time. These findings are entirely consistent with 
those reported for the gap between two cylinders being varied, a range of flow regimes occurs 
characterized by the behavior of the wake region. The physical effect of the interference 
characteristic between the two flows is highly nonlinear. Figures 10-11 depict the comparison 
of vorticity and streamline contours for a spacing of L varying from 1.5D to 3D at Re=200 
and t=400, respectively. The interference between cylinders at close proximity dramatically 
changes the flow around them. It may produce unexpected forces and pressure distributions, 
and the resulting forces and vortex shedding intensifies or suppresses. The present proposed 
methodology can be applied to problems of flow past multiple bluff bodies based on the same 
implantation as for a single body. The ability to simulate multiple bluff bodies allows for 
greater investigation of the interaction between 
3.3 Flow past seven circular cylinders 
Finally, we demonstrate our algorithm on a more complex domain. We have a biperiodic 
domain with seven circular cylinders embedded in it. The Reynolds number for this example 
is 20 and 40, based on an average diameter of the bodies.  
It is not easy to simulate accurately using Cartesian grids with complicated bodies 
immersed in an unbounded uniform flow. The grid used for the complicated domain with 
denominate seven circular cylinders is shown in Figure 12. Table 4 depicts the comparison of 
drag coefficients for the flow past seven cylinders at Re=20, 40. The drag coefficients of the 
upstream and downstream cylinders vary vividly. The minimum drag coefficient appear in 
number cylinder 7 compared with other cylinders for the both cases at Re=20 and 40. Both of 
the drag coefficients on cylinder 7 at Re=20 and 40 are equal to be a small value. The drag 
coefficient on cylinder 7 is approximately 0.07 at Re=20 and -0.12 at Re=40, while the drag 
coefficient for the cylinder 7 is close to zero, being in the shadow of the front cylinders. 
Figures 13-14 show contours of instantaneous vorticity, pressure and streamline at Re=20 and 
 Acknowledgments 
   The support by the National Science Council, Taiwan, under the grant no. 
100-2221-E-022-015 for the work is gratefully acknowledged.  
 
References 
1. Peskin C.S. Flow patterns around heart valves: a numerical method. J Comput Phys 1972; 
10:252-271. 
2. Cortez R., Minion M. The blob projection method for immersed boundary problems. J 
Comput Phys 2000;161: 428-453. 
3. Peskin C.S., Printz B.F. Improved volume conservation in the computation of flows with 
immersed elastic boundaries. J Comput Phys 1993;105: 33-46. 
4. Xu S., Wang Z.J. An immersed interface method for simulating the interaction of a fluid 
with moving immersed boundaries. J Comput Phys 2006;216:454-493. 
5. Mittal R., Iaccarino G. Immersed boundary methods. Annual Review Fluid Mech 
2005;37:239-261. 
6. Goldstein R., Haandler R., Sirovich L. Modeling a no-slip flow boundary with an 
external force field. J Comput Phys 1993;105:336-354. 
7. Udaykumar H.S., Mittal R., Shyy W. Computation of solid-liquid phase fronts in the 
sharp interface limit on fixed grids. J Comput Phys 1999;153:535-574. 
8. Ye T., Mittal R., Udaykumar H.S., Shyy W. An accurate Cartesian grid method for 
viscous incompressible flows with complex immersed boundaries. J Comput Phys 
1999;156:209-240. 
9. Kim J., Kim D., Choi H. An immersed boundary finite-volume method for simulations of 
flows in complex geometries. J Comput Phys 2001;171:132-150. 
10. Ravoux J.F., Nadim A., Haj-Hariri H. An embedding method for bluff body flows: 
22. Liu W.K., Jun S., Zhang Y.F. Reproducing kernel particle methods. Int J Numer Methods 
Fluids 1995;20:1081-1106. 
23. Zhang L.T., Wagner G.J., Liu W.K. A parallized mesh-free method with boundary 
enrichment for large-scale CFD. J Comput Phys 2002;176:483-506. 
24. Calhoun D. A Cartesian grid method for solving the two-dimensional 
streamfunction-vorticity equations in irregular regions. J Comput Phys 
2002;176:231-275. 
25. Liu C., Sheng X., Sung C.H. Preconditioned multigrid methods for unsteady 
incompressible flows. J Comput Phys 1998;139:35-57. 
26. Choi J.I., Oberoi R.C., Edwards J.R., Rosati J.A. An immersed boundary method for 
complex incompressible flow. J Comput Phys 2007;224:757-784. 
27. Russel D., Wang Z.J. A Cartesian grid method for modeling multiple moving objects in 
2D incompressible viscous flow. J Comput Phys 2003;191:177-205. 
28. Zdravkovich M.M. The effects of interference between circular cylinders in cross flow. J 
Fluids Struct 1987;1:239-261. 
29. Meneghini J.R., Saltara F., Siqueira C.L.R., Ferrari J.A. Numerical simulation of flow in 
interference between two circular cylinders in tandem and side-by-side arrangements. J 
Fluids Struct 2001;15:327-350. 
30. Noor D.Z., Chern M.J., Horng T.L. An immersed boundary method to solve fluid-solid 
interaction problems. Comput Mech 2009;44:447-453. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1. Dark circles are the nodes of immersed cells. The black squares are projected by 
associating with each dark circle as the interface point. The light circles are extrapolation 
nodes by dark circles and black squares 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 3. Flow chart for the present numerical model. 
 
 
 
Get I.C. and B.C. 
Solve Eq. (8) to obtain Uഥ 
(intermediate velocity field) 
Solve Eqs. (15-18) to alter 
intermediate velocity field of each 
immersed cell
Convergence (Uഥ) 
Solve Eq. (9) to obtain pressure (p) 
Solve Eq. (10) 
to obtain final 
velocity field 
The prescribed time step is reached 
No
t t+ Δ  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                (a) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                  (b) 
 
 
 
Figure 5. Time history of the drag coefficient for (a) Re=100 (b) Re=200 
 
 
 
 
 
0 40 80 120 160 200
0
0.5
1
1.5
2
2.5
t
Cd
0 40 80 120 160 200
0
0.5
1
1.5
2
2.5
t
Cd
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
               (a) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
               
(b) 
Figure 7. Comparison of the drag coefficients for various L at Re=100 (a) D1C  (b) D2C  
 
 
 
 
 
 
 
 
150 160 170 180 190 200
1.1
1.2
1.3
1.4
1.5
1.6
L=5D
L=4D
L=3D
L=2D
t
C
D
1
150 160 170 180 190 200
-0.4
0
0.4
0.8
1.2
1.6
L=5D
L=4D
L=3D
L=2D
t
C
D
2
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 9. Time history of the lift coefficients for various L at Re=200 
 
0 100 200 300 400
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t
CL1
L=3D
0 100 200 300 400
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t
CL2
L=3D
0 100 200 300 400
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t
CL2
L=2D
0 100 200 300 400
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t
CL1
L=2D
0 100 200 300 400
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t
CL1
L=1.5D
0 100 200 300 400
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t
CL2
L=1.5D
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
              (a) L=1.5D 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
               (b) L=2D 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
               (c) L=3D 
 
 
Figure 11. Streamline contours for various L at Re=200 and t=400 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
            (a) 
 
 
 
 
 
 
 
 
 
 
 
 
 
            (b) 
 
 
 
 
 
 
 
 
 
 
 
 
 
           (c) 
 
 
 
Figure 13. Flow fields at Re=20 for (a) Vorticity (b) Pressure (c) streamline 
 
 
 
 
 
x
y
-5 0 5 10 15 20
-5
0
5
10
參加 2012 國際電腦科學及電子工程會議 
 
會議報告 
 
報 告 人: 羅德章  教授 
服務單位 :國立高雄海洋科技大學 海事資訊科技研究所 
 
 
 
 
 
 
 
 
中華民國 101 年 3 月 27 日 
2 
 
再重疊港灣模組，完整呈現港灣 3D 視覺景象。本研究操船模擬機系統應用
於三維虛擬實境船舶操縱軟體開發實驗室的操船模擬機器，單台電腦投影顯
示畫面以 90 度環繞場景顯示，提升可視角度，視覺最佳化，搭配操作平台
等周邊硬體設備達到模擬真實情境。並文使用 Google Earth 來建置 3D 港灣
的輪廓，如下所述。 
 Google Earth 介紹 
    Google Earth 的誕生起源於 Google 併購專門開發並展示三維數位地
球之 Keyhole 公司而成立，Google Earth 提供全球的高程地形數值給使用者
透過網路查詢全世界的衛星影像與地圖資料下載更新，同時也開放客製化語
言 KML(Keyhole Markup Language)與 API 等程式語法的撰寫，提供進階使
用者進一步在地圖上註記、資料收集、數據提取及做客製化的加值應用服
務，如此一來，Google Earth 的功能就不只限於單純的地圖展示，Google Earth
的開放性架構與支援圖層觀念使得後續具有高度的附加應用價值，使用者可
以套用疊加不同的地圖、建物模型、特定的調查資料等等，連結 GPS 衛星
導航，地圖風景變示，與使用者可自行上傳資料標註地圖資訊分享給予有需
要的使用者，並利用 3D 技術改變觀看地圖傾斜角度顯示與免費資源數據方
面無與倫比的優勢，使其在短短幾年內，已運用於諸多領域。如：林業、地
質災害管理、虛擬城市對於全球大城作 3D 化的城市模型與街景提供了一方
便展示的平台，做最大擴充的應用。 
4 
 
 Google Earth 高程擷取程式製作  
利用 Google Earth 軟體內建功能截圖按照滑鼠所移至的位置，可以觀看
緯度、經度、海拔高度，來製作高程擷取軟體。 
 
 
圖 2 經緯度數據與範圍 
製作程式時，Google Earth API 編碼設定左上角及右下角二點的經緯度
即可做出矩陣，之後設定水平、垂直間隔度後，以累加的方式進行運算至設
定的範圍邊界，執行程式後，將會自動計算所指向矩陣範圍裏所有的座標
點，並依此取得所有高度。排程查詢完或中斷後的資料，一律以
GeElevation.csv 檔名立刻儲存(未查詢完的突發中斷則無法儲存)，儲存的資
料可直接以記事本開啟，或匯入至 Excel 等程式，資料格式依序為緯度、經
度、高度，儲存時以分隔，圖 2 經緯度數據與範圍。 
本文應用 Google Earth 軟體設計出高程擷取程式，透過 Google Earth 伺
服器擷取所需範圍數據，可以對任何只要在 Google Earth 上面有的地形數
據進行擷取資料的動作，利用高程數據匯入 GIS 繪製圖形並使用 3D 繪圖軟
2012 International Conference on Com
puter Science and Electronics Engineering
Published by the IEEE Computer Society
10662 Los Vaqueros Circle  
P.O. Box 3014   
Los Alamitos, CA 90720-1314
IEEE Computer Society Order Number P4647 
BMS Part Number: CFP1211S-PRT 
ISBN  978-0-7695-4647-6 
Proceedings of the 2012
International Conference on
Computer Science and Electronic
Engineering (ICCSEE 2012)
March 23–25, Hangzhou, China
Volume III
Volume III
  
 
 
 
research endeavor in the simulation systems and make 
significant academic contributions. 
II. METHODS: 
As shown in figure 1, in the built-in features of the Google 
Earth software screenshots mouse can be moved to any specific 
location to reveal its precise latitude, longitude, altitude and 
elevation measurements thereby creating the map. 
 
 
Figure 1: Range of latitude and longitude data 
To develop the program with Google Earth API software 
the codes from both the upper left corner and lower right 
corner are set to make two points of latitude and longitude of 
the matrix, and then determine the horizontal and vertical 
granularity. Using the cumulative calculation to the set 
operation range boundary. After running the program the 
matrix will automatically calculate the point where all the 
coordinates of point range thus obtain data of all heights. After 
scheduling the query or interrupt data all information will be 
immediately stored in GeElevation.csv file name (those 
unfinished query due to sudden interruption can not be saved). 
The stored data can be directly opened in Notepad, or be 
imported into Excel and other applications . The data format in 
the order of latitude, longitude, height, will be displayed in the 
layout shown in Table 1 
設定項目
(Enactment item ) 
設定內容 
(Enactment content) 
左上角緯度： 
(Left Latitude) 
                   (十進制) (Decimal) 
左上角經度： 
(left Longitude) 
                   (十進制) (Decimal) 
右下角緯度： 
(Lower right 
Latitude) 
                   (十進制) (Decimal)) 
右下角經度： 
(lower right 
longitude) 
                   (十進制) (Decimal) 
水平間隔度： 
(Horizontal spacing) 
                   (Google接受之最小值)  
(Minimum accepted value of Google earth) 
垂直間隔度： 
(vertical spacing) 
                   (Google接受之最小值)  
(Minimum accepted value of Google earth) 
 排程批次查詢(batch search)   
 中斷查詢任務(cancel)  
Table 1: Capture program planning table panel 
After putting the latitude and longitude values into the 
parameters for the query: Latitude = 22.694188; into the 
parameters: longitude = 120.394976 the program will 
immediately display outgoing parameters: height = 116 (unit: 
m) access in order to avoid explosive action (thousands of 
queries a second issue), which is too frequent to be blocked by 
Google for the website limits to a single-threaded query 
sequence. The Google restricts a maximum of 2,500 queries 
and the computer network will be locked with over the limit 
query for 24 hours without access. If one wishes to check 
more items, one must copy the program to other computers 
with different network cards. 
 
Figure 2: Capture program planning table panel. 
Figure 2 demonstrated using C # [8] program to combine 
with API [9], in accordance with the original design of the 
interface elevation capture program which the horizontal and 
vertical spacing after the 6th decimal point to the most basic 
unit. 
The calculation of the minimum sampling distance is about 
25 cm and the maximum sampling distance is about two 
thousand five hundred kilometers. The calculated distance is in 
accordance with Google Earth layer for the image-based 
processing of precision. With the altitude closer to the ground, 
it yields more detailed and precise value to latitude: 11.362330 
longitude: 142.573144 Mariana trench perspective altitude 
338.69 km of marked elevation of -8060 m. If we view the 
marked elevation 1000 meters above sea level is -10856 meters, 
the latitude for due to image slicing resulted latitude is offset 
by 0.01 and by 0.04 in longitude. Figures 3 and 4 show the 
latitude: 11.362330; longitude: 142.573144; altitude: -8060 m; 
perspective altitude: 338.69 km 
 
Figure 3.4: Capture Recognition 
Latitude: 11.366290; Longitude: 142.583592; Altitude: -10856 
meters; perspective altitude 1000 meters 
While retrieving the data is set at a fixed elevation angle 
between 18 to 19 km. This captured data serves as the basic 
perspective of altitude to ensure under the circumstances for 
few variability in elevation value data thereby obtain the best 
capture range. Furthermore the spacing on both horizontal and 
Finally, we utilized the 3D MAX 9  to convert wrl files.  
After several conversions to generate the port of Kaohsiung in 
a DEM model. Figure 11 shows both the regular map and the 
DEM elevation model of Kaohsiung harbor. 
 
 
Figure 11: Terrain texture 
To alignment texture and overlapped to complete Kaohsiung 
Harbour model shown in Figure 12, 13. 
 
Figure 12: Kaohsiung port model 
 
 
Figure 13: Build the terrain and Kaohsiung Harbor  
Previously described the use of the software Google Earth 
virtual globe software to generate Singapore the electronic 
map with the following steps: 
 
A. First, used the software in Google Earth ruler function to 
draw the map image of Singapore harbor as shown in 
Figure 14. 
 
Figure 14: The scope of the map image to draw in 
Singapore 
B. Use Google Earth to divide the above map into 26 parts as 
shown in Figure 15. Refine each part for highest resolution 
and precision because Google Earth satellite images were 
acquired at different time intervals, resulting in color 
difference among pictures. In order to obtain high-
resolution Pixel the scale of each part was chosen at 1 km / 
2,000 feet, and the height set at 12.21 km. After these 
manipulations all 26 segments were imported into 
Photoshop to generate a complete map. 
 
 
Figure 15: 26 intercept of Figure 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/09/14
國科會補助計畫
計畫名稱: 創新的嵌入式有限元素分析含移動物體之非穩態黏性流場
計畫主持人: 羅德章
計畫編號: 100-2221-E-022-015- 學門領域: 水利工程
無研發成果推廣資料
hydrodynamic 
interaction produced 
during the overtaking 
and the head-on 
encounter process of two 
ships, Engineering 
Computations. 29, 
83-101. (SCI) 
4.S.W. Chang, D. C. Lo, 
K.F. Chiang, C.Y. Lin, 
2012, Sub-atmospheric 
boiling heat transfer 
and thermal performance 
of two-phase loop 
thermosyphon, 
Experimental Thermal and 
Fluid Science, v 39, p 
134-147,  May 2012 (SCI)
5.Ken Yeh, Cheng-Wu 
Chen, D. C. Lo, Kevin Fr 
Liu, 2012, 
Neural-network fuzzy 
control for chaotic 
tuned mass damper 
systems with time 
delays, Journal of 
Vibration and Control, v 
18,  n 6, p 785-795, May 
2012. (SCI) 
6.Po-Hsuan Huang, 
Cheng-Chieh Huang, 
Chen-Yuan Chen, D.C. Lo 
and Chin-Jui Chang, 
2012, Computer-aided 
ergonomics and 
visualization for 
improving 3D display 
technique, Human Factors 
and Ergonomics in 
Manufacturing & Service 
Industries. 30 MAR 2012, 
DOI: 
10.1002/hfm.20298(SSCI)
 
研究報告 /技術報
告 0 0 100%  
研討會論文 1 0 100% D. C. Lo, Zi-Yao Wang, 
Dong-Taur Su, 2012, 
Application of a capture 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
1. 發表在國際著名期刊(Int. J. Heat Mass Transfer)，科學引用指數為 2.407，  
D. C. Lo* and Dong-Taur Su, 2012, An embedding finite element analysis of heat 
transfer on the surface of circular cylinders in flow, Int. J. Heat Mass Transfer, 
55, 6916-6926. ( SCI) 
2. 另一篇已接受發表在國際期刊(Engineering Computations)，(SCI, IF=1.06) 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本文發展出創新的數值方法，求解複雜區域的二維不可壓縮黏性之奈維爾-史托克斯方程
式。我們的方法是依據非均勻的卡式格網，並應用局部微分積分法來離散壓力-速度為變
數的奈維爾-史托克斯方程式。流場區域中的固體嵌入至卡式網格，並利用特別的離散方
法來處理沈浸邊界且保持其解的精度。為了處理含沈浸邊界的複雜黏性流場，我們提出了
一新的差補方法於沈浸邊界附近格點的流場未知值，同時流場可保持二階精準度。此種差
補的概念來自於有限元素的形狀函數。 
本計畫可模擬均流流過一圓柱，模擬低到中高雷諾茲數的流場，並計算相關的阻力和升力
係數、渦流振盪頻率。均勻流通過一對不同間距與不同橫距下，其相關的阻力、升力係數
與流場也將於此年完成。模擬流體通過任意形狀的物體來檢驗本模式對不規則區域的流固
耦合的可行性。此外，本模式將應用所提出的創新差補分法，模擬紊流通過波浪似的邊界
並延伸至流場於實際地理幾何上的應用。再者，相關流場中的速度場、壓力場與渦度場也
將呈現於本研究。因此，我們確信結合嵌入式方法與局部微分積分法的離散，對於處理複
雜沈浸邊界的二維熱流問題具有很好模擬效果，並顯示本模式的強健性與精準性。 
 
