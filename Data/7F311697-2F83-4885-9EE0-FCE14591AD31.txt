 2
(內插方程式)，目標輸入值域越小，計算求得的結果
越精確，但是輸入值域越小(義同將原本的輸入切割成
越多的子值域)，需要記錄的切割點上的函式數值越
多，會增加表格的儲存大小，所以函式輸入值域並不
是切割越細越好；本產生器中提供 degree=1 以及
degree=2 兩種架構以及以下的功能： 
 
1.精確度計算 
由於不同的精確度要求下對應到的表格大小以及表格
內容值會不同，因此本產生器會進行不同精確度下所
產生的表格大小的驗證，藉由驗證結果決定符合該精
確度下所需的最小的表格尺寸(包含 Number of Bits 和
Words)，這個階段使用者所需要選擇或輸入的參數為
(1)目標函式，目前有倒數、指數、對數、平方根和平
方根倒數可供選擇(2)目標精確度(3)區間數，將以上 3
個參數設定完後，就可以進行精確度驗證。 
 
2.RTL 程式碼產生 
經過精確度驗證後，使用者可以選擇產生對應該參數
組的 RTL 程式碼，根據實驗結果，當表格使用記憶體
容量小時使用 case 語法合成有較好的速度跟面積，當
表格使用記憶體容量大時則使用 Artisan Rom 
Compiler 有較好的面積跟速度，本產生器亦提供了
RTL 自動驗證的環境，圖 1 為本產生器的使用流程圖。 
 
 
圖 1. Piecewise 方法產生函數產生器的流程圖 
 
圖 2 為 Piecewise 方法的硬體架構，當 degree=1 時需
要使用 2 個 tables 分別記錄係數 a0和 a1，當 degree=2
時需要使用 3 個 tables 分別記錄係數 a0、a1和 a2。 
 
圖 2. Piecewise 方法函數產生器架構圖 
左圖為 degree=1，右圖為 degree=2 
資料路徑上需要使用到乘法，實作上使用 Partial 
Product Multiplier 來減少電路延遲和面積，最後的加
總則使用多輸入元加法器(multi-operands adder)來實
現以節省延遲和面積，在相同的精確度下，degree=1
需要使用的 table 較 degree=2 大，但是 degree=2 的資
料路經較 degree=1 時複雜(多一個乘法器和平方器)，
因此在不同精確度下，選擇使用 degree=1 或使用
degree=2 需要經過面積和速度的取捨。 
 
 Multipartite Method 
Multipartite 的方法與其他查表方法的不同在於，此方
法的電路組成元件只有表格和加法器兩種元件，
Bipartite(2-partite)方法由兩個表格和一個加法器組
成，而 Multipartite 有多個表格和一個多輸入元加法器
組成， Multipartite 方法運算的最長路徑上只有加法器
有較長的延遲，因此運算速度會比在最長路徑上有乘
法器的 Piecewise table lookup 方法要快，Multipartite
的方法是使用表格面積去換取原本以方程式近似時需
要的乘法器，實質上 multipartite 使用在低精確度的 1
階的近似方程式上有很不錯的效率，Multipartite 與其
他查表法類似，通常都使用常見的近似方程式，例如
泰勒展開式只取兩個項數的情形下即可轉換成
Bipartite(2-partite)方法近似方程式： 
     ),(),()()( 201100210 xxaxxaxxxfxf +=++=  
其中 x = x0 + x1 + x2，x 的位元長度為 n = n0 + n1 + n2，
根據上面列的近似方程式，將 a0(x0 , x1)和 a1(x0 , x2)兩
個項數當作係數記錄在表格上，即為 Bipartite 的基本
形式，如圖 3(左)，兩個表格的項目數分別為 2no+n1和
2no+n2；將 x 切割成更多區段 x = x1 + x2 + x3 + … +xm，
m 段則會形成 m 個小表格，如圖 3(右)，將每個表格
查出的係數項相加即為近似後的函式解答。 
 
 
圖 3. Bipartite Method(左)和 Multipartite Method(右) 
 
下表 1 和表 2 使用 piecewise 方法與 Multipartite 方法
在不同精確度要求下的 Pre-layout 合成數據，並與
Synopsys 的 DesignWare Library 提供的運算單元做比
較。表 1 比較的函式是倒數的計算；表 2 為平方根倒
數的計算，其中 DW 代表 DesignWare Library，deg-1
和 deg-2 為 Piecewise 方法，2-partite、3-partite 和
4-partite 為 Multipartite 方法，調整精確度要求由 12-bit
到 32-bit 下使用 TSMC 0.18um 製程，使用 slow 
library，表格中(-)號的部分代表面積成長過於龐大，
無法順利合成。 
