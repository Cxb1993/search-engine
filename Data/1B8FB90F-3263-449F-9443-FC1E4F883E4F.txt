 I
中文摘要 
有鑑於秘密影像分享的技術僅適用於灰階影像，然而全彩影像才是常用的影像。由於
全彩影像的資訊量為單一色調灰階影像的三倍，因此假若使用相同的秘密分享平台，即是
在隱蔽物不變的前題之下必須要能夠藏入三倍的秘密資料，然而以現有的技術之下是不可
能的。本計畫的研究必須另闢方向，期望建立一套適用於全彩影像的門檻式秘密影像分享
方法，針對全彩影像的特色進行分析，在影像品質破壞程度與人類視覺敏感度之間，界定
出真正需要保留的部分，日後再以適合的混色方式將全彩影像重新編碼，以便將全彩影像
藏入，進而達到在相同隱蔽條件之下藏入全彩秘密影像分享的目的。 
關鍵字：門檻式秘密分享機制、隱藏術、數位浮水印 
英文摘要 
Present day image secret sharing technology is mostly designed for grayscale images, despite 
the fact that color images are by far the more popular.  Also given that a color image contains 
three times as much as information as its grayscale counterpart one would expect such techniques 
could at least conceal trice the amount of secret information in the same camouflage image. That 
however is impossible with the existing technology nowadays.  The proposed project hopes to 
develop a secret sharing scheme for color images.  To analyze the characteristic of the color 
image, and keeps the serious part of information between inrecognition and human’s visual 
sensitivity, and then encode the color image by way of suitable color mixer in the future.  After 
that, this project expects to embed the color secret image, and achieve the secret sharing purpose 
under the same condition as prior image secret sharing schemes. 
 
Keywords: threshold secret sharing, steganography, digital watermarking. 
 2
2. 文獻探討 
Fundamental of Bayer CFA 
The CFA (Color Filter Array) image is composed of a mosaic-like grayscale image, because a 
Bayer filter mosaic, shown in Figure 1, is used to arrange RGB color filters on a square grid of 
photosensors.  
 
Figure 1. Bayer Color Filter Array pattern sample. 
 
In such a way, each pixel is filtered to record only one of three colors, two-thirds of the color 
data is missing from each. Figure 2(b) shows the result filtered by CFA from Figure 2(a).  
To obtain a full-color image, various demosaicing algorithms such as [9] can be used to 
interpolate a set of complete red, green, and blue values for each point. Different algorithms 
requiring various amounts of computing power result in varying-quality final images. Figure 2(c) 
shows one of the possible results recovering from Figure 2(b). 
   
 (b) (c) 
Figure 2. Bayer CFA image: (a) original image Lenna (b) arranged as a color domain, (c) recover by interpolation 
from (b). 
Review of the (k, n) threshold scheme 
The concept of (k, n) threshold secret sharing method proposed by Shamir [7] is used to 
distribute a secret amongst a group of participants. Accordingly, any k or more participants can 
get together to recover the secret. 
First, a k-1 degree polynomial must be chosen and then the shadow held by each participant is 
a point over the polynomial. It is very easy to understand that any k or more participants can 
reconstruct the polynomial to obtain the secret. In such a way, the secret will not be revealed to 
the public if less then k shadows are exposed.  
Red 
Green 
Color filter 
Blue 
 4
Phase 1. Color Filtering 
Assume that a secret image S is a 24-bit RGB-color image of size mm×  pixels, and 
]}255,0[,,,,1|),,{( ,,,,,, ∈≤≤= jijijijijiji bgrmjibgrS .  In this phase, each pixel ]||||[ ,,, jijiji bgr  
of S is transformed into jiz ,  as follow: 
⎪⎩
⎪⎨
⎧
=
otherwise.
odd,  andeven  for 
even,  and odd for 
,
,
,
,
ji
ji
ji
ji
g
jib
jir
z  
And then, a grayscale CFA data ]}255,0[,,1|{ ,, ∈≤≤= jiji zmjizZ  is obtained while all pixels 
in S are processed. 
 
Phase 2. k-pixel polynomials generation 
In this phase, the element jiz , ’s in Z is grouped into k
m2  k-pixel sections.  Each section t 
including k pixels, 1,1,0, ,,, −kttt zzz K . A polynomial is then constructed as 
 pxzxzxzzxq kkt mod)()(
1
1
2
210
−
−++++= L .   
After all sections in Z are processed, a set of polynomials }1|)({
2
k
mtxqQ t ≤≤=  are finally 
obtained.  Furthermore, since the gray value of a pixel is from 0 to 255, the prime number p 
could be 251 or Galois Field GF(28), the interested readers may refer to Lin and Tsai’s lose 
version [3] or Yang et al.’s loseless version [11] for details.   
 
Phase 3. Embedding and sharing procedure 
In this phase, each polynomial must embed a point into a camouflage image, so that any k or 
more camouflage images together can reconstruct the secret image. For simplicity, a camouflage 
image is divided as a 4-pixel based image ]}255,0[,,,,1|),,,{(
2
∈≤≤= tttttttt UVWXr
mtUVWXC  
and then each grouped 4-pixel block ),,,( tttt UVWX , shown in Figure 4, is used to hide a point of 
the polynomial qt(x) mod p.  
Step 1. Compute qt(x) mod p = { 821 ,,, ttt qqq K }, where x is the first 6 MSB of Xt and {qt1, 
qt2, …, qt8} is the binary representation of the result. 
Step 2. Hide {qt1, qt2},{qt3, qt4}, {qt5, qt6}, and {qt7, qt8} into the 2 LSBs in Xt, Wt, Vt, Ut 
 6
 
 
(a) The secret image S (256 x 256) 
  
(b) Cover image-Jet (c) Cover image-Baboon (d) Cover image-Pepper 
  
(e) stego-image-Jet 
(PSNR= 47.15 dB) 
(f) stego-image-Baboon 
(PSNR= 47.17 dB) 
(g) stego-image-Pepper 
(PSNR= 47.10 dB) 
Figure 6. (2, 3)-threshold color secret image sharing scheme. 
 
It is very easy to observe that the proposed scheme greatly improves the quality of the 
stego-image.  For Jet, compare with Yang et al.’s scheme [11], the improvement is 7 dB, and all 
of the PSNR values are higher than 47 dB, which is indicative of the high quality of the 
stego-image. 
Table 1. PSNRs of stego-image for Lin-Tsai scheme, Yang et al.’s scheme and the proposed scheme. (unit: dB) 
Scheme Jet Baboon Pepper 
Lin-Tsai scheme 38.35 37.71 38.29 
Yang et al.’s scheme 40.15 40.06 40.66 
The proposed scheme 47.15 47.17 47.10 
 
 8
Electron Devices, Vol. 47, No. 11, pp. 2110-2122, November 2000. 
7 [7] Shamir, A., “How to share a secret,” Communications of the Association for Computing 
Machinery, Vol. 22, No. 11, pp. 612-613, 1979. 
8 [8] Thien, C. C. and Lin, J. C., “Secret image sharing,” Computers and Graphics, Vol. 26, No. 5, 
pp. 765-770, 2002. 
9 [9] Wu, X. and Zhang, N., “Primary-consistent soft-decision color demosaicking for digital 
cameras (patent pending),” IEEE Transactions on Image Processing, Vol. 13, No. 9, pp. 
1263 – 1274, 2004. 
10 [10] Wu, Y. S., Thien, C. C., and Lin, J. C., “Sharing and hiding secret images with size 
constraint,” Pattern Recognition, Vol. 37, No. 7, pp. 1377-1385, 2004. 
11 [11] Yang, C. N., Chen, T. S., Yu, K. H., and Wang C. C., ”Improvements of image sharing with 
steganography and authentication,” Journal of Systems and Software, In Press, Corrected 
Proof, Available online 17 January 2007. 
此次會議理論與實務並重。參加這次的研討會，對我來說來說是一個非常難得且
收穫良多的經驗。只要用心參與都能夠吸收到不少的新知。這些知識包含了各種新的
技術、觀念與應用等，都讓我獲益良多。而且，此次的經驗更讓我得知現在全世界的
未來研究議題與趨勢。最後，建議學校與教育部能夠多加補助學生出國參與國際性會
議，一來可以增加新知及擴充視野，另一方面則可以增進學生的英文報告與表達的能
力，培養學生的國際觀。 
changed by the original signer; and (2) the time period 
of warrant is overdue. The proxy key pair will be 
changed according to the new warrant. So there would 
be many proxy secret/public key pairs with different 
warrants after the system has worked for a long time.  
In this paper, we will show that Hu et al.’s scheme 
suffers from known key attacks in which once a proxy 
secret key (short-term key) is compromised, the secret 
key (long-term key) of proxy signer would be broken 
since the scheme just uses point addition of Elliptic 
curve. Furthermore, an improved method will be given 
to withstand the known key attack. 
  The rest of this paper is organized as follows. In 
Section 2, we introduce bilinear mapping function. A 
brief review of Hu et al’s scheme and the security 
analysis is given in Section 3. In Section 4, an 
improved scheme is presented. Security analysis and a 
concluding remark are shown in Section 5 and 6, 
respectively. 
 
2. Basic concept of bilinear pairing 
 
In this section, we introduce the bilinear pairings 
and the related mathematical problems. Let G1 be a 
cyclic additive group generated by P, whose order is a 
prime q, and G2 be a cyclic multiplicative group with 
the same order q. Let e: G1×G1→G2 be a bilinear 
pairing with the following properties: 
(1) Bilinear: e(aP, bQ) = e(P, Q)ab for all P, Q∈G1, 
a,b∈Zq. 
(2) Non-degeneracy: There exists P, Q∈G1 such that 
e(P, Q) ≠ 1, in other words, the map does not send 
all pairs in G1×G1 to the identity in G2. 
(3) Computability: There is an efficient algorithm to 
compute e(P, Q) for all P, Q∈G1. 
A bilinear map satisfying the above three properties 
is called an admissible bilinear map. We note that the 
Weil and Tate pairings [14] associated with 
supersingular elliptic curves or abelian varieties can be 
modified to create such bilinear maps. 
Suppose that G1 is an additive group and G2 is a 
multiplicative group. Now we describe four 
mathematical problems. 
(1) Discrete logarithm problem (DLP): Given two 
group elements P and Q, find an integer a∈Zq with 
probability at least ε within polynomial time T, 
such that Q = aP whenever such an integer exists. 
(2) Decision Diffie–Hellman problem (DDHP): For a, 
b, c∈Zq, given {P, aP, bP, cP} decide whether c = 
ab mod q with probability at least ε within 
polynomial time T.  
(3) Computational Diffie–Hellman problem (CDHP): 
For a,b∈Zq given {P, aP, bP} compute abP with 
probability at leastεwithin polynomial time T. 
(4) Bilinear Diffie–Hellman problem (BDHP): given 
{e, P, xP, yP, zP}, an adversary can output e(P, 
P)xyz with probability at leastεwithin polynomial 
time T, where x, y, z∈  Zq .  
The above problems states that the probability ε is 
negligible. 
 
3. Review of Hu et al.’s scheme and its 
security weakness 
 
In this section, first Hu et al.’s scheme is briefly 
introduced and then we point out the secret key of 
proxy signer would be computed easily if one of the 
proxy secret keys Sw is compromised. 
3.1 Hu et al.’s scheme 
Hu et al.’s scheme is composed of three phases: 
setup, extract, and generation of proxy key. 
Setup 
Initially, the key generation center (KGC) should do 
the following operations. 
(1) Select q, G1, G2, and e.  
(2) Choose P as the generator of G1 and define two 
one-way hash functions H1:{0,1} ＊ → G1 and 
H2:{0,1}＊→Zq.  
(3) Select t∈Zq＊ and compute Ppub=tP, then keep t 
secret as KGC’s master key and publishes 
parameters {G1,G2, e, q, P, Ppub, H1, H2}. 
Extract 
The extract phase encompasses the following 
operations. 
(1) The original signer and the proxy signer send their 
identity information, IDo and IDp to KGC, 
respectively. 
(2) KGC computes Qo =H1(IDo), Qp=H1(IDp), So=tQo, 
Sp=tQp , where Qo, So are the public/secret key 
pair of the original signer and Qp, Sp are the 
public/secret key pair of the proxy signer. 
(3) KGC returns the long-term key pairs to the 
original signer and the proxy signer, respectively. 
Generation of the proxy key 
Finally, the proxy key is generated through the 
following operations. 
(1) The original signer creates a warrant W where W 
is generated by Hess's ID-based signature scheme 
[15]. The warrant W specifies the delegation 
relation, such as the delegation period, the identity 
information of the original signer and the proxy 
signer, the limit of the delegated signing capacity, 
and so on. 
 
 
 Original signer KGC Proxy signer 
 
 
 
 Create a warrant W, 
Compute 
S1 = H2(W, So) 
 
 
 {W, S1} Verify the equation  
S1  H2(W, So) 
?
=
Compute 
Qw=H1(W) 
Sw=tQw 
S2=Sw+H1(e(Ppub, Sp)H2(W)) 
 
 
 
 
 
 
 
 
{W, S2}  
 
 
 
 
 
 
Compute  
Sw = S2- H1(e(Ppub, Sp) H2(W)) 
Verify  
e(Sw, P) =  e(H1(W), Ppub)) 
?
 Fig.1 Proxy key generation diagram 
 
 
 
Theorem 3: If one of previous proxy secret keys Sw is 
compromised, A can’t compute the secret key of the 
proxy signer. 
5.2 Security analysis of our improved scheme 
Meanwhile, we focus on the security of the 
improved proxy key generation protocol. Assume that 
an adversary A has the system parameters {G1, G2, e, q, 
P, Ppub, H1, H2 }.  
Proof: Assume that A, with the intercepted messages 
{W, S1, S2} and the proxy secret keys Sw corresponding 
to warrant W, intends to reveal the proxy signer’s long-
term secret key Sp. A could compute H1(e(Ppub, Sp) H2(W)) 
using the equation S2- Sw . But A cannot directly obtain 
the secret key Sp from H1(e(Ppub, Sp) H2(W)). Here, 
H1(e(Ppub, Sp) H2(W)) is equivalent to the function 
H1(e(Ppub, H2(W)．Qp)t) where t is KGC’s master key. 
To deduce Sp, one hand, A may guess the secret key Sp, 
which is equivalent to guess KGC’s mater key t. On 
the other hand, he may solve Sp from H1(e(Ppub, Sp) 
H2(W)), which is as hard as breaking the BDHP problem.    
□ 
Theorem 1: A can forge a valid (W, S1) with a 
probability 1/q. 
Proof: If A intends to forge a valid (W, S1) sent to 
KGC, the following equation would be satisfied: 
   S1 = H2(W, So) 
Since the adversary A only has the warrant W but not 
So, A has no feasible way to forge a valid (W, S1). The 
probability of successful guess to S1 is 1/q.  □ 
 
Theorem 2: A can forge a valid (W, S2) with a 
probability 1/q. 
Proof: If A wants to forge a valid (W, S2) sent to the 
proxy signer, the following equation would be satisfied: 
 
According to the Theorem 1 and Theorem 2, the 
property 1/q implies that it is not easy for A to forge 
either S1 or S2; that is, the improve scheme can resist 
the forgery attack. By Theorem 3, A learns nothing 
from the compromised proxy key, so the new version 
S2= tH1(W)+H1(e(Ppub, Sp)H2(W)) 
Since the adversary A doesn’t obtain either t or Sp, A 
can forge a valid (W, S2) just by guessing S2. The 
probability of successful guess to S2 is 1/q.  □ 
 
