 行政院國家科學委員會補助專題研究計畫 
□期中進度報告 
■期末報告 
 
依自動機模式系統化合成批次操作步驟之研究 
Studies on Systematic Synthesis of Batch Operating Procedures with Automata 
 
計畫類別：■個別型計畫   □整合型計畫 
計畫編號：NSC 100－2221－E－006－139－MY2 
執行期間：100年 8月 1日至 102年 10月 31日 
 
執行機構及系所：國立成功大學化工程學系 
 
計畫主持人：張玨庭 
共同主持人： 
計畫參與人員：郭文生、李哲萱、禤得逸 
 
 
 
 
本計畫除繳交成果報告外，另含下列出國報告，共 _2_ 份： 
□移地研究心得報告 
■出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，■一年□二年後可公開查詢 
 
中   華   民   國   102   年   11   月   1   日 
 
附件一 
  
 Abstract 
A systematic strategy is developed in this study for synthesizing batch operating procedures under 
normal and abnormal system conditions. By following the proposed modeling rules, a set of untimed automata 
can be constructed in advance to represent the component behaviors and control specifications for a given 
system. An admissible supervisor can then be synthesized by applying the parallel composition operation with 
the component and specification models. For the purpose of identifying the most efficient procedures, this 
admissible supervisor is integrated with additional auxiliary automata for setting the operation target(s) and 
imposing upper limits on the total numbers of actuator actions. 
With the model-checking tool UPPAAL, the timed automata are also utilized in this work to generate 
cyclic operation steps under normal process conditions. If the system is at an abnormal state, an auxiliary 
model can be incorporated so as to drive the system back to normal. 
 
Keywords: Automaton; Batch process; Supervisor; Emergency response; Cyclic operation; Model-checking. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
II 
 
 
implementing the operation steps. To address these issues, an improved modeling strategy is developed in this 
work to build timed automata for characterizing components and specifications in all possible scenarios. A 
versatile system model can then be synthesized accordingly by applying the standard operation of parallel 
composition. The best operation path embedded in this model is identified with an existing software, i.e., 
UPPAAL (Behrmann et al., 2006), and the corresponding operating procedure can also be easily generated. 
 
2. Research Objectives 
On the basis of the above literature survey, it is clear that there are still pressing needs for additional 
studies. The specific goals of the present research are: 
- To devise a model hierarchy and an automata-building procedure for characterizing both the 
normal behavior and failure mechanisms of any given batch chemical process; 
- To develop an automata-based approach for synthesizing efficient operating procedures under 
normal and abnormal plant conditions. 
- To develop an improved modeling strategy to build timed automata for characterizing components 
and specifications in cyclic operations and produce not only a SFC but also the corresponding 
Gantt chart to stipulate the time schedule for implementing the operation steps. 
 
3. Automata and Supervisory Control Systems 
 
3.1 Untimed Automata 
To facilitating clear description of the proposed model construction method, a brief review of the 
automaton structure is given here. Specifically, a deterministic automaton A  can be viewed as a six-tuple 
(Cassandras and Lafortune, 1999): 
( )0, , , , , mA X E f x X= Σ          (1) 
where, X  is the set of system states; E  is the event set; :f X E X× →  represents the state transition 
function; : 2EXΣ →  denotes the active event function and 2E  is the power set of E  (i.e., the set of all 
possible subsets of E ); 0x X∈  is the initial system state; mX X⊆  is the set of marked states. The 
transition function ( ),f x e x′=  means that a transition from state x X∈  to another state x X′∈  is caused 
by the feasible event e E∈ , while the active event function ( )xΣ  can be regarded as the set of active events 
at state x .  
Notice that every automaton can be viewed as a language-generating machine. The events in set E  
should be regarded as the alphabets of this language and an event sequence allowed in automaton is referred 
to in the literature as a trace, string or word (trace is used in this work). The event set E  can be further 
partitioned into subsets of controllable and uncontrollable events, i.e., 
.
c ucE E E=  . The events in cE  are 
those that can be forbidden with a supervisor or supervisory controller, whereas the events in ucE  are bound 
to occur in due course.  
 
3.2 Timed automata 
A timed automaton is a finite-state machine equipped with one or more clock (Alur and Dill, 1994). All 
clocks progress synchronously, and every one of them is described with a dense-time model in which the 
clock variable assumes a real positive value. To facilitate clear description of the proposed method, a brief 
summary of the automaton structure is given below. In particular, a timed automaton can be regarded as a 
six-tuple: 
0 = ( , , , , , )TA L C A I E          (2) 
where, L  is a set of locations; 0   L∈  is the initial location; C  denotes the set of clocks; A  is a set of 
actions. In addition,  : ( )I L B C→  denotes a function ( ) = ( )I l b c  which assigns invariants to locations. Note 
that ( )B C  is the set of conjunctions over simple conditions of the form: 
2 
 
  
Figure 2. Hierarchical structure of a batch process 
 
To further clarify the proposed model hierarchy, let us consider the liquid-storage system presented in 
Figure 3. This trivial problem was studied in Chen et al. (2010) and will later be referred to as Example I 
throughout this work. The height of liquid level in tank is monitored on-line, and two distinct sensor signals, 
i.e., (1) LH (level high) and (2) LL (level low), are sent to a PLC to actuate the control valves (V-1 and V-2) 
on the outlet and inlet pipelines (P-1 and P-2) respectively. Under the assumptions that the liquid level is low 
and both valves are at the close positions initially, a SFC can be produced to represent the needed cyclic 
operating procedure (see Figure 4). Notice that iOS  ( 0,1, 2i = ) and jAC  ( 1, 2,3j = ) denote the operation 
steps and the activation conditions of these steps respectively. Notice also that the control actions taken in 
each step and the sensor signals used in each condition are also specified in this chart. It is clear that the 
components in this system can be classified into the aforementioned five hierarchical levels, i.e., the 
programmable logic controller (PLC), the solenoid valves (V-1 and V-2), the pipelines (P-1 and P-2), the 
storage tank (T-1), and the level sensor (S-1). 
 
Figure 3. A simple liquid storage system (Chen et al., 2010) 
 
4 
 
  
Figure 6. The controller model used in Example I 
 
 Level 2: The model of valve V-1 is presented in Figure 7. States 1V C  and 1V O  are used to represent 
the close and open positions respectively, while the events 1openV  and 1closeV  denote the 
corresponding close-to-open and open-to-close processes. From Figure 4, it is clear that these two 
events are triggered by the control actions of PLC, which is a level-1 component. On the other hand, the 
level-2 events 1V Ccon  and 1V Ocon  represent V-1 continues at close and open positions respectively 
for a sufficiently long period of time. A similar model can be built for V-2 with the same approach.  
 
 
Figure 7. The valve model (V-1) used in Example I 
 
 Level 3: The model of the outlet pipeline is presented in Figure 8. There are two pipeline states, i.e., 
“flow” ( 1p f ) and “no flow” ( 1p nf ). It should be noted that, the level-2 events 1V Ocon  and 1V Ccon  
should activate the “ 1p nf -to- 1p f ” and “ 1p f -to- 1p nf ” processes respectively. For illustration 
simplicity, it is assumed in this example that the flow in outlet pipeline can be produced by opening V-1 
even when the liquid level in tank is low. This assumption is removed in the other examples. A similar 
model for the inlet pipeline can be built with the same approach. The component model representing 
process configuration can then be obtained by performing parallel composition on the above two 
pipeline models (see Figure 9). A description of this operation can be found in the following subsection, 
i.e., subsection 2.3.2. Notice that the state-sustaining events 01PC con  and 02PC con  respectively 
denote that the process configuration is maintained at 01PC  (in which the pipeline states are 1p nf  
and 2p f ) and 02PC  (in which the pipeline states are 1p f  and 2p nf ) for a long enough period of 
time. Notice also that the state-sustaining events associated with the other two configurations, i.e., ( 1p f , 
2p f ) and ( 1p nf , 2p nf ), are neglected on the ground that, in normal operation, these states may be 
unidentifiable or at best present for a very short period of time only. 
 
 
Figure 8. The outlet pipeline model (P-1) used in Example I 
 
6 
 
  
Figure 11. The general failure model 
 
Let us first consider the automaton given in Figure 7, i.e., the normal model of outlet valve, as an 
example to illustrate the proposed modeling practice (see Figure 12). In this modified automaton, the 
abnormal valve states, i.e., “V-1 sticks at the close position” and “V-1 sticks at the open position”, are 
represented respectively with 1V SC  and 1V SO . Notice that the component state of V-1 is trapped at 1V SC  
in the former scenario and state 1V SO  can be attached to the normal model in a similar fashion in the latter 
scenario. Notice also that, since the control actions 1openV  and 1closeV  cannot cause any state change in 
either case, they are treated as the state-sustaining events at 1V SC  and 1V SO . Finally, it should be noted 
that the same approach can be easily adopted to characterize the failures of V-2.  
 
 
Figure 12. The outlet valve model with failure modules (Example I) 
 
Since additional failure states and events are introduced into the normal valve models, it becomes 
necessary to modify the directly affected component models in the third level. Specifically, the normal outlet 
pipeline models in Figure 8 and should be replaced respectively with the ones given in Figure 13. A similar 
model can also be built for P-2 with the same approach. In the component model of outlet pipeline (P-1), 
failure 1V SC  should cause the normal state 1p nf  to be trapped in a new abnormal state 1 _ 1p nf V SC and 
failure 1V SO  should change the component state from 1p f  to the new state 1 _ 1p f V SO . Notice that the 
failures of P-2 can be characterized with the same approach. By applying parallel composition with these two 
revised pipeline models, a complete representation of all possible process configurations can then be produced. 
As indicated previously in constructing the normal component model in Figure 9, some of the configurations 
(states) can be judiciously ignored for simplicity. The same approach can be taken in this case and the kept 
states are listed in Table 1. 
8 
 
 LLLH
PC01con
PC02con
LHcon LLcon
LLcon
leakleak
LH_leak LL_leak
LH_V2SO,
LH_V1SC
LL_V2SC, 
LL_V1SO
PC04con, 
PC05con
PC03con, 
PC07con
PC01con, PC03con, 
PC06con, PC07con
PC02con, PC05con
LH_leak_
V2SO
PC04con
LL_leak_N, 
LL_leak_V2SC, 
LL_leak_V1SC, 
LL_leak_V1SO  
Figure 14. The tank model with additional failure modules (Example I) 
 
5.2 Assembling System Model 
Although both normal behaviors and failure mechanisms can be incorporated in a component model, 
there is still a need to impose additional constraints in the controller model to limit the scope of 
event-sequence evolution. These modifications are introduced mainly for the purpose of avoiding state 
explosion and also producing a succinct system model. Specifically, it is assumed in this study that:  
 All state-sustaining events of the components in levels 2 - 4 (i.e., actuators, process configuration and 
unit operations) should occur before the sensor state reaches the resulting activation condition in SFC.  
 The failure event of any component in levels 2 - 5 (i.e., actuators, process configuration, unit operations 
and sensors) can only occur just before the controller triggers a subsequent actuator event. Furthermore, 
the aforementioned failure and actuator events are mutually exclusive. 
 
These constraints can be incorporated into the controller model with additional self-looping transitions 
according to the following rules:  
(1) Every state-sustaining event in level 2 should be incorporated with a self-looping transition at the 
controller state that enables the corresponding activation condition(s) in SFC.  
(2) Every failure event in levels 2 - 5 should be incorporated with a self-looping transition at the controller 
state that enables the subsequent normal control action(s) in SFC.  
 
In the liquid storage system mentioned above, let us assume that (a) the inlet valve may stick at close or 
open position, (b) the outlet valve may stick at close or open position, and (c) the tank may leak. The modified 
controller model for Example I is given in Figure 15. Notice that  
 The state-sustaining events 1V Ocon  and 2V Ccon  of actuators V-1 and V-2 are both constrained at 
state 5, which is the controller state that enables the activation condition LLcon  in SFC. Similarly, the 
state-sustaining events 1V Ccon  and 2V Ocon  should both be constrained at state 2, which is the state 
that enables the activation condition LHcon  in SFC.  
 
10 
 
 
open in tank-filling operation under the condition that the outlet valve V-1 is kept closed. On the other hand, 
V-1 should be open while keeping V-2 closed if tank draining is required. In order to facilitate safe operations, 
liquid should be transported into or from the tank only when the corresponding sensor signal, i.e., LL  or 
LH , can be confirmed. Notice also that the heater should be turned off after reaching the target temperature 
and it should not be turned on before the tank is LH . Initially, the liquid level and the temperature in tank are 
at LL  and TL  respectively, both valves are closed, and the heater is off. The SFC in Figure 18 is adopted in 
this example to perform cyclic operation. Notice that iOS  ( 0,1, 2,3, 4i = ) and jAC  ( 1, 2,3, 4,5j = ) denote 
the operation steps and the activation conditions of these steps respectively. 
LH
LL
V-2
V-1
 
 
Heater
TTo PLC{
From PLC
From PLC
 
Figure 17. A storage tank equipped with heating equipment (Example II) 
 
For the sake of illustration simplicity, all equipment failures are ignored in this example. The normal 
component models are outlined below: 
 Level 1: The PLC model in Figure 19(a) can be constructed in a straightforward fashion according to 
Figure 18. For simplicity, it is assumed that the operation steps in 1OS  can always be executed initially 
and thus the event specified in 0OS  is omitted. The level-5 events LHcon  and LLcon  is used to 
represent the conditions that the level sensor reading continues at the high and low values for a long 
enough period respectively, while THcon  and TLcon  is used to represent the conditions that the 
temperature sensor reading continues at the high and low values for a long enough period respectively. 
The events openV1 and closeV1 are the control actions to open and close valve V-1, while openV2 and 
closeV2 denote the corresponding control actions to manipulate V-2. Finally, the events Hon  and 
Hoff  are the control actions to turn on and off the heater.  
 Level 2 & 3: The process configuration of a batch system is governed by the collective states of 
actuators. Although there are three actuators in Figure 17 and, therefore, 8 possible configurations, four 
of them are disallowed to ensure operability and safety. Specifically, the justifications of this practice are 
listed below:   
(1) To avoid opening both valves simultaneously, the configurations ( 1 , 2 , )V O V O Hon  and 
( 1 , 2 , )V O V O Hoff  are not considered;  
(2)  To avoid heating before V-1 is closed, the configuration ( 1 , 2 , )V O V C Hon  is not considered;  
(3)  To avoid opening V-1 before heater is switched off, the configuration ( 1 , 2 , )V C V O Hon  is not 
considered.  
The permitted configurations are referred to in this example as 01GV ,  02GV , 03GV  and 04GV  
respectively (see Table 2). The actuator models can be built according to these allowed configurations. 
The automaton representation of V-1 can be found in Figure 19(b). States 1V C  and 1V O  in this 
model are used to represent the close and open positions respectively, while the events 1openV  and 
1closeV  denote the corresponding close-to-open and open-to-close processes. In addition, the 
12 
 
  
(a) 
 
V1OV1C
closeV1
openV1GVacon GVbcon
a = 01, 02, 03
b = 04  
(b) 
 
V2OV2C
closeV2
openV2GVccon GVdcon
c = 01, 02, 04
d = 03  
(c) 
 
HOHC
Hoff
HonGVecon GVfcon
e = 01, 03, 04
f = 02  
(d) 
 
14 
 
 
(1) Build the automaton models of all components in the uncontrolled plant, i.e., those in levels 2 - 5;  
(2) Construct automata to represent all control specifications;  
(3) Combine the automata created in steps (1) and (2) to create an admissible supervisor; 
(4) Produce an implementable supervisor by augmenting the admissible supervisor with auxiliary automata 
and then identify the most efficient operating procedure accordingly.  
A flowchart is presented below in Figure 21 to provide an unambiguous summary of the proposed 
procedure synthesis strategy. The simple example given in Figure 2.17 (Example II) is used in the sequel to 
illustrate this procedure. 
 
Figure 21. Procedure synthesis strategy 
 
The control specifications for Example II can be summarized as follows: 
 Spec 1: Discharge the tank and switch on the heater while liquid level is at LH  and fill it while level is 
at LL  (see Figure 22(a)). Notice that gGT con  and hGT con  denote the events that liquid level is 
maintained at LL  and LH  respectively. 
 Spec 2: Switch off the heater when liquid temperature is at TH  while switch on the heater and close 
V-2 when temperature is at TL  (see Figure 22(b)). Notice that iGT con  and jGT con  denote the 
events that liquid temperature is maintained at TH  and TL  respectively. 
 Spec 3: Avoid opening both valves simultaneously (see Figure 22(c)).  
 Spec 4: Avoid heating before V-1 is closed (see Figure 22(d)).  
 Spec 5: Avoid opening V-1 before heater is switched off (see Figure 22(e)).  
 Spec 6: Specify event sequence, i.e., 01E 02E 03E . Notice that event 01E  denote actuator actions, 
whereas 02E  and 03E  represent process configurations and combined states of processing units 
respectively (see Figure 22(f)). 
 
16 
 
 
Although an admissible supervisor (e.g., see Figure 23) can be produced by applying the standard 
parallel composition operation on the aforementioned component models and specifications models, the 
practically implementable supervisor must be further identified by extracting the supremal controllable 
sublanguage from this admissible supervisor and auxiliary automata. To illustrate these two supervisor 
generation steps, let us consider the fictitious example in Figure 24. Let us assume that there are only two 
components in the given system and automata 1C  and 2C  are their models. According to the automata 
building steps described in Chapter 2, the uncontrolled plant model D  can be produced by performing 
parallel composition on 1C  and 2C . To specify the alternation of events a  and b , the specification models 
1E  and 2E  can be constructed. After combining D , 1E  and 2E  with parallel composition, the admissible 
supervisor G  can be produced. It is assumed that H  is the auxiliary automaton and let the set of 
uncontrollable events be { }2 2,uoE a b= , that is, the events 2a  and 2b  cannot be disabled. It can be observed 
from G  that the event sequence 1 2a a  can be extended with the uncontrollable event 2b , but the event 
sequence 1 2 2a a b  is not present in H . On the other hand, a prefix 1a  which can be extended within G  by 
the uncontrollable event 2a , and the event sequence 1 2a a  is not in H  after removing the trace 1 2 1 2a a b b . 
According to Cassandras and Lafortune (1999), the resulting automaton I  (see Figure 24(c)) can be 
obtained after removing all traces with prefix 1a  or prefix 1 2a a  in H . The automaton I  can be 
considered as the implementable supervisor in this work. 
 
 
 
18 
 
  
(b) 
 
20 
 
  
(e) 
 
(f) 
 
22 
 
 
i.e. stopping operation after events 03GV con  and 03GT con  twice. Thus, state 5  should be marked as 
the operation target and disallow any events to occur later. 
 The auxiliary automaton in Figure 25(b) is used to limit the total number of operation steps. Since the 
initial state 0  is driven to state n  ( 0,1, ,n N=  ) after n  operation steps, the maximum number of 
operation steps, i.e., N , in the operation procedure(s) can be imposed by augmenting the admissible 
supervisor with this automaton. Notice also that, in order to allow fewer operation steps to be taken in 
the operation procedure(s), all states are marked in this model. Consequently, this auxiliary automaton 
facilitates easy identification of all feasible procedures with n N≤  operation steps and also the most 
efficient one(s) among them.  
 
The above two automata have been incorporated into the admissible supervisor in Figure 23 to generate the 
implementable supervisor in Figure 26. 
1
E01, E03, 
GV01,02,04con
GT03con
5
3
GT03con
E01, E03, 
GV01,02,04con
GV03con
2
GV03con
4
 
(a) 
0
1
E01, E02
E03
....
N
E03
E01, E02
E01, E02
 
(b) 
Figure 25. Auxiliary automata in Example II: (a) Terminating the admissible supervisor after 03GV con  and 
03GT con  twice; (b) Limiting the number of operation steps 
24 
 
 
the activation conditions, process configurations and actuator actions respectively;  
2. Produce a reduced supervisor by grouping the consecutive actuator actions (i.e., the events in AAE ) 
between activation conditions (i.e., the events in ACE ) and process configurations (i.e., the events in 
PCE ). It is assumed that the grouped events occur simultaneously;  
3. Remove all events in PCE , which are treated as unobservable events. 
4. Identify all possible procedures by enumerating traces generated from the reduced supervisor. 
 
Let us consider the implementable supervisor shown in Figure 26 as an example. Notice that actuator actions 
2openV  and Hon  between events ACE  and PCE  should be grouped together and treated as simultaneous 
events. The reduced implementable supervisor can then be obtained for Example II. The most efficient 
operating procedure, i.e., the ones with fewest operation steps, can be enumerated accordingly. The operation 
steps and activation conditions of the corresponding SFC are listed in Table 3(a) and Table 3(b) respectively. 
 
Table 3. Identified SFC in Example II: (a) Operation steps; (b) Activation conditions 
(a) 
Operation Step Control Actions 
S0 Initialization 
S1 
(1) Close V-1 
(2) Open V-2 
S2 
(1) Switch on Heater 
(2) Close V-2 
S3 
(1) Switch off Heater 
(2) Open V-1 
(b) 
Symbol Conditions 
T1 Start 
T2 LH 
T3 TH 
T4 TL & LL 
 
 
7. Systematic Synthesis of Emergency Response Procedures 
The systematic synthesis strategy in the previous section can be extended to generate emergency 
response procedures. For any given fault origin, the operation goal is to identify a set of efficient steps that 
can be implemented for steering the system away from hazardous conditions while still maintaining an 
acceptable production rate. 
Let us consider the liquid transfer system (Example III) shown in Figure 27. The system is made of a 
storage tank, a supply system, two 3-way valves (V-1 and V-3) and two gate valves (V-2 and V-4). Notice 
that each 3-way valve can be switched to one of two alternative positions, i.e. OPEN or CLOSE, to 
manipulate the flow directions. The fluid in vertical pipeline P-1 is allowed to flow into the horizontal line P-2 
via the opened V-1, while the horizontal flow in P-3 can join the vertical flow in P-4 via the opened V-3. On 
the other hand, if V-1 or V-3 is switched to the CLOSE position, the valve connection to/from horizontal 
26 
 
 
• Level 1: The controller model under normal plant conditions is presented in Figure 29(a), which can be 
constructed in a straightforward fashion according to Figure 28. For simplicity, it is assumed that the 
control actions in 1OS  can always be performed initially and thus the event specified in 0OS  is 
omitted. The level-4 events SLcon  and SHcon  are adopted to represent the situations when the 
reading of level sensor continues at the high and low values for a long enough period respectively. The 
events 3openV  and 3closeV  are the control actions to open and close valve V-3 respectively. Notice 
that failure 3V SO  can only occur after V-3 is opened and can only be diagnosed after executing 
3closeV , i.e., at state 3 , while failure 3V SC  may occur only when V-3 is closed and can only be 
diagnosed after carrying out 3openV , i.e., at state 1. The loop formed by states 1 - 4  represents the 
cyclic state-transition process during normal operation. 
• Level 2 & 3: As mentioned previously, the process configuration of a batch system is governed by the 
collective states of actuators. Since there are four valves in Figure 29, all possible combinations of the 
valve states can be enumerated (see Table 4) and each is obviously associated with a particular 
configuration kGV  ( 1, 2, ,16k =  ). Notice that, since the assumed valve failures do not result in extra 
liquid transfer paths, it is not necessary to differentiate the normal and failed valve states in this table. 
Let us use V-3 as an example to illustrate the automaton representation of a valve (see Figure 29(b)). 
The normal valve states, i.e., 3V C  and 3V O , denote the CLOSE and OPEN positions respectively, 
while events 3openV  and 3closeV  trigger the corresponding CLOSE-to-OPEN and 
OPEN-to-CLOSE processes in normal operations. The symbols iGV con  and jGV con  are used to 
characterize the events that the corresponding process configurations are maintained for a sufficiently 
long period of time, and they obviously allow V-3 staying at CLOSE and OPEN positions respectively. 
The abnormal valve states of V-3, i.e., “V-3 sticks at the CLOSE position” and “V-3 sticks at the OPEN 
position”, are represented respectively with 3V CS  and 3V OS . Notice that, if either state is reached 
after a failure, this valve state should remain permanently unchanged despite occurrence of any 
realizable event in the given system. Finally, it should be emphasized that all other valves can be 
modeled in the same fashion. 
• Level 4: The liquid level in storage tank is described with the automaton in Figure 29(c). It can be 
observed that two tank states are considered here, i.e., LL  and LH . The event pGV con  is the 
process configuration that causes the -to-LL LH  transition, while qGV con  is the configuration that 
facilitates the opposite -to-LH LL  process. Notice that, the events LLcon  and LHcon  represent the 
liquid level continues at low and high positions respectively.  
• Level 5: The level sensors can be modeled with the automata presented in Figure 29(d). Notice that 
states SL  and SH  denote the sensor measurements of liquid levels LL  and LH  respectively. On 
the other hand, the prior-level events LHcon  and LLcon  should cause the SL -to- SH  and 
SH -to- SL  transitions respectively. To simplify illustration of the proposed methodology without loss 
of generality, the sensor failures are not considered in the present example and, thus, the online level 
measurements should be identical to the tank states. 
 
The system model of Example III can also be produced by performing the parallel composition 
operation on all component models. The resulting state-transition diagram cannot be shown here due to its 
overwhelming complexity. 
 
 
 
 
 
 
 
 
28 
 
 V3CS V3OS
V3OV3C
closeV3
openV3GVicon GVjcon
GVicon, 
openV3, closeV3
GVjcon,
openV3, closeV3
V3SOV3SC
i = 01, 02, 05, 06, 09, 10, 13, 14
j = 03, 04, 07, 08, 11, 12, 15, 16  
(b) 
 
LL LH
GVqcon
GVpconLLcon LHcon
p = 04, 08, 12-16, 
q = 01-03, 05-07, 09-11  
(c) 
 
SL SH
LLcon
LHconSLcon SHcon  
(d) 
 
Figure 29. Component models in Example III:  
(a) controller model that contains additional failure modules; 
(b) V-3 model that contains additional failure modules; 
(c) tank level model; (d) level sensor model 
 
A suitable emergency response procedure can be identified systematically according to the flowchart 
presented in Figure 21. To demonstrate the feasibility of this synthesis strategy in emergency response 
applications, let us consider the liquid transfer system shown in Figure 27 (Example III). 
Three typical specifications are considered for the present applications and the general structures of their 
automaton models are presented below: 
 Spec 1: stipulate the precedence order of an observable event sequence and, after confirming each of 
these events, allow execution of a designated set of actuator actions. The generalized automaton 
representation of this specification can be found in Figure 30(a). In this automaton, 1 2 ne e e  ( i ie E∈ , 
1, 2, ,i n=  ) denotes the desired observable event sequence, and ' 'i ie E∈  represents the actuator action 
allowed to be executed after event ie . For the liquid transfer system described previously in Example 
III, the corresponding control specification can be summarized as 
(a) Every valve in the system should be allowed to be switched to the OPEN position after event 
SLcon ; 
(b) Every valve may be closed after SHcon . 
The automaton representation is given in Figure 31(a), in which states 1 and 2 should be considered as 
the starting conditions after 3V SC  and 3V SO  respectively. 
30 
 
 4 3
1 2
e14e41
e43
e34
e23e32
e12
e21
 
(c) 
Figure 30. Generalized specification models. (a) Spec 1; (b) Spec 2; (c) Spec 3 
 
1 2
SLcon
SHconopenV1-4 closeV1-4
 
(a) 
01
V3SO
openV3,4, 
closeV3,4
openV4, 
closeV4
2
V3SC
openV1,2,4, 
closeV1,2,4
 
(b) 
Figure 31. Specification models used in Example III: (a) Spec 1; (b) Spec 2 
32 
 
  
(b) 
Figure 32. Admissible supervisor for Example III: (a) after 3V SO ; (b) after 3V SC  
 
The most efficient emergency procedure(s) can be identified by extracting the supremal controllable 
sublanguage (Cassandras and Lafortune, 1999) from the admissible supervisor. For this purpose, two standard 
34 
 
 0
1
α
β
α = GV01-16con, SLcon, SHcon
β = openV1-4, closeV1-4
α
....
N
β
α
 
(b) 
 
Figure 33. Auxiliary automata in Example III: (a) terminating the admissible supervisor when 3V SC  occurs 
after SLcon ; (b) limiting the number of actuator actions 
 
36 
 
  
Figure 35. The smallest implementable supervisor when 3V SC  occurs after SLcon  (Example III) 
 
 
 
 
38 
 
  
Figure 36. Component models under normal conditions (Example II) 
40 
 
  
Fig. 37. Control specifications under normal conditions (Example II) 
42 
 
 
As shown in the presented examples, the proposed procedure-synthesis strategies are quite effective in 
various normal and abnormal scenarios with different initial conditions. 
 
Finally, the aforementioned research results are also published in the following papers: 
• Yeh, M. L., Chang, C. T. An automata-based approach to synthesize untimed operating procedures in 
batch chemical processes. Korean Journal of Chemical Engineering, 29, 583-594, 2012. 
• Yeh, M. L., Chang, C. T. An automata based method for online synthesis of emergency response 
procedures in batch processes. Computers & Chemical Engineering, 38, 151-170, 2012. 
• Li, J. H., Chang, C. T., Jiang, D. Systematic generation of cyclic operating procedures based on timed 
automata. Chemical Engineering Research and Design, 2013, accepted. 
 
References 
Alur, R., Dill, D. L. A theory of timed automata. Theoretical Computer Science, 126, 183-235, 1994. 
Behrmann, G., David, A., Larsen, K. G. A tutorial on UPPAAL 4.0. 2006. 
Bengtsson, J., Yi, W., Timed automata: semantics, algorithms and tools. Lecture Notes on Concurrency and 
Petri Nets (Reisig, W., Rozenberg, G., Eds.). LNCS 3098, Springer-Verlag, 2004. 
Blanke, M., Kinnaert, M., Lunze, J. Staroswiecki, M. diagnosis and dault-tolerant control. Springer-Verlag, 
Berlin, 2003. 
Bozga, M., Daws, C., Maler, O., Olivero, A., Tripakis, S., Yovine, S. Kronos: a model-checking tool for 
real-time systems. Proceedings of the 10th International Conference on Computer Aided Verification, No. 
1427 in Lecture Notes in Computer Science, Springer-Verlag, 546-550, 1998. 
Brandin, B. A., Wonham, W. M. Supervisory control of timed discrete-event systems. IEEE Transactions on 
Automatic Control, 39, 329-342, 1994.  
Cassandras, C. G., Lafortune, S. Introduction to discrete event systems. Boston: Kluwer Academic Publisher, 
1999. 
Chen, C. L., Chen, W. C. Fuzzy controller-design by using neural-network techniques. IEEE Transactions on 
Fuzzy Systems, 2, 235-244, 1994. 
Chen, Y. C., Yeh, M. L., Hong, C. L., Chang, C. T. Petri-net based approach to configure online fault 
diagnosis systems for batch processes. Industrial & Engineering Chemistry Research, 49, 4249-4268, 
2010. 
Chou, H. H., Chang, C. T. Petri-net-based strategy to synthesize the operating procedures for cleaning pipeline 
networks. Industrial & Engineering Chemistry Research, 44, 114-123, 2005. 
Crooks, C. A., Macchietto, S. A. Combined MILP and logic-based approach to the synthesis of operating 
procedures for batch plants. Chemical Engineering Communications, 114, 117-144, 1992. 
Dietrich, P., Malik, R., Wonham, W. M., Brandin, B. A. Implementation considerations in supervisory control. 
Synthesis and Control of Discrete Event Systems (Caillaud, B., Darondeau, P., Lavagno, L., Xie, X., 
Eds.), Kluwer., 185-201, 2002. 
Falkman, P., Lennartson, B., Tittus, M. Specification of a batch plant using process algebra and petri nets. 
Control Engineering Practice, 17, 1004-1015, 2009. 
Fleming, D. W., Pillai, V. A., Pillai, J. A. S88 implementation guide. McGraw-Hill Inc: New York,1998. 
Fusillo, R. H., Powers, G. J. A synthesis method for chemical plant operating procedures. Computers & 
44 
 
 
Naka, Y., Lu, M. L., Takiyama, H. Operational design for start-up of chemical processes. Computers & 
Chemical Engineering, 21, 997-1007, 1997. 
Ouedraogo, L., Khoumsi, A., Nourelfath, M. A new method for centralised and modular supervisory control of 
real-time discrete event systems. International Journal of Control, 83, 1-39, 2010. 
Panjapornpon, C., Soroush, M., Seider, W. D. Model-based controller design for unstable, 
non-minimum-phase, nonlinear processes. Industrial & Engineering Chemistry Research, 45, 2758-2768, 
2006. 
Patton, R. J. Fault-tolerant control systems: The 1997 situation. Proceedings of IFAC Symposium on Fault 
Detection Supervision and Safety for Technical Processes, Hull, UK, 1033-1055, 1997. 
Ramadge, P. J., Wonham, W. M. Supervisory control of a class of discrete event processes. SIAM Journal on 
Control and Optimization, 25, 206-230, 1987. 
Ramadge, P. J., Wonham, W. M. The control of discrete event systems. Proceedings of the IEEE, 77, 81-98, 
1989. 
Rivas, J. R., Rudd, D. F. Synthesis of failure-safe operation. AICHE Journal, 20, 320-325, 1974. 
Sanchez, A., Macchietto, S. Design of procedural controllers for chemical processes. Computers & Chemical 
Engineering, 19, S381-S386, 1995. 
Tan, K. S., Yamashita, Y. Design of a dependable process control system. Proceedings  of the 5th 
International Symposium on Design, Operation and Control of Chemical Processes, 446-453, 2010. 
Viswanathan, S., Johnsson, C., Srinivasan R., Venkatasubramanian, V., Arzen, K. E. Automating operating 
procedure synthesis for batch processes: Part I. Knowledge representation and planning framework. 
Computers & Chemical Engineering, 22, 1673-1685, 1998. 
Viswanathan, S., Johnsson, C., Srinivasan R., Venkatasubramanian, V., Arzen, K. E. Automating operating 
procedure synthesis for batch processes: Part II. Implementation and application. Computers & 
Chemical Engineering, 22 , 1687-1698, 1998. 
Wang, F. RED: Model checkers for timed automata with clock-restriction diagram. Workshop on Real-Time 
Tools (Pettersson, P., Yovine, S., Eds.), No. 2001-014 in Technical Report. Aalborg University of 
Denmark, Uppsala University, 2001. 
Wang, Y. F., Chou, H. H., Chang, C. T. Generation of batch operating procedures for multiple 
material-transfer tasks with petri nets. Computers & Chemical Engineering, 29, 1822-1836, 2005. 
Wonham, W. M. Supervisory control of discrete-event systems: an introduction. Proceedings of the IEEE 
International Conference on Industrial Technology 2000, Goa, India, 474-479, 2000. 
Yamalidou, E. C., Kantor, J. C. Modeling and optimal control of discrete-event chemical processes using petri 
nets. Computers & Chemical Engineering, 15, 503-519, 1991. 
Yamashita, Y. Toward dependable process control systems: Integration of fault diagnosis and controller 
redesign. PSE Asia 2007, Xi’an, 2007. 
Yeh, M. L., & Chang, C. T. An automaton-based approach to evaluate and improve online diagnosis schemes 
for multi-failure scenarios in batch chemical processes. Chemical Engineering Research and Design, 89: 
2652-2666, 2011. 
Zhang, Y., Jiang, J. Bibliographical review on reconfigurable fault-tolerant control systems. Annual Reviews 
in Control, 32, 229-252, 2008. 
46 
 
一、 參加會議經過：
2011年『美國化工年會』(2011 AIChE Annual Meeting)，假美國明尼
亞波里市(Minneapolis)會議中心(Convention Center)舉行，自 2011年 10
月 16日至 10月 21日止，為期六天。由於美國化工年會是綜合性學術
及工業應用研討會，規模龐大，包含議題眾多，須分 776場次不同議程
進行，而在每個議程中發表的論文約 5-10篇。除了美國當地代表外，世
界各國的專家、學者、教授及研究生參與也非常踴躍，國內亦然，在會
場曾見到臺大化工系錢義隆教授、本系陳炳宏教授等人。
本研討會的分組主題共約 100個，數目繁多，不便一一詳述，僅
就本人研究領域相關者，即 Area 10: Computing and Systems 
Technology Division，茲分別詳列如下：
1. Systems and Process Design;
2. Systems and Process Control；
究構想，誠可謂獲益良多。茲將印象深刻的幾篇論文列出如下：
1. Galicia, H., et al., “Statistical Pattern Analysis for Fault detection 
and Diagnosis”(session 404);
2. Dai, Y., and Zhao J., “Online Fault Diagnosis During Startup of 
Distillation Process Using Artificial Immune System” (session 404);
3. You, F., “Optimal Planning of Flexible Process Networks under 
Uncertainty with Stochastic Inventory” (session 520);
4. Wittmann-Hohlbein, M., and Pistikopoulos, E. N., “A Hybrid 
Approach for Process Scheduling Under Uncertainty” (session 520);
5. Zavala, V. M., et al., “Real-Time Water and Energy Management in 
Power Plants and Implications in Electricity Markets” (session 689);
6. Luyben, W. L., “Heat-Exchanger Bypass Control” (session 723).
7. Khan, K. A., et al., “Global Optimization of Non-smooth Dynamic 
Systems” (session 735);
8. Pathak, A. S., and Kaistha, N., “Plant-wide Control for Economically 
Optimal Operation of an Ethyl Benzene Process” (session 772).
三、 建議：
除了三年一次的世界化工論壇(World Congress of Chemical 
Engineering)以外，美國化工年會是最具規模且有前瞻性之綜合性
化工研討會，由於舉辦的周期較短，其中發表論文也自然會較具
即時性，因此建議國內有興趣從事相關研究的學者及工業界人士
踴躍參加。另外也建議儘量爭取在美國化工年會中組織特定研究
議題議程之機會，以期能更有效交流，並增加國內研究成果曝光
率。
四、 攜回資料：
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                   102 年   9月   16日 
報告人姓名  
張玨庭 
 
服務機構 
及職稱 
 
國立成功大學化工系教授 
 
時間 
會議 
地點 
September 9-11, 2013 
Aachen, Germany 
本會核定 
補助文號 
100-2221-E-006-139-MY2 
會議 
名稱 
 (中文) 2013計算工程科學亞琛研討會 
 (英文) Aachen Conference on Computational Engineering Science (AC.CES 
2013) 
發表 
論文 
題目 
 (中文) 利用數學規劃模式進行時變彈性分析的方法 
 (英文) A Mathematical Programming Approach for Temporal Flexibility 
Analysis  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
感激。如前所提，AC.CES 2013是個小型跨領域國際研討會，但大會主
題與化工領域中『程序系統工程』(PSE)相關，會議中發表的論文皆頗具
水準。本人得與盛會，除了能在個人後續研究上獲得許多其他領域專家
從新的角度提出之寶貴建議以外，對會中發表之多篇研究論文，也極感
興趣。因此不但可蒐集到難得的資料，也可因而發展出進一步的研究構
想，誠可謂獲益良多。茲將印象深刻的幾篇論文列出如下： 
1. Coron, J.-M., On the control of 1-D hyperbolic systems; 
2. Sachs, E., Preconditioning for PDE-constrained optimization; 
3. Volkwein, S., A posteriori error analysis for PDR-constrained 
optimization; 
4. Frankl, K., et al., Solution quality of early and late discretization 
approaches in mixed-integer dynamic optimization; 
5. O’Connor, R., and Grepl, M., Feedback control of 
parameter-dependent parabolic PDEs using reduced-order modeling.  
三、 建議： 
除了傳統程序系統工程的系列國際研討會(如歐洲的 ESCAPE、美國
的 FOCAPO、FPCAPD及 CPC、三年一次的世界 PSE研討會、兩年一
次的亞洲 PSE研討會）以外，建議國內有興趣從事相關研究的學者及工
業界人士參加跨領域國際研討會，也會有不錯的收穫。 
四、 攜回資料： 
AC.CES 2013 Proceedings (紙本) 
100年度專題研究計畫研究成果彙整表 
計畫主持人：張庭 計畫編號：100-2221-E-006-139-MY2 
計畫名稱：依自動機模式系統化合成批次操作步驟之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 0 100%  
博士生 1 0 100%  
博士後研究員 1 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 3 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 3 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
A systematic strategy is developed in this study for synthesizing batch operating 
procedures under normal and abnormal system conditions. By following the proposed 
modeling rules, a set of untimed automata can be constructed in advance to represent 
the component behaviors and control specifications for a given system. An 
admissible supervisor can then be synthesized by applying the parallel composition 
operation with the component and specification models. For the purpose of 
identifying the most efficient procedures, this admissible supervisor is 
integrated with additional auxiliary automata for setting the operation target(s) 
and imposing upper limits on the total numbers of actuator actions. 
With the model-checking tool UPPAAL, the timed automata are also utilized in this 
work to generate cyclic operation steps under normal process conditions. If the 
system is at an abnormal state, an auxiliary model can be incorporated so as to 
drive the system back to normal. 
The corresponding publications are as following: 
1. J. H. Li, C. T. Chang*, and D. Jiang, 2013, ＇Systematic Generation of Cyclic 
Operating Procedures Based on Timed Automata,＇ Chem. Eng. Res. Des. (accepted).
2. M. L. Yeh, and C. T. Chang*, 2012, ＇An Automata-Based Approach to Synthesize 
Untimed Operating Procedures in Batch Chemical Processes,＇ Korean J. Chem. Eng. 
