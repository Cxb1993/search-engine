2 
 
consumption. It adopts the digital right management (DRM) [2] for the P2P multicast 
system to provide secured multimedia transmission and assure user priority. The DRM is 
a generic term that refers to access control technologies [3] that can be used by hardware 
manufacturers, publishers, copyright holders and individuals to impose usage rules of 
digital contents and devices. It also describes any technology which inhibits illegal usage. 
It can also refer to limitations associated with specific instances of digital contents or 
devices. The DRM generally doesn’t refer to other forms of copy protection, which can 
be circumvented without modifying the file or device, such as license, serial numbers or 
decipher keys etc. Current DRM is designed for non-real-time digital contents, and it has 
to handle the secured delivery of real-time media multicast. In additional to content 
security, it has to deal with real-time encryption and transmission, which would induce 
delay. 
In terms of media streaming, the proposed system adopted the wavelet-based image 
codec, JPEG2000 (JP2) [4], to provide scalable media streams. The JP2 standard can 
provide bit-streams that can be truncated at any rate to provide quality scalable streaming. 
The system can dynamically adjust the transmitted image quality according to the current 
network condition. In addition, it can also afford to set access privilege or levels for users 
to provide usage rule control services. 
The P2P network framework is composed of participants that make a portion of their 
resources (such as processing power, disk storage, and network band width) available 
directly to their peers without intermediary network hosts or servers. Peers act as both 
supplier and consumer of resources. For traditional server-client framework, the server 
suffers heavy working load and may induce network congestion. On the contrary, the P2P 
can utilizes all the resources of connected active peers with the cost of frequent inter-peer 
message passing. Applications comprise: Emula, Bit Torrent, KaZaa and media 
streaming applications comprise: PPLive, Sopcast and PPstream. The P2P network was 
also used in VoIP applications, such as Skype. Due to different application requirement, 
each P2Pbased system was developed under different network framework. These 
methods can be categorized according to their system centralization: (1) purely 
decentralized; (2) partial centralized and (3) hybrid decentralized architecture [5]. 
(A) P2P network model 
Although in the purely decentralized model, the P2P overlay networks are supposed 
to be totally decentralized. However, it isn’t always true and systems with various 
infrastructure of centralization can be found by many.  Purely Decentralized 
Architectures: All nodes in the network perform exactly the same tasks, acting both as 
servers and clients, and there is no central coordination of their activities. The nodes of 
such networks are often termed “servents” (SERVers+clieENTS), as shown in Fig. 1(a).  
Partially Centralized Architectures: The basis is the same as with purely decentralized 
systems. Some of the nodes, however, assume a more important role, acting as local 
central indexes for files shared by local peers. Note that these super-nodes do not 
constitute single points of failure for a P2P network, since they are dynamically assigned. 
If they fail, the network will automatically take action to replace them with others, as 
shown in Fig. 1(b).  Hybrid Decentralized Architectures: In these systems, there is a 
central server facilitating the interaction between peers by maintaining peer list of 
metadata, describing the shared files stored by the peer nodes. Although the end-to-end 
interaction and file exchanges may take place directly between two peer nodes, the 
4 
 
login interface. After identifying user by DRM authentification, the DRM transfer the 
information of certificate, video codec, connection policy back to the IPMP terminal, 
which then can begin to receive and decoder the media streams. Each IPMP terminal may 
have different decoding parameters specified by the certification data. When one peer 
joined the P2P network, it would receive media packets from its parent peer and also 
provides these received packets for possible children peer. 
Our system adopts Centralized P2P architecture. The DRM server has some tasks, 
such as user login, user authentication, providing codec and license, it also need to take 
charge P2P connection mechanisms, build and manage the network. The media server is 
in charge of the capture of real-time image, and then be compressed. It uses license 
provides by DRM to content encryption, and then deliver cipher-text to user. IPMP 
terminal offers user a login interface. After user identity authentication by DRM, and 
then it passes back some information, such as certificate, video codec, cipher and linking 
policy to IPMP terminal. Then, IPMP terminal begins receiving streaming packet that be 
captured by streaming server according to bandwidth and delay. Every terminal have 
one’s own decoding parameter according to certificate Authority. Terminals join P2P 
network, and then they become nodes in this network.  
(A) Media Server 
The media server framework is shown on Fig. 3. The video signal source can be 
from live TV tuner, webcam or media stream files, which would be captured by the 
DirectShow development tool. The captured video signal is compressed by motion 
JPEG2000 approach. The compressed bit-streams are then shuffled and are encrypted by 
the cipher key provided by DRM. The capture service unit acquires images from the 
input video with RGB24 format. The frame rate and image resolution can be adjusted 
according to the network condition. The DRM control unit deals with the message 
transfer with the DRM server. The handshake between DRM server and streaming server 
can be described with the following steps: (1) When the streaming server is invoked, it 
will register to inform the DRM server for live streaming; (2) The DRM server transfers 
back the deciphering key and requests the peer connection information of the streaming 
server to enable the P2P streaming; (3) When one new peer requests connection from the 
streaming server, the DRM will inform the streaming server that the new peer is legal and 
the streaming server can start to streaming to the new peer. 
  
Fig. 2: The framework of proposed 
P2P IPTV. 
Fig. 3: The framework of the media 
server (Ps). 
6 
 
one new peer joined the system and received the cipher key, it would report its 
information to the peer management unit, which will assign the connection point for the 
new one. The P  will add this new peer to the list when finished connection. The DRM 
server explicitly controls the peer connection legal under the centralized P2P framework. 
The pros and cons of this approach are high peer connection efficiency and high system 
loading, respectively. In addition, the system scalability is confined by DRM server under 
centralized P2P-IPTV framework. 
3. Experimental study 
To verify the streaming efficiency, a practical P2P-IPTV system has been 
implemented to test its operation effectiveness. Several computers are designed to act as 
the client peer nodes to playback live TV streaming. Each computer is assigned a public 
IP address. The DRM server is designed to supervise the peer communications, maintain 
the P2P-IPTV system and handle peer login. The media server captures the live TV 
signal and then encodes it by encrypted JPEG2000 bit-stream. The resolution is set to be 
320*240 and the bit rate is 0.4bps. 
Fig. 6: The GUI of an IPMP. Fig. 7: The interface of the media server. 
(A) IPTV Operation 
At the client side, the user input login name and password at the IPMP terminal, 
shown in Fig. 6. After identify the user, the DRM server transmits certification, license 
and connection port for the client peer. These client peers then connect to its parent node 
according to the connection information provided by DRM server. As shown in Fig. 6, 
the frame rate is 15 fps and the received media stream is stable and normal. The GUI of 
media server is shown in Fig. 7. This GUI allows users to change the frame size and 
encoded bit rate dynamically when streaming. The frame rate and quality for the 
streaming video are displayed on the GUI. The DRM interface is shown in Fig. 8. The 
left sub-window shows the parameters such that the system operation status can be 
known by the operator. The right sub-window demonstrates that there are two on-line 
users at this moment. 
Table 1: JPEG2000 streaming bit rate an resolution. 
 0.1 0.5 1
320 × 240 15.46 72.75 144.78 
Bit/Pixel Resolution 
8 
 
(d) n=16 (e) n=20  
 
Fig. 9: The FPS of the node located at level n in this system. 
 
4. Conclusions 
The goal of this paper is to design a P2P-IPTV system that can effectively adjust the 
streaming rates according to available bandwidth, device computing capability and user 
priority to provide universal media access platform. It integrated the JPEG2000 codec to 
provide spatial and quality scalable bit-streams. The encryption function is also integrated 
to protect the media content from illegal usage.  The implementation is carried out from 
the following considerations: (1) For one UMA media server, it has to provide encode 
once and decoded by many, instead of providing individual streaming for different 
devices or users, which would induce heavy CPU loading and memory usage if no 
specific hardware support. The JPEG2000 is adopted to provide spatial, quality and 
temporal scalable control for multicast streaming. (2) The JPEG2000 is a computation 
expensive codec such that it cannot afford to provide real-time coding for a general 
purpose PC. To make the real-time coding feasible, the server PC is used to provide 
motion-JPEG2000 streaming with satisfiable video quality at current stage. We are 
working on utilizing the advanced video codec standard, H.264, to provide better video 
transmission quality. (3) The encryption procedure is embedded into the media server. In 
general, the encryption procedure is independent to the video coding procedure. Each 
terminal can use different encryption tools to protect streaming contents. It can also 
impose different update strategy for the private keys to enhance the security. (4) The 
centralized P2P model is adopted to provide strict client node management. The DRM 
server is used to manage the inter-peer connection control. The decipher key and 
decoding parameters are stored in the license to provide security and scalable control for 
media consumption. The super-node control approach, that can provide better system 
scalable control, was not adopted in that distributing the administrator privilege to 
super-node may expose the security control in a unsafe status. 
The proposed system was carried out under limited hardware and time schedule, 
such that there are several research topics deserved further study: (1) No complete 
solution for the P2P-IPTV system such that it’s not easy to find one for comparisons. (2) 
The decryption key is set to be identical for all clients for simplicity. How to set different 
decryption key for different user is considered as a future work. (3) The centralized P2P 
model is adopted in considering complete security control under the tradeoff of limited 
system scalability. How to distribute the Administrator privilege to super-nodes while 
maintaining secured transmission is considered as a future research. (4) The motion 
JPEG2000 does not take temporal correlation into consideration to improve the 
compression ratio. Integrating the MC/ME based video codec, H.264, into the system is 
under development to provide efficient code and transmission performance. 
References 
[1] X. Zhang, J. Liu, B. Li, and T. S. P. Yum. “Coolstreaming/DONet: A data-driven overlay network for 
live media streaming,” IEEE INFOCOM, 2005. 
[2] S. R Subramanya, and B. K. Yi, “Digital Rights Managements,” IEEE Potentials, vol. 25, pp. 31-34, 
2006. 
 1
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                          98 年 10 月 19 日 
報告人姓名 
 
陳建中 
 
服務機構
及職稱 
 
國立台灣科技大學電機工程系
助理教授 
會議時間 
會議地點 
自民國 98 年 09 月 12 日  
至民國 98 年 09 月 14 日 
日本 京都 
本會核定
補助文號
 
NSC 97-2221-E-011 -086 
會議 
名稱 
 (中文)  2009 國際智慧型資訊隱藏與多媒體信號處理研討會 
 (英文)  2009 International Conference on Intelligent Information  
Hiding and Multimedia Signal Processing  
發表 
論文 
題目 
 (中文)  運用多重對偶型態學重建運算於資料庫影像之前景物件分割 
 (英文)  Volume Image Segmentation by Dual Multi-Scale Morphological 
Reconstructions 
 
附件
I 
 3
本 session 並無人缺席，session 主持人為日本東京大學 Dr. Akira Nishimura, 因為報
告者多為其熟識之研究學者，因此本 session 討論的氣氛相當熱絡，輪到我本人報
告時已經超過預期的時間甚多，我所報告的論文，題目為 “Volume Image 
Segmentation by Dual Multi-Scale Morphological Reconstructions”，亦和與會學者有
相當熱絡的討論與交流。因為本 session 的學者多為日本各大學的年輕教授，因此
在語文及技術的互動上比較流暢。 
第二天的早上，由韓國大學資訊管理與安全研究所之 Hyoung Joong Kim 教授
主講有關運用資料隱藏方法來達成視訊壓縮的研究成果，金教授從最基本的算數編
碼(arithmetic)開始介紹，並說明充分運用資訊相關性的編碼樹減縮法，以有效的達
到資料隱藏以及壓縮的目的，金教授的研究比較偏向基礎理論的研究，因此在資料
壓縮的見解上也頗獨特。金教授在資料隱藏和壓縮的研究上有多篇國際期刊論文，
因此在晚宴會後以及演講後我與他交換名片及研究心得時，有進一步的討論到壓縮
與資訊關連性的交互運用技術，也有討論到發表學術論文的心得與有關在多媒體編
碼相關的論文發表之經驗，金教授還客氣的說「有關他的演講，歡迎多多指教或者
以郵件討論」，金教授算是我與三位講者之中互動最佳的一位。我也收穫良多。有
關第二天的論文發表內容，相關的主題有與安全管理有關之編碼技術、行為分析與
事件偵測、多媒體保護、智慧型文件處理與管理技術、數位多媒體資料庫、智慧型
浮水印技術、影像處理與超大型積體電路技術，我選擇了 session B05:Behavior 
Analysis and Abnormal Event Detection, Session B07: Digital Archives and Digital 
Heritages(I)以及 Session B15：Application of Intelligent Computing to Signal and 
Image Processing 三個場次深入學習，雖然每篇論文只是簡短的二十分鐘，卻可以
學到每一位學者在論文發表背後的研發題目之動機與過程，也看到許多實際展示的
系統，例如行為分析車輛偵測與行為統計、人臉辨識之侷限性與潛在應用，如年齡
辨識、語音辨識用於電話偵測、以及多媒體資料庫檢索用於博物館美術館等。發展
這些應用的技術深度或許不難，但是與相關的應用整合，成果就相當令人印象深
刻，從這一天的論文報告中，也體會到提供好的成果展示系統相當重要。 
第三天由目前為中國排名第三這將大學特聘教授及中國工程院院士譚建榮博士
主講有關如何運用虛擬實境的技術，來為大型自動化控制之裝配場提供流程模擬以
及潛在的碰撞問題，雖然英文報告不太流暢，但是其所展示的系統卻相當生動，譚
博士具備院士身份，因此其轄下之研究計畫與相關研究人員者眾，所展示的電腦虛
擬實境與電腦動畫相當生動，可以想見其背後所投入的人力及財力之紮實努力過
