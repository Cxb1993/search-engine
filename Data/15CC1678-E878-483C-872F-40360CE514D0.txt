  
2 
2
must be treated such that an optimization subproblem can be yielded. In order to make it consistent with 
transportation planning studies’ conventions, the SCNE model that we propose herein is renamed, and 
appears throughout the paper as, the supply chain network equilibrium problem with asymmetric variable 
demand and cost functions (SCN-AVD-C). To solve this SCN-AVD-C model, a nested diagonalization 
(ND) method, along with a supernetwork representation, is then proposed and validated again with the 
same numerical example as that given in Nagurney et al. (2002). 
In the following, we begin with an introduction, in Section 2, of the supply chain network 
equilibrium problem with asymmetric variable demand and cost functions (SCN-AVD-C), consisting of 
equilibrium conditions and their corresponding VI-based model formulation. The proposed ND method is 
then elaborated in Section 3 and validated with a numerical example in Section 4. Finally, a few closing 
remarks are given in Section 5. 
 
2. The Supply Chain Network Equilibrium Problem 
with Asymmetric Variable Demand and Cost Functions 
The supply chain network represents economic sectors in tiers; each tier/sector contains a number of 
agents, and each agent is denoted by a node. The nodes between the two consecutive tiers are connected 
by links over which products can flow from one tier to its successive tier. Three sectors, i.e., manufacturer, 
retailer and demand market, are particularly of interest. As shown in Figure 1, the products are first 
produced by the |I| competitive manufacturers (indexed by i) and then shipped to the |J| retailers (indexed 
by j) and, finally, cleared at the |K| demand markets (indexed by k). The total amount of the product 
consumed, which in turn is produced by manufacturers and transacted to retailers, is explicitly represented 
as the function of the product prices in the demand markets. 
j
k
 
Figure 1: Basic Network Representation of the SCNE Problem 
 
Let Q1 and Q2 denote, respectively, the product flows between the manufacturer and retailer sectors { }ijq , and between the retailer and demand market sectors { }jkq . We assume that each manufacturer i is 
faced with a production cost ( )1Qci  (a node cost) and a transaction cost ( )ijij qc  (a link cost) between 
manufacturer i and retailer j. The retailers must agree with the manufacturers on the volume of shipments 
since the former are faced with the handling and storage cost ( )1Qc j  (a node cost) associated with 
having the product in their retail outlet. The optimal levels of the product consumed by consumers in 
demand market k are determined based on both the prices charged for the product and the cost ( )2Qc jk  
(a link cost) for conducting the transaction (which may include the cost of transportation associated with 
obtaining the product from the retailer). 
  
4 
4
( )[ ] [ ] ( )[ ] [ ]
( )[ ] [ ] { }( )
( )[ ] [ ]
( ) [ ] 0
  
,                                          ˆ
ˆˆ
2
211
1
≥−×

 −+
−×+
Ω∈∀−×+
−×+−×
∑ ∑
∑∑
∑
∑∑∑
∗
∗∗
∗∗
∗∗∗∗
k
kkk
i
ik
j k
jkjkjk
k
j
jjj
i j
ijijijij
i
iii
dq
qqQc
ρ,QQqqQc
qqqcqqQc
ρρρ
 (4) 
where the feasible region Ω  is delineated by the following flow conservation, nonnegativity and 
definitional constraints. 
Flow conservation constraints: 
iqq
j
iji ∀=∑       (5) 
j     qq
k
jk
i
ij ∀=∑∑  (6) 
( ) kqd
j
jkk ∀=∑     ρ  (7) 
Nonnegativity constraints: 
{ }jkjiji   LINKqLINK ,,,  0 ∈≥  (8) 
k   k ∀≥   0ρ  (9) 
Definitional constraints: 
{ }{ }
pkiccc
jijiLINK jkLINK
ik
pLINKLINK
ik
pLINKLINK
ik
p ,,     ˆ~
,,
,, ∀+= ∑ ∑
∈ ∈
δδ  (10) 
LINKqq
ik p
ik
pLINK
ik
pLINKLINK ∀=∑∑      ,, δ  (11) 
Eqns (5)~(6) conserve product flows. Eqn (5) states that the amount of the product iq  produced by 
manufacturer i is equal to the quantity ∑
j
ijq  which is sold to the retailers. Eqn (6) states for each 
retailer j that the amount of the product ∑
i
ijq  purchased from the manufacturer sector is equal to the 
quantity ∑
k
jkq  shipped to the retailers. Eqn (7) indicates that the quantity ∑
j
jkq  purchased of the 
product from the retailers will be precisely equal to the demand ( )ρkd  for the product in that demand 
market. Eqn (8) requires that the product flow on each link in the network must be nonnegative. Eqn (9) 
requires the product price be nonnegative. Eqn (10) defines the relationship between route cost and link 
cost through the use of indicator variables. Eqn (11) expresses link flow in terms of route flows. 
  
6 
6
functions can be diagonalized as ( )kkk ρρd ,\ρ , or simply denoted as ( )kk ρd , which becomes a 
one-to-one mapping. With such treatment, the corresponding inverse demand functions ( )•−1kd  can 
easily be derived. Subsequently, the equilibrium conditions (3) can be rewritten as follows: 
k
qqd
qqd
i
ik
i
ik
k
i
ik
i
ik
k
k ∀



=


≥
>


=
∑∑
∑∑
−
−
     
0  if
0  if
**1
**1
*ρ  (13) 
Eqn (13) states that if the amount of product available to demand market k is positive, i.e., 
∑ >
i
ikq 0* , then the corresponding product price *kρ  is equal to the inverse demand function 



∑−
i
ik
k qd
*1 . However, if no product is available to demand market k, i.e., ∑ =
i
ikq 0* , then the 
corresponding price *kρ  is at least as great as the inverse demand function 


∑−
i
ik
k qd
*1 . 
To confirm to the equilibrium conditions (1)~(2), (13), SCN-AVD-C problem (4) is consequently 
reduced to the following VI model (SCN-VD-C): 
( )[ ] [ ] ( )[ ] [ ]
( )[ ] [ ] { }( )
( )[ ] [ ]
0
  
,                                         ˆ
ˆˆ
*1
2
211
1
≥

 −×


−
−×+
Ω∈∀−×+
−×+−×
∑ ∑ ∑∑
∑∑
∑
∑∑∑
∗−
∗∗
∗∗
∗∗∗∗
k i i
ikik
i
ik
k
j k
jkjkjk
dk
j
jjj
i j
ijijijij
i
iii
qqqd
qqQc
ρ,QQqqQc
qqqcqqQc
 (14) 
where dΩ  is the subset (with the diagonalized demand functions) of the feasible region Ω  which is 
delineated by the constraints (5)~(11). Note that when the other prices other than the subject demand 
market k are temporarily fixed at a certain level, Eqn (7) has already been changed to: 
( ) kqd
j
jkkkk ∀=∑     ,\ ρρρ  (15) 
The reader may refer to Tobin (1986) for a similar equivalency proof between the equilibrium 
conditions (1)~(2) and (13) and their corresponding SCN-VD-C subproblem (14). 
3.1.2 Second loop operation (relaxation of product flow interactions) 
Product flow interactions in the transaction cost function ( )2Qc jk  can be relaxed by temporarily 
fixing the other product flows at a certain level. By doing so, the above cost functions become separable 
and can be simplified as ( )jkjkjk qqQc ,\2 . As a consequence, an optimization subproblem SCN-VD can 
  
8 
8
demand market k should be changed to link j’->k with cost ( )2' Qc kj . With the above treatment, the 
corresponding supernetwork can be depicted in Fig. 2. A typical route from manufacturer i through 
retailer j to demand market k now can be denoted as: p:Κ->i->>j->j'->k. 
'jj → ′→ JJ
k
 
Figure 2: Supernetwork Representation of the SCNE Problem 
 
3.3 Algorithmic Steps 
We propose a ND solution algorithm to the SCN-AVD-C problem. The main idea of the 
diagonalization technique is that it fixes certain independent variables of the equilibrium problem in such 
a way as to create its own variable or separable transportation cost and its own demand function (Ahn et 
al., 1982). Separability makes the Jacobian matrices formed from these functions diagonal (and, therefore, 
symmetric), hence the name of the method. Each separable or diagonalized problem is solved and its 
solution used to create a new diagonalized problem. The sequence of flow/price/quantity patterns 
generated in this process will be shown subsequently to converge, in at least certain circumstances, to a 
unique equilibrium. 
The ND method includes three loop operations. In the first loop, product price interactions are 
diagonalized and, consequently, the SCN-VD-C subproblem is formulated as a VI model (i.e., as a 
quantity model formulation). In the second loop, product flow interactions are relaxed and hence 
separable, yielding an optimization SCN-VD subproblem. In the innermost loop, the SCN-VD 
subproblem is solved as an equivalent SCN-FD subproblem by giving an upper bound of demand Kkqmax  
for each origin-destination pair (?,k). At an equilibrium, the excess demand ( )kkKk dq ρ−max  will be 
dumped onto the dummy link ?->k that is associated with link cost ( ) kqd Kkk ∀− ,1 . The obtained 
product flows and prices are checked for convergence. If the convergence criterion has not been obtained, 
then, as necessary, the product prices will be updated in the first loop, the product flows will be updated in 
the second loop, and the SCN-VD problem (treated as an equivalent SCN-FD problem) will be solved 
again. This procedure is continued until the convergence criterion is satisfied. 
The algorithmic steps can now be stated as follows:  
Step 0: Initialization (of product prices). 
Step 0.1: Set initial product prices to zero, { } { }00 =kρ . Set l=0. 
  
10 
10
( ) ( ) ( )
( ) ( )∑ ∑∑
∑∑∑∑
−
Ω∈
−+
++
j k
KknKk
k
k
jk
n
jkjk
j
j
n
j
i j
ij
n
ijij
i
i
n
i
gqdgqc
gQcgqcgQc
1
11
             
ˆˆˆmin
g
 (17) 
For each O-D pair (?,k), compute the shortest route p based on { }ni Qc )(ˆ 1 , { }nijij qc )(ˆ , 
{ }nj Qc )(ˆ 1 , and { }njk Qc )( 2 ; execute the following assignment rule. 
If ( )nKkkKkp qdc n 1−< , set ln KkKkp qg max=  and ppg nKkp ≠∀= ',0'  
If ( )nKkkKkp qdc n 1−> , set 0=nKkpg  
This assignment yields an auxiliary flow pattern ( ) { }nijn gG =1 , ( ) { }njkn gG =2 , { }nKkg . 
Step 3.4: Line search. Find nα  that solves the following line-search subproblem. 
( ) ( ) ( )
( ) ( )∑ ∑∫∑∫
∑∑∑∑
++ −
+++
−+
++
j k
q
k
k
jk
q
jk
j
n
j
n
j
i j
n
ij
n
ijij
i
n
i
n
i
nKkn
jk
n
dddqQc
qQcqqcqQc
11
0
12
0
11111
,\             
min
ϖϖϖϖ
α
 (18) 
where ( ) { }jkjijiLINKqgqq nLINKnLINKnLINKnLINK ,,,     1 ∈−+=+ α  (19) ( ) kqgqq nnnn KkKkKkKk ∀−+=+      1 α  (20) 
Step 3.5: Update (of product flows). 
Update the product flows using Eqns (19)~(20). 
Step 3.6: Convergence check.  
If ( ) ( )nn QQ 111 ≈+  and ( ) ( )nn QQ 212 ≈+ , continue. Otherwise, let n=n+1, go to Step 3.2. 
It is worth noting that if the diagonalized demand function ( )Kkk qd 1−  is in the form of “ Kkqln− ”, 
then a Logit model will result. Note also that the proposed algorithm adopts and in fact extends the 
concept of diagonalization method which under certain regularity conditions has been proved to 
converge to the corresponding equilibrium conditions (Sheffi, p. 216.) 
 
4. Numerical Example 
To demonstrate the SCN-AVD-C model, next we solve for a numerical example taken from 
Nagurney et al. (2002). The test network consists of three sectors, i.e., manufacturers, retailers and 
demand markets respectively. Each sector contains two agents. The cost functions associated with the 
three tiers of the test network are given in Table 1. 
 
Table 1: Cost Functions for the Three Tiers of the Test Network 
  
12 
12
0
10
20
30
40
50
60
70
1 3 5 7 9 11 13 15 17 19 21 23
Iteration
D
em
an
d
 
Figure 5: Variable Demand versus Iteration in a Demand Market 
 
The corresponding product flows (or route flows) and product prices (or route costs) that were 
obtained by bookkeeping are also summarized in Table 3. Not surprisingly, the above test results, to some 
effective digits, comply with the equilibrium conditions shown in Eqns (1) and (3), and are exactly the 
same as those computed in Nagurney et al. (2002). It is worth mentioning that though not explicitly 
required in the model formulation, the equilibrium conditions for each retailer agent are automatically 
satisfied with our supernetwork representation and solution algorithm. That is: the prices that an agent is 
willing to pay for the product in their retailer outlet are equal and minimum. 
 
Table 3: Route Flows and Product Prices 
Route(?->i->j->k) Route Flows O-D Product Flows 
(i,k) 
Product Prices 
(Route Travel 
Times) 
?->1->1->1 8.304 
?->1->2->1 8.304 
(1,1): 16.608 
?->2->1->1 8.304 
?->2->2->1 8.304 
(2,1): 16.608 
K=1: 276.224 
?->1->1->2 8.304 
?->1->2->2 8.304 
(1,2): 16.608 
?->2->1->2 8.304 
?->2->2->2 8.304 
(2,2): 16.608 
K=2: 276.224 
 
  
14 
14
 
Notations 
ic : production cost function associated with manufacturer i 
ijc : transaction cost function for shipment from manufacturer i to retailer j 
jkc : transaction cost function for shipment from retailer j to demand market k 
icˆ : marginal production cost associated with manufacturer i, i.e., 
( )( )
i
i
ii c
q
qc ˆ=∂
⋅∂
 
ijcˆ : marginal transaction cost function for shipment from manufacturer i to retailer j 
jkcˆ : marginal transaction cost function for shipment from retailer j to demand market k 
jcˆ : marginal handling and storage cost associated with retailer j, i.e., 
( )( )
j
j
jj c
q
qc
ˆ=∂
⋅∂
 
Kk
pc~ : cost associated with a route p from super-origin ? to a demand market k, where route p=?
->i->j->j’->k. 
( )ρkd : the demand function in market k  
ig : the amount of production by manufacturer i (subproblem) 
ijg : the amount of transactions between manufacturer i and retailer j (subproblem) 
jkg : the amount of transactions between retailer j and demand market k (subproblem) 
i: manufacturer designation, Ii∈ ; set { } ,,,,2,1 IiI LL=  
j: retailer designation, Jj∈ ; set { } ,,,,2,1 JjJ LL=  
k: demand market designation, Kk ∈ ; set { } ,,,,2,1 KkK LL=  
?: super-origin designation 
1Q : the transaction between manufacturers and retailers, { }ijqQ =1  
2Q : the transaction between retailers and demand markets, { }jkqQ =2  
( )ijij qqQ ,\1 : product flows Q1 between manufacturer and retailer sectors are temporarily fixed, 
except for the subject product flow ijq , at a certain level 
( )jkjk qqQ ,\2 : product flows Q2 between retailer sector and demand markets are temporarily fixed, 
except for the subject product flow jkq , at a certain level 
p: route designation 
iq : the amount of productions by manufacturer i 
jq : the amount of product available at retailer j 
