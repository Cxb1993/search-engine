摘要 
 
本計畫緣起於近年來網際網路技術日益成熟，使網路成為生活的一部分，而各類的應
用成長迅速，Web Service 新技術的崛起，使得越來越多的程式開發都以Web Service架構
為主，因此對架構的需求也越來越多，也越來越多元化，例如軟體容錯功能(software 
fault-tolerance)、負載平衡（load balance）、資訊安全（information security）的功能。 
經由我們初步的研究發現，在Web Service 的應用上迫切的需要一個「泛用型資訊攔檢
架構（Information Interceptor and Inspection Framework, I3 Framework）」，使在Web Service 
上的應用，如資訊安全（information security）、電腦犯罪調查(Computer Forensics)、軟體
容錯(software fault-tolerance)、可信賴的網路服務(Reliable Web Service)及電腦審計
(continuous auditing )等，使其能提供完善的資訊攔檢功能。 
I 
報告內容 
前言: 
第二年的工作主要為在 SOAP 平台上分析設計「泛用型資訊攔檢架構」相關的功能。
在現在的主要 SOAP 平台，有開放程式源的 Apache AXIS[AP02]及 Microsoft .NET 等，因
此本計畫第二年的研究將以 AXIS 為主，建立出「泛用型資訊攔檢架構」。 
 
目的: 
完成分析與設計在 SOAP 平台上的「泛用型資訊攔檢架構」相關的功能以及資訊攔檢
機制的設計。 
 
研究方法: 
在 SOAP 1.1 的規格中，並未詳細規定 interceptor 的作法，因此軟體廠商所開發的
interceptor 架構也不盡相同。例如 AXIS 的 handler[IB02]和 MICROSOFT 的 SOAP[JHG03]
皆有提供類似的 interceptor 架構的功能。以下我們選擇 AXIS 所提供的 handler 架構的
interceptor 來探討資訊攔檢的技術。 
如圖 1 所示，AXIS SOAP 架構下的 handler 機制是以一個串鏈的方式來實行，當一
個 message 進入到 AXIS engine，會依序進入串鏈中，逐一執行串鏈中每個特定 handler
的工作，最後再到目標的應用程式。因此在 handler 中，既可以利用 JAVA 來撰寫資訊攔
檢的程式，經過組態設定後，AXIS 再運行時能確保經過其平台的資料流可依據組態設定
進行對應的攔截程式。 
Axis Engine
(AxisServer)
msg = MessageContext
Client Application
Interceptor
Handler
msg
Handler
Interceptor
msg
Web
Service
Global Request Chain
msg
msg
Global Response Chain  
圖 1 : AXIS SOAP Interceptor 架構圖 
因此在目前的 AXIS 上，要建立資訊攔檢的架構，我們只需要利用 AXIS 所提供的
handler 既可以輕易的完成，但是在 W3C 所發佈的 SOAP 1.2 標準中，重新定義了 SOAP
的下一個標準。我們將進一步的探討 SOAP 1.2 標準中有利於進行資訊攔檢技術的技術為
何。 1 
動作後，在一 message 內容往下一目標，既 Server 傳送。 
 
結果與討論: 
因此我們可以利用 Intermediary 的優點，建立資訊攔檢的架構，快速的完成資訊攔檢
的目的。 但是目前實際的實作上，卻是有其困難度的存在，原因是因為目前並無根據 SOAP 
1.2 實作出完整的平台。所以說無完全支援 SOAP 1.2 標準的軟體供本計畫執行使用；另外
對於執行 SOAP 1.1 標準的平台，SOAP 1.2 並未定義其溝通的標準，因此一定會衍生出因
SOAP 1.1 及 SOAP 1.2 同時存在在同一服務架構的環境中，而產生訊息無法正確溝通的軟
體錯誤。因此在 SOAP 1.2 無定義向下相容的議題下，如何在第一時間內建立出一個泛用型
的資訊攔檢架構，便是本計畫今年的執行重點。 
3 
