中文摘要 
由於嵌入式系統市場的快速成長，使得嵌入式系統軟體的複雜度也跟著成長。
現今許多的嵌入式系統因為應用的需求，嵌入式系統搭配一個或多個 ASICs 
(Application Specific Integrated Circuits)電路來負擔部份高運算需求是目前短暫
的解決方式，但會面臨到嵌入式系統體積越來越龐大的困境，所以現今另一種解
決方式是嵌入式系統搭配 FPGA (Field Programmable Gate Array)，好處是在於
FPGA 可被設定成指定的硬體電路，以支援不同的運算需求，比軟體能達到更高
的效率，又比硬體具有更佳的彈性。 
 
本計畫針對使用 Linux 作業系統之嵌入式可重新組態運算系統，設計並實現
軟硬體協同設計平台，讓嵌入式系統能藉由所設計的軟硬體整合執行平台，解決
軟硬體間溝通介面的問題，使得使用 FPGA 來組態成為加速硬體之嵌入式系統開
發變得不再複雜且有完整的資料結構規劃。本計劃的完成可分成四個部份： 
 
1. 軟硬體整合執行平台設計 
2. 軟硬體整合執行平台載入程式設計 
3. 軟硬體溝通介面的初始規劃 
4. 硬體管理單元設計 
 
軟硬體整合鏈結器，把軟體設計師所撰寫的應用程式與硬體工程師設計用來
加速的硬體能結合在一起，合併成單一可執行檔，就是軟硬體整合執行程式，稱
作 Executor，內容包含：使用者設計的應用程式及硬體組態檔、系統提供的初始
化程式及管理加速硬體的硬體管理單元與上述檔案產生出的資料前置區(PSP)。
應用程式及初始化程式格式為 Linux 可執行的 elf 檔案格式。初始化程式藉由資
料前置區在核心模組中建立硬體控制區塊(HCB)以及硬體資訊區塊(NIB)資料結
構並把硬體管理單元組態至 FPGA。軟硬體整合載入程式將載入軟硬體整合執行
程式並建立軟硬體整合平台使得使用者的應用程式與硬體模組得以順暢的執
行。 
 
透過本計劃階段性的完成，高效能可重新組態運算系統之軟體端要與硬體的
溝通，將變的容易且有規則性，增進彈性化與效率化的嵌入式系統的實現，尤可
能的處理器的核心亦可以 IP 的型態植入 FPGA 而創造出下一代的嵌入式系統設
計理念。 
關鍵詞 
 軟硬體整合鏈結器、軟硬體溝通介面、硬體管理單元、硬體控制區塊、硬體
資訊區塊。 
 
 
 
 
一、 前言 
現金的運算技術，分為兩種：應用硬體技術與軟體技術。軟體技術缺乏運
算效率而硬體技術卻缺乏彈性度，於是可重新組態運算這樣的考量下，採
取了兩者混合的折衷方式，來彌補硬體、軟體技術間，彈性與效率的差距。
可重新組態的運算概念大多由中央處理器(CPU)，搭配一個或多個可重新
組態運算單元(Reconfigurable Processor Unit, RPU )。在運算時，CPU
可將 RPU 設定成指定的硬體電路，以支援不同的運算需求。這樣的計算系
統是介於特殊用途積體電路與一般用途處理器之間。達到比軟體更有效率，
又比硬體有更佳的彈性。 
 
二、 研究目的 
本計畫之研究目的將針對使用 Linux 作業系統之嵌入式可重新組態運算
系統，設計並實現軟硬體協同設計平台。提升軟硬體之間的整合度。此平
台具備以下特設： 
 
1. 透過軟硬體整合鏈結器來建立平台，產生出可執行檔。系統藉由初始
化程式掃描此執行檔，建立程式控制區塊(TCB)、硬體控制區塊(HCB)
以及硬體資訊區塊(NIB)資料結構。 
2. 使用者透過這些資料結構取得硬體資訊，並利用系統提供的寫入、讀
取等函式與硬體溝通。 
3. 透過硬體管理單元(HMU)，使軟體端可同時對多個加速硬體做溝通，達
到資料緩衝的效果。 
 
三、 架構實現設計 
1. 軟硬體整合鏈結器 
為了讓軟體設計師所撰寫的應用程式與硬體工程師設計用來加速的硬
體能結合在一起，所以我們設計I-link，I-link是 Hardware-Software 
Integration link 的簡稱。I-link 分成兩部分：使用者介面與系統介
面。I-link 會將兩種介面所提供的檔案加上自動產生的 PSP 檔合併成
單一可執行檔，我們稱作 Executor，如示意圖 3-2.2 所示，Executor
包含開機程式(Bootloader)、作業系統與作業系統 PSP、硬體管理單
元與硬體管理單元 PSP、每一個 Task 與各自的 PSP 和每一個加速用的
硬體組態檔與各自的 PSP。 
PSP 是 Program Segment Prefix 的縮寫。PSP 資料結構的建立，可以
作為系統和軟體以及硬體間訊息交換的重要區端。下一節我們將會介
紹開機程式如何利用 PSP 來建立實現軟硬體溝通的資料結構。 
四、 結論 
可重新組態運算系統在處理高運算需求的應用程式上，已被證實具提昇系
統效率的潛力；因此，本計畫針對嵌入式可重新組態運算系統，設計軟硬
體整合環境平台提升軟硬體間的整合度。我們成功利用 I-link 軟硬體檔
案整合鏈結器建立平台，產生單一可執行檔，並在系統初始階段藉由開機
程式掃描單一可執行檔，建立程序控制區塊(TCB)、硬體控制區塊(HCB)
以及硬體資訊區塊(NIB)資料結構。使用者則可以簡單地使用系統提供的
寫入、讀取等函式取得硬體資訊並與硬體管理單元溝通，達到提升軟硬體
間的整合度與溝通上的方便性。 
 
參考文獻 
[1] Mun-Kit Leong, “Design and Implementation of SoC Hardware-Software 
Co-design Platform＂, Master thesis, National Sun Yat-sen University, 
2008 
[2] Tsung-chien Ho, “Software-Hardware Interwork Mechanism of FMRPU＂, 
Master thesis, National Sun Yat-sen University, 2007 
[3] D. Buell, T. El-Gbazawi, K. Gaj, V. Kindratenko, “High-Performance 
Reconfigurable Computing＂ Computer, March. 2007, pp. 23-27 
[4] D. Andrews, D. Niehaus, and P. Ashenden, “Programming Models for 
Hybrid CPU/FPGA Chips,＂ Computer, Jan. 2004, pp. 118-120 
[5] M. Vuletic, L. Pozzi, and P. Ienne, “Seamless Hardware-Software 
Integration in Reconfigurable Computing Systems,＂ IEEE Design & Test 
of Computers, Mar./Apr. 2005, pp. 102-113. 
[6] N. Moore, A. Conti, M. Leeser, L.S. King, “Vforce: An Extensible 
Framework for Reconfigurable Supercomputing,＂ Computer, March. 2007, 
pp. 39-49 
[7] J.L. Tripp, M.B. Gokhale, K.D. Peterson, “Trident: From High-Level 
Language to Hardware Circuitry＂ Computer, March. 2007, pp. 28-37 
[8] M.C. Herbordt, T. VanCourt, Y. Gu, B. Sukhwani, A. Conti, J Model, 
D. DiSabello, “Achieving High Performance with FPGA-Based Computing＂ 
Computer, March. 2007, pp. 50-57 
[9] A. SAMAHI, S. BOUKHECHEM, E. BOURENNANE, N. E. IDIRÈNE, "STARSoC : 
A C-Based Platform for Rapid Prototyping of Embedded System", 
RecoSoC'05, ISBN : 2-9517-4611-3, Montpellier, France, 1 (1), 27 Juin 
2005, pp. 177-182 
[10] A. SAMAHI, E. BOURENNANE, S. BOUKHECHEM, "Communication Interface 
Generation For HW/SW Architecture In The STARSoC Environment", IEEE 
International conference on Reconfigurable Computing and FPGA's, 
IEEE Computer Society Press , San louis Potosi , Mexico, 20 September 
2006. 
[11] M.Gokhal, J.M.Stone, J.Arnold and M. Kalinowski , “Streams – 
 
一、 參加會議經過 
ACM國際計算新領域會議是再歐洲所舉辦的一個新興的會議，近年邁入第六
屆，此會議由ACM主辦且贊助商為IBM，收錄於本會議的論文領域包含有computing 
paradigms, computational models, architectural paradigms, computer architectures, 
development environments, compilers,與operating environments。此會議為期三天
(5/18~20)，於義大利納布勒斯的小島Ischia舉行。此次會以總共有 113 篇論文投稿，
平均每篇論文有三個reviewers，最後收錄了 26 篇論文成為此次會議的論文，而我們
的論文很幸運的也收錄在 26 篇論文之中。論文的接受率約為 23%，所以來參加此次
會議的論文的品質也是有一定的水準。我們發表之論文題目為『A Multi-streaming 
SIMD Architecture for Multimedia Applications』。會議全程採單軌進行，全程參
與的人數約為 70~80 人，不乏在此領域中的知名人士，討論熱烈，同時也見識到他
們的謙虛有禮，是一個讓人覺得溫馨的會議。 
 
二、 與會心得 
此次會議前兩天所邀請到的keynote演講者與題目也都是目前計算機領域最熱門的新
領域分別為”Larrabee: A Many-Core Intel® Architecture for Visual Computing”與 
“Pervasive Massively Multithreaded GPU Processors”，第三天則是舉辦了一個
Panel Session來討論complier在未來multi-core的處理器架構下的發展，也是一個很
有趣且值得探討的一個議題。三天的會議總共有8個sessions，分別為Innovative 
Memory Systems, Advanced Architecture 1, HPC Applications, Novel Tools and 
Methods 1, Innovative Acceleration Platforms, Advanced Architectures 2, Novel 
Tools and Methods 2, 與  Advanced Computing Systems Management and 
Evaluation。聽過這八個sessions的報告內容後，發覺目前國外主要的研究趨勢在關
於GPGPU方面的程式撰寫與應用與GPGPU相對應的硬體架構設計，有十分濃厚的
興趣。如果GPGPU能夠順利發展下去，將來勢必在新一代計算機的市場上可能將躍
上主角之地位，因此在國內朝GPGPU這個新領域去發展也會是一條不錯的研究之
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
