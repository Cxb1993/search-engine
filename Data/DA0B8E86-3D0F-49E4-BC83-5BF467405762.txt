computing scheme for analyzing air foil bearing of 
bump-type by today’s shared-memory multicore 
platforms. 
英文關鍵詞： Air lubricated bearing, Reynolds equation, Iterative 
relaxation method, Parallel computing 
 
2 
 
行政院國家科學委員會專題研究計畫成果報告 
流體薄膜潤滑模型之平行迭代數值方法研究 
Parallel Iterative Methods for the Solution of Fluid-Film Lubrication Models  
計畫編號：NSC 99-2221-E-182-014 
執行期限：99年 8月 1日至 100年 10月 31日 
主持人：王能治   長庚大學 機械工程學系 
 
摘要     
在氣體軸承的數值解法中通常需要以迭
代的方法求解，其中一個原因為其雷諾方程
式為非線性的式子。在以箔片為撓性支橕軸
承面的軸頸軸承中，亦需要額外的迭代來計
算收斂的氣膜厚度分佈，也因此運算量會大
幅度的增加。本研究提出一個有效率的計算
法，以牛頓法將雷諾方程式線性化，並將離
散化的式子以平行迭代法求解。採用的數值
方法為平行模式的連續過鬆弛法(RBSOR 及
SPSOR)，並使用 OpenMP語法，於八個核心的
工作站上執行平行計算。為了提高計算效
率，採用了能加快收斂的數值阻尼方式及高
效率的尋根法。研究結果顯示，適當的數值
阻尼配合最佳的鬆弛係數，可以大幅度的降
低收斂的時間。另外在平行迭代法中，
RBSOR比 SPROB有較佳的平行效率。本研
究提供了一個高效率的平行迭代法，適用於
分析撓性表面的氣體軸承性能。 
 
關鍵字: 氣體薄膜潤滑軸承、雷諾方程式、
迭代鬆弛法、平行計算 
 
ABSTRACT 
In an air bearing analysis the model is 
usually solved iteratively due in part to the 
nonlinearity of the Reynolds equation. In foil 
bearings the compliance of the bearing surface 
also requires iterative procedure to have a 
converged solution. Thus, the solution 
procedure requires a multiple-level-deep nested 
iteration, which involves extended solution 
time and convergence difficulty. In this study, a 
simple air foil bearing model is used and the 
compressible-fluid Reynolds equation for 
modeling gas lubrication is linearized by 
Newton’s method. The discretized equation is 
solved by one of the two parallel iterative 
methods, red-black (RB) or strip partition (SP) 
successive-over-relaxation (SOR) method. The 
parallel programming is conducted using 
OpenMP programming in an eight-core 
workstation. Then, a numerical damping 
scheme for the film-profile convergence is 
presented. Finally, a root-finding process is 
conducted to iteratively attain the eccentricity 
of the bearing for a given load. It is found that 
the numerical damping step is crucial, which 
allows the use of a larger relaxation factor to 
have a fast rate of convergence. Both the 
parallel RBSOR and SPSOR methods are easy 
to implement and the red-black SOR method 
exhibits better efficiency in the studied cases. 
This study presents a parallel computing 
scheme for analyzing air foil bearing of 
bump-type by today’s shared-memory 
multicore platforms.  
 
Keywords: Air lubricated bearing, Reynolds 
equation, Iterative relaxation method, Parallel 
computing. 
 
Introduction 
The importance and potential applications 
of gas or air foil bearing is noted and 
investigated by many studies for more than two 
decades. The copious outcomes of the foil 
bearing studies are based on experimental 
works [1-3], numerical analysis [4-6], or both 
[7-9]. Foil gas bearings are self-acting 
hydrodynamic bearings made from sheet metal 
foils comprised of at least two layers. The 
innermost “top foil” layer traps a gas pressure 
film that supports a load while a layer or layers 
underneath provide an elastic foundation [1]. 
An important mechanism influencing foil 
bearing operation is that the hydrodynamic gas 
film pressure causes a corresponding elastic 
 4
known for its straightforward implementation 
and easy to carry out in parallel computing.  
To reduce the solution time in modeling 
fluid film lubricated bearings, Wang and Tsai 
[24] applied parallel computing in a thermo- 
hydrodynamic lubrication analysis. The 
portable parallel programming language 
OpenMP is applied. The result shows that the 
3-D time-dependent energy equation can be 
solved in parallel with a high parallel efficiency 
of 94%. In that study, the SOR method using 
natural ordering conducted in parallel for the 
generalized Reynolds equation is poorly 
performed (56.5% parallel efficiency) due to 
the data race problem. The data race in 
multithread computing is the case when an 
iteration may occasionally use an older value 
from a preceding or succeeding column, rather 
than the latest value. Therefore, two or more 
statements can read or write to the same 
memory location at the same time causing data 
race. However, the iterative algorithm, such as 
the SOR method applied by Wang and Tsai 
[24], is tolerant of such errors and will still 
converge, but slowly, to the desired solution. 
Some other recent applications of OpenMP 
programming in tribological optimization 
studies can be found in Refs. [25, 26]. 
The solution time of air foil bearing 
analysis can be significantly minimized by 
using parallel computing. The OpenMP 
paradigm is the de facto standard for 
multithread computing in today’s multicore 
shared-memory computers. The incremental 
parallelization and parallel-directive format of 
OpenMP programming make the multithread 
parallel computing straightforward [27, 28]. A 
thread in a computing is a small but 
independent job which can be executed in a 
processor core. The use of OpenMP is 
especially effective in multicore environments 
where many threads can be handled 
simultaneously. To have multiple threads to be 
executed concurrently for the discretized 
Reynolds equation, a parallel computing 
scheme is required which is to be introduced in 
the next section.  
In this study, the problem is to solve the 
pressure distribution and the film profile of an 
air foil bearing under a given load. The thermal 
effects on the foil bearing properties are 
neglected. The solution procedure for the 
analysis requires a multiple-level-deep nested 
iteration. The main focus of this study is to 
generalize an efficient solution procedure for 
compliant surface bearing analysis using 
parallel iterative methods. Initially, the 
compressible-fluid Reynolds equation is 
linearized by Newton’s method. The equation 
is then discretized and solved by one of the two 
parallel SOR methods using OpenMP 
programming. Then, a numerical damping 
procedure is introduced in the iterative process 
for pressure updating to determine the 
compliant foil profile for a given eccentricity. 
Finally, a nonlinear root-finding process is 
conducted to attain the eccentricity for a given 
load. In this study, each iteration-loop is 
separately dealt with for convergence and 
computational efficiency. The approaches 
adopted are also useful for other similar 
applications, such as air foil bearings with 
nonisothermal consideration, various foil 
materials, or different elastic foil models.  
 
Methodology 
The air foil bearing model 
In this study, the bearing (Fig. 1) is 
lubricated by air and the bearing has a flexible 
foil surface which is supported by the bump 
foil (Fig. 2). The parameters of the air foil 
bearing are listed in Table 1 [13, 29]. The air is 
treated as Newtonian fluid and the variation of 
viscosity and density across the air film 
direction is neglected. The condition of no-slip 
at the bearing surface interface is also assumed. 
Thus, the Reynolds equation for modeling air 
foil bearing lubrication can be expressed as 
( )
x
hU
y
ph
yx
ph
x ¶
¶
=÷÷
ø
ö
çç
è
æ
¶
¶
¶
¶
+÷÷
ø
ö
çç
è
æ
¶
¶
¶
¶ r
m
r
m
r
21212
33 . 
In addition, the temperature of air is 
assumed invariant in operation and the air is 
treated as an ideal gas. As a result, the air is 
isoviscous and the density of air is proportional 
to the fluid film pressure, i.e. )(RTp=r . 
Therefore, the Reynolds equation for the air 
foil bearing lubrication is  
( )
x
phU
y
pph
yx
pph
x ¶
¶
=÷÷
ø
ö
çç
è
æ
¶
¶
¶
¶
+÷
ø
ö
ç
è
æ
¶
¶
¶
¶
m633 .    (1) 
To add the generality of the governing 
equation, the parameters shown in Eq. (2) are 
used to nondimensionalize Eq. (1). 
 6
a large relaxation factor. If 1=b , no damping 
effect is achieved. 
 
The root-finding procedure 
In the case of a given bearing load, the 
solution of the final film profile of the bearing 
and the corresponding film pressure can be 
obtained in many ways. Note that the 
compliant foil profile is a function of 
eccentricity ratio (Eq. (10)). The resultant film 
profile which can produce a load equals the 
applied load has a corresponding eccentricity 
ratio. This can be solved as a nonlinear 
root-finding problem. The secant method for 
root-find problem is known for its efficiency 
but comes with a high possibility of solution 
divergence. The approach, thus, is to apply a 
hybrid procedure which starts from a slow but 
stable piece-wise search. The purpose of the 
piece-wise search is to bracket the root (e ) in a 
narrow range. The root-finding process can 
then switch to the secant method. The iteration 
is terminated when the following convergence 
criterion is met. 
4
1
1
10-+
+
<-n
nn
e
ee .       (14) 
 
Parallel SOR methods 
In this study, two parallel SOR methods 
of domain decomposition are tested as the 
solution solver for Eq. (5). The parallel 
programming paradigm is OpenMP. The 
concept of domain decomposition is to divide 
the computational work into several tasks 
which can be executed in parallel. The domain 
decomposition can be carried out in a number 
of ways. In this study, two popular and easy to 
implement methods, strip partition SOR 
(SPSOR) and red-black SOR (RBSOR) 
methods, are applied to solve Eq. (5). Fig. 3 
illustrates the layout of the SPSOR method. In 
the SPSOR iteration, the interior points of each 
strip are treated as in a regular SOR method. 
The number of the strips divided in the 
numerical gridwork is equal to the number of 
available processor cores. As a result, each 
processor core can execute one thread. And all 
the threads can be processed at the same time. 
The direction of the strip dividing is 
determined by minimizing the divided 
boundary points, which is parallel to the y-axis 
in this study.  
It is noted that the points in the right-most 
column of strip 1 in Fig. 3 requires the value of 
the left-most points in the strip 2. The similar 
situation appears in the other strips. Since the 
computation in each strip is conducted 
concurrently, the updating process for the 
points along the strip boundaries might not 
have the updated data (the so-called data race 
problem). Nevertheless, in this iterative 
procedure the data race degrades the 
performance but not preventing the 
convergence. It is expected that the more strips 
in a parallel computing the more severe the 
data race problem is. The result is an increase 
of number of iterations for the same 
convergence criterion. 
 The RBSOR method adopts a different 
strategy in preparing the parallel computing. 
The domain of the computation is divided in to 
a two-partition layout (Fig. 4), and each 
partition is denoted by red (circle) or black 
(triangular) points. If the computation starts 
from the red points, then this five-point finite 
difference stencil computation of the 
discretized Eq. (5) depends on the values of the 
adjacent four black points. Other than the 
boundary points the values of the black points 
are from a previous iteration or initial guess. 
The computation of all red points can be 
executed in parallel among the available 
processor cores. The next step to complete the 
whole domain computation is to perform the 
black-point calculation. Similar operation as 
the red-point is carried out, but the updating is 
with the newly computed red points which can 
accelerate the convergence. No data race 
problem is encountered in the RBSOR method.  
The optw  used in the SPSOR and 
RBSOR methods for gridwork of 160x50 are 
1.80, and 1.83, respectively. These numbers are 
obtained by numerical tests. Thus, the values of 
optw  for the gridwork of 320x100 and 480x150 
can be computed by using Eq. (7). The results 
are listed in Table 2. 
 
The computational platform and flowchart 
The workstation used in this study is a HP 
Z600 workstation. It has two quad-core Intel 
Xeon/2.0 GHz CPUs and 8 GB main memory. 
The operation system is Microsoft Windows 7. 
The programming language is Fortran 90 and 
 8
eight-thread cases are due to the high 
frequency of communication requirement (in 
each iteration) in parallel computing. The 
average execution times including the 
computational and communication times in one 
iteration for SPSOR and RBSOR methods are 
93.3 and 82.6 m s, respectively.  
The results of the performance test for 
finer grids by the SPSOR and RBSOR methods 
are shown in Figs. 12 and 13, respectively. As 
expected, the speedup for both methods is 
higher as the grid size becomes finer. This is 
due to a longer solution time is required in a 
finer grid case and the percentage of 
communication overhead relative to the overall 
execution time is decreased. It can be seen that 
the RBSOR method demonstrates a faster 
execution and a higher speedup than the 
SPSOR method. The lower rate of convergence 
of SPSOR method may be due to the data race 
problem along the divided strip boundaries. 
The computational sequence of the RBSOR 
method is also more efficient, which can be 
judged by the performance of the two methods 
when one processor core is used.  
Table 3 lists the number of iterations 
required for the optimum SOR and GS 
methods by using one processor core. It can be 
seen that the number of iterations in the cases 
by the GS method can be much larger than 
those by the optimum SOR methods. For the 
case of gridwork 480x150 the solution of the 
GS method is not converged. Note that the 
number of iterations in the SPSOR method for 
the cases of more than one processor core is 
slightly increased due to the minor data race 
problem. While the number of iterations 
required in the RBSOR method is independent 
of the number of processor cores used. 
 
Conclusion 
It is demonstrated that the solution 
procedure in the analysis of isothermal air foil 
bearings requires a multiple-level-deep nested 
iteration to solve the problem. In this study, 
several methods are tailored to provide a fast 
solution scheme for air foil bearing analyses. 
These methods include the parallel SOR 
methods, the procedure to damp the oscillation 
solution in the pressure updating process, and 
the method to solve the root-finding problem 
effectively. The importance of using optimum 
relaxation factor and numerical damping 
(especially in the cases with large bearing 
numbers and high eccentricity ratios) is 
emphasized. It is also noted that today’s 
workstations, within the financial reach of most 
researchers, are capable of handling very small 
(fine-grain) tasks efficiently using multiple 
processor cores and OpenMP programming. 
Some studies [16, 17] for air foil bearing 
analysis reported that extended solution time is 
required in the cases with large bearing 
numbers and high eccentricity ratios. And the 
SUR method is used in these studies and an 
extended solution time is resulted. In the 
proposed solution procedure (Fig. 5) the much 
fast optimum SOR method is used in solving 
Reynolds equation, and the introduction of 
numerical damping process ensure a fast rate of 
convergence in the nonlinear root-finding 
problem. For a large bearing load, however, a 
small numerical damping is required. 
Computers of nowadays are equipped 
with multicore CPUs. Some workstations have 
more than one such multicore CPUs installed. 
Most of the compilers for C, C++ and Fortran 
languages are also OpenMP-supported. It is 
very hard to justify not using a few OpenMP 
directives to parallel the bottleneck of the 
program. Surprisingly, the poorly performed 
GS method is still being used for no good 
reason in some tribological studies [16, 17, 19]. 
In the case with a matrix of high condition 
number the GS method cannot provide a 
converged solution (Table 2).  
The optimum SOR method can easily 
outperform the GS method and the optimum 
relaxation factor is easily to obtain and 
implement. In this study, the optimum SOR 
methods make the solution convergence 
possible for the cases using fine-grids. The 
high speedups obtained in parallel computing 
are also resulted for the same reason. It is 
recommended that the solution scheme for the 
analysis of air foil bearings is to follow the 
procedure outlined in Fig. 5, and use the 
RBSOR method as the parallel computing tool 
to minimize the number of iterations and 
solution time.  
 10
Friction in the Dynamic Behavior of 
Aerodynamic Foil Bearings,” Tribology 
International, 41, pp. 387–395 (2008). 
[20] Wang, N. and Chang, C., “An application 
of Newton’s Method to the Lubrication 
Analysis of Air-Lubricated Bearing,” 
Tribology Transactions, 42, pp. 419–424 
(1999). 
[21] Strikwerda, J. C., Finite Difference 
Schemes and Partial Differential 
Equations, Pacific Grove: Wadsworth & 
Brooks (1989). 
[22] Morton, K. W. and Mayers, D. F., 
Numerical Solution of Partial Differential 
Equations, Cambridge: Cambridge 
University Press (2005). 
[23] Wang, N., Chang, S.-H. and Huang, H.-C., 
“Comparison of Iterative Methods for the 
Solution of Compressible-Fluid Reynolds 
Equation,” Journal of Tribology – Trans. 
of the ASME, 133, pp. 021702.1-021702.7 
(2011). 
[24] Wang, N. and Tsai, C.-M., “Application of 
Thread-Level Parallel Programming to 
Thermohydrodynamic Lubrication 
Computation,” Tribology Transactions, 49, 
pp. 473–481 (2006). 
[25] Wang, N., Tsai, C.-M. and Cha, K.-C., “A 
Study of Parallel Efficiency of Modified 
DIRECT Algorithm Applied to 
Thermohydrodynamic Lubrication,” 
Journal of Mechanics, 25, pp. 143-150 
(2009). 
[26] Wang, N., Tsai, C.-M. and Cha, K.-C., 
“Optimum Design of Externally 
Pressurized Air Bearing Using Cluster 
OpenMP,” Tribology International, 42, pp. 
1180–1186 (2009). 
[27] Chapman, B., Gost, G., van der Pas, R. 
and Kuck, D. J., Using OpenMP: Portable 
Shared Memory Parallel Programming, 
Cambridge: The MIT Press (2008). 
[28] Chandra, R., Dagun, L., Kohr, D., Maydan, 
D., McDonald, J. and Menon, R., Parallel 
Programming in OpenMP, San Francisco: 
Academic Press (2001). 
[29] Ruscitto, D., Mc Cormick, J. and Gray, S., 
“Hydrodynamic Air Lubricated Compliant 
Surface Bearing for an Automotive Gas 
Turbine Engine I - Journal Bearing 
Performance,” NASA CR-135368 (1978). 
 
Table 1 The parameters of the air foil bearing 
[13, 29]. 
Bearing radius, r 19.05 mm 
Bearing length, B 38.1 mm 
Bearing radial clearance, c 57 mm 
Bump foil thickness, tB 101.6 mm 
Bump pitch, s 4.572 mm 
Half bump length, l 1.778 mm 
Bump foil Young’s 
modulus, E 
214 GPa 
Bump foil Poisson’s ratio, n 0.29 
 
Table 2 The optimum relaxation factors ( optw ) 
used in SPSOR and RBSOR methods. 
Gridwork SPSOR Method 
RBSOR 
Method 
160x50 1.800 1.830 
320x100 1.895 1.911 
480x150 1.929 1.940 
 
 Table 3 The number of iterations of the SOR 
methods using one processor core. 
Gridwork 
SPSOR Method RBSOR Method 
w =1.0  optw  w =1.0 optw  
160x50 68,210 23,170 75,966 24,096 
320x100 619,513 35,116 795,073 34,215 
480x150 N/C 44,761 N/C 40,785 
N/C: not converged; optw : see Table 2 
 
Fig. 1 The schematic of the air foil bearing of 
bump type. 
 12
0 50 100 150 200 250
30
40
50
60
70
80
 
 
Be
ar
in
g 
Lo
ad
 (N
)
Number of Iterations
gridwork = 160x50
b = 1.0
e = 0.8
clearance = 57 mm
speed = 60,000 rpm
Fig. 7 The oscillation of bearing load in 
updating the air film pressure. The oscillation 
is due to the undamped ( 1=b ) pressure 
updating by Eq. (13). 
0 2 4 6 8 10 12 14 16 18 20
0
10
20
30
40
50
60
70
 
 
gridwork = 160x50
e = 0.8
clearance = 57 mm
speed = 60,000 rpm
B
ea
rin
g 
Lo
ad
 (N
)
Number of Iterations
numerical damping
(b in Eq. (13))
 0.2
 0.4
 0.6
 0.8
Fig. 8 The effect of the numerical damping on 
the convergence of the solution of bearing load. 
10000 20000 30000 40000 50000 60000
0
20
40
60
80
100
120
140
160
180
200
220
 
 bearing load
Be
ar
in
g 
Lo
ad
 (N
)
Bearing Speed (rpm)
6
8
10
12
14
16
18
20
 attitude angle
At
tit
ud
e 
An
gl
e 
(d
eg
.)
gridwork = 160x50
clearance = 57 mm
hmin = 6 mm
Fig. 9 The bearing performance (load capacity 
and attitude angle) as the function of bearing 
speed. 
 
0 60 120 180 240 300 360
0.0
0.5
1.0
1.5
2.0
2.5
3.0
3.5
 
 pressure
Fi
lm
 P
re
ss
ur
e 
(b
ar
)
Circumferential Angle (deg.)
gridwork = 160x50
e = 1.61
clearance = 57 mm
speed = 60,000 rpm
load = 150 N
hmin = 7.79 mm
f = 11.96 deg.
0
20
40
60
80
100
120
140
160
180
 film thickness
Fi
lm
 T
hi
ck
ne
ss
 (m
m
)
Fig. 10 The mid-plane (in the direction of 
sliding) air film pressure and the film thickness 
of the air foil bearing. 
 
0 1 2 3 4 5 6 7 8 9
0
2
4
6
8
10
 
E
xe
cu
tio
n 
Ti
m
e 
(s
)
Number of Processor Cores
gridwork = 160x50
execution time
 SPSOR
 RBSOR
0
1
2
3
4
5
speedup
 SPSOR
 RBSOR
Sp
ee
du
p
 
Fig. 11 The performance of the parallel SOR 
methods for the gridwork of 160x50.  
1 2 3 4 5 6 7 8
0
20
40
60
80
100
120
140
160
(3.76)
(4.14)
(4.31)
(2.51)
(2.44)
(2.68)
(1.58)
(1.63)
(1.68)
(1.0)
(1.0)
 
 
Ex
ec
ut
io
n 
Ti
m
e 
(s
)
Number of Processor Cores
SPSOR method
 160x50
 320x100
 480x150
( # ): speedup
(1.0)
 
Fig. 12 The performance of the parallel SPSOR 
method for different sizes of gridwork. 
 
 14
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■  達成目標 
□ 未達成目標（請說明，以 100字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明：本研究提供了一個高效率的平行迭代法，適用於分析撓性表面的氣
體軸承性能，研究內容與成果與計畫預期內容相符。研究成果已順利發表於
一篇 SCI期刊論文及二篇國際研討會論文。另外，一篇 SCI論文投稿中。 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表（請見 SCI論文、國內外研討會論文發表清單） 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用
價值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
本研究提供了一個高效率的平行迭代法，能大幅度的降低計算時間，適
用於本研究在進行箔片氣體軸承分析的過程中，因為箔片的變形會改變軸承
的氣膜間隙，必須多次求解雷諾方程式來獲得收斂的氣膜壓力。本研究提出
的數值阻尼，可以有效的降低求解過程中的數值震盪，並縮短迭代的次數。
採用 OpenMP 語法來撰寫平行程式的優點為程式碼撰寫容易，可以在多核
心的計算平台環境中，有效的利用計算資源。因此，本計畫的研究結果適合
其它潤滑模型的應用及分析，尤其是具有撓性表面的液膜潤滑軸承。關鍵的
步驟為提出數值阻尼的計算方式，除了縮短迭代的次數外亦容許使用較大的
鬆弛係數，使得平行效率能明顯的提高，並因此能提高模擬軸承的操作範
圍，使得傳統的迭代法無法收斂的問題得以解決。 
 
 16
國內學術會議論文發表清單(2008/8-2011/10) 
1. 查國強、王能治、廖建義，能量平衡原理在工具機結構動態參數最佳化中的應用，中國機械工程學
會第二十八屆全國學術研討，2011年12月10-11日。 
2. 查國強、王能治、廖建義，曲軸磨床工作台於不同位置時之動態特性與磨削穩定性分析，中華民國
力學學會第三十五屆全國力學會議，2011年11月18-19日。 
3. 邱志雄、查國強、王能治，運用模態測試技術於機械系統之結構動力改善研究，第十四屆全國機構
與機器設計學術研討會，2011年11月4日。 
4. 張世宏、王能治、黃華志，迭代法應用於雷諾方程式之停止條件的訂定，中國機械工程學會第二十
七屆全國學術研討會，2010年12月10-11日。 
5. 查國強、王能治、廖建義，平面磨床工作台往復行程之動態特性與磨削穩性分析，中國機械工程學
會第二十七屆全國學術研討會，2010年12月10-11日。 
6. 張世宏、王能治、黃華志，半島式油腔構型液靜壓軸承分析，中華民國力學學會第三十三屆全國力
學會議，2009年11月13-14日。 
7. 查國強、朱聖浩、王能治，平面磨床運動方程式驗證與切削點等效參數對動態性能影響，第十二屆
全國機構與機器設計學術研討會，2009年11月6日。 
8. 查國強、王能治、黃信杰，基因演算法於平面磨床集中參數模式之最佳化分析探討，中國機械工程
學會第二十六屆全國學術研討會論文集，2009年11月20-21日。 
9. 查國強、王能治、蔡智明、黃仁明，外圓磨床結構動態特性與替代模式探討，中華民國力學學會第
三十二屆全國力學會議，2008年11月28-29日。 
10. 王能治、詹嘉文、張世宏，應用Cluster OpenMP 於空氣軸承之最佳化分析，中華民國力學學會第三
十二屆全國力學會議，2008年11月28-29日。 
11. 查國強、王能治、蔡智明、黃仁明，利用反應曲面法建構外圓磨床集中質量參數模型結構穩定性預
測模式，第十一屆全國機構與機器設計學術研討會，2008年11月14日。 
 18
率，其使用的收斂條件為今年5月發表於STLE年會的論文成果，為延續性的研究。 
 
二、 與會心得 
    此次大會的口頭發表同時在四個演講廳舉行，中間並穿插Keynote Address在大演講
廳。開幕當天的Plenary Address題目為Tribology in Asia Pacific Region-Past, Present and 
Future，分別由中國、南韓、印度、日本及澳洲五個國家的代表（Profs. J.B. Luo, D-E Kim, 
S.V. Kailas, H. Machida, and G.W. Stachowiak）分別陳述其國內之磨潤研究發展情形，除
了印度外，其它國家在研究上的經費支出均非常驚人，也因此有優異的成果。今年的論
文報告主要內容包括下列磨潤學相關的重要領域：表面微結構，表層鍍膜，機械元件，
引擎，潤滑劑，滾動軸承，奈米潤滑，液膜潤滑，金屬加工，摩擦及磨耗，液靜壓軸承，
軸封，生物磨潤學，添加劑，齒輪，氣體潤滑等。 
     由於研究議題廣泛，筆者參與的主要場次為液膜潤滑，生物磨潤學及氣體潤滑。本
次會議中主持的session為Hydrostatic/Hybrid Bearings（液靜壓/混合潤滑軸承），共有三
位知名學者的研究團隊參加（分別為Profs. M.J. Braun, D. Hargreaves及Y.Y. Zhang），
其中第一位及第三位為此類研討會的常客，另外Prof. Hargreaves為Head of School of 
Engineering Systems （Queensland University of Technology），在會後並觸及是否
有交換學生之議題。此次筆者會議的口頭報告在Gas Lubrication session，報告內容為比
較多種迭代法收的計算效率及其使用之難易度，並具體提出有效率迭代之選用原則。由
於此次的報告為星期三下午（正式晚宴）前的最後幾場，且因報告及討論時間不長，只
有簡短的發問及討論。本論文已於出國前被ASME Journal of Tribology接受，筆者並將以
此論文為基礎，近期的相關研究為迭代法用於求解雷諾方程式的平行計算效率。 
 
三、 建議 
筆者參與國際磨潤學研討會多年，注意到國內相關領域參與的學者人數不多，應是
與國科會補助出國的經費不充裕有關。近年筆者出國亦須由校方資助約三分之一的經
費，否則難以成行。近年來機票價格上揚不少，建議提高補助出席國際會議的經費，並
以歐、美及亞洲等不同區域的研討會來設定不同的補助經費。 
 
 1
計畫編號 NSC 99-2221-E-182-014 
計畫名稱 流體薄膜潤滑模型之平行迭代數值方法研究 
出國人員姓名 
服務機關及職稱 
王能治 
長庚大學 機械系 教授 
會議時間地點 2010/12/5 - 2010/12/9, Perth, Australia 
會議名稱 International Tribology Congress – AsiaTrib 2010 
發表論文題目 
Comparison of Iterative Methods for the Solution of Compressible-Fluid 
Reynolds Equation 
 
 
一  參加會議經過 
    2010年International Tribology Congress於12月5日至9日在澳洲Perth舉行。此會議由
西澳大學(University of Western Australia)主辦，部份發表之論文將由多個磨潤領域知名
期刋（Tribology International, Tribology Letters, Journal of Engineering Tribology及
Tribology Online）邀請投稿並審核，將收錄發表為本次研討會的專刋，本次會議亦有期
刋主編（P.M. Cann, Tribology International，目前為磨潤期刊中SCI-IF排名第一之期刊）
遠自英國與會並主持會議。本次會議因在澳洲舉行，主要参與人員來自中國、韓國、印
度、日本及澳洲，台灣共有三位老師参加。今年會議共有約165篇論文發表，並有海報
競賽。系上吳俊仲老師與本人共同参加此次會議，除了以口頭發表論外，並各主持一小
節的會議。此次會議期間的口頭發表，每篇論文發表及討論的時間為20分鐘，大會並將
所有論文摘要內容收錄於分發的隨身碟中，附贈於報到時領取的資料袋中。大會的最後
一天安排為自費的當地團體旅遊，因筆者的回程行程安排並未參加。 
    筆者此行（交通費、註冊費、生活費）由國科會及長庚大學計畫經費補助，口頭發
表之論文題目為”Comparison of Iterative Methods for the Solution of Compressible-Fluid 
Reynolds Equation”，內容為比較多種常用的迭代法在可壓縮流體雷諾方程式的執行效
率，其使用的收斂條件為今年5月發表於STLE年會的論文成果，為延續性的研究。 
 
二  與會心得 
    此次大會的口頭發表同時在四個演講廳舉行，中間並穿插Keynote Address在大演講
國科會補助計畫衍生研發成果推廣資料表
日期:2011/11/21
國科會補助計畫
計畫名稱: 流體薄膜潤滑模型之平行迭代數值方法研究
計畫主持人: 王能治
計畫編號: 99-2221-E-182-014- 學門領域: 潤滑與磨耗
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
