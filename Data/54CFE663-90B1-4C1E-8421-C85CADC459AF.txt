2 
中文摘要 
在不確定及複雜的製造環境下，存在著許多變數會影響製造系統的不同績
效，如果只針對單一目標來進行排程及派工的規劃，未能充分表達彈性製造系統
應具有的彈性及加工作業的靈活性，亦無法達到多目標績效的要求。本研究提出
以模糊多目標推論為基礎來建構一個動態派工法則。首先找出影響系統績效的變
數，並建立變數及各目標績效的模糊歸屬函數，並經由模擬的資料，建立各派工
法則的模糊規則庫，接著，推論出各派工法則在不同變數的狀態下，對於不同目
標的影響程度，進而找出各派工法則的優先程度，並選擇優先權最佳的派工法
則，提升系統的效率及穩定性。 
關鍵詞：彈性製造系統、派工法則、模糊理論、多目標 
Abstract 
Under the uncertain and complex manufacturing environment, there are some 
variables that affect the different objective performance of the production.  If work 
order scheduling and dispatching are planned only considering one objective 
performance, the flexibility and agility of the flexible manufacturing system can not 
be achieved. In this research, a dynamic dispatching rule based on fuzzy inference for 
multi-objective performance is proposed. First, the variables affecting the system 
performance are identified and the fuzzy membership functions for the variables and 
objectives are established. Then, fuzzy rule database for each dispatching rule is 
constructed from the simulation data. Based on the fuzz rule database, the degree of 
influence on different objectives under different statues of variables is inferred and the 
priority of dispatching rules is decided. The highest priority of dispatching rules is 
selected to improve system performance and stability.  
Keywords: Flexible Manufacturing Systems、 Dispatching Rule、Fuzzy Theory、  
Multi-Objective 
 
1. 前言 
彈性製造系統擁有加工途程彈性之特性，使得傳統的單一途程規劃轉變成多
途程規劃加工背景的程序規劃問題。多途程的彈性製造系統中存在有決策點，需
要決策的機制，決策的問題除考慮各工單的加工順序外，還需考慮機台的選擇問
題，因此增加了生產排程及派工的複雜度，也產生許多問題有待解決。但在彈性
製造系統中，生產排程往往只針對單一目標來做規劃，但這樣的方式無法滿足多
樣的生產績效的需求。而且在彈性製造系統中存在著許多會影響系統績效的變
數，例如工作的負荷或緊急訂單，而不同的變數對於不同目標的績效會有其不同
的影響程度。因此，如果不考慮這些變數對系統的影響，且只針對單一目標來進
4 
 
 
  
   
    
      
   
Lo ading    
Unl oading       
AGV Transporter   
    
IB - Input Buffer   
OB - Out Buffer      
  
    
  
  
Stat ion  
  
   
Station  
Machine 4     
IB  
   
4   
   
O B  
Machine 5    
IB  
   
 5    
O B    
Machine  2    Machine  1    Machine  3    
    
IB  
   
IB  
   
IB  
   
Station  1  
    
Station  3    Station  2    
O B  O  B  O B  
 
圖 1  彈性製造系統環境佈置圖 
 
2.1 環境變數的選定 
考慮的環境變數有緊急訂單( Rush Order)及工作負載量(Workload)。 
1.Workload：代表工單進入系統的間隔時間(arrival interval)，間隔時間越短，
代表系統的負載越重。本研究採用指數分配，其機率密度函數如下： 
0,1)( ≥= − xexf
x
θ
θ
              (1) 
=θ 平均時間(每次) 
以θ值的變動來探討不同間隔時間對於系統不同目標的影響。  
2.Rush order：對於一個系統的生產規劃會造成影響，為了要滿足緊急訂單，
不但會對已經規劃好的生產排程造成混亂，也會影響系統的執行效率。而緊急訂
單可以利用以下的公式來表達： 
di = Ati + K × Tpti                      (2) 
其中 di  為訂單的到期日， Ati  為訂單的到達時間及 Tpti 為訂單的加工時間。
本研究考量緊急訂單在此決策對系統的影響，探討不同 k 值對不同目標的影響。 
 
2.2 決策點的派工法則 
    根據 Chen 等人[6]在工單加工順序常用的派工法則，如表 1 所示。在加工機
台的決定方面根據 O'Keefe 等人[9]常用的派工法則，如表 2 所示。本研究以表 1
及表 2 分別為工單加工順序及機台決定的派工法則選用的依據。 
 
表 1 工單順序之派工法則 
Symbol of 
dispatching 
Description 
6 
中等(Medium，M) (c)差(Bad，B) 
 
3.3 模糊規則庫之建構 
當變數及目標的歸屬函數建構完成之後，接著下來就是要進行模糊規則庫的
建構，也就是模糊推理句的建構” IF….，Then….”。因為本研究為探討多重目標，
針對彈性製造系統的兩個決策，研究在不同的變數狀態下，對於目標值的影響，
進而利用模糊推論建構各決策派工法則之模糊規則資料庫，接著，根據不同的變
數狀態，選擇最適合的派工法則。圖 2 為決策系統的架構圖。 
由於此規則庫過於龐大，必須精簡讓系統更有效率。本研究會利用模擬出來
的數據來刪除一些不合理、無作用的模糊規則，決策的模糊推論舉例如下： 
IF Workload is High AND Rush Order is Low THEN Mean flow time is Bad AND 
Mean Tardiness is Bad AND Mean earliness is Bad 
最後採取重心法將推論出來的模糊值解模糊化。 
 
3.4 派工法則之優先權選擇公式 
採用正規化的方式，將各目標的模糊績效值落在 0~1，選擇最小的值的派工
策略來進行派工，以達多目標的績效值。多目標模糊績效值可由公式(3)表示，
滿足 xi 最小值為選擇之派工策略。 
 
圖 2 決策系統之架構圖 
Xi = Wααi +Wββi +Wγγi                 (3) 
其中 Wα、Wβ 、Wγ 分別為 Mean FlowTime、Mean Tardiness、Mean Earliness 的
權重值，且  
Wα + Wβ + Wγ = 1 
αi = Fi / max(F1……Fi)           (4) 
βi = Ti / max(T1……Ti)           (5) 
γi = Ei / max(E1……Ei)           (6) 
利用模糊多目標派工法則來選擇最適合的派工策略，並與其他 12 種派工策
8 
派工法的多目標績效都為最佳；而在參數組合 12、13、15 時，多目標績效次佳。 
  
 
表 4 參數組合一多重目標績效值 
 
表 5  參數組合二多重目標績效模糊值 
 
 
5 結論 
 
本研究提出的動態模糊派工法則中，可以依據不同的環境變數的狀態來選擇
最適合的派工策略。模糊多目標派工法則與其他派工策略相比，多重目標的績效
值績效比較好。同時，本研究設定不同的環境變數參數合，來探討模糊多目標派
工法則對於不同環境狀態的偵測能力及對目標值的變異程度。結果顯示，模糊動
態派工法則的多重目標績效值，在不同的環境狀態下仍然為較佳，這表示對於環
境的改變，模糊多目標派工法則有能力可以去偵測現在的環境狀態，並給予其適
合的派工策略。當環境變數的狀態改變對於目標值影響程度極大時，模糊多目標
派工法則有很強的判斷能力可以選擇最適合的派工法則。
參考文獻 
[1] Abou-Ali, M.G., and Shouman, M.A., “Effect of dynamic and static dispatching strategies 
出席國際學術會議心得報告 
 
 
 
 
 
 
計畫編號 NSC 97－2221－E－224－039 
計畫名稱 以模糊多目標理論為基礎之彈性製造系統動態派工策略 
出國人員姓名 
服務機關及職稱 
呂明山 
國立雲林科技大學工業管理系 副教授 
會議時間地點 2009 年 7 月 13 日 ~2009 年 7 月 16 日 
美國，奧蘭多 
會議名稱 (中文) 自動化、機器人及控制系統國際研討會 
(英文)  International Conference on Automation, 
Robotics and Control Systems (ARCS-09) 
發表論文題目 (中文) 整合 OPN 及 UML於靈巧製造控制系統的發展 
(英文)  The Integrated OPN and UML Approach for Developing 
an Agile Manufacturing Control System 
• Alarming and 
fault diagnosis 
systems  
• Automatic control 
of chemical 
processes  
• Automotive 
control systems 
and autonomous 
vehicles  
• Autonomous 
traffic and 
transport systems 
• Biologically 
inspired control 
techniques  
• Biomedical 
control systems  
• Biomedical 
instrumentation 
and applications 
• Biometrics  
• CAD/CAM/CIM  
• Complex systems  
• Control analysis 
of social and 
human systems  
• Control 
applications  
• Control 
engineering 
education  
systems  
• E -automation 
and e-factory  
• E -business 
integration  
• E -diagnostics 
and e-
maintenance  
• Embedded 
control 
systems.  
• Equipment and 
process 
technology for 
automation  
• Factory 
modeling and 
simulation  
• Fuzzy systems  
• Genetic 
algorithms  
• Home, 
laboratory and 
service 
automation  
• Human centered 
systems  
• Human-computer 
interactions  
• Hybrid systems 
• Identification 
and estimation 
ARCS113 The Integrated OPN and UML Approach for Developing an Agile 
Manufacturing Control System   
Ming-Shan Lu, Lu-Kuo Tseng  
ARCS115  Experienced Outcomes from the Improvements made to the USAR robot    
R. Stopforth, G. Bright, R. Harley  
  
---10-10.30am break. Limited amount of refreshments will be available---  
  
10.30-12.30pm  (ARCS Session 2) Session chairs: Bojan Jakimovski (arc143) 
University Lübeck  
Soo-Hwan Park (arcs 137) Seoul National University  
ARCS137 Middleware-level Techniques to Solve the Conflict Problem between 
Multiple Tasks on Robotics System    
Soo-Hwan Park, Kyoung-Soo We,  Chang-Gun Lee  
Arcs143 Self-reconfiguring hexapod robot OSCAR using organically inspired 
approaches and innovative robot leg amputation mechanism    
Bojan Jakimovski, Benjamin Meyer, Erik Maehle  
Arcs162 Trajectory planning to autonomous robotic in unstructured environment by 
PCA-Neurofuzzy method    
Diogo F. L. Filho, Eduardo L.L. Cabral   
Arcs182 Lyapunov-Based Optimal Quantum Pure State Control Strategy    
Shuang Cong, Yuan-yuan Zhang   
Arcs206 Force/Vision-Guided Grasping for an Autonomous Dual-Arm Mobile 
Manipulator Crew Assistant for Space Exploration Missions    
E. Zereik, A. Sorbara, G. Casalino, F. Didot  
Arcs209 Modeling & Attitude Stabilization of a Coaxial Double Rotor Micro Flying 
Robot   
Yongheng Zhang, Nasser Houshangi  
  
--12.30-1.30pm lunch break (make your own arrangements for lunch)---  
  
1.30-3.30pm  (ARCS Session 3)  
ARCS108  Modeling and Control of Underactuated Redundant Manipulators   
Ashish Singla, Bhaskar Dasgupta,  Ashish Tewari  
Arcs212 A Self-Organizing Autonomous Prediction System for Controlling Mobile 
Robots  
Josh R. de Leeuw, Kenneth R. Livingston  
Arcs224 Analytical Structure and Stability Analysis of a Fuzzy Two-Term 
Controller with Multi-Fuzzy Sets    
Arpita Ghosh, T. K. Das, S. K. Mandal, B. M. Mohan   
Arcs227 Strict Lyapunov Functions for Nonlinear Discrete-time Systems   
Fengjun Tang, Cui Guozhong, Jiao Yulan, Wang Ailan  
Arcs257 System Modelling and PID Control System of Four Rotor Helicopter    
Saurav Kumar Singh, Dipti Ranjan Biswal, Amit Kumar, Sanjay Kumar Kar  
  
---3.30-4pm break. Limited amount of refreshments will be available---  
  
4-5pm  (ARCS Session 4) Session chairs: Bastos-Filho (arcs127) Universidade 
Federal do Espírito Santo  
Arcs127 Controller Dynamic Switching for Robotic Wheelchair Navigation    
設計，容易完成系統新增、修改及重組的需求，因此，有利於靈巧製造控制系統目標的達成; 
(3) OPN及UML的轉換規則的建立可以縮短系統發展的時間；(4) 整合OPN及UML的技術可同時
用於動態行為的分析及軟體模式的建立。 
 
自動化、機器人及控制系統相關研究已經是先進國家非常重視的領先議題，透過參加此
次 ARCS 研討會，筆者細讀相關研究論文，從研究議題，理論架構，直到實例的驗證，都有更
嚴謹與深入之研究，期望能在此領域有更卓越的貢獻，未來在著名的期刊更能發表相關的研
究成果，同時，也期待國內相關研究能應加緊腳步與世界水準並駕齊驅。 
in the control logic. In addition, a number of 
transformation rules have been developed to convert the 
specification of the OPN model into the code of rule-
based control software. Liu et al. [7] have proposed an 
extended objected-oriented Petri Net (EOPN) to manage 
the complexity involved in the modeling of semiconductor 
wafer fabrication systems (SWFSs). The EOPN models 
are constructed in a hierarchical way to make the system 
modes more concise and authentic.  
  A manufacturing system consists of a number of 
physical pieces or types of equipment and each of these 
physical pieces or types of equipment can be represented 
by an object. Each of objects has its own behavior 
characterized by the attributes and operations involved. 
Thus, the object-oriented technology is widely used in the 
development of manufacturing information or control 
systems. The object-oriented modeling provides a natural 
one-to-one correspondence between components in a 
manufacturing system and software objects that represent 
them. Software models define these objects and describe 
the relationships and interactions between them. The 
software developed based on object-oriented technology 
leads to its being reusable, easy to maintain and modular. 
With these characteristics, the agility of manufacturing 
systems can be achieved [8].  
Recent evolution on object-oriented design and 
analysis in software modeling has promoted the 
development of unified modeling language (UML) [9]. 
The UML has been approved by the object management 
group (OMG) and has become an industrial standard 
modeling tool in all aspects of software development. In 
the application of UML to modeling manufacturing 
control systems, Young et al. [10] have used the UML to 
create a model of an agile manufacturing control system. 
Their approach enables a single tool to support a modular 
design philosophy including encompassing network 
architecture, data mapping, control and diagnostic system 
design. An objected-based equipment controller (OBEC) 
for equipment communications with the manufacturing 
execution system (MES) was developed by Cheng and 
Teng [11]. The UML is adopted as the major tool for 
analyzing and developing the controller and a die bonder 
is given as an example to illustrate the development 
process. Due to the needs for the dynamic behavior 
verification of system models, some research integrates 
PNs into the UML to analyze and verify the logic 
correctness of the model. Miyagi et al. [12] have 
developed a modeling approach for hybrid supervisory 
systems using UML and PNs. The PN is used in the 
behavior modeling of the class and the process modeling 
of the use case. Jeng and Lu [13] have conducted the 
conversion rules between the sequence diagram and PNs 
for system analysis and simulation. An example of 
semiconductor manufacturing is illustrated the proposed 
methodology. A systematic design and methodology for 
management and control of information flow in CIM 
systems using UML and PNs has been developed by Lin 
et al. [14]. The scenarios of information flow in CIM 
systems are described by using the UML activity diagrams 
and converted into PNs for analysis.  
In this research, an efficient and systematic 
methodology for developing an object-oriented agile 
manufacturing control system is proposed. The proposed 
development process is divided into three stages: 1) 
system analysis and verification, 2) software development 
and, 3) system implementation. The OPN and UML are 
integrated into the corresponding stages based on their 
characteristics. First, an OPN model of the control system 
is constructed and the control logic is analyzed and 
verified. After desirable and correct control logics are 
guaranteed, the development process proceeds to the 
software development stage. The UML is used to describe 
the software model based on the control logics specified 
in the OPN model. In order to develop the system rapidly 
and efficiently, the transformation rules between the OPN 
and sequence diagram are established. In addition, the 
attributes and operations for each object are also defined 
directly from the OPN model. The results of the integrated 
OPN/UML systematically lead to object-oriented software 
design for the manufacture control system. 
 
2. The integrated OPN/ UML approach 
 
The proposed integrated OPN/UML for developing 
objected-oriented manufacture control systems includes 
three stages: 1) system analysis and verification, 2) 
software development and, 3) system implementation. The 
dynamic behavior of the system includes the interaction 
behavior between the objects and the reaction behavior 
inside the objects. In the behavior analysis and 
verification stage, the OPN is used to model these 
behaviors, and the properties of PN such as safeness, 
liveness, conservativeness, and reversibility are analyzed. 
After a desirable and correct OPN model is guaranteed, it 
is transferred into the software development stage. The 
objects, including attributes and operations, and sequence 
diagrams are developed to represent the behavior of the 
message communication and collaborations between the 
objects in the control system. The final stage is the system 
implementation. Based on the UML model, the engineers 
can write their own control system software by using 
objected-oriented programming languages such as C or 
Java. The detailed approaches are described as the 
following sections. 
 
3. System analysis and verification stage 
 
In general, a PN consists of four elements: place 
(circle), transition (bar), directed arc (arrow) and token 
 Figure 2: A typical external dynamic behavior of PN 
objects 
 
Figure 3: A typical internal dynamic behavior of an 
equipment object  
 
4. Software development stage 
 
After a desirable and correct OPN model is 
guaranteed, it is transferred into the control software 
development stage. In the object-oriented software, each 
object and its attributes and operations needs to be defined. 
In addition, the behavior of the message communication 
and collaborations between the objects also needs to be 
specified. The UML sequence diagram is used to 
represent the sequence of messages that are passed 
between objects in a defined interaction.  
 
4.1 The attributes and operations of a UML 
object 
 
The dynamic behavior of an object is described in 
the OPN model of a PN object. Thus, the attributes and 
operations related to the object behaviors can be specified 
from its OPN model. In this research, the transformation 
rules between the OPN model of a PN object and its 
attributes and operations in a UML object are conducted. 
The transformation rules are defined as follows:  
(1) The state places in the PN object represent the 
statuses of the object. Thus, the state places are 
mapped into the domains of the state attribute of the 
object.  
(2) The transitions in the PN object represent the actions 
of the object. Thus, the transitions are mapped into 
the operations of the object. 
(3) The message places for receiving 
materials/information or control messages are 
mapped into the operations for the receiving 
messages that are sent from other objects. 
(4) The message places for receiving 
materials/information or control messages are 
additionally mapped into the domains of message 
attributes of the object. The message attributes 
describe the contents of messages sent from other 
objects.  
For example, the OPN model of an equipment object 
i in Figure 3 has two state places (Pi and Pi+1), one 
message place (MIi-1) for receiving a material message 
and another message place (CIi-1) for receiving a control 
message. By using the transformation rules 1 and 4, one 
can find two state attributes and two message attributes. 
The domains of the state attribute are idle (Pi) and 
processing (Pi+1). The domains of the message attribute 
from the sending message object to the object i are 
material ready (MIi-1) and control event (CIi-1). There 
are two transitions (Ti and Ti+1), one message place (MIi-
1) for receiving the material message and one message 
place (CIi-1) for receiving the control message. By using 
the transformation rules 2 and 3, four operations for the 
object i are obtained. Two operations of the object i are 
start_ operating _Ti() and stop_operating_Ti+1(). Two 
operations for receiving messages are 
receiving_material__MIi-1() and receiving_control CIi-
1().The attributes and operations transferred from the 
OPN model of a PN object is shown in Figure 4. 
 
 
 
Figure 4: The attributes and operations transferred from 
the OPN model of a PN object 
conveyor, robot, assembly machine, packaging machine 
and output conveyor, respectively. The five equipment 
resources are defined as five objects in the OPN. The 
OPN for the assembly and packaging system is shown in 
Figure 7. The interpretations of message places are listed 
in Table 1. The OPN models for each equipment object 
are shown in Figure 8.  Figure 8 (a), (b), (c), (d), (e) are 
the OPN models of the input conveyor, output conveyor, 
assembly machine, packaging machine, and robot, 
respectively. Each object has the similar behavior 
described in section 3.2. The interpretations of places and 
transitions are listed in Table 2. 
 
Robot 
Input
Conveyor
Assembly
Machine
Packaging
Machine
Output
Conveyor
MI1-1
MI2-1
MO1-1
G12-1
MI2-3
CO2-3
MI2-2
MO2-3
MO2-2
MO2-1
CO2-2
CO2-1
CI2-1 CI2-2
G24-1
G23-1
G25-1
G25-2
G23-2
G24-2
MI3-1
CI3-1
CO3-1
MO3-1
G32-1
G32-2
MI4-1
MO4-1
CO4-1
CI4-1
MI5-1
MO5-1
CI5-1
G42-1
G42-2
 
Figure 7: The OPN model for the assembly and 
packaging system 
 
MI1-1 MO1-1P1-2
P1-1
T1-1 T1-2 MI5-1 MO5-1P5-2
P5-1
T5-1 T5-2
CI5-1
(a) (b)
MI3-1 MO3-1P3-2
P3-1
T3-1 T3-2
CI3-1
CO3-1
MI4-1 MO4-1P4-2
P4-1
T4-1 T4-2
CI4-1
CO4-1
(c) (d)
P2-1
T2-1
CI2-2
CO2-1
CI2-1
CO2-2CO2-3
T2-2
T2-3
T2-5
T2-4
T2-6
P2-2
P2-3
P2-4
MI2-1
MI2-3
MI2-2
MO2-1
MO2-2
MO2-3
(e)
 
Figure 8: The OPN models for each equipment object   
 
 
Table 1: The interpretations of message places and gates 
 
Type Interpretation 
MI1-1 Receiving part message by input 
conveyor 
MI2-1 Receiving part message by robot  
MI2-2 Receiving product message by robot  
MI2-3 Receiving box message by robot  
MI3-1 Receiving part message by assembly 
machine 
MI4-1 Receiving product message by 
packaging machine 
MI5-1 Receiving box message by output 
conveyor 
MO1-1 Sending part message by input 
conveyor 
MO2-1 Sending part message by robot  
MO2-2 Sending product message by robot  
MO2-3 Sending box message by robot 
MO3-1 Sending product message by 
assembly machine 
MO4-1 Sending box message by packaging 
machine 
MO5-1 Sending box message by output 
conveyor 
CI2-1 Receiving completing assembly 
message by robot 
CI2-2 Receiving completing packaging 
message by robot 
CI3-1 Receiving completing movement to 
assembly machine message by 
assembly machine 
CI4-1 Receiving completing movement to 
packaging machine message by 
packaging machine 
CI5-1 Receiving completing movement to 
output conveyor message by output 
conveyor 
CO2-1 Sending completing movement to 
assembly machine message by robot 
CO2-2 Sending completing movement to 
packaging machine message by 
robot  
CO2-3 Sending completing movement to 
output conveyor message by robot 
CO3-1 Sending completing assembly 
message by assembly machine 
CO4-1 Sending completing packaging 
message by package machine 
 
 
 
