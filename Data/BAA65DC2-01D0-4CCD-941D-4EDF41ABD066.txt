Abstract 
 
Multiple sequence alignment, known as NP-complete problem, is among the most important and 
challenging tasks in computational biology. For multiple sequence alignment, it is difficult to solve 
this type of problems directly and always results in exponential complexity. In this project, a novel 
algorithm of genetic algorithm with ant colony optimization for multiple sequence alignment is 
presented. The proposed GA-ACO algorithm is to enhance the performance of genetic algorithm (GA) 
by incorporating local search, ant colony optimization (ACO), for multiple sequence alignment. In the 
proposed GA-ACO algorithm, genetic algorithm is conducted to provide the diversity of alignments. 
Thereafter, ant colony optimization is performed to move out of local optima. From simulation results, 
it is shown that the proposed GA-ACO algorithm has superior performance when compared to other 
existing algorithms.  
Keywords: Multiple Sequence Alignment, Genetic Algorithm, Ant Colony Optimization, Hybrid 
Search, Local Search. 
 
中文摘要 
 
本計劃提供蟻群-基因演算法的混合式系統來協助分子生物學家去搜尋與分析多重序列排比
資料，多重序列排比問題乃是NP-complete 類型問題，此類型問題不易求得最佳的解。在這個
計劃中,我們提出一個「智慧型混合式演算法於多重序列排比之應用」。基本上,我們所提出的
演算法是在基因演算法中加入蟻群演算法(ant colony optimization)當區域搜尋(local 
search)來提升基因演算法的性能。在這個計劃中，基因演算法可提供多方向搜尋最佳解的方
法。而蟻群演算法當區域搜尋方法可在可行解的鄰近地區找到更好的解。由實驗的結果可證明
本計劃能獲得較好的性能。 
 
關鍵字 : 混合式系統, 多重序列排比, 基因演算法, 區域搜尋法, 蟻群演算法 
 
1 Introduction 
Multiple sequence alignment (MSA) is an essential tool for analyzing biological sequences. It is 
one of the most important and challenging tasks in computational biology because the time complexity 
for solving MSA grows exponentially with the size of the considered problem [1~3]. In general, 
heuristics offer more practical solutions but usually produce quasi-optimal alignment [4,5]. The 
progressive approach is the most commonly used heuristic method by gradually aligning the closest 
pair to build MSA [6~8]. Its main disadvantage is the found alignments that may by trapped in local 
optima, which stems from the greedy nature of this algorithm. This means that if mistakes are made in 
intermediate alignments, they cannot be corrected later when more sequences are added into the 
alignment process. Furthermore, there is no objective function to evaluate the performance for multiple 
sequence alignment. Another approach is to use an extension of dynamic programming for 
simultaneously aligning multiple sequences, such as Carrillo-Lipman algorithm [9], MSA [10], DCA 
set of randomly selected chromosomes as the initial population that encodes a set of possible solutions. 
In GA, variables of a problem are represented as genes in a chromosome, and the chromosomes are 
evaluated according to their fitness values using some measures of profit or utility that we want to 
optimize. Two genetic operators, crossover and mutation, alter the composition of genes to create new 
chromosomes called offspring. The selection operator is an artificial version of natural selection, a 
Darwinian survival of the fittest among populations, to create populations from generation to 
generation, and chromosomes with better fitness values have higher probabilities of being selected in 
the next generation. After several generations, GA can converge to the best solution.  
 
2.2 Ant colony optimization 
ACO algorithms have also widely used as a new cooperative search algorithm in optimization 
problems [36~38]. ACO algorithms are a class of algorithms inspired by the observation of real ants. 
Ants are capable of exploring and exploiting pheromone information, which have been left on the 
ground when they traversed. They then can choose routes based on the amount of pheromone. While 
building the solutions, each artificial ant collects pheromone information on the problem 
characteristics and uses this information to modify the representation of the problem, as seen by the 
other artificial ants [36]. The larger amount of pheromone is left on a route, the greater is the 
probability of selecting the route by artificial ants. In ACO, artificial ants find solutions starting from a 
start node and moving to feasible neighbor nodes in the process of ants_generation_and_activity. 
During the process, information collected by artificial ants is stored in the so-called pheromone trails. 
In the process, artificial ants can release pheromone while building the solution (online step-by-step) 
or while the solution is built (online delayed). An ant-decision rule, made up of the pheromone and 
heuristic information, governs artificial ants to search toward neighbor nodes stochastically. 
Pheromone_evaporation is a process of decreasing the intensities of pheromone trails over time. This 
process is used to avoid locally convergence and to explore more search space. Based on this property, 
we use ACO as local search in the proposed GA-ACO algorithm. 
3.  The proposed GA-ACO algorithm 
The procedure of the proposed GA-ACO algorithm is to apply initialization, sexual reproduction 
operators, mutation operators, fitness evaluation, selection operator, and ACO for multiple sequence 
alignment. These above procedures are iterated until a pre-specified termination criterion is satisfied. 
When the initial parent alignments are randomly generated, these alignment matrices are optimized by 
using the proposed algorithm. A population of parent alignments is maintained. Mutation and sexual 
reproduction operators are used to produce offspring alignments. The function of sexual reproduction 
operators is like the crossover operator in genetic algorithms. Sexual reproduction operators allow two 
alignments to exchange their information with each other and can produce one offspring alignment or 
two offspring alignments [20]. Mutation operators provide possible variation on the alignments. After 
offspring alignments are generated via the mutation and sexual reproduction operators, the original 
parent alignments and all offspring alignments are put into a selection pool. The selection operator is 
employed to determine which alignments are suitable to survive and which alignments are culled in 
the next generation. Moreover, ACO is applied to the best alignment to escape from the local optima 
in each generation. In this section, we introduce all operators used in the proposed GA-ACO algorithm.  
 
3.1 Representation 
 
It is considered that there are k sequences to be aligned, and these sequences are generated with 
various lengths, say, from l1 to lk. In our approach, parent alignments are presented as a matrix where 
3.5 Sexual reproduction operators 
The sexual reproduction operators include singlepoint operator, recombinematchcolumn operator 
[20], and uniformexchangeblock operator. The singlepoint operator produces two offspring alignments 
through exchanging information in parent alignments. The parent 1 alignment is cut at some randomly 
chosen positions, and parent 2 alignment is also tailored at the same ordered base position for each 
sequence. The left parts of both parent alignments are exchanged for keeping the original sequence 
base order, if there is a single cutting point in both parent alignments. To do above steps, extra spaces 
may be inserted into the junction points. The recombinematchcolumns operator tries to create an 
offspring alignment with match columns by swapping blocks and inserting spaces into the junction 
points [20]. The uniformexchangeblock operator is to map the match columns that are consistent in 
parent alignments. Match columns are said to be consistent in parent alignments, if they contain the 
same ordered base. We randomly choose two consistent match columns as the two cutting points, and 
then blocks between two consistent match columns can be directly swapped [15].  
 
3.6 Mutation operators 
 
The mutation operators perform modification to provide possible variation for the offspring 
alignments. The mutation operators are classified into three categories: the space block shuffle 
operators, the base symbol block shuffle operators, and the heuristic operators. The difference between 
the space block shuffle operators and the base symbol block shuffle operators is that the block to be 
shuffled is different. The former operators shuffle the space blocks and the later operators shuffle the 
symbol base block. Both types of mutation operators are used in providing variety for offspring 
alignments. The heuristic operators perform modifications in a rather smart and subtle manner, and 
have the power of searching higher fitness values. 
 
3.7 Ant colony optimization as local search 
 
In this paper, we use ACO embedded into GA as local search to enhance the search performance. It 
is noted that a sliding-window (N) is used to detect mismatch blocks [8], and then ACO is used to 
ameliorate these poorly aligned regions. When the best alignment has been found in each generation, 
the pheromone trail update rule for sequence mi ( 1, , 1i k= −" ) and mj ( 1, ,j i k= + " ) is performed 
as: 
τijl(t+1) =(1- ρ)τijl(t) + ρ Δτij(t)     1 l N≤ ≤  (3) 
where 0<ρ 1 is a parameter governing the pheromone decay process, l is the position of residue, Δτij(t) 
=
≤
1
1 1
1
1 1
* (
*
k k
ij ij
i j i
k k
ij
i j i
W Score A
W Len
−
= = +
−
= = +
∑ ∑
∑∑
)
 then Wij is the percent identity between two aligned sequences mi and mj, Aij is 
the pairwise projection of sequence mi and mj from the multiple sequence alignment, Score(Aij) is the 
number of aligned pairs of residues that are shared between Aij and the library, and Len is the length 
of this alignment [39]. The global best alignment is defined as the alignment with best fitness value 
found from the beginning of generation and set as pairwise library [39]. In the ant’s generation and 
 
5. Conclusions 
 
Most genetic algorithms have focused on genetic operators, crossover and mutation operators, for 
multiple sequence alignment. In this paper, we present a novel algorithm of genetic algorithm with ant 
colony optimization for multiple sequence alignment. In the proposed GA-ACO algorithm, ACO as 
local search is embedded into GA to escape from local optima and ameliorate the search performance. 
From simulation results, it is shown that the proposed algorithm can improve search performance and 
outperform other existing algorithms. 
 
References 
[1] B. Alberts, D. Bray, J. Lewis, M. Raff, K. Roberts, and J. Watson, Molecular Biology of the Cell 
(Garland Publishing, Inc, 1994). 
[2] T. Jiang and L. Wang, On the complexity of multiple sequence alignment, Journal of 
Computational Biology, 1 (1994) 337-378. 
[3] J. D. Thompson, J. C. Thierry, and O. Poch, RASCAL: rapid scanning and correction of multiple 
sequence alignments, Bioinformatics, 19 (9) (2003) 1155-1162. 
[4] M. A. McClure, T. K. Vasi, and W. M. Fitch, Comparative analysis of multiple protein sequence 
alignment methods, Molecular Biology and Evolution, 11 (4) (1994) 571-592. 
[5] J. D. Thompson, F. Plewniak, and O. Poch, A comprehensive comparison of multiple sequence 
alignment programs, Nucleic Acids Research, 27 (1999) 2682-2690. 
[6] D. F. Feng and R. F. Doolittle, Progressive sequence alignment as a prerequisite to correct 
phylogenetic trees, Journal of Molecular Evolution, 25 (1987) 351-360. 
[7] J. D. Thompson, D. G. Higgins, and T. J. Gibson, CLUSTAL W: improving the sensitivity of 
progressive multiple sequence alignment through sequence weighting, position-specific gap 
penalties and weight matrix choice, Nucleic Acids Research, 22 (1994) 4673-4680. 
[8] Y. Wang and K.-B. Li, An adaptive and iterative algorithm for refining multiple sequence 
alignment, Computational Biology and Chemistry, 28 (2004) 141-148. 
[9] H. Carrillo and D. J. Lipman, The multiple sequence alignment problem in biology, SIAM J. Appl. 
Math, 48 (1998) 1073-1082. 
[10] D. J. Lipman, S. F. Altschul, and J. D. Kececioglu, A tool for multiple sequence alignment, 
Proceedings of National Academy of Science USA, 86 (1998) 4412-4415. 
[11] J. Stoye, V. Moulton, and A. W. Dress, DCA: an efficient implementation of the divide-and-
conquer approach to simultaneous multiple sequence alignment, Computer Applications in the 
Biosciences, 13 (6) (1997) 625-626. 
[12] J. Stoye, Multiple sequence alignment with the divide-and-conquer method, Gene, 211 (2) (1998) 
45-56. 
[13] E. W. Myers and W. Miller, Multiple sequence alignment using simulated annealing, Computer 
Applications in the Biosciences, 4 (1) (1988) 11-17. 
[14] M. Isokawa, M. Wayama, and T. Shimizu, Multiple sequence alignment using a genetic algorithm, 
Genome Informatics, 7 (1996) 176-177. 
[15] C. Notredame and D. G. Higgins, SAGA: sequence alignment by genetic algorithm, Nucleic 
Acids Research, 24 (8) (1996) 1515-1524. 
[16] C. Notredame, E. A. O’Brien, and D. G. Higgins, Raga: RNA sequence alignment by genetic 
algorithm, Nucleic Acids Research, 25 (22) (1997) 4570-4580. 
[17] C. Zhang and A. K. C. Wong, A genetic algorithm for multiple molecular sequence alignment, 
Computer Applications in the Biosciences, 13 (6) (1997) 565-581. 
[40] Jorng-Tzong Horng, Ching-Mei Lin, Bing-He Yang, and Cheng-Yan Kao, “A Genetic Algorithm 
for Multiple Sequence Alignment”, Proceedings of the GCB 2001. 
 
計畫成果自評 
 
本研究內容與原研究內容相同，完成的工作項目為： 
1. 先建立基因演算法及蟻群演運算方法，並分析其特性。 
2. 以多重序列排比的問題分析混合式演算法之效能。 
3. 找出一些例子來驗證前列步驟的正確性。 
4. 相關研究成果發表於 Applied Soft Computing Journal 上。 
本計畫可使從事本研究之人員獲得多方面的整體訓練計畫及下列具體成果： 
1. 本研究完成後，可使國人在多重序列排比問題的研究更上一層樓。 
 
 
ID Number of 
Sequences 
Mean Sequences Length 
(min , max) 
Table 1: List of Data sets 
Similarity 
D1 10 212 (211 , 212) 0.9340 
D2 8 457 (457 , 457) 0.9825 
D3 21 122 (122 , 122) 0.8934 
D4 21 334 (324 , 348) 0.2969 
PD1 4 199 (186 , 208) 0.2931 
PD2 6 493 (491 , 498) 0.5691 
PD3 10 348 (337 , 352) 0.5057 
PD4 15 151 (145 , 163) 0.1726 
 
 
 
 
ID The proposed 
GA-ACO 
algorithm 
ClustalW Genetic 
algorithm 
without ACO as 
local search 
 
Central-star 
 
Table 2: The comparison of the proposed algorithm, ClustalW, Genetic algorithm without ACO,  
Central-star algorithm, and Horng’s genetic algorithm 
Horng’s genetic algorithm [40]
D1 18627 18627 18627 18627 18627 
D2 25343 25343 25343 25343 25343 
D3 47889 47889 47889 47889 47889 
D4 84394 81769 81769 81760 81769 
PD1 12585 12418 12481 12273 12418 
PD2 89775 89634 89693 89388 89634 
PD3 193823 193632 193625 192969 193632 
PD4 166982 161654 166135 160059 166573 
 
 
 
 
16、 智慧傳輸系統。  
17、 模糊神經網路。 
18、 控制理論及系統應用。 
19、 Microelectronics & Photonics。 
20、 圖形分類與分群技術。 
21、 Digital Circuits & System。 
22、 網站與網路科技與服務。 
23、 Nano-CMOS Technology and Nano Electronics I。 
24、 Nano-CMOS Technology and Nano Electronics II 
25、 軟式計算與機器學習。 
26、 Computer Architecyure & VLSI。 
27、 資料通訊與網路連結。 
28、 RFID & Sensor Networks。 
29、 Life Science and Image Processing。 
30、 Microwave Techniques and Circuits。 
31、 Power System, Power Electronics and Drives。 
32、 Multimedia Computing。 
33、 Information Theory。 
34、 Pattern Recognition & Image Processing。 
35、 資料庫系統與資料管理。 
36、 無線網路通訊控制。 
37、 Antennas & Microwave Techniques。 
38、 Real-Time & Embadded System。 
39、 Security and Privacy。 
40、 Signal Processing。 
41、 Computer Intelligence & Intelligent System。 
 
二、與會心得 
 
此外本人也在這次會議中，亦發表一篇有關於基因粹取與分辨卵巢癌微陣列資料 
(“Gene Extraction and Identification Tumor/Cancer for Microarray Data of Ovarian Cancer”)
的研究論文(如附件)。 
 
此次本人很榮幸的獲得行政院國家科學委員會的補助(補助編號：NSC 94-2213-E-211 
-013)，來參加由 IEEE 所舉行的國際會議。會中除了學習有關上列之各項主題的新研究
方向，更幫助我提昇神經網路、模糊系統與生物資訊的研究能力，期許自己能藉由此次
的學習可在下年度的行政院國家科學委員會的計畫中提出一個更新的研究計畫。最後作
者在此深深的感謝行政院國家科學委員會對此次行程的補助。 
 
 
 
 
 
 
specific markers, but the time complexity is rather high due to genomic expression with high 
dimension [2]. Furthermore, no convincing new marker has been identified. In this paper, the hybrid 
algorithm based on genetic algorithm (GA) and support vector machine (SVM) are applied to 
extract genes and verify OVT and OVCA. It might find new marker that can explain or clarify how 
ovarian cancer is developing.  
The rest of the paper is organized as follows: Section 2 will review important methods needed 
for the proposed approach. In Section 3, we will present the proposed approach for microarray data 
of ovarian cancer. The simulation results will presented in Section 4. Section 5 contains conclusions 
and future research directions.  
 
2. The Brief Description of GA and SVM 
 
GA and SVM are kernel methods for the proposed approach. A brief description for both 
methods is presented in this section. GA is a general population based search methodology. It starts 
with a set of randomly selected chromosomes as the initial population that encodes a set of possible 
solutions [12~15]. In GA, variables of a problem are represented as genes in a chromosome, and the 
chromosomes are evaluated according to their fitness using some measures of profit or utility that 
we want to optimize. The selection operator is an artificial version of natural selection, a Darwinian 
survival of the fittest among populations, to create populations from generation to generation. 
Thereafter, chromosomes with better fitness have higher probabilities of being selected in the next 
generation. The genetic operators of crossover and mutation alter the composition of genes to create 
new chromosomes called offspring. Offspring replaces the old population using the elitism or 
diversity replacement strategy. The above evolutionary process is repeated until termination 
condition is satisfied. 
SVM is a new technique originally proposed by Vapnik and co-workers, and successively 
applied to many fields [16]. We will briefly describe the procedure for SVM technique. Let (xi, yi), 
 be a set of training examples, where m is the number of training sample data. For each 
sample data, it must conform to the following: 
1 i m≤ ≤ ,
n
ix R∈  and  { 1,  1}iy ∈ − +  
where n is the number of dimensions of input data. The objective of SVM is to find an optimal 
separating hyper-plane with the maximum margin (w) and a real value b for classification of data. 
To do so, we have to solve the following quadratic programming problem: 
,
1 
2
T
w b
Min w w
                                                 
Subject to:  
( ) 1,  1,  ..., .i iy w x b i m⋅ + ≥ =                                  (1) 
If there exists a hyper-plane that satisfies Eq. (1), then we have a linear separation.  It is known 
that Lagrange function can be used to solve this | quadratic programming problem. Then we can 
The ovarian tissues, vaginal tissues, cervical tissues, and myometrium from patients were 
collected at China Medical University Hospital, and all microarrary procedures were also performed 
in a dust/climate control laboratory at China Medical University [2]. A sequence-verified human 
cDNA library containing 9,600 human cDNA clones was a kind gift from the National Health 
Research Institute of Taiwan. The clones were originally obtained from the Minimum Information 
About a Microarray Experiment (MIAME) consortium libraries through its distributor (Research 
Genetics, Huntsville, AL) [17]. In microarray data, a log-linear plot of fluorescence intensities 
against genes is used in this study, and the gene expression data is shown as follow [18]. 
2loged
GG
R
=                                         (7) 
Where G and R are the intensities of green and red colors. There are 15 samples in the microarray 
data of ovarian cancer. Tissues applied in this study included 5 normal ovaries, 5 benign ovarian 
tumors (OVT), 5 ovarian cancers at stage I (OVCAI), and 5 ovarian cancers at stage III (OVCAIII).  
In this paper, ANOVA is first used to test gene expressions that are significantly different in 
microarray data. GA is applied to extract genes and then SVM is used to verify OVT and OVCA. 
To implement our approach, the RBF kernel function is used for SVM. The RBF kernel function is 
suitable for high dimension data and only needs to define two parameters (C and σ) [19]. In order to 
find the best values of C and σ, both parameters are also encoded in the chromosome of GA. For 
the initialization of GA, the initial population is generated randomly. Chromosomes are encoded as 
gene masks corresponding to all human cDNA clones, C and σ. For each gene mask, its binary 
value with 1 represents that the gene expression is extracted for verifying OVT and OVCA, and 0 
indicates that this gene is not extracted. The values of C and σ are encoded into binary string and 
the mapping from a binary string to a real number (r) is calculated as follows: 
max min
min
2 1
r r
r lr binrep
−= + × −                            (8) 
Where minr is the minimum value of C and σ, maxr is the maximum value of of C and σ, and 
binrep represents the decimal value of l length. The traditional roulette selection with elitism is 
performed as selection operator, and it ensures that the best chromosome is selected into the new 
generation. The two-point crossover will act on parents to generate offspring. Mutation is a random 
alternation of a bit in the chromosome which assists in keeping diversity in the population. 
Hereafter, SVM is applied to verify OVT and OVCA for extracted genes. There are 12 samples used 
as training data and 3 samples are randomly selected to test the classification accuracy. The fitness 
is computed as follow. 
1
(
N
a a b
i
)ifitness W SVM W N G
=
= × + × −∑                       (9) 
Where is the weight for SVM classification accuracy, is the classification accuracy for 
SVM, is the weight for the number of extracted genes, N is the total selected number of genes 
after ANOVA tests, the value of  is 1 that represents the extracted gene, and 0 indicates that the 
gene is not extracted. These processes are terminated until maximum generation (MAXGEN) has 
satisfied. 
aW aSVM
bW
iG
 
[2] G. Steven Huang, Yao-Chin Hung, Ann Chen, and Meng-Yen Hong, “Microarray Analysis of 
Ovarian cancer”, 2005 IEEE International Conference on System, Man and Cybernetics, pp. 
1036-1042, 2005.  
[3] M. Schena, D. Shalon, R.W. Davis and P.O. Brown, "Quantitative monitoring of gene 
expression patterns with a complementary DNA microarray", Science, Vol 270, No. 5235, pp. 
467-70, 1995. 
[4] A.A. Alizadeh, M.B. Eisen, R.E. Davis, C. Ma, I.S. Lossos, A. Rosenwald, et al., "Distinct types 
of diffuse large B-cell lymphoma identified by gene expression profiling", Nature, Vol 403, No. 
6769, pp. 503-11, 2000. 
[5] J. DeRisi, L. Penland, P.O. Brown, M.L. Bittner, P.S. Meltzer, M. Ray, et al., "Use of a cDNA 
microarray to analyse gene expression patterns in human cancer", Nat Genet, Vol 14, No. 4, pp. 
457-60, 1996. 
[6] M. Schummer, W. V. Ng, R.E. Bumgarner, P. S. Nelson, B. Schummer, D. W. Bednarski, et al., 
"Comparative hybridization of an array of 21,500 ovarian cDNAs for the discovery of genes 
overexpressed in ovarian carcinomas", Gene, Vol 238, No. 2, pp. 375-85, 1999. 
[7] K. Wang, L. Gan, E. Jeffery, M. Gayle, A.M. Gown, M. Skelly, et al., "Monitoring gene 
expression profile changes in ovarian carcinomas using cDNA microarray", Gene, Vol 229, No. 
1-2, pp. 101-8, 1999. 
[8] R. S. Ismail, , R.L. Baldwin, , J. Fang, , D. Browning, , B. Y. Karlan, , J. C. Gasson, , et al., 
"Differential gene expression between normal and tumor-derived ovarian epithelial cells", 
Cancer Res, Vol 60, No. 23, pp. 6744-9, 2000. 
[9] A. M. Martoglio, B. D. Tom, M. Starkey, A. N. Corps, D. S. Charnock-Jones and S. K. Smith, 
"Changes in,tumorigenesis- and angiogenesis-related gene transcript,abundance profiles in 
ovarian cancer detected by tailored,high density cDNA arrays," Mol Med, Vol 6, No. 9, 
pp.,750-65, 2000. 
[10] K. Ono, T. Tanaka, T. Tsunoda, O. Kitahara, C. Kihara, A. Okamoto, et al., "Identification by 
cDNA microarray of genes involved in ovarian carcinogenesis", Cancer Res, Vol 60, No. 18, 
pp. 5007-11, 2000. 
[11] J. B. Welsh, P. P. Zarrinkar, L.M. Sapinoso, S. G. Kern,,C. A. Behling, B. J. Monk, et al., 
"Analysis of gene expression profiles in normal and neoplastic ovarian tissue samples 
identifies candidate molecular markers of epithelial ovarian cancer," Proc Natl Acad Sci U S A, 
Vol 98, No. 3, pp. 1176-81, 2001. 
[12] Zne-Jung Lee, Shun-Feng Su, and Chou-Yuan Lee, “Efficiently Solving General 
Weapon-Target Assignment Problem by Genetic Algorithms with Greedy Eugenics,” IEEE 
Transactions on Systems, Man and Cybernetics, Part B, Vol. 33, No. 1, pp. 113-121, 2003.  
[13] Zne-Jung Lee, Shun-Feng Su, Chou-Yuan Lee, and Yao-Shan Hung “A Heuristic Genetic 
Algorithm (HGA) for Solving Resource Allocation Problems,” Knowledge and Information 
Systems, Vol. 5, No. 1, pp. 503–511, 2003. 
[14] Zne-Jung Lee and Chou-Yuan Lee, “A Hybrid Search Algorithm with Heuristics for Resource 
Allocation Problem,” Information sciences, Vol. 173, pp. 155-167, 2005. 
[15] Zne-Jung Lee, Yan-Ping Wang, and Shun-Feng Su, “A Genetic Algorithm Based Robust 
