行政院國家科學委員會專題研究計畫成果報告 
智慧型現場監控系統之知識庫修正及暫態平滑機制之研發 
The development of knowledge based refinement and 
transient state smoothing mechanism for intelligent shop floor 
control system 
計 畫 編 號：NSC 97-E-2221-008- 
執 行 期 限：97 年 08 月 01 日至 98 年 07 月 31 日 
主 持 人：薛友仁   華梵大學資訊管理學系 
共同主持人：顧瑞祥   虎尾科技大學工業管理學系 
計畫參與人員：李根全、蔡明哲、謝禎元、林澤岩   華梵大學資訊管理學系 
一、中文摘要 
目前於機器學習為基之即時排程 (real 
time scheduling, RTS)的研究環境專注於產品
組合固定的條件下。然而在產品組合變異的環
境下，排程知識庫(knowledge base, KB)是非靜
態的，因此當製造系統生產條件發生重大改變
時，建立一個自動修正排程知識的程序是一個
值得探討的議題。而過去有關機器學習為基
RTS 系統（包含 KB 修正機制）之相關研究，
在面臨此問題的方法，必須加入新的訓練樣本
並且週期性的更新排程 KB。因此以往機器學
習為基 RTS 會面臨訓練樣本溢位(overflow)及
增加建構排程 KB 的時間，因此不適合進行即
時排程與控制。在本研究計畫中嘗試開發一個
KB 類別修正(亦即選擇)機制以適用於不同產
品組合比例環境中。在此 RTS 系統的知識庫
以兩階段決策樹(decision tree, DT)的方法來
開發。首先經由 DT，選擇合適的排程知識庫，
而後對每一個知識庫類別於下一個排程週期
再經由 DT 選擇最佳(適合)的派工法則進行即
時派工。在此研究所提出兩階段決策樹排程系
統包含如下的五個主要單元：(1)訓練樣本產
生機制、(2)基因演算法/決策樹為基屬性選擇
機制、(3)以兩階段自我組織映射類神經網路
(two-level SOM)建立知識庫類別標籤、(4) DT
為基之知識庫類別選擇模組、 (5) DT 為基之
動態派工選擇模組。經由模擬實驗證明本研究
方法相對於文獻中其他的機器學習為基 RTS
系統與及啟發式單一派工法則，在彈性製造系
統環境下之各種不同的生產績效指標下進行
比較有其優越性。 
關鍵詞：現場監控系統，即時排程，機器學習，
決策樹，自我組織映射類神經網路。 
Abstract 
Most of the research in machine 
learning-based real time scheduling (RTS) 
system has been aimed at product constant-mix 
environments. However, in product mix variety 
manufacturing environment, the scheduling 
knowledge base (KB) is not static, so it would 
be interesting to establish a procedure that 
would automatically modify scheduling 
knowledge if important changes in the 
manufacturing system occur. All of earlier 
studies proposed machine learning-based RTS 
(including KB refinement mechanism) must add 
new training sample and regenerate new KBs 
periodically. Hence, the earlier approach in 
machine learning-based RTS is confronted with 
training data overflow problem and increase 
scheduling KB building time and is not suited 
for RTS control. This project seek to develop 
1 
ratio is known) environment. However, it does 
not outperform the single-heuristic rule in a 
highly random produce-to-order (product mix 
ratio are unknown) environment. In the product 
mix variety manufacturing environment, the KB 
is dynamic; therefore, it would be interesting to 
establish a procedure that would automatically 
modify the knowledge if important changes 
occur in the manufacturing system. Priore et al. 
[8] revealed that one of the limitations of RTS 
using machine learning algorithms is the 
absence of a refinement mechanism in the 
scheduling KB. From the above discussion, 
since the KB is dynamic in a product mix 
variety environment, the refinement of a 
scheduling KB for PCS in order to enhance the 
KB generalization ability is worth studying in 
the machine learning-based RTS problem 
domain. 
Based on the above proposition, this study 
seeks to develop a KB class selection 
mechanism that can support various product mix 
ratio environments. Hence, in this paper, the 
RTS KB is developed by means of a two-level 
DT learning approach. First, we select a suitable 
scheduling KB class. Then, for each KB class, 
we select the best (proper) dispatching rule for 
the next scheduling period. 
三、研究報告應含的內容 
1. Development of two-level DT-based RTS 
system  
1.1. Problem formulation 
Because the status of manufacturing 
systems changes continuously, previous studies 
have confirmed that it is possible to improve 
system performances by implementing a 
multi-pass scheduling policy on the basis of the 
system status at each decision point over a series 
of short-term scheduling period horizons rather 
than using a single dispatching rule for an 
extended planning horizon. The advantage of 
using learning-based RTS approaches is that 
they yield rapid acceptable solutions and 
conform to the operation characteristics of 
manufacturing systems. 
According to the description by Shiue and 
Guh [5], learning-based RTS can be represented 
by the 5-tuple { }SLDPO ,,,,
Pp
, where each 
pattern ∈  is described by a conjunction of 
system features f; further, S is the set of possible 
system states given by  at , 
rule D
{ }Tsss ,,, 21 K ts
p. The scheduling which can be supported by 
∈mod  is activated by the L∈l  
machine learning approach employed under the 
dispatching rule m and the given performance 
criterion O∈o . 
The , refore the objective function for a 
pec
ll OOO +=l                   (1)  
where 
( )
s ific l machine-learning-based RTS model 
can be defined as follows: 
minmax
{ }U
o
mot
t d
ldsfMax
mo
,,∑=maxO l  
( ){ }U
o
mot
t d
ldsfMin
mo
,,∑=minlO  
and 
OOO =minlmaxl U , and ∅=minlmaxl OO I . 
1.2. Overview of two-level DT RTS system  
ort 
for v
In order to provide online decision supp
arious product mix ratio environments, a 
learning-based RTS is developed to obtain the 
knowledge for a dynamic dispatching rule 
selection mechanism by means of a two-level 
3 
training sample procedure.  
 
1.4. GA/DT-based feature selection mechanism 
r 
studi
rning 
mech
DTGA /f ,
*
mod }, where 
DTGA / ibute
GA/D
near-op
 
 
nad
s KB
 technique in 
whic
Based on the results obtained from earlie
es [4,5,19], selecting suitable system 
information based on various production 
requirements to construct an RTS system KB in 
machine based learning is a crucial research 
issue due to the existence of a large amount of 
shop floor information in manufacturing 
systems. The use of too many attributes to learn 
a concept results in the overfitting of the training 
data and degrades the generalization ability of a 
RTS system KB. Moreover, omitting one 
important system attribute will greatly influence 
the learning process and may harm the ability of 
the RTS system to classify the knowledge. 
The proposed GA/DT knowledge lea
i
anism comprises two modules: a GA-based 
feature selection module and a DT classifier 
module. The GA-based feature selection module 
yields a near-optimal subset of the system 
attributes according to the various performance 
measures, whereas the DT classifier module 
generates the training examples according to the 
output of the GA-based feature selection module, 
which were later applied to evaluate the fitness 
of a given subset of system attributes. This 
GA-DT process iterates until a feature subset is 
obtained with the best performance in the 
classification of the unknown data. A detailed 
description of the GA/DT-based feature 
selection mechanism can be found in Su and 
Shiue [4]. By using the GA/DT-based feature 
selection mechanism process, a training example 
that has a near-optimal subset of system 
attributes denoted as DTGADTGA // Xx ∈  can be 
obtained as the tuple {
f  is the selected system attr s by the 
T-based feature selection mechanism, and 
DTGA /X  are the training examples that have the 
timal subset of the system attributes. 
1.5. Building KB class label by two-level SOM 
In this study, using unique KBs is
equate for RTS systems. In this paper, we 
investigate various RTS KBs that can support 
various product mix variety environments. 
Under the product mix variety production 
environment, the manufacturing pattern can be 
diverse. Hence, if the unique set of training 
examples to build the scheduling KB contains 
some scarce (possibly noise) patterns, they can 
degrade the generalization ability of the RTS 
system’s KB. Moreover, due to the lack of a KB 
refinement mechanism, when the product mix 
ratio changes on the shop floor, the current RTS 
KB cannot offer a proper dispatching rule 
strategy. Therefore, in this study, based on the 
similarity in the training examples, the 
near-optimal system attributes of the training 
examples denoted as DTGA /F  can yield a 
classification of variou  classes by 
clustering techniques. By clustering analysis 
techniques, the accuracy of the training samples 
can be improved for the same class. Furthermore, 
the various obtained KB classes can provide 
various product mix variety environment 
requirements for an RTS system. 
Clustering is a data mining
h the data is grouped into classes or clusters 
5 
where )(nη  
)n  
is the learning-rate parameter and
is the neighborhood function centered 
 
()(,h ij x
around the winning neuron i(x); both )(nη  and 
 are varied dynamically during the 
learning process of the best results. 
tinuation: Continue with step 2 until no 
noticeable changes are obse
)n()(,h ij x
5. Con
rved in the 
qual
SOM that combined SOMs, K-m
and 
feature map. 
However, by using the SOM approach, the 
visualizations can only be used to obtain 
itative information. To produce summaries 
of the quantitative descriptions of the data 
properties, interesting groups of map units need 
to be selected from the SOM. The most obvious 
group is the entire map. While its properties are 
certainly interesting, even more useful 
summaries can be developed if the SOM (and 
thus the data) actually consist of two or more 
separate regions, and these are studied 
separately. Another option would be to 
individually consider all the map units, but in 
the case of a large map, this could result in an 
excessively large number of summaries. 
Therefore, in order to effectively utilize the 
information provided by the SOM, methods that 
can yield good candidates for map unit clusters 
or groups are required. It should be emphasized 
that the goal here is not to find optimal 
clustering for the data but to obtain good insight 
into the cluster structure of the data for data 
mining purposes. Therefore, the clustering 
method should be fast, robust, and visually 
efficient. 
Vesanto and Alhoniemi [26] proposed a 
two-level eans, 
Davies-Bouldin (DB) index [27] to resolve 
these problems (Fig. 3). A two-level SOM 
approach has been proposed that first uses the 
SOM to determine the number of clusters and 
starting point and then employs K-means to find 
the best cluster. This two-level SOM was 
compared with the SOM approach, where a 
large set of prototypes is initially developed, 
instead of directly clustering the data. The 
prototypes can be interpreted as a proto-cluster, 
which are in the next phase in which they are 
combined to form the actual clusters. The 
benefit of using an SOM is that it effectively 
reduces the computation time and noise, while 
the additional abstraction levels yield higher 
distortion. The prototypes are less sensitive to 
random variations than the original data because 
the prototypes are local averages of the data 
[26]. 
 
The DB index is a function of the ratio of 
the sum of the within-cluster scatter to that 
existing between cluster separations. The best 
clustering of a two-level SOM is achieved by 
minimizing the following DB index equation: 
⎭⎩= ≠ ),(1 lkcek kl QQdK
 
where Sc is the within-cluster dist  
between the cluster distance, and K is the 
’s KB is 
ction 
mo
⎬⎫⎨⎧ +∑ )()(max1 lckcK QSQS         (4)
ance, dce is the
number of clusters. 
1.6.Two-level DT-based Knowledge Base  
In this study, the RTS system
developed in two phases: KB class sele
dule and DT-based dynamic dispatching rule 
selection module. During the KB class selection 
phase, the unclassified training data were 
clustered using the two-level SOM approach 
7 
partitioning the examples according to their 
features. Hence, the information gain is defined 
as 
∑
∈ fVv
vGai X−= EntropyvPEntropyfn )()()(),( XXX 6)            
where f is a feature relative to the collection
examples X, Vf is the set of all possible values 
 of 
for feature f (i.e., DTGAf /f∈  is one of the 
system attributes selected by the GA/DT-based 
feature selection m and Xv is the 
subset of X for which the feature f has value v 
(i.e., })(|{ vfv
echanism), 
=∈= xXxX ). PX(v) is the 
probability that X belongs to the feature value v. 
The p from the relative 
frequency of the training set. 
The best attribute is selected and used as a 
test at the root node of the tre
robability is estimated 
e. A descendant of 
the r
cludes noise. When 
the 
irst, a 
suita
odification of 
Was
ethodology, a 
gene
 dynamic dispatching 
perfo
oot node is then created for each possible 
value of this attribute, and the training examples 
are assigned to the appropriate descendant nodes. 
The entire process is then repeated using the 
training examples associated with each 
descendant node to select the best attribute to 
test at that point in the tree. 
The tree creation phase can create 
difficulties when the data in
DT approach classifies such data, the 
resulting tree tends to be very large. However, 
the number of branches reflects the probability 
of occurrence of the particular data rather than 
the underlying relationships. These relationships 
are very unlikely to occur in further examples. 
In this situation, the DT creation algorithm will 
produce trees that overfit the training examples. 
The post-pruning DT approach can identify the 
least reliable branches and remove them. 
Under this architecture, the RTS system 
receives the system status signal. F
discre
ble KB class is selected by using the 
DT-based KB class selection module. Then, the 
DT-based dynamic dispatching rule selection 
module sends the best dispatching strategy 
control command based on the specific KB class 
to the shop floor. 
2. Experiment 
2.1. Study case description 
The study case involves a m
the model used by Montazeri and Van 
senhove [21]. It is a true flexible 
manufacturing system. The case involves (1) 
three machine families, (2) three load/unload 
stations, (3) three automated guided vehicles 
(AGVs), (4) an input buffer and a central WIP 
buffer with sufficient capacity to prevent a 
deadlock, and (5) a computer-controlled local 
area network. The first two machine families 
have two machines and the third has a single 
machine. Eleven different types of parts are 
produced by this model and their routing and 
processing times are identical to those used by 
Montazeri and Van Wassenhove [21]. 
2.2. Constructing a simulation model and 
training example generation 
To verify the proposed m
te event simulation model is used to 
rate the training examples. The simulation 
model is built and executed using an eM-Plant 
[31], an object-oriented simulation language, 
and is run on a Core 2 Duo PC with a Windows 
XP operating system. 
The proposed approach is expected to 
achieve the desired
rmance. Several parameters are determined 
in the preliminary simulation run. The time 
between the job arrivals is exponentially 
distributed with a mean of 31 min. The due date 
of each job is randomly assigned from 6 to 10 
9 
  
 
Now, we verify that the proposed two-level 
DT-based RTS system is effective under the 
given product mix variety environment. Three 
different product mix ratios are designed for 
online operation. A stream of arriving jobs was 
generated in a simulation lasting for 400,000 
min using a different set of random seeds to 
investigate whether the proposed two-level 
posed 
shown to 
achie
 
DT-based RTS system is more effective over a 
long period of time based on the various 
performance measures than that in an earlier 
study by Su and Shiue [4] in which one-level 
DT-based RTS system and a single-heuristic 
rule was employed for various scenarios. 
3. Experiment Results and analysis 
Tables 6–8 show the resulting mean and 
standard deviation for the three performance 
criteria of the 30 simulation runs with 30 
random seeds that employed different 
scheduling strategies under different product 
mix variety environments. The pro
 
Due to the use of common random seeds to 
achieve the same system scenarios, a 
paired-sample t-test was carried out to examine 
whether the proposed two-level DT-based 
approach employing the KB class selection 
mechanism is significantly superior to the 
one-level DT-based approach that did no
emp
t 
two-level DT-based approach has been 
ve better results, as measured under all the 
performance criteria, because of superior 
efficiency. 
loy the KB class selection mechanism and 
heuristic dispatching strategies. The null 
hypothesis is that the mean values of all the 
scheduling strategies are equal. An overall 
significance level of 95% was selected for this 
analysis. Tables 9-10 summarize the results of 
the paired-sample t-test. 
11 
single KB, in the DT pruning phase, some 
system patterns that are less likely to appear will 
be considered as noise patterns and therefore 
deleted. Hence, under these conditions, the 
one-level DT-based RTS system would probably 
make decisions on the basis of an inappropriate 
KB. 
The proposed two-level DT approach 
outperforms the one-level DT-based approaches 
and other single-heuristic dispatching strategies. 
The results reveal that this approach yields 
better system performance than those obtained 
using
inter
inter-arrival time of jobs 
is se
proach with uses a single 
 the classical DT-based dynamic 
dispatching rule selection mechanism and 
heuristic individual dispatching rules under 
various performance criteria over a long period. 
A possible reason is that by using the clustering 
analysis techniques, the purity of the training 
samples in the same KB class can be improved. 
Furthermore, the various developed KB classes 
can provide various product mix variety 
environment requirements for the RTS system. 
Hence, under these conditions, the two-level 
DT-based RTS system would make better 
decisions as compared to the one-level DT-based 
RTS system. 
From this study, the limitations of the 
proposed method and some potential research 
issues for improvements in future work can be 
enumerated as follows: 
This work does not discuss the various job 
-arrival time effects. In this study, the 
proposed approach expected to achieve about 
ninety percent system utilization as a 
prerequisite. Hence, the 
t 31 minutes by a preliminary simulation 
run. As documented in Baker’s study [34], 
system utilization can increase or decrease the 
number of tardiness job (i.e., NT criterion) in a 
given system. The various job inter-arrival times 
may influence the ability of the predictive 
accuracy in the two-level DT-based RTS system 
KB. The investigation of this idea by sensitive 
analysis would be a potential research issue for 
future research. 
Ishii and Talavage [35] research indicates by 
multiple decision rules approach in FMS 
scheduling improves FMS for the selected 
performance criteria compared with 
conventional ap
dispatching rule for all machines. This study 
only proposes the design of one dynamic 
dispatching rule control mechanism for all the 
machines in the system for a given scheduling 
interval. However, in large complex 
manufacturing systems such as semiconductor 
wafer fabrication systems or liquid crystal 
display (LCD) systems, multiple decision rules 
need to be simultaneously determined (such as a 
wafer lot release control, selection of a wafer lot 
by a machine, selection wafer lot by a stocker, 
selection wafer lot by AGV on a monorail, and 
so on); each of these need to be assigned an 
effective rule among the candidate dispatching 
rules based on the current system status and 
performance measures [36]. With regard to this 
issue, if we use supervised machine learning 
algorithms (i.e., this study corresponding 
DT-based approach methods) to induce dynamic 
dispatching rule selection mechanisms from the 
training examples. The main disadvantage of 
this is that the classes to which the training 
examples are assigned need to be pre-defined. 
This process to generate the training examples 
becomes very time-consuming as the number of 
dynamic dispatching rule selection mechanisms 
increases [18]. A possible solution is to 
incorporate a reinforcement learning mechanism 
[37] that can learn to select proper actions for 
13 
[15] Quinlan JR. C4.5: Programs for Machin
ithms in searc
Y. A learning-based 
ctio
roductio
Re
Wassenhove LN. 
nufacturing
nal of Productio
han PLY. 
ystems, 
ms approach, 
onal 
ering of the 
 FD, Bouldin DW. A cluster 
n Informal Tutorial, 
e 
h, 
R
Learning. San Manteo, CA: Morgan 
Kaufmann; 1993. 
[16] Goldberg DE. Genetic Algor
Optimization, and Machine learning. 
Reading MA: Addison-Wesley; 1989. 
[17] Chiu C, Yih 
methodology for dynamic scheduling in 
distributed manufacturing systems. 
International Journal of Produ n 
Int
Research 1995;33(11):3217-32.  
[18] Kim CO, Min HS, Yih Y. Integration of 
inductive learning and neural networks for 
multi-objective FMS scheduling. 
International Journal of P n 
Rob
Research 1998;36(9):2497-509. 
[19] Chen CC, Yih Y, Wu YC. Auto-bias 
selection for learning-based scheduling 
systems. International Journal of 
Production search Journal of Production Research 2008; DOI: 
10.1080/00207540701846236 
[28] Kohonen T. Self-Organizing Map third 
edition. New York, NY: Springer-Verlag; 
2001. 
[29] Vesanto J, Alhoniemi E. Clust
1999;37(9):1987-2002. 
[20] Baker KR. Sequencing rules and due-date 
assignments in a job shop. Management 
Science 1984;30(9):1093-104. 
[21] Montazeri M, Van 
Analysis of scheduling rules for an FMS.  
International Journal of Production 
Research 1990;28(4):785-802. 
[22] Chan FTS, Chan TS. 2004, Analysis of 
dynamic control strategies of an FMS 
under different scenarios. Robotics and 
Computer-Integrated Ma  [31]
2004(5);20:423-37. 
[23] Wu SD, Wysk RA. An application of 
discrete-event simulation to on-line control 
and scheduling in flexible manufacturing. 
International Jour n 
esearch 1989;27(9):1603-23. 
[24] Sun Z, Bebis G, Miller R. Object detection 
using feature subset selection. Pattern 
Recognition 2004;37(11):2165–76. 
[25] Chan FTS, Chung SH, C
Application of genetic algorithms with 
dominant genes in a distributed scheduling 
problem in flexible manufacturing s
ernational Journal of Production 
Research 2006;44(3):523-43 
[26] Chan FTS, Chung SH, Chan PLY, Finke G, 
Tiwari MK. Solving distributed FMS 
scheduling problems subject to 
maintenance: Genetic algorith
otics and Computer-Integrated 
Manufacturing 2006;22(5-6):493-504. 
[27] Shiue Y.R. Data mining-based dynamic 
dispatching rule selection mechanism for 
shop floor control systems using a support 
vector machine approach, Internati
Self-organizing map. IEEE Transactions on 
Neural Networks 2000;11(3):586-600. 
[30] Davies
separation measure. IEEE Transactions on 
Pattern Analysis and Machine Intelligence 
1979;1(2):224–7. 
 eM-Plant. Objects Manual Version and 
Reference Manual 7.0. Stuttgart: 
Tecnomatix Technologies; 2003. 
[32] See5. See5: A
http://www.rulequest.com/see5-win.html. 
[33] MATLAB. Matlab Neural Network 
Toolbox Version 5 User’s Guide. Natick, 
15 
