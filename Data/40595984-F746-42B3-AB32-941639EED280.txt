Therefore, we propose a wide bandwidth
PID inverter cascade with low pass and
notch filter to replace EPV, which have
the drawbacks of the hysteretic and
variable maximum, flow and gain stability
and low-frequent response in the process
production.
2 Research Methodologies and Plan
The PID controller is the standard tool
for industrial automation. Figure 3 shows
the traditional PID control diagram for
motion control. The flexibility and
simplicity of the controller make it
possible to use the PID control in many
practical situations. The PID controller
can be used in the cascade or it can be
combined with other controllers. For
SISO system, tuning method of Ziegler is
often used to find these gains. The
following is a complete PID control
algorithm:
( ) ( 1) [(1 ) ( ) (1 2 ) ( 1) ( 2)]D D D
I
T T TT
u k u k k e k e k e k
T T T T
         
(1)
where: u(k) is the signal sent to the plant
and e(k) is the error signal, both at
sample k T is the sample period
(in seconds) and 1/T is sample rate
(in Hz) k is the proportional gain
1/ IT is integral gain
DT is the derivative gain
2.1 Motion Control of PID and LPNO
PID
The conventional way of synchronizing
from conventional PID is low that will
result is that jerks and oscillations can
take place as the motor comes up to speed,
so that remote device do not come up to
speed at the same time as the master of
PID controller.
For these and other reasons, electronic
control systems are increasingly used to
provide perfect synchronization between
PID and motor. Feed-forward control is
added in our new LPNO PID controller
and is well-known means of providing
such behavior as shown in Figure 4. Here,
a preprogrammed feed forward signal is
applied to the master motor during
acceleration intervals. This signal is added
to the motor command generated by the
position feedback. The feed-forward
signal reduces the amount of position
error needed to generate a given output
voltage to the motor.
To obtain high accuracy, feed-forward
systems update velocity commands
anywhere from once every 500 µsec to
once every millisecond, depending on the
machine being controlled. High-speed
conversions, for example, generally
demand fast update speeds. Most controls
for motor processes employ absolute
position encoders or resolvers to provide
accurate position readings immediately at
start-up. Tachometers are generally used
for velocity feedback because they
produce higher output at low axis speeds
than filter networks.
These type controls can also be used with
nearly any kind of motor and drive,
including ac and dc brushless and dc
brush motors and drives. The standard
±10-V outputs of such controllers are
compatible with most motor drives
including linear, PWM, and SCR. Though
torque and horsepower requirements for
differing applications frequently vary
from less than 1 to 100 hp, feed-forward
control systems are configured in the same
manner for either extreme.
following transfer function,
2
2
1.5 10
( )
( 20 100)
S s
G s
S s
 
 
(8)
If we were to take the root locus of this
system,
num = 1;
den = conv([1 3],[1 1 10]);
rlocus(num,den)
We would end up with the following plot
in Figure 7.
As we can see, the plot shows that this
system is only stable for a small region of
the root locus. The portion that is stable
will only be lightly damped (small zeta).
By closing the loop and plotting the step
response to this system in the portion of
the root locus that is in the right half plane
(assuming a gain of one), we can see that
the response is poor in Figure 8.
[numc,denc]=cloop(num,den,-1);
step(numc,denc)
There is a large overshoot, long settling
time, and a large steady-state error. If we
try to increase the gain, we will see that
the response improves slightly, but
becomes unstable before a desirable
response can be achieved. Pure
proportional control is obviously not a
good way to control this system.
One way to control this system is to
design a controller with zeros near the
undesirable, lightly-damped poles of the
plant. These zeros can attenuate the effect
of these poles. The poles of the controller
can then be placed in a more desirable
position. Such a controller is called a
notch filter. Before getting into the
specifics of a notch filter, it should be
noted that due to the nature of most
systems, exact pole/zero cancellation
cannot be obtained; nor should it be
attempted. Approximate cancellation will
give us many of the desirable
characteristics without the pitfalls.
For the example above, let's try placing
the zeros slightly to the left of the
lightly-damped poles (it is a good idea to
pull the poles to the left instead of the
right). Try the following compensator
2
2
1.5 10
( )
( 20 100)
S s
G s
S s
 
 
(9)
As we can see, the roots of the numerator
of the controller are almost the same as
the complex poles of the denominator of
the plant; the denominator of the
controller introduces two poles at -10. If
we implement this controller into our
m-file and plot the root locus
numnotch = [1 1.5 10];
dennotch = [1 20 100];
newnum = conv(num,numnotch);
newden = conv(den,dennotch);
rlocus(newnum, newden);
In the Figure 9, the complex poles near
the imaginary axis have been nearly
canceled and more of the root locus is
now in the left half plane. This means that
higher gains, k, can be used, while
maintaining stability. Furthermore, higher
damping can be achieved using lower
gains (zeta term will be larger). If we
close this loop (using the rlocfind
command to find the gain), and look at the
1 2 1 2
1
,
2
,
NOTCH
F
F F F
f
is given by
R C
where R R R and C C C



   
O
O O
f
f f
‧ ‧
Note that the notch frequency can be
modified by simply changing the R
resistors and/or adding external
capacitors.
NPO ceramic, mica or a good film
capacitor with low dissipation factor
characteristics is recommended.
The–3dB bandwidth, as shown in Figure
3, can be set by the following calculations.
-3dB
-3dB
BW /
, BW
NOTCH
H L
f Q
where f f

 
The filter Q can be determined by setting
RQ to a value given by,
25
1Q
k
R
Q


(11)
The pass-band gain of the notch filter is
influenced by the filter Q and should be
adjusted for unity by setting the summing
circuit feedback and input resistor ratios
such that,
3 3
1 2
Z Z
Z Z
R R
Q
R R
 
(12)
Note that both filter parameters fO and Q
can be independently set with the proper
selection of external components RF1, RF2
and RQ.
4. Contribution
Our proposed method can be
implemented in designing and
manufacturing microcomputer controller
for industrial machinery. The major
applications include the supply of
servomotor, stepping motor various types
or pressure, flow capacity, temperature,
weight and sequential controller, which
are widely used in all kind of production
line. Our LPNO PID algorithm can be
embedded on microprocessor; this
technology is associated with computer
electronics - transportation, HVAC,
mechanisms, medicine, and
manufacturing processes of all types - can
benefit from knowledge of how“smart
chips”work and how they can be used to
improve their particular product.
REFERENCES
1. Atherton, D.P. (1999), “PID
controller tuning,“ IEE Computing
& Control Engineering
Journal,10(2):44-50.
2. Bennett, S. (1994), Real-time
Computer Control, 2nd edn,
Prentice Hall, New Jersey.
3. Daley, S. and Liu, G..P.
(1999), ”Optimal PID tuning using
direct search algorithms,” IEE
computing & Control Engineering
Journal,10(2):51-6
4. Dorf, R.C. and Bishop, R.H. (1998)
Modern Control Systems, 8th
edn, Addison-Wesley, CA.
5. Doyle, F.J., Gatzke, E.P. and
Parker, R.S.(1999)Process Control
Modules: A Software Laboratory
for Control Design: The
MATLAB-based Process Control
Figure 1 The function block diagram of electronic proportional valve
Figure 2 Hysteresis is an operational around on/off
OH
OLHYS
Target Setpoint
100 -
Computer
Control
Output(%)
0
Negative Setpoint Positive
Figure 5 Detail structure of LPNO PID control
Figure 6 Pole-zero plot and gain versus frequency response of a low pass filter
Figure 9 Root Locus with Notch filter
Figure 10 Step response with a Notch filter, gain about
200
