2略的效能。
此外，無線網路下電腦間的訊息傳
輸、傳輸的頻寬、不穩定的網路鏈結等等，
都跟有線網路環境有很大差異。所以我們
經由不同記憶體配置方法，找出兩者的差
異性，針對各項差異性找出存在的問題，
改善這些問題藉此提升無線分散式計算環
境的效能。
三、結果與討論
3.1 系統整體分析
透過有線以及無線環境下的實驗數據
比對，由於無線網路頻寬較小，所以牽涉
到網路傳輸的數據時，效能往往要比有線
的差許多，但往後無線網路頻寬若能和有
線並駕齊驅，此問題應該能迎刃而解。
另一方面，無線網路傳輸時，容易產
生封包碰撞跟遺失的問題，從實驗數據看
來，重新發送跟接收封包的數量，在有線
跟無線環境下有明顯的差異，如果能利用
記憶體配置方法，依其使用軟體的特性來
選擇，減少電腦間資料傳輸，還是能改善
此一問題。
儘管無線網路的有此缺點，但瑕不掩
瑜，無線網路的輕便性、可攜性以及不受
到”線”的羈絆，優勢仍然非常明顯，利用
不同記憶體配置方法，來改善資料傳輸頻
繁的問題，待解決頻寬問題，無線網路將
會更有優勢。
3.2 TSP應用程式細部分析
從 Table 3-1，我們可以看出，雖然在
有線的環境下，Msgs Sent跟Msgs Received
的數量較少，但 Diff Msgs跟M Wdiffs的
數量卻比無線環境下多，相較之下，Bytes
Sent 仍然比較多，如此若頻寬相同的情形
下，無線分散式計算環境在執行 TSP時，
會有較好的效能。
Table 3-1. TSP實驗結果
【無線】
【有線】
3.3 LU應用程式細部分析
從 Table 3-2 我們可以看出，在有線環
境下，在不受到 Diffs Msgs和M Wdiffs的
影響之下，Msgs Sent和Msgs Received決
定了 Bytes Sent的大小，這兩個軟體 TSP、
LU在無線環境下 Bytes Sent的表現較佳是
值得注意的。而無線環境下的 Execute Time
效能較差，是因為頻寬較窄的影響。
TSP DMS CMS HMS
Bytes Sent 28752124 29941692 28985264
Diff Msgs 1477 548 952
M Wdiffs 2420 2606 2447
Msgs Sent 11405 9882 10490
Msgs Received 11405 9882 10490
Execute Time 54.35 48.92 43.92
TSP DMS CMS HMS
Bytes Sent 28791088 30983420 29025096
Diff Msgs 1513 592 969
M Wdiffs 2427 2840 2524
Msgs Sent 11491 10095 10470
Msgs Received 11490 10094 10469
Execute Time 4.95 5.14 4.95
4waiting time and buffer size. 我們選擇 the
fragmentation threshold of wireless packages
with 512 bytes (the default is 4096 bytes) and
the beacon of access point is 10ms (the
default is 100ms). 這是因為 packages如果
超過 768 byte則無法在 4台 PCs中互相傳
送。此外，當 packages小於 256 bytes將會
導致一些額外的系統效能消耗。
其次, 我們建置了一個無線 DSM 系統,
硬體方面使用 4 台電腦來執行, 每一台電
腦都是 Intel P4 3GHz CPU, 256 DDR
memory, ASUS USB wireless network
adapter 54MB/s and Fedora Core 3 with
kernel version 2.6.9.我們根據 3種不同架構
HMS、DMS、CMS來評估無線跟有線的執
行效能，利用 5個不同軟體來實驗: IS from
NAS [2], LU from SPLASH2 [3], Merge,
SOR, and TSP.
Application IS ranks an unsorted sequence
of keys using bucket sort. The LU kernel
factors a dense matrix into the product of a
lower triangular and an upper triangular
matrix. Application Merge uses N*M
elements, while SOR solves partial
differential equations and TSP application
finds the cheapest way of visiting a sequence
of cities. Table 4-3 表示我們使用的 5 個
benchmarks
Table 4-3. Five Benchmarks
4.2 系統建置
我們使用 JIAJIA 這個 DSM 的軟體來配合
實驗. JIAJIA 使用 page status for invalid,
read and writing, scope consistency [4, 5, 6]
and structure of home base. The JIAJIA
provides instruction for barrier, lock and
release to achieve data coherence.
4.3 Home Migration策略
Fig 4-1顯示出在 Home Migration策略
下，4 個 Nodes 的無線環境執行的結果，
Merge在 CMS有較佳的效能，而其他的軟
體僅有小小差異。
0
10
20
30
40
50
60
70
80
90
IS LU MERGE SOR TSP
E
xe
cu
te
T
im
e(
Se
co
nd
s)
DMS_4 CMS_4 HMS_4
Fig. 4-1. Home Migration 策略
4.4 History Prefetching 策略
Fig 4-2顯示在History Prefetching的策
略下，4個 Nodes的無線環境執行的結果，
與 Home Migration不同 IS和 TSP在 CMS
配置方法有較佳的效能，而 LU和 SOR則
是在 DMS配置方法有較佳效能。
0
10
20
30
40
50
60
70
80
90
IS LU MERGE SOR TSP
E
xe
cu
te
T
im
e
(S
ec
on
ds
)
DMS_4 CMS_4 HMS_4
Fig. 4-2. History Prefetching 策略
4.5 結論
透過 4.3節及 4.4節的比較，我們可以
了解，Home Page 的位置對於執行效能有
