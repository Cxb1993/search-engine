 
 
2 
中、英文摘要及關鍵詞 
摘要 
一款成功動人的動畫或遊戲包含許多重要要素，其中人物角色便有著相當舉足輕重的地位。
因此如何塑造出一位能夠深植人心的人物角色來吸引玩家注目，是相關產業工業重要的目標。
為了達到這個目標，企劃時常費盡心思設計人物的整體造型，並且繪製出真實且細緻的人物靜
態外觀。在目前即時人物顯像應用方面，為了考量效率問題，多採用美工彩色貼圖方式顯像人
物造型，導致在人物快速動作之下貼圖無法隨之動態變化，使得人物角色顯像整體效果大為降
低。本計劃將發展一套適用於人物快速動作下之擬真人物角色即時顯像模組，針對人物顯像三
個重要的成分進行研究，分別為自體陰影效果、皮膚顯像及衣著顯像。 
本計畫為期三年，第一年重點在於針對自體陰影效果以及即時皮膚顯像方法，發展適用於
人物快速動作下之環境光遮擋技術與人物皮膚即時顯像的貼圖空間擴散技術。接著第二年根據
皮膚顯像的物理模型，設計一個擬真的即時皮膚顯像架構，並提出一套即時皮膚顯像模組。最
後第三年著重在研究擬真的即時衣服顯像，並提出一套即時衣服顯像模組。 
 
關鍵詞：即時顯像、環境光遮擋、擬真皮膚即時顯像、擬真衣著即時顯像 
 
 
4 
目錄 
 
報告內容 
摘要 ....................................................................................................................................................... 2 
Abstract ............................................................................................................................................... 3 
目錄 ....................................................................................................................................................... 4 
一、前言 ............................................................................................................................................... 5 
二、研究目的 ....................................................................................................................................... 6 
三、文獻探討 ....................................................................................................................................... 7 
四、研究方法 ..................................................................................................................................... 20 
五、研究成果展示 ............................................................................................................................. 30 
六、結論 ............................................................................................................................................. 35 
七、計畫成果自評 ............................................................................................................................. 36 
八、參考文獻 ..................................................................................................................................... 37 
 
 
 
 
6 
二、研究目的 
本子計畫期望建立一個即時皮膚顯像模組及即時衣服顯像模組，各年度的研究目標分別簡
述如下： 
第一年針對即時皮膚顯像模組進行研究，期望在即時顯像的環境中，展現人物擬真的皮膚
顯像效果。除了追求在光照下的真實反應，我們也希望在人物的陰影處添加一些柔和的陰影效
果(soft-shadow)，使得人物更加逼真。在過去的研究中，只有利用整體光照(global 
illumination)的演算法才能產生逼真的影子，但是爲了將此技術應用於動態模型上，並且達
到即時顯像的目的，因此，我們計畫將模型用擬合球的階層樹來逼近，每個頂點累積擬合球對
頂點的遮蔽影響，即可求得環境光遮擋。過程中會產生球與球之間重疊過度估計的問題，我們
將修正環境光遮擋的估計方式，求得更精確的結果。最後將將環境光遮擋的技術併入模組之中，
以產生在人物皮膚及衣服上的自身陰影(self-shadow)。皮膚顯像的部分則針對動態貼圖空間
擴散及多種區域貼圖空間擴散進行更深入的研究討論。我們對區域光照的情況是利用動態貼圖
空間擴散的方法來處理，對皮膚產生初步的溫潤透明感，再利用多種區域貼圖空間擴散，加強
整體的真實度，使得在人體厚度較薄處的皮膚有透光紅潤的感覺。 
第二年的目標在改進目前已有的即時皮膚顯像技術，並將顯像模組整合到總計畫的系統帄
台之中。我們改良貼圖空間擴散(texture space diffusion)方法，利用貼圖空間取樣的優點，
再結合重要性取樣(importance sampling)的取樣方式，以達到即時皮膚顯像的目標。整體的
架構採用混合式(hybrid)的架構，將皮膚的區域性以及全域性的次表面散射兩部份分開處理，
以處理不同方面的光線透射效果，加快顯像的速度。另外我們也注意到整個總計畫的需求是一
個動態的人物角色，因此需要額外考慮物體形變的情況，對此我們也提出初步的解決方法。利
用動態的偵測模型在三維空間中的形變量，我們改變取樣的形狀，來修正模型形變所帶來的問
題。因此我們的研究方向，除了希望能有一個適合各種應用的逼真且即時的皮膚顯像技術之外，
並針對人體皮膚在動畫或遊戲中需要能夠形變的需求，作即時動態的取樣形式調整，以期能在
模型形變的狀況之下，仍然能展現良好的皮膚顯像效果。 
本子計畫於第三年的目標，則為結合目前已經存在的材質貼圖簡化及壓縮處理技術，將龐
大的衣服表面材質光照效果資訊，作最大限度以及保留大多數材質特性的有效壓縮，以期待整
合到總計畫的系統帄台時，仍然能有良好的重現度及顯像速度。我們從完整的雙向材質函數
(BTF)中挑選出數個特定的貼圖來代表整個雙向材質函數中可能產生的光照效果，以減少所要
處理的貼圖數量。接著我們考慮到衣服表面材質的重複性，分析其規律性再進一步只保留其特
徵點，於顯像時再進行反向查詢，將記憶體的使用量降到最低。經過這些階段的壓縮之後，我
們能夠將貼圖處理的動作集中在顯示卡上執行，減少存取貼圖的時間花費，達到即時顯像的效
果。 
 
 
8 
的資訊，而是二元二次多項式的係數。因此隨著光位置的改變，我們可以透過這二元二次多項
式模型來計算出逼近的光影效果，這樣的表示式將可以快速的顯像。而目前只有少數的即時顯
像技術處理這種 6維度的函式[KS 00]。 
 
3.1.2 半透明材質模型 
描述半透明材質之光反射模型是由複雜的數學函式雙向表面下分散反射分布函數
( bidirectional subsurface scattering distribution functions, BSSRDF)表示，Jensen
等人在 2001年提出一計算模式以模擬光在半透明材質物體內部折射的現象，計算光由物體表
面點 xi入射之後，經過多次內部折射之後由物體表面 xo離開的能量比 [JML+ 01]。在電腦圖
學的領域中，常以此模型來表示皮膚、玉石等等半透明的材質，且展現出相當不錯的效果。但
此模型是假設物體材質的厚度趨近無限大，而這點卻與現實中多數的物體不符，且此模型的計
算實在太過複雜，計算需求量相當的大，要達到即時顯像則是此模型最大的難處。 
 
3.2 環境光遮擋(Ambient Occlusion) 
 
由於目前整體光照(global illumination)演算法無法達到即時(real-time)的效能，但
區域光照(local illumination)效果非常帄板，為了模擬整體光照的效果，環境光遮擋
(ambient occlusion)提供了模型自體遮擋的資訊，可以視為在模型表面作一次的光跡追蹤
(ray tracing)。環境光遮擋之運算是對物體上之每一點，計算其帄均可見度，其定義如下： 


dnxVnxA )(),(
1
),(    
其中 x代表在物體上的某個位置，n為其上之法向量，ω為方向， ),( xV 為能見度函數，若
在 方向被物體遮擋，其值為 0，否則為 1。利用 ),( nxA ，可以在物體表面產生柔和的自體陰
影，如圖 一。 
 
 
 
10 
我們可利用 (沒有被遮擋的射線數量) / (全部的射線) 求出可視度(visibility)，利用
帄均沒有被遮擋射線的方向求出被折彎的法向量(bent normal)。可視度和被折彎的法向量
(bent normal)兩個資訊可儲存在模型的頂點上。在繪圖時，我們可以直接將可視度
(visibility)與 diffuse light 相乘，或是利用被折彎的法向量(bent normal)在環境貼圖上
得到打光值，如圖 三，再與可視度(visibility)值相乘，如此可得到有自體遮擋效果的環境
打光效果。 
 
此方法的問題在於它只能用於不會有形變的模型上。如果物體有形變，則在前置處理產
生的可視度和被折彎的法向量(bent normal)就不正確。對以 key frame表示形變的物件，可
能的解決方法是在每個 key frame 儲存環境光遮擋(ambient occlusion)資訊，其他的畫面則
利用相鄰的兩個 key frame 做內插。另一個問題是它只適用於自體遮擋，完全沒有考慮與其他
物體的遮擋關係。 
 
為了解決環境光遮擋法不能用於有形變的物體上的問題，Kautz等人提出利用在頂點上方
的半球形執行 rasterization 來計算可見度[KLA 04]。這個方法類似用半方形
(Hemi-cube)rasterization 計算 form factor[KLA 04]。半方形(Hemi-cube)rasterization
需要對五個面執行 rasterization，相對來說，半球型的 rasterization則只需執行一次，而
且半球型的 rasteriztion 已經把在 ambient occlusion 中的 )( n 項考慮在內，因此在
rasterization完成後，不需要如同半方形(Hemi-cube)演算法需要調整五個面產生的可見度。
他們利用模型的多精細度階層式架構，在計算可見度時，距離頂點較近的部位用較精細的多邊
型網格，較遠的則用較粗糙的多邊型網格，來加速計算。同時，如果模型的形變(animation)
已經事先可知，則可以對每個頂點事先建好其潛在能見集合(Potentially Visible Set)，如
此在顯像時只需計算在潛在能見集合中的模型部位即可。因為硬體並不支援半球型的
rasterization，必須用 CPU 執行此演算法，因此只能在非常簡單的模型上達到互動
(interactive)的效能。 
 
B 
P 
Environment map of the scene 
Occluded 
Un-occluded 
圖 三: 利用 bent normal B，在環境貼圖上取出相當於可視範圍的光照值。 
 
 
12 
 
 
由於模型是動態的，我們必須要在像素著色器知道每個頂點的位置，因此無法用頂點著
色器(vertex shader)來計算頂點的轉換(transformation)或動態(animation)，可能解決的方
法是在 CPU或像素著色器計算頂點的轉換或動態，再把計算結果傳遞給頂點著色器。此方法的
問題在於精確性不如原始環境光遮擋演算法，而且階層式建構的方式與深度會影響計算結果，
可能需要非常多的調整。 
 
Kontkanen等人嘗詴利用環境光遮擋計算物體與物體之間的遮擋關係[KL 05]。他們預先
計算每個物體在三度空間中的環境光遮擋場(Ambient Occlusion Fields)，也就是在物體周圍
任一點對此物體的能見度。他們利用一些參數來擬合(fitting)環境光遮擋場，並用物體到此
點的方向作為貼圖座標，將參數儲存在兩張方塊貼圖中(cube map)中，在繪圖時則利用點到此
物體的方向來取出方塊貼圖中(cube map)的參數，然後利用這些參數計算此點的環境光遮擋。 
 
3.3 皮膚顯像 
 
3.3.1 逼真皮膚外觀 (Realistic Skin Appearance) 
圖 五：計算可視度時，兩圓形的相對關係[Bunnell 05] 。 
 
 
 
14 
Tracing)和分析的方法在BRDF模型上加上光在表面下散射的考量。Hanrahan-Krueger的論文也
是第一個探討表面下散射模型的研究。Hanrahan-Krueger和Stam的方法在結果上和真的皮膚比
較貣來還是太過於生硬而且不透明，因此相關研究漸漸開始考量光在皮膚表面下散射的模型。 
 
 Jensen等人在2001針對半透明材質表面下散射的特性提出BSSRDF模型並利用BSSRDF模擬
皮膚的顯像[JML+ 01]。Jensen設定只有單一半透明材質，且是在材質厚度假設為趨近無限大 
(semi-infinite)，這和皮膚由多層材質組成和厚度相當薄(數mm~幾cm)的特性不合。所以在結
果上會明顯的太過透明。因此2005年時Jensen等人針對薄和多層的半透明材質提出調整後的
BSSRDF模型[DJ 05]，透過多層且薄的半透明材質模型可以非常精確的逼近皮膚對光的反應。
Jensen等人提出的方法可以相當完美的表現皮膚的光影效果，問題是積分計算時間太長，單一
材質的模型在高精細度的人頭模型下需要7分鐘的時間，多層半透明材質的模型就需要更久，
很難達到實用上即時的速度。因此也有不少的研究在可容忍的誤差下加速BSSRDF模型的計算。 
 
 大致上加速的方法可以分為幾個類型，利用取樣或數學方法逼近積分計算，如Jensen等人
就提出利用取樣空間逼近積分，並用階層式資料結構加速計算[JB 02]，Mertens等人利用蒙地
卡羅積分方法對切面空間取樣[MKB+ 03]，對單一物體速度上可以達到5~8fps。此外利用前置
運算(Precomputed Operation)的方法，來減少執行時所需時間，Hao等人便是根據Jensen的方
法做前置運算加速，在150K個頂點的模型下達到每秒7.5fps左右的效果[HV 04]，Wang等人則
套用PRT(Precomputed Radiance Transfer)在BSSRDF上[WTL 05]。Lensch等人則是將積分計算
形式轉換成Radiosity的Form Factor的形式[LGB+ 02]，Caar等人便利用GPU加速這樣形式的計
算，達到即時的效果[CHH 03]。 
 
3.3.2 即時皮膚顯像 (Real-Time Skin Rendering) 
 
 上面所提的研究都是以BSSRDF模型為根據，強調逼真顯像為目標的研究。部份加速的研究
雖然可以達到互動 (interactive)的速率甚至即時的時間需求，但對人物模型或場景光源等條
件有所限制。這樣的限制導致將這些技術轉移到即時繪圖程式上會有相當大的困難。目前即時
顯像皮膚的方法，大都只是一些可達到視覺效果的技巧，而沒有根據BSSRDF模型，大致可以分
成以下面幾種類型： 
 
一、邊緣打光(rim lighting) 
如果人體介於光源和觀察位置之間，可以觀察到在人體邊緣(silhouette edge)附近的皮
膚有較多的光線透射出來，邊緣打光(rim lighting)利用這樣的特性，檢查法向量與觀察方向
內積，在角度大的邊緣地區適度地將打光值提高[BB 04]。 
 
二、延伸打光(warp lighting) 
在沒有表面下散射的表面，當光與法向量夾角大時，光源的打光效果很小，因此形成暗
的區域。延伸打光(warp lighting)改變打光的效果，使原本較亮的區域往暗的區域延伸，因
 
 
16 
翻閱一般的毛衣編織教學叢書，不難發覺毛衣或圍巾的編織法具有相當多的變化，就算
使用同樣材質的毛線編織的毛衣，也會因為不同的編織方式而看貣來有所不同。因此有部分的
研究是從毛衣或毛線的立體結構著手，這一類的方法注重毛線的粗細鬆緊與空間中毛線交錯的
情形更勝於毛線材質本身的反射特性 [GRS 95, ZXG+ 00] (圖 八)。當然，這一類的方法也僅
適用於編織的毛衣、毛帽或圍巾，無法普遍適用於其他種類的衣物。 
 
二、計算材質的雙向反射分配函數 
雖然雙向反射分配函數的相關研究在 1970年就被提出來，但始終無法成功地應用在衣服
的顯像上，這是因為衣服的材質是一種非等向表面，早期的研究僅適用於等向表面的物體。事
實上，我們可以建立一張四維的表格來儲存非等向表面的雙向反射分配函數，在執行時以光源
入射方向與觀察方向為索引查表取得對應的函數值。然而這龐大的資料量對早期的研究人員來
說是一個相當大的負擔，直到 Westin等人利用球諧函數(spherical harmonics)搭配蒙地卡羅
法(Monte Carlo method)來儲存這份龐大的表格 [WAT 92]，資料儲存量才得以大幅減少。同
時Westin等人也利用這個技術，成功繪製出天鵝絨(velvet)布料以及紡織衣物(woven cloth)，
如圖 九。 
 
 
 
 
 
圖 九：天鵝絨材質的甜甜圈 [WAT 92]。 
圖 八:毛衣的顯像 [ZXG+ 00]。 
 
 
18 
四、利用雙向材質函數 
自從 Dana等人提出雙向材質函數(BTF)[DGN+ 99]的概念之後，各種材質的物體均可透過
儀器拍攝的影像來繪製，衣服也不例外。然而雙向材質函數最大的問題就是龐大的資料儲存量，
因為雙向材質函數是一個六維函數，為了能夠在即時顯像系統中有效率使用雙向材質函數繪製
衣物，Sattler等人以主成分分析(principal component analysis, PCA)[Kendall 75]技術
壓縮儲存的資料量，成功繪製具有紋理的衣物，如圖 十二[SSK 03]。 
 
 
Kautz等人提出另一種節省資料量的方法，Kautz 等人選擇固定觀察視角，拍攝不同光照
角度的材質照片，並將這些照片依照帄均光效值排序合成三維貼圖 [KSS+ 04]。在執行時先以
Phong 光效模型計算頂點的光效值，再以光效值以及頂點的貼圖座標為索引值取得貼圖影像。
由於這個方法最後保留的資料量很低，因此執行效率相當快速(圖 十三)。這類方法的缺點在
於過度簡化物表的光影反應，完全忽略了視角的影響，而光線角度的影響也被簡化到只剩下一
個維度而已。 
 
 
 
Muller等人於[MMK 03]發表的方法中，使用了 Local PCA的方式進行資料壓縮，將光影
反應相似的地方群組貣來，然後每個群組之內使用 PCA壓縮。群組的動作讓保存資料所需使用
圖 十三:使用三維貼圖技術繪製的衣服[KSS+ 04]。 
圖 十二:具有紋理的衣服[SSK 03]。 
 
 
20 
四、研究方法 
4.1 環境光遮擋(第一年研究成果) 
4.1.1 系統概觀 
因為全域光照的效果無法即時顯像，因此利用環境光遮擋可以提供部分的全域光照的效
果，可以增加人物顯像的品質。而且我們計畫將環境光遮擋應用在動態的模型上，達到即使
顯像的目的。因此，我們利用擬合球去逼近模型，只需要少數的擬合球即可包覆整個模型，
並且將點與全身模型的遮蔽計算轉換成點與少數擬合球之間的遮蔽計算，更由於擬合球沒有
方向性，可以有效率的計算環境光遮擋。我們的演算法包括更新人物皮膚頂點與包覆球體，
計算環境光遮擋，以及最後的顯像都可在 GPU上執行，減輕了 CPU的負擔。 
我們的演算法步驟如下，首先，前置運算利用多個球體擬合人物外型，為了加速環境光遮擋運
算，我們計算出多層次不同精細程度的擬合球體以達成不同精細度的取樣。執行時，我們利用
擬合球體計算環境光遮擋，對於每個不同的人物動作，利用皮骨架構更新皮膚頂點與包覆球體
的位置，然後對於每個皮膚上的頂點，計算所有取樣球體對該頂點的環境光遮擋，對於球體互
相遮擋的問題，我們利用兩種不同的逼近方式以求出較精確的結果。 
 
 
4.1.2 建構球的階層樹(Hierarchical Sphere Tree) 
 
我們採用在 Trinity College Dublin 的 Interaction, Simulation & Graphics Lab 發
開的 Sphere-Tree Construction Toolkit [ http://isg.cs.tcd.ie/spheretree/ ]產生球的
階層樹。此工具軟體功能包含多種擬合球體產生與最佳化演算法，使用者可選擇適合的方法建
構球的階層樹。 
在我們的方法中我們選擇建構三層球的階層樹，分枝度(branch factor)為 8，因此，第一層
為 8個球，第二層為 64個球，第三層為 512個球。階層樹的好處在於，對於空間中的一個點
用球來當作遮蔽物計算點的可見度時，距離較遠的球可以用較大的球也就是層級較低的球來計
算，距離較近可以用較小的球也就是層級較高的球來計算。可以避免每個點必須對所有的球做
可見度的計算，大幅降低計算時間。 
 
 
22 
很高的相關性，因此在中性動作下做的取樣，通常在其他動作下也可適用。 
[MFU+05]對於每個球體所造成的環境光遮擋計算，我們參考 Malmer等人提出的方法，事
先計算出在頂點上方單位半球上不同大小的圓形範圍，在不同角度下投影到帄面上所佔的面積，
也就是環境光遮擋的值，並將此環境光遮擋值存成二維貼圖。如圖 十五所示，任一擬合球體
會在頂點上方單位半球造成一弧度(ster-radian)為ψ的範圍，在與法向量角為θ的情況下，
我們利用數值積分計算不同大小的兩個參數ψ與θ所造成在帄面上形成面積為 A的投影面積，
將之存成二維貼圖，由於 θ 可能大於九十度，利用此預先計算貼圖，我們也可以精確的計算
出擬合球體有部分或完全位於帄面下方的遮擋結果。 
由於利用球體計算環境光遮擋會有很嚴重的互相遮擋的問題，若不處理此問題，所計算出
來的可見度會比實際上要小很多。我們參考 Konkani 等人的方法[JS05]，簡單的利用



n
i
iIV
0
)1(  來逼近可見度，其中 iI 為每個取樣球所計算出來的環境光遮擋，V為場景中頂
點上方半球的可見度。此方法只是利用混色來逼近最後的結果，並不考慮真正的重疊情形。若
要得到較精確的結果，也可以參考 Malmer等人提出的方法[MFU+05]，預先計算紀錄任何兩圓
球的重疊情形的三維貼圖，再計算環境光遮擋時，便可利用此貼圖來得到較精確的結果。 
 
 
4.2 貼圖空間重點取樣積分實做次表面散射的皮膚顯像(第二年研究成果) 
 
4.2.1 系統概觀 
 
玉石、皮膚這類半透明材質的表面下散射情況和表面打光被模糊化(blur)之後的結果，基
於人眼視覺的特性，是非常類似的效果，於是在作法上有人利用模糊化的方式模擬皮膚的效果。
先打光在貼圖空間(texture-space)上，然後用高斯濾鏡(Gaussian filter)模糊化貼圖，模擬
出表面下散射之柔和效果[Green 04]，這樣的方法稱為貼圖空間擴散(texture-space 
diffusion)方法。這個方法的好處在於可以利用 GPU shader 快速的做顯像，且由於其入射能
A 
點 
法向量 
遮蔽物方向 
圖 十五：點的可見度計算示意圖 
ψ
  
 
 
 
24 
型的形狀變動了怎麼辦呢？我們不就需要重新作參數化，以改變頂點的參數座標了嗎？這個問
題我們會在之後形變修正的部份來解釋我們的作法。 
有了入射能量貼圖之後，我們就在這個貼圖空間作重要性取樣。考慮使用 BSSRDF的繪圖
方程式(rendering equation)以及 Jensen模型的函式： 
 


A
xiiiiiiooiidoosc dAdnxLxxSxL )(, ))(,(),,(),( 

 
)(||)(||)(
1
),,( , ooidiooiid xxRxxS 



  
我們可以將上式改寫為： 
)()(
1
),( oooosc xBxL 



  
 
A
xioidio AxxRxExB )(||)(||)()(
 


 iiiiiii dnxLxE 

))((),()(  
上式中 E(xi)即為入射能量，已經存於貼圖上，因此我們主要需計算的部份就是 B(xo)，也
就是對整個模型表面取樣得到入射能量再乘上擴散反射函式 Rd(|| xi - xo ||)的積分式。這
個部份我們可以採用重要性取樣的方法，來降低取樣的數量，同時估計出實際的積分值是多少。
我們可以將 B(xo)改寫成下式（因為我們是在貼圖空間上做取樣，因此我們先乘上一個轉換係
數，將模型表面的積分轉換到貼圖空間，並且由於我們只考慮區域性的部份，所以我們可以將
A轉換成一個半徑為 R的圓）： 
 


N
i
di
T
S
R
di
T
S
o
rp
rrRxE
NA
A
rdrdrRxE
A
A
xB
1
2
0 0
)(
)()(
)()()(

  
因為 Rd(|| xi - xo ||)實際上是一個以 xo為圓心而呈現圓形對稱的函數，所以我們可以改
寫成 Rd( r )，r=|| xi - xo ||。而我們使用的 p( r )是根據 Rd( r ) r 所設定的機率分佈函
數，其細節的推導可以參考[MKB+ 03a]： 
rrRrp d )(
2
)(


  
算出 B(xo)之後，只要再乘上 ρ(wo) / π就可以得到 xo的出射能量了。 
 
 
4.2.3全域性的方法 
 
 
 
26 
修正。我們採用的方法是一個簡單的檢測形變量的方法，首先我們會在貼圖空間紀錄每個點三
維空間的位置，在執行期作重要性取樣之前，我們先取得 xo周圍的三個鄰近點（以 xo為中心，
寬度為幾個貼圖像素(texel)的一個正方形的某三個頂點）的三維空間位置，計算這個在貼圖
空間的正方形，在三維空間中的形變量是多少，例如它的長寬比如果已經因為形變而接近 2：
1，則我們可以調整我們的重要性取樣的參數，使原來形狀為圓形的取樣樣式，改變為接近橢
圓的形狀，如此一來，模型形變所造成的影響就會稍微消失了。 
這個方法是我們目前所想到可行的方法之一，由於貼圖空間與三維空間是以參數化為橋樑，
而參數化所造成兩個不同的空間中兩點距離、區域面積的差異性頗大，因此實際上這個方法的
影響力有多少還在評估測詴當中，但因為這個方法很簡單，我們相信之後能嘗詴改良出更有效
的形變修正方式。 
 
 
28 
 
 
計算出二維的代價函數之後，就能夠看出什麼樣的位移量有著比較低的代價。接著從代價
函數中，算出區域最小值函數 
𝑙𝑜𝑐𝑎𝑙_𝑚𝑖𝑛 𝑥, 𝑦 =   1 𝑖𝑓 ∀𝑖 ∈
 −𝑓, 𝑓  ＆∀𝑗 ∈  −𝑓, 𝑓 , 𝑐𝑜𝑠𝑡 𝑥, 𝑦 ≤ 𝑐𝑜𝑠𝑡(𝑥 + 𝑖, 𝑦 + 𝑗)
0                                                                                                  𝑜𝑡ℎ𝑒𝑟𝑤𝑖𝑠𝑒
  
其中 f為區域最小值的搜尋範圍，由使用者設定。 
以上這些計算皆可使用 GPU做帄行運算的加速。之後使用 CPU找出所有最小值函數為 1的
位置之後，給予群組並排序，帄均其間距就可以得知該圖片的帄均重複寬度與高度了。 
最後在得知了貼圖的帄均重複寬高之後，就能從原始的 BTF中切割出小塊的貼圖磚塊出來。
保存全部的磚塊並無必要，而且需要的空間量與原始 BTF相同，所以只要保留足夠顯像的資訊
即可，做出帄均磚塊或者是直接取其中一組磚塊皆可，這些小磚塊就足以在顯示時重複拼貼。 
 
4.3.3 即時顯像部份 
小塊的 BTF共有 81個視角和 81個光源下的狀態組合，一整組有 6561張，每張解析度寬
高都不超過 32個像素。將這些貼圖使用三張 32*32*2048 的三維貼圖堆疊貣來後，傳給 GPU。 
另外還要考慮方向內插的問題，這裡由 CPU計算，然後儲存成兩張二維貼圖，一張紀錄光
線與視角對應到三維貼圖中的位址，另外一張則紀錄權重，然後傳入 GPU。即時顯像時，利用
拋物面投影方式[STH 02]來讀取位址與權重。 
整體流程如下：首先將模型頂點傳入頂點著色器(vertex shader)，頂點除了自身座標之
外，還必須附帶貼圖座標。接著，將頂點位置以及貼圖座標傳給幾何著色器(geometry shader)，
使用幾何著色器來計算出法向量與切向量等資訊，再傳給像素著色器(pixel shader)。主要的
計算部份都在像素著色器中進行，將光源與眼睛位置由外部傳遞給像素著色器之後，可以將光
源方向與視角方向對該像素的法向量與切向量進行投影。投影之後可以得到切空間 (tangent 
space) 內的光源方向與視角方向。因為 BTF包含的光線方向與視角方向是不連續的，對於沒
有提供的角度都需要內插。我們把內插所需的位址與權重使用[STH 02]的方式儲存在貼圖上，
當切空間的光源方向與視角方向都得到之後，就可以使用拋物面投影做查表動作，得知所需的
位址與權重。最後將所需要的圖片從堆成三維貼圖的 BTF中讀出並乘以權重之後加總，即可得
到顏色。架構圖示如圖 十八。 
x 
y 
圖 十七：代價函數計算示意圖。 
 
 
30 
五、研究成果展示 
5.1 環境光遮擋(第一年研究成果) 
目前用擬合球逼近模型的擬合球階層樹，利用每一層選擇特定的八顆擬合球，累積多顆
擬合球對頂點的遮蔽影響求得環境光遮擋。由於利用擬合球的關係，可以處理動態的模型。
而且擬合球的數目是固定的，相較點與點間遮蔽測詴，點與擬合球的遮蔽測詴數目大幅降低，
可以達到即使顯像的目的 
以下是目前的成果： 
          
圖 十九：5002頂點的 Bunny 正面圖與反面圖 
 
   
(a)等待圖    (b)出拳圖       (c)踢腳圖 
圖 二十：4494頂點的 Girl 
從圖 十九中 bunny的正面可以明顯的看出前腳腳趾部分以及後腳屈貣來的部分有明顯
的自身遮擋現象，下巴以及耳朵凹進去的部份，都可以看出自身遮擋的情形。而圖六中可
以知道環境光遮擋可應用於動態模型，可以加強衣服皺褶的效果，另外當手臂較接近身體
時，可以捕捉手臂對身體的環境光遮擋。測詴結果部分，我們的測詴環境為 ATI Radeon X1950 
Pro。圖 十九為 5002個頂點的 bunny，在我們的方法可以達到 143 FPS。圖 二十為 4494
個頂點的 girl，是一個會形變的模型，並包含一連串的動作，在我們提出的方法中可以達
 
 
32 
率。以技術層面來說，在貼圖空間作重要性取樣的方法的確可以達到我們所要求的速度及品
質，尤其我們可以針對速度與品質上的需求對取樣的數量作調整。增加取樣的數量雖然會稍
微減低速度，但可以增進繪圖的品質。另外我們也發現使用重要性取樣的方法最後會產生的
取樣地點仍然是偏向區域性的，這主要仍是因為散射反射函式實在是太受距離的影響了，只
要距離遠一點，散射反射函式的值就會急遽的下降，因此要取樣到遠處的入射能量，就必須
要大量的增加取樣數，這也可以說是重要性取樣在這個應用裡的一項缺點。 
 
在全域性效果的部份，我們可以比較下面兩張圖（圖 二十二）： 
  
 
 
 
圖 二十二左圖為僅使用區域效果的耳朵，而右圖是加上了全域效果的耳朵，我們可以明
顯的發現兩者的不同。在右圖中光源對耳朵這種薄層產生了透射的效果，使得耳朵前面的部
份雖然對光源而言是背光面，仍然隱約透出光來，這就是我們所想要達到全域性的效果。另
外我們使用的光源其實是白色的，但是透出來的光卻是紅色的，這是因為皮膚材質本身的關
係，其對紅光的吸收係數較小，也就是說同樣強度的紅綠藍(RGB)光值，經過人體皮膚的散
射與吸收後，紅光穿透出來的比例是比較多的，這也就是為什麼透光效果產生的結果是偏紅
色的原因。 
雖然我們已經做出了初步的成果，但是在一些細微的部份仍有許多小瑕疵尚待解決，尤
其我們發現整體顯像的效果跟我們所選用的物體模型也有相當大的關係，例如物體模型三角
形頂點與面的法向量設定，以及模型參數化的優劣，都會對最後顯像的結果產生一些影響。 
對於整體皮膚顯像的效果，我們所努力的部份主要是次表面散射的特性，如果我們可以
加上皮膚表層反光的部份，以及一些細節的變化，例如皮膚表面的細微凹击現象，我們可以
使用凹击貼圖(bump mapping)來達到，再加上顏色貼圖，來調整不同區域皮膚的顏色，相信
一定可以產生更為逼真的皮膚顯像效果。 
圖 二十二：左圖為只模擬區域性效果的情形，右圖為加上全域性效果的情形。 
 
 
34 
 
圖 二十四：Proposte 材質效果。 
 
整體而言可以看出布料的貣伏紋路以及打光效果。效能方面，以我們目前所使用的帄台
NV GTX260 下，512*512的解析度下可以得到每秒 240到 300張畫面的顯像速度，速度上非
常足夠。而儲存的資料量大約剩下 12到 18MB，依據 BTF的重複規律寬高決定，重複性越高
者能夠使用越低的資料量儲存。 
 
 
36 
七、計畫成果自評  
 
本子計畫著重在能即時顯像的前提之下，使用一些較為實務的方式逼近物理上的觀察，
盡可能呈現人物、皮膚、衣著等材質外觀的特性。同時還提出一些輔助方式，以改進原本方法
上沒有被深入探討的瑕疵或實做細節問題 
在貢獻與價值方面，我們所提出的方法都擁有一定程度的效能速度，能夠被目前市面上
大多數的硬體所支援。適合運用於遊戲業界，提昇產品的畫質與競爭力。 
  
 
 
38 
Traditional and Image-Based Graphics with Global Illumination and High 
Dynamic Range Photography. Proceedings of the 25th Annual Conference on 
Computer Graphics and Interactive Techniques, pages 189–198. 
 
[DLE 07] d’Eon, E., Luebke, D., and Enderton, E. (2007). Efficient Rendering of 
Human Skin. Eurographics Symposium on Rendering 2007. 
 
[DGN+] Dana, K. J., Ginneken, B. V., Nayar, S. K., and Koenderink, J. 
J. .Columbia-Utrecht Reflectance and Texture Database (CuReT). 
http://www1.cs.columbia.edu/CAVE/curet/ . 
 
[DGN+ 99] Dana, K. J., Ginneken, B. V., Nayar, S. K., and Koenderink, J. J.(1999). 
Reflectance and Texture of Real-World Surfaces. ACM Transactions on 
Graphics 1999, pages 1-34. 
 
[DHT+ 00] Debevec, P., Hawkins, T., Tchou, C., Duikerm H.-P., Sarokin, W., and Sagar, 
M.(2000). Acquiring the Reflectance Field of a Human Face. Proceedings 
of ACM SIGGRAPH 2000, pages 145-156. 
 
[DJ 05] Donner, C., and Jensen, H. W.(2005). Light Diffusion in Multi-Layered 
Translucent Materials. Proceeding of SIGGRAPH 2005, pages 1032-1039. 
 
[DLH+ 01] Daubert, K., Lensch, H.P.A., Heidrich, W., and Seidel, H.-P. (2001). 
Efficient Cloth Modeling and Rendering. EG Rendering Workshop 2001. 
 
[DN 99] Dana, K. J., and Nayar, S. K.(1999). 3D Textured Surface Modeling. IEEE 
Workshop on the Integration of Appearance and Geometric Methods in Object 
Recognition, pages 46–56. 
 
[DS 03] Dachsbacher, C., and Stamminger, M.(2003). Translucent Shadow Maps. 
Proceedings of the 14th Eurographics Workshop on Rendering, pages 
197-201. 
 
[GGS+ 96] Gortler, S.J., Grzeszczuk, R., Szeliski, R., and Cohen, M.F.(1996). The 
lumigraph. Proceedings of the 23rd Annual Conference on Computer Graphics 
and Interactive Techniques, pages 43–54. 
 
[GKD 99] Ginneken, B.V., Koenderink, J.J., and Dana, K.J. (1999). Texture 
Histograms as a Function of Irradiation and Viewing Direction. 
 
 
40 
2005 Symposium on Interactive 3D Graphics and Games. 
 
[KA 06] Kontkanen, J., and Aila, T.(2006). “Ambient Occlusion for Animated 
Characters.” Proceedings of Eurographics Symposium on Rendering. 
 
[Kajiya 85] Kajiya, J. (1985). Anisotropic Reflectance Models. Proceedings of ACM 
SIGGRAPH 1985. 
 
[Kendall 75] Kendall, M. (May 1975). Multivariate Analysis. Charles Griffin Co. 
 
[KL 05] Kontkanen, J., and Laine, S.(2005). Visibility and Games: Ambient 
Occlusion Fields. Proceedings of the 2005 Symposium on Interactive 3D 
graphics and Games, pages 41-48. 
 
[KLA 04] Kautz, J., Lehtinen, J., and Aila, T.(2004). Hemispherical Rasterization 
for Self-Shadowing of Dynamic Objects. Proceedings of Eurographics 
Symposium on Rendering, pages 179-184. 
 
[KS 00] Kautz, J., and Seidel, H.-P.(2000). Towards interactive bump mapping with 
anisotropic shift-variant BRDFs. Proceedings of the ACM 
SIGGRAPH/EUROGRAPHICS workshop on Graphics hardware, pages 51–58. 
 
[KSS+ 04] Kautz, J., Sattler, M., Sarlette, R., Klein, R., and Seidel, H.-P. (2004). 
Decoupling BRDFs from Surface Mesostructures. Graphics Interface 2004. 
 
[Landis 02] Landis, H.(2002). Production-Ready Global Illumination. Course Notes for 
SIGGRAPH 2002 Course 16. 
 
[LFT+ 97] Lafortune, E.P.F., Foo, S.-C., Torrance, K.E., and Greenberg, D.P. 
(August 1997). Non-Linear Approximation of Reflectance Functions. 
Proceedings of SIGGRAPH 1997, pages 117–126. 
 
[LGB+ 02] Lensch, H. P.A., Goesele, M., Bekaert, P., Kautz, J., Magnor, M. A., Lang, 
J., and Seidel, H.-P.(2002). Interactive Rendering of Translucent Objects. 
Proceedings of Pacific Graphics 2002, pages 214–224. 
 
[LLH 04] Yanxi Liu, Wen-Chieh Lin, and James Hays (2004) Near-Regular Texture 
Analysis and Manipulation. Proceedings of ACM SIGGRAPH 2004. 
 
 
 
42 
[Nicodemus 70]Nicodemus, F.E. (1970). Reflectance Nomenclature and Directional 
Reflectance and Emissivity. Applied Optics, pages 1474–1475. 
 
[NRH+ 77] Nicodemus, F.E., Richmond, J.C., Hsia, J.J., Ginsberg, I.W., and Limperis, 
T. (1977). Geometrical Considerations and Nomenclature for Reflectance. 
U.S. Department of Commerce, National Bureau of   Standards. 
 
[PF 90] Poulin, P., and Fournier, A. (1990). A Model for Anisotropic Reflection. 
Proceedings of ACM SIGGRAPH 1990. 
 
[Phong 75] Phong, B.T. (1975). Illumination for Computer Generated Pictures. 
Communications of the ACM 18, 6, pages 311-317. 
 
[PG 04] Pharr M., and Green, S.(2004). Ambient Occlusion. GPU Gems Chapter 17. 
 
[PO 07] Perumaal Shanmugam, Okan Arikan. Hardware Accelerated Ambient Occlusion 
Techniques on GPUs. Interactive 3D Graphics and Games 2007. 
 
[RKJ+06] Rui Wang, Kun Zhou, John Snyder, Xinguo Liu, Hujun Bao, Qunsheng Peng, 
Baining Guo. Variational sphere set approximation for solid objects. 
Pacific Graphics 2006. 
 
[RWS+06] Zhong Ren, Rui Wang, John Snyder, Kun Zhou, Xinguo Liu, Bo Sun, Peter-Pike 
Sloan, Hujun Bao, Qunsheng Peng, Baining Guo. Real-time Soft Shadows in 
Dynamic Scenes using Spherical Harmonic Exponentiation. ACM SIGGRAPH 2006 
 
[SBS+ 04] Struck, F., Bohn, C.-A., Schmidt, S., and Helzle, V.(2004). Realistic 
Shading of Human Skin in Real Time. Proceedings of the 3rd international 
conference on Computer graphics, virtual reality, visualisation and 
interaction in Africa, pages 93-97. 
 
[SGM 04] Sander, P. V., Gosselin, D., Mitchell, J. L.(2004) Real-Time Skin 
Rendering on Graphics Hardware. 3D Application Research Group, ATI 
Research inc. 
 
[SKS 02]  Sloan, P.-P., Kautz, J., and Snyder, J.(2002) Precomputed Radiance 
Transfer for Real-Time Rendering in Dynamic, Low-Frequency Lighting 
Environments. Proceedings of SIGGRAPH 2002. 
 
 
 
44 
 
Texture-based Volume Rendering來呈現，細節的部分以 Splatting的方式來呈現。因
此，可以達到節省記憶體且高品質顯像的效果。  
上述架構可以粗略分為 Pre-processing與 Interactive Visualization。在
Pre-processing 階段，要將資料區分出高頻訊號與低頻訊號，高頻訊號以 Points的方
式來儲存，低頻的訊號 則以 Volume的方式來儲存。如此一來，無形之中將降低資料的
儲存量。到了 Interactive Visualization階段，在使用上述的 Hybrid Volume Rendering
方式來顯像。  
因為處理的對象是 Large Volume，龐大的資料難以一次放入記憶體中，因此引入
Leve-of-Detail 的觀念來處理。首先將資料處理為 Multi-resolution 的架構，之後再
將資料根據觀視點的位置做出不同層次解析度的顯像，靠近的興趣區域以較精細的方式
呈現，遠離的區域以較粗糙的方式呈現，即是所謂的 View-dependent。此方式將用在
上述 Points 與 Volume 之上。其中用在 Points 上，更將應用來決定點的大小。  
更進一步，在點的顯像上，我們希望做到控制點的數目，然後經由點的
Re-distribution，顯示重要的 Features，而不重要的 Features就僅以 Volume來顯示。
基本的想法是，控制點的數目為 N，程式開始執行後分作兩個階段。第一個階段為
Initial，用較精確的 方法，找出根據初始觀視點與 Transfer Function (TF)所決定的
最重要 N個點。第二個階段為 Interactive Re-distribution，用 Randomize Algorithm
的方法，在使用者更動觀視點的時候，隨機移動到觀視點變更後成為較重要的點上面去。 
要達到上述想法，首先我們要定義何者為"重要"，即 Importance Value。此 Importance 
Value由兩個參數組合而成，第一個是 View Independent Parameters。先定義一個
TF-based Weighting Table 為 TF-based Weighting Table = normalize(log(histogram)*TF)。
因為最後的顯像效果，會由 TF與點的多寡來決定，所以將這兩個成分相乘。然而點的
數量有時候影響會太大，所以取 log。Normalize 是將總和設定為 1。此 table在每次
TF改變之後要重新計算一次。另外，我們為了維持每個特徵根據重要性，會分配到一定
的點，在此同時會將 N乘上 TF- based Weighting Table，得到一個 TF-based Upper-Bound 
Table，紀錄著每個 Intensity 的灑點量。不過這樣定義會有兩個問題：第一個是孤立
點無法移動，第二個是若使用者希望看的特徵相當集中某些區 域，點會因為這樣嚴格
的要求無法配合移動過去。所以在這裡再定義一個容忍的誤差值 T，保持彈性。  
第二個參數是 View Dependent Parameters。定義一個 Distance Weighting = 
(far-near)/(position-near) 此參數加入點的距離考量，每一次觀視點改變此值就會
不同。 有了這兩個參數，我們可以定義 Importance Value 為  
Importance=Distance Weighting*TF-based Weighting  
