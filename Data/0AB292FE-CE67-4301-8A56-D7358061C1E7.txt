 計畫中文摘要 
智慧型家電 (Information Appliance, IA)在未來生活中，將成為人們生活中不可獲缺的一份子。由於
無線與寬頻網路的價格平民化，在家庭，大小型辦公室的環境中已漸趨普及，未來透過網路方式，遠端
存取各式各樣之 IA， 已不再是夢想。過去數年來，許多標準組織和廠商已合作制定出多種 IA 服務存取
協定，如 Open Service Gateway initiative (OSGi)及 Universal Plug and Play (UPnP)等。但這些目前現
有之 IA 服務存取協定基本上都是以研發者為中心 (Developer-Centric)，其目標是要達到讓各個 IA 生產
製造商，能夠在其所制定的架構下，有統一之 IA 發展平台及程式設計介面，以進行 IA 整合。上述各類
協定和架構中，基本上是透過 XML 設計訊息傳遞格式和 IA 服務描述等，並使用 Java 做為程式開發語
言，以期讓不同的 IA 可以依各個組織所定義的 Java Interface 進行溝通。 
相較於一般使用者，上述標準皆是以研究開發者 (Developer-Centric)的角度進行 IA 服務存取協定
之制定，一般使用者，並不容易了解 OSGi 及 UPnP 所制定之協定內容。例如複雜的 XML 格式文件及
Java 程式語言等，都不是一般使用者所能理解的，這將造成了使用者無法容入各家制定之 IA 存取服務
標準。而廠商所設計之 IA 互動腳本，使用者將無法進行調整變動。此外，各組織及其所制定之標準也
只定義研發層面的統一 IA 存取介面，缺乏使用者層面之 IA 存取介面。因此，IA 諸多繁雜的使用介面，
讓使用者在操作不同 IA 時，需熟悉及安裝不同 IA 操作軟體，容易造成使用者操作上的困擾。所以，以
上協定在以使用者為中心(User-Centric)之觀點下，便產生了以下幾點問題： (1)研發者 IA 存取介面 
(Developer-Level IAs Access Interface) ：各協定只提供研發者 IA 存取介面，廠商必需自行設計使用者
介面。(2)非通用 IA 存取方式(non-Universal IAs Access)：各協定並無定義使用者的通用 IA 存取方式，
使用者必需透過各家廠商所提供的 IA 存取軟體控制 IA。(3) 以 XML 及 Java 為基礎的研發者定義 IA 互
動(Developer-defined IAs Interactions)模式：各協定只制定方便研發者定義 IA 互動的部分，使用者無
法自訂 IA 之間互動的設計，除非他們了解 XML 與 Java，並且廠商也公開相關 APIs 給使用者使用。 
因此，A Platform for User-Centric Universal IAs Access (UC-UIAA)之計畫，是以使用者為中心
(User-Centric)的觀點之 IA服務存取協定，解決上述問題。(1)使用者 IA存取介面 (User-Level IAs Access 
Interface)：由 UC-UIAA 依據 IA 服務描述檔，自動產生 IA 存取介面，廠商不用再自行設計使用者 IA
存取介面。(2)通用存取方式(Universal IAs Access)：透過由 UC-UIAA 自動產生的通用 IA 存取介面，使
用者將不再需要使用額外之 IA 存取軟體。(3)以圖形介面為基礎的使用者定義 IA 互動 (User-defined IAs 
Interactions)：由 UC-UIAA 自動產生圖形化 IA 互動介面，讓使用者也可自行設計 IA 互動腳本。 
關鍵詞 : 以使用者為中心、服務存取、服務取存閘道、通用存取、智慧型家電、圖形介面互動設計。 
I 
 
 一、前言 
 
以使用者為中心的通用智慧型家電(Information Appliance, IA)存取平台 (A Platform for 
User-Centric Universal IAs Access (UC-UIAA))之計畫是以使用者為中心(User-Centric)的觀點，提出 IA
服務存取解決方案。本文件為計畫結案報告，描述本計畫中的各項具體成果，含包系統架構、論文發表、
得獎狀項及計畫轉移等。  
 
 
二、研究目的 
 
現有之標準協定及架構，事實上為 Developer-Centric, 並非 User-Centric。在 IA 控制介面方向，
使用者必需習慣不同 IA 的操作介面，而廠商必需為不同 IA 設計不同的操作介面；在不同 IA 之間的互
動問題方面更是嚴重，使用者無法從任何已有的協定中，參與 IA 互動的設計，必需完全依賴廠商所提
供的功能，無法作任何更動。 
 
 因此，本計畫以 User-Centric Universal IAs Access (UC-UIAA) 的觀念，建構 UC-UIAA 平台，達
成以下幾項要點： 
(1) 使用者 IA 存取介面 (User-Level IAs Access Interface)：由 UC-UIAA 自行依據 IA 服務描述
檔，自動產生 IA 存取介面，廠商不用再自行設計使用者 IA 存取介面。UC-UIAA 提供圖形化介面
做為使用者 IA 操作介面，針對容易及計算能力較受限的設備，如 PDA 及手機等，只要安裝圖形介
面軟體即可。 
 
(2) 通用存取方式(Universal IAs Access)：透過由 UC-UIAA 自動產生的通用 IA 存取介面，使用
者將不再需要使用額外的 IA 存取軟體。透過 UC-UIAA 所提供圖形介面軟體安裝器至其設備上，即
可進行遠端 IA 存取。使用者將不再需要額外安裝及熟悉各式各樣的 IA 操作軟體。 
 
(3) 以圖形介面為基礎的使用者定義 IA 互動 (User-defined IAs Interactions)：由 UC-UIAA 自動
產生圖形化 IA 互動介面，讓使用者也可以設計 IA 互動腳本。使用者將不需要懂 XML 或 Java 等文
件格式與程式言語，即可透過其所熟悉的圖形化操作介面，用選取方式便可自訂 IA 互動模式。 
 
 
三、文獻探討 
 
家庭網路及家電控制發展至今，相關之技術及研究論文發表甚多，以下將針對國內外之相關研究來
做探討。 
 
z Open Service Gateway initiative (OSGi) 
該組織建立于 1999 年，是一個非贏利機構，旨在建立一個開放的服務規範，為通過網路向家庭設
1 
 z Universal Plug and Play (UPnP) 
UPnP 架構是在 2000 年六月由 UPnP 論壇所提出，此論壇是由超過四百家不同類型的公司所組成
的非營利組織。UPnP 延伸了隨插即用 (Plug and Play) 的想法，讓每個裝置可動態地從網路中加入或
是移除，不需使用者對裝置組態設定，並且具有自動搜尋的功能。UPnP 提供的是一種不用進行組態設
定，而能自動加入網路群組以取得 IP 位置的網路通訊標準。 
 
 
透過這項技術可使剛連結上網路的設備發出訊息告知其他設備自己的存在以及其所提供的服務功
能，並讓任何形式的智慧家電、無線裝置、個人電腦等都能達到點對點 (peer-to-peer) 網路連線的架構
(如下圖)，且利用現有的網路技術，讓家庭、公司或其他公開的網路連線裝置，可以傳送資料或控制資
訊。UPnP 在運作上是使用現有的 TCP/IP 網路，亦即您不需要更換網路系統，即可以享受 UPnP 帶
來的便利性。 
IP 網路
控制點
(Pocket PC)
控制點
(Pocket PC)
UPnP device UPnP device
UPnP device
 
圖表 二 : UPnP 之網路連線架構 
z Energy Conservation and Homecare NETwork (ECHONET) 
ECHONET 協會係由日立製作所、松下電器產業、三菱電機(Mitsubishi Electric)、夏普(Sharp)、東
京電力公司(Tokyo Electric Power Company)及東芝等六家公司於 1997 年 12 月在日本政府支持下所成
立的一個組織，其主要目標是開發一標準化的網路家電家庭網路通訊技術，並應用至家庭能源管理、居
家健康照護等服務上。日本主要家電廠商除了共同組成 ECHONET 協會開發共用標準之外，並在
ECHONET 標準的架構下各自制定了網路家電發展戰略，試圖靠網路家電建立起一個新的家電王國，像
是東芝、松下電器產業和日立製作所等家電廠商均研究開發出了多種網路家電。 
ECHONET 當初訂定的時候就鎖定在家用裝置上。由於家裡的家電用品可能是利用電話線、電源
線、紅外線或者是低功率的無線電來連接，所以 ECHONET 便著重於要讓這些傳輸介面要能夠互通。 
 
 
 
 
 
3 
   
 如圖表 3 遠端控制與互動描述語言所示，為了達到遠端控制及智慧型家電之間的互動功能，
我們發展智慧型家電互動描述語言 (SIS1.2.0)及智慧型家電服務存取通訊協定 (SIP1.3.0)來協助
完成遠端控制設備與智慧型家電之間的溝通。其分工總表如下圖所示： 
 
圖表 4 分工總表 
 
 
四、結果與討論： 
 
本研究計畫在執行過程中，依據國科會自由軟體專案之要求採用 Capability Maturity 
Model Integration (CMMI) 專案執行的方式。在 11 月間提出需求規格報告書及專案執行規畫
書，明確地定義了本研究計畫的需求及專案執行規畫等。透過實地確實執專案執行規畫，我們
在二月中旬提出了完整的系統設計報告書，並依據系統設計報告書上的設計，在六月中完成了
整個系統，並且測試完畢。 
CMMI 的專案執行方式，讓計畫參與成員相當有效率地完成了整個系統的規畫與建置。並
在各個階段中都有相當詳細的文件，讓我們可以進一步地檢討計畫的整體規畫及執行成果等
等。令我們受易良多。 
   
5 
 獲獎狀況： 
本計畫的研究成果並獲得了台灣 Linux 促進會的肯定，榮獲 2006 年 Linux 黃金企鵝研發
創新獎。並在 8/1-8/2 接受頒獎展出本計畫研究成果。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
7 
