 2
 
Abstract 
 
To improve the safety of drivers and walkers in a city, several traffic-monitors are usually set 
on lanes.  These traffic monitors can also improve the security of communities.  In this paper, 
we integrate the so-called linear/circular consecutive-k-out-of-n:F systems into our proposed 
traffic-monitor system.  The objective is to find the optimal design of monitors under limited 
budget for the system.  The main purposes of this paper are?(1) to propose a new traffic-monitor 
system, (2) to present an immune algorithm (IA) for the optimal design of traffic monitors, and (3) 
to report numerical results of various parameters by the proposed algorithm.  It is shown that the 
proposed immune algorithm performs well for all test problems.   
 
 
Keywords?Consecutive-component systems?System reliability?Optimal Design 
 
 
 4
1 n-1n-232 n...
 
 
Fig 2.  Linear C(k, n?F) system. 
 
The circular C(k, n?F) system is similar to linear C(k, n?F) system.  The system consists of n 
components in a circle and it fails if and only if there are consecutive k or more than k components 
failed.  For example, the system in Fig 3 is a circular C(2,8?F) system (i.e., k=2) , and if both 
components 1 and 2 are failed will lead to system failure.  
 
1 32
8 4
7 56
 
 
Fig 3.  Circular C(2,8?F) system. 
 
In this paper, we will combine the linear and circular C(k, n?F) systems into a traffic-monitor 
system, in which the typical C(k, n?F) system systems are special cases of the proposed system.  
Additionally, we will investigate the optimal design of the traffic-monitor system whose objective 
is to minimize the system failure reliability subject to the budget constraint.  In this paper, a new 
immune algorithm is presented to solve such optimization problems.  Numerical results of 
various combinations of parameters are reported and discussed.  
2  The New Proposed Traffic-Monitor Systems 
For convenience, we consider the following general traffic-monitor system in Fig 4 as an example.  
Fig 4(a) shows the traffic lanes and a circle (from A to P) in a city, and Fig 4(b) shows the 16 
possible locations for traffic monitors.  Monitors 1 and 2 are responsible for lane A, monitors 2 
and 3 are responsible for lane B, and monitors 3 and 6 are responsible for lane E etc.  Note that 
when both monitors 1 and 2 are failed, lane A cannot be monitored and it is defined to be failed.  
Similarly, lane B is failed if and only if monitors 2 and 3 are failed.  Therefore, there are 16 
minimal cuts for the system, namely, CA={1,2}, CB={2,3}, CC={2,4}, CD={2,5}, CE={3,6}, 
CF={6,7}, CG={6,11}, CH={7,8}, CI={7,9}, CJ={9,10}, CK={9,14}, CL={10,11}, CM={10,13}, 
CN={11,12}, CO={14,15} and CP={14,16}.  The traffic-monitor system fails if and only if there is 
one or more minimal cuts of monitors failed.   
 6
Thus P(C1∪C2∪…∪Cs) is the sum of terms from (2) to (5).  There are several advantages for 
this disjoint-subset method.   
1. The method may cancel redundant terms in advance. 
2. The method is more “efficient” than inclusion-exclusion principle in computational complexity 
(Hsieh (2006)).   
3. The method is more “flexible” than inclusion-exclusion principle (Hsieh (2006)).  For example, 
if we add a new minimal cut Cs+1 into the s minimal cuts, this disjoint-subset method only has to 
compute? 
 
P(Cs+1) - P(Cs+1(C1∪C2∪…∪Cs)) (6) 
 
and P(C1∪C2∪…∪Cs+1) is the sum of terms from (2) to (6).   
2.2  Optimization of Design   
In the past decades, the design of systems/components is always one of the main issues of research 
(Kuo and Prasad (2000)).  As known, the optimal design of typical C(k, n?F) system has been 
investigated by several researchers.  For example, Bai et al (1991)?Du and Hwang (1990)?Zuo 
and Kuo (1990) etc.  However, only linear or circular C(k, n?F) systems were studied separately.  
Interested readers are referred to the excellent survey paper by Kuo and Prasad (2000).   
Next, we will define the optimal design problems and notations for our proposed traffic-monitor 
system.  Note that?(1) our traffic-monitor system contains linear and circular C(k, n?F) systems 
simultaneously, and (2) there are multiple types of monitors in our traffic-monitor system.   
 
Assumptions.   
1. There are two possible states for the system, i.e., failed and operative. 
2. Monitor i has ti types, {0,1,…,ti-1}, where 0 denotes no monitor, 1≤i≤n. 
3. The reliabilities and costs of monitors are known. 
4. All monitors in the system are independent. 
5. Any failure of minimal cut of monitors will incur the system failure. 
 
Notations. 
S?the monitor assignment set. 
n?the number of locations of monitors in the system. 
pij?the reliability of monitor i under type j, 1≤i≤n, }1,...,1,0{ −=∈ ii tTj . 
cij?the cost of monitor i under type j, 1≤i≤n, iTj ∈ . 
B?the total budget. 
PF(S)?the system failure probability under S.   
 
The nonlinear mathematical programming for the design problem is? 
 
 8
antigen recognized by antibody is called epitope which acts as an antigen determinant.  Every 
type of antibody has its own specific antigen determinant which is called idiotope.  Moreover, in 
order to produce enough specific effector cells to against an infection, and activated lymphocyte 
has to proliferate and then differentiate into these effector cells.  This process is called clonal 
selection (Weissman and Cooper (1993)) and followed by the genetic operations such that a large 
clone of plasma cell is formed.  Therefore, the antibodies can be secreted and ready to bind 
antigens.  According to above facts, Jerne (1973) proposed an idio-type network hypothesis 
which is based on the clonal selection theory.  In his hypothesis, some types of recognizing sets 
are activated by some antigens and produce an antibody which will then activate other types of 
recognizing sets.  By this way, the activation is propagated through entire network of recognizing 
sets via antigen-antibody reactions.  It is noted that the antigen identification is not done by a 
single or multiple recognizing sets but by antigen-antibody interactions.  The more details are 
referred to Huang (1999?2000).  From this point of view, for solving the combinatory 
optimization problems, the antibody and antigen can be looked as the solution and objection 
function respectively.  
3.1  The Procedure of Immune Algorithm 
The steps of proposed immune algorithm are as follows? 
Step 1. Generate an initial population of strings (antibodies) randomly.  
Step 2. Evaluate each individual in current population and calculate the corresponding fitness 
value for each individual.  
Step 3. Select the best n individuals with highest fitness values.  
Step 4. Clone the best n individuals (antibodies) selected in Step 3.  Note that the clone size for 
each select individual is an increasing function of the affinity with the antigen.  
Step 5. The set of the clones in Step 4 will suffer the genetic operation process, i.e., crossover and 
mutation (Michalewicz (1994)).  
Step 6. Calculate the new fitness values of these new individuals (antibodies) from Step 5.  Select 
those individuals who are superior to the individuals in the memory set, and then the 
superior individuals replace the inferior individuals in the memory set. While the memory 
set is updated, the individuals will be eliminated while their structures are too similar.  
Step 7. Check the stopping criterion, if not stop then go to Step 2.  Otherwise go to next step.  
Step 8. Stop. The optimal or near optimal solution(s) can be obtained from the memory set.  
3.2  The Representation Mechanism 
In our implementation, the integer solutions are represented by strings of binary digits.  Each 
string consisting of substring denotes the types of monitors.  In the above procedures, the clonal 
 10
linear C(k, n?F) system and circular C(k, n?F) system, (ii) we have investigated the optimal design 
of monitors for the traffic-monitor system whose objective function is to minimize the system 
failure reliability subject to available budget.  A new immune algorithm is proposed to solve such 
a problem.  Numerical results have shown that the presented immune algorithm performs well for 
all test problems.  
 
 
Table 1.  Numerical results of top-3 solutions for traffic-monitor system in Fig 4. 
 
Immune Algorithm 
Case I Case II 
B 
Rsys  
(1- PF(S)) 
Top-3 
Assignments 
ITER* 
CPU** 
Total CPU
Rsys  
(1- PF(S))
Top-3 
Assignments 
ITER* 
CPU** 
Total CPU 
200 
0.801152 
0.799694 
0.797070 
1 2 1 1 1 1 2 1 1 1 2 1 1 2 1 1 
1 2 1 1 1 1 1 1 1 2 2 1 1 2 1 1 
1 2 1 1 1 1 2 1 2 1 1 1 1 2 1 1 
91 
2050.157 
2259.954 
0.918918 
0.918710 
0.918553 
1 2 1 1 1 1 2 1 1 2 1 1 1 2 1 1 
1 2 1 1 1 1 2 1 1 1 2 1 1 2 1 1  
1 2 1 1 1 2 1 1 1 2 1 1 1 2 1 1  
68 
1587.203 
2292.843 
300 
0.868353 
0.868344 
0.868097 
1 3 2 1 1 2 2 1 2 2 2 2 2 2 1 1 
1 3 2 1 1 2 2 2 2 2 2 1 2 2 1 1 
1 3 2 1 1 2 2 1 2 2 2 1 2 2 2 1 
25 
  580.000 
2200.375 
0.959896 
0.959895 
0.959775 
1 3 2 1 1 2 2 1 2 2 2 2 2 2 1 1  
1 3 2 1 1 2 2 2 2 2 2 1 2 2 1 1  
1 3 2 1 1 2 2 1 2 2 2 2 1 2 1 2  
69 
1442.328 
2116.297 
400 
0.900304 
0.900304 
0.900269 
1 3 2 1 1 2 2 2 2 2 3 2 2 3 1 2 
1 3 2 1 1 2 2 2 2 2 3 2 2 3 2 1 
1 3 2 1 1 2 2 2 2 2 3 1 2 3 2 2 
50 
1059.547 
2127.031 
0.973505 
0.973501 
0.973421 
1 3 2 1 1 2 2 2 2 2 3 2 2 3 2 1 
1 3 2 1 1 2 2 2 2 2 3 1 2 3 2 2  
1 3 2 2 1 2 2 2 2 2 3 2 2 3 1 1  
48 
1001.297 
2117.953 
500 
0.926279 
0.926278 
0.926061 
1 3 2 1 1 3 3 1 2 3 3 2 2 3 1 1 
1 3 2 1 1 3 3 2 2 3 3 2 1 3 1 1 
1 3 2 1 1 3 3 1 2 3 3 2 1 3 1 2 
29 
  638.094 
2211.312 
0.982500 
0.982500 
0.982500 
2 3 2 1 1 2 3 2 2 3 3 2 2 3 2 2  
1 3 2 1 2 2 3 2 2 3 3 2 2 3 2 2  
2 3 2 1 1 2 3 2 2 3 3 2 2 3 2 2  
36 
  758.343 
2156.515 
600 
0.942814 
0.941058 
0.941058 
2 3 2 2 2 3 3 2 3 3 3 2 2 3 2 2 
1 3 2 2 2 3 3 2 3 3 3 2 2 3 2 2 
2 3 2 2 1 3 3 2 3 3 3 2 2 3 2 2 
16 
  355.907 
2200.797 
0.988254 
0.987711 
0.987403 
2 3 2 2 2 3 3 2 3 3 3 2 2 3 2 2  
2 3 3 2 2 3 3 2 2 3 3 2 2 3 2 2  
1 3 2 2 2 3 3 2 3 3 3 2 2 3 2 2  
28 
  636.594 
2351.438 
700 
0.948853 
0.947413 
0.947413 
2 3 3 2 2 3 3 2 3 3 3 2 3 3 2 2 
1 3 3 2 1 3 3 2 3 3 3 3 3 3 2 2 
1 3 3 1 2 3 3 2 3 3 3 3 3 3 2 2 
38 
  857.968 
2265.843 
0.989900 
0.989900 
0.989899 
2 3 3 2 2 3 3 2 3 3 3 3 2 3 2 2  
2 3 3 2 2 3 3 2 3 3 3 2 3 3 2 2  
2 3 3 2 2 3 3 3 3 3 3 2 2 3 2 2  
34 
  824.219 
2321.813 
800 
0.955288 
0.955288 
0.954965 
2 3 3 2 2 3 3 3 3 3 3 3 3 3 2 3 
2 3 3 2 2 3 3 3 3 3 3 3 3 3 3 2 
3 3 3 2 2 3 3 2 3 3 3 3 3 3 3 2 
38 
  829.485 
2133.500 
0.991600 
0.991600 
0.991599 
2 3 3 2 2 3 3 3 3 3 3 3 3 3 2 3  
2 3 3 2 2 3 3 3 3 3 3 3 3 3 3 2  
2 3 3 2 2 3 3 2 3 3 3 3 3 3 3 3  
73 
1533.266 
2134.782 
ITER*=no. of generations for optimal solution.  CPU**=CPU time (sec) for optimal solution.  Total 
CPU=total CPU time for 100 generations.   
(memory set=5, mutation=0.1, crossover=0.9, population=30, generation=100, affinity =0.1) 
 12
17.Weissman, I.L., Cooper, M.D.: How the Immune System Develops. Scientific American 269 
(1993) 33-40.  
18.Zuo, M. J., Kuo, W.: Design and Performance Analysis of Consecutive k-out-of-n Structure. 
Naval Research Logistics Quarterly 37 (1990) 203–230. 
 
