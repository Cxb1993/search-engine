 II 
 
摘要 
三維幾何模型資料在國家所提倡的數位內容計畫中為一項重要的資料型態，在現今的電腦
動畫製作，主流的創造方式為自由的組合經由搜集而來的運動資料，如動作擷取器(Motion 
Capture)所取得的運動資料，應用這些真實的資料來創造出全新的電腦動畫，更能增加整個
動畫的擬真性，而這些製作好的動畫資料，因為較細緻，所以網格模型資料量大且畫格數
量多。由數個關鍵靜態三維幾何模型所組成的動態模型(animatable model)在目前的學術界
或是產業界（例如：電影或遊戲方面）廣泛使用，為了最佳化執行效率與儲存空間，以期
能將動畫資料應用在互動式環境上，本研究計畫提出經由分析動態網格的運動來進行網格
簡化的方法。此外，我們提出使用基因演算法來進行關鍵畫格提取的方法，經由設計過的
基因編碼與演化動作，讓系統自動從動態網格資料中提取出有意義的關鍵畫格，使動畫資
料能更有效率的儲存、重覆使用與瀏覽。 
本計劃為兩年期計劃，我們將發展一3D動畫資料簡化演算法及關鍵畫格擷取，此計畫將會
有以下研發重點： 
1. 關鍵畫格提取：自動根據畫格的重要性來提取出一組有意義的關鍵畫格。將關鍵畫格的
提取描述成一個最佳化的數學問題，並且採用基因演算法 (Genetic Algorithm) 來尋找最
佳解。因為提取出來的關鍵畫格能經由許多數值的方法重構出其它的非關鍵畫格，所以
可以有效的提升儲存效率，整段動作只需儲存分析出來的關鍵畫格，其餘非關鍵畫格並
不需要儲存 
2. 3D動畫資料之簡化：我們計畫發展一個與視角無關並且與動畫物體姿勢無關之3D動畫
資料簡化，我們將採用目前最常被研究學者所使用的模型簡化方法 – quadric error 
metric，但此方法僅適用於靜態三維網格物體簡化，因此我們併入了不同姿態之動畫資
訊來強化與擴充此方法以完成3D動畫資料之簡化。 
3. 加速動態網格的分割：動態網格的分割是一項十分重要的基礎研究，如何將動態網格分
割成數個Near-rigid 的部份，是主要的目標。我們利用網格物體簡化架構來加速動態網
格分割。 
關鍵字：三維幾何模型簡化、多層解析力表示法、關鍵畫格提取、基因演算法、動態網格
分割 
 IV 
 
目錄 
中文摘要…………………………………………………………………………………………..II 
英文摘要…………………………………………………………………………………………III 
目錄………………………………………………………………………………………………IV 
一、前言……………………………………………………………………………………………1 
二、文獻探討………………………………………………………………………………………1 
2.1 網格簡化………………………………….………………………………………………1 
2.2 關鍵畫格提取………………………………….…………………………………………5 
三、研究方法………………………………….………………………………………………….7 
3.1 動態網格的簡化演算法………………………………………………………………….7 
3.1.1 分析網格運動……………………………………………………………………7 
3.1.2 面重要性計算……………………………………………………………………..9 
3.2 關鍵畫格的提取…………………………………………………………………….…10 
3.2.1 基因演算法………………………………………………………………………11 
3.2.2 轉化成最佳化問題………………………………………………………………12 
3.2.3 基因編碼…………………………………………………………………………13 
3.2.4 評估標準…………………………………………………………………………13 
3.2.5 初始化基因族群…………………………………………………………………15 
3.2.6 複製、交叉配對與突變…………………………………………………………15 
 1 
 
一、前言 
現今三維幾何模型已廣泛的應用在我們生活和我們的生活息息相關，不過由三維掃描器所
建構完成的三維幾何模型會有資料量過多的問題，過多資料量的動畫模型對於後段的數位
幾何處理(Digital Geometry Processing)很明顯造成執行效率不彰，近幾年來電腦圖學相關的
研究人員對單一模型簡化的議題(Level-of-Detail)均有相當深入的研究，但對於需求日益增
高的動畫模型簡化的議題在國內外目前少有研究，因此在本計畫中，我們計畫去發展一個
與視角無關並且與動畫物體姿勢無關之 3D 動畫資料簡化演算法與關鍵畫格提取演算法。
本計畫為期兩年，目前第一年預定的 3D 動畫資料簡化演算法已完成，內容與結果詳細描
述如下： 
二、 文獻探討 
2.1 網格簡化 
網格模型簡化法是目前許多國內外研究單位研究主題之一，如微軟美國研究中心的Hoppe
研究團隊提出多層次精細度漸進式網格模型(Progressive Mesh)技術[Ho96]以及觀視點相依
之多層次精細度模型(View-dependent LOD)的方法[Ho97]；卡內基美濃大學Garland等研究人
員提出的用quadric error metric來快速評估簡化邊之候選[GH97]；以及國內台大歐陽明教
授、陳炳宇教授、交大莊榮宏教授在這方面皆有傑出的研究結果。網格簡化的主要目的是
要降低網格模型的資料量並且能各維持網格模形的外觀。我們可將簡化方法分為三大類：
頂點移除(Vertex Decimation)、頂點叢集(Vertex Clustering)、邊線退化(Edge Collapse)與模型
細化(Mesh Subdivision)，下面對於這三大類簡化方法做一簡單介紹，並且對目前較少的動
畫資料簡化也做一介紹。 
頂點移除(Vertex Decimation)：Schroeder et al. [SZL92] 描述一網格簡化演算法，藉由頂點
移除方式來完成網格簡化，此研究團隊所提出的方法是以頂點附近局部區域的幾何形狀的
特徵程度做為考量依據來反覆地選取一候選頂點，此一候選頂點為下一步欲移除的頂點，
每次頂點移除程序都包含了兩個步驟，第一步驟為頂點移除，此步驟會將頂點與頂點相鄰
 3 
 
何模型的頂點重新取樣的方法。如果三維空間中許多接近的頂點在投影到影像平面之後，
這些頂點幾乎圍繞在同一個像素附近，因此這些頂點很直接的被認定為用一個代表頂點來
取代，如此作法，不但可以使得幾何模型的複雜度降低，對於輸出的品質效果也並不會有
太大的影響。頂點叢集法就是利用這種觀念簡化原始模型的。一般做法上，先將原始模型
的方形邊界(Bounding Box)做均勻的空間分割(Uniform Spatial Subdivision)，一般是使用八分
樹(Octree)來做均勻切割，使得網格模型所佔據的空間分成好幾個小細格(Cell)，然後在每個
小細格中選擇一個最具代表性的頂點來替代同細格內的其他頂點，最後把所有代表小細格
的頂點重新三角化，獲得複雜度較低的幾何模型。上個段落所提的反覆的進行邊線退化策
略也可視為頂點叢集運算的一種，一個邊線退化可看成兩個頂點叢集成為一個頂點叢集，
而網格模型多層解析力樹狀結構也可簡單的藉由反覆進行頂點叢集運算來完成。Carr et al. 
[CH04] 提出對網格模型多層解析力樹狀結構重新頂點叢集方法，此研究團隊是利用樹的旋
轉與樹節點轉換來完成。 
與三維網格物體簡化相關且相當重要的一項研究為三維物體多重解析力分析，由一個原始
的 3D 物體 M 建立出一個低解析度物體 MJ，這樣的一個解析度物體和原始物體是差不多
的，但是它的複雜度和精細度卻可以隨需要而作調整，也就是由比較少的資料所構成的。
建一個多重解析力的 3D 物體一般都會先建立一個最低解析度物體 M0，也就是最粗糙的一
個物體，再由這個最低解析度物體和原始物體之間來求不同解析度的物體。Eck et al. 
[EDDH95]在 Siggraph’95 提出了一個 3D 物體多重解析度分析的方法，此方法主要可以分為
三個部分，第一個部分是將原來的 3D 物體作分割的動作，此做法是在原始的 3D 物體上均
勻的撒點並得到其 Voronoi diagram，然後藉由 Voronoi diagram 將這些點三角化而得到一個
三角網格，此三角網格就當成最低解析力物體。第二個步驟是對之前所產生的每個三角形
區塊進行攤平的程序，也就是將原始物體中每一點對應到最低解析度物體的三角形上某一
點的關係求出來，這部分所用的方法為 Harmonic maps。有了最低解析度物體與其攤平圖的
關係之後，最後一個步驟是對最低解析度物體上的三角形作 recursive 4-to-1 splits，直到三
角形被細分到和原始物體的誤差直降到一個給定的容忍值以下，這樣就得到了一個解析度
介於最低解析度物體和原始物體之間的一個物體。而另一研究 Lee et al. [LDSS98]的做法則
 5 
 
和，這種作法雖然能盡量保持運動狀況，但某些運動特徵僅在少數幾個畫格中出現，造成
這些運動特徵使用該方法無法完整保留。此外，若只是單純的分別針對每個畫格的網格作
靜態網格的簡化，則會造成每個畫格的網格資料相連性不同，播放動畫時會有不連續與跳
動的情況產生。在 Kircher et al. [KG05]所提出的方法中，為了要達到保留更多的幾何特徵，
所以該方法是針對單一畫格來進行最佳的簡化，雖然方法中有考慮相鄰畫格的相似關係，
盡量消除不連續的情況，但最後的結果在視覺上仍可以輕易看出有跳動的情況產生，而非
十分平滑的運動。我們的方法能在動態網格簡化後，每個畫格的網格資料依然保持相同的
連接性，而且外觀上的特徵又能依運動的情況以予保留，同時兼顧外觀與運動情況。 
在 Houle et al. [HP01]所提出的方法中，主要針對有骨架的動態網格，他們組合 漸進式網格
結構(Progressive Mesh)的觀念與骨架的資訊來簡化動態網格，製作連續且平滑的 多層次解
析力(Level of Detail, LOD)。此外，DeCoro et al. [DR05]所提出的方法，在進行簡化時也需
要分析骨架的運動資料，整個演算法亦是基於 QEM 的誤差計算法，並且同時參考骨架的
運動進行動態網格的簡化。然而，以上兩篇所提出的方法皆限制在擁有骨架資訊的動態網
格。 
2.2 關鍵畫格提取 
目前的電腦動畫製作，主流採用的設計方式為美術人員自由的組合經由動作擷取器所取得
的運動資料，應用這些真實的資料來創造出全新的電腦動畫，更能增加整個動畫的擬真性。
由於動作擷取器所取得的運動資料往往是畫格數極大的資料，需要非常大量的儲存空間。
因此，提取這些運動資料的關鍵畫格便能更有效的儲存、重組與瀏覽資料。此外關於影片
的摘要功能，近年來已經成為電腦視覺中非常重要的研究領域，相關的應用十分廣泛，如
快速瀏覽影片、提供簡便的方式尋找影片中使用者有興趣的部份等。而這些影片的摘要功
能，主要便是經由影片的分析進而提取出有意義的關鍵畫格。換句話說，關鍵畫格的提取
是影片摘要中必要的基礎演算法。然而，在三維的電腦動畫中，非常少見相關的演算法被
提出來。 
在三維的電腦動畫中，與關鍵畫格提取較有相關的領域為分析動畫的 Principal 
 7 
 
後重構出來。此外，Huang et al. [HCHY05]中提出的方法有些地方相似於 Alexa et al. [AM00] 
的方法，但該方法並不是經由運算來產生 Principal Components，經由分析所有畫格來提取
出關鍵畫格，這些關鍵畫格是確實的存在於動態網格動作中。首先，該研究將動態網格資
料中的所有畫格分成兩類，一類是關鍵畫格；另一類是非關鍵畫格。根據這些指定的關鍵
畫格，我們可以計算出要重構非關鍵畫格的權重，由於重構出來的非關鍵畫格與原始的畫
格會有誤差產生，因此這個誤差值便可以用來評估目前關鍵畫格的優劣。 
在演算法一開始時，會將所有的畫格歸類為關鍵畫格，在這些關鍵畫格中，使用貪婪演算
法(Greedy Algorithm)來尋找出最適合歸類為非關鍵畫格的，尋找的依據為上述的誤差值。
接著便以此類推慢慢找出非關鍵畫格，直到誤差值超過使用者所指定的容忍值便停止演算
法。由於在演算法中，會不斷的計算重構用的權重，計算時需要進行矩陣的逆矩陣計算，
因此需要的計算時間與記憶體空間較大，所以在速度方面的進步有限。該研究有提到，在
速度上雖然較 Alexa et al. [AM00] 的方法快，但由於提取出來的物件，僅限定於原始動作
中有存在的畫格，因此經由這些關鍵畫格重構出來的動作，與原始動作的誤差會較大。但
是，壓縮並非關鍵畫格的主要應用領域，關鍵畫格能使動畫可以有效的重組與瀏覽，更可
以達到動畫的摘要，此外動畫的搜索與比對更需要關鍵畫格的輔助。 
三、 研究方法 
3.1 動態網格的簡化演算法 
在許多互動式環境的應用方面，如虛擬實境、電玩遊戲等，需要擁有流暢的執行效率。因
此，若能將網格的資料進行最佳的簡化，便能將整個場景的描繪時間大大縮短，達到流暢
的執行效率，讓使用者能感受即時互動的樂趣。簡化後的網格資料，三角形的數量少，會
在外觀上有所失真。若是動態的網格，更有可能因為三角形減少，造成運動的情況與原始
差異很大。所以，在簡化網格的過程中，要優先簡化視覺上較不重要與運動量低的部位，
讓最後的結果能擁有外觀上的近似與保持運動情況。因此，如何分析動態網格資料的運動
情況，便是這個問題最大的挑戰所在。此外，動態的網格擁有多個畫格，若只是單純的分
 9 
 
  RRRRRRRi
fffffff
i
vvvvvvV
vvvvvvV
141312
141312


        (4) 
最後我們可以得到變形量的公式如下： 
  1 Rififi VVnDeformatio          (5) 
在某個畫格 (f) 時，兩個相鄰三角形 (i 與 j) 的相對於參考畫格的變形差異量 
(Deformation Difference)，可由下列公式計算： 
2
,
f
j
f
i
f
ji nDeformationDeformatioenDifferencDeformatio    (6) 
上述公式主要是考慮這兩個相鄰三角形在各個畫格 (f) 的變形差異量。在計算完每個畫格
這兩個相鄰三角形的變形差異量後，還要選出所有裡面最大的，來作為最後的整體變形差
異量。如下面的公式所示： 
 f jifji enDifferencDeformatioenDifferencDeformatio ,, max    (7) 
若兩個相鄰三角形的整體變形差異量大時，表示在該區域的整體網格變形量較大；反之，
整體變形差異量小時，表示該區域的整體網格變形量較小。因此，我們便可以由計算變形
差異量，來分析網格運動的情況，並且根據分析結果來決定每個三角形的重要程度。 
3.1.2 面重要性計算 
在分析完成運動後，便可以根據分析後結果來為網格上的每個三角形決定重要性。在網格
中的三角形 (我們又可以稱為面)，根據與相鄰面的整體變形差異的平均來作為該面的重要
性 (Weight)，計算的公式如下： 
 
 kp
pk
p enDifferencDeformatioWeight ,
Adjacency
Average

       (8) 
運動量小的面會擁有較小的重要性，重要性較小的面，在簡化的過程中，會優先作簡化的
動作；反之重要性較高的面，會優先保留。經由推導，我們可以將面的重要性加入 Garland 
et al. [GH97]的 Quadric Error Metrics，並且保持原有的特性。在該研究中，使用矩陣 (Qp) 來
表示每一個面，並為每一個網格上的點，計算出 Error Matrix，用來快速評估誤差程度，Error 
Matrix 的計算方法為該點所有相鄰面矩陣的總和。在 Garland et al. [GH97]中，原始的 
 11 
 
於所有畫格的數量是相對少數的。因此，如何找出符合需求的關鍵畫格，正是我們目前所
要解決的問題。 
3.2.1 基因演算法 
基因演算法(Genetic Algorithm)是最佳化工程計算常用的一種演算工具，基因演算法源自於
自然界中 "物競天擇，適者生存" 的特性，模擬生物間的競爭，倖存者得以繁衍下一代的
觀念，應用於最佳化工程之計算時，以隨機方式同時產生多組解，較佳的解將被留下運算，
如此多次疊代即可求出最佳解。 
 
圖 2: 基因演算法流程圖 
傳統之演算法往往由幾個起始點，依照一定的數學模式產生下一次疊代值，如此反覆計算
求得最佳解；而基因演算法以隨機方式產生許多的點，同時搜尋最佳解，因為在每一次疊
代過程皆是取相對最佳的點，因此只能找到最接近之最佳解。不過因為其他演算可能也只
找到局部最佳解而不能保證是真正的最佳解。所以基因演算法是相當不錯的最佳化運算工
具。 
 13 
 
3.2.3 基因編碼 
基因族群由一群基因所組成，每個世代的族群大小是相同的。每個基因代表著本問題的一
組解答，根據此解答的好壞，計算出該基因的適應力，解答較佳的基因適應力較佳。接著
經由 "物競天擇，適者生存" 的規則，逐漸淘汰適應力較低者，也就是解答較差的基因；
另一方面，根據交叉配對與突變的規則，慢慢演化出適應力較佳者，也就是解答較佳的基
因。在不斷地進行疊代後，整體基因的適應力會逐步提升，最後逼近最佳的解答，甚至達
到最佳的解答。 
 
圖 4: 基因編碼示意圖 
我們將一組解答使用二元字串來表示，字元的個數為原始總畫格數，每個字元便代表著一
個畫格，由左至右依序代表著第一個畫格至最後一個畫格。若該畫格為關鍵畫格，代表的
字元為 1；若該畫為非關鍵畫格，則代表的字元為 0。 
 
圖 5: 基因族群示意圖 
每個基因的表示方式就如同上述的二元字串，使用二元字串來編碼基因，是最簡單也最常
見的編碼方式。 
3.2.4 評估標準 
在基因族群中的每組基因都代表著一組解，該解的好壞，我們使用上述的適應力 (Fitness) 
 15 
 
3.2.5 初始化基因族群 
初始化基因族群在整個基因演算法中並非最重要的部份，但如果有著良好的初始化，能大
大的加速逼近最佳解的速度，甚至更進一步的逼近最佳解。但是，若使用一般的逼近法來
解出一些區域最佳解，然後使用這些解來當成初始的基因族群，卻會造成初始化的耗費時
間過高，反而沒辦法以最高速逼近最佳解。正如上所述，因此我們提出一個適合本問題的
特殊初始化方法，可以兼顧品質與速度。整個問題的目標在於關鍵畫格的提取，因此我們
假設，若每間隔一個畫格便提取一個關鍵畫格，能得到一組比經由亂數產生的解還好許多。
因為動畫是連續的，所以相鄰的兩個畫格僅會有些許的差異，若同時被取出來當成關鍵畫
格，通常不是最佳的解。 
 
圖 6: 特殊初始化基因示意圖 
在整個初始的基因族群中，百分之八十的基因採用最普遍使用的亂數方法產生，而剩下的
百分之二十，使用上述的基因來填補。經由實驗發現，這種初始化的方式能有效增加逼近
速度，因為能降低相鄰畫格皆被選為關鍵畫格的機率。初始化基因族群的示意圖如下： 
 
圖 7: 初始化基因族群示意圖 
3.2.6 複製、交叉配對與突變 
在初始化基因族群完成後，基因演算法採用三種運算子來進化至下一個世代。這三種運算
子分別是複製、交叉配對與突變。這種的演化方式與自然界的進化很像，如複製就像是無
性生殖一樣，將上一代的基因完成複製下來；交叉配對便是我們人類交配後所產下的下一
 17 
 
主要目的在於微調該關鍵畫格的選擇，因為也許他的左邊或右邊會有更適合的畫格。移動
方向的決定採用亂數法，但為了能更快逼近最佳解，我們設定有 3%的機率會經由計算來決
定移動方向，強迫直接選擇最佳的方向。這種突變方法有著調整關鍵畫格位置的性質，能
夠增加最佳解出現的機率，又不會過度介入整個演化的過程。 
 
圖 11: 第二種基因突變示意圖 
在定義完成這三種運算子之後，我們便可以使用這些運算子來產生下一世代的基因族群，
持續的進行演化，最後逼近最佳解。 
3.2.7 世代演化 
演化時要繁殖的母代配對會根據適應力的大小來選出，適應力大的基因越容易被選出來繁
殖，此種選擇的方式被稱為「天擇原理」。接著使用上述的三種運算子來不斷的繁殖與演化，
讓整個演化符合 "物競天擇，適者生存" 的規則。在每個世代演化完成後，我們會根據適
應力挑出最好的基因，也就是該次疊代最佳的解。為了使整個基因演算法進行更流暢，每
世代所挑出的適應力最強基因，會直接複製至下一個世代，這樣便能保證下一個世代適應
力最強的基因不會差於上一個世代，讓整個演化能一直逼近最佳解而不會偏離。在演化開
始前，要先設定交叉配對率(Crossover Rate)與突變率(Mutation Rate)，通常突變率是很低
的。如此一代一代的演化下去，將產生適應力值很高的基因，此基因便是我們需要的解。  
3.2.8 參數設定與終止條件 
在基因演算法進行最佳化問題求解的過程中，需要設定下面的幾個參數。 
 族群大小 (Population Size) 
 19 
 
 
 
圖 12：各組測試資料運動分析結果圖。 
經由這些運動分析的結果，才能正確的對動態網格進行簡化，兼顧運動資訊與外觀上的保
留。由上面各組測試資料的分析結果，可以發現重要性較高的部份多在關節與運動量大的
部份，表示我們的演算法能正確分析動態網格的運動情況。 
4.2 關鍵畫格擷取結果 
如上述章節中所提，所有的實驗結果皆採用固定的參數。族群大小設定為 1000，交配率為
0.95 (95%)，突變率為 0.05 (5%)。終止條件為族群內 50% 的基因相同，且經由 100 代演化
而最佳解沒有改變時。圖 13-15 為本方法執行結果，而表 1 與圖 16 詳列相關執行時間與比
較資訊。 
 
圖 13. 關鍵畫格擷取結果(Chicken animation) 
 21 
 
為了比較簡化前後的網格分布狀況，因此我們為網格中的每個三角形塗上不同的顏色，方
便大家區別。簡化後的動態網格不僅能保持外觀上的近似，更可以保留整體的運動狀態。 
 
圖 17: Chicken 簡化前後結果比較圖 (由左至右分別為 Chicken 的第 1、97、250、276 個
畫格)。 
 
圖 18: Horse-Gallop 簡化前後結果比較圖 (圖中的網格為 Horse-Gallop 的第 1 個畫格)。 
簡化後的 Horse-Gallop 能保持原來奔跑的動作，甚至尾巴的擺動也能完整保留。 
 23 
 
 
圖 22: Horse-Collapse 簡化前後結果比較圖 (由左至右分別為 Horse-Collapse 的第 1、26、
53 個畫格)。 
與 QEM [GH97] 簡化方法比較結果 
下圖左邊的結果為採用 QEM 的方法來進行簡化，在簡化第一個畫格後，將簡化的順序套
到其他畫格，由於並沒有考慮整體的運動情況，所以會造成其他的畫格簡化後，運動的情
況被完全破壞。而我們的方法簡化出來的結果，能正確保留外觀與運動的情況，如在下圖
右邊的結果所示。 
 
圖 23：簡化結果比較圖。 
為了提供更客觀的比較，我們採用 P. Cignoni et al. [CRR98] 所提出的測量方式來計算簡化
後的誤差值，所有的誤差值皆採用 Metro 計算而來。這項誤差值的計算，也有應用在 H. 
Briceno et al. [BSM*03] 與 Guskov and Khodakovsky et al. [GK04] 中。下圖為我們的方法與
 25 
 
 Y.S. Wang, C.-H. Lin and T.-Y. Lee: Interactive Model Decomposition Using Protrusive 
Graph. International Journal of Innovative Computing, Information and Control, Vol. 4, No. 8, 
Aug. 2008. 
 T.-Y. Lee, C.-H. Lin, K.-K. Chu, Y.-S.n Wang, S.-W. Yen and C.-R. Tsai,"Mesh 
Pose-Editing Using Example ", accepted to Journal of Computer Animation and Virtual 
Worlds, 2007. 
 T.-Y. Lee, C.-H. Lin, Y.-S. Wang and T.-G. Chen, “Animation Key-frame Extraction and 
Simplification Using Deformation Analysis”, accepted to IEEE Transactions on Circuits and 
Systems for Video Technology 2008 (SCI, EI). 
 陳俊元、林昭宏: 智慧型基因演算法及差分坐標. 第27屆測量及空間資訊研討會, 2008。 
 賴泓瑞、陳俊元、林昭宏: 以代數形式建立基本模型樣版對於光達點雲建物建模. 第27
屆測量及空間資訊研討會。 
參考文獻 
[AM00] Alexa, M. and Muller, W.: Representing animations by principal components. 
Computer Graphics Forum, 19(3):411--418, August 2000. 
[CCMS96] Ciampalini, A., Cignoni, P., Montani, C. and Scopigno, R.: Multiresolution 
Decimation based on Global Error. Tech. Report C96-021, CNUCE-C.N.R., Pisa, 
Italy, Jul.1996. 
[CRS98] Cignoni, P., Rocchinim, C. and Scopigno, R.: Metro: measuring error on simplified 
surfaces. In Proc. Eurographics, volume 17(2), pp. 167--174, June 1998. 
[CH04] Carr, N. A. and Hart, J. C.: Two algorithms for fast reclustering of dynamic meshed 
surfaces. In Eurographics Symposium on Geometry Processing, The Eurographics 
Association, pp. 229–239, 2004. 
[DR05] Decoro, C. and Rusinkiewicz, S.: Pose-independent simplification of articulated 
meshes. Proceedings of the 2005 symposium on Interactive 3D graphics and games, 
Washington, District of Columbia, pp. 17-24, April 2005. 
[DZSS02] Dimitrova, N., Zhang, H.-J., Shahraray B., Sezan I., Huang, T. and Zakhor, A.: 
Applications of video-content analysis and retrieval, IEEE Multimedia, Vol.9,  Issue 
3,  July-Sept. pp. 42 – 55, 2002. 
[EDDH95] Eck, M., DeRose, T., Duchamp, T., Hoppe, H., Lounsbery, M. and Stuetzle, W.: 
 27 
 
[JT05] James, D. L. and Twigg, C. D.: Skinning mesh animations. ACM Transactions on 
Graphics (SIGGRAPH 2005), 24(3), August 2005. 
[Jo02] Jolliffe, I. T.: Principal Component Analysis. Springer, Berlin Heidelberg New York, 
2002. 
[HKO01] Hyvarinen, A., Karhunen, J. and Oja, E.: Independent Component Analysis. Wiley, 
New York, 2001. 
[KG03] Kho, Y.and Garland, M.: User-guided Simplification. Proceedings of the 2003 
symposium on Interactive 3D graphics. 
[KG04] Karni, Z. and Gotsman, C.: Compression of soft-body animation sequences. 
Computers and Graphics, vol. 28, pp. 25--34, 2004. 
[KG05] Kircher, S. and Garland, M.: Progressive Multiresolution Meshes for Deforming 
Surfaces. ACM/Eurographics Symposium on Computer Animation, pp. 191–200, 
2005. 
[KT96] Kalvin, A.D. and Taylor, R.H.: Superfaces: Polygonal mesh simplification with 
bounded error. IEEE Comput. Graph. Appl. 16(3), pp. 64–77, 1996. 
[LDSS98] Lee, A. W. F., Dobkin, D., Sweldens, W. and Schroder, P.: MAPS: Multiresolution 
Adaptive Parameterization of Surfaces. In Processings of SIGGRAPH 1998. 
[LDW97] Lounsbery, M., DeRose, T. and Warren, J.: Multiresolution Analysis for Surfaces of 
Arbitrary Type. ACM TOG, 16(1), 1997. 
[LE97] Luebke, D. and Erikson, C.: View-dependent simplification of arbitrary polygonal 
environments. Proceeding of ACM SIGGRAPH `97, pp. 199–208, 1997. 
[LL02] Lee, Tong-Yee, Lin, Chao-Hung, “Feature-guided Shape-based Image Interpolation”, 
IEEE Transactions on Medical Imaging, Vol. 21, No. 12, pp. 1479-1489, Dec. 2002. 
[LL05] Lin, Chao-Hung and Lee, Tong-Yee: Metamorphosis of 3D Polyhedral Models 
Using Progressive Connectivity Transformations. IEEE Transactions on 
Visualization and Computer Graphics, Jan./Feb. Issue, Vol. 11, No.1, pp. 2-12,2005. 
[LLL01] Lee, Tong-Yee, Lin, Chao-Hung and Lin, Han-Ying: Computer-aided Prototype 
System for Nose Surgery (Rhinoplasty), IEEE Transactions on Information 
Technology in Biomedicine, Vol. 5, Issue 4, pp. 271-278, Dec. 2001. 
[LLLS99] Lee, Tong-Yee, Lin, Ping-Hsien, Lin, Chao-Hung, Sun, Yung-Nein and Lin, 
Xi-Zhang: Interactive 3D Virtual Colonoscopy System. IEEE Transactions on 
Information Technology in Biomedicine, Vol. 3, No.02, pp. 139-150, 1999. 
[LT01] Lim, I.S. and Thalmann, D.: A key-posture extraction out of human motion data. In: 
Proceedings of the 23rd Annual International Conference of the IEEE Engineering in 
 29 
 
[UFGB99] Uchihashi, S., Foote, J., Girgensohn, A., Boreczky, J.: Video manga: generating 
semantically meaningful video summaries. In: Proceedings of the 7th ACM 
International Conference on Multimedia (Part 1), pp. 383–392. ACM Press, New 
York 1999. 
[XV97] Xia, J. C. and Varshney, A.: Dynamic view-dependent simplification for polygonal 
models. In Proc. 7th conference on Visualization, IEEE Computer Society Press, pp. 
327–ff, 1997. 
 
