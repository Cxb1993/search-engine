2 
針對含有未知值的測試向量，使用掃描單元重新排列最小化掃描平移功率 
“Scan-Cell Reordering for Minimizing Scan-Shift Power Based on Non-Specified Test Cubes” 
計畫編號：NSC97-2221-E-009-173 
執行期間：98 年 8月 1 日 至 99 年 7 月 31 日 
主持人：趙家佐 交通大學電子工程系助理教授 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
4 
modern designs, this increasing power consumption has 
become one of the biggest barriers to effective scan-based 
testing. 
 
A common practice to lower the power consumption 
during scan-based testing is to reduce the number of scan 
cell’s signal transitions, which can be classified into the 
following three types: (1) capture transitions – generated 
by the same scan cell’s value difference between the 
scan-in pattern and the corresponding captured response, 
(2) scan-out transitions – generated by two adjacent scan 
cells’ value difference between their scan-out response, 
and (3) scan-in transitions – generated by two adjacent 
scan cells’ value difference between the scan-in patterns. 
The first transition type is associated with the capture 
power and the last two types are associated with the 
scan-shift power. 
 
In order to reduce the capture transitions, specialized 
ATPG techniques [4][5][6][7] are proposed to generate 
test-pattern vectors which have a minimal hamming 
distance with their corresponding test-response vectors. 
Because the don’t care bits in their test cubes are fully 
specified for minimizing the capture transitions, the above 
ATPGs preclude the possibility for further test 
compaction or compression, and hence may result in a 
larger test set. 
 
Methods are proposed to utilize the don’t-care bits to 
minimize the scan-in transitions for a given test set 
[8][9][10][11]. [8] Proposed a don’t-care-filling technique, 
named MT-fill, guaranteeing that the scan-in transitions 
generated by its filled patterns are minimum for the given 
test set and scan-cell ordering. The methods in [8][9][10] 
reduced the test power as well as the test data volume 
based on build-in decompression hardware. [11] Added 
Xor gates or inverters along the scan paths to minimize 
the scan-in transitions. However, none of [8][9][10][11] 
considered the scan-out transitions simultaneously. 
 
Another technique to reduce the scan-shift power is to 
partition the scan cells into multiple groups and activate 
only one group at a time during the scan-shift cycles 
[12][13][14][15][16][17]. It can limit the concurrent 
transitions in a small portion of the CUT. The partition 
methods require special control architectures to the scan 
designs, such as gated clocks [12], central control unit for 
each group’s clock signal [13][14], or specialized scan 
cells along with multiphase generator [16]. [17] Further 
minimizes the capture power by only capturing responses 
for certain selected groups of scan cells. It requires a 
customized ATPG and discards a significant portion of 
responses. 
 
Methods in [18][19] change the order of scan cells 
along the scan paths to minimize both scan-in and 
scan-out transitions based on given test patterns and 
responses. This scan-cell-reordering technique saves the 
scan-shift power, but sacrifices the opportunity of 
optimizing the wire length of scan paths during the APR 
stage [22][23]. Methods in [20][21] further consider the 
routing overhead during the reordering process such that 
the imposed routing overhead can be limited. However, 
one serious disadvantage of the existing scan-chain- 
reordering techniques [18][19][20][21] is that the exact 
test patterns and responses need to be obtained in advance. 
As the result, no don’t-care bits can be utilized for a  
further reduction to scan-in transitions or test data volume, 
such as [8][9][10][11]. 
 
In this project, we attempt to develop a 
scan-cell-reordering scheme which can minimize the 
scan-out transitions while preserving the don’t-care bits in 
the test cubes for a later optimization of scan-in 
transitions using MT-fill [8]. To achieve this goal, we   
first need to predict the correlation between the response 
values before specifying don’t-care bits. This response 
correlation is an index to the possible scan-out transitions 
between scan cells and can be used as guidance to the 
reordering process. Second, we consider the impact of 
scan-cell reordering on the result of MT-fill and 
simultaneously optimize the scan-in and scan-out 
transitions. Next, we selectively inverse some connections 
between scan cells such that a low response correlation 
(or pattern correlation) between two scan cells can be 
turned into a high correlation, which in turn reduces the 
probability that scan-shift transitions occur along the scan 
paths. Last, we consider the routing overhead of scan 
paths during the scan-cell reordering process, and thus the 
tradeoff between scan-shift power and routing overhead 
can be properly controlled. In addition, we propose a 
pattern reordering scheme to minimize the signal 
transitions resulted from the value difference between the 
first bit of a scan-in pattern and the last bit of its previous 
scan-out response after the scan-cell reordering scheme is 
applied. All the proposed methods are validated through 
large ISCAS and ITC benchmark circuits. 
 
2. MOTIVATION 
During the scan-based testing, the total power 
consumption of the CUT is highly correlated with the 
total number of signal transitions on the scan cells [8]. In 
this project, we use the number of signal transitions 
occurring on scan cells to represent the power of the 
whole CUT. The proposed scan-cell-reordering scheme 
focuses on reducing the total scan-shift power, i.e., 
reducing the total scan-shift transitions. The capture 
6 
Given a test pattern and the scan-cell order for the 
scan chain, we can use the weighted transition count 
(WTC) [8] to calculate the number of scan-in and 
scan-out transitions generated during the scan-shift cycles. 
The WTC considers not only the value difference 
between the patterns or responses of two adjacent scan 
cells, but also the number of transitions that this value 
difference generates during the scan-shift cycles. 
Equation 1 and 2 define the WTCin(i) and WTCout(i) to  
calculate the scan-in transitions and scan-out transitions 
generated by the ith pattern, respectively. 
 
(1) (1) 
 
(2)
  
In equation 1 and 2, s denotes the total number of scan 
cells; PD(j) (RD(j)) denotes the value difference between 
the scan-in pattern (scan-out response) of the jth cell and 
the j + 1 cell; WPD(j) denotes the number of scan-in 
transitions generated by the pattern-value difference PD(j) 
when shifting in the corresponding pattern values from 
the scan-chain input to the j + 1 cell; WRD(j) denotes the 
number of scan-out transitions generated by the 
response-value difference RD(j) when shifting out the 
responses from the j cell to the scan- chain output. 
 
In the WTC calculation, WPD(j) = j, implying that a 
pattern-value difference can generate more scan-in 
transitions if this value difference occurs closer to the 
scan-chain output. On the contrary, WRD(j) = s−1−j, 
implying that a response-value difference can generate 
more scan-out transitions if this value difference occurs 
closer to the scan-chain input. Figure 1 shows an example 
of the WTC computation on a 6-cell scan-chain, assuming 
that three value differences occur between cells (C1, C2), 
(C2, C3), and (C5, C6) for both the test pattern and its 
response. 
 
Equation 3 calculates the total number of transitions, 
WTCtotal, generated by a given test set with m test 
patterns. 
 
 
                                                                 (3)
 
 
 
 
 
 
 
 
 
(a) Scan-in operation 
Scan-out operation 
Fig. 1 Calculation of scan-in and scan-out WTC. 
 
4. SCAN-CELL REORDERING CONSIDERING 
ONLY RESPONSE CORRELATION 
 
A. Detailed Steps of Reordering Scheme 
We introduce a scan-cell reordering scheme, named 
RORC (ReOrdering considering Response Correlation), 
which first reduces the scan-out transitions by minimizing 
the response correlations while preserving all don’t-care 
bits in the test patterns. Then, the scan-in transitions are 
further minimized by specifying the don’t-care bits with 
MT-fill. Figure 2 shows the flow of RORC, which 
consists of five main steps. The detail of each step is 
described in the following subsections. 
Fig. 2. Main steps of the proposed reordering scheme 
RORC. 
 
1) Obtain Response Correlations: A simulation-based 
method is applied to sample the response correlations 
between each pair of scan cells. However, the filling of 
don’t-care bits in RORC is not purely random since the 
MT-fill technique will be applied later in RORC. 
Therefore, in this step, we randomly generate the 
scan-cell ordering multiple times, specify don’t-care  
bits using MT-fill based on each generated scan-cell 
     
1
0
*
s
in PD
j
WTC i PD j W j



     
1
0
*
s
out RD
j
WTC i RD j W j



   
1
m
total in out
i
WTC WTC i WTC i

   
8 
B. Experimental Results 
We conduct experiments on ten ISCAS and ITC 
benchmark circuits. Table III first shows the statistics of 
the benchmark circuits and their ATPG patterns generated 
by [24]. 
TABLE III 
STATISTICS OF THE BENCHMARK CIRCUITS AND 
THEIR ATPG PATTERNS. 
 
The following experiment compares RORC with 
another scan-cell reordering scheme presented in [18], 
which requires fully-specified test patterns before the 
reordering. Since RORC applies MT-fill to minimize the 
scan-in transitions, we apply MT-fill for [18] as well. In 
the following experiment of [18], we first randomly 
generate an initial scan-cell ordering and specify the 
don’t-care bits using MT-fill according to that initial 
ordering. Then the reordering scheme in [18] is applied to 
obtain the final scan-cell ordering based on the filled 
patterns. We repeat the above steps 100 times and report 
the best results for [18]. Also, we use the same TSP 
algorithm in both RORC and [18] to make a fair 
comparison. 
 
In Table IV, Columns 3, 4, and 5 list the numbers of 
scan- in transitions, scan-out transitions, total scan-shift 
transitions, respectively. Column 6 lists the peak number 
of scan-shift transitions at a single scan-shift cycle. 
Column 7 lists the runtime in seconds. The results show 
that RORC can outperform [18] with an average 43.68% 
and 49.50% reduction to the number of scan-in transitions 
and scan-out transitions, respectively. The reduction to 
scan-in transitions first demonstrates the advantages of 
preserving don’t-care bits for later minimization. Also, 
the reduction to scan-out transitions demonstrates the 
effectiveness of using sampled response correlations to 
guide the reordering process. The reduction to peak 
transitions is a byproduct of the reduction to total 
scan-shift transitions. Note that the result reported for [18] 
is selected from 100 trials of random initial cell ordering. 
It implies that, even with MT-fill, specifying all 
don’t-care bits before reordering will significantly 
decrease the opportunity in minimizing scan-shift 
transitions later on and, in turn, lead to a local optimum. 
It also implies that the optimal cell ordering obtained by 
RORC is hard to be achieved by randomly assigning the 
initial cell ordering of [18] for multiple times. 
 
The runtime of [18] reported in Table IV is the 
runtime for 100 trials but the runtime of RORC is for only 
one trial. Thus, the runtime for one RORC is actually 
longer than the runtime for one [18]. Table V reports 
RORC’s runtime distribution for each benchmark circuit. 
Column 2 to 4 lists the runtime spent in the 
response-correlation sampling (Column 2), TSP algorithm 
(Column 3), and other computation (Column 4), 
respectively. Column 5 lists the total runtime. Column 6 
lists the ratio of the runtime spent in correlation sampling 
over the total runtime. In average, 90% of the total 
runtime is spent on sampling the response correlations, 
which is actually the efficiency bottleneck of the 
proposed scan-cell reordering scheme. 
 
In Table IV, the total number of scan-shift transitions 
is actually slightly larger than the sum of scan-in 
transitions and scan-out transitions. This is because we 
omitted the in- between transitions in Table IV, which 
are generated by the value difference between the first 
bit of a scan-in pattern and the last bit of its previous 
scan-out response. The percentage of in-between 
transitions is low compared to the scan-in and scan-out 
transition. It can be further reduced by a pattern- 
reordering scheme proposed in the next section. 
TABLE IV 
COMPARISONS OF GENERATED SCAN-SHIFT 
TRANSITIONS BETWEEN RORC AND [18]. 
10 
In this section, we introduce another scan-cell 
reordering scheme, named ROBPR (ReOrdering 
considering Both Pattern and Response correlation), 
which can simultaneously optimize the pattern 
correlations and response correlations during the 
reordering process. 
 
A. Detailed Steps of Reordering Scheme 
Figure 5 shows the flow of ROBPR consisting of four 
main steps. The details of steps 1-3 are described in the 
following subsections. The detail of step 4 is the same as 
the step 5 in RORC and hence omitted in this section. 
 
Fig. 5 Main steps of the proposed reordering scheme ROBPR. 
 
1) Obtain Pattern and Response Correlations: In order 
to measure the impact of a scan-cell ordering on the 
number of scan-in transitions, we first define the pattern 
correlation between cell i and cell j as the probability that 
the pattern values on these two cells are the same when 
the output of cell i is connected to the input of cell j. Note 
that this pattern correlation is dependent on the order of 
cells. For a test pattern k,  Table VIII considers each 
combination of pattern values between cell i and cell j, 
and lists its corresponding pattern correlation after 
MT-fill (denoted as PCk (i, j)). 
 
TABLE VIII 
DIFFERENT CASES OF PATTERN CORRELATIONS 
BETWEEN TWO ADJACENT CELLS. 
 
In cases 1, 2, 4, and 5, both values of cell i and j 
are specified bits and hence their pattern correlations can 
be determined immediately for test pattern k. In cases 7, 8, 
and 9, a don’t-care bit are placed prior to a specified bit 
and hence the don’t-care bit will be filled with the 
same value as the specified bit. In cases 3 and 6, a 
specified bit is placed prior to a don’t-care bit. Hence, the 
value of this don’t-care bit cannot be derived immediately 
and has to be determined by its first encountered specified 
bit when traversing toward the scan-chain output. We use 
S0/(S0  + S1 ) (S1 /(S0 + S1 )) to represent the probability 
that its first encountered specified bit is a 0 (1), where S0   
and S1   denote the total numbers of specified 1s and 0s 
in the test pattern, respectively. 
 
After calculating the PCk (i, j) for each pattern k, the 
pattern correlation between cell i and cell j for the entire 
test set can be obtained by averaging the PCk (i, j) for 
each pattern k. 
 
As to the response correlations, we use the same 
simulation- based method described in the Sec. IV-A1 to 
estimate them. 
 
2) Construct the Directed Correlation Graph: The 
correlation graph constructed in ROBPR is a revised 
version of the correlation graph. First, this correlation 
graph is directed. Second, an edge in this correlation 
graph has two weights (Wp, Wr), where Wp and Wr 
represent the pattern correlation and response correlation, 
respectively. Figure 6 shows an example of constructing 
such a directed correlation graph given the pattern and 
response correlations between three scan cells. 
 
Fig. 6 Construction of the directed graph based on pattern 
and response correlations. 
 
3) Find the Hamiltonian Path with Minimal WTC:  
Un- like RORC which finds a Hamiltonian cycle first and 
then breaks the Hamiltonian cycle to obtain a 
Hamiltonian path with minimal estimated WTCout, 
ROBPR uses an integrated algorithm to directly obtain 
the Hamiltonian path with minimal estimated W T Ctotal 
on the correlation graph. Figure 7 shows the proposed 
greedy-based algorithm, which also ordered one new 
vertex at a time to form such a Hamiltonian path. 
 
When adding the nth non-ordered vertex Vnon for the 
Hamiltonian path, this algorithm uses a cost   function 
Cost(Vlast, Vnon, n) to measure the impact of the 
new-added edge (Vlast, Vnon) on WTCtotal, which is 
12 
TABLE IX 
COMPARISONS OF GENERATED SCAN-SHIFT 
TRANSITION BETWEEN RORC AND ROBPR 
 
A. Detailed Steps of Reordering Scheme 
Figure 8 shows the overall flow of SIRO, which 
consists of the following four steps. 
 
1) Obtain Inverse Pattern and Response Correlations:  
In SIRO, when connecting a scan cell i to its next scan 
cell j, two types of connections can be made. One is direct 
connection, which connects the value Q of i to the scan-in 
port SI of j. The other type is the inverse connection, 
which connects the inverse value Q of i to the scan-in port 
SI of j. In RORC and ROBPR, we already discussed how 
to estimate the response and pattern correlations when 
using the direct connection. The focus here is to estimate 
the response correlations and pattern correlations when 
using the inverse connection. 
 
The response correlation for an inverse connection 
can be simply estimated by 1 minus the response 
correlation calculated for a direct connection. However, it 
is more complicated to estimate the pattern correlations 
for an inverse connection. This is because the MT-fill can 
adjust its filling of don’t-care bits according to the inverse 
connection or the direct connection. We first define the 
inverse pattern correlation between cell i and cell j for 
pattern k as I PCk (i, j), which is the probability that the 
pattern values on these two cells are the same when cell i 
is inversely connected to cell j. Table X shows the inverse 
pattern correlation for different combinations of pattern 
values between cell i and cell j after MT-fill. The 
derivation of Table X is similar to Table VIII. The only 
difference is that, for an inversely connected cell pair, a 
transition is generated when the specified values of both 
cells are the same. The definition of S0 and S1 are the 
same as that in Table VIII. 
 
Fig 8. Main steps of the proposed reordering schemes SIRO. 
 
TABLE X 
DIFFERENT CASES OF INVERSE PATTERN 
CORRELATIONS BETWEEN TWO ADJACENT CELLS. 
 
2) Construct the Directed Correlation Graph: The 
correlation graph constructed in SIRO is a revised version 
of the correlation graph in ROBPR. The difference is that 
an edge in this correlation graph has two sets of weights: 
non-inverse set (Wp, Wr) and inverse set (I Wp, I Wr), 
where Wp and Wr represent the direct pattern correlation 
and response correlation as calculated in ROBPR, and 
IWp and IWr  represent the inverse pattern correlation 
and response correlation as calculated in previous step. 
Figure 9 shows an example of constructing such a 
directed correlation graph given the inverse and non- 
inverse correlation sets between three scan cells. 
 
3) Find the Hamiltonian Path with Minimal WTC:  
The algorithm in this step is similar to the algorithm in 
Figure 7, except two types of connections can be chosen 
in SIRO. When selecting the nth ordered cell, SIRO needs 
to evaluate both the cost function for a direct connection 
Cost(Vi, Vj, n) and the cost function for an inverse 
connection Costinv(Vi, Vj, n). Cost(Vi, Vj , n)  is defined 
in ROBPR. Costinv(Vi, Vj, n) is defined as follows: 
 
14 
After further analysis, we found that the number of 
inverse connections used in each circuit is actually small 
(as listed in the last column of Table XI. For s35932 and 
b17, even no inverse connection is used by SIRO. This 
low usage of inverse connection means that the low 
correlations between scan cells in those benchmark 
circuits are not low enough, so that the corresponding 
inverse correlations cannot produce a high score for the 
cost function Costinv(Vi, Vj, n) used in Step 3’s greedy 
algorithm. This argument is further supported by the 
response-correlations distribution reported in Table I, 
where 2.05% of response correlations are larger than 0.75 
but only 1.09% of response correlations are smaller than 
0.25 for s38584. This trend is even more obvious for b17 
as shown in Table II, where 1.58% of response 
correlations are larger than 0.75 but only 0.004% of 
response correlations are smaller than 0.25. Table XII 
lists the probability distributions of response correlations 
for each benchmark circuit. 
 
TABLE XII 
Probability distribution of high and low response correlations. 
 
From the above experiments, we can conclude that 
using the inverse connections can indeed help the 
reduction on scan-shift transitions since the only a small 
number of inverse connections can achieve a 1.23% 
average reduction in the total scan-shift transitions. 
However, the amount of this reduction is determined by 
the ratio of low response or pattern correlations over the 
high ones, which is highly circuit-dependent. The 
reduction could be more significant if this ratio is higher. 
 
7. SCAN CELL REORDERING CONSIDERING 
BOTH POWER AND ROUTING FACTORS 
All above reordering schemes, such as RORC, 
ROBPR, and SIRO, focus on reducing the power 
consumption during scan- based testing. However, these 
reordering schemes may result in long wire length of scan 
paths since the connection of scan cells is determined by 
cells’ response or pattern correlations, not cells’ physical 
distance. In this section, we proposed a scan-cell 
reordering scheme, named PRORO (Power and 
Routing-Overhead ReOrdering), which combines the 
ROBPR with routing consideration. The same idea can be 
applied to SIRO as well. 
 
A. Detailed Steps of Reordering Consideration both 
Power and Routing Overhead. 
In PRORO, we reorder the scan cells after the 
placement is done. Based on the placement result, we use 
the Manhattan distance between two scan cells to 
approximate the wire length between the two cells. When 
selecting the next ordered scan cell, we incorporate this 
approximated wire length into the cost function and hence 
can limit the routing overhead. In our implementation, the 
placement is done by a commercial back-end tool and the 
position of each scan cell is obtained by parsing its DEF 
file. 
Basically, PRORO contains almost the same five 
steps as that of ROBPR, except some modifications to the 
step 2 and 3. Therefore, this subsection only shows the 
details of step 2 and 3. The rest steps all follow the steps 
in ROBPR. 
 
1) Construct a Directed Multiple-Weight Graph Based 
on Response/Pattern Correlations and Routing Overhead: 
As mentioned, the Manhattan distance between two cells 
is used to represent their routing overhead. In order to 
make the quantity of routing overhead compatible with 
the quantity of the cost function regarding scan-shift 
power, we normalize two cells’ routing overhead 
(represented by the Manhattan distance) to a value  
between 0 to 1, which is defined as the routing weight 
between the two cells. We set the longest distance 
between any two cells as a routing weight of 1, and the 
shortest distance as a routing weight of 0. 
Fig. 12 Construction of the directed graph based on 
correlations and routing effects. 
The directed graph constructed in this section is a 
revised version of the directed graph introduced in 
ROBPR (Step 2 in Sec VI-A2). An edge in the graph 
contains three weights (Wp, Wr, Wl), where Wp, Wr and 
Wl represent the pattern correlation, the response 
correlation, and the routing weight between the two cells, 
respectively. Figure 12 shows an example of constructing 
such a directed graph given the correlation and routing 
weight between three scan cells. 
16 
TABLE XIV 
COMPARISONS OF SCAN PATH’S WIRE LENGTH (um) 
AFTER GLOBAL ROUTE GENERATED BY DIFFERENT 
SCAN-CELL REORDERING SCHEMES. 
 
As the results shown in Table XIII, if only minimizing 
the wire length of scan paths such as tool [25]’s 
reordering scheme, 2.4 times the scan-shift transitions of 
ROBPR are generated, where ROBPR only minimizes 
scan-shift transitions. On the other hand, ROBPR requires 
3.3 times the wire length of scan paths of tool [25]’s 
reordering scheme as shown in Table XIV. In fact, the 
wire length spent on CUT’s routing is much more than 
the wire length spent on scan paths’ routing. Thus, after 
detailed route, the total wire length of ROBPR is 1.26 
times the total wire length of tool [25]’s reordering 
scheme as shown in Table XV. 
 
 
TABLE XV 
COMPARISONS OF TOTAL WIRE LENGTH (um) 
AFTER DETAILED ROUTE GENERATED BY DIFFERENT 
SCAN-CELL REORDERING SCHEMES. 
 
Also, the experimental results in Table XIII, XIV, and 
XV show that the tradeoff between scan-shift transitions 
and scan path’s wire length can be controlled by PRORO 
with different optimization factors. Using a larger 
optimization factor, PRORO can reduce more wire length 
of scan paths but generate more scan-shift transitions. 
When the optimization factor equals 0.5, PRORO 
generates 12% more scan-shift transitions compared to 
ROBPR but only requires 7% total wire length after 
detailed route, which is an acceptable level of routing 
overhead as long as the design is not intensively 
routing-congested. 
 
Another reason to sacrifice the wire length of scan 
paths for the scan-shift power is that the for advanced 
process technologies, the violation of hold-time 
constraints on scan paths occurs more often than the 
violation of setup-time constraints. Designers even 
intentionally increase the wire length of some scan paths 
to meet the hold-time constraint instead of applying a 
scan-cell reordering to reduce its wire length. Therefore, 
the motivation of reducing wire length on scan paths may 
not be as strong as that in the old process technologies. 
 
三、結論 
In this project, we first presented a scan-cell 
reordering technique which can simultaneously reduce 
scan-shift transitions based on the response correlations 
and preserve don’t-care bits in the test patterns for a later 
minimization of scan-in transitions using MT-fill. Second, 
we considered both the response correlation and pattern 
correlations during the cell reordering process to further 
reduce the scan-in transitions generated by MT-fill 
(Section VI). Next, we utilized the inverse connection 
between scan cells to turn a low correlation into a high 
one and developed a corresponding scan- cell reordering 
scheme to consider those inverse correlations. Last, we 
incorporated the routing overhead of scan paths into the 
cost function of our scan-cell reordering and hence the 
trade-off between scan path’s routing overhead and the 
number of scan-shift transitions can be controlled by a 
user-specified factor. In addition, a post-process pattern- 
reordering scheme was also proposed to minimize the in- 
between transitions. A series of experiments were 
conducted to compare the proposed schemes with a 
previous reordering scheme [18] and a commercial tool’s 
reordering scheme [25]. The experimental results 
demonstrated the effectiveness and efficiency of each of 
the proposed scan-cell reordering schemes 
 
四、參考文獻 
1. M. Bushnell and V. Agrawal. Essentials of Electronic 
Testing.  Kluwer Academic Publishers, 2000. 
2. Y. Zorian. A distributed bist control scheme for complex 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                            2008年 11 月 20 日 
報告人姓名 趙家佐 
服務機構 
及職稱 
國立交通大學 
電子工程學系 
     時間 
會議 
     地點 
10/28/2008~10/31/2008 
Santa Clara, CA, USA 
本會核定 
補助文號 
計畫編號 NSC97-2221-E-009-173 
會議 
名稱 
2008 IEEE International Test Conference 
發表 
論文 
題目 
Testing Methodology of Embedded DRAMs 
 
一、參與會議經過： 
 
    ITC08在美國加州Santa Clara舉行，共有35個 session，4場 tutorial，1個poster session。 
本次參加最主要的目地是論文報告，在 Session25: EMBEDDED MEMORY TEST。其餘
參與之 session 有“DEALING WITH OUTLIERS AND VARIATION IN TODAYS ICS”，
“DEFECT AVOIDANCE AND COST MODELING” ， “POWER-AWARE DFT 
METHODS”，“SYSTEMS EFFECTS OF ERRORS AND PROTECTION METHODS”， 
“TESTING FOR INTERCONNECT OPENS AND CROSSTALK”，“POWER IMPACT 
ON COMPRESSION AND AT-SPEED SCAN”。  
 
二、與會心得 
 
本會議為 VLSI Testing 最重要的會議，論文受重視度高，參展廠商多，涵概研究
領域新穎，台灣在 2008年的論文數目為 3。參與人員業界學界各占一半，所以不會僅限
於單純的學術交流，很適合拓展研究視野。另外 poster session 的討論也相當踴躍，
應該多鼓勵學生參與。 
 
 
三、建議 
 
以後只要經費許可，應多鼓勵學生參與，特別是做VLSI testing 領域的博士生，應該藉此
機會了解測試領域最先進的研究成果，藉此刺激對研究工作的嚮往，並擴展國際學生之
間交流。 
附
件
三 
