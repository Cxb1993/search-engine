東海大學資訊工程學系 
 
雙魚座：點對點格網系統/Pisces: A P2P Meta-Grid System— 
子計畫五：雙魚座之資訊監控系統 
High-Performance Computing Laboratory 
Department of Computer Science 
Tunghai University, 40704 Taichung, Taiwan R.O.C. 
中華民國 99 年 10 月 6 日
子計畫五：雙魚座之資訊監控系 - II - 
 II
2.  Hosts File 的同步 ............................................................................... 10 
3.  Hosts File 的使用 ............................................................................... 10 
排程系統 ................................................................................................... 11 
1.  Job Priority ......................................................................................... 11 
2.  Machine Priority ................................................................................. 12 
四、  軟硬體系統說明 ................................................................................ 13 
系統架構圖 ............................................................................................... 13 
1.  Bottom Layer – Node ........................................................................ 14 
2.  Middle Layer – Site ............................................................................ 15 
3.  Top Layer – Service............................................................................ 15 
系統執行環境 ........................................................................................... 17 
1.  軟體安裝條件 ...................................................................................... 17 
2.  硬體安裝條件 ...................................................................................... 18 
五、  團隊分工方式 .................................................................................... 19 
六、  成果與討論 ........................................................................................ 20 
七、  結論 .................................................................................................... 30 
八、  參考文獻與網站 ................................................................................ 31 
子計畫五：雙魚座之資訊監控系 - IV - 
 IV
圖片目錄 
Figure 1. 設計原理分析圖 ............................................................................... 6 
Figure 2. Information Service 的運作 ........................................................... 8 
Figure 3. /etc/hosts 內容 ............................................................................. 10 
Figure 4. Job Submit 流程圖 ......................................................................... 11 
Figure 5. The software stack of all nodes ................................................. 13 
Figure 6. The software stack of all sites and the service ....................... 13 
Figure 7. Cross Grid Authentication Service 流程圖 ................................. 17 
Figure 8. 網站架構圖 ..................................................................................... 20 
Figure 9. Monitoring and Discovery System 首頁 ..................................... 20 
Figure 10. Hosts Info 頁面 ............................................................................ 21 
Figure 11. Condor 頁面 ................................................................................. 21 
Figure 12. Ganglia Query - Processor ......................................................... 22 
Figure 13. Ganglia Query – Main Memory ................................................... 22 
Figure 14. Ganglia Query – Processor Load ................................................ 23 
Figure 15. Ganglia Query - Other ................................................................ 23 
Figure 16. NWS Query .................................................................................... 24 
Figure 17. NWS Graph .................................................................................... 25 
Figure 18. Submit Job – Upload file ............................................................ 26 
Figure 19. Submit Job – 設定值 ................................................................... 26 
Figure 20. Submit Job- submit job file ...................................................... 26 
Figure 21. Job Status 頁面 ........................................................................... 27 
Figure 22. Job Result 頁面 ........................................................................... 27 
Figure 23. Job Result – 成功執行的 job 內容 ............................................ 27 
Figure 24. Job Result – hello3_mpi 的 Submit log 檔內容 ....................... 28 
Figure 25. Job History Log 畫面 ................................................................... 28 
Figure 26. About 頁面 ................................................................................... 29 
Figure 27. Site Map 頁面 .............................................................................. 29 
Figure 28. 成功測試網格環境 ....................................................................... 33 
Figure 29. 成功回傳 XML 資料，表示 ganglia 有成功啟動 ....................... 33 
Figure 30. grid-security 資料夾下所有.pem 檔案 ..................................... 34 
Figure 31. globus 服務清單，container 成功啟動 ..................................... 34 
子計畫五：雙魚座之資訊監控系 - VI - 
 VI
Figure 67. submit.hello2 內容 ...................................................................... 55 
Figure 68. condor submit .............................................................................. 55 
Figure 69. hello2.log 內容 ............................................................................. 56 
Figure 70. hello2.out 內容 ............................................................................ 56 
Figure 71. hello3.java 內容 .......................................................................... 56 
Figure 72. submit.hello3 內容 ...................................................................... 57 
Figure 73. Job submit 結果 ........................................................................... 57 
Figure 74. hello3.out 內容 ............................................................................ 57 
Figure 75. 需要修改 mp1script 的內容 ....................................................... 57 
Figure 76. Job submit 結果 ........................................................................... 60 
Figure 77. hello2.log 內容 ............................................................................. 61 
Figure 78. hello2.out 內容 ............................................................................ 61 
Figure 79. machines 內容 .............................................................................. 61 
Figure 80. Job Submit MPI 結果 ................................................................... 61 
Figure 81.hellompi.log 內容 ......................................................................... 62 
Figure 82. hellompi.out 內容 ....................................................................... 62 
Figure 83. RRDtool 使用線條產生資料 ........................................................ 63 
Figure 84. RRDtool 使用方格產生資料 ........................................................ 64 
Figure 85. 簡單的 JRobin 的圖形產生 ......................................................... 65 
 
子計畫五：雙魚座之資訊監控系 - 1 - 
 1
一、 摘要 
背景簡介 
網格 (Grid)，顧名思義，是指可透過網際網路的聯結，以及適當的作業系統與軟體協助，
將分散各地的電腦資源加以串聯，這些資源包括了計算設備、儲存設備以及各式各樣的輸出入
裝置，即將多部電腦組成網格狀網路，而這裡特指的是一種基於廣域網路的虛擬計算環境。 
多重網格 (Multi-Grid)，就是跨越多個網格系統，其中每個網格系統可能使用不同的中介
軟體或軟體版本，藉由技術整合，將這些網格系統組成多重網格系統，即可更彈性的配置網格
系統。 
網格計算（Grid Computing）技術就是在這種虛擬計算環境下誕生的一項新的計算技術，
即一種「模擬實現虛擬的超級電腦」的技術。該技術可以把分佈在世界各地的計算機連接在一
起，並且將各地的計算機資源通過高速的網路組成充分共用的資源集成體系。透過合理調度，
不同機構的計算環境被綜合利用和共用，進而實現了一台超級電腦的功能。 
事實上，網格計算的概念是建構在叢集 (Cluster) 系統之上的，不但具有叢集計算的優
點，更具有整合「異質」機器的特色，這使得我們能夠以更簡單的方法與更低廉的研究成本，
簡易地得到經過整合而產生強大計算能量的網格環境，進而替我們解決更多複雜的科學問題。
詳細來說，網格計算其實可以視為幾個主要概念的構成： 
1. 資源分享 
當你進入網格去使用遠端資源，這些遠端資源將協助你去完成一部電腦無法完成的任務。
比如說一項很複雜的數值模擬，不只簡單地檔案交換，還包括遠端存取軟體、電腦及資料。
甚至存取遠端感測器、望遠鏡及所有權不屬於你的其他設備。網格的難題是：並非無條件
獲取資源或給予資源，實際上，應該建立一個資源的使用機制，資源提供者應該決定何種
使用者可以被信賴，同時也應該建立使用者的使用權限。 
2. 安全存取 
Table 1. 安全存取機制 
存取政策（Access policy） 資源提供者及使用者，必須清楚定義何種資源可被分享？誰可以分享？及分享的條件？ 
認證（Authentication） 需要建立一套機制，確定使用者及資源的身份。 
子計畫五：雙魚座之資訊監控系 - 3 - 
 3
僅可化解不同網格間溝通的界線，並創造出多重網格系統的環境。 
實作結果 
透過我們的多重網格架構，使得網格系統更具有擴充性，並透過 Web Portal 的介面，讓
使用者不須熟悉 Linux 操作指令和部屬內部軟體，且將藉由 MDS 所整合的資訊 (包含監視系統
及排程系統)，透過也能以圖形化介面或簡單的表單行式操控或監視網格環境，系統維護者也
能更方便的監控及維護系統。 
未來展望 
希望在未來我們能結合更多不同網格環境的機器，並在實用性上，像是天文學中資料的分
析、地震儀器的數據模擬、藥物的測試計算、基因的比對、資料庫存…等領域皆可應用，藉以
提供更強大的計算能力。並且期望除了在計算的資源分享之外，還能夠利用網格的特性，發展
更多種的應用。 
子計畫五：雙魚座之資訊監控系 - 5 - 
 5
5. 標準化 
善加利用 XML 作為資訊溝通的媒介，以達到整合不同單位的網格系統。 
6. 整合異質環境電腦 
善加利用各種不同作業系統以及不同的主機架構，使其能夠分享不同的資源給予網格環境
使用。 
7. 整合異質環境網格系統 
跨越不同的網格系統。使多個網格系統能夠藉由 CA 認證，認證欲加入現有系統的網格系
統，並透過一個資訊中心做資源控制，作業提交及管理。 
8. 任務排程與相依系統 
在任務送交前，給予其優先度等參數，再送交由系統選出適當的機器。 
子計畫五：雙魚座之資訊監控系 - 7 - 
 7
用量、記憶體使用量、工作需求等歷史資訊交給 Agent 存放至 Message Center，未來可透
過 Predictor 針對相同 Case 的歷史資訊進行分析，然後跟 Agent 回報建議的機器列表。 
以下就各元件以及之間的關係加以敘述： 
 Agent 
Agent 為 Information Service 的主要元件，為 Information Service 對外的窗口。對
Monitoring Service 的 Controller 都必須提供即時的機器資訊或者是預測的資訊。 
 Message Center 
本元件主要用來存放從 Multi-Grid 所取得的原生資訊，舉凡 CPU Load、Memory Free、
Disk Usage、Network Information 等資訊，除此之外還包含工作執行（Job Execution）
的歷史觀測（Observation）資訊，以及被 Predictor 分析後的預測（Prediction）資訊。 
 Index Service 
由於收集資訊以及存取資訊的動作無時無刻的發生，因此操作 Database 的事件（Event）
會很頻繁，透過 Index Service 收集網格資源的狀態資訊，並存入一個存儲單元。其工作
方式與註冊表非常相似。它搜集資訊然後將其作為資源屬性發佈，再透過 web 服務介面
將所搜集的資料提供給用戶端，並做存取 Message Center 的控管。用戶端可以向 MDS 查
詢資訊，或訂閱資源屬性，如果這些資源屬性產生變化他們就會及時被通知。 
 Predictor 
此元件主要功能為二，一是週期性的將 Message Center 中的原生資訊取出，藉由模組化
（Modular）的設計，針對不同種類（Type）的原生資訊採用不同的預測模式，完成後存
回 Message Center 以備取用；二是接受 Agent 的 Request 去進行預測的動作，以便更即
時性的取得所需預測結果，可增加系統的彈性化以及更多變性的應用。 
子計畫五：雙魚座之資訊監控系 - 9 - 
 9
2. Monitoring Service 
Monitoring Service 的主要任務為抓取 Information Service 所維護的資訊，包括個節點的
硬體資訊、負載情形，工作紀錄等等，並將之繪製成人類易懂之圖表，以下詳述各元件之
任務與關係： 
 Controller 
為 Monitoring Service 的主要元件，主要任務為控制整個 Monitoring Service 的行為，包
含設定及組態欲繪製圖表之網格各節點，以及繪製圖表之參數等相關設定。Controller 需
週期性的向 Information Service 的 Agent 取得格網各節點機器之原生資訊以及 Predictor
分析過後的資訊，接著將繪製參數以及資料交給 Drawer 進行繪製。 
 Drawer 
接收 Controller 傳送過來的繪製參數以及資料將圖表繪製出來，以便交由 Displayer 作呈
現，而繪製圖表功能必須彈性化，如選取時間區段，需可以接受各種不同種類的資訊，若
產生的圖表過於複雜，也加以處理，用最好的方式繪製出適合的圖表，並在圖表中增加更
多詳細資訊。 
 Displayer 
此元件主要用來提供一個查詢的機制給使用者網格節點的歷史資訊觀測結果，因此必須提
供一個 Web 方式讓使用者方便使用，以方便使用者查詢。 
管理系統 
由於在我們多重網格環境下，每一個 Grid 底下又擁有眾多的 Cluster，而每個 Cluster 底
下擁有數台節點機器，由於 DNS 不一定存在這些電腦的位置資訊，因此我們需要 Hosts File
來記錄所有主機 IP 以及對應的名稱。 
網格底下的每台電腦都必須要有 Hosts File 存在，並且內容必須包含整個網格的主機，然
而這是一個不小的文件，如果有一個主機要新增或是修改，那麼我們需要逐一修改每台主機。 
因此我們制訂一套 Hosts File 的管理辦法，除了能夠同時管理我們所擁有的數個 Grid 並且
能夠讓我們的網格環境系統依照 Hosts File 的內容自動判斷主機的清單以及提供的服務。 
1. Hosts File 的編輯 
在 Linux 中我們會直接編輯/etc/hosts，但是我們在網格環境中提供了一個編輯頁面來處
子計畫五：雙魚座之資訊監控系 - 11 - 
 11
排程系統 
 
Figure 4. Job Submit 流程圖 
以往由於我們所使用的中介軟體 Globus 本身不具有排程器，因此都必須藉由另外撰寫程
式的方式去執行排程系統。為了使排程流程增加效益，我們採用了 Condor 做為中介軟體，它
具有 Job 優先度的機制，可以讓 Job 產生優先度高先做的相依性，這在過去要透過另外設計
機制去實現，如今可透過 Condor 本身所具有的特性解決了避免繁複的過程去執行。 
並且 Condor 與 MDS 整合後完成 Condor-G 的架構，讓 MDS 功能更加完整。其結合使用
Condor 的特性與 Globus 控制的資源一起進行作業提交、監視和控制，為我們管理資源比以
前更加方便。 
1. Job Priority 
當使用者 Submit 一個 Job 之後，透過 Condor 會執行 Job 的優先順序，並且讓使用者自
訂優先權，其範圍值為：-20~+20，總共有 40 層。且每一層並不會只有一個 Job 在執行。 
子計畫五：雙魚座之資訊監控系 - 13 - 
 13
四、 軟硬體系統說明 
系統架構圖 
 
Figure 5. The software stack of all nodes 
 
Figure 6. The software stack of all sites and the service 
子計畫五：雙魚座之資訊監控系 - 15 - 
 15
GridFTP 提供高效能、安全，以及健全的資料傳輸機制。 
網格可以支援不同的應用程式，而這些程式可能是由許多不同的程式語言撰寫而成。
Globus 工具並非提供一個一致的語言模式給網格應用，而是以物件導向的方法提供許多服
務。程式開發者可以從中取用最符合其需求的工具，並與現存軟體整合，使其網格化。 
 MPICH-G2 
安裝完 Globus Toolkit 後只不過是把各機器透過 Globus Toolkit 這個中介軟體串起來而
已，充其量只能在上面執行非平行程式，為了達到真正的鉅量運算目的，我們必須在上面
安裝 MPICH-G2，這樣才能提供網格環境執行 MPI 平行程式。 
MPI（Message Passing Interface）是一套可用於平行電腦系統（包括 Distributed-Memory
和 Shared-Memory 架構）上的資料傳送模型，目標是建立一套和程式語言、電腦種類無
關的標準，用以撰寫收送訊息的程式碼。 
 Condor 
Condor 是一個資源管理和作業調度系統，是來自 Wisconsin-Madison 大學的研究項目。簡
單的說，它是專門用來監控高產量運算(High Throughput Computing ,HTC)的資源分配。 
 Condor-G 
是 Condor 的排程系統。結合使用 Condor 的特性與 Globus 控制的資源一起進行作業提
交、監視和控制就稱為 Condor-G。Condor-G 使用 Condor 的作業管理特性，以及 Globus 
Toolkit 的安全性和資源訪問特性。Toolkit 提供了身份驗證機制、與遠程資源進行數據傳
輸的能力以及遠程執行環境。Condor 通過在提供監視和控制功能的同時提供通知、容錯
和憑證管理功能，從而對作業的提交和管理進行了簡化。 
2. Middle Layer – Site 
 Node 
各節點符合「欲加入 Monitoring and Discovery System 可控制的網格平台規格」，亦即可
成為可被控制之網格資源的機器。 
3. Top Layer – Service 
 Web Design 
此為本架構核心，主要負責的工作有：收集機器資訊、選擇欲執行之機器、送交工作執行、
取回執行結果等。有了底層 Globus、Condor、MDS 與 JSP 的支援，使我們的系統可輕易
子計畫五：雙魚座之資訊監控系 - 17 - 
 17
 
Figure 7. Cross Grid Authentication Service 流程圖 
 Cross Grid Information Service 
監控系統在網格環境中為一個相當重要的元件。監控工具能夠幫助網格管理者更加方便去
管理及監視機器。換句話說，不同的中介軟體能夠藉由一個適當的監視系統將所有的資源
資訊聚集在一起。在一個多重網格環境下，通常都會使用不同的監視系去監控不同的資訊
形式。因此我們必須藉由一個適當的語言去轉換並且將各監視器所提供的資訊集中整合。 
系統執行環境 
1. 軟體安裝條件 
 服務端 
以下為服務端需要安裝之軟體，依照安裝順序列出： 
Table 3. 軟體安裝需求說明 
軟體名稱 功能說明 所選版本 
Fedora Linux 核心作業系統 10、11 
Java JDK Java 執行環境必備發展工具軟體 1.6.0_04-b12 
子計畫五：雙魚座之資訊監控系 - 19 - 
 19
五、 團隊分工方式 
在製作過程中我們遭遇到了許多困難，但由於得到許多人幫助我們才能繼續進行工作，在
此感謝指導老師 楊朝棟教授以及所有幫助過我們的人員。 
Table 6. 工作分配表 
人員 工作 
陳冠衣 
(1) 網格系統架設 
(2) MDS 系統部屬 
(3) NWS 環境設定 
(4) Ganglia 環境設定 
(5) MDS 與 Monitor 的整合 
(6) MDS NWS 資料庫建立 
(7) 網頁撰寫 
(8) 報告撰寫 
殷鼎鈞 
(1) 網格系統架設 
(2) XML Parser 
(3) MDS ganglia 資料庫建立 
(4) 網頁撰寫 
(5) 報告撰寫 
徐漢光 
(1) 網格系統架設 
(2) Condor 環境設定 
(3) MDS 與 Condor 的整合 
(4) MDS submit 資料庫建立 
(5) 網頁撰寫 
(6) 報告撰寫 
子計畫五：雙魚座之資訊監控系 - 21 - 
 21
CPU 速度、機器的負載狀況、Memory 狀況等項目）。 
 
Figure 10. Hosts Info 頁面 
 Condor 
更進一步的觀察 Condor 所提供的資訊，提供多個核心的系統監視，並將單個核心模擬成虛
擬機器做為監視的重點。 
 
Figure 11. Condor 頁面 
本頁面提供使用者更進一步的觀察 Condor 所提供的資訊，包含機器核心數目、(虛擬)記憶
體、硬體資源、負載狀態以及觀察 CPU 是否在忙碌中。我們可以觀察到由於幾乎是硬體資
源，因此其資料變動不大，唯一具有變動的就是負載量。 
(1) 您可以透過頁面上方的 Host 選單選擇欲觀察的機器、次選單 Core 選擇觀看該機器的
第幾顆核心或全部核心、並選擇欲顯示的資料數，使用 Submit 按鈕獲得符合您所需
要的資料。 
(2) 列出所需的歷史資料後，您可以點擊位於表頭深灰色的資料名稱欄位，系統將依照您
選擇的資料欄位排序，如您第一次點擊表頭“CoreID”欄位，系統會依照“CoreID”
欄位資料由小至大排序，若再次點擊表頭“CoreID”欄位，則系統將依照表頭
“CoreID”欄位由大至小排序，而系統預設是依照時間欄位由新至舊的型態排序。 
 
 
 
 
子計畫五：雙魚座之資訊監控系 - 23 - 
 23
 
Figure 14. Ganglia Query – Processor Load 
(4) Other 
一些相關的硬體資訊，也由於是硬體的關係，因此變動不大。 
 
Figure 15. Ganglia Query - Other 
 NWS Query 
將 NWS 經由 MDS 整合之後，我們取出所需要觀察的項目，例如：網路頻寬及網路延遲。 
子計畫五：雙魚座之資訊監控系 - 25 - 
 25
 
Figure 17. NWS Graph 
Submit Job 
在本系統(Monitoring and Discovery System)中，每一個被派置來執行的程式，我們稱為
一個 Job；使用者在提交一個 Job 的時候，系統會要求提交者進行 Job 的優先度(-20~20)共 41
種層優先順序，我們的排程系統將自動依照 Job 之間的優先度進行排序之後交由 MDS 對當前
網格系統各機器節點的狀態做最佳的工作分配。本系統提供使用者提交工作，查看工作執行結
果之外，亦提供對當前系統的 Job 執行狀態和歷史執行狀況做查詢。 
 Submit 
選擇一個 Job 來 Submit，Job 可以為一個可執行檔、Java 檔或著是 MPI 檔，這裡使用 MPI
檔作為範例。且依派置順序分為以下步驟︰ 
(1) Upload File 
首先，選擇你要上傳的檔案。這裡上傳的檔案為 hello3_mpi 當作範例。 
 
 
 
 
 
子計畫五：雙魚座之資訊監控系 - 27 - 
 27
被執行。 
 
Figure 21. Job Status 頁面 
 Job Result 
此頁面讓使用者查詢所有工作結果，包括工作的執行紀錄(*.log)和工作結果(*.out)。 
等到 Job Status 中沒有出現剛剛上傳的那個 job 的時候就代表 job 已經被執行了 (在等待被
執行的過程中可能需要一些時間)，因此可以到 Job Result 查詢 job 被執行的結果。 
 
Figure 22. Job Result 頁面 
 
Figure 23. Job Result – 成功執行的 job 內容 
 
 
 
子計畫五：雙魚座之資訊監控系 - 29 - 
 29
System 系統的動機。 
 
Figure 26. About 頁面 
 Site Map 
提供 Site Map 給使用者徹底瞭解頁面的功能以及所提供的資訊。 
 
Figure 27. Site Map 頁面 
子計畫五：雙魚座之資訊監控系 - 31 - 
 31
八、 參考文獻與網站 
[1] K. Czajkowski, S. Fitzgerald, I. Foster, and C. Kesselman, “Grid Information Services for Distributed 
Resource Sharing,” Proceedings of the Tenth IEEE International Symposium on High-Performance 
Distributed Computing, IEEE press, 2001. 
[2] I. Foster and C. Kesselman, “The Grid 2: Blueprint for a New Computing Infrastructure,” Morgan Kaufmann, 
2nd edition, 2003. 
[3] I. Foster, “The Grid: A New Infrastructure for 21st Century Science,” Physics Today, 2002, vol. 55, no. 2, 
pp. 42-47. 
[4] I. Foster and N. Karonis, “A Grid-Enabled MPI: Message Passing in Heterogeneous Distributed Computing 
Systems,” Proceedings of 1998 Supercomputing Conference, 1998. 
[5] I. Foster and C. Kesselman, “Globus: A Metacomputing Infrastructure Toolkit,” International Journal of 
Supercomputer Applications, 1997, vol. 11, no. 2, pp. 115-128. 
[6] L. Ferreira, V. Berstis, J. Armstrong, M. Kendzierski, A. Neukoetter, MasanobuTakagi, R. Bing-Wo, A. Amir, 
R. Murakawa, O. Hernandez, J. Magowan, and N. Bieberstein, “Introduction to Grid Computing with 
Globus,” http://www.ibm.com/redbooks, 2003. 
[7] V. Laszewski, I. Foster, J. Gawor, and P. Lane, “A Java commodity grid kit,” Concurrency and Computation: 
Practice and Experience, 2001, vol. 13, pp. 645-662. 
[8] H. Le, P. Coddington, and A.L. Wendelborn, “A Data-Aware Resource Broker for Data Grids,” IFIP 
International Conference on Network and Parallel Computing (NPC’2004), LNCS, 3222 Springer-Verlag, Oct. 
2004. 
[9] C.T. Yang, C.L. Lai, K.C. Li, C.H. Hsu, and W.C. Chu, “On Utilization of the Grid Computing Technology for 
Video Conversion and 3D Rendering,” Parallel and Distributed Processing and Applications: Third 
International Symposium, ISPA 2005, Lecture Notes in Computer Science, vol. 3758, pp. 442-453, 
Springer-Verlag, Nov. 2005. 
[10] C.T. Yang, P.C. Shih, and K.C. Li, “A High-Performance Computational Resource Broker for Grid 
Computing Environments,” Proceedings of the International Conference on AINA’05, vol. 2, pp. 333-336, 
Taipei, Taiwan, March 2005. 
[11] C.T. Yang, K.C. Li, W.C. Chiang, and P.C. Shih, “Design and Implementation of TIGER Grid: an Integrated 
Metropolitan-Scale Grid Environment,” Proceedings of the 6th IEEE International Conference on PDCAT’05, 
pp. 518-520, Dec. 2005. 
[12] J. Nabrzyski, J.M. Schopf, and J. Weglarz, Grid Rrsource Management, Kluwer Academic Publishers, 
2005. 
[13] S.M. Park and J.H. Kim, “Chameleon: A Resource Scheduler in a Data Grid Environment,” Proceedings of 
the 3rd IEEE/ACM International Symposium on Cluster Computing and the Grid, pp. 258-265, May 2003. 
[14] C.T. Yang, C.L. Lai, P.C. Shih, and K.C. Li, “A Resource Broker for Computing Nodes Selection in Grid 
Environments,” Grid and Cooperative Computing - GCC 2004: 3rd International Conference,, Lecture 
Notes in Computer Science, Springer-Verlag, vol. 3251, pp. 931-934, Oct. 2004. 
[15] C.T. Yang, P.C Shih, S.Y. Chen, and W.C. Shih, “An Efficient Network Information Modeling using NWS for 
Grid Computing Environments,” Grid and Cooperative Computing - GCC 2005: 4th International 
Conference, Lecture Notes in Computer Science, vol. 3795, pp. 287-299, Springer-Verlag, Nov. 2005.  
子計畫五：雙魚座之資訊監控系 - 33 - 
 33
實作方法 
1. MDS 環境建置 
1.1 前置作業 
作業系統準備，本系統採用免費的 Linux 作業系統 Fedora core 10 & 11。安裝套件以全選
為佳。特別是 Development，務必要全部勾選安裝。 
安裝好作業系統之後，接著要建置網格環境，所需軟體為：Java (J2SE SDK)、Apache Ant、
JUnit、Globus Toolkit 以及 Globus Simple CA Package for Client，安裝完成後，請務必
檢驗可以使用網格環境 (登入 test 帳號進行測試並且透過 globus 丟 job)。 
$ su - test 
$ grid-proxy-init –verify –debug 
$ globus-job-run hostname /bin/date 
 
Figure 28. 成功測試網格環境 
接著安裝監視系統，本次安裝所需軟體為 RRDtool 及 Ganglia，並確定 Ganglia 有啟動且
可以正確讀取系統資訊。 
# telnet localhost 8649 
 
Figure 29. 成功回傳 XML 資料，表示 ganglia 有成功啟動 
為了要讓 MDS 能夠正常工作，因此必須將 Globus container 打開，使用 root 進行測試，
子計畫五：雙魚座之資訊監控系 - 35 - 
 35
1.2 安裝 Apache Tomcat  
為了建立 webMDS，我們使用 Tomcat 做為伺服器，下載檔案至/opt/src 並解壓縮。 
# cd /opt/src 
# wget 
http://apache.ntu.edu.tw/tomcat/tomcat-6/v6.0.18/bin/apache-tomcat-6.0.18.ta
r.gz 
# tar –zxvf apache-tomcat-6.0.18.tar.gz 
將檔案移至/opt 下並做個 symbolic link 至 tomcat 資料夾。 
# mv apache-tomcat-6.0.18 /opt 
# cd /opt 
# ln -s apache-tomcat-6.0.18 tomcat 
修改/etc/profile 在 unset pathmunge 加入 tomcat 路徑。 
# vim /etc/profile 
 
Figure 33. /etc/profile 內容 
開啟 Tomcat，設置成功的話連結到瀏覽器就能看到首頁。 
# $CATALINA_HOME/bin/startup.sh 
子計畫五：雙魚座之資訊監控系 - 37 - 
 37
Figure 36. MDS 成功部屬至 Tomcat 
2. 將 ganglia 部屬至 MDS 
本系統目的主要就是為了整合 MDS 以及所有監視器，首先整合 MDS 與 gangila。 
首先確定 ganglia 有正確安裝並可以正常讀取系統資料。由於 GT 版本是 4.0.5 以上，因此
採用此方法部屬 ganglia 至 MDS： 
# mds-gluerp-configure none ganglia 
$GLOBUS_LOCATION/etc/globus_wsrf_mds_index/ganglia-config.xml 
# mds-gluerp-configure fork ganglia 
$GLOBUS_LOCATION/etc/globus_wsrf_gram_Fork/gluerp-config.xml 
 
Figure 37. 成功部屬 ganglia 至 MDS 
透過 globus 內建檔案我們可以知道，將 Monitor 部屬至 MDS 必須 XML 檔與 MDS 連結才能
成功部屬。 
修改/etc/gmond.conf，加入以下： 
# vim /etc/gmond.conf 
 
Figure 38. gmond.conf 內容 
子計畫五：雙魚座之資訊監控系 - 39 - 
 39
以 root 執行。 
# /opt/nws/bin/nws_memory \ 
  -d /home/test/nws/memory \ 
  -e /home/test/nws/memory.err \ 
  -l /home/test/nws/memory.log & 
# /opt/nws/bin/nws_nameserver \ 
  -f /home/test/nws/nameserver \ 
  -e /home/test/nws/nameserver.err \ 
  -l /home/test/nws/nameserver.log & 
# /opt/nws/bin/nws_sensor \ 
  -e /home/test/nws/sensor.err \ 
  -l /home/test/nws/sensor.log & 
於/opt/nws 下建立 myTCPMessageMonitorStart 
Content: 
name:gcaDomain 
skillName:tcpMessageMonitor 
controlName:clique 
member:member1(server hostname) 
member:member2(client hostname) 
period:120 
注意 member 一定要兩台以上，不可以只有一台。 
 
Figure 40. myTCPMessageMonitorStart 內容 
執行開啟 activity。 
# /opt/nws/bin/start_activity -f myTCPMessageMonitorStart gca59 
# /opt/nws/bin/nws_proxy -N gca59 -As  
  -e /home/test/nws/proxy.err  
  -l /home/test/nws/proxy.log & 
3.3 Client 端設置步驟 
同 server 端一樣安裝 nws，不同的是這次只安裝 client。 
子計畫五：雙魚座之資訊監控系 - 41 - 
 41
 
Figure 41. NWS 環境安裝測試:hosts 
測試主要的 activities，若未執行開啟 myTCPMessageMonitorStart，則不會有 gcaDomain
的 activity 存在。 
# /opt/nws/bin/nws_search activities 
 
 
Figure 42. NWS 環境測試:activities 
測試總共有幾的 cliques，就是總共有幾個 activity 的型態為 clique。 
# /opt/nws/bin/nws_search cliques 
 
子計畫五：雙魚座之資訊監控系 - 43 - 
 43
編輯 globus 內建的檔案， /opt/globus/etc/globus_wsrf_mds_index/jndi-config.xml ，
此檔案就是 Index Service 所提供的服務設定檔案。 
Content: 
<?xml version="1.0" encoding="UTF-8"?> 
<jndiConfig xmlns="http://wsrf.globus.org/jndi/config"> 
  <service name="IndexService"> 
      ... 
      <resource name="configuration" 
type="org.globus.mds.aggregator.impl.AggregatorConfiguration"> 
        <resourceParams> 
          ... 
          <parameter> 
            <name>executableMappings</name> 
            <value>nws-provider=globus-nws-provider.sh</value> 
          </parameter> 
        </resourceParams> 
      </resource> 
    </service> 
    ... 
</jndiConfig> 
 
Figure 46. 修改之 jndi-config.xml 內容 
之後建立 /opt/globus/etc/globus_wsrf_mds_aggregator/nws.xml ，主要就是要透過此
檔案讓 NWS 與 MDS 做連結的。 
 
Content: 
<?xml version="1.0" encoding="UTF-8" ?> 
<!-- 
 Copyright 1999-2006 University of Chicago 
子計畫五：雙魚座之資訊監控系 - 45 - 
 45
--> 
 
<defaultServiceGroupEPR> 
   
<wsa:Address>https://gca59:8443/wsrf/services/DefaultIndexService</wsa:Addres
s> 
</defaultServiceGroupEPR> 
 
<!-- The defaultRegistrantEPR defines the grid resource that will be 
     registered, unless overridden in the ServiceGroupRegistrationParameters 
--> 
<defaultRegistrantEPR> 
   <wsa:Address>https://gca59:8443/wsrf/services/NwsProvider</wsa:Address> 
</defaultRegistrantEPR> 
 
<defaultSecurityDecriptorFile>some/other/sec/file.xml</defaultSecurityDecript
orFile> 
 
<!-- Each ServiceGroupRegistrationParameters element defines one 
     registration to be maintained. The registration specifies 
     a grid resource to be registered, a servicegroup to be registered 
     to, and various parameters associated with the registration. 
 
     This element should be duplicated once for each registration to 
     be maintained. 
 
     A number of sample registration blocks are included below, but 
     commented out. These demonstrate the use of the mds-servicegroup-add 
     tool for a variety of common registration scenarios. 
 
--> 
 
<!-- The following demonstrates registering a GRAM service to the default 
     service group, specified above in the <defaultServiceGroupEPR> 
     element. 
 
     To use, ensure that the defaultServiceGroupElement parameter is 
     set correctly above, and set the registrantEPR to refer to 
子計畫五：雙魚座之資訊監控系 - 47 - 
 47
# /opt/tomcat/bin/startup.sh 
# /opt/globus/bin/globus-start-container 
# /opt/globus/etc/srun.sh 
 
Figure 48. 執行 srun.sh 部屬至 MDS 之結果 
瀏覽網頁畫面，點選 A list of resources registered to the local default index service。 
ServiceGroup 多了一個 Unknown 的 Resource Type，此 Resource Type 就是 NWS 所提供
的資訊喔。 
 
Figure 49. MDS 上出現了 NWS 所提供之資訊 
點選 detail 看詳細資訊，成功讀取到 NWS 資訊( gca59 到 gca71 的網路情況)。 
子計畫五：雙魚座之資訊監控系 - 49 - 
 49
4. Condor 安裝步驟  
下載並解壓縮 condor-7.3.2-linux-x86-rhel5-dynamic.tar.gz。 
# tar xvf condor-7.3.2-linux-x86-rhel5-dynamic.tar.gz 
將檔案移至/opt 下，並做個 symbolic link 至 condor 資料夾。 
# mv condor-7.3.2 /opt 
# ln -s /opt/condor-7.3.2/ /opt/condor 
 
Figure 51. /opt 下的 condor 資料夾 
進入 condor 資料夾，執行 condor_install 安裝。 
(--type 依據需要的功能不同而有變化， 
主機--type=submit,execute,manager、子節點--type=submit,execute)。 
# cd /opt/condor 
# ./condor_install --type=submit,execute,manager --owner=test 
--install=/opt/condor 
 
Figure 52. condor 安裝完成 
建立 link: condor_config。 
# ln -s /opt/condor/etc/condor_config /opt/condor/condor_config 
子計畫五：雙魚座之資訊監控系 - 51 - 
 51
KILL      = FALSE 
DedicatedScheduler   = DedicatedScheduler@你的 Condor 主機 
(ex:DedicatedScheduler@alpha1.hpc.csie.thu.edu.tw) 
STARTD_ATTRS    = $(STARTD_ATTRS), DedicatedScheduler 
不是 Condor 主機則需要加入 
CONDOR_HOST     = 你的 Condor 主機 (ex: alpha1.hpc.csie.thu.edu.tw) 
修改/etc/profile 在 unset pathmunge 加入 condor 路徑， 
# vim /etc/profile 
加入以下， 
CONDOR_CONFIG="/opt/condor/etc/condor_config" 
export CONDOR_CONFIG 
PATH="/opt/condor/bin:/opt/condor/sbin:$PATH" 
export PATH 
 
Figure 54. /etc/profile 內容 
#source /etc/profile 
加入 service，首先修改 condor.boot。 
# vim /opt/condor/etc/examples/condor.boot 
修改並加入， 
CONDOR_ROOT=/opt/condor 
MASTER=${CONDOR_ROOT}/sbin/condor_master 
CONDOR_CONFIG=${CONDOR_ROOT}/condor_config 
 
Figure 55. condor.boot 內容 
然後進行以下動作， 
# cp /opt/condor/etc/examples/condor.boot /etc/init.d/condor 
# ln -s /etc/init.d/condor /etc/rc2.d/S99condor 
子計畫五：雙魚座之資訊監控系 - 53 - 
 53
 
Figure 59. hello.c 內容 
以 gcc 編譯(不做 linking) 
$ gcc -c hello.c -o hello.o 
與 condor 的 lib 作 linking 產生 condor 可執行檔 
$ condor_compile gcc hello.o -o hello 
 
Figure 60. condor compile 
編輯一個 condorsubmit 檔(此範例檔名為 submit.hello) 
Content: 
Executable = hello 之前步驟所產生出來的 condor 可執行檔 
子計畫五：雙魚座之資訊監控系 - 55 - 
 55
6.2 執行一般的 C 語言程式 
登入使用者 test， 
此範例檔名為 hello2.c 
 
Figure 65. hello2.c 內容 
以 gcc 編譯。 
$ gcc hello2.c -o hello2.o 
輸出的 hello2 是可執行檔。 
 
Figure 66. hello.2 是可執行檔 
編輯一個 condorsubmit 檔 (此範例檔名為 submit.hello2)。 
Content: 
Executable = hello2.o 要執行的檔案 
universe = vanilla 此模式為執行沒有經過 condor_compile 做 linking 的 c 檔案 
Output = hello2.out 結果輸出的位置 
Log = hello2.log 過程產生的訊息 
Queue 一個 submit 文件可包含多個 job，queue 做為一個 job 單位的分隔 
 
Figure 67. submit.hello2 內容 
將 job 送出。 
$ condor_submit submit.hello2 
 
Figure 68. condor submit 
子計畫五：雙魚座之資訊監控系 - 57 - 
 57
Queue 一個 submit 文件可包含多個 job，queue 做為一個 job 單位的分隔 
 
Figure 72. submit.hello3 內容 
將 job 送出。 
$ condor_submit submit.hello3 
 
Figure 73. Job submit 結果 
執行的那台機器出現結果： 
 
Figure 74. hello3.out 內容 
6.5 透過 Condor 執行 MPICH 檔案 
設定 MPICH 在 Condor 的參數，編輯/opt/condor/etc/examples/mp1script 
#vim /opt/condor/etc/examples/mp1script 
修改 
MPDIR=/opt/mpich/bin 
 
Figure 75. 需要修改 mp1script 的內容 
複製檔案到執行 MPI 程式的資料夾 (此範例用/home/test/)。 
#cp /opt/condor/etc/examples/mp1script /home/test/ 
子計畫五：雙魚座之資訊監控系 - 59 - 
 59
$ condor_q 
查詢目前節點的 job 狀態，以 XML 方式呈現 
$ condor_q -xml 
對該使用者查詢目前的 job 狀態 
$ condor_q -submitter <username> 
對該 job id 作查詢 job 狀態 
$ condor_q -analyze -better <JOB_ID> 
移除該 job 
$ condor_rm <JOB_ID> 
查詢目前 condor pool 的狀態 
$ condor_status 
列出目前有 job 執行或閒置的使用者 
$ condor_status -submitters 
查詢該節點的完整資訊 
$ condor_status -l <machine_name> 
重啟動 condor 
$ condor_restart 
顯示該 Condor 參數的值 
$ condor_config_val <val_name> 
7. 透過 MDS submit Job 
需要先開啟 container 以及 grid-proxy-init 
Submit 檔案中 
Universe 設為 grid 
並增加 grid_resource 設為 MDS 中 ManagedJobFactoryService 的位置 
universe=grid 
grid_resource = gt4 
https://140.128.102.191:8443/wsrf/services/ManagedJobFactoryService Fork 
使用 condor_submit 即可。 
7.1 執行一般的 C 語言程式 
產生一個 C 語言程式，同 CONDOR 的使用與操作 II 
子計畫五：雙魚座之資訊監控系 - 61 - 
 61
Figure 77. hello2.log 內容 
hello2.out 
 
Figure 78. hello2.out 內容 
7.2 執行 MPI 程式 
需先在 MPI 目錄/bin 中放入 machines 檔，為可執行的機器與核心數。 
# vim /opt/mpich/bin/machines 
 
Figure 79. machines 內容 
編輯一個 condorsubmit 檔(此範例檔名為 submit.hellompi) 
Content: 
executable = /opt/mpich/bin/mpirun 
arguments =  -np 4 /home/test/submit/hello3_mpi 
universe = grid 
grid_resource = gt4 
https://140.128.102.191:8443/wsrf/services/ManagedJobFactoryService Fork 
output = hellompi.out 
log = hellompi.log 
queue 
將 job 送出。 
$ condor_submit submit.hellompi 
 
Figure 80. Job Submit MPI 結果 
結果: 
hellompi.log 
子計畫五：雙魚座之資訊監控系 - 63 - 
 63
# rrdtool update test.rrd 1246182200:12359:12369 1246182500:12365:12372 
1246182800:12373:12375 
# rrdtool update test.rrd 1246183100:12379:12379 1246183400:12386:12389 
1246183700:12386:12394 
# rrdtool update test.rrd 1246184000:12395:12398 1246184300:12408:12404 
1246184600:12419:12407 
# rrdtool update test.rrd 1246184900:12429:12414 1246185200:12445:12430 
1246185500:12450:12453 
# rrdtool update test.rrd 1246185800:12465:12460 1246186100:12469:12464 
1246186400:12479:12469 
# rrdtool graph test.png \ 
 --title "Graph Test" \ 
 --start 1246181000 \ 
 --end 1246186400 \ 
 DEF:v1=test.rrd:input:AVERAGE \ 
 DEF:v2=test.rrd:output:AVERAGE \ 
 LINE2:v1#f8425f:"Input" \ 
 LINE3:v2#8d65d2:"Output" \ 
 -v "Value"  
產生圖形如下： 
 
Figure 83. RRDtool 使用線條產生資料 
 
子計畫五：雙魚座之資訊監控系 - 65 - 
 65
graph.saveAsPNG("all1.png", 400, 400); 
 
Figure 85. 簡單的 JRobin 的圖形產生 
 
 
 
 
 
 
 
 
子計畫五：雙魚座之資訊監控系 - 67 - 
 67
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
[1] Chao‐Tung Yang*, Fang‐Yie Leu, and Sung‐Yi Chen, "Resource Brokering using a Multi‐site 
Resource  Allocation  Strategy  for  Computational  Grids",  Concurrency  and  Computation: 
Practice and Experience, August 2010.  (ISSN: 1532‐0626, SCI  JCR  IF=1.004, 1.791, EI)  NSC 
96-2221-E-029-019-MY3 
[2] Chao‐Tung  Yang*,  Fang‐Yie  Leu,  and  Sung‐Yi  Chen,  "A  Network  Bandwidth‐Aware  Job 
Scheduling  with  Dynamic  Information  Model  for  Grid  Resource  Brokers,"  Journal  of 
Supercomputing, Springer Netherlands, Volume 52, Number 3 / June, 2010, pp. 199‐223, 
2010. (ISSN: 1573‐0484, SCI JCR IF=0.687, 0.615, EI) NSC 96-2221-E-029-019-MY3 
[3] Chao‐Tung  Yang*,  Chih‐Hao  Lin, Ming‐Feng  Yang,  and Wen‐Chung  Chiang,  “A Heuristic 
QoS Measurement with Domain‐based Network  Information Model  for Grid Computing 
Environments”,  International  Journal  of  Ad  Hoc  and  Ubiquitous  Computing  (IJAHUC), 
Volume 5, Number, 4, pp. 235‐243, 2010. (ISSN Online: 1743‐8233 ‐ ISSN Print: 1743‐8225, 
SCI JCR IF=0.865, TELECOMMUNICATIONS 38/76, EI) NSC 96-2221-E-029-019-MY3 
[4] Chao‐Tung  Yang*,  I‐Hsien  Yang,  and  Chun‐Hsiang  Chen,  "RACAM:  Design  and 
Implementation  of  a  Recursively‐Adjusting  Co‐Allocation  Method  with  Efficient  Replica 
Selection  in Data Grids," Concurrency and Computation: Practice and Experience, Volume 
22, Issue 15, pages 2170–2194, October 2010. (ISSN: 1532‐0626, SCI JCR IF=1.004, 1.791, 
EI) NSC 96-2221-E-029-019-MY3 
[5] Chao‐Tung Yang*, Chun‐Pin Fu, and Ching‐Hsien Hsu, “File Replication Maintenance and 
Consistency  Management  Services  in  Data  Grids,”  Journal  of  Supercomputing,  Springer 
Netherlands,  Volume  53,  Number  3  /  September,  2010,  pp.  411‐439,  2010.  DOI. 
10.1007/s11227‐009‐0302‐9  (ISSN:  1573‐0484,  SCI  JCR  IF=0.687,  0.615,  EI)  NSC 
96-2221-E-029-019-MY3 
 
子計畫五：雙魚座之資訊監控系 - 69 - 
 69
 
國科會補助計畫衍生研發成果推廣資料表 
日期：   年  
月  日 
國科會補助計畫 
計畫名稱： 
計畫主持人：         
計畫編號：             領域： 
研發成果名稱 
（中文） 
（英文） 
成果歸屬機構  發明人 (創作人) 
 
技術說明 
（中文） 
 
 
 
（200-500 字） 
（英文） 
產業別 
 
技術/產品應用範圍 
 
技術移轉可行性及預期
效益 
 
 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
99 年 5 月 18 日 
報告人姓名 朱彥宇 
服務機構 
及職稱 
東海大學 
資訊工程學系 
會議時間 
會議地點 
2010/05/11~05/13 
Hilton Hotel,Gyeongju, Korea. 
本會核定 
補助文號 
雙魚座：點對點格網系統
/Pisces: A P2P Meta-Grid 
System--子計畫五：雙魚座
之資訊監控系統 
96-2221-E-029-019-MY3 
會議 
名稱 
(英文)：The 4th International Conference on New Trends in information 
Science and Service Science (NISS2010) 
發表 
論文 
題目 
(英文)：Implementation of a Medical Information Service on Android 
Mobile Devices 
 報告內容應包括下列各項： 
參加會議經
過 
 
The 4th International Conference on New Trends in information Science 
and Service Science 所舉辦的會議主要是資訊科學與服務科學為導
向的研究領域的會議，讓學術界或工業界的工程師交換並且討論他
們彼此擅長的領域與經驗，並分享各種關於資訊服務方面的新想
法、研究結果和應用的環境。NISS 2010 於 2010 年 5 月 11 日至 13
日在南韓慶州的 Hilton Hotel 所舉行 
 
ICPADS 2008 此次共有 2 場 Keynotes 和 33 個 sessions 
 
Keynote 1. ACP based Control and Management for Complex Network 
System-Dr. Fei-Yue Wang. 
Keynote 2.  Support Search and Retrieval of Design Patterns through 
Vocabulary Control-Dr. YoungSeok Cho. 
  
與會心得 NISS 的重點是 Communication 與 Networking 相關研究與服務技術。
網路一直是個廣為大家所研究的領域，而近幾年來利用資訊系統的
網路服務也與其息息相關，會議當中也有不少與網路相關研究。 
 
Implementation of a Medical Information Service on 
Android Mobile Devices 
 
Chao-Tung Yang and Yen-Yu Chu 
 
Shyh-Chang Tsaur 
  
Department of Computer Science 
Tunghai University 
Taichung City, 40704, Taiwan (ROC) 
e-mail: ctyang@thu.edu.tw 
e-mail: g97350062@thu.edu.tw 
Department of Electronics 
National Chin-yi University of Technology 
Taichung City, 411, Taiwan (ROC) 
e-mail: sctsaur@gmail.com 
 
Abstract—The use of Google's Android SDK provides the 
necessary programs to develop their own, has become the goal of 
the program designers. However, this phone offers the Google 
Map application, use the function rather limited, only provides a 
search, routes, maps, models, my location, location by adding 
features such as Google, but they cannot make use of this map we 
get a target-oriented The purpose, such as the need has often 
surprising details of the hospital pharmacy. For example, 
witnessed the accident, often they will hesitate to call 119 or the 
110, but if the phone can be timely access to the nearest hospital 
phone, you can remove it a worry. Or else, suddenly thought of a 
trip and a shortage of medicines, you can to the distance from the 
nearest pharmacy to add the current requirements. This study 
focuses on implementation: to provide users with a basic Google 
map features, and readily available around the show where the 
major general hospital and the Health Department approved 
pharmacy information and visible landmark, as well as the link 
URL, so that the user directly into the website to look for a 
doctor appointment time or peg. That are not good at using 
modern technology products elders were easier to use, more 
comfortable and quick to obtain the required information. 
Keywords-component; formatting; style; styling; insert (key 
words) 
I. INTRODUCTION 
In the case of global information developed throughout the 
world have greatly exceeded the production of handheld 
devices, personal computers, despite the world's handheld 
device agreements as subject to different hardware devices, or 
circumstances, so that in and all handheld devices are able to 
access, and even if access to the Internet is also limited by the 
agreements made at different rates vary, but compared to the 
output of personal computers, handheld devices, the output of 
the world are constantly upgrading them, and in its consumer 
market intelligent mobile phone has gradually been widely 
accepted, and the annual output also gradually be increased. 
At present, its consumer smart phone market can be divided 
into four kinds of operating systems Symbian, Windows, 
iPhoneOS, Android. Among them, the Android operating 
system because it is driven by Google's operating system, 
Google brings together the various industry together constitute 
the Open Mobile Platform Alliance (Open Handset Alliance), 
then its Linux-based Android system is a core software 
platform and operating system, due to adopt Linux and 
Apache architecture to become a free open-source software, 
well-known examples, so Android systems are almost 
completely retain the original features of Linux, combined 
with the concept of smart phones, and this study focused on 
the Google Map and medical services, combination, so use 
Android operating system as we develop the software platform, 
and we have made use primarily in mobile phones allows 
users to easily view the hospital and pharmacy locations and 
more information, enter a keyword query can be saved and a 
viewing of information evaluation of a cumbersome procedure. 
II. BACKGROUND 
A. Android 
Android (robot) is a Linux-based operating system 
platform by Google, and Windows Mobile (Microsoft 
provides), iPhoneOS (Apple supplied) and other mobile phone 
operating systems at the same level. In addition to the 
operating system, it also contains the middleware (Middleware) 
is responsible for hardware and communication between 
applications, and provide Android SDK / NDK application 
software development kit that allows embedded systems 
developers to use it to develop Android platform applications. 
Android to all the applications written using Java language, 
and then through the Android Runtime of the Dalvik virtual 
machine to transform the implementation of the DX Byte code, 
the application's graphical user interface (Graphic User 
Interface) and partly through XML (eXtension Markup 
Language) programming to design. The Google 2009 Nian Liu 
Yuefen released Android 1.5 NDK (Native Development Kit), 
so that developers can, through C or C + + programming 
languages such as writing Android applications. More popular 
to say, Android is not a mobile phone, cell phone use in the 
operating system, software is free, also completely open 
source. 
B. Google Map 
Google map to Google, which provide electronic map 
services, including local detailed satellite photos. Now offers 
three views: First, vector maps (traditional map), which 
provides administrative and transportation as well as 
commercial messages; two different-resolution satellite 
photographs (vertical view, and Google Earth's satellite photos 
do) that allows users to better determine the their location; 
APPLICATION
Home Contacts Phone Brower ...
APPLICATION FRAMEWORK
Activity 
Manager
Windows 
Manager
Content 
Provider
View System
Package 
Manager
Telephony 
Manager
Resource 
Manager
Location 
Manager
Notification 
Manager
LIBRARIES ANDROID 
RUNTIME
Core Libraries
Dalvik Virtual 
Machine
Surface 
Manager
OpenGL/ES
SGL
Media 
Framework
FreeType
SSL
SQLite
WebKit
Libc
LINUX KERNEL
Display Driver Camera Driver
Flash Memory 
Driver
Binder (IPC) 
Driver
Keypad Driver WiFi Driver Audio Drivers
Power 
Management
 
Figure 1.  System Architecture 
C. The development of the program structure  
Android programming project file structure, whether it is 
generated using the Eclipse project, or use activity creator 
generate an Android programming project, its structure as 
shown in Table I. 
Its Androidmanifest.xml file defines the design application 
process is that some function-oriented, clearly describe what 
the main functions of the application can deal with what 
information and when to implement these actions, which are 
function-oriented element consists of the following four 
definition (not every program contains these four elements), 
and to a different XML tag names defined in the 
Androidmanifest.xml file,: 
 Activity (activities) - use <Activity> tags In the 
Android mobile phone system, Activity application 
usually represents a display screen. For example: 
Email your contact list displays a screen that is an 
Activity, and edit the Address Book screen is another 
Activity. 
 Intent and Broadcast Receiver (intentions and radio 
receiver) - the use of <receiver> tags Android phones 
to operate any one application has its own purposes, 
such as: the use of FTP file transfer program to 
download or upload files, using a web browser page, 
This information obtained in the process of 
programming in Android, it will call it Intent Receiver 
(intended receiver). When an application designed to 
generate Intent, the aim is to receive the information 
coming from the other side, you must generate a 
Broadcast Receiver (radio receiver), and to deal with 
the information received. 
 Service (service functions) - use <Service> tag when 
Android application does not require the display, but it 
should be a long run in the background when the 
Service is a service function with applications, such as: 
MP3 player. 
 Content Provider (content provider) - using <Provider> 
label the actions carried out by the application is to 
enable users to store their information or documents, 
for example: a SQLite database program that is part of 
Content Provider functional programs. 
TABLE I.  PROGRAMMING PROJECT FILE STRUCTURE TABLE 
 
 
D. Android Applications Operation Model 
Application operation process, the first applications 
developed packaged into android package.apk application 
suite installed on Android system, it is called Task (work), that 
is, Application; when the application process is really the 
underlying Linux Kernel implementation, is called a Process 
(stroke); one stroke under each allowed to have one or more of 
the Threads (threads) simultaneously, but it is recommended 
to keep the program developed by Signal Thread design 
concept of a single-threaded, applications, operating models 
such as Figure 2 shown. 
 
Android package.apk
JAVA Code R.JAVA Res files
Task(application)
Process(Thread#1, Thread#2,...)
Complier 
program
Install program
 
Figure 2.  Android Applications Operation Model 
Program implementation of the results will determine the 
location of the moment where the input to go to the address 
before we can call built-in maps program to allow users to 
choose whether to use path planning function, but prior to use, 
you must first open the phone's GPS service , the program to 
obtain the geographic coordinates of the moment. 
F. The delivery of the latitude and longitude of present 
position 
General Cell phone text messaging to send SMS-messages 
will want to add permissions to use 
"android.permission.SEND_SMS", and the crawl phone 
contact information need to add permissions 
"android.permission.READ_CONTACTS". 
The key program to send SMS through SmsManager 
objects sendTextMessage () method to send messages, this 
method need to pass five values, in order of the recipient 
address, sending address, text, sending service and delivery 
services, including income Man and two pieces of text 
parameters are not available to null, so grab cell phone in the 
ad hoc use of the contact person as the recipient, while the text 
is passed directly to the latitude and longitude of present 
position. Finally, Toast.makeText () displays pop-up 
information in order to determine the success of network 
messages. 
Project used sendTextMessage method SmsManager 
category, you can use one of three ways to send SMS, Table 
III. delivery method for the three SmsManager. 
TABLE III.  SMS SENDING MODE 
 
V. RESULTS 
Our research and application can achieve all of the above 
services and process, such as Figure 4 as shown in. 
Start
Main Page
MENU
Hospital/Phar
macy Dialog
Satellite/Stree
t Dialog
Search Dialog
Show latitude 
and longitude
Hospital 
Layer
Pharmacy 
Layer
Hospital/
Pharmacy
Satellite 
Map
Street 
Map
Search 
Address
Search 
latitude and 
longitude
Path 
Planning
E-mail SMS
End
Hospital/Pharmacy Satellite/Street Search
Current 
Location
Exit
DeliverReturn
 
Figure 4.  Functional Flow Chart 
1) Includes the following services: 
a) GPS positioning. 
b) Central Office for individual services to the Hospital       
and medicine. 
c) Taken together, show hospitals and pharmacies. 
d) Display hospital and pharmacy information can be 
directly linked home page and make the call. 
e) Change the map display mode. 
f) Search for the location of the demand (including the 
official address or latitude and longitude). 
VI. CONCLUSIONS AND FUTURE WORK 
User can access via cell phone to the basic Google map 
feature, readily available around the show where the major 
general hospital and the Health Department approved the 
pharmacy information and links to its web site, users can 
directly access website for a doctor appointment scheduling 
and registration form, but also know that anytime, anywhere 
location, not afraid of getting lost in the course of medical 
treatment delays, users can also use the plan to find the 
shortest path distance in order to reduce the time for medical 
treatment. The temporary need on the road map of medicines 
can also be used to display the pharmacy and the pharmacy 
can know basic information to do option, or an accident occurs, 
can make use of newsletters and e-mail from the address book, 
select the contact person given the current position help. In the 
user interface on the actual machine with the use of touch-
screen and select large, clear pattern, so that older users can 
more easily understand the function of each option on the 
keyboard does not have to find a direct click patterns can be. 
We call this service at personal computers and mobile 
devices at boot time, with the use of service time in Figure 5 
Figure 6 the latency time to do performance testing, and 
finally accumulate 2 in Figure 7, shows how to deploy 
services, although at the beginning of personal computers to 
spend more time than the mobile device, but in using the 
service more quickly than personal computers, resulting in two 
hours accumulate, the time is approaching, and mobile devices 
than personal computers for medical services have a more 
immediate nature of the help, I believe the popularity of smart 
phones in the next, the people who use the service is expected 
to increase. 
 
Figure 5.  Boot time comparison 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
99 年 5 月 26 日 
報告人姓名 陳柏翰 
服務機構 
及職稱 
東海大學 
資訊工程學系 
會議時間 
會議地點 
2010/05/21~23 
Busan lotte hotel, Korea 
本會核定 
補助文號 
雙魚座：點對點格網系統
/Pisces: A P2P Meta-Grid 
System--子計畫五：雙魚座
之資訊監控系統 
96-2221-E-029-019-MY3 
會議 
名稱 
(英文)：The 10th International Conference on Algorithms and 
Architectures for Parallel Processing (ICA3PP 2010) 
發表 
論文 
題目 
(英文): A Multiple Grid Resource Broker with Monitoring and 
Information Services 
( 英 文 ): A QoS Network Information Model on Grid 
Environments 
 報告內容應包括下列各項： 
參加會議經
過 
 
The 10th International Conference on Algorithms and 
Architectures for Parallel Processing (ICA3PP 2010)於 1995 年
開始即致力於算法和體系結構的並行處理。ICA3PP 現在已被
視為主要的經常性活動的世界，涵蓋許多方面的並行算法和
體系結構，包括基本的理論方法，實踐實驗項目，商業元件
和系統。隨著應用的計算系統已經滲透在日常生活的各個方
面，電力系統的計算變得越來越重要。這次會議提供了一個
論壇，世界各國交換意見，以改善計算能力的計算機系統。 
 
ICA3PP 此次共有 2 場 Keynotes  
 
Keynote 1. (FutureTech 2010) : Structure and Model of 
Algorithms 
Keynote 2. (ICA3PP 2010) : Cloud Computing: The Next 
Revolution in Information Technology 
Keynote 3. (ICA3PP 2010) : Efficient Web Browsing with 
Perfect Anonymity Using Page Prefetching 
 
Main Conference 1. Senssion-1: Wireless communication 
network 
Main Conference 2. Senssion-2: Parallel algorithms, 
architectures and applications 1 
Main Conference 3. Senssion-3: Parallel algorithm 1 
  
與會心得 ICA3PP 的重點是 Services Computing 相關研究與技術。逐漸
推廣至 business services 與 IT services 這類廣為大家所研究
的領域，而近幾年來的所興起的雲端技術也與其息息相關，
會議當中也有不少與 Grid Computing、Wireless Sensor 
Networks、Mobile Service Integration 等相關研究。 
 
本人發表的 Paper 為： 
1. A Multiple Grid Resource Broker with Monitoring and 
Information Services 於 5 月 22 日上午之 Session 9 中報告 
2. A QoS Network Information Model on Grid Environments
C.-H. Hsu et al. (Eds.): ICA3PP 2010, Part II, LNCS 6082, pp. 90–99, 2010. 
© Springer-Verlag Berlin Heidelberg 2010 
A Multiple Grid Resource Broker with Monitoring  
and Information Services∗ 
Chao-Tung Yang∗∗, Wen-Jen Hu, and Bo-Han Chen 
Department of Computer Science, Tunghai University, Taichung, 40704, Taiwan (ROC) 
ctyang@thu.edu.tw 
Abstract. Grid computing is now in widespread use, which integrates geo-
graphical computing resources across multiple virtual organizations to achieve 
high performance computing. We build a resource broker on multiple grid envi-
ronments, which integrates a number of single grids from different virtual or-
ganizations without the limit of cross-organization. We can efficiently use the 
multiple grid resources to avoid the waste of resources. In addition, we pro-
posed a Multi Grid Resource Selection Strategy for the resource broker to select 
the better allocation of resources before submitting job for avoiding network 
congestion caused by the decrement of performance. 
Keywords: Multi-Grid, Resource Broker, MGRSS. 
1   Introduction 
In the Grid environment, applications make use of shared Grid resources to improve 
performance. The target function usually depends on many parameters, e.g., the sche-
duling strategies, the configurations of machines and links, the workloads in a Grid, 
the degree of data replication, etc [3, 4]. In this work, we examine how those parame-
ters may affect performance. We choose an application’s overall response time as the 
object function and focus on dynamically scheduling independent tasks. We define 
the job, the scheduler, and the performance model of a Grid site and conduct experi-
ments on the Multi-Grid platform [1]. We propose a multi-grid resource selection 
strategy, called “MGRSS”. The strategy helps user to select the better performance of 
machines in order to shorten the execution time of programs, and furthermore we 
adjusted each grid user has the quota of resources. Experimental results show that 
MGRSS exhibits a better performance than other strategies [7]. 
2   System Design and Implementation 
2.1   Resource Broker 
The system architecture of the resource broker is shown in Fig. 1. Users could easily 
make use of our resource broker through a common Grid portal [5, 6, 7-11]. The  
                                                          
∗
 This work is supported in part by National Science Council, Taiwan R.O.C., under grants no. 
NSC 96-2221-E-029-019-MY3 and NSC 98-2218-E-007-005. 
∗∗
 Corresponding author. 
92 C.-T. Yang, W.-J. Hu, and B.-H. Chen 
All of nodes on the multi-grid environment should setup the cross grid service tool, 
which written in the shell script program, as shown in Fig. 2. The cross grid service 
tool contains some procedures to regular automatic updates with a multi-grid manager 
center, such as the IP and domain of host list, the certificates, and the subject. Any 
single grid user on our multi-grid environment makes use of the multi-grid resource 
through the tool to update with a multi-grid manager center. The primary task of cross 
grid information is to gather the IDL file, which contains the several attributes of 
hosts on the grid, the detail is described in next section. 
 
Fig. 2. Multi-Grid Manager Center 
2.3   Cross Grid Information Service 
The CGIS consists of three layers: the Core Service Layer, the Translator Layer, and 
the Resource Layer, as shown in Fig. 3. The Core Service Layer contains the Agent, 
Filter, Getter and Setter, and Gather. These components are installed in every grid 
environment for information gathering and maintenance. The Translator Layer sup-
ports a variety of format conversion monitor tools, such as Ganglia, Cacti, and MDS. 
The information in different monitor tools is transformed into the IDL format. The 
Resource Layer describes resource information from different grid environments. In 
this study, it includes Tiger Grid, Medical Grid, and Bio Grid [14, 15, 16]. 
We define a new information format to translate different formats. The proposed 
format is called the IDL (Information Describing Language). It is responsible to ex-
change and translate resource information among grids, and to perform the post-
transfer filtering to ensure that only necessary information is passed to clients, end 
users, and software components. 
 
94 C.-T. Yang, W.-J. Hu, and B.-H. Chen 
 
Fig. 5. Job Monitor 
3   Multi-Grid Resource Selection Strategy 
3.1   Parameters and MGRSS Algorithm 
In this section, the parameters used in the algorithm are listed and explained in the 
following: 
y jobi: The ith job dequeued from the job queue, where i = 1~n. The job contains 
some information such as job name, program name, program arguments, input 
data, and number of processors to run on. The program is usually a parallel 
program written by MPI library and compiled by MPICH-G2 that is a Grid-
enabled implementation of the MPI standard. The Resource Broker will allocate 
resources according to the information provided by the job. 
y NPmGrid : The total number of processors on the multiple grid 
y NPlGrid : The total number of processors on the local grid 
y NPmf : The total number of processors with idle status on the multiple grid 
y NPlf  : The total number of processors with idle status in the local grid 
y NPmax : The maximum processors on the multiple grid 
y NPvalid : The available processors on the multiple grid 
y NPreq: The processors used for executing jobi, if the Resource Broker dispatches 
the jobi successfully, the resources distributed over several Nodes or Sites used 
for jobi will be locked for a while until the jobi finishes. 
96 C.-T. Yang, W.-J. Hu, and B.-H. Chen 
 
Fig. 6. Multi-Grid resource selection strategy flowchart 
First, a job is dequeued from the job queue for scheduling. Second, it gets the latest 
information from an IDL file of multi-grid information server to determine, whether 
the number of processors of requests is smaller than the total number of processors of 
the Multi-Grid. If it is false, scheduler discards jobs. If it is true, scheduler determin-
ing use the single grid or multi-grid strategy by the processors of request. For the 
single grid strategy, the processors of requests should be smaller than the free proces-
sors of a local grid; otherwise, that enqueue the job and waiting for five minutes. Our 
schedule will resubmit the job when the waiting time is exceeded five minutes. If the 
number of processors of requests is still smaller than that of the free processors of the 
local grid, we adopt the multiple grid strategy. For the multiple grid strategy, if the 
number of the processors of requests is larger than that of the valid processors of 
multiple grids, then scheduler discard job. Otherwise if the processors of request 
smaller than free processors of multiple grid, then we adopt the multiple grid strategy. 
4   Experimental Results 
In this section, we have the four experimental results. Among the first two experiment 
respectively measurement the execute time for different specific program which use 
the different metric in five strategy environment. In the third experiment, we execute 
the entire parallel programs. The last experiment randomly selected twenty different 
types of parallel programs and uses the different number of processors to execute. The 
above-mentioned results are all order to compare the execution time between different 
resource selection strategies. We calculate the value of performance and network for 
each machine, and according the score to sort the list of machines which represents 
the resource selection priority and previous section mention the MGRSS algorithm. 
We divided MGRSS into three levels from level one to level three by different 
weighted valueβ. The maximum weighted value of the network is MGRSS3(β=0.7); 
98 C.-T. Yang, W.-J. Hu
are still better than other str
experiment we randomly s
programs to execute the di
some cases, the speed only
MGRSS is better than other
 
Fig. 11. Result for all mp
5   Conclusion and Fu
In this paper, we propose a 
select the better performan
programs, and furthermore
Experimental results show 
plied other strategies. Over
four single grid systems inc
GCA Grid and, furthermor
with multi-grid resource se
and improve the function 
strategy. 
References 
1. Foster, Kesselman, C.: G
Journal of Supercomputer
2. Czajkowski, K., Fitzgera
Distributed Resource Sh
sium on High-Performanc
3. Foster, Karonis, N.: A Gr
Computing Systems. In: P
4. Tang, J., Zhang, M.: An 
International Conference 
5. Aloisio, G., Cafaro, M.: 
portal. Concurrency Com
, and B.-H. Chen 
ategies. Experiment results are shown in Fig. 11. The 
elected twenty different types and parameter of para
fferent strategies in twenty times, as shown in Fig. 12
 and the network only are better than the MGRSS, 
 two strategies in the most of case. 
i programs Fig. 12. Result for variety of mpi program
ture Work 
multi-grid resource selection strategy, which helps user
ce of machines in order to shorten the execution time
 we adjusted each grid user has the quota of resourc
that MGRSS exhibits a better performance than that 
all, we construct a multi-grid platform, which integra
luding the Tiger Grid, the Medical Grid, the Bio Grid, 
e, design and implement a Multi-Grid Resource Bro
lection strategy. In the future, we will continue to enha
of resource brokers and the multi-grid resource select
lobus: A Metacomputing Infrastructure Toolkit. Internatio
 Applications 11, 115–128 (1997) 
ld, S., Foster, I., Kesselman, C.: Grid Information Services
aring. In: Proceedings of the Tenth IEEE International Sym
e Distributed Computing, pp. 181–194 (2001) 
id-Enabled MPI: Message Passing in Heterogeneous Distribu
roceedings of 1998 Supercomputing Conference, p. 46 (1998
Agent-based Peer-to-Peer Grid Computing Architecture. In: F
on Semantics, Knowledge and Grid, SKG ’05, p.57 (2005) 
Web-based access to the Grid using the Grid Resource Bro
putation: Practice and Experience 14, 1145–1160 (2002) 
last 
llel 
. In 
but 
 
s 
s to 
 of 
es. 
ap-
tes 
and 
ker 
nce 
ion 
nal 
 for 
po-
ted 
) 
irst 
ker 
 C.-H. Hsu et al. (Eds.): ICA3PP 2010, Part II, LNCS 6082, pp. 121–130, 2010. 
© Springer-Verlag Berlin Heidelberg 2010 
Implementation of a Heuristic Network Bandwidth 
Measurement for Grid Computing Environments∗ 
Chao-Tung Yang∗∗, Chih-Hao Lin, and Wen-Jen Hu 
Department of Computer Science, Tunghai University, Taichung, 40704, Taiwan (ROC) 
ctyang@thu.edu.tw 
Abstract. Grid computing technique is more and more popular. In general, 
Ganglia and NWS are applied to monitor Grid nodes’ status and network-
related information, respectively. Comprehensive monitoring and effective 
management are criterions to archive higher performance of grid computation. 
Unfortunately, owing to diverse user requirements, information provided by 
Ganglia and NWS services is not sufficient in real cases, especially for applica-
tion developers. In addition, NWS services that deployed based on “Domain-
based Network Information Model” could greatly reduce overheads caused by 
unnecessary measurements. This study proposes a heuristic QoS measurement 
architecture, which constructed with a domain-base model, to provide effective 
information to meet user requirements, especially for application developers. 
Keywords: Grid Computing, Heuristic, QoS, Network Information Model. 
1   Introduction 
As we known, Grid computing technique is more and more popular adopted by or-
ganizations to obtain high performance computing and heterogeneous resources shar-
ing. Since all computing nodes in grid environments are connected by means of the 
network, all tasks that executed in grid environments will be influenced by network 
status due to complicated and numerous communications between computing  
resources [1, 2]. While we design algorithms for specific usages or assign tasks into 
grid environments, we have to evaluate the network performance and to adjust algo-
rithms to attain optimal performance in real-time execution [9, 11]. The best scenario 
is that our grid environments have some mechanisms to retrieve network status and to 
evaluate performance automatically [3, 4]. Thus, applications or web service agents 
could provide higher performance due to dynamic parameter adjustment and  
algorithms optimization. 
While grid computing becomes popular, it brings about a new issue, i.e., how to 
manage and monitor numerous resources of grid computing environments. In most 
cases, we use Ganglia and NWS to monitor machines’ status and network-related in-
formation, respectively. Owing to diverse user requirements, information provided by 
                                                          
 ∗
  This work is supported in part by National Science Council, Taiwan R.O.C., under grants no.  
  NSC 96-2221-E-029-019-MY3 and NSC 98-2622-E-029-001-CC2. 
∗∗
 Corresponding author. 
 Implementation of a Heuristic Network Bandwidth Measurement 123 
 
 
Fig. 2. Network statistics produced by NWS measurements demonstrated in web portal 
 
• Predictive Accuracy 
• Non-intrusiveness 
• Execution longevity 
• Ubiquity 
We have successfully developed a number of shell scripts for the automatic NWS 
deployment. And these scripts form the basis of NWS services’ management. And we 
have successfully integrated NWS services with the Ganglia web portal. 
3   Heuristic QoS Measurement 
QoS (Quality of service) [13, 14] is the ability to provide different priority to  
different applications, users, or data flows, or to guarantee a certain level of per-
formance to a data flow. It was widespread adopted in the field of computing net-
working, and we use it as a quality measurement of grid environments. In our pre-
vious project, we have built an integrated grid environment including a web portal 
composed of Ganglia and NWS services. Afterward, we start another project about 
PACS (Picture Archive and Communication System) [8] and most experiments 
were done in the same platform. The primary mission in this project is to exchange 
medical images efficiently with specific applications developed by our team. The 
application, named "Cyber [12]", has successfully integrated eight algorithms. For 
exchanging medical images efficiently with these algorithms integrated in Cyber, 
we have to configure a lot of parameters before tasks submitted. Unfortunately, we 
have no idea what's best combination of parameters we should take in advance. 
Therefore, we adopt "trial and error method" unavoidably. But it's definitely not  
 
 
 Implementation of a Heuristic Network Bandwidth Measurement 125 
 
Fig. 4 has shown a simple flowchart. In this paper, we have edit crontab(Linux 
Scheduler) to schedule some routines for inserting NWS information into database 
automatically and backing up raw data as plain text files locally. While the procedure 
routines that we scheduled in crontab are invoked, customized shell scripts are exe-
cuted. The first step of the shell script is to get host groups from the database for 
NWS information gathering. Each host group is pre-defined in the database and is 
assigned a clique for measuring network status. After the clique is created, it will 
measure network information in an equal time interval, for example, 30 seconds. Then 
the script extracts bandwidth and latency from the NWS clique respectively. If it 
successes, it will insert bandwidth and latency information into the database. 
The second routine keep raw data as plain text files locally is designed for the fu-
ture use. Currently, it just provides a different storage than a database to keep raw 
information of NWS services. 
3.2   Heuristic Architecture 
We collected historical network information of grid environments and found an ap-
proach to evaluate QoS. We could give applications dedicated parameters in a simple 
manner by means of database operations. Couples of functions have been designed 
for analyzing historical information of network performance. Statistics is helpful in 
many fields, especially for prediction. Some researchers have used statistical method 
to monitor and predict bandwidth for QoS sensitive tasks [13]. All network relative 
information was periodically categorized to most used statistics.  Besides, we have 
planned an innovative method to obtain the real-time network state that worked with 
Dynamic Domain-based Network Information Model, i.e. dynamically deploying 
clique into dedicated nodes, measuring network states, and then reporting results to a 
database, users, or applications. The enhanced version of current work which  
supports Dynamic Domain-based Network Information Model is currently under 
development. 
We have designed a simple model for the integration of Ganglia, NWS, and NINO. 
Ganglia and NINO provide the UI for users to manage and monitor grid environ-
ments. NWS and Ganglia collect related information from hosts and network regu-
larly. And “Smart Broker” provides parameters to applications like Cyber. 
Smart Broker is the key component for us to evaluate QoS. Our previous work [8, 
12] has provided users an interface for tuning up parameters which is shown as shown 
in Fig. 5. But most parameters used by this application, Cyber, must be set manually 
and it’s very inconvenient. We developed “Smart Broker” to help us to achieve auto-
mation of parameters self-optimization in diverse scenarios. Smart Broker works as 
the evaluation layer between applications and the information collection layer. We 
have pre-defined 4 task types that perform QoS measurement in various ways. 
• Download 
• Upload 
• Computational 
• Hybrid 
 Implementation of a Heuristic Network Bandwidth Measurement 127 
 
 
 
Fig. 6. NWS cliques deployed in our Grid environments 
 
 
Fig. 7.  NWS measurements as our basis for QoS evaluation 
 
 Implementation of a Heuristic Network Bandwidth Measurement 129 
 
selection. We are planning to refer some approaches proposed by other researcher to 
reduce measurements in the near future. And this evaluation approach should be ad-
justed to meet the requirements of other 3 task types, i.e., Upload-oriented, Computa-
tional and Hybrid. We’ll make a study of these kinds of tasks before long. 
References 
1. A taxonomy and survey of grid resource management systems for distributed computing. 
Softw. Pract. Exper. 32(2), 135–164 (2002) 
2. Cao, J., Jarvis, S.A., Saini, S., Kerbyson, D.J.: Performance prediction and its use in paral-
lel and distributed computing systems. Future Generation Computer Systems 22(7), 745–
754 (2006)doi: 10.1016/j.future, 02.008 
3. Chung, W., Chang, R.: A new mechanism for resource monitoring in Grid computing. Fu-
ture Generation Computer Systems 25(1), 1–7 (2009) doi: 10.1016/j.future.2008.04.008 
4. Krefting, D., Vossberg, M., Tolxdorff, T.: Simplified Grid Implementation of Medical Im-
age Processing Algorithms using a Workflow Managment System. Presented at the MIC-
CAI-Grid Workshop, New York (2008), 
http://www.i3s.unice.fr/~johan/MICCAI-Grid/website.html  
(re trieved) 
5. Legrand, A., Quinson, M.: Automatic deployment of the Network Weather Service using 
the Effective Network View. In: Proceedings of 18th International Parallel and Distributed 
Processing Symposium (2004) 
6. Network Weather Service. Network Weather Service, 
http://nws.cs.ucsb.edu/ewiki/ (retrieved) 
7. Wolski, R., Spring, N., Hayes, J.: The network weather service: A distributed resource per-
formance forecasting service for metacomputing. Future Generation Computer Sys-
tems 15(5-6), 757–768 (1999) 
8. Yang, C.T., Chen, C.H., Yang, M.F., Chiang, W.C.: MIFAS: Medical Image File Access-
ing System in Co-allocation Data Grids. In: IEEE Asia-Pacific Services Computing Con-
ference, APSCC’08, pp. 769–774 (2008) 
9. Yang, C., Chen, S.: A Multi-site Resource Allocation Strategy in Computational Grids. In: 
Advances in Grid and Pervasive Computing, pp. 199–210 (2008), 
http://dx.doi.org/10.1007/978-3-540-68083-3_21 
(retrieved July 29, 2009) 
10. Yang, C., Chen, T., Tung, H.: A Dynamic Domain-Based Network Information Model for 
Computational Grids. In: Future Generation Communication and Networking, vol. 1, pp. 
575–578. IEEE Computer Society, Los Alamitos (2007), 
http://doi.ieeecomputersociety.org/10.1109/FGCN.2007.9 
11. Yang, C., Shih, P., Chen, S., Shih, W.: An Efficient Network Information Model Using 
NWS for Grid Computing Environments. In: Grid and Cooperative Computing - GCC 
2005, pp. 287–299, http://dx.doi.org/10.1007/11590354_40 (retrieved July 
29, 2009) 
12. Yang, C., Yang, M., Chiang, W.: Implementation of a Cyber Transformer for Parallel 
Download in Co-Allocation Data Grid Environments. In: Proceedings of the 2008 Seventh 
International Conference on Grid and Cooperative Computing, pp. 242–253. IEEE Com-
puter Society, Los Alamitos (2008), 
http://portal.acm.org/citation.cfm?id=1471431 
(retrieved July 29, 2009) 
國科會補助計畫衍生研發成果推廣資料表
日期 2010年10月29日
國科會補助計畫
研發成果名稱
發明人
(創作人)
技術說明
技術移轉可行性及
預期效益
技術/產品應用範圍
產業別
計畫名稱:
計畫主持人:
計畫編號: 學門領域:
(中文)
(英文)
成果歸屬機構
(中文)
(英文)
子計畫五：雙魚座之資訊監控系統
楊朝棟
96 -2221-E -029 -019 - 平行與分散處理
子計畫五：雙魚座之資訊監控系統
東海大學 楊朝棟
格網結合網路散佈各地的資源，整合不同型態的資源所提供的服務，可支援多
種格網服務滿足不同種類的需求。雙魚座總計畫將發展格網系統的管理機制，
利用點對點的通訊技術，整合兩種不同型態的運算以及儲存資源，提供點對點
的運算與資料格網系統。透過本資訊監控系統子計畫的發展，將可以整合格網
系統的狀態資訊，藉由運算資源管理系統以及檔案儲存管理系統的研發，將可
以掌管格網系統的資源存取。本子計畫的目標在於透過資訊監控的功能，提供
系統的狀態資訊。負責監測散佈各地的格網系統狀態，包含計算資源的處理能
力、機器的負載程度等，或者儲存資源的儲存能力、儲存空間使用程度、資料
傳輸速度等，對於資源的使用狀態、可提供的服務能力，或者資源之間的網路
連線頻寬等，藉由格網系統資訊的收集與監控系統的開發，可提供使用者對於
系統的狀態查詢或程式執行的參考依據。本子計畫基於上述的技術研發，透過
建置點對點的格網環境，可增加格網系統的擴充性，達到整合不同格網系統的
目的，進而提供大型應用技術的開發與效能測試的平台。
資訊服務業
註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
常務理事 台灣雲端計算學會第一屆 常務理事 
理事 台灣雲端計算學會第二屆 理事 
顧問 台中縣電腦公會 顧問 
授課 國家高速網路與計算中心 雲端計算課程 講師 
授課 國家安全局 平行計算課程 講師 
99 年度學界協助中小企業科技關懷計畫 PC099111300 晟宏科技股份有限公司
診斷 
98 年度學界協助中小企業科技關懷計畫 PC097110874 亞盾科技股份有限公司
診斷 
98 年度學界協助中小企業科技關懷計畫 PC097110875  博盛數碼動力股份有限
公司 診斷 
東海大學創新育成中心輔導案 澄智視覺設計 輔導 
2010年榮獲東海大學頂尖論文著作獎。 
2009年經濟部工業局開放原始碼創新應用開發大賽百資贊助獎。 
2008年教育部全國校園軟體設計創意競賽第二名。 
2008年經濟部工業局黃金企鵝研發創新獎。 
2007年經濟部工業局黃金企鵝人才貢獻獎。 
International Journal of Communication Systems (SCI JCR IF=0.317, EI)
國際期刊 Area Editor. 
Journal of Convergence Information Technology (JCIT), (ISSN: 1975-9320, 
EI) 國際期刊 Editor. 
＇Grid and Cloud Computing＇ Special Issue of International Journal of 
Ad Hoc and Ubiquitous Computing (ISSN Online: 1743-8233 - ISSN Print: 
1743-8225, SCI JCR IF=0.865, EI)國際期刊 Guest Editor. 
＇Grid Computing, Applications and Technologies＇ Special Issue of 
Journal of Supercomputing (ISSN: 1573-0484, SCI JCR IF=0.687, EI)國際
期刊編輯 Guest Editor. 
2011年 Grid and Pervasive Computing (GPC 2011)國際會議諮議委員 
2011年 IEEE Parallel and Distributed Processing with Applications (ISPA 
2011)國際會議副主席 
2010 年 IEEE Computational Science and Engineering (CSE 2010)國際會議
副主席 
2010年 Grid and Pervasive Computing (GPC 2010)國際會議諮議委員 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
