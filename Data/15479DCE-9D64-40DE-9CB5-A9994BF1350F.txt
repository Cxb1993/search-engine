 
中 文 摘 要 ： 本計畫研究非規則窩輪碼之建構及設計。渦輪碼(turbo 
code)已經被廣泛應用於現代的 MIMO-OFDM 通訊系統，如
3GPP LTE-advanced 與 IEEE 802.16e 等類第四代行動通訊系
統。渦輪碼由 Berrou 等人於 1993 年提出，之後便引起廣泛
的迴響及研究。我們將 Berrou 等人所發明的渦輪碼稱為傳統
渦輪碼。非規則渦輪碼(irregular turbo codes, ITC)在西
元 2000 年由 Frey 以及 Mackay 所發明，而他們使用了窮盡法
來搜尋 ITC 的參數，並在碼長 N=131072 時，與 Berrou 所發
明的渦輪碼相比，在 BER＝10-4 獲得約 0.15dB 的編碼增益
(coding gain)。Frey 和 Mackay 引入了一種類渦輪碼，其每
個資訊位元皆不規則的重複一次以上，且以規則的穿刺模式
(puncturing pattern)進行碼位元穿刺。而非規則渦輪碼是
基於每個資訊位元皆以不規則重複次數，及不規則的穿刺模
式進行編碼。本研究報告中，我們利用階分佈多項式(degree 
distribution polynomial)來描述非規則渦輪碼。並且使用
了外部信息傳遞曲線(extrinsic information transfer 
curves, EXIT curves)來設計及分析非規則渦輪碼，進而設
計出使用(3,1)以及(37,21)兩種編碼器的非規則渦輪碼。模
擬結果顯示，我們所設計的非規則渦輪碼性能皆優於傳統的
渦輪碼。 
中文關鍵詞： 渦輪碼、非規則渦輪碼 
英 文 摘 要 ： In this report, we investigate the design and 
evaluate the performance of irregular turbo codes 
(ITC). We refer to the turbo codes invented by Berrou 
et al as conventional turbo codes. Irregular turbo 
codes were invented in 2000 by Frey and Mackay, of 
which computer exhausted search was employed to 
obtain good degree distributions and they obtained a 
0.15dB advantage at BER of 10^{-4} compared to 
conventional turbo codes of code length N=131072. 
Frey and Mackay introduce a turbo-like code of which 
each information bit is repeated regularly twice. The 
code invented by Frey and Mackay is referred as 
regular turbo codes (RTC). Based on RTC, Frey and 
Mackay also developed ITC of which some information 
bits are repeated more than twice. In this report, we 
propose a more general construction of ITC of which 
the information bits are repeated according to a 
certain degree distribution and the puncturing 
pattern is also irregular according to another degree 
 行政院國家科學委員會補助專題研究計畫 □ 成 果 報 告   □期中進度報告 
 
前瞻無線通訊多重輸入輸出系統核心技術研究--子計畫四：
非規則渦輪碼應用於多重輸入輸出系統之研究 
 
 
計畫類別：□ 個別型計畫  █整合型計畫 
計畫編號：NSC 98-2221-E-194-017-MY2 
執行期間：  98 年 8 月 1 日至  100 年 7 月 31 日 
 
計畫主持人：邱茂清 
共同主持人： 
計畫參與人員：湯迪文、廖經旻、賈濯濠、謝端桂、余之尹、丁威佑、
黃鳳汝、楊璿 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  █完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、
列管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年█二年後可公開查詢 
          
執行單位：國立中正大學通訊工程學系 
 
中   華   民   國  99   年   5  月   30   日 
█
Abstract
In this report, we investigate the design and evaluate the performance of irregular
turbo codes (ITC). We refer to the turbo codes invented by Berrou et al [2] as
conventional turbo codes. Irregular turbo codes were invented in 2000 by Frey and
Mackay, of which computer exhausted search was employed to obtain good degree
distributions and they obtained a 0.15dB advantage at BER of 10−4 compared to
conventional turbo codes of code length N = 131072. Frey and Mackay introduce
a turbo-like code of which each information bit is repeated regularly twice. The
code invented by Frey and Mackay is referred as regular turbo codes (RTC). Based
on RTC, Frey and Mackay also developed ITC of which some information bits are
repeated more than twice. In this report, we propose a more general construction
of ITC of which the information bits are repeated according to a certain degree
distribution and the puncturing pattern is also irregular according to another degree
distribution. The extrinsic information transfer (EXIT) curves are employed for the
design and analysis of ITC. We present some design examples at code rate of 1/2 using
(3, 1) and (37, 21) recursive systematic convolutional (RSC) encoders with a single
puncturing pattern or with multiple puncturing patterns. In our design examples,
we observed that the average number of edges per information node is a factor that
affects the ITC performance significantly, and we also observed that there is a trade-off
between turbo-cliff region and error floor. In addition, according to the simulations,
the performance of our proposed codes is significantly better than that of conventional
turbo codes.
i
List of Figures
2.1 Example of rate 1 (3, 1) RSC codes encoder. . . . . . . . . . . . . . . 4
2.2 Example of rate 1 (37, 21) RSC codes encoder. . . . . . . . . . . . . . 5
2.3 Puncturing coderate R = 1/3 RTC to coderate R = 1/2. . . . . . . . 7
2.4 Traditional turbo codes encoding flow chart. . . . . . . . . . . . . . . 9
2.5 Traditional turbo codes encoding flow chart with two random inter-
leaver of long length. . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
2.6 Regular turbo codes. . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
2.7 Tanner graph of regular turbo codes encoder. . . . . . . . . . . . . . 10
2.8 Tanner graph of irregular turbo codes encoder. . . . . . . . . . . . . . 12
2.9 Tanner graph of ITC decoder. . . . . . . . . . . . . . . . . . . . . . . 14
3.1 ITC iterative decoding process. . . . . . . . . . . . . . . . . . . . . . 17
3.2 VND EXIT curve explanation of degree i. . . . . . . . . . . . . . . . 19
3.3 CND EXIT curve simulation method. . . . . . . . . . . . . . . . . . . 19
3.4 VND EXIT curve of different degree dv at SNR= 0.5dB. . . . . . . . 21
3.5 CND EXIT curve of different puncturing pattern dp of code polynomial
(3, 1) at SNR=0.5dB. . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
3.6 CND EXIT curve of different puncturing pattern dp of code polynomial
(37, 21) at SNR=0.44dB. . . . . . . . . . . . . . . . . . . . . . . . . . 23
3.7 CND EXIT curve of puncturing pattern 2 of different code polynomial
at SNR=0.44dB. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
iii
Chapter 1
Introduction
Shannon proved [1] that if the code rate below the channel capacity, and the
code length approach infinity, then we could achieve arbitrarily small bit error rate
via random choosing codeword. Then how to encode and decode at appropriate
complexity and achieving the channel capacity attract the attention of many experts
and scholars. The major breakthrough of coding theory until the end of the 20th
century, traditional turbo codes [2] was invented in 1993 and low-density parity-check
(LDPC) codes [3] was rediscovered [5, 6] in 1996. These two codes are considered to
have more chance to approach the channel capacity. Recent studies had found that
LDPC codes could approach channel capacity at 0.0045dB [4]. However, we should
consider the implementation issue of the error control coding system (such as encoding
and decoding), even though the code had excellent error correcting performance.
Owing to the encoding and decoding structure, LDPC codes encoding and decoding
algorithm is complex than traditional turbo codes. Compared with LDPC codes,
the most outstanding advantage of traditional turbo codes is that it had linear time
encoding algorithm, and faster convergence of iterative decoding.
According to the advantage of linear time encoding algorithm of traditional turbo
codes, our research is focus on modified turbo codes, or call ITC [7], which base on
traditional turbo codes. In previous research, ITC obtained 0.15dB coding gain at
BER=10−4 of codelength N = 131072 . However, the design method in [7] is using
1
Chapter 2
Turbo Codes
2.1 Regular Turbo Codes
The encoding flow chart of rate 1/3 traditional turbo codes are composed of two
rate 1/2 RSC codes encoder, a random interleaver, and a puncturing mechanism.
Traditional turbo codes could be viewed as Fig. 2.4 structure.
2.1.1 Recursive Systematic Convolutional codes encoder
In [2], consider a rate 1/2 convolutional codes encoder with constraint length K
and memory ν = K−1, the input to the encoder at time k is dk, and the corresponding
memory Xk and Yk are
Xk =
ν∑
i=0
g1idk−i gi = 0, 1 (2.1)
Yk =
ν∑
i=0
g2idk−i gi = 0, 1 (2.2)
where G1 : {g1i} and G2 : {g2i} are two encoder polynomial, expressed in octal form.
The RSC codes encoder is using a feedback loop and letting one of the two outputs
Xk or Yk equal to the input bit dk . The input to the memory is no longer the bit
dk but is a new binary variable ak. If Xk = dk, the output Yk is defined by Eq. 2.2
substituting dk for ak and variable ak is recursively calculated as
3
2.1. REGULAR TURBO CODES 5
Figure 2.2: Example of rate 1 (37, 21) RSC codes encoder.
where N represent the length of the interleaved sequence. The receiver has a comple-
mentary deinterleaver, which implements the reverse function:
pi−1 : I → I, pi−1(pi(i)) = i, ∀i ∈ I. (2.6)
The interleaving distance between the positions i and j is defined as following:
d(i, j) = |i− j|+ |pi(i)− pi(j)|,∀i, j ∈ I, i 6= j. (2.7)
And the minimum interleaving distance is defined as:
dmin = min d(i, j),∀i, j ∈ I, i 6= j. (2.8)
The output codewords of the RSC codes encoder usually have high hamming
weight. But in some case, it could be happened that the systematic bit having low
hamming weight, and the parity bits also have low hamming weight. So in RTC, the
inventors introduce the interleaver to random permute information bits in order to
avoid this problem. For instance, if systematic bits and the first RSC codes encoder
produce low hamming weight codeword, because of the interleaver, the second RSC
codes encoder is hard to produce low hamming weight parity [20].
Random interleaver
Assuming the interleaving length N , we select a number n1 randomly from ensem-
ble A = 1, 2, ..., N , then the allocation pi(1) = n1 is decided and n1 is eliminated from
2.1. REGULAR TURBO CODES 7
Figure 2.3: Puncturing coderate R = 1/3 RTC to coderate R = 1/2.
2.2. IRREGULAR TURBO CODES ENCODER 9
Figure 2.4: Traditional turbo codes encoding flow chart.
Figure 2.5: Traditional turbo codes encoding flow chart with two random interleaver
of long length.
Figure 2.6: Regular turbo codes.
2.3. IRREGULAR TURBO CODES DECODER 11
the fraction of un-punctured parity bits between RSC codes encoder and parity nodes
that are punctured by puncturing pattern i. So
λi =
k · ai · i
k · dv
=
ai · i
dv
(2.15)
ρi =
(n− k) · bi · i
(n− k) · dp
=
bi · i
dp
(2.16)
The coderate could be rewritten as
R = (1 +
∑
i ρi/i∑
i λi/i
)−1 (2.17)
2.3 Irregular Turbo Codes Decoder
Fig. 2.9 depicts an general ITC decoder tanner graph. The information nodes
decoding consist of the iterative application of the sum-product algorithm, and we call
variable nodes decoder (VND). After we receive the channel output via BPSK with
±1 transmitted in AWGN channel output c′ = [u′1, u′2, . . . , u′k, p′1, p′2, . . . , p′n−k], then
the decoder computes log-likelihood ratio function [16] (LLR) φ(i) = L(u′i) =
2u′i
σ2n
,
where σ2n is AWGN channel noise variance, i = 1, 2, . . . , k for information nodes,
and L(·) denotes the log-likelihood function. In the parity nodes side, we define
ψ(j) = L(p′j) =
2p′j
σ2n
, j = 1, 2, . . . , n − k. Define {−→ζ (j)}Qj=1 is the LLR from VND to
BCJR decoder (or call check node decoder, CND). We input {−→ζ (j)}Qj=1 and {ψ(j)}n−kj=1
to the CND decoder, and the CND returns extrinsic information {←−ζ (j)}Qj=1. We
rewrite the relationship between input and output of the CND.
{←−ζ (j)}Qj=1 = BCJR{{
−→
ζ (j)}Qj=1, {ψ(j)}n−kj=1 } (2.18)
The ITC iterative decoding algorithm is base on BCJR algorithm, and the proce-
dure is given below:
1. Initial: Initialize the following variables
φ(j) = L(u′j), j = 1, . . . , k
2.3. IRREGULAR TURBO CODES DECODER 13
ψ(j) = L(p′j), j = 1, . . . , n− k (2.19)
{←−ζ (j)} = 0, j = 1, . . . , Q
2. Extrinsic information from VND to CND: Update information to BCJR decoder
messages: For ith information nodes, calculate:
χ(i) = φ(i) +
∑
j∈N(i)
{←−ζ (j)}, i = 1, . . . , k (2.20)
N(i) is the set of edges related to information node i. Then, using following
equation updates all edges from information nodes to BCJR decoder.
−→
ζ (j) = χ(i) −←−ζ (j), j ∈ N(i) (2.21)
3. Extrinsic information from CND to VND: After CND receive prior information
{−→ζ (j)}Qj=1 after interleaved, and receive LLR from parity nodes {ψ(j)}n−kj=1 , then
CND execute BCJR decoding algorithm
{←−ζ (j)}Qj=1 = BCJR({
−→
ζ (j)}Qj=1, {ψ(j)}n−kj=1 ) (2.22)
The extrinsic information {←−ζ (j)}Qj=1 is then used for step 2 updating algorithm
at next iteration.
We make decision of ith bit using following equation:
uˆi = sgn[χ
(i)] (2.23)
In practical application, the iterative procedure will stop after an amount we decided
in advance.
Chapter 3
Analysis using EXIT Curve
3.1 EXIT curve
EXIT curve [13] is a analysis tool of soft in/soft out decoder. The ITC iterative
decoding process can model as Fig. 3.1. For each iteration, the VND takes intrinsic
message (channel observation) Zi from the information nodes and outputs soft value
D. The extrinsic message of the information nodes E1 = D−A1 is passed though the
interleaver to become the a priori input A2 of the CND. The CND takes the interleaved
A2 and parity nodes Zp and feeds back extrinsic message E2 which becomes the a
priori message of VND decoder. These variables denote LLRs.
Following we use probability model to deduce its LLR characteristic. For a re-
ceived signal z, we could be written as
z = x+ n (3.1)
where x is BPSK transmitted amplitude ±1, n is AWGN channel interference, and
its conditional probability density function is
p(z|X = x) = 1√
2piσn
exp(−(z − x)
2
2σ2n
) (3.2)
where σn is variance of AWGN channel.
15
3.1. EXIT CURVE 17
with
lim
σ−→0
J(σ) = 0, lim
σ−→∞
J(σ) = 1, σ > 0.
We know that the channel capacity of the binary input/continuous output AWGN
channel is given by
CG = J(σ =
2
σn
) (3.8)
The capacity J(σ) cannot be expressed in closed form. Because it is monotonically
increasing in σ = 2
σn
and writing as following
σA = J
−1(IA). (3.9)
Information of extrinsic output IE could be also written as
IE = I(X;E) =
1
2
∑
x=−1,+1
∫ ∞
−∞
pE(ξ|X = x)× log2
2 · pE(ξ|X = x)
pE(ξ|X = −1) + pE(ξ|X = +1)dξ
(3.10)
To compute IE at fixed SNR of the decoder, we determine the σA of prior mes-
sage A, so the probability density function of IE can be determined by Monte Carlo
method.
Figure 3.1: ITC iterative decoding process.
3.2. VND AND CND EXIT CURVE 19
Figure 3.2: VND EXIT curve explanation of degree i.
Figure 3.3: CND EXIT curve simulation method.
3.3. CODE MIXTURE 21
Figure 3.4: VND EXIT curve of different degree dv at SNR= 0.5dB.
3.3. CODE MIXTURE 23
Figure 3.6: CND EXIT curve of different puncturing pattern dp of code polynomial
(37, 21) at SNR=0.44dB.
3.3. CODE MIXTURE 25
Figure 3.8: CND EXIT curve of puncturing pattern 2 of different code polynomial at
SNR=0.44dB.
4.1. (3, 1) ITC DESIGN EXAMPLE 27
4.1 (3, 1) ITC Design Example
In [17], IRA codes encoding scheme is similar to Fig. 2.8, which is used (3, 1) RSC
codes encoder. In order to compare performance with IRA (R≈ 0.502288), we choose
SNR= 0.5dB to design our (3, 1) ITC parameter because IE,VND(0, i, 0.5) ≈ 0.52396.
We show the EXIT chart of IRA in Fig. 4.1. We design (3, 1) ITC C1 using single
puncture pattern, the EXIT chart is shown in Fig. 4.2. The second (3, 1) ITC design
example C2 is used multiple puncture pattern, the EXIT chart is in Fig. 4.3, the
parameter of IRA, C1 and C2 are shown in Table 4.1, the simulation result is shown
in Fig. 4.7.
From these simulation results, we get 0.06dB channel coding gain at BER= 10−5,
and we observed that a code of more average edges per information node gets better
turbo cliff region. We observed that higher VND complexity that could improve (3, 1)
ITC performance.
4.2 (37, 21) ITC Design Example
In our (37, 21) ITC design example, we design different total edges number Q of
(37, 21) ITC at R≈ 0.502288, our design parameter are shown in Table. 4.2, and its
EXIT chart is in Fig. 4.4, Fig. 4.5, and Fig. 4.6. The simulation result is in Fig. 4.8,
and its BER trend is like to [7]. Contrast to traditional turbo codes, we got about
0.18dB channel coding gain at BER= 10−4.
In our (37, 21) irregular turbo codes design, we observed that less average edges
per information node is a method of improve its turbo cliff region, but it degrade the
error floor performance. We also observed that lower VND complexity could improve
turbo cliff region performance. In (37, 21) and (3, 1) ITC design example, we observed
that there is a trade-off between error floor and turbo cliff region in irregular turbo
codes.
4.2. (37, 21) ITC DESIGN EXAMPLE 29
Figure 4.1: IRA EXIT chart at 0.5dB
4.2. (37, 21) ITC DESIGN EXAMPLE 31
Figure 4.3: (3,1) ITC design example C2 of EXIT chart at 0.5dB
4.2. (37, 21) ITC DESIGN EXAMPLE 33
Figure 4.5: (37, 21) ITC design example C4 of EXIT chart at 0.44dB.
4.2. (37, 21) ITC DESIGN EXAMPLE 35
Figure 4.7: BER of (3,1) ITC and IRA codes, codelength= 100000.
Chapter 5
Conclusion
Former ITC design is based on computer exhausted search, so we are hard to select
more different degree profile to design our ITC. In this thesis, first we proposed the
ITC general decoder model then developed its analysis method based on EXIT chart.
In our design example, we propose two types of (3, 1) and (37, 21) ITC parameter,
these codes not only have simple encoding structures, but also provide remarkable
performances.
In (3, 1) ITC design, more average edges per information node gets better turbo
cliff region. In (37, 21) ITC design, less average edges per information node gets better
turbo cliff region. Contrast to (3, 1) ITC, we observe that the (37, 21) ITC had less
iteration number to converge.
For improving irregular turbo codes performance, we suggest following directions:
1. Partial puncturing information nodes.
2. Choose appropriate RSC codes encoder.
3. Design appropriate interleaver.
4. Find out the best number of average edges per information node.
5. Tracking ITC probability density function of each iteration.
37
BIBLIOGRAPHY 39
[9] R. J. McEliece, D . J. C. MacKay, and J. F. Cheng, “Turbo-decoding as an
instance of Pearl’s ’belief propagation’ algorithm,” IEEE Journal on Selected
Areas in Communications, vol. 16, February 1998.
[10] B. J. Frey, “Graphical Models for Machine Learning and Digital Communica-
tion,” MIT Press, 1998.
[11] L. R. Bahl, J. Cocke, F. Jelinek, and J. Raviv, “Optimal decoding of linear
codes for minimizing symbol error rate,” IEEE Trans. on Inform. Theory, vol.
20, pp. 284-287, March 1974.
[12] S. ten Brink, G. Kramer, and A. Ashikhmin, “Design of Low-Density Parity-
Check Codes for Modulation and Detection,” IEEE Trans. on Commun.,
vol.52, pp. 670-648, Apr. 2004.
[13] S. ten Brink, “Converge behavior of iteratively decoded parallel concatenated
codes,” IEEE Trans. on Commun., vol.49, pp. 1727-1737, Oct. 2001.
[14] A. Ashikhmin, G. Kramer, S. ten Brink, “Extrinsic information transfer func-
tions: A model and two properties,” in Proc. Conf. Information Sciences and
Systems, Princeton, NJ, Mar. 20-22,2002, pp. 742-747.
[15] M. Tuechler, J. Hagenauer,“EXIT charts and irregular codes,” in Proc. 2002
Conf. Information Sciences and Systems, Princeton, NJ, Mar. 2002, pp. 748-
753.
[16] J. Hagenauer, E. Offer, L. Papke, “Iterative decoding of binary block and
convolutional codes,” IEEE Trans. on Inform. Theory, vol.42, pp. 429-445,
Mar. 1996.
[17] H. Jin, A. Khandekar, and R. McEliece, “Irregular repeat-accumulate codes,”
Proc. 2nd Int. Symp. Turbo Codes and Related Topics, pp. 1-8, Brest, France,
Sept. 2000.
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/23
國科會補助計畫
計畫名稱: 子計畫四：非規則渦輪碼應用於多重輸入輸出系統之研究
計畫主持人: 邱茂清
計畫編號: 98-2221-E-194-017-MY2 學門領域: 通訊
無研發成果推廣資料
專任助理 0 0 100%  
其他成果 
(無法以量化表達
之成果如辦理學術
活動、獲得獎項、
重要國際合作、研
究成果國際影響力
及其他協助產業技
術發展之具體效益
事項等，請以文字
敘述填列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
