 III
英文摘要 
 
This project intends to investigate and design a new TCP congestion control techniques 
that can work efficiently on the high bandwidth-delay product networks. Due to the great 
progress of network technologies and the continuous extension of network boundaries, the 
per-flow product of available bandwidth and delay increases. Theory and experiments show 
that as the per-flow product of bandwidth and latency increases, TCP becomes inefficient 
and prone to instability. This failing becomes increasingly important as the Internet evolves 
to incorporate very high-bandwidth optical links and more large-delay satellite links. 
A critical design issue of TCP is its congestion control that allows the protocol to 
adjust the end-to-end communication rate to the bandwidth on the bottleneck link. However, 
TCP congestion control may function poorly in high bandwidth-delay product networks 
because of its slow response with large congestion windows. In this project, we first studied 
the root causes and influences of the issue through the simulation program execution. Then 
we proposed an improved version of TCP Vegas called Quick Vegas, in which we present an 
efficient congestion window control algorithm for a TCP source. The modification allows 
TCP connections to react faster and better to high BDP networks and therefore improves the 
overall performance. Quick Vegas is a pure end-to-end enhancing approach of Vegas. This 
will greatly alleviate the deployment issues. 
 
Keywords: high bandwidth-delay product networks, congestion control, transport protocol, 
Asymmetric networks, heterogeneous networks, wireless networks, TCP congestion control, 
transport protocol.
 2
明我們所提出的方法： 
TCP Vegas 使用下列的公式以調整其壅塞窗口(CWND): 
,)( BaseRTTActualExpected ×−=∆                                      (1) 
,
,
,1
,1
⎪⎩
⎪⎨
⎧
>∆−
<∆+
=
otherwiseCWND
ifCWND
ifCWND
CWND β
α
                                      (2) 
其中 BaseRTT 是傳送封包過程中所量測過最短的來回時間，Expected 等於 CWND 除以
BaseRTT，Actual 則是 CWND 除以目前量測到的來回時間(RTT)，α與β是兩個固定參
數，通常被設為 1 跟 3。 
 在高頻寬延遲乘積網路環境下，壅塞窗口相較於頻寬延遲乘積較小的網路會大上
許多。此外，網路資源的分配和競爭的使用者也會隨著時間不斷的改變。爲了使壅塞
窗口能夠更快速及正確的反映高頻寬延遲網路環境並做出適當的修正，其壅塞窗口的
調整方法和行為應該更為主動和積極。 
 TCP Vegas 會在壅塞避免(congestion avoidance)階段線性地調整其壅塞窗口，但對
於高頻寬延遲網路來說，這種調整方式過於被動及緩慢。藉由所測得的額外資料量，即
Δ，TCP Vegas可以採取另一種較為積極主動的壅塞窗口調整方式，即Quick Vegas所採
用的方法。Quick Vegas的運作方式描述如下： 
 在增加壅塞窗口的時候，Quick Vegas會參考先前視窗變動的情形來做調整。在現今
的網路環境下，尚無法直接得知可用的頻寬，故Quick Vegas會記錄連續發生Δ<α的次
數，即succ，並以此作為調整增加壅塞窗口的依據。其調整增加方式如下： 
( ) succ×∆+= -  CWND  CWND β  
 當第一次測量的結果是Δ<α的時候，視窗調整增加量為(β－Δ)，如果接下來的
測量結果又是Δ<α的時候，視窗調整增加量則為(β－Δ) * 2，以此類推。而當 α≥∆
的時候，succ 立即歸零。這個方法是認為，如果壅塞窗口成功地增加，即代表說目前
網路還有足夠的頻寬可以使用，故可以用比較積極主動的方式來調整增加壅塞窗口。
此外，為了避免壅塞窗口增加過快，壅塞窗口的增加量最多不會超過目前的視窗大小，
即每次測得Δ<α最多只能將視窗增加一倍。 
 當要調整減少壅塞窗口的時候，Quick Vegas會在測得Δ>β後利用Δ和(α+β)/2作
為調整視窗的依據。其調整方式如下： 
CWND = CWND－(Δ－
2
βα + ) 
 既然所測得的額外資料量即代表佔用網路瓶頸點緩衝區的數量，當額外資料量超過
理想值的時候，Quick Vegas會直接調整減少壅塞窗口以降低瓶頸點緩衝區的佔用量。 
相較於TCP Vegas，Quick Vegas的壅塞窗口調整方式更為積極主動。爲了確保額外資料
量的測量是有效的以及Quick Vegas所做的壅塞窗口調整不會過度高估實際上所需要的
調整量，在緩啟動(slow start)階段，Quick Vegas是每兩個RTT調整一次壅塞窗口。此外，
為了在競爭的使用者中達到較高的公平性，Quick Vegas會盡可能維持相同的額外資料
量，即(α+β)/2。如果所測得的額外資料量介於α和β，Quick Vegas則會線性地調整壅
 4
在第一個實驗中，Cb 為 50Mb/s，Vegas 或是 Quick Vegas 為第一對鏈結，CBR 為第二
對鏈結，其中 CBR 的鏈結是從第八十秒開始傳送資料，第一百六十秒結束資料傳送。
比較圖二和圖三，我們可以觀察到 Vegas 太早離開緩啟動並進入壅塞避免階段，並花
了 59 秒才上升到穩態。到第八十秒的時候，網路可用頻寬下降為一半，Vegas 花費了
47.9 秒才下降到穩態，在第一百六十秒的網路頻寬恢復為 50Mb/s 的時候，Vegas 花費
31.8 秒才回到穩態。相較於 Vegas，Quick Vegas 只需花費不到一半甚至更短的時間就
能達到穩定狀態，也因此 Quick Vegas 的 throughput 會比 Vegas 高上許多。而在佇列長
度及緩衝區佔用量的部份，Vegas要花上27秒的時間才能回到穩定壯態，而Quick Vegas
僅在數秒內就達到穩定的狀態，藉此我們可以了解到 Quick Vegas 在基本行為方面的
表現比 Vegas 好上許多。 
 
圖二、TCP Vegas 的基本行為 
 
 
圖三、Quick Vegas 的基本行為 
 
 6
 
圖六、當頻寬變為兩倍時達到穩態的時間 
  
最後一個實驗的 Cb 為 1Gb/s，使用者 C1-C20，C21-C40 和 C41-C60 分別於第 0 秒、
第 100 秒和第 200 秒開始傳送資料，每個使用者輲送資料的時間為 300 秒。而瓶頸緩
衝區的大小則為 1250 個封包。 
 從表一我們可以發現到，目前網路上最常見的 TCP New Reno 其使用率一直無法
達到 100%，而 Vegas 雖然可以完全使用整個網路頻寬，但需要較長的時間才能達到，
而 Quick Vegas 只需花不到 Vegas 的一半時間就可以達到。 
 
表一、瓶頸鏈結的使用率 
 
 
三、結果與討論 
 
 在本計畫的執行中，我們提出了 Quick Vegas 大幅改善了 Vegas 在高頻寬延遲乘積
網路環境下所遭遇的問題。藉由修改調整壅塞窗口的方式，以及參考先前視窗變動的
情形來做調整，Quick Vegas可以更積極主動地調整壅塞窗口，實驗的結果也顯示Quick 
Vegas 在高頻玩延遲乘積的網路環境下比起 Vegas 有更好的效能表現。 
 然而受到 TCP 的 bursty 特性影響，Vegas-based 的 TCP 版本會過早離開緩啟動並
進入壅塞避免階段，進而造成達到穩態的時間過長，雖然本研究結果 Quick Vegas 已
經比 Vegas 減少了至少一半以上的時間，但仍有努力的空間，在此計畫之後，我們希
望能針對這個問題繼續努力。 
 
