can estimate the frequency more accurately according 
to the workload, then heuristics can greatly enhance 
the effect of DVS on energy saving. We propose 
concrete scheduling algorithms in hope that the 
method can be applied to applications that run on 
real systems and use batteries as power sources. In 
view of the global up-surge of energy conservation 
and reduction in carbon emission, the methods 
developed in this project will be of great value. 
Moreover, embedded systems rely mostly on mobile 
communications technology to provide data transfer 
capabilities. In fact, the wide-spread smart phones 
integrate embedded systems technology and wireless 
transmission technology. Mobile communications 
rapidly evolve from 1G to 4G. As a 4G technology, LTE 
uses multiple antennas and sophisticated signal 
processing to boost spectral efficiency. However, 
these complex operations often result in high power 
consumption. Thus, the reduction of power consumption 
in LTE user equipment while keeping the delay of data 
transfer under control is another focus of this 
project. Good results have been obtained in the above 
areas of research through the efforts of the research 
team. 
英文關鍵詞： embedded system； multi-core； multi-processor； real 
time； DVS； task scheduling； task migration； LTE； 
DRX； QoS； sleep； energy consumption； delay 
 
1 
 
目錄 
前言………………………………………………………………………………1 
文獻探討…………………………………………………………………………1 
研究目的…………………………………………………………………………2 
研究方法…………………………………………………………………………2 
結果與討論………………………………………………………………………5 
參考文獻…………………………………………………………………………8 
計畫成果自評……………………………………………………………………9 
 
 
 
 
 
 
2 
 
斷時續，而下載網頁瀏覽也是每下載一網頁瀏覽一段時間後再下載其他網頁。這使得 UE 有機
會關閉其射頻電路，以節省能源。事實上，無線通訊已被證明為行動通訊設備整體功耗的重要
部分。藉由 DRX的有效運用，可以降低此部分的功率消耗。 
但是當一個 UE的射頻電路是關閉的，則在此期間到達的數據封包將遭到延誤，直到它再
次開啟。因此，這種方法的缺點是數據包到達，但 UE處於睡眠狀態而產生的延遲。此問題對
延遲敏感的資料型態如語音和即時視訊而言特別嚴重。因此，透徹了解 DRX對延遲的影響是
重要的課題。 [13]就 DRX / DTX 對 VoIP 的 QoS 性能的影響進行了研究，結果發現，DRX / DTX
可以減少 UE的功耗而不至於危害 VoIP 的服務品質。 
3. 研究目的 
 考慮分析系統架構特性，對不同應用的資料存取周期、指令執行速度，分析改進架構。 
 針對多核心嵌入式系統，提出更好且考慮能源消耗的工作排程機制。 
 改進 DVS，更準確預估工作頻率、工作時間。 
 提出以節能為考量的多核心排程法。 
 探討 LTE省電機制之節能效果以及其對資料傳輸延遲的影響。 
4. 研究方法 
4.1 多核心嵌入式系統排程 
4.1.1 System Model 
Many embedded systems are usually real-time systems. In this research, we consider a preemptive 
real-time system and we assume that the EDF scheduling is used in which the tasks are periodic and 
independent in execution. In a real-time system, there is a task set Λ = {r1, r2,…, rN} of N real-time 
tasks that need to be executed periodically. In the treatments of these schedulers, we assume that the 
DVFS and task migration overheads are negligible. Each task is denoted by a 3-tuple < , ,i i i iP W D    
with attributes iP  standing for period, iW  for worst-case execution time (WCET), and iD  for 
deadline which is assumed to be equal to iP . The utilization of a task i  is obtained as follows 
 ,
Wi
i Di
   (1) 
with each i  satisfying the condition 
   for 1,2, , ,i MTU i N    (2) 
where MTU is the maximal task utilization and is a system-wide parameter.  
Table 1 gives the power consumptions for XScale and PowerPC. Shown in the table are the 
operation frequencies and the corresponding voltages and power consumptions. The speed rate for a 
particular frequency is obtained by dividing the frequency by the highest frequency available on a 
processor: 
 / ,    { , , | }.
1 1i
S f f f f f f f
i L i L L
      (3) 
Our proposed algorithm also uses the relationship between the speed rates depicted in Table 1 and 
the utilization of the tasks, in order to choose a suitable operation frequency. The choice of the 
operation frequency affects the power consumption of a processor directly. The power consumption 
for a processor operating at speed rate Si is the weighted sum of the run mode power  iP S  and the 
idle power 
idle
P : 
4 
 
The second phase of the WATM algorithm is performed after the execution of a task on a processor 
k is finished. Here, we consider whether the last task on the processor k can be migrated to another 
processor. If another processor, say processor j, has a slower operation speed than the processor under 
consideration (processor k) and if accepting the last task will not affect the operation speed of 
processor j, then the last task of processor k will be migrated to processor j. After doing so, the second 
last task on processor k will become the last task and the process is repeated. In this way, the system 
can balance the workload among processors. Moreover, the operation speed of the current processor 
can be lowered earlier after some of the remaining tasks have been migrated to other processors. Thus, 
the second phase of WATM serves the dual purposes of balancing workload and saving power. A 
processor will choose its own new speed rate according to the reduced workload in the last step based 
on the criterion in (5).   
4.2 LTE 省電機制之研究 
Long-term evolution (LTE) has been heralded as the new-generation mobile communication 
standard to meet the demand for high-speed data transmission. But the heavy processing on the user 
equipment (UE) implies excessive power consumption. Discontinuous reception (DRX) is one of the 
strategies to combat the problem. With the use of DRX, UE can turn off its RF circuit and enter sleep 
state when not scheduled to receive data from the base station. While saving energy, the approach can 
lead to delay of packets when they arrive while UE is in sleep state. This research presents a 
quantitative analysis of the delay associated with DRX. In particular, the impacts of counter values, 
which govern the operation of DRX, are examined. 
A DRX cycle can be decomposed into three portions. At the onset of a DRX cycle, a UE turns on 
its RF circuit and enters idle (inactive) state for a period determined by O-Timer (on-duration timer) in 
anticipation of receiving scheduling information contained in PDCCH (physical downlink control 
channel) messages. If a PDCCH message arrives before O-Timer expires, the message is picked up at 
the beginning of a TTI (transmission time interval) and a counter is initialized to a value determined 
by I-Timer (inactivity timer). Subsequently, the counter is decremented by 1 in each TTI until it 
reaches 0, at which point the UE enters light sleep state. If another message arrives before the counter 
reaches 0, the counter is reinitialized and the decrementing process is repeated. This is illustrated in 
Figure 1. It takes one TTI for UE to wake up from light sleep and change to idle or receiving state but 
the reverse transition is instantaneous.  
 
Figure 1. DRX and relevant counters. 
Active with 
data reception
Light sleep
Active with no 
data reception (Idle)
 
1 TTI
39 mW/TTI
11 mW/TTI
0 TTI0 TTI
255.5 mW/TTI500 mW/TTI  
Figure 2. State graph for a UE in DRX mode. 
6 
 
WATM algorithms for high utilization. WATM uses task migration as well as active DVFS to reduce 
the power consumption and has sound performance in most situations.  
The value of MTU can also affect the performance as illustrated in Figure 5 and Figure 6. For these 
two figures, the value of MTU is 0.5, whereas in Figure 3 and Figure 4, the MTU value is 0.1. MTU is 
closely related to the granularity (size) of individual tasks. It becomes increasingly difficult for a 
system to allocate and migrate tasks with large values of MTU or coarser task granularity. The 
performance of WAS and WATM is more severely deteriorated than that of the AMBFF. This can be 
justified by the fact that for small values of MTU, a processor can quickly complete the execution of 
tasks, allowing it to more quickly switch to lower speeds in WAS and WATM. On the other hand, 
when the MTU value is large, the switch to lower speeds is postponed, thus hampering the 
performance of the two algorithms. 
 
 
 
 
 
 
 
 
 
 
 
5.2 LTE 省電機制之研究 
Two different situations are distinguished. In situation 1, the combined leftover PDCCH message 
from the preceding DRX cycle arrives in the first TTI of the present DRX cycle but does not start the 
I-Timer, nor is it counted as one of the PDCCH messages of the present DRX cycle. In situation 2, the 
leftover PDCCH message arrives before the O-Timer expires but not necessarily in the first TTI and is 
counted as one of the messages of the present DRX cycle. Each experiment lasts for 10000 DRX 
cycles and the average delay is taken. 
 Effect of DRX Cycle Length on Delay 
First, the values of O-Timer, I-Timer, and number of PDCCH messages in each DRX cycle are 
fixed at 3, 4, and 4, respectively. The length of DRX cycle is varied and the effect on the average 
delay incurred by PDCCH messages is evaluated.  The result is shown in Figure 7 and Table 2.  
Table 2. Average delay in ms for different lengths of DRX cycles. 
DRXt 8 10 16 20 32 40 
Analytical 1.62 1.97 4.12 5.62 10.12 13.12 
Situation 1 1.65 2.04 4.08 5.60 10.06 13.11 
Situation 2 1.73 2.29 4.51 6.05 10.51 13.45 
Figure 7 shows a general trend that delay grows with the length of the DRX cycle when the values 
of the other parameters are fixed, because a longer DRX cycle allows UE to stay in sleep state for a 
longer period. This is helpful in conserving energy given the difference in power consumption for the 
different states, but the delay is elongated as the packets have to wait longer until the next DRX cycle. 
    
 Figure 5. PowerPC 405LP with MTU=0.5.          Figure 6. XScale with MTU=0.5. 
 
 
8 
 
off. Therefore, the delay is largely independent of the value of O. In short, the discrepancy in delay 
between the two situations stems mainly from when the actual reception of leftover message occurs. 
Table 4. Average delay in ms for different lengths of DRX cycles. 
O 1 2 3 4 
Analytical 4.50 4.31 4.12 3.94 
Situation 1 4.52 4.32 4.12 3.88 
Situation 2 4.52 4.50 4.51 4.50 
以上各節所述僅為本研究計畫成果之摘錄，與本計畫有關之主要成果已陸續發表於或投稿
至相關研討會與期刊，請參見[20]-[24]。 
6. 參考文獻 
[1] Q. Qiu, Q. Wu, and M. Pedram,“Dynamic Power Management in Mobile Multimedia System with Guaranteed 
Quality-of-Service,”Proc. IEEE Design Automation Conference, pp 834-839, June 2001. 
[2] P. Mario and I. Cathania,“Power Management System on Silicon for Portable Equipment,”Proc.  IEEE 
international Conference on Electronics, Circuits and Systems, Vol. 1, pp. 13-18, September 2001. 
[3] L. Benini, R. Hodgson, and P. Siegel, “System-Level Power Estimation and Optimization,”  Proc. IEEE 
International Symposium on Low Power Electronics and Design, pp. 173-178, August 1998. 
[4] T. Mudge,“Power: A Fist Class Architectural Design Constraint,” IEEE Computer, vol. 34, no. 4, pp. 52-58, April 
2001. 
[5] V. Tiwari, S. Malik, and A. Wolfe,“Compilation Techniques for Low Energy: An Overiew,”Proc. IEEE 
Symposium on Low Power Electronics, pp. 38-39, October 1994 
[6] M. Valluri and L. John, “Is Compiling for Performance = Compiling for Power?” Proc. the 5th Annual Workshop on 
Interaction between Compilers and Computer Architectures (INTERACT-5), Monterrey, Mexico, January 20, 2001. 
[7] L. N. Chakrapani, P. Korkmaz, V.J. Mooney III, and W.F. Wong, “The Emerging Power Crisis in Embedded 
Processors: What Can a Poor Compiler Do?” Proc. the International Conference on Compilers, Architecture, and 
Synthesis for Embedded Systems, ACM Press, 2001. 
[8] Y. Zhang, L. Qian, Q. Lu, P. Qian, and L. Zhao,“Information Reuse & Integration, ” Proc.  IEEE International 
Conference, pp. 256 – 261, 10-12 Aug. 2009. 
[9] A. Agarwal, S. Rajput, and A. S. Pandya, “Power Management System for Embedded RTOS: An Object oriented 
Approach,”Proc. IEEE CCECE/CCGEI, Ottawa, May 2006. 
[10] 3GPP TS 36.331, Evolved Universal Terrestrial Radio Access Radio Resource Control Protocol Specification, v8.5.0, 
May 2009. 
[11] 3GPP TS 36.321, Evolved Universal Terrestrial Radio Access Medium Access Control Protocol Specification, v9.2.0, 
Mar. 2010. 
[12] S.-R. Yang and Y.-B. Lin, “Modeling UMTS discontinuous reception mechanism,” IEEE Trans. Wireless 
Communications, 4(1), Jan. 2005, pp. 312-319. 
[13] M. Polignano, D. Vinella,  D. Laselva, J. Wigard, and T.B. Sorensens, “Power savings and QoS impact for VoIP 
application with DRX/DTX feature in LTE,” in Proc. of IEEE Vehicular Technology Conference, pp. 1-5, Budapest, 
May 15-18, 2011. 
[14] Intel XScale Microarchitecture: Benchmarks, 2005, http://web.archive.org/web/20050326232506/ 
developer.intel.com/design/intelxscale/benchmarks.htm (Last accessed Nov. 7, 2011). 
[15] C. Rusu, R. Xu, R. Melhem, and D. Mosse, “Energy-efficient policies for request-driven soft real-time systems,” in 
Proc. of EuroMicro Conference on Real-Time Systems, pp. 175-183, July 2004.  
10 
 
2011/11/13 http://nst2011.ndhu.edu.tw/ [大會通知] 全國電信研討會投稿論文推薦至 IJEE
名單已公告，請點擊觀看或下載。 
 
發表於 CyberC 之論文也在研討會發表後，繼續擴充內容，充實研究成果，並於 2011 年 11
月投稿至期刊；至於 NST 論文也在增加內容(降低功率消耗之效果)、改進分析與模擬方法後，
投稿至知名之國際研討會 IEEE International Conference on Communications 2012，期能進一步提
高研究成果之可見度。 
在應用價值方面，本計畫為開放源碼自由軟體計畫之一，在計畫執行期間，依規定參加各
項講習與成果發表活動，並將所設計開發之程式與功能模組上傳至指定之網頁，據中研院開放
源碼軟體鑄造廠(OSSF)之統計資料顯示，多核心嵌入式系統排程之軟體模組被下載之次數多在
100 次左右，如下表所示，也顯示本計畫成果之實用性。此外，第四代行動通訊系統之建設與
服務之提供為政府重要之施政目標，也是提升國家競爭力之重要基礎建設，本計畫研究成果亦
符合此目標。 
系統安裝使用手冊.docx 
2.9 MB, 下載次數 27 
AMBFF.java 
10.6 KB, 下載次數 100 
Main.java 
2.2 KB, 下載次數 97 
WAS.java 
5 KB, 下載次數 102 
WASCore.java 
2.5 KB, 下載次數 106 
WASTask.java 
559 Bytes, 下載次數 89 
core.java 
4.6 KB, 下載次數 102 
coreSpeed.java 
1013 Bytes, 下載次數 93 
showResul.java 
1.4 KB, 下載次數 92 
sortMTask.java 
747 Bytes, 下載次數 91 
task.java 
1.1 KB, 下載次數 109 
 
 
 人才培育 
本計畫重要目標之一為人才之培育，參與本計畫之師生合組為一研究團隊，每週固定召開
研究討論會，就研究相關議題加以探討，並由學生報告研究心得，藉此訓練學生論文閱讀、口
頭報告之技巧，進一步將研究成果撰寫為論文，在國內與國際研討會中發表，對培養學生之研
究能力與拓展國際視野有甚大之幫助。至本年度七月止，已有一位研究生獲得碩士學位，並進
入科技業服研發替代役，其餘學生尚在校繼續研究工作。除研究生外，大學部學生亦協助本計
畫之程式設計，藉此學習研究方法與系統開發過程。經此訓練，學生參加經濟部工業局主辦之
競賽(App高手爭霸賽)獲得佳績，亦屬本計畫之另一成果。 
Paper  ID 
222 189 276 281 167 66 37 12 210 180 162 
Hwang, University of Sothern California) 
 International Collaboration for Privacy and Information Security. (Prof. Tai M. 
Chung, School of Information and Communication Engineering, Sungkyunkwan 
University) 
 Cyber-Individual: Visions and Challenges. (Prof. Jianhua Ma, Hosei University) 
 
與會概況 
研討會在 Busan Lotte Hotel 舉辦，場地分別位於頂樓與地下室，keynote 
speeches 與 ISPA 主要之論文發表安排於地下室，其他 workshops 之論文發表則
安排於頂樓之數個房間同時進行，出席研討會者可依興趣選擇所欲聆聽之論文。
場地各項設施相當完善，美中不足之處為可上網之地點較少，主要集中在論文發
表場地，以致許多出席研討會者利用聽講時段上網，對現場之氣氛多少造成影響，
此點Moshe Vardi (Editor in Chief, CACM)也曾為文加以針砭，不過此現象似有越
來越普遍的傾向，值得研討會主辦單位注意並研商對策。 
Keynote speeches 為研討會重心，各場演講均吸引廣大聽眾。其中 Prof. Kai 
Hwang之演講分析 grid computing 演進至 cloud computing 之歷程，準備甚多精
美投影片，深入剖析領域之發展歷程與趨勢，足見其用心。對多核心(many-core)
系統與物聯網之技術發展也運用許多實際案例加以說明。黃教授透露，目前正在
撰寫相關書籍，因此多數資料均為第一手之訊息。其餘三場亦分別就軟體工程用
於工程教育與系統發展、隱私與資訊安全之國際合作、網路空間與個人間若實若
虛之關係等主題加以探討，部分觀點或許尚有爭議，但也為未來之發展勾勒出可
能之方向。 
本研究團隊發表之論文 Energy-Efficient DRX Scheduling for QoS Traffic in 
LTE Networks 被安排於五月 26 日下午 Middleware & Network and Pervasive 
Computing 之 session 進行口頭報告，同場報告者共有四篇論文。結束後不久即
舉辦研討會之 Banquet。Banquet 中除欣賞韓國傳統藝術表演、表揚研討會工作
人員外，重點尚有頒發最佳論文獎(Best paper awards)，獲頒論文獎者共三篇，本
團隊所發表論文為其中之一，另一篇則為同場次發表之論文 A Hybrid 
Shared-nothing/Shared-data Storage Scheme for Large-scale Data Processing。 
出席本次研討會之人員以亞洲國家居多，其中又以中國大陸各地之大學與研
究機構參與者最多，台灣則有中研院與各大學代表，另有來自澳洲、英國、義大
利、墨西哥、美國等地之研究者，齊聚一堂交換研究心得，機會甚為難得。除正
式活動時間外，也利用用餐、夜間聚會等活動場合和與會者對一研究主題做更深
入之探討，或討論未來合作之可能性，收穫甚多。來自歐洲的研究人員分享歐洲
研究計畫執行之特色，例如許多計畫均為跨國性質，以發揮各國之長處，達到資
源與人員共享之目標。 
 
活動照片與最佳論文獎 
 Banquet 會場，亦為頒獎場地 
 
最佳論文獎頒獎，本團隊所發表論文為獲獎之第三篇 
 
Energy-Efficient DRX Scheduling for QoS Traffic in LTE Networks 
 
 
 
 
 
 
 
 
 
Abstract—LTE has been touted as a leading-edge mobile 
communication technology offering high data rate and 
low latency. However, with a sophisticated physical layer 
to boost performance, the processing demand on user 
equipment (UE) is tremendous, which implies that the 
energy consumption is heavy. To curb undesirable energy 
waste and extend battery life, a variety of energy-
conserving measures have been developed, among which 
discontinuous reception (DRX) is shown to be useful. This 
paper introduces the light sleeping mode in order to fur-
ther improve the performance of DRX for traffic with 
QoS requirements in LTE networks. The key idea of light 
sleeping is to turn off the power amplifier but leave the 
other components in the transceiver on to cut down ener-
gy consumption while allowing fast wakeup. Quantitative 
analysis shows that the proposed method can substantial-
ly reduce energy consumption and satisfy the delay re-
quirement of QoS traffic. 
Keywords-LTE; DRX; QoS; light sleeping; deep sleep-
ing; energy consumption; delay 
I.    INTRODUCTION 
Mobile communication has constantly evolved to-
ward higher speeds in order to support bandwidth-
demanding services. To achieve the goal, many recent-
ly developed technologies have been incorporated in 
the physical layer of emerging LTE [1]. However, the 
advanced features also put a heavy burden on the ener-
gy supply of user equipment (UE). DRX has been spe-
cified in LTE to save energy consumption [2] by al-
lowing UE to switch off its receiver and go to sleep. 
During the sleep period, UE cannot receive packets 
from the base station (eNB). The DRX parameters are 
configured so as to optimize  
energy and resource savings. On the other hand, the 
use of DRX mode will inevitably lead to extra delays 
for the UE to transmit/receive data, which may be un-
acceptable for certain applications. Thus, there is a 
need to strike a balance between packet delay and 
energy saving. 
DRX has been studied extensively in the context of 
Universal Mobile Telecommunications System (UMTS) 
[3-6] and LTE [7-9]. Different approaches have been 
taken. Some assume Poisson arrival traffic pattern. 
Others have modeled the state transitions in DRX as a 
semi-Markov process. In particular, LTE DRX has 
been shown in [10] to achieve greater power saving 
than UMTS DRX at the cost of prolonged delay to 
wake up. But some types of traffic are very sensitive to 
delays and meeting the QoS requirement is mandatory 
for such traffic. As packets of such traffic arrive with a 
short interval in between, if UE goes into deep sleep, it 
may not be able to wake up in time to receive the in-
coming packets. This will limit the usefulness of DRX 
mechanism. Hence, criteria need to be established for 
UEs to decide whether to go to sleep or not in a DRX 
cycle.   
In this paper, we exploit the idea of light sleeping 
[11] to shorten wakeup time and reduce transition 
energy. Here, light sleeping mode is defined as the 
situation wherein all the components in the transceiver 
of a UE remain on except the power amplifier. This 
sleeping mode is especially useful for short DRX 
cycles. The main goal of the paper is to determine the 
duration of the DRX cycle for deep sleeping and light 
sleeping to optimize energy saving without hampering 
QoS requirement. The remainder of the paper is orga-
nized as follows. Section II provides a description of 
light sleeping for DRX. Circuit implementation and 
timing analysis are discussed. In Section III, energy 
consumption in one DRX cycle is calculated for differ-
ent methods. Further performance evaluation based on 
packet arrival pattern and numerical results are pre-
sented in Section IV. Finally, concluding remarks are 
given in Section V. 
Kuo-Chang Ting 
Dept. of Business  Adm.  
and Electronic Engineering, 
Minghsin University  
of Sci. and Tech. 
Hsin Chu, Taiwan 
kcting82@gmail.com 
Hwang-Cheng Wang 
Dept. of Electronic  
Engineering 
National Ilan University 
Yilan, Taiwan 
hcwang@niu.edu.tw 
Chih-Cheng Tseng 
Dept. of Electrical  
Engineering 
National Ilan University 
Yilan, Taiwan 
tsengcc@niu.edu.tw 
Fang-Chang Kuo 
Dept. of Electronic  
Engineering 
National Ilan University 
Yilan, Taiwan 
kfc@niu.edu.tw 
Ninth IEEE International Symposium on Parallel and Distributed Processing with Applications
978-0-7695-4428-1/11 $26.00 © 2011 IEEE
DOI 10.1109/ISPA.2011.57
213
Since the switching time of the amplifier is critical 
to the application of our scheme, it is important to eva-
luate it through analysis and simulation. In a typical 
PA such as the one in [13], the total power P of the 
amplifier is 1300 mW and the total capacitance C is 
approximately 95 nF. Thus, we can get the switching 
time by the following equation: 
 / ( / )DDT C V P V= × Δ  (1) 
where VDD is the supply voltage. If the voltage gap ΔV 
is equal to VDD, (1) can be rewritten as 
 2 / .DDT C V P= ×  (2) 
If VDD is 3 V, the switching time will be 658 ns ac-
cording to (2). The result has been validated by SPICE 
simulation. Hence, it is sufficient to switch the amplifi-
er on if the wakeup time of the amplifier is assumed to 
be 1 μs. If the stable connection time to other compo-
nents of the transceiver is also 1 μs, the total wakeup 
time can be taken to be 2 μs. The energy needed from 
light sleeping mode to active mode can be estimated by 
switching power multiplied by the switching time. De-
spite the short transition time, the power consumption 
of light sleeping is higher than that of deep sleeping 
because most components of the transceiver are left on. 
Hence, if the sleeping time were very long, e.g., 300 
ms, the energy consumed in light sleeping mode would 
be no less than that of deep sleeping mode. Therefore, 
light sleeping mode is mainly used in cases which have 
short sleeping intervals and require fast wakeup. 
III.    ENERGY CONSUMPTION IN ONE DRX CYCLE 
Suppose the traffic under evaluation is VoIP follow-
ing the G711 standard with 16 ms inter-packet arrival 
time. In order to meet the QoS requirement that the 
largest allowable delay is 16 ms, the UE must serve 
this traffic within one DRX cycle if we assume the 
length of a DRX cycle is also 16 ms. Note that silence 
suppression and bursty talks between two UEs are not 
considered in this study. Further assume that the prob-
ability of receiving a valid PDCCH message during the 
on-duration of DRX cycle is h(z) = 1/(O) where z is in 
the range of 0 to O−1. 
We first compute the energy consumed by a UE that 
enters light sleeping mode after the expiration of I-
Timer as a function of z: 
( ) ( )[ ( ( 1) ( ( 1))
( ( 1))) ].
DXL e p p
p t
e z h z P I O I I O z
L DRX I O z TTI
= + − + − − −
+ − − + + ×
 (3) 
The average energy consumption in one DRX cycle 
can then be obtained as follows: 
 
1
0
( ) [ ( / 2 1/ 2))
              ( ( / 2 1/ 2))] .
O
DXL DXL e P
z
P t
E e z P I I O
L DRX I O TTI
−
=
= = + + −
+ − − + ×
∑  (4) 
If, instead, the UE remains in idle mode after the 
expiration of I-Timer, the energy consumption in one 
DRX cycle is 
 ( 1) .DXI t P eE DRX I TTI P= − × × +  (5) 
The meanings of the symbols in (3)-(5) and subsequent 
expressions can be found in TABLE I. Note that in this 
paper we assume the round trip time of Hybrid Auto-
 
Fig. 2. Schematic of PA control switch. 
TABLE I. PARAMETERS AND TYPICAL VALUE RANGES.
Parameter Description and typical range of values 
TTI Transmission Time Interval = 1 ms 
DRXt Duration of a (short) DRX cycle (2-320 ms) 
DRXe(x) 
Energy consumed in a DRX cycle with x 
PDCCH messages received. 
Pe 
Energy consumed in receiving a PDCCH mes-
sage within one TTI (1 mJ) 
O O-Timer of a DRX cycle  
I I-Timer of a DRX cycle 
DP 
Average power consumed when UE enters 
deep sleeping mode (10-50 mW) 
LP 
Average power consumed when UE enters 
light sleeping mode (30-120 mW) 
IP 
Average power consumed by UE in idle state  
(300-700 mW) 
Dwakeupt
Time needed for UE to wake up from deep 
sleeping mode to active mode (2-100 ms) 
Lwakeupt 
Time needed for UE to wake up from light 
sleeping mode to active mode (1-5 μs) 
Dwakeupp
Average power for UE to wake up from deep 
sleeping mode to active mode (0.4-1 W) 
Lwakeupp 
Average power for UE to wake up from light 
sleeping mode to active mode (1-2 W) 
 
215
 1
2
( ( ) ) /
2 ,
2
n
D t t
i
t
D DRX O n i DRX n
n n DRX O
n
=
= − + −
− +
= −
∑
 (10) 
 
( ((
)  )
) / .
D e p t
t t p
p t
E nP I I TTI DRX n I
nDRX TTI Dwakeup D
Dwakeup Dwakeup n
= + × + − −
+ × − ×
+ ×
 (11) 
Based on the above formulas and the parameter val-
ues given in TABLE II, the energy consumption and 
delay for each valid PDCCH message received can be 
calculated. The results are shown in Fig. 4 and Fig. 5, 
respectively. Fig. 4 shows that if UE enters deep sleep-
ing mode, the energy consumption is still higher than if 
UE enters light sleeping mode when the number of 
short DRX cycles is less than 7. However, when n in-
creases above 7, the energy consumption of UE enter-
ing deep sleeping mode will be lower than that of en-
tering light sleeping mode. But as shown in Fig. 5, the 
delay will increase dramatically from 32.2 ms for n = 5 
to 102.1 ms for n = 14. In contrast, the energy con-
sumption and delay are essentially independent of n for 
light sleeping. 
Next, the effect of wakeup time on energy con-
sumption is examined for deep sleeping. Fig. 6 depicts 
how energy consumption per PDCCH message 
changes when Dwakeupt is varied from 5 to 70 ms. The 
parameter values are as shown in TABLE II with n fixed 
at 8. The figure shows that energy consumption grows 
almost linearly with Dwakeupt but the rate of growth is 
mild. Delay is independent of Dwakeupt and has a val-
ue of 55 ms for the given n, which is much longer than 
that (5.06 ms) for light sleeping. 
V.     CONCLUSION 
We have discussed the drawback and deficiency of 
deep sleeping in the context of DRX, particularly for 
QoS traffic. To address the issues, light sleeping is 
proposed. Circuit implementation to enable light sleep-
ing is described and analyzed. Energy consumption of 
light sleeping and idle mode is compared. To allow 
accurate performance evaluation, we have derived ana-
lytical expressions based on traffic model. Numerical 
results reveal that if UE wants to reduce energy con-
sumption by entering deep sleeping mode in lieu of 
light sleeping mode, long DRX cycle with a cycle time 
which is several times that of short DRX cycle would 
have to be used. However, the delay will then increase 
sharply. On the other hand, the delay associated with 
light sleeping mode remains at a relatively small value. 
In summary, through careful analysis, we have demon-
strated the advantages of the proposed scheme over 
other alternatives. 
ACKNOWLEDGMENT 
This research was partially supported by the Na-
tional Science Council of Taiwan, ROC under Grant 
number NSC 99-2220-E-197-001. 
REFERENCES 
[1]  3GPP TS 36.331, Radio Access Network Evolved Uni-
versal Terrestrial Radio Access (E-UTRA) Radio Re-
source Control (RRC) Protocol Specification, v. 8.5.0, 
May 2009. 
 
Fig. 4. Average energy consumption in receiving a PDCCH 
message versus DRX cycles. 
 
Fig. 5. Average delay of each PDCCH message vs. DRX cycles. 
2
2.5
3
3.5
4
4.5
5
5 6 7 8 9 10 11 12 13 14
En
er
gy
 c
on
su
m
ed
 p
er
 P
D
C
C
H
 (m
J)
Number of DRX cycles (n)
E_L
E_D
0
20
40
60
80
100
120
5 6 7 8 9 10 11 12 13 14
A
ve
ra
ge
 d
el
ay
 p
er
 P
D
C
C
H
 (m
s)
Number of DRX cycles (n)
D_L
D_D
 
Fig. 6. Energy consumption vs. wakeup time for deep sleeping. 
0
1
2
3
4
5
6
7
0 10 20 30 40 50 60 70
En
er
gy
 c
om
su
m
ed
 p
er
 P
D
C
C
H
 (m
J)
Dwakeup_t (ms)
217
CyberC-2011 第三屆網絡分散式計算與知識發現國際研討會 
出國報告 
陳冠允 
國立宜蘭大學電子工程系 研究生兼計畫助理 
 
一、 會議介紹 
CyberC-2011(The 3th International Conference on Cyber-Enabled Distributed Computing and 
Knowledge Discovery)，為期三天，於 2011年 10月 10日到 12日在中國首都北京舉行。該
研討會由北京交通大學主辦，IEEE計算機協會(IEEE Computer Society)、美國路易斯維爾大學
等單位協辦。論文集由 IEEE計算機協會出版，收錄於 IEEExplore線上資料庫供查詢，並且會
被 EI等多家科技數據庫列入索引。 
共有來自世界多國專家、學者與會，總共提出一百餘篇論文，分屬下列十大主題：  
1. Distributed Control, Database, Data Ming and Algorithms  
2. Network, Services, and Mobile Communication 
3. Quality of Service and User Experience 
4. System Management, Configuration, and Performance 
5. Authentication, Key, Privacy and Reliability 
6. Algorithm, Architecture and Systems 
7. Design, Implementation, and System Management 
8. Cloud Computing 
9. Cognitive Radio 
10. Healthcare Computing and Applications 
 
大會並安排多場 Keynote speeches，包括 
 Large Scale Mobility Network Optimization and Data Mining, Wenjie Zhao, AT&T Labs 
Research 
 Cloud Value – Think Again, Think Different, Dr. Alok Srivastava , CTO, ISV Practice, 
Microsoft Corporation 
 Huawei Strategy in Cloud Computing, Ren Jiankang, Huawei Technologies 
 Towards Agent-based Cloud Commerce and Cloud Search Engine, Professor Ben Kwang-Mong 
Sim , Associate Editor, IEEE Transactions on Systems 
 QoS and Traffic Management for CDMA Networks, Dr. Fengyi Yang, Vice President of the 
innovation center, and Deputy of the CTO, China Telecom Beijing Research Institute 
 Journey to the Cloud, Sudipta Panda, Tech Mahindra 
其中四場與雲端計算有關，也可看出此研究領域的重要性與趨勢。 
Task Migration for Energy Conservation in 
Real-Time Multi-Processor Embedded Systems 
Hwang-Cheng Wang 
Department of Electronic Engineering 
National Ilan University 
Ilan, Taiwan 
hcwang@niu.edu.tw 
Cheng-Wen Yao 
Department of Electronic Engineering 
National Ilan University 
Ilan, Taiwan 
appgra@hotmail.com 
 
 
Abstract—In recent years, portable devices and tablet PCs 
grow fast and become more convenient and mobile. 
Applications like multimedia, SIP, and 3D movies become 
more diverse than before. However, the complex architecture 
and heavy computing demands increase energy consumption. 
Therefore, how to extend the standby and usage time of the 
devices has become an important issue. In this paper we 
propose a task scheduling algorithm in a real-time multi-
processor system. We reduce the workload in high speed 
processors with the aid of task migration so that the entire 
system can switch to low speed as soon as it can in order to 
reduce energy consumption. A distinctive feature is that actual 
execution time is used in the decision instead of worst-case 
execution time, which allows for more effective task migration. 
Performance results based on realistic processor power 
consumption models are promising. Effects of parameter 
values on the performance are also examined. 
Keywords-embedded system; multi-processor; real time; DVS; 
speed rate, task scheduling; task migration 
I.  INTRODUCTION 
Embedded system applications which typically integrate 
various types of multimedia applications have become 
increasingly popular. The addition of DSP (digital signal 
processor) and multi-processor improves the performance of 
new embedded systems. The enhanced hardware facilitates 
the processing of a large number of complex 3D graphics. 
Thus, a modern system meets the computing needs by using 
multi-processor and incorporates multi-threading for high 
performance and lower operating temperature. In such 
systems, how to effectively schedule tasks in order to reduce 
the power consumption is an important research topic [1] [2]. 
The power management mechanism and hardware support 
can be traced back to 1989 when Intel developed CPUs that 
can work at lower frequencies when the system is idle. 
Moreover, some components can be shut down to reduce 
power consumption when they are idle [3]. Together 
hardware support and power saving mechanisms play an 
important role in reducing energy consumption.  
In a real-time system, it is imperative that the system 
complete execution of the task set within a given time limit. 
Therefore, DVS (Dynamic Voltage Scaling) algorithms have 
to perform scheduling based on the workload of each 
processor. DVS mechanism is a tradeoff between 
performance and battery life. Since a system does not need 
high performance all the time, the operating frequency of the 
processors can be lowered to reduce energy consumption. 
This paper proposes a scheduling strategy based on DVS. 
After a task set is assigned to the processors in a multi-
processor system, a task can be re-allocated to another 
processor based on the workload of the processors. The 
decision is based on the actual execution time rather than the 
worst-case execution time. Practical processor power models 
are used to assess the performance of the proposed algorithm. 
It is shown that the proposed approach achieves better 
performance than existing methods in terms of energy saving. 
The rest of the paper is organized as follows. Section II 
provides an overview of related work on DVS and multi-
processor scheduling. Section III describes the system model 
and the new DVS algorithms. Section IV presents simulation 
methodology and results. Finally, concluding remarks are 
given in Section V. 
II. RELATED WORK 
High-performance scheduling in a real-time system 
allows the tasks to be completed within a time limit and 
reduce the switching between states. DVS (Dynamic Voltage 
Scaling) [4-7] and DFS (Dynamic Frequency Scaling) are 
two approaches used to reduce power consumption [8]. 
Research in recent years has also expanded to green energy 
including the conversion of solar, wind, and tide energies 
into electricity [10-12]. 
A. Dynamic Voltage Scaling 
In general, an embedded system needs to be in high-
performance mode only for a small fraction of the time. DVS 
mechanism allows the system to lower the operation 
frequency. Power consumption of a processor fabricated by 
CMOS technology can be divided into two categories: 
dynamic and static. When the processor is processing data, 
the required power consumption is called the dynamic power 
and denoted by dP , which is the energy consumed during a 
time unit. Factors that affect the dynamic power include the 
load capacitance LC , the supply voltage DDV , and the clock 
frequency f [10] and can be expressed as 
 2P C V fd L DD    (1) 
Among the factors, capacitance LC  is decided at the 
time of hardware design and manufacturing. From energy-
2011 International Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery
978-0-7695-4557-8/11 $26.00 © 2011 IEEE
DOI 10.1109/CyberC.2011.69
393
consumption of a processor directly. Power consumption is 
the weighted sum of run mode 
 P S  and idle power idleP  
as shown below: 
 
  1U Utot totPower P S PidleS S
    
 
 (5) 
where S represents the chosen speed rate of a processor on 
which the total utilization of all the tasks is totU . Values of 
( )P S and idleP are also given in Table I. 
TABLE I. PROCESSOR POWER MODELSʳAND PARAMETERS 
Processor 
type XScale [19] PowerPC 405LP [20] 
Speed rate 0.15 0.4 0.6 0.8 1.0 0.1 0.3 0.8 1.0 
Frequency 
(MHz) 150 400 600 800 1000 33 100 266 333 
Voltage 
(V) 0.75 1.0 1.3 1.6 1.8 1.0 1.0 1.8 1.9 
Run mode 
power 
(mW) 
80 170 400 900 1600 19 72 600 750 
Idle 
power 
(mW) 
40 [21] 12 
B. The Proposed Algorithm 
In the following we describe the proposed scheduling 
algorithm called workload adaptive task migration (WATM). 
First observe that in a multi-processor system, utilizations 
falling within the same range of speed rate have the same 
corresponding power consumption. For instance, in XScale, 
the same run mode power of 400 mW is used when 
utilization is 0.5 and 0.6 because the system operates at the 
same speed rate 0.6 for the two values of utilization.  
 
Figure 3. The first phase of WATM algorithm 
By making use of this at run-time, algorithm WATM can 
save power consumption. The algorithm consists of two 
phases. Figure 3 shows the operations of the first phase. In 
this phase, the algorithm chooses an appropriate speed rate 
from the set of available discrete speed rates for each 
processor when a task set needs to be processed. 
In the first phase, the algorithm has to decide whether to 
assign a task in the task set to a processor and choose 
suitable speed rate. To do that, the algorithm gets the speed 
rate and workload of a processor and determines whether the 
task can be assigned to it based on whether the condition 
TaskArray[i].utilization+ProcessorCore[j].utilization 	 Proce
ssorCore[j].SpeedRate is satisfied. We raise the speed rate of 
processor 1 (line 17) if all the processors cannot handle the 
task using the current speed rate. Through the simple 
schedulability test for EDF scheduling 
 ,1 2 SpeedRaten ii
     	  (6) 
where in  is the number of tasks on processor i, and 
SpeedRatei is the smallest value of speed rate of processor i 
that satisfies (6), we can obtain the speed rate and the 
assigned tasks for each processor in the system at the end of 
this phase. 
 
Figure 4. The second phase of WATM algorithm 
When DVS is implemented, a system will slow down its 
operation speed when a task is finished and the workload is 
reduced. Many algorithms schedule tasks based on WCET. 
However, execution of tasks typically takes less time than 
WCET under most circumstances. Therefore, WATM uses 
the actual execution time or processor cycles in the second 
phase to migrate tasks when a processor has completed the 
execution of a task. This allows more time for the system to 
switch to a lower speed rate in order to save energy. The idea 
has also been exploited in [22] in which the system is 
allowed to lower its operation frequency for the remaining 
tasks while meeting the real-time requirement.  
The second phase of WATM algorithm shown in Figure 
4 is executed after a task is finished. First, the actual 
execution time or number of processor cycles is calculated 
for updating task scheduling in line 1. Next, we consider 
whether the last task on the current processor can be 
Input: 
ProcessorCore  //processor set 
DisSpeed //discontinuous processor speed set 
 
1:  thisCore.setUtiliztion ( /AC Pi i );   
// ACi  is the actual execution time or processor cycles 
2:  for ( j = 1 to sizeof (ProcessorCore)) { 
3:     if (thisCore.Speed > ProcessorCore[j].Speed) { 
4:        if (thisCore.LastTask.Utilization + ProcessorCore[j].Utilization 
5:          < ProcessorCore[j].SpeedRate) { 
6:           migrate(thisCore.LastTask, ProcessorCore[j]); 
7:        } 
8:     } 
9:  } 
10: thisCore.selectProcessorSpeedBnd (); 
Input: 
TaskArray   //task set 
ProcessorCore   //processor set 
DisSpeed  //discontinuous processor speed set 
 
1:  for (i = 1 to sizeof(TaskArray)){ 
2:     int SpeedGrade = ProcessorCore [1].getProcessorSpeedBnd(); 
3:     for (j = 1 to sizeof(ProcessorCore)){ 
4:        if (TaskArray[i].utilization + ProcessorCore[j].utilization 
5:          <=ProcessorCore[j].SpeedRate) 
6:        { 
7:           ProcessorCore[j].addTask(TaskArray[i]);  
//increase utilization of processor j 
8:           ProcessorCore[j].setProcessorSpeedBnd (SpeedGrade); 
9:           break; 
10:       } 
11:       if (j == sizeof(ProcessorCore)){ 
12:          SpeedGrade = SpeedGrade + 1; 
13:          if (SpeedGrade > sizeof(DisSpeed)){ 
14:             return false; 
15:          } else { 
16:             j = 0; 
17:             ProcessorCore[1].setProcessorSpeedBnd (SpeedGrade); 
18:          } 
19:       } 
20:       ProcessorCore[j+1].setProcessorSpeedBnd (SpeedGrade); 
21:    } 
22:  } 
395
demonstrate greater capability of energy saving by DVS. On 
the other hand, AMBFF does not perform DVS at run-time, 
making its energy saving performance worse than the other 
two algorithms for high utilization. WATM uses task 
migration as well as active DVS to reduce energy 
consumption and has sound performance in most situations.  
MTU also affects the performance, as illustrated in 
Figures 8 and 9. The value of MTU is 0.5 for these two 
figures, in contrast to 0.1 for Figures 6 and 7. MTU is closely 
related to the granularity (size) of individual tasks. It 
becomes increasingly difficult for a system to allocate and 
migrate tasks with large values of MTU or coarser task 
granularity. The performance of WAS and WATM is more 
severely deteriorated than that of AMBFF. The reason is that 
for small values of MTU, a processor can quickly complete 
the execution of tasks, allowing it to more quickly switch to 
lower speeds in WAS and WATM. On the other hand, when 
MTU is large, the switch to lower speeds is postponed, thus 
hampering the performance of the two algorithms. 
In Figure 10, energy consumption results were 
normalized with respect to AMBFF to highlight the above 
observations. It clearly shows the relatively poor 
performance of WAS when utilization is low. The difference 
between the three algorithms dwindles when the average 
utilization is high and MTU is large. 
 
 
 
Figure 8. Simulation results on PowerPC 405LP with MTU=0.5
 
 
Figure 9. Simulation results on XScale with MTU=0.5  
 
 
Figure 10. Same as Figure 9 with energy normalized against AMBFF 
When the average utilization of a system equals one of 
the discrete speed rates, WATM has worse performance than 
the other values of average utilization. Figure 8 shows this 
when average utilization is 0.8. WATM migrates tasks from 
a processor of high speed rate to other processors of low 
speed rate. If average utilization equals one of the discrete 
speeds, all of the processors will choose the same operation 
speed, nullifying the energy-saving effort. With more 
discrete speeds, XScale is better suited for choosing 
appropriate operation speed. Therefore, XScale also offers 
greater opportunities for migrating tasks to reduce energy 
consumption.  
WAS algorithm will allocate a task to the processor of 
minimum workload in a system to balance the workload 
among processors. As a result, it tends to activate more 
processors than AMBFF and WATM, as reflected in Table II. 
For low average utilization, it is not necessary to activate all 
the processors in a system. WATM and AMBFF consider the 
relationship between utilization and the discrete speeds. In 
Figure 11, WAS allocates a task to the other processor on 
XScale to balance the workload. WAS and WATM both 
select the 0.4 speed rate and have the same power 
consumption. But WATM can use a smaller number of 
active processors than WAS, which is helpful in saving 
power. 
TABLE II. Number of active processors on XScale when MTU=0.1 
 
0.1 0.2 0.3 
WATM 3 5 7 
AMBFF 3 5 7 
WAS 8 8 8 
Ave. U. 
Algo. 
397
 CyberC - International Conference on Cyber-Enabled Distributed Computing and Knowledge Discovery                                                
CyberC 2011:
The International Conference on Cyber-Enabled 
Distributed Computing and Knowledge Discovery
http://www.cyberc.org/
  
INVITATION OF CYBERC-2011 CONFERENCE 
 
Dear KUAN-YUN CHEN:  
The CyberC 2011 (The third International Conference on Cyber-enabled Distributed Computing and 
Knowledge Discovery) will be held at Radegast Lake View Hotel, Beijing, China, October 10-12, 2011. 
Based on the reviewer's reports, your paper:   
Title: Task Migration for Energy Conservation in Real-Time Multi-Processor Embedded Systems 
Paper ID: # 1569472353 
Authors:  Kuan-Yun Chen, Hwang-Cheng Wang, Cheng-Wen Yao  
has been accepted for publication and you are cordially invited for ORAL PRESENTATION at the 
conference. All the accepted papers will be published as a part of the conference proceedings by IEEE 
Computer Society Press, and will be also collected by IEE INSPEC, EI (Compendex), and Thomson ISI. 
CyberC-11 has selected total 100+ papers from more than 13 countries. The selections of papers are based on 
the reviews of more than 300 experts from 18 countries.  
On behalf of the CyberC-11 organizing committee, I am writing this letter to invite your kind participation 
and presentation in the conference, which, I am sure, will certainly enhance the conference’s importance and 
success.  
Thank you very much for your contribution for the conference. I am looking forward to meeting you at 
CyberC-11.  
Yours sincerely,  
 
 
Bin Xie, Ph.D. 
CyberC-11 Program Chairs 
InfoBeyond Technology LLC, President 
Tel: 1 502 742 9770 
Email: Bin.Xie@Computer.org  
 
And  
Dongmei Sun, Professor 
Beijing Jiaotong University 
Phone：86 13581900878  
Email: dmsun@bjtu.edu.cn 
 
 
   
99 年度專題研究計畫研究成果彙整表 
計畫主持人：王煌城 計畫編號：99-2220-E-197-001- 
計畫名稱：嵌入式系統省電方法之研究與改進 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 2 2 80%  
研究報告/技術報告 1 1 100%  
研討會論文 2 3 80% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 50%  
研究報告/技術報告 0 0 100%  
研討會論文 3 0 60% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
