Table of Contents
1. 前言...........................................................................................................................5
2. 目的...........................................................................................................................6
3. 研究方法...................................................................................................................7
3.1 MAP Editor......................................................................................................8
3.2 Vehicle Movement Editor..............................................................................10
4. 結果與討論.............................................................................................................13
A. Existence of traffic lights ................................................................................14
B. Driver route choice..........................................................................................16
C. Overtaking behavior ........................................................................................18
5. 相關研究.................................................................................................................20
A. Mobility models ..............................................................................................20
B. VAENT simulators..........................................................................................21
6. 成果發表.................................................................................................................23
6.1. 會議論文......................................................................................................23
6.2. 期刊論文......................................................................................................23
6.3. 海報(Poster).................................................................................................23
7. 結論.........................................................................................................................24
參考資料......................................................................................................................25
Table of Figures
Table 1. Comparison of path characteristics between the shortest path and the fastest
path...............................................................................................................................17
2. 目的
Selecting appropriate level of details in the mobility model for a VANET
simulation is a critical decision. Unrealistic mobility model can produce simulations
that are misleading or incorrect. On the other hand, adding details requires time to
implement and debug. In addition, it might increase simulation complexity, slow
down simulation, and distract the research problem at hand. In this work, we develop
a tool MOVE (MObility model generator for VEhicular networks) to facilitate users
to rapidly generate realistic mobility models for VANET simulations. MOVE
provides an environment that allows the user to quickly pinpoint incorrect details and
manage details overhead. Our tool is built on top of an open source micro-traffic
simulator SUMO [9]. The output of MOVE is a mobility trace file that contains
information of realistic vehicle movements which can be immediately used by
popular simulation tools such as ns-2 or qualnet. MOVE allows users to rapidly
generate realistic VANET mobility models in two aspects:- by interfacing with real
world map databases such as TIGER (Topologically Integrated GEographic Encoding
and Referencing) [10] and Google Earth, MOVE allows the user to conveniently
incorporate realistic road maps into the simulation. In addition, by providing a set of
Graphical User Interfaces that automate the simulation script generation, MOVE
allows the user to quickly generate realistic simulation scenarios without the hassle of
writing simulation scripts as well as learning about the internal details of the
simulator.
The architecture of MOVE is shown in Figure 1. In this work, we first describe
the architecture implementation of MOVE (Section 3). We then compare MOVE
against the commonly used random waypoint model and show that a realistic mobility
model is critical for VANET simulations. We present three case studies that consider
three different scenarios including the existence of traffic light, driver route choice at
the intersection, and car overtaking behavior. We discuss how these details affect the
network topology and resultingly the performance of VANET in the simulation
(Section 4).
Figure 1. The architecture of MOVE
debugging (e.g. to avoid incorrect setting of simulation parameters). Finally, one of
the major overhead before one can start conducting research using simulations is to
learn about the internal details of the simulator and write customized
simulator-specific scripts to generate various simulation scenarios for the research
problem under study [11]. To reduce such an overhead, MOVE provides an interface
to automatically generate simulation scripts on the fly based on the parameters that
the user inputs into MOVE. We currently support auto-generation of ns-2 and qualnet
simulation scripts, as shown in Figure 4.
Figure 3. Visualization of Vehicle movements
(a) Traffic model generation for ns-2 (b) Traffic model generation for qualnet
Figure 4. Traffic Model Generation
3.1 MAP Editor
In MOVE, the road map can be generated manually, automatically or imported
from a real world map. Manual generation of the map requires inputs of two types of
information, nodesand edges. A ”node” is one particular point on the map which can 
be either a junction or the dead end of a road. Furthermore, the junction nodes can be
either normal road junctions or traffic lights. The edge is the road that connects two
points (nodes) on a map. The attributes associated with an edge include speed limit,
The road map can also be generated automatically without any user input. Three
types of random maps are currently available: grid, spider, and random networks.
There are some parameters associated with different types of random maps such as
number of grids and the number of spider arms and circles. Finally, one can also
generate a realistic map by importing real world maps from publicly available
database. We currently support the TIGER maps which are available from U.S.
Census Bureau. Figure 7 shows a grid map generated from the random map generator
and a street map in the Houston area based on a TIGER database file.
(a) A grid map (b) A random map (c) A real world map
Figure 7. Road Map generation using the Map Editor
3.2 Vehicle Movement Editor
The movements of vehicles can be generated automatically or manually using
the Vehicle Movement Editor. To generate vehicle movement automatically, one
needs to first define a vehicle flow which describes a fleet of vehicles toward the same
direction. The parameters of each flow consist of the starting road and destination of
the vehicle fleet, the time to start and end the vehicle flow, the number of vehicles in
the flow and the inter-departure time of the vehicles originating from the starting road.
In addition, a MOVE user can define the probability of turning to different directions
at each junction (e.g. 0.5 to turn left, 0.3 to turn right and 0.2 to go straight) in the
editor. Figure 8(a) shows a snapshot of the Flow definition Editor.
One can also generate vehicle movement manually using the Vehicle Movement
Editor which allows users to specify several properties of vehicle routes including the
number of vehicles in a particular route, vehicle departure time, origin and destination
of the vehicle, duration of the trip, vehicle speed (including acceleration, deceleration
and maximum speed), etc.
Figure 8(b) shows a snapshot of the Vehicle Movement Editor. Note that, in
addition to simulating vehicle-to-vehicle communication, our tool is also useful for
simulations of vehicle-to-infrastructure communication (e.g. the communication
between mobile nodes and road-side static gateway nodes). A static node can be
Mobility models play an important role in VANET simulations. Nodes location,
density, and direction etc. affect VANET performance directly. The objective of
MOVE is to inject as much details as possible into the simulation in order to provide a
more “realistic” mobility model. However, a “truely realistic” simulation is very 
challenging due to that human behavior (e.g. mood, sex, age, etc.) and unexpected
road accidents are difficult to model while all of them have strong effects on vehicle
movement patterns. Therefore, simulation designers need to understand what level of
details are relevant to their research questions under study. In this section, we evaluate
the impact of mobility models generated by MOVE on the performance of ad-hoc
routing protocols. The road topology generated by MOVE is based on the TIGER
database data. The propagation model employed in our simulation is the log normal
shadowing model. We used a path loss exponent 2.56 with standard deviation 4.0
based on real-world measurement data from an inter-vehicle experiment previously
carried out in Sydney suburban area [13]. All nodes use 802.11 MAC operating at
2Mbps. The transmission range is 250m.
studies. Specifically, we set out to understand how the existence of traffic lights,
driver route choice and car overtaking behavior affect the VANET simulation results.
The number of nodes in our simulations is 300 and the simulation time lasts for 1000
seconds. The roads created in the simulation have two lanes.
A. Existence of traffic lights
In real world, traffic lights are used to regulate traffic flow moving in different
directions. The existence of trafic lights tends to create a “clustering” efect. In other 
words, places where there is a traffic light are likely to have a higher node density due
to that vehicles are forced to stop at the traffic light to wait for the light to turn green.
Intuitively, a high node density might improve the network connectivity. On the other
hand, a higher node density might also suggest a higher chance for packet collision
since more nodes might be transmitting at the same time. In addition, the distance
between two adjacent traffic lights can have a significant effect on the network
connectivity. Specificaly, the network can be “fragmented” by the trafic lights when
the radio transmission range is smaller than the distance between two adjacent clusters.
In other words, a link breakage can happen when the inter-cluster distance is larger
than the radio coverage.
Figure 11 shows the distribution of the number of neighboring nodes when ten
traffic lights are included in the simulations. Our results show that each node has
twice the number of neighboring nodes when traffic lights are simulated, as compared
to the case when traffic lights are not simulated. Here we define a “neighboring node” 
as the node which is within the radio range of a vehicle. Having a larger number of
neighboring nodes typically suggests a better network connectivity.
Figure 11. Clustering effect due to the traffic light
Finally, we find that the traffic light cycle can also have a significant impact on
the network performance. As shown in Figure 14, we observe from simulations that
the packet delivery ratio decrease as we increase the traffic light cycle duration
(X-axis is the duration of the green light and the red light). While the increased red
light cycle increases the cluster size, vehicles are also able to travel farther with a
longer green light duration which introduces more link breakage between clusters and
results in more packet losses.
Figure 14. Effect of traffic cycle duration
B. Driver route choice
In real world, a driver normally has to decide his moving direction at an
intersection. He can choose to either go straight, turn left, or turn right. MOVE allows
a user to define the turning probability to different directions at each intersection (e.g.
0.5 to turn left,0.3 to go straight and 0.2 to turn left) in the Vehicle Movement Editor.
As shown in Figure 15, we find that different choices of route directions can
significantly change the simulation results (the x-y-z notation in Figure 15 means that
the car has x% of chance to turn left, y% to go straight and z% to turn right).
0.00
0.10
0.20
0.30
0.40
0.50
0.60
0.70
0.80
0.90
1.00
50 100 150 200 250 300 350
The number of nodes
Pa
ck
et
D
el
iv
er
y
R
at
io
The shortest path
The fastest travel path
Figure 16. Evaluation packet delivery ratio in high density network
C. Overtaking behavior
In real world, a faster vehicle can overtake some other slower ones when
overtaking is allowed on a multi-lane road. Overtaking behavior can have a great
effect on the network topology and should be considered. Specifically, when
overtaking behavior is not allowed, it usually results in a chain-like topology and a
shorter and uniform inter-vehicle distance (the uniform distance is due to that the
vehicle needs to maintain a safe distance from the adjacent cars), which often suggests
a better network connectivity. We observe a dramatic impact on the network
performance when the overtaking behavior is allowed. In addition, we find that the
effect of overtaking behavior is less significant when the network density is higher.
As shown in Figure 17, the packet delivery ratios in overtaking-allowed scenario is
close to results of no-overtaking scenario when we increase the number of nodes from
250 to 350.
Figure 17. Effect of car overtaking behavior
5. 相關研究
The details of model could have a critical effect on network simulations. An
unrealistic model with insufficient details might produce incorrect results. Heidemann
et al. [8] studied how the details of energy and radio propagation models affect the
result of sensor network simulations. Zhang et al. [16] used traces taken from
UMassDieselNet project [17] to study the effect of mobility models on the
performance of DTN. They showed a finer grained route-level model of inter-contact
times predict performance much more accurately than the coarser-grained
all-bus-pairs aggregated model. This suggests that one must take care in choosing the
right level of model granularity when modeling mobility-related measures such as
inter-contact times. Complementary to previous studies, in this work we look at the
effect of model details on VANET simulations. Our work mainly builds on prior work
in MANET mobility models and VANET simulators.
A. Mobility models
Random WayPoint (RWP) [18] is an earlier mobility model widely used in
MANET simulation [19], [20], [21], [22]. RWP assumes that nodes can move freely
in a simulation area without considering any obstacle. However, in a VANET
environment vehicles are typically restricted by streets, traffic lights and obstacles.
Hong et al. [23] proposed a Reference Point Group Mobility (RPGM) model to
characterize the relationship between mobile hosts. Bettstetter et al. [24] present a
Random Direction Model which introduces a stop-turn-and-go behavior which can
mimic the vehicle behavior at the intersections. Camp et al. [25] surveyed different
mobility models and divided them into two categories: entity models and group
models. Bai et al. [26], [27] did a similar survey and further introduced Freeway and
Manhattan mobility models in which car following and overtaking behaviors are
included. Saha et al. [7] proposed a macro mobility model based on TIGER map
database. This work considers the use of Dijkstra shortest path algorithm to select the
path from source to destination. Jardosh et al. [28] present an obstacle mobility model
that considers the placement of obstacles in the simulation and discussed that the
effect of obstacles on the signal propagation. Stepanov et al. [29] described a spatial
model that considered path selection and user movement dynamics (such as road
congestion and carfollowing behavior). Japp et al. [30] present a city mobility model
that is based IDM (Intelligent-Driver Model). Treiber et al. [31] discussed a model
that support car turning at the intersections. Zimmermann et al. [32] proposed a
mobility model for urban environments where the paths are computed based on
Voronoi graphs and the vehicles movement is constrained by the computed paths.
Street RAndom Waypoint (STRAW) [15] model considered traffic light control and
starting position is not configurable. Another drawback of this tool is its dependency
on SWANS. Finally, STRAW does not provide any GUI that allows the users to
visualize the movements of cars.
BonnMotion [42] is a simple tool that can be used to create and analyses mobility
scenarios. Similar to MOVE, the mobility scenarios created by BonnMotion can be
exported to ns-2 and qualnet. However, BonnMotion only models basic motion
constraints and does not consider any micro-mobility. Furthermore, BonnMotion is a
text-based application that runs on a command shell and does not provide any
graphical user interfaces as MOVE does. Complementary to these previous efforts,
our work emphasizes on creating a tool that allows users to rapidly generate realistic
mobility models for VANET simulations.
7. 結論
In this work, we first describe a tool MOVE which is based on an open source
micro-traffic simulator SUMO. MOVE allows user to quickly generate realistic
mobility models for vehicular network simulations. We show that the details of a
mobility model such as the existence of traffic lights, driver route choice and car
overtaking behavior can have a significant impact on the simulation results. Care
should be taken if simple mobility models are used for evaluation of VANET as the
results might not be as close to reality as expected. Our next step is to use MOVE to
understand the effect of user travel plan (such as path selection, means of
transportation, etc) on VANET simulations. We first evaluated congestion significant
effect in VANET. The results depicted congestion can increase network performance.
We have made MOVE publicly available and can be downloaded via the
following URL- http://lens1.csie.ncku.edu.tw/MOVE/. In our current implementation,
the movements of vehicles are based on static configurations predefined in the
Vehicle Movement Editor. In other words, the mobility model is first generated
off-line and then used by a network simulator like ns-2. In the next version of our
software, because an accident can change mobility model in any time, we plan to
build an interface to tightly integrate SUMO and ns-2. Such an interface will allow
that vehicle state information (such as location, speed, direction, etc) can be fed into
ns-2 in real time. Hence, during the simulation the vehicles can dynamically adjust
their routes based on different traffic scenarios and communication techniques
employed.
on-demand routing protocols for ad hoc networks,” in Proc. IEEE Infocom, 2000.
[20] G. Holand and N. H. Vaidya, “Proc. mobicom, acm intern. conf. on mobile 
computing and networking,” in Proc. IEEE Infocom, Aug. 1999.
[21] C. E. Perkins and E. M. Royer, “Ad-hoc on-demand distance vector routing,” in 
Proc. IEEE Workshop on Mobile Computing Systems and Applications, Feb. 1999.
[22] P. Johansson, T. Larsson, N. Hedman, B. Mielczarek, and M. Degermark,
“Routing protocols for mobile ad-hoc networks - a comparative performance
analysis,” in IEEE MOBICOM, 1999, p. 195V206.
[23] X. Hong, M. Gerla, G. Pei, and C.-C. Chiang, “A group mobility model for ad 
hoc wireless networks,” in Proc. ACM MSWiM, 1999.
[24] C. Betsteter, “Smooth is beter than sharp: a random mobility model for 
simulation of wireless networks,” in Proc. MSWiM01, ACM, 2001.
[25] T. Camp, J. Boleng, and V. Davies, “A survey of mobility models for ad hoc 
network research,” in Wireless Communications and Mobile Computing (WCMC):
Special issue on Mobile Ad Hoc Networking: Research, Trends and Applications, vol.
2, no. 5, 2002, pp. 483–502.
[26] F. Bai, N. Sadagopan, and A. Helmy, “Important: a framework to systematicaly 
analyze the impact of mobility on performance of routing protocols for ad hoc
networks,” in The 22th IEEE Annual Joint Conference on Computer Communications
and Networking INFOCOM 2003, 2003, pp. 825–835.
[27] F. Bai, N. Sadagopan, and A. Helmy, “The important framework for analyzing 
the impact of mobility on performance of routing for ad hoc networks,” AdHoc
Networks Journal - Elsevier Science, vol. 1, no. 4, pp. 383–403, Nov. 2003.
[28] A. P. Jardosh, E. M, Belding-Royer, K. C. Almeroth, and S. Suri, “Real-world
environment models for mobile network evaluation,” Mar. 2005.
[29] I. Stepanov, P.-J. Maron, and K. Rothermel, “Mobility modeling of outdoor 
scenarios for manets,” in Proc. of the 38th annual Symposium on Simulation
ANSS ’05, Apr. 2005, pp. 312–322.
[30] M. B. Sven Jaap and L. Wolf, “Evaluation of routing protocols for vehicular ad 
hoc networks in city traffic scenarios,” in Proc. of the 5th International Conference
on Intelligent Transportation Systems Telecommunications (ITST), 2005.
[31] M. Treiber, A. Hennecke, and D. Helbing, “Congested trafic states in empirical 
observations and microscopic simulations,” IPhys. Rev., vol. 62, no. 2, Aug. 2000.
[32] H.-M. Zimmermann, I. Gruber, and C. Roman, “A voronoi-based mobility model
for urban environments,” in Proc. of the European Wireless 2005 (EW05), Apr. 2005.
[33] A. Mahajan, N. Potnis, K. Gopalan, and A. A. Wang, “Urban mobility models 
for vanets,” in Proc. of the IEEE Workshop on Next Generation Wireless Networks
(WoNGeN), Dec. 2006.
出席國際學術會議報告
96年 9月 21日
報告人姓名 藍崑展 服務機構及 職 稱
國立成功大學
資訊工程學系
時間
會議
地點
96年 8月 27日至 8月 31
日
Kyoto, Japan
會 議 名 稱 (英文) ACM SIGCOMM 2007
發表論文題目
(Poster)
(英文) Implementation of a Wireless Mesh Network Testbed for Mission-Critical
Infrastructures
報告內容包括下列各項:
一、參加會議經過
二、與會心得
三、考察參觀活動(無是項活動者省略)
四、建議
五、攜回資料名稱及內容
六、其他
此次會議議題相當廣泛，大家參與會議時討論亦非常熱烈，大會安排
多場海報式發表，使得大家可以針對自己興趣之主題充分與發表者深入討
論，因此收獲相當多。此次會議中華民國參加之人員比往常多，雖然在國
外，大家亦可交換心得及了解目前在各個領域之研究情形。經由這次會議
的參與，不但得以認識一些相關領域之學者，互相交換研究心得，而且可
吸收最新資訊，對日後之研究將有所助益。此外，本人亦參與一場 Keynote
Speech.
另外, 本人參加所有論文發表包括
1. Enterprise Networks session
2. Network Applications session
3. System Design session
4. Incentives session
5. Routing session
6. Attack protection session
7. Network Characteristics session
8. Resource Allocation session
9. Wireless session
10. Alternative architecture session
(四) 參觀活動
(五) 大會並未安排任何參觀活動
