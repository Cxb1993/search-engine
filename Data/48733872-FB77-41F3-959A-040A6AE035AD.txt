中文摘要
在本計畫中, 我們將探測圖圖集的研究推廣到圖類別寬度 (graphclass-width)
的研究上,令G表示一個圖類別,圖類別寬度(G-width)定義如下: 一個圖G的圖類
別寬度 (G-width)為 k,若圖G上存在 k個獨立集合 (independent sets), N1, . . . ,Nk,
我們在圖G上加上一些邊(x,y), 其中x和y必須屬於同一個Ni中, 使得加邊後的圖
屬於G。 如果圖G上的獨立集合 (independent sets) Ni, i = 1, . . . ,k, 已經預先指
定, 我們稱之為分割已知的情形 (partitioned case)。 決定一個圖G的G-width 是在
許多圖類別都 NP-complete的問題, 像是保距圖 (distance-hereditary graphs), 弦
圖 (chordal graphs), 互補圖 (cographs), 門檻圖 (threshold graphs) 等等。 在本
計畫中, 我們針對這些圖類別辨識問題介紹其固定參數形式的問題定義,我們將
這些問題定義在保距圖 (distance-hereditary graphs), 互補圖 (cographs), 門檻圖
(threshold graphs) 和簡易完美圖 (trivially-perfect graphs) 等圖類別上。 其中互
補圖 (cographs) 和門檻圖 (threshold graphs) 的圖類別寬度至多為k所形成的圖
可用樹的結構 (tree-structure) 表示, 我們利用 Kruskal 定理證明這些圖集具有
有限個 forbidden induced subgraphs 之特性。 Seymour 和 Oum 定義了在圖上
的 rankwith,圖類別寬度的研究和 rankwidth的研究更是息息相關的,假如在G圖
集中, 所有的圖都有有限的rankwidth, 對任一固定常數k,G-width 至多為k的圖集
中所包含的圖, 他們的 rankwidth 至多為2k, 假如這些圖集的辨識問題可以表示
成 monadic second-order logic, 那麼這些G-width 至多為k的圖就可以在O(n3)的
時間複雜度被辨識出來。 在本計畫中們針對以下的 G-width 至多為k的圖類別設
計一系列的固定參數演算法來辨識這些圖集, (1) 區塊圖 (blockgraphs), (2) 簡
易完美圖 (trivially-perfect graphs), (3) 門檻圖 (threshold graphs), (4) 互補圖
(cographs)。除此之外,我們定義了新的圖寬度類別,稱為簡單圖寬度類別 (Simple-
width), 這個新的圖類別寬度可以用來近似我們熟知的 rankwidth, 並針對簡單
圖寬度類別為2的圖類別設計出多項式時間的辨識演算法以及該圖類別特性的探
討, 其中簡單圖寬度為2的類別包含2-互補圖類別 (2-cographs), 可擴展成一k-互
補圖類別 (k-cographs)。 針對以下的圖類別設計出一系列的多項式時間的演算法
來辨識這些圖集 (i)簡單圖寬度為2的類別 (Simple-width = 2), (ii) 2-互補圖 (2-
cograph),(iii) 證明存在多項式時間的演算法辨識k-互補圖 (k-cographs)。 我們更
定義一個 Rankwidth 為k的圖類別的一個子集k-保距圖, 並找出這個圖類別的特
性及辨識演算法,有別於前述的門檻圖類別 (threshold graph width),我們定義一
個新的門檻圖類別寬度 (k-threshold graphs),並針對2-門檻圖 (2-threshold; black-
i
Abstract
We generalize the concept of probe graphs to the graphclass-width. Let G be a class
of graph. A graph G has G-width k if there exist independent sets N1, . . . ,Nk such
that G can be embedded into a graph of G by adding some edges (x,y) where x
and y are both in one of the Ni. We refer to the partitioned case when the inde-
pendent sets are part of the input. The determination of G-width is NP-complete
for many classes, including distance-hereditary graphs, chordal graphs, cographs,
threshold graphs, &tc. We investigated the fixed-parameter problem for classes
such as distance-hereditary graphs, cographs, threshold graphs and trivially perfect
graphs. These classes have a tree-structure and Kruskal’s theorem implies that for
classes such as cographs and threshold graphs the graphs of G-width at most k are
characterized by a finite collection of forbidden induced subgraphs. The notion of
G-width is closely related to the rankwidth of graphs, introduced by Seymour and
Oum. If all graphs in G have bounded rankwidth then the graphs of G-width at most
k have rankwidth at most 2k for each fixed k. If furthermore the recognition can
be formulated in monadic second-order logic then the graphs of G-width at most k
can be recognized in O(n3) time for each natural number k. We obtain additional
results for blockgraphs, cographs, threshold graphs and trivially perfect graphs.
For studying the graph class of rankwidth at most k, we study its subclass called
k-distance-hereditary graphs. We give a recognition algorithm for this class. More-
over, we define a new graph width called simple to approximate rankwidth called
simple width. For those graphs of simple width 2, we give an O(n2) time algorithm
to recognize them and find their characteristics. The above achievements have
been written down into paper formate (see Appendix). Some of these results have
been accepted by international conferences including TAMC 2009, IWOCA 2009,
CATS 2010,WALCOM 2010, CSR 2010, and CATS 2011. The paper published in the
proceedings of CATS 2010 is accepted by Chicago Journal of Theoretical Computer
Science. In this report, we will demonstrate all of them.
Keywords: G-width, cograph-width, complete-width, block-graph width, trivially-
perfect width, threshold-width, k-probe graphs, k-probe block graphs, k-probe
trivially perfect graphs, k-probe threshold graphs, k-probe cographs, k-threshold
graphs, k-distance hereditary graphs, k-cographs, simple width.
iii
4.6.1 Graphs with simple-width 2 . . . . . . . . . . . . . . . . . . . 51
4.7 k-DH-Graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
4.7.1 k-Cographs . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58
4.7.2 A tree-structure . . . . . . . . . . . . . . . . . . . . . . . . . . 60
4.7.3 A recognition algorithm . . . . . . . . . . . . . . . . . . . . . 63
4.8 k-Threshold graphs . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
4.8.1 Special 2-threshold graphs . . . . . . . . . . . . . . . . . . . . 67
4.8.2 Partitioned black-and-white threshold graphs . . . . . . . . . 77
4.8.3 The switching class of threshold graphs . . . . . . . . . . . . 83
5 結果與討論 87
6 計畫成果自評 87
7 參考文獻 88
8 Appendix 96
8.1 出席國際會議CSR 2010心得報告 . . . . . . . . . . . . . . . . . . 96
8.2 出席國際會議WALCOM 2010心得報告 . . . . . . . . . . . . . . . 100
8.3 Maw-Shang Chang, Ling-Ju Hung, Ton Kloks, and Sheng-Lung Peng,
Block-graph Width, in Proceedings of TAMC 2009. . . . . . . . . . . . 103
8.4 Ling-Ju Hung, Ton Kloks, and Chuan Min Lee, Trivially-perfectWidth,
in Proceedings of IWOCA 2009. . . . . . . . . . . . . . . . . . . . . . . 103
8.5 Ling-Ju Hung and Ton Kloks, Kruskalian Graphs k-Cographs, in Pro-
ceedings of CATS 2010. . . . . . . . . . . . . . . . . . . . . . . . . . . 103
8.6 Ling-Ju Hung and Ton Kloks, On Some Simple Widths, in Proceedings
of WALCOM 2010. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
8.7 Ling-Ju Hung and Ton Kloks, Classifying Rankwidth k-DH-Graphs,
in Proceedings of CSR 2010. . . . . . . . . . . . . . . . . . . . . . . . 103
8.8 Ling-Ju Hung, Ton Kloks, and Fernando Sanchaz Villaamil, Black-
and-White Threshold Graphs, to appear in Proceedings of CATS 2011. 103
8.9 Ling-Ju Hung and Ton Kloks, k-Cographs are Kruskalian, accepted
by Chicago Journal of Theoretical Computer Science. . . . . . . . . . . 103
8.10 Maw-Shang Chang, Ling-Ju Hung, Ton Kloks, and Sheng-Lung Peng,
On the Threshold-Width of Graphs, Manuscript. . . . . . . . . . . . . 103
v
1 前言
Zhang introduced probe graphs for the class of interval graphs in 1994. In the
human genome project, the physical mapping of DNA is a costly operation. For
the reassembling of the DNA-molecule, one measures how pairs of clones overlap.
This leads to the interval graph recognition problem. Zhang proposed to divide the
fragments of DNA, which are copied into clones, into probes and nonprobes and
to perform the costly overlap-tests only for the overlap of probes with all the other
clones. The question whether a DNA-molecule can be built from a collection of
clones then boils down to the recognition of probe interval graphs: Given a graph
G with its vertices partitioned into probes P and an independent set of nonprobes
N, find an embedding of G into an interval graph H such that:
(i) every edge of G is also an edge of H and
(ii) if e = (x,y) is an edge of H which is not an edge of G then x,y ∈ N.
Initially, Zhang did not solve this embedding problem for the whole class of interval
graphs but only for some subclass. The partitioned probe interval graph recogni-
tion problem was solved first by Johnson and Spinrad in 2001 and by McConnell
and Spinrad in 2002 by slightly different methods. In 2003 Berry, Golumbic, and
Lipshteyn published a paper on the recognition of probe chordal graphs. This was
the first paper to generalize the probe-concept to arbitrary graph classes.
We review concisely the relationship of this new concept with the best-known
width-parameters to date. We first generalize the probe operation as follows: Let
G be a class of graphs containing all cliques and let k be a nonnegative number.
A graph H is an k-probe graph of G if there exists a collection of k independent
sets N1, . . . ,Nk, not necessarily disjoint, such that H can be embedded into a graph
G ∈ G such that all edges of H are also edges of G and if e = (x,y) is an edge
of G which is not an edge of H then there exists an index j ∈ {1, . . . ,k} such that
x,y ∈ Nj. The minimum k for which such an embedding of a graph H exists is
called the G-width of H.
1
3 研究目的
From a theoretical point of view, this obstacle was taken away with the intro-
duction of rankwidth. Let G be a graph. A rank-decomposition is a pair (T , τ)
where T is a ternary tree and τ is a bijection from the leaves of T to the vertices of
G. Each edge e of T gives rise to a partition of the leaves into two sets and, via τ,
to a partition of the vertices of G into two sets P and Q. Consider the 0/1-matrix
C = C(e) with rows in 1-1–correspondence with the vertices of P and columns in
1-1–correspondence with the vertices of Q. An entry of the matrix C is one if the
row and column of the entry correspond with a pair of adjacent vertices in P and
Q. The cutrank of e in T is the rank over GF(2) of this cutrank-matrix C(e). The
rank of T is the maximum cutrank of its edges. The rankwidth of the graph G is the
minimum rank over all rank-decompositions of G.
The graph classes for which the parameters cliquewidth and rankwidth are
bounded coincide: Oum and Seymour showed that rw 6 cw 6 2rw+1− 1. That pa-
per presents an O(n9 logn) algorithm that finds a cliquewidth-expression of width
23cw+2 − 1. The running time was later reduced to O(n3). Problems that can be
formulated in C2MS-logic (an extension of the monadic second-order logic without
edge-set quantification which allows a parity-check) can be solved in linear time if
the input is given with a k-expression. Rankwidth can be phrased in this language
using the concept of vertex-minors. Following suit, a combinatorial algorithm that
computes a rank-decomposition for a graph of bounded rankwidth was obtained
by Hline˘ny´ and Oum. This algorithm runs in O(n3) time. Interestingly, it is still
unknown whether cliquewidth is in FPT. Computing cliquewidth is NP-complete
(Fellows et al. 2006). The NP-completeness of rankwidth was proved by Hline˘ny´
and Oum.
Our interest in rankwidth was triggered first of all by the following observation.
It is easy to see from the definition of rankwidth, that if R is the class of graphs
of rankwidth at most k, then the rankwidth of the probe graphs of R is at most
2k. Iterating this process we obtain the following: Let R be a class of graphs of
rankwidth at most k. Then the graphs of R-width at most ℓ have rankwidth at most
2ℓk. Thus, for each constant ℓ, ℓ-probe graphs of graph classes G that have bounded
rankwidth, have, at least in theory, the same algorithmic benefits as the graphs
3
4 研究方法
In this report, we studied block-graph width, trivially-perfect width, threshold-
width, and cograph width.
To start, we give the definition of G-width.
Definition 1. Let G be a class of graphs which contains all cliques. The G-width
of a graph G is the minimum number k of independent sets N1, . . . ,Nk in G such
that there exists an embedding H ∈ G of G such that for every edge e = (x,y) in H
which is not an edge of G there exists an i with x,y ∈ Ni.
We restrict the G-width parameter to classes of graphs that contain all cliques to
ensure that it is well-defined for every (finite) graph.
In this report, we investigate the width-parameter for the following four classes.
• Block graphs, B. We called the width-parameter for block graphs block-graph
width, or B-width,
• Trivially-perfect graphs, TP. We call the width-parameter for trivially-perfect
graphs the thrivially-perfect width or TP-width,
• Threshold graphs, TH. We call the width-parameter for threshold graphs the
threshold-width or TH-width, and
• Cographs, C. We call the width-parameter for cographs the cograph-width or
C-width.
If a graph G has G-width k then we call G also a k-probe G graph. For example,
if a graph G has cograph-width k then we call G also a k-probe cograph. We refer
to the partitioned case of the problem when a collection of, possibly overlapping,
independent sets Ni, i = 1, . . . ,k is a part of the input. We call such a collection of
independent sets a witness.
4.1 Block-graph width
Block graphs were introduced in [53]. They are special ptolemaic graphs, i.e.,
gem-free chordal graphs, in which every maximal 2-connected subgraph is a clique.
We adapt the definition as it is presented in [10, Definition 10.2.3], to allow for
disconnected graphs.
5
by the vertices of A and columns indexed by the vertices of B. The width of e is the
rank over GF(2) of Me. The width of (T , τ) is the maximum width over all edges e
in T and the rankwidth of G is the minimum width over all rank-decompositions of
G.
Lemma 3. Block graphs have rankwidth at most one.
Proof. Obviously, the class of graphs with rankwidth at most one is hereditary. This
class is exactly the class of distance-hereditary graphs [18, 70]. Every block graph
is a ptolemaic graph, and the ptolemaic graphs are the distance-hereditary graphs
that are chordal (see, e.g., [10]). 2
Theorem 4. k-probe block graphs have rankwidth at most 2k.
Proof. Consider a rank-decomposition (T , τ) with width 1 for an embedding H
of G. Consider an edge e in T and assume that Me is an all-1s-matrix. Each
independent set Ni creates a 0-submatrix in Me. If k = 1 this proves that the
rankwidth of G is at most 2. In general, for k > 0, note that there are at most 2k
different neighborhoods from one leaf-set of T−e into the other. A fortiori, the rank
ofMe is at most 2
k. 2
Lemma 5. A graph is a block graph if and only if every connected induced subgraph
is a clique or else has a cutvertex.
Proof. LetG = (V ,E) be a block graph and letG[W] be a subgraph induced byW ⊆
V . Assume G[W] is connected. Then G[W] is a block graph, since by Definition 2,
‘to be a block graph’ is a hereditary property. If G[W] is not complete then it has a
cutvertex by Definition 2.
Assume every connected induced subgraph of a graph G has a cutvertex or
is a clique. Then every biconnected component of G is a clique. Thus G is a
block graph. 2
Lemma 6. Suppose that G is a k-probe block-graph and suppose that H is a minimal
k-probe block-graph embedding of G. Then a vertex is a cutvertex of H if and only if it
is a cutvertex of G.
Proof. Suppose G has ℓ biconnected components C1,C2, . . . ,Cℓ. Let H
∗ be the
graph (V ,∪ℓj=1E(H[Ci])). Note that a vertex is a cutvertex of H
∗ if and only if it is a
7
Proposition 1. A graph G with independent sets Ni, i = 1, . . . ,k, is a partitioned
k-probe block graph if and only if every biconnected component of G, with the induced
independent sets, is a partitioned k-probe complete graph.
Theorem 9. For every k there exists an O(n2)-time algorithm to check whether a
graph G, equipped with a collection of k independent sets is a partitioned k-probe
block graph.
Proof. By Proposition 1 it is sufficient to describe an algorithm which checks if a
partitioned graph can be embedded into a complete graph. To check if a partitioned
k-probe graph is a k-probe complete graph, we can simply add all the possible edges
and check if it is a complete graph.
A biconnected-component decomposition of a graph can be found in linear time.
It takes O(n2) time to add all possible edges in each biconnected component and
to check if the embedding of each biconnected component is a clique. Hence a
partitioned k-probe block graph can be recognized in O(n2) time. 2
4.1.4 A fixed-parameter algorithm to compute B-width
In this section we present an explicit algorithm which checks for each k whether
the B-width of a graph G is at most k.
Definition 4. A label of a vertex x is a 0, 1-vector of length k. Let {Ni | i = 1, . . . ,k}
be a witness of an embedding. A label L(x) is an indicator of this witness if the ith
component of L(x) is 1 if and only if x ∈ Ni.
We use a decomposition tree T on the biconnected components of G defined as
follows.
Definition 5. A biconnected-component decomposition for a graph G is a pair (T ,S),
where T is a tree and S = {Si | i ∈ V(T)} a collection of bags in one-to-one corre-
spondence with the vertices of T , such that
(i) S is the collection of biconnected components of G, and
(ii) if i and j are two adjacent nodes in T then Si ∩ Sj is a cutvertex in G.
A biconnected-component decomposition (T ,S) of a graph G can be computed in
linear time [78].
9
reduction of the input set replaces both L(p) and L(q) by L(p) ∩ L(q). Thus a
reduced input set has only one set of labels for each cutvertex in Si.
Lemma 11. Let i be a node in the biconnected-component decomposition and letGi be
the graph induced by the bags in the subtree of T rooted at node i. For a vertex x ∈ Si
let Cx be the equivalence class of Ri that contains x. Then Gi has B-width at most k if
and only if there exists a feasible extension Q of Ri such that each vertex x has a label
L(x) in the reduced input set which is an element of Q(Cx).
Proof. Assume there exists a witness {Ni | i = 1, . . . ,k} for the graph Gi. Consider
the labels L(x) for x ∈ Si of this witness. Define a labeling Q on the equivalence
classes C of Ri as follows: For each equivalence class C let Q(C) = {L(x) | x ∈ C}.
We claim that Q is a feasible extension of Ri. Indeed, the conditions of Definition 8
are easy to check.
To prove the converse, consider a feasible extension Q of Ri such that each vertex
x has a label L(x) in the reduced input which is an element of Q(Cx). Choose
such a label for each x ∈ Si. By definition of a (reduced) input set, there exist
embeddings for each graph Gj induced by bags in the subtree rooted at cutvertex
s ∈ Sj ∩ Si with label L(s). By Definition 8 of a feasible extension, the independent
sets extend to Si since any two vertices with labels that have a 1 in a common entry
are nonadjacent. 2
Theorem 12. For every k there exists an O(n3)-time algorithm which check if the
B-width of a graph G is at most k.
Proof. The algorithm computes a witness for an embedding (if it exists) by dy-
namic programming on the biconnected-component decomposition tree. According
Lemma 11 it is sufficient to prove that the set of feasible labelings of each represen-
tative Ri can be computed in constant time. There are at most 2
k possible labels.
Thus there are O(22
k
) subsets of labels that may be assigned to the different equiv-
alence classes of Ri. By Lemma 10, Ri has O(2
k) vertices. Thus there are O(22
2k
)
feasible extensions Q for a representative Ri. For each, the algorithm checks if the
input labeling satisfies Lemma 11. 2
11
4.2.2 Trivially-perfect width is fixed-parameter tractable
In this section we show that for constant k, k-probe trivially-perfect graphs can be
recognized in O(n3) time.
The following Theorem 15 is a characterization which can be formulated in
C2MS-logic [31]. We will prove that k-probe trivially-perfect graphs have rankwidth
at most 2k shortly. It is known that problems which can be formulated in C2MS-
logic can be solved in O(n3) time on graphs with bounded rankwidth [31].
Definition 10. Let (G,N) be a partitioned graph with a witness
N = {Ni | i = 1, . . . ,k}
of k, possibly overlapping independent sets in G. A vertex ω is probe universal if
for every vertex x 6= ω either
(i) (x,ω) ∈ E, or
(ii) there exists i ∈ {1, . . . ,k} with {x,ω} ⊆ Ni.
Theorem 15. A graph G = (V ,E) is a k-probe trivially-perfect graph if and only
if there exist independent sets Ni, i = 1, . . . ,k, such that every connected induced
subgraph has a probe universal vertex.
Proof. Assume that G is a k-probe trivially-perfect graph. Let N be a witness of k
independent sets Ni and let H be an embedding, obtained by adding edges in these
independent sets. Let C ⊆ V be a subset of vertices such that G[C] is connected.
Then H[C] is also connected. By Theorem 13 H[C] has a universal vertex ω. Let x
be another vertex of G[C]. Since H is an embedding of (G,N), either x and ω are
adjacent in G, or there exists an i such that x,ω ∈ Ni.
Assume that there exists a witness N of k independent sets Ni such that every con-
nected induced subgraph of G has a probe universal vertex. Let C be a component
of G. We show that G[C] can be embedded into a trivially perfect graph. Let ω be
a probe universal vertex in G[C]. By induction we may assume that G[C] −ω with
the induced witness has a trivially-perfect embedding H′. We obtain an embedding
H of G[C] by adding ω as a universal vertex to H′. 2
The class of graphs with rankwidth at most 1 is exactly the class of distance-
hereditary graphs [18, 50, 70]. Note that every trivially-perfect graph is distance
hereditary [10], since every induced path has length 1 or 2 by Theorem 13.
13
Proof. If G is disconnected then, by Proposition 2, we can check each component
individually. Assume G is connected. It is easy to see that we can compute an
elimination ordering by probe universal vertices in linear time, by keeping a list of
vertices ordered by degree. 2
Remark 1. Note that the algorithm described in Theorem 18 is fully polynomial.
The algorithm can be used to compute an embedding in O(n2) time.
4.2.4 A fixed-parameter algorithm to compute TP-width
In this section we show that there exists for each k an O(n3) algorithm which
checks if a graph G is a k-probe trivially-perfect graph.
Let (G,N) be a partitioned graph with a witness
N = {Ni | i = 1, . . . ,k}
of k independent sets. We call the vertices of the independent sets nonprobes and
we call the vertices which are not in any independent set probes. The k-label α(x)
of a vertex x is the 0/1-vector of length k with the ith entry αi(x) equal to 1 if and
only if x ∈ Ni. We write α(x) 6 α(y) if αi(x) 6 αi(y) for all i = 1, . . . ,k. We write
α(x) ⊥ α(y) if there is no i with αi(x) = αi(y) = 1.
We use (G,α) to denote a labeled graph. If X is a subset of vertices then we
write α(X) for the restriction of the labeling α to the vertices of X. For a labeled
subset X we write (X,α), instead of (G[X],α) and instead of (G[X],α(X)).
Consider the equivalence relation ≡ defined by x ≡ y if N(x) = N(y). Denote
the equivalence class of a vertex x by (x). Define the partial order  by:
(x)  (y) if N(x) ⊆ N(y)
Likewise, we consider the equivalence relation ≡′ defined by x ≡′ y if N[x] =
N[y]. The equivalence class of a vertex x under this relation is denoted by [x]. We
consider the partial order defined by:
[x]  [y] if N[x] ⊆ N[y]
Lemma 19. A graph G is trivially perfect if and only if for every pair of adjacent
vertices x and y, either [x]  [y] or [y]  [x].
15
Remark 3. For ease of description we describe a trivially-perfect graph G also by
its cotree. This representation is a binary tree where the leaves are labeled by the
vertices of G and the internal nodes labeled by the join-operator ⊗ or the union-
operator ⊕. In case of a join-operator, the set of leaves in at least one of the two
subtrees must induce a clique, since G is chordal.
Lemma 20 (The Telescope Lemma). Let (X,α) and (Y,α) be twin probe-modules.
Assume that χ(X) ⊇ χ(Y). Then (X+ Y,α) embeds if and only if (X,α) embeds.
Proof. Let H be an embedding of (X + Y,α). Consider the cotree of H. Since
H[X+ Y] is a module in H, we may assume that (X+ Y) forms a subtree. Let H′ be
the trivially-perfect graph obtained from H by replacing H[X + Y] by the union or
join of H[X] and H[Y], whichever is appropriate. Then H′ is an embedding of (X,α);
we obtain a cotree by making X and Y twin-branches.
Now let H be an embedding of (X,α). Assume that a vertex z 6∈ (X+ Y) is adjacent
in G to a vertex y ∈ Y. Then α(z) ⊥ α(y) in any z-extension of (X + Y,α). There
exists a vertex x ∈ X such that α(x) = α(y), which implies that z is also adjacent to
x in G.
Consider a cotree of H − Y such that X forms a subtree. Add H[Y] to H − Y as a
twin-branch of H[X] and let H′ be the graph that results. We prove that we can add
edges between Y and NH(X) − Y, such that X+ Y becomes a module in H
′.
Let z 6∈ (X + Y). If z is not adjacent to any vertex of X in H then z is also not
adjacent to any vertex in Y. Assume z is adjacent to X in H. Let y ∈ Y, and assume
that z is not adjacent to y in G. We prove that αi(z) = αi(y) = 1 for some entry i.
There exists a vertex x ∈ X such that α(x) = α(y). If z is not adjacent to x in G,
αi(y) = αi(x) = αi(z) = 1 for some entry i. Assume z is adjacent to x in G. Then
α(z) ⊥ α(x) in any z-extension of (X + Y,α). Since (X + Y,α) is a probe module
and α(x) = α(y) ⊥ α(z), z is adjacent to y, which is a contradiction. 2
Definition 16. A true – or false twinset is a set of vertices such that every pair is a
true – or false twin, respectively.2 A k-twinset is either a false twinset with at least
3 vertices or a true twinset with at least k+ 2 vertices.
2A true twin is a pair of vertices x and y with N[x] = N[y]. A false twin is a pair of vertices x and y
with N(x) = N(y).
17
is well-linked, there exists a vertex z ∈ NG(x) ∩ Ni. Since (x)  (y), z ∈ NG(y),
contradicting that z and y are both in Ni. 2
Definition 18. Let (X,α) be a probe module. A vertex γ ∈ N(X) is X-minimal if
there exists no y ∈ N(X) with (y) 6= (γ) and (y)  (γ) and also no z ∈ N(X) with
[z] 6= [γ] and [z]  [γ].
Remark 4. Notice that X-minimality of a vertex is independent of the actual labeling
of the probe module (X,α).
Lemma 24. Assume G has no k-twinset. Assume that (X,α) embeds as a branch in
the tree-model of a well-linked embedding. Let Υ be the set of X-minimal vertices.
Then |Υ| 6 2k+1+ k− 1.
Proof. Consider a well-linked embedding H. Let T be a tree-model of H. Consider
the pathM from the root to the ancestor of X in T and letM0,M1, . . . be a partition
of M into modules. By minimality of the embedding we may assume that each
vertex ofMi has a neighbor in every subtree ofMi. Assume they are ordered such
that NH[xi] ⊂ NH[xi+1] for each xi ∈Mi and xi+1 ∈Mi+1, for i = 0, 1, . . . .
Notice that each label-set of eachMs is a module in G. Since there is no k-twinset,
each label-set of nonprobes has at most 2 vertices and each label-set of probes has
at most k+ 1 vertices. Thus
|Ms| 6 2(2
k − 1) + (k+ 1) = 2k+1 + k− 1
By the Well-Linkedness Lemma, a vertex x ∈Ms is minimal if it has a label α(x)
such that all other label-sets α′ > α(x) in M0, . . . ,Ms are empty. It follows that
there are at most
∑k
i=0
(
k
i
)
= 2k label-sets of minimal vertices, at most 2k − 1 of
minimal nonprobes, each containing at most 2 elements, and at most one label-set
of minimal probes, containing at most k+1 elements. Thus the number of minimal
elements is bounded by 2k+1 + k− 1. 2
Lemma 25. AssumeG is a connected k-probe trivially-perfect graph without k-twinset.
Let (X,α) be a probe module that embeds as a branch into a well-linked embedding
H. Let T be a tree-model of H and let M0 be the lowest set of ancestors of X in T that
forms a module in H. There exists a set Ω, of size |Ω| 6 22(k+1) such that M0 ⊆ Ω.
This set Ω can be computed in linear time.
19
are only a constant number of possible extensions for each module. Assume that a
probe module (X,α) unions with some other probe modules. If there is a module
(Y,β) with χ(Y) ⊆ χ(X) then (Y,β) merges together with (X,α) for those labelings.
There are at most 2k module extensions in which the characteristic enlarges. A
suitable merge of two probe modules can be found in O(n2) time. 2
4.3 Threshold-width
Threshold graphs were introduced in [24] using a concept called ‘threshold
dimension.’ There is a lot of information about threshold graphs in the book [61],
and there are chapters on threshold graphs in the book [37] and in the survey [10].
We may take the following characterization as a definition [24, 10].
Definition 20. A graph G is a threshold graph if G and its complement G¯ are triv-
ially perfect. Equivalently, G is a threshold graphs if G has no induced P4, C4, nor
2K2.
The following is one of the many characterizations of threshold graphs.
Theorem 28 ([25, 43, 62, 68]). A graph is a threshold graph if and only if every
induced subgraph has an isolated vertex or a universal vertex.3
4.3.1 TH-width is NP-complete
Theorem 29. TH-width is NP-complete.
Proof. Assume there is a polynomial-time algorithm to compute TH-width. We
show that we can use that algorithm to compute T-width. Let G be a graph for
which we wish to compute T-width. Construct a graph G′ by adding a clique C
with n2 vertices. Make all vertices of C adjacent to all vertices of G. Add one more
vertex ω and make ω also adjacent to all vertices of G. Consider two nonadjacent
vertices x and y of G. In any embedding of G′ into a threshold graph, either x and
y are adjacent or ω is adjacent to all vertices of C. However, to makeω adjacent to
all vertices of C, we need at least n2 independent sets. Obviously, making a clique
of G embeds G′ into a threshold graph, namely the complement of a star and a
3A vertex x of a graph G is isolated if its neighborhood is the empty set. A vertex x of a graph
G = (V ,E) is universal if N[x] = V .
21
We give each leaf an additional 0/1-label that indicates whether the vertex that
is mapped to that leaf is adjacent to ri or not.
Kruskal’s theorem [54] states that binary trees, with points labeled by a well-
quasi-ordering are well-quasi-ordered with respect to their lowest common ances-
tor embedding. When we apply Kruskal’s theorem to the labeled binary trees Ti
that represent the graphs G′i we may conclude that there exist i < j such that G
′
i
is an induced subgraph of G′j. But then we must also have that Gi is an induced
subgraph of Gj. This is a contradiction because we assume that the graphs Gi are
minimal forbidden induced subgraphs. This proves the theorem. 2
4.3.3 TH-width is fixed-parameter tractable
In this section we show that for constant k, k-probe threshold graphs can be recog-
nized in O(n3) time.
The following theorem is a ‘C2MS-characterization,’ that is, the condition can be
phrased in C2MS-logic (see [31] for further pointers into the literature). Problems
that can be formulated in C2MS-logic can be solved on graphs that have bounded
rankwidth. Similar as k-probe block graphs and k-probe trivially-perfect graphs,
k-probe threshold graphs have bounded rankwidth.
Theorem 32. A graph G = (V ,E) has threshold-width at most k if and only if there
exist k independent sets Ni, i = 1, . . . ,k, such that for every W ⊆ V , G[W] has an
isolated vertex or a vertex ω such that for every y ∈W −ω either ω is adjacent to y
or there exists i ∈ {1, . . . ,k} with {ω,y} ⊆ Ni.
Proof. This is inferred by Theorem 28 and Definition 1. 2
Lemma 33. Threshold graphs have rankwidth at most one.
Proof. The class of graphs with rankwidth at most 1 is exactly the class of distance-
hereditary graphs [70]. Every threshold graph is distance hereditary (see, e.g., [10,
43, 62]). 2
Theorem 34. k-Probe threshold graphs have rankwidth at most 2k.
Theorem 35. For each k > 0 there exists an O(n3) algorithm which checks whether
a graph G with n vertices is a k-probe threshold graph. Thus TH-width ∈ FPT .
23
Now we may assume that any embedding H is connected. By Theorem 28 H has
a universal vertex ω. We call ω a ‘probe universal vertex’ of (G,N) if for every
nonneighbor z there is an independent set in N which contains both ω and z. Thus
any partitioned k-probe threshold graph has an isolated vertex or a probe universal
vertex. Finally, observe the following: if ω is a probe universal vertex then G is
k-probe threshold if and only if G−ω is k-probe threshold, since we may add ω as
a universal vertex to any embedding of G−ω and obtain an embedding of G. Since
k is a constant, an elimination ordering by isolated - and probe universal vertices
can be obtained in O(n2) time. 2
Remark 7. Note that the algorithm described in Theorem 37 is fully polynomial.
This proves that the ‘sandwich problem,’ studied by Golumbic et al., in [38], is
polynomial for threshold graphs.
4.3.5 A fixed-parameter algorithm to compute TH-width
Assume that (G,N) is a connected partitioned k-probe threshold graph with witness
N = {Ni | i = 1 . . . ,k}
and let H be an embedding. The label L(x) of a vertex x is the 0/1-vector of length
k with the ith entry Li(x) equal to 1 if and only if x ∈ Ni. We write L(x) 6 L(y)
if Li(x) 6 Li(y) for all i = 1, . . . ,k. We write L(x) ⊥ L(y) if there is no i with
Li(x) = Li(y) = 1.
Definition 21. A witness N is well-linked if for every i = 1, . . . ,k, every vertex
x 6∈ Ni has a neighbor in Ni.
Lemma 38. Every k-probe threshold graph has a witness with k independent sets
which is well-linked.
Proof. Starting with any witness, repeatedly add a vertex x to an independent set
Ni if it has no neighbor in that set. 2
Consider the equivalence relation ≡ defined by x ≡ y if N(x) = N(y). Denote
the equivalence class of a vertex x by (x). Define the partial order  by:
(x)  (y) if N(x) ⊆ N(y)
25
For completeness sake we note the following.
Lemma 42. Assume [x]  [y] and x 6= y. Then
∀i∈L(y)NG(x) ∩ Ni = {y}
Proof. Since x and y are adjacent, we have that L(x) ⊥ L(y). Assume that y ∈ Ni
for some i ∈ {1, . . . ,k}. Thus x 6∈ Ni. Since N is well-linked, there exists a vertex
z ∈ N(x) ∩ Ni. Since NG[x] ⊆ NG[y], z ∈ NG[y]. But then we must have z = y,
otherwise z and y are nonadjacent. 2
Definition 22. A true – or false module is a set of vertices such that every pair is a
true – or false twin, respectively.4 A k-probe module is either a false module with at
least 3 vertices or a true module with at least k+ 3 vertices.
Lemma 43. Let S be k-probe module. Then G has TH-width at most k if and only if
G− x has TH-width at most k for any x ∈ S.
Proof. If G is k-probe threshold then so is G − x for any vertex x. Let x ∈ S and
assume that G − x is a k-probe threshold graph. Let H be an embedding of G − x.
First assume that S is a false module with at least three vertices. Let y ∈ S− x. If y
is in the independent set, then we can let x be a copy of y. Assume that all vertices
of S − x are in the clique of H. Since S − x has at least two vertices, they must be
nonprobes. We can let x be a copy of either of them.
Assume S is a true module with at least k+3 vertices. Then at least k+1 vertices are
in the clique C of H. Let z be a vertex of S∩C with a minimal closed neighborhood
in H. Assume that z has a neighbor u in H which is not a neighbor of z in G. Then
u is a neighbor of every vertex of S ∩ C in H, but not in G. Since every pair of
vertices a,b ∈ S is adjacent in G, L(a) ⊥ L(b). It follows that u must be in at least
k+ 1 independent sets, which is a contradiction. Thus NH(z) = NG(z), and we can
let x be a copy of z. 2
Definition 23. A vertex x is maximal if there exists no (y) 6= (x) with (x)  (y) and
there exists no [y] 6= [x] with [x]  [y].
4A true twin is a pair of vertices x and y with N[x] = N[y]. A false twin is a pair of vertices x and y
with N(x) = N(y).
27
2Definition 24. A probe universal set is a set U of labeled vertices such that for every
vertex x 6∈ U, there is a label for x such that U+ x is a partitioned probe clique.
Lemma 46. Let U be a probe universal set and let x 6∈ U be a vertex with minimal
neighborhood such that U′ = U + N(x) is probe universal with the same number of
nonempty label-sets as U. Then there exists an embedding such that U is universal if
and only if there exists an embedding such that U′ is universal.
Proof. By definition, the label-sets of U′ are modules that extend the label-sets of
U. This proves the lemma. 2
Theorem 47. For each k, there exists an O(n2)-time algorithm for the recognition of
k-probe threshold graphs.
Proof. We may assume that G has no k-probe module. By Lemma 45 there exists a
constant number of feasible universal sets. By Lemma 46, if there exists a vertex x
that can be labeled such that N(x) extends the universal set in a way that does not
increase the number of nonempty label-sets in the universal set, then the algorithm
can greedily extend the universal set with N(x). Next the algorithm removes the
vertex x and tries to find another greedy extension.
If there are no more greedy extensions, the algorithm computes the set Υ as
in Lemma 45 in the graph minus the probe universal set, and chooses one of the
constant number of subsets as an extension of the probe universal set. Notice that
there can be at most 2k extensions that increase the number of label-sets.
Since the computation of maximal vertices can be done in O(n2) time, the al-
gorithm can be implemented to run in O(n2) time. 2
4.4 Cograph-width
If a graph G has cograph-width k then we call G also a k-probe cograph. In this
section we deal with the recognition problem of k-probe cographs.
Definition 25 ([35]). A graph is a cograph if it has no induced P4, i.e. an induced
path with 4 vertices.
We denote the class of cographs by C.
29
i. for every x ∈ W1 and y ∈ W2 either (x,y) ∈ E(G) or x,y ∈ Ni for some
i ∈ {1, . . . ,k}, or
ii. no x ∈W1 is adjacent to any y ∈W2.
Proof. Assume that G is a k-probe cograph. If G has at most 3 vertices then, by
definition, G is a cograph and thus also a k-probe cograph for any k > 0. We
prove the claim by induction on the number of vertices. By definition there exist
independent sets Ni, i = 1, . . . ,k and an embedding H ∈ C such that, for every
edge e = (x,y) ∈ E(H) which is not an edge in G there exists an i ∈ {1, . . . ,k} with
{x,y} ⊆ Ni.
LetW ⊆ V with |W| > 2. There exists a partitionW = W1+W2, withWi 6= ∅, such
that either (a) or (b) in Theorem 49 holds for the graph H. It follows that either i.
or ii. holds for G with that same partition ofW.
For the converse, let W ⊆ V with |W| > 2. If i. holds, then we may add all edges
betweenW1 andW2. Also, ii. implies (b) in Theorem 49. By induction, there exist
embeddings of G[W1] and G[W2] into cographs, which implies by Theorem 49 that
G[W], and thus also G can be embedded. Thus G is a k-probe cograph. 2
Theorem 50 is a characterization which can be formulated in C2MS-logic [31].
We now prove that k-probe cographs have rankwidth at most 2k. It is known that
problems which can be formulated in C2MS-logic can be solved in O(n
3) time on
graphs with bounded rankwidth [31].
The following lemma will become somewhat more transparent in Section 4.4.4.
Lemma 51. Cographs have rankwidth at most one.
Proof. Recursive application of Theorem 49 shows that there exists a ‘rooted’ rank-
decomposition (T , τ) such that for every node the set of leaves in the subtree in-
duces a module inG. Let e be the edge from a node p in T to its parent. LetM be the
set of leaves in the subtree of p. Let Me be the submatrix of the adjacency matrix
of G with rows indexed by the vertices ofM and with columns indexed by the rest
of the vertices. Since M is a module, for every vertex x ∈ M, N(x) − M = N(M).
Thus all nonzero rows ofMe are the same, which implies that the rank over GF(2)
ofMe is either 0 or 1. 2
Theorem 52. k-Probe cographs have rankwidth at most 2k.
31
Remark 8. Thus cographs are called ‘complement-reducible graphs,’ [28]. In the
same vein, we show that partitioned probe cographs are ‘dual reducible.’
Definition 26. Let (G,N) be a partitioned graph with a witness
N = {Ni | i = 1, . . . ,k}
of k independent sets. The dual (Gd,N) is the partitioned graph obtained from
G¯ by deleting all edges (x,y) of G¯ for which there is an i ∈ {1, . . . ,k} such that
x,y ∈ Ni.
By Theorem 54 we have the following.
Proposition 4. A partitioned graph (G,N) is a partitioned k-probe cograph if and
only if its dual (Gd,N) is likewise (with ‘the same’ witness N of k independent sets).
Theorem 55. There exists a polynomial-time algorithm to check whether a parti-
tioned graph (G,N) with a witness N of k independent sets, is a partitioned k-probe
cograph.
Proof. If G is disconnected then, by Proposition 3, we can check each component
individually. Assume G is connected. Assume also that G is a partitioned k-probe
cograph and let H be an embedding of G. Then H is also connected. Thus, by
Theorem 54, H¯ is disconnected since H is a cograph. Since the dual Gd is obtained
from H¯ by deleting some of the edges, alsoGd is disconnected. By Proposition 4,Gd
is a partitioned k-probe cograph. By Proposition 3, we can check that by inspecting
the components of Gd. 2
Remark 9. Note that the algorithm described in Theorem 55 is fully polynomial.
The algorithm can be implemented to run in O(n3) time. (See also [38].)
4.4.4 A fixed-parameter algorithm to compute C-width
In this section we show that there exists for each k an O(n3) algorithm which
checks if a graph G is a k-probe cograph.
Definition 27 ([28]). Let G = (V ,E) be a cograph. A cotree T is a rooted, labeled
tree defined recursively as follows:
(i) if |V | = 1 then T has one node which is labeled by the unique vertex of G,
33
Definition 29. A probe module is a labeled set (X,α) which induces a partitioned
k-probe cograph with the additional property that for each vertex y 6∈ X there exists
a y-extension, which is a label α(y) such that either
(a) N(y) ∩ X = ∅, or
(b) For each x ∈ X [x ∈ N(y)⇔ α(y) ⊥ α(x)].
Definition 30. Let (X,α) be a probe module. A label-set of (X,α) is a maximal
subset of vertices of X with the same label. The characteristic χ(X) is the set of
labels for which the label-set is nonempty.
for a probe module (X,α) and a label τ, we write X[τ] = {x ∈ X | α(x) = τ}.
Definition 31. Two disjoint probe modules (X,α) and (Y,β) are twins if (X+ Y,γ)
is a probe module with the inherited labeling γ(X) = α and γ(Y) = β, such that
either
i. no vertex of X is adjacent to any vertex of Y, or
ii. x ∈ X and y ∈ Y are adjacent if and only if γ(x) ⊥ γ(y).
Definition 32. Let (X,α) be a probe module in a graph G. Then (X,α) embeds if
the labeling α extends such that (G,α) has an embedding H which has H[X] as a
module. The graph H is an embedding of (X,α).
Lemma 57 (The Telescope Lemma). Let (X,α) and (Y,α) be twin probe-modules.
Assume that χ(X) ⊇ χ(Y). Then (X+ Y,α) embeds if and only if (X,α) embeds.
Proof. Let H be an embedding of (X + Y,α). Let H′ be the cograph obtained
from H by replacing H[X + Y] by the join or union of H[X] and H[Y], whichever is
appropriate. Then H′ is a cograph embedding of (X,α) since H′[X] is a module.
Now let H be an embedding of (X,α). Assume that a vertex z 6∈ (X+ Y) is adjacent
in G to a vertex y ∈ Y. Then α(z) ⊥ α(y) in any z-extension of (X + Y,α). There
exists a vertex x ∈ X such that α(x) = α(y), which implies that z is also adjacent to
x in G.
Add H[Y] to H− Y as a twin of H[X] and let H′ be the result. We prove that we can
add edges in H′ between Y and NH(X) − Y, such that X + Y becomes a module in
H′.
Let z 6∈ (X + Y). If z is not adjacent to any vertex of X in H then z is also not
adjacent to any vertex in Y. Assume z is adjacent to X in H. Let y ∈ Y, and assume
35
subtree make up a module, thus Yi has the same neighbors outside this module as
X + Y1 + · · · + Yi−1 has. If there is a ⊕-node on the path from pi−1 to pi, then the
leaves at this branch are adjacent to Yi but not to X+Y1+ · · ·+Yi−1. If a node pi−1
is a child of pi, then Yi−1 and Yi are twins, otherwise N[Yi−1] ⊂ N[Yi]. 2
Lemma 60. Let H be a cograph and let T be a cotree of H. Let X be the set of leaves
of a subtree rooted at some node p. Let q1,q2, . . . be the nodes on the path from p to
the root of T that have an ⊕-label. Let Zi be the set of leaves of the branch at qi that
does not contain X, for i = 1, 2, . . . . Then
(i) N[X] = V − ∪iZi, and
(ii) N(X) ⊇ N(Z1) ⊇ N(Z2) ⊇ . . . .
Proof. A cotree for the complement H¯ is obtained by switching all labels ⊗ into ⊕
and switching all labels⊕ into ⊗. Note thatNH¯[Zi] = V−N(Zi). The result follows
from Lemma 59. 2
Assume (X,α) embeds. Call an induced pattern T-maximal if it is maximal
with respect to the telescope ordering. Define a partial order on those T-maximal
patterns P that can be joined to (X,α) as follows. Define P  Q if χ(P) = χ(Q)
and N[P] ⊆ N[Q]. Call a pattern X-minimal if it is minimal with respect to this -
ordering. Notice that the number of vertices of the union of all X-minimal patterns
is bounded by the number of vertices in the maximal pattern that contains X before
in telescopes (in any embedding). The X-maximal patterns that can be unioned
with (X,α) are defined similarly.
Theorem 61. For each k, there exists an O(n3) algorithm to check if the cograph-
width of a graph G is at most k.
Proof. The algorithm maintains a linear list of patterns of probe modules. Let
(X,α) be a probe module and assume that (X,α) embeds. Let T be a cotree of an
embedding. Consider the maximal pattern Ω that contains (X,α) before it tele-
scopes. We cannot assume that all other patterns that constitute Ω are in the
present list. However, we may assume that X is a lowest branch in T such that
all patterns of branches that are lower in T are contained in the list. Obviously,
we may assume that the list only contains T-maximal elements. Since (X,α) is a
lowest node in T , there exists a subtree of constant size with leaves that appear as
37
infinite for the class of distance-hereditary graphs. We note that distance-hereditary
graphs have a finite characterization in terms of vertex-minors [70].
Definition 34. Let k be a natural number. A graph G = (V ,E) is a k-cograph if
there exists a coloring of the vertices with colors from {1, . . . ,k} such that for every
subset of vertices W ⊆ V with |W| > 2 there exists a partition {W1,W2} into two
nonempty subsets such that either
i. no vertex ofW1 is adjacent to a vertex ofW2, or
ii. there exists a permutation σ of the colors such that vertices of color i in W1
are adjacent exactly to the vertices of color σ(i) inW2, for all i ∈ {1, . . . ,k}.
In this paper we look at a class of graphs for which Kruskal’s theorem provides
a proof that they can be characterized by a finite collection of forbidden induced
subgraphs.
Note that, for k = 1, the 1-cographs are the ordinary cographs; this is Gallai’s
characterization [35]. Note that k-cographs are also (k + 1)-cographs; we may
simply leave some color class empty. If C is a nonempty color class, i.e., a nonempty
set of vertices with the same color, then the subgraph induced by C is a cograph.
One of our main results is that for each k there exists a finite characterization
for the class of k-cographs in terms of forbidden induced subgraphs. We prove that
in Section 4.5.2. We end this section with some of our notational customs and with
one significant observation.
A graph consisting of a single vertex is called trivial. A twin is a module with
two vertices. The twin is false if the vertices are not adjacent and it is true if the
vertices are adjacent. A module is a setM of vertices such that
x,y ∈M ⇒ N(x) −M = N(y) −M.
Cographs can be characterized as those graphs for which every nontrivial in-
duced subgraph has a twin [10]. We show that the class of k-cographs is closed
under creating twins.
Lemma 62. ‘Creating a twin’ of a vertex x in a graph G is the operation of adding
a new vertex x′ and adding edges incident with x′ such that x′ and x become twins.
Assume that G is a k-cograph and let G′ be obtained from G by creating a twin. Then
G′ is also a k-cograph.
39
Proof. First assume that G is a k-cograph. Consider a coloring of the vertices as
prescribed in Definition 34. We construct a k-cotree as follows.
Let {V1,V2} be a suitable partition of V . Construct a root node r. If no vertex of V1
is adjacent to a vertex of V2, then label r as a union node. Otherwise, label r with
the permutation that matches the color classes of V1 with the color classes of V2. If
V1, or if V2 consists of a single node then create a leaf and label it with the color of
that vertex. Otherwise, recursively construct k-cotrees for G[V1] and for G[V2] and
make the roots of those two trees adjacent to r. By construction, two vertices x and
y are adjacent in G if and only if their lowest common ancestor is labeled with a
permutation that matches their colors.
Consider a graph G = (V ,E) and let (T , f) be a binary k-cotree that represents
G. The labels at the leaves provide a coloring of the vertices. Let W ⊆ V be a
nontrivial subset of vertices and consider the lowest common ancestor p in T of the
leaves that are mapped to the vertices of W. The two subtrees at p partition W
into two nonempty subsets W1 andW2 and the permutation σ at p makes vertices
with color i in the left subtree adjacent to the vertices with color σ(i) in the right
subtree. This shows that the graph is a k-cograph. 2
Lemma 64. Let G = (V ,E) be a k-cotree and let (T , f) be a k-cotree representation
of G. Consider the tree-decomposition (T ′, f) obtained from (T , f) by removing the
root and by making the two children of the root adjacent in T ′. Then every cutmatrix
of (T ′, f) is shape-equivalent to a submatrix of
(
Ik 0
)
, where Ik is the k × k identity
matrix.
Proof. Let p be a child of the root r of T . Let e be the line in T that connects
p to r. If r is labeled as a union node, then the cutmatrix of e is a zero matrix.
Otherwise, assume that r is labeled with a permutation σ. Then the cutmatrix at
e is equivalent to a submatrix of the permutation matrix that matches vertices of
color i in the subtree at p to vertices with color σ(i) in the other subtree. Note that
some color classes may be empty.
Now consider an arbitrary node q, not equal to r, and let q1 and q2 be two children
of q in T . Let Q be the set of vertices of G mapped to leaves in the subtree of q. Let
Q1 ⊂ Q be the set of leaves in the subtree at q1. We consider the cutmatrix of the
line e′ that connects q1 with q, with rows indexed by the vertices of Q1.
41
4.5.2 Forbidden induced subgraphs
In this section we show that for every natural number k, k-cographs can be charac-
terized by a finite set of forbidden induced subgraphs.
We call a k-cograph partitioned if it comes equipped with a proper k-coloring of
the vertices.
Theorem 67. Let k be a natural number. Partitioned k-probe cographs are well-quasi-
ordered by the induced subgraph relation.
Proof. A cotree is a binary tree with a bijection from the leaves to the vertices of the
graph and internal nodes labeled as join- or union-operators [28]. Two vertices are
adjacent in the graph if and only if their lowest common ancestor is a join-node.
Kruskal’s theorem [54, 47] states that trees, with points labeled by a well-quasi-
ordering, are well-quasi-ordered with respect to their lowest common ancestor em-
bedding. Pouzet observed that this implies that cographs are well-quasi-ordered by
the induced subgraph relation [71] (see also [33, 79]). For partitioned k-cographs
we equip each leaf with a label that is a color from {1, . . . ,k}. Each internal node
receives a label which is either a union label or a permutation of the colors. Two
vertices are adjacent if their lowest common ancestor is a permutation-node and
if their colors are matched by the permutation at that node. Kruskal’s theorem
implies the claim. 2
It is interesting to notice that Theorem 67 implies that k-cographs do not have
long induced paths. This implication can be deduced as follows. Let [P1,P2, . . .] be
an infinite sequence of k-colored paths of increasing length and assume that they
are all partitioned k-cographs. Construct graphs P′i by creating a false twin with the
same color of each of the two endpoints of Pi. Then each P
′
i is also a partitioned
k-colored cograph since this class of graphs is closed under creating false twins.
The sequence [P′1,P
′
2, . . .] is an infinite sequence and P
′
i is not an induced subgraph
of P′j as long as i 6= j. This contradicts Theorem 67.
Theorem 68. Let k be a natural number. The class of partitioned k-cographs can be
characterized by a finite set of forbidden induced, colored subgraphs.
Proof. Consider a sequence [G1,G2, . . .] of k-colored graphs which are not parti-
tioned k-cographs. Assume that for each vertex x in Gi = (Vi,Ei) the subgraph
43
C9, C10, and P10, and the graphs depicted in Figure 2. We think that the list is
complete, but we do not have a proof to show that.
. . .
Figure 2: Some forbidden induced subgraphs for 2-cographs. The gem, C5, C7, C8, C9,
C10, and P10 are also forbidden but are not depicted.
We find it surprising that the list is so long, already for the case of 2-cographs.
One good, and very useful thing that comes out of it is this:
Corollary 70. 2-Cographs are perfect.
Although we proved the existence of an O(n3) recognition algorithm for k-
cographs, such an algorithm is hard to obtain in practice. We end this section with
the description of an easy O(n4) recognition algorithm for 2-cographs.
Theorem 71. There exists an O(n4) algorithm for the recognition of 2-cographs.
Proof. A 2-cograph G can be seen as a ‘P4-free structure,’ which we define next.
Consider a 2-cotree (T , f) with leaves colored black and white. If G is nontrivial,
then there exist two leaves with a common ancestor in T . Either the two leaves are
twins, or they are pairs of vertices x and y with different colors; that is, x and y
have no common neighbors.
45
We start with a collection of feasible subtrees consisting of all single vertices and
of all pairs of colored vertices that have no common neighbors. Each subtree is
represented, either by a point which is a pair of vertices, or by a point which is a
single vertex. For each subtree the algorithm maintains a list of leaves.
Two subtrees T1 and T2 merge if the points are structure-twins. Consider two sub-
trees represented by structure-twins. Consider the graph G induced by the vertices
in the two points and the vertices that do not appear in the leaves of T1 and T2 nor
in the lists of vertices that are ‘covered’ (see below).
a. If T1 and T2 are twins, and if T1 has two colors and T2 only one, then we say
that T1 ‘covers’ T2. For each subtree the algorithm maintains a list of vertices
that are covered by it. In this case the set of leaves of T2 is added to the list of
vertices covered by T1. In this case no subtree is deleted from the list.
b. If both points that represent T1 and T2 are single vertices that are twins in G
then delete one of the two subtrees from the list. Make a union of the list of
leaves.
c. If two subtrees are structure-twins such that both have pairs of vertices with
different colors, then delete one of them from the list. Make a union of the
list of leaves and of the list of vertices that are covered.
Note that a 2-cotree is a subtree Ti such that every vertex of G appears as a leaf
of Ti, or is covered by Ti.
To prove the correctness one may observe that, in the first case there exists a 2-
cotree, with T1 and T2 as subtrees, if and only if there exists a 2-cotree that contains
T1 as a subtree. In the second and third case, one easily observes that there exists a
2-cotree that contains T1 and T2, if and only if there exists a 2-cotree that contains
one of them as a subtree.
There are O(n2) basic building blocks, and since a 2-cotree has O(n) nodes, the
algorithm builds a 2-cotree in O(n3) steps or decides that no such tree can exist
because there are no more possible mergers. The update of the list of vertices that
are covered by a subtree takesO(n) time in each step. This proves the theorem. 2
4.6 Simple Widths
Inspired by results of Oum et al. [70] on rankwidth of graphs, we introduce the
concept of simple-width.
47
graph is at most the simple-width. Conversely, if the rankwidth of a graph is k,
then the vector space over GF(2) spanned by the columns of a cutmatrix, has a
basis with k elements. Consequently, the number of different columns is at most 2k
because there are only 2k different linear combinations of the k basisvectors with
coefficients in GF(2). Since row-rank equals column-rank, we have also at most 2k
different rows.
Theorem 72. For any graph G
r(G) 6 s(G) 6 2r(G)
where s(G) is the simple-width and r(G) is the rankwidth of G.
It is easy to see that these bounds are tight.
The graphs of rankwidth at most one are exactly the distance-hereditary graphs [70];
this is the smallest, and only recognized case for rankwidth. To get a feeling for
simple-width we study the class of graphs with simple-width at most two.
Basics
Definition 38. Consider a 0, 1-matrix M. Let M′ be the maximal submatrix of M
with no two rows equal and no two columns equal. The shape of M is a class of
matrices equivalent to M′ under permuting rows, permuting columns, and taking
the transpose.
One basic concept that will be useful throughout the rest of this paper is that of
a twin. A twin is a module with two vertices. A module is a set M of vertices such
that
x,y ∈M ⇒ N(x) −M = N(y) −M.
Definition 39. A twin is a pair of vertices x and y such that {x,y} is a module. The
pair is a true twin if x and y are adjacent and a false twin otherwise.
Cographs can be characterized as those graphs for which every nontrivial in-
duced subgraph has a twin [10]. Tibor Gallai proved that a (finite) graph G is a
cograph if and only if G has a tree-decomposition (T , f) rooted at an edge, such that
the leaves of every subtree induce a module in G. Consider a subtree B rooted at
some edge e and consider the cutmatrixMe with rows indexed by the vertices of B.
49
Equivalently, a graph is distance hereditary if and only if it is split decomposable
and this is actually the same statement as the corollary below.
Corollary 76 ([70]). A graph G = (V ,E) is distance hereditary if and only if G
has a tree-decomposition (T , f) such that every cutmatrix Me has a shape which is a
submatrix of
(
1 0
0 0
)
, where the 1 stands for an all ones block and the zeros stand for
all zero blocks. Thus distance-hereditary graphs have simple-width at most 2.
Remark 12. ‘Having the same shape’ is an equivalence relation. Also notice this
monotonicity property: if a matrixM′ is a submatrix of a matrixM, then the num-
ber of different rows (columns) ofM′ cannot be more than the number of different
rows (columns) ofM; thus, loosely speaking, the shape ofM′ is a submatrix of the
shape ofM.
Lemma 77. The complement of a distance-hereditary graph has simple-width at most
2.
Proof. Let G = (V ,E) be distance hereditary. Let (T , f) be a tree-decomposition
of G such that for every line e in T the cutmatrix Me has rank 6 1; i.e. after the
deletion of zero-rows and zero-columns, all remaining entries are 1. In other words
Me is equivalent to a submatrix of
(
1 0
0 0
)
.
Now consider the complement G¯ of G. Any cutmatrixMe of (T , f) changes into the
complement M¯e. Thus M¯e is equivalent to a submatrix of
(
1 1
1 0
)
. This proves the
claim. 2
In general we have that for any graph G
s (G) = s
(
G¯
)
.
Remark 13. Notice that the rank of
(
1 1
1 0
)
is 2 while the rank of
(
1 0
0 0
)
is one; the
rankwidth of the complement of a distance-hereditary graph is (in general) 2.
4.6.1 Graphs with simple-width 2
Lemma 78. Let G be a graph with simple-width 2. Let (T , f) be a tree-decomposition
realizing this width. Then every cutmatrix is equivalent to one of the following:
(
0
)
,
(
1
)
,
(
1 0
)
,

1 0
0 0

 ,

1 1
1 0

 , or

1 0
0 1

 .
51
with x′ contains only one row (or only one column), thus the simple-width of this
cutmatrix is at most two. This proves the claim. 2
Lemma 81. Assume that G is nontrivial and that s(G) 6 2. Assume furthermore that
G has no twin, no pendant vertex, and no isolated vertex. Then G has two vertices x
and y such that N[x] ∪N[y] = V and either
N(x) ∩N(y) = ∅ or N(y) ⊂ N[x].
Proof. Since G is nontrivial and has no twin, G is not a clique nor an independent
set. Thus we may assume that s(G) = 2. Also, G has at least 4 vertices, otherwise
it has a twin.
Consider a tree-decomposition (T , f) of G. It is well-known that any ternary tree T
with at least three leaves has two leaves that have the same neighbor. Let x and
y be the vertices mapped to two such leaves. Then the tree T has a line e with a
cutmatrixMewhich has two rows x and y. Since x and y are not twins, and neither
x nor y is isolated or pendant,Me is equivalent to

1 0
0 1

 or to

1 1
1 0


and this proves the claim. 2
Remark 14. The second case occurs when G¯ is distance hereditary. The first case
sprouts a ‘new’ class of graphs that we baptize as the class of 2-cographs.
2-Cographs
Lemma 82. Let G = (V ,E) be a graph and assume that the vertices of G can be
colored black and white such that for every W ⊆ V with at least two vertices there is
a partition into nonempty subsetsW1 andW2 such that either
(a) w1 ∈W1 and w2 ∈W2 are adjacent if and only if they have the same color, or
(b) w1 ∈W1 and w2 ∈W2 are adjacent if and only if they have different colors.
Then s(G) 6 2.
Proof. We claim that there is a rooted binary tree-decomposition with the following
property π: Let T ′ be any subtree and let e be the line connecting the root of T ′
with its parent. Let Me be the cutmatrix with rows indexed by the vertices in the
53
and V2 be the two sets of leaves in the two subtrees rooted at the other endpoint r
′
of e.
Let e1 be the line incident with r
′ and the root of V1. Consider the matrix Me1
with rows indexed by vertices of V1. Two of the columns are x and y. Thus they
partition the rows into black and white (possibly one set is empty). In any case,
x and y provide two different columns and since s(G) 6 2 every other column,
corresponding to a vertex of V2, is equal to the column of x or to the column of y.
It follows that all black vertices of V1 have the same neighbors in V2 and that all
white vertices of V1 have the same neighbors in V2. By symmetry, the same holds
for the vertices of V2.
Consider the submatrix with rows V1 and columns V2. We consider two cases;
(a) either the black vertices of V1 are adjacent to the black vertices of V2 and the
white vertices of V1 are adjacent to the white vertices of V2, or
(b) the black vertices of V1 are adjacent to the white vertices of V2 and the white
vertices of V1 are adjacent to the the black vertices of V2.
In the first case we color x black and y white and in the second case we color x
white and y black. Then in both cases any of the two partitions {V1+ {x,y},V2} and
{V1,V2+ {x,y}} is ‘good;’ that is, they satisfy the conditions of Lemma 82. We prove
that, with this coloring, every induced subgraph has a good partition.
LetW ⊆ V . IfW has vertices in both V1 and V2, and possibly also in {x,y}, then we
can take the partition induced by one of the two partitions above.
Assume W has no vertices in V2. If x and/or y is in W, then we can take one
part of the partition equal to W ∩ {x,y} 6= ∅. This is a good partition as long as
W − {x,y} 6= ∅.
Assume thatW contains only vertices of V1. Take the root t of the minimal subtree
that spans all vertices of W. The two subtrees at t partition W into W1 and W2.
Consider the edge e∗ incident with t and the subtree ofW1. Consider the cutmatrix
Me∗ with the vertices of W1 as rows. Then all black vertices of W1 have the same
neighbors in the rest of the graph and all white vertices of W1 have the same
neighbors in the rest of the graph, since this is dictated by the two different columns
of x and y. The same holds for the vertices of W2 and this proves that the edges
betweenW1 andW2 satisfy the condition of Lemma 82. 2
Theorem 85. Assume G has simple-width at most 2. Then either
55
graph is a 2-cograph if and only if every nontrivial induced subgraph has a twin or
an antitwin. We conclude that 2-cographs are perfect because minimal imperfect
graphs have no twins nor antitwins [59, 67]. Thus graphs with simple-width at
most 2 are perfect.
4.7 k-DH-Graphs
Let k be a natural number. A graph is k-distance hereditary if it has a tree-
decomposition such that every cutmatrix has a block structure that is some subma-
trix of
(
Ik 0
0 0
)
, where Ik is the k × k identity matrix. In this section we characterize
k-distance hereditary graphs and we show that for fixed k there exists an O(n3)
time algorithm that recognizes the graphs in this class.
Distance-hereditary graphs are the graphs with rankwidth one. That is, they
are those graphs that have a tree-decomposition (T , f) such that every cutmatrix
has a shape equivalent to some submatrix of
(
1 0
0 0
)
, where the 1 stands for an
all-ones block and the zeros stand for all-zero blocks. In our terminology, distance-
hereditary graphs are 1-distance hereditary. Alternatively, this class is characterized
as the class of graphs that do not have C5 as a vertex-minor. Note that the char-
acterization by vertex-minors is finite, whereas the characterization by forbidden
induced subgraphs is infinite. However, note also that for k > 1, k-distance heredi-
tary graphs are not closed under local complementations. For example, the 5-cycle
is 2-distance hereditary and it is locally equivalent to the gem, but the gem is not
2-distance hereditary. At the moment we are not aware of a finite characterization
of k-DH-graphs in terms of ‘forbidden structures.’
Definition 40. Let k be a natural number. A graph G is k-distance hereditary if
it has a tree-decomposition in which every cutmatrix is shape-equivalent to some
submatrix of 
Ik 0
0 0

 ,
where Ik is the k× k identity matrix and where the zeros stand for all-zero blocks.
If a graph G has only one vertex then a tree-decomposition for G has no cut-
matrix. As a rule, we say that a 1-vertex graph is also k-distance hereditary. We
prove that there is a characterization for k-DH-graphs which can be formulated in
57
In Definition 34, we define a slightly different notion of k-cographs. The follow-
ing proof, which shows that the class of k-cographs is characterized by a finite set
of forbidden induced subgraphs, is essentially the same as the proof for the related
class of graphs in Section 4.5. We include it for completeness sake.
Theorem 88. Let k be a natural number. Partitioned k-cographs are well-quasi-
ordered by the induced subgraph relation.
Proof. A cotree is a binary tree with a bijection from the leaves to the vertices
of the graph and internal nodes labeled as join- or union-operators [28]. Two
vertices are adjacent in the graph if and only if their lowest common ancestor is
a join-node. Kruskal’s theorem [54] states that trees, with points labeled by a
well-quasi-ordering, are well-quasi-ordered with respect to their lowest common
ancestor embedding. Pouzet observed that this implies that cographs are well-
quasi-ordered by the induced subgraph relation [71]. For partitioned k-cographs
we equip each leaf with a label that is a color from {1, . . . ,k}. Each internal node
receives a label which consists of
a. a permutation σ ∈ Sym(k), and
b. for each i = 1, . . . ,k an indicator of a union– or a join-operator.
Two vertices are adjacent if their lowest common ancestor has a label that makes
them adjacent by a join-operator. Kruskal’s theorem implies the claim. 2
Remark 16. Note that each color class of a partitioned k-cograph induces a cograph.
Corollary 89. Let k be a natural number. The class of partitioned k-cographs is
characterized by a finite set of forbidden induced colored graphs. Also, the class of
k-cographs is characterized by a finite set of forbidden induced subgraphs.
Theorem 90. For every natural number k there exists an O(n3) algorithm that rec-
ognizes k-cographs.
Proof. This can be seen in two ways. First notice that k-cographs have a tree-
decomposition such that every cutmatrix is shape-equivalent to a submatrix of
(
Ik 0
)
, where Ik is the k × k identity matrix. A fortiori, k-cographs have bounded
rankwidth. Since the definition of k-cographs can be formulated in monadic second-
order logic, this proves the claim. Alternatively one could verify that the graph has
none of the forbidden induced subgraphs. Note however that this last proof is
59
tree-decomposition by distinguishing left – and right subtrees. Consider a branch,
rooted at some line e = (c, c′) such that c′ is the child of c. Let C be the set of
vertices that are mapped to leaves of the subtree.
Definition 42. The twinset at e is the set of vertices of C that have neighbors in
V − C. In other words; the twinset at e is N(V − C).
Lemma 92. The twinset of e induces a k-cograph.
Proof. Consider the cutmatrix at e. Let R = V − C and let R′ = N(C). Then there
exists a partition of R′ into at most k color classes, such that vertices with the same
color have the same neighbors in C and such that vertices with different colors
have no common neighbor in C. If C consists of a single vertex, there is nothing to
prove. Otherwise, the tree decomposes C into two sets A and B. Let A′ and B′ be
the vertices ofA and B that have neighbors in R. The vertices of A′ are colored with
at most k colors, such that vertices with the same color have the same neighbors
in V − A and such that vertices with different colors have no common neighbor in
V−A. The same holds for B, and we may permute the colors of B such that vertices
of color i in A′ + B′ have the same neighbors in R. By induction we may assume
that the colored graphs A′ and B′ induce k-cographs. There exists a permutation
σ ∈ Sym(k) that matches vertices of color i in A′ with vertices of color σ(i) in B′
and this proves that A′ + B′ induces a k-cograph. 2
Connecting the twinsets.
To complete the description of the k-DH-structure we analyze the connections be-
tween color classes of three branches meeting in a point.
Let P, Q, and R be a partition of V induced by the three branches of an internal
node c of a tree-decomposition. Let P′ = N(Q + R) and define Q′ and R′ likewise.
Consider the graphΩ = Ω(P,Q,R) which has as its vertexset V(Ω) the set of color
classes of the twinsets P′, Q′, and R′. We connect two color classes in different
twinsets by an edge in E(Ω) if their color classes are joined in G. Notice that every
vertex of Ω has degree at most two; for example, a vertex that represents a color
class of P′ has degree two if it is joined to exactly one color class of Q′ and it is
joined to exactly one color class of R′. Thus Ω is the union of a collection of paths
61
4.7.3 A recognition algorithm
A k-DH-tree-decomposition for a graph G consists of a labeled binary tree T and a
bijection f from the leaves of T to the vertices of G. The leaves of T are labeled
with a color from {1, . . . ,k}. To ease the description we equip the lines of T with
twinsets. A line that is incident with a leaf has a twinset that consists of the colored
vertex that is mapped to the leaf by f.
The internal points of T are labeled with a permutation σ ∈ Sym(k) that matches
color classes of the left twinset with color classes of the right twinset. For each color
i ∈ {1, . . . ,k} the point has a label which says whether the vertices of color i in the
left twinset are adjacent or not to the vertices of color σ(i) in the right twinset.
Furthermore, for each color i ∈ {1, . . . ,k} the point has a label which indicates
whether the color class of the left – and of the right twinset is copied into the twin-
set of the line that connects the point to its parent. This defines the twinset of the
line incident with the point and its parent. For the root we only need to define the
adjacencies between the twinsets of the left – and right subtree.
Note that the twinsets are defined by the bijection f and the labels of the internal
nodes; we only introduced these to simplify the description. For a point p we call
the left twinset τℓ and the right twinset τr the ‘input twinsets’ of the point. We
call the twinset τo of the line that connects the point with its parent, the ‘output
twinset’ of the point.
Theorem 95. There exists an O(n3) time algorithm which checks if a graph G is
k-distance hereditary.
Proof. We describe a dynamic programming procedure. Consider a branch with
a twinset P′ of colored vertices. Since the diameter of k-cographs is bounded, we
need to search up to some constant depth for a branch with a twinset Q′ such that
P′ +Q′ induces a k-cograph. This proves the theorem. 2
4.8 k-Threshold graphs
Let k be a natural number. We introduce k-threshold graphs. We show that
there exists an O(n3) algorithm for the recognition of k-threshold graphs for each
natural number k. k-Threshold graphs are characterized by a finite collection of
forbidden induced subgraphs. For the case k = 2 we characterize the partitioned
63
leaves in the left subtree. The ⊕-operator adds the vertex that is mapped to the leaf
in the right subtree as an isolated vertex to the graph induced W. The ⊗-operator
adds the vertex that is mapped to the leaf in the right subtree as a universal vertex
to the graph induced byW.
Let C = {1, . . . ,k} be a set of k colors. A coloring of a graph G = (V ,E) is a map
c : V → C.
Definition 44. A graph G = (V ,E) is a k-threshold graph if there is a coloring of G
with k colors such that for every nonempty setW ⊆ V the graph G[W] has a vertex
which is either isolated, or a vertex x which is adjacent to exactly all vertices of
color i inW − x for some color i.
A k-threshold graphG has a decomposition tree (T , f) where T is a rooted binary
tree and f is a bijection from the leaves of T to the vertices of G. Each leaf has one
color chosen from a set of k colors. For each internal node the right subtree consists
of a single leaf. Each internal node including the root is labeled with a ⊕-operator
or a ⊗i operator. The ⊕-operator adds the vertex that is mapped to the leaf in the
right subtree as an isolated vertex. The ⊗i-operator makes the vertex of the right
leaf adjacent exactly to the vertices of color i in the left subtree.
Consider the class of k-threshold graphs. Notice that the class is hereditary;
that is, if G is a k-threshold graph then so is every induced subgraph of G. Any
hereditary class of graphs is characterized by a set of forbidden induced subgraphs.
These are the minimal elements in the induced subgraph relation that are not in
the class. For example, a graph is a threshold graph if and only if it has no induced
2K2, C4 or P4. In the following theorem we show that this characterization is finite
for k-threshold graphs for any fixed number k.
Theorem 96. Let k be a natural number. The class of k-threshold graphs is charac-
terized by a finite collection of forbidden induced subgraphs.
Proof. To prove this theorem we use the technique introduced by Pouzet [71].
Let T1, T2, . . . be a collection of rooted binary trees with points labeled from
some finite set. We write Ti ≺ Tj if there exists an injective map h from the points
of Ti to the points of Tj such that
65
where one can furthermore use a test whether the cardinality of a subset is even or
odd.
Courcelle proved that problems that can be expressed in C2MS-logic can be
solved in O(n3) time for graphs of bounded rankwidth (see [31, 49]). Consider a
decomposition tree (T , f) for a graph G = (V ,E). Let ℓ be a line in this tree. Let
Vℓ be the set of vertices that are mapped to the leaves in the subtree rooted at ℓ.
The cutmatrix of ℓ is the submatrix of the 0/1-adjacency matrix of G that has rows
indexed by the vertices of Vℓ and that has columns indexed by the vertices of V−Vℓ.
A graph has rankwidth k if every cutmatrix has rank over GF[2] at most k. For each
natural number k there exists an O(n3) algorithm that constructs a decomposition
tree for a graph G of rankwidth k if it exists [48].
Let (T , f) be a decomposition tree for a k-threshold graph. Then every cutmatrix
is of the following shape: 
I 0
0 0


where I is a submatrix of the k × k identity matrix. By ‘having this shape’ we
mean that we left out multiple copies of the same row or column. It follows that
k-threshold graphs have rankwidth k.
Theorem 97. Let k be a natural number. There exists an O(n3) algorithm which
checks whether a graph G with n vertices is a k-threshold graph.
Proof. k-Threshold graphs have rankwidth k. C2MS-Problems can be solved in
O(n3) time for graphs of bounded rankwidth [31, 48, 70]. The definition of k-
threshold graphs can be formulated in this logic.
An other proof goes as follows. Let Ok be the obstruction set for k-threshold
graphs. We can formulate the existence of a graph in Ok as an induced subgraph in
C2MS-logic. Note that this proof is non-constructive; Kruskal’s theorem does not
provide the forbidden induced subgraphs. 2
4.8.1 Special 2-threshold graphs
There are many drawbacks to the solution given in the previous section. The algo-
rithm that constructs a decomposition tree of bounded rankwidth is far from easy.
67
Figure 5: A octahedron, a net, a 4-wheel with a pendant adjacent to the center, and a
diamond with a pendant vertex adjacent to each vertex of degree three
adjacent to the center, or a diamond with a pendant vertex attached to each vertex of
degree three.
Proof. It is easy to check that the listed subgraphs are in the obstruction set. We
prove the sufficiency. If a connected graph has no P5 norC5 then it has a dominating
clique [1, 10]. That is, it has a clique C such that every vertex outside C has at least
one neighbor in C. Since the graph has no 2K2 it has also no P5 and, since there is
also no C5 there is a dominating clique.
Since there is no 2K2 there is at most one component with more than one vertex.
If there is a component with more than one vertex then assume that there is a
decomposition tree for that component. Otherwise start with a decomposition tree
that consists of a single leaf and map any of the isolated vertices to that leaf. Color
the vertex black. We add the isolated vertices one by one as black vertices as
follows. Add a new root to the decomposition tree with a ⊕-operator. Add the
isolated vertex as a right child and the original root as a left child.
Henceforth assume that G is connected.
Let C be a dominating clique of maximal cardinality. Among the dominating
cliques of maximal cardinality choose C such that the number of edges with one
endpoint in C and the other endpoint in V − C is maximal.
We claim that V = C or that G− C is bipartite. For that, it is sufficient to show
that there is no triangle. Assume that there is a triangle {x,y, z} in V − C. Let X, Y
and Z be the vertices in C that are adjacent to x, y and z respectively, but that are
not adjacent to any other vertex of the triangle {x,y, z}. Let
X2 = (N(y) ∩N(z) ∩ C) \N(x)
and define Y2 and Z2 similarly. Let N be the set of vertices in C adjacent to all
three of x, y and z. Since there is no gem, there are no edges between X and Y2,
69
is empty. Without loss of generality assume that X2 = ∅. Then C + {x} is also a
(dominating) clique which contradicts the maximal cardinality of X.
This proves the claim that either V − C is empty or that G[V − C] is bipartite.
Since there is no 2K2 the bipartite graph is a difference graph [44]. Every in-
duced subgraph without isolated vertices has a vertex in each side of the bipartition
that is adjacent to all the vertices in the other side of the bipartition.
Assume that there is a component with more than one vertex. There is a unique
partition of the vertices into two independent sets. Call these sets B (black) and
W (white). We prove that G[B + C] and G[W + C] are threshold graphs. Assume
that there are two black vertices x and y that have private neighbors x′ and y′ in
C. That is, x′ is a neighbor of x but not of y and y′ is a neighbor of y but not
of x. Since x and y are in a component of G[B + W] there is an alternating path
P = [x, x1, . . . , xk,y] of black and white vertices. Assume k = 1. If x1 is not adjacent
to x′ and not adjacent to y′ there is a C5 which is a contradiction. If x1 is adjacent
to exactly one of x′ and y′ then there is a house. If x1 is adjacent to both x′ and y′
then there is a gem.
We proceed by induction. Assume that there is a black vertex xi in P that is
adjacent to exactly one of x′ and y′. Then we obtain a contradiction by considering
one of the two subpaths [x, x1, . . . , xi] and [xi, . . . , xk,y]. Assume that every black
vertex in P, except x and y, is adjacent to both or to neither of x′ and y′. Assume
that there exist two white vertices xi and xj in P such that xi is adjacent to x
′ but
not to y′ and xj is adjacent to y′ but not to x′. Since xi and xj are both white they
are not adjacent. Then we obtain a contradiction by considering the subpath of
P with terminals xi and xj. So we can assume that all the white vertices in P are
adjacent to both or neither of x′ and y′ or, that they all have the same neighbor in
{x′,y′}. Assume that all the white vertices are adjacent to x′ but not to y′. If the
black vertex x2 is not adjacent to x
′ then {x′, x, x1, x2, x3} induces a house. If x2 is
adjacent to x′ then this set induces a gem. The case where all the white vertices
are adjacent to y′ but not to x′ is similar. Assume that all the white vertices are
adjacent to both or neither of x′ and y′. Every edge of P must have at least one
endpoint adjacent to one of x′ or y′ otherwise there is a 2K2. Assume that all the
white vertices are adjacent to both x′ and y′. Then {x′, x, x1, x2, x3} induces a gem
or a house. Let xi be the first white vertex in P that is not adjacent to x
′ nor to y′.
71
that {x,y,q, r,p} induces a gem.
Let C∗ ⊆ C be the set of vertices in C that have no neighbors in B or in W. We
prove that C∗ = ∅. Assume that C∗ 6= ∅. Then |C∗| = 1 otherwise there is a 2K2
since there is an edge in G[B + W]. Let C∗ = {c}. Let p be a black vertex with a
minimal neighborhood and let q be a white vertex with a minimal neighborhood.
Assume that p and q are not adjacent. Let p′ ∈ C be a neighbor of p and let
q′ ∈ C be a neighbor of q. Then p′ 6= q′ otherwise p and q are adjacent. Let a
be a black vertex with a maximal neighborhood and let b be a white vertex with
a maximal neighborhood. Then a and b are adjacent. Assume that a 6= p and
b 6= q. The vertex a is adjacent to p′ and the vertex b is adjacent to q′. If a is not
adjacent to q′ and b is not adjacent to p′ then {a,b,q′,p′, c} induces a house. If a
is adjacent to q′ then a is adjacent to q and {q′,q,a,p′, c} induces a gem. Assume
that a = p, i.e., assume that there is only one black vertex. Then p is adjacent to
q because G[B + W] is connected. This contradicts the assumption that p and q
are not adjacent. Assume that p and q are adjacent. Then G[B + W] is complete
bipartite. Assume that p′ 6= q′. If p is not adjacent to q′ and q is not adjacent to
p′ then {c,p,q,q′,p′} induces a house. If p is adjacent to q′ and q is not adjacent
to p′ then {q′,q,p,p′, c} induces a gem. Assume that p is adjacent to q′ and that q
is adjacent to p′. Then all the black vertices and all the white vertices are adjacent
to p′ and to q′. Assume that there is a black vertex a 6= p and a white vertex
b 6= q. Then {a,b,p,q,p′, c} induces a 4-wheel with a pendant. Assume that there
is only one black vertex p. Assume that there is a vertex δ ∈ C − C∗ which is not
adjacent to p. Then δ is adjacent to a white vertex b and {p′, c, δ,b,p} induces
a gem. Assume that there is an isolated vertex x in G − C adjacent to c. Then
{(p,q), (c, x)} is a 2K2. Thus N(c) ⊂ N(p). Replace c by p. Then we obtain a
dominating clique C′ with the same cardinality as C but there are more edges with
one endpoint in C′ and the other endpoint in V−C′ since p is furthermore adjacent
to q. This contradicts the assumption that C maximizes the number of edges with
one endpoint in C and the other in V − C. Assume p′ = q′. Then G[B + W] is
complete bipartite. If there are black and white vertices a 6= p and b 6= q then
{a,b,p,q,p′, c} induces a 4-wheel with a pendant. Assume that there is only one
black vertex p. If there is a vertex δ ∈ C − C∗ that is not adjacent to p then δ is
adjacent to a white vertex b. Then {p′, c, δ,b,p} induces a gem. There is no isolated
73
there is a gem {q′,q,a,p′, x}. If there is only one black vertex p then p is adjacent
to q since G[B + W] is connected. This contradicts the assumption that p and q
are not adjacent. Assume that p and q are adjacent. Then G[B + W] is complete
bipartite. Assume that p′ 6= q′. If p is not adjacent to q′ and q is not adjacent to p′
then {p,q,p′,q′, x} induces a house. If p is adjacent to q′ but q is not adjacent to
p′ then {q′,q,p,p′, x} induces a gem. Assume that p is adjacent to q′ and that q is
adjacent to p′. There is a vertex δ1 ∈ C that is adjacent to p but not to q and there
is a vertex δ2 ∈ C that is adjacent to q but not to p. If δ1 is adjacent to x then there
is a gem {p′, x, δ1,p,q}. If δ2 is adjacent to x then there is a gem {q′, x, δ2,q,p}.
If δ1 is not adjacent to x and δ2 is not adjacent to x then there is a 4-wheel with
a pendant attached to its center {p, δ1, δ2,q,p
′, x}. The same contradiction follows
when p′ = q′.
Assume that x is not adjacent to any neighbor of p and that x is not adjacent
to any neighbor of q. Assume that p and q are not adjacent. Let p′ ∈ C be a
neighbor of p and let q′ ∈ C be a neighbor of q. Let δ ∈ C be a neighbor of x.
Then {p,q, x,p′,q′, δ} is a net. Assume that p and q are adjacent. Let δ1 ∈ C be a
neighbor of p that is not a neighbor of q and let δ2 ∈ C be a neighbor of q that is
not a neighbor of p. Let δ ∈ C be a neighbor of x. Then {δ, δ1, δ2,q,p} induces a
house. This proves that x has common neighbors in C with exactly one of p and q.
Assume that x has no common neighbors with q. We proceed by induction on the
number of white vertices. Remove q. By induction it follows that x has no common
neighbors with any white vertex.
This proves the claim that N(x) is contained in I or in J for any isolated vertex
x of G− C.
We prove that the neighborhoods of isolated vertices of G− C that have neigh-
bors in I are ordered by set inclusion. Consider three isolated vertices x, y and z of
G−C that have neighbors in I. Assume that x and y have private neighbors x′ and
y′ in C. Assume that z is adjacent to x′ and to y′. There exists a vertex δ ∈ C that is
not adjacent to z. If x is adjacent to δ there is a gem {x′, x, δ,y′, z}. If y is adjacent
to δ there is a gem {y′,y, δ, x′, z}. If δ is not adjacent to x and not to y there is a
diamond with two pendant vertices {z, x′,y′, δ, x,y}. Assume that z is not adjacent
to x′ and that z is not adjacent to y′. Assume that z has a neighbor z′ that is not
adjacent to x and that is not adjacent to y. Then {x′,y′, z′, x,y, z} is a net. If z has
75
ery induced subgraph has an isolated vertex, or a pendant vertex, or two vertices
x and y such that every other vertex z is adjacent to both x and y or to neither of
them. A pair of vertices like that is called a twin. It is easy to check that the special
graphs satisfy this property. The distance-hereditary graphs are exactly the graphs
of rankwidth one [70]. A rank-decomposition tree can be found in linear time [45].
We can formulate the existence of an induced subgraph that is isomorphic to one
of the graphs in the obstruction set in monadic second-order logic without quantifi-
cation over edge-sets. This proves the lemma. 2
4.8.2 Partitioned black-and-white threshold graphs
In this section we turn our attention to the partitioned 2-threshold graphs, that is,
we assume that the coloring is a part of the input.
Lemma 100. If G is 2-threshold then the following statements hold true.
(a) G has at most two components with at least two vertices.
(b) If G has two components with at least two vertices, then one is a threshold graph
and the other is a special 2-threshold graph.
Proof. Assume that G has more than two components with at least two vertices.
Then G has an induced 3K2. It is easy to check that 3K2 is not a 2-threshold graph.
Assume that there are two components C1 and C2 with at least two vertices.
Let x and y be adjacent vertices in C1. First assume that x is black and y is white.
Assume that C2 has a black vertex and a white vertex. Then it has an edge with
one black endpoint and one white endpoint. We find a 2K2 and both edges have
one black endpoint and one white endpoint. It is easy to check that there is no
elimination ordering for a 2K2 that is colored like that. Thus C2 is monochromatic
which implies that C2 induces a threshold graph.
Now assume that x and y are both black. Consider a decomposition tree for
C2 + {x,y}. Assume that x is closer to the root than y. Then the operator of x is a
⊗b-operator since x is adjacent to y. All the operators that appear closer to the root
than the operator of y are either ⊕ or ⊗w otherwise they are adjacent to y. All the
vertices further from the root than y are white, otherwise they are adjacent to x.
So we may replace any ⊗b-operator that is further from the root than the operator
77
Case 3: o(x) = ⊗w. Now N(x) = T1+ T2 where T1 and T2 are defined as follows.
T1 = { y ∈ V | y ≺ x and o(y) = ⊗b }
T2 = { y ∈ V | x ≺ y and y is white }.
In this case there are no edge between vertices of T1 and vertices of T2. If
T2 6= ∅ then the graph induced by T2 is a threshold graph since all vertices are
white. We proved above that T1 is also a threshold graph.
A similar analysis holds when x is a white vertex. This proves the lemma. 2
The complement of a graph G = (V ,E) is the graph that has V as its vertices
and that has those pairs of vertices adjacent that are not adjacent in G. We denote
the complement of G by G¯.
Let G be a graph. A vertex of G is good if its neighborhood is empty or, a
threshold graph or, the union of two threshold graphs or the join of two threshold
graphs. The graph G is good if every vertex of G is good. By Lemma 101 a 2-
threshold graph is good. Consider a vertex x in G. A local complementation at x is
the operation which complements the graph induced by N(x). Note that the class
of good graphs is hereditary and closed under local complementations.
Theorem 102. A graph G is good if and only if G has no induced gem or, C4 + K1
with a universal vertex or, the local complement of this with respect to the universal
vertex or, 3K2 with a universal vertex or, an octahedron with a universal vertex.
Proof. It is easy to check that the universal vertex of each of the mentioned graphs
is not good. We prove the converse. Let x be a vertex with a nonempty neighbor-
hood. Since there is no gem the graph induced by N(x) is a cograph. Assume that
this graph is disconnected. Let C1, . . . ,Ct be the components of the graph induced
by N(x). There is no 3K2 in the graph induced by N(x) so there are at most two
components with more than one vertex. Since there is no 4-wheel with a pendant
vertex attached to its center the graph induced by each component Ci has no C4.
Assume that Ci has an induced 2K2. Since the graph induced by Ci is connected
and since there is no P4 in G[Ci] this graph has a butterfly. Then G has an induced
subgraph that is isomorphic a butterfly with a universal vertex. The butterfly is the
complement of C4 + K1.
79
(1) (2) (3) (4) (5) (6)
(7) (8) (9) (10) (11) (12)
(13) (14) (15) (16) (17) (18)
(19) (20) (21) (22) (23) (24)
(25) (26) (27) (28) (29) (30)
(31) (32) (33)
Figure 6: The set of forbidden induced subgraphs of 2-threshold graphs contains the
gem, 3K2, C5, C6, C7, P7, 2C4, 2P4, C4 + P4 and the graphs listed above.
81
Furthermore, α and β are adjacent. Then {q,a,b,α,β} induces a house.
Assume that q has only black neighbors. It is easy to check that there is a vertex
x ∈ N[q] such that N(x) or N[x] is the set of black vertices.
Other cases can be dealt with in a similar manner.
Assume that there is no house and no 2K2. Then G is special. It is easy to check
that the claim holds true in that case. This proves the theorem. 2
4.8.3 The switching class of threshold graphs
If we allow a ⊗-operator, which adds a universal vertex, then we obtain a slightly
bigger class of graphs. We call these graphs extended 2-threshold graphs. It is easy
to see that if G is an extended 2-threshold graph then so is its complement.
We obtain a class of graphs that is contained in the 2-threshold graphs if we
allow only ⊗w-operators and ⊗b-operators. We call these graphs restricted 2-
threshold graphs. It is easy to see that also the restricted 2-threshold graphs are
self-complementary. We prove in this section that the restricted 2-threshold graphs
are exactly the graphs that are switching equivalent to threshold graphs.
Definition 46. Let G = (V ,E) be a graph and let S ⊆ V . Switching G with respect
to S is the operation that adds all edges to G between nonadjacent pairs with one
element in S and the other not in S and that removes all edges between pairs with
one element in S and the other not in S.
Switching is an equivalence relation on graphs. The equivalence classes are
called switching classes. The work on switching classes was initiated by van Lint
and Seidel [58, 75].
Theorem 104. If G is in the switching class of a threshold graph then G is a restricted
2-threshold graph.
Proof. Assume that G is obtained by switching a threshold graph H with respect to
some set S of vertices. Consider the decomposition tree for the threshold graph H.
Color the vertices of S white and color the other vertices black. Change the ⊗- and
⊕-operators in the tree as follows.
1. If a vertex x is black and o(x) = ⊗ then change o(x) to ⊗b.
2. If a vertex x is black and o(x) = ⊕ then change o(x) to ⊗w.
83
ing equivalent to a cograph H. If H is connected then we can switch it to a dis-
connected cograph by switching it with respect to one of the components of the
complement. Henceforth we assume that H is disconnected. Let C1,C2, . . . be the
components of H. There are at most two components with more than one vertex,
otherwise the graph has an induced 3K2. Furthermore, there can be at most one
component which is not a threshold graph already. First assume that every compo-
nent is a threshold graph. Then switch the graph with respect to a maximal clique
in one of them. It is easy to check that this produces a threshold graph. Assume
that C1 does not induce a threshold graph.
By induction we can assume that there is a subset S of C1 such that switching
H[C1] with respect to S produces a threshold graph T . The threshold graph T has
a universal or isolated vertex x. We may assume that x 6∈ S, otherwise we can
switch H[C1] with respect to C1− S. If x is isolated in T then S = NH(x) and if x is
universal in T then S = C1−NH[x].
Assume that S = NH(x). If C1 = NH[x] then H[C1] is a threshold graph. Assume
that C1 −NH[x] 6= ∅. Let ∆ = C1 −NH[x]. For every pair of vertices a and b in ∆
their neighborhoods in S are ordered by inclusion, otherwise the switch produces a
C4, or P4 or 2K2. Since H[C1] is connected and has no induced P4 every vertex of ∆
has a neighbor in S. Let S′ ⊆ S be the subset of vertices in S that have a neighbor
in ∆. Then every pair with one element in S′ and one element in S− S′ is adjacent,
since there is no P4 in H[C1]. The switch makes every vertex of S − S
′ adjacent to
every vertex of ∆. Since the C4 is forbidden at least one of S − S
′ and S′ + ∆ is a
clique.
Assume that there is an edge (p,q) in ∆ and assume that p has a neighbor p′ in
S that is not a neighbor of q. Then [q,p,p′, x] is a P4 in H which is forbidden. Thus
all vertices of every component of ∆ have the same neighbors in S. Call the sets of
vertices of S′ that have the same neighbors in ∆ the classes of S′. Call the unions of
those components of ∆ that have the same neighbors in S′ the classes of ∆.
Assume that there are two classes P and Q in S′ and assume that P is adjacent
to a class P′ of ∆ which is not adjacent to Q. Let Q be adjacent to a class Q′ of ∆.
Then P is also adjacent to Q′. Since [P′,P,Q′,Q] has no induced P4, every vertex of
P is adjacent to every vertex ofQ. Furthermore, since there is no C4 in the switched
graph, at least one of the classes P and Q is a clique. Thus all of S′ except possibly
85
First assume that Q is an independent set. Switch H with respect to
Q+ (V − C1).
The set Q becomes a set of isolated vertices. The vertex x is adjacent to the clique
S − Q. The graph induced by ∆ + (S − Q) is a threshold graph. The set V − C1
becomes a clique of vertices adjacent to all vertices in C1 −Q. Thus H switches to
a threshold graph.
Assume that Q is not an independent set. Switch H with respect to
Q+ (V − C1).
This gives two disjoint threshold graphs Q and V − Q. As shown at the start, we
can switch the graph to a threshold graph.
The case where S = C1−N[x] is similar. 2
Theorem 106. A graph is switching equivalent to a threshold graph if and only if it
is a restricted 2-threshold graph.
Proof. It is easy to check that none of the forbidden induced subgraphs of the
switching class of threshold graphs is restricted 2-threshold. 2
5 結果與討論
We examined the graphclass-width parameter for classes related to distance-
hereditary graphs of bounded diameter. We showed that the graphs in these classes
can be recognized in O(n3) time. For One class for which we failed to find an
efficient recognition algorithm is the class of DH-width k. It can be seen that the
class of graphs is closely related to graphs of bounded rankwidth. It seems likely
that there is an O(n3) recognition algorithm for this class of graphs.
6 計畫成果自評
I spent a lot of time gaining insights in applications of Kruskal’s theorem for
the recognition of graphs that have a tree-structure. The common view in com-
puter science these days is that objects are recognizable with an efficient algorithm
87
[5] Berge, C. and C. Chvatal ed., Topics on Perfect Graphs, Annals of Discrete
Mathematics 21, 1984.
[6] Berry, A., M. C. Golumbic, and M. Lipshteyn, Recognizing and triangulating
chordal probe graphs. Research Report LIMOS/RR–03–08, 4th July 2003.
[7] Berry, A., M. C. Golumbic, and M. Lipshteyn, Two tricks to triangulate
chordal probe graphs in polynomial time, Proceedings 15th ACM–SIAM Sym-
posium on Discrete Algorithms (2004), pp. 962–969.
[8] Berry, A., E. Cohen, M. C. Golumbic, M. Lipshteyn, N. Pinet, A. Sigayret,
and M. Stern, Recognizing chordal-bipartite probe graphs. Research Report
LIMOS/RR-07-09, 2007.
[9] Berry, A., M. C. Golumbic and M. Lipshteyn, Recognizing chordal probe
graphs and cycle-bicolorable graphs, SIAM Journal on Discrete Mathematics
21 (2007), pp. 573–591.
[10] Brandsta¨dt, A., V. B. Le, and J. P. Spinrad, Graph classes: A survey, SIAM
Monographs on Discrete Mathematics and Applications, Philadelphia, 1999.
See also the database:
http://wwwteo.informatik.uni-rostock.de/isgci/index.html
[11] Cameron, P. J., Two-graphs and trees, Discrete Mathematics 127 (1994),
pp. 63–74.
[12] Chandler, D. B., M.-S. Chang, T. Kloks, V. B. Le, and S.-L. Peng, Probe ptole-
maic graphs, Proceedings COCOON 2008.
[13] Chandler, D. B., M.-S. Chang, A. J. J. Kloks, J. Liu, and S.-L. Peng, On probe
permutation graphs, Proceedings TAMC 2006, LNCS 3959 (2006), pp. 494–
504.
[14] Chandler, D. B., M.-S. Chang, T. Kloks, J. Liu, and S.-L. Peng, Recognition of
probe cographs and partitioned probe distance-hereditary graphs, Proceed-
ings AAIM 2006, LNCS 4041 (2006), pp. 267–278.
[15] Chandler, D. B., M.-S. Chang, T. Kloks, J. Liu, and S.-L. Peng, Partitioned
89
B. H. Korte, and G. L. Nemhouser eds.), Annals of Discrete Mathematics 1,
North-Holland, Amsterdam, 1977, pp. 145–162.
[26] Conforti, M., G. Cornue´jols, A. Kapoor, and K. Vusˇkovic´, Perfect, ideal and
balanced matrices, European Journal of Operations Research 133 (2001),
pp. 455–461.
[27] Conforti, M., G. Cornue´jols, and M. R. Rao, Decomposition of balanced ma-
trices, Journal of Combinatorial Theory, Series B 77 (1999), pp. 292–406.
[28] Corneil, D. G., H. Lerchs, and L. Stewart-Burlingham, Complement reducible
graphs, Discrete Applied Mathematics 3, (1981), pp. 163–174.
[29] Cornue´jols, G., X. Liu, and K. Vusˇkovic´, A polynomial algorithm for recog-
nizing perfect graphs, Proceedings 44th FOCS 2003, IEEE (2003), pp. 20–27.
[30] Courcelle, B., J. A. Makowski, and U. Rotics, Linear time solvable optimiza-
tion problems on graphs of bounded clique-width, Theory of Computing Sys-
tems 33 (2000), pp. 125–150.
[31] Courcelle, B. and S. Oum, Vertex-minors, monadic second-order logic, and
a conjecture by Seese, Journal of Combinatorial Theory, Series B 97 (2007),
pp. 91–126.
[32] Cunningham, W. H. and J. Edmonds, A combinatorial decomposition theory,
Canadian Journal of Mathematics 32 (1982), pp. 734–765.
[33] Damaschke, P., Induced subgraphs and well-quasi-ordering, Journal of
Graph Theory 14 (1990), pp. 426–435.
[34] Fellows, M. R., F. A. Rosamund, U. Rotics, and S. Szeider, Clique-width
minimization is NP-hard, Proceedings 38th STOC 2006, ACM Press (2006),
pp. 354–362.
[35] Gallai, T., Transitiv Orientierbare Graphen, Acta Math. Acad. Sci. Hungar. 18
(1967), pp. 25–66.
[36] Golumbic, M. C., Trivially perfect graphs, Discrete Mathematics 24 (1978),
pp. 105–107.
91
[50] Howorka, E., A characterization of distance-hereditary graphs, Quarterly
Journal of Mathematics 28 (1977), pp. 417–420.
[51] Hung, L.-J. and T. Kloks, On some simple widths. Proceedings WAL-
COM 2010, LNCS 5942 (2010), pp. 204–215.
[52] Johnson, J. L. and J. Spinrad, A polynomial time recognition algorithm for
probe interval graphs, Proceedings 12th ACM–SIAM Symposium on Discrete
Algorithms (2001), pp. 477–486.
[53] Kay, D. C., Chartrand, G.: A characterization of certain ptolemaic graphs.
Canadian Journal of Mathematics 17 (1965), pp. 342–346.
[54] Kruskal, J., Well-quasi-ordering, the tree theorem, and Vazsonyi’s conjec-
ture, Transactions of the American Mathematical Society 95 (1960), pp. 210–
225.
[55] Le, V. B. and H. N. de Ridder, Characterizations and linear-time recognition
of probe cographs, Proceedings WG 2007, LNCS 4769 (2007), pp. 226–237.
[56] Le, V. B. and H. N. de Ridder, Probe split graphs, Discrete Mathematics and
Theoretical Computer Science 9 (2007), pp. 207-238.
[57] Lehman, A., On the width-length inequality, Mathematical Programming 17
(1979), pp. 403–417.
[58] van Lint, J. H. and J. J. Seidel, Equilateral points in elliptic geometry, Inda-
gationes Mathematicae 28 (1966), pp. 335–348.
[59] Lova´sz, L., Normal hypergraphs and the weak perfect graph conjecture, Dis-
crete Mathematics 2 (1972), pp. 253–267.
[60] Ma, T.-H. and Spinrad J., An O(n2) algorithm for undirected split decompo-
sition, Journal of Algorithms 16 (1994), pp. 145–160.
[61] Mahadev, N. V. R. and U. N. Peled, Threshold graphs and related topics, An-
nals of Discrete Mathematics 56, Elsevier, North-Holland, Amsterdam, 1995.
[62] Manca, P., On a simple characterization of threshold graphs, Rivista di
Matematica per le Scienze Economiche e Sociali 2 (1979), pp. 3–8.
93
[74] Schrijver, A., Combinatorial Optimization–Polyhedra and Efficiency, Springer
series: Algorithms and Combinatorics 24, 2008.
[75] Seidel, J. J., Geometry and combinatorics, Selected works of J. J. Seidel
(D. G. Corneil and R. Mathon eds.), Academic Press 1991.
[76] Seymour, P., Decomposition of regular matroids, Journal of Combinatorial
Theory, Series B 28 (1980), pp. 305–359.
[77] Sheng, L., Cycle free probe interval graphs, Congressus Numerantium 140
(1999), pp. 33–42.
[78] R. Tarjan: Depth-first search and linear graph algorithms. SIAM Journal of
Computing 1, 146–160 (1972)
[79] Thomasse´, S., On better-quasi-ordering countable series-parallel orders,
Transactions of the American Mathematical Society 352 (1999), pp. 2491–
2505.
[80] Wolk, E. S., A note on “The comparability graph of a tree,” Proceedings Amer-
ican Mathematical Society 16 (1965), pp. 17–20.
[81] Bui-Xuan, B.-M. and J. A. Telle, H-join and dynamic programming on graphs
of bounded rankwidth. Manuscript 2008.
[82] Zambelli, G., A polynomial recognition algorithm for balanced matrices,
Journal of Combinatorial Theory, Series B 95 (2005), pp. 49–67.
[83] Zhang, P., E. A. Schon, S. G. Fischer, E. Cayanis, J. Weiss, S. Kistler,
P. E. Bourne, An algorithm based on graph theory for the assembly of contigs
in physical mapping of DNA, CABIOS 10 (1994), pp. 309–317.
95
Shang is applying these strategies for obtaining efficient algorithms to decide
if a graph is a good expander. Just before the workshop I listened to a talk by
Joseph on this topic.
5. U. Scho¨ning: Comparing Two Stochastic Local Search Algorithms for Constraint
Satisfaction Problems.
6. S. Albers: The high standard algorithms for Energy Management. Susanne
Albers talked about efficient scheduling of computer systems to be active. To
save energy one has to schedule the time periods in which a computer system
is active.
7. P. Raghavan: The quantitative analysis of user behavior online – data, models
and algorithms. Prabahkar Raghavan works for the Yahoo company. There he
works on obtaining a good search engine. There are various ways to measure
how a user acts on the search results that he is presented with. For example in
the lab one can measure eye-movements to measure which parts of the screen
are looked at. Another way to collect data is by ‘click-measures,’ where the
entries that a user types on his keyboard are monitored. The problem is not
only the order in which the search results are presented on the screen. Often
the results are not simply listed in a linear top-down order.
8. Richard Jozsa: Classical Simulation and Complexity of Quantum Com- puta-
tions. R. Jozsa works at Cambridge University in the UK and is one of the
founders of quantum complexity. He explained that quantum complexity is
closely related to the probabilistic analysis of algorithms, but the measure is
the L2-norm instead of the L1-norm. One drawback is that it is impossible to
track the algorithm’s performance. He explained how the analysis of the enu-
meration algorithm of perfect matchings in planar graphs (via permanents)
gives a collection of transition matrices that can be tracked satisfactory.
There were further a few talks on graph algorithms that are close to my own
specific interest:
1. Hening Fernau gave a talk on the directed maximum leaf spanning tree prob-
lem. I think this is the first exact algorithm that computes a spanning tree
with a maximum number of leaves in a directed graph.
2. Maurice Jansen gave a talk on balancing bounded treewidth circuits. The idea
is that circuits what have bounded width have bounded treewidth. When I
97
a table with H. Fernau and M. Janssen. We had a nice discussion about their papers
(all of our papers were presented during that first morning-session). On the next
day we used our lunch-time to visit the beautiful St. Peter and Paul cathedral. The
social event of the conference was a trip to a monastry some twenty kilometers
outside Kazan. We had a nice tour of this monastry and its beautiful cathedral. (It
was a bit surprising to me that we were allowed to sightsee the cathedral when a
mass was in progress.) Our trip back took also a long time; we had to wait for 7
hours in Frankfurt for a connecting fight to Hong Kong. We used it to watch the
football games between North Korea and Portugal (7–0 for Portugal) and the first
half of the game between Switzerland and Chile (1–0 for Chile; we saw the goal).
Sincerely,
Dr Ton Kloks
99
Guiseppe gave one of the invited lectures. He talked about Hamiltonian augmen-
tation techniques in graph drawing. I have to say that graph drawing is not my
favorite topic. I find that the methods that are used in this field are too ad hoc.
That makes it hard to find a clear direction of research in this field.
One of the other invited talks was by Tetsuo Asano. He talked about constant
work-space algorithms for shortest-path problems. I found this talk very interest-
ing! It seems to me that this research may have a lot of practical applications since
hardware devices tend not to have a lot of memory.
Another invited talk was by Janos Pach. He talked about crossings between
curves with many tangencies. As expected from an experienced speaker as this, his
talk was ‘robust.’ I am not an expert of geometrical problems (like he is), but he
always manages to present his talk in a clear fashion, such that it is of interest also
to those that are not experts in the field. Finally there was an invited talk on art
gallery problems by Ghosh. This problem deals with finding the smallest number
of guards that are necessary to guard a museum, or other at gallery building like
that. This is a classic problem that combines geometry with graph theory.
I went to all the talks and I found a great deal of them very nice and interest-
ing. I mention a few talks that especially drew my attention. There was a paper
by Mingyu Xiao from mainland China on finding maximum independent sets in
graphs that have valency three. A lot of research is being done on exact algorithms,
especially on the independent set problem. This paper restricts to graphs of degree
3, but it seems to me that the techniques can be applied to more general graphs as
well. There was a talk about the problem on cutting a convex polyhedron out of a
sphere. (In fact there were two talks related to the same problem.) This talk was
by two students from Bangladesh. It addresses the problem how to cut pieces of
cloth used for dressmaking, in such a way that the waste is minimized.
There was a talk on connected feedback vertex set. I was interested in this
talk mainly because of some of my own work. Finally I was impressed by a talk
on ‘rooted-forest partition with uniform vertex demand.’ This title still mystifies
me, but the techniques he used for solving his problem interest me a great deal.
I will have to study this paper in detail. BTW, of course we received the LNCS
proceedings, number 5942, published by Springer. It seems to me that the papers
in this proceedings are of great quality.
101
8.3 Maw-Shang Chang, Ling-Ju Hung, Ton Kloks, and Sheng-Lung Peng, Block-
graph Width, in Proceedings of TAMC 2009.
8.4 Ling-Ju Hung, Ton Kloks, and Chuan Min Lee, Trivially-perfect Width, in
Proceedings of IWOCA 2009.
8.5 Ling-Ju Hung and Ton Kloks, Kruskalian Graphs k-Cographs, in Proceed-
ings of CATS 2010.
8.6 Ling-Ju Hung and Ton Kloks, On Some Simple Widths, in Proceedings of
WALCOM 2010.
8.7 Ling-Ju Hung and Ton Kloks, Classifying Rankwidth k-DH-Graphs, in Pro-
ceedings of CSR 2010.
8.8 Ling-Ju Hung, Ton Kloks, and Fernando Sanchaz Villaamil, Black-and-
White Threshold Graphs, to appear in Proceedings of CATS 2011.
8.9 Ling-Ju Hung and Ton Kloks, k-Cographs are Kruskalian, accepted by
Chicago Journal of Theoretical Computer Science.
8.10 Maw-Shang Chang, Ling-Ju Hung, Ton Kloks, and Sheng-Lung Peng, On
the Threshold-Width of Graphs, Manuscript.
8.11 Ling-Ju Hung and Ton Kloks, Two-Graphs and Tree-Decompositions–In
memory of J.J. Seidel, Manuscript.
103
Block-Graph Width 151
The collection of independent sets Ni, i = 1, . . . ,k for which there exists an
embedding H as stipulated in Deﬁnition 1 is called a witness of H.
In this paper we investigate the width-parameter for the class B of block
graphs, henceforth called the block-graph width, or B-width. If a graph G has
B-width k then we call G also a k-probe block graph. We refer to the partitioned
case of the problem when a collection of independent sets Ni, i = 1, . . . ,k is a
part of the input. For historical reasons we call the set of vertices P = V−
⋃k
i=1 Ni
the set of probes and the vertices of
⋃k
i=1 Ni the set of nonprobes .
Block graphs were introduced in [7]. They are special ptolemaic graphs, i.e.,
gem-free chordal graphs, in which every maximal 2-connected subgraph is a
clique. We adapt the deﬁnition as it is presented in [1, Deﬁnition 10.2.3], to
allow for disconnected graphs.








 






 







Fig. 1. A diamond, a hole, and a gem. A graph has rankwidth at most 1 if and only if
it has no vertex minor isomorphic to the gem [10].
Definition 2 ([1,7]). A graph G is a block graph if every biconnected compo-
nent, or ‘block,’ is complete. Equivalently, G is a block graphs if G is chordal
and has no induced subgraph isomorphic to K4 − e, that is, the diamond.
2 B-Width Is Fixed-Parameter Tractable
In this section we show that for constant k, k-probe block graphs can be recog-
nized in O(n3) time.
Definition 3 ([11]). A rank-decomposition of a graph G = (V ,E) is a pair
(T , τ) where T is a ternary tree and τ a bijection from the leaves of T to the
vertices of G. Let e be an edge in T and consider the two sets A and B of leaves
of the two subtrees of T − e. Let Me be the submatrix of the adjacency matrix
of G with rows indexed by the vertices of A and columns indexed by the vertices
of B. The width of e is the rank over GF(2) of Me. The width of (T , τ) is the
maximum width over all edges e in T and the rankwidth of G is the minimum
width over all rank-decompositions of G.
Lemma 1. Block graphs have rankwidth at most one.
Proof. Obviously, the class of graphs with rankwidth at most one is heredi-
tary. This class is exactly the class of distance-hereditary graphs [2,11]. Every
block graph is a ptolemaic graph, and the ptolemaic graphs are the distance-
hereditary graphs that are chordal (see, e.g., [1]). unionsq
Block-Graph Width 153
3 Partitioned k-Probe Block Graphs
Obviously, the result of the previous section holds as well when the collection
of independent sets N1, . . . ,Nk is a part of the input. Thus for each k there is
an O(n3) algorithm that checks whether a graph G with k independent sets Ni
can be embedded into a block graph with these independent sets as a witness.
However, there are a few drawbacks to this solution. First of all, Theorem 2 only
shows the existence of an O(n3) recognition algorithm. A priori , it is unclear how
to obtain the algorithm. Furthermore, the constants involved in the algorithm
make the solution impractical. Already there is an exponential blow-up when
one moves from B-width to rankwidth.
In this section we show that there exists a polynomial-time algorithm for the
recognition of partitioned k-probe block graphs.
By Corollary 1 we have:
Proposition 1. A graph G with independent sets Ni, i = 1, . . . ,k, is a parti-
tioned k-probe block graph if and only if every biconnected component of G, with
the induced independent sets, is a partitioned k-probe complete graph.
Theorem 3. For every k there exists an O(n2)-time algorithm to check whether
a graph G, equipped with a collection of k independent sets is a partitioned k-
probe block graph.
Proof. By Proposition 1 it is suﬃcient to describe an algorithm which checks
if a partitioned graph can be embedded into a complete graph. To check if a
partitioned k-probe graph is a k-probe complete graph, we can simply add all
the possible edges and check if it is a complete graph.
A biconnected-component decomposition of a graph can be found in linear
time. It takes O(n2) time to add all possible edges in each biconnected compo-
nent and to check if the embedding of each biconnected component is a clique.
Hence a partitioned k-probe block graph can be recognized in O(n2) time. unionsq
Remark 1. Note that the algorithm described in Theorem 3 is fully polynomial.
As a corollary we obtain that also the sandwich problem for complete graphs
can be solved in O(n2) time. This result was independently obtained in [4].
Remark 2. It is interesting that we can decompose a partitioned k-probe com-
plete graph into a k-geometric graph T(k). The vertices of T(k) are the 2k 0, 1-
vectors of length k. Two of these vertices a and b are adjacent in T(k) if the
vectors have no 1 in any common entry. A T(k)-decomposition of G maps a ver-
tex x of G to the vertex L(x) of T(k). Thus the probes are mapped to the all-0
vector. We call the collection of vertices that are mapped to the same vertex
in T(k), the bags of this T(k)-decomposition. Note that, if vertices are in bags
that are adjacent in T(k), then no edge can be added between them since they
are not in any common Ni. This gives the proof that the unpartitioned case of
complete-width is in FPT. The bags are equivalent classes. Two vertices are in
the same bag if they have the same neighborhood in G.
Block-Graph Width 155
Definition 8. Let Ri be a representative with vertex set V(Ri). For each vertex
C ∈ V(Ri) let Q(C) be a subset of labels. The set Q = {Q(C) | C ∈ V(Ri)} is a
feasible extension if
i. If C is an independent set then every pair of labels Q1,Q2 ∈ Q(C) has a 1
in a common entry.
ii. If C is a clique then every pair of labels Q1,Q2 ∈ Q(C) has no 1 in any
common entry.
iii. If C1 and C2 are adjacent in Ri then every pair Q1 ∈ Q(C1) and Q2 ∈ Q(C2)
have no 1 in any common entry.
iv. If C1 and C2 are not adjacent in Ri then every pair Q1 ∈ Q(C1) and Q2 ∈
Q(C2) have a 1 in some common entry.
Consider the input set of a node i in the biconnected-component decomposition.
Consider two children p and q of i incident with the same cutvertex x ∈ Si. A
reduction of the input set replaces both L(p) and L(q) by L(p) ∩ L(q). Thus a
reduced input set has only one set of labels for each cutvertex in Si.
Lemma 5. Let i be a node in the biconnected-component decomposition and let
Gi be the graph induced by the bags in the subtree of T rooted at node i. For a
vertex x ∈ Si let Cx be the equivalence class of Ri that contains x. Then Gi has
B-width at most k if and only if there exists a feasible extension Q of Ri such
that each vertex x has a label L(x) in the reduced input set which is an element
of Q(Cx).
Proof. Assume there exists a witness {Ni | i = 1, . . . , k} for the graph Gi.
Consider the labels L(x) for x ∈ Si of this witness. Deﬁne a labeling Q on
the equivalence classes C of Ri as follows: For each equivalence class C let
Q(C) = {L(x) | x ∈ C}. We claim that Q is a feasible extension of Ri. Indeed, the
conditions of Deﬁnition 8 are easy to check.
To prove the converse, consider a feasible extension Q of Ri such that each
vertex x has a label L(x) in the reduced input which is an element of Q(Cx).
Choose such a label for each x ∈ Si. By deﬁnition of a (reduced) input set, there
exist embeddings for each graph Gj induced by bags in the subtree rooted at
cutvertex s ∈ Sj ∩Si with label L(s). By Deﬁnition 8 of a feasible extension, the
independent sets extend to Si since any two vertices with labels that have a 1
in a common entry are nonadjacent. unionsq
Theorem 4. For every k there exists an O(n3)-time algorithm which check if
the B-width of a graph G is at most k.
Proof. The algorithm computes a witness for an embedding (if it exists) by
dynamic programming on the biconnected-component decomposition tree. By
Lemma 5 it is suﬃcient to prove that the set of feasible labelings of each repre-
sentative Ri can be computed in constant time. There are at most 2k possible
labels. Thus there are O(22
k
) subsets of labels that may be assigned to the dif-
ferent equivalence classes of Ri. By Lemma 4, Ri has O(2k) vertices. Thus there
are O(22
2k
) feasible extensions Q for a representative Ri. For each, the algorithm
checks if the input labeling satisﬁes Lemma 5. unionsq
Block-Graph Width 157
7 Concluding Remarks
The recognition problem of probe interval graphs was introduced by Zhang et al.
[8,14]. This problem stems from the physical mapping of chromosomal DNA of hu-
mans and other species. Since then probe graphs of many other graph classes have
been investigated by various authors. In this paper we generalized the problem
to the width-parameter of graph classes. Sofar we restricted to classes of graphs
that have bounded rankwidth. For classes such as threshold graphs and cographs
we were able to show that the width parameter is ﬁxed-parameter tractable. One
class for which this is still open is the class of distance-hereditary graphs.
Acknowledgement
Ton Kloks is currently a guest of the Department of Computer Science and Infor-
mation Engineering of National Chung Cheng University. He gratefully acknowl-
edges the funding for this research by the National Science Council of Taiwan.
References
1. Brandsta¨dt, A., Le, V.B., Spinrad, J.P.: Graph classes: A survey. In: SIAM Mono-
graphs on Discrete Mathematics and Applications, Philadelphia (1999)
2. Chang, M.-S., Hsieh, S.-Y., Chen, G.-H.: Dynamic programming on distance-
hereditary graphs. In: Leong, H.-V., Jain, S., Imai, H. (eds.) ISAAC 1997. LNCS,
vol. 1350, pp. 344–353. Springer, Heidelberg (1997)
3. Courcelle, B., Oum, S.: Vertex minors, monadic second-order logic, and a conjecture
by Seese. Journal of Combinatorial Theory, Series B 97, 91–126 (2007)
4. Golumbic, M.C., Kaplan, H., Shamir, R.: Graph sandwich problems. Journal of
Algorithms 19, 449–473 (1995)
5. Higman, G.: Ordering by divisibility in abstract algebras. Proceedings of the Lon-
don Mathematical Society 2, 326–336 (1952)
6. Hlineˇny´, P., Oum, S., Seese, D., Gottlob, G.: Width parameters beyond tree-width
and their applications. Computer Journal 51, 326–362 (2008)
7. Kay, D.C., Chartrand, G.: A characterization of certain ptolemaic graphs. Cana-
dian Journal of Mathematics 17, 342–346 (1965)
8. McMorris, F.R., Wang, C., Zhang, P.: On probe interval graphs. Discrete Applied
Mathematics 88, 315–324 (1998)
9. Orlin, J.: Contentment in graph theory: covering graphs with cliques. Indagationes
Mathematicae 39, 406–424 (1977)
10. Oum, S.: Rank–width and vertex–minors. Journal of Combinatorial Theory, Series
B 95, 79–100 (2005)
11. Oum, S.: Graphs of bounded rank-width. PhD Thesis. Princeton University, Prince-
ton (2005)
12. Petkovsˇek, M.: Letter graphs and well-quasi-order by induced subgraphs. Discrete
Mathematics 244, 375–388 (2002)
13. Tarjan, R.: Depth-first search and linear graph algorithms. SIAM Journal of Com-
puting 1, 146–160 (1972)
14. Zhang, P., Schon, E.A., Fischer, S.G., Cayanis, E., Weiss, J., Kistler, S., Bourne,
P.E.: An algorithm based on graph theory for the assembly of contigs in physical
mapping of DNA. CABIOS 10, 309–317 (1994)
302 L.-J. Hung, T. Kloks, and C.M. Lee
Trivially-perfect graphs were ﬁrst studied by Wolk [13]. However, Golumbic
gave the class its name [4].
Definition 2 ([4]). A graph is trivially perfect if for each induced subgraph the
independence number is equal to the number of maximal cliques.
We use Wolk’s characterization of the class.
Theorem 1 ([13]). A graph is trivially perfect if and only if every connected
induced subgraph has a universal vertex.1
We denote the class of trivially-perfect graphs by TP. The class can also be
characterized by excluding the C4 and P4 as induced subgraphs; thus the class
of trivially-perfect graphs is exactly the class of chordal cographs . In this paper
we study the TP-width of graphs.
It follows from Theorem 1 that a connected graph G = (V,E) is trivially
perfect if and only if there exists a rooted tree T , with node-set V such that two
vertices x and y are adjacent in G if and only if one lies on the path from the
root to the other. Thus the set of vertices of any path from the root to a leaf in
T induces a maximal clique in G, and these are all the maximal cliques in G.
It can be seen that the class of partitioned k-probe trivially-perfect graphs can
be characterized by a ﬁnite set of forbidden induced, partitioned subgraphs, see,
e.g., [6,11,12]. We think that a similar statement holds also for the unpartitioned
case, but we have no proof of this yet.
In the following, we write some of our notational customs. For two sets A and
B we write A+B and A−B instead of A ∪B and A \B. We write A ⊆ B if A
is a subset of B with possible equality and we write A ⊂ B if A is a subset of B
and A = B. For a set A and an element x we write A+x instead of A+{x} and
A− x instead of A−{x}. It will be clear from the context when x is an element
instead of a set.
A graph G is a pair G = (V,E) where V is a finite set, of which the elements
are called the vertices of G, and where E is a set of two-element subsets of V , of
which the elements are called the edges of G. We denote edges of a graph as (x, y)
and we call x and y the endvertices of the edge. For a vertex x we write N(x) for
its set of neighbors and we write N [x] = N(x)+x for the closed neighborhood of
x. For a subset W ⊆ V we write N(W ) = ⋃x∈W N(x)−W for its neighborhood
and we write N [W ] = N(W ) + W for its closed neighborhood. Usually we use
n = |V | to denote the number of vertices of G and we use m = |E| to denote
the number of edges of G.
For a graph G = (V,E) and a subset S ⊆ V of vertices we write G[S] for
the subgraph induced by S, that is, the graph with S as its set of vertices and
with those edges of E that have both endvertices in S. For a subset W ⊆ V we
write G−W for the graph G[V −W ]. For a vertex x we write G−x rather than
G− {x}. We usually denote graph classes by calligraphic capitals.
1 A vertex is universal if it is adjacent to all other vertices.
304 L.-J. Hung, T. Kloks, and C.M. Lee
a component of G. We show that G[C] can be embedded into a trivially perfect
graph. Let ω be a probe universal vertex in G[C]. By induction we may assume
that G[C] − ω with the induced witness has a trivially-perfect embedding H ′.
We obtain an embedding H of G[C] by adding ω as a universal vertex to H ′. unionsq
Definition 4 ([10]). A rank-decomposition of a graph G = (V,E) is a pair
(T, τ) where T is a ternary tree and τ a bijection from the leaves of T to the
vertices of G. Let e be an edge in T and consider the two sets A and B of leaves
of the two subtrees of T − e. Let Me be the submatrix of the adjacency matrix
of G with rows indexed by the vertices of A and columns indexed by the vertices
of B. The width of e is the rank over GF (2) of Me. The width of (T, τ) is the
maximum width over all edges e in T and the rankwidth of G is the minimum
width over all rank-decompositions of G.
The class of graphs with rankwidth at most 1 is exactly the class of distance-
hereditary graphs [2,5,10]. Note that every trivially-perfect graph is distance
hereditary [1], since every induced path has length 1 or 2 by Theorem 1.
Theorem 3. k-Probe trivially-perfect graphs have rankwidth at most 2k.
Proof. Consider a rank-decomposition (T, τ) with width 1 for an embedding H
of a k-probe trivially-perfect graph G. Consider an edge e in T and assume that
Me is an all 1s-matrix. Each independent set Ni creates a 0-submatrix in Me. If
k = 1 this proves that the rankwidth of G is at most 2. In general, for k ≥ 0,
note that there are at most 2k diﬀerent neighborhoods from one leaf-set of T − e
to the other. It follows that the rank of Me is at most 2k. unionsq
Theorem 4. For each k ≥ 0 there exists an O(n3) algorithm which checks
whether a graph G with n vertices is a k-probe trivially-perfect graph; that is,
TP-width is in FPT .
Proof. By Theorem 3 k-probe trivially-perfect graphs have bounded rankwidth.
It is well-known that C2MS-problems can be solved in O(n3) time for graphs
of bounded rankwidth (see [3], and follow pointers from there). By Theorem 2,
the recognition of k-probe trivially-perfect graphs is such a problem. unionsq
3 Partitioned k-Probe Trivially-Perfect Graphs
Obviously, the result of the previous section holds as well when the collection of
independent sets N1, . . . ,Nk is a part of the input. Thus for each k there is an
O(n3) algorithm that checks whether a graph G with a witness of k independent
sets Ni, can be embedded into a trivially-perfect graph. However, there are a few
drawbacks to this solution. First of all, Theorem 4 only shows the existence of
an O(n3) recognition algorithm. In any case, a priori , it is unclear how to obtain
the algorithm explicitly. Furthermore, the constants involved in the algorithm
make the solution impractical. Already there is an exponential blow-up when
one moves from TP-width to rankwidth.
306 L.-J. Hung, T. Kloks, and C.M. Lee
into a trivially-perfect graph with x and y not adjacent. Then each vertex of
C is adjacent to ω. Thus each vertex of C must be in one of the independent
sets Ns, s = 1, . . . , k, and no two are in the same independent set since C is a
clique. Then k ≥ n2 which is a contradiction, since making a clique of G creates
a trivially-perfect embedding, and this needs at most
(
n
2
)−m independent sets.
Thus the only feasible embedding makes a clique of G. That is, the TP-width of
G′ is the same as the T-width of G, and by Theorem 6 this is hard to compute.
unionsq
5 A Fixed-Parameter Algorithm to Compute TP-Width
In this section we show that there exists for each k an O(n3) algorithm which
checks if a graph G is a k-probe trivially-perfect graph.
Let (G,N ) be a partitioned graph with a witness
N = {Ni | i = 1, . . . , k}
of k independent sets. We call the vertices of the independent sets nonprobes
and we call the vertices which are not in any independent set probes . The k-label
α(x) of a vertex x is the 0/1-vector of length k with the ith entry αi(x) equal to
1 if and only if x ∈ Ni. We write α(x) ≤ α(y) if αi(x) ≤ αi(y) for all i = 1, . . . , k.
We write α(x) ⊥ α(y) if there is no i with αi(x) = αi(y) = 1.
We use (G,α) to denote a labeled graph. If X is a subset of vertices then we
write α(X) for the restriction of the labeling α to the vertices of X . For a labeled
subset X we write (X,α), instead of (G[X ], α) and instead of (G[X ], α(X)).
Consider the equivalence relation ≡ deﬁned by x ≡ y if N(x) = N(y). Denote
the equivalence class of a vertex x by (x). Deﬁne the partial order  by:
(x)  (y) if N(x) ⊆ N(y)
Likewise, we consider the equivalence relation ≡′ deﬁned by x ≡′ y if N [x] =
N [y]. The equivalence class of a vertex x under this relation is denoted by [x].
We consider the partial order deﬁned by:
[x]  [y] if N [x] ⊆ N [y]
Lemma 1. A graph G is trivially perfect if and only if for every pair of adjacent
vertices x and y, either [x]  [y] or [y]  [x].
Proof. Note that a graph G has two adjacent vertices with incomparable closed
neighborhoods, if and only if G contains an induced P4 or C4. unionsq
Definition 5 ([7]). A module M in a graph G = (V,E) is a set of vertices such
that for every vertex y ∈ M either
1. N(y) ∩M = ∅, or
2. M ⊆ N(y).
308 L.-J. Hung, T. Kloks, and C.M. Lee
(X + Y, α). There exists a vertex x ∈ X such that α(x) = α(y), which implies
that z is also adjacent to x in G.
Consider a cotree of H −Y such that X forms a subtree. Add H [Y ] to H−Y
as a twin-branch of H [X ] and let H ′ be the graph that results. We prove that we
can add edges between Y and NH(X)− Y , such that X + Y becomes a module
in H ′.
Let z ∈ (X + Y ). If z is not adjacent to any vertex of X in H then z is also
not adjacent to any vertex in Y . Assume z is adjacent to X in H . Let y ∈ Y ,
and assume that z is not adjacent to y in G. We prove that αi(z) = αi(y) = 1
for some entry i. There exists a vertex x ∈ X such that α(x) = α(y). If z is not
adjacent to x in G, αi(y) = αi(x) = αi(z) = 1 for some entry i. Assume z is
adjacent to x in G. Then α(z) ⊥ α(x) in any z-extension of (X + Y, α). Since
(X + Y, α) is a probe module and α(x) = α(y) ⊥ α(z), z is adjacent to y, which
is a contradiction. unionsq
Definition 10. A true – or false twinset is a set of vertices such that every pair
is a true – or false twin, respectively.2 A k-twinset is either a false twinset with
at least 3 vertices or a true twinset with at least k + 2 vertices.
Lemma 3 (The Twinset Lemma). Let S be k-twinset. Then G has TP-width
at most k if and only if G− x has TP-width at most k for any x ∈ S.
Proof. Assume that G has a false twinset {x, y, z}. Assume that G − x has an
embedding H . If one of y and z is a nonprobe in H , then we can make a copy
for x as a true twin. Note that creating a true twin does not introduce a P4 or
C4 so the new embedding is also trivially perfect. Now assume that both y and
z are probes. Then their neighborhood in H must induce a clique. We may now
add x as a false twin of y and z in H . Note that also in this case no P4 or C4 is
introduced.
Assume that G has a true twinset S with k + 2 vertices. Let x ∈ S and let
H be an embedding of G − x. Since S − x is a clique there exists an ordering
of the vertices of S − x such that for every pair a, b ∈ S − x, NH [a] ⊆ NH [b] or
NH [b] ⊆ NH [a]. Let y be the smallest vertex in this ordering. If y has a neighbor
in H which is not a neighbor in G, then this is a new neighbor of all the vertices
in S − x. This is a contradiction, since S − x is a clique with k + 1 vertices, and
creating a common neighbor for S− x would require k +1 independent sets. unionsq
Definition 11. A k-witness N is well-linked if for every Ni ∈ N , every vertex
x ∈ Ni has a neighbor in Ni.
Lemma 4. Every k-probe trivially-perfect graph has a witness with k indepen-
dent sets which is well-linked.
Proof. Starting with any witness, repeatedly add a vertex x to an independent
set Ni if it has no neighbor in that set. unionsq
2 A true twin is a pair of vertices x and y with N [x] = N [y]. A false twin is a pair of
vertices x and y with N(x) = N(y).
310 L.-J. Hung, T. Kloks, and C.M. Lee
Proof. Start with Ω = ∅. Repeatedly compute the set of X-minimal vertices in
G, add them to Ω, and delete them from the graph. After at most 2k repetitions,
each label-set of M0 is contained in Ω. Since each set of maximal elements has
at most 2k+1 + k − 1 vertices,
|Ω| ≤ 2k(2k+1 + k − 1) ≤ 22k+1 + 22k ≤ 22(k+1) unionsq
Definition 13. A pattern is a cotree of a k-labeled trivially perfect graph
such that for every internal node the characteristics of the two subtrees are
incomparable.
Remark 5. Consider a cotree of an embedding of a labeled graph (G,α). By
Lemma 2, we may repeatedly prune branches for which the characteristic is
contained in the characteristic of the other branch. The result is a pattern.
Lemma 8. There are O(2(k+3)2
2k
) non-isomorphic patterns.
Proof. The characteristic of every internal node is the union of the characteristics
of its children. This union is larger than the two constituent sets since those are
incomparable. A binary tree with depth at most 2k has at most 22
k − 1 internal
nodes. The number of binary trees with t internal nodes can be bounded by the
Catalan number Ct =
(
2t
t
)
1
t+1 . Thus the number of cotrees with t + 1 leaves is
bounded by 2tCt ∼ 23tt3/2√π . There are at most 2k(t+1) labelings for the leaves.
Thus the number of patterns is bounded by c2kc 2
3c
c3/2
√
π
, where c = 22
k
. unionsq
Remark 6. Similar to Lemma 6 it can be shown that the number of feasible,
incomparable induced patterns of branches incident with an internal node of
the cotree is bounded by a constant. Actually, this proves a well-quasi-ordering,
which implies a ﬁnite set of forbidden induced subgraphs for TP-width ≤ k. We
elaborate on this in the full version of this paper.
Theorem 8. For each k, there exists an O(n3)-time algorithm for the recogni-
tion of k-probe trivially-perfect graphs.
Proof. Consider a partition (M0,M1, . . . ,Ms) of the vertices into probe mod-
ules. Initially, each module consists of a single vertex. For each probe module
we keep the possible embeddings, either as a clique-module or as a branch, as
a list of patterns. The algorithm tries to merge modules into new modules. By
Lemma 7 there are only a constant number of possible extensions for each mod-
ule. Assume that a probe module (X,α) unions with some other probe modules.
If there is a module (Y, β) with χ(Y ) ⊆ χ(X) then (Y, β) merges together with
(X,α) for those labelings. There are at most 2k module extensions in which the
characteristic enlarges. A suitable merge of two probe modules can be found in
O(n2) time. unionsq
KRUSKALIAN GRAPHS
k-Cographs
Ling-Ju Hung Ton Kloks
Department of Computer Science and Information Engineering
National Chung Cheng University, Min-Hsiung, Chia-Yi 62102, Taiwan
Email: hunglc@cs.ccu.edu.tw
Abstract
A class of graphs is Kruskalian if Kruskal’s theorem
on a well-quasi-ordering of finite trees provides a fi-
nite characterization in terms of forbidden induced
subgraphs.
Let k be a natural number. A graph is a k-cograph
if its vertices can be colored with colors from the
set {1, . . . ,k} such that for every nontrivial subset
of vertices W there exists a partition {W1,W2} into
nonempty subsets such that either no vertex of W1
is adjacent to a vertex of W2 or, such that there ex-
ists a permutation pi ∈ Sk such that vertices with
color i in W1 are adjacent exactly to the vertices with
color pi(i) in W2, for all i ∈ {1, . . . ,k}. We prove that
k-cographs are Kruskalian. We show that k-cographs
have bounded rankwidth and that they can be recog-
nized in O(n3) time.
1 Introduction
Progress on tree-decompositions of graphs, such as
rank– and cliquewidth-decompositions, makes it a
point of interest to investigate classes of graphs for
which the cutmatrices in the decomposition take on
a certain shape. It would be nice if one could tell by
the shape of the cutmatrices whether a class of graphs
has a finite characterization in terms of forbidden in-
duced subgraphs.
To make matters clear, we need a few definitions.
Definition 1. A tree-decomposition of a graph G is a
pair (T , f) where T is a ternary tree and where f is a
bijection from the leaves of T to the vertices of G.
Definition 2. Let (T , f) be a tree-decomposition of a
graph G = (V,E). Let e be a line in T and consider the
two sets A and B of leaves of the two subtrees of T − e.
The cutmatrix Me is the submatrix of the adjacency
matrix of G with rows indexed by the vertices of A and
columns indexed by the vertices of B.
Definition 3. (Oum 2005) A graph has rankwidth k
if it has a tree-decomposition such that every cutmatrix
has binary rank at most k.
Ton Kloks is supported by the National Science Council of Taiwan
under grants NSC 97–2811–E–194–001 and NSC 98–2218–E–194–
004.
Copyright c©2010, Australian Computer Society, Inc. This paper
appeared at the 16th Computing: the Australasian Theory Sym-
posium (CATS), Brisbane, Australia. Conferences in Research and
Practice in Information Technology (CRPIT), Vol. 109, A. Potanin
and A. Viglas, Ed. Reproduction for academic, not-for profit pur-
poses permitted provided this text is included.
Definition 4. Consider a 0, 1-matrixM. LetM′ be the
maximal submatrix of M with no two rows equal and
no two columns equal. The shape of M is a class of
matrices equivalent to M′ under permuting rows, per-
muting columns, and taking the transpose.
A graph is a cograph if it has no induced P4, that
is, a path with 4 vertices. It follows from a character-
ization by Corneil et al. that a graph is a cograph
if and only if it has a tree-decomposition such ev-
ery cutmatrix is shape-equivalent to a submatrix of(
1 0
)
(Corneil et al. 1981).
Another example of a class of graphs that is char-
acterized by shapes of cutmatrices is the class of
distance-hereditary graphs, i.e., the class of graphs
with rankwidth at most one (Howorka 1977, Oum
2005). Distance-hereditary graphs are those graphs
that have a tree-decomposition such that every cut-
matrix has a shape equivalent to a submatrix of(
1 0
0 0
)
(Chang et al. 1997). An obvious consequence
is that the complements of the distance-hereditary
graphs have a tree-decomposition with every cutma-
trix equivalent to
(
1 1
1 0
)
.
A third example is the class of graphs that have
a tree-decomposition such that every cutmatrix is
equivalent to a submatrix of
(
1 0
0 1
)
. This turns out
to be the class of graphs without C5, bull, gem, or
co-gem (Chandler et al. 2009, Hung & Kloks 2009).
r r
r rr @ r r
r
r r@@ 
 
 
  r rr r
r r
r r r
r r
b
b
b
B
B
B
B




"
"
"
 
  @
@ r rr
r r
@
@
 
 
Figure 1: A house, a hole, a domino, a gem, and a
bull. A graph is distance hereditary if it has no in-
duced house hole, domino or gem. The co-gem is the
complement of the gem; that is the union of a P4 with
a single vertex.
A basic difference between the classes of cographs
and distance-hereditary graphs is that the set of for-
bidden induced subgraphs is finite for the class of
cographs while it is infinite for the class of distance-
hereditary graphs. We note that distance-hereditary
graphs have a finite characterization in terms of
vertex-minors (Oum 2005).
Proc. 16th Computing: The Australasian Theory Symposium (CATS 2010), Brisbane, Australia
49
and the permutation σ at p makes vertices with color
i in the left subtree adjacent to the vertices with color
σ(i) in the right subtree. This shows that the graph is
a k-cograph. 
Lemma 3. Let G = (V,E) be a k-cotree and let (T , f)
be a k-cotree representation of G. Consider the tree-
decomposition (T ′, f) obtained from (T , f) by removing
the root and by making the two children of the root
adjacent in T ′. Then every cutmatrix of (T ′, f) is shape-
equivalent to a submatrix of
(
Ik 0
)
, where Ik is the
k× k identity matrix.
Proof. Let p be a child of the root r of T . Let e be the
line in T that connects p to r. If r is labeled as a union
node, then the cutmatrix of e is a zero matrix. Other-
wise, assume that r is labeled with a permutation σ.
Then the cutmatrix at e is equivalent to a submatrix of
the permutation matrix that matches vertices of color
i in the subtree at p to vertices with color σ(i) in the
other subtree. Note that some color classes may be
empty.
Now consider an arbitrary node q, not equal to r, and
let q1 and q2 be two children of q in T . Let Q be the
set of vertices of Gmapped to leaves in the subtree of
q. LetQ1 ⊂ Q be the set of leaves in the subtree at q1.
We consider the cutmatrix of the line e′ that connects
q1 with q, with rows indexed by the vertices of Q1.
Let e be the line that connects qwith its parent. By in-
duction, we may assume that vertices of Q that have
the same color, have the same neighbors in the rest of
the graph and that vertices of Q that have different
colors have no common neighbors in the rest of the
graph. Consider a subset of vertices of Q1 with the
same color. They have the same neighbors in V −Q.
By definition of a k-cotree they have the same neigh-
bors in Q2 and thus they have the same neighbors in
V − Q1. Furthermore, vertices in Q1 with different
colors have no common neighbor in V −Q and they
have also no common neighbor in Q2.
Summarizing, vertices ofQ1 with the same color have
the same neighbors in V − Q1 and vertices of Q1
with different colors have no common neighbors in
V − Q1. Since there are only k colors, this shows
that the shape of the cutmatrix at e′ is equivalent to
a submatrix of
(
Ik 0
)
. This proves the lemma. 
Lemma 4. k-Cographs have rankwidth at most k.
Proof. By definition, a graph has rankwidth k if it
has a tree-decomposition such that every cutmatrix
has binary rank at most k. By Lemma 3, k-cographs
have such a tree-decomposition. 
Theorem 1. For every natural number k, there exists
an O(n3) algorithm that recognizes k-cographs.
Proof. The definition of a k-cograph can be ex-
pressed in monadic second-order logic. Since the
graphs have bounded rankwidth this proves the
claim (Oum 2005). 
In a recent paper we introduced the concept of
simple-width (Hung & Kloks 2009). A graph has
simple-width k if it has a tree-decomposition such
that every cutmatrix is shape-equivalent to some ma-
trix with at most k rows and at most k columns. It is
easy to see that
r(G) 6 s(G) 6 2r(G),
where r(G) is the rankwidth of G and s(G) is the
simple-width of G. The benefit of simple-width lies
in the fact that characterizations of graph classes, de-
fined in terms of permitted shapes of cutmatrices, are
easier to obtain. In the mentioned paper we char-
acterize graphs with simple-width 2. Note that no
characterization is known of graphs with rankwidth
at most two.
3 Forbidden induced subgraphs
In this section we show that for every natural number
k, k-cographs can be characterized by a finite set of
forbidden induced subgraphs.
Let’s call a k-cograph partitioned if it comes
equipped with a (good) k-coloring of the vertices.
Theorem 2. Let k be a natural number. Partitioned
k-probe cographs are well-quasi-ordered by the induced
subgraph relation.
Proof. A cotree is a binary tree with a bijection from
the leaves to the vertices of the graph and internal
nodes labeled as join- or union-operators (Corneil
et al. 1981). Two vertices are adjacent in the graph
if and only if their lowest common ancestor is a
join-node. Kruskal’s theorem (Kruskal 1960, Hig-
man 1952) states that trees, with points labeled by
a well-quasi-ordering, are well-quasi-ordered with
respect to their lowest common ancestor embed-
ding. Pouzet observed that this implies that cographs
are well-quasi-ordered by the induced subgraph re-
lation (Pouzet 1985) (see also (Damaschke 1990,
Thomasse´ 2000)). For partitioned k-cographs we
equip each leaf with a label that is a color from
{1, . . . ,k}. Each internal node receives a label which
is either a union label or a permutation of the colors.
Two vertices are adjacent if their lowest common an-
cestor is a permutation-node and if their colors are
matched by the permutation at that node. Kruskal’s
theorem implies the claim. 
It is interesting to notice that Theorem 2 implies
that k-cographs do not have long induced paths. This
implication can be deduced as follows. Let [P1,P2, . . .]
be an infinite sequence of k-colored paths of increas-
ing length and assume that they are all partitioned
k-cographs. Construct graphs P′i by creating a false
twin with the same color of each of the two endpoints
of Pi. Then each P′i is also a partitioned k-colored co-
graph since this class of graphs is closed under creat-
ing false twins. The sequence [P′1,P
′
2, . . .] is an infinite
sequence and P′i is not an induced subgraph of P
′
j as
long as i 6= j. This contradicts Theorem 2.
Theorem 3. Let k be a natural number. The class of
partitioned k-cographs can be characterized by a finite
set of forbidden induced, colored subgraphs.
Proof. Consider a sequence [G1,G2, . . .] of k-colored
graphs which are not partitioned k-cographs. As-
sume that for each vertex x in Gi = (Vi,Ei) the
subgraph induced by Vi − x is an induced k-cograph
(i = 1, 2, . . .). Assume also that each Gi is equipped
with a ‘root’ ri which is a vertex of Gi and assume
that all roots r1, r2, . . . have the same color.
For i = 1, 2, . . ., consider k-cotrees of Gi − ri as in
Theorem 2. Extend the labels at the leaves with an
additional label-entry 0 or 1 that indicates whether
the vertex, that is mapped to the leaf, is adjacent to
ri or not. Consider the well-quasi-ordering of these
labeled trees by the lowest-common-ancestor order-
ing. Kruskal’s theorem implies that there must exist
i < j such that Gi is an induced subgraph of Gj. This
proves the theorem. 
We close this section with a similar proof for the
unpartitioned case.
Proc. 16th Computing: The Australasian Theory Symposium (CATS 2010), Brisbane, Australia
51
by structure-twins. Consider the graph G induced by
the vertices in the two points and the vertices that do
not appear in the leaves of T1 and T2 nor in the lists
of vertices that are ‘covered’ (see below).
a. If T1 and T2 are twins, and if T1 has two colors
and T2 only one, then we say that T1 ‘covers’ T2.
For each subtree the algorithm maintains a list of
vertices that are covered by it. In this case the
set of leaves of T2 is added to the list of vertices
covered by T1. In this case no subtree is deleted
from the list.
b. If both points that represent T1 and T2 are single
vertices that are twins in G then delete one of the
two subtrees from the list. Make a union of the list
of leaves.
c. If two subtrees are structure-twins such that both
have pairs of vertices with different colors, then
delete one of them from the list. Make a union of
the list of leaves and of the list of vertices that are
covered.
Note that a 2-cotree is a subtree Ti such that every
vertex of G appears as a leaf of Ti, or is covered by Ti.
To prove the correctness one may observe that, in the
first case there exists a 2-cotree, with T1 and T2 as
subtrees, if and only if there exists a 2-cotree that
contains T1 as a subtree. In the second and third case,
one easily observes that there exists a 2-cotree that
contains T1 and T2, if and only if there exists a 2-
cotree that contains one of them as a subtree.
There are O(n2) basic building blocks, and since a
2-cotree has O(n) nodes, the algorithm builds a 2-
cotree in O(n3) steps or decides that no such tree
can exist because there are no more possible merg-
ers. The update of the list of vertices that are covered
by a subtree takesO(n) time in each step. This proves
the theorem. 
5 Concluding remark
Chang et al. show that distance-hereditary graphs
can be regarded as tree-decompositions where sub-
trees are equipped with a ‘twinset.’ The adjacencies
between subtrees are joins or unions of the twin-
sets (Chang et al. 1997). The twinsets are cographs.
As mentioned at the start of this report, cographs
have tree-decompositions with cutmatrices equiva-
lent to submatrices of
(
1 0
)
and distance-hereditary
graphs have tree-decompositions with cutmatrices
equivalent to submatrices of
(
1 0
0 0
)
.
Consider the class of graphs that have a tree-
decomposition such that every cutmatrix has a shape
equivalent with some submatrix of(
1 0 0
0 1 0
0 0 0
)
.
These graphs could be defined as graphs built from
subtrees that are equipped with a ‘2-twinset.’ These
2-twinsets are induced 2-cographs.
Finally, to characterize the graphs with rankwidth
at most 2, one needs to consider tree-decompositions
where cutmatrices have shapes equivalent to a sub-
matrix of (
1 1 0
1 0 0
0 0 0
)
.
This class contains the ‘probe distance-hereditary
graphs.’ A graph is probe-distance hereditary if it is
a distance-hereditary graph minus the edge-set of an
arbitrary induced subgraph (Chandler et al. 2009).
References
Brandsta¨dt, A., V. B. Le, and J. P. Spinrad (1999),
Graph classes: A survey, SIAM Monographs on Dis-
crete Mathematics and Applications, Philadelphia.
Cameron P. J. (1994 ), Two-graphs and trees. Discrete
Mathematics 127, pp. 63–74.
Chandler D. B., M.-S. Chang, T. Kloks, and S.-L. Peng
(2009), Probe graphs. Manuscript; on-line version
available:
http://www.cs.ccu.edu.tw/˜hunglc/ProbeGraphs.pdf
Chang, M.-S., S.-Y. Hsieh, and G.-H. Chen (1997),
Dynamic programming on distance-hereditary
graphs, Proceedings of the 8th International Sympo-
sium on Algorithms and Computations, LNCS 1350,
pp. 344–353.
Corneil, D. G., H. Lerchs, and L. S. Burlingham
(1981), Complement reducible graphs, Discrete Ap-
plied Mathematics 3, pp. 163–174.
Damaschke, P. (1990), Induced subgraphs and
well-quasi-ordering, Journal of Graph Theory 14,
pp. 426–435.
Gallai, T. (1967), Transitiv orientierbare Graphen,
Acta Math. Acad. Sci. Hungar. 18, pp. 25–66.
Higman, G. (1952), Ordering by divisibility in ab-
stract algebras, Proc. London Math. Soc. 2, pp. 326–
226.
Howorka, E. (1977), A characterization of distance-
hereditary graphs, Quarterly Journal of Mathemat-
ics 28, pp. 417–420.
Hung, L.-J. and T. Kloks (2009), On some simple
widths. To appear in Proceedings of WALCOM 2010.
Kruskal, J. (1960), Well-quasi-ordering, the tree theo-
rem, and Vazsonyi’s conjecture, Transactions of the
American Mathematical Society 95, pp. 210–225.
Oum, S. (2005), Graphs of bounded rank-width, PhD
Thesis, Princeton University.
Pouzet, M. (1985), Applications of well-quasi-
ordering and better-quasi-ordering. In Graphs and
Orders (I. Rival ed.), D. Reidel Publishing Company
(1985), pp. 503–519.
Thomasse´, S. (2000), On better-quasi-ordering
countable series-parallel orders, Transactions of the
American Mathematical Society 352, pp. 2491–
2505.
Proc. 16th Computing: The Australasian Theory Symposium (CATS 2010), Brisbane, Australia
53
On Some Simple Widths 205
Theorem 2. A graph G = (V,E) is a k-probe cograph if and only if there exist
independent sets Ni, i = 1, . . . , k, such that for every W ⊆ V with |W | ≥ 2 there
exists a partition {W1,W2} with Wi = ∅ (i = 1, 2), such that either
i. for every x ∈ W1 and y ∈ W2 either (x, y) ∈ E(G) or x, y ∈ Ni for some
i ∈ {1, . . . , k}, or
ii. no x ∈ W1 is adjacent to any y ∈ W2.
Proof. Assume that G is a k-probe cograph. If G has at most 3 vertices then,
by deﬁnition, G is a cograph and thus also a k-probe cograph for any k ≥ 0. We
prove the claim by induction on the number of vertices. By deﬁnition there exist
independent sets Ni, i = 1, . . . , k and an embedding H ∈ C such that, for every
edge e = (x, y) ∈ E(H) which is not an edge in G there exists an i ∈ {1, . . . , k}
with {x, y} ⊆ Ni.
Let W ⊆ V with |W | ≥ 2. There exists a partition {W1,W2} of W , with
Wi = ∅, such that either (a) or (b) in Theorem 1 holds for the graph H . It
follows that either i. or ii. holds for G with that same partition of W .
For the converse, let W ⊆ V with |W | ≥ 2. If i. holds, then we may add all
edges between W1 and W2. Also, ii. implies (b) in Theorem 1. By induction,
there exist embeddings of G[W1] and G[W2] into cographs, which implies by
Theorem 1 that G[W ], and thus also G can be embedded. Thus G is a k-probe
cograph. unionsq
Theorem 2 is a characterization which can be formulated in monadic second-
order logic. We now prove that k-probe cographs have rankwidth at most 2k. It
is known that problems which can be formulated in C2MS-logic can be solved
in O(n3) time on graphs with bounded rankwidth [6]. Thus k-probe cographs
can be recognized in O(n3) time. Alternatively, we can draw the same conclusion
from Theorem 6. An explicit description of a recognition algorithm is described
in [7].
Theorem 3. k-Probe cographs have rankwidth at most 2k.
Proof. Consider a rank-decomposition (T, τ) with width 1 for an embedding H
of G. Consider an edge e in T and assume that Me, minus the zero rows and
columns is an all 1s-matrix. Each independent set Ni ‘creates’ a 0-submatrix
in Me. Note that there are at most 2k diﬀerent neighborhoods from the set of
leaves in one component of T − e to the set of leaves in the other component
of T − e. It follows that the rank of Me is at most 2k. unionsq
2 Partitioned k-Probe Cographs
Cographs are called ‘complement-reducible graphs.’ In the same vein, we show
that partitioned probe cographs are ‘dual reducible.’
Let (G,N ) be a partitioned graph with a witness
N = {Ni | i = 1, . . . , k}
of k, possibly overlapping, independent sets.
On Some Simple Widths 207
the vertex that is mapped to the leaf is adjacent to ri or not. Consider the well-
quasi-ordering of these labeled trees by the lowest-common-ancestor ordering.
Kruskal’s theorem implies that there must exist i < j such that Gi is an induced
subgraph of Gj . This proves the theorem. unionsq
Remark 2. Note that a similar proof shows that partitioned k-probe cographs
can be characterized by a ﬁnite set of forbidden induced partitioned subgraphs.
This extends the result of [8] for 1-probe cographs.
We introduce simple-width after the next intermezzo.
3 C-width Is NP-Complete
Let T be the class of complete graphs (cliques). We ﬁrst note that T -width is
NP-complete.
Theorem 7 ([5]). T -Width is NP-complete.
Theorem 8. C-width is NP-complete.
Proof. Let G = (V,E) be a graph with n vertices and m edges. Label the vertices
1, . . . , n. For each vertex i of G add a clique Ci with n2 vertices and make every
vertex of Ci adjacent to each vertex  with  ≤ i. Let G′ be the graph constructed
in this way. Note that, when we add edges between nonadjacent vertices of V we
obtain an embedding of G′ into a cograph; namely then every connected induced
subgraph has a universal vertex, and this property implies that. We show that
this is the only feasible embedding.
For each nonedge {i, j} with i < j in G we now have a collection of P4’s
using i, j, and the cliques Ci and Cj . Assume that there is an embedding of G′
into a cograph with i and j not adjacent. Then each vertex of Ci is adjacent
to each vertex of Cj or to j. Thus each vertex of Ci must be in one of the
independent sets Ns, s = 1, . . . , k, and no two are in the same since Ci is a
clique. Then k ≥ n2 which is a contradiction, because making a clique of G
creates a cograph embedding which demands at most
(
n
2
)−m independent sets.
Thus the only feasible embedding makes a clique of G. That is, the C-width of G′
is the same as the T -width of G, and by Theorem 7 this is hard to compute. unionsq
4 Simple-Width
Inspired by results of Oum et al. [6] on rankwidth of graphs, we introduce the
concept of simple-width.
We begin with the deﬁnition of a tree-decomposition of a graph.
Definition 4. A tree-decomposition of a graph G = (V,E) is a pair (T, f)
where T is a ternary tree and f a bijection from the leaves of T to the vertices
of G.
On Some Simple Widths 209
Basics
Definition 7. Consider a 0, 1-matrix M . Let M ′ be the maximal submatrix of
M with no two rows equal and no two columns equal. The shape of M is a
class of matrices equivalent to M ′ under permuting rows, permuting columns,
and taking the transpose.
One basic concept that will be useful throughout the rest of this paper is that
of a twin. A twin is a module with two vertices. A module is a set M of vertices
such that
x, y ∈ M ⇒ N(x) −M = N(y)−M.
Definition 8. A twin is a pair of vertices x and y such that {x, y} is a module.
The pair is a true twin if x and y are adjacent and a false twin otherwise.
Cographs can be characterized as those graphs for which every nontrivial induced
subgraph has a twin [11]. Tibor Gallai proved that a (ﬁnite) graph G is a cograph
if and only if G has a tree-decomposition (T, f) rooted at an edge, such that the
leaves of every subtree induce a module in G. Consider a subtree B rooted at
some edge e and consider the cutmatrix Me with rows indexed by the vertices
of B. Since the leaves of B induce a module, all the rows of Me are the same.
Thus Me has a shape equivalent to
(
1 0
)
or a submatrix thereof. This implies
the following:
Theorem 10. If G is a cograph then the simple-width of G is at most 2.
Apropos , a more precise characterization is the following.
Lemma 1. A graph G is a cograph if and only if G has a tree-decomposition
(T, f) such that every cutmatrix, or its transpose, can be reduced to
(
1 0
)
, or a
submatrix of that, by removing copies of the same row or column and by permut-
ing columns.
Proof. The direction ⇒ follows from Gallai’s characterization.
Assume G has a tree-decomposition (T, f) as stated. We show that every non-
trivial induced subgraph H has a twin. If H has only two or three vertices then
the claim is obvious: H is a cograph since it has no induced P4. Otherwise, notice
that a tree-decomposition for H can be obtained as follows. Remove branches
from T if the leaves are mapped to vertices which are not in H . This gives a tree
T ′ with possibly some internal vertices of degree 2; we could easily get rid of
those but we may as well leave them in T ′ since they harm nobody. Consider a
line e in T ′ such that both branches have at least 2 leaves; since H has at least 4
vertices, such a line exists. The cutmatrix M ′e is a submatrix of the correspond-
ing cutmatrix Me for G, since it is obtained from Me by the deletion of some
rows and columns. Thus M ′e or its transpose has a shape
(
1 0
)
or
(
0
)
or
(
1
)
.
In other words, at least one of the branches at e, say B induces a module. We
may assume, by induction on the number of vertices of H , that the leaves of B
induce a cograph, and because B contains at least 2 vertices, it contains a twin.
Since B is a module, this twin is a twin in H . unionsq
On Some Simple Widths 211
Proof. A simple case-analysis proves this. unionsq
Lemma 4. If H is an induced subgraph of G then
s(H) ≤ s(G).
Proof. If H is only a single vertex then there is nothing to prove. Otherwise,
consider a tree-decomposition (T, f) for G and take the minimal subtree T ′ that
spans all leaves mapped to vertices of H . Take the induced bijection f ′ from the
leaves of T ′ to the vertices of H . Some points of T ′ may have only two neighbors.
We may repeatedly delete a point like that and connect its two neighbors by a
line. For simplicity we call this new tree, which is homeomorphic to the old one,
again T ′. Any cutmatrix of (T ′, f ′) is a submatrix of a corresponding cutmatrix
of (T, f), thus the simple-width of H is no larger than the simple-width of G. unionsq
Lemma 5. Let G be nontrivial. Then s(G) = 1 if and only if G is a clique or
an independent set. ‘Creating a twin’ of a vertex x in a graph G is the operation
of adding a new vertex x′ and adding edges incident with x′ such that x′ becomes
a twin of x. Assume G is nontrivial, and not an independent set nor a clique
and let G′ be obtained from G by creating a twin, then
s(G′) = s(G) ≥ 2.
Proof. Since G is an induced subgraph of G′, s(G) ≤ s(G′).
If a graph G is not a clique and not an independent set then it has a vertex ω
which has some neighbors as well as some nonneighbors. Consider the leaf in a
tree-decomposition that is mapped to ω and let e be the line incident with this
leaf. This cutmatrix has one row (or one column) and some entries are zero and
some are one. Thus the simple-width of this cutmatrix is two. This proves that
s(G) ≥ 2.
Consider a tree-decomposition (T, f) of G. We may add x′ as a leaf in this de-
composition, by subdividing the edge from x to its neighbor in T , and making x′
adjacent to the subdivision vertex. The cutmatrix of any edge in T that is not
incident with x or with x′ is obtained from the corresponding matrix in (T, f)
by making a copy of the row (or column) that represents x. The cutmatrix of an
edge incident with x or with x′ contains only one row (or only one column), thus
the simple-width of this cutmatrix is at most two. This proves the claim. unionsq
Lemma 6. Assume that G is nontrivial and that s(G) ≤ 2. Assume furthermore
that G has no twin, no pendant vertex, and no isolated vertex. Then G has two
vertices x and y such that N [x] ∪N [y] = V and either
N(x) ∩N(y) = ∅ or N(y) ⊂ N [x].
Proof. Since G is nontrivial and has no twin, G is not a clique nor an independent
set. Thus we may assume that s(G) = 2. Also, G has at least 4 vertices, otherwise
it has a twin.
On Some Simple Widths 213
Remark 7. Note that a cograph has a coloring like that; just color all vertices
black. Also note that in a graph with a coloring like that, the black vertices, and
also the white vertices, induce a cograph.
Let us call graphs that have a 2-coloring as in Lemma 7 2-cographs.
Lemma 8. There exists an O(n3) algorithm to recognize 2-cographs.
Proof. The characterization can be formulated in monadic-second order logic.
The claim follows since 2-cographs have bounded rankwidth [6]. unionsq
Lemma 9. Assume G has a tree-decomposition (T, f) with simple-width 2. Let
x and y be two vertices mapped to leaves that have a common neighbor in T .
Assume the cutmatrix with rows x and y has a shape
(
1 0
0 1
)
. Color vertices of
N(x)−y black and color vertices of N(y)−x white. Then x and y can be colored
diﬀerently black and white, such that this coloring of G satisﬁes the property of
Lemma 7.
Proof. Consider (T, f) and root this at the common neighbor r of the leaves
mapped to x and y. Let e be the line that is incident with r but not with x or
y and let V1 and V2 be the two sets of leaves in the two subtrees rooted at the
other endpoint r′ of e.
Let e1 be the line incident with r′ and the root of V1. Consider the matrix Me1
with rows indexed by vertices of V1. Two of the columns are x and y. Thus they
partition the rows into black and white (possibly one set is empty). In any case,
x and y provide two diﬀerent columns and since s(G) ≤ 2 every other column,
corresponding to a vertex of V2, is equal to the column of x or to the column
of y. It follows that all black vertices of V1 have the same neighbors in V2 and
that all white vertices of V1 have the same neighbors in V2. By symmetry, the
same holds for the vertices of V2.
Consider the submatrix with rows V1 and columns V2. We consider two cases;
(a) either the black vertices of V1 are adjacent to the black vertices of V2 and
the white vertices of V1 are adjacent to the white vertices of V2, or
(b) the black vertices of V1 are adjacent to the white vertices of V2 and the white
vertices of V1 are adjacent to the the black vertices of V2.
In the ﬁrst case we color x black and y white and in the second case we color x
white and y black. Then in both cases any of the two partitions {V1+{x, y}, V2}
and {V1, V2 + {x, y}} is ‘good;’ that is, they satisfy the conditions of Lemma 7.
We prove that, with this coloring, every induced subgraph has a good partition.
Let W ⊆ V . If W has vertices in both V1 and V2, and possibly also in {x, y},
then we can take the partition induced by one of the two partitions above.
Assume W has no vertices in V2. If x and/or y is in W , then we can take one
part of the partition equal to W ∩ {x, y} = ∅. This is a good partition as long
as W − {x, y} = ∅.
Assume that W contains only vertices of V1. Take the root t of the minimal
subtree that spans all vertices of W . The two subtrees at t partition W into W1
On Some Simple Widths 215
References
1. Chandler, D.B., Chang, M.S., Kloks, T., Peng, S.L.: Probe graphs (manuscript,
2009), http://www.cs.ccu.edu.tw/~hunglc/ProbeGraphs.pdf
2. Gallai, T.: Transitiv orientierbare graphen. Acta Math. Acad. Sci. Hungar. 18,
25–66 (1967)
3. Corneil, D.G., Lerchs, L.H.: Stewart-Burlingham: Complement reducible graphs.
Discrete Applied Mathematics 3, 163–174 (1981)
4. Chang, M.S., Hung, L.J., Kloks, T., Peng, S.L.: Block-graph width. In: Chen, J.,
Cooper, S.B. (eds.) TAMC 2009. LNCS, vol. 5532, pp. 150–157. Springer, Heidel-
berg (2009)
5. Hung, L.J., Kloks, T., Lee, C.M.: Trivially-perfect width. In: Fiala, J., Kratochv´ıl,
J., Miller, M. (eds.) IWOCA 2009. LNCS, vol. 5874, pp. 301–311. Springer, Hei-
delberg (2009)
6. Oum, S.: Graphs of bounded rank-width. PhD thesis, Princeton University (2005)
7. Hung, L.J., Kloks, T.: On the cograph-width of graphs (manuscript, 2009)
8. Le, V.B., de Ridder, H.N.: Characterizations and linear-time recognition of probe
cographs. In: Brandsta¨dt, A., Kratsch, D., Mu¨ller, H. (eds.) WG 2007. LNCS,
vol. 4769, pp. 226–237. Springer, Heidelberg (2007)
9. Kruskal, J.: Well-quasi-ordering, the tree theorem, and Vazsonyi’s conjecture.
Transactions of the American Mathematical Society 95, 210–225 (1960)
10. Thomasse´, S.: On better-quasi-ordering countable series-parallel orders. Transac-
tions of the American Mathematical Society 352, 2491–2505 (2000)
11. Brandsta¨dt, A., Le, V.B., Spinrad, J.P.: Graph Classes: A survey. SIAM Mono-
graphs on Discrete Mathematics and Applications. SIAM, Philadelphia (1999)
12. Howorka, E.: A characterization of distance-hereditary graphs. Quarterly Journal
of Mathematics 28, 417–420 (1977)
13. Chang, M.S., Hsieh, S.Y., Chen, G.H.: Dynamic programming on distance-
hereditary graphs. In: Leong, H.-V., Jain, S., Imai, H. (eds.) ISAAC 1997. LNCS,
vol. 1350, pp. 344–353. Springer, Heidelberg (1997)
14. Cameron, P.J.: Two-graphs and trees. Discrete Mathematics 127(1-3), 63–74 (1994)
15. Seidel, J.J.: Geometry and combinatorics. In: Corneil, D.G., Mathon, R. (eds.)
Selected works of J. J. Seidel. Academic Press, London (1991)
16. Lova´sz, L.: Normal hypergraphs and the weak perfect graph conjecture. Discrete
Mathematics 2, 253–267 (1972)
17. Olariu, S.: No antitwins in minimal imperfect graphs. Journal of Combinatorial
Theory, Series B 45, 255–257 (1988)
196 L.-J. Hung and T. Kloks
by a series of these operations are called the vertex-minors of G. It is shown that graphs
with bounded rankwidth can be characterized by a finite collection of forbidden vertex-
minors. A test for a vertex-minor can be formulated in monadic second-order logic, and
this proves the claim. Secondly, also an explicit recognition algorithm is reported.
In order to classify graphs with rankwidth k we study graphs that have a tree-
decomposition such that every cutmatrix has a certain shape.
Definition 3. Consider a 0, 1-matrix M. Let M′ be the maximal submatrix of M with
no two rows equal and no two columns equal. The shape of M is the class of matrices
equivalent to M′ under permuting rows, permuting columns, and taking the transpose.
Let’s look at a few classic examples of graph classes that are characterized by shapes
of cutmatrices. A graph is a cograph if it has no induced P4, that is, a path with four
vertices. We can characterize cographs with the aid of ‘twins.’ A module is a set M of
vertices such that
x, y ∈M ⇒ N(x) − M = N(y) − M.
A twin is a module with two vertices. The twin is false if the vertices are not adjacent and
it is true if the vertices are adjacent. Cographs are the graphs for which every nontrivial
induced subgraph has a twin. Corneil et al. show that a graph is a cograph if and only
if it has a tree-decomposition such that every cutmatrix has a shape which is equivalent
to some submatrix of
(
1 0
)
.
Howorka defines distance-hereditary graphs as follows:
Definition 4. A graph G is distance hereditary if for all nonadjacent vertices x and y
in some component of G, all induced x, y-paths have the same length.
Chang et al. give the following characterization.
Theorem 1. A graph G is distance hereditary if and only if every induced subgraph
has a twin, or a pendant vertex, or an isolated vertex.
 
 











 
 
 















 

Fig. 1. A graph is distance hereditary if it has no induced house, hole, domino or gem
Distance-hereditary graphs are the graphs with rankwidth one. That is, they are those
graphs that have a tree-decomposition (T , f) such that every cutmatrix has a shape
equivalent to some submatrix of
( 1 0
0 0
)
, where the 1 stands for an all-ones block and
the zeros stand for all-zero blocks. In our terminology, distance-hereditary graphs are
1-distance hereditary. Alternatively, this class is characterized as the class of graphs
that do not have C5 as a vertex-minor. Note that the characterization by vertex-minors
is finite, whereas the characterization by forbidden induced subgraphs is infinite. How-
ever, note also that for k > 1, k-distance hereditary graphs are not closed under local
198 L.-J. Hung and T. Kloks
Lemma 1. ‘Creating a twin’ of a vertex x in a graph G is the operation of adding
a new vertex x′ and adding edges incident with x′ such that x′ and x become twins.
Assume that G is k-distance hereditary for some k  1 and let G′ be obtained from G
by creating a twin. Then G′ is also k-distance hereditary.
Proof. Let (T , f) be a tree-decomposition for G. Construct a tree-decomposition (T ′, f′)
for G′ by subdividing the line in T that has the image of x as an endpoint. Create a new
leaf for x′ and make this adjacent to the subdivision point.
First consider the line in T ′ incident with x′. If x′ is isolated, then the cutmatrix is the
all-zero matrix. Thus the shape is indeed a submatrix of
(
Ik 0
0 0
)
. If x′ is not isolated, then
the shape is equivalent to
(
1 0
)
or to
(
1
)
, which is also OK because k  1. Obviously,
the same holds true for the cutmatrix of the line incident with x in T ′. Finally, for any
other line in T ′, the row (or column) of the cutmatrix that corresponds with x′ is a copy
of the row (or column) that corresponds with x. Thus the shape is the same as that of
the corresponding original line in T . unionsq
In the same manner it follows without much difficulty that the class of k-DH-graphs is
hereditary, and that it is also closed under creating pendant vertices and under creating
isolated vertices.
2 k-Cographs
The class of k-cographs is defined as follows.
Definition 6. Let k be a natural number. A graph G = (V , E) is a k-cograph if there
exists a coloring of the vertices with colors from {1, . . . , k} such that for every subset
of vertices W ⊆ V with | W |  2 there exist a partition {W1, W2} and a permutation
σ ∈ Sym(k), such that for each i ∈ {1, . . . , k}, either
i. vertices of W1 of color i have no neighbor in W2, or
ii. vertices of W1 of color i are adjacent exactly to vertices of W2 of color σ(i).
We say that the graph is partitioned if it is equipped with a k-coloring. We call a partition
as stipulated in this definition, a k-modular partition.
In a recent paper we define a slightly different notion of k-cographs [9]. The follow-
ing proof, which shows that the class of k-cographs is characterized by a finite set of
forbidden induced subgraphs, is essentially the same as the proof for the related class
of graphs in that paper. We include it for completeness sake.
Theorem 2. Let k be a natural number. Partitioned k-probe cographs are well-quasi-
ordered by the induced subgraph relation.
Proof. A cotree is a binary tree with a bijection from the leaves to the vertices of the
graph and internal nodes labeled as join- or union-operators [4]. Two vertices are adja-
cent in the graph if and only if their lowest common ancestor is a join-node. Kruskal’s
theorem [10] states that trees, with points labeled by a well-quasi-ordering, are well-
quasi-ordered with respect to their lowest common ancestor embedding. Pouzet ob-
served that this implies that cographs are well-quasi-ordered by the induced subgraph
relation [13]. For partitioned k-cographs we equip each leaf with a label that is a color
from {1, . . . , k}. Each internal node receives a label which consists of
200 L.-J. Hung and T. Kloks
the vertices of Q + R. The nonzero rows of this submatrix correspond with the vertices
of P′. Thus there exists a coloring of the vertices of P′ with at most k colors such that
vertices with the same color have exactly the same neighbors in Q+R and vertices with
different colors have no common neighbor in Q + R. Of course, similar colorings exist
for the vertices of Q′ and for the vertices of R′. This proves the claim. unionsq
Consider an arbitrary line α of T and root the tree at α. We obtain a binary tree-
decomposition by distinguishing left – and right subtrees. Consider a branch, rooted
at some line e = (c, c′) such that c′ is the child of c. Let C be the set of vertices that
are mapped to leaves of the subtree.
Definition 7. The twinset at e is the set of vertices of C that have neighbors in V − C.
In other words; the twinset at e is N(V − C).
Lemma 3. The twinset of e induces a k-cograph.
Proof. Consider the cutmatrix at e. Let R = V−C and let R′ = N(C). Then there exists
a partition of R′ into at most k color classes, such that vertices with the same color have
the same neighbors in C and such that vertices with different colors have no common
neighbor in C. If C consists of a single vertex, there is nothing to prove. Otherwise, the
tree decomposes C into two sets A and B. Let A′ and B′ be the vertices of A and B
that have neighbors in R. The vertices of A′ are colored with at most k colors, such that
vertices with the same color have the same neighbors in V − A and such that vertices
with different colors have no common neighbor in V − A. The same holds for B, and
we may permute the colors of B such that vertices of color i in A′ + B′ have the same
neighbors in R. By induction we may assume that the colored graphs A′ and B′ induce
k-cographs. There exists a permutation σ ∈ Sym(k) that matches vertices of color i in
A′ with vertices of color σ(i) in B′ and this proves that A′ + B′ induces a k-cograph.
unionsq
Connecting the twinsets. To complete the description of the k-DH-structure we ana-
lyze the connections between color classes of three branches meeting in a point.
Let P, Q, and R be a partition of V induced by the three branches of an internal node
c of a tree-decomposition. Let P′ = N(Q+R) and define Q′ and R′ likewise. Consider
the graph Ω = Ω(P, Q, R) which has as its vertexset V(Ω) the set of color classes of
the twinsets P′, Q′, and R′. We connect two color classes in different twinsets by an
edge in E(Ω) if their color classes are joined in G. Notice that every vertex of Ω has
degree at most two; for example, a vertex that represents a color class of P′ has degree
two if it is joined to exactly one color class of Q′ and it is joined to exactly one color
class of R′. Thus Ω is the union of a collection of paths and cycles that pass alternately
through P′, Q′ and R′. Obviously, the total number of vertices in these paths and cycles
is at most 3k.
We end this section with some observations concerning the structure of k-DH-graphs
in terms of forbidden induced subgraphs.
The class of 2-DH-graphs contains all cycles. Also the domino and the house are
2-distance hereditary. Forbidden induced subgraphs for 2-DH-graphs include the 3×3-
grid and some infinite collection of ‘gem-structures.’ A gem-structure consists of a path
202 L.-J. Hung and T. Kloks
left twinset τ and the right twinset τr the ‘input twinsets’ of the point. We call the
twinset τo of the line that connects the point with its parent, the ‘output twinset’ of the
point.
Theorem 6. There exists an O(n3) time algorithm which checks if a graph G is k-
distance hereditary.
Proof. We describe a dynamic programming procedure. Consider a branch with a twin-
set P′ of colored vertices. Since the diameter of k-cographs is bounded, we need to
search up to some constant depth for a branch with a twinset Q′ such that P′ + Q′ in-
duces a k-cograph. This proves the theorem. unionsq
5 Some Final Remarks
We study graph classes such as k-DH-graphs in order to gain insight into why, and
when some combinatorial problems are solvable for tree-structures such as these.
Consider a graph class C defined by the property that the graphs allow for a tree-
decomposition such that every cutmatrix is shape-equivalent to some element of a finite
collection C of matrices. Say the matrices of C have binary rank at most k. It is our
aim to characterize the graphs of C by describing operators that act on the adjacency
conditions and that transform k-DH-graphs into graphs of C. Perhaps this leads to an
elegant classification of the graphs of rankwidth k.
Notice that the definition of k-cographs can be made suitable by changing the ad-
jacency conditions. Kruskal’s theorem guarantees that any of these classes is charac-
terized by a finite number of forbidden induced subgraphs. Furthermore, any of these
classes has bounded diameter, which implies the O(n3) recognition for the tree-version
with the adapted version of the twinsets.
References
1. Bouchet, A.: An efficient algorithm to recognize locally equivalent graphs. Combinator-
ica 11, 315–329 (1991)
2. Cameron, P.J.: Two-graphs and trees. Discrete Mathematics 127, 63–74 (1994)
3. Chang, M.-S., Hsieh, S.-Y., Chen, G.-H.: Dynamic programming on distance-hereditary
graphs. In: Leong, H.-V., Jain, S., Imai, H. (eds.) ISAAC 1997. LNCS, vol. 1350,
pp. 344–353. Springer, Heidelberg (1997)
4. Corneil, D. G., Lerchs, H., Stewart–Burlingham, L.: Complement reducible graphs. Discrete
Applied Mathematics 3, 163–174 (1981)
5. Higman, G.: Ordering by divisibility in abstract algebras. Proceedings of the London Math-
ematical Society 2, 326–336 (1952)
6. Howorka, E.: A characterization of distance-hereditary graphs. Quarterly Journal of Mathe-
matics 28, 417–420 (1977)
7. Hung, L.-J., Kloks, T.: de Bruijn’s combinatorics. Manuscript (2009),
http://www.cs.ccu.edu.tw/
˜
hunglc/combinatorics.pdf
8. Hung, L.-J., Kloks, T.: On some simple widths. In: Rahman, M. S. (ed.) WALCOM 2010.
LNCS, vol. 5942, pp. 204–215. Springer, Heidelberg (2009)
BLACK-AND-WHITE THRESHOLD GRAPHS
Ling-Ju Hung1 Ton Kloks Fernando S. Villaamil2
1 Department of Computer Science and Information Engineering
National Chung Cheng University, Chia-Yi 621, Taiwan
Email: hunglc@cs.ccu.edu.tw
2Department of Computer Science
RWTH Aachen University, Aachen 52056, Germany
Email: fernando.sanchez@rwth-aachen.de
Abstract
Let k be a natural number. We introduce k-threshold
graphs. We show that there exists anO(n3) algorithm
for the recognition of k-threshold graphs for each nat-
ural number k. k-Threshold graphs are characterized
by a finite collection of forbidden induced subgraphs.
For the case k = 2 we characterize the partitioned 2-
threshold graphs by forbidden induced subgraphs. We
introduce restricted, and special 2-threshold graphs.
We characterize both classes by forbidden induced
subgraphs. The restricted 2-threshold graphs coin-
cide with the switching class of threshold graphs. This
provides a decomposition theorem for the switching
class of threshold graphs.
1 Introduction
A graph is a pair G = (V,E) where V is a finite,
nonempty set and where E is a set of two-element
subsets of V. We call the elements of V the vertices
or points of the graph. We denote the elements of
E as (x,y) where x and y are vertices. We call the
elements of E the edges of the graph. For two sets
A and B, we use A + B and A − B to denote A ∪ B
and A \ B respectively. For a set A and an element x,
denote A∪ {x} and A \ {x} as A+ x and A− x respec-
tively. If e = (x,y) is an edge of a graph then we call
x and y the endpoints of e and we say that x and y
are adjacent. The open neighborhood of a vertex x is
the set of vertices y such that (x,y) ∈ E. We denote
open neighborhood by N(x). Define the closed neigh-
borhood of x by N(x) + x. We use N[x] to denote the
closed neighborhood of x. Define ∆(x) = V − N[x].
We call ∆(x) the anti-neighborhood of x. The degree
of a vertex x is the cardinality of N(x). Let W ⊆ V
and let W 6= ∅. The graph G[W] induced by W has
W as its set of vertices and it has those edges of E
that have both endpoints in W. If W ⊂ V, W 6= V ,
then we write G−W for the graph induced by V \W.
In caseW consists of a single vertex x we write G− x
instead of G − {x}. We usually denote the number of
vertices of a graph by n.
A path is a graph of which the vertices can be lin-
early ordered such that the pairs of consecutive ver-
This research was supported by the National Science Council of Tai-
wan, under grants NSC 98–2218–E–194–004 and NSC 98–2811–
E–194–006. Ton Kloks is supported by the National Science Coun-
cil of Taiwan, under grants NSC 99–2218–E–007–016 and NSC 99–
2811–E–007–044.
Copyright c©2011, Australian Computer Society, Inc. This paper
appeared at the 17th Computing: The Australasian Theory Sym-
posium (CATS 2011), Perth, Australia, January 2011. Conferences
in Research and Practice in Information Technology (CRPIT), Vol.
119, Alex Potanin and Taso Viglas, Ed. Reproduction for academic,
not-for profit purposes permitted provided this text is included.
Figure 1: C4, P4 and 2K2
tices form the set of edges of the graph. We call the
first and last vertex in this ordering the terminal ver-
tices of the path. We denote a path with n vertices by
Pn. To denote a specific ordering of the vertices we
use the notation [x1, . . . , xn]. Let G be a graph. Two
vertices x and y of G are connected by a path if G has
an induced subgraph which is a path with x and y as
terminals. Being connected by a path is an equiva-
lence relation on the set of vertices of the graph. The
equivalence classes are called the components of G.
A cycle consists of a path with at least three vertices
with one additional edge that connects the two ter-
minals of the path. We denote a cycle with n vertices
by Cn. The length of a path or a cycle is its number
of edges.
2 k-Threshold graphs
Threshold graphs were introduced in (Chva´tal et al.
1973) using a concept called ‘threshold dimension.’
There is a lot of information about threshold graphs
in the book (Mahadev & Peled 1995), and there are
chapters on threshold graphs in the book (Golumbic
2004) and in the survey (Brandsta¨dt et al. 1999).
There are many ways to define threshold graphs.
We choose the following way (Chva´tal et al. 1973,
Brandsta¨dt et al. 1999). An isolated vertex in a graph
G is a vertex without neighbors. A universal vertex
is a vertex that is adjacent to all other vertices. A
pendant vertex is a vertex with exactly one neighbor.
Definition 1. A graph G = (V,E) is a threshold graph
if every induced subgraph has an isolated vertex or a
universal vertex.
A graph G is a threshold graph if and only if G has
no induced P4, C4, nor 2K2 (Chva´tal et al. 1973).
Figure 2: A house, a C5, a gem, a butterfly, and a bull
A decomposition tree for a graph G = (V ,E) is a
pair (T , f) where T is a rooted binary tree and where f
is a bijection from the vertices of G to the leaves of T .
Let G be a threshold graph. We can construct a
decomposition tree forG as follows. For each internal
Figure 3: A octahedron, a net, a 4-wheel with a
pendant adjacent to the center, and a diamond with
a pendant vertex adjacent to each vertex of degree
three
subgraph in C2MS-logic. Note that this proof is non-
constructive; Kruskal’s theorem does not provide the
forbidden induced subgraphs. ¤
3 Special 2-threshold graphs
There are many drawbacks to the solution given in
the previous section. The algorithm that constructs a
decomposition tree of bounded rankwidth is far from
easy. By the way, it is described in terms of matroids
instead of graphs. Furthermore, the constants that
are involved quickly grow out of space when k in-
creases.
Notice that threshold graphs can be recognized by
sorting the vertices according to increasing degrees.
Either the vertex with highest degree is a universal
vertex or the vertex with lowest degree is an isolated
vertex. Delete such a vertex which is either isolated
or universal and repeat the process. The graph is a
threshold graph if and only if this process ends with
a single vertex.
In the remainder of this paper we restrict our at-
tention to the case where k = 2. We consider color-
ings of vertices with two colors, say black and white.
If G is a 2-threshold graph with a black-and-white
coloring of the vertices then the black vertices induce
a threshold graph and the white vertices induce a
threshold graph.
Definition 3. A 2-threshold graph is special if it has a
black-and-white coloring and a decomposition tree with
only ⊕- and ⊗w-operators.
A clique in a graph is a nonempty subset of vertices
such that every pair in it is adjacent. An independent
set in a graph is a nonempty subset of vertices with
no edges between them.
A graph is bipartite if there is a partition of the
vertices into two independent sets. One part of the
partition may be empty. A bipartite graph is complete
bipartite if any two vertices in different parts of the
partition are adjacent.
A threshold order of a graph is a linear ordering
[v1, . . . , vn] of the vertices such that for every pair vi
and vj with i < j
N(vi) ⊆ N(vj) if vi and vj are nonadjacent
and N[vi] ⊆ N[vj] if vi and vj are adjacent.
A graph is a threshold graph if and only if it has a
threshold order (Mahadev & Peled 1995). This im-
plies that the vertices of a threshold graph can be par-
titioned into a clique (the higher degree vertices) and
an independent set (the lower degree vertices). Note
however, that this partition is not exactly unique.
Theorem 3. A graph G = (V,E) is a special 2-
threshold graph if and only if it has no induced 2K2, C5,
net, house, gem, octahedron, or a 4-wheel with a pen-
dant vertex adjacent to the center, or a diamond with a
pendant vertex attached to each vertex of degree three.
Proof. It is easy to check that the listed subgraphs
are in the obstruction set. We prove the sufficiency.
If a connected graph has no P5 nor C5 then it has
a dominating clique (Bacso´ & Tuza 1991, Brandsta¨dt
et al. 1999). That is, it has a clique C such that every
vertex outside C has at least one neighbor in C. Since
the graph has no 2K2 it has also no P5 and, since there
is also no C5 there is a dominating clique.
Since there is no 2K2 there is at most one compo-
nent with more than one vertex. If there is a com-
ponent with more than one vertex then assume that
there is a decomposition tree for that component.
Otherwise start with a decomposition tree that con-
sists of a single leaf and map any of the isolated ver-
tices to that leaf. Color the vertex black. We add the
isolated vertices one by one as black vertices as fol-
lows. Add a new root to the decomposition tree with
a ⊕-operator. Add the isolated vertex as a right child
and the original root as a left child.
Henceforth assume that G is connected.
Let C be a dominating clique of maximal cardinal-
ity. Among the dominating cliques of maximal cardi-
nality choose C such that the number of edges with
one endpoint in C and the other endpoint in V −C is
maximal.
We claim that V = C or that G−C is bipartite. For
that, it is sufficient to show that there is no triangle.
Assume that there is a triangle {x,y, z} in V − C. Let
X, Y and Z be the vertices in C that are adjacent to x,
y and z respectively, but that are not adjacent to any
other vertex of the triangle {x,y, z}. Let
X2 = (N(y) ∩N(z) ∩ C) \N(x)
and define Y2 and Z2 similarly. Let N be the set of
vertices in C adjacent to all three of x, y and z. Since
there is no gem, there are no edges between X and
Y2, nor between X and Z2, nor between Y and X2,
nor between Y and Z2, nor between Z and X2, nor
between Z and Y2. Since C is a clique at least one of
every pair of these is empty. Since there is no house,
there are no edges between X and Y, nor between
X and Z, nor between Y and Z. Thus at least one of
every pair is empty. Assume that Y = Z = ∅. If X 6= ∅
then Y2 = Z2 = ∅.
There is at most one vertex in C which is not adja-
cent to x or y or z, otherwise there is a 2K2. Assume
that there is such a vertex p. Then X = ∅, other-
wise there is a 2K2; let ² ∈ X then the edges (²,p)
and (y, z) form a 2K2. At least one of X2, Y2 and Z2
is empty otherwise there is an octahedron. Say that
X2 = ∅. Obviously, C 6= {p} since C is a dominating
clique and p is not adjacent to x, y or z. Assume that
there is a vertex p′ 6∈ C that is adjacent to p but not
adjacent to x. Then p′ is adjacent to y and to z other-
wise there is a 2K2. If p′ is adjacent to some vertex of
Y2 and to some vertex of Z2 then there is an octahe-
dron. Assume that p′ is not adjacent to any vertex of
Y2. If Y2 6= ∅, then there is a gem in Y2 + {z, x,y,p′}.
Thus Y2 = ∅. If there is a vertex in Z2 that is adjacent
to p′ then there is a gem contained in Z2+{p′, z,y,p}.
So p′ is nonadjacent to all vertices of Z2. If Z2 6= ∅,
then there is a gem induced by Z2 + {y,p′, z, x}. Thus
Z2 = ∅. It follows that all vertices of C − p are adja-
cent to x, to y and to z. If some vertex ofN is adjacent
to p′ then there is a gem contained in N+ {p,p′,y, x}.
Thus p′ is nonadjacent to all vertices ofN. Now there
is a house induced by N+ {y,p′,p, x}, which is a con-
tradiction.
Now assume that all neighbors of p are also ad-
jacent to x. We can replace p in C by x. This gives
a dominating clique C′ of the same cardinality as C.
The number of edges with one endpoint in C and the
other endpoint in V − C increases since x is further-
more adjacent to y and z.
is a black vertex a 6= p and a white vertex b 6= q.
Then {a,b,p,q,p′, c} induces a 4-wheel with a pen-
dant. Assume that there is only one black vertex p.
Assume that there is a vertex δ ∈ C−C∗ which is not
adjacent to p. Then δ is adjacent to a white vertex b
and {p′, c, δ,b,p} induces a gem. Assume that there
is an isolated vertex x in G − C adjacent to c. Then
{(p,q), (c, x)} is a 2K2. Thus N(c) ⊂ N(p). Replace
c by p. Then we obtain a dominating clique C′ with
the same cardinality as C but there are more edges
with one endpoint in C′ and the other endpoint in
V −C′ since p is furthermore adjacent to q. This con-
tradicts the assumption that C maximizes the num-
ber of edges with one endpoint in C and the other
in V − C. Assume p′ = q′. Then G[B + W] is com-
plete bipartite. If there are black and white vertices
a 6= p and b 6= q then {a,b,p,q,p′, c} induces a 4-
wheel with a pendant. Assume that there is only one
black vertex p. If there is a vertex δ ∈ C − C∗ that is
not adjacent to p then δ is adjacent to a white vertex
b. Then {p′, c, δ,b,p} induces a gem. There is no iso-
lated vertex in G−C adjacent to c otherwise there is
a 2K2. As above we can replace c by p and obtain a
dominating clique C′ of the same cardinality as C but
with more edges than C with one endpoint in C′ and
the other endpoint in V − C′.
This proves the claim that every vertex of C has a
neighbor in B+W.
Define an ordering on the vertices of C+B+W as
follows. Let x ¹ y if
1. x ∈ B and y ∈ B and N(y) ⊆ N(x),
2. x ∈ B and y ∈ C and y ∈ N(x),
3. x ∈ B and y ∈W and y ∈ N(x),
4. x ∈ C and y ∈ C and N(x) ∩ B ⊆ N(y) ∩ B and
N(y) ∩W ⊆ N(x) ∩W,
5. x ∈ C and y ∈W and y ∈ N(x),
6. x ∈W and y ∈W and N(x) ⊆ N(y),
and the inverse conditions for the remaining pairs.
For every pair x and y in C + B +W either x ¹ y or
y ¹ x. We proved that the relation is transitive. It is
not necessarily antisymmetric. Define an equivalence
relation on the vertices as follows. Two vertices of
C + B +W are equivalent if they are in the same set
of the partition and, if they have the same open or
closed neighborhood. Then the relation ¹ induces a
linear order on the equivalence classes. Notice that
we could define the reversed order likewise.
Let I be the subset of vertices in C that have no
black neighbors. Let J be the subset of vertices in
C that have no white neighbors. The vertices of I
appear before all the black vertices in the linear order
and the vertices of J appear after all the white vertices
in the linear order. Thus I ∩ J = ∅ since G[B +W] is
connected. Also I 6= ∅ and J 6= ∅ since C is a maximal
clique.
Let x be an isolated vertex in G−C. We prove that
N(x) is contained in I or it is contained in J. Let p
be a black vertex with a minimal neighborhood and
let q be a white vertex with a minimal neighborhood.
Assume that p and q are not adjacent. Let p′ ∈ C
be a neighbor of p and let q′ ∈ C be a neighbor of
q. Then p′ 6= q′ and p is not adjacent to q′ and q is
not adjacent to p′. Assume that there is an isolated
vertex x in G − C adjacent to p′ and to q′. Let a be
a black vertex with a maximal neighborhood and let
b be a white vertex with a maximal neighborhood.
Then a and b are adjacent. The vertex a is adjacent
to p′ and the vertex b is adjacent to q′. If a is not
adjacent to q′ and b is not adjacent to p′ then there
is a house {a,b,q′,p′, x}. If a is adjacent to q′ then a
is adjacent to q and there is a gem {q′,q,a,p′, x}. If
there is only one black vertex p then p is adjacent to
q since G[B +W] is connected. This contradicts the
assumption that p and q are not adjacent. Assume
that p and q are adjacent. Then G[B+W] is complete
bipartite. Assume that p′ 6= q′. If p is not adjacent
to q′ and q is not adjacent to p′ then {p,q,p′,q′, x}
induces a house. If p is adjacent to q′ but q is not
adjacent to p′ then {q′,q,p,p′, x} induces a gem. As-
sume that p is adjacent to q′ and that q is adjacent to
p′. There is a vertex δ1 ∈ C that is adjacent to p but
not to q and there is a vertex δ2 ∈ C that is adjacent
to q but not to p. If δ1 is adjacent to x then there is
a gem {p′, x, δ1,p,q}. If δ2 is adjacent to x then there
is a gem {q′, x, δ2,q,p}. If δ1 is not adjacent to x and
δ2 is not adjacent to x then there is a 4-wheel with a
pendant attached to its center {p, δ1, δ2,q,p′, x}. The
same contradiction follows when p′ = q′.
Assume that x is not adjacent to any neighbor of
p and that x is not adjacent to any neighbor of q. As-
sume that p and q are not adjacent. Let p′ ∈ C be a
neighbor of p and let q′ ∈ C be a neighbor of q. Let
δ ∈ C be a neighbor of x. Then {p,q, x,p′,q′, δ} is a
net. Assume that p and q are adjacent. Let δ1 ∈ C
be a neighbor of p that is not a neighbor of q and let
δ2 ∈ C be a neighbor of q that is not a neighbor of p.
Let δ ∈ C be a neighbor of x. Then {δ, δ1, δ2,q,p} in-
duces a house. This proves that x has common neigh-
bors in C with exactly one of p and q. Assume that x
has no common neighbors with q. We proceed by in-
duction on the number of white vertices. Remove q.
By induction it follows that x has no common neigh-
bors with any white vertex.
This proves the claim that N(x) is contained in I
or in J for any isolated vertex x of G− C.
We prove that the neighborhoods of isolated ver-
tices of G − C that have neighbors in I are ordered
by set inclusion. Consider three isolated vertices x, y
and z of G−C that have neighbors in I. Assume that
x and y have private neighbors x′ and y′ in C. As-
sume that z is adjacent to x′ and to y′. There exists a
vertex δ ∈ C that is not adjacent to z. If x is adjacent
to δ there is a gem {x′, x, δ,y′, z}. If y is adjacent to
δ there is a gem {y′,y, δ, x′, z}. If δ is not adjacent to
x and not to y there is a diamond with two pendant
vertices {z, x′,y′, δ, x,y}. Assume that z is not adja-
cent to x′ and that z is not adjacent to y′. Assume
that z has a neighbor z′ that is not adjacent to x and
that is not adjacent to y. Then {x′,y′, z′, x,y, z} is a
net. If z has a neighbor z1 that is adjacent to x but
not to y and a neighbor z2 that is adjacent to y but
not to x then there is a gem {z1, x, x′, z2, z}. Assume
that z is adjacent to x′ but not adjacent to y′. Assume
that x has a neighbor x′′ that is not adjacent to z and
that z has a neighbor z′ that is not adjacent to x. Then
{x′, z, z′, x′′, x} is a gem. Thus the neighborhood of z
is comparable with the neighborhood of exactly one
of x and y and it is disjoint with the neighborhood of
the other one.
This proves the claim that the neighborhoods of
the isolated vertices with neighbors in I are ordered
by set inclusion. A similar proof shows that the neigh-
borhoods of the white vertices and of the isolated ver-
tices with their neighborhoods in I and, the neighbor-
hoods of the black vertices and of the isolated vertices
with their neighborhoods in J are ordered by set in-
clusion.
Color the vertices of C white and equip them with
a ⊗w-operator. If there is a component in G − C
with more than one vertex then color the vertices of
B black and equip them with a ⊗w-operator. Color
the vertices of W white and equip them with a ⊕-
operator. Color the isolated vertices of G − C that
have their neighbors in I white and equip them with
root than y in the decomposition tree. We write o(x)
for the operator in the tree that is adjacent to x.
Let x be a vertex and assume that x is black. We
consider three cases.
Case 1: o(x) = ⊗b. In this caseN(x) = T1+T2 where
T1 and T2 are defined as follows.
T1 = { y ∈ V | y ≺ x and o(y) = ⊗b }
T2 = { y ∈ V | x ≺ y and y is black }.
Notice that every vertex of T1 is adjacent to ev-
ery vertex of T2. All vertices of T2 are black thus
T2 induces a threshold graph. The black vertices
of T1 are a clique and the white vertices are an
independent set. Every white vertex is adjacent
to those black vertices that are further from the
root. This implies that T1 is a threshold graph (if
it is nonempty) (Mahadev & Peled 1995).
Case 2: o(x) = ⊕. In this case the neighbors of x are
the vertices of T1 described above.
Case 3: o(x) = ⊗w. Now N(x) = T1 + T2 where T1
and T2 are defined as follows.
T1 = { y ∈ V | y ≺ x and o(y) = ⊗b }
T2 = { y ∈ V | x ≺ y and y is white }.
In this case there are no edge between vertices
of T1 and vertices of T2. If T2 6= ∅ then the graph
induced by T2 is a threshold graph since all ver-
tices are white. We proved above that T1 is also
a threshold graph.
A similar analysis holds when x is a white vertex. This
proves the lemma. ¤
The complement of a graph G = (V,E) is the
graph that has V as its vertices and that has those
pairs of vertices adjacent that are not adjacent in G.
We denote the complement of G by G¯.
Let G be a graph. A vertex of G is good if its neigh-
borhood is empty or, a threshold graph or, the union
of two threshold graphs or the join of two threshold
graphs. The graph G is good if every vertex of G is
good. By Lemma 3 a 2-threshold graph is good. Con-
sider a vertex x in G. A local complementation at x is
the operation which complements the graph induced
by N(x). Note that the class of good graphs is hered-
itary and closed under local complementations.
Theorem 4. A graph G is good if and only if G has no
induced gem or, C4 + K1 with a universal vertex or, the
local complement of this with respect to the universal
vertex or, 3K2 with a universal vertex or, an octahedron
with a universal vertex.
Proof. It is easy to check that the universal vertex of
each of the mentioned graphs is not good. We prove
the converse. Let x be a vertex with a nonempty
neighborhood. Since there is no gem the graph in-
duced by N(x) is a cograph. Assume that this graph
is disconnected. Let C1, . . . ,Ct be the components of
the graph induced by N(x). There is no 3K2 in the
graph induced by N(x) so there are at most two com-
ponents with more than one vertex. Since there is no
4-wheel with a pendant vertex attached to its center
the graph induced by each component Ci has no C4.
Assume that Ci has an induced 2K2. Since the graph
induced by Ci is connected and since there is no P4
in G[Ci] this graph has a butterfly. Then G has an in-
duced subgraph that is isomorphic a butterfly with a
universal vertex. The butterfly is the complement of
C4 + K1.
(1) (2) (3) (4) (5) (6) (7) (8)
(9) (10) (11) (12) (13) (14) (15)
(16) (17) (18) (19) (20)
(21) (22) (23) (24) (25) (26) (27)
Figure 5: Forbidden induced subgraphs of partitioned
black-and-white threshold graphs
Now assume that the graph induced by N(x) is
connected. Consider the graph obtained by comple-
menting N(x). By the argument above x is good in
this graph. This implies that x is also good in G. ¤
Theorem 5. A partitioned graph is a 2-threshold
graph if and only if it does not contain any of the graphs
of Figure 5 as an induced subgraph.
Proof. It is easy to see that none of the graphs in Fig-
ure 5 is a 2-threshold graph. We prove the converse.
Let G be a partitioned graph with none of the graphs
of Figure 5 as an induced subgraph. It can be checked
that none of the graphs in Figure 4 is an induced sub-
graph of the underlying unpartitioned graph.
The case where there are two components with at
least two vertices is easy to check. Assume that G is
connected. We prove that there exists a vertex x such
that N(x) or N[x] is exactly the set of all the white
vertices or all the black vertices in G. Assume that G
has a house H = [1; 2, 3, 4, 5] where [2, 3, 4, 5] is the
induced 4-cycle in H and vertex 1 is the rooftop of
H adjacent to vertices 2 and 5. Assume that vertices
1, 2, 3 and 5 are colored black and that vertex 4 is
colored white. Let S ⊆ V − H be the set of vertices
that are adjacent to 1, 2, 3 and 5, and nonadjacent
to 4. Add vertex 2 also to S. We claim that S contains
a vertex x such thatN(x) orN[x] is the set of all black
vertices in G. It can be checked that every black ver-
tex is in S or is adjacent to a vertex in S. The graph
G[S] is a threshold graph since G has no octahedron,
or gem or a K2 × 2K2. The black vertices in S are a
clique and the white vertices are an independent set.
It is now easy to check that there exists a vertex x ∈ S
such thatN(x) orN[x] is the set of black vertices in G.
The other colorings of the house can be dealt with
in a similar fashion.
Assume that G contains no house. Assume that
there is a 2K2; (p,q)+(r, s). Assume that p and q are
black and that r and s are white. Consider a shortest
path between {p,q} and {r, s}. Assume that this is a
P6;
P = [p,q,a,b, r, s].
Then a is black and b is white. Assume that q has a
white neighbor α and that r has a black neighbor β.
Then
N(α) ∩ P = {p,q,a} and N(β) ∩ P = {b, r, s}.
Furthermore, α and β are adjacent. Then
{q,a,b,α,β} induces a house.
and assume that P is adjacent to a class P′ of ∆ which
is not adjacent to Q. Let Q be adjacent to a class Q′
of ∆. Then P is also adjacent toQ′. Since [P′,P,Q′,Q]
has no induced P4, every vertex of P is adjacent to
every vertex of Q. Furthermore, since there is no C4
in the switched graph, at least one of the classes P
and Q is a clique. Thus all of S′ except possibly one
class is a clique.
Since there is no 2K2 in the switched graph at most
one of the components of ∆ has more than one ver-
tex. Furthermore, if there is a component with more
than one vertex then it has the least number of neigh-
bors in S′ among all components of ∆, otherwise the
switch produces a 2K2.
Every pair of nonadjacent classes in S′ and ∆ be-
come adjacent in the switched graph. Thus at least
one of them is a clique. If there is a class in S′ that is
not a clique then it is adjacent to all except possibly
one class of ∆ otherwise, there is a C4 in the switched
graph. Consider a component P in ∆ that has more
than one vertex and a classQ in S′ that is not a clique.
If P and Q are not adjacent then they are adjacent in
the switched graph, thus P is a clique. If P and Q are
adjacent then Q is an independent set, otherwise the
switched graph has a 2K2.
If S−S′ is not a clique, then S′+∆ is a clique in the
switched graph. Thus S′ and ∆ are disjoint cliques in
H1[C1]. This contradicts that C1 is a component of
H and H[C1] is not a threshold graph. Thus S − S′ is
empty or else it is a clique.
Assume that there is a class P in ∆ which contains
an edge. Let Q be the class in S′ that is adjacent to P.
Then Q is an independent set, otherwise there is a
2K2 in the switched graph. This class Q is adjacent
to all vertices of ∆, since P has the least neighbors in
S′ among all classes in ∆. Thus Q is an independent,
universal set of H[C1].
Assume that there is a component P in ∆ that
contains an edge. Let Q be the neighborhood of P
in S′. Then S−Q = ∅ otherwise, H contains a graph
which is switching equivalent to 3K2. Assume that
S − Q = ∅ and that Q is an independent set. If Q
contains more than one vertex then V−C1 is a clique.
Switch H with respect to
Q+ (V − C1).
This gives a threshold graph.
Assume that ∆ is an independent set. Let Q be a
class in S′ which is not a clique. Then every vertex of
Q is adjacent to all other vertices of C1 except possi-
bly one vertex in ∆. If there is a vertex in ∆ which is
not adjacent to Q then H contains a C4 + 2K1 which
is a contradiction. Thus Q is adjacent to all vertices
of C1 −Q.
First assume that Q is an independent set. Switch
H with respect to
Q+ (V − C1).
The set Q becomes a set of isolated vertices. The
vertex x is adjacent to the clique S − Q. The graph
induced by ∆+ (S−Q) is a threshold graph. The set
V − C1 becomes a clique of vertices adjacent to all
vertices in C1 − Q. Thus H switches to a threshold
graph.
Assume that Q is not an independent set. Switch
H with respect to
Q+ (V − C1).
This gives two disjoint threshold graphsQ and V−Q.
As shown at the start, we can switch the graph to a
threshold graph.
The case where S = C1 −N[x] is similar. ¤
Theorem 8. A graph is switching equivalent to a
threshold graph if and only if it is a restricted 2-
threshold graph.
Proof. It is easy to check that none of the forbidden
induced subgraphs of the switching class of threshold
graphs is restricted 2-threshold. ¤
References
Bacso´, G. and Z. Tuza (1991), ‘Dominating cliques in
P5-free graphs’, Period. Math. Hung. 21, pp. 303–
308.
Bayer, D., V. B. Le, and H. N. de Ridder (2009),
‘Probe threshold graphs and probe trivially per-
fect graphs’, Theoretical Computer Science 410,
pp. 4812–4822.
Brandsta¨dt, A., V. B. Le, and J. P. Spinrad (1999),
Graph classes: A survey, SIAM Monographs on Dis-
crete Mathematics and Applications, Philadelphia.
See also their database:
http://wwwteo.informatik.uni-rostock.de/isgci/index.html
Cameron, P. J. (1994), ‘Two-graphs and trees’, Dis-
crete Mathematics 127, pp. 63–74.
Chandler, D. B., M.-S. Chang, T. Kloks, and S.-L. Peng
(2009), Probe graphs. Manuscript.
A draft of this manuscript is online available:
http://www.cs.ccu.edu.tw/˜hunglc/ProbeGraphs.pdf
Chva´tal, V., and P. L. Hammer (1973), Set-packing
and threshold graphs. Technical Report, Com-
puter Science Department, University of Waterloo,
Canada CORR 73-21.
Chva´tal, V., and P. L. Hammer (1977), Aggregation of
inequalities in integer programming, in P. L. Ham-
mer, E. L. Johnson, B. H. Korte, and G. L. Nem-
houser, eds, ‘Studies in Integer Programming’, An-
nals of Discrete Mathematics 1, North-Holland,
Amsterdam, pp. 145–162.
Corneil, D. G., H. Lerchs, and L. Stewart-Burlingham
(1981), ‘Complement reducible graphs’, Discrete
Applied Mathematics 3, pp. 163–174.
Courcelle, B., and S. Oum (2007), ‘Vertex minors,
monadic second-order logic, and a conjecture by
Seese’, Journal of Combinatorial Theory, Series B 97
(2007), pp. 91–126.
Golumbic, M. C. (2004), Algorithmic graph theory
and perfect graphs, Elsevier series Annals of Discrete
Mathematics 57, Amsterdam.
Hammer, P. L., and F. Maffray (1990), ‘Completely
separable graphs’, Discrete Applied Mathematics 27,
pp. 85–99.
Hammer, P. L., U. N. Peled, and X. Sun (1990), ‘Dif-
ference graph’, Discrete Applied Mathematics 28,
pp. 35–44.
Harary, F. (1979), ‘The structure of threshold graphs’,
Decisions in Economics and Finance 2, pp. 169–172.
Higman, G. (1952), Ordering by divisibility in ab-
stract algebras, in ‘Proceedings of the London
Mathematical Society’, s3-2, pp. 326–336.
Hlineˇny´, P., and S. Oum (2008), ‘Finding branch-
decompositions and rank-decompositions’, SIAM J.
Comput. 38 (2008), pp. 1012–1032.
k-Cographs are Kruskalian
Ling-Ju Hung∗ Ton Kloks†
Abstract
A class of graphs is Kruskalian if Kruskal’s theorem on a well-quasi-
ordering of finite trees provides a finite characterization in terms of
forbidden induced subgraphs. Let k be a natural number. A graph
is a k-cograph if its vertices can be colored with colors from the set
{1, . . . ,k} such that for every nontrivial subset of verticesW there ex-
ists a partition {W1,W2} ofW into nonempty subsets such that either
no vertex ofW1 is adjacent to a vertex ofW2 or, such that there exists
a permutation pi ∈ Sk such that vertices with color i in W1 are adja-
cent exactly to the vertices with color pi(i) inW2, for all i ∈ {1, . . . ,k}.
We prove that k-cographs are Kruskalian. We show that k-cographs
have bounded rankwidth and that they can be recognized in O(n3)
time.
1 Introduction
Progress on the study of tree-decompositions of graphs, such as rankwidth
and cliquewidth decompositions, makes it a point of interest to investigate
classes of graphs for which the cutmatrices in the decomposition take on
a certain shape. It would be nice if one could tell by the shape of the
cutmatrices whether a class of graphs has a finite characterization in terms
of forbidden induced subgraphs. We studied these graph classes to gain
insight into the structures of classes of graphs of bounded rankwidth.
To make matters clear, we need a few definitions.
Definition 1. A tree-decomposition of a graph G is a pair (T , f) where T is
a ternary tree, i.e., every internal node of T is of degree three and where f is a
bijection from the leaves of T to the vertices of G.
∗Department of Computer Science and Information Engineering, National Chung
Cheng University, Min-Hsiung, Chia-Yi 62102, Taiwan. Email: hunglc@cs.ccu.edu.tw
†Ton Kloks is supported by the National Science Council of Taiwan under grants
NSC 98–2218–E–194–004 and NSC 98–2811–E–194–006.
1
while it is infinite for the class of distance-hereditary graphs. Note that
distance-hereditary graphs have a finite characterization in terms of vertex-
minors [14].
Definition 5. Let k be a natural number. A graph G = (V,E) is a k-cograph
if there exists a coloring of the vertices with colors from {1, . . . , k} such that for
every subset of verticesW ⊆ V with |W| > 2 there exists a partition {W1,W2}
of W into two nonempty subsets such that either
i. no vertex of W1 is adjacent to a vertex ofW2, or
ii. there exists a permutation σ of the colors such that vertices of color i
in W1 are adjacent exactly to the vertices of color σ(i) in W2, for all
i ∈ {1, . . . , k}. That is, for every vertex x ∈W1 of color i,
N(x) ∩W2 = {y ∈W2 | y is of color σ(i)}.
In this paper we look at a class of graphs for which Kruskal’s theorem
provides a proof that they can be characterized by a finite collection of
forbidden induced subgraphs.
Note that, for k = 1, the 1-cographs are the ordinary cographs; this
is Gallai’s characterization [7]. Note that k-cographs are also (k + 1)-
cographs; we may simply leave some color class empty. If C is a nonempty
color class, i.e., a nonempty set of vertices with the same color, then the
subgraph induced by C is a cograph.
One of our main results is that for each k there exists a finite characteri-
zation for the class of k-cographs in terms of forbidden induced subgraphs.
We prove this in Section 3. We end this section with some of our notational
customs and with one significant observation.
For two sets A and B we write A + B and A − B instead of A ∪ B and
A \ B. We write A ⊆ B if A is a subset of B with possible equality and we
write A ⊂ B if A is a subset of B and A 6= B. For a set A and an element x
we write A + x instead of A + {x} and A − x instead of A − {x}. It will be
clear from the context when x is an element instead of a set.
A graph G is a pair G = (V,E) where V is a finite, nonempty set, of
which the elements are called the vertices of G, and where E is a set of
two-element subsets of V, of which the elements are called the edges of G.
A graph consisting of a single vertex is called trivial. We denote edges of a
graph as (x,y) and we call x and y the endvertices of the edge. For a vertex
x we write N(x) for its set of neighbors and we write N[x] = N(x) + x
for the closed neighborhood of x. For a subset W ⊆ V we write N(W) =⋃
x∈W N(x) −W for its neighborhood and we write N[W] = N(W) +W for
3
Finally, if W contains both x and x′ and at least one other vertex, then
remove the vertex x′ from the set. In the implied partition {W1,W2} assume
that x ∈ W1. Add the vertex x
′ also to W1. The claim follows, and this
proves the lemma. 
2 k-Cotrees
In this section we show that for any natural number k, k-cographs can be
recognized in O(n3) time.
A k-cotree for a graph G = (V,E) is a pair (T , f) where T is a rooted
binary tree and f is a 1-1 mapping from the leaves of T to V; the set of
vertices of G. Each leaf is labeled with a color from {1, . . . , k}. Each internal
node of T , including the root, is labeled either as a union node, or by some
permutation σ of {1, . . . , k}. If an internal node of T is labeled as a union
node then in G the vertices that are mapped to its left subtree are not
adjacent to the vertices that are mapped to its right subtree. If an internal
node is labeled with a permutation σ then in G the vertices of color i that
are mapped to leaves in its left subtree are adjacent to the vertices of color
σ(i) that are mapped to its right subtree for all i ∈ {1, ..., k}. This implies
that two vertices x and y in G are adjacent if and only if the lowest common
ancestor is labeled with a permutation σ that matches the colors of x and y.
The following lemma echoes the classic [5].
Lemma 2. A graph is a k-cograph if and only if it has a k-cotree representa-
tion.
Proof. First assume that G is a k-cograph. Consider a coloring of the ver-
tices as prescribed in Definition 5. We construct a k-cotree as follows.
Let {V1,V2} be a partition of V such that either no vertex in V1 is adjacent
to a vertex of V2 or there exists a permutation σ of the colors such that
vertex of color i is V1 are adjacent exactly to the vertices of color σ(i) in
V2 for i ∈ {1, . . . , k}. Construct a root node r. If no vertex of V1 is adjacent
to a vertex of V2, then label r as a union node. Otherwise, label r with the
permutation that matches the color classes of V1 with the color classes of
V2. If V1, or if V2 consists of a single node then create a leaf and label it
with the color of that vertex. Otherwise, recursively construct k-cotrees for
G[V1] and for G[V2] and make the roots of those two trees adjacent to r.
By construction, two vertices x and y are adjacent in G if and only if their
lowest common ancestor is labeled with a permutation that matches their
colors.
5
Proof. By definition, a graph has rankwidth k if it has a tree-decomposition
such that every cutmatrix has binary rank at most k. By Lemma 3, k-
cographs have such a tree-decomposition and it can be found in O(n3)
time [9]. 
Theorem 1. For every natural number k, there exists an O(n3) algorithm
that recognizes k-cographs.
Proof. The definition of a k-cograph can be expressed in monadic second-
order logic. It is proved in [14] that every graph problem that is specified
by a monadic second-order logic sentence without edge-set quantification
can be solved in O(n3) time on graphs of bounded rankwidth. Since k-
cographs have bounded rankwidth, this proves the claim. 
In a recent paper we introduced the concept of simple-width [11]. A
graph has simple-width k if it has a tree-decomposition such that every
cutmatrix is shape-equivalent to some matrix with at most k rows and at
most k columns. It is easy to see that
r(G) 6 s(G) 6 2r(G),
where r(G) is the rankwidth of G and s(G) is the simple-width of G.
The benefit of simple-width lies in the fact that characterizations of graph
classes, defined in terms of permitted shapes of cutmatrices, are easier to
obtain. In the mentioned paper we characterize graphs with simple-width
2. Note that no characterization is known of graphs with rankwidth at most
two.
3 Forbidden induced subgraphs
In this section we show that for every natural number k, k-cographs can be
characterized by a finite set of forbidden induced subgraphs.
When a coloring that satisfies Definition 5 is a part of the input, then
we call the k-cograph partitioned.
Theorem 2. Let k be a natural number. Partitioned k-probe cographs are
well-quasi-ordered by the induced subgraph relation.
Proof. A cotree is a binary tree with a bijection from the leaves to the ver-
tices of the graph and internal nodes labeled as join- or union-operators [5].
Two vertices are adjacent in the graph if and only if their lowest com-
mon ancestor is a join-node. Kruskal’s theorem [13, 8] states that trees,
7
each Gi and label each vertex of Gi −ri with a 0 or a 1, depending whether
it is adjacent to ri or not. Consider furthermore a (good) k-coloring for each
Gi −ri. Thus we obtain a sequence of k-colored graphs [G1−r1,G2−r2, . . .]
with an additional 0/1-label at each vertex. By Kruskal’s theorem there
must exist i < j such that the labeled graph Gi − ri is an induced subgraph
of Gj − rj. Since we may assume that no two graphs Gi and Gj are equal,
this proves the theorem. 
Note that Theorem 4 gives an alternative proof for the fact that k-
cographs can be recognized in O(n3) time. Let Ok be the (finite) set of
forbidden induced subgraphs for k-cographs. Thus a graph is a k-cograph
if and only if it has no element of Ok as an induced subgraph. Because Ok
is finite, this is a monadic second-order characterization. Note however,
that in this case the proof is nonconstructive; Kruskal’s theorem does not
provide the set Ok.
4 2-Cographs
Let’s satisfy some of our cravings for practicalities; some discouraging news
to start with. Forbidden induced subgraphs for 2-cographs include the gem,
C5, C7, C8, C9, C10, and P10, and the graphs depicted in Figure 2. We think
that the list is complete, but we do not have a proof to show that.
We find it surprising that the list is so long, already for the case of 2-
cographs. One good, and very useful thing that comes out of it is this:
Corollary 1. 2-Cographs are perfect.
Although we proved the existence of an O(n3) recognition algorithm
for k-cographs, such an algorithm is hard to obtain in practice. We end
this section with the description of an easy O(n4) recognition algorithm for
2-cographs.
Theorem 5. There exists anO(n4) algorithm for the recognition of 2-cographs.
Proof. A 2-cograph G can be seen as a ‘P4-free structure,’ which we define
next.
Consider a 2-cotree (T , f) with leaves colored black and white. If G is
nontrivial, then there exist two leaves with a common ancestor in T . Either
the two leaves are twins, or they are pairs of vertices x and y with different
colors; that is, x and y have no common neighbors.
Consider a subtree with three or four leaves. If G has enough vertices than
such a subtree exists. In the case of a subtree with 3 leaves, one pair of
9
(ii) two points; one a pair {x,y} and the other a vertex z such that ei-
ther z and {x,y} are disjoint or such that z is adjacent to exactly one
of x and y. Furthermore, either x and z or y and z have the same
neighbors outside {x,y, z}; or
(iii) two points; both pairs, say {x,y} and {p,q}. Either they are disjoint,
or they are pairwise connected. Furthermore, either {x,p} and {y,q},
or {x,q} and {y,p} have the same neighbors outside {x,y,p,q}, and
these two neighborhoods are disjoint.
Obviously, a graph is a 2-cograph if and only if there is a corresponding
‘P4-free structure,’ that is a structure with no induced P4 of points. Two
points are adjacent in the structure if there is an induced subset of points
for which the points are adjacent structure-twins, that is, they are structure-
twins and there is at least one edge in G between the corresponding subsets
of vertices. The recognition problem for 2-cographs boils down to the iden-
tification of the points of a corresponding structure.
Our algorithm builds a P4-free structure, if it exists. It mimics the building
of a 1-cotree by grouping twins; in that algorithm one repeatedly searches
for a twin, and then removes one of the two vertices from the graph.
We start with a collection of feasible subtrees consisting of all single vertices
and of all pairs of colored vertices that have no common neighbors. Each
subtree is represented, either by a point which is a pair of vertices, or by a
point which is a single vertex. For each subtree the algorithm maintains a
list of leaves.
Two subtrees T1 and T2 merge if the points are structure-twins. Consider
two subtrees represented by structure-twins. Consider the graphG induced
by the vertices in the two points and the vertices that do not appear in the
leaves of T1 and T2 nor in the lists of vertices that are ‘covered’ (see below).
a. If T1 and T2 are twins, and if T1 has two colors and T2 only one, then
we say that T1 ‘covers’ T2. For each subtree the algorithm maintains a
list of vertices that are covered by it. In this case the set of leaves of T2
is added to the list of vertices covered by T1. In this case no subtree is
deleted from the list.
b. If both points that represent T1 and T2 are single vertices that are twins
in G then delete one of the two subtrees from the list. Make a union of
the list of leaves.
c. If two subtrees are structure-twins such that both have pairs of vertices
with different colors, then delete one of them from the list. Make a
union of the list of leaves and of the list of vertices that are covered.
11
References
[1] Brandsta¨dt, A., V. B. Le, and J. P. Spinrad, Graph classes: A sur-
vey, SIAM Monographs on Discrete Mathematics and Applications,
Philadelphia,1999.
[2] Cameron P. J., Two-graphs and trees. Discrete Mathematics 127
(1994), pp. 63–74.
[3] Chandler D. B., M.-S. Chang, T. Kloks, and S.-L. Peng, Probe graphs.
Manuscript 2009; on-line version available:
http://www.cs.ccu.edu.tw/~hunglc/ProbeGraphs.pdf
[4] Chang, M.-S., S.-Y. Hsieh, and G.-H. Chen, Dynamic programming on
distance-hereditary graphs, Proceedings of the 8th International Sym-
posium on Algorithms and Computations, LNCS 1350 (1997), pp. 344–
353.
[5] Corneil, D. G., H. Lerchs, and L. S. Burlingham, Complement re-
ducible graphs, Discrete Applied Mathematics 3 (1981), pp. 163–174.
[6] Damaschke, P., Induced subgraphs and well-quasi-ordering, Journal
of Graph Theory 14 (1990), pp. 426–435.
[7] Gallai, T., Transitiv orientierbare Graphen, Acta Math. Acad. Sci. Hun-
gar. 18 (1967), pp. 25–66.
[8] Higman, G., Ordering by divisibility in abstract algebras, Proc. London
Math. Soc. 2 (1952), pp. 326–226.
[9] Hlineˇny´, P., and S. Oum, Finding branch-decompositions and rank-
decompositions, SIAM J. Comput. 38 (2008), pp. 1012–1032.
[10] Howorka, E., A characterization of distance-hereditary graphs, Quar-
terly Journal of Mathematics 28 (1977), pp. 417–420.
[11] Hung, L.-J. and T. Kloks, On some simple widths. Proceedings of WAL-
COM 2010, LNCS 5942 (2010), pp. 204–215.
[12] Hung, L.-J. and T. Kloks, Classifying Rankwidth; k-DH-Graphs. Pro-
ceedings of CSR 2010, LNCS 6072 (2010), pp. 195–203.
[13] Kruskal, J., Well-quasi-ordering, the tree theorem, and Vazsonyi’s con-
jecture, Transactions of the American Mathematical Society 95 (1960),
pp. 210–225.
13
ON THE THRESHOLD-WIDTH OF GRAPHS
Maw-Shang Chang1, Ling-Ju Hung1, Ton Kloks?, and Sheng-Lung Peng2
1 Department of Computer Science and Information Engineering
National Chung Cheng University
Min-Hsiung, Chia-Yi 621, Taiwan
(mschang,hunglc)@cs.ccu.edu.tw
2 Department of Computer Science and Information Engineering
National Dong Hwa University
Shoufeng, Hualien 97401, Taiwan
slpeng@mail.ndhu.edu.tw
Abstract. The G-width of a class of graphs G is defined as follows. A graph
G has G-width k if there are k independent sets N1, . . . ,Nk in G such that
G can be embedded into a graph H ∈ G such that for every edge e in H
which is not an edge in G, there exists an i such that both endpoints of
e are in Ni. For the class TH of threshold graphs we show that TH-width
is NP-complete and we present fixed-parameter algorithms. We also show
that for each k, graphs of TH-width at most k are characterized by a finite
collection of forbidden induced subgraphs.
1 Introduction
Definition 1. Let G be a class of graphs which contains all cliques. The G-width
of a graph G is the minimum number k of independent sets N1, . . . ,Nk in G such
that there exists an embedding H ∈ G of G such that for every edge e = (x,y) in H
which is not an edge of G there exists an i with x,y ∈ Ni.
We restrict the G-width parameter to classes of graphs that contain all cliques
to ensure that it is well-defined for every (finite) graph.
In this paper we investigate the width-parameter for the class TH of threshold
graphs and henceforth we call it the threshold-width or TH-width. If a graph G
has threshold-width k then we call G also a k-probe threshold graph. We refer
to the partitioned case of the problem when the collection of independent sets
Ni, i = 1, . . . ,k, which are not necessarily disjoint, is a part of the input. A
collection of independent sets Ni, i = 1, . . . ,k, is a witness for a partitioned
graph. For historical reasons we call the set of vertices P = V −
⋃k
i=1 Ni the set
of probes and the vertices of
⋃k
i=1 Ni the set of nonprobes.
Threshold graphs were introduced in [3] using a concept called ‘threshold di-
mension.’ There is a lot of information about threshold graphs in the book [15],
and there are chapters on threshold graphs in the book [6] and in the survey [1].
We may take the following characterization as a definition [3, 1].
? This author is supported by the National Science Council of Taiwan, under grants
NSC 98–2218–E–194–004 and NSC 98–2811–E–194–006.
Obviously, the class of graphs with TH-width at most k is hereditary. Let k
be fixed. Assume that the class of TH-width at most k has an infinite collection
of minimal forbidden induced subgraphs, say G1,G2, . . .. In each Gi single out
one vertex ri and let G′i = Gi − ri. Then G
′
i has TH-width at most k, thus there
are independent sets N(i)1 , . . . ,N
(i)
k in G
′
i such that G
′
i can be embedded into a
threshold graph Hi by adding certain edges between vertices that are pairwise
contained in some N(i)` . For each i consider a binary tree-decomposition (Ti, fi)
for Hi as stipulated in Lemma 1. Each leaf is labeled by a 0/1-vector with k
entries. The jth entry of this vector is equal to 0 or 1 according to whether the
vertex is contained in N(i)j or not. Thus two vertices are adjacent in G′i if and
only if their lowest common ancestor is a join-node and their vectors are disjoint.
We give each leaf an additional 0/1-label that indicates whether the vertex
that is mapped to that leaf is adjacent to ri or not.
Kruskal’s theorem [14] states that binary trees, with points labeled by a well-
quasi-ordering are well-quasi-ordered with respect to their lowest common an-
cestor embedding. When we apply Kruskal’s theorem to the labeled binary trees
Ti that represent the graphs G′i we may conclude that there exist i < j such that
G′i is an induced subgraph of G
′
j. But then we must also have that Gi is an in-
duced subgraph of Gj. This is a contradiction because we assume that the graphs
Gi are minimal forbidden induced subgraphs. This proves the theorem. uunionsq
3 TH-width is fixed-parameter tractable
In this section we show that for constant k, k-probe threshold graphs can be
recognized in O(n3) time.
The following is one of the many characterizations of threshold graphs.
Theorem 2 ([4, 8, 16, 19]). A graph is a threshold graph if and only if every
induced subgraph has an isolated vertex or a universal vertex.3
The following theorem is a monadic second-order characterization. Problems
that can be formulated in monadic second-order logic can be solved on graphs
that have bounded rankwidth [5]. We will show that k-probe threshold graphs
have bounded rankwidth shortly.
Theorem 3. A graph G = (V,E) has threshold-width at most k if and only if there
exist k independent sets Ni, i = 1, . . . ,k, such that for every W ⊆ V, G[W] has an
isolated vertex or a vertex ω such that for every y ∈W −ω either ω is adjacent to
y or there exists i ∈ {1, . . . ,k} with {ω,y} ⊆ Ni.
Proof. This is inferred by Theorem 2 and Definition 1. uunionsq
3 A vertex x of a graph G is isolated if its neighborhood is the empty set. A vertex x of a
graph G = (V,E) is universal if N[x] = V.
3
There are a few drawbacks to this solution. First of all, Theorem 5 only shows
the existence of an O(n3) recognition algorithm; a priori, it is unclear how to
obtain an algorithm explicitly. Furthermore, the constants involved in the algo-
rithm make the solution impractical; already there is an exponential blow-up
when one moves from threshold-width to rankwidth.
In the next section we show that there exists an explicit, linear-time algo-
rithm for the recognition of partitioned k-probe threshold graphs.
4 Recognition of partitioned k-probe threshold graphs
In this section, let (G,N) be a partitioned k-probe threshold graph, consisting of
a graph G and a k-witness N.
Lemma 3. If G has an isolated vertex x then G is partitioned k-probe threshold
if and only if G − x is partitioned k-probe threshold with the induced collection of
independent sets. The same statement holds as well for the unpartitioned case.
Proof. Assume G is k-probe threshold. Consider an embedding H of G. Then
H− x is an embedding of G− x. Thus G− x is k-probe threshold.
Assume G − x is k-probe threshold. Let H′ be an embedding of G − x. Then we
obtain an embedding of G by adding x as an isolated vertex to H′. uunionsq
Theorem 6. For every k there exists a linear-time algorithm to check whether a
pair (G,N), where G is a graph and N a collection of k independent sets in G, is a
partitioned k-probe threshold graph.
Proof. Assume that (G,N) is a partitioned graph and let H be an embedding
of G. If H has an isolated vertex x, then x is also isolated in G since H is an
embedding of G. By Lemma 3 any isolated vertex may be safely removed from
G.
Now we may assume that any embedding H is connected. By Theorem 2 H has
a universal vertex ω. We call ω a ‘probe universal vertex’ of (G,N) if for every
nonneighbor z there is an independent set in N which contains both ω and z.
Thus any partitioned k-probe threshold graph has an isolated vertex or a probe
universal vertex. Finally, observe the following: if ω is a probe universal vertex
then G is k-probe threshold if and only if G −ω is k-probe threshold, since we
may add ω as a universal vertex to any embedding of G − ω and obtain an
embedding of G. Since k is a constant, an elimination ordering by isolated - and
probe universal vertices can be obtained in linear time. uunionsq
Remark 1. Note that the algorithm described in Theorem 6 is fully polynomial.
This proves that the ‘sandwich problem,’ studied by Golumbic et al., in [7], is
polynomial for threshold graphs.
5
Proof. Starting with any witness, repeatedly add a vertex x to an independent
set Ni if it has no neighbor in that set. uunionsq
Consider the equivalence relation≡ defined by x ≡ y ifN(x) = N(y). Denote
the equivalence class of a vertex x by (x). Define the partial order  by:
(x)  (y) if N(x) ⊆ N(y).
Likewise, we consider the equivalence relation ≡′ defined by x ≡′ y ifN[x] =
N[y]. The equivalence class of a vertex x under this relation is denoted by [x].
We consider the partial order defined by:
[x]  [y] if N[x] ⊆ N[y].
Lemma 5. Assume (G,N) is a k-probe clique with a well-linked witness N. Then
(x)  (y) ⇔ L(x) > L(y) 6= 0.
Proof. Assume (x)  (y). Thus N(x) ⊆ N(y). Assume that y ∈ Ni and x 6∈ Ni for
some i. Since N is well-linked there exists a vertex z ∈ N(x)∩Ni. Then z ∈ N(y)
since N(x) ⊆ N(y). But this contradicts {y, z} ⊆ Ni.
Assume L(x) > L(y) 6= 0. Then x and y are not adjacent. Let z ∈ N(x). Then
L(z) ⊥ L(x). Since L(x) > L(y) also L(z) ⊥ L(y). Thus z ∈ N(y) since (G,N) is a
k-probe clique. uunionsq
Note that Definition 2 is equivalent to the following characterization.
Theorem 9 ([4, 15]). A graph H is a threshold graph if and only if for every pair
of vertices x and y, N(x) ⊆ N[y] or N(y) ⊆ N[x].
In other words, a graph G = (V,E) is a threshold graph if and only if there is a
total order of the vertices [x1, . . . , xn], i.e., a chain, such that:
1 6 i < j 6 n ⇒ N(xi) ⊆ N[xj].
Theorem 10. Let (G,N) be a k-probe threshold graph with a well-linked witness
N and let H be an embedding. For every nonadjacent pair x and y in G with
NH(x) ⊆ NH[y]:
(x)  (y) ⇔ L(x) > L(y).
Proof. Assume L(x) > L(y). Let z ∈ NG(x). Then z ∈ NH[y]. Since x and y are
not adjacent, z 6= y. Thus z ∈ NH(y). If z 6∈ NG(y), then there exists an i with
{z,y} ⊆ Ni. Now L(x) > L(y) implies that also x ∈ Ni, which contradicts that z
is adjacent to x. Hence (x)  (y).
Assume (x)  (y), that is, NG(x) ⊆ NG(y). A fortiori, x and y are not adjacent.
Assume ¬(L(x) > L(y)). Then there exists an i with y ∈ Ni and x 6∈ Ni. Since N
is well-linked, there exists a vertex z ∈ NG(x) ∩ Ni. Since (x)  (y), z ∈ NG(y),
contradicting that z and y are both in Ni. uunionsq
7
Consider the partition of each level Ms into sets of vertices with the same label.
We call the sets of the partition of a level Ms the label-sets of Ms. Notice that
each label-set is a module in G. Since there is no k-probe module, each label-set
of nonprobes has at most 2 vertices and the label-set of probes has at most k+2
vertices. Thus
|Ms| 6 2(2k − 1) + (k+ 2) = 2k+1 + k.
By Theorem 10 a vertex x ∈ Ms is maximal if it has a label L(x) such that
all other label-sets L′ 6 L(x) in M0, . . . ,Ms are empty. It follows that there
are at most
∑k
i=0
(
k
i
)
= 2k label-sets of maximal vertices, at most 2k − 1 of
maximal nonprobes, each containing at most 2 elements, and at most one label-
set of maximal probes, containing at most k + 2 elements. Thus the number of
maximal elements is bounded by 2k+1 + k. uunionsq
Lemma 9. Assume G is a k-probe threshold graph without isolated vertices and
without k-probe module. There exists a set Υ, of size |Υ| 6 22(k+1) such that any
well-linked embedding of G has its set of universal vertices M0 ⊆ Υ. This set Υ can
be computed in linear time.
Proof. Since G has no isolated vertices, H has a set of universal vertices M0.
Start with Υ = ∅. Repeatedly compute the set of maximal vertices in G, add
them to Υ, and delete them from the graph. After at most 2k repetitions, each
label-set of M0 is contained in Υ. Since each set of maximal elements has at
most 2k+1 + k vertices,
|Υ| 6 2k(2k+1 + k) 6 22k+1 + 22k 6 22(k+1).
uunionsq
Definition 7. A probe universal set is a setU of labeled vertices such that for every
vertex x 6∈ U, there is a label for x such that U+ x is a partitioned probe clique.
Lemma 10. Let U be a probe universal set and let x 6∈ U be a vertex with minimal
neighborhood such that U′ = U+N(x) is probe universal with the same number of
nonempty label-sets as U. Then there exists an embedding such that U is universal
if and only if there exists an embedding such that U′ is universal.
Proof. By definition, the label-sets of U′ are modules that extend the label-sets
of U. This proves the lemma. uunionsq
Theorem 11. For each k, there exists an O(n2)-time algorithm for the recognition
of k-probe threshold graphs.
Proof. We may assume that G has no k-probe module. By Lemma 9 there exists a
constant number of feasible universal sets. By Lemma 10, if there exists a vertex
x that can be labeled such that N(x) extends the universal set in a way that does
not increase the number of nonempty label-sets in the universal set, then the
algorithm can greedily extend the universal set with N(x). Next the algorithm
removes the vertex x and tries to find another greedy extension.
9
References
1. Brandsta¨dt, A., V. B. Le, and J. P. Spinrad, Graph classes: A survey, SIAM Monographs
on Discrete Mathematics and Applications, Philadelphia, 1999.
2. Chang, M.-S., L.-J. Hung, T. Kloks, and S.-L. Peng, Blockgraph width, Proceedings of
TAMC 2009, Springer, LNCS 5532 (2009), pp. 150–157.
3. Chva´tal, V. and P. L. Hammer, Set-packing and threshold graphs. Technical Report,
Computer Science Department, University of Waterloo, Canada CORR 73-21, 1973.
4. Chva´tal, V. and P. L. Hammer, Aggregation of inequalities in integer programming.
In Studies in Integer Programming (P. L. Hammer, E. L. Johnson, B. H. Korte, and
G. L. Nemhouser eds.), Annals of Discrete Mathematics 1, North-Holland, Amster-
dam, 1977, pp. 145–162.
5. Courcelle, B. and S. Oum, Vertex minors, monadic second-order logic, and a conjec-
ture by Seese, Journal of Combinatorial Theory, Series B 97 (2007), pp. 91–126.
6. Golumbic, M. C., Algorithmic graph theory and perfect graphs, Academic Press, New
York, 1980.
7. Golumbic, M. C., H. Kaplan, and R. Shamir, Graph sandwich problems, Journal of
Algorithms 19 (1995), pp. 449–473.
8. Harary, F., The structure of threshold graphs, Decisions in Economics and Finance 2
(1979), pp. 169–172.
9. Hlineˇny´, P. and S. Oum, Finding branch-decompositions and rank-decompositions,
SIAM J. Comput. 38 (2008), pp. 1012–1032.
10. Hlineˇny´, P., S. Oum, D. Seese, and Georg Gottlob, Width parameters beyond tree-width
and their applications, Comput. J. 51 (2008), pp. 326–362.
11. Hung, L.-J., T. Kloks, and C. M. Lee, Trivially-perfect width, Proceedings of IWOCA
2009, Springer, LNCS 5874 (2009), pp. 301–311.
12. Hung, L.-J., T. Kloks, On some simple widths, Proceedings of WALCOM 2010,
Springer, LNCS 5942 (2010), pp. 204–215.
13. Kou, L. T., L. J. Stockmeyer, and C. K. Wong, Covering edges by cliques with regard
to keyword conflicts and intersection graphs, Communications of the ACM 21 (1978),
pp. 135–139.
14. Kruskal, J., Well-quasi-ordering, the tree theorem, and Vazsonyi’s conjecture, Trans-
actions of the American Mathematical Society 95 (1960), pp. 210–225.
15. Mahadev, N. V. R. and U. N. Peled, Threshold graphs and related topics, Annals of
Discrete Mathematics 56, Elsevier, North-Holland, Amsterdam, 1995.
16. Manca, P., On a simple characterization of threshold graphs, Rivista di Matematica
per le Scienze Economiche e Sociali 2 (1979), pp. 3–8.
17. McMorris, F. R., C. Wang, P. Zhang, On probe interval graphs, Discrete Applied Math-
ematics 89 (1999), pp. 287–295.
18. Niedermeier, R., Invitation to fixed-parameter algorithms, Oxford Lecture Series in
Mathematics and its Applications, Oxford University Press, 2006.
19. J. Orlin, The minimal integral separator of a threshold graph. In Studies in Integer
Programming (P. L. Hammer, E. L. Johnson, B. H. Korte, and G. L. Nemhouser eds.),
Annals of Discrete Mathematics 1, North-Holland, Amsterdam, 1977, pp. 415–419.
20. Oum, S., Graphs of bounded rank-width, PhD Thesis, Princeton University, 2005.
21. Oum, S., Rankwidth and well-quasi-ordering, SIAM J. Discrete Math. 22 (2008),
pp. 666–682.
22. Oum, S. and P. Seymour, Approximating cliquewidth and branchwidth, Journal of
Combinatorial Theory, Series B 96 (2006), pp. 514–528.
11
TWO-GRAPHS AND TREE-DECOMPOSITIONS
IN MEMORY OF J.J. SEIDEL
Ling-Ju Hung and Ton Kloks?
Department of Computer Science and Information Engineering
National Chung Cheng University
Min-Hsiung, Chia-Yi 621, Taiwan
hunglc@cs.ccu.edu.tw
Abstract. We show that all graphs that are equivalent to a graph G under
the Seidel-switch have rankwidth at most two more than the rankwidth
ofG. Let C be a 0/1-matrix. We investigate classes of graphs GC that have a
tree-decomposition such that every cutmatrix is similar to some submatrix
of C. We characterize the class GC for C =
(
1 1 0
0 1 1
)
. We also give an explicit
algorithm for the recognition of the switching class of distance-hereditary
graphs.
1 Introduction
In [11] Oum studies graphs that have a tree-decomposition such that every cut-
matrix has binary rank at most k. Here k is some fixed but otherwise arbitrary
number. Graphs of rankwidth k are of some importance to computer science
since problems that can be formulated in monadic second-order logic can be
solved in O(n3) time for these graphs.
A graph H that is obtained from a graph G by a series of local complemen-
tations and taking induced subgraphs, is called a vertex minor of G. Graphs of
rankwidth k are characterized by a finite obstruction set of forbidden vertex mi-
nors. The presence of a vertex minor can be formulated in C2MS-logic and this
shows that graphs of rankwidth k can be recognized in polynomial time. Also an
explicit recognition algorithm is reported.
In order to study the structure of graphs of rankwidth k we find it advan-
tageous to consider classes of graphs that have tree-decompositions such that
every cutmatrix is similar to a submatrix of some fixed matrix C. To make mat-
ters clear we need a few definitions.
Definition 1. A tree-decomposition of a graph G = (V,E) is a pair (T , f) where
T is a ternary tree and f a bijection from the leaves of T to the vertices of G.
Definition 2. Let (T , f) be a tree-decomposition of a graph G = (V,E). Let e be a
line in T and consider the two sets A and B of leaves of the two subtrees of T − e.
The cutmatrixMe is the submatrix of the adjacency matrix of G with rows indexed
by the vertices of A and columns indexed by the vertices of B.
? This author is supported by the National Science Council of Taiwan under grants
NSC 98–2218–E–194–004 and NSC 98–2811–E–194–006.
In this section we show that, if G has rankwidth k, then all graphs that are
switching-equivalent to G have rankwidth k+ 2.
Definition 4. Let G = (V,E) be a class of graphs and let S be a subset of vertices.
Switching G with respect to S is the operation that changes all the edges between
S and V − S into nonedges and that changes all the nonedges between S and V − S
into edges.
Switching defines an equivalence relation on the class of graphs with vertex
set V. The equivalence classes are two-graphs. Consider an arbitrary vertex x in
a graph G. If we switch G with respect to the neighborhood N(x) then the graph
changes into a graph in which x is an isolated vertex. Thus for every vertex x the
two-graph with vertex set V has a unique representative graph Gx in which x is
an isolated vertex.
In a classic paper Cameron investigates the class of graphs that has no in-
duced C5 in its switching class. Thus these are the graphs without induced C5,
bull, gem and co-gem. Alternatively, they can be characterized as the graphs in
which every induced subgraph with at least two vertices has a twin or an an-
titwin. This class is of interest to us because it consists of the graphs that have
a tree-decomposition in which every cutmatrix is shape-equivalent to some sub-
matrix of
(
1 0
0 1
)
.
Let C be a 0/1-matrix. Let G = (V,E) be a graph and assume that G has a
tree-decomposition (T , f) such that every cutmatrix is shape-equivalent to some
submatrix of C. Let S be a subset of vertices and consider the graph G′ obtained
by switching G with respect to S. Consider the cutmatrix Me induced by some
line e in T . Let S be a subset of vertices and let G′ be the graph obtained by
switching G with respect to S. If we consider the same tree-decomposition (T , f)
for G′ then the cutmatrix Me of e changes into some submatrix of(
C C¯
C¯ C
)
where C¯ is the matrix obtained from C by changing all the zeros into ones and
all the ones into zeros.
For example, cographs are the graphs that have a tree-decomposition such
that every cutmatrix is shape-equivalent to some submatrix of C =
(
1 0
)
. The
observation above shows that if H is switching-equivalent to a cograph, then H
has a tree-decomposition such that every cutmatrix is shape-equivalent to some
submatrix of (
C C¯
C¯ C
)
=
(
1 0 0 1
0 1 1 0
)
≡
(
1 0
0 1
)
.
Indeed, Cameron obtains the following characterization of the two-graphs
without induced C5. A graph G is in this class if and only if some, or also if every,
Gx is a cograph. Observe that if S is a set of vertices with exactly one element of
a twin then, if we switch the graph with respect to S, the twin changes into an
antitwin.
3
In the rest of this paper we consider classes of graphs that have a tree-
decomposition such that every cutmatrix is shape-equivalent to a submatrix of
Z =

1 0 0 1
0 0 1 1
0 1 1 0
1 1 0 0
 . (1)
Observe that GZ is a switching class of graphs. That is, if G ∈ GZ, and H is
switching-equivalent to G, then H is also in GZ. Notice that the switching class
of distance-hereditary graphs (and their complements) is a (proper) subclass of
GZ.
We end this section with two remarks.
Remark 1. Observe that the switching class of an independent set consists of
the complete bipartite graphs on that set of vertices. The switching class of a
clique consists of the complements of the complete bipartite graphs on that set
of vertices. Thus each such graph is a clique or consists of two disjoint cliques.
Remark 2. Notice that for any graph G with n vertices there exists a graph Gˆ
with 2n vertices such that any graph in the switching class of G is an induced
subgraph of Gˆ. This graph is defined by the following construction. First create
a twin x′ of every vertex x. Now switch this graph with respect to all the new
vertices, i.e., those that are not inG. This defines Gˆ. Consider a graphH obtained
by switching G with respect to some set S. Then H is isomorphic to the induced
subgraph of Gˆ defined by the following subset of vertices. For each pair {x, x′}
choose the vertex x if x 6∈ S and choose x′ if x ∈ S.
3 The switching class of distance-hereditary graphs
In this section we show that there exists an efficient algorithm that checks if a
graph is switching-equivalent to some distance-hereditary graph.
Distance-hereditary graphs are the graphs with rankwidth one. Thus they are
the graphs that have a tree-decomposition such that every cutmatrix has a shape
equivalent to some submatrix of
C =
(
1 0
0 0
)
.
If a graph G is switching-equivalent to some distance-hereditary graph then G
has a tree-decomposition such that every cutmatrix has a shape equivalent to
some submatrix of
Z =

1 0 0 1
0 0 1 1
0 1 1 0
1 1 0 0
 .
Let S(DH) denote the class of graphs that are switching-equivalent to a
distance-hereditary graph.
5
Lemma 4. Assume G ∈ S(DH) and S is a set of vertices such that switching G with
respect to S gives a distance-hereditary graph H. Assume that x is a pendant vertex
in H and also assume that y is its only neighbor. Without loss of generality we may
further assume that x ∈ S.
(a) If y ∈ S then NG(x) − y = V − S.
(b) If y ∈ V − S then NG(x) = V − S− y.
Proof. This is obvious. uunionsq
Lemma 5. AssumeG ∈ S(DH). Let S be a set of vertices such that switchingG with
respect to S gives a distance-hereditary graph H. Assume that x is an isolated vertex
in H. Without loss of generality we may assume that x ∈ S. Then NG(x) = V − S.
Proof. This is obvious. uunionsq
Assume G ∈ S(DH). Let S be a subset of vertices such that G switches to
a distance-hereditary graph H with respect to S. By Chang’s theorem every in-
duced subgraph of H has a twin, or a pendant, or an isolate. If a twin has exactly
one element in S then it is an antitwin in G. Lemmas 4 and 5 show that if H has
a pendant or an isolate, then the switching set S is determined by that vertex.
Theorem 3. There exists an efficient algorithm which recognizes S(DH)-graphs.
Proof. The algorithm repeatedly searches for twins and antitwins and removes
one of the two elements. If there are no more twins or antitwins then, if the
graph is in S(DH), it must switch to a graph having a pendant or isolated vertex.
The algorithm tries all pairs {x,y}. Then it switches the graph with respect to
N(x), and with respect to N(x)−y, and with respect to N(x)+y, and it uses the
algorithm of Chang et al. to check in linear time if one of the results is distance
hereditary. If this search is successful then the graph is in S(DH) and otherwise
it is not. uunionsq
4 GK-Graphs
In this section we study the class of graphs that have a tree-decomposition such
that every cutmatrix is shape-equivalent to some submatrix of
K =
(
1 1 0
0 1 1
)
. (2)
Our interest in this class stems from the fact that
K(2) =
(
K K¯
K¯ K
)
≡ Z,
where Z is the matrix given in Equation 1. Thus the switching class of GK is
contained in GZ. Notice that the complements of distance-hereditary graphs are
contained in GK.
7
Theorem 5. There exists an O(n3) algorithm that recognizes graphs of GK.
Proof. The characterization of GK given in Theorem 4 can be formulated in
monadic second-order logic. This proves the theorem since graphs of GK have
rankwidth 2. uunionsq
Remark 3. At the time of writing we have not found an ‘elegant,’ explicit algo-
rithm for the recognition of GK.
Remark 4. To characterize the class GZ, notice that if Gx is a graph in the switch-
ing class with an isolated vertex x, then Gx has a tree-decomposition such that
every cutmatrix is shape-equivalent to some submatrix of
K′ =
(
1 1 0 0
0 1 1 0
)
.
It follows that this class can be characterized in a similar fashion, namely by
allowing an additional distance-hereditary branch. We plan to elaborate on this
in the full version of this paper.
We failed in our quest to find an elegant characterization for these classes.
Notice that there is evidence for the conjecture that the class can be charac-
terized by a finite set of forbidden induced subgraphs apart from some infinite
collection of forbidden cycles [4, 9]. However, the size of the set makes also this
characterization unpalatable.
5 Concluding remark
Note that the general result, i.e., that the switching class of GC is the class GC(2) ,
where
C(2) =
(
C C¯
C¯ C
)
,
is not always true. For example consider the two matrices
A =
(
0 1 1 0
1 1 0 0
)
and B =
(
0 1 1
1 1 0
)
.
Obviously, GB is a proper subclass of GA, but
A(2) ≡ B(2) ≡

1 0 0 1
0 0 1 1
0 1 1 0
1 1 0 0
 = Z.
9
Theoretical Computer Science ( ) –
Contents lists available at ScienceDirect
Theoretical Computer Science
journal homepage: www.elsevier.com/locate/tcs
Block-graph width✩
Maw-Shang Chang a, Ling-Ju Hung a, Ton Kloks, Sheng-Lung Peng b,∗
a Department of Computer Science and Information Engineering, National Chung Cheng University, Chiayi 62107, Taiwan
b Department of Computer Science and Information Engineering, National Dong Hwa University, Hualien 97401, Taiwan
a r t i c l e i n f o
Keywords:
Probe graphs
Parameterized algorithms
Block graphs
a b s t r a c t
LetG be a class of graphs. A graphGhasG-width k if there are k independent setsN1, . . . ,Nk
in G such that G can be embedded into a graph H ∈ G such that for every edge e in H which
is not an edge in G, there exists an i such that both endvertices of e are in Ni. For the class
B of block graphs we show that graphs withB-width at most 4 are perfect. We also show
thatB-width is NP-complete and show that it is fixed-parameter tractable. For the class C
of complete graphs, similar results are also obtained.
© 2010 Elsevier B.V. All rights reserved.
1. Introduction
Let G = (V , E) be a finite, simple, and undirected graph in which V and E are the sets of vertices and edges of G,
respectively. Let G be a class of graphs. A graph G is a probe graph of G (or equivalently, probe G-graph) if its vertices can
be partitioned into a set P and an independent set N such that G can be embedded into a graph H ∈ G by adding edges
between certain vertices of N. The vertices of P are called probes and those of N are called nonprobes. The graph H is called
an embedding of G.
It is well known that graphs provide an important representation for modeling data (or information). Assume that
G = (P + N, E) is a probe G-graph. The relations between vertices in N are missed. The recognition problem of probe
G-graph for graph G is to ask whether we can add edges between vertices ofN such that the resulting graph is a G graph. The
recognition problem of probe interval graphs was introduced by Zhang et al. [14,21]. This problem stems from the physical
mapping of chromosomal DNA of humans and other species. Since then probe graphs ofmany other graph classes have been
investigated by various authors [1,3,4,13].
Since the relations between vertices in N are missed, vertices in N can be treated as polluted (e.g., by a drop of ink). In
this paper we generalize the concept of traditional probe graphs to k-probe graphs. That is, graph G is polluted by k drops of
ink. We define the following width parameter of graph classes.
Definition 1. Let G be a class of graphs. The G-width of a graph G is the minimum number k of independent sets N1, . . . ,Nk
in G such that there exists an embedding H ∈ G of G such that for every edge e = (x, y) in H which is not an edge of G there
exists an iwith x, y ∈ Ni. In the case that k = 1, G is a probe G-graph.
The collection of independent sets Ni, i = 1, . . . , k for which there exists an embedding H as stipulated in Definition 1
is called a witness of H . The G-width problem for G is to determine the G-width of G. We refer to the partitioned case of the
problem when a collection of independent sets Ni, i = 1, . . . , k is a part of the input; otherwise, it is an unpartitioned case.
For historical reasons we call the set of vertices P = V \ ki=1 Ni the set of probes and the vertices ofki=1 Ni the set of
nonprobes.
✩ A preliminary version of this paper appears in the Proceedings of TAMC 2009, LNCS, vol. 5532, 2009, pp. 150–157.∗ Corresponding author.
E-mail addresses:mschang@cs.ccu.edu.tw (M.-S. Chang), hunglc@cs.ccu.edu.tw (L.-J. Hung), slpeng@mail.ndhu.edu.tw (S.-L. Peng).
0304-3975/$ – see front matter© 2010 Elsevier B.V. All rights reserved.
doi:10.1016/j.tcs.2010.10.041
M.-S. Chang et al. / Theoretical Computer Science ( ) – 3
Proof. Suppose G has ℓ biconnected components C1, C2, . . . , Cℓ. Let H∗ be the graph (V ,∪ℓj=1E(H[Ci])). Note that a vertex
is a cutvertex of H∗ if and only if it is a cutvertex of G. We prove the lemma by showing that H∗ is a block graph embedding
of G.
Suppose that H∗ is not a block graph. Then H∗ has a forbidden induced subgraph which is a diamond or a hole. Let F be a
set of vertices that induces a forbidden subgraph. Thus H∗[F ] is either a diamond or a hole. All forbidden induced subgraphs
are biconnected thus F is contained in some Ci. But every H∗[Ci] is a block. This proves the lemma. 
Corollary 6. A graph G is a k-probe block graph if and only if there exist independent sets Ni, i = 1, . . . , k such that every
connected induced subgraph of G either
(1) has a cutvertex, or
(2) for every pair of vertices x and y either (x, y) ∈ E, or there exists an i ∈ {1, . . . , k} such that {x, y} ⊆ Ni.
Theorem 7. If k ⩽ 4, then k-probe block graphs are perfect.
Proof. Assume that G is a k-probe block graph. By Lemma 5, we can only focus on a biconnected component of G. Assume
that G contains an odd cycle Cr for an odd integer r . Consider an embedding H of G. Cr must be embedded into a clique Kr .
It is easy to see that there are r(r−1)2 edges in Kr . Thus we have to remove
r(r−1)
2 − r = r
2−3r
2 edges such that Kr becomes
Cr . Since r is odd, the maximum size of the independent set of Cr is r−12 . This independent set can become a clique of the
same size by adding (
r−1
2 )(
r−1
2 −1)
2 = (r−1)(r−3)8 edges. Thus we need at least
r2−3r
2
(r−1)(r−3)
8
= 4rr−1 independent sets to include the
removal edges. The minimum number of r is 5. That is, any k-probe block graph with k ⩽ 4 cannot contain an odd cycle Cr
for r ⩾ 5.
Nowwe consider Cr . To form Cr , we have to exactly remove edges of Cr from Kr . By definition, all the edges in Cr should be
contained in a sequence of independent sets. To avoid removal any edge in Cr , each edge of Cr must be contained in exactly
one independent set. Thus at least r independent sets are needed if G contains Cr . Since the minimum r is 5, any k-probe
block graph with k ⩽ 4 cannot contain Cr for odd r ⩾ 5. Therefore, this proposition holds. 
Corollary 8. If k ⩽ 4, then k-probe complete graphs are perfect.
Definition 9 ([17]). A rank-decomposition of a graph G = (V , E) is a pair (T , τ ) where T is a ternary tree and τ a bijection
from the leaves of T to the vertices of G. Let e be an edge in T and consider the two sets A and B of leaves of the two subtrees
of T − e. LetMe be the submatrix of the adjacency matrix of Gwith rows indexed by the vertices of A and columns indexed
by the vertices of B. Thewidth of e is the rank over GF(2) ofMe. Thewidth of (T , τ ) is the maximumwidth over all edges e in
T and the rankwidth of G is the minimum width over all rank-decompositions of G.
Lemma 10. Block graphs have rankwidth at most one.
Proof. Obviously, the class of graphs with rankwidth at most one is hereditary. This class is exactly the class of distance–
hereditary graphs [5,17]. Every block graph is a ptolemaic graph, and the ptolemaic graphs are the distance–hereditary
graphs that are chordal (see, e.g., [2]). 
Theorem 11. k-probe block graphs have rankwidth at most 2k.
Proof. Consider a rank-decomposition (T , τ ) with width 1 for an embedding H of G. Consider an edge e in T and assume
thatMe is an all-1s-matrix. Each independent set Ni creates a 0-submatrix inMe. If k = 1 this proves that the rankwidth of
G is at most 2. In general, for k ⩾ 0, note that there are at most 2k different neighborhoods from one leaf-set of T − e into
the other. A fortiori, the rank ofMe is at most 2k. 
Since a complete graph is also a block graph, we have the following corollary.
Corollary 12. k-probe complete graphs have rankwidth at most 2k.
Theorem 13. For each fixed k ⩾ 0 there exists an O(n3) algorithm which checks whether a graph G with n vertices is a k-probe
block graph.
Proof. k-probe block graphs have bounded rankwidth. Every graph problem specified by a formula of monadic second-
order logic (without edge set quantifications) can be solved in O(n3) time for graphs of bounded rankwidth [7,11,17]. By
Corollary 6, the recognition of k-probe block graphs is such a problem. 
Corollary 14. For each fixed k ⩾ 0 there exists an O(n3) algorithm which checks whether a graph G with n vertices is a k-probe
complete graph.
Remark 15. A graph is called a chordal graph if it does not contain any induced cycle Ck for k ⩾ 4. For a graph G, the
treewidth of G can be defined as theminimum value of themaximum clique sizes of all possible chordal graphs that contain
G as a subgraph minus one. Currently, we do not know that the relation between the B-width (or C-width) of G and the
treewidth of G. For the cycle Cn, its treewidth is 2. However, itsB-width (or C-width) is unbounded. Also, for a biconnected
probe complete graph, itsB-width (or C-width) is 1 but its treewidth is unbounded.
Remark 16. There is another graph width parameter, called cliquewidth. It should be noted that our complete-graph
width is very different from the cliquewidth. The cliquewidth of a graph is an integer that measures the complexity of
its composition by means of certain operations on vertex-labeled graphs [6].
M.-S. Chang et al. / Theoretical Computer Science ( ) – 5
Proof. If theB-width of G is at most k then the biconnected component Si is embedded as a clique. For every indicator L the
set CL = {x | L(x) = L} is a set of equivalent vertices. Since there are at most 2k of these indicators, there can be at most 2k
vertices in Ri since each vertex is a union of some of the sets CL. 
Definition 26. For a biconnected component Si, let Ri be its representative with vertex set V (Ri). For each vertex C ∈ V (Ri)
let Q (C) be a subset of labels. The setQ = {Q (C) | C ∈ V (Ri)} is a feasible extension of Si if
i. If C is an independent set then every label of Q (C) has at least one entry that is ‘1’.
ii. If C is a clique then Q (C) contains only one 0-label (the label that every entry is ‘0’).
iii. If C1 and C2 are adjacent in Ri then every pair q1 ∈ Q (C1) and q2 ∈ Q (C2) have no 1 in any common entry.
iv. If C1 and C2 are not adjacent in Ri then every pair q1 ∈ Q (C1) and q2 ∈ Q (C2) have a 1 in some common entry.
Definition 26 defines a possible assignment for finding k independent sets for a biconnected component in a k-probe
block graph. Intuitively, if C is an independent set, then vertices in C can form at least one Ni for some i. Thus at least one
entry of its label should be ‘1’. Note that since C is an equivalence class in the biconnected component, every vertex in C
admits the same label simultaneously. If C is a clique in G, then every vertex in C should be a probe. Thus only a 0-label is
suitable for C in this case. The other two cases are obtained by a similar argument.
Consider r label sets Q1,Q2, . . . ,Qr for some r ⩾ 1. Let the reduction of Q1,Q2, . . . ,Qr be ∩ri=1Qi.
Definition 27. For a cutvertex x, let Si, 1 ⩽ i ⩽ d, be the d biconnected components that contain x in G. Let Ci be the
equivalence class containing x in biconnected component Si. Let Qi be a label set of Ci in a feasible extension of Si. Then the
reduction Q of Q1,Q2, . . . ,Qd is a feasible extension of x if Q ≠ ∅.
Definition 28. For a graph G = (V , E), a label assignment π on V is feasible for G if π is a feasible extension for every
biconnected component and every cutvertex of G.
In a block-cutvertex decomposition tree T of G, we can take any cutvertex as the root of T . Thus we can treat T as a rooted
tree. By doing so, for a node i of T , we can define Ti to be the subtree of T with i as its root. Let Gi be the subgraph with Ti
being its block-cutvertex decomposition tree.
Lemma 29. For a graph G, G hasB-width at most k if and only if there exists a feasible label assignment on G.
Proof. Assume there exists a witness {Ni | i = 1, . . . , k} for the graph G. For every vertex x, we define its label as follows.
If x is a probe, then it is a 0-label. If x is a nonprobe, then its ith entry is 1 if x ∈ Ni. It is not hard to check that this label
assignment is feasible.
To prove the converse, consider a feasible label assignmentπ onG. ByDefinitions 26 and 27,Ni can be identified according
to the ith entry for each label. By definitions, vertices in Ni are independent. Thus theB-width of G is at most k. 
Theorem 30. For each fixed k there exists an O(n2)-time algorithm which checks if theB-width of a graph G is at most k.
Proof. The algorithm computes a witness for an embedding (if it exists) by dynamic programming on the block-cutvertex
decomposition tree T . By Lemma 29 it is sufficient to prove that the set of feasible labellings of each representative Ri can be
computed in constant time. By Lemma 25, there are at most 2k vertices in Ri. We try all possible combinations in Ri. There
are at most 2k possible labels. Thus there are 2k2
k
possible assignments for checking their feasibility. Each assignment can
be checked in time O(kC˙2
k
2 ) = O(k22k). Thus the total checking time is O(k22k+k2k) for each biconnected component Si. Since
there are O(n) node in T , the total checking time is O(n) if k is fixed.
If the graph is represented in an adjacent list with appropriate ordering, then Ri can be determined by using a keyword
tree structure [9] where NSi(x) is treated as a keyword for each vertex in Si. The details are as follows. At first, vertices in
V are ordered from 1 to n. In the adjacent list, vertices in N(x) are linked in the increasing order. That is, we have to sort
vertices in N(x) for every vertex x. This step takes O(n2) time. Then we build a keyword tree according to each N(x). It is not
hard to check that x and y share the same keyword if N(x) = N(y). The whole keyword tree can be constructed in O(m+ n)
time. That is, all Ri’s can be determined in O(m+ n) time. This proves the theorem. 
It is not hard to check that if G is biconnected then the C-width of G is equal to the B-width of G. Thus, we have the
following corollary.
Corollary 31. For each fixed k there exists an O(n2)-time algorithm which check if the C-width of a graph G is at most k.
5. B-width is NP-complete
In this section, we show that the problem of determining whether the G-width of a graph G is less or equal to k is
NP-complete if k is unbounded. We first consider the G-width problem where G is the class of complete graphs. We first
show that the C-width problem is NP-complete.
Theorem 32. C-Width is NP-complete.
M.-S. Chang et al. / Theoretical Computer Science ( ) – 7
[16] S. Oum, Rank-width and vertex-minors, Journal of Combinatorial Theory, Series B 95 (2005) 79–100.
[17] S. Oum, Graphs of bounded rank-width, Ph.D. Thesis, Princeton University, 2005.
[18] M. Petkovšek, Letter graphs and well-quasi-order by induced subgraphs, Discrete Mathematics 244 (2002) 375–388.
[19] R. Tarjan, Depth-first search and linear graph algorithms, SIAM Journal of Computing 1 (1972) 146–160.
[20] D.B. West, Introduction to Graph Theory, Prentice Hall, New York, 2001.
[21] P. Zhang, E.A. Schon, S.G. Fischer, E. Cayanis, J. Weiss, S. Kistler, P.E. Bourne, An algorithm based on graph theory for the assembly of contigs in physical
mapping of DNA, Comput. Appl. Biosci. 10 (1994) 309–317.
7. P. Raghavan: The quantitative analysis of user behavior online – data, models and
algorithms. Prabahkar Raghavan works for the Yahoo company. There he works
on obtaining a good search engine. There are various ways to measure how a user
acts on the search results that he is presented with. For example in the lab one can
measure eye-movements to measure which parts of the screen are looked at. Another
way to collect data is by ‘click-measures,’ where the entries that a user types on his
keyboard are monitored. The problem is not only the order in which the search
results are presented on the screen. Often the results are not simply listed in a linear
top-down order.
8. Richard Jozsa: Classical Simulation and Complexity of Quantum Com- putations.
R. Jozsa works at Cambridge University in the UK and is one of the founders of
quantum complexity. He explained that quantum complexity is closely related to the
probabilistic analysis of algorithms, but the measure is the L2-norm instead of the
L1-norm. One drawback is that it is impossible to track the algorithm’s performance.
He explained how the analysis of the enumeration algorithm of perfect matchings in
planar graphs (via permanents) gives a collection of transition matrices that can be
tracked satisfactory.
There were further a few talks on graph algorithms that are close to my own specific
interest:
1. Hening Fernau gave a talk on the directed maximum leaf spanning tree problem. I
think this is the first exact algorithm that computes a spanning tree with a maximum
number of leaves in a directed graph.
2. Maurice Jansen gave a talk on balancing bounded treewidth circuits. The idea is that
circuits what have bounded width have bounded treewidth. When I talked to him
at lunch he admitted to my assumption that these circuits have actually bounded
pathwidth.
3. N. Gravin talked about list colorings. Each vertex of the graph is equipped with some
list of colors and the objective is to obtain a good coloring of the graph such that
each vertex receives a color from its list. Gravin gave new bounds on the size of the
lists such that good coloring becomes feasible.
4. G. Ja¨ger talked about a SAT-based algorithm for finding a Hamiltonian cycle in a
graph. The algorithm is basically a heuristic, but he gave a nice enumeration algo-
rithm that searches through all of the possibilities via an enumeration of the satisfi-
able solutions of a formulation in a SAT-formula.
5. V. Bruye`re gave a talk on Equilibria in quantitative reachability games. The game
on graphs that she talked about was not a simple twopersons game where the two
persons compete with each other, but rather each player has a goal (a specified
2
Department of Computer Science
and Information Engineering
National Chung Cheng University
Ming-Shiun, Chia-Yi 621, Taiwan
Email: kloks@cs.ccu.edu.tw
Feb. 25, 2010
LS;
This letter contains a report of our visit to the WALCOM conference. The WALCOM
conference was held for the 4th time, and this year it took place in Dhaka, Bangladesh,
from Februari 10–12. It was the first time for me to visit this conference. The conference
covered areas in combinatorial graph algorithms, graph drawing, computational geometry,
graph theory, etc. This makes it a very interesting conference for me. The high standard
of the meeting can be seen from the high number of papers that were submitted (60)
compared to the limited number of papers that were actually chosen to be presented at
the workshop (23).
Let me start to say that I prefer small workshops like this to large conferences. The
reason for this is that at the small workshops you usually meet more people working in
the same area as you do. Note that there is an unfortunate confict since having your paper
at some of the large conferences tends to be better for your ‘image.’
I always find it useful to have a close look at the program committee before I submit
a paper to a conference like this. In this case the program committee consisted of people
like Tetsuo Asano, Satoshi Fujita, Brendan McKay, Janos Pach, Ryuhei Uehara etc. These
people give me some confidence that the program will be of interest to me. Also the fact
that Saidur Rahman was the main organizer of the workshop was good news to me since I
know this man as a good friend from an earlier visit to Japan, where he did his PhD under
Prof. Nishizeki. Indeed the program was to my liking. Our trip to Dhaka went smoothly.
My visa was in order, and Ling-Ju got her visa on arrival without much difficulties.
There was a certain emphasis on graph drawings in the workshop, prob- ably due
to the connections of Giuseppe Liotta with the organization of the workshop. Guiseppe
gave one of the invited lectures. He talked about Hamiltonian augmentation techniques
in graph drawing. I have to say that graph drawing is not my favorite topic. I find that
the methods that are used in this field are too ad hoc. That makes it hard to find a clear
direction of research in this field.
One of the other invited talks was by Tetsuo Asano. He talked about constant work-
space algorithms for shortest-path problems. I found this talk very interesting! It seems to
me that this research may have a lot of practical applications since hardware devices tend
not to have a lot of memory.
Another invited talk was by Janos Pach. He talked about crossings between curves with
many tangencies. As expected from an experienced speaker as this, his talk was ‘robust.’ I
am not an expert of geometrical problems (like he is), but he always manages to present
his talk in a clear fashion, such that it is of interest also to those that are not experts in the
field. Finally there was an invited talk on art gallery problems by Ghosh. This problem
4
國科會補助計畫衍生研發成果推廣資料表
日期:2010/12/07
國科會補助計畫
計畫名稱: 探測圖以及圖類別寬度的研究(2/2)
計畫主持人: 柯洛克
計畫編號: 98-2218-E-194-004- 學門領域: 計算機理論與演算法
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
