 1
 
中文摘要 
最近這幾年無線網路大量的被使用在日常生活上，而使用者的位置隱私也受到了很大
的威脅。在現有的無線區域網路的環境中，攻擊者會透過使用者不會改變的網路卡實體位
置來追蹤使用者。到目前為止有許多相關的研究是為了解決這個問題而提出來的，但由於
這些相關的研究並沒有將附近的行動裝置之移動行為列入考慮，所以這些研究的解決方法
會錯失許多可以改善使用者隱私的時機，也就是說現有的方法在交換網路卡實體位址的時
機並不一定是最好的；而且可能會造成許多不必要的交換網路卡實體位址，導致網路的效
能降低。因此，在本計劃中，我們以相對定位的方法為基礎來提高使用者的位置隱私；並
分析使用者附近行動裝置的移動行為來決定哪些行動裝置需要交換其網路卡實體位置。而
經由實驗結果得知，我們的方法與現有的方法比較雖然會稍微減低網路流量，但確實能減
低其網路卡實體位置的交換次數，也提高了使用者的位置隱私。 
 
關鍵字：位置隱私、無線區域網路、網路卡實體位置、相對定位技術、移動行為。 
 
Abstract 
The widespread deployment of wireless local area networks (WLAN) has introduced 
location privacy risks to wireless users, which enabled malicious individuals online to infer users’ 
private information or remotely locate them through the fixed MAC address. While a number of 
research studies have been proposed in order to solve the problems, they have not considered the 
influence of mobile behavior between neighboring nodes. Therefore, these research solutions 
may overlook the opportune moment updating the MAC address to improve or secure a user’s 
location privacy. In other words, existing schemes may encounter difficulties seizing the 
opportune moment when updating the MAC address. Furthermore, many unnecessary MAC 
updates result in the major network throughput decrease. In this project, we propose a relative 
position-based scheme to improve a user’s location privacy by analyzing his/her mobile 
behaviors. This scheme requires each mobile station related to the same access point to collect the 
received signal strength from one another, and the measured data will be transmitted periodically 
to a centralized server in order to determine which station’s MAC address should be updated. The 
results of this experiment have proved that there is a little decrease in the network throughput 
under the proposed scheme; however, they certainly reduce MAC address update frequency as 
well as enhance a user’s privacy location.  
   
Key words: Location privacy, WLAN, MAC address, relative- positioning technology, mobile 
behavior. 
 
 
 3
address是隨機經由hash function所產生的。新MAC address是隨機從248 的MAC address 
pool中選擇的。所以這個結構使行動裝置只能夠在特定時間改進他們的MAC address。
假設一個攻擊者已經入侵了一些AP；並且透過這些AP的連線記錄來跟蹤一個使用者的
行動，則威脅到位置隱私的只在一些AP的涵蓋範圍內。但是如果一個攻擊者使用RSS
與TOA的跟蹤方法跟蹤一個使用者，則這個結構將不能有效的防範這種攻擊。 
2. SWAP approach[4][17]  
這個SWAP approach讓接近的使用者能夠交換他們的MAC address，其MAC 
address pool容量比一次性的方法小的多。SWAP approach有下列優勢：這種方法全部
不需要節點同時不斷更改他們的MAC address，使用更少節點參加交換而可以得到相同
的混亂效果不需要偵測MAC address的碰撞；但是這個方法會有很大的花費是在交換身
分的溝通上[17]。 
 沉默區間[10] 
沉默區間是用來減少攻擊者將新的MAC address跟舊的連起來的機會[10]。沉默區間就
是要行動裝置進入一個短時間的無通訊狀態，在這狀態下更新他的MAC address，無通
訊狀態時間結束了之後就使用這新的MAC address。沉默區間的過渡時期是一個可變的
長度而使用者在這段期間不可以透露任何有關新舊位址的資訊。採用沉默區間，將可
以減低空間和時間的關連性攻擊，因為使用者在沉默區間這段時間不能傳送任何訊
息，攻擊者將沒有辦法得知使用的行動資訊。雖然與Disposable approach比較起來，這
個方法提供更多的保護，但是使用者不能更長時間的進入WLAN。因此，這個結構是
在位置隱私和性能之間的取捨。 
 減輕網路負載的結構[6] 
採用只用一次的MAC address使網路負載加大，重新與AP做連結之時間達2.5秒，這個
過程會降低使用者的處理速度。因此，減輕網路負載的結構[6]從可變MAC address以及
建立可以信任的中心伺服器取得進出封包的有利特徵。透過中心伺服器以及行動裝置
之間的合作，這些行動裝置能有效減短每次更換MAC address需要重新連線的時間。 
 使用者中心的結構[4]  
使用者中心的結構提議使那些使用者能夠確定在哪裡或什麼時候更改他們的MAC 
address。這個結構採用每個行動裝置都有GPS功能，並且能自我設定關於地圖需要的
位置，也能預料使用者的速度變化。每位使用者只在他更改速度或者方向時更改其
MAC address。然而，如果想增加改進位置隱私需要額外的硬體花費。 
跟據前面所說現有的幾種方法，而其中有幾個方法對於某種的攻擊有較好的防治效果
但是也會被其他某種攻擊所威脅。 
 
3. 研究方法 
3.1 系統設計理念 
 我們的方法最主要是使用動態的 MAC address 來避免攻擊者的追蹤，以及能降低不必
要的花費，以相對定位的方法為基礎來提高使用者的位置隱私，並分析使用者附近行動裝
置的移動行為來決定哪些行動裝置需要交換其網路卡實體位置。 
 無法追蹤的MAC Address  
為了阻止攻擊者透過固定不變的MAC address跟蹤，必須採用動態的MAC address。也結合
 5
3.2 系統架構 
系統的架構如圖二所示，其符號及運作說明如下： 
 Assignment Server(AS)： 
首先建立一個可以相信的 Server 來做計算行動裝置的移動行為以及決定哪些行動裝置
要交換 MAC address，此一可加強隱私指定的可信的 server 為 AS，這個 Server 是要可
以被相信以及安全的，  以及要有 Authentication (確認)、Authorization (授權)及 
Accounting (記錄)的功能。AS 中將會有一個 table 來記錄 AS 底下的 AP，並將每個 AP
分成一個群組，每一群組內有所有在此 AP 下的 MS，且將 MS 的 MAC address 記錄在
table 內。 
 
圖二：系統架構 
 
 Access Point(AP) 
我們使用的 AP 跟平常的 AP 大致上都相同，只是在行動裝置與 AP 建立連線後，AP
要與 AS 溝通，AP 已加入了一個新的行動裝置，則 AS 要去更新 table 裡的資料。 
 Mobile Station(MS) 
每個行動裝置都會有一個使用者的 table，記錄了所有與自己使用同一個 AP 的其他使
用者的 MAC address，行動裝置會依照這個 table 蒐集彼此的訊號，以及 AP 的訊號，
傳回給 AS，AS 則會根據這些資料算出 MS 的移動行為，來決定要交換的使用者。 
接下來介紹所使用到的一些函數以及符號： 
ui：表示使用者 i 
APλ：表示編號λ的 AP 
dij：表示 ui與 uj之間的距離 
Ek(m)：表示使用 key K 將訊息 m 加密 
Sk(m)：表示使用 key K 將訊息 m 加上簽章 
MACi：表示使用者 i 的 MAC address 
}-{uG i
MAC  ：在 Gλ內所有的使用者除了 ui 以外其他使用者的 MAC address 
SSi：表示 ui的訊號強度 
AS   
MS1
AP
MS2
MS3
MS4
AP2  
MS5   
MS6  
 7
測，再根據這些移動行為做一些計算後，再決定哪些行動裝置需要交換其 MAC address，
此時 AS 會先更新 Gλ的 table，再傳封包給需要交換 MAC address 的行動裝置，其中包含了
需要交換的新 MAC address  
MAC-Change [ 
juPK
E (new 'jMAC ||TS|| ASSKS (new 
'
jMAC ||TS))]。 
uj在收到這個封包以後將會依照內容來交換 MAC address，並且在交換 MAC address 的期
間，使用者將無法傳送任何訊息，而交換完 MAC address 之後則會繼續蒐集訊號強度，並
且每秒傳送 Signal-Resp 給 AS 直到離開這個 group。當使用者 uj離開這個 group 則 AP 將會
發送離開的訊息給 AS 
Leave [ 
ASPKE (
'
jMAC || APMAC ||TS|| APSKS (
'
jMAC || APMAC || TS))] 。 
而 AS 收到以後則會將 'jMAC 及 MACj從註冊表中刪除，並且發送 Table-Update 封包給還
在這個 group 裡的所有使用者來更新他們的 table 以及新的
GGK'   
Table-Update [ GGKE (delete ||
'
jMAC || GGK' ||TS|| ASSKS (delete ||
'
jMAC || GGK' ||TS))] 。 
 
3.2.2 相對定位 
 使用者必須蒐集在自己所屬的群組中除了自己以外的其他行動裝置以及 AP 的訊號強
度，並且傳送給 AS，而 AS 在收到這些訊號強度以後將會依照其損失的訊號強度來計算出
兩者之間的距離，這個轉換的部分在不同的環境中會有不同損失訊號強度的模型，基礎式
子如下[7][19]：  





0d
dPL(d) ，PL 為平均了損失，ψ表示平均損失速度增加的指數，d 為發送者與
接收者之間的距離，d0 為參考距離。 
AS 在收到了所有行動裝置所回傳的訊號強度以後，依照損失訊號強度的模型將數據轉換成
距離，並且會建立一個矩陣 DM(Distance Matrix)來存轉換以後的距離如下： 
 
 
 
 
DM= 
 
 
 
 
 



















nAPnnnjnnn
iAPinijiii
APnj
APnj
APnj
n
i
nj
dddddd
dddddd
dddddd
dddddd
dddddd
u
u
u
u
u
APuuuuu










321
321
333333231
222232221
111131211
3
2
1
321                
 9
來求出移動向量，假設 ui 原本的座標為( iuX , iuY )而新座標為(
'
iuX , 
'
iuY )，則移動向量
iuMV 為((
'
iuX - iuX ),(
'
iuY - iuY ))。將所有的向量都算出來以後存在 table 中，然後 AS 會
去算出其向量的夾角來做為之後決定哪些行動裝置要交換 MAC address 的依據，算法如圖
四，算完以後會將所有的角度存到 AM(Angle Matrix)之中，以便之後的運用。 
 
 
 
 
 
 
 
 
     AM= 
 
 
 
 
 
圖四：移動方向夾角 
 
最後要決定哪些行動裝置需要交換其 MAC address，我們的方法是當有一個使用者提出保
護位置隱私的要求，則 AS 會在 DM 中去檢查有哪些行動裝置與此使用者的距離在一個範
圍內，並且再去 AM 中檢查這些行動裝置與此使用者移動行為的夾角，若夾角小於所定的
角度則這些行動裝置則會加入此次交換 MAC address 的群組中，夾角若大於我們所定的角
度則不會在此次交換 MAC address，決定了哪些行動裝置要交換，以後 AS 則會亂數決定如
何交換群組中的 MAC address 並且傳送 MAC-Change 給這些行動裝置。 
 
4.實驗結果 
 接下來介紹實驗的環境，使用的模擬軟體為NS2，模擬的環境範圍是設定為
100*100m2，網路最大流量設定為100Mb/sec，在這個範圍裡的行動裝置有100個，所有行動
裝置是隨機移動的，而速率則會在0~3 m/s之間，速率的變化則以1m/s2為基準，假設加速、
維持不變或減速的機率設定為 [P+ , P0 , P-]=[0.1 , 0.8, 0.1]，在每3~5秒之間移動節點會依照










nnnnn
n
n
n
n
n
u
u
u
u
uuuu











321
3333213
2232212
1132111
3
2
1
 3       2   1      









 
ji
ji
uu
uu
ij
MVMV
MVMV1cos
θij  
θ
uMV
uMV
uMV
 11
在圖五：五中可以看到在所定的夾角為 22.5 度時 4 種設定的範圍所得到的結果，由圖
中可看出範圍定為 5m 時，測試出來的成果比範圍設定 10m 時還差，因為在範圍定為 5m
時符合夾角為 22.5 度的行動裝置數量比範圍定為 10m 的少，而且不足以混亂攻擊者，雖然
在範圍 10m 的行動裝置數量比範圍為 15m 及 20m 的少，但是可以達到混亂的效果，所以
範圍為 15m 及 20m 的行動裝置數量雖多但多數為沒有必要的交換；而在圖六也可以發現同
樣的情形，在 45 度中範圍設定為 5m 的行動裝置數量都少了一點，而設定為 15m 及 20m
的則是多了無效的交換，所以將每一個角度中範圍為 10m 的拿出來做比較，如圖七所示在
所有範圍為 10m 的情形，可以觀察在 45 度的混亂效果較好，因此把範圍設在 10m 而夾角
設為 45 度，並且跟以前的方法做一些比較。 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
1 2 3 4 5 6 7 8 9 10 11 12 13 14
Change Round
Pe
rce
nta
ge
 of
 N
od
es
angle-22.5
angle-45
 
圖七：各個夾角在範圍設定為 10m 的實驗結果 
 
與只交換 MAC address 的方法[9]以及 2 秒的沉默區間的方法[10]做比較，結果如圖八
所示，可以看到在交換 3 次以後，我們的方法只剩下 40%可以被追蹤到，而[10]還有 60%
的可以被追蹤到，[9]還有多達 80%的行動裝置可以被追蹤，而在圖九中可以看見我們的方
法要讓所有的行動裝置都不會被追蹤到需要 8 次，[10]需要 14 次，而[9]則需要 26 次，由
此可知我們的方法確實可以減少交換的次數，並且可以更有效的保護使用者的隱私。 
0
0.2
0.4
0.6
0.8
1
1 5 9 13 17 21 25
Change Round
Pe
rce
nta
ge
 of
 N
od
es only change MACaddress[11]
change MAC
address with 2s
silent period[13]
the proposed scheme
 
圖八：位置隱私保護效果之比較 
 13
[4] S. Capkun, M. Hamdi, and J. Hubaux, “GPS-free positioning in mobile ad-hoc networks” in 
Proc. of the 34th Annual Hawaii Int’l Conf. on System Sciences, vol. 9, 2001: pp.157-167. 
[5] D. Chaum, “Untraceable electronic mail, return addresses and digital pseudonyms, ” Comm. 
ACM, vol. 24, no. 2, 1981:pp. 84-88. 
[6] K. E. Defrawy, C. Soriente, “PEUC-WiN: privacy enhancement by user cooperation in 
wireless networks” in Proc. IEEE Workshop on Secure Network Protocols, 2006: pp.38-43. 
[7] V. Erceg, L.J. Greenstein, S.Y. Tjandra, S.R. Parkoff, A. Gupta, B. Kulic, A.A. Julius, R. 
Bianchi, ”An empirically based path loss model for wireless channels in suburban 
environments” Digital Object Identifier: 10.1109/GLOCOM.1998.776865, vol. 17, Issue 7, 
1999: pp.1205-1211 
[8] A. Gorlach, A. Heinemann and W. W. Terpstra, “Survey on location privacy in pervasive 
computing.” Privacy, Security, and Trust Within the Context of Pervasive Computing 2004: 
pp. 24-34. 
[9] M. Gruteser and D. Grunwald, “Enhancing location privacy in wireless LAN through 
disposable interface identifiers: a quantitative analysis” in Proc. of 1st ACM Int’l workshop 
on Wireless mobile applications and services on WLAN hotspots, 2005: pp.315-325. 
[10] L. Huang, K. Matsuura, H. Yamane, and K. Sezaki, “Enhancing wireless location privacy 
using silent period” in Proc. IEEE Wireless Commun. Netw. Conf. ,2005: pp.1178-1192. 
[11] T, Jiang, J. W. Helen, Y. C. Hu,”Preserving location privacy in wireless LANs” in Proc. the 
5th Int’l conf. on Mobile systems, applications and services, 2007: pp.246 – 257. 
[12] A. Juels, R. L. Rivest and M. Szydlo, “The blocker tag: selective blocking of RFID tags for 
consumer privacy” in Proc. of 10th ACM Conf. on Computer and Commun. Security,  2003: 
pp.103-111. 
[13] H. Kido, Y. Yanagisawa and T. Satoh, “Protection of location privacy using dummies for 
location-based services” in Proc. of the 21st Int’l Conf. on Data Engineering, 2005: 
pp.1248-1253. 
[14] A. Kushki, K. N. Plataniotis and A. N. Venetsanopoulos, “Location tracking in wireless local 
Area networks with adaptive radio maps” IEEE ICASSP, 2006: pp. 741-744. 
[15] A. M. Ladd,  K. E. Bekris, A. Rudys, L. E. Kavraki and D. S. Wallach, “Robotics-based 
location sensing using wireless ethernet” Wireless Networks, vol. 11, no. 1-2 ,2005: 
pp.189-204. 
[16] M. Li, K. Sampigethaya, L. Huang and R. Poovendran, “Anonymity: swing & swap: 
user-centric approaches towards maximizing location privacy” in Proc. of the 5th ACM 
workshop on Privacy in electronic society, October 2006: pp.19-28. 
[17] L. Ming, H. Xiaoyan, S. V. Vrbsky, “Protecting location privacy with dynamic Mac address 
exchanging in wireless networks” Global Telecommunications Conference, 2007: pp.49-53. 
[18] K. Muthukrishnan, N. Meratnia, M. Lijding, G. Koprinkov, P. H., “WLAN location sharing 
through a privacy observant architecture” in Proc. Int’l Conf. Communication System 
Software and Middleware 2006, paper no. 43. 
[19] S. Phaiboon, ” An empirically based path loss model for indoor wireless channels in 
laboratory building” in Proc. of TENCON’02 Oct. 2002: pp.1020-1023. 
 1
出席國際學術會議心得報告 
                                                             
計畫編號 NSC97-2213-E-158-003 
計畫名稱 在無線區域網路中增進位置隱私之研究 
出國人員姓名 
服務機關及職稱 吳金雄 實踐大學 資訊科技與通訊學系教授兼副教務長 
會議時間地點  2009 年 8 月 25 日至 27 日 韓國首爾 
會議名稱 2009 Fifth International Joint Conference on INC, IMS and IDC 
發表論文題目 Detecting Unknown Malicious Executables Using Portable Executable Headers 
 
 
一、 參加會議經過 
International Joint Conference on INC, IMS and IDC 是由 AICIT 學會（The 
world’s leading research association of Theory, Development, Applications, 
Experiences, and Evaluation of Multidisciplinary and Hybrid/Convergent 
Research/ Technology/Service）所主辦的國際研討會，協辦單位是 IEEE 
Computer Society，今年是第 5 屆，於 8 月 25 日至 27 日由韓國 Sogang與
首爾大學合辦，在韓國首爾市的 Grand Hilton Seoul 飯店舉行，為國際間網
路運算，資訊管理與數位多媒體技術相關領域之重要研討會，提供學者
學術及技術交流聚會。本研究計畫主要是研究區域網路中的安全性，能
出席此國際學術盛會交換研究心得以及最新知識，深感榮幸！ 
我於8 月23 日先從高雄機場搭乘中華航空班機直飛韓國仁川國際
機場，看到仁川國際機場的設備新穎，服務人員的親切，難怪這些年來
韓流能席捲亞洲。會場有很多來自31個不同國家的學者與會，包括美加
地區、澳洲、歐洲、印度、俄羅斯、日本等，但還是以韓國人及華人學
者居多，而承辦及接待人員幾乎都是韓國人，但中國大陸學者及留學生
參加的人數却比主辦的韓國人還多，可見大陸這些年來非常重視國際學
術交流。25日晚上的開幕餐會，為來自世界各地的專家學者洗塵，會中
並有當地特色的表演，在餐會中結識了大陸學者及一些來自台灣的研究
生，他們與大陸的研究生很快就打成一片，畢竟在國外的環境中，同文
同種比較容易交談。三天的議程分成分4組同時進行，共同52個sessions，
 3
學者嚴格審查，共有399篇被接受，接受率為29.6%，可謂質與量俱佳。
而本研究的主要貢獻在於整合靜態與動態的分析技術去蒐集、分析惡意
程式的Portable Executable Headers，再利用資料探勘(Data Mining) 技
術來萃取有用的資訊當做惡意程式特徵，我們以資料探勘及機器學習技
術的結合，來發展偵測未知惡意程式（virus, email worm, trojan and 
backdoor）的系統。本論文安排於在8月26日下午發表，當場並獲得與會
學者許多寶貴的意見。 
 
二、 與會心得 
大會費心安排與組織會議內容，內容既多元又豐富。除研究成果的
分享外，亦有專題演講、口頭報告、餐會、研討會、壁報論文、當地旅
遊等不同型態的研究分享及各項社交活動；總發表論文有399多篇文
章，有機會能參與此國際研討會，與國內外此一領域學有專精之大師同
台研討，興奮之情溢於言表。雖然會場很多華人及韓國人，令人感到他
鄉遇故知，但我真的學習到英文真的很重要，會場更是一場國際交流的
舞台，若英文表達能力不好，如何與人溝通呢？  
台灣過去在國際學術有很好的表現，但面臨中國大陸與韓國的崛
起，台灣的學術地位也受到很大的挑戰。個人覺得中國大陸與韓國的學
術研究機構、風氣、能力與成果，這些年來已比臺灣強很多。而大陸與
韓國的留學生也向世界各知名大學發展，踴躍參與國際研討會，尤其他
們的旅外學者相關團結，努力爭取各種國際會議主辦權，再將下屆移往
中國大陸舉行，內外合作已在國際間打響知名度，其在學術上之發展，
Detecting Unknown Malicious Executables Using Portable Executable Headers 
 
Tzu-Yen Wang 
Dept. of Computer Sci. 
National Chiao Tung Univ. 
Hsinchu, Taiwan 
tzu-yen.wang@hotmail.com 
 
Chin-Hsiung Wu* 
Dept. of Info. Tech. & Comm.  
Shih Chien Univ. Kaohsiung Campus, 
 Kaohsiung, Taiwan 
chwu@mail.kh.usc.edu.tw 
Chu-Cheng Hsieh 
Dept. of Computer Sci.  
Univ. of California,  
Los Angeles, USA 
chucheng@ucla.edu
 
Abstract—Even though numerous kinds of anti-virus software 
packages have been used for many years, previously unseen 
malware is still a serious threat to computer and information 
system. By analyzing portable executable header entries of 
executables, a malware detection model which consists of four 
stages: attribute extraction, attribute binarization, attribute 
elimination, and feature selection and classifier training was 
carried out in this study. First, we collected header entries 
from all executables in our dataset and viewed each entry as a 
potential attribute. Second, information gain and gain ratio 
were used to binarize numerical and nominal attributes. Next, 
useless and redundant attributes were eliminated in the third 
stage. Finally, by using support vector machine which is a 
classification algorithm of conspicuous generalization ability, 
feature selection was simultaneously performed with classifier 
training to reduce the number of attributes and retain the 
performance of classifier in a cost-effective. We evaluated our 
model by 1,908 benign programs and 7,863 malicious files 
(virus, email worm, trojan and backdoor) and estimated its 
generalization ability by cross validation. The experiment 
results showed that our model had promising performance for 
detecting virus and email worm.* 
Keywords- previously unseen malware; information gain; 
gain ratio; feature selection; support vector machine 
I.  INTRODUCTION 
Malware, which refers to codes performing malicious 
activities such as crashing computer systems, jamming 
network flows and stealing personal information, etc., has 
been a notorious threat to information security for nearly 30 
years. Commercial anti-virus packages, which have been 
widely used for malware detection, seemed to be reliable to 
fight against malicious codes. In general, these commercial 
programs are based on signatures generated by both static 
analysis and dynamic analysis. Static analysis usually 
constructs signatures by segmenting the binary code 
sequences from known malware while dynamic analysis 
executes the malware in a safe environment and observes its 
own behaviors. By matching malware to those predefined 
patterns, anti-virus software could accurately detect known 
malicious codes without any false alarm. However, 
according to the report from AV-Comparatives.org1 in May 

*Corresponding author. This work was partially supported by the National 
Science Council under the contract no. NSC-97-2221-E-158-003. 
1 www.av-comparatives.org/ 
2008, the proactive detection abilities of sixteen anti-virus 
software packages were examined by detecting new 
malicious code without updating their virus definitions. The 
examination results were utterly unsatisfying that none of 
them had proactive detection rate higher than 60%. 
Therefore, the main problem of current signature-based 
method is that it is ineffective against zero-day attacks 
launched by previously unseen malicious files or even 
polymorphic ones due to the lack of virus definitions of them. 
Every minute people wait for an update of virus definitions is 
another minute that their computer is vulnerable to any 
vicious damage. Hence it is no doubt that malware is 
remaining a noticeable security challenge and the needs of 
continuing improvements in unknown malware detection 
methods are crucial. 
The goal of this research is to propose a novel model to 
detect unknown malware in Portable Executable (PE) [13] 
format since it is the most wildly distributed type of 
malicious codes. To fulfill the purpose of preventing 
malware from crashing users’ computers, we adopted static 
analysis method to exploit the information of PE headers 
entries. With the assistance of Support Vector Machine 
(SVM) [20], which is a classification algorithm of 
conspicuous generalization ability, these attributes could be 
used to construct an effective and reliable model to 
distinguish malicious executables from benign programs. 
The rest of this paper is divided into five sections. The 
first section is devoted to some related studies in the area of 
unknown malware detection. After which the second section 
sketches the content of PE header entries. This is followed 
by the methodology and procedures of our malware 
detection model. The experiment results for detecting 
unknown malware are illustrated in the next section. Finally, 
some concluding remarks and future works are made in the 
final section. 
II. RELATIVE WORKS 
Owing to the lack of proactive detection ability of 
nowadays commercial virus scanners, considerable concern 
has arisen over the field of unknown malware detection. To 
detect previously unseen malware in advance, we only 
focused on the use of static analysis methods and data 
mining techniques in this study and gave some literature 
review which is related to our work in this section. 
Schultz and Zadok [15] presented some kinds of features 
such as Dynamic Linked Libraries (DLLs), Application 
2009 Fifth International Joint Conference on INC, IMS and IDC
978-0-7695-3769-6/09 $26.00 © 2009 IEEE
DOI 10.1109/NCM.2009.385
278
 
Figure 2. Malware detection model 
A.  Data collection 
Due to the lack of a public dataset to evaluate our model, 
we must collect both benign and malicious executables by 
ourselves. Our dataset was made up of 1908 benign 
programs and 7863 malware (913 viruses, 808 email worms, 
2809 trojans and 3333 backdoors). All of them were PE-
formatted executable files. Those malicious binaries were 
acquired from VX Heaven2 and each of them was identify 
by Kaspersky anti-virus software3. Note that we examined 
only the loader programs for viruses; we did not include 
infected executables in our study. Besides, the benign 
programs were obtained from pure installations of Windows 
2000 and XP operating system plus several common user 
applications acquired from the web site PChome4. Similarly, 
these benign programs were also verified by the same anti-
virus software to guarantee that they were not composed of 
any malicious codes.  
B. Attribution extraction 
To characterize executables, we first utilized a tool called 
DUMPBIN which is provided by Microsoft to dump the 
entries of PE headers of each file. Viewing every header 
entry as a potential attribute, we calculated and visualized the 
number of appearance of every attribute by category and 
conducted a total census for further analyzing. An example is 
given in Table 1 and Fig. 3. 
TABLE 1. CENSUS OF HEADER ATTRIBUTES 
Entry 
Name 
Entry 
Values 
# of appearance 
Benign Virus Email Worm Trojan Backdoor
# of 
sections 
1 1 1 0 26 7 
2 23 12 18 36 19 
3 652 180 428 1186 1377 
4 517 482 153 306 290 
... ... ... ... ... ...
18 1 0 0 0 0 
1D 1 0 0 0 0 
.reloc 
section 
True 521 647 230 1060 1429 
False 1387 266 578 1746 1904 

2 vx.netlux.org 
3 www.kaspersky.com 
4 toget.pchome.com.tw
 
 
Figure 3. Visualization of header attributes. Top: The number of section. 
Bottom: Existence of reloc section. 
C. Attribute binarization 
Although SVM is able to process data of rational 
attribute values, we converted every numerical or nominal 
PE header field into a binary attribute for the sake of 
simplifying the training process. For the case of numerical 
attribute, after sorting the values of an attribute, we bisected 
the values so that a split point could be chosen if its resulting 
two intervals are purely distributed over the classes. 
Similarly, nominal attributes can also be binarized by 
repeatedly grouping all values except the one of interest 
together as a negation of this value.  
To measure the purity of intervals, two entropy-based 
methods- information gain and gain ratio were considered as 
discretization strategies. Information gain (IG), which 
computes the discrimination of an attribute, was proposed by 
Quinlan [14] in 1986. Let X be a finite set of examples, if 
there are m classes {C1, C2, ..., Cm} in X, the entropy of X is 
defined in (1), where Pi is the proportion of class i. H(X) 
measures the randomness of the distribution of examples in 
X over m possible classes. Suppose that Y = {ଵ, ଶ, …, ୮} 
is a set of attributes and each attribute ୮  has k values 
{ଵ୮,ଶ୮, ..., ୩୮}, (2) implies the entropy of X conditioned by 
the values of ୮. Then IG is given by (3) where |୨୮| is the 
number of examples in X having attribute ୮with value ୨୮. 
The amount of (3) reflects additional information about X 
provided by ୮ . The higher the IG is, the purer of the 
distribution of examples in X over m possible classes we 
have. We modified (3) into (4) to help us to decide the 
splitting value ୱ୮  of ୮  which makes highest IG for a 
280
σ െ ଵଶߙ௜ σ ߙ௜ߙ௝ݕ௜ݕ௝ܭ൫ݔ௜ǡ ݔ௠௜ǡ௝ ଵ௠௜ୀଵ
 Ͳǡ (9) 
௝൯ୀ 
Ǥ Ǥ σ ݕ௜ߙ௜ ൌ Ͳ ൑ ߙ௜ ൑ ܥ௠௜ୀଵ  
 ܦሺݔሻ ൌ ݓ୘ݔ ൅ ܾ ൌ σ ߙ௜ݕ௜௜אௌ ܭሺݔ௜ǡ ݔሻ ൅ ܾ 
In this study, we directly used the RBF kernel due to the 
linear kernel is a special case of it [6] and the sigmoid kernel 
also behaves like RBF kernel for certain parameters [9]. (11) 
denotes the RBF function where ߛ is the parameter of the 
RBF kernel function. 
 ܭሺݔǡ ݕሻ ൌ ሺെߛԡݔ െ ݕԡଶଶሻ  
Since the deletion of a zero or little element of w does not 
affect the optimal hyperplane, the attribute corresponding to 
the element can also be deleted. Therefore, we first ranked 
all attributes by estimating their values described in (12) 
w re ሺ௞ሻ i h  ith v r n S  th nt set to zero. he  ݔ௜ s t e ecto  i   with its k  eleme
   ȟሺ௞ሻԡݓԡଶ ൌ σ ߙ௜ߙ௝ݕ௜ݕ௝ቄܭ൫ݔ௜ǡ ݔ௝൯ െ ܭ൫ݔ௜ሺ௞ሻǡ ݔ௝ሺ௞ሻ൯ቅ௜ǡ௝אௌ 
Finally, suppose that P is the performance of a RBF-
SVM classifier and Y is the set of attributes which has been 
process by the elimination stage as stated above. Then the 
algorithm of SVM-based feature selection in feature space is 
represented below: 
z Train a RBF-SVM classifier using all attributes in Y. 
Rank all attributes according to their ȟሺ୩ሻԡԡଶ in order. 
z Delete one or a number of attributes with lower rank 
from Y and denote remaining attribute set as Y’. 
z Use Y’ to train a RBF-SVM classifier and get the P’ of it. 
If P’̱P, then set P=P’ and Y=Y’ and go to Step 2. 
Otherwise, stop this procedure if P’ is significantly 
degraded and define Y’ as the set of selected features.  
V. EXPERIMENT RESULTS 
In this study, LIBSVM [3] was utilized for the 
implementation for SVM and the algorithm of feature 
selection was coded by ourselves. Some terms used for 
evaluated our malware detection model are listed in the 
following: 
z True Positives (TP): the number of malware correctly 
classified as malicious. 
z True Negatives (TN): the number of benign programs 
correctly classified as benign. 
z False Positives (FP): the number of benign programs 
falsely classified as malicious. 
z False Negative (FN): the number of malware falsely 
classified as benign. 
z Overall Accuracy: evaluation of the performance of a 
system. Higher TP and lower FP are necessary to be 
considered at the same time. 
z Receiver Operating Characteristic (ROC) [17] curves and 
its area under curve (AUC) were both produced to 
demonstrate the relationship between detection rate and 
 ra .  false alarm te
z True Positive Rate (Detection Rate) is defined as 
  ሺ ൅ 	ሻΤ
z False Positive Rate (False Alarm) is defined as 
ሺ	 ൅ 	ሻΤ   
z Overall Accuracy Rate (OA) is defined as 
ሺ ൅ ሻ ሺ ൅  ൅ 	 ൅ 	ሻΤ  
 
The detection accuracy over previously unseen data was 
calculated by five-fold cross-validation (CV). In other words, 
the dataset were randomly divided into five disjoint 
partitions with an equal number of sizes in each partition. 
One of them was chosen as the testing set and the remaining 
four partitions were merged to be the training set. This 
procedure was repeated five times by choosing different 
partition as the testing set. The average of the five OA results 
was set as the generalization ability of our malware detection 
model.  
The results of experiment are described as follows: first 
of all, we evaluated the performance of our model without 
performing feature selection. As mentioned above, we used 
both IG and GR to binarize numerical and nominal attributes 
and got different amounts of attributes when using different 
binarization methods as shown in Table 3. Furthermore, it 
reveals that the number of attributes could be economical 
after removing useless and redundant attributes. We 
accomplished virus and email worm detection with 98.19% 
and 93.96% OA respectively. However, the results of 
84.11% and 89.54% OA indicated that there is room for 
improvement of our model in detecting trojan and backdoor. 
Next, for each kind of malware, we then chose the attribute 
set which achieved better performance in previous 
experiment for the SVM-based feature selection. Table 4 
presents the final performances of our malware detection 
model. The outcome reveals the fact that even a very few 
number of PE header features were adopted, the performance 
of our model were still retained and slightly improved. We 
only used 143 and 133 features to obtain 98.23% and 
94.07% OA for virus and email worm detection respectively. 
Similarly, the performances of trojan and backdoor 
detections were not promising enough. Finally, Fig. 5 shows 
ROC curves for detecting the four kinds of malware. 
VI. CONCLUSIONS AND FUTURE WORKS 
In conclusion, there are three contributions of this study. 
First, we proposed a model which has high accuracy in 
unknown virus and email worm detection respectively. 
Second, we can guarantee that PE header entries is a proper 
kind of resource for virus and email worm detection. Finally, 
it is noticeable that both attribute elimination and SVM-
based feature selection are useful to economize the cost of 
SVM classifier training without any decline of performance. 
In future works, since we neglected the possible effect of 
executable packing [12], we should surmount this problem to 
investigate more sophisticating information in PE file to 
improve the detection ability of trojan and backdoor. 
Moreover, it is difficult to compare our experiment results 
with other studies owing to the lack of public datasets. To 
282
