2中文摘要
在本計畫中，我們主要將考量學習效應模式在間歇性生產系統的生產排程問題，這種學習
效應主要產生在下列兩種不同的生產批與生產批之間的學習效應傳遞情形，也就是生產批
與生產批之間的學習效應完全不傳遞以及部分傳遞兩種情形。我們將考量不同的排程問
題，例如單機生產排程問題，雙機流線型生產排程問題，也將考量不同的排程績效目標，
例如完工時間(makespan)最小化或是全部完工時間(total completion time)最小化。同時，設
置時間(setup time)有無學習效應的情形也將被考量。
關鍵詞：間歇性批次生產、學習效應、排程
Abstract
In this project, we mainly study some scheduling problems with three models of learning in an
intermittent batch production system. They are the models of no transmission and partial
transmission of learning from batch to batch, respectively. The phenomena are existed in many
realistic intermittent production systems. We will consider different scheduling performances,
for example, to minimize the makespan or total completion time, in different scheduling
problems, for example, single-machine scheduling problem or two-machine flowshop
scheduling problem. We will also consider different learning effects within a product batch.
Finally, whether the setup time exists between batches is also discussed.
Keywords: intermittent batch production, learning effect, scheduling
4between production runs, the learning effect would not continue to follow what it was left when
production resumes, but that the processing time of the following job would revert to a higher
level. This suggests a phenomenon of forgetting between production runs. That is, there may be
only partial or even no transmission of learning from one production run to another one. Hence,
it is clear that this problem of learning and forgetting is an interesting topic for intermittent
production.
2. Notations and assumptions
The problem is developed using the following notations. Additional notations will be
introduced when needed throughout the paper.
m : the number of batches. ( 2m )
iB : the ith batch, i=1, 2, …, m.
in : the number of jobs in batch iB , i=1, 2, …, m.
n : the total number of jobs. (i.e. nnnn m  ...21 )
ijJ : the jth job in batch iB , j=1, 2, …, in .
is : the batch setup time of batch iB
ia : the learning factor of jobs within batch iB . ( 0ia )
ib : the learning factor of batch iB . ( 0ib )
ijp : the normal processing time of ijJ in the original sequence.
r
ijp : the actual processing time of ijJ which is scheduled in the r
th position
in a sequence in batch iB .
][kip : the normal processing time of ][kiJ which is scheduled in the k
th position
in a sequence in batch iB .
k
kip ][ : the actual processing time of ][kiJ which is scheduled in the k
th position
in a sequence in batch iB .
ijC : the completion time of ijJ
][kiC : the completion time of ][kiJ which is scheduled in the k
th position
in a sequence in batch iB .
maxC : the makespan of all jobs.
There are n jobs grouped into m batches and processed on a single machine. All jobs are
6Yang [8]).
4. Model II: Partial transmission of learning from batch to batch
In the second model, we consider partial transmission of learning from batch to batch in the
single-machine scheduling problem. Therefore, there exists some learning effect between batches
besides the learning effect within a batch. We assume that the learning effect of jobs within a
batch is the same as that in the first model. In addition, the actual processing time of batch iB
when scheduled in the rth batch is defined as follows.
ib
iir rPP 
where iP is the total processing time of jobs within batch iB if there is no transmission of
learning from batch to batch. That is, i
i
a
n
k
kii kpP 


1
][ .
Then, the makespan of all jobs is calculated as follows:
  


m
i
ba
ini
a
i
a
ii
ii
i
ii inpppsC
1
][]2[]1[max ...21  


m
i
b
ii
iiPs
1
(1)
Let partT denote that there is only partial transmission of learning from batch to batch. Then the
proposed problem is denoted by max/,,,/1 CTLESB part . As in Biskup [1], let irx be a 0/1
variable such that irx = 1 if batch iB is the rth batch to be processed and irx = 0 otherwise.
Then the problem of max/,,,/1 CTLESB part can be formulated as the following assignment
problem.
min 
 

m
i
m
r
ir
b
i
m
i
i xrPs i
1 11
s.t. 1
1


m
i
irx ,     r =1, 2, …, m,
1
1


m
r
irx ,     i =1, 2, …, m,
0irx or 1,   i, r =1, 2, …, m.                                   (2)
Since iP of batch iB is not affected by the batch sequence, from Theorem 1, iP can be
minimized by sequencing the corresponding jobs in non-decreasing order of their normal
processing time. Based on the above analysis, a simple algorithm to determine the optimal
schedule for the problem of max/,,,/1 CTLESB part is developed as follow.
Algorithm 2.
出席國際學術會議心得報告
計畫編號 NSC 96－2221－E－150－060
計畫名稱
具有學習效應之間歇式生產排程系統之研究
Scheduling with learning effects in intermittent batch production system
出國人員姓名
服務機關及職稱
郭文宏
國立虎尾科技大學資訊管理系副教授
會議時間地點 97/05/09 ~ 97/05/12 聖地牙哥 (La Jolla)
會議名稱
(中 文) 生產與作業管理協會第十九屆年度研討會
(英文 ) The 19th Annual Conference of the Production and Operations
Management Society (POMS).
發表論文題目 Single-Machine Scheduling with Learning Effects in Intermittent BatchProduction
一、參加會議經過
本次會議(The 19th Annual Conference of the Production and Operations Management Society,
POMS 2008) 於 2008年 5月 9日至 12日假聖地牙哥 La Jolla的 Hyatt Regency Hotel舉行。
POMS 國際會議每年舉辦一次，由來自世界各地學者發表論文。5 月 9 日為開幕式，本人在
會中亦發表一篇學術論文，時間安排於 5 月 10 日上午 10:30 ~ 12:00 的場次發表，題目為
“Single-Machine Scheduling with Learning Effects in Intermittent Batch Production”。
二、與會心得
同一場次中，除了由美國學者發表兩篇學術性之研究論文，題目分別為“Approximation
Scheme for the Total Weighted Tardiness Problem” 以及“ A Hierarchical Approach for 
Scheduling in a Dynamic Production Environment”，另有南韓現代工業研究院的研究員發表兩
篇相當實務之造船 (shipbuilding)監控系統與生產問題，題目分別為“An Operating and 
Monitoring System Design for Safety Control of Blasting Cels in Shipbuilding”以及 “A study on
the Design of a Continuous Flow Production System and Process Innovation Methodology in Panel
Assembly Linesof Shipbuilding”，本人因此增加許多學術上與實務上的知識，收益良多。
另外，此次為本人第一次單獨參與國際研討會，能與國際學者交流，亦增加許多國際交
流的經驗，是此次除了學術上之收穫外的另一種收穫。
1. Introduction
In classical scheduling problems, processing times of jobs are assumed to be constant. However,
in many realistic situations, because the firms and employees perform the same task repeatedly, they
learn how to perform more efficiently. Therefore, the actual processing time of a job is shorter when
it is scheduled later, rather than earlier in the sequence. This phenomenon is known as the “learning
efect” in the literature.
Biskup [1] first proposed a learning effect model in which the processing time of a job is a
function of the job position in a sequence. He showed that single-machine scheduling problems
with a learning effect still remain polynomially solvable if the objective is to minimize the deviation
from a common due date or to minimize the sum of flow times. Mosheiov [2] provided a
polynomial time solution for the single-machine makespan minimization problem and solved two
multi-criteria problems which can be formulated as assignment problems. He also showed that the
SPT (the shortest processing time first) rule does not remain optimal for the minimum flow-time
problem on parallel identical machines. Mosheiov [3] further showed that the flow-time
minimization problem with the learning effect on parallel identical machines has a solution which is
polynomial in the number of jobs. Mosheiov and Sidney [4] extended learning effect to be
job-dependent, that is, learning rates are different from job to job. They showed that the problems of
makespan and total flow-time minimization on a single machine, a due-date assignment problem
and total flow-time minimization on unrelated parallel machines remain polynomially solvable.
The above learning effect models tell us that, as cumulative jobs increase, the processing time of
ijp : the normal processing time of ijJ in the original sequence.
r
ijp : the actual processing time of ijJ which is scheduled in the r
th position
in a sequence in batch iB .
][kip : the normal processing time of ][kiJ which is scheduled in the k
th position
in a sequence in batch iB .
k
kip ][ : the actual processing time of ][kiJ which is scheduled in the k
th position
in a sequence in batch iB .
ijC : the completion time of ijJ
][kiC : the completion time of ][kiJ which is scheduled in the k
th position
in a sequence in batch iB .
maxC : the makespan of all jobs.
There are n jobs grouped into m batches and processed on a single machine. All jobs are
available at time zero. Assume that there is no setup time between two consecutive jobs in the same
batch. However, a setup time is required to process a batch and it is sequence-independent.
Moreover, the normal processing time of a job is incurred if the job is scheduled first in the first
production batch. The actual processing times of the following jobs are smaller than their normal
processing times because of the learning effect. Assume that the actual processing time of a job is a
decreasing function of its position in a sequence. Usually, the learning effect can be accumulated
through completing jobs. However, if a large amount of setup time has elapsed between production
runs, it may incur a forgetting effect. That is, there may be partial or even no transmission of
learning from batch to batch. Therefore, three models of learning and forgetting effects are
max//1 CLE . Mosheiov [2] proved that the optimal schedule is to sequence the jobs in
non-decreasing order of their normal processing time. Therefore, the theorem follows because there
is no transmission of learning from batch to batch and the batch setup is sequence-independent.
□
Based on Theorem 1, a simple algorithm to determine the optimal schedule for the problem of
max/,,,/1 CTLESB no is developed as follow.
Algorithm 1.
Step 1: Arrange jobs within each batch in non-decreasing order of their normal processing times.
Step 2: Batches are scheduled in any order.
The optimal job sequence within a certain batch iB can be obtained by a sorting algorithm
and thus taking )log( ii nnO time. Hence, the total running time to sequence jobs of all batches is


m
i
ii nnO
1
)log( . On the other hand, the running time to sequence the batches in any order is )1(O .
Therefore, the overall complexity of the problem of max/,,,/1 CTLESB no is )log( nnO (see Kuo
and Yang [8]).
4. Model II: Partial transmission of learning from batch to batch
In the second model, we consider partial transmission of learning from batch to batch in the
for the problem of max/,,,/1 CTLESB part is developed as follow.
Algorithm 2.
Step 1: Arrange jobs within each batch in non-decreasing order of their normal processing times.
Step 2: Formulate the corresponding assignment problem as Eq.(2) and determine the batch
sequence according to the solution of the corresponding problem.
From the analysis in Section 3, the complexity of Step 1 is )log( nnO . On the other hand, Step
2 is to solve an assignment problem and thus the complexity of Step 2 is )( 3mO . Thus, the overall
complexity of Algorithm 2 is )log( 3mnnO  .
Corollary 1. If the learning factors of all batches are equal, i.e. bbi  , then for the problem of
max/,,,/1 CTLESB part , there exists an optimal schedule that satisfies the following conditions: (a)
the jobs within a batch are sequenced in non-decreasing order of their normal processing time. (b)
the batches are sequenced in non-decreasing order of iP .
Proof. As stated in Theorem 1, the problem to arrange the job sequence within a batch is the same
as the problem of max//1 CLE . Mosheiov [2] proved that the optimal schedule is to sequence the
jobs in non-decreasing order of their normal processing time. In addition, the term of 

m
i
is
1
in
Eq.(1) is constant. Therefore, to minimize the makespan of all jobs is equal to minimizing the term
of 

m
i
b
i
iiP
1
in Eq.(1). Because bbi  , to minimize 

m
i
b
iiP
1
is equivalent to minimizing the
normal processing time.
Proof. The theorem can be easily proved by using simple job interchanging technique.
□
Corollary 2. For the problem of max/,,,/1 CTLESB total , there exists an optimal schedule by
sequencing jobs within each batch in non-decreasing order of their normal processing time.
Proof. The result follows directly from Theorem 2. □
In the following, two special cases of the problem of max/,,,/1 CTLESB total are discussed in
Theorem 3 and Algorithm 3, respectively.
Definition 1. iB is dominated by jB , or jB dominates iB iff
},...,2,1|max{ iik nkp  },...,2,1|min{ jjk nkp  . The symbol ji BB  denotes that iB is
dominated by jB .
Definition 2. The batches form an increasing sequence of dominating batches iff
mBBB  ...21 .
Theorem 3. If mBBB  ...21 and maaa  ...21 , then for the problem of
max/,,,/1 CTLESB total , there exists an optimal schedule satisfies the following conditions.
Note that Step 1 can be obtained by a sorting algorithm and thus it takes )log( nnO time while
Step 2 is to solve an assignment problem and thus it takes )( 3mO time. Thus, the overall time
complexity of Algorithm 3 is )log( 3mnnO  .
6. Conclusions
This paper studies a single-machine scheduling problem with three models of learning and
forgetting effects in intermittent batch production. They are the models of no transmission, partial
transmission and total transmission of learning from batch to batch, respectively. The objective is to
minimize the makespan. We provide a polynomial time algorithm to solve the problems with the
models of no transmission and partial transmission of learning from batch to batch, respectively. We
also provide two polynomial time algorithms to find the optimal solutions of two special cases in
the problem with the model of total transmission of learning from batch to batch. However, the
complexity of the problem with the model of total transmission of learning from batch to batch is an
open question. Therefore, it is an interesting topic for the future research. Besides, in this study, the
learning effect of a job depends on its position in a schedule. There are other learning effect models
studied in the literature [6,7]. Thus, it is also worthwhile to consider another learning effect model
in intermittent batch production, for example, a time-dependent learning effect model proposed by
Kuo and Yang [8,9].
