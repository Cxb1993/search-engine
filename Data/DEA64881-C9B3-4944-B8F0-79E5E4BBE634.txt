2 
 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價值（簡要敘
述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適合在學術期刊發表或申
請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
█ 達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：█已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
附件二 
4 
 
TCP-sleek Channel Access Scheduling  
for Multi-hop Mesh Networks 
 
Li-Ping Tung1, Yeali S. Sun2, Tzu-Lin Huang2, and Meng Chang Chen1 
1
Institute of Information Science, Academia Sinica, Taipei, Taiwan 
2
Dept. of Information Management, National Taiwan University, Taipei, Taiwan 
lptung@iis.sinica.edu.tw, sunny@im.ntu.edu.tw, r95036@im.ntu.edu.tw, mcc@iis.sinica.edu.tw 
 
ABSTRACT 
Wireless channel contention/interference problems combined with 
the constraints imposed by the TCP congestion control scheme 
have a severe impact on TCP throughput performance and fair-
ness in a wireless mesh network. In this paper, we propose a TCP-
sleek spatial TDMA scheduling algorithm to construct a sleek 
data and ACK packet flowing environment for TCP flows along 
the wireless paths. The proposed scheme considers the TCP de-
mands of individual directional links during channel access sche-
duling and time slot assignment to enable the TCP congestion 
control mechanisms to perform as effectively as they do in wired 
networks, irrespective of their spatial locations and the number of 
hops traversed. In addition, employing link-layer retransmission 
can effectively hide local transmission errors from the end-to-end 
TCP congestion control mechanisms. The simulation results dem-
onstrate that, under the proposed scheme, the problem of unfair 
bandwidth sharing to long-hop TCP flows caused by wireless 
communication is successfully eliminated, and the throughput 
disparity between long- and short-hop TCP flows is also substan-
tially reduced. The scheme also achieves high overall network 
throughput.  
Categories and Subject Descriptors 
C.2.1 [Computer-Communication Networks]: Network Archi-
tecture and Design –wireless communication. 
General Terms 
Algorithms, Design, Performance. 
Keywords 
wireless mesh networks, TCP, spatial TDMA channel access, 
fairness. 
1. INTRODUCTION 
TCP was originally designed for wired packet-switched net-
works, so it has been tuned to cope with the transmission charac-
teristics of such environments. Two important TCP designs enable 
TCP applications to achieve good transmission performance in 
wired networks. First, a TCP sender possesses a window of out-
standing data and constantly probes for more available bandwidth. 
It handles congestion by adjusting the window size based on the 
additive increase and multiplicative decrease (AIMD) algorithm. 
The dynamic bandwidth probing and exploiting capability has 
made TCP a successful Internet protocol. Second, the fast re-
transmit and fast recovery scheme [1], which has been incorpo-
rated into major TCP implementations, is used to boost through-
put in the presence of congestion. Under the scheme, when packet 
loss occurs on a congested link, retransmission is performed as 
soon as three duplicate ACKs are received without waiting for the 
retransmission timer to expire. After fast retransmit, instead of 
entering the Slow Start phase, congestion avoidance is performed. 
Thus, the connection can recover the lost packets more effectively 
and avoid unnecessary slowdown at the sender. 
It has been shown that, in a wireless mesh network, the 
throughput performance of a TCP connection becomes severely 
degraded with increases in the number of hops it has to traverse 
[2]. In addition, when multiple TCP flows share the same wireless 
link, the throughput disparity between long- and short-hop TCP 
flows may further enlarged because of the characteristics of wire-
less communications with the interaction of TCP congestion con-
trol scheme [3]. Figure 1 shows the congestion window dynamics 
of a group of persistent TCP connections, each traversing a differ-
ent number of wireless hops, sharing a bottleneck link, in a six-
hop IEEE 802.11b wireless chain network (see Figure 2) using 
QualNet [4]. The TCP designs enable the shorter-hop flows 5 and 
6 to remain steady at the maximum window size and monopolize 
most of the bandwidth on the shared link. In contrast, the longer-
hop flows 1, 2, and 3 encounter more contention and interference 
problems along the paths, which results in longer round trip times 
(RTTs) and severe packet loss. The AIMD algorithm allows 
shorter-hop flows to grab the available bandwidth on a shared link 
more aggressively, thereby causing bandwidth starvation of the 
longer-hop flows. The simulation results clearly show the perfor-
mance disadvantage of long-hop flows when contending for 
bandwidth with short-hop flows in a multi-hop wireless environ-
ment.  
 
Figure 1: The TCP congestion window dynamics of six long-
lived flows in a wireless chain network. 
 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not made or distributed for profit or commercial advantage and that 
copies bear this notice and the full citation on the first page. To copy 
otherwise, or republish, to post on servers or to redistribute to lists, 
requires prior specific permission and/or a fee. 
IWCMC’09, June 21–24, 2009, Leipzig, Germany. 
Copyright ©  2009 ACM 978-1-60558-569-7/09/06...$5.00 
6 
 
 k > 1: fast data, but slow ACK; 
 k < 1: slow data and slow ACK; 
 k = 1 (the best allocation) 
We apply the k=1 requirement for scheduling and time slot alloca-
tion to each directional wireless link in order to achieve the sleek 
flow of data and ACK packets on a TCP connection. 
3.2 Considering the Number and Type of 
TCP Flows in Channel Access Scheduling 
To construct a sleek delivery environment for TCP, we consider 
the number of the TCP flows on each directional wireless link and 
in channel access scheduling. We have separate time slot assign-
ment for the two types of TCP packets, data and ACK, on a link. 
Consider an N-hop wireless chain network represented as a di-
rected graph G = (V, E). Assume each node has one interface with 
identical settings. There are N persistent TCP NewReno connec-
tions, where the ith TCP flow fi starts from the i
th sending node and 
ends at the (N+1)th receiving node, as shown in Figure 2. The size 
of the data and ACK packets on each TCP flow are identical. Let 
the transmission and interference ranges be one hop and two hops 
away from a node, respectively. Then, the weighted contention 
graph G’= (V’,E’) of G is constructed as follows. Each vertex 
corresponds to a directional wireless link, i.e., a sender-receiver 
pair in G and is associated with a weight, w(v’), which represents 
the TCP flow demand at the vertex. An edge is added between 
two vertices in G’ if their transmissions would interfere with each 
other in G. 
To realize the k=1 goal, each directional wireless link must 
have a sufficient number of time slots to meet the bandwidth re-
quirements for both the TCP data and the ACK flows passing 
through it. According to (1), assuming d = 1, we wish to have 
ACK
data
ACK
data
T
T
C
C
 .                                   (2) 
Consider a typical configuration of a mesh network in which 
most of the traffic is sent to and from the Internet. Links close to 
the gateway are usually much more congested than those farther 
away. In our scheme, channel access scheduling and slot number 
assignment to each directional wireless link are based on the 
number and type of TCP flows on the link. A simple way to clas-
sify TCP flows for transmission into TCP-sleek engineered slots 
can be done by referring to the protocol number in the IP header. 
Assume the time axis is divided into a sequence of fixed-length 
time slots grouped into frames. Let the number of time slots 
needed for a TCP data flow and an ACK flow be denoted as Ndata 
and NACK, respectively; and fdata(v’) and fACK(v’) be the numbers of 
TCP data and ACK flows passing through the directional wireless 
link v’ in G’, respectively. The total number of time slots required 
by a wireless link is calculated as follows: 
ACKACKdatadata NvfNvfvw  )'()()( .           (3) 
We want to find a feasible spatial TDMA schedule that satisfies 
the k=1 model and each link’s TCP flow requirement with the 
minimum frame duration. The problem can be formulated as a 
function :V’{1,…,Nframe}, so we can schedule interfering ver-
tices in different time slots with the minimum frame cycle time. 
This is a weighted k-coloring problem that is NP-complete [20]. 
In this paper, we take a greedy approach. 
3.3 The Algorithms 
To find a feasible TCP-sleek spatial TDMA schedule, we first 
partition the node set of G’ into non-conflicting scheduling groups 
S={S1,…Sk}. Directional wireless links assigned to the same 
group are scheduled for transmission in the same time periods. 
The duration of each scheduling group’s time periods is deter-
mined by the transmission time required by the most heavily-
loaded vertex in the group, i.e., T(Si) = max{ w(v’): v’ Si}. Thus,  



k
i
iframe STN
1
)( .                               (4) 
The partitioning algorithm is presented in Figure 3. Once the 
set of the non-interfering scheduling groups is obtained, the slots 
are assigned to each group. Each directional wireless link marks 
the time slots allocated for its transmission in a frame. 
/* Algorithm: construct non-conflicting scheduling groups of 
directional wireless links */ 
V’ = the set of vertices of weighted contention graph G’ 
g = 0; /* initial group number index */ 
while V’ is not empty { 
    select the vertex with the largest weight v’ from V’; 
    g++; Sg = Sg + {v’};  V’ = V’\{v’}; 
    U’ = V’; 
    while U’ is not empty { //perform “piggybacking” 
        if vertex u’ with the largest weight in U’ 
          does not conflict with any vertex in Sg  
            Sg = Sg + {u’}; V’ = V’\{u’};  
        U’ = U’\{u’}; 
    } 
} 
Figure 3: The algorithm for partitioning weighted directional 
wireless links into non-conflicting scheduling groups. 
To cope with the errors in wireless networks, we adopt link-
layer retransmission to recover packets lost due to transmission bit 
errors on a wireless link. A link-layer acknowledgement is sent 
after each transmission of TCP data or an ACK packet. A lost 
packet is retransmitted until a link-layer acknowledgement is re-
ceived or the retry attempts exceed the maximum retry limit, 
which is set to eight in our simulations. 
4. PERFORMANCE EVALUATION  
4.1 TCP-sleek Spatial TDMA Scheduling  
We now evaluate the performance of the proposed TCP-sleek 
spatial TDMA scheduling scheme using QualNet. Here, we con-
sider a six-hop wireless network, as shown in Figure 2. Both long-
lived (e.g., file transfers) and short-lived (e.g., web browsing) 
TCP flows are considered. For long-lived TCP flows, one TCP 
NewReno connection is generated at each wireless router on the 
chain destined for the rightmost sink router. For short-lived TCP 
flows, we consider a data transfer of 13.5 KB with nine segments 
for a maximum transfer unit (MTU) of 1.5 KB [21]. Multiple TCP 
flows are generated continuously. The throughput performance 
metric used for short-lived flows is the number of successfully 
completed TCP connections per second.  
The TCP-sleek spatial TDMA scheduling scheme is compared 
with the k=1 only spatial TDMA scheduling scheme and the 
CSMA/CA-based channel access scheme in Table 1. In the k=1 
only spatial TDMA scheduling scheme, sender-receiver pairs are 
served in a round-robin fashion. The TCP-sleek scheduling out-
performs the other two schemes. First, the implementation of the 
k=1 model in the channel access scheduling successfully over-
comes the channel contention and interference problems and 
creates a sleek delivery environment for TCP flows. Additionally, 
since the TCP-sleek scheduling takes into account the TCP flow 
demands on the links, the resulting frame duration is only about 
2/3 of that in the k=1 only scheme. The shorter frame duration 
8 
 
The performance results are shown in Table 2. Again, the TCP-
sleek scheduling achieves better overall throughput performance 
and fairness than the other two schemes. Since the TCP-sleek 
scheduling algorithm considers both the contention/interference 
problems and the link loads in channel access scheduling and time 
slot assignment, it provides a sleek and fair transmission environ-
ment for TCP flows regardless of their spatial locations and the 
number of hops traversed in the network (see Figure 8). 
Table 2: Performance Comparisons for Topology in Figure 7 
 
TCP-sleek  
Spatial TDMA 
Scheduling 
k=1 only  
Spatial TDMA 
Scheduling 
CSMA/CA 
Access 
Aggregate throghput 4.655Mbps 3.805Mbps 2.687Mbps 
Fairness index [22] 0.981 0.980 0.314 
 
Figure 8: The throughput performances under three schemes. 
5. CONCLUSION 
We have studied the problem of severe unfairness between 
long- and short-hop TCP flows in terms of bandwidth sharing in 
wireless mesh networks. The performance degradation of long-
hop TCP flows is caused primarily by wireless channel contention 
and interference problems, which substantially increase the RTT 
and the probability of packet loss when a TCP flow has to traverse 
a large number of hops. To address this problem, we propose a 
TCP-sleek spatial TDMA scheduling scheme based on the k=1 
model, which ensures the sleek end-to-end flow of data and ACK 
packets for TCP connections along the wireless paths. The scheme 
also considers the number and type of TCP flows on each direc-
tional wireless link during channel access scheduling and time slot 
assignment which can effectively cope with heavy traffic aggrega-
tions on the wireless links towards the gateway commonly seen in 
wireless Internet access environments. As a result, the throughput 
of long-hop TCP flows is no longer starved of bandwidth; in other 
words, long-hop flows can compete for bandwidth with short-hop 
flows on an equal basis. Furthermore, we adopt link-layer re-
transmission in the proposed scheme which effectively hides link-
layer transmission errors from the end-to-end TCP congestion 
control mechanisms. The simulation results demonstrate that our 
scheme substantially reduces the negative effect of multi-hop 
wireless transmission on TCP, and achieves high overall and indi-
vidual TCP throughput performances. 
6. ACKNOWLEDGMENTS 
This research is partly supported by National Science Council, 
Taiwan, under grants NSC 95-2221-E-001-018-MY3, NSC 95-
2221-E-002-192, and NSC 97-2221-E-002-080. 
7. REFERENCES 
[1] TCP slow start, congestion avoidance, fast retransmit. RFC 
2001. 
[2] L.-P. Tung, T.-C. Cho, Y. S. Sun, M. C. Chen, and W.-K. 
Shih. TCP throughput enhancement over wireless mesh net-
works. IEEE Comm. Mag., 45(11):64-70, Nov. 2007. 
[3] V. Gambiroza, B. Sadeghi, and E. Knightly. End-to-end per-
formance and fairness in multihop wireless backhaul net-
works. Proc. ACM MobiCom 2004, pp. 287-301. 
[4] Scalable Networks Inc. The QualNet 4.0 simulator. 
http://www.scalable-networks.com. 
[5] TCP selective acknowledgement options. RFC 2018. 
[6] H. Balakrishnan and R. H. Katz. Explicit loss notification 
and wireless web performance. Proc. IEEE Globecom 1998. 
[7] A. Bakre and B. R. Badrinath. I-TCP: indirect TCP for mo-
bile hosts. Proc. ICDCS 1995, pp. 136-143. 
[8] Z. J. Haas and P. Agrawal. Mobile-TCP: an asymmetric 
transport protocol design for mobile systems. Proc. IEEE 
ICC 1997, pp. 1054-1058. 
[9] N. H. Vaidya, M. Mehta, C. Perkins, and G. Montenegro. 
Delayed duplicate acknowledgements: a TCP-unaware ap-
proach to improve performance of TCP over wireless. Tech-
nical Report 99-003, Texas A&M University, Feb. 1999. 
[10] C. Parsa and J. J. Garcia-Luna-Aceves. TULIP: a link-level 
protocol for improving TCP over wireless links. Proc. IEEE 
WCNC 1999, pp. 1253-1257. 
[11] H. Balakrishnan, S. Seshan, and R. H. Katz. Improving relia-
ble transport and handoff performance in cellular wireless 
networks. ACM/Baltzer Wireless Networks, 1(4): 469-481, 
Dec. 1995. 
[12] R. de Oliveira and T. Braun. A dynamic adaptive acknowl-
edgment strategy for TCP over multihop wireless networks. 
Proc. IEEE INFOCOM 2005, pp. 1863-1874. 
[13] C. de M. Cordeiro, S. R. Das, and D. P. Agrawal. COPAS: 
dynamic contention-balancing to enhance the performance of 
TCP over multi-hop wireless networks. Proc. ICCCN 2002, 
pp.14-16. 
[14] Z. Fu, H. Luo, P. Zerfos, L. Zhang, and M. Gerla. The impact 
of multihop wireless channel on TCP performance. IEEE 
Trans. Mobile Comput., 4(2):209-221, March/April 2005. 
[15] A. Varshavsky and E. de Lara. Alleviating self-interference 
in MANETs. Proc. IEEE LCN 2004, pp. 642-649. 
[16] S. M. ElRakabawy, A. Klemm, and C. Lindemann. TCP with 
adaptive pacing for multihop wireless networks. Proc. ACM 
MobiHoc 2005, pp. 288-299. 
[17] H. Balakrishnan, V. N. Padmanabhan, and R. H. Katz. The 
effects of asymmetry on TCP performance. Proc. ACM Mo-
biCom 1997, pp. 77-89. 
[18] T. V. Lakshman, U. Madhow, and B. Suter. Window-based 
error recovery and flow control with a slow acknowledge-
ment channel: a study of TCP/IP performance. Proc. IEEE 
INFOCOM 1997, pp. 1199-1209. 
[19] W. Liao. The behavior of TCP over DOCSIS-based CATV 
networks. IEEE Tran. Comm., 54(9): 1633-1642, Sept. 2006. 
[20] M. Demange, D. de Werra, J. Monnot, and V. Th. Paschos. 
Time slot scheduling of compatible jobs. Journal of Schedul-
ing, 10(2): 111-127, April 2007. 
[21] M. Melia, I. Stoica, and H. Zhang. TCP model for short lived 
flows. IEEE Comm. Lett., 6(2):85-87, Feb. 2002. 
[22] R. Jain, D. Chiu, and W. Hawe. A quantitative measure of 
fairness and discrimination for resource allocation in shared 
computer systems. DEC Research Report TR-301, 1984. 
 
designing an uplink bandwidth request algorithm for the 
polling services. These efforts are aimed at minimizing the 
bandwidth wastage or PDU dropping probability. One study [2] 
proposes queue-aware uplink bandwidth allocation at the SS 
for polling services. The proposed scheme adaptively allocates 
bandwidth to control queue length at a target level and meet the 
delay and PDU dropping probability requirements. However, 
the deficiency of the proposed model is that allocation is 
performed on a frame basis, which introduces a lot of signaling 
overhead. Another study [3] proposes a bandwidth request 
algorithm to minimize bandwidth wastage in ertPS polling 
services. In this design, the bandwidth allocation interval 
equals the packetized interval of the real-time service. If the 
packetized interval is too large, the traffic amount during the 
period cannot be served in time because the allocated resources 
are fixed within the allocation interval for ertPS services. On 
the other hand, if the packetized interval is too small, this 
method produces the same drawbacks as [2], introducing 
significant signaling overhead. 
This study considers an integrated IEEE 802.11 and IEEE 
802.16 network that combines multiple IEEE 802.11 real-time 
traffic flows with the same QoS level into a single IEEE 802.16 
connection. To make good use of bandwidth, the bandwidth 
aggregation is carried on a rtPS (real-time Polling Service) 
connection. Since there are no standardized bandwidth request-
allocation algorithms for the rtPS service, this paper proposes a 
simple, flexible, and efficient uplink bandwidth request-
allocation algorithm that reduces the control message 
exchanges between the BS and SS per frame and effectively 
uses bandwidth. This study introduces the concept of a 
Decision Period (DP), which consists of M frames. The SS 
issues a bandwidth request message with M reservation values 
per DP. This allows the SS to reserve the bandwidth for the 
subsequent frames in advance using a single control message 
rather than M control messages. The benefits of the DP are 
twofold; (i) it reduces the control message exchange between 
BS and SS per frame since the SS issues only one bandwidth 
request message rather than M messages; (ii) it reduces the 
delay incurred from the bandwidth request-allocation process 
since the resource allocation for multiple frames can be made 
in advance using one control message. 
In TDMA scheduling, time slots are perishable resources 
[4]. In other words, the usage of resources is limited to a point 
of time, and time slot reservation is a time-dependent quantity. 
This study assumes that un-used time slot introduces the 
resource reservation cost. To decrease the resource reservation 
cost, it is possible to make conservative bandwidth request 
which may delay un-served demand to the subsequent frames. 
However, the delayed packet affects the QoS for real-time 
services, and incurs a delay penalty cost. Note that there is a 
tradeoff between the resource reservation cost and the delay 
penalty cost. Thus, to make good bandwidth reservation for 
multiple frames in a DP, the proposed method adopts a 
recursive-least-squares (RLS) adaptive filter as the bandwidth 
prediction algorithm. Furthermore, this study proposes a multi-
stage self-correction bandwidth reservation (MSBR) scheme to 
correct the inaccuracy from the RLS algorithm by considering 
the tradeoff between the resource reservation cost and the delay 
penalty cost. Simulation results confirm that the proposed 
scheme utilizes bandwidth efficiently. 
The rest of this paper is organized as follows. Section II 
reviews relevant literature. Section III presents the basic 
dynamic bandwidth reservation scheme and its simulation 
results. Section IV proposes a multi-stage self-correction 
bandwidth reservation scheme to amend the deficiencies of the 
prediction algorithm as well as simulation results. Section V 
provides a conclusion. 
II. RELATED WORK 
There are several studies on dynamic bandwidth reservation 
([2]-[3], [5]-[6]). The basic goal of dynamic bandwidth 
reservation is to minimize the amount of bandwidth being 
provisioned while keeping the cost of MAC signaling to a 
minimum or reducing the connection blocking probability. One 
study [2] proposes an uplink bandwidth request scheme that 
allocates bandwidth adaptively according to the queue state on 
a frame basis. This study uses an analytical discrete time 
Markov chain model of the bandwidth allocation to analyze the 
queueing performance, and assumes that the traffic source is a 
Markov Modulated Poisson Process. However, the proposed 
scheme makes no assumption of the traffic model in resource 
demand prediction. Another study [3] proposes an uplink 
bandwidth request-allocation algorithm for VBR real-time 
services. That algorithm calculates the amount of bandwidth 
request such that the delay is regulated around the desired level 
to minimize delay and delay jitter for real-time services. The 
bandwidth request also considers the mismatch between packet 
arrival and service rates. However, the bandwidth request 
interval is equal to the packetized interval of the real-time 
service. With a smaller interval, the BS must schedule more 
frequently. With a larger interval, the BS cannot capture the 
traffic dynamics fast enough since the allocated resources are 
fixed within the allocation interval for the ertPS service. In the 
proposed algorithm, the DP concept allows the BS to perform 
the scheduling algorithm and admission control in a more 
predictive way. Other studies [5] and [6] consider an integrated 
IEEE 802.11 and IEEE 802.16 network, and propose multi-
thresholds-based dynamic bandwidth reservation schemes. The 
goal is to minimize the amount of bandwidth being provisioned 
while minimizing the cost of MAC signaling. However, this 
approach is a multi-threshold approach in which the reserved 
bandwidth does not change from one to another threshold until 
the number of connection being active reaches another 
threshold. Thus, it cannot react to the bandwidth dynamics in 
time. Furthermore, it also assumes that the connection arrival 
process is a Poisson process for analysis. 
III. DYNAMIC BANDWIDTH RESERVATION SCHEME 
A. Problem Description 
Consider an integrated IEEE 802.11 and IEEE 802.16 
network that combines multiple IEEE 802.11 real-time traffic 
flows with the same QoS level into a single IEEE 802.16 rtPS 
connection. The traffic of an IEEE 802.16 connection 
aggregated from IEEE 802.11 networks is likely to fluctuate. 
The best way to make effective use of the bandwidth reserved 
is to monitor traffic and dynamically change the amount of 
d
jiC , : the delay penalty cost in frame j of DP i. If the total 
demand is larger than the total number of time slots reserved, 
the following delay penalty cost is incurred: 


 
else
 if
,
,
0
)(
C ,,,,,
jijidjijid
ji
rqCrq

 
Cs: Unit Signaling Cost. 
DP
iC : DP cost. The cost of DP i consists of the signaling 
cost, the resource reservation cost, and the delay penalty cost of 
each frame within DP i. 










M
j
djiji
M
j
rjijiS
M
j
d
ji
M
j
r
jiS
DP
i
Crq
CqrC
CCCC
1
,,
1
,,
1
,
1
,
)0,max(
)0,max(
 
According to (3) and (6), performing resource reservation 
(i.e., determine the ri,j) is a challenging task in minimizing the 
DP cost. The major issue to be tackled here is how to predict 
the traffic arrival of frames within a DP in advance. 
Furthermore, any prediction errors that occur must be corrected 
to make effective use of resources. 
C. Bandwidth Prediction 
At the end of a decision period, the SS sends the BS a 
bandwidth request message specifying the forthcoming 
bandwidth amount required for the subsequent frames. Thus, 
the SS must on-line predict the traffic arrivals in advance. 
Adaptive filters are a well-known class of on-line 
estimation techniques. One of their applications is prediction. 
The recursive-least-squares (RLS) algorithm is an adaptive 
filter algorithm that is simple and computationally efficient. 
The RLS algorithm has been widely used in control and 
communications applications, such as MPEG traffic prediction, 
handoff resources prediction, RTT prediction, and packet loss 
probability prediction ([7], [8]). Because network traffic is 
highly dynamic, it is desirable to have an algorithm that can 
adapt quickly. Thus, this paper uses the RLS algorithm to 
predict the traffic arrival of frames within a decision period. 
Assume that the measured traffic arrival follows a random 
process {ai,1, ai, 2, …}. The RLS prediction algorithm makes 
good use of the past measurements in forecasting future 
conditions. Consider a fixed amount of transmission history 
denoted as H-order. Then, a H-order predictor can be expressed 
as: 
 HiHiii AWAWAWA   ...ˆ 2211  
where Ai (Âi) is a M × 1 vector, and the jth element ai,j (âi,j) 
denotes the actual (predicted) traffic arrival in frame j of DP i. 
The predictor coefficient Wh is a M × M matrix for every h, 
and the coefficients are time-varying since the predicted errors 
are fed back to adapt the prediction coefficients. After 
predicting the traffic arrival, the bandwidth request is made 
based on the prediction results. If there are any un-served 
packets remaining at the end of the DP, those packets will be 
served at the beginning of the following DP. The SS makes a 
bandwidth request as follows: 
  MiiiMiii aaqrrr ,2,1,,2,1, ˆ,...,ˆ,ˆ  ,...,,  
where 
 1,,1,11, ˆ)0,max(ˆ iMiMii arqq    
D. Basic Performance Evaluation 
This section first evaluates the RLS prediction algorithm to 
assess whether the RLS algorithm is able to capture traffic 
dynamics. Consider a WiFi/WiMAX integrated network 
environment. The wireless AP is connected to the SS, while the 
SS is responsible for the traffic relay from the WiFi networks. 
All WiFi traffic is aggregated into the FIFO queue of the SS. 
Assume that the WiFi clients generate G.729 VoIP traffic with 
silence suppression. The ON/OFF period is followed 
exponential distribution with mean = 240ms and 400ms, 
respectively [9]. The packet size is 20 bytes and the sending 
rate in the ON period is 8 kbps. Each WiFi AP has 16 wireless 
clients, and the simulation time is 300 sec. Assume that each 
VoIP packet needs one time slot resource, and the duration of a 
WiMAX TDD frame is 20ms. Sample the traffic at the SS in 
terms of number of packets for each 20ms. In addition, for the 
bandwidth request model, assume Cr = Cd = 1 and Cs = 0. 
First, use the mean absolute error (MAE) as an evaluation 
metric. In statistics, the MAE is a measure of how close 
predictions are to actual outcomes. 
 


n
i
ii ffn
MAE
1
ˆ1  
Note that ifˆ  is the prediction while if  is the true value. Table 
I summarizes the simulation results of MAE and prediction 
errors for different decision periods. Although this table shows 
that the prediction is not sufficiently accurate, Fig. 3 shows that 
the leftover in a DP is small enough. However, since this paper 
considers the real-time applications, the packets should be 
served as soon as possible. Although the leftover of the second 
decision period (i.e., frame 6016-6030) in Fig. 3 is zero, it has 
larger delay penalty cost. This in turn affects the QoS of real-
time applications. Thus, it is still necessary to correct the 
prediction error and consider a better reservation amount to 
decrease the DP cost. 
In RLS algorithm, the prediction model is a linear 
combination of the previous data, and may not completely 
capture variations in traffic. Capturing this variation is essential 
to achieving better performance. Thus, according to the 
observations and propositions in Section III-D, the bandwidth 
reservation was corrected by adding the deviation in estimation 
to get better performance. This study proposes a Multi-stage 
Self-correction Bandwidth Reservation (MSBR) scheme. 
Assume there are K stages in a decision period. Define Bi = 
<βi,1, βi,2, …, βi,K> as the self-corrected parameter for each 
stage at DP i. Choose the standard deviation of each stage as 
the self-correction parameter. Thus, the bandwidth request is 

1,1,,1,11, ˆ)0,max( iiMiMii arqr    
and 
 Mjar
K
Mji
jiji ~2,ˆ
/,
,, 


  
where 
 )()1( 1,1, kikiki AStDev     
and 

1
])[(
)(
1)1(
2
,1 1
1 





 

K
M
AEa
AStDev
K
Mk
K
Mkj
k
ji
k
i
i  
The performance of the proposed multi-stage self-
correction bandwidth reservation scheme is evaluated using the 
same environment and traffic settings described in Section III-
D. Table III summarizes the results. Compared with the results 
in Table II, this table shows a substantial decrease in the delay 
penalty cost despite a moderate increase in the resource 
reservation cost. Thus, the DP cost decreased as well. The 
individual cost per stage shown in Table IV indicates that delay 
penalty cost per stage increases only slightly under the MSBR 
scheme. This is because there are self-corrections per stage, 
which decreases the accumulated effect of the delay penalty 
cost. 
TABLE III.  DP COST FOR DIFFERENT DECISION PERIODS 
 Resource 
Reservation Cost 
Delay Penalty 
Cost 
DP Cost 
M = 15 43.72 10.72 54.44 
M = 30 114.28 9.79 124.07 
 
TABLE IV.  THE RESOURCE RESERVATION COST AND DELAY PENALTY 
COST PER STAGE 
 Resource Reservation Cost Delay Penalty Cost 
M = 30 w/o Correction 
with 
Correction 
w/o 
Correction 
with 
Correction 
Stage 1 7.62 38.58 43.77 1.29 
Stage 2 9.00 37.55 142.54 3.76 
Stage 3 8.74 38.14 245.13 4.74 
DP 25.37 114.28 431.44 9.79 
 
V. CONCLUSION 
This study examines the dynamic bandwidth reservation 
problem in an IEEE 802.11 and IEEE 802.16 integrated 
network. This study propose a simple, flexible, and efficient 
uplink bandwidth reservation scheme, called multi-stage self-
correction bandwidth reservation (MSBR), that reduces the 
control message exchanges between BS and SS per frame and 
makes good use of bandwidth. The proposed design is based on 
the concept of decision period (DP), which consists of multiple 
frames. Thus, the SS issues a bandwidth request message per 
DP rather than per frame, reducing the control message 
exchanges. Second, the proposed design adopts the RLS 
algorithm as a bandwidth prediction algorithm, and uses a 
multi-stage self-correction method to reserve bandwidth by 
considering the tradeoff between the resource reservation cost 
and the delay penalty cost for real-time applications. 
Simulation results show that the proposed MSBR scheme 
utilizes bandwidth efficiently (in terms of resource reservation 
cost) without violating the QoS for real-time services (in terms 
of the delay penalty cost). 
REFERENCES 
[1] K. Gakhar, A. Gravey and A. Leroy, “IROISE: A New QoS Architecture 
for IEEE 802.16 and IEEE 802.11e Interworking,” in Proc. 2nd Intl. 
Conf. on Broadband Networks (BroadNet 2005), Boston, MA, Oct. 2005, 
pp. 607-612. 
[2] D. Niyato and E. Hossain, “Queue-Aware Uplink Bandwidth Allocation 
for Polling Services in 802.16 Broadband Wireless Networks,” in Proc.  
IEEE GLOBECOM 2005, St. Louis, MO, Dec. 2005, pp.3702-3706. 
[3] E.-C. Park, H. Kim, J.-Y. Kim and H.S. Kim, “Dynamic Bandwidth 
Request-Allocation Algorithm for Real-Time Services in IEEE 802.16 
Broadband Wireless Access Networks,” in Proc. IEEE INFOCOM 2008, 
Phenix, AZ, Apr. 2008, pp. 852-860. 
[4] A. Parasuraman and P. Varadarajan, “Future Strategic Emphases in 
Service versus Goods Businesses,” Journal of Services Marketing, vol. 2, 
no. 4, pp.57-66, 1988. 
[5] K. Gakhar, M. Achir and A. Gravey, “Dynamic Resource Reservation in 
IEEE 802.16 Broadband Wireless Networks,” in Proc. IEEE IWQoS 
2006,  New Haven, CT, June 2006, pp. 140-148. 
[6] J. He, K. Yang and K. Guild, “A Dynamic Bandwidth Reservation 
Scheme for Hybrid IEEE 802.16 Wireless Networks,” in Proc. IEEE 
ICC 2008, Beijing, China, May 2008, pp.2571-2575. 
[7] S. Haykin, “Adaptive Filter Theory,” Prentice-Hall Englewood Cliffs, 
1986. 
[8] Y. S. Sun, F.-M. Tsou and M C Chen, “Predictive Flow Control for 
TCP-friendly End-to-end Real-time Video on the Internet,” Computer 
Communications 25,, pp. 1230-1242, 2002. 
[9] D. Zhao and X. Shen, “Performance of Packet Voice Transmission 
Using IEEE 802.16 Protocol,” IEEE Wireless Communications, vol. 14, 
no. 1, pp. 44-51, 2007. 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2010/12/11
國科會補助計畫
計畫名稱: 最大化TCP在無線網狀網路傳輸效能之研究
計畫主持人: 孫雅麗
計畫編號: 97-2221-E-002-080-MY2 學門領域: 網路
無研發成果推廣資料
研究報告/技術報告 0 0 100% 
Yu-Chun Pan, Yeali 
S. Sun, Chun Hsu 
and Meng Chang 
Chen, ＇A 
User-Decided 
Service Model and 
Resource 
Management in a 
Cooperative 
WiMAX/HSDPA 
Network,＇ ICC 
2009, Germany, 
June 2009. 
研討會論文 3 0 100% 
Li-Ping Tung, 
Yeali S. Sun, and 
Meng Chang 
Chen, ＇Dynamic 
Bandwidth 
Reservation 
Scheme in 802.11 
and 802.16 
Interworking 
Network,＇ IEEE 
WCNC 
2011(accepted). 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 6 0 100%  
博士生 1 0 100%  
博士後研究員 1 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
 
