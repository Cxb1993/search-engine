 ii 
智慧化居住空間裝置之動態綁定機制的設計與實作 
報告人：紀光輝 
雲林科技大學電機工程系 
chikh@yuntech.edu.tw 
摘要 
本研究計畫關注智慧化居住空間之節能與家庭自動化技術，探究智慧空間中諸多
3C/4C家電裝置如何透過無線網路互動。我們考慮以低耗電之IEEE 802.15.4為基礎
的網路技術為例，並以使用者觀點出發，改善家庭自動化過程中無線網路所帶來
的潛在不便，並加以軟、韌、硬體的方式實現所改進的技術。採用IEEE 802.15.4 為
底層之無線傳輸，不僅耗電量極低而且可以大量的節省佈線的成本，並擺脫空間
或距離限制的束縛，因此具有獨特的優勢。但對一般使用者而言，無線裝置的安
裝、維護以及設定節點與節點間的虛擬連線關係經常比直接使用電纜線作為連線
還要複雜且不易維護，此有悖於在智慧化居住空間中使用無線網路的初衷。有鑑
於此，本計畫設計並實作「動態綁定機制」，能大大地簡化使用者設定家電設備之
間的網路連結程序，同時可大幅地簡化配置網路虛擬連線時維護、設定與配置虛
擬連線時所耗費的時間。 
本研究計畫提出幾個新的觀點，這些新的觀點可解決Zigbee或JenNet等基於
IEEE 802.15.4 為底層的網路協定所沒有考慮到的問題。我們提出虛擬邏輯閘
(virtual logic)的概念，使用串聯式虛擬連線取代並聯式虛擬連線以減少並聯式虛擬
連線時的設計複雜度。此外，我們也探討串聯式虛擬連線時造成的訊息迴圈問題。 
為了充分展現本計畫所提出的方法，我們進一步地實現無線插座系統作為範例來
節省電器不必要的待機耗電。整個系統之軟、硬、韌體係自行開發，利用無線方
 iv 
Design and Implementation of Dynamic Binding Mechanisms 
in Intelligent Living Space 
Kuang-Hui Chi 
Department of Electrical Engineering 
National Yunlin University of Science and Technology 
chikh@yuntech.edu.tw 
 
Abstract 
This research project aims at developing software, firmware, and hardware realization 
of dynamic binding mechanisms that are of utility to reconfigure how appliances work 
or interact in intelligent living space. While more and more untethered wireless devices 
are phased in to provide convenient networking access, a user may hardly familiarize 
himself to configuring or maintaining such off-the-shelf wireless devices to customized 
needs. This is because wireless nodes generally operate in some automated form of 
binding relationships among themselves, which are typically set upon startup on the 
initiative of these devices. This self-organizing functionality benefits the user to get rid 
of involved device-setting details, but may fall short of user’s expectation of better 
flexibility in that the binding relationships, once established, leave the general user less 
room for intervention and adjustment.  
As a remedy, this project develops dynamic binding mechanisms that allow the 
user to tailor network operations to certain needs without knowledge of low-level 
details. Our objectives include: 
 Easing user’s experiences of manipulating wireless networks online through a 
handy graphical user interface; 
 Practicing an object-oriented modular design to provide an integrated software 
environment to iconize geographically-dispersed network entities of concern for 
remote control, for home automation, as well as for monitoring purpose; 
 Achieving better interaction among network entities, so as to collaborate in a more 
efficient manner; 
 Leveraging the existing wireless network machinery wherever possible, making 
our proposed mechanisms in alignment with current protocols; 
 Serving as user-friendly alternatives to the current binding mechanism, 
incorporating value-added features into the wireless network to make it better 
 vi 
目 錄 
 
第一章 序論 .....................................................................................................................1 
1.1 前言 ................................................................................................................... 1 
1.2 研究動機 ........................................................................................................... 1 
1.3 研究方法 ........................................................................................................... 2 
1.4 研究架構 ........................................................................................................... 3 
第二章 IEEE 802.15.4 相關背景知識介紹 ...................................................................4 
2.1 IEEE 802.15.4 誕生與存在的主要目的 ........................................................... 4 
2.1.1 IEEE 802.15.4 主要目的 ........................................................................ 4 
2.1.2 IEEE 802.15.4 應用場合 ........................................................................ 4 
2.2 IEEE 802.15.4 相關技術規格 ........................................................................... 5 
2.2.1 無線頻率與資料率 ................................................................................. 5 
2.2.2 低功率消耗(Low Power Consumption) .......................................... 6 
2.3 網路拓樸(Network Topologies) ........................................................................ 7 
2.3.1 星狀拓樸(Star topology) ......................................................................... 7 
2.3.2 樹狀拓樸(Tree topology) ....................................................................... 8 
2.3.3 網狀拓樸(Mesh topology) ................................................................... 10 
2.4 裝置樣式(Device Types) .................................................................................. 11 
2.5 軟體架構(Software Architecture) ................................................................... 12 
2.5.1 實體層（Physical Layer） .................................................................. 13 
2.5.2 媒體存取控制子層(Media Access Control Sub-layer) ....................... 13 
2.6 IEEE 802.15.4 運作方式 ................................................................................. 14 
2.6.1 頻道管理(Channel Management) ........................................................ 14 
2.6.2 頻道指派(Channel Assignment) .......................................................... 14 
2.6.3 頻道空閒評估（Clear Channel Assessment, CCA） .......................... 16 
2.6.4 頻道拒斥(Channel Rejection) .............................................................. 16 
2.7 裝置管理(Device Management) ..................................................................... 17 
2.7.1 PAN Coordinator 選擇方式（PAN Coordinator Selection） .............. 17 
2.7.2 裝置連結與解聯結（Device Association and Disassociation） ........ 18 
2.7.3 孤兒裝置（Orphan Devices） ............................................................ 18 
2.8 裝置定址（Device Addressing） ................................................................... 18 
2.9 Data Frames and Acknowledgements .............................................................. 19 
 viii 
3.16.1 資料傳輸方法（Data Transfer Methods） ....................................... 34 
3.16.2 資料查詢（Data Polling） ................................................................ 35 
3.17 Auto-ping ........................................................................................................ 35 
第四章 Jenie Application Programming Interface .........................................................37 
4.1 Jenie Functionality ............................................................................................ 37 
4.1.1 核心功能(Jenie Functionality) ............................................................. 37 
4.1.2 硬體功能(Hardware Functionality) ..................................................... 38 
4.2 Jenie 應用程式樣板(Jenie Application Templates) ........................................ 38 
4.2.1 Jenie Application Layer Framework............................................... 40 
第五章 動態資料綁定機制 ...........................................................................................42 
5.1 動態資料綁定網路建置流程 ......................................................................... 42 
5.1.1 網路初始化階段 .................................................................................. 43 
5.1.2 虛擬連線建置階段 ............................................................................... 44 
5.1.3 節點對節點傳輸階段 .......................................................................... 44 
5.2 虛擬邏輯閘 (Virtual Logic Gate)................................................................... 44 
5.2.1 修補 Zigbee 與 JenNet Binding 機制 .................................................. 45 
5.3 綁定迴圈(Binding loop).................................................................................. 46 
5.4 防止綁定迴圈(Binding Loop Avoidance) ...................................................... 49 
5.5 服務連結埠之定義 ......................................................................................... 50 
5.7 資料路徑演算法(Datapath Algorithm) ........................................................... 50 
5.7.1 資料結構定義 ...................................................................................... 51 
5.7.2 實現資料路徑演算法 .......................................................................... 52 
第六章 系統實作與驗證 ...............................................................................................58 
6.1 系統結構及原理簡介 ...................................................................................... 58 
6.1.1 各模組功能與視窗操作說明 ............................................................... 59 
6.1.2 應用範圍 ............................................................................................... 62 
6.2 電路結構及原理簡介 ...................................................................................... 65 
6.2.1 通訊與基本 I/O 模組 ............................................................................ 65 
6.2.2 交流電源控制與感測模組 ................................................................... 66 
6.3 通訊系統架構 ................................................................................................. 67 
6.3.1 各模組使用網路角色選擇 .................................................................. 67 
6.3.2 無線通訊系統架構 .............................................................................. 68 
6.3.3 RS-232 串列通訊架構 .......................................................................... 69 
6.4 電流感測 ......................................................................................................... 71 
 1 
第一章 序論 
1.1 前言 
在許多環境中，人們不需要太高的傳輸速率，反而需要更持久、更省電的無
線裝置，在此訴求下，IEEE 802.15.4 技術便誕生了。IEEE 802.15.4 可撘配如 Zigbee
或 JenNet 網路協定以實現自動建立(self-organizing)區域網路、自我修復(self-healing)
網路連線、自動加入網路節點並可自動搜尋路徑(automatic route discovery)將訊息
達到目的地節點。這類的裝置也許是以電池供電或使用太陽能電池供電，為了達
到省電的目的，裝置頇具備有睡眠或關閉電源的功能。有許多的無線裝置皆需要
此類的應用，例如電燈開關到主動式標籤(Active tags)及加密偵測到電源監控系統。 
 
 IEEE 802.15.4 可應用領域涵蓋範圍非常廣泛，包含工業及家庭應用。主要應
用於資料傳輸率低於 250kbps，且為短距離的傳輸。此外，裝置必頇可應用在自我
供電或極度省電的場合，以上使用 IEEE 802.15.4 是個不錯的解決方案。 
 
在遠端控制的網路中，往往無頇大量的傳輸資料，且在絕大多數的時間皆處
於待機的狀態，因此以 IEEE 802.15.4 為底層之無線傳輸，不僅耗電量極低而且可
以大量的節省佈線的成本，並擺脫空間或距離限制的束縛。 
 
現今感測器技術、網路、微機電和無線通信的進步，推動了無線感測網路的
產生和發展。無線感測網路的應用十分廣泛，能應用於軍事、工業控制、生物醫
療、環境監測、智能家居等諸多領域。在無線感測網路發展技術上也有許多問題
需要去克服，而本研究主要動機乃基於使用者觀點探討在家庭自動化中無線感測
網路所帶來的不便之處並加以改進實現。 
 
1.2 研究動機 
 隨著 3C 產品的普及，無線設備的使用已與現代生活密不可分，如藍芽(IEEE 
802.15.1)、無線區域網路(IEEE 802.11)已在日常生活中隨處可見，但在家庭自動化
(home automation)或智慧型家庭的應用卻仍不甚普及。而先前提到的兩種網路都存
在著耗電量極高的問題，且在協定上大都為 Client 與 Host 的關係，往往頇透過電
 3 
係，並模擬無線節點上虛擬邏輯閘運算方式，並提出資料路徑演算法(datapath 
algorithm)、綁定迴圈(binding loop)與綁定迴圈預防的方法。 
 
在實作驗證部分，使用動態綁定機制實現無線插座與無線開關可透過電腦組
態綁定連線，並透過 PIR (passive infrared)感測器與無線插座實現電腦與周邊
(peripherals)之主從關係，當插座上的電流感測器未偵測到電腦開機時，周邊裝置
亦會隨著電腦關閉總電源，當人不在電腦旁且在未開機的狀況下，電腦的總電源
亦會自動關閉以達到零待機電源的目的，但當電腦開啟且人不在週遭時電腦總電
源則不會自動關閉。 
 
在電流感測部分乃以狀態機(finite state machine)描述如何判別有效的電流信
號與無效的雜訊，並在插座上的電器啟動後自動回傳電流波形訊號至使用者圖形
介面。 
 
1.4 研究架構 
第一章節介紹本研究之研究動機與方法簡介。第二章介紹 IEEE 802.15.4 之網路角
色、應用領域、網路形成方式等。第三章介紹 JenNet 與 IEEE 802.15.4 之關係、網
路堆疊架構、訊息傳輸方式等。第四章介紹 Jenie (Jennic 公司所自行開發的協定)
所提供的程式框架、API (application programming interface)所提供的功能、Jenie 
Interface 與 JenNet 堆疊間的關係等。第五章為本研究所提出的方法—「動態資料
綁定機制」原理及模擬。第六章為本研究的實作驗證部份，並說明電流感測器狀
態機之動作方式。第七章對此研究計畫案作總結，並探究未來可研究的方向。 
 5 
用於資料傳輸率低於 250kbps，且為短距離的傳輸。此外裝置必頇可應用在自我供
電或極度省電的場合。IEEE 802.15.4 主要應用領域列舉如下： 
 家電自動化及加密通訊：在家電控制上提供了低價位的解決方案，及另一個重
要的應用—加密通訊，以防止惡意入侵或偵測。 
 消費性電子產品：可提供點對點，或點對多點傳輸的功能，如遙控玩具、電腦
無線鍵盤及滑鼠的應用。 
 醫療保健：可用於健康情況遠端監測，及醫學遠端診斷系統。 
 車輛診斷：汽車通常包含了許多感測器及診斷裝置，可應用於一些不易連接纜
線的機構，如輪胎的胎壓偵測。 
 農業：可用於溫室及精緻農產在種植時的溫溼度環境監控，其監控的節點可能
多且範圍大。IEEE 802.15.4 允許訊息透過其他的網路節點繞送至目的地節點，
無頇所有感測節點都限定在彼此的接收範圍內。 
 
2.2 IEEE 802.15.4 相關技術規格 
本節主要描述 IEEE 802.15.4 標準中主要的技術規格。 
 
2.2.1 無線頻率與資料率 
IEEE 802.15.4 主要運作在免授權頻帶(unlicensed radio frequency bands )，全世
界的免授權頻帶主要有三個頻帶，但其中有兩個頻帶在不同地理位置有不同的規
定，並非不受管制。這三個頻帶分別為 868 Mhz、915 Mhz及2400 Mhz，表2-1為
各區域適用的免授權頻帶列表： 
表2-1：IEEE 802.15.4 各頻帶適用地區 
RF Band 
Frequency Range 
(Mhz) 
Data Rate 
(kbps) 
Channel Number(s) Geographic Area 
868Mhz 868.3 20 0 (1 channel) Europe 
915Mhz 902－928 40 1-10 (10 channels) America, Australia 
2400Mhz 2405－24800 250 11-26 (16 channels) Worldwide 
 
868Mhz 及 915Mhz 頻帶提供某些優勢，例如：較少的使用者、較少的干擾
(interference)、較少的吸收 (absorption)及較少的反射 (reflection)，但 
 7 
是重要的一環，為了延長裝置的工作時間，IEEE 802.15.4提供了以下的解決方案： 
 低工作週期(Low duty cycle) : 大多數的無線裝置皆有這類的設計，使用固定週
期的間隔來傳送資料，其傳送的時間即為工作週期 (duty cycle)。在IEEE 
802.15.4裝置中使用極小的工作週期，因此資料傳輸時間皆可在極少的時間內
完成，當裝置不傳送資料時應該轉換狀態進入睡眠模式以節省電源消耗。 
 調變(Modulation) :在 IEEE 802.15.4中，當使用868/915 Mhz頻帶時，使用BPSK 
(Binary Phase-Shift Keying)的調變方案，在2400 Mhz時則使用O-QPSK (Offset 
Quadrature Phase Shift Keying)的調變方案，盡量在最大耗功率時的平均功率比
小於1。 
然而在實際應用時並非所有的裝置都能夠使用電池供電，特別是電源需要開
一整天的裝置，該裝置不能進入睡眠模式。如Coordinators通常都連接在固定電源
上，就算沒有要傳送資料，也不能進入睡眠模式，因為Coordinators頇隨時監聽是
否有裝置加入或其他裝置傳送訊息。 
 
2.3 網路拓樸(Network Topologies) 
IEEE 802.15.4 在各種網路拓樸中至少頇包含兩種裝置節點，分別為Device及
Coordinator。 
可形成的網路拓樸可為以下幾種: 
 星狀拓樸(Star topology) 
 樹狀拓樸(Tree topology) 
 網狀拓樸(Mesh topology) 
這裡所描述的拓樸並非定義在IEEE 802.15.4的規範內，以上各種拓樸及訊息繞
送方式皆由IEEE 802.15.4上層的軟體協定層所規範，如Zigbee或Jenie，其他開發廠
商可能有自己的上層協定。 
 
2.3.1星狀拓樸(Star topology) 
在所有拓樸中，星狀拓樸是最簡單的拓樸。星狀拓樸的組成如圖2-1所示，其
 9 
負責連結所有Routers及End Devices。在子節點中，Router可以與Routers或End 
Devices建立連結，Router可連續連結數個階層。Coordinator則永遠在樹的最頂端
(Root節點)，其階層的關係如下圖2-2所示，此拓樸可視為樹狀結構。 
End Device PAN CoordinatorRouter  
圖2-2：樹狀拓樸 
 
樹狀拓樸網路的通訊規則如下: 
 子節點只能與自己的父節點做直接通訊，而子節點間無法做直接的通訊。 
 每個父節點能夠與自己的父節點與子節點做通訊。 
 訊息傳遞時，End Device頇先向上傳遞給最靠近自己的父節點，父節點若判斷
目的地位址為自己的子節點時則會向下傳遞給該目的地子節點，否則會再將
訊息轉送至更上一層的父節點。 
在IEEE 802.15.4中若沒有使用上層軟體協定，連線路徑是固定的，若子節點與
父節點間的連線失效，子節點裝置無法自行決策新的路徑。 
在樹狀拓樸中，訊息傳遞路徑及訊息的傳遞過程是由上層的軟體層決定，藉
由軟體層判斷是否要將訊息繞送給其他節點，或傳送給自身的應用層(Application 
Layer)。 
上述網路節點間的關係及稱呼方式備註如下： 
 End Device 不可有子節點(children)，因此無法成為父節點(parents) 
 擁有相同父節點的節點被稱之為兄弟(sibling)節點 
 節點若有相同的祖父母(grandparent)的節點稱之為表(堂)兄弟節點(cousins) 
 11 
End Device PAN CoordinatorRouter  
圖2-4：網狀拓樸(Mesh topology) 
網狀拓璞提供一個重要的機制稱為找尋路徑(route discovery)，允許網路在傳送
訊息時自行尋找最佳的有效路徑。 
在網狀拓樸中，訊息的傳遞過程是由協定堆疊中的網路層(Network Layer)自行
做決策，由網路層自行決定是否要將訊息繞送給其他節點，或傳送給自身的應用
層。 
 
2.4 裝置樣式(Device Types) 
在IEEE 802.15.4中依照節點在網路中所扮演的角色可分為以下幾個裝置樣式： 
 PAN Coordinator：在IEEE 802.15.4中，一個網路只允許有一個PAN Coordinator
存在，它在網路中所扮演的角色功能包含: 
 指派整個網路的PAN ID 
 針對網路運作尋找最適當的無線通訊頻道 
 指派一個short address (16 bits長度的位址)給自己 
 當其他裝置要求加入網路時頇 handling requests 
 協助子節點轉送訊息到另一個節點 
 
 Local Coordinator (上層的網路協定稱為router)：在樹狀網路中，能夠擁有一
個或多個 local coordinator(功能與PAN coordinator類似)，每個coordinator 提
 13 
2.5.1 實體層（Physical Layer） 
 實體層主要功能為實體傳輸媒介之間介面與介面的位元資料交換及與上層媒
體存取控制子層(MAC Sub-layer)間的資料傳遞。 
在實體的無線通訊媒介中主要的責任如下： 
 頻道評價(Channel assessment) 
 位元調變、解調變、封包同步等動作 
實體層也提供以下的服務介面給上層協定(MAC Sub-layer)使用： 
 實體層資料服務(PHY Data Service)：提供MAC Sub-layer與實體層間傳遞資料
的服務介面。 
 實體層管理服務(PHY Management Services)：提供MAC sub-layer控制無線裝
置與通訊方式及功能設定等機制的服務介面。 
其中管理實體層的資訊儲存在PHY PIB (PAN Information Base)的資料庫當中。 
 
2.5.2 媒體存取控制子層(Media Access Control Sub-layer) 
MAC Sub-layer主要的責任如下： 
 提供網路裝置(Device)連結與解連結(associating/disassociating) 
 提供在共用頻道中的存取控制 
 產生Beacon同步信號(使用super frame機制才頇使用) 
 Guaranteed Timeslot (GTS)管理(使用super frame機制才頇使用) 
LLC sub-layer與MAC sub-layer皆屬於Data Link Layer，而LLC sub-layer主要為 
IEEE 802.15.4 提供一個與上層軟體協定溝通的共通介面，若只是要開發基於IEEE 
802.15.4上層的應用程式，LLC sub-layer是可以被忽略的。MAC sub-layer也提供以
下的服務介面供給上層協定使用： 
 MAC Data Service (MCPS)：提供上層協定與MAC Sub-layer間傳遞資料的服務
介面。 
 MAC Management Services (MLME)：MAC Sub-layer供給上層協定控制無線裝
 15 
8 920 
9 922 
10 924 
2400 MHz 
11 2405 
Worldwide 
12 2410 
13 2415 
14 2420 
15 2425 
16 2430 
17 2435 
18 2440 
19 2445 
20 2450 
21 2455 
22 2460 
23 2465 
24 2470 
25 2475 
26 2480 
 
IEEE 802.15.4可在頻帶範圍內做頻道掃描的動作，並允許上層的協定去選擇最
適當的頻道。網路初始化的步驟如下： 
 當網路啟動時PAN Coordinator時必頇在硬體支援的頻帶上選擇一個頻道。
PAN Coordinator會使用 IEEE 802.15.4所提供頻道能量偵測掃描 (Energy 
Detection Scan)的功能選擇一個最適當的頻道(通常是最安靜的頻道)並停留在
該頻道等待裝置加入這個網路。 
 當一個新的裝置啟動欲加入網路時，裝置必頇去掃描PAN Coordinator所使用
的頻道，之後該裝置會被賦予一個該網路的PAN ID，而裝置可使用以下兩種
方式執行頻道掃描(或其中一種，視網路通訊方式決定)： 
 主動頻道掃描(Active Channel Scan)：裝置頇主動傳送Beacon Requests 信
號，當Beacon Requests信號被一個或多個  Coordinator 偵測到時，
Coordinator會回覆Beacon response的信號給裝置。 
 17 
2.7 裝置管理(Device Management) 
本章節將討論IEEE80.15.4的裝置如何加入(Joining)與離開(leaving)網路。 
 
2.7.1 PAN Coordinator選擇方式（PAN Coordinator Selection） 
在整個網路中必頇至少有一個 PAN Coordinator。Coordinator的裝置必頇是一
個全功能裝置(Full Function Device; FFD)。 IEEE 802.15.4網路中初始化網路的第
一個步驟就是選出Coordinator。FFD成為Coordinator角色的方式可依照網路所存在
的FFD數量不同可由以下幾個方法選出： 
 當整個網路只有一個FFD的裝置存在，而且整個網路也只需要一個Coordinator
的時候，此FFD就成為Coordinator。在單一個FFD的網路中Coordinator可能同
時扮演著Gateway的功能，可與外部網路做聯繫。通常像這樣的網路組態，
Coordinator都是預先決定好的。 
 整個網路同時存在著多個FFD的裝置時，在這樣的網路組態中，任何一個FFD
的裝置都有可能成為Coordinator的角色，而決定Coordinator的動作大致上可分
成預先設定好(手動的方式)或讓FFD們自行選出Coordinator的角色，所以在多
個FFD的環境中要選出Coordinator的方式大致上可分成以下兩種方式： 
 由使用者決定：在這樣的情況下，或許我們希望在特定位置的FFD成為
Coordinator，這時使用者可以透過如按下一個按鈕，使該FFD成為
Coordinator。 
 由多個FFD組成的網路自行決定：在這樣的網路中也許我們不在乎
Coordinator應該由哪個FFD才能成為Coordinator，這時每個FFD裝置可透
過類似以下例子選出Coordinator；舉例來說：每個FFD裝置都會先透過執
行Active Channel Scan 來偵測每個頻道是否已經有Coordinator的角色存
在，若存在就會嘗詴加入該網路中，若所有頻道都沒有Coordinator回應，
這時FFD就會將自己成為Coordinator。 
PAN Coordinator被選出來後，Coordinator必頇指派一個PAN ID賦予這個網
路。而PAN ID不可與其他網路的PAN ID相同，所以頇考量到每個Coordinator彼此
間能夠彼此「聽」得見彼此。 
 
 19 
2.9 Data Frames and Acknowledgements 
IEEE 802.15.4網路通訊主要由資料(data)與(MAC command)兩種訊框(frames)
所 組 成 ， 且 可 選 擇 是 否 要 求 接 收 端 回 覆 acknowledgements 的 封 包 。 
Acknowledgements是由MAC sub-layer所提供。 
 
2.10 資料傳輸（Data Transfer） 
在網路節點傳輸時，可能由一個節點非預期的發送資料到另一個節點；也有
可能是當一個節點主動送出需求後接收端的節點才回覆一筆資料，以下將針對此
兩種情況的通訊流程加以說明： 
 當資料由Coordinator送給節點時，該節點有可能正處於Sleep mode，而導致傳
送失敗。若發生這樣的情況，節點結束Sleep mode後該節點頇主動對
Coordinator做查詢資料(polls data)的動作，當Coordinator接收到該節點查詢資
料動作時，Coordinator頇檢查資料是否有效，若有效就送data frame給節點。
在這樣的情況，Acknowledgment可選擇性的實作。(圖2-6a) 
 當資料從節點傳送到可保證接收的節點時(如：節點傳送資料給Coordinator, 因
為Coordinator不會進入Sleep mode所以Coordinator稱為可保證接收的節點)，若
為這樣的情況，通常節點可直接傳送data frame。 
在這樣的情況Acknowledgment 可選擇性的實作。(圖2-6b) 
上述的兩種傳輸情形如下圖(圖2.6)所示： 
       
 
 
圖2-6：資料傳輸流程 
 
(b) 裝置傳輸資料給 Coordinator (a) 裝置向 Coordinator 查詢資料(polls data) 
 21 
模式。 
上述的SO與BO參數關係如右：0 ≤ SO ≤ BO ≤ 14。若 BO = 15, Coordinator將
不會主動傳送出beacon frames除非網路節點主動要求beacon封包。若 SO = 15, 
Superframe在beacon結束後Coordinator就不再使用Superframe 機制。 
注: aBaseSuperframeDuration=160 Symbol。2450、915、868 MHz 之 Symbol Rate 分
別是62.5(ksymbol/s)、40(ksymbol/s)、與20 (ksymbol/s)。 
SD: Superframe Duration，BI: Beacon interval 
 
2.11.2 Non-beacon Enable Mode 
 在non-beacon enabled模式下，Coordinator不會定期的發送出beacon封包(但 
End Device或Route要加入Coordinator的網路時，仍會主動要求Beacon封包)，在這
種模式下的通訊方式又稱之為非同步(asynchronous)通訊。 
 在Non-beacon Enable Mode下允許End Device平時是處於低功耗狀態，只有在
要送出訊息時才會醒來。當有資料要送至End Device時可能End Device正處於睡眠
狀態，因此End Device頇定期醒來，並在醒來後主動詢問Coordinator是否有資料處
於等候(pending)狀態(在Beacon Enable Mode下pending data的資訊會附在beacon封
包之中)。 
 23 
3.3 Network Application ID and PAN ID 
在 JenNet 中有兩個主要的 ID，一個為 PAN ID，另一個為 Application ID，分
別介紹兩 ID 如下所敘: 
 PAN ID：PAN ID 是一個 16bits 的數值資料。在 JenNet 協定所構成的網路中，
相同區域網路的所有裝置皆擁有相同的 PAN ID；區域網路初始過程中，會檢
查是否自己預設的 PAN ID 與鄰近的 PAN ID 相同，若相同，在初始化網路時
就會指派不同的 PAN ID 給自己，直到 PAN ID 成為唯一值。 
 Application ID：Application ID 在產品出廠時由產品開發商指派，此 ID 為一個
32bits 的固定數值。 
 
3.4 Services and Service Profile 
 所謂“Service”意指網路節點所能提供或接收的對應功能，舉例來說： 
 鍵盤輸入具有提供資料給其他 Service 的能力。 
 LCD 輸出具有從其他 Service 接收資料的能力。 
亦可將 Service 解釋成數位資訊的相容性，也就是某個輸入端節點 A 提供了對輸出
端節點 B 而言是有意義的數位資訊，且節點 B 有辦法解釋節點 A 資訊。舉例來說：
溫度控制節點(如：冷氣)可能只對溫度感測器或遙控器節點所提供的資訊有興趣。 
 在 JenNet 網路中每個節點最多可提供 32 個分別獨立的 Service，所對應到的
ID 分別編號成 1~32。 
 網路中的每個裝置都擁有一個 Service Profile，Service Profile 為一組位元(bits)
對應(bitmap)的資料，由 32bits 所組成。若位元為 1 表示有提供該 Service 服務，若
設成 0 表示該 Service 不支援，在 32bits 中的每個 bit 對應 Service 關係如下；bit 0
表示 Service 1、bit 1 表示 Service2 … bit 31 表示 Service 32。 
 Service Profile 是由系統開發者預先決定好的。 
 
3.5 Data Protection 
 JenNet 包含了 128bits ASE 的加密系統，可避免鄰近網路的惡意入侵，此加密
系統被設計成 Jennic JN513x 無線微處裡器的硬體功能，可避免被外部媒介入侵並
解譯 JenNet 資料。 
 
3.6 Co-existence 
 JenNet standard 保證網路裝置共存(Co-existence)，意指裝置間不會相互干擾。 
 
 25 
 End Device 
以下將分別介紹各角色的功能： 
Coordinator： 
在 JenNet 網路中無論拓樸形式為何，至少必頇存在一個 Coordinator 的角色。
網路系統初始化為 Coordinator 的主要功能，Coordinator 在 network level 的主要任
務如下： 
 選擇適當的頻道，並以該頻道建立網路拓樸 
 起始網路 
 管理網路子節點(node)加入或離開。 
Coordinator 也提供訊息繞送及其他服務。 
Router： 
 在樹狀拓樸的網路中，至少需要擁有一個以上的 Router，其 network level 主
要功能如下： 
 遞送訊息(Relay Message)從一個節點到另一個節點。 
 允許子節點與自己建立連線拓樸關係。 
End Device： 
End Device 皆位於拓樸的末端(無法當父節點)，且通常是以電池供電，只有在
傳送及接收訊息時才會啟動，平時皆處於 sleep mode 以節省電能的消耗。 
 
3.8.2 Network Topologies 
使用 JenNet 構成的網路可形成以下兩種網路拓樸(Topologies)： 
 星狀拓樸(Star Topology) 
 樹狀拓樸(Tree Topology) 
將於下面分別描述： 
 
星狀拓樸(Star Topology)： 
 星狀拓樸通常只包含 Coordinator 及 End Device。 在此拓樸中，若 Coordinator
的子節點含有 Router，Router 則不允許包含子節點。 
 此拓樸中，若 End Device 或 Router 欲傳遞訊息，所有訊息皆需透過 Coordinator 
作遞送(relay)的動作。如下圖所示： 
 27 
 
圖3-3：樹狀拓樸(Tree Topology) 
 
樹狀拓樸通訊規則如下： 
 子節點(child)能夠與自己的父節點(parent)直接通訊。 
 父節點(parent)能夠與自己的子節點(child)直接通訊。 
 子節點間若要傳遞訊息，訊息都需先經過父節點才能傳遞到其他節點。 
頇注意在此拓樸中，訊息傳遞路徑是由各節點的JenNet協定所掌控，而網狀拓
樸(Mesh Topology)是樹狀拓樸的變形，要實現網狀拓樸頇在Application Layer實現。 
 
3.8.3 子節點數量（Number of Children） 
在JenNet網路中，Coordinator與Router所允許擁有的最大子節點數量必頇預先
定義在程式的參數中。 
 
3.8.4 JenNet 定址方式 
若使用JenNet作為Network層協定，其網路位址只使用IEEE(MAC) Address來定
址，也就是64bits的位址格式。 
 29 
3.10 Jenie Interface 
圖3-4中，Jenie interface提供Application Layer與JenNet protocol stack間互相溝
通的API介面。(有關Jenie interface詳細資料請看第四章) 
 
3.10.1 Jenie 的形式（Forms of Jenie） 
Jenie interface 提供兩種樣式可供程式開發者使用，描述如下： 
 Jenie API(Application Programming Interface)：以C語言函式方式提供，直接在
Jennic模組內撰寫程式(本研究使用此種方式)。 
 AT-Jenie serial command：可經由其他處理器或電腦透過UART介面傳送serial 
command方式控制Jennic模組。 
 
3.10.2 Jenie 功能（Jenie Functionality） 
Jenie提供functions/commands兩種容易使用的介面方便撰寫應用程式，並可透
過此介面實現網路管理(network management)、資料傳輸(data transfer)及執行作業
系統任務(operating system task)。Jenie API提供了以下的主要功能： 
 透過指定的Coordinator起始網路並加入網路子節點。 
 啟動其他網路節點(End Device及 Router)。 
 允許節點成為Router的子節點。 
 設定節點的無線傳輸功率。 
 註冊網路節點服務(Service)與請求(requests)網路上其他節點的服務列表。 
 連結(Bind)相容服務(Service)的本地節點及遠端節點。 
 從其他節點傳送及接收資料。 
 提供節點由sleep mode自動喚醒(限End Device)。 
 可藉由外部的非揮發性(non-volatile)記憶體儲存及讀取資料。 
 提供了控制硬體資源的功能。 
 
 31 
3.12 Message Routing 
網路節點間的通訊是透過訊息(Messages)的傳遞，Message是由訊框中的多個
欄位集合所組成；Frame的樣式，依照不同通訊目的所使用的欄位也有不同功能。 
 
3.12.1 訊息傳播與繞送（Message Propagation and Routes） 
在所有的網路拓樸中，訊息傳遞從送出到接收的過程通常需要經過一到數個
中繼節點，因此frame的欄位當中頇包含兩個目的位址(destination address)。這兩個
目的地位址分別為： 
 最終目的地位址(address of the final destination)，必頇由Application Layer提供。 
 下個跳躍節點位址(address of the node which next hop)，由JenNet stack藉由路由
表選擇。 
以上兩種目的位址皆使用IEEE MAC address。 
中繼節點的Application Layer無法取得或知道被轉送的訊息內容，轉送的動作
由JenNet stack掌控。 
 
3.12.2 鄰居表與路由表（Neighbor and Routing Tables） 
Routers及Coordinator的路由機制乃藉由儲存在本身記憶體的節點位址(node 
address)資訊選擇下個跳躍點，包含以下兩種位址表格： 
 Neighbor table：內容包含自己的中繼子節點(immediate children)與本身的父節
點。 
 Routing table：內容包含所有自己的所有子孫節點(以自己為樹根所包含的樹下
所有節點)。 
在JenNet網路中的Router知道自己所有擁有的子孫節點位址，Coordinator知道
整個網路的所有節點位址，這兩種表格皆在網路初始化時或節點加入網路時自動
更新。 
 
3.12.3 建立繞送路徑（Establishing Routes） 
當網路中有新的節點加入網路或某個節點移到其他地方成為其他Router或
Coordinator的子節點時，會觸發某些Routers或Coordinators更新Routing table，過程
如下： 
1. 當新的節點加入或移到該網路時，該節點會送出 “Establish Route” 給
 33 
 Coordinator與Routers ：Coordinator與Routers會紀錄最後 10筆的 Sequence 
Number；當裝置接收到訊息後會先檢查序號歷史紀錄中序號是否已經存在，
若存在，就會直接將訊息丟棄。丟棄訊息的動作是由JenNet stack 所負責，所
以訊息不會傳送到網路層。 
序號歷史紀錄中的Sequence Number如果在100ms內沒有收到新的Sequence 
Number，Sequence Number就會從序號歷史紀錄中刪除掉。 
 
3.14 繞送路徑修復（Route Repair） 
當節點與父節點或子節點失去聯繫時會引發Route Repair事件；意指移除之前
建立的繞送路徑並且使用新的繞送路徑取代之。觸發此事件的情況有以下兩種可
能： 
 第一種：可能當節點與父節點失去聯繫時，節點的application layer會接收到 
“stack reset”的通知，此時節點會詴圖重新加入(re-join)網路。 
 第二種：可能是當節點從父節點或子節點接收到“Unknown-Node”訊息亦會觸
發Route Repair事件，產生“Unknown-Node”訊息的情況有以下兩種情形： 
 當網路的子節點移到其他父節點後，前一個父節點再詴圖與子節點通
訊，此時，前一個父節點就會接收到“Unknown-Node”訊息，這時，父節
點便會將子節點的位址從Neighbor table中移除。 
 當父節點察覺子節點訊息無法到達時，會與子節點斷絕關聯。這時子節
點再詴圖與父節點通訊時，子節點會接收到“Unknown-Node”訊息，這時
子節點必頇重置自己本身的stack並重新與其他節點建立父子關係。 
 
3.15 Facilitating Communication 
下面將介紹JenNet的兩個通訊機制： 
1. Discovery：當網路某個節點要和其他節點通訊時必頇先找到該網路節點。 
2. Binding：此機制提供節點與節點之間服務(service)的虛擬連線(virtual link)，並
提供一對一或一對多的連線關係。 
 
3.15.1 Discovery 
Discovery機制使JenNet網路節點可得知其他節點的資訊，例如其他節點的網路
位址或所能提供的服務(Service)。找出其他節點資訊的過程就稱為“Discovery”。 
Discovery 通常應用在使用者組態(user-configured)網路，節點必頇找到其他相容的
 35 
 
圖3-5：使用綁定機制的資料傳輸方式 
 
3.16.2 資料查詢（Data Polling） 
End Device為了節省功率消耗，在無頇傳送資料時會進入sleep mode以節省電
源消耗。所以若有遠端節點要傳送資料給End Device時會先將資料暫存在父節點的
緩衝區內，直到子節點結束sleep mode後才會詢問(poll)父節點是否有自己的資料。 
 
3.17 Auto-ping 
子節點有可能處於sleep mode時遺失父節點，也有可能因為非經常性的資料傳
輸而導致父節點誤認為子節點已經不存在；以上兩種情形可能導致End Device欲向
父節點詢問是否有自己的資料時，父節點會認為子節點非自己的(dis-owned)，導致
子節點詢問父節點是否有自己的資料時，父節點會回覆 “NO DATA”的狀態給子節
點。 
為了解決上述情況，子節點會週期性的ping父節點以確認父節點還存在。在每
次傳送訊息前也會ping父節點： 
 若父節點存在且確認該節點為自己的子節點，父節點在接收完子節點資料後
會回覆response給子節點。 
 37 
第四章 Jenie Application Programming Interface 
Jenie API (Application Programming Interface)提供了應用層在開發時使用C語
言呼叫底層功能時的介面，可應用於Jennic公司所開發的JN513x系列的無線微處裡
器，軟體堆疊與實際硬體間的關係如下圖所示： 
 
圖4-1：Application using Jenie API 
 
4.1 Jenie Functionality 
Jenie 功能主要分成兩大部分，分別為： 
 核心功能（Jenie Functionality） 
 硬體功能（Hardware Functionality） 
 
4.1.1 核心功能(Jenie Functionality) 
在 Jenie 核心功能主要提供了網路管理(Network Management)、資料傳輸任務
(Data Transfer)與系統任務(System tasks)三大部分，分別介紹如下： 
網路管理任務(Network Management Tasks)：主要提供了網路初始的功能，這些
功能包含： 
 組態及初始化網路。 
 將裝置初使化成為Coordinator、Router或End Device(其中一種角色)。 
 39 
 
圖4-2： Application Code Overview 
 41 
 宣告Routing table陣列。 
 vJenie_CbInit()：此Callback Function被呼叫時會初始化自己成為Router角色，
並詴圖將自己加入網路中，其餘功能與Coordinator相同。 
vJenie_CbMain() 、 vJenie_CbStackMgmtEvent() 、 vJenie_CbStackDataEvent() 、
vJenie_CbHwEvent()等回呼函數功能大致皆與Coordinator相同，差別只在於
vJenie_CbStackDataEvent()與vJenie_CbStackMgmtEvent()內部所觸發網路的事件型
態不同。 
 
當節點為End Device時各回呼函數所頇實現的功能： 
 vJenie_CbConfigureNetwork()：此Callback Function在cold start階段時會被呼
叫，當角色為End Device時此回呼函數需初始化的參數包含： 
 從網路中加入與傳送Application ID 
 關閉繞送功能 
 vJenie_CbInit()：此Callback Function被呼叫時會初始化自己成為End Device
角色，當End Device由Sleep mode醒來並發現已失去網路連線時會觸發warm 
re-start事件，並重新加入網路中。其餘功能與Coordinator、Router相同。 
 vJenie_CbMain()：當角色為End Device時頇在此函數實現eJenie_Sleep()使End 
Device進入Sleep mode。 
vJenie_CbStackMgmtEvent()、vJenie_CbStackDataEvent()、vJenie_CbHwEvent()等回
呼函數功能大致皆與Coordinator相同，只差別在於觸發的事件不同。 
 43 
此時傳輸過程以虛擬連線觀點來看同等於mesh network的傳輸方式。以下將探討這
三個階段的通訊流程。 
5.1.1 網路初始化階段 
網路建立的初始化流程是由Network Layer (JenNet or Zigbee)所完成，其動作流
程請參考3.8.2章節介紹，在本章節只介紹新加入的通訊流程，以下我們先假設
Coordinator會備份所有網路節點的binding table。 
 在節點完成初始化並加入網路後，為了使各節點binding table保持在最新的狀
態，新加入網路的節點需要在網路初始化後隨即向Coordinator詢問是否有最新的
Binding資料(在節點離開期間可能使用者又修改了虛擬連線關係)，而這時重新加入
網路的節點有兩種情況：第一種情況為通訊暫時中斷，第二種情況為全新的裝置
加入節點網路，下面將一一討論這兩種情況： 
 通訊暫時中斷： 
在這種情況下，可能因為通訊受到干擾而導致子節點與父節點暫時性的失
聯，但使用者極有可能在這段期間修改了Service binding的虛擬連線關係，所以為
了使節點因為暫時性失聯而造成的binding table不同步，子裝置節點在重新連線後
Coordinator頇隨即傳送新的Binding table給子節點，在子節點從新加入網路時
Coordinator的Application Layer會接收到CHILD_JOIN的訊息，之後Coordinator會以
Device的MAC Address查詢是否有Device的Binding Table之與否為依據，若有就上
傳該節點相關的binding table給該節點，通訊過程如圖5-2所示，圖中步驟一為
Network Layer所管理，在Application Layer中會接收到CHILD_JOIN的訊息。 
 
 
圖5-2：子節點從新加入網路並更新binding table 
 
 全新的裝置加入節點網路： 
因為全新的裝置加入網路後，Coordinator並沒有Device端的binding table，所以
與前例的差別只在於省略upload binding table 的動作。 
 
 45 
5.2.1 修補Zigbee與JenNet Binding機制 
在第三章中曾經提到過JenNet與Zigbee網路中Service binding的機制可以是一
對一、一對多或多對一的虛擬連線關係，但在實際應用中可能會出現更複雜的情
況，以下將以多對一(多個控制來源對一個被控制節點)為例說明其問題點。我們以
多個開關控制一個電燈為例，如圖5-4所示： 
 
 
圖5-4：多對一系統 
 
表 5-1：多對一系統狀態表 
Time Switch0(input) Swtich1(input) Swtich2(input) Lamp(output) 
T1 off off off off 
T2 off off off→on on 
T3 off off→on on→off on 或 off 
T4 off on off→on on 
T5 off→on on→off on→off on 或 off 
T6 on off off→on on 
T7 on off→on on→off on 或 off 
T8 on on off→on on 
 
先假設Switch0~2為只有ON跟OFF兩種狀態的開關，表5-1中時間從T1到T2，
Switch0切換至ON時，Lamp狀態也會改變成ON，但時間從T2到T3時若Switch1與
Switch2同時變化，這時就會發生Lamp的狀態有可能是unknown的狀態，也就是說
燈光只會受最後一個發出信號的開關狀態改變。 
上述情形並不符合日常生活上的應用，因為在多開關控制單一燈光(多對一)
的系統中，只要所有和燈光連線開關中的其中一個開關狀態改變，燈光狀態就需
 47 
 
圖5-6：圖示說明 
 
上圖圖示中，將 Switch定義成只具備輸出能力的裝置；Lamp定義成為具有輸
入與輸出能力的裝置，且輸出跟隨輸入而變化。 
以下圖應用為例，可能同時會有多組開關對應到多組電燈的連線情況，讓每組
Switch同時可控制到多組電燈與開關如下圖例： 
 
圖5-7：並聯配置 
 
上圖5-7的並聯配置的方法會隨著控制點與被控制點的數量增多而變得複雜而
且難以維護，因此可以將上述的並聯配置改成下圖5-8中串連的配置方式也可達到
相同的功能。 
 49 
5.4 防止綁定迴圈(Binding Loop Avoidance) 
在5.3章節中提到了綁定迴圈的問題，接下來將提出一個簡單的機制以防止
Binding loop的問題。 
 觀察5-9圖中可以發現第一個送出訊息的是Switch3，但Switch3並不在Binding 
loop的路徑上，所以我們無法以在封包中附帶第一個發送節點的Source Address之
方式來判斷此封包是否自己已經接收過了。所以本研究使用防止Binding loop的方
法步驟如下： 
1.欲傳送資料的節點在傳送前頇先向Coordinator申請一個Sending ID，之後
Coordinator會回覆一個Sending ID給該節點，並將Sending ID加一。 
2.欲傳送資料的節點接收到Sending ID後將Sending ID附在封包內，之後再傳
送給Binding table中指定的目的地節點。 
3.當封包經過binding路徑上的節點時，路徑上的節點會先比較收到的封包內
Sending ID是否比自己存在記憶體中的Sending ID數值還要大，若是才繼續
傳送到下一個Service Binding的節點，並將目前存在記憶體中的Sending ID
更新成接收到的Sending ID。若發現接收到封包中的Sending ID與目前存在
記憶體中的Sending ID數值相同或更小，就將接收到的封包discard掉。下圖
為防止Binding loop的步驟示意圖： 
 
 
圖5-10：Binding loop Avoidance 
 51 
 
圖5-11：將Virtual logic gate放置於接收端 
 
5.7.1 資料結構定義 
接著我們將列出Binding table中有關Virtual Logic Gate的欄位，以下為表5-3中
各欄位說明： 
ConNum：連線編號，在使用者組態介面中每個元件間的每個連線皆賦予一個連線
編號，且該連線編號是在整個網路中獨一無二的，以32bits表示。 
SrcNodMac：傳送節點的MAC Address，頇與SrcNodePort欄位配合，若SrcNodePort
中的數值為0xFF時表示傳送的節點為虛擬元件之輸入端連線編號，欄位為64bits。 
SrcNodPort：傳送節點發送訊息的 Service Port， 0x00~0xFE分別對應各個
ServicePort，0xFF保留給虛擬連線使用，以8bits表示。 
TarNodMac：接收節點的MAC address，頇與TarNodPort欄位配合，若TarNodPort
中的數值為0xFF時表示下一個接收節點為虛擬元件，以64bits表示。 
TarNodPort：接收節點的Service Port，0x00~0xFE分別對應各個ServicePort，0xFF
保留給虛擬連線使用，以8bits表示。 
Op：對應到虛擬邏輯閘運算元，0x0:直接連線、0x1：not運算、0x2：and運算、0x3：
or運算、0x4：xor，0x5~0xFF保留日後使用，以8bits表示。 
IData：輸入端資料。 
IReady：若輸入資料已運算完成，此旗標會定成true，待最後的輸出運算完畢後才
又全部歸零，細節請看5.7.2。 
 
接著詴著轉換使用者連線圖形以對應到Binding table中，以圖5-12為例並將圖
形轉換成表5-3，表格中我們以dx代表Nx連線的輸出資料(x為連線編號)，運算符號
OR表示成“+”、AND表示成“〃”、XOR表示成“⊕”、NOT表示成 dx。 
 53 
出結果錯誤。 
 
圖5-13：模擬邏輯運算平行處理 
 
表5-4為圖5-13轉換成表格的運算過程。 
ConNum SrcNodMac SrcNodPort TarNodMac TarNodPort Op IData IReady 
N1 0xA0000001 1 N3 0xFF not d1 true 
N2 0xB0000002 1 N4 0xFF xor d2 true 
N3 N1 0xFF N4 0xFF xor d3 false 
N4 N3 0xFF 0xE00000003 1 dir d4 false 
初始化 
 55 
016     //若目前IReady為true表示有可能可以計算下個階層 
017     if (BindingTable[i].IReady==true) 
018     { 
019       switch (BindingTable[i].Op) 
020       { 
021         case VirtualLogicType.dir://直接連線運算 
022           //將資料直接輸出 
023           Op_Dir(BindingTable[i]); 
024           //將目前的IReady欄位設成false 
025           BindingTable[i].IReady = false; 
026           break; 
027         case VirtualLogicType.not: 
028             //NOT運算結果放置下一個虛擬邏輯的IData 
029             BindingTable[BindingTable[i].TarNodMac].IData =  
030             Op_Not(BindingTable[i]); 
031             //將下一個虛擬連線的IReady欄位設成true 
032             BindingTable[BindingTable[i].TarNodMac].IReady = true; 
033             //將目前的IReady欄位設成false 
034             BindingTable[i].IReady = false; 
035           break;   
036          case VirtualLogicType.and://and運算 
037        //取得BindingTable表格中所有TarNodMac欄位與目前內容相同的所有連線編號 
038           int [] con = SearchTheSameTarget(BindingTable[i].TarNodMac); 
039           if (con.length > 1) 
040           { 
041               //若二元運算的輸入端皆備妥才做運算 
042             if((BindingTable[con[0]].IReady==true) && 
043               (BindingTable[con[1]].IReady==true) 
044             { 
045               //AND運算結果放置下一個連線的IData欄位 
046               BindingTable[BindingTable[i].TarNodMac].IData =  
047               Op_And(BindingTable[con[0]], BindingTable[con[1]]); 
048               //將下一個虛擬連線的IReady欄位設成true 
049               BindingTable[BindingTable[i].TarNodMac].IReady =true; 
050               //將表格中與目前TarNodMac內容值相同的IReady欄位設成false 
051               BindingTable[con[0]].IReady = false;  BindingTable[con[1]].IReady = false; 
052             } 
053           } 
054            break; 
055          case VirtualLogicType.or://or運算 
056         //取得BindingTable表格中所有TarNodMac欄位與目前內容相同的所有連線編號 
057             int [] con = SearchTheSameTarget(BindingTable[i].TarNodMac); 
058             if (con.length > 1) 
059             { 
060               //若二元運算的輸入端皆備妥才做運算 
 57 
 
圖5-14：Datapath Algorithm 模擬畫面 
 59 
 
 
圖6-3：無線開關 
 
圖6-4：無線PIR模組 
 
圖6-5：軟體之組態連線畫面 
 
圖6-6：插座之遠端監控畫面 
 
6.1.1 各模組功能與視窗操作說明 
遠端組態監控模組(圖 6-1)： 
電腦與本模組相連接後可遠端監控、組態、遙控並偵測每個無線插座開關與
PIR 感測器。 
無線插座(圖 6-2)： 
 可自行辨識插座上的裝置是否在開啟的狀態，並可監控電壓電流，透過無線
感測網路可回傳給電壓及電流波形及平均峰值電流給遠端組態監控模組。 
無線開關(圖 6-3)： 
電源開關可自由配置插座與開關間的關係，可以實現一對多的控制。 
無線 PIR 模組(圖 6-4)： 
可感測是否周遭有人在活動，並自動發送開關信號給每個插座做控制。 
軟體之組態連線畫面(圖 6-5)： 
圖 6-7 為視窗上的圖示接腳功能： 
 61 
 
圖6-9：插座遠端監控介面說明 
 
其中手動輸入指令列目前實現的指令如下： 
 遠端遙控命令： 
remote sw1 [on/off] xx:xx:xx:xx:xx:xx:xx:xx :開啟或關閉遠端第一個插座的總電源
指令。 
remote sw2 [on/off] xx:xx:xx:xx:xx:xx:xx:xx :開啟或關閉遠端第二個插座的總電源
指令。 
remote charge [on/off] xx:xx:xx:xx:xx:xx:xx:xx：開啟或關閉遠端電池充電電路總電
源指令。 
remote current average [on/off] xx:xx:xx:xx:xx:xx:xx:xx：開啟或關閉遠端平均峰值電
流監控指令。 
remote current waveform [on/off] xx:xx:xx:xx:xx:xx:xx:xx：開啟或關閉遠端電流電壓
波形監控指令。 
以上 xx:xx:xx:xx:xx:xx:xx:xx 為各網路節點的 IEEE 802.15.4 MAC Address。 
 
 63 
 
圖6-10：3C產品節能應用 
 
自由組態 
在許多應用場合中，如電燈與開關間常常在房屋建設後才發現開關位置設置
不妥當或開關對應到燈光的組合不對，要重新配線又是個浩大的工程。因此本系
統為解決這方面的困擾，採用動態配置的方式，只需簡易的透過滑鼠在電腦前配
置連線，就可達到重新配線的動作，如下圖(圖 6-11)所示。 
 
系統特色: 
1.可一對多配置: 開關與插座間可以一對多的方式作配置(一個開關對應到多個被
控制的裝置)。 
2.可經由電腦組態連線關係: 只頇在電腦圖形介面上透過滑鼠連線即可達到同電
源配線的目的。 
3.可透過程式遠端控制每個開關: 在電腦前即可得知家裡每個插座目前是開啟或
關閉，並可透過程式遠端控制該插座關閉或開啟。 
 65 
6.2 電路結構及原理簡介 
圖 6-1 ~ 6-3 裝置皆由「通訊與基本 I/O 模組」與「交流電源控制與感測模組」
經由搭配不同的 Firmware 即可成為不同功能的裝置。 
圖 6-1 與圖 6-3 電路結構皆由「通訊與基本 I/O 模組」搭配不同 Firmware 所構
成，Firmware 底層網路層協定皆透過 JenNet 實作而成。 
圖 6-2 無線插座則由「交流電源控制與感測模組」所實現。 
 
6.2.1 通訊與基本 I/O 模組 
本模組可實現無線通訊、RS-232 通訊與基本 I/O 控制，主要硬體區塊如下圖(圖
6-12)： 
 
圖6-12：通訊與基本I/O模組 
 
 JN5139：為 Jennic 公司所開發的 Wireless Module，整合了微處理器、IEEE 
802.15.4 實體層與串列通訊介面、DIO…等。 
 RS-232：連接至 JN5139 的 UART0 ，可做為 debug 用途與實作遠端監控時電
腦程式介面與各節點的通訊橋樑。 
 Basic I/O block：I/O 視需求上件，每支 DIO 接腳可選擇連接 Touch switch 或 
LED(兩者擇一上件)，電路如下所示(圖 6-13)： 
 67 
 
圖6-14：交流電源控制與感測模組 
 
6.3 通訊系統架構 
在實作過程中發現，JenNet 網路層在封包長度過長時沒有實現封包自動切割
與重組的功能，因此在實作時在 Jenie Interface 與應用層之間自行設計了 FIFO 
Queue 並實現封包切割與組合的功能。在 RS-232 通訊方面因為牽涉到各節點頇有
獨立的專用控制面板，且頇在偵測到網路節點信號時頇在視窗圖型介面動態產生
相對的圖示，因此在 RS-232 通訊部份亦設計了封包格式，並加入的 check sum 的
功能，以防止非預期的狀況發生。 
 
6.3.1 各模組使用網路角色選擇 
因為 Coordinator 與 Router 在實際使用時不會進入睡眠模式，因此通常適用於
固定式電源的裝置，End Device 在平時無動作時只有在固定時間內會醒來並向父
節點查詢資料(polls data)，所以不適合使用於經常性傳輸資料的裝置，而在所有網
路角色裡面只有 Coordinator 可得知 PAN 當中的每個網路節點，因此在設計裝置類
型時我們使用搭配方式如下： 
 遠端組態監控模組：或稱 dongle，使用 Coordinator 角色實現。 
 無線插座：使用 Router 角色實現。 
 無線開關：使用 End Device 角色實現。 
 無線 PIR 模組：使用 End Device 角色實現。 
 
 69 
因為傳輸時視資料種類不同，因此將封包分割成以下的欄位，以便接收端接
收到時可依照 Data Type 欄位判斷資料結構以還原原本的資料，Sequence Number
為封包切割後的封包序號以便 NetRecData 接收資料時提供封包組合的資訊，在其
他模式時 Payload Data 會因不同各種不同模式而做長度調整。 
Sequence 
Number
Data Type Payload Data
8bits 8bits MIN:0Byte   MAX:80Bytes
 
圖6-16：Unicast 時的封包格式 
 
6.3.3 RS-232 串列通訊架構 
在本研究中遠端組態監控模組(dongle)是使用 Coordinator 角色實現，主要功能
是將無線接收到的資料 forword至 PC端，還有將接收 PC端所下的指令透過RS-232 
forword 至指定的網路節點上，因此頇讓 PC 端在接收到資料後有足夠的資訊判別
為哪個節點所發出，因此將 RS-232 封包設計如圖 6-17： 
 
圖6-17：RS-232傳送至PC端時的封包格式 
 
Check Sum：提供 PC 端接收到資料時可做偵錯的動作，Check Sum 的值是將 Check 
Sum 的之後的所有資料切割成 Byte 的長度並做加總，若 PC 端接收到資料後做相
同運算並比對 Check Sum 的數值不符就會把封包丟棄。 
Payload Length：提供 PC 端得知封包長度大小。 
PID：提供 PAN ID 的資訊。 
Sequence Number：提供封包重組結合時順序資訊。 
Source MAC Address：無線節點發送端之 MAC Address。 
 71 
6.4 電流感測 
電流感測器會將電流經由霍爾元件轉換成電壓信號，之後 ADC 會將電流感測
器所產生的類比信號量化，並將量化後的資料透過無線傳輸傳送至遠端組態監控
模組(dongle)，再經由 dongle 將資料轉送至 PC 端。而我們感興趣的信號是當電源
插座上的電器裝置啟動後所產生的電流信號，但在電源插座沒有啟動任何電器裝
置的狀況下，電流感測器亦會產生雜訊，若當電器沒開啟的情況下也將電流 ADC
量化的數據傳送至 dongle，不僅耗電而且也浪費頻寬。所以在電流感測時我們只
有在電器使用時才傳送電流電壓信號給 dongle。 
因此為了達到節省頻寬以及節省無線傳輸時所產生的耗電，必頇知道何時為
雜訊，何時有電流信號，並在有電流信號時作電流波形資料傳輸，以下我們將對
電流感測器所產生的雜訊做探討，並實現有電流時才傳送波形的動作。 
 
6.4.1 雜訊邊界 
下圖 6-18 為電流感測器在無電流情況下，經由 JN5139 無線模組內建的 ADC
轉換後的量化波形。從圖中可看到在沒有電流的情況下，ADC 亦會偵測到雜訊，
若使用DSP的技巧亦無法使在無電流的情況下使雜訊信號完全消除(使其成為存直
流值)。因此本研究使用較為簡單的方式消除在未感測到電流信號時無意義的資料
傳輸。 
 
圖6-18：無電流信號時電流感測器的所產生的雜訊 
 73 
6.4.2 取樣週期與觸發信號 
 
圖6-21：JN5139內建之ADC架構圖 
 
 JN5139 模組內建 12-bits 解析度的 ADC，透過類比多工器連接到 ADC，其類
比多工器提供了 6 組輸入信號端點，其中 ADC0 預設為讀取內部電壓，ADC1~4
供外部電路使用，ADC5 預設連接到內部的溫度感測器。 
 在 ADC 參考電壓部份可選擇使用內建的參考電壓或由外部電路 VREF接腳的
電壓當作參考電壓，此選項可由程式規劃，而參考電壓設定關係到 ADC 可容許的
最大信號振幅輸入範圍，參考電壓與 ADC 最大可輸入電壓關係如表 6-2，假設
VREF 接腳之參考電壓為 1.6V，參考電壓增益設定(Gain Setting)為 1，此時 ADC
輸入電壓可在 0~3.2V 之間，本研究成果的 ADC 亦為此設定值。 
 
表 6-1：ADC 參考電壓與增益設定 
VREF Gain Setting Maximum Input Range Supply Voltage Range (VDD) 
1.2V 0 1.2V 2.2V-3.6V 
1.6V 0 1.6V 2.2V-3.6V 
1.2V 1 2.4V 2.6V-3.6V 
1.6V 1 3.2V 3.4V-3.6V 
 75 
R15
1 0 k
D11
1 n 4 0 0 7
R14
1 0 k
Trigger
3.3VDC
U 7
8 1 7 B
AC1_IN
AC2_IN
 
圖6-23：觸發信號產生電路 
 
圖 6-24 為電流感測狀態機，圖 6-25：觸發信號狀態機，這兩個狀態機為個別
獨立的兩個中斷函式，在說明狀態機動作原理前先解釋圖中各參數定義： 
 Ndtime：雜訊偵測計時器。 
 TR：觸發次數計數器。 
 SF：取樣旗標，SF=true 時表示可以開始取樣。 
 IRES：由 ADC 讀入的電流感測器量化數值。 
 Inoise(MAX)：雜訊最大邊界值。 
 Inoise(MIN)：雜訊最小邊界值。 
 CTH：取樣值大於 Inoise(MAX)或小於 Inoise(MIN)之連續次數，當 CTH=>20 時表示為
有效信號。 
 S：為紀錄 IRES 之集合。 
 
動作方式： 
S0 與 Ts0：電源 Power on 或 reset 時，電流感測狀態機(圖 6-24)與觸發信號狀
態機(圖 6-25)會分別進入初始化狀態 S0 與 Ts0，在 S0 狀態時會持續取樣 1 秒鐘，
並在 1 秒鐘內將取樣的量化最大值放入 Inoise(MAX)變數中，最小值會放入 Inoise(MIN)
之中，接著進入 S1 狀態。 
S1：電流感測器之 ADC 轉換完成時發生中斷，發生中斷後會讀取 ADC 的量化值
IRES 並判斷 IRES 是否大於 Inoise(MAX)或小於 Inoise(MIN)雜訊邊界值，若符合條件則
CTH+1(S2 狀態)，若連續取樣達 20 次 IRES 皆大於雜訊邊界值，表示為有效信號，
則設定 SF=true 將於下一個觸發信號 TR 開始時取樣，當 SF==true 時觸發信號狀態
機(圖 6-25)開始上數，這時電流感測狀態機會在 S1 與 S5 之間做讀取並將 IRES 放入
S 集合當中，直到取樣達到 3 個 TR 週期，TR==3 個週期後便會進入 S6 的狀態，
S6 狀態是將 S 集合中的資料透過無線傳輸傳送出去，並設定 TR=-1 及 SF=false 以
 77 
電源啟動或 Reset 時偵測雜訊邊界 Inoise(MAX)與 Inoise(MAX)持續一秒鐘(圖 6-26、圖
6-27)。 
 
圖6-26：信號雜訊邊界偵測示意圖 
 
圖6-27：信號雜訊邊界狀態 
 79 
連續取樣三個週期波形並存入集合 S中(圖 6-30、圖 6-31)。 
 
圖6-30：在同步信號正緣時作取樣三個週期示意圖 
 
圖6-31：在同步信號正緣時作取樣並存入集合S之狀態機 
 81 
 
 
圖6-34：防止突波示意圖 
 
圖6-35：防止突波之狀態機 
 83 
第七章 結論與未來研究方向 
 目前 Zigbee 與 JenNet 尚有許多未完整的地方，在網路層之基礎建設已經完
整，但在 User friendly 部分仍似乎鮮少有人探討，絕大多數皆以設計者或研究者角
色看待此項技術，這可能也是導致無線感測網路無法融入一般使用者的原因。 
 在全世界科學家與研究單位都在苦思著如何替感測網路尋找突破性的應用
時，似乎沒有人考慮到，自己年邁的父母親可能連手機簡訊如何使用都不知道。
當然隨著科技的發達，人們的知識水準提高，但專業程度畢竟不如研究者。 
在實作本研究期間發現若要使感測網路可讓一般使用者接受，必頇使無線感
測網路物件化，其概念猶如 USB 裝置，當裝置一插入電腦中，電腦可立即得知該
使用那種方式與USB裝置溝通以及該USB裝置擁有那些功能及作業系統該如何回
應。若想像感測網路裝置如同 USB 裝置，那無線網路即是一個匯流排，若裝置一
加入網路即可透過使用者圖形介面得知該網路元件之功能，並可透過簡易設定即
可使裝置間達到預期的效果，應該可使感測網路應用普及化。但要讓全世界電器
裝置都物件化為吾人所不能及的，期望未來有朝一日能制定相關標準。 
 85 
[24] 王兆慶,"以Wireless Sensor Network作定位之實作," 國立中正大學電機工程研
究所, 2006. 
[25] 劉東昱,"IEEE 802.15.4低速率無線近身網路中 2.45GHz模式之基頻訊號處理
與電路設計," 國立中正大學電機工程研究所, 2005. 
[26] 蔡宗翰,"IEEE 802.15.4下行動隨意網路之角色切換機制," 國立成功大學電腦
與通信工程研究所, 2006. 
 87 
 
圖A-2：交流電源控制與感測模組電路圖(current sensor + SSR) 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/30
國科會補助計畫
計畫名稱: 智慧化居住空間裝置之動態綁定機制的設計與實作
計畫主持人: 紀光輝
計畫編號: 99-2220-E-224-010- 學門領域: 自由軟體暨嵌入式系統
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計畫所開發之技術受邀至臺北南港世貿參展（台灣低碳博 
覽會—綠色設計，2010/10/21 —23) 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
