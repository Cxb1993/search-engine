the Multiple Channel Streaming Media System-on-a-Chip 
system and develops a new advanced memory scheduling 
mechanism to overcome this challenge. This scheduling 
mechanism integrates scheduling/arbitration 
mechanisms, unified access buffer, and a multiple 
channel memory to provide a sufficient memory 
bandwidth for the multimedia processors with high 
bandwidth requirements.  
In this project, the development of the proposed 
advanced memory scheduling mechanism is partitioned 
into two stages. The first stage is to model the 
basic simulation environment by using SystemC and 
Electronic System Level (ESL) design. Then we can 
rapidly build the virtual platform and the model of 
the scheduling mechanism. The second stage is to 
improve the performance of our research by using 
multimedia processors and software co-simulation. 
Finally, we plan to apply the design of this project 
into real multimedia SOC. The execution of this 
project not only can enhance the practicability and 
popularization of this architecture, but also can 
offer a modern design flow by Electronic System Level 
design. 
 
英文關鍵詞： Digital Video Surveillance System, Advanced Memory 
Scheduling Mechanism, Multiple Channel Streaming 
Media System-on-a-Chip, SystemC, Electronic System 
Level Design. 
 
 2
scheduling mechanism to overcome this 
challenge. This scheduling mechanism 
integrates scheduling/arbitration 
mechanisms, unified access buffer, and a 
multiple channel memory to provide a 
sufficient memory bandwidth for the 
multimedia processors with high bandwidth 
requirements.  
In this project, the development of the 
proposed advanced memory scheduling 
mechanism is partitioned into two stages. 
The first stage is to model the basic 
simulation environment by using SystemC 
and Electronic System Level (ESL) design. 
Then we can rapidly build the virtual 
platform and the model of the scheduling 
mechanism. The second stage is to improve 
the performance of our research by using 
multimedia processors and software 
co-simulation. 
Finally, we plan to apply the design of 
this project into real multimedia SOC. The 
execution of this project not only can 
enhance the practicability and 
popularization of this architecture, but also 
can offer a modern design flow by 
Electronic System Level design. 
 
Keywords: Digital Video Surveillance 
System, Advanced Memory Scheduling 
Mechanism, Multiple Channel Streaming 
Media System-on-a-Chip, SystemC, 
Electronic System Level Design. 
 
 
二、前言 
近年來，數位視訊監控系統蓬勃發
展，已漸漸取代傳統類比監控系統。在數
位視訊監控中，為了處理大量的影音視
訊，通常以一顆複雜而功能強大的多通道
串 流 媒 體 系 統 晶 片 (Multiple Channel 
Streaming Media System-on-a-Chip)，來負
責多個影像來源之影像錄製與即時壓縮。
此種多媒體系統晶片，內部整合多個媒體
運算處理器(Multimedia Processor)/矽智產
(IP) 於在單一晶片內，以應付使用者多元
化的需求。但隨著監控通道數的成長，以
及影像解析度需求的提高，舊有的架構設
計已經不能滿足系統需求，因而導致重要
的影像資料未能即時錄製或遺失，進而減
低監控能力。分析其原因，主要是因為記
憶體子系統的頻寬不足，而無法充分發揮
所有 Multimedia Processor 的計算效能。 
有鑑於此，本計劃著眼於多通道串流
媒體系統晶片，其記憶體子系統之效能與
資料吞吐量之提升，以解決在多媒體系統
晶片下，記憶體頻寬嚴重不足的問題。此
一新設計之記憶體系統排程機制，肩負各
個 Multimedia Processor 和晶片外記憶體
模組間，傳輸管理者與互連網路仲裁者之
任務。透過本計劃所設計之先進的記憶體
存取偵測與多通道排程機制，將可提高系
統晶片內各個 Multimedia Processor 實際
存取資料能力，以滿足使其能進行即時處
理時，所需之記憶體頻寬。在先前的初期
研究探索後，我們發現：當系統晶片上有
許多個高頻寬需求的 Multimedia Processor
時，頻寬的滿足除了取決於記憶體的效能
外，更需要動態的隨著不同的 Multimedia 
Processor，其記憶體存取的需求加以分
配，才能確保有限記憶體頻寬的最佳利
用。因此在本計劃裡，我們研發先進記憶
體排程機制，透過排程/仲裁機制、存取緩
衝區、與多通道記憶體的配合，根據各個
Multimedia Processor 的需求，動態調整各
個通道的傳輸頻寬，確保每個通道均能獲
得所需要的記憶體存取能力，以解決多通
道串流媒體系統晶片中，記憶體存取的效
能瓶頸。 
 
三、研究目的 
一般多通道數位影音監控SOC系統都
是由多通道視訊輸入處理器與硬體編解碼
裝置共用一個系統匯流排，並透過匯流排
對記憶體作存取，如圖一所示。但是由於
匯 流 排 的 特 性 ， 即 使 系 統 上 每 個
Multimedia Processor 均有自己的緩衝區，
並能直接存取記憶體而不需透過 CPU 搬
移資料，在同一時間內，仍只有一個
Multimedia Processor 能存取記憶體，因此
 4
一個 Bus，兩個 Bus 間透過一個橋接器互
連，減少使用單一 Bus 造成效能不彰的狀
況發生。 
 
2. 新式互連網路與多通道系統晶片
設計： 
由於系統晶片內，連結各個主要子系
統，需要一專屬的晶片上互連網路
(On-Chip Network)，而系統的效能瓶頸，
亦主要發生於互連網路，因此，一個好的
互連網路機制，將是設計多通道串流媒體
系統晶片的主要挑戰，因此，以下將介紹
目前最新的互連網路機制，以及高頻寬需
求之網路系統晶片設計。  
ARM CoreLink 互連網路  [17]: 為
ARM Ltd.提出的最新互連網路協定與
IP，主要應用於高頻寬需求的 SOC 架構
裡。CoreLink 除了能提供更好的傳輸速度
外，更可以在配合其專利之記憶體管理單
元 IP：MMU-400 下，提供 Cache Coherence
的功能。如圖四所示。搭配 CCI-400 的骨
幹互連網路下，各個子系統基於 AXI 4.0
的協定，搭配 MMU-400、DMC-400、與
NIC-400 等專利 IP，各個高頻寬需求的子
系統，如處理器、GPU、網路控制器、與
記憶體控制器，將可達到更好的傳輸效
能。但由於此一互連網路協定須結合其他
ARM 公司之專利設計，現有之處理器與
週邊 IP 將無法利用此項功能，因而限制了
它的實用性。 
PROC3 網路處理器 [11]：Vlachos et.al. 
提 出 了 一 種 Programmable Protocol 
Processor (PROC3)的網路處理器(Network 
Processor)架構，如下圖五所示，此架構是
一個可程式控制的硬體設備，使用在網路
傳輸的環境，可加速處理封包的速度。由
於 PROC3 需要提供兩個 PPE 做資料的傳
輸，記憶體的頻寬成為一主要問題，因此
設 計 一 個 Data Memory Management 
Subsystem (DMM)的機制，來增加頻寬。
此系統主要考量在於網路封包處理與轉送
的記憶體存取，其存取行為規律且流量固
定，其記憶體頻寬需求並非如多媒體應用
般不穩定且不平均，因此其架構設計與排
程機制並不適用於多媒體 SOC 系統使用。 
PROC3 網路處理器 [11]：Vlachos et.al. 
提 出 了 一 種 Programmable Protocol 
Processor (PROC3)的網路處理器(Network 
Processor)架構，如下圖五所示，此架構是
一個可程式控制的硬體設備，使用在網路
傳輸的環境，可加速處理封包的速度。由
於 PROC3 需要提供兩個 PPE 做資料的傳
輸，記憶體的頻寬成為一主要問題，因此
設 計 一 個 Data Memory Management 
Subsystem (DMM)的機制，來增加頻寬。
此系統主要考量在於網路封包處理與轉送
的記憶體存取，其存取行為規律且流量固
定，其記憶體頻寬需求並非如多媒體應用
般不穩定且不平均，因此其架構設計與排
程機制並不適用於多媒體 SOC 系統使用。 
 
3. Interconnect Network 的仲裁機制： 
系統晶片上之 Interconnection Network
大多為匯流排(Bus)架構。在此架構下，所
有連接於匯流排之 Multimedia Processor
與週邊 IP 可依傳輸行為，分為 Master 與
Slave。同一 Multimedia Processor 可同時
為 Master 與 Slave。例如 DMA Controller，
在存取記憶體時扮演 Master 的角色，而在
接受 CPU 的控制時，則為 Slave。若 Master
模組欲透過匯流排與其他模組溝通時，必
須先向仲裁模組發出要求，待仲裁模組許
可後，始可得到匯流排使用權，進而得以
進行資料傳遞。但 Slave 模組不可主動要
求使用匯流排與其他模組溝通，只能被動
地等待 Master 來的要求。由此可知：匯流
排之仲裁機制為影響匯流排效能之主要因
素之一。以下，我們會簡述幾個仲裁機制
的相關研究： 
 
Static Priority: 此仲裁機制一開始就
直接給每個 Master 一個唯一且固定的
Priority Value[4][12]，當有多個 Master 同
時提出需求時，則依照其 Priority Value 來
決定由何者優先。此方法的優點是較簡單
 6
 
z 主要排程機制之探討： 
 
以下針對多通道串流媒體系統晶片之先進
記憶體排程機制中，兩個主要的排程模
組，分別規劃初步的排程演算法： 
 
【演算法一】Buffer Scheduler 排程演算
法： 
 
Buffer Scheduler要排程的對象為主處理器
(CPU)及多個多媒體處理器(Codecs)對一
個共用的 buffer 存取資料之競爭。為了提
昇多媒體處理器傳輸效率，在各個多媒體
處理器前端配置 Access Buffer，使單一多
媒體處理器可以進行大量資料傳輸，減少
交握時間；而處理器的傳輸需求著重於低
延遲，因此在處理器前未配置 Access 
Buffer。針對處理器之低延遲需求及多媒
體處理器之高頻寬需求，設計演算法，如
演算法一所示： 
 
【演算法二】DRAM Scheduler 排程演算
法： 
 
此部分傳輸效能主要受限於 DRAM 之存
取時間較長，所以我們藉由 Interleaving 的
記憶體排列方式，提高 DRAM 系統之總頻
寬，以滿足 Multimedia Processor 之高頻寬
需求，在搭配初期簡單的排程機制，以期
望系統效能有顯著的提升，如演算法二所
示： 
 
六、結果與討論 
 
  由於 SOC 設計須整合各種不同的處
理器、週邊、與多媒體處理器於單一晶片
內，複雜度極高，再加上需要軟體的協同
驗證，才能確定此一系統的功能正確性與
效能，若以傳統 IC 設計之 RTL 設計流
程，通常需要到完成晶片細節設計，並生
產雛型晶片後，才能進行軟體驗證；若功
能不如預期或效能不足，則需回到規格重
新定義階段，重頭修改 RTL Verilog 程式，
再次重複Cell-Based Design Flow，此種「設
計－驗證」循環曠日費時，且不易收斂。
因而在本計劃引進電子系統層設計的觀
念：透過可結合軟硬體設計之新系統塑模
語 言 ： SystemC ， 與 交 易 層 塑 模
(Transaction-Level Modeling; TLM)技術，
系統架構設計者可在在硬體設計初期，忽
略電路內部的細節，僅需正確的定義各個
功能區塊之介面與通訊方式，並設計主要
功能區塊之行為與演算法。設計者可藉此
快速地建立系統雛型。同時，軟體也可以
開始進行撰寫，並用以驗證此一雛型，以
大幅度縮短系統開發時程。此外，透過電
子系統層設計與 TLM 的高抽象階層系統
設計，架構設計者極易修改系統架構與各
週邊設計之功能，可大幅度降低傳統 RTL
設計流程之「設計－驗證」循環耗時的問
題，更適合未知系統、架構、與演算法之
發展。所以在此一階段，我們將採用上述
所提之 Modeling 語言：SystemC 做初步的
設計。各個階段之發展步驟詳述於後： 
 
階段一：建立基本多通道串流媒體系統環
境： 
在這一階段，我們計劃以 SystemC 建立一
個 SOC 的基本平台，如圖六所示：此系統
包含一個 CPU、四個 Multimedia Processor
及記憶體子系統（Memory Subsystem），
及其他必要週邊 IP，處理器與各個週邊透
過 ARM AMBA 協定中的 AHB 晶片匯流
排（On-Chip Bus）連結。圖八中的 CPU
模型計劃以 CoWare/ARM 共同開發的
ARM926EJS PSP，以求盡可能模擬真實
CPU 之功能與延遲時間，On-Chip Bus 也
同樣使用 CoWare/ARM 共同開發的 AHB 
Bus Functional Model，以求與真實系統相
近，亦有真實系統匯流排之頻寬限制，而
非傳統以 C/C++設計之模擬器的假設性的
參數設定。除此之外，我們計劃自行研發
Memory Controller 及 Multimedia Processor
之可參數化 SystemC 模組，此平台之設
計，預期可以找出一般多媒體應用之 SOC
系統，可能之效能瓶頸，並作為此一研究
後續階段之自調適記憶體系統效能比較之
基本平台。 
 
 8
八、參考文獻：  
[18][19][20][21]為本國科會計畫補助
之研究成果。 
 
[1] Advanced RISC Machine Ltd., “AMBA 
Specification Rev 2.0”, 1999, 
http://www.arm.com. 
[2] Synopsys Inc., http://www.synopsys.com. 
[3] C. A. Waldspurger and W.E. Weihl, 
“Lottery Scheduling: Flexible 
Proportional-Share Resource 
Management,” in: Proc. of symposim on 
Operating System Design and 
Implementation, pp.1-11, Nov. 1994. 
[4] C. H. Chen, G. W. Lee, J. D. Huang, and 
J. Y. Jou, “Real-time and bandwidth 
guaranteed arbitration algorithm for SoC 
bus communication”,  in: Proc. of 11th 
Asia and South Pacific Design 
Automation Conference 
(ASP-DAC2006) ,pp.600-605, Jan. 2006 . 
[5] CoWare Inc., http://www.coware.com. 
[6] Faraday Technology Corporation, 
http://www.faraday-tech.com/html/ 
solutions/8180.html. 
[7] G. Kornaros , I. Papaefstathiou,A. 
Nikologiannis , and N. Zervos, “A 
Fully-Programmable Memory 
Management System Optimization Queue 
Handling at Multi Gigabit Rate” in: Proc. 
of Design Automation Conference,  pp. 
54- 59, June 2003.  
[8] IBM Corporation, “CoreConnect 
Web-Page”, http://www-03.ibm.com/ 
technology/ges/semiconductor/power/lice
nsing/coreconnect/. 
[9] Intel Corporation, “8237A Datasheet”; 
http://www.intel.com. 
[10] J. Nieh, M. S. Lam, “The Design, 
Implementation and Evaluation of 
SMART: A Scheduler for Multimedia 
Applications”, in: Proc. of the Sixteenth 
ACM Symposium on Operating Systems 
Principles, pp.184-197, Oct. 1997.  
[11] K. Vlachos , N. Nikolaou , T. 
Orphanoudakis , S. Perissakis , D. 
Pnevmatikatos , G. Kornaros , J. A. 
Sanchez , G. Konstantoulakis , 
“Processing and Scheduling Components 
in an Innovative Network Processor 
Architecture” in: Proc. of the 16th VLSI 
Conference, pp.195-201, Jan. 2003.    
[12] M. Conti, M. Caldari, G. B. Vece , S. 
Orcioni, and C. Turchetti, “Performance 
Analysis of Different Arbitration 
Algorithms of the AMBA AHB Bus,” in 
Proc. of the 41st Design Automation 
Conference, pp.618-621, 2004. 
[13] Mobilygen Corporation, “MG3500 
Datasheet”, http://www.maxim-ic.com/ 
quick_view2.cfm/qv_pk/6092. 
[14] Open Core Protocol International 
Partnership, http://www.ocpip.org. 
[15] Open SystemC Initiative, 
http://www.systemc.org. 
[16] Texas Instruments Inc., 
http://www.ti.com/. 
[17] ARM Ltd., http://www.arm.com/. 
 
 
[18] Slo-Li Chu, Min-Jen Lo, “Design a 
High-Performance Memory Controller for 
a Multimedia SOC”, PRZEGLAD 
ELEKTROTECHNICZNY (Electrical 
Review); Vol. 2012, No 7b, pp. 353-356, 
2012. (SCI) (NSC 100-2221-E-033-043) 
[19] Slo-Li Chu, Chih-Chieh Hsiao; 
“Optimizing Techniques for OpenCL 
Programs on Heterogeneous Platforms”, 
International Journal of Grid and High 
Performance Computing, Vol.4, No. 3, pp. 
48-62, 2012. (EI) (NSC 
100-2221-E-033-043) 
[20] Slo-Li Chu, Geng-Siao Li, and Ren-Quan 
Liu, “DynaPack: A Dynamic Scheduling 
Hardware Mechanism for a VLIW 
Processor”, Applied Mathematics & 
Information Sciences; Vol. 6, No. 3S, pp. 
983-991, 2012. (SCI) (NSC 
100-2221-E-033-043) 
[21] Slo-Li Chu, Chih-Chieh Hsiao, and 
Chiu-Cheng Hsieh, “Demand-Driven 
Register File for Multithreaded Mobile 
GPUs”, IEICE Electronics Express, Vol.9, 
No.20, pp. 1562-1567, 2012. (SCI, EI) 
(NSC 100-2221-E-033-043) 
 
 
 10
 
 
演算法二：Backend Scheduler 排程演算法： 
 
Step 1：由 DRAM Scheduler 檢視 Adjustable Buffer 內各 Multimedia 
Processor 之 資 料 緩 衝 區 的 狀 態 ， 以 決 定 哪 些 Multimedia 
Processor 之存取要加入排程。 
 
Step 2：算出各個加入排程的 Multimedia Processor 存取之權重（經 Hash 
Function 處理），允許權重最高的進行傳輸。 
 
Step 3：當最高權重的 Multimedia Processor 存取有數個時，以 Round Robin
的方式排程各個加入排程的 Multimedia Processor 存取，time 
slice 則是 DRAM 之存取時間。 
 
Step 4：控制 DRAM 與 Adjustable Buffer 內各 Multimedia Processor
之資料緩衝區之傳輸進行。 
 
Step 5：結束此次傳輸，返回 Step 1。 
 
其中，H＝3*BASR＋2*BI＋1*BADR 
 
（BASR：Bank Active & Same Row； BI：Bank Idle； BADR：Bank Active 
& Different Row） 
 
 
 
 
 12
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
MPEG4 Encoder 1080p
0
100000
200000
300000
400000
500000
600000
700000
800000
900000
1000000
1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39
Clock Cycle (million)
Tr
an
sf
er
 N
um
be
r 
(B
yt
es
)
Optimized Transfer Size
Required Transfer Size
Non-Optimized Transfer Size
 
(a) 
 
 
MPEG4 Encoder 720p
0
200000
400000
600000
800000
1000000
1200000
1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39
Clock Cycle (million)
Tr
an
sf
er
 N
um
be
r 
(B
yt
es
)
Optimized Transfer Size
Required Transfer Size
Non-Optimized Transfer Size
 
(b) 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/25
國科會補助計畫
計畫名稱: 串流媒體系統晶片之先進記憶體排程機制之研發
計畫主持人: 朱守禮
計畫編號: 100-2221-E-033-043- 學門領域: 計算機結構與計算機系統
無研發成果推廣資料
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
