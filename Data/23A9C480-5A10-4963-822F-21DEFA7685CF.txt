I 
 
目錄 
1. 中文摘要  
2. 英文摘要 
3. 報告內容 I: Heuristic algorithms for constructing interference-free 
and delay-constrained multicast trees for wireless mesh networks 
4. 報告內容 II: A Study on Channel Allocation Strategies for Interference-Free 
     Multicast in Multi-Channel Multi-Radio Wireless Mesh Networks 
5. 成果報告自評表 
6. 出席國際學術會議心得報告 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
III 
 
 
ABSTRACT 
In this report, we present two papers which are resulted from the research project (NSC 
98-2221-E-024-004-MY2) we proposed. The first paper has been published in the SCIE journal, “KSII 
TRANSACTIONS ON INTERNET AND INFORMATION SYSTEMS”. The second paper is under review 
currently. 
The title of the first paper is “Heuristic algorithms for constructing interference-free and 
delay-constrained multicast trees for wireless mesh networks”. In this paper, we study a problem that is 
concerning how to construct a delay-constrained multicast tree on a wireless mesh network (WMN) such that 
the number of serviced clients is maximized. In order to support high-quality and concurrent interference-free 
transmission streams, multiple radios are implemented in each mesh node in the WMNs. Instead of only 
orthogonal channels used for the multicast in the previous works, both orthogonal and partially overlapping 
channels are considered in this study. As a result, the number of links successfully allocated channels is much 
larger than that of the approaches that only orthogonal channels are considered. The number of serviced 
subscribers is also increased dramatically. Hence, the goal of this study is to find interference-free 
delay-constrained multicast trees that can lead to the maximal number of serviced subscribers. This problem is 
referred as the MRDCM problem. Two heuristics, load-based greedy algorithm and load-based MCM 
algorithm, are developed for constructing multicast trees. Furthermore, two load-based channel assignment 
procedures are provided to allocate interference-free channels to the multicast trees. A set of experiments is 
designed to do performance, delay and efficiency comparisons for the multicast trees generated by all the 
approximation algorithms proposed in this study. 
Since channel allocation (CA) algorithm is an important step for solving the MRDCM problem described 
above, we re-investigate this problem and proposed several new approaches in the second paper. The second 
paper is under review currently. The title of the paper is “A Study on Channel Allocation Strategies for 
Interference-Free Multicast in Multi-Channel Multi-Radio Wireless Mesh Networks”. In this paper, suppose a 
video stream delivering system deployed on a multicast tree that is embedded in a multi-channel multi-radio 
wireless mesh network is given, our problem is concerned about how to allocate interference-free channels to 
tree links and maximize the number of serviced mesh clients at the same time. In this paper, we propose a 
channel allocation heuristic algorithm based on best-first search and backtracking techniques. The 
experimental results show that our BFB based CA algorithm outperforms previous methods such as DFS and 
BFS based CA methods. In addition to that, we also propose a tree refinement method to enhance the quality 
of channel-allocated trees by adding uncovered destinations at the cost of deletion of some covered 
destinations. Our aim of this refinement is to increase the number of serviced mesh clients. According to our 
simulation results, it is proved to be an effective method for improving multicast trees produced by BFB, BFS 
and DFS CA algorithms.  
 
Keywords: wireless mesh networks, channel Allocation, delay-constrained multicast, interference, best 
first, backtracking 
 
270      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
1. Introduction 
Recently, the IEEE 802.11-based wireless mesh network (WMN) is expected to be a new 
promising tecnology to provide last-mile broadband services and ubiquitous connectivity to 
homes and businesses in rural, suburban, or metropolitan areas. The backbone of a WMN 
consists of a number of static mesh routers (MRs) equipped with one or more radio interfaces, 
where one of them acts as the gateway node connected with the wired network. The other MRs 
access Internet through the gateway node by multiple-hop communications. The end-users 
serviced by MRs are called mesh clients. They connect to WMNs through access points built 
on MRs [1]. 
It is well-known that the performances of multi-hop wireless networks are greatly affected 
by the interference between links with overlapping channels in vicinity areas. For binary 
interference model adopted in reference [2], two interfering links cannot transmit and receive 
packets at the same time if they are allocated with the same channel. In fact, interference can 
be classified into two categories, co-channel and adjacent-channel [3]. For links within 
interference range, the co-channel interference occurs from transmissions on the same channel, 
whereas the adjacent-channel interference occurs from transmissions on adjacent and 
overlapping channels. As a result, the network aggregate capacity in WMNs may be greatly 
reduced. Generally, there are two approaches for solving the problem. One approach is to 
consider how to fully utilize multiple channels for WMNs where each MR is equipped with 
one radio interface. The single interface has to switch among all the channels frequently in 
order to communicate with the neighbors [5][6]. This operation may cause significant delay 
for IEEE 802.11 hardware. As a result, it is an inefficient approach for WMNs with 
single-interface. A study on modification of the operating system kernel is then represented for 
supporting frequent channel switching [7].  
The second approach is that each MR is equipped with multiple radio interfaces and each 
interface can tune to one channel at a time. Multiple channels can be allocated to multiple 
interfaces at the same time. As a result, multiple concurrent transmissions among MRs are 
allowed. However, interference from among neighboring links may still exist if they are 
allocated with the same or partially overlapping channels. Therefore, the key issue of this 
approach is how to bind each interface to a radio channel in a way that the interference is 
minimized and the capacity is maximized. This problem is recognized as the 
interference-aware channel assignment (CA) problem for the multi-channel multi-radio 
(MCRM) WMNs. For ease of the difficulty for solving the interference-aware CA problem, 
only non-overlapping (orthogonal) channels are considered for most of the CA algorithms 
proposed in literature [9][10][11].  
For links within the interference range, orthogonal channels can be used to achieve 
full-duplex transmissions without causing any interference. Unfortunately, the number of 
orthogonal channels is few. For example, only 3 out of 11 channels in IEEE 802.11b/g 
standard are orthogonal channels [3]. With this constraint, it would be difficult to support 
multiple concurrent transmissions without incurring any interference among links, even for 
the moderate-size networks. Therefore, by taking both the network connectivity and 
interference into account, the goal of most CA algorithms published is to minimize the overall 
network interference in order to increase network capacity [13][14][15][16][17][18]. However, 
it may not be enough for networks with minimal interference to support some multimedia 
real-time applications like high-resolution net-TV where stable high-bandwidth transmission 
272      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
[15], we develop a CA method which can assign orthogonal and partially overlapping 
channels to the tree links without causing any conflict.  
The MRDCM is a NP-hard problem since one of its sub-problems is the CA problem that 
has been proven to be NP-hard by reducing the Multiple Subset Sum problem to it [16]. Hence, 
only heuristic algorithms are investigated here. The heuristic algorithms consist of two parts: a 
procedure for constructing a delay-constrained multicast tree and a procedure for allocating 
channels. In this paper, we propose two approximation algorithms: the LMCM method and the 
greedy method, for constructing the multicast trees for the MRDCM problem. Then, based on 
DFS and BFS paradigms, two load-guided CA procedures are developed to allocate 
interference-free channels to the multicast trees.  
The rest of the paper is organized as follows. Section 2 reviews past work related to 
multicast routing in  MCRM WMNs. Section 3 gives the formulation of our MRDCM problem 
proposed in this study. Section 4 describes two heuristics for building muticast trees and two 
CA procedures for allocating channels. Section 5 presents the experimental results. We 
conclude our work in Section 6. 
2. Related Work 
The multicast routing can be implemented on networks with tree-type or grid-type topologies. 
Most of the proposed multicast routing algorithms are developed based on trees since they 
have lower implementation cost. For wired networks, multicast trees constructed may be 
optimized based on different objective functions such as number of hops, delay of the longest 
path, aggregate cost of tree edges, etc. For the multicast trees determined by the Kou's 
approach [8], for example, they are built based on minimizing the total cost of links in the 
resulting tree. As for the Shortest-Path method [14], the multicast tree is formed by merging all 
the shortest paths between source node and destinations.  These unicast paths with minimal 
cost are determined by the Dijkstra's algorithm. 
However, prior studies [3][12] have shown that the multicast trees designed for wired 
networks may be not suitable for wireless networks. Hence, multicast trees constructed based 
on minimizing the number of data transmissions [13] or the number of relay nodes [12] are 
proposed. In fact, these two optimization criteria are similar. In reference [13], a greedy-based 
heuristic algorithm is proposed to build multicast trees with the minimal number of forwarding 
nodes for a single-channel WMN. These trees are  referred as MNT trees. The MNT tree is 
built without considering the minimization of maximum path delay of the tree.  
The CA problem for minimizing the interference caused by adjacent-channel and 
co-channel is the key problem for MCRM WMNs. Most CA algorithms pusblished in the 
literarture are designed for unicast. There are only a few CA algorithms proposed for multicast. 
In reference [17], a CA algorithm called BFVC based on greedy vertex coloring strategy is 
proposed for a given multicast tree. One problem with BFVC algorithm does not take the 
wireless broadcast advantage (WBA) into account. In addition, since only orthogonal 
frequency channels are used for channel allocation, a lot of bandwidth resource is wasted. 
Most algorithms designed for MCRM WMNs perform routing first, then followed by CA 
procedure [12][15]. In contrast, the “CA first, routing second” approach is considered in 
reference  [18]. In this paper, their goal is to construct a multicast tree for a given MCRM 
network with allocated channel assignments so that the amount of network bandwidth 
comsumed by the routing tree is minimized. However, no study on channel assignment or 
transmission interference on links is reported. 
274      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
from T . A multicast tree assigned with interference-free channels is called MRDCM tree in 
this paper. Obviously, there are many ways to allocate channels to a multicast tree to produce 
MRDCM trees. A MRDCM tree is a subtree of the multicast tree T . In addition, a 
MRDCM tree that can span all the nodes in M  should generate the maximum number of 
serviced users. Therefore, the goal of this study is to find a MRDCM tree which does not just 
satisfy two constraints described above but also maximizes the number of serviced users.  
In references [3][15], the interference factor (IF) is defined to be the ratio of the 
interference range and the transmission range, and it is dependent on the transmission rate at 
the physical layer. For transmission rate of 11 Mbps in IEEE 802.11b/g standard, Table I 
shows the values of the interference factor versus channel separation. The channel separation 
of two channels 1c  and 2c  is defined as 21 cc − .  
Based on Table 1, the minimal values of channel separation of two nodes are greatly 
affected by the distance between them. For example, if the distance between two nodes is 
R1.1 , the value of channel separation must be at least 2 to avoid interference between two 
nodes. That is, if 21 =c is assigned to one node, then 2c  can be 4,5,...,11, which is eligible for 
the other node.  Based on the observation described above, one goal of this study is to allocate 
all the channels to the links to produce an interference-free multicast tree. 
Table 1. Channel separation versus interference factor 
channel separation 0 1 2 3 4 5 
interference factor 2.0 1.2 0.7 0.5 0.2 0.0
 In conclusion, the MRDCM problem proposed in this paper can be mathematically 
formulated as follows. Let )},{( mrdcmmrdcm TΩ=Ψ  , where mrdcmΩ  is a set of CA for the 
MRDCM tree mrdcmT . The goal of this study is to determine an optimal pair of  
),( mrdcmmrdcm TΩ  so that the following objective functions are satisfied: 
 
∑
∈∈
=
mrdcmTuMu
ureqMaximizegain
&
)(                                       (1) 
Δ≤∑ ∈∈∈ ))(( ),(& uspathe edmax mrdcmTuMu                                         (2) 
mrdcmΩ  is a set of interference-free CA.                                       (3) 
4. The Heuristic Algorithms 
The heuristic algorithms for our MRDCM  problem can be divided into two steps: the first 
step is to construct a desired multicast tree; then followed by a procedure that is to assign 
partially overlapping channels to the links of the multicast tree. In section 4.1 and 4.2, two 
approximation algorithms are proposed for constructing the best multicast trees based on the 
load value of each node. The load  value will be defined for these two algorithms respectively. 
For the multicast trees found by these two algorithms, a CA procedure is needed for allocating 
interference-free channels to the tree links. Two CA procedures based on DFS and BFS 
paradigms are developed and given in section 4.3. 
 
 
276      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
Input: an undirected graph ),( EVG = represents the given network, a gateway node s  and 
)(ureq is the number of subscribers connected to each mesh router u . 
1. Starting from s , a topological sorting procedure is carried out for the network G to 
produce a directed acyclic graph; 
2. Starting from s , each node Vu∈ is assigned a value called level . The value of  
)(slevel  is set to be 0; 
3. Let )(max ulevelmaxLevel Vu∈= , and )()( urequload = for each node Vu∈ ; 
4. For ( maxLevell = ; 0≥l ; 1−= ll ) { 
5. For each node u , if ( 1)( ==ulevel ) { 
6. For each node u  , if ( v is adjacent to u and )()( ulevelvlevel < ) { 
7. )()()( uloadvloadvload += ; 
8. }  }  } 
Output: a node-weighted network ),( EVG = . 
jS  is bounded by |)(|VO and it takes |)|log|(| VVO steps at line 8 to setup set jL  at the 
worst case. In total, the LMCM algorithm takes )||log|(| 2 LVVO ×× steps where L  is the 
maximal number of levels used in the “for” loop at line 4. 
4.2 The Load-based Greedy Algorithm 
We propose a greedy approach for constructing the desired multicast tree T  in this section. 
This greedy algorithm consists of the following two steps: 
(1) The first step is required to build up a node-weighted network G . It is an auxiliary graph 
constructed from the graph ),( EVG =   that represents the given WMN. This procedure 
is discussed in subsection 4.2.1. 
(2) Based on G , the multicast tree T  is constructed by a heuristic algorithm named 
load-based prim’s procedure. This procedure  is described in subsection 4.2.2. 
In total, the time complexity of the load-based greedy algorithm is bounded by )|(| 2 LVO , 
where ||V  is the number of nodes and L  is the tree height. The analysis of running time is 
given in the following subsections. 
4.2.1 The Procedure for Generating Node-weighted Networks 
The node-weighted network ),( EVG =  is built based on the procedure shown in Fig. 3. In this 
procedure, the first step is to determine each node a value called level  based on the 
topological sorting in breath-first fashion. 
Fig. 3.  A node-weighted network generation procedure 
 
The level  value of a node is used to indicate the number of hops away from the root. For each 
node u  with the largest level  value, the load   value is set to be the req  value. A load  value 
of a node u  is then recursively defined to be the summation of the number of subscribers of 
nodes which are downstream nodes of u . The definition about the term ""load  is slightly 
different from the one described in section 4.1. In this procedure, we define downstream nodes 
278      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
Input: A node-weighted network ),( EVG = , a gateway node s , a delay bound Δ  and a set 
of destinations M where }0)(,|{ >∈= ureqVuuM . 
1. Let multicast tree },{ EVT = , where }{sV = and φ=E ; 
2. While ( φ≠M ) { 
3.     Find a ),( vulink such that )(vload is maximum where Vu∈ and VVv −∈ ; 
4.     If ( Mv∈ )  { }{vMM −= ;} 
5.     }{vVV ∪= ; 
6.     )},({ vulinkEE ∪= ; 
7. }  
8. Starting from s , compute the path delay of each node Vu∈ ; 
9. Remove the subtree rooted at u if path delay of u  is greater than Δ ; 
10. Recursively remove the leaf node u  if 0)( =ureq ; 
Output: A delay-constrained multicast tree T. 
The most important setp in Fig. 6 is the step 3 for selecting the best uncovered node to be 
included into the current tree. As the before, the uncovered node with the largest load  value is 
selected in the highest priority. The procedure stops when all the destinations are included in 
the tree. The time complexity of this procedure is the same as that of original prim’s algorithm. 
It takes )|(| 2VO  steps at the worst cases. 
Fig. 6. A load-based prim’s procedure. 
4.3 The DFS-based and BFS-based Channel Assignment Procedures  
4.3.1 Minimum Distance versus Channel Separation 
Given two distinct links ),(1 vue = and ),(2 yxe = in a tree supporting concurrent 
transmissions, the interference range is determined by the minimum distance δ  between any 
two nodes from different links. Based on the δ  value and the IF value defined in Table I 
shown in section 3, three situations for supporting interference-free channel assignments for 
1e  and 2e  are considered as follows. Let η  denote the separation for channels assigned to 1e  
and 2e  and R  is the transmission range. 
(1) 0=δ  and xu = , 1e  and 2e  are sibling links and they may share the same channel 
based on WBA, so 0≥η . 
(2) 0=δ  and )( yuorxv == , 1e  and 2e  have one end-node in common, so 5≥η . 
(3) 0>δ , several cases are considered in the Table 2. 
Table 2. Minimum distance between two links versus channel separation. 
Minimum distance between two links Channel separation 
R2.00 << δ  5≥η  
RR 5.02.0 <≤ δ  4≥η  
RR 7.05.0 <≤ δ  3≥η  
RR 2.17.0 <≤ δ  2≥η  
RR 22.1 <≤ δ  1≥η  
280      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
calls for “Load_based_DFS” at the worst case and  it takes |))log(||(| VVO  steps to do link 
sorting at line 5 for each recursive call. 
4.3.3 The Load-based BFS Channel Assignment 
The procedure of load-based BFS channel assignment is similar to the load-based DFS 
procedure. However, for multicast trees with large height, the interference-free channels may 
be used up before the links connected to destinations have a chance to be allocated a channel, 
since the nodes are visited in breadth-first order in load-based BFS procedure. Therefore, 
load-based BFS procedure is more suitable for the wide-and-short multicast trees. 
5. The Experimental Results 
A number of experiments are designed in this section to do the performance and delay 
comparisons for the MRDCM trees, which are generated by applying the load-based DFS 
channel assignment procedure to the multicast trees constructed by the LMCM, the load-based 
greedy and the shortest-path (SP) algorithms. The first two algorithms are described in section 
4.1 and 4.2. As for the SP algorithm, it constructs the multicast tree by merging all the shortest 
paths from the gateway node to all the destinations. Each shortest path is determined by the 
Dijkstra's algorithm. The multicast trees found these three algorithms are processed by the 
same load-based DFS channel assignment procedure to produce the desired MRDCM  trees. 
Each data presented here is taken on the average of 100 runs on 100-node, 50-node and 
30-node random networks generated on a 12501250×  grid. The simulations are based on 
IEEE 802.11b/g standard and parameter settings are given in Table 3. All the programs are 
written in C++ and can be efficiently executed on laptop computers.  
Table 3. Simulation settings. 
Simulation parameter value 
transmission range  R=250 units  
interference range 2R=500 units 
destination ratio %50~%10  of total nodes 
subscribers 5~1  
delay of each link 5~1  
radio interface of each node 2 
channels 11 
antenna omni-directional 
5.1 Performance Comparisons 
For measuring the performances of three tested algorithms, a metric term "performance ratio" 
θ  is defined as follows:  
%100×Γ=
gainθ                                                       (4) 
where gain  is defined in equation (A) in section 3, and Γ  is the number of total subscribers 
initially assigned to the given networks. Note that Γ  is an upper bound for the optimal value. 
282      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
 
 
 
 
 
 
(3) DFS-based CA vs BFS-based CA 
In Fig. 13, the same set of multicast trees built by LMCM is used for allocating 
conflict-free channels based on two different CA procedures proposed in section 4.3.3. The 
performance of DFS-based CA procedure is consistently better than that of BFS-based CA 
procedure. The experimental results matches the obesrvation discussed in section 4.3.3 that 
DFS-based CA procedure is more suitable for multicast trees with large multicast goup since 
they intend to have large tree height. 
5.2 Delay Comparisons  
For delay-sensitive applications deployed on the multicast trees, the maximal path delay must 
not only satisfy the given delay constraint but also is required to be as small as possible. 
According to the results shown in Fig. 14, the average delay of MRDCM trees produced by 
the SP algorithm is the smallest, whereas the average delay of the LMCM method is the largest 
and very close to that of greedy method for various destination ratios for 100-node networks. 
The same phenomenon holds for the different sizes of networks (see Fig. 15). 
 This phenomenon is due to that the number of serviced users found by LMCM algorithm is 
much larger than that found by SP method. Hence, for a given network, the multicast tree 
constructed by LMCM tends to be the largest. As a result, the delay of the tree built by LMCM 
is the largest.  In conclusion, the LMCM would be the best heuristic method for solving the 
MRDCM problem when both gain and delay are taken into account simultaneously. 
Fig. 10.  Performance comparisons for 
30-node networks. 
Fig. 11.  Various Delay bounds for 100-node 
networks by LMCM method. 
Fig. 12.  CA with orthogonal channels only 
for 100-node networks. 
Fig. 13.  DFS-based CA vs BFS-based CA. 
284      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
In this paper, we address the MRDCM  problem that concerns about the delivery of real-time 
streams to a group of users based on multicast trees embedded in multi-radio WMNs. 
According to the results from the prior studies on interference factor, two load-based heuristic 
algorithms and CA procedures are developed for constructing an interference-free and 
delay-constrained multicast tree with all the available channels so that our objective function, 
the number of serviced clients, can be maximized.  
Based on the experimental results, the LMCM would be the best heuristic method for 
solving the MRDCM  problem when both the number of serviced subscribers and delay are 
considered at the same time. Although our load-based heuristics are centralized, they are still 
practical for our MRDCM  problem since the number of clients serviced by each MR may 
remain a period of time. In fact, centralized approaches have been widely accepted in the 
industry [19]. However, we still need a distributed method to support MRs join or leave the 
multicast tree. We assume that a common channel is shared by one reserved radio installed on 
each MR. Based on the common channel, a new MR may join the tree by broadcasting “join” 
messages to it neighbors. The nearest MRs in the tree may send the acknowledges back to the 
original MR along the reverse path. A MR in the tree may send “leave” messages to inform the 
gateway when all the mesh cleints under it are left. 
References 
[1] I.F. Akyildiz, X. Wang and W. Wang, “Wireless mesh networks: a survey,” Computer Networks, 
vol. 47, pp. 445-487, 2005. Article(CrossRef Link) 
[2] A.P. Subramanian, H. Gupta, S.R. Das and J. Cao, “Minimum Interference Channel Assignment in 
Multiradio Wireless Mesh Networks,” IEEE Trans. on Mobile Computing, vol. 7, no. 12, pp. 
1459-1473, 2008. Article(CrossRef Link) 
[3] A. Mishra, E. Rozner, S. Banerjee and W. Arbaugh, “Exploiting Partially Overlapping Channels in 
Wireless Networks: Turning a Peril into an Advantage,” in Proc. of Internet Measurement 
Conference, pp. 311-316, 2005. Article(CrossRef Link) 
[4] A. Kumar K.S and S. Hegde, “Multicasting in Wireless Mesh Networks: Challenges and 
Opportunities,” in Proc. of International Conf. on Information Management and Engineering, pp. 
514~518, 2009. Article(CrossRef Link) 
[5] V. Bhandari and N. H. Vaidya, “Connectivity and Capacity of Multi-Channel Wireless Networks 
with Channel Switching Constraint,” in Proc. of INFOCOM 2007. 26th IEEE International 
Conference on Computer Communications. IEEE, pp. 785- 793, 2007. Article(CrossRef Link) 
[6] A. Raniwala and T. Chiueh, “Architecture and Algorithms for an IEEE 802.11-based 
Multi-Channel Wireless Mesh Network,” in Proc. of INFOCOM 2005. 24th Annual Joint 
Conference of the IEEE Computer and Communications Societies. Proceedings IEEE, pp. 2223- 
2234, 2005. Article(CrossRef Link) 
[7] C. Chereddi, P. Kyasanur and N. H. Vaidya, “Net-X: A Multichannel Multi-Interface Wireless 
Mesh Implementation,” Mobile Computing and Communications Review, vol. 11, no. 3, pp. 84-95, 
2007. Article(CrossRef Link) 
[8] L. Kou, G. Markowsky and L. Berman, “A Fast Algorithm for Steiner Trees,” Acta Infomatica, 
Spring-Verlag, vol.15, pp. 141-145, 1981. Article(CrossRef Link) 
[9] M.K. Marina and S.R. Das, “A Topology Control Approach for Utilizing Multiple Channels in 
Multi-Radio Wireless Mesh Networks,” in Proc. of Broadband Networks, pp. 381-390, 2005. 
Article(CrossRef Link) 
[10] R. Draves, J. Padhye and B. Zill, “Routing in Multi-Radio, Multi-Hop Wireless Mesh Networks,” 
in Proc. of MobiCom, pp. 114-128, 2004. Article(CrossRef Link) 
[11] Wen-Lin Yang, “A Maximum-Revenue Multicast Routing Problem on Wireless Mesh Networks,” 
in Proc. of the 24th International Conf. on Information Networking, 2010. 
[12] G. Zeng, B. Wang, Y. Ding, L. Xiao and M. Mutka, “Multicast Algorithms for Multi-Channel 
286      Yang et al.: Heuristic Algorithms for Constructing Interference-Free and Delay-Constrained Multicast Trees for WMNs 
 
Cheng-Huang Tung was born on May 28, 1967, in Tainan, Taiwan, ROC. He received his BS 
and PhD from National Chiao Tung University in 1989 and 1994, respectively, both in Computer 
Science and Information Engineering. He has been with the Department of Computer Science and 
Information Engineering, National Pingtung Institute of Commerce, Taiwan, since August 2001. 
His research interests include natural language processing, pattern recognition, image processing, 
and computer network. 
 
For Review Only
KSII TRANSACTIONS ON INTERNET AND INFORMATION SYSTEMS VOL. X, NO. X, December 201X                                   134 
Copyright  2011 KSII 
 
A preliminary version of this paper appeared in IEEE ICMT 2011, July 26-28, Hangzhou, China. This version 
includes a new refinement procedure for improving solution quality. This research was supported by a research 
grant from the National Science Council, Taiwan, ROC [NSC-98-2221-E-024-004-MY2]. 
 
DOI: 10.3837/tiis.0000.00.000 
A Study on Channel Allocation Strategies 
for Interference-Free Multicast in 
Multi-Channel Multi-Radio Wireless Mesh 
Networks 
 
Wen-Lin Yang1 and Wan-Ting Hong1 
1 Dept. Computer Science and Information Engineering, National University of Tainan 
Tainan, Taiwan 
[e-mail: wlyang@mail.nutn.edu.tw, roof770904@hotmail.com] 
*Corresponding author: Wen-Lin Yang 
 
Received October 5, 201X; revised November 10, 201X; accepted November 20, 201X; 
published December 25, 201X 
 
 
Abstract 
 
Given a video stream delivering system deployed on a multicast tree which is embedded in a 
multi-channel multi-radio wireless mesh network, our problem is concerned about how to 
allocate interference-free channels to tree links and maximize the number of serviced mesh 
clients at the same time. In this paper, we propose a channel allocation heuristic algorithm 
based on best-first search and backtracking techniques. The experimental results show that our 
BFB based CA algorithm outperforms previous methods such as DFS and BFS based CA 
methods. In addition to that, we also propose a tree refinement method to enhance the quality 
of channel-allocated trees by adding uncovered destinations at the cost of deletion of some 
covered destinations. Our aim of this refinement is to increase the number of serviced mesh 
clients. According to our simulation results, it is proved to be an effective method for 
improving multicast trees produced by BFB, BFS and DFS CA algorithms. 
 
 
Keywords: Channel Allocation, interference free, multicast, best first, backtracking, 
wireless mesh netoworks. 
Page 1 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
For Review Only
136                                                                Yang et al.: A Study on Channel Allocation Strategies  
and propose a new and efficient method referred as the best-first and backtracking (BFB) 
algorithm. With the backtracking technique, BFB allows previous channel-allocated links to 
have feasibility to select the other eligible channels when no conflict-free can be found for the 
current link during the CA process. As a result, we may expect the BFB based CA algorithm 
consistently outperforms DFS and BFS based CA algorithms. 
Since the final channel-allocated multicast tree is a partial multicast tree, it may not cover all 
the destinations. Hence, the tree is not optimal and can be improved even further. Therefore, 
we also propose a tree refinement procedure to improve the partial multicast tree by adding 
uncovered destinations at the expense of deletion of some covered destinations. Our aim of 
this refinement is to increase the number of serviced mesh clients.  
Given a set of multicast trees constructed by LMCM method proposed in our previous work 
[4], we provide simulation experiments in section 6 to compare the performance of BFB with 
DFS and BFS based approaches. At the same time, we also give simulation results to show that 
the tree refinement technique is an effective way for improving the quality of solutions found 
by BFB, DFS and BFS algorithms. 
The rest of the paper is organized as follows. Section 2 reviews past work related CA in 
MCMR WMNs. Section 3 gives a system model and definitions for the CA problem studied 
here. Section 4 describes BFB based CA algorithm. Section 5 gives a refinement algorithm for 
improving the channel-allocated multicast trees. Our experimental results are shown in section 
6.  Finally, we conclude our work in section 7. 
2. Related Work 
The CA problem of minimzing the interference caused by frequency overlapping channels is 
the core problem of multicast routing implemented on MCMR WMNs. Most CA algorithms 
published for multicast focus on the issue about minimizing interference while network 
connctivity does not degrade. In general, CA problem for multicast in MCMR WMNs can be 
classified into three categories: (1) routing first, CA second [10][11][12][13] [14] [15]; (2) CA 
first, routing second [16][17][18]; (3) joint design of CA and routing [19] [20]. 
LCA and MCM algorithms proposed in references [10][11] belongs to the first category. 
The LCA contains two steps. First, the BFS traversal is used to build a multicast tree where 
each node is equipped with two interfaces and assigned a level value. Second, for nodes in 
level i , they are assigned with two channels: 1−i  and i , where channel 1−i  is used for 
receiving packets from parent node and channel  is used to broadcast packets to its child nodes. 
The scheme is simple but the co-channel and adjacent channel interference from nearby links 
could be very serious. Therefore, the authors in [11] proposed a more intelligent algorithm 
named MCM. In MCM, a multicast tree with minimum relay nodes and minimum hop counts 
is constructed first. Then, a heuristic CA scheme is used to assign partially overlapping 
channels to the sending interface of a node by minimizing interference derived from 
neighboring relay nodes. However, this approach suffers from the hidden channel problem 
which can be eliminated by M4 CA algorithm proposed in [14][15]. In M4, the authors assume 
that nodes that are three or more hops away from each other do not interfer. This assumption is 
not practical since it is very easy to have a situation that the interference range is larger than 
two hops. The wireless broadcast advantage (WBA) [23] is considered in both MCM and M4 
to save the number of transmissions. The WBA is defined as all neighboring nodes within 
transmission range of a sending node can receive a data packet in one transmission from the 
sending node. 
Page 3 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
For Review Only
138                                                                Yang et al.: A Study on Channel Allocation Strategies  
among all the links without any interference. That is, our problem is required to allocate 
interference-free channels to tree links so that the nodes in M  can be totally covered. 
Let ),( EVT =  be the resulting multicast tree after CA is performed and TT ⊆ . Since the 
channel resource is very limited, it is possible that VM ⊄ . Therefore, our goal is then set to 
find a set of interference-free channels for links so that the following equation is maximized: 
∑= ∈∈ VvMv vreqGain && )(                                                          (A) 
Gain is the total number of mesh clients who can be serviced by T . The maximum Gain  is 
obtained when VM ⊆ . To obtain an interference-free multicast tree, we may simply allocate 
orthogonal channels to links and then delete the unallocated links. However, the number of 
orthogonal channels is so few that the total number of clients covered by T  is also very few. 
For example, there are only three orthogonal channels in IEEE 802.11b/g standard. Hence, in 
this study both partially overlapping and orthogonal channels are utilized for CA. Based on 
interference factor discussed in next paragraph, we will show how to assign non-orthogonal 
channels to links to achieve multiple interference-free transmissions. 
Given a transmission range R  and an interference range IR , an interference factor ( IF ) 
defined as RIR  by Zeng [10] to measure the interference strength between two 
channel-allocated nodes. Suppose channel 1c  and 2c  are allocated to two neighboring nodes, 
a term named channel separation ( CS ) is defined as 21 cc − . In reference [10], a method is 
described to measure IF  based on different CS . The relationship between IF and CS  is 
greatly affacted by the transmission rate at the physical layer. For transmission rate of 
Mbps11  in b11.802IEEE standard, the relationship between IF and CS  is given in Table 1. 
Table 1. Channel separation vs interference factor when transmission rate is Mbps11  
channel separation  ( CS ) 0 1 2 3 4 5 
Interference factor  ( IF ) 2.0 1.2 0.7 0.5 0.2 0.0 
 
In the CA algorithm of MCM, IF  is used to minimize the overall intereference from the 
neighborhood of a node. In this study, since our goal is to create an interference-free multicast 
system, we use CS  to guide CA process as the distance δ  between two nodes is known. For 
example, if R1.1=δ , the value of CS  must be at least 2 to avoid interference between two 
nodes. In b11.802IEEE system, if channel 21 =c  is allocated to one node, then the feasible 
channels that can be allocated to another node would be 11...,,5,42 =c . For the case of 
R2≥δ , two nodes does not interfere with each other with the same number of channel. The 
above relationship is established based on the following assumption: all the nodes have the 
same R  and IR . 
With the distance between two links is fixed, we can assign both orthogonal and partially 
overlapping channels to them so that the channel separation is large enough to support 
interference-free concurrent transmissions. Since all the channels are available, the value of 
Gain  computed is expected to be much better than the value of Gain  computed by a method 
with orthogonal channels only. 
4. Heuristics for Channel Allocation 
In this section, we first introduce a data structure called interference matrix IM . It is used to 
Page 5 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
For Review Only
140                                                                Yang et al.: A Study on Channel Allocation Strategies  
Traditionally, there are two approaches for allocating channels to links of multicast trees 
embedded in MCMR WMNs. One is the breadth-first search (BFS), and another one is the 
depth-first search (DFS). Based on these two searching paradigms, two CA algorithms, 
load-oriented BFS and load-oriented DFS, are presented in our previous work [4]. 
4.3 Best-First and Backtracking (BFB) based CA algorithms 
In this section, a new CA algorithm named BFB is presented. The BFB algorithm can allocate 
an interference-free channel to a link. If no such channel can be found, a backtracking 
procedure is used to adjust channels continuously that have been allocated to the interfering 
links so that a feasible and conflict-free channel can be found for the current link. Hence, our 
BFB based CA algorithm consists of two parts: best-first search based procedure and 
backtracking procedure. In fact, the backtracking procedure can also be combined with DFS or 
BFS methods to improve performance. 
4.3.1 Best-First Search Strategy 
Although the searching strategy of load-oriented BFS CA algorithm is guided by the load  
value associated with each node, the sequence of links selected for channel allocation is 
generally in a level-by-level fashion. For load-oriented DFS CA algorithm, the sequence of 
next link selected is different. Nevertheless, as the load-oriented BFS method, the searching 
sequence is also fixed in advance. 
In this section, we introduce a new method based on best-first searching paradigm. The CA 
procedure starts from the root s . Among all the direct neighbor nodes of the root, a node u  
with the highest load value is selected and the link )( us → is then selected for channel 
allocation. The channel-allocated multicast tree ),( EVT = currently covers two nodes, s  and 
u , and one link )( us → . In next iteration, all uncovered neighbor nodes of V  are considered, 
and the best link which can lead to a neighbor node with the highest load value is selected for 
channel allocation. The idea behind this method is to allocate channels to links with higher 
load values as early as possible. Hence, the searching sequence is not fixed and may be very 
different for different multicast trees. The BFB-based CA algorithm shown in Fig. 4 is 
designed based on this idea.  
In Fig. 4, the load value of each node is defined and computed recursively in a bottom-up 
manner in line (1) ~ (2). For example, load values of the multicast tree shown in Fig. 1 are 
computed and shown in Fig. 2. In line (3) ~ (5) in Fig. 4, a number of data structures are 
initialized. Among them, interference matrix IM is constructed based on the discussion given 
in Fig. 3 and will be used for checking interference between nodes. Moreover, Linked-List L  
is set up for storing channel-allocated links and conflict-free channels that can be allocated to 
them. Linked-List L is designed for the backtracking procedure. It will be discussed in detail in 
next sub-section. 
The best-first searching process which is guided by the load value is started at line (6) by 
initializing a priority queue to store all links incident from the root “ s ”. Then, in the “while 
loop” at line (7), the best directed link )( wula →=  is selected and removed from Q  if the 
node w  has the largest load  value. That is, the node with the largest load value has the 
highest priority to be selected for allocating channels. This selection criterion is called 
best-first strategy. In line 10, we add all the links incident from w  into Q . For example, in Fig. 
2, )},(),,(),,{( badacaQ =  before entering the while loop. Since 5)( =cload  is the largest 
Page 7 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
For Review Only
142                                                                Yang et al.: A Study on Channel Allocation Strategies  
start to do CA for the current link al . 
To do CA for a link al , the first thing is to look up the interference matrix IM to find a 
channel-allocated sibling link bl . If it exists, a channel allocated to bl  can be shared with 
al based on the wireless broadcast advantage. Otherwise, the Find_Free_Channel procedure 
shown in Fig. 5 is used to find all the conflict-free channels which are stored in candidate list 
alΓ . The channel of al  is then set to be the first element of alΓ .  
Based on these candidate lists, we may have flexibility to change the channels for the 
allocated links so that at least one channel can be found for the current link. For example, in 
Fig. 6, we assume that no channel can be found for link ),( EB  and it is interfering with link 
),( FB , we may change the current channel associated with link ),( FB  from 8 to 9 or 10 so 
that a conflict-free channel can be found for link ),( EB . It is called backtracking strategy.  
When it fails to allocate a conflict-free channel to a link al  by Find_Free_Channel 
procedure, the backtracking procedure in Fig. 7 is then invoked. The backtracking procedure 
works as follows. We starts to search for the first node µ  in L  where µ  contains a link bl  
which is interfering with link al  and has no common node with al . In the “for loop” at line (6) 
in Fig. 7, all the feasible channels stored at 
blΓ  are enumerated. For each enumeration, we try 
to build up the candidate list 
alΓ . The “for” loop stops when a non-empty alΓ is found and 
returned. Otherwise, a next µ  node is tested. There are at most len  nodes in L  examined 
before we declare that it fails to find a feasible channel for link al . In that case, link al  is 
deleted from the multicast tree. 
4.3.2 Time Complexity 
The time complexity of Find_Free_Channel procedure is )( EcO ∗ where c  is the number of 
channels. As for Backtracking procedure in Fig. 7, it also requires )( EclenO ∗∗ steps to 
finish. According to our simulation results shown in Fig. 15, performance ratio converges 
when b value is less than four. It means that “while loop” at line 3 in Fig. 7 executes in at most 
three steps before Backtracking procedure stops. That is, len  can be a small constant. Hence, 
the time complexity of Backtracking procedure would be )( EcO ∗ . 
For BFB based CA algorithm shown in Fig. 4, the construction of interference matrix takes 
)( 2EO steps at line 4 and the “while loop” at line 7 takes at most )( 2EcO ∗ steps. In total, the 
time complexity of BFB algorithm is bounded by )( 2EO at the worst case since c  is a 
constant for different wireless communication standard.  
 
 
 
 
 
 
 
 
 
 
Page 9 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
For Review Only
144                                                                Yang et al.: A Study on Channel Allocation Strategies  
5. A Multicast Tree Refinement Algorithm 
The channel-allocated multicast trees determined by the CA algorithms, such as DFS, BFS 
and BFB heuristics, may cover only a part of destinations. There are still some destinations  
which are not included in the channel-allocated multicast tree T . Hence, we introduce a new 
algorithm called edTree_Refin  in Fig. 8 to improve the Gain  value of T  by including those 
uncovered nodes. However, this addition may cause some covered nodes being deleted from 
the tree to avoid interference. Therefore, how to trade off these nodes to obtain higher Gain  
value becomes the goal of edTree_Refin  algorithm presented in this section. To achieve that 
goal, there are two sub-problems must be solved first. The first one is how to determine a path 
that can connect an uncovered node to T . Another one is how to allocate channels to the path 
so that no interference is invoked in T . 
For each uncovered nodeω , a path P which can connect ω  to a node α in T  is determined 
based on the channel-unallocated tree T . However, only path P  with length no more than 3 
links is considered. It is because that a longer path may cause more serious interference with 
the links currently in T . A large amount of links may be then deleted from T  when path P  is 
added in T . As a result, it is unlikely to generate a new T  with higher Gain  value.  Line (6) 
in Fig. 8 is implemented with the above idea.  
In Fig. 8, we assume that channels based on IEEE 802.11b/g standard are used for CA. The 
available channels are c1, c2,….c11. Among them, c1, c6, c11 are orthogonal channels. From 
line (7) to line (17) in Fig. 8, three different CA strategies are implemented. When 3=P , 
channels allocated to three consecutive links must be non-overlapping. That is, channel 
separation must be at least 5. Hence, only three orthogonal channels, channel 1, 6, 11, can be 
used. In total, there are 6 different combinations for allocating these orthogonal channels to 
three links. For similar reason, non-overlapping channels are also required when 2=P . For 
simplicy, only channel separation equals 5 is considered. In total, there are 11 pairs of CA are 
considered: {c1, c6}, {c2, c7},…..{c11, c5}. As for 1=P , the channels can be c1 ~ c11. 
For each CA scheme for path P , the procedure Addin_Path given in Fig. 9 is called at line 
(23) to reconstruct T  by adding channel-allocated path P  and removing those interfering 
links which are generated by this addition. This reconstruction involves deletion of  
unnecessary leaf-nodes  and  recomputation of interference matrix IM . The implementation 
details are described in Fig 9. At line (26) in Fig. 8, the best tree is kept if the current path 
addition can lead to a tree with better Gain  value.  
The time complexity of edTree_Refin  algorithm is bounded by the running time of 
Addin_Path procedure. Since the construction of  interference matrix takes )( 2EO steps and 
the number of links in P  is a constant, the nested loop at line (3) ~ (11) in Fig. 9 takes  
)( 3EO  steps at the worst case. That is, the running time of Addin_Path procedure is )( 3EO .  
Therefore, for the edTree_Refin  algorithm, its running time is bounded by )( 3EMO ∗  at 
the worst case, where M  is the number of destinations.  
Page 11 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
For Review Only
146                                                                Yang et al.: A Study on Channel Allocation Strategies  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 9. Addin_Path procedure 
6. Experimental Results  
To evaluate the performance of our BFB and edTree_Refin  CA algorithms, a number of 
experiments are designed in this section to compare them with previously proposed methods: 
load-oriented DFS and load-oriented BFS CA algorithms. The performance comparisons are 
carried out based on the following metrics: number of serviced clients, throughputs and 
end-to-end delay. The first set of data about the number of serviced clients is obtained by a set 
of Java programs, which are developed, based on the aforementioned CA algorithms. As for 
the other sets of data, they are all measured by Qualnet simulator 4.5 [21].  
All the above data is obtained based on a set of multicast trees generated for our simulations. 
These multicast trees are constructed by the following procedure. First, we generate a random 
WMN with n nodes on a 100100× grid using the DPAMAX − algorithm proposed in 
reference [22]. Second, we set a node to be the gateway and then randomly select a given 
number of nodes to be the destinations for multicasting. Third, the number of mesh clients is 
randomly set for each destination. The settings of other simulation parameters are shown in 
Table 2. 
Table 2. Simulation settings 
simulation parameter value 
transmission range 10 units 
interference range 20 units 
wireless technology IEEE 802.11b 
antenna omni-directional 
network size 30, 60, 100 nodes 
maximum degree of a node 7 
# of interfaces per node 2≥  
destionation ratio (# of destinations / # of total nodes) %50~%10  
# of mesh clients per destination 5~1  
Addin_Path ( PT , ) { 
(1) PTT += ;  
(2) Rebuild the interference matrix IM  for T ; 
(3) For each link Pl ∈  { 
(4)     For each link T∈η { 
(5)         If (( l≠η ) and ( >− |)()(| ηchlch ofvalueβ ],[ ηlIM )) { 
(6)             }{η−= TT ; }   
(7)      }  
(8)      Remove leaf-node u  from T if 0)( =ureq ; 
(9)      Rebuild the interference matrix IM for T ; 
(10) } 
(11) Repeat the above nested loop until no interfering link being found;   
(12) Return T ;} 
} 
Page 13 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
For Review Only
148                                                                Yang et al.: A Study on Channel Allocation Strategies  
where Gain  is total number of serviced clients which is defined in equation (A) in section 3 
and Π  is the number of total clients initially assigned to the multicast group in the given 
network. Note that Π is an upper bound for the optimal value. That is, the optimal value of CA 
for a given multicast tree must be no more than Π . Since CA problem is a NP-complete 
problem, it is only possible to have optimal solutions for very small-size networks. Hence, we 
use Π  to substitute for the optimal value for performance evaluations. Each data shown in Fig. 
10~14 is an average value taken on 1000 runs of simulations.   
(1) Performance of BFB based CA algorithm 
According to the data shown in Fig. 10~12, θ  value decreases as the value of destination ratio 
increases for all the tested algorithms. In particular, when destination ratio increases from 10% 
to 50% for 30-node networks, θ  value decreases from 95% to 80% for BFB. This 
phenomenon is because that it becomes harder to allocate conflict-free channels to tree links 
when the number of destionations increases. 
The expermental results also show that BFB-based CA algorithm consistently outperforms 
load-oriented BFS and load-oriented DFS CA algorithms for various destination ratios in 
different sizes of networks. In addition, the superiority of BFB-based method becomes more 
obvious and significant when netowork size increases. That is, BFB-based CA method is 
much more suitable for large-size multicast trees. This superiority is due to the backtracking 
technique used in BFB approach. It allows previous channel-allocated links to have feasibility 
to select the other eligible channels when no conflict-free channel can be found for the current 
link during the CA process. In fact, besides the best-first searching strategy, the backtracking 
technique can also be used to enhance the performances of DFS or BFS based CA method.  
(2) Impact of Tree_Refined Algorithm 
In this set of experiments, we study the impact on the performance ratio when the tree_refined 
algorithm is applied to BFS, DFS and BFB based algorithms. Based on data shown in Fig. 10 ~ 
12, the channel-allocated trees found by BFB and then processed by tree_refined procedure 
are consistently better than those found by the other methods. As for BFS and DFS based 
methods, the data in Fig. 13~14 also shows that tree_refined algorithm can effectively improve 
the quality of trees constructed by them for 100-node networks. The same conclusion holds for 
other sizes of networks. 
(3) Simulation of b value 
For the backtracking algorithm shown in Fig. 7, its time complexity is determined by the 
number of “while loop” executed at line 3. Although the loop may take )( EO steps at the 
worst case where E  is the length of linked list, the simulation results in Fig. 15 show that the 
performance ratio is not improved any more if the b value is greater than three for 100-node 
networks. The same results are also obtained for different sizes of networks. Hence, the 
number of  “while loop” in Fig. 7 executed can be a small constant. 
6.2 Average throughput 
The data in Fig. 16~17 shows the average throughput simulated by Qualnet for 20 random 
multicast trees constructed by BFS, DFS, BFB and refined BFB. Since the number of bits 
received per second is proportional to the number of destinations in the tree, the throughput 
increases as destination ratio increases. Based on similar reason, the throughput obtained from 
refined BFB is certainly be the highest since the number of destinations in the trees found by 
refined BFB is the largest. Hence, the descending order of throughput in Fig. 16~17 is: 
refined_BFB>  BFB>DFS>  BFS. The same order is also shown in Fig. 10~12. 
Page 15 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
For Review Only
150                                                                Yang et al.: A Study on Channel Allocation Strategies  
much difference on the delay for all methods when destination ratio is no more than 40%. 
However, when destination ratio is 50%, the tree found by DFS contains the longest delay. It is 
because nodes in higher levels are examined in higher priority by DFS strategy. However, this 
feature does not exist for 100-node networks in Fig. 21. In this case, interference is so serious 
that paths can not grow too long in large-size networks such as 100-node networks. Therefore, 
the refined multicast trees built by refined_BFB tend to have a longer delay in Fig. 21. It is 
reasonable because an extra path with no more than three links is constructed and appended to 
the multicast tree when an uncovered destination is added into the tree. The extra path leads a 
longer delay.  
7. Conclusion 
In this paper, we present a best-first and backtracking based algorithm for allocating channels 
to links of a multicast tree. The objective of this work is to create an interference-free multicast 
tree and maximize the number of serviced mesh clients. The experimental results show that 
our BFB based CA algorithm outperforms previous methods such as DFS and BFS based CA 
methods. In addition to that, we also propose a tree refinement method which has been proved 
to be an effective method for improving the quality of channel-allocated multicast trees 
determined by BFB, BFS and DFS based algorithms. In the future work, the CA strategies 
studied in this paper will be applied to the approach of cross-layer design of multicast routing 
and channel allocation for multicasting in MCMR WMNs. 
References 
[1] I.F. Akyildiz, X. Wang and W. Wang, “Wireless mesh networks: a survey,” Computer Networks, 
vol. 47, pp. 445-487, 2005. 
[2] EchoStream Commercial Mesh Network, 
http://www.inovonics.com/commercial-mesh-network.aspx 
[3] Inovonics, http://www.inovonics.com/default.aspx. 
[4] Wen-Lin Yang, Chi-Chou Kao and Cheng-Huang Tung, “Heuristic Algorithms for Constructing 
Interference-Free and Delay-Constrained Multicast Trees for Wireless Mesh Networks,” KSII 
Transactions on Internet and Information Systems, vol. 5, no. 2, pp. 269-286, February, 2011. 
[5] P. Bal, A. Adya, J. Padhye and A. Wolman, “Reconsidering wireless systems with multiple 
radios,” ACM SIGCOMM Computer Communications Review, vol. 34, no. 5, pp. 39-46, 2004. 
[6] A. Mishra, E. Rozner, S. Banerjee and W. Arbaugh, “Exploiting Partially Overlapping Channels in 
Wireless Networks: Turning a Peril into an Advantage,” in Proc. of Internet Measurement 
Conference, pp. 311-316, 2005. 
[7] Y. Ding, Y Huang, G. Zeng and L. Xiao, “Channel assignment with partially overlapping channels 
in wireless mesh networks,” in Proc. of WICON, 2008. 
[8] Y. Ding and L. Xiao, “Channel allocation in multi-channel wireless mesh networks,” Computer 
Communications, vol. 34, pp. 803-815, 2011. 
[9] X. Mao, X. Y. Li and S. K. Makki, “Static Channel Assignment for Multi-Radio Multi-Channel 
Multi-Hop Wireless Networks,” in Proc. of  WTASA 2007. 
[10] G. Zeng, B. Wang, Y. Ding, L. Xiao and M. Mutka, “Multicast Algorithms for Multi-Channel 
Wireless Mesh Networks,” in Proc. of International Conf. on Network Protocols, 2007. 
[11] G. Zeng, B. Wang, Y. Ding, L. Xiao and M. Mutka, “Efficient Multicast Algorithms for 
MultiChannel Wireless Mesh Networks,” IEEE Transactions on Parallel and Distributed Systems, 
vol. 21, no. 1, pp. 86-99, 2010. 
[12] R. Daves, J. Padhye and B. Zill, “Routing in the multi-radio, multi-hop wireless mesh networks,” 
in Proc. of ACM MobiCom, 2004. 
Page 17 of 18
http://mc.manuscriptcentral.com/tiisjournal
KSII Transactions on Internet and Information Systems
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
 國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■  達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
 
 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本計畫在執行期間，針對多頻道無線網狀網路的影音群播問題，提出一個以
可服務客戶總數為最佳化目標的問題，這問題可直接對映至無線網狀網路的
商業運轉模式，因為我們所尋找的群播樹可導致最多的可服務客戶總數，其
所對應的商業利益也是最大。因此，我們所得到的研究成果不只是在學術上
有貢獻外，對於未來無線網狀網路也提供一個可供參考的營運模式，有助於
推動普及無線網狀網路成為下一代網路的主幹。 
另外，衍生於此研究是頻道配置法的創新，我們的近似演算法是依據 best-first
和 backtracking 的原理發展出來，相信這會啟發其他頻道配置方法的改進，例
如在多頻道感測網路和隨意無線網路上的應用。另外，我們所提出對於增加
群播樹的接收節點數的方法，亦會對其他頻道配置問題產生啟發之效應。 
 
此次會議對下列兩篇論文印象深刻，其研究成果可供個人在雲端運算及無線網路協
定等領域研究之參考。 
(1) 在與雲端運算相關之口頭報告中，一篇稱為”Online C/C++ Compiler using 
Cloud Computing” 論文相當有趣。他們實作一個 C/C++遠距編譯器供學生考試
或練習之用，學生經由瀏覽器介面將程式碼鍵入，再送至遠端伺服器編譯和執
行，執行結果送回客戶端電腦。其優點相當多，編譯器只需安裝在遠端伺服器，
安裝、維護、升級皆相當方便，可節省不少維護人力。另外，老師經由伺服器
的協助，在線上就可即時更正錯誤，無須親至每位學生電腦前檢視其程式碼。
在台灣的學校，電腦教室大都有安裝教學廣播系統，以協助教學進行，若能以
上述系統教授程式設計課程，教學廣播系統即可無需安裝，可節省學校不少經
費。 
過去，程式設計相關課程不易在遠距教學環境中教授，因為老師在上課過程
中，無法即時指導學生更正程式碼。若上述系統能整合現行視訊系統，如 msn
等，老師除了可展示程式編輯過程，也可即時觀察學生撰寫程式的過程，必要
時也給予更正，因此，本系統將非常適用於同步遠距教學。 
(2) 在無線網路通訊協定領域，一篇名為”Residual energy-based OLSR in mobile ad 
hoc networks”的論文與個人教學研究領域相當接近，未來可成為上課教材。此
篇論文主要討論在隨意網路上執行 Flooding 程序時，如何決定 MPR 節點以節
省廣播封包數目，並藉以節省各節點用電量，以延長使用壽命，這觀念是由著
名 OLSR 所提出。本篇論文作者進一步提出一個可同時考量節點剩餘電量和節
點與鄰居節連通程度的新演算法，稱為 REOLSR2。此演算法經 NS2 實驗證明比
OLSR 法更節省能源且有更好的流量表現。 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：100 年 8 月 30 日 
一、參加會議經過 
第二屆多媒體技術國際會議今年在中國杭州市召開，從 7/26 至 7/28 日為期三天。
這次研討會議由四個會議主題組成: Multimedia Technology & Information Science，
Physics and Mathematics，Civil Engineering and Urban Planning，3S& Digital City。參
加會議人士來自十幾個國家，超過百人與會。論文發表方式有口頭報告與論文張貼
方式兩種，總計超過百篇論文在此次會議中發表。本人的論文在 7/28 日以張貼方式
發表，會場共計超過 50 篇論文是以張貼方式發表，在會場中可以自由參閱論文，並
與作者進一步的討論，尤其面對不同國家的學者，可以有充裕時間作充分溝通，對
國際交流相當有幫助。 
二、與會心得 
計畫編號 NSC 98－2221－E－024－004－MY2   
計畫名稱 以全向性天線在多頻道無線網狀網路上建構即時群組群播串流 
出國人員
姓名 楊文霖 
服務機構
及職稱 國立臺南大學資訊工程系 
會議時間 100 年 7 月 26 日至100 年 7 月 28 日 會議地點 中國杭州市 
會議名稱 
(中文) IEEE 第二屆多媒体技術國際會議 
(英文) The 2nd International Conference on Multimedia Technology 
發表論文
題目 
(中文)針對在多頻道無線網狀網路的群播樹，以 Backtracking and 
Best-first 為基礎的頻道配置策略。 
(英文)Backtracking and Best-first based Channel Assignment Strategy for 
Multicast in Multi-radio Wireless Mesh Networks 
三、建議 
對舉辦國際研討會的行政作業有幾點建議: 
(1) 國際會議的舉辦時間點以暑假期間為宜，各地學者和學生較容易有空閒參加，
因此，會議出席情況較其他時間點為佳。 
(2) 會場選擇離市區較遠的飯店舉辦，對國際來訪學者並不方便，因此，未來我們
舉辦國際研討會應注意地點選擇，盡量接近車站或轉運站，讓國際訪客從機
場搭一次車即可到達為原則。 
(3) 午宴和晚宴應確實掌握人數，自助餐形式的餐會，其供應量應從寬估計，並隨
時添加，避免食物見底窘境。另外，動線安排以避免大排長龍的情況，亦應
妥善規則。以上事項，事先應與飯店業者作充分溝通。 
(4) 對於POSTER session, 此次主辦單位提供一張貼布帆如下圖，其大小為60cm × 
160cm。布帆可適用於各式場地，布置方便容易，且可多次使用，相當環保。
唯張貼範圍應僅限於上半部，布帆的下半部不方便讀者站立閱讀，因此建議
布帆寬度加大一倍，下半部則予以架空。 
 
四、攜回資料名稱及內容 
    此次會議帶回書面會議論文集一本和光碟一片。 
Backtracking and Best-first based Channel 
Assignment Strategy for Multicast in Multi-radio 
Wireless Mesh Networks 
 
Wen-Lin Yang 
Dept. of Computer Science and Information Engineering 
National University of Tainan 
Tainan, Taiwan, ROC. 
wlyang@mail.nutn.edu.tw 
 
Wan-Ting Hong 
Dept. of Computer Science and Information Engineering 
National University of Tainan 
Tainan, Taiwan, ROC. 
roof770904@hotmail.com
 
 
Abstract—In multi-radio multi-channel wireless mesh networks 
(WMNs), we are interested in how to allocate interference-free 
and partially overlapping channels to a multicast tree to support 
multiple high-quality video/audio stream transmissions. The goal 
is to maximize the number of serviced clients so that the 
maximum profits can be obtained. A new channel assignment 
approach named BBF algorithm based on backtracking and best-
first search strategies are developed. The experimental results 
show that our BBF method outperforms the conventional 
methods based on BFS and DFS principles in terms of the 
number of serviced clients, throughput and packet loss rate. 
 
Keywords-channel assignment; audio/video streams; wireless 
mesh network; multicast; backtracking; orthorgonal channel. 
I.  INTRODUCTION  
Multi-radio and multi-channel (MRMC) wireless mesh 
networks (WMNs) have been recognized to be the next- 
generation technology for wireless broadband networks [1]. In 
this paper, we are interested in a scenario that a number of 
nodes called mesh routers and a special node called gateway 
form the backbone of a WMN where a multimedia server 
installed at the gateway can provide video/audio streaming 
programs. For each mesh client, a number of clients may like 
to receive a streaming program through the mesh client. For 
example, they may simultaneously subscribe to watch a MLB 
game in-live. For the above scenario, a multicast tree may be 
considered to be the proper implementation for carrying the 
real-time streams. However, the conventional methods like 
Shortest Path or Kou methods are not suitable for wireless 
transmissions [2]. Hence, several new approaches are proposed 
for constructing multicast trees for wireless networks [3,4]. 
One important feature of these approaches is that they all take 
advantage of wireless broadcast nature (WBN) to save the 
number of relay nodes and transmissions in the multicast tree. 
Large amount of studies have shown that the performances 
of wireless networks are greatly affected by the interference 
between links with overlapping channels in vicinity areas [5,6]. 
Since our goal is to provide high-quality channels for 
transmitting real-time video/audio streams, an interference-
free channel-allocated multicast tree is the goal of this study. 
Hence, for multicast trees built in multi-radio WMNs, we are 
then required to bind each interface to a radio channel in a 
way that the interference is minimized and the link capacity is 
maximized. This problem is named as the channel assignment 
(CA) problem which is a NP-complete problem [7,8,9]. 
For links within the interference range, orthogonal 
channels can be used to achieve full-duplex transmissions 
without causing any interference. However, the number of 
orthogonal channels is very limited. In fact, there are only 3 
out 11 channels are orthogonal for IEEE 802.11b/g [5]. As a 
result, only very few of links can be allocated with conflict-
free channels. That is, the number of mesh clients connected 
to the multicast tree is very few. In order to fully utilize the 
whole frequency resources, non-orthogonal as well as 
orthogonal channels are used for CA in this study. It has been 
shown that partially overlapping channels can be used to 
achieve conflict free transmissions by CA algorithms for links 
within each other’s interference range [10]. 
Hence, we focus on developing a CA algorithm to allocate 
partially overlapping channels to links in a given multicast tree 
T for multi-radio WMNs so that the following goal can be 
obtained: (a) The number of mesh clients being serviced is 
maximized; (b) The concurrent interference-free multicasting 
can be supported. In this paper, we propose a new CA method 
named BBF based on backtracking and best-first search 
strategies. The experimental results show that our approach is 
better than the CA approaches which are developed by depth-
first search (DFS) and breadth-first search (BFS) procedures. 
II. DEFINITION OF AN OPTIMIZATION PROBLEM 
Given a multicast tree T = (V, E), as shown in the Fig. 1, 
each node Vu ∈ is equipped with multiple radios and a 
weight load. Here, the req (u) value represents the number of 
customers  serviced  by node  u. We also define a set M =  
Vuu ∈|{ and req (u) > 0}. Our problem is required to allocate 
interference-free channels to the tree links such that the nodes 
in M can be totally covered. Let ),( EVT = be the resulting 
multicast tree after CA is performed and TT ⊆ . Since the 
channel resource is very limited, it is possible that VM ⊄ . 
Therefore, our goal is then set to find a set of CA for links so 
that the following equation is maximized: 
2984
978-1-61284-774-0/11/$26.00 ©2011 IEEE
guided by the load values. At line 4, a priority queue is 
initialized to store all the links incident from the root “s”. 
Then, in the while loop, the best directed link al  = (u → w) is 
selected and removed from Q if the node w has the largest 
load value. That is, the node with the largest load value has 
the highest priority to be selected for allocating channels. This 
selection criterion is called best-first strategy. At line 8, we 
add all the links incident from w into Q. For example, in Fig. 1, 
Q = {(A, B), (A, C), (A, D)} before entering the while loop. 
Since load (B) =15 is the largest load, link (A, B) has the 
highest priority to be selected for CA. As a result, Q = {(A, C), 
(A, D), (B, E), (B, F)}. In the next step, link (A, D) will be next 
link selected for CA since load (D) = 12 is the largest load. 
At the step 2, we define a linked-list L in which each node 
contains a link al  which is associated with a candidate list alΓ . 
The elements in 
alΓ  are the interference-free channels that can 
be allocated link 
al . One example for the linked-list L is shown 
in Fig. 5. At line 10, we start to do CA for the current link al . 
First of all, we look up IM matrix to find a sibling link bl . If it 
exists, a channel allocated to bl  can be shared with al  based on 
the wireless broadcast advantage (WBA) [8]. Otherwise, the 
Find_Free_Channel() shown in Fig. 4 is used to find all the 
conflict-free channels which are stored in candidate list 
alΓ  . 
The channel of al is then assigned to be the first element of alΓ . 
Based on these candidate lists, we may have flexibility to 
change the channels for the allocated links so that at least one 
channel can be found for the current link. For example, in Fig. 
6, we assume that no channel can be found for link (B, E) and 
it is interfering with link (B, F), we may change the current 
channel associated with link (B, F) from 8 to 9, 10 or 11so 
that a conflict-free channel can be found for link (B, E). It is 
called backtracking strategy which is given in Fig. 6, where k 
value can be set to be a small positive number based on the 
experimental results shown in section IV. 
Find_Free_Channel(
al , alΓ ){ 
1. For (c = 0; c  <  max_channel ; c ++) { 
2.   flag_test = true; 
3.    For (each link ∈l  T && (k = ch_assigned[ l ] ≥ 0) 
4.   { γ = |c - k|; 
5.     if (γ < β value stored in IM[
al , l ]) { 
6.          flag_test= false; break; }} 
7.    if(flag_test) 
alΓ  = alΓ + c ;}} 
8. Return (the number of elements in 
alΓ ); } 
Figure 4. Find_Free_Channel procedure 
 
Figure 5. Linked-List L 
Backtracking(
al ){ 
1. Searching Linked-List l from the head to find the first 
node μ containing 
al  such that α value of IM[ al , l ] is 3; 
2. Let k > 0, b = 1; 
3. While (b < k ) { 
4.    If ( ≠Γl φ  && (α value of IM[ al , l ] == 3) ) { 
5.      m = number of channels stored in lΓ ; 
6.      For (i=0 ; i < m ; i++) { 
7.       channel_assigned[ l ]= lΓ [i]; 
8.       If ((k = Find_Free_Channel(
al , alΓ )) > 0) { 
9.         Return k ; 
10.    } 
11.    b++; 
12.    Try next node in L, i.e. μ = μ + 1;} 
13.  Delete 
al ; 
Figure 6. Backtracking procedure 
IV. EXPERIMENTAL RESULTS 
In this section, a set of experiments are designed to 
compare our backtracking-based CA algorithm with the other 
CA approaches based on DFS or BFS. As for the multicast 
trees, they are built by the Lmcm, ShortestPath and Greedy 
methods published in [10]. The random networks with 50 and 
100 nodes are generated for simulations. The number of 
receivers with req > 0 is 10% ~ 50% of total number of nodes. 
IEEE 802.11b technology is used in the simulations.  
The performance comparisons conducted in this section 
for BBF, BFS and DFS algorithms are in terms of the 
following factors: number of clients serviced, throughput, 
packet loss rate. The number of clients serviced is obtained 
from simulations with our c++ programs running on 1000 
random varied-sized networks. And, the data about throughput, 
packet loss rate are obtained from the Qualnet simulator. 
A. The number of clients serviced 
In Fig. 7, we define “performance ratio” to be the number 
of clients serviced divided by the number of clients who ask 
for to receive the stream. The multicasting trees constructed 
by Lmcm method and allocated channels with BBF algorithm 
have the best performance. The results are hold for different 
size networks. The results from Lmcm+DFS is better than the 
results from Lmcm+BFS. Hence, BFS is not considered in the 
following experiments. 
B. Average throughput 
In Fig. 8, the average throughput for each serviced client is 
the best for the channel-allocated multicast trees built by 
Lmcm with BBF CA algorithm. The results from Qualnet 
simulations are matched with the previous results for the 
number of clients serviced. 
C. Average packet loss rate 
In Fig. 9, the average packet loss rate is measured for each 
serviced client. The scheme with ShortestPath and DFS has 
the lowest packet loss rate compared to the other three 
8 
9 
10 
candidate list lΓ  
(A,B) 
Linked-list L 
(A,D) (B,F) (A,C) (B,E) 
2986
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/05
國科會補助計畫
計畫名稱: 以全向性天線在多頻道無線網狀網路上建構即時群組群播串流
計畫主持人: 楊文霖
計畫編號: 98-2221-E-024-004-MY2 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
