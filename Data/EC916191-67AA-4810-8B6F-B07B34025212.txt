中文摘要 
  軟體廠商若欲開發跨平台軟體系統來擴展潛在市場，勢必會增加相當可觀的
開發成本。持續整合是一個在軟體工程界廣泛被討論與實際應用的方法，無論這
些成本來自於整合或是測試工作，可以有效率地降低這些因為跨平台而帶來的成
本。本研究在第一年採用樣式方法，針對跨平台專案撰寫持續整合設計樣式。第
二年則撰寫跨平台專案所需使用的持續整合工具樣式。我們分析了跨平台專案建
構需要解決的問題，並找出適合的解決方式，整理出四個與跨平台建構環境相關
的持續整合模式。第三年，我們以一個開放原始碼專案為例子，從前兩年所提出
的樣式中，篩選出適合於此專案的樣式並實際套用。我們選用 SyncFree 這個跨
平台的檔案同步軟體為例子，針對其使用到與平台相關的程式碼，我們套用了
Native Project 樣式。為了讓程式碼更容易安裝於各個平台，我們套用了
Installation Project 樣式。而因為套用了這兩個樣式，我們會需要管理每個子專案
引用函式的版本，所以我們也套用了 Single Shared Library Project 樣式。最後，
這個專案成功地套用了這三個樣式，而我們也將前二年計畫中提出的樣式以及此
一套用樣式的例子放在我們公開的網站上。
http://pl.csie.ntut.edu.tw/ntutlab306/php/PatternsOfContinuousIntegration/index.html 
 
關鍵詞：樣式，樣式語言，持續整合，跨平台軟體開發 
英文摘要 
  Though making a software cross-platform may have the benefit of attracting 
more potential users, it usually results in a higher cost of development. Thus it 
become very important to use various software practices as a measure to bring the 
cost down. Continuous integration is a widely used software best practice for this 
purpose. However, for development teams that do not have sufficient experience of 
continuous integration, it may not be easy to apply continuous integration smoothly 
and effectively. This project aims to develop a pattern language that can help 
developers to carry out the continuous integration job for developing cross-platform 
software.  
 
The objectives of the previous two years research are as shown below: 
1. The first year: Establishing continuous integration design patterns for 
cross-platform projects. 
2. The second year: Establishing continuous integration tools patterns for 
cross-platform projects. 
 以 SyncFree 的專案特性來說，我們需要能夠方便地在各個平台下產出可執行的
檔案，也需要將有平台相依性的程式碼獨立出來，所以決定套用 Installation 
Project, Native Project這兩個模式。而再套用這兩個模式以後，為了能夠方便管
理各個子專案的 library，所以我們又套用了 Single Shared Library Project 模式。
所以，我們套用的模式整理如下：Installation Project, Single Shared Library Project, 
Native Project。 
 
 
圖 一：SyncFree專案 package 
 
  使用 Native Project 的理由：在 SyncFree 專案中，當 IO存取異常時，使用者
會收到 IO Exception 這個例外訊息並附帶作業系統的錯誤代碼。為了能夠從作
業系統的錯誤代碼解析真正的錯誤訊息，SyncFree利用 JNA可以直接存取System 
call 的功能，來解析不同平台回傳的錯誤碼，得知 IO異常的真正原因。雖然是
以 JNA來存取 System call 還是撰寫 Java的程式碼，但是這個部分的程式碼還是
與平台有高度的相依性。我們會根據目前 SyncFree 可以執行的平台，拆成兩個
 圖 二：SyncFree專案與 SFSingleSharedLibrary子專案 
 
因為SyncFree專案原本參考的第三方 library已經被移動到SFSingleSharedLibrary
專案中，所以圖 二的 SyncFree 專案出現編譯錯誤的情形。我們要將 SyncFree
專案參照第三方 library 的路徑指向 SFSingleSharedLibrary，來修正這個錯誤。 
 
圖 三：SyncFree專案對 Library的參考路徑 
 
  從圖 三可以看到 SyncFree 專案所用到的第三方 library皆參考到
SFSingleSharedLibrary專案，但是建置路徑中，還有一個 agile.rl.jar 檔案在
SyncFree 專案中。agile.rl.jar 是我們另外一個專案 Robusta 的 library，他可以協助
 圖 五：Native的 Library存放在 SFSingleSharedLibrary 子專案中 
 
 
圖 六：SyncFree專案將建置路徑中加入與平台相關的 library 
 
  套用 Native Project Pattern 以後，目前 SyncFree 軟體由四個專案建構而成，
分別是 SyncFree、SFSingleSharedLibrary、natriveLinux、nativeWindows。 
 
 圖 七：SyncFree套用 Native Project Pattern 與 Single Shared Library Project Pattern 
 
  而原來的 SyncFree 專案中，剩下與產品封裝成可執行檔相關的程式碼與設
定檔，我們將其全部抽到 SFInstaller 專案中。上述抽出的各個子專案，都要編譯
成 jar 檔案存放到 SFSingleSharedLibrary 專案的 common資料夾中。再根據每個
子專案之間的相依性，設定專案的參考路徑到 SFSingleSharedLibrary 的 jar 檔。 
 
  因為 SyncFree 原來的架構上套用了 MVC的概念，所以有許多類別被抽出成
子專案的時候，按照 Model、View、Controller 的方下去實行，所以在分離子專
案的過程中，沒有太多因為類別耦合度太高，造成無法分割子專案的問題。 
 參考文獻 
SyncFree：一個使用 Java 技術開發之開放原始碼個人資料同步軟體， 
http://pl.csie.ntut.edu.tw/ntutlab306/php/syncfree.html  
 
Cheng, Y. C., Ou, P.-H. Chen, C.-T., Hsu T.-S., 2008. A Distributed System for 
Continuous Integration with JINI. In: Proceedings of the 2008 International 
Conference on Distributed Multimedia Systems (DMS 2008), Boston, USA, 130-135. 
 
Fowler, M., 2006. Using an Agile Software Development Process with Offshore 
Development. < http://martinfowler.com/articles/continuousIntegration.html > 
(accessed May 2012). 
 
Gray, J., 2009. Google Chrome: the Making of a Cross-Platform Browser. Linux 
Journal 2009 (185). 
 
Sutherland, J., Viktorov, A., Blount, J., Puntikov, N., 2007. Distributed Scrum: Agile 
Project Management with Outsourced Development Teams. In: Proceedings of the 
40th Annual Hawaii International Conference on System Sciences, Big Island, Hawaii, 
274a. 
 
Muller, T., Knoll, A., 2009. Virtualization Techniques for Cross Platform Automated 
Software Builds, Tests and Deployment. In: Proceedings of the Fourth International 
Conference on Software Engineering Advances (ICSEA ‘09), Porto, Portugal, 73-77. 
 
Henney, K. (Ed), 2010. 97 Things Every Programmer Should Know: Collective 
Wisdom from the Experts. O'Reilly, Sebastopol, CA, USA. 
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：謝金雲 計畫編號：99-2221-E-027-096-MY3 
計畫名稱：支援跨平台軟體開發之持續整合樣式與樣式語言 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
1. 謝慕憶、謝金
雲、鄭有進，’’
以雲端平台特性
為目標將Web應用
程式遷移至雲端
之重構方法： 以
ezScrum 為
例  ’ ’ 。 TCSE 
2013，高雄， 2013
年 7 月 5-6 日。獲
選 TCSE 2013 最佳
論文。 
2. 陳膺仁、謝金
雲、鄭有進，’’
使用 AOP 技術將
Web 應用程式遷移
至雲端之方法：以
ezScrum 為
例 ’ ’ 。 TCSE 
2013，高雄， 2013
年 7 月 5-6 日。 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
國外 
論文著作 
專書 0 0 100% 章/本  
