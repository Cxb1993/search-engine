2以影像為基礎之晶圓缺陷辨識系統(2/3)
Automated Recognition of Wafer Defects Based on Image Processing
Techniques
計劃編號：NSC 95-2221-E-007-162
執行期限：95年8月1日～96年7月31日
主持人：陳飛龍 flchen@ie.nthu.edu.tw
執行單位：清華大學工業工程與工程管理系
一、中文摘要
半導體產業已經成為台灣近幾年來最重要
的產業之一，雖然半導體晶圓是在高度自動化
及無塵的環境中製造，但是良率的流失仍是無
法避免的，其潛在的原因固然很多，而晶圓上
所存在的缺陷則無疑是其中最主要的原因。因
此整個半導體製程必須嚴密掌控，才能將製程
中可能產生之變異降低，使產品品質合乎客戶
的實際需求，其中晶圓缺陷圖樣辨識乃是最直
接、最有效反應異常製程之方法。晶圓缺陷圖
樣包括環狀 (ring)、半圓狀 (half ring)、刮傷
(scratch)、重覆(repeat)、放射狀(radiation)等圖
樣，以往多半是透過人工的方式來目視來檢閱
晶圓缺陷圖樣，並藉由定義好的準則來決定晶
圓缺陷圖樣，但這種方式不僅需要耗費昂貴的
訓練成本，還要要大量的時間，且即便是經驗
老到之工程師，亦可能因為長期目視檢測所帶
來之疲乏，而使其判定結果出現不穩定性；更
何況半導體產業人員流動性高，經驗不足之工
程師更難期待能有準確的缺陷辨識分析能力，
因此，晶圓缺陷之自動辨識乃成為半導體業者
亟於發展之技術。
視覺可辨認的缺陷有可見的顆粒、開路、
短路或其它不尋常的點，而視覺所辨認缺陷通
常是由群集中彼此的關係所定義，群集指的是
由晶圓中某一小區域裡可見的大量缺陷所組
成。經由辨識所發現的區域性缺陷可以提供某
些跡象去定義此缺陷是機台設備或製程變異所
引起的，因而可以減少排除問題所需的時間。
基於此，本計畫擬提出一以影像處理為基礎的
晶圓缺陷辨識系統，結合影像處理技術、資料
探勘技術、以及類神經網路技術來分析大量資
料，以快速又正確的辨識出晶圓上的缺陷圖
樣，並建立缺陷診斷知識庫，以提升系統之智
慧能力。
在第一年的計畫中，我們發展了基本缺陷
圖樣類型的辨識系統，可以自動辨識環狀
(ring)、半圓狀(half ring)、刮傷(scratch)、重覆
(repeat)、放射狀(radiation)等圖樣。但在這些缺
陷圖樣類型中並不包含缺陷圖樣交錯的情形，
也就是說缺陷圖包含兩種或兩種以上的圖樣。
交錯式缺陷圖樣之辨識困難度比單一圖樣高上
許多，因此在本年度計畫中發展了一套辨識交
錯圖樣之演算法，使的辨識率能更有效提升。
關鍵詞：晶圓缺陷、影像處理、資料探勘、類
神經網路、良率提升
Abstract
For the past few years, semiconductor
manufacturing has emerged as one of the most
important industries in Taiwan. Even with the
highly automated and precisely monitored
facilities to process the complex manufacturing
steps in the near particle free environment, the
wafer yield loss is still unavoidable. The cause of
these variations may arise from equipment
malfunction, delicate and difficult process steps,
or human mistakes. Even though IC yield loss
may be contributed to many problems, the
existence of defects on the wafer is one of the
main causes. For this reason, defect pattern
recognition in no doubt has become one of the
most effective approaches to locate the process
variations. Typical defect patterns include curve,
line, half ring, edge ring, scratch, repeat and
radiation. Traditionally, the recognition of these
patterns is achieved by the visual inspection of
engineers. Tremendous amount of data need to be
digested in this approach. The recognition results
may not be very reliable due to visual fatigue.
Automated recognition of defect patterns has
therefore emerged as a crucial task in
4employs a novel hierarchical clustering algorithm
that adopts a middle ground between the centroid
based and the all point extremes. It is more robust
to outliers and it identifies clusters having
non-spherical shapes and wide variances in size.
Graph representation is an algorithm based on a
special image representation. Sowa’s [6]
addressed that the information is represented in
the nodes and edges. Boatto and his colleagues [4],
used graph representation to detect and separate
symbols connected. There are two situation in the
symbols connected, one is symbols crossing lines
and the other one is symbols only touching lines,
as shown in Figure 2. This graph is searched for
characteristic sub-graphs revealing the presence of
symbols or noisy objects overlapping lines.
Figure 2 Examples of symbols in graph
representation. [Boatto, 1992]
三、 研究方法
The definition of problems
The production of the semiconductor
manufacturing is very complicated. There are
hundreds of steps in the processing. It is
impossible for the wafers to have only
one pattern forever. That is, the multi-patterns
occur frequently. The multi-patterns include
intersecting patterns and non-intersecting patterns.
The latter ones usually can
be identified easily because they are not crossover
and will not affect the segmenting results. But if
the patterns are crossover, the algorithm of
segmenting becomes much
more complicated. This research will focus on the
intersecting patterns recognition.
In this research, the intersecting patterns will be
defined into three types including curve crossover
type, curve-line crossover and line crossover (See
Figure 3).
Figure 3 The defined types of crossover
The Detection and Identification of Intersecting
Defect Patterns Algorithm
The algorithm utilizes defect data collected
from semiconductor manufacturing and simulated
defects as inputs to execute the analyzing
processes. There are three main steps of the
proposed algorithm as shown in Figure 4. First of
all, pre-processing is the essential step for filtering
out noises. The isolated points will affect the
accuracy of the recognition results, so we intend to
use 5×5 mask as the filter for removing the
isolated points.
Figure 4 The Framework of Defect Analysis
Secondly, defect analysis is the most improtant
step and it is also the core of this algorithm. This
step is consisted of three sub-steps including
image segementation, graph representation and
fuzzy clustering. Watershed segementation
6points(random defects) effectively and keep the
systematic defects precisely for next stage,defects
analysis.
Table 1 The results of test samples after filtering.
The analysis of defects
The next step after removing isolated defects is
image segmentation which will separate the image
into several parts. Our research intend to develop
an algorithm based on graph representation and
polynomial regression (quadratic regression) to
solve the intersecting defect patterns.
The main function of graph representation
method is calculating the slope and four vertices.
The formula of polynomial regression is
y=a0+a1x+a2x2+…anxn and the
a0,a1,a2,…an.are unknowns. Then, we have to
calculate the minimum of E (E is error value):
When the value of E is minimized by limit
theorem, it means that the value of deviation is
zero. Therefore, the function can be written as:
Then, we can get the matrix and calculate
a0,a1,a2,…an. from the following formula (N is the
count of points):
This research have to recognize line and curve
intersecting, thus we apply quadratic regression to
find the optimal curve and line. To calculate the
values of ai and compute the regression equation is
the major part in this algorithm. The next step is
checking the percentage of defects located on this
curve or line. And we can capture the coefficient
by the following equation:
Because the algorithm is complex, we simplify
this algorithm and integrate with quadratic
polynomial to acquire another algorithm. There
are five steps of this methodology:
Step1:
Set all defects into a vector, and choose any one
defect (x1,y1)to be the initial point. Then, gather
any two defects to be (x2,y2),(x3,y3)
Step2:
In order to obtain the formula of these three
points(x1,y1), (x2,y2),(x3,y3) we should calculate
the coefficient a, b, c of y=ax2+bx+c..
Step3:
Compute the numbers and percentages of
defects located on this curve (or line).Set those
defects into a vector.
Step4:
Choose another defect to be the start point and
repeat step1, step2, and step3 until all of defects
have been the initial points.
Step5:
Compare the vectors which include defects,
percentages, and counts. Check ifthe defects on
the same curve (or line) are enough or not.
Following those five steps, we can separate
intersecting patterns effectively. Table 2 illustrates
the results of three kinds of test samples. It applies
8Table 5 Contents of member functions.
The if-then rules are displayed in Table 6. The
rule base collects the domain knowledge of
engineers and we transform the rule to the if-then
rules. After gathering the features (member
functions), we put these data into the rule base and
follow the precedent of those rules to get the
output (result patterns).
Table 6 Contents of if-then rule.
After obtaining the output, the results will be
shown in the representation stage. The
probabilities of patterns are assigned between
0.0% to 100.0%. And the value of probability
depends on the percentage of defects locating on
the same skeleton.
The structure of the knowledge base also
provides some advantages. It can help the
inexperienced engineers accelerate the
decision-making. Meanwhile, since the knowledge
base builds up standard rules for different
intersecting patterns, engineers who work in
different fabs can therefore utilize the same rules
to identify defect patterns. And the detection and
identification of intersecting defect patterns can be
more impersonal.
四、成果與討論
Structure of the Developed System
The schematic concept of the proposed system
using Borland C++ Builder is illustrated in Figure
7. Defect detection and inspection is usually
performed by KLA, Tencor, or Orbot in a
semiconductor manufacturing company. The
structure of the developed system is similar to
theirs but the algorithm is different. Usually the
semiconductor company transforms the defect data
and stores them in a defect database. Then,
through the defect data loader and transformer, the
defect data can be transformed to locations and put
them onto an image. The next step is passing
images to the image processor which includes
defect filtering and defect detecting.
Figure 7 The structure of the developed system.
After the image processor, the un-necessary
defects will be removed and the defects will be
segmented. The feature extractor extracts the
structure features and passes those features into
knowledge base. The knowledge base contains lots
of rules and the features will be compared with
those rules. Then, it will give feedback to the
system. The final stage, defects identification, will
display the pattern results and generate the
confidence degrees of pattern types.
Introduction of the Developed System
The developed system is a user friendly
application system by using application frame.
The main frame of this system is shown as in
Figure 9, and it includes four parts: defect loader,
defect filter, defect detector (feature
extractor), and defect identification.
Figure 9 The main frame of the developed system.
10
in this system. The system will compare those
features with the knowledge base and follow the
if-then rule to determine the defect patterns.
In the program frame, the defect patterns will
be marked in red for reviewing easily and the
bottom of this frame will show the resulted
patterns, such as the example shown in Figure 13
which displays “RESULT = Line 80.00% | Curve
0.00% |” and “There exist a line patern”.
Figure 13 The function of defect identification:
(a) the program frame, (b) the report frame.
Verification of System
In order to evaluate the capability of the
proposed algorithm, the developed detection and
identification of intersecting defect patterns
system was verified through the simulation data
and industrial data of a famous semiconductor
company located in Hsinchu Science-Based
Industrial Park.
Performance of identifying clustered defects
The process of identifying clustered defects is
the last step of this developed system. After
defects filtering, defects detecting, and feature
extracting, the pattern results are summarized in
this stage. There are totally twenty-four samples
which are experimented with the developed
system. Seven samples are real data from
semiconductor manufacturing company and
seventeen samples are simulated.
Table 8 and Table 9 illustrate the
experimental results of intersecting line and curve
samples. Sample 1 of line patterns has two types,
line and curve, and we can see
this defect map has one line and one curve indeed.
Thus, the result of this defect map is “RESULT = 
Curve 80.00% | Line 75.00% |”.
Table 8 The experimental results of line samples.
Table 9 The experimental results curve samples.
The recognition rate should be defined first
before evaluating the performance of the
developed system. It is given by comparing the
difference of the judgment between the system and
the experienced engineers. The value of 1 means
that the result is correct, whereas the value of 0
means that the result is incorrect.
The experimental results in Table 10 show
that the average accuracy of 24 samples is 96%.
Make a comprehensive survey, the system has
high reliability for
identifying intersecting line and curve types.
Table 10 The accuracy of results.
Processing time of system
There are two crucial factors of measuring
performance of a system: accuracy and speed.
Table 11 exhibits the processing time of the line
samples, and Table 12 shows the processing time
of the curve samples. The average processing time
per defect map is 1.59 seconds as Table 13
described. The experiments demonstrate that the
proposed methodology not only meets a high
accuracy target but also save much time on dealing
with the intersecting defect identification
comparing to human operations.
