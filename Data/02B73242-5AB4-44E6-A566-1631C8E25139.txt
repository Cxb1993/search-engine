 2
are shown as follows. 
(i)  Protocol Modeling and Analysis  
(a) HTTP modeling  
(b) Multicasting with feedforward error 
correction  
(c) Optimal load balancing 
(ii)  High Speed Switching 
(a) quasi-circuit switching and 
quasi-circuit switches  
(b) Control of packet delay in 
quasi-circuit switches 
(iii) Optical Switching 
(a) Optical FIFO multiplexers with 
variable length bursts 
(b) 2-to-1 multiplexers  
(iv) Programmable Sensor Networks  
(a) Integrating mobile agent technology 
into an Internet-based sensor 
network 
(b) Integrating P2P technology into an 
Internet-based sensor network 
(c) Developing a rogue device detection 
and location system for 802.11 
wireless networks 
(v)  Control and Engineering of IP Traffic 
(a) Cooperative congestion control for 
multimedia networks based on 
learning approach 
(b) Optical CDMA header encoding for 
optical label switching 
(c) Node protection and link protection 
based on link-state routing protocol 
 
Keywords: HTTP modeling, mutlicasting, 
load balancing, Quasi-circuit switch, optical 
queues, optical multiplexer, P2P technology, 
congestion control, optical label switching, 
node and link protection 
 
2. Results and Discussion 
The relation of these five sub-projects is 
shown in the following figure. 
Fig. 1. The relation of the five sub-projects 
Progresses obtained in each subproject 
improve the understanding of the whole 
Internet. The key progresses achieved 
among these subprojects are shown as 
follows. 
(i) Protocol modeling and analysis: 
(a) HTTP modeling: there have been 
tremendous progresses in understanding how 
bandwidth is shared by TCP-like connections. 
By associating each TCP-like connection 
with a utility function, the bandwidth sharing 
problem of TCP-like connections can be 
modeled as a distributed optimization 
problem for utility functions. However, little 
is known on how bandwidth is shared by 
HTTP-like connections through their utility 
functions at the TCP level. 
In [1], we developed a theory for 
bandwidth sharing of a large number of 
HTTP-like connections and gave some 
possible applications to the Internet with this 
theory. Based on certain technical 
assumptions, we showed that there is a utility 
function at the HTTP level for an HTTP-like 
connection and such a utility function can be 
 4
amenable to optics, and – most relevant 
here – guarantees 100% throughput. A 
uniform mesh is used to load-balanced 
packets uniformly across all 2-hop paths in 
the switch. In [3], we explored whether this 
particular method of load-balancing is 
optimal in the sense that it achieves the 
highest throughput for a given capacity of 
interconnect. The method we used allows the 
load-balanced switch to be compared with 
ring, torus and hypercube interconnects, too. 
We proved that for a given interconnect 
capacity, the load-balancing mesh has the 
maximum throughput. Perhaps surprisingly, 
we found that the best mesh is slightly 
non-uniform, or biased, and has a throughput 
of N/(2N − 1), where N is the number of 
nodes 
  
(ii) High Speed Switching 
(a) quasi-circuit switching and 
quasi-circuit switches: in [4], we developed 
the theory of quasi-circuit switching and the 
associated methods of building quasi-circuit 
switches. Quasi-circuit switching is between 
packet switching and circuit switching. In a 
quasi-circuit switched network, time is 
partitioned into frames. Quasi-circuit 
switches then ensure that for any two packets 
with the same input and output links, the 
difference of their arriving frames is the same 
as the difference of their departing frames. 
By so doing, traffic can be isolated between 
frames and be multiplexed within a frame. 
As such, quasi-circuit switching can provide 
quality of services at the time scale of frames 
while achieving statistical multiplexing gain 
within frames. 
Quasi-circuit switches are more scalable 
than packet switches and circuit switches 
built with the same switch architecture. We 
showed that quasi-circuit switches can be 
easily built based on the classical switch 
architectures, such as the shared memory 
switch architecture and the crosspoint 
buffered switch architecture. However, these 
architectures do not scale in the domain of 
high speed switching. In [4] we proposed 
several scalable architectures, including the 
load balanced Birkhoff-von Neumann 
quasi-circuit switch, the Clos quasi-circuit 
switch and the Benes quasi-circuit switch. 
We showed that finding routing paths in the 
Benes quasi-circuit switches is much easier 
than that in the Benes circuit switches. These 
architectures are shown in the following 
figures. 
 
Fig. 4 A crosspoint buffered switch 
 
 
Fig. 5 The load balanced architecture for 
quasi-circuit switches 
 
 6
 (iii) Optical Switching: 
(a) Optical FIFO multiplexers with 
variable length bursts: it has been studied 
extensively in the literature how one achieves 
exact emulation of First In First Out (FIFO) 
multiplexers for fixed size cells (or packets) 
using optical crossbar switches and fiber 
Delay Lines (SDL). In [6], we took a step 
further and propose a new architecture that 
achieves exact emulation of FIFO 
multiplexers for variable length bursts. Our 
architecture consists of two blocks: (see Fig. 
9) a cell scheduling block and an FIFO 
multiplexer for fixed size cells. Both blocks 
are made of SDL units. The objective of the 
cell scheduling block is to schedule cells in a 
burst to the right input at the right time so 
that cells in the same burst depart 
contiguously from the multiplexer for fixed 
size cells. We showed that cell scheduling 
can be done efficiently by keeping track of a 
single state variable, called the total virtual 
waiting time in [6]. Moreover, the delay 
through the cell scheduling block is bounded 
above by a constant that only depends on the 
number of inputs and the maximum number 
of cells in a burst. Such a delay bound 
provides a limit on the number of fiber delay 
lines needed in the cell scheduling block.  
 
 
 
 
 
 
 
 
 
 
 
Fig. 9 The architecture 
 
(b) 2-to-1 mutiplexers: In [7], we 
proposed a new construction for a 2-to-1 
optical FIFO multiplexer by Switched Delay 
Lines (SDL). We considered an 
(M+2)×(M+2) crossbar switch and M fiber 
delay lines with delays d1, d2,…, dM. These 
M fiber delay lines are connected from the M 
outputs of the crossbar switch to the M inputs 
of the switch, leaving two inputs (resp. two 
outputs) of the switch for the two inputs (resp. 
two outputs) of the 2-to-1 multiplexer (see 
Fig. 10). We showed that such a construction 
can be operated as a 2-to-1 FIFO multiplexer 
with buffer d1+ d2+… +dM if (i) the delay 
lines are chosen to satisfy d1 =1 and di ≤ di+1 
≤ 2di, i=1,2, …, M-1, and (ii) the routing of a 
packet is according to a specific 
decomposition of the packet delay, called the 
C-transform in [7]. 
 
 
 
 8
learning model and proposed a framework of 
“Cooperative Congestion Controller” (CCC) 
involving multiple agents and mechanisms 
for coordinating the behavior of individual 
agent to guarantee the quality of services 
(QoS) in multimedia networks. Each CCC in 
core nodes learns cooperatively according to 
the status of its own queue lengths and data 
rates, along with the sending rates and 
rewards provided by the neighboring CCCs.  
Second, for the fast header processing of 
optical label switch, we proposed “Optical 
CDMA Header Encoding for Optical 
Label Switching” to avoid O/E/O process of 
optical packet header in OLS. As an optical 
packet reaches a core node, its most 
front-end label enters the optical correlator of 
this node, and correlates with the code 
sequence of this core node. The result is the 
control signal that guides the optical packet 
to the correct output port, as shown in Fig. 
11.  
 
Fig. 11. Core node architecture 
 
As shown in Fig. 12, the optical 
correlator is simple. At input side, the optical 
signal represents one of the bits of the label 
with 9 slots. In slot 2, 6, 9, there is one pulse 
for each slot. The other slots get no pulse. 
Such one-bit optical signal will be split into 3 
parts by power splitter. Each part passes 
separately through FDLs of different delay, 
τ= 9, τ= 6, and τ= 2, and is combined by 
power combiner. The new signal will reveal 
inside the diagram. The pulse of maximum 
energy can be found at central spot. Only this 
pulse can push photo diode to generate a 
powerful enough current to enable threshold 
detector to send a signal of bit = 1. 
 
Fig. 12  Simplified optical correlator 
 
In this way, the optical label switching 
involves neither O/E/O procedure and label 
distribution protocol, nor header modification 
problem. 
Third, for fast recovery from node and 
link failure, we proposed IP protection 
scheme IP forwarding, “IP Local 
Fast-Reroute Based on Link-State Routing 
Protocol for Node Protection and Link 
Protection.” In this scheme, we use the 
information from the topology database of 
ordinary link-state routing without the need 
of any additional control protocol while 
greatly improving the IP network 
survivability. 
 
 
