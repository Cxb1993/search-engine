1 
 
行政院國家科學委員會補助專題研究計畫 
█成果報告   
□期中進度報告 
 
社群資料的路徑k-隱匿及植基於私人資訊擷取的空間資料私        
人查詢之研究 
 
計畫類別：█個別型計畫   □整合型計畫 
計畫編號：NSC  100-2221-E-390 -030 - 
執行期間： 100年 08 月 01  日至 101年 07 月 31  日 
 
執行機構及系所：國立高雄大學資管系 
 
計畫主持人：王學亮 
共同主持人： 
計畫參與人員：陳仲膺、施慶銓、陳嘉葳 
 
 
 
成果報告類型(依經費核定清單規定繳交)：█精簡報告  □完整報告 
 
本計畫除繳交成果報告外，另須繳交以下出國心得報告： 
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
█出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
 
3 
 
行政院國家科學委員會專題研究計畫成果報告 
隱私保護: 社群資料的路徑 k-隱匿及植基於私人資訊擷取的空間資料私人
查詢之研究 
Privacy preservation: studies of k-anonymity path privacy on social network data and 
private queries on spatial data based on private information retrieval 
計畫編號：NSC 100-2221-E-390-030- 
執行期間：100年 8月 1日至 101年 7月 31日 
計畫主持人： 王學亮教授 執行機構：高雄大學資管系 
E-mail: slwang@nuk.edu.tw 
 
 
Abstract 
To preserve privacy, k-anonymity on relational, 
set-valued, and graph data have been studied 
extensively in recent years.  Information on 
social networks can be modeled as un-weighted or 
weighted graph data for sharing and publishing.  
We have previously proposed k-anonymous path 
privacy concept on weighted social graphs to 
preserve privacy of the shortest path [9].  A 
published social network graph with k-anonymous 
path privacy has at least k indistinguishable 
shortest paths between the source and destination 
vertices.  However, previous work only 
considered modifying Never-Visited (NV) edges 
by other shortest paths.  In this work, we further 
extend the approach and propose a new technique 
that can modify both NV edges and All-Visited 
(AV) edges to achieve the k-anonymous path 
privacy.  Experimental results showing the 
characteristics of each technique are presented.  
It clearly provides different options to achieve the 
same level of privacy under different 
requirements. The proposed work has been 
published in an EI indexed international 
conference. In addition, the work has been 
submitted to a SCI-indexed journal this year. 
 
Keywords- social networks, privacy preserving, 
edge weight, shortest path, k-anonymity 
摘要 
本研究計畫之主要目的在於探討K-隱匿路徑隱
私問題及其相關隱匿技術。近年來有許多學者
提出有關在圖型資料上如何防止身份辨識型
(re-identification)或關係(relationship)
之隱私侵犯之研究。然而目前對圖型資料上的
防止路徑(path)隱私侵犯的研究並不多見。本
研究提出一個新的在社會網路上最短路徑隱匿
之概念及其隱藏之演算法。植基於K-隱匿之概
念，我們提出一個使用最少修改運算量之隱匿
方法。我們並對所提方法之效率做詳盡之分析
與探討。我們的研究結果已發表於一篇國際研
討會上。 
 
關鍵詞：社會網路、隱私保護、邊的權重、最
短路徑、K-隱匿 
 
I.  INTRODUCTION 
Social network applications, such as Facebook, 
MySpace, Linkin and other online communities, 
collaboration networks, telecommunication 
networks, have become extremely popular for 
sharing information in recent years.  There are 
millions of registered users associated with others 
through friendships, hobbies, professional 
association, and so on.  These user information 
5 
 
To preserve the shortest paths between pairs of 
vertices, Gaussian randomization perturbation and 
greedy perturbation techniques that minimally 
modify the edge weights without adding or 
deleting any vertices and edges have been 
proposed.  A linear programming abstract model 
that can preserve linear properties of edge weights 
(including shortest paths) after anonymization is 
presented in [2].  To eliminate the 
distinguishability between edge weights, the 
k-anonymous weight privacy is defined as [4]: the 
edge (i j) is k-anonymous if and only if there 
exist at least k edges in (i) whose weights wi,tl , l 
= 1, ..., c, and c  k, satisfy || wi,j - wi,tl || ≦ , 
l=1,..., c.  Here,  is a predefined positive 
parameter to control the degree of privacy and (i) 
is the adjacent edge set in which all edges come 
from the i-th node. 
To preserve the shortest path privacy, we have 
introduced the k-anonymous path privacy concept 
that hiders adversary to infer the sensitive 
relationship between two entities (vertices) in a 
social network [9].  The basic idea is to hide the 
true sensitive information, e.g. the shortest path, 
by obfuscating it with at least k-1 other paths so 
that the true path will not be revealed.  Figure 1 
shows an undirected weighted graph with six 
vertices.  Assuming the relationship represented 
by the shortest path between vertices v1 and v6 is 
sensitive and expected to be hidden.  If the 
weight of edge e5,6 is modified to two, then the 
graph is anonymized with two shortest paths 
between vertices v1 and v6.  Therefore, given a 
graph G, a set of source and destination nodes H, 
and privacy level k, the objective of k-anonymous 
path privacy is to minimally modify the graph 
such that there exists k shortest paths between 
each given pair of nodes specified in H, without 
adding or deleting any vertices or edges.  The 
privacy level k is defined as the number of 
shortest paths between the specified source and 
destination vertices. 
For a given set of source and destination pair of 
vertices, certain edges in the shortest paths may 
overlap with each other.  Three categories of 
edges can be classified according to their 
involvement in the shortest paths to be preserved 
[5].  An edge ei,j is a non-visited (NV) edge if ei,j 
does not belong to any shortest path to be 
preserved.  An edge ei,j is an all-visited (AV) 
edge if all shortest paths pass through it.  An 
edge ei,j is a partially-visited (PV) edge if at least 
one shortest path passes through it but not all 
shortest paths.  For example, in Figure 1, the 
shortest path between v1 and v6 is p1,6 = {(v1, v5), 
(v5, v4), (v4, v6)} and the shortest path between v3 
and v6 is p3,6 = {(v3, v5), (v5, v4), (v4, v6)}.  It can 
be seen that edges e5,4 and e4,6 are all-visited edges, 
e1,5 and e3,5 are partially-visited edges, and other 
edges are non-visited edges.  It can be observed 
that modifying the weights of NV and AV edges 
will not change the characteristic of the shortest 
path but modifying the weights of AV edges will 
change the length of all shortest paths. 
v1
v2
v3 v5
v4
v6
3
1
10
8
6
4
7
1
3
 
Figure 1.  The Original Network 
In this work, we proposed an algorithm for 
k-anonymous path privacy problem by allowing 
modifying both NV edges and AV edges.  In 
addition, we propose a lemma to check the 
condition if a path can be modified to be equal to 
the shortest path or not. 
III. PROPOSED ALGORITHM 
For a set of source and destination vertices H on 
a graph G, a given privacy level k, the 
k-anonymous path privacy problem is to 
minimally modify the graph G such that there 
exists k shortest paths between each given pair of 
vertices specified in H, without adding or deleting 
any vertices or edges.  We propose a 
greedy-based approach and modify the edge 
weights of NV and AV edges in the top-k shortest 
paths so that they all possess the same path length.  
The proposed algorithm first finds the second 
shortest path and reduces proportionally the edge 
7 
 
 diffd
w
w
ww rs
ij
ij
ijji 

'
"
"
"" ,
 ; 
20.                           update the adjacency 
matrix; 
21.                        TSPL := TSPL + p’r,s ; //save 
the modified path 
22.                           }; // end of for each 
edge e’’i,j 
23.               }; //end of else, different length 
24.      }; // end of while (|TSPL|< k ) 
25.   SPL := SPL + TSPL; 
  }; // end of while (H  ) 
 
IV. NUMERICAL EXPERIMENT 
To evaluate the characteristics of the proposed 
algorithm, we run simulations on a synthetic data 
set.  The data set contains 65 nodes and 1,021 
edges.  The weights of the edges range from 1 to 
4.  All data are randomly generated. 
All experiments reported in this section were 
performed on an Intel Core 2 Duo P8700 CPU, 
2.53 GHz machine with 4 GB main memory, 
running Microsoft Windows 7 operating system.  
All the methods were implemented using Java 
programming language. 
Figure 2 shows the preliminary results of ratios 
of perturbed edges.  The ratio is the number of 
modified edges over the total number of edges on 
the k shortest paths.  It can be observed that the 
average percentage of perturbed edges for k >= 5 
is about 50%, which is greater than 40% reported 
in [9].  This is partly due to the previous work 
only considered modifying the NV edges, but in 
this work we consider modifying both NV and AV 
edges. Figure 3 shows the running times of 
anonymization of k shortest paths for different 
privacy level k and for multiple pairs of source 
and destination vertices.  It can be observed that 
anonymizing multiple pairs of source and 
destination vertices require relatively more 
running time when k increases to 10.  This is due 
to the fact that it takes longer time to search for 
extra paths to be anonymized.  Comparing to [9], 
the running times to modify both NV and AV are 
higher than modifying only NV edges.  However, 
the pattern remains similar for both cases. 
To evaluate the information loss between the 
two approaches (modifying only NV edges vs 
modifying both NV and AV edges), we adopt the 
Kullback and Leibler (KL) divergence for random 
variable of binary values.  Intuitively, the KL 
divergence measures the number of additional bits 
required when coding a random variable with a 
probability distribution f(x) while using an 
alternative probability distribution g(x).  It 
basically compares the entropy of two 
distributions over the same random variable. The 
KL divergence used in this work is given as 
follow: 
 
 
For each anonymized edge, let f(x) be the ratio 
of the edge weight over the total weight of all 
edges to be modified, before modification.  Let 
g(x) be the ratio of the edge weight over the total 
weight of all edges to be modified, after 
modification.  For anonymizing the vertex pairs 
H= {(v1, v6), (v2, v6)}, the K_L Divergence for 
modifying only the NV edges is as follow. 
 
 
The K_L Divergence for modifying both the NV 
and AV edges is as follow. 
 
 
Figures 4 and 5 shows the KL divergence for 
modifying only NV edges and modifying both NV 
and AV edges respectively.  It can be observed 
the information loss increases as k increases. This 
is due to more edges must be modified and is 
consistent with the patterns in Figures 2 and 3. 
 
r
s
s
r
s
sfgDivergenceKL log
1
1
log)1(),(_ 



0466.0
22
2
38
8
log
38
8
22
2
38
8
log
38
8
),(_ 







gfDivergenceKL
003.0
224
2
348
3
log
348
3
224
2
348
4
log
348
4
224
4
348
8
log
348
8
),(_ 











gfDivergenceKL
(1) 
 9 
 
2 
 
會議(一) The Second International Conference on Innovations in Bio-inspired Computing and 
Applications  (IBICA-2011) 
 
(一)參加會議經過 
 
2011年第 2屆仿生計算與應用國際研討會 (The Second International Conference on 
Innovations in Bio-inspired Computing and Applications) 是由哈爾濱工業大學所主辦之國際性學
術研討會。另協辦單位有IEEE Signal Processing Society (Tainan Section), IEEE Communications 
Society (Shenzhen Chapter), Kaohsiung University of Applied Sciences, Machine Intelligence 
Research Labs。其會議之宗旨是希望提供各國學者參與共同研討仿生、演化及智慧型計算與應用
相關之研究，並在中國及世界各地輪流舉辦研討會(第一屆於印度舉辦)。但因為會議屬於草創時
期，加上類似之生物計算與應用之研討會相當多，因此規模並不很大。 
2011年之會期是從12月16日至12月18日。2011年的研討會地點為中國深圳市之哈爾濱工業
大學深圳研究院。深圳市為提高當地高等教育水準，利用鄰近香港之地利，以及工業發展所帶
來之經濟效益，投入資金與土地，吸引了中國三個頂尖的高校北京大學、清華大學、及哈爾濱
工業大學到深圳市設立研究院。目前規模不大，但潛力十足，因師資大都為年輕之海歸派，其
發展指日可待。 
本次大會邀請安排了3個專題演講，分別來自歐洲、美國、及台灣，3個平行場次，近100
篇論文作口頭報告。論文來源涵蓋十多個國家地區。每篇論文報告時，皆有安排講評。筆者此
次發表之論文是國科會計畫之部分研究成果。本人除親自參加各個場次外，並主持大會專題演
講的一個場次，介紹主講人，同時亦主持一個技術場次。於會議期間並與各國學者交換意見與
心得，收穫甚多。同時因為與此次主辦單位熟悉，有共同合作經驗，成功爭取到2012年於高雄
大學之主辦權。 
 
 
(二)與會心得 
 
 本會議的議程安排非常簡單。因為限於三天的時間關係並，因此每天有3個場次同時進行，
以及走道間之幾個展示，另外只有一個開幕式，一個接待式，及一場晚宴。整個研討會未安排
任何旅遊或其他社交活動。 
 
與其他國際性學術研討會相比較，個人列舉三點看法: 
(1)   該研討會發表之論文範圍廣泛，參與人數紛雜，由於有很多中國學者參與，是與中國學者
交流之最佳場所。國內參與此次盛會之學者約十多位，藉此機會，相互觀摩，也增加了未
來合作之機會。 
4 
 
Anonymizing Multiple K-anonymous Shortest Paths For Social Graphs 
 
Shyue-Liang Wang, Zheng-Ze Tsai, Tzung-Pei 
Hong, I-Hsien Ting 
National University of Kaohsiung 
Kaohsiung, Taiwan 81148 
{slwang, tphong, iting}@nuk.edu.tw 
 
Yu-Chuan Tsai 
Department of Computer Science and Information 
Engineering 
National Cheng Kung University 
Tainan, Taiwan 70101 
p7894121@mail.ncku.edu.tw 
 
 
Abstract—To preserve privacy, k-anonymity on relational, 
set-valued, and graph data have been studied extensively in 
recent years.  Information on social networks can be modeled 
as un-weighted or weighted graph data for sharing and 
publishing.  We have previously proposed k-anonymous path 
privacy concept on weighted social graphs to preserve privacy 
of the shortest path [9].  A published social network graph 
with k-anonymous path privacy has at least k indistinguishable 
shortest paths between the source and destination vertices.  
However, previous work only considered modifying 
Never-Visited (NV) edges by other shortest paths.  In this 
work, we further extend the approach and propose a new 
technique that can modify both NV edges and All-Visited (AV) 
edges to achieve the k-anonymous path privacy.  Experimental 
results showing the characteristics of each technique are 
presented.  It clearly provides different options to achieve the 
same level of privacy under different requirements. 
Keywords- social networks, privacy preserving, edge weight, 
shortest path, k-anonymity 
 Introduction 
Social network applications, such as Facebook, MySpace, 
Linkin and other online communities, collaboration 
networks, telecommunication networks, have become 
extremely popular for sharing information in recent years.  
There are millions of registered users associated with others 
through friendships, hobbies, professional association, and 
so on.  These user information and relationship can be 
modeled as vertices, edges, and edge weights in complex 
graphs and are of significant importance for various 
application domains such as marketing, psychology, 
epidemiology and homeland security.  As a result, 
companies and institutions hosting the data are interested 
and expect to be beneficial in releasing portions of the 
graphs to communities.  However, these social network 
graphs may contain sensitive personal or institutional 
information.  In order to protect the privacy of users 
against different types of attacks, graphs should be 
anonymized before they are published. 
Current practices to protect user privacy from published 
data include removing all identifiable personal information 
such as names and social security numbers, limiting access, 
“fuzzing” the data, eliminating unnecessary groupings, 
augmenting with additional data, etc.  However, it is still 
easy for an attacker to identify the target by performing 
different structural and non-structural queries.   
There are basically three types of sensitive information that 
one may want to keep private and may be under attack in a 
social network environment: node information, link 
information and edge weight information [1, 4, 5].  The 
node information is the information attached to a vertex.  
For example, the emails sent by an individual, the personal 
information such as age, sex, zip code, and transaction data 
such as purchased items [3, 6-8].  The link information is 
about the relationships among the individuals which may be 
considered sensitive.  Links can be used to represent 
financial exchanges, friend relationships, conflict likelihood, 
sexual relations, and disease transmission [5].  Depending 
on the application, the edge weight information can 
semantically represent “degree of friendship”, 
“trustworthiness”, and “behavior” etc. If considering routing 
problem, (for information spread and marketing), edge 
weights may correspond to the cost of information 
propagation [2].  To protect edge weight privacy, 
perturbation-based approaches to preserve linear property, 
such as modifying all edge weights so that the shortest path 
remained to be the shortest path, have been proposed 
recently [2, 4, 5].  Previously, we have proposed a new 
concept of k-anonymous path privacy on weighted social 
graphs to preserve privacy of the shortest path [9].  A 
published social network graph with k-anonymous path 
privacy has at least k indistinguishable shortest paths 
between the source and destination vertices.  However, in 
that work, we only considered modifying Never-Visited (NV) 
edges by other shortest paths.  In this work, we further 
extend the approach and propose two new techniques that 
can modify All-Visited (AV) edges and Partially-Visited (PV) 
edges to achieve the k-anonymous path privacy respectively.   
Examples clearly illustrate the differences between the three 
techniques will be given.  Elaborated numerical 
experiments will be presented to demonstrate the 
characteristics of each strategy. 
The rest of the paper is organized as follows.  Section 2 
gives the problem description.  Section 3 describes the 
proposed algorithms.  Section 4 reports the numerical 
experiments.  Section 5 concludes the paper. 
6 
 
{(v1, v5), (v5, v6)}.  Both have path length, d1,6 = 6.  The 
AV edge for vertex pair (v1, v6) is e1,5 = (v1, v5).  The PV 
edges are e5,4 = (v5, v4), e5,6 = (v5, v6) and e4,1 = (v4, v1).  For 
the second pair of vertex pair (v2, v6), the shortest and 
second shortest paths are p2,6 = {(v2, v4), (v4, v6)} and p’2,6 = 
{(v2, v4), (v4, v5) , (v5, v6)}.  However, the second shortest 
path cannot be reduced to the same length as the shortest 
path; due to modifying will make the shortest paths of 
vertex pair (v1, v6) unequal.  Lemma one provides such a 
condition that under which a path cannot be modified to be 
equal to the shortest path.  The third shortest path for 
vertex pair (v2, v6) is p’2,6 = {(v2, v1), (v1, v5) , (v5, v6)}. If NV 
and AV edges are considered, then we can modify the length 
of e2,1 from 8 to 4, e1,5 from 4 to 2 and find two paths with 
same length: p2,6 = {(v2, v4), (v4, v6)} , d2,6 = 8, and p’2,6 = 
{(v2, v1), (v1, v5) , (v5, v6)} , d’2,6 = 8.  However, since AV 
edge is modified, the shortest paths for vertex pair (v2, v6) 
should be updated accordingly.   Therefore, p1,6 = {(v1, v5), 
(v5, v4), (v4, v6)}, d1,6 = 4, and p’1,6 = {(v1, v5), (v5, v6)}, d’1,6 
= 4. 
Lemma 1  Let p1,1 and p1,2 be anonymized shortest paths 
for vertex pair (v1s, v1d), and p2,1 and p2,2 be paths for vertex 
pair (v2s, v2d).  Assuming that a=(vi, vj) and b=(vi, vk) are 
edges in p1,1 and c=(vj, vk) is a non-overlapping edge in p1,2 
such that da + db = dc. If b is an edge of p2,1 and 
non-overlapping a, c are edges of p2,2, then p2,2 cannot be 
modified to be the shortest path for (v2s, v2d). 
The following algorithm heuristically modifies NV edges 
and AV edges based on greedy approach to achieve 
k-anonymous path privacy. 
 
K-Multiple Paths Anonymization Algorithm (KMPA)  
Input:  W, weighted adjacency matrix of a given graph G, 
 H, the set of source and destination vertices for 
which the shortest paths are to be anonymized, 
 K, number of shortest path between each pair of 
source and destination vertices, 
Output: anonymized weighted adjacency matrix W*, 
 
1. Initialize SPL = ; //shortest path list 
2. while (H  ) { 
3.    for (each pair of vertices (vi, vj) in H)  //find the 
shortest path for each vertex pair 
4.      find its shortest path pi,j and length di,j;  //end of 
for 
5.     jiHsr dd ,, min:  ; //minimum of all shortest 
paths 
6.     H := H – (vr, vs);  
7.     TSPL := {pr,s}; //save the shortest path for vertex 
pair (vr, vs) 
8.    while (|TSPL| < k )  
     {  //there are less than k paths for current vertex 
pair 
9.         find next shortest path p’r,s and its length d’r,s; 
10.    if (d’r,s = dr,s) { //same length 
11.         TSPL := TSPL + p’r,s ; // add to anonymized 
list 
12.         continue; } //to find next shortest path 
13.    else  { // different length 
14.                  If ( d’r,s and dr,s satisfy lemma one) 
then continue; // d’r,s cannot be anonymized  
15.             let diff := d’r,s - dr,s; //the weight to be 
reduced 
16.             p’’r,s := p’r,s – {edges in SPL and TSPL} +  
                {AV edges by previous vertex pairs 
that  
                 appear on p’r,s } ; //consider NV 
and AV edges 
17.             If (p’’r,s   and d’’r,s > diff) //enough edge 
weight to be modified 
18.                 for (each edge e’’i,j on the p’’r,s )  
                       {   //reduce 
proportionally 
19.                     
 diffd
w
w
ww rs
ij
ij
ijji 

'
"
"
"" ,
 ; 
20.                           update the adjacency 
matrix; 
21.                        TSPL := TSPL + p’r,s ; //save 
the modified path 
22.                           }; // end of for each 
edge e’’i,j 
23.               }; //end of else, different length 
24.      }; // end of while (|TSPL|< k ) 
25.   SPL := SPL + TSPL; 
  }; // end of while (H  ) 
 
Numerical experiment  
To evaluate the characteristics of the proposed algorithm, 
we run simulations on a synthetic data set.  The data set 
contains 65 nodes and 1,021 edges.  The weights of the 
edges range from 1 to 4.  All data are randomly generated. 
All experiments reported in this section were performed on 
an Intel Core 2 Duo P8700 CPU, 2.53 GHz machine with 4 
GB main memory, running Microsoft Windows 7 operating 
system.  All the methods were implemented using Java 
programming language. 
Figure 2 shows the preliminary results of ratios of perturbed 
edges.  The ratio is the number of modified edges over the 
total number of edges on the k shortest paths.  It can be 
observed that the average percentage of perturbed edges for 
k >= 5 is about 50%, which is greater than 40% reported in 
[9].  This is partly due to the previous work only 
considered modifying the NV edges, but in this work we 
consider modifying both NV and AV edges. Figure 3 shows 
the running times of anonymization of k shortest paths for 
different privacy level k and for multiple pairs of source and 
8 
 
 
Acknowledgment 
This work was supported in part by the National Science 
Council, Taiwan, under grant NSC-99-2221-E-390-033. 
 
References 
[1] J. Cheng, A. Fu, and J. Liu, K-isomorphism: privacy preserving 
network publication against structural attacks, In SIGMOD 
conference, pp. 459-470, 2010. 
[2] S. Das, O. Egecioglu, A.E. Abbadi, Anonymizing weighted social 
network graphs, In ICDE, pp. 904-907, 2010.. 
[3] Y. He and J.F. Naughton, Anonymization of set-valued data via 
top-down, local generalization, in VLDB 2009. 
[4] L. Liu, J. Liu, J. Zhang, Privacy preservation of affinities in social 
networks, In ICIS, 2010. 
[5] L. Liu, J. Wang, J. Liu, J. Zhang, Privacy preservation in social 
networks with sensitive edge weights, In SDM, pp. 954-965, 2009. 
[6] A. Meyerson and R. Williams. On the complexity of optimal 
k-anonymity. In Proc. of PODS, 2004. 
[7] R. Motwani and S.U. Nabar, Anonymizing unstructured data, arXiv: 
0810.5582v2, [cs.DB], 2008. 
[8] H. Park and K. Shim. Approximate algorithms for k-anonymity. In 
Proceedings of the 2007 ACM SIGMOD International Conference on 
Management of Data, pp. 67–78, 2007. 
[9] S.L. Wang, Z.Z. Tsai, T.P. Hong, and I.H. Ting.  Anonymizing 
shortest path on social network graphs. In Proc. of ACIIDS, 2011. 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/09/01
國科會補助計畫
計畫名稱: 隱私保護: 社群資料的路徑k-隱匿及植基於私人資訊擷取的空間資料私人查
詢之研究
計畫主持人: 王學亮
計畫編號: 100-2221-E-390-030- 學門領域: 資料庫系統及資料工程
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
於高雄大學主辦 International Conference on Information Management 並發
表論文。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
