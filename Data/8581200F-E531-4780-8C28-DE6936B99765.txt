 II
目錄 
 
研究計畫中英文摘要： ......................................................................................................... 1 
計畫中文摘要 ................................................................................................................. 1 
計畫英文摘要 ................................................................................................................. 2 
前言、研究目的..................................................................................................................... 3 
文獻探討 ................................................................................................................................ 4 
設備 ........................................................................................................................................ 6 
PC 主機........................................................................................................................... 6 
資料庫主機..................................................................................................................... 6 
數據手套(Data Glove) .................................................................................................... 7 
移動追蹤器(Motion Trackers)......................................................................................... 8 
研究方法 ................................................................................................................................ 9 
資料處理原則 ................................................................................................................. 9 
抽象化方法................................................................................................................... 10 
實驗 ...................................................................................................................................... 18 
結果與討論 .......................................................................................................................... 19 
計畫成果自評....................................................................................................................... 20 
參考文獻 .............................................................................................................................. 21 
 
 
 2 
計畫英文摘要 
In order to understand user behaviors and provide better services, the users in virtual 
environments are traced and monitored through various sensory devices. This data type is 
called immersidata as the data acquired from a user’s interactions with the digital 
environments. Immersidata can be considered as numerous continuous data streams, which 
are large in size requirements. Hence, to analyze, query, and mine immersidata is challenging 
and becomes essential for the digital environments. 
 
The objective of this proposal is to design and develop an immersidata management system. 
To facilitate collecting enough immersidata for the research at the beginning of the project, we 
choose “Digital Conducting” as our application domain. It’s an emerging application that 
allows people to interact with the multimedia data. There are three advantages of selecting 
this application: 1) the amount of immersidata collected in the application is huge, 2) it will 
employ various types of queries, and 3) it demands promptly reactions. Hence, the techniques 
developed for this application can also be applied in other applications. 
 
The research topics of this project consist of several related techniques regarding to the 
immersidata management. At this year, we studied some preliminary analysis techniques, 
including modeling, abstraction, storage research, and some simple query techniques.  
 
This project not only will develop an interactive conducting system, which will provide an 
alternative for leisure, but also help us to understand users’ behaviors or intentions. These 
analyzed results could further help to create a friendlier virtual environment. 
 
Keywords: immersidata, data streams, continuous queries 
 4 
文獻探討 
傳統資料庫的設計主要是針對有限資料作一次的查詢。然而，在現今許多的應用中（如：
網路的監測，經濟的分析…等），其資料是連續不斷的接收及儲存到資料庫中，並且對
資料串流作長時間、連續的查詢，與傳統資料庫事先做好儲存再進行查詢的架構相差甚
遠。目前， 有許多不同的研究團隊（ Babcock 2002, Abadi et al. 2003, STREAM 
2003,Chandrasekaran 2003, Shahabi 2003），針對串流資料提出新的資料庫系統架構。然
而，這些系統架構大多只是針對少數應用領域而設計，直至目前為止，還沒有任何研究
團隊開發出一個可以廣泛應用在大部分應用領域的架構。 
 
有鑒於結構性查詢語言 (SQL) 在傳統資料庫運用上的成功, 且為了使資料庫易於操
作、了解及運用，一些學者 (Arasu et al. 2003, Arasu and Widom 2004) 提出了運用在串
流資料庫上且基於現行 SQL 架構上的查詢語言。然而，由於資料串流的特性，其查詢
演算法會有別於現行傳統資料庫採用的演算法，一些研究學者（Hellerstein and Avnur 
2000, Babu et al. 2001,Motwani et al 2003）提出一些先導性的分析，其中點出許多相關的
查詢研究方向、問題，並首先提出連續性查詢（continuous queries）的觀念。 
 
查詢的最佳化（Query Optimization）與執行 (Query Processing)，不僅是設計連續性查詢
方法一大重點，也是現行資料庫仍再進行研究的方向，由於連續性查詢有許多不同的特
性，衍生出許多不同的考量。在查詢最佳化方面，一些學者（Babcock et al. 2003, Carney 
et al. 2003,Hammad et al. 2003）針對查詢所用的運算子（Operator）提出排程（Operator 
Scheduling）的方法；一些學者（Babcock et al. 2002b, Babcock et al. 2003b, Tatbul et al. 
2003, Das et al. 2003）提出不同的採樣（Sampling）、或是減少流量（Load Shedding）的
方法，用以減少運算時間；另一些學者（Chen et al. 2003, Viglas and Naughton 2002）則
提出查詢最佳化的一些整體設計。 
 
而在查詢執行方面，許多學者分別提出了適應性的查詢執行方式 (Madden et al. 2002, 
Avnur et al. 2000, Chandrasekaran, 2002 )，以滑動視窗 (sliding window)為基礎的查詢方
法 (Kang et al. 2003, Golab and Ozsu 2003)、降低記憶體使用的查詢法 (Arasu et al. 2002, 
Babu et al. 2002, Tucker et al. 2003 )、以及採用近似值來執行查詢的技術 (Gibbons and 
Tirthapura 2002, Gilbert et al. 2001, Dobra et al. 2002 ) 。 
 
然而截至目前為止，連續性查詢的研究仍在非常初期的階段，查詢種類非常簡單也非常
有限。其中最廣為討論的是分散式串流資料庫系統的查詢，分散式串流資料庫系統通常
為主從式的架構 (client-server architecture)，server 端負責儲存資料，而 client 端則負責
監控資料串流，並將更新過的資料回傳到 server 端。然而，由於資料是連續不斷更新的，
對於網路的通訊傳送以及資料在 server 端的處理與儲存，可能會造成很大的問題，甚至
不可行。因此，如何降低通訊成本(communication cost)，便成為一個很重要的考量。 
 
 6 
設備 
 本計畫「互動式指揮系統」從資料串流的角度切入著手，為要達到我們計畫的目的，
因此我們在本年度採買了具備感應裝置(Sensors)的機器，以便能給予需要的感應資料串
留(Sensor Data Streams)。此計畫國科會實際上只有贊助共 10 萬元，但是為了達成計畫
而應採買的經費卻高達 90 萬以上，因此計畫的實作上，受到經費的極度短缺而延遲很
多，後來計畫主持人藉著其他的非國科會計畫設備費用，以及一些廠商贊助，才有辦法
如期在計畫內完成所有設備採購。因此在報告之初，計畫主持人必須要對國科會如此核
發計畫、卻不給足夠經費、又要求計畫如期達成的策略提出嚴正關切，期望未來不會有
同樣的受害者。因應此計畫所採買的機器如下： 
PC 主機 
 由於計畫預定交付軟體需要在微軟的 XP 作業系統上執行，因此整個計畫的實驗平
台放在 Windows XP 上。主機規格為： 
 
PC 主機規格 
中央處理
器 
AMD Athlon™ 64 Processor 
2800+ 
記憶體 1GB 
作業系統 Windows XP professional 
Service Pack 2 
 
表格 1 PC 主機規格 
資料庫主機 
 計畫的互動式資料串流將會儲存資料庫主機上，由於考慮到穩定性所以資料庫軟體
是架在 Linux x86-64 的平台，以下為資料庫主機的規格： 
 
中央處理器 Intel Xeon 5100 (64-bit) 
記憶體 3GB 
作業系統 Ubuntu6.06 LTS 
資料庫 Oracle Database 10g Release 2 (10.2.0.1.0) 
硬碟容量 260GB 
表格 2 資料庫主機規格 
 8 
移動追蹤器(Motion Trackers) 
就穩定度、解析度、以及量測半徑的考慮下，這個計畫如果能用 Ascension 的定位
追蹤器，會有較好的表現，但是同樣由於經費限制，因此我們改採買 Polhemus 公司製
造的六自由度的移動追蹤器(6 DOF Patriot Tracker Sensor)，其原理是由電生磁讓磁場發
射器產生有效半徑約一公尺的磁場，在此範圍之內感應出感測器所在的位置。此設備為
該公司此產品系列中較為簡單陽春的機種，和 Ascension 的產品比較下來可以便宜三四
倍，雖說如此，也需要約 13 萬的經費。 
 
 
圖表 2   6 DOF Patriot Tracker Sensor 
此裝置同時間最多可以接八組追蹤頭來產生八組數據資料，不過因為本計畫只採買
兩組追蹤頭來追蹤受測者的雙手，因此目前只能擷取左右手各一組資料，每組資料又分
為兩種形式，一種為空間座標，另外一種則是尤拉角。此裝置產生的資料數據格式如下： 
 
 
空間座標 (英吋) 尤拉角 (度) 
感測器編號 X 座標 Y 座標 Z 座標 方位角 水平角 自選角 
1 0.389 34.235 -1.201 -1.000 0.000 88.000 
2 1.323 5.712 3.033 5.361 -2.128 40.125 
表格 4 感應器資料數據格式 
 10 
抽象化方法 
在互動式指揮系統中，指揮動作是直接傳達指揮的想法給演奏者的媒介，其中包含
節奏(Tempo)，音量…等等。透過實驗機器所得到的龐大資料中，如何有效的找出決定
性而有影響力的數據，是抽象化的一個重要任務。在此我們著重於指揮動作的分析與取
樣。 
節奏的傳統指揮動作是根據拍號(Time signature)來區分，常見的有二拍，三拍，四
拍，如下：  
 
 
 
 
二拍 三拍 四拍 
圖表 3 傳統的指揮動作 
 
在各式的指揮動作裡，其指揮的軌跡可視為一組曲線(Curve)的組合，同時各曲線保
持連續，曲線數等同於一個小節中的拍子數。以四拍為例，指揮一個完整的小節的軌跡
必須包含四段曲線。除了曲線數外，我們可以利用曲線的性質來區分各種節奏的指揮動
作，幫助我們辨識各種不同拍子數的指揮動作。由於二拍的指揮動作仍有許多不同的版
本，不似三四拍較為固定，現階段我們已完成三拍以及四拍的辨別，其方法如下： 
 
1. 曲線的辨識  
在一個小節中，每辨識到一段完整的曲線，即可表達已完成一拍。為了快速辨識曲
線，我們在整段資料串流中，參考每個點的(x，y)座標，對特定位置的點作出標示點，
其中包括下點(Down point)，上點(Up point)，左點(Left point)，右點(Right 
point) ，如以下圖示： 
   
圖表 4 曲線辨識圖示 
 
 
假設整個軌跡所記錄點的座標集為 P, 其中 Pi ∈ P, Pi = (Xi,Yi),  ∀i ∈ N, 
 12 
AbstractDataAlgorithm () 
{ 
        int i = 1; 
        int curve_start = 1; 
        int curve_bottom = 0; 
        int curve_end = 0; 
        float P[][2];   
        Boolean choice = false; 
 
        Tracker Initialization Part 
 
        while(choice!= CHOICE_QUIT) 
{ 
Choice = read input from keyboard; 
        record current coordinate(Cur_X, Cur_Y) into P[]             
        P[i][1] = Cur_X; 
        P[i][2] = Cur_Y; 
        recognize the curve 
        Curve(P[],i); 
        i++; 
        } 
} 
 
Curve(P[],i) 
{ 
        mark left, right, down, and up points 
if(P[i-1][1]<P[i][1]) 
          { 
           if(i>2 and P[i-1][1]<P[i-2][1]) 
            { 
             P[i-1] is left point  
            } 
          }  
         else if(P[i-1][1]>P[i][1]) 
          { 
           if(i>2 and P[i-1][1]>P[i-2][1]) 
            { 
             P[i-1] is right point 
            } 
 14 
 
<圖 06> 
軌跡的順序為 D1->U1->D2->U2->D3->U3->D4->U4, 可依序辨識四段曲線  
 
2. 拍數的判斷 
在每個小節中，為辨別三拍或四拍，只是辨識出曲線是不夠的, 因此需要曲線以外的
資訊作為判斷標準, 可能的話, 計算和處理的時間能夠越短越好, 以符合即時性的
要求為最佳. 實際觀察指揮動作時, 我們注意到不同的拍號, 每拍依序向左或向右
有不同的規律. 以四拍來說, 其規律是”右左右左”, 在三拍的規律卻是”右左右”, 以
此特性, 我們利用了曲線標示點, 找出每個拍子是往左還是往右. 憑藉著這個概
念，我們開發出來的抽樣演算法如下： 
 
AbstractBeatAlgorithm() 
{ 
        int i = 1; 
        int curve_start = 1; 
        int curve_bottom = 0; 
        int curve_end = 0; 
        int beat = 0; 
        float P[][2]; 
        float R[];   
        Boolean choice = false; 
 
        Tracker Initialization Part 
 
        while(choice!= CHOICE_QUIT) 
{ 
 16 
           if(i>2 and P[i-1][1]>P[i-2][1]) 
            { 
             P[i-1] is up point 
             if(curve_bottom != 0) 
             { 
             record the end point of the record 
             curve_end = i-1; 
             determine the number of beats 
             Tempo(P[],i); 
             P[curve_start] to P[curve_end] will be a curve 
Return(curve_start,curve_end); 
             } 
             record the start point of next curve 
             curve_start = i-1; 
             clear the bottom point of next curve 
             curve_bottom =0;  
            } 
          } 
} 
 
Tempo(P[],i) 
{ 
R[beat] = (P[curve_end][2]-P[curve_down][2])/(P[curve_end][1]-P[curve_down][1]); 
             if(beat == 4) 
             { 
               if(R[beat]>0) 
                { 
                 it's 3 beat gesture, current beat is beat one 
                 beat = 1; 
                } 
               else if(R[beat]<0) 
                { 
                 it's 4 beat gesture, next beat is beat one 
                 beat = 0; 
                } 
             } 
beat++;    
              
} 
 18 
實驗 
在我們的實驗裡，我們將移動追蹤器的感應器，裝置在指揮受測者的右手手背上，
盡量不影響受測者的指揮動作，反覆數次，來驗證我們方法的可靠度。 
 
為了先驗證辨識小節與拍子的方法是否正確，我們先將所有取樣的空間座標，計算
出在三個維度的速度，以及標示點(下點，上點，左點，右點)記錄在一份檔案上，同時
在判斷出一個拍子時，也在該點上記錄訊息(Beat One，Two，Three or Four)。最後從該
檔案中取出指揮動作在空間上的軌跡，並使用 Matlab 印出軌跡，並與檔案中的辨識出
的曲線和拍子作比較。 
 
(1) 三拍的實驗結果 
 三拍的實驗結果(儲存的座標，標示點) 
 一個小節共有 71 個點，其中 19 為第一個拍點，50 為第二個拍點，71 為第三個拍
點，三個拍點輸入 Matlab 執行可得上圖所顯示的紅點。 
 
四拍的實驗結果(儲存的座標，標示點) 
 一個小節共有 91 個點，其中 19 是第一個拍點，50 是第二個拍點，70 是第三個拍
點，91 是第四個拍點，四個拍點輸入 Matlab 之後可得。 
 
 
(2) 簡略化指揮手勢實驗結果 
 
簡略化指揮手勢(四拍)的實驗結果(儲存的座標，標示點) 
 一個小節共有 70 個點，其中 22 是第一個拍點，38 是第二個拍點，54 是第三個拍
點，70 是第四個拍點，四個拍點輸入 Matlab 之後可得。 
  
(3) 實驗後記 
由於此次實驗能找到的專業指揮家並不多，所以只能請業餘人士來協助，這部分可
能要在來年的實驗中加強！ 
 
 20 
計畫成果自評 
本計畫在提案的時候為三年期的多年計畫，這個計畫在於在三年期間建立一個互動式資
料管理系統，這個系統主要包含幾個模組：資料取得（Acquisition Module）、儲存（Storage 
Module）、連續性查詢（Continuous Query Module）、非及時查詢（Off-line 
Query/DataMining Module），而在第一年我們將完成設備採買研究串留資料的先期分析
技術，其中包括模式化、抽象化、以及儲存等研究，這些研究將會著重在資料取得模組
與儲存模組上。 
 
由於國科會後來只有通過第一年的計畫，而且設費經費只給了 1/4 不到，所以要完整的
執行當初的計畫其實很艱難，特別是這個計畫和其他傳統資工的計畫不同，要先有設
備，拿到相關資料才有辦法設計對應的演算法，在報告當中，我們有詳實記載如何克服
這些不便，再者由於光靠資料取得模組與儲存模組並沒有辦法分析方法的好壞，因此在
這一年的計畫中，我們還趕進度的設計連續性查詢的初步方法，以及跑了初步的實驗。 
 
透過這一年的計畫分析，連續性查詢中的時間查詢、空間查詢已經有了一些初步的構
想，預計會在下一年做完完整的實驗，然後發表在國際期刊上，因此本計畫的進度已經
遠超於當年的計畫提案。 
 22 
 (Babu et al. 2002) S. Babu, U. Srivastava, and J. Widom. Exploiting k-Constraints to 
Reduce Memory Overhead in Continuous Queries over Data Streams. Technical report, 
November 2002. 
 (Babu and Widom 2001) S. Babu and J. Widom. Continuous Queries over Data Streams, 
In SIGMOD Record, September 2001  
 (Borchers et al. 2004) Jan Borchers, Eric Lee, Wolfgang Samminger, and Max 
Muhlhauser. Personal Orchestra: A real-time audio/video system for interactive 
conducting. ACM Multimedia Systems Journal Special Issue on Multimedia Software 
Engineering, 9(5):458-465, March 2004. 
 (Bruno et al. 2002) N. Bruno, L. Gravano, and A. Marian. Evaluating top-k queries over 
web-accessible databases. In Proceedings of the Eighteenth International Conference on 
Data Engineering, San Jose, California, February 2002. 
 (Carney et al. 2003) Carney et al. Operator Scheduling in a Data Stream Manager. VLDB 
2003. 
 (Chandrasekaran 2003) S. Chandrasekaran, O. Cooper, A. Deshpande, M. Franklin, J. 
Hellerstein, W. Hong, S. Krishnamurthy, S. Madden, V. Raman, F. Reiss, and M. Shah. 
TelegraphCQ: Continuous Dataflow Processing for an Uncertain World. In CIDR 2003 
 (Chandrasekaran and Franklin 2002) S. Chandrasekaran M. J. Franklin. Streaming 
Queries over Streaming Data. VLDB 2002 
 (Chang and Wang 2004) Jain, E. Chang, and Y. Wang. Adaptive Stream Resource 
Management Using Kalman Filters. In Proceedings of the ACM SIGMOD International 
Conference on Management of Data, 2004. 
 (Chen et al. 2002) Chen, DeWitt and Naughton. Design and Evaluation of Alternative 
Selection Placement Strategies in Optimizing Continuous Queries. ICDE 2002. 
 (Cormode and Muthukrishnan 2003) G. Cormode, S. Muthukrishnan What's hot and 
what's not: tracking most frequent items dynamically. PODS 2003: 296-306 
 (Das et al. 2003) Das, Gehrke & Riedewald. Approximate Join Processing Over Data 
Streams. SIGMOD 2003. 
 (Das et al. 2004) Das, S. Ganguly, M. Garofalakis, and R. Rastogi. Distributed 
Set-Expression Cardinality Estimation. In Proceedings of the 30th VLDB Conference, 
Toronto, Canada, 2004 
 (Faloutsos 1994) C. Faloutsos, R. Barber, M. Flickner, J. Hafner, W. Niblack, D. Petkovic, 
and W. Equitz, Efficient and Effective Querying by Image Content, J. of Intelligent 
Information Systems 3 (1994), pp.231-262. 
 (Gaber 2005) Gaber, M, M., Krishnaswamy, S., and Zaslavsky, A., On-board Mining of 
Data Streams in Sensor Networks, Accepted as a chapter in the forthcoming book 
Advanced Methods of Knowledge Discovery from Complex Data, (Eds.) Sanghamitra 
Badhyopadhyay, Ujjwal Maulik, Lawrence Holder and Diane Cook, Springer Verlag, to 
appear 
 (Gaber et al. 2005) Mohamed Medhat Gaber, Arkady B. Zaslavsky, Shonali 
Krishnaswamy: Mining data streams: a review. SIGMOD Record 34(2): 18-26 (2005) 
 (Gibbons and Tirthapura 2002) P. B. Gibbons and S. Tirthapura. Distributed Streams 
