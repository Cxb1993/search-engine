行政院國家科學委員會專題研究計畫成果報告 
 
操作容積之即時觸覺及顯像反應的骨磨手術模擬 
及其在醫學上的應用 
 
 
Volume manipulations for real-time haptic and visual interac-
tion of burring surgical simulation with medical applications 
 
 
計畫編號：NSC 96-2221-E-033-067 
 
執行期限：96 年 8 月 1 日至 97 年 7 月 31 日 
 
主持人：蔡明達   中原大學資訊工程學系  tsai@ ice.cycu.edu.tw 
共同主持人：謝銘勳 台北醫學大學附設醫院  shiemin@tmu.edu.tw 
協同研究人員：李飛鵬 台北醫學大學附設醫院  
協同研究人員：蔡豐州 台北醫學大學附設醫院   
 
 
一、中文摘要 
 
計算機圖學的一個主要醫學應用為提供手
術模擬。近年來觸感也被要求以提高訓練
及練習的效果。骨磨手術用於鑽洞，切出
形狀，及磨亮骨頭表面等，廣用於頭骨，
脊椎，牙齒，耳骨，關節，髗顏面骨等需
精細切削處。用容積資料執行骨磨手術模
擬時，因容積素代表了實體內部，因此可
不用花費龐大計算時間去執行碰撞(切削)
測試(面與面的相交計算)及深度計算，而
可由刀具所在的容積素決定是否骨磨有碰
撞骨頭。但若以容積素單位來描述骨頭的
去除將過於粗糙而不準確，用於顯像及切
削力計算也會使品質不良。因此本計劃發
展次容積素精度的容積操作手法使能即時
且準確模擬骨磨切削的容積資料的變化，
包括視覺同質面重建及顯像(約需1/20秒更
新)和觸感反應(約需1/1000秒計算)。不同
於之前的只處理切削(包括切削或磨)骨頭
的研究，本研究也提出可同時重建多種組
織同質面的資料結構與演算法以探討同時
切削多種組織的情況，使本研究的骨磨手
術模擬能應用到需處理多種組織的應用
上。 
 
關鍵詞：容積模型術、手術模擬、觸感互
動、骨磨手術 
 
Abstract 
 
Surgical simulation, a main medical applica-
tion of computer graphics, has been required 
to be attached haptic functions for improving 
training and rehearsing effectives. Burring 
surgery that is used for hole-drilling, 
shape-carving and polishing is widely ap-
plied to the spine, joints, ear and maxillofa-
cial surgery. These anatomic structures re-
quire burring surgery to implement fine cut-
 3
將同質面記錄於容積素內，使容積素值因
骨頭的去除而變化時，也可操作同質面改
變，以得較高的視覺精度。另外 bur 切削
力的計算方面則由 bur 刀具所覆蓋的骨頭
容積素來推測計算力的大小及方向。這已
經比[Agus04]進步，因可由骨頭的形狀而不
僅是侵入深度來推測力的大小及方向。 
但上述方法所得到的視覺及觸覺反應
皆不夠精細。其理由為：1. 一個容積素值
的變化，會連動其與所有相鄰容積素的同
質面頂點，但反之則不然，因為一個觸覺
間距的移動僅約為 1/100mm(亦即約 1/100 
voxel 等級)，所以一個同質面頂點因切削
的變動實質上不必定連動相鄰的其他頂
點。而容積素值變化則連動容積素內所有
頂點。2. 正確的切削模擬應該計算刀具的
掃開體積(swept volume)切削覆蓋掉的組
織，而並不只是刀具位置所切削掉的組織
而已，目前的作法都只用減少容積素值表
現刀具所在位置的切削。而免掉了掃開體
積的計算，將導致切削模擬的不正確。3. 由
於 bur 刀具不大，每一觸覺間距所覆蓋的
骨頭容積素也不多，所以利用來計算力量
不易準確，應使用一般計算切削力方式，
以刀具為主體，利用刀具上的樣點(數目可
設定達可準確計算切削力)是否接觸切削
到組織來計算切削力如此才可以確保準確
度([Langella 05])。4.資料結構與演算法要
有同時切削多種組織的可能，才能使手術
模擬應用到所有使用 bur 的醫學應用上。 
為改進上述缺點及提高手術模擬視覺
及觸覺精度。因此本計劃開發新的容積資
料結構操作手法，期使能即時(real-time)模
擬 bur 切削的容積資料的變化，所謂即時，
包括即時多種同質面(代表多重組織)重建
及顯像 (isosurface reconstruction and ren-
dering in 20HZ)和觸感反應(haptic feedback 
in 1000HZ)。另外我們第二年也考慮 bur 手
術模擬的各項醫學應用，開發其所需的演
算法。但我們的計畫只被核凖第一年: “操
作容積的即時觸覺及顯像反應的骨磨手術
模擬方法之研究＂提出骨磨手術模擬操作
手法的開發，簡單於包括即時同質面重建
及顯像和觸感(切削力)反應計算等。 
  
三、研究方法 
為達精細骨磨手術模擬視覺及觸覺反
應目的，本研究須發展下列方法： 
1. 發展動態重建同質面的資料結構，及局
部同質面重建演算法 
由於同質面頂點的變動必需能獨立變動
而不連動其他頂點，一個容積素不能只
有一個值，所以容積素描述的物體邊界
有變化時，無法正確對應。容積素內次
容積素精度(sub voxel)操作方法最近常
用距離階值(distance-level)方法，而不用
原始的灰階值(gray-level)或 CT num-
ber。因為使用這些值，而每一距離階值
紀錄每一主軸的實體表面樣點，距離階
值用來表現離邊界的距離，可精確計算
容積素內同質面的變化([Sealy 99])。而
藉六個距離階值(一個容積素有三主軸
平行因此可有六個)可重建各項操作後
的正確同質面([Tsai 05])，以得視覺上
位相操作準確的立體影像。因此本計劃
用這些距離階值的操作將 bur 去除組織
做正確的描述。而距離階值有所改變的
容積素，我們也改變其同質面。跟傳統
同質面重建方法不同，此法只建構改變
的容積素的相關同質面，因此可說是局
部同質面的重建法。因此建構同質面的
Marching Cube(MC)方法我們也要加以
改變，使其能一､動態紀錄每一 cube 以
(8 個 voxel 為頂點)所記錄的三角形，以
便能局部(cube)為單位的重建同質面，
二､追蹤 bur 所經過的 voxels，改變距
離階值以正確計算被切削的表面。亦即
我們修改MC方法使一個 cube可動態最
高記錄四個 triangles(原始 MC 方法中一
個 cube 最大可能三角形數)( [Lorensen 
 5
 
四、結果與討論 
我們完成了上述的各項方法，達成了
以下目的。1.發展了動態重建多種同質面的
資料結構，及局部同質面重建演算法。2. 可
以即時計算刀具掃開體積的包絡面與容積
軸平行線的交點以模擬多種組織的切削。
3. 可以即時計算切削力，並以實際臨床例
測試了資料結構及各項演算法。以上 1 項
成果已出版於會議論文[Tsai 07a]及期刊
([Lee 08], 附件一)及申請本國專利。2, 3 項
成果已出版於會議論文[Tsai 08]及已投稿
期刊 (審稿中) 及申請本國和美國專利。 
 
五、參考文獻 
 
[Agus 03] Agus, M., Giachetti, A., Gobbetti, 
E., Zanetti G. and Zorcolo, A., 2003, 
“Adaptive techniques for real-time haptic 
and visual simulation of one dissection”, 
IEEE Virtual Reality, pp. 102-109.  
[Agus 04] Agus, M., Brelstaff, G.J., Giachetti, 
A., Gobbetti, E., Zanetti G. and Zorcolo, 
A., 2004, “Physics-based burr haptic si-
mulation: tuning and evaluation”, IEEE 
CS press Proc. Haptic Interfaces for Vir-
tual Environment and Teleoperator Sys-
tems, pp. 128-135.  
[Basdogan 07] Basdogan, C., Sedef, M., 
Harders, M. and Wesarg S., 2007, “Si-
mulators for Training in Minimally Inva-
sive Surgery”, IEEE Computer Graphics 
and Applications, Vol. 27, No. 2, 
pp.54-66.  
[Chen 06] Chen, P. and Barner K.E. and 
Steiner, K.V., 2006, “A Displacement 
Driven Real-Time Deformable Model for 
Haptic Surgery Simulation”, IEEE CS 
press Proc. Haptic Interfaces for Virtual 
Environment and Teleoperator Systems, 
pp. 499-505.  
[Choi 03] Choi, K.S., Sun H. and Hen, P. 
A.,2003, “Interactive deformation of soft 
tissues with haptic feedback for medical 
learning” , IEEE Transactions on Infor-
mation Technology in Biomedicine, vol. 7, 
pp. 358-363.  
[Hunter 95] Hunter, I.W., Jones, L.A., Sagar, 
M.A., Lafontaine, S.R. and Hunter, P.J., 
1995, “Ophthalmic Microsurgical Robot 
and Associated Virtual Environment”, 
Computers in Biology and Medicine, 
Vol.25, No.2, pp.173-182.  
 [Frank 01] Frank, A.O., Twombly, I.A., 
Barth, T.J. and Smith, J.D., 2001, “Finite 
element methods for real-time haptic 
feedback of soft-tissue models in virtual 
reality simulators”, IEEE Virtual Reality, 
pp. 257 –263.  
 [Frick 01] Frick, T.B. etc., 
2001,”Resistance forces acting on suture 
needles”, Journal of Biomechanics, Vol. 
34 (2001) pp.1335–1340.  
 [Gibson 99] Gibson, S., 1999, “Using 
Linked Volumes to Model Object Colli-
sion, Deformation, Cutting, Carving, and 
Joining”, IEEE Transactions on Visuali-
zation and Computer Graphics, Vol. 5, 
No. 4, pp.333-348.  
 [Hsieh 02] Hsieh, M.S., Tasi, M.D. and 
Chang, W. C., 2002, “Virtual Reality 
Simulator for Osteotomy and Fusion 
Involving the Musculoskeletal System”, 
Comuterized Medical Imaging and 
Graphics, Vol.26, No.2, pp.91-101.  
[Hsieh 06] Hsieh, M.S., Tasi, M.D., and Yeh, 
YD, 2006, An Amputation Simulator 
with Bone Sawing Haptic Interaction, 
Biomedical Engineering Applications 
Basis and Communications, Vol.18. No.5, 
pp.229-236 
[Langella 05] Langella A., Nele, L. and Maio, 
A., 2005, “A torque and thrust prediction 
model for drilling of composite materi-
als”, Composites: Part A 36 83-93. 
[Lee 08] Lee, J.F., Hsieh, M.S., Kuo, C.W., 
Tasi, M.D., and Ma, M., 2008, Real-time 
Three-Dimensional Reconstruction for 
Volume Based Surgery Simulations, 
Biomedical Engineering Applications 
Basis and Communications, Vol.20. No.4, 
pp.205-218 
 [Lorensen 87] Lorensen, W.E. and Cline, 
H.E., 1987, “Marching Cubes: A High 
Resolution 3D Surface Construction Al-
gorithm”, ACM SIGGraph Computer 
Graphics, Vol.21, No.4, pp.163-169.  
可供推廣之研發成果資料表(一) 
申請專利中   (中華民國)                                     日期：97年4月10日 
國科會補助計畫 
計畫名稱：操作容積之即時觸覺及顯像反應的骨磨手術模擬及其在
醫學上的應用 
計畫主持人：蔡明達         
計畫編號：NSC 96-2213-E-033-067 學門領域：計算機圖學 
技術/創作名稱 容積三維影像重建之方法及系統   
發明人/創作人 蔡明達  謝銘勳 
中文：一種容積三維影像即時重建之方法及系統，該容積係由複數
立方體單元組成，各立方體單元具有八個容積素，該方法包括下述
步驟:(a)建立各立方體單元之資料結構，每一資料結構具有至少一
由該等容積素內插之三角片資料及三角片之編排號碼;(b)接收一
對於該容積部位表示刪除或配置之操作指令;及(c)依據該操作指
令刪除或配置該容積部位對應之三角片，但不變動其他立方體單元
之資料結構內容。藉由系統已預先建立各立方體單元之資料結構，
因此容積在動態操作時只需要少量運算及能產生即時的視覺回饋。
技術說明 英文： This is a three-dimensional reconstruction method to provide real-time visual responses for volume (constituted by tomographic 
slices) based surgery simulations. The proposed system uses dynamical 
data structures to record tissue triangles obtained from 3D 
reconstruction computation. Each tissue triangle in the structures can 
be modified or every structure can be deleted or allocated 
independently. Moreover, triangle reconstruction is optimized by only 
deleting or adding vertices from manipulated voxels that are classified 
as erosion (in which the voxels are changed from tissue to null) or 
generation (the voxels are changed from null to tissue). Therefore, by 
manipulating these structures, 3D reconstruction can be locally 
implemented for only manipulated voxels to achieve the highest 
efficiency without reconstructing tissue surfaces in the whole volume 
as general methods do.  
可利用之產業 
及 
可開發之產品 
醫學影像處理， 手術模擬工具 
技術特點 即時三維模型重建 
推廣及運用的價值 
可結合於三維手術模擬系統，達到即時顯像目的 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位
研發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   附件  一 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
August 6, 2008 12:9 00079
206 J.-F. Lee et al.
(in 15–30Hz) is requested to demonstrate these changes
for comfortable human and machine interactions.11–14
Rendering isosurfaces (representing surfaces for a spe-
ciﬁc value or threshold of all the voxels in a volume)
reconstructed from a volume is the main fashion to
visualize anatomic structures in the volume. The MC
(marching cubes) algorithm is the most frequently used
reconstruction method that processes every eight neigh-
boring voxels as a cube and then assigns a set of
triangles depending on if each voxel of the eight cube
voxels is overthreshold (as illustrated in Fig. 1).15–18 An
overthreshold voxel is actually inside a tissue and thus
is called a tissue voxel herein. Conversely, an under-
threshold voxel is called a null.
Even under PC platforms, the MC algorithm only
takes seconds of time to reconstruct hundred thousands
of triangles that are reconstructed to about 20 tomo-
graphic slices. Because the current PC platforms can
achieve rendering about 10 millions of triangles per sec-
ond, a clinician can observe these isosurfaces from any
perspective in real-time visual feedback for a general
(A)
(B)
(C)
(D)
Fig. 1 Marching cube classiﬁcations: The MC algorithm gives
a tissue-surface vertex between a tissue voxel with a null voxel;
therefore tissue triangle generations are actually 256 cases corre-
sponding to if either of 8 voxels in a cube is tissue or not. The
256 cases are classiﬁed into 14 classiﬁcations.15 The classiﬁcation
of no triangles in a cube is not demonstrated. (A) Classiﬁcation
of the cube with one tissue or null voxel. (B) Classiﬁcations of
the cube with two tissue or null voxels (C) Classiﬁcations of the
cube with three tissue or null voxels. (D) Classiﬁcations of the
cube with four tissue or null voxels.
medical volume (under 100 slices). However, because
from which cube a triangle is reconstructed is not
recorded, any change of a cube voxel brings the recon-
struction of the whole volume under current MC meth-
ods. Therefore, real-time visual feedback is impossible
based on MC methods because (even local) changes
in a volume are usually involved during surgery sim-
ulations. Therefore, a 3D reconstruction method that
calculates only the tissue surface triangles in the manip-
ulated cubes to achieve the real-time response purpose
is required.
This study proposes a data structure and a set of
algorithms to record and access every tissue surface
vertex and then every triangle. The triangles in each
cube can thus be reconstructed independently. This
cube structure can be allocated or released during the
volume manipulations by surgery simulations if the
cube changes from an interior to a boundary or from
a boundary to an interior. Therefore, the memory for
the cube structures can correspond to the area of the
tissue surface to be under control. This study further-
more develops algorithms to calculate vertex reposi-
tion, or triangle deletion or addition corresponding to
the value or type changes of manipulated voxels in a
cube without calculating other vertices or triangle of
the non-manipulated voxels in the cube to optimize the
3D reconstruction eﬃciency. Three examples of vari-
ous cases of local modiﬁcations during surgery simula-
tions demonstrate the eﬀectiveness of the proposed data
structure and algorithms in improving the eﬃciency of
the 3D reconstruction from medical volumes.
SUBJECT AND METHODS
Cube Structure
A cube structure includes an index number, four trian-
gles, and a list number as illustrated in Fig. 2. The index
number (a byte or 8 bits) is used to indicate whether
each of the eight cube voxels is a tissue voxel and thus
is also used to classify the cube (Fig. 1). At most four
triangles in a cube can be generated because the origi-
nal MC algorithm is adopted.15 Moreover, the triangle
number and stored order in a cube structure correspond
to the classiﬁcation and the signiﬁcant order of the bits
indicating the tissue voxels. Because triangles in a cube
structure are stored one by one and even that the edge-
sharing triangles (the edge-shared vertices are stored
twice as separate triangles) and the triangles have been
ordered, a triangle can be deleted from or added into
the cube structure without changing other unchanged
triangles. However, during the cube manipulation, the
August 6, 2008 12:9 00079
208 J.-F. Lee et al.
or the triangle vertices changed by the manipulated
cube voxels to minimize the 3D reconstruction com-
putation is still required. This also means, the highest
eﬃciency can be achieved by only changing the triangles
or vertices determined by the manipulated voxels and
not changing the other triangles or vertices determined
from the non-manipulated voxels. The higher ratio of
unchanged vertices to the total vertices including the
changed and unchanged vertices indicates the higher
time saved by the cube manipulation.
Therefore, for every cube including one or more
manipulated voxels in the local subvolume, we compare
the index number in the cube structure with the tissue
types of the eight cube voxels after a volume manipula-
tion to detect if the topology of any manipulated voxel
changes (from tissue to null, or from null to tissue).
If the tissue types of all cube voxels are not changed,
the vertices and the associated surface normals deter-
mined from the manipulated voxels are recalculated. If
the topology is changed, the index number is changed
to indicate the types of the eight cube voxels after the
volume manipulation. However, if a cube includes 1–7
tissue voxels after the manipulation but included no
cube structure before the manipulation, then this cube
included eight tissue voxels. Then, a cube structure is
allocated to be pointed by the cube pointer, and the
triangles are generated according to the changed index
number into the structure. On the other hand, if a cube
includes no tissue voxels but included a cube structure,
this cube structure is then released.
If a cube includes 1–7 tissue voxels, both after and
before the manipulation, some triangles may be deleted
and some triangles may be added into the structure cor-
responding to the index number before and after the
change. Three types of cube manipulations to process
such topology changes can be classiﬁed. The ﬁrst type
is called as cube erosion, indicating that only the tis-
sue voxels are nulliﬁed but no null voxels become tissue
ones. This type occurs in tissue cutting or reposition
of an anatomic structure to another place. The second
type is called as cube generation, indicating that only
the null voxels become tissue ones but no tissue vox-
els are nulliﬁed. This type occurs in tissue generation
or reposition of an anatomic structure from another
place to the current place. The third type includes a
cube in which some tissue voxels are nulliﬁed but some
null voxels become tissue ones. We regenerate all tri-
angles inside a cube as the original MC algorithm for
cubes of this type because too many cases of topol-
ogy changes must be classiﬁed. For example, a 6-tissue-
voxel cube (either classiﬁcation in Fig. 1(B)) may be
changed from a cube with seven or eight tissue voxels
under the cube erosion. However, if the cube manip-
ulation belongs to the third type, this 6-tissue-voxel
cube may be generated from a cube with fewer vox-
els or simultaneously generated or eroded from a cube
with any number of tissue voxels. Therefore, our cube
manipulation of changing only the triangles or vertices
determined by the manipulated voxels processes only
the cube erosion and generation in which few cases are
required to classify and thus to improve the eﬃciency.
Therefore, the index numbers in the cube structures
before and after the simulation is ﬁrst used to decide if
it is a generation or erosion cube. If it is not, all tissue
triangles in this cube are regenerated. If it is, which tis-
sue vertices and then triangles should be deleted and
added are determined based on these index numbers.
Symmetric cases between the cube erosion and gener-
ation can be classiﬁed as the same classiﬁcation with
the same vertex and triangle deletion and addition. For
example, a cube with one tissue voxel generating into a
2-tissue-voxel cube is symmetric to the cube with seven
tissue voxels eroding into six tissue voxels. Therefore,
we introduce the classiﬁcations for the cube erosions
only. In the following, the classiﬁcations of eroding a
cube to possess 6, 5, 4, 3, 2, and 1 tissue voxels are
introduced consecutively in which vertex and triangle
deletion and addition are demonstrated.
If the index number indicates it is the ﬁrst and sec-
ond classiﬁcations as shown in Fig. 1(B), a new trian-
gle with three new vertices is reconstructed and added
into the cube structure. If it is the last classiﬁcation
of the 6-tissue-voxel cube as in Fig. 1(B), one vertex
of the original triangle is deleted and two new vertices
are generated to delete the original triangle from the
cube structure but two triangles actually edge-sharing
are generated into the structure. Because the ratio of
unchanged vertices to the total vertices is 50% for
the three manipulation cases of eroding the 6-tissue-
voxel cubes from the 7-tissue-voxel cubes, about 50%
of the reconstruction time can be saved by these ero-
sion manipulations.
Figure 3 shows how a 5-tissue-voxel cube is eroded
from a cube with 6 or 7 tissue voxels. The ﬁrst case
in Fig. 3(A) shows that the ﬁrst classiﬁcation of the
5-tissue-voxel cube can be eroded from the third clas-
siﬁcation (Fig. 1(B)) of a 6-tissue-voxel cube in which
one vertex is deleted and two new vertices are added to
delete the original two triangles and to generate three
triangles using the total remaining ﬁve vertices. The
second case in Fig. 3(A) shows that it can also be eroded
from the second classiﬁcation of the 6-tisssue-voxel cube
in which two vertices are deleted and one new vertex is
added to delete the original two triangles and generate
August 6, 2008 12:9 00079
210 J.-F. Lee et al.
1                2               3               4                
(A)
1               2                3               4                     
5               6                7 
(B)
1               2                3               4 
5               6                7               8 
(C)
1               2                3               4 
5               6                7               8 
9
(D)
Fig. 4 Cube erosion to cubes with 4 tissue voxels. • a tissue voxel; ◦: a null voxel; : a deleted tissue vertex caused by a voxel
nulliﬁcation; : an added vertex by a voxel nulliﬁcation; : an unchanged vertex. (A) Four cases of eroding a cube with 5, 6, or 7
tissue voxels to a 4-tissue-voxel cube of the ﬁrst classiﬁcation. (B) Seven cases of eroding a cube with 5, 6, or 7 tissue voxels to a
4-tissue-voxel cube of the second classiﬁcation. (C) Eight cases of eroding a cube with 5, 6, or 7 tissue voxels to a 4-tissue-voxel cube of
the third classiﬁcation. (D) Nine cases of eroding a cube with 5, 6, or 7 tissue voxels to a 4-tissue-voxel cube of the fourth classiﬁcation.
(E) Four cases of eroding a cube with 5, 6, or 7 tissue voxels to a 4-tissue-voxel cube of the ﬁfth classiﬁcation. (F) Three cases of
eroding a cube with 5, 6, or 7 tissue voxels to a 4-tissue-voxel cube of the sixth classiﬁcation.
August 6, 2008 12:9 00079
212 J.-F. Lee et al.
1               2                3               4 
5               6                7               8 
9 10                
10
(A)
1               2                3               4 
5               6                7               8 
9               10               11     
(B)
1               2                3               4  
5               6                7               8 
9               10 
(C)
Fig. 6 Cube erosion to cubes with 3 tissue voxels from cubes with 5, 6, or 7 tissue voxels. • a tissue voxel; ◦: a null voxel; : a
deleted tissue vertex caused by a voxel nulliﬁcation; : an added vertex by a voxel nulliﬁcation; : an unchanged vertex. (A) Ten cases
of eroding a cube with 5, 6, or 7 tissue voxels to a 3-tissue-voxel cube of the ﬁrst classiﬁcation. (B) Eleven cases of eroding a cube
with 5, 6, or 7 tissue voxels to a 3-tissue-voxel cube of the second classiﬁcation. (C) Ten cases of eroding a cube with 5, 6, or 7 tissue
voxels to a 3-tissue-voxel cube of the third classiﬁcation.
process over 6 million triangles per second. That means
real-time (over 15Hz) can be achieved for rendering
tissue surfaces represented by about 400,000 triangles.
In the following, the simulation results of the three
types of voxel manipulations are demonstrated: ero-
sion by tissue burring, generation by bone fusion, and
erosion and generation simultaneously by a structure
reposition.
August 6, 2008 12:9 00079
214 J.-F. Lee et al.
1               2                3               4
5               6                7               8
9               10               11              12
13
(A)
1               2                3               4
5               6                7               8
9
(B)
1               2                3               4
5               6                7
(C)
Fig. 8 Cube erosion to a 1-tissue-voxel cube from cubes with 5, 6, or 7 tissue voxels • a tissue voxel; ◦: a null voxel; : a deleted
tissue vertex caused by a voxel nulliﬁcation; : an added vertex by a voxel nulliﬁcation; : an unchanged vertex. (A) Thirteen cases
of eroding a cube with 5 tissue voxels to a 1-tissue-voxel cube. (B) Nine cases of eroding a cube with 6 tissue voxels to a 1-tissue-voxel
cube. (C) Seven cases of eroding a cube with 7 tissue voxels to a 1-tissue-voxel cube.
August 6, 2008 12:9 00079
216 J.-F. Lee et al.
(A) (B) (C)
Fig. 10 Cube generation example by bone fusion simulation. (A) Before simulation. A maxilla extrusion requiring a corrective
osteotomy. Lateral view; (B) Two premolars being cut away to separate the maxilla that then being repositioned upward and backward
to correct the extrusion. Frontal view; (C) Bone fusion on the premolar cavities to fuse the maxilla and the skull together.
(A) (B) (C)
Fig. 11 Example with both cube erosion and generation by structure reposition simulation: (A) Before simulation. A destroyed knee
with malpositioned tibia. Frontal view; (B) The knee was cut to remove; (C) The tibia was repositioned to correct the malposition.
the skull were then fused together in which bone voxels
were generated inside the right and left premolar caves.
These two cave generations manipulated about 1500
voxels or cubes. Therein, about 750 cubes that included
no tissue voxels generate tissues to be 1–7 tissue-voxel
cubes and thus cube structures are allocated to recon-
struct tissue triangles in these cubes. About 140 cubes
included 1–6 voxels and generate tissues to be 2–7 tis-
sue voxel cubes. Therefore, we reconstruct tissue tri-
angles only for these cubes (not over 900) instead of
the cubes in the whole volume to achieve the visual
real-time response. The cube generation method can
save more over 10% of the tissue triangle reconstruc-
tion time.
Case 3: Voxel Erosion and
Generation During Structure
Reposition
Structure repositions also frequently occurred during
simulations. Figure 11 demonstrates 3D images of
surgery simulations for reposition of a malpositioned
tibia during a knee arthroplasty that was performed to
replace a destroyed knee and correct a malpositioned
tibia. Figure 11(A) shows the 3D image before surgery.
This volume is 256×256×24 and the 3D reconstruction
takes about 2.8 s. Figure 11(B) shows how the knee has
been cut to separate high tibia and low femur from the
knee. Figure 11(C) shows that the tibia has already
been repositioned to correct the tibia malposition. The
number of the cube structures on the repositioned tibia
is about one-third of the total cube structure. There-
fore, the surface reconstruction time for this reposition
is near by one-third of r reconstructing the whole vol-
ume only by the use of the cube structures. Meanwhile,
about 30% of these cube structures on the tibia are
erosion or generation cases that can save about 15% of
the tissue triangle reconstruction time; therefore, the
3D reconstruction for this reposition can be improved
as one-fourth (0.7 s) of the 3D reconstruction time for
the total volume.
DISCUSSION
This study showed that the 3D reconstruction speed
can be much improved using a dynamic cubic structure
that provides the possibilities of reconstructing the tis-
sue surfaces only for local manipulated cubes during
surgery simulations. Because the tissue surfaces recon-
structed from other cubes remain unchanged, the use
