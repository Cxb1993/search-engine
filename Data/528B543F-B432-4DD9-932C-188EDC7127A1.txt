 可供推廣之研發成果資料表 
■ 可申請專利  □ 可技術移轉                                      日期：97 年 10 月 31 日 
國科會補助計畫 
計畫名稱：無線網狀網路基礎通訊架構、行動性與服務品質之研究
計畫主持人：游國忠         
計畫編號：NSC 96-2221-E-156-002 -             
學門領域：計算機網路與資料傳輸 
技術/創作名稱 A Throughput Enhancement Handover Algorithm for  WiMAX Network Architecture 
發明人/創作人 游國忠、張皓茗 
如同於現有的無線網路通訊技術，IEEE 802.16e[2]也同樣提出換
手程序來解決移動裝置(Mobile Station, MS)在行進間會面臨到通
訊中斷以及傳輸品質下降的問題。對於換手程序的改進，其探討範
圍大多皆著重於如何選擇目標基地台(Target Base Station, TBS)
以及節省換手程序所花費的時間成本，尚未以總體資料傳輸量的多
寡進行考量。因此，在本篇論文中，同時考慮下列三個因素：1.
基地台(Base Station, BS)與移動裝置間的訊號強度，2.換手時時
間成本的花費，3.基地台的負載程度，讓移動裝置可以明確地決定
選擇目標基地台，並且擁有最高的資料傳輸量。依據實驗結果，在
同樣時間內，我們所提出的換手演算法能夠比傳統換手演算法擁有
更多總體資料傳輸量。 技術說明 
IEEE 802.16e standard suggested a handover process to solve problems of 
disconnections and lower signal strength which are faced by Mobile Stations 
(MS). Most handover algorithms focus on choosing a target base station (TBS) 
and reducing the time cost of handover process. However, the amounts of 
transmission and the transmission rates are the main factors which affect user 
experience. In this paper, three important factors which affect performance of 
handover algorithm are taken into consideration to achieve the highest 
throughput as much as possible. These factors are: (1) the signal strength 
between the MS and BS; (2) the time cost of handover process; and (3) the 
traffic load of stations, which help the MS to decide which TBS to choose. 
According to the results of the experiment, the proposed handover process has 
better throughput than standard methods within a given time interval. 
可利用之產業 
及 
可開發之產品 
WiMax 產業 
技術特點 
讓移動使用者(Mobile Station)有最高 Throughtput 的 WiMax 換手
技術 
附件二 
 1
行政院國家科學委員會專題研究計畫成果報告 
 
無線網狀網路基礎通訊架構、行動性與服務品質之研究 
 
計畫編號：NSC 96-2221-E-156-002-  
執行期限：968 月 1 日至 97 年 7 月 31 日 
主持人：游國忠   真年理大學資訊工程學系 
Email: yugj@mail.au.edu.tw 
 
計畫參與人員： 張皓茗【研究生兼任助理】  真理大學數理科學研究所 
 陳美貞【研究生兼任助理】  真理大學數理科學研究所 
 王姿琳【研究生兼任助理】  真理大學資訊工程系碩士班 
 郭家華【研究生兼任助理】  真理大學資訊工程系碩士班 
 江鈺雯【研究生兼任助理】  真理大學資訊工程系碩士班 
  
 
一、中文摘要 
 
無線網路在我們日常生活中已經越來越普及
且越來越不可或缺。目前的無線上網方式主要是透
過連結有線網路的 AP 上網。但市面上 AP 的安裝
需透過有線網路的佈建仍然會造成相當的不便。無
線網狀網路(Wireless Mesh Networking, WMN)的技
術主要是讓 AP 與 AP 之間以無線的方式彼此相連
形成一個無線的網狀網路，用來當作無線網路中的
無 線 分 散 式 系 統 (Wireless Distributed System, 
WDS)，讓無線網路的使用及涵蓋範圍可以擴展更
大。透過無線網狀網路技術，大樓內不同樓層間的
AP 將不需要網路線即可佈建；透過無線網狀網
路，可以在每個路燈下裝上 AP，AP 附近的車輛、
行人及住家也都將可以很方便的無線上網。隨然無
線網狀網路可以讓我們更容易的上網，但無線網狀
網路仍存在著很多技術的問題有待解決。這些問題
可以大致上分為和基礎結構相關的研究議題
(Infrastructure-related issues)、和移動性相關的研究
議題(Mobility-related issues)及和服務品質相關的
研究議題(QoS-related issues)。 
本計畫的研究目的是開發與研究無線網狀網
路相關之協定與應用使得網路的效能得以提升及
網路的應用可以更加的廣泛。本研究計畫研究的內
容包含：(1)開發無線網狀網路下高效能的繞境協
定；(2)無線網狀網路中通道的指派與管理問題；(3)
無線網狀網路中自我組態設定演算法之開發；(4)
具容錯能力無線網狀網路基地台之開發；(5)無線網
狀網路下空間域頻寬再利用及服務涵蓋範圍之分
析與研究；(6)無線網狀網路下負載平衡問題之研
究；(7)無線網狀網路 MAC 協定之設計等。這些問
題都和無線網狀網路的效能提升有很大的關連。為
了得到更精確的分析結果，在第一年的計畫裡，我
們也將實作出一個事件導向封包等級無線網狀網
路模擬器用來精確測量無線網狀網路的效能。 
 預計本計畫之執行將帶來下列的效益。在學
術研究方面，本計畫所開發之技術與理論將會有助
於無線網狀網路 Infrastructure, Mobility及QoS等方
面技術之進步。在產業界的貢獻方面，基於政府正
大力推行 M-台灣的計畫，預計本計畫之執行成果
將會對 M-台灣計畫之部分關鍵技術之開發有所貢
獻。在人員訓練方面，本計畫之執行可以培育在無
線網狀網路領域之五名研究生，這些研究生投入國
內產業界將會對台灣無線網路產業之推展有很大
的幫助。在對計畫主持人之影響方面，透過本計畫
之執行，計畫主持人可以累積更多無線網狀網路系
統實際的開發經驗，除了可協助台灣無線網路技術
之推展外，亦可將累積之經驗與知識透過課堂教學
傳遞給更多的學生明瞭。在軟硬體的成果方面，本
計畫之執行將會開發出一套無線網狀網路模擬
器、一套 PC-based wireless mesh router 及 P2P Video 
Streaming Software 等。預計這些軟體之技術轉移將
可有效提升產業界在無線網狀網路上之研發能量。 
 
關鍵詞：無線網狀網路、網路基礎架構、移動性、
服務品質. 
 
Abstract 
 
Recently, wireless technologies become popular 
and necessary communicating tools which 
significantly enrich our daily life. To access Internet 
in a wireless manner, access point of wireless local 
area network plays an important role. However, the 
deployment of access point involves wired networking 
and leads to significant inconvenience. Wireless mesh 
networking, WMN, is a communication technology 
which connects multiple AP’s through wireless 
communications. In other words, a wireless 
 3
E. Spatial Reuse and Service Coverage Analysis 
for Wireless Mesh Network 
在一個頻道相鄰的 Mesh Network 中，當一個
用戶同時被多個基地台的涵蓋範圍所覆蓋
時，便容易產生傳輸中的用戶有相互影響的
情形。而為了避免相互影響的狀況與減少避
免碰撞而預留的等待時間，便使用頻道相鄰
或覆蓋的 Spatial Reuse 特性來解決這些問題。 
 
F. Load Balance and Channel Assignment for 
Wireless Mesh Network 
在現階段的 Mesh Network 中，有許多方法可
以決定資料傳送時的 Route 路徑。但這些方法
並未將 AP 的負載因素和資源分配問題考慮
在其中。今若有一 AP 處於 Mesh Network 的
交集中心點，或是處於較多路徑會選擇到的
位置上，便會造成此 AP 負載過高或資源不斷
被佔用的情形。若此情況不加改善，可能會
造成 AP 毀損或無法使用，也會造成網路整體
效率減少。因此，如何降低這些 AP 的負載情
形，是一重要的議題。 
 
G. MAC Design of Wireless Mesh Network 
隨著無線網路的發展，無線網路所帶來高速
而便利的無線上網方式受到了非常高度的矚
目與認同。當多個用戶使用同一個頻率通道
(Frequency Channel)時，如何提供一種有效率
的 Multiple Access 以提昇通道之效率，使得
在性能和容量上，皆能達到令人滿意的地
步，是一發展中架構的關鍵問題。 
 
三、文獻探討 
 
 有關 Mesh Network Infrastructure 相關的研究
說明如下： 
 
在基於 Cross-Layer 的架構下，Luigi Iannone
等人[1]提出一個利用Triple-Metric(rate,interference, 
PSR)演算法來處理在 Mesh Network 中的 Routing
問題。此演算法的優點為以此 Routing Algorithm 來
進行，可以達到 interface setting 的控制以並能從
PHY Layer 得到較好的 Feedback。另外，使用
Cross-Layer 設計還有『干擾降低』、『封包傳輸時
較可靠』及『得到更高傳輸率』的好處。而其缺點
為由於有刪除一些現有的策略，因此在 link 時無法
提供『最大』的 rate，進而無法達到最理想的傳輸
情形，但卻可以實施連接性的問題。此外，由於
Channel 的情況是隨時在變動的，所以 PSR 在回應
時需要進行調整，以防止不利因素的產生。 
 
Chunhui Zhu 等人[2] 在此篇中，首先探討
Route Discovery Latency 的原因，並且在實際測量
RTT 中第一次的 RRET/RREQ 數據，之後根據其規
則提出『RTT-Based』的動態演算法來有效的降低
這些延遲。此篇的優點是在 Route Discovery 的步驟
時，可以避免多餘的或沒有義意的時間。而且一但
找出最佳路徑後，可保證其路徑為最佳路徑。此
外，此演算法可適用於任何 Source 端。但其缺點是
若經過的節點是處於移動狀態，則會有速度限制的
問題。且在佈點較稀疏的網路中，較不適用此演算
法。 
Arindam K. Das 等人[3]在此篇文章中提出於
Multi-Hop Multi-Radio 中，考慮靜止的 Channel 
Assignment 問題。因此利用兩種模式的整數線性規
畫(Integer Linear Programming)來解決最佳化的問
題。此方法的優點在於，對同一個時間點而言，讓
能夠同時 link 的數量為最大，並且解決了在
Single-Radio Node 中，天線要進入無線網路的關鍵
限制問題。而其缺點為對於 multiple radios and 
multiple channels 需要一套適用的路徑演算法來分
配 Channel 以達到理想的流量。此外，若此 Mesh 
Network 是一動態網路，或者是 Channel 會有
Overlap 的狀況時，便無法使用。 
 
Leiming Xu 等人[4]有鑑於在 Mesh Network
中，所需的要求是不盡相同的，因此提出一套利用
Edge Grouping 和 Coloring Edge Groups 的演算
法，並結合 Topology 來達到良好的 Channel 
Assignment。其優點是在進行 Channel Assignment
時，可同時滿足多方不同的需求。並且對於
Flooading Traffic 和 Unicast Traffic 也能透過此方法
提升其效能。而其缺點則是需要較多的成本來
Support 此方法。而且若此 Mesh Network 是較任意
隨機的排列，可能較不適用。 
 
四、結果與討論 
 
有關本計畫執行的成果，針對計畫書中所列的
各項目進行說明。 
 
A. Routing Protocol for Wireless Mesh Network 
 
在 Infrastructure Investigation 中，AP 是已知且
固定的，在使用者要將資料傳送至目的端時，路由
的路徑需選擇『既能夠保證且最快到達目的端卻又
不浪費過多的資源』的路徑，因此在以此構想為基
礎下去尋找可能產生的問題。另外，為了提升其傳
輸效率，還需研究 AP 下的每個 mobile station 如何
透過 relay AP 將資料傳遞到 Gateway AP，透過
Gateway AP 將封包傳遞到其他網路或 Internet 上。 
 
如下圖所示，a 點為使用者端，b 點為目的端，
中間每個點皆為一個 AP，黑點則表示 AP 已損壞
或無法使用，而點中的數字為 Data Forwarding 時所
需花費的 cost 值，每傳送一點假設所需花費一單位
時間。假設今天 a點到 b點有三條路徑(以虛線來分)
可選擇，在 Routing Protocol 中要如何選擇會較好。
由下圖可見，若選擇黑色線的路徑，則會因為中間
有一 AP 已損壞，而無法將資料傳遞下去，所以不
可選擇此路徑。而對於紅色線和綠色線而言，雖然
紅色線能較快傳到目的端，但會有 cost 過大的問
題。若選擇綠色線，則是會有花費時間較長的問
題。因此要如何在這當中做取捨，將是一研究議題。 
 5
jitter 等問題。若是 Traffic Load 可均勻的分佈在每
個 AP 上，則整體網路將會有較佳的表現。若將每
個 AP 可以服務的範圍當成一個 Cell 。在
Multi-Channel 的 Mesh Network 中，每個 Cell 可平
均分配到相當數量的 Channel，當某些 Cell 的負荷
較重時，該 Cell 可向鄰近 Cell 借用 Channel 以減輕
每個 Channel 的負荷。 
 
圖三：AP 負載示意圖 
如上圖所示，若有一 AP1 所處的位置正好被多條路
徑所經過，而其鄰近 AP2 皆處於使用量極低的情
況。 
 
G. MAC Design of Wireless Mesh Network 
 
當網路上的 Mobile Station，Access Point 或
Base Station 以分散式的方式試圖取得媒體的存取
權，一個具有 High Throughput 的 Low Collision 及
Fair 的 MAC Protocol 是非常重要的。為了提高
MAC的效能，Multiple Input Multiple Output (MIMO)
技術，方向性天線或 Smart Antenna 都是最近被提
出來用來增加 MAC 效能的技術。Wireless Mesh 
Network 中 AP 的通訊方式可以分成 AP-MS 及
AP-AP 兩種。 
 
在做 Media Access 時，若同時有多個節點要存
取同一節點資料，則被存取的節點勢必會降低其效
能，並增加干擾或碰撞的問題。為了減少這些情
形，改善 MAC Protocol 以期得到較好的效果是必
需的。 
 
五、計畫成果自評 
 
本計畫的目的是研究無線網狀網路有關
Infrastructure 建構的問題。在今年的研究成果中我
們提出方法解決了下列研究目標：(1)開發無線網狀
網路下高效能的繞境協定；(2)無線網狀網路中通道
的指派與管理問題；(3)無線網狀網路中自我組態設
定演算法之開發；(4)具容錯能力無線網狀網路基地
台之開發；(5)無線網狀網路下空間域頻寬再利用及
服務涵蓋範圍之分析與研究；(6)無線網狀網路下負
載平衡問題及(7)無線網狀網路MAC協定之開發與
設計等。本計畫執行成果和計畫書中所提內容有高
度相關。除了計畫書的研究議題之外。另外在移動
裝置與基地台間的換手問題及多通道多路徑環境
下之排程議題，本計畫亦在 TANET 發表論文。請
參閱[7][8]及附件。 
 
這個計畫的貢獻可分為三大部分。第一，有
五個研究生在這次的計畫參與中學到了群體工作
的經驗，也學會了實作系統的經驗。第二，我們發
展了三個 Wireless Mesh Network 建構演算法。這
些演算法將會陸續在 Conference 及 Journal 中發
表。第三，在這次計畫的執行中，我們另外發現了
一些無線網狀網路的相關研究議題，及可能的業界
應用，我們將繼續努力的將這些成果呈現出來，讓
這個計畫發揮最大的效益。 
 
六、參考文獻 
[1] Luigi Iannone, Ramin Khalili, Kav´e Salamatian 
and Serge Fdida, “Cross-layer routing in wireless 
mesh networks,” in Proc. International 
Symposium on Wireless Communication Systems, 
pp.319 – 323, Sept. 2004. 
[2] Chunhui Zhu, Myung J. Lee and Tarek Saadawi, 
“On the route discovery latency of wireless mesh 
networks,” in Proc. IEEE Consumer 
Communications and Networking Conference, 
pp.19 – 23, Jan. 2005. 
[3] Arindam K. Das, Hamed M. K. Alazemi, Rajiv 
Vijayakumar and Sumit Roy, “Optimization 
models for fixed channel assignment in wireless 
mesh networks with multiple radios,” in Proc. 
IEEE Sensor and Ad Hoc Communications and 
Networks, pp.463 – 474, Sept., 2005. 
[4] Leiming Xu, Yong Xiang and Meilin Shi “A 
Novel Channel Assignment Algorithm Based on 
Topology Simplification in Multi-Radio 
Wireless Mesh Networks,” in Proc. IEEE 
International Performance, Computing, and 
Communications Conference, April 2006. 
 
[5] Gwo-Jong Yu, March 25-28, 2008, “A 
Quorum-Based Route Cache Maintenance 
Protocol for Mobile Ad-Hoc Networks” in 
Proceedings of the 22nd IEEE International 
Conference on Advanced Information 
Networking and Applications (AINA2008), pp. 
196-203, Ginowan, Okinawa, Japan. 
 
[6] Gwo-Jong Yu, Shao-Chun Wang, March 25-28, 
2008, “A Hierarchical MDS-based Localization 
Algorithm for Wireless Sensor Networks” in 
Proceedings of the 22nd IEEE International 
Conference on Advanced Information 
Networking and Applications (AINA2008), pp. 
748-754, Ginowan, Okinawa, Japan. 
 
[7] 陳 美 貞 , 游 國 忠 , “A Multi-Path Routing 
supported Scheduling Algorithm for 
Multi-Channel Single-Transceiver Wireless 
Mesh Networks,” in TANET 2008 台灣網際網
路研討會, Kaohsiung, Taiwan, 2008. 
 
[8] 張皓茗, 游國忠, “A Throughput Enhancement 
Handover Algorithm for WiMAX Network 
Architecture,” in TANET 2008 台灣網際網路
A Throughput Enhancement Handover Algorithm for  
WiMAX Network Architecture 
 
Hao-Ming Chang and Gwo-Jong Yu 
Graduate School of Mathematical Sciences, 
Aletheia University 
diodream@gmail.com  yugj@email.au.edu.tw 
 
摘要 
 
如同於現有的無線網路通訊技術， IEEE 
802.16e[2]也同樣提出換手程序來解決移動裝置
(Mobile Station, MS)在行進間會面臨到通訊中斷以
及傳輸品質下降的問題。對於換手程序的改進，其
探討範圍大多皆著重於如何選擇目標基地台(Target 
Base Station, TBS)以及節省換手程序所花費的時間
成本，尚未以總體資料傳輸量的多寡進行考量。因
此，在本篇論文中，同時考慮下列三個因素：1.基
地台(Base Station, BS)與移動裝置間的訊號強度，2.
換手時時間成本的花費，3.基地台的負載程度，讓
移動裝置可以明確地決定選擇目標基地台，並且擁
有最高的資料傳輸量。依據實驗結果，在同樣時間
內，我們所提出的換手演算法能夠比傳統換手演算
法擁有更多總體資料傳輸量。 
關 鍵 字 ： IEEE 802.16e 、 WiMAX 、 Handover 
Algorithm、Throughput。 
 
1.介紹 
 
隨著無線網路技術的進步與 MS 開發技術的成
熟，傳輸品質的要求與隨處上網則是現今無線網路
發展的重點考量。IEEE 802.11 是現今較為普及的標
準規格之一，但卻受限於傳輸距離與移動性不佳的
問題而無法於室外環境被廣泛使用。為了解決此問
題，IEEE 在 2001 年 6 月提出了 802.16 的新規格，
此規格又稱為全球互通微波存取技術(Worldwide 
Interoperability for Microwave Access, WiMAX)。為
了有效支援 MS 的可用性，在 IEEE 802.16e 當中則
提出換手程序來滿足使用者的各種需求。然而，僅
管在 WiMAX 網路當中能夠解決既有無線網路所存
在的問題，但是當 MS 在進行移動時仍然會面臨到
離開 BS 的通訊範圍或是由於訊號強度的變化導致
傳輸品質變化的情形發生。因此，當 MS 在不斷移
動時，為了要避免傳輸中斷、傳輸品質下降以及資
料傳輸量減少的情形發生，一個可靠的換手演算法
便成為一個重要的研究議題。 
在無線網路通訊協定中，換手的目的包含 1.
維持通訊品質，2.避免通訊中斷以及 3.滿足使用者
各種不同需求的服務。然而，在 IEEE 802.16e 規格
中，雖然已有制定出基本的換手流程，但對於較細
節的部份卻未詳加定義。在效能改進方面，若個別
以訊號強度、換手流程、換手時間延遲等因素來設
計換手演算法雖然可以達到改善換手程序的效
果，但在忽略其它考量因素的情況下，這些換手演
算法容易衍生出其他問題。因此，本研究之目的即
為提出一換手演算法，並儘量綜合多項考量因素，
再將這些因素轉換成相同的觀點來進行比較，藉此
來選擇最合適的目標基地台以進行換手。 
在無線網路環境裡，資料傳輸量的多寡與傳輸
速率的快慢可以初步決定此網路的優劣性。因此，
我們期望 MS 在移動時，能藉由我們的換手演算法
來提升總體的資料傳輸量。而在本文所提出的演算
法可分成兩部份。第一部份為「目標基地台的選
擇」。在這當中，我們的演算法同時考慮了訊號強
度的影響、換手時間成本的影響、基地台負載程度
的影響。第二部份為「換手觸發時機」。藉由好的
判斷標準來達到總體資料輸出量的最大化。 
在此篇論文中，我們所提出的貢獻有下列四
點：1.考慮整體資料傳輸量，2.考量到 WiMAX 
Forum Network Architecture[6]，3.整合訊號強度、
換手時間及基地台的負載平衡，4.在不增加 MS 的
工作量之下進行多方因素細節考量。 
)]}XXX]dBm(Pr[
)0d(PLGGP[
10
1exp{d
D(MS,BS)
Hf
rtt0
+++−
+++⋅
=
σ
γ
 (3) 
在知道 MS 的移動速率，與 BS 間的距離、訊號衰
減程度之後，便可預測出 MS 在 SBS 與換手至 TBS
後可持續的時間，我們便可以利用預測的持續時間
與可用的傳輸速率[2]來進行比較是否需要換手。 
 而在觸發換手條件方面，我們依據下面兩種不
同的情況來進行考慮： 
狀況一：當移動裝置所收到的訊號強度值滿足(4)
時，移動裝置便會觸發本篇論文所提出的換手演算
法來判斷是否需要換手以獲取最大的資料傳輸量。 
dB)SBS,MS(SdB βα >≥  (4) 
情況二：當移動裝置所收到的訊號強度值滿足(5)
時，則必須立即觸發換手程序，以傳統的換手演算
法進行換手，以維持通訊。 
)SBS,MS(Sdb ≥β  (5) 
其中 S(MS,BS)為 MS 與 BS 間所收到的訊號強度
值，α與β分別為開始判斷是否需要進換換手演算
法的訊號強度值與 MS 必需馬上進行換手的訊號強
度值。 
 而 MS 在基地台間的持續時間計算方式如
下。如圖 2 所示，假∆設外圈與內圈的範圍對於 MS
所能收到的訊號強度值為α與β，∆為 MS 由目前
的位置移動至α邊界的距離。 
 
圖 2 計算持續時間示意圖 
與當 MS 在進行移動時，依照所測得的訊號強度以
及(2)與(3)，可以測得∆的大小，再配合表 3 中 MS
最大可移動速率，可以求得持續時間如(6)。 
vTmove
Δ=  (6) 
其中 Tmove為 MS 在基地台當中可持續的時間，v 為
MS 最大可移動的速率。 
 
3.2 換手時間成本對於總體資料傳輸量的影響 
 
 在換手時間成本方面，我們依照圖 1 的網路架
構圖分成三個部份來考量：MAC 層間的換手時間
成本計算、不同 ASN-GW 底下的換手時間成本計
算以及不同 CSN 底下的換手時間成本計算。 
由[2][4][6]可以知道，在 MAC 層間的換手會
依據 Association Level 的不同而有不同的時間成
本。當 MS 與 BS 間使用 Association Level 0 進行
Scanning 的動作時，其時間成本 則如(7)所示 hoLT 0
regauthsyncrngcont
ho
L TTTTTT ++++=0  (7)
gin其中 Tcont 為 MS 在進行 Contention Based Ran g 
與
(8)
其中 
Process 時所需花費的時間，Trng為 MS 進行 Ranging
時平均所需花費時間，Tsync 為 MS 進行 Downlink 
Synchronization 時平均所需花費時間，Tauth以及 Treg
則分別為MS進行Re-authorization與Re-registration
平均所需花費時間。同理，Association Level 1 的時
間成本 hoLT 1 與Association Level 2的時間成本 hoLT 2 則
分別如(8) (10)所示。 
SBMSSBS
ho
L TTT += (),(1
regauthsync
rendezvousnBSS
TTT
T
+++
+
       
),  
),(),( 2 ASNBSnBSSBS TT =  (9) 
如同(8)，其中 
syncnBSSBSMSSBS
ho
L TTTT ++= ),(),(2  (10)
),(),( 2 GWASNBSnBSSBS TT −=  (11)
息在 SBS 與 nBS 間傳遞所需花費
的時間，T(SBS, nBS)為訊息在 SBS 與 nBS 間傳遞
其中 T(SBS, MS)為訊
所需
花費的時間，Trendezvous 為基地台相互協調完成後，
移動裝置還需要等待鄰近基地台所分配專屬於
Serving BS 的非競爭協調所在 Frame 的時間。 
 相較於 MAC 層間的換手時間花費，MS 在進
行跨ASN-GW的換手則需額外花費BS與ASN-GW
間傳遞訊息的時間。因此，在進行跨 ASN-GW 的
換手時，不同的 Association Level 所需花費的時間
則如(12)、(13)以及(14)所示。 
(Decision Value)則為(21)： 
lueDecisionVa =
)BS1(TT dTraffocLoatimerate −××  (21)
其中 Trate的 MS 測得與 BS 間的訊號強度後，再對
應至可用的傳輸速率，其取得方式為由表示式(3)
計算出 MS 與 BS 間的距離之後，再對應至表 1 所
得。Ttime為透過(6)計算出持續時間後，再扣除掉換
手時間成本之後移動裝置可傳送資料的時間，而此
單位時間的長度大小與實際可傳送的時間則需透
過 MS 與 BS 間的距離與 MS 的移動速率來進行計
算，其實間花費為(7)至(17)；BSTraficLoad 則為(20)所
計算出的負載程度值，(1-BSTraficLoad)則為換手至此
基地台的期望值。而整體的換手流程則如下所示： 
 
表 1 訊號強度、距離與傳輸速率間的對應關係表 
 
)
Modulation Coding Receiver Transmission Bit 
Rate SNR 
(dB) 
Range (Km) Rate
(Mbps
BPSK 1/2 5.2500 6.4 1.95 
1/2 9.44 4.7500 3.95 
QPSK 
3/4 11.2 4.2825 6 
1/2 16.4 3.1746 8.06 
16-QAM 
 3/4 18.2 2.8621 12.18
2/3 22.7 2.2090 16.30 
64-QAM 
3/4 22.4 2.0030 18.36 
 
. 實驗模擬 
本次實驗場景如圖 2 所示，每個基地台有其各
4
 
 
自適用的 Path-Loss Model 與其通訊範圍內可移動
的最大速率，MS 在此網路環境中進行隨機移動，
每個基地台的涵蓋範圍為 5.2 公里，重疊範圍為 1
公里。而時間參數設定，如表 2 所示；而不同 BS
間的 Path-Loss Exponent 與其參數設定，則如表示
式(21)與表 3 所示。 
 
圖 2 模擬場景圖 
)
H
cbH +−  a(
b
b=γ (21)
表 2 時間參數設定 
Symbol e (ms) Frame Tim
Tcont N/A 120(Average) 
Trendezvous N/A 50(Average) 
Tsync 4 20 
Tauth 35  175
Treg 7 35 
Trng 6 30 
T(BS, MS) way) 10 2(2-
T(BS, ASN) 2(2-way) 10 
T(Anchor ASN, 
Target ASN) 
2(2-way) 10 
TL2 According to 3.2 
TBU N/A 10-300 
TFNA N/A 10-50 
Tpre N/A 10-50 
表 地台參數設
 Ter rrain Type C
3 基 定 
rain Terrain Te
Type A Type B 
描述 位於障礙 中 平坦環境，障礙等程度
A Multi-Path Routing supported Scheduling Algorithm for 
Multi-Channel Single-Transceiver Wireless Mesh Networks 
 
Mei-Jhen Chen and Gwo-Jong Yu 
Graduate School of Mathematical Sciences, 
Aletheia University 
treasure020@gmail.com yugj@email.au.edu.tw 
 
摘要 
 
在無線網狀網路中，資料傳輸的排程是一個相
當重要的研究議題。IEEE 802.16 有提供排程機制於
網狀網路中。本文提出一個在 IEEE 802.16 網狀網
路能支援Multi-Channel Single-Transceiver的多重路
由路徑排程演算法。本文不使用固定的樹狀結構，
而是透過 SS以彈性的方式選擇其他鄰近的 SS來進
行資料代傳。為了提高可同時傳輸的連結數，使用
Multi-Channel Single-Transceiver 來進行資料傳輸，
減少 Secondary Interference 問題。並進一步透過在
BS 上配置 Multi-transceiver 來解決 BS 鄰近端通訊
瓶頸的問題。根據實驗和分析結果，我們所提出的
排程演算法比以往的排程演算法能夠擁有較多同
時進行傳輸的連結數，並且有效降低封包延遲以及
縮短排程時間。 
 
關鍵詞：IEEE 802.16、排程、Multi-channel、Mesh 
network 
 
1. 介紹 
 
IEEE 802.16 是一種在微波和毫米波頻段的無
線都會型網路技術，利用高效率無線信號傳輸與處
理技術，具備了傳輸距離長、傳輸速率高、快速佈
建以及低成本等特性。IEEE 802.16 主要定義兩個不
同 的 空 間 接 取 (Air Interface) ： 點 對 多 點
(Point-to-MultiPoint, PMP) 和 網 狀 網 路 模 式
(Mesh)[3]，如圖 1 所示。在點對多點的模式下，是
由一個基地台 (Base Station, BS)和幾個用戶端
(Subscriber Stations, SSs)所組成，BS 控制整個網路
的存取， SSs 有需求必須先發送一個要求
(Request)，然後等待 BS 的許可(Grant)，才可進行
通訊。在網狀網路模式下，BS 是後端網路(Backhaul 
Network)和網狀網路的閘道(Gateway)，SS 不需要透
過 BS 即可和其他鄰近的 SSs 進行通訊。 
在網狀網路模式中，有兩個類型的排程機制：
集中式排程和分散式排程[3]。集中式排程是由基地
台決定所有連結的資源分配，管理和決定所有用戶
端們的頻寬需求的運作；而在分散式排程中，用戶
端和基地台要求建立連線時，都需要經由競爭的方
式去搶時槽來傳送資料。 
 
(a) Point-to-MultiPoint   (b) Mesh mode 
圖 1 IEEE 802.16 的網路拓樸示意圖 
排程主要目的包含： (1)增加網路的輸出量
（throughput）；(2) 縮短排程時間及(3) 降低資料封
包的延遲等。在 IEEE 802.16 規格中，雖有提出相
關的排程機制，但是只提供排程相關訊息的定義和
訊號交換的流程，並未詳細的制訂整個排程流程。
對於定義不詳的部份，已有許多論文提出很多不同
種的排程演算法[1][4][5][6]。而這些排程演算法是
先建構樹狀路由拓樸，然後再進行排程，並且使用
Single-Channel 來進行資料傳輸。 
雖然固定的樹狀路由拓樸可以簡化路由選擇，
但是固定的樹狀路由拓樸會大大的限制通訊路由
的選擇，並在某些節點產生通訊壅塞的情形。另一
3. 網路系統架構 
 
在這一章節，我們會提出網路架構及環境假
設，接著介紹我們如何去選擇 Next-hop 及分配
channel。 
 
3.1 網路架構與環境假設 
 
我們考慮一個 BS 服務多個 SSn(n = 1,2…n)，都
為固定不移動。用戶端使用 IEEE 802.16 的
OFDMA/TDD 存取模式。BS 位於中心點，負責提
供 Grant 給 SS 或接收 SS 的 Request，並管理整個
網狀網路。SS 會平均分佈在各處，負責代傳鄰近的
SS 資料或是自己的資料。SS 們在彼此的通訊範圍
內，就會有連結存在。而 SS 的資料都將傳送至 BS，
再經由 BS 傳送到後端網路。SS 會有各種的資料
流，每個資料流具有不同的 QoS 需求。 
我們假設網狀網路拓樸為 G = (V, E)。其中 V
代表是網路拓樸中所有節點集合，n∈V。E 代表是
網路拓樸中所有連結集合。 
依據訊息傳輸機制，在無線網路環境中，資料
傳輸有兩種碰撞情況，稱為 Primary Interference 和
Secondary Interference [2]。Primary Interference 發生
在排程過程的某時槽上，用戶端做超過一件事情。
意指用戶端只能做傳輸或接收資料。Secondary 
Interference發生在原是接收者的用戶端X變為傳輸
者，但用戶端 X 是位於傳輸者用戶端 Y 的傳輸範圍
內，用戶端 X 會影響到用戶端 Y 的傳輸。 
 
3.2 Next-hop 選擇 
 
我們為了增加空間再使用率及提高節點選擇
Next-hop 的多元性，因此採用 Multi-path Routing 方
法。我們參考[6]的 Multi-path Routing 想法，然後加
以更改。首先，我們使用階層式方法，以節點距離
BS 的 hop 數為基準，同 hop 數的節點們為同一層。
目的是要避免節點選擇Next-hop選到相同 hop數的
節點，導致浪費資源且會增加傳送資料的延遲。假
設 BS 為 0)( =BSlevel
1)(
，距離 BS 一步的節點們為第
一層，即 =nlevel
2)(
，距離 BS 兩步的節點們為第
二層，即 =nlevel
)(
，依序下去，距離 BS 為 i 步
的節點們為第 i 層，即 。因此，節點只
能 選 擇 在
inlevel =)(
1−= i
pn
nlevel
pn
的 節 點 們 做 為
Next-hop( )，且節點 n 和 必須在彼此的通訊範
圍 內 且 有 連 結 存 在 ， 即( ) ', Enn p ∈∩1)() nlevel −=(nlevel p 。以圖 2 為例，
BS 為第 0 層，節點 A、B、C 為第 1 層，節點 D、
E、F 為第 2 層，節點 G、H、I、J 為第 3 層。第 i
層與第 i-1 層的連結為實線，同層的節點若存在連
結則為虛線。在我們所提出的排程演算法中，只考
慮到實線。我們假設此階層式網路為 G′ = (V, E′)。
其中 E′代表是階層式網路中的連結集合，l=(vt,vr)∈
E′。 
level 
圖 2 階層式網路示意圖 
而節點如何選擇適當的 Next-hop，我們以在節
點所有資料流的 Traffic Demand (Ln)大小做決定，從
中選出最小的做為 Next-hop，表示此點的要傳送及
代傳的資料較少、負載度低，可避免所有資料集中
於某節點上。若節點們的 Ln相同，則依據節點的 ID
順序做優先選擇。 
∑=
i
inn DL ,  (1)
其中，Dn,i 為用戶端 n 的第 i 個資料流的 Traffic 
Demand。因此，節點的 Next-hop 於排程時間 t (time 
slot)不一定是相同的，會根據整體網路每個節點的
狀態而改變選擇。目的為分散每個節點的負載與增
加連結的使用率。 
 
BS
A
B
C 
D E F 
G
H
I 
J 
BS
SS
0 
1 
2 
3 
於每個被選擇到的連結，其傳送端的 Ln會減 1，而
接收端的 Ln會加 1。當所有節點的 Ln都為 0 就完成
排程。我們使用 S(t)紀錄於時槽 t 時進行運作的連
結和節點集合。排程演算法如圖 4 所示。 
Scheduling Algorithm: 
Input : Mesh Network G = (V,E) 
      Level Network G′ = (V, E′) 
      Channel Set CHL 
Output : Scheduling result S 
 
Initialize Ln of each node 
t 1 
while exist any Ln >0 for any SSn 
 Lφ  
 Nφ  
 Add all (vt,vr) to L if Lt>0 
 Add vt to N if Lt>0 
 S(t)  Next-hop Selection (L,N) 
 Adjust Ln for each node n in S(t) 
t  t +1 
End while 
圖 4 集中式排程演算法 
Next-hop Selection 演算法主要是從可使用的連
結集合中選出可同時進行運作的連結，並分配
Channel 給他們使用。詳細演算法如圖 5 所示。 
假設有 c 個 Channel 可使用，不考慮一般的遺
失。我們使用塗色集合 CHL=[1,…,c]代表 Channel
數。尚未塗色的連結 l 的集合 Lu和尚未選擇到的節
點 n 的集合 U。連結 l 的顏色被記為 c(l)。每次都
會從 U 選擇一個節點，選擇方式是依據節點的 Wn
來選擇。再從節點 n 的鄰近端集合 NG 選出適合
Next-hop，當作選為進行傳送的連結 l。接著根據
Wn依序選擇出下一個節點。我們定義 Wn如下： 
( )( )
n
i
inin
n N
DSQ
W
∑ ×
=
,,
 (2)
一直選擇到沒有可以同時傳輸的節點。若是選到 BS
的鄰近點，則不考慮 Primary Interference 情況，因
為 BS 配置 Multi-Transceiver，只要使用不同的
Channel，鄰近 BS 的節點就可以同時傳送資料給
BS。 
Next-hop Selection (L,N) 
Input : Mesh Network G = (V,E) 
Level Network G′ = (V, E′) 
      available link set L 
available node set N 
Color set CHL= [1,n] 
Output : Active link set LA⊂L 
       Active node set NA ⊂N 
       Channel assignment c: LACHL 
Lu L 
UN 
While U ≠φ  
s   )(maxarg nUn W∈
Add np to NG 
if ∩−= 1)()( slevelnlevel p ( ) ', Enn p ∈  
p  )(minarg
p
Ap
nNNGn
L−∈
l  ( s, p ) 
S φ  
S  for all  )},({ rt vvcS ∪
0)(
Art LlSIvv ∩∈ )(),(
if =plevel  and φ≠− SCHL  and 
φ=∩ A
L }{lL ∪
LBSSI )(  
A  A
    c(l)   i
SCHLi −∈
minarg
else if φ=∩ ALlPI )(  and φ≠− SCHL  
         AL }{lL ∪A
       c(l)   i
SCHLi −∈
minarg
    End if 
End if 
U  }{sU −  
uL  }{lLu −  
End While 
圖 5 Next-hop Selection 演算法 
 
5. 演算法舉例說明 
 
以圖 3 的階層式網路來說明提出的演算法。假
設有一個 BS 和 10 個 SS，每個 SS 都有五種不同形
態的 traffic，每個 traffic 都各有一個。QoS 的比重
值分別為 5、4、3、2、1。 
 
圖 6 排程演算法的結果 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 96-2221-E-156 -002 
計畫名稱 無線網狀網路基礎通訊架構、行動性與服務品質之研究 
出國人員姓名 
服務機關及職稱 
游國忠(真理大學資訊工程學系，副教授) 
會議時間地點 Ginowan, Okinawa, Japan, March 25-28, 2008 
會議名稱 The 22
nd IEEE International Conference on Advanced Information Networking 
and Applications 
發表論文題目 
1. A Quorum-based Route Cache Maintenance Protocol for Mobile ad-Hoc 
Networks 
2. A Hierarchical MDS-based Localization Algorithm for Wireless Sensor 
Networks. 
 
一、參加會議經過 
本次參加會議共發表兩篇論文，報告時程如下 
 
1. March 26 (Wed), 14:30-16:00, Conference Session 2D Ad Hoc Networks II 
A. A Protocol for Content-based Communication in Disconnected Mobile Ad Hoc 
Networks 
Julien Haillot, and Frederic Guidec 
B. A Quorum-based Route Cache Maintenance Protocol for Mobile Ad-Hoc 
Networks 
Gwo-Jong Yu 
C. PACONET: improved Ant Colony Optimization Routing Algorithm for Mobile 
Ad Hoc NETworks 
Eseosa Osagie, Parimala Thulasiraman, and Ruppa K. Thulasiram 
 
2. March 28(Fri.) 9:30-11:00 AINA 2008 Conference Senssion 7D Wireless Sensor 
Network Protocols and Algorithms 
A. A New Dynamic Scheme for Efficient RTS Threshold Handling in Wireless 
Netowrks 
Mostafa Mjidi, Debasish Chakraborty, Naoki Nakamura, Kazuhide Koide, 
Atushi Takeda, and Norio Shiratori 
B. A Predictable Mobility-based Data dissemination Protocol for wireless Sensor 
Networks, 
Euisin Lee, Soochang Park, Fucai Yu, Younghwan Choi, Min-Sook Jin, and 
sang-Ha Kim 
國家的實驗室將研究重點放在那裡？也可知道目前最熱門的研究領域為何？研究是教學的先
驅，目前的研究成果經彙整後可以成為未來的教科書。尤其是電腦相關領域，往往是六個月
的斷層就很難在短時間內補起來。因此，持續的研究可讓學生永遠學到的都是最新的資訊。 
在這次的學術交流中，可將學校的概況介紹與國外友人了解。大多數的學者都對學校的
定位很有興趣，也會想要知道學校的研究重心及方向。藉著說明真理大學資訊科學系在無線
網路與多媒體系統方面有很好的研究能量。有些學著甚至表達了跨國合作的可能性與意願。 
感謝國科會我們機會能到國際會議上和頂尖的學者學術交流，也讓我們在研究領域上了
解最新趨勢與最新技術。此次論文的發表與討論也讓我在數位學習領域增加了最新的教材，
我可以將此次會議中學到的最新技術和學生分享，讓學生可以學到新的觀念與技術。研究的
提升通常可相對帶來教學的進步。相反的，若是沒有對最新的技術進行吸收，也許僅能重複
的將相 
 
requirements, cluster-based hybrid routing protocol 
combines advantages of Table-driven and On-demand 
routing protocols. The route search process with a 
cluster can be achieved by Table-driven based 
approach. Due to the number of mobile hosts within a 
cluster is limited, the size of routing table will not be 
too large to maintain and search efficiently. On the 
other hand, the route search process among clusters is 
based on on-demand approach. All mobile hosts within 
a cluster can be aggregated as an integrated entity. The 
number of control packets in cluster-based approach is 
proportional to the number of clusters, the number of 
control packets thus can be reduced significantly.  
Cluster-based network architecture is a hybrid 
routing protocol which integrates advantages of table-
driven and on-demand routing protocols. The size of 
route cache is moderate because each member host 
only maintains routing information of within cluster 
hosts. On the other hand, the amount of control packets 
is limited because flooding process occurred in cluster 
level. In cluster-based network architecture, a unique 
cluster head is elected to manage resources of entire 
cluster. However, some problems occur in such a 
centralized management mechanism. Because cluster 
head must deal with all events occurred in a cluster, the 
power consumption of cluster head is larger than 
cluster members. The traffic is congested in area 
around cluster head. Lots of routes pass through cluster 
head. Cluster head need to participate in every route 
search process. All routing information within a cluster 
is maintained by cluster head. All route cache update 
occurred within cluster head. Finally, when a cluster 
head retires due to power exhausted, large amount of 
data need to transmit to a new elected header such that 
the operation within a cluster can keep going. 
 
Due to there are lots of disadvantages of 
centralized cluster architecture, a distributed cluster 
management mechanism can be used to resolve the 
previous mentioned problem. In distributed cluster 
architecture, routing information’s is distributed to 
some members. If power of a member node is 
exhausted, routing information still can be retrieved 
from the remaining nodes. So, the robustness and 
reliability of information stored in a cluster can be 
enhanced. The routing information is distributed in lots 
of member nodes, traffic will not congest in some 
nodes. However, the control overheads and data 
consistence problems of distributed system should be 
overcome such that the advantages of distributed 
cluster architecture can be enforced. In this paper, the 
quorum set theory [5] is used to construct distributed 
cluster architecture. Through quorum set, the data can 
be maintained consistent while the control overhead 
can be kept as small as possible. 
The remaining parts of this paper are organized as 
follows. In Section II, characteristics and drawbacks of 
conventional cluster-based architecture are analyzed 
and discussed. Besides, matrix representation of 
routing information is presented to infer and compute 
multiple routes between source and destination. The 
proposed QRERP is presented in detail in Section III. 
Section IV gives experimental results of QRERP. 
Finally, Section V concludes this paper. 
 
2. Backgrounds and basic concepts 
 
In this section, fundamental issues of routing 
protocol are discussed and analyzed. First, a matrix 
representation of routing information is proposed and 
compared with conventional routing table. Then, the 
route cache problem will be discussed such that the 
specification of good route cache management 
mechanism is revealed. Finally, we will review 
quorum theory. 
 
2.1. Routing Cache Management 
 
In mobile ad hoc networks, the routing path 
between two mobile nodes can be discovered through 
table-driven or on-demand approaches. On-demand 
approach broadcasts route request message to entire 
network and consumes lots of communication 
bandwidth. To speedup next route search, the old path 
can be stored in cache memory. Route cache can be 
used to find route with low communication cost and 
small latency [7][8]. However, in ad hoc network, the 
network topology may change dynamically, so the 
route cache may be invalid if any link of the routing 
path is broken. Although the cost of route cache 
maintenance is expensive, without route cache, the cost 
of route discovery is even larger.  
In cluster-based network architecture, route 
information is often centrally stored and maintained by 
cluster head. When cluster head is malfunction, all 
stored routing information become invalid. On the 
contrary, when all routing information is completely 
distributed to all nodes, redundant route information 
will consume unnecessary bandwidth and storage. If a 
distributed route cache management mechanism can be 
provided, the routing process may be more efficient. 
 
2.2. Routing Table Representation 
 
In the proposed routing protocol, each device will 
maintain routing table as well as topology table. 
computation mechanism and quorum-based routing 
information storage is proposed in this paper to reduce 
unnecessary bandwidth consumption and delay time 
caused by DSR maintenance mechanism. The control 
overhead and latency of the proposed protocol is 
spurious than DSR. Further, device mobility can also 
be managed through coterie tree protocol. 
3.2. Detail operation of QRERP 
 
Because DSR is an on-demand routing protocol, 
when source initiates a route request, the route request 
packet will flood to entire n 
 
In the following paragraphs, detail operations of 
QRERP will be described. QRERP includes five 
phases. They are (1)Initialization phase, (2)Route 
discovery phase, (3)Route reply phase, (4)Data 
communication phase and (5)Route maintenance 
phase。 
 
Figure 1: Network topology after initialization 
phase 
 
3.2.1. Initialization Phase. In initialization phase, 
each device randomly turns its power on and no 
routing information and tree coterie information are 
available in internal cache. In this circumstance, each 
device can not perform local route search, due to lack 
of routing information. If a device detects that it does 
not belong to any coterie tree graph, it will wait for a 
random time and broadcast message to construct 
coterie tree graph. For example, in Figure 6, let d 
denotes the maximum hop distance of a coterie tree 
graph. In the following example, d is set to 2. When 
each device receives a coterie packet, it will check the 
hop count, decrease the hop count and rebroadcast the 
tree coterie packet if the remaining hop count is not 
zero. In this way, all devices within hop count d will 
join this tree coterie. In the example shown in Figure 7, 
node 8 plays roles of generator and from a tree coterie. 
The coterie tree is constructed using the following 
sequence: 8, 10, 12, 24, 9, 20, 22, 28, and 18. In this 
coterie tree, nodes 9, 22, 28, also play roles of gateway. 
Gateway 9 connects coterie trees 8 and 3, gateway 22 
connects coterie tree 8 and 25, and gateway 28 
connects tree coterie 8 and 36. 
The coterie tree constructed by generator 8 is 
shown in Figure 7(a). 
 
(a) The coterie tree. 
8 10 12 24 9 20 22 28
8 - 1 1 1 0 0 0 0
10 1 - 0 0 0 0 1 0
12 1 0 - 0 1 1 10
24 1 0 0 - 0 0 0 1
9 0 0 1 0 - 0 0 0
20 0 0 1 0 0 - 0 0
22 0 1 0 0 0 0 - 0
28 0 0 0 1 0 0 0 -
0
18 0 0 0 1 0 0 0 0
18
0
0
1
0
0
0
0
0
-  
(b) Host adjacency matrix 
Figure 2: Coterie tree and topology matrix 
constructed by generator 8. 
 
3.2.2. Route Discovery Phase. After initialization 
phase, the entire network is partitioned into multiple 
coterie trees. If a source device intends to 
communicate with another device, it can switch to 
route discovery phase. According to availability of 
routing information in immediate nodes, route 
discovery process can be divided into four cases. 
Case 1: Query local routing table. 
For example, in Figure 1, device 20 intends to 
communicate with device 8, device 20 checks its 
routing table to find a route to destination node. 
8
10
20
12
2224 9
28 18
3.2.6. Route Cache Update. Each device will purge 
its route cache periodically. A time stamp is associated 
with each routing path. When route cache is full or 
new routes of the same destination are arrival, a node 
needs update its routing information. In each node, 
both the size of topology matrix and routing table are 
limited. The size of routing table depends on the time 
stamp of routes. Because the size of topology matrix is 
limited, the number of nodes recorded in topology 
matrix is also constrained. When a new routing path is 
given to update the topology matrix, the size of the 
union of sets in topology matrix and sets in new 
routing path is checked. If the size is larger than the 
maximum available size of matrix, those nodes with 
earlier updating time is purged from and new nodes are 
added to the topology matrix. The default value in 
topology matrix is set as 0. Each time a link is 
provided to topology matrix, the entry corresponding 
to the link is set to 1. Beside entry update, the time 
stamps of nodes corresponding to the new link need to 
be updated to a new time stamp. In this way, the 
topology matrix will maintain the most fresh link 
information. Although the topology matrix can be used 
to compute routes between any two nodes in the 
topology matrix, values in topology matrix always 
remains unchanged. On the other hand, routing table 
may be updated according to new routes or local 
matrix computations. There is a time stamp associated 
with each route record. When the route is computed by 
topology matrix computation, the time stamp 
associated with this route will be the eldest time in 
topology matrix associated to nodes in the route. 
 
3.2.7. Device leaves a tree coterie. Besides routing 
table and topology matrix, a tree coterie may change 
its membership when the following two conditions 
happen. Because each node can move in a mobile ad 
hoc network, a node may join or leave a tree coterie 
dynamically. For example, in Figure 3, device leaves 
from its original position, and leads to disconnect 
between node 1 and 41. In this circumstance, coterie 
tree 29 misses one member. The missing member can 
be found when one member of this tree coterie needs 
to communicate with the missing member. For 
example, when node 41 send a packet to node 1 and no 
response is got from node 1, node 41 will aware that 
node 1 leaves this tree coterie and performs the 
following operations. 
Step 1: Remove node 1 from member field of its 
coterie tree management table, as shown in the 
following Figure 3. 
 
(a) A node leaves tree coterie. 
 
(b) Restructuring of tree coterie. 
Figure 3: Illustration of tree coterie 
restructuring when node 1 leaves the tree. 
 
Step 2: Replace the logic position of device 1 with the 
last coterie tree member 45 as shown in Figure 4. 
When node 45 receives a message from node 41, it 
will perform the following three operations. 
Step 1: Select and copy routing information from a 
quorum set, {7, 19, 31, 13, 26}, which does not 
contain node 1 to local table.  
Step 2: Change its logical position to previous logical 
position of node 1. 
Step 3: Broadcast this change to all members of the 
tree coterie through tree coterie message. 
 
3.2.8. Device joins to a tree coterie. In Figure 4, it is 
observed that device 72 moves into the area covered 
by coterie tree 36 due to mobility or power on. After a 
time out, device 72 constructs a new coterie tree 72. 
After a period, the new coterie tree 72 contains only 
one device, so it decides to join coterie tree 36. Device 
72 can get information of coterie tree 36 through 
device 37 or device 39. Device 72 adds itself to 
member list and broadcast the updated tree coterie 
packet to all members of the tree coterie. When each 
member receives the new tree coterie packet, the 
corresponding multicast routing path corresponding to 
each quorum set will be updated, so that routes query 
and update based on quorum set can be completed. 
7
26
13
2919 23
31 32 41 45
1
Leave
7
26
13
2919 23
31 32 41 45
increased, so the required control packet is reduced 
and the transmission latency is reduced too. 
5. Conclusion 
 
In this paper, we have proposed a QRERP protocol 
which is based on Quorum and Cluster structure. 
QRERP can not only avoid drawbacks of single cluster 
head, but also provide a mobility management 
mechanism using tree coterie approach. Thus, the 
routing protocol can operate properly even if mobile 
host move into and move away from cluster frequently. 
On the other hand, the proposed matrix representation 
of routing information can help routing algorithm 
discovering new routes locally through simple matrix 
computation. Through proper route cache management, 
the matrix form of routing information can reduce 
unnecessary control overhead significantly. According 
to theoretical analysis and experimental results, the 
proposed approach includes the following advantages: 
discovering route path accurately, providing backup 
route, reducing control overhead, providing mobility 
management, and automatic local route maintenance. 
 
Reference 
 
[1] Charles E. Perkins, Elizabeth M. Royer, and S. Das, 
“Ad-hoc On-Demand Distance Vector Routing”, in IETF 
Internet Draft: draft-ietf-manet-aodv-11.txt, June 2002. 
 
[2] Charles E. Perkins and Pravin Bhagwat, “Highly 
Dynamic Destination-Sequence Distance-Vector Routing 
(DSDV) for Mobile Computers”, Proc. ACM SigComm’94, 
pp. 234-244, London, September 1994. 
 
[3] D. B. Johnson, D. A. Maltz, and J. Broch, “ The dynamic 
source routing protocol for mobile ad hoc networks,” in 
IETF Internet Draft: draft-ietf-manet-dsr-09.txt, April 2004. 
 
[4] M.R. Pearlman Z.J. Haas., “The zone routing protocol 
for ad-hoc networks,”  in IETF Internet Draft: draft-ietf-
manet-zone-zrp-02.txt,  June 1999. 
 
[5] Mitchell L. Neilsen and Masaaki Mizuno, “Coterie Join 
Algorithm”, IEEE Trans. on Parallel and Distributed System, 
vol.3, no.5, pp. 582-590, September 1992.   
 
[6] Zygmunt J. Haas, ” Ad Hoc Mobility Management With 
Uniform Quorum Systems”, in IEEE/ACM Trans. on 
Networking, vol. 7, no. 2, pp. 228-240, April 1999. 
 
[7] Liangzhong Yin and Guohong Cao, “Supporting 
cooperative caching in ad hoc networks,” in IEEE Trans. on 
Mobile Computing, vol. 5, no. 1, pp. 77-89, January 2007. 
 
[8] Xin Yu, “Distributed cache updating for the dynamic 
source routing ,” in IEEE Trans. on Mobile Computing, vol. 
5, no. 6, pp. 609-626, June 2006. 
 
[9] Himabindu Pucha, Saumitra M. Das, and Y. Charlie Hu, 
“Imposed route resue in ad hoc network routing protocols 
using peer-to-peer overlay routing,” in IEEE Trans. Parallel 
and Distributed Systems, vol. 17, no. 12, pp. 1452-1467, 
December 2006.  
 
[10] Myung Jong Lee, Jingling Zheng, Xuhui Hu, Shin-Hui 
Zhu, Yong Liu, June Seung Yoon, and Tarek N. Saadawi, “A 
new taxonomy of routing algorithms for wireless mobile ad 
hoc networks: the component approach,” in IEEE 
Communications, pp. 116-123, November 2006. 
 
[11] Jehn-Ruey Chiang, Yu-Chee Tseng, Chih-Shun Shu, 
and Ten-Hwang Lai, “Quorum-based asynchronous power-
saving protocols for IEEE 802.11 ad hoc networks, “ in Proc. 
ICPP 2003, pp. 257-264, 2003. 
 
 
through localization algorithm. In MDS-MAP [8] 
localization algorithm, Shang et al. proposed to use 
multidimensional scaling (MDS) to compute 
coordinates of all nodes according to relative distance 
among nodes. Operations of MDS-MAP include the 
following three steps. 
1) Computation of Distance Matrix, 
2) Coordinates estimation,  
3) Transformation from relative to absolute 
coordinates.  
In comparison with hop-count based approach [6], 
although the accuracy of DMS-MAP is high, MDS-
MAP still encounters the following drawbacks. 
1) The time complexity is high. When there is huge 
number of sensors, large bandwidth and computation 
are required to estimate locations. 
2) For network area with non-convex shape, the 
computed coordinates are with large errors. 
To resolve the drawbacks of MDS-MAP, the 
objective of this paper is to propose an accurate MDS-
based location algorithm which has low time 
complexity and can operate in non-convex network 
environment. 
The remaining parts of this paper are organized as 
follows. In Section II, the proposed hierarchical 
multidimensional scaling localization algorithm will be 
presented. Section III will give some experimental 
results to justify the performance of the proposed 
algorithm. Finally, Section IV concludes this paper. 
 
2. Position algorithm based on hierarchical 
multidimensional scaling 
 
2.1. Hierarchical MDS-based localization 
algorithm 
 
In this section, detail algorithm of hierarchical 
MDS-based localization algorithm (HMDS) is 
presented. In hierarchical network architecture, a 
sensor node may play roles of cluster head, cluster 
member or gateway node. In HMDS, cluster head will 
collect distance measurement from all members of 
cluster and perform local MDS computation to form a 
local map. A gateway node participates in at least two 
neighboring clusters, exchange information between 
two clusters, and merge two local maps from two 
clusters. When local map of each cluster is calculated 
by each cluster head, the cluster which contains the 
member with specified ID needs to initiate map merge 
phase. Merge phase is used to calibrate coordinates of 
members in different clusters. Those merged clusters 
will repeatedly broadcast merge request to neighboring 
clusters and calibrate coordinates of neighboring 
clusters until coordinates of all clusters are consistent 
and a global map is computed. 
 
2.2. Network assumption 
 
1)  Assume the node ID of each sensor node is unique. 
System operator can assign a special sensor as merge 
initiator. 
2) The network is connected. There is at least one 
path between any two nodes in the network. 
3) There are no landmarks in network. No device has 
information of absolute location. 
4) Each device supports RSSI ranging mechanism. 
 
2.3. Overview of HMDS 
 
HMDS comprises of three phases. According to 
their execution sequence, they are clustering phase, 
intra-cluster localization phase, and merge phase. 
 
2.3.1. Clustering phase. The proposed HMDS 
localization algorithm operates in cluster-based 
hierarchical network architecture. In this phase, a 
clustering algorithm is required to partition the 
network into multiple clusters. 
   
2.3.2. Intra-cluster localization phase. After 
clustering phase is completed, each cluster will 
contains one cluster head, lots of gateways and many 
members. Based on collected neighbor information, 
Figure 1: Each cluster computes its local 
map using distance matrix and 
multidimensional scaling algorithm. The local 
maps in each cluster are different. 
phase. This initialization cluster will broadcast merge 
requests to neighboring clusters. When neighboring 
clusters agree to merge coordinates, it will return an 
acknowledgement message, and the merge phase is 
started. After the merge step is completed, the 
participated cluster needs to rebroadcast the merge 
requests to neighboring clusters. In this way, all 
clusters in entire network are merged into a global map.  
 
Assume the network is partitioned into m clusters, 
and in each cluster, each local map is computed 
independent after intra-cluster localization phase. Let 
CS denotes the cluster which contains device with ID S. 
In merge phase, the operation starts from cluster CS. 
The remaining m-1 clusters will rotate and translate 
their map to calibrate with cluster CS. After merge 
operation, a global map is integrated and generated. 
Two local maps can be merged into one map if some 
nodes contain coordinates of both local maps [11].  
 In previous description, it is assumed that only two 
gateways participated in the merging of two coordinate 
systems. When the number of participated gateways is 
increased, perform multiple merging using different 
gateway pairs and average the results will produce 
more accurate results. The time complexity in merge 
phase in O(m), where m is the number of clusters in 
entire network. The global coordinate system 
computed by HMDS is relative coordinate. In the 
following sections, detail operations of each phase will 
be described. Finally, performance of HMDS will be 
analyzed. 
 
3. Simulation 
 
To verify the performance of the proposed HMDS 
localization algorithm, we compare HMDS with MDS-
MAP [8] using MATLAB as simulation tool. The 
environment is setup as follows. All sensors are 
deployed in a 200 m × 200 m square area. The 
communication range of each sensor is set as 30m, 
35m, 40m, 45m, and 50m respectively. Sensors are 
deployed as the following three categories.  
1) Random Topology: 200 sensors are randomly 
Algorithm: Intra-cluster Localization Phase 
Input: Role role={ClusterHead, Gateway, 
  Member}  
Output: Array MemberCoordinate  
1 if role=Gateway or role=Member  
2  then Estimate distance to all  
  neighboring nodes 
3 neigDistance[i][0]← Neighbors member_id. 
4 neigDistance[i][1]← Estimated distance. 
5 Send neigDistance and member_id to Cluster 
Head 
6 if role=ClusterHead 
7  then n← Number of Cluster Member 
8   for i← 1 to sizeof(neigDistance)  
9    for j← 1 to sizeof(neigDistance)  
10     do DistanceMatrix[i][j] ∞←  
11   Wait for all neighbor information 
12   for i← 1 to sizeof(neighDistance) 
13    do 
DistanceMatrix[member_id][neigDistnace[i][0
]] 
 ← neigDistance[i][1]  
14   Dijstra(DistanceMatrix)  
15   for i← 1 to n  
16    do MemberCoordinate[i][0]← 0 
17     MemberCoordinate[i][1]← 0 
18 MDS(DistanceMatrix, MemberCoordinate) 
19 return dinateMemberCoor  
Algorithm: Merge Phase 
Input: Array dinateMemberCoor ,  
 Array GatewaydistAnchor ,  
 ID minNodeID ,  
 Boolean correct =false,  
 Coordinate erHeadcoordClust . 
1 if minNodeID=0 and role=ClusterHead 
2  then Send MP＜coordClusterHead,  
  distAnchorGateway＞to all Neighbor  
  Clusters’ Cluster Head 
              correct =true 
3  Send dinateMemberCoor  to all Cluster  
  Member 
4 else if 0≠minNodeID , role = ClusterHead,  
  and flasecorrect =   
5  then Wait for Merge Message 
6   Calculate the rotation angle 
7   Calculate all members’ coordination 
   again 
8   Send dinateMemberCoor  to all 
    Cluster Member 
9   truecorrect =  
10   Send m＜coordClusterHead,  
   distAnchorGateway＞to all Neighbor 
   Clusters’ Cluster Head 
11 else Wait for coordination information 
International Conference on Communications (ICC2003), vol. 1, pp. 
338-342, May 2003. 
 
[12] Richard Neapolitan and Kumarss Naimipour, Foundations of 
Algorithms Using C++ Pseudocode, Jones and Bartlett Publishers, 
1998. 
 
[13] Andrew R. Webb, Statistical Pattern Recognition 2/e, John 
Wiley and Son. Ltd., 2002. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
