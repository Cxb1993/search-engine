2 
 
1. 前言 
無線感測網路[1]是由很多微小的感測點所組成，散佈在某一特定的區域內去執行特定的
任務，這些感測點具有感測、資料收集、處理資訊及傳送資料的能力，而且都是以電池來提
供所需電力，一旦電力消耗完畢便不易替換電池，所以只能做比較簡單的運算和傳送資料。
無線感測網路的應用與議題非常廣泛，如在軍事、民生醫療、自然生態及科學研究...等
[3-6][9][11][13][17]，其目的大多是要藉由感測點所感測到的資料來加以處理或利用，也就是
在使用者需求的區域內，收集資料再以特定的通訊協定傳回到基地台或 sink(以下統稱為匯集
點)，以供觀察或分析。因此，將感測到的資料有效率的傳送回匯集點便是無線給測網路中最
基本也最重要的議題之一。Data gathering的議題就是探討感測點將感測資料傳回匯集點的機
制與架構[7][8][18]，其主要目的是希望能減低或平衡電量消耗、提升資料傳送的即時性或是
延長網路的存活時間；而在 data gathering的應用中，大部分都是全部(或多個)感測點將感測
資料回傳至匯集點，這種行為便是 convergecast[2][12][14][19][20]，其運作方式可視為broadcast
或 multicast的反向操作，如圖 1。 
 
 
圖 1 broadcast與 convergecast傳送方式 
2. 研究目的 
本計畫利用簡單的階層化架構，針對 all-to-one及 many-to-one不同的 convergecast環境，
考慮匯集點在感測區域內或是感測區域外不同的應用，分別設計有效的資料收集機制，以有
效利用感測點電量並減低資料收集的延遲。在 all-to-one的 convergecast環境下，我們利用叢
集技術將網路階層化，叢集管理者透過 multi-hop傳送方式，將收集到的資料全部匯集到一個
群組管理者，最後再由群組管理者選擇適當的叢集成員將資料傳回到匯集點，以達到減低並
平衡電量消耗的效果。在 many-to-one的 convergecast環境中，由於並非所有感測點都需要將
資料回傳至匯集點，因此我們將網路中有資料要回傳的感測點所在的鄰近區域局部叢集化，
藉此將需要回傳資料的感測點整合，以便建立較佳的路徑，減少不必要的感測點之電量消耗，
並降低資料傳送的延遲。當匯集點位置在感測區域外時，自感測區域中劃分一距離匯集點較
近的特定區域(定義為臨界區)，於該區域中選擇一個感測點當作虛擬匯集點，考量延遲及電
量以建立虛擬匯集點與網路中需回傳資料的感測點間的路徑。藉由適當的調整臨界區範圍並
設計虛擬匯集點的選擇及輪替機制，來平衡感測點的電量消耗並延長網路的存活時間。 
3. Convergecast機制 
本計畫設計的方法分為 all-to-one和 many-to-one兩種情況，並再依匯集點在感測區域內
或外各別來探討。和大部分的文獻相同，我們針對感測點不具移動性，且可調整傳輸半徑的
環境下，根據不同應用與需求，設計出能節省電量消耗以延長網路存活時間的有效
convergecast。 
 
 
4 
 
匯集點在感測區域外，為了延長群組管理者的存活時間，我們以其叢集內的各點輪流擔任
將資料傳回給匯集點的工作，以減少群組管理者的負擔。 
 
   
 
3.1.3 網路維護 
當感測點因為電量耗盡而失去作用時，便可能影響 convergecast 之進行，因此我們根
據不同角色的感測點分別提出如下之維護。 
(a)叢集成員：因叢集成員失效並不影響叢集架構，故其不需做任何動作。 
(b)叢集管理者：當叢集管理者失效時，從叢集成員裡面找一個離自己最近的感測點來
接替叢集管理者的任務。若是叢集的成員都失效了，則通知所有的子節點各自從鄰近的叢
集管理者中，選擇一個 hop數小於等於自己者，再將收集完的資料傳送給此新找尋之父節
點，如圖 6中，點 A失效且叢集成員也都失效了，其所有子節點(點 E、F)便尋找鄰近叢集
管理者中，hop數小於或是等於自己者，例如點 E找到點 C為新的父節點；點 F找到點 H
為新的父節點。若找尋到鄰近叢集管理者 hop數都大於失效叢集管理者的子節點，則失效
的叢集管理者通知其子節點增加傳送半徑以直接將資料傳給失效叢集管理者的父節點，如
圖 7中，點 C失效時，點 C的子節點 D找不到 hop數小於或等於點 D的 hop數，則點 D
增加傳送半徑直接傳給點 I。 
(c)群組管理者：當群組管理者將失效時(如圖 8 中點 B)，可從叢集成員裡找一個離自
己最近的感測點來接替群組管理者，並通知其子節點(點 I、O、M、L、K)。若是叢集的成
員都失效了，則從可溝通到的鄰近叢集管理者中，挑選剩餘能量最多的叢集管理者來接替
 
圖 5 群組管理者廣播訊息 
 
 
圖 4 根節點所建立之圖形 (B被選為群組管
理者) 
 
 
 
圖 3 A、B、C為根節點 
 
2
4
4
2
4
5
4
4
4
6
4
2
3
5
3
4
4
2
3
5
1
D
A B
CEF
 
圖 2 匯集點在感測區內的 convergecast 
 
3
3
3
3
2
2
2
1
1
B
1
1
2
1
匯集點
1
6 
 
  
圖 9 匯集點的廣播與局部叢集架構      圖 10 以最短路徑為考量的 convergecast 
(3)Convergecasting 方法二：由於感測網路中有很多應用對資料傳送延遲的容忍時間
較寬鬆，因此在第二個方法中，我們不用最短路徑的方式，而是希望每個叢集若能在一個
h-hop 距離內，找到可以攀附的轉送點或是叢集，則不另建其至匯集點的路徑，以減少整
個網路中的轉送點，並達到節省電量的效果。每個叢集管理者根據其至匯集點的 hop數決
定一等待時間 t=[0~T]，越靠近匯集點的叢集，此 t值越大；越遠離匯集點的叢集，其 t值
則越小。叢集之等待時間 t 結束後，先以系統設定的參數 h 搜尋鄰近 h-hop 內是否有叢集
或是轉送點，若順利搜尋到，則將感測資料以這條新搜尋到的路徑傳送，若無法搜尋到，
則以自己記錄的最短路徑將資料回傳至匯集點。轉送點的設定及 K值的維護與前一節中的
方法相似。在圖 11 中，考慮點 A的情形，若以最短路徑方式建立資料傳送路徑，則點 A
會透過點 C將資料傳送至匯集點，如此雖然達到路徑較短的好處，但卻因此額外增加了不
少感測點作為轉送點，而消耗更多額外感測點的電量，若使用局部搜尋機制，則點 A會找
到鄰居點 B幫忙傳送資料，在合理的路徑長度容忍下，便不用增加額外的轉送點，進而達
到整體網路較佳的電量消耗。此方法中的參數 h值若設定較大，則感測點將會較容易找到
已經建立的路徑進而減少轉送點的數目，而達到整體網路較少的電量消耗，相對的，若將
該參數設定較小，由於不容易找到其他成員點已建立的路徑，因此有較大的機會以最短路
徑的方式建立路徑，來達到較佳的傳送延遲。 
 
 
圖 11 考慮電量消耗與時間延遲平衡的 convergecast 
(4)網路維護：當路徑因感測點失效而斷裂時，感測點會以局部搜尋的方式廣播路徑搜
尋封包至 m-hop，以期越過失效的感測點並接回原路徑，m 值的設定可依不同的網路環境
來決定，若 m-hop內無法接回原路徑，則藉由最初在匯集點廣播時記載的 hop數來選擇次
短的路徑，將資料依此路徑回傳，並設定中間點為新的轉送點，更新相關的 K值，而原先
路徑上的轉送點則在一回合的時間到達後，若沒有收到下游成員點的資料，便會放棄轉送
點的角色而成為一般感測點。 
 
5
5
3
2
2
4
3
5 6
4
5
2
5
1
2
3
4
6
3
5
7
1
2
1
CH
CH
CH
CH
6
4
數字表示離匯集點hop數
CH
匯集點
成員點
叢集管理者
匯集點廣播
 
 
8 
 
  
(5)網路維護：當網路運作一段時間後，感測點可能因電量耗盡而失效，此時便需要維
護機制來維持網路的正常運作。若感測點失效而造成路徑斷裂，和 3.2.1 節中匯集點在感
測區域內的情形相似。當虛擬匯集點無法自臨界區域中找到適當的點將感測資料傳回至匯
集點時，則由虛擬匯集點自己將感測資料傳回至匯集點；此外，若虛擬匯集點電量耗盡時，
會先由臨界區域中找一適當的感測點取代其角色，並以局部搜尋的方式接回原路徑，以避
免重新建立路徑至成員點的電量消耗，若臨界區域中沒有其他點可代替其角色時，則用局
部搜尋的方式尋找臨界區域外適當的點以替代其角色，並負責路徑的修復。 
4. 實驗模擬與討論 
針對 all-to-one的環境，我們與 LEACH[10]、HIT與HITm(即HIT之多個叢集)[8]及 TPC[7]
做比較。在 many-to-one的環境，我們與 TEEN[15]及 HTEEN[16]做比較。由於 LEACH是目
前最具代表的叢集架構資料收集機制；而 HIT及 HITm也是使用叢集架構，但叢集內的感測
點採用 multi-hop的方式傳送至叢集管理者，以節省感測點電量的消耗；TPC亦是使用叢集架
構，叢集內的感測點則採用鍊狀架構傳回至叢集管理者，以節省電量的消耗及叢集管理者的
負擔；TEEN則是以 LEACH的架構為基礎，將網路分成多個叢集，當感測點感測的資料超過
系統定義的 threshold 值時，才將感測資料回傳；HTEEN 則是將 TEEN 方法中的叢集管理者
做階層化，以進一步減少電量消耗。在模擬環境中，假設感測點是隨機分布且不具移動性，
初始電量都相同且具調整傳送半徑的能力。此外，每個點都具有資料融合的能力，能將多個
k bit大小的封包融合成一個 k bit大小的封包。其他相關參數設定如網路範圍為 100m´100m，
感測點數為 200及 400點，初始傳送半徑為 20m，模擬次數為 100次取平均，電量消耗模組
是根據[10]所提出的 First Order Radio Model。我們針對各個方法的整體機制進行效能比較，
項目說明如下：(1)回合數(rounds)－網路中所有存活的感測點成功將感測資料傳回匯集點一
次，我們稱之為一個回合。我們將分別統計網路第一個點失效以及 10%、20%、50%、60%、
70%、80%、90%和最後一個點失效時所工作的回合數。(2)傳送時間(delay)－我們定義每 1-hop
的資料傳送需要一個單位的時間，傳送時間則定義為完成一回合資料收集所需花費的平均單
位時間。(3)每回合平均總電量消耗(total energy consumption per round)－網路中尚未有感測
點失效時，計算平均每一回合完成資料收集並傳回基地台所需消耗之總電量。 
4.1 All-to-One之模擬 
我們與 LEACH、TPC、HIT及 HITm比較效能，分為匯集點在感測區外面及裡面、初
始電量為 0.5J來進行模擬，LEACH及 HITm叢集管理者的比例為 5%。圖 16與圖 17為失
效點百分比與回合數之關係圖，當匯集點在感測區外且不同網路密度環境下，我們的方法
 
圖 15 考慮電量消耗與時間延遲平衡 
 
 
圖 14 以最短路徑為考量 
 
5
5
3
2
2
4
3
5 6
4
5
2
5
1
2
3
4
6
3
5
7
1
2
1
K=4
K=2
K=1
K=1
K=2
CH
CH
CH
CH
CH
K=4
匯集點
虛擬匯集點
成員點
叢集管理者
convergecasting
轉送點
6
4
K=1
2
數字表示離虛擬匯集點的hop數
10 
 
  
圖 22與圖 23分別為匯集點在感測區外及感測區內，平均每回合電量消耗與點數之關
係圖。當匯集點在感測區外時，在 LEACH、HITm 與 TPC 方法中，所有叢集管理者每回
合皆需將資料傳回到匯集點，因此會消耗較多的電量，而我們的方法則是每回合只有一個
叢集管理者(群組管理者)將資料傳回匯集點，因此我們消耗較少的電量。而 HIT 亦是只有
一個叢集管理者將資料傳回匯集點，且叢集內的感測點形成樹狀架構，因此也有不錯的電
量消耗，但相較於我們的方法，其延遲時間便相當可觀。當匯集點在感測區內時，LEACH
的叢集成員是直接傳送給叢集管理者，因此消耗的電量是最多的；HITm 則是以樹狀架構
傳送，所以電量消耗是次多；TPC是形成鍊狀架構，因此電量消耗又較 HITm少；HIT則
是將整個網路視為一個叢集，叢集內形成一棵樹，因此其電量消耗有最佳的表現。 
 
  
4.2 Many-to-One之模擬 
我們設定感測點初始電量為 0.25J，L=10m(感測區域邊長的 10%)，並在不同成員點百
分比的環境下變化 h-hop及 m-hop，找出較為適當的值。 
圖 24 與圖 25 為 many-to-one 的方法一(shortest)當匯集點在感測區外面及裡面，變化
m-hop 的回合數關係圖，由圖中可知當匯集點在感測區外的時候，m-hop=2 的回合數有最
佳的表現；匯集點在感測區內的時候，m-hop=1的表現最好。當 m-hop值太大時，因為找
到的路徑太長，反而造成更多額外的電量消耗，因此在往後的模擬，當匯集點在感測區外
時，方法一(shortest)設定其 m-hop=2，匯集點在感測區內時，則設定 m-hop=1。圖 26及圖
27 為 many-to-one 的方法二(share)變化 h-hop 及 m-hop 之回合數關係圖，當匯集點在感測
區外時，在 30%成員點的情況下，不同 h-hop與m-hop值表現都不錯，其中 h-hop=2、m-hop=5
回合數的表現較佳或次佳，所以我們選擇 h-hop=2，m-hop=5；當匯集點在感測區內時，則
是選擇 h-hop=2，m-hop=3。 
圖 23 平均每回合電量消耗與點數之 
關係圖 (匯集點在內) 
0
0.1
0.2
0.3
0.4
0.5
200 400 800
Number of Nodes
E
n
e
rg
y
 (
J)
LEACH HIT HITm
TPC Ours
圖 22 平均每回合電量消耗與點數之 
關係圖 (匯集點在外) 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
200 400 800
Number of Nodes
E
n
er
g
y 
(J
)
LEACH HIT HITm
TPC Ours
圖 21 傳送時間與點數之關係圖 
(匯集點在內) 
0
5
10
15
20
25
30
200 400 800
Number of Nodes
D
e
la
y
LEACH HIT HITm
TPC Ours
圖 20 傳送時間與點數之關係圖 
(匯集點在外) 
0
5
10
15
20
25
30
200 400 800
Number of Nodes
D
e
la
y
LEACH HIT HITm
TPC Ours
12 
 
   
圖 32及圖 33為傳送時間與點數之關係圖。當匯集點在感測區外時，由於 TEEN的叢
集管理者是直接傳回匯集點，其 delay 是最低的，但也因而消耗許多電量。當網路密度較
稀疏時(200點)，HTEEN的 delay亦會比我們兩個方法低，但是當網路密度較密時，HTEEN
則因為叢集管理者之間形成多個 level，反而導致 delay 增加。我們的第二個方法(share)則
因為找尋共同路徑，所以 delay會較第一個方法(shortest)高。而當匯集點在感測區內時，我
們第一個方法(shortest)的 delay比建構多層 level的 HTEEN還要低，隨著網路密度增加時，
HTEEN的 delay也會變得更差。 
 
   
圖 34及圖 35為平均每回合電量消耗。當匯集點在感測區外，成員點百分比的為 30%
時，我們方法所消耗的電量小於 TEEN 及 HTEEN。當匯集點在感測區內時，我們方法的
電量消耗明顯小於 TEEN、HTEEN，此外，由於匯集點在感測區內時感測點的傳送距離較
短，因此直接傳送的電量消耗比較省，故 TEEN的電量消耗比 HTEEN還要低。 
 
   
 
圖 35 平均每回合電量消耗與點數之關係圖 
(匯集點在內) 
0
0.04
0.08
0.12
0.16
200 400 800
Number of Nodes
E
n
e
rg
y
 (
J)
TEEN HTEEN
Ours_shortest Ours_share
 
圖 34 平均每回合電量消耗與點數之關係圖 
(匯集點在外) 
0
0.05
0.1
0.15
0.2
0.25
0.3
200 400 800
Number of Nodes
E
ne
rg
y 
(J
)
TEEN HTEEN
Ours_shortest Ours_share
圖 33 傳送時間與點數之關係圖 
(匯集點在內) 
0
2
4
6
8
200 400 800
Number of Nodes
D
el
ay
TEEN HTEEN Ours_shortest Ours_share
圖 32 傳送時間與點數之關係圖 
(匯集點在外) 
0
2
4
6
8
10
200 400 800
Number of Nodes
D
e
la
y
TEEN HTEEN Ours_shortest Ours_share
圖 31 失效點百分比與回合數之關係圖 
(400點，匯集點在內) 
0
500
1000
1500
2000
2500
3000
1st 10% 20% 50% 60% 70% 80% 90% 100%
Nodes Death Percentage
N
u
m
b
e
r 
o
f 
R
o
u
n
d
s
TEEN HTEEN
Ours_shortest Ours_share
圖 30 失效點百分比與回合數之關係圖 
(200點，匯集點在內) 
0
500
1000
1500
2000
2500
3000
1st 10% 20% 50% 60% 70% 80% 90% 100%
Nodes Death Percentage
N
u
m
b
e
r 
o
f 
R
o
u
n
d
s
TEEN HTEEN
Ours_shortest Ours_share
14 
 
[15] A. Manjeshwar, and D. P. Agrawal, “TEEN: A Routing Protocol for Enhanced Efficiency in Wireless Sensor 
Networks,” Proceedings of the 15th International Conference on Parallel and Distributed Processing 
Symposium, pp. 2009-2015 Apr. 2001. 
[16] S. Nikoletseas, I. Chatzigiannakis, A. Antoniou, and G. Mylonas, “Energy Efficient Protocols for Sensing 
Multiple Events in Smart Dust Networks,” Proceedings of the 37th Annual Simulation Symposium, pp. 15-24, 
April 2004. 
[17] G. J. Pottie, and W. J. Kaiser, “Wireless integrated network sensors,” Communications of the ACM, Vol. 43, No. 
5, pp. 551-558, May 2000. 
[18] N. Thepvilojanapong, Y. Tobe, and K. Sezaki, “On the construction of efficient data gathering tree in wireless 
sensor networks,” IEEE International Symposium on Circuits and Systems, Vol. 1, pp. 648–651, May 2005. 
[19] S. Upadhyayula, V. Annamalai, S.K.S. Gupta, “A low-latency and energy-efficient algorithm for convergecast in 
wireless sensor networks,” Proceedings of Global Telecommunications Conference, Vol.6, pp. 3525-3530, Dec. 
2003. 
[20] H. W. Zhang, A. Arora, Y. R. Choi, M. G. Gouda, “Reliable bursty convergecast in wireless sensor networks,” 
Proceedings of the 6th ACM international symposium on Mobile ad hoc networking and computing MobiHoc, pp. 
266-276, 2005. 
 
 
