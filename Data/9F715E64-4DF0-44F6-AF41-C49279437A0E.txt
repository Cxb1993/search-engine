 2
行政院國家科學委員會專題研究計畫成果報告 
國科會專題研究計畫成果報告撰寫格式說明 
Preparation of NSC Project Reports 
計畫編號：NSC 94-2213-E-194-040 
執行期限：94年 8月 1日至 95年 7月 31日 
主持人：吳  帆   國立中正大學資訊管理學系 
計畫參與人員：羅澤青、郭宥炘 國立中正大學資訊管理學所 
 
 
一、中文摘要 
 
網路服務的出現提供了軟體工程師能使用已
經發佈在網路上的軟體元件來建置他們的系統。
UDDI是描述網路服務的語言，主要用來建立網路
服務的目錄，提供此網路服務的相關資訊，供使
用者對此服務的辨識以取得網路服務。然而隨著
網路服務愈來愈普及，如何找到適合的服務，即
網路服務的尋找與適合性排序，已愈來愈重要。
過去只利用在UDDI上關鍵字搜尋網路服務，並不
能有效地找到使用者所需要服務，因此網路服務
的搜尋與排序，是一有待解決的議題。 
目前的網路服務描述語言是以WSDL為主要
標準，因為WSDL使用XML結構並可自訂標籤，
因此我們可以根據WSDL內的描述性質建立分類
樹。在此研究中，我們提出一個以本體論為基礎
的網路服務的尋找與適合性排序，我們先以至
UDDI server以服務需求者所提出的服務需求搜
尋，將搜尋結果建立本體樹，然後將搜尋結果與
服務需求以所建立之本體樹來進行比對，以找出
符合使用者需求的服務。本研究提出三個尺度的
比對方法，這三個尺度的比對分別為文字比對、
功能比對和參數比對，各個尺度分別針對一種網
路服務的主要特徵來進行比較，我們綜合這三個
尺度的比對以及我們所提出的排序機制，來幫助
服務需求者找出並排序符合其需求的網路服務。 
 
關鍵詞：網路服務、WSDL、UDDI、本體論、網
路服務排序。  
 
Abstract 
The emerging of web services relieve the 
software engineers in building their programs since 
they can finish the programs by piling the web 
services, as blocks, provided by others. UDDI 
(Universal Discovery, Description and Integration) is 
a language to describe the web service, as is used to 
form the directory of the web service and provide the 
information about the web service. With the 
directory, the clients can recognize and access the 
web services they needed. With the popularity of web 
services, how to find a suitable web services for 
clients, namely, searching and ranking them, is more 
crucial in the Service-Oriented Architecture (SOA). 
In the past, the search of web services is only based 
on the keyword matching, which can not provide 
effective web service to clients. Clearly, an effective 
and efficient search and ranking is a problem to be 
solved. 
WSDL (Web Service Description Language) is 
the mainly used language, which is an XML-like 
language with abundant user-defined tags. The tags 
in WSDL are written by human to describe the traits 
of the web service and, obviously, the tags used in 
the WSDL can be classified into some classifying 
tree. In this research, we proposed a search and 
ranking strategy based on the ontology. We first send 
the requests traits to the UDDI server and then get 
the candidate web services. From the candidate web 
services, we do not return to user directly; instead, 
we construct an ontology-tree and rank the candidate 
web services based on this ontology-tree to find the 
suitable web service. Three metrics, namely, text 
matching, function matching and parameter 
matching, are proposed. Combing the three metrics, 
we rank the candidate web services to provide a 
more suitable web service to the clients.  
 
Keywords: Web service, WSDL, UDDI, ontology, 
ranking of Web service.  
 
二、緣由與目的 
 
Web Service is a platform-independent software 
component, providing service functionalities to 
clients who invoke it. The clients only need to 
concentrate on what work the web services can do 
rather than how they do their work. To make the web 
services understandable by the client machines, 
services must provide the semantic descriptions of 
their functionalities, parameters number, data type, 
and so on. The web services stack of standards is 
designed to support the interoperability of software 
components on the web [1]. The recent advent of 
web service technologies, such as SOAP [2], WSDL 
[3], and UDDI [4], has evolved to help about how 
distributed applications can connect and work 
together in an increasingly dynamic way. The 
 4
computing the similarity between requirement and 
advertisement vectors. A vector matching operation, 
based on the cosine correlation is used to measure 
the degree of similarity between requirement and 
advertisement vectors. The result degree of the 
similarity can be used to rank the documents.  
∑×∑
∑ ×=
×
⋅=
==
=
→→
→→
n
j qj
n
j ij
n
j qjij
i
i
i
ww
ww
qd
qd
qdsim
1
2
,1
2
,
1 ,,),(
. 
 
The above three metrics produce three matching 
scores between the requirement and the 
advertisement. The proposed three-metric matching 
approach is implemented to develop our semantic 
matching system. We first load the advertisements 
from WSDL and receive the requirements. We then 
get the ontology and start the text matching. The 
capability matching and the parameter matching are 
performed subsequently. Finally, we return the 
ranking results of the candidate web service.  
To evaluate the proposed approach, we compare 
our system with the Semantic Structure Matching 
system developed by Wang [12]. We follow the 
design of the environment in his experiment and 
compare the result of our experiment. Each 
advertisement is picked to compare the requirement 
and the precision and the recall is calculated 
according to the number of relevant services of the 
returned lists of services. The result of Wang’s 
experiment is shown in table 1. We set up the same 
experiment environment with Wang’s. The result of 
ours is shown in table 2. The tables show our 
approach is superior to Wang’s in finding the 
desired services with higher precision and lower risk 
missing the services. 
 
Table 1. The precision and recall presented by 
Wang’s Semantic Structure Matching system [12] 
 
Category Precision Recall 
Currency Rate 
Converter 
60% 100% 
DNA info 
Searcher 
100% 100% 
Email Address 
Verifier 
60% 100% 
Stock Quote 
Finder 
80% 100% 
Weather Info 
Finder 
80% 75% 
   
 
Table 2. The precision and recall presented of ours 
 
Category Precision Recall 
Currency Rate 
Converter 
72% 99% 
DNA info 100% 98% 
Searcher 
Email Address 
Verifier 
97% 100% 
Stock Quote 
Finder 
81% 100% 
Weather Info 
Finder 
99% 93% 
 
 
四、結論與建議 
 
As the e-commerce grows exponentially, it has 
become a crucial problem to provide effective and 
reliable program to increase the speed and precision 
of automation. The search and ranking for candidate 
web service has become the crucial problem. Since 
WSDL is described in XML, semi-structure 
characteristics of XML can be used in the automatic 
search. The hot usage of the web is web 2.0, which 
can be automatically search the required information 
in the Web. We build a three-metrics ranking 
approach according to the properties of web services. 
With the capability of estimating the distance 
between advertisement and requirement provide a 
reasonable ranking mechanism, we can provide a 
more suitable web service to the clients. The 
simulation is performed and shown that our method 
can effectively search and rank the proper order of 
web services. Our results are superior to Wang’s in 
finding the desired services with higher precision 
and lower risk missing the services. 
 
五、參考文獻 
 
[1] Y. Wang and E. Stroulia, “Flexible interface 
matching for Web-service discovery,” in 
Proceedings of the Fourth International 
Conference on Web Information Systems 
Engineering (WISE’03), 2003, pp. 147-156.  
[2] M. Gudgin, M. Hadley, N. Mendelsohn, J. J. 
Moreau, and H. F. Nielsen. Simple Object Access 
Protocol (SOAP) 1.2. http://www.w3.org/TR/ 
soap12-part1/, June, 2003. 
[3] E. Christensen, F. Curbera, G.. Meredith, and S. 
Weerawarana. Web Services Description 
Language (WSDL) 1.1. http://www.w3.org/TR/ 
wsdl, March, 2001. 
[4] L. Clement, A. Hately, C. V. Riegen, T. Rogers. 
UDDI (Universal Description, Discovery & 
Integration), http://uddi.org/pubs/uddiv3.htm. 
[5] Jinsoo Park, Sudha Ram, “Information Systems 
Interoperability：What Lies Beneath?” ACM 
Transactions on Information Systems, vol.22, 
No.4, October, pp. 595-632, 2004.  
[6] D. A. Chappell and T. Jewell, Java Web Services, 
O’REILLY, 2002. 
[7] Park Seoyoung and Wu Chisu, “Intelligent 
search agent for software components”, in the 
Proceeding of Sixth Asia Pacific, Software 
1 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 94-2213-E-194-040 
計畫名稱 以語意與結構為基礎的網路服務搜尋與排序 
出國人員姓名 
服務機關及職稱 吳  帆國立中正大學資訊管理學系副教授 
會議時間地點  2005/12/05-2005/12/09, Hong Kong 
會議名稱 The Fifth International Conference on Electronic Business 
發表論文題目 Searching and Ranking the Suitable Web Services with the Ontology-based Measurements 
 
一、參加會議經過 
 
2005年第五屆國際電子商務研討會 (The Fifth International Conference 
on Electronic Business) 是一年一度討論有關電子商務在技術與管理面上最新
發展之國際大型學術研討會，於 2005年十二月五日至十二月九日在香港中文大
學主辦，在香港喜來登飯店舉行。年度主題是透過電子商務強化後勤與供應鏈之
競爭力(Enhancing Logistics and Supply Chain Competence through e-Business)。喜
來登飯店在九龍半島靠香港島的靠海邊，下機場搭機場快線約半小時就到了，前
兩天主要為博班學生論文研討會。後三天才為正式的研討會。會議採論文發表進
行，論文發表分 4 個場地進行，將研究成果供與會學者共同評論。筆者參加的
track是網路智慧與以網路為基礎的資訊科技(web Intelligence & Web Based 
Information Technology)，現場出席者估計有 150 餘國際知名學者參與，會
議可說相當充實與成功。由於會場在香港，與會學者主要還是來自亞洲國家。筆
者所發表的論文為對網路服務的搜尋與排序，被安排在十二月八日下午發表，此
篇文章引發相同領域學者之討論，並針對它績效均有熱烈討論，給予筆者相當寶
貴的意見，均日後研究參考。至於前幾天則前去聽其他學者發表的論文，包括資
料倉儲與資料掘礦，行動商務與行動商業等，有部份學者的見解十分精譬，非常
值得聆聽。 
 
二、與會心得 
3 
Searching and Ranking the Suitable Web Services with the 
Ontology-based Measurements 
  
Jiumn Rong Lin, T.Chin Lo, and Fan Wu* 
 
Institution for Information Industry, Taipei, 101, Taiwan 
Department of Information Management, National Chung-Cheng University,  
Chia-Yi, 621, Taiwan 
 
Corresponding author. Tel: +886-5-2721500; fax: +886-5-2721501. 
Email address: kfwu@mis.ccu.edu.tw (F. Wu). 
 
Abstract 
One of the major problems for seamlessly electronic business is how to find 
a suitable web services. Only the syntax and semantic comparison do not precisely 
find the suitable web services for they are procedures embedded with a  
complicated thought. In this paper, we propose an effective approach based on the 
ontology to solve this problem. With the help of ontology-based metrics, we can 
measure a web service matching degree to a given request and determine the rank in 
which the advertisement matches the request. Simulations are also performed, and 
the results show that our method can have a good precision and recall rate.  
 
1. Introduction 
The web services stack of standards is designed to support the reuse and the 
interoperability of software components on the web [1]. The promise of web services 
5 
with a core set of markup language constructs for describing the properties and 
capabilities of those Web services in an unambiguous and computer-interpretable 
form [10]. Though the web description is more expressive, the matching between the 
request and the web provider is not discussed until now. In this paper, we use OWL-S 
to complement WSDL for web services descriptions and propose an approach to make 
matchmaking between the requirements and the advertisements of the web services.  
  A web service can be formally defined as three main elements: {S, C, E}, where S, 
C and E denote the content descriptions, the capabilities, and the properties of end 
points respectively [11]. The content descriptions refer to what the web service is 
commented about such as the text description of the service; the capabilities refer to 
what the functionalities that the service provides such as what requirement is needed 
for performing the service and how the service performs; the properties of end points 
are related to the information and constraints of the end point such as cost, payment 
ways, response time, etc. The main elements of web services can be described by the 
service description language such as WSDL or OWL-S. If these main elements of the 
requested services are similar to those of the advertised services, we can allege that 
they are matched. 
Former researchers consider what requirement is needed for performing the 
service and how the service performs as the service capabilities [3, 6]. However, the 
capabilities of web services become more complex and can not be just defined 
according to all inputs and outputs of the web services. In this paper, a complete web 
services discovery approach, which compares the degree of similarity between 
requirements and advertisements according to the whole main elements of web 
services, is proposed. The proposed approach is a three-metric matching approach, 
including text matching, construction matching, and parameter matching. Each metric 
is used for examining one kind of main elements of web services between 
7 
comparison of the function types and argument types between the components and the 
query specified by the user, as is the practical approach. In the area of web services 
discovery for web services discovery, many researchers also claim that services 
discovery should base on the match between a declarative description of the service 
being sought and a description of the service being offered [1, 3, 4, 5, 6]. Note that in 
this paper, the declarative description of the service being sought is called 
“requirement” and the one of the service being offered is called “advertisement”. 
Ontology defines the common words in a specified domain and the relationships 
between the words to represent the knowledge of the specified domain. The OWL 
Web Ontology Language is the W3C recommended language used to define ontology. 
The purpose of OWL is to describe the knowledge in specified domains and the 
relationships between words in each domain can be interpreted by a machine without 
human support. OWL has more facilities for expressing semantics than XML 
(eXtensible Markup Language) and RDF (Resource Description Framework), and 
thus OWL goes beyond these languages in its ability to represent machine 
interpretable content on the Web. There are three sublanguages provided by OWL to 
define ontologies with three different degrees of expressive abilities. The three 
sublanguages are OWL Lite, OWL DL and OWL Full. OWL Full is the powerful 
expressive one and OWL Lite is the simplified expressive one. For each of these 
sublanguages, the preceding one is the descendant of the rear one. What can be 
expressed validly in the descendant can also be expressed validly in the elder 
generation.  
OWL-S (Web Ontology Language for Services) is developed by the OWL Services 
Coalition for describing the ontology of web services. OWL-S defines the overall 
structure of the ontology and is divided into three parts: Service Profile, Service 
Process Model and Service Grounding. The part of Service Profile defines the 
9 
  Paolucci [3] proposed the semantic web services matching based on services 
capabilities. Many researchers have cited the proposed concept for making a semantic 
web services matchmaking. The criterion used by this approach is the service 
capability. The proposed approach is good at the matching of the service capabilities 
but is weak for using only one criterion for matching. 
  Sirin [6] proposed two filters for selecting semantic web services including the 
input/output matching and the parameter matching. The proposed approach uses the 
criteria of capabilities and properties of end points to make a semantic web services 
matching. However the lack of the criteria including content descriptions and the 
service construction will reduce the precision and recall of the matching. The 
following table shows the comparison of these approaches. 
 
Table 1. The comparison of the related research 
 Service 
description 
language 
Criteria 
 
Matching approach 
 
Publishing 
Year 
Wang [1] 
 
WSDL 
 
Content 
descriptions; 
Capabilities; 
Construction 
Vector-space model; 
Structure matching 
2003 
Paolucci 
[3] 
DAML-S Capabilities Semantic matching 
approach 
2002 
Sirin [6] 
 
OWL-S 
 
Capabilities; 
End point 
information 
Semantic matching 
approach; Parameter 
matching 
2003 
 
III. Ontology-based Comparison Approach 
This paper proposes a three-metric matching approach for finding suitable web 
services for requesters according to the criteria of content descriptions, service 
capabilities, service construction and properties of end points. The three metrics 
includes text matching, construction matching, and parameter-matching. The first 
11 
iijij idftfW = ; 
)/(log2 ii dfNidf = ; 
where ijW  represents the weight of the dimension i  in the vector. ijtf  represents 
the number of occurrences of the term i  in document j . iidf  represents the result 
of the total number of documents divided by the number of documents which contain 
the term i . N  represents the total number of the documents. idf  represents the 
number of documents which contain the term i .  
For restraining the impact of iidf , 2log  is used to dampen the effect relative to 
iidf [13]. Thus we have two vectors respectively for the requirement and the 
advertisement, and we can derive the similarity coefficient of the two vectors from the 
production of them. For each advertisement, our approach will return a similarity 
coefficient derived from the comparison. The derived similarity coefficient is the 
matching score of the text matching.  
3.2 Construction Matching 
The construction matching is the consideration of which processes the inputs and 
outputs belong to. In the construction matching, we utilize the information provided 
by Service Process Model of OWL-S. The comparison of the construction is a 
multi-step process: it involves the comparison of the processes between the 
requirement and the advertisement, which is based on the comparison of the 
compositions of the inputs and outputs within the processes. In the input/output 
matching, we compare all the inputs and outputs between the requirement and the 
advertisement. In the construction matching, we compare all of the inputs and outputs 
within one process in the requirement to all of the inputs and outputs within one 
process in the advertisement. Therefore we can get the matching score of each 
pair-wise process between the requirement and the advertisement. The pair-wise 
13 
level is defined as score 6; the Subsume level is defined as score 4; the Fail level is 
defined as score 0. Finally we accumulate each matching scores and the total score 
represent for the matching degree of the parameter matching.  
3.4 Ranking System 
The three metrics introduced above can produce three scores for representing the 
matching degree between the requirement and the advertisement. First we can utilize 
the two scores derived from text matching and input/output matching to filter the most 
irrelevant advertisements. We use the formulation to representing how it works. 
Relevant Score 2211 ** SWSW += , 
where 1W  and 2W  are used for normalizing 1S  and 2S  to avoid either of them 
influence the relevant score too much. 1S  and 2S  denote the scores derived from 
text matching and input/output matching respectively.  
We can set a threshold for the relevant score. If the relevant score between the 
requirement and the advertisement is higher than the threshold, the advertisement is 
considered as qualified for the candidates. After we have the candidates, we need to 
rank them according to their matching degree. We use the following formulation to 
represent how to do it. 
Matching Score=Relevant Score 4433 ** SWSW ++ , 
where 3W  and 4W  are used for normalizing 3S  and 4S  to avoid that either of 
them influence the matching score too much. 3S  and 4S  denote the scores derived 
from construction matching and parameter matching respectively. We can rank the 
qualified advertisements according to the matching scores in descending. Therefore 
we can return the suitable ranked services to the service requester. 
   
4. Evaluation Method 
  The proposed three metrics can be implemented to develop the matching system. 
15 
provides lots of web services for users to give a trial. We can collect the WSDL 
documents from the web site to form the advertised collection. Then we classify the 
collection into several categories. We take one advertisement from one of the 
categories as the requirement. After executing the comparison of the proposed 
approach, the matching system will return lists of suitable web services. If the 
returned service is same category with the requirement, we define that it is relevant. 
Otherwise, the returned service is not relevant. Based on the definition of the 
relevance, we can compute the precision and recall for our proposed approach. The 
way to compute the precision and recall is defined as follows:  
Precision = # of Relevant retrieve / # of Retrieve; 
Recall = # of Relevant retrieve / # of Relevant. 
The two metrics are chosen for the experiments. In the search for the web service, we 
limit up 5 UDDI server to be accessed. All the retrieval web services are ranked, and 
only the top 30 web services are returned by our web service search engine through 
the proposed criterion. The simulation results for the requests of 
“translation_from_mile_to_kilometer” and “translation_from_French_to_English” are 
summarized in Figures 2 and 3, respectively. From these two tables, we can find some 
interesting characteristics. First, we found the retrieval for the request 
“translation_from_mile_to_kilometer” has higher precision than that for the request 
the request “translation_from_French_to_English”. Since the former request has less 
descriptive vocabularies than that of the second one. Perhaps the metric of the text 
matching will let more possible web services to enter the second and third metric 
comparison. And the second and third metric can have a better rank ability for the 
simple request. However, the recall rate for the former request is smaller than that of 
the latter one. It is guessed that the former has less characteristic than the latter. The 
judge of similarity in the former is more difficult than the latter.  
17 
[2] D. A. Chappell and T. Jewell, Java Web Services, O’REILLY, 2002, pp. 63. 
[3] M. Paolucci, T. Kawamura, T. R. Payne, and K. Sycara, “Semantic Matching of 
Web Services Capabilities,” in Proceedings of the First International Semantic 
Web Conference on The Semantic Web (ISWC), 2002, pp. 333-347. 
[4] L. Li and I. Horrocks, “A software framework for matchmaking based on semantic 
web technology,” in Proceedings of the twelfth international conference on World 
Wide Web, 2003, pp. 331-339. 
[5] M. Paolucci and K. Sycara, “Autonomous Semantic Web services,” IEEE Internet 
computing, vol. 7, no. 5, Sep.-Oct. 2003, pp. 34-41. 
[6] E. Sirin, B. Parsia, and J. Hendler, “Filtering and Selecting Semantic Web Services 
with Interactive Composition Techniques,” Semantic Web Services, vol. 19 no. 
4, July-Aug. 2004, pp. 42-49.  
[7] V. Sugurmaran and V. Storey, “A Semantic-Based Approach to Component 
Retrieval,” ACM SIGMIS Database, vol. 34, no. 3, 2003, pp. 8-24. 
[8] S. A. McIlraith and D. L. Martin, “Bringing semantics to Web services,” IEEE 
Intelligent Systems, vol. 18, no. 1, Jan.-Feb. 2003, pp. 90-93. 
[9] OWL Web Ontology Language Overview. http://www.w3.org/TR/owl-features/ 
[10] OWL-S 1.1 Release. http://www.daml.org/services/owl-s/1.1/ 
[11] X. Gao, J. Yang, and M. P. Papazoglou, “The Capabilities Matching of Web 
Services,” in Proceedings of IEEE 4th International Symposium on Multimedia 
Software Engineering (MSE'2002), 2002, pp. 56-63. 
[12] D. A. Grossman and O. Frieder, Information Retrieval Algorithms and Heuristics, 
Kluwer Academic Publisher, 1998, pp.13-18. 
[13] G. Salton, A. Wong and C. S. Yang. “A vector-space model for information 
retrieval”, journal of the American Society for information Science, vol. 18, 
November 1975, pp. 13-620. 
