 - 2 - 
行政院國家科學委員會專題研究計畫成果報告 
植基於普適服務之本體論支援資訊代理殼之研究與發展 
（Research and development of an ontology-supported information agent shell for ubiquitous 
services） 
計畫編號：NSC98－2221－E－129－012 
執行期限：98 年 8 月 1 日至 99 年 7 月 31 日 
主持人：楊勝源 聖約翰科技大學電腦與通訊工程系 E-mail: ysy@mail.sju.edu.tw 
共同主持人：徐椿樑 聖約翰科技大學電機工程系 E-mail: liang@mail.sju.edu.tw 
計畫參與人員：吳冠緯、江洪鈞、林保宇、葉永茂 聖約翰科技大學電腦與通訊工程系 
摘要 
本報告旨在研發適用多數網際網路系統核心元件「資訊代
理殼」，並探究擴增其應用範疇的相關問題。本資訊代理殼具
備「資訊搜尋」、「資訊擷取」、「資訊分類」及「資訊呈現或排
序」四大功能。系統引用 Protégé 與相關 APIs 建構本體論及其
相關本體服務支援資訊代理殼的整體運作，一則落實資訊代理
殼在領域上的實務應用，發揮其資訊代理的最大功能；再則透
過本體論本身作為資訊分享及溝通上語意基礎，自動達到吸納
及融合相關領域本體，進而擴大資訊代理殼的應用範疇。資訊
代理殼內部更引進普適介面代理人，藉此探究本體式資訊代理
殼在普適環境下的相關問題。初步實驗亦展現出本雛型系統的
可行性。 
關鍵詞：資訊代理殼、本體論、普適服務。 
Abstract 
This report focused on the development of a core component 
called an “information agent shell,” IAS, applied in general Web 
systems. We also investigated problems related to the extension of 
the proposed component in a wide variety of application areas. 
The shell contains four main components: OntoCrawler, 
OntoExtractor, OntoClassifier, and OntoRecommender, which are 
responsible for information searching, information extracting, 
information classifying, and information representing/ranking, 
respectively. This system introduced Protégé and relevant APIs to 
construct the domain ontology and its related ontology services to 
support all of the operations of the shell. Not only can it carry out 
the practical applications of the shell and elaborate the maximum 
functions of the information agent, but OntoIAS can also extend 
the application areas of the information agent shell according to 
the ontology itself, allowing the semantic bases of information 
sharing and communication to automatically assimilate and 
integrate related ontologies. Inside the shell, the proposed method 
further introduces the ubiquitous interface agent to explore related 
problems of the ontology-supported information agent shell in 
ubiquitous environments. The preliminary experimental outcomes 
can also reveal the basic efficiencies of the proposed system. 
Keywords: Information Agent Shell, Ontology, Ubiquitous 
Services. 
1. 緒論 
「資訊」是一具有多樣意涵的概念，舉凡資料、知識、樣
版及表示等概念均屬資訊概念涵蓋的範躊。資訊本身更因電
腦、網路技術及網際網路的普及呈現出多樣的面貌與數量的爆
炸；多數人更提及資訊年代（Information Age）就是知識年代
（Knowledge Age）或知識社會（Knowledge Society）。因而，
如何協助使用者快速、精準與有效的取得適切及時下的資訊更
是近十年來產官學界戮力解決的首要目標。為此，資訊提供者
建構出諸多資訊擷取的工具，包括：搜尋引擎（Search 
Engines）、資訊入口（Information Portals）等，協助或代理使
用者過濾、搜尋、組織與呈現相關查詢資訊。所謂代理人系統
（Agent Systems）是一種在使用者指定環境下，能持續並自主
的運作，更能在不需使用者干預下，針對環境的改變做出適當
動作與回應的軟體系統。資訊代理人（Information Agents）就
是為了協助與引導使用者達成資訊擷取目標下的軟體產物。 
文獻上有諸多代理人系統的應用範例，諸如：王榮志[1]
探討利用多重代理人技術建構智慧型電子病歷系統的相關技
術；吳師旭[2]以代理人機制為基礎建構 ebXML 系統應用；
Pirttioja 等人[15]亦在作業程序自動化的條件監控中引用多重
代理人為主的資訊存取服務；Pakonen 等人[12]除了探討作業
處理監控中引入資訊代理人技術的相關議題外，也發表利用
OWL 技術研發相關代理人的論文[13]。從上述文獻的探討，
綜言之，「資訊代理人」應具備四大基本功能：「資訊搜尋」、「資
訊擷取」、「資訊分類」及「資訊呈現或排序」；並搭配使用者
介面、網路速度、後端資料庫的資料量與使用情境等因素，才
能真正有效地提昇使用者對資訊查詢的效能。截至目前為止，
多數的網際網路上的資訊代理系統均與領域知識關係密切，資
訊代理核心技術本身並無法直接套用在普適（Ubiquitous）環
境中；就誠如 70 年代初期醫學專家系統 MYCIN 開發後，也
除去專家知識庫，發展出「專家系統殼」EMYCIN 及 TMYCIN
（Tiny EMYCIN）一樣，這樣的作法優點有二： 
(1) 保留專家系統之推理及控制的核心技術； 
(2) 擴增此專家系統核心技術的應用範疇。 
這也是本計畫研發適用多數網際網路系統核心元件「資訊代理
殼」（Information Agent Shell）的最大動機：「探究擷取資訊代
理殼並自動擴增其應用範疇的可行性」。 
本體論（Ontology）原本是哲學領域中的論點，主要探討
生命或現實事物的知識本質；在人工智慧領域方面，主要是用
來定義一個領域的知識內容，表達知識，解決溝通、共用分享
等問題；資訊科學領域中，對於電子商務（E-commerce）及知
識管理（Knowledge Management）等研究發展有很大的幫助。
本體論能提供完整的語意模型，意指在特定領域中，有關於該
領域相關的各式物件、物件屬性與物件彼此間統一架構下的基
礎知識，具有共用與重複使用的特性，可用來解決彼此間溝通
和共用分享的問題，透過本體論來描述知識內容的架構，可以
完整地呈現一個特定領域的知識核心，自動地瞭解相關領域資
訊、溝通及存取，甚或更進一步推論出新的知識與結果，對於
資訊系統的建立與維護，是個非常有力的工具。 
綜言之，本報告旨在研發適用多數網際網路系統核心元件
「資訊代理殼」，並探究擴增其應用範疇的相關問題。本資訊
代理殼具備「資訊搜尋」、「資訊擷取」、「資訊分類」及「資
訊呈現或排序」四大功能。系統引用Protégé 2000與相關APIs
建構本體論及其相關本體服務支援資訊代理殼的整體運作，一
則落實資訊代理殼在領域上的實務應用，發揮其資訊代理的最
大功能；再則透過本體論本身作為資訊分享及溝通上語意基
礎，自動達到吸納及融合相關領域本體，進而擴大資訊代理殼
的應用範疇。資訊代理殼內部更引進普適介面代理人
（Ubiquitous Interface Agent），藉此探究本體式資訊代理殼
（Ontological Information Agent Shell, OntoIAS）在普適環境下
的相關問題。初步實驗亦展現出本雛型系統的可行性。 
2. 背景知識與技術 
 - 4 - 
3.1 本體論與相關服務之建構及支援 
本系統利用 Protégé 建構出領域知識的基底架構，詳細建
構步驟請見[11,21]；此外，也利用 Protégé’s API 來建構支援知
識本體應用之推理基元（primitive）功能。這樣的做法優點如
下： 
(1) 能快速有效地支援相關文件的搜尋（Crawling）、擷取
（Extracting）、分類（Classifying）及排序（Ranking）； 
(2) 更能提供相關系統運作的基元功能，有效支援及提升系統
運作效能，諸如： 
(a) 支援文件搜尋的字詞相關比對及過濾； 
(b) 支援文件擷取的前置作業，例如字詞的原型化
（Stemming）、相容及衝突處理等； 
(c) 輔助文件分類處理，提供相關分類之基底字詞（Base 
words）； 
(d) 輔助文件呈現的排序處理，如字詞相容及衝突的判
斷，提供相關排序的基元服務。 
    文獻上，本體論建構的研究大致可分為兩個方向：一種是
針對特定領域建置大量的本體論，透過建立特定領域的本體
論，支援該領域的知識剖析；另一種為研究如何建構與表示本
體論。本系統的本體論建置屬第一種，亦即利用建置好的領域
本體論資料庫，支援系統相關運作。本體論資料庫的建置包
括：領域相關概念統計與分析及本體論資料庫的建立兩階段。
首先，針對領域知識相關的典型網頁進行統計調查，藉以擷取
出領域網頁頻繁出現的相關概念及其同義字；再利用 Protégé
建置本體論資料庫基底架構；最後，轉匯出成 XML 格式做適
當的修正，並轉存至 MS SQL Server 完成本體論資料庫的建
置。這樣作法的好處為： 
(1) 利用 Protégé 消除本體論建構上的重複、不一致及衝突等
的疑慮； 
(2) 匯出成 XML 網頁格式，方便領域知識建構者的再度偵錯
及進行相關修正； 
(3) 轉存至 SQL Server 方便程式的存取，系統可利用 SQL 相
關指令快速有效存取相關領域知識。 
    本計畫主持人業已利用上述本體論資料庫建構程序發展
一「研究學者」本體論用以支援搜尋、分類研究學者網頁並獲
致不錯的搜尋及分類效能[28]。本系統在領域本體論的支援
下，主動提供關鍵字判斷比對，藉以提升網頁蒐集的精準度；
處理並分析網頁文件內容，主動擷取及計算領域特徵詞頻，來
分類相關研究學者的網頁種類。本系統更實際架構在 Google
及 Yahoo 兩搜尋引擎上主動蒐集相關研究學者網頁，並將結果
存入資料庫提供後端系統做分類處理。初步的實驗結果驗證本
技術確實能高度提升網頁蒐集達 95%以上的精準度[27]，且分
類精準度亦達 92%[26]。 
3.2 本體論的吸納及融合 
    誠如前述本體論能提供完整的語意模型。意指在特定領域
中，能描述有關於該領域相關的各式概念，並提供概念彼此間
統一架構下的基礎知識，具有解決彼此間溝通和共用分享的問
題。因此，相關本體論間的吸納及融合，重點在於概念彼此間
的比對模式。這個模式必須能分析出本體論的一致性
（Consistency），亦即需要一個相似性（Similarity）的評估機
制 來 估 算 其 一 致 性 。 本 論 文 採 用 WordNet
（http://wordnet.princeton.edu/）作為比對模式的基底，再引進
Jaccard 相似度[17]來估算本體論概念間的一致性。基本的概念
就是利用欲吸納及融合之領域概念與 WordNet 對應概念間的
一致性及其相關位置來索引該領域概念，最後藉由 WordNet
中的識別碼 Synset_ID 來存取該領域概念支援系統運作。
WordNet 是由美國普林斯敦大學認知科學實驗室所開發的通
用型的線上英文字庫，包括約 42000 個概念。特別是該字庫羅
列出字詞間的同義及反義字以及相關字詞間的父子關係，最重
要的是使用者可利用 SQL 及 JWNL（Java WordNet Library, 
http://jwordnet.sourceforge.net/handbook.html）來存取 WordNet
資料庫，這也是我們採用 SQL 資料庫建構本體論及 Java 開發
系統的主要原因。Jaccard 相似度（Jaccard Similarity or Jaccard 
Index）及相異度（Jaccard Dissimilarity or Jaccard Distance）計
算公式分別示如(1)及(2)： 
BA
BA
BAJ U
I=),(                    (1) 
BA
BABA
BAJBAJ U
IU −=−= ),(1),(δ         (2) 
J(A, B)的值介於(0, 1)間，0 表示 A 與 B 完全無關；1 表示 A 與
B 為相容的同義字。同理得知，Jδ(A, B)=1 時，表示 A 與 B 完
全無關（距離最大）；反之，表示 A 與 B 為相容的同義字（距
離最小）。 
    我們利用 OntoIAS 進行相關領域本體論的吸納與融合。首
先，OntoCrawler 執行相關領域本體論網頁的搜尋，並利用
OntoExtractor 進行網頁的前置處理，接著，利用 OntoClassifier
進行領域本體論的分類，最後，OntoRecommander 執行排序及
索引（儲存）。進行分類前必須先行抓取出主要概念群（Main 
Concept Candidates），舉 OWL/RDF(s)為例，這些關係均被定
義 在  “owl:ObjectProperty”, “owl:Functional Property”,
及 ”owl:InverseFunctionalProperty” 間 。 因 此 ， 我 們 可 在
OntoExtractor 定義相關的剖析規則[8]來抓取本體論的主要概
念，例如 
Triple 
   (subject ?P) 
   (predicate 
“http://www.w3.org/1999/02/22-rdf-syntax-ns#type”) 
   (object 
“http://www.w3.org/2002/07/owl#ObjectProperty”) 
Triple(subject ?S)(predicate ?P)(object ?O) 
 
=>Result : O is description factor for S 
在上述規則中，若述語（Predicate）P 是上述字彙的型態，目
標（Subject）S 擁有物件值（Object）O 的其它概念，則在此
條件下，目標 S 就是關係到此領域的主要概念。接著，就從這
群主要概念集合中，藉由公式(3) [7]計算求得最具代表性的領
域概念（Domain Concept），亦即資訊內容值（Information 
content value）最大者： 
)](log[max
),(
21
cP
cc
eptDomainConc
Sc
−=
∈          (3) 
再者，根據這個最具領域代表性的概念之 hasURI 及
hasConsistency 兩個屬性中的 hasURI 來索引出此領域概念在
WordNet 本體論中的位置，而利用 Jaccard 相似度計算該領域
概念的一致性，並存入對應的 hasConsistency 屬性中完成該領
域概念的吸納與融合。最後，則根據概念在 WordNet 中的
Synset_ID 存取該領域概念來支援系統運作。茲將資訊代理殼
吸納與融合相關本體論處理過程整理如表 1。 
表 1. 資訊代理殼吸納與融合相關本體論處理過程 
1. 從網際網路抓取相關網頁 
2. 剖析回傳網頁內容 ONTOCRAWLER 
3. 儲存剖析後相關網頁內容 
1. 特定本體論格式（如 Owl/Rdf）剖析 
ONTOEXTRACTOR 
2. 抓取相關領域本體論之主要概念集合 
1. 利用 WordNet 及公式(3)決定主要概念集合中的主要
領域概念 ONTOCLASSIFIER 
2. 儲存本體論資訊及建立相關索引 
1. 根據 Jaccard 相似度排序本體論一致性 
ONOTRECOMMANDER
2. 根據排序結果推薦本體論網頁 
3.3 OntoCrawler 的架構 
    圖 2 描繪出本體論蒐集器 OntoCrawler 運作的系統架構，
茲將其各部分功能及相關技術細述如后。 
(1) Action：執行網頁蒐集的前置工作，並把輸入的文字轉換
成 URI 碼 嵌 入 Google 的 搜 尋 網 址 ， 例 如 ：
http://www.google.com.tw/search?hl=zh-TW&q=%E5%AD
%B8%E8%80%85&meta=。 
 - 6 - 
字詞，如：“is”、“of”、“the”等。以虛字列（stop list）
存放這些字詞，作為索引字詞篩選時必須去除之對
象，用以減少文件內容之雜訊，強化效能及增加準
確率。 
(c) Stemming：所謂的字根（stem）轉換即是把字詞的
不同型態，轉換成字根，如﹕ “connection” 、
“connections” 、  “connective” 、 “connected” 、
“connecting”均被轉換成“connect”，以提高資訊檢索
時的準確率。實作上，採用 WordNet 所提供之 JWNL
（http://jwordnet.sourceforge.net/）來達成相關字根原
型化的動作。 
(3) Two-stage Classifier：利用自行研發的兩階段分類技術
[24]。第一階段採用代表性本體論特徵，我們採用階層
門檻來限制牽涉到本階段的本體論特徵數量。公式(4)
是第一階段分類的基本想法。公式中，函數 OntoMatch(d, 
C)被定義在公式(5)，其計算出現在網頁文件 d 中類別 C
的本體論特徵數，其中，假使網頁文件 d 的字詞 w 包含
在類別 C 中，則函數 M(w, C)傳回 1。因此，倘若類別 C
有最大量的本體論特徵出現在網頁文件 d，則公式(4)則
決定網頁文件 d 的類別為 C。請注意，並非所有類別都
有等量的本體論特徵；因此為了標準化，我們加入
#wC’，表示每一類別 C’中的字詞數。另外，也請注意
公式(4)僅比較那些出現在網頁文件 d 中超過 3 個本體論
特徵的類別，換言之，過濾掉少數可能的類別。至於何
以過濾掉網頁文件 d 中少於 3 個特徵的類別，我們是參
照 Joachims’的想法[9]：分類處理時，僅考慮出現率超
過 3 的字詞。 
3),(,
#
),(maxarg)( '
'
'
'
'
>=
∈∈
CdOntoMatch
w
CdOntoMatchdHOntoMatch
cC
C
cC
(4) 
∑
∈
=
dw
CwMCdOntoMatch ),(),(             (5) 
假使基於任何原因第一階段無法決定網頁文件類別
時，我們將啟動第二階段分類。第二階段不再使用階層
門檻，但根據所關聯的層級給定本體論字詞一適當的權
重。換言之，我們修改傳統分類器的做法，就是為本體
論概念加入一層級關聯的權重機制，形成我們以本體論
為主的分類器。這個層級關聯的權重（L）機制將設定
高於相關特徵的權重給代表性特徵。公式(6)定義了第二
階段分類。在公式中，OntoTFIDF(d, C)被定義在公式
(7)，基本上就是計算有關網頁文件 d 中類別 C 本體論特
徵的 TFIDF 分數，其中，函數 TF(x|y)意義就是在 y 中
字詞 x 出現的次數。因此，假使關於網頁文件 d 的類別
C 有著最高的 TFIDF 分數，公式(6)則決定網頁文件 d
的類別為 C。 
),(maxarg)( '
'
CdOntoTFIDFdHOntoTFIDF
cC ∈
=       (6) 
∑ ∑∑∈
∈∈
×=
dw
FwFw
w
CC
dwTF
dwTF
CwTF
CwTF
L
CdOntoTFIDF
''
)'(
)(
)'(
)(1),(       (7) 
    本技術已實際運作在 PCDIY 本體論支援下，不僅能精準
且穩定分類網頁，並支援正確語意註解，經實驗顯示，本分類
器 OntoClassifier 確能獲致滿意的網頁分類結果[24]。 
3.6 OntoRecommander 的作法 
    OntoRecommander 採用全關鍵字匹配，亦即利用查詢條件
的全部關鍵字比對；而部分關鍵字匹配，則根據關鍵字的
TFIDF 的值，選取最佳的半數關鍵字做比對；最後，應用不同
的排序方法來排序這些取回的結果[25]。 
    在全關鍵字匹配法中，從 OD 中若只檢索出唯一網頁，則
OntoRecommander 將直接輸出該網頁給查詢者。倘若取回量不
止一個，例如 N，則採用公式(8)針對每個網頁（WP）計算出
匹配分數（Match Score, MS）。 
)...()...(
)(
11 N
i
SV
N
i
APi SVSVMax
SVW
APAPMax
APWWPMS ×+×=      (8) 
其中，APi 表示出現可能性（Appearance Probability）和 SVi 表
示 WPi 的滿意值（Satisfaction Value）。權重因子 WAP與 WSV在
我們的前置實驗過程中分別設為 0.6 及 0.4 [25]。公式(9)和(10)
則依序定義出 APi。 
∏
=
=
n
j
jii kPAP
1
, )(                    (9) 
⎪⎩
⎪⎨
⎧ ∈
=
otherwise
N
k
querysuserkif
kP i
ji
ji ,#
',1
)(
,
,            (10) 
其中 ki,j 代表 WPi 的第 j 個關鍵字；#ki 則是 WPi 中關鍵字的數
量。 
我們利用公式(11)計算 SVi.。 
)1.0(
)...()...(
1
11
1 IA
UPLUPLMaxUSLUSLMax
UPLUSL
SV n
m
nn
n
m
mm
i ×−
×
×
=
∑
∑
=
=
    (11) 
其中 USLm代表第 m 個回饋的使用者滿意層級，系統以下列預
先定義的五個使用者回饋層級來統一記分：包括非常滿意、滿
意、普通、不滿意、及非常不滿意；其對應值分別為：5、4、
3、2、1；UPLm代表第 m 個使用者回饋之使用者精通等級，
系統以下列五個預先設定好的使用者等級，即專家、資深、新
進、初學、和業餘，對應值為 5、4、3、2、1 [21]；n 是對 WPi
的回饋的總數；IA 則是一具有初始值為零的老化索引。請注
意，OntoRecommander 為追溯熱門資訊，就是採用 IA 來記錄
一個 WP 存在多久。一個 WP IA 值的增減就是根據使用者的
回饋而定，意義就是抗老化的處理。因此，如果一個 WP 完全
沒有任何回饋超過 7 天，系統將增加它的 IA 值，表示老化的
過程。另一方面，但如果 WP 的 USL 乘以使用者的 UPL 值比
九大，隱含使用者的 SV 比一個新進的使用者能給的更好，
OntoRecommander 將減少它的 IA 值，反之則提升它的 SV，表
示抗老化的過程。 
    至於，部分關鍵字匹配法，我們透過公式(12)計算匹配分
數，得到捨去或是保留網頁的依據。 
)
)...()...(
)(
11 N
i
SSV
N
i
CVi SSVSSVMax
SSVW
CVCVMax
CVWWPMS ×+×=  
)
)...()...( 11 N
i
SV
N
i
CR SVSVMax
SVW
CRCRMax
CRW ×+×+      (12) 
    其中 SVi 與公式(11)中相同。SSVi 代表 WPi 的統計相似值
（Statistic Similarity Value），其根據向量空間模型（Vector 
Space Model）[18]計算兩關鍵字間的向量內積。公式(13)定義
出相容值（Compatibility Value）CVi，而公式(14)則定義出 WPi
的涵蓋率（Coverage Ratio）CRi。 
fiqi
fiqi
i TT
TTC
CV
,,
,,, )(
×=  with ∑∈∈= fijqik TfTq jkfiqi  )fqcTTC ,, ,,,, ,()( and 
c(qk, f j ) =
1, qk compatible with f j
0, else
⎧ ⎨ ⎩         (13) 
    其中 Ti,q包含在 WPi 中的不匹配關鍵字，而 Ti,f 包含在使
用者查詢中的不匹配關鍵字。函數 c(qk, fj)以本體論服務支援
下檢查相容性，就是檢查兩關鍵字間是否存在互為抵觸的限制
條件，如果是，函數值為 0；否則，為 1。 
CRi =
E(qk , f j
qk ∈Ki ,q , f j ∈Ki , f
∑ )
|Ki, f |
 with 
⎩⎨
⎧ ==
else
fqif
fqE jkjk ,0
,1
),(   (14) 
其中 Ki,f 包含在 WPi 中的關鍵字。函數 E(qk, fj) 則檢查關鍵字
qk 和 fj 間的意義是否相等。採用本體論支援相關資訊排序與
呈現技術的優點如下： 
(1) 基於本體論支援相關轉換與儲存，系統針對儲存資訊的處
理更能得心應手； 
 - 8 - 
表 6. 雛型系統的分類成效 
數據 
No 分類關鍵詞 NWC NWR NWT RP 
人工智慧 80 7 87 91.95% 
模糊理論 57 8 65 87.69% 1 
類神經網路 41 9 50 82.00% 
平均 87.21%
人工智慧 70 3 73 95.98% 
模糊理論 5 0 5 100.00%2 
類神經網路 28 9 37 75.68% 
平均 90.55%
人工智慧 30 3 33 90.90% 
模糊理論 60 2 62 96.77% 3 
類神經網路 15 3 18 83.33% 
平均 90.33%
總平均 89.36%
    資訊的擷取就是一種資訊的推薦，它是由一群相關資訊集
合中，選出最佳資訊作為推薦首選。這與大量資料中，抽樣樣
本是否能代表母體的程度，具有異曲同工之妙。然而，在抽樣
調查的領域中，信度（reliability）常用以檢測抽樣系統本身的
準確程度；效度（validity）則注重能否正確反映現象的屬性。
藉由文獻探討[3]得知：基於研究領域與對象上的分岐，使得
測量信度與效度的方法不一，且缺乏統一的測量方式。因此，
本計劃藉由諸多論文經常引用之 J.P. Peter 於 1979 年的數學模
型來表達信度與效度的意義，來評估本系統資訊推薦之整體系
統效能。 
(1) 信度 
    假設一個測量工具所測得的總變異量為Vo（observed），
則Vo可分解為： 
Vo=Vt+Ve                     (17) 
其中，Vt（true）表真實值的變異量；Ve（error）表誤差值的
變異量。rtt真實變異量與觀察變異量之比，即為信度，示如公
式(18)： 
rtt=Vt/Vo                     (18) 
(2) 效度 
    如果把Vt再分解成Vco+Vsp則 
Vo=Vco+Vsp+Ve                  (19) 
其中，Vco（correlated V）表與測量特質相關的共同變異量；
Vsp（specific V）表與測量特質無關的個別變異量；則效度（Val）
定義為： 
Val=Vco/Vo                    (20) 
    本實驗以台灣人工智慧學會會員個人網頁，隨機抽取不同
100 筆進行抽樣推薦，重覆進行 3 次。實驗相關推薦重要資訊
均由領域專家來認定，包括觀察值、真實值、誤差值與相關變
異量。相關推薦資訊在不同領域下之推薦信度與效度值，示如
表 7；表 8 則羅列出整體的平均值。比較文獻[3]中的標準值：
信度的可信範圍至少要高於 0.7，而效度則要高於 0.5；表 2
中數值顯示本系統整體平均信度為 0.88；平均效度則為 0.78 
[29]，無論在信度與效度的驗證均屬上乘。 
表 7. 隨機進行 3 次資訊推薦的結果 
模糊理論 類神經網路 人工智慧 No 推薦資訊 
r t t  V a l  r t t  V a l  r t t  V a l
授課資訊 0.92 0.9 0.86 0.83 0.95 0.7 
學術活動 0.93 0.89 0.78 0.66 0.98 0.921 
網站推薦 0.89 0.73 0.91 0.73 0.96 0.78
平均 0.91 0.84 0.85 0.74 0.96 0.8 
授課資訊 0.93 0.88 0.76 0.6 0.78 0.75
學術活動 0.9 0.73 0.73 0.5 0.93 0.842 
網站推薦 0.9 0.8 0.88 0.87 0.98 0.96
平均 0.91 0.8 0.79 0.66 0.90 0.85
授課資訊 0.7 0.53 0.78 0.63 0.99 0.87
學術活動 0.92 0.85 0.69 0.62 0.96 0.9 3 
網站推薦 0.95 0.9 0.83 0.76 0.97 0.89
平均 0.86 0.76 0.77 0.67 0.97 0.89
表 8. 推薦信度與效度的總平均 
效能 模糊理論 類神經網路 人工智慧 總平均
平均信度 0.89 0.80 0.94 0.88 
平均效度 0.80 0.69 0.85 0.78 
 
5. 結論與討論 
    本報告業已完成一本體式資訊代理殼系統雛型，示如圖
6，創造出兼顧解決行動設備先天缺陷及充分發揮後端資訊系
統強大功能的互動範式；它能有效支援使用者在普適環境下的
基本資訊需求，除可作為建構普適資訊系統的基石外，更能作
為其它智慧生活空間相關產業的參考範式。初步的實驗亦能彰
顯出相關系統的基本效能。未來更將朝向如何提升此資訊代理
殼的性能邁進，諸如結合資料探勘技術[22]，來預測使用者的
資訊需求，藉以降低系統處理及使用者的等待時間；再者，整
合案例式推理機制[23]，來加速系統處理的時程，更是未來的
重點工作。 
 
圖 6. 本體式資訊代理殼系統雛型 
參考文獻 
[1] 王榮志，利用多重代理人技術建構智慧型電子病歷系
統，碩士論文，資管所，義守大學，民 94。 
[2] 吳師旭，以代理人機制為基礎的 ebXML 系統應用，碩士
論文，資工所，大同大學，民 96。 
[3] 吳統雄，“態度與行為研究的信度與效度:理論、應用、反
省”，民意學術專刊，民74，29-53。 
[4] 李文元，語意格網為基礎之普適學習環境－以Java程式設
計為例，碩士論文，資管所，中原大學，民96。 
[5] 張瑜真，普及運算隱密型服務探索協定之研究，碩士論
文，資工所，成功大學，民97。 
[6] 梁博翔，普適訊息與狀態呈現服務，碩士論文，資工所，
中正大學，民96。 
[7] M. Cho, J.H. Choi, and P.K. Kim, “An Efficient 
Computational Method for Measuring Similarity between 
Two Conceptual Entities,” Proc. of the Fourth International 
Conference on Web-Age Information Management, Chengdu, 
China, 2003, pp. 381-388. 
[8] M.G. Hwang, H.J. Kong, and P.K. Kim, “The Design of the 
Ontology Retrieval System on the Web,” Proc. of the 8th 
International Conference on Advanced Communication 
Technology, Gwangju, South Korea, 2006, pp. 1815-1818. 
[9] T. Joachims, “A Probabilistic Analysis of the Rocchio 
Algorithm with TFIDF for Text Categorization,” Proc. of the 
14th International Conference on Machine Learning, 
Nashville, TN, USA, 1997, pp. 143-151. 
[10] J. Kim, M. Jang, and J.C. Sohn, “An Ontological Approach 
for Natural Language Command Interpretation and Its 
Application in Robotics,” Proc. of International Joint 
Conference on SICE-ICASE, Busan, Korea, 2006, pp. 
3874-3878. 
[11] N.F. Noy and D.L. McGuinness, “Ontology Development 
101: A Guide to Creating Your First Ontology,” Stanford 
Knowledge Systems Laboratory Tech. Rep. KSL-01-05 and 
Stanford Medical Informatics Tech. Rep. SMI-2001-0880, 
Also available at 
  
[10] S.Y. Yang, C.L. Hsu, "An Ontology-Supported Ubiquitous 
Interface Agent for Cloud Computing - Example on 
Bluetooth Wireless Technique with Java Programming," 
Proc. of 2010 International Conference on Machine 
Learning and Cybernetics, Qingdao, China, Jul. 11-14, 
2010, 2971-2978. [NSC-98-2221-E-129-012, ISBN: 
978-1-4244-6524-8] 
[11] S.Y. Yang and Y.Y. Chang, "A New Network Management 
System with Ontology-supported Multi-Agent Techniques," 
Accepted for presentation in 2010 IEEE International 
Symposium on Parallel and Distributed Processing with 
Applications, Taipei, Taiwan, Sep. 6-9, 2010. 
[NSC-98-2221-E-129-012] 
[12] S.Y. Yang and C.L Hsu, "A New Ontology-Supported and 
Hybrid Recommending Information System for Scholars," 
Accepted for presentation in The Fourth International 
Workshop on Advanced Distributed and Parallel Network 
Applications, Gifu, Japan, Sep. 14-16, 2010. 
[NSC-98-2221-E-129-012] 
[13] S.Y. Yang, "OntoCrawler: A Focused Crawler with 
Ontology-Supported Website Models for Information 
Agents," Expert Systems with Applications, 37(7), Jul. 2010, 
5381-5389. [NSC-98-2221-E-129-012, SCI: 
IF=2.596@2008, EI, ISSN: 0957-4174] 
[14] S.Y. Yang, "Developing an Ontology-Supported 
Information Integration and Recommendation System for 
Scholars," Expert Systems with Applications, 37(10), Oct. 
2010, 7065-7079. [NSC-98-2221-E-129-012, SCI: 
IF=2.596@2008, EI, ISSN: 0957-4174] 
 
 2
二、與會心得 
  本人投稿之論文題目為「An Ontology-Supported Web Focused-Crawler for Java Programs」，被
大會收錄為壁報論文，因此，委由龍華科技大學網路通訊系陳永輝教授代為出席，除了張貼論文
相關訊息，並攜回相關國際會議論文徵稿訊息。 
三、考察參觀活動(無是項活動者略) 
  N / A。 
四、建議 
  希望貴會能持續全額補助國內學者與博碩士生參加國際會議，多鼓勵學者及研究生出席國際
會議除增廣視野外，更藉此與國際間相關研究接軌，不致閉門造車。 
五、攜回資料名稱及內容 
  攜 回 會 議 論 文 集 一 本 （ ISBN: 978-1-4244-6706-8 ） 及 論 文 光 碟 乙 片 （ ISBN: 
978-1-4244-6707-5），以及相關的論文徵求 DM，包括：2011 U-media, 2011 MSEAT, and 2011 ADET。 
六、其他 
  N / A。 
Ontology was one theory in philosophy and 
primarily to explore knowledge characteristics of life 
and real objects. It can provide complete semantic 
models with sharing and reusing characteristics. To 
describe the structure of the knowledge content 
through ontology can accomplish the knowledge core 
in a specified domain and automatically learn related 
information, communication, accessing and even 
induce new knowledge; hence, ontology is a powerful 
tool to construct and maintain an information system 
[14]. Figure 1 illustrates the ontology structure of Java 
programming codes, which defines related basic 
knowledge of Java and its conceptual hierarchy 
relationship and relevant features. 
 
Figure 1. Part of ontology structure of Java 
programming codes 
2.2. Regular Expression 
 
Regular expression is a character queue to describe 
specified order. The descriptive style, so to call pattern, 
could be used to search matched pattern in another 
character queue. Regular expression can use universal 
words, set of words, and some quantifiers as 
specifying ways [10]. There were two supported 
classes for this expression: Pattern and Matcher, and 
we would use Pattern to define a Regular expression. 
If we want to conduct pattern matching with other 
character queue, we would use Matcher. Figure 2 
showed an example program adapting regular 
expression in this system. 
 
(a) Hyperlink format in HTML 
 
(b) Corresponding regular expression 
Figure 2. Example on regular expression 
2.3. Developing Techniques 
 
The developing tool of this system is Borland 
JBuilder. It is an integrated development environment 
of Java, which have a fine human-machine interface 
and code debugging mechanism to make a fast 
integration of each code block when the system was 
developed, and accordingly reduce the time of system 
development. In addition, Java [7] provides lots of 
functions and methods to integrate web applications 
and databases. In the view of extensibility, Java is 
absolutely the optimal choice for solving the problem 
of cross platform. 
This system adapted MS SQL Server as backend 
knowledge-database sharing platform based on 
ontology. MS SQL Server is one mostly used 
relational database management system. SQL 
(Structured Query Language) is one query language to 
get the data in the database. The ontology construction 
tool, Protégé, was an ontology freeware developed by 
SMI (short for Stanford Medical Informatics). Protégé 
not only was one of the most important platforms to 
construct ontology but also the most frequently 
adapted one [5,6]. Protégé was adapted in this paper 
and its most special feature is that used multi 
components to edit and make ontology and led 
knowledge workers to constructing knowledge 
management system based on ontology; furthermore, 
users could transfer to different formats of ontology 
such as RDF(S), OWL, XML or directly inherit into 
database just like MySQL and MS SQL Server, which 
have better supported function than other tool [15]. 
 
3. System Architecture 
 
3.1. Construction of Ontology Database 
 
Nowadays the research on ontology can be 
branched into two fields: one is to configure huge 
ontology in a specified field and through them to 
assistant the knowledge analysis in this field; the other 
is to study how to construct and express precisely with 
ontology. In this paper, we adopted the former in 
which took advantage of built ontology database of 
some Java programming codes to support whole 
system operation. In the mentioned ontology database, 
it included two constructing stages [13,15]; one is 
statistics and analysis of related concepts of Java 
programming codes, the other is construction of 
ontology database. First of all, we conducted statistics 
and survey of related Java programming codes to fetch 
out the related concepts and their synonym appearing 
in those programs and employed the ontology 
construction tool Protégé to construct that ontology. 
The second stage of ontology construction is the 
construction of ontology database of Java 
programming codes, in which the main part work is to 
transfer the ontology built with Protégé into MS SQL 
database for conveniently processing by the system. 
 
3.2. System Structure of OntoCrawler III 
 
Figure 3 illustrated the operation system structure of 
267
displayed the corresponding webpage content 
generated by the function RetrieveContent(). 
(6) URL Filtering: employs regular expressions to 
find out whether the matched URLs exist from 
the variable “line.” If yes, the system carried out 
the downloading action and stored the returned 
result into the default location chosen by users. 
 
4. System Verification and Comparison 
 
Given an example with the keyword: cell-phone 
programs, we explain how to search the related 
webpages of Java open source code and detailed 
follows. The equations (1) and (2) to define Precision 
Rate, RP and Recall Rate, RR, respectively [13], in 
which NWT meant the number of total returned 
webpages; NWC meant number of correct returned 
webpages; NWR meant number of related returned 
webpages but they were not necessarily the correct 
webpage. After comparing returned webpage by 
domain experts one after another, Table 1 illustrates 
the average RP and RR of Google were 6% and 67% 
while Yahoo were 6% and 60%, respectively. 
NW
NWR
T
C
P                  (1) 
NWNW
NWR
CR
C
R 
              (2) 
Table 1. Comparison of the front 100 queries on 
Google and Yahoo 
 NWC NWR NWT RP RR 
Google 6 3 100 6% 67% 
Yahoo 6 4 100 6% 60% 
 
Figure 5. Returned screen of OntoCrawler III 
Table 2. Search results of OntoCrawler III 
Sampling = 9 NWC NWR NWT RP RR
OntoCrawler III 8 0 8 100% 100%
When we used Google and Yahoo as base of 
webpage query, but on OntoCrawler III we keyed in 
the same keyword. The returned screen was shown in 
Figure 5 and the comparison results were shown in 
Table 2. After comparing Tables 1 and 2, the query 
precision and recall rate for Google researching 
engine through assistance of OntoCrawler has up-rise 
around 94% and 33% (
%100
%6%100  , 
%100
%67%100  ) 
while conditions of Yahoo were about 94% and 40% 
(
%100
%6%100  , 
%100
%60%100  ). From the above 
comparison, it indicated that OntoCrawler III offered 
more precision and recall rate than Google and Yahoo 
on webpage searching for Java open source codes; in 
addition, the technique we proposed has its 
availability. 
 
5. Related Works and Comparisons 
 
Topical crawling was first introduced by Menczer 
[8], which can automatically traverse Internet and 
retrieve webpages by hyperlinks. A focused crawler 
or topical crawler is a Web crawler that attempts to 
download only webpages that are relevant to a 
pre-defined topic or set of topics, which was first 
introduced by Chakrabarti et al [1]. In the face of the 
inundant spam websites, traditional web crawlers 
cannot function well to solve this problem [3]. 
Ontology is a technology for conceptualizing specific 
domain knowledge, which can provide 
machine-readable definitions to the domain. 
Therefore, ontology should be utilized to enhance the 
performance of focused crawlers by precisely 
defining the crawling boundary. Here are many 
examples of such crawler systems. Dong et al [2] 
exhibited a conceptual framework of an 
ontology-based focused crawler serving in the 
domain of transport services. Xing [9] proposed a 
framework and algorithm of the ontology-based 
adaptive topical crawling which used the ontology 
technology to reduce the crawler to get the unrelated 
information for improving the correlativity of the 
topical crawler. Focused crawler technologies in 
general and ontology-based approaches in particular 
are considered the foundation for the next generation 
of information services. In this paper, we proposed 
the use of ontology-supported technique to provide a 
semantic level solution for a focused crawler named 
OntoCrawler III so that it can provide fast, precise 
and stable query results. The technique in this 
research has practically applied on Google and Yahoo 
searching engines to actively search for webpages of 
related information and the experiment outcomes 
indicated that this technique could definitely up-rise 
precision rate and recall rate of webpage query. 
 
6. Conclusion 
 
This paper have proposed an ontology-support web 
focused-crawler: OntoCrawler III for Java programs, 
in which only the user entered some keywords would 
the system supported by the domain ontology actively 
Keyword 
Query 
results 
and 
matched 
ontology 
terms 
Returned
Webpage
269
Conference on Information Sciences, Kaohsiung, Taiwan, 
2006, pp. 755-758. 
 
[11] S.Y. Yang, F.C. Chuang, and C.S. Ho, 
“Ontology-Supported FAQ Processing and Ranking 
Techniques,” Journal of Intelligent Information Systems, 
28(3), 2007, pp. 233-251. 
 
[12] S.Y. Yang, C.L. Hsu, D.L. Lee, and Lawrence Y. Deng, 
“FAQ-master: An Ontological Multi-Agent System for Web 
FAQ Services,” WSEAS Transactions on Information 
Science and Applications, 5(3), 2008, 221-228. 
 
[13] S.Y. Yang and C.L. Hsu, “Ontology-Supported Web 
Crawler for Information Integration on Call For Papers,” 
Proc. of 2009 International Conference on Machine 
Learning and Cybernetics, Hebei, China, 2009, pp. 
3354-3360. 
 
[14] S.Y. Yang and C.L. Hsu, “An Ontological Proxy Agent 
with Prediction, CBR, and RBR Techniques for Fast Query 
Processing,” Expert Systems with Applications, 36(5), 2009, 
pp. 9358-9370. 
 
[15] S.Y. Yang and C.L. Hsu, “Ontology-Supported Web 
Recommender for Scholar Information,” Proc. of The Ninth 
International Conference on Hybrid Intelligent System, 
ShenYang, China, 2009, pp. 271-276. 
 
271
 4
論文題目為「An Ontology-Supported Ubiquitous Interface Agent for Cloud Computing - Example on 
Bluetooth Wireless Technique with Java Programming」，論文摘要如下： 
This paper focused on designing of a ubiquitous interface agent based on the ontology technology 
and interaction diagram with the backend information agent system, i.e., OntoIAS, in cloud 
computing environments. Through the techniques of packet decoding and recognizing, the agent 
employs the CURRL to transform user commands into internal canonical format to conveniently 
process those commands by OntoIAS, which can avoid numerous, jumbled, and incorrect 
information torrents that results in misunderstanding of the information intention of users. In this 
paper, we preliminarily proposed a ubiquitous interface agent with the Bluetooth wireless technique 
and related interaction diagrams in cloud computing environments. The system prototype and 
experiment outcomes can also reveal the feasibility of the system architecture. 
  會議結束回程時，順道遊覽山東青島市區及著名城郊景點。7 月 18 日一早搭乘中國東方航空
至香港赤臘角機場，再轉搭本國華航返國於同日下午約 3 點抵達桃園機場。 
二、與會心得 
  此次會議本人除了參加自己發表論文的 Session 之外，還參加了幾場有趣的 Sessions，如
Intelligent Systems: Theorem and applications、Intelligent Information Mining、Web Information 
Processing 及 Information Security 等等，聆聽並感受國內外一流學者的學術氣息與報告風采，在心
中留下深刻的印象。本人所發表的論文題目為 An Ontology-Supported Ubiquitous Interface Agent for 
Cloud Computing - Example on Bluetooth Wireless Technique with Java Programming，藉由報告後的
問題提問與會後的心得交換，瞭解到目前在 Web services and agents 最新的研究趨勢，除了感受由
深收獲良多外，也啟發了一些未來的研究方向。會議結束後，順道遊覽山東青島市區及著名城郊
景點，感受中國五千年文化的深厚內涵，體現人文素養。所以，此行的收穫可說相當豐碩。 
三、考察參觀活動(無是項活動者略) 
  N / A。 
四、建議 
  希望貴會能持續全額補助國內學者與博碩士生參加國際會議，多鼓勵學者及研究生出席國際
會議除增廣視野外，更藉此與國際間相關研究接軌，不致閉門造車。 
五、攜回資料名稱及內容 
  攜 回 會 議 論 文 集 一 本 （ ISBN: 978-1-4244-6524-8 ） 及 論 文 光 碟 乙 片 （ ISBN: 
978-1-4244-6525-5），以及相關的論文徵求 DM，包括：2011 the 30th Chinese Control Conference, and 
International Journal of machine Learning and Cybernetics。 
六、其他 
AN ONTOLOGY-SUPPORTED UBIQUITOUS INTERFACE AGENT FOR 
CLOUD COMPUTING – EXAMPLE ON BLUETOOTH WIRELESS TECHNIQUE 
WITH JAVA PROGRAMMING 
SHENG-YUAN YANG1,CHUN-LIANG HSU2, DONG-LIANG LEE3 
1Department of Computer and Communication Engineering, St. John’s University, Taiwan 
2Department of Electrical Engineering, St. John’s University, Taiwan 
3Dept. of Information Management, St. John’s University, Taiwan 
E-MAIL: ysy@mail.sju.edu.tw, liang@mail.sju.edu.tw, lianglee@mail.sju.edu.tw 
Abstract: 
This paper focused on designing of a ubiquitous interface 
agent based on the ontology technology and interaction diagram 
with the backend information agent system, i.e., OntoIAS, in 
cloud computing environments. Through the techniques of 
packet decoding and recognizing, the agent employs the CURRL 
to transform user commands into internal canonical format to 
conveniently process those commands by OntoIAS, which can 
avoid numerous, jumbled, and incorrect information torrents 
that results in misunderstanding of the information intention of 
users. In this paper, we preliminarily proposed a ubiquitous 
interface agent with the Bluetooth wireless technique and 
related interaction diagrams in cloud computing environments. 
The system prototype and experiment outcomes can also reveal 
the feasibility of the system architecture. 
Keywords: 
Ubiquitous Interface Agent; Ontology; Bluetooth; Cloud 
Computing 
1. Introduction 
Information as a concept has a diversity of meanings, 
generally speaking, which is closely related to notions of 
control, data, form, instruction, knowledge, and 
representation. With increasing popularity of computers, 
network techniques, and WWW, information itself shows the 
multiple appearances and amount explosion. Therefore, the 
way of helping the user to quickly, precisely and effectively 
get profoundly, relevantly, and up-to-dated useful information 
has quickly become the first and critical topic that the 
industrial, official government, and academic circles joined 
force to strive for in last ten years. A variety of information 
retrieval tools has been thus created by information providers, 
including search engines, information portals, etc., which 
could help and assist users to filter, search for, organize, and 
represent related query information. Information agent is a 
software product for assisting and guiding users to reach the 
goal of information retrieval. Not only can it possess the four 
main functions: information searching, information extracting, 
information classifying, and information representing/ranking, 
but also it can really and effectively up-rise the performance 
of information query to the user and collocate the factors in 
user interfaces, network speed, amount of the backend 
databases, and usage scenarios. Up to now, however, most of 
Web information agent systems are closely related to the 
traditional information equipments that can not directly apply 
to the modern mobile equipments resulting from the core part 
of information agent in ubiquitous environments. This study 
exactly focused on how to construct a ubiquitous interface 
agent with mobile equipments in ubiquitous environments. 
Ubiquitous computing is a post-desktop model of 
human-computer interaction in which information processing 
has been thoroughly integrated into everyday objects and 
activities. Computers will exist in our lives in hidden, 
popularized, and ubiquitous ways. Even though many people 
already know we have entered a ubiquitous environment, this 
kind of natural interaction mode has still not appeared. 
Nevertheless, there is lots of traditional equipment that is 
suitable for these natural interaction modes, for example, 
mobile phones, RFID (Radio Frequency Identification), 
Bluetooth, etc. Such devices operate through wireless sensor 
techniques to recognize related users and let users naturally 
interact with relevant network services, thus, reaching the 
goal of ubiquitous computing. Cloud computing is a 
technique of Internet- ("cloud-") based development and use 
of computer technology. In other words, it will set up the 
necessary operating resources and related data into the 
Internet and then users can directly use them when they can 
access the Internet. Going even further, how to construct an 
interaction diagram of cloud computing for extensively and 
seamlessly entering related web information agent systems 
through modern mobile equipments is also an investigation 
point of this study. 
To sum up, this study focused on designing of a 
2971
2010 IEEE978-1-4244-6525-5/10/$26.00 ©
Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010
as a Service), and SaaS (Software as a Service). It still more 
achieves the concept of new 3C, i.e., Cloud Computing, 
Connecting, and Client Devices [3]. 
In this paper, we exactly investigate a ubiquitous 
interface agent with the Bluetooth wireless technique and 
related interaction diagrams in cloud computing 
environments. That is to say, in cloud computing 
environment, the ubiquitous interface agent is responsible for 
the role of client device; the Bluetooth wireless technique is 
responsible for connecting technology; finally, the backend 
information agent system, OntoIAS is responsible for the role 
of the provider of cloud computing. Going even further, this 
study can reach the investigation goal of constructing an 
interaction diagram of cloud computing for extensively and 
seamlessly entering related web information agent systems 
through modern mobile equipments. 
2.4. Bluetooth Wireless Technique with Java 
 
Figure 2. Bluetooth protocol stack [12] 
Bluetooth wireless technology is a short-range radio 
standard that provides new opportunities for wireless devices. 
A standard application programming interface, API for 
Bluetooth was needed because each Bluetooth software 
protocol stack had its own API for application programmers. 
A team of experts from across the industry was assembled for 
this effort under Java Specification Request 82. The result 
was a specification for Java APIs for Bluetooth wireless 
technology, JABWT [12]. Fig. 2 shows a block diagram of 
the Bluetooth protocol stack. Shaded boxes represent the 
protocols addressed by JABWT, such as the Service 
Discovery Protocol (SDP), Object Exchange protocol 
(OBEX), Logical Link Control and Adaptation Protocol 
(L2CAP). Link Manager Protocol (LMP). 
Java ME is the Java platform for consumer and 
embedded devices such as mobile phones, pagers, personal 
organizers, television set-top boxes, automobile 
entertainment and navigation systems, Internet televisions, 
and Internet-enabled phones. Configurations are composed of 
a Java virtual machine and a minimal set of class libraries. 
Currently, there are two Java ME configurations: the 
Connected, Limited Device Configuration (CLDC) and the 
Connected Device Configuration (CDC). The APIs of 
JABWT were defined as an optional package for Java ME 
devices based on CLDC. JABWT is based on Bluetooth 
specification version 1.1. However, nothing in the JABWT 
specification is intended to preclude operating with version 
1.0–compliant stacks or hardware. In addition, if future 
versions are backward compatible with version 1.1, 
implementations of the JABWT specification also should 
operate on those versions of stacks or hardware. 
A Bluetooth device can support one or more profiles. 
The four basic profiles are the Generic Access Profile (GAP), 
the Serial Port Profile (SPP), the Service Discovery 
Application Profile (SDAP), and the Generic Object 
Exchange Profile (GOEP). JABWT defines two separate Java 
packages, javax.bluetooth and javax.obex. The underlying 
Bluetooth system needs to be qualified for GAP, SDAP, and 
SPP. In addition, the underlying Bluetooth system must 
provide access to SDP, RFCOMM, and L2CAP. If the 
javax.bluetooth package is implemented, then RFCOMM, 
SDP, and L2CAP must be implemented; if javax.obex is 
implemented, then OBEX must be implemented. 
2.5. Developing Techniques 
This system adapted MS SQL Server as backend 
knowledge-database sharing platform based on ontology. MS 
SQL Server is one mostly used relational database 
management system [14]. SQL (stands for Structured Query 
Language) is one query language to get the data in the 
relational database. The agent system itself was developed 
with Java SE, Java ME, and the Bluetooth wireless 
technology with Java mentioned above. The ontology 
construction tool, Protégé, was an ontology freeware 
developed by SMI (Stanford Medical Informatics). Protégé 
not only was one of the most important platforms to construct 
ontology but also the most frequently adapted one [2]. Its 
most special feature is that it used multi components to edit 
and make ontology and led knowledge workers to construct 
knowledge management system based on ontology; 
furthermore, users could transfer to different formats of 
ontology such as RDF(S), OWL, XML or directly inherit into 
database just like MySQL and MS SQL Server, which have 
better supported function than other tool [16]. 
3. Architecture of the Ubiquitous Interface Agent and 
Interaction Diagram with OntoIAS  
To reach ubiquitous research goals of this study, users 
can employ the Ubiquitous Interface Agent to use the 
2973
Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010
JSP (Java Server Page combined with HTML/WML and 
Jscript, etc.), to provide a scripting environment with 
dynamic and interactive execution on the server end. The 
interaction system prototype which includes the three-tier 
multi-agent architecture can solve the congenital defect 
problems of mobile equipment encounter in satisfying users’ 
basic information requirements in ubiquitous environments. 
Detailed explanations of the interaction diagrams are 
provided as follows: 
(1) The user keys in specific information queries to trigger 
OntoIAS to return information solutions: after the user 
enters his/her account, the Ubiquitous Interface Agent 
provides the interface for entering the information query, 
and then employs CURRL to transform the query into 
the internal query format, finally, triggering OntoIAS to 
process the query and return its solutions. After the user 
finishes browsing, the Ubiquitous Interface Agent returns 
relevant feedback to OntoRecommander to act as the 
calculation base of hot information and records them in 
the user’s profile; 
(2) The user directly queries OntoIAS to provide commonly 
used hot information: after the user enters his/her 
account, Ubiquitous Interface Agent directly triggers the 
OntoRecommander of OntoIAS, according to the user’s 
account, and returns commonly used hot information to 
the user. That is, the user directly uses the information 
but has to do nothing. 
Fig. 4 illustrates the OntoIAS architecture diagram 
[17]. It contains the four main modules of information 
agents, including information searching, information 
extracting, information classifying, and information 
presenting/ranking, corresponding to OntoCrawler, 
OntoExtractor, OntoClassifier, and OntoRecommander, 
respectively. The reason for using the beginning word 
“Onto-” is that all of module functions are supported by 
ontology. This means the information agent shell is the core 
part of the information agent that is separated from the 
domain ontology. An Ontological Database (OD) is a 
stored structure designed according to the ontology 
structure, serving as an ontology-directed canonical format 
for storing webpage information processed by OntoIAS, 
which is separated from the shell. This approach not only 
can provide the basic operation semantic to the shell, but 
can it also make the shell faster. Moreover, the shell can 
precisely access information based on these semantic 
understanding. Finally, the system relies on stream 
technology to access backend databases. Users can employ 
the ubiquitous interface agent to use the OntoIAS via 
related mobile equipments, for example, mobile phones, 
PDA-related equipments, lap-top computers, related 
equipment with Bluetooth interface, or other related 
information systems fitted with communication protocols. 
Therefore, the proposed method reaches the goals of 
ubiquitous research. User profile databases are responsible 
for recording relevant user models. The system can trigger 
OntoRecommander to provide relatively personal 
information services. 
 
Figure 4. Conceptualized architecture of the backend information agent 
system: OntoIAS 
4.  System Display and Evaluations 
4.1. System Prototype 
Our system is developed using JCreator on Windows 
XP® Service Pack 3 of Professional Version with Intel® 
Core 2 Duo CPU at 2.53GHz, 2GB memory, and the 
Bluetooth device with CSR (Cambridge Silicon Radio) chip. 
To use Bluetooth devices with other chips such as ISSC 
(Integrated System Solution Corp.), BROADCOM, etc., the 
system must install their official drivers for normal action. 
The system prototype employs the javax.obex package to 
implement the Object Exchange Protocol, OBEX of the 
Bluetooth wireless technique, whose function is similar to 
the HyperText Transfer Protocol. The communication 
manner of the protocol is the Client-Server mode with a 
series of Request-Response messages to take information 
object exchanging, which only supports the 
connection-oriented protocol. The arguments usage 
instruction of the OBEX is shown in Table 4, where UUID 
(Universally Unique Identifier) is an identification code of 
the client for recognizing the server end, as shown in Fig. 5. 
 
TABLE IV. ARGUMENTS USAGE INSTRUCTION OF THE OBEX 
Mnemonic Symbol UUID SIZE UUID 
OBEXObjectPush 
(Received end) 16 bits 0x1105
OBEXFileTransfer 
(Transmitted end) 16 bits 0x1106
2975
Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010
 
Figure 9. Received screen with cell-phone simulator 
4.2. Performance Evaluation 
The information recommendation means that the 
optimal recommendation is chosen from a group of related 
information sets. This method is essentially a different 
approach with the same purpose, that is, to determine 
whether or not sampling specimens can attain a suitable 
degree of sampling bodies in a huge amount of datum In 
the sampling survey domain, the reliability was generally 
employed to measure the degree of precision of the 
sampling system itself, while the validity emphasized 
whether or it could correctly reflect the properties of the 
appearance of things. In this study, we employed the aid of 
a mathematic model, provided by J.P. Peter [8] in 1979, 
and cited by numerous other studies to represent the 
definitions of reliability and validity. 
TABLE VIII. RESULTS OF THE 3 RECOMMENDATIONS 
Fuzzy 
Theory 
Artificial 
Neural Network 
Artificial 
IntelligenceNo Information Recommendation 
r t t  V a l  r t t  V a l  r t t V a l
Course 
Information 0.92 0.9 0.86 0.83 0.95 0.7
Academic 
Activities 0.93 0.89 0.78 0.66 0.98 0.921 
Website 
Recommendation 0.89 0.73 0.91 0.73 0.96 0.78
Average 0.91 0.84 0.85 0.74 0.96 0.8
Course 
Information 0.93 0.88 0.76 0.6 0.78 0.75
Academic 
Activities 0.9 0.73 0.73 0.5 0.93 0.842 
Website 
Recommendation 0.9 0.8 0.88 0.87 0.98 0.96
Average 0.91 0.8 0.79 0.66 0.90 0.85
Course 
Information 0.7 0.53 0.78 0.63 0.99 0.87
Academic 
Activities 0.92 0.85 0.69 0.62 0.96 0.93 
Website 
Recommendation 0.95 0.9 0.83 0.76 0.97 0.89
Average 0.86 0.76 0.77 0.67 0.97 0.89
 
 
In this experiment, we randomly chose 100 data from 
the personal webpages of the members of the Taiwanese 
Association for Artificial Intelligence to carry out different 3 
separate recommending experiments. The significant 
information recommendation of these experiments were 
asserted by the domain experts, including observed values, 
true values, error values, and related variances. Table 8 
illustrates the reliabilities and validities of information 
recommendation in different professional domains, while the 
total average results are shown in Table 9. The average values 
of reliability and validity were 0.88 and 0.78, respectively. 
From previous technical studies [13], we know that the 
regular-level values of reliability and validity are 0.7 and 0.5, 
respectively, which verifies and validates that our experiment 
results have high-level outcomes of information 
recommendation of the proposed system. 
TABLE IX. TOTAL AVERAGE RESULTS 
Performance FuzzyTheory
Artificial 
Neural Network 
Artificial 
Intelligence
Total 
Average
Average 
Reliability 0.89 0.80 0.94 0.88 
Average 
Validity 0.80 0.69 0.85 0.78 
5.  Conclusion 
In this paper, an ontology-supported ubiquitous 
interface agent and interaction diagram with the backend 
information agent system in cloud computing environments 
were proposed. The agent adopts the CURRL to fast and 
precisely deal with user query commands for conveniently 
processing those commands by OntoIAS. The system also 
creates an interaction diagram that both solves the 
congenital defect problems of mobile equipments and 
adequately elaborates the powerful functions of backend 
information systems. In this paper, we preliminarily 
proposed a ubiquitous interface agent with the Bluetooth 
wireless technique and related interaction diagrams in 
cloud computing environments. The system prototype and 
experiment outcomes can not only reveal the feasibility of 
the system architecture, but also have high-level outcomes 
of information recommendation. Continuously improving 
the performance efficiency, expanding database of 
ontology and its related linking interface, and developing 
the middle programs, for example, RFID, ZigBee, etc., with 
backend systems for truly completing the wireless 
communication functions of the ubiquitous interface agent 
would be the everlasting research in the future. 
 
 
 
2977
Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010
無研發成果推廣資料 
