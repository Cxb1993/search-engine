modification of the motion vectors in a 
compressed video bitstream [8]. They embedded 
the watermark in the motion vector. First, they 
collected all macroblocks with the large motion 
vector magnitude and modify their motion vectors 
according to the bit stream of the watermark. In 
the motion estimation, they compute both the 
optimal motion vector and those motion vectors 
only inferior to the optimal ones. If the data bit is 
0, then use the optimal motion vector. If the data 
bit is 1, then use the minor optimal motion vector. 
By adopting this method, they only make the least 
necessary modification to the original motion 
vector. However, it requires a very fast motion 
estimation algorithm. Also, it needs to compute 
residue error, and the original video to extract the 
embed data. 
Zhang employed the characteristics of MPEG 
codes to embed information into INTER-frame 
[9]. By selecting the inter frames in the MPEG 
sequence and according to the bitstream of 
copyright information. The motion vectors with 
large magnitude are selected and their horizontal 
or vertical components are directed modified to 
satisfy some well-defined embedding equation. 
The method can embed information in either 
compressed or uncompressed video sequences 
with little degradation. 
After extensively surveying the related 
literature, most of information hiding scheme for 
inter frame is embedded in motion vector. 
However, those proposed literature just directly 
modify motion vector magnitude or residual error. 
It seem to have another way to embed information 
in inter frame. In this paper, we proposed an 
effective information hiding scheme for INTER-
frame. Our proposed information hiding scheme is 
to embed information in the phase angle of the 
motion vectors of the macroblocks in the inter 
frame. By replacing the original motion vector to 
another local optimal motion vector, the motion 
vectors are regularized into a modified bitstream. 
Our method modifies the motion vector without 
computing the residue error; it can reduce 
computational time-complexity. Furthermore, the 
embedded information can be extracted directly 
without using the original video sequences. 
Finally, the experimental results prove the 
feasibility of the proposed methods. Comparing 
with the upper reference literature [9], our method 
has better performance.  
 
  
2.   The Proposed Method  
In the inter frame coding, the video encoder 
compresses the temporal redundancies between 
frames by motion compensation with motion 
vector prediction. In motion compensated 
prediction, the best motion prediction means that 
we can get the minimum residue error between 
the current macroblock and the predicted 
macroblock. However, finding out the best motion 
prediction may be unfeasible. In fact, most of 
video encoders perform some fast block search 
algorithm to substitute the full search algorithm. 
These fast search algorithms [10-12] include 
Three Steps Search (TSS), Four Steps Search 
(FSS), Block-Base Gradient Descent search 
(BBGD), and diamond search (DS), and so on. In 
other words, most video encoders may not find 
the global optimal motion vector. It just finds the 
local optimal motion vector that saves lots of 
computational burden. Therefore, we can replace 
the original motion vector with another local 
optimal motion vector to embed data in the 
motion vectors in the inter frame. 
Figure 1 shows the search range of the full 
search. Since the motion vectors of the 
surrounding macroblocks in the current inter 
frame can just be searched in a limited range 
instead of the full range of 3600, some 
macroblocks can be discarded. Then, we compute 
all motion vectors in the remaining macroblock 
and find a set S of the motion vectors with 
magnitude greater than a threshold T. In our 
method, the candidate macroblock is selected 
using a predefine threshold T. If the magnitude of 
the motion vector of a macroblock is bigger than 
T, it means that it has a fast moving object. The 
modification of the big motion vector will be less 
perceivable than that of the small motion vector. 
Another important reason to select motion vectors 
reference frame.If (MSE2i＜MSE2i+1) then we 
replace MV2i with MV2i’; Otherwise, we replace 
MV2i+1 with MV2i+1’. 
 
(b) If data bit is 1, we also have two conditions: 
i) If °≤−<° + 360180 122 ii θθ , then both motion vectors 
are not changed. 
ii) If °≤−<° + 1800 122 ii θθ , we search the new motion 
vector MV2i’ and MV2i+1’ for the (2i)-th and 
(2i+1)-th macroblocks such that  , TMV i ≥|'| 2
°≤−<° + 360'180 122 ii θθ  and , TMV i ≥+ |'| 12
°≤−<° + 360'180 122 ii θθ  
Let MSE2i = MSE between B’p2i and BBp2i , where 
prediction block Bp2iB  with MV2i in the reference 
frame, the prediction block B’p2i with MV2i’ in the 
reference frame. Also, let MSE2i+1 = MSE 
between B’p(2i+1) and BBp(2i+1), where the prediction 
block B(2i+1)B  with MV2i+1 in the reference frame, 
the prediction block B’p(2i+1) with MV(2i+1)’ in the 
reference frame 
If (MSE2i＜MSE2i+1) then we replace MV2i with 
MV2i’; Otherwise, we replace MV2i+1 with 
MV2i+1’. 
(6)  If the embedding process is not complete, 
then go to Step 5; Otherwise, go to Step 1 to 
process the next inter frame. 
The two sectors data hiding algorithm for 
embedding 1 bit in the phase angel of a pair of 
motion vectors can be extended to multi-sectors. 
In our original 1-bit, 2-sectors embedding, we 
restrict the phase angle 
122 +− ii θθ   in a semicircle. If 
the embedded bit is 0, it means both  
and  must have a angle that is no more than 
180°. Our proposed original embedding 
requirement is
iMV2
12 +iMV
°≤−<° + 1800 122 ii θθ . Alternatively, if 
the embedded bit is 1, it means both  
and  must have inverse directions. Our 
proposed original embedding requirement 
is
iMV2
12 +iMV
°≤−<° + 360'180 122 ii θθ  .Our original 1-bit, 2-sectors 
embedding   restrain the prediction direction in a 
semicircle. If the better prediction direction is 
opposite, the semicircle will cause quality 
degradation. We need to recalculate the residue 
error to make up this degradation. It increase lots 
of computational burden and degrade the video 
quality. An ingenious solution is to segment the 
circle into more sectors and every sector 
represents different embedded bits, respectively. 
Table 2 shows the 1-bit 4- sectors embedding: 
scheme. 
 
 Phase Angle 
Range 
Embedde
d Data 
Sector 1 0°～90° 0 
Sector 2 90°～180° 1 
Sector 3 180°～270° 0 
Sector 4 270°～360° 1 
Table 2: 1-bit 4-sectors embedding. 
 
We can segment the search range into more 
sectors.  Table 3 shows a 1-bit 8- sectors  
embedding scheme. 
 
 Phase Angle 
Range 
Embedded 
Data 
Sector 1 0°～45° 0 
Sector 2 45°～90° 1 
Sector 3 90°～135° 0 
Sector 4 135°～180° 1 
Sector 5 180°～225° 0 
Sector 6 225°～270° 1 
Sector 7 270°～315° 0 
Sector 8 315°～360° 1 
Table 3: 1-bit, 8-sectors embedding. 
 
Figure 2 show 1-bit multi-sector embedding. It 
illustrates various phase angle ranges and its 
embedded data. The gray area represent data bit is 
0 and the white area represent data bit is 1. 
 
Figure 2: 1-bit multi-sectors embedding. 
 
