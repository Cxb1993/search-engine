中文摘要 
 
關鍵字：資訊服務網運算、資訊服務網架構、語意資訊服務網、可信度、憑證理論、
社會網路 
 
資訊服務網運算(Services Oriented Computing)及資訊服務網架構(Services Oriented 
Architecture)在最近幾年廣為國際知名的資訊業界所積極的推動。研究語意網的學界也順
應這個風潮試圖要將語意網的核心技術如資料分類的本體論與程序本體論來和原生性的資
訊服務網的架構相結合並試圖找出其附加價值。目前初步的研究目的是以能夠達成一個自
動化完成資訊服務網的運算流程為主。雖然他們對於這些一般功能性(Functional)的資訊
服務網的操作機制及其加值方式已經有不少的研究成果，但是對於如可信度非功能性
(Non-Functional)的一些準則規範和執行方式研究則不多見。如此一來語意資訊服務網將
因為缺少安全可信度檢驗的服務功能讓系統的完整性和可用性受到很大挑戰。 
 
本 3 年期的研究案試圖要在現有的歐美兩大流派的語意資訊服務網的架構：SWSF 及 WSMF
以共有服務的方式讓可信度的管理規範準則可以被彈性的選擇和加入以加強一般性語意資
訊服務流程的服務品質。我們的可信度管理的共有服務機制將利用上述語意資訊服務網的
語言，本體論架構與平台來加以標示及處理，因此我們將此可信度服務程序以一般性語意
資訊服務網的完整建構程序來加以描述、搜尋、比對、搓合、協商及整合，如此一來我們
所提出的可信度模組和未來主流語意資訊服務網架構的結合將沒有問題。我們將同時從憑
證理論及社會網路兩方面考量可信度該如何被引入到上述的語意資訊服務網的架構。我們
將找出有哪些可信度的概念及適用時機可以利用安全式規範來處理，而又有哪些是必須要
用社會人際網路的方式來加以達成。並同時找出兩者對於可信度規範的差異性、互斥性、
及互補性為何？ 最後為了確認我們所提出可信度準則規範在語意資訊服務網架構的適用
性，我們將同時應用此項技術於兩種網路資訊傳播平台：部落格資訊服務網與政府公共資
訊公開服務網。我們也將在實際的全球資訊網的系統之上實作出上述的各項研究議題。 
 
 
 
 
 
 
 
 
 
 
一、 前言 
 
以全球資訊網(WWW)為主的資訊網服務(web services)因為 Web 網路的方便性以及具有高度
彈性的 XML 旗標語法的大量使用，使得資訊網服務在開放式的網路環境也可以非常的容易
被表示、登錄、查詢和執行。雖然實務界的資訊網服務的推動已經有一段時間，但是學界
還是希望能夠運用過去所發展的一些語意網的理論和技術來提昇業界原生性資訊網服務的
能量。因此語意資訊網服務(semantic web services)的構想因而應運而生。但是語意資訊
網服務的研究範圍和面向非常的廣泛，不是我們一般小型研究團隊所能完全解決的。我們
希望能夠鎖定語意資訊網的一個特定議題，也就是可信度(trust)的問題來解決如何建置一
個具有高可信度的語意資訊網服務環境和架構。 
 
基本上可信度語意式資訊網服務不論是透過認證理論或社會網路來檢驗和比較，整個研究
的重心將會是如何設計語意式可信度表達規範來檢驗其相關設定的準則，因此我們整個研
究的重點將會是如何來運用本體論與規則(Ontologies+Rules)兩大知識系統整合的學理基
礎來表示與執行可信度的規範和準則的檢驗。本研究的重心將會是找出最適合的本體論與
規則的結合來表示與落實規範與準則的表示與執行，並將此技術應用到語意式資訊網服務
最重要的兩大議題：數位著作權保護與隱私權保護的規範設計與執行，主要是因為這兩大
議題尤其是隱私權保護規範的設計和落實將導引語意資訊服務網是否可以被大眾所接受。 
 
本計畫成果報告書在於說明國科會計畫 NSC 95-2221-E-004-010-MY3 執行三年研究的具
體成果，我們將對於建立具有可信度語意資訊服務網的架構的研究核心進展有所說明。其
中以本體論加規則為本研究的核心理論基礎。因此我們探索了現有 Ontologies+Rules 的
最新發展趨勢如 SWRL, AL-log, DL-log, DL+log等，並且選中幾個模式適合在我們研究
特定應用領域：著作權管理與隱私權保護資訊兩大系統來進行可信的語意示表達與執行。
基本上這項核心理論的發展是 W3C 在語意網研究上最為重要的一環，我們具體的掌握了這
項技術的發展趨勢並且將其應用到著作權管理與隱私權保護兩大重要領域之上。  
 
二、 研究目的 
 
我們希望能夠以三年的時間來完成一個可信度語意資訊服務網環境建置的目標。為了要解
決可信度資訊網服務的目的我們將同時選擇兩種方式來加以分析和處理即：憑證理論和社
會網路。不論是上述的任何一種處理方式我們都希望能夠以語意網的本體論語言和規則語
言來表示，因此我們要找出哪些可信度的條件可以用本體論語言來表示，又有哪些條件可
以用規則語言來表示。我們希望以分年度的方式來進行這兩項可信度準則建立與檢驗，並
希望在研究的過程中找出它們之間的優越點並且找出是否可能同時來融合上述兩項技術的
可能性。對於可信度的準則建立，我們將挑選適當的資訊網服務的應用範例如著作權管理
系統或隱私權保護的資訊網服務來展示我們所提出方法的可行性和優越性。 
二、 指導畢業的研究生 
 
經過這三年的研究我們首先從社會網路建立可信度的方式來進行，主要是因為以 Web 2.0
為主的社會網路(social web)研究在最近幾年為大家所樂於討論的主題。我們在這項國科
會的支助完成位碩士班學生的論文和口試其學生姓名和題目分別為： 
 
余承遠  建構以語意社會網路為主的部落格入口網站，碩士論文（2007） 
楊鈞筑  在對等式網路上建構創用 CC 之著作權控管系統，碩士論文（2007） 
陳進棋  在網路上建構以 SWRL 為主的數位版權管理規範及應用，碩士論文（2007） 
宋昆銘  在社會網路上透過 Tag-Thesaurus 模型達到有效的資源彙整，碩士論文（2008） 
張易修  在點對點網路上以 BT 為基礎的數位媒體語意式搜尋系統，碩士論文（2008） 
李家輝  企業間顧客隱私權的保護，碩士論文（2008） 
雷嘉慶  網路論壇資訊的語意擷取，碩士論文（2008） 
黃宏傑  建構具有語意隱私偏好保護平台，碩士論文（2009） 
林光德  逼近合理使用的數位著作權管理規範語意執行，碩士論文（2009） 
郭弘毅  使用本體論與規則來執行企業隱私保護規範，碩士論文（預計 2010 年 7 月畢業） 
吳建輝  個人隱私揭露意願之推論行（預計 2010 年 7 月畢業） 
 
其中余承遠同學的碩士論文經過修改之後經發表於到每兩年舉辦的第三屆 Communities 
and Technologies (C&T) 2007 之下的一個 workshop: Between Ontologies and 
Folksonomies (BOF)， 網址： https://ebusiness.tc.msu.edu/cct2007/page4b.html ，
論文題目為：Bridging Different Generation of Web via Exploiting Semantic Social 
Web Blog Portal 本論文（詳見附錄一）已於 2007 年 6 月 27 日發表於研討會的舉辦地美
國密西根州立大學。我們另外也投稿另一篇有關於著作權管理規則的論文到第六屆國際語
意網知名的研討會 International Semantic Web Conference (ISWC) 2007，今年（2007）
11 月將於韓國的釜山同時和亞洲的第二屆 Asia Semantic Web Conference (ASWC)一起來
舉辦，研討會的網址：http://iswc2007.semanticweb.org/ 。論文發表的題目為（詳見附
件二）：Semantic-Driven Enforcement of Rights Delegation Policy via Combining Rules 
and Ontologies。另外一項研究成果則是和中央研究院的許聞廉教授一起推動台灣國內的
semantic computing 的研究，並且於 2008 年 6 月 12 日在台中舉辦一場小型的 IEEE 
International Workshop on Ambient Semantic Computing (ASC2008), 我們也發表了一
篇論文(詳見附件三)：Semantic Enforcement of Privacy Protection Policies via the 
Combination of Ontologies and Rules。基於 2007 在韓國釜山 ISWC+ASWC 2007 的研討會，
我們結識了服務於加拿大NRC-CNRC的 Dr. Harold Boley並且成為2008和 2009兩屆RuleML
國際研討會的主辦成員。我們也在 RuleML2009 研討會成為 Rule Challenges track 的主持
工作的 Co-Chair，並且同時發表另外一篇論文(詳見附件四)：Challenges for Rule Systems 
on the Web。計畫主持人也因為這項合作關係於 2009/02/01-2009/06/01 到 Dr. Harold 
Boley 服務的加拿大國科會 NRC-CNRC 實驗室進行一項 4個月短期的學術訪問和合作的研究
 
圖一：具有可信度規範準則檢驗的語意式規範互通架構平台 
 
也可以直接用來表示我們所需要檢驗的可信度規範。主要是因為我們的規範互通語言 PIF
和控管規範的meta-PIF本身是直接以本體論語言如OWL和規則語言如RIF來加以設計並且
選擇在不同的應用領域之上來建構出其可信度規範所需要的本體論和規則。 
 
我們在第一年因為是從社會網路所建立可信度的環境來切入，因此我們花了很多的時間在
社會網路分析(social network analysis)的瞭解和探索，並且從中瞭解到社會網路和語意
網相結合的必要性和方向。因為我們知道社會網路分析的結果可以提供語意網查詢上提供
具有高人氣指數指標。而語意網的旗標語法可以讓我們在社會網路的分析上更加有效和快
速。這是我們在發展語意網部落格(semantic blog)入口網站時所發現的事實。至於以軟性
的社會網路分析所建立的可信度準則和檢驗將和傳統式以安全憑證等機制建立的黑白分明
的可信度檢驗有很大的不同。 
 
本研究計畫案所用的方法是使用現有語意網正在發展的最核心技術，也就是本體論
(Ontologies)和規則(Rules)的結合（ontologies+rules）來表示上述的數位版權管理與隱
私權保護的概念與控管規範（Access Control Policies）。從過去 SWRL (Semantic Web Rule 
Language)來表示 ontologies+rules 的結合，可是這項結合方式除非所有的控管規則
(Rules)是遵守 DL-Safe 的條件否則有可能產生控管規範檢驗時不可決定性(Undecidable)
的不好結果。因此我們全面的探索所有已經被提出 ontologies+rules 的結合方式如 
務如機票或旅館的訂位。但是在新一代的社會網路的社群環境中，其服務的種類將會是
非常多樣化。因為在網路社群中如何反應並且找出大眾化的意見，來引導後來的使用者
可以瞭解到大眾化意見的變化趨勢並且讓他們可以快速且有效的找到所需要的資訊將
會是一個重要的議題。而在這些眾人意見的形成步驟中我們也不希望被有心人士所誤
導，因此可信度準則的建立將會同時包含有口碑建立出來推薦系統的正確性和公平性等
特質。另外為了確保個人的隱私權，我們往往是以匿名的方式來進行個人資訊的表達，
因此在人脈社會網路上的建立和發現將會面臨更大的挑戰。這些議題我們透過這個計畫
讓他們可以一一的獲得具體的釐清和解決。 
 
雖然透過本計畫陸陸續續有研究的成果，包含有碩士學生的畢業論文，國際研討會的論文
發表、和政大法學院、社會科學院等跨領域合作，及和國際歐盟的跨國合作。但是離我們
原先要建立完整的具可信度語意資訊服務網的目標還有一段距離。主要是因為語意資訊網
服務的技術涵蓋面非常的廣泛，我們在不重覆國外已經達成的研究議題的目標下，必須要
找出自己非常獨特的研究方向，所以在整體的進展上並不是非常的快速。另外對於可信度
的研究我們雖然過去幾年來也已經有不錯的研究成果，但是研究的面向主要還是以安全式
憑證理論(certification theory)為基礎的代理者可信度研究。對於具可信度的組合式資
訊網服務方面有加強和改進的空間。對於社會網路分析之下的資訊網服務，目前還是停留
在單純的搜尋和排序的典型資訊導引服務，我們希望可以在完整的組合式社會網路資訊服
務上有所新發現來加強 Web 2.0 的新服務架構運作。我們也希望以語意為主的著作權管理
系統可以加入語意資訊網服務的元素讓數位內容的使用和傳播更可以更符合原有數位內容
擁有者的期待及公平使用(fair use)的原則（目前這一項議題已完成初步論文並且在進行
修訂和期刊投稿之中），而彈性授權與資訊流通的目標也希望可以一併加以實現。最後對於
電子化政府(electronic government or digital government)的公領域資訊網服務和現有
私領域的資訊網服務的整合也是未來需要解決的重點，如何讓公領域的電子化政府和私領
域的商業資訊網服務可以在語法上和語意上達成互通的目的並且提供一個完整且具有高可
信度的語意資訊網服務平台將會是我們往後要努力的重點。這一部份的研究議題我們希望
在新一期的國科會計畫案可以持續的來進行，其主要的方向是利用現有以 RDF(S)為基礎的
Linked Open Data (LOD)來達成開放式政府(Open Government)資訊公開的研究議題我們希
望能夠應用這個計畫案所使用的 ontologies+rules 的結合理論基礎來實踐新申請計畫
案：提供資料共享與保護的語意規範於雲端環境中的研究目標。 
 
 
 
 
 
 
 
 
20. Klyne, G., Framework for Security and Trust Standards, 
http://www.ninebynine.org/SWAD-E/Security-formats.html  
21. Malone, W. T. et al. Editors, Organizing Business Knowledge: The MIT Process 
Handbook, The MIT Press, 2003. 
22. Nejdl, W., et al., Ontology-Based Policy Specification and Management, ESWC 2005, 
2005. 
23. O’Hara, K. et al., Trust Strategies for the Semantic Web, ISWC 2004, 2004. 
24. Papazoglou, M., Service-Oriented Computing: Concepts, Characteristics and Directions, 
WISE’03, 2003. 
25. Payne, T. and Ora Lassila, Semantic Web Services, IEEE Intelligent Systems, 2004. 
26. Richardson, M., et al., Trust Management for the Semantic Web, ISWC 2003, 2003. 
27. Ruohomaa, S. and L. Kutvonen, Trust Management Survey, iTrust 2005, LNCS3477, 
2005. 
28. Sabater, J. and C. Sierra, Review on Computational Trust and Reputation Models, 
Artificial Intelligence Review, 2005. 
29. Sycara, K. et al., Automated Discovery, Interaction and Composition of Semantic Web 
Services, Journal of Web Semantics,. Volume 1, Issue 1, December 2003.  
30. Thompson, R. M., et al., Certificate-Based Authorization Policy in a PKI Environment, 
ACM Transactions on Information and System Security, Vol. 6, No. 4, Nov. 2003. 
31. Tonti. G., et al., Semantic Web Languages for Policy Representation and Reasoning: A 
Comparison of KAoS, Rei, and Ponder, ISWC 2003, 2003. 
32. Uszok, A. et al., Applying KAoS Services to Ensure Policy Compliance for Semantic 
Web Services Workflow Composition and Enactment, ISWC 2004, 2004. 
33. Weitzner, J. D., et al., Creating a Policy-Aware Web: Discretionary, Rule-based Access 
for the World Wide Web, Web and Information Security, Idea Group, 2006. 
34. S. N. Dorogovstsev and J. F. F. Mendes, Evolution of Networks: From Biological Nets to 
the Internet and WWW, Oxford 2003. 
35. Web Services Trust Language (WS-Trust), Feb. 2005,  
http://specs.xmlsoap.org/ws/2005/02/trust/WS-Trust.pdf . 
36. The Semantic E-Business Vision, Comm. Of ACM, Vol. 48, No. 12, Dec. 2005. 
 
[碩士學生畢業論文部分] 
余承遠  建構以語意社會網路為主的部落格入口網站，碩士論文（2007） 
楊鈞筑  在對等式網路上建構創用 CC 之著作權控管系統，碩士論文（2007） 
陳進棋  在網路上建構以 SWRL 為主的數位版權管理規範及應用，碩士論文（2007） 
宋昆銘  在社會網路上透過 Tag-Thesaurus 模型達到有效的資源彙整，碩士論文（2008） 
張易修  在點對點網路上以 BT 為基礎的數位媒體語意式搜尋系統，碩士論文（2008） 
李家輝  企業間顧客隱私權的保護，碩士論文（2008） 
雷嘉慶  網路論壇資訊的語意擷取，碩士論文（2008） 
黃宏傑  建構具有語意隱私偏好保護平臺，碩士論文（2009） 
林光德  逼近合理使用的數位著作權管理規範語意執行，碩士論文（2009） 
郭弘毅  使用本體論與規則來執行企業隱私保護規範，碩士論文（預計 2010 年 7 月） 
吳建輝  個人隱私揭露意願之推論行（預計 2010 年 7 月） 
出席國際學術會議心得報告 
 
透過本計畫的執行和國際研討會論文發表的經費補助，主持人分別在 2007 年參與了兩次的
國際研討會論文發表地點和論文發表的題目如下： 
 
 Hu, Y. J. and Yu, C. Y., “Bridging Different Generation of Web via Exploiting 
Semantic Social Web Blog Portal＂, Between Ontologies and Folksonomies (BOF) 
Workshop at Communities & Technologies (C&T) 2007, Michigan State University, 
CEUR-WS Vol-312. 
 Hu, Y. J., “Semantic-Driven Enforcement of Rights Delegation Policies via the 
Combination of Rules and Ontologies＂, Workshop on Privacy Enforcement and 
Accountability with Semantics, ISWC+ASWC 2007, Busan, Korea, 2007, CEUR-WS, 
Vol-320. 
 
基本上來說這兩個研討會差異性很大。C＆T 2007 的研討會參與者主要是社會門的研究學
者，其研究的理論主要是以統計學和社會學為導向來研究在 2007 年竄紅的 Web 2.0 社會網
路如 Facebook, MySpace 等的研究。雖然部分的參與者是電腦與資訊科技為導向的研究人
員，但是整體來說研討會的主導者還是社會學門的國際大老。 
 
至於 ISWC+ASWC 2007 則是語意網的第一線研討會，這是首次亞洲的 ASWC 語意網研討會和
國際的 ISWC 語意網研討會合辦，主辦者刻意的在歐洲的 ESWC 之外，在亞洲成立一個語意
網的研討會，後續的 ASWC 2008 和 ASWC 2009 則分別選在泰國曼谷和中國上海獨立的來舉
辦第二屆和第三屆的 ASWC 研討會。在 ISWC+ASWC 2007 研討會因為論文的發表也認識了不
少知名的研究語意網的國際學者，因此收穫良多。 
 
在 2008 年主持人除了在 TAAI 的 AI Forum 介紹了語意網的最新發展趨勢之外，也和中研院
的許聞廉教授共同舉辦了一個小型的 semantic computing workshop,並且發表論文如下： 
 
 Hu, Y. J., H. Y. Guo, and G. D. Lin, “Semantic Enforcement of Privacy Protection 
Polocies via the Combination of Ontologies and Rules,＂ IEEE International 
Workshop on Ambient Semantic Computing (ASC2008)， Taichung, Taiwan, June 12, 
2008.. 
 
 
 
附件一：Hu, Y. J. and Yu, C. Y., “Bridging Different Generation of Web via 
Exploiting Semantic Social Web Blog Portal＂, Between Ontologies and Folksonomies 
(BOF) Workshop at Communities & Technologies (C&T) 2007, Michigan State University, 
CEUR-WS Vol-312. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
2 Yuh-Jong Hu and Cheng-Yuan Yu
The folksonomy of tagging system for blogs is an example to enable so-
cial web services in the Web 2.0. On the other hand, ontologies with their
machine understandable metadata aim at achieving Web 3.0 vision. If we can
(semi-)automatically mash up the ontology data and query model with the
folksonomy tagging system services, then we are in a very good shape toward
this paradigm shift. Eventually, this might realize Tim Berners-Lee’s seman-
tic web vision for an extension of the current web (Web 1.0 or 2.0) in which
information is given well-defined meaning and better enabling computers and
people to work in cooperation [2].
In Web 2.0, people interact with each other and address their opinions vol-
untarily. The challenge of this social web services depends on whether we can
collect these huge amount of unstructured public opinions and discover the
patterns among them. For the past few years, research issues for the develop-
ment of annotation system on bridging Web 1.0 ↔ Web 3.0 were intensively
investigated. People were trying to figure it out whether it is possibly to bridge
existing Web 1.0 with the future semantic web (or Web 3.0) [7][8][14]. Unfor-
tunately, the progress of this study seems to be very slow because it is a
grand challenge to have (semi)-automatic semantic annotation system to cre-
ate ontology-based semantic annotations from huge amount of unstructured
WWW contents.
The social web annotation of bridging Web 2.0↔Web 3.0 seems to provide
another window to deal with this problem. In social web annotation system,
people use free tags (or vocabularies) to address their opinions or prefer-
ences on the Internet resources, such as bookmarks, videos, blogs, and web
pages, without relying on controlled vocabularies. This resolves a hard design
problem for the construction of agreeable monolithic heavyweight ontologies.
Because it is more explicit and direct on the categorization of resources via
free tags from folksonomy than keywords mining from the Web’s contents [4].
Tagging systems are still not well studied and have the research potential for
further improvement [17]. Are there any other incentives to use free tags social
web annotation rather than to use conventional keywords-based annotation?
This will be the issue we are interested to investigate further.
Ontologies are top-down approach with hierarchical classification of infor-
mation sharing and manipulation mechanism while folksonomy is a bottom-up
approach using flat indexing to organize and search information through user
feedback. When we regard users’ free tags as social web annotations, we still
might need ontologies to classify these free tags into different taxonomy. Fur-
thermore, ontologies can provide well-defined structure schema to bind entity
semantic association together and that was impossible to be realized by the
tagging system alone. These entity relationship semantics might exist among
tagger, tags, and resources declared implicitly by entity themselves. We pro-
pose a blog ontology and a topic ontology to harbor all of these free tags
to describe the semantics of entity relationships in the blogspace. We allow
users to explicitly enable semantic social web query for tags with their entity
semantic relationships to get what they are really interested.
4 Yuh-Jong Hu and Cheng-Yuan Yu
FOAF profiles, are extracted and analyzed to acquire their semantic rela-
tionships [9][19]. The purposes of these studies were to apply SNA tech-
niques to analyze the ontology-based context information for the semantic
web research community.
• Blog as social network: Gruhl et al. studied the dynamics of informa-
tion propagation through blogspace [11]. Furthermore, the blogspace can
be shown as community using SNA model to express its entity social rela-
tionships through links, comments, and trackbacks, etc [1][6][15]. But they
only addressed pure blog ecosystems.
3 Research Goal
The goal of this research is to construct a semantic social web portal and
to exploit the incentives of bridging Web 2.0 ↔ Web 3.0. The incentives
will be justified when we can search information through this semantic social
web portal compared with other systems that only provide simple tags (or
keywords) search on Web 2.0 or ontology query on Web 3.0. Unless we can
extend tags to have corresponding semantic context, the expressive power
of tags is limited. In this study, we found that coherent taxonomies of blog
articles can emerge from users tagging so relevant customized ontologies can
be constructed.
3.1 Social Network Analysis
Social network analysis (SNA) is the quantity study of the relationships be-
tween individuals or organization. By quantifying social network structures,
we can determine where are the most important nodes in the network [24].
The implications of SNA usage are quite different when we apply SNA to
different generation of Web.
• SNA for Web 1.0: The information on Web 1.0 is rather static so people
only apply SNA on paper citation network or person relationship network
to discover their stable relationships [18].
• SNA for Web 2.0: The nature of information flow on Web 2.0 is dynamic
and user oriented. All of the tags, resources, and tagger’s profiles on Web
2.0 are dynamically created so the challenge to apply SNA for this platform
is how can we timely extract the relationships between taggers with an-
notated tags and their respective resources to enable effective information
search [12].
• SNA for Web 3.0: We are aiming at bridging of Web 2.0 ↔ Web 3.0. The
issues we consider including Web 2.0, Web 3.0, and SNA, are different from
pure semantic social network approach shown in [19].
6 Yuh-Jong Hu and Cheng-Yuan Yu
service is classified and focused so the search time is reduced and accuracy
is also improved.
• Semantic social web query services via SNA+ontology+tags: In a blog
ontology, we define properties to describe the relationships between blog-
gers, tags, and articles. Additionally, the important SNA measurement
attributes are also declared in a blog ontology. Therefore, we can leverage
the power of SNA measures from dynamically generated relations through
blogger’s daily activity events to enhance this service. We propose two
possible scenarios for this service that could justify our hypothesis 2:
1. Scenario One: I would like to search authors and their blog articles
with “cuisine” tag paired with “restaurant” keyword in the associated
title or content of the article collected from the entire blog community.
Furthermore, please present these authors’ names and their associated
titles of article in a decreasing order of authors’ indegree measures:
prefix blog: <http://blog.nccucs.org/blog.owl#>
prefix rdf: <http://www.w3.org/19999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?Author ?Article
WHERE
{?Article rdf:type blog:Article
?Article blog:has_articleTag blog:cuisine
?Article blog:has_author ?Person
?Person blog:person_ID ?Author
?Person blog:person_indegree ?Popularity
FILTER {regex(?TitleOfArticle, "restaurant") ||
regex(?ContentOfArticle, "restaurant"))}
}
ORDER BY DESC (?Popularity)
2. Scenario Two: I would like to search blogger names and their articles
from the cuisine channel for those of whom are known by authors pre-
sented in scenario one. Furthermore, please present these blogger names
and their associated titles of article in a decreasing order of authors’
indegree measures:
prefix blog: <http://blog.nccucs.org/blog.owl#>
prefix rdf: <http://www.w3.org/19999/02/22-rdf-syntax-ns#>
SELECT DISTINCT ?Author ?Friend ?TitleOfFriendArticle
WHERE
{........
Codes Same As Scenario One
........
?Person blog:has_knows ?friend
?friend blog:person_ID ?Friend
2 The embedded codes are shown as SPARQL query language but users do not
require to have knowledge of SPARQL syntax in order to execute semantic social
web query services.
8 Yuh-Jong Hu and Cheng-Yuan Yu
Fig. 1. A layer conceptual schema for construction a semantic social web blog portal
4.2 Data Analysis
In our mashup model, the free tags collected from users are usually 2-word or
3-word Chinese words (or characters) to annotate their daily real life’s living
activities. The scan and parsing processes of Chinese characters are different
from the English free tags. There are no spaces between Chinese characters so
we use regular expression to extract the meaningful high frequency 2-word or
3-word tags as our folksonomy final consensus social web annotations. With
no surprise, the distribution for the top 300 tags is shown as power law that
is similar to lots of other studies [12].
Initially the tags addressed by blogger in the WRETCH only imply that
the taxonomy of blog articles can be classified as one of 16 broad channel cat-
egories, such as living, cuisine, music, drama, travel, etc. When we carefully
examined the tags, we surprisingly found that those of significant 54,824 blog-
gers (approximate to 50% of 108518 bloggers) with their addressed 1046 tags
were converging to some of high frequent 521 2-word and 197 3-word tags.
And these tags were evenly distributed to our 16 broad channel categories.
This demonstrates that the social consensus opinions are possibly formulated
in terms of folksonomy tagging. We are expecting a more powerful folksonomy
annotation scheme can be realized in a near future as long as we have more
versatile ontology+tag structure.
4.3 Blog Ontology
The blog ontology describes the profile of a blogger with his blog articles
(see Fig. 2). The profile of a blogger is very similar to FOAF that defines a
blogger’s personal ID, friend relationship, and mbox, etc. The attributes of
each blog article include article title, date, feedback comment, and trackback,
etc. In addition, the SNA index measure is defined as one of a blogger’s pro-
file attributes. Therefore, SNA analysis capabilities were embedded into blog
ontology to serve our SNA+ontology+tag semantic social web query services.
10 Yuh-Jong Hu and Cheng-Yuan Yu
Fig. 3. Topic ontology - Channel and Tag are subclasses of Category so we can
automatically mash up ontology data and search model with the folksonomy tagging
system services
[7]. Therefore, most of the semi-automatic annotation systems usually apply
machine learning techniques to recognize new class instances and relation in-
stances mining from the Web. In the folksonomy annotation for bridging of
Web 2.0 ↔ Web 3.0, the granularity of class instances and relation instances
are restricted to the resource targets that can be clearly tagged by folksonomy.
The folksonomy of social web annotations are explicitly collected from tags
or implicitly initiated by users from their activity events. These explicit tags
and implicit events are precise terms that describe the instances and relations
corresponding to our ontology schema.
The objective and granularity of tags for describing instances and rela-
tions that corresponding to the target resources can be further refined if we
have more elaborate social web annotation system in the future. As seman-
tic wikipedia in [23], we might allow users to enable semantic tags similar to
typed links and attributes two kinds of property for describing corresponding
abstract relationship and concrete attributes within/between entity. Then var-
ious levels of reasoning for discovery of semantic relationship among taggers,
tags, and resources can be achieved.
Our semantic social web annotation system takes three inputs either col-
lected by web crawler or computed by local software agent. The first is HTML
blog pages with hyperlinks , comments, and trackbacks context. The second
is RSS context with permalink, publication data, author, and description at-
tributes. The third is tags, channel, and SNA indices computed via agents.
They are all stored in a local database and to be mashed up for afterward
semantic social web query services (see Fig. 4).
4.6 Semantic Social Web Blog Portal Testbed
An online semantic social web blog portal testbed (see Fig. 5) was constructed
based on previous layer conceptual schema (see Fig. 1) to experiment our
12 Yuh-Jong Hu and Cheng-Yuan Yu
5 Conclusions
The goal of this research is to exploit the incentives of bridging Web 2.0 ↔
Web 3.0 via building a semantic social web blog portal. On the Web 2.0, we
usually use tagging system to label all kinds of Internet resources. Web 2.0 is
a folksonomy social web, where we effectively search what we are desirous of
information through tags. The tagging system enables the wisdom of crowds
and surprisingly social consensus can be derived from these voluminous and
unregular tags. Contrarily, Web 3.0 (semantic web) is aiming at using ontol-
ogy for effectively information search under taxonomy classification. We have
justified that the concepts of folksonomy and taxonomy can be mashed up to-
gether to achieve semantic social web query services via bridging of Web 2.0↔
Web 3.0. That allows us to leverage search capabilities from both bottom-up
folksonomy indexing and top-down taxonomy ontology two techniques.
Conceptually, tags in the tagging system are equivalent to terms mining
from the WWW in the conventional annotation system. The terms mining
from the Web are usually defined as instances that are related to a particu-
lar class or property in ontology. But tags from the folksonomy are usually
instances related to a particular class. Therefore, all of the relation instances
have to be created dynamically following the ontology schema. The relation
instances that describe the relationships between bloggers, tags, and blogs,
are generated from blogger’s daily activity events based on our blog ontology.
Although users can effectively search information by folksonomy tagging sys-
tem in Web 2.0, we still have the capacity to improve search capability via
social network analysis (SNA). A real SNA-based semantic social web query
services could possibly encourage users to find out what they are really inter-
ested in because well-organized topic-specific ranking contents are ready for
user to enjoy.
Acknowledgements
This research was partially supported by Taiwan National Science Council
(NSC), Under Grant No. NSC 95-2221-E-004-001-MY3.
References
1. Ali-Hasan, N. and Adamic, L. A., Expressing Social Relationships on the Blog
through Links and Comments. http://www-personal.umich.edu/~ladamic.
2. Berners-Lee, Tim, et al. (2001). The Semantic Web. Scientific American, May.
3. Bojars, U. , Breslin, J. G., and Moller, K. (2006). Using Semantics to Enhance
the Blogging Experience. Proceedings of 3rd European Semantic Web Confer-
ence (ESWC 2006), 679-696.
附件二：Hu, Y. J., “Semantic-Driven Enforcement of Rights Delegation Policies via 
the Combination of Rules and Ontologies＂, Workshop on Privacy Enforcement and 
Accountability with Semantics, ISWC+ASWC 2007, Busan, Korea, 2007, CEUR-WS, 
Vol-320. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
2that a request to access rights complies with relevant policies. A general-purpose
Rights Expression Language (REL) is a type of policy delegation language where
the focus of the language is on the expression and transference of usage rights or
capabilities from one party to another in an interoperable manner. It will be a
challenge to design a general-purpose REL for the DRM system that expresses
rights delegation policies and controls digital content [13]. Emerging acceptable
industry REL are classified into two major camps: Open Digital Right Language
(ODRL) and eXtensible rights Markup Language (XrML). Unfortunately, the
semantics of both of these RELs are either described in English or as computer
algorithms, therefore, they lack machine understandable formal semantics.
There are two core components for a DRM rights delegation policy: an REL
language for expressing policies and an evaluator that can make decisions based
on such expressions. The policy evaluator must be able to reason correctly con-
cerning all types of policy it may encounter when making a trusted decision to
grant rights. Thus, the design of a policy evaluator is going to be influenced by
the design of the REL language. A DRM policy evaluator must decide for each
requested access whether the policy (or policies) is relevant to the request and
whether or not to allow it to occur for a given license. This formulation of a DRM
policy evaluation can be regarded as a “compliance checking” decision problem
in a trust management system [1]. The license is derived from a legal contract
that states the permissible agreements under which digital contents can be legit-
imately accessed. The languages for writing licenses (or permissible agreements)
usually fall into three categories: a human readable natural language, a software
readable XML-based language, and a machine understandable language [18].
When we consider digital contents as protected, sensitive, personal infor-
mation which might be disseminated over the entire Web, then the usage and
delegation rights control issues we are facing are just the same as those existing
in the DRM system. Disseminated digital content (or information) with asso-
ciated licenses are encrypted with appropriate security keys. If a node with a
service request can decrypt the downloaded information and license, then the
node’s embedded license evaluator will faithfully interpret the license semantics
and enforce the license agreements, including ontology, rules, and facts, to decide
whether a request should be granted or not.
2 Research Goal
The goal of this research is to deal with the problem that license agreements
written in ODRL REL, are open to interpretation that results in semantic ambi-
guity. This is because the stated conditions for which resources access legitimate
license are written in English. We need an abstract semantic layer that can
be overlaid on existing ODRL data models to express their license and service
semantics instead of using natural language, such as English.
ODRL is one of the most popular RELs for expressing digital license exchange
and sharing, it also has an XML-based markup language. As we know, XML has
the capacity of marking up licenses and data for machine processing but does
43 Related Work
DRM and other modern access controls, such as privacy protection, RBAC, etc,
are all regarded as UCONABC models which integrate Authorization (A), oBli-
gations (B), and Conditions (C) elements. Usage control is a generalization of
access control that covers authorization, obligation, conditions, continuity (on-
going controls), and mutability [17]. In [21], a rule-based policy management
system can be deployed in an open and distributed WWW site by creating a
“policy aware” infrastructure. This makes the widespread deployment of rules
and proofs on the Web to become a reality. However, this server-based access
control infrastructure cannot be applied to DRM or other methods of privacy
protection for usage and rights delegation control where information might be
disseminated over the entire Web. Delegation Logic, a datalog-extended tractable
logic-based language with expression of delegation depth and complex principals
was proposed to represent policies, credentials, and requests in distributed au-
thorization. However, it did not have a rights markup language to explicitly
encode rights delegation ontology for automatic agent processing of its rights
delegation semantics [14].
XrML does not have formal semantics [3]. Instead, the XrML specification
presents semantics in two ways: as an English description of the language or
as an algorithm that determines if rights are permissible from a set of licenses.
A formal foundation model for XrML semantics is shown as FOL-based rights
expression statements [7]. ODRL is another popular XML-based REL language
used to state the conditions under which resources can be legitimately accessed
[10]. ODRL does not have formal semantics either. The meaning of the lan-
guage’s syntax is described in English; license agreements written in ODRL are
open to interpretation that results in semantic ambiguity. In order to resolve
this problem, a formal foundation model for ODRL semantics is shown as a
generic restricted FOL but it has less expressive power on rights expression and
delegation as our SWRL approach [18]. In [6], they only provide a generic rep-
resentation of contract information on top of RELs so that the enforcement of
access rights can be extracted from ODRL-based digital license contracts. But,
machine understandable formal semantics cannot be represented and processed
in this study. In [4], an OWL-based ODRL formal semantic model is designed
and deployed but it does not have usage and transfer rights delegation service
capability. In summary, a formal foundation for ODRL or XrML semantics are
shown as either FOL or OWL, but they all lack semantic-driven enforcement of
rights delegation policies [4][18].
4 License Agreement for Usage Rights
The central construct of ODRL is a license agreement. A license agreement indi-
cates the policies (rules) under which a principal Prino allows another principal
Prinui to use an asset r presumably owned by Prino, where Prino is an asset
owner and Prinui is one of n asset users, where i ∈ (1, · · · , n). A license agree-
ment refers to a policy set showing any number of prerequisites and policies. A
64.2 Usage Rights Delegation
We define hasUsageRights as an abstract property describing the generic usage
rights for a principal x to use an asset r. The domain class of hasUsageRights
property is Party, and the range class is Asset (see Fig. 2). The domain class
of delegate property is Prino and the range class is Prinu, where the dele-
gate does have subPropertyOf (delegateg, delegatet, · · · ). The delegateg repre-
sents generic usage rights delegation property and the delegatet represents rights
transfer delegation property. We do not allow a principal x be able to delegate
his or her generic rights to another principal y if that principal x only has some
usage rights but does not have any permissible transfer rights.
Fig. 2. A rights delegation snapshot based on rights delegation ontology
5 License Agreement for Transfer Rights
The delegation processes for transfer rights license agreements are activated
using delegatet property, where the rights receiver owns the delegated rights
but the rights owner might lose the rights temporarily or permanently. This is
not true for some rights delegation scenarios where the rights owner and the
rights receiver might have their rights concurrently. Thus, we create a rights
duplicate delegation, indicated as delegated from a variety of transfer rights.
In this rights duplicate delegation property delegated, the rights original owner,
concurrently has his or her own rights with the rights receiver after the rights
duplicate delegation process is completed.
8she can not keep his or her own rights after delegation:
hasUsageRights(?x, ?r) ∧ hasTransferRights(?x, ?r)
=⇒ hasUsageTransferRights(?x, ?r)←− (o1)
– Party x can only transfer his or her usage rights for asset r to another party
y if his or her cumulative depleted usage count <∃u, where u is a constant
indicating a count of upper limit of usage rights. Here, party y can have
delegated usage rights but cannot have further delegation rights:
hasUsageTransferRights(?x, ?r)∧delegateg(?x, ?y)∧hasPrepaid(?y, ?a)∧
<∃u hasUsageCount(?r) =⇒ hasUsageRights(?y, ?r)←− (o2)
– If party x has usage rights permission for resource r and the cumulative
depleted usage count is <∃u. Furthermore, party x’s current local date and
time t ∈ (t1, t2) , then he or she is permitted to have these particular usage
action, such as play, display, or print, etc:
hasUsageRights(?x, ?r)∧ <∃u hasUsageCount(?r)∧ ≥∃t1 hasDateT ime(?t)
∧ ≤∃t2 hasDateT ime(?t) =⇒ Permitted(Usage, ?r)←− (o3)
– Party x can transfer his or her usage and transfer rights for asset r to an-
other party y so party y can have x’s both rights to transfer rights forward
as long as x is not the final node in a delegation chain:
hasUsageTransferRights(?x, ?r)∧delegatet(?x, ?y)∧hasPrepaid(?y, ?a)∧
≥1 hasTransferCount(?r) =⇒ hasUsageTransferRights(?y, ?r)←− (o4)
5.3 A Usage Rights Delegation Scenario
The following license agreement for a usage rights delegation scenario is adopted
and modified from [18]. For reasons of space, a detailed discussion of the impli-
cations of our complete operational semantics for this scenario is left to the full
paper for further study. This might need a speech-act agent communication lan-
guage to represent message passing ontology, which would then allow our agents
to automatically exchange interactive information among themselves as shown
in [11]:
– Natural Language (NL) denotation of license agreement:
Content distributor Charlie c makes an agreement with two content con-
sumers, Alice a and Bob b. After each paying five dollars, and then both
receiving acknowledgement from Charlie, Alice and Bob are given the usage
rights and may each display an eBook asset, Harry Potter and the Deathly
Hallows, up to five times. They may each print it only once. However, the
10
∗ Ontology:
hasDisplayRights v hasUsageRights
hasPrintRights v hasUsageRights
≤ (hasDisplayCount{a,b}.eBook, hasUsageCountc.eBook)
≤ (hasPrintCount{a,b}.eBook, hasUsageCountc.eBook)
{Alice,Bob} domain←− hasUsageRights range−→ R1,
where R1 =≤10 hasUsageCountc
∧ ≥2007/05/07/0900 hasDateT imec.T ime
∧ ≤2007/05/10/2400 hasDateT imec.T ime
∃ =α ∃ = sum(∃ ≤5 hasDisplayCounti.{HarryPotter}), i ∈ {a, b},
where α: ∃hasDisplayCountc.{HarryPotter} ←− (c1)
∃ =β ∃ = sum(∃ ≤1 hasPrintCounti.{HarryPotter}), i ∈ {a, b},
where β: ∃hasPrintCountc.{HarryPotter} ←− (c2)
∃ =δ sum(α, β),
where δ : ∃hasUsageCountc{HarryPotter} ←− (c3)
∗ Rules:
hasDisplayRights(?x, ?r) ∧ hasSelldRights(?x, ?r)
=⇒ hasDisplaySelldRights(?x, ?r)←− (c4)
hasPrintRights(?x, ?r) ∧ hasSelldRights(?x, ?r)
=⇒ hasPrintSelldRights(?x, ?r)←− (c5)
hasDisplaySelldRights(?x, ?r) ∧ delegateg(?x, ?y)
∧ hasPrepaid(?y, ?a)∧ =⇒ hasDisplayRights(?y, ?r)←− (c6)
hasPrintSelldRights(?x, ?r) ∧ delegateg(?x, ?y)
∧ hasPrepaid(?y, ?a) =⇒ hasPrintRights(?y, ?r)←− (c7)
∗ Facts:
eBook(HarryPotter)
hasDisplayRights(Charlie,HarryPotter)
hasPrintRights(Charlie,HarryPotter)
hasSelldRights(Charlie,HarryPotter)
hasDisplaySelldRights(Charlie,HarryPotter)
hasPrintSelldRights(Charlie,HarryPotter)
∃ =5 hasPrepaid(Alice)
hasDisplayRights(Alice,HarryPotter)←− (c8)
hasPrintRights(Alice,HarryPotter)←− (c9)
∃ =5 hasPrepaid(Bob)
hasDisplayRights(Bob,HarryPotter)←− (c10)
hasPrintRights(Bob,HarryPotter)←− (c11)
delegateg(Charlie, Alice)
delegateg(Charlie,Bob)
∃ =7 hasUsageCountc(HarryPotter)←− (c12)
∃ =6 hasDisplayCountc(HarryPotter)←− (c13)
12
∃ =1 hasDisplayCounta(HarryPotter)←− (a6)
∃ =0 hasPrintCounta(HarryPotter)←− (a7)
∃ =7 hasUsageCountc(HarryPotter)←− (a8)
hasDateT imea(2007/05/09/09 : 00)←− (a9)
• Content consumer Bob′s b site:
∗ Ontology:
Similar to content distributor Charlie′s c site’s ontology, except the
usage rights constraints are local to Bob b
∗ Rules:
Similar to content consumer Alice′s a site’s rules, except the condi-
tion’s subscript is b in rules (a1) and (a2)
∗ Facts:
eBook(HarryPotter)←− (b1)
hasDisplayRights(Bob,HarryPotter)←− (b2)
hasPrintRights(Bob,HarryPotter)←− (b3)
∃ =5 hasDisplayCountb(HarryPotter)←− (b4)
∃ =1 hasPrintCountb(HarryPotter)←− (b5)
∃ =7 hasUsageCountc(HarryPotter)←− (b6)
6 Discussion
In Fig 3, the XML-based rights expression languages (RELs), such as ODRL,
XrML, and P3P, are convenient for automatic machine (or agent) processing but
do not have formal semantics to represent and enforce access rights permission.
Therefore, policies based on these RELs to describe a license agreement (or
contract) are usually written in Natural Language to indicate their meaning for
the verification of access rights permission. As a result, these natural language
policies sometimes are open to interpretation, which result in ambiguity of policy
semantics. In order to remove this problem, people use FOL to represent and
reason access rights control policies (see Fig 3). As we know, FOL-based policies
have a formal and clear syntax and semantics, even these FOL-based policies
usually have to limit their expressive power in order to capture those license
agreements that are originally written in English. Unfortunately, policies shown
as FOL always require policy writers and readers to be logicians. Furthermore,
policies indicated as a generic full FOL may feature compliance checking that
may be undecidable for their computation time.
To resolve this dilemma, we are going to explore the expressive power of
different FOL-based policies representations to decide which conditions allow us
to have both decidable and enforceable semantics capability of rights delega-
tion policies. In order to have a decidable and tractable fragment of FOL-based
policies to enforce respective compliance checking, we usually restrict policies as
datalog Horn rules, where they are negation-free, function-free, and with limited
number of parameter parities. Description Logic (DL) is a decidable fragment of
14
language is only located somewhere in a small subset of FOL language. There-
fore, it still lacks a large portion of OWL-DL and datalog Horn rule expressive
power to serve both right delegation ontology and usage (or transfer) rights
delegation rules, as shown in Section 4 and Section 5.2.
In [20], KAoS and Rei policy languages were shown as originally from DAML
→ OWL and RDF-S so it is quite trivial that these two policy languages are
merely a subset of SWRL. Therefore, the expressive power of KAoS and Rei
are less than SWRL because the rights delegation policies cannot be shown as
a pure OWL-DL ontology language alone. In [12], Rei was extended to be a
policy and delegation framework that includes inter-related resources, policies,
policy languages, and meta-policies. However, authorization delegation policies
were not explicitly seen in this study.
In this paper, we utilize the power of SWRL combined language to demon-
strate the possibility of semantic-driven enforcement of rights delegation policies.
A license agreement for a rights delegation policy is a policy set showing any
number of prerequisites and relevant policies. A policy set is composed of facts,
ontologies, and rules. These license agreements are distributed by distributor
Charlie to consumers Alice and Bob. In this delegation scenario, the usage
rights are applied to the entire eBook class instead of merely to the instance
of HarryPotter’s eBook. In this policy-aware distributed DRM system, each
trusted DRM node should faithfully enforce its rights delegation policies via its
“compliance checking” inference engine.
There are several mutable facts in each node that express a prerequisite’s dy-
namic status. These mutable facts will be updated and passed between distribu-
tor and consumers whenever a usage rights permission is granted and consumed.
The mutable facts updating activity will be initiated as an Event-Condition-
Action (ECA) reaction rule, where event might be triggered by a user’s request
or a message’s arrival. The condition is specified in each relevant rights dele-
gation rule and the action includes usage rights enforcement and mutable fact
updating actions.
7 Conclusions
We have shown that the semantic formal model for an ODRL-based rights dele-
gation policy can be enforced by expressing them as a combination of ontologies
and rules. Based on ODRL’s expressions and data dictionary, a rights delega-
tion ontology is proposed in this study. Furthermore, we also express the rights
delegation policy as a set of rules for usage and transfer (or duplicate) rights del-
egations. When verifying ODRL formal semantics, our SWRL approach is much
more superior to the generic restricted FOL model because of the greater avail-
ability of a rights markup language and the higher expressive power of policy
compliance checking from our SWRL language. A real usage rights delegation
scenario is demonstrated in this paper to justify our formal semantic model.
附件三：Hu, Y. J., H. Y. Guo, and G. D. Lin, “Semantic Enforcement of Privacy 
Protection Polocies via the Combination of Ontologies and Rules,＂ IEEE 
International Workshop on Ambient Semantic Computing (ASC2008)， Taichung, Taiwan, 
June 12, 2008.. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
to make automated or semi-automated decisions regarding
the acceptability of machine-readable privacy policies from
P3P enabled Web sites [8].
Unfortunately, XML-based markup languages, such as
P3P and APPEL, do not have the expressive power to model
and enforce the semantics of a person’s privacy protec-
tion intentions from both client and server sides [17] [29].
Therefore, we cannot simply use XML-based P3P to spec-
ify our privacy protection policies and ensure that these
policies can be automatically verified to comply with the
underlying legal regulations from a semantics unambiguous
perspective. Obviously, we need a higher formal semantics
layer laid on the P3P/APPEL to ensure all of the semantic
clearness for policy compliance checking, which has been a
very important research area of trust management for policy
making [4].
If a website is trustworthy, we might allow it to freely
collect our personal profiles and digitally traced informa-
tion because we have confidence that this website will abide
by the legalized information sharing and disclosure poli-
cies under the law per se to respect our intentions and op-
tions on the data usage. However, the problem is whether
a trusted website can really be aware of the usage options
and purposes for the collected information coming from a
tremendous amount of different users on their selective op-
tions of personal profiles and digital traces. Another issue is
whether we allow our agents to enforce the privacy protec-
tion principles unambiguously without our direct interven-
tion. If possible, we might need to delegate privacy protec-
tion compliance checking services to one of the trustworthy
web site’s agents to ensure our benefits.
2 Related Studies
The P3P/APPEL privacy protection mechanisms were
proposed to enable easy collection of data user (or data con-
sumer) and date subject’s (or data owner) usage purposes
and conditions under a client server model [7] [8]. How-
ever, P3P can not support any semantics level representa-
tion and enforcement of privacy protection policies because
P3P/APPEL expressions were based on XML syntax only.
Similarly, the E-P3P (or later EPAL) was based on previ-
ous Flexible Authorization Framework (FAF) [28] [13] that
was proposed to express and enforce the enterprise’s privacy
protection policies on the Web [15] [16]. The EPAL was
using a logic program (LP) model to indicate the data usage
purposes for a particular role under certain conditions. But
the semantic representation and enforcement from the logic
program model are still far from satisfactory from semantic
representation and enforcement viewpoints.
While EPAL and XACML are proposed as privacy pol-
icy languages, they are very similar in both structure and in
concept but the differences between these two languages are
significant. Anderson argued that enterprises should choose
XACML as a privacy policy language because the function-
ality of XACML 2.0 is a superset of EPAL 1.2 [1]. In order
to ascertain all of information disclosure actions will abide
by its privacy protection regulations; current P3P/EPAL pri-
vacy protection mechanisms were implemented and embed-
ded into the relational database, such as Oracle Virtual Pri-
vate Database (VPD) [17]. But it is not easy to exchange
and share personal data and digital traces from heteroge-
neous data sources under VPD architecture. Certainly it
is not easy to exercise the auditing and policy compliance
checking based on the current P3P/EPAL design and imple-
mentation mechanism [2]. We need to have a more gen-
eral and powerful semantic representation and enforcement
of privacy protection framework to deal with the possible
challenges that cannot be resolved by P3P/EPAL alone.
Previous semantic policy languages for security or pri-
vacy control were proposed either using description logic
ontologies or logic program rules alone. For example,
KAoS, Rei, and Ponder policy languages were based on
ontology representation and reasoning only, so they were
pretty limited with respect to their policy representation and
enforcement [14] [25]. Similarly, the rule-based policy
representation faced the same limitations on policy expres-
sion and enforcement [3] [6] [26]. In general, these policy
languages have less expressive power compared with our
ontologies+rules combination for policy representation and
enforcement.
3 Privacy Protection on the Web
The original idea of WWW (or Web) is to promote the ef-
fective sharing and exchange of information among agents
and people. After several years of development, the pri-
mary objective of this concept has been achieved to some
extent. However, we expect information collectors provide
the information disclosure option services for us as respect-
ing our basic human rights while they are collecting and
sharing our personal profiles and digitally traced informa-
tion among themselves. In fact, this privacy protection con-
sideration has become one of the most important emerging
research issues in Web development.
3.1 Privacy Protection on Web 1.0 and
Web 2.0
The Web 1.0 and Web 2.0 privacy protection problem is
the primary focus for most of the current privacy protection
languages, such as P3P/EPAL and XACML [1] [7] [15].
However, the systems enforced with these privacy protec-
tion languages cannot deal with the digital trace protection
and disclosure issues because users’ digital traces are usu-
ally stored as unstructured text-based weblog files. Further-
Figure 1. A data user hierarchy to classify the
data user class hierarchy
digital traces can be shown as Figure 2.
3. The purpose ontology to describe the intention of data
user to use a particular type of data can be shown as
Figure 3.
4.2 Two Scenarios for Privacy Protection
of Mail Servers
A privacy protection scenario for three email users
(Alice, Bob, and Charlie) in a mail server G to enforce
privacy protection policies under a specific purpose from
different organization domain is shown as follows:
G company is a well-known mail server portal that pro-
vides email sending, receiving, and storing management
services for its registered users. In order to apply for an
email account from this portal, each new user has to explic-
itly fill in his own office profile information to this portal,
including name, office phone number, office address, and
working organization, etc. Furthermore, for the purposes
of providing the user’s personal email search and retrieval
or for the management of a mail server’s own business ser-
vices, dynamically generated users’ digitally traced infor-
mation will be online extracted, (un)disclosed, and even
archived in this portal during email sending and receiving
activities.
The possible online digitally traced information ex-
tracted, (not-)disclosed, and archived from this mail
server portal are IP address for each time the user signs
Figure 2. A class hierarchy classification for
both personal profiles and digital traces
in, sender’s/receivers’ email address(es) for each incom-
ing/outgoing email, the titles and contents for each thread
of all associated emails, etc. Of course, the mail server G
does provide opt-in and opt-out mechanisms for the user to
decide whether his public (or private) profile and digitally
traced information can be (not-)disclosed under certain cir-
cumstances for some roles to achieve a specific purpose.
Please propose DL+ log-based privacy protection poli-
cies that can explicitly specify ontologies and rules to sat-
isfy the weak DL-safeness conditions to have the semantic
enforcement of privacy protection objective via the combi-
nation of ontologies and rules [23]. The knowledge bases
of ontologies and rules for two use case scenarios can be
shown as: 2.
A 5-tuple term (user(s), type(s), purpose(s), right(s),
condition(s)) is a fact shown as the P3P XML-based rep-
resentation from data owner specified options on the data
usage’s for data user(s), where user(s) ∈ data user ontol-
ogy, type(s) ∈ data type ontology, purpose(s) ∈ purpose
ontology; right(s) ∈ (read,write,display,disclose,..), and
condition(s) ∈ (date,time,counter,..). Once this 5-tuple
term was collected from data owner, it will be extracted
and decomposed as several legal predicates that fitted into
the grounding facts for the ontologies module and the
2In the following rules and facts, each term shown as capital letters
comes from ontologies while each term shown as little letters is defined
as Datalog predicates. This is the feature of a hybrid ontologies+rules
combination.
cando(?c,?b-email, nill) ⇐=
opt-out(?b,?b-email,?p)), data-user(?c),
data-owner(?b),
HAS EMAIL ADDRESS(?b, ?b-email). ← (a2)
opt-in(?b,?b-email,?p) ⇐=
IS STAFF OF(?b,?c1), IS STAFF OF(?c, ?c2),
HAS SUBSIDIARY(?c1,?c2),
HAS MAIL TRACE ONLINE(?a-email,?c-email),
O EMAIL SENDER(?a-email),
O EMAIL RECEIVER(?c-email),
data-owner(?b), data-user(?c), purpose(?p),
data-type(?b-email). ← (a3)
opt-out(?b,?b-email,?p) ⇐=
IS STAFF OF(?b,?c1), IS STAFF OF(?c, ?c2),
HAS COOPERATIVE(?c1,?c2),
HAS MAIL TRACE ONLINE(?a-email,?c-email),
O EMAIL SENDER(?a-email),
O EMAIL RECEIVER(?c-email),
data-owner(?b), data-user(?c), purpose(?p),
data-type(?b-email). ← (a4)
Rules Module’s Facts:
data-user(Bob), data-owner(Bob),
data-user(Charlie), data-owner(Charlie),
purpose(data-auditing),
data-type(Bob@yahoo.com.tw),
data-type(Charlie@hotmail.com),
opt-in(c,Charlie@yahoo.com,data-auditing),
cando(Bob,Charlie@yahoo.com,display),
cando(Charlie,Bob@yahoo.com.tw,nill),
opt-out(b,Bob@yahoo.com.tw,data-auditing)
From Bob’s side, a mail server G will be
grounding rule (a4) first and then it will derive
opt-out(b,Bob@yahoo.com.tw,data-auditing) as
a conclusion. The opt-out(..) will be-
come one of the facts in rule (a2) con-
ditions once Charlie activates his email re-
ceiving action from mail server G to read
this particular email from Alice@gmail.com.
The recipient email address Bob@yahoo.com.tw
will not be displayed due to the conclusion
of cando(Charlie,Bob@yahoo.com.tw,nill) from
rule (a2) due to the nill access right.
From Charlie’s side, a G mail server does not
have the constraints from Charlie to enforce as-
sociated privacy protection policies so Bob is
aware Charlie as one of the mailing list recip-
ients with Charlie@hotmail.com in his receiving
email message (see Figure 4). In the rule (a3),
it satisfies weak DL-safeness but it does not sat-
isfy DL-safeness conditions because some of the
variables c1 and c2 in IS STAFF OF DL predicate
did not occur in any Datalog predicates.
• Use case two scenario: The auditing officer Bob
serves in one of government auditing agencies In-
ternal Revenue Service (IRS), where IRS ∈
GOV AGENCY v PUBLIC. Bob is going to en-
force a routine auditing check to a company M ∈
COMPANY v PRIV ATE through its representa-
tiveCharlie. An auditing announcement officerAlice
from IRS is going to send an email to a representative
employee Charlie ∈ M and other company represen-
tatives to notify the account-auditing schedule. Under
government’s auditing regulations, the real acting au-
ditor Bob as one of the mailing list recipients served in
IRS cannot disclose his email address in this account-
auditing notification email. Therefore, a chief privacy
officer (CPO) ∈ IRS has to opt-out the acting auditor
recipient Bob’s email address to comply the regula-
tions while Alice is sending an account-auditing noti-
fication message (see Figure 5).
Figure 5. A recipient Bob’s email address
Bob@government.gov cannot be disclosed to
Charlie under auditing regulations for the
purpose of delivering auditing notification
email to Charlie
The ontologies module and the rules module for
this use case two scenario are very similar to those
specified in the use case one scenario except condi-
tions for rule (a3) and rule (a4) are not shown as
binary ontology predicates HAS SUBSIDIARY (..)
and HAS SUBSIDIARY (..) instead they are re-
placed as unary ontology predicates IRS(?c1) and
IRS(?c2) to ascertain the data owner b will opt-in(..)
for recording each user’s surfing activities will be defined
and collected as an unstructured weblog. On the Web 3.0
information cyberspace, we might face all personal profile
information as well as associated digital traces are modeled
as a ontologies+rules combination with semantic query as
the only feasible access mechanism; then the challenge for
semantic representation and enforcement of privacy protec-
tion policies just begins.
References
[1] A. H. Anderson. A comparison of two privacy policy lan-
guages: Epal and xacml. In Proceedings of the 3rd ACM
Workshop on Secure Web Services (SWS’06), pages 53–60.
ACM, 2006.
[2] I. A. Anto´n et al. A roadmap for comprehensive online for
privacy policy management. Comm. of the ACM, 50(7):109–
116, July 2007.
[3] G. Antoniou et al. Rule-based policy specification. In T. Yu
and S. Jajodia, editors, Secure Data Management in Decen-
tralized Systems, pages 169–216. Springer, 2007.
[4] M. Blaze, J. Figenebaum, and M. Strauss. Compliance
checking in the policymaker trust management system. In
Proc. of the Financial Cryptography, LNCS 1465, pages
254–274. Springer, 1998.
[5] A. P. Bonatti, S. D. C. di Vimercati, and P. Smarati. An
algebra for composing access control policies. ACM Trans.
on Information and Systems Security, 5(1):1–35, February
2002.
[6] A. P. Bonatti et al. Semantic web policies - a discussion of
requirements and research issues. In 3rd European Semantic
Web Conference (ESWC 2006), Budva, Montenergro, June
2006.
[7] L. Cranor et al. The platform for privacy pref-
erences (p3p) 1.0 (p3p 1.0) specification, 2002.
http://www.w3.org/P3P/.
[8] L. Cranor, M. Langheinrich, and M. Marchiori. A
p3p preference exchange language 1.0 (appel 1.0), 2002.
http://www.w3.org/TR/P3P-preferences/.
[9] M. F. Donini et al. AL-log: Integrating datalog and de-
scription logics. Journal of Intelligent Information Systems,
10(3):227–252, 1998.
[10] S. Fischer-Hu¨bner. IT-Security and Privacy - Design and
Use of Privacy-Enhancing Security Mechanisms. LNCS
1958. Springer, 2001.
[11] N. B. Grosof et al. Description logic programs: Combining
logic programs with description logic. In World Wide Web
2003, pages 48–65, Budapest, Hungary, 2003.
[12] I. Horrocks et al. Swrl: A semantic web
rule language combing owl and ruleml, 2004.
http://www.w3.org/Submission/SWRL/.
[13] S. Jajodia et al. Flexible support for multiple access control
policies. ACM Trans. on Database Systems, 26(2):214–260,
June 2001.
[14] L. Kagal, T. Finin, and A. Joshi. A policy based approach
to security for the semantic web. In International Semantic
Web Conference (ISWC) 2003, LNCS 2870, pages 402–418,
2003.
[15] G. Karjoth and M. Schunter. A privacy policy model for
enterprises. In 15th IEEE Computer Security Foundations
Workshop (CSFW). IEEE, June 2002.
[16] G. Karjoth, M. Schunter, and M. Waidner. Platform for
enterprise privacy practices: Privacy-enabled management
of customer data. In 2nd Workshop on Privacy Enhancing
Technologies (PET), LNCS. Springer, 2002.
[17] N. Li, T. Yu, and A. I. Anto´n. A semantics-approach
to privacy languages. Computer Systems and Engineering
(CSSE), 21(5), Sep. 2006.
[18] J. Maluszynski. Hybrid integration of rules and dl-based on-
tologies. In J. Maluszynski, editor, Combining Rules and
Ontologies. A survey, pages 55–72. EU FP6 Network of Ex-
cellence (NoE), Feb. 2005. REWERSE.
[19] B. Motik et al. Can owl and logic programming live together
happily ever after? In 5th International Semantic Web Con-
ference (ISWC) 2006, LNCS 4273, Athens, GA, USA, Nov.
2006.
[20] B. Motik, U. Sattler, and R. Studer. Query answering
for owl-dl with rules. In 3rd International Semantic Web
Conference (ISWC) 2004, LNCS 3298, pages 549–563.
Springer, 2004.
[21] J. Park and R. T. Sandhu. The uconABC usage control
model. ACM Trans. on Information and System Security,
7(1):128–174, 2004.
[22] R. Rosati. On the decidability and complexity of integrating
ontologies and rules. Web Semantics: Science, Services and
Agents on the World Wide Web 3, pages 61–73, 2005.
[23] R. Rosati. DL+log: Tight integration of description logics
and disjunctive datalog. In Proc. of the 10th International
Conference on Principles of Knowledge Representation and
Reasoning (KR), 2006.
[24] R. Rosati. Integrating ontologies and rules: Semantic and
computational issues. In Reasoning Web 2006, LNCS 4126,
pages 128–151, 2006.
[25] G. Tonti et al. Semantic web languages for policy represen-
tation and reasoning: A comparison of kaos, rei, and pon-
der. In 2nd International Semantic Web Conference (ISWC)
2003, LNCS 2870, pages 419–437, 2003.
[26] S. D. C. d. Vimercati et al. Access control policies and lan-
guages in open environments. In T. Yu and S. Jajodia, ed-
itors, Secure Data Management in Decentralized Systems,
pages 21–58. Springer, 2007.
[27] D. J. Weitzner et al. Creating a policy-aware web: Discre-
tionary, rule-based access for the world wide web. In E. Fer-
rari and B. Thuraisingham, editors, Web and Information Se-
curity, pages 1–31. Idea Group Inc., 2006.
[28] Y. C. T. Woo and S. S. Lam. Authorization in distributed
systems: a new approach. Journal of Computer Security,
2(2-3):107–136, 1993.
[29] T. Yu, A. N. Li, and I. Anto´n. A formal se-
mantics for p3p. In ACM Workshop on Se-
cure Web Services, Fairfax, VA, USA, Oct. 2004.
http://citeseer.ist.psu.edu/750176.html.
Challenges for Rule Systems on the Web
Yuh-Jong Hu1, Ching-Long Yeh2, and Wolfgang Laun3
1 Emerging Network Technology (ENT) Lab.
Department of Computer Science
National Chengchi University, Taipei, Taiwan
hu AT cs.nccu.edu.tw
2 Department of Computer Science Engineering
Tatung University, Taipei, Taiwan
chingyeh AT cse.ttu.edu.tw
3 Thales Rail Signalling Solutions
GmbH, Austria
wolfgang.laun AT gmail.com
Abstract. The RuleML Challenge started in 2007 with the objective of
inspiring the issues of implementation for management, integration, in-
teroperation and interchange of rules in an open distributed environment,
such as the Web. Rules are usually classified as three types: deductive
rules, normative rules, and reactive rules. The reactive rules are further
classified as ECA rules and production rules. The study of combina-
tion rule and ontology is traced back to an earlier active rule system for
relational and object-oriented (OO) databases. Recently, this issue has
become one of the most important research problems in the Semantic
Web. Once we consider a computer executable policy as a declarative
set of rules and ontologies that guides the behavior of entities within a
system, we have a flexible way to implement real world policies with-
out rewriting the computer code, as we did before. Fortunately, we have
de facto rule markup languages, such as RuleML or RIF to achieve the
portability and interchange of rules for different rule systems. Otherwise,
executing real-life rule-based applications on the Web is almost impos-
sible. Several commercial or open source rule engines are available for
the rule-based applications. However, we still need a standard rule lan-
guage and benchmark for not only to compare the rule systems but also
to measure the progress in the field. Finally, a number of real-life rule-
based use cases will be investigated to demonstrate the applicability of
current rule systems on the Web.
1 Introduction
The RuleML Challenge competitions started in 20074, so the RuleML-2009 Chal-
lenge will be the third year for the rule system competition. We offer participants
the chance to demonstrate their commercial and open source tools, use cases, and
applications for rule related technologies. For the past two RuleML Challenge
4 RuleML-2007 Challenge, http://2007.ruleml.org/index-Dateien/Page787.htm
3and these policies can be automatically interpreted and executed by a computer.
There should be a standard language and framework for rule systems to enable
rule interchange services on the Web. A certain number of use cases are easily
represented and executed by rule and ontology reasoning engines with rule in-
terchange and ontology merging standards to ensure rule interoperability and
ontology compatibility.
In the early computer development stage, imperative programming languages
such as C and Java were used to represent rules and execute them on a com-
puter system. But these rules are inflexible and not easy to maintain when they
are distributed on the Web and require interchange and integration between
rule systems. Moreover, imperative programming languages are not appropriate
to express concepts of human policies as computerized rules. Recently, people
use declarative programming to specify the rules and execute them automati-
cally, where XML is used as a standard syntax representation for interchange of
declarative rules, such as RuleML [1], RIF [2], etc.
Even though an XML-based standard rule language and framework provides
rule interchange service, pure XML cannot specify a well-defined semantics for
rules. So people in the standard rule community constructed a logic foundation
behind rule languages and their framework, to preserve the integrity of syntax
and semantics of rules interchange for various rule systems. Similarly, OMG
SBVR intends to define the vocabulary and rules for documenting semantics of
business vocabulary, facts, and rules, as well as an XMI schema for interchange
of business vocabularies and rules among organizations and between software
tools6
In this paper, we first introduce the classification of rules, then, in section 2,
we address the issue of rules, and databases and ontologies . In section 3, the
current status of a declarative policy as the combination of ontology and rules
will be introduced. In addition, Semantic Web Service (SWS) processes also
require a declarative policy to express and execute Web Service rules to control
information sharing and service execution. In section 4, we examine current
different rule management systems and engines. In section 5, we investigate
different rule interchange languages. In section 6, we look into the use cases that
are possibly represented and executed by the rule systems. Finally, we conclude
this study in section 7.
2 Rule and Data Model
2.1 The Classification of Rules
Rules are classified as three types: deductive rules (or derivation rules), nor-
mative rules (or integrity rules), and reactive rules (or active rules). One can
use deductive rules and facts to trigger a forward or backward reasoning en-
gine to derive implicit facts. Normative rules pose constraints on the data or
on the business logic to ensure their consistency in the database or knowledge
6 http://www.omg.org/spec/SBVR/1.0/
5assumption (OWA) vs. the closed world assumption (CWA), or the non-unique
name assumption (non-UNA) vs. the unique name assumption (UNA) [9].
It will be a challenge to resolve these basic assumption differences when we
combine rule and ontology to execute rule systems on the Web.
Rules and RDF(S) Inspired from F-Logic, TRIPLE8 was one of the earliest
rule languages using Horn rules to access the RDF datasets. Another rule lan-
guage called Notation3 (N3) uses a CWA forward reasoning engine to access the
ontologies generated from RDF(S) 9. SPARQL is another W3C standardized
query language for querying RDF datasets. SPARQL queries are represented
as Datalog rules so SPARQL’s CONSTRUCT queries are viewed as deductive
rules, which create new RDF triples from the RDF datasets.
Rules and OWL In addition to the Semantic Web Rule Language (SWRL) [10],
Rule Interchange Format (RIF) is an emerging rule interchange language from
W3C RIF WG [2]. It intends to provide core and extend languages with a com-
mon exchange syntax for all of the classification rule languages, i.e., deductive,
normative, and reactive rules. The requirements of integrating different types
of rules with possible data (and meta data) accessing representation, i.e., RDB,
XML, RDF, and OWL, drive the development of a RIF core interchange format,
theRIF Core, and its extensions, RIF dialects. Another recent development is to
combine RIF and OWL 2 in RIF, RDF, and OWL that specifies the interactions
between RIF, RDF and OWL for their compatibilities 10.
2.4 Combination of Rule and Ontology
A one-way knowledge flow exists from an ontology module to a rule module
for knowledge acquisition, where an ontology module’s instances are imported
as basic facts and filtered with conditions in the rules. This passive knowledge
query only uses deductive rules. If a rule engine derives implicit new facts not
in an ontology module and furthermore updates new facts back to an ontology
module, then it provides another reverse knowledge flow from a rule module
to an ontology module. In this two-way knowledge flow process, normative and
reactive rules are also required to check the knowledge consistency and trigger
the message passing for updating the ontology’s knowledge base.
The idea of combining rules and ontologies is to fulfill a goal of two-way
knowledge flow. The combination is classified as two types: tightly coupled inte-
gration and loosely coupled integration [11]. In the tightly coupled integration
model, all of the terms in the rule’s body and head are specified in the ontol-
ogy schema, but in the loosely coupled integration model we do not have this
requirement. So, some rules have their own defined terms in the rules’ body or
8 http://triple.semanticweb.org/
9 http://www.w3.org/2000/10/swap/doc/cwm
10 http://www.w3.org/2005/rules/wiki/OWLRL
7policy languages is only DL-based, and needs to be further extended by using
LP-based semantics of rule languages, such as RuleML, RIF or Protune [20].
Recently, AIR (AMORD In RDF) is a policy language that considers using both
RDF ontology language and N3 rule language for the privacy protection policy
execution12.
3.1 Policy for Semantic Web Services
The idea of Web Services in the SOA of distributed software systems has be-
come a tremendous success. Semantic Web Services (SWS) employ Semantic
Web technology in the Web Services area: service functionality, service inputs
and outputs, preconditions and effects, etc.; all are expressed and executed in
knowledge representation languages, i.e., ontology and rule languages [21]. A
policy can be considered in the SWS because of using similar ontology and rule
languages’ semantics on the Policy-aware Web. Thus policies are represented
and executed as Web Service rules for the compliance of human regulations to
control information sharing and service execution.
One of the challenges to implement rule systems on the Policy-aware Web
is how to design and implement rules as computerized policy by the integration
of rule and ontology. This computerized policy imitates human regulation for
controlling information sharing and service execution for a composite web ser-
vice on the Web. And the ultimate goal is the satisfaction of legal regulation
compliance from the execution of a computerized policy. This idea is similar to
the Legal Knowledge Interchange Format (LKIF) proposed in the past EU FP6
project [22].
4 Rule Management Systems and Engines
Before looking into the details of rule management systems, we need to decide
about a rule management systems implementation platform. If we choose a rule
system that is also embedded in the Semantic Web development environment,
then we have several advantages. First, it provides sufficient facilities to imple-
ment subsystems for rules and the data model. Second, both the ontology and
rule languages used in the Semantic Web are complementary to each other so
we can leverage on the declarative knowledge representation. Third, we have a
standard query language or a rule language to support the access of underlying
knowledge bases for ontology or rule bases. Finally, if applications are embed-
ded in Java or some other popular imperative programming language, we have
language typing, control flow, and interaction mechanism available for the im-
plementation of application system on the Web.
12 http://dig.csail.mit.edu/TAMI/2007/amord/air-specs.html
9ruleCore22 are also available for ECA rules inference. For more details about
reactive rules on the Web please refer to [16].
Some commercial rule systems are developed from a matured prototype of
the Semantic Web middleware, such as OntoBroker23. Oracle Business Rules
integrates with the Business Process Execution Language (BPEL) and tries to
enrich decision making for processes in the SOA24. In general, commercial rule
systems use proprietary rule languages for the development of the rule bases
so we need a standard rule interchange language, such as RIF to obtain rule
interoperability among these rule systems.
Academic Rule Systems The academic ECA rule system XChange, with its
integration of the Web query language Xcerpt, provides the access of data sources
to obtain information on the dynamic Web. Other academic rule systems are de-
ductive reasoning rule engines, such as jDREW and its object-oriented extension
OO jDREW25. An Object-Oriented Knowledge Base Language FLORA-2 pro-
vides frame-based logic reasoning engine with the knowledge base development
environment26.
Logic programming systems are also used to develop rule-based applications.
For example, Logic Programming Associates Prolog provides a complete rule
development environment with a graphical interface for rule editing27. Thea is a
Prolog library for generating and manipulating OWL content on the Semantic
Web. The Thea OWL parser uses SWI-Prolog’s Semantic Web library for parsing
RDF/XML serialization of OWL documents into RDF triples, and then it builds
a representation of the OWL ontology28.
One of the challenges for implementing rule systems on the Web is to be
aware of the current rule management systems, including commercial and aca-
demic ones, and, furthermore, an understanding of their system features and
which rule type reasoning they can support. Moreover, we need to investigate
the possible application domains they intent to accomplish through the under-
lying rule interchange standard.
4.3 Performance Benchmark for Rule Systems
It is not easy to propose an acceptable measurement benchmark to evaluate
the performance of current rule systems because rule systems vary considerably
with respect to rule syntax and features. In [23], a set of benchmarks were pro-
posed for analyzing and comparing the performance of numerous rule systems.
In this OpenRuleBench, they include five rule technologies to compare with:
22 http://www.rulecore.com
23 http://www.ontoprise.de
24 http://www.oracle.com/technology/products/ias/business rules/index.html
25 http://www.jdrew.org/oojdrew/
26 http://flora.sourceforge.net/
27 http://www.lpa.co.uk/
28 http://www.semanticweb.gr/TheaOWLLib/
11
6 Use Cases with Rules
Rules are used to express computational or business logic in the information
systems which do not have explicit control flow, so rules are more suitable for
execution in the dynamic situations for business collaborations. Along with the
rapid development of the Web, multiparty collaborations for carrying out busi-
ness services in this environment are more significant than ever before. For ex-
ample, when a credit card transaction is requested from a merchant, a customer
needs a payment authorization from the merchant and the card issuer (the bank)
to accomplish a successful transaction service. In this case, both merchant and
bank have their own policies as rules to conduct their authorization processes.
If both parties are required to combine their policies, we hope they can trans-
form the rules into a formal common rule format, such as RIF. For example, rules
from the bank are directly imported by the merchant and processed with his local
rule engine to derive an authorization decision. In addition, this situation can be
extended to other relevant web services for conducting composite web services.
Another use case is a seller, posting his price discount and refund policies for
execution as rules on his website, to attract potential customers for making a
purchase decision from his selling goods. Moreover, a vendor advertises his lead
time policies in formal rules to attract customers and also as a part of contract
negotiation in the supply chain management.
Use cases such as the ones we have shown above are categorized by the W3C
RIF Working Group as a type of policy-based transaction authorization policy
for access control with the interchange of human-oriented business rules. Several
other interesting use cases focusing on different application domains are also
available on this website32. Another interesting use case study was proposed
by the Business Rule Group (BRG) to use SBVR for illustrating business rule
concepts of EU-Rent, EU-Fly, and EU-Stay. They are available on the BRG
website33. The challenge here is whether we have enough use cases that can be
accomplished by current rule systems on the Web to convince people to adopt
and use this technology.
7 Conclusion
In this study, we outlined the objectives of RuleML-Challenge competitions
started in 2007. Alos, we have elaborated the possible research and implemen-
tation challenges for rule systems on the Web that are closely related to the
Challenge competition events in the forthcoming years.
The first challenge is to perfectly implement rule systems with the data
model, either from a relational or object-oriented database or from a DL-based
knowledge base. The second challenge is to enable computerized policies, created
in a policy language that is compliant with human legal regulations. In addition
32 http://www.w3.org/2005/rules/wg/wiki/Use Cases
33 http://www.businessrulesgroup.org/egsbrg.shtml
13
14. Donini, M.F., et al.: AL-log: Integrating datalog and description logics. Journal of
Intelligent Information Systems 10 (1998) 227–252
15. Rosati, R.: DL+log: Tight integration of description logics and disjunctive dat-
alog. In: Proc. of the 10th International Conference on Principles of Knowledge
Representation and Reasoning (KR). (2006)
16. Berstel, B., et al.: Reactive rules on the web. In: Reasoning Web 2007, Third
International Summer School. LNCS4636, Dresden, Germany, Springer (2007)
17. Weitzner, D.J., et al.: Creating a policy-aware web: Discretionary, rule-based ac-
cess for the world wide web. In Ferrari, E., Thuraisingham, B., eds.: Web and
Information Security. Idea Group Inc. (2006) 1–31
18. Bonatti, P., Olmedilla, D.: Policy language specification, enforcement, and inte-
gration. project deliverable D2, working group I2. Technical report, REWERSE
(2005)
19. Tonti, G., et al.: Semantic web languages for policy representation and reasoning:
A comparison of KAoS, Rei, and Ponder. In: 2nd International Semantic Web
Conference (ISWC) 2003. LNCS 2870 (2003) 419–437
20. Antonious, G., et al.: Rule-based policy specification. In: Security in Decentralized
Data Management. Springer (2007)
21. Studer, R., Grimm, S., Abecker, A.: Semantic Web Services: Concepts, Technolo-
gies and Applications. Springer (1990)
22. Gordon, F.T.: The legal knowledge interchange format (LKIF). Estrella deliverable
d4.1, Fraunhofer FOKUS Germany (2008)
23. Liang, S., Fodor, P., Wan, H., Kifer, M.: Openrulebench: an analysis of the per-
formance of rule engines. In: Word Wide Web 2009. (2009) 601–610
24. Wagner, G., Dama´sio, C.V., Antoniou, G.: Towards a general web rule language.
International Journal Web Engineering and Technology 2 (2005)
出席 RuleML 2010 國際學術會議心得報告 
 
RuleML 2009 研討會於 2009 年 11 月 5 日到 7日於美國 Las Vegas 舉行。主持人
因為在 2008 已經協辦過 RuleML 2008 的研討會，而且在過去的上半年也積極的
在每一週透過Skype上線和其他的主辦人員如Adrian, Guido等有所互動和討論，
因此對於這個研討會的參與還承擔有相當吃重的行政工作。 
 
主持人之所以參與了 RuleML 2009 國際研討會的主辦工作，主要是因為這個研討
會的主旨和本計畫的研究核心有很大的重疊之處。因此也花費了很多的心力和
RuleML 的其他國家的學者有所互動，這些學者主要是要推動標準規則語言(RIF)，
並且希望這個RIF標準規範語言可以為W3C所接受並且可以完美的和本體論語言
OWL 相結合。主持人也在 RuleML 2009 負責 Rule Challenges 並且在研討會結束
之後將參賽者的論文整理成為 CEUR Proceedings, 從中瞭解到如何進行一個完
整國際研討會的主辦事物如 CFP 的發送，論文的收集和分配給審稿人，意見和評
分的彙整，及最後的論文發表的議程進行等。主持人也在 RuleML 2009 主研討會
發表論文如下： 
 
 Hu, Y. J., C. L. Yeh, and W. Laun, “Challenges for Rule Systems on 
the Web＂, The International RuleML Symposium on Rule Interchange and 
Applications (RuleML 2009), Las Vegas, Neveda, USA, Nov. 5-7, 2009, 
Springer-Verlag, LNCS 5858. 
 
 Nov-5-2009 
今天是研討會的第一天，主要進行的是我負責的 Challenge 競賽的成果報告與展
示。早上一大早（約 7：00）左右就出門。因為我要去找一家印表服務店來印製
我負責 Challenge 競賽系統的選票，因為來自於澳洲的議程主席因為臨時家裡有
事，研討會還沒開始就先匆忙趕回澳洲了。我問了一下自己居住度假別墅(Villa)
的櫃臺，她告訴我附近的一家Westin飯店有提供這項服務，我走到Westin之後，
問了一下櫃臺服務的人，他告訴我印一頁的價格是美金一元，原來價格和我們研
討會舉行地點的五星級 Bellagio（你應該不會唸出正確的英文發音）飯店一樣，
幸好 Westin 的櫃臺願意幫我免費列印。走的時候沒有給他一些小費服務生好像
下來應該算是消耗不少體力，還好這一次時差的問題並不嚴重，能夠應付一些繁
瑣的會議流程控制的工作。我自己下午也上台完成論文發表的報告。晚餐 8:00
中在附近的一家美式餐廳進行，場地不大但是因為來研討會的場地走路約 10 分
鐘，因此方便。主餐是牛排及海鮮為主。我吃了一份鮭魚以便於碰觸紅肉的食物。
餐廳也提供了我們自己的紅酒和白酒，因為是用自己的透明玻璃瓶裝的，想必是
從大酒桶取出來的，酒味偏甜和一般瓶裝買的紅酒略有辣味不太一樣。吃飯的食
後原先是和葉教授同一桌，後來加入了來自希臘的一位教授因此往後就必須用英
文來交談。我們聊到了希臘的大學的一些景象，並且瞭解到歐洲以公立系統為導
向的大學高等教育的一切。並且我也提到最近 ABBA Ma Ma Mi Ya 影片是在希臘
拍攝的輕鬆話題。約在晚上 10 結束今天忙碌的一天行程。 
 Nov-6-2009 
今天是研討會的第二天，因為主辦人之一的 Guido 臨時家裡發生事故趕澳洲，因
此我和柏林自由大學教授的主席 Adrian 的工作更為吃重。雖然另外一位主辦人
是英國的 John，但是他主要是負責聯絡飯店場地的使用及相關的聯繫工作。去
年雖然已經到過佛羅里達奧蘭多市參加過一次，也負責相同的工作。但是感覺起
來今年的工作較為多。 
今天開始是一般性論文的發表。有的論文屬於長篇的因此就安排30分鐘的報告，
而短篇的就安排 15 分鐘的報告。說實在的 15 分鐘的報告，對於報告者而言技巧
要非常的好否則很難在這樣短的時間讓觀眾瞭解，假若在碰到一兩位比較會發問
的人，往往就會被釘在上面很難過。這次的研討會有兩位參加者非常會發問，一
個是 Benjamin,而另外一個是 Thomas。他們兩位算是小有名氣的學者，因此發問
的問題我感覺是有點到重點。Benjamin是電腦科學在logic上有深度研究的人，
因此他的問題主要都圍繞在這一方面的議題之上。而 Thomas 今年則是第一次來
參加，他本人是美國人但是定居在柏林（聽說太太是德國人，可能是在德國唸書
時認識結婚的），Thomas 的問題比較是在大的概念上來挑戰演講者。我過去的
觀察是亞洲的論文發表者，雖然論文可以被接受，但是論文發表時的最大挑戰將
會是對於發問者所提出問題的掌握和是否能夠切入到重點讓發問者滿意。通常西
方人會比較直接就個人對於研究的看法來作回應，因此不論論文發表者是學生或
是教授大家在這個問題的討論上是看誰的道理可以講得通。而東方人除了因為語
言的隔閡需要克服之外，另外就是對於是否會對於權威的屈服。 
內向的人那可能這一段時間日子應該會是不好過，這種經驗我在很早以前就經歷
過了。 
傍晚時分，我參加了研討會的檢討會以及明年該選誰來執行等問題，會中也對於
其它可能產生競爭研討會的一些人物和生態多所評論。倘若我們一直都是單純的
論文發表者，沒有參與這些人事紛擾的議題，則往往不清楚實際上一些研究議題
與方向掌舵者的意圖為何？討論完畢已經是晚上 8：30 分，因為太累所以我也沒
有和他們一起去吃晚餐。自己走路回住的地方去休息。從會場出來，看到這裡晚
上 6：00 不到天就暗下來的 Las Vegas 的著名觀光景點就是這一家 Bellagio 飯
店前面大廣場的水舞秀，在這個Las Vegas大道上最熱鬧地方，不斷的湧入人潮，
原來這裡正是好萊塢電影時常拍片的場景。相信當場可能有很多的情侶都可能在
這個浪漫的景象陶醉下而匆匆忙忙的花 65 美金到 Wedding Chapel（結婚教堂）
以麥當勞點餐的方式來完成自己終身大事。而這個結婚方式也是 Las Vegas 最為
大家所知悉的一件事情。 
Nov-7-2009 
今天是研討會的第三日，也是最後的一天。有的人可能提早回家，所以參加的人
稍微少了一些。但是整體而言幾個重要的參加者還是堅持到最後一刻。我還是和
前兩天一樣，約早上 07：20 出發約 20 分鐘的時間到達 Bellagio 的會場吃早上
07：45 的免費早餐。實際上這個早餐是來自於我們研討會的報名費。早餐是西
式的餐點，主要有水果如切好的哈密瓜、西瓜、鳳梨等，另外就是一些 Muffin
及西式的精緻點心，另外我一直都沒有去享用的玉米片和牛奶（因為在家裡吃太
多次了）。除此之外飲料不外乎是自己選用的咖啡、果汁、以及熱茶等。從 8：
30是一場由英國人Mark較少他自己使用開放式軟體概念所推出的JBoss公司的
JDrools 規則引擎的語言及其使用方式和未來的系統發展方向，他也提到世界知
名的快遞公司 FedExp 是用他這套系統來設計商業運作機制。整個介紹約 2個小
時。讓我瞭解到業界這套系統和學界目前研究在未來可能接軌的地方處。 
接下來就是法規和電腦規則的議程，介紹者是義大利一位教授，我順便找時間和
Thomas 討論未來是否有機會參與他將要進行歐盟 FP7 有關於電腦規範法治化的
研究計畫案。這一部分將會是科技與法律整合的部分，也將會是鎖定在我自己有
興趣關於資料保護隱私權與著作權保護的兩項議題。中午有我宣布了第一天
Challenge 的優勝者名單，並且頒發獎狀與獎品給兩位的講者，一位是來自於
NIST 利用規則技術來分析 DNA 以及藥品的系統，有趣的是這位原籍印度的學者
Challenges for Rule Systems on the Web
Yuh-Jong Hu1, Ching-Long Yeh2, and Wolfgang Laun3
1 Emerging Network Technology (ENT) Lab.
Department of Computer Science
National Chengchi University, Taipei, Taiwan
hu AT cs.nccu.edu.tw
2 Department of Computer Science Engineering
Tatung University, Taipei, Taiwan
chingyeh AT cse.ttu.edu.tw
3 Thales Rail Signalling Solutions
GmbH, Austria
wolfgang.laun AT gmail.com
Abstract. The RuleML Challenge started in 2007 with the objective of
inspiring the issues of implementation for management, integration, in-
teroperation and interchange of rules in an open distributed environment,
such as the Web. Rules are usually classified as three types: deductive
rules, normative rules, and reactive rules. The reactive rules are further
classified as ECA rules and production rules. The study of combina-
tion rule and ontology is traced back to an earlier active rule system for
relational and object-oriented (OO) databases. Recently, this issue has
become one of the most important research problems in the Semantic
Web. Once we consider a computer executable policy as a declarative
set of rules and ontologies that guides the behavior of entities within a
system, we have a flexible way to implement real world policies with-
out rewriting the computer code, as we did before. Fortunately, we have
de facto rule markup languages, such as RuleML or RIF to achieve the
portability and interchange of rules for different rule systems. Otherwise,
executing real-life rule-based applications on the Web is almost impos-
sible. Several commercial or open source rule engines are available for
the rule-based applications. However, we still need a standard rule lan-
guage and benchmark for not only to compare the rule systems but also
to measure the progress in the field. Finally, a number of real-life rule-
based use cases will be investigated to demonstrate the applicability of
current rule systems on the Web.
1 Introduction
The RuleML Challenge competitions started in 20074, so the RuleML-2009 Chal-
lenge will be the third year for the rule system competition. We offer participants
the chance to demonstrate their commercial and open source tools, use cases, and
applications for rule related technologies. For the past two RuleML Challenge
4 RuleML-2007 Challenge, http://2007.ruleml.org/index-Dateien/Page787.htm
3and these policies can be automatically interpreted and executed by a computer.
There should be a standard language and framework for rule systems to enable
rule interchange services on the Web. A certain number of use cases are easily
represented and executed by rule and ontology reasoning engines with rule in-
terchange and ontology merging standards to ensure rule interoperability and
ontology compatibility.
In the early computer development stage, imperative programming languages
such as C and Java were used to represent rules and execute them on a com-
puter system. But these rules are inflexible and not easy to maintain when they
are distributed on the Web and require interchange and integration between
rule systems. Moreover, imperative programming languages are not appropriate
to express concepts of human policies as computerized rules. Recently, people
use declarative programming to specify the rules and execute them automati-
cally, where XML is used as a standard syntax representation for interchange of
declarative rules, such as RuleML [1], RIF [2], etc.
Even though an XML-based standard rule language and framework provides
rule interchange service, pure XML cannot specify a well-defined semantics for
rules. So people in the standard rule community constructed a logic foundation
behind rule languages and their framework, to preserve the integrity of syntax
and semantics of rules interchange for various rule systems. Similarly, OMG
SBVR intends to define the vocabulary and rules for documenting semantics of
business vocabulary, facts, and rules, as well as an XMI schema for interchange
of business vocabularies and rules among organizations and between software
tools6
In this paper, we first introduce the classification of rules, then, in section 2,
we address the issue of rules, and databases and ontologies . In section 3, the
current status of a declarative policy as the combination of ontology and rules
will be introduced. In addition, Semantic Web Service (SWS) processes also
require a declarative policy to express and execute Web Service rules to control
information sharing and service execution. In section 4, we examine current
different rule management systems and engines. In section 5, we investigate
different rule interchange languages. In section 6, we look into the use cases that
are possibly represented and executed by the rule systems. Finally, we conclude
this study in section 7.
2 Rule and Data Model
2.1 The Classification of Rules
Rules are classified as three types: deductive rules (or derivation rules), nor-
mative rules (or integrity rules), and reactive rules (or active rules). One can
use deductive rules and facts to trigger a forward or backward reasoning en-
gine to derive implicit facts. Normative rules pose constraints on the data or
on the business logic to ensure their consistency in the database or knowledge
6 http://www.omg.org/spec/SBVR/1.0/
5assumption (OWA) vs. the closed world assumption (CWA), or the non-unique
name assumption (non-UNA) vs. the unique name assumption (UNA) [9].
It will be a challenge to resolve these basic assumption differences when we
combine rule and ontology to execute rule systems on the Web.
Rules and RDF(S) Inspired from F-Logic, TRIPLE8 was one of the earliest
rule languages using Horn rules to access the RDF datasets. Another rule lan-
guage called Notation3 (N3) uses a CWA forward reasoning engine to access the
ontologies generated from RDF(S) 9. SPARQL is another W3C standardized
query language for querying RDF datasets. SPARQL queries are represented
as Datalog rules so SPARQL’s CONSTRUCT queries are viewed as deductive
rules, which create new RDF triples from the RDF datasets.
Rules and OWL In addition to the Semantic Web Rule Language (SWRL) [10],
Rule Interchange Format (RIF) is an emerging rule interchange language from
W3C RIF WG [2]. It intends to provide core and extend languages with a com-
mon exchange syntax for all of the classification rule languages, i.e., deductive,
normative, and reactive rules. The requirements of integrating different types
of rules with possible data (and meta data) accessing representation, i.e., RDB,
XML, RDF, and OWL, drive the development of a RIF core interchange format,
theRIF Core, and its extensions, RIF dialects. Another recent development is to
combine RIF and OWL 2 in RIF, RDF, and OWL that specifies the interactions
between RIF, RDF and OWL for their compatibilities 10.
2.4 Combination of Rule and Ontology
A one-way knowledge flow exists from an ontology module to a rule module
for knowledge acquisition, where an ontology module’s instances are imported
as basic facts and filtered with conditions in the rules. This passive knowledge
query only uses deductive rules. If a rule engine derives implicit new facts not
in an ontology module and furthermore updates new facts back to an ontology
module, then it provides another reverse knowledge flow from a rule module
to an ontology module. In this two-way knowledge flow process, normative and
reactive rules are also required to check the knowledge consistency and trigger
the message passing for updating the ontology’s knowledge base.
The idea of combining rules and ontologies is to fulfill a goal of two-way
knowledge flow. The combination is classified as two types: tightly coupled inte-
gration and loosely coupled integration [11]. In the tightly coupled integration
model, all of the terms in the rule’s body and head are specified in the ontol-
ogy schema, but in the loosely coupled integration model we do not have this
requirement. So, some rules have their own defined terms in the rules’ body or
8 http://triple.semanticweb.org/
9 http://www.w3.org/2000/10/swap/doc/cwm
10 http://www.w3.org/2005/rules/wiki/OWLRL
7policy languages is only DL-based, and needs to be further extended by using
LP-based semantics of rule languages, such as RuleML, RIF or Protune [20].
Recently, AIR (AMORD In RDF) is a policy language that considers using both
RDF ontology language and N3 rule language for the privacy protection policy
execution12.
3.1 Policy for Semantic Web Services
The idea of Web Services in the SOA of distributed software systems has be-
come a tremendous success. Semantic Web Services (SWS) employ Semantic
Web technology in the Web Services area: service functionality, service inputs
and outputs, preconditions and effects, etc.; all are expressed and executed in
knowledge representation languages, i.e., ontology and rule languages [21]. A
policy can be considered in the SWS because of using similar ontology and rule
languages’ semantics on the Policy-aware Web. Thus policies are represented
and executed as Web Service rules for the compliance of human regulations to
control information sharing and service execution.
One of the challenges to implement rule systems on the Policy-aware Web
is how to design and implement rules as computerized policy by the integration
of rule and ontology. This computerized policy imitates human regulation for
controlling information sharing and service execution for a composite web ser-
vice on the Web. And the ultimate goal is the satisfaction of legal regulation
compliance from the execution of a computerized policy. This idea is similar to
the Legal Knowledge Interchange Format (LKIF) proposed in the past EU FP6
project [22].
4 Rule Management Systems and Engines
Before looking into the details of rule management systems, we need to decide
about a rule management systems implementation platform. If we choose a rule
system that is also embedded in the Semantic Web development environment,
then we have several advantages. First, it provides sufficient facilities to imple-
ment subsystems for rules and the data model. Second, both the ontology and
rule languages used in the Semantic Web are complementary to each other so
we can leverage on the declarative knowledge representation. Third, we have a
standard query language or a rule language to support the access of underlying
knowledge bases for ontology or rule bases. Finally, if applications are embed-
ded in Java or some other popular imperative programming language, we have
language typing, control flow, and interaction mechanism available for the im-
plementation of application system on the Web.
12 http://dig.csail.mit.edu/TAMI/2007/amord/air-specs.html
9ruleCore22 are also available for ECA rules inference. For more details about
reactive rules on the Web please refer to [16].
Some commercial rule systems are developed from a matured prototype of
the Semantic Web middleware, such as OntoBroker23. Oracle Business Rules
integrates with the Business Process Execution Language (BPEL) and tries to
enrich decision making for processes in the SOA24. In general, commercial rule
systems use proprietary rule languages for the development of the rule bases
so we need a standard rule interchange language, such as RIF to obtain rule
interoperability among these rule systems.
Academic Rule Systems The academic ECA rule system XChange, with its
integration of the Web query language Xcerpt, provides the access of data sources
to obtain information on the dynamic Web. Other academic rule systems are de-
ductive reasoning rule engines, such as jDREW and its object-oriented extension
OO jDREW25. An Object-Oriented Knowledge Base Language FLORA-2 pro-
vides frame-based logic reasoning engine with the knowledge base development
environment26.
Logic programming systems are also used to develop rule-based applications.
For example, Logic Programming Associates Prolog provides a complete rule
development environment with a graphical interface for rule editing27. Thea is a
Prolog library for generating and manipulating OWL content on the Semantic
Web. The Thea OWL parser uses SWI-Prolog’s Semantic Web library for parsing
RDF/XML serialization of OWL documents into RDF triples, and then it builds
a representation of the OWL ontology28.
One of the challenges for implementing rule systems on the Web is to be
aware of the current rule management systems, including commercial and aca-
demic ones, and, furthermore, an understanding of their system features and
which rule type reasoning they can support. Moreover, we need to investigate
the possible application domains they intent to accomplish through the under-
lying rule interchange standard.
4.3 Performance Benchmark for Rule Systems
It is not easy to propose an acceptable measurement benchmark to evaluate
the performance of current rule systems because rule systems vary considerably
with respect to rule syntax and features. In [23], a set of benchmarks were pro-
posed for analyzing and comparing the performance of numerous rule systems.
In this OpenRuleBench, they include five rule technologies to compare with:
22 http://www.rulecore.com
23 http://www.ontoprise.de
24 http://www.oracle.com/technology/products/ias/business rules/index.html
25 http://www.jdrew.org/oojdrew/
26 http://flora.sourceforge.net/
27 http://www.lpa.co.uk/
28 http://www.semanticweb.gr/TheaOWLLib/
11
6 Use Cases with Rules
Rules are used to express computational or business logic in the information
systems which do not have explicit control flow, so rules are more suitable for
execution in the dynamic situations for business collaborations. Along with the
rapid development of the Web, multiparty collaborations for carrying out busi-
ness services in this environment are more significant than ever before. For ex-
ample, when a credit card transaction is requested from a merchant, a customer
needs a payment authorization from the merchant and the card issuer (the bank)
to accomplish a successful transaction service. In this case, both merchant and
bank have their own policies as rules to conduct their authorization processes.
If both parties are required to combine their policies, we hope they can trans-
form the rules into a formal common rule format, such as RIF. For example, rules
from the bank are directly imported by the merchant and processed with his local
rule engine to derive an authorization decision. In addition, this situation can be
extended to other relevant web services for conducting composite web services.
Another use case is a seller, posting his price discount and refund policies for
execution as rules on his website, to attract potential customers for making a
purchase decision from his selling goods. Moreover, a vendor advertises his lead
time policies in formal rules to attract customers and also as a part of contract
negotiation in the supply chain management.
Use cases such as the ones we have shown above are categorized by the W3C
RIF Working Group as a type of policy-based transaction authorization policy
for access control with the interchange of human-oriented business rules. Several
other interesting use cases focusing on different application domains are also
available on this website32. Another interesting use case study was proposed
by the Business Rule Group (BRG) to use SBVR for illustrating business rule
concepts of EU-Rent, EU-Fly, and EU-Stay. They are available on the BRG
website33. The challenge here is whether we have enough use cases that can be
accomplished by current rule systems on the Web to convince people to adopt
and use this technology.
7 Conclusion
In this study, we outlined the objectives of RuleML-Challenge competitions
started in 2007. Alos, we have elaborated the possible research and implemen-
tation challenges for rule systems on the Web that are closely related to the
Challenge competition events in the forthcoming years.
The first challenge is to perfectly implement rule systems with the data
model, either from a relational or object-oriented database or from a DL-based
knowledge base. The second challenge is to enable computerized policies, created
in a policy language that is compliant with human legal regulations. In addition
32 http://www.w3.org/2005/rules/wg/wiki/Use Cases
33 http://www.businessrulesgroup.org/egsbrg.shtml
