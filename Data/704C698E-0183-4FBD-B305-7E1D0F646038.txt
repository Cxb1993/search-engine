1行政院國家科學委員會專題研究計畫成果報告
可防禦分散式DDoS攻擊的異質性追蹤器布建問題之研究
計畫編號：NSC 97-2221-E-216-035
執行期限：97年 8月 1日至 98年 7月 31日
主持人：王俊鑫助理教授 中華大學資訊工程學系
E-mail: chwang@chu.edu.tw
中文摘要
要有效解決 DoS/DDoS的問題，首先需找到攻擊來源，並協同鄰近的具有封包過濾功能
的路由器，即時的過濾異常封包，才能避免攻擊來源與受害者之間的網路頻寬被佔用。但原
有的路由器，並不具備追蹤、過濾封包等功能，我們必須在路由器增加新的功能來支援，新
增功能的路由器，我們以追蹤器來統稱。我們依據追蹤器的特性，以成本及必要性，歸類選
擇三種異質性的追蹤器，tunneling-enabled tracers、marking-enabled tracers及 filtering-enabled
tracers，用來防禦 DoS/DDoS的攻擊。其中 tunneling-enabled tracers的成本最低且可輕易的
將封包繞路導向，因此在計畫中，我們研究如何有效的利用 tunneling-enabled tracers適時的
將封包導向最佳的 marking-enabled tracers或 filtering-enabled tracers以進行來源追蹤及即時
過濾異常封包，我們提出四種方法並與最佳解相互比較。藉由模擬結果，發現藉由
marking-enabled tracers輔助的第四種方法有最佳的執行成效。
Abstract
To solve the DoS/DDoS problems efficiently, the first things is to locate the attack origins and
then cooperate the filtering-enabled routers nearby to filter the abnormal packets in time. But the
original routers can’t provide these functions such as tracking, filtering, and etc. They have to be
enhanced with additional functions to defense DoS/DDoS attacks. We refer the enhanced routers to
as tracers. According to the characteristic, cost and necessity of tracers, we classify and select three
kinds of heterogeneous tracers, namely tunneling-enabled tracers, marking-enabled tracers and
filtering-enabled tracers to defense DoS/DDoS attacks. The tunneling-enabled tracers have the
lowest cost than the others and they can alter the path of the passing packets to destination easily.
In this project, we study how to use tunneling-enabled tracers efficiently to forward packets to the
best candidate of marking-enabled tracers or filtering-enabled tracers for locating attack origins
and filtering abnormal packets in time. Four methods are proposed and compared with the optimal
solution. The fourth method with the assistance of marking-enabled tracers has the best
performance by simulation result.
關鍵字：DoS/DDoS, tracers
一、前言與研究目的
隨著網路技術的蓬勃發展，網路成為現今人們重要的溝通工具。但是隨伴而來的網
路安全問題，確日益嚴重。從內部網路安全問題(Intranet security)，到網際網路安全問題
(Internet security)；如阻斷服務攻擊(Denial of Service, DoS)、分散式阻斷服務攻擊
3[4-10] (2)ICMP Traceback [11-14] (3)Logging-based[15-18] (4)Overlay Networks [19] 。第一
類的方法[4-10] ，路由器以機率的方式選擇性的在經過的封包中加入適當的標記，這類
方法優點是路由器的負擔較輕，但最大的缺點，受害者需要收集足夠被標記的封包與需
較長的時間來重建攻擊來源的路徑，有部份的學者，提出改進的方法，只在邊界的路由
器(edge router)進行封包的標記[4]，以減少須要收集被標記的封包，但這樣的方法不適用
當攻擊來源來自於網路的核心部份(如 ISP (Internet Service Provider)的內部節點)。第二類
的方法[11-14]，每一個路由器以機率的方式，選擇性的將經過的封包與路由器前後的連
結的路徑的相關資料透過 ICMP 的訊息傳送到受害者，但 ICMP 的訊息可能被網路上的
封包過濾器(如防火牆)過濾掉，而且攻擊者易假造錯誤的 ICMP的訊息來干擾受害者重建
攻擊來源的路徑。第三類的方法[15-18]，則路由器須記錄經過封包的資料，雖然可以做
攻擊事後的追蹤，但路由器的負擔過重且需要較多的硬體資源來存放封包的資料。第四
類，以 IP-in-IP tunneling的方式建構覆蓋網路(Overlay Networks)[19]，所有的封包經過邊
界路由器，會因 IP tunneling 轉送到網路內部的 Tracking routers，由 tracing routers最後
將封包轉送到目的端，如此可藉由 tracing routers追蹤封包進入網路的邊界路由器，但當
攻擊來源，來自於網路的內部節點，亦無從追蹤。
追蹤攻擊來源，除可作為事後舉證外，但更重要的目的是可協同在攻擊來源附近具
有封包過濾器(filter)，即時的過濾攻擊封包，以避免攻擊來源與受害端之間的網路頻寬，
遭受攻擊封包的佔用，而達減緩 DDoS攻擊的目的。目前僅有少數的文獻中[14, 22, 23]，
探討如何利用封包過濾器，來防禦 DDoS的攻擊。
由上述的文獻的探討中，我們可以看出，攻擊封包可以被過濾的先決條件為，攻擊
封包，需經過封包過濾器，才有機會被過濾掉。若封包過濾器設置在欲保護對象的防火
牆，可以確保攻擊封包一定會經過封包過濾器，但太靠近受害端無法保護攻擊來源與受
害端之間的網路頻寬，換言之無法有效的減緩 DDoS攻擊，因此，如何有效的減緩 DDoS
攻擊，封包過濾器的布建問題實為一大挑戰，雖然我們可以藉由 IP 來源追蹤的方法，找
到攻擊來源(或接近攻擊來源)，但當過濾器不在攻擊的路徑上的環境下，如何協同鄰近的
封包過濾器來進行過濾，為本計畫的研究重點。
三、研究方法與模擬結果
(a)研究方法
我們假設在受害端可偵測到攻擊現象，而且可以分析出攻擊封包的特徵值，受害端可
將封包的特徵值通知相關的 filtering-enabled tracers，讓 filtering-enabled tracers可依封包的
特徵值進行封包過濾，但當攻擊封包的傳送路徑未經過任何 filtering-enabled tracers，我們
可以利用網路上佔有較大比例的 tunneling-enabled tracers將封包導向 filtering-enabled tracers
進行封包過濾，雖然異常封包在 filtering-enabled tracers可因此被過濾，但同時會使得正常
封包繞路， 因此若接受通知 tunneling-enabled tracers不當的選擇 filtering-enabled tracers做
為封包導向的目標，可能因正常封包繞路，佔用網路頻寬資源過多，反而得不償失。因此，
我們首先訂定下列的成本函數，作為 tunneling-enabled tracers如何選擇最佳的
filtering-enabled tracer(s)的依據。
5鄰近的 filtering-enabled tracer，封包有一半的機率會被導向。
Dynamic-tunneling:
只有 filtering-enabled tracers才有能力識別封包的異常並過濾，若在 filtering-enabled
tracers 上對被 tunneling-enabled tracers 導向的封包，作簡單的統計，計算異常封包的比
例，並將統計結果回饋提供給相關的 tunneling-enabled tracers作為決定是否要將經過的封
包進行導向的依據，換言之，tunneling-enabled tracers 可藉由其鄰近的 filtering-enable
tracers的幫忙，以經過封包中異常封包比例的歷史資料動態的來決策。
Marking assistance:
若追蹤器只有兩種類型,tunneling-enabled tracers與 filtering-enabled tracers，是無法得
知攻擊來源的落點，因此我們加上 marking-enabled tracers的幫忙，利用我們的研究成果
[20]所提出的方法，可以追蹤至離攻擊來源最接近的 marking-enabled 的追蹤器，亦可得
知攻擊封包經過的路徑，所以可以關閉不在攻擊路徑上的 tunneling-enabled tracers，以節
省路由器的負擔並避免正常封封包被導向。
在模擬上述的方法中，我們統計所有封包從來源端，往目的端(victim)傳送所經過的
總 hop count的個數為網路成本(攻擊封包經過或被導向 filtering-enabled tracers會被過濾
掉)，來評量所提出的方法之效能。除了以不布建任何追蹤器的環境下，封包所經過的總
hop count的個數(original method)為基礎，進行比較外，我們亦假設若 tunneling-enabled
tracers有識別封包的異常的能力，換句話說，tunneling-enabled tracers不會對正常封包進
行導向，只會對攻擊封包進行導向，所量測的結果可視為最佳解(optimal solution)，用以
評估所提出方法的好壞的程度。
(b)模擬結果
我們採用由 skitter[22]所量測的實際網路拓樸資料庫，來產生我們所需要的網路拓樸結
構，每次以 15張網路拓樸結構進行模擬，每一個網路節點代表一個路由器，每邊的成本都
是 1 hop 距離，封包以最短路徑來傳送;在我們的模擬實驗不考量傳送路徑改變的影響。
模擬的網路節點數從 1000到 5000點，每次隨機取 100個攻擊節點，模擬 10000個封
包,對每一封包, 若正常封包, 隨機選擇來源點, 若攻擊封包, 則由攻擊點中隨機選擇作為
來源點，攻擊封包的比例由 30％到 90％，藉以觀察所提出方法的效能。
因追蹤器採用部份布建的方式，所有追蹤器佔總節點數的比例為 50％，各種追蹤器的
位置為隨意布建，三種不同性質的追蹤器，再以下列的比例進行模擬實驗:
Kinds of Tracers / test Test 1 Test 2 Test3 Test4 Test5 Test 6 Test 7
F (Filtering-enabled tracers) 20% 20% 20% 20% 30% 30% 40%
M (Marking-enabled tracers) 0% 20% 30% 40% 30% 40% 40%
T (Tunneling–enabled tracers) 80% 60% 50% 40% 40% 30% 20%
7all- tunneling的方法。而不同比例的 tunneling–enabled tracers的個數，50％- tunneling
的方法，大致上來說，有較好的總成本。但與最佳解的成本的比較，可以看出 50％
-tunneling方法仍有很大的改善空間。
圖 3.3：50％-tunneling 在各種 tunneling–enabled tracers比例與最佳解的比較
Dynamic-tunneling方法的結果:
當攻擊發生時，並非所有的路由器上都會有相同比例的攻擊封包經過，因此
tunneling–enabled tracer以其鄰近 filtering-enabled tracer統計收到的封包中為攻擊封包的
比例，動態機率決定是否要將經過的封包進行導向轉送，由圖 3.4顯示在攻擊比例為 30
％的情況，dynamic-tunneling 比 all-tunneling 及 50%-tunneling 來的好，而由改變
tunneling-enabled tracers數量的比例，進行 dynamic-tunneling的實驗，並不能選出適用
於不同網路節點數的最佳比例，但 40%的 tunneling-enabled tracers較接近最佳解。
圖 3.4：在攻擊量 30％之下，dynamic-tunneling各路由器比例比較
Marking assistance 方法的結果:
在路由器中布建了部份比例 marking-enable tracers，marking-enable tracers可對經過
的封包做標記，在受害端收集足夠被標記的封包，可找出攻擊路徑，進而找到最靠近攻
擊來源的 marking-enable tracer，利用這項資訊，讓不在攻擊路徑上的 tunneling-enabled
9圖 3.7：60%T, 20%F, 20%M，在 50％攻擊量之下，追蹤器的啟動率
圖 3.8：50%T, 20%F, 30%M中，各種攻擊比例下追蹤器的啟動率
圖 3.9：在 50％攻擊量中，不同 marking-enabled tracers比賽，追蹤器啟動率的比較
圖 3.9，為網路節點 5000點，增加 marking-enabled tracers的比例，觀察對追蹤器的
啟動率的影響，由圖可知 marking-enabled tracers愈多的情況， 降低追蹤器的啟動率的
效果愈好。
11
australia. Conference in Research and Practice in Information Technology, vol. 16.
[9] A. Yaar, A. Perig, and D. Song, ”FIT: Fast Internet Traceback,” Proc. INFOCOM, 2005,
pp.1395-1406.
[10] M. Muthuprasanna, G. Manimaran, M. Alicherry, and V.Kumar, ” Coloring the Internet: IP 
traceback,” 12th InternationalConference on Parallel and Distributed Systems, ICPADS
2006, Vol.1, July 2006.
[11] S. M. Belovin, ”ICMP Traceback Messages,” IETF draft, 2000; 
htttp://www.research.att.com/smb/papers/draft-bellovinitrace-00.txt.
[12] Henry C. J. Lee, Vrizlynn L. L. Thing, Yi Xu, Miao Ma, ICMP Traceback with Cumulative
Path, an Efficient Solution for IP Traceback, International Conference on Information and
Communications Security, Oct. 2003, (Springer Lecture Notes in Computer Science, Vol.
2836, pp. 124-135, Sept. 2003).
[13] V.L.L. Thing, H.C.J. Lee, M. Sloman and J. Zhou , “Enhanced ICMP traceback with
cumulative path,”2005 IEEE 61st Vehicular Technology Conference, Volume 4, pp. 2415 -
2419 , May-1 June 2005.
[14] J. Lee and G. d. Veciana, ”Scalable Multicast Based Filtering and Tracing Framework for 
Defeating Distributed DoS Atacks,” Internation Journal of Networking Management 2005,
pp.43-60.
[15] A. C. Soneren et al., ”Single-packet IP Traceback,” IEEE/ACM Transactions onNetworking,
vol. 10, December 2002, pp.721-34.
[16] C. Gong, T. Le, T. Korkmaz, and K. Sarac ”Single packet IP traceback in AS-level partial
deployment scenario,” IEEEGlobal Telecommunications Conference, vol. 3, 28 Nov.-2 Dec,
2005.
[17] W. Timothy Strayer, C. E.Jones, B. I. Schwartz, J. Mikkelson, and C. Livadas ”Architecture 
for multi-stage network attack traceback,” The IEEE Conference on Local Computer 
Networks, Nov. 2005.
[18] Y. N. Jing, P. Tu, X. P. Wang, and G. D. Zhang, ” Distributed-log-based scheme for IP
traceback,” The Fifth InternationalConference on Computer and Information Technology,
Sept. 2005, pp. 711-715.
[19] R. Stone, “CenterTrack: An IP overlay network for tracking DoS floods,”in Proc.2000
USENIX Security Syrup., July 2000, pp. 199-212.
[20] A. Greenhalgh, M. Handley, and F. Huici, “Using Routing and Tunneling to Combat DoS
Attacks,”Steps to Reducing Unwanted Traffic on the Internet Workshop, SRUTI;05.
[21] F. Huici and M. Handley, “An Edge-to-Edge Filtering Architecture Against DoS,”ACM
SIGCOMM Communication Review, vol. 37, no. 2, pp. 39-50, April 2007.
[22] http://www.caida.org/tools/measurement/skitter/
[23] Chun-Hsin Wang and Yen-Chih Chiang, “Multi-Layer Traceback under the Hierarchical
Tracers Deployment,”IEEE AINA workshop 2008.
[24] Chun-Hsin Wang and Chun-Wei Huang,“A Colaborative Network Security Platform in P2P
Networks,”IEEE NISS workshop NetCom, pp.1251-1256, 2009.
Fig. 1. The model of network security platform
designed services, which can trace attack origins and filter
abnormal traffic efficiently. To our best knowledge, we are the
first paper to study how to integrate resources of ubiquitous
PCs against network security problems in P2P networks.
The rest of the paper is organized as follows. The proposed
collaborative network security platform is described in sec-
tion II. The designed defensible services are described in III.
The implementation of collaborative application and experi-
ment are presented in section IV. Finally, some concluding
remarks and future work are given in section V.
II. COLLABORATIVE NETWORK SECURITY PLATFORM
In this section, we first introduce the model of the proposed
network security platform. Then we describe the function of
components in it, system operation and implementation in
detail. Consider the trade-off between centralized and dis-
tributed P2P systems, the proposed network security platform
(Figure I) is adopted to be similar to KaZaA [15]. The
members of platform are bootstrap server, P2P hub nodes,
and P2P agents nodes. The bootstrap server is initialized first
when system is starting. It maintains the authorities of joining
nodes, the list of P2P hub nodes, and (private/public) keys for
secure information exchange. The role of P2P hub nodes are
as cluster leaders in KaZaA, which maintain the IP addresses
of their owned P2P agent nodes and associated resources-
sharing. To prohibit the misuse of resources-sharing, peers in
the proposed P2P system are classified into three categories,
namely Service Passive Agent (SPA), Request Active Agent
(RAA), and Publish Active Agent (PAA). SPA can provide
services for RAA which can issues the request to solve
network security problems. Besides the function of SPA and
RAA, PAA can publish new defensible services to enhance the
capability against network security problems for the proposed
platform.
A. Secure Message Exchange
To protect message exchange among the peers in the
proposed platform, typical technologies of symmetric and
asymmetric keys protection are applied. The messages of
requesting to collaborate on network security from RAA and
publishing new defensible services from PAA are protected
with high precedence by asymmetric keys. The protection of
the others message exchange is adopted by symmetric keys.
The peers joining the platform are to be as SPAs by default.
SPAs can request bootstrap server to be as RAAs or PAAs.
All kinds of agents have to register in bootstrap server and
then get the corresponding keys from it as follows.
• SPA get a private key to decrypt request messages issued
by RAA, a private key to decrypt the published messages
issued by PAA, and a pair of symmetric keys for others
messages exchange.
• In addition to the keys SPA have, RAA has a private key
to encrypt request messages in asymmetric way before
they are transmitted.
• PAA has the function of SPA and RAA. Besides those,
it can publish new defensible services for sharing in the
platform. PAA will get an extra private key to encrypt
the message of publishing new service.
Every key is with a default value of time-to-live (TTL).
The default value is 24 hours. Public keys used to decrypt the
receiving messages are managed by bootstrap server. P2P hub
nodes take responsibility to get new public keys from bootstrap
server and forward them to their owned agents before TTL of
public keys is ten minutes left. In this way, public keys in
agents can be renewed when TTL of public keys is time out.
Due to the private keys are assigned by the role of agents,
agents need to get their new private keys from bootstrap server
under password authentication. In similar renewal of public
keys, agents (SPA, RAA, and PAA) will get their new private
keys before TTL of private keys is five minutes left.
B. System operation
The bootstrap server is initialized first when the collabora-
tive network security platform is starting. One peer can request
it to acquire an account to join the platform and to be SPA
by default. Simultaneously SPA can get an identification (ID)
number and the list of hub nodes existing in platform from
bootstrap server. If none of hub nodes exists, the SPA will
become the first one hub node. Otherwise, SPA measures hop
counts between it and hub nodes in the list. Then SPA selects
exactly one hub node closest to it and to be its member. But
when the selected hub node is too far from the SPA or the
members of it is too many (ex. over than 50), the SPA will
become a new hub node under load balance consideration.
When hub node leaves the platform, members of it will rejoin
the platform after random time. SPA can request bootstrap
server to be RAA or PAA and get related keys.
C. Implementation of Agents and Dynamic link library
In this paper, the bootstrap server, P2P Hub nodes, and
three kinds of agents (SPA, RAA, PAA) are implemented by
BIGSPEED peer-to-peer SDK [17] in Microsoft XP operating
system. The programs are coded in Borland Delphi 7 and
the functions of Winpcap [18] library are applied to capture
packets passing through network interface. For convenient to
make use of the proposed platform, a shell-like command-
line is designed to send messages for requesting services or
publishing new defensible services. In addition, a dynamic
link library, ”P2Pdefense.dll”, is provided such that users
1252
Fig. 6. PAA agent
 
Agents  Commands Parameters Functions Description 
SPA MSG < Name of Agent> 
<Text> 
SPA can chat with agents 
belonging to the same hub node.  
RAA/ 
PAA 
RUN <Hop Count> <Service > 
<parameter list> 
RAA/PAA can request agents 
within a limit distance to run the 
assigned service.  
RAA/ 
PAA 
Time limit <Number of Minutes> RAA/PAA can limit the duration 
of executing service. 
RAA/ 
PPA 
Back Log None The log file of executing service 
will be transmitted back to the 
RAA/PAA 
PAA Publish <Name of Service> PAA can publish new service to 
the platform 
 Fig. 7. The commands in command-line
sniff.exe;RUN -1 sniff.exe 140.126.5.100;Time limit 3;Back
Log”, where the ”140.126.5.100” is the parameter of service
”sniff.exe”.
The command-line in agents can provide an convenient
way to use the collaborative network security platform to
defense network security problems. To make the development
of collaborative network applications easily, we package basic
functions of the proposed platform into a dynamic library
named as ”P2Pdefense.dll” in Fig. 8.
III. IMPLEMENTATION OF DEFENSIBLE SERVICES
The basic idea of this paper is that the joining nodes in
the proposed platform can design defensible services and
publish them for sharing under secure control. The published
services can also be packaged into a dynamic library for
sharing. Based on the published services and dynamic library,
collaborative network applications can be developed easily to
solve the network security problems on demand. The software
architecture of developing collaborative network applications
is showed in Fig. 9.
The main members of the collaborative network security
platform are ubiquitous PCs. A general PC can be given
with defense ability by installing some services (software)
such as PC-based IDS, anti-virous system, and so on. Pcs
joining the proposed platform could be the defense nodes. We
hope a defense node can secure not only itself but also its
neighboring nodes to defense network security collaboratively.
To realize the capability, the defense node must have the ability
to investigate packets passing through network interfaces of its
Functions Descriptions  
Int Startnetwork(char *loginame, char *password) Login the platform 
Int SendCommand( char * command) Sending commands 
Int Chat(char *AgentName, char *chatmessage) Chatting with agents 
Int SendFile(char *AgentName, char *filename) Sending files to  
agent 
Int Download(char *AgentName, char *filename) Download files from 
agents 
Int Search(char *AgentName, char * keyword,char *fileLists) Searching files 
Int Stopnetwork() Logout platform 
 Fig. 8. The functions of P2Pdenfense.DLL
Fig. 9. Architecture of P2P Network Security Platform
neighboring nodes. By a network switch with mirror functions,
packets can be copied and forwarded to an assigned mirror
port which the defense node connects to. But its not practical
because not all of network switches have the mirror function
and mirror port should be configured manually or by network
management protocols. Without the assistance of network
switches, how to forward packets needed to be investigated
to the defense node is a challenge.
By cheating of APP and RARA [19] protocols, we have
successfully designed the virtual gateway service which can
let the defense node with capability to investigate packets
passing through its neighboring nodes. The defense node
with virtual gateway service can reply ARP packets to cheat
their neighboring nodes of the gateway is the defense node.
Therefore, all packets from neighboring will be forwarded to
the defense node. To let the packets destined to neighboring
nodes forward to the defense node, we can cheat the real
gateway of the MAC addresses of neighboring nodes are the
defense node by ARP packets. All packets from or to the
neighboring nodes will be forward to the defense node with
virtual gateway service as the display of Fig. 10
After the packets are forwarded to the defense node by
virtual service, the defense node still needs to capture the
receiving packets and then investigate which packets are
malicious. If the packets are normal traffic, they should be
forwarded to their original destination nodes. Otherwise, ma-
licious packets should be filtered and the related information
such as source IP address of packets and their types should be
logged. Thus, we implement the function of packets sniffing by
winpcap library. Based on the packets sniffing, useful services
of packet forwarding, filtering, and logging are developed for
1254
