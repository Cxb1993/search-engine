 1 
行政院國家科學委員會補助專題研究計畫
█ 成 果 報 告   
□期中進度報告 
（計畫名稱） 
車載行動網路之行動管理機制 
 
計畫類別：■ 個別型計畫 
計畫編號：NSC 99-2221-E-142 -004 - 
執行期間：99 年 8 月 1日至 100年 10月 31日 
 
計畫主持人：王讚彬 
 
計畫參與人員：呂豐旭、程昱群、黃舜斌、張裕其、蘇建豪、李佩珊 
 
 
成果報告類型(依經費核定清單規定繳交)：■精簡報告 □完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
■出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、列
管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
          
執行單位：國立台中教育大學 
 
中   華   民   國   100 年  12 月  31 日 
3 
 
1. 前言  
在 無 線 網 際 網 路 的 發 展 中  IEEE 802.11  
(a)(b)(g)(n) 已經相當成熟，但是現今舊有的 IEEE 
802.11 [1] 標準並不適合用在車載無線網路環境下，因
此由 IEEE 802.11 團隊所制定的IEEE 802.11p [2][3] 
應運而生。車載通訊網路除了較底層的 IEEE 802.11p 
其上層還包括IEEE 1609 系列 [4][5][6][7]，我們將其
通稱為  WAVE (Wireless Access in the Vehicular 
Environment) standards。另外，車載通訊網路也可稱為 
WAVE network。  
IEEE 802.11p (又稱 WAVE) 是一個由 IEEE 
802.11 標準擴充的通訊協定，這個通訊協定主要用在
車用電子的無線通訊上，以符合智慧型運輸系統 
(Intelligent Transportation Systems， ITS [8])。應用的
層面包含車輛與車輛 (Vehicle to Vehicle：V2V) 以及
車輛與路邊基礎設施 (Vehicle to Roadside Unit：V2R) 
間 的 封 包 交 換 ， 其 使 用 的 頻 帶 為  5.9GHz 
(5.85-5.925GHz)，此頻帶上有  75MHz 的頻寬，以 
10MHz 為單位切割，將有七個頻道可供操作。其中一
個為頻道為控制頻道，其他六個則為服務頻道。  
WAVE network 中， ad-hoc mode 的網路存取網
路上的所有節點都是 OBU，OBU 與 OBU之間透過 
WIBSS (WAVE independent Basic service set) 的建立
來交換訊息。WIBSS 的建立不需要發送 beacons 就可
以直接開始傳輸資料，意即 OBU 可以自由的交換訊
息。但是因為沒有發送 beacons 就直接傳輸資料，所
以 Receiver 和 Sender 必須一開始就停留在相同的 
channel 才能互相通訊。另外，如果  Receiver 和 
Sender 距離很遠必須要靠 Forwarder (中介點) 來幫
助封包的傳送那麼  Forwarder 也需要在此相同 
channel 上。因此，如果想要透過 WIBSS 的建立來交
換訊息的話所有的節點一開始就必須停留在相同的 
channel。  
我們改良[9] 中所設計的 solicitation-based的機
制：W-UIM (WBSS User Initiation Mode) 和 Dynamic 
WAVE-Area 來傳輸資料。W-UIM 是由 WBSS user 
來啟動資料傳輸的機制，每當  WBSS user 想從 
WBSS provider 接 收 資 料 時 ， 都 必 須 先 傳 輸 
WAVE-Poll frame ， 而  WBSS provider 收 到 
WAVE-Poll frame 時，如果此 frame 中 WAVE Mode 
的欄位是 1 就代表啟動 W-UIM，WBSS provider 就
可以傳輸資料給 WBSS user。利用此機制可以解決當 
WBSS user 離開 WBSS provider 可以提供服務的範
圍時，provider 不知道 user 是不是還在它的傳輸範
圍，如果此時  provider 的  buffer 裡有資料要傳給 
user，就會一直繼續傳送，造成無線頻道資源的浪費。  
另外，當 WBSS user 在移動時必須作快速換手
來加入別的  WBSS provider 時，使用  Dynamic 
WAVE-Area 機制可以讓  provider 更快速的轉發資
料，在 W-UIM 此模式中，相鄰的 WBSS provider 可
以組成一個可以  cache 和轉發資料的區域，即為 
WAVE-Area，在 WAVE-Area 裡 WBSS provider 可
以 cache 資料訊框並且 proactively 或 reactively 轉
發資料。然後，當  WBSS user 加入到新的  WBSS 
時，便可以從新的 WBSS provider 接收 cached 的資
料。  
在 proactively 模式中，儲存在 WBSS provider 
緩存區中的資料如果快接近門檻值時，會預先轉發給 
Dynamic WBSS-Area 中相鄰的 WBSS providers。當 
WBSS provider 成功傳送資料訊框時，在  Dynamic 
WBSS-Area 中相鄰的  WBSS providers 必須更新 
buffer 中緩存的資料。因此，相鄰的 WBSS providers 
會丟棄這個已經成功傳送的資料訊框，然後繼續緩存
之後的資料訊框。 
在 reactively 模式中，如果 WBSS user 收到其
它 WBSS announcement，是跟目前加入的 WBSS 不
同的，那麼它可以發送一個轉發的請求給目前的 
WBSS provider。然後目前的 WBSS provider 會將在它 
buffer 中要給  WBSS user 的資料轉發給相鄰的 
WBSS user 可以收到它的  announcement 的  WBSS 
provider。因此，被動模式透過除去不必要的轉發和緩
存可以減少  buffer overhead，但是缺點是在相鄰的 
WBSSs 之間的訊框碰撞會較容易發生。 
5 
 
失的機率變高的缺點。而且當 WBSS 開始建立與加入
時，便會開始佔用節點資源，直到資料傳輸完為止。 
Case III：Dynamic WAVE-Area 選擇較近的  WBSS 
provider 傳輸資料 
我們希望可以解決 Case I 和 Case II 缺點，所以
考慮可以動態的建立與加入 WBSS，還有為了避免傳
輸路徑過長，我們利用 [9] 的 Dynamic WAVE-Area 
的機制來緩存和轉發資料，如此一來 Receiver 便可以
選擇離自己較近的 RSU 傳輸資料，避免傳輸路徑過
長。 
如圖 3 所示，在車載無線網路中，Receiver 快速
移動時，透過 Dynamic WAVE-Area 的機制，相鄰的 
WBSS providers 會組成一個 Dynamic WAVE-Area 來
緩存和轉發資料給 Receiver，所以當 Receiver 要接收
資料時便可以選擇離自己較近的 WBSS provider 來
建立連線。此種作法在傳輸資料時 WBSS 的建立與加
入是採用 Case II 的方法，亦即 WBSS 不需要每傳輸
一個 hop 就建立一次，可以避免 Case I 的缺點。 
另外因為可以選擇離  Receiver 較近的  WBSS 
provider 傳輸資料，不會因為 Receiver 移動使得傳輸
路徑變長，所以也可以解決 Case II 的缺點。但是如
果相鄰的 WBSS providers 太多可能會發生訊框的碰
撞。 
分析以上三種不同的 WBSS 的建立與加入之作
法，我們發現 Case III 的作法在車載無線網路的資料
傳輸上會有較佳的效能，因為  Case III 的作法 
Receiver 會先搜尋離自己最近的  RSU 來做資料傳
輸，而如果需要透過 Forwarder 來轉送資料的話，還
可以配合其他 Ad-hoc Routing Protocol (例如：AODV 
或 DSR 等) 來做路徑最佳化，以減少無線資源的浪費
並且提高傳輸效能。下一節將介紹我們所提出的路徑
最佳化的作法。 
II. 最小延遲多點轉送機制說明 
如前文所述，我們希望在車載無線網路環境中的
資料傳輸可以有 WAVE ad-hoc mode 的網路存取方
式，因此需要 Forwarders 的幫忙，我們在路徑搜尋上
選擇使用 AODV 協定，因為 AODV 是一種簡單容易
實作的行動路由協定，通常可以用於各種無線網路環
境中。它是一種隨需求啟動的路由協定，當 Sender 需
要傳送資料時才會開始尋找路徑，並且在尋找的過程
中會將路徑資訊儲存在節點的路由表中，如此一來便
可以節省電力和網路頻寬的消耗。在 AODV 中，每
一個行動節點需要維護自己的路由資訊，當行動節點
需要傳送資料且同時在路由表內找不到路徑，又或者
該筆路徑已經失效的時候，將會啟動路徑搜尋程序 
(Route Discovery) 來搜尋路徑並且更新路由表資訊。 
圖 3 加入離 Receiver 較近的 WBSS。 圖 2 所有節點加入同一個 WBSS。 
7 
 
如果路由表需要更新就會呼叫此函數來執行。而此函
數中所儲存的 Routing Metric 即為 hop count，我們將
其改為 delay time，表示我們使用延遲時間來代替原本
的 hop count，如圖 6 所示。 
 
II. recvRequest ( ) 函數 
我們分析此函數，發現其中有判斷路由表是否需
要更新的步驟。在原始碼中，路由表是否需要更新主
要是依據 hop count 來判斷。而我們提出的最小延遲
多點轉送機制是依據 delay time 來判斷，所以我們將
原本用 hop count 來判斷是否需要更新路由表改成使
用 delay time 來判斷，如圖 7 所示。 
III. recvReply ( ) 函數 
 在此函數中，一樣也有類似 recvRequest ( ) 中判
斷路由表是否需要更新的步驟，我們一樣將原本由 
hop count 判斷路由表是否需要更新的地方，改成使用 
delay time 來判斷，如圖 8 所示。 
4. 實驗模擬結果與分析 
我們使用  NS-2.34 [14] 網路模擬器來進行實
驗。網路拓樸如圖 9 所示，在我們的實驗環境中是以
一井字型雙向道路為例，每一條道路全長 2000 公尺，
在道路周圍的 4 個角落有 4 個 RSUs 其座標分別為 
(1800,1800)、(400, 1800)、(400, 400)、(1800, 400)，RSU 
的通訊範圍約為 250 公尺。中間的 host 透過 mobile 
router 跟 4 個 RSUs 連結，有線的 point-to-point link 
頻寬為 5Mbps，在實驗中 RSUs 會透過 mobile IP 的
機制將封包傳給移動中的車子。mobile node (MN) 移
動速度為每秒 20 公尺，移動路徑為從右上角座標位
置（2000, 2000）開始逆時針依正方形路徑移動，途中
經過（200, 2000）、（200, 200）、（2000, 200），直到實
驗結束，本實驗每次測量時間為 360 秒。除了 MN 之
外，在道路上我們會隨機佈建數量不等的車子，並且
讓這些車子依不同速度隨機移動，這些車子在我們的
void AODV::rt_update (aodv_rt_entry *rt, u_int32_t 
seqnum, double metric, nsaddr_t nexthop, double 
expire_time) { 
rt->rt_seqno = seqnum; 
rt->rt_delaytime = metric; 
rt->rt_flags = RTF_UP; 
rt->rt_nexthop = nexthop; 
rt->rt_expire = expire_time; 
} 
圖 6 rt_update ( ) function of AODV with route optimization. 
圖 8 recvReply ( ) function of AODV with route optimization. 
void AODV::recvReply (Packet *p) { 
aodv_rt_entry *rt; 
rt = rtable.rt_lookup(rp->rp_dst); 
if ( (rt->rt_seqno < rp->rp_dst_seqno) || 
( (rt->rt_seqno == rp->rp_dst_seqno) &&   
(rt->rt_delaytime > (CURRENT_TIME - 
rp->rp_timestamp) ) ) )  
{  
  rt_update (rt, rp->rp_dst_seqno, (CURRENT_TIME - 
rp->rp_timestamp), rp->rp_src, (CURRENT_TIME 
+ rp->rp_lifetime) ); 
} 
} 
圖 7 recvRequest ( ) function of AODV with route optimization. 
void AODV::recvRequest (Packet *p) { 
aodv_rt_entry *rt0; 
rt0 = rtable.rt_lookup (rq->rq_src); 
if ( ( rq->rq_src_seqno > rt0->rt_seqno ) || 
( ( rq->rq_src_seqno == rt0->rt_seqno ) &&  
( (CURRENT_TIME - rq->rq_timestamp) < 
rt0->rt_delaytime ) ) )   
{ 
rt_update ( rt0, rq->rq_src_seqno, 
(CURRENT_TIME - rq->rq_timestamp), ih->saddr 
( ), max ( rt0->rt_expire, ( CURRENT_TIME + 
REV_ROUTE_LIFE ) ) ); 
} 
} 
9 
 
遲時間演算法，所以本實驗數據符合我們預期的結果。 
圖 11 為在不同變數設定下比較 routing protocol 
with RO 和 routing protocol without RO 的封包接收
率，我們一樣固定道路中隨機佈建的車子總數，依照
車子不同的平均移動速度可以得到不同的封包接收
率，在圖中可以發現 routing protocol with RO 的封包
接收率皆比 routing protocol without RO 還要高，平均
來講大概提昇了 23.43 %。因此，在 IEEE 802.11p 環
境下，我們所提出的方法可以有較高的封包接收率，
亦即效能比較好。 
觀察我們所提出的方法，在各種不同變數設定下
的數據變化情況，分別比較 routing protocol with RO 
的平均延遲時間和封包接收率發現：當車子平均移動
速度越快，平均延遲時間會稍微變高 。這是因為當移
動速度變快時，網路拓樸快速的改變會導致必須不斷
的換手，因此延遲時間會比較高。除此之外，當車子
總數越多時，平均延遲時間會越低。這是因為在道路
中的車子越多的話，可以當作 Forwarder 的節點也越
多，在傳輸路徑的選擇上也會有較佳的路徑可以選
擇，因此平均延遲時間會較低。 
另外，車子平均移動速度越快，封包接收率會越
低 。這是因為當移動速度變快時，網路拓樸快速的改
變，傳輸路徑有可能因此快速的改變，所以封包接收
率會比較低。除此之外，當車子總數越多時，封包接
收率會越高。這是因為在道路中的車子越多的話，可
以當作 Forwarder 的節點也越多，當 MN 不管移動到
哪裡都可以透過 Forwarders 接收資料，所以封包接收
率會越高。最後，我們發現在道路中隨機佈建的車子
總數對於平均延遲時間和封包接收率的影響比較大，
也就是說在車子總數較多的環境下 (例如：市區)，我
們所提出的方法會有較佳的效能。 
5. 結論 
在研究 IEEE 802.11p 標準中因為 IEEE 802.11p
中並沒有名確定義 multi-hop forwarding 機制，所以我
們整合 AODV 路由協定和 solicitation-based 的機制來
讓 WAVE network 可以有 ad-hoc mode 的網路存取
方式，並且透過演算法設計修改 AODV 程式來實作
我們所提出的最小延遲多點轉送機制。最後，透過 NS2
實驗模擬的結果，我們所提出的最小延遲多點轉送機
制可以降低整體的延遲時間，封包接收率也較高，並
提高整體效能。 
6. 計畫成果自評 
本計畫原規劃將分成三年執行，然而，計畫僅核
定一年，檢視本計畫已完成第一年路由最佳化的行動
管理機制設計，日後計畫中也將持續投入研究。在綜
而言之，此研究成果具學術或應用價值，成果除已發
表於研討會外，部分成果也已投稿，將於近期內在學
術期刊發表。 
參考文獻 
[1]  “IEEE Std 802.11-2007 (Revision of IEEE Std 
802.11-1999),” June 12, 2007.  
[2]  IEEE P802.11p/D0.21, “Draft Part 11: WLAN 
MAC and PHY Specifications: Wireless Access in 
圖 11 Comparison of Packet Delivery Ratio (%) 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                        100  年 11 月 1 日 
報告人姓名 王讚彬 服務機構 
及職稱 
國立台中教育大學資訊科學學系 
教授 
時間 
會議地點 
2011/09/02~2011/09/04 
加拿大 Banff  
本會核定 
補助文號 
 NSC 99-2221-E-142-004 
會議 
名稱 
 USWAN2011 - The 2011 International Workshop on Ubiquitous Services, Wireless Applications, 
and Networking (USWAN 2011) 
發表 
論文題目 
Adaptive Packet Aggregation for Header Compression in Vehicular Wireless 
Networks 
報告內容應包括下列各項： 
一、 參加會議經過 
由於本人於2011年7月1日到10月2日已獲國科會補助前往加拿大UBC大學訪問研究，因此特
別簽奉校長核准由溫哥華直接前往會議場所(Banff)，由於會議日期很接近911，即使國內線安
檢仍十分嚴格，我於當地時間2011年9月2日一早搭乘WestJet航機到卡加立轉乘AirPorter，抵
達Banff Center時間已經中午了，直接前往會場報到參加會議。9/3早上先至會場聆聽Keynote: 
Prof. Victor Leung主講 “Networking of Vehicles-Applications, Challenges and Some 
recent Results”，Prof. Leung談到許多加拿大車載網路的發展近況，受益良多。9/3下午發表
論文口頭報告，報告主題探討車載環境下動態封包壓縮機制。最後於9/4日晚間搭乘WestJet班
機返抵溫哥華。 
 
二、 與會心得 
今年USWAN2011會議與HPCC2011及UIC2011等大型國際會議合辦，參加者主要來自台日韓
中、東南亞、美國、加拿大、澳大利亞及其他地區國家的學術單位及相關業者，會議中參與不
同Keynote，session，在聽取各個學者的報告，並與其他與會學者互動吸取經驗後，對相關領
域方面的研究有更深一層的認識，也更了解未來研究的趨勢，特別是一位Nokia研究人員談及
Nokia放棄自行發展掌上型作業系統，在政策上，也不與Google聯盟，反倒選擇與在手機作業系
統發展最為弱勢的Microsoft合作，過程令人不禁唏噓。在不久之前Nokia仍是呼風喚雨的傳統
手機大廠，只是成功的經驗反而阻礙其在智慧型手機的進步，一些錯誤的決策，反倒令人擔心
其能否度過下個十年(decade)?科技業變化萬分快速，台灣以代工為主，創新能力本來就不如國
際大廠，如果無法在技術轉向時快速因應，實在令人擔心。  
 
三、 考察參觀活動(無是項活動者省略) 
無考察參觀活動。 
 
四、 建議 
    加拿大在硬體建設上並無特別之處，但主辦會議的軟實力，舉凡會議流程、場地、食宿安
排等，卻都令人驚艷，又選擇有湖光山色之美景的 Banff做為會議場所，的確能吸引來至全世
界的學者參加。未來若有單位要主辦的國際會議，亦可學習其作法，加強會議場地的在地特色，
相信台灣有很多不同於全世界的特色，必能吸引國際學者前來交流，提昇學術界在國際的能見
度。 
 
五、 攜回資料名稱及內容 
大會論文議程、資料光碟。 
其他 
 
附
件
三 
multiple channels in a cooperative manner in order to avoid
loss of synchronism between the compressor and the de-
compressor.
Basically, header compression and packet aggregation
can be separately processed as shown in [10] and [11]. In
[12], the authors propose an alternative approach for header
compression and simulated an aggregation scheme that uses
2 single packets to form an aggregated packet. It is obvious
that their scheme can be easily extend to aggregate a lot of
packets instead of 2 packets only. However, the end-to-end
delay will grow greatly when the aggregation number
increases. Therefore, we propose an adaptive packet
aggregation mechanism for header compression. The
proposed mechanism will make a tradeoff between delay
time and compression efficiency.
3. Adaptive Packet Aggregation
In this section, we propose an adaptive approach to
header compression with packet aggregation. We first
perform static header compression, and then aggregate a
dynamic number of packets according to the delay con-
straints as shown in Fig. 2.
The proposed scheme is basically composed of two main
procedures as shown in Fig. 3. Firstly, we use the adaptive
procedure to find out a suitable aggregation packet number
(n) according to the delay constraint. Secondly, we adopt the
aggregation procedure to perform packet aggregation based
on the aggregation packet number (n).
We calculate the round trip time (RTT) as the current
delay. The threshold value denotes the delay constraint that
is set as 80ms in our simulation. To avoid unacceptable delay
for real-time service, we also define QueueingMaxDelay to
limit the time that a packet waits for packet aggregation in
the queue. Using the adaptive procedure, the system will
adaptively change the aggregation number (n) according to
the current end-to-end delay. In general, the end-to-end delay
increases as the aggregation number (n) increases. As an
extreme case, when n=1 and delay > threshold, the proposed
scheme will not perform packet aggregation due to the delay
constraints.
In Aggregation procedure, packet P denotes the packet
being queued at a node, A is the aggregation packet being
prepared, MTU denotes the maximum transmission unit,
MAX_PACKET_NUM is the maximal number of packets
possibly aggregated in an MTU pack-et. The function,
Aggablesize, calculates the number of packet in the queue.
The function, add_by_maxdelay, calculates the number of
packets under the delay constraint. When it is greater than
QueueingMaxDelay, the system will aggregate packets and
send out immediately. Generally, the system will set a lower
QueueingMaxDelay to provide better QoS for real-time
services.
The advantage of adaptive packet aggregation is to
increase the compression ratio under delay constraints. With
a high compression ratio, the traffic as well as collision can
be greatly reduced. Therefore, the proposed scheme
improves not only the end-to-end delay but also the
successful packet arrival rate.
Fig. 2. Flowchart of Adaptive Packet Aggregation
Fig. 1. Header Compression [12]
936
4.1 end to end delay
In the simulation, we set the maximal allowable delay to
5ms, 15ms, and 25ms, respectively for packet aggregation in
order to guarantee low delay for real-time service. When the
traffic rate is 0.2mbps CBR, the average delay will increase
as the hop number of wireless link increases as shown in Fig.
5. Moreover, in any case, the proposed adaptive aggregation
scheme always out-performs the scheme without aggregation.
With ftp traffic, the average delay with adaptive packet
aggregation is still lower than that without aggregation as
shown in Fig. 6. Moreover, the average delay will increase
dramatically when the number of hops is greater than 6. This
is because relaying packets over multi-hop wireless networks
consumes much wireless resource and may suffer from much
collision.
4.2 Packet Arrival Rate
Fig. 7 shows the packet arrival rate with high (0.2mbps)
CBR traffic. It is obvious that in any case, the proposed
adaptive aggregation scheme always outperforms the scheme
without aggregation. However, the packet arrival rate drops
dramatically when the number of hops is greater than 8. This
is because when the number of hops increases, the system
might cause much more collision in relaying packets over
multi-hop wireless network.
In the following, we reduced the traffic load and
performed the same simulation. Fig. 8 shows the successful
packet arrival rate with low CBR traffic. With light load such
as 64kbps CBR traffic, adaptive aggregation will provide a
good packet arrival rate for any number of hops, while the
packet arrival rate drops continuously as the number of hops
increases without packet aggregation.
Fig. 9. Packet arrival rate with ftp traffic
Fig. 8. Packet arrival rate with low CBR traffic
Fig. 7. Packet arrival rate with high CBR traffic
Fig. 6. Comparison of average delay with FTP traffic
Fig. 5. Comparison of average delay with CBR traffic
938
國科會補助計畫衍生研發成果推廣資料表
日期:2012/01/17
國科會補助計畫
計畫名稱: 車載行動網路之行動管理機制
計畫主持人: 王讚彬
計畫編號: 99-2221-E-142-004- 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
擔任多項學術工作: 
 Editor Board of International Journal of Wireless & Mobile Networks 
(IJWMN), AIRCC, 
 Referee for IEEE Trans. on Vehicular Technology, 
 Referee for International Journal of Wireless Personal Communications,
  .... 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
