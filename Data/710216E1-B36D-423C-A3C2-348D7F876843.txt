 II 
Abstract 
    According to the characteristic of ship are a small quantity, various products, and 
long-term life cycle, so effectively building the knowledge and experience during ship 
products development procedures and apply the ship knowledge base in performing to 
build the new ship. It is not only reform the efficiency of procedures on ship yard but also 
promote the ship function and increase the ship security.  
    Shipbuilding develops advanced technologies that offer considerable spin-offs to 
other sectors, provides essential means of transportation for international trade and 
supplies the navies with advanced vessels. The advanced learning practices developed 
within the network include primarily time and location independent e-learning methods 
for teaching Ship Design in blended learning as well as in distance learning scenarios. To 
reach the goals diverse interactive e-learning modules are collaboratively developed by the 
project partners. Recent advances in Web and information technologies have resulted in 
many e-learning resources. There is an emerging requirement to manage and reuse 
relevant resources together to achieve on-demand e-learning in the Web.  
In this paper, we provide a document-based semantic mapping mechanism to 
integrate e-learning databases by using ontology semantics. Heterogeneous e-learning 
databases can be integrated under a mediated ontology. Taking into account the locality of 
resource reuse, we propose to represent context specific portions from the whole ontology 
as documents. We present a document approach for resource reuse by using an 
evolutionary algorithm. We also conduct simulation experiments to evaluate the approach 
with a e-learning scenario and obtain promising results. 
 
Keywords: Knowledge Based Engineering, Ontology, construction document, XML 
 2 
二、基礎理論與文獻探討 
2.1 知識工程(KBE)  
    Davenport and Prusak[1]則認為「知
識是一種流動性質的綜合體，其中包含
結構化的經驗、價值、以及經過文字化
的資訊，此外，也包含專家獨特的見解，
為新經驗的評估、整合與資訊提供架
構」。Zimmermann, M., Bronsart, R., 
Stenzel, K.[2]提出將知識工程的方法，應
用於船舶結構設計的概念，嘗試將船舶
結構設計知識與船舶電腦輔助設計所產
出的的幾何圖形整合在一起，文中強調
建立標準化的資料結構與標準化的產品
資訊模型的必要性。在船舶設計領域，
知識工程所包含的範圍，除了已知之確
定資訊，還有將隱性的知識轉換成顯性
的資訊，紀錄專家之寶貴經驗，如法規、
尺寸限制、材料特性導致之設計上之功
能及外觀之限制，及製造上之產能、成
本等問題。 
    工程設計是一種多人協同的工作環
境，是一種高度整合各項設計流程的協
同作業，經由一個協調共同的活動來持
續嘗試建構和維護在共享問題上所產生
的結果，透過產生一份產品的文件，將
可以便利的達到這樣的效果[3]。 
2.2 本體論(Ontology) 
    在哲學領域中，本體論(Ontology)所
指的是存在(being)的東西所對應到基礎
實體，是一種在特定領域針對物體的類
型、關係及屬性知識之理論[4]，即一切
真實事物的基本特徵，常利用樹狀結構
及關聯的方式來表達。而在人工智慧領
域中，本體結構不僅清楚定義基本詞彙
與詞彙之間的關係，且有結合詞彙的規
則(Rule)，使得可以藉由規則來推論詞彙
[5]。這樣的描述可以讓不同領域的雙方
能共同地討論事情，同時也可讓人與機
器或機器與機器相互了解對方所要表達
的語意[6]。 
Web Ontology Language是一種在網
際網路上為特定應用定義物件語意內容
的一種語言，它的特點在於不僅是能夠
呈現資訊給使用者[7]，而能夠更進一步
的讓電腦對其語意內容進行直接的處
理，因為有詳細的對Schema 進行定義的
能力，而在本體的表達上更為適合[8]，
故比其他的語言如XML或RDF更能清楚
的表達其含意而容許更豐富的應用方
式。目前對語意網路的寄以厚望，大部
分是建構於OWL之上[9]。 
三、以文件為基礎進行資源整合 
    本研究主要目的有三點： 
1. 建立本體論方式，整合各個資源的
機制。 
2. 以船舶設計領域為例建立一個設計
環境。 
3. 以推論引擎建立設計資源。 
3.1 架構定義 
    知識是抽象的，是經由前人的經驗
累積形成，若將這些知識擷取、分享及
利用，可以讓知識價值大幅度的提升。
因此透過例行的制度來要求人員將知識
以特定格式表達出來，逐步發展知識管
理基本步驟，讓知識可以經由建構、具
體化、散播以及應用來達到知識的價值。 
   本研究目的就是在實際觀察知識的
架構後，建立出文件的本體論架構，設
計人員可將理解後的領域知識經由網路
使用本系統的功能介面，讓不同的領域
知識研究者可以利用一套系統來協同建
立、維護及分享相關領域的設計知識，
將屬於設計人員的船舶設計知識依本體
論的架構轉移到知識庫中，並且讓設計
人員共同維護知識的內容，再配合各項
設計資源的連結，如此即可透過查詢取
 4 
3.2 知識本體論架構 
由於領域的知識十分廣泛，目前本
體論無法滿足所有領域知識的建構和描
述。本研究找出最重要的部份來組成領
域知識的本體論，希望用最少的知識描
述來概括表示整個領域知識，以達最大
效益。圖 3 是本研究的整體架構圖，圖
中表達整個船舶產品設計領域知識架構
分享環境的示意圖。其中分為三個階段
來說明： 
第一個階段為知識領域模型架構 
(1)產品資料(Product data)本體架構： 
產品資料本體架構主要是表示產品
資訊的主要關聯性，以產品本身以及材
料等方式進行描述，將產品本身進行拆
解的分類方式，而其中存放著船舶資料
所有的定義。 
(2)XML 文件 (XML Document)本體架
構： 
XML 文件本體架構是依照文件的
章節結構，分層管理文件中的設計資
訊。在不同種類的文件中如簡要規範、
建造規範、施工規範或採購規範等，會
存在不同的文件結構。在文件章節中所
需要的資訊則會從產品資料本體論的架
構下的定義做連結，如此一來即可以不
同的文件架構下連結到所需的產品資
訊。 
(3)知識(Knowledge)本體架構： 
知識本體架構是為了要描述船舶設
計知識，將設計知識以 Rule-Based 方式
呈現。設計知識的結構是依照設計流程
的項目為單位，其中每個設計流程會對
應多個設計的步驟，每個設計步驟對應
多個設計方法與檢驗。以 Rule-Based 呈
現的設計方法與檢驗來表達設計公式、
設計經驗及船級法規等，將設計方法與
檢驗以 If-Then 方式以及計算公式方式
來呈現的知識。在每個步驟中都有對應
的船舶資料的輸出與輸入，這些對應的
設計資訊則會從產品資料本體論的架構
下的定義做連結，根據不同設計的需求
取得正確的輸入資料，並將結果存放到
正確的位置。 
(4)設計流程(Design flow)本體架構： 
船舶設計流程本體架構是為了要描
述每個設計流程會對應多個設計的步
驟。將設計流程的順序以本體論的架構
來呈現，用來建立各個設計流程階段的
關連，決定知識本體論架構中各項流程
下的步驟處理的順序，因此這設計流程
架構是與知識本體架構有密切的關連。 
第二個階段為知識索引層 (Knowledge 
Index Layer) 
    知識索引層有三種索引對應到知識
概念層： 
(1)XML 文件索引： 
XML 文件索引是定義設計資訊在
文件章節中所需要的資訊，從產品資料
本體論定義不同的文件架構下連結到所
需的產品資訊。XML 文件紀錄包含知識
類型、起動與末端點元素以及和他們屬
性。建立文件資料與知識的索引，透過
這些索引的資訊查詢到相對應的知識內
容。 
(2)Rule Based 知識索引： 
在每個設計步驟中 Rule-Based 有對
應的船舶資料之輸出與輸入，這些對應
的設計資訊則會從產品資料本體論的架
構下之定義相連結，根據不同設計需求
取得正確的輸入資料，並將結果存放到
正確的位置。 
(3)設計流程索引： 
決定知識本體論架構中各項流程的
步驟處理的順序，因此這部分與知識本
體論架構進行相連結。 
 6 
資源的相關資料中找出各類別應有的屬
性，根據這些屬性來一一定義類別，建
立一個領域知識的本體論架構。一般本
體結構的構成要素，包括 Fields、Tables  
與 Records 三個要素。本研究將領域知
識本體論架構中的 Classes 部份以作
者、組織、發表單位、知識來分類，其
中 Knowledge 又 分 為 Algorithm 、
Framework、Method、Theorem、Tool 等
次類別，用來表示某文獻中有涉及某種
知識。 
四、船舶設計推論引擎架構 
在設計船舶過程中產生了許多船舶
設計的網路資源，這些設計資源分散於
船舶各個知識領域以及船舶設計各個部
門之中。所以必須有效的將這些資源進
行整合，建立一個船舶設計資訊的知識
管理架構，來管理設計資訊以及資源。 
4.1 推論引擎的架構 
本系統以美國 VDE Technologies 公
司開發的 RuleLab.Net 系統之推論引擎
作為連結知識庫與法規應用之主要介
面，RuleLab.Net 有下列特點： 
(1) 線上(online)規則編輯、設計與管理。 
(2) 可產生獨立的推論引擎元件，方便
整合在使用者自行開發的應用系統
中，透過 XML 文件來建構規則推論
系統。 
(3) 可進一步依使用者需求與相關規
則，開發出獨特的專家系統。 
首先將圖 2 中右邊的設計推論引擎
的架構放大詳細說明如圖 6，船舶計算與
一般簡易的 Rule 計算最大的不同在於船
舶計算需要提供大量的計算的圖表，在
Rule 中無法存放這些大量的查表資料，
船舶 XML 資料檔案中也不會存放這些
圖表資料。因此當為了要計算需要查表
的 Rule 時，必須在 XML Reference、
Atom、Fact、Natural Term 等這些輔助船
舶執行 Rule 的檔案中，協助查表相關的
Rule 執行，並且為了要對應到船舶 XML
文件的架構，所以 XML Reference、
Atom、Fact、Natural Term 等檔案的建立
必須配合船舶 XML 文件對應 XML 
Schema 以程式即時方式產出，才能對應
相關的 Rule 計算。 
圖 6 推論機制應用相關檔案 
4.2 船舶設計推論引擎 
RuleLab.Net 專案的資料模型是由
XML Reference、Atom、Fact、Natural 
Term 和 Rule 等構成，RuleLab.Net 主
要的核心是 Rule 和 application XML 
data，XML References 為 RuleLab.Net 
資料模型的最底層，Atom、Fact 則是由
XML Reference 的元件組成，而 Rule 則
是由 Atom 和 Fact 構成。將法規規則知
識先以 XML 文件格式加以儲存。當執
行規則(Rule)後，系統執行介面會透過
BRE 呼叫該 Rule 對應的 XML 文件，
並呈現推論結果。 
Rule Based Engine 是用來處理多對
的 If – Then 條件式跟多筆資料，但是
不能處理所有資料，在套用規則到
Knowledge Base 時，如果處理的資料較
複雜，簡單的 If –Then Pattern 並不能
正確找出我們想要的資料。Fact 是事實
陳述指明『事實』，事實陳述宣告一些
無條件成立的事情，事實陳述是用來描
述個體的性質或個體與個體之間的關
係。RuleLab.Net 的系統流程，分別用
UML 循序圖表示如圖 7，依 Web 架構的
 8 
下，但若要建實體，因為這些類別含子
類別，因此為了讓領域知識能完整的分
類，系統不提供有子類別的類別直接新
增實體，只依其子類別來新增實體。研
究者在建立這些實體輸入的知識就是定
義類別的屬性和與其他實體的關聯。 
(2) 維護文件知識 
在定義領域知識時，會因不同研究
者的主觀意識不同而有不一樣的見解，
因此大家可以透過維護領域知識的介面
來修改實體，讓不同的觀點描述使知識
更加多元化，而知識的正確性和有效性
將由參與人員來評論或修改，直到達成
一致的共識。 
(3) 查詢文件知識 
在不同領域知識中，要完整的理解
相關物件在領域中的定位是不容易的，
因此掌握相關的文件知識可以幫助研究
者釐清這些文件的關係，所以在平台上
提供了領域知識的查詢，讓研究者可以
透過本體論間的關聯，擷取出相關的物
件，使用者可以觀察查詢結果，並將查
詢結果依領域知識的關聯產生相關領域
的概念圖。 
(4) 歷程紀錄流程 
    本系統目的就是在實際觀查知識的
架構後，建立出文件本體論，使研究者
可將理解後的領域知識，經由網路使用
本系統的功能介面，把存在研究者腦海
中的知識建構到本體論中，再配合知識
的查詢功能，提供研究者快速的找到需
要的文件知識，讓研究者能輕易的掌握
相關領域的概念。經由使用本研究所做
之系統來管理文件的知識，查詢出相關
知識的概念圖，透過查詢介面可以將結
果依條件做出更精準且有彈性的查詢，
讓使用者更清楚的了解知識的重要性及
定位，幫助研究者在相關領域中尋找知
識時有更明確的方向，提升了研究者掌
握領域知識的效率，著實的利用知識的
分享達到知識的應用。 
 
圖 9 文件為基礎船舶設計資源整合功能架構
六、船舶設計實例 
以 45000 噸散裝貨輪的文件及其設
計流程為實例，依上述章節所建構設計
方法，以網路運算技術為基礎，實現並
建立可於網路上執行船型設計程式。配
合其設計流程的程序，建立設計流程的
控管及設計資料的統整。由圖 10 所示，
在文件流程中結合設計流程，建立以文
件為基礎船舶設計資源整合文件流程。 
 10 
預估計算中，需要查閱設計的圖表資
訊，因此有著有大量的圖表資料。 
由圖13圖表的資料大多為陣列式資
料，存在 Rule 的 XML 文件中並不適合，
若存在於船舶文件中，則每個船舶專案
文件的 XML 中也存在著查表的資訊，因
此也不適合。所以分別建立在 XML 
Reference、Atom、Fact、Natural Term 等
這些輔助船舶執行 Rule 的檔案中，如此
才會較容易進行船舶設計，這是船舶設
計與一般 Rule 計算最大的差異。 
(3) 螺槳設計程序 
    將螺槳設計的工作程序分為三個部
份：設計條件、尺寸設計及螺槳繪製。
其中設計條件是主機與船體基本資料。
尺寸設計部份則是輸入設計螺槳與推進
效能有關各項基本資料後，進行螺槳設
計工作，如直徑、螺距等，並提供螺槳
圖。此部分與馬力預估設計所考量的設
計 Rule 雷同，也是將圖表建立於在 XML 
Reference、Atom、Fact、Natural Term 等
這些輔助船舶執行 Rule 的檔案中。 
    因為結合本體論以及推論引擎的計
算，可以節省輸入資料到設計文件的時
間，經過以推論引擎結合文件的整個計
算流程的時間(大約 5 至 7 分鐘，含人工
判斷時間)與一般計算程式計算完再輸
入資料至設計文件的方式(大約 12 至 15
分鐘，含人工判斷時間)，時間大約要 2
至 3 倍的時間。其中主要的差距，是在
於輸入結果至設計文件的時間。這樣的
機制不僅方便設計流程的維護，更與船
舶設計文件以本體論的方式進行整合，
透過整個基本設計流程的執行後，將可
以建立一份完整的簡要規範書，作為設
計範例的輸出。 
       表 1 Rule XML Files 
 
 
  
  
  
  
圖 10 文件為基礎船舶設計資源整合文件流程 
 12 
圖 13 船舶設計計算推論引擎文件對應 
七、結論與建議 
7.1 結論 
本文中以本體論的方法結合文件架
構，以文件方式透過本體論的方法整合
船舶設計過程中的各項資訊，建立一個
資訊整合的環境。這樣使設計資源間的
資訊可以進行流通，可讓基本船舶設計
的過程每個步驟的船舶資訊可以容易存
取，並且可以重複使用船舶文件中的設
計資訊。本研究設計資源環境，分別由
XML Reference、Atom、Fact、Natural 
Term 和 Rule 等 XML 文件構成設計資
源，建立以推論引擎為基礎的推論機制。 
文中以商船設計之基礎中 45000 噸
的散裝貨輪為範例進行驗證。為了達成
散裝貨輪範例的基本設計所需要推論設
計資源，一共建構了 43 個設計規則來輔
助建立完整設計流程。透過這些設計資
源完成主要目設計、推進預估設計、螺
槳設計等各項設計步驟。這些船舶基本
設計的設計資源，是以法規 XML 文件來
建構，然後透由推論引擎執行，這樣的
機制不僅方便設計流程的維護，更與船
舶設計文件以本體論的方式進行整合，
透過整個基本設計流程的執行後，將可
以建立一份完整的簡要規範書，作為設
計範例的輸出。 
本研究主要的優點有下列三項： 
(1)可以減少設計計算後將結果輸入至設
計文件中所需花費大量時間。結合本體
論與推論引擎後，設計的資訊可以直接
存取船舶文件，因此減少輸入的時間以
及輸入時發生錯誤的可能性。 
(2)當設計計算公式必須修正時，可以不
用更動原始計算程式，只需要更新推論
引擎中相關的檔案內容，即可進行設計
流程的計算修正。將計算的程式與整體
運作的流程分開管理，當需要最更新使
