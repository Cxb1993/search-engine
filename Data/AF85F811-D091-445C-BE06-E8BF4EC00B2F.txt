 2
行政院國家科學委員會專題研究計畫成果報告 
 
計畫編號：NSC 95-2221-E-006-231-MY3 
執行期限：95 年 08 月 01 日至 98 年 07 月 31 日 
主持人：侯廷偉        
計畫參與人員：林政良, 林志穎, 王聖婷 
執行機構及單位名稱：成功大學 工科系 
 
一、中文摘要 
此報告為該三年計畫的期末報告。此階
段有兩項主要目標，其一為擬訂通訊機制，
使服務閘道器與數位電視服務平台能夠相互
溝通。其二為驗證兩平台之間的協同運作能
力，使數位電視服務平台與服務閘道器能互
相分享服務與資源。研究報告中，我們將協
同運作之系統架構分為三大類型，並且加以
實作與驗證。  
 
關鍵詞：數位電視服務平台, 服務閘道器, 協
同運作 
 
Abstract 
This is a final report for the three-year 
project. In this stage, the major goal is to define 
communication mechanisms between service 
gateway and digital TV middleware. Another 
goal is to verify the communication 
mechanisms. Hence, based on these 
mechanisms, add-on-value services can lead to 
the sharing of information and/or services 
between service gateway and digital TV 
middleware. Finally, in the report, we classify 
the collaboration architectures into three 
classes: IDTV based on RG (MbO), RG based 
on IDTV (ObM), and networked IDTV-RG 
(MnO). All of them are implemented and used 
the Proxy design pattern to implement a 
common interface with necessary 
enhancements to ‘glue’ the digital TV 
middleware and service gateway. 
 
Keywords: DVB/MHP, OSGi, convergence, 
interactive  
 
二、緣由與目的 
回顧第一期與第二期計畫內容，主要是
將智慧行動輔具所收集到的 RFID 資訊送至
後端系統。後端系統在收到由該平台所送達
的資訊後，將予以紀錄並且分析此訊息。此
外，除了驗證系統正確性之外，也將前兩階
段的研究內容，改寫成國際研討會論文。 
期末階段則是著重於，使數位電視服務
平台與服務閘道器能互相分享服務與資源。
使 SmartID Agent 系統功能得以擴建以及提
供 Learning Platform 不僅可透過行動輔具也
可以透過數位電視服務平台來運行。 
目前台灣的數位電視發展採用歐盟規範
的標準（DVB-T），往後電視發展中不僅改善
畫面的品質，其互動能力也將是未來重要的
發展條件。DVB-MHP 主要基於機上盒
(set-top-box) 或 是 數 位 數 據 機 (cable 
modem)，透過衛星或有線電視網路實現出家
庭內部網路與外部網路的互連。歐規的 DVB
與美規的 OpenCable 應用項目也都相當的完
整，除了強調互動式應用環境外，還提供相
關的各項數位電視傳輸標準，通訊過程基於
廣播電視網路，使得影音互動與音視訊頻的
傳輸方面有著獨特的優勢。由此可知
DVB-MHP 是屬於 function-oriented 的架構，
 4
互通的方法。from MHP to OSGi：首先，OSGi
平台上的 bundle 會向 Service Registry 註冊其
服務，同時透過 Service Listener 將這個服務
通知 XbundLET，並將服務註冊到 MHP 的
IXC Registry。當 Xlet 需要這個服務時，它會
向 IXC Registry 查詢，接到 Xlet 的請求後，
XbundLET 會 啟 動 一 個 MHP2OSGi 
XbundLET 來提供 MHP 存取 OSGi 的服務，
如此一來，Xlet 就可以使用該服務。form 
OSGi to MHP ： MHP 初始化後，啟動
OSGi2MHP XbundLET 將 所 需 的 MHP 
services 註冊到 OSGi 的 Service Registry。當
OSGi bundle 需要服務時，會向 Service 
Registry 查詢，獲得 reference 後，可直接透
過 OSGi2MHP XbundLET 來使用這個服務。
這種將 MHP 與 OSGi 運行在同ㄧ Java Virtual 
Machine 上，使用的是 Local Interface 的觀
念，元件之間的呼叫可以 pass by reference，
這個動作加快平台程式與其他元件之間的運
作模式，但是必需與呼叫的程式或是元件位
於同一個 JVM。透過直接 pass by reference
的方式來提高物件的存取效率。簡言之此作
法則是完全考慮到兩個 middleware 的功能可
利用性，這好比是 MHP 或 OSGi 具備了雙方
的 API 與直接控制權，不管是在 middleware
或是應用程式層，都能夠直接存取雙方的
API，這種方式的好處是對於介面的擴展性很
容易設計，兩者系統架構完全被保留，物件
傳遞的問題更是減少困難度，適合在高效能
的運算環境中，缺點則是產品化後便無法做
功能上的更新也無法跨網路存取。這樣的架
構並不適合於 embedded system 的環境，其原
因包含造成平台的運算能力的下降與系統資
源的降低；再者商業模式中 MHP 與 OSGi 為
不同的組織，自行維護相關的系統資源與應
用，若是要整合在同ㄧ平台上，對於軟體溝
通介面之間的定義勢必會有衝突。 
本研究主要透過 OSGi 平台的服務分享
能力，來擴展 MHP 的資訊服務能力，讓使用
者能夠藉由家中既有的多媒體設備，取得由
家庭資訊網路與控制網路所提供的各種服
務。為了使 MHP 平台與家用閘道器之 OSGi
平台兩大技術能夠達到協同式運作，提供數
位電視互動式的加值服務，MHP平台與OSGi
平台之間服務要能互通，但是兩個平台間物
件的傳遞過程是 OSGi 與 MHP 尚未定義到
的，要讓 bundles 與 xlets 能相互溝通，除了
應用的功能外，傳輸的過程也需要自訂；因
此本研究中除了實作出前人的方式外，也提
出把 MHP 與 OSGi 整合分離在家庭網路中，
使得物件的傳遞與通訊即可更具彈性也具備
了動態且可移植性的架構。相關文獻之比較
表，如下表一所示。 
TABLE 1  
Comparison between MHP and OSGi cooperation 
approaches 
 
 
四、系統架構分類與設計 
由於本研究中所探討的重點在於
middleware 之間的設計與應用，因此並不考
慮底層硬體的接收端與解碼器等功能。以下
針對兩大模式之運作方式並探討其執行週期
以及平台架構。 
(A) MHP Middleware 與 OSGi Platform 於同
一個 VM 上運行 
z 透過 Local Interface 連結於兩環境中 
如下圖 1 架構中，MHP Middleware 與
OSGi Middleware 是透過一個 Java Runtime 
 6
做一整合，透過 Framework 管理機制管控
Xlet 生命週期，當啟動 MHP Core Bundle 後，
就可以進入載入 Xlet App.的 Loaded 程序，並
正常運行 Xlet 功能，此時 Framework 能透過
MHP Core Bundle 來存取 Xlet App.的能力。
最後當服務包被要求停止或暫停時 Xlet 被強
制進入 Destroyed 程序，並將該服務包丟棄。 
當中 MHP Core Bundle 包含 Application 
Management 作為管理 MHP 技術中 Xlet 
Applications 的執行程序與執行週期等管理
模組，若採用此架構，會遇到整合 OSGi 技
術與 MHP 之間的執行程序與資源分享等問
題，所以必須要將 Bundle Life Cycle 與
Application Management 的 Life Cycle 作為整
合與合併。 
因此我們針對此架構中的執行程序提出
一種可行的運作方式，如下圖 3 中所示；由
於 MHP Core Bundle 是運行於服務平台上，
因此擺脫不了 Bundle 的 Life Cycle Control，
也就是說在設計上必須採用正常服務包的寫
法，當 Life Cycle 運行於 Active 的模式下，
才 可 以 將 執 行 程 序 控 制 權 丟 給 MHP 
Application  Management，讓 Management
能夠接掌執行 Xlet App.的控制權。對於
Cooperation 的方法，依然透過 Local Interface
即可存取。 
 
圖 3, Code Bundle 協同運作週期 
(B) OSGi Middleware 與 MHP Middleware 於
不同平台上運行 
z Tradition network communication (Socket 
Based) 
如下圖 4 架構中，屬於兩個互不相關的
平台，由於執行程序以及平台皆為相互獨
立，因此如果要讓兩平台達到相互溝通與服
務分享等功能，必然就需要自訂一組私有網
路通訊協定 private communication protocol。 
 
圖 4, STB 與 OSGi 合作模式 
兩平台之間訊息傳輸藉由區域網路作為
傳輸媒介，在具有 MHP Middleware 的數位
電視接收器中，建立一個通訊協定管道，並
且在 OSGi 上的服務包也必須要與接收器平
台進行 network connection 連接，因此相關的
效能問題與安全性問題，皆由兩平台所設計
的方式而定。 
z Advanced network communication (RMI 
based) 
雖然有許多的 communication protocol 能
夠達成兩端平台的通訊過程(Socket Based、
RMI、SOAP)，但是對於物件導向與傳遞過
程而言，RMI 有良好的基礎架構使得 service 
object 容許被序列化之後，傳遞到 MHP 的平
台中，並且能夠註冊服務物件，來達到兩平
台之間的服務同步機制。 
 
圖 5, OSGi 與 MHP 的通訊架構 
此模式中，採用 RMI 機制作為通訊方
 8
平台作溝通，將 MHP 與 OSGi 兩個
middleware 整合成一個平台，所以 MHP 平台
上的 API 可以直接存取 OSGi 的服務包
（service bundle），而 OSGi 服務包也可以存
取 MHP 的 API，另一方法則是讓存在於家庭
網路中的平台，透過網路存取進行服務與資
源的分享，此兩種透過這個整合架構，都可
擴展 MHP 資訊服務的能力。 
本計畫論文發表如下：  
1. Cheng-Liang Lin, Pang-Chieh Wang, 
Ting-Wei Hou, “Classification and Evaluation 
of Middleware Collaboration Architectures for 
Converging MHP and OSGi in a Smart Home”, 
Journal of Information Science and 
Engineering, Volume 25, Issue 5, September 
2009. 
(論文稿件附於附件 A) 
2. Cin-Shung Yang, Pang-Chieh Wang, 
Cheng-Liang Lin, Ting-Wei Hou, 
“Personalized iDTV Program in Multimedia 
Home Platform”, 22nd International 
Conference on Advanced Information 
Networking and Applications - Workshops, on 
page(s): 473-476, March 2008.  
3. Kuan-Hung Sun, Ting-Wei Hou, 
Zeng-Ying Wu,” Pluggable RFID components 
and a Lightweight RFID System based on 
OSGi”, Symposium of Consumer Electronics, 
pp1-2, Jan, 2007.  
 
六、參考文獻 
 
[1] H. Cervantes, D. Donsez, R. S. Hall; 
"Dynamic Application Frameworks Using 
OSGi and Beanome." proceedings of the 
International Symposium and School on 
Advanced Distributed Systems, Guadalajara, 
Mexico, November 2002. 
[2] A. Kaplan, D. Tkachenko, and N. Kornet. 
“Convergence of iDTV and home network 
platforms.” In IEEE Consumer 
Communications and Networking 
Conference (CCNC), Las Vegas, NV, 
January 2004. 
[3] Cabrer, M.R.; Redondo, R.P.D.; Vilas, 
A.F.; Pazos Arias, J.J.; “Controlling the 
smart home from TV.” In IEEE Consumer 
Electronics, 2006. ICCE '06. 2006 
Page(s):255 – 256. 
[4] Cabrer, M.R.; Redondo, R.P.D.; Vilas, 
A.F.; Arias, J.J.P.; Duque, J.G.; 
“Controlling the smart home from TV.” 
Consumer Electronics, IEEE Transactions 
on Volume 52, Issue 2, May 2006 Page(s): 
421 – 429. 
[5] Vilas, A.F.; Redondo, R.P.D.; Cabrer, 
M.R.; Arias, J.J.P.; Solla, A.G.; Duque, J.G.; 
Nores, M.L.; Fernández, Y.B.; ”MHP-OSGi 
convergence: a new model for open 
residential gateways.” In Software: Practice 
and Experience on Volume 36, Issue 13, 
Jun 2006 Page(s):1421 – 1442. 
[6] JXTA Project http://jxta-rmi.jxta.org/ 
 
 
JOURNAL OF INFORMATION SCIENCE AND ENGINEERING 
Institute of Information Science, Academia Sinica, Nankang, Taipei, 115 Taiwan 
 
 
 
Paper Number: JISE-SOA-07 
Paper Title: Classification and Evaluation of Middleware 
Collaboration Architectures for Converging MHP 
and OSGi in a Smart Home 
Author(s): Cheng-Liang Lin, Pang-Chieh Wang and 
Ting-Wei Hou 
 
 
 
Please reply to: 
  Ms. Huey-Chyi Tseng 
  Assistant Editor 
  JISE Editorial Office-Rm. 211 
  Institute of Information Science 
  Academia Sinica 
  Taipei, 115 Taiwan 
  E-mail: chris@iis.sinica.edu.tw 
Editor-in-Chief 
H. Y. Mark Liao        
Academia Sinica 
Managing Editor 
Tsan-sheng Hsu 
Academia Sinica      
Editors 
Nancy M. Amato 
Texas A&M University 
Yao-Wen Chang 
National Taiwan University 
Tsuhan Chen 
Carnegie Mellon University 
Chih-Ping Chu 
National Cheng Kung University 
Chung-Ping Chung 
National Chiao Tung University 
Pau-Choo Chung 
National Cheng Kung University 
Ding-Zhu Du 
University of Texas at Dallas 
Jorng-Tzong Horng 
National Central University 
Jenq-Neng Hwang 
University of Washington 
Ren-Hung Hwang 
National Chung Cheng University 
Rong-Hong Jan 
National Chiao Tung University 
Chung-Ta King 
National Tsing Hua University 
Sy-Yen Kuo 
National Taiwan University 
Tei-Wei Kuo 
National Taiwan University 
Ten-Hwang Lai 
Ohio State University 
Jonathan Lee 
National Central University 
Suh-Yin Lee 
National Chiao Tung University 
Tong-Yee Lee 
National Cheng Kung University 
Chin-Laung Lei 
National Taiwan University 
Chung-Sheng Li 
IBM TJ Watson Research Center 
Wanjiun Liao 
National Taiwan University 
Chih-Jen Lin 
National Taiwan University 
Chin-Teng Lin 
National Chiao Tung University 
Tyng-Luh Liu 
Academia Sinica 
Chi-Jen Lu 
Academia Sinica 
Jiebo Luo 
Kodak Research Laboratories 
Takeshi Tokuyama 
Tohoku University 
Doug Tygar 
University of California at Berkeley 
Wen-Guey Tzeng 
National Chiao Tung University 
Cho-Li Wang 
The University of Hong Kong 
Jeannette Wing 
Carnegie Mellon University 
Tzong-Chen Wu 
National Taiwan University of 
Science and Technology 
John Yen 
The Pennsylvania State University 
Pen-Chung Yew 
Academia Sinica 
Xiaodong Zhang 
The Ohio State University 
Date:  2009/6/23   
 
Dear Dr. Hou:  
 
     All necessary supporting materials for publication of your manuscript 
shown above on our Journal have been received.  The paper is scheduled to 
appear on the issue of Vol.  25 , No.  5 , (September 2009).  Thank you very 
much for your support.  
 
 
 
                          Sincerely yours, 
 
                             
                                   Tsan-sheng Hsu 
                            Managing Editor, JISE 
 
 
 
 
 
 
 
 
 
 
 
 
                                             Form_13 
 
Notice of Publication Date 
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
2 
 
Additionally the middleware of these two cannot mutually access each other’s resources, 
and they are not cooperative, neither collaborative.  
As IDTV and RG both enter a home, we believe that the services they control re-
spectively, such as information services, entertainment services and control automation 
services, are to integrate in a converged home network (Fig. 1). The integration process 
requires the convergence and the collaboration of the IDTV middleware and RG mid-
dleware to make one’s resources available to the other and further to create add-on new 
services on top of the IDTV-RG services and resources. We classify the collaboration 
architectures (configurations) according to the software architecture into three types: (1) 
IDTV functions based on RG middleware, (2) RG functions based on an IDTV middle-
ware, and (3) IDTV middleware and RG middleware are isolated. In this paper, only the 
software architectures for the collaboration between an instance of IDTV middleware 
and an instance of RG middleware are discussed. The collaboration between multiple 
instances of IDTV middleware and RG middleware can be built on single-instance col-
laboration models, so they are not discussed. 
 
Fig. 1. MHP and OSGi to converge future home network. 
 
We chose DVB/MHP (Multimedia Home Platform) and OSGi (Open Service Gate-
way initiatives) as experimental targets for IDTV middleware and RG middleware, re-
spectively, because they both are Java-based and have open source implementations. In 
this paper, we are to evaluate their collaborative architectures from a practical view. We 
used a Proxy design pattern. The model was then implemented according to the three 
types of software architectures. We evaluated efforts for implementing the collaborative 
architectures in line-of-code modified/enhanced, and evaluated the performance of them 
in terms of memory usage, system startup time, object registry time and method invoca-
tion time. Note that because Java Virtual Machine (JVM) is required, type (3) is further 
extended to three kinds of implementations, which are addressed in section 2.  
Scenarios for the services that require the convergence of MHP middleware and 
OSGi middleware can be found in [3-7, 24]. They are helpful in motivating this research. 
For instance, the visitor scenario is an UPnP camera controlled by OSGi middleware at 
the front door. The images captured by the camera is displayed on a MHP TV screen via 
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
4 
 
  
Fig. 3. (a) OSGi architecture.                  Fig. 3. (b) Life cycle control. 
 
work), respectively. OSGi manages all the activities and creates bindings between bun-
dles dynamically. The binding process includes service publication, discovery and the 
availability of services.  
 
2.1 Classification 
 
To make MHP and OSGi collaborative implies that MHP Xlets and OSGi bundles 
could cross-access one or more of each other’s objects. Following the classification in 
section 1, with MHP and OSGi as the target middleware for IDTV and RG, we classify 
the collaboration architectures into the three types: MbO, ObM and MnO, as summarized 
in Table 1. 
 
Table 1. Classification of MHP-OSGi collaboration architectures. 
Architectures Hardware: integrated on  a single platform 
Hardware: networked and  
dedicated platforms 
MbO MHP based on OSGi and a JVM None 
ObM OSGi based on MHP and a JVM None 
MnO1j1p: MHP neighbors OSGi on a 
single JVM MnO MnO2j1p: MHP neighbors OSGi but 
they are on two isolated JVMs  
MnO2j2p: MHP neighbors OSGi but 
they are on two JVMs distributed on 
two networked physical machines  
 
The three types, with their subtypes are:  
 
• MbO (MHP based on OSGi) architecture: OSGi serves as the base and an MHP Ap-
plication Manager is wrapped as a bundle on OSGi. Objects are cross-passed by refer-
ence. Since the MHP Application Manager is wrapped as a bundle, the MHP Applica-
tion Manager can be dynamically upgraded. The OSGi framework, by specification, 
can only be restarted, not dynamically upgraded.  
• ObM (OSGi based on MHP) architecture: MHP serves as the base. OSGi is wrapped 
as an Xlet. Objects are also cross-passed by reference. OSGi can be delivered and up-
graded as an Xlet. 
• MnO (MHP neighbors OSGi) architecture: MHP and OSGi are not wrapped as in 
MbO or ObM. They are isolated. MnO can be further classified into three subtypes 
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
6 
 
it is not easy to distinguish if an XbundLET is an Xlet of the MHP or a bundle of the 
OSGi. In [6], a bridge enables MHP and OSGi to collaborate by embedding a static java 
library into a Java virtual machine. The idea is new and it requires a JVM embedded with 
the bridge. The library style overcomes the drawback of the XbundLET.  
In the MnO2j1p model, MHP and OSGi are on two distinct JVMs but running on the 
same physical platform, such as a set-top-box. MnO2j1p is logically the same as the 
MnO2j2p, but its physical configuration is implemented on a single platform. The MnO2j2p 
architecture indicates that there are an MHP set-top-box (or TV set) and an OSGi service 
gateway connected by a home network. A simple way to enable them to communicate by 
pre-defined commands is to establish a socket to connection. Tkachenko and Kornet [7, 
12] propose a method that through broadcasting, an Xlet, wrapped as a bundle, can be 
automatically mounted to OSGi; the Xlet awaits the request for connection from MHP. 
But they only support a limited number of commands. In our proposed approach, Remote 
Method Invocation (RMI) enables the transmission and communication of objects to be 
flexible, dynamic and portable. As shown in Fig. 7, Xlets of MHP and bundles of OSGi 
communicate, and share resources and services of both ends by the support of MHP2OSGI 
IXC service and OSGi2MHP bundle, respectively. 
 
Fig. 7. MnO2j2p combines MHP and OSGi by a home network. 
3. SYSTEM ARCHITECTURE 
The OSGi and MHP collaboration architectures require a mechanism to make the 
OSGi framework and the MHP middleware know each other’s services and share them. 
We chose the Proxy design pattern [13, 14] to model and implement the mechanism. 
Consequently, there is a common interface to enable each Xlet/bundle to access bundle/ 
Xlet services. The lifecycle management of cross-access Xlets and bundles must be taken 
care of. In this section, the proposed solutions to fulfill the three requirements are de-
scribed.  
 
3.1 MbO  
 
In MbO, the core of MHP is wrapped as an OSGi bundle, called MHPAPPmanager, 
shown in Fig. 4. MHPAPPmanager loads and invokes Xlets. Active Xlets can invoke 
OSGi service bundles, and OSGi service bundles can also invoke these Xlets through 
MHPAPPmanager. Finally, MHPAPPmanager stops or pauses an Xlet, upon requests 
(signaling) from Application Information Table (AIT) or OSGi. Since the MHPAPP-  
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
8 
 
 
Fig. 10. The MbO sequence diagram. 
 
references. These service references are of an array type, which are sent IxcRegistry to 
register into the MHP Application Manager. The ServiceListener is an OSGi listener 
interface. It is responsible for notifying which service’s status is changed. A sequence 
diagram, as shown in Fig. 10, illustrates the sequence of starting the MHP Application 
Manger, the registry process and the access operations. Fig. 10 shows: 
 
1. When OSGi is ready, MHPAPPmanager bundle can be installed and started. Then 
transmittable service bundles also can be installed and started by OSGi. (The trans-
mittable property is described in section 3.3.) 
2. MHPAPPmanager creates an instance of the MHP Application Manager. (In the im-
plementation, the XletView, an MHP simulator [15], is launched.  
3. MHPAPPmanager creates ProxyRegistry.  
4. RegistryProcess gets the OSGi’s BundleContext reference using the getBundleCon-
text method. Then ProxyRegistry waits and listens to those service bundles whose 
properties are transmittable using the getServiceReference method. Similarly, a ser-
vice bundle on OSGi is able to get references of these IXC service by RegistryProcess, 
too.  
5. RegistryProcess registers the service references in the MHP Application Manager 
using the rebind method of the IxcRegistry class. 
 
3.2 ObM  
 
In ObM, OSGi, together with OSGi Service IXC and the common interface is 
wrapped as an Xlet, as in Fig. 5. IXC enables OSGi to communicate with other Xlets. The 
lifecycle control and the common interface resemble that of the MbO. When OSGiSer-
vice IXC is active, the common interface can be loaded and activated by the OSGi-  
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
10 
 
to create a new public class, an AgentClass, responsible for overriding getBundles, get-
Service and getServiceListener methods from OSGi’s BundleImp class. These three 
functions must be invokeable out of the scope of OSGi to get the services object or ser-
vices listener. Therefore MHP and OSGi can mutually communicate with each other. 
MHP uses IXC and prescribes a common interface to connect OSGi.  
The transmittable property is necessary for two reasons. First, it unifies MbO, ObM, 
MnO1j1p MnO2j1p, and MnO2j2p architecture service bundles. Since MnO2j1p and MnO2j2p 
use RMI, such a service bundle is different from a normal service bundle. Second, among 
MbO, ObM, and MnO1j1p, not all of the OSGi services should be available to MHP Xlets. 
Therefore, each transmittable bundle is labeled as props.put (“Bundle-Category”, trans-
mittable). In this way, ServiceListener can monitor these labeled bundles. The MHP co-
operation interface (inside the MHP2OSGi IXC) listens to the events of OSGi coopera-
tion interface (inside the OSGi2MHP bundle) and stores the bundle objects that con-
form to the transmittable condition. The difference between the transmittable bundles of 
MnO2j1p and MnO2j2p and is that in MnO2j1p the bundle is only labeled, but in MnO2j2p, a 
transmittable bundle is both labeled, and in an RMI style. Fig. 12 shows the sequence 
diagram for the scenario as follows: 
 
Fig. 12. The MnO1j1p sequence diagram. 
 
1. In the initial phase (phase1), MHP creates AgentClass to start OSGi. The MHP2OSGi 
IXC and OSGi2MHP bundle are installed and started by MHP and OSGi. 
2. AgentClass creates a class, whose name is ProxyRegistry. 
3. MHP2OSGi subscribes a service listener from MHP. MHP2OSGi waits and listens to 
those IXC-services whose properties are transmittable using the lookup method. Simi-
larly, OSGi2MHP is waiting and listening to get references of those service bundles, 
too. 
4. If MHP2OSGi finds a transmittable service, it invokes ProxyRegistry by doRegistry 
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
12 
 
 
Fig. 14. The sequence diagram on the MHP2OSGi IXC side. 
 
In Fig. 14, OSGiJoint object has three main functions. The first is to connect OS-
GiServiceCollector object and to get codebase URL. The second is to accept the col-
lected remote object sent from OSGiServiceCollector object via OSGiJoint. When the 
OSGiJoint receives the remote object (stub class), it registers to MHP IxcRegistry using 
the IXC mechanism.  
4. IMPLEMENTATION AND EVALUATION 
We implemented the architectures to converge MHP and OSGi. The computers were 
equipped with an AMD Athlon 32 processors 2500+ running at 1.8 GHz, with 512MB 
RAM with only required services. They were free of other traffic and were restarted be-
fore each test to ensure the same initial conditions. Every test was repeated ten times 
with the JVM garbage collector disabled, according to the strategy in [21]. Debian 2.4.27 
and Java 2 Platform Standard Edition version 1.4.1.07 were used. MHP was Xletview 
3.6, with our IXC implementation. OSGi implementation was Oscar 1.5. 
 
4.1 Measures  
 
We evaluate the cost of sharing services between MHP and OSGi in terms of (1) 
Lines of code modified, (2) performance overhead. Lines-of-code is a software engi-
neering metric to estimating the size of a software product. The performance overhead 
includes: memory usage and the time for system startup, transmittable bundle registry, 
Xlet-invoke-bundle, and upgrade. We first summarize the modifications to the source 
codes of Xletview and Oscar in Table 2. Because MnO2j1p is like MnO2j2p, MnO2j1p is 
omitted. MnO2j2p modified more lines, in average 3.2% than those of the MbO, ObM and 
MnO1j1p, because of network communications.  
We summarize their performances in Table 3. The average memory usage of the 
networked machines is 1.54% more than the single machine. MnO2j2p register object time 
for a service bundle increases 48.15%, and MnO2j1p just increases 1.65% more than the 
single machine. The reason is that the latter does not need to convert before access; they  
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
14 
 
wards, the common interface is still in the environment. The framework interface cou-
pling is therefore regarded as tight, and it cannot be updated at runtime. However, MbO 
supports dynamic upgrading bundles. Since MbO is upgradeable, its interface coupling is 
considered as loose. ObM is like MbO, and its interface coupling is loose, too.  
Regarding the networked case, there are more limitations. Though networked mid-
dleware cannot support pass-by-reference, it still can achieve the collaborative opera-
tions by RMI, SOAP, UPnP, etc. We implemented and demonstrated that the same ap-
proach can be applied to integrate OSGi to MHP or OSGi to OSGi, both by RMI. Net-
worked architecture has a dynamically upgradeable feature. However, the biggest disad-
vantage to the use of networked architecture is that counterparty API cannot be directly 
invoked which may bring difficulties in development and integration. A summary of 
qualitative comparison of the convergence approaches are in Table 4. 
 
Table 4. Qualitative comparison between MHP and OSGi convergence approaches. 
 MbO ObM MnO1j1p MnO2j1p/MnO2j2p 
Communication 
Method 
Pass by 
Reference 
Pass by 
Reference 
Pass by 
Reference 
Pass by 
Message 
Bilateral API Call 
Directly Yes Yes Yes No 
Run-time Upgrade 
Interface Yes Yes No Yes 
Dynamic Upgrade 
Middleware or Wrap MHP only OSGi only None Both 
Interface Cohesion Sequential  
Cohesion (High)
Sequential  
Cohesion (High)
Logical 
Cohesion (Low)
Sequential  
Cohesion (High) 
Interface Coupling Loose Loose Tight Loose 
Extensibility Medium Medium Below Medium High 
 
In Table 4, cohesion is addressed. Sequential cohesion is that when parts of a mod-
ule are grouped because the output from one part is the input to another part like an as-
sembly line. Logical cohesion is when parts of a module are grouped because they logi-
cally are categorized to do the same thing, even if they are different by nature [23].  
The responsibility of the common interface of the MbO and ObM is to execute a 
register/unregister procedure. In addition to the procedure, there are no other related tasks. 
Hence, the common interface is marked as a sequential cohesion. Considering MnO2j1p/ 
MnO2j2p, the common interface is separated from MHP and OSGi. These two compo-
nents, OSGiServiceCollector and OSGiJoint, have a relation, though, they are separated. 
Hence, the interface is a sequential cohesion. As for MnO1j1p, the register/unregister pro-
cedure, performed by the common interface, has to access AgentClass, otherwise it can-
not be executed. The common interface is a logical cohesion. 
The advantage for the MHP and OSGi on a single platform is direct access of mu-
tual APIs. In terms of integration, a single platform is truly appropriate. The MnO2j2p 
does not seem to be as good as MbO or ObM intuitively. However, the performance of 
MnO2j2p is acceptable in the visitor-scenario in [3-7, 24]. In the visitor-scenario, the me-
dia content of the video-doorphone cannot be directly displayed on the Picture in Picture 
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
16 
 
REFERENCES 
1. Y. S. Bae, B. J. Oh, K. D. Moon, and S. W. Kim, ”Architecture for interoperability 
of services between an ACAP receiver and home networked devices,” IEEE Trans-
actions on Consumer Electronics, Vol. 52, 2006, pp. 123-128. 
2. T. Zahariadis and K. Pramataris, “Multimedia home networks: Standards and inter-
faces,” Computer Standards and Interfaces, Vol. 24, 2002, pp. 425-435.  
3. M. R. Cabrer, R. P. D. Redondo, A. F. Vilas, J. J. P. Arias, and J. G. Duque, “Control-
ling the smart home from TV,” IEEE Transactions on Consumer Electronics, Vol. 52, 
2006, pp. 421-429.  
4. A. F. Vilas, R. P. D. Redondo, M. R. Cabrer, J. J. P. Arias, A. G. Solla, J. G. Duque, 
M. L. Nores, and Y. B. Fernández, ”MHP-OSGi convergence: A new model for open 
residential gateways,” Software: Practice and Experience, Vol. 36, 2006, pp. 1421- 
1442.  
5. M. R. Cabrer, R. P. D. Redondo, A. F. Vilas, and J. J. P. Arias, “Controlling the smart 
home from TV,” in Proceedings of IEEE International Conference on Consumer 
Electronics, 2006, pp. 255-256.  
6. M. C. Yang, N. Sheng, B. Huang, and J. Tu, “Collaboration of set-top box and resi-
dential gateway platforms,” IEEE Transactions on Consumer Electronics, Vol. 53, 
2007, pp. 905-910.  
7. A. Kaplan, D. Tkachenko, and N. Kornet, “Convergence of iDTV and home net-
work platforms,” in Proceedings of IEEE Conference on Consumer Communications 
and Networking, 2004, pp. 624-626.  
8. W. Z. Huang, C. L. Lin, T. W. Hou and C.Y. Chang, “Integration and combination of 
MHP and OSGi,” Symposium on Digital Life Technologies − Building a Safe, Se-
cured and Sound Living Environment, 2006, pp. 6-10. 
9. Multimedia Home Platform (MHP) Specification 1.1.1, Digital Video Broadcasting 
(DVB), June 2003, http://www.mhp.org/.  
10. OSGi Service Platform, Release 4, OSGi Alliance, http://www.osgi.org/.  
11. H. Cervantes, D. Donsez, and R. S. Hall, “Dynamic application frameworks using 
OSGi and Beanome,” in Proceedings of the International Symposium and School on 
Advanced Distributed Systems, 2002, http://www.humbertocervantes.net/papers/IS- 
ADS2002.pdf 
12. D. Tkachenko, N. Kornet, A. Dodson, L. Li, and R. Khandelwal, “A framework sup-
porting interaction of iDTV applications and CE devices in home network,” in Pro-
ceedings of IEEE Conference on Consumer Communications and Networking, 2005, 
pp. 605-607.  
13. U. Zdun, C. Hentrich, and W. M. P. van der Aalst, “A survey of patterns for service- 
oriented architectures,” International Journal of Internet Protocol Technology, Vol. 1, 
2006, pp. 132-143.  
14. E. Gamma, R. Helm, R. Johnson, and J. Vlissides, Design Patterns: Elements of Re- 
usable Object-Oriented Software, Addison-Wesley, Boston, 1995.  
15. XleTView 0.3.6, http://xletview.sourceforge.net/.  
16. The Reflection API, http://java.sun.com/docs/books/tutorial/reflect/index.html.  
17. Remote Method Invocation Specification, http://java.sun.com/.  
18. XML-RPC Specification, http://www.xmlrpc.com/spec/.  
19. SOAP Specification, http://www.w3.org/TR/soap/.  
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
18 
 
Table 7. System startup, object registry and method invocation time of a set. 
 
Table 8. System startup, object registry and method invocation time of two sets. 
Two networked sets 
MnO2j1p MnO2j2p  
OSGi MHP OSGi MHP 
Initialization 696ms 1212ms 696ms 1224ms 
wrap and/or common interface 1341ms 360ms 1342ms 362ms 
Total startup 3609ms 3624ms 
a transmittable bundle registry 33ms 963ms 
An xlet invoking a bundle 3ms 3ms 
of MnO1j1p is shorter than others. This is because the MHP middleware and the OSGi 
framework are independent. They do not require the ‘wrap’ overhead. In addition, the 
interface is not an Xlet or a bundle, so the access (translation) time is reduced. But MbO, 
ObM and MnO1j1p invocation time are the same. In networked sets, double time is re-
quired to perform access translation as compared with the single set. 
APPENDIX 3. UPGRADE TIME 
The measurements of upgrade time are shown in Table 9. The OSGi upgrade takes 
more procedures to handle bundles’ upgrade control as compared with MHP. In MbO 
and ObM, the wrapper contains the core and interface. We extracted the application 
manager, net.beiker.xletview.*, from the xletview as the to-be-upgraded MHP core. The 
upgrade of the OSGi is constructed using oscar.jar and moduleloader.jar. We added a 
procedure to handle the upgrade, which was to kill the current version after the download 
new middleware component, had been installed. For MnO2j2p only the interfaces (gw2mhp 
bundle and mhp2osgi ixc) were updated. So the upgrade time of MbO architecture is 
2.3% slower than ObM and MnO2j1p/MnO2j2p, but the upgrade time of the entire middle-
ware will depend on their system startup time. We set up an http server in our laboratory 
to provide the MHP core, OSGi core and the common interface for downloading. The 
effective network transmission rate measured was 4Mbps, and the network transmission 
rate of the receiver side was 2Mbps. 
 
 
A Single set 
 
MbO ObM MnO1j1p 
Initialization 680ms (OSGi) 1563ms (MHP) 1952ms 
wrap + common interface 
1559ms (MHP) 
543ms (interface)
685ms (OSGi) 
553ms (interface)
376ms (interface) 
Total startup 2782ms 2801ms 2328ms 
A transmittable bundle registry 20ms 20ms 20ms 
An xlet invokes a bundle 1.5ms 1.5ms 1.5ms 
CHENG-LIANG LIN, PANG-CHIEH WANG AND TING-WEI HOU 
 
20 
 
Ting-Wei Hou (侯廷偉) received B.S., M.S., and Ph.D. de-
grees all in Electrical Engineering, National Cheng Kung Univer-
sity, Taiwan, in 1983, 1985, and 1990 separately. He has been an 
Associate Professor in Department of Engineering Science, Na-
tional Cheng Kung University since 1990. He was a visiting 
scholar of CSRD of University of Illinois at Urbana-Champaign, 
Illinois, U.S.A, during 1993-1994. His major research is in em-
bedded systems and system integration. He is currently working 
on Java based embedded systems, such as Java Virtual Machines, 
Java obfuscators, MHP, OSGi, Java card applications, and RFID  
applications. 
 
 
 
 
中文概要: 
 
此次前去拉斯維加斯參加國際消費性電子研討會 ICCE 2009，主要是發
表論文「A Try Before You Buy Approach for Networked Digital Home 
Appliances and Services」(中文:可先試用再購買的數位家庭服務流程) ，透
過使用者住家中的數位家庭閘道器(Home Gateway)可管理家中的各項服務
(Service)，本次發表的論文提出流程讓使用者可在外向第三方的服務提供商
租用或試用服務，透過這次的國外研討會報告除了增加了自己在公開場合表
現自己的經驗外也見識到了很多各國在不同領域人的想法和發展，結尾回答
了報告當天在場提問者的兩個問題，並附上這次的活動照片和心得建議。 
 
英文概要: 
 
The major goal we go to Las Vegas is to attend the ICCE 2009,presenting 
our paper named by「A Try Before You Buy Approach for Networked Digital Home 
Appliances and Services」.User can manage many service by the Home Gateway 
installed in user’s home network.The paper promotes a flow that user can rent or 
experiment service provided by the service vendor.Although it’s nervous to present in 
front of so many people,it also broaden my sight by listening to other ‘s idea and 
development from different fields.At the ending,I answer two questiones by the 
audience,and offer some photos and advice about this attending. 
加斯，由於臺灣沒有直接抵達的飛機因此先從洛杉磯國際機場入境後再轉國
內班機前往拉斯維加斯，會議是辦在一棟叫 Convention center的建築物裡，
類似臺灣的世貿展館專門舉辦各種國際會議，會場非常大，第一天前去的時
候還迷路，我們參加的 ICCE是和 CES展覽一起合辦，CES也是一個非常
大的消費性電子產品展覽，很多大廠都在這個展上發表他們最新的產品應
用，ICCE是比較偏學術性的論文發表，因此是接在 CES展覽之後。 
 
 
  
 
 
心得： 
 
 藉由國立成功大學邁向頂尖大學計劃之補助，讓我們學生能夠順利出國至美
國內華達州拉斯維加斯參加 IEEE所舉辦的 ICCE (International Conference on 
Consumer Electronics) 國際研討會，在此由衷的感謝。 
 
 ICCE國際研討會今年已堂堂邁入第 27屆，此研討會所討論的主題為消費性
電子產品，顧名思義只要是人們所接觸過使用過任何有關於電子性產品的問題皆
能在此提出，與來自於全世界各國的菁英一起討論與批評指教。 
 
 其中所討論的主題可細分下列幾項： 
HOME ENTERTAINMENT、MOBILE COMPUTING & COMMUNICATION、A/V 
TECHNOLOGY、RF & WIRELESS、CONSUMER NETWORKS、AUTOMOTIVE 
ENTERTAINMENT & INFORMATION、SECURITY & RIGHTS 
MANAGEMENT、ENABLING TECHNOLOGY 
 
 
International Conference on Consumer Electronics 2009 
建議事項： 
 
一、 希望國內大專院校或政府機關能多多舉辦類似相關活動研討會，讓他國
菁英至台參與，藉此學習他人經驗與國際接軌。 
二、 希望政府、學校能提供更多資金，補助同篇論文多位作者一同出國參與
研討會，可以藉此吸取他人的意見，作者們並互相砥礪，也可從中激發出不
同的想法讓研究更有新的未來發展趨勢。 
三、 希望政府、學校能多多提供獎助學金給研究生，讓學生在做研究過程中
不受資金缺乏等外在因素而失敗。 
四、 國內大專院校可與國外大專院校結為姐妹校，讓研究生至國外發表論文
時，並可同時到他校參觀以及增廣見識。 
五、 希望藉由姐妹校的成立，研究生出國參與研討會時，亦可藉此機會當短
期國外交換學生至他校上課學習。 
六、 藉由姐妹校的成立，亦可體驗國外大專院校學生的學習態度與校園生
活，使我們更具有國際觀拓廣我們的視野。 
 
下為本次出差人員：王邦傑 
 
 
 
附件 A. 本次參與國際會議所投稿之論文,正式論文檔案列於附件 A 
