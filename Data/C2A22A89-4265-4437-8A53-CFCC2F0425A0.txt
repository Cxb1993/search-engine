I目錄
中文摘要 .............................................................................................................................. II
英文摘要 .............................................................................................................................. II
1. 前言與文獻探討 .............................................................................................................. 1
2. 研究方法 .......................................................................................................................... 4
3. 實驗結果與討論 .............................................................................................................. 7
4. 結論與未來研究建議 ...................................................................................................... 9
5. 參考文獻 ........................................................................................................................ 16
6. 計畫成果 ........................................................................................................................ 17
11. 前言與文獻探討
在最近十年內半導體製造業快速發展，各家廠商為了提高企業競爭力，無不針對其製程與相關生
產設備進行提昇。因此，現今的矽晶圓（wafer）的大小已由 200-mm（8 吋）進展至 300-mm（12 吋）。
換句話說，每一片 12 吋晶圓內所包含的晶片（Integrated Circuit, IC）數量比起 8 吋晶圓多了約 125%。
此一進展不只增加每一片晶圓內所包含的 IC 數量，也同時增加每一片晶圓的重量。晶圓在製造過程當
中會放置於晶舟（Front Opening Unified Pods, FOUPs）內，12 吋廠中滿載的晶舟（通常內含 25 片晶圓）
重量約 30 磅。從人因工程的角度已經不適合進行人工搬運。因此，全自動化物料搬運設備（automate
material handling system, AMHS）已是 12 吋廠中不可或缺的設備。然而，隨著晶圓大小的提昇，顧客
需求的 IC 數量通常不會超過一個 FOUP 內所容納的晶片總數。此時若一個晶舟內僅包含單一顧客的需
求，雖然比較能掌握生產進度，但是卻會增加晶舟的購置成本與維護成本，也容易使得物料搬運系統
成為系統中的瓶頸。Laub et al. (2007)也證明單一晶舟內僅包含單一顧客訂單將會降低整體生產效率。
因此，實務上的作法會希望將可同時加工的顧客訂單放置於同一晶舟，用以提高系統運作的效率。另
外，在晶圓製造過程當中有許多機台的作業時間是固定的，也就是與晶舟內的晶圓片數量無關（例如：
wet sink 機台）。因此，將顧客訂單儘可能放置於同一晶舟內，將可提高生產效率。然而不同的訂單有
不同的需求（抵達時間、交期、作業內容、作業限制、…、等等），因此要如何在不影響顧客滿意度的
條件下將不同的顧客訂單放置在同一晶舟內進行生產是 12 吋廠中亟待解決之問題。目前此一問題已由
Mason et al. (2004)以及 Tanrisever et al. (2004)定義為晶舟配置問題（Multiple Orders per Job (MOJ)
problem）。
目前有關 MOJ 問題的研究論文數量並不多。其中，Qu (2004) 與 Mason et al. (2004)針對單機生產
系統中的兩種生產環境：（1）以晶舟為加工基礎之環境（single lot processing environment）；（2）以晶
圓為加工基礎之環境（single item processing environment），分別提出數個演算法求解 MOJ 問題。上述
兩篇研究都是在假設訂單抵達時間為零的條件下，探討各個演算法之績效指標－加權完工時間（total
weighted completion time）的表現。Jia and Mason (2008)在平行雙機（parallel machines）以及二機台之
流程式生產系統（two-machine flowshop）中，考量設置時間與各訂單抵達時間不為零的條件下，探討
各種演算法對於改善總加權完工時間的績效表現。Laub et al. (2007)針對兩機台之流程式生產系統進行
研究，兩台機台分別具有不同加工特性：一部以晶舟為加工基礎，另一台以晶圓為加工基礎之機台。
Laub 等學者提出計算最大完工時間（makespan）之下限（lower bounds）的方程式。Qu and Mason (2005)
提出利用基因演算法求解單機生產系統中 MOJ 問題，其單機生產系統中又分成兩種環境進行探討：（1）
以晶舟為加工基礎之環境（single lot processing environment）；（2）以晶圓為加工基礎之環境（single item
processing environment），所探討之績效指標為總加權延遲時間（total weighted tardiness, TWT）。Erramilli
and Mason (2006)利用模擬退火法（simulated annealing, SA）求解單一批次生產機台之 MOJ 問題。Mason
et al. (2004)提出許多案例說明 MOJ 問題不僅發生在 12 吋晶圓廠內，在其他領域上亦有相關實務問題
屬於此一範疇，例如：散裝貨運（less than truckload (LTL) transportation）問題以及軍方後勤補給問題。
從上述整理中可以發現目前 MOJ 文獻所研究之生產系統均集中於單機、平行雙機或二機台之流
程式工廠，本研究計畫將延伸過去學者的研究，探討三機台之流程式工廠（three-machine flowshop）中
的 MOJ 問題。本計畫所研究之生產系統中將包含三種不同加工型態之機台（一台以晶圓為加工基礎之
機台、一台以晶舟為加工基礎之機台以及一台批次加工機台），如圖一所示。以晶圓為加工基礎之機台
（例如：晶圓步進機（stepper））其工件加工時間取決於晶舟內晶圓數量，片數越多則加工時間越長。
以晶舟為加工基礎之機台（例如：wet sink 機台）其工件加工時間與晶舟內晶圓數量多寡無關，通常為
固定時間。另外，批次加工機台（例如：爐管（diffusion furnace or burn-in oven））在其最大容量的限
3ro: 訂單 o 的抵達時間（ready/release time of order o）
N: 系統中的訂單總數（number of orders in the model）
O: 訂單集合（set of orders, {1, …, N}）
NJ : 系統中工件總數（number of jobs in the model）
J: 工件集合（set of jobs, {1, …, NJ}）
NB: 系統中批次總數（number of batches in the model）
B: 批次集合（set of batches, {1, …, NB}）
F: 系統中 FOUP 數量（number of FOUPs in the model）
θ: 單一批次中最大允許工件數量（maximum number of jobs in a batch）
Z1,j: 工件 j 在第 1 台機台上開始加工時間（the time at which job j begins being processed on machine 1
(item-processing machine)）
Z2,j: 工件 j 在第 2 台機台上開始加工時間（the time at which job j begins being processed on machine 2
(lot-processing machine)）
δb: 批次 b 在批次加工機台上開始加工時間（the time at which batch b begins being processed on machine 3
(batch-processing machine)）
P1,j: 工件 j 在第一台機台上之加工時間（processing time of job j on machine 1）
P2: 機台 2 的加工時間（processing time on machine 2）
P3: 機台 3 的批次加工時間（processing time on machine 3）
ρ: 機台 1 之單位加工時間（unit processing time）
以下混整數數學規劃（Mixed Integer Programming, MIP）模式為本計畫欲求解之 F3|moj(mix)|TWT
問題。



Oo
ooo DCWMin )( ................................................................................. (2)

 

Oo Bb
ojbo JjKXSts .. .............................................................. (3)

 

Jj Bb
ojb OoX 1 ................................................................... (4)
JjY
Bb
jb 

1 .......................................................................... (5)
BbJjNYX
Oo
jbojb 

, ....................................................... (6)
BbY
Jj
jb 

 .......................................................................... (7)
JjXSP
Oo Bb
ojboj  
 
,1 ......................................................... (8)
JjOoXMZ
Bb
ojboj  

,)1(,1  ..................................... (9)
JjPZZ jjj  ,1,1,2 .............................................................. (10)
]1....,,1[,1,11,1  Jjjj NjPZZ .............................................. (11)
5圖三 染色體架構
初始世代的染色體群體隨機產生後，針對每一個染色體計算適合度(fitness)。適合度較高之染色體
在後續利用俄羅斯輪盤(Roulette Wheel Selection)手法挑選染色體進行交配(crossover)時會有較高機率
中選。被選中的兩個染色體稱之為母代，將進行交配以產生子代。本研究所採用之交配機制，如圖四
所示。本計畫所採用的交配機制乃是隨機挑選一列（一張訂單）進行兩個染色體的基因(genes)互換
(swap)。交配完後之染色體會有一定的機率會發生突變(mutation)，突變機制如圖五所示，隨機挑選一
列（一張訂單）進行基因突變。除了利用交配/突變機制產生後代染色體，本計畫也納入菁英策略(elitism
strategy)將前一世代中表現較為優異的染色體直接複製至下一世代。本計畫所使用之基因演算法依據上
述步驟反覆進行，直到停止條件被滿足。


















































































114
012
201
115
113
206
115
012
201
204
113
206
22
112
205
116
204
201
203
112
204
116
115
201
203
11
OffspringParent
OffspringParent
圖四 本研究所採用的交配機制
73. 實驗結果與討論
為了證明所提出之以 GA 為基礎之方法能有效求解 F3|moj(mix)|TWT 問題，本計畫將進行一廣泛性
的實驗。實驗中所考量之因子與水準如表一所示。實驗將探討加工時間對於系統績效之影響，共有兩
種不同加工時間模式。第 I 種模式第 1 台機台（item-processing machine）每一片晶圓加工時間為 1 單
位時間（滿載晶舟（25 片）則為 25 單位時間），第 2 台機台（lot-processing machine）每一個晶舟的加
工時間為 10 單位時間，第 3 台機台（batch-processing machine）每一批次的加工時間為 60 單位時間；
第 II 種模式第 1 台機台（item-processing machine）每一片晶圓加工時間為 0.4 單位時間（滿載晶舟（25
片）則為 10 單位時間），第 2 台機台（lot-processing machine）每一個晶舟的加工時間為 25 單位時間，
第 3 台機台（batch-processing machine）每一批次的加工時間為 60 單位時間。除了考量加工時間因子
對於系統績效之影響，本計畫在實驗中亦同時納入其他相關因子進行研究，例如：訂單數量（N）、訂
單大小（ν）、晶舟容量（β）、訂單抵達時間（α）、訂單交期（ε）、批次容量上限（θ）。驗證實驗中有 7
個因子，共計有 288 種實驗組合，每一種組合將進行 10 次隨機實驗，實驗總次數為 2,880 次。實驗過
程中訂單的權重將由均勻分配隨機產生（WiDU (1, 15)）。系統中晶舟（FOUP）數量由方程式(18)計
算得之，其中ν表示平均訂單大小以及β為晶舟容量係數。
1)
12
( 

N
CeilingF ............................................................................................... (18)
表一 實驗設計因子表
Factors Levels Level Description
Processing times 2 scenario I: 25-10-60
scenario II: 10-25-60
Number of orders (N) 3 10, 20, 30
Order size (ν) 2
Discrete uniform 


 
2
1
,
2
1 DU , where
ν{5, 7}
FOUP capacity (β) 2 12β+1, whereβ{1, 2}
Ready (Release) time (α) 2
Uniformly distributed over [0, 

N
i
iP
1
 ], where
α{0.5, 1.0} and Pi is the processing time of order i
Due date (ε) 3 Uniformly distributed over [ri+Pi, ri+εPN], where ri
is the ready time of order i and P=max(Pi), and
ε{0.25, 0.50, 0.75}
Capacity of batches (θ) 2 2, 3
288 unique design factor combinations
10 problems per design factor combination
2880 total problem instances investigated
由於目前並無單一簡單的法則能求解 F3|moj(mix)|TWT 問題。因此，本計畫納入數種啟發式解法進
行績效比較，每一種解法包含三個部分：訂單排序、晶舟配置以及晶舟集批。訂單排序部分共有三項
法則：最早交期（EDD）、最短寬裕（SLK）以及先進先出（FCFS）。本計畫納入三種晶舟配置法則：
FFD1、FFDn 以及 FFDAJS，這三種法則為 Mason 等學者在 2004 年所提出，對於求解晶舟配置問題有
不錯的績效表現。晶舟集批部分有三項法則：最小批量（single batch size, Sin）、最大批量（maximum batch
90
2000
4000
6000
8000
0 50 100 150 200 250 300
Number of generations
T
W
T
圖六 以 GA 為基礎之演算法之收斂示意圖
4. 結論與未來研究建議
本研究計畫主要探討三機台之流程式工廠（three-machine flowshop）中的 MOJ 問題。生產系統內包
含三種不同加工型態之機台（一台以晶圓為加工基礎之機台、一台以晶舟為加工基礎之機台以及一台
批次加工機台）。此一三機台流程式工廠之 MOJ 問題內主要包含三項內容：（1）晶舟配置：將顧客訂
單配置到特定 FOUP；（2）晶舟排程：針對所建立之 FOUPs 排定加工順序；（3）晶舟集批決策：將已
決定好加工順序的 FOUPs 集結成批次以進行加工。為了更清楚定義所探討之議題，本計劃首先提出一
數學規劃模式。此模式可在合理的求解時間內對小型問題求得最佳解。但是實務上所遭遇之問題通常
較為複雜，所需的求解時間較長。因此，本研究計畫針對此一實務議題進行研究，提出一以 GA 為基
礎之演算法，期能在合理可接受的時間內同時求解晶舟配置問題以及晶舟排程問題，期能讓顧客訂單
準時達交並且提高顧客滿意度。從實驗結果中可以證明以 GA 為基礎之演算法能在所有因子組合情境
下大幅地改善績效指標 TWT，並且其所改善後績效指標值 TWT 能顯著地優於其它傳統啟發式解法。
再者，本計劃所發展之以 GA 為基礎之演算法能在合理可接受時間(約 55 秒)內求得近似最佳解。
未來後續研究方向有二：納入晶圓製造中特有的再回流特性，並且發展適用的演算法來求解 MOJ
問題；再者，探討本計劃所發展以 GA 為基礎之演算法對於其他績效指標(如交期或是成本相關指標)
的績效表現為另一未來研究方向。
11
表三 第 I 種加工時間模式下 TWT 績效比較表(N=20)
Factor Level Combination TWT Rank Level Combination TWT Rank Level Combination TWT Rank
Order Size (5,*,*,*,*) GA 0.87 A (7,*,*,*,*) GA 1.47 A
FCFS-FFDAJS-Sin 1528.65 B FCFS-FFDAJS-Inc 1061.18 B
FCFS-FFDAJS-Inc 1567.14 B FCFS-FFDn-Inc 1112.36 B
EDD-FFDAJS-Sin 2005.62 C EDD-FFDAJS-Inc 1265.28 BC
EDD-FFDAJS-Inc 2143.19 C FCFS-FFDn-Sin 1525.42 C
FCFS-FFDn-Sin 2607.61 C FCFS-FFDAJS-Sin 1542.51 C
FOUP capacity (*,1,*,*,*) GA 1.09 A (*,2,*,*,*) GA 1.25 A
FCFS-FFDAJS-Inc 717.06 B FCFS-FFDAJS-Sin 1687.46 B
EDD-FFDAJS-Inc 829.33 BC FCFS-FFDAJS-Inc 1911.25 C
FCFS-FFDn-Inc 1036.70 CD EDD-FFDAJS-Sin 2286.42 CD
EDD-FFDn-Inc 1205.27 D EDD-FFDAJS-Inc 2579.14 D
FCFS-FFDAJS-Sin 1383.69 D FCFS-FFDn-Sin 2640.46 D
Order ready time (*,*,0.5,*,*) GA 2.03 A (*,*,1.0,*,*) GA 0.31 A
FCFS-FFDAJS-Inc 648.85 B FCFS-FFDAJS-Sin 1798.60 B
FCFS-FFDn-Inc 888.00 C FCFS-FFDAJS-Inc 1979.46 B
EDD-FFDAJS-Inc 1260.53 D EDD-FFDAJS-Sin 2021.64 B
FCFS-FFDAJS-Sin 1272.55 D EDD-FFDAJS-Inc 2147.94 B
FCFS-FFDn-Sin 1420.42 D FCFS-FFDn-Sin 2712.61 C
Batch size (*,*,*,*,2) GA 0.76 A (*,*,*,*,3) GA 1.58 A
FCFS-FFDAJS-Inc 1290.19 B FCFS-FFDAJS-Inc 1338.13 B
FCFS-FFDAJS-Sin 1535.58 BC FCFS-FFDAJS-Sin 1535.58 BC
EDD-FFDAJS-Inc 1675.38 BCD EDD-FFDAJS-Inc 1733.09 BCD
FCFS-FFDn-Inc 1950.23 CD FCFS-FFDn-Inc 2010.91 CD
FCFS-FFDn-Sin 2066.52 D FCFS-FFDn-Sin 2066.52 D
Due date tightness (*,*,*,0.25,*) GA 3.40 A (*,*,*,0.50,*) GA 0.10 A (*,*,*,0.75,*) GA 0.00 A
FCFS-FFDAJS-Inc 2070.77 B FCFS-FFDAJS-Inc 1159.12 B FCFS-FFDAJS-Inc 712.58 B
FCFS-FFDAJS-Sin 2643.74 C FCFS-FFDAJS-Sin 1215.09 B FCFS-FFDAJS-Sin 747.91 B
EDD-FFDAJS-Inc 2717.63 C EDD-FFDAJS-Inc 1358.77 BC FCFS-FFDn-Inc 804.45 B
FCFS-FFDn-Inc 3423.20 CD EDD-FFDAJS-Sin 1500.15 BC FCFS-FFDn-Sin 843.35 B
FCFS-FFDn-Sin 3646.60 D FCFS-FFDn-Sin 1709.60 C EDD-FFDAJS-Sin 938.40 B
13
表五 第 II 種加工時間模式下 TWT 績效比較表(N=10)
Factor Level Combination TWT Rank Level Combination TWT Rank Level Combination TWT Rank
Order Size (5,*,*,*,*) GA 5.09 A (7,*,*,*,*) GA 5.09 A
EDD-FFDAJS-Inc 1209.52 B FCFS-FFDAJS-Inc 738.35 B
EDD-FFDAJS-Sin 1224.99 B EDD-FFDAJS-Inc 871.39 BC
FCFS-FFDAJS-Sin 1227.23 B FCFS-FFDAJS-Sin 991.70 C
FCFS-FFDAJS-Inc 1235.98 B EDD-FFDAJS-Sin 1033.72 C
FCFS-FFDn-Sin 2053.15 C FCFS-FFDn-Inc 1114.09 C
FOUP capacity (*,1,*,*,*) GA 5.94 A (*,2,*,*,*) GA 4.23 A
FCFS-FFDAJS-Inc 478.70 B EDD-FFDAJS-Sin 1296.60 B
EDD-FFDAJS-Inc 601.32 BC FCFS-FFDAJS-Sin 1375.16 B
FCFS-FFDn-Inc 765.94 CD EDD-FFDAJS-Inc 1479.60 B
FCFS-FFDAJS-Sin 843.77 CD FCFS-FFDAJS-Inc 1495.63 B
FCFS-FFDn-Sin 872.61 D FCFS-FFDn-Sin 2391.74 C
Order ready time (*,*,0.5,*,*) GA 5.91 A (*,*,1.0,*,*) GA 4.27 A
FCFS-FFDAJS-Inc 463.33 B EDD-FFDAJS-Sin 1372.88 B
EDD-FFDAJS-Inc 629.67 BC FCFS-FFDAJS-Sin 1427.05 B
FCFS-FFDAJS-Sin 791.88 CD EDD-FFDAJS-Inc 1451.25 B
EDD-FFDAJS-Sin 885.84 D FCFS-FFDAJS-Inc 1511.00 B
FCFS-FFDn-Inc 893.22 D FCFS-FFDn-Sin 2286.78 C
Batch size (*,*,*,*,2) GA 4.70 A (*,*,*,*,3) GA 5.48 A
FCFS-FFDAJS-Inc 981.62 B FCFS-FFDAJS-Inc 992.70 B
EDD-FFDAJS-Inc 1013.87 B EDD-FFDAJS-Inc 1067.04 B
FCFS-FFDAJS-Sin 1109.46 B FCFS-FFDAJS-Sin 1109.46 B
EDD-FFDAJS-Sin 1129.36 B EDD-FFDAJS-Sin 1129.36 B
FCFS-FFDn-Sin 1632.17 C FCFS-FFDn-Sin 1632.17 C
Due date tightness (*,*,*,0.25,*) GA 14.73 A (*,*,*,0.50,*) GA 0.53 A (*,*,*,0.75,*) GA 0.00 A
FCFS-FFDAJS-Inc 1692.74 B EDD-FFDAJS-Inc 728.52 B FCFS-FFDAJS-Inc 456.25 B
EDD-FFDAJS-Inc 1842.60 BC EDD-FFDAJS-Sin 787.31 B EDD-FFDAJS-Sin 485.16 B
FCFS-FFDAJS-Sin 1944.51 BC FCFS-FFDAJS-Inc 812.51 B FCFS-FFDAJS-Sin 536.00 B
EDD-FFDAJS-Sin 2115.60 C FCFS-FFDAJS-Sin 847.88 B EDD-FFDAJS-Inc 550.26 B
FCFS-FFDn-Inc 2784.08 D FCFS-FFDn-Sin 1263.25 C FCFS-FFDn-Sin 838.87 C
15
表七 第 II 種加工時間模式下 TWT 績效比較表(N=30)
Factor Level Combination TWT Rank Level Combination TWT Rank Level Combination TWT Rank
Order Size (5,*,*,*,*) GA 3.83 A (7,*,*,*,*) GA 3.79 A
FCFS-FFDAJS-Sin 1625.55 B FCFS-FFDAJS-Inc 1488.30 B
FCFS-FFDAJS-Inc 1816.94 C FCFS-FFDn-Inc 1566.24 B
FCFS-FFDn-Sin 2334.36 D FCFS-FFDAJS-Sin 1688.51 B
FCFS-FFDn-Inc 2639.58 E FCFS-FFDn-Sin 1703.37 B
EDD-FFDAJS-Sin 2858.08 E EDD-FFDAJS-Inc 2063.07 B
FOUP capacity (*,1,*,*,*) GA 3.73 A (*,2,*,*,*) GA 3.88 A
FCFS-FFDAJS-Inc 716.43 B FCFS-FFDAJS-Sin 2167.34 B
FCFS-FFDn-Inc 891.70 BC FCFS-FFDAJS-Inc 2588.80 C
FCFS-FFDAJS-Sin 1146.72 C FCFS-FFDn-Sin 2865.38 CD
FCFS-FFDn-Sin 1172.35 C FCFS-FFDn-Inc 3314.12 D
EDD-FFDAJS-Inc 1322.30 C EDD-FFDAJS-Sin 3419.38 D
Order ready time (*,*,0.5,*,*) GA 5.02 A (*,*,1.0,*,*) GA 2.60 A
FCFS-FFDAJS-Inc 737.44 B FCFS-FFDAJS-Sin 2152.21 B
FCFS-FFDn-Inc 1051.11 C FCFS-FFDAJS-Inc 2567.79 C
FCFS-FFDAJS-Sin 1161.85 CD FCFS-FFDn-Sin 2705.55 C
FCFS-FFDn-Sin 1332.18 DE EDD-FFDAJS-Sin 3029.16 CD
EDD-FFDAJS-Inc 1737.96 E FCFS-FFDn-Inc 3154.71 D
Batch size (*,*,*,*,2) GA 3.95 A (*,*,*,*,3) GA 3.67 A
FCFS-FFDAJS-Inc 1622.86 B FCFS-FFDAJS-Sin 1657.03 B
FCFS-FFDAJS-Sin 1657.03 BC FCFS-FFDAJS-Inc 1682.37 B
FCFS-FFDn-Sin 2018.87 BCD FCFS-FFDn-Sin 2018.87 BC
FCFS-FFDn-Inc 2059.63 CD FCFS-FFDn-Inc 2146.20 BC
EDD-FFDAJS-Inc 2561.10 D EDD-FFDAJS-Sin 2565.73 C
Due date tightness (*,*,*,0.25,*) GA 9.17 A (*,*,*,0.50,*) GA 2.25 A (*,*,*,0.75,*) GA 0.00 A
FCFS-FFDAJS-Inc 2523.35 B FCFS-FFDAJS-Sin 1697.44 B FCFS-FFDAJS-Inc 423.70 B
FCFS-FFDAJS-Sin 2646.73 BC FCFS-FFDn-Sin 1820.57 B FCFS-FFDAJS-Sin 626.92 BC
EDD-FFDAJS-Inc 3155.24 BCD FCFS-FFDAJS-Inc 2010.80 BC FCFS-FFDn-Inc 878.47 CD
FCFS-FFDn-Inc 3281.20 CD FCFS-FFDn-Inc 2149.06 BC FCFS-FFDn-Sin 935.41 D
FCFS-FFDn-Sin 3300.62 D EDD-FFDAJS-Sin 2604.23 C EDD-FFDAJS-Sin 1581.66 E
17
[13] Qu, P. and Mason, S. J., 2005. Metaheuristic scheduling of 300-mm lots containing multiple orders.
IEEE Transactions on Semiconductor Manufacturing, 18 (4), 633-643.
[14] Qu, P., 2004. The multiple orders per job scheduling problems. Ph.D. dissertation, Univ. Arkansas,
Fayetteville, AR.
[15] Tanrisever, F., Kutanoglu, E. and Mason, S. J., 2004. Forming and scheduling jobs from multiple orders
with different attributes: a computational study of special cases. Proceedings of 13th Industrial
Engineering Research Conference, IIE, Houston, TX.
[16] Tasgetiren, M. F., Pan, Q.-K. and Liang Y.-C., 2009. A discrete differential evolution algorithm for the
single machine total weighted tardiness problem with sequence dependent setup times, Computers &
Operations Research, 36 (6), 1900-1915.
6. 計畫成果
本計畫已產出一篇 SCI 期刊論文以及一篇國際研討會論文，論文資訊如下所示：
 C.-H. Liu, A genetic algorithm based approach for scheduling of jobs containing multiple orders in a
three-machine flowshop, International Journal of Production Research. (SCI) (Accepted)
 C.-H. Liu, T.-L. Wu and P.-S. Lin, 2010, A hybrid genetic algorithm-based approach to solve parallel
machine scheduling with job delivery coordination, Proceedings of the International MultiConference of
Engineers and Computer Scientists, March 17-19, Hong Kong, vol. 3, pp. pp. 1674-1678. (ISBN:
978-988-18210-5-8)
19
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限）
在最近十年內半導體製造業快速發展，各家廠商為了提高企業競爭力，無不
針對其製程與相關生產設備進行提昇。因此，現今的矽晶圓（wafer）的大小
已由 200-mm（8 吋）進展至 300-mm（12 吋）。每一片 300-mm 晶圓（wafer）
內所包含的晶片（Integrated Circuit, IC）數量比起 200-mm 晶圓片多了約
125%。然而隨著晶圓片面積的增加，滿載的晶舟（通常內含 25 片晶圓）重
量亦相對地增加至約 30 磅，從人因工程的角度已不適合透過人工進行搬運。
此外，隨著單一晶圓內包含的晶片數量增加，顧客的 IC 需求往往不會超過一
個晶舟（Front Opening Unified Pod, FOUP）可容納的晶片數量。此時若一個
晶舟內僅包含單一顧客的需求，雖然比較能掌握生產進度，但是卻會增加晶
舟的購置成本與維護成本，更嚴重的是會使得物料搬運系統成為系統中的瓶
頸。因此，實務上的作法會希望將可同時加工的顧客訂單放置於同一晶舟內，
用以提高系統運作的效率。要如何在不影響顧客滿意度的條件下將不同顧客
的需求放置在同一晶舟內進行生產是 12 吋廠中亟待解決之問題。本研究計畫
將針對此一實務議題進行研究，提出一以 GA 為基礎之演算法，不只能在可
接受的合理時間內求解晶舟配置問題，並同時求解晶舟排程問題，能讓顧客
訂單準時達交並且提高顧客滿意度。
1國科會補助專題研究計畫項下出席國際學術會議心得報告
日期：99 年 03 月 20 日
一、參加會議經過
本人於 3/15 搭乘華航班機前往香港。由於華航班機是在晚上七點起飛，因此離開香港海關時
已是晚上九點。下機後感覺香港真是一個國際化的城市，許多外國人前往香港購物、旅遊或是辦
公。而且香港人蠻多會講英語，那怕是五六十歲的老先生老太太。香港海關辦事效率還不錯，因
為從在海關等待查驗證照到領行李所花費的時間不超過三十分鐘。離開機場後，隨後再花三十分
鐘搭乘機場捷運前往位於市區內住宿飯店。
由於此次所參加的研討會規模較大，一共有 13 個研討會在同一地點同時舉辦。為了確保隔天
參加研討會的順利。因此，3/16 上午先行前往研討會所舉辦的地點－The Royal Garden Hotel 勘察
環境。下午的時間就與其他共同參與研討會之作者同遊香港市區。
3/17 上午前往研討會舉辦地點－The Royal Garden Hotel 辦理報到。由於剛好有 13 個研討會
同時舉辦，所以感覺研討會接待處有點小且擁擠。完成報到後，領取研討會所提供之相關資訊與
禮品，其中包括一個旅行背包、一本論文集（紙本）、一個識別證、一本會議手冊、兩片論文集光
計畫編號 NSC 98-2221-E-020-037
計畫名稱 啟發式演算法應用於 12 吋晶圓廠晶舟配置與排程之研究
出國人員
姓名
劉正祥
服務機構
及職稱
國立屏東科技大學 工業管理系
助理教授
會議時間
99 年 03 月 17 日至
99 年 03 月 19 日
會議地點 香港
會議名稱
2010 年 IAENG 國際工業工程研討會
The 2010 IAENG International Conference on Industrial Engineering
發表論文
題目
以基因演算法為基之混合解法求解平行機台之協同式排程問題
A hybrid genetic algorithm-based approach to solve parallel machine
scheduling with job delivery coordination
 
 
 
  
Abstract—This paper considers a problem in which orders 
are processed by either one of two parallel machines and 
delivered by a single delivery truck to one customer area. 
Coordination among production stage and distribution stage in 
the supply chain to achieve ideal overall system performance 
has become more practical and has received a lot of attention 
from both industry practitioners and academic researchers. 
The coordinated scheduling problem of production and 
distribution operations deals with scheduling orders on the two 
identical parallel machines and grouping the completed orders 
into batches for delivery. To solve this complex problem, a 
regular genetic algorithm (GA) and an efficient approach which 
is based on a hybrid of GA and a parallel scheduling procedure 
(PSP) and is called hybrid GA (HGA), are proposed. 
Experimental results demonstrate that the regular GA and 
HGA perform very well with respect to the objective function. 
Besides, the HGA can find even or better solution in a shorter 
period of time than the regular GA. Thus, the proposed HGA 
should be the scheduling approach of choice. 
 
Index Terms—parallel machines scheduling, genetic 
algorithms, production-distribution coordination.  
 
I. INTRODUCTION 
 There are many production systems with transportation 
operations where finished jobs are delivered to customers by 
transporters. Ideally, each customer wishes to receive her 
orders from the supplier as early as possible. However, since 
consolidation of shipments results in substantial cost/time 
saving in transportation and handling, the supplier wishes to 
consolidate the order delivery as much as possible to 
minimize the distribution cost. Delivery consolidation 
implies that some completed orders may have to wait for 
other orders to be completed so that they can be delivered in 
the same shipment. Coordinating both the production stage 
and distribution stage in the supply chain in order to achieve 
an ideal overall system performance has become more 
 
Manuscript received January 11, 2010. This work was supported by 
National Science Council of Taiwan under grant no. NSC 
98-2221-E-020-037. 
Cheng-Hsiang Liu is an Assistant Professor of Department of Industrial 
Management at the National Pingtung University of Science & Technology 
in Taiwan. He received his M.S. and Ph.D. degrees from the National Chiao 
Tung University (NCTU) in Taiwan, both in industrial engineering and 
management. His research areas include data mining, decision support 
systems, and operation scheduling and production control. (Tel: 
886-8-7703202, ext. 7717; E-mail: chliu.uw@gmail.com).  
Tzu-Ling Wu and Pei-Shiun Lin are undergraduate students in the 
Department of Industrial Management at the National Pingtung University of 
Science & Technology. 
practicable and has received a lot of attention from both 
industry practitioners and academic researchers [5][6]. The 
problem we consider in this paper is to find a joint schedule 
for order production and finished goods delivery so that the 
makespan of a schedule is minimized. For the convenience of 
the analysis, we define the makespan of a schedule, denoted 
by Cmax, as the time when the delivery truck finishes 
delivering the last batch to the customer(s) and returns to the 
production system. Lee and Chen [4] studied this class of 
scheduling problems by analyzing their complexities. They 
showed that many of the problems were computationally 
difficult and they proposed polynomial or 
pseudo-polynomial algorithms for some of these problems. 
This paper examines a simplified version of the problem in 
which each order is processed by either one of two parallel 
machines and delivered by a single delivery truck to 
customers located in close proximity to each other (defined 
as a one customer area). Wang and Cheng [9] have studied 
the parallel machine scheduling with batch delivery costs. 
They showed that the problem of minimizing the sum of the 
total flow time and delivery cost is NP-complete in the strong 
sense, and they provided a dynamic programming algorithm 
to solve the problem. The scheduling problem was extended 
by Chang and Lee [1] who considered the situation where 
each job might occupy a different amount of physical space 
in a delivery truck. They proved that the problem is NP-hard 
in the strong sense, and they presented a polynomial time 
heuristic 2 (H2) with a worst case ratio of 2. Chen and 
Vairaktarakis [2] considered a two-stage scheduling problem 
in which the first stage is the manufacturing facility and the 
second stage is the delivery to the customers. There were two 
machine configurations in the processing facility – single 
machine and parallel machines. Their objective function was 
a combination of customer service level and total distribution 
cost. For each problem they investigated they provided an 
algorithm, or a proof of intractability accompanied by a 
heuristic algorithm based on dynamic programming 
techniques.  
Based on the above descriptions, previous related studies 
focused on developing optimization-based solutions. 
Although mathematical models have been used to determine 
coordinated schedules, managers often prefer to use simpler 
approaches. The H2 proposed by Chang and Lee [1] can 
produce “good” solutions much faster than the optimization 
model, but the performance is very sensitive to problem 
instance variability. As such, there is a need to develop an 
efficient approach to find an acceptable solution in an 
A Hybrid Genetic Algorithm-based Approach to 
Solve Parallel Machine Scheduling with Job 
Delivery Coordination 
Cheng-Hsiang Liu, Tzu-Ling Wu and Pei-Shiun Lin 
 
 
 
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
321
321
131211
NNN
iii
YYY
YYY
YYY
###
###
 
Figure 1. The proposed chromosome structure 
 
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⇒⇒
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
102
003
101
015
004
103
112
101
015
004
103
112
115
011
004
222
)()(
114
002
115
011
113
114
002
115
011
113
114
002
101
015
113
111
OffspringOffspringParent
ba
OffspringOffspringParent
 
Figure 2. (a) crossover and (b) mutation operation of the 
proposed GA. 
 
Since the genes used in both crossover and mutation 
operations are randomly generated, the feasibility of the 
resulting offspring is not known in advance. It is evident that 
both crossover and mutation operations do not always 
produce a feasible solution. Hence, an additional feasibility 
checking routine is performed after an offspring is generated. 
This correction mechanism is designed to move orders from 
the over-capacity batches to other batches with surplus 
capacity. 
IV. HYBRID GENETIC ALGORITHM (HGA) 
As scheduling problems with delivery coordination 
involves three decisions: order sequence, order-to-machine 
assignment and order-to-batch assignment, the results 
representation in Figure 1 cannot be simplified until one of 
the three decisions is known. This paper incorporates a 
heuristic to assign orders to one of two parallel machines, so 
as to reduce the results representation in Figure 1 to N×2 
matrix. Assume that order-to-machine assignment is 
performed in a “black box” that can always find an 
assignment solution with the minimum completion time of 
last batch on the machines for any sequence of orders. In this 
case, feeding the resulting order sequence and order-to-batch 
assignment produced by crossover and/or mutation 
operations to the black box would clearly enhance the 
efficiency of the regular GA approach.  
Figure 3 shows the mechanism of the proposed Hybrid 
Genetic Algorithm (HGA). In HGA, a robust evolutionary 
algorithm, GA, is proposed to solve SP1: determination of 
order sequence and order-to-batch assignment; and a parallel 
scheduling procedure (PSP), which can perform quite well in 
minimizing the maximum of the sum of processing time on 
each machine, is proposed to solve SP2: solving the parallel 
machines scheduling problem. Figure 4 describes the 
corresponding results representation used in HGA for a five 
order example. From Figure 4, order 3 is in batch 1; and 
orders 1 and 5 are grouped into batch 2; and orders 4 and 2 
are included in batch 3. All jobs in batch i precede each of 
those in batch i+1 on the machines. Same crossover and 
mutation operations described in section 3 are also used in 
HGA. Again, the correction mechanism used in original GA 
is also applied to HGA for moving orders from the 
over-capacity batches to other batches with surplus capacity. 
 
 
Figure 3. The mechanism of HGA 
 
 
Figure 4. The chromosome structure of the proposed HGA 
 
After the crossover and/or mutation operation, the 
resulting decisions of order sequence and order-to-batch 
(chromosome) are fed into the PSP, which can assign orders 
to one of two parallel machines. The PSP we proposed is 
based on the work of Sule [8]. Division of orders among two 
identical machines to achieve minimum completion time of 
the last batch on the machines is the objective of PSP. The 
PSP describes the polynomial time heuristic for the parallel 
machines scheduling problem.  
 
Parallel Scheduling Procedure (PSP) 
Step 1: The lower bound of the minimum achievable 
makespan is given by the sum of processing times 
divided by the number of available parallel 
processors. 
Step  2:  Form a permutation π in which all orders in Set Bi 
precede each of those in Set Bi+1; the orders in each 
set are sequenced in non-increasing order of pi.  
Step  3:   Start allocating the orders to one machine until one 
of the following happens: 
 
 
 
HGA and GA was compared to the algorithm H2 at different 
problem sizes, transportation time on the delivery truck, and 
the capacity of the delivery truck. From the experimental 
results, both HGA and GA are superior to the algorithm H2 in 
terms of the solution quality. The HGA performs better than 
the GA significantly when the transportation is a scarce 
resource in the system (i.e., as the T increases and/or Z 
decreases). Otherwise, there is no significant difference 
between HGA and GA. Although both GA and HGA perform 
comparably as the ratio Z decreases and/or T increases, HGA 
can find even or better solution in a shorter period of time 
than the regular GA. Thus, the proposed HGA should be the 
scheduling approach of choice. 
Regarding to the future research work, the author would 
like to suggest the following issue: the first will investigate 
extending the GA solution approaches to more complicated 
machine environments. Another future research may 
consider problems with multiple delivery trucks. Moreover, 
an obvious area for future research is to solve the scheduling 
problem of a production-distribution system where more than 
one customer areas are involved in system. Such a problem 
would include routing decisions for each shipment. New 
algorithms/heuristics would be needed to solve such a 
problem. 
 
Table 1. Makespan average for experiments when Z=20 
N T Approach Cmax Imporved % 
Converged 
Generatio
n 
30 15 H2 126.1  --  
  HGA 118.2  6.26  168 
   GA 119.9  4.92  182 
 10 H2 100.2  --  
  HGA 89.4  10.78  57 
   GA 90.4  9.78  140 
 5 H2 87.5  --  
  HGA 77.2  11.77  5 
    GA 77.2  11.77  29 
20 15 H2 92.0  --  
  HGA 85.0  7.61  93 
   GA 85.8  6.74  116 
 10 H2 72.4  --  
  HGA 63.4  12.43  63 
   GA 63.8  11.88  169 
 5 H2 66.7  --  
  HGA 58.7  11.99  4 
    GA 58.7  11.99  11 
10 15 H2 58.2  --  
  HGA 48.8  16.15  53 
   GA 49.4  15.12  84 
 10 H2 43.1  --  
  HGA 36.7  14.85  14 
   GA 37.3  13.46  34 
 5 H2 33.1  --  
  HGA 27.2  17.82  3 
    GA 27.3  17.52  62 
 
 
Table 2. Makespan average for experiments when T=10 
N Z Approach Cmax Imporved % 
Converged 
Generatio
n
30 15 H2 109.8 -- 
  HGA 103.7 5.56 234
  GA 107.7 1.91 231
 20 H2 100.2 -- 
  HGA 89.4 10.78 57
  GA 90.4 9.78 140
 25 H2 96.7 -- 
  HGA 84.7 12.41 16
  GA 84.8 12.31 111
20 15 H2 74.7 -- 
  HGA 70.7 5.35 126
  GA 72.0 3.61 192
 20 H2 72.4 -- 
  HGA 63.4 12.43 63
  GA 63.8 11.88 169
 25 H2 68.7 -- 
  HGA 59.6 13.25 7
  GA 59.6 13.25 35
10 15 H2 46.4 -- 
  HGA 40.5 12.72 27
  GA 41.4 10.78 23
 20 H2 43.1 -- 
  HGA 36.7 14.85 14
  GA 37.3 13.46 34
 25 H2 43.1 -- 
  HGA 33.7 21.81 6
  GA 34.0 21.11 10
REFERENCES 
[1] Y.-C. Chang, and C.-Y. Lee. (2004). Machine scheduling with job 
delivery coordination. European Journal of Operational Research. 158. 
pp. 470-487. 
[2] Z.-L. Chen, and G. L. Vairaktarakis. (2005). Integrated scheduling of 
production and distribution operations. Management Science. 51(4). pp. 
614-628. 
[3] J. Holland, Adaptation in natural and artificial systems. MI: The 
University of Michigan Press, 1975. 
[4] C.-Y. Lee, and Z.-L. Chen, (2001). Machine scheduling with 
transportation considerations. Journal of Scheduling. 4. pp. 3-24. 
[5] K.-P. Li, V. K. Ganesan, and A. I. Sivakumar. (2005). Synchronized 
scheduling of assembly and multi-destination air transportation in a 
consumer electronics supply chain. International Journal of 
Production Research. 43(13). pp. 2671-2685. 
[6] T.-F. Liang. (2008). Integrating production-transportation planning 
decision with fuzzy multiple goals in supply chains. International 
Journal of Production Research. 46(6). pp. 1477-1494. 
[7] P. Qu, and S. J. Mason. (2005). Metaheuristic scheduling of 300-mm 
lots containing multiple orders. IEEE Transactions on Semiconductor 
Manufacturing. 18(4). pp. 633-643. 
[8] D. R. Sule, Industrial scheduling. PWS publishing company, 1996, pp. 
81-82. 
[9] G. Wang, and T. C. E. Cheng. (2000). Parallel machine scheduling with 
batch delivery costs. International Journal of Production Economics. 
68. pp. 177-183. 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：劉正祥 計畫編號：98-2221-E-020-037- 
計畫名稱：啟發式演算法應用於 12 吋晶圓廠晶舟配置與排程之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備註（質化說明：
如 數 個 計 畫 共 同
成果、成果列為該
期 刊 之 封 面 故
事...等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100% 國科會結案報告(NSC 98-2221-E-020-037)
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100% 
兩位碩士班學生(許
正一, 陳宏吉)協助
計劃執行。 
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100% 
C.-H. Liu, A 
genetic algorithm 
based approach for 
scheduling of jobs 
containing 
multiple orders in 
a three-machine 
flowshop, 
International 
Journal of 
Production 
Research. (SCI) 
(Accepted) 
國外 論文著作 
研究報告/技術報告 0 0 100% 
篇 
 
研討會/工作坊 0  
電子報、網站 0  
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
此計劃已完成預定目標求解晶圓廠內所遭遇之實務問題(Multiple Orders per Job, 
MOJ)，並將計劃成果彙整後已發表一篇 SCI 期刊論文(IJPR)以及一篇國際研討會論文。 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
在最近十年內半導體製造業快速發展，各家廠商為了提高企業競爭力，無不針對其製程與
相關生產設備進行提昇。因此，現今的矽晶圓的大小已由 200-mm 進展至 300-mm。每一片
300-mm 晶圓內所包含的晶片數量比起 200-mm 晶圓片多了約 125%。然而隨著晶圓片面積的
增加，滿載的晶舟（通常內含 25 片晶圓）重量亦相對地增加至約 30 磅，從人因工程的角
度已不適合透過人工進行搬運。此外，隨著單一晶圓內包含的晶片數量增加，顧客的 IC
需求往往不會超過一個晶舟可容納的晶片數量。此時若一個晶舟內僅包含單一顧客的需
求，雖然比較能掌握生產進度，但是卻會增加晶舟的購置成本與維護成本，更嚴重的是會
使得物料搬運系統成為系統中的瓶頸。因此，實務上的作法會希望將可同時加工的顧客訂
單放置於同一晶舟內，用以提高系統運作的效率。要如何在不影響顧客滿意度的條件下將
不同顧客的需求放置在同一晶舟內進行生產是 12 吋廠中亟待解決之問題。本研究計畫將
針對此一實務議題進行研究，提出一以 GA 為基礎之演算法，不只能在可接受的合理時間
內求解晶舟配置問題，並同時求解晶舟排程問題，能讓顧客訂單準時達交並且提高顧客滿
意度。 
