三、計畫成果自評 
 
     本計畫主要是在樹狀異質網路 T = (V, E) 上尋找一個廣播中心 (broadcast center) 
以及一個廣播方法 (broadcast scheme)，使得將訊息從廣播中心傳給圖形上其他點的廣
播完成時間 (broadcast time) 為最小。目前已知最好的成果為 Koh 等人 [1] 所發表的
O(n log n) 演算法。其中，時間複雜度為 O(n log n) 主要的原因為演算法中需要排序這
一個程序。幸運的是我們在本計畫中，設計出一個 “不需要排序’’ 的線性時間演算法
來尋找廣播中心以及廣播方法以求得最短廣播完成時間。此成果已發表於 
COCOON2010 這一個國際會議  [2]。此外，我們很榮幸的被邀請將結果轉投於
Algorithmica  期刊 [3]。 
 
1. J.-m. Koh and D.-w. Tcha. Information dissemination in trees with nonuniform edge 
transmission times. IEEE Trans. Comput., 40(10):1174–1177, 1991. 
2. Yu-Hsuan Su, Ching-Chi Lin and D. T. Lee, Broadcasting in Heterogeneous Tree 
Networks, Proceedings of the 16th Annual International Computing and 
Combinatorics Conference (COCOON2010), Nha Trang, Vietnam, July 19 – 21, 2010, 
LNCS 6196, 368-377. 
3. Yu-Hsuan Su, Ching-Chi Lin and D. T. Lee, Broadcasting in Heterogeneous Tree 
Networks, Algorithmica, submitted. 
Broadcasting in Heterogeneous Tree Networks 369
network T = (V,E), where the weight w(u, v) of each edge u, v ∈ E(G), denotes
the transmission time required. The broadcasting problem has been extensively
studied for several decades [1, 6–9, 11–13] due to the increasing demands of het-
erogeneous network of workstations [7, 9]. The broadcasting problem is to ﬁnd
a broadcast center such that the broadcasting time from the broadcast center
to all vertices in T is minimized. We consider the problem following the postal
model [1–4, 9] as described below.
The postal model makes distinction between connection time α and transmis-
sion time β, where α > 0 is assumed to be a constant and β ≥ 0 varies from edge
to edge. More speciﬁcally, the postal model assumes that the sender requires α
time to set up a connection. After the sender sets up the connection, the sender
is allowed to set up another connection to the next receiver while the sender is
still transmitting the messages to the current receiver. For example, the sender v
ﬁrst sets up the connection with the receiver u1 in α time, and then v can set up
another connection to the next receiver u2 while still transmitting the messages
to u1. The message transmission between two vertices is referred as a “call”. A
sender can only set up one connection to make a call to a receiver per α time and
a sender can only transmit the messages to adjacent vertices. A call is said to
be completed only after the sender completes transmitting the messages to the
receiver. That is, if the transmission time β between the sender v and receiver
u is w(u, v), and the receiver u is the ith vertex called by the sender, then the
call from v to u will be completed after αi+w(u, v) time. The receiver u cannot
forward the messages until the sender completes the transmission.
In contrast to the postal model is the telephone model, in which the sender is
allowed to set up another connection to the next receiver only after completing
the transmission of messages to the current receiver. That is, only after the
sender completes the transmission, can the sender set up another connection to
the next receiver. For example, the sender v ﬁrst sets up a connection with the
receiver u1 after α time, then the sender v can only set up another connection to
the next receiver u2 after α + w(u1, v) time. For both the postal and telephone
models, the receiver cannot forward the messages until the receiver ﬁnishes the
receipt of the messages from the sender. Moreover, we assume that the message
transmission between two adjacent vertices is full-duplex, i.e., the sender and
receiver can exchange the messages between them simultaneously.
Some notations are introduced in order to give a formal deﬁnition of the broad-
casting problem. Given a weighted tree T = (V,E), the broadcasting time of v,
denoted as b(v, T ), is the minimum time required to broadcast a message from v
to all vertices in T . The broadcasting time of T , denoted as b(T ), is the minimum
broadcasting time of any vertex v ∈ V (T ), i.e., b(T ) = min{b(v, T )| v ∈ V (T )}.
The broadcast center BC(T ) of T is the set of vertices with the minimum broad-
casting time, i.e., BC(T ) = {v | v ∈ V (T ), b(v, T ) = b(T )}.
Problem Definition: Given a weighted tree T = (V,E) in which the weight
w(u, v) ≥ 0 of an edge u, v represents the transmission time between them,
the broadcasting problem is to compute the set of broadcast centers BC(T )
Broadcasting in Heterogeneous Tree Networks 371
For determining the broadcast centers BC(T ) in T , Slater et al. [13] use
a bottom-up approach to iteratively update the labels of vertices and remove
leaf nodes with the smallest label. Since the edges are unweighted, the value of
labels are integers in {0, . . . , n−1}. They exploit this fact to create a useful data
structure to avoid the use of a priority queue and a sorting procedure. Since the
labels are real numbers in our problem, it is not clear how to avoid the use of
priority queue, which takes O(log n) time per operation, if one needs to select a
vertex with the smallest label. However, we prove in Lemma 4 that it is suﬃcient
to select between any two labeled vertices the one with the smaller label. With
this new observation, we can perform this task in O(n) time. As for update of
labels of vertices in T , we propose a brand-new non-sorting procedure, and show
in Theorem 1 its details.
We summarize our contributions as follows.
– The set of broadcast centers BC(T ) can be computed and the broadcasting
time b(T ) can be determined in O(n) time.
– An optimal sequence of calls by which the broadcast center broadcasts to all
vertices in T can be determined in O(n) time.
– Given a vertex v ∈ V (T ), the broadcasting time b(v, T ) and an optimal
sequence of calls from v to all vertices in T can be determined in O(n) time.
1.3 Organization
The rest of the paper is organized as follows. Section 2 describes the algorithm
BROADCAST which computes the set of broadcast centers BC(T ) and deter-
mines the broadcasting time b(T ) following the postal model. In Section 3, we
provide the correctness proof and timing analysis of the algorithm. Finally, we
give concluding remarks and suggest some direction for future work in Section 4.
2 Algorithm BROADCAST
The algorithm adopts a greedy strategy to process the vertices in T in a bottom-
up manner. For an edge u, v in T , the removal of this edge will result in two
subtrees, each of which contains v and u respectively. The subtree of T containing
v is denoted as T (v, u), and the subtree of T containing u is denoted as T (u, v).
Recall that b(v, T ) denotes the minimum time required to broadcast a message
from v to all vertices in T . Suppose that u1, u2, . . . , uk are the neighbors of
v in T such that b(u1, T (u1, v)) + w(u1, v) ≥ b(u2, T (u2, v)) + w(u2, v) ≥ . . . ≥
b(uk, T (uk, v))+w(uk, v). If we want to broadcast messages from v to all vertices
in T , it is not diﬃcult to see that an optimal sequence of calls from v to its
neighbors would be ordered as u1, u2, ..., uk. Hence, the broadcasting time from
v to all vertices in T is b(v, T ) = max{b(ui, T (ui, v)) +w(ui, v) +αi| 1 ≤ i ≤ k}.
Based on the above observation, the concept of our algorithm BROADCAST
is as below. The algorithm initially assigns a label t(u) = 0 to each leaf node
u. It then removes a leaf u in the current tree T iteratively and assigns a label
Broadcasting in Heterogeneous Tree Networks 373
3 Correctness and Complexity Analysis
Let v be an arbitrary vertex in T and u1, ..., uk be the neighbors of v. Let
T¯ =
⋃
1≤i≤k{(v, ui)+T (ui, v)} be a rooted tree of T with v as the root, and the
neighbors of v are ordered so that b(ui, T (ui, v))+w(ui, v) ≥ b(ui+1, T (ui+1, v))+
w(ui+1, v) for 1 ≤ i ≤ k − 1.
Intuitively, in order to shorten the broadcasting time from v to all vertices
in T¯ , we will transmit the message to u1 ﬁrst, then u2, u3, and so on. The
following lemma shows that u1, ..., uk is in fact an optimal sequence of calls to
broadcast messages from v to its neighboring vertices in T¯ . Then, it follows
that the minimum time required to broadcast from v to all vertices in T¯ is
b(v, T¯ ) = max{b(ui, T (ui, v)) + w(ui, v) + αi | 1 ≤ i ≤ k}.
Lemma 1. Let v be an arbitrary vertex in T and u1, ..., uk be the neighbors of v.
Let T¯ =
⋃
1≤i≤k{(v, ui)+T (ui, v)} be a rooted tree of T with v as the root, and the
neighbors of v are ordered so that b(ui, T (ui, v))+w(ui, v) ≥ b(ui+1, T (ui+1, v))+
w(ui+1, v) for 1 ≤ i ≤ k − 1. Then, u1, u2, . . . , uk is an optimal sequence of
calls to broadcast messages from v to neighboring vertices in T¯ . Consequently,
b(v, T¯ ) = max{b(ui, T (ui, v)) + w(ui, v) + αi | 1 ≤ i ≤ k}.
Then we show an important result, on which the correctness proof of our algo-
rithm is based, and also some useful properties for ﬁnding a broadcast center.
Lemma 2. For each vertex v in T we have t(v) = b(v, T (v, v′)).
Proof. Let v1, v2, . . . , vn be the elimination order of vertices in T such that vi
is removed from T ′ before vj if i < j. We prove the statement by induction on
the number of vertices. Let vertex v′1 be the neighbor of v1 on the path from v1
to κ = vn. Clearly, v1 is a leaf in T and so we have t(v1) = b(v1, T (v1, v′1)) = 0.
Suppose that the statement holds for i = k. We consider i = k + 1 below.
We ﬁrst consider the case when vk+1 is a leaf in T . Clearly, t(vk+1) =
b(vk+1, T (vk+1, v′k+1)) = 0, where v
′
k+1 is the neighbor of vk+1 on the path
from vk+1 to κ. Next, we consider the case when vk+1 is an internal vertex in
T . Suppose that v′k+1, u1, ..., u are the neighbors of vk+1 in T , and without loss
of generality, let we assume that t(ui) + w(ui, v) ≥ t(ui+1) + w(ui+1, v), for
i = 1, ..., − 1. Notice that ui ∈ {v1, ..., vk} for 1 ≤ i ≤ . By induction hypoth-
esis, we have t(ui) = b(ui, T (ui, vk+1)) for 1 ≤ i ≤ . Therefore, by Lemma 1, it
holds that b(vk+1, T (vk+1, v′k+1)) = max{t(ui) + w(ui, vk+1) + αi | 1 ≤ i ≤ }.
Meanwhile, according to the execution of Step 7 of the algorithm BROADCAST,
we have t(vk+1) = max{t(ui) + w(ui, vk+1) + αi | 1 ≤ i ≤ }. It follows that
t(vk+1) = b(vk+1, T (vk+1, v′k+1)).
Lemma 3. If b(x1, T (x1, x2)) ≤ b(x2, T (x2, x1)) with x1, x2 ∈ E(T ), then the
following two statements hold :
1. b(x1, T ) = α + w(x1, x2) + b(x2, T (x2, x1)); and
2. b(x2, T ) ≤ b(x1, T ).
Broadcasting in Heterogeneous Tree Networks 375
Theorem 1. Given a weighted tree T (V,E), the algorithm BROADCAST com-
putes the set of broadcast centers and determines the broadcasting time b(T ) in
O(n) time.
Proof. Combining Lemmas 4 to 7, we obtain the correctness proof of the algo-
rithm. In the following, we will show that the algorithm can be implemented in
O(n) time. We ﬁrst observe that Steps 1 and 2 take O(n) time. For the while
loop, there is an intuitive implementation which takes O(k log k) time to sort the
values t(u1)+w(u1, v), t(u2)+w(u2, v), . . . , t(uk)+w(uk, v) for each vertex v in
T . However, we can see that one vertex is removed from T in each iteration of
the while loop. Therefore, if Step 7 takes O(k) time to assign the label t(v) for
each vertex v in T , then the while loop can also be completed in O(n) time. In
the following, we introduce a useful data structure which enables us to compute
labels for n vertices in O(n) time without sorting.
Suppose that u1, u2, . . . , uk are the neighbors of v in T such that t(u1) +
w(u1, v) ≥ t(u2) + w(u2, v) ≥ . . . ≥ t(uk) + w(uk, v). Note that k = |N(v)|. If
a vertex up satisﬁes t(u1) + w(u1, v) ≥ t(up) + w(up, v) + αk with k ≥ p, then
t(u1)+w(u1, v)+α > t(up)+w(up, v)+αp. Note that the vertex up would have
no inﬂuence on the label of v. Therefore, in order to determine t(v), we only need
to consider the neighbor ui of v such that t(ui)+w(ui, v) > t(u1)+w(u1, v)−αk.
Based on the above observation, we construct the following k linked lists.
For each list[i], with 0 ≤ i ≤ k − 1, the list[i] contains the vertices uj such
that αi ≤ (t(u1)+w(u1, v))− (t(uj)+w(uj , v)) < α(i+1). Note that the vertex
u1 with t(u1) + w(u1, v) = max{t(ui) + w(ui, v)} can be determined by simply
visiting the neighbors of v once. For each neighbor ui of v in N(v) − {u1}, if
t(ui)+w(ui, v) ≤ t(u1)+w(u1, v)−αk, then we discard it. Otherwise, we insert
the vertex into the front of its corresponding linked list. Therefore, it takes O(k)
time to construct these k linked lists.
We use num[i] to denote the number of vertices in the list[i] and let acc[i] =
∑i
j=0 num[j] for 0 ≤ i ≤ k − 1. Further, let ui∗ be the vertex in the list[i] such
that t(ui∗)+w(ui∗ , v) = min{t(uj)+w(uj , v) | uj belongs to the list[i]}. Clearly,
for 0 ≤ i ≤ k−1, the values num[i], acc[i], and the vertex ui∗ can be determined
in O(k) time. For any given vertices ux and uy belonging to the same linked list
with x < y, since y − x ≥ 1 and (t(ux) + w(ux, v))− (t(uy) + w(uy , v)) < α, we
have t(uy) + w(uy, v) + αy > t(ux) + w(ux, v) + αx. Therefore,
t(v) = max{t(ui) + w(ui, v) + αi | 1 ≤ i ≤ k}
= max{t(ui∗) + w(ui∗ , v) + αacc[i] | 0 ≤ i ≤ k − 1}.
So the label of v, t(v), can be determined in O(k) time. By the above labeling
method, the while loop can be completed in O(n) time for n vertices.
Next, we show that the smallest integer h such that t(uh)+w(uh, κ)+αh+α >
b(T ) can also be determined in O(n) time in Step 12. Let q be the smallest integer
such that t(uq∗) + w(uq∗ , κ) + αacc[q] + α > b(T ). Clearly, the list[q] contains
the vertex uh. We will show that either h = acc[q] or h = acc[q] − 1. For any
given vertices ux and uy belonging to the same linked list with y ≥ x + 2, since
Broadcasting in Heterogeneous Tree Networks 377
Below we present some open problems related to the broadcasting problem
in heterogeneous networks following the postal model, i.e., the broadcasting p-
center and the broadcasting p-median problems.
The broadcasting p-center problem is a generalization of the broadcasting
problem. In the broadcasting p-center problem, we want to locate p centers
on a network and partition the set of n vertices in p subsets, such that the
maximum communication time from the centers to the associated subsets of
vertices is minimized. On the other hand, in the broadcasting p-median problem,
instead of minimizing the maximum communication time, we minimize the sum
of communication times from the centers to the associated subsets of vertices.
References
1. Bar-Noy, A., Guha, S., Naor, J., Schieber, B.: Message multicasting in heteroge-
neous networks. SIAM J. Comput. 30(2), 347–358 (2000)
2. Bar-Noy, A., Kipnis, S.: Designing broadcasting algorithms in the postal model for
message-passing systems. Math. Systems Theory 27(5), 431–452 (1994)
3. Bar-Noy, A., Kipnis, S.: Multiple message broadcasting in the postal model. Net-
works 29(1), 1–10 (1997)
4. Elkin, M., Kortsarz, G.: An approximation algorithm for the directed telephone
multicast problem. Algorithmica 45(4), 569–583 (2006)
5. Farley, A.M.: Broadcast time in communication networks. SIAM J. Appl.
Math. 39(2), 385–390 (1980)
6. Hedetniemi, S.M., Hedetniemi, S.T., Liestman, A.L.: A survey of gossiping and
broadcasting in communication networks. Networks 18(4), 319–349 (1988)
7. Khuller, S., Kim, Y.-A.: Broadcasting in heterogeneous networks. Algorith-
mica 48(1), 1–21 (2007)
8. Khuller, S., Kim, Y.-A., Wan, Y.-C.: On generalized gossiping and broadcasting.
J. Algorithms 59(2), 81–106 (2006)
9. Khuller, S., Kim, Y.-A., Wan, Y.-C.: Broadcasting on networks of workstations.
Algorithmica 52(3), 1–21 (2008)
10. Koh, J.-M., Tcha, D.-W.: Information dissemination in trees with nonuniform edge
transmission times. IEEE Trans. Comput. 40(10), 1174–1177 (1991)
11. Lee, H.-M., Chang, G.J.: Set to set broadcasting in communication networks. Dis-
crete Appl. Math. 40(3), 411–421 (1992)
12. Richards, D., Liestman, A.L.: Generalizations of broadcasting and gossiping. Net-
works 18(2), 125–138 (1988)
13. Slater, P.J., Cockayne, E.J., Hedetniemi, S.T.: Information dissemination in trees.
SIAM J. Comput. 10(4), 692–701 (1981)
對於圖形上的每個邊 e  E，附予權重 w(e)，代表在端點間傳送訊息所需的時間，訊息從任
一點傳到另一點稱為一個通話 (a call)。在廣播的過程中，一個點在同一時間只能參與一個通話，
且只能與它圖形上相鄰的點通話。廣播中心在一般圖形上已經被證明是屬於 NP-complete 的問
題。廣播問題 (broadcast problem) 在特殊圖形樹 (tree) 上，已知最好的結果為 O(n log n)。我們設
計一個 “不需要排序’’ 的線性時間 (O(n)) 演算法來尋找廣播中心以及廣播方法以求得最短廣播完
成時間。 
這篇論文的完成，得感謝我的指導教授李德財博士以及林清池博士。李德財教授在演算法以
及計算幾何領域有很重要的貢獻。在李教授以及林教授的耐心指導之下，我學習到正確的研究方
法；由於他們的鼓勵，我才能孜孜不倦的專心致力於此研究主題。 
三、 建議 
非常感謝國科會對於論文被接受的研究團隊多加予鼓勵，讓台灣的研究人員有更廣的國際視
野，培養世界一流的資訊工程人才。出國開會除了可提高研究團隊在世界上的知名度外；也可增進
許多的學術交流。 
四、 攜回資料名稱及內容 
攜回由 Spring-Verlag 出版社的 Lecture Notes in Computer Science 系列。參加本次會議，除了
帶回會議各論文的論文集之外，還帶回來無限的研究動力，由與會者所發表各領域的豐碩成果，讓
人深深體會研究之路是寬廣的、是無止盡的。對於博士班研究生來說，能有機會與全世界各地的學
者一起討論彼此的成果，不僅可以增進專業的知識，更加能拓展寬廣的視野。參加國際性的會議會
讓視野開闊，也會了解國際間在學術上的競爭與交流，每一個與會人士都是有備而來，對於有興趣
的主題大家都不會輕易讓機會消失，非常踴躍而主動的討論，因此更顯得英文的聽說讀寫都相當重
要,演講的技巧也很重要，可以讓台下的聽眾容易有共鳴，親身參與會議更可以直接獲得與研究相
關的訊息和交流，以及意見的回饋。 
五、 其他 
以下四圖為參與會議的側照，與會人員皆熱烈參與討論。 
 
 
 
 
 
 
 
 
 
 
 
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
