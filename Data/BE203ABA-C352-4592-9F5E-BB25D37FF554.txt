 2 
高速公路行車助理視覺系統之研究發展 
Development of Driver-assistant Vision System for Highway 
計畫編號：NSC 97-2221-E-194-034 
執行期間：97 年 8 月 1日 至 98 年 10 月 31 日 
主持人：陳明揚 國立中正大學電機工程系所 
 
一、 中文摘要 
日前衛星定位裝置已被廣泛應用於車用
電子地圖，車用雷達也由前車(或障礙物)偵測
進而主動剎車減緩車速，但車用電腦視覺系統
以其多功能性作為輔助行車資訊及安全警戒
的功能仍有相當大的潛力，其能否在未來成為
車輛必備的裝備在於二者：可靠度與產品價
格。 
本研究計畫的目標就在研究設計一套車
用電腦視覺系統，可於高速公路偵測車道、前
方/側方車輛，用於輔助日夜間行車資訊及安
全的警戒。基於多年來的研究成果，我們發現
使用高性能 FPGA 是建構並行處理機系統很
好的材料，在有技巧的設計安排下，許多基本
的影像處理功能皆可以極少數 FPGA 電路得
以實現，而且是在高度並行處理的方式下運
作；而以 FPGA 晶片作為設計車用視覺系統並
行處理的核心，組裝實現容易，價格不高，配
上微處理機的少量協助，應可達到整體系統即
時高速的要求。 
 
英文摘要 
Recently, GPS has been widely used in the 
vehicle electronic mapping and positioning. The 
vehicle radar system can detect the front vehicle 
and also (in case of need) actively brakes to reduce 
the vehicle speed. Yet the vehicle computer vision 
system based on its multiple functions still has a 
great potential to provide the vehicle information 
and safety alert. Whether it will become the 
necessary equipment on vehicles depends on two 
factors: reliability and price. 
The goal of this research project is to 
investigate and design a vehicle vision system 
which can detect the vehicle lanes, the front/side 
vehicles and provide the safety alert throughout 
day and night while running on highways. Based 
on previous research results, we find that using the 
high-performance FPGA chip is a good material to 
construct parallel processing systems. Through 
ingenious arrangements, many basic image 
processing functions can be realized by small 
amount of FPGA circuits, and can perform under 
the highly parallel processing mechanism. While 
using FPGA chip as the core chip of the parallel 
processing, the vision system has the advantages 
of compactness, and the cost is not too high. With 
the help of few microprocessors, it should be able 
to accomplish its high-speed and real-time 
requirement. 
 
二、 計畫的緣由與目的 
我們的研究是基於自主導航車目前具有
的電腦視覺性能或可能發展的視覺功能，而以
FPGA晶片增快其速度，以便使得所研究的功能
不再是重要的速度影響因素。從這系統構成的
功能逐一的變成 FPGA 的精簡化與快速化，相
信自主導航車的性能將日趨完善，而終有達到
實用的那一天。 
 
 3 
p1(s1,w1,c1,sum1); 
p1(s1,w2,sum1,sum2); 
p1(s1,w3,sum2,sum3); 
p1(s2,w4,sum3,sum4); 
p1(s2,w5,sum4,sum5); 
p1(s2,w6,sum5,sum6); 
p1(s3,w7,sum6,sum7); 
p1(s3,w8,sum7,sum8); 
p1(s3,w9,sum8,sum9); 
endmodule 
 
module p1(is1,iw1,ic1,isum,iCLK_50); 
 input iCLK_50; 
 input[7:0]is1; 
 input[7:0]iw1; 
 input[15:0]ic1; 
 reg[15:0]isum; 
 reg[15:0]product1; 
 wire[15:0]temp1; 
 wire[15:0]tp1; 
 assign temp1=is1*iw1; 
 assign tp1=ic1+product1; 
always@(posedge iCLK_50) 
begin 
  product1<=temp1; 
  isum<=tp1;         
end  
endmodule 
 
本計畫的另一項重要成果是能偵測對稱
軸線，這對於在前方車輛的偵測與確定將大有
助益；這種運算看似簡單，但要細究之下，即
使要找出垂直對稱軸線也要消耗 O(n3)，此處
我們利用論文[2, 3]找出其並行處理的方法，並
且找到了如何在 FPGA 晶片上快速實現的方
式，於此只要 O(n2)即可，動作也非常簡單快
速。 
就我們的應用而言，相當於有數百個並行
一整列的 AND 閘執行著”中點”偵測的任務，
而隨後又有數百個對應的 OR 閘執行了論文[3]
所提到的 Latch 的作用。而隨著 S1 右移及 S2
左移的動作，對應邊緣點(edge point)也逐漸地
接近其中點，直到 S1 及 S2 都位移過半（AND
閘不再有 1 的輸出），此時這一列的偵測總算
結束。 
一列中點資料的獲取現分別存在 sout1 及
sout 中，sout1 所存代表了基數跟偶數的中點
（即尾數為 0.5 的位置）。接著我們就要使用
計數器來計數每一行的數目，因為就計數器
而言也要達到同樣快速的要求，我們採取一
次一位元但一整列的偵測，所以我們將計數
器分為 icn0, icn1, icn2….. icn6，而每個 icn 的
長度則為[179:0]，如此我們可就 180 個位元
就如同一個位元的操控。 
我們的作法就如程式所顯示的一樣，最初
的 sout 與 icn0 以 AND 閘產生 carry(car1)，然
後 icn0 與 sout 以 XOR 閘產生放入 icn0；如此
sout 與 icn0 二者有一為 0 或全為 0，都不會影
響下一個位元 icn1，只有當 carry(car1)等於 1
時才要考慮 icn1。同樣的道理應用到後面的位
元，只不過我們使用另一個 carry(car2)作為交
互使用的方便。 
 
module DE2_71(iCLK_50, count, position); 
 
output [6:0] count;  
output [7:0] position;  
input iCLK_50; 
integer i, j; 
 
reg [179:0] s1, s2, a, b, sout, sout1; 
reg [179:0]memb[119:0]; 
reg [179:0] icn0, icn1, icn2, icn3, icn4, icn5, icn6, 
car1, car2; 
reg [7:0] recd; 
 
assign 
count[6:0]={icn6[recd],icn5[recd],icn4[recd],icn
3[recd],icn2[recd],icn1[recd],icn0[recd]}; 
assign position=recd; 
 
always@(posedge iCLK_50) 
begin 
 icn0=0;  icn1=0;   icn2=0;   icn3=0; 
 icn4=0; icn5=0;   icn6=0;   
 
 for(j=0;j<120;j=j+1) 
 begin 
 s1=memb[j]; 
