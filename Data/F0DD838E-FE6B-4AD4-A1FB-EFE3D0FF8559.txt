SUPERMAN: Smart and Ultra-PERformance Mobile Assistant Nodes for
Wireless Sensor Ad hoc Networks
Many research challenges in mobile ad hoc and wireless sensor networks, such as capacity,
transmission, coverage, localization, security etc., need mobility support to upgrade their
performance. This project develops mobile assisting nodes to support localization process in
sensor networks.
Localization is one of the substantial issues in wireless sensor networks. Several approaches,
including range-based and range-free, have been proposed to calculate positions for randomly
deployed sensor nodes. With specific hardware, the range-based schemes typically achieve high
accuracy based on either node-to-node distances or angles. On the other hand, the range-free
mechanisms support coarse positioning accuracy with the less expense. This report describes
range-free localization schemes using mobile assisting nodes for three-dimensional wireless
sensor networks. Each assisting node equipped with the GPS moves in the sensing field and
broadcasts its current position periodically. The sensor nodes obtaining the information are
able to compute their locations. With the scheme, no extra hardware or data communication is
needed for the sensor nodes. Moreover, obstacles in the sensing fields can be tolerated. The
localization mechanism has been implemented in the network simulator ns-2. The simulation
results demonstrate that the scheme outperformed other range-free mechanisms.
ii
List of Tables
3.1 Simulation Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20
iv
Chapter 1
Introduction
1.1 Localization in Wireless Sensor Networks
With advances in hardware and wireless technology, sensor networks can be used for various
application areas, such as home, health, military, and industry [1–6]. A sensor network is
composed of a large number of sensor nodes that are densely deployed in a field. Each sensor
performs a sensing task for detecting specific events. A particular node, the sink, is responsible
for collecting sensing data reported from all the sensors. The sink finally transmits the data to a
task manager. When the task manager needs to perform another operation, the new assignment
will be disseminated through the sensor network. Communication in the sensor network is
based on the wireless ad hoc networking technology [7–10]. If the sensor nodes cannot directly
communicate with the sink, some intermediate sensors have to forward the data.
There are several essential issues (e.g., localization, deployment, and coverage) in wireless
sensor networks. Localization is one of the most important subjects because the location
information is typically useful for coverage, deployment, routing, location service, target
tracking, and rescue [11, 12]. For example, with location-based routing protocols [13–16],
1
be estimated by resolving the intersection point of the perpendicular line and the ground. The
localization scheme eliminates the power consumption for communication among sensor nodes
because only aerial anchors are required to broadcast beacon messages. More improvements,
such as randomized beacon scheduling, chord selection, and circular cross section selection,
are implemented for enhancing the localization performance. The aerial anchors provide one
more dimensional mobility so our mechanism is less affected by geographical limitations (such
as rivers, lakes, and obstacles) compared to the schemes using ground anchors [36–40].
The mechanism has been evaluated in the network simulator ns-2. The simulation results
show that our scheme determined positions of sensor nodes precisely and outperformed previous
range-free methods. With our mechanism, both execution time and the number of beacon
messages were reduced.
3
SensorNode
Aerial Anchor
Sensing Space
Figure 2.1: Example of system environment.
such as tracking chemical plumes. The flying anchors can fly through the sensing space to
assist sensor nodes to estimate their current locations.
There are three main assumptions in the mechanism. First, each flying anchor equips with a
GPS receiver to explore its current location. Second, the flying anchors have sufficient energy
so that they are capable of flying and broadcasting during the localization process. Third, the
flying anchors can fly by themselves or other carriers such as helicopters, Unmanned Aerial
Vehicles (UAV) [43], and aerial robots [44].
2.2.2 Localization Scheme
Our localization scheme estimates a sensor node’s position according to a geometric corollary.
The corollary states that a perpendicular line coming through the center of a sphere’s circular
cross section passes through the center of the sphere. A perpendicular line L1 passes through
both the center of the circular cross section C1 and the center of the sphere S as shown in
Fig. 2.2. Similarly, L2 passes through both C2 and S. The intersection point of L1 and L2 is
5
obtains a beacon message from a flying anchor, the sensor node will check whether the flying
anchor is in its Visitor List or not. If not, a beacon point will be logged and the flying anchor’s
ID with its corresponding lifetime will be added in the Visitor List as well. Otherwise, the
beacon message will be discarded and the flying anchor’s lifetime will be extended. When the
lifetime of the flying anchor is expired, the corresponding entry for the anchor in the Visitor
List will be removed and the last beacon message of the flying anchor will be regarded as a
beacon point.
Fig. 2.3 depicts an example for the beacon point selection. An flying anchor (A) moves from
(x, y, z) to (x′, y′, z′) and broadcasts beacon messages with an interval twhere t = Ti+1−Ti, i =
0, . . . , 7. Based on the selection mechanism, the beacon message at T2 is considered as a beacon
point (A, (x2, y2, z2)) for the sensor node (S). Node S adds an entry (A, (x2, y2, z2), T2 + δ) in
its Visitor List. The δ is the predefined lifetime for the aerial nodes and the value of δ should
be larger than the beacon interval t (δ = αt, α > 1). The lifetime of node A will be increased
by δ when node A arrives at T3, T4, T5, and T6. After node A moves out of the communication
sphere of node S and node A’s lifetime expires, node S will delete the entry for node A in its
Visitor List. Besides, node A’s beacon message at T6 will be chosen as a beacon point.
2.2.2.2 Location Calculation
Two circular cross sections are built after four beacon points are gathered. Two perpendicular
lines that passes through the centers of two circular cross sections can be determined. In Fig. 2.4,
we assume that a set of selected beacon points {Bi, Bj , Bk, Bl} with their corresponding
locations (xi, yi, zi), (xj, yj, zj), (xk, yk, zk), and (xl, yl, zl). Arbitrarily, {Bi, Bj , Bk} is
selected to form a circular cross section (S) and {Bj , Bk, Bl} is picked to build another one
7
~N ′ = ~BjBk × ~BkBl = (N ′x, N ′y, N ′z) (2.2)
Based on the corollary in which the perpendicular bisector of any chord passes through
the center of the circle, the intersection point of the perpendicular bisectors of two chords in
the same circle is the center of the circle. Take the circular cross section S for example, the
perpendicular bisector Lij can be generated by the cross product of ~N and ~BiBj based on the
perpendicular principle. Similarly, the cross product of ~N and ~BjBk is the normal vector of
the perpendicular bisector Ljk.
~Lij = ~N × ~BiBj = (l,m, n) (2.3)
~Ljk = ~N × ~BjBk = (p, q, r) (2.4)
With regard to S ′, ~L′ij and ~L′jk are described as
~L′jk = ~N ′ × ~BjBk = (l′,m′, n′) (2.5)
~L′kl = ~N ′ × ~BkBl = (p′, q′, r′). (2.6)
Suppose that the equations of the lines Lij , Ljk, L′jk, and L′kl can be presented as follows.
Lij :
xij−aij
l
= yij−bij
m
= zij−cij
n
= tij (2.7)
Ljk :
xjk−ajk
p
=
yjk−bjk
q
=
zjk−cjk
r
= tjk (2.8)
L′jk :
xjk−ajk
l′ =
yjk−bjk
m′ =
zjk−cjk
n′ = t
′
jk (2.9)
L′kl :
xkl−akl
p′ =
ykl−bkl
q′ =
zkl−ckl
r′ = t
′
kl (2.10)
9
2.2.3 Enhancements
2.2.3.1 Beacon Scheduling
Broadcasting problem including congestion, contention, and collision in the wireless ad hoc
networks has been discussed [45]. The beacon collision at each sensor node could appear in our
mechanism. Our solution introduces to jitter the scheduling for broadcasting beacon messages.
The jitter time is randomly chosen from a uniform distribution between 0 and 0.01 ∗ beacon
interval. The jittered beacon interval is displayed as
Jittered beacon interval = beacon interval + jitter time. (2.16)
The jitter scheduling decreases the probability of beacon collision at each sensor node.
Therefore, each sensor node can efficiently receive beacon messages sent by different flying
anchors. Research papers [46, 47] provide the detailed performance for the jitter mechanism.
2.2.3.2 Chord Selection
If the selected beacon points are exactly on the communication sphere, the mechanism will
execute accurately. However, incorrect beacon points could be selected due to collision or
inappropriate beacon intervals in practical environments. The localization for the center of the
circular cross section could fail that results from the chords generated by the erroneous beacon
points. As shown in Fig. 2.5, faulty localization error appears because of the improper chords.
According to our study, the probability of failed localization will be increased when the short
chord occurs. Setting a threshold (λ) for the length of a chord is used to reduce the impact on
localization. The relation between the threshold and the communication sphere’s radius (R) is
11
N
N'
Actual
Location
Estimated
Location
N' N
Figure 2.6: Circular cross section selection.
the problem. The Θ must exceed µ degrees where 0 < µ ≤ 90. The analysis and simulations
will discuss the relation between the location error and the threshold µ for the included angle.
2.2.4 Analysis
Our localization mechanism can be divided into two parts. The first part estimates the centers
of two circular cross sections. The second one calculates the intersection point of the perpen-
dicular line that passes through one circle’s center and the perpendicular line that goes through
another one. In the first part, the distance from the beacon point to the closet endpoint on the
communication sphere is specified as the beacon point error. The maximum beacon point error
(e) is defined as
e = s · t (2.19)
where s is the movement speed of the flying anchors and t is the beacon interval (see Fig. 2.7).
The worst case in the first part of the localization where a beacon point has the maximum error
and the other two beacon points are exactly on the circle is described in Fig. 2.7. Take the
13
Ca'
La'
Ca
La
Nb
Na
S
S'
Cb
Cb'
Lb
Lb'
Ca'
La'
Ca
La
S
S'
Cb
Cb'
Lb
Lb'
T
q
x y
(a) (b)
Figure 2.8: Maximum location error in the second part.
r′ =
c
2 cos p
=
c
c2+(r−e)2−r2
c(r−e)
(2.22)
CC ′ = r′ − (r − e) = 2r
2e− 3re2 + e3
σ2r2 − 2re+ e2 (2.23)
Fig. 2.8(a) presents the worst case in the second part for localization. The black circles with
their centers Ca and Cb are the actual circular cross sections. On the other hand, the gray circles
with their centers C ′a and C ′b are the estimated circular cross sections. Their corresponding
normal vectors are Na and Nb respectively. The worst case in the second part can be deduced
to Fig. 2.8(b) because the perpendicular lines including La, L′a, Lb, and L′b are on the same
plane. The included angle between Na and Nb is q degrees (0 < q ≤ 90). With 4TC ′aS ′ and
4TC ′bS ′, the relation among TS ′, TC ′a, and TC ′b are depicted as
sinx =
TC ′a
TS ′
(2.24)
15
Chapter 3
Performance Evaluation
3.1 Localization with Aerial Anchor Nodes: Three-dimensional Sensor
Networks
The ns-2 network simulator with the Monarch Project wireless and mobile extensions [48, 49]
was used for implementing our localization mechanism. The radio model was based on the
Lucent WaveLAN IEEE 802.11 product and its Distributed Coordination Function (DCF)
was utilized for Medium Access Control (MAC) model. Other MAC protocols supporting
sleep/wake-up modes such as S-MAC [50] can be used with our mechanism as well. Each
sensor node is needed to keep wake-up mode during the localization process. After the sensor
node obtains its location, the sensor node can switch to the sleep mode for energy conservation.
17
R SensorNode
Aerial Anchor
Sensing Space
100
R
100
Simulated
Space
100
Figure 3.1: Simulation environment.
3.1.2 Simulation Settings
The detailed parameter settings for our simulations is shown in Table 3.1. The default values in
the simulations were within the parentheses. The well-known range-free localization schemes,
Centroid [30] and Constraint [39], were implemented for comparing with our mechanism. Both
mechanisms were modified to determine positions of the sensor nodes in three-dimensional
environments. Besides, Centroid scheme was revised for utilizing mobile anchors. Based on
our simulations, the average location error for both Centroid and Constraint schemes converged
after each sensor node received at least 200 beacon messages. Six sets of simulations are
represented as follows.
• Beacon scheduling: The simulation presented the performance comparison between the
randomized scheduling and periodical scheduling. Each simulation used five different
beacon intervals.
19
• GPS errors: Three methods were investigated for performance comparison on varying
GPS errors.
Three metrics were utilized to evaluate the performance of our localization mechanism:
• Average location error: the average distance between the estimated location (Xei, Y ei,
Zei) and the actual location (Xi, Yi, Zi) of all sensor nodes.
Average location error =
∑√
(Xei −Xi)2 + (Y ei − Yi)2 + (Zei − Zi)2
# of sensor nodes
(3.1)
• Average execution time: the average needed time for sensor nodes to compute their
locations.
Average execution time =
∑
Execution timei
# of sensor nodes
(3.2)
• Beacon overhead: the average number of beacon messages broadcast by the mobile anchor
points in total execution time.
Beacon overhead =
∑
Beacon messages
# of flying anchors
(3.3)
3.1.3 Results
3.1.3.1 Beacon Scheduling
Fig. 3.2 depicts that the average location error for both the randomized and the periodical beacon
scheduling schemes were decreased when the beacon interval was diminished. The location
error of the randomized mechanism was dramatically reduced from 10 meters to 1 meter.
With the periodical scheduling mechanism, the localization accuracy was only advanced to
21
0100
200
300
0.10.30.50.70.9
Beacon interval (sec)
A
v
er
ag
e
ex
ec
u
ti
o
n
ti
m
e
(s
ec
)
Periodical
Jittered
Figure 3.3: Average execution time vs. beacon scheduling.
0
2000
4000
6000
8000
0.10.30.50.70.9
Beacon interval (sec)
A
v
er
ag
e
n
u
m
b
er
o
f
b
ea
co
n
s
Periodical
Jittered
Figure 3.4: Beacon overhead vs. beacon scheduling.
The localization accuracy of our mechanism was rapidly advanced 42% as setting the threshold
for the length of chords, as shown in Fig. 3.5. The location error was enhanced further to about
1 meter when the threshold was extended to 50% of radio range.
Fig. 3.6 and Fig. 3.7 demonstrates that the average execution time and beacon overhead were
slightly increased following the growth of the threshold. The sensor nodes spent more time on
collecting valid chords so more beacon messages were broadcast by the flying anchors. The
23
0500
1000
1500
2000
2500
3000
3500
4000
0% 10% 20% 30% 40% 50%
Threshold (% of R)
A
v
er
ag
e
n
u
m
b
er
o
f
b
ea
co
n
s
Figure 3.7: Beacon overhead vs. threshold for the length of a chord.
0
100
200
300
400
500
600
700
0 10 20 30 40 50 60 70 80 90
Included angle (degree)
L
o
ca
ti
o
n
er
ro
r
(m
)
Figure 3.8: Location error vs. included angle.
Setting the threshold for the included angle between normal vectors of two cross sections
was from zero to 10 degrees. With the circular cross section selection, the included angle
must surpass the threshold. The zero degree represents that no limitation was required for the
circular cross section selection. Fig. 3.9 shows that the localization performance was efficiently
improved by using the thresholds. The location error fell down from 2 meters to 1 meter due to
the extension of the threshold. The additional execution time and beacon overhead for setting
the threshold were restricted (see Fig. 3.10 and Fig. 3.11). When the threshold (10 degrees)
25
0500
1000
1500
2000
2500
3000
3500
4000
0 2 4 6 8 10
Threshold (degree)
A
v
er
ag
e
n
u
m
b
er
o
f
b
ea
co
n
s
Figure 3.11: Beacon overhead vs. threshold for the included angle.
0
2
4
6
8
10
12
15 20 25 30
Radio range (m)
A
v
er
ag
e
lo
ca
ti
o
n
er
ro
r
(m
)
Centroid
Constraint
Our scheme
Figure 3.12: Average location error vs. radio range.
accuracy for Centroid and Constraint were degraded from 19% to 32% and from 12% to 28%
respectively. On the contrary, our scheme enhanced the accuracy from 6% to 3% of radio range.
The average execution time and beacon overhead for three mechanisms were decreased
following with the growth of the radio ranges (see , Fig. 3.13 and Fig. 3.14). More sensor nodes
can obtain the beacon messages broadcasted by each flying anchors with larger transmission
range. Therefore, the sensor nodes needed less time for processing the localization. The
beacon overhead was also reduced as the execution time was shortened. Our scheme required
27
00.5
1
1.5
2
2.5
3
3.5
4
4.5
5
10 20 30 40 50
Moving speed (m/sec)
A
v
er
ag
e
lo
ca
ti
o
n
er
ro
r
(m
)
Centroid
Constraint
Our scheme
Figure 3.15: Average location error vs. moving speed.
0
100
200
300
10 20 30 40 50
Moving speed (m/sec)
A
v
er
ag
e
ex
ec
u
ti
o
n
ti
m
e
(s
ec
)
Centroid
Constraint
Our scheme
Figure 3.16: Average execution time vs. moving speed.
the execution time, and the beacon overhead, our mechanism achieved best performance (see
Fig. 3.15, Fig. 3.13, and Fig. 3.14). The average location errors for Centroid, Constraint, and
our scheme were remained about 4.6, 3.4, and 1.1 meter respectively. The average execution
time for three mechanisms were decreased because each sensor node received more beacon
messages within the fixed time period from the flying anchors with faster velocities. The beacon
overhead was enlarged as the moving speed increased to 20 m/sec. But, when the moving speed
surpassed 30 m/sec, the beacon overhead for all methods were improved.
29
00.5
1
1.5
2
2.5
3
3.5
4
4.5
5
1% 2% 3% 4% 5%
# of flying anchors (% of sensor nodes)
A
v
er
ag
e
lo
ca
ti
o
n
er
ro
r
(m
)
Centroid
Constraint
Our scheme
Figure 3.18: Average location error vs. number of flying anchors.
0
100
200
300
400
1% 2% 3% 4% 5%
# of flying anchors (% of sensor nodes)
A
v
er
ag
e
ex
ec
u
ti
o
n
ti
m
e
(s
ec
)
Centroid
Constraint
Our scheme
Figure 3.19: Average execution time vs. number of flying anchors.
propagation is a perfect sphere; when the value of the DOI is larger, the irregularity will become
more serious. For instance, if the DOI is set to 0.1, the actual transmission distance in each
direction will be randomly selected using Weibull distribution from 90% to 110% of the average
radio range.
In Fig. 3.21, the average location error for three mechanisms under varying DOI values is
represented. The irregular radio propagation influenced the correctness of our beacon points
selection. Without GPS error, the location error of our scheme increased from 1.01 to 1.74 meter
31
3.1.3.8 GPS Errors
The positions read from the GPS receiver has errors in the realistic environments. Table ??
indicates the GPS accuracy of three levels. In our simulations, isotropic GPS errors based on
the Normal distribution were used. Based on the carrier positioning accuracy, the mean GPS
errors were set from 0.05 to 0.25 meter.
Because the centroid formula is used for estimating a sensor’s position, Centroid mechanism
was not affected by the GPS errors. The average location error of Centroid kept about 4.69 me-
ters. With respect to Constraint scheme, the localization accuracy was influenced lightly by
varying GPS errors. In our scheme, the GPS errors may enlarge beacon point error. The
location accuracy for our scheme was increased following with the extension of the GPS errors.
In spite of the impact of the GPS errors, our localization method was more accurate than other
two mechanisms. Fig. 3.21 also displays the impact of combination of the DOI and the GPS
errors. Our method achieved best performance (about 1.87 meter) even though experiencing
0.25 meter mean GPS errors and 0.1 DOI value.
33
range-free localization schemes. The average location error was also competitive to other
range-based approaches that typically require additional hardware on each sensor node.
35
[14] Y. Ko and N. H. Vaidya, “Location Aided Routing in Mobile Ad Hoc Networks,” Pro-
ceedings of ACM International Conference on Mobile Computing and Networking (MO-
BICOM), pp. 66–75, Feb. 1998, Dallas, Texas, USA.
[15] S. Basagni, I. Chlamtac, V. R. Syrotiuk, and B. A. Woodward, “A Distance Routing Effect
Algorithm for Mobility (DREAM),” Proceedings of ACM International Conference on
Mobile Computing and Networking (MOBICOM), pp. 76–84, Feb. 1998, Dallas, Texas,
USA.
[16] B. Karp and H. T. Kung, “GPSR: Greedy Perimeter Stateless Routing for Wireless Net-
works,” Proceedings of ACM International Conference on Mobile Computing and Net-
working (MOBICOM), pp. 243–254, Aug. 2000, Boston, Massachusetts, USA.
[17] J. Hightower and G. Boriello and R. Want, “SpotON: An Indoor 3D Location Sensing
Technology Based on RF Signal Strength,” Tech. Rep. UW CSE 00-02-02, University of
Washington, Feb. 2000.
[18] P. Bahl and V. N. Padmanabhan, “RADAR: An In-Building RF-Based User Location and
Tracking System,” Proceedings of IEEE Joint Conference of the IEEE Computer and
Communications Societies (INFOCOM), pp. 775–784, Mar. 2000, Tel Aviv, Israel.
[19] P. Bergamo and G. Mazzini, “Localization in Sensor Networks with Fading and Mobility,”
Proceedings of IEEE International Symposium on Personal, Indoor and Mobile Radio
Communications (PIMRC), pp. 750–754, Sept. 2002, Lisbon, Portugal.
[20] N. B. Priyantha, A. Chakraborty, and H. Balakrishnan, “The Cricket Location-Support
System,” Proceedings of ACM International Conference on Mobile Computing and Net-
working (MOBICOM), pp. 32–43, Aug. 2000, Boston, Massachusetts, USA.
[21] A. Savvides, C. C. Han, and M. B. Srivastava, “Dynamic Fine-Grained Localization in
Ad-Hoc Networks of Sensors,” Proceedings of ACM International Conference on Mobile
Computing and Networking (MOBICOM), pp. 166–179, July 2001, Rome, Italy.
[22] A. Savvides, H. Park, and M. Srivastava, “The Bits and Flops of The N-Hop Multilateration
Primitive for Node Localization Problems,” Proceedings of ACM International Workshop
on Wireless Sensor Networks and Applications (WSNA), pp. 112–121, Sept. 2002, Atlanta,
Georgia, USA.
[23] D. Niculescu and B. Nath, “Ad Hoc Positioning System (APS) Using AoA,” Proceed-
ings of IEEE Joint Conference of the IEEE Computer and Communications Societies
(INFOCOM), pp. 1734–1743, Mar. 2003, San Francisco, California, USA.
[24] A. Nasipuri and K. Li, “A Directionality Based Location Discovery Scheme for Wire-
less Sensor Networks,” Proceedings of ACM International Workshop on Wireless Sensor
Networks and Applications (WSNA), pp. 105–111, Sept. 2002, Atlanta, Georgia, USA.
[25] T. S. Rappaport, J. H. Reed, and B. D. Woerner, “Position Location Using Wireless
Communications on Highways of The Future,” IEEE Communications Magazine, vol. 34,
no. 10, pp. 33–42, Oct. 1996.
[26] J. Caffery, Jr. and G. L. Stu¨er, “Subscriber Location in CDMA Cellular Networks,” IEEE
Transactions on Vehicular Technology, vol. 47, no. 2, pp. 406–416, May 1998.
37
[41] P. Corke, R. Peterson, and D. Rus, “Networked Robots: Flying Robot Navigation Using a
Sensor Net,” Proceedings of International Symposium on Robotics Research (ISRR), Oct.
2003, Siena, Italy.
[42] P. Corke, R. Peterson, and D. Rus, “Coordinating Aerial Robots and Sensor Networks for
Localization and Navigation,” Proceedings of the International Symposium on Distributed
Autonomous Robotic Systems (DARS), June. 2004, Toulouse, France.
[43] NASA Wallops Flight Facility UAV. URL http://uav.wff.nasa.gov/.
[44] Berkeley Aerobots. URL http://robotics.eecs.berkeley.edu/bear/.
[45] S.-Y. Ni, Y.-C. Tseng, Y.-S. Chen, and J.-P. Sheu, “The Broadcast Storm Problem in
A Mobile Ad Hoc Network,” Proceedings of ACM International Conference on Mobile
Computing and Networking (MOBICOM), pp. 151–162, Aug. 1999, Seattle, Washington,
USA.
[46] B. Williams and T. Camp, “Comparison of Broadcasting Techniques for Mobile Ad Hoc
Networks,” Proceedings of ACM International Symposium on Mobile Ad Hoc Networking
and Computing (MOBIHOC), pp. 194–205, June 2002, Lausanne, Switzerland.
[47] E. Osipov and C. Tschudin, “Improving the Path Optimality of Reactive Ad Hoc Routing
Protocols Through De-Coherent RREQ Waves,” Tech. Rep. CS-2004-002, University of
Basel, Apr. 2004.
[48] The Network Simulator - ns-2. URL http://www.isi.edu/nsnam/ns/.
[49] The ns Manual. URL http://www.isi.edu/nsnam/ns/doc/index.html.
[50] W. Ye, J. Heidemann, and D. Estrin, “An Energy-Efficient MAC Protocol for Wireless
Sensor Networks,” Proceedings of IEEE Joint Conference of the IEEE Computer and
Communications Societies (INFOCOM), pp. 1567–1576, June 2002, New York, New
York, USA.
[51] J. Broch, D. A. Maltz, D. B. Johnson, Y.-C. Hu, and J. G. Jetcheva, “A Performance
Comparison of Multi-Hop Wireless Ad Hoc Network Routing Protocols,” Proceedings
of ACM International Conference on Mobile Computing and Networking (MOBICOM),
pp. 85–97, Oct. 1998, Dallas, Texas, USA.
[52] G. Zhou, T. He, S. Krishnamurthy, and J. A. Stankovic, “Impact of Radio Irregularity
on Wireless Sensor Networks,” Proceedings of ACM International Conference on Mo-
bile Systems, Applications, and Services (MOBISYS), pp. 125–138, June 2004, Boston,
Massachusetts, USA.
39
 
 
 
 
 
 
 
目次 
摘要...............................................................................................1 
目次...............................................................................................2 
本文...............................................................................................3 
目的...............................................................................................3 
過程與心得...................................................................................4 
建議事項.......................................................................................5 
參考文獻.......................................................................................5 
 
 
 
 
 
 
 
 2
 過程與心得 
PIMRC 是一個非常重要的大型學術會議，每年都有上千篇的會議
論文投稿，有將近五百篇的論文利用口頭或展示的方式發表，參與人
員包括產業界及學術界都非常熱絡。像這樣的大型會議，如何能辦的
成功，以及面面俱到，實在不是件簡單的事情。這次的參與，剛好可
以讓我觀摩與學習，如何掌握會議的進行、人員的調度、晚宴的事項
等，對於以後辦理大型國際會議有相當好的經驗。 
這次的報告安排在最後一天的早上，因此前幾天可以輕鬆的參與
其他的研討主題，比較有意思的包括目前非常熱門的 sensor networks, 
mobile ad hoc networks, routing protocols, cellular networks, location 
based services and positioning, mobility control, heterogeneous networks, 
mobile IP and TV, future wireless technologies, etc., 聽了這些論文發表, 
得到相當多的啟發，對目前的研究頗有幫助。 
報告當天進行非常順利，與會學者並建議我們的工作機制可以考
慮容錯 (fault tolerance) 的概念，經過討論之後，已將此方案列
為目前的研究計畫中。 
 
 4
