 1
行政院國家科學委員會專題研究計畫成果報告 
(三年期計畫之完整版報告) 
強健性最佳智能演算法之研發及其在系統與控制問題上的應用(3/3) 
計畫編號：NSC 95-2221-E-327-032 
執行期限：自 95 年 8 月 1 日至 96 年 7 月 31 日止 
主持人：周至宏 教授  國立高雄第一科技大學機械與自動化工程系所 
 
中文摘要 
本三年期計畫案之目的在於發展一
種具強健性的最佳智能演算法，可廣泛
應用於多類最佳化問題，如數學函數優
化、參數設計最佳化、組合最佳化、與
允差（容差）設計最佳化等四大類。計
畫總共進行三個年度，除建立強健性的
最佳智能演算法外，分別利用不同的應
用問題來驗證此演算法的可行性、通用
性、與強健性。在傳統的基因演算法，
雖可同時搜尋多變數與多模態的空間，
並解決複雜與不連續的問題。但當所遭
遇的問題具有很多變數與很多局部最佳
值時，傳統的基因演算法常陷入局部最
佳值且每次所搜尋的值可能都不一樣。
為解決基因演算法穩健性不足的問題，
本計畫引進強健設計的田口實驗設計方
法，來建構演化式策略的智慧型重組步
驟，使用系統化推理能力取代傳統基因
演算法之隨機搜尋機制，試圖增加基因
演算法穩健的搜尋能力，並加快收斂的
速度。田口實驗設計法乃利用直交表以
最少的實驗次數，有系統的推算最佳組
合，完成參數設計。本計畫利用田口實
驗設計法的系統推算能力，來改良基因
演算法隨機產生優良子代的機制，讓基
因演算法在運作過程中，進行有系統的
探索推理，達到擁有穩健與快速收斂的
能力。此外，為充分驗證本計畫所提出
之演算法的實用性與性能，本計畫藉應
用於不同類型的最佳化問題，來說明此
演算法是成為解決最佳化問題之最佳演
算法。 
 
關鍵詞：基因演算法、田口實驗法、強
健性最佳智能演算法。 
 
Abstract 
The purpose of this three-years 
project is to develop a robust intelligent 
optimization algorithm that is applied to 
solve several optimization problems 
including the optimization of the 
mathematical functions, optimal 
parameters design, optimal combination 
planning, and optimal tolerance design. In 
the prospective three-year research period, 
a robust intelligent optimization algorithm 
is proposed to solve many application 
problems and is shown its capability, 
feasibility, and robustness. A traditional 
genetic algorithm (TGA) indeed has a 
strong ability to solve the problem of 
complexity and non-continuity with the 
multi-variable and multi-modal space. 
However, when the dimension is high and 
there are numerous local optima, a 
particular challenge has shown that the 
TGA may be trapped in the local optima 
and produces different values in each run. 
In order to promote the capability of 
robustness for a TGA, the Taguchi method, 
a robust design approach, is used as an 
evolution strategy to intelligently build 
combinatorial steps. In comparison to the 
random search of a TGA, the systematic 
reasoning ability of the Taguchi method 
may enhance the abilities of the robust 
search and quick convergence. The 
orthogonal array of the Taguchi method is 
used to obtain the optimal combination 
with a small number of experiments. The 
research project uses the systematic 
 3
機產生子代的機制，試圖找尋全域之最
佳值。此類改進演算法之研究者，皆利
用多變數與多模態之數學函數優化問
題，來驗證所提出之演算法的性能，目
前已有相當不錯的成果。但是所得之成
果強健性不足，亦即演算結果仍然有很
大之變異性，仍然值得深入探討。 
參數設計最佳化問題常見於數位信
號處理之濾波器參數設計，其中數位無
限脈衝響應 (Infinite Impulse Response, 
IIR) 濾波器是較常用的形式之一，其設
計屬於相當複雜的多變數與多目標最佳
化問題，而且目標與目標之間經常互相
違背。早期，數位 IIR 濾波器之設計皆
利用類比轉換成數位之技術來完成 
(Daniels, 1974; Lam, 1979)，最常見的形
式如巴特握斯濾波器 (Butterworth Filter)
、柴比雪夫濾波器 (Chebyshev Filter)、
橢圓濾波器 (Elliptic Filter)、貝索濾波器 
(Bessel Filter)。由於所需設計的參數與性
能指標太多，常為取得妥協導致性能不
佳或階數過高，造成實用上的缺點。近
年來，為克服以上所提之困難，多數的
研究者 (for example, Ng et al., 1994; Li 
and Yin, 1996; Harris and Ifeachor, 1998; 
Tang et al., 1998; Vanuytsel et al., 2002; 
Zhang et al., 2003; and references therein) 
利用基因演算法，來搜尋最佳參數與得
到較佳之數位 IIR 濾波器。除此之外，
為兼顧濾波器的性能，評估函數  (如
p-error、mean-square-error、通帶漣波大
小、止帶漣波大小、…) 亦為重要因素
之一，其中 p-error 指標常被研究者 (for 
example, Deczky, 1972; Deczky, 1976; 
Cortelazzo and Lightner, 1984; Lang, 1992; 
Kafri, 1997; Tarczynski et al., 2001; 
Vanuytsel, et al., 2002; and Zhang et al., 
2003) 所使用。雖然目前採用基因演算
法之成果已顯示其成效，但是，由於數
位 IIR 濾波器設計參數與性能指標過多
，所以基因演算法常有捉襟見肘的困境
，急待突破。 
組合最佳化問題是另一個與上述之
數學函數優化問題及參數設計最佳化問
題完全不同屬性的問題，是運籌學中的
一個重要領域，其包含旅行者問題 
(Travelling Salesman Problem, TSP)、排程
問題、背包問題、裝箱問題、離散空間
下機器人之路徑規劃、…等，其中排程
問題是相當複雜的調度規劃問題，屬於
NP-hard 等級的問題，此類問題並非單
純之連續數值求解，而是非數值類的離
散且多限制條件之排序問題。此類最佳
化求解很困難，主要原因是所謂的 “組
合爆炸”。其中典型的問題有零工式排程
問題 (Job-shop Scheduling Problem, JSP)
與 流 程 型 排 程 問 題  (Flow-shop 
Sequencing Problem, FSP)。早期的研究
者大多以 Blackstone et al. (1982) 所發展
的分派法則 (Dispatching Rule) 來解決
零工式的排程問題，由於問題困難度實
在太高，所以結果並不理想。後來的研
究者 (Storer et al., 1992; Van Laarhoven 
et al., 1992) 乃結合分派法則與搜尋技術
， 如 模 擬 退 火 演 算 法  (Simulated 
Annealing) 與禁忌搜尋法 (Tabu Search)
，來解決此類之問題。近年來之研究者
大多以基因演算法為基礎 (for example, 
Biegel and Davern, 1990; Gupta et al., 
1993; Gen et al., 1994; Kumar and 
Srinivasan, 1996; Ono et al., 1996; Shi, 
1997; Gen and Cheng, 1997; Wang, 2001; 
Tsujimura et al., 2001; and references 
therein)，嘗試來解決零工式的排程問題
，且大多以 Fisher-Thompson 所設計的排
程問題來驗證其演算法的優劣。此外，
研 究 流 程 型 排 程 問 題  (Flow-shop 
Scheduling Problem, FSP) 的始祖首推
Johnson (1954)，他提出二台機器的流程
型排程且以最長工時 (Makespan) 為評
估指標。自此以後，開啟流程型排程問
題的研究且參與排程的機器數量逐漸增
加，由於機器數量與工作數量逐漸增加
，造成排程問題越來越複雜且不易獲得
較佳的結果。為解決如此複雜的問題，
許多研究者乃提出啟發式的方法  (for 
example, Palmer, 1965; Campbell et al., 
1970; Gupta, 1971; Nawaz et al., 1983; 
Hundal and Rajgopal, 1988; Widmer and 
Hertz, 1989; Taillard, 1990; Ho and Chang, 
 5
基因值，進而產生染色體與初始群體。
實數編碼的好處為所欲決定的參數總數
與編碼長度相同，在編碼長度比二進位
編碼方式短很多且執行速度上比二進位
編碼方式來得快；此外，更大的好處為
編碼空間為連續空間，較易搜尋到可能
的解。以下為產生 M 個初始群體的步驟
，其中一組向量 (x1, x2, .., xi, .., xN) 代表
一組 N 個待決定的參數： 
產生步驟： 
步驟 1：任意產生一個亂數 β，其
中 β ∈[0, 1]。 
步驟 2：令 )( iiii lulx −+= β ,其中 li 
與 ui 是 xi的範圍。 
步驟 3：重複執行以上步驟 N 次，
則可產生一組向量(x1, x2, 
xi,…, xN)。 
步驟 4：重複執行 M 次的步驟 1 至
3，則可產生 M 個初始群
體。 
選擇方式 
選擇較佳母代以進行後續之交叉演
算，乃利用一般常用之輪盤法來選取，
此基本的觀念為選取在整個群體中擁有
較高機率之染色體。例如染色體 k 其適
應值為 fk，其在整體群體中所佔的機率
為 pk，則 
∑
=
=
M
i
ikk ffp
1
/ , ....,,2,1 Mk =   (1.1) 
因此在整體群體中每一個染色體之累積
機率 qk 為 
∑
=
=
k
i
ik pq
1
,  ....,,2,1 Mk =   (1.2) 
其中 M 為群體內染色體的數目。選擇過
程中，轉動 M 次輪盤，每次依據所得之
機率，選取一個母代的成員成為新的群
體成員，以下為產生 M 個新的群體成員
步驟： 
產生步驟： 
步驟 1：從 [0, 1] 的範圍中，任意
產生一個亂數 r。 
步驟 2：如果 r ≤ q1，則第一個染色
體被選出； 
如果 qk-1< r ≤ qk，則第 k
個(2 ≤ k ≤ M)染色體被選
出。 
步驟 3：重複執行以上步驟 M 次，
則可產生 M 個新的群體
成員。 
藉由交叉方法產生多樣化的子代 
交叉方法係結合單點交叉與凸集合
理論之線性內插法 (Bazaraa et al., 1990; 
Gen and Cheng, 1997)，也就是任意選擇
一個交叉點，互換交叉點右邊部分的兩
個母代，同時以線性內插法計算交叉點
上的兩個基因值，然後產生新的兩個子
代。例如：分別兩個母代為 x = (x1, x2, …, 
xN) 與 y = (y1, y2, …, yN)，假設 k 點為任
意選擇的交叉點，則交叉方法與新的子
代 'x  與 'y  如下所述： 
),...,,,,'...,,,('
),...,,,,'...,,,('
2121
2121
Nkkk
Nkkk
xxxyyyy
yyyxxxx
++
++
=
=
 (1.3) 
其 中 )(' kkkk xyxx −+= β ，
)(' kkkk luly −+= β ，lk 與 uk 是 yk 的範
圍，與 β 是屬於 [0, 1] 的亂數值。 
以此混合式的交叉方式與新的 kx'  
與 ky' 的產生方式，可產生多樣化的子
代，避免早熟發生。 
突變方式 
突變的基本觀念亦來自凸集合理論
之線性內插法 (Bazaraa et al., 1990; Gen 
and Cheng, 1997)，也就是在同一個染色
體中任意選取兩點進行線性內插，以達
到突變的目的，如此突變的方法亦可視
為在空間中進行微調。例如：母代為 x = 
(x1, x2, …, xi, xj, xk,…, xN)，任意選擇 xi and 
xk 為欲突變之基因，則突變方法與新的
子代 'x  如下所述： 
'x  = (x1, x2, …, ix' , xj, kx' ,…, xN)  (1.4) 
其 中 ( ) kii xxx ββ +−= 1'  ， ( ) kik xxx ββ −+= 1' ，與 β 是屬於[0, 1]
的亂數值。 
（二）田口實驗設計法 
本研究利用田口實驗設計法的優點
 7
(Mean Squared Deviation) S 可被描述如
下： 
∑
=
=
n
t tyn
S
1
2
11 ,        (1.9) 
其訊號對雜訊比 η 形式為 
)11(log10
1
2∑
=
−=
n
t tyn
η .   (1.10) 
其量測單位亦為 dB。 
（三）系統化推理產生優良子代機制 
田口實驗設計法之直交表以最少的
實驗次數，來處理大量變數的參數設
計，變數中的最佳組合乃利用直交表與
訊號對雜訊比 (η) 來產生。在此計畫案
中，二水準的直交表將被用來產生新的
子代；假若有 Q 個因子（變數），每個
因子有二個水準，則 Ln(2n-1) 之直交表將
被用來進行實驗，其中 n = 2k 表示列與
實驗的數目，k 是大於 1 的整數，2 表
示參與實驗因子的水準數，n-1 表示行與
實驗因子的數目且 Q ≤ n-1。如果 Q < 
n-1，只有前面 Q 行被使用，而其餘的
n-1-Q 行則被忽略。訊號對雜訊比是依
據與目標值之平均均方偏差所推導，在
此應用中僅為了解其大小，所以將方程
式 (1.8) 與 (1.10) 簡化為望大特性是 
ηi = (yi)2 或望小特性是 ηi = (1/yi)2，其中
yi 表示實驗 i 的適應值且 i = 1, 2, …, n，
n 代表實驗次數。然而每個因子中哪個
水準的貢獻度較大可依據下式來決定： 
flE = sum of iη  for factor f at level l, 
(1.11) 
其中 i 是實驗次數的編號，f 是因子的
代號，以及 l 是水準數。 
在傳統基因演算法的交叉運算後，
每次任意選擇二組染色體當成每個因子
有二個水準來進行直交表實驗，目的在
於決定哪個因子應選擇哪個水準，主要
的依據為找出每個因子中貢獻度較大的
水準。例如： 1fE > 2fE ，則因子 f 的最
佳水準為水準 1，也就是來自第一組的染
色體，如果 1fE < 2fE ，則因子 f 的最佳
水準為水準 2。所有因子的最佳水準被選
定後，則產生一個新的子代。這個經由 n
次實驗所產生的新子代擁有相當好的適
應值，可與執行 2Q 所獲得的結果相當，
此處之 2Q 為所有實驗的組合次數。 
（四）應用案例一：數學函數優化 
數學函數優化常區分為搜尋極大值
或極小值，其中搜尋極小值之定義如下 
(Leung and Wang, 2001；Gen and Cheng, 
1997)： 
,
),(...,,1,0)(
,...,,2,1,0)( 
tosubject
),(minimize
211
1
uxl
mmmmixh
mixg
xf
i
i
≤≤
+=+==
=≤ (1.12) 
其中 f(x) 是目標函數，gi(x) ≤ 0 是不等
式函數的限制條件，hi(x) = 0 是等式函
數的限制條件，x = (x1, x2, .., xi,…,xN) 是
一組變數在 Nℜ 中的向量組合， l = (l1, 
l2, .., li, .., lN) 與 u = (u1, u2, .., ui, .., uN) 
是 x 的解空間範圍。 
為驗證一個新的演算法的可行性，
許多研究者  (如 Renders and Bersini, 
1994; Michalewicz, 1996; Gen and Cheng, 
1997; Yen and Lee, 1997; Chellapilla, 
1998; Wang, 2001; Angelov, 2001; Leung 
and Wang, 2001; Dai et al., 2002) 皆利用
表 3 之著名數學函數來測試其性能，其
中 N=30 或 100（亦即分別具有 30 個或
100 個設計變數）。因此本研究亦利用表
3 之數學函數來測試所開發之演算法的
性能與強健性，並與以上所提研究者的
結果，來互相比較，並評估本研究計畫
案所發展之演算法的效能。 
（五）應用案例二：數位 IIR 濾波器最
佳化設計 
在參數設計最佳化的應用例亦常見
於數位信號處理之濾波器參數設計，本
研究利用數位無限脈衝響應  (Infinite 
Impulse Response, IIR) 濾波器之設計問
 9
濾波器 (Bandpass Filter, BP)、與帶止通
濾波器 (Bandstop Filter, BS)。以上四種
濾波器之設計限制條件在通帶與止帶的
頻率範圍如表 4所述，且Tang et al. (1998) 
所設計之串接式的數位濾波器如下所
述： 
)6580.0(
)6884.0(0386.0)(LP −
+=
z
zzH  
,
)7122.03628.1(
)8732.00380.0(
2
2
+−
+−×
zz
zz  (1.20) 
)3963.0(
)4767.0(1807.0)(HP +
−=
z
zzH  
,
)6411.01948.1(
)9136.09036.0(
2
2
++
++×
zz
zz  (1.21) 
)0592.0)(0497.0(
)9033.0)(8846.0(077.0)(BP −+
+−=
zz
zzzH  
)5371.05505.0(
)8964.00498.0(
2
2
+−
−−×
zz
zz  
,
)5399.05551.0(
)9788.0031.0(
2
2
++
−+×
zz
zz     (1.22) 
與
)4872.05771.0(
)9915.04230.0(4919.0)( 2
2
BS ++
++=
zz
zzzH  
.
)4838.05897.0(
)9953.04412.0(
2
2
+−
+−×
zz
zz
  (1.23) 
本案例為參數設計最佳化問題中之
數位 IIR 濾波器設計，屬於相當複雜的
多變數與多目標最佳化問題，而且目標
與目標之間經常互相違背，如何建立一
套好的演算法，來設計出符合各目標之
最佳 IIR 濾波器，是每個研究者努力的
目標。本研究案利用所開發之演算法來
達到所期望之設計目標，而且在性能上
具有優於先前研究者所提演算法之效
益。 
（六）強健性最佳智能演算法 – 針對數
值類的問題 
本計畫開發之強健性最佳智能演算
法，係結合傳統基因演算法之強大全域
搜尋功能與田口實驗法系統性開發最佳
新子代的能力。田口實驗法被加入在傳
統基因演算法的交叉與突變之間，此目
的在於將田口實驗法之系統推理能力與
交叉演算結合，來有效的選取較好的基
因產生新的子代，如此可強化基因演算
法的能力，由於田口實驗法的加入，使
得強健性最佳智能演算法可擁有穩健與
快速收斂的特質。研究開發之強健性最
佳智能演算法流程圖如圖 1 所示。 
 
第二年度 
第二年度以組合最佳化的問題之排
程問題，來驗證強健性最佳智能演算法
的通用性，組合最佳化問題的研究對象
，其解空間為離散變數狀態。 
（一）基因演算法 – 針對排程類的問題 
排程問題並非單純之連續數值求
解，而是非數值類的離散且多限制條件
之排序問題。為應付此非數值類問題，
在使用基因演算法時，需以符號編碼來
因應，且在交叉與突變方式亦不同於數
值類的問題，詳細說明如下： 
初始群體的產生與編碼 
本研究以工件搭配加工次序為基礎
的 符 號 編 碼 描 述 法 
(Job-Operation-Based Representation, 
JOBP)，來表示一組染色體，進而產生初
始群體。此編碼方式可視為間接編碼，
其優點為所產生的染色體所代表的排程
順序，絕對合理正確，可解決一般直接
編碼方式中，需經過校正調整後才可產
生合理的排程順序，如此可節省排程順
序校正之運算時間，加快整體之運算速
度。JOBP 符號編碼範例如下：若有 3 個
工件，每個工件分別有 3 個加工次序，
則假設其中一組符號編碼向量 OP = {1, 
1, 1, 2, 2, 2, 3, 3, 3} = {op11, op12, op13, 
op21, op22, op23, op31, op32, op33}，其中 op11 
= [1, 1, 3, 10]、op12 = [1, 2, 2, 8]、op13 = [1, 
3, 1, 9]、op21 = [2, 1, 2, 5]、…等。OP 的
第一個基因 “1” 是代表第 1 個工件的第
1 個加工次序，且在第 3 台機器上加工，
加工時間為 10 個單位時間；OP 的第二
個基因 “1” 是代表第 1 個工件的第 2 個
 11
先在機台h 加工，然後再到機台k
加工，則限制條件如下： 
,ihiik ctc k ≥−       (2.1) 
(2)對一個工作機台上工作時間不可
重疊的限制： 
對於二個工件i 與j，需在同
一機台k在加工，假如工件i優先於
工件j，則限制條件如下： 
.jkikjk tcc ≥−      (2.2) 
因此，零工式排程最佳化目標為最小化
在 瓶 頸 機 台 上 之 最 長 處 理 時 間 
(Makespan)，如下所述： 
(2.3) 
許多以基因演算法為基礎的研究者
在來解決零工式的排程問題，大多以
Fisher-Thompson 所設計的排程問題來驗
證其演算法的優劣，本研究亦以著名之
Fisher-Thompson 的 10 個工件對 10 台機
器與 20 個工件對 5 台機器的案例來驗證
所發展演算法之性能，並與目前研究成
果最完整且最好之Tsujimura et al. (2001) 
的結果做一比較。 
（四）強健性最佳智能演算法 – 針對排
程類的問題 
本計畫開發之強健性最佳智能演算
法，為應付此非數值類之排程最佳化問
題，基本架構上雖與求解數值類最佳化
問題相似，但在使用基因演算法時，需
以符號編碼來因應，且在交叉與突變方
式亦不同於數值類最佳化的問題。研究
開發之排程類強健性最佳智能演算法流
程圖如圖 2 所示。 
 
第三年度 
第三年度則探討實際允差設計的應
用面，解決設計參數具有容許誤差之具
允差的參數最佳化問題，以實際之電子
電路設計等問題來進一步驗證此演算法
的實用性。 
（一）允差（容差）最佳化設計 
一般在參數設計最佳化的問題上，
皆假設所得的參數在應用過程中皆可精
準實現或維持不變，但實際在工程應用
上，可能因為製造技術、成本考量、環
境因素、元件老化、機器老舊、…等原
因，使得參數在應用過程中會有所變
化，若所遭遇的應用系統對於參數的改
變相當敏感時，會有失之毫釐差之千里
的結果，所以，為因應如此的情況，需
在參數最佳設計過程中就必須同時考量
參數變化的因素，也就是需考量強健參
數設計。在此，亦對 “強健性” 做一說
明，所謂強健性方法即利用此方法經過
多次執行，所得結果之標準差很小，也
就是數據集中度很高；此外，所謂強健
參數設計即設計所得之參數在使用過程
中有些許的變化，對系統性能影響不
大。在允差設計最佳化問題中，本研究
再加入強健參數設計法，進一步強化強
健性最佳智能演算法，使此演算法之強
健性可兼顧如上所述之強健性方法與強
健參數設計，讓此演算法之應用層面除
了原有之無允許誤差之參數設計外，擴
及到有允差設計之最佳化問題。允差設
計最佳化問題的描述如下： 
,oftolerancethetosubject
,]},[|)({optimize
xx
ulxxg
Δ
∈
(3.1) 
其中 g(x) 是一個目標函數， x = (x1, x2 .., 
xi,…,xn) ∈ nℜ 是一組變數在 Nℜ 中 n 個
向量的組合， Δx 是 x 的容許誤差， l = 
(l1, l2, .., li, .., ln) 與 u = (u1, u2, .., ui, .., un) 
是 x 的解空間範圍。 
在實際設計的考量中，設計的目標
值與誤差的大小應一併被考量，也就是
除了達到最佳的目標值外，由於參數變
動所產生的容許誤差能最小。因此，(3.1) 
式被重新描述如下： 
,oftolerancethetosubject(g(x))minimize
and]},[|)({optimize
xx
ulxxg
Δ
∈
δ
{ }{ }
,...,,2,1  and  ...,,2,1,  ,
,...,,2,1,  and  ...,,2,1  ,  tosubject
maxmaxminimize
11
MkNjitcc
MkhNictc
c
jkikjk
ihikik
ikNiMk
==≥−
==≥−
≤≤≤≤
 13
IEEE International Conference on 
Systems, Man, and Cybernetics, Tucson, 
Arizona, Vol. 4, pp. 2546 –2551. 
2. Angelov, P., 2001, “Supplementary 
Crossover Operator for Genetic 
Algorithms Based on the 
Center-of-Gravity Paradigm”, Control 
and Cybernetics, Vol. 30, pp. 159-176. 
3. Bazaraa, M., J. Jarvis, and H. Sherali, 
1990, Linear Programming and 
Network Flows, John Wiley and Sons, 
New York. 
4. Biegel, J. E. and J. J. Davern, 1990, 
“Genetic Algorithms and Job Shop 
Scheduling”, Computers and Industrial 
Engineering, pp. 81-91. 
5. Blackstone, J. H., D. T. Philips, and G. 
L. Hogg, 1982, “A State of the Art 
Survey of Dispatching Rules for 
Manufacturing Job Shop Operations”, 
International Journal of Production 
Research, Vol. 20, pp. 27-45. 
6. Campbell, H. G., R. A. Dudek, and M. 
L. Smith, 1970, “A Heuristic Algorithm 
for the n Job m Machine Sequencing 
Problem”, Management Science, Vol. 
16, pp. 630-637. 
7. Carlier, J, 1978, “Ordonnancements A 
Contraintes Disjonctive”, Operations 
Research, Vol. 12, pp. 333-351. 
8. Chellapilla, K., 1998, “Combining 
Mutation Operators in Evolutionary 
Programming”, IEEE Trans. on 
Evolutionary Computation, Vol. 2, pp. 
91-96. 
9. Chen, C. L., R. V. Neppalli, and N. 
Aljaber, 1996, “Genetic Algorithms 
Applied to the Continuous Flow Shop 
Problem”, Computers and Industrial 
Engineering, Vol. 30, pp. 919-929. 
10. Chen, C. L., V. S. Vempati, and N. 
Aljaber, 1995, “An Application of 
Genetic Algorithms for Flow Shop 
Problem”, European Journal of 
Operational Research, Vol. 80, pp. 
389-396. 
11. Chou, J. H., S. H. Chen, and J. J. Li, 
2000, “Application of Taguchi-Genetic 
Method to Design Optimal Grey-Fuzzy 
Controller of a Constant Turning Force 
System”, J. of Materials Processing 
Technology, Vol. 105, pp. 333-343. 
12. Cortelazzo, G. and M. R. Lightner, 
1984, “Simultaneous Design in Both 
Magnitude and Group-Delay of IIR 
and FIR Filters Based on Multiple 
Criterion Optimization”, IEEE Trans. 
Acoustics, Speech, and Signal 
Processing, Vol. ASSP-32, pp. 
949-967. 
13. Dai, X. M., Z. G. Chen, R. Feng, X. F. 
Mao, and H. H. Shao, 2002, 
“Improved Algorithm of Pattern 
Extraction Based Mutation Approach 
to Genetic Algorithm”, J. of Shanghai 
Jiaotong University, Vol. 36, pp. 
1158-1160. 
14. Daniels, R. W., 1974, Approximation 
Methods for Electronic Filter Design, 
New York: McGraw-Hill. 
15. Davis, L., 1989, “Adapting Operator 
Probabilities in Genetic Algorithms”, 
Proc. of the International Conference 
on Genetic Algorithms ICGA 89, San 
Mateo, pp. 61-69. 
16. Deczky, A. G., 1976, “Synthesis of 
recursive digital filters using the 
minimum p-error criterion”, in: 
Selected Papers in Digital Signal 
Processing, II DSP Committee, IEEE 
Acoust. Speech Signal Process. Soc., 
IEEE Press, New York, pp. 142-148. 
17. Deczky, A. G., 1972, “Synthesis of 
recursive filters using the minimum 
p-error criterion”, IEEE Trans. Audio 
Electroacoust., Vol. AU-20, pp. 
257-263. 
18. Femia, N. and G. Spagnuolo, 2000, 
“True Worst-Case Circuit Tolerance 
Analysis Using Genetic Algorithms 
and Affine Arithmetic”, IEEE Trans. 
on Circuits and Systems - I, Vol. 47, pp. 
1285-1296. 
 15
37. Kafri, W. S., 1997, “Phase and Delay 
Approximation for 1-D Digital IIR 
filter in the ∞L  norm”, Signal 
Processing, Vol. 57, pp. 163-175. 
38. Kumar N. S. H. and G. Srinivasan, 
1996, “A Genetic Algorithm for Job 
Shop Scheduling – A Case Study”, 
Computers in Industry, Vol. 31, pp. 
155-160. 
39. Lam, H. Y.-F., 1979, Analog and 
Digital Filters: Design and Realization, 
Englewood Cliffs, NJ: Prentice-Hall. 
40. Lang, M., 1992, “Optimal Weighted 
Phase Equalization According to the 
∞L -norm”, Signal Processing, Vol. 27, 
pp. 87-98. 
41. Leung, Y. W. and Y. Wang, 2001, “An 
Orthogonal Genetic Algorithm with 
Quantization for Global Numerical 
Optimization”, IEEE Trans. on 
Evolutionary Computation, Vol. 5, pp. 
41-53. 
42. Li, J and F. Yin, 1996, “Genetic 
Optimization Algorithm for Designing 
IIR Digital Filters”, Journal of China 
Institute of Communication, pp. 1-7. 
43. Marven, C. and G. Ewers, 1997, A 
Simple Approach to Digital Signal 
Processing, John Wiley and Sons, New 
York. 
44. Michalewicz, Z., 1996, Genetic 
Algorithms + Data Structures = 
Evolution Programs, Springer-Verlag, 
Berlin. 
45. Montgomery, D. C., 1991, Design and 
Analysis of Experiments, Wiley, New 
York. 
46. Nawaz, M., E. E. Enscore, and I. Ham, 
1983, “A Heuristic Algorithm for the 
m-Machine, n-Job Flow Shop 
Sequencing Problem”, OMEGA, 
International Journal of Management 
Science, Vol. 11, pp. 91-95. 
47. Ng, S. C., C. Y. Chung, S. H. Leung, 
and A. Luk, 1994, “Fast Convergent 
Genetic Search for Adaptive IIR 
Filtering”, Proc. IEEE International 
Conference on ASSP, Adelaide, South 
Australia, Vol. 3, pp. 105-108. 
48. Ono, I., M. Yamamura and S. 
Kobayashi, 1996, “A Genetic 
Algorithm for Job-Shop Scheduling 
Problem Using Job-Based Order 
Crossover”, Proc. of the IEEE 
International Conference on 
Evolutionary Computation, Nagoya, 
pp. 547-552. 
49. Owadally, M. A. and J. Greene, 1998, 
“Evolutionary optimization in the 
search for intrinsically robust circuit 
designs”, Proceedings. ISIE '98. IEEE 
International Symposium on Industrial 
Electronics, Pertoria, South Africa, 
vol.1, pp. 182 -185. 
50. Palmer, D. S., 1965, “Sequencing Jobs 
through a Multi-stage Process in the 
Minimum Total Time – A Quick 
Method of Obtaining a Near 
Optimum”, Operations Research 
Quarterly, Vol. 16, pp. 101-107.  
51. Park, S. H., 1996, Robust Design and 
Analysis for Quality Engineering, 
Chapman & Hall, London. 
52. Phadke, M. S., 1989, Quality 
Engineering Using Robust Design, 
Prentice-Hall, New Jersey. 
53. Reeves, C., 1995, “A Genetic 
Algorithm for Flow Shop Sequencing”, 
Computers and Operations Research, 
Vol. 22, pp. 5-13. 
54. Renders, J. and H. Bersini, 1994, 
“Hybridizing Genetic Algorithms with 
Hill-Climbing Methods for Global 
Optimization: Two Possible Ways”, 
Proc. of the First IEEE Conf. on 
Evolutionary Computation, Florida, pp. 
312-317. 
55. Ross, P. J., 1989, Taguchi Techniques 
for Quality Engineering, McGraw-Hill, 
Singapore.  
56. Shi, G., 1997, “A Genetic Algorithm 
Applied to a Classic Job-Shop 
 17
 
 
 
表 1.  L8(27) 直交表 
因子個數 實驗 
次數 
1 2 3 4 5 6 7 
1 1 1 1 1 1 1 1 
2 1 1 1 2 2 2 2 
3 1 2 2 1 1 2 2 
4 1 2 2 2 2 1 1 
5 2 1 2 1 2 1 2 
6 2 1 2 2 1 2 1 
7 2 2 1 1 2 2 1 
8 2 2 1 2 1 1 2 
 
 
 
表 2.  L9(34) 直交表 
因子個數 實驗 
次數 
1 2 3 4 
1 1 1 1 1 
2 1 2 2 2 
3 1 3 3 3 
4 2 1 2 3 
5 2 2 3 1 
6 2 3 1 2 
7 3 1 3 2 
8 3 2 1 3 
9 3 3 2 1 
 
 
 19
 
 
 
 
 
表 3. 測試函數 (續) 
測試函數 解空間 
( )∑
= ⎟⎟⎠
⎞
⎜⎜⎝
⎛ ×−=
N
i
i
i
xixf
1
2
20
7 sinsin π . [0, π]
N 
( ) ( ) 2
1 1 1
8 cossincossin∑ ∑ ∑
= = =
⎥⎦
⎤⎢⎣
⎡ +−+=
N
i
N
j
N
j
jijjijjijjij xxf ψχωψωχ , 
].,[in number  random a is  and
 ],100,100[in  integers random are  and  where
j
ij
ππω
ψχ
−
−ij  
[-π, π]N 
( )∑
=
+−=
N
i
iii xxxN
f
1
24
9 516
1 . [-5, 5]N 
( ) ( )[ ]∑−
=
+ −+−=
1
1
22
1
2
10 1100
N
j
jjj xxxf . [-5, 10]N 
∑
=
=
N
i
ixf
1
2
11 . [-100, 100]N 
[ )∑
=
+=
N
i
ixf
1
4
12 1 ,0random . [-1.28, 1.28]N 
∏∑
==
+=
N
i
i
N
i
i xxf
11
13 . [-10, 10]N 
∑ ∑
= = ⎟
⎟
⎠
⎞
⎜⎜⎝
⎛=
N
i
i
j
jxf
1
2
1
14 . [-100, 100]
N 
{ }Nixf i ,,2,1      ,max15 K== . [-100, 100]N 
 
 
 21
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 1. 數值類之強健性最佳智能演算法 
實數編碼與隨機產生第一
代群體，並計算其適應值
選擇較佳適應值的個體
，成為下一代新的群體
結合單點交叉與線性
內插法來執行交叉運算
利用線性內插法
來執行突變運算
利用輪盤法來執行選擇運算
判斷所設定的停
止條件是否符合？
是
否
顯示最佳適應值與個體
計算與排序母代與突
變運算後子代之適應值
開始
結束
A
B
產生新的子代群體
 23
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 2. 排程類之強健性最佳智能演算法
符號編碼與隨機產生第一
代群體，並計算其適應值
選擇較佳適應值的個體
，成為下一代新的群體
交叉方法採用分段式之
基因間兩兩互換的方法
利用兩兩互換法
來執行突變運算
利用輪盤法來執行選擇運算
判斷所設定的停
止條件是否符合？
是
否
顯示最佳適應值與個體
計算與排序母代與突
變運算後子代之適應值
開始
結束
A
B
產生新的子代群體
 25
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 3. 允差設計類之強健性最佳智能演算法 
實數編碼與隨機產生第一
代群體，並利用三水準直
交表，來計算其平均適應值
選擇較佳適應值的個體
，成為下一代新的群體
結合單點交叉與線性
內插法來執行交叉運算
利用線性內插法
來執行突變運算
利用輪盤法來執行選擇運算
判斷所設定的停
止條件是否符合？
是
否
顯示最佳適應值與個體
計算與排序母代與突
變運算後子代之適應值
開始
結束
A
B
產生新的子代群體
IEEE TRANSACTIONS ON EVOLUTIONARY COMPUTATION, VOL. 8, NO. 4, AUGUST 2004 365
Hybrid Taguchi-Genetic Algorithm for Global
Numerical Optimization
Jinn-Tsong Tsai, Tung-Kuan Liu, and Jyh-Horng Chou, Senior Member, IEEE
Abstract—In this paper, a hybrid Taguchi-genetic algorithm
(HTGA) is proposed to solve global numerical optimization
problems with continuous variables. The HTGA combines the
traditional genetic algorithm (TGA), which has a powerful global
exploration capability, with the Taguchi method, which can exploit
the optimum offspring. The Taguchi method is inserted between
crossover and mutation operations of a TGA. Then, the systematic
reasoning ability of the Taguchi method is incorporated in the
crossover operations to select the better genes to achieve crossover,
and consequently, enhance the genetic algorithm. Therefore,
the HTGA can be more robust, statistically sound, and quickly
convergent. The proposed HTGA is effectively applied to solve
15 benchmark problems of global optimization with 30 or 100
dimensions and very large numbers of local minima. The com-
putational experiments show that the proposed HTGA not only
can find optimal or close-to-optimal solutions but also can obtain
both better and more robust results than the existing algorithm
reported recently in the literature.
Index Terms—Genetic algorithm (GA), numerical optimization,
Taguchi method.
I. INTRODUCTION
THE ALGORITHMS for global optimization problems areof increasing importance in modern engineering design
and systems operation in various areas. In global optimization
problems, the particular challenge is that an algorithm may be
trapped in the local optima of the objective function when the
dimension is high and there are numerous local optima [12]. On
the other hand, among the existing optimization algorithms, the
genetic algorithm (GA) has received considerable attention re-
garding its potential as a novel optimization technique for com-
plex problems and has been successfully applied in various areas
[7], [8]. The main specific feature of the GA as an optimization
method is its implicit parallelism, which is a result of the evolu-
tion and the hereditary-like process. Initially, improvements in
the GA have been sought in the optimal proportion and adap-
tation of the main parameters, namely probability of mutation,
probability of crossover, population size, and crossover oper-
ator [6], [9]. More recently, attention has shifted to breeding
[1]. Therefore, in recent years, some researchers [1], [3], [5], [7],
[12], [14], [17], [20], [22] have proposed various improved-GAs
Manuscript received December 1, 2002; revised July 4, 2003 and November
18, 2003. This work was supported in part by the National Science Council,
Taiwan, R.O.C., under Grant NSC93-2218-E327-001.
The authors are with the Institute of Engineering Science and Technology,
Department of Mechanical and Automation Engineering, National Kaoh-
siung First University of Science and Technology, Yenchao, Kaohsiung 824,
Taiwan, R.O.C. (e-mail: jim@mail.mirdc.org.tw; tkliu@ccms.nkfust.edu.tw;
choujh@ccms.nkfust.edu.tw).
Digital Object Identifier 10.1109/TEVC.2004.826895
to solve global optimization problems with 30 or more dimen-
sions, where the improvements in the GA are to seek the op-
timal breeding conditions (process of forming new trial chromo-
somes at each epoch). Here, it should be noted that, among these
proposed improved-GAs, it can be seen that, for 15 benchmark
problems of global optimization with 30 or 100 dimensions and
very large numbers of local minima, the algorithm presented by
Leung and Wang [12], which is named the orthogonal genetic
algorithm with quantization (OGA/Q), not only can find optimal
or close-to-optimal solutions but also can give more robust and
significantly better results than those other improved-GAs pre-
sented by Renders and Bersini [17], Michalewicz [14], Gen and
Cheng [7], Yen and Lee [22], Chellapilla [3], Wang [20], An-
gelov [1], and Dai et al. [5]. The more robust results mean that
the function values, which are obtained by using the OGA/Q
[12], have smaller standard deviations than those obtained by
using both the traditional GA (TGA) [7] and the improved-GAs
presented by Renders and Bersini [17], Michalewicz [14], Gen
and Cheng [7], Yen and Lee [22], Chellapilla [3], Wang [20],
Angelov [1] and Dai et al. [5].
The Taguchi method, a robust design approach, uses many
ideas from statistical experimental design for evaluating and
implementing improvements in products, processes, and equip-
ment. The fundamental principle is to improve the quality of
a product by minimizing the effect of the causes of variation
without eliminating the causes. The two major tools used in the
Taguchi method are: 1) signal-to-noise ratio (SNR) which mea-
sures quality and 2) orthogonal arrays which are used to study
many design parameters simultaneously [13], [15], [16], [18],
[19], [21]. Chou (the third author of this paper) and his asso-
ciates have applied the Taguchi method to improve the perfor-
mance of GA [4], [10], [11]. Chou and his associates used the
Taguchi method to find the optimal operating parameters (e.g.,
population size, crossover rate, mutation rate, and crossover op-
erator) in the GA such that the efficiency of the GA can be
promoted. In order to seek the optimal breeding (process of
forming new trial chromosomes at each epoch) in the GA such
that the efficiency of the GA can be further promoted, the pur-
pose of this paper is to propose another new robust approach,
which is motivated by the work of the third author [4]. It is
named the hybrid Taguchi-genetic algorithm (HTGA) and can
be used to solve global numerical optimization problems with
continuous variables. The HTGA combines the TGA [7] with
the Taguchi method [13], [15], [16], [18], [19], [21]. In the
HTGA, the Taguchi method is inserted between crossover and
mutation operations. Then, the systematic reasoning ability of
the Taguchi method is incorporated in the crossover operations
to select better genes to tailor the crossover operations in order to
1089-778X/04$20.00 © 2004 IEEE
TSAI et al.: HYBRID TAGUCHI-GENETIC ALGORITHM FOR GLOBAL NUMERICAL OPTIMIZATION 367
repetitive data. The SNR transforms several repetitions into one
value, which reflects the amount of variation present and the
mean response. There are several SNRs available depending
on the type of characteristic: continuous or discrete; nom-
inal-is-best, smaller-the-better, or larger-the-better. Here, we
will only discuss the continuous case when the characteristic
is smaller-the-better or larger-the-better. Further details can
be found in the books presented by Phadke [16], Ross [18],
Montgomery [13], Park [15], Taguchi et al. [19], and Wu [21].
In the case of smaller-the-better characteristic, suppose that
we have a set of characteristics . Then, the natural
estimate is
(2.3)
where denotes the mean squared deviation from the target
value of the quality characteristic. Taguchi recommends using
the common logarithm of this SNR multiplied by 10, which ex-
presses the ratio in decibels (dB); this has been used in commu-
nications for many years. To be consistent with its application
in engineering, the value of the SNR is intended to be large
for favorable situations, and we use the following transforma-
tion for the smaller-the-better characteristic:
(2.4)
In the case of larger-the-better characteristic, similar to the
smaller-the-better characteristic, the natural estimate is
(2.5)
The corresponding SNR becomes
(2.6)
which is also measured in decibels.
Example 1: Suppose we have two sets of data {32, 36, 37,
38, 40} and {30, 34, 38, 39, 42}. Find the SNRs for each of two
types of quality characteristic.
Solution:
(a) Smaller-the-better case. From (2.4), we get that for the
first set of data
(2.7a)
and for the second set of data
(2.7b)
(b) Larger-the-better case. From (2.6), we have that for the
first set of data
(2.8a)
and for the second set of data
(2.8b)
The larger the numerical value of (2.7) or (2.8) is, the more
favorable the situation is.
III. HYBRID TAGUCHI-GENETIC ALGORITHM FOR GLOBAL
NUMERICAL OPTIMIZATION
Here, we describe how to solve global numerical optimization
problems with continuous variables by using the HTGA. The
details are as follows.
A. Generation of Initial Population
In the real coding representation, each chromosome is en-
coded as a vector of floating-point numbers, with the same
length as the vector of decision variables. The real coding rep-
resentation is accurate and efficient because it is closest to the
real design space, and, moreover, the string length is the number
of design variables. However, binary substrings representing
each variable with the desired precision are concatenated to
represent an individual, the resulting string encoding a large
number of design variables would wind up a huge string length.
For example, for 100 variables with a precision of six digits,
the string length is about 2000. The genetic algorithm would
perform poorly for such design problems.
We use a vector as a chromosome
to represent a solution to the optimization problem. Initializa-
tion procedure produces chromosomes, where denotes
the population size, by the following algorithm.
Algorithm
Step 1) Generate a random value , where
.
Step 2) Let, , where and
are the domain of . Repeat
times and produce a vector
.
Step 3) Repeat the above steps times
and produce initial feasible
solutions.
Remark 1: A random value is selected based on the preci-
sion requirement of a solution. If a solution is a low-precision
TSAI et al.: HYBRID TAGUCHI-GENETIC ALGORITHM FOR GLOBAL NUMERICAL OPTIMIZATION 369
TABLE II
GENERATING A BETTER CHROMOSOME FROM TWO CHROMOSOMES BY USING THE TAGUCHI METHOD
the optimum level for each factor. Take factor A and factor B as
examples
and
The optimal level of each factor is decided by the larger value
of either or , where or . For example, the
optimal level is level 2, whose value is 0.0, for factor A, owing to
; the optimal level is also level 2, whose value is 0.0,
for factor B, owing to . The optimal chromosomes
are thus generated, as given in Table II. Obviously, the func-
tion value of an optimal chromosome as generated by Taguchi
method is 0.0. That is much better than the original values for
chromosomes and , in which and ,
respectively. It is obvious that, instead of executing all com-
binations of factor levels, the Taguchi method can offer an effi-
cient approach toward finding the optimal chromosome by only
executing eight experiments.
D. Mutation Operation
The basic concept of mutation operation is also derived
from convex set theory [2], [7]. Two genes in a single chro-
mosome are randomly chosen to execute the mutation of
convex combination. The method is designed to enhance
fine-tuning capabilities. When the designed variables converge
at the same objective value, the level of mutation can be in-
creased. The reason why the same value can be obtained is
that the convex combination (3.3) given below is calculated
to make the value of two genes closer stepwise. For a given
, if the elements and
are randomly selected for mutation, the resulting offspring
is . The two new genes
and are
(3.3)
E. Hybrid Taguchi-Genetic Algorithm (HTGA)
The HTGA combines the TGA with the Taguchi method. The
Taguchi method is inserted between crossover and mutation op-
erations of a TGA. Then, the systematic reasoning ability of the
Taguchi method is incorporated in the crossover operations to
select the better genes to achieve crossover, and consequently
enhance the GA. The steps of the HTGA approach are depicted
in Fig. 1 and are described as follows.
Step 0) Parameter setting.
• Input: population size , crossover rate ,
mutation rate , and number of genera-
tions.
• Output: the number of function evaluations
and function value.
Step 1) Initial population is generated by the Algorithm
given above. The function values of the popula-
tion are then calculated via the test function. The
number of function calls is calculated times.
Step 2) Selection operation using the roulette wheel
approach.
Step 3) Crossover operation. The probability of crossover
is determined by crossover rate .
Step 4) Select a suitable two-level orthogonal array
for matrix experiments. The orthogonal arrays
and are used for 30 and 100
dimensions, respectively.
TSAI et al.: HYBRID TAGUCHI-GENETIC ALGORITHM FOR GLOBAL NUMERICAL OPTIMIZATION 371
times, where
is the number of execution generation, then go to
Step 16. Otherwise, return to Step 2 and continue
through Step 15.
Step 16) Display the number of function calls, the optimal
chromosome, and the optimal fitness value.
Example 3: Here, we provide an illustrative example to show
how the HTGA works. The test function is
chosen and would be minimized. Suppose that there are seven
dimensions (factors) and the feasible solution space is .
The steps of the HTGA approach are shown as follows.
Step 0) Parameter setting: population size , crossover
rate , and mutation rate .
Step 1) Initial population is randomly generated as fol-
lows. For example
Step 2) Selection operation. For example
Step 3) Crossover operation.
For example, two chromosomes and are
selected for crossover, and the cut-point is ran-
domly selected at the third gene as following:
Based on (3.1) and a random value ,
the resulting offspring by exchanging the right
parts of their parents after the third gene and cal-
culating the linear combinations at the cut-point
genes would be
The probability of crossover is set as , so
we expect that, on average, of chromosomes
undergo crossover.
Step 4) The orthogonal array as shown in Table I
is chosen, because seven dimensions (factors) are
equal to seven columns of .
Step 5) Choose randomly two chromosomes at a time to
execute matrix experiments. Suppose two chro-
mosomes and are chosen at this experiment.
Steps 6-8) The steps are similar to those of Example 2.
Step 9) Repeat Steps 5 through 8 until the expected
number has been met.
Step 10) The population via the Taguchi method is gener-
ated.
For example
Step 11) Mutation operation. The probability of mutation
is determined by mutation rate . For example,
the chromosome is selected for mutation, and
the two points are randomly selected at the third
and fifth genes as follows:
Based on (3.3) and a random value ,
the resulting offspring by calculating the linear
combinations at the third and fifth genes would
be
Step 12) Offspring population is generated. For example
Step 13) Sort the fitness values in increasing order among
parents and offspring populations. For example
Step 14) Select the better chromosomes as parents of
the next generation.
Step 15) Has the stopping criterion been met? If yes, then
go to Step 16. Otherwise, return to Step 2 and
continue through Step 15.
Step 16) The optimal chromosome and fitness value are
and
TSAI et al.: HYBRID TAGUCHI-GENETIC ALGORITHM FOR GLOBAL NUMERICAL OPTIMIZATION 373
TABLE IV
COMPARISONS BETWEEN HTGA AND OGA/Q UNDER THE SAME EVOLUTIONARY ENVIRONMENTS
not only can find optimal or close-to-optimal solutions but also
can give more robust and significantly better results than those
other improved GAs proposed by Renders and Bersini [17],
Michalewicz [14], Gen and Cheng [7], Yen and Lee [22], Chel-
lapilla [3], Wang [20], Angelov [1], and Dai et al. [5]. There-
fore, in this section, we adopt the well-known test functions in
Table III to test our proposed HTGA, and to compare the per-
formances of our proposed HTGA with the performances of
OGA/Q presented by Leung and Wang [12].
In this paper, we execute our proposed HTGA to solve these
test functions in Table III with the following dimensions: 1) the
problem dimension for and is 30 and 2) the
problem dimension for is 100. In this manner, these
test functions have so many local minima that they are chal-
lenging enough for performance evaluation, and the existing re-
sults reported by Leung and Wang [12] can be used for a direct
comparison.
In the work of Leung and Wang [12], the following evolu-
tionary environments are used: the population size is 200, the
crossover rate is 0.1, and the mutation rate is 0.02. In addition,
the execution of the OGA/Q is stopped when the smallest cost
of the chromosomes cannot be further reduced in the succes-
sive 50 generations after 1000 generations. Each test function
was performed in 50 independent runs and the following results
were recorded: 1) the mean number of function evaluations; 2)
the mean function value (i.e., the mean of the function values
was found in the 50 runs); and 3) the standard deviation of the
function values.
In the computational experiments of our proposed HGTA, the
evolutionary parameters are designed in two contrasting cases
for the sake of the comparison with the OGA/Q. In the first
case, the HTGA uses the same evolutionary parameters as those
adopted by the OGA/Q, whereas in the second case the different
sets of evolutionary parameters are used in the HTGA. Note,
TSAI et al.: HYBRID TAGUCHI-GENETIC ALGORITHM FOR GLOBAL NUMERICAL OPTIMIZATION 375
TABLE V
COMPARISONS BETWEEN HTGA AND OGA/Q UNDER DIFFERENT EVOLUTIONARY ENVIRONMENTS
[12] under the same evolutionary environments, except for the
stopping criterion. For each test function, as the stopping crite-
rion is met, the number of generations is much less than 1000.
Some of the convergence results of the test functions are shown
in Fig. 2. The reason why the stopping criterion is redefined can
be clearly seen from Fig. 2. From Table IV, the following can be
observed.
• The proposed HTGA can find optimal or close-to-optimal
solutions.
• For , , , , , and , the proposed HTGA
can give better and closer-to-optimal solutions than the
OGA/Q, and for , , , and , both HTGA
and OGA/Q can give the same optimal or close-to-optimal
solutions.
• Except for the test function , the proposed HTGA gives
smaller standard deviations of function values than the
OGA/Q and, hence, the proposed HTGA has a more stable
solution quality.
• The proposed HTGA requires fewer mean numbers of
function evaluations than the OGA/Q and, hence, the pro-
posed HTGA has a lower computational time requirement.
Furthermore, the execution of the proposed HTGA can be
stopped for each run under the stopping criterion defined above,
so that the standard deviation of function values for each func-
tion except is 0. For the test function , the HTGA can find
a close-to-optimal solution, which is already very close to the
global minimum 0, but the OGA/Q can find closer-to-optimal
solution by using more function evaluations. In other words,
these results in Table IV indicate that the proposed HTGA can,
in general, give better mean solution quality and more stable
solution quality than the OGA/Q.
Now, we turn to study the second case that the different sets of
evolutionary parameters are used in the HTGA. Optimizing the
main parameters of the GA, namely, the population size, prob-
ability of crossover, and probability of mutation, continues to
be a topic of active research even up to this day. The adaptation
of the main parameters can help improve the performance of a
TSAI et al.: HYBRID TAGUCHI-GENETIC ALGORITHM FOR GLOBAL NUMERICAL OPTIMIZATION 377
[6] L. Davis, “Adapting operator probabilities in genetic algorithms,” in
Proc. Int. Conf. Genetic Algorithms ICGA 89, San Mateo, CA, 1989,
pp. 61–69.
[7] M. Gen and R. Cheng, Genetic Algorithms and Engineering De-
sign. New York: Wiley, 1997.
[8] D. E. Goldberg, Genetic Algorithms in Search, Optimization and Ma-
chine Learning. reading: Addison-Wesley, 1989, ch. MA.
[9] J. J. Grefenstette, “Optimization of control parameters for genetic algo-
rithms,” IEEE Trans. Syst. Man Cybern., vol. SMC–16, pp. 122–128,
1986.
[10] C. H. Hsieh, J. H. Chou, and Y. J. Wu, “Taguchi-MHGA method for op-
timizing Takagi-Sugeno fuzzy gain-scheduler,” in Proc. 2000 Automatic
Control Conf., Taipei, Taiwan, 2000a, pp. 523–528.
[11] , “Taguchi-MHGA method for optimizing grey-fuzzy gain-sched-
uler,” in Proc. 6th Int. Conf. Automation Technology, Taipei, Taiwan,
2000b, pp. 575–582.
[12] Y. W. Leung and Y. Wang, “An orthogonal genetic algorithm with quan-
tization for global numerical optimization,” IEEE Trans. Evol. Comput.,
vol. 5, pp. 41–53, Feb. 2001.
[13] D. C. Montgomery, Design and Analysis of Experiments. New York:
Wiley, 1991.
[14] Z. Michalewicz, Genetic Algorithms + Data Structures = Evolution Pro-
grams. Berlin, Germany: Springer-Verlag, 1996.
[15] S. H. Park, Robust Design and Analysis for Quality Engi-
neering. London, U.K.: Chapman & Hall, 1996.
[16] M. S. Phadke, Quality Engineering Using Robust Design. Englewood
Cliffs, NJ: Prentice-Hall, 1989.
[17] J. Renders and H. Bersini, “Hybridizing genetic algorithms with
hill-climbing methods for global optimization: two possible ways,” in
Proc. 1st IEEE Conf. Evolutionary Computation, Orlando, FL, 1994,
pp. 312–317.
[18] P. J. Ross, Taguchi Techniques for Quality Engineering. New York:
McGraw-Hill, 1989.
[19] G. Taguchi, S. Chowdhury, and S. Taguchi, Robust Engineering. New
York: McGraw-Hill, 2000.
[20] L. Wang, Intelligent Optimization Algorithms With Applications. Bei-
jing, China: Tsinghua Univ. Press, 2001.
[21] Y. Wu, Taguchi Methods for Robust Design. New York: ASME, 2000.
[22] J. Yen and B. Lee, “A simplex genetic algorithm hybrid,” in Proc.
IEEE Int. Conf. Evolutionary Computation, Indianapolis, IN, 1997, pp.
175–180.
Jinn-Tsong Tsai received the B.S. and M.S. degrees
in mechanical engineering from the National Sun
Yat-Sen University, Kaohsiung, Taiwan, R.O.C., in
1986 and 1988, respectively. He is currently working
toward the Ph.D. degree in engineering science
and technology at the National Kaohsiung First
University of Science and Technology, Kaohsiung,
Taiwan, R.O.C.
From July 1988 to May 1990, he was a Lecturer
with the Vehicle Engineering Department, Chung
Cheng Institute of Technology, Taiwan. Since July
1990, he has been a Researcher and the Chief of the Automation Control
Section with the Metal Industries Research and Development Center, Taiwan.
His research interests include evolutionary computation, intelligent control and
systems, neural networks, and quality engineering.
Tung-Kuan Liu received the B.S. degree in mechan-
ical engineering from the National Akita University,
Akita, Japan, in 1992 and the M.S. and Ph.D. degrees
in mechanical engineering and information science
from the National Tohoku University, Sendai, Japan,
in 1994 and 1997, respectively.
He is currently an Assistant Professor with the Me-
chanical and Automation Engineering Department,
National Kaohsiung First University of Science and
Technology, Kaohsiung, Taiwan, R.O.C. From Oc-
tober 1997 to July 1999, he was a Senior Manager
with the Institute of Information Industry, Taipei, Taiwan. From August 1999
to July 2002, he was also an Assistant Professor with the Department of Mar-
keting and Distribution Management, National Kaohsiung First University of
Science and Technology. His research and teaching interests include artificial
intelligence, applications of multiobjective optimization genetic algorithms, and
integrated manufacturing and business systems.
Jyh-Horng Chou (M’04–SM’04) received the B.S.
and M.S. degrees in engineering science from the
National Cheng-Kung University, Tainan, Taiwan, in
1981 and 1983, respectively, and the Ph.D. degree
in mechatronic engineering from the National Sun
Yat-Sen University, Kaohsiung, Taiwan, R.O.C., in
1988.
He is currently a Professor and the Chairman of
the Mechanical and Automation Engineering Depart-
ment, National Kaohsiung First University of Science
and Technology, Kaohsiung, Taiwan, R.O.C. From
August 1983 to July 1986, he was a Lecturer with the Mechanical Engineering
Department, National Sun Yat-Sen University. From August 1986 to July 1991,
he was an Associate Professor with the Mechanical Engineering Department
and the Director of the Center for Automation Technology, National Kaohsiung
University of Applied Sciences, Kaohsiung, Taiwan, R.O.C. From August 1991
to July 1999, he was a Professor and the Chairman of the Mechanical Engi-
neering Department, National Yunlin University of Science and Technology,
Taiwan. He has coauthored three books and published more than 135 refereed
journal papers. His research and teaching interests include intelligent systems
and control, computational intelligence and methods, robust control, and quality
engineering.
70 IEEE TRANSACTIONS ON NEURAL NETWORKS, VOL. 17, NO. 1, JANUARY 2006
Fig. 1. Three-layer feedforward neural network.
in the crossover operations to select the better genes to tailor
the crossover operations in order to find the representative
chromosomes to be the new potential offspring. Therefore, the
Taguchi experimental design method can enhance the genetic
algorithms, so that the HTGA approach can be more robust,
statistically sound, and quickly convergent, where “more ro-
bust” means that the standard deviations of the fitness values
are relatively small by using the presented HTGA approach.
This paper is organized as follows. Section II describes
the problem definition and the Taguchi method. The hybrid
Taguchi-genetic algorithm for the three-layer feedforward
neural network design is described in Section III. In Section
IV, the authors first evaluate the performance of the applied
HTGA approach and compare their results with those obtained
from the improved-GA of Leung and Wang [33] for some
well known test functions. Then, they use the HTGA approach
to solve three examples on forecasting the sunspot numbers,
tuning the associative memory, and solving the XOR problem.
They also compare their results with those given by Leung
et al. [10], [19] for the examples on forecasting the sunspot
numbers and tuning the associative memory. Finally, Section V
offers some conclusions.
II. PROBLEM DEFINITION AND TAGUCHI METHOD
In this section, the authors define the problem and describe
the Taguchi method.
A. Problem Definition
The neural networks (NN) [3] for tuning usually have a
fixed structure. The number of connections may be too large
for a given application such that the network structure is un-
necessarily complex and the implementation cost is high. In
this paper, as the works of Leung et al. [10], [19], the authors
consider a multiple-input-multiple-output (MIMO) three-layer
feedforward neural network as shown in Fig. 1, and the number
of hidden nodes is chosen by increasing it from a small number
until the learning performance in terms of fitness value is good
enough. Referring to Fig. 1, the input-output relationship of the
MIMO three-layer feedforward neural network is as following:
(2.1)
where are the outputs which are functions of a variable
are the inputs which are functions of a variable
denotes the number of inputs; denotes the number of the
hidden nodes; denotes the number of outputs; denotes
the weight of the link between the th hidden node and the th
input; denotes the weight of the link between the th output
and the th hidden node; and denote the biases for the
hidden nodes and output nodes, respectively; denotes
the logarithmic sigmoid function:
(2.2)
As in [10], [19], , and denote the switches in links
of the neural network. denotes that the th output is
connected with the th hidden node, whereas denotes
that the th output is not connected with the th hidden node.
denotes that the th hidden node is connected with the
th input, whereas denotes that the th hidden node is not
connected with the th input. and denote that the
biases are connected to the hidden and output layers, whereas
and denote that the biases are not connected to
the hidden and output layers, respectively. It can be seen that the
weights of the links govern the input-output relationship of the
neural network but the switches of the links govern the structure
of the neural network. A number of the input and output neu-
rons are fixed, but a number of the hidden neurons and the links
between neurons are not fixed in the structure of the neural net-
work. However, each input neuron at least has a connection to
the hidden neuron and each hidden neuron at least has a connec-
tion to the output neuron. If the hidden neuron has no connection
to the input neurons, the switch value in links of the neural net-
work is equal to zero.
The three-layer feedforward neural network can be employed
to learn the input-output relationship of an application by using
the HTGA approach. The input-output relationship of the
MIMO three-layer feedforward neural network is described by
(2.3)
where and
are the given inputs and the desired
outputs of an unknown nonlinear function , respectively;
denotes the number of input-output pairs. The fitness func-
tion is defined as follows:
(2.4)
with
72 IEEE TRANSACTIONS ON NEURAL NETWORKS, VOL. 17, NO. 1, JANUARY 2006
and for the second set of data
(2.10b)
b) Larger-the-better case. From (2.9), the authors have that
for the first set of data
(2.11a)
and for the second set of data
(2.11b)
The larger the numerical value of (2.10) or (2.11) is, the more
favorable the situation is.
III. HTGA APPROACH FOR TUNING NEURAL NETWORK
This section describes how to solve the problem of tuning
both network structure and parameters of a three-layer feedfor-
ward neural network by using the HTGA approach. The details
are as follows.
1) Generation of Initial Population: The real coding tech-
nique is applied to solve the problem of tuning both network
structure and parameters of a neural network. In the real coding
representation, each chromosome is encoded as a vector of
floating numbers, with the same length as the vector of decision
variables. For convenience and simplicity, let us denote (3.1),
as shown at the bottom of the page, as the parameter vector
of the three-layer feedforward neural network in (2.1), where
is the number of total weights, biases, and switches with
.
In the practical application, the authors may have some other
restrictions on the parameter vector for some requirements.
The restrictions can be expressed as
for
or for
(3.2)
where denotes the th element of in (3.1); and are
the lower and the upper bounds of , respectively.
Initialization procedure produces chromosomes, where
denotes the population size, by the following algorithm.
Algorithm:
Step 1) Generate a random value , where .
Step 2) Let . Repeat times and
produce a vector .
Step 3) Repeat the above steps times and produce
initial feasible solutions.
2) Generation of Diversity Offspring by Crossover Opera-
tion: The crossover operators used here are one-cut-point op-
erator integrated with arithmetical operator derived from convex
set theory [15], [34], which randomly selects one cut-point, ex-
changes the right parts of two parents, and calculates the linear
combinations in the cut-point genes to generate new offspring.
For example, let two parents be
and . If they are crossed after the
th position, the resulting offspring are
(3.3)
where and are
the domain of , and is a random value, in which .
The crossover operators, and
, are only used to calculate the value of the weights
or biases, whereas the value of the switches in the structure of
neural network is determined based on whether the nodes are
connected to each other.
3) Generation of the Better Offspring by Taguchi
Method: The orthogonal arrays of the Taguchi method
are used to study a large number of decision variables with
a small number of experiments. The better combinations of
decision variables are decided by the orthogonal arrays and
the signal-to-noise ratios. The Taguchi concept is based on
maximizing performance measures called signal-to-noise ratios
by running a partial set of experiments using orthogonal arrays.
In this study, a two-level orthogonal array is used. There are
factors with two levels for each factor. To establish an orthog-
onal array of factors with two levels, let represent
columns and individual experiments corresponding to
the rows, where is a positive integer , and
. If , the first columns are used and
other columns are ignored.
The signal-to-noise ratio refers to the mean-square-de-
viation of objective function. Here, the authors modify (2.7)
and (2.9) of the signal-to-noise ratios for this research. Let
or if the objective function is to be max-
imized (larger-the-better) or minimized (smaller-the-better),
respectively. Let denote the function evaluation value of
experiment and , where is experiment times.
(3.1)
74 IEEE TRANSACTIONS ON NEURAL NETWORKS, VOL. 17, NO. 1, JANUARY 2006
TABLE I
TEST FUNCTIONS
are challenging enough for performance evaluation, and the
existing results reported by Leung and Wang [33] can be used
for a direct comparison. In the work of Leung and Wang
[33], the following evolutionary environments are used: 1) the
population size is 200; 2) the crossover rate is 0.1; and 3) the
mutation rate is 0.02. Each test function was performed in 50
independent runs and the following results were recorded: i)
the mean number of function evaluations; ii) the mean function
value (i.e., the mean of the function values was found in
the 50 runs); and iii) the standard deviation of the function
values.
In the computational experiments of the presented HTGA ap-
proach, the HTGA approach uses the same evolutionary param-
eters as those adopted by the OGA/Q. The authors set up the
stopping criterion under which the execution of the algorithm of
the presented HTGA would be stopped as soon as the smallest
function value of the fitness member of the population is less
than or equal to the mean function value given by the OGA/Q.
In addition, each test function is performed with 50 independent
runs. The mean number of function evaluations, the mean func-
tion value, and the standard deviation of the function values are
all recorded for each test function.
Table II shows the performance comparisons between the pre-
sented HTGA and the OGA/Q given by Leung and Wang [33]
under the same evolutionary environments [29]. Here, the au-
thors discuss the analysis of complexity by using the results of
this example instead of the theory of Vapnik-Chervonenkis di-
mension [40]. From the fewer mean numbers of function evalu-
ations and more stable solution quality, it can be seen that, from
Table II, the HTGA approach compared with other GA-based
methods has a lower computational time requirement, though
it is not proved by the serious mathematical viewpoint. From
Table II, it can be seen that
i) the presented HTGA can find optimal or close-to-op-
timal solutions;
ii) for , and , the presented HTGA can give better
and closer-to-optimal solutions than the OGA/Q, and
for , and , both HTGA and OGA/Q can give
the same optimal or close-to-optimal solutions;
iii) the presented HTGA gives smaller standard deviations
of function values than the OGA/Q, and hence the pre-
sented HTGA has a more stable solution quality;
iv) the presented HTGA requires fewer mean numbers of
function evaluations than the OGA/Q, and hence the
proposed HTGA has a lower computational time re-
quirement.
Furthermore, the execution of the presented HTGA can be
stopped for each run under the stopping criterion, so that the stan-
darddeviationoffunctionvaluesforeachfunction iszero. Inother
words, these results in Table II indicate that the presented HTGA
can give better mean solution quality and more stable solution
quality than the OGA/Q. In addition, the HTGA approach is also
better than those improved-GAs methods presented by Renders
and Bersini [36], Michalewicz [37], Yen and Lee [38], and Chel-
lapilla [39], because that the OGA/Q approach has been shown to
be better than those improved-GAs methods presented by Ren-
ders and Bersini [36], Michalewicz [37], Yen and Lee [38], and
Chellapilla [39]. The additional comparisons and discussions on
the other test functions can be found in the works given by the
authors of this paper [28], [29].
Hence, the authors could conclude that the presented HTGA
approach is very feasible to solve the global numerical opti-
mization problems. After the above demonstrating of capability
for the HTGA approach, the authors use the HTGA approach
76 IEEE TRANSACTIONS ON NEURAL NETWORKS, VOL. 17, NO. 1, JANUARY 2006
TABLE III
RESULTS OF FITNESS VALUES FOR THE EXAMPLE ON FORECASTING THE
SUNSPOT NUMBERS BY USING THE HTGA APPROACH
first 180 years (i.e., ) are used to train the
neural network. Referring to (2.1), the neural network used for
the sunspot numbers forecasting is governed by
(4.1)
In order to obtain the optimal network structure, the algorithm
starts with a small network. The number of hidden nodes is
increased from four to eight and the number of the connection
links is chosen by increasing it from a small number until the
learning performance of network is good enough. In addition,
the fitness function is defined in (2.4), where the is given as
following:
(4.2)
The HTGA approach is employed to tune the parameters and
structure of the three-layer neural network in (4.1). The objec-
tive is to maximize the fitness function. The best fitness value
is one and the worst one is zero. In this example, the lower and
the upper bounds of , and are assumed to be
and 100, respectively. The switch value of , and is
defined to be zero or one, depending on the link connection or
not.
The following evolutionary environments are used by the
presented HTGA approach in this example: the crossover rate
is 0.9, and the mutation rate is 0.1. The best fitness value, the
average fitness value, and the standard deviation among 20
runs for the example on forecasting the sunspot numbers by
using the presented HTGA approach are shown in Table III.
The fitness value defined by trainingerror , the
training error defined by , the
forecasting error defined by , and
the number of links are tabulated in Table IV. The computa-
tional results obtained by using the presented HTGA approach
and the GA-based method given by Leung et al. [10], [19],
respectively, are given in Table IV.
From Table III, it can be seen that the presented HTGA ap-
proach gives very small standard deviations of fitness values,
and thus it is very robust. From the computational results in
Table IV, it can be seen that, for each of the same number of the
hidden nodes, the presented HTGA approach can give the better
fitness values and fewer links than the GA-based method given
by Leung et al. [10], [19]. Referring to Table IV, the best re-
sult is obtained by using the HTGA approach when the number
of hidden node is five. The number of connection links is eight
after learning (the number of links of a fully connected network
is 26 which includes the bias links). It is about 70% reduction of
links. The training error and the forecasting error are 9.146 55
and 13.797 72, respectively. Hence, the authors could conclude
that the HTGA approach has a good performance on tuning both
parameters and structure of the three-layer feedforward neural
network for the example on forecasting the sunspot numbers.
C. Associative Memory
Another application example on tuning an associative
memory is given in this section. In this example, the associative
memory, which maps its input vector into itself, has ten inputs
and ten outputs. Thus, the desired output vector is its input
vector. Fifty input vectors provided by Leung et al. [10], [19]
are used to test the learning performance. Referring to (2.1), the
three-layer feedforward neural network used for the associative
memory is given by
(4.3)
The fitness function is defined in (2.4), where the is given as
following:
(4.4)
The HTGA approach is used to tune the parameters and struc-
ture of the three-layer neural network in (4.3). The objective
is to maximize the fitness function. The best fitness value is
one and the worst one is zero. Here, all parameters in (4.3)
are assumed to be in the same region as that considered in the
example on forecasting the sunspot numbers. In this example,
there are many parameters and numerous local optima so that
this studied problem is challenging enough for evaluating the
performance of the presented HTGA approach and that of the
GA-based method proposed by Leung et al. [10], [19].
In this example, the following evolutionary environments are
used by the presented HTGA approach: The crossover rate is
0.9, and the mutation rate is 0.1. The best fitness value, the av-
erage fitness value, and the standard deviation among 20 runs
for the example on tuning an associative memory by using the
presented HTGA approach are shown in Table V. The computa-
tional results obtained by using the presented HTGA approach
and the GA-based method given by Leung et al. [10], [19] are
given in Table VI.
From Table V, it can be seen that the presented HTGA ap-
proach gives small standard deviations of fitness values, and
thus it is very robust. From the computational results in Table
VI, it can be seen that, for each of the same number of the hidden
78 IEEE TRANSACTIONS ON NEURAL NETWORKS, VOL. 17, NO. 1, JANUARY 2006
TABLE VI
COMPUTATIONAL RESULTS FOR THE EXAMPLE ON TUNING AN ASSOCIATIVE MEMORY
Fig. 3. Neural network of six connection links for the XOR problem.
for the neural network as shown in Fig. 3. The neural network
for the XOR problem is governed by
(4.5)
where is defined in (2.2). In the classification
process, if , the output is one when the
is on and is off, or when the is on and
is off; if , the output is zero when both are
off or both are on. One set of the weights for the suc-
cessful classification is
, where is shown in
Fig. 3.
Therefore, it can be seen that, from the aforementioned result,
the presented HTGA approach can use a smaller neural network
for classifications in the XOR problem.
V. CONCLUSION
In this paper, the HTGA approach has been applied to
solve the tuning problem of both structure and parameters
of the three-layer feedforward neural network. The HTGA
approach is a method of combining the TGA, which have
the merit of powerful global exploration capability, with the
Taguchi method, which can exploit the optimum offspring.
The two-level orthogonal array and the signal-to-noise ratio of
the Taguchi method are used for exploitation. The optimum
chromosome can be easily found by using both experimental
runs and signal-to-noise ratios instead of executing combi-
nations of factor levels, which are all combinations of factor
levels. Moreover, the Taguchi method is also a robust design
approach, which draws on many ideas from statistical exper-
imental design to plan experiments for obtaining dependable
information about variables, so it can achieve the population
distribution closest to the target and make the results robust. In
the presented HTGA approach, the Taguchi method is inserted
between crossover and mutation operations of the TGA. Then,
the systematic reasoning ability of the Taguchi method is in-
corporated in the crossover operations to select the better genes
to achieve crossover, and consequently enhance the genetic
algorithms. The authors use the HTGA approach to solve the
benchmark problems with 30 dimensions. The computational
experiments show that the presented HTGA approach can find
optimal or close-to-optimal solutions, and it is more efficient
than the OGA/Q proposed by Leung and Wang [33] on the
problems studied. Therefore, the presented HTGA approach
possesses the merits of global exploration, fast convergence,
robustness, and statistical soundness [28], [29]. Furthermore,
the authors applied the introduced HTGA approach to solve
three examples on forecasting the sunspot numbers, tuning
an associative memory, and solving the XOR problem. As a
result, a given fully connected three-layer neural network can
be reduced to a partially connected network after learning. This
implies that the cost, in terms of hardware and processing time,
of implementing the compact neural network can be reduced.
In these studied problems on forecasting the sunspot numbers
and tuning an associative memory, there are many parameters
and numerous local optima so that these studied problems
are challenging enough for evaluating the performance of the
presented HTGA approach and that of the GA-based approach
80 IEEE TRANSACTIONS ON NEURAL NETWORKS, VOL. 17, NO. 1, JANUARY 2006
Jinn-Tsong Tsai received the B.S. and the M.S.
degrees in mechanical engineering from National
Sun Yat-Sen University, Taiwan, in June 1986 and
June 1988, respectively, and the Ph.D. degree in
engineering science and technology from National
Kaohsiung First University of Science and Tech-
nology, Taiwan, in June 2004.
He is currently an Assistant Professor of Medical
Information Management Department at Kaohsiung
Medical University, Taiwan. From July 1988 to May
1990, he was a Lecturer at the Vehicle Engineering
Department, Chung Cheng Institute of Technology, Taiwan. From July 1990 to
August 2004, he was a Researcher and the Chief of Automation Control Section
at Metal Industries Research and Development Center, Taiwan. His research in-
terests include evolutionary computation, intelligent control and systems, neural
networks, and quality engineering.
Jyh-Horng Chou (M’04–SM’04) received the B.S.
and the M.S. degrees in engineering science from Na-
tional Cheng-Kung University, Taiwan, in June 1981
and June 1983, respectively, and the Ph.D. degree in
mechatronic engineering from National Sun Yat-Sen
University, Taiwan, in December 1988.
He is currently a Professor and the Vice President
at the National Kaohsiung First University of Sci-
ence and Technology, Taiwan. From August 1983 to
July 1986, he was a Lecturer at the Mechanical Engi-
neering Department, National Sun Yat-Sen Univer-
sity, Taiwan. From August 1986 to July 1991, he was an Associate Professor
at the Mechanical Engineering Department and the Director of the Center for
Automation Technology, National Kaohsiung University of Applied Sciences,
Taiwan. From August 1991 to July 1999, he was a Professor and the Chairman
of Mechanical Engineering Department at National Yunlin University of Sci-
ence and Technology, Taiwan. From August 1999 to September 2004, he was
a Professor and Chairman at the Mechanical and Automation Engineering De-
partment, and from October 2004 to December 2005, he was a Professor and the
Dean of Engineering College at National Kaohsiung First University of Science
and Technology, Taiwan. He has coauthored three books and published more
than 155 refereed journal papers and 135 conference papers. He also holds two
patents (one is in the technology area of automation, and the other one is in the
area of computational intelligence). His research and teaching interests include
intelligent systems and control, computational intelligence and methods, robust
control, and quality engineering.
Dr. Chou received both the Research Award and the Excellent Research
Award from the National Science Council of Taiwan fourteen times. He also
received the 2004 Excellent Project Outcome Award of the Educational Pro-
motion Project on the Integrated Manufacturing and e-Commerce Technology
from the Ministry of Education, Taiwan, the 2005 Outstanding Research Award
from National Kaohsiung First University of Science and Technology, Taiwan,
and the 2005 Outstanding Achievement Award for alumnus graduated from
Engineering Science Department at National Cheng-Kung University, Taiwan.
He is currently an Editorial Member for the Journal of the Chinese Society of
Mechanical Engineers, and an Associate Editor for the International Journal
of Information and Systems Sciences.
Tung-Kuan Liu received the B.S. degree in mechan-
ical engineering from National Akita University,
Japan, in March 1992 and the M.S. and the Ph.D.
degrees in mechanical engineering and information
science from National Tohoku University, Japan, in
March 1994 and March 1997, respectively.
He is currently an Associate Professor at the Me-
chanical and Automation Engineering Department,
National Kaohsiung First University of Science
and Technology, Taiwan. From October 1997 to
July 1999, he was a Senior Manager at the Institute
of Information Industry, Taiwan. From August 1999 to July 2002, he was
also an Assistant Professor at the Department of Marketing and Distribution
Management, National Kaohsiung First University of Science and Technology,
Taiwan. His research and teaching interests include artificial intelligence,
applications of multi-objective optimization genetic algorithms, and integrated
manufacturing and business systems.
1022
Taguchi method to find the optimal operating parameters (e.g.,
population size, crossover rate, mutation rate, and crossover op-
erator) in the GA such that the efficiency of the GA can be
improved. More recently, nevertheless, attention has been shifted
toward the breeding aspects (i.e., the processes of forming new
trial chromosomes at each epoch) in the GA such that the effi-
ciency of the GA can be further improved, as was done in the
works of Leung and Wang [22] and Angelov [23]. More specific-
ally, for instance, can one use the abilities of the Taguchi method
to seek the optimal breeding to efficiently generate optimal off-
spring in establishing an algorithm of even higher performance.
Motivated by our curiosity from this perspective, we for-
mulate a new approach by adding the strategies of the Taguchi
method [13–18] to the TGA. We call our new robust approach
the hybrid Taguchi-genetic algorithm (HTGA), aimed at solving
the Fisher-Thompson benchmark job-shop scheduling problems.
The HTGA approach is a method of combining the TGA with the
Taguchi method. In the HTGA approach, the Taguchi method is
inserted between crossover and mutation operations of the TGA.
Then, the systematic reasoning ability of the Taguchi method is
incorporated in the crossover operations to systematically select
better genes to tailor the crossover operations in order to gen-
erate the representative chromosomes to be the new potential
offspring. Therefore, the Taguchi experimental design method
can enhance genetic algorithms, such that the HTGA approach
can possess the abilities of global exploration and robustness.
This paper is organized as follows: Sect. 2 describes the prob-
lem statement and the Taguchi method. The hybrid Taguchi-
genetic algorithm for the JSP is described in Sect. 3. In Sect. 4,
we evaluate the performance of the proposed HTGA approach
and compare our results with those given by Tsujimura et al. [8]
and Wang and Zheng [9, 10] for the famous Fisher-Thompson
benchmark problems. Finally, Sect. 5 offers some conclusions.
2 Problem statement and the Taguchi method
In this section, we state the problem and describe the Taguchi
method.
2.1 Problem statement
The JSP is a scheduling problem that considers M different ma-
chines and N different jobs. Each of the jobs consists of Q op-
erations and each of the operations requires a different machine.
All the operations of each job are processed in a fixed processing
order. Each operation is characterized by the required machine
and the fixed processing time. A job is processed on one ma-
chine at a time and machines are available continuously. The JSP
is an NP-hard problem, as the size of M machines and N jobs
increases. The size of the search space is [5]
space size = (N × M)!
(M!)N . (1)
For example, for the Fisher-Thompson benchmark of the 10 jobs
to 10 machines (10×10 FT) JSP, it has a space size of 2.35×1092.
Two kinds of constraints need to be considered for the
JSP [1] as follows:
(i) Operation precedence constraint for a given job:
As usual, let cjk denote the completion time of job j on ma-
chine k and let tjk denote the processing time of job j on
machine k. For a job i, if the processing on machine h pre-
cedes that on machine k, we need the following constraint:
cik − tik  cih . (2)
(ii) Operation un-overlapping constraint for a given machine:
For two jobs i and j , both need to be processed on ma-
chine k. If job i comes before job j , we need the following
constraint:
cjk − cik  tjk . (3)
Two objectives of the JSP are to determine the job sequences
on the machines, also known as a job-shop schedule S, and to
minimize the makespan. The job-shop schedule S and the objec-
tive function of makespan can be described as follows:
S =
⎡
⎢⎢⎢⎢⎢⎢⎢⎢⎣
s11 s12 . . . . . . s1N
s21
. . .
...
... sk j
...
...
. . .
...
sM1 . . . . . . . . . sMN
⎤
⎥⎥⎥⎥⎥⎥⎥⎥⎦
,
for k = 1, 2, . . ., M
and j = 1, 2, . . ., N ;
(4)
and the makespan objective is formulated as
minimize max
1kM
{
max
1iN
{cik}
}
,
subject to cik − tik  cih , for i = 1, 2, . . ., Nand h, k = 1, 2, . . ., M ;
cjk − cik  tjk , for i, j = 1, 2, . . ., Nand k = 1, 2, . . ., M ; (5)
where sk j means job j on machine k; cik represents the com-
pletion time of job i on machine k; tik denotes the processing
time of job i on machine k; cih represents the completion time of
job i on machine h; cjk represents the completion time of job j
on machine k; tjk denotes the processing time of job j on ma-
chine k; M is the number of machines; and N is the number of
jobs.
2.2 The Taguchi method
Taguchi’s parameter design method is an important tool for ro-
bust design. Robust design is an engineering methodology for
optimizing product and process conditions that are minimally
sensitive to the causes of variation, and which produce high-
quality products with low development and manufacturing costs.
Two major tools used in the Taguchi method are the orthogonal
array and the signal-to-noise ratio.
1024
where jobi is the number jobs, operationk indicates the opera-
tion sequence of jobi , mck denotes the machine used to perform
operationk , and t is the processing time of operationk on ma-
chine mck.
For example, there are three jobs, and each job has three oper-
ations. A 9-dimensional vector is constructed: OP = (1, 1, 1, 2,
2, 2, 3, 3, 3) = (op11, op12, op13, op21, op22, op23, op31, op32,
op33),where, forexample,op11 = [1, 1, 3, 10],op12 = [1, 2, 2, 8],
op13 = [1, 3, 1, 9], and so on. The first gene “1” of OP is the first
operation of job 1, which is performed on machine 3 with process-
ing time 10. The second gene “1” of OP is the second operation of
job 1, which is performed on machine 2 with processing time 8.
The third gene “1” of OP is the third operation of job 1, which is
performed on machine 1 with processing time 9. The fourth gene
“2” of OP is the first operation of job 2. The fifth gene “2” of OP
is the second operation of job 2, and so on.
3.2 Generation of the initial population
Initialization is the process of generating a new sequence of
chromosomes. The encoding scheme mentioned above is a con-
venient tool to reproduce the initial population by swapping and
changing genes randomly. The initialization procedure produces
pop_size chromosomes, where pop_size denotes the population
size, by the following algorithm:
Step 1: Generate two integer values, α and β, randomly, where α
and β belong to [1, M × N].
Step 2: Execute the swap-change in two genes at the positions α
andβ. Repeat M × N times and then produce a vector OP.
Step 3: Repeat the above steps pop_size times and produce
pop_size feasible initial solutions.
3.3 Offspring generation by crossover operation
The crossover operation is used to generate two new chromo-
somes of high diversity at a time by using one chromosome
and the swap-change method. The swap-change method is used
to solve the schedule-conflicting problem. In addition, to con-
duct the orthogonal array of the Taguchi method, each chro-
mosome is divided into sections, and a swap-change is exe-
cuted in each section. The ‘section’ is regarded as the ‘factor’
of the Taguchi method. For example, let one parent be OP =
(1, 3, 2, 1, 4, 1, 2, 4, 2, 3, 3, 4, 2, 1, 4, 3). If the OP is divided
into four sections, the swap-change is executed once in each sec-
tion of the OP. Two runs are executed in the OP to generate
OP1 and OP2. Therefore, the resulting offspring are generated as
follows:
OP1 =
(
1, 2, 3, 1, 4, 2, 1, 4, 2, 3, 3, 4, 4, 1, 2, 3
)
and OP2 =
(
1, 3, 1, 2, 4, 1, 4, 2, 3, 2, 3, 4, 2, 1, 3, 4
)
.
3.4 Generation of better offspring by the Taguchi method
The orthogonal arrays of the Taguchi method are used to study
a large number of decision variables with a small number of
experiments. The better combinations of decision variables are
decided by the orthogonal arrays and the signal-to-noise ratios.
The Taguchi concept is based on maximizing performance mea-
sures called signal-to-noise ratios by running a partial set of
experiments using orthogonal arrays. In this study, a two-level
orthogonal array is used. There are Q factors, where Q is the
number of design factors (variables), and each factor has two lev-
els. To establish an orthogonal array of Q factors with two levels,
let Ln(2n−1) represent n − 1 columns and n individual experi-
ments corresponding to the n rows, where n = 2k , k = a posi-
tive integer (k > 1), and Q  n −1. If Q < n −1, only the first
Q columns are used, while the other n −1− Q columns are ig-
nored. For example, there are six factors with two levels for each
factor. We only need six columns to allocate these factors, and
L8(27) is enough for this purpose because it has seven columns.
The signal-to-noise ratio (η) refers to the mean-square-
deviation of the objective function. Here, we modify Eqs. 8
and 10 of the signal-to-noise ratios for this research. Let ηi =
(yi)2 or (1/yi)2 if the objective function is to be maximized
(larger-the-better) or minimized (smaller-the-better), respec-
tively. Let yi denote the function evaluation value of experiment i
and i = 1, 2, . . ., n, where n is the number of experiments.
The effects of the various factors (variables) can be defined as
follows:
E fl = sum of ηi for factor f at level l , (14)
where i is the experiment number, f is the factor name, and l is
the level number.
After a crossover operation in the TGA, the two chromo-
somes from each run are randomly chosen to execute the matrix
experiments of the orthogonal array. The primary goal in con-
ducting this matrix experiment is to determine the best or the
optimal level for each factor. The optimal level for a factor is the
level that gives the highest value of E fl in the experimental re-
gion. For a two-level problem, if E f 1 > E f 2, the optimal level is
level 1 for factor f . Otherwise, level 2 is the optimal one. After
the optimal levels for each factor are selected, one also obtains
the optimal chromosomes. Therefore, this new generation of off-
spring has the best or nearly the best function value among those
of 2Q combinations of factor levels, where 2Q is the total number
of experiments needed for all combinations of factor levels.
Example: Here we adopt the test function f(x) = ∑7i=1 x2i
to illustrate the rationale of using the Taguchi method in the
crossover operator. The purpose of using the Taguchi method is
to generate a better chromosome from two randomly generated
chromosomes. The test function f(x) would be minimized.
First, two chromosomes c1 and c2, each comprising seven
factors, which correspond to xi (i = 1–7) of f(x), are randomly
chosen to execute various matrix experiments of an orthogonal
array. Regarded as level 1, the values of seven factors in chro-
mosome c1 are 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, and 0.0; those in chro-
mosome c2 are 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, and 1.0, which are
regarded as level 2. Therefore, f(c1) = 4.0 and f(c2) = 3.0. The
orthogonal array L8(27) of Table 1 has been chosen, because
seven factors happen to equal the seven columns of the L8(27).
1026
Taguchi method is incorporated in the crossover operations to sys-
tematically select the better genes to achieve crossover, and con-
sequently enhance the genetic algorithm. The steps of the HTGA
approach are depicted in Fig. 1. In addition, the pseudostructure
and the detailed steps are described as follows.
Procedure: HTGA
Begin
Initialization;
Evaluation;
While (not termination condition) do
Selection;
Crossover;
Taguchi method;
Mutation;
Evaluation;
End
End
Fig. 1. HTGA for job-shop scheduling problems
Detailed steps: HTGA
Step 0: Set the parameters.
Input: population size pop_size, crossover rate pc,
mutation rate pm , and number of generations.
Output: the optimal chromosome and the fitness value.
Step 1: Initialize the population. Execute the algorithm given
above to generate an initial population. The function
values of the population are then calculated.
Step 2: Perform a selection operation using the roulette wheel
approach [24].
Step 3: Execute a crossover operation. The probability of
crossover is determined by crossover rate pc.
Step 4: Select a suitable two-level orthogonal array for matrix
experiments. Because the OP of these examples given
in Sect. 4 below is all divided into ten sections (factors),
the orthogonal array L16(215), shown in Table 3, is cho-
sen to execute these examples.
1028
Table 5. Computational results using different methods for the 10×10 FT
(optimal: 930)
Method GA SyGA1 SyGA2 MGA HTGA
Best 966 937 930 930 930
Average 993 965.85 965.5 953.7 943.48
Standard deviation 19.45 15.85 17.09 NA 6.41
GA, SyGA1, and SyGA2 are the methods proposed by Tsujimura et al. [8].
MGA is the method proposed by Wang and Zheng [10, 11].
Table 6. Computational results using different methods for the 20 ×5 FT
(optimal: 1165)
Method GA SyGA1 SyGA2 MGA HTGA
Best 1210 1189 1178 1165 1165
Average 1251.1 1214.9 1233.75 1179.22 1172.5
Standard deviation 24.21 15.51 23.24 NA 6.32
GA, SyGA1, and SyGA2 are the methods proposed by Tsujimura et al. [8].
MGA is the method proposed by Wang and Zheng [10, 11].
proposed HTGA approach, those GA-based methods given by
Tsujimura et al. [8], and the MGA method presented by Wang
and Zheng [10, 11] are respectively shown in Tables 5 and 6. The
makespans of an optimal solution for the corresponding problem
are also given in Tables 5 and 6.
From Tables 5 and 6, it can be seen that, for the 10×10 FT
and 20×5 FT problems,
(i) both the proposed HTGA approach and the MGA method
given by Wang and Zheng [10, 11] can find the opti-
mal makespan, but the average makespan obtained by
using the proposed HTGA approach is better than that
obtained by using the MGA method given by Wang and
Zheng [10, 11];
(ii) the proposed HTGA approach can give a better makespan
than those GA-based methods given by Tsujimura et al. [8];
(iii) the proposed HTGA approach gives smaller standard devia-
tions of the makespan than those GA-based methods given
by Tsujimura et al. [8], and hence, the proposed HTGA ap-
proach has a more robust and stable solution quality.
5 Conclusions
In this paper, the HTGA approach has been presented to solve
the JSP. The HTGA approach combines the TGA, which has
the merit of powerful global exploration capability, with the
Taguchi method, which can exploit the optimal offspring. The
two-level orthogonal array and the signal-to-noise ratio of the
Taguchi method are used for exploitation. The optimal chromo-
some can be easily found by using both n experimental runs
and signal-to-noise ratios instead of executing 2Q combinations
of factor levels, which are all combinations of factor levels.
Moreover, the Taguchi method is also a robust design approach,
which draws on many ideas from statistical experimental design
to plan experiments in order to obtain dependable information
about variables, so that it can achieve a population distribution
closest to the target and make the results robust. In the pro-
posed HTGA approach, the Taguchi method is inserted between
crossover and mutation operations of a TGA. Then, the system-
atic reasoning ability of the Taguchi method is incorporated in
the crossover operations to systematically select the better genes
to achieve crossover, and consequently enhance the genetic al-
gorithm. Therefore, the proposed HTGA approach possesses the
merits of global exploration and robustness. We executed the
proposed HTGA approach to solve the famous 10 × 10 FT and
20 × 5 FT benchmarks for the JSP. In these studied problems,
there are numerous local optima, and therefore, these problems
are challenging enough for evaluating the performances of the
proposed HTGA approach and those GA-based approaches pro-
posed by Tsujimura et al. [8] and Wang and Zheng [10, 11]. The
computational experiments show that the proposed HTGA ap-
proach can obtain both better and more robust results than those
GA-based methods presented by Tsujimura et al. [8] and Wang
and Zheng [10, 11].
Acknowledgement This work is partially supported by the National Science
Council, Taiwan, Republic of China, under grant number NSC94-2218-
E327-001.
References
1. Gen M, Cheng R (1997) Genetic algorithms and engineering design.
Wiley, New York
2. Gen M, Tsujimura Y, Kubota E (1994) Solving job-shop scheduling
problems by genetic algorithm. In: Proceedings of the IEEE Interna-
tional Conference on SMC, Texas, pp 1577–1582
3. Ono I, Yamamura M, Kobayashi S (1996) A genetic algorithm for
job-shop scheduling problem using job-based order crossover. In: Pro-
ceedings of the IEEE International Conference on Evolutionary Com-
putation, Nagoya, pp 547–552
4. Cheng R, Gen M, Tsujimura Y (1996) A tutorial survey of job-shop
scheduling problems using genetic algorithms: part I representation.
Comput Ind Eng 30:983–997
5. Shi G (1997) A genetic algorithm applied to a classic job-shop schedul-
ing problem. Int J Syst Sci 28:25–32
6. Tsujimura Y, Gen M, Cheng R (1997) Improved genetic algorithms for
solving job-shop scheduling problem. Eng Des Automat 3:133–144
7. Tsujimura Y, Sugimoto T, Mafune Y, Gen M (1999) A genetic algo-
rithm for job-shop scheduling by means of symbiosis mechanism. In:
Proceedings of the 3rd Australia-Japan Joint Workshop on Intelligent
and Evolutionary Systems, Canberra, pp 288–291
8. Tsujimura Y, Mafune Y, Gen M (2001) Effects of symbiotic evolu-
tion in genetic algorithms for job-shop scheduling. In: Proceedings of
the IEEE 34th International Conference on System Sciences, Hawaii,
pp 1–7
9. Wang L (2001) Intelligent optimization algorithms with applications.
Tsinghua University Press, Beijing
10. Wang L, Zheng DZ (2001) An effective hybrid optimization strategy for
job-shop scheduling problems. Comput Oper Res 28:585–596
11. Wang L, Zheng DZ (2002) A modified genetic algorithm for job shop
scheduling. Int J Adv Manuf Technol 20:72–76
12. Li G, Li JY (2003) On job-shop scheduling by hybrid genetic algo-
rithm. J Tianjin Univ Sci Technol 36:239–242
13. Phadke MS (1989) Quality engineering using robust design, Prentice-
Hall, New York
IEEE TRANSACTIONS ON INDUSTRIAL ELECTRONICS, VOL. 53, NO. 3, JUNE 2006 867
Optimal Design of Digital IIR Filters by Using
Hybrid Taguchi Genetic Algorithm
Jinn-Tsong Tsai, Jyh-Horng Chou, Senior Member, IEEE, and Tung-Kuan Liu
Abstract—A hybrid Taguchi genetic algorithm (HTGA) is ap-
plied in this paper to solve the problem of designing optimal digital
infinite-impulse response (IIR) filters. The HTGA approach is
a method of combining the traditional GA (TGA), which has a
powerful global exploration capability, with the Taguchi method,
which can exploit the optimum offspring. The Taguchi method is
inserted between crossover and mutation operations of a TGA.
Based on minimizing the Lp-norm approximation error and min-
imizing the ripple magnitudes of both passband and stopband,
a multicriterion combination is employed as the design criterion
to obtain the optimal IIR filter that can fit different performance
requirements. The proposed HTGA approach is effectively applied
to solve the multiparameter and multicriterion optimization prob-
lems of designing the digital low-pass (LP), high-pass (HP), band-
pass (BP), and bandstop (BS) filters. In these studied problems,
there are many parameters and numerous local optima so that
these studied problems are challenging enough for evaluating the
performances of any proposed GA-based approaches. The compu-
tational experiments show that the proposed HTGA approach can
obtain better digital IIR filters than the existing GA-based method
reported recently in the literature.
Index Terms—Digital infinite-impulse response (IIR) filters,
genetic algorithms (GAs), multiple criteria, Taguchi method.
I. INTRODUCTION
D IGITAL filter design is always an important issue indigital signal processing. In digital infinite-impulse re-
sponse (IIR) filter design, there are principally two approaches,
namely: 1) transformation approach and 2) optimization ap-
proach. The transformation approach to the design of digital
IIR filters involves the transformation of an analog filter into
a digital filter at a given set of prescribed specifications. In
general, a bilinear transformation is adopted in the transfor-
mation approach [1]. But the performance of digital IIR filters
designed by using the transformation approach is not good in
most cases. In the optimization approach, with some criteria,
various optimization methods have been proposed to obtain
optimal filter performances to some extent, where the p-error,
mean-square-error, and ripple magnitudes (tolerances) of both
passband and stopband are usually used as criteria to measure
Manuscript received December 3, 2003; revised November 18, 2005.
Abstract published on the Internet March 18, 2006. This work was supported
in part by the National Science Council, Taiwan, R.O.C., under Grants NSC94-
2218-E327-001 and NSC94-2213-E037-002.
J.-T. Tsai is with the Department of Medical Information Management,
Kaohsiung Medical University, Kaohsiung 807, Taiwan, R.O.C.
J.-H. Chou and T.-K. Liu are with the Department of Mechanical and
Automation Engineering, National Kaohsiung First University of Science and
Technology, Kaohsiung 824, Taiwan, R.O.C. (e-mail: choujh@ccms.nkfust.
edu.tw).
Digital Object Identifier 10.1109/TIE.2006.874280
the performance of the designed digital IIR filters (for example,
see [2]–[7] and references therein). In fact, digital IIR filter
design is essentially a multiparameter and multicriterion opti-
mization problem with multiple local optima. When we come
to the design of a digital IIR filter, the following constraints
should be strictly imposed in order that the overall design
criteria are met in a satisfactory fashion: 1) determination of
the lowest filter order; 2) filter stability; and 3) fulfillment
of the tolerance settings that are determined by minimizing
the ripple magnitudes of both passband and stopband in the
optimization procedure. These constraints always pose great
difficulty in the process of optimization. So, it is very neces-
sary to develop efficient optimization algorithms to deal with
digital IIR filter design problems. Therefore, recently, some
researchers [8]–[14] have proposed various genetic-algorithm
(GA)-based methods to solve digital IIR filter design problems.
The GA is not only capable of searching multidimensional and
multimodal spaces but is also able to optimize complex and
discontinuous functions that are difficult to analyze mathemat-
ically. The use of the GA for digital IIR filter design is prac-
tical and attractive because of the following advantages [11]:
1) filter can be constructed in any form, such as cascade,
parallel, or lattice; 2) low-pass (LP), high-pass (HP), band-
pass (BP), and bandstop (BS) filters can be independently de-
signed; 3) classical analog-to-digital transformation is avoided;
4) multiobjective functions can be simultaneously solved; and
5) obtained model can be of the lowest order. From the pre-
sented results of using GA-based approaches to design optimal
digital IIR filters in the literature, it can be seen that 1) design
cases studied by Tang et al. [11] are more complete than
those studied in [8]–[10] and [12]–[14], and 2) design results
proposed by Tang et al. [11] are better than those given in
[8]–[10] and [12]–[14].
In the multiparameter and multicriterion optimization prob-
lem of designing digital IIR filters, the particular challenge is
that the GA-based methods may be trapped in the local optima
of the multiobjective functions when the number of parameters
is large and there are numerous local optima. Therefore, the
purpose of this paper is to apply a robust approach, which is
motivated by the work in [15] and is named the hybrid Taguchi
GA (HTGA) [16], to solve the problem of designing optimal
digital IIR filters. The HTGA approach is a method of combin-
ing the traditional GA (TGA) [17] with the Taguchi method
[18]–[20]. In the HTGA approach, the Taguchi method is
inserted between crossover and mutation operations. Then, the
systematic reasoning ability of the Taguchi method is incorpo-
rated in the crossover operations to select better genes to tailor
the crossover operations in order to generate the representative
0278-0046/$20.00 © 2006 IEEE
TSAI et al.: OPTIMAL DESIGN OF DIGITAL IIR FILTERS BY USING HYBRID TAGUCHI GENETIC ALGORITHM 869
In the multiple-criterion optimization of designing digital IIR
filters, a single noninferior (or optimal tradeoff) point can be
generated by solving
min
x
f(x) = min
x
v1E
1
M (x) + v2E
2
M (x) + v3δ1(x) + v4δ2(x)
(2.9)
subject to the stability constraints
1 + b1i ≥ 0
1− b1i ≥ 0
1− d2k ≥ 0
1 + d1k + d2k ≥ 0
1− d1k + d2k ≥ 0 (2.10)
where f(x) is the objective function, i = 1, 2, . . . ,M , k =
1, 2, . . . , N , and v1, v2, v3, and v4 are the nonnegative real
numbers called weights. Different values of v1, v2, v3, and v4
mean different weights on E1M (x), E2M (x), δ1(x), and δ2(x),
and then alter the optimal tradeoff point. The weight selection
techniques used in digital filter design have been discussed in
[3]. The design of causal recursive filters requires the inclusion
of stability constraints. Therefore, the stability constraints in
(2.10) that are obtained by using the Jury method [22] on the
coefficients of digital IIR filter in (2.3) should be included in
the optimization process.
B. Taguchi Method
The result is more robust if the relevant fitness values have
a smaller standard deviation, and for this reason, the TGA,
which is largely based on stochastic search techniques [17],
is less robust due to that the TGA usually has larger standard
deviations. In this spirit, a natural question to ask is whether
the Taguchi method may play a role in attaining more robust
results, as the method has been well known to be a robust
design approach. Robust designs borrow many ideas from the
statistical design of experiments for evaluating and imple-
menting improvements in products, processes, or equipment.
Its fundamental principle, largely speaking, is to improve the
quality of concern by minimizing the effect of the causes of
variation, but not eliminating the causes. To do so, two major
mathematical tools are used, namely: 1) signal-to-noise ratio,
which is a measurement of the quality and 2) orthogonal array,
which reduces a large number of design parameters into a much
smaller number of experiments.
The two-level orthogonal array is used in this paper. In
this section, we briefly introduce the basic concept of the
structure and use of the two-level orthogonal array. Additional
details and the detailed description of other-level orthogonal
arrays can be found in the books presented in [18]–[20]. Many
designed experiments use matrices called orthogonal arrays for
determining which combinations of factor levels to use for each
experimental run and for analyzing the data. An orthogonal
array is a fractional factorial matrix that assures a balanced
comparison of levels of any factor or interaction of factors.
It is a matrix of numbers arranged in rows and columns, where
each row represents the level of the factors in each run and each
column represents a specific factor that can be changed from
each run. The array is called orthogonal because all columns
can be evaluated independently of one another.
The general symbol for two-level standard orthogonal
arrays is
Ln(2n−1) (2.11)
where n = 2k is the number of experimental runs, k is a
positive integer that is greater than 1, 2 is the number of levels
for each factor, and n− 1 is the number of columns in the
orthogonal array. The letter L comes from “Latin,” the idea of
using orthogonal arrays for experimental design having been
associated with Latin square designs from the outset. The two-
level standard orthogonal arrays most often used in practice are
L4(23), L8(27), L16(215), and L32(231).
In the field of communication engineering, a quantity called
signal-to-noise ratio (η) has been used as the quality character-
istic of choice. Taguchi, whose background is communication
and electronic engineering, introduced this same concept into
the design of experiments. Two of the applications in which
the concept of signal-to-noise ratio is useful are the improve-
ment of quality via variability reduction and the improvement
of measurement. The control factors that may contribute to
reduced variation and improved quality can be identified by
the amount of variation present and by the shift of mean re-
sponse when there are repetitive data. The signal-to-noise ratio
transforms several repetitions into one value, which reflects the
amount of variation present and the mean response. There are
several signal-to-noise ratios available depending on the type of
characteristic: continuous or discrete; nominal-is-best, smaller-
the-better, or larger-the-better. Here we will only describe the
continuous case when the characteristic is smaller-the-better or
larger-the-better. To be consistent with its application in engi-
neering, the value of the signal-to-noise ratio (η) is intended to
be large for favorable situations, so η can be defined as follows
for the cases of the smaller-the-better characteristic and the
larger-the-better characteristic, i.e.,
η = −10 log
(
1
n
n∑
t=1
y2t
)
and η = −10 log
(
1
n
n∑
t=1
1
y2t
)
(2.12)
which is measured in decibels, where {y1, y2, . . . , yn} denotes
a set of characteristics. Further details can be found in the books
presented in [18]–[20].
III. HTGA APPROACH FOR DESIGN OF IIR FILTERS
This section describes how to solve the multiparameter and
multicriterion optimization problem of designing digital IIR
filters by using the HTGA approach. The details are as follows.
1) Generation of Initial Population: In real coding repre-
sentation, each chromosome is encoded as a vector of floating
TSAI et al.: OPTIMAL DESIGN OF DIGITAL IIR FILTERS BY USING HYBRID TAGUCHI GENETIC ALGORITHM 871
TABLE I
TEST FUNCTIONS
Step 7) Calculate the function values and signal-to-noise
ratios of n experiments in the orthogonal array
Ln(2n−1).
Step 8) Calculate the effects of the various factors (Ef1 and
Ef2).
Step 9) One optimal chromosome is generated based on the
results from Step 8).
Step 10) Repeat Steps 6) to 9) until the expected number
(1/4)× ps × pc has been met.
Step 11) The population via the Taguchi method is generated.
Step 12) Mutation operation. The probability of mutation is
determined by mutation rate pm.
Step 13) Offspring population is generated.
Step 14) Sort the fitness values in increasing order among
parents and offspring populations.
Step 15) Select the better ps chromosomes as parents of the
next generation.
Step 16) Has the stopping criterion been met? If yes, then
go to Step 17). Otherwise, return to Step 3) and
continue through Step 16).
Step 17) Display the optimal chromosome and the fitness
value.
IV. DESIGN EXAMPLES AND COMPARISONS
First, in this section, in order to make this work more
complete, we adopt the partial results of our works [15], [16]
regarding the HTGA approach to show the performance of the
presented HTGA approach. Here, we use the proposed HTGA
approach [15], [16] to solve the global numerical optimization
problems, evaluate the performance of the proposed HTGA
approach, and compare our results with those given in [21] for
some well-known test functions in Table I, where we use the
same evolutionary parameters as those adopted in [21]. The
algorithm presented in [21], which is named the orthogonal
GA with quantization (OGA/Q), not only can find optimal or
close-to-optimal solutions but also can give more robust and
significantly better results than those other methods presented
in [25]–[28].
Second, we adopt the same examples of IIR filters as those
considered in [11] to test our proposed HTGA approach and
to compare the performances of our proposed HTGA approach
with those of the GA-based approach given in [11].
A. Solving the Global Numerical Optimization Problems
In this study, we execute our proposed HTGA approach
to solve these test functions in Table I with 30 dimensions
(i.e., N = 30) for functions f1 − f4 and 100 dimensions (i.e.,
N = 100) for functions f5 − f7. In this manner, these test
functions have so many local minima that they are challenging
enough for performance evaluation, and the existing results
reported in [21] can be used for a direct comparison. In [21], the
following evolutionary environments are used: the population
size is 200, the crossover rate is 0.1, and the mutation rate is
0.02. Each test function was performed in 50 independent runs
and the following results were recorded: 1) mean number of
function evaluations; 2) mean function value (i.e., the mean of
the function values was found in the 50 runs); and 3) standard
deviation of the function values.
In the computational experiments of our proposed HTGA
approach, the HTGA approach uses the same evolutionary
parameters as those adopted by the OGA/Q. We set up the
stopping criterion under which the execution of the algorithm of
the proposed HTGA would be stopped as soon as the smallest
function value of the fitness member of the population is less
than or equal to the mean function value given by the OGA/Q.
In addition, each test function is performed with 50 independent
TSAI et al.: OPTIMAL DESIGN OF DIGITAL IIR FILTERS BY USING HYBRID TAGUCHI GENETIC ALGORITHM 873
TABLE III
PRESCRIBED DESIGN CONDITIONS ON LP, HP, BP, AND BS FILTERS
TABLE IV
DESIGN RESULTS FOR THE EXAMPLES ON LP, HP, BP, AND BS FILTERS, WHERE THE DESIGN CRITERION USED BY THE
HTGA APPROACH IS THE SAME AS THAT USED BY THE METHOD IN [11]
In the first case, the design criterion E1M (x), which denotes
the absolute error (i.e., L1-norm) of magnitude response, as
that used in the GA-based method in [11] is adopted. The
computational results obtained by using the proposed HTGA
approach and the GA-based method in [11] are given in
Table IV and shown in Fig. 1, respectively. The designed IIR
HLP(z) = 0.0386
(z + 0.6884)(z2 − 0.0380z + 0.8732)
(z − 0.6580)(z2 − 1.3628z + 0.7122) (4.1)
HHP(z) = 0.1807
(z − 0.4767)(z2 + 0.9036z + 0.9136)
(z + 0.3963)(z2 + 1.1948z + 0.6411)
(4.2)
HBP(z) = 0.077
(z − 0.8846)(z + 0.9033)(z2 − 0.0498z − 0.8964)(z2 + 0.031z − 0.9788)
(z + 0.0497)(z − 0.0592)(z2 − 0.5505z + 0.5371)(z2 + 0.5551z + 0.5399) (4.3)
HBS(z) = 0.4919
(z2 + 0.4230z + 0.9915)(z2 − 0.4412z + 0.9953)
(z2 + 0.5771z + 0.4872)(z2 − 0.5897z + 0.4838) (4.4)
TSAI et al.: OPTIMAL DESIGN OF DIGITAL IIR FILTERS BY USING HYBRID TAGUCHI GENETIC ALGORITHM 875
TABLE V
DESIGN RESULTS FOR THE EXAMPLES ON LP, HP, BP, AND BS FILTERS, WHERE THE HTGA APPROACH
USES THE MINIMIZATION OF δ1(x) + δ2(x) AS THE DESIGN CRITERION
stopband, for the LP, HP, BP, and BS filters, obtained by using
the HTGA approach are also smaller than those obtained by
using the GA-based method in [11]. That is, according to the
performance criterion that less ripple magnitudes in both pass-
band and stopband correspond to higher performance [6], [14],
the proposed HTGA approach can get better performances than
the GA-based method given in [11] for the digital IIR filters
under the same design criterion.
In the second case, the combination of the two criteria, the
ripple magnitudes of passband and stopband, δ1(x) + δ2(x), is
considered here. The two criteria are contrary generally. The
computational results obtained by using the proposed HTGA
approach and the GA-based method given in [11], respectively,
are given in Table V and shown in Fig. 2. The designed IIR
filter models obtained by the HTGA approach are stated in
(4.9)–(4.12), shown at the bottom of the page. From Table V
and Fig. 2, it can be seen that, for the LP, HP, BP and BS
filters, the proposed HTGA approach can give smaller ripple
magnitudes of both passband and stopband than the GA-based
method given in [11]. That is, the proposed HTGA approach
under different design criteria can also obtain better perfor-
mances than the GA-based method given in [11] for digital
IIR filters.
The combination of the four criteria, L1-norm approximation
error, L2-norm approximation error, and the ripple magnitudes
of passband and stopband, v1E1M (x) + v2E2M (x) + v3δ1(x) +
v4δ2(x), is considered in the third case. These four criteria
are contrary to each other in most situations. It is a more
general case, which can include case 1 and case 2. The filter
designer needs to adjust the weights of criteria to design the
HLP(z) = 0.088294
(z + 1.000861)(z2 − 0.997901z + 0.958662)
(z − 0.573595)(z2 − 1.348344z + 0.746402) (4.9)
HHP(z) = 0.075257
(z − 1.359286)(z2 + 1.019693z + 1.008288)
(z + 0.562427)(z2 + 1.339589z + 0.741667)
(4.10)
HBP(z) = 0.027639
(z2 + 0.092090z − 1.151911)(z2 + 0.023145z − 1.028540)(z2 + 0.119995z − 1.102400)
(z2 + 0.000155z + 0.460000)(z2 − 0.643600z + 0.736177)(z2 + 0.634888z + 0.733279) (4.11)
HBS(z) = 0.429888
(z2 + 0.443985z + 0.974858)(z2 − 0.441200z + 0.967207)
(z2 + 0.858803z + 0.546157)(z2 − 0.857171z + 0.548408) (4.12)
TSAI et al.: OPTIMAL DESIGN OF DIGITAL IIR FILTERS BY USING HYBRID TAGUCHI GENETIC ALGORITHM 877
TABLE VI
DESIGN RESULTS FOR THE EXAMPLES ON LP, HP, BP, AND BS FILTERS, WHERE THE MINIMIZATION OF v1E1M (x) + v2E
2
M (x) +
v3δ1(x) + v4δ2(x) IS USED BY THE HTGA APPROACH AS THE DESIGN CRITERION
Fig. 3. The designed IIR filter models obtained by the HTGA
approach are reported in (4.13)–(4.16), shown at the bottom of
the previous page. From Table VI and Fig. 3, it can be seen
that, for the LP, HP, BP, and BS filters, the proposed HTGA
approach can give smaller L1-norm approximation errors,
smaller L2-norm approximation errors, and better magni-
tude performances in both passband and stopband than the
GA-based method presented in [11]. That is, for the digital IIR
filters, the proposed HTGA approach under another different
criterion can also get better performances than the GA-based
approach given in [11]. On the other hand, it can be seen that,
from Tables V and VI in the HTGA approach for each filter,
both passband and stopband performances given in Table V are
better than those given in Table VI. Such results demonstrate
that the objective function of combining four criteria needs
more compromises than that of combining two criteria. In
addition, the HTGA approach can be used to design any type
of filter instead of the classic methods such as Butterworth,
Chebyshev Type I, Chebyshev Type II, and Elliptic function
design methods [29]. The filters, including the LP, HP, BP,
and BS filters, obtained by the HTGA approach have better
performances than those designed by the classic methods,
because Tang et al. [11] have shown that the filters, including
the LP, HP, BP, and BS filters, obtained by the method in [11]
have better performances than those designed by the classic
methods.
In a word, from these obtained results, we could conclude
that: 1) the proposed HTGA approach is superior than the
GA-based method presented in [11]; 2) the proposed HTGA
approach for the design of digital IIR filers allows each filter,
whether it is LP, HP, BP, or BS filter, to be independently
designed; and 3) the proposed HTGA approach is very feasible
to design digital IIR filters, particularly when the complicated
constraints, the design requirements, and the multiple criteria
are all involved.
V. CONCLUSION
In this paper, the HTGA approach has been applied to
solve the problem of designing optimal digital IIR filters.
The HTGA approach is a method of combining the TGA,
which has the merit of powerful global exploration capability,
with the Taguchi method, which can exploit the optimum
offspring. The two-level orthogonal array and the signal-to-
noise ratio of the Taguchi method are used for exploitation. In
the proposed HTGA approach [15], [16], the Taguchi method
is inserted between crossover and mutation operations of a
TGA. Then, the systematic reasoning ability of the Taguchi
method is incorporated in the crossover operations to select
better genes to achieve crossover and consequently enhance
the GA. Therefore, the proposed HTGA approach possesses the
merits of global exploration, fast convergence, and robustness.
We have executed the proposed HTGA approach to solve the
multiparameter and multicriterion optimization problems of
designing digital LP, HP, BP, and BS filters. The computational
results show that: 1) design of LP, HP, BP, and BS filters can
TSAI et al.: OPTIMAL DESIGN OF DIGITAL IIR FILTERS BY USING HYBRID TAGUCHI GENETIC ALGORITHM 879
[11] K. S. Tang, K. F. Man, S. Kwong, and Z. F. Liu, “Design and optimization
of IIR filter structure using hierarchical genetic algorithms,” IEEE Trans.
Ind. Electron., vol. 45, no. 3, pp. 481–487, Jun. 1998.
[12] K. Uesaka and M. Kawamata, “Synthesis of low-sensitivity second-order
digital filters using genetic programming with automatically defined func-
tions,” IEEE Signal Process. Lett., vol. 7, no. 4, pp. 83–85, Apr. 2000.
[13] G. Vanuytsel, P. Boets, L. V. Biesen, and S. Temmerman, “Efficient hybrid
optimization of fixed-point cascaded IIR filter coefficients,” in Proc. IEEE
Instrum. Meas. Technol. Conf., Anchorage, AK, 2002, pp. 793–797.
[14] G. X. Zhang, W. D. Jin, and F. Jin, “Multi-criterion satisfactory optimiza-
tion method for designing IIR digital filters,” in Proc. Int. Conf. Commun.
Technol., Beijing, China, 2003, pp. 1484–1490.
[15] J. H. Chou, W. H. Liao, and J. J. Li, “Application of Taguchi-genetic
method to design optimal Grey-fuzzy controller of a constant turning force
system,” in Proc. 15th CSME Annu. Conf., Tainan, Taiwan, R.O.C., 1998,
pp. 31–38.
[16] J. T. Tsai, T. K. Liu, and J. H. Chou, “Hybrid Taguchi-genetic algorithm
for global numerical optimization,” IEEE Trans. Evol. Comput., vol. 8,
no. 4, pp. 365–377, Aug. 2004.
[17] M. Gen and R. Cheng, Genetic Algorithms and Engineering Design.
New York: Wiley, 1997.
[18] M. S. Phadke, Quality Engineering Using Robust Design. Englewood
Cliffs, NJ: Prentice-Hall, 1989.
[19] D. C. Montgomery, Design and Analysis of Experiments. New York:
Wiley, 1991.
[20] S. H. Park, Robust Design and Analysis for Quality Engineering.
London, U.K.: Chapman & Hall, 1996.
[21] Y. W. Leung and Y. Wang, “An orthogonal genetic algorithm with quan-
tization for global numerical optimization,” IEEE Trans. Evol. Comput.,
vol. 5, no. 1, pp. 41–53, Feb. 2001.
[22] I. Jury, Theory and Application of the Z-Transform Method. New York:
Wiley, 1964.
[23] M. Bazaraa, J. Jarvis, and H. Sherali, Linear Programming and Network
Flows. New York: Wiley, 1990.
[24] D. E. Goldberg, Genetic Algorithms in Search, Optimization and Machine
Learning. Reading, MA: Addison-Wesley, 1989.
[25] P. Siarry, G. Berthiau, F. Durbin, and J. Haussy, “Enhanced simulated an-
nealing for globally minimizing functions of many-continuous variables,”
ACM Trans. Math. Softw., vol. 23, no. 2, pp. 209–228, Jun. 1997.
[26] X. Yao and Y. Liu, “Fast evolution strategies,” in Proc. Evol. Program. VI,
P. J. Angeline, R. Reynolds, J. McDonnell, and R. Eberhart, Eds., Berlin,
Germany: Springer-Verlag, 1997, pp. 151–161.
[27] P. J. Angeline, “Evolution optimization versus particle swarm optimiza-
tion: Philosophy and performance differences,” in Proc. Evol. Program.
VII, V. W. Porto, N. Saravanan, D. Waagen, and A. E. Eiben, Eds., Berlin,
Germany: Springer-Verlag, 1998, pp. 601–610.
[28] K. Chellapilla, “Combining mutation operators in evolutionary program-
ming,” IEEE Trans. Evol. Comput., vol. 2, no. 3, pp. 91–96, Sep. 1998.
[29] H. Y. F. Lam, Analog and Digital Filters: Design and Realization.
Englewood Cliffs, NJ: Prentice-Hall, 1979.
Jinn-Tsong Tsai received the B.S. and M.S. degrees
in mechanical engineering from the National Sun
Yat-Sen University, Kaohsiung, Taiwan, R.O.C., in
1986 and 1988, respectively, and the Ph.D. degree
in engineering science and technology from the Na-
tional Kaohsiung First University of Science and
Technology, Kaohsiung, Taiwan, R.O.C., in 2004.
From 1988 to 1990, he was a Lecturer in the Vehi-
cle Engineering Department, Chung Cheng Institute
of Technology, Taiwan. From 1990 to 2004, he was a
Researcher and the Chief of the Automation Control
Section at the Metal Industries Research and Development Center, Taiwan. He
is currently an Assistant Professor in the Medical Information Management
Department, Kaohsiung Medical University, Kaohsiung, Taiwan. His research
interests include evolutionary computation, intelligent control and systems,
neural networks, and quality engineering.
Jyh-Horng Chou (M’04–SM’04) received the B.S.
and M.S. degrees in engineering science from the
National Cheng Kung University, Tainan, Taiwan,
R.O.C., in 1981 and 1983, respectively, and the Ph.D.
degree in mechatronic engineering from the National
Sun Yat-Sen University, Kaohsiung, Taiwan, R.O.C.,
in 1988.
From 1983 to 1986, he was a Lecturer in the
Mechanical Engineering Department, National Sun
Yat-Sen University. From 1986 to 1991, he was an
Associate Professor in the Mechanical Engineering
Department and the Director of the Center for Automation Technology at the
National Kaohsiung University of Applied Sciences, Taiwan. From 1991 to
1999, he was a Professor and the Chairman of the Mechanical Engineering
Department at the National Yunlin University of Science and Technology,
Taiwan. From August 1999 to September 2004, he was a Professor and the
Chairman of the Mechanical and Automation Engineering Department, and
from October 2004 to December 2005, he was a Professor and the Dean of
the Engineering College at National Kaohsiung First University of Science and
Technology, Taiwan, where he is currently a Professor and the Vice Principal.
He holds two patents (one is in the technology area of automation, and the
other is in the area of computational intelligence). He has coauthored three
books and published more than 155 refereed journal papers and 135 conference
papers. His research and teaching interests include intelligent systems and
control, computational intelligence and methods, robust control, and quality
engineering.
Dr. Chou is currently an Editorial Member for the Journal of the Chinese
Society of Mechanical Engineers and an Associate Editor for the International
Journal of Information and Systems Sciences. He received both the Research
Award and the Excellent Research Award from the National Science Council of
Taiwan 14 times. He also received the 2004 Excellent Project Outcome Award
of the Educational Promotion Project on the Integrated Manufacturing and
e-Commerce Technology from the Ministry of Education, Taiwan, and the 2005
Outstanding Research Award from the National Kaohsiung First University of
Science and Technology.
Tung-Kuan Liu received the B.S. degree in me-
chanical engineering from the National Akita Uni-
versity, Akita, Japan, in 1992, and the M.S. and Ph.D.
degrees in mechanical engineering and information
science from the National Tohoku University, Japan,
in 1994 and 1997, respectively.
From 1997 to 1999, he was a Senior Manager at
the Institute of Information Industry, Taiwan. From
1999 to 2002, he was an Assistant Professor in the
Department of Marketing and Distribution Manage-
ment, National Kaohsiung First University of Sci-
ence and Technology, Kaohsiung, Taiwan, R.O.C. He is currently an Associate
Professor in the Mechanical and Automation Engineering Department, National
Kaohsiung First University of Science and Technology. His research and
teaching interests include artificial intelligence, applications of multiobjective
optimization genetic algorithms, and integrated manufacturing and business
systems.
  2 
 
[ ] )2.2(),(),(
),,,,(
1
1
2
20 0
2121
0
pN
n
N
n
d
kkkij
MM
HdcbaJJ
∑ ∑
= =
−=
=
ωωωω
 
where M(ω1, ω2)=H(z1, z2), z1= ejω1 and z2= ejω2; ω1=(π/N1)n1; 
ω2=(π/N2)n2; and p is an even positive integer (usually p=2 or p=4). 
The aim is to minimize the difference between the actual and 
desired amplitude response of the filter at N1N2 points. Since we are 
dealing with only first-degree factors in the denominator, it is 
known that the stability conditions are given as following [1]-[3]: 
|bk + ck| - 1 < dk < 1 - |bk - ck|,  k = 1, 2, …, K.      (2.3) 
Thus, the design of 2-D recursive filters is equivalent to the 
following constrained minimization problem: 
p
N
n
N
n
d N
n
N
nM
N
n
N
nMJ ∑ ∑
= = 







−




=
1
1
2
20 0 2
2
1
1
2
2
1
1 ,, Minimize ππππ  (2.4a) 
subject to the constraints 
|bk + ck| - 1 < dk,    k = 1, 2, …, K 
dk < 1 - |bk - ck|,    k = 1, 2, …, K.        (2.4b) 
where p is an even positive integer (usually p=2 or p=4); and N1, N2, 
and K are given positive integers. 
B. Taguchi Method 
Taguchi’s parameter design is an important tool for robust 
design. His tolerance design can be also classified as a robust 
design. Robust design is an engineering methodology for 
optimizing the product and process conditions which are minimally 
sensitive to the various causes of variation, and which produce 
high-quality products with low development and manufacturing 
costs. Two major tools used in the Taguchi method are the 
orthogonal array and the signal-to-noise ratio. 
Two-level orthogonal arrays are used in this paper. In this 
section we briefly introduce the basic concept of the structure and 
use of two-level orthogonal arrays. Additional details and the 
detailed description of other-level orthogonal arrays can be found in 
the books presented in [9]-[11]. Many designed experiments use 
matrices called orthogonal arrays for determining which 
combinations of factor levels to use for each experimental run and 
for analyzing the data. An orthogonal array is a fractional factorial 
matrix, which assures a balanced comparison of levels of any factor 
or interaction of factors. 
The general symbol for two-level standard orthogonal arrays is  
Ln(2n-1),                   (2.5) 
where 
n = 2k , the number of experimental runs, 
k = positive integer which is greater than 1, 
2 = the number of levels for each factor, 
and  n-1 = the number of columns in the orthogonal array. 
The letter ‘L’ comes from ‘Latin’, the idea of using orthogonal 
arrays for experimental design having been associated with Latin 
square designs from the outset. 
In the field of communication engineering, a quantity called 
the signal-to-noise ratio (η) has been used as the quality 
characteristic of choice. Taguchi introduced this same concept into 
the design of experiments. Two of the applications in which the 
concept of signal-to-noise ratio is useful are the improvement of 
quality via variability reduction and the improvement of 
measurement. The control factors that may contribute to reduced 
variation and improved quality can be identified by the amount of 
variation present and by the shift of mean response when there are 
repetitive data. The signal-to-noise ratio transforms several 
repetitions into one value, which reflects the amount of variation 
present and the mean response. There are several signal-to-noise 
ratios available depending on the type of characteristic: continuous 
or discrete; nominal-is-best, smaller-the-better or larger-the-better. 
Here we will only discuss the continuous case when the 
characteristic is smaller-the-better. Further details can be found in 
the books presented in [9]-[11]. 
In the case of smaller-the-better characteristic, suppose that we 
have a set of characteristics y1, y2, …, yn. Then the natural estimate 
is ∑
=
=
n
t
tyn
S
1
21 , where S denotes the mean squared deviation from 
the target value of the quality characteristic. To be consistent with 
its application in engineering, the value of the signal-to-noise ratio 
(η) is intended to be large for favorable situation, and we use the 
following transformation for the smaller-the-better characteristic: 
)1(log10
1
2∑
=
−=
n
t
tyn
η .              (2.6) 
3. HTGA Approach for the 2-D filter design 
This section describes how to solve the 2-D filter design by 
using the HTGA approach. The details are as follows. 
(i) Generation of Initial Population 
The real coding technique is applied to solve the 2-D filter 
design. In the real coding representation, each chromosome is 
encoded as a vector of floating numbers, with the same length as 
the vector of decision variables.  
(ii) Generation of Diversity Offspring by Crossover Operation 
The crossover operators used here are one-cut-point operator 
integrated with arithmetical operator derived from convex set 
theory [8], [12], which randomly selects one cut-point, exchanges 
the right parts of two parents, and calculates the linear 
combinations in the cut-point genes to generate new offspring. For 
example, let two parents be Θ1=(x1, x2, …, xk, …, xρ) and Θ2=(y1, 
y2, …, yk, …, yρ). If they are crossed after the kth position, the 
resulting offspring are 
),...,,,,'...,,,('
),...,,,,'...,,,('
21212
21211
ρ
ρ
xxxyyy
yyyxxx
kkk
kkk
++
++
=Θ
=Θ
      (3.1) 
where x'k = xk + β (yk – xk), y'k = lk + β (uk – lk), lk and uk are the 
domain of yk, and β is a random value, in which β ∈[0, 1]. 
(iii) Generation of the Better Offspring by Taguchi Method 
The orthogonal arrays of the Taguchi method are used to study 
a large number of decision variables with a small number of 
experiments. The better combinations of decision variables are 
2604
  4 
 
)0.83990.9028430.9132311)(0.7111630.0948710.0506911(
5.9343761.3227680.1101020.0873050.64937152.35.842070.2641951
0005.0),(
21212121
2
2
2
2
2
12
2
12
2
2121
2
11
21 zzzzzzzz
zzzzzzzzzzzz
zzH
+−−−−−
++−−−−+−
=    (4.2)
respectively, are given in Table 1. In addition, the 2-D transfer 
function in (4.2) is obtained by using the HTGA approach, and the 
amplitude responses |M(ω1, ω2)| given by those approaches are 
presented in Figure 1. 
From Table 1, it can be seen that the proposed HTGA 
approach gives the very small standard deviation of the obtained 
results, and thus it is very robust. From the computational results 
in Table 1 and from the amplitude response in Figure 1, it can be 
seen that the proposed HTGA approach can give the better results 
than the previous methods given in [3], [4], [5], and [6]. Hence, 
we could conclude that the proposed HTGA approach is very 
feasible to design the 2-D recursive digital filter. 
5. Conclusions 
In this paper, the HTGA approach has been presented to 
design the 2-D recursive digital filter. The HTGA approach is a 
method of combining the TGA with the Taguchi method. The 
two-level orthogonal array and the signal-to-noise ratio of the 
Taguchi method are used for exploitation. The Taguchi method is a 
robust design approach, which draws on many ideas from 
statistical experimental design to plan experiments for obtaining 
dependable information about variables, so it can achieve the 
population distribution closest to the target and make the results 
robust. In the studied problem, there are many parameters and 
numerous local optima so that the studied problem are challenging 
enough for evaluating the performance of the proposed HTGA 
approach and the performances of the previous approaches 
proposed in [3], [4], [5], and [6]. For the same example, the 
computational experiments show that the proposed HTGA 
approach can obtain better results than those methods given in [3], 
[4], [5], and [6]. 
Acknowledgement 
This work was partially supported by the National Science 
Council, Taiwan, Republic of China, under grant number 
NSC93-2218-E327-001. 
References 
1. T. Kaczorek, Two-Dimensional Linear System, Berlin, 
Germany: Springer-Verlag, 1985. 
2. S. G. Tzafestas, Multidimensional Systems, Techniques and 
Applications, New York: Marcel Dekker, 1986. 
3. W. S. Lu and A. Antoniou, Two-Dimensional Digital Filters, 
New York: Marcel Dekker, 1992. 
4. G. A. Maria and M. M. Fahmy, “An Lp Design Technique for 
Two-Dimensional Digital Recursive Filters,” IEEE Trans. 
Acoust., Speech, Signal Processing, Vol. 22, pp. 15-21, 1974. 
5. V. M. Mladenov and N. E. Mastorakis, “Design of 
Two-Dimensional Recursive Filters by Using Neural 
Networks,” IEEE Trans. on Neural Networks, Vol. 12, pp. 
585-590, 2001. 
6. N. E. Mastorakis, I. F. Gonos, and M. N. S. Swamy, “Design of 
Two-Dimensional Recursive Filters Using Genetic 
Algorithms,” IEEE Trans. Circuits Syst. I, Vol. 50, pp. 634-639, 
2003. 
7. J. H. Chou, W. H. Liao and J. J. Li, “Application of 
Taguchi-Genetic Method to Design Optimal Grey-Fuzzy 
Controller of a Constant Turning Force System,” Proc. of the 
15th CSME Annual Conf., Taiwan, pp. 31-38, 1998. 
8. M. Gen and R. Cheng, Genetic Algorithms and Engineering 
Design, John Wiley and Sons, New York, 1997. 
9. D. C. Montgomery, Design and Analysis of Experiments, 
Wiley, New York, 1991. 
10. S. H. Park, Robust Design and Analysis for Quality 
Engineering, Chapman & Hall, London, 1996. 
11. M. S. Phadke, Quality Engineering Using Robust Design, 
Prentice-Hall, New Jersey, 1989. 
12. M. Bazaraa, J. Jarvis, and H. Sherali, Linear Programming and 
Network Flows, John Wiley and Sons, New York, 1990. 
Table 1. Comparison of the differences between the actual and 
desired amplitude response of the filter. 
Method Best Average Standard Deviation 
HTGA 3.1745 3.6308 0.2405 
Lp technique [3, 4] 3.9074 NA NA 
Neural networks [5] 3.7772 NA NA 
GA [6] 6.0276 NA NA 
 
 
 
 
 
 
 
 
HTGA method             Lp design technique [3, 4] 
 
 
 
 
 
 
 
 
Neural networks method [5]           GA method [6] 
Figure 1. Comparison of the amplitude responses |M(ω1, ω2)| 
 
2606
         
robust” means that the standard deviation of the fitness 
member values is relatively small by using the proposed 
QEGA approach. We use the QEGA approach with the 
penalty function for the solution of the worst-case circuit 
tolerance design problem. The penalty function is employed to 
convert the constrained optimization problem of the worst-
case circuit tolerance design into an unconstrained one by 
means of a penalization of the unfeasible individuals. Once the 
evolutionary approach is established, the worst-case circuit 
tolerance design method can be used for the remaining design 
centering and tolerance assignment operations. In addition, 
vertex analysis [22], an easy-to-use tool, is used to verify the 
100% feasibility of a candidate tolerance region. 
II.  PROBLEM DEFINITION 
Let it be given a circuit including N design parameters, 
characterized by a central value Ckp  and a relative tolerance tk, 
k =1, 2, …, N. Their allowable values define an N-dimensional 
sub-space of ℜN named space of parameters. A tolerance 
region (RT) is any hyper-rectangle included in the parameter 
space and defined by taking a bounded range of variation for 
each parameter: pk∈[ Lkp , 
U
kp ], with 
C
kp = (
L
kp +
U
kp )/2 and 
tk=( Ukp −
C
kp )/
C
kp , k =1, 2, …, N. Thus, if each parameter is 
related to an axis of the parameter space, the RT is an N-
dimensional axis-aligned parallelepiped in the parameter 
space. Let it be also given R design constraints regarding as 
many functions of circuit parameters: fj(p1, p2, …, pN)∈[Lj, Uj], 
j =1, 2, …, R. Each one is expressed by means of lower and 
upper bounds, Lj and Uj, respectively, within which the 
performance function fj assumes acceptable values. All the sets 
of parameters (p1, p2, …, pN) that meet the design constraints 
lie within a region of the parameter space that is traditionally 
named region of acceptability (RA). The subset of RT given by 
the intersection between the RT and the RA, RT ∩ RA, is the 
feasibility region (RF). The RF is an N-dimensional sub-space 
that may be empty as well as equal to the RT itself, depending 
on the mutual position between the RT and the RA in the 
parameter space. It bounds all the sets of the values of 
parameters that guarantee that the design constraints are met. 
Each point in the RF corresponds to a feasible set of 
parameters. Given the design constraints (the RA) and 
designed the parameters’ tolerances (the RT), the yield is an 
evaluation index, lying in the range [0, 100], that allows to 
quantify the production rate and/or the reliability of the 
designed circuit with respect to the variations of its own 
parameters. 
As for the relative position between the RA and the 
designed RT, it is worth noting that it is not sufficient to give 
rise to a 100% yield by simply inscribing the RT into the RA. 
Indeed, the true goal in the tolerance design is twofold: at the 
same time, the designer seeks the highest yield value and the 
widest parameters’ tolerances, namely the RT of maximum 
volume. In the large part of cases, the RA can be assumed 
convex and simply connected. Thus, the evolutionary strategy 
is adopted to make the allowable parameters’ tolerances as 
large as possible to achieve a 100% yield by vertex analysis 
used to check the feasibility of each candidate RT. The vertex 
analysis regarded as the worst-case tolerance design can verify 
the 100% feasibility of a candidate RT. For a circuit involving 
N parameters to be designed, vertex analysis provides that the 
check of feasibility is performed in all the 2N vertices of the N-
dimensional axis-aligned box in the parameter space. If the 
design constraints are met in all the vertices, the RT is 
considered as 100% feasible. This approach, although natural 
and very simple to implement, suffers from a severe 
dimensional dependence, since it requires 2N checks of the 
design constraints. Nevertheless, in most practical cases the 
tolerance design process can be restricted to a small number of 
parameters, for example the most expensive and valuable 
components of the circuit, so preventing from the explosion of 
the number of RT vertices in which the constraint satisfaction 
has to be checked [15], [22]. 
For the optimal circuit tolerance design, the tolerance 
assignment and design centering can be merged to the aim of 
optimizing both central values and tolerances of parameters, 
reducing the circuit cost, and/or improving the circuit 
reliability. Indeed, a robust design can be attained by 
determining the widest tolerances of parameters guaranteeing 
performance specifications, and accounting for extreme 
operating conditions and parameters’ drifts. For example, such 
a task, which is to achieve 100% yield and at minimum cost, 
can be formulated as the following constrained optimization 
problem [1], [15], [22]: 
Minimize ∑
=
+=
N
k k
k
t
wCtC
1
A)( ,                     (2.1) 
subject to gj(p1, p2, …, pk, …, pN)∈[Lj, Uj], j =1, 2, …, R, with 
pk∈[ Lkp , 
U
kp ], 
C
kp =(
L
kp +
U
kp )/2, and tk=(
U
kp −
C
kp )/
C
kp , k 
=1, 2, …, N, where C(t) is an objective function of cost, CA is 
a fixed cost per circuit produced, N is the number of design 
parameters, and wk is the cost weighting constant associated 
with the design parameter tolerance assignment tk, a relative 
tolerance. gj is expressed by means of lower and upper bounds, 
Lj and Uj, respectively, and R is the number of design 
constraints. All the sets of parameters (p1, p2, …, pN) that meet 
the design constraints lie within the RA. The 100% yield can 
be checked by the vertex analysis. 
III.  QUALITY-ENGINEERING-BASED GENETIC 
ALGORITHM 
This section describes the proposed QEGA approach. The 
detailed steps are as follows. 
(i) Generation of Initial Population 
In the real coding representation, each chromosome is 
encoded as a vector of floating-point numbers, with the same 
length as the vector of designed variables. The real coding 
representation is accurate and efficient because it is closest to 
the real design space, and, moreover, the string length is the 
number of designed variables. However, binary substrings 
representing each variable with the desired precision are 
concatenated to represent an individual, and the resulting 
string encoding a large number of designed variables would 
wind up a huge string length. 
         
combinations of factor level, where 2Q is the total number of 
experiments needed for all combinations of factor levels. 
(iv) Mutation Operation 
The basic concept of mutation operation is also derived 
from convex set theory [21], [23]. Each gene, in a single 
chromosome, depending on the mutation rate pm, executes the 
mutation of convex combination. For a given chromosome Θ 
= (x1, x2, …, xi, xj, xk,…, xρ), if the element xi is determined to 
execute the mutation operation and the other xk is randomly 
selected to join in, the resulting offspring becomes Θ' = (x1, x2, 
…, x'i, xj, xk,…, xρ), where the new gene x'i is x'i = (1−β ) xi + β 
xk, and β is a random value, in which β ∈[0, 1]. 
(v) Steps of QEGA 
The QEGA approach is a method of combining the TGA 
with the quality engineering method. The quality engineering 
method is inserted between crossover and mutation operations 
of the TGA. The detailed steps of the QEGA approach are 
described as follows. 
Step 0: Parameter setting. 
Input: population size ps, crossover rate pc, mutation rate 
pm, and number of generations. 
Output: the optimal chromosome and the fitness value. 
Step 1: Initialization.  
Step 2: Selection operation using the roulette wheel approach. 
Step 3: Crossover operation. 
Step 4: Select a suitable two-level orthogonal array for matrix 
experiments. 
Step 5: Choose randomly two chromosomes at a time to 
execute matrix experiments. 
Step 6: Calculate the fitness values and signal-to-noise ratios 
of n experiments in the orthogonal array Ln(2n-1). 
Step 7: Calculate the effects of the various factors (Ef1 and Ef2). 
Step 8: One optimal chromosome is generated based on the 
results from Step 7. 
Step 9: Repeat Steps 5 through 8 until the expected number 
(e.g., (1/4)× ps × pc) has been met. 
Step 10: The population via the quality engineering method is 
generated. 
Step 11: Mutation operation. 
Step 12: New offspring population is generated. 
Step 13: Sort the fitness values in increasing order among 
parents and offspring populations. 
Step 14: Select the better ps chromosomes as parents of the 
next generation. 
Step 15: Has the stopping criterion been met? If yes, then go to 
Step 16.  Otherwise, return to Step 2 and continue 
through Step 15. 
Step 16: Display the optimal chromosome and the fitness 
value. 
IV.  ELEMENTS FOR QEGA TO SOLVE DESIGN 
PROBLEM OF WORST-CASE CIRCUIT TOLERANCE 
This section describes some elements for the QEGA 
approach to solve the design problem of the worst-case circuit 
tolerance. The details are as follows. 
(i) Chromosomes’ Structure 
Each candidate RT, rather than in terms of lower and upper 
parameters’ values {[ Lp1 , 
Up1 ], [
Lp2 , 
Up2 ], …, [
L
Np , 
U
Np ]}, 
has been expressed by means of the couples of central values 
and relative tolerances {[ Cp1 , t1], [
Cp2 , t2], …, [
C
Np , tN]}, with 
C
kp =(
L
kp +
U
kp )/2 and tk=(
U
kp −
C
kp )/
C
kp , k =1, 2, …, N. 
The real coding technique is applied to solve the design 
problem of the worst-case circuit tolerance. In the real coding 
representation, each chromosome is encoded as a vector of 
floating-point numbers, with the same length as the vector of 
design parameters. 
Each set of design parameters’ central values and relative 
tolerances, [ Cp1 , 
Cp2 , …, 
C
Np , t1, t2, …, tN], represents a 
parallelepiped with 2N vertices in the space of parameters. 
(ii) Penalty Function 
The penalty function is used to convert a constrained 
optimization problem into an unconstrained one by means of a 
penalization of the unfeasible individuals in the population. 
The evolutionary method with the penalty function, navigating 
through unfeasible regions by reduced penalty value to 
feasible regions, offers better opportunity to close to feasible 
regions of the search space than the evolutionary algorithm 
with constraints, limiting search paths to feasible regions only. 
Therefore, in the constrained optimization problem, the 
evolutionary algorithm with a penalty function is easier to find 
the feasible individuals in a wide design parameter space than 
the evolutionary algorithm with constraints. To clarify this 
point, it is important to note the distinction between feasible 
and unfeasible individuals. As for the unfeasible individuals, 
each one of them violates a number of constraints included in 
the range [1, 2N×R], where N and R are the number of design 
parameters and design constraints, respectively: the higher this 
index is, the larger the penalty should be. Thus, the penalty 
function P is defined as follows. 
∑×
=
−+−=
R
j
jjUjjLp
N
UywyLwwP
2
1
)()( ,           (4.1) 
where yj is a calculated value depending on the function gj of 
the design constraint; Uj and Lj are the upper and lower 
bounds, respectively, of the gj; wp is a value which is to note 
the distinction between feasible and unfeasible individuals; wL 
and wU denote the weights; If yj < Lj, then wL =1 and wU =0; If 
yj > Uj, then wL =0 and wU =1; If Lj ≤ yj ≤ Uj, then wL =0 and 
wU =0. 
(iii) Objective Function and Fitness Function 
         
show that the QEGA approach can obtain better results than 
the method given by Spagnuolo and Vitelli [15] and has a 
robust and stable solution quality. Therefore, the QEGA 
approach, for the circuit design engineer, is very feasible as an 
evolutionary method to solve the design problem of the worst-
case circuit tolerance. 
ACKNOWLEDGEMENT 
This work was partially supported by the National Science 
Council, Taiwan, Republic of China, under grant numbers 
NSC95-2221-E327-032 and NSC95-2221-E153-002. 
REFERENCES 
[1] A. Wu, K. Y. Wu, R. M. M. Chen, and Y. Shen, “Parallel Optimal 
Statistical Design Method with response Surface Modelling Using 
Genetic Algorithms,” IEE Proc-Circuits Devices Syst., Vol. 145, pp. 7-
12, 1998. 
[2] M. H. Kalos and P. A. Whitlock, Monte Carlo methods, John Wiley and 
Sons, New Jersey, 1986. 
[3] S. W. Director and G. D. Hatchel, “The Simplicial Approach to Design 
Centering,” IEEE Trans. Computer-Aided Design, Vol. 24, pp. 363-371, 
1977. 
[4] D. E. Hocevar, P. F. Cox, and P. Yang, “Parametric Yield Optimization 
for MOS Circuit Blocks,” IEEE Trans. Computer-Aided Design, Vol. 7, 
pp. 645-658, 1988. 
[5] K. Krishna and S. W. Director, “The Linearized Performance Penalty 
(LPP) Method for Optimization of Parametric Yield and its Reliability,” 
IEEE Trans. Computer-Aided Design, Vol. 14, pp. 1557-1568, 1995. 
[6] J. W. Bandler and H. L. Abdel-Malek, “Optimal Centering, Tolerancing, 
Yield Determination via Updated Approximations and Cuts,” IEEE 
Trans. on Circuit and Syst., Vol. 25, pp. 853-871, 1978. 
[7] H. L. Abdel-Malek and J. W. Bandler, “Yield Optimization for Arbitrary 
Statistical Distributions, Part I - Theory,” IEEE Trans. Computer-Aided 
Design, Vol. 26, pp. 245-253, 1980. 
[8] R. M. Biernacki, J. W. Bandler, J. Song, and Q. J. Zhang, “Efficient 
Quadratic Approximation for Statistical Design,” IEEE Trans. on Circuit 
and Syst., Vol. 36, pp. 1449-1454, 1989. 
[9] H. L. Abdel-Malek and S. O. H. Abdel-Karim, “The Ellipsoidal 
Technique for Design Centering and Region Approximation,” IEEE 
Trans. Computer-Aided Design, Vol. 10, pp. 1006-1014, 1991. 
[10] J. M. Wojciechowski and J. Vlach, “Ellipsoidal Method for Design 
Centering and Yield Estimation,” IEEE Trans. Computer-Aided Design, 
Vol. 12, pp. 1570-1479, 1993. 
[11] S. S. Sapatnekar, P. M. Vaidya, and S. Kang, “Convexity-based 
Algorithms for Design Centering,” IEEE Trans. Computer-Aided Design, 
Vol. 13, pp. 1536-1549, 1994. 
[12] J. M. Wojciechowski, J. Vlach, and L. Opalski, “Design for 
Nonsymmetrical Statistical Distributions,” IEEE Trans. on Circuit and 
Syst. Vol. 44, pp. 29-37, 1997. 
[13] N. Femia and G. Spagnuolo, “True Worst-Case Circuit Tolerance 
Analysis Using Genetic Algorithms and Affine Arithmetic,” IEEE Trans. 
on Circuit and Syst., Vol. 47, pp. 1285-1296, 2000. 
[14] N. Femia and G. Spagnuolo, “Tolerance Design of Closed-Loop 
Controllers for DC-DC Voltage Regulators: Genetic Algorithms & 
Vertex Analysis Based Optimization,” Proc. of 2002 IEEE ISIE, 
L’Aquila, pp. 94-99, 2002. 
[15] G. Spagnuolo and M. Vitelli, “Worst-Case Tolerance Design by Genetic 
Algorithms,” Proc. of 2002 IEEE ISIE, L’Aquila, pp. 1178-1183, 2002. 
[16] M. Vitelli, Spagnuolo, G., and Femia, N., “Tolerance Design of DC-DC 
Switching Regulators,” Proc. of 2002 IEEE International Symposium on 
Circuits and Systems, Vol. 4, pp. 751-754, 2002. 
[17] J. H Chou., W. H. Liao and J. J. Li, “Application of Taguchi-Genetic 
Method to Design Optimal Grey-Fuzzy Controller of a Constant Turning 
Force System,” Proc. of the 15th CSME Annual Conf., Tainan, Taiwan, 
pp. 31-38, 1998. 
[18] M. S. Phadke, Quality Engineering Using Robust Design, Prentice-Hall, 
New Jersey, 1989. 
[19] D. C. Montgomery, Design and Analysis of Experiments, Wiley, New 
York, 1991. 
[20] S. H Park, Robust Design and Analysis for Quality Engineering, 
Chapman and Hall, London, 1996. 
[21] M. Gen and R. Cheng, Genetic Algorithms and Engineering Design, 
John Wiley and Sons, New York, 1997. 
[22] R. Spence and R. S. Soin, , Tolerance Design of Electronic Circuits, 
Addison Wesley Publishing Company, New York 1988. 
[23] M. Bazaraa, J. Jarvis, and H. Sherali, Linear Programming and Network 
Flows, John Wiley and Sons, New York, 1990. 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 1 A high pass LC ladder filter. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 2 Response and specifications for the LC circuit. 
 
Table 1. Comparisons for the minimum cost by using the different method. 
Method Best Average Standard Deviation 
QEGA 2.9681 2.9692 0.0038 
GA-based 
(Spagnuolo and 
Vitelli [15]) 
2.9915 NA NA 
 
Table 2. Computational results for the minimum cost and tolerances by using 
the different approach. 
Approach Cost C1 C3 C4 C5 
QEGA 2.9681 10nF±8.8% 16nF±7% 35nF±9.5% 98nF±9.4%
GA-based 
(Spagnuolo 
and Vitelli 
[15]) 
2.9915 10nF±9.1% 16nF±6.9% 35nF±8.5% 98nF±8.4%
 
R1
R2R3 R4
C1 C2 C3
C4 C5
L1 L2
VoutVin
及交換心得，我們深感獲益良多。 
    我與學生的論文“Stable and Quadratic Optimal Fuzzy PDC Control for 
TS-Fuzzy-Model-Based Control Systems” 及 “Applications of Multi-Objective 
Evolutionary Algorithms to Cluster Tool Scheduling”分別被安排在Fuzzy Systems 
and Applications和Text Mining and Multimedia Data Mining Techniques and 
Applications的場次中發表，在會議中有多位學者提出問題和我們討論，彼此交
換心得，使我們獲益匪淺。 
 
二、與會心得： 
    各國的學者專家共聚一堂，彼此交換研究心得，發表新的研究成果，參與
此次國際會議以及在中國大陸的所見所聞，讓我們收獲良多，而且也有下列幾
點心得： 
(1) 今年台灣學者與研究生在論文發表量與出席人數方面，顯現非常的積極
與活躍，爾後應當繼續維持此情況，以促進台灣學術界之國際聲望。 
(2) 生命科學、人文社會科學與工程技術科學之交流與影響互動，將是研究
之一大趨勢。台灣在此方面之研究則非常薄弱，有待台灣學者專家之共
同努力。 
(3) 從各國發表之論文，可發現台灣學者在實務研究與產學合作方面均有待
加強。 
(4) 台灣學者專家應加強與大陸學術界之研究交流，相互合作以奠立華人在
國際學術界之領導地位。 
 
三、建議事項： 
    今年主辦單位安排論文發表之時程非常密集，致使中午用餐時間很短，而
且主辦單位所提供中午之簡便餐點內容反映不佳；另外，會場中提供與會者討
論和休息的空間嚴重不足，造成與會者在相互討論和交流方面的不便；這些缺
失可提供我國承辦國際會議時的警惕，以確保會議的成功和完美。 
 
四、攜回資料名稱： 
    攜回IEEE 2006 ICICIC論文集，以及會議議程手冊乙本。 
 
denotes the n-dimensional state vector, 
       > @ T21 ,,, tutututu p  denotes the p-
dimensional input vector,  tzi  gi ,,2,1   are the 
premise variables, iA  and iB  Ni ,,2,1   are, 
respectively, the nnu  and pnu  consequent constant 
matrices, and ijM  Ni ,,2,1   and gj ,,2,1  
are the fuzzy sets.  
The resulting TS-fuzzy-model-based dynamic 
system inferred from (1) is represented as 
         ,
1
¦
 
 
N
i
iii tuBtxAtzhtx               (2) 
in which        > @T21 ,,, tztztztz g  denotes the g-
dimensional premise vector,     tzhi
     ,
1
¦
 
N
i
ii tzwtzw      ,
1

 
 
g
j
jiji tzMtzw  and 
  tzM jij  are the grades of membership of  tz j  in 
the fuzzy sets ijM  Ni ,,2,1   and .,,2,1 gj  
It can be seen that, for all t,    0ttzhi  and 
   .1
1
¦
 
 
N
i
i tzh
Before we are able to synthesize a controller such 
that the good control performance for a given dynamic 
system can be efficiently achieved, it is necessary that 
the given dynamic system can be stabilized by the 
controller [5]. Therefore, the problem considered in 
this paper is to design the quadratic optimal fuzzy PDC 
controller for the TS-fuzzy-model-based dynamic 
system in (2) such that the TS-fuzzy-model-based 
dynamic system in (2) can be stabilized by the fuzzy 
PDC controller, and then such that the quadratic finite-
horizon integral performance index 
       > @³  
ftq
dttuRtutxQtxJ
0
TT                      
       > @ ¦³

 

 
1
0
1
TT
q
k
tk
tk
dttuRtutxQtx
f
f
      (3) 
is minimized, where ft  denotes a small time interval 
which is chosen for the independent variable t, q is a 
positive integer specified by the designer, Q is a 
symmetric positive-semidefinite matrix, and R is a 
symmetric positive-definite matrix. 
3. Stable and quadratic optimal fuzzy PDC 
controllers design 
In this section, we will apply both the SCSA [6] and 
the HTGA [7] to design the quadratic optimal fuzzy 
PDC controller for the TS-fuzzy-model-based dynamic 
system in (2) to ensure that the TS-fuzzy-model-based 
dynamic system in (2) can be stabilized by the fuzzy 
PDC controller, and then to make the quadratic 
integral performance index in (3) be minimized. 
Here, we consider the following fuzzy PDC 
controller: 
      ,
1
¦
 
 
N
i
ii txFtzhtu                    (4) 
where iF  Ni ,,2,1  denotes the np u local  
feedback gain matrices. 
By substituting (4) into (2), we can get the closed-
loop TS-fuzzy-model-based dynamic system as 
          ¦¦
  
 
N
i
N
j
jiiji txFBAtzhtzhtx
1 1
.       (5) 
In what follows, we present an LMI-based criterion 
to ensure that, for the specified local feedback gain 
matrices iF  ,,,2,1 Ni   the closed-loop TS-
fuzzy-model-based dynamic system in (5) is stable. 
Theorem: 
The closed-loop TS-fuzzy-model-based dynamic 
system in (5) is stable, if, for the specified local 
feedback gain matrices jF  Nj ,,2,1   in (4), 
there exists a symmetric positive definite matrix P such 
that the following linear matrix inequalities (LMIs) are 
simultaneously satisfied: 
    ,0T  jiijii FBAPPFBA             (6) 
for .,,2,1, Nji  
Proof: Here we omit it due to space limitation. 
Now, by using the SCSA [6], the quadratic integral 
performance index J and the explicit form for the 
coefficient matrix  kx~  of  tx  obtaibed by using 
SCSA become, respectively, the following algebraic 
forms: 
         ¦ ¦¦

   
»
»
¼
º
«
«
¬
ª
¸
¸
¹
·
¨
¨
©
§
 
1
0 1
T
1
T
,~~trace
q
k
k
N
i
ji
N
j
kjki
k xFRFzhzhQxWJ  (7) 
and 
          ,ˆˆ
1
1
T
1
k
N
i
jiikj
N
j
kimn
k QFBAHzhzhIx

  »
»
¼
º
«
«
¬
ª
 ¦¦   (8) 
where        > @kmkkk xxxx 110 ,,,~    and 
       > @ TT1T1T0 ,,,ˆ kmkkk xxxx    are respectively, the 
mnu  and 1umn  coefficient matrix,  ksx
 1,,1,0  ms   are the coefficient, mnI  is the 
mnmnu  identity matrix,   > @ ,0,,0,0,ˆ TTTTT kk xQ  
 ,fk tkxx    is the Kronecker product, H is the 
operational matrix of integration for the shifted 
Chevbyshev series (SCS) [6], W is the product-
Proceedings of the First International Conference on Innovative Computing, Information and Control (ICICIC'06)
0-7695-2616-0/06 $20.00  © 2006
approach, which integrates the SCSA, the HTGA, and 
the presented LMI-based stabilizability condition, to 
design the stable and quadratic optimal fuzzy PDC 
controller such that there exists a symmetric positive 
definite matrix P to make the LMIs in (6) hold, and 
such that the quadratic integral performance index in 
(13) is minimized. The evolutionary environments of 
the HTGA used in this paper are: the population size is 
200, the crossover rate is 0.8, the mutation rate is 0.1, 
and the generation number is 100. 
We adopt the fuzzy PDC controller in (4), then, 
after using the proposed integrative approach and the 
LMI toolbox [8] with 500dijf  in which ijf  1 i
and 4,3,2,1 j  are the elements of the local 
feedback gain matrices iF  ,4,3,2,1 i  we can obtain 
that the performance index is ,7175.1 J  and the 
quadratic optimal local feedback gain matrices are 
> @,0000.1000000.2302550.328380.121  F
> @,0000.1000000.2305063.342394.162  F
> @,4114.860337.4108247.456926.163  F
and 
> @,0000.1004732.3028749.393409.184  F
and we can get a symmetric positive definite matrix P
as
.10
0030.00081.00011.00003.0
0081.01657.11511.00688.0
0011.01511.00264.00112.0
0003.00688.00112.00073.0
3u
»
»
»
»
¼
º
«
«
«
«
¬
ª




 P
So, we can conclude that the obtained quadratic 
optimal fuzzy PDC controller can make the closed-
loop TS-fuzzy-model-based dynamic system of this 
example stable, and may simultaneously minimize the 
quadratic finite-horizon integral performance index in 
(13). 
The output response for the position  tx1  of the 
ball for the ball-and-beam system with the designed 
quadratic optimal fuzzy PDC controller is shown in 
Figure 1 with the initial condition    0x
> @ .0,0564.0,0,1 T
5. Conclusions 
A new method integrating the SCSA, the proposed 
sufficient LMI condition and the HTGA is presented to 
design the stable and quadratic optimal fuzzy PDC 
controllers of the TS-fuzzy-model-based control 
systems under the minimization of a quadratic finite-
horizon integral performance index. Since the 
proposed method only involves the algebraic 
computation, the design procedure of the quadratic 
optimal fuzzy PDC controllers for the TS-fuzzy-
model-based control systems may be either greatly 
reduced or much simplified accordingly. The 
illustrative example regarding the ball-and-beam 
system has shown that the proposed approach is 
effective for designing the stable and quadratic optimal 
fuzzy PDC controllers of the TS-fuzzy-model-based 
control systems. 
6. References 
[1] T. Takagi and M. Sugeno, “Fuzzy identification of systems and 
its applications to modeling and control,” IEEE Trans. on 
Systems, Man and Cybernetics, vol. 15, pp. 116-132, 1985. 
[2] K. Tanaka and H. O. Wang, Fuzzy Control Systems Design and 
Analysis: A Linear Matrix Inequality Approach, John Wiley 
and Sons, New York, 2001. 
[3] S. C. Tong, T. Wang, Y. P. Wang, and J. T. Tang, Design and 
Stability Analysis of Fuzzy Control Systems, Science Press, 
Beijing, 2004. 
[4] B. Friedland, Control System Design: An Introduction to State-
Space Methods, McGraw-Hill, New York, 1986. 
[5] N. S. Nise, Control Systems Engineering, John Wiley and Sons, 
New York, 2000. 
[6] W. H. Ho and J. H. Chou, “Solutions of Takagi-Sugeno fuzzy-
model-based dynamic equations via orthogonal functions,” 
IEICE Trans. on Fundamentals of Electronics, Communications 
and Computer Sciences, vol. E87-A, pp. 3439-3442, 2004. 
[7] J. T. Tsai, T. K. Liu, and J. H. Chou, “Hybrid Taguchi-genetic 
algorithm for global numerical optimization,” IEEE Trans. on 
Evolutionary Computation, vol. 8, pp.365-377, 2004. 
[8] P. Gahinet, A. Nemirovski, A. J. Laub, and M. Chilali, LMI 
Control Toolbox, The Math Works Inc., Massachusetts, 1995. 
Acknowledgement 
This work was supported by the National Science 
Council, Taiwan, under grant number NSC 94-2213-
E327-001. 
Figure 1. Response of the position  tx1  of the ball 
for the ball-and-beam system. 
Proceedings of the First International Conference on Innovative Computing, Information and Control (ICICIC'06)
0-7695-2616-0/06 $20.00  © 2006
waiting for move to C3 and J2 is waiting for 
move to C2 become the state of circle waiting, 
and this called deadlock. 
Table 1. Job requirements. 
Jobs/Operations O1 O2 O3 
J1 C 1 C 2 C 3 
J2 C 3 C 2 None 
Figure1. A schedule with deadlock state. 
3. MEA Approach for Cluster Tool 
Scheduling  
This flowchart of MEA approach for cluster tool 
scheduling is shown in Figure 2. The details of the 
algorithm will be explained below. 
Figure 2. Flowchart of the MEA approach. 
3.1.  Chromosome Representation 
For scheduling problems, the chromosome 
representation method is used to encode a schedule as a 
sequence of jobs and operations from Gen and Cheng 
[5]. The chromosome length is determined by the 
number of machines and the number of jobs 
simultaneously. Each gene denotes each operation of a 
job and a chromosome can be decoded into a schedule 
indirectly.  
For example, the chromosome [1 3 3 2 3 2 1 2 1 3 1] 
represents the scheduling for the operations of the jobs 
listed in Table 2. 
Table 2. Operation Precedence. 
Jobs/Operations O1 O2 O3 O4 
J1 C 1 C2 C3 C4 
J2 C 2 C3 C1 None
J3 C 2 C3 C4 C2 
3.2. Fitness Function 
On the basis of the cluster tool scheduling, we have 
computed all of final work time on each chamber and 
selected least the makespan to the fitness function. The 
fitness function is defined as:  
Min max [(C1,1+T1,out),(C2,2+T2,out),…, (Cj,k+Tj,out)],  (1) 
where the makespan is defined as: 
Max [(C1,1+T1,out),(C2,2+T2,out),…, (Cj,k+Tj,out)].         (2) 
It is equivalent to the completion time of last job to 
arrive the output loadlock. A minimum makespan have 
a high utilization of the machine [6]. The definitions of 
variables and symbols are shown as follows. 
Sj,k : The starting time of job j on the Chamber k.
Cj,k : The completion time of job j on the Chamber k. 
Pj,k : The processing time of job j on the Chamber k.
Tin,k : The transporting time of job j on the robot from 
input loadlock to Chamber k.
Tk1,k2 : The transporting time of job j on the robot from 
Chamber k1 to Chamber k2.
Tk,out : The transporting time of job j on the robot from 
Chamber k to output loadlock. 
If the chromosome is not detected a deadlock in the 
schedule, then Cj,k=Sj,k+Pj,k. However, the chromosome 
is detected a deadlock in the schedule, a high penalty 
function is assigned to the makespan of the 
chromosome to lower its fitness values. So we can 
eliminate the chromosomes with deadlock in the 
population later by the selection operation. 
3.3. Crossover 
This operator used here are the one-cut-point 
crossover integrated with an arithmetical operator 
derived from convex set theory [5,7], which randomly 
selects one cut-point, exchanges the right parts of two 
parents after the cut-point, and calculates the linear 
combinations at the cut-point genes to generate new 
offspring. For example, let two parents be x = (x1,
x2, …, xN) and y = (y1, y2, …, yN ). If they are crossed 
after the kth position, the resulting offspring defined as: 
Proceedings of the First International Conference on Innovative Computing, Information and Control (ICICIC'06)
0-7695-2616-0/06 $20.00  © 2006
We use Xiong and Zhou’s example [2] to evaluate 
our proposed method and its results. There are three 
chambers C1, C2, and C3, one robot, one input 
loadlock, and one output loadlock station. The robot is 
responsible for loading, unloading, and handling parts 
between machines. There are four jobs, J1 to J4, and 
their precedence of operation, operation time and 
transporting time are listed in Table 3. Li means 
loading the ith job from the load station, Ui represents 
the unloading of the ith job to the unload station, and 
Ri,j stands for transporting the ith job for its jth 
operation.  
Applying MEA to find an optimal feasible solution 
shown as Figure 3. In the MEA, the parameters of 
parent population equals to 100, offspring population 
equals to 80, crossover rate equals to 90% and 
mutation rate equals to 10%. Table 4 describes the 
results obtained from 100 times simulation of MEA, 
GA with Color Petri Nets [4] and Petri Nets [2].  
Table 3.Precedence of Operation.  
O1 O2 O3 C1 C2 C3 Li Ri,2 Ri,3 Ui
J1 C1 C2 C3 40 100 36 5 3 5 4
J2 C2 C1 C3 65 45 98 5 3 6 4
J3 C1 C2 C3 212 73 32 6 7 4 5
J4 C3 C2 C1 35 65 55 4 3 5 5
Figure 3.The optimal deadlock-free schedule of the 
system with material handling considered for MEA. 
Table 4.The comparison of results obtained using the 
proposed MEA method and others. 
Algorithm 
Item 
MEA GA with CPN Petri Nets
Optimal  solution 560 560 560 
Average Makespan 560.5 561.4 None 
Successful Rate 97% 91% None 
5. Conclusions 
The results represented in this paper demonstrated 
that it is feasible and effective to apply such a MEA to 
the cluster tool systems in the example. In the research, 
the deadlock problem is solved mostly by GA with 
CPN [4] or Petri Nets [2]. However, in this paper, we 
have proposed the idea of penalty value to solve it by 
looking for the rank value and Fitness value of Pareto 
curve with MOI and Improved Rank-based Fitness 
Assignment Method to eliminate unfeasible solution 
after evolution. In a word, the method is more accurate 
and faster than others, it not only can build mathematic 
model easily, but also global searching for all solutions 
to find optimal solutions.    
References 
[1] W. H. Chen, Reliability of Cluster Tools in 
Semiconductor Production Equipment, Master Thesis, 
Department of Mechanical Engineering, National 
Chiao Tung University, 2002. 
[2] H. H. Xiong and M. C. Zhou, “Deadlock-free 
Scheduling of an Automatic Manufacturing System 
Based on Petri nets”, in Proc. IEEE Int. Conf.  
Robotics and Automation, vol. 2, pp. 945-950, 1997. 
[3] X. Gang and Z. Wu, “A kind of deadlock-free 
scheduling method based on Petri net”, in Proc. 7th 
IEEE International Symposium. High Assurance 
Systems Engineering, pp. 195-200, 2002. 
[4] C. J. Kuo, Applications of Coloured Petri Net and 
Genetic Algorithms to Cluster Tool Scheduling, Master 
Thesis, Department of Mechanical and Automation 
Engineering National Kaohsiung First University of 
Science and Technology, 2004. 
[5] M. Gen and R. Cheng, Genetic Algorithms and
Engineering  Design, in Ashikaga Institute of 
technology Ashikaga, Japan, pp. 202-205, 1997. 
[6] M. Pinedo, Scheduling Theory, Algorithms, and 
Systems, 2nd ed, Prentice Hall, pp. 14-19, 2002. 
[7] Bazaraa, M., J. Jarvis, and H. Sherali, Linear 
Programming and Network Flows, John Wiley 
and Sons, New York, 1990. 
[8] C. C. Chuy, “Analysis of Genetic Algorithms for Job 
Shop Scheduling Problem with Set-up Time and Time 
Interval Due-date”, Master Thesis, Institute of 
Industrial Engineering and Management Yuan-Ze 
University, 2002. 
[9] T. K. Liu, Application of Multiobjective Genetic 
Algorithm to Control System Design, National Tohoku 
University, Ph. D, 1997. 
[10] K. Kristinsson and G. A. Dumont, “System 
Identification and Control using Genetic 
Algorithms“, IEEE Transactions on Systems, Man, 
and Cybernetics, Vol. 22, no. 5, pp. 1033-1046, 
1992. 
Proceedings of the First International Conference on Innovative Computing, Information and Control (ICICIC'06)
0-7695-2616-0/06 $20.00  © 2006
線性系統識別，其演講內容精闢有趣，而且也可提供我在規劃發展學術領域方
向上的參考。在會議期間，我們參加的論文發表場次以人工智慧，以及控制系
統設計和應用等課題為主，經過參與討論及交換心得，我們深感獲益良多。 
    我的論文“Circuit Tolerance Design Using an Improved Genetic Algorithm”被
安排在12月8日之Optimization的場次中發表，在會議中有多位學者提出問題和
我們討論，彼此交換心得，使我們獲益匪淺。 
 
二、與會心得： 
    各國的學者專家共聚一堂，彼此交換研究心得，發表新的研究成果，參與
此次國際會議以及在新加坡的所見所聞，讓我們收獲良多，而且也有下列幾點
心得： 
(1) 台灣的學者在研究領域方面，普遍存在一窩蜂的集中在某些領域，在研
究課題的廣度上有待努力。 
(2) 生命科學、人文社會科學與工程技術科學之交流與影響互動，將是研究
之一大趨勢。台灣在此方面之研究則非常薄弱，有待台灣學者專家之共
同努力。 
(3) 從各國發表之論文，可發現台灣學者在實務研究與產學合作方面均有待
加強。 
(4) 大陸學者參加國際研討會的人數比台灣學者多，台灣學者專家應加強與
大陸學術界之研究交流，相互合作以奠立華人在國際學術界之領導地位。
 
三、建議事項： 
    建議國科會與教育部提供更多學者出席國際會議之經費與名額(包括提供
經費與名額，給未獲得國科會研究計畫案的學者)，以培養國際觀，綿延台灣
在國際學術界持續的活絡人脈和增進我國的國際地位。 
 
四、攜回資料名稱： 
    攜回IEEE 2006 ICARCV論文集之光碟片乙片，以及會議議程手冊乙本。
 
         
robust” means that the standard deviation of the fitness 
member values is relatively small by using the proposed 
QEGA approach. We use the QEGA approach with the 
penalty function for the solution of the worst-case circuit 
tolerance design problem. The penalty function is employed to 
convert the constrained optimization problem of the worst-
case circuit tolerance design into an unconstrained one by 
means of a penalization of the unfeasible individuals. Once the 
evolutionary approach is established, the worst-case circuit 
tolerance design method can be used for the remaining design 
centering and tolerance assignment operations. In addition, 
vertex analysis [22], an easy-to-use tool, is used to verify the 
100% feasibility of a candidate tolerance region. 
II.  PROBLEM DEFINITION 
Let it be given a circuit including N design parameters, 
characterized by a central value Ckp  and a relative tolerance tk, 
k =1, 2, …, N. Their allowable values define an N-dimensional 
sub-space of ℜN named space of parameters. A tolerance 
region (RT) is any hyper-rectangle included in the parameter 
space and defined by taking a bounded range of variation for 
each parameter: pk∈[ Lkp , 
U
kp ], with 
C
kp = (
L
kp +
U
kp )/2 and 
tk=( Ukp −
C
kp )/
C
kp , k =1, 2, …, N. Thus, if each parameter is 
related to an axis of the parameter space, the RT is an N-
dimensional axis-aligned parallelepiped in the parameter 
space. Let it be also given R design constraints regarding as 
many functions of circuit parameters: fj(p1, p2, …, pN)∈[Lj, Uj], 
j =1, 2, …, R. Each one is expressed by means of lower and 
upper bounds, Lj and Uj, respectively, within which the 
performance function fj assumes acceptable values. All the sets 
of parameters (p1, p2, …, pN) that meet the design constraints 
lie within a region of the parameter space that is traditionally 
named region of acceptability (RA). The subset of RT given by 
the intersection between the RT and the RA, RT ∩ RA, is the 
feasibility region (RF). The RF is an N-dimensional sub-space 
that may be empty as well as equal to the RT itself, depending 
on the mutual position between the RT and the RA in the 
parameter space. It bounds all the sets of the values of 
parameters that guarantee that the design constraints are met. 
Each point in the RF corresponds to a feasible set of 
parameters. Given the design constraints (the RA) and 
designed the parameters’ tolerances (the RT), the yield is an 
evaluation index, lying in the range [0, 100], that allows to 
quantify the production rate and/or the reliability of the 
designed circuit with respect to the variations of its own 
parameters. 
As for the relative position between the RA and the 
designed RT, it is worth noting that it is not sufficient to give 
rise to a 100% yield by simply inscribing the RT into the RA. 
Indeed, the true goal in the tolerance design is twofold: at the 
same time, the designer seeks the highest yield value and the 
widest parameters’ tolerances, namely the RT of maximum 
volume. In the large part of cases, the RA can be assumed 
convex and simply connected. Thus, the evolutionary strategy 
is adopted to make the allowable parameters’ tolerances as 
large as possible to achieve a 100% yield by vertex analysis 
used to check the feasibility of each candidate RT. The vertex 
analysis regarded as the worst-case tolerance design can verify 
the 100% feasibility of a candidate RT. For a circuit involving 
N parameters to be designed, vertex analysis provides that the 
check of feasibility is performed in all the 2N vertices of the N-
dimensional axis-aligned box in the parameter space. If the 
design constraints are met in all the vertices, the RT is 
considered as 100% feasible. This approach, although natural 
and very simple to implement, suffers from a severe 
dimensional dependence, since it requires 2N checks of the 
design constraints. Nevertheless, in most practical cases the 
tolerance design process can be restricted to a small number of 
parameters, for example the most expensive and valuable 
components of the circuit, so preventing from the explosion of 
the number of RT vertices in which the constraint satisfaction 
has to be checked [15], [22]. 
For the optimal circuit tolerance design, the tolerance 
assignment and design centering can be merged to the aim of 
optimizing both central values and tolerances of parameters, 
reducing the circuit cost, and/or improving the circuit 
reliability. Indeed, a robust design can be attained by 
determining the widest tolerances of parameters guaranteeing 
performance specifications, and accounting for extreme 
operating conditions and parameters’ drifts. For example, such 
a task, which is to achieve 100% yield and at minimum cost, 
can be formulated as the following constrained optimization 
problem [1], [15], [22]: 
Minimize ∑
=
+=
N
k k
k
t
wCtC
1
A)( ,                     (2.1) 
subject to gj(p1, p2, …, pk, …, pN)∈[Lj, Uj], j =1, 2, …, R, with 
pk∈[ Lkp , 
U
kp ], 
C
kp =(
L
kp +
U
kp )/2, and tk=(
U
kp −
C
kp )/
C
kp , k 
=1, 2, …, N, where C(t) is an objective function of cost, CA is 
a fixed cost per circuit produced, N is the number of design 
parameters, and wk is the cost weighting constant associated 
with the design parameter tolerance assignment tk, a relative 
tolerance. gj is expressed by means of lower and upper bounds, 
Lj and Uj, respectively, and R is the number of design 
constraints. All the sets of parameters (p1, p2, …, pN) that meet 
the design constraints lie within the RA. The 100% yield can 
be checked by the vertex analysis. 
III.  QUALITY-ENGINEERING-BASED GENETIC 
ALGORITHM 
This section describes the proposed QEGA approach. The 
detailed steps are as follows. 
(i) Generation of Initial Population 
In the real coding representation, each chromosome is 
encoded as a vector of floating-point numbers, with the same 
length as the vector of designed variables. The real coding 
representation is accurate and efficient because it is closest to 
the real design space, and, moreover, the string length is the 
number of designed variables. However, binary substrings 
representing each variable with the desired precision are 
concatenated to represent an individual, and the resulting 
string encoding a large number of designed variables would 
wind up a huge string length. 
1884
         
combinations of factor level, where 2Q is the total number of 
experiments needed for all combinations of factor levels. 
(iv) Mutation Operation 
The basic concept of mutation operation is also derived 
from convex set theory [21], [23]. Each gene, in a single 
chromosome, depending on the mutation rate pm, executes the 
mutation of convex combination. For a given chromosome Θ 
= (x1, x2, …, xi, xj, xk,…, xρ), if the element xi is determined to 
execute the mutation operation and the other xk is randomly 
selected to join in, the resulting offspring becomes Θ' = (x1, x2, 
…, x'i, xj, xk,…, xρ), where the new gene x'i is x'i = (1−β ) xi + β 
xk, and β is a random value, in which β ∈[0, 1]. 
(v) Steps of QEGA 
The QEGA approach is a method of combining the TGA 
with the quality engineering method. The quality engineering 
method is inserted between crossover and mutation operations 
of the TGA. The detailed steps of the QEGA approach are 
described as follows. 
Step 0: Parameter setting. 
Input: population size ps, crossover rate pc, mutation rate 
pm, and number of generations. 
Output: the optimal chromosome and the fitness value. 
Step 1: Initialization.  
Step 2: Selection operation using the roulette wheel approach. 
Step 3: Crossover operation. 
Step 4: Select a suitable two-level orthogonal array for matrix 
experiments. 
Step 5: Choose randomly two chromosomes at a time to 
execute matrix experiments. 
Step 6: Calculate the fitness values and signal-to-noise ratios 
of n experiments in the orthogonal array Ln(2n-1). 
Step 7: Calculate the effects of the various factors (Ef1 and Ef2). 
Step 8: One optimal chromosome is generated based on the 
results from Step 7. 
Step 9: Repeat Steps 5 through 8 until the expected number 
(e.g., (1/4)× ps × pc) has been met. 
Step 10: The population via the quality engineering method is 
generated. 
Step 11: Mutation operation. 
Step 12: New offspring population is generated. 
Step 13: Sort the fitness values in increasing order among 
parents and offspring populations. 
Step 14: Select the better ps chromosomes as parents of the 
next generation. 
Step 15: Has the stopping criterion been met? If yes, then go to 
Step 16.  Otherwise, return to Step 2 and continue 
through Step 15. 
Step 16: Display the optimal chromosome and the fitness 
value. 
IV.  ELEMENTS FOR QEGA TO SOLVE DESIGN 
PROBLEM OF WORST-CASE CIRCUIT TOLERANCE 
This section describes some elements for the QEGA 
approach to solve the design problem of the worst-case circuit 
tolerance. The details are as follows. 
(i) Chromosomes’ Structure 
Each candidate RT, rather than in terms of lower and upper 
parameters’ values {[ Lp1 , 
Up1 ], [
Lp2 , 
Up2 ], …, [
L
Np , 
U
Np ]}, 
has been expressed by means of the couples of central values 
and relative tolerances {[ Cp1 , t1], [
Cp2 , t2], …, [
C
Np , tN]}, with 
C
kp =(
L
kp +
U
kp )/2 and tk=(
U
kp −
C
kp )/
C
kp , k =1, 2, …, N. 
The real coding technique is applied to solve the design 
problem of the worst-case circuit tolerance. In the real coding 
representation, each chromosome is encoded as a vector of 
floating-point numbers, with the same length as the vector of 
design parameters. 
Each set of design parameters’ central values and relative 
tolerances, [ Cp1 , 
Cp2 , …, 
C
Np , t1, t2, …, tN], represents a 
parallelepiped with 2N vertices in the space of parameters. 
(ii) Penalty Function 
The penalty function is used to convert a constrained 
optimization problem into an unconstrained one by means of a 
penalization of the unfeasible individuals in the population. 
The evolutionary method with the penalty function, navigating 
through unfeasible regions by reduced penalty value to 
feasible regions, offers better opportunity to close to feasible 
regions of the search space than the evolutionary algorithm 
with constraints, limiting search paths to feasible regions only. 
Therefore, in the constrained optimization problem, the 
evolutionary algorithm with a penalty function is easier to find 
the feasible individuals in a wide design parameter space than 
the evolutionary algorithm with constraints. To clarify this 
point, it is important to note the distinction between feasible 
and unfeasible individuals. As for the unfeasible individuals, 
each one of them violates a number of constraints included in 
the range [1, 2N×R], where N and R are the number of design 
parameters and design constraints, respectively: the higher this 
index is, the larger the penalty should be. Thus, the penalty 
function P is defined as follows. 
∑×
=
−+−=
R
j
jjUjjLp
N
UywyLwwP
2
1
)()( ,           (4.1) 
where yj is a calculated value depending on the function gj of 
the design constraint; Uj and Lj are the upper and lower 
bounds, respectively, of the gj; wp is a value which is to note 
the distinction between feasible and unfeasible individuals; wL 
and wU denote the weights; If yj < Lj, then wL =1 and wU =0; If 
yj > Uj, then wL =0 and wU =1; If Lj ≤ yj ≤ Uj, then wL =0 and 
wU =0. 
(iii) Objective Function and Fitness Function 
1886
