一、 中文摘要 
 
本計畫之主要目的為提出一個以階層式視訊編碼為主的多重播放系統設計法則。該系
統可達成單點對多點的傳送，並具有下列特性： 
1. 傳送端結構簡單：傳送端僅負責執行階層式視訊編碼及通道編碼，並不需要考慮
不同接收端的網路環境。 
2. 接收端具有彈性：接收端可根據個別之網路特性選擇適當的傳送資料以最佳化其
效能。 
3. 結合 FEC 及 ARQ：在封包流失率很高時 FEC 的保護效能可能不佳，而 ARQ 則有
較長傳送延遲之缺點，本計畫使用 Hybrid Pseudo-ARQ 技術將 FEC 及 ARQ 結合以去除二
者之缺點同時保留其優點。 
在執行 Hybrid Pseudo-ARQ 時傳送端將 FEC 封包分階段傳送至不同的多重播放群組，
而接收端則在檢視其封包流失情況後至後續階段的FEC多重播放群組抓取適量的FEC封包
進行還原。 
在設計 Hybrid Pseudo-ARQ 時我們需要一個最佳的 Policy 來協助接收端判斷應抓取的
FEC 封包數。然而由於 Policy 的個數很多，所以我們使用動態規劃法來尋找最佳 Policy，
跟全搜尋法比較起來，動態規劃法降低了許多的計算複雜度。 
最後本計畫考慮網路環境變化的問題。通常網路的封包流失率、以及傳送的視訊內容
常會不斷的變化，而 Hybrid Pseudo-ARQ 需要這些參數來訂定 Policy。在網路環境變化快
速時，雖然使用動態規劃法決定 Policy 會得到最佳的效能，但是會造成計算上的沉重負擔。
所以我們提出一個快速搜尋 Table 法來降低此負擔同時滿足即時 Policy 最佳化之需求。 
本計畫所提出之架構及演算法，可增進多重播放系統在複雜網路環境下的傳送及容錯
能力，並進而提升多媒體通訊之應用範圍。 
 
關鍵詞：多重撥放系統、階層式傳送系統、Psuedo-ARQ 
 
二、 英文摘要 
 
A novel error control algorithm for robust video transmission is presented in this project. In the 
algorithm, both the source packets and parity packets are delivered in layers. Each receiver, in 
accordance with its available bandwidth and packet loss rate, employs the optimal policy for 
subscribing source layers and parity layers minimizing the average distortion of the reconstructed 
frames. The algorithm is able to perform fast policy adaptation for the location and time-varying 
network environments. The implementation of the fast adaptive algorithm is based on a novel 
table look-up process, in which the tables are constructed using a dynamic programming 
technique. Our experiments show that the algorithm is an effective alternative for the video 
broadcast applications where the robust transmissions over the heterogeneous network 
environment are desired. 
 
Keywords：Multicast Broadcast, Layered Transmission System, Pseudo-ARQ 
系統補傳，對於接收端而言這些系統是 ARQ 系統。在實現多重播放系統時，Hybrid 
Pseudo-ARQ 提供了 ARQ 之效能同時去除了 Feedback Implosion 之缺點。在使用 Hybrid 
Pseudo-ARQ 法則時接收端必需尋找最佳的決策(Policy)以在頻寬的限制下最小化所接收的
影像之平均誤差。此 Policy 包括到每一個視訊階層所屬的多重播放群組所抓取的 Source 封
包數，以及當 Source 封包流失時，到 FEC 階層所屬的多重播放群組所抓取的 Parity 封包數。
由於可能的 Policy 很多，我們無法用全搜尋法找到最佳 Parity，因此我們首先使用動態規劃
法來尋找最佳 Policy。 
值得注意的是當網路環境如頻寬、錯誤率或視訊影像內容發生改變時，最佳 Policy 也
會隨之變化，所以接收端也必需增加其計算負擔來產生新的 Policy。雖然動態規劃法之計
算量已比全搜尋少很多，但在視訊階層或 FEC 階層數很大或環境變化快速時，相關之計算
負擔可能仍舊很重。為了降低此一負擔，本論文的最後目的便為提出一個快速尋找最佳
Policy 之法則。在此法則中我們預先尋找並儲存了對於任意視訊內容、頻寬或錯誤率而言
皆有可能成為最佳的 Policy 於表中。若網路環境有所變動，則接收端僅需查表便可獲得新
的最佳 Policy。 
 
四、法則 
 
圖 1 是一個典型的階層式傳輸系統，為了重建不同品質的影像，我們把編碼後的嵌入
式位元流分送至 l 層傳輸。接收端則依據需要來選擇解碼從底層開始累積的位元流。能夠
解碼累積愈多的位元流則能得到愈好的效能。圖 2 是使用嵌入式影像編碼實現階層式傳輸
系統的一個實例，典型的嵌入式影像編碼有 3D SPIHT [3]與 Motion JPEG2000。在圖中我們
觀察到影像序列被分割成大小相同且不會互相重疊的群組畫面(Group of Frames; GOF)，每
一個群組畫面(GOF)都被獨立的編碼並封裝成封包有利於網路傳送。 
 
圖 1 階層式傳輸系統的基本架構。 
 
Layered
Video
Encoder
...
...
...
Decoder
(L-th Layer)
Decoder
(2nd Layer)
...
Decoder
(Base Layer)
...
Source Layer  1
Source Layer  2
LSource Layer
Source Layer  1
Source Layer  2
LSource Layer
  
 
圖 3 Hybrid Pseudo-ARQ 之多重播放系統 
 
圖 4 顯示的是圖 3 所示的 Hybrid Pseudo-ARQ 模組的一個例子，接收端在第一階段可
以抓 0 或 3 個封包；第二階段可以抓 0、1 或 2 個封包；第三階段可以抓 0 或 1 個封包，圖
中每一個狀態都用 ( )csw ,, 表示，其中 w 代表是第幾階段；s 代表收到的 Source 封包數；c
代表收到的 Parity 封包數。 
 
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
0 1 2 0 1 2 0 1 2
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
是否
收到
00 0 11 1
0 3
W=1: (1,0,0) (1,1,0) (1,2,0) (1,3,0)
W=2: (2,0,0) (2,0,1) (2,0,2) (2,1,0) (2,1,2)(2,1,1) (2,2,1) (2,2,2)(2,2,0)
W=3: (3,0,2) (3,0,3) (3,1,1) (3,1,2) (3,2,0 (3,2,1)
W=0: 初始狀態: (w,s,c)=(0,0,0)(0,0,0)
 
圖 4  Hybrid Pseudo-ARQ 與通道編碼器之例子。 
 
在這個 Hybrid Pseudo-ARQ 及通道編碼的模組中，我們把每個 State 的 Action 集合稱為
一個 Policyψ。假設每一層的階段(Epoch)數都一樣是 W， lψ 為第 l 層的 Policy， ( )lψε 代表
執行 Policy lψ 後，最後階段 W 解碼完成後，Source 封包仍流失的機率。讓 lMψ 為在 Policy lψ
Policyψ在狀態 q 所要選擇的 Action，我們可以發現當 ( )cswq ,,= 為最末端的狀態(Final State)
時， ( ) 0=qNψ ；也就是說，當 W=w 或是 W<w ，即使接收剩下所有的 Parity 也無法還原
的狀況；如果 q 不是最末端的狀態，我們使用下面公式來求 ( )qNψ 的值 
 
( ) ( )( ) ( )( ) ( )[ ]∑
′
′+′Δ′=
q
qNqqqNqqqPqN ψψ ψψ  ,   ,    
 
同樣地，我們假設在 Policy ψ之下，從狀態 q 開始，根據收到 Source 封包所還原的平
均 Source 封包數為 ( )qMψ ，而 ( )aqqM ,′Δ 為從狀態 q 經 Action a 到下個狀態q′  Source 封
包增加的量， 如果狀態 q 為最末端的話，我們可以得到 ( ) 0=qMψ ；此外，也可以簡單的
看出 
 
( ) ( )( ) ( )( ) ( )[ ]∑
′
′+′Δ′=
q
qMqqqMqqqPqM ψψ ψψ     ,  ,  
 
我們可以 ( )0,0,0=q 開始，利用公式(3-5)做遞迴求得 ( )qMψ 。我們結合 ( )qNψ 和 ( )qMψ ，
可以更改狀態 q 的 cost function 因此為 
 ( ) ( ) ( )qNqSMqC ψψψ λ+−=  
和 ( ) ( ) ( )aqqNaqqMSaqqC ,λ,,    ′Δ+′Δ−=′Δ ψψψ  
 
如果狀態 q 為最末端的話，我們可以得到 ( ) 0=qCψ ；同時，如果 q 不是最末端的話 
 
( ) ( )( ) ( )( ) ( )[ ]∑
′
′+′Δ′=
q
qCqqqCqqqPqC ψψ ψψ      , ,   
 
我們讓 Policy ∗ψ 的 Action ( )q∗ψ 對於每一個非末端的狀態 ( )cswq ,,= 都滿足 
 ( ) ( ) ( ) ( )[ ]∑
′
∗ ′+′Δ′= ∗
q
a
qCaqqCaqqPq ψψ , ,minarg     
 
這結果會讓狀態 q 用下面公式做遞迴 
 ( ) ( ) ( ) ( )[ ]∑
′
′+′Δ′= ∗∗
q
a
qCaqqCaqqPqC ψψ , ,min  
 
我們可以用歸納法得到由公式 (2) 定義的 Policy ∗ψ ，對於每個 ψ 都滿足( ) ( )qCqC ψψ ≤∗ ，所以 ∗ψ 會最小化公式(1)。 
當在第 t 個疊代時，最佳 Policy ( )tlψ 可以利用公式(1)、(2)的動態規劃來獲得，當完成
上述事項後，我們便可計算 Lagrangian 值 ( )( )tJ Ψ 。因為我們對每層做最佳化時，會把其他
層的 Policy 先固定住，只對某層的 Policy 做最佳化，所以 ( )( ){ }  tJ Ψ 是 Non-increasing 序列，
此外，Lagrangian 值最低是 0，所以我們可以保證 ( )( ){ }  tJ Ψ 會收斂。 
和全搜尋法做比較，動態規劃法所找到的最佳 Policy 會和全搜尋法找到的 Policy 相同，
而動態規劃法會大大的減少計算複雜度；但是只要動態規劃法的 L 或者是 W 很大的時候，
動態規劃法的計算複雜度還是會很高，為了要減低 Policy 在更新時的計算複雜度，我們提
出一個搜尋 Table 的方法來找 Policy。首先我們先重新定義 Cost Function ψC  
ψψψ NMC  η+−=  
其中 
S
λ=η  
(2) 
(3) 
(4) 
               (a)                                      (b) 
 
                (c)                                      
 
圖五   使用 UEP 與 Hybrid Pseudo-ARQ 的誤差效能評比(測試影像序列為
Susie)：(a) 05.0=ε (b) 1.0=ε (c) 15.0=ε  (d) 2.0=ε  
 
表一顯示的是動態規劃尋找最佳化 Policy 和我們提出的搜尋 Table 演算法決定 Policy
方法的計算複雜度。其中封包流失率為 0.1，我們使用“Susie”這個影像序列的 Distortion 
Increment( lDΔ )，實驗使用電腦的 CPU 為 Pentium-4 2.8GHz。搜尋 Table 演算法取得 Policy
的方法如下：根據輸入的影像序列，分別執行 200 次不同的λ值，得到 200 個 Policies，再
根據這 200 個 Policies 找出最佳的 Policy。根據表一可以發現到，我們所提出搜尋 Table 演
算法的時間複雜度遠低於動態規劃尋找最佳化 Policy 的方法，即使當 Table 欄位 U 增加到
200，我們提出搜尋 Table 演算法的法則所花費的時間也只是動態規劃尋找最佳化 Policy 方
法的 1%。 
 
查表法  動態規劃法 
U=50 U=100 U=150 U=200 
平均執行時
間 
2.530 0.015 0.019 0.023 0.034 
表一  動態規劃與搜尋 Table 所找最佳 Policy 所需時間比較，其中U 為 Table 儲存
Policy 的數目，使用“Susie＂這個影像序列。 
 
0
20
40
60
80
100
120
140
160
0 5 10 15 20 25 30 35
R
Distortion
Pseudo-ARQ
UEP
0
20
40
60
80
100
120
140
160
0 5 10 15 20 25 30 35
R
Distortion
Pseudo-ARQ
UEP
0
20
40
60
80
100
120
140
160
0 10 20 30 40
R
Distortion
Pseudo-ARQ
UEP
(d) 
0
20
40
60
80
100
120
140
160
180
0 5 10 15 20 25 30 35
R
Distortion
Pseudo-ARQ
UEP
 可供推廣之研發成果資料表 
■可申請專利  □ 可技術移轉                                      日期： 年 月 日 
國科會補助計畫 
計畫名稱：以階層式視訊影像編碼為基礎之強健式多重播放串流系
統之研究 
計畫主持人：黃文吉         
計畫編號：NSC 94－2213－E －003 －002－          
學門領域：電信 
技術/創作名稱 以階層式視訊影像編碼為基礎之強健式多重播放串流技術 
發明人/創作人 黃文吉 
技術說明 
中文： 
本技術主要可以用來設計一個以階層式視訊編碼為主的多重
播放系統。該系統可達成單點對多點的傳送，並具有下列特性： 
1. 傳送端結構簡單：傳送端僅負責執行階層式視訊編碼及通
道編碼，並不需要考慮不同接收端的網路環境。 
2. 接收端具有彈性：接收端可根據個別之網路特性選擇適當
的傳送資料以最佳化其效能。 
3. 結合 FEC 及 ARQ：在封包流失率很高時 FEC 的保護效能
可能不佳，而 ARQ 則有較長傳送延遲之缺點，本技術使用 Hybrid 
Pseudo-ARQ 方式將 FEC 及 ARQ 結合以去除二者之缺點同時保留
其優點。 
在執行 Hybrid Pseudo-ARQ 時傳送端將 FEC 封包分階段傳送
至不同的多重播放群組，而接收端則在檢視其封包流失情況後至後
續階段的 FEC 多重播放群組抓取適量的 FEC 封包進行還原。 
在設計Hybrid Pseudo-ARQ時我們需要一個最佳的 Policy來協
助接收端判斷應抓取的 FEC 封包數。然而由於 Policy 的個數很多，
所以我們使用動態規劃法來尋找最佳 Policy，跟全搜尋法比較起
來，動態規劃法降低了許多的計算複雜度。 
本技術也可以解決網路環境變化的問題。通常網路的封包流失
率、以及傳送的視訊內容常會不斷的變化，而 Hybrid Pseudo-ARQ
需要這些參數來訂定 Policy。在網路環境變化快速時，雖然使用動
態規劃法決定 Policy 會得到最佳的效能，但是會造成計算上的沉重
負擔。所以我們提出一個快速搜尋 Table 法來降低此負擔同時滿足
即時 Policy 最佳化之需求。 
附件二 
