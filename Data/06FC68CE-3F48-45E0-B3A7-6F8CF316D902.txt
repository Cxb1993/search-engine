中文摘要 
  此研究主要探討網路式智慧型控制之多自主式機器人編隊及合作在隊形控制上的不
同控制方法。網路式控制系統有別於傳統之控制系統，其為網路通訊技術和自動化控制技
術兩個學術領域的融合。系統可分為控制器端與驅動器/感測器端，前述兩者以網路(如:有
線網路、無線網路等)連結的方式，互相傳送控制訊號與感測器資料而形成閉迴路控制系
統。其意為位於遠端之控制系統只包含驅動器、感測器與受控廠，控制器位於本地並以網
路通訊作為媒介之控制。在通訊網路中，由於網路不確定性時延與封包丟失等因素，使控
制系統無法即時性運作並造成系統性能降低或使系統不穩定。 
  廣義預測控制理論(Generalized Predictive Control, GPC)為模式預估控制(Model 
Predictive Control) 理論中的一種，且廣義預測控制對於不確定性時延系統的適應力強。本
文提出基於廣義預測控制理論為基礎之方法，實現於無線網路(IEEE 802.11b)式控制系統
(Wireless NCS, WiNCS)，並探討無線網路時延與封包丟失對系統的影響。 
  一連串的馬達動作(如馬達前進之速度大小)形成多機器人的行為。而驅動多機器人系
統的傳統控制方法採用的是考慮機械動力學的數學模型，並未考量其對於環境的適應性及
自主性。隨著感測技術的發展，本研究提出模糊邏輯控制架構來達成多移動式機器人控制
及導航。藉由已知的移動式機器人位置及方向，整合單一機器人的路徑追蹤、避障、目標
搜尋及維持隊形的行為。除了目標驅動外，智慧型階層框架使得機器人能決策出各行為的
優先權。藉由提出的控制方法，移動式機器人能夠跟隨著直線、圓形等路線並同時避障。
最後，為了測試本論文提出方法的可行性，亦給予相關的模擬來驗證 
 
 
 
 
 
 
 
 
 
關鍵字: 隊型控制、圖論、運動規劃、網路式控制系統、時延、封包丟失、廣義預測控制、 
軌跡追踪、模糊控制、自主式移動機器人 
Introduction 
In the early 1970, the most widely accepted definition of an industrial robot is: "a 
reprogrammable multi-functional manipulator designed to move material, parts, tools or 
specialized devices through variable programmed motions to accomplish a variety of tasks", 
according to the Robotic Industries Association (RIA). Robot is a mechanical machine that is 
programmable to perform specific tasks assigned by humans. The powerful advantage of robot is 
that can be used to substitute humans to handle some very heavy, dirty, dangerous, or repetitive 
tasks. The various applications include cleaning of the main circulating pump housing in the 
nuclear power plant or repetitive jobs that are boring, stressful, or labor-intensive for humans. In 
the 1980s, the robot industry has higher level demand of robot. Many academic institutions 
establish programs, courses and research in robotics. The area of interest in robotics research 
include: Tele-robotics, Micromanipulation, Service and Care-Giving Robots, Exploration and 
Mapping robots, and Entertainment Robots. 
In recent years, large interests arise in the area of control on coordinating Multi-Robot 
System (MRS). In the nature, team work behaviors existed among various species, such as the 
bird fly in formation to enables them to fly longer more effectively and efficiently. Likewise, 
there are many advantages of such multiple robotic systems than a single robot, such as reducing 
the need of sensor to cover a given area and having greater adaptability and capability to the 
unstructured environments. A multi-robot system can provide more efficient, effective, reliable 
and robust solution than a single robot.  
Inspired by the “team work” concept from the nature, there are many research conducted in 
this field which called “Formation Control” and it has attracted great attention from many 
researchers. Formation control is defined as the coordination of a group of robots to generate and 
maintain a formation within specified geometrical shapes, such as a wedge or a chain or a 
diamond shape. Furthermore, the group of robots can collaborate to perform the task or achieve 
the goal. Some application areas of formation control include various cooperative tasks such as 
exploring, cooperative localization, surveillance, search and rescue, transporting large/heavy 
objects and control of arrays of satellites. A few of investigations of the formation control issue 
can be found in the literature [1–8].  
Some research study swarms of small robots cooperating to accomplish desired tasks. Each 
individual robot perform a small scale task or specific function and then combined with other 
robots together to deal with a larger scale task or functions [1, 2]. The swarm robots have useful 
applications such as small space mapping and inspection, multi-robots collaboration, and 
surveillance robotics demonstrations for rescue and entertainment including robotic team sports 
such as soccer games [3]. Another application is handling deformable material cooperatively by 
multiple nonholonomic mobile manipulators [4]. It also may be exploited to develop a 
cooperative mobile transportation platform [5]. 
The development of techniques for robots collaboration is one of the major trends in the 
autonomous robotics. Approaches of formation control in robots is various depending on their 
loop[10].    
 
 
Figure 2  NCS in the hierarchical structure 
 
When the robotics system operates over the wireless networks, the network-induced delay 
affects system performance. The traditional controller generates a control signal at every sample 
time. If the network-induced delay exceeds one sample time, the new control signal cannot 
update the actuator, leading to an unstable control system. To avoid this situation, the controller 
generates one control signal series, including the predictive control signal, so the actuator can 
implement the backup control signal when network-induced delay occurs. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Methods 
The main architecture of our proposed system will be based on the hierarchical structure that 
facilitate efficient control and communication in an intelligent machine proposed by F.O. Karray, 
C. de Silva [11]. The three-level hierarchy described in the literature is shown in Figure 3. 
 
Figure 3  A hierarchical control/communications structure for an intelligent machine. 
 
Four task group controllers are proposed in this proposal. The main goal for this proposal 
defined as the first phase is to develop the four three task group controller systems in the middle 
tier in the hierarchy in Figure 3 and upon completion, further go to the next phase to construct the 
intelligent supervisory control system in the top tier in the hierarchy in Figure 3. The breakdown 
of the the subsystems is summarized as follows and in Figure 4. 
Model
Optimizer
Future Error
Predicted 
Outputs
Past Inputs 
and Outputs
Reference 
Trajectory
Future 
Inputs
Cost 
Function
Constraints
+
-
 
Figure 5  Basic structure of MPC 
 
In WiNCS, the GPC was proposed to cope with network-induced delay. According to the 
GPC algorithm, the GPC closed-loop structure and the CARIMA model structure was 
constructed. The GPC in state-space with state estimator was driven for WiNCS simulation. The 
reason for using the state-space description is that algebraic complexity in the derivation of GPC 
control law reduces significantly in state-space form.  
Assume the single-input single-output (SISO) system which considering operation around a 
specific set-point and after linearization. A predictive model is known as “Controlled 
Auto-Regressive Integrated Moving-Average” (CARIMA) for Generalized Predictive Control 
(GPC). 
 
with 
 
where y(k) is output signal, u(k) is input signal, e(k) is zero mean white noise, and this thesis 
doesn’t concern for dead time of the system. A, B and C are the following polynomials in the 
shift operator  :  
 
 
 
For simplicity, the polynomial is chosen to be 1 in the following. For strengthening 
the robustness of the system, the cost function considers the influence of u(k) on future system, 
(2) 
(1) 
 consider equation (5), (7) can be written as:  
 
 
which can be rewritten as:  
 
 
in equation (8), ignored the influence of noise term in the future on the system, and let 
, the best prediction of future output shows as follow: 
 
The set of the control signals  can be obtained in order to 
optimize the equation (3). The values n1, n2 and  can be defined by n1=1 and n2=N, the 
predictive horizon  and the control horizon . 
Consider the N ahead optimal prediction as following set: 
 
 
 
                                      
 
which can be marshaled as follow: 
 
where 
(8) 
(9) 
(10) 
 where  is the first row of the matrix  
The optimization in GPC is different to the general optimal algorithm, the optimize target is 
moving by time, i.e. locally optimization in every sampling time. The first element of  is 
applied and the optimal procedure is repeated at the next sampling time[14, 15]. 
In order to show the GPC control block diagram, consider following equation which can be 
rewritten as 
the reference trajectory (4):  
 
where  and  
the predictive model (CARIMA) (1) : 
 
consider equation (6), the block diagram of the predictive model (CARIMA) is shown in 
Figure 6 . And consider equation (17), the CARIMA model can be driven as follow 
 
in equation (18), the polynomials C is chosen to be 1.   
the predictive output (12) : 
 
where 
 
(d) the control-increment vector (15) : 
 
Consider (16), (18), (19) and (20), the GPC control-loop structure presents in Figure 7 which 
(15) 
(16) 
(17) 
(18) 
(19) 
(20) 
Consider the system in state-space as follow 
 
 
the  and  are sequences of white Gaussian noise with zero mean with known covariance 
given below 
 
and joint covariance matrix 
 
The initial state  of a Gaussian random vector with mean presents as follow 
 
and the covariance matrix is given by 
 
the conditional probability density functions (pdf) represents as a the Gaussian pdf which 
shown as follow 
 
where the state estimate  and the covariance matrix  present as follow 
 
 
Consider equation (21), the filtering cycle states at the instant k+1 present as follow  
 
where  
 
 
The Gaussian pdf is characterized by the mean and covariance matrix. Consider the equation 
(21) 
(22) 
(23) 
(24) 
(25) 
(26) 
(27) 
(28) 
(29) 
multiplying  on the both side of transposed the (37) and obtained 
 
from where 
 
to evaluation of the estimate state  at time instant k + 1, therefore 
 
The optimal estimator to compute the state was based on a Kalman filter. The j step ahead 
system output was presented as (9) as follow 
 
In equation (40), the estimation of the state vector  can be obtain with the Kalman filter as 
follow 
 
 
where  is Kalman filter gain matrix which represents in (42) to adapt the estimation of 
model states to measure the outputs from controlled system. 
 
and where the updated error covariance   
 
Figure 8 presents the block diagram of the state estimator via Kalman filter which provide 
the estimate state for GPC. The Kalman filter is linear, discrete time and finite dimension, and the 
filter gain is independent of the system outputs. The error covariance and the filter gain were 
calculated before the filter executes. 
(39) 
(40) 
(41) 
(42) 
 Figure 9  Robot System Structure 
 Trajectory Tracking 
Assume that the representative point (x, y) of the robot must follow the cartesian trajectory 
(xd(t) , yd(t)), with t  [0,T] (possibly, T→∞). To generate the feasible trajectory for the 
follower robot, we use the kinematic model from [16] so that we has 
))(),((tan)( 1 txtyt ddd 

                          
And the velocity and angular velocity of the robot will be 
)()()( 22 tytxtv ddd    
)()(
)()()()(
)(
22 tytx
tytxtxty
t
dd
dddd
d 



  
The positive sign for )(tVd will determine forward motion of the robot and the negative sign 
determine the backward motion of it. In order to be exactly reproducible using )(tVd and wd(t), 
the desired Cartesian motion ))(),(( tytx dd should be twice differentiable in [0,T]. One property 
of the mobile robot is that, given an initial posture and a consistent desired output trajectory 
))(),(( tytx dd together with its derivatives, there is a unique associated state trajectory 
(43) 
(44) 
IF the distance from desired position is Very Near, THEN the executed position is Very Near 
IF the distance from desired position is Near, THEN the executed position is Near 
IF the distance from desired position is Far, THEN the executed position is Far 
IF the distance from desired position is Very Far, THEN the executed position is Very Far 
The formal definition of Fuzzy Set is that a fuzzy set A in X is expressed as a set of ordered 
pairs:  
}|))(,{( XxxxA A    
Where A is a fuzzy set and µA(x) is membership function and X is universe or universe of 
discourse. A fuzzy set is totally characterized by a membership function. Then define A as fuzzy 
set of “the distance relative to the desired trajectory”, can be represented as equation (46).  
The each membership function can be defined as: 
)
2
)(
exp(),;()(
2
2


cx
cxgaussmfxA


 
Where  
c:  The center of the Gaussian membership function 
: The width of the Gaussian membership function.  
The membership functions described above are illustrated in Figure 12 and Figure 13.  
 
Figure 12  Input Membership functions for trajectory tracking fuzzy system 
(46) 
(47) 
There are many ways of doing the composition, one common is the max-min composition of 
two relations of A (unary relation) and F (binary relation) which can be formatted as 
)(             
)())]()(([            
 )],(),(min[max)(
B
'
''
y
yxx
yxxy
BAAx
RA
X
B






 
Where  is the degree that antecedent been matched which also can be called as “Firing 
Strength”. From above equation, the fuzzy set of B in Y is obtained through the composition of A 
and Figure 14 depict the concept of Compositional Rule of Inference 
 
Figure 14  Compositional Rule of Inference 
Among various of the composition operators, the “Max-Min operation” is most widely been 
used as  
 
Max-min composition is not mathematically tractable; therefore other compositions such as 
Max-product composition have been suggested: 
 
Where  
R1: a cylindrical extension relation operator 
R2: the antecedent operator 
Then the center of centroid method can be used to realize defuzzificaiton procedure. The 
Centroid of Area (COA) ZCOA is described as follows: 
dzz
zdzz
z
Z
Z
Z
A
COA



)(
)(


 
Where )(zA  is the aggregated output fuzzy set. 
 Obstacle Avoidance 
Once the distance and direction of the obstacles and the goal are known, a collision 
 ),(),(),( 2121 zyyxzx RRyRR  
 ),(),(),( 2121 zyyxzx RRyRR  
(49) 
And the line equation which parallel to equation (50) is: 
tt
co
co
co
co yx
xx
yy
YX
xx
yy






 
Now we can solve equation (51) and equation (52) to get the desired position, such as:  













































t
co
co
t
c
co
oc
c
co
co
co
oc
x
xx
yy
y
y
xx
yy
x
Y
X
xx
yy
xx
yy
1
1
 
Therefore we can calculate the next position which will avoid the obstacle immediately by 
deriving the (X, Y) as new position. The proposed method avoids the problem when the angle θ 
is extremely small, because it takes the target position into account. 
 Target Seeking 
To perform the “Target Seeking” behavior, it can be treat as the “Move to Goal” behavior. 
Therefore, when the robot currently position and target position were obtained, then the robot 
will know which direction should head to it. Figure 16 describe the “Target Seeking” behavior, 
),( gg yx is the target position, ),( cc yx  is the robot current position. By this direction vector, the 
mobile robot will move to the target gradually.  
 
Figure 16  Target Seeking behavior 
During the motion at any time, a constant-magnitude attracting force GSV

 ulls the robot 
toward the target 
),( gg yx . GSV

 is generated by the target point 
),( gg yx , whose coordinates 
are known to the robot. The target-attracting vector GSV

 is given by:  
(52) 
(53) 
Simulation and Experiment Result 
Networked Control System (NCS) 
In the experiment, the adaptive GPC with state estimator based on Kalman filter was 
implemented, and the control signal and the sensor measurement were encapsulate into packets 
which transmitted in the wireless simulated environment in NS2. The simulation architecture 
illustrates in Figure 18. 
In this research, the End-to-End connection of IEEE 802.11b was proposed for WiNCS 
simulation. The simulation structure of WiNCS was composed of controller node and 
actuator/sensor node, and each node configuration was presented as follow 
 
Figure 18  Structure of WiNCS 
 
Controller node 
The controller node includes GPC controller, Kalman state estimator, sender and receiver in 
controller node which illustrates in Figure 18. The reference trajectory (controller input) is square 
wave with period 15 seconds and peaks of 1 between 0 to 100 seconds which shows in Figure 20. 
The code of GPC controller is embedded in the Simulink S-function block. The S-function block 
is a user-defined function which could access C/C++ code. The Controller_node block (n0) in 
Figure 19 is used to send and receive to the Actuator/Sensor_node (n1) in Figure 21 via wireless 
simulated environment in NS2 which presents in Figure 22.  
 Figure 22  Wireless Scenario in NS2 
The simulation and the experiment results were illustrated by the system response diagram. 
The adaptive GPC with Kalman state estimator was implemented with random delay and 
networked-induced delay which generated by NS2, and the anticipate results is that the system 
output could follow the reference trajectory.  
Consider the random delay to verify the adaptive GPC with Kalman state estimator can cope 
with delays, and also the performance of the system was illustrated by the response diagram. 
Since delays in the wireless simulated environment are difficult to control in the range, the 
off-line adaptive GPC simulation with the defined delays could easies to verify the performance. 
Although the random delay characteristic is different to the networked-induced delay, the random 
delay is a simpler model to test the GPC capability for coping with delays. In Figure 23 to Figure 
26 show the control signal and the system response in the different range of delays as the four 
cases as follow 
Case 1: the range of random delays between 40 ms to 80 ms 
Case 2: the range of random delays between 80 ms to 120 ms 
Case 3: the range of random delays between 120 ms to 160 ms 
Case 4: the range of random delays between 160 ms to 0.2 ms 
The adaptive GPC controller parameter for the experiment: the predictive horizon is 6 
sampling step, the control horizon is 3 sampling step and the sample time is 0.2 second. The 
penalization matrixes  and  are 0.8 and 0.01.  
In Figure 23 to Figure 26, the upper part shows the system response and bottom part shows 
the control signal. In Figure 23 to Figure 26, the system response is stable but the higher 
overshoot and the longer settling time. When the delay time closes to the sample time, the system 
 Figure 25  The response with random delay between 120 ms to 160 ms 
 
Figure 26  The response with random delay between 160 ms to 200 ms 
   
The Response with Networked-Induced Dela 
The GPC controller with Kalman state estimator was implemented with NS2 as a WiNCS to 
simulate the packets transmitted in wireless simulated environment. In Figure 27 shows the 
system response with sample time 0.4 sec, and Figure 28, Figure 29 and Figure 30 are 
Controller-to-actuator delay, Sensor-to-Controller delay and sensor disturbance measurement. 
When the packets transmitted in NS2, the trace file was generated by NS2 for saving all of the 
 Figure 29  Sensor-to-Controller delay with sample time 0.4 sec. 
   
 
 
Figure 30  Sensor disturbance measurement with sample time 0.4 sec. 
 
 
Table 1  Simulation information of nodes with sample time 0.4 sec. 
Simulation Information  
Number of generated packets 500 
Number of sent packets 500 
Average packet size 43.4973 
Number of sent bytes 32960 
 
In Figure 31 shows the system response with sample time 0.3 sec. and the system is stable 
but the higher overshoot and the longer settling time. The different sample time will affect the 
system performance. When system with the short sample time, the sender must generated more 
 Figure 34  Sensor disturbance measurement with sample time 0.3 sec. 
 
Table 2  Simulation information of nodes with sample time 0.3 sec. 
Simulation Information  
Number of generated packets 668 
Number of sent packets 668 
Average packet size 43.7701 
Number of sent bytes 44048 
 
In Figure 35 presents the system response with sample time 0.2 sec. The system response is 
highly jitter and longer settling time. The Sender_c (n0) and Receiver_s (n1) dropped two 
packets and the sizes of dropped packets were 132 bytes which presents in Table 3. The system 
response already could not follow the reference trajectory. 
 Figure 38  Sensor disturbance measurement with sample time 0.2 sec. 
Table.1  Simulation information of nodes with sample time 0.2 sec. 
Simulation Information  
Number of generated packets 1002 
Number of sent packets 1000 
Number of dropped packets 2 
Average packet size 44.1737 
Number of sent bytes 65920 
Number of dropped bytes 132 
 
In Figure 39 presents the system response with sample time 0.1 sec. When the WiNCS 
implements in the fast response plant, the system is unstable. Because implement with the shorter 
sample time, it will also shorten the predictive horizon.  
sufficient close to zero, and the trajectory tracked is very close to the desired.  
Case 1: Forward 45
o
 line from X axis. The sampling period is 0.01 sec.  
Case 2: Eight shaped line. The sampling period is 0.01 sec. 
 
Figure 40  Case 1: The trajectory of leader robot 
 
 
Figure 41  Case 1: Position error with respect to the reference trajectory 
 
 
 
 
x = 5+t; 
y = t; 
The red line means the leader mobile trajectory and pink line means the follower mobile 
robots’ trajectory. We can see that the follower robot will keep a fixed separation and bearing 
between leader and themselves. Another case we used to test our controller was an elliptical 
shape trajectory, which can be expressed as: 
x = 30+24*cos(t); 
y = 30+16*sin(t); 
 
Figure 44  5 mobile robots keep in a wedge formation for 45
o
 line trajectory 
 
Figure 45  5 mobile robots keep in a wedge formation for elliptical trajectory 
 
Obstacle Avoidance: Figure 46 and Figure 47 show the obstacle avoidance algorithm when 
there is an obstacle on the road. In the case 1, the start position of robot is (5, 0) and the target 
The performance of our proposed robot steering controller with obstacle avoidance is shown 
is Figure 48 and Figure 49. It is seen that the robot steering controller through equation (53) 
generalize well, i.e., the performance is much more widely use when the obstacle appeared at 
different place. At the beginning when the obstacle is being sensed at (29 , 25), the obstacle 
avoidance algorithm works to avoid it by turning right for a certain degree. But when the obstacle 
is at the (30 , 25) and (31 , 25), the algorithm seems couldn’t decide which direction to turn to 
avoid it, so the robot crash on it. From Figure 49, we can see that the obstacle avoidance with 
equation (53) works whether the obstacle is on (30 , 25) or (31 , 25). 
 
Figure 48  Avoid the different obstacle position using traditional algorithm 
 
Figure 49  Avoid the different obstacle position using FLC 
Obstacle Avoidance while Formation Keeping: In Figure 50, this simulation is showing 
Conclusion and Discussion 
Although network-induced delay characteristics in the wireless communication network are 
difficult to model, this research describes the main problems, which might induce the time delay.  
With WiNCS simulated in NS2 using the Two Ray Ground model, this research simplifies 
complex architectures in the wireless communication network for analysis proposes. First, this 
study implements WiNCS with the random delay to verify GPC controller capability with the 
Kalman state estimator to cope with time delay. Then, WiNCS is implemented with NS2 to 
present the effect of different sample times in the predictive horizon, namely system performance 
decreases when sample time decreases. When WiNCS is implemented with the sample time of 
0.2 seconds, the packets start to drop, affecting system performance.  
This research proposes the basic WiNCS simulation on a low-level control system.  
Realizing WiNCS requires not only improving the control algorithm to compensate for time 
delay, but also improving wireless communication performance. The time delay generates when 
the packets exchange in the network. The algorithm for optimizing network performance 
communication is also important. 
This research also present a structure for controlling groups of automobile robots to achieve 
predefined formations based on intelligence method framework. A fuzzy logic controller is 
developed here under the advanced sensor technology. With the known position and heading 
angle of each robot, hierarchical control architecture is utilized to model the controllers, 
implementing the cooperation in different levels between robots. The proposed method can be 
applied to dynamically changing or unknown environments. Because when the linear velocity of 
the leader robot has to ensure the trajectory generation convergence, this limitation can be hard to 
be satisfied especially for formations spread over large surface areas. (i.e. a very low velocity to 
the leader robot should be imposed). This condition reduces the velocity and dynamic of the 
formation restricting the practical implementation of the leader-follower strategy for real 
applications. This is why we propose to study the position driven behavior of the formation when 
the reference position is get.  
The simulation results demonstrate the effectiveness of our approach. Furthermore, we also 
proposed a new algorithm for solving an obstacle avoidance problem. The algorithm allows fast, 
continuous, and smooth motion of the controlled vehicle among unexpected obstacles.  
 
 
[UBC, CANADA TRIP REPORT] March 6, 2010 
 
Graduate Institute of Automation and Control Page 1 
National Taiwan University of Science and Technology 
Dr. Min-Fan Ricky Lee 
Outcome of Trip 
 Met with Dr. Clarence de Silva. Reviewed the current status of the collaboration project 
between National Taiwan University of Science and Technology, Taiwan and University 
of British Columbia, Canada and discussed future work. 
 Tour and briefed by Mr. Muhammad Tahir Khan to the Industrial Automation laboratory 
for various research project experimental setup, equipment and facility and discussed 
the research and technical issues. 
 Make four speeches to the Canadian Researchers and indentified the core competence 
area of the research conducted in UBC. 
 Met with the founder, Mr. Dustin Hsu, of Ducacomm Holding Ltd., Canada. Discussed 
areas for collaboration on autonomous mobile robot research application. 
 Initiated the international join research project to participate the international joint 
program, NSC-Taiwan and NSERC-Canada (year 2011 to 2013).  The participant include, 
Professor de Silva, UBC (Canadian University), another Faculty, University of Victoria 
(Canadian University), Professor. Min-Fan Ricky Lee, NTUST (Taiwan University), Mr. 
Dustin Hsu, Ducacomm Holding Ltd., Canada (Canadian Industry) and another Canadian 
company (in Albert, manufacturing the aerial mobile robot) 
Attended by:  
Dr. Min-Fan Ricky Lee 
Dates:  
January 24, 2010 - February 23, 2010 
Important Relevant Presentations/Actions/Meetings: 
Presentations 
1. Overview of Current  and Future Research Development on Autonomous Mobile Robot 
2. Analysis and Control of Cooperative Behavior Architecture for Multiple Autonomous Mobile 
Robots 
3. Generalized Predictive Control in Wireless Networked Control System 
4. Visual Tracking And Motion Estimation Applied In Homecare 
Meetings 
1. NSC-Taiwan and NSERC-Canada International Joint research project kick off meeting.  
[UBC, CANADA TRIP REPORT] March 6, 2010 
 
Graduate Institute of Automation and Control Page 3 
National Taiwan University of Science and Technology 
  
  
  
無研發成果推廣資料 
