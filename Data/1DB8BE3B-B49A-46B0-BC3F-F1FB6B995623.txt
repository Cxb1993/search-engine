 - 2 - 
 
 
 
Abstract 
The project focuses on studying the fair exchange protocol and its applications, 
and the range is involved with various kinds of digital signature, including perfect 
common signature, threshold proxy signature, ring signature, and the signature is 
based on the ID. There will be effectively solve the crucial problem that can be 
existed in the reality. In the security analysis aspect, it emphasizes on the method of 
the normal proof and also can be suitable for the universally composable framework. 
Furthermore, it especially takes notice of the anonymity and traceability from a 
variety of digital signature at the research project, and then designs on the security 
protocol. In addition, using common signature to construct fair common sign protocol 
and analyzing the security from the existing signature to construct the perfect 
common signature of the symmetric participants. In current threshold proxy signature, 
a large part of the security mechanism is based on the discrete logarithm problem. The 
proxy signature constructed by the RSA cryptographic system exist security problems. 
Therefore, it can’t be used actually. In the project, we propose a threshold proxy 
signature that can make use of the RSA to solve the security problems were proposed 
by Wang et al.. Eventually, studying the threshold ring signature to construct 
anonymous ballot protocol or the signature is based on the ID. In the security proof 
aspect, the project adopt except for the random oracle model and standard model, it 
construct publicly verifiable UC signcryption protocol as well. 
 
Keywords: Fair Exchange Protocol; Perfect Common Signature; Threshold Proxy 
Signature; Threshold Ring Signature; Universally Composable. 
 - 4 - 
部分都是植基於離散對數問題；然而，考量可利用於實際情況，應以 RSA 簽章
為主，不過，雖說 RSA 的代理門檻簽章具有重要理論與應用價值，但其設計上
的困難性，使得這方面的成果較少。在此之前，只有 Hwang 等人提出一個基於
RSA 的門檻代理簽章機制[2]，而 Wang 等人指出該機制不能滿足門檻代理簽章
幾項特性[3]，使得 RSA 成為一個美中不足的系統，另外他們也指出構建安全有
效的 RSA 門檻代理簽章仍有許多待解決的問題。本計畫對於這些問題做了深入
研究，力圖改善這個機制。 
門檻環簽章是環簽章中的一個重要研究領域，它有著廣泛的應用背景，例如
在電子商務中的匿名投票表決，設置門檻值為半數以上，贊成者可以共同產生對
表決結果的簽章；或者，某公司的董事會可以利用門檻環簽章發佈公告，設定門
檻值以表示董事會成員中至少有多少人支持此公告等等。另外，在當今流行的
Ad hoc 網路中，Ad hoc Group 普遍存在，而門檻環簽章非常適合當作在此環境
中之用戶的共同簽署。現有的門檻環簽章機制大多採用類似知識簽章的方式生成
環簽章，其效率較低，且實用性較差。Shacham 和 Waters[6]所提出的方法，是第
一個能夠改善環簽章機制效能的機制。而本計畫將結合 ID 身份的簽章系統（其
概念最早於 1984 年由 Shamir[7]提出，用以避免使用證書帶來的存儲和管理上的
高成本，簡化為公鑰的管理），並建構一個在標準模型下使用 ID 身份去驗證安
全性的門檻環簽章機制。 
在某些網路應用中，會遇到需將資訊發送給多個接收者的情況，欲解決同時
向多個接收者發送加密資訊的最簡單的方法即是發送者運用各個接收者的公鑰
個別向資訊加密後進行分發，不過，這種方法是非常低效率的，若擁有龐大的接
收群組與密文規模，將可能使發送者的系統無法負荷其運算量，而導致資訊無法
正常的發送資訊。廣播群組導向的加密(Broadcast Group-oriented Encryption)是由
Ma 等人[8]於 2007 年提出，這種加密系統可預先固定接收群組的公鑰，而在群
組內的使用者可以自由使用各自的私鑰對密文解密以獲取明文。由於提出的時間
並不長，其效率與安全性討論尚處於起步階段，因此其應用背景、問題模型、與
安全性要求等各方面應進行更深入的研究探討。本計畫在基於 ID 身份簽章系統
的背景下，對其加密方法進行延伸與擴展，提出了形式化定義及具體模型的設計。 
雖然及至目前許多安全協定的設計與分析逐漸趨於成熟，但其安全性仍備受
質疑。為了適應更加複雜和未知的網路環境，一個協定可能會多次運用在合併環
境或其他協定的網路環境中，於是為了達到具有複雜性及綜合性需求，UC 框架
模型即應運而生[9]。該模型為一個較新的題材，且其研究特別引人注目，因此
研究成果與涉及的安全領域亦日益增多，本計畫將會對所研究的簽章機制分析其
 - 6 - 
步驟1：選擇一個訊息mA ∈ M。 
步驟2：選取一個隨機關鍵參數k2 ∈ K，計算s2 = FI (k2)。 
步驟3：執行σA ← ASIGN (yA, yB, xA, s2,mA)，獲得σA = (c, s1, s2)。 
步驟4：選取訊息mB ∈ M。 
步驟5：選取一個隨機關鍵參數k1 ∈ K，計算 2s  = s2 + FI (k1)。 
步驟6：執行σB ← ASIGN (yA, yB, xA, 2s , mB)，獲得σB = ( 21 ,, ssc  )。 
步驟7：公開關鍵參數k = (k2, k1)。 
產生的共同簽章為(mA, σA, mB, σB, k)。下面我們將證明(mA, σA, mB, σB, k)可以
通過簽章驗證的演算法。 
1) s2 = H1(k2)與 2s  = FI (k2) + FI (k1)是成立的。 
2) AVERIFY (σA, yA, yB, mA) = accept是成立的。 
由於基本的環簽章驗證需要用到所有參與者的公鑰，並且與其順序無關，所
以 AVERIFY (σB, yB, yA,mB) = accept 也成立。 
因此，(mA, σA, mB, σB, k)是一個合法的共同簽章。由此得知，A 可獨自產生 A
和 B 的共同簽章。 
 
1.1.2. 改進Huang等人提出之共同簽章協定 
藉由上節的分析，我們知道，Huang 等人的共同簽章機制存在漏洞的根本原
因在於關鍵參數 k = (k2, k1)的使用沒有考慮簽章的認證特性，包括對被簽署訊息
的認證性以及對簽章者身份的認證性，因此我們針對這兩個方向，對機制進行以
下的改進方法： 
(1) 共同簽章演算法 
我們將在系統參數中增加標準的數位簽章及驗證演算法 )(skSign ，
)(pkVerify 。其他方面則與 Huang 的簽章機制相同。 
 
(2) 共同簽章協定 
A 與 B 首先確定各自欲簽署的訊息 mA, mB ∈ M。 
A 執行以下操作： 
 - 8 - 
accept是否都成立，如果不是，輸出reject。 
步驟4：輸出accept。 
 
1.2. 對稱參與者的完美共同簽章協定 
本計畫設計一個對稱參與者的完美共同簽章協定，並且對此協定做安全性分
析。在我們的定義中，參與者的角色是對稱的，亦即，在新協定中，因為使用了
Diffe-Hellman 密鑰協商[12]技巧，生成的關鍵參數由雙方共同決定，並非由某方
獨自產生，故具備的自由度相等。更進一步的，我們改變資訊交換的模式，參與
簽章的任何一方都可以發起交換行為。我們將此對稱參與者的共同簽章分成演算
法及協定兩部分敘述如下： 
1.2.1. 對稱參與者共同簽章演算法 
(1) SETUP 
步驟1：選擇兩個大質數p, q，以及兩個Generator g, h ∈ Zp*，其中g, h的order
皆為q。 
步驟2：選擇雜湊涵數H1: {0, 1}* → Zq*。 
步驟3：令M, k ∈ Zp*, F ∈ Zq*。 
步驟4：A選擇他的私鑰xA ∈ Zq*，並計算其公鑰為 AxA gy  。 
步驟5：B同樣建立他的公私鑰對( xB, BxB gy  )。 
 
(2) KeyStoneGen 
步驟1：A隨機選擇亂數kA ∈ Zq*，並公開 AkA hkf  。 
步驟2：B隨機選擇亂數kB ∈ Zq*，並公開 BkB hkf  。 
步驟3：A和B都可以計算 )( BABA kkkA
k
B hkfkfr  ， )( BABA
xxx
A
x
B gyyt  。 
 
(3) ASIGN 
步驟1：取 sˆ F，m ∈ M。 
步驟2：選擇一個隨機值α ∈ Zq*。 
步驟3：計算c = H1( sjygm
ˆ||  )。 
 - 10 - 
A 執行同樣的操作如下： 
1) 藉由測試AVERIFY(σB, yB, yA, mB) = accept驗證σB。如果等式不成立，A
退出。 
2) 驗證知識簽章ΓB，如果其為非法，則A亦退出。 
步驟4：A和B分別公開他們的關鍵參數。 
1) 如果A驗證(mB, σB, ΓB)合法，那麼他將公開他的關鍵參數ksA = (kA, r, t)。則
A的共同簽章為(mA, σA, ΓA ,mB, σB, ΓB, ksA)。 
2) 如果B驗證(mA, σA, ΓA)合法，那麼他也公開他的關鍵參數ksB = (kB, r, t)。其
B的共同簽章為(mA, σA, ΓA, mB, σB, ΓB, ksB)。 
步驟5：共同簽章的驗證 
為了驗證 A 的共同簽章(mA, σA, ΓA ,mB, σB, ΓB, ksA)，任何驗證者可以執行下
列操作： 
1) 驗證知識簽章ΓA, ΓB，只要它們其中某一個有返回reject，那麼演算法將不
接受共同簽章，並回報驗證者reject。 
2) 從ksA中得到kA, r, t，從σA中得到s2，驗證等式 AktrHs  )(12 是否成立。如
果不成立，則演算法不接受共同簽章，返回reject。 
3) 從ΓA中得到 Akfr  並將其記為 r，從ΓB中得到

Bkfr  並將其記為 r  ，從
ksA中得到r，驗證 rrr  是否成立，如果不成立，則演算法不接受共同
簽章，並返回reject。 
4) 驗證是否AVERIFY(σA, yA, yB,mA) = accept與AVERIFY(σB, yB, yA,mB) = accept
都成立。如果不是，則演算法不接受共同簽章，返回reject。 
5) 若以上皆能成立，接受共同簽章，返回accept。 
對 B 的共同簽章(mA, σA, ΓA, mB, σB, ΓB, ksB)驗證操作流程是類似的。 
 
2. 基於 RSA 的門檻代理簽章機制 
欲建構一個基於 RSA 之門檻代理簽章機制，最主要困難點在於模數 N 的質
因數、(N)必須保持隱密，任何人(包括原始簽章者)均不可取得，因此代理者私
鑰必須分開產生。本計畫建構了一個實質意義上之 RSA 門檻式代理簽章[12]，其
解決了 Wang 等人所提出的公開問題。在此機制中，代理簽章的私鑰完全是分散
式產生的，並且少於 t 個(門檻值)代理簽章者之情況下無法產生合法代理簽章，
 - 12 - 
步驟 2：對所有的用戶 Ui  PG 計算： )(, jfp iji  ， )(, jgq iji  ， )(, jhh iji  ，
nj ,,2,1  。然後，秘密發送參數組合  jijiji hqp ,,, ,, 給 Uj。 
步驟 3：Ui 接收到所有其他用戶秘密發送過來的參數組合  ijijij hqp ,,, ,, ，
nj ,,2,1  。將計算 PhqpN
n
j
ij
n
j
ij
n
j
iji mod
1
,
1
,
1
, 



















 ，然後對所有的
用戶廣播 iN 。 
步驟 4：令 Pxhxgxfx
n
j
j
n
j
j
n
j
j mod)()()()(
111




















 。顯然 iNi )( ，並且 )(x
的級數為 12  nl 。設 


n
i
ipp
1
， 


n
i
iqq
1
，則 


n
i
i
n
i
i pqqpN
11
)0( 。
而每個用戶將掌握所有 n 個 )(i 值，使用內插法，可以恢復出 )(x ，從
而得到 PN mod)0( 。由於 NP  ，因此所有用戶都可以得到正確的 N。
該步驟中，p, q 並未洩露出現，對任何人都是不可見的，所有用戶得到
的僅是 N 與 Ni。 
 
2.2.2. 檢測 N是否為兩個大質數的乘積 
利用以下步驟判斷 N 是否為兩個大質數的乘積： 
步驟 1：於 PG 內首先協商一個公開的亂數 *Ng Z 。 
步驟 2：用戶執行一個 Fermat 檢測。例如，用戶 U1 計算 Ngv qpN mod11 11
 ，
而對於其他用戶 Ui，計算 Ngv ii qpi mod
 。用戶之間交換 iv 值。 
步驟 3：驗證 


n
i
i Nvv
2
?
1 mod 。如果等式不成立，則 N 不是由兩個質數相乘的乘
積，返回 2.2.1 節，重新生成一個新的N 值。反之，若等式成立則 N 是
兩個質數的乘積。 
備註：上述檢測是一個 Fermat 檢測，用於檢測一個數是否為兩個大整數的乘積。
實際上它檢測的是 Ng qpN mod1
?
1  。 
 
當 N 通過上述檢測，被確信是兩個質數的乘積後，可由 N 的選擇流程得知 N 
= pq，其中  ipp ，  iqq 。而藉由整數分解的唯一性，p, q 又是兩個質數，
以及 p, q 的長度均為 b/2 位元，因此，N 的確是兩個大質數的乘積。 
 - 14 - 
2.4. 私鑰 d的產生與共享 
2.2 節所產生的模數 N，將對應到每個代理簽章者 Ui 所持有 ),( ii qp 。而每
個代理簽章者在 2.3 節與原始簽章者共同產生的公鑰 e，亦應各自持有一把與之
對應的私鑰 d ，並使得 )(mod1 Ned  ，d 不能洩露於任何其他人。 
令 eNx mod)(1  ，則 eNx mod1)(  ，因此， 1)( Nx 將可被 e 整除，
取 eNxd /)1)((   ，d 是整數，且 ed = 1)( Nx ，等式 )(mod1 Ned  成立。接著，
我們將分散式地產生 eNx mod)(1  ，形成私密金鑰的共享。 
以下步驟，將利用上面原理在代理簽章者中分散式地生成並共享 RSA 密鑰
d。 
步驟 1：代理簽章者 Ui 隨機取值 eir Z 。 
步驟 2：利用 2.2.1 節的步驟，代理簽章者分散式地計算 
eNr ii mod)(    
如果 對於模數 e 是不可逆的，則返回步驟一。 
步驟 3：每個代理簽章者 Ui獨立計算 erii mod
1  。則有： 
   eNrii mod)()( 11   
所以，代理簽章者以 i 為祕密片段共享了 eN mod)(1 。 
步驟 4：PG 在內部協商一個質數 NeP 2' 。將 ei  0 視為 'ZP 的元素。 
步驟 5：令  2/)1(  tl 。對所有的 ni ,,2,1  ，用戶 Ui 隨機選取兩個級數為 l
的多項式 'Z, Pii gf  ，滿足 iif  )0( ， )()0( Ng ii  。另外，對於
ni ,,2  之用戶 Ui 隨機選取一個級數為 2l 的多項式 'ZPih  ，滿足
0)0( ih ，而對於 U1，則隨機選取一個級數為 2l 的多項式 '1 ZPh  ，滿
足 1)0(1 h 。 
步驟 6：對所有的 ni ,,2,1  ，用戶 Ui計算： )(, jfiji  ， )(, jg iji  ， )(, jhh iji  ，
nj ,,2,1  。然後，將參數組  jijiji h ,,, ,, 秘密發送給 Uj。 
步驟 7：接收到所有其他用戶發送過來的參數組  ijijij h ,,, ,, ， nj ,,2,1  ，j  i，
用戶 Ui 計算 PhT
n
j
ij
n
j
ij
n
j
iji 















 

mod
1
,
1
,
1
,  。則每個代理簽章者的私
 - 16 - 
2) 使用公鑰 e 驗證代理簽章，看是否能讓此等式成立： Nmhe mod)(
?
 。 
藉由效率分析得知，機制在系統建立時需要較大的運算量，主要原因在於代
理人分散式產生 RSA 模數 N 時，需保證不會讓任何人（包括原始簽章者）得知
其質因數而所需花費的；要如何減低機制建立之花費計算量仍然是一個需要研究
的議題。 
 
3. 基於 ID 身份之多方密碼系統研究 
3.1. 基於 ID 身份之門檻環簽章機制 
本計畫提出了一個植基於 ID 身份的門檻環簽章機制（ID-based Threshold 
Ring signature, IDTR）[13]，新機制不僅保持了 Shacham 機制所擁有的高效性，
而且在標準模型下，是符合最強的環簽章安全性定義。在此機制中，所有用戶的
密鑰必須定義在一個合數階群G 中。因為群G 的階 n 之因式分解需要保密，所
以，應當由可信實體 TA 來建立此群G 。下面是詳細的機制流程： 
(1) 設定參數 
建構一個合數階（ n pq ）群G ，並隨機選擇其 Waters Hash 生成元u，
Guu Rk,...,1 。然後，可信實體（TA）隨機選擇 nR Zba 0, ，並計算
aA g , 00
bB g , 
aAˆ h 。接著，選擇兩個安全的密碼學雜湊函數：   GH *1,0  :  ，
   kH 1,01,0  :  *1  ，前者將用於把用戶的身份映射到群中，後者則用於把用戶形
成的環和訊息映射為 k 位元之序列。 
公開的系統參數包括：群G、雜湊函數  H  ,  1H  ，以及群的生成元 g，h。
公共參數則是  ABA ˆ,, 0 和 ),...,,( 1 kuuu 。 n 的因式分解值和b 將保密。其中， a 是
TA 的主密鑰，A為相應的公鑰，任何人都可以驗證  AA ˆ, 對是依步驟正確產生的。 
 
(2) 產生用戶金鑰對 
用戶（簽章者）將其身份  *1,0 ID 提交給可信實體 TA。TA 設置用戶的
公鑰 pk 為  IDH ，並計算其相對應的私鑰 sk 為  aIDH 。然後，TA 將用戶
的私鑰安全地發送給用戶。 
 
(3) 簽章演算法 Sig(L, R, M) 
首先，假設 R 為 n 個用戶所組成的環，而其相對應的身份為
 - 18 - 
下面的等式： 
        kj mjt juuSegSeCBAe 11210 ,,,  
如果等式皆成立，則接受此簽章；否則，拒絕此簽章。 
 
3.2. 基於 ID 身份的群體導向廣播加密系統 
本計畫以 ID 身份加密系統為基礎，提出群體導向之加密機制，在機制中，
訊息傳送者可以藉由接收群組的身份資訊獲得接收群組的公鑰，並傳送加密訊
息；而接收群組成員僅需保留一個解密私鑰即可獨立完成解密。另外，機制的優
點包括加密所產生密文與系統參數均為實數規模，運算量與接收成員多寡無關，
以及在標準模型下，機制對選擇身份和密文攻擊是可被證明為安全的。 
3.2.1. 基於 ID 身份之群體導向廣播加密演算法 
此演算法將可被細分成四個部份，包括設定參數、產生金鑰、加密與解密。 
(1) 設定參數：在此部分，演算法為了保障機制的安全性，將採取無輸入任
何數值的方法，並且，輸出公開參數 PK，及其主金鑰 MK。 
(2) 產生金鑰：使用群組 ID GID、所有成員 ID ID、公開參數 PK、以及主金
鑰 MK 做為輸入，以產生群組成員所使用的解密金鑰 dID。 
(3) 加密：藉由群組 ID GID及公開參數 PK 對訊息 m 做加密的動作，並輸出
密文 C。 
(4) 解密：運用解密金鑰 dID及公開參數 PK，可對密文 C 做解密動作，並輸
出明文訊息 m。 
為證實此群體導向廣播加密演算法的確是安全的，首先我們必需定義如下的
證明遊戲來驗證其安全性： 
(1) 選擇式 id之選擇明文攻擊遊戲 
此遊戲的步驟流程非常類似用於證明基於 ID 身份之標準式廣播加密系
統的 IND-ID-CPA[8]，細分成五個部分。 
啟始設定：挑戰者將執行上述演算法之設定參數部分，並且給予對手公
開參數 PK。 
步驟 1：對手將與挑戰者一起針對某接收者 IDi 及幾個適合的群組 ID 
qIDIDID
GGG ,...,
21
執行演算法之金鑰產生部分，並且獲得解密金鑰
 - 20 - 
密方和解簽密方而言，是一個雙方交握的協定。 
我們基於 KR 模型來形式化定義功能函數如下（過程中傳遞的符號代表意義
則如後：key 表示密鑰請求，SC 表示簽密請求，USC 表示解簽密請求，Verify
表示公開驗證請求， nSC 表示獲取的簽密值，SCer 則表示簽密者）： 
4.1. 功能函數 SCF  
SCF 將按照如下順序執行，其中，會話識別字為 id， 1P ,…, nP 為參與者，敵
手為 S，安全參數為 k： 
1. 在首次啟動中，功能函數 SCF 會期望收到來自某個參與者 iP 的數值
),(key, jPid ；接著，將這個值發送給敵手 S。並從敵手中取得 jPK 時，將
jPK 發送給參與者 iP。然後，等待從參與者 jP 發送來的數值 ),(key, iPid ，
並在收到後將其發送給敵手。當從敵手中收到 iPK 時，再把 iPK 發送給參
與者 jP 。此後，忽略所有的 )/,(key, ji PPid 。 
2. 簽密階段： 
當從參與者 iP 收到數值 ),,(SC, 'PKmid j 時， 
1) 將 |)|,(SC, mid 發送給敵手，其中， || m 表示訊息 m 的長度。（如果
'PK j ≠ jPK 或者沒有定義 'PK j ，則將整個訊息 m 發送給敵手 S）。 
2) 當從敵手中收到返回的數值 T 時，將 ),,(SCn Tid 發送給參與者 jP ，並
在記憶體中保存數值 ),( Tm 。（如果 'PK j = jPK ）。 
3. 解簽密階段： 
當功能函數收到從 jP 發送來的數值 ),(USC, Tid 時， 
1) 如果記憶體中存有數值 ),( Tm ，設置 1f 並把 ),( fm 發送給 jP。 
2) 否則，將數值 ),(USC, Tid 發送給敵手，並從敵手中收回數值 m，以
0),( fm 的形式發送給參與者 jP 。 
4. 公開驗證階段： 
當從 jP 收到數值 ),,(Verify, mTid 時， 
1) 如果記憶體中存有數值 ),( Tm ，設置 1f ，並將數值 )(SCer, iP 給所有
參與者。 
 - 22 - 
簽章機制，不僅可直接應用使用，也是建構電子商務、政務環境下公平交換的各
種安全協定之重要基礎。本計畫亦針對共同簽章、門檻代理簽章、門檻環簽章進
行研究分析，解決已存機制中所固有的一些效率及安全上的問題。儘管以上研究
內容不能代表所有簽章機制的安全，但對於後續研究將有不少的幫助，未來我們
將繼續研究各種具有特性的數位簽章系統，並將其用於安全協定的設計中。 
 
 
參考文獻 
[1] Y. Desmedt, Y. Frankel. Shared Generation of Authenticators and Signatures. In: Proc. 
CRYPTO’91, Lecture Notes in Computer Science 576, Springer－Verlag, 1992, 
457-469. 
[2] M.S. Hwang, E.J.L. Lu, and I.C. Lin. A Practical (t, n) Threshold Proxy Signature 
Scheme Based on the RSA Cryptosystem, IEEE Trans. Knowledge and Data Eng, 2003, 
vol. 15, no. 6, 552-1560 
[3] Wang C T, Lin C H, Chang C C. Threshold signature schemes with traceable signers in 
group communications. Computer Communications, 1998, 21(8): 771-776 
[4] Huang ZJ, Huang RF, Lin XZ. Perfect Concurrent Signature Protocol. Proceedings 
of  Eighth ACIS International Conference on Software Engineering, Artificial 
Intelligence, Networking, and Parallel/Distributed Computing. 2007, 467-472 
[5] Susilo W, Mu Y, Zhang F. Perfect concurrent signature schemes. Proceedings of ICICS 
2004. Berlin: Springer-Verlag, 2004, 14-26. 
[6] Shacham Hovav, Waters Brent. Efficient ring signatures without random oracles. In: 
Cryptology ePrint Archive: Report 2006/289, 2006. http://eprint.iacr.org /2006/289/. 
PKC2007, 166-180. 
[7] SHAMIR A. Identity-Based Cryptosystems and Signature Schemes. In Advances in 
Cryptology- Crypto 1984, Lecture Notes in Computer Science 196, Berlin, 
Springer-Verlag, 1984. 47-53. 
[8] Ma C B, Wu Y, and Li J H,“Broadcast Group-oriented Encryption in Group 
Communication” Journal of Computational Information Systems, 3(1), 2007, 63-71. 
[9] Canetti R.Security and composition of multi-party cryptographic protocols. Journal of 
Cryptology,Vol. 13,No. 1,winter 2000. 
[10] R.L. Rivest, A. Shamir, and L. Adleman, “A Method for Obtaining Digital Signature and 
Public Key Cryptosystems”, Communications of the ACM, 1978, vol. 21, pp. 120-126. 
[11] ISO TS 17090 Health Informatics: Public Key Infrastructure: Part1: Framework and 
overview; Part 2: Certification Profiles; Part 3: Policy Management of Certification 
Authority (will be revised towards an ISO standards by ISO TC 215 WG 4 in 2004). 
[12] W. Stallings, Cryptography and Network Security: Principles and Practice, 3rd Edition, 
Prentice Hall, 2003. 
[13] C.Y. Lin, T. C. Wu, “An identity-based ring signature scheme from bilinear pairings”, 
 - 24 - 
31, No. 2, Feb. 2009, pp. 300-304. (SCI, EI) ( Impact Factor：1.074) 
9. R. L. Shen, Y. F. Chung, and T. S. Chen, "A Novel Application of Grey System 
Theory to Information Security," Computer Standards and Interfaces, Vol. 31, No. 2, 
Feb. 2009, pp. 277-281. (SCI, EI) ( Impact Factor：1.074) 
10. K. H. Huang, Y. F. Chung, C. H. Liu, F. P. Lai, and T. S. Chen, "Efficient Migration 
for Mobile Computing in Distributed Networks," Computer Standards and 
Interfaces, Vol. 31, No. 1, Jan. 2009, pp. 40-47. (SCI, EI) ( Impact Factor：1.074) 
11. Y. L. Yu, Y. F. Chung, and T. S. Chen, "Electronic Signatures for Long-term 
Storage Purpose in Electronic Anamnesis," Journal of Innovative Computing, 
Information and Control, Vol. 4, No. 11, Nov. 2008. (SCI, EI) ( Impact Factor：
2.791) 
12. Y. F. Chung, T. S. Chen, and C. H. Liu, "Efficient Hierarchical Key Management 
Scheme for Access Control in the Mobile Agent," Journal of Innovative Computing, 
Information and Control, Vol. 4, No. 9, Sep. 2008, pp. 2375-2389. (SCI, EI) 
( Impact Factor：2.791) 
13. Y. F. Chung, Z. Y. Wu, and T. S. Chen, "Ring signature scheme for ECC-based 
anonymous signcryption," Computer Standards and Interfaces, In Press, Accepted 
Manuscript, Available online 9 July 2008. (SCI, EI) ( Impact Factor：1.074) 
14. Y. F. Chung, K. H. Huang, H. H. Lee, F. P. Lai, and T. S. Chen, "Bidder-anonymous 
English Auction Scheme with Privacy and Public Verifiability," Journal of Systems 
and Software, Vol. 81, No. 1, Jan. 2008, pp.113-119. (SCI, EI) ( Impact Factor：
1.241) 
15. Y. F. Chung, K. H. Huang, F. P. Lai, and T. S. Chen, "ID-based Digital Signature 
Scheme on the Elliptic Curve Cryptosystem," Computer Standards and Interfaces, 
Vol. 29, No. 6, Sep. 2007, pp. 601-604. (SCI, EI) ( Impact Factor：1.074) 
16. Y. F. Chung, Y. L. Yu and Y. T. Chen, "A Study on Efficient Group-oriented 
Signature Schemes for Realistic Application Environment," Communications of 
IICM, Vol.11, No.1, March 2008, pp. 31-42. 
17. Y. F. Chung, and H. C. Yu, "The Study on General Secure Multi-party 
Computation," Communications of IICM, Vol.11, No.1, March 2008, pp. 97-110. 
 
 - 26 - 
759-762. (EI) 
10. Y. F. Chung, F. P. Lai, and T. S. Chen, "Multicasting Key Management System for 
the Internet," Proceedings of the 5th International Conference on Information and 
Management Sciences, Chengdu, China, 1-8 July 2006, pp. 216-228. 
 
 
 2 
我發表論文的時段為 5 日下午 1 點 30 分至 4 點，報告是在 MUE 2009 main 
conference，場次為 Session 3：Multimedia and Ubiquitous Security，由 Hainan 
University 教授 Xiaoming Yao 擔任主持人，該場次總共安排 6 篇 paper 發表，我發
表論文順序為第五位，報告時間約 15 分鐘，論文發表完畢後，會中主持人、與會
學者士提出許多問題討論，會場之討論氣氛相當的熱烈，大家也彼此交換研究心
得，增廣見聞並獲取新知，因此，此行可說受益良多。 
透過國際會議之參與，可以和許多相關領域之知名學者與研究人員討論、交
流與切磋。藉此，除了可迅速與全世界的重要技術接軌，更可獲得寶貴的經驗與
建議，正所謂「讀萬卷書不如行萬里路」。參加會議除了可快速了解各論文的精神，
更重要的是可與論文發表者面對面直接交談、討論，甚至藉由各領域專家學者的
腦力激盪而得到更多的研究靈感與想法。 
會議期間見到各領域的專家學者，縱然是來自不同國家的專家學者，彼此都
十分親切，會中會後皆頻繁交換意見、心得。對於我們發表的內容也十分的熱誠，
並適時給予許多寶貴的建議。從會議期間見到的環境，與接觸的專家學者可發現，
雖然國內在此領域的發展具有相當的潛力，然而投入此領域的經費與人才之規模
明顯略遜色於歐美的大學、研究機構，若能拓展研究規模，相信國內在此領域能
有舉足輕重的發表著作。因此，建議應鼓勵國內學者及優秀的研究人員多多參與
類似之國際性會議，提升及創新國內研究的水平與廣度。 
在新世紀、新技術與新環境牽引的知識經濟時代裡，各項資訊技術的持續發
展，使得全世界企業的營運與管理 受到強烈的變革，資訊工程、通訊網路、資訊
管理等三大領域已然成為現今社會發展的三大重要指標，更是國家主要的重點研
究方向。因此如何發展快速而又有效率的資訊技術、加強通訊網路科技的研發和
應用，並且利用這些資訊技術，達到商業管理的創新管理，是本會議主要的宗旨。 
本會議提供給各界經驗交流的管道，同時也將針對資訊技術領域目前最新的
發展趨勢與重要議題 ，進行廣泛與深入的探討。會中邀請資訊相關領域的先進，
提供前瞻性、創造性的專題演講，同時也提供國內、外學者發表研究成果的論文
研討，使得此次研討會將是一個瞭解國際目前資訊技術相關領域發展現況與趨勢
的絕佳機會。相信透過這種學術研討與專家學者專題演講的交互影響，將能夠引
領大家思考資訊技術及管理之間的關聯及重要涵義。 
 
 
  4 
1. Introduction 
 
Following the generalization of the Internet, there is an increasing need for 
resource sharing and management, improved network efficiency and efficient 
transmission. So, complex distribution system technology has been developed. Bulk 
information and data are transmitted through a number of hosts spread out in a 
network, achieving distributed computation. However, due to the large amount of data 
transfer in distributed systems, overloading of network transmission occurs. The 
development of mobile agent is the answer to this problem. 
Mobile agent is a program that can migrate between hosts, and independently 
perform distributed computation [1, 2]. It can migrate from one host to another and 
interact with other host or mobile agent to accomplish tasks assigned to it by its user, 
completing all tasks in the user’s place. Therefore, mobile agent is autonomous as 
well as mobile. Figure 1 is a simple illustration of the structure of the mobile agent 
system. 
 
Figure 1 Structure of mobile agent system 
 
Mobile agent has a number of benefits. It reduces network load and 
transmission delays, uses encapsulation transmission protocol, and is applicable in 
different environment platforms. It is also fault-tolerant and highly adaptable. 
Therefore, mobile agent can be applied in a wide range of application domain, 
including distribution information retrieval, remote processing, network management, 
workload control, mobile computing, E-shopping, online bidding, etc. A mobile 
agent migrates from hosts to hosts during its execution; therefore, it may come into 
contact with other agents and interchange information. Thus, it faces certain security 
problems. Most mobile agent security breach occurs during insecure contact. 
Security threats of the Mobile Agent can be classified into the following four types: 
integrity attacks, denial of service, confidentiality attacks, and authentication risks. 
  6 
2. Related Work 
 
This section briefly introduces the mobile agent system, and explains the mobile 
agent tree structure of Volker and Mehrdad’s scheme.  
 
2.1. Brief introduction of mobile agent 
Mobile Agent is a type of software agent that is autonomous, social, able to learn 
and most importantly, mobile. It can migrate freely between different types of 
network system, autonomously execute assigned tasks, and interact with other mobile 
agents, achieving the goal of division of labor and collaboration, bringing further 
benefits and improving convenience. 
Mobile Agent has the following abilities: (1) Watch: Mobile agent can be sent to 
remote servers to monitor and report the occurrence of a certain event. (2) Search: 
Mobile agent can migrate to a remote server to search for and access information. (3) 
Orchestrate: Mobile Agent owner can divide a job into several tasks and assign each 
of the tasks to a separate mobile agent so that the mobile agents collaborate to finish 
the job. (4) Migrate: Mobile agent can autonomously migrate to remote servers when 
needed to complete its assigned task. (5) Meet: Mobile Agent interacts with other 
agents to achieve the target of collaboration [6]. 
Aside from its execution code, the mobile agent also carries information that will 
act as reference information during execution of task. This information consists of the 
following components. 
(1) Agent Owner: The owner of the mobile agent, and generally includes its digital 
signature, host name, and IP address, etc. 
(2) Identifier: The identity information of the mobile agent. A mobile agent without 
an identifier is regarded illegal by other agent hosts and denied service. 
(3) Goal/Result: This component consists of information regarding assigned task of 
the mobile agent and outcome of the execution. 
(4) Life Time: All mobile agents must have a life time. The life time of a mobile agent 
varies from task to task. Mobile agent owner will add a time stamp to the mobile 
agent at the onset, so as to inform other agent hosts of the life time of the mobile 
agent. 
(5) States: Mobile agent records the execution status before migrating from one agent 
platform to the next. The internal state of the agent includes read-write file records, 
resource consumption time and the last action taken, etc. 
 
2.2 Advantages of mobile agent 
Mobile agent can simultaneously migrate between a numbers of computers. It 
can also autonomously distribute computation process. The mobile agent has the 
following advantages: 
  8 
folder. Under this folder are two sub-folders called Static and Mutable. 
(2) Static  : Contents under the Static folder are data that remains unchanged during 
the lifetime of the mobile agent. 
(3) Mutable: This folder stores all data that undergoes changes when the mobile agent 
executes its assigned task. When the agent completes its task on a certain 
host computer, the Mutable folder of the mobile agent changes status or 
the data collected by the agent and stored in this folder may be changed 
by the host. 
(4) Classes : Includes the class code required by all mobile agents during execution of 
tasks. 
(5) Sctx   : This is the Security context node and it represents security information 
related to the mobile agent. This folder contains access control keys (acl), 
certificate (cert), and security policies, etc. 
(6) Heap  : This folder is a storage space which is primarily used by the mobile agent 
to store data during execution of tasks. 
 
Figure 2 Tree structure of mobile agent 
 
The access control and key management scheme of Volker and Mehrdad’s 
proposed tree structure can prevent mobile agent from eavesdropping, malicious 
attack from other agents and hosts, and other malicious activities. It can also be used 
to control access to mobile agent by remote servers, allowing secure execution of 
tasks. A brief description of the working of the scheme is as follows: Before mobile 
gent owner sends mobile agent on to the Internet to carry out its assigned task, he/she 
must first designate a traveling route and set up access policies. He/She constructs a 
corresponding sub-folder (as shown in Fig. 3: static/sctx/acl/H1, static/sctx/acl/H2, ..., 
static/sctx/acl/H6) for each legitimate remote server in the static/sctx/acl folder. Next, 
the owner uses some symmetrical encryption-decryption algorithm, like AES, to 
encrypt the decryption key belonging to the particular confidential file, and according 
to the access policies stores the decryption key in the pertaining folder. Then, the 
  10 
(1) Increasing size of Mobile agent: Since the hosts on the traveling route of the 
Mobile agent may be given access to similar files, in Volker and Mehrdad’s 
security scheme, the Decryption keys are repeatedly stored under different folders. 
Take for example in Fig. 3, Decryption key DK1 is stored in six folders, belonging 
to H1, H2, H3, H4, H5, and H6, respectively. Decryption keys DK2, DK3, and DK4 
are also repeatedly stored. This type of scheme wastes a lot of storage space in 
storing decryption keys, causing wastage of space of Mobile Agent and increases 
the size of the agent; this in turn causes the Mobile agent to consume excessive 
Internet bandwidth when it is roaming on the Internet.  
(2) Excessive computations for public key: Because Decryption keys are repeatedly 
stored under the static/sctx/acl/ folder, for Mobile agent to protect the security of 
the related folders, Mobile agent owner needs to perform more public key 
computations to maintain the security of the folder. 
For better efficiency in transmission of Mobile agent over the Internet, the size, 
key, and computations of the Mobile agent should be the smaller the better. The next 
section proposes using bilinear method based on the elliptic curve to amend the faults 
in Volker and Mehrdad’s security scheme. It also proposes a key management and 
access control scheme for hierarchy-based Mobile agent [8-13], and explains the 
concepts cited for the proposed scheme, its workings, and an applied example. 
 
3. The proposed scheme 
 
In order to amend the faults in Volker and Mehrdad’s scheme, this paper 
proposes for the Mobile Agent a hierarchy structured key management and access 
control scheme based on bilinear pairing over elliptic curves [14]. We shall first 
explain the basic concept of bilinear pairing over elliptic curve, and then our proposed 
scheme. 
3.1 Basic concept of bilinear pairing on elliptic curve 
Bilinear pairing is the corresponding bilinear map between two cyclic groups. 
Because in geometric algebra, the set formed by all the points on an elliptic curve will 
form a group relationship, therefore calculation of bilinear-paired function can be 
applied on elliptic curve. Presently, Weil pairing and Tate pairing are the two most 
common bilinear pairings [15, 16]. Let G1 be an additive group formed by the points 
on an elliptic curve, and let point P be its generator; its order shall be prime number q. 
Let G2 be a multiplicative group with the same order as G1. Thus, there exists a 
bilinear map ê：G1×G1→G2 that satisfies the following: 
(1) Bilinear: let P, Q, RG1, thus 
 ê(P+Q, R)=ê(P, Q)．ê(Q, P) 
 ê(P, Q+R)=ê(P, Q)．ê(P, R) 
  12 
Step 4: Mobile agent owner calculates Dhi=s0*(Qhi) for each internal node (hi); 
Qhi=H1(IDhi), among which Dhi is secret, and Qhi is private. 
Step 5: Mobile agent owner chooses a random value r and calculates U=r*P0, 
then construct the function given below for each leaf node (DKm), and 
then announces (U, FDKm(x)). 








 

])([)( 2mm
ij
j
hh
r
hDK gHxDKxF  
where ),(ˆ pubhh PQeg jj  , )) U,D(ˆ(Hx i2 he  
As in Figure 4, Mobile agent owner will construct four functions, FDK1(x), FDK2(x), 
FDK3(x), and FDK4(x) as follows. 
     
         
         
         )()()()()()(
)()()()()()(
)()()()()()(
)()()()(
625232221244
625232221233
524232221222
42221211
r
h
r
h
r
h
r
h
r
hDK
r
h
r
h
r
h
r
h
r
hDK
r
h
r
h
r
h
r
h
r
hDK
r
h
r
h
r
hDK
gHxgHxgHxgHxgHxDKxF
gHxgHxgHxgHxgHxDKxF
gHxgHxgHxgHxgHxDKxF
gHxgHxgHxDKxF




 
If Host H2 wants to obtain Decryption Key DK2 to decrypt the file, B.zip, it can take 
the corresponding secret parameter Dh2 and public parameter U=r*P0, 
))U,D(ˆ(Hx
22 h
e  into the equations below to obtain DK1. 
     
     
     
     
     
     
     
     
   
1
1
42121
4222121
422121
4202121
42
r
002121
42
r*s
02121
42
r
002121
42
r
2121
42221211
            
0            
)(0)(            
)())U,D(ˆ())U,D(ˆ()(            
)())U,D(ˆ()(            
)())P*r,D(ˆ()(            
)())P,*s(ˆ()(            
)())P,(ˆ()(            
)())P*s,(ˆ()(            
)()),(ˆ()(            
)()()()(
22
2
2
2
0
2
2
2
DK
DK
gHxgHxDK
gHxeHeHgHxDK
gHxeHxgHxDK
gHxeHxgHxDK
gHxQeHxgHxDK
gHxQeHxgHxDK
gHxQeHxgHxDK
gHxPQeHxgHxDK
gHxgHxgHxDKxF
r
h
r
h
r
hhh
r
h
r
hh
r
h
r
hh
r
h
r
hh
r
h
r
hh
r
h
r
hh
r
h
r
hpubh
r
h
r
h
r
h
r
hDK











 
 
4. Security analysis 
 
This section will discuss and analyze the proposed scheme of this paper. We shall 
discuss it considering the possible attacks, and through security analysis prove that 
our scheme is feasible as well as secure. 
 
  14 
and Hk, can access Decryption Key DKl. Can host Hi hack the polynomial of FDkl(x) to 
obtain the secret parameters of other hosts?  
Taking Example 4, suppose both hosts, H2 and H4, can legally obtain DK1 
through the FDk1(x) function. However, H2 wants to hack the equation of FDk1(x) to 
determine the secret parameter of H4. So, said host will convert FDkl(x) to the 
following form: 
     
     
   
)(
)(
)()(
)()()()(
)()()()(
12
11
4222
42221211
42221211
r
h
DKr
h
r
h
r
h
r
h
r
hDK
r
h
r
h
r
hDK
gHx
DKxF
gHxgHx
gHxgHxgHxDKxF
gHxgHxgHxDKxF





 
Host H2 uses its own secret parameter to substitute ))U,D(ˆ(Hx
22 h
e  in the above 
equation, where U=r*P0:  
   
)())U,D(ˆ(H
)())U,D(ˆ(H)())U,D(ˆ(H
122
11
422222
2
22 r
hh
r
hh
r
hh gHe
DKDK
gHegHe



 
)(0
)())U,D(ˆ(H0
12
1
422 2 r
h
r
hh gH
DK
gHe

  
According to the above calculations, we can see that in such a circumstance, 
even if Host H2 has its own secret parameter and Decryption Key DK1, due to lack of 
information it cannot hack and determine the secret parameter of Host H4 through 
FDk1(x). Therefore, our proposed scheme can effectively guard against this type of 
attack. 
 
5. Conclusion 
This paper proposes a mobile agent key management and access control scheme 
with a hierarchy structure. The scheme is based on bilinear pairings over elliptic 
curves, and it also makes use of the one way hash function. Feasibility and security of 
the scheme are also explained. 
The advantages of the scheme are: (1) a hierarchy structure which makes it easier 
to construct Mobile agent; (2) in comparison to Volker and Mehrdad’s scheme, 
repetitive storage of keys is effectively reduced; (3) derivation of decryption key is 
relatively simple; (4) effective protection against malicious attack. Therefore, our 
proposed method can effectively provide mobile agent with a secure runtime 
environment. 
 
