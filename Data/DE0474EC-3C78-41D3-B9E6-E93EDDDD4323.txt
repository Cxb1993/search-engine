行政院國家科學委員會專題研究計畫成果報告 
 
在資料串流環境下資料探勘技術演算法之研發與實作 
Incremental SVM Model for Spam Detection on Dynamic Email 
Social Networks 
Design and Implementation of Data Mining Algorithms over Data 
Streams 
計畫編號：NSC 95-2221-E-002-124-MY3 
執行期限：95 年 8 月 1 日至 99 年 1 月 31 日 
主持人: 陳銘憲教授 國立台灣大學電信工程學研究所 
 
一、中文摘要 
近來，大量的垃圾郵件已經對日常必備
的電子郵件通訊構成嚴重的威脅。傳統的垃
圾郵件過濾器藉由分析郵件的內容來尋找
存在垃圾郵件內的共同特徵。然而，已經有
許多狡詐的詭計可以騙過此類依據內容分
析方法的垃圾郵件過濾器。只要垃圾郵件能
帶來經濟效益，就會不斷的有新的手法來穿
過垃圾郵件過濾器的封鎖。面對這個情形，
相對於分析郵件的內容，如今已有許多研究
朝向利用發信者的信譽來進行垃圾郵件偵
測。從垃圾郵件發信者在電子郵件通訊上的
不尋常行為以及特定的模式所得到的啟
發，藉由探索電子郵件的社交網路來偵測垃
圾郵件的方法已經逐漸受到矚目。然而，現
存的研究作品普遍受困於兩個問題: (1)系
統在多樣性環境下不穩固 (2)對於演進中
網路，沒有針對特徵變化的更新機制。在此
篇論文中，我們提出漸進式的支持向量機器
模型來偵測動態電子郵件社群網路中的垃
圾郵件。我們設計的一個完整的垃圾郵件偵
測系統－MailNET 可以有效的對多樣性網
路做出調整。此系統中，網路中每位使用者
的數個特徵被掘取出來訓練支持向量機器
模型。此外，為了抓住電子郵件通訊的演進
性質，我們演示了一個更新機制用來迅速的
重新訓練支持向量機器模型。我們利用一個
從大學規模的電子郵件伺服器取得的實況
資料集來評估 MailNET 系統，其結果顯示
所提出的模型是迅速且有效的，適合真實世
界的使用。 
關鍵詞：垃圾郵件、社交網路、漸進式、支
持向量機器 
Abstract 
Recently, the huge number of email 
spams has caused serious problems in 
essential email communication. Traditional 
spam filters aim at analyzing email content to 
characterize the features that are commonly 
included in spams. However, it is observed 
that crafty tricks designed to avoid 
content-based filters will be endless owing to 
the economic benefits of sending spams. In 
view of this situation, there has been much 
research effort toward doing spam detection 
based on the reputation of senders rather than 
what is contained in emails. Motivated by the 
fact that spammers are prone to have unusual 
behavior and specific patterns of email 
communication, exploring email social 
networks to detect spams has received much 
attention. Nevertheless, previous works 
generally suffer from two problems: (1) the 
normal users and spammers differ greatly, 
there have been many works attempting to 
identify spam nodes based on email social 
networks. 
Although several techniques have been 
proposed to distinguish spam nodes from 
normal users, there is still no robust solution 
to do spam detection based solely on email 
social networks. One major issue is that 
diverse email social networks possess 
different properties. Since the scale and the 
user behavior of different networks vary, the 
detection approach must be capable of being 
self-adjusted to diverse environments. 
Moreover, the network is evolving, meaning 
that the update scheme is essential to the 
success of a spam detection system. However, 
it is challenging to efficiently update a huge 
email social network. 
In this paper, we design a complete spam 
detection system MailNET that is not only 
able to better adapt to manifold email social 
networks, but also capable of performing 
incremental update. Several features extracted 
from each user in the email social network are 
utilized to distinguish spam nodes from 
normal users. Note that we do not aim at 
defining new features to identify spam nodes. 
Instead, we use features proposed by previous 
works and focus on devising a more robust 
model that can be applied to miscellaneous 
networks. Regarding the classification method, 
support vector machine (abbreviated as SVM) 
learning is performed to train a model in 
system MailNET. SVM classification has 
been widely used in various fields due to its 
robust performance. Each node is an instance 
with extracted feature attributes. Moreover, to 
enhance the quality of the SVM model, we 
choose the pure nodes that have sent only 
spams or legitimate emails on the initial 
training stage. 
In addition, owing to the fact that email 
communication and spam behavior are always 
evolving, it is essential to periodically update 
the spam detection system. To re-train an 
SVM model with the whole data set is 
impractical and very inefficient. Therefore, in 
this paper, we consider the challenging issue 
of incremental update and propose an efficient 
update scheme to maintain the latest 
information for spam detection. When new 
incoming emails are added into the network, 
feature values of corresponding nodes should 
be modified. These nodes are viewed as 
concept-drifting nodes and will be treated as 
new training instances for the next stage. 
Moreover, data points that are support vectors 
of the previous SVM model are also included 
in the re-training process. The main objective 
of the proposed update scheme is to obtain an 
approximate model that can capture the 
concept drifts of spam behavior with 
cost-effective update. On the other hand, since 
the user behavior in different email social 
networks may be diverse, some features are 
not always good discriminators. In view of 
this observation, one target of this paper is to 
define a quality index that measures the 
effectiveness of each feature based on domain 
classes and totally seven features are included 
in our system. The details are depicted as 
follows. 1) In/out-count and in/out-degree. 
For each node in a network, the feature 
in-count (out-count) is the number of emails 
received (sent) by this node. In-degree 
(out-degree) is defined as the number of users 
that have ever sent (received) emails to (from) 
this node. Regarding in-count and in-degree, 
since only a very small number of users will 
reply spams, the nodes of spammers usually 
have near-zero in-count and in-degree values. 
On the other hand, spam nodes will have 
much higher out-count and out-degree values 
than normal users. 2) Communication 
Reciprocity (CR) and Communication 
Interactive Average (CIA). It is observed that 
email interaction between normal users is 
frequent, meaning that when a user receives 
an email, he/she will usually reply this email 
to the sender. On the other hand, only a few 
users will reply emails to spammers. Based on 
this observation, both communication 
reciprocity (CR, first proposed in [1]) and 
communication interactive average (CIA, first 
proposed in [2]) are presented to capture this 
difference. CR is defined as 
, where OS(x) is 
the set of nodes that have ever received an 
email from node x, and IS(x) is the set of 
nodes that have ever sent an email to node x. 
The feature CR measures the ratio of nodes 
that have email interactions with node x. On 
the other hand, CIA is defined as  . CIA 
further considers whether each email has the 
feedback. w(eij}) denotes the number of 
emails sent from node xi to xj. w(eji) denotes 
the number of feedbacks from node xj to xi. It 
is apparent that the larger the CR and CIA 
values are, the less suspicious for a node to be 
a spammer.  
3) Clustering Coefficient (CC).Clustering 
coefficient (CC) is first introduced in [3]. In 
this paper, we consider the clustering 
coefficient for undirected graphs. CC is 
defined as  where Zx_i is the number of 
neighbors of xi, and nx_i is the number of 
existing links between the neighbors of xi. It 
can be imagined that the email social network 
formed by a group of normal users is expected 
to possess more links. The feature CC is 
designed to catch this phenomenon and these 
links can be viewed as the friends-of-friends 
relationship. Since spammers usually spread a 
great quantity of spams randomly, the CC 
values of normal users are generally much 
larger than those of spammers. 
B. Feature Quality 
Although the above-mentioned features are 
defined according to domain knowledge, not 
all characterized behavior will appear in 
diverse networks. That is, certain features may 
not be good discriminators in the targeted 
network. In view of this situation, we define 
an index in this section to measure the quality 
of each feature. With the proposed quality 
measurement, important features can be 
emphasized and poor features can be excluded 
from the training of SVM model. 
user is more likely a ham node. Qfeature 
expresses the ratio of emails that this feature 
can make confident decisions. The main 
objective of defining Qfeature is based on the 
observation that although features are derived 
according to domain knowledge, we cannot 
guarantee that these features are good 
discriminators in all networks. Thus, Qfeature is 
an index that can evaluate the effectiveness of 
features in various networks. 
Initial SVM Training Algorithm 
MailNET system employs the well-known 
LIBSVM library [4] to train the SVM model. 
Since email social networks are usually huge, 
we choose the linear kernel for SVM 
classification to accelerate the training process. 
Moreover, for the application of email spam 
detection, the false positive error (i.e., a real 
ham is misclassified as a spam) is much more 
severe than the false negative error (i.e., a real 
spam is misclassified as a ham). Thus, we set 
that the penalty of false positive error is 10 
times than the penalty of false negative error. 
Other parameters are set as default values of 
LIBSVM. 
Incremental Update Scheme 
A. Feature Update 
When new emails are added into a network, 
the feature values of corresponding nodes 
should be modified. For the features of 
in-count and out-count, it is intuitive that the 
in-count of the receiver should be incremented 
by 1 and the out-count of the sender should be 
incremented by 1. Regarding in-degree and 
out-degree, we have to examine whether the 
sender has ever sent an email to the receiver. 
CR measures the ratio of nodes that have 
email interactions with a targeted node. Thus, 
if the communication link has existed, CR 
values of the sender and receiver remain the 
same. On the other hand, since CIA further 
considers whether each email has the feedback, 
both CIA values of the sender and receiver 
should be updated. There is an exception that 
if a receiver gets an email from a new sender, 
his/her CR value is not needed to be modified. 
CC quantifies the friends-of-friends 
relationship between users. There are 4 cases 
of new links that are shown in dotted lines. 
Note that we consider the clustering 
coefficient for undirected graphs. Concerning 
the link z, if a new link is added between 
nodes F and G, which are nodes that first 
appear in the network, CC values of nodes F 
and G are given the initial value 0. For the 
link w, if the link between two nodes has 
existed, CC values of these two nodes remain 
the same. For the link y, since node C has an 
additional neighbor node F, its CC value is 
Procedure IST
Input: an email social network,
            a threshold max_inst
Output: an SVM  model
1 M easure the quality of each extracted feature;
2 Exclude the features whose Q feature = 0% ;
3 Choose the pure nodes that have sent only spams or 
   only hams as training instances;
4 if (the number of pure nodes > max_inst)
5     Do the proportionate stratified sampling to make the
       number of training instances equal to max_inst;
6 Scale each feature value to [0 ,1];
7 Perform the SVM  training; 
8 return the SVM  model;
End 
A
B
C
E
D
w
G H
F
x
y
z
network. On average, 280,000 emails are sent 
per day. It is noted that previous works usually 
do not apply such a huge network to verify the 
performance. We implement MailNET with 
C++ programming language, and the program 
is executed in Windows XP with Pentium 4 - 
3GHz CPU and 1.5GB RAM. For the core of 
SVM, we employ the LIBSVM library. 
A. Accuracy Evaluation 
We consider the situations that the training 
sets consist of 2 to 10 days emails, and the 
following 1-day emails are used as the testing 
set. In addition, we also evaluate the detection 
results with incremental update, meaning that 
the proposed incremental SVM model is 
re-trained with each set of newly incoming 
1-day emails. Similarly, the following 1-day 
emails are used as the testing set. True 
positive rate and false positive rate are shown 
in the figure. In the first experiment, we desire 
to investigate whether the scale of the network 
will affect the detection performance. As can 
be seen, the TP rate ranges from 94.06% to 
95.38%, and the FP rate is from 1.21% to 
1.75%. With the size of the training set being 
enlarged, the results vary slightly. It is because 
the data set used in our experiments is large 
even when only 2-days emails are exploited as 
the training set. Moreover, since we set that 
the penalty of false positive error is 10 times 
than the penalty of false negative error, our 
system maintains a low FP rate, which is 
significant in the spam detection problem. 
Most importantly, the detection performance  
of incremental update degrades rather slightly, 
and thus validating the effectiveness of 
re-training an SVM model with essential 
support vectors and concept-drifting instances. 
B. Efficiency Issue 
Below figure shows the trend of performance 
with the number of emails increased. As can 
be seen, building the email social network and 
training an SVM model with 10-days emails 
cost 3,907 seconds. The training phase is 
off-line, and thus the cost is acceptable to train 
an SVM model with such a huge network. 
Since we also limit the maximum number of 
instances for the initial SVM training, if the 
network is even huger, the training time can 
still be controlled. As for the detection process, 
since the overhead of SVM testing is small, 
our system is capable of processing detection 
in real-time. On the other hand, to realize the 
success of capturing the evolving nature of 
email communication, the efficiency 
performance of the incremental update is 
significant. It can be observed that it costs 
only about 720 seconds to add 2-days emails 
into the network. The main reason is that we 
95.38% 94.06% 94.68% 95.29%94.20%
93.38% 94.12% 92.59% 93.14% 93.26%
1.63%1.75%1.37%1.21%1.35% 1.94%2.08%2.16%1.86%1.78%
0.00%
20.00%
40.00%
60.00%
80.00%
100.00%
2 days 4 days 6 days 8 days 10 days
True Positive
True Positive with increUpdate
False Positive
False Positive with increUpdate
0
500
1000
1500
2000
2500
3000
3500
4000
0 2 4 6 8 10
#  day s
Ex
ec
. T
im
e 
(s
ec
.)
t rain ing
det ect ion
increU p dat e
support vector machines. In KDD, 1999. 
 2
一、會議簡介 
 
本次會議是在新加坡舉辦的 CIKM 2009 國際研討會。本次會議的時間為 2009 年
11 月 2 日至 11 月 6 日，本屆會議包含下列主題： 
 
1 Information Extraction 
2 Web Search  
3 XML Data Processing, Filtering, Routing, and Algorithms  
4 Domain-Specific Retrieval 
5 Personalization and Social Search  
6 String Databases, Blogs and Social Search  
7 Advance Mining Techniques  
8 Text Mining  
9 Crawling and Indexing 
10 Novel Data Management and Data Mining Tools 
11 Semantic Techniques and Applications  
12 Graph Mining  
13 Evaluation  
14 Information Integration, Data Provenance, Probabilistic Databases  
15 Information Retrieval 
16 Information Filtering and Recommender Systems  
17 Ranking and Retrieval Models I 
5C Streams, Network Databases  
18 Classification and Clustering I 
19 Data Warehousing and OLAP  
20 Data Mining framework and applications   
21 Link Analysis and Social Computing  
22 Data Summarization 
23 Data and Query Similarity 
 
二、會議參與心得內容 
 
大會對於本屆會議的安排相當用心，除了高水準的論文發表之外，也安排了
由 許 多 重 量 級 大 師 主 講 的  tutorial ， 讓 參 與 者 可 以 了 解 到 最 新 且 完 整 的 
