限制： 
[1] 大部分僅提供 radix-2 的DIT 或DIF 演算法標準元件。沒有提供其他種類的radix FFT 演算法標
準元件。 
[2] 轉換點數受限制，無法做長點數的 FFT。 
[3] 未考慮嵌入式處理器晶片內快取記憶體(on-chip cache memory)容量與旋轉因子、資料點數之間的
最佳權衡，無法有效控制快取的效率，導致記憶體存取的整體效能隨著FFT 轉換點數的增加而
降低。 
基於前述原因以及初期研究的經驗及既有之成效，本計畫提出發展高效能FFT軟體開放元件，提供國
內嵌入式平台發展者可以輕易地建立符合系統需求規格的FFT應用。 
 
二、研究目的 
本計畫的主要目的為『依照Light-weight CMMI規範，發展適用於嵌入式系統及FPGA/SOC的高效
能FFT開放軟體元件』，各種嵌入式平台(包含DSP、通用的嵌入式處理器及FPGA)的系統發展者，可
以利用本計畫預期成果提供之簡單易用的軟體元件規劃介面，即可建立及植入符合系統效能規格的
FFT演算功能。本計畫以國產嵌入式平台為對象，發展高效能快速傅立葉轉換元件(Fast Fourier 
Transform Component, FFTC)。但是，國產嵌入式平台之間的差異頗大，有以單核心32-bit RISC處理
器為主的嵌入平台，例如：凌陽(Sunplus)、晶心(Andes)，也有異質多核心處理器為主的多核心
ARM+DSP平台，例如：工研院的STC PACDuo。這些以微處理為主的嵌入式系統在系統資源方面的
優勢各有不同，而且與FPGA為主的嵌入式系統，在實踐高效能FFT的方式亦應有所區別。因此，本
計畫申請時，預計以兩年時間逐年發展『可應用於各種嵌入式處理器平台的高效率可規劃轉換點數的
radix-2 FFT開放軟體元件』，及『可應用於FPGA/SOC設計的可規劃轉換點數的雙radix-4 FFT開放
軟體元件』，希望能夠兼顧國內常用的各種嵌入式平台。但是，本計畫僅核定一年，必須修改原來的
研究目的，調整如下： 
本計畫的高效能快速傅立葉轉換元件(Fast Fourier Transform Component, FFTC)，主要以我們發展
之改良的FFT演算法設計開放軟體元件，提供使用者進行頻域分析，使得在嵌入式平台之相關應用得
以更有效率的進行研究與開發。FFTC提供具有可規劃的操作介面，在設計上的考量為基於不同嵌入
式處理器的快取記憶體容量及運作原則，以及FFT轉換點數，產生具有可規劃轉換點數的FFT演算法
程式碼。系統設計者只要在嵌入式平台的Toolchain下重新編譯FFTC，即可建立適用該系統資源的FFT
可執行元件模組。圖1為本計畫設計的FFTC架構圖，其中FLAB是用來進行核心FFT演算法與相關週
邊溝通之函式庫，使用相關函式庫可達成不同嵌入式平台之相容性與可用性，包含資料緩衝、快取最
佳化與記憶體管理最佳化等相關函式庫。當待轉換之信號輸入FFTC後，即能快速的完成頻譜分析，
並依照既定之格式輸出，提供使用者後續分析研究或應用。 
 
圖1 本計畫開發之高效能FFT開放軟體元件架構圖 
[3] J. W. Cooley and J. W. Tukey, “An algorithm for the machine calculation of complex Fourier series,” 
Math. Comput., vol. 19, pp. 297–301, 1965. 
[4] G. D. Bergland, “A radix-eight fast-Fourier transform subroutine for real-valued series,” IEEE Trans. 
Electroacoust., vol. AE-17, no.2, pp.138–144, Jun.1969. 
[5] R. C. Singleton, “An algorithm for computing the mixed radix fast Fourier transform,” IEEE Trans. 
Audio Electroacoust.,vol. AE-17, no.2, pp.93–103, Jun.1969. 
[6] Soo-Chang Pei and Eng-Fong Huang, “An in-order, partially in-place mixed radix FFT algorithm,” 
IEEE Trans. Acoustics, Speech, and Signal Processing, vol. ASSP-31, no. 5, pp. 1314-1317, Oct. 1983. 
[7] D. P. Kolba and T. W. Parks, “A prime factor FFT algorithm using high-speed convolution,” IEEE 
Trans. Acoust., Speech, Signal Process., vol. ASSP-25, no.4, pp.281–294, Aug. 1977. 
[8] S. Winograd, “On computing the discrete Fourier transform,” Math. Comput., vol.32, no. 141, pp. 
175–199, Jan.1978. 
[9] P. Duhamel and H. Hollmann, “Split radix FFT algorithm,” Electronics Letters, vol. 20, no. 1, pp. Jan. 
1984. 
[10] D. Takahashi, “An extended split-radix FFT algorithm,” IEEE Signal Process. Lett., vol. 8, no. 5, 
pp.145–147, May 2001. 
[11] A. R.Varkonyi-Koczy, “A recursive fast Fourier transform algorithm,” IEEE Trans. Circuits Syst. II, 
vol. 42, no. 9, pp. 614–616, Sep. 1995. 
[12] A. Saidi, “Decimation-in-time-frequency FFT algorithm,” in Proc. ICASSP, Apr. 1994, pp. 
III:453–III:456. 
[13] Yoiti Suzuki, Toshio Sone, and Keniti Kido, “A new FFT algorithm of radix 3,6, and 12,” IEEE Trans. 
Acoustics, Speech, and Signal Processing, vol. ASSP-34, no. 2, pp. 380-343, Apr. 1986. 
[14] Saad Bouguezel, M. Omair Ahmad, and M. N. S. Swamy, “New radix-(2x2x2)/(4x4x4) and 
radix-(2x2x2)/(8x8x8) DIF FFT algorithms for 3-D DFT,” IEEE Trans. Circuits and Systems I: Regular 
Papers, vol. 53, no. 2, pp. 306-315, Feb. 2006. 
[15] Iann D. Liu and Philip Lee, “Use of mixed radix FFT in electric power system studies,” IEEE Trans. 
Power Delivery, vol. 9, no.3, pp. 1276-1280, Jul. 1984. 
[16] Abolfazl Ghassemi and T. Aaron Gulliver, “A Low-Complexity PTS-Based Radix FFT Method for 
PAPR Reduction in OFDM Systems,” IEEE Trans. Signal Processing, vol. 56, no. 3, pp. 1161-1166, 
Mar. 2008. 
[17] Robert Polge and Brooks Lawrence, “Comparison of a new multiple radix fast Fourier number 
theoretic transform with FFT algorithms in terms of performance and hardware cost,” IEEE 
Proceedings Southeastcom, pp. 744-749, 1990. 
[18] Oleg A. Mukhanov and Alexander F. Kirichenko, “Implementation of a FFT radix 2 butterfly using 
serial RSFQ multiplier-adders,” IEEE Trans. Superconductivity, vol. 5, no. 2, pp. 2461-2464, June 
1995. 
[19] B. M. Baas, “A low-power, high-performance, 1024-point FFT processor,” IEEE J. Solid-State Circuits, 
vol. 34, no. 3, pp. 380–387, Mar. 1999. 
[20] Jes´us Garc´ıa, Juan A. Michell, and AngelM.Bur´on, “VLSI configurable delay commutator for a 
pipeline split radix FFT architecture,” IEEE Trans. Signal Processing, vol. 47, no. 11, pp. 3098-3107, 
Nov. 1999. 
[21] Tung N. Pham and Earl E. Swartzlander, Jr. “Design of Radix 4 SRT Dividers for Single Precision 
 242
MemLocal
max N             (1) 
例如某嵌入式系統處理器的核心專屬記憶體容量MemLocal=64KB，那麼N的最大值就是 Nmax=4096。 
分割成 L=MxN-point的FFT，是以兩階段(stage)進行FFT運算，第一階段(1st stage)為N個M-point 
FFT，第二階段(2nd stage)為M個N-point FFT。每階段在第一次讀取後，處理器核心以專屬記憶體內的
資料進行M或N-point FFT，而不需頻繁的存取共享記憶體。 
 
3. Pseudo-radix FFT的運算架構 
若L小於Nmax則不做兩階段Pseudo-radix FFT，因為可以符合DSP核心記憶體的快取最佳化的需
要；反之，FLAB適當的選擇M與N，做兩階段的FFT運算。這種架構非常適合需要在嵌入式系統實踐
長點數FFT的應用，其運算架構如圖2所示。 
 
圖2分割成 L=MxN-point的FFT以兩階段進行Pseudo-radix FFT運算 
 
4. 多核心平行化的FFT運算架構 
Pseudo-radix FFT的運算架構非常適用於多核心處理器嵌入式平台。亦即，若有N個核心，可以充
分發揮平行計算的能力：1st stage以N個核心同時計算M-point FFT，2nd stage同時計算N-point FFT。我
們以8點FFT在雙DSP核心的STC PACDuo平台為例說明： 
分割成4x2 FFT：1st stage為2個4-point FFT，2nd stage為4個2-point FFT。以STC PACDuo雙DSP平
台執行，並以圖3輔助說明如下： 
[1] 1st stage期間 
• 紅色的4-point FFT由DSP1計算。  
• 藍色的4-point FFT由DSP2計算。  
[2] 2nd stage期間  
• DSP1完成兩個紅色的2-point FFT。 
• DSP2完成兩個藍色的2-point FFT。 
 
表2 SunPlus嵌入式平台測試數據 
Sunplus SPEC3200 counting Result (counter run at 32768Hz) 
Method FFT-point Count Value 
Classic FFT 
1,024 979 
4,096 4,677 
16,384 21,811 
Proposed Method 
1,024 895 
4,096 4,232 
16,384 19,461 
為了驗證多核心平台的運算效能，我們以快速傅立葉轉換元件在多核心平台開發的計畫向國家
晶片中心(CIC)申請一套STC PACDuo，這是一個ARM處理器搭配兩個DSP核心的異質多核心嵌入式平
台。我們以16384點FFT測試的結果呈現於表3，若以單一DSP核心執行，兩階段Pseudo-radix FFT較傳
統FFT快1.65倍；若以兩個DSP核心平行執行兩階段Pseudo-radix FFT，較單DSP核心執行傳統FFT快
3.25倍。由此數據可以證明圖2的架構在N個多核心處理器的執行效率可較單核心處理器提昇約N倍。 
表3 STC PACDuo異質多核心嵌入式平台 (FFT-point=16,384) 
Method Number of DSP Item Count Value of Timer Speed Up 
Classical FFT 1 Total Time 8,859,423 1 
Proposed 
Method 
1 
Stage 1 2,914,833  
Stage 2 2,466,777 
Total Time 5,381,610 1.65 
2 
Stage 1 1,495,741  
Stage 2 1,233,492 
Total Time 2,729,233 3.25 
本計畫提出的高效率FFT開放軟體元件依照開放系統的規範發展而成，可以直接應用於嵌入式系
統及FPGA，降低FFT效能調校的繁瑣程序，對於學術研究及產業界的重要性分述如下： 
1. 於嵌入式系統學術研究及產業的貢獻 
本計畫的第一個成果是發展可應用於各種嵌入式處理器平台的高效率可規劃轉換點數的
Pseudo-radix FFT 開放軟體元件，這個元件提供具有可規畫的操作介面，考量的範圍是基於不同嵌入
式處理器的快取記憶體容量及運作原則，以及FFT 轉換點數，產生具有可規畫轉換點數的FFT演算法
程式碼，系統設計者只要在嵌入式平台的Toolchain下重新編譯即可建立FFT的可執行元件模組。這個
FFT模組的特色是，依照快取記憶體的客觀條件，決定FFT蝴蝶網路群組的數量，降低快取記憶體的
替代率(replacement rate)。另外，這個FFT模組可在FFT轉換點數與嵌入式處理器核心快取記憶體容量
之間取得權衡，除了在超出快取記憶體容量有出色的表現外，在小於快取記憶體容量時也有良好的表
現。另外，本計畫發展的Pseudo-radix FFT架構若再妥善利用正弦函數與餘弦函數的關係，旋轉因子
的佔用量比[24]減少一半，這一點是非常有利於一個嵌入式系統的成本考量。對產業界多媒體嵌入式
系統設計者而言，軟體的FFT演算法幾乎是必須被用到的重要程式元件，但是以往各種FFT演算法都
侷限於固定的轉換點數，且未考慮嵌入式處理器階層式記憶體的整體效能，導致需要較高轉換點數的
FFT應用時，嚴重影響系統整體效能的達成。但是，由我們完成的這個先期研究的成果可知，採取可
規劃轉換點數的Pseudo-radix FFT架構有其非常實用的價值，藉由本計畫的執行，將此研究發展之開
放式軟體元件提供學術研究及產業界使用，相信對於嵌入式軟體產業核心技術的掌握是有長遠的助
益。 
 
行政院國家科學委員會補助出席國際學術會議報告 
                                                               98 年  10 月  30 日 
報告人姓名 火致力 
 
邱信哲 
就讀校院
（科系所）
                     █博士班研究生 
國立東華大學電機工程學系 
                     █碩士班研究生 
     時間 
會議  
地點 
2009/10/11 – 2009/10/14 
美國 – 聖安東尼奧 
本會核定
補助文號
 
NSC-98-2220-E-259-001 
會議 
名稱 
 (中文) 2009 系統、人與調控學國際研討會 
 (英文) 2009 IEEE International Conference on Systems, Man, and Cybernetics 
發表 
論文 
題目 
1. Tsung-Ying Sun*, Ling-Erh Lan, Chan-Cheng Liu, and Chih-Li Huo, “Mixing 
Matrix Identification for Underdeterminated Blind Signal Separation: Using Hough 
Transform and Fuzzy K-means Clustering,” in Proc. 2009 International Conference 
on Systems, Man and Cybernetics (IEEE SMC 2009), Oct. 14-18, 2009, San 
Antonio, Texas, USA. 
2. Tsung-Ying Sun*, Sin-Jhe Ciou, Chan-Cheng Liu, and Chih-Li Huo, “Out-of-Focus 
Blur Estimation for Blind Image Deconvolution: Using Particle Swarm 
Optimization,” in Proc. 2009 International Conference on Systems, Man and 
Cybernetics (IEEE SMC 2009), Oct. 14-18, 2009, San Antonio, Texas, USA. 
國科會補助計畫衍生研發成果推廣資料表
日期 2010年11月01日
國科會補助計畫
研發成果名稱
發明人
(創作人)
技術說明
技術移轉可行性及
預期效益
技術/產品應用範圍
產業別
計畫名稱:
計畫主持人:
計畫編號: 學門領域:
(中文)
(英文)
成果歸屬機構
(中文)
(英文)
適用於嵌入式系統及SOC的高效能快速傅立葉轉換開放軟體元件
孫宗瀛
98 -2220-E -259 -001 - 自由軟體暨嵌入式系統
高效能快速傅立葉轉換開放軟體元件
國立東華大學 孫宗瀛,游宇翔,火致力
本計畫開發高效能快速傅立葉轉換開放軟體元件(FFTC)的特點：
[1] 容易使用。
[2] FFT轉換點數可規畫，改善長轉換點數FFT效能。
[3] 嵌入式系統的記憶體存取效率高。
[4] 核心演算法針對國內常用的嵌入式系統的軟硬體資源做快取做最佳化。
[5] 適用於單核心、多核心及FPGA嵌入式平台。
[6] 針對多核心處理器的核心數量，可以分割成等數量的平行運算區塊，完全
發揮多核心架構的整體效能。
[1] Easy to use.
[2] FFT transfer point number programmable. Improve the efficiency of
long-point FFT performance.
[3] Improve memory access perfromance for embedded systems.
[4] Cache optimization for variant embedded platform in Taiwan.
[5] Suitable for single-, multi-kernel processor, and FPGA platform.
[6] In multi-kernel processor. The FFTC can divided into equal number
of processing block as kernel number.
研究發展服務業；其他專業、科學及技術服務業
國防科技高解析度頻譜分析，影像壓縮codec，信號處理：多媒體、語音、影像。
演算法很容易晶片化。演算法可適應各種不同嵌入式平台。
註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
Tsung-Ying Sun* and Yu-Hsiang Yu, ’Memory Usage Reduction Method for 
FFT Implementations on DSP Based Embedded System,’ in Proc. 13th IEEE 
International Symposium on Consumer Electronics (ISCE2009), pp. 
812-815, May 25-28, 2009, Kyoto, Japan. 
 成果項目 量化 名稱或內容性質簡述 
科 
教 
處 
計 
畫 
加 
填 
項 
目 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
計畫成果推廣之參與（閱聽）人數 0  
 
