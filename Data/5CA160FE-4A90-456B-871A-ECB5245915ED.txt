2一、前言
資料串流異於傳統資料的特性，加上各種應用系統的迫切需求，使其儼然成為資料庫與資料工
程領域的核心研究主題，由於資料串流常有流速不穩定且流量可能驟增的特性，必須分析歷史資料
以預測未來流入資料的特性；然而，傳統資料庫系統彙整所有資料後再予以分析，並不適用於資料
串流環境。因此，本計畫針對頻繁樣型的探勘需求，分別考慮滑動視窗與地標兩種串流模式，研究
濃縮頻繁樣型的探勘方法，以期降低探勘方法在時間與空間上的花費。
由於資料的廣泛流通，以及使用者對於資料與知識的渴求，資料探勘的技術在近年來持續地發
展並運用於各種領域，如市場分析、工業設計、電子商務、生命科學等等。我們可從資料與知識兩
種觀點，審視資料探勘技術的演進。就資料而言，各式各樣的資料型態伴隨著不同應用產生；從知
識的角度來觀察，同樣有著迎合不同需求的知識類型。設計單一演算法同時滿足不同的應用需求並
不容易，本計畫以頻繁樣型為主要目標，考慮不同的濃縮類型，嘗試發展適用於資料串流環境、可
達成多重目標的探勘方法。
二、研究目的
頻繁樣型探勘向來是資料探勘領域的主流，其目的在於從大量資料快速找到出現比例高於某一
門檻值的所有頻繁樣型，而衍生的知識類型，如最大頻繁樣型、封閉頻繁樣型、與代表頻繁樣型等
都具有各自的應用價值，其共同點在於濃縮為數可觀的頻繁樣型。資料串流的特性增加了問題的複
雜度，我們分別考慮滑動視窗以及地標兩種串流模式，研究探勘濃縮頻繁樣型的多功能演算法，以
期降低探勘方法在時間與空間上的花費；本計畫所開發的技術，涵蓋交易資料及 XML資料所形成
的串流，得以探勘其頻繁樣型所衍生之不同知識類型。
三、文獻探討
在資料串流上的頻繁樣型探勘研究，Manku 與 Motwani提出著名的 Lossy Counting方法，以
遞增方式保留過去流入系統的頻繁樣型與一部分的非頻繁樣型，結果回報的樣型支持度是可能被高
估的；因此，可以保證不會遺漏任何頻繁樣型，但可能會產生一些非頻繁樣型的答案。Lossy Counting
以使用者輸入的門檻值，對資料串流作分段取樣，並將出現比例達該值之上的非頻繁樣型亦記錄下
來。以過去已流過的分段總數作為最低估計值，若目前分段的樣型出現頻率與估計值總和小於目前
的分段號碼（相當於門檻值），則表示該樣型在未來分段再次出現的機會很小，故可將其刪除以節
省空間，最後保留下來者即被視為頻繁樣型並輸出之。論文作者證明了這個方法所得到的頻繁樣
型，所產生的誤差都在可容忍範圍內。Yu等人基於 Chernoff Bound理論，根據指定的最高儲存樣
型個數，推算一個適當的出現次數門檻值，並證明因估計值低於此門檻值而略過不計的樣型，有很
高的機率不會是頻繁樣型（即成為遺漏答案）。迥異於 Lossy Counting作法，改採取低估出現次數
的方式，因此最後答案必然都是真正的頻繁樣型；實務上，採取 Chernoff Bound 的作法，使用者
可在維持一定的輸出答案品質下，根據系統可用空間大小來調節必須紀錄的頻繁樣型數量。 Leung
和 Khan提出將串流資料分批紀錄於樹狀結構的作法，該結構記錄每筆交易資料，依據使用者所決
定的項目順序，分批計算各樣型的出現次數，並利用指標記錄前一批次曾出現但目前未出現的樣
型。綜觀此結構，因為所有出現過的樣型都必須記錄下來，若流入的資料大多是不常重複者，將會
耗費許多無謂的儲存空間。
上述研究都是屬於地標模式下的方法，Arasu和Manku將 Lossy-Counting概念應用於滑動視窗
模式下，其視窗大小是以資料筆數為單位，按照單位區段內的筆數多寡分為不同階層，最低階層為
4可輸出最佳品質的樣型。為了達成這樣的目標，我們修改 PG圖作為基本的儲存結構，並結合了 Lossy
Counting中估計樣型出現次數的技巧，設計兩種不同的探勘方法。
我們所使用的參數包括使用者輸入的容錯值，用以控制每次批次處理的最大交易數量；以Δ=
N1來高估項目集未被保留、但出現於目前視窗的過去出現次數，且以N為門檻值，刪除次
數低於門檻值的項目集，其中 N 表示目前處理過的交易數量；而為探勘過程中兩候選項目集出現
次數差距的範圍值，若在範圍內，則兩項目集可分做同一群，且以每群最大者作為候選的項目集。
探勘方法一如圖一的範例所示，走過 PG 圖中每個鍊結一次後即可探勘出候選的項目集，過程
中產生的候選項目集記錄 3項資訊，分別為項目集、出現次數和涵蓋布林值。探勘方法二如圖二的
範例所示，為了提昇探勘效能，不一一計算相鄰兩項目集的支持度差距，改為走訪一整條探勘路徑
直到最長的候選項目集為止，若探勘出滿足涵蓋關係的代表項目集，則該路徑上所有對應到的項目
集視為同被涵蓋，如此即可減少計算量。實驗比較兩個方法的效能，結果顯示減少檢查計算次數，
確實能提高探勘效率；而藉由調整參數和，有機會獲得較好的空間精簡效果，例如，方法二輸出
的結果，幾乎能涵蓋所有的頻繁項目集。值得注意的是，我們所設計的方法通用於探勘 RP及-TCFI
兩種代表頻繁項目集，只要暫存空間允許，更可同時探勘以提高答案的準確性。
（三）地標模式下之 XML最大頻繁樣型探勘 [3][5]
基於上述研究，我們進一步考慮地標模式下的 XML 串流，研發可快速探勘最大樣型的方法；
由於樹狀結構的複雜性，盡量縮短處理時間和減少儲存空間有其必要性。每當有新資料流入，必須
立即調整所記載的樣型資訊或儲存結構；另一方面，串流環境常導致資訊系統沒有足夠資源來保留
完整的資料，因此，面對可能已經流逝的資料時，還必須提供能有效估計出現次數的方法。我們先
採取將 XML轉成序列的表示法，再存成精簡的樹狀結構，稱為 MXP-tree，可以隨資料串流持續更
新其內容；最後提出分區探勘最大樣型的演算法，結合 Lossy Counting的概念後，將可限制輸出答
案的誤差在一定範圍內，完整的方法流程如圖三所示。
首先，我們掃瞄每筆 XML 資料，根節點到葉節點的每條相異路徑都被分配一個編碼，然後根
據葉節點由左而右的次序將其轉成序列；此時，轉換前後的路徑與編碼會一一配對記錄下來，並且
累計該路徑出現於多少筆 XML資料中，以表格型式記載，稱為編碼表。接著，建立MXP-tree以壓
縮儲存可能成為答案的候選樣型，新增一筆 XML資料於MXP-tree的演算法附於圖四，每條序列的
後序字串，正好代表該 XML 所有的根子樹樣型，故可用來表示候選樣型。我們將後序字串逐一加
入MXP-tree，字串上的每個編號會依序記錄在根節點往下某條路徑上，根節點除外的每個節點代表
一條後序字串，根節點到該節點路徑的編碼即其內容，而節點上可累計包含這條後序字串的序列筆
數。為加速探勘，我們以橫向鏈結由左而右串接編號相同的節點，並將起始位置記錄於編碼表，並
賦予每個節點一個獨特的位置碼，可辨別任兩個節點在MXP-tree的相對位置。
如圖五所示的MXP-tree，我們將根節點下一層（即第二層）的節點稱為子樹根，依子樹根不同
可將 MXP-tree分為數個子樹（即分區），同編號的節點，利用位置碼由左而右建立橫向鏈結時，可
讓屬於同一棵子樹的節點群聚在橫向鏈結的連續區段上，我們便可利用此特性設計分區探勘的程
序。再者，我們也藉著子樹根的更新達成 Lossy Counting分段更新的原則，若子樹根出現次數未達
門檻，則刪除其對應的整棵子樹。新增任何子樹根或相關節點時，我們會將上述刪除的影響納入考
量，以子樹根在編碼表累計的出現次數，作為該子樹中所有節點的計數估計值；結果將高估部分樣
型的出現次數，相較於 Lossy Counting，我們得到的估計值比較低，因此較為準確。
最後，我們提出有效率的分區探勘程序，可快速找出具代表性的最大樣型，包括兩種不同版本，
圖六是以字尾為主的探勘程序。首先，根據編碼表依序選擇每條橫向鏈結，循序走訪具有相同編號
的所有節點；而依照每個節點上的位置碼，可以分區找出各子樹的最大樣型。這些最大樣型都陸續
6七、附圖
圖一、地標模式下之代表頻繁項目集探勘方法一
圖二、地標模式下之代表頻繁項目集探勘方法二
XML4
XML資料流 1.以序列編碼轉換XML資料
3.以MXP-tree探勘最大樣型門檻值
容錯值ε
2.更新MXP-tree
估計次數Δ
XML3 XML2 XML1
圖三、地標模式下之 XML最大頻繁樣型探勘流程
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
科 
教 
處 
計 
畫 
加 
填 
項 
目 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
計畫成果推廣之參與（閱聽）人數 0  
 
