Provision of proportional delay differentiation in
wireless LAN using a cross-layer fine-tuning
scheduling scheme
Y.C. Lai, A. Chang and J. Liang
Abstract: The proportional delay differentiation (PDD) is one of the most well-known quality of
service (QoS) models and has drawn much attention because of its ‘controllable’ and ‘predictable’
characteristics. How to provide PDD in a wireless LAN (WLAN) is addressed and a cross-layer
fine-tuning scheduling (CFS) scheme with the goal to maintain PDD among all wireless stations
is proposed, while improving performance in a WLAN. CFS additionally considers the time-
varying channel capacity to schedule packets, finely tunes the contention window and properly
arbitrates the backoff time. Also, it operates in a fully distributed manner among all stations and
in a cross-layer approach in each station. The simulation results demonstrate that the CFS
scheme can provide more satisfactory PDD and higher performance in a WLAN, compared with
802.11e.
1 Introduction
The best-effort service is not sufficient for the variety of
evolving Internet applications, because it cannot promise
any guarantee of packet loss, delay or jitter. Nowadays,
many contents on the Internet are in multimedia form, and
they often require certain guarantee of quality of service
(QoS). Among a lot of significant researches proposed to
meet different QoS requirements [1], the proportional dif-
ferentiated services [2] is one of the most well-known
approaches and has drawn much attention [3–6] because
of its ‘controllable’ and ‘predictable’ characteristics. The
‘controllable’ characteristic offers the network manager a
means to adjust the quality spacing between service
classes according to the given pricing or policy criteria.
Besides, the ‘predictable’ characteristic ensures that the
differentiation between classes is consistent in any
measured timescale. The proportional delay differentiation
(PDD) model [2] uses the queuing delay as the performance
metrics to fulfil the proportional differentiated services.
PDD was first carried out by adopting the waiting time pri-
ority (WTP) scheduler. WTP, inherited from Kleinrock’s
Time-Dependent-Priorities algorithm in which the priority
of a packet increases in proportion to its waiting time,
selects the packet with the highest priority to transmit [7].
Currently, there has been an emerging interest aspiring to
exploit wireless LANs (WLANs) [8], and the demand for
QoS over there also rises more urgently. Many works
have been devoted to QoS issues in a WLAN [9, 10].
However, their works focused on the differentiation of
medium access control (MAC) delay for accessing the wire-
less medium and did not consider the differentiation of
queuing delay in the buffer. It is more reasonable to apply
the PDD model into a WLAN to provide the application’s
perceived QoS. However, the previous schedulers, such as
WTP, were originally proposed to achieve PDD for wired
networks and cannot be applied in WLANs directly.
The WLAN standards, 802.11 and its enhanced version
802.11e, adopt distributed coordination function (DCF)
and enhanced distributed channel access (EDCA), respect-
ively, contend the wireless medium by using carrier sense
multiple access with collision avoidance (CSMA/CA).
CSMA/CA will select a random backoff time in the range
between 0 and the contention window, which is dynami-
cally adjusted according to the number of collisions. A
larger backoff time means a lower probability to access
the medium. Therefore the scheduler achieving PDD in a
WLAN must not only be able to calculate the priority of
the transmitted packet, but also map this priority to the
appropriate backoff time to allow a higher-priority packet
to have less backoff time, thus enabling it to be transmitted
sooner.
In fact, achieving PDD in a WLAN is not trivial or intui-
tive because of three troublesome problems. (1) Within each
station, because the backoff time is an integer limited by the
decisive contention window, different priorities may map to
the same integer, causing that the packet with higher pri-
ority may not be transmitted first and thus PDD is violated.
(2) Among all stations, since CSMA/CA is operated in a
distributed manner, the contention window is separately
adjusted in each station. These values of contention
windows in different stations are not synchronised, i.e.
they are not the same, causing that higher priority may
have less backoff time in different stations. (3) In a
WLAN, the wireless link has location-dependent and time-
varying capacity [11]. Without considering this character-
istic, directly applying any scheduler to achieve PDD in
this environment shall cause poor performance because
the selected packet may encounter a very bad channel con-
dition (poor capacity).
For PDD provisioning in a WLAN, Xue et al. proposed a
cross-layer waiting time priority (CWTP) scheduler, which
uniformly maps the normalised waiting time calculated by
Techset Composition Ltd, Salisbury
Doc: {IEE}Com/Articles/Pagination/COM52559.3d
# The Institution of Engineering and Technology 2007
doi:10.1049/iet-com:20060245
Paper first received 30th April 2006 and in revised form 3rd February 2007
The authors are with the Department of Information Management, National
Taiwan University of Science and Technology.
E-mail: laiyc@cs.ntust.edu.tw
IET Commun. 1
and re-enters the backoff procedure to wait for retransmis-
sion. In the case of collision, CW is doubled under the con-
straint, CWmin  CW  CWmax, where CWmin and CWmax
are the predefined minimum and maximum values. When a
packet is transmitted successfully, CW is reset to CWmin.
802.11e has enhanced 802.11 with a newly defined
mechanism, hybrid coordination function (HCF), which
is composed of EDCA and HCF control channel access
(HCCA). EDCA is designed for prioritised QoS support
and works in contention-based, while HCCA is designed
for parameterised QoS support and works in controlled-
based. The 802.11e MAC introduces four access category
(AC) queues with different precedence [In the 802.11e stan-
dard, the term ‘priority’ is used. However, herein we adopt
the term ‘precedence’ to avoid the confusion between the
priority of AC and the packet’s priority used in the schedu-
ler.]. EDCA assigns a smaller CWmin and CWmax to an AC
with higher precedence. 802.11e also features two par-
ameters: TXOPLimit, which is the maximum duration per-
mitted for a certain station to transmit data frame after
obtaining a transmission opportunity (TXOP), and arbitra-
tion IFS (AIFS), which is the time interval between the
moment the wireless medium becoming idle and the start
of channel access negotiation. The AC that wins internally
contends for the medium externally with the ACs from
other stations.
2.3 CWTP
CWTP inherits WTP to achieve PDD in a WLAN [12]. It
first calculates the normalised waiting time at the network
layer and then maps this value to a backoff time at the
MAC layer. The backoff time of each packet is calculated
dynamically by linearly mapping its normalised waiting
time to an integer in the range [0, CW]. The backoff time
is calculated as follows
backoff time( ~wi(t)) ¼ INT
~wmax(t)  ~wi(t)
~wmax(t)  ~wmin(t)
 CW
 
(7)
where ~wmax(t) and ~wmin(t) are the maximum and minimum
of normalised waiting times, respectively, of all packets
from the distributed stations at time t, and INT(x) rounds
x into an integer. The concept of linear mapping is illus-
trated in Fig. 1.
The authors in Ref. [12] also refined it and proposed the
piecewise linear mapping algorithm, in which the normal-
ised waiting times are divided into fixed intervals of equal
lengths, and during each interval, linear mapping still
takes place. The weakness of CWTP is that it needs to
listen to the normalised waiting times of packets from all
other stations, i.e. the station must be in the
promiscuous mode in order to find out ~wmax(t) and
~wmin(t), no matter linear mapping or piecewise linear
mapping is employed. Also, it does not take the time-
varying channel capacity into consideration to further
improve the overall performance.
3 CFS scheme
In this section, we present the CFS architecture and its
cross-layer structure. The three major modules in CFS are
also introduced in detail. It is essential that CFS coordinates
the stations and makes their medium access in order, so that
packets with higher priority, which is defined at LWTP
module in Subsection 3.3, can be serviced prior to those
with lower priority, resulting that PDD will be maintained.
3.1 Architecture
PDD was originally proposed for the wired environment,
where in practice, a router is responsible for scheduling
packets that wait in queues and each queue is associated
with one class, as shown in Fig. 2a. In a wireless
network, each station works individually and contends for
a shared wireless medium. Thus, providing PDD in a wire-
less network requires different architectures.
Directly associating one class with one station is an intui-
tive architecture, as Fig. 2b shows. Actually, CWTP adopts
this architecture for 802.11 WLAN, since only one queue in
each station exists. Nevertheless, this architecture may not
be reasonable for providing PDD in a WLAN, because the
goal should be to provide delay differentiation for different
applications, rather than for different stations. Each station
has different applications requiring various QoS.
Our proposed CFS scheme uses the architecture where each
station has multiple classes, as shown in Fig. 2c, for 802.11e
WLAN in which multiple queues are provided. One queue
corresponds to one type of applications, such as audio,
video and data, and has its distinct delay requirement. Thus,
CFS aims to ensure that PDD is maintained between classes
Fig. 1 Linear mapping in CWTP
Fig. 2 The PDD model
a in a wired network
b in a wireless network (one class per station)
c in a wireless network (multiple classes per station)
IET Commun. 3
module. Since the backoff time is limited in this range and is
an integer in the unit of time slot, mapping the continuous
priority to the discrete backoff time shall cause that different
priorities may map into the same backoff time. Thus, BTM
expects to map a higher priority to a backoff time smaller
than that mapped from a lower priority.
One way to do the mapping is through the relative values
of all priorities, like linear mapping. Observe the distri-
bution of priority in Fig. 4, where the lower priorities
occur rarely and higher priorities happen frequently. For
example, the lower priority (a1) occurs once and higher pri-
orities (a2 and a3) occur twice. If we use linear mapping, it
is very likely that the mapping will be fulfilled as shown in
Fig. 4a, where a2 and a3 map to the same backoff time. Thus
linear mapping is not suitable, because a very large portion
of priorities could be mapped into the same backoff time,
resulting in poor differentiation.
Therefore the mapping is more reasonable if the distri-
bution of priority is considered. When there are more
packets with higher priorities, reserving more space for
those packets is expected by broadening their mapping
space to widespread these priorities. As presented in
Fig. 4b, mapping a2 and a3 to different backoff times
causes the differentiation at accessing wireless medium.
Meanwhile, since fewer packets have low priorities, the
mapping can be condensed to save some space.
When considering the distribution of priority, if we have
the full knowledge of this distribution formed by all packets
among all stations, the exact mapping can be done by the
following
backoff time(Pk(t)) ¼ INT CW 
Ð Pk (t)
x¼0 g(x)Ð1
x¼0 g(x)
 CW
 !
(13)
where g(x) is the probability density function of priority x.
Unfortunately, the distribution of priority is hard to build
exactly, because it is changing dynamically all the time and
its calculation needs to acquire packets’ priorities from all
distributed stations. Thus, in BTM, two approximations
are used to obtain (13). First, the ranking order (in percen-
tile) in discrete form, which has the similar meaning ofÐ Pk (t)
x¼0 g(x)=
Ð1
x¼0 g(x), is adopted. Second, in order to avoid
setting the promiscuous mode, the previous priorities
within self-station are used to approximate the set of those
from all stations. By these two approximations, the
mapping can be realised in a fully distributed manner.
Therefore based on the synchronised CW tuned by CWA,
BTM adopts the ranking order of current priority within
itself station for the mapping of backoff time. BTM first
keeps track of a history of p(t) transmitted packets, and
then the backoff time is designated as
backoff time(Pk(t)) ¼ INT(CW  Rp(t)(Pk(t))  CW)
(14)
where Rp (t) is the ranking order in percentile (%),
0  Rp (t)  1, and p(t) is set to the current value of the
contention window. The reason p(t) being adaptive with
CW is because keeping p(t) fixed will waste mapping
space if the value, compared with CW, is too small,
and will increase same-slot mapping if the value is too
large. Note that the higher the priority, the larger the
ranking order.
4 Simulation and results
We implement the CFS scheme and EDCA in GloMoSim
[16] to compare the performance of both mechanisms in
achieving the PDD model in a WLAN. Note that we do
not compare CFS with CWTP, because CWTP needs to
work in the promiscuous mode while CFS relies on self-
station information only, resulting that the comparison
between them is meaningless and unfair. First, we
examine the dynamics of packet delay for different classes
and ACs. Then, the number of stations and the packet
arrival rate are varied to observe their effects on delay,
achieved delay ratio and goodput. Furthermore, the updat-
ing period of the medium utilisation, Dt, is also
investigated.
4.1 Scenario
In the simulation, assume there are two service classes in
each station and the corresponding DDPs are set as d1 ¼ 2
and d2 ¼ 1. Thus, the desired delay proportion is 2 (d1/
d2 ¼ 2/1) for class 1 over class 2. For the sake of compari-
son, we limit the ACs in EDCA to two categories, where
AC1 has the lower precedence and AC2 has the higher pre-
cedence. AC1 is observed against class 1 and AC2 is
observed against class 2. The packets generated for class
1 (AC1) and class 2 (AC2) are possessed of packet size as
500 and 200 bytes, respectively. The provided traffic is vari-
able bit rate for class 1 (AC1), and constant bit rate for class
2 (AC2), with an aggregate value at 1.5 Mbps for each class
(AC). Each queue has a buffer size of 100 packets. The
default number of stations is set to 10. All stations may
move around within the same basic service set, so that
each station can detect any transmission from other stations.
The physical layer follows IEEE 802.11b that allows data
transmission rates switching at 1 Mbps, 2 Mbps, 5.5 Mbps
and 11 Mbps, which are modelled by a multi-state
Markov process as referred in [13]. Figure 5 illustrates the
topology where there are totally n stations. Station k sends
packets to station (k mod n)þ 1, and vice versa. The
related parameters for CFS and EDCA are listed in
Table 1. The medium utilisation is updated every second
Fig. 5 Simulation topology
Fig. 4 Mapping of priority to limited backoff time
IET Commun. 5
