摘要： 
 
本計劃針對分散式信號源編碼及應用這個領域中的分散式視訊編碼這個部
份做深入的研究，並提出了有效的混合型分散式編碼架構、可縮放的分散視訊編
碼演算法、基於分散信號源編碼及插入像素之多重描述影像編碼技術和基於低參
考品質雜湊之殘餘分散式編碼演算法等四項成果。 
 
本計畫相關研究成果分別發表至 IEICE Electronics Express 及第八屆智能系
統設計與應用國際研討會等相關期刊及研討會，結至目前為止共計產出一篇期刊
論文及三篇研討會論文，預計還會有一篇期刊論文的產出。 
 
(一) 前言 
 
近年來國內外對於分散式信號源編碼之研究與應用多集中於與通道編碼技
術相關的部份和分散式視訊編碼架構與演算法的研究與探討。已被開發的技術有
Discus 方法[1-2] 、基於蜂巢式分散式信號源編碼架構[3-4]、用 Turbo 碼[5]、
LDPC[6-9]的分散式信號源編碼等。對於 Slepian-Wolf 理論的編碼的現有研究主
要集中在固定位元率的編碼，不能處理信號源相關性變化的問題；在分散式視訊
編碼架構和演算法的部份，全球現有的研究成果有 PRISM 法[10-11]、Griod 分散
式視訊編碼架構[12-16]和一些基於這些方法做的改善[17-24]等。 
 
本計畫則是針對分散式信號源編碼及應用這個領域中的分散式視訊編碼這
個部份做深入的研究，並於計畫執行期間產出下列幾種成果： 
I. 有效的混合型分散式編碼架構。 
II. 可縮放的分散視訊編碼演算法。 
III. 基於分散信號源編碼插入像素之多重描述影像編碼技術。 
IV. 基於低參考品質雜湊之殘餘分散式編碼演算法。 
 
(二) 研究內容 
（1） 使現有的視頻壓縮標準演算法效能近似於的分佈式視頻編碼架構和方法之
研究 
 
     目前提出的幾種分散式視訊編碼架構雖然都具有簡易編碼的特性， 
但他們的效能都不能達到理論的期望值，與視訊標準演算法的效能有一定
差距，其原因是不能妥善去除視訊的頻率域的相關性，而且在編碼方法中
一般採用常規 DCT、標準量化等方法，我們的研究將從兩方面開展：一是利
用先進方法，改善解碼端補償問題，提高現有架構和演算法的效能，二是
  
圖一 本研究提出的渾合型分散式視訊編碼架構 
 
 
圖二 小波頻帶掃描及切割圖 
 
殘餘分散式視訊編碼已經被證明具有與離散餘弦轉換相似的效果[16]。我們
以符號 reW 表示對於視訊框W 做簡單預測所得到的結果，並將其作為編碼器與解
碼器皆可使用的參考視訊框。殘餘視訊框中仍會保有一部份空間域的關聯性，故
我們於編碼器端將 Wyner-Ziv 引入小波域中對殘餘視訊框進行處理，藉以抽取出
時域與空間域殘留下來的資訊。則參考視訊框 reW 可以公式(1)表示，其中 'jK 和
'
1jK 用以表示前一個與後一個被解譯出來的視訊框。 
'
1
'
 jjre KKW                            (1) 
g
l 1 ,  1 ，其中 l是現在處理的視訊框於同一組影像中與前一個
被解譯的 'jK 之間所差的視訊框數， g 則是該組影像中的總視訊框數。 
 
在編碼端，殘餘視訊框可被表示為 reWWD  ，他可以被離散小波轉換分
的重現小波頻帶係數與邊框資訊。這些解讀的資訊再經由離散小波反轉換還原，
最後像素值則可依公式(4)解出。 
reWDW  ''                           (4) 
 
 
(四) 實驗結果與討論 
本計畫所發表的演算法其實驗使用的數據為標準 QCIF@15fps 的序列。本研
究提出的方法與五種不同的離散式視訊編碼方式進行比較，其中包括具有
intra-mode 的 DVC、不具 intra-mode 的 DVC、使用純 SW-SPIHT 的 DVC、殘餘編
碼 DVC 和使用離散餘弦轉換的 DVC。實驗結果如圖三及圖四所示。 
 
 
圖三 GOP=8 之失真率比較 
 
 
圖四 GOP=8 且位元率為 166kbps 之視訊框品質比較 
[5] A.Aaron and B.Girod, ”Compression with side information using turbo coding”, 
presented in Proc. DCC’02, Snowbird, UT, Apr.2002, pp.252-261. 
[6] D.Schonberg, S.S. Pradhan, and K.Ramchandran, “LDPC codes can approach 
the Slepian-wolf bound for general binary sources”, presented at the Allerton 
Conf. Communication,Control,and Computing, Champaign,IL,2002. 
[7] A.D. Liverris, Zixiang Xiong, C.N.Georghiades, “compression of binary source 
with side information at the decoder using LDPC codes”, IEEE communications 
letters,vol.6, NO.10 (2002) 440-442. 
[8] Mina Sartipi, Faramarz Fekri, “distributed source coding in wireless sensor 
networks using LDPC coding: the entire Slepian-wolf rate region”, IEEE 
communication society, (2005)1939-1944, 
[9] D. Varodayan, A. Aaron and B. Girod, "Rate-adaptive distributed source coding 
using low-density parity-check codes," Proc. Asilomar Conference on Signals, 
Systems, and Computers, 2005, Pacific Grove, CA, November 2005. 
[10] R. Puri and K. Ramchandran, “PRISM: an uplink-friendly multimedia coding 
paradigm,” Int. Conf. Acoustics, Speech, and Signal Processing: 856-859, 2003 
[11] R. Puri and K. Ramchandran. “PRISM: A New Robust Video Coding 
Architecture Based on Distributed Compression Principles ＂ ， Proc. of 
40thAllerton Conference on Communication, Control, and Computing, Allerton, 
IL, Oct. 2002. 
[12] Aaron, S. Rane,hash, and B. Griod, “Wyner-Ziv video coding with hash-based 
motion compensation at the receiver”, IEEE Int. Conf. Image Processing, 
Singapore, 2004. 
[13] Aaron, S. Rane, E. Setton and B. Griod, “Transform-domain Wyner-Ziv codec 
for video”, Proc. Visual Communications and Image Processing, 2004. 
[14] A. Aaron, S. Rane and B. Griod, “Toward practical Wyner-ziv coding of video” 
presented at the IEEE Int. Conf. Image Proceeding, Barcelona, Spin, 2003, Vol. 
3,pp.869-872. 
[15] D. Varodayan, A. Aaron and B. Girod, "Exploiting spatial correlation in 
pixel-domain distributed image compression," Proc. Picture Coding Symposium, 
PCS 2006, Beijing, China, April 2006. 
[16] A. Aaron, D. Varodayan and B. Girod, "Wyner-Ziv residual coding of video," 
Proc. Picture Coding Symposium, PCS 2006, Beijing, China, April 2006. 
[17] Q. Xu, V. Stankovic, and Z. Xiong, “Layered Wyner-Ziv video coding for 
transmission over unreliable channels," Signal Processing: Special Issue on 
Distributed Source Coding＂, to appear. 
[18] J.Ascenso,C.Beites,F..Pereira, “motion compensate refinement for low 
complexity pixel based on distributed video coding”, http:// 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 97-2221-E-151 -037 - 
計畫名稱 分散式視訊編碼理論和方法之研究 
出國人員姓名 
服務機關及職稱 
潘正祥 
國立高雄應用科技大學電子工程系 教授 
會議時間地點 98 年 08 月 12 日~98 年 08 月 10 日 大陸瀋陽 98 年 08 月 18 日~98 年 08 月 20 日 大陸西安 
會議名稱 第九屆混合智能系統國際研討會(HIS-2009) 第五屆資訊認證與安全國際研討會(IAS-2009) 
發表論文題目 
1. A Particle Swarm Optimization with Feasibility-based Rules for 
Mixed-variable Optimization Problems.. 
2. Image Segmentation Based on GC-CV. 
3. RBF Neural Network based on Fuzzy Evolution Kalman Filtering and 
Application in Mine Safety Monitoring. 
4. The Application and Study of Graph Cut in Motion Segmentation. 
 
一、參加會議經過 
 
此次前往大陸瀋陽及西安參加國際研討會，於會前先至哈爾濱工業大學深圳研究生
院與當地教授商討明年共同舉辦 WGIC2010 國際研討會相關事宜及進一步討論合作事
項，並互相交換相關研究領域之研究心得與取得之研究資料。隨後前往瀋陽出席第九屆
混合智能系統國際研討會。本人亦為此會議主辦人員之一，會後亦於當地舉辦檢討會。
八月十六日再赴西安參加第五屆資訊認證與安全國際研討會及舉行會議行前及會後檢討
會議。本人於此次會議共計發表論文四篇，其中兩篇論文為被列入口頭報告論文。會議
結束後與主辦會議幾位核心人士及相關領域頗具學術權威之先進前輩討論相關研究領域
未來之發展方向與可能的研究潛能，隨後於會議結束隔天返台。 
 
二、與會心得 
 
此次出席 HIS-2009 及 IAS-2009 國際會議除了與全中國大陸排名前五名的哈爾濱工
業大學深圳研究生院師生建立良好友誼關係之外，亦於本次參與之研討會中獲得許多研
究相關領域知識與新的靈感。對於設定未來研究方向、題目之選定頗有幫助。本次會議
A Particle Swarm Optimization with Feasibility-based Rules for Mixed-variable 
Optimization Problems 
Chao-Li Sun, Jian-Chao Zeng 
Complex System and Computational Intelligence 
Laboratory, 
Taiyuan University of Science and Technology, 
Taiyuan, Shanxi, China, 030024 
clsun1225@163.com, zengjianchao@263.com
Jeng-Shyang Pan1,2
1Shenzhen Graduate School,  
Harbin Institute of Technology,  
Shenzhen, Guangdong, 518055 
2 Department of Electronic Engineering,  
National Kaohsiung University of Applied Sciences, 
Kaohsiung, 807, Taiwan  
jspan@cc.kuas.edu.tw
Abstract—A Particle Swarm Optimization algorithm with 
feasibility-based rules (FRPSO) is proposed in this paper to 
solve mixed-variable optimization problems. An approach to 
handle various kinds of variables is discussed. Constraint 
handling is based on simple feasibility-based rules, not needing 
addinional penalty parameters and not guaranteeing to be in 
the feasible region at all times. Two real-world mixed-varible 
optimization benchmark problems are presented to evaluate 
the performance of the FRPSO algorithm, and it is found to be 
highly competitive compared to other existing stochastic 
algorithms.
Keywords- Particle Swarm Optimization; Feasibility-based 
rules; Mixed-variables 
I. INTRODUCTION
The traditional approaches to optimization problems 
often assume that the design variables are continuous. 
However, in real life, many practical engineering 
optimization problems involve discrete variables, integer 
variables and zero-one variables as well as continuous ones. 
A discrete variable is the one that can take its value only 
from a set of discrete values such as the thickness of steel 
plate, the diameter of copper pipe, etc. A variable that can 
only take integer values is called integer variable. As a 
common example, integer variables are usually used to 
express a number of identical elements in the mechanical 
design. Zero-one variables, also known as binary variables, 
are usually required in the formulation of design problem 
with alternative option selections such as the switch 
selection. For the value of zero-one variables is only 
assumed 0 or 1, this class of variables can be treared as a 
special case of integer variable or discrete variable that the 
discrete set is . We call the problems containing 
integer, discrete, zero-one and continuous variables mixed-
variable optimization problems. Obviously, different kinds 
of variables, equality or inequality constrained functions and 
convex or nonconvex nonlinear objective function add the 
difficulty to mixed-variable optimization problems. 
In general, there are two classes of optimization methods 
to solve mixed-variable optimization problems: stochastic 
and deterministic ones. The deterministic search algorithms, 
such as Branch-and-Bound[1-3], Recursive quadratic 
programming[4], Sequential linearization algorithm[5, 6], 
penalty function approach[7, 8] and lagrangian relaxation 
methods[9, 10] have the advantage that they can take 
advantage of the structure of the problem so as to speed up 
the search for the discrete variables. However, their 
shotcoming is that they cannot cope with multiple hump 
functions and nonconvex functions very well. 
In recent year, many stochastic search algotihms, such as 
simulated annealing (SA)[11], genetic algorithms (GA)[12-
14], evolutionary programming[15], Diffirential Evolu-
tionay (DE)[16, 17], have been proposed to solve mixed-
variable optimization problems. Each algorithm above has 
its own disadvantage to solve mixed-variable optimization 
problems as well as their advantages. No method appears to 
be substantially better than the others when applicability, 
efficiency, robustness and solution quality are all considered. 
For these reasons, it is quite important to find a reliable 
global approach to solve mixed-variable optimization 
problems. 
Particle Swarm Optimization (PSO) algorithm was 
proposed by Kennedy and Eberhart in 1995[18, 19], its idea 
comes from the simulating the social behavior of animals 
such as the flock of bird and the schooling of fish. PSO has 
gained much attention and been successfully applied in a 
variety of fields mainly for unconstrained continuous 
optimization problems due to its simple concept, easy 
implementation and quick convergence[20]. In order to 
make full use of the advantages of PSO, three main kinds of 
methods are incorporated into PSO for solving constrained 
optimization problems, which are the penalty function 
method, the constraint-preserving method and the feasiblity-
based rule method. Many experimental results have shown 
that PSO has powerful competition in solving constrained 
optimization problems. However, it has done very little 
work by PSO to solve mixed-variable optimization 
2009 Ninth International Conference on Hybrid Intelligent Systems
978-0-7695-3745-0/09 $25.00 © 2009 IEEE
DOI 10.1109/HIS.2009.112
543
Figure 1. The processing procedure of different kinds of 
variables 
IV. PARTICLE SWARM OPTIMIZATION WITH FEASIBILITY-
BASED RULES (FRPSO) 
In this paper, the constraint violation value of a solution 
is calculated as follows: 
 (2) 
Suppose that  represents  of particle  at 
iteration  and  represents the new generated 
position of particle  at iteration . In the standard PSO, 
 only if .
While in FRPSO algorithm, feasibility-based rules are 
employed. That is,  will be replaced by  at 
any of the following scenarios: 
(1)  is infeasible, but  is feasible. 
(2) Both  and  are feasible, but 
.
(3) Both  and  are infeasible, but  
.
The core operations of PSO are two updating equations 
of the velocity and position for each particle. In detail, 
suppose that the position and the velocity of particle  in th 
dimensional search space are represented as 
and  respectively. 
Each particle’s own best history position ( ) is denoted 
by , and the best history position 
that the entire swarm has passed ( ) is denoted by 
. The new velocity and position 
are calculated as follows: 
 (3) 
 (4) 
Where  is called inertia factor,  and  are two 
positive constants called acceleration coefficients,  and 
 are two independent random numbers uniformly 
distributed in the range of [0,1]. The process is repeated 
until a user-defined stopping criterion is reached. For 
more detail the reader can referred to [20]. 
The pseudocode of FRPSO algorithm for mixed-variable 
optimization problems is shown in Fig. 2. 
Figure 2. FRPSO Algorithm for mixed-variable 
optimization problems 
V. EXPERIMENT AND DISCUSSIONS
Two difficult real-world mixed-variable bench optimi-
zation problems which frequently employed in the literature 
are used to evaluate the performance of the proposed 
algorithm.In the proposed FRPSO algorithm, the population 
size, the weighting coefficients , , the 
acceleration coefficients  were chosen as 40, 0.9, 0.4, 
2, 2, respectively.  
Example 1: Pressure Vessel Design 
Pressure vessel design is a common benchmarking 
problem for mixed-variables optimization problems. The 
objective of this problem is to minimize the manufacturing 
cost of the pressure vessel, which is a combination of 
material cost, welding cost and forming cost. The 
mathematical model of the problems is: 
  (5) 
545
VI. CONCLUSIONS AND FUTURE WORK
In this paper, a particle swarm optimization with 
feasibility-based rules was developed for mixed-variable 
optimization problems which containing discrete, integer, 
zero-one varialbes as well as continuous ones. Constraint 
handling is based simply on feasiblity-based rules. Different 
kinds of variables are dealt by different ways in FRPSO 
algorithm. 
The described method is relatively simple, easy to 
implement and easy to use. Since no additional parameter is 
needed, the burden of fine-tuning of penalty factors can be 
avoided so as to highly improve the performances of a 
single algorithm. Otherwise, it does not need to guarantee 
the particle be in the feasible region at all times which may 
save a great deal of time.  
The experiment results show that it can find better 
solutions than other results presented in the literature. 
According to feasibility-based rules, feasible solutions are 
always considered better than infeasible ones, which may 
cause the overpressure of selecting feasible solutions so as to 
result in premature convergence. So, the future research for 
us to do is to find a way to improve the diversity of the 
swarm and avoid premature convergence. Besides, for the 
change of discrete variable may lower the optimization speed, 
it is also important for us to search for an efficient method to 
improve the optimization speed. The experimental results of 
FRPSO will then be compared with other PSO-based 
algorithms for solving mixed-variable optimization problems.  
REFERENCES
[1] B. Borchers, J. E.Mitchell, “An improved branch and bound 
algorithm for mixed integer nonlinear programs”, Comput. Oper. Res., 
vol. 21, pp. 359-367, 1994. 
[2] S. Leyffer, “Integrating SQP and branch-and-bound for mixed integer 
nonlinear programming”, Comput. Optim. Appl., vol. 18, pp. 295-309, 
1998. 
[3] E. Sandgren, “Nonlinear integer and discrete programming in 
mechanical design optimization”, ASME, J. of Meth. Des., vol. 112, 
pp. 223-229,1990. 
[4] J. Cha, R. Mayne, “Optimization with discrete variables via recursive 
quadratic programming: part II”, Transaction of the ASME, vol.111, 
pp. 130, 1989. 
[5] H.T. Loh, Y.P. Papalambros, “Computational implementations and 
tests of a sequential linearization algorithm for mixed-discrete 
nonlinear design optimization problems”, ASME Journal of 
Mechanical Design, vol. 113, pp. 335-345, 1991. 
[6] H.T. Loh, P.Y. Papalambros, “Computational implementations and 
tests of a sequential linearization algorithm for mixed-discrete 
onlinear design optimization problems”, ASME Journal of Mechnical 
Design, vol. 113, pp. 335-345, 1991. 
[7] J.F. Fu, R.G. Fenton, W.L. Cleghorn, “A mixed integer-discrete-
continuous programming method and its application to engineering 
design optimization”, Engineering Optimization, vol. 17, pp. 263-280, 
1991. 
[8] D.K. Shin, Z. Gurdal, O.H. Griffin, “A penalty approach for nonlinear 
optimization with discrete design variables”, Engineering 
Optimizaion, vol.16, pp. 29-42, 1990. 
[9] A.M. Geoffrion, “Lagrangian relaxation for integer programming”, 
Mathematical Programming Study, vol. 10, pp. 237-260, 1974. 
[10] V. Jeet, E. Kutanoglu, “Lagrangian relaxation guided problem space 
search heuristics for generalized assignment problems”, Eur. J. Oper. 
Res., vol 182, pp. 1039-1056, 2007. 
[11] C. Zhang, H.P. Wang, “Mixed-discrete nonlinear optimization with 
simulated annealing”, Engineering Optimization, vol. 21, pp. 277, 
1993. 
[12] J.L. Chen, Y.C. Tsao, “Optimal design of machine elements using 
genetic algorithms”, Journal of the Chinese Society of Mechanical 
Engineers, vol.14, pp. 193-199, 1993. 
[13] S.J. Wu, P.T. Chow, “Genetic algorithm for nonlinear mixed discrete-
integer optimization problems via meta-genetic parameter 
optimization”, Engineering Optimization, vol.24, pp. 137-159, 1995. 
[14] S.S. Lin, C. Zhang, H.P. Wang, “On mixed-discret nonlinear 
optimization problems: A comparative study”, Engineering 
Optimization, vol. 23, pp. 287-300, 1995. 
[15] Y.J. Cao, Q.H. Wu, “Mechanical Design Optimization by Mixed-
variable Evolutionary Programming”, Proceedings of the 1997 IEEE 
Conference on Evolutionary Computation, IEEE Press. pp. 443-446, 
1997. 
[16] J. Lampinen, I. Zelinka, “Mixed integer-discrete-continuous 
optimization by differential evolution, Part 1: The optimization 
method”, 5th International Mendel Conference on Soft Computing 
MENDEL'99, Brno, Czech Republic. , pp. 71-76, 1999. 
[17] J. Lampinen, I. Zelinka, “Mixed integer-discrete-continuous 
optimization by differential evolution, Part 2: a practical exmaple”.5th
International Mendel Conference on Soft Computing MENDEL'99, 
Brno, Czech Republic, pp. 77-81, 1999.
[18] R.C. Eberhart, J. Kennedy, “A new optimizer using particle swarm 
theory”, In Proceedings of 6th International Symposium on Micro 
Machine and Human Science, Nagoya, Japan. pp. 39- 43, 1995.  
[19] J. Kennedy, R.C. Eberhart, “Particle swarm optimization”, In 
Proceedings of the IEEE International Conference on Neural 
Networks. Piscataway, NJ.,  pp.1942-1948, 1995.  
[20] J. Kennedy, R.C. Eberhart, Y. Shi, “Swarm Intelligence”, San Mateo, 
CA: Morgan Kaufman Publishers, 2001. 
[21] C.X. Guo, et al., “Swarm intelligence for mixed-variable design 
optimization”, Journal of Zhejiang University SCIENCE, vol. 5, pp. 
851-860, 2004. 
[22] S.He, E. Prempain, Q.H. Wu, “An improved particle swarm optimizer 
for mechanical design optimization problems”, Eng. Optim., vol. 36, 
No. 5, pp. 585-605, 2004. 
[23] T.P. Runarsson, Y. Xin, “Stochastic ranking for constrained 
evolutionary optimization”, IEEE Transaction on Evolutionay 
Computation, vol. 4, pp.284-294, 1999. 
[24] K. Deb, “An efficient constraint handling method for genetic 
algorithms”, Comput. Meth. Appl. Mech. Eng., vol. 186, pp. 311-338, 
2000. 
[25] G. Toscano Pulido, C.A. Coello Coello, “A constraint-handling 
mechanism for particle swarm optimization”, In Proceedings of the 
2004 Congress on Evolutionary Computation, vol.2, pp. 1396-1403, 
2004. 
[26] Y.J. Cao, Q.H. Wu, “A mixed variable evolutionary programming for 
optimization of mechanical design”, Int. J. Eng. Intell. Syst. Elect. 
Eng. Commun., vol.7, No. 2, pp. 77-82, 1999. 
[27] K. Deb, “GeneAS: A robust optimal design technique for mechanical 
component design”, In Evolutionary Algorithms in Engineering 
Applications, Berlin, Germany: Springer-Verlag. pp. 497-514, 1997. 
[28] C.A. Coello Coello, E.M. Montes, “Constraint-handling in genetic 
algorithms through the use of dominance-based tournament selection”, 
Advanced Engineering Informatics, vol. 16, pp.193-203, 2002. 
547
A cut is a partition of the nodes V into two disjoint sets S 
and T, such that sęS and tę T, as shown in Figure 1(b). The 
cost of a cut is defined as the sum of the costs of all edges 
that are severed by the cut. The minimum cut problem is to 
find a cut with the minimal total cost, and it is equivalent to 
the maximum flow problem [5]. There are many existing 
algorithms for this problem. 
Segmentation can be regarded as a labeling problem 
which can be solved by energy optimization. It is known that 
graph cut can be used to locate the global minimum for some 
two-dimensional energy function, which was first introduced 
by Greig et al. [6]. 
Let a set of pixels i and labels xi ę{0,1}, we aim at 
making the following energy function [7] minimized.  
},1,0{
),,()(),...,(
),(
1

 ¦¦

i
Lji
jiij
i
iin
x
xxExExxE
      (1) 
where 
)).1()1((),(
)1()( 10
jijiijjiij
iiiiii
xxxxwxxE
xExExE
 
 
           (2)
E(x1,x2,…xn) is the energy, i and j are pixels, and L is a 
set of all pairs of neighboring pixels in (1). Ei0, Ei1, Ej0, 
Ej1denote the weights between the nodes vi,vj and the two 
terminals in (2). 
When eę, wij0, we can get the minimal energy of (1) 
by graph cut [7]-[8].  
B. C-V model and its energy function 
In general, active contour can be classified into two types: 
boundary-based model and region-based model. 
In region-based model, Chan and Vese [3] proposed an 
efficient two-phase level set algorithm [9] based on the 
piecewise-constant Mumford-Shah model. This C-V model 
has become a very popular tool in segmentation and related 
image processing tasks.  
Assuming that the original image is divided into an inside 
region and outside region by a close active contour C, then 
its energy function can be defined as in (3).  
            (3) 
)),(()(
))),((1()),((
)),(()),((
2
202
2
101
CinsideareaClength
dxdyyxHcyxu
dxdyyxHcyxuE


 
³
³
:
:
QP
IO
IO
where Ȝ1,Ȝ2,ȝ are parameters, ȝ0i is the given image, and 
c1,c2 are the average of ȝ0i inside and outside of contour C , 
respectively. H denotes the Heaviside function, and į0 is the 
Dirac delta function:  
).(,
00
01
)( 0 zHdz
d
z
z
zH  ®¯­ 
t G
                (4)
C. GC-CV 
If we define Ɏi is the signed distance function, {i} are all 
the pixels in the image domain ȍ, we have the following 
definition: 
otherwise
if
x ii
0
,0
,1 t®¯­ I ˈ                     (5) 
where 
.
,0
,0
,0
°¯
°®
­

!
 
 
otherwised
Cid
Cid
d insideiI
We replace the H function with the binary variable {xi},
and approximate the term of length with the Cauchy-Crofton 
formula [10], then (3) can be converted to the following 
function: 
.))1()1((
))1()()((
1 ),(
2
202
2
101
¦ ¦
¦
 
:

 
n
k eji
jijik
ii
i
ii
k
xxxxw
xcuxcuE
P
OO
  (6) 
Setting (7), then we can establish the relation between the 
graph cut and the C-V model by comparing (6) with (1) and 
(2).
,,),(,
,)(,)( 2101
12
202
0
: 
  
iejiww
cuEcuE
kkij
iiii
P
OO
        (7) 
where  
.
)1(
)1(
,
0
2
0
1 ¦
¦
¦
¦
:
:
:
:

  
i i
i ii
i i
i ii
x
x
c
x
x
c
PP
Thus, through iterative update of c1, c2, the energy 
function (6) is solved by graph cut when it achieves minimal 
energy.
III. IMAGE SEGMENTATION BASED ON GC-CV 
A. Binary image segmentation based on GC-CV 
In GC-CV method, graph cut combined with C-V model 
is based on two-phase level set, so we can segment a grey 
image to binary region directly. 
We know that an initialization contour about the object 
boundary is required in active contour method. Also we need 
offer it before using GC-CV. But due to GC-CV is 
insensitive to the initial contour [4], so we can set it 
automatically by the size of the image. In all experiments, we 
take the same signed distance function in initialization. Thus 
we do not need any interaction with a given image and 
segmentation can be initiated automatically. 
B. Multi-region  image segmentation based on recursive 
GC-CV 
Since traditional C-V model is based on single level set 
function, so it can only segment images into two regions. 
GC-CV is also based on the two-phase level set, so it bears 
the same limitation in image segmentation. 
Although numerous segmentation models with multi-
region have been proposed, the largest number of regions 
that could be segmented was limited by the number of level 
set functions. For multi-region models, Chan and Vese [11] 
proposed a new multiphase level set framework for image 
253
In Figure 4, we experiment multi-region segmentation on 
three typical images using recursive GC-CV. The execution 
time is listed in Table 2. 
The experiment results show that the approach for multi-
region segmentation proposed in this paper performs well 
and has a faster speed in segmentation.  
The key of the method is how to estimate stopping 
conditions for each region. Considered noise, we set a 
threshold value M. When the residual region has overfull 
elements or has only one element, we can stop the recursion. 
For the three images in the experiments, M is set to 20.  
(a) ChanVese1           (b) Circles              (c) 3junctions 
Figure 4. Multi-regions image segmentation based on recursive GC-CV 
Table 2.  Time of segmenting whole image 
Image Size Time 
ChanVese1 201×201 2.3s 
Circles 64×64 0.23s 
3junctions 64×64 0.23s 
Experiment 3: Image segmentation by combining GC-
CV with EM algorithm 
(a) k=5                    (b) k=4                  (c) k=3 
Figure 5. Multi-region image segmentation by combining GC-CV with 
EM
Figure 5 is the segmenting results of three typical images 
using GC-CV with EM algorithm. In these results, we not 
only segment multi-region exactly, but also get appropriate K 
value (number of mixture components by EM). Figure 5(b) 
and 5(c) has same K value as expected. While in Figure 5(a), 
K is different from that by visual inspection. In fact, it also 
needs five mixture components by EM algorithm, and we get 
the same K when the iterative procedure is stopped.  
The following is the segmentation of color images. In 
this paper, we first convert RGB image to equivalent YCbCr 
image, and then segment it by using the combined method. 
The results of Figure 6 show that we can successfully get 
our interested regions in YCbCr color space by the combined 
method. In order to obtain our interested regions, we also set 
an energy threshold value. 
Figure 6. Color image segmentation by combining GC-CV with EM 
The proposed approach is also applied to other gray 
images, which can segment them into different intensity 
regions, as shown in Figure 7. 
Figure 7. Segmenting gray images based on combined method 
The results show that some blurry regions that are not 
easily be observed by vision can be segmented clearly using 
this way. 
V. CONCLUSION
In the paper, we develop a class of methods based on 
GC-CV for image segmentation. 
Compared to C-V model, the segmentation speed of GC-
CV is improved drastically, and can also get a good result. 
Compared with interactive graph cut segmentation, GC-CV 
requires not input from users for seeding purpose. This 
endows the proposed scheme with more automaticity. GC-
CV not only can be used in binary image segmentation, but 
also can be used in multi-region and color image 
segmentation in a simple but effective manner. 
Experimental results show that the proposed GC-CV 
method is worthy of further study, especially for improved 
performance in color image segmentation. 
REFERENCES
[1] L. Grady, “Space-Variant Computer Vision: A Graph-Theoretic 
Approach”, Ph.D. dissertation, Boston University, Boston, MA, 2004 
[2] Y. Boykov, M.P. Jolly, “Interactive Graph Cuts for Optimal 
Boundary and Region Segmentation of Objects in N-D Images,” In 
255
RBF Neural Network based on Fuzzy Evolution Kalman Filtering and 
Application in Mine Safety Monitoring 
Yong Zhang,Qing-dong Du,Shi-dong Yu 
software college 
Shenyang Normal University 
Shenyang, China 
e-mail: zy5219@126.com 
Abstract—Fuzzy information fusion methods are adopted 
widely to resolve the complicated nonlinear problems in 
recent years. This paper proposes a fusion learning 
algorithm of radial basis function (RBF) neural network 
based on fuzzy evolution Kalman filtering. By using this 
proposed method, monitoring data are extracted and 
optimized in mine safety monitoring, and Matlab simulation 
results are analyzed. The results show that this method has 
feasibility and rapid learning efficiency, which can improve 
precision and reliability in mine monitoring systems. 
Keywords-information fusion; RBF neural network; 
Kalman filtering; mine monitoring 
ĉ. INTRODUCTION
The most prominent characteristic of mine safety 
monitoring systems are dynamic, randomness and fuzzy, 
for mutual restriction between each parameter, many 
problems have shown very clearly the nonlinear 
relationship. Traditional mine safety systems are mainly 
concentrated in a probabilistic risk assessment and the 
risk degree of system state is based on product of 
probability caused by hidden dangers and corresponding 
damage degree in mine product systems. The probability 
of hidden dangers happened and the damage caused is 
obtained through statistical data. Therefore the probability 
of occurrence of hidden dangers and damage statistics is 
not enough detailed and the lack of practicality. 
Fuzzy information fusion methods are adopted widely 
to resolve the complicated nonlinear problems in recent  
Fuzzy information fusion methods are adopted widely 
to resolve the complicated nonlinear problems in recent  
Jeng-Shyang Pan 
Electronic Eng. National Kaohsiung University of 
Applied Sciences Kaohsiung, Taiwan 
e-mail: jspan@cc.kuas.edu.tw 
years. Artificial neural network is a new class of 
information processing techniques. It has many 
advantages of biological neural network, such as highly 
parallel, nonlinear global role, good fault tolerance 
capability and associative memory function, self-adaptive 
and self-learning ability [1]. It has been applied in solving 
wide varieties of problems, such as discrete pattern 
classification, function approximation, signal processing, 
control, or any other application which requires a 
mapping from an input to an output. The Kalman filter’s 
an efficient recursive filter that estimates the state of a 
linear dynamic system from a series of noisy
measurements [2]. However, statistical parameters in 
mine safety monitoring can not be accurately obtained. To 
solve such problems, a fusion technique of RBF neural 
network based on fuzzy evolution Kalman filter is 
required. The technique can optimize monitor data and 
draw a more accurate conclusion.
Ċ. FUZZY EVOLUTION KALMAN FILTER
Kalman in 1960[2] published his well-known thesis, 
in which recursive method used to solve discrete data 
linear filtering problem. Kalman filter is the linear 
minimum variance estimation, and when the system is 
completely controllable and observable, steady-state 
filtering effect is not concerned with filtering initial value
selected. To obtain these conclusions must be based on 
accurate mathematical model. 
A.  Extended Kalman filter 
To solve the practical systems with nonlinear 
problems, Kalman filtering algorithm gradually developed 
2009 Ninth International Conference on Hybrid Intelligent Systems
978-0-7695-3745-0/09 $25.00 © 2009 IEEE
DOI 10.1109/HIS.2009.96
467
nonlinear mapping , while output layer 
realize linear mapping .
),( vxgx o
yvxg o),(
Nkvxgwy i
c
i
ikk ,,2,1),,(
1
  ¦
 
  (10) 
1x
2x
mx



)(Xg
1y
2y
my
11v 11w
Figure 1.   RBF Neural Networks 
In general, trained neural network is a highly 
nonlinear optimization problem. In order to model such a 
mapping we have to find the network weights and 
topology. There are two categories of training algorithms: 
supervised and unsupervised. RBF network are used 
mainly in supervised applications [6]. In a supervised 
application, we are provided with a set of data samples 
called training set for which the corresponding network 
outputs are known. According to study algorithms and 
partial derivatives required, there are two methods: 
derivative-based and non-partial derivative. Based on the 
derivative method includes gradient descent method, 
Kalman filtering, etc, while no partial derivative method 
includes genetic algorithms, automatic control and 
simulated annealing, etc. 
For Figure1, network input of m dimension vector is 
defined as , network output of n 
dimension vector is defined as ,
and weight matrix is defined as (11). 
T
mxxxx ),,,( 21  
T
nyyyy ),,,( 21  
««
««
«
¬
ª
»»
»»
¼
º
 
««
««
«
¬
ª
»»
»»
»
¼
º
 
nc
c
c
nn
T
n
T
T
w
w
w
w
w
w
w
w
w
w
w
w
W 




2
1
1
21
11
0
20
10
2
1
 (11) 
Hidden units function:
, ||*|| denote 
universal numbers. 
3/122 )1||(||)||(||   vxvxg
Each hidden units output: 
).,,2,1(||),(|| civxg ii  
Then, network input: ,),,,( 21
T
mxxxx  
We have network actual output vector:
 and it can be represented by Tnyyyy )ˆ,,ˆ,ˆ(ˆ 21  
««
««
«
¬
ª
»»
»»
¼
º

 
««
««
«
¬
ª
»»
»»
¼
º


««
««
«
¬
ª
»»
»»
¼
º
 
||)(||
||)(||
1
||)(||
||)(||
1
ˆ 112
1
1
21
11
0
20
10
ccnc
c
c
nn vxg
vxg
W
vxg
vxg
w
w
w
w
w
w
w
w
w
y 




(12) 
Based on above network model, RBF neural network 
is trained by using fuzzy evolution of Kalman filtering [8]. 
First of all, we set up system models, weight values of 
RBF network are defined as Kalman filter state:
 and network output is 
defined as filter monitor. The above problem is 
transformed into the problem minimize error variance, 
which is difference of target vector and the actual output 
vector of network. 
],,,,,[ 11
T
c
TT
n
T vvww  T
kkk w  TT 1 kkk vhy  )(T  (13) 
Through the above analysis, we have a data fusion 
study algorithm of RBF networks based on fuzzy 
evolution Kalman filter (K-RBF), algorithm described as 
follows: 
Step1: Initialize weight matrices, state error 
covariance matrix , system observation noise 
covariance matrix
0P
R and system process noise covariance 
matrix Q were given initial value respectively. 
Step2: Using GT algorithm, optimize system 
observation noise covariance matrix R and system 
process noise covariance matrix .Q
469
The Application and Study of Graph Cut in Motion Segmentation  
 
Ye Hou, Bao-long Guo 
Institute of ICIE, School of Mechano-Electronic 
Engineering 
Xidian University 
Xian,China 
abcdef4568@163.com，blguo@xidian.edu.cn 
 
 
Jeng-Shyang Pan1,2  
1 Shenzhen Graduate School  
Harbin Institute of Technology  
Shenzhen, Guangdong 
2 Department of Electronic Engineering  
National Kaohsiung University of Applied Sciences 
Kaohsiung, Taiwan  
jspan@cc.kuas.edu.tw 
 
 
Abstract—How to segment moving objects accurately and 
rapidly is one of the most important problems in computer 
vision. In this paper, we discuss two methods studied 
previously for segmenting moving objects based on graph cut. 
One method employs graph cut to segment objects 
automatically, and the other uses the graph cut and the C-V 
model (simplified Mumford-Shah model) to segment objects. 
As well, we present a fast segmentation algorithm based on 
graph cut. The proposed algorithm is trying to reduce the 
number of the nodes in constructing network graph. By 
mapping the invariable pixels of the difference   image into one 
or several nodes and mapping the variable pixels into other 
nodes, the number of the nodes and the edges is decreased and 
the speed of graph cut is increased. In the end of the paper, we 
compare the characteristics of three methods. Experimental 
results show that we can get effective and fast results in motion 
segmentation by using graph cut technology. 
Keywords-motion segmentation; automatically; graph cut; C-
V model; fast 
 
I.  INTRODUCTION 
The effective segmentation is very significant in object 
classification, recognition, tracking, behavior understanding 
and some image processing. At present, numerous methods 
have been developed. An interesting class of segmentation 
methods relies on energy minimization to partition an image 
into different regions. Active contour methods and graph cut 
are all included in this class. In the segmentation methods 
based on graph theoretic techniques, graph cut is especially 
noticeable due to its global optimization, practical efficiency, 
and applicability to high dimension problems. In recent years, 
graph cut has become very popular in interactive 
segmentation [1], which requires   user to input appropriate 
seeds in segmentation. Although it is applied successfully in 
interactive segmentation and other problems of computer 
vision, not much work has been done to analyze motion with 
these methods. This paper attempts to segment motion 
objects automatically and rapidly to get good segmentation 
results based on graph cut technology. 
II. GRAPH CUT AND ENERGY OPTIMIZATION 
 
A. Graph cut 
Graph cut is a technology based on graph theory. For an 
image I, it can be mapped into an undirected network graph 
G=(V,Γ) [2]. V is a set of nodes andΓ is a set of undirected 
edges that connect those nodes.  
The node set V is defined as V={v}∪{s,t}, where each 
node v represents one image element (e.g. individual pixel), 
and s, t are two special terminal nodes, which are called the 
source, s, and the sink, t. In Figure 1(a), we show a simple 
example of a 2D graph with the terminals s and t.  
The edge set Γ is defined as Γ ={e}∪{{v,s},{v,t}}. 
Normally, there are two types of edges in the graph: n-links 
and t-links. N-links connect pairs of neighboring pixel nodes, 
and t-links connect the pixel nodes with the terminals.  
Each edge of the graph is assigned a nonnegative weight 
or cost wij. The weight of the edge is proportional to the 
similarity between the nodes that joins together. 
In general, given a graph G, graph-based segmentation 
methods attempt to find groups of nodes in G that are 
strongly connected to one another, but weakly connected to 
the rest of the graph. 
  
(a) 2D graph G      (b) A cut on G 
 
Figure 1.  A simple example of 3×3 2D graph cut 
 
A cut is a partition of the nodes V into two disjoint sets S 
and T, such that s∈S and t∈ T, as shown in Figure 1(b). The 
cost of a cut is defined as the sum of the costs of all edges 
that are severed by the cut. The minimum cut problem is to 
find the cut with the smallest cost. There are numerous 
algorithms that solve this problem in polynomial time. The 
theorem of Ford and Fulkerson [3] states that a maximum 
flow from s to t saturates a set of edges in the graph dividing 
the nodes into two disjoint parts {S,T}, corresponding to a 
minimum cut [2]. In fact, the maximum flow value is equal 
to the cost of the minimum cut. 
The method is proposed in an attempt to reduce the 
computation of graph cut. 
The time taken by graph cut is related to the number of 
the nodes V and the edges Γ. The decrease of the number 
can reduce the burden of constructing graph and increase the 
speed of computing graph cut. 
As we know, each frame of an image sequence with 
static background has a few changes of motion pixels 
comparing with the background frame, and mostly pixels 
will not change. If the time of computation contains that used 
in invariable background pixels, it will consume mostly time 
and memory. So we can map these invariable pixels into one 
or several nodes, while map the variable pixels into other 
nodes in the graph G.  
VI. EXPERIMENTAL RESULTS 
In this section, we evaluate the methods based on graph 
cut in three aspects:  
1. Graph cut can be used to segment motion objects 
automatically and quickly, and the result is more precise [8]. 
2. The energy optimization of graph cut can be combined 
with some segmentation methods based on energy function, 
and an effective result can be got by GC-CV [9]. 
3. A good and rapid segmentation can be obtained by 
using the fast method. 
All results were run on a P4 2.6GHz, 1GB computer. The 
algorithms were implemented in Matlab. We chose push-
relabel [12] to solve maximum flow. In order to make a 
comparison, the image sequence was not preprocessed, and 
the results were not post-processed. 
In the experiment of the paper [8], the size of each frame 
is 240×360. It takes 0.391s per frame to cut 4-connectivity 
graph, while it takes 0.532s per frame to cut 8-connectivity 
graph. The results are shown in Figure 2. 
 
(a)   Outdoor clip                (b)  Morphological 
 
(c)   4-connectivity              (d)   8-connectivity 
 
Figure 2.  Comparison of graph cut and morphological method 
 
The results show that a human segmentation is obtained 
quickly and effectively by using the method of the paper [8]. 
Comparing 8-connectivity graph cut with 4-connectivity 
graph cut and morphological method, it can be seen that 8-
connectivity gets the better result but consumes more time. 
The following are the results of the GC-CV [9] and the 
C-V model, as shown in Figure 3. 
 
(a)   Original image          (b)   Ground truth 
 
(c) C-V after 900 iterations (d) GC-CV after one time 
 
Figure 3.  Comparison of GC-CV and C-V model 
 
Figure 3(a) is a frame of motion sequence. Figure 3(c) is 
the result based on C-V model that consumes 176.5s after 
900 iterations, and Figure 3(d) is the result using the method 
of GC-CV that consumes 0.53s.  
The result of Figure 3(d) shows that graph cut can be 
combined with C-V model, which can overcome some 
disadvantage of active contour and get segmentation well 
and rapidly. 
Figure 4 shows the result of the fast graph cut. 
0 50 100 150 200 250 300 350
0
50
100
150
200
250  
(a)  New pixels                    (b)  Fast graph cut 
 
Figure 4.  The results of the fast graph cut 
 
Figure 4(a) is the new pixels of the frame (blue pixels are 
the variable pixels and red pixels represent the invariable 
pixels by comparing with the background) that take part in 
constructing the network graph G, and figure 4(b) is the 
result of the fast graph cut. 
By using fast method, the number of the pixels needed to 
construct graph decreases from 76800 to 6700, and the time 
taken by graph cut decreases from 0.297s per frame to 
0.016s per frame.  
It also can be see that the segmentation of Figure 4(b) is 
very similar to that of Figure 3(d). 
The result shows that the fast method is effective and 
rapid. 
3D motion segmentation is similar to 2D motion 
segmentation. What is different is that in 2D graph cut, the 
motion objects are obtained by segmenting each frame from 
the sequence, and meet the need of real time. While in 3D 
graph cut, the whole image sequence is processed, and all 
motion objects are segmented simultaneously that may be 
used in the aspects of video compression and other 
application. 
