i 
??????? 
???? 
? G = (V, E)?????????????? G???(matching)? G??
??????????? G?????(perfect matching) M? G??????
G????????? M?????????????(paired-dominating set)
????????????? S??? x???? S????? x? S???
???????? S???????(induced subgraph)??????????
?(perfect matching)????????(paired-domination problem)????? G
??????????????????????????????????
S ???? s ?????????????? s ???????? s ????
??????????????????????????????????
??????????????????????????????????
????????????????????????(??????????
????????????)??????????????????????
??????????????????????????????????
????? (matched-domination problem)????????? (restricted 
paired-domination problem)? 
???????????(cographs)????????(matched-domination 
problem)?????????(restricted paired-domination problem)??????
????????????????????????????????
(linear-time)????????????????? (matched-domination 
problem)?????????(restricted paired-domination problem)?  
???? ???????????????????????????????
??? 
 
 
iii 
?  ? 
??????? ............................................................................................................ i 
?????? ............................................................................................................... 1 
??????............................................................................................................ 1 
?????????????................................................................................ 2 
????????.................................................................................................... 4 
?????????.............................................................................................. 12 
?????? ............................................................................................................. 13 
???????? ..................................................................................................... 15 
???????????? ..................................................................................... 16 
????????????? ................................................................................. 18 
 
 
 
 
 
 
 
 
? 2 ? 
dominating set of G. The paired- 
domination problem is to find a paired- 
dominating set of G with cardinality 
γp(G). For example, for the three-cube 
graph Q3 shown in Figure 1, S = {v1, v2, 
v3, v4} is a paired-dominating set of Q3 
since S is a dominating set and the 
subgraph induced by S contains a perfect 
matching M = {(v1, v4), (v2, v3)}, and 
γp(Q3) = 4. 
v1 v2
v4 v3
v6 v7
v5 v8
 
Figure 1: The tree-cube graph Q3, in 
which restricted vertices are represented 
by filled circles 
In this project, we first introduce 
two generalizations of the paired- 
domination problem, namely, the 
matched-domination problem and the 
restricted paired-domination problem. 
We then propose linear-time algorithms 
to solve them on cographs.  
????????????? 
Paired-domination was introduced 
by Haynes and Slater [15] with the 
following application in mind. If, in a 
graph G, we consider each vertex as the 
possible location for a guard capable of 
protecting every vertex adjacent to it, 
then “domination” requires every vertex 
to be protected. In paired-domination, 
each guard is assigned another adjacent 
guard, and they are designed to provide 
a backup for each other. Nevertheless, 
some locations may play a more 
important role (for example, important 
facilities are placed at these locations) 
and they are therefore placed by guards 
to make instant monitoring and possible 
protection. In this application, we may 
place as many guards as possible on 
these important locations. Motivated by 
this issue, we introduce two variations of 
the paired-domination problem, namely, 
the matched-domination and restricted 
paired-domination problems.  
Let G = (V, E) be a connected graph 
with vertex set V and edge set E. For a 
set M of edges in G, we write V(M) for 
the set of vertices that are incident to the 
edges of M. A set M ⊆ E of independent 
edges is called a matched-paired- 
dominating set of G if V(M) is a paired- 
dominating set of G, and M is a perfect 
matching of the subgraph induced by 
V(M). The paired-domination problem 
can be equivalent to seeking a matched- 
paired-dominating set of G with 
minimum cardinality. Let R ⊆ V be a set 
of vertices, and let M be a matched- 
paired-dominating set of G. The 
matched number, denoted by mt(M), of 
M w.r.t. R is the number of vertices in 
V(M) ∩ R. The maximum matched 
number, denoted by β(G), of G w.r.t. R 
is the largest matched number of a 
matched-paired-dominating set in G. 
The maximum matched-paired- 
dominating set of G w.r.t. R is a matched 
-paired-dominating set with a matched 
? 4 ? 
is adjacent to a monitor, and every 
monitor is paired with a backup monitor, 
can be modeled by paired-domination in 
cographs. There are applications in 
which it is also important that when 
there are some critical sites (restricted 
set) in the system, their locations can be 
placed by monitors for instant 
monitoring; such an application can be 
modeled by the restricted paired- 
domination in cographs. In this project, 
we will present linear-time constructive 
algorithms to solve the matched- 
domination and restricted paired- 
domination problems in cographs. 
Related areas of investigation are 
summarized as follows. The problem of 
determining the paired-domination 
number γp(G) of an arbitrary graph G 
has been known to be NP-complete [15]. 
The paired-domination problem is still 
NP-complete in some special classes of 
graphs such as bipartite graphs, chordal 
graphs and split graphs [6]. However, 
the paired-domination problem admits 
polynomial-time algorithms when the 
input is restricted to some special classes 
of graphs, including trees [22], 
circular-arc graphs [7], permutation 
graphs [8], block graphs, and interval 
graphs [6]. 
???????? 
3.1. Notations and Known Results 
We begin with an elementary 
observation about paired-dominating 
sets of a graph. Let G be a graph without 
isolated vertices. Haynes and Slater [15] 
observed that a paired-dominating set of 
G does exist and its paired-domination 
number γp(G) is even. 
Lemma 3.1. [15] Let G be a graph 
without isolated vertices. Then, there 
exists a paired-dominating set in G and 
γp(G) is even.  
By definition, a matched-paired- 
dominating set of a graph G is a set M of 
independent edges such that its vertex 
set V(M) forms a paired-dominating set 
of G and M is a perfect matching of the 
subgraph induced by V(M). Let R be a 
restricted vertex set of G. The matched 
number mt(M) of a matched-paired- 
dominating set M is the number of 
restricted vertices in V(M). A maximum 
matched-paired-dominating set of G is a 
matched-paired-dominating set with 
maximum matched number. The 
restricted paired-domination number 
γrp(G, R) of a graph G is the minimum 
cardinality of a maximum matched- 
paired-dominating set of G w.r.t. R. Then, 
the following corollary can be easily 
obtained from Lemma 3.1 and the 
definition.  
Corollary 3.1. Let G be a graph without 
isolated vertices and let R be the 
restricted vertex set of G. Then, there 
exists a maximum matched-paired- 
dominating set in G w.r.t. R and γrp(G, R) 
≥ 1.  
We then define some notations. Let 
G = (V, E) be a graph with vertex set V 
and edge set E. For a set S ⊆ V, the 
subgraph induced by S is denoted by 
G[S]. The open neighborhood of vertex 
? 6 ? 
cographs can be defined by the 
following recursive definition:  
(1) A graph consisting of a single vertex 
and no edges is a cograph.  
(2) If GL = (VL, EL) and GR = (VR, ER) are 
cographs, then the union G of GL and GR, 
denoted by G = GL⊕GR = (VL∪VR, EL ∪ 
ER), is a cograph. In this case, we say 
that G is formed from GL and GR by a 
union operation.  
(3) If GL = (VL, EL) and GR = (VR, ER) are 
cographs, then the joint G of GL and GR, 
denoted by G = GL⊗GR = (VL∪VR, EL ∪ 
ER∪E’), is a cograph, where E’ = {(u, v) | 
∀u∈VL and ∀v∈VR}. In this case, we 
say that G is formed from GL and GR by 
a joint operation.  
A cograph G can be represented by 
a rooted binary tree DT(G), called a 
decomposition tree. The leaf nodes of 
DT(G) represent the vertices of G. Each 
internal node of DT(G) is labeled by 
either ‘⊕’ or ‘⊗’. The cograph 
corresponding to a ⊕-labeled (resp. ⊗- 
labeled) node v in DT(G) is obtained 
from the cographs corresponding to the 
children of v in DT(G) by means of a 
union (resp. joint) operation. A 
decomposition tree of a cograph can be 
constructed as follows:  
Definition 3.6. [4] The decomposition 
tree DT(G) of a cograph G consisting of 
a single vertex v is a tree of one node 
labeled by v. If G is formed from GL and 
GR by a union (resp. joint) operation, 
then the root of the decomposition DT(G) 
is a node labeled by ⊕ (resp. ⊗) with the 
roots of DT(GL) and DT(GR) being the 
children of the root of DT(G), 
respectively.  
The decomposition tree DT(G) of a 
cograph G is a rooted and unordered 
binary tree. Note that exchanging the left 
and right children of an internal node in 
DT(G) will be also a decomposition tree 
of G. For instance, given a cograph G 
shown in Figure 2(a), the decomposition 
tree DT(G) of G is shown in Figure 2(b).  
c
e f
b
d
a
a
b
d f
e
c
h
i
h i
(a) (b)
v
vl vr
 
Figure 2. (a) A cograph G with 
restricted vertex set R={a, f, i}, and (b) a 
decomposition tree DT(G) of G, where 
restricted vertices are drawn by filled 
circles and every internal node of DT(G) 
is labeled by ⊕ (resp. ⊗) representing 
the union (resp. joint) operation. 
Theorem 3.1. [4, 9] A decomposition 
tree DT(G) of a cograph G = (V, E) can 
be constructed in O(|V|+|E|)-linear time.  
3.2. The Restricted Paired- 
Domination Problem on Cographs  
We will solve the restricted paired- 
domination problem on cographs in 
linear time. In fact, we will construct a 
canonical maximum matched-paired- 
dominating set of a connected cograph. 
By Theorem 3.1, a decomposition tree 
DT(G) of a cograph G = (V, E) can be 
built in O(|V|+|E|)-linear time. A cograph 
? 8 ? 
RL = R ∩ VL and RR = R ∩VR. Let CMPDL 
and CMPDR be canonical maximum 
matched-paired-dominating sets of GL − 
I(GL) and GR − I(GR) w.r.t. RL − I(GL) and 
RR − I(GR), respectively. Then, I(G) = 
I(GL) ∪ I(GR) and CMPDL ∪ CMPDR is 
a canonical maximum matched-paired- 
dominating set of G − I(G) w.r.t. R − I(G).  
Henceforth, we will assume that G 
is formed from GL and GR by a joint 
operation. That is, every vertex of VL is 
adjacent to all vertices of VR. First, we 
consider that R = φ. Let vL∈VL and let 
vR∈VR. Obviously, MPD = {〈vL, vR〉} is a 
matched-paired-dominating set of G, 
and, hence, the restricted paired- 
domination problem on G is trivially 
solvable. In the following, assume R ≠ φ. 
For the case of |RL| = |RR|, we give the 
following lemma to find a canonical 
maximum matched-paired-dominating 
set of G with size |R|/2. 
Lemma 3.3. Assume that G = GL ⊗ GR is 
a cograph with restricted vertex set R, 
RL = R ∩ VL and RR = R ∩ VR. If |RL| = |RR| 
> 0, then there exists a canonical 
maximum matched-paired-dominating 
set CMPD of G w.r.t. R such that 
mt(CMPD) = |R| and |CMPD| = |R|/2.  
From this point forward, it is 
assumed that |RL| ≠ |RR|. Without loss of 
generality, assume |RL| > |RR|. Let 
CMPDL be a canonical maximum (kL , sL, 
fL)-matched-paired-dominating set of GL 
− I(GL) w.r.t. RL −I(GL). We first partition 
VL−V(CMPDL) into two subsets RLV  
and FLV  such that RLV  = RL − V(CMPDL) 
and FLV  ∩ RL = φ. Note that RLV  or FLV  
may contain isolated vertices of GL. 
Next, we partition VR into two subsets 
RR and VR−RR. The partitions of VL and 
VR are shown in Figure 3. For simplicity, 
let ιL = | RLV |, ηR = |RR|, and let fR = |VR|−ηR. 
By definition, |RL| = 2kL+sL+ιL and |RR| = 
ηR. By assumption, |RL| > |RR|. Thus, we 
get that 2kL+sL+ιL > ηR. 
CMPDL
GL GR
kL
sL
fL
ι VLL=| |
| |VL    
fR=| |VR −ηR
ηR=| |RR
R
F
 
Figure 3. The partitions of VL and VR, 
where G = GL⊗GR, VL and VR are vertex 
sets of GL and GR, respectively, CMPDL 
is a canonical maximum (kL, sL, fL)- 
matched-paired-dominating set of GL − 
I(GL), and restricted vertices are drawn 
by filled circles. 
Considering the relation between ιL 
and ηR + fR, we have that ιL ≥ ηR + fR or ιL 
< ηR + fR. Depending on these two cases, 
we construct from CMPDL and VR a 
canonical maximum matched-paired- 
dominating set CMPD of G as follows. 
Case I: ιL ≥ ηR + fR. Let V’L = {u1, u2, ..., 
? 10 ? 
canonical maximum matched-paired- 
dominating set of G. In the following, 
assume ύ and vf exist. Let S = {〈ύ, vf〉}. If 
ύ∉RL, then let K’=φ, K’L = KGL(CMPDL), 
and let bRR = bRR −{ύ}; otherwise, let 〈ύ, 
vL〉∈KGL(CMPDL), K’L = KGL(CMPDL) − 
{〈ύ, vL〉}, vR∈ bRR , bRR = bRR −{vR}, and 
let K’={〈vL, vR〉}. After the above 
process, | bRR | then becomes even. We 
then partition K’L into two subsets, K’L1 
and K’L2, such that |K’L1| = |
b
RR |/2. By 
pairing every vertex of V(K’L1) with one 
vertex in bRR , we construct a set K2 of 
| bRR | full-paired-edges. Let CMPD = K ∪ 
K1 ∪ K2 ∪ K’L2 ∪ K’ ∪ S. Then, CMPD is 
a (kL+(ιL+sL+ηR)/2, 1, 0)-matched- 
paired-dominating set of G. We can see 
that CMPD is a (|R|/2, 1, 0)-matched- 
paired-dominating set of G, and that 
mt(CMPD) = |R|. 
Case II-3: ιL = ηR. In this case, ιL = ηR 
< ηR+fR. Consider the following two 
subcases: 
Case II-3-1: ιL ≠ 0. Let RLV  = {u1, 
u2, ..., uιL}, and let RR = {v1, v2, ..., vιL}. 
By paring ui with vi for 1 ≤ i ≤ ιL, we 
obtain a set K of ιL full-paired-edges. Let 
CMPD = KGL(CMPDL) ∪SGL(CMPDL) ∪ 
K. Then, CMPD is a (kL+ιL, sL, 0)- 
matched-paired-dominating set of G 
with mt(CMPD) = |R|. Thus, CMPD is a 
maximum matched-paired-dominating 
set of G. 
Case II-3-2: ιL = 0. First consider 
that sL ≠ 0. Let 〈vL, vf〉 be a semi-paired- 
edge with restricted vertex vL in 
SGL(CMPDL), and let vR be a free vertex 
in VR. Let S = {〈vL, vR〉}. Then, CMPD = 
KGL(CMPDL)∪ (SGL(CMPDL)−{〈vL, vf〉}) 
∪ S is a (kL, sL, 0)-matched-paired- 
dominating set of G with mt(CMPD)=|R|. 
On the other hand, consider that sL = 0. 
If V(KGL(CMPDL)) is a dominating set 
of GL, i.e., fL = 0 and I(GL) = φ, then 
CMPD = KGL(CMPDL) is clearly a 
canonical maximum matched-paired- 
dominating set of G. Suppose that fL ≠ 0 
or I(GL) ≠ φ. Let vL and vR be free 
vertices in GL and GR, respectively. Let 
CMPD = KGL(CMPDL) ∪{〈vL, vR〉}. 
Then, CMPD is a (kL, 0, 1)-matched- 
paired-dominating set of G with 
mt(CMPD) = |R|. We can easily see that 
if V(KGL(CMPDL)) is not a dominating 
set of GL, then γrp(G, R) > kL. Thus, 
CMPD constructed in the subcase is a 
canonical maximum matched-paired- 
dominating set of G. 
It follows from the above 
constructions and arguments that for ιL < 
ηR + fR, our constructed set CMPD is a 
maximum matched-paired-dominating 
set of G. In addition, for cases of ιL < ηR 
− sL (Case II-2-2) and ιL = ηR = sL =0 
(subcase of Case II-3-2), we have 
showed the computed set CMPD to be 
canonical. The remnant is to prove that 
for other cases, the constructed 
maximum matched-paired-dominating 
set CMPD is canonical. In this project, 
we have proved the following lemmas. 
In the following lemmas, it is assumed 
that G = GL ⊗ GR is a cograph with 
restricted vertex set R, RL = R ∩ VL, RR = 
R ∩ VR and |RL| > |RR|. Let CMPDL be a 
canonical maximum (kL, sL, fL)-matched- 
? 12 ? 
????????? 
In this project, we first introduce 
two variations of paired-domination 
problem, namely, the matched- 
domination and restricted paired- 
domination problems. We then solve 
these two introduced problems on 
cographs in linear time. These two 
results have been written as two papers, 
and they were submitted to international 
SCI journals. The following list the 
submitted results: 
1. Ruo-Wei Hung, A linear-time 
algorithm for the restricted paired- 
domination problem in cographs, 
accepted by: International Journal 
of Innovative Computing, 
Information and Control 6/12 
(2010). (The accepted letter is 
shown in Appendix I) 
2. Ruo-Wei Hung, Linear-time 
algorithm for the matched- 
domination problem in cographs, 
minor revised in: International 
Journal of Computer Mathematics. 
(The minor revision letter is shown 
in Appendix II) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
? 14 ? 
Lett., vol.20, no.3, pp.341-344, 2007. 
[17] R.W. Hung, A linear-time algorithm for the terminal path cover problem in 
cographs, Proc. of the 23rd Workshop on Combinatorial Mathematics and 
Computation Theory, Changhwa, Taiwan, pp.62-75, 2006. (http://algo2006.csie. 
dyu.edu.tw/paper/1/B14.pdf) 
[18] F. Larrión, C.P. de Mello, A. Morgana, V. Neumann-Lara and M.A. Pizaña, The 
clique operator on cographs and serial graphs, Discrete Math., vol.282, no.1-3, 
pp.183-191, 2004. 
[19] H. Lerchs, On Cliques and Kernels, Department of Computer Science, 
University of Toronto, 1971. 
[20] K. Nakano, S. Olariu and A.Y. Zomaya, A time-optimal solution for the path 
cover problem on cographs, Theoret. Comput. Sci., vol.290, no.3, pp.1541-1556, 
2003. 
[21] S.D. Nikolopoulos and L. Palios, Efficient parallel recognition of cographs, 
Discrete Appl. Math., vol.150, no.1-3, pp.182-215, 2005. 
[22] H. Qiao, L. Kang, M. Cardei and D.Z. Du, Paired-domination of trees, J. Global 
Optim., vol.25, no.1, pp.43-54, 2003. 
[23] C. Retoré, Handsome proof-nets: perfect matchings and cographs, Theoret. 
Comput. Sci., vol.294, no.3, pp.473-488, 2003. 
[24] R. Shamir and R. Sharan, A fully dynamic algorithm for modular decomposition 
and recognition of cographs, Discrete Appl. Math., vol.136, no.2-3, pp.329-340, 
2004. 
[25] M.S. Yu and C.H. Yang, An O(n) time algorithm for maximum matching on 
cographs, Inform. Process. Lett., vol.47, no.2, pp.89-93, 1993. 
 
 ?????????????????? 
???????????????????????????????????
???????????????????????????????????
??????????????????????????????????
1. ????????????????????????????? 
? ???? 
? ??????????? 100???? 
? ???? 
? ?????? 
? ???? 
??? 
 
2. ???????????????????? 
??????? ??????? ???? ?? 
??????? ???? ?? 
??????? ???? ?? 
????? 100???? 
 
3. ?????????????????????????????????
?????????????????????????????????
500???? 
??????????????????????−??????(matched-domination 
problem)?????????(restricted paired-domination problem)??????????
???????????(cographs)??????? 
?????????????????????????????????????
????? 
1. Ruo-Wei Hung, A linear-time algorithm for the restricted paired- domination problem in 
cographs, accepted by: International Journal of Innovative Computing, Information and 
Control 6/12 (2010). (2009 Impact factor = 2.932) 
2. Ruo-Wei Hung, Linear-time algorithm for the matched- domination problem in cographs, 
minor revised in: International Journal of Computer Mathematics. (2009 Impact factor = 
0.478) 
????????????????????? 
 
√ 
√ 
International Journal of Innovative Computing, Information and Control
                                                                         ISSN 1349-4198 
     February 4, 2010 
Reference No.: IJICIC-09-0632 
Title: A Linear-Time Algorithm for the Restricted Pair-Domination Problem in 
Cographs
Author(s): Ruo-Wei Hung 
Dr. Ruo-Wei Hung 
Department of Computer Science and Information Engineering 
Chaoyang University of Technology 
Wufong, Taichung 41349, Taiwan 
E-mail: rwhung@cyut.edu.tw
Dear Dr. Ruo-Wei Hung, 
We have completed the review of your paper (Ruo-Wei Hung), "A Linear-Time Algorithm 
for the Restricted Pair-Domination Problem in Cographs'' (revised version), submitted 
to International Journal of Innovative Computing, Information and Control (IJICIC).
I am happy to inform you that your paper mentioned above has been accepted for 
publication in the IJICIC. We are planning tentatively to publish your paper in Vol.6, No.12, 
December 2010 of the IJICIC, if the final version of your paper (LaTex source files or Word 
file) is satisfactory and can reach us within 30 days from the date of this letter. 
Thank you for your interest and submitting your work to the IJICIC. Hope to work for you 
again in the near future. 
Sincerely yours, 
Yan Shi 
Professor, Ph.D., Executive Editor, IJICIC  
School of Industrial Engineering, Tokai University  
9-1-1, Toroku, Kumamoto 862-8652, Japan  
Tel & Fx: (+81 96) 3862666 
E-mail: office@ijicic.org
07-May-2010  
 
Dear Dr Hung,  
 
I have now heard from the Editor regarding your paper which was submitted to the International 
Journal of Computer Mathematics. Your manuscript entitled "A Linear-Time Algorithm for the Maximum 
Constrained Paired-Domination Problem in Cographs"  has been reviewed.  The reviewers' comments are 
included at the bottom of this letter.  
 
The reviews are in general favourable and suggest that, subject to minor revisions, your paper 
could be suitable for publication.  Please consider these suggestions carefully when revising your 
paper.  
 
When you revise your manuscript please highlight the changes you make in the manuscript by using 
the track changes mode in MS Word or by using coloured text. Please do not use bold.  
 
To submit the revision, click http://mc.manuscriptcentral.com/gcom?URL_MASK=KJJTPjDfSXSZS7B7549R  
 to directly go to the revision or  
log into http://mc.manuscriptcentral.com/gcom  and enter your Author Centre, where you will find 
your manuscript title listed under "Manuscripts with Decisions." Under "Actions," click on "Create 
a Revision." Your manuscript number has been appended to denote a revision. Please enter your 
responses to the comments made by the reviewer(s) in the space provided. You can use this space to 
document any changes you made to the original manuscript. Please be as specific as possible in your 
response to the reviewer(s).  
 
IMPORTANT:  Your original files are available to you when you upload your revised manuscript. 
 Please delete any redundant files before completing the submission.  
 
Because we are trying to facilitate timely peer review of manuscripts submitted to the 
International Journal of Computer Mathematics, your revised manuscript should be uploaded as soon 
as possible.  If it is not possible for you to submit your revision in a reasonable amount of time, 
we may have to consider your paper as a new submission.  
 
Once again, thank you for submitting your manuscript to the  International Journal of Computer 
Mathematics.  We look forward to receiving your revision.  
 
Yours sincerely,  
 
Prof. George Loizou  
Editor-in-Chief,  
International Journal of Computer Mathematics.  
ijcm@tandf.co.uk  
 
NOTE: Get a colleague with a very good command of the English language to edit the paper 
grammatically and syntactically; improve upon the notation.  
 
 
 
Referees' Comments to Author:  
 
Referee: 1  
Comments to the Author  
The proposed method and analysis is interesting and valuable. In addition, the paper is well 
organized and well written, i.e. it has a good readability of the proofs, so I recommend the 
journal to accept the manuscript for publication.  
I recommend only few comments as the attachment shows.  
 
 
Referee: 2  
Comments to the Author  
The paper proposes and solves a new problem of some interest in current research. The problem is 
the one written in the title - maximum constrained paired domination problem in cographs - in which 
we are given a cograph G=(V,E) and a subset R of V, and the goal is to find a matching M such that 
firstly, V(M) is a dominating set, and secondly, cardinality of $V(M)\cap R$ is maximized, and 
CYUT rwhung@cyut.edu.tw
International Journal of Computer Mathematics - Decision onManuscript 
ID GCOM-2009-0924-A
2010?5?7? ?? 
09:55:02
???: ijcm@tandf.co.uk
???: rwhung@cyut.edu.tw
???: onbehalfof+ijcm+tandf.co.uk@manuscriptcentral.com
Yours sincerely,  
 
Prof. George Loizou  
Editor-in-Chief,  
International Journal of Computer Mathematics.  
ijcm@tandf.co.uk  
 
NOTE: Get a colleague with a very good command of the English language to edit the paper 
grammatically and syntactically; improve upon the notation.  
 
 
 
Referees' Comments to Author:  
 
Referee: 1  
Comments to the Author  
The proposed method and analysis is interesting and valuable. In addition, the paper is well 
organized and well written, i.e. it has a good readability of the proofs, so I recommend the 
journal to accept the manuscript for publication.  
I recommend only few comments as the attachment shows.  
 
 
Referee: 2  
Comments to the Author  
The paper proposes and solves a new problem of some interest in current research. The problem is 
the one written in the title - maximum constrained paired domination problem in cographs - in which 
we are given a cograph G=(V,E) and a subset R of V, and the goal is to find a matching M such that 
firstly, V(M) is a dominating set, and secondly, cardinality of $V(M)\cap R$ is maximized, and 
thirdly, the cardinality of $\{uv:uv\in M, u,v\in V-R\}$ is minimized. (Cographs are a certain 
class of graph that can be built up from a single node by the operations of disjoint union and the 
complement of disjoint union.)  
 
The authors have lined up a number of related citations with cographs, and some other citations 
with paired-domination, which are listed in the Introduction. Although there is a large number of 
papers listed here, the argument for the importance of the proposed problem in the title is less 
than convincing. Anyway, it looks to me that this could be of some interest to other researchers 
working in this area.  
 
Next, the paper has certain shortcomings when it comes to the writing style, in two regards. First, 
the use of English, which at times is incorrect, and at other times, even a little confusing. By 
the way, in my opinion, this should not keep the paper from publishing, since it is a maths paper, 
and I have always come to understand what the authors meant, even in case of bad grammar. Second, 
the notation and terminology of the paper is outside of what I'm used to when I read other papers 
in this area. Here are my observations on the notation: 1. Often in this paper, sets are denoted by 
three or four capital letters, like MPD is a notation used for a maximum matched-paired dominating 
set, or CMPD is used for a canonical maximum matched-paired dominating set. This is very unusual, 
and I think sets should be denoted by one letter, with maybe upper or lower index, or maybe M(v), 
or something like that. But not three or four letters, which rather looks like an arithmetic 
expression. 2. It is very confusing that a paired-dominating set is a subset of V, but a matched-
paired-dominating set is a subset of E. I think it would be easy to come up with a new name for 
these new notions of matched-paired-dominating set, and canonical maximum matched-paired-dominating 
set, without having to line up six words next to each other. Anyway, if the authors want to stick 
with this notation and terminology, I'm not objecting. It just would make things a lot easier for 
the reader to come up with a more compact notation and terminology.  
 
As for the correctness of the result, I'm not a hundred percent sure. I have gone through most of 
the proof, and no mistake found yet. My overall impression was that the proof and the algorithm - 
although not elegant by any means - should probably be correct. I have to admit that reading the 
technical details of the paper was not very enjoyable, but still, the number of pages (6 pages of 
proof) is appropriate for the relative importance of the result.  
 
To conclude, I wish the authors could improve on the two issues I mentioned above (notation and 
terminology), and subject to that, I think the paper may be published.  
 
Editor's Recommendation:  
 
Editor  
Comments to the Author:  
(There are no comments)  
−2− 
?????? Lecture Notes in Computer Science?????? 
?????????????????? 4?(3? 23?~3? 26?)????
????????????????????????????????????
???????????????????????????????????
???????????????????????????????????
Software Engineering Processes and Applications(SEPA)????????????
??“Ruo-Wei Hung and Maw-Shang Chang, Certifying Algorithms for the Path Cover 
and Related Problems on Interval Graphs, Lecture Notes in Computer Science (LNCS), 
vol. 6017, 2010, pp. 314−323”???????????????????????
?????????? Keynote Speech ? Invited Talk??????????
Keynote Speech − Tharam S. Dillon, Web of Things as a Framework for Building 
Cyber-Physical Systems?Kenneth C.J. Tan, Opportunities in Bigger-Than-Begore- 
Scale Computing??????????????????????? software 
engineering? computer security??? session???????????????
???????????????????????????????????
?????????????????????????, ?????????
????????????????? sessions???????????????
?? 
 
?? ???? 
?? presentation??????????????????????????
???????????????????????????????????
−4− 
Springer, LNCS 6017) ???? 
 
Certifying Algorithms for the Path Cover and
Related Problems on Interval Graphs
Ruo-Wei Hung1, and Maw-Shang Chang2
1 Department of Computer Science and Information Engineering,
Chaoyang University of Technology,
Wufong, Taichung 413, Taiwan
rwhung@cyut.edu.tw
2 Department of Computer Science and Information Engineering,
National Chung Cheng University,
Ming-Hsiung, Chiayi 621, Taiwan
mschang@cs.ccu.edu.tw
Abstract. A certifying algorithm for a problem is an algorithm that
provides a certiﬁcate with each answer that it produces. The certiﬁcate
is a piece of evidence that proves the answer has no compromised by a bug
in the implementation. A Hamiltonian cycle in a graph is a simple cycle
in which each vertex of the graph appears exactly once. The Hamiltonian
cycle problem is to test whether a graph has a Hamiltonian cycle. A path
cover of a graph is a family of vertex-disjoint paths that covers all vertices
of the graph. The path cover problem is to ﬁnd a path cover of a graph
with minimum cardinality. The scattering number of a noncomplete con-
nected graph G = (V,E) is deﬁned by s(G) = max{ω(G−S)−|S| : S ⊆ V
and ω(G − S)  1}, in which ω(G − S) denotes the number of compo-
nents of the graph G−S. The scattering number problem is to determine
the scattering number of a graph. A recognition problem of graphs is to
decide whether a given input graph has a certain property. To the best
of our knowledge, most published certifying algorithms are to solve the
recognition problems for special classes of graphs. This paper presents
O(n)-time certifying algorithms for the above three problems, including
Hamiltonian cycle problem, path cover problem, and scattering number
problem, on interval graphs given a set of n intervals with endpoints
sorted. The certiﬁcates provided by our algorithms can be authenticated
in O(n) time.
Keywords: Certifying algorithm, path cover, Hamiltonian cycle, scat-
tering number, interval graph.
1 Introduction
The study of certifying algorithms is motivated by software engineering, soft-
ware reliability and the insight that software is often not bug-free. Although an
 Corresponding author.
D. Taniar et al. (Eds.): ICCSA 2010, Part II, LNCS 6017, pp. 314–323, 2010.
c© Springer-Verlag Berlin Heidelberg 2010
316 R.-W. Hung and M.-S. Chang
A Hamiltonian path in a graph is a simple path with the same property. The
Hamiltonian cycle (resp. path) problem involves testing whether or not a graph
contains a Hamiltonian cycle (resp. path). The Hamiltonian problems include
the Hamiltonian path and Hamiltonian cycle problems and have numerous ap-
plications in diﬀerent areas, including establishing transport routes, production
launching, the on-line optimization of ﬂexible manufacturing systems [2], pat-
tern recognition [19], etc. It is well known that the Hamiltonian problems are
NP-complete for general graphs [8]. A path cover of a graph G is a family of
vertex-disjoint paths that covers all vertices of G. The path cover problem is to
ﬁnd a path cover of a graph G with minimum cardinality, denoted by π(G). It
is evident that the path cover problem for general graphs is NP-complete since
ﬁnding a path cover, consisting of a single path, corresponds directly to the
Hamiltonian path problem. The path cover problem has many practical appli-
cations including code optimization [3], mapping parallel programs to parallel
architectures [17], program testing [16], etc. Let G = (V,E) be a noncomplete
connected graph. The scattering number of G was introduced by Jung in [12] and
is deﬁned by s(G) = max{ω(G−S)−|S| : S ⊆ V and ω(G−S)  1}, where G−S
denotes the subgraph of G induced by V − S and ω(G−S) denotes the number
of connected components of G − S. A set S ⊆ V with ω(G − S) − |S| = s(G)
and ω(G − S)  1 is called a scattering set of G. By convention, the scattering
number of a complete graph K = (V,E) is −|V | and V is the unique scattering
set. Note that if G is not connected then s(G)  ω(G). The scattering number
problem is to determine a scattering number of a graph. The scattering num-
ber of a graph is strongly related to hamiltonian properties of graphs. If G has
a Hamiltonian cycle, then s(G)  0; and if G has a Hamiltonian path, then
s(G)  1 [4,7]. On the other hand, π(G)  max{1, s(G)} holds for arbitrary
graph G by the pigeonhole principle, since each connected subgraph needs to be
covered by at least one path.
An interval family I is a collection of intervals on a real line. A graph G is an
interval graph if there exist an interval family I and a one-to-one mapping of the
vertices of G and the intervals in I such that two vertices in G are adjacent if and
only if their corresponding intervals in I intersect. We call I an interval model
of G. For an interval model I, we use G(I) to denote the interval graph for I.
Interval graphs have a variety of applications involving VLSI design, scheduling
[9], and genetics [20]. Kratsch et al. [14] gave a linear-time certifying recognition
algorithm for interval graphs.
Arikati and Rangan [1] presented an O(n+m)-time algorithm to solve the path
cover problem on interval graphs. Manacher et al. [15] gave an O(n log log n)-time
algorithm for the Hamiltonian cycle problem on a set of n endpoint-sorted inter-
vals. Chang et al. [5] proposed O(n)-time algorithms for both the Hamiltonian
cycle and path cover problems on interval graphs given a set of n endpoint-sorted
intervals. Unfortunately, their algorithms fail to provide supporting evidence for
their answers. In this paper, we will propose O(n)-time certifying algorithms for
the path cover and Hamiltonian cycle problems on interval graphs given a set of
n endpoint-sorted intervals. Further, we show that the above two algorithms can
318 R.-W. Hung and M.-S. Chang
i
1
i
2
i
3
i
4
i
5
i
6
i
7
i
8
i
9
i
10
i
11
i
12
Fig. 1. An interval model I of twelve endpoint-sorted intervals
the Hamiltonian path problem on interval graphs given a set of n endpoint-sorted
intervals. The two papers were published in the same volume of Information
Processing Letters. They used the same greedy approach independently. Assume
that the input graph is given by an interval model I that is a set of n endpoint-
sorted intervals labeled by 1, 2, . . . , n in increasing order of their right endpoints.
Notice that we do not distinguish an interval from its label. The left endpoint of
interval x is denoted by left(x) and the right endpoint by right(x). Interval x is
denoted by (left(x), right(x)). An interval x is said to contain another interval y
if every point of y falls within the interior of (left(x), right(x)). For convenience,
we need the following notation.
(1) For two distinct intervals x, y in I, x is smaller than y (or y is larger than
x), denoted by x < y, if right(y) is to the right of right(x), and y is to the right
of x if left(y) is to the right of right(x).
(2) s(I) denotes the interval in I with the leftmost right endpoint; that is,
s(I)  x for x ∈ I.
We ﬁrst introduce Procedure GP that is the key procedure used in the algo-
rithm in [1] for the path cover problem. Given an interval model I, Procedure
GP uses a greedy principle to obtain a path Z as follows. Initially, Z visits
s(I) only, i.e., Z = s(I). Repeatedly extend Z to visit the one with the leftmost
right endpoint among neighbors of end(Z) not visited by Z until all neighbors of
end(Z) are visited by Z. Then it outputs path Z and stops. For instance, given a
set of 12 endpoint-sorted intervals shown in Fig. 1, Procedure GP outputs path
Z = i1 → i2 → i3 → i4 → i6 → i5.
For interval model I, deﬁne a path cover PC(I) of G(I) recursively as follows.
If I = ∅, then PC(I) = ∅. Otherwise, let PC(I) = {Z}∪PC(I ′), where Z is the
path obtained from I by Procedure GP and I ′ = I −Z. For instance, PC(I) =
{Z1 = i1 → i2 → i3 → i4 → i6 → i5, Z2 = i7 → i8 → i9 → i10 → i12 → i11},
where I is the set of intervals shown in Fig. 1, Z1 and Z2 are the paths obtained
by Procedure GP from I and I − Z1, respectively.
Arikati and Rangan [1] proved by induction that PC(I) is an optimal path
cover of G(I). Chang et al. [5] showed that PC(I) can be computed in O(n)
time and O(n) space given a set of n endpoint-sorted intervals.
Our certifying algorithm for the path cover problem on interval graphs works
as follows. It computes PC(I) as both an optimal path cover of G(I) and a
certiﬁcate showing that PC(I) is indeed an optimal path cover of G(I). Note
that the length of PC(I) is O(n).
320 R.-W. Hung and M.-S. Chang
Corollary 1. Let Z be the path obtained by Procedure GP from interval model
I, C(Z) = {c1, c2, . . . , ch}, and let Z = Q1 → c1 → Q2 → c2 → · · · → Qh →
ch → Qh+1. Then, Q1, Q2, . . . , Qh+1, and I−Z are islands with respect to C(Z)
in G(I).
Suppose PC(I) = {Z1, Z2, . . . , Zq}, where q = |PC(I)|. Deﬁne C(I) =
∪1iqC(Zi). For example, C(I) = {i6, i12} for the interval model I shown
in Fig. 1, where PC(I) = {Z1 = i1 → i2 → i3 → i4 → i6 → i5, Z2 = i7 → i8 →
i9 → i10 → i12 → i11}, C(Z1) = {i6}, and C(Z2) = {i12}. By Corollary 1, we
have the following corollary:
Corollary 2. There are |PC(I)|+ |C(I)| connected components in G(I−C(I)).
By the above corollary and Proposition 1, we know that PC(I) is an optimal
path cover of G(I). Now we are ready to describe our authentication algorithm as
follows. Given PC(I), the algorithm ﬁrst checks whether PC(I) is a path cover
of G(I) and then computes C(I) to test whether G(I−C(I)) has |PC(I)|+|C(I)|
connected components. Whether PC(I) is a path cover of G(I) can be checked
in O(n) time. Given PC(I), C(I) can be computed in O(n) time. Given a sorted
interval model I and C(I), the number of connected components in G(I −C(I))
can be determined in O(n) time. Thus the running time of the authentication
algorithm is O(n) and we have the following theorem.
Theorem 2. There is an O(n)-time certifying algorithm for the path cover prob-
lem on interval graphs given sorted interval models. The optimality of the output
of this algorithm can be authenticated in O(n) time.
4 A Certifying Algorithm for the Hamiltonian Cycle
Problem on Interval Graphs
In this section, we present a certifying algorithm to solve the Hamiltonian cycle
problem on interval graphs. Given a sorted interval model, it runs in O(n) time.
It is assumed that a set I of n endpoint-sorted intervals is given and n > 2.
The algorithm ﬁrst computes path Z by calling Procedure GP. If I − Z = ∅ or
L(Z) = ∅, then G(I) has no Hamiltonian cycle. In this case, it outputs C(Z)
as a certiﬁcate. Clearly, C(Z) is of length O(n). The authentication algorithm
simply checks whether G(I−C(Z)) has more than |C(Z)| connected components.
If G(I − C(Z)) does have more than |C(Z)| connected components, then by
Proposition 2 G(I) does have no Hamiltonian cycle. Suppose I − Z = ∅ and
L(Z) = ∅. That is, G(I) has a Hamiltonian path Z with L(Z) = ∅. Then, we
grow two paths P1 and P2 from Z. Let Z = z1 → z2 → · · · → zn−1 → zn.
Initially, let P1 = z1 and P2 = z2. Then for i from 3 to n, we grow the two paths
as follows. Let P ∗ be the one that visits zi−1 and P ′ be the other path. If zi is
adjacent to end(P ′) then extend P ′ to visit zi; otherwise extend P ∗ to visit zi.
After all intervals are visited by either one of the two paths, let P ∗ be the one that
visits zn and P ′ be the other path. We can easily see that G(I) has a Hamiltonian
322 R.-W. Hung and M.-S. Chang
5 A Certifying Algorithm for the Scattering Number
Problem on Interval Graphs
Given a set I of n sorted intervals, we give an O(n)-time certifying algorithm to
compute the scattering number s(G(I)) and provide a certiﬁcate for this answer
as follows. By Theorem 1, if G(I) has a Hamiltonian cycle, then s(G(I)) 
0; and if G(I) has a Hamiltonian path, then s(G(I))  1. By Proposition 5,
π(G(I))  max{1, s(G(I))}. Our certifying algorithm for computing s(G(I))
is then sketched as follows. It ﬁrst calls the Hamiltonian cycle algorithm to
test whether G(I) has a Hamiltonian cycle. If it has a Hamiltonian cycle C,
then s(G(I)) = 0 and C is provided as a certiﬁcate. Otherwise, the algorithm
computes the minimum path cover PC(I) = {Z1, Z2, · · · , Zq} of G(I). If q = 1,
i.e., G(I) has a Hamiltonian path, then s(G(I)) = 1 and Z1 is provided as a
certiﬁcate. Otherwise, it computes C(I) = ∪1iqC(Zi) and ω(G(I) − C(I)).
It then outputs s(G(I)) = ω(G(I) − C(I)) − |C(I)| = |PC(I)| = π(G(I)), and
provides C(I) as a certiﬁcate. For example, given a set I of sorted intervals, as
shown in Fig. 1. The algorithm ﬁrst computes PC(I) = {Z1 = i1 → i2 → i3 →
i4 → i6 → i5, Z2 = i7 → i8 → i9 → i10 → i12 → i11}, C(Z1) = {i6}, and
C(Z2) = {i12}. Then, C(I) = C(Z1) ∪ C(Z2) = {i6, i12} and ω(G(I) − C(I)) =
|PC(I)| + |C(I)| = 2 + 2 = 4. The algorithm then outputs s(G(I)) = ω(G(I)−
C(I)) − |C(I)| = 2, and provides C(I) as a certiﬁcate. The correctness of the
above algorithm follows from Proposition 3, Corollary 2, and Theorem 1. By
Theorems 2 and 3, the above algorithm runs in O(n) time. It is easily seen that
the provided certiﬁcates can be authenticated in O(n) time. Thus the running
time of the authentication algorithm is O(n) and we conclude the following
theorem.
Theorem 4. There is an O(n)-time certifying algorithm for the scattering num-
ber problem on interval graphs given sorted interval models. The length of the
certificate provided by the algorithm is O(n) and the authentication algorithm
runs in O(n) time.
References
1. Arikati, S.R., Rangan, C.: Pandu: Linear Algorithm for Optimal Path Cover Prob-
lem on Interval Graphs. Inform. Process. Lett. 35, 149–153 (1990)
2. Ascheuer, N.: Hamiltonian Path Problems in the On-Line Optimization of Flexi-
ble Manufacturing Systems. Technique Report TR 96-3, Konrad-Zuse-Zentrum fu¨r
Informationstechnik, Berlin (1996)
3. Boesch, F.T., Gimpel, J.F.: Covering the Points a Digraph with Point-Disjoint
Paths and its Application to Code Optimization. J. ACM 24, 192–198 (1977)
4. Bondy, J.A., Murty, U.S.R.: Graph Theory with Applications, New York (1976)
5. Chang, M.S., Peng, S.L., Liaw, J.L.: Deferred-Query: an Eﬃcient Approach for
Some Problems on Interval Graphs. Networks 34, 1–10 (1999)
6. Chu, F.P.M.: A Simple Linear Time Certifying LBFS-Based Algorithm for Recog-
nizing Trivially Perfect Graphs and their Complements. Inform. Process. Lett. 107,
7–12 (2008)
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計畫已發表兩篇國際期刊論文，其資訊及研究成果國際影響力，如下所示: 
1. Ruo-Wei Hung, A linear-time algorithm for the restricted paired-
domination problem in cographs, accepted by: International Journal of 
Innovative Computing, Information and Control 6/12 (2010). (2009 Impact 
factor = 2.932) 
2. Ruo-Wei Hung, Linear-time algorithm for the matched- domination 
problem in cographs, minor revised in: International Journal of Computer 
Mathematics. (2009 Impact factor = 0.478) 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
本計畫中，我們首先提出配對支配問題的兩個變形-相配支配問題(matched-domination 
problem)及限定配對支配問題(restricted paired-domination problem)。然後，我們提
出線性時間的演算法來解決補圖(cographs)上的此二問題。本計畫之執行成果已整理成兩
篇期刊論文，並已有不錯的成果。其中一篇論文已被 IJICIC 期刊所接受(Impact Factor = 
2.932)，而另一篇論文也在 IJCM 期刊作小修改中(minor revision, Impact Factor = 
0.478)。(請參見研究成果報告) 
  綜觀上述，本計畫之執行成果已達成主要之預期目標，而且對於未來解決相關問題亦有
所助益。 
