3/23 
間。所需時間在 5 分鐘至 1 小時不等[1, 2, 4]。 
本研究基於上述暫存材質之缺失，提出一種
新的暫存材質演算法。我們所提的演算法具有下
列優點。第一、單張輸入：僅需使用解析度小的
單張材質作為輸入，無須使用真實視訊片段為輸
入來源。第二、適量記憶體：僅需使用中等規格
的記憶體，例如 256 MB，即可完成材質合成的
計算。第三、無限解析度：所合成的暫存材質，
其解析度可以依照使用者之需求來決定，具被合
成無限解析度的效果。第四、無限迴圈連續播
放：經過巧妙的重排順序後，所合成的暫存材質
能維持動態的連續性(continuity)，可以連續無限
時間的播放，又不致於讓觀者有重複的感覺。第
五、快速合成時間：我們的演算法可以在 2~8 分
鐘內合成 288*288 解析度大小的暫存材質影片。
以相同解析度而言，我們演算法所需時間少於其
他演算法。 
本文介紹新的暫存材質演算法。計分五為
節，其架構如下：第二節探討相關工作；第三節
詳述所提出新的暫存材質演算法；第四節展現並
分析實驗結果；第五節提出結論與未來工作。 
 
二、相關工作 
暫存材質可看成是二維材質在時間維度方面
的擴充。各位置的顏色數值除了隨空間位置不同
而不同外，也隨時間的進行而改變。因此暫存材
質可以被視為是一種三維材質。因暫存材質在時
間方面的色值變化與在空間方面的變化相類似，
有些二維材質合成演算法可將本身二維模型
(model)直接擴充為三維模型[1, 2, 4]。 
Wei and Levoy [4]取出輸入材質中各像素
(Pixel)的周圍環境(Neighborhood)來建立材質模型
(Model)。在決定輸出材質中各像素值時，即取出
該位置相對應範圍的周圍環境像素在輸入材質模
型中比對(Matching)。找出輸入材質中周圍環境
最相似者，將該像素值指定給輸出材質中該位置
的像素。在合成暫存材質時，將原本二維平面的
周圍環境加入第三維時間，變成三維立體的周圍
環境。以相同的演算法逐點(Pixel-wise)逐面(Slice 
by Slice)的合成輸出材質。此方法能符合區域的
一致性(Local Statistics)，但卻無法兼顧到整體的
動態變化 (Global Structure)[2]。我們可以使用
Multi-resolution 及 TSVQ (Tree-Structured Vector 
Quantization)的方法來加速，仍需大量時間才能
合成一段暫存材質。以 32 張 128*128 大小的輸
入錄影片段為例，合成 64 張同大小的輸出片段
約需 1875 秒的處理時間及 1265 秒的合成時間。
Wei 等人所提的方法並不支援不重複的播放無限
序列。 
Bar-Joseph et al. [1] 將材質影像 (Texture 
Image)看成是具有接近穩定變化(Stationary)的二
維訊號(Signal)。以 Statistical Learning 的方法將
輸 入 訊 號 建 立 成 階 層 式 的 Multi-resolution 
Analysis (MRA) Tree，並以此為材質模型。以
Statistical Merging 的方式改變該 MRA Tree，再
轉換為新的材質訊號。以此方法所產生的輸出材
質和原輸入材質相似但不相同。[1]也將其材質模
型由二維擴充為三維。如此，其演算法能分析整
個輸入的錄影片段，籍以合成另一段輸出材質。
但此演算法需大量的記憶體，以 32 張 256*256
的輸入片段為例，需 1GB 的 RAM 來處理。其產
生 32 張 256*256 的輸出片段約需 10 分鐘的時
間，比[4]稍快。然而，每次只能產生與輸入材質
相同解析度、相同長度的片段，且兩次所合成的
片段間並不具有連續性(continuity)。最後，此法
也不支援不重複的播放無限序列。 
Kwatra et al. [2] 以區塊位置搜尋 (Patch 
Placement)配合圖像切割(Graph Cut)的方法來合
成二維材質，並將方法延伸至合成暫存材質。在
5/23 
三、新的有效的暫存材質合成演算法 
我們觀察到暫存材質會呈現出暫時的規律性
(Temporal Regularity)，其中各單張材質間呈現相
似卻又不同的畫面。我們認為對材質合成演算法
予以設計、修正或許足以僅使用一張輸入材質就
可以合成具有暫時規律性之材質，如此可以解決
暫存材質之來源取得不易與需較大儲存空間的問
題。我們認為每張真實片段中的材質應可在多張
經過合成後所產生的材質中找到極為相似者，如
圖 1 所示。因此，如果我們能合成有限張數的材
質，再經過巧妙的重排，重新加以調整其播放順
序，使得相鄰兩張播放畫面間具有平滑、連續的
視覺感受，則或許能合成具一定視覺效果、呈現
類似存於自然界的暫時性材質。 
 
… … 
無限多張
合成圖像
一張材質 
材質合成 
真實拍攝的暫存
材質錄影片段 
兩兩相似者
… … 
 
圖 1、暫存材質示意圖。模擬真實的暫存材質可
以利用材質合成的方法，並藉巧妙的重排其播放
順序來達成具一定視覺效果、呈現類似存於自然
界的暫時性材質 
 
我們提出一個新的暫存材質合成演算法。演
算法的概觀如圖 2 所示，計分成四個步驟，分別
為 1. 系 列 材 質 合 成 （ Synthesizing Texture 
Sequence ）、 2. 圖像重新排列（ Re-Ordering 
Frame Sequence ） 、 3. 計 算 播 放 機 率
（Determining Display Probability）、4.柔化播放
（Fading Display）。我們首先合成系列材質，接
著我們篩選這些系列材質，並將之重新排列，以
組成原始的播放順序片段。接著我們計算播放機
率，以便能依此機率來即時決定播放的順序，來
產生不限播放時間片段的暫存材質。最後，我們
在播放時採用柔化處理，提升播放的品質。以下
我們分別詳細說明此四個步驟的作法。 
 
候選材質合成 
候選材質萃取 
系列材質
合成 
圖像重新排列 
計算播放機率 
柔化播放 
 
圖 2、新的暫存材質合成演算法之概觀 
 
3.1 系列材質合成 
系列材質合成(Synthesizing Texture Sequence)
的目的在於產生 N 張大解析度的材質，且各材質
間之變化在一定的控制範圍內。為達此目的，我
們必須透過「候選材質合成」(Candidate Texture 
Synthesis)與「候選材質萃取」(Candidate Texture 
Extraction)來完成。前者是利用輸入材質做合成
處理，以便先產生 M 張大解析度材質；後者則
是利用給定的條件從 M 張合成材質中挑選出 N
張 （N<M）。以下我們分別敘述此兩項處理的
流程。 
 
3.1.1 候選材質合成(Candidate Texture Synthesis) 
候選材質合成的輸入為小解析度的「輸入材
質」（Source Texture）（Iinput）。我們在此可以
假設「輸入材質」之解析度為 IH*IV。，此處的
下標代表水平的（Horizontal）像素點與垂直的
(Vertical)掃瞄線。經過「候選材質合成演算法」
(Candidate Texture Synthesis Algorithm) 的處理
後，輸出 M 張大解析度的合成材質系列圖像
(Synthesized Texture Sequence) {Ti, i=0~M-1}。以
下，除非特別註明，否則我們將「合成材質系列
圖像」簡稱為「系列圖像」。在特別的情況下若
M=1，則我們可將此張系列圖像簡略的稱為「輸
7/23 
界，造成在相鄰的兩區塊間，邊界產生肉眼可視
的不一致、不連貫的情形。由於我們考慮{TiB0, 
TiB1, …, TiBK-1}區塊對的影響，此是屬於同一個
圖像，但在不同的空間位置，故我們將之歸類為
「空間距離」影響因素。 
其二、「時間距離」(Time Distance)因素，
也就是每個圖像{T0, T1, .., Ti-1}的影響因素。目前
我們正要合成 Ti 圖像內的第 K+1 個區塊。因
此，系列圖像中目前已有 i 個圖像。更進一步言
之，這 i 個圖像中，每個在 BK位置的區塊所成的
集合為{T0BK, T1BK, …, Ti-1BK}。這些在不同圖
像，但在同一位置的區塊，都會影響第 i+1 個圖
像(Ti)中 BK位置的區塊，也就是 TiBK。因此，也
將會影響我們如何選取『最匹配吻合』的材質區
塊 BBM 的結果。若能充分考量每個先前產生的圖
像{T0, T1, .., Ti-1}的影響，則我們可以確保區塊
TiBK 的圖像品質，使得該區塊與同位置、已產生
的區塊{ T0BK, T1BK, .., Ti-1BK}間的視覺差異是在
容許的範圍內。據此，我們可以避免在 Ti 圖像
內，尋找到不適合的區塊，造成在播出時，BK 這
個區塊位置上的材質形成視覺差異過大的跳躍現
象(Flicking)，導致播放產生忽隱忽現、不連續的
感覺。不同於「空間距離」因素，我們考慮每個
圖像之同一位置區塊{ T0BK, T1BK, .., Ti-1BK}對目
前合成的區塊 TiBK的影響，故考慮著眼於時間軸
上，我們將此類影響歸類為「時間距離」影響因
素。 
我們說明產生「合成材質系列圖像」中，如
何尋找『最匹配吻合』的材質區塊數學表示方
法。我們先將符號再次說明如下：假設目前我們
處理系列圖像 Ti。 
1. TiBK 為目前我們想合成的區塊，此區塊
位於 Ti圖像內； 
2. {TiBJ, J=0~(K-1)}代表在第 Ti 張的系列
圖像已被合成完畢的區塊所組合之集
合，此集合共有 K 個元素； 
3. {BJ, J=0~(IH-W-L)*(IV-W-L)-1} 為在輸入
材質內，與 BK 具有相同形狀與大小的
任意區塊所形成之集合，此集合共有(IH-
W-L)*(IV-W-L)個元素； 
4. {TCBK, C=0~(i-1)}為系列圖像{ T0, T1, .., 
Ti-1}內同屬於 BK 位置（相同形狀與大
小）所形成之集合，此集合共有 i 個元
素； 
5. EK 為某個區塊 BK 的邊界重疊部分，為
一個 L 型的區塊；若重疊的寬度為 L 像
素點，重疊區域大小共有(W+L)*L+W＊
L 個像素點； 
6. {EJ, J=0~(IH-W-L)*(IV-W-L)-1}為輸入材
質內，與 EK具有相同形狀與大小區塊所
形成之集合，此集合共有(IH-W-L)*(IV-
W-L)個元素； 
7. Sξ 為空間距離常數， Tξ 為時間距離常
數。此兩個給定的常數代表我們對空間
與時間距離可以接受的程度。 
 
接著，我們分別定義 SPADIS()為一個「空
間距離函數(Space Distance Function)；TIMDIS()
為 一 個 「 時 間 距 離 函 數 」 (Time Distance 
Function)。以下我們分別詳細介紹此兩函數： 
1. 空間距離函數，顧名思義係用來計算「空間
距離」數值。此函數之輸入為單一個區塊 BX
與一個空間集合區塊{BY}（由空間區塊所形
成之集合）。此函數之輸出為區塊 BX與空間
集合區塊{BY}之空間距離，故此函數可以表
示為 SPADIS(BX, {BY})。我們可以根據我們
定義的空間距離函數與我們給定的空間距離
常數 Sξ ，來建構一個擁有 H 個元素(Element)
9/23 
函數逐一產生各張系列圖像，即為 Ti，i=1~(M-
1)。在合成系列圖像 Ti 的過程中，我們必須做搜
尋、比對來決定候選區塊(Candidates)。當搜尋、
比對時，我們除了考慮要避免輸出材質中相鄰兩
區塊間產生肉眼可見的不一致情形外，也同時須
確保選取區塊的特徵與 Ti-1 的相同位置區塊相彷
彿。如此，所產生的 M 張系列圖像方具有一定
程度的連續性。 
1. 以「區塊材質合成演算法」產生 T0。設定 i 
= 1。 
2. 由輸入材質中隨機選一 W*W 的區塊 B0，
滿足 Not ( B0 in {TCB0, C = 0~(i-1)} )，裱糊
至 Ti 的左下角，即為 TiB0 位置。設定 K = 
1。 
3. 找 出 集 合 {SPMA} = 
}}){,({ SJK EESPADIS ξ≤ ，即重疊邊緣滿
足空間匹配吻合條件者。設此集合元素個
數為 G。 
4. 若 G = 0 ， 則 找 出 一 BS-min ， 滿 足
})}]{,([{min JKS EESPADISMinimumB =−
，即重疊邊緣與 EK 最接近者。設定
{SPMA} = {BS-min}。 
5. 找 出 集 合 {TIMA} = 
}}{,}){,({ 1 SPMABBBTTIMDIS JTJKi ∈≤− ξ
。設此集合元素個數為 H。 
6. 若 H = 0 ， 則 找 出 一 BT-min ， 滿 足
})}]{,([{ 1min SPMABTTIMDISMinimumB KiT −− =
，即時間距離與 Ti-1BK 最接近者。設定
{TIMA} = {BT-min}。 
7. 從{TIMA}中隨機選一區塊為 BK，裱糊至
TiBK的位置。設定 K = K + 1。 
8. 重複步驟 3 ~ 7，直到完成 Ti。 
9. 設定 i = i + 1。 
10. 重複步驟 3 ~ 9，直到完成「合成材質系列
圖像」。 
圖 5、候選材質合成演算法 
 
在第四節執行結果的例子中，我們設定區塊
大小為 W*W=16*16、24*24 或 32*32，設定重疊
邊緣大小 EK為 8，可以有較好的合成結果。「空
間相似度」常數 ε 越小則在輸出材質中區塊與區
塊間的重疊邊緣較吻合，但此也使得每次比對重
疊邊緣所得的候選區塊較少，會降低輸出材質的
隨機性(Stochastic)，在選擇與前一張輸出材質同
位置區塊距離較近的區塊時，也較少有選擇的機
會。ε 太大時，會使得輸出材質產生明顯的接縫
(Seam)。參照[7]的說法，一般可設 ε 為 0.2，視
輸入材質的性質，我們也可以設 0.1 或 0.3 以產
生較佳的結果。此參數可由使用者控制。在我們
第四節執行結果的例子中，皆設ε 為 0.1。 
「時間相似度」常數δ 決定前後連續兩張
輸出材質間的相似程度，但會受到「空間相似
度」常數ε 的影響。原合成方法是由下而上、由
左而右、比對邊緣的方式逐塊貼上合成的。在左
下方受到邊緣匹配條件影響較小，越往右上方影
響越大。太小的δ 會使得前後連續兩張輸出材質
的左下方太相似，而右上方差異較大。如圖 6 所
示，(a)為前一張輸出材質，(b)為目前合成的材
質，(b)中的區塊 2’在合成時只需考慮和 1’的重
疊邊緣匹配，故可能有較多的候選者可選出與(a)
的區塊 2 較相似的區塊。而圖 6(b)的區塊 P’則受
到其重疊邊緣影響較大，可能找到的候選者較
少，較不易找到與(a)中區塊 P 相似者。因此太小
的δ 容易造成播放時左下方變動小，右上方變動
大的不均衡現象。而δ 太大，則與隨機合成各張
輸出材質的情形一樣。我們實驗結果在ε 為 0.1
下，δ 設為 0.3 一般表現較佳。此參數可由使用
者控制。在第四節執行結果中的例子皆設 δ 為
0.3。 
 
 
11/23 
到的系列圖像，其連續的圖像間比未經篩選的系
列圖像具有較小的視覺差異程度。我們使用圖 8
材質，經過「候選材質合成演算法」的合成，產
生 20 張解析度 288*288 的系列圖像。合成時我
們設定之區塊大小為 24*24，邊緣重疊為 8 個像
素，空間相似度 ε 為 0.1，時間相似度 δ 為 0.3。
原系列圖像中各連續兩圖像的平均 RMS 值為
71.41，標準差為 1.90。經「候選材質萃取演算
法」篩選出 10 張圖像，其平均 RMS 值降為
68.83，標準差降為 0.81。一般來說，兩圖像的
RMS 值越大表示兩者的差異性越大，詳見本文第
四節中的說明。 
 
1. 設定 I = 0。 
2. 以 TI為起點，記錄並標記 TI，使之不
致再次被計算時間距離，並設定 AC-
MIN-TMDS(I) = 0。 
3. 設定 D = I，A = 0，以 A 來記錄目前連
接順序中的圖像張數。 
4. 找出與 TD具有最小時間距離且未標記
的圖像，設為 TQ，其距離為 MIN-
TMDSD-Q，記錄並標記 TQ。 
5. 將 MIN-TMDSD-Q累加至 AC-MIN-
TMDS(I)。 
6. 設定 A = A + 1，D = Q。 
7. 重複步驟 4，5 及 6，直到 A = N。 
8. 記錄目前所連接的一組圖像序列，設為
MIN-TS(I)。 
9. 設定 I = I + 1。 
10. 重複步驟 2 ~ 9，直到 I = M。 
11. 在 AC-MIN-TMDS(Y)，Y=0 ~ M-1，找
出具有最小時間距離總和的一組圖像序
列 MIN-TS(Y)。輸出為{SI, I=0~N-1}。 
圖 7、候選材質萃取演算法 
 
圖 9 顯示使用原始合成順序與經使用篩選後
之順序，各連續兩畫面間 RMS 值的變化情形。
在圖中，縱軸刻度表示 RMS 數值，橫軸刻度表
示圖像順序。由圖可以看出原始的合成順序，其
RMS 的差異性頗高，上下起伏震動在 68～75
間。經篩選後，起伏震動變的趨緩，僅在 67～71
之間。因此，「候選材質萃取演算法」已有效的
降低了連續畫面間的視覺差異。值得一提的是，
雖然我們已經由系列材質合成，產生具有較小差
異的系列圖像，但我們仍需經過圖像重新排列，
來產生不限播出時間、不重複播出的暫存材質。 
 
原始合成與萃取篩選之RMS比較圖
62
64
66
68
70
72
74
76
1 3 5 7 9 11 13 15 17 19
圖像編號
RM
S數
值
原始合成時RMS
萃取篩選後RMS
 
圖 9、原始合成的 20 張圖像及萃取篩選後的 10
張圖像的 RMS 數值變化比較圖。因原始
合成有 20 張，萃取篩選後只有 10 張，故
紫色折線較短 
 
 
3.2. 圖像重新排列(Re-Ordering Frames) 
圖像重新排列的目的在於將經「候選材質萃
取演算法」所篩選出來的 N 張圖像加以重新排
列。排列後的系列圖像{FI, I=0~N-1}具有連續、
低視覺突兀的效果，據此我們可以將{FI}當成初
期的播放順序。當圖像重新排列完成後，我們可
以刻意的將{FI}的排列順序迴圈化，也就是播完
{FI}的最後一張後，繼續播{FI}的第一張圖像，
則播放即為循環播放。我們因此可以達到無限時
間的播出，但播出時也因此循環，導致圖像被重
複播出。 
 
 
13/23 
Fk, …。在適當條件並滿足固定的機率條件下，
播放完 Fk 圖像後可跳回 Fj 圖像，然後，再依序
由 Fj＋1 往後播放。由圖可知我們必須選取適當的
機率密度函數(Probability Density Function)，以便
能據此計算機率值。此機率密度函數不能為常數
型態，因為如此將會產生固定的機率使的圖像的
跳躍具有一定的規則性。此會造成類似重複性播
放之現象，是我們所要極力避免的。 
 
F0, F1, F2, … , Fj, Fj+1, … , Fk, … 
 
圖 11、系列圖像與連續的初始播放順序，F0, 
F1, .., Fj, Fj+1, …, Fk, …。在適當條件與機
率下，播放順序可以做跳躍式的改變 
 
 3.3.1. 選取機率密度函數 
如上所述，選取適當的機率密度函數有其重
要性。Schodl 提出之機率密度函數 (Probability 
Density Function, PDF)，如式(6)所示： 
)]/(exp[ ,1 ijjiij DDP α+−∝  (6) 
其中，Pij為由圖像 Fi跳至圖像 Fj的機率，Di+1,j則
為畫面 Fi+1 及畫面 Fj 之間的時間距離， ijD 為各
圖像間兩兩時間距離的平均，α 為常數，其值介
於 0 與 1 之間。 
我們認為 Schodl 的場景來源為真實場景所
拍攝的圖像。對這些圖像而言，若 Fi+1 與 Fj 相
似，則原順序 Fi連接 Fi+1可改為 Fi連接回 Fj。因
此，若滿足機率密度函數，則由畫面 Fi 跳回畫面
Fj 應屬必然，且是應該遵循的法則。然而，我們
所產生的系列圖像基本上與 Schodl 不同。我們是
以單張圖像為輸入材質，並藉由一系列的演算法
來合成多張的圖像。雖然我們盡可能的選取適當
的圖像，但是我們的圖像 Fi 與 Fi+1 不一定具有如
真實場景般如此好的連續性。基於此，我們認為
自然指數型態的機率密度函數相當適合，但是我
們必須改變 Schodl 機率密度的轉變點。我們所提
出的機率密度函數如式(7)所示： 
)]/(exp[ ijijij DDP α−∝     (7) 
我們的機率密度函數代表一旦滿足機率值時，圖
像之跳躍由 Fi到 Fj，其滿足的機率條件是 Fi與 Fj
相似，而非如 Schodl 之 Fi+1與 Fj相似的條件。上
述雖然僅是機率條件的改變，但是會造成轉變點
的不同，對播放品質有深遠的影響。式(7)中較小
的 α 值會提升越相近者的機率，播放時連續畫面
間變化較小，但重複性也會提高；較大的 α 值會
使得各機率值較相近，播放時連續畫面間變化較
大，較具隨機性。這部分可以參數控制，為簡化
起見，我們直接設 α 為一常數，在本文例子中 α
值皆設為 0.75。 
 
3.3.2. 修正機率密度函數 
雖然我們提出上述的機率密度函數，但是有
時轉變點間的圖像數過少，以致時常發生這兩張
圖像會被來回重複震盪播放的情形。這將造成視
覺上可察覺的重複性播放。為避免這種情形，我
們必須修正機率密度函數。我們在機率數值中加
強圖像 Fi跳躍至圖像 Fi+1 的機率。令由圖像 Fi躍
至圖像 Fi＋1 的原始機率為 1, +iiP ，則我們將該原
始機率乘上一個加權值 Wi 來達成機率數值增加
的目標。修正的機率 1, +′iiP 與原始的機率 1, +iiP 之
關係如式(8)所示。 
∑
+≠
+
++ +=′
1
,1,
1,
1, *
*
ij
jiiii
iii
ii PPW
PW
P                            (8) 
顯然的，Wi 之數值越大，則 1, +′iiP 的值就越接近
1。我們將新的機率矩陣數值中各列的機率值予
以正規化，使得各列的總和∑ =
j
jiP 1' , 。 
修改過的機率值正好可以配合圖像重新排列
所得的播放順序。在重新排列時，我們以具有最
15/23 
型經過合成、萃取、重排而得。圖中的橫軸刻度
代表播放的流水號，從 1 至 54；縱軸刻度則表示
原始圖像編號。由圖我們可以看出：我們提出的
加權函數確實會使得播放到圖像編號能符合原始
圖像編號的順序，也能適當的轉換回圖像編號較
小者。此外，在播出時，我們提出的加權函數使
得很少有兩張圖像重複來回震盪播放的情形。最
後，我們的播放過程非常平順，能將各連續兩圖
像的差異 RMS 值，維持在一定範圍內。亦即播
放時的畫面平穩、順暢。舉例而言，在播放第 15
個流水號時，我們使用原始 4 號圖像，然後其播
放順序為{5, 6, 7, 8, 9}。此時播放流水號到達 20
號。然後在要播 21 個流水號時，產生轉變點，
選取 5 號圖像，接著播放的順序為{6, 7, 8, 9}。
使用我們提出的加權函數有可能幾乎依照原始順
序播出。例如，在播放第 37 個流水號時，我們
使用原始 1 號圖像，然後其播放順序為{2, 3, 4, 5, 
6, 7, 8, 9}。如此，我們能將播放無限延伸其時
間，又能維持暫存材質的半規律特性，無法由肉
眼觀察出有固定、重複變化的動作出現。 
 
3.4 柔化播放（Fading Display） 
經過「候選材質合成演算法」、「候選材質
萃取演算法」、「圖像重新排列演算法」、「計
算播放機率」等處理後，我們已可以產生不限張
數的播放畫面，且播放時又能維持暫存材質的半
規律特性，不致產生重複的感覺。然而，我們發
現在播放時，仍然時有兩連續畫面差異過大的情
況出現。因此，我們參照 Schodl 方法的精神，提
出我們柔化(Cross-Fading)處理的技巧[11]，希望
能降低播放時畫面間的差異性。 
我們的處理方式是將目前播放順序的前、後
各 Γ 張畫面使用高斯核心(Gaussian Kernel)來加
以柔化處理。使用 2Γ+1 張畫面之原因乃是希望
高斯核心是以對稱的型態處理目前播放圖像的前
Γ 張與後 Γ 張圖像，因此，總共有 2Γ＋1 張圖
像。假設目前要播放的為第 I 張圖像，ZI(x, y)為
圖像內的像素點(x, y)之顏色數值。顯然的，ZI-
1(x, y)為已播放完的圖像，ZI＋1(x, y)為下一個即將
播放的圖像。我們可以將柔化的處理以式(10)、
(11)表示： 
),(*)(),( yxZjGKyxR jI
j
I +
Γ
Γ−=
∑=  (10) 
1)()2/()( 2 =−∝ ∑Γ
Γ−=j
jGKjEXPjGK σ  (11) 
其中，RI(x, y)為經高斯核心柔化處理後的圖像，
)( jGK 為高斯核心，因為不希望有數值的放大或
縮小，故必須在式(10)內將高斯核心作正規化處
理，使得其數值的加總為 1。Γ 的選取對產生的
結果會有影響。太大的 Γ 值，會造成前後多張圖
像對目前播出的圖像有實質的影響，故目前播出
的圖像在經過處理後，可能會有柔化，但也會變
的模糊不清。經過實驗，發現選取 Γ＝1 時，可
以有較佳的效果。  
如圖 13 的播放順序中，原始未經柔化處理
的平均 RMS 值為 69.97；經柔化處理後，平均
RMS 值大幅降為 31.76、降幅為 54.6％。RMS 數
值的大幅降低代表我們能有效的減少連續兩播放
畫面間的差異，但仍能維持某些變化程度，展現
暫存材質連續動態的視覺效果。 
 
四、執行結果 
本研究所使用的實驗平台為 AMD k7 
850MHz 處理器，配備 256 MB RAM，程式撰寫
工具為 Visual C++。我們以 RMS (Root Mean 
Square)來表示畫面差異(Difference)的情形。RMS
定義如式(12)所示，其中 Gi(x,y)代表一圖像中的
像素值。 
RMS= ( )2
1 1
),(),(1 yxGyxG
ColRow ji
Row
y
Col
x
−× ∑∑= =
17/23 
 
 
(0) 
 
(1) 
 
(2)(3) (3) (4)(0) (5) (6) 
 
(7)(7) 
 
(8)(5) (9)(9) 
 
(10) 
 
(11)(6) 
 
(12)(2) (13)(4) (14)(1) (15)(8) (16) 
 
(17) 
 
(18) (19) 
圖 15、經由「候選材質合成演算法」合成的 20 張暫存材質圖像，為圖中黑色編號者；與經由「候選
材質萃取演算法」所篩選出的 10 張順序，為圖中紅色編號者 
 
表 2、合成 20 張水波材質圖像後計算出各圖像間的 RMS 數值 (Ti-1 VS Ti) 
Frame No. 0 VS 0 0 VS 1 1 VS 2 2 VS 3 3 VS 4 
RMS Error 0.0 31.74 29.41 29.26 28.81 
Frame No. 4 VS 5 5 VS 6 6 VS 7 7 VS 8 8 VS 9 
RMS Error 29.79 29.73 29.47 28.47 28.78 
Frame No. 9 VS 10 10 VS 11 11VS 12 12 VS 13 13 VS 14 
RMS Error 30.79 29.19 27.97 28.68 28.12 
Frame No. 14 VS 15 15 VS 16 16 VS 17 17 VS 18 18 VS 19 
RMS Error 28.08 29.17 29.73 29.56 29.85 
 
表 3、由原始 20 張合成圖像(圖 15 中黑色編號者)，經「候選材質萃取演算法」篩選出 10 張(圖 15 中紅
色編號者)作為水波暫存材質之基底圖像 (Si VS Sj) 
Frame No. 4 VS 4 4 VS 14 14 VS 12 12 VS 2 2 VS 13 
RMS Error 0.0 27.87 27.44 27.60 27.86 
Frame No. 13 VS 8 8 VS 11 11 VS 7 7 VS 15 15 VS 9 
RMS Error 28.48 28.13 28.40 28.15 28.79 
 
 
(14) 
 
(12) 
 
(2) (13) (8) (11) (4) 
 
(7) 
 
(15) (9) 
圖 17、經由「圖像重新排列演算法」將 10 張圖像重新排列。括號內顯示經「候選材質合成演算法」
所合成原始 20 張圖像的編號 
 
原始合成與萃取篩選之RMS比較圖
24
26
28
30
32
34
1 3 5 7 9 11 13 15 17 19圖像編號
RS
M
 數
值
原始合成時 RMS
萃取篩選後 RMS
 
圖 16、原始合成的 20 張圖像及萃取篩選後的 10
張圖像的 RMS 數值變化比較圖。因原始
合成有 20 張，萃取篩選後只有 10 張，
故紫色折線較短 
圖 16 展示原始合成的 20 張圖像及萃取篩選
後的 10 張圖像的 RMS 數值變化比較圖。橫軸刻
度表示畫面順序，縱軸刻度表示 RMS 值。原始
合成的 20 張圖像中，各連續兩圖像的 RMS 值平
均為 29.29，而萃取篩選後的 10 張圖像間的 RMS
平均值則降為 28.08。我們可以看出經過萃取篩
選後，RMS 值已大幅降低。 
 
 
 
19/23 
表 5、截取 15 張播放畫面的連續兩畫面柔化前與柔化後 RMS 值 
圖像編號 (6) VS (4) (4) VS (5) (5) VS (7) (7) VS (8) (8) VS (9) 
柔化前 RMS 28.42 28.36 29.13 28.31 28.68 
柔化後 RMS 9.75 9.98 13.01 12.73 13.29 
圖像編號 (9) VS (0) (0) VS (1) (1) VS (2) (2) VS (3) (3) VS (4) 
柔化前 RMS 27.44 26.85 27.82 27.46 27.87 
柔化後 RMS 12.73 12.93 12.48 12.09 12.60 
圖像編號 (4) VS (5) (5) VS (6) (6) VS (7) (7) VS (0) (0) VS (1) 
柔化前 RMS 28.36 28.72 28.24 28.57 26.85 
柔化後 RMS 12.47 12.61 12.77 13.06 12.70 
 
0
5
10
15
20
25
30
35
4 5 7 8 9 0 1 2 3 4 5 6 7 0 1
播放序號
RM
S數
值 原始播放序列RMS
高斯核心柔化後RMS
 
(a) 
0
5
10
15
20
25
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
畫面編號
RM
S數
值
真實片段
合成播放序列
(b) 
圖 20、(a)15 張圖像在柔化前與柔化後的 RMS 數值比較；(b) 真實場景拍攝的片段與暫存材質合成的片
段之 RMS 數值比較。暫存材質合成的片段非常類似於真實場景拍攝的片段 
像非常有可能不是時間距離最近者。此導致重新
排列後 RMS 的數值有略微上昇的趨勢。雖然如
此，為了配合播放機率的計算，來產生不限時間
播放的系列圖像片段，重新排列的過程是必要
的，而 RMS 的數值略微的上昇，可能是我們必
須付出但是卻是值得之代價。因為，我們經由重
新排列後，可以有效的計算播放機率，使得播放
動作不致於出現連續兩張畫面來回震動跳躍的情
形，也不致造成連續播放但卻發生可以察覺的重
複圖像。 
重新排列播放順序(Re-Ordering Display Sequence)
一旦產生，我們將圖像依照順序重新給予編號
（此例僅 10 張圖像，故編號為 0 至 9）。接著，
我們可以計算機率數值，並根據數值做無時間限
制的連續播放。圖 19 顯示我們截取播放過程中
的 15 張連續圖像。此 15 張畫面經重新編號後分
別為 {4, 5, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1}。 
表 5 顯示此 15 張各連續兩播放畫面的 RMS
值。我們同時列出未經與經柔化(Cross-Fading)處
理過的 RMS 值。圖 20(a)顯示此 15 張圖像柔化
前、後的 RMS 數值。其中藍色折線表示播放片
段中連續兩張原始單張畫面的差異 RMS 值，紫
色折線顯示使用柔化處理後之結果。由圖 20(a)
並參照表 5 我們可以看出：使用柔化處理後，
RMS 值已由 26～29 降低成為 10～13 之間，平均
約降低了 50％。此數值證明柔化處理已有效的降
低連續播放圖像間的差異度。 
    我們也將真實場景拍攝的片段與暫存材質合成
的片段做比較 (兩者都具有 32 張圖像，編號
0~31)，其結果如圖 20(b)所示。圖中，橫軸刻度
表示畫面編號，縱軸刻度表示 RMS 值。真實場
景拍攝的片段其 RMS 平均為 13.91、標準差為
3 . 3 9；暫存材質合成的片段其 R M S 平均為
12.50、標準差為 0.70。此數值顯示：暫存材質合
成的片段具有較小的 RMS 數值與標準差。此都
是拜下列處理所賜：候選材質合成，候選材質萃
取、圖像重新排列、計算播放機率與柔化處理 
 
21/23 
 
表 6、暫存材質合成時 RMS 值變化之情形 
材質種類 種類 候選材質合成 萃取篩選 重新排列 初始播放 柔化處理 
平均 71.41 69.83 69.33 69.97 31.76 (a) 波浪(Billow) 標準差 1.90 0.81 1.33 1.36 1.10 
平均 36.21 34.42 34.59 35.10 14.19 (b)泳池(Pool) 標準差 0.63 1.05 1.17 1.02 1.96 
平均 30.20 26.74 27.22 28.00 12.53 (c) 雲層(Cloud) 標準差 1.82 1.05 1.78 2.08 1.98 
平均 45.58 42.45 43.07 43.56 18.67 (d) 漣漪(Ripple) 標準差 1.35 0.67 1.19 1.13 2.67 
 
表 7、合成暫存材質所需處理時間 
材質種類 材質合成 萃取篩選 重排+計算機率＋柔化 合計 
(a) 波浪(Billow) 82 秒 13 秒 4 秒 99 秒 
(c) 雲層(Cloud) 439 秒 13 秒 4 秒 456 秒 
(d) 漣漪(Ripple) 67 秒 13 秒 4 秒 84 秒 
(b) 泳池(Pool) 89 秒 52 秒 14 秒 155 秒 
 
材質，足見我們發展的演算法系統具備相當大的
彈性。 
 
這 4 個材質模型的輸入材質解析度分別為
(a)192*192 ， (b) 與 (c) 為 128*128 ， (d) 為
200*200。合成材質系列圖像解析度分別為(a)、
(c)與(d)都是 288*288，(b)為 256*256。系列圖像
之張數中，(a)、(c)與(d)合成 20 張、萃取篩選 10
張；(b)合成 40 張、萃取篩選 20 張。 
表 6 說明執行過程中 RMS 值的變化情形。
我們將平均值與標準差一併列出，以供比較。由
表 6 我們可以看出候選材質合成後，就平均數值
而言，候選材質兩相鄰圖像間的平均 RMS 數值
最大。在萃取篩選出部分的圖像後，此時 RMS
數值都明顯下降 2～4 左右。圖像重新排列後，
RMS 數值有些微的上升，但幅度非常小，大概都
在 1.0 數值以內。擷取若干張圖像做初始播放
時，RMS 數值又有些微上升，但是一旦加入柔化
處理，RMS 數值都大幅下降原來的 50％以上。
在播放階段我們並不強制每個重播點一定要選最
好的，因為我們要避免暫存材質的重複動作頻率
太高。但我們在初始播放順序中仍適時增加連續
順序的機率值，以避免忽前忽後震動式的跳動播
出。在柔化後，平均 RMS 數值為原先數值的 50
％以下，此表示我們所提出的這些演算法除能有
效的降低 RMS 數值外，演算法也能產生一定的
差異程度，除使得播出具有連續動態的視覺效
果，也維持了連續兩畫面間的視覺連續性。 
表 7 說明合成暫存材質所需處理時間。合成
時，我們所用的參數如下：重疊邊緣 L 為 8，空
間相似度ε為 0.1，時間相似度δ為 0.3。(a)、(c)與
(d)都使用 24*24 解析度的區塊大小；(b)則使用
32*32 解析度的區塊大小。由表 7 可以看出：候
選材質合成步驟所需要的時間最長，事實上，此
也是合成暫存材質的瓶頸所在。其次的處理時間
部分耗費在萃取篩選。重排、計算機率與柔化處
理僅需最少的處理時間。 
此表顯示：雲層模型材質的合成時間長於其
餘 3 個模型。究其原因在於此材質本身色值分佈
較為平均，在空間軸處理重疊邊緣匹配時找到的
候選區塊也相對的較多，而在時間軸上，每張輸
出材質中與之匹配的的候選區塊也相對的較多，
