2According to different QP values,
deblocking filter in the proposed scheme chooses
the corresponding modes. When the video
sequence has high bit rate (low QP), the proposed
scheme keeps the same video quality with the
original H.264 standard, and it has lower
computation complexity than previous. In low bit
rate (high QP), the proposed scheme diagnoses
the motion between frames to change the
intensity of deblocking filter. By using the
proposed method, the filter could improve the
video quality by dynamically reducing the
blocking effect in real-time. Furthermore, we
implement H.264 decoder with the DSP
development board. The decoder works well and
accurately on the DSP development board. As
experimental results shown, the proposed scheme
can save 14.33% average computation in high bit
rate situation and improve the video quality in
low bit rate situation.
2.Dynamic Power Consumption Control Using
Cross-Layer Techniques for Wireless H.264
Video
The purpose of this paper is considers the
high compression efficiency H.264 video that
transmit in wireless network .By Cross Layer
technology transport immediately parameters that
have detected immediately from wireless channel
to application layer in order to dynamic adaptive
the parameters of encoder and the power of
transmission in physical layer for reducing
energy consumption. According to purpose
method of this paper, the average energy
consumption reduces 18.6961%.
4客觀的視覺品質測試，如 PSNR 統計，
與原始影像相比有一定的客觀品質差
異。
回顧去方塊效應相關研究，首先
我們介紹現有 H.264 去方塊效應濾波
器，主要是採行[4]一文所提出之架
構，此架構是迴圈內(in-loop)處理流
程，在每一巨方塊(macroblock)完成
解碼後，會進入去方塊效應濾波器，
消除巨方塊中的方塊效應，處理後的
巨方塊會儲存在參考畫面暫存器
(Reference Frame Buffer)，供接下
來的巨方塊與畫面進行參考解碼。
整個 H.264 去方塊效應濾波器，
對於整張畫面，巨方塊處理順序為由
上而下，由左至右。先處理巨方塊內
各方塊間之垂直邊緣(vertical
edge)，再處理方塊間之水平邊緣
(horizontal edge)。
整個 H.264 去方塊效應濾波器處
理流程可歸納為三個處理步驟：
圖一： 去方塊校濾波器處理步驟
(a) Boundary Strength
首先判斷巨方塊中之方塊邊緣
(edge)兩邊的各像素所在位置，來定
義邊界強度(Boundary Strength,
BS)，依照 BS 值分配不同程度濾波範
圍。
(b) Edge Condition
接著判斷巨方塊中之方塊邊緣
(edge)兩邊的各像素值關係，由此這
三項判斷式來決定濾波與否，當三項
判斷式皆符合，則進入濾波處理流程。
p0-q0 (1)
p1-q0 (2)
q1-q0 (3)






其中與為濾波臨界值。
與定義是依照不同的QP量化參數
(Quantization Parameter)計算出不
同的濾波臨界值，但在 ITU-T
Recommendation H.264 規範文件中，
此部份為了避免增加計算複雜度，所
以採行內建查表的方式[1]。
(c) Pixel Filtering
若上述步驟(a)與步驟(b)是成
立，則濾波依照 BS 進行不同程度的濾
波，BS=4 濾波程度最強，BS=3,2,1 為
一般濾波程度，當 BS=0 則不濾波(No
Filtering)。
圖二： 去方塊校濾波器處理範圍
BS=4 濾波範圍在 p0~p3 與
q0~q3，BS=3,2,1 濾波範圍在 p0~p2 與
q0~q2，濾波器依照與之值來調整
相鄰兩像素之值。當 BS=4，隨著 p0 與
p2，q0 與 q2，p0 與 p0 三個相差絕對
值來調整濾波強度。
目前解碼器之去方塊效應濾波器
(Deblocking Filter)相關研究
[4]-[11]，主要應用方式主要分為迴
圈內(in-loop) [4]-[11]和後處理
(post-processing)兩種。
迴圈內方式主要為在解碼流程中
將已解碼之方塊暫存並進行去方塊效
6會進行(1)(2)(3)三個判斷式。舉例來
說，以一般的 H.264 baseline 視訊解
碼，若，則系統進入邊界強度(BS)的
判別，會有兩種情形：
(i) 當 BS=0 時，不濾波。
(ii) 當 BS>0 時，會進入判斷式(1)，
查表得知 0 [1]，判斷式成為
p0-q0 0 ，此時不論 p0 與 q0 之間的
差異量大或小，濾波器都不處理。
QP=0~15，系統皆進行邊界強度
(BS)判斷與數值判別，這樣的處理流
程耗費計算量，也增加資料在暫存器
間搬移的工作量。由於巨方塊會進入
濾波器判斷流程，此部份會佔用系統
計算量，所以我們提出以 QP 來作為臨
界值，當 15QP ，經過相關簡化判斷
式後，關閉去方塊效應濾波器處理流
程；反之，則進入去方塊效應處理流
程。
圖四： Bypass Mode
2. Enhanced Mode
QP 越大時，視訊位元率越低，不
過隨之而來的是，過低的位元率無法
提供解碼器完整資訊，以進行準確的
動態補償，方塊效應會較其他低 QP 值
來得明顯，尤其當視訊為高動態畫面
時，畫面的方塊效應隨著畫面動態量
而提高。
由於 I-frame 本身由於只經 DCT
轉換而沒做動作補償，在 QP 越大，低
位元率情況下，I-frame 量化程度比
P-frame 來得大，所以會有很大的方塊
效應，I-frame 之後的 P-frame 由於進
行動態補償參考 I-frame，方塊效應會
繼續蔓延。
藉由 PSNR 數值與 M量測[14]可
觀察到，隨著 QP 越大，視訊中每一個
GOP 的 I-frame 之 PSNR 會稍微降低，
且 M相關指數升高，顯示 I-frame 在
QP 較大時，客觀視訊品質會降低之
外，且方塊效應較為明顯。
因此，當 36QP 時，我們提出
藉由統計尚未進入濾波器的畫面與位
於參考畫面暫存器的前一張畫面，進
行畫面之間動態量變化之統計，藉此
來觀察畫面動態量並調整濾波程度，
達成畫面動態適應性方塊濾波器，提
供不同動態量之視訊有著不同的濾波
效果。
圖五： 視訊之畫面順序
假設目前進行濾波處理之
I-frame 為畫面編號為 i，在參考畫面
暫存器(Reference Frame Buffer)存
有 i前面兩張畫面 i-1 與 i-2，當處理
到 i畫面的巨方塊 n時，則濾波器進
行：
8處理時間仍與 H.264 原始方法相近，
並未大量增加處理時間，這樣的架構
對於解碼器造成大幅延遲。此外，在
相近的 PSNR 客觀視覺品質下，由 M值
我們可觀察到，Enhanced Mode 的確能
降低方塊效應，而且並沒有對系統整
體處理所需時間有造成大幅度的增加
表 III
QP=44，各視訊解碼時間與 PSNR 比較，
與 M值比較
我們亦進行視覺品質之人眼觀
測，受測人數共計 16 人，觀測距離為
75cm，實驗結果如下：
圖六： 視覺品質之人眼觀測
五、 結論
本論文針對 H.264 去方塊效應濾
波器之計算量與視覺品質進行改良，
分為高位元率視訊計算量降低與低位
元率視訊之視覺品質提昇，透過實驗
數據可觀察到我們所提出的改良演算
法，以 QP=12 為例，對於 H.264 解碼
器整體計算量最大可節省 15.85%，而
在低位元率視訊視覺品質亦有改善，
並未大幅增加解碼計算量。
參考文獻
[1] ITU-T, “Advanced video coding for 
generic audiovisual services,”
ITU-T Recommendation H.264,
March 2005.
[2] Iain E.G. Richardson, “H.264 and 
MPEG-4 Video Compression -
Video Coding for Next-generation
Multimedia”, Wiley, 2003.
[3] R.C. Gonzalez and R.E. Woods,
“Digital Image Processing,” 
Addison Wesley, 2nd, 2002.
[4] Peter List, Anthony Joch, Jani
Lainema, Gisle Bjøntegaard, and
Marta Karczewicz, “Adaptive 
Deblocking Filter,” IEEE
Transactions on Circuits and
Systems for Video Technology, vol.
13, no. 7, pp. 614-619, July 2003.
[5] S.C. Tai, Y.R. Chen, C.Y. Chen,
and Y.H. Chen, “Low complexity 
deblocking method for DCT coded
video signals,” IEE Proceedings of
Vision, Image and Signal
Processing, IEE, vol. 153, no. 1,
pp.46-56, February 2006.
[6] Sheng-Yu Shih, and Youn-Long Lin,
“A High Performance Deblocking 
Filter for H.264 Advanced
Coding,” Department of Computer 
Science, National Tsing Hua
University, Hsinchu, Taiwan, 300,
R.O.C., June 2005
[7] Mustafa Parlak, and Ilker
10
2.利用跨層技術於 H.264 無線視訊之動態功率控制
沈岱範 曾令江
國立雲林科技大學電機工程所
摘要
無線網路的傳輸效率遠不如有線網路的傳輸效率。多媒體由於資料量較一般
的文件資料量還大，為節省傳輸頻寬，因此在傳輸時皆會先進行壓縮，但在傳輸
視訊時仍會消耗較多的電池電量。
因此，本論文即是考量高壓縮效率的 H.264 視訊於無線網路上的傳輸研究，
並利用即時從無線網路偵測的通道狀況參數，利用跨層（Cross Layer）技術，
將該參數送至應用層來進行即時調整編碼參數，進而達到能依據無線通道的狀況
及節省能量的條件下動態調整編碼方式，當以本論文提出的臨界值為調整方式的
依據，其移動端能量消耗與 IntelR PRO/Wireless 2200BG 固定功率模式下，平
均降低 18.6961%。
關鍵字：H.264、Cross Layer、無線視訊、動態功率控制
I. 緒論
由於多媒體視訊的資料量會隨視
訊的品質而增加的趨勢，當視訊品質
越好的視訊，相對具有較多的資料
量，並且由於無線網路的頻寬有限，
因此在無線網路上改善傳輸多媒體資
料的效率，不外是增加無線網路的頻
寬及將在無線網路上傳輸的多媒體資
料量降低[1]，但是無線網路的頻寬為
稀有的資源，因此增加無線網路的頻
寬以增加多媒體資料的傳輸效率於實
際上實屬不可能，因此目前對於多媒
體於無線網路上的傳輸效率的改善，
主要在傳輸前將多媒體資料進行壓縮
以降低其資料量，以降低其傳輸時頻
寬的需求。
在本論中，視訊壓縮是使用
H.264[2]-[4]的壓縮標準，在無線網
路傳輸模擬，則是使用 Network
Simulator(NS 2)[5]進行網路模擬。
另一方面，如果要以手持式設備
進行無線視訊的傳輸，必定會受限於
電池的容量而造成多媒體視訊的傳輸
量的限制。
因此，除了在以視訊壓縮技術將
視訊資料量降低外，也必須藉由其他
的方式來將低傳輸的視訊時所消耗的
電池能量。目前在降低傳輸視訊的能
量方面主要分為三種方式：（1）在軟
體方面， [6]-[8] 藉由考慮 BER 及編
碼的方式以改善能量消耗、[9] 藉由
12





N
P
SNR
M
rM log10 （4）
由（1）與（2）可得：
22
104 10)(
rtrt
SNR
B
t hhGG
NLtd
P
M

 （5）
由（3）與（4）可得：
22
104 10)(
rtrt
SNR
M
t
hhGG
NLtd
P
B

 （6）
假設 NLtdtD  )()( 4 ，因此（5）與（6）
可分別化簡為：
22
1010)(
rtrt
SNR
B
t
hhGG
tD
P
M

 （7）
22
1010)(
rtrt
SNR
M
t
hhGG
tD
P
B

 （8）
當
)7(
)8( 可得：
10
10
10
22
10
22
10
10
10
10
10)(
10)(
MB
M
B
M
B
SNRSNR
SNR
SNR
rtrt
SNR
rtrt
SNR
B
t
M
t
hhGG
tD
hhGG
tD
P
P 





(9)
1010
MB SNRSNR
B
t
M
t PP

 （10）
當假定公式(10)為可逆、 WP Bt 1 的
前提下，由（10）可知 MtP 僅與
MB SNRSNR  有關。
III. 視訊品質與電池能量消耗關
係分析
欲以攜帶型設備傳送多媒體資
料，由於多媒體資料受視訊品質的影
響，當接收端要求視訊品質越高時，
其相對的多媒體資料量也越高（即傳
輸的總位元數也越高），因此若以固定
的發射功率來傳送多媒體資料，則當
視訊品質要求越高時，由於其相對具
有越多的位元數，因此傳送時所消耗
的能量也越多，當視訊品質要求較低
時，由於其所需位元數較少，因此傳
送時所需的能量較少。
無線通道一般會受到雜訊的干
擾，因此無線電波在傳輸時會遭受到
雜訊的干擾而造成傳輸的位元發生錯
誤的情況。在這種情況下，一般【1】
可藉由調整發射功率來改善位元發生
錯誤的數量，因此可以提升接收視訊
的品質，但藉由提升發射功率以增加
視訊品質，會造成能量消耗的增加、
【2】傳送端編碼時以較小的 QP 值來
編碼，以得到擁有較多位元數的視
訊，以增加視訊品質，但同樣由於位
元數的提升，因而造成傳輸能量的增
加。
而以 Foreman、Container 及
Stefan 視訊在不同 BSNR 下的 BPSNR 的
關係可以得知，當 10BSNR 時，其基
地台的視訊品質（ BPSNR ）接近移動端
編碼後的視訊品質，當 0BSNR 時，
由於接收到的訊號強度為零，因此基
地台的視訊品質（ BPSNR ）幾乎為零，
當 BSNR 增加時，相對的 BPSNR 也會增
加。
IV. 視訊之 BSNR 、位元數與傳輸視訊
時電池能量消耗的關係
在這節將分別探討三種視訊
（Foreman、Container、Stefan）當
改變 QP 值(總位元數改變)時，其能量
增加量，以及當改變 BSNR （ MtP ）時能
量的增加量。
下面分別以數學是來直接推導視
訊當【1】總位元數改變、【2】 MtP 改
變時的能量消耗：
【1】改變總位元數（調整 QP 值）所
需能量： M
t
new P
BW
b  （ newb 為調整 QP 後
14
MPt 位元數
9BSNR 增加總
位元數
降低
MPt
156652.0~571724.80
9BSNR 增加
MPt
降低總
位元數
571744.80 增加總
位元數
降低
MPt
VIII. 移動端電池能量消耗比較
傳輸能量消耗的計算方式是 QP從 0開
始，間隔 2至 50，其能量消耗分別為
BSNR 從 1至 10 的傳輸能量消耗的總
和平均，調整方式分別為僅調整視訊
總位元數、僅調整 BSNR 與 Proposed，
其傳輸能量消耗與 IntelR
PRO/Wireless 2200BG無線網卡比較的
降低量計算方式如下：
傳輸能量消耗的總和平均
=



10
1
-
10
1
B
B
SNR
SNR 固定功率之能量消耗
耗動態功率調整之能量消固定功率之能量消耗
%。
IX. 結論
當以 IntelR PRO/Wireless
2200BG 無線網卡傳輸視訊時的能量消
耗為基準，當僅調整視訊總位元數時
來調整基地台接收的視訊品質，其移
動端能量消耗平均降低 13.5329%，若
僅以調整 BSNR （ M
tP ）來調整基地台接
收的視訊品質，其移動端能量消耗平
均降低 15.2755%，而當以臨界值為調
整方式的依據，其移動端能量消耗平
均降低 18.6961%。另外，動作較多的
視訊，若以此方式其能量相對降低較
多。
傳送能量消耗降低量比較表
Foreman (%) Container
(%)
Stefan (%) Average (%)
調整視訊總位元數
（QP0~QP50）
13.4844 13.4853 13.6291 13.5329
調整 BSNR ( MPt )
(QP0~QP50)
14.3761 13.7520 17.6985 15.2755
Proposed
(QP0~QP50)
18.3659 16.7478 20.9746 18.6961
X. 參考文獻
[1] Matthew S. Gast,“802.11 Wireless
Networks: The Definitive Guide, 2e,” 
O’REILLY, 2005.
[2] Thomas Wiegand, Gary J. Sullivan,
Gisle Bjontegaard, and Ajay Luthra,
“Overview of the H.264 / AVC Video 
Coding
Standard“, TRANSACTIONS ON 
CIRCUITS AND SYSTEMS FOR
VIDEO TECHNOLOGY, IEEE, JULY
2003.
[3] Thomas Stockhammer, Miska M.
Hannuksela, and Thomas Wiegand,
“H.264/AVC in Wireless 
Environments”, TRANSACTIONS ON 
CIRCUITS AND SYSTEMS FOR
表 3 與 IntelR PRO/Wireless 2200BG 傳送能量消耗降低量比較表
16
1 
出國報告（出國類別：國際會議） 
 
 
2 
The Tenth (2008) IASTED International 
Conference on  
Signal and Image Processing (SIP)   
 
 
 
3 
服務機關：國立雲林科技大學電機系 
姓名職稱：沈岱範 副教授 
派赴國家：美國 夏威夷 Big Island Kona City 
報告日期：97/8/21 
出國時間：97/8/17~97/8/23 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
心得: 
一、新的科技技術不斷推陳出新， 與國際先進學者交流不僅可以獲得先進觀念 
     技術 且台灣國際知名度, 國力宣揚及參與國際活動有不可輕忽的附帶價值。 
二、夏威夷以觀光立州，除觀光與珍珠港軍事基地外， 無其他產業， 因此對觀光資源的維護不
遺餘力，包括禁止農漁等生產事業。其收結果是班班客滿不斷湧入的國內外遊客及帶來的滾
滾財源。 
    台灣風景實不亞於夏威夷， 東部海岸及三千公尺以上的秀麗百岳高山更是 
    特色。 國人不應妄自菲薄，更不應竭澤而魚， 而應以恢復如夏威夷般的陽光 
空氣及水為目標. 還給地球及後世子孫一個乾淨的台灣，並以此為基礎 全力發 
展觀光。使觀光成為工業之外的重要收入。 
 
建議事項」 
一、因來自台灣的學者人數眾多 形成一股不可忽視的力量。 若能建立一個機制 讓將參加同一會
議的專家學者在會前能互相聯繫， 相信能更節省旅行成本及促進互相認識與合作。 
二、跨領域的交流能激發更大的創意與合作 國內研討會可學習 IASTED 方式，多領域之研討會
同時同地舉辦以促進交流，也可分攤費用降低成本。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
⎪⎩
⎪⎨
⎧
≤≠+
>≠−
=
.                                   
  0,  ,2 mod C       1   
,0  ,2 mod       1
i
otherwiseC
CandnifC
CandnCifC
C
i
iji
ijii
e
i
 
iC is the quantized DCT coefficients, is the bit to be 
embedded (0 or 1).  
jn
 
Extracting process: =  mod 2. jn
e
iC
Note that OE technique is irreversible because plus or 
minus one if .  
ji nC ≠2 mod 
 
(2) Proposed Reversible 2C1B 
 
Tian [12] proposed reversible data embedding technique 
in pixel domain, where one bit is embedded in two 
neighboring pixels (2P1B).  Since most image/video 
coding is in transform domain, we modify the 2P1B and 
propose the 2C1B for transformed domain, where one bit 
is embedded into two coefficients. Note that pixel value is 
non-negative while coefficient values can be either 
negative and non-negative:  
1. Embedding Process: 
Inputs: (C1, C2, b) Where C1 and C2 are the two 
coefficients to host the guest bit b(0 or 1). 
Outputs: (C1 ' , C2 ' ) the embedded coefficients 
Step1：Calculate average L and difference D： 
⎥⎦
⎥⎢⎣
⎢ +=
2
)21( CCL
，  21 CCD −=
⎣ ⎦‧  represents the truncated value. 
Step 2：Expand D and insert the guest bit b.  bDD +×= 2'
Step 3：Modifying the two coefficients 
⎥⎦
⎥⎢⎣
⎢ ++=
2
)1('1
'DLC
,  
⎥⎦
⎥⎢⎣
⎢−=
2
2
'
' DLC
 
The modified coefficients are encoded and transmitted.  
Extracting Process：  
Inputs: (C1 ' , C2 ' ) the embedded coefficients 
Outputs: (C1, C2,b) 
Step1: Calculates  the average of and  'L '1C
 and ： '2C 'D
⎥⎦
⎥⎢⎣
⎢ +=
2
)21( ''' CCL  and  
''' 21 CCD −=
Step2：Extract the guest bit b.  b=LSB( ) 'D
Step3：Recover C1 and C2 
Calculate ⎥⎦
⎥⎢⎣
⎢=
2
'DD  and then  
⎥⎦
⎥⎢⎣
⎢ ++=
2
)1(1 ' DLC ， ⎥⎦
⎥⎢⎣
⎢−=
2
2 ' DLC
 
(3) The reversible 3C2B [17] 
The next logical step after 2C1B is 3C2B, which increases 
embedding capacity from 1/2 to 2/3. 
Embedding process： 
Inputs: (C1, C2, C3, b1, b2) be the three coefficients to 
host two guest bits b1 and b2. 
Outputs: (C1^,C2,C3^) the three embedded coefficients. 
Step1: Calculate the Differences with C2 as the center. 
D1=|C1| - |C2|;     D2= |C3| -|C2|  
Step2: Let b3=sign(C1), b4=sign(C3), b5=sign(D1), 
b6=sign(D2),where sign(x)=1 if x 0 and sign(x)=0, 
if x < 0.  (no need to embed sign of C2 ) 
≥
Divide (b1~b6) into 2 groups, (b3,b4,b5) (or any three 
bits) into the 3 LSB bits in D1^ and   Embed (b6, b1, 
b2) into the 3 LSB bits in D2^ : D1^=8×|D1| + 4×b3+2×b4+b5 
D2^=8×|D2| + 4×b6+2×b1+b2  
Step3: Modifying C1 and C3 (C1^, C2, C3^) 
C1^=C2-D1^ and  C3^=C2-D2^ 
(C1^, C2, C3^) are encoded and transmitted 
accordingly.  
 
Extracting process： 
The extracting process is the reverse of embedding 
process 
Inputs: (C1^, C2, C3^) received coefficients. 
Outputs: (C1, C2, C3, b1, b2)  
Step1: Obtain D1^ and D2^： 
      D1^=C2-C1^ and  D2^=C2-C3^ 
Step2: Extract the 2 guest bits and 4 sign bits. 
(b6,b1,b2) = (LSB_2(D2^), LSB_1 (D2^), LSB_0 
(D2^)) 
(b3,b4,b5) = (LSB_2(D1^),  LSB_1 (D1^),LSB_0 
(D1^)) 
Step3: Recover D1 and D2 
D1 = sign(b5) ⎥⎦
⎥⎢⎣
⎢
8
^1D ; D2 = sign(b6) ⎥⎦
⎥⎢⎣
⎢
8
^2D  
Where sign(b) is positive if b=1 and is negative if b=0. 
Step4: Recover |C1|, |C3| 
|C1| = |C2|+ D1, |C3|=|C2|+D2 
Step5: Recover C1 and C3 
C1=sign(b3)|C1| , C3=sign(b4)|C3|  
(C2 same as input) 
 
Example: Let three coefficients  (C1,C2,C3)=(-5,10,29), 
and 2 guest bits to be embedded are (b1,b2) =(0,1) 
Embedding Process: 
Step 1: Difference of absolute coefficients 
D1=|C1| - |C2|=|-5|- |10|=-5; D2= |C3| -|C2|=|29|-|10|=19 
Step2 : (b3,b4,b5,b6)=(0101) 
D1^=8×|D1| + 4×b3+2×b4+b5=42 
D2^=8×|D2| + 4×b6+2×b1+b2=157 
(Both D1^ and D2^ should be positive) 
Step 3: C1^ = 10 - 42 = -32; C3^ = 10 – 157 = -147 
Output (C1^,C2, C3^)=(-32,10,-147) 
 
Extracting Process: 
Step1: D1^ = 10 - (-32) = 42;   D2^ = 10 – (-147) = 157 
Step2: Extract 2 guest bits and 4 sign bits from D1^ & D2.  
(b6,b1,b2) = (LSB_2(D2^), LSB_1 (D2^), LSB_0 (D2^)), 
(b3,b4,b5) = (LSB_2(D1^),  LSB_1 (D1^),LSB_0 (D1^)) 
we have (b1,b2) = (01) and (b3,b4,b5,b6)=(0101)  
 
Step3 : Recover D1 and D2  
The data extracting process  
Original AC Category Table  
The 16 bits guest bits are extracted from a 8x8 host block 
using one of the data embedding techniques. The host 
block can be recovered (reversible) if using reversible 
data embedding technique, otherwise the host block 
cannot be recovered.  
 
Reconstruction Process: 
The reconstruction process intends to reconstruct the 
best approximation of the 8x8 block from the extracted 4 
MSB of the 4 averaged sub-samples of its partner block. 
This process is executed only if the partner block in 
separate packet is damaged. The reconstructed 8x8 block 
then replaces the damaged partner block. 
  The details of the reconstruction process are as follows: 
Step 1: LSB median Correction. The truncated 4 LSB 
with possible value of 0~15 is compensated adding the 
median value 7. 
Step 2: Bilinear Interpolation is then used to 
reconstruction the 8x8 block from the 2x2 sub-sampled 
pixels. 
Step 3: Intensity Correction (IC). The following terms are 
defined before illustrating the IC procedure:  
fLR(x,y): The original input 2x2 image to be resolution 
enhanced. 
gSR(x,y) :The Bilinear interpolation reconstructed 8x8 
block derived from fLR(x,y)  
gLR(x,y): The 2x2 image derived from the 8x8 gSR(x,y ) by 
average sub-sampling. 
eLR(x,y) : 2x2 difference image gLR(x,y)-fLR(x,y). 
eSR(x,y): The 8x8 enlarged difference image obtained by 
bilinear interpolation to 2x2 eLR(x,y). 
gIC(x,y): The final 8x8 block after applying the IC 
correction on gSR(x,y). 
The intensity correction (IC) procedure is described as 
follows: Given an input LR image fLR(x,y) and the initial 
SR image gSR(x,y), the IC procedure is proposed for 
further improvements on gSR(x,y) as follows: Step 1: 
Obtain the 2x2 gLR(x,y) by average sub-sampling the 8x8 
gSR(x,y). 
Step 2:   Compute the error image eLR(x,y) = 
 gLR(x,y) - fLR(x,y). Step 3: Expand eSR(x,y) by 
applying bilinear interpolation on eLR(x,y) Step 4:  
The IC corrected image can be obtained by  
gIC(x,y) = gSR(x,y)- eSR(x,y). 
 
3.3 Modified Huffman Table 
Since the 1C1B data embedding process has changed 
the value of the DCT coefficients and therefore its 
statistical distribution. It is preferable to modify the JPEG 
Huffman Table for entropy coding accordingly for better 
coding efficiency.  
 
Huffman Code in Original JPEG  
 
4. Experiments and Performance Evaluation 
The experimental environment is set up as follows: 
(1) Software environment: Microsoft Windows 2000. 
Matlab 7.0+ Image Processing Toolbox 4.1. 
(2) Test images: Lena、Sailboat and Baboon: 512x512, 8 
bits, gray-levels.  
(3) We implement the JPEG based on Gonzalez [1] using 
MATLAB and its correctness is then verified by the JPEG 
program provided by MATLAB Image Processing 
Toolbox 4.1. QP is used to adjust the tradeoffs between 
bit rates and image quality. 
 
We conduct experiments to answer the following 
questions:  
(1) How many number of MSB bits to be embedded 
as guest bits? What is the effects of Bilinear Interpolation, 
Median Correction (MC) and Intensity Correction (IC). 
The results are shown in Figure 4 for Lena. We have the 
following observations: (i) The PSNR of the 
reconstructed image from the average sub-sampled k 
MSB bits increases as k increase. The increasing in PSNR 
become saturated as k more than 4 or 5. In order to keep 
the amount of guest bits as low as possible, we select k=4 
for the rest of the paper. (ii) The simple Median 
Correction significantly increases the PSNR by almost 2 
db for Lena at 4 MSB bits. (iii) The Intensity Correction 
contributes more than 0.5 dB. 
The results for Sailboat and Baboon are shown in Figure 
4b and 4c. The results show similar trend as Figure 4a, 
except that the IC contribute little to baboon.  
 
  Figure 7. Concealment of pixels in the lost blocks using 
received blocks. 
The concealed subjective image quality for Lena 
Sailboat and Baboon are shown in Figure 9a, 9b and 9c 
respectively. 
 
Figure 8a Lena, Rate vs. PSNR curves for 6 data 
embedding schemes, 50% data lost, N=4 
 
 
Figure 8b Sailboat, Rate vs. PSNR curves for 6 data 
embedding schemes, 50% data lost, N=4 
 
Figure 8c Baboon, Rate vs. PSNR curves for 6 data 
embedding schemes, 50% data lost, N=4 
Original, SNR=27.64dB OE, PSNR=30.68 dB 
2C1B, PSNR=27.99 dB 3C2B, PSNR=29.73dB
1C1B,PSNR=31.03 dB  1C1B Modified 
PSNR=31.12 dB 
 P1 
P 
d1 d2 
d3 
d4 
P4 
Lost Blocks 
2
4
43
33
43
42
21
11
21
2 P
dd
dP
dd
dP
dd
dP
dd
d
P +
++++++=
150 200 250 300 350 400 450
20
22
24
26
28
30
32
Figure 9a. Lena, subjective Quality, 50% data lost,  N=4 
at total 250kbits. 
5. Conclusion 
 
    We have proposed several new reversible data 
embedding schemes and are tested in the resilient JPEG 
image transmission. The proposed 1C1B reversible data 
embedding performs the best in R-D sense due to its high 
embedding efficiency. Surprisingly, we find that the 
simple irreversible Odd-Even scheme, although degrading 
the quality slightly, outperforms 2C1B and 3C2B in R-D 
sense because it incurs least increase in bit-rates. 
   Based on this research, we recommend that (1) data 
embedding is used only when error rate is high and 
retransmission is not desired. (2) Since 1C1B with 
modified Huffman Table has the best performance in R-D 
sense among all data embedding schemes when half of 
packet is lost and therefore is recommended when error 
rate is high and retransmission rate is not desired. 
We recommend modifying Huffman Table because it 
is done only once offline and can provide extra PSNR. 
 
References 
 
[1] R. C. Gonzalez, R. E. Woods, Digital Image 
Processing, 2nd ed., Prentice-Hall, New Jersey, 
Bit-Rate and PSNR curve, Error case, Lena at N=4
Total Kbits
PSNR (dB) 
  
  
Proposed 1C1B Modified
Proposed 1C1B
OE 
Original
Proposed 3C2B
2C1B
200 250 300 350 400 450 50023.5 
24 
24.5 
25 
25.5 
26 
26.5 
27 
27.5 
28 Bit-Rate and PSNR curve, Error case, Sailboat at N=4 
Total Kbits 
PSNR (dB) 
  
 
Proposed 1C1B Modified
Proposed 1C1B 
O
E Original 
Proposed 3C2B 
2C1B 
250 300 350 400 450 500 55022 
22.5 
23 
23.5 
24 
24.5 
25 Bit-Rate and PSNR curve, Error case, Baboon at N=4
Total Kbits 
PSNR (dB) 
 
 
Proposed 1C1B Modified
Proposed 1C1B 
O
E Original 
Proposed 3C2B 
2C1B 
