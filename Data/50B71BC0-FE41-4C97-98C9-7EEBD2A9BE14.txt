 1
結合符水印、覆蓋隱喻學、與密碼學以作資訊保護 
Fusion of Watermarking, Steganography, with Cryptography for 
Information Protection 
 
計畫編號: NSC 97-2221-E-007-222 
執行期限: 97/08/01 – 100/7/31 
 
主持人: 陳朝欽     國立清華大學資訊工程學系 教授 
 
參與研究人員:    樊恩榮、陳詠哲、黃珮琪、彭啟翔、林芷蘋、蔡孟芬、 
              張鳳如、劉毅成、游然琇、劉姵菱、吳柄灃、王彥鈞 
 
 
 
摘要 
 
本技術報告由三部分組成，它包含(1) 提出
一個基於捷格謎網的資料隱藏方法。這篇
論文發表於 Journal of Electronic Imaging, 
2009, (2) 基於小波轉換的浮水印機制應用
於影像所有權保護，後來發展成為彭啟翔
同學的碩士論文，(3) 提出一個應用循環群
產生子結合密碼學與影像像素位置排列的
藏密學的流程，後來發展成為蔡孟芬與張
鳳如同學的兩篇碩士論文。曾經讓本計畫
補助同學之碩博士論文列出供參考。 
 
1. 陳詠哲 Wavelet-Based JPEG 2000 Image   
Compression, June 2009 
2. 彭啟翔  Digital Watermarking Using Wavelet    
Transforms, May 2010 
3. 林芷蘋   Software Development on Automatic 
Fin- 
              gerprint Identification Systems, May 
2010 
4. 蔡孟芬  Steganography by LSB Replacement  
Using Message Bit Shuffling, May 2010 
 
 
ABSTRACT 
 
The technical report of this project is 
composed of three parts including (1) A novel 
steganographic method based on jig swap 
puzzle images which is published in Journal 
of Electronic Imaging, 18(1): 013003 (Jan-
Mar 2009), (2) Wavelet-based watermarking 
schemes for image copyright protection, and 
(3) Novel steganographic methods combining 
encryption using multiplicative generators 
and message embedding using image location 
permutation associated with least significant 
bits replacements. 
5. 鄭 弘 倫  Implementation of A Secret Image 
Sharing  
              Algorithm, May 2010 
6. 樊恩榮 A Study of Steganography Based on    
    Puzzle Games, September 17, 2010 (Ph.d.) 
7. 張鳳如 A Steganographic Method Using MRF- 
Synthesized Textures as Cover Images, 
April  2011 
8. 劉毅成 Image Sharing Based on Shamir’s (k, n)  
Threshold Scheme, April  2011 
 
online jig swap puzzle website, and then he or she will post
the jig swap puzzle image with the secret message embed-
ded on the website. The original image will also be put on
the website. When the receiver is invited to play this jig
swap puzzle game, he or she will open the webpage, this jig
swap puzzle image and the original image can be down-
loaded, and the receiver can then extract the secret mes-
sage. Experimental results show that the proposed method
is undetectable and robust under image compression and
format conversion.
The rest of this paper is organized as follows: Section 2
describes the proposed method and scenario. In Sec. 3, we
analyze the robustness, undetectability, and security of the
proposed method. Conclusions are given in Sec. 4.
2 Proposed Method and Scenario
A jig swap puzzle image see Fig. 1 is formed by dividing
a meaningful image into several blocks and randomly rear-
ranging these blocks—it is a kind of puzzle games.26 The
original image is usually needed as a reference for a
player;26–32 otherwise, it will be difficult for the player, who
has never seen the original image, to rearrange the jig swap
puzzle image into the original one. In this paper, we pro-
pose a method to embed a secret message in a jig swap
puzzle image. In the following, we will first describe the
idea of secret message embedding and then give an ex-
ample to demonstrate the embedding process.
2.1 Idea of Embedding a Secret message in a Jig
Swap Puzzle Image
First, a 128128 image see Fig. 2a is taken as input
and divided into four 6464 blocks. Then, each block is
indexed from left to right and bottom to top see Fig. 2b.
If we swap block 0 with block 2, we can get a jig swap
puzzle image see Fig. 2c. Different block swapping will
create a different jig swap image. To differentiate these jig
swap puzzle images, each is assigned a permutation to
uniquely represent the image. The permutation is created
by concatenating the new position of each block from left
to right and bottom to top. In Fig. 2c, since the new po-
sitions of blocks 0, 1, 2, 3 are 2, 1, 0, 3, respectively, the
corresponding permutation of Fig. 2c is 2,1,0,3.
There are 24 4! kinds of permutations for the four
blocks in this example. Each permutation will correspond
to a jig swap puzzle image. These permutations are sorted
in lexicographic order. The sorted order is used to index
these permutations see Table 1, and the index of a permu-
tation is used to represent the secret data. Since log2 24
4.584, we take up to 4-bit secret data message and
change it into a decimal number, which will then be used as
the index to find the corresponding permutation. Since each
permutation refers to a unique jig swap puzzle image, we
can embed 4-bit secret data by creating the corresponding
jig swap puzzle image. Figure 2c embeds 4-bit secret data
1110 14.
Before describing the proposed method, we will first de-
fine a special kind of jig swap puzzle that will be referred to
later.
Definition 1: Let A be an image, which is divided into
several blocks. Let T be a permutation and B be a jig swap
Fig. 1 A jig swap puzzle image.
Fig. 2 A jig swap puzzle image and its corresponding permutation.
a A digital image. b Four blocks in a. c The result of applying
permutation 2,1,0,3 to b.
Table 1 The lexicographic order for all permutations of four blocks.
Index Permutation Index Permutation
0 0,1,2,3 12 2,0,1,3
1 0,1,3,2 13 2,0,3,1
2 0,2,1,3 14 2,1,0,3
3 0,2,3,1 15 2,1,3,0
4 0,3,1,2 16 2,3,0,1
5 0,3,2,1 17 2,3,1,0
6 1,0,2,3 18 3,0,1,2
7 1,0,3,2 19 3,0,2,1
8 1,2,0,3 20 3,1,0,2
9 1,2,3,0 21 3,1,2,0
10 1,3,0,2 22 3,2,0,1
11 1,3,2,0 23 3,2,1,0
Farn and Chen: Novel steganographic method based on jig swap puzzle images
Journal of Electronic Imaging Jan–Mar 2009/Vol. 18(1)013003-2
Procedure 1 Converting secret message to decimal
number P
P=0,
for i=0 to secret message length
P=P*256+ASCII code of i’th char in the secret
message.
On the other hand, according to the message length, an
NN image with its size big enough to embed the message
is chosen. The image is divided into blocks of nn. Let the
number of blocks be NB, and then NB= NN / nn.
Since one block will be chosen to store a specific number,
which will be explained later, only NB−1 blocks can be
used for permutation. Thus, the embedding capacity EC
of the image is log2 NB−1! bits. If N=256, n=16, EC
=1675 bits. Let M = s0 ,s1 , . . . ,si , . . . ,sNB−2 0siNB
−2 be the set of all permutations of NB−1 numbers from
0 to NB−2.
After obtaining P, we can find the corresponding permu-
tation, S0, with index P. Let S0= s0
0
,s1
0
, . . . ,sNB−2
0 . Since all
permutations are sorted in lexicographic order, there exist
at least s0
0 NB−2! and at most s0
0+1 NB−2!−1
permutations before S. That is, s0
0 NB−2!P s0
0+1
 NB−2! This leads to
s0
0
=  PNB − 2!  . 1
In a similar way, we can get the remaining si
0
. The details
are described in Procedure 2.
Procedure 2 Converting index P to permutation S
for i=0 to NB−2
N  leveli= NB−2− i!
for i=0 to NB−2
usedi= false
for i=0 to NB−2
temp= P/N  leveli
for j=0 to NB−2
if usedj= = false
if temp= =0
Si
0= j
usedj= true
break
else
temp−−
P=P mod N  leveli
If we simply use S0 to generate a jig swap puzzle image,
it may not be a perfect jig swap puzzle. In order to get a
perfect jig swap puzzle, we will iteratively repermute S0
until a perfect permutation is found. Here, we will use
JSPIi to represent the jig swap puzzle image generated by
S0 through i times repermutation. The details are described
in Procedure 3.
Note that in the i’th iteration, block bn in JSPIi stores
block i if ibn, we store block i+1 instead to avoid block
i staying in the original position of the original image to
indicate the number of iterations. And IT stores the number
of iterations needed to get a perfect jig swap puzzle. In our
experiments, we can always obtain a perfect jig swap
puzzle image within 250 iterations; this point will be shown
in Sec. 3.
Procedure 3 Finding a perfect permutation
Step 1: Let R be a random number generator, SK be
a stegokey, and i=0.
Step 2: Use R with SK as its seed to generate a block
number bn with bnNB.
Step 3: Form a block sequence BSi as
BSi= 0,1 , . . . , i−1, i+1, . . . ,NB−1 if ibn,0,1 , . . . , i , i+2, . . . ,NB−1 if ibn. 
Step 4: Apply Si to BSi to get a new sequence
BSi= b0
i ,b1
i , . . . ,bNB−2
i .
Step 5: Based on BSi, a jig swap puzzle image JSPIi
is created as follows:
For ibn,
put block bj
i of the original image in block j ∀jbn,
put block i of the original image in block bn
put block bj
i of the original image in block j+1 ∀jbn, 
For ibn,
put block bj
i of the original image in block j ∀jbn,
put block i+1 of the original image in block bn
put block bj
i of the original image in block j+1 ∀jbn. 
Step 6: Check if JSPIi is a perfect jig swap puzzle
image. If yes, set IT= i, END.
Otherwise, i= i+1, use R to generate a permuta-
tion Ti= t0
i , tI
i , . . . tNB−2
i .
Step 7: Use Procedure 4 to combine Ti and Si−1 to
get a new permutation Si.
Go to step 3.
Procedure 4 Combining two permutations
input: S= s0 ,s1 , . . . ,sNB−2, T= t0 , t1 , . . . tNB−2
output: S= s0 ,s1 , . . . ,sNB−2 
for i=0 to NB−2
temp index=si
si= ttempindex
2.3 Example
In the following, we will give an example to provide a
more detailed explanation. Figure 5a shows a 128128
original image. Suppose that the secret message is “test”
and n=32, then NB= 128128 / 3232=16 and the
embedding capacity is log2 15!=40 bits. We first use Pro-
cedure 1 to convert the secret message “test” to the decimal
number P=1952805748. Next, Procedure 2 is used to find
the corresponding permutation S0
= 0,1 ,6 ,2 ,14,4 ,8 ,11,9 ,5 ,7 ,3 ,13,10,12. Then Proce-
dure 3 is conducted, and the random number generator R
provided by the C standard library with seed SK
=179365 is used to generate bnbn=1. Initially, JSPI0 is
an empty image. We place block 0 of the original image in
block 1 of JSPI0, and then S0 is used to permute the re-
maining blocks of the original image, and the permuted
Farn and Chen: Novel steganographic method based on jig swap puzzle images
Journal of Electronic Imaging Jan–Mar 2009/Vol. 18(1)013003-4
jig swap puzzle image and the original one, and this map-
ping is then used to obtain the secret message.
In the first part, for each row column in the jig swap
puzzle image, we count the percentage of black pixels ap-
pearing in each row column as follows:
For row y, BRPy =
	x=0
N−1 Blackx,y
N
, 2
For column x, BCPx =
	y=0
N−1 Blackx,y
N
, 3
Blackx,y = 
1 Pixelx,y 250 Pixelx,y 25, 4
where Pixelx ,y is the intensity of the pixel at x ,y, and N
is the total number of pixels in a row or column.
If BRPy or BCPx is over 60%, we consider that
there is a horizontal vertical puzzle line at row y column
x. Figure 7 shows the detected puzzle lines in Fig. 5g
drawn in red color online only. Based on these located
puzzle lines, we can obtain the block size and locate each
block in the original and the jig swap puzzle images.
In the second part, we will find the corresponding block
mapping between these two images to derive SIT. Here, we
will provide a block matching algorithm to find the map-
ping. Before describing the algorithm, we will first give
some definitions:
Definition 2: Let Ri
sx ,y ,Gi
sx ,y ,Bi
sx ,y be the
color of pixel x ,y in block i of the jig swap puzzle image
and Rj
ox ,y ,Gj
ox ,y ,Bj
ox ,y be the color of pixel x ,y
in block j of the original image. Each block has nn size.
Then, the difference between block i of the jig swap puzzle
image and block j of the original image, Ei , j, is defined
as
Ei, j = 	
x=0
n−1
	
y=0
n−1
Ri
sx,y − Rj
ox,y + Gi
sx,y − Gj
ox,y
+ Bi
sx,y − Bj
ox,y . 5
Definition 3: Let Hki be the block in the original im-
age, which is the k’th most similar one to block i of the jig
swap puzzle image. That is, there exist exactly k−1
blocks in the original image, with each block h having
Ei ,hEi ,Hki. Then, the difference between block
Hki in the original image and block i in the jig swap
puzzle image, Difi ,k, is defined to be
Difi,k = Ei,Hki . 6
Definition 4: Define the block in the jig swap puzzle
image that best matches block j of the original image to be
Matchj.
Definition 5: Let the difference between block j of the
original image and its best matching block in the jig swap
puzzle image be Minj, and then
Minj = EMatchj, j . 7
Definition 6: Define the number of blocks in the original
image that are most similar to block i of the jig swap puzzle
image and that have been matched to other blocks of the jig
swap puzzle image during processing block matching to be
UsedBlockNoi.
Based on these definitions, we will provide a fast algo-
rithm to find the best block matching. The idea is that if
more than one block in the jig swap puzzle has the same
best matched block, the block with the minimum difference
wins, and others are rematched to the block with the next
smallest difference according to the H array. We repeat this
process until all blocks in the jig swap puzzle are matched.
The details of this algorithm are described in Procedure 5.
Procedure 5 Block matching algorithm
for j=0 to NB=1 #j is the block index in the original
image
Matchj=null
Minj=
for i=0 to NB−1 #i is the block index in the jig swap
puzzle image
UsedBlockNoi=0
for i=0 to NB−2
p= i
whileMinHUsedBlockNop+1P!=
ifMinHUsedBlockNop+1p
Difp ,HUsedBlockNop+1p
MinHUsedBlockNop+1p
=Difp ,HUsedBlockNop+1p
temp=MatchHUsedBlockNop+1p
MatchHUsedBlockNop+1p=p
p= temp
UsedBlockNop++
MinHUsedBlockNop+1p=Difp ,HUsedBlockNop+1p
MatchHUsedBlockNop+1p=p
Fig. 7 The result of locating puzzle lines marked by red color. Color
online only.
Farn and Chen: Novel steganographic method based on jig swap puzzle images
Journal of Electronic Imaging Jan–Mar 2009/Vol. 18(1)013003-6
4. The jig swap puzzle webpage will be divided into
two sections: left and right. The left section contains
the original image of the selected jig swap puzzle,
and the right section has the jig swap puzzle image
with all blocks swappable. Figure 9 shows an ex-
ample of a simplified webpage. When a user opens
this webpage, the web browser has downloaded the
original image and the jig swap puzzle image on the
user’s computer. At this time, the user can obtain
these two images.
5. When Alice wants to send a secret message to Bob,
she will select an image in which to embed the mes-
sage using the proposed embedding process and the
shared stegokey. The created jig swap puzzle image
will then be put on the website as one of the online
jig swap puzzle games.
6. Alice will then send an invitation e-mail to Bob. The
e-mail will contain the web address in connection to
the online jig swap puzzle with the secret message
embedded.
7. When Bob receives Alice’s e-mail, he will link to
Alice’s website mentioned in the invitation e-mail to
get the compressed jig swap puzzle image and the
original image.
8. Bob will then extract the embedded secret message
using the proposed extraction process and the shared
stegokey.
3 Analysis of the Proposed Method
The proposed method satisfies the three requirements of
steganography: robustness, imperceptibility, and undetect-
ability and security.
3.1 Robustness
The proposed method is robust under image compression
and format conversion, including JPEG to GIF and GIF to
JPEG. The reason is that the secret messages are embedded
through block swapping and the block positions will not be
changed by image compression and format conversion. To
illustrate this point, for each created jig swap puzzle image,
we use Adobe Photoshop CS to store the image in JPEG
format with quality level High 7 and Medium 5 and in
GIF format. We have taken 10 images, shown in Fig. 10a,
to conduct experiments. Each image is converted to 300
different perfect jig swap puzzles, one of which is shown in
Fig. 10b. Each created jig swap puzzle image is stored in
JPEG format with quality level 7 and 5 and in GIF for-
mat, and each JPEG image is converted to GIF format and
Fig. 9 A simplified jig swap puzzle webpage.
Fig. 10 The 10 test images used to show the robustness of the
proposed method. a Original images. b The created perfect jig
swap puzzle images. c The reconstructed images.
Farn and Chen: Novel steganographic method based on jig swap puzzle images
Journal of Electronic Imaging Jan–Mar 2009/Vol. 18(1)013003-8
problem.33 Several references34–36 provide methods to
solve jig swap puzzles, but no one can solve this problem
completely. If someone wants to use our proposed method
to hide data and will not provide the original image for data
extraction, he or she can use the method proposed by
Nielsen et al.34 to solve the created jig swap puzzle par-
tially and can then manually do some adjustment to get the
correct permutation.
Acknowledgments
This work is supported by NSC Grant No. 97-2221-E-007-
122-MY3. The authors would like to thank the anonymous
reviewers for their many valuable suggestions, which have
greatly improved the presentation of the paper.
References
1. W. Bender, D. Gruhl, N. Morimoto, and A. Lu, “Techniques for data
hiding,” IBM Syst. J. 353, 313–336 1996.
2. N. Johnson and S. Jajodia, “Exploring steganography: seeing the un-
seen,” IEEE Comput. Sci. Eng. 312, 26–34 1998.
3. N. Provos and P. Honeyman, “Hide and seek: an introduction to
steganography,” IEEE Security Privacy 1, 32–44 2003.
4. I. J. Cox, M. L. Miller, J. A. Bloom, J. Fridrich, and T. Kalker,
Digital Watermarking and Steganography, pp. 429–495, Morgan
Kaufmann, San Francisco 2008.
5. C. Cachin, “An information-theoretic model for steganography,” in
2nd Int. Workshop on Information Hiding, Portland, Oregon, Lecture
Notes in Computer Science, vol. 1525, pp. 306–318, Springer-Verlag,
Berlin 1998.
6. N. F. Johnson and S. Jajodia, “Steganalysis of images created using
current steganographic software,” in Proc. 2nd Int. Workshop on In-
formation Hiding, Portland, Oregon, Lecture Notes in Computer Sci-
ence, vol. 1525, pp. 273–289, Springer-Verlag, Berlin 1998.
7. A. Westfeld and A. Pfitzmann, “Attacks on steganographic systems,”
in Proc. 3rd Int. Workshop on Information Hiding, Dresden, Ger-
many, Lecture Notes in Computer Science, vol. 1768, , pp. 61–76,
Springer-Verlag, Berlin 1999.
8. S. Lyu and H. Farid, “Detecting hidden messages using higher-order
statistics and support vector machines,” in Proc. 5th Int. Workshop on
Information Hiding, Noordwijkerhout, the Netherlands, Lecture
Notes in Computer Science, vol. 2578, pp. 340–354, Springer-Verlag,
Berlin 2002.
9. J. Fridrich, M. Goljan, and D. Hogea, “Steganalysis of JPEG images:
breaking the F5 algorithm,” in Proc. 5th Int. Workshop on Informa-
tion Hiding, Noordwijkerhout, the Netherlands, Lecture Notes in
Computer Science, vol. 2578, pp. 310–323, Springer-Verlag, Berlin
2002.
10. S. Dumitrescu, X. Wu, and Z. Wang, “Detection of LSB steganogra-
phy via sample pair analysis,” in Proc. 5th Int. Workshop on Infor-
mation Hiding, Noordwijkerhout, the Netherlands, Lecture Notes in
Computer Science, vol. 2578, pp. 355–372, Springer-Verlag, Berlin
2002.
11. J. Fridrich, T. S. Holotyak, and D. Soukal, “Stochastic approach to
secret message length estimation in 
k embedding steganography,”
Proc. SPIE 1620, 673–684 2005.
12. A. Brown, “S-Tool V4,” http://www.spychecker.com/program/
stiils.html, Jan. 21 2009.
13. H. Repp, “Hide4PGP,” http://www.heinz-repp.onlinehome.de/
hide4PGP.htm, Jan. 21 2009.
14. D. Upham, “JPEG-JSteg,” http://www.funet.fi/pub/crypt/
stefanography/jpeg-jsteg-v4.diff.gzee 1997.
15. A. Latham, “Steganography: JPHIDE and JPSEEK,” http://
linux01.gwdg.de/~alatham/stego.html 1999.
16. N. Provos, “Outguess,” http://www.outguesst.orgoutguest-0.2.tar.gz
2001.
17. Y. K. Lee and L. H. Chen, “High capacity image steganographic
model,” IEE Proc. Vision Image Signal Process. 1473, 288–294
2000.
18. C. C. Thien and J. C. Lin, “A simple and high-hiding capacity
method for hiding digit-by-digit data in images based on modulus
function,” Pattern Recogn., 3612, 2875–2881 2003.
19. C. K. Chan and L. M. Cheng, “Hiding data in images by simple LSB
substitution,” Pattern Recogn. 373, 469–474 2004.
20. R. Machado, “\Stego,” http://www.stego.com, Jan. 21 2009.
21. J. Fridrich and R. Du, “Secure steganographic methods for palette
images,” in Proc. 3rd Information Hiding Workshop, Dresden, Ger-
many, Lecture Notes in Computer Science, Vol. 1768, pp. 47–60,
Springer-Verlag, New York 2000.
22. L. M. Marvel Jr., C. G. Boncelet, and C. T. Retter, “Spread spectrum
image steganography,” IEEE Trans. Image Process., 8, 1075–1083
1999.
23. N. Provos, “Defending against statistical steganalysis,” in Proc. 10th
Usenix Security Symp., Washington, DC, pp. 323–335, Usenix Assoc.
2001.
24. A. Westfeld, “F5—a steganographic algorithm: high capacity despite
better steganalysis,” in Proc. 4th Int. Workshop on Information Hid-
ing, Pittsburg, PA, Lecture Notes in Computer Science, vol. 2137, pp.
289–302, Springer-Verlag, Berlin 2001.
25. Y. K. Lee and L. H. Chen, “Secure error-free steganography for JPEG
images,” Int. J. Pattern Recognit. Artif. Intell., 176, 967–981
2003.
26. http://www.jigzone.com, Jan. 21 2009.
27. http://www.jigsawpuzzles.ws, Jan. 21 2009.
28. http://www.pajersoft.com/winshweb.htm, Jan. 21 2009.
29. http://www.kraisoft.com/puzzle-games/jigsaw, Jan. 21 2009.
30. http://www.spintop-games.com/jigsaw_game_download/
jigsaw_landscapes.html, Jan. 21 2009.
31. http://www.spintop-games.com/jigsaw_game_download/
jigsaw_nature.html, Jan. 21 2009.
32. Yell, “Picture puzzle,” http://www.onlinegameshq.com/game/867/
picture-puzzle.html, Jan. 21 2009.
33. E. D. Demaine and M. L. Demaine, “Jigsaw puzzles, edge matching,
and polyomino packing: connections and complexity,” Graphs and
Combinatorics 23, 195–208 2007.
34. T. R. Nielsen, P. Drewsen, and K. Hansen, “Solving jigsaw puzzles
using image features,” Pattern Recogn. Lett., 1429, 1923–1933
2008.
35. Y. X. Zhao, M. C. Su, Z. L. Chou, and J. Lee, “A puzzle solver and
its application in speech descrambling,” in Proc. 2007 WSEAS Int.
Conf. Computer Engineering and Applications, Gold Coast, Austra-
lia, pp. 171–176, World Scientific and Engineering Academy and
Society WSEAS, Stevens Point, WI 2007.
36. A. Pal, K. Shanmugasundaram, and N. Memon, “Automated reas-
sembly of fragmented images,” IEEE Trans. Image Process., 152,
385–393 2003.
En-Jung Farn received a BS degree from
the Department of Computer Science and
Information Engineering at Chiao Tung
University, Hsinchu, Taiwan, in 2004. He is
currently a PhD student in the Department
of Computer Science, National Tsing Hua
University. His current research interests
include image processing and information
security.
Chaur-Chin Chen received a BS degree in
mathematics from National Taiwan Univer-
sity, Taipei, in 1977, and MS degrees in
both mathematics and computer science
and a PhD degree in computer science, all
from Michigan State University MSU,
East Lansing, in 1982, 1984, and 1988, re-
spectively. He worked as a research asso-
ciate at MSU in 1989. He is currently a pro-
fessor in the department of Computer
Science at National Tsing Hua University.
He was a visiting scholar at MSU in 1997. His current research
interests are information hiding, biometrics, and microarray image
data analysis.
Farn and Chen: Novel steganographic method based on jig swap puzzle images
Journal of Electronic Imaging Jan–Mar 2009/Vol. 18(1)013003-10
 2
1. Introdunction 
High quality digital media are easy to be 
produced, distributed, and acquired over the 
Internet transmission in the past decade. The 
copyright protection and ownership 
identification of electronics products over the 
Internet transmission have attracted a lot 
attention. A digital watermarking can partially 
solve the above problem [Podi2001]. 
    Cox et al. suggested preserving, in a 
watermarking system, some characteristics as 
listed below [Cox2008]. 
(1) Fidelity: The perceptual similarity 
between the original and watermarked 
cover work. 
(2) Data Payload: The number of bits a 
watermark encodes within a work. 
(3) Robustness: The ability to detect the 
watermark after common signal 
processing operations. 
(4) Blindness: The watermark can be 
detected without requiring an original 
image during detection. 
(5) Security: The ability to resist hostile 
attacks. For example, unauthorized 
removal, embedding and detection. 
A variety of watermark methods have 
been proposed according to their applications. 
In some application that digital media will 
spread over the Internet, it may focus on 
“robustness” characteristic. Medical 
applications treat false positive rate and 
reversibility as important properties. In 
Steganography applications, both capacity 
and robustness are important properties. A 
general watermarking system can be depicted 
as follows [Cox2008]. 
 
 
Figure1.1: A wavelet-based watermarking 
system. 
In 1997, Cox et al. [Cox1997] proposed a 
watermarking method by inserting pseudo 
random numbers drawn from the N(0,1) 
distribution into frequency domain. Cox 
inserts watermark bits in the most significant 
bits selected from DCT coefficients. Xia 
[Xia1997] did the similar work in the wavelet 
domain. He inserts watermark to large 
coefficients at the HH, HL, LH subbands of 
the discrete wavelet transform (DWT) of an 
image. Podilchuk [Podi2001] introduces a 
general framework for a watermarking system 
with applications including copyright 
protection, authentication and etc. Chen 
[Chen2002] embeds pseudo random numbers 
into the wavelet coefficients of high-low and 
low-high bands at level 3 of a 3-scale Haar 
wavelet transform. He also did experiments 
on many image processing and multiple 
colluders attack. 
Bao [Bao2005] applies Singular Value 
Decomposition on wavelet blocks and 
embeds watermark bits by modifying singular 
values. Bao computes quantization steps for 
each wavelet block by some statistical model 
to let his approach be adaptive to different 
images. Qi [Qi2008] improved Bao’s method 
by applying a quantization index modulation 
(QIM) process on the SVs of an image in the 
wavelet transformed domain. He applies a 
grid search algorithm to find the weight 
parameters used in the quantization step. 
Another watermarking system is based 
on nonnegative matrix factorization (NMF). 
Lu [Lu2008] uses NMF method to decompose 
DWT’s coefficient matrices and embeds 
watermark bits into those nonnegative 
matrices. 
Wang [Wang2004] introduces the 
technique of wavelet tree quantization (WTQ) 
in the wavelet transformed domain. He 
groups the wavelet coefficients into the 
wavelet tree structure. The embedding 
algorithm embeds watermark bits by 
selectively quantizing the trees. Tsai 
 4
The computations on (2.1) for a Haar 
transform on an image block X represented as 
an n-by-n matrix X is clear. 
 
2.2 Daubechies’ four Wavelet Transform 
Daubechies wavelet named after Ingrid 
Daubechies [Taub2002] is a family of 
orthogonal wavelets. When a Daubechies 
wavelet is implemented in Fast Wavelet 
Transform (FWT), wavelet filter (also called 
mother wavelet) is a high-pass filter; scaling 
function (also called father wavelet) is a low-
pass filter. 
The Daubechies wavelets D2~D20 are 
commonly used [Web01]. The index number 
of DN refers to the numbers of N coefficients. 
For example, the wavelet matrix in 
Daubechies’ four (D4) we used in this study 
can be written as follows [Chen2006] 






















2301
0123
0123
0123
32
10
3210
3210
3210
4
000
0
0
00
0
0
000
000
cccc
cccc
cccc
cccc
cc
cc
cccc
cccc
cccc
D






 
(2.4) 
where
24
31,
24
33,
24
33,
24
31
3210
 cccc , 
and 123
2
2
2
1
2
0  cccc .Thus, Daubechies’ 
four wavelet transform can be written as 
tDXDY 44  , X is an input image 
and is a matrix multiplication. 
 
2.3 W5/3 Wavelet Transform 
5/3 and 9/7 wavelet transforms are 
recommended as the bases for JPEG2000 
[Taub2002]. 5/3 wavelet transform is 
reversible transform for image compression in 
JPEG2000. Assume 5/3 wavelet transform 
divides an input image into even and odd 
parts which are denoted by s0 and d0, 
respectively. Figure 2.2 describes the forward 
procedure of 5/3 wavelet transform. 
 
Figure 2.2: 5/3 wavelet transform forward 
procedure. 
 
Thus, we can acquire high-pass signals 
and low-pass signals from this procedure. We 
define the matrix form for 5/3 wavelet 
transform according to this procedure and 
equation (2.1) as follows. 

























100
0010
001
00
00
00
2
1
2
1
2
1
2
1
2
1
2
1
4
1
4
3
4
1
8
1
8
1
8
1
4
1
4
3
4
1
8
1
4
1
8
1
8
1
4
1
4
3
3/5









W
 
(2.5) 
 
2.4 W9/7 Wavelet Transform 
9/7 wavelet transform is used for lossy 
compression in JPEG2000 [Taub2002] which 
has a higher compression ratio than 5/3 
wavelet does but it is irreversible. We 
characterize 9/7 wavelet transform forward 
procedure as follows [Chen2006]. 
 
Figure 2.3: 9/7 wavelet transform forward 
procedure. 
 6
 
Figure 3.1: A 3-scale wavelet transform. 
 
Let YHL3 and YLH3 be the wavelet 
coefficients of high-low and low-high 
subbands at level 3. We insert watermark bit 
pixel-by-pixel with the following equation 
)1(33 WYY HLHL     (3.1) 
)1(33 WYY LHLH     (3.2) 
where W is the watermark bits and 
)5.0,1.0( . Then, we can get the embedded 
image by applying the inverse DWT on the 
transformed image. 
Figure 3.2 to 3.5 show some examples of 
an embedding procedure. The image on the 
left side is an original image. The image after 
doing wavelet transforms is shown in the 
middle. The image on the right side is the 
watermarked image. 
 
Figure 3.2: An example of embedding using 
Haar basis. 
 
Figure 3.3: An example of embedding using 
Daubechies four basis. 
 
Figure 3.4: An example of embedding using 
5/3 basis. 
 
Figure 3.4: An example of embedding using 
9/7 basis. 
 
3.3 Watermark Extraction 
Let Wt be the function of wavelet 
transform, {X(i,j)} and {Y(i,j)} be the 
original image and watermarked image 
respectively. We extract the watermark 
{W*(i,j)} by using the following equations: 
)(')( 33 XWtZorXWtZ LHHL  (3.3) 
)(')( 33 YWtYorYWtT LHHL   (3.4) 


 


 
1
),('
),('1),(
1
),(
),(1),(
*
*
jiZ
jiTjiW
or
jiZ
jiTjiW


 
   (3.5) 
 
3.4 Watermark Detection 
To authenticate the extracted watermark, 
we adopt the similarity index introduced by 
Cox et al. [Cox1997] which is defined as 


**
*
*
,
,),(
WW
WWWWSim   (3.6) 
W is the original watermark sampling 
from N(0,1) and W* is the extracted 
watermark whose length is equal to W. 
According to the sampling distribution theory 
[Hogg2005], )1,0(~),( * NWWSim  Therefore, 
 8
4.1 Experiment 1: Scaling 
We resize the Lenna down to the size 
256×256 and 128×128, then, enlarge the 
images back to 512×512. Figure 4.3 shows 
the results with the original image, 256×256 
image and 128×128 image, respectively. The 
PSNR values and similarity indices are listed 
in Table 4.1. All attacked images in size 
256×256 are successfully detected. It seems 
hard to detect the ownership by using the 5/3 
and 9/7 wavelets for the attack of reducing 
the image 4x4 times and double twice back to 
the original size. 
 
 
Figure 4.3: (a) The original image, (b) Down 
size 1/2 and enlarge, (c) Down size 1/4 and 
enlarge. 
 
Table 4.1: PSNR and Sim values of 
Experiment 1. 
 Haar Daubechies’ 4
Attack PSNR Sim PSNR Sim 
256×25
6 
31.67 14.7
7 
31.65 9.73 
128×12
8 
27.33 10.3
8 
27.39 2.89 
 5/3 9/7 
Attack PSNR Sim PSNR Sim 
256×25
6 
31.68 8.27 31.69 7.96 
128×12
8 
27.39 *0.7
9 
27.39 *1.31
* means a detection failure 
 
4.2 Experiment 2: Median Filtering 
We apply the median filter processing 
with the window size 3×3 and 5×5 on Lenna 
and the results are shown in Figure 4.4. When 
the window size is 3×3 and α=0.2, the 
watermark in all wavelet bases are 
successfully detected. When the window size 
is increased to 5×5, the watermarks based on 
Haar and 5/3 wavelets are not successfully 
detected. If we fix α to be 0.3, only the one 
based on 5/3 wavelet is not detected. The 
results of PSNR and similarity values are 
summarized in Table 4.2.  
 
 
Figure 4.4: The images after median filtering 
on watermarked images. 
 
Table 4.2: PSNR and Sim values of 
Experiment 2. 
 Haar Daubechies’ 
4 
Attack PSNR Sim PSNR Sim
α=0.2,w=3×3 35.29 4.44 35.34 6.95
α=0.2,w=5×5 31.68 *1.22 31.71 2.76
α=0.3,w=5×5 31.41 2.27 31.44 5.62
 5/3 9/7 
Attack PSNR Sim PSNR Sim
α=0.2,w=3×3 35.34 5.87 35.37 5.19
α=0.2,w=5×5 31.67 *1.47 31.70 4.40
α=0.3,w=5×5 31.67 *1.09 31.47 4.60
* means a detection failure 
 
4.3 Experiment 3: Cropping 
We crop the central 1/4, 1/16 and 1/100 
portions of the watermarked image, and insert 
it into the original image to obtain the 
attacked image, respectively. Figure 4.5 
shows the croppped areas on the 
corresponding attacked images. Table 4.3 
shows the experimental results. Even though 
we only crop 1% of watermarked image, it is 
successfully detected. 
 
 10
Attack PSNR Sim PSNR Sim
N(0,16), 
α=0.2 
35.19 3.41 35.21 2.04
N(0,25) , 
α=0.2 
33.56 4.54 33.58 2.64
N(0,25) , 
α=0.3 
32.98 6.63 33.02 3.22
N(0,36) , 
α=0.3 
31.73 2.28 31.73 2.45
*a detection failure. 
 
4.6 Experiment 6: JPEG Compression 
In this experiment we test the effect of 
JPEG compression in different compression 
rates. We keep degrading the compression 
rate until the attacked images based on all of 
the wavelets fail to be detected. Table 4.6 
shows the similar indices and PSNR values. 
The attacked images using Daubechies’ four 
wavelet can be detected even though the 
compression ratios is as low as 0.3. 
 
Figure 4.8: JPEG compression in different 
compression rates. 
 
Table 4.6: PSNR and Sim values of 
Experiment 6. 
 Haar Daubechies’ 4
Compression 
ratios 
PSNR Sim PSNR Sim 
0.8 37.08 4.49 37.22 10.44
0.7 36.28 5.44 36.39 5.62 
0.6 35.66 4.33 35.76 6.81
0.5 35.18 *1.86 35.27 5.11 
0.4   34.72 4.47 
0.3   33.98 2.65 
0.2   32.85 *0.49
 5/3 9/7 
Compression PSNR Sim PSNR Sim 
ratios
0.8 37.40 7.82 37.45 6.04 
0.7 36.55 6.97 36.57 7.04 
0.6 35.88 4.67 35.90 5.37
0.5 35.37 2.60 35.39 3.84 
0.4 34.81 3.77 34.83 *1.00
0.3 34.08 *0.71   
*a detection failure. 
 
4.7 Experiment 7: Multiple Watermarks 
This experiment tests unauthorized 
embedding. We embedded extra three and six 
different watermarks with seeds 140114, 
79143, 2010, 0, 31 and 5731078, into our 
watermarked images to get the attacked 
images. Figure 4.9 and Table 4.7 show the 
experimental results. The extracted 
watermarks could be successfully detected. 
 
Figure 4.9: Experimental results of multiple 
watermarks. 
 
Table 4.7: PSNR and Sim values of 
Experiment 7. 
 Haar Daubechies’ 
4 
Attack PSNR Sim PSNR Sim 
3 
watermarks 
35.53 6.68 35.60 19.75
6 
watermarks 
33.30 4.34 33.45 15.63
 5/3 9/7 
Attack PSNR Sim PSNR Sim 
3 
watermarks 
35.87 10.05 35.93 7.00
6 
watermarks 
32.68 7.85 32.78 3.89
 
4.8 Summary 
This chapter provides a simple test on our 
 12
Conference on Image Processing, Vol. 2, 
419-423, 1998. 
 
[Hogg2005] R.V. Hogg and E.A. Tanis, 
“Probability and Statistical Inference,” 
Prentice-Hall, New Jersey, 2005. 
 
[Kim1999] J.R. Kim and Y.S. Moon, “A 
Robust Wavelet-Based Digital Watermarking 
Using Level-Adaptive Thresholding,” 
International Conference on Image 
Processing, Vol. 2, 226-230, 1999. 
 
[Kun1998] D. Kundur, and D. Hatzinakos, 
“Digital watermarking using multiresolution 
wavelet decomposition,” International 
Conference on Acoustics, Speech and Signal 
Processing, Vol. 5, 2969-2972, 1998. 
 
[Kutt1999] M. Kutter, “Performance 
Improvement of Spread Spectrum Based 
Image Watermarking Schemes through M-ary 
Modulation,” Lecture Notes in Computer 
Science, Vol. 1728, 238-250, 1999. 
 
[Lu2008]  W. Lu, W. Sun and H. Lu, “Robust 
watermarking based on DWT and 
nonnegative matrix factorization,” Computers 
and Electrical Engineering, Vol. 35, No. 1, 
183-188, 2008. 
 
[Podi2001] C.I. Podilchuk, and E.J. Delp, 
“Digital watermarking: algorithms and 
applications,” IEEE Signal Processing 
Magazine, Vol. 18, No. 4, 33-46, 2001. 
 
[Qi2008] X. Qi, S. Bialkowski and G. 
Brimley, “An adaptive QIM-and SVD-based 
digital image watermarking scheme in the 
wavelet domain,” IEEE Trans. on Image 
Processing, Vol. 17, 421-424, 2008. 
[Tsai2008] M.J. Tsai, C.T. Lin and J. Liu, 
“A Wavelet-based Watermarking Scheme 
Using Double Wavelet Tree Energy 
Modulation,” IEEE International Conference 
on Image Processing, 417-420, 2008 
 
[Taub2002] D.S. Taubman and M.W. 
Marcellin, JPEG2000: Image Compression 
Fundamentals, Standards and Practice, 
Kluwer Academic Publishers, Boston, 2002. 
 
[Wang2002] Y. Wang, J.F. Doherty, and 
R.E. Van Dyck, “A wavelet-based 
watermarking algorithm for ownership 
verification of digital images,” IEEE Trans. 
on Image Processing, Vol. 11, No. 2, 77-88, 
2002. 
 
[Wang2004] S.H. Wang, and Y.P. Lin, 
“Wavelet tree quantization for copyright 
protection watermarking,” IEEE Trans. on 
Image Processing, Vol. 13, No. 2, 154-165, 
2004. 
 
[Web01]http://en.wikipedia.org/wiki/Daubec
hies_wavelet,  last access on May 27, 2010. 
 
[Web02] 
https://www.digimarc.com/default.asp, last 
access on May 27, 2010. 
 
[Web03] 
http://www.alpvision.com/index.html, last 
access on May 27, 2010.  
 
[Xia1997] X.G. Xia, C.G. Boncelet, and G.R. 
Arce, “A multiresolution watermark for 
digital images,” International Conference on 
Image Processing, Vol. 1, 548-551, 1997. 
 
In general, a good steganographic method 
has two properties: (1) sufficient capacity: 
the capacity of embedding payloads should 
be as enough as possible and (2) good 
imperceptibility: the stego-image will not be 
distinguished from the original image by 
human vision and detected with embedding 
message by steganalysis techniques. 
 
Figure 1.1: A flowchart of embedding 
messages. 
 
The history of steganography was 
surveyed by Petitcolas et al. [Peti1999]. 
Many techniques about steganographic 
algorithms have been proposed in recent 
years [Kim2008][Meil2006][Sabe2007] 
[Wang2000][Wang2001][Wu2003][web01], 
one of the popular techniques is based on 
modifying the least-significant-bit (LSB) 
method [Chan2004] which is simple, fast, 
and possesses high embedding capacity. The 
LSB method adds or subtracts the least 
significant bit pixel values according to the 
secret messages. Chan et al. [Chan2004] 
proposed the simple LSB substitution 
method by applying an optimal pixel 
adjustment process to the stego-image, it 
improves the quality and has low extra 
computational complexity. Mielikainen 
[Miel2006] proposed LSB Matching 
Revisited which used a binary function to 
modify the value of two cover pixels, the 
embedding capacity is the same as LSB 
matching [Chan2004] with a smaller 
number of pixel value changes, its 
stego-images have better quality.  
Besides, there are some embedding 
methods other than LSB. Wang et al. 
[Wang2000] proposed to embed secret 
messages in the moderately significant bit of 
the cover-image. The method uses a genetic 
algorithm and an optimal substitution matrix 
for the embedding of the secret messages. 
The pixel-value differencing (PVD) method 
which utilized the difference between the 
two consecutive pixels in the cover-image to 
determine what size the secret message is to 
be hidden [Wu2003][Sabe2007]. 
This thesis proposed a data hiding 
method which encrypts the secret message 
before hiding message to improve the 
security. The main concept comes from a 
multiplicative abelian group which 
scrambles secret messages based on the 
property of primitive roots. To extract the 
message, a receiver needs to solve the 
discrete logarithm problem [Trap2006] 
which is believed to be a hard task.  
 The remaining of this thesis is 
organized as follows. In Chapter 2, we 
review the related work about data hiding 
algorithms based on LSB method. A 
proposed method is described in Chapter 3. 
The experimental results are presented in 
Chapter 4. Finally, the conclusion and 
further work are drawn in Chapter 5.  
2. Review of LSB Algorithms 
Bitstream 
embedding
Bitstream 
conversion 
Cover image 
Stego‐image 
Secret 
message 
  
(A)  ሺ2୩ିଵ ൏ ∆୧ ൏ 2୩ሻ 
If p୧′ ൒ 2୩ , then p୧′′ ൌ p୧′ െ 2୩ ; 
otherwise p୧′′ ൌ p୧′ 
(2.2)
  
(B)  ሺെ2୩ିଵ ൑ ∆୧ ൑  2୩ିଵሻ 
         p୧′′ ൌ p୧′ (2.3)
  
(C) ሺെ2୩ ൏ ∆୧ ൏ െ2୩ିଵሻ 
If p୧′ ൏ 256 െ 2୩, then 
p୧′′ ൌ p୧′ ൅ 2୩; otherwise p୧′′ ൌ p୧′ 
(2.4)
 
Let Δi' = pi" - pi be the embedding error 
between pi" and pi'. Δi' can be computed as 
follows. 
 
(A)  ሺ2୩ିଵ ൏ ∆୧ ൏ 2୩ and p୧′ ൒ 2୩ሻ 
  ∆୧′ ൌ  p୧′′ െ p୧ ൌ p୧′ െ 2୩ െ p୧ 
           ൌ ∆୧ െ 2୩ 
    ฺ 2୩ିଵ െ 2୩ ൏ ∆୧′ ൏ 2୩ െ 2୩ 
          ൌ െ2୩ିଵ ൏ ∆୧Ԣ ൏ 0 
(2.5)
  
(B)  ሺ2୩ିଵ ൏ ∆୧ ൏ 2୩ and p୧′ ൏ 2୩ሻ 
      ∆୧′ ൌ  p୧′′ െ p୧ ൌ p୧′െp୧ ൌ ∆୧ 
     ฺ 2୩ିଵ ൏ ∆୧′ ൏ 2୩ 
(2.6)
  
(C)  ሺെ2୩ିଵ ൑ ∆୧ ൑  2୩ିଵሻ 
       ∆୧′ൌ  p୧′′ െ p୧ ൌ p୧′െp୧ ൌ ∆୧ 
      ฺ െ2୩ିଵ ൑ ∆୧′ ൑  2୩ିଵ 
(2.7)
  
(D) ሺെ2୩ ൏ ∆୧ ൏ െ2୩ିଵand p୧′ ൏
256 െ 2୩ሻ 
  ∆୧′ൌ  p୧′′ ൅ p୧ ൌ p୧′ ൅ 2୩ െ p୧ 
         ൌ ∆୧ ൅ 2୩ 
   ฺ െ2୩ ൅ 2୩ ൏ ∆୧Ԣ ൏ െ2୩ିଵ ൅ 2୩ 
   ฺ 0 ൏ ∆୧Ԣ ൏ 2୩ିଵ 
(2.8)
  
(E) ሺെ2୩ ൏ ∆୧ ൏ െ2୩ିଵand p୧′ ൒
256 െ 2୩ሻ 
∆୧′ൌ p୧′′ െ p୧ ൌ p୧′െp୧ ൌ ∆୧ 
ฺ െ2୩ ൏ ∆୧Ԣ ൏ െ2୩ିଵ 
(2.9)
 
 
2.2.2 Analysis 
According to the above five cases, it 
could be interpreted that the range may fall 
into 2k-1<|Δi'|<2k when pi'<2k and pi'256-2k 
(under these two cases, pi'= pi). As for the 
other cases, the range of absolute value of Δi 
will fall into 0 |Δi'|2k-1. In general, when 
k  4, the probability that a pixel value 
smaller than 2k or greater 256-2k is 
extremely low. Therefore, it could be 
estimated that the value of |Δi'| is limited to 
0 |Δi'|2k-1 . 
Under the worst situation that all the 
modified bit values are different from all the 
embedded message, let wmse and wmse* 
represent the worst case mean-square errors 
between the stego-image and the 
cover-image obtained by the simple LSB 
substitution method and the proposed 
method with OPAP, respectively. They could 
be performed by the formulas below. 
 
2
*
1
2, )12()(
*
1   mse  

k
NM
i
ii ppNM
w  
…(2.10) 
21
*
1
2, )2()(
*
1* 

  kNM
i
ii ppNM
wmse  
…(2.11) 
Combining equation (2.10) and (2.11), we 
have 
embedding algorithm for a pair of two 
pixels is listed in Figure 2.3 [Miel2006]. In 
each pair, the LSB of the first pixel contains 
one bit of data. Another message bit is 
hidden by a function of the two pixel values. 
Then the extracting method of secret 
message is mi=LSB(yi) and mi+1=f(yi,yi+1). 
 
 
 
 
 
 
 
 
 
 
 
Figure 2.3: The embedding algorithm of 
LSB matching revisited. 
 
2.3.2 Analysis 
According to the embedding algorithm, 
just one pixel value in a pair of cover image 
pixels will be changed, therefore it reduces 
the number of changed bits. The expected 
number of modifications per pixel can be 
computed as follows. 
2
)),(()()( 11   iiiiiii mxxfPmxPmxP  
…(2.15) 
where P is the probability function. If ones 
and zeros appear equally likely both in the 
message and in the LSBs of a cover image, 
on average, LSB matching and LSB 
matching revisited had 0.500 and 0.375 
modification per pixel, respectively. 
As a consequence, Mielikaine’s method 
has the same embedding capacity with LSB 
matching. At the same time, the number of 
changed pixel values is smaller. 
Furthermore, it has resistance against 
existing steganalysis. 
 
 
3. Proposed Data Hiding Method 
In this chapter, we propose a hybrid 
method to do data hiding by combining the 
message encryption and the LSB algorithm. 
The method improves the security with the 
secret message encryption before hiding 
data.  
 
3.1 Motivation 
Talking of the LSB replacement 
method in chapter 2, although the LSB 
method is simple, fast and has good 
embedding capacity, the method will make 
the stego-image have specific characteristics 
such as a skew histogram of gray values. 
There are some existing steganalysis 
methods which are successfully analyzed to 
use LSB method to embed information, such 
as χ2 statistical analysis [Frid2001]. Besides, 
due to the multiple growths of computing 
speed and parallel computing, the existing 
steganographic methods may be hacked by 
brute-force attacks. Therefore this thesis 
provides a data hiding method based on 
LSB method to enhance the security. Before 
embedding data, the method encrypts the 
secret message to distribute information. 
The concept of this method comes from 
ElGamal method in Cryptography 
[Stin2006][Trap2006], it is using the 
If mi = LSB(xi)  
yi = xi,  
   If mi+1= f(xi,xi+1)  
      yi+1= xi+1, 
 else yi+1= xi+11;  
If mi≠LSB(xi)  
yi+1=xi+1, 
   If mi+1=f(xi-1,xi+1) 
      yi=xi-1, 
 else yi=xi+1 
Figure 
messag
3.2.2 Ex
To
receiver
algorith
extracts
stego-im
messag
embedd
the inte
addition
original
the ima
hidden 
replacem
integer 
encrypt
and p, 
recover
the flow
Figure 
3.2: A flow
es. 
tracting a
 extract t
 can trac
m to get
 the right 
age to 
e B accor
ing metho
ger prime 
al inform
 secret mes
ge and de
message
ent metho
p and g
ed message
when p is
 the origin
chart of ex
3.3: A flow
chart of em
lgorithm 
he secret 
e back th
 it. First, 
k bits of e
obtain th
ding to th
d, then the
p, primitiv
ation to 
sage S. If 
tects the 
 obtained
d, but doe
, he can 
. Even tho
 large, it’s
al message
tracting me
chart of ext
bedding 
message, 
e embedd
the recei
ach pixel o
e encryp
e k-bit L
 receiver u
e root g, 
recover 
a hacker gr
image with
 by L
sn’t know 
get only 
ugh he get
 also hard
. Figure 3.3
ssages. 
racting 
 
the 
ing 
ver 
f a 
ted 
SB 
ses 
and 
the 
abs 
 a 
SB 
the 
the 
s g 
 to 
 is 
 
me
 
3.2
kno
g 
me
y=g
exp
dis
gen
the
wh
is 
com
[Go
alg
log
Go
tim
wh
com
 
 
4.
resu
cha
ima
dep
ran
bot
ssages. 
.3 Analysis
If a third 
ws the inte
and intend
ssage, he n
x mod p
onentiation
crete logari
eral, it’s ea
 other han
en y is give
still not 
puting di
rd1993]. 
orithm kn
arithms m
rdon’s prop
e is 
(log(Oe
en p is
putational
Experim
This chap
lts of th
pter 3. In 
ges ‘koala
icted in Fig
domly pick
h 512×512 
 
party get th
ger prime p
s to extra
eeds to fin
. The inv
 is based
thm of a nu
sy to get y
d, it’s very
n and p is 
any efficie
screte log
The asym
own for 
odulo arbi
osal [Gord
(log(log) 3
1
p
 a large
ly infeasibl
ental Res
ter present
e data hid
our exper
’ and ‘lin
ure 4.1. Th
ed up, the
images wit
e stego-im
 and primit
ct the em
d the x su
erse prob
 on find
mber modu
 given x, 
 hard to 
large. So f
nt algorit
arithms p
ptotically 
saving 
trary prim
1993], the 
))) 3
2
p
    
 prime, 
e. 
ults 
s the exper
ing algori
iments, tw
’ were u
ere two im
 cover ima
h 256 gray 
age and 
ive root 
bedding 
ch that 
lem to 
ing the 
lo p. In 
g, p, on 
solve x 
ar, there 
hm for 
roposed 
fastest 
discrete 
e p is 
running 
  (3.4) 
it is 
imental 
thm in 
o cover 
sed, as 
ages are 
ges are 
levels. 
To
we also
a mess
shown 
shown 
stego-im
original
(a) p=25
(c) p=25
Figure 
embed m
LSB rep
 
Table 4
stego-
 
In 
of choo
the ex
stego-im
 
 obtain the 
 use the 3-b
age. The 
in Figure 
in Table 4
ages look
 cover imag
7, PSNR=54.462
7, PSNR=54.435
4.5: The re
essage ‘ne
lacement m
.1: The PSN
images. 
Table 4.2, w
sing a diff
periments, 
ages are a
high embed
it LSB me
experiment
4.5. The 
.1 are ove
 much the
es. 
3    (b) p=6553
3    (d) p=6553
sults of our 
ws’ by usin
ethod.  
R values f
e demonst
erent prim
the PSNR
s high as ov
ding capac
thod to em
al results
PSNR val
r 40 and 
 same as 
7, PSNR=54.295
7, PSNR=54.345
method 
g the 3-bit
or 
rate the res
e number p
 values 
er 50. 
ity, 
bed 
are 
ues 
the 
the 
 
3 
 
3 
 
 
ults 
 in 
for 
Tab
diff
 
3-b
Tak
am
not
afte
sec
the
orig
ass
sho
Fig
me
ima
(c) 
 
 
5.
steg
rep
me
bef
pro
sec
cha
le 4.2: T
erent prime
However
it LSB re
ing Figure
ount of secr
 find the d
r embeddi
ret messag
 scene in t
inal one.
ociated wit
uld also be
(a)    
ure 4.6: Th
ssage by th
ge (b) after
after embed
Conclusi
In this 
anographic
lacement t
thod is to 
ore hiding 
perty of pr
ret messa
racters. A
he PSNR 
 numbers p
, the propo
placement 
 4.6 for e
et message
ifference o
ng. But, w
e is large, 
he sky is 
The choice
h the in-ha
 taken into 
     (b) 
e results of
e 3-bit LSB
 embeddin
ding mess
on and F
thesis, 
 method b
o improve
encrypt th
data, and 
imitive roo
ge’s conn
ll the P
values o
. 
sed method
is not v
xample, w
 is small, w
f the steg
hen the am
we could f
different fr
 of cover 
nd secret m
account. 
        (c
 embedding
 method: (a
g message ‘
age ‘speech
uture Wo
we propo
ased on t
 its securi
e secret m
we mainly 
ts to scram
ection w
SNR val
f using 
 
 with a 
ersatile. 
hen the 
e could 
o-image 
ount of 
ind that 
om the 
images 
essage 
 
) 
 
) cover 
news ’, 
’. 
rk 
sed a 
he LSB 
ty. The 
essage 
use the 
ble the 
ith the 
ues of 
[Sabe2007] A. Sabeti, S. Samavi, and M. 
Mahdavi, "Steganalysis of Pixel-Value 
Differencing Steganographic Method", 
IEEE Pacific Rim Communications, 
Computers and Signal Processing, 292-295, 
2007. 
 
[Stin2006] D.R. Stinson, Cryptography: 
Theory and Practice, Chapman & Hall/CRC 
(2006).  
 
[Trap2006] W. Trappe and L.C. 
Washington, Introduction to Cryptography 
with Coding Theory, Pearson International 
Edition (2006). 
 
[Wang2000] R.Z. Wang, C.F. Lin, and J.C. 
Lin, "Hiding data in images by optimal 
moderately significant-bit replacement", 
IEE Electronics Letters, vol. 36, no. 25, 
2069-2070, 2000. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
[Wang2001] R.Z. Wang, C.F. Lin, and J.C. 
Lin, "Image hiding by optimal LSB 
substitution and genetic algorithm", Pattern 
Recognition, vol. 34, no. 3, 671-683, 2001.  
 
[Wu2003] D.C. Wu and W.H. Tsai, "A 
steganographic method for images by 
pixel-value differencing", Pattern 
Recognition Letters, vol. 24, no. 9-10, 
1613-1626, 2003. 
 
[web01] 
http://en.wikipedia.org/wiki/Steganography, 
last access on May 27, 2010.  
 
[web02]  
http://edition.cnn.com/2010/WORLD/asiapc
f/04/30/taiwan.china.us/index.html, last 
access on May 27, 2010. 
「發展國際一流大學及頂尖研究中心計畫」補助國內專家學者 
出國參加國際學術活動報告 
                                                            97 年  12 月  21 日 
報告人姓名 
 
黃珮琪 
 
系  所 
及職稱 
 
資工系博士班學生 
 
出國目的 出席國際學術會議 時  間 
97 年 12 月 17 日~97 年 12 月 20 日
地  點 Shanghai, China 
發表論文 
題目（如有） 無 
報告內容應包括下列各項： 
一、參加會議經過  
EUC is a distinguished meeting which explores the related areas of embedded systems 
annually. EUC is the main conference, and is composed of several workshops about popular 
topics. All sessions, including tutorial, workshops, and panel discussion, had taken place 
simultaneously. The tutorial talked about multi-core supported security for embedded and 
ubiquitous applications. I am so glad to have an opportunity to visit this conference. Once 
registered, we can be permitted to attend all activities. I could choose some topics that I am 
interest in to attend because this conference provided a series of variety of fields. From the 
meeting, I met not only many scholars and researchers from renowned companies but many 
students and professors from famous university. The renowned professors from all over the 
world in the workshops could exchange the teaching experience of embedded systems. That 
makes me understand how important the curriculum of embedded systems is, and learns a lot 
of valuable opinions. 
In opening remark, EUC is honored to invite Yaoxue Zhang, Ministry of Education in 
China, who talked about the challenges and opportunities in transparent computing. In this 
talk, I understood that transparent computing is a new computing paradigm for service 
sharing. The professor presented a new mechanism, called Meta OS, to manage the separation 
of the programs and data. This mechanism is based on the Neumann architecture 
special-temporally to extend. Thus, sharing individual services can be easily performed and a 
sequentially virtual computing can be effectively acquired underlying different Operating 
System platforms. The professor introduced the idea because people easily share the hardware 
and software resources due to prompt development of computer network, but progress in 
operating system technologies and changes in computer architecture are so slow in several 
decades that users find it difficult to share from different software and hardware platforms. 
Therefore, by using this novel approach, the storages and executions of software programs 
and data can be taken apart by the transparent computing paradigm; for example, operating 
systems in different computers can connect with communication networks. That is, they 
figured out how to access different operating systems on a terminal platform or how to run 
different operating systems on several terminal platforms by means of networks. The required 
services from Clients or servers can execute personalized data and program which are stored 
in the storage servers in this paradigm. What services you can decide is a new idea to evolve 
programs and services. Furthermore, the professor also indicated some examples about the 
applications of this computing paradigm.  
「發展國際一流大學及頂尖研究中心計畫」補助國內專家學者 
出國參加國際學術活動報告 
                                                            99 年  8 月  30 日 
報告人姓名 
 
陳朝欽 
 
系  所 
及職稱 
 
資工系、資應所教授 
 
出國目的 出席國際學術會議 時  間 
99 年 8 月 21 日~99 年 8 月 27 日
地  點 Istanbul (土耳其-伊斯坦堡) 
發表論文 
題目（如有） 
(中文)  
(英文)   
報告內容應包括下列各項： 
一、參加會議經過 99 年 8 月 21 日下午 18:10 搭乘新加坡航空 SQ897 轉 SQ490 班機於當地 99
年 8 月 22 日上午 7:40 抵達伊斯坦堡 Havalimani 國際機場，隨即搭接駁 Shuttle 前往 The 
Marmara Pera 住宿旅館，隨後前往會場報到領取 Badge, AbstractBook, schedule books 與相
關資訊，並利用大會提供的資訊參加 Bosphorus Cruise 之遊以認識週邊文化。8 月 23 日
9:00-9:30 am 參加開幕式由 Ercil, Cetin, 等教授們分別致詞報告本次會議共有來自 53 個國
家 1250 學者參加，大會從 2140 篇投稿動用 1050 位審稿者選出 1147 篇，分成 385 篇口
頭報告與 762 篇海報展示。緊接著由密西根州立大學的 A.K. Jain 教授介紹 K.S. Fu award 
(傅京孫 獎)獲獎人瑞士 Bern 大學的 Horst Bunke 教授演講 
          Towards the Unification of Structural and Statistical Pattern Recognition 
    接著四天每天都各安排一位演講者(學界如哥倫比亞大學、業界如 Yahoo 都有)其餘論文
    分成每天 7 tracks and 2 Poster sessions 進行。23 日到 Bogazici University 參加 Welcome 
    Reception，25 日到 Ciragan Palace Kempinski 參加 Banquet。本次國際會議參加人數以美國
    最多，其次是中國(至少超過百人)，台灣也有數十人參加，會中也遇到國內多位知名 
    學者如柳金章、廖弘源、陳永昌、黃仲陵、張文鐘、陳祝嵩、王新民等十多位教授與 
    數十位學生。我幾乎全程參與，曾有一個北京大學的口頭報告者無法聽懂問題，也有許
    多中國的口頭報告者 PPT Slides 中錯誤百出，而我國的參加者都有充分的準備，非常令
    人欣慰。8 月 26 日當地下午 13:30 搭乘新加坡航空 SQ491 轉 SQ876 班機於 8 月 27 日下
    午 13:30 返抵桃園國際場。 
 
二、與會心得 我仔細聆聽多個演講，美國的學者不僅佔有語言優勢連 Slides 的製造都值得稱
讚，而中國的口頭報告者除了膽子比較大之外，語言的表達與會前的準備，都令人捏把
冷汗，值得我們借鏡。另外也有些許外國講者無故沒到，有些遺憾。 
本會議是大型知名會議，每兩年舉辦一次，下次將由日本筑波大學於 2012 年 11 月主辦。
參加本次會議除可以和國際知名學者便於近距離討論，也可從各方面觀察其他各國的 
學術水平。竭誠感謝國科會與清華大學的部份經費補助。 
三、考察參觀活動: 無。 
 
四、建議: 政府與各大學積極編列適當經費鼓勵學者多參加大型國際會議 (縱使沒有發表 
    論文)以提升台灣學術水準與知名度。 
五、攜回資料名稱及內容: 2GB flash memory for the contents of 1147 papers, Abstractbook。 
六、其他: 無。 
 
聯絡電話: (Tel/Fax) (03) 573-1078 / 572-3694      E-mail: cchen@cs.nthu.edu.tw  
 
簽名蓋章: 陳朝欽                            日期:  99 年 8 月 30 日 
 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/14
國科會補助計畫
計畫名稱: 結合浮水印、覆蓋隱喻學、與密碼學以作資訊保護
計畫主持人: 陳朝欽
計畫編號: 97-2221-E-007-122-MY3 學門領域: 影像處理
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
指導碩士班國際學生兩名畢業(貝里斯 與 甘比亞 各一人) in 2009, 2010. 
舉辦宏都拉斯暑期來華研習三次 (June-July, 2009, 2010, 2011) 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
