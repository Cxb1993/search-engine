Density Gradient Minimization with
Coupling-Constrained Dummy Fill
for CMP Control∗
Abstract— In the nanometer IC design, dummy fill is often
performed to improve layout pattern uniformity and the post-
CMP quality. However, filling dummies might greatly increase
interconnect coupling capacitance and thus circuit delay, and
might also lead to explosion of mask data due to the extra layout
patterns. Traditional dummy-fill algorithms try to make each
tile (window) density satisfy foundry’s density upper and lower
bounds under the coupling constraint. As technology advances,
however, it is not sufficient to just keep the pattern density vari-
ation of each layer within density bounds. The density gradient,
besides the density variation, plays a pivotal role in determining
the post-CMP thickness of modern circuit designs. In this paper,
we present the first gradient-driven dummy-fill algorithm to
address the density gradient and other classical objectives (such
as density variation, coupling constraints, dummy count) as well.
Our dummy-fill algorithm has the two distinguished features:
(1) Gaussian smoothing based gradient-driven multilevel dummy
density analysis to minimize density gradient level by level, and
(2) ILP-based fill synthesis to insert the fewest dummies within
the coupling-violation-free feasible regions while satisfying the
density constraints. Experimental results show that our algorithm
can achieve promising results by inserting minimal dummies to
reduce the density gradient and variation under the coupling
constraints with a reasonable runtime overhead.
I. INTRODUCTION
As IC technology advances to 65nm node and beyond,
one important interconnect yield loss comes from the copper
metallization in the CMP (chemical-mechanical polishing)
process. A non-uniform pattern density distribution on each
layer causes CMP to over polish or under polish, generating
metal dishing and dielectric erosion [7], [9]. In order to
improve CMP quality, dummy fill is a highly accepted process
to keep density variation of tiles (windows) on each layer
within the foundries’ density upper and lower bounds.
For dummy fill, there are some well-known performance
considerations to evaluate the filling results, including cir-
cuit timing degradation and restrictions on the number of
dummies. On one hand, dummy patterns may either connect
to power/ground nets (tied fills) or left floating (floating
fills), both of which may induce coupling capacitances, affect
interconnect delay, and lead to timing violations [13]. On the
other hand, those extra dummy patterns increase the mask data
∗Note that a 4-page preliminary report of this paper appeared in Proc. of
the 19th VLSI Design/CAD Symposium in Taiwan, which is a local event
and not a formal publication (as announced by the “symposium”). The paper
information is not cited here for the purpose of blind review.
size, lengthening the time of mask-making processes and com-
plicating the following time-consuming reticle enhancement
techniques, such as OPC (optical proximity correction).
Traditionally, dummy-fill algorithms adopt a two-stage tech-
nique of density analysis followed by fill synthesis [2]. The
density analysis first determines the available regions for
dummy patterns filling, which is a key step for controlling
the density of inserted dummies in each tile to satisfy the
density bounds under coupling constraints. The fill synthesis
then performs dummy insertion into these feasible regions,
responsible for the final positions and the number of inserted
dummies.
As technology advances, however, it is already not sufficient
to just keep the pattern density variation of each tile within
density upper and lower bounds. The density gradient (defined
as the maximum density difference among a tile and its
adjacent tiles), besides the density variation, has emerged
as a crucial objective that significantly affects the post-CMP
thickness planarity as well as mask distortion, and thus must be
considered during dummy fill (see articles from both academia
[12] and industry—XYALIS [6], Blaze DFM [10], [11], and
VCMP [14]). Figure 1 shows the difference between the
density variation and the density gradient. Density distribution
in the tiles of Figures 1 (a) and (b) has the same density
variation of 0.0523, while the distribution in (b) results in a
smaller density gradient (= 0.4) than that in (a) (= 0.7) and thus
can alleviate dummy-fill efforts (by inserting fewer dummies
to achieve desired CMP quality).
There are many performance-driven dummy-fill algorithms
in the literature, focusing on the wire density control [1],
[8], the variations of the dummy density in arbitrary win-
dows [3], or the fill area or lithography costs under coupling
constraints [5], [15]. However, none of the existing works
well and directly addresses the density gradient issues. (Note
that [3] intended to control the density variation in a group of
adjacent windows, which may contribute to the density gra-
dient reduction but not directly minimize the density gradient
itself.)
In this paper, we present the first gradient-driven dummy-fill
algorithm to address the density gradient and other classical
objectives (such as density variation, coupling constraints,
1
wf
sf s
sf
s
Wire Dummy
Fig. 2. The spacing rules of dummy fill.
Slot
(a) (b)
Tile
Wire Dummy fill region
Fig. 3. Dummy-fill region transformation from (a) a slot-based
partition to (b) a tile-based partition.
Definition 2: The maximum allowable dummy area of a tile is
the area summation of dummies which can be inserted into the
dummy-fill regions of the tile. The area bound of a tile is the
area summation of all segments plus the maximum allowable
dummy area. The coupling density bound of a tile is the ratio
of the area bound to the area of the tile.
Let Fu(t) and Fl(t) be the respective density upper and
lower bounds for a tile t given by foundries, the density upper
bound Bu(t) and lower bound Bl(t) of t can be defined as
Bu(t) = min{Dc(t), Fu(t)}
Bl(t) = max{ds(t), Fl(t)},
where ds(t) represents the segment density of t.
With the density bounds Bu and Bl, we can guarantee that
the dummy insertion can satisfy both the coupling constraints
and foundry density rules. Therefore, we do not need to
explicitly consider the coupling constraints in the following
procedures. Consequently, the gradient-driven dummy-metal
insertion problem can be defined as follows.
The Gradient-Driven Dummy-Metal Insertion Problem:
Given a routed layout partitioned into global tiles, where
each tile has the specified density upper bound Bu and
density lower bound Bl, minimize the density gradient and
the number of dummies.
Note that for each tile, the coupling density bound is the
maximum density with no coupling violations, but it might not
result in the minimum gradient. Thus, the coupling density
bound will be treated as an upper bound in the following
procedures.
III. GRADIENT-DRIVEN DUMMY-FILL ALGORITHM
In this section, a novel dummy-fill algorithm is presented.
First, a multilevel density analysis is presented to decide the
density of each tile. According to the density analysis, the
minimum number of dummies are then inserted to achieve
the dummy-density requirement.Figure 5 illustrates the overall
algorithm flow.
A. Multilevel Dummy Density Analysis
Traditionally, the methods for density analysis and fill
synthesis are usually based on discretization; e.g., the layout is
partitioned into tiles, and a sliding window is used to compute
the density of tiles [3]. However, these methods may incur the
“discretization gap” and the processing ordering problems in
density analysis.
To remedy this deficiency, we present multilevel density
analysis to handle the discretization gap and avoid the process-
ing ordering problem. We denote an insertion graph of level
i as Gi, and each Gi is divided into tiles of different sizes.
A tile of Gi is denoted by ti(x, y), where x and y give the
coordinate of the tile, with the bottom-left tile being ti(1, 1).
For convenience, if we do not specify the level of a tile, it is
a level-0 tile; if we do not specify the coordinate of a tile ti,
it can be an arbitrary tile of level i. Each Gi contains a set
of non-overlapping windows. A window of Gi is denoted by
wi(x, y), where x and y give the coordinate.
The multilevel framework contains two stages of coarsening
followed by uncoarsening. In the coarsening stage, we decide
the density of each ti by performing the local gradient min-
imization within each window independently. This process is
called density assignment. Then the W 2(W×W ) tiles of each
window are merged into a ti+1 tile for density assignment in
the next level i + 1 to reduce the discretization gap level by
level. In the uncoarsening stage, we extract the density of each
tile. For level i, each ti is recovered to W 2 number of ti−1.
The process repeats until level 0 is reached, and the extracted
density of each tile is used to compute the number of dummies,
which will be explained in Section III-B.
3
Identify coupling-violation-free dummy fill regions [15]
Coupling constraints
Coupling density upper
and lower bounds
Tile-based layout
Coarsening 
analysisGradient-driven 
multilevel dummy 
density analysis
Dummy number assignment
Dummy fill results
Uncoarsening
analysis
Routing result
Fig. 5. The overall flowchart of our gradient-driven dummy-fill
algorithm.
of the level-L tiles give the final value of the insertion. Then,
we extract the density value of the tiles at the uncoarsening
stage. Figure 4 illustrates an example with three levels. In level
0 of the coarsening stage, gradient minimization is performed
in a 3 × 3 window (represented by the red/bold square), and
then the average density of these nine level-0 tiles is taken as
the initial density of the corresponding level-1 tile, which is
(0.2 + 0.2 + 0.2 + 0.2 + 0.2 + 0.2 + 0.3 + 0.3 + 0.3)/9 '
0.23. Then, level-1 gradient minimization is performed, and
the average density of these level-1 tiles is taken as the initial
density of the corresponding level-2 tile, which is (0.26 +
0.27+0.27+0.28+0.28+0.28+0.29+0.29+0.30)/9 = 0.28.
After the level-2 gradient minimization, the coarsening stage is
finished, and then the uncoarsening stage starts and it extracts
the final insertion density.
2) Uncoarsening Stage: After the final density of the
topmost level L is calculated, the level-L tiles are decomposed
level by level to extract the density of level-0 tiles. Note that
the windows in the coarsening stage are not needed in the
uncoarsening stage. Since in the coarsening stage, the density
value dc of a tile ti+1(xˆ, yˆ) is the average of the W 2 level-i
tiles in Ti(xˆ, yˆ), the extracted value of ti(x, y), du(ti(x, y)),
(a)
(b)
Fig. 6. The metal density distribution of layer 1 for the circuit S5378.
(a) The metal density distribution before Gaussian smoothing. (b) The
metal density distribution after Gaussian smoothing.
can be computed as follows:
du(ti(x, y)) ={
dg(tL(x, y)), if i = L
dg(ti(x, y)) + du(ti+1(xˆ, yˆ))− dg(ti+1(xˆ, yˆ)), if i < L.
As illustrated in the right part of Figure 4, after the level-2
gradient minimization in the coarsening stage, the density of
the bottom-right level-2 tile is changed from 0.28 to 0.31, and
thus the density of each corresponding level-1 tile is increased
by 0.03. For the bottom-right level-1 tile, since its density is
changed from 0.23 to 0.31, the density in each corresponding
level-0 tile is increased by 0.08. Finally, the insertion density
of each level-0 tile is extracted, and we can perform dummy
number assignment to decide the number of inserted dummies.
B. Dummy Number Assignment
After the multilevel density analysis, the density of each
tile has been determined, and thus the density of dummy
features in a tile t can be computed as dd(t) = du(t)− ds(t).
Since the tile must be a level-0 tile and each tile is processed
independently, we omit the level subscript and the coordinates
for easier presentation.
1) ILP Formulation: The objective of the dummy number
assignment is to determine the number of dummies inserted
in each dummy-fill region and minimize the number of total
dummies. For a given tile t, suppose there are n dummy-fill
regions R1, R2, . . . , Rn. Let ri be the number of dummies
5
TABLE I
COMPARISON FOR DENSITY OF TILES.
avg. max std. avg. max std. avg. max std. avg. max std.
Mcc1 1262298 34.59% 56.23% 6.55% 30.88% 45.69% 15.06% 160.5 163821 21.34% 37.54% 1.77% 21.60% 36.34% 3.58% 171.2
Mcc2 20117831 36.14% 52.43% 4.54% 33.58% 41.93% 10.42% 7249.2 4282218 22.32% 43.62% 3.56% 23.00% 35.39% 7.24% 7292.3
Struct 9004650 23.90% 32.71% 2.96% 20.36% 25.74% 7.99% 45.2 159457 20.15% 20.33% 0.09% 20.16% 20.33% 0.16% 72.2
Primary1 7102170 25.74% 33.41% 4.21% 23.04% 33.17% 8.67% 31.6 188771 20.14% 20.32% 0.08% 20.15% 20.32% 0.14% 52.7
Primary2 24897686 22.90% 29.01% 2.38% 20.16% 21.38% 6.30% 427.6 360221 20.11% 20.25% 0.07% 20.13% 20.25% 0.12% 489.9
S5378 269916 27.44% 40.15% 3.74% 27.15% 38.06% 6.49% 20.7 53527 21.76% 30.29% 1.16% 21.97% 25.92% 2.04% 22.4
S9234 230220 28.37% 48.11% 4.94% 27.92% 41.89% 8.59% 14.2 58230 21.96% 30.78% 1.28% 22.09% 24.30% 2.23% 16.5
S13207 657861 26.88% 38.67% 3.41% 25.88% 33.75% 6.16% 72.8 141723 21.48% 28.89% 1.19% 21.39% 25.54% 2.07% 76.3
S15850 721317 26.86% 38.62% 3.03% 26.30% 33.28% 5.33% 99.3 155336 21.28% 30.03% 1.03% 21.29% 22.50% 1.79% 102.6
S38417 2100467 26.84% 36.53% 2.38% 25.76% 30.89% 4.52% 329.5 248582 20.78% 32.11% 0.78% 20.82% 21.57% 1.36% 336.6
S38584 2460061 26.36% 32.91% 1.94% 25.90% 32.82% 3.45% 517.5 277747 20.65% 28.42% 0.57% 20.68% 21.44% 0.99% 526.2
Dma 1457877 24.84% 46.17% 4.59% 24.43% 31.26% 11.28% 66.8 321635 21.75% 43.99% 2.65% 20.52% 21.05% 7.15% 100.9
Dsp1 3648742 26.00% 49.25% 7.39% 32.65% 49.25% 24.35% 290.3 1012893 21.19% 43.00% 2.27% 20.20% 20.60% 6.07% 329.8
Dsp2 2815009 25.63% 49.39% 7.27% 32.70% 49.39% 24.83% 188.9 778375 21.08% 41.03% 1.82% 20.30% 20.66% 4.86% 230.7
Risc1 9071800 26.15% 48.23% 7.33% 31.45% 46.99% 22.15% 252.3 3208787 22.01% 48.23% 4.44% 20.23% 20.43% 11.72% 312.2
Risc2 7235118 26.12% 48.10% 7.41% 31.72% 48.10% 22.74% 395.8 2626317 22.01% 48.10% 4.04% 20.25% 20.45% 10.79% 446.0
Comp. 1.00 1.00 1.00 1.00 1.00 1.00 1.00 1.00 0.19 0.79 0.80 0.33 0.78 0.65 0.31 1.19
Density of layer 1Circuit
Time (s)
CDFm Ours
Time (s)#Dummy
Density among layers
#Dummy
Density among layers Density of layer 1
TABLE II
COMPARISON FOR DENSITY GRADIENT BETWEEN TILES.
avg. max std. avg. max std. avg. max std. avg. max std.
Mcc1 7.14% 35.81% 5.87% 5.28% 12.53% 12.31% 1.59% 14.42% 1.80% 1.81% 11.73% 3.62%
Mcc2 4.40% 14.67% 2.39% 3.53% 8.16% 5.07% 2.23% 16.84% 2.54% 2.80% 12.07% 5.21%
Struct 1.41% 5.75% 1.34% 0.56% 5.67% 2.74% 0.16% 0.33% 0.07% 0.19% 0.33% 0.13%
Primary1 2.38% 13.09% 2.54% 1.61% 10.34% 4.60% 0.14% 0.32% 0.08% 0.17% 0.32% 0.15%
Primary2 1.22% 3.97% 0.97% 0.20% 1.25% 2.44% 0.12% 0.25% 0.05% 0.14% 0.25% 0.10%
S5378 5.38% 15.88% 2.53% 5.38% 12.85% 4.37% 1.99% 10.00% 0.96% 2.18% 5.36% 1.70%
S9234 6.31% 20.79% 3.18% 6.27% 14.01% 5.52% 2.02% 8.67% 1.11% 2.25% 4.26% 1.96%
S13207 4.19% 14.62% 1.98% 3.54% 9.24% 3.61% 1.53% 7.54% 0.91% 1.49% 5.52% 1.59%
S15850 4.13% 12.50% 1.92% 3.64% 8.81% 3.43% 1.38% 9.90% 0.79% 1.36% 2.41% 1.38%
S38417 2.91% 9.32% 1.42% 2.28% 6.67% 2.68% 0.93% 9.97% 0.85% 0.89% 1.53% 1.47%
S38584 2.80% 8.97% 1.29% 2.41% 7.08% 2.34% 0.79% 8.24% 0.68% 0.79% 1.38% 1.18%
Dma 3.39% 19.50% 3.30% 1.77% 10.22% 9.01% 2.23% 21.45% 3.10% 0.60% 1.01% 8.57%
Dsp1 2.90% 24.33% 3.69% 2.87% 24.33% 9.03% 1.49% 20.08% 2.50% 0.14% 0.57% 6.95%
Dsp2 2.66% 26.81% 3.62% 2.85% 26.81% 8.88% 1.24% 17.27% 1.97% 0.14% 0.59% 5.53%
Risc1 2.66% 21.15% 3.52% 2.74% 18.79% 8.62% 1.77% 21.15% 3.12% 0.14% 0.40% 8.62%
Risc2 2.98% 26.49% 3.92% 2.67% 17.95% 9.64% 2.02% 26.49% 3.57% 0.15% 0.45% 9.88%
Comp. 1.00 1.00 1.00 1.00 1.00 1.00 0.37 0.66 0.51 0.32 0.31 0.53
Density gradient among layers Density gradient of layer 1Circuit Density gradient of layer 1Density gradient among layers
CDFm Ours
computation in [15] as CDFm, both dummy insertion results
of ours and CDFm would meet the coupling constraints.
Also note that since our dummy insertion is performed layer
by layer, the statistics of a single layer is more significant
than that of all layers. Considering the metal density of layer
one alone, our algorithm can achieve 22%, 35%, and 69%
reductions for the average, the maximum, and the standard
deviation, respectively.
Moreover, the number of dummies inserted by our algorithm
is on average only 19% of that inserted by CDFm. This great
reduction is mainly contributed from the gradient minimization
of our algorithm. If the original density of a region before
dummy fills is low and uniformly distributed, our algorithm
will not insert any dummy into that region since the density
gradient is small, but the CDFm algorithm would still try
to insert as many dummies as possible under the coupling
constraint. The runtime overhead of our algorithm is only 19%
over CDFm, implying that our method can effectively reduce
the density variation within acceptable runtime. The dummy
7
國科會補助計畫衍生研發成果推廣資料表
日期:2011/01/03
國科會補助計畫
計畫名稱: 總計畫
計畫主持人: 張耀文
計畫編號: 96-2628-E-002-249-MY3 學門領域: 積體電路及系統設計
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
ACM ISPD Contest: 1st Place (2009) &amp； 3rd Place (2010) 
ACM CADathlon Contest: 1st Place (2009) 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 ■申請中 □無 
技轉：□已技轉 ■洽談中 □無 
其他：（以 100字為限） 
