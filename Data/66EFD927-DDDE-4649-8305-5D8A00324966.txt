1 
 
壹、  計畫內容及目的  
一、  前言及背景說明 
在技術發展史上來看，分散式系統已經有初期的雲端概念，然而當時並沒有普及
的網路架構與隨身可上網的裝置作為基礎，現今完善的網路環境則啟動了雲端技術的
蓬勃發展。整個雲端的架構可以說是將早期的大型主機與終端機架構中主機到終端機
的連線改為網路媒介，另外將單一主機改為大型伺服器群組。雲端議題之所以倍受關
注，它表彰的精減成本精神是最切合企業需要的部份，更呼應了當前全球節能減碳的
大趨勢。 
雲端帶來了許多好處，技術瓶頸慢慢被突破，雲端服務已經開始充斥在一般民眾
的日常生活之中。但是當資料大量集中到雲端裡面的時候，就衍生了許多安全議題。
有別於以往個人電腦的安全問題，在雲端裡面若發生安全性的問題，後果可能是影響
到所有在雲端活動的使用者。因此，安全性要求是雲端系統必備的條件之一，而除了
保障使用者儲存的資料不會在未經許可下被窺視和竄改外，若系統能提供多樣性的功
能（如錯誤修正、內容分享、存取控制等）將使得雲端基礎建設功能性更加完備。 
除此之外，由於現今的網路環境充斥著各種攻擊行為，傳統的做法是由各主機或
服務自行建構入侵偵測及防護系統，這樣的做法在雲端環境並不可行，其理由是雲端
平台上的服務與虛擬主機所建構的各式入侵偵測及防護系統不但功能上互相重複，且
也會浪費大量的資源並明顯的拖累整體的系統效能。相較之下，將入侵偵測與防護系
統建構在底層的雲端平台是一個較有效率的設計，由於底層的雲端架構已將網路中已
知的一般攻擊隔絕，其上層的各系統可以專注於提供各自的服務，不但可以省下大量
的投資，亦可解決運算資源被浪費在重複架設的入侵偵測防護系統之上。 
不同於已知的一般攻擊，傳統透過特徵偵測或靜態分析的技術對垃圾郵件與數量
更為龐大且變化更為快速的病毒成效不彰，新型的攻擊手法亦使傳統病毒碼的偵測效
益降低。先進的惡意程式撰寫技術，加殼（Packing）、多型（Polymorphism）、變形
（Metamorphism）、核心等級匿蹤技術（Kernel Level Rootkit）等，會讓同一種行
為的惡意程式有不同的病毒特徵。故國內外學者在近年來皆朝著動態分析方式來萃取
惡意程式的行為特徵，而不再是靜態的二進位執行檔案之特徵。 
目前分析技術可分成靜態分析（static analysis）與動態分析（dynamic analysis）
兩大類，靜態分析將能夠針對檔案的內容做檢測，希望能夠找出不應該存在於該檔案
的內容，或是能夠判斷該檔案是否有可疑的加殼或加密行為。而動態分析而是直接模
擬運行時的狀態，利用已知的動態堆疊資訊取得技術，來檢測該檔案是否在執行時
期，有取得堆疊資訊的能力。由於動態分析需要耗費大量的運算能力，故如何利用雲
端的運算彈性來進行動態分析亦為一個相當有價值得研究課題。 
綜合以上所述，雲端技術為目前資訊科技的重要趨勢，故如何提供一個安全的雲
端環境是目前最重要的研究課題之一。 
3 
 
計算隱私性則是希望保障使用者的計算內容可以不被第三者得知，包括提供計算
服務的雲端主機群也是。乍看之下會覺得這樣的假設很矛盾，既然希望由雲端來協助
計算，又希望計算的內容不被洩漏，但在密碼學中的確有這樣的演算法存在，這類的
研究稱為 secure computation。然而在 secure computation 研究中，長年來無法克服的問
題是針對不特定的運算程序，傳輸量一直都與計算程式本身成正比關係，也就是說當
計算的程序越複雜，那麼使用者要上傳的資料量就越多。針對這個議題，fully 
homomorphic encryption 是一個重要的研究，在本研究中我們的目標是了解其運作方
式並進行在雲端中運用的實用性評估。 
 
 基於機器碼之 Windows 惡意程式行為分析雲端平台 
惡意樣本的蒐集已是資安相關領域中相當重要的問題，許多樣本蒐集平台也紛紛
被開發出來。以往的樣本蒐集大多採取Honeypot的方式來誘捕攻擊者，分析其一連串
的入侵手法以及殘留在電腦系統中的惡意檔案。但利用Honeypot蒐集的效率並不高，
故有學者紛紛提出增加被攻擊的機率以提高樣本蒐集的速率。由於雲端技術的誕生，
使用者可以靠著自行架設的機器來擷取網路的檔案，並且可以多台同時合作和達到橫
向擴展(Horizontal expandable)來達到運算的可擴充性。利用 MapReduce 的雲端計算架
構來平行化擷取網路檔案，可以讓使用者在最短的時間內建置自己檔案樣本來源。 
近年來，惡意程式樣本分析也因虛擬機器的發展，而有了更多分析的可能性。透
過虛擬機器所提供的隔離性與對系統的完全控制，可以讓分析人員深入的了解其資料
流向以及對系統的影響。這些利用虛擬機器分析的系統，因為需要龐大的運算能力來
模擬整個系統的運行，所以無法大量的被應用在現實生活中。尤其是在樣本儲存的架
構中，傳統的 SQL-like 的資料庫已被證實其存取速度會因項目數量增加而減少。在分
散式儲存系統中的 Cassandra 利用 DHT 的方式來儲存資料，除了存取時間不與資料量
的大小成正比，還可以輕易的擴充儲存節點，非常適合用來儲存惡意樣本。儲存在資
料庫中的惡意樣本除了可以供研究使用，也可以利用分群的技術來實作未知樣本的惡
意行為偵測。 
結合分析以及樣本蒐集的惡意樣本分析平台可以實際的運用在病毒分析與偵測的
領域。此外本系統的創新亦包含如何掛載不同種類的分析工具，甚至往後可以推廣到
其他相關研究或是提供樣本給學術界研究分析。為了在為期一年的開發期完成，我們
評估了不同種的工具系統，並且修改和整合其原始碼至此子系統。除了整合現有的工
具，還實作一些機器管理機制以及節點間通訊協定，讓此系統更加有彈性。在實作部
分，我們利用高階語言來物件化功能、提高可讀性和簡易化偵錯以縮短開發時程，預
計能在第一年度計畫結束前完成。 
 
 基於 Xen Hypervisor 之即時雲端環境入侵偵測與反制 
IaaS 雲目前市場的領導者是 Amazon。Amazon 的 EC2 (Elastic Compute Cloud) 提
供客戶透過網際網路配置虛擬機器。如下圖所示的是三家公司 A、B、C 分別在 EC2
上所配置到的虛擬機器。以這個例子來說，在底層是由四台實體機器所構成。每台實
體機器上有安裝 Xen Hypervisor 來提供虛擬化的服務。用戶可以在所配置到的虛擬機
器上安裝各自所需的作業系統 (如 Linux、 OpenSolaris、Windows Server 等) 以及所
5 
 
三、  計畫目的  
在網路與行動裝置的催化下，雲端服務已是 IT 產業的重點技術，因此雲端的安
全問題就顯得格外重要。本計畫的目的在於統整各子計畫以研發出一套新的整合式安
全雲端平台，此平台不但能提供安全且支援多功能的雲端儲存機制，平台本身亦具有
入侵偵測與預防的功能，並針對多變的惡意程式提供一套包含動態與靜態兩種分析方
法的雲端分析系統。 
本計畫建構一個包含多面向的雲端安全服務平台，其中包含以下三大子系統：支
援多樣功能之雲端資料安全儲存子系統、即時雲端環境入侵偵測與反制系統、與雲端
惡意程式行為分析系統。本系統之架構如下圖： 
Cloud Platform for Secure Storage, Intrusion Detection, Malware 
Behavior Analysis and Network Observation 
System Architecture
Secure Xen Hypervisor with 
IDS/IPS
( Public Cloud )
Subproject 3 by Prof. Wu
Multi-functional 
Secure Cloud Storage System
Subproject 1 by Prof. Tzeng
Malware
Analysis
A Customized 
Private Cloud
Subproject 2 by 
Prof. Shieh
Malware
Analyzing 
Cloud
Subproject 2 by 
Prof. Shieh
Connections
Internet
Known
Attacks
Connections
 
如上圖，來自於 Internet 的連線將會先經過即時雲端環境入侵偵測與反制子系
統，由此子系統負責防阻已知的攻擊類型，以提供一個安全的雲端平台環境。 
而建構在此雲端平台之上的雲端資料安全儲存子系統可保證儲存資料的正確性與
私密性，並可利用 homomorphic encryption 等技術提供加密後資料的比對與搜尋，以
提供更多功能性。針對已儲存在雲端儲存系統中的各類型檔案，本系統亦提供惡意程
式行為分析子系統。有別於傳統的特徵式分析，此子系統著重在惡意程式的行為模式
分析，以針對可能的惡意行為找出其行為特徵。 
綜合來看，所有來自於 Internet 的行為大致上可分為正常存行為、一般攻擊行為
與複雜攻擊行為三種，這三類行為都會先經過即時雲端環境入侵偵測與反制子系統的
檢查。其中，屬於一般攻擊的類型都會在這一個階段被擋下，沒有侵入後端系統的機
會；而一般正常的存取行為會被導向到雲端資料安全儲存子系統，進行資料存取的動
作；最後，疑似為複雜攻擊的程式，會被導向到惡意程式行為分析雲端平台，進行惡
意程式行為分析。而分析的結果，亦可回饋至前端的即時雲端環境入侵偵測與反制子
系統，以加強前端系統的防護能力。 
7 
 
在開始進行實際的整合工作之前，總計畫研究人員必頇先請各子計畫提供技術
文件。所應取得的文件，依各子計畫別說明如下： 
子計畫一：應先取得所有理論背景的簡介、實作方式、及相似理論的比較表。 
子計畫二：應先取得目前已知惡意行為分類和對應之偵測/分析方式對照表。 
子計畫三：應先取得 Xen Hypervisor 的安裝操作說明以及其開發環境。 
 構建整合系統之基礎軟硬體架構： 
各子計畫的系統架構以及平台規劃完成以後，總計畫應向各子計畫調查軟硬體
需求，並開始架設所需要的整合式平台。之後只要各子計畫一有具體成果，總
計畫就可立刻開始進行實體系統的整合工作。 
 技術成果整合： 
大約在計畫第一年後期各子計畫開始會有研究成果出現，總計畫部份將在這個
時後開始把子計畫成果整合進先前架設的平台，這個部份將會需要各子計畫的
人力以及技術支援。目前可以預期在理論成果部份需要安排共同討論時間，可
縮短大家自行研讀的時程；實作成果部份應該提供系統需求、詳細安裝說明、
以及使用者手冊。 
 測詴與修正： 
系統初步整合完成以後，會需要一份詳細的測詴計畫，針對雲端安全系統的各
項功能做整體性測詴。而針對分屬不同子計畫的功能，這些測詴計畫也可能包
含不同的項目。若經過測詴有發現問題，必頇立刻通知各子計畫開始規劃修正
工作。 
 撰寫總成果報告： 
最後的總成果除了一個具高度整合性之雲端安全服務及測詴平台建構方案以
外，還必頇提供一份完整的成果報告。這份報告除了實際系統的各種說明文件
以外，也應該包含所有相關的發表論文，最後並把整體系統設計理念文件化，
以便相關研究者可以在這個基礎上繼續更深入的研究。 
9 
 
各子計畫已開始陸續回報各項研究成果與技術細節資料，總計畫已開始進行成果
整理與報告撰寫前的準備工作。 
 
 子計畫一：支援多樣功能之雲端資料安全儲存 (期中目前完成度：80%  期末預
估完成度：100%) 
本子計畫利用公開金鑰加密系統、pairing 運算、容錯編碼技術、hidden 
keyword search、homomorphic signature 等技術建構出一個同時兼具隱私性、容錯
性、完整性的分散式安全雲端儲存系統。在功能性上，本系統不但提供了可靠的雲端
安全儲存，亦可針對儲存的內容進行兼顧隱私保護的搜尋比對與資料授權驗證等多項
功能。在效率方面，由於其分散式系統架構不需要中央控制單元，因此各項功能可以
在各地平行處理，以同時提升執行效率與可靠度。本子計畫之具體工作項目與完成度
如下： 
 保護隱私的雲端偵測入侵系統  (期中目前完成度：80%  期末預估完成度：
100%) 
在本子系統中，我們用 Linux + Hadoop 來當作我們系統的平台，然後在這個平
台上開發我們的雲端安全服務─Privacy-Preserving IDS. 而本系統分為兩大部
分：使用者端和服務者端。使用者端是一個 java 程式，用來收集使用者電腦的
資訊，經過隱私處理後，傳到雲端服務上做分析處理，在做最後的判斷，來判
斷使用者的電腦是否安全無疑。服務者端採用 MapReduce 的程式架構來完成
hidden keyword search 的功能，用來比對使用者的上傳。除此之外，針對比對的
資料庫，我們事先做好隱私處理，將這些資料放在 Datanode 上(HDFS)，用來做
比對處理，目前系統已大致完成上述功能，但仍然還在測詴和實驗階段。 
 非集中式雲端儲存系統中兼顧資料隱私性與系統功能性之研究  (期中目前
完成度：80%  期末預估完成度：100%) 
在雲端儲存系統中可以使用加密系統來保障儲存資料的隱私性，但加密機制限
制了系統對儲存資料可提供的功能，因為我們不容易對加密過的資料進行操
作。我們針對儲存系統中資料的轉移功能(data forwarding)進行研究，並發展出
一個公開金鑰加密系統，其不但符合雲端儲存系統分散式的架構，更支援了加
密資料的安全轉移。使用者不僅可以安全的將資料儲存於雲端儲存系統中，更
能夠安全的將資料轉移給其他使用者。 
我們研究目前主要的成果在於對加密後的資料可以進行安全的轉移，透過儲存
伺服器的運算協助，使用者可以將資料轉存成被授權使用者才能解開的密文。此
初步成果主要的貢獻在於克服了分散式環境造成的困難，使得儲存資料再被進
行轉移之後，整體儲存系統仍保有容錯儲存的功能。在證明上使用了密碼學中
正規的 reduction 來證明公開金鑰密碼系統可抵擋 Chosen plaintext attack，並使用
隨機圖的方式分析系統整體具有的資料讀取成功機率。 
 非集中式雲端儲存系統中系統修復機制之研究  (期中目前完成度：70%  期
末預估完成度：100%) 
11 
 
成使用者的計算負擔，以及儲存伺服器的儲存負擔，每增加一位代理人，系統
上只會增加一把代理金鑰，使用者只需要利用自己的私密金鑰去產生代理金
鑰，不需要去存取在儲存伺服器上的資料及代理金鑰，授權的動作將十分簡
潔。 
 
 
 子計畫二：雲端惡意程式分析平台 (期中目前完成度：90%  期末預估完成度：
100%) 
本子計畫已建構出一個高度模組化之雲端惡意程式分析平台，此平台可有效利用
雲端的運算能量對各式惡意程式進行行為分析，其關鍵創新技術分為惡意程式行為分
析技術與雲端運算平台設計兩大項。 
在惡意程式行為分析方面，本子計畫以 libemu 為基礎開發了一個 CPU 模擬器，
此模擬器可追蹤程式執行階段在暫存器與堆疊中之資料流，相較於一般安裝在 OS 層
的分析器，此技術可在較底層進行分析以避免惡意程式的各式干擾動作；而和一般虛
擬機器的做法相較，由於不需要浪費運算資源在模擬額外的 I/O 動作，此技術亦具有
較高的執行效率。在雲端運算平台設計方面，為了能最大化整體運算效率，本計畫不
使用目前市面上常見的雲端虛擬機器管理系統，而是以 Nutch、Cassandra 與 Redis 為
基礎開發一套針對整體產出最佳化之私有雲(Private Cloud)，此私有雲與前述之惡意程
式行為分析系統結合後可針對充斥在網路中的各式惡意程式檔案進行有效的截取與分
析。以下將簡述本子計畫所規畫之工作項目與其進度： 
 網路檔案蒐集  (期中目前完成度：100%  期末預估完成度：100%) 
此模組藉由網域種子清單當作擷取網站檔案模組的起點，透過瀏覽這些網頁找出
對外連結的 URL 以擴充探索的網域範圍，並分析網站回覆網頁(html, htm)中的連
結以擷取這些放置在網站的檔案。本系統並非只是單純的下載檔案，而是與搜
尋引擎類似，透過多層的網路連結關係，擴大搜索整個網路上的檔案。本項目以
Nutch 為基礎，開發了一個網路檔案收集系統，不同於一般的搜尋引擎，本系統
之設計可將運算與網路資源集中在本計畫所需要的爬網功能，並靠著平行處理的
運算效益與分散式資料庫來解決單一台機器爬網速度不足的情況。 
 分散式的資料儲存  (期中目前完成度：90%  期末預估完成度：100%) 
NoSQL 資料庫提供了 Key-Value 的存取方式，利用特殊的雜湊函式來保證讀取
和寫入為常數時間。本子系統將結合分散式資料庫 Cassandra 與集中式
Key-Value 資料庫Redis來實現分散式分析資料儲存。由於Cassandra是分散式的
資料庫，在存取的時間與存取的能力較傳統 SQL 系統來的有優勢。但是其缺點
是無法快速且按照順序地列舉其儲存的資料。本子計畫之創新技術在於如何利
用不同 NoSQL 資料庫之特性來達到快速的查詢到待分析的工作。為了依序處理
分析平台內待處理的分析工作，我們整合了集中式 Redis 來實作出一個可於常數
時間查詢的List資料結構來實現佇列的功能，依序地從工作佇列取出欲分析的工
作識別（tasd ID）。在按照取出的工作識別去 Cassandra 資料庫內尋找更多的檔
案資訊。如此便不會有分析工作等待時間過長而導致部分工作不會進入程式分
析系統。 
13 
 
行。本分析模組從 dom 0的 monitor and control center 經由我們所設計的
hypercall直接對 hypervisor發出需求，利用讀取被監控的 dom U的暫存器的值
來找到負責處理系統呼叫函式的記憶體位置，並利用插入特權指令造成 VMExit
的方法來攔截系統呼叫。 
這個部分已經可以成功的攔截系統呼叫，不過在通知 dom 0的 monitor and 
control center 的這個步驟，現在還只能用 hypervisor的 message buffer 來傳
遞訊息，我們計畫要用 hypervisor提供的 event channel以及 shared memory 
page來建立 dom 0 與 hypervisor之間的通信，使得 dom 0更容易的來處理
hypervisor傳過來的資訊。 
 記憶體內容物件的讀取、解析與制動 (期中目前完成度：80%  期末預估完
成度：100%) 
以系統的角度來說，記憶體是一項不可或缺的資源，任何等待被執行的 process
都需要經過 scheduling 拿到 cpu cycle 以及合法的 memory space 才可在 OS 內
運行，也正因為如此，以記憶體為基礎的防護機制就變的相當重要，不管是一
個等待被執行的惡意程式、著名的 buffer overflow 或是一段被插入在 memory 
space的 nop-slay malicious code，都可以藉由記憶體內容物件的讀取、解析
與制動來加以防範。本分析模組在 monitor and control center 經由 xen 
hypervisor所提供的 API (xc_map_foreign_range) 來達到讀取被監控對象
guest VM的記憶體內容。但是從記憶體拿出來的內容是屬於 low level 
information，因此我們得透過解析將這類資訊轉換成 high level 
information，並從中取得 process的詳細資訊。在解析部分，目前我們仍在嘗
詴如何正確的將 low level information 轉換成 high level information，得到
process詳細資訊後，經由解析的結果，我們便可進一步利用 Intel 
VMX(Virtual Machine Extensions)所提供的 EPT(Extended Page Table)對
process所屬記憶體進行存取權限管理，透過修改 EPT裡 memory block的 access 
bits(Read、Write、Execute)來管理該 memory block是否能被 process使用，
進而達到反制惡意程式的效果，但以 OS 的角度來看，拒絕某個合法 memory 
block被使用是難以想像的事，也正因為如此，以目前的做法透過 EPT將 memory 
block設定成不能存取，這樣會造成 guest VM 不斷嘗詴的去讀取這個 memory 
block，最後導致 guest VM crash。因此在反制方面我們還需要以不影響 guest 
VM運作為前提，調整成更 friendly的反制動作。 
 開發 online 式的磁碟檔案系統及磁區觀測及解析、制動技術 (期中目前完成
度：20%  期末預估完成度：100%) 
很多時候，當駭客入侵系統時，有可能只是先將後門程式植入(存放)在被入侵
的系統的磁碟上，他們並不會立刻展開全面性的攻擊或對系統內部核心的入
侵，而是等到一個不引人注目的時間，才透過植入的後門或木馬程式悄悄發起
攻擊，此攻擊很可能會造成異常的磁區讀寫情況，我們的系統透過磁區讀寫的
觀測、記錄並解析其是否有異常狀況發生，進而能夠對惡意的攻擊行為進行阻
擋。 
15 
 
參、  計畫成果  
本計畫執行至第一年中期為止所獲得之具體成果可分為產學合作計畫、學術貢獻、系
統建置等部分，統計如下： 
 
產學合作計畫 本年度已簽訂五項產學合作計畫，金額達 5,829,000 元 
國內外期刊論文 本年度已發表六篇國際期刊論文 
國內外會議論文 本年度已發表三篇國際會議論文及一篇國內會議論文 
國內外專利 本年度已申請通過一項中國專利 
雛型系統研發 本年度已研發完成三大類共七個子系統之雛型系統 
 
 
一、  產學合作計畫  
本計畫所涵蓋的研究範圍以及所發展的技術深具產業應用價值，本年度計畫執行
團隊已陸續與友訊科技及中華電信等國內業界大廠以及教育部與調查局等政府單位簽
訂產學合作計畫，其計畫名稱與合約金額如下表： 
 
合作計畫名稱 合作對象 合約金額 
行動平台資通訊安全問題的研究  中華電信 940,000 
動態惡意程式行為側錄與污染分析 中華電信 905,000 
DNSsec 推動先期型計畫 教育部 1,700,000 
委託 Open D-Link Routers Forum 建置、維護與
測詴技術與諮詢服務 
友訊科技 1,500,000 
法務部調查局惡意程式自動檢測技術支援系統
委託研究案 
調查局 784,000 
產學合作計畫表 
 
17 
 
三、  系統建置  
本計畫之各子計畫所建構出之子系統簡述如下：  
 
 支援多樣功能之雲端資料安全儲存系統 
在本系統中，我們用 Linux + hadoop 來當作我們系統的平台，然後在這個平台上
開發我們的雲端安全服務。而本系統分為兩大部分：使用者端和服務者端。使用者端
是一個 java 程式，用來收集使用者電腦的資訊，經過隱私處理後，傳到雲端服務上
做分析處理，再做最後的判斷，來判斷使用者的電腦是否安全無疑。服務者端採用
Map Reduce 的程式架構來完成 hidden keyword search 的功能，用來比對使用者的上
傳。除此之外，針對比對的資料庫，我們事先做好隱私處理，將這些資料放在 data 
node 上(HDFS)，用來做比對處理，其系統架構如下圖： 
 
支援多樣功能之雲端資料安全儲存系統架構圖 
 
 基於機器碼之 Windows 惡意程式行為分析雲端平台 
不同於市面上廣為人知的雲端虛擬化節點管理，此子系統需管理實體電腦。市面
上的雲端服務大多以租用運算環境來營利，此種服務的環境稱之為「公開雲 (public 
cloud)」。這種公開讓租用者使用的管理介面可以利用虛擬化的技術來達成。而本子系
統的開發環境並非隨意讓使用者隨意存取內部節點之運算能力，這種基於利用雲端來
增強運算能力所形成的雲端環境可被稱作「內部雲 (private cloud)」。因為環境的不
同，所以本平台的節點並非利用現有虛擬化技術來做管理，而是整合網路監控、系統
監控來實作真實機器管理工作，其系統架構與與作流程如下圖： 
19 
 
 
攔截系統呼叫流程圖 
 
記憶體與磁碟內容物件之讀取、解析與制動 
除攔截系統呼叫之外，下一步驟即為針對記憶體以及磁碟的存取動作進行讀取、
解析、與制動，記憶體與磁碟是 process 執行中最常用到的資源，因此透過記憶體與
磁碟內容的讀取和解析來反制惡意的行為變顯得格外重要。 
針對記憶體方面，在 Xen 的架構中 Guest_VM 所使用的 memory space 必頇經由
Xen Hypervisor 的對應，才能在實體記憶體佔有一塊空間，因此我們得先找出
Guest_VM memory space 在實體記憶體上的地址，並根據此地址將資料讀取出來並進
行解析。們利用 Xen 提供映射 Guest VM 記憶體空間的 API (xc_map_foreign_range)，
指定 Guest VM 的 domain id 以及目標 GPFN (guest physical frame number)給此 API後，
接下來 Hypervisor 便根據 EPT 將 GPFN 轉換成 MFN (machine frame number)，得到
MFN 後便可存取其中的資料。 
針對磁碟的部分，由於 XEN Hypervisor 在對 Guest OS 的週邊裝置大多是藉由
qemu 模擬，特別是 HVM 的 GuestVM，從 Guest OS 來的磁區存取請求經由 Hypervisor
轉換後會送交給 qemu 處理，因此所有的磁區操作最後都會經由 qemu 來讀寫該系統的
區塊裝置(像是映像檔或者是硬碟上的某一個分割區)。我們藉由修改Xen中 qemu的程
式碼(位於 tools/ioemu-qemu-xen/，主要是 block.c 及 aio.c 這兩個檔案)，對負責磁區讀
取和寫入函式的呼叫做監控來達到我們所想要的目的，在 qemu 收到 Hypervisor 所轉
換的磁區存取請求後，便根據請求回傳結果給 Guest_VM，我們即可在函式中得知其
磁區存取的位置進而對其進行觀測與分析。 
  
21 
 
malware,” IN PROCEEDINGS OF THE 9 TH INTERNATIONAL SYMPOSIUM ON RECENT ADVANCES IN 
INTRUSION DETECTION (RAID, p. 165--184, 2006. 
[23] Y. Ye, T. Li, Y. Chen, and Q. Jiang, “Automatic malware categorization using cluster ensemble,” Proceedings of 
the 16th ACM SIGKDD international conference on Knowledge discovery and data mining, p. 95–104, 2010. 
[24] S. Muhlbach and A. Koch, “A Dynamically Reconfigured Network Platform for High-Speed Malware 
Collection,” Proceedings of the 2010 International Conference on Reconfigurable Computing and FPGAs, p. 
79–84, 2010. 
[25] C. Leita and M. Dacier, “SGNET: A Worldwide Deployable Framework to Support the Analysis of Malware 
Threat Models,” Proceedings of the 2008 Seventh European Dependable Computing Conference, p. 99–109, 2008. 
[26] M. Bailey, J. Oberheide, J. Andersen, Z. M. Mao, F. Jahanian, and J. Nazario, “Automated classification and 
analysis of internet malware,” Proceedings of the 10th international conference on Recent advances in intrusion 
detection, p. 178–197, 2007. 
[27] G. Wicherski, “peHash: a novel approach to fast malware clustering,” Proceedings of the 2nd USENIX conference 
on Large-scale exploits and emergent threats: botnets, spyware, worms, and more, p. 1–1, 2009. 
[28] Y. Ye, T. Li, Q. Jiang, Z. Han, and L. Wan, “Intelligent file scoring system for malware detection from the gray 
list,” Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining, 
p. 1385–1394, 2009. 
[29] Y. Ye, T. Li, Y. Chen, and Q. Jiang, “Automatic malware categorization using cluster ensemble,” Proceedings of 
the 16th ACM SIGKDD international conference on Knowledge discovery and data mining, p. 95–104, 2010. 
[30] V. Mulukutla, “Wolfsting: Extending Online Dynamic Malware Analysis Systems by Engaging Malware.,” 2010. 
[31] M. F. Zolkipli and A. Jantan, “Malware Behavior Analysis: Learning and Understanding Current Malware 
Threats,” in 2010 Second International Conference on Network Applications, Protocols and Services, 2010, p. 
218–221. 
[32] X. Jiang, Z. Hao, and Y. Wang, “A Malware Sample Capturing and Tracking System,” in 2010 Second WRI 
World Congress on Software Engineering, 2010, p. 69–72. 
[33] D. Cavalca and E. Goldoni, “An Open Architecture for Distributed Malware Collection and Analysis,” Open 
Source Software for Digital Forensics, p. 101–116, 2010. 
[34] Z. Tzermias, G. Sykiotakis, M. Polychronakis, and E. P. Markatos, “Combining Static and Dynamic Analysis for 
the Detection of Malicious Documents,” 2011. 
[35] M. Apel, J. Biskup, U. Flegel, and M. Meier, “Early Warning System on a National Level–Project AMSEL,” in 
Proceedings of the First Workshop on Early Warning and Network Intelligence (EWNI), Hamburg, Germany, 
2010. 
[36] B. J. Nabholz, “Design of an Automated Malware Analysis System,” College of Technology Directed Projects, p. 
4, 2010. 
[37] Y. M. Wang, D. Beck, X. Jiang, and R. Roussev, “Automated web patrol with strider honeymonkeys: Finding web 
sites that exploit browser vulnerabilities,” in IN NDSS, 2006. 
[38] Anubis: Analyzing Unknown Binaries, http://anubis.iseclab.org/ 
[39] D. Chisnall, The Definitive Guide to the Xen Hypervisor: Prentice Hall PTR, 2007. 
[40] G. Reese, Cloud Application Architectures: Building Applications and Infrastructure in the Cloud: O'Reilly, 2009. 
[41] Virtuatopia,"An Overview of the Hyper-V Architecture," 
(http://www.virtuatopia.com/index.php/An_Overview_of_the_Hyper-V_Architecture) 
[42] J. N. Matthews, E. M. Dow, T. Deshane, W. Hu, J. Bongio, P. F. Wilbur, and B. Johnson, Running Xen: A 
Hands-On Guide to the Art of Virtualization: Prentice Hall, 2008. 
[43] R. G. Bace, Intrusion Detection: Sams, 2000. 
[44] N. Stakhanova, S. Basu, and J. Wong, "A taxonomy of intrusion response systems," International Journal of 
Information and Computer Security, vol. 1, pp. 169-184, 2007. 
[45] T. Garfinkel and M. Rosenblum, "A virtual machine introspection based architecture for intrusion detection," in 
NDSS, 2003, pp. 253-285. 
[46] VMWare,"VMWare Infrastructure Pricing," (http://www.vmware.com/files/pdf/vi_pricing3.pdf) 
[47] B. Payne,Georgia Tech, "XenAccess: An Introspection Library for Xen," (http://code.google.com/p/xenaccess/) 
[48] A. Dinaburg, P. Royal, M. Sharif, and W. Lee, "Ether: Malware analysis via hardware virtualization extensions," 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/05/30
國科會補助計畫
計畫名稱: 總計畫(1/2) 
計畫主持人: 曾文貴 
計畫編號: 99-2218-E-009-017- 學門領域: 資訊
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計畫已透過產學合作的方式協助政府機關與產業界建置各種安全服務或是創
新安全技術之研發。例如：本計畫團隊將協助調查局開發惡意程式自動檢測技
術、與中華電信合作進行行動平台資通訊安全問題研究與動態惡意程式行為側
錄與污染分析、協助教育部進行資安基礎建設先期型計畫、提供友訊科技 Open 
D-Link Routers Forum 之建置維護與測試技術諮詢服務，同時計畫團隊亦與趨
勢科技、喬鼎資訊等就各類雲端安全技術服務之開發與推廣進行洽談。除此之
外，本計畫所獲得的專利亦可證明本計畫所研發的技術具有產業化的潛力。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
