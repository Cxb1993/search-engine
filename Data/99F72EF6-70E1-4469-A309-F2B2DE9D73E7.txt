graph to increase the effectiveness of schema 
matching. This hybrid method can reduce the 
computational effort due to a simplified data 
structure. It also increases the matching 
accuracy compared to the original method 
with the simplified data graph. The major 
reason is only qualified candidates are 
included in the data graph, and this process 
may increase the matching ability of the 
modified method. 
Keywords: data exchange, schema matching, 
hybrid method 
二、緣由與目的 
在 e 化整合企業之間的資訊流上，目
前大部分採用訂定產業資料交換標準的方
式進行。透過已訂定好的資料交換標準及
商業標準流程，提供不同企業或不同產業
別作為內部系統的資料交換參考，進而提
升企業相互溝通的效能。然而不是每家企
業都採用已訂定的資料交換標準，因此在
彼此相互傳遞資料時會有不能解析的情況
發生，所以資料交換標準仍未解決資料交
換的問題。本計劃期望改良現有的演算法
來解決不同資訊系統相互傳遞資料時的資
料衝突問題，進而增強資料交換的效能。 
XML 是一種用來描述資料的語言，
XML 包含綱要與文件，而綱要與文件遵循
相同的規則。XML 綱要是一種描述資料結
構的模型，與資料庫中用來描述相關表格
內容的機制類似，XML 綱要可規範 XML
文件中的標籤(Tag)和內容的形式，用來定
義 XML 文件的結構、資料型態…等。XML
文件則包含由綱要所定義的結構與資料內
容。由於 XML 的延伸性與自我描述性，得
以將文件的內容和結構分開，使資料具有
獨立性變得單純且容易分析，因此 XML 逐
漸成為企業所接受的資料交換標準格式。 
各企業有其特定的方式描述資料，可
能以不同的 XML Schema 敘述語意相同的
資料，在 XML 文件傳遞時，接收方不一定
能正確地解譯接收的資料內容，因此需要
將來源 XML 文件的資料綱要對應成符合
接收端的資料綱要，並依據綱要對應結果
將來源端 XML 文件的資料綱要及資料內
容重組(Reconstruct)成符合接收端的資料
綱要，而此重組作業必須透過資料綱要的
對應及轉換，因此發展有效解決不同綱要
對應時所發生的綱要衝突是建立資料整合
模式的基本要素是本研究的課題。 
為了能正確且有效的完成資訊的交換
與溝通，針對企業間運用 XML 文件做資料
交換時所遇到的問題，例如如何相互對應
不同的綱要，許多學者對資料綱要對應提
出不同的解決方法。資料綱要的對應可分
為一對一、一對多、多對一和多對多等情
形。由於以往學者在討論資料交換的對應
方法，大多僅考量到 XML 格式的標籤與樹
形圖的階層關係，鮮少討論及應用 XML 格
式所包含的其他屬性資料來輔助對應資料
綱要。本計劃提出利用結合語意對應與結
構 對 應 的 混 合 式 演 算 法 － 改 良 型
SF(Similarity Flooding)演算法來解決因為
語意對應所產生的一對多及多對一問題。
改良型 SF 演算法所利用的 OEM 圖形，相
較於傳統樹形圖具有更多 XML 格式資
料。而改良型 SF 演算法則可利用鄰近配對
節點進行結構相似度的計算。透過這兩者
的結合，得以輔助判斷因為語意對應所產
生的一對多、多對一的對應關係，進而提
出更準確的對應結果以增進資料交換後的
正確性，並增強資料交換的效能。 
本計劃針對資料交換過程中的綱要衝
突問題，先將需要配對的兩個綱要以 OEM
圖形結構表達，再將兩個綱要的 OEM 圖形
結合成所有可能配對的連接圖形(Pairwise 
Connecting Graphic) ，同時加入相關語意
對應的相似度資料進行圖形的重組，接著
開始進行結構相似度的計算，最後則是將
計算結果放入相似度指派的篩選機制中，
找出最有可能的配對建議。以此混合式演
算法增加資料交換對應結果的準確性，並
提高企業間異質資料交換的效能。為了驗
證本計劃在綱要對應使用的語意詞庫與演
算法，本系統將利用 XML SPY 製作 XML
文件與 XML Schema 範例，並以開放原始
碼的 WordNet 和 MYSQL 資料庫軟體建立
所需要的語意詞庫，再以 JAXP API 撰寫相
關應用程式來驗證 XML 文件與資料庫綱
要的對應準確度。此改良型 SF 演算法將預
期達到下列的目的： 
1. 將 XML 格式資料轉換成 OEM 結構圖
形進行結構對應，等同於將更多 XML
3 
高正確率，實際運行範例的結果，建議配
對數目相較於前面兩階段的結果來的少，
但建議的配對幾乎就為理想配對，因此有
最高的 Precision 值，由於語意對應的相關
資料對 PCG圖形的組合與結構相似度的計
算具有一定的影響，而本計劃所能處理的
語意對應所能問題有限，因此第四階段提
出另外的機制彌補語意對應能力不足的情
況。第四階段則是在進行 PCG 圖形重組的
過程中，利用相關語意對應的資料將可能
的配對節點與不可能的配對節點分別重組
成兩個不同的 PCG 圖形，可能的配對所組
合成的 PCG 圖形繼續依照演算法進行，待
可能的配對運行結束得到第一次的建議配
對結果，接著開始運行不可能的配對所組
成的 PCG 圖形，按照一樣的流程運行，在
最後的 Stable Marriage 階段將第一次的建
議配對結果納入運算，得到第二次的建議
配對結果，而第四階段即為改良型 SF 演算
法。 
 
圖 3- 2、語意對應流程 
改良型 SF 演算法在處理一對多或多
對一的綱要對應衝突具有多道手續： 
1. 具有相同『屬性值』的語意對應問題
可以透過『屬性名稱』進行判斷。 
2. 具有相同『屬性名稱』的結構對應問
題可以透過引入相關語意對應資料進
行處理。 
3. 具有相同『屬性名稱』、『屬性值』
可以透過 Threshold 與『元素名稱』進
行判斷。 
若是目標與來源綱要元素中具有相同
的『元素名稱』、『屬性名稱』與『屬性
值』，則改良型 SF 演算法依舊會提出建議
配對，但由於上述的判斷機制都失效，所
以會導致無法判斷的情況。另外，改良型
SF 演算法無法彌補由於語意對應錯誤所造
成的結果。 
四、實做介紹 
在實做演算法的過程中考量到各企業
所使用的資訊系統和資料庫可能不同，透
過 Java 語言具有在不同作業平台及資訊系
統上運作的特性，只要企業安裝 JVM(Java 
Virtual Machine)即可使用改良型 SF 演算
法。另外，由於本研究中所使用的資料交
換格式為XML，而 JAXP(Java API for XML 
Parsing)使用 DOM、SAX…等標準技術，
使程式可以很容易的解析 XML 文件及建
立 XML 文件的樹狀物件模型，因此 JAVA
語言相當適合用來建構改良型 SF 演算法。 
本研究所提出實踐改良型 SF 演算法
架構如圖 4-1 所示，首先使用者會接收到
來源與目標兩個 XML 綱要，接著使用者將
欲比對的兩個綱要交由改良型 SF 演算法
進行對應，對應過程中會利用相關語意對
應資料，最後將演算法對應結果回傳給使
用者做最後的判斷。 
 
 
圖 4- 1、實踐改良型 SF 演算法架構 
改良型 SF 演算法的實際的運行畫面
如下所示。圖 4-2 為輸入欲比對來源與目
標綱要名稱畫面，圖 4-3 為來源綱要轉換
成 OEM 畫面，圖 4-4 為目標綱要轉換成
OEM 畫面，而圖 4-5 為演算法建議配對結
果畫面。 
 
 
5 
 五、結論 
本計畫主要目的在於解決因為語意對應
所產生的一對多與多對一綱要對應問題，首
先針對 SF 原型演算法的主要概念、運行邏輯
以及所使用的 OEM 圖形進行深入研究，並
尋得資料模型的轉換方法，使得 XML 可以
轉換成 OEM 圖形，進而將 SF 原型演算法應
用於 XML 綱要的對應。整理出相關結論如
下： 
1. 改良型 SF 演算法使用具有更多 XML 
格式的資料的 OEM 圖形，因此在進行
結構對應時得以利用這些資訊輔助綱要
對應提昇正確性。 
2. 在改良型 SF 演算法的運行過程中，由於
引入語意對應相關資料簡化PCG圖形結
構，因此有效的縮短演算法所花費的時
間。 
3. 由於改良型 SF 演算法具有二次對應的
機制，以彌補在綱要對應中因為語意對
應能力不足而無法解決的問題，因此在
大部分的範例中，改良型 SF 演算法相較
於其他三種演算法，具有最高的 Recall
值。 
4. 針對改良型 SF 演算法所能解決的綱要
對應問題，包含部份語意對應、部分語
意對應與結構對應，純結構對應的問題
改良型 SF 演算法較不適用。 
六、參考文獻 
[1]. Ekaterina Pavlova, Igor Nekrestyanov, 
Boris Novikov, “Constraints for 
Semistructured Data＂. 
[2]. G.A. Miller, “WordNet: An On-line 
Lexical Database,＂ International Journal 
of Lexicography, vol. 3, no. 4, 
pp.235-312, 1990. 
[3]. Hong-Hai Do, Erhard Rahm, “COMA - 
A system for flexible combination of 
schema matching approaches＂, 
Proceedings of the 28th VLDB 
Conference, Hong Kong, China, 2002 
[4]. Jayant Madhavan, Philip A. Bernstein & 
Erhard Rahm. (2001). Generic Schema 
Matching with Cupid. 
[5]. Kim, Won. & Seo, Jungyun. (1991). 
Classifying Schematic and Data 
Heterogeneity in Multidatabase. IEEE 
COMPUTER, 12-18. 
[6]. Lear, A.C. (1999). XML seen as integral 
to application integration. IT Pro, 12-16. 
[7]. Lee, Chiang., Chen, Cgia-Juan., & Lu, 
Hongjun. (1995). An aspect of query 
optimization in multidatabase systems. 
ACM SIGMOD RECORD, 24(3), 28-33. 
[8]. Rahm, Erhard., & Bernstein, Philip. 
(2001). A survey of approaches to 
automatic schema matching. The VLDB 
Journal, 10, 334-350 
[9]. Rahm, Erhard., & Do, Hong-Hai. 
Matching Large XML Schemas. 
SIGMOD Record, 33(4), 26-31. 
[10]. Serge Abiteboul, Peter Buneman & Dan 
Suciu, Data On the Web From Relation to 
Semistructured Data and XML, Morgan 
Kaufmann Publishers, San Francisco 
(2000). 
[11]. Sheth, Amit., & Larson, J. (1990). 
Federated database systems for managing 
distributed, heterogeneous, and 
autonomous databases. ACM Computing 
Surveys, 22( 3), 183-236. 
[12]. S. Melnik, H. Gracia-Molina, E. Rahm, 
“Similarity Flooding: A Versatile Graph 
Matching Algorithm,＂ ICDE (2002). 
[13]. Yen, David C., Huang, Shi-Ming., & Ku, 
Cheng-Yuan. (2002). The impact and 
implementation of XML on 
business-to-business commerce. 
Computer Standards & Interfaces, 24, 
347-362. 
 
 
Multiple Productions Inventory Model for Reusable Product with Shortage 
 
Hui-Ming Wee, Wei-Jung Shiang and Yi-Tzu Huang 
Department of Industrial Engineering, Chung Yuan Christian University, Chungli, Taiwan 32022 
{weehm, wjs001}@cycu.edu.tw
 
ABSTRACT 
In this open and competitive market, effective cost reduction and product value upgrade are important ways to increase 
competitiveness. Due to increasing environmental protection cost in the recent years, environmental consciousness in 
enterprise is becoming more and more important. One of the ways to reduce material cost and protect environment is to 
recycle resources.  This study discusses an inventory model of reusable items with shortage. A mathematical model 
and a program are developed to derive the optimal solution with minimal total cost. Numerical examples and sensitivity 
analysis are carried out to analyze the influence of key parameters to the inventory system.  The result of this study 
shows that the total cost is most sensitive to the percentage of reusable items and the demand rate. Optimal cost can be 
derived through proper control of the key parameters. The sensitivity analysis shows that inventory level and total cost 
can be reduced through a better demand forecast. 
 
Keywords: inventory, shortage, reusable product 
 
1. INTRODUCTION 
 
Due to increasing environmental protection cost in the 
recent years, environmental consciousness in enterprise 
is becoming more and more important. One of the ways 
to reduce material cost and protect environment is to 
recycle resources. Product recovery reduces the need for 
raw materials in manufacturing and thus leads to cost 
down in materials. The manufacturers produce new 
product items, recover used items, and sell them on the 
same market. 
 
In this paper, the problem of determining optimal lot 
sizes for production and recovery is addressed. The 
lot-sizing policies in this paper focus on the (1, n) 
policies which alternate one production lot with a fixed 
number n of recovery lots. Based on the model proposed 
by Teunter [1], a more general lot-sizing model with 
allowed material shortage is derived. Shortage is 
inevitable in a dynamic market and it should be 
considered in the model. The objective is to minimize the 
average total cost. Since it is hard to find a closed form 
solution for this model, a numerical approach should be 
applied to determine fixed lot-sizes for production and 
recovery, and the allowed shortage value with respect to 
a specific recovery number n ([3] and [4]). To provide 
managerial insights, a sensitivity analysis is carried out 
to analyze the key parameters. [5] 
 
2. MODELING AND NOTATION 
 
In this section, the inventory model of this system is 
derived in a step-by-step manner, and the basic idea 
follows the modeling assumptions in [1] and [2] plus the 
material shortage assumption. The production rate p and 
recovery rate r can be infinite as well as finite. The 
demand rate is fixed as d, and the return of product is fd 
where 0 < f < 1. The production rate and the recovery 
rate are always larger than the demand rate. Relevant 
costs are production and recovery costs, setup costs for 
production and recovery, holding costs for production 
and recovery, and shortage cost. There is no disposing of 
recoverable items. The notations used in this paper are 
listed in Table 1.  
 
Table 1 Notation List 
Notation Description 
r Recovery rate (units/time) 
d Demand rate(units/time) 
p Production rate (units/time) 
f Return fraction 
S Maximum allowed shortage 
Qp Production lot-size 
Qr Recovery lot-size 
H1 Holding cost per serviceable item/time 
H2 Holding cost per recoverable item/time 
H3 Shortage cost 
S1 Setup cost per recovery lot 
S2 Setup cost per production lot 
R Maximum stock of recoverable items 
hi Inventory level i=1..8 
ti Time period i=1..6 
I1 max Maximum stock of serviceable items during 
production periods 
I2 max Maximum stock of serviceable items during 
recovery periods 
T Cycle time 
n Recovery number 
TVC Total cost 
 
Only one product type is considered in this inventory 
model. It is assumed that items are manufactured with a 
fixed lot size Qp and recovered with a fixed lot size Qr, 
where one production lot and n recovery lots follow each  
 
=>  n= ( - )
(1 - )
p
r
f Q S   
Q f f+ S   (15) 
F(1) : the total stock of serviceable items in one cycle is 
equal to the total stock in the production period and 
recovery periods: 
 ( )
( ) ⎟⎟⎠
⎞
⎜⎜⎝
⎛ +−−⎟⎟⎠
⎞
⎜⎜⎝
⎛ −−
d
S
dp
S
d
Q
S
p
dpQ pp
2
1  
( )
( ) ⎟⎟⎠
⎞
⎜⎜⎝
⎛ +−⎟⎟⎠
⎞
⎜⎜⎝
⎛ −−+
ddr
S
r
drQn p 11
2
2
 (16) 
 
F(2) : the total stock of recoverable items in one cycle is 
the total stock in the production period and recovery 
periods: 
 
( ) ( ) ( )
( )
( )
⎭⎬
⎫
⎟⎟⎠
⎞⎜⎜⎝
⎛ −+−⎟⎟⎠
⎞⎜⎜⎝
⎛+
⎟⎟⎠
⎞⎜⎜⎝
⎛ −+−
⎩⎨
⎧
⎟⎟⎠
⎞⎜⎜⎝
⎛ −−+−−
r
fdrQ
fSfQ
r
Q
r
drfQ
SffQ
S
r
drQ
drd
fdrSQn
r
p
r
r
p
rr
2
22
2
1
2
1
2
1
( ) ( )
( ) ( )
( ) ( )
2
2
2
2
2
2
32
2
2
r
fdrQS
r
drQQ
d
Sf
fQfS
r
drfQ
d
SQ
S
r
drQ
d
SfS
r
drQ
d
f
rr
p
p
rp
rr
−+⎟⎠
⎞⎜⎝
⎛ −−++
⎟⎠
⎞⎜⎝
⎛ +−−−+
⎟⎠
⎞⎜⎝
⎛ −+⎟⎠
⎞⎜⎝
⎛ −−+
 (17) 
 
F(3) : the total product shortage in one cycle is: 
 
( ) ( )
2 2
2
1 1 1 1    + 
2  -  2 -
( 1) 1 1 
2 ( - ) ( - )
S n S        
d r d d p  d
S n
d r d p d
⎛ ⎞ ⎛+ +⎜ ⎟ ⎜⎜ ⎟ ⎜⎝ ⎠ ⎝
⎡ ⎤+⇒ + +⎢ ⎥⎣ ⎦
 
⎞⎟⎟⎠  
 (18) 
 
F(4) : the setup cost is: 
 
       nS1 + S2 = 1 2
( - )
   + S
(1- )
p
r
S f Q S   
 
Q f fS+   
 (19) 
 
Total cost of one cycle operation is: 
 
TVC(Qr, Qp, S, n) = 
H1F(1) + H2F(2) + H3F(3)+F(4) (20) 
 
Total cost per time unit is: 
 
T
nSQQTVC pr ),,,(    (21) 
 
Since a closed form solution for Qp, Qr, and S that 
minimize the total cost TVC this equation is too 
complicated to obtain. A numerical approach is applied 
to determine fixed lot-sizes for production and recovery 
and the maximum allowed shortage value with respect to 
a specific recovery number n. A computer code in Maple 
8 is applied to find the numerical solutions of Qr*, Qp*, 
and S* to minimize the total cost. 
 
3. EXAMPLE 
 
In order to validate and illustrate the inventory model, 
the example form [1] is applied and the model 
parameters are given in Table 2. A simple algorithm is 
developed and coded in Maple to find the numerical 
solutions of Qr*, Qp*, and S* to minimize the total cost. 
 
The procedures of this algorithm are as followings 
 
Step 1 From Equation (15), TVC(Qr, Qp , S , n) is 
modified into TVC(S, Qr , n) 
Step 2 Set model parameter values r, p, d, f, H1, H2, H3, 
S1, and S2 
Step 3 Solve for S and Qr for a specific n. 
Step 4 Calculate TVC(S, Qr) values for n= 1, … , 6       
Step 5 Find the minimum value in Step 4. 
 
Table 2. Parameter settings of the example 
Parameter Value 
r 3000 (units/time) 
d 1000 (units/time) 
p 5000 (units/time) 
f 0.8 
S Maximum allowed shortage 
Qp Production lot-size 
Qr Recovery lot-size 
H1 10 $/unit 
H2 2  $/unit 
H3 20 $/unit 
S1 5  $/lot 
S2 20 $/lot 
 
The total cost of one cycle operation TVC with respect to 
different S and Qr vales for a specific n is plotted in 
Figure 2, which shows the existence of the minimum 
value. The numerical solutions of the algorithm for this 
illustrated example are listed in Table 3. The data shows 
that the minimum cost 374.15 occurs when n = 3. The 
values of S, Qr and Qp need to be rounded to integers for 
real world implementation.  
 4
