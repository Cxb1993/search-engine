2 
 
中文摘要 
近年來，殭屍網路已成為網際網路中最嚴重的威脅，攻擊者透過各種不同的手法，如
社交工程、網路釣魚等來散佈惡意程式並植入使用者電腦中，使得攻擊者能藉由遠端操控
程式下達命令操控受害者電腦，執行發送垃圾郵件、DDoS攻擊、竊取個人資料等攻擊，加
上目前的網路環境擁有足夠的網路頻寬與強大運算能力的電腦，相當符合大規模殭屍網路
的運作。 
因為使用者的電腦主機或伺服器可能在不知情的情況下被惡意程式所感染，但還是繼
續提供服務與使用，進而造成繼續擴散與感染，才會導致如此嚴重的後果，因此本計畫提
出兩種逆向工程之偵測與IRC Snort入侵偵測與防禦方法，藉由主機型與網路型的偵測方式，
來偵測區域網路內部受感染的電腦主機與伺服器，並且防止電腦繼續被操控與連線，瓦解
區域內的殭屍網路。 
關鍵詞：IRC殭屍網路、偵測與防禦、遠端操控、惡意程式、區域網路 
 
Abstract 
Recently, botnets have become one of the most serious threats on the Internet. Attackers 
infect hosts by many different kinds of methods, such as social engineering and phishing, and 
distributing viruses and worms. Then, the attackers remotely control and command the infected 
hosts to send SPAM, launch DDoS attacks and steal personal data. Besides, broad network 
bandwidth and high speed computation power are also helpful for the botnets to work. 
Because that the users’ computers or servers may be infected by malwares, they are 
unknown to continue providing services, and spreading malwares. It will result in many serious 
consequences. Therefore, we propose two botnet detection methods to detect the infected hosts 
and servers in LAN. The first method is reversing engineering detection, which can provide some 
useful information for experts to recognize malwares in the hosts and servers. Another one is IRC 
Snort intrusion detection and prevention, which can detect anomaly behaviors and prevent the 
malicious control and connection to collapse the LAN botnets.  
Keywords：IRC botnet、Detection and prevention、Remote control、Malware、LAN 
4 
 
台電腦的殭屍網路比例則只有5%。因此，可能在還沒被發現的情況下，靜悄悄的收集企業
組織或校園的內部資料，其造成的危害可能比大型殭屍網路來的嚴重。 
綜合上述的相關研究報導，關於殭屍網路造成我們的嚴重傷害，在於每台使用者的電
腦主機與伺服器可能在不知情的情況下被惡意程式所感染，但還是繼續提供服務與使用，
進而繼續擴散與感染，才會導致如此嚴重的後果，因此為了要改善校園或企業的網路使用
環境，需設法偵測出校園或企業內部受感染的電腦主機與伺服器，並且防止繼續被操控與
連線，瓦解區域內部網路的殭屍網路，成為本論文研究的重要議題。 
二、 研究目的 
雖然IRC殭屍網路早在幾年前就出現了，也有相關學者紛紛提出各種不同的偵測與防禦
方法，常見主機型偵測的方式分為三種，第一種方法如安裝防毒軟體，經由病毒碼加以比
對來識別惡意程式，優點對於已知病毒偵測率高、誤判率與漏報率低，缺點可能會影響系
統效能、定期更新病毒碼、無法清楚分析病毒的特性與行為、未知病毒誤判率與漏判率高
等等；第二種方法為部署主機型入侵防禦系統，針對系統各個元件之間的交互運作進行監
控，監控項目為系統所產生的行為進行判定為正常與異常行為，優點無需更新病毒碼、可
阻止未知或新型病毒的攻擊，缺點只針對系統行為偵測而非檔案偵測、異常行為可能會不
在規則檔中；第三種方法為鎖定具有網路連線能力的惡意程式偵測範圍，優點分析具有網
路連線能力的惡意程式運作特性與行為，缺點無法偵測無透過網路連線能力的惡意程式(如
USB散播的惡意程式)、無法偵測附加於其它軟體內會侵犯使用者隱私的元件(如間諜軟體)
等等[5]。 
三、 研究方法 
本計畫為了能夠解決上述問題，提出兩點方法解決：1.運用逆向工程主機型的偵測方
法，參考Ard學者[10]之逆向工程所提出的三個分析機制，分析出惡意程式之行為，並設計
出一套新的IRC殭屍網路之標準偵測流程，能徹底分析出新型未知或已知惡意程式的特性。
2.網路型偵測的入侵偵測與防禦方法，藉由Open Source的Snort入侵偵測系統[6][3]，與自行
撰寫偵測IRC通訊協定的規則檔，根據分析IRC殭屍網路通訊所產生的特定關鍵指令，例如：
NICK、JOIN、PRIVMSG等等...訊息回應，並透過PHP語法所撰寫的IRC搜尋防禦系統顯示
出偵測結果，在結合Linux Netfilter/Iptables防火牆[7][2][4]進行阻擋異常連線，達到阻擋內
6 
 
 
圖 1  逆向工程的實驗環境架構圖 
1.2 實驗的偵測工具 
本研究運用逆向工程方法來確認使用者電腦是否被植入惡意程式，在實作過程中運用
到微軟公司、Foundstone公司、CACE科技等所開發之免費工具，並將所用到的各項檢測工
具循序介紹，如表.2所示： 
表.2  實驗工具簡介 
分析階段 工具名稱 功能 
靜態碼分析 
(Static Code 
Analysis) 
Strings 
Strings 工具可列出執行檔案中的 UNICODE (或 
ASCII)字串，預設長度為 3 或以上的字串，也可
透過參數顯示具有特定的字串[24]。 
系統被入侵分析 
(Compromised 
System Analysis) 
Autoruns 
Autoruns工具具有檢視windows 系統開機或登入
期間所執行的各種程式執行項目，包括檔案、驅
動程式、工作及服務，或停用某些啟動項目、釋
放記憶體與系統資源[24]。 
執行碼分析 
(Runtime Code 
Analysis) 
Nslookup 
Nslookup 工具用以向 DNS Server 進行測詴、疑難
排解、主機正反解等等查詢命令列管理工具[24]。 
Netstat 
Netstat 工具為顯示本機目前網路連線的狀態，使
用哪些本機連接埠與外部主機連結，透過哪個通
訊協定等等的查詢命令列管理工具[24]。 
Fport 
Fport 工具的功能於 Netstat 工具相同，但 Fport 工
具所顯示的資訊更為詳細，能快速識別出系統所
ZyXEL USG 100
163.26.231.175
Botmaster
Bot Host 1
192.168.142.138
Bot Host 2
192.168.42.139
Bot Host 3
192.168.42.140
IRC Server
192.168.42.15
vlan1
IRC Server
172.16.1.121
Botmaster 
172.16.1.122
Bot Host 4
192.168.142.138
Bot Host 5
192.168.42.139
Bot Host 6
192.168.42.140
Switch
vlan0
內部網路
外部網路
Switch
-172.16.1.0/24
連線至外部IRC Server
- 192.168.42.0/24
連線至內部IRC Server
DDNS Server
172.16.1.152
Internet
Victim
192.168.42.153
- 192.168.42.0/24
受害者電腦
8 
 
2. 網路型偵測的入侵偵測與防禦方法 
2.1 實驗環境架構說明 
本節提出的方法主要是藉由IRC Snort入侵偵測系統與Linux Netfilter/Iptables防火牆的
結合，來模擬區域網路內受惡意程式感染的用戶端電腦，透過IRC通訊協定連線至C&C伺
服器端與Botmaster三方所產生的異常封包。我們所建置的整個實驗環境實體主機共為四台，
有兩台實體主機安裝VMware Workstation 7.0版虛擬化軟體來建置出10台虛擬機器，另外兩
台實體主機分別為snort入侵偵測系統及Linux Netfilter/Iptables，如表3將敘述各個虛擬機器
的設備名稱、數量、作業系統、軟體、用途等等。 
表 3  實驗環境設備說明表 
設備名稱/型號 數量 作業系統 軟體版本 用途 
殭屍電腦 
(Bothost) 
6 
Windows XP 
Sdbot v0.5b 感染惡意程式的電腦 
使用者電腦(一) 1 Mirc v6.35 
模擬成正常使用者使用
IRC 線上聊天室 
使用者電腦(二) 1 
Fedora 8 
Irssi-0.8.12 
模擬成正常使用者使用
IRC 線上聊天室 
IRC Server 1 IRC 2.9.5 網路線上聊天伺服器 
攻擊者電腦 
(Botmaster) 
1 Irssi-0.8.12 攻擊者使用的電腦 
Snort 
入侵偵測系統 
1 Snort-2.8.5.2 偵測 IRC 殭屍網路 
軟體防火牆 1 Iptables-1.3.8 封鎖受感染的電腦 
硬體交換器 
(D-Link DES-3028) 
1 N/A N/A 連結實驗內部的電腦 
整個網路拓樸圖如圖3，所有電腦主機與伺服器經由硬體交換器連結成為一個區域網路，
並與防火牆作連結，然後再連線到網際網路。每台電腦均分配同網段的私有IP位址，讓殭
屍電腦能與IRC Server進行連線，該IRC Server的連接埠為6667 port，並將switch設備設定port 
mirror功能，讓switch的port變成可被監看所有封包流量，使得IRC Snort 可監控整個實驗環
境的IRC封包，並儲存於Snort 資料庫進行做分析。 
10 
 
偵測配對分析運算，計算出前三名的偵測率與較低的誤判率，並由php語法所撰寫的IRC搜
尋與防禦系統依照計算出來的結果進行異常行為特徵配對，將結果顯示出的異常主機通知
給管理者，並由管理者進行封鎖這些異常主機，故能達成偵測與防禦的效果，如圖4所示。 
 
圖 4  IRC Snort 入侵偵測與防禦流程架構圖 
2.3  IRC Snort 防禦實作流程 
本研究藉由短時間一致性訊息回應、同一目的端集體連線與IRC Server通訊時特定關鍵
指令等三種IRC殭屍網路異常行為特徵，進行對區域網路內的使用者電腦作偵測，而整個入
侵偵測與防禦的流程分為四個部分，如圖5所示。 
 
圖 5  IRC Snort 入侵偵測與防禦實作流程圖 
2.4 異常特徵行為之運算 
本研究的異常行為特徵運算，採用聯集運算方法，原因是當選擇某個異常行為特徵進
行運算時，其它剩餘異常行為特徵封包也有屬於正常封包與異常封包，因此，也必需加入
進行運算，才能涵蓋所有收集到的IRC封包，並計算出偵測率、誤判率、漏判率的數據結果，
BotHost
Normal User
IRC Server
Botmaster
IRC Snort Sniffer
IRC 規則檔
封包數據
比對IRC
規則檔
Snort alert 
資料庫
符合
異常行為特徵運算
管理者
異常主機
封鎖
不屬於 IRC 
封包
不符合
IRC封包採集
自訂IRC規則庫
· PING PONG
· NICK
· JOIN
· PRIVMSG
· QUIT
分析異常與正常訊息
NICK Payload的訊息
JOIN channel 名稱
PING PONG異常與正常回應
QUIT Payload的訊息
PRIVMSG Payload的訊息
同一目的端集體連線
短時間一致性回應
異常行為特徵運算
單一異常行為特徵封包數據聯集運算
兩個異常行為特徵封包數據聯集運算
計算出每項異常行為特徵的偵測率、
誤判率、漏判率
IRC 搜尋與防禦系統結果
依前三名偵測率進行異常行
為特徵配對顯示出異常主機
並進行阻擋連線
實驗結果與分析之比較
篩選出三次實驗中的前三名
單一異常行為特徵與兩項異
常行為特徵進行比較，以及
正常與異常總封包數的比較
12 
 
PRIVMSG 
訊息回應  
57.79% 
PING PONG 訊息回應 
短時間一致性訊息回應 
66.86% 
同一目的端
集體連線  
37.49% 
PRIVMSG 訊息回應 
同一目的端集體連線 
65.02% 
管理人員亦可透過偵測系統對於異常主機的封鎖，防止自動封鎖而導致正常使用者無
法連線的情況發生，當選定要鎖定的異常主機後，點選鎖定，會顯示確認視窗，確定是否
針對所選取的異常主機進行封鎖，點選確定後，將能封鎖異常主機，如圖5所示。 
 
圖 5  IRC 搜尋與防禦系統圖 
五、 計畫成果自評 
1. 為了能夠解決殭屍網路帶來的威脅，本研究設計出運用逆向工程主機型的偵測方
法與網路型的入侵偵測與防禦方法。 
2. 因藉由主機型與網路型偵測方法的互補，既能分析惡意程式的相關特性與網路上
異常行為偵測，更徹底的針對偵測殭屍網路提出解決之道。 
3. 讓參與之工作人員能學習到殭屍網路之理論基礎與其威脅性。 
4. 讓參與之工作人員能學習到從事科學研究、執行計畫、團隊合作的能力。 
5. 本研究計畫在國科會給予經費與充分的協助之下，已順利完成，因具學術與實用
價值，故自評為極佳。  
六、參考文獻 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 99-2221-E-218 -046 
計畫名稱 P2P 殭屍網路之偵測與防禦 
出國人員姓名 
服務機關及職稱 李南逸 南台科技大學 資訊管理系 教授 
會議時間地點 Jan. 18-20, 2011 
會議名稱 2011 International Conference on e-Commerce, e-Administration, e-Society, 
e-Education, and e-Technology 
發表論文題目 Dynamic multiple group key distribution protocol based on elliptic curvecryptography 
 
 
今年 2011 International Conference on e-Commerce, e-Administration, e-Society, 
e-Education, and e-Technology (e-CASE & e-Tech 2011)在日本（Japan）東京（Tokyo）舉
辦，由於日本在密碼學與資訊安全領域的研究能量在全世界也是數一數二，因此就將相
關的研究論文投稿至此國際會議，希望藉由此次出國機會認識更多國際著名研究學者並
收集到最新的研究資料，也希望因此對日本這個國家有更深一層的認識。 
 
2011 International Conference on e-Commerce, e-Administration, e-Society, 
e-Education, and e-Technology(e-CASE & e-Tech 2011)國際會議共收錄來自包含美國、台
灣、法國、德國、日本、韓國等 40 個國家共 560 篇的論文，每篇論文也都有 2 位以上
之審查委員，整體論文接受率約 67％。e-CASE & e-Tech 2011 今年是第五屆，訂定在 1
月 18 日、19 日、20 日為會議進行日，由於發表論文眾多，所以會議行程相當緊湊，所
有聽眾都只能擇有興趣且相近的研究論文旁聽。在本會議中，我們所發表的論文為： 
Dynamic multiple group key distribution protocol based on elliptic curve 
cryptography 
本論文主要提出一套動態群體金鑰分配協定，所有群體成員在執行完本協定
後，可以共享多把群體金鑰，此外，本協定亦解決了成員動態更新的問題，其安全性乃
植基於橢圓曲線上的密碼難題。由於各國學者紛紛提出自己的研究成果，所以交流熱
烈，也有多人對我們的協定感興趣，並互相提問與交流，在中場休息時間，也利用短暫
時間向多位國外學者自我介紹與推銷，相望未來有機會進行國際合作與參訪。此外，吾
人亦收集相關資訊安全與密碼學的相關研究資料，此類論文在對我們繼續探索資訊安全
與 Key distribution 等研究，皆有相當大的助益。 
 
2011 International Conference on e-Commerce, e-Administration, e-Society, 
Dynamic Multiple Group Key Distribution Protocol Based on Elliptic 
Curve Cryptography 
 
Narn-Yih Lee
a*
 and Wei-Lun Huang 
a
Department of Information Management, Southern Taiwan University,  
Tainan County 710, Taiwan, ROC 
*Corresponding Author: nylee@mail.stut.edu.tw 
 
ABSTRACT 
This study aims to propose a dynamic multiple group key distribution protocol for a 
group. All group members can share multiple group keys after running the protocol 
once. Besides, this paper tries to solve the problem that group members are changed 
frequently. Finally, the security of the proposed protocol is proved to be the same with 
breaking elliptic curve cryptography. 
 
Keyword: Elliptic curve cryptography, Key distribution protocol, Security, Group 
communication, Attack. 
 
1. Introduction 
Teamwork in this society has become more important than before.  Sometimes, 
group members need to communicate with each other secretly.  Therefore, how to 
keep group communication in secret has become an important issue.  Besides, group 
members may like to leave the group or new parties want to join the group. Dynamic 
group should be also considered for practicality. 
 
In a group key distribution protocol, group members can share a common key after 
running the protocol.  Each group member encrypts his/her secret messages by using 
the common group key. Any outsider cannot eavesdrop the group communication 
without the knowledge of the group key. Many research papers [Kim et al.][McGrew 
et al.][Yi] have been proposed to study how to generate group key efficiently. 
 
In 2008, Lee et al. [Lee et al.] proposed a multiple key exchange protocol for two 
parties. Each party can get four keys after running the protocol once.  At the same 
year, Biswas [Biswas] proposed a group key distribution protocol based on the elliptic 
curve cryptography (ECC in short).  One common secret key can be shared in the 
group. But, [Lee et al.] and [Biswas] do not consider the dynamic group problem.  
So, we refer [Lee et al.] and [Biswas] to design an efficient multiple group key 
distribution protocol, which can solve the dynamic group problem. 
2011 e-CASE & e-Tech International Conference 
January 18-20, 2011, Toshi Center Hotel, Tokyo, Japan
3329
        . Let                 be the x-coordinate values of     and 
   . A computes the signature    where               
            . B also runs the same procedure as A. 
Step 2 : A sends                       to B, and B sends 
                      to A at same time. 
Step 3 : A receives B’s signature     A will check the validation of    by 
verifying   
 
                       . B also runs the same 
procedure as A. 
Step 4 : If it holds, A will compute the four shared session keys as below: 
          ,           ,            and           . Similarly, 
B computes the four session keys as A. Because                
     , A has the same    with B. Besides, A shares the other three keys 
  ,    and    with B as well. 
 
Figure 1. The protocol in [Lee et al.] 
 
2.2 Biswas’s Method 
Biswas proposed a group key distribution protocol based on Diffie-Hellman 
mechanism.  Assume that there is one group controller and     group members. 
All of them want to generate one shared group key, such as Figure 2. 
Step 1 : The group controller and all group members choose their private keys    
and compute the corresponding public keys      
         where 
1    .  All public keys are revealed in public. 
Step 2 : Any group member    can share a Diffie-Hellman key    with the group 
controller   , where        
                       
       , 
where      . 
Step 3 : When the group controller computes the Diffie-Hellman key    form all 
group members, he/she will compute     
     
     
             as 
temporary group keys for each group member    and broadcast them. 
Joiner A Joiner B 
                      
                      
2011 e-CASE & e-Tech International Conference 
January 18-20, 2011, Toshi Center Hotel, Tokyo, Japan
3331
Then, they publish their public keys to all people in the group.  Once they want to 
share multiple group keys, they will run the group key distribution phase of the 
protocol. 
 
3.2 Group Key Distribution Phase 
In the group key distribution phase, group controller will broadcast related 
information to all group members.  Group members will check whether those 
information is sent by the controller or not.  If it is verified, group members will use 
them to generate a common point   , and send corresponding information to the 
group controller.  After generating all   , the group controller will compute a group 
common point    and send    and some random numbers to all members.  At 
last, members generate    by   , and use    and random numbers to generate 
multiple group keys. 
 
Figure 3. Group key distribution phase 
Step 1 : Group controller chooses a random number    and computes        . 
Let      be the x-coordinate value of      Then, he/she computes the 
signature                  and sends                 to all 
group members, where          is the certificate of    issued by a 
trusted certificate authority. 
Step 2 : Each group member    receives                 from the group 
controller, he/she will verify the correctness of S by checking   
 
     
      . If it holds, each group member    chooses a random number   , 
and computes  
 
       where      .  After generating   , they  
send them to the group controller.  At the same time, each group member 
   generates the common point     by computing             Let 
      be the x-coordinate value of      
Step 3 : When the group controller gets all  
 
, for      , he/she will use 
his/her secret random number   to generate the common points by 
computing          .  The group controller uses them to generate all 
temporary group common points     by computing 
Members 
1、                 
2、    
3、 {                  ,    } 
Controller 
2011 e-CASE & e-Tech International Conference 
January 18-20, 2011, Toshi Center Hotel, Tokyo, Japan
3333
by checking   
 
           . If it holds,    will randomly choose a 
number    and compute           Finally, he/she sends    to the 
group controller.  At the same time,    will generate the common point 
    by computing          .  Let       be the x-coordinate value of 
   . 
Step 3 : When the group controller gets  
 
 from   , he/she uses his/her private 
value    to generate the common point by computing          . Then, 
the group controller chooses a random number c to generate      
temporary group point     by        , and a new group point 
                      .  Let      be the x-coordinate value of 
  .  He/She further encrypts      and z random numbers with P'.  At 
last, he/she sends the temporary group point     and the ciphertxt 
                     to   . On the other hand, the group controller will 
compute        , and use an old group keys    to encrypt it. Finally, 
he/she broadcasts              to all old group members. 
Step 4 : When    receives                            from the group 
controller, he/she will use     to generate a group point    by computing 
            , and use    to decrypt                     . Then, 
he/she can get z numbers            and     . He/She will know 
whether the transmitted data is modified or not by comparing             
If it holds, he/she will use    and            to generate    
          ’. After these works,    can get the new group keys. 
Step 5 : When old members    receives             , they will use the old 
group key    to decrypt it. Then, old group members can generate new 
group keys                                        . 
 
3.4 Member Leave Phase 
Assume that one group member    wants to leave the group.  All unused group 
keys must be updated. Thus, this phase will use old group keys to generate new group 
keys without leaking out new group keys’ generator to   .  
2011 e-CASE & e-Tech International Conference 
January 18-20, 2011, Toshi Center Hotel, Tokyo, Japan
3335
However, to take    from    is equivalent to break the elliptic curve discrete 
logarithm problem.  Thus, the proposed protocol can resist the known key 
attack. 
The comparisons among the proposed protocol with [Lee et al.] and [Biswas] are 
listed as Table 3. 
Table 3. Comparisons 
 
Lee et al. [Lee et 
al.] 
Biswas [Biswas] Ours 
The number of  
group members 
2     
Based 
cryptosystem 
ECC 
Diffie-Hellman 
key distribution 
system 
ECC 
Key generation 
type 
Agreement Distribution Distribution 
Computation cost 
(Group controller) 
10 
 +1      
Computation cost 
(Member) 
3     
The number of 
group keys 
4 1   
 
5. Conclusion 
We have proposed an efficient dynamic multiple group key distribution protocol 
based on ECC.  It can solve the dynamic group problem.  Comparing to [Lee et al.] 
and [Biswas], our protocol is more efficient and flexible in sharing group keys.  The 
number of keys is equivalent to the number of chosen random numbers, and can be 
adjusted for the applied environments. Moreover, the proposed protocol is secure 
from the eavesdropping attack and the known key attack. 
 
ACKNOWLEDGEMENTS 
This research was supported in part by the National Science Council of Republic of 
China under the contract number NSC 99-2221-E-218 -046. 
 
REFERENCES 
Lee N.Y., Wu C.N., Wang C.C., 2008, Authenticated multiple key exchange protocols 
based on elliptic curves and bilinear pairings, Computers and Electrical 
Engineering, 34:12–20. 
2011 e-CASE & e-Tech International Conference 
January 18-20, 2011, Toshi Center Hotel, Tokyo, Japan
3337
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/26
國科會補助計畫
計畫名稱: P2P殭屍網路之偵測與防禦
計畫主持人: 李南逸
計畫編號: 99-2221-E-218-046- 學門領域: 資訊安全
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
協助辦理全國資訊安全研習營，並擔任課程講師。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
