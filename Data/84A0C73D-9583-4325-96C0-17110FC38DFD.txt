 2
發展出一個線性規劃模式及二次式規劃模式，分別以總生產時間和平均流程時間最短為目
標函數，來研究最佳批量的分割策略。此外還有 Potts 與 Van Wassenhove(1992)利用最小化
與時間相關的目標函數來探討批量排程（batch scheduling）問題，他們將批量排程分為批
量決策（batching）與批量訂定(lot-sizing)，批量決策為決定相似的工作是否被集合在一起
同時排定，批量訂定即是決定在什麼時間點，如何把一個處理批分割成數個子批。Trietsch 
與 Baker(1993)則是發展一個三階製程，決定各製程間最佳轉運批量，使其總製造時間最
小。駱景堯等(2004)發表批量分割於零工式排程之影響分析中探討批量分割之觀念應用於零
工型生產系統中可有效的縮短總完工時間或降低提早與延遲完工的懲罰值，其縮短之幅度
以兩等批量分割效益最大，隨著分割數的增加，其效益會逐漸減緩。邱煥能與張仁輝(1996)
則研究在流程型生產環境中，單產品批量流轉運批量的最佳配置，其主要研究批量分割對
於總生產時間縮短效益的影響，提出批量分割邊際效益遞減定理來說明當批量分割數越
多，其邊際效益越小；並且提出ㄧ探索解與最佳解加以比較。Chan 等(2005)利用基因演算
法(Genetic Algorithms, GA)在零工式的生產環境來求解較佳的批量配置方式，以達到重疊生
產的效果來縮短總生產時間。 
在成本模式部份，Graves 與 Kostreva(1986)研究兩機器站製造系統的批量分割，並且
在需求固定、生產速度相等以及子批相等的前提下，同時考慮設置成本、存貨成本以及運
輸成本等成本，推導出一成本函數來決定子批的分割數，追求成本能極小化。Moily(1986)
研究證明在前段製程的生產率大於後段製程，此時利用批量分割則可以有效的減少成本。
Karimi(1992)研究多階段序列式生產系統，以考量存貨成本與設置成本最小為目標，發展分
枝界限法來求解批量分割與批量合併問題，並證明此演算法為最佳。Low 等(2004)三位在
研究零工式生產環境下，各種批量分割情況下的效益，包括相同子批大小、不同子批大小
等，建構數學規劃模式來求得最佳解，並將所得結果以統計分析方法比較其效率，其目標
以材料處裡成本、設置時間成本與存貨成本三者加總的總成本最小。 
對於批量分割的探討，理應考慮因批量分割所增加的成本，像是各批量經過機器都需
要設置等，本研究則是考慮每批量的搬運成本，當一子批從ㄧ機台搬運到另ㄧ機台，視為
一次搬運，當分批數越多時，所需要的搬運次數也就越多，在實際的生產過程中，工廠可
能會因分批數的增加，每批批量大小的減少而適時改變搬運容器；也有可能不論批量大小
為何，都使用相同搬運容器，像是固定使用一棧板、一搬運車等，本研究基於後者，假設
每次搬運，不論其搬運批量大小為何皆有一固定成本。 
在排程解答搜尋部分，本研究以蟻群最佳化方法(Ant Colony Optimization, ACO)為主
要研究工具，並撰寫出一套可以快速求解重疊式生產排程之啟發式演算法。蟻群演算法最
早由 Dorigo(1992)所提出，藉由模擬自然界螞蟻如何互相傳遞訊息並找尋在食物與巢穴間
最短路徑的現象來建構演算法。蟻群演算法的應用範圍非常廣泛，包括網路問題、TSP、
VRP、QAP 以及生產排程問題等。以蟻群族群演算法求解零工式排程問題的相關文獻包括
有 Zwaan 與 Marques (1999)以最小化其最大完工時間為績效指標，在不同機器與工作數的
零工式排程問題上以蟻群演算法求解，並且加入變異運算子，討論有關的參數最佳化設定，
比較最後的排程結果。楊烽正(2005)利用螞蟻族群最佳化演算法(ant colony optimization, 
ACO)求解擴充式的零工生產排程問題，所謂擴充式的零工生產排程問題指工件的加工順序
是複雜的樹狀結構，且同ㄧ作業有多重的機器可以選擇，且在每台機器上的加工時間並不
相同。並與已發表的文獻比較求解結果，顯示在擴充式排程問題上，蟻群演算法能求得不
錯的解。 
在排程績效準則的衡量方面，本研究對於排程績效的要求考量多目標，其中包括由流
程時間(flow time)乘上所給的成本權重計算出的「在製品存貨成本」、機器設備的閒置時間
(machine idle time, MIT)乘上成本權重計算出的「機器設備的閒置成本」，以及由分批數計算
而來的搬運成本(transport cost)，將此三種成本組合來做為本研究訂單排序之衡量依據。 
 
2. 排程模型建構 
2.1 符號定義 
ijkijopkijopkopk STXMXFT ≤×−−× )1( mk ,...,2,1∈∀ ; ni ,...,2,1∈ ; iUj ,...,2,1∈           (7) 
kyijijyk FTST )1( −≥   ; mk ,...,2,1∈∀ ni ,...,2,1∈ ; iUj ,...,2,1∈ ; by ,...,2,1∈           (8) 
ijykyzji FTST ≥+ )1(   ; mk ,...,2,1∈∀ ni ,...,2,1∈ ; iUj ,...,2,1∈ ; by ,...,2,1∈           (9) 
 
有關數學式意義說明如下：(1)式為目標式，主要在求三績效準則加總的總成本最小，
由工件流程時間 、機器設備閒置時間 以及加總搬運次數 分別乘
上其成本係數C 、C 與C 計算而得的「在製品存貨成本」、「機器設備閒置成本」與「搬
運成本」三績效衡量準則加總的總成本最小。其中在流程時間(flow time)的計算上，為將每
一作業的最後一子批離開機器的時間最相加總。另外在搬運次數的計算上面，由於每一工
件所需要的作業U 並不完全相同，因此將U 乘上分批數(共有1、2、3、4批四種分批情況)
的加總當作搬運次數，也是所謂的總子批數。(2)式為機器閒置時間 的定義；依
Pinedo(2002)在Scheduling一書中的定義:機器閒置時間為最大完工時間 減去在機器上
所有經過工件的加工處理時間，同時因為考量設置時間且作業必須在機器上設置，所以還
需要扣除各個作業在機器上應有的設置時間。(3)式為各個子批的完工時間 會等於開始
時間 加上加工時間 ，如果該子批為作業的第一批次的話，就還要加上該作業的設
置時間。(4)式為每一工件的最後完工時間會大於等於該工件所有作業的完工時間。(5)式為
工件之每個作業的完工時間會大於等於該作業所有子批的完工時間。(6)與(7)則為判斷在同
一台機器上，兩作業間的先後關係；(6)式表當01變數 成立時， 在 前面加工，
則 的第一子批開始時間 會大於 最後一子批的完工時間 。反之，若01變數
不成立，則 在 前加工，則利用(7)式表 的第一子批開始時間 會大於等
於 的最後一子批的完工時間 。(8)式與(9)式則表示各子批在作業之間先後關係的
限制式。(8)式表示任一子批的開始時間必須大於等於前一子批的完工時間。(9)式表示在在
工件中同一子批之間的移轉，後一作業的子批其開始時間要大於等於前一作業的子批的完
工時間。 
∑∑∑
= − =
n
1i
ijk
U
1j
m
1k
F
i
kM ∑=×
n
1i
iUB
1 2 3
i i
kM
maxC
ijbkFT
ijbkST ijbkP
ijopkX ijkJ opkJ
opkJ kopST 1 ijkJ ijbkFT
ijopkX opkJ ijkJ ijkJ kijST 1
opkJ opbkFT
 
3. 蟻群演算程序 
針對本研究中所探討之重疊式零工生產排程問題，本研究建構之蟻群演算演算程序： 
1.設定相關參數 
首先設定參數部分，包括決定螞蟻的個數(z)、局部費洛蒙蒸發比例(ρ)、全域費洛蒙
蒸發比例(α)、費洛蒙量(pheromone trails)與貪婪法則(greedy heuristic)之相對重要性的參數
(β)和控制「利用」(exploitation)與「探索」(exploration)行為之相對比例的參數( )。相關
參數的設定如表 1 所示。 
0q
表 1 蟻群相關參數設定 
參數名稱 0τ  α  q0 Q ρ  β  
數值 5 0.1 0.7 25 0.1 3 
2.狀態移轉法則 
[ ][ ] }{
⎪⎩
⎪⎨
⎧ ≤= ∈
otherwisesrP
qqurur
S
k
rJu k
),(
     ),(.),(maxarg 0)(
βητ
每一隻螞蟻都是使用狀態移轉法則（state transition rule）來選擇出下一個節點以建立
路徑，而逐步建立出完整解。狀態移轉法則分成利用與探索兩種行為模式，表現在公式(10)。
式中 為介於 0 和 1 之間的隨機變數，在執行過程中會由系統隨機產生，當 時，螞蟻
會依「利用」來選擇路徑，即公式(10)上半部。 
q 0qq ≤
 
 (10) 
 
 4
5. 終止條件 
本研究採用固定回合數的方式來終止蟻群演算法，其終止條件的設定隨不同問題規模
而有所不同，主要是根據前測的收斂效果，如表 2 所示。 
表 2 各種問題規模下螞蟻回合數 
問題規模 螞蟻 問題規模 螞蟻 問題規模 螞蟻
n m 回合數 n m 回合數 n m 回合數
3 3 7 7 11 11
4 4 8 8 12 12
5 5 9 9 13 13
6 6 10 10 14 14
  
100
  
200
15 15
300
問題規模 螞蟻 問題規模 螞蟻 問題規模 螞蟻
n m 回合數 n m 回合數 n m 回合數
3 3 7 7 11 11
4 4 8 8 12 12
5 5 9 9 13 13
6 6 10 10 14 14
  
100
  
200
15 15
300
 
4. 資料測試與分析 
關於本研究的資料測試型態為利用工件數與機器數相等的生產環境來進行資料測
試。分為大規模問題測試與小規模問題測試；小規模問題的測試從為 n=3、m=3 到 n=6、
m=6，而大規模問題則是從 n=7、m=7 到 n=15、m=15，同時各種問題規模皆進行 30 次的
求解。 
在排程目標部分，本研究旨在求三項成本加總的總成本最小，分別由三種績效準則乘
上相對應的成本係數將其轉換為成本，所以在成本係數的給定方面：流程時間其對應的成
本係數 為 1、而機器閒置時間所對應的成本係數 為 10；另外，每搬運批的成本係數
則為 100。成本係數的值可以依實際需要而加以給定，甚至也可以將任兩者給定為 0，而求
其單一績效準則。本研究中所給定的成本係數，主要是希望在同一問題的求解下，對各別
績效準則的重要性要求相同。 
1C 2C 3C
至於其他相關條件的設定：每台機器所需的設置時間，由均勻分配 隨機產生；
針對每個工件所需要的作業數，為隨機決定，與機器數相同或是小於機器數，因此每個工
件所需要的作業數不見得相同，而當工件的作業數確定之後，會再隨機決定其所需要用來
進行加工的機器，每一個作業只能在一特定機器上加工。而每個作業的加工時間由
決定，當需要分批時，則再將其除以分批數 b。以上所述皆在 DEC C++上隨機產
生，而且使用 CPU 等於 Petium IV 2.0 以及 512 RAM 的個人電腦來同時執行 Lingo 以及蟻
群的求解。 
)30,10(U
)100,50(U
4.1 小規模問題 
在小規模問題時，同時利用蟻群與 Lingo 求解，將其結果做有效性、健全度以及批量
分割的效益分析。 
1.有效性分析 
 6
lingo
lingoant
Outcome
OutcomeOutcome −−=1E
有效性的計算方式為公式(16)，主要為將 Lingo 所得的最佳解與蟻群所得的啟發解加
以比較。 
 
                                                                      (16) 
由表 3 可以看出，蟻群的求解品質相當良好，都有接近 90%的有效性，最小為 166 ××
的 88%，同時其求解時間比起 Lingo 更是優勢，在 55× 的各種分批情況皆只需十幾分鐘；
在 6 時已經是從ㄧ兩小時(不分批)到幾天(分批數為 4)的差距。反觀蟻群皆能在很短時間
內即求出近似最佳解，在小規模問題的求解下，蟻群所需時間皆不超過 1 秒。 
6×
 8
1
1
Outcome
Benefit yy =                                     
 OutcomeOutcome − 4,3,2=∀y                            (17) 
 
各分批的效益為較不分批時所降低的比例；邊際效益為減去前一分批的降低比例。其分析
結果如下: 
(1) 分批數為 2 時所帶來的邊際效益最大: 流程時間與機器閒置時間兩項績效衡量準則
當分批數為 2 時對目標值的改善比率最大，隨後因批量增加而改善比率隨之減緩。 
(2) 批量分割對機器閒置時間所帶來的效益最大:從表 5 可以看出，在各種問題規模下，
當分批數為 2 的情況下，機器閒置時間效益平均超過 30%；當分批數為 4 時，其平
均效益為 50%，表示在分批數為 4 時，機器閒置時間只有不分批的ㄧ半，所以分批
對機器閒置時間的減少，其效益相當顯著。批量分割在流程時間的效益不如機器閒
置時間來得顯著，當分批數為 2 的情況下，流程時間的平均效益約為 12%，且可以
看出從分批數 3 與分批數 4 之間的邊際效益已經相當微小，其邊際效益大約為 1%
到 2%。 
(3) 流程時間與機器閒置時間其邊際效益都具有邊際效益遞減的現象。 
(4) 由於流程時間與機器閒置時間會隨分批數增加而降低，使在製品存貨成本與機器閒
置成本也跟著降低；但是搬運成本卻會增加，所以總成本在面臨此三者的取捨後，
總成本最小之處大多發生在分批數為 2 時，從表 5 知，目標值在在分批數為 2 時，
邊際效益還為正，但是分批數 3 以後皆為負，所以考慮各種分批情況下，具有最小
總成本的分批數多為分批數 2 時。 
表 5 小規模批量分割平均效益表 
n m 分批數 2 3 4 
降低比例 13.51% 9.96% 1.30% 總成本 邊際降低比例 13.51% -3.55% -8.66% 
降低比例 12.42% 16.91% 19.61% 流程時間 邊際降低比例 12.42% 4.49% 2.70% 
降低比例 36.23% 45.43% 51.91% 
3 3 
閒置時間 邊際降低比例 36.23% 9.20% 6.49% 
降低比例 15.21% 13.07% 6.07% 總成本 邊際降低比例 15.21% -2.14% -7.00% 
降低比例 15.49% 17.00% 18.59% 流程時間 邊際降低比例 15.49% 1.51% 1.58% 
降低比例 36.60% 49.94% 54.54% 
4 4 
閒置時間 邊際降低比例 36.60% 13.34% 4.60% 
降低比例 13.33% 6.46% 1.19% 總成本 邊際降低比例 13.33% -6.88% -5.26% 
降低比例 10.01% 12.86% 14.19% 流程時間 邊際降低比例 10.01% 2.85% 1.33% 
降低比例 36.27% 39.81% 49.53% 
5 5 
閒置時間 邊際降低比例 36.27% 3.53% 9.73% 
降低比例 12.99% 11.36% 5.72% 總成本 邊際降低比例 12.99% -1.63% -5.63% 
降低比例 12.39% 11.56% 12.56% 流程時間 邊際降低比例 12.39% -0.83% 1.00% 
降低比例 28.76% 40.99% 44.36% 
6 6 
閒置時間 邊際降低比例 28.76% 12.24% 3.36% 
4.2 大規模問題 
利用蟻群進行大規模問題求解，並分析其健全度與批量分割的效益。 
1.健全度分析 
在大規模問題，對於蟻群健全度的驗證，我們針對各種問題規模隨機產生一組解，然
後重複執行蟻群求解 30 次，如表 6，我們列出蟻群最佳解、蟻群最差解以及平均解；雖然
 10
(2) 批量分割的效益在機器閒置時間最為顯著，分批數為 4 時，機器閒置時間較不分批
平均減少將近 50%。 
(3) 批量分割在流程時間效益:為當分批數為 2 顯著降低約為 13%，但是各種分批情況
所帶來效益已無顯著差異，因為分批數 3 與 4 時其邊際效益已很小。 
(4) 流程時間與機器閒置時間也呈邊際效益遞減現象。 
(5) 蟻群的求解時間仍具效率，花費時間最多約為 37 秒。 
(6) 在大規模問題的蟻群求解下，四種分批方式加以比較，如表 7 所示，為總成本最小
處多發生在分批數為 3 時，在分批數為 3 時總成本的邊際效益為正值；而分批數為
4 時以為負值可知。 
表 7 大規模批量分割平均效益表 
n m 分批數 2 3 4 
降低比例 13.36% 13.25% 8.63% 總成本 邊際降低比例 13.36% -0.11% -4.62% 
降低比例 12.43% 16.47% 17.70% 流程時間 邊際降低比例 12.43% 4.05% 1.23% 
降低比例 33.32% 46.38% 52.62% 
7 7 
閒置時間 邊際降低比例 33.32% 13.07% 6.24% 
降低比例 16.36% 15.37% 10.95% 總成本 邊際降低比例 16.36% -0.99% -4.42% 
降低比例 14.02% 18.30% 19.16% 流程時間 邊際降低比例 14.02% 4.28% 0.86% 
降低比例 38.00% 48.12% 54.28% 
8 8 
閒置時間 邊際降低比例 38.00% 10.12% 6.17% 
降低比例 12.47% 9.81% 5.32% 總成本 邊際降低比例 12.47% -2.67% -4.49% 
降低比例 12.64% 14.07% 16.67% 流程時間 邊際降低比例 12.64% 1.44% 2.60% 
降低比例 30.11% 38.94% 43.40% 
9 9 
閒置時間 邊際降低比例 30.11% 8.83% 4.45% 
降低比例 17.47% 14.53% 10.77% 總成本 邊際降低比例 17.47% -2.93% -3.76% 
降低比例 14.14% 16.93% 17.81% 流程時間 邊際降低比例 14.14% 2.80% 0.87% 
降低比例 38.88% 43.55% 48.92% 
10 10 
閒置時間 邊際降低比例 38.88% 4.68% 5.37% 
降低比例 13.04% 14.48% 9.58% 總成本 邊際降低比例 13.04% 1.44% -4.89% 
降低比例 12.04% 17.33% 17.77% 流程時間 邊際降低比例 12.04% 5.29% 0.45% 
降低比例 31.53% 43.48% 46.35% 
11 11 
閒置時間 邊際降低比例 31.53% 11.95% 2.87% 
降低比例 15.03% 15.37% 11.51% 總成本 邊際降低比例 15.03% 0.33% -3.85% 
降低比例 14.58% 16.41% 17.41% 流程時間 邊際降低比例 14.58% 1.83% 1.00% 
降低比例 33.56% 43.08% 45.87% 
12 12 
閒置時間 邊際降低比例 33.56% 9.52% 2.79% 
降低比例 15.70% 17.73% 14.13% 總成本 邊際降低比例 15.70% 2.03% -3.60% 
降低比例 14.50% 19.03% 19.75% 流程時間 邊際降低比例 14.50% 4.53% 0.72% 
降低比例 31.07% 42.26% 44.72% 
13 13 
閒置時間 邊際降低比例 31.07% 11.18% 2.46% 
降低比例 16.63% 17.71% 14.93% 總成本 邊際降低比例 16.63% 1.07% -2.78% 
降低比例 13.85% 17.25% 18.81% 
14 14 
流程時間 邊際降低比例 13.85% 3.40% 1.56% 
