摘要: 
從先前學者研究遊戲融入學習，能提升學生學習興趣及學習成
效，但這種系統必須針對不同主題開發各別軟件，其缺點為成本高且
內容缺少彈性化，本研究將知識管理概念結合角色扮演遊戲，期望藉
由遊戲情境闖關之動機，激發其對學習之意願及學習效率；系統分為
兩大主題--「遊戲」與「學習」分開處理，有別於目前市場將學習融
入遊戲之軟件。此種架構下，不但可以節省開發成本，且內容可彈性
化，目前尚未有相關學者研究或開發該領域。 
本研究主題有下列主要研究項目: 
1. 如何將知識管理應用於學習診斷； 
2. 透過學習診斷判斷學生程度並提供學習導讀； 
3. 提高學生對學習之興趣； 
4. 協同學習及存取控制。 
 研究動機 
教育部之教育改革行動方案中曾規劃補救教學之辦理內容：「研究
補救教學之教材與教法，提供更多元的學習機會，以配合學生個別差
異，激發學生潛能，達到適性教育目標」。然而補救教學之實際運作上
仍遭遇一些困境，例如：課程開設時間利用下課後及假日，常面臨教
師人力不足、學生上課情緒低落、缺席率居高不下的窘境等。 
有鑑於此，國內許多研究提出了利用數位學習來施行補救教學，
數位學習有著傳統教學所沒有的特點：不受制於時間與空間的分隔，
實現任何時間與地點皆可學習的理想，另外還有其它特點：自調式學
習進度、豐富的學習資源、降低教學成本與用途廣泛等，因此如將數
位學習應用於補救教學上應有很大之助益，但是如果數位學習之設計
只是一味地將教材上網，仍無法解決補救教學在學習動機與適性化方
雖然數位學習已能方便提供多元化的學習環境，但仍有許多值得
改進之處，如教育部在「挑戰 2008 國家發展重點計畫」中提到，在資
訊化時代的社會，國民具有資訊應用知能與完善的數位化學習環境是
國家發展的基礎條件，目前各級學校已完成網路學習基礎硬體建設，
但是中小學師生要應用網路資源協助教與學及網路學習其內涵則有待
加強建置。故自教育部極力推展「資訊科技融入各科教學」教育政策
以來，網路教學系統的實施與推展遇到瓶頸及缺失如下： 
． 教師研習各資訊科技後只是片斷零亂的資訊科技使用，無法將其整
合和運用，造成資源浪費。 
． 資訊科學技術日新月異，要熟悉各程式語言及軟體使用往往要投入
大量時間與腦力，現實環境無法配合，造成老師排斥及望而卻步。 
． 同學與同學、教師與同學之間缺乏教學互動機制，無法結合教學理
論提昇學習效果。 
． 網路課程架設在其他教學平台，受制他人操作常要一段適應期，無
法逹到隨時補充教材及更新教學內容的機制。 
本計畫所建置之遊戲教學平台除了達到提昇補救教學之學習成效
外，最終乃希望能可以永續經營以造福補救教學之學生、家長與教師，
因此，除持續改良資訊技術外，最重要的是真正證實此一研究以結合
角色扮演遊戲與動態評量之方式實際具有可提昇補救教學之學習成
效，因此有必要進行一系列教師專家會談並實地推行與實際進行施
測，以證實此研究之可行性。 
 研究目的 
 本計畫目的在於利用數位學習方式輔助國小學童補救教學，並
透過結合角色扮演遊戲與動態評量之學習方法以提高學習動機，並收
到實質之教學成效，達到教育改革之目標。 
 第
 
 一
 年
 
角色扮演遊戲功能分析 
遊戲劇本 
遊戲戰鬥 
遊戲探索 
遊戲任務 
角色扮演遊戲功能規格 
角色扮演遊戲模組開發 
動態評量功能分析 
學習歷程與記錄 
出題評量 
概念推論 
教材提示 
動態評量功能規格 
動態評量模組開發 
角色扮演遊戲模組與動
態評量模組耦合測試 
角色扮演遊戲與動態評
量雛型 
補救教學之教學策略 選題策略 
進行教學實驗 
角色扮演遊戲評估 動態評量模組評估 
完成角色扮演遊戲與動
態評量應用程式開發 
修正 
符合需求 符合需求 
修正 
RPGDA 遊戲學習平台 
RPGDA 遊戲學習平台之 
推廣與教育訓練 
RPGDA 遊戲學習平台之 
教學實驗 
RPGDA 遊戲學習平台之 
補救教學實施之檢討 
RPGDA 遊戲學習平台之 
補救教學實施成效統計 
RPGDA 遊戲學習平台之 
補救教學成效驗收 
RPGDA 遊戲學習平台之 
補救教學觀摩會 
完成研究報告 
本研究計畫之進行步驟與工作項目 
課程專家教師知
識擷取 
課程概念、教材、題
庫之映對與建立 
RPGDA 遊戲學習平台之 
永續經營與持續改進 
第
 
 Բ
 年
 
第
 
 Կ
 年
 
模組各別開發應用程式，並使其具開放性、分散性與整合性。 
4. 結合附近國民小學學童，針對國小補救教學對象實施 RPGDA 雛型之
測試、評估與調查。 
5. 依測試結果改進與檢討 RPGDA 雛型，如須改進 RPGDA 之雛型，則重
回到步驟 3，修正兩模組之規格、設計與結合方式，依此反覆進行，
直至找出最佳之結合模式。 
6. 完成 RPGDA 之應用程式開發，並使應用程式所完成之 RPGDA 課程元
件具有開放性、分散性與整合性。 
7. RPGDA 中動態評量系統與角色扮演系統整合。(可能延續至第三年上
半年) 
 
 遊戲教學實驗與成效研究 (第三年) 
1.依據前二年所開發之 RPGDA 之遊戲學習平台，舉辦說明會並邀請具實務
經驗之教師參與教育訓練，並將其推展至日常之補救教學活動中，使其
與補救教學同時並行運作，並記錄學習成效與具體指標之達成。 
2.依據補救教學之實務運作與平行測試之結果，調整動態評量與遊戲之參
數，使系統更具實用之價值。 
3.發展融入本計畫的實驗組與控制組。 
4.探討學生不同的「學習型態」，其「學習成效」之相關議題。 
 1 
運用模糊理論支援電腦適性化評量的探討 
林明宏 王昌斌 
南華大學資管所在職專班 南華大學資管所 
cyc-htes0019@mail.htes.cyc.edu.tw                cbwang@mail.nhu.edu.tw 
摘要 
本研究探討以複習評量為前提的電腦適性化評量，目的在根據學生的表現提供合適的題目，並診斷學生的
學習成果及提供教學上的建議。 
在本文中以一組向量屬性來表示一道題目，這組屬性分成兩個部份，即主題概念和解題能力。首先以分數
主題，從分數涵義的構面分成七個屬性，數學解題能力的構面則分成三個屬性，這十個屬性分別以模糊統計試
驗及屬性空間測度的方式，利用教師對題目的敘述所隱含的概念及題目敘述方式加以判斷以獲得數值，然後再
以模糊聚類分析及判斷屬性值強度的方式分別建立兩種題目群組以提供兩種選題策略的運用，以根據學生的表
現提供不同難度或不同概念題目的個別化施測。 
本研究期望以複習評量為前提下，建立評量題目可以自由增刪的電腦適性化評量系統，並且可適用於不同
科目的設計。 
關鍵詞：模糊理論、分數概念、電腦適性化評量 
1.前言 
1.1 研究背景及動機 
隨著電腦的普及，將可利用電腦所提供之互動學習
的指導，幫助學生自行學習或複習。因此，探討如
何利用電腦做適性化動態評量將是一個值得研究的
方向。在電腦適性化動態評量的探討，為何使用模
糊理論，模糊理論可能有以下的特點： 
一、模糊理論可用於電腦系統的設計。題目可在電
腦中建立適合的群組以供選用。 
二、模糊理論模仿人類的推理方式。在自然和社會
現象中，差異往往要通過一個過渡的形式，而處於
過渡中的差異，便具有“亦此亦彼”的性質，因此
學生是否學會了？會到什麼程度？是否熟練了？熟
練到什麼程度？其實都具有中間過渡的不明確性。 
因此從這種巨觀思維上，嘗試如何運用模糊理論。 
三、從應用的角度思考。本研究則從應用的角度著
手，不探討細節的內部認知歷程。概念與概念之間、
概念與題目之間、題目與題目之間，有可能形成複
雜的連結關係，因此運用模糊理論來處理系統的複
雜性，將既有的題目大量並且直接的納入題庫中，
並且允許評量題庫能自由的增刪題目，在此情況下
建立動態評量的方法，根據學生不同的表現給予合
適的題目，以判斷學生的學習狀況。 
1.2 研究目的 
本文實作一個分數的電腦適性化評量，評量六年級
學生在分數方面的學習狀況，以作為補救教學或加
強學習的參考。實施電腦適性化評量，能依據個別
學生不同的表現給予不同評量題目，以判斷個別學
生的學習狀況並提出建議，不僅節省老師在施測上
的心力，施測後對每位學生都可加以指導，有些部
分重新教學，有些部分指導學生自行學習，如此可
不必全面性的複習，達成教師補救教學及學生強化
學習上的效率。 
1.3 研究限制 
實驗的誤差至少考慮以下三項 
（1）屬性值歸屬度的穩定性是否足夠 
（2）題目難易程度的歸類方式是否恰當 
（3）題目形式的多樣性是否充足 
因此在研究過程的嚴謹性方面並不足夠，只是嘗試
提出一個可行的方向。 
2.文獻探討 
2.1 電腦適性化評量 
現今測驗專家們也正積極地發展電腦化測驗
(CBT)。Ferraris（1991）認為電腦使用在教育上的
 
一附件  
 3 
   e.12×（3/4）把12放大了3倍在縮小4倍。 
綜合以上的探討，把分數題目所隱含的概念列舉如
下：◎除法  ◎比的概念  ◎單位分數◎等值分數   
◎比例推理 ◎應用相同的基數「1」◎ 應用不同的
基數「1」 
2.4 模糊理論的探討 
2.4.1 模糊集合 
令論域 U=｛ 1x , 2x ,…, nx ｝ 
模糊子集A=
 

n
i i
iA
x
x
1

＝
 
1
1
x
xA ＋＋…＋
 
n
nA
x
x
 
亦可用向量形式表示模糊子集，但歸屬度為 0的項
不能略去。 
A=（（ 1x ，  1xA ）, ,…（ nx ，  nA x ）） 
  或 A=（  1xA ,  2xA ,…,  nA x ） 
以上所描述的模糊集合的表示法是在一個論域上的
表示法。在『模糊集合於學習成效分析之應用』這
篇論文中，對於一道題目的表示則是在五個論域上
分別給予歸屬程度，將每道題目分成五個學習概
念。即使兩個人的總分相近，因為在不同的學習概
念有不同的得分，可解釋他們在不同的學習概念了
解的程度不同，這種對於題目給予向量屬性的表示
方法是本研究思想上的啟發。 
2.4.2 歸屬函數的建立 
本文中歸屬函數以統計試驗和屬性測度加以確定。 
一、模糊統計試驗  
在機率統計中，事件 A發生的機率 P（A）定義為 
 
實際應用中，只要 n求足夠大就可以了 
與此類似定義模糊統計試驗          
             
A 是模糊子集 
模糊統計試驗具有歸屬頻率穩定性的特點。 
若一道題目中某一概念，在 10人中有 8人勾選此一
概念，則此一概念的歸屬數值為0.8。 
二、屬性測度 
例如設 F為消費者對某種商品的滿意度，把 F分為
五類， 1C ＝｛很滿意｝ 2C ＝｛滿意｝ 3C ＝｛中等｝
4C ＝｛不滿意｝ 5C ＝｛很不滿意｝，這五類彼此不
相交，｛ 5,2,1 CCC  ｝稱為屬性空間。 
x iC 表示 x具有屬性 iC ，，記為  ix C ，屬性測
度在  1,0 之間取值。須滿足以下的規則。 
1.  ix C ≧0，i=1～5 
2.   1Fx  
3.,  jiCC ji   ，    
i
ixi
i
x CC   
即消費者對某種商品的滿意度，在屬性空間
｛ 5,2,1 CCC  ｝中   1
5
1

i
ix C  
對於題目中表示強度的屬性 □1 □2 □3 □4 □5 
可使用 1p ×1＋ 2p ×0.75＋ 3p ×0.5＋ 4p ×0.25＋
5p ×0。獲得數值。此時 1p ＋ 2p ＋ 3p ＋ 4p ＋ 5p ＝
1 （ ip ≧0 , i=1～5）符合屬性測度的規則。 
2.4.3模糊理論在選題策略上的應用 
2.4.3.1 題目向量屬性值的測度 
綜合上述文獻的探討，將題目向量的屬性，分成兩
個部份，即（分數概念，解題知識能力） 
例如，某人對以下兩道題目所勾選的選項如下 
 １.（ ）兩個真分數相乘，所得的積必為 ○１整數○２
真分數○３假分數○４帶分數。 
（以下二個選項為二選一） 
□應用相同的基數「1」      應用不同的基數「1」 
（以下選項可以複選） 
□除法   □比的概念     單位分數 □等值分數
□比例推理    
題意表達方式：□1 □2 □3 □4   5 
解題策略：    □1 □2    3 □4 □5 
計算難度：      1 □2 □3 □4 □5 
 ２.（ ）9
8
5
＝ ○１ 958 ○２ 9÷58 ○３ 5÷8÷9 ○４ 
95÷8。 
（以下二個選項為二選一） 
  應用相同的基數「1」   □應用不同的基數「1」
（以下選項可以複選） 
  除法     比的概念    單位分數□等值分數  
□比例推理    
題意表達方式：  1 □2 □3 □4 □5 
解題策略：   □1 □2     3 □4 □5 
 5 
困難題目題庫 相同的基數「1」 模糊聚類分群 
 不同的基數「1」 模糊聚類分群 
題目先依難易度分類，再根據是否相同的基數分
類，最後根據五個分數概念作模糊聚類分群。 
選題策略Ⅰ：在某一難度等級中，由模糊聚類分析
的不同群聚中選題，使題目間有較大的差異以作為
進退級的考量。 
b.配合選題策略Ⅱ的題目群組Ⅱ 
簡單題目題庫 相同的基數「1」 各概念群組 
 不同的基數「1」 各概念群組 
中等題目題庫 相同的基數「1」 各概念群組 
 不同的基數「1」 各概念群組 
困難題目題庫 相同的基數「1」 各概念群組 
 不同的基數「1」 各概念群組 
題目先依難易度分類，再根據是否相同的基數分
類，各概念群組表示某一概念屬性值超過一定閾值
的題目即可聚成一群。同一道題目有可能出現在不
同的概念群組。 
選題策略Ⅱ：針對某一概念作檢測，表現良好則進
級至答對率降至某一閾值終止測驗，表現不佳則退
級至答對率升至某一閾值終止測驗。 
（2）學習者資料庫 
 
用來了解解題能力的表現及避免出現相同題目 
4.預期結果與展望 
一、與一些有關選題策略的論文直觀上的相比，本
研究不試圖研究概念與概念之間、概念與題目之
間、題目與題目之間，有可能形成複雜的連結關係。
只要能大概判斷學生知識概念不會的範圍，或不熟
悉的程度或大致判斷解題能力的狀況就能採取適當
的教學措施。 
二、題目給予一組向量屬性的好處 
（一）在題庫中可自由的增刪題目，關注的焦點在
題目本身，隨時新增的題目根據自身的向量屬性在
題目群組Ⅰ和題目群組Ⅱ中分別加入適當的群組。 
（二）題目藉由向量屬性來分類後，不僅可用來評
量亦可用來教學。因此最重要的是對學科領域知識
的分析才是主要關鍵，如何去找出合適的概念分類
成為題目的向量屬性，然後才是借用模糊理論的觀
念和方法加以應用。 
三、可通用於其他科目複習評量的設計。例如在社
會科中主題概念的部份則探究學科實際內容的概
念，問題解決能力的部份則 以 Bloom 的四個知識向
度：1.事實知識 2.概念知識 3.程序知識 4.後設認知
知識。來表示，如此便可仿照本文的方式加以設計。 
 參考文獻： 
涂金堂、林佳蓉 著，「如何協助學生解決數學應用 
問題」，高雄復文圖書出版社，民國 89年。 
郭信川、李朝宗，「模糊集合於學習成效分 
析之應用」，國立台灣海洋大學系 
統工程暨造船學系。 
馮國臣  著，「模糊理論基礎與應用」，新文京開發 
出版股份有限公司，民國 96年。 
程乾生、吳柏林，「模糊統計分析的數學原理及其應 
用」，量化研究學刊，第一卷第一期，2007。 
劉秋木著，「國小數學科教學研究」，五南圖書出版 
公司，民國 85年。 
鄭振初著，「分數教學分析：概念和運算」，九章出 
版社，民國 95年。 
Behr,Harel,Post, ＆ Lesh（1992）：Rational 
    number ,ratio, and pro-potion. in 
    Grouws,D.A.(1992,ed) ：Handbook of research 
    on Mathematics Teaching and Learning acMillan 
Mack,N.（1990）, Learning Fractions with 
    Underatanding ：Building on informal  
     knowledge. Journal for Research in Mathematics  
     ducation.  
Steffe,L.P.（1990）：Adaptive Mathematics Teaching. in  
    Cooney＆Hirsch（1990）Teaching and Learning  
    Mathematics in the 1990s 
Steffe,L.,＆Olive,J.（1991）.The problem of fractions in 
    the elementary school. The Arithmetic Teacher,38 
  
A Diagnosis Method of Mathematics Ability base 
upon Knowledge Concept Construction. 
 
Chin-Bin Wang 
Department of Information  
Management,Nanhua university 
cbwang@mail.nhu.edu.tw 
 
Ying-tsan Chang  
Department of Information  
Management,Nanhua university 
s2222012@mail.cy.edu.tw 
Abstract 
A good studing diagnosis method not only can evaluate learners' study result 
effectively, but also can diagnose their learning disability and misconception, helps 
learners to break through the learning disability and improvement the learning result. 
Assessment test is an important step in the learning process which evaluate the 
Study potency and learning disability. Summative assessment refers to the assessment 
of the learning and summarizes the development of learners at a particular time. 
However, teachers can not give valid suggestions to learners from their test scores. In 
this paper, a learning diagnosis method based upon the knowledge concept 
construction is proposed to evaluate the learning efficiency of students. 
 
Keyword: studing diagnosis system, learning disability, misconception, knowledge 
concept construction 
  
 2 
 
圖2 Glaser R.基本教學模式 
 
教師根據評量的回饋，適切的修正教學目標、教學活動；學生可以修正其學
習錯誤、診斷其學習方法、或增加其學習動機和學習成就，不僅能幫助學生達成
學習目標，對於學生面對學習挫折的心理輔導也會有極大助益。 
 
二、迷思概念 
根據 Piaget 與 Inhelder 的看法（1969），認知就是獲得知識（knowing），
而認知發展就是在獲得知識的過程。人類的學習歷程，來自於逐步建構其運作所
需之結構，過程之中包含認識、理解、思考、問題解決、學習、概念化，分類及
記憶。知識來自學習者與環境間互動的歷程，並在過程中累積所需的智識與能
力。一個概念的形成完備，是一段新、舊經驗融合歸納歷程的結果，過程中學習
者不斷嘗試將新的訊息和觀念，與已存的知識、經驗進行連結。 
如果學生在進行學習之前，其前備知識（prior knowledge），和專家所持
有的概念形成及學習路徑並不一致，學習者的概念是不完整，甚至是不正確的，
這些既有錯誤的概念將導致學生的學習成效不彰，也會妨礙另一概念的形成，稱
為迷思概念（misconception）（Clark & Peterson, 1986）。迷思概念是蘊藏在
內的知識能力，學生一旦產生迷思概念，容易在後續學習上造成困擾或障礙，無
法達成預期的學習效果。這也更顯示了迷思概念對學習的影響；因此對於迷思概
念的診斷及發覺，其重要性可見一斑。 
 
三、知識地圖的建構 
當我們思考知識獲得的歷程時，我們會發現，一項知識或技能的習得，往往
需要許多先備知識或經驗作為基礎，這樣的進程與 Piaget 和 Inhelder（1969）
的認知發展論是一致的。完成某項主題的學習時，歷程中重要的節點，便稱之為
「學習概念」（Learning Concept）。 
學習活動進行中，發現學習歷程中有其一定的順序及路徑，如果依照概念的
先後順序進行學習，將形成較佳學習路徑，我們將這樣的學習順序稱為「認知順
序」。概念與概念之間，有其上下位關係或關聯性，我們將其關係用圖表具象化，
稱之為概念構圖（Concept Mapping）（如圖 3）。
  
 4 
    
, ,i i iα β δ ：三角模糊數的左端點、頂點及右端點 
    mi：第 m 個專家對第 i 個概念的看法及意見 
接著採用重心解模糊化法來求得每一概念之權重數值： 
=
+ +
3i
i i iW α β δ
                                     (5) 
iW ：第 i 個概念解模糊化後之權重值。 
( )~ , ,i i iiW α β δ ：整合專家看法後的模糊權重值。 
 
五、灰色理論與灰關聯度 
中國大陸學者鄧聚龍教授於 1982 年提出灰色理論。灰色理論主要是針對系
統模型的訊息不完全、關係不明確，進行關聯分析、模型建構、並藉著預測及決
策的方法來探測並瞭解系統狀況（温坤禮、黃宜豐、張偉哲、張廷政、游美利、
賴家瑞，2003）。灰色理論應用之範圍非常廣泛，主要是對於事件之間關係不明
確，以及多變量之輸入，離散型之數據，及系統數據不完整等狀況，做有效率之
處理。 
灰關聯分析主要是透過所得數據中，將各條件參數進行關聯性的運算，由這
些已知條件找出不明確之訊息或規則，進一步釐清參數間之互動關係。藉由灰理
論中灰關聯分析的計算，可求得各因子序列之灰關聯度，此灰關聯度即代表各因
子與該研究主題（參考序列）之接近程度，藉由灰關聯度之比對結果來求得與目
標函數或期望值之關聯程度。  
在灰關聯空間{P( ); }X Γ 中，如果有一組序列： 
( ) ( ) ( )( )1 , 2 ,...,i i i ix x x x k=  
其中 1,2,...,i m= ，k N∈ （正整數） 
根據局部性灰關聯度定義：灰關聯係數 ( ) ( )0( , )ix k x kγ 為 
( ) ( ) ( ) maxmin max00( , ) ii kx k x k ςςγ ∆ + ∆∆ + ∆=               (7) 
其中 1,2,...,i m= ， 1,2,...,k n=  
其中 0x 為參考數列， ix 為一特定的比較數列。 
( ) ( )00 ix k x ki = −∆ ： 0x 和 ix 之間在第k 個差的絕對值。 
( ) ( )min. min. 0min. j ji k x k x k= ∀ ∈ ∀ −∆ ：代表所有數列間差距之最
小值。 
( ) ( )max. max.max. 0j ji k x k x k= ∀ ∈ ∀ −∆ ：代表所有數列間差距之
最大值。 
ς ：辨識係數： [ ]0,1ς ∈ （辨識係數的值可以依實際需要調整大
小，一般均取 0.5之值） 
  
 6 
 
圖5 研究架構圖 
 
本研究之研究架構，分成：學習概念分析、編製分數概念測驗工具、學習概
念診斷三大部分進行，其詳細研究步驟可分成下列步驟進行： 
（一）學習概念分析階段：  
一、相關文獻探討 
二、就診斷主題，進行教材概念初步分析 
三、與擔任教學之教學人員進行討論，確認學習者通過測驗所需之關
鍵概念與能力。 
四、初步分析之各項概念，再參考相關研究之經驗，並委請該領域專
家確認，分列出學習的關鍵概念與關鍵能力。 
五、採用專家模糊徳菲法，對學者專家及教學人員進行訪談與問卷調
查，確認該學習主題概念關聯情形，產生概念關聯圖，作為後續
步驟之基礎。  
 
（二）編製概念診斷工具： 
根據學習單元之主要概念，以及專家知識結構，進行試題的編製與篩選。  
一、進行試題分析與修正。 
二、進行組卷以利紙筆測驗的進行。 
三、根據分數概念關聯圖及資料分析，製作出試題測驗工具。 
四、參考相關文獻及實務經驗，進行常見錯誤類型之整理。 
五、建立常見錯誤類型之屬性分析表，作為錯誤類型比對工具。 
（三）學習概念診斷  
一、診斷推論：以灰關聯法則，將學生的答題狀況與常見錯誤類型進
行比對，藉此推算學生的概念認知狀況。  
二、將學習狀況分為概念學習及解題技能兩部份，進行兩階段診斷程
序（詳見圖 6），進一步確認其迷思概念之類型，診斷出其迷思概
念或必需能力之缺乏。 
三、提出補救學習建議路徑或是需加強的單一概念。  
  
 8 
童在處理和長度、面積等有關的分數問題時，先會處理 1/2，其次依
序是 1/4、1/3、1/5、1/6。 
C4 分數概念及記
錄方法 
認識真分數、假分數、帶分數，包含： 
一、 念法 
二、 整數型的分數寫法 
三、 認識分數在離散量的意義的能力 
四、 認識分數在連續量的意義的能力 
五、 分數在部分/全體的使用的能力 
C5 等值分數 
一個數可以用無限的分數方式來表示，例如：
6
3
4
2
2
1
==
…等等，
這些不同的表示，便叫作這個分數的等值分數（Vance, 1992）；等值
分數的特性就是部分可以再細分，部分可以再合併，等值分數既需要
部分/全部的保留概念，也需要乘、除法的倍數觀念，可是乘除法運
作的結果，並不會造成「量」的改變(引自詹婉華、呂玉琴，2004) 
C6 假分數、帶分
數的轉換 
當單位分數內容物為單一個物時，能認識假分數意涵並進行合成、分
解活動。藉由
n
n
與 1的比較活動 
認識帶分數，進一步了解同分母帶分數的合成、分解問題，並完成假
分數和帶分數的互換程序；當單位分數內容物為多個個物時，能認識
假分數、帶分數，藉由
n
n
與 1的比較活動，轉化假分數和帶分數的
互換過程，完成同分母帶分數的合成、分解問題。 
C7 分數的大小比
較 
同分母分數的比較、異分母真分數的比較：經由通分過程，將待比較
之分數，轉換為基準單位分數量相同（同分母）之等值分數，藉此轉
換過程，進行分數大小之比較。 
C8 分數的加法 將分數調整成基準單位分數量相同（同分母）之等值分數，進行分數
之加法計算。 
C9 分數的減法 將分數調整成基準單位分數量相同（同分母）之等值分數，進行分數
之減法計算。 
資料來源：本研究整理 
（二）訪談並整合專家意見 
收集專家意見，藉由領域專家對「分數概念」及「分數加減」單元的教學經
驗，決定各元件節點內的概念權重大小，並將問卷訪談結果，以五等量模糊評估
值（非常相關、大致相關、相關、不相關、非常不相關）（如圖 7）來表示轉換
成模糊評估值。將模糊語意以模糊數參數化表示，且利用重心解模糊化法（式 6）
來整合各個問項的語意值。 
  
 10
分（如表 4）： 
表 4 本研究診斷工具之試題概念分配表 
概念編號 
題目編號 
C1 C2 C3 C4 C5 C6 C7 C8 C9 
Q_A_1 0 0 0 1 0 0 0 0 0 
Q_A_2a 0 0 0 0 1 0 1 0 0 
Q_A_2b 0 0 0 1 1 0 1 1 0 
Q_A_3a 0 0 0 0 0 0 0 1 0 
Q_A_3b 0 0 0 0 1 0 0 1 0 
Q_A_4a 0 0 0 0 0 0 1 0 1 
Q_A_4b 0 0 0 0 1 0 1 0 1 
Q_A_5a 0 0 0 0 0 1 0 1 0 
Q_A_5b 0 0 0 0 1 1 0 1 0 
Q_A_6 0 0 0 0 1 1 1 0 1 
Q_A_7 0 0 0 0 0 1 0 0 0 
Q_A_8 0 0 0 0 0 1 0 0 0 
Q_B_1 0 0 0 0 1 1 0 1 0 
Q_B_2 1 1 1 1 0 0 0 0 0 
Q_B_3 1 1 1 1 0 1 0 1 0 
Q_B_4 0 0 0 0 0 1 0 0 0 
Q_B_5 0 0 0 0 0 1 1 0 1 
Q_B_6 0 0 0 1 0 1 0 0 0 
Q_B_7 0 0 0 0 1 1 1 1 1 
Q_B_8 1 1 1 1 0 0 0 0 0 
Q_B_9 0 0 1 1 1 0 0 0 0 
Q_B_10 1 0 1 1 0 0 0 0 0 
Q_B_11 1 0 0 1 0 1 1 0 0 
Q_B_12 1 1 1 1 0 0 0 0 0 
Q_B_13 1 0 0 0 0 0 0 0 0 
Q_B_14 1 1 1 1 0 0 0 0 0 
Q_B_15 1 0 0 1 0 1 1 0 0 
Q_B_16 1 1 1 1 0 0 0 0 0 
Q_B_17 0 0 0 0 1 1 1 1 1 
總計 10 6 8 13 10 14 10 9 6 
※編碼 Q_S_No 中，S 代表類別（A 代表「運算技巧」的錯誤；B 代表「學習概念」錯誤），No 則為在該類別之錯誤模式
編號。 
（二）建立本研究診斷工具概念分布矩陣表（如表 5） 
表 5 本研究診斷工具之概念分布矩陣表 
概念編號 
題目編號 
C1 C2 C3 C4 C5 C6 C7 C8 C9 
Q_A_1 0 0 0 0.077 0 0 0 0 0 
Q_A_2a 0 0 0 0 0.1 0 0.1 0 0 
Q_A_2b 0 0 0 0.077 0.1 0 0.1 0.11 0 
Q_A_3a 0 0 0 0 0 0 0 0.11 0 
Q_A_3b 0 0 0 0 0.1 0 0 0.11 0 
Q_A_4a 0 0 0 0 0 0 0.1 0 0.167 
Q_A_4b 0 0 0 0 0.1 0 0.1 0 0.167 
Q_A_5a 0 0 0 0 0 0.071 0 0.11 0 
Q_A_5b 0 0 0 0 0.1 0.071 0 0.11 0 
Q_A_6 0 0 0 0 0.1 0.071 0.1 0 0.167 
  
 12
換 
Err_ B _6 
等值分數概念 0 0 0 0 0 1 0 0 0 
※編碼 Err_S_No 中，S 代表類別（A 代表「運算技巧」的錯誤；B 代表「學習概念」錯誤），No 則為在該類別之錯誤模
式編號。 
四、進行診斷性演算 
（一）建立學生答題狀況表（如表 6）： 
表 6 學生答題狀況表 
 S1 S2 S3 S4 S5 S6 S7 S8 
Q_A_1     1    
Q_A_2a  1  1   1  
Q_A_2b 1   1  1   
Q_A_3a  1       
Q_A_3b  1       
Q_A_4a         
Q_A_4b         
Q_A_5a         
Q_A_5b   1      
Q_A_6      1   
Q_A_7 1        
Q_A_8      1   
Q_B_1  1   1 1 1  
Q_B_2         
Q_B_3    1  1 1  
Q_B_4         
Q_B_5    1 1 1   
Q_B_6    1     
Q_B_7    1    1 
Q_B_8      1   
Q_B_9 1   1  1   
Q_B_10 1        
Q_B_11  1    1   
Q_B_12   1 1 1  1  
Q_B_13  1  1 1 1  1 
Q_B_14 1   1     
Q_B_15  1    1   
Q_B_16 1   1 1  1  
Q_B_17  1       
 
（二）建立學生答題錯誤概念表（如表 7-a、7-b、7-c） 
表 7-a 本研究實作學生答題錯誤概念統計（整體答題狀況） 
 C1 C2 C3 C4 C5 C6 C7 C8 C9 
S1 0.3 0.334 0.5 0.385 0.2 0.071 0.1 0.11 0 
S2 0.3 0 0 1.077 0.4 0.284 0.4 0.44 0.167 
  
 14
算錯誤」、「整數與分數換算」等三錯誤模式，為關聯度較大之錯誤模式。經深入
分析學習者之作答，將診斷結果與作答錯誤原因相互對照後，說明如表 8： 
表 8 診斷結果與作答錯誤原因對照表 
灰關聯 
排序 
診斷 
結果 
作答錯
誤題號 
作答錯誤分析 
Q_B_1 
圖形等分成四份後，將四份加上整個圖形（4＋1
＝5）,當作單位量 
Q_B_11 
圈出四個彈珠當作單位量，再從其中圈出一個當
分子（學習者自訴其算式） 
Q_B_12 
認定整個為單位量，無法將左邊圖形切割獨立視
為單位量 
Q_B_13 
學生答題說明：因為
1
 2 
 ＝
1
 2 
 （缺乏分屬不同
單位量之概念） 
1 
單位量的辨認不清 
Q_B_15 僅以數字比大小，未加入單位量觀念 
2 
異分母分數的減法運算
錯誤 
Q_B_17 
 
未完成兩階段問項 
3 
等值分數概念 
  
4 
整數與分數換算 
Q_A_2a 
1
13
 20 
 中，換算為分數時，忽略分母為 20，誤將
整數 1轉換為分母量 10，1
13
 20 
 化為
23
 20 
  
5 
同分母分數的減法運算
錯誤 
 
 
6 
帶分數的減法運算錯誤 
  
7 
整數借位的問題 
  
8 
等分的觀念並不完整 
  
9 
單位分數概念不清 
  
10 
同分母分數的加法運算
錯誤 
Q_A_3a 
將「同分母分數的加法」誤算為「同分母分數的
減法」 
11 
帶分數的加法運算錯誤 
  
12 
部份－全部的區分轉換 
  
13 
受整數基模的影響 
  
14 
異分母分數的加法運算
錯誤 
 
 
說明：試卷中有五題（Q_B_1、Q_B_11、Q_B_12、Q_B_13、Q_B_15），答題錯
誤原因與該學習者「單位量的辨認不清」的錯誤類型符合。試題（Q_B_7），答題
錯誤原因與該學習者「異分母分數的減法運算錯誤」的錯誤類型符合。試題
（Q_A_2a）答題錯誤原因與該學習者「整數與分數換算」的錯誤類型符合。診斷
錯誤類型排序為 3 的「等值分數概念」，雖未在答題反應中得到直接對應，但因
該錯誤類型在異分母比較大小或加減時使用之「通分」技巧有關，也與整數、分
數換算技巧有關，所以推論該錯誤類型為學習者 S2 可能之錯誤類型，需列為教
  
 16
陸、結論及未來工作  
 
一般的測驗著重於以總分來評定受試者的學習狀況，這樣的評量方式很難對
受試者的整體學習狀況達到通盤瞭解。如何藉由知識結構的基礎，配合受試者的
量化施測資料結果或質性晤談紀錄，呈現出受試者真實、客觀的知識學習狀況，
是許多研究者所關心的議題。本研究綜合診斷與分析結果，提出了一個基於知識
概念結構，結合灰系統中探求關聯度的方法，提供個別學習診斷報告書，讓學生
能夠了解自己的學習狀況，更有利教師根據學生的診斷情形，對於未精熟或漏失
的概念進行觀念的建立，更可針對迷思的概念進行轉構教學。 
目前本研究成果如下：  
一、將學生答題狀況，根據解題技能、概念學習進行分類比對發現學生的
解題技能與對該學習主題的概念了解與否，並非一定相關。 
二、試題的概念分布和錯誤類型的推論有很大的關係，依循學習路徑結構
布題，將能收取更多訊息以供比對。 
三、本方法的診斷可客觀呈現出學生答題成果，作為教學模式中「回饋功
能」之重要參考。 
四、透過學習診斷報告，可以在學習路徑之基礎上，有根據地進行學生錯
誤概念之補救，達到事半功倍之效能。  
 
柒、參考文獻 
何榮桂（1997）。網路環境題庫與測驗之整合系統。八十六年度電腦輔助學習及
遠距教學專題研究計畫成果討論會摘要， 44-162。 
翁慶昌，陳嘉欉，賴宏仁（2001）。灰色系統基本方法及其應用。台北：高立。 
張紹勳（1998）。電腦網路遠距教學實施碧況之問題研究。載於中華民國電腦輔
助教學學會主辦，第七屆國際電腦輔助教學研討會論文集（頁 573-580）。
高雄：國立高雄師範大學。 
許慶昇、杜淑芬、黃國禎（1998）。概念繼承關係在網路智慧型學習診斷系統之
應用。載於中華民國電腦輔助教學學會主辦，第七屆國際電腦輔助教學研討
會論文集（頁 602-609）。高雄：國立高雄師範大學。 
甯自強（1998）。涂景翰的數概念。科學教育學刊，6(3), 255-269。 
詹婉華、呂玉琴(2004)。國小高年級學童分數概念量表之設計研究。科學教育學
刊，12(2)， 241-263。 
温坤禮、黃宜豐、張偉哲、張廷政、游美利、賴家瑞（2003）。灰關聯模型方
法與應用。台北：高立。 
Clark, C. M., & Peterson, P. L. （1986）. Teachers' thought processes, 
In M. C. Wittrock (Ed.), Handbook of research on teaching. New York: 
McMillan. 
Glaser, R. (1962). Psychology and instructional techonology. In R. Glaser
（Ed.）.Training research and education. Pittsburgh: University of 
Pittsburgh. 
角色扮演遊戲結合動態評量教學平台架構之研究 
 
董建亨、王昌斌、藍鈺凱 
南華大學資訊管理研究所 
jhdung@gmail.com 
 
 
摘要 
 
在教學平台的研究上，目前已有學者
研究，將角色扮演遊戲結合動態評量。根
據這些的研究發現，角色扮演遊戲結合動
態評量，能增進學生的學習興趣，與提升
學生學習的動機、增加學生學習的經驗、
提升學生整體的知識吸收程度，達到建立
長久的學習效果。 
基於上述因素，本研究希望藉由角色
扮演遊戲結合動態評量的研究，研究設計
出最佳化的平台功能架構，且希望藉由學
校的課程，將其融入角色扮演遊戲的設計
中。在最佳化的平台功能架構設計裡，本
研究以達到主要之目的為：一、利用遊戲
教學方法提高學習動機。二、利用動態評
量方式持續診斷學習能力。三、教師能對
學生學習個案分析。四、提供適性化學習
內容。五、促進學生的學習成效與興趣。 
關鍵詞：網路教學平台、動態評量、遊戲
教學法、角色扮演遊戲。 
1. 前言 
隨著資訊科技與網際網路的進步與普
及，電腦應用在教學、評量的學習上，已
逐漸形成一種風氣，電腦處理資料的快
速、便捷更為大家所喜愛，也是一種節省
資源與成本的一種方式。在 E-Learning 和
數位學習上，不論是各家企業、教育單位
的訓練、教師的出題和學生的學習，已成
為在網路應用上的主要工具之一。 
處在於 21 世紀知識經濟社會的現
今，學校教育的重要功能之一，為能有效
地將知識傳遞給學生學習。教育可以協助
每一個人的終身學習、學習天賦、才能和
潛力地充分發揮，以達成人生學習目標和
生活的意義為目的。身為學校教師是有義
務、責任，提供所有學生同等品質的學習
機會，以達到「因材施教」的目的，讓所
有學生都可以學習到知識。不分年齡、社
會階層，教育主要以「因材施教」為目的，
每個人都有機會接受同等的教育，並使其
天賦、才能發揮到最高程度。 
2. 主要內容 
學校教育的主要功能在培育學生能夠
學以致用，能將知識轉化為因應各種生活
挑戰和工作所需的關鍵能力(洪明洲，
1999)。隨著科技的日新月異，學校利用各
種不同的方式來達到教學的目的，從最早
的傳統教學方式，老師與學生採面對面的
形式進行教學活動，到後來透過一些媒體
的傳播，開啟了遠距教學的時代。近年來，
為了應用資訊科技之網際網路來進行學
習，網路教學的發展已如雨後春筍般地蓬
勃發展(孫明照，2002)。 
現今的學校教育環境、課程，大多是
1165
ICIM2009 ???屆??資???????? 
三附件  
互動性、多元教材的呈現、老師與學生的
教材資源共享...等；在本教學平台裡，其
功能主要有：討論區、學生評量功能、學
生學習歷程追蹤、教材資源分享、教師補
充教材...等。 
3.2 動態評量 
動態評量（Dynamic Assessment）是
近二十年新興的評量方式，一詞是由
Feuerstein(1979)首先使用，主要是相對
於傳統評量的靜態測量性質所提出的。其
之所以稱為動態的含義有二：(1)著重學習
歷程或認知改變的評量；(2)在評量中進行
教學，評量者與被評量者的關係是互動的
(Haywood, Brown & Ingenfeld, 1990)。
Campione and Brown(1987)則從「評量內
容」和「評量本身」的角度來闡述「動態」
之意，其認為動態評量所著重的評量內
容，不在於評量過去既有的知識、技巧或
經驗等靜態結果，而在於評量成長、改變
的動態歷程以及學習預備度，評量本身即
是一種動態的過程。茲將有關動態評量的
定義，整理如表 1。 
 
表 1：動態評量的定義 
研究者或
研究單位 動態評量的定義 
莊麗娟
(2001) 
有別於傳統心理計量施測者
保持中立，不提供額外協助的
評量立場，強調評量過程中，
配合受試者在解題上的實際
需求，不斷的給予必要的協
助，以引導受試者成功的解
題。 
邱上真
(1996) 
動態評量又稱協助式評量，即
在測驗進行中，允許給學生提
供暗示、線索及協助，以便獲
得學生「最大可能操作水準」
的資訊，稱之為動態評量。 
李坤崇
(2002) 
動態評量是一種結合教學與
診斷的評量模式。 
李坤崇
(2002)； 
楊景淵
(2002) 
動態評量乃是利用「前測—中
介—後測」的循環程序，結合
教學與評量，在評量的過程
中，施測者透過各種符號工具
與受試者充分的互動，診斷其
認知缺陷，藉以獲得研擬教學
處方的訊息；探索其學習潛
能，對個體未來表現進行合理
的評估；適時給予受試者適當
的提示、協助與鼓勵，期望產
生「鷹架」的作用，以達成個
體的「最佳」表現。 
資料來源：本研究整理 
 
林秀娟（1993）的研究中，指出動態
評量的主要目的是在：評估學習過程、預
測學習潛能、診斷認知缺陷、提供教師瞭
解學生的問題癥結及中介訊息以進行補救
教學，使學生的潛能發展到最大。所以根
據前述，吳國銘、洪碧霞、邱上真（1995）
更指出，動態評量是將受試者視為開放的
個體，能不斷自外界得到回饋而改變自己
的認知結構，並藉由互動的測驗程序，達
成瞭解受試者學習歷程及發展脈絡的目
的。
1167
ICIM2009 ???屆??資????????
線上遊戲世界裡的玩家，會因為自己
選擇角色的種族、職業等屬性的不同，而
在玩法與故事發展上有不同的安排與變
化，讓玩家譜出屬於自己特有的冒險故
事，此外，也提供了一個情境，讓人們脫
離現實限制而有海闊天空地幻想的機會，
使個人在其中宣洩生活中的不滿、衝突及
挫折，紓解工作或課業壓力，達到個人在
生活中情緒的調解，在扮演某個角色裡，
可以讓線上遊戲的玩家體驗到更高的遊戲
經驗(林培淵，2007)。 
從上述3.4角色扮演遊戲的探討中，我
們可以知道，線上角色扮演遊戲可以增進
玩家對遊戲整個的劇情、事件中，產生興
趣、可讓玩家與玩家產生良好的互動與角
色之間的學習，因此，基於上述，在本研
究裡，主要以「角色扮演遊戲」，結合動態
評量教學平台架構，讓教師可依據此教學
平台，來設計一套角色扮演遊戲的相關課
程之劇情，供學生從遊戲中，能學習到課
程所需具備的知識。在遊戲裡，學生可以
從教師設計的遊戲劇情中，學到課程的知
識，且利用遊戲教學方法，提高學生對課
程知識涵養的學習動機、促進其學習成效
與興趣。 
4. 研究設計與實施 
從上述 3.文獻探討中，我們可以知
道，在教學平台的功能設計裡，其包含有：
HTML 網頁、電子郵件、電子公告版、在
線聊天、電子白版、評分功能、學習跟蹤、
技術支援、文件共用、檢索工具、補充教
材...等。在動態評量的研究裡，我們可以
知道，動態評量採「前測—中介—後測」
的評量過程，它是著重於個別學生學習歷
程的確認與評量，而非同儕間的能力比
較，且可以探究學習者的認知發展，審視
評量結果...等。在遊戲的研究裡，藉由遊
戲教學法，可以開發有趣的單元活動教
材，來改善教學與學習情境，且可以運用
於不同領域的教學之中，教學者需將遊戲
經過設計、從中誘導學生產生適當的學習
能力及反應，讓學生從遊戲中得到有效的
學習，達到教育目標。在線上角色扮演遊
戲中，玩家可以依據角色的選擇、屬性的
創建，來進行該項遊戲，玩家不僅可以學
習到不同角色的內容與特色，亦可從遊戲
中學到該角色扮演的樂趣。 
根據教學平台、動態評量、遊戲教學
法、角色扮演遊戲的研究裡，本研究擬定
「角色扮演遊戲與動態評量教學平台架
構」，將教學與角色扮演遊戲相互整合出一
個平台架構，其主要設計是希望藉由學校
的課程，將其融入角色扮演遊戲的設計
中，且在教學平台的設計裡，教師可依據
其平台的功能，做教材編製、資源分享、
對學生的學習評量、課程的遊戲設計...
等；學生亦可從此教學平台裡，學習教師
所編製的教材、資源分享、個人學習歷程
記錄、線上玩教師所編製的遊戲...等。本
研究的教學平台功能，主要先以教師、學
生的使用性考量為設計，再根據現有的文
獻資料，來做整個平台架構的設計。此外，
依據使用者的使用方便性為原則，此教學
平台最主要的功能設計，分別依據有：教
師平台功能、學生平台功能、使用者管理
與系統管理功能等的設計，此部分在「5.
平台功能說明」裡有詳細之說明。該教學
平台也依據教師使用的方便性，分別設計
出的模組有：角色扮演遊戲之設計模組、
動態評量之設計模組，以供教師從這些模
組中，製作遊戲、教材、題庫的編製，其
模組功能設計，說明如下： 
一、角色扮演遊戲之設計模組 
1169
ICIM2009 ???屆??資????????
(6)課程安排：教師可依據學生的學習狀
況，在教材設計裡，針對不同的學生，
做不同的學習課程安排。 
二、遊戲設計 
在教師的「遊戲設計」裡，教師可以
依據課程的內容，從「遊戲事件」、「RPG
元件」和「遊戲參數」裡，設計一套讓學
生能從遊戲的劇情、觸發事件中，學習到
課程知識。 
三、知識擷取 
(1)概念知識擷取：讓教師可以做「概念查
詢」，以了解各概念的知識內容，供教
師為學生做教材的知識指引，且在知識
指引中，讓教師在設計教材時，能編製
「學習目標」、「學習權重」、「學習時
間」，以利教師為學生做不同的教材設
計。 
(2)教材與題庫分析：讓教師了解教材設計
的出題評量中，學科、概念對學生的學
習難易度。在「概念推論」裡，能針對
學生的學習狀況與歷程中，推論整個的
「學習路徑」、「迷失」、「評量試題」、「評
量結果」，供後續教材設計。在「教學
提示」中，教師能根據學生的學習歷程
和記錄，做教材設計的學習提示。 
四、學習成效統計 
(1)學習歷程與記錄：供教師了解學生在課
程教學裡的學習情況，方便教師幫學生
做各種的教材設計。 
(2)概念知識：讓教師知道學生在自己設計
的教材裡，所學習到的知識能力範圍，
且了解學生已學會的知識與所欠缺的
知識，供教師「教材設計」、「資源建
置」、「教學策略」的參考。 
(3)能力水準：讓教師知道學生在學習過程
中的能力程度，與學習完後的能力程
度，供教師做教材設計的考量。 
五、討論區 
在「討論區」裡，教師可從中與學生
進行課程與問題的討論，亦可從中幫助學
生解答問題的疑惑、輔助學生對課程學習
的指引。 
5.2 學生介面 
一、線上測驗 
依據教師設計的題卷裡，學生可先從
「課程」選擇「題卷編號」，以供學生線上
作答，帶學生作答完後，可立即產生分數、
錯題的解答，供學生了解自己做錯的原因。 
二、課程學習 
根據教師對各學生的個別課程學習設
計中，各個的學生，可從中線上觀看教師
給的教材、學習建議和教材下載。 
三、歷程與記錄 
學生可從中知道過去的測驗、學習的
狀況，以供學生學習的參考。 
四、遊戲區 
 依據教師設計的遊戲劇情和觸發事件
裡，學生可從遊戲的劇情、觸發事件中，
學習到課程知識，及知道自己所具備課程
知識的能力範圍。 
五、討論區 
 供學生線上發問問題、討論，亦可從
教師、同學的討論與發問中，學習到更多
的知識。 
1171
ICIM2009 ???屆??資????????
 圖 3：學生平台架構 
 
7. 結論 
本研究的教學平台架構設計，主要以
國小的課程為主，來建構此教學平台，其
主要以達到讓教師能設計題庫、管理動態
評量、對學生學習個案分析、輔助弱勢學
生學習。對學生方面，此教學平台能讓學
生從教師的設計題庫、教材編製中，學習
到更多的課程知識，此外，學生亦可透過
知識地圖的方式，學習到更多的課程知
識。本研究具體的貢獻，如下所示： 
(1)藉由角色扮演遊戲平台開發，以提高學
生對課程的學習動機，並確保能符合輔
助教學師生的需求。  
(2)開發「評量-教學-再評量」之動態評量
機制，並結合診斷機制，以達到適性化
教學為目的。 
(3)結合角色扮演遊戲與動態評量之設
計，並建置教學平台，加強輔導學生，
以拉近日漸懸殊的學生素質，使得學生
都能成功學習。  
(4)利用網路無遠弗屆的特性，建立並助長
校際間補救教學的合作關係，以節省教
育資源。 
(5)協助補救教學知識擷取與知識概念建
置，並可重複使用此知識概念應用各領
域。 
(6)藉由經驗傳承與教育訓練，使教師或有
興趣的業界人士，能獨立開發角色扮演
遊戲，或增加動態評量之題庫與數位教
材，並永續經營成為政府、商業與其他
教育機構發展補救教學的主要資源。 
參考文獻 
1. 吳國銘、洪碧霞、邱上真，「國小學童
在動態評量中數學解題學習歷程與遷
移效益之探討」，測驗年刊，42，
61-84，1995。 
2. 李坤崇，「多元化教學評量理念與推動
策略」，教育研究月刊，98，24-36，
2002。 
3. 林秀娟，「動態評量結合試題反應理論
在空間視覺學習潛能評量之研究」，國
立台灣師範大學教育心理與輔導研究
所碩士論文，1993。 
4. 林培淵，「線上遊戲之玩家行為初探
研究－以《魔獸世界》為例」，國立
中正大學電訊傳播研究所碩士論文，
2007。 
5. 邱上真，「動態評量-教學評量的新嘗
試」。載於國立高雄師範大學主編，中
小學教學革新研討會論文集（頁
33-49），高雄：國立高雄師範大學，
1996。 
6. 洪明洲，「大學教學理念與技術的演進
-網路教學與學習效果之改善實例」，
1999 提昇教學品質研習會報告論
文，海洋大學，1999。 
7. 孫明照，「符合 SCORM 標準之元件化
網路教學平台之設計研究」，銘傳大學
1173
ICIM2009 ???屆??資????????
IEEE TRANSACTIONS ON SYSTEMS, MAN, AND CYBERNETICS—PART A: SYSTEMS AND HUMANS, VOL. 38, NO. 4, JULY 2008 1
A Formal Virtual Enterprise Access Control Model1
Tsung-Yi Chen, Yuh-Min Chen, and Chin-Bin Wang2
Abstract—A virtual enterprise (VE) refers to a cooperative3
alliance of legally independent enterprises, institutions, or single4
persons that collaborate with each other by sharing business5
processes and resources across enterprises in order to raise enter-6
prise competitiveness and reduce production costs. Successful VEs7
require complete information transparency and suitable resource8
sharing among coworkers across enterprises. Hence, this investi-9
gation proposes a formal flexible integration solution, named the10
formal VE access control (VEAC) model, based on the role-based11
AC model, to integrate and share distributed resources owned by12
VE members. The formal VEAC model comprises a fundamen-13
tal VEAC model, a project AC policy (PACP) language model,14
and a model construction methodology. The fundamental VEAC15
model manages VE resources and the resources of participating16
enterprises, in which various project relationships are presented to17
facilitate different degrees of resource sharing across projects and18
enterprise boundaries, and cooperative modes among VE roles are19
presented to enable collaboration among coworkers in a VE. This20
PACP language model features object–subject–action–condition21
AC policies that jointly determine user access authorizations. In22
addition, the methodology supplies a systematic method to identify23
fundamental elements of the VEAC model and to establish assign-24
ments between elements and relations.25
Index Terms—Access control (AC), resource sharing, role-based26
access control (RBAC), virtual enterprise (VE).27
I. INTRODUCTION28
V IRTUAL enterprise (VE) is regarded as one of the most29 promising business strategies to enhance the global com-30
petitiveness of enterprises [1]. VEs integrate the processes,31
activities, and resources from different enterprises through en-32
terprise alliances to respond quickly to customer expectations.33
Frenkel et al. [2] defined a VE as a collaborative group of34
existing autonomous enterprises, which selectively share their35
expertise, skills, and resources to accomplish a common prod-36
uct or service. In practice, a VE is generally implemented37
with a distributed and collaborative business process, in which38
individuals from different enterprises cooperate on business-39
related activities or processes by remote coordination, com-40
munication, and control [1]. To attain VE goals and support41
each other’s functionalities, enterprises in a VE must share and42
exchange information, knowledge, and resources. The features43
Manuscript received August 6, 2006; revised May 18, 2007. This work
was supported in part by the National Science Council of the Republic of
China, Taiwan, under Contract NSC96-2221-E-343-002. This paper was rec-
ommended by Associate Editor J. Miller.
T.-Y. Chen and C.-B. Wang are with the Department of Electronic Commerce
Management, Nanhua University, Chia-Yi 62248, Taiwan, R.O.C. (e-mail:
tsungyi@mail.nhu.edu.tw; cbwang@mail.nhu.edu.tw).
Y.-M. Chen is with the Institute of Manufacturing Engineering, National
Cheng Kung University, Tainan 70101, Taiwan, R.O.C. (e-mail: ymchen@
mail.ncku.edu.tw).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TSMCA.2008.923090
that determine the access level to the local information of every 44
enterprise, when considering the competitive and cooperative 45
relationships among enterprises, include the degree of trust 46
between two enterprises, the function of the enterprises in the 47
VE, and contractual agreements [2], [3]. Lu et al. [4] proposed 48
a trust-based privacy preservation method for P2P data sharing. 49
A collaborative engineering environment allows multiple en- 50
gineers to work simultaneously with individual assembly parts. 51
Some manufacturing industries, e.g., the automotive sector, 52
use VEs to maintain business relationships with their suppliers 53
and corporate customers, enabling manufacturers to collaborate 54
on the design, production, assembly, and marketing of new 55
products. For instance, designing and developing a new car is a 56
complex and lengthy process; during product R&D, engineer- 57
ing and design drawings can be shared over secure network 58
among the contracting firm, testing facility, marketing firm, 59
and downstream manufacturing and service companies [5]. 60
Information concerning the design for a new product at various 61
segments of the VE has to be visible to all members of the VE 62
at any time. Consequently, the information must be managed 63
properly, with appropriate access control (AC) models, strict 64
policies, discipline, and daily monitoring. Development of a 65
new car model by a VE might involve approximately 20 000 66
designers and engineers from hundreds of divisions and de- 67
partments, some of which belong to different enterprises in 68
different countries. One sub-VE in the car-manufacturing VE 69
performs car design, which contains four subprojects, namely, 70
engine design, cool system design, transmission case design, 71
and framework design. Engine designers in the engine design 72
subproject collaboratively develop an engine for the new car 73
model. Information related to the engine, such as drawing and 74
engineering data, is generated and shared in real time to workers 75
in the subproject and other subprojects. Therefore, the success 76
of a VE depends wholly on transparent and effective sharing 77
of information resources, including information, application 78
systems, and knowledge, throughout the business cycle [1]. Not 79
all business partners are equally trusted in today’s complex 80
business environment. Today’s partners could become tomor- 81
row’s competitors. Hence, enterprises do not generally like 82
sharing information. Consequently, a VE or related business 83
strategy, such as allied concurrent engineering or virtual team, 84
is likely to fail. Therefore, VE urgently needs secure and trust- 85
worthy AC model, approach, and mechanism that can manage 86
distributed resources across enterprises and share them with 87
collaborative workers. To secure information sharing, competi- 88
tive and cooperative relationships among enterprises should be 89
considered when using the proposed model to evaluate a user’s 90
authorization to access resources. 91
Secure resource management and sharing across organiza- 92
tional boundaries have seldom been addressed. AC for VEs 93
is difficult for the following reasons: 1) enterprise members 94
in a VE may change frequently; 2) each enterprise member 95
1083-4427/$25.00 © 2008 IEEE
 
四附件  
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 3
Fig. 1. VE environment.
7) A change in a member’s role in a process should not affect210
the obligations and responsibilities in its other assigned211
roles.212
8) Regulations do not constrain the selection of members in213
participating enterprises’ partners.214
9) Each member may own its enterprise resource manage-215
ment policy and AC model.216
10) Shared VE resources include private resources owned by217
a participating enterprise and stored in its own reposito-218
ries and also public resources belonging to the VE and219
stored in a public repository.220
The levels of resource sharing among partners depend on VE221
characteristics, including levels of cooperation with partners,222
degree of trust, distributed tasks, and contractual agreements.223
When each participant in a VE brings information to the VE,224
the participant will not want to share more proprietary informa-225
tion than necessary with VE members because of information226
security issues. Information in VEs can be divided into three227
areas: 1) information of an individual partner brought to the228
VE; 2) information generated by the VE; and 3) information229
assets of the VE [26]. The information must be protected and230
distributed in a secure manner among all participants.231
2) Requirement Analysis for AC in VE: Based on the general232
requirements of AC expressed in [27] and [28], this paper233
identifies the following requirements for AC model design:234
1) Only the security administrator should be permitted to235
modify security attributes; 2) roles should be able to inherit236
authority either fully or partially; 3) positive authorizations and237
negative authorizations, as well as the principle of strict least238
privilege, should be supported; 4) the fine-grained authority re-239
quirements should be fulfilled; 5) access authority may change240
with tasks or roles; and 6) the model should be able to manage241
all users and resource objects in the enterprise [29]–[31].242
Aside from the aforementioned requirements, according to243
the characteristics of VE, additional requirements must be244
considered when developing a VEAC model, as follows.245
1) Since the organization structure of a VE is dynamic,246
access rights and resource objects can be changed in247
real time.248
2) The model considers all users’ access rights because249
resource administrators cannot predict who will access250
which resources in a VE.251
3) As a VE is formed to achieve a certain goal in a limited 252
time frame, each VE has different goal and business 253
processes. A VE is always conducted as a project. There- 254
fore, project is an essential element of AC in VE. 255
4) Since each enterprise has a legacy AC system, the VEAC 256
model should be easily integrated with various AC mod- 257
els or policies. 258
5) The VE manages and shares resources collaboratively. 259
6) To facilitate trust among enterprises, the access policy in 260
VE is planned and managed together by administrators of 261
all participating enterprises. 262
7) The VE can maintain the consistency of policies and man- 263
age the conflicts between VE access policy and members’ 264
own access policies. 265
C. AC Policy 266
A significant shortcoming of existing AC systems is that 267
they were developed by using a specific AC policy, which 268
was defined by Lorch et al. [32], regarding how services can 269
be utilized. AC policies are typically represented as follows: 270
1) constrained logic programs that support specific policy op- 271
tions; 2) constrained checks; and 3) administrator queries [33]. 272
AC policy can restrict the use of services to suitably qualified 273
principals and specify constraints that must hold when a service 274
is invoked [19]. 275
Recent development of AC policy framework includes lan- 276
guages and graphical approaches that specify different AC poli- 277
cies in a single framework [34]. A graph transformation-based 278
security policy framework was proposed by Koch et al. [12] 279
that included negative and positive constraints. The negative 280
constraints specify graphs not contained in any system graph, 281
and positive constraints specify graphs explicitly constructed in 282
a system graph. By combining a formal framework and a logic- 283
based language, Jajodia et al. [35] developed the authentication 284
specification language that can be used to identify different AC 285
policies that can coexist within the same system and be en- 286
forced by the same security server. Moreover, security assertion 287
markup language is an XML framework identified by OASIS 288
security services to exchange authentication and authoriza- 289
tion information. For AC across enterprises, Belokosztolszki 290
and Moody [36] proposed metapolicies. Hada and Kudo [37] 291
proposed XML AC Language, an XML-based language for 292
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 5
12) R−PrivateP−Ar(private_p) : PrivateP → 2R, a function354
mapping a PrivateP, private_p, to a set of roles that is355
authorized to access this PrivateP.356
13) R−PrivateP−Aprivate_p(r) : R → 2PrivateP, a function357
mapping a role r to a set of PrivatePs that allows to be358
accessed by this role.359
B. PBAC Model360
The top portion of Fig. 2 shows the PBAC model. The361
core concept of model development, elements, and relations in362
the PBAC model are introduced and defined in the following363
sections in order.364
1) Core Concept of the PBAC Model: A VE can perform365
several projects (P ) simultaneously, but a project can only366
be performed by one VE. A project includes management-367
level and operational-level tasks. The management-level tasks368
control and manage the project’s progress and output according369
to the project timestamp, whereas the operational level com-370
prises FTs supervised and controlled by the project schedule.371
Different project relations (PRs), such as subset, exclusion, and372
reference, exist among projects to facilitate resource sharing373
(refer to Section IV). Activities within a project can be divided374
into several FTs, each of which has access to certain public375
objects (PublicOs), which is public permission (PublicP) of the376
FT. FTs involved in a project are constructed for performing VE377
activities in the VE formation stage. The FTs are assigned to VE378
roles (VERs) that are virtual roles created based on division of379
labors. It is required to meet certain conditions to start or end380
an FT. According to the goal and task requirements, an FT can381
be divided into different stages by timestamp or FT. Users are382
given different privileges depending on the project stage and383
FTs. A VE is composed of several real EMs, each of which384
can participate in more than one VE. Non-EMs (NEMs) are385
enterprises that do not participate directly in the activities of386
VE but participate in the activities of an EM which performs387
directly the activities of the VE. All VE participants, including388
three user types (direct, indirect, and nonmember users), are389
generally called users (U) which may play a different role (R)390
in a different session. Each role has access to private resources,391
called a PrivateP. A superior role can inherit the privileges of392
inferior roles through role hierarchy (RH). The EM plays a VER393
through a user or role to obtain the privilege of sharing public394
resources in the VE and carry out practically the obligations of395
a given VER and to achieve the VE goals. PACP is designed396
to identify the resource sharing rules in a project. Through397
constructing relations among projects and a PACP, users can398
share resources among projects. The rules of sharing can be399
modified at any time.400
To simplify the complex assignment and facilitate resource401
sharing across domains, some relations are gained by exploring402
the three viewpoints of project, VE, and enterprise. From the403
project viewpoint, PRs including subset, version, reference,404
process, and exclusive relations (defined in Section IV) are405
found out depending on the features of project, facilitating shar-406
ing among projects. From the VE viewpoint, cooperative rela-407
tions including dependent single-task, dependent multitask, and408
independence (defined in Section V) are found out depending409
on the information requirements of interaction and cooperation410
among workers in VE, facilitating sharing among enterprises411
involved in a VE. From the enterprise viewpoint, relations 412
proposed by RBAC [39], [40], including role hierarchy, static 413
separation of duty, and dynamic separation of duty, are used 414
herein to facilitate sharing among roles in an enterprise. 415
2) Fundamental Elements: This section concisely intro- 416
duces the fundamental elements of the PBAC model, each of 417
which is represented as follows. 418
1) VE = {ve: ve represents a dynamic Internet organization 419
consisting of EMs executing a project to achieve one 420
common business goal}. 421
2) EM = {em: em can be a substantive enterprise organi- 422
zation, a VE, or an individual, and it is a VE member 423
with at least one worker participating directly in the VE 424
activities}. 425
3) NEM = {nem: nem can be a substantive enterprise or- 426
ganization, a VE, or an individual, but it is not a VE 427
member; a nem has at least one worker participating 428
directly in the activities of EMs, and the activities have 429
direct relations with the FT of the VE}. 430
4) Project (P ) = {p: p denotes the set of FTs, projects, and 431
subprojects performed by a VE}. 432
5) FT = {ft: ft is a set of VE activities, which have a 433
common objective and are undertaken by several VERs}. 434
6) VER = {ver: ver represents a virtual role formed to 435
enable professional division within VE, which is assigned 436
to perform more than one FT}. 437
7) Object (O) = {o: o denotes an information resource in- 438
cluding public and private resources which can be a data- 439
base, entity, attribute, tuple, document, XML document, 440
application, software component, or knowledge}. 441
8) PublicO = {public-o: public-o represents a subset of 442
objects owned by a VE, stored in a VE’s repository, and 443
implemented in a VE’s platform}. 444
9) Operation = {op: op is a set of access authorities, such as 445
write, read, and execute}. 446
10) PublicP = {public-p: public-p represents a permitted 447
mode of access to a PublicO}. 448
11) Permission = {x: x ∈ PublicP ∪ PrivateP}. 449
12) PACP: PACP identifies which project resources are pro- 450
tected and shared according to the relations among 451
projects and the shared rules and which activities are 452
forbidden in the VE scope. Each project involves a 453
PACP, which can be performed automatically by the 454
VEAC system. The PACP can be dynamically created, 455
enforced, and modified by administrators when the VE 456
environment changes. The main rules described in PACP 457
include the following: 1) rules of resource sharing among 458
projects, describing the resource sharing strategy and 459
relations among projects; 2) rules of resource usage in 460
a project, including constraints on VERs, FTs, PublicPs, 461
and assignments between elements; 3) rules of resource 462
sharing of various cooperation modes, identifying the 463
level of resource sharing according to the cooperation 464
mode between VERs; and 4) rules of exception handling, 465
which can be classified into rules of permitted exception 466
handling and rules of forbidden exception handling. A 467
PACP language model used to construct the PACP is 468
shown in detail in Section VI. 469
3) Assignments and Relations: The following sections de- 470
fine the concept of assignments and relations between two 471
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 7
Fig. 3. Example of subset relation.
where Project p1 involves three subprojects p11, p12, and p13,588
and project p11 is further decomposed into subprojects p111589
and p112. Owing to p13Rpsp1, PublicPs, such as public-p2 and590
public-p3, are assigned to p1 and p13 via FTs, whereas EMs,591
such as em1 and em2, are permitted to participate in ve11 and592
ve111. Two functions privilegemain−p(ft) and privilegesub−p(ft)593
are defined, respectively, in (1) and (2), shown at the bottom594
of the page, for propagating user’s privilege from the main595
project and subproject, respectively, where variables are intro-596
duced as follows. Function (1) indicates that the privileges of597
ft1i involve the PublicP and PrivateP assigned to the ft1i and598
ft2j(1 ≤ j ≤ n) when the conditions shown in the equation599
hold; otherwise, the privileges of ft1i only have the PublicP600
and PrivateP from ft1i. Due to the limited space, function (2)601
shows the propagation of user privileges from subproject, which602
is similar to function (1) and is not further introduced in detail.603
p1 is the main project of p2 that is the subproject of p1, ft1i’s604
are the FTs involved in p1, 1 ≤ i ≤ m, and ft2j’s are the FTs605
involved in p2, 1 ≤ j ≤ n. Several constraints are applied to606
use a subset relation: 1) A main project may have more than607
one subproject; 2) a subproject is only involved in one main608
project; 3) an EM may participate in the main and subprojects;609
and 4) a PublicP is only permitted to be assigned to different610
projects with subset relations.611
B. Version Relation612
Version relation (Rpv) describes a project y called a postver-613
sion project that is extended from a project x called preversion614
project and planned with reference to the preversion project.615
Therefore, the pre- and postversion projects have similar tar-616
gets, FTs, and participants. The relation helps support version-617
dependent authorizations by enabling the reuse of resources for618
a new product, thus reducing its time to market. Because the619
pre- and postversion projects have similar targets, activities, and620
participants, the postversion FT in the postversion project corre- 621
sponds to the preversion FT in the preversion project. While the 622
postversion FT is performed, the privileges owned by the pre- 623
version FT are inherited by the postversion FT using the weak 624
inheritance. The set of pairs of projects between which have 625
version relation is represented by xRpvy = {(x, y) : x, y ∈ 626
P, x = y, and x “is the preversion of” y}. Fig. 4 shows an 627
example of the version relation, which demonstrates that project 628
p1 is the preversion of project p2. Project p1 for developing 629
a car engine consists of FTs ft11 and ft12, whereas p2 for 630
developing a new engine based on the engine developed by p1 631
comprises ft21, ft22, and ft23. FTs ft11 (requirement analysis) 632
and ft12 (conceptual design) correspond to ft21 (requirement 633
analysis) and ft22 (conceptual design), respectively, whereas 634
ft23 (primary design) is created for another task, which is not 635
extended from p1. Therefore, while the ft21 performed, workers 636
must refer significantly to information owned by ft11. Due to 637
p1Rpvp2, each FT in project p2 is performed by VERs, which 638
are allowed to refer to PublicPs of corresponding FTs in p1 639
if the attribute allowed reference of corresponding FT is true. 640
As shown in Fig. 4, a user u1 is assigned to perform the ft21 641
through (u1, r1), (r1, ver21), and (ver21, ft21); in addition to 642
the public-p21 and public-p22, u1 may refer to the public-p11, 643
public-p12, and public-p13. Function (3) shown at the bottom 644
of the next page is presented to indicate that the privileges of 645
ft2j involve the PublicP and PrivateP assigned to the ft2j , and 646
partial PublicPs of the corresponded FT ft1i of ft2j through the 647
use of weak inheritance function when the conditions shown 648
in the function hold; otherwise, the privileges of ft2j only 649
have the PublicP and PrivateP from ft2j . p1 is the preversion 650
project of p2 that is the postversion project of p1, ft1i’s are the 651
FTs involved in p1, and ft2j’s corresponding to ft1i’s are the 652
FTs involved in p2. Several constraints are applied when using 653
the version relation to support resource sharing between two 654
projects: 1) A postversion project has less than one preversion 655
privilegemain−p(ft1i) =
{
FT−Permission−A(ft1i) ∪ FT−Permission−A(ft2j) if ∃ p1Rpsp2 ∧Amain−p of ft2j = “true”
FT−Permission−A(ft1i) otherwise (1)
privilegesub−p(ft2j) =
{
FT−Permission−A(ft2j) ∪ FT−Permission−A(ft1i) if ∃ p1Rpsp2 ∧Asub−p of ft1i = “true”
FT−Permission−A(ft2j) otherwise (2)
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 9
Fig. 5. Example of reference relation.
triggered and performed, user u1 obtains authorizations public-706
p11, public-p12, and public-p13 from ft11, and authorizations707
public-p21 and public-p22 from ft21.708
Function (4) shown at the bottom of the page, showing709
the propagation of user privilege by using process relation, is710
presented to indicate that the privileges of ftaction involve the711
PublicP and PrivateP assigned to the ftaction and also partial712
permissions of the event FT ftevent of the ftaction through the713
use of the weak inheritance function when the conditions shown714
in the function hold; otherwise, the privileges of ftaction only715
have the PublicP and PrivateP from ftaction. p1 is the action716
project of p2 that is the event project of p1, ftaction is the action717
FT included in p1, and ftevent is the event FT included in p2.718
Using the process relation must obey the following constraints:719
1) A process relation exists between two projects which must720
have the subset relation; 2) an event project may trigger more721
than one action project simultaneously; 3) an event FT may722
trigger more than one action FT simultaneously; and 4) an723
action project may be triggered if all of its event projects are724
accomplished.725
E. Exclusive Relation726
Exclusive relation (Rpe) identifies mutual conflict between727
two projects, signifying that the resources of the two projects728
cannot refer to each other. The exclusive relation is default.729
That is, two projects are preset as exclusive relation if no other730
relation exists between them. The set of pairs of projects that731
conflict with each other is represented by xRpey = {(x, y) :732
x, y ∈ P, x = y, x “conflicts with" y, and (¬∃ xRpry) ∧733
(¬∃ yRprx)}. If two projects are exclusive, then all users, EMs,734
FTs, and permissions in a project are exclusive with the other735
project. That is, an enterprise is disallowed from participating736
simultaneously in two projects with exclusive relation; attempts737
by users of the exclusive projects to use the same resources are 738
rejected. Using the process relation must obey the following 739
constraints: 1) A project may conflict with more than one simul- 740
taneously; 2) a PublicP may not be assigned to two exclusive 741
projects; and 3) an EM is not allowed to be assigned to two 742
mutual exclusive projects. 743
V. COOPERATION MODES AMONG TWO VERS 744
This section introduces three cooperation modes among 745
VERs based on the resource sharing requirements of collabo- 746
rative operations in the VE. 747
Cooperation mode (Rc) describes interactions among VERs 748
according to the dependent level of their duties. Given a set 749
VER, x and y ∈ VER, a binary relation cooperation relation 750
(Rc) on VER is a subset of VER×VER, which is distinguished 751
into three cooperation relations. For convenience in the follow- 752
ing discussion, two items are first defined in terms of authority 753
inheritance. A VER in cooperative mode can inherit strongly or 754
weakly the privileges from the other VER. Strong inheritance 755
means that the privilege of a VER can be fully inherited by the 756
other VER, whereas weak inheritance means that the privilege 757
can only be partially inherited, such as only inheriting read 758
privilege. 759
1) Dependent single-task mode (Rcds) is the most seamless 760
cooperative relationship between two VERs, working to- 761
gether to perform FTs, that have dependencies and share 762
resources with each other. The two VERs’ permissions 763
are inherited from each other via strong inheritance 764
(defined in Section IV). When two VERs collaboratively 765
perform different FTs, the users playing the two VERs 766
obtain the same permissions from the FTs. The set of 767
pairs of VERs with Rcds is represented by using 768
xRcdsy={(x, y) : x, y∈VER, x =y,∃(x, ft1), (y, ft1) ∈ 769
privilegeprocess(ftaction) =


FT−Permission−A(ftaction) ∪ Inherweak (FT−Permission−A(ftevent))
if ∃(p1Rprp2) ∧ (Astate of ftevent = “achieved”) ∧ (Aref of ftevent = “true”)
FT−Permission−A(ftaction) otherwise
(4)
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 11
Fig. 7. PACP language model.
business environment in a timely manner. The PACP language832
model has the following main components.833
1) PACP. A PACP consists of one VEAC policy (VEACP)834
and many enterprise AC policies (EACPs), which are sets835
of rules.836
2) VEACP, a set of rules, describes the regulation and con-837
straint on resource AC and sharing in a VE to manage the838
VE’s resource.839
3) EACP, consisting of a series of rules, describes rules and840
conditions for enterprise resource AC for each EM. Its841
rules shall not be in conflict with the VEACP it belongs842
to and must comply with the sharing rules agreed upon843
by VE so to make available resource in need of sharing.844
4) Rule element is the most basic unit of policy and corre-845
sponds to the conventional concept of authorization. The846
principal components of rule have a target, effect, condi-847
tion, and rule combining algorithm. Each rule permits or848
denies one or more subjects to performing actions on one849
or more objects under some conditions.850
5) A target element involved in a rule defines the set of851
objects, subjects, and actions to which the rule or policy852
applies.853
6) Object may be data, information, and knowledge owned854
by the VE or one of its EMs.855
7) A subject is an actor whose attributes may be referenced856
by a predicate. Actor may be a user, role, enterprise,857
or VER.858
8) An action is an operation on resource.859
9) A condition element represents additional constraints that860
further refine rule applicability.861
10) Rule combining algorithm compresses the output from862
the embraced rules. The PACP language model has four863
rule combining algorithms: deny overrides, permit over-864
rides, first applicable, and only-one-applicable. Based on865
the selected combining algorithm, an authorization deci- 866
sion can be permit, deny, not applicable, or indeterminate. 867
11) Effect is the intended consequence of a satisfied rule— 868
either Permit or Deny. 869
VII. VEAC MODEL CONSTRUCTION METHODOLOGY 870
The proposed formal VEAC model can efficiently manage 871
and share information resources in the VE life cycle. To as- 872
sist the administrators of VEs and their EMs to successfully 873
implement the proposed fundamental VEAC model and to use 874
the PACP language model appropriately for VE information 875
resource security and sharing, this section develops a VEAC 876
model construction methodology based on the five phases of 877
VE life cycle, namely, identification, formation, design, oper- 878
ation, and dissolution phases. The methodology provides the 879
security administrators of the leader and partners of VEs with a 880
systematic method for the following reasons: 1) to identify the 881
fundamental elements of VEAC model, such as P , VER, FT, 882
U , R, PublicP, and PrivateP; and 2) to establish assignments be- 883
tween elements, PRs between projects, and cooperation modes 884
between VERs. The VEAC model applied for certain VE 885
is initially planned at the formation phase, all elements and 886
assignments of the VEAC model are designed at the design 887
phase, and the constructed VEAC model is implemented at 888
the operation phase. Thus, information resources are managed 889
at the operation and dissolution phases. The goal, procedure, 890
inputs, outputs, and related method and technologies of each 891
phase of the methodology are separately introduced in the 892
following sections. 893
A. Identiﬁcation and Formation Phases 894
Fig. 8 shows the first two phases in the proposed method- 895
ology, namely, identification and formation phases, which are 896
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 13
Fig. 9. Design procedure of a VE based on the VEAC model.
(A312) Identify initial business and resource using and969
sharing regulations. From a business perspective, action A312970
identifies regulations regarding usage and sharing of resources971
to restrict the behavior of partners and specify each participa-972
tor’s responsibility and obligations. In the VE organizational973
structure model, every participator in a VE is assigned certain974
tasks, which are performed and restricted by the regulations.975
The regulations are then converted into VEACP and EACPs976
by A336.977
(A313) Design the core processes of VE and the intraenter-978
prise processes of partners. Based on the planned VE process979
at A2, a VE leader at the phase designs the core processes of980
the VE project represented by a project evaluation and review981
technique chart. The core processes are composed of many982
activities to accomplish VE’s goal. Each activity in the core983
process is assigned to certain partners to perform. Each partner984
must then spread up and perform its assigned activities and985
integrate them into its intraenterprise processes. Finally, PRs986
Rpv, Rpr, Rpp, and Rpe can be established at action A313 if987
they are needed.988
(A314) Plan schedule. According to the core VE processes989
designed by A313, the VE leader at the action negotiates and990
communicates with partners to plan the start and end times of991
each activity in the core VE and intraenterprise processes, and992
the activity prerequisites.993
(A315) Decompose activities into manageable tasks. The994
activities involved in the core VE and intraenterprise processes995
are further decomposed into tasks until every task can represent996
a manageable amount of work that can be planned, scheduled,997
and assigned. A work breakdown structure, comprising a hierar-998
chical decomposition of project, activities, and tasks, is planned999
at this point. The decomposed tasks are then further decom-1000
posed or combined into manageable tasks in terms of resource 1001
AC. The priority of every manageable task is determined from 1002
the start and end times of the original tasks, the information 1003
flow between tasks and task outputs. 1004
(A316) Estimate the activity models. An activity model is 1005
composed of some partially ordered tasks that are conducted 1006
to achieve the actions to be performed within a VE. Action 1007
A316 estimates the duration of every task and changes the 1008
baseline based on reasonable estimations. The following factors 1009
should be addressed: 1) the resources that should be used; 1010
2) the amount of time required; 3) how many people are needed; 1011
4) the skills that are necessary; and 5) the tasks that need to 1012
be completed before other tasks are started. Subprocedure 2 is 1013
executed after all tasks are estimated. 1014
2) Subprocedure A32—Estimate Usable Resources and Cre- 1015
ate a Resource Use Plan: Subprocedure A32 estimates the 1016
usable VE resources and builds a resource use plan for the entire 1017
life cycle of a VE. The plan is adopted to restrict assignments 1018
between elements and to build the PACP. 1019
(A321) Estimate usable resources and expectable outputs. 1020
The first action of this subprocedure estimates usable VE 1021
resources according to the activity models outputted by A316. 1022
These resources include public and private resources, which are 1023
supplied or shared with partners to facilitate the execution of 1024
VE tasks. In addition, the administrator has to expect possible 1025
outputs during the execution of each task and know whom the 1026
outputs will be shared with. Some shared outputs should be 1027
specified by specific data containers, which are then converted 1028
into permissions and assigned operations permitted on them 1029
at A333. 1030
(A322) Create plans for using and sharing resources. Based 1031
on the regulations created by A312, the result of A321, and 1032
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 15
TABLE I
VE−P−A AND P−VER−A LISTS
TABLE II
COMPANY LIST
in p11; hence, some elements or assignments are ignored in the1111
following tables.1112
Table I, the VE−P−A and P−VER−A lists, shows the VE1113
name, project performed by the VE, the VERs involved in the1114
VE, and the project objectives. For example, ve1 involves two1115
VERs, ver11 and ver12, and performs project p1 whose aim is1116
to develop a 2000 cc car engine with at least 140 hp.1117
Table II lists the detailed information for each company1118
participating in the four VEs.1119
Table III, the VE−EM−A list, shows all EMs in each VE;1120
for instance, the companies participating in ve11 are em1, em2,1121
and em3.1122
Table IV lists the attributes of FTs that are associated with the1123
four projects, including the number, name, allowed reference,1124
allowed subproject, and allowed main-project attributes.1125
Table V lists the P−FT−A with project names, the number1126
of FTs assigned to the projects, and the FTs involved in the1127
projects.1128
Table VI lists the executed sequence of FTs involved in the1129
two projects (p11 and p12) between which a process relation is1130
held. Consequently, when the event FT ft111 is achieved, the1131
action FT ft121 is triggered. According to the process relation1132
definition, ft121 will hierarchy all or part of the privileges1133
assigned to ft111 when ft121 is executed.1134
Table VII, FT−PublicP−A, lists each FT and PublicPs as-1135
signed to each FT.1136
Table VIII shows the VER−FT−A list, in which only VERs1137
involved in ve11 are considered and listed.1138
In the aforementioned example, ve11 (cylinder head design)1139
is used as an example to construct PACP for managing re-1140
TABLE III
VE−EM−A LIST
sources that belong to ve11, as shown in the Appendix II. 1141
With the objective of cylinder head design of a new car en- 1142
gine, this VE consists of three EMs, i.e., Company-A (em1), 1143
Company-B (em2), and Company-C (em3), responsible for oil 1144
filler cap design, cylinder head design, and stopper design, 1145
respectively. 1146
In this PACP (see Appendix II), only part of the rules in 1147
the VEACP and part of the rules in the EACP of Company-A 1148
are listed. According to VEACP rule-ve11-001, when two 1149
tasks ft111 and ft112 are being executed from May 20, 1150
2007 to October 20, 2008, all Company-A, Company-B, and 1151
Company-C personnel may read knowledge of know-what 1152
about cylinder head design, car engine, and cylinder. The EACP 1153
rule-em1-001 for Company-A dictates that, from November 20, 1154
2007 to October 20, 2008, all Company-B and Company-C 1155
personnel may read R&D knowledge related to oil filler cap 1156
design. 1157
IX. CONCLUSION AND FUTURE WORK 1158
The results and contributions of this paper are as follows. 1159
1) The formal VEAC model, including the fundamental 1160
VEAC model, PACP language model, and construction 1161
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 17
APPENDIX I
TABLE IX
LIST OF FUNCTIONS RELATED TO THE VEAC MODEL
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 19
REFERENCES1202
[1] Y.-M. Chen and M.-W. Liang, “Design and implementation of a collabo-1203
rative engineering information system for allied concurrent engineering,”1204
Int. J. Comput. Integr. Manuf., vol. 13, no. 1, pp. 11–30, Jan. 2000.1205
[2] A. Frenkel, H. Afsarmanesh, C. Garita, and L. O. Hertzberger, “Support-1206
ing information access rights and visibility levels in virtual enterprises,”1207
in Proc. 2nd IFIP Work. Conf. Infrastructure Virtual Enterprise, 2000,1208
pp. 177–192.1209
[3] J. Ma and M. A. Orgun, “Trust management and trust theory revision,”1210
IEEE Trans. Syst., Man, Cybern. A, Syst., Humans, vol. 36, no. 3, pp. 451–1211
460, May 2006.1212
[4] Y. Lu, W. Wang, B. Bhargava, and D. Xu, “Trust-based privacy preser-1213
vation for peer-to-peer data sharing,” IEEE Trans. Syst., Man, Cybern. A,1214
Syst., Humans, vol. 36, no. 3, pp. 498–502, May 2006.1215
[5] E. Turban, D. King, D. Viehland, and J. Lee, Electronic Commerce: A1216
Managerial Perspective. Upper Saddle River, NJ: Pearson Educ. Int.,1217
2006.1218
[6] H. R. Rao and S. J. Upadhyaya, “Special issue on secure knowledge1219
management,” IEEE Trans. Syst., Man, Cybern. A, Syst., Humans, vol. 35,1220
no. 1, p. 185, Jan. 2005.1221
[7] E. Bertino, L. R. Khan, R. Sandhu, and B. Thuraisingham, “Secure1222
knowledge management: Confidentiality, trust, and privacy,” IEEE Trans.1223
Syst., Man, Cybern. A, Syst., Humans, vol. 36, no. 3, pp. 429–438,1224
May 2006.1225
[8] R. Singh and A. F. Salam, “Semantic information assurance for secure dis-1226
tributed knowledge management: A business process perspective,” IEEE1227
Trans. Syst., Man, Cybern. A, Syst., Humans, vol. 36, no. 3, pp. 472–486,1228
May 2006.1229
[9] R. Au, M. Looi, and P. Ashley, “Automated cross-organizational trust1230
establishment on extranets,” in Proc. Workshop Inf. Technol. Virtual1231
Enterprises, 2001, pp. 3–11.1232
[10] T.-Y. Chen, Y.-M. Chen, C.-B. Wang, and H.-C. Chu, “Development of an1233
access control model, system architecture and approaches for information1234
sharing in virtual enterprise,” Comput. Ind., vol. 58, no. 1, pp. 57–73,1235
Jan. 2007.1236
[11] T.-Y. Chen, Y.-M. Chen, H.-C. Chu, C.-B. Wang, and H. Yang, “Secure1237
resource sharing on cross-organization collaboration using a novel trust1238
method,” Robot. Comput.-Integr. Manuf., vol. 23, no. 4, pp. 421–435,1239
Aug. 2007.1240
[12] M. Koch, L. V. Mancini, and F. Parisi-Presicce, Graph Transforma-1241
tions for the Speciﬁcation of Access Control Policies. Amsterdam,1242
The Netherlands: Elsevier science B. V, 2002.1243
[13] D. F. Ferraiolo, D. R. Kuhn, and R. Chandramouli, Role-Based Access1244
Control. Norwood, MA: Artech House, 2003.1245
[14] S. Oh and S. Park, “Task-role-based access control model,” Inf. Syst.,1246
vol. 28, no. 6, pp. 533–562, Sep. 2003.1247
[15] A. Kern, “Advanced features for enterprise-wide role-based access con-1248
trol,” in Proc. Comput. Security Appl. Conf., 2002, pp. 333–342.1249
[16] C. J. Moon, D. H. Park, S. J. Park, and D. K. Baik, “Symmetric RBAC1250
model that takes the separation of duty and role hierarchies into consider-1251
ation,” Comput. Security, vol. 23, no. 2, pp. 126–136, Mar. 2004.1252
[17] D. Shin, G. J. Ahn, and J. S. Park, “An application of directory service1253
markup language (DSML) for role-based access control (RBAC),” in1254
Proc. Comput. Softw. Appl. Conf., 2002, pp. 934–939.1255
[18] K. Furst, T. Schmidt, and G. Wippel, “Managing access in extended1256
enterprise networks,” IEEE Internet Comput., vol. 6, no. 5, pp. 67–74,1257
Sep./Oct. 2002.1258
[19] J. Bacon, K. Moody, and W. Yao, “A model of OASIS role-based access1259
control and its support for active security,” ACM Trans. Inf. Syst. Security,1260
vol. 5, no. 4, pp. 492–540, Nov. 2002.1261
[20] F. T. Alotaiby and J. X. Chen, “A model for team-based access1262
control (TMAC),” in Proc. Inf. Technol.: Coding Comput., 2004, vol. 1,1263
pp. 450–454.1264
[21] J. J. Kanet, W. Faisst, and P. Mertens, “Application of information tech-1265
nology to a virtual enterprise broker: The case of Bill Epstein,” Int. J.1266
Prod. Econ., vol. 62, no. 1, pp. 23–32, May 1999.1267
[22] E. K. Ouzounis, “An agent-based platform for the management of dy-1268
namic virtual enterprises,” Ph.D. dissertation, Tech. Univ. Berlin, Berlin,1269
Germany, 2001.1270
[23] J. S. Park and J. Hwang, “RBAC for collaborative environments: Role-1271
based access control for collaborative enterprise in peer-to-peer com-1272
puting environments,” in Proc. 8th ACM Symp. Access Control Models1273
Technol., 2003, pp. 93–99.1274
[24] N. Mezzetti, “Towards a model for trust relationships in virtual enter-1275
prises,” in Proc. 14th Int. Workshop Database Expert Syst. Appl., 2003,1276
pp. 420–424.1277
[25] T. J. Smith and L. Ramakrishnan, “Joint policy management and auditing 1278
in virtual organizations,” in Proc. 4th Int. Workshop Grid Comput., 2003, 1279
pp. 117–124. 1280
[26] G. Steinke and R. Leamon, “Information security issues facing virtual en- 1281
terprises,” in Proc. Int. Conf. Eng. Technol. Manage., 1996, pp. 641–644. 1282
[27] H. Zhu, “Some issues of role-based collaboration,” in Proc. Can. Conf. 1283
Elect. Comput. Eng., 2003, vol. 2, pp. 687–690. 1284
[28] G. Kolaczek, “Specification and verification of constraints in role based 1285
access control,” in Proc. 12th IEEE Int. Workshops Enabling Technol.: 1286
Infrastructure Collaborative Enterprise, 2003, pp. 190–195. 1287
[29] J. Luo and D. He, “Research on object-oriented role-based access control 1288
model,” in Proc. 4th Int. Conf. Parallel Distrib. Comput., Appl. Technol., 1289
2003, pp. 132–135. 1290
[30] J. D. Moffett, “Control principles and role hierarchies,” in Proc. 3rd ACM 1291
Workshop Role-Based Access Control, 1998, pp. 63–69. 1292
[31] S. Osborn, “Integrating role graphs: A tool for security integration,” Data 1293
Knowl. Eng., vol. 43, no. 3, pp. 317–333, Dec. 2002. 1294
[32] M. Lorch, S. Proctor, R. Lepro, D. Kafura, and S. Shah, “First experiences 1295
using XACML for access control in distributed systems,” in Proc. ACM 1296
Workshop XML Security, 2003, pp. 25–37. 1297
[33] S. Barker and P. J. Stuckey, “Flexible access control policy specifica- 1298
tion with constraint logic programming,” ACM Trans. Inf. Syst. Security, 1299
vol. 6, no. 4, pp. 501–546, Nov. 2003. 1300
[34] M. Coetzee and J. H. P. Eloff, “Virtual enterprise access control require- 1301
ments,” in Proc. Annu. Res. Conf. South Afr. Inst. Comput. Scientists Inf. 1302
Technologists Enablement Through Technol., 2003, pp. 285–294. 1303
[35] S. Jajodia, P. Samarati, M. L. Sapino, and V. S. Subrahmanian, “Flexible 1304
support for multiple access control policies,” ACM Trans. Database Syst., 1305
vol. 26, no. 2, pp. 214–260, Jun. 2001. 1306
[36] A. Belokosztolszki and K. Moody, “Meta-policies for distributed role- 1307
based access control systems,” in Proc. 3rd Int. Workshop Policies Distrib. 1308
Syst. Netw., 2002, pp. 106–115. 1309
[37] S. Hada and M. Kudo, “XML document security based on provisional 1310
authorization,” in Proc. 7th ACMConf. Comput. Commun. Security, 2000, 1311
pp. 87–96. 1312
[38] G. Boella and L. van der Torre, “Security policies for sharing knowl- 1313
edge in virtual communities,” IEEE Trans. Syst., Man, Cybern. A, Syst., 1314
Humans, vol. 36, no. 3, pp. 439–450, May 2006. 1315
[39] A. Kern, A. Schaad, and J. Moffett, “Enterprise role administration: 1316
An administration concept for the enterprise role-based access control 1317
model,” in Proc. 8th ACM Symp. Access Control Models Technol., 2003, 1318
pp. 3–11. 1319
[40] R. A. Botha and J. H. P. Eloff, “Designing role hierarchies for access 1320
control in workflow systems,” in Proc. 25th Annu. Int. Comput. Softw. 1321
Appl. Conf., 2001, pp. 117–122. 1322
[41] F. Dridi, B. Muschall, and G. Pernul, “Administration of an RBAC sys- 1323
tem,” in Proc. 37th Annu. Hawaii Int. Conf. Syst. Sci., 2004, pp. 187–192. 1324
Tsung-Yi Chen received the B.S. degree from Prov- 1325
idence University, Taichung, Taiwan, R.O.C., in 1326
1996, and the M.S. and Ph.D. degrees from the Insti- 1327
tute of Manufacturing Engineering, National Cheng 1328
Kung University, Tainan, Taiwan, in 2001 and 2006, 1329
respectively. 1330
He is currently an Assistant Professor with the 1331
Department of Electronic Commerce Management, 1332
Nanhua University, Chia-Yi, Taiwan. His research 1333
interests include virtual enterprise, e-commerce and 1334
knowledge commerce, enterprise and information 1335
integration, access control, and knowledge sharing. 1336
IEEE TRANSACTIONS ON SYSTEMS, MAN, AND CYBERNETICS—PART A: SYSTEMS AND HUMANS, VOL. 38, NO. 4, JULY 2008 1
A Formal Virtual Enterprise Access Control Model1
Tsung-Yi Chen, Yuh-Min Chen, and Chin-Bin Wang2
Abstract—A virtual enterprise (VE) refers to a cooperative3
alliance of legally independent enterprises, institutions, or single4
persons that collaborate with each other by sharing business5
processes and resources across enterprises in order to raise enter-6
prise competitiveness and reduce production costs. Successful VEs7
require complete information transparency and suitable resource8
sharing among coworkers across enterprises. Hence, this investi-9
gation proposes a formal flexible integration solution, named the10
formal VE access control (VEAC) model, based on the role-based11
AC model, to integrate and share distributed resources owned by12
VE members. The formal VEAC model comprises a fundamen-13
tal VEAC model, a project AC policy (PACP) language model,14
and a model construction methodology. The fundamental VEAC15
model manages VE resources and the resources of participating16
enterprises, in which various project relationships are presented to17
facilitate different degrees of resource sharing across projects and18
enterprise boundaries, and cooperative modes among VE roles are19
presented to enable collaboration among coworkers in a VE. This20
PACP language model features object–subject–action–condition21
AC policies that jointly determine user access authorizations. In22
addition, the methodology supplies a systematic method to identify23
fundamental elements of the VEAC model and to establish assign-24
ments between elements and relations.25
Index Terms—Access control (AC), resource sharing, role-based26
access control (RBAC), virtual enterprise (VE).27
I. INTRODUCTION28
V IRTUAL enterprise (VE) is regarded as one of the most29 promising business strategies to enhance the global com-30
petitiveness of enterprises [1]. VEs integrate the processes,31
activities, and resources from different enterprises through en-32
terprise alliances to respond quickly to customer expectations.33
Frenkel et al. [2] defined a VE as a collaborative group of34
existing autonomous enterprises, which selectively share their35
expertise, skills, and resources to accomplish a common prod-36
uct or service. In practice, a VE is generally implemented37
with a distributed and collaborative business process, in which38
individuals from different enterprises cooperate on business-39
related activities or processes by remote coordination, com-40
munication, and control [1]. To attain VE goals and support41
each other’s functionalities, enterprises in a VE must share and42
exchange information, knowledge, and resources. The features43
Manuscript received August 6, 2006; revised May 18, 2007. This work
was supported in part by the National Science Council of the Republic of
China, Taiwan, under Contract NSC96-2221-E-343-002. This paper was rec-
ommended by Associate Editor J. Miller.
T.-Y. Chen and C.-B. Wang are with the Department of Electronic Commerce
Management, Nanhua University, Chia-Yi 62248, Taiwan, R.O.C. (e-mail:
tsungyi@mail.nhu.edu.tw; cbwang@mail.nhu.edu.tw).
Y.-M. Chen is with the Institute of Manufacturing Engineering, National
Cheng Kung University, Tainan 70101, Taiwan, R.O.C. (e-mail: ymchen@
mail.ncku.edu.tw).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TSMCA.2008.923090
that determine the access level to the local information of every 44
enterprise, when considering the competitive and cooperative 45
relationships among enterprises, include the degree of trust 46
between two enterprises, the function of the enterprises in the 47
VE, and contractual agreements [2], [3]. Lu et al. [4] proposed 48
a trust-based privacy preservation method for P2P data sharing. 49
A collaborative engineering environment allows multiple en- 50
gineers to work simultaneously with individual assembly parts. 51
Some manufacturing industries, e.g., the automotive sector, 52
use VEs to maintain business relationships with their suppliers 53
and corporate customers, enabling manufacturers to collaborate 54
on the design, production, assembly, and marketing of new 55
products. For instance, designing and developing a new car is a 56
complex and lengthy process; during product R&D, engineer- 57
ing and design drawings can be shared over secure network 58
among the contracting firm, testing facility, marketing firm, 59
and downstream manufacturing and service companies [5]. 60
Information concerning the design for a new product at various 61
segments of the VE has to be visible to all members of the VE 62
at any time. Consequently, the information must be managed 63
properly, with appropriate access control (AC) models, strict 64
policies, discipline, and daily monitoring. Development of a 65
new car model by a VE might involve approximately 20 000 66
designers and engineers from hundreds of divisions and de- 67
partments, some of which belong to different enterprises in 68
different countries. One sub-VE in the car-manufacturing VE 69
performs car design, which contains four subprojects, namely, 70
engine design, cool system design, transmission case design, 71
and framework design. Engine designers in the engine design 72
subproject collaboratively develop an engine for the new car 73
model. Information related to the engine, such as drawing and 74
engineering data, is generated and shared in real time to workers 75
in the subproject and other subprojects. Therefore, the success 76
of a VE depends wholly on transparent and effective sharing 77
of information resources, including information, application 78
systems, and knowledge, throughout the business cycle [1]. Not 79
all business partners are equally trusted in today’s complex 80
business environment. Today’s partners could become tomor- 81
row’s competitors. Hence, enterprises do not generally like 82
sharing information. Consequently, a VE or related business 83
strategy, such as allied concurrent engineering or virtual team, 84
is likely to fail. Therefore, VE urgently needs secure and trust- 85
worthy AC model, approach, and mechanism that can manage 86
distributed resources across enterprises and share them with 87
collaborative workers. To secure information sharing, competi- 88
tive and cooperative relationships among enterprises should be 89
considered when using the proposed model to evaluate a user’s 90
authorization to access resources. 91
Secure resource management and sharing across organiza- 92
tional boundaries have seldom been addressed. AC for VEs 93
is difficult for the following reasons: 1) enterprise members 94
in a VE may change frequently; 2) each enterprise member 95
1083-4427/$25.00 © 2008 IEEE
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 3
Fig. 1. VE environment.
7) A change in a member’s role in a process should not affect210
the obligations and responsibilities in its other assigned211
roles.212
8) Regulations do not constrain the selection of members in213
participating enterprises’ partners.214
9) Each member may own its enterprise resource manage-215
ment policy and AC model.216
10) Shared VE resources include private resources owned by217
a participating enterprise and stored in its own reposito-218
ries and also public resources belonging to the VE and219
stored in a public repository.220
The levels of resource sharing among partners depend on VE221
characteristics, including levels of cooperation with partners,222
degree of trust, distributed tasks, and contractual agreements.223
When each participant in a VE brings information to the VE,224
the participant will not want to share more proprietary informa-225
tion than necessary with VE members because of information226
security issues. Information in VEs can be divided into three227
areas: 1) information of an individual partner brought to the228
VE; 2) information generated by the VE; and 3) information229
assets of the VE [26]. The information must be protected and230
distributed in a secure manner among all participants.231
2) Requirement Analysis for AC in VE: Based on the general232
requirements of AC expressed in [27] and [28], this paper233
identifies the following requirements for AC model design:234
1) Only the security administrator should be permitted to235
modify security attributes; 2) roles should be able to inherit236
authority either fully or partially; 3) positive authorizations and237
negative authorizations, as well as the principle of strict least238
privilege, should be supported; 4) the fine-grained authority re-239
quirements should be fulfilled; 5) access authority may change240
with tasks or roles; and 6) the model should be able to manage241
all users and resource objects in the enterprise [29]–[31].242
Aside from the aforementioned requirements, according to243
the characteristics of VE, additional requirements must be244
considered when developing a VEAC model, as follows.245
1) Since the organization structure of a VE is dynamic,246
access rights and resource objects can be changed in247
real time.248
2) The model considers all users’ access rights because249
resource administrators cannot predict who will access250
which resources in a VE.251
3) As a VE is formed to achieve a certain goal in a limited 252
time frame, each VE has different goal and business 253
processes. A VE is always conducted as a project. There- 254
fore, project is an essential element of AC in VE. 255
4) Since each enterprise has a legacy AC system, the VEAC 256
model should be easily integrated with various AC mod- 257
els or policies. 258
5) The VE manages and shares resources collaboratively. 259
6) To facilitate trust among enterprises, the access policy in 260
VE is planned and managed together by administrators of 261
all participating enterprises. 262
7) The VE can maintain the consistency of policies and man- 263
age the conflicts between VE access policy and members’ 264
own access policies. 265
C. AC Policy 266
A significant shortcoming of existing AC systems is that 267
they were developed by using a specific AC policy, which 268
was defined by Lorch et al. [32], regarding how services can 269
be utilized. AC policies are typically represented as follows: 270
1) constrained logic programs that support specific policy op- 271
tions; 2) constrained checks; and 3) administrator queries [33]. 272
AC policy can restrict the use of services to suitably qualified 273
principals and specify constraints that must hold when a service 274
is invoked [19]. 275
Recent development of AC policy framework includes lan- 276
guages and graphical approaches that specify different AC poli- 277
cies in a single framework [34]. A graph transformation-based 278
security policy framework was proposed by Koch et al. [12] 279
that included negative and positive constraints. The negative 280
constraints specify graphs not contained in any system graph, 281
and positive constraints specify graphs explicitly constructed in 282
a system graph. By combining a formal framework and a logic- 283
based language, Jajodia et al. [35] developed the authentication 284
specification language that can be used to identify different AC 285
policies that can coexist within the same system and be en- 286
forced by the same security server. Moreover, security assertion 287
markup language is an XML framework identified by OASIS 288
security services to exchange authentication and authoriza- 289
tion information. For AC across enterprises, Belokosztolszki 290
and Moody [36] proposed metapolicies. Hada and Kudo [37] 291
proposed XML AC Language, an XML-based language for 292
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 5
12) R−PrivateP−Ar(private_p) : PrivateP → 2R, a function354
mapping a PrivateP, private_p, to a set of roles that is355
authorized to access this PrivateP.356
13) R−PrivateP−Aprivate_p(r) : R → 2PrivateP, a function357
mapping a role r to a set of PrivatePs that allows to be358
accessed by this role.359
B. PBAC Model360
The top portion of Fig. 2 shows the PBAC model. The361
core concept of model development, elements, and relations in362
the PBAC model are introduced and defined in the following363
sections in order.364
1) Core Concept of the PBAC Model: A VE can perform365
several projects (P ) simultaneously, but a project can only366
be performed by one VE. A project includes management-367
level and operational-level tasks. The management-level tasks368
control and manage the project’s progress and output according369
to the project timestamp, whereas the operational level com-370
prises FTs supervised and controlled by the project schedule.371
Different project relations (PRs), such as subset, exclusion, and372
reference, exist among projects to facilitate resource sharing373
(refer to Section IV). Activities within a project can be divided374
into several FTs, each of which has access to certain public375
objects (PublicOs), which is public permission (PublicP) of the376
FT. FTs involved in a project are constructed for performing VE377
activities in the VE formation stage. The FTs are assigned to VE378
roles (VERs) that are virtual roles created based on division of379
labors. It is required to meet certain conditions to start or end380
an FT. According to the goal and task requirements, an FT can381
be divided into different stages by timestamp or FT. Users are382
given different privileges depending on the project stage and383
FTs. A VE is composed of several real EMs, each of which384
can participate in more than one VE. Non-EMs (NEMs) are385
enterprises that do not participate directly in the activities of386
VE but participate in the activities of an EM which performs387
directly the activities of the VE. All VE participants, including388
three user types (direct, indirect, and nonmember users), are389
generally called users (U) which may play a different role (R)390
in a different session. Each role has access to private resources,391
called a PrivateP. A superior role can inherit the privileges of392
inferior roles through role hierarchy (RH). The EM plays a VER393
through a user or role to obtain the privilege of sharing public394
resources in the VE and carry out practically the obligations of395
a given VER and to achieve the VE goals. PACP is designed396
to identify the resource sharing rules in a project. Through397
constructing relations among projects and a PACP, users can398
share resources among projects. The rules of sharing can be399
modified at any time.400
To simplify the complex assignment and facilitate resource401
sharing across domains, some relations are gained by exploring402
the three viewpoints of project, VE, and enterprise. From the403
project viewpoint, PRs including subset, version, reference,404
process, and exclusive relations (defined in Section IV) are405
found out depending on the features of project, facilitating shar-406
ing among projects. From the VE viewpoint, cooperative rela-407
tions including dependent single-task, dependent multitask, and408
independence (defined in Section V) are found out depending409
on the information requirements of interaction and cooperation410
among workers in VE, facilitating sharing among enterprises411
involved in a VE. From the enterprise viewpoint, relations 412
proposed by RBAC [39], [40], including role hierarchy, static 413
separation of duty, and dynamic separation of duty, are used 414
herein to facilitate sharing among roles in an enterprise. 415
2) Fundamental Elements: This section concisely intro- 416
duces the fundamental elements of the PBAC model, each of 417
which is represented as follows. 418
1) VE = {ve: ve represents a dynamic Internet organization 419
consisting of EMs executing a project to achieve one 420
common business goal}. 421
2) EM = {em: em can be a substantive enterprise organi- 422
zation, a VE, or an individual, and it is a VE member 423
with at least one worker participating directly in the VE 424
activities}. 425
3) NEM = {nem: nem can be a substantive enterprise or- 426
ganization, a VE, or an individual, but it is not a VE 427
member; a nem has at least one worker participating 428
directly in the activities of EMs, and the activities have 429
direct relations with the FT of the VE}. 430
4) Project (P ) = {p: p denotes the set of FTs, projects, and 431
subprojects performed by a VE}. 432
5) FT = {ft: ft is a set of VE activities, which have a 433
common objective and are undertaken by several VERs}. 434
6) VER = {ver: ver represents a virtual role formed to 435
enable professional division within VE, which is assigned 436
to perform more than one FT}. 437
7) Object (O) = {o: o denotes an information resource in- 438
cluding public and private resources which can be a data- 439
base, entity, attribute, tuple, document, XML document, 440
application, software component, or knowledge}. 441
8) PublicO = {public-o: public-o represents a subset of 442
objects owned by a VE, stored in a VE’s repository, and 443
implemented in a VE’s platform}. 444
9) Operation = {op: op is a set of access authorities, such as 445
write, read, and execute}. 446
10) PublicP = {public-p: public-p represents a permitted 447
mode of access to a PublicO}. 448
11) Permission = {x: x ∈ PublicP ∪ PrivateP}. 449
12) PACP: PACP identifies which project resources are pro- 450
tected and shared according to the relations among 451
projects and the shared rules and which activities are 452
forbidden in the VE scope. Each project involves a 453
PACP, which can be performed automatically by the 454
VEAC system. The PACP can be dynamically created, 455
enforced, and modified by administrators when the VE 456
environment changes. The main rules described in PACP 457
include the following: 1) rules of resource sharing among 458
projects, describing the resource sharing strategy and 459
relations among projects; 2) rules of resource usage in 460
a project, including constraints on VERs, FTs, PublicPs, 461
and assignments between elements; 3) rules of resource 462
sharing of various cooperation modes, identifying the 463
level of resource sharing according to the cooperation 464
mode between VERs; and 4) rules of exception handling, 465
which can be classified into rules of permitted exception 466
handling and rules of forbidden exception handling. A 467
PACP language model used to construct the PACP is 468
shown in detail in Section VI. 469
3) Assignments and Relations: The following sections de- 470
fine the concept of assignments and relations between two 471
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 7
Fig. 3. Example of subset relation.
where Project p1 involves three subprojects p11, p12, and p13,588
and project p11 is further decomposed into subprojects p111589
and p112. Owing to p13Rpsp1, PublicPs, such as public-p2 and590
public-p3, are assigned to p1 and p13 via FTs, whereas EMs,591
such as em1 and em2, are permitted to participate in ve11 and592
ve111. Two functions privilegemain−p(ft) and privilegesub−p(ft)593
are defined, respectively, in (1) and (2), shown at the bottom594
of the page, for propagating user’s privilege from the main595
project and subproject, respectively, where variables are intro-596
duced as follows. Function (1) indicates that the privileges of597
ft1i involve the PublicP and PrivateP assigned to the ft1i and598
ft2j(1 ≤ j ≤ n) when the conditions shown in the equation599
hold; otherwise, the privileges of ft1i only have the PublicP600
and PrivateP from ft1i. Due to the limited space, function (2)601
shows the propagation of user privileges from subproject, which602
is similar to function (1) and is not further introduced in detail.603
p1 is the main project of p2 that is the subproject of p1, ft1i’s604
are the FTs involved in p1, 1 ≤ i ≤ m, and ft2j’s are the FTs605
involved in p2, 1 ≤ j ≤ n. Several constraints are applied to606
use a subset relation: 1) A main project may have more than607
one subproject; 2) a subproject is only involved in one main608
project; 3) an EM may participate in the main and subprojects;609
and 4) a PublicP is only permitted to be assigned to different610
projects with subset relations.611
B. Version Relation612
Version relation (Rpv) describes a project y called a postver-613
sion project that is extended from a project x called preversion614
project and planned with reference to the preversion project.615
Therefore, the pre- and postversion projects have similar tar-616
gets, FTs, and participants. The relation helps support version-617
dependent authorizations by enabling the reuse of resources for618
a new product, thus reducing its time to market. Because the619
pre- and postversion projects have similar targets, activities, and620
participants, the postversion FT in the postversion project corre- 621
sponds to the preversion FT in the preversion project. While the 622
postversion FT is performed, the privileges owned by the pre- 623
version FT are inherited by the postversion FT using the weak 624
inheritance. The set of pairs of projects between which have 625
version relation is represented by xRpvy = {(x, y) : x, y ∈ 626
P, x = y, and x “is the preversion of” y}. Fig. 4 shows an 627
example of the version relation, which demonstrates that project 628
p1 is the preversion of project p2. Project p1 for developing 629
a car engine consists of FTs ft11 and ft12, whereas p2 for 630
developing a new engine based on the engine developed by p1 631
comprises ft21, ft22, and ft23. FTs ft11 (requirement analysis) 632
and ft12 (conceptual design) correspond to ft21 (requirement 633
analysis) and ft22 (conceptual design), respectively, whereas 634
ft23 (primary design) is created for another task, which is not 635
extended from p1. Therefore, while the ft21 performed, workers 636
must refer significantly to information owned by ft11. Due to 637
p1Rpvp2, each FT in project p2 is performed by VERs, which 638
are allowed to refer to PublicPs of corresponding FTs in p1 639
if the attribute allowed reference of corresponding FT is true. 640
As shown in Fig. 4, a user u1 is assigned to perform the ft21 641
through (u1, r1), (r1, ver21), and (ver21, ft21); in addition to 642
the public-p21 and public-p22, u1 may refer to the public-p11, 643
public-p12, and public-p13. Function (3) shown at the bottom 644
of the next page is presented to indicate that the privileges of 645
ft2j involve the PublicP and PrivateP assigned to the ft2j , and 646
partial PublicPs of the corresponded FT ft1i of ft2j through the 647
use of weak inheritance function when the conditions shown 648
in the function hold; otherwise, the privileges of ft2j only 649
have the PublicP and PrivateP from ft2j . p1 is the preversion 650
project of p2 that is the postversion project of p1, ft1i’s are the 651
FTs involved in p1, and ft2j’s corresponding to ft1i’s are the 652
FTs involved in p2. Several constraints are applied when using 653
the version relation to support resource sharing between two 654
projects: 1) A postversion project has less than one preversion 655
privilegemain−p(ft1i) =
{
FT−Permission−A(ft1i) ∪ FT−Permission−A(ft2j) if ∃ p1Rpsp2 ∧Amain−p of ft2j = “true”
FT−Permission−A(ft1i) otherwise (1)
privilegesub−p(ft2j) =
{
FT−Permission−A(ft2j) ∪ FT−Permission−A(ft1i) if ∃ p1Rpsp2 ∧Asub−p of ft1i = “true”
FT−Permission−A(ft2j) otherwise (2)
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 9
Fig. 5. Example of reference relation.
triggered and performed, user u1 obtains authorizations public-706
p11, public-p12, and public-p13 from ft11, and authorizations707
public-p21 and public-p22 from ft21.708
Function (4) shown at the bottom of the page, showing709
the propagation of user privilege by using process relation, is710
presented to indicate that the privileges of ftaction involve the711
PublicP and PrivateP assigned to the ftaction and also partial712
permissions of the event FT ftevent of the ftaction through the713
use of the weak inheritance function when the conditions shown714
in the function hold; otherwise, the privileges of ftaction only715
have the PublicP and PrivateP from ftaction. p1 is the action716
project of p2 that is the event project of p1, ftaction is the action717
FT included in p1, and ftevent is the event FT included in p2.718
Using the process relation must obey the following constraints:719
1) A process relation exists between two projects which must720
have the subset relation; 2) an event project may trigger more721
than one action project simultaneously; 3) an event FT may722
trigger more than one action FT simultaneously; and 4) an723
action project may be triggered if all of its event projects are724
accomplished.725
E. Exclusive Relation726
Exclusive relation (Rpe) identifies mutual conflict between727
two projects, signifying that the resources of the two projects728
cannot refer to each other. The exclusive relation is default.729
That is, two projects are preset as exclusive relation if no other730
relation exists between them. The set of pairs of projects that731
conflict with each other is represented by xRpey = {(x, y) :732
x, y ∈ P, x = y, x “conflicts with" y, and (¬∃ xRpry) ∧733
(¬∃ yRprx)}. If two projects are exclusive, then all users, EMs,734
FTs, and permissions in a project are exclusive with the other735
project. That is, an enterprise is disallowed from participating736
simultaneously in two projects with exclusive relation; attempts737
by users of the exclusive projects to use the same resources are 738
rejected. Using the process relation must obey the following 739
constraints: 1) A project may conflict with more than one simul- 740
taneously; 2) a PublicP may not be assigned to two exclusive 741
projects; and 3) an EM is not allowed to be assigned to two 742
mutual exclusive projects. 743
V. COOPERATION MODES AMONG TWO VERS 744
This section introduces three cooperation modes among 745
VERs based on the resource sharing requirements of collabo- 746
rative operations in the VE. 747
Cooperation mode (Rc) describes interactions among VERs 748
according to the dependent level of their duties. Given a set 749
VER, x and y ∈ VER, a binary relation cooperation relation 750
(Rc) on VER is a subset of VER×VER, which is distinguished 751
into three cooperation relations. For convenience in the follow- 752
ing discussion, two items are first defined in terms of authority 753
inheritance. A VER in cooperative mode can inherit strongly or 754
weakly the privileges from the other VER. Strong inheritance 755
means that the privilege of a VER can be fully inherited by the 756
other VER, whereas weak inheritance means that the privilege 757
can only be partially inherited, such as only inheriting read 758
privilege. 759
1) Dependent single-task mode (Rcds) is the most seamless 760
cooperative relationship between two VERs, working to- 761
gether to perform FTs, that have dependencies and share 762
resources with each other. The two VERs’ permissions 763
are inherited from each other via strong inheritance 764
(defined in Section IV). When two VERs collaboratively 765
perform different FTs, the users playing the two VERs 766
obtain the same permissions from the FTs. The set of 767
pairs of VERs with Rcds is represented by using 768
xRcdsy={(x, y) : x, y∈VER, x =y,∃(x, ft1), (y, ft1) ∈ 769
privilegeprocess(ftaction) =


FT−Permission−A(ftaction) ∪ Inherweak (FT−Permission−A(ftevent))
if ∃(p1Rprp2) ∧ (Astate of ftevent = “achieved”) ∧ (Aref of ftevent = “true”)
FT−Permission−A(ftaction) otherwise
(4)
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 11
Fig. 7. PACP language model.
business environment in a timely manner. The PACP language832
model has the following main components.833
1) PACP. A PACP consists of one VEAC policy (VEACP)834
and many enterprise AC policies (EACPs), which are sets835
of rules.836
2) VEACP, a set of rules, describes the regulation and con-837
straint on resource AC and sharing in a VE to manage the838
VE’s resource.839
3) EACP, consisting of a series of rules, describes rules and840
conditions for enterprise resource AC for each EM. Its841
rules shall not be in conflict with the VEACP it belongs842
to and must comply with the sharing rules agreed upon843
by VE so to make available resource in need of sharing.844
4) Rule element is the most basic unit of policy and corre-845
sponds to the conventional concept of authorization. The846
principal components of rule have a target, effect, condi-847
tion, and rule combining algorithm. Each rule permits or848
denies one or more subjects to performing actions on one849
or more objects under some conditions.850
5) A target element involved in a rule defines the set of851
objects, subjects, and actions to which the rule or policy852
applies.853
6) Object may be data, information, and knowledge owned854
by the VE or one of its EMs.855
7) A subject is an actor whose attributes may be referenced856
by a predicate. Actor may be a user, role, enterprise,857
or VER.858
8) An action is an operation on resource.859
9) A condition element represents additional constraints that860
further refine rule applicability.861
10) Rule combining algorithm compresses the output from862
the embraced rules. The PACP language model has four863
rule combining algorithms: deny overrides, permit over-864
rides, first applicable, and only-one-applicable. Based on865
the selected combining algorithm, an authorization deci- 866
sion can be permit, deny, not applicable, or indeterminate. 867
11) Effect is the intended consequence of a satisfied rule— 868
either Permit or Deny. 869
VII. VEAC MODEL CONSTRUCTION METHODOLOGY 870
The proposed formal VEAC model can efficiently manage 871
and share information resources in the VE life cycle. To as- 872
sist the administrators of VEs and their EMs to successfully 873
implement the proposed fundamental VEAC model and to use 874
the PACP language model appropriately for VE information 875
resource security and sharing, this section develops a VEAC 876
model construction methodology based on the five phases of 877
VE life cycle, namely, identification, formation, design, oper- 878
ation, and dissolution phases. The methodology provides the 879
security administrators of the leader and partners of VEs with a 880
systematic method for the following reasons: 1) to identify the 881
fundamental elements of VEAC model, such as P , VER, FT, 882
U , R, PublicP, and PrivateP; and 2) to establish assignments be- 883
tween elements, PRs between projects, and cooperation modes 884
between VERs. The VEAC model applied for certain VE 885
is initially planned at the formation phase, all elements and 886
assignments of the VEAC model are designed at the design 887
phase, and the constructed VEAC model is implemented at 888
the operation phase. Thus, information resources are managed 889
at the operation and dissolution phases. The goal, procedure, 890
inputs, outputs, and related method and technologies of each 891
phase of the methodology are separately introduced in the 892
following sections. 893
A. Identiﬁcation and Formation Phases 894
Fig. 8 shows the first two phases in the proposed method- 895
ology, namely, identification and formation phases, which are 896
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 13
Fig. 9. Design procedure of a VE based on the VEAC model.
(A312) Identify initial business and resource using and969
sharing regulations. From a business perspective, action A312970
identifies regulations regarding usage and sharing of resources971
to restrict the behavior of partners and specify each participa-972
tor’s responsibility and obligations. In the VE organizational973
structure model, every participator in a VE is assigned certain974
tasks, which are performed and restricted by the regulations.975
The regulations are then converted into VEACP and EACPs976
by A336.977
(A313) Design the core processes of VE and the intraenter-978
prise processes of partners. Based on the planned VE process979
at A2, a VE leader at the phase designs the core processes of980
the VE project represented by a project evaluation and review981
technique chart. The core processes are composed of many982
activities to accomplish VE’s goal. Each activity in the core983
process is assigned to certain partners to perform. Each partner984
must then spread up and perform its assigned activities and985
integrate them into its intraenterprise processes. Finally, PRs986
Rpv, Rpr, Rpp, and Rpe can be established at action A313 if987
they are needed.988
(A314) Plan schedule. According to the core VE processes989
designed by A313, the VE leader at the action negotiates and990
communicates with partners to plan the start and end times of991
each activity in the core VE and intraenterprise processes, and992
the activity prerequisites.993
(A315) Decompose activities into manageable tasks. The994
activities involved in the core VE and intraenterprise processes995
are further decomposed into tasks until every task can represent996
a manageable amount of work that can be planned, scheduled,997
and assigned. A work breakdown structure, comprising a hierar-998
chical decomposition of project, activities, and tasks, is planned999
at this point. The decomposed tasks are then further decom-1000
posed or combined into manageable tasks in terms of resource 1001
AC. The priority of every manageable task is determined from 1002
the start and end times of the original tasks, the information 1003
flow between tasks and task outputs. 1004
(A316) Estimate the activity models. An activity model is 1005
composed of some partially ordered tasks that are conducted 1006
to achieve the actions to be performed within a VE. Action 1007
A316 estimates the duration of every task and changes the 1008
baseline based on reasonable estimations. The following factors 1009
should be addressed: 1) the resources that should be used; 1010
2) the amount of time required; 3) how many people are needed; 1011
4) the skills that are necessary; and 5) the tasks that need to 1012
be completed before other tasks are started. Subprocedure 2 is 1013
executed after all tasks are estimated. 1014
2) Subprocedure A32—Estimate Usable Resources and Cre- 1015
ate a Resource Use Plan: Subprocedure A32 estimates the 1016
usable VE resources and builds a resource use plan for the entire 1017
life cycle of a VE. The plan is adopted to restrict assignments 1018
between elements and to build the PACP. 1019
(A321) Estimate usable resources and expectable outputs. 1020
The first action of this subprocedure estimates usable VE 1021
resources according to the activity models outputted by A316. 1022
These resources include public and private resources, which are 1023
supplied or shared with partners to facilitate the execution of 1024
VE tasks. In addition, the administrator has to expect possible 1025
outputs during the execution of each task and know whom the 1026
outputs will be shared with. Some shared outputs should be 1027
specified by specific data containers, which are then converted 1028
into permissions and assigned operations permitted on them 1029
at A333. 1030
(A322) Create plans for using and sharing resources. Based 1031
on the regulations created by A312, the result of A321, and 1032
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 15
TABLE I
VE−P−A AND P−VER−A LISTS
TABLE II
COMPANY LIST
in p11; hence, some elements or assignments are ignored in the1111
following tables.1112
Table I, the VE−P−A and P−VER−A lists, shows the VE1113
name, project performed by the VE, the VERs involved in the1114
VE, and the project objectives. For example, ve1 involves two1115
VERs, ver11 and ver12, and performs project p1 whose aim is1116
to develop a 2000 cc car engine with at least 140 hp.1117
Table II lists the detailed information for each company1118
participating in the four VEs.1119
Table III, the VE−EM−A list, shows all EMs in each VE;1120
for instance, the companies participating in ve11 are em1, em2,1121
and em3.1122
Table IV lists the attributes of FTs that are associated with the1123
four projects, including the number, name, allowed reference,1124
allowed subproject, and allowed main-project attributes.1125
Table V lists the P−FT−A with project names, the number1126
of FTs assigned to the projects, and the FTs involved in the1127
projects.1128
Table VI lists the executed sequence of FTs involved in the1129
two projects (p11 and p12) between which a process relation is1130
held. Consequently, when the event FT ft111 is achieved, the1131
action FT ft121 is triggered. According to the process relation1132
definition, ft121 will hierarchy all or part of the privileges1133
assigned to ft111 when ft121 is executed.1134
Table VII, FT−PublicP−A, lists each FT and PublicPs as-1135
signed to each FT.1136
Table VIII shows the VER−FT−A list, in which only VERs1137
involved in ve11 are considered and listed.1138
In the aforementioned example, ve11 (cylinder head design)1139
is used as an example to construct PACP for managing re-1140
TABLE III
VE−EM−A LIST
sources that belong to ve11, as shown in the Appendix II. 1141
With the objective of cylinder head design of a new car en- 1142
gine, this VE consists of three EMs, i.e., Company-A (em1), 1143
Company-B (em2), and Company-C (em3), responsible for oil 1144
filler cap design, cylinder head design, and stopper design, 1145
respectively. 1146
In this PACP (see Appendix II), only part of the rules in 1147
the VEACP and part of the rules in the EACP of Company-A 1148
are listed. According to VEACP rule-ve11-001, when two 1149
tasks ft111 and ft112 are being executed from May 20, 1150
2007 to October 20, 2008, all Company-A, Company-B, and 1151
Company-C personnel may read knowledge of know-what 1152
about cylinder head design, car engine, and cylinder. The EACP 1153
rule-em1-001 for Company-A dictates that, from November 20, 1154
2007 to October 20, 2008, all Company-B and Company-C 1155
personnel may read R&D knowledge related to oil filler cap 1156
design. 1157
IX. CONCLUSION AND FUTURE WORK 1158
The results and contributions of this paper are as follows. 1159
1) The formal VEAC model, including the fundamental 1160
VEAC model, PACP language model, and construction 1161
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 17
APPENDIX I
TABLE IX
LIST OF FUNCTIONS RELATED TO THE VEAC MODEL
CHEN et al.: FORMAL VIRTUAL ENTERPRISE ACCESS CONTROL MODEL 19
REFERENCES1202
[1] Y.-M. Chen and M.-W. Liang, “Design and implementation of a collabo-1203
rative engineering information system for allied concurrent engineering,”1204
Int. J. Comput. Integr. Manuf., vol. 13, no. 1, pp. 11–30, Jan. 2000.1205
[2] A. Frenkel, H. Afsarmanesh, C. Garita, and L. O. Hertzberger, “Support-1206
ing information access rights and visibility levels in virtual enterprises,”1207
in Proc. 2nd IFIP Work. Conf. Infrastructure Virtual Enterprise, 2000,1208
pp. 177–192.1209
[3] J. Ma and M. A. Orgun, “Trust management and trust theory revision,”1210
IEEE Trans. Syst., Man, Cybern. A, Syst., Humans, vol. 36, no. 3, pp. 451–1211
460, May 2006.1212
[4] Y. Lu, W. Wang, B. Bhargava, and D. Xu, “Trust-based privacy preser-1213
vation for peer-to-peer data sharing,” IEEE Trans. Syst., Man, Cybern. A,1214
Syst., Humans, vol. 36, no. 3, pp. 498–502, May 2006.1215
[5] E. Turban, D. King, D. Viehland, and J. Lee, Electronic Commerce: A1216
Managerial Perspective. Upper Saddle River, NJ: Pearson Educ. Int.,1217
2006.1218
[6] H. R. Rao and S. J. Upadhyaya, “Special issue on secure knowledge1219
management,” IEEE Trans. Syst., Man, Cybern. A, Syst., Humans, vol. 35,1220
no. 1, p. 185, Jan. 2005.1221
[7] E. Bertino, L. R. Khan, R. Sandhu, and B. Thuraisingham, “Secure1222
knowledge management: Confidentiality, trust, and privacy,” IEEE Trans.1223
Syst., Man, Cybern. A, Syst., Humans, vol. 36, no. 3, pp. 429–438,1224
May 2006.1225
[8] R. Singh and A. F. Salam, “Semantic information assurance for secure dis-1226
tributed knowledge management: A business process perspective,” IEEE1227
Trans. Syst., Man, Cybern. A, Syst., Humans, vol. 36, no. 3, pp. 472–486,1228
May 2006.1229
[9] R. Au, M. Looi, and P. Ashley, “Automated cross-organizational trust1230
establishment on extranets,” in Proc. Workshop Inf. Technol. Virtual1231
Enterprises, 2001, pp. 3–11.1232
[10] T.-Y. Chen, Y.-M. Chen, C.-B. Wang, and H.-C. Chu, “Development of an1233
access control model, system architecture and approaches for information1234
sharing in virtual enterprise,” Comput. Ind., vol. 58, no. 1, pp. 57–73,1235
Jan. 2007.1236
[11] T.-Y. Chen, Y.-M. Chen, H.-C. Chu, C.-B. Wang, and H. Yang, “Secure1237
resource sharing on cross-organization collaboration using a novel trust1238
method,” Robot. Comput.-Integr. Manuf., vol. 23, no. 4, pp. 421–435,1239
Aug. 2007.1240
[12] M. Koch, L. V. Mancini, and F. Parisi-Presicce, Graph Transforma-1241
tions for the Speciﬁcation of Access Control Policies. Amsterdam,1242
The Netherlands: Elsevier science B. V, 2002.1243
[13] D. F. Ferraiolo, D. R. Kuhn, and R. Chandramouli, Role-Based Access1244
Control. Norwood, MA: Artech House, 2003.1245
[14] S. Oh and S. Park, “Task-role-based access control model,” Inf. Syst.,1246
vol. 28, no. 6, pp. 533–562, Sep. 2003.1247
[15] A. Kern, “Advanced features for enterprise-wide role-based access con-1248
trol,” in Proc. Comput. Security Appl. Conf., 2002, pp. 333–342.1249
[16] C. J. Moon, D. H. Park, S. J. Park, and D. K. Baik, “Symmetric RBAC1250
model that takes the separation of duty and role hierarchies into consider-1251
ation,” Comput. Security, vol. 23, no. 2, pp. 126–136, Mar. 2004.1252
[17] D. Shin, G. J. Ahn, and J. S. Park, “An application of directory service1253
markup language (DSML) for role-based access control (RBAC),” in1254
Proc. Comput. Softw. Appl. Conf., 2002, pp. 934–939.1255
[18] K. Furst, T. Schmidt, and G. Wippel, “Managing access in extended1256
enterprise networks,” IEEE Internet Comput., vol. 6, no. 5, pp. 67–74,1257
Sep./Oct. 2002.1258
[19] J. Bacon, K. Moody, and W. Yao, “A model of OASIS role-based access1259
control and its support for active security,” ACM Trans. Inf. Syst. Security,1260
vol. 5, no. 4, pp. 492–540, Nov. 2002.1261
[20] F. T. Alotaiby and J. X. Chen, “A model for team-based access1262
control (TMAC),” in Proc. Inf. Technol.: Coding Comput., 2004, vol. 1,1263
pp. 450–454.1264
[21] J. J. Kanet, W. Faisst, and P. Mertens, “Application of information tech-1265
nology to a virtual enterprise broker: The case of Bill Epstein,” Int. J.1266
Prod. Econ., vol. 62, no. 1, pp. 23–32, May 1999.1267
[22] E. K. Ouzounis, “An agent-based platform for the management of dy-1268
namic virtual enterprises,” Ph.D. dissertation, Tech. Univ. Berlin, Berlin,1269
Germany, 2001.1270
[23] J. S. Park and J. Hwang, “RBAC for collaborative environments: Role-1271
based access control for collaborative enterprise in peer-to-peer com-1272
puting environments,” in Proc. 8th ACM Symp. Access Control Models1273
Technol., 2003, pp. 93–99.1274
[24] N. Mezzetti, “Towards a model for trust relationships in virtual enter-1275
prises,” in Proc. 14th Int. Workshop Database Expert Syst. Appl., 2003,1276
pp. 420–424.1277
[25] T. J. Smith and L. Ramakrishnan, “Joint policy management and auditing 1278
in virtual organizations,” in Proc. 4th Int. Workshop Grid Comput., 2003, 1279
pp. 117–124. 1280
[26] G. Steinke and R. Leamon, “Information security issues facing virtual en- 1281
terprises,” in Proc. Int. Conf. Eng. Technol. Manage., 1996, pp. 641–644. 1282
[27] H. Zhu, “Some issues of role-based collaboration,” in Proc. Can. Conf. 1283
Elect. Comput. Eng., 2003, vol. 2, pp. 687–690. 1284
[28] G. Kolaczek, “Specification and verification of constraints in role based 1285
access control,” in Proc. 12th IEEE Int. Workshops Enabling Technol.: 1286
Infrastructure Collaborative Enterprise, 2003, pp. 190–195. 1287
[29] J. Luo and D. He, “Research on object-oriented role-based access control 1288
model,” in Proc. 4th Int. Conf. Parallel Distrib. Comput., Appl. Technol., 1289
2003, pp. 132–135. 1290
[30] J. D. Moffett, “Control principles and role hierarchies,” in Proc. 3rd ACM 1291
Workshop Role-Based Access Control, 1998, pp. 63–69. 1292
[31] S. Osborn, “Integrating role graphs: A tool for security integration,” Data 1293
Knowl. Eng., vol. 43, no. 3, pp. 317–333, Dec. 2002. 1294
[32] M. Lorch, S. Proctor, R. Lepro, D. Kafura, and S. Shah, “First experiences 1295
using XACML for access control in distributed systems,” in Proc. ACM 1296
Workshop XML Security, 2003, pp. 25–37. 1297
[33] S. Barker and P. J. Stuckey, “Flexible access control policy specifica- 1298
tion with constraint logic programming,” ACM Trans. Inf. Syst. Security, 1299
vol. 6, no. 4, pp. 501–546, Nov. 2003. 1300
[34] M. Coetzee and J. H. P. Eloff, “Virtual enterprise access control require- 1301
ments,” in Proc. Annu. Res. Conf. South Afr. Inst. Comput. Scientists Inf. 1302
Technologists Enablement Through Technol., 2003, pp. 285–294. 1303
[35] S. Jajodia, P. Samarati, M. L. Sapino, and V. S. Subrahmanian, “Flexible 1304
support for multiple access control policies,” ACM Trans. Database Syst., 1305
vol. 26, no. 2, pp. 214–260, Jun. 2001. 1306
[36] A. Belokosztolszki and K. Moody, “Meta-policies for distributed role- 1307
based access control systems,” in Proc. 3rd Int. Workshop Policies Distrib. 1308
Syst. Netw., 2002, pp. 106–115. 1309
[37] S. Hada and M. Kudo, “XML document security based on provisional 1310
authorization,” in Proc. 7th ACMConf. Comput. Commun. Security, 2000, 1311
pp. 87–96. 1312
[38] G. Boella and L. van der Torre, “Security policies for sharing knowl- 1313
edge in virtual communities,” IEEE Trans. Syst., Man, Cybern. A, Syst., 1314
Humans, vol. 36, no. 3, pp. 439–450, May 2006. 1315
[39] A. Kern, A. Schaad, and J. Moffett, “Enterprise role administration: 1316
An administration concept for the enterprise role-based access control 1317
model,” in Proc. 8th ACM Symp. Access Control Models Technol., 2003, 1318
pp. 3–11. 1319
[40] R. A. Botha and J. H. P. Eloff, “Designing role hierarchies for access 1320
control in workflow systems,” in Proc. 25th Annu. Int. Comput. Softw. 1321
Appl. Conf., 2001, pp. 117–122. 1322
[41] F. Dridi, B. Muschall, and G. Pernul, “Administration of an RBAC sys- 1323
tem,” in Proc. 37th Annu. Hawaii Int. Conf. Syst. Sci., 2004, pp. 187–192. 1324
Tsung-Yi Chen received the B.S. degree from Prov- 1325
idence University, Taichung, Taiwan, R.O.C., in 1326
1996, and the M.S. and Ph.D. degrees from the Insti- 1327
tute of Manufacturing Engineering, National Cheng 1328
Kung University, Tainan, Taiwan, in 2001 and 2006, 1329
respectively. 1330
He is currently an Assistant Professor with the 1331
Department of Electronic Commerce Management, 1332
Nanhua University, Chia-Yi, Taiwan. His research 1333
interests include virtual enterprise, e-commerce and 1334
knowledge commerce, enterprise and information 1335
integration, access control, and knowledge sharing. 1336
