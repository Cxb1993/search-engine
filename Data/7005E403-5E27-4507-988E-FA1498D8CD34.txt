to develop an effective motion estimation algorithm 
for reduction the computational cost is an important 
issue.  
So far, many fast search techniques have been 
presented in the literature. The most popular 
approach is to reduce the number of search locations 
by using the assumption of uni-modal error surface 
in which the matching error decreases monotonically 
to the global optimum [1-6]. The well-known 
techniques are three-step search (TSS) [2], 2-D 
logarithmic search (2DLOG) [1], new three-step 
search (NTSS) [3] and diamond search (DS) [4], etc. 
These methods achieve a good balance between 
simplicity in implementation and quality in motion 
estimation. However, this assumption is not usually 
satisfied, thus resulting in local optimal solution and 
incurring loss in visual quality. Instead of limiting 
the number of search locations, another interesting 
approach aims at reducing computation of block 
matching with successive elimination algorithm 
(SEA) [5] or pixel decimation also called partial 
distortion algorithm (PDA) [6-11]. Although these 
approaches can be incorporated with several existing 
algorithms to reduce computation cost, it cannot 
improve the estimation accuracy and visual quality.  
The above mentioned approaches achieve 
significant computation reduction with reasonable 
loss of search accuracy. Another direction for fast 
computation exploits the motion correlation among 
the neighboring blocks in spatial and/or temporal 
directions to predict the target MV [12-14]. In recent 
years, the predictive motion vector field adaptive 
search technique (PMVFAST) is the most 
representative approach [15] because it is better 
performance than the conventional methods. 
According to our observation, each approach 
achieves different tradeoff between algorithm 
complexity, search speed and visual quality. In this 
work, we try to enhance the performance of motion 
estimation with combing the fast correlation block 
matching algorithm and the partial distortion concept. 
The PMVFAST, fast correlation block matching 
algorithm, will integrate with the proposed partial 
distortion structure.  
The paper is organized as follows. In Section II, 
we first review the motion estimation with 
PMVFAST algorithm. Section III will present the 
techniques used to improve PMVFAST based on our 
proposed the partial distortion structure in detail. The 
experimental results and comparisons are presented 
in Section IV. Concluding remarks are given in 
Section V. 
2. REVIEW OF PMVFAST  
The PMVFAST is a modification version of 
MVFAST, and introduced in [15]. The algorithm 
improves the calculation speed and achieves very 
close PSNR to FS algorithm. The PMVFAST mainly 
relies upon effective prediction techniques and early 
termination criteria. We summarize the PMVFAST 
algorithm as following steps: 
Step 1: According to the motion vector of the three 
spatial adjacent blocks including left (A), top 
(B), and top-right (D), the median predictor 
finds out the initial motion vector. 
 ),,(Median DBA MVMVMVMV = ;  
Step 2: The search pattern, large diamond search 
pattern (LDSP), is decided according to the 
magnitude of median value from Step 1. If 
the Decision #1 is satisfied, then go to Step 3. 
Otherwise, the position of )0,0(  as the 
center finds out the motion vector of the 
current block with the LDSP. 
Step 3: Calculate the SAD between the current block 
and the block with prediction motion vector. 
If the Decision #2 is satisfied, then stop. 
Otherwise, go to Step 4. 
some parts in the block. In this paper, we use the 
block size 1616×  and then the block is divided 
into 44×  of 16 subblocks for the selected pixels 
which the sampling distribution are the uniform 
distributed in the block. In the sampling pattern, we 
define that the sampling points instead of original 16 
pixels in the subblock. 
For the most representative selected pixels in 
the subblock, the distance between selected pixels 
must is considered. In other words, if the distance 
between selected pixels is closer, the relationships 
between selected pixels have high correlation as 
depicted in Fig. 3. So to limit the selected distance is 
1, and at least one pixel for the 4×4 subblock is 
selected. The defined basic equidistant subsampling 
pattern is shown in Fig. 3, in which the black grid is 
the selected pixel.  
Fig. 3(a) is a fixing 4:1 pixel subsampling 
which the shortest distance is 1 and the longest 
distance is 2 , and Fig. 3(b) is an equidistant 4:1 
pixel subsampling which the distance is just only 1. 
From the viewpoint of distance, Fig. 3(b) is more 
representative pixel subsampling than Fig. 3(a). In 
fact, we can obviously find out that at even column 
or at odd row do not have a selected pixel as shown 
in Fig. 3(a), and any column or any row at least has a 
selected pixel as shown Fig. 3(b). The selected pixels 
of subsampling patter in block matching must be 
computed. Using the fixing 4:1 pixel subsampling, 
the high activity in the luminance signal in the block 
might possibly occur the greater error because of the 
effect of distortion accumulation. Both Fig. 3(b) and 
Fig. 4(a) is complementary pattern, the combination 
of two figures produce an equidistant 2:1 pixel 
subsampling pattern as shown in Fig. 4(b). 
We have used block size of 44×  as an 
example for the description of the equidistant 
subsampling pattern, however, the extension of the 
subsampling patterns to a large block size, say 
1616× , is straightforward. Expanding the 
subsampling patterns of Fig. 3(a) and Fig. 3(b) into a 
1616×  block, we can obtain Fig. 5(b) and Fig. 6(b), 
respectively. For a factor 8:1 subsampling, we must 
consider that a 44×  subblock to degrade 
subsampling. The degraded subsampling in 1616×  
block relies on 44×  subblock as shown in Fig 3(b), 
which the black grid is the selected sampling unit. 
The selected sampling units in 44×  subblock 
employ the subsampling pattern on expanding to 
1616×  block. In contrast, the unselected sampling 
unit is not to sample in 1616×  block as shown in 
Fig 5(c) and Fig 6(c). Therefore, we can obtain three 
different types of sampling methods: (1) a factor 2:1 
subsampling pattern, 128 pixels, (2) a factor 4:1 
subsampling pattern, 64 pixels, and (3) a factor 8:1 
subsampling pattern, 32 pixels as shown in Fig. 5 
and Fig. 6.  
B. modified PMVFAST searching scheme 
In this section, we first introduce an effective 
subsampling structure based on the concept of partial 
distortion, and then modified the PMVFAST 
searching scheme for the estimation of motion vector 
is described. In the PMVFAST algorithm as shown in 
Fig. 1, the great effect upon the whole performance 
includes the four main factors: (1) Decision #1, (2) 
Decision #2, (3) Decision #3, and (4) SDSP. We will 
propose a new strategy to improve the four factors. 
1. Decision #1 
In PMVFAST, the searching pattern includes 
two types: large diamond search pattern (LDSP) or 
small diamond search pattern (SDSP). Decision #1 
must determent what search pattern should be used. 
The judged condition of Decision #1 is based on the 
is equal to the searching start point, then go 
to step 2, otherwise go to step 3. 
Step 2: Calculate the SAD of four adjacent positions: 
)1,1( −− ji , )1,1( −+ ji , )1,1( +− ji , and 
)1,1( ++ ji . If the position ),( yx  of the 
minimum SAD is still equal to the searching 
start point ),( ji , then terminate searching 
and the optimal MV is obtained. Otherwise, 
go to step 3. 
Step 3: The minimum SAD of position ),( ji  is a 
new start point, and the searching pattern use 
the SDSP. When the position ),( nm  satisfy 
the termination condition, then further 
calculate the SAD of the four adjacent 
positions, )1,1( −− nm , )1,1( −+ nm , 
)1,1( +− nm , and )1,1( ++ nm , and then 
the position of minimum SAD is the optimal 
MV. 
4. EXPERIMENTAL RESULTS 
Several image sequences including "Akiyo", 
"Bream", "Flower Garden" and "Foreman" are 
evaluated to compare the performances and speed-up 
of different motion estimation algorithms. Among 
them, “Akiyo” and “Bream” sequences format are in 
the CIF. “Flower Garden” sequences format size is in 
the QSIF, and “Foreman” sequences format size is 
QCIF. The first sequences are typical 
videoconference situations. The last three sequences 
contain more complex motion such as rotation, and 
covered/uncovered background. The 100 successive 
frames of each sequence are used in simulation. The 
size of the image block is 16×16 and the search 
window is set to 31×31 pixels (i.e., 15±=W ).  
Four different algorithms included (1) full 
search (FS) and (2) new three-step search (NTSS) 
with different subsampling patterns are compared. 
The different sampling patterns include the fixing 
subsampling patterns and the equidistant 
subsampling patterns. The fixing subsampling 
pattern included a factor 2:1 as shown in Fig. 5(a), a 
factor 4:1 as shown in Fig. 5(b), and a factor 8:1 as 
shown in Fig. 5(c) label “F2”, “F4”, and “F8”, 
respectively. The equidistant subsampling patterns 
included a factor 2:1 as shown in Fig. 6(a), a factor 
4:1 as shown Fig. 6(b), and a factor 8:1 as shown Fig. 
6(c) label “P2”, “P4”, and “P8”, respectively. In 
addition, the full-pixel grid is set for all BMA’s 
concerned and label “Full”. 
In our experiment, the experiment results are 
divided into two parts: (1) compare different pixel 
subsampling patterns with different searching 
algorithms, (2) compare the modified PMVFAST 
searching scheme with other fast algorithms. 
Table I presents experimental results of the 
comparison of the average PSNRs and speed up for 
various algorithms with difference subsampling 
patterns. It indicates that using the equidistant 
subsampling patterns perform better than the fixing 
subsampling patterns with various searching 
algorithm. Although using the equidistant 
subsampling patterns, the PSNR is less than the 
compared algorithms with the fixing subsampling 
patterns by average 0.12 dB, but the speed up save 
average 32%. So it is very useful to reduce the 
amount of computation time when combine the 
proposed subsampling patterns with PMVFAST 
algorithm. 
In the modified PMVFAST searching schema, 
the average PSNR and speed up comparisons of FS, 
TSS, NTSS, and PMVFAST are shown in Table II. 
By comparing the performance of video quality and 
speed with PMVFAST, the average PSNR of the 
proposed algorithm using the factor 2:1 subsampling 
pattern is increased about 0.03 dB but the 
computational time only increase about 15%. The 
[11] K. Lengwehasatit and A. Ortega, “Probabilistic 
partial-distance fast matching algorithms for 
motion estimation.” IEEE Transactions on 
Circuits for Video Technology, vol. 11, no. 2, 
Feb 2001.  
[12] J. Chalidabhongse and C.-C. Jay Kuo, “Fast 
motion vector estimation using 
multiresolution–spatio-temporal correlations,” 
IEEE Trans. On Circuits and Systems for Video 
Technology, vol. 7, no. 3, pp. 477-488, June. 
1997. 
[13] F. Kossentini, Y.W. Lee, Mark J. T. Smith, and 
Rabab K. Ward, “Predictive RD optimized 
motion estimation for very low bit-rat video 
coding”, IEEE Journal on Selected Areas in 
Communications, vol. 15,no. 9,Dec  1997. 
[14] A. Chimienti, C. Ferraris, and D. Pau, “A 
complexity-bounded motion estimation 
algorithm”, IEEE Trans. Image Processing, vol. 
11, no. 4, April 2002. 
[15] A.M. Tourapis, O.C. Au, and M.L. Liou, 
“Predictive Motion Vector Field Adaptive 
Search Technique (PMVFAST) - Enhancing 
Block Based Motion Estimation", in 
proceedings of Visual Communications and 
Image Processing 2001 (VCIP-2001), San Jose, 
CA, January 2001. 
[16] K.K. Ma and P.I. Hosur, “Performance Report 
of Motion Vector Field Adaptive Search 
Technique (MVFAST),” in ISO/IEC 
JTC1/SC29/WG11, MPEG99/m5851, 
Noordwijkerhout, NL, Mar’00. 
 
 
Fig. 1: The flow chart of PMVFAST. 
 
