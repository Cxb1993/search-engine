行政院國家科學委員會專題研究計畫成果報告 
 
微分方程為基的基因調控網之研究 
A study of gene regulatory network based on differential equations 
 
計畫編號：NSC 94-2213-E-366-013 
執行期限：94 年 8 月 1 日至 95 年 10 月 31 日 
主持人：董信煌   樹德科技大學資管系 
摘要: 基因調控網是一個反向工程問題，主要原因是我們必須在有限的基因表現實驗資料中去反推一個
可以解釋生物反應過程的動態機制。之前的研究大部份是使用 S-system 為反應模型及演化式計算來尋
找網路結構，本研究使用一個生態學常用的系統 - 掠奪者與受掠者系統來描述基因調控的動態機制。
在給定一組掠奪者與受掠者微分方程係數之下，我們使用四階的 Runge-Kutta 方法來求得數值解，而此
數值解與真實實驗值的差距將被用來評估此組係數的適性值，粒子群優演算法則被用來指引最佳係數
的搜尋。我們使用合成資料及真實的 E. Coli SOS DNA 修護網資料來展示此方法的可行性。 
 
關鍵字: 基因調控網、反向工程、系統生物學、粒子群優演算法 
Abstract: Genetic network modeling is an inverse problem in the sense that given limited amount of 
experimental data of gene expressions, a dynamic model is sought to describe the data for possible 
interpretation of a biological process. Most previous studies use S-System to provide the dynamic and 
evolutionary computation to find a network structure. In this study, a well-known ecological system, the 
predator-prey differential system, is used to meet the challenge. A fourth order Runge-Kutta algorithm is 
employed to solve a predator-prey system of ordinary differential equations, given coefficients of the system. 
Deviations between numerically computed solutions and the given data are used to assess the fitness of these 
coefficients. A particle swarm optimization technique is used to find proper coefficients efficiently. Synthetic 
data and real data from E. Coli SOS DNA repair network are used to demonstrate the feasibility of the proposed 
method. 
Keywords: Genetic network modeling, reverse engineering, system biology, particle swarm optimization 
1   Introduction 
In the post-genome era, researchers in molecular biology have transferred their focus from single biological 
object to multiple objects and interactions among these objects. This has created a field called system biology. 
Due to technological advancement in the microchip filed, researchers are able to study interesting phenomenon 
of thousands of genes or proteins at the same time.  
1.1   System Biology 
System biology is the right level to study the cell as a whole. The central dogma of molecular biology says that 
DNA is transcribed to RNA, which is translated to functional proteins. A cell is a big chemical factory that 
manufactures various types of proteins to keep the cell alive and biologically functional. Proteins may act 
together to provide energy to a body or to protect a cell from the attack of viruses. Knowing how protein-
protein interacts provides valuable information to drug discovery. In addition, specific proteins may bind to the 
promoter region of a gene to activate or repress the expression level of the gene. Faulty cells normally have 
abnormal expressions of certain genes to proteins, which incorrectly activate or repress the expressions of vital 
genes. In system biology, it is a major issue to understand how genes regulate each other in a specific biological 
environment. 
resources, the population of these species grows and shrinks dynamically according to a Predator-Prey System 
(PPS). We assume that the effect of a species on itself is linear and the effect from a different species is 
proportional to the encounter frequency between them. The encounter frequency is measured by the product of 
population of these two species. Using the above assumption, a PPS is given as follows [3]: 
 
CjXLLX
dt
dX
jk
kjkjjj
j ,,1,)( K=∑+=
≠
 .                 (2) 
 
This PPS is easier to solve computationally than an S-system. The interpretation is also simpler. Since genes 
operate in a cell environment with restricted resources, they work in a situation similar to the predator and prey 
ecological environment. With the  denoting the expression profile of the j-th gene, when a coefficient  is 
positive (negative), we will say that the k-th gene activates (represses) the j-th gene.  
jX jkL
2.2   Numerical Solutions 
A fourth order Runge-Kutta (RK4) algorithm is used to solve a PPS, given the coefficients  of the system 
[10]. Let F
jkLr
 denote the velocity vector on the right hand side of equation (2) and with mesh size h, the RK4 
algorithm advances the expression profile from time spot t to time spot t + h as follows: 
6/)22()()(
)3)((
)*5.0)((
)*5.0)((
))((
4321
4
23
12
1
kkkktXhtX
ktXFhk
ktXFhk
ktXFhk
tXFhk
rrrrrr
rrrr
rrrr
rrrr
rrr
++++=+
+=
+=
+=
=
 
(3) 
2.3   Particle Swarm Intelligence 
Particle Swarm Optimization (PSO) is a swarm intelligence optimization algorithm proposed by Kennedy and 
Eberhart [2, 4] in 1995. The main inspiration for PSO was the social behavior of swarms and fish schools. 
Nowadays, the PSO technique has proved to be a competitor in the field of numerical optimization. PSO is a 
population-based algorithm. The population is called a swarm and the individuals are called particles. Each 
particle moves with an adaptable velocity within the search space, and remembers the best position it ever 
encountered. 
Assume an n-dimensional search space (S), and a swarm consisting of N particles. The i-th particle is an n-
dimensional vector SppP inii ∈= ),...,( 1
r
. The velocity of this particle is also an n-dimensional vector 
),...,( 1 inii vvV =
r
. The best previous position encountered by the i-th particle is denoted as iI
r
. In addition, let G
r
 
be a particle that attained the best previous position among all the individuals of the swarm. The swarm updates 
its velocity and position according to the following equations: 
 
))()(())()(()()1( 2211 gPgGrcgPgIrcgVwgV iiiii
rrrrrr −+−+=+         (4) 
)1()()1( ++=+ gVgPgP iii
rrr
 
where i = 1,2,…,N is the particle’s index, g = 1,2,…, indicates the iterations, w is a parameter called the inertia 
weight, c1 and c2 are positive constants, referred to as cognitive and social parameters, and r1 and r2 are random 
numbers, uniformly distribution within the interval [0,1]. 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
gene 1
gene 2
gene 3
gene 4
gene 5
 
Fig. 1: Time course derived with the exact network coefficients 
 
The reason to use two time courses to guide a PSO search is: one time course will generally bias the 
network coefficients search specifically towards that time course. Using multiple time courses derived from the 
same network structure may prevent the search from being stuck at a local extreme point. After 5 independent 
runs of PSO, the run with the best fitness value is retrieved and its best fit particle analyzed. Each particle has 
25 components to denote the network coefficients. Each generation has 500 particles in a swarm, and the swarm 
evolves 500 generations in a run. The global best neighbor architecture is assumed for the social effect of the 
swarm [2, 4]. 
A root mean variance of equation (6) was computed using the best particle and each coefficient was divided 
by this value to determine its significance. In order to have at least one non-zero number in each row and in 
each column, a cut-off value of 0.8 was determined. Any coefficient with its absolute ratio to the root mean 
variance smaller than 0.8 was trimmed. After setting these network coefficients equal to zero, the second stage 
PSO search kicks in. This time, the penalty term in equation (5) is not counted towards the fitness evaluation. 
We conducted 10 independent runs of PSO with the swarm environment as above. The best particle in the run 
with the best fitness value is designated the final solution to the search problem. Coefficients for this final 
solution are retrieved and listed in equation (8). 
 
⎟⎟
⎟⎟
⎟⎟
⎠
⎞
⎜⎜
⎜⎜
⎜⎜
⎝
⎛
−
−
−
=
0.00.00.30.00.0
9.00.09.10.00.0
0.00.00.00.10.0
0.00.00.00.00.2
7.16.10.00.00.0
)( jkL
)
                  (8) 
 
The time course using this estimated network coefficients and the first set of initial data was solved by the 
RK4 algorithm and plotted in Fig. 2. It can be seen that this time course mimics the one using the exact network 
coefficients. 
 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
0
0.1
5 0.3 0.4
5 0.6 0.7
5 0.9 1.0
5 1.2 1.3
5 1.5 1.6
5 1.8 1.9
5
gene 1
gene 2
gene 3
gene 4
gene 5
 
Fig. 2: Time course derived with the estimated coefficients 
 
The estimated coefficients are similar to the original coefficients in places where they share the same 
cancers included involve an abnormal expression of certain genes. The abnormal expression causes irregular 
expressions of other genes that are vital to sustain the life of a cell. 
New technology from microchip field allows us to measure expressions of many genes simultaneously. 
Experimental microarray data have been collected during the development of a specific biological process. 
These data become a time course waiting to be interpreted by biologists and bioinformatics researchers. Many 
mathematical models have been proposed to interpret a genetic network. 
In this study, we propose a differential equations type model to interpret time courses of gene expressions. The 
system is based on a well-known system in ecology, the predator-prey system. A PPS is easy to compute since 
there is no exponentiation operation as an S-system has. A PPS also has the power to describe the encounter 
effect between two genes by using a product term. We tested the proposed model with a lately developed search 
algorithm in artificial intelligence, the particle swarm intelligence algorithm. There are no complex genetic 
operators to perform in PSO, thus the performance speed is fast. 
Two data sets, one synthetic set and one real set from the E. Coli SOS DNA repair network, have been used 
to demonstrate the feasibility of the proposed modeling and search algorithm It was found that PSO has 
successfully recovered parts of the network structure, and PPS was able to describe some features of a well-
known genetic network. As an inverse problem, the gene regulatory modeling is an ill-posed problem. Any 
small perturbation in the experimental data may lead to catastrophic results in the search of the original network 
structure. Thus, it pays to design a more stable fitness evaluation and a more robust search algorithm to guide 
the search for the correct network structure in the future.  
References 
1. D’haeseleer, P., Liang, S., Somogyi, R.: Genetic network inference: from co-expression clustering to reverse engineering. 
Bioinformatics 16 (2000) 707-726 
2. Eberhart, R., Shi, Y., Kennedy, J.: Swarm intelligence. Morgan Kaufman (2001) 
3. Hirsch, M., Smale, S.: differential equations, dynamical systems, and linear algebra. Academic Press (1974) 
4. Kennedy, J., Eberhart, R.C.:, Particle swarm optimization. Proceedings of the 1995 IEEE International Conference on 
Neural Networks, vol. 4 (1995) 1942–1948 
5. Kikuchi, S., Tominaga, D., Arita, M., Takahashi, K., Tomita, M.: Dynamic modeling of genetic networks using genetic 
algorithm and S-system. Bioinformatics, 19 (2003) 643-650 
6. Matsuno, H., Doi, A., Nagasaki, M., Miyano, S.: Hybrid Petri net representation of gene regulatory network. Proceedings 
of pacific symposium on biocomputing (2000) 341-352 
7. Mauricio, R.: Can ecology help genomics: the genome as ecosystem? Genetica 123 (2005) 205-209 
8. Noman, N., Iba, H.: Revere engineering genetic networks using evolutionary computation. Genome informatics, 16 (2005) 
205-214 
9. Perrin, B., Ralaivola, L., Mazurie, A., Bottani, S., Maller, J., d’Alche-Buc, F.: Gene networks inference using dynamic 
Bayesian networks. Bioinformatics, 19 (2003) ii138-ii148 
10. Press, W., Flannery, B., Teukolsky, S., Vetterling, W.: Runge-Kutta method and adaptive step size control for Runge-
Kutta, in Numerical recipes in Fortran: The art of scientific computing, 2nd ed. Cambridge, England, Cambridge 
University Press (1992) 
11. Tobin, F., Damian-Iordache, V., Greller, L.: Towards the reconstruction of gene regulatory networks. Proceedings of the 
1999 international conference on modelling and simulation of microsystems (1999) 49-53 
12. Veflingstad, S., Almeida, J., Voit, E.: Priming nonlinear searches for pathway identification. Theoretical biology and 
medical modelling 1:8 (2004) 1-14 
 
 
