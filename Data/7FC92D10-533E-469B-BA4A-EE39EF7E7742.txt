verification. 
一、 相關理論背景 
由於本文中，將會針對傳統簽章驗證
與整批簽章驗證做一比較，所以在此先分
別介紹傳統的簽章驗證方法─ DSA [1]，
與以 DSA 為基礎的整批簽章驗證方法─ 
Naccache [2]，此方法係由 Naccache 等人
所提出。 
1. 數位簽章演算法  (Digital Signature 
Algorithm, DSA) 
DSA 是結合了 Schnorr [3, 4] 與 
ElGamal [5, 6] 簽章演算法的變形，下面
定義了 DSA 所使用到的一些參數： 
p：長度為 512 位元到 1024 位元之間
的質數，且其位元串長度為 64 倍數。 
q：q 為 p – 1 的質因數且其位元串長
度為 160 位元。 
g：h 為小於 p – 1 的數值，g的數值
為 h(p–1)/q mod p，且必須大於 1。 
x：x 為一個小於 q 的數值，當作簽署
者的秘密金鑰。 
y：y 的數值為 gx mod p，當作簽署者
的公開金鑰。 
H(·)：雜湊函數演算法。 
m：待簽署的訊息。 
<簽署程序> 
步驟 1：簽署者產生一個小於 q的亂數，k。 
步驟 2：簽署者利用下列兩個方程式產生
簽章， 
 
qpgr k mod)mod(=      (1) 
qxrmHks mod)))((( 1 += −    (2) 
 
則 r，s 為訊息 m 的簽章對，接著將
簽章對傳送給驗證者。 
<驗證程序> 
 驗證者將所收到的簽章對 r、s，利
用下列方程式來做驗證， 
 
qsw mod1−=       (3) 
qwmHu mod)*)((1 =     (4) 
qrwu mod)(2 =      (5) 
qpygv uu mod)mod)(( 21=    (6) 
 
 假若等式 v = r 成立，則此簽章對通
過驗證。 
2. Naccache 整批簽章驗證方法 
Naccache 等人所提的整批簽章驗證方
法是以 DSA 為基礎，接著先簡介一些此
方法所使用到的參數，再介紹其簽署程序
與驗證程序： 
 p：大質數。 
 q：p – 1 的質因數。 
 g：於 GF(p)中一個序 q 的元素。 
 x：簽署者的秘密金鑰。 
 y：簽署者的公開金鑰，且 y = gx 
mod p。 
 ki：一群小於 q 的亂數，i = 1, 2,…, t。 
<簽署程序> 
 簽署者準備 t個等候簽署的訊息 m1, 
m2,…, mt，以及定義好的參數來產生 t 個
簽章對 (r1, s1), (r2, s2), ……, (rt, st)。這些
簽章對 (ri, si) 是以下面兩個方程式所產
生的， 
 
均通過驗證，所有 σi 的數值均為零，則
代表沒有錯誤簽章的存在，我們可以說此
次整批驗證程序中沒有錯誤發生。 
 
舉例： 
 首先我們假設有七個驗證實體需要
驗證，分別是(x1, y1), (x2, y2), ……, (x7, 
y7)，接著我們將定義一個檢驗矩陣，如下
所示 
 
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
1010101
1100110
1111000
 
 
接著我們依序對下列三個整批驗證
的子實體進行整批簽章驗證，分別為 
 
x1 = {(x4, y4), (x5, y5), (x6, y6), (x7, y7)} 
x2 = {(x2, y2), (x3, y3), (x6, y6), (x7, y7)} 
x3 = {(x1, y1), (x3, y3), (x5, y5), (x7, y7)} 
 
在三個子實體進行整批簽章驗證的過程
中，GT(x1, 4)，GT(x2, 4)，GT(x3, 4)，只要
其中一次整批簽章驗證未能驗證通過，就
停止程序。根據所提的檢驗矩陣方法，可
以將之視為確定性整批簽章驗證方法。 
2. 電子投票系統 
前一章節所講述的為本電子投票系
統所使用的核心理論，我們將會依照前述
概念來建置一個電子投票系統，將使用者
的投票訊息進行簽署後傳送給投票驗證
中心，由投票驗證中心以整批式方法進行
驗證工作，以確保所有經簽署過的投票訊
息為真。一旦投票驗證中心在接收到一整
批傳送過來的簽章後，偵測到任何錯誤的
情形發生時，投票驗證中心便會將此批簽
章視為作假並棄之不理。 
2.1 電子投票系統環境 
從圖 1、2 顯示了我們所將要建置的
電子投票系統是由主從式網路為主要環
境，一部電子投票中心的驗證伺服器可以
同時接受多個客戶端的接入，以平行方式
進行整批簽章驗證的驗證工作。 
E-Voting 
Server
E-Voting 
ClientsSignature  
圖 1、主從式網路–同時接受多批簽章 
 圖 3、電子投票系統內部元件示意圖 
2.3 電子投票系統之整批簽章簽署與
驗證流程 
經過整個系統架構與元件的說明
後，我們將就客戶端與伺服端分別進行流
程的說明：首先，客戶端將投票功能開
啟，並且將網路連線啟用，使其能連線至
伺服端，而使用者則接著進行投票圈選的
動作，每當一次投票圈選的動作確認後，
客戶端會將此筆投票訊息簽署成簽章並
且收集在簽章向量中，簽章向量可收納任
意數量的簽章進而形成一整批的簽章，等
候使用者將簽章向量裡的整批簽章傳送
至伺服端。圖 4為客戶端主要執行流程： 
 圖 6、電子投票系統客戶端使用者操作介面 
客戶端使用者操作介面： 
 圖 6 中，使用者將客戶端投票功能啟
用後，可針對票選標的物進行圈選並確認
的動作，此舉將會對投票訊息進行簽署並
加入簽章向量中，留待使用者將之傳送給
伺服端，若此時伺服端並未上線，客戶端
則會顯示出無法連接的訊息，並且將本欲
傳送的整批簽章保留下來，等候下次傳
送；否則將整批簽章傳送到伺服端，並顯
示出傳送成功訊息於訊息列上，並且將簽
章向量中留存的所有簽章全數清空，隨後
程式會等候使用者再次啟用投票功能，重
新下次投票的程序。
伺服端使用者操作介面： 
 伺服端同樣必須先將網路連線功能
啟用，然後等候客戶端的連入，當客戶端
連入並傳送整批簽章後，伺服端會將此整
批簽章經過處理，再送交給相對應於客戶
端的執行緒，由執行緒接手真正的整批簽
簽章簽署時間比較
0
20
40
60
80
100
120
2^9 2^10 2^11 2^12 2^13
數量
時
間
(秒
)
傳統簽章方法 DSA
本整批簽章架構套用 Naccache 方法
 
圖 8、簽章簽署時間 
由圖 8中，我們可以看到的是：傳統
簽章架構與所提整批簽章架構由於其根
基理論與運算方式相類似，而且均為單筆
簽署，因此其簽署運算所耗費的時間相當
接近。接下來，我們將對這兩者的簽章驗
證時間進行實驗數據的檢測與分析。 
 
由於兩者的驗證方式不同，所以我們
簽章驗證時間比較
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
2^9 2^10 2^11 2^12 2^13
數量
時
間
(秒
)
傳統簽章方法 DSA
本整批簽章架構套用 Naccache 方法
 
圖 9、簽章驗證時間 
將針對驗證時間成本作進一步地分析，根
據實際實驗數據顯示，所提整批簽章所需
驗證時間在簽章個數較少時，會需要比傳
統簽章較少的驗證時間，一旦簽章數量超
過某個特定數值之後，整批簽章驗證反呈
現出比傳統簽章驗證還差的效能，基於實
際層面的考量，推測此現象與系統環境本
身的資源取用限制有關，相同數量的簽
章，傳統簽章驗證是以多個單筆驗證的程
序執行，而整批簽章驗證則是將所有簽章
交由單一整批簽章驗證程序處理，由於系
統採分時多工作業，正因為此資源取用的
限制，造成整批簽章的驗證時間出現效能
不佳的現象；就理論面而言，整批簽章驗
證的效能會比傳統簽章驗證要來得高，但
成長，這點確保了當簽章數量增長時，仍
會保持著比傳統簽章還好的時間效益。 
簽章驗證時間比較
0
50
100
150
200
250
2^9 2^10 2^11 2^12 2^13
數量
時
間
(秒
)
傳統簽章方法 DSA
本整批簽章架構套用 Naccache 方法
 
圖 11、修改後之簽章驗證時間 
四、自我評鑑 
由於整批簽章在實用性與效能性的
考量之下，我們採用了 Lin 方法架構為我
們實作的對象，並將之應用在我們的電子
投票網路系統上。在本文中，除了簡介 Lin
方法架構之外，我們並將欲實作的電子投
票網路系統的系統架構、元件功能與系統
流程作一簡要敘述，並且提供了系統實作
的主要使用者操作介面，以顯示此系統實
用的功能性。最後，提出了相關的實驗數
據以供參考，由實驗數據上，我們可以發
現本系統於實作上的實際難處所在，並提
供了解決方案，從接續的實驗數據更可以
發現解決方案的有效性。於是，本文提供
了一個基於整批簽章驗證方法的有效電
子投票網路系統。 
參考文獻 
[1] Proposed Federal Information Processing 
Standard for Digital Signature Standard, 
Federal Register 56 (169 ) (1991) 
42980-42982. 
[2] D. Naccache, D. M＇Raihi, D. Rapheali, 
and S. Vandenay: “Can DSA be 
Improved: Complexity Trade-offs with the 
Digital Signature Standard,＂ Proceedings 
of Advances in Cryptology - 
EUROCRYPT ＇94, LNCS 950, 1995, pp. 
77-85. 
[3] C.P. Schnorr, “Efficient Signature 
Generation for Smart Cards,” 
Proceedings of Advances in 
Cryptology – CRYPTO’ 89, Springer 
Verlag, 1990, pp. 239-252. 
[4] C.P. Schnorr, “Efficient Signature 
Generation for Smart Cards,” Journal of 
Cryptology, Vol. 4, No. 3, 1991, pp. 
161-174. 
[5] T. ElGamal, “A Public-Key 
Cryptosystem and a Signature Scheme 
based on Discrete Logarithms,” 
Proceedings of Advances in 
Cryptology – CRYPTO’ 84, Springer 
Verlag, 1985, pp. 10. 
[6] T. ElGamal, “A Public-Key 
Cryptosystem and a Signature Scheme 
