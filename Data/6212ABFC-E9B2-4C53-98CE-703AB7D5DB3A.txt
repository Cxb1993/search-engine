  I
???? 
??????????????????????????????? 
 
?????????????????????????????????
???????????????????????????????????
???????????????????????????????????
???????????????????????????????????
???????????????????? 
???????????????????????????????
Kozak ???????????????????????????????
????????????????????????????? Kozak ???
???????????????????????????????????
????????????? 10 ????????????????????
???????????????????????????????????
??????????????????????????????????
??????????? 
???????? ISRAL (Integrated Sequence Retrieval Analysis Tool)??
?????MuSiC (Multiple Sequence Alignment with Constraints)???????
?????MuRSSiC (Multiple RNA Second Structure Alignment with Constraints) 
????? RNA ?????????ISRAL (http://alzoo.cs.pu.edu.tw/~genome) 
???????????????????????? Extract subsequence????
?????Primer design?????????Analysis?????????????
????????????????????????????????MuSiC 
(http://genome.life.nctu.edu.tw/MUSIC)??????????????????
???MuRSSiC (http://alzoo.cs.pu.edu.tw:8080/MuRSSic) ?????????
??????????RNA???????????????????????
???? 
  
 
  III
?? 
????........................................................................................................................ I 
????....................................................................................................................... II 
??..............................................................................................................................III 
??................................................................................................................................1 
??........................................................................................................................1 
????................................................................................................................2 
????................................................................................................................3 
ISRAL Web Server.........................................................................................................7 
System Architecture ...............................................................................................7 
Functionality Description.......................................................................................7 
MuSiC Web Server ......................................................................................................11 
Alignment Method...............................................................................................11 
Usage....................................................................................................................12 
Scoring Matrices ..................................................................................................14 
MuRSSiC Web Server .................................................................................................16 
Center-star Constrained Multiple RNA Secondary Structure Alignment ............16 
Constrained Multiple RNA Secondary Structure Alignment with the Annotated 
RNA sequences ....................................................................................................19 
Usage....................................................................................................................23 
?????..................................................................................................................26 
??????..............................................................................................................26 
????......................................................................................................................28 
?? A  ISRAL ???? ........................................................................................32 
?? C ????? – RECOMB2006......................................................................64 
?? D ????? – Bioinformatics, 20(14):2309-2311, 2004..............................67 
 
  2
?Analysis??????????????????????????????
???????????????MuSiC (http://genome.life.nctu.edu.tw/MUSIC)
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? MuRSSiC 
(http://alzoo.cs.pu.edu.tw:8080/MuRSSic) ????????????????
???RNA??????????????????????????? 
 
???? 
The major goal of large-scale genome analysis is to identify and characterize as 
much of the genetic information of an organism as possible. To the extent that this 
goal is accomplished by massive nucleotide sequencing, comparative sequence 
analysis will play a major role. Obviously this role will getting increasingly important 
with time, as the likelihood of any newly acquired sequences being like any 
previously identified sequences increases with the expanding sizes of the sequence 
databases. This is one way in which traditional investigator-initiated research and 
large-scale sequence analysis can be mutually beneficial. By suggesting a probable 
function for a newly determined sequence, only a few experimental tests need to be 
carrying out for confirmation. 
So far, the total number of sequences deposited in the GenBank already exceeds 
25,000 MB. The problem of finding genetic information in sequences resulting from 
the large quantity of genome sequence data is typically more challenging when 
contextual information about the particular segment of DNA is insufficient. One such 
an example is the finding of the ribosome-binding site (RBS) for higher eukaryotes. 
Unlike bacteria, nearly all eukaryotic genes are monocistronic and only a small 
number of eukaryotic mRNAs have known internal ribosome binding sites like 
prokaryotes. Therefore, it is proposed that the translation initiation complex in 
eukaryotic cells has to scan along the mRNA until a recognizable short consensus 
sequence is found. One such a consensus sequence 5’-ACCAUGG-3’, referred to as 
the Kozak sequence, has been identified that spans the translation initiation codon 
[Kozak, 1987]. However, the Kozak consensus sequence was initially proposed based 
on a study with relatively small number of genes. Many human genes do not possess 
typical Kozak sequence and it is not known whether other eukaryotic organisms have 
a related sequence.  
Other than the scanning system of translation initiation, some eukaryotic mRNA, 
particularly in viruses, have internal ribosomal entry site (IRES). Similar in function 
to the ribosome binding site of bacteria, though the sequences of IRESs and their 
positions relative to the initiation codon are more variable than that in bacteria. One of 
the examples is the mammalian immunoglobulin heavy chain-binding protein have 
been reported to have IRES. The presence of IRES may enable the mRNA to be 
  4
 
1) Generate a text search tool that allows the identification and collection of 
sequences with a specific feature from GenBank.  
The first step toward the identification of a specific signature for regulation of 
gene expression is the collection of desired sequences from > 25,000 Mb in over 20 
million sequence records in GenBank database. The sequence could be in a large file 
of several megabases in length or in tens of thousand small files, each around 0.5-3.0 
kb. Ideally, the text search tool will allow us: (a) retrieve specific sequences according 
to the description of the genome file supplied. Common features of the GenBank 
format such as “ribosome binding site”, “TATA box”, "CDS", and "STS" will be 
included as the standard selection items; (b) retrieve sequence at the designated 
positions of the described features. For examples: +/- 20 bp of all ribosome binding 
sites”, or "40 bp after the initiation codons" 
 
2) Construct a database for the deposition of the retrieved files; 
The retrieved sequence will be stored in a database that provides the following 
information: Gene number or GenBank accession number, positions in the entire 
sequence, sequence, and remarks.  
 
3) Integrate statistics calculation tools into the system 
An efficient algorithm will be generated that can carry out the calculation of the 
quantity of A,T, G, and C in each aligned position. Similarly, the total number of 20 
amino acids in each aligned position will also be determined and plot.  Besides, G+C 
content, A+T content and di-nucleotide calculation tools are provided here for 
determining the signature sequences. 
 
4) Design and implement efficient algorithms for alignments of thousands of 
short biological sequences with constraints 
Motif discovery problems have received much attention for a long time. There 
are a number of algorithms proposed for finding the optimal motif (See [Blanchette et 
al., 2000], [Brazma et al., 1998], [Galas et al., 1985], [Sagot, 1998], [Sinha and 
Tompa, 2000], [Staden, 1989], [Tompa, 1999], and [van Helden et al., 1998]). A 
sequence M of length l is a planted (l, d)-motif for a given N sequences if each 
sequence contains a consecutive subsequence that is M with exactly d point 
substitutions. In 1999, Tompa [Tompa, 1999] gave an exact algorithm for finding 
motifs for ribosome binding sites of prokaryotes. WINNOWER and SP-STAR 
algorithms were designed in [Pevzner and Sze, 2000] for finding planted motifs. The 
  6
without any gap. Let l(P) represent the length of a fragment sequence P. The problem 
considered here is defined as follows. Let S = { S1, S2, . . . , Sk } be a set of k input 
sequences along with an ordered set of r constraints P = ( P1, P2, . . . , Pr ) and an 
error threshold ε , where 0 ≤ ε < 1. The CMSA of S (with respect to P) is an MSA of S, 
say A, in which r disjoint bands B1, B2, . . . , Br are in A such that d[Pi ,Bi(Sj)] ≤ l(Pi ) 
×ε for all 1 ≤ i ≤ r and 1 ≤ j ≤ k [meaning that at most l(Pi ) ×ε? mismatches are 
allowed in the alignment between Pi and Bi(Sj) without any gap]. Then, the goal of 
this problem is to find a CMSA of S with respect to P whose sum-of-pairs score is 
minimum over all possible candidates.   
 
Problem 2. Let Σ = {‘[’, ‘]’, ‘{’, ‘}’, ‘(’ ,‘)’, ‘A’, ‘G’, ‘C’, ‘U’,}. An annotated 
RNA sequence is a sequence over Σ. The characters ‘[’ and ‘}’ represent the start and 
end of the head of a stem respectively, while the characters ‘{’ and ‘]’ represent the 
start and end of the tail of a stem respectively. The characters ‘(’ and ‘)’ mean the 
start and end of a loop. For example, [AGG}(CCUU){CCU] is an annotated RNA 
sequence which contains a stem AGG-CCU and a loop CCUU. Given an alignment 
A of x RNA sequences S = {S1, S2, …, Sx}, a band is defined as a block of 
consecutive columns in A. For any band of A, say B, B(Si) denotes the fragment of Si 
whose residues/nucleotides are all in the band B, where 1 ≤ i ≤ k. d(C’, C’’) is the 
Hamming distance between two fragments C’ and C’’ of equal length. It is equal to the 
number of mismatched pairs in the alignment of C’ and C’’ without any gap. Let l(C) 
represent the length of a fragment sequence C. Given an order set of r constrained 
sequences C = (C1, C2, …, C,r) over Σ and an error threshold ε , where 0 ≤ ε < 1, the 
Constrained Multiple RNA Secondary Structure Alignment (CMRSSA) of S with 
respect to C is an MSA of S, say A, in which r disjoint bands B1, B2, …, Br and in A 
such that d(Ci, Bi(Sj)) ≤ l(Ci)×ε  for all 1 ≤ i ≤ r and 1≤ j ≤ k. This problem is to find 
the optimal CMRSSA for S with respect to C. 
 
It is easy to know these problems are NP-hard. The authors in [Tang et al., 2003] 
have discussed Problem 1 and designed an approximation algorithm of O(rkn4) time 
for Sum-of-Pair (SP) score. If n and r are constants, the algorithm becomes an O(k) 
time algorithm. To our best knowledge, Problem 2 are open now. Once the interested 
sequences are aligned as you wish, you can easily read the signature from the 
consensus sequence, and you may use the software like EMOTIF [Nevill-Manning et 
al., 1998] to find the signature from the alignment. Another problem arisen here is 
data structure issues for efficiently updating alignments online.  
  8
???????submit?????????????? 
??ISRAL 
?. Extract subsequences from a point of a specific feature/qualifier 
????? ISRAL????????????????????????
?????????????????????????? “Select input 
Genbank file” ????????????????????????????
???? 
1. By Location (nucleotide position) 
?????? By Location?????????????????????
???????????????????????????????? 
“submit” ?????????????????? 
2. By FEATURES 
?????? By FEATURES???????????????????
??????????????????????????????????
Feature Name?? CDS?tRNA?mRNA?intron?exon…??????????
??????????? ISRAL?????????? Feature Name???
Qualifiers??????????????????????? Qualifiers???
?????/gene?/note?/locus tag?/db_xref…??? 
?????????????????????????????????
?????????????? n? (n?0?n?? Z) ????? m (m?0?m
?? Z) ?????????????????? “Reference point” ?????
????????? “Head offset(-)” ? “Tail offset(+)” ??????????
??????????? “submit” ?????????????????? 
 
. High throughput primer design for the sequences with specific featureⅡ  
????????????? primer?????????????????
??????? primer design?????????????????????
???????????????????????????????????
???????????? primer? 
????????? primer?????????????? genbank file?
??? feature???????? FASTA file???????????????
????Ⅰ?????? FASTA file???????????? 
?? primer design????????????????????? primer?
????????? n? primer length????????????? FASTA file
????? prefix? postfix???? n? base??????? prefix??? base
? Upstream?? postfix??? base? Downstream????????????
primer ????????? primer??????????????T = 81.5 + 0.41 
(%GC) - 675 / L ???? GC??????? primer length????? primer? 
  10
?. Archive<0>?Genbank files 
? Archive<0>??????????????????? .gbk? .txt??
???????????????????????????????????
????????? 
 
?. Archive<1>?FASTA files output by Genbank files 
? Archive<1>??????????????????????????
?? .fasta??????????????????????????????
???????????????? 
 
?. Archive<2>?Alignment statistic results 
? Archive<2>?????????????Analysis of the sequences with a 
specific feature/qualifier feature”?? input? FASTA file?? alignment???
???????????????????????????????????
? Archive<2>??????????sketch?????????????? 
 
?.Archive<3>?CSV files 
? Archive<3>????????????????????????
? .csv???????????????????????????????
??????????????? 
 
  12
sequences. The method first designs a dynamic programming algorithm to find an 
optimal constrained alignment of any two given sequences and then use it as a kernel 
progressively to align the input sequences into a CMSA according to the branching 
order of a guide tree. For more detail for the algorithm, please see 
http://genome.life.nctu.edu.tw:8080/MUSIC/method.pdf. 
 
Usage 
Input: 
To run MuSiC, users first input their protein/DNA/RNA sequences in the FASTA 
format in the top blank field (1). They then must select a suitable scoring matrix from 
a list of predefined matrices (2). The proposed MuSiC system penalizes the gaps 
using the affine gap penalty function so users must also key in two real values for the 
gap open penalty (3) and the gap extension penalty (4). Alternatively, the user may 
simply choose "Protein" or "DNA/RNA" (5) to adopt the default values provided by 
the system, where "Protein" and "DNA/RNA" indicate that the sequences considered 
by the user are protein and DNA/RNA sequences, respectively. Finally, in the 
"Constraints" field (6), users can input constrained sequences, delimited by 
non-alphabetic characters, such as commas, slashes, verticals and pluses; they may 
also select the "Approximate" option and input a real number 0 <= R < 1 in the 
"Ratio" field (7), which implies that no more than (l(Pi) * R) mismatches exist 
between the constrained sequence and the aligned fragments of input sequences, 
where l(Pi) denotes the length of a constrained sequence Pi. Notably, the "Constraints" 
field need not be filled. If this field is left blank, then the MuSiC system will output 
an ordinary MSA without constraints.  
  14
 RED   HKR 
 BLUE   FWY 
 GREEN   ILMV 
 
In the case of DNA/RNA sequences, the default colors are as follows:  
 
 Color   Base Code 
------------------------------------- 
 ORANGE   A 
 RED   C 
 BLUE   T 
 GREEN   G 
 
Scoring Matrices 
The currently predefined scoring matrices of MuSiC system consist of BLOSUM 
45, 62 and 80 matrices and PAM 20, 60, 70 and 120 matrices for protein sequences, 
and identity, blast and transition/transversion matrices for DNA/RNA sequences.  
• Identity Matrix of DNA/RNA Sequences:  
   A   C   G   T    
A 10   0   0   0 
C  0  10   0   0  
G  0   0  10   0  
T  0   0   0  10  
 
• Blast Matrix of DNA/RNA Sequences:  
   A   C   G   T    
A  5  -4  -4  -4 
C -4   5  -4  -4  
G -4  -4   5  -4  
T -4  -4  -4   5  
• Transition/Transversion Matrix of DNA/RNA Sequences:  
   A   C   G   T    
A  1  -5  -1  -5  
C -5   1  -5  -1 
  16
MuRSSiC Web Server 
 
MuRSSiC (http://alzoo.cs.pu.edu.tw:8080/MuRSSic) is web server to perform 
the constrained alignment of a set of RNA sequences, such that the user-specified 
RNA structures are aligned with each other. The input of the MuRSSiC system 
consists of a set of RNA sequences and a set of user-specified constraints. First of all, 
for each RNA sequence, we predict its secondary structure in O(n 3) time and then 
form the corresponding annotated RNA sequence of it in O(kn) time, where n is the 
maximum length of sequences. After that, we use the annotated RNA sequences as 
the input data to the MuSic system. Finally, MuRSSiC outputs a constrained 
multiple RNA secondary structure alignment in which the fragments of the input 
sequences whose structure exhibit a given degree of similarity to a constraint are 
aligned together. 
 
Center-star Constrained Multiple RNA Secondary Structure Alignment 
Given an alignment A of k sequences S1, S2,. . ., Sk, a band is defined as a block 
of consecutive columns in A. For any band of A, say B, B(Si ) denotes the fragment of 
Si whose residues/nucleotides are all in the band B, where 1 ≤ i ≤ k. Let SE(Si) = (SEi,1, 
SEi,2,…, SEi,p) be the express of the structure Si and consists of {‘(‘, ‘*’, ’)’, ‘ ’} and 
the number of ‘(’ is equal to the number of ’)’. SEi,j is over the alphabet set, {‘(‘, 
‘*’, ’)’, ‘’}. Given a sequence CS, the constrained structure of CS is expressed by P. P 
= (P1, P,2,…, P,r). Pi consists of {‘(‘, ‘*’, ’)’} and the number of ‘(’ is equal to the 
number of ’)’ where 1 ≤ i ≤ r. Let l(Pi) represent the length of a sequence Pi. Let 
|)''()'(|)'','( PlPlPPD −= . Let pos(Pi) = the position of the last character of Pi in P. 
Let Σ be the alphabet where the characters of sequences are drawn. For and two 
characters, a and b, are over Σ. We let f(a,b) denote the score of aligning a with b. 
The center-star constrained pair-wise RNA secondary structure alignment 
(CS-CPRSSA for short) problem considered here is to find an optimal CPRSSA of 
two sequences CS and S with respect to P. where the length of S1 and S2 are m and n, 
respectively, and P = (P1,P2,…,Pr). Without loss of generality, we assume m < n. 
Given a sequence S, we use S[i] to denote the i-th residue / nucleotide in S and use S[i, 
j] to denote the consecutive subsequence ranging form the i-th character to the j-th 
character in S. Define Ma,k(i,j) to be the maximum score of all constrained alignments 
between CS[1,i] and S[1,j] w.r.t. P[1,k] that end with a substitution pair; Mb,k(i,j) to be 
the maximum score of all constrained alignments between CS[1,i] and S[1,j] w.r.t  
P[1,k] that end with a deletion pair; Mc,k(i,j) to be the maximum score of all 
constrained alignments between CS[1,i] and S[1,j] w.r.t  P[1,k] that end with a 
insertion pair.max{ Ma,r(m,n), Mb,r(m,n), Mc,r(m,n)} is the optimal score of the 
  18
    ]),[],[(),1(, jSiCSfjiM kb +−  
    ]).[],[(),1(, jSiCSfjiM kc +−  
}  
Lemma 3 [Tsai, et al., 2004] For any 1 ≤ i ≤ m, 1 ≤ j ≤ n and 1 ≤ k ≤ r, we have 
),(, jiM kc = max{ 
    ]),[],[()1,(, jSiCSfjiM ka +−  
    ]),[],[()1,(, jSiCSfjiM kb +−  
    ]).[],[()1,(, jSiCSfjiM kc +−  
}  
 Based on Lemmas 1,2 and 3, we can design a dynamic programming algorithm , 
called Algorithm CPRSSA [Wang, 2006], in the following for computing the optimal 
score of the constrained alignment of CS and S w.r.t. P, where an optimal alignment 
can be obtained using backtracking approach. 
Algorithm CS-CPRSSA 
1. /*Initialization*/ 
for all 1 ≤ i ≤ m, 1 ≤ j ≤ n, and 1 ≤ k ≤ r do 
   Ma,0(0,0) = 0, Ma,k(i,0) = ∞−  , Ma,k(0,j) = ∞− .  
   Mb,0(0,0) = ∞− , Mb,k(i,0) = ×− i gap penalty , Mb,k(0,j) = ∞−  
   Mc,0(0,0) = ∞− , Mc,k(i,0) = ∞− , Mc,k(0,j) = ×− j gap penalty. 
end for 
2. for k=0 to r do 
for i=1 to m do  
   for j=1 to n do  
Compute Ma,k(i,j), Mb,k(i,j) and Mc,k(i,j) according to 
Lemmas1,2 and 3, respectively. 
end for 
end for 
 end for 
  20
Given an order set of r constrained sequences C = (C1, C2, …, C,r) over Σ and an error 
threshold ε , where 0 ≤ ε < 1, the Constrained Multiple RNA Secondary Structure 
Alignment (CMRSSA) of S w.r.t. C is an MSA of S, say A, in which r disjoint bands 
B1, B2, …, Br and in A such that d(Ci, Bi(Sj)) ≤ l(Ci)×ε  for all 1 ≤ i ≤ r and 1≤ j ≤ k. 
The constrained pair-wise RNA secondary structure alignment problem with 
annotated RNA sequences (CPRSSAwA for short) considered here is to find an 
optimal CPRSSA of two annotated sequences w.r.t. C. The CPRSSAwA for two 
sequences can be obtained by using the Algorithm CPSA [Tsai, et al., 2004], and the 
CMRSSA by using the Algorithm CMSA [Tsai, et al., 2004]. 
The length of S1 and S2 are m and n, respectively. Without loss of generality, we 
assume m < n. Let Σ be the alphabet where the characters of sequences are drawn. For 
and two characters, a and b, are over Σ. We let f(a,b) denote the score of aligning a 
with b. Here, we adopt the affine gap penalty for penalizing the gap cost and let wo 
and we denote the gap open and the gap extension penalty, respectively, where 0 ≤ wo 
and 0 ≤ we. Define Ma,k(i,j) to be the maximum score of all constrained alignments 
between S1[1,i] and S2[1,j] w.r.t. C[1,k] that end with a substitution pair; Mb,k(i,j) to be 
the maximum score of all constrained alignments between S1[1,i] and S2 [1,j] w.r.t.  
C[1,k] that end with a deletion pair; Mc,k(i,j) to be the maximum score of all 
constrained alignments between S1 [1,i] and S2 [1,j] w.r.t. P[1,k] that end with an 
insertion pair. Clearly, max{ Ma,r(m,n), Mb,r(m,n), Mc,r(m,n)} is the optimal score of 
the constrained alignment of S1 and S2 w.r.t C and an error thresholdε, where 0 ≤ε< 1. 
Similar to the derivation of the recursive formulae for the ordinary pair-wise sequence 
alignment, it is not hard to see that following lemmas holds. 
Lemma 1 [Tsai, et al., 2004] For any 1 ≤ i ≤ m,1 ≤ j ≤ n, and 1 ≤ k ≤ r, 
if ε×≤+− )(]),1)([,( 1 kkk CliCliSCd  and ε×≤+− )(]),1)([,( 2 kkk CljCljSCd , we 
have  
),(, jiM ka  = max{ 
     ∑ −=− −−+−− 1)( 0 211, ]),[],[())(),(( kPlhkkka hiShiSfPljPliM  
     ∑ −=− −−+−− 1)( 0 211, ]),[],[())(),(( kPlhkkkb hiShiSfPljPliM  
     ∑ −=− −−+−− 1)( 0 211, ]),[],[())(),(( kPlhkkkc hiShiSfPljPliM  
]),[],[()1,1( 211, jSiSfjiM ka +−−−       
  22
}  
Based on Lemmas 1,2 and 3, we can design a dynamic programming algorithm , 
called Algorithm CPRSSAwA [Wang, 2006], in the following for computing the 
optimal score of the constrained alignment of S1 and S2 w.r.t. C, where an optimal 
alignment can be obtained using backtracking approach. 
Algorithm CPRSSAwA 
1. /*Initialization*/ 
for all 1 ≤ i ≤ m, 1 ≤ j ≤ n, and 1 ≤ k ≤ r do 
   Ma,0(0,0) = 0, Ma,k(i,0) = ∞−  , Ma,k(0,j) = ∞− . 
   Mb,0(0,0) = ∞−  Mb,k(i,0) = eo wiw ×−− , Mb,k(0,j) = ∞− . 
   Mc,0(0,0) = ∞− , Mc,k(i,0) = ∞−  , Mc,k(0,j) = eo wjw ×−− . 
2.  for k=0 to r do 
   for i=1 to m do  
    for j=1 to n do  
Compute Ma,k(i,j), Mb,k(i,j) and Mc,k(i,j) according to 
Lemmas1,2 and 3, respectively. 
end for 
end for 
3. max{ Ma,r(m,n), Mb,r(m,n) and Mc,r(m,n) } is the optimal score of the 
constrained alignment of S1 and S2 w.r.t. C. 
Because we transform Algorithm CPSA [Tsai, et al., 2004] to Algorithm 
CPRSSAwA, the time-complexity of Algorithm CPRSSAwA is the equal to the 
time-complexity of Algorithm CPSA, O(rn2). 
Algorithm CMRSSAwA [Wang, 2006] 
Input: A set S = { S1, S2, . . . , Sk } of k input annotated sequences along with an 
ordered set of r constraints C = ( C1, C2, . . . , Cr ) and an error threshold ε, 
where 0 ≤ε< 1. 
Output: A CMRSSAwA of S with respect to CS and P. 
1. Compute the distance matrix D globally aligning all pairs of sequences using 
Algorithm CPRSSAwA such that D(i,j) denotes the distance between 
sequences Si and Sj. 
2. Create a complete graph G from the distance matrix D and then compute the 
Kruskal merging tree Tk form G to serve as the guide tree. 
3. Progressively align the sequences according to the branching order of the 
  24
 
 
Output: 
In the resulting multiple sequence alignment, the constrained columns are 
colored in black and their corresponding constraints are also displayed beneath them. 
An example of alignment is given in the following.  
 
  26
????? 
Now we have designed and implemented software tools for bioinformatics 
applications: ISRAL (Integrated Sequence Retrieval Analysis Tool) for sequence 
analysis, MuSiC (Multiple Sequence Alignment with Constraints) for constrained 
sequence alignment and MuRSSiC (Multiple RNA Second Structure Alignment with 
Constraints) for constrained RNA secondary structure alignment. ISRAL 
( http://alzoo.cs.pu.edu.tw/~genome ) provides an integrated biology analysis tool for 
extracting sequences, primer design and pattern analysis, and makes users easily and 
efficiently obtain their sequences of interest. MuSiC 
( http://genome.life.nctu.edu.tw/MUSIC ) can align some common patterns of input 
sequences together, and MuRSSiC ( http://alzoo.cs.pu.edu.tw:8080/MuRSSic ) can 
align RNA sequences with some common structure constraints. These software tools 
are available in the internet and free for accessing.  
 
Efficient algorithms for Problems 1 and 2 are proposed and implemented. Our 
heuristic algorithm for Problem 1 needs O(rk2n2) time and O(rn2) space, and our 
heuristic algorithm for Problem 2 with annotated RNA sequences needs O(rk2n2) time 
and O(rn2) space. We shall continue to build the tools on the cluster or Grid platform.  
 
?????? 
Our research results have published in the following papers: 
 
Y. T. Tsai, C. L. Lu, C. T. Yu and Y. B. Huang 2004, "MuSiC: A Tool for Multiple 
Sequence Alignment with Constraints", Bioinformatics, 20(14):2309-2311, 2004. 
 
San-Yuan Wang and Tin Te Tsai, "Constrained Multiple RNA Secondary Structure 
Alignment", RECOMB2006 poster, 2006. 
 
One related master thesis is as follows: 
 
San-Yuan Wang, “Constrained Multiple RNA Secondary Structure Alignment”, 
Master Thesis, Department of Computer Science and Information Management, 
Providence University, June 2006. 
 
The goals for our research are accomplished and we are going to improve the 
performance of our tools. We shall use our tools to build biological databases of 
  28
???? 
Altschul SF, Gish W, Miller W, Myers EW, Lipman DJ, (1990), “Basic local 
alignment search tool”, J Mol Biol. 1990 Oct 5;215(3):403-10. 
Timothy L. Bailey and Charles Elkan, (1994), “Fitting a mixture model by 
expectation maximization to discover motifs in biopolymers”, Proceedings of the 
Second International Conference on Intelligent Systems for Molecular Biology, 
pp. 28-36, AAAI Press, Menlo Park, California, 1994.  
Blanchette, M., Schwikowski, B., and Tompa, M., (2000), “An exact algorithm to 
identify motifs in orthologous sequences from multiple species”, In Proceedings 
of the 8th International Conference on Intelligent Systems for Molecular Biology 
(ISMB), pages 37--45.  
Brazma, I. Jonassen, J. Vilo, and E. Ukkonen, (1998), “Predicting gene regulatory 
elements in silico on a genomic scale. Preprint”, Genome Research, 1998 
J. Buhler and M. Tompa, (2001), “Finding motifs using random projections”, 
RECOMB 2001, pp 69-76 
Chin,F.Y.L., Ho,N.L., Lam,T.W., Wong,P.W.H. and Chan,M.Y.(2003) Efficient 
constrained multiple sequence alignment with performance guarantee. 
Proceedings of the Computational Systems Bioinformatics (CSB’03). IEEE, pp. 
337–346.  
Depiereux,E. and Feytmans,E. (1992) MATCH-BOX: a fundamentally new algorithm 
for the simultaneous alignment of several protein sequences. Comput. Appl. 
Biosci., 8, 501–509.  
Y. M. Fraenkel, Y. Mandel, D. Friedberg, and H. Margalit, (1995), “Identication of 
common motifs in unaligned DNA sequences: application to escherichia coli lrp 
regulon”, Comput. Appl. Biosci., 11:379-387, 1995 
D. J. Galas, M. Eggert, and M. S. Waterman, (1985), “Rigorous pattern-recognition 
methods for DNA sequences: Analysis of promoter sequences from E. Coli”, 
Journal of Molecular Biology 186(1), 117--128, 1985 
  30
Pevzner P.A. and Sze S.-H., (2000), “Combinatorial approaches to finding subtle 
signals in DNA sequences”, Proc. of 8th Int. Conf. on Intelligent Systems for 
Molecular Biology (ISMB'2000), 269-278.  
Rigoutsos, I., and Floratos, A., (1998), “Motif discovery without alignment or 
enumeration”, In RECOMB98: Proceedings of the Second Annual International 
Conference on Computational Molecular Biology, 221-227  
Rivas,E. and Eddy,S. (1999) A dynamic programming algorithm for RNA structure 
prediction including pseudoknots. J. Mol. Biol., 285, 2053–2068.  
M.-F. Sagot, (1998), “Spelling approximate repeated or common motifs using a suffix 
tree”, In C. L. Lucchesi and A. V. Moura, editors, LATIN'98: Theoretical 
Informatics, Lecture Notes in Computer Science, pages 111--127. 
Springer-Verlag, 1998.  
Sankoff, D., (1985), “Simultaneous Solution of the RNA Folding, Alignment and 
Protosequence Problems”, SIAM Journal on Applied Mathematics, 45(5), pp. 
810-825, 1985.  
Shine J, Dalgarno L, (1975), “Determinant of cistron specificity in bacterial 
ribosomes”, Nature, 254(5495),34-8  (S-D sequence)  
Schuler,G.D., Altschul,S.F. and Lipman,D.J. (1991) A workbench for multiple 
alignment construction and analysis. Prot. Struct. Funct. Genet., 9, 180–190.  
S. Sinha and M. Tompa, (2000), “A statistical method for finding transcription factor 
binding sites”, In Proc. Int. Conf. Intell. Syst. Mol. Biol., volume 8, pages 344-54. 
2000.  
Staden, R., (1989), “Methods for discovering novel motifs in nucleic acid sequences”, 
Cornput. Appl. Biosci., Vol. 5(5). pp 293-298.  
Sze S.-H., Gelfand M.S. and Pevzner P.A., (2002), “Finding weak motifs in DNA 
sequences”, In the Proceedings of Pacific Symposium on Biocomputing 
(PSB'2002), 235-246.  
Schuler GD, Altschul SF, Lipman DJ., “A workbench for multiple alignment 
construction and analysis”, Proteins 1991; 9(3):180-90 
C. Y. Tang, C. L. Lu, D. T. Chang, Y. T. Tsai, Y. J. Sun, K. M. Chao, J. M. Chang, Y. 
H. Chiou, C. M. Wu, H. T. Chang and W. I. Chou, (2003), "Constrained Multiple 
  32
?? A  ISRAL ???? 
1??? ISRAL 
 
?? ISRAL???( http://alzoo.cs.pu.edu.tw/~genome )???????
GUEST???????? USER????????????????Submit??
????? 
 
 
?????????????????? ISRAL???????????
??? ISRAL???? 
  34
2.1.2 Copy/Paste?your file? 
 
????????????????????? key in?????????
??submit????????????????????????????
?reset?????????????????????????File Archive -> 
Archive<0> -> temp_upload.gbk”????? 
 
2.1.3 From NCBI 
 
????GI no:????????? GI number??? NCBI?
http://www.ncbi.nlm.nih.gov/ ????????????submit????????
???????????????????File Archive -> Archive<0>”????
?? 
 
2.1.4 BSML Parser 
 
???????????????? .bsm???????submit????
???????????????????????File Archive -> Archive<0>”
?????? 
 
  36
2.2.1 Extract subsequences from a point of a specific feature/qualifier 
 
?????????? “Select input Genbank file” ??????????
???????????????????????????????????
?? “select”?????????????????????????? “delete”
?? “clear all”??????????????????????????? 
??? “By Location (nucleotide position)”???????????????
?????????????? “submit” ???????????????? 
??????????22035.gbk?????? 10~50?????????? 
 
STEP 1.?????22035.gbk??????????????? 
 
  38
STEP 3.???temp0.fasta???temp0.csv???????????????? 
>VFSNU6R snRNA_/note="U6 small nuclear RNA"ORIGIN 1 cttcggggac atccgataaa 
attggaacga cacagagaag attagcatgg cccctgcgca 61 aggatgacac gcacaaatcg agaaatggtc 
caaatttt (20..40) a:47.61%(10) t:9.52%(2) c:14.28%(3) g:28.57%(6) 
aattggaacgacacagagaag 
 
2.2.2 High throughput primer design for the sequences with specific feature 
 
?????????? “FASTA file” ????????????????
??????????????????? 
??? “Primer length”?????????? primer????????? 
“submit” ???????????????? 
??????????E.-coli-tRNA.fasta???? primer??? 10?????
????? 
 
STEP 1.?????E.-coli-tRNA.fasta???? primer???? 
 
  40
STEP 2.??“submit” ???????? 
 
 
STEP 3.??????Output file?primer.csv??????? .csv??????
????????????? 
 
???????? Upstream? Downstream??????????????
???????? primer???????? 
??????????E.-coli-tRNA.fasta???? primer??? 10?????
Upstream head?Upstream tail?Downstream head?Downstream tail???? “ttg”
?????? 
 
STEP 1.?????E.-coli-tRNA.fasta???? primer???? Upstream head?
Upstream tail?Downstream head?Downstream tail? 
 
 
  42
?????????? “FASTA file” ????????????????
?????????????????????????????? Alignment?
Pattern Searching?Find Pattern?Find Inverted repeat?Find Direct repeat????
????????????? 
Alignment? 
???? “Alignment”???????????3’ end?? ????????
??5’ end?? ????????????? “submit” ???????????
???? 
????????E.-coli-tRNA.fasta??????? 3’ end Alignment????
???? 
 
STEP 1.?????E.-coli-tRNA.fasta???? “Alignment”???????
Alignment???? 
 
 
STEP 2.??“submit” ???????? 
 
 
STEP 3.??????Statistic chart????????????????????
???Download file??????? 
 
  44
STEP 1.?????E.-coli-tRNA.fasta???? “Find Pattern”????????
???????????? 
 
 
STEP 2.??“submit” ???????? 
 
 
STEP 3.??????Statistic chart??????????????????
?Download file??????? 
 
 
Find Inverted repeat? 
???? “Find Inverted repeat”??????? “Length”????????
??? Inverted repeat????? “Mismatch” ??????????????
???Min GAP?Max GAP???????? GAP??????? “submit” 
??????????????? 
  46
STEP 3.???????????Output file?ir.csv??????? .csv???
???????????????? 
 
Find Direct repeat? 
???? “Find Direct repeat”??????? “Length”?????????
?? Direct repeat????? “Mismatch” ????????????????
?Min GAP?Max GAP???????? GAP??????? “submit” ??
????????????? 
????????E.-coli-tRNA.fasta?????????? 10????? 1?GAP
??? 0~20? Direct repeat?????? 
 
STEP 1.?????E.-coli-tRNA.fasta???? “Find Direct repeat”??????
???? Direct repeat???????Mismatch??GAP??? 
 
  48
2.3 File Archive 
 
????? Tools???File Archive?????????????????
Archive<0>?Archive<1>?Archive<2>?Archive<3> ????????????
????????? 2.3.1~2.3.4???????? 
 
2.3.1 Archive<0> GENBANK files 
 
? Archive<0>???????????????????????????
???????????????????????????????? 
????????????22035.gbk??????? 
  50
2.3.2 Archive<1> FASTA files output by Genbank files 
 
? Archive<1>???????????????????????????
? .fasta???????????????????????????????
???????? 
????????????E.-coli-tRNA.fasta??????? 
  52
2.3.3 Archive<2> Alignment statistic results 
 
? Archive<2>????????????? FASTA file?? alignment??
???????????????????????????????????
? Archive<2>??????????sketch?????????????? 
????????????EC-tRNA fasta.align??????????????
????? 
  54
STEP 3.? polygon chart???????sketch??????????? 
 
 
STEP 4.? bar chart???????sketch??????????? 
 
  56
STEP 2.????dr.csv?????????????????????????
?? 
 
 
 
ISRAL??????? 
1. Location Result 
 
??? ISRAL?? Extract subsequences from a point of a specific 
feature/qualifier? By Location (nucleotide position)?????????????
???????????????????????????????????
???????? Input file??????? 22035.gbk??Output file?????
?? temp0.fasta??CSV file??????? temp0.csv?? 
????? Input file???????????????????????
??? Output file? CSV file?????? fatsa file? csv file???????
?????? 
 
2. Sequence Result 
  58
 
4. Alignment Result 
 
 
??? ISRAL?? Analysis of the sequences with a specific feature/qualifier 
feature? Alignment??????????????????????????
????? column? A?T?C?G???????????????????
???Statistic chart????draw a polygon chart???draw a bar chart????
???????????? Alignment??????????????
?Download file???????????? Alignment????? 
 
5. Signature Finding 
 
??? ISRAL?? Analysis of the sequences with a specific feature/qualifier 
feature? Pattern Searching???????????????????
?sequence???????????Length of sequence??????????
?number of (signature)?????????? Signature???????predicted 
number of (signature)????????? Signature????????(signature) 
position??????? Signature???????????????????
  60
 
??? ISRAL?? Analysis of the sequences with a specific feature/qualifier 
feature? Inverted Repeat Finding???????????????????
?sequence????????? Inverted Repeat??????position?????
?? Inverted Repeat???????????gap? ???????Inverted 
Repeat? gap??????????????Output file?ir.csv???????
??? Inverted Repeat Finding????? 
 
8. Direct Repeat Finding 
  62
???? menu? overview
??? 
menu.htm ISRAL???????
????? Project 
Features?Tools? Contact 
Me???? 
overview.htm?
upload.php?form.php?
archive.htm 
menu_user.htm ISRAL???????
????? Project 
Features?Tools? Contact 
Me???? 
overview.htm?
upload.php?
form_user.php?
archive_user.htm 
overview.htm ISRAL??? ? 
upload.php ???? input?????
?? Upload(from your 
PC)?Copy/Paste(your 
file)?From NCBI?BSML 
Parser????????
?? 
Upload(from your 
PC)?getfile.php 
Copy/Paste(your file)?
cgi-bin/post.pl 
From NCBI? 
cgi-bin/ncbi.pl 
BSML Parser? 
bsm_source/pass.php 
form.php ? Extract Susequences?
Primer design?Analysis?
???????? 
new.pl 
form_user.php ? Extract Susequences?
Primer design?Analysis?
???????? 
new_user.pl 
archive.htm ???????????
???? 
Archive<0>?Genbank files
Archive<1>?Fasta files 
output by Genbank files 
Archive<2>?Alignment 
statistic results 
Archive<3>?CSV files 
Archive<0>? 
file/dir.php 
Archive<1>? 
write/index.php 
Archive<2>? 
align_out/index.php 
Archive<3>? 
csv/index.php 
archive_user.htm ???????????
???? 
Archive?bio file(????
bio/dir.php) 
Archive<0>?Genbank file
Archive? 
archive_user.php 
Archive<0>? 
file/dir.php 
Archive<1>? 
  64
?? C ????? – RECOMB2006 
Constrained Multiple RNA Secondary Structure Alignment? 
 
San-Yuan Wang and Yin-Te Tsai 
Department of Computer Science and Information Management, Providence University, Taiwan, ROC. 
E-mail: {g9371007, 
 
yttsai}@pu.edu.tw 
 
1   Introduction 
Multiple RNA secondary structure alignment and multiple sequence alignment are 
two important problems in computational biology. Several methods can be used to 
compare two RNA secondary structure, such as longest arc-preserving common 
subsequence and tree edit distance. However, those methods could not get the 
meaningful results for biologists because they could not include the RNA properties. 
Gorodkin et al. [1] presented FOLDALIGN which can perform pair-wise RNA 
sequence alignment with additional information of base-pairing. This method uses 
4-D dynamic programming strategy. Here we present a new method to align RNA 
sequences on some constraints of secondary structures and this method only uses 
3-D dynamic programming strategy to align two RNA sequences with constraints. 
Biologists can have the result of alignment according to their domain knowledge. 
For example, the user-specified constraints of structure and sequence biologists 
believed should be aligned together will be forced to be aligned with each other. 
 
  In our method, we predict the secondary structures of RNA sequences, and add 
some annotated characters like ‘[’, ‘]’, ‘{’ and ‘}’ to the RNA sequences by the 
structure information to get the annotated RNA sequences. We use the CMSA 
method, proposed by Tsai et al. [2], to align the annotated RNA sequences with 
structure constraints. The MuRSSiC web server could produce such alignments with 
constraints. The biologists can analyze the resulting alignments for their 
specialization and find the relationships of the RNA family.  
 
2   The Algorithm 
Let Σ = {‘[’, ‘]’, ‘{’, ‘}’, ‘(’ ,‘)’, ‘A’, ‘G’, ‘C’, ‘U’,}. An annotated RNA sequence is a 
sequence over Σ. The characters ‘[’ and ‘}’ stand the tart and end of the head of a 
stem respectively, while the characters ‘{’ and ‘]’ stand the start and end of the tail 
of a stem respectively. The characters ‘(’ and ‘)’ mean the start and end of a loop. 
                                                 
?This work was partially supported by the National Science Council of Republic of China under grant NSC 
94-2213-E-126-002. 
  66
References 
1. Gorodkin, J., Heyer, L.J. and Stormo, G.D. 1997. Finding the most significant 
common sequence and structure motifs in a set of RNA sequences. In: Nucleic 
Acids Researcher, Volume 25, No. 18, pp.3727-32. 
2. Tsai, Y.T., Huang, Y.P., Yu, C. T. and Lu, C. L. 2004. MuSic: A tool for multiple 
sequence alignment with constraints. In: Bioinformatics, Volume 20, 
pp.2309-2311. 
BIOINFORMATICS APPLICATIONS NOTE Vol. 20 no. 14 2004, pages 2309–2311doi:10.1093/bioinformatics/bth220
MuSiC: a tool for multiple sequence alignment
with constraints
Yin Te Tsai1, Yen Pin Huang2, Ching Ta Yu1 and Chin Lung Lu2,∗
1Department of Computer Science and Information Management, Providence
University, Taiwan, ROC and 2Department of Biological Science and Technology,
National Chiao Tung University, Taiwan, ROC
Received on January 16, 2004; revised on March 5, 2004; accepted on March 5, 2004
Advance Access publication April 1, 2004
ABSTRACT
Summary: MuSiC is a web server to perform the constrained
alignment of a set of sequences, such that the user-specified
residues/nucleotides are aligned with each other. The input
of the MuSiC system consists of a set of protein/DNA/RNA
sequences and a set of user-specified constraints, each with a
fragment of residue/nucleotide that (approximately) appears in
all input sequences.The output of MuSiC is a constrained mul-
tiple sequence alignment in which the fragments of the input
sequences whose residues/nucleotides exhibit a given degree
of similarity to a constraint are aligned together. The current
MuSiC system is implemented in Java language and can be
accessed via a simple web interface.
Availability: http://genome.life.nctu.edu.tw/MUSIC
Contact: cllu@mail.nctu.edu.tw
INTRODUCTION
Multiple sequence alignment (MSA) has received much atten-
tion in the fields of bioinformatics and computational biology
because it is very useful for discovering the biological mean-
ings of sequences. Usually, biologists may have advanced
knowledge of the structures or functionalities of sequences of
interest, such as active site residues, intramolecular disulfide
bonds, substrate binding sites, enzyme activities and others, as
well as the conserved motifs (consensuses) of the sequences.
They expect an MSA program to be able to align these
sequences such that the structural/functional or conserved
residues/nucleotides are aligned. However, most available
MSA programs cannot do so because they generate an align-
ment based only on the information about the sequence.
Hence, this work studies a variant of MSA, called constrained
multiple sequence alignment (CMSA), which aligns the
structure/function-related or conserved residues/nucleotides.
Note that many other CMSAs have been proposed from
various perspectives, using different approaches (Schuler
et al., 1991; Depiereux and Feytmans, 1992; Taylor, 1994;
∗To whom correspondence should be addressed.
Notredame et al., 2000; Thompson et al., 2000; Katoh et al.,
2002).
Before the CMSA model is defined, notation must be intro-
duced. Given an alignment A of k sequences S1, S2, . . . , Sk , a
band is defined as a block of consecutive columns in A. For
any band of A, say B, B(Si) denotes the fragment of Si whose
residues/nucleotides are all in the band B, where 1 ≤ i ≤ k.
d(P ′, P ′′) is the Hamming distance between two fragments
P ′ and P ′′ of equal length. It is equal to the number of mis-
matched pairs in the alignment of P ′ and P ′′ without any gap.
Let l(P ) represent the length of a fragment sequence P . The
CMSA problem considered here is defined as follows. Let
S = {S1, S2, . . . , Sk} be a set of k input sequences along with
an ordered set of r constraints P = (P1, P2, . . . , Pr) and an
error threshold , where 0 ≤  < 1. The CMSA of S (with
respect to P) is an MSA of S, say A, in which r disjoint bands
B1, B2, . . . , Br are in A such that d(Pi , Bi , (Sj )) ≤ l(Pi) × 
for all 1 ≤ i ≤ r and 1 ≤ j ≤ k [meaning that at most l(Pi)×
mismatches are allowed in the alignment between Pi and
Bi(Sj ) without any gap]. Then, the so-called CMSA problem
is to find a CMSA of S with respect to P whose sum-of-pairs
score is minimum over all possible candidates. Note that the
original CMSA model proposed by Tang et al. (2003) is a spe-
cial case of the model considered herein, in which each of the
given constraints is a single residue/nucleotide and moreover,
the aligned fragments in all bands are exactly matched to the
constraint [i.e. l(Pi) = 1 for all 1 ≤ i ≤ r and  = 0].
In this simple model, a heuristic algorithm, which runs in
O(rkn4) time and consumes O(rn4) space, was designed to
find a CMSA of the input sequences, where n is the maximum
of the lengths of sequences. Later, Chin et al. (2003) and
Yu (2003) independently improved this heuristic to O(rk2n2)
time and O(rn2) space.
The so-called progressive method is used herein to design
an algorithm of O(rk2n2) time and O(rn2) space for effi-
ciently finding a favorable CMSA of the input sequences.
The method first designs a dynamic programming algorithm
to find an optimal constrained alignment of any two given
sequences and then use it as a kernel progressively to align
Bioinformatics 20(14) © Oxford University Press 2004; all rights reserved. 2309
