 2
 
摘要 
 
本研究計劃為期三年，以進行研究發展複速率數位信號處理的技術，可應
用於音訊信號與影像信號的壓縮與編碼。研究重點在於研發已被視為數位音訊
信號與影像信號壓縮與編碼技術所需的副頻帶濾波器組理論與設計技術。此外
傳統上在考慮設計副頻帶濾波器組為得到線性相位響應，皆使用濾波器係數具
有某種對稱性之有限脈衝響應濾波器，但是此種線性相位有限脈衝響應濾波器
所產生之相位延遲卻是固定地隨著濾波器係數之長度增加而增加，導致整體濾
波器組之輸出信號之相位延遲過高而不適合於實際應用之需求。因此研究設計
具有線性相位且低相位延遲之副頻帶濾波器組，是本研究計劃之一重點。此外
傳統上在考慮設計副頻帶濾波器組為濾波器係數為連續值，對於硬體設計與執
行運算將產生困難，因此研發具有線性相位且係數為 2之冪次方之副頻帶濾波
器組理論與設計技術，也是本研究計劃之一重點。 
     在第一年研究計劃期間，我們針對具有線性相位且低相位延遲之副頻帶
濾波器組理論與設計技術加以研究分析，發展以最小絕對值誤差準則（L1）的
無限脈衝響應(IIR)濾波器為架構的副頻帶濾波器組的設計理論，並推導相關
的設計技術。在第二年研究期間，我們發展以最小尖波誤差準則（L∞）的具有
線性相位且低相位延遲之副頻帶濾波器組理論與設計技術。研究重點在於以無
限脈衝響應(IIR)濾波器為架構的副頻帶濾波器組在最小尖波誤差準則（L∞）
之最佳設計的理論推導，根據此數學理論發展設計此副頻帶濾波器組之技術。
在第三年研究期間，我們發展以最小尖波誤差準則（L∞）的具有線性相位且係
 4
 
Abstract 
 
Due to the fact that multimedia information becomes a necessary part of 
modern life, processing the audio or image signals of multimedia information has 
been viewed as an important research work. To deal with the difficulty of large data 
capacity required for transmitting multimedia signals, one of the possible remedies 
is to develop advanced digital signal processing technology for reducing the 
required information regarding the audio and image signals. In other words, the 
techniques of bandwidth compression and decompression, coding and decoding 
should be considered. Using subband filter banks has been recognized as an 
efficient approach for achieving the above purposes. Most of conventional design 
techniques consider the design of filter banks using finite impulse response (FIR) 
filters to keep the linear phase response. However, the system delay of the designed 
filter bank is determined by the lengths of the FIR filters used; hence, the long 
overall system delay of a filter bank with linear-phase FIR analysis filters may 
prohibit practical applications for processing multimedia signals. Moreover, 
conventional design techniques consider the design of filter banks with continuous 
filter coefficients. In practice, hardware implementation for the above conventional 
FIR filter banks generally require large and complicated digital circuits . To achieve 
circuit complexity reduction or to speed up filtering operation besides concern for 
the overall filtering performance, it is preferable to design these IIR filters with 
coefficients restricted to powers-of-two in some optimal sense. Therefore, it is 
worth investigating the design of infinite impulse response (IIR) filter banks with 
low group delay and powers-of-two coefficients. In this three-year research project, 
we will focus on the development of design theory for IIR subband filter banks 
with low group delay and powers-of-two coefficients. Based on several useful 
optimization criteria, we will develop efficient techniques for designing the IIR 
 
CHAPTER 1     INTRODUCTION 
 
For the subband coding of speech and audio signals, the most appropriate 
decomposition must consider the critical bands of the ear. It has been mentioned in 
[1] that these critical bands have nonuniform bandwidths. To satisfy this 
requirement, a nonuniform-division filter (NDF) bank is usually considered. 
Recently, NDF banks with linear-phase (LP) characteristics have been widely used 
to achieve the goals of critical band analysis for applications in spectral analysis, 
coding, enhancement, speech recognition and audio signals. 
    In the literature, the authors in [2] have presented the basic theory regarding 
the principle and related conditions of perfect reconstruction for NDF banks. 
Methods for designing the NDF banks were also proposed in [2]. However, solving 
the resulting design problem with nonlinear constraints is not an easy task. A 
different structure for NDF banks using finite impulse response (FIR) filters with 
complex coefficients was introduced in [3] and a design method based on the use of 
pseudo-QMF was also presented. Recently, one of the authors proposed a structure 
for two-channel NDF banks and presented design methods for optimally designing 
NDF banks using the least-absolute (L1) error [4, 5], least-squares (L2) error [6, 7], 
and minimax ( ) error criteria [8, 9], respectively. Although the NDF bank 
designs in [5, 7] were developed using infinite impulse response (IIR) analysis 
filters, the designed IIR NDF banks suffer from magnitude distortion and phase 
distortion. To achieve approximately LP response without magnitude distortion, a 
design technique for IIR NDF banks using real allpass analysis and synthesis filters 
was presented in [10]. 
∞L
    To either achieve circuit complexity reduction or speed up filtering operation 
implementation in addition to concern for the overall system performance of an IIR 
NDF bank, it is preferable to design an IIR NDF bank with signed powers-of-two 
 6
 8
banks using real IIR DAFs with SPOT filter coefficients is presented. We consider 
the design problem formulated by using the minimax error criteria on phase 
approximations for the IIR DAFs and utilize a linearization scheme to approximate 
the related phase errors. This results in a sequence of linear Chebyshev 
approximation problems. Each of the linear Chebyshev approximations provides 
the required increment for updating filter coefficients during each iteration. Based 
on the well-known algorithm developed by Lim, Lee, Chang, and Yang [17] 
(termed as LLCY algorithm) in conjunction with the CORDIC algorithm of [14], a 
systematic approach is developed to minimize the peak phase approximation errors 
of the analysis filters in the SPOT angle space. The LLCY algorithm is performed 
to update filter coefficients according to the WLS criteria and then the CORDIC 
algorithm is implemented to convert each of the updated filter coefficients to the 
SPOT representation. Satisfactory IIR LP NDF banks with SPOT coefficients can 
be designed in a few iterations. 
This report is organized as follows. Chapter 2 formulates the associated design 
problem. In Chapter 3, we develop a design technique for solving the design 
problem. Chapter 4 presents some design examples for illustration and comparison. 
Finally, we conclude the paper in Chapter 5. 
 
 
 
 
 
 
 
 
 
 
 
 
           )()()()( 1
)(
1
1
0
)(
0
1
10
ωωωωωωωω jj
LL
jj
LL eHeHeHeH
spsp −−−− =                  (7) 
for ωp ≦  ω ≦  ωs. Hence, the conditions required for achieving perfect 
reconstruction, i.e., , are as follows:  ωω djgj eeT −=)(
PR1: , where kωω djkj eeT −=)(ˆ d = gd – G0,  for πω ≤≤0 , 
PR2: , πωωω        0,)(0 ≤≤= sj foreH
PR3: ,  pj foreH ωωω    0    0,)(1 ≤≤=
PR4: 
0 1
( ) ( )1 1
0 0 1 1( ) ( ) ( ) ( ),p s p s
j jj j
pLL LLH e H e H e H e for
ω ω ω ω ω ωω ω
sω ω ω− − − −= ≤ ≤ .         (8) 
2.2. IIR DAF Based Two-Channel Linear-Phase NDF Structure [10] 
    H0(z) and H1(z) of Figure 1 are constructed as follows: 
( ) ( ) ( )
( ) ( )
( ) ( ) ( ) ( )
1 2
0
0 1 2
0
1 2 1 2
0
2
2
cos exp
2 2
j j j
j j
LL
H e A e A e
LL
e e
LL j
ω ω ω
θ ω θ ω
θ ω θ ω θ ω θ ω
⎡ ⎤= +⎣ ⎦
⎡ ⎤= +⎣ ⎦
− +⎛ ⎞ ⎛= ⋅ ⋅⎜ ⎟ ⎜⎝ ⎠ ⎝
⎞⎟⎠
           (9) 
             
( ) ( ) ( )
( ) ( )
( ) ( ) ( ) ( )
1 2
1
1 1 2
1
1 2 1 2
1
2
2
sin exp
2 2
j j j
j j
LL
H e A e A e
LL
e e
j LL j
ω ω ω
θ ω θ ω
θ ω θ ω θ ω θ ω
⎡ ⎤= −⎣ ⎦
⎡ ⎤= −⎣ ⎦
− +⎛ ⎞ ⎛= ⋅ ⋅⎜ ⎟ ⎜⎝ ⎠ ⎝
⎞⎟⎠
         (10) 
where the IIR DAFs A1(z) and A2(z) have frequency responses given by 
( ) ( )
( )
( )
( ) ( )
1
1
11
1
*1
10
1
1
1
0
N
jn
jN j
jjNj n
N j
jn
n
a n e e D e
A e e e
D ea n e
ω ω ω
θ ωωω
ωω
−
− =
−
=
= =
∑
∑
=             (11) 
and        ( ) ( )
( )
( )
( ) ( )
2
2
22
2
*2
20
2
2
2
0
N
jn
jN j
jjNj n
N j
jn
n
a n e e D e
A e e e
D ea n e
ω ω ω
θ ωωω
ωω
−
− =
−
=
= =
∑
∑
= ,          (12) 
with orders N1 and N2, respectively. Figure 3 shows the analysis portion of the 
proposed two-channel NDF bank structure. Substituting (9) and (10) into (6) yields 
 10
where )(ωφi  given by 
( ) ( )( )
( ) ( )
( ) ( )
1 1
1
= / 2
sin
= tan      , 1, 2
1 cos
i
i
i i i
N
i
n
N
i
n
N
a n n
i
a n n
φ ω ω θ ω
ω
ω
− =
=
− +
⎡ ⎤⎢ ⎥⎢ ⎥− =⎢ ⎥+⎢ ⎥⎣ ⎦
∑
∑
                 (20) 
represents the phase of Di(ω) in (11) and (12), for i = 1, 2. The coefficients ai(0), 
for i = 1, 2, are set to one without loss of generality. Substituting (19) and (20) into 
(13) yields the corresponding phase response of the IIR NDF bank as follows: 
            θT(ω) = – (N1 + N2) ω – 2( )()( 21 ωφωφ + ).                    (21) 
From (14) and (21), we observe that the two-channel IIR NDF bank achieves the 
perfect reconstruction with group delay kd = N1 + N2 and without magnitude 
distortion if 
            0)()( =+ ωφωφ 21 .                                       (22) 
The conditions shown by (17) and (18) leads to the following conditions on )(ωφi  
2 1,    ,2))(()( =+−= iPNP idii ωωω                            (23) 
Based on (22) and (23), the real SPOT coefficients ai(n) of the IIR DAFs Ai(z), i = 
1, 2 and n = 1, 2, …, Ni, are to be found for solving the minimax design problem as 
follows: 
          Minimize ,
)cos()(1
)sin()(
tan
)cos()(1
)sin()(
tan
||)()(||||)()(||
2
2
1
1
1
2
1
2
1
1
1
1
1
1
3
222111
⎟⎟
⎟⎟
⎟⎟
⎠
⎞
⎜⎜
⎜⎜
⎜⎜
⎝
⎛
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎣
⎡
+
+
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎣
⎡
+
+−+−
∑
∑
∑
∑
=
=−
=
=−
N
n
N
n
N
n
N
n
nna
nna
nna
nna
PP
ω
ω
ω
ω
γ
ωωφγωωφγ
  (24) 
where ||x|| denotes the Chebyshev norm of x. The parameters γ1, γ2, and γ3 represent 
the relative weights between the three peak error terms. 
 
 
 
 
 12
Consequently, an equivalent minimization problem of (24) can be obtained as 
follows: 
               Minimize { γ1Q1(ω)+ γ2Q2(ω)+ γ3R(ω) }.                             (30) 
We solve (30) through an approximation approach in conjunction with an iterative 
process. At the kth iteration, we construct the following function: 
                
( ) ( )
( )
' '
1
'
1
( ) sin( ) cos( )
( , )      , 1, 2
( ) cos( ) sin( ) 1
i
i
N
ik i i
n
i ik N
ik i
n
a n n P n P
Apx i
a n n P n
ω ω ω ω
ω
ω ω ω
=
=
⎡ ⎤+ ⋅ +⎣ ⎦= =
⎡ ⎤− ⋅ +⎣ ⎦
∑
∑
a      (31) 
and the Ni×1 gradient vector of Apxi(aik, ω) is given by 
          ∇Apxi(aik, ω) = [ ψi(ω,1) ψi(ω,2) …. ψi(ω,Ni) ]T,                         (32) 
where ψi(ω, j) = )(/),( jaApx ∂∂ ikiki ωa denotes the jth gradient component of Apxi(aik, 
ω), aik = [aik(1), aik(2), …., aik(Ni)]T represents the SPOT coefficient vector obtained 
at the kth iteration for the IIR DAFs Ai(z), i = 1, 2. Moreover, we construct 
( )
( ) ( ) ( ) ( ) ( ) ( ) ( ) ( )
( ) ( ) ( ) ( ) ( ) ( ) ( ) ( )
2 1 1 2
1 2 1 2
2 1 1 2
1 1 1 1
1 2
1 2 1 2
1 1 1 1
1 cos sin 1 cos sin
, ,
1 cos 1 cos sin sin
N N N N
k k k k
n n n n
T k k N N N N
k k k k
n n n n
a n n a n n a n n a n n
Apx
a n n a n n a n n a n n
ω ω ω
ω
ω
ω ω ω
= = = =
= = = =
⎛ ⎞ ⎛ ⎞+ + +⎜ ⎟ ⎜ ⎟⎝ ⎠ ⎝ ⎠= ⎛ ⎞⎛ ⎞ ⎛ ⎞⎛+ + −⎜ ⎟⎜ ⎟ ⎜ ⎟⎜⎝ ⎠⎝ ⎠ ⎝ ⎠⎝
∑ ∑ ∑ ∑
∑ ∑ ∑ ∑
a a
ω ⎞⎟⎠
 (33) 
and the (N1 + N2)×1 gradient vector of ApxT(a1k,a2k,ω) is given by 
   ∇ApxT(a1k,a2k,ω)=[ ψT1(ω,1) ψT1 (ω,2) … ψT1 (ω,N1) ψT2(ω,1)… ψT2 (ω,N2) ]T, (34) 
where ψT1(ω, j) = )(/),,( 121 jaApx kkkT ∂∂ ωaa  denotes the jth gradient component of 
ApxT(a1k,a2k,ω) and ψT2(ω, j) = )(/),,( jaApx 221 kkkT ∂∂ ωaa  the (N1+ j)th gradient 
component of ApxT(a1k,a2k,ω). 
Let Ω1d = [ω1=0, ω2, …, ωS1=ωp], Ω2d = (ωS1=ωp, ωS1+1, …ωS1+S2+1=ωs), and 
Ω3d = [ωS1+S2+1=ωs, ωS1+S2+2, …. , ωS1+S2+S3=π] represent the three dense grids of 
frequency bands in [0, π]. Each of them has grid points uniformly distributed in the 
individual frequency band. The design process of the proposed technique is then 
performed on Ωd = Ω1dUΩ2dUΩ3d with S = S1 + S2 + S3 grid points. If the number 
of grid points is sufficiently large, i.e., Ωd is sufficiently close to { }0ω ω πΩ = ≤ ≤ , 
the obtained best approximation solution of the objective function based on Ωd will 
 14
 16
    J = γ1(U1δa1k – s1)TWls1(U1δa1k – s1) + γ2(U2δa2k – s2)TWls2(U2δa2k – s2) + 
γ3(UTδa12k – sT)TWls3(UTδa12k – sT)                              (38) 
where Ui is a L×Ni matrix with the (l,n)th entry given by Ui(l,n) = ψi(ωl,n) , 1 ≤ l ≤ 
L, 1 ≤ n ≤ Ni, si is a L × 1 column vector with the lth entry given by si(l) = – Apxi(aik, 
ωl) , 1 ≤ l ≤ L, for i = 1,2. UT = [UT1  UT2] is a L×(N1+N2) matrix with the (l,n)th 
entry given by UT(l,n) = ψT1(ωl,n) , for 1 ≤ l ≤ L, 1 ≤ n ≤ N1, and UT(l,n) = 
ψT2(ωl,n) , for 1 ≤ l ≤ L, N1+1 ≤ n ≤ N1+N2, sT is a L × 1 column vector with the lth 
entry given by sT(l) = –ApxT(a1k, a2k, ωl), 1 ≤ l ≤ L, and Wlsi = diag{Wlsi(ω1), 
Wlsi(ω2), ….., Wlsi(ωL)} denotes the L × L diagonal matrix containing the required 
least-squares weighting function calculated on the set Ω = {ω1=0, ω2…., ωL=π} of 
the L frequency grid points for i = 1,2,3. Constructing two L×(N1+N2) matrices U11 
= [U1  01] and U22 = [U2  02], where 01 and 02 are two zero matrices with sizes 
L×N2 and L×N1, respectively, we further rewrite (38) as follows: 
  J = γ1(U11δa12k – s1)TWls1(U11δa12k – s1) + γ2(U22δa12k – s2)TWls2(U22δa12k – s2) + 
γ3(UTδa12k – sT)TWls3(UTδa12k – sT)                               (39) 
Clearly, the optimal solution for minimizing (39) is given by 
δa12k = (γ1U 11TWls1U11+γ2U 22TWls2U22+γ3UTTWls3UT)-1× 
(γ1U 11TWls1s1+γ2U 22TWls2s2+γ3UTTWls3sT)                           (40) 
The suitable least-squares weighting function Wlsi(ω), i =1, 2, 3, required in (40) for 
producing a quasi-equiripple design can be obtained by utilizing the LLCY 
algorithm presented in [17]. 
 
3.3 Signed POT Representation for Filter Coefficients Using the CORDIC 
Algorithm 
After obtaining the optimal filter coefficients at the kth iteration from the LLCY 
algorithm, we convert each of the filter coefficients to the SPOT representation. 
The CORDIC algorithm of [14] is adopted for this purpose since it possesses the 
main advantage of providing much denser discrete coefficient space in the SPOT 
the generalized EEAS-based CORDIC algorithm with TBS searching scheme is 
utilized to convert θ to the approximation  according to (44) as follows: θˆ
θˆ  =                (45) ( )∑−
=
−−− +++
1N
)(
1-
)(
1
)(
0
1- 1-10 2)(2)(2)(tan
A
d
0i
is
d
isis iii ααα L
 
3.4.  Determination of Initial Guess for the Filter Coefficient Vector 
To initiate the design process, we have to find an initial guess ai0 for the filter 
coefficient vector ai. An appropriate manner is to minimize the squared value of the 
numerator of (31), i.e., minimize 
2
1 1
)()]cos()())[sin((∑ ∑
= = ⎟⎟⎠
⎞
⎜⎜⎝
⎛ ′+′+
L
l
N
n
lillili
i
PnPnna ωωωω , i = 1, 2             (46) 
Let Xi be a L x Ni matrix whose entries are given by 
 18
llili )cos()()sin(),( nPnnlX ωωω ′+= ,      ,1 Ll ≤≤  iNn ≤≤1                     (47) 
Then, it is easy to show that minimizing (46) yields the required initial guess ai0 as 
follows: 
               ai0 = (XiTXi)–1XiTqi ,                                                          (48) 
where the L x 1 vector qi has entries given by qi(l) = – )(P li ω′ , Ll ≤≤1 .  
 
3.5.  Iterative Design Procedure 
Step 1: Determine the design parameters: the orders N1 and N2, wordlength W, 
number of subrotations NA, the number d of the SPOT terms, the relative weights γi, 
i = 1, 2, 3, passband edge frequency ωp  and the stopband edge frequency ωs. Find 
an initial guess ai0 for the filter coefficient vector ai = [ai(1),ai(2), …, ai(Ni)]T, i = 1, 
2, from (48) and set the iteration number k = 0. 
Step 2: Use the generalized EEAS-based CORDIC algorithm with the TBS 
searching scheme as described in Subsection 3.3 to convert each of the filter 
coefficients in aik to a SPOT form. 
Step 3: Perform a test for stopping the iteration process. We set a stopping criterion 
 20
go to Step 2. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
using the technique of [10], a GA, and the proposed technique are shown in Table 1 
for comparison. Table 3 lists the SPOT coefficients obtained after 2 iterations for 
A1(z) and A2(z) by using the proposed technique. The corresponding magnitude 
responses of the designed Hi(ejω) are shown in Figure 4. The resulting phase error 
and group delay deviation of the designed NDF bank are depicted in Figures 5 and 
6, respectively. Figure 7 plots the variation of the designed filter-bank response. As 
to the stability of the designed IIR DAFs A1(z) and A2(z), we find that the values of 
θi(π ) –θi(0) are about -21π  and -22π  for i = 1 and 2, respectively. This 
indicates that both the designed IIR DAFs A1(z) and A2(z) are stable according to 
the stability constraints shown in Section 2.2. We note that the proposed technique 
provides satisfactory design results as compared to [10] and a GA. 
   Example 2: This example is the similar to that given by [10, Ex. 2]. We use the 
same specifications for this design: the real IIR DAFs A1(z) and A2(z) with orders 
N1 and N2 equal to 31 and 32, respectively, the low-pass analysis filter H0(z) with 
ωp = 0.12π and ωs = 0.28π. The parameters used for this design are listed as follows: 
L0 = 1, L1 = 4; η1 = 0.13, η2 = 0.13, η3 = 0.08; γ1 =1, γ2 =1, γ3 = 300; and W = 10, d = 
3, NA = 2. The significant design results of using the technique of [10], a GA, and 
the proposed technique are shown in Table 2 for comparison. Table 4 lists the SPOT 
coefficients obtained after 3 iterations for A1(z) and A2(z), respectively, by using the 
proposed technique. The corresponding magnitude responses of the designed Hi(ejω) 
are shown in Figure 8. The resulting phase error and group delay deviation of the 
designed NDF bank are depicted in Figures 9 and 10, respectively. Figure 11 plots 
the variation of the designed filter-bank response. As to the stability of the designed 
IIR DAFs A1(z) and A2(z), we find that the values of θi(π ) –θi(0) are about –31π  
and –32π  for i = 1 and 2, respectively. This indicates that both the designed IIR 
DAFs A1(z) and A2(z) are stable according to the stability constraints shown in 
Section 2.2. Again, the simulation results show that the proposed technique 
provides very satisfactory performance. 
 
 
 
 22
 24
 
CHAPTER 6  REFERENCES 
 
[1] Kovacevic, J., “Filter banks and wavelets: Extensions and applications”. Ph.D. 
dissertation, Columbia University, New York, U.S.A., Oct. 1991. 
[2] Nayebi, K., Barnwell, T.P., and Smith, M.J.T., “Nonuniform filter banks: a 
reconstruction and design theory,” IEEE Trans. Signal Processing, vol. 41, no. 3, 
Mar. 1993, pp. 1114-1127. 
[3] Wada, S., “Design of nonuniform division multirate FIR filter banks,” IEEE 
Trans. Circuits and Systems-II – Analog and Digital Signal Processing, vol. 42, no. 
2, Feb. 1995, pp. 115-121. 
[4] Lee, J.-H. and Huang, S.-C., “Design of two-channel nonuniform-division 
maximally decimated filter banks using L1 criteria,” IEE Proc. – Vision, Image and 
Signal Processing, vol. 143, no. 2, Apr. 1996, pp. 79-83. 
[5] Lee, J.-H. and Chung, W.-H., “Design of two-channel low-delay IIR 
nonuniform-division filter banks using L1 error criteria,” IEE Proc. – Vision, Image 
and Signal Processing, vol. 149, no. 5, Oct. 2002, pp. 304-314. 
[6] Lee, J.-H. and Tang, D.-C., “Optimal design of two-channel 
nonuniform-division FIR filter banks with -1, 0, and +1 coefficients,” IEEE Trans. 
Signal Processing, vol. 47, no. 2, Feb. 1999, pp. 422-432. 
[7] Lee, J.-H. and Niu, I.-C., “Design of two-channel IIR nonuniform-division filter 
banks with arbitrary group delay,” IEE Proceedings-Vision, Image and Signal 
Processing, Vol.147, no.6, Dec. 2000, pp.534-542. 
[8] Lee, J.-H. and Tang, D.-C., ‘Minimax design of two-channel 
nonuniform-division FIR filter banks,” IEE Proc. – Vision, Image and Signal 
Processing, vol. 145, no. 2, Apr. 1998, pp. 88-96. 
[9] Lee, J.-H. and Tang, D.-C., “Minimax design of two-channel 
nonuniform-division FIR filter banks with -1, 0, and +1 coefficients,” IEEE Trans. 
 26
algorithm for quasi-equiripple FIR and IIR digital filter design,” IEEE Trans. 
Signal Processing, vol. 40, no. 3, Mar. 1992, pp. 551-558. 
[18] Ikehara, M., Funaishi, M., and Kuroda, H., “Design of complex all-pass 
networks using Remez algorithm,” IEEE Trans. Circuits and Systems II: Analog 
and Digital Signal Processing, vol. 39, no. 8, Aug. 1992, pp. 549-556. 
[19] Vaidyanathan, P. P., Multirate Systems and Filter Banks, Englewood Cliffs, 
New Jersey: Prentice-Hall, 1992. 
[20] Cheney, E. W., Introduction to Approximation Theory, New York: 
McGraw-Hill, 1966. 
[21] Wu, C. S. and Wu, A. Y., “A novel trellis-based searching scheme for 
EEAS-based CORDIC algorithm,” Proc. of IEEE Int’l Conference on Acoustics, 
Speech, and Signal Processing, vol. 2, pp. 1229-1232, Salt Lake city, UT, U.S.A, 
Apr. 2001. 
[22] Nelder, J. A. and Meade, R., “A simplex method for function minimization,” 
Comput. J., vol. 7, 1965, pp. 308-313. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 3: The designed filter coefficients for Example 1 
 
n  ( )1a n  ( )2a n  
0 1.00000000000000 1.00000000000000 
1 
0.15201900237530=tan{tan–1(2–2+2–4–2–0) 
+tan–1(2–0–2–4) } 
-0.15203619909502=tan{tan–1(2–2−2–7–2–5) 
+tan–1(−2–2−2–3)}  
2 
-0.17782527384451=tan{tan–1(2–5+2–7+2–2) 
+tan–1(–2–1+2–7)} 
0.20096433945057=tan{tan–1(2–7+2–9+2–3) 
+tan–1(2–4+2–9)} 
3 
-0.14420477077450=tan{tan–1(2–7+2–9+2–4) 
+tan–1(–2–1+2–5+2–2)} 
0.08660770383258=tan{tan–1(−2–1+2–5+2–7) 
+tan–1(2–4+2–7+2–1)} 
4 
0.02749262462333=tan{tan–1(2–1+2–8–2–5) 
+tan–1(2–4–2–9–2–1)} 
-0.02681841820719=tan{tan–1(−2–5+2–9–2–3) 
+tan–1(2–3+2–9)} 
5 
0.09181298598234=tan{tan–1(–2–0+2–9+2–0) 
+tan–1(2–3–2–8–2–5)} 
-0.03913575214024=tan{tan–1(−2–0+2–5+2–1) 
+tan–1(2–1−2–6–2–4)} 
6 
0.02670638385291=tan{tan–1(2–0+2–0+2–9) 
+tan–1(–2–0+2–3–2–0)} 
-0.00460064265227=tan{tan–1(2–0+2–4–2–7) 
+tan–1(−2–4−2–9–2–0)} 
7 
-0.03606836973045= tan{tan–1(2–3+2–5–2–8) 
+tan–1(2–4–2–9–2–2)} 
0.00918715234165=tan{tan–1(2–2+2–7–2–9) 
+tan–1(−2–2+2–8)} 
8 
-0.02783677789296= tan{tan–1(2–2−2–8–2–5) 
+tan–1(2–8+2–9–2–2)} 
0.00193124467210=tan{tan–1(2–3−2–9–2–6) 
+tan–1(2–6+2–8–2–3)} 
9 
0.00417427602400=tan{tan–1(2–4+2–7–2–0) 
+tan–1(2–0−2–4)} 
0.00076002054431=tan{tan–1(2–2+2–8+2–0) 
+tan–1(−2–2−2–9–2–0)} 
10 
0.00974532719175=tan{tan–1(2–4+2–8–2–6) 
+tan–1(−2–7−2–9–2–5)} 
0.00559412034643=tan{tan–1(2–2+2–9–2–5) 
+tan–1(2–5+2–8–2–2)} 
11 
0.00104254478667=tan{tan–1(2–0−2–4–2–9) 
+tan–1(2–4+2–8–2–0)} 
0.00180126510729=tan{tan–1(2–1+2–8+2–0) 
+tan–1(−2–1+2–9–2–0)} 
12 
0.00271526670828=tan{tan–1(2–0+2–6+2–0) 
+tan–1(−2–0−2–9–2–0)} 
-0.00695534571449=tan{tan–1(2–0+2–0–2–8) 
+tan–1(−2–0−2–5–2–0)} 
13 
0.00605143721634=tan{tan–1(2–2+2–6+2–0) 
+tan–1(−2–0−2–2)} 
-0.00613239750392=tan{tan–1(2–6+2–8+2–1) 
+tan–1(−2–5+2–8–2–1)} 
14 
-0.00227573087112=tan{tan–1(2–2+2–9+2–0) 
+tan–1(−2–2−2–7–2–0)} 
0.00287023402872=tan{tan–1(2–0+2–5–2–7) 
+tan–1(−2–6−2–9–2–0)} 
15 
-0.01084898997033=tan{tan–1(2–2+2–5–2–8) 
+tan–1(−2–5−2–7–2–2)} 
0.00672354667087=tan{tan–1(2–0+2–5–2–7) 
+tan–1(−2–7−2–9–2–0)} 
16 
-0.00437367593795=tan{tan–1(2–0+2–7–2–3) 
+tan–1(2–3−2–6–2–0)} 
0.00125351940262=tan{tan–1(2–1+2–2–2–9) 
+tan–1(2–2+2–8–2–0)} 
17 
0.00914416345192=tan{tan–1(−2–8−2–9–2–2) 
+tan–1(2–2+2–6)} 
-0.00486858620821=tan{tan–1(2–0−2–9) 
+tan–1(−2–0−2–7)} 
18 0.01056593012828=tan{tan–1(2–0+2–5–2–8) -0.00437367593795=tan{tan–1(2–0+2–7–2–3) 
 28
 
Table 4: The designed filter coefficients for Example 2 
 
n  
      
( )1a n  ( )2a n  
0   1.00000000000000 1.00000000000000 
1      0.40032803753075=tan{tan–1(−2–1+2–9+2–5)  
+tan–1(2–4+2–8+2–0)} 
 −0.40036524002875=tan{tan–1(−2–3−2–7–2–0) 
+tan–1(2–1+2–8)} 
2     0.15422557749873=tan{tan–1(2–2−2–9−2–5)   
+tan–1(−2–4+2–9)} 
   0.00607325868286=tan{tan–1(2–5+2–7+2–1) 
+tan–1(−2–1−2–5)} 
3 –0.00647876325037=tan{tan–1(2–0+2–4−2–6) 
+tan–1(−2–4+2–9−2–0)} 
0.06582569501165=tan{tan–1(2–3+2–7) 
+tan–1(−2–4−2–8)} 
  4 –0.09421463271014=tan{tan–1(2–3+2–5−2–7) 
+tan–1(−2–2+2–8)} 
0.06433434363434=tan{tan–1(2–3–2–7−2–5) 
+tan–1(2–7+2–9−2–5)} 
  5 –0.11546694391780=tan{tan–1(2–7+2–9−2–5) 
+tan–1(−2–4–2–5)} 
0.04186615687402=tan{tan–1(2–1+2–3−2–9) 
+tan–1(–2–4–2–8−2–1)} 
  6 –0.08897610143044=tan{tan–1(2–2+2–9−2–4) 
+tan–1(−2–5–2–9−2–2)} 
0.01707324302694=tan{tan–1(2–0+2–4−2–6) 
+tan–1(–2–7–2–8−2–0)} 
  7 –0.04154172869470=tan{tan–1(2–2+2–6−2–9) 
+tan–1(−2–4+2–8−2–2)} 
0.00000000000000=tan{tan–1(2–0+2–0−2–0) 
+tan–1(–2–0)} 
  8 0.00192962884795=tan{tan–1(2–3+2–9−2–6) 
+tan–1(−2–3+2–6)} 
–0.00670180460051=tan{tan–1(2–0–2–6−2–3) 
+tan–1(2–3+2–8−2–0)} 
  9 0.02660928014044=tan{tan–1(2–6+2–9+2–0) 
+tan–1(2–5+2–8−2–0)} 
–0.00554216519693=tan{tan–1(2–2+2–9−2–6) 
+tan–1(−2–2+2–7)} 
 10 0.03032052705604=tan{tan–1(2–2+2–8–2–4) 
+tan–1(–2–5–2–8−2–3)} 
–0.00153313610176=tan{tan–1(2–0+2–2−2–7) 
+tan–1(−2–2+2–8−2–0)} 
 11 0.02055247117528=tan{tan–1(2–5−2–8–2–1) 
+tan–1(2–1–2–9)} 
0.00110298711315=tan{tan–1(2–0+2–8−2–3) 
+tan–1(2–3−2–9−2–0)} 
12 0.00796682564011=tan{tan–1(2–0+2–8–2–6) 
+tan–1(2–5–2–8–2–0)} 
0.00060258972349=tan{tan–1(2–0+2–1−2–9) 
+tan–1(−2–1+2–8−2–0)} 
 13 0.00038971102014=tan{tan–1(2–0+2–8+2–0) 
+tan–1(−2–0–2–9–2–0)} 
−0.00202695212909=tan{tan–1(2–0−2–7−2–5) 
+tan–1(2–5+2–8−2–0)} 
 14 −0.00038971102014=tan{tan–1(2–0+2–9+2–0) 
+tan–1(−2–0–2–8–2–0)} 
−0.00464716631773=tan{tan–1(−2–6+2–9−2–1) 
+tan–1(2–1+2–7)} 
 15 0.00288146594580=tan{tan–1(2–6+2–8+2–0) 
+tan–1(−2–6+2–9–2–0)} 
−0.00528994320396=tan{tan–1(2–2+2–9+2–0) 
+tan–1(−2–2−2–6−2−0)} 
 16 0.00535288623723=tan{tan–1(2–2+2–4−2–9) 
+tan–1(−2–4+2–7–2–2)} 
−0.00348868901608=tan{tan–1(2–0+2–3−2–6) 
+tan–1(−2–3+2–7−2–0)} 
 17 0.00396005143426=tan{tan–1(2–0−2–9−2–7) 
+tan–1(2–6+2–9–2–0)} 
−0.00038971102014=tan{tan–1(2–0+2–9+2–0) 
+tan–1(−2–0−2–8−2–0)} 
 18 −0.00110941136193=tan{tan–1(2–0−2–8−2–3) 0.00276575363185=tan{tan–1(2–0+2–4−2–9) 
 30
×)(nx
)(0 zH
)(1 zH
)(0 nx
)(1 nx
0:1 L
1:1 L
)(0 zB
)(1 zB 1:L
1:L
)(0 ns
)(1 ns
)(0 nu
)(1 nu
nje π  
1(a) 
 
 
 
)(0 zB
)(1 zB
L:1
L:1
)(0 ny
)(1 ny
1:0L
1:1L ×
nje π
)(0 nv
)(1 nv
)(0 zF
)(1 zF
+
)(ˆ0 nx
)(1ˆ nx
)(ˆ nx
 
1(b) 
 
Figure 1. The two-channel NDF bank system. (a) Analysis system. (b) Synthesis 
system. 
 
 
 
 
 
 
 
 32
0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5
-60
-50
-40
-30
-20
-10
0
Normailized Frequency
M
ag
ni
tu
de
 R
es
po
ns
e 
in
 d
B
 
 
Proposed H0(e
jω )/(LL0)
1/2
Proposed H1(e
jω )/(LL1)
1/2
H0(e
jω)/(LL0)
1/2 of [10]
H1(e
jω)/(LL1)
1/2 of [10]
H0(e
jω)/(LL0)
1/2 of GA
H1(e
jω)/(LL1)
1/2 of GA
 
 
Figure 4. The magnitude responses of the designed analysis filters for Example 1. 
0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5
-8
-6
-4
-2
0
2
4
6
8
10
x 10
-3
Normailized Frequency
Ph
as
e 
D
ev
ia
tio
n 
in
 R
ad
ia
ns
 
 
Proposed Method
Method of [10]
GA
 
 
 34
Figure 7. The variation of the designed NDF bank responses for Example 1. 
0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5
-70
-60
-50
-40
-30
-20
-10
0
Normailized Frequency
M
ag
ni
tu
de
 R
es
po
ns
e 
in
 d
B
 
 
Proposed H0(e
jω )/(LL0)
1/2
Proposed H1(e
jω )/(LL1)
1/2
H0(e
jω)/(LL0)
1/2 of [10]
H1(e
jω)/(LL1)
1/2 of [10]
H0(e
jω)/(LL0)
1/2 of GA
H1(e
jω)/(LL1)
1/2 of GA
 
Figure 8. The magnitude responses of the designed analysis filters for Example 2. 
0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5
-0.02
-0.015
-0.01
-0.005
0
0.005
0.01
0.015
0.02
Normailized Frequency
Ph
as
e 
D
ev
ia
tio
n 
in
 R
ad
ia
ns
 
 
Proposed Method
Method of [10]
GA
 
 36
