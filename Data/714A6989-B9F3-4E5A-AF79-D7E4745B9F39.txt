 1
行政院國家科學委員會專題研究計畫成果報告 
一種應用於 H.264 視訊之二次預測分數像素運動估測方法 
計畫編號：NSC 94-2213-E-194-031 
執行期限：94 年 8 月 1 日至 95 年 7 月 31 日 
主持人：柳金章   執行機構及單位名稱: 國立中正大學資訊工程學系 
計畫參與人員：李偉僑，王詩婷，鍾尚倫，梁秉洋 
 
一、中文摘要 
 
 H.264是由ITU-T和ISO/IEC一起製訂的
一種新視訊編碼標準，其中1/4像素精確度運
動估測和補償可提高視訊編碼的壓縮效能。
在獲得較好壓縮效能的同時，分數像素運動
估測所需要的計算複雜度也相對提高。在傳
統的分數像素全域搜尋方法中，做到1/2像素
精確度運動估測需檢查8個搜尋點，而1/4像素
精確度則需要檢查16個搜尋點。現今許多快
速整數運動估測法已可將原本龐大的運算量
降到接近10個搜尋點左右，因此一個能夠降
低分數像素運動估測運算量的演算法變的很
有需要。在本研究中，我們提出一個應用於
H.264視訊之二次預測分數像素運動估測方
法。 
在本研究中，對一個可變大小的區塊採
用一個退化二次方程式直接來預測一個最佳
量化 1/4 精確度運動向量位置。根據用傳統 2
階段全域分數像素搜尋法所得的運動向量和
由所提方法之最佳量化運動向量之間分量差
值絕對值之和的分佈機率，在 1/4 像素精確度
我們使用小鑽石搜尋模式 (SDSP) 來找出最
後運動估測結果，且 SDSP 只使用很少次。另
外，如果用所提預測方法所得的最佳量化運
動向量和用中間軸分數像數搜尋法(CBFPS)
所預測的最佳量化運動向量都是(0,0)的話，就
直接決定(0,0)為 1/4 像素精確度的運動向量
(不需再使用 SDSP)。 
 
關鍵詞：H.264/AVC 視訊傳輸、二次預測、
運動估測、整數像素運動估測、分數像素運
動估測。 
 
Abstract 
 
The joint video term (JVT) of ISO/IEC 
MPEG and ITU-T VCEG develops a new 
standard for coding natural video images, 
namely, H.264, in which fractional-pixel motion 
estimation (ME) and compensation are used to 
achieve more accurate motion description and 
higher compression efficiency. However, the 
complexity of fractional-pixel ME will increase. 
At 1/4-pixel accuracy, if the full fractional-pixel 
ME search algorithm is employed, a total 
number of 16 fractional-pixel positions are 
required to be examined. But many fast 
integer-pixel ME search algorithms have 
decreased the search positions to about ten. To 
reduce the computation complexity of 
fractional-pixel ME is greatly desired. In this 
study, a quadratic prediction based 
fractional-pixel ME algorithm for H.264 is 
proposed.  
In this study, a “degenerate” quadratic 
function is proposed to directly determine the 
“best” quantized predictive motion vector (MV) 
at 1/4-pixel accuracy for a variable size block. 
Based on the partial probability distributions of 
the sum of absolute component differences 
between the best MV determined by the 
conventional 2-stage full ME search algorithm 
for 1/4-pixel accuracy and the “best” quantized 
predicted MV determined by the proposed 
scheme, a small diamond search pattern (SDSP) 
at 1/4-pixel accuracy is used to determine the 
final result and the SDSP will be applied within 
very few times. Additionally, if the best 
quantized predicted MV determined by the 
proposed scheme and that determined by the 
center biased fractional pixel search (CBFPS) 
algorithm are identically (0,0), then (0,0) is 
directly determined as the MV at 1/4-pixel 
accuracy for the variable size block, without 
applying the SDSP. 
 
 3
ME, and compensation)以消除視訊資料中存
在 於 前 後 張 視 訊 影 像 (video frame) 之
temporal redundancy 是現代視訊壓縮(編碼)
標準之最重要技術。運動估測（ME）有兩類，
第一類是 pixel based algorithms [4]，另一類
是 block-matching algorithms (BMAs) [5]。現
代視訊壓縮（編碼）標準通常是使用
block-matching algorithms (BMAs)，BMAs 通
常是在目前 video frame 中的一個 block 在其
對應的 reference video frame 的對應 block 附
近一定範圍內尋找到一個最相近的 block，並
將其相對位移差訂為運動向量(motion vector, 
MV)，兩個 blocks 的 block distortion measure
通常是使用 SAD （ the sum of absolute 
differences），其性能和 MSE（ the mean 
squared error）類似，但計算較為簡單。在現
有的視訊壓縮（編碼）標準中，運動估測通
常分為二大部分，第一部份是 integer-pixel
運動估測，第二部分是 fractional-pixel 運動
估測。運動估測所佔的時間會超過全部編碼
時間的 80％，這顯示運動估測的時間需要大
量減少，亦即非常需要提出有效率的運動估
測方法，以提升 H.264 視訊壓縮的編碼速
度。在本研究中，我們將提出一種使用於
H.264 視訊壓縮編碼系統之快速分數像素
（fractional-pixel）運動估測方法，以提昇
H.264 視訊壓縮編碼之速度。 
實現 block-based motion estimation 最簡
單的方法就是所謂的“全域搜尋”（full search）
[5]，但這種方式實在需要太多的計算時間，
因此有許多的快速運動估測方法被提出來，
用 以 降 低 運 動 估 測 的 計 算 時 間 。 在
integer-pixel motion estimation 方面共有兩
大類方法，第一大類為 fast lossy search 
integer-pixel motion estimation 方法，第二大
類為 fast lossless search integer-pixel motion 
estimation 方法。 
Fast lossy search integer-pixel motion 
estimation (ME) algorithms 大致可以再細分
為 4 類，第一分類為 fast search integer-pixel 
ME algorithms using a fixed set of search 
patterns，在此分類方法中通常使用 the 
unimodal error search assumption [6-8]，亦即
如果 search 位置朝向最佳位置移動時，則其
ME matching error 將 monotonically 減小。在
此類方法常使用一些固定的 search patterns，
最有名的方法有 the three-step search (TSS) 
[6]，the four-step search (4SS) [7]，the diamond 
search (DS) [8]等。第二分類為 fast search 
integer-pixel ME algorithms using 
multiresolution search，在此分類方法中，不
同 resolution 視訊影像的關係將充分利用，
wavelet-based multiresolution representation
是常用的配合技術[9-10]。第三分類是 fast 
search integer-pixel ME algorithms using 
subsampled pixels on matching error 
computations，在此分類方法中，subsampled 
video frames 用來做運動估測，以降低處理的
pixels 數量而加快速度[11-12]。第四分類是
fast search integer-pixel ME algorithms using 
spatio-temporal correction [13-15]。 
另外在 fast full search integer-pixel ME 
algorithms 方面亦可再細分為以下三類。第一
分類是 candidate elimination algorithms，通常
是利用一些簡單又有效的數學不等式將不可
能的 MV candidates 排除（不必計算）以降低
計算量。在 [16]中提出的 the successive 
elimination algorithm (SEA)是最原始的方
法，接著有許多 SEA 的改良方法提出以降低
計算量[16-18]。第二分類是 partial distortion 
elimination algorithms，其原理是每一次做
SAD 計算時，可以分為好幾部分做，例如一
個 16×16 block 可以用 4 個 4×4 blocks 依順序
計算。若部分計算後的 intermediate SAD 值
已超過目前已知的最小 SAD 值，則其餘的部
分計算就可以免除，以降低計算量[19-22]。
第三分類是 the winner-update strategy，這是
由 Chen，Hung，and Fuh [23]所提出的方法。 
由於較好的 fast search integer-pixel ME 
algorithms 已經可以在少於 10 個 search 
positions的條件下找到其對應的motion vector 
（MV）[24-25]，參照傳統的 fractional-pixel 
ME algorithms，需要搜尋 8 個 1/2-pixel 
positions, 16 個 1/4-pixel positions，24 個
1/8-pixel positions，…，意即 fractional-pixel 
ME 的搜尋計算量已經和 integer-pixel ME 的
搜尋計算量等量齊觀，因此發展一個有效率
（快速）之 fractional-pixel ME algorithm 是非
常需要的事，這也是本研究的主要目標。在
H.264 [3]，每個 block 的 motion vector 的決定
乃是先用 integer-pixel ME algorithm 決定最佳
之 integer-pixel 位置，接著再用 fractional-pixel 
 5
將提出一個 degenerate quadratic prediction 
function 以預測每一個 block 之最佳 MV。由
於在 integer-pixel ME algorithm 所產生的 the 
best integer-pixel MV 已經非常接近真實的
MV，fractional- pixel ME 的 search range 是 1
個 pixel 。 據 此 我 們 可 以 假 設 在 local 
fractional-pixel ME 的 search area 中， the 
matching error 應該非常 smooth。 
在 本 研 究 中 ， 我 們 所 使 用 的 the 
“degenerate” quadratic prediction function 定義
如下： 
,),( 22 EDyCyBxAxyxF ++++=  (2)
其中 A，B，C，D，E 是待決定的係數，x 及
y 是 search position 的 x 及 y local coordinates。
如 Fig. 1 所示，一個 local fractional-pixel ME 
search area (the search range 是 1 pixel)包含 9
個 integer-pixel search positions。除了特殊的
integer-pixel ME algorithm，諸如 the three step 
search (TSS)及 the four step search (FSS)，一般
而言，Fig. 1 中的 5 個 integer-pixel search 
positions，C，H1，H2，V1，及 V2 的 matching 
error 值都已經在先前執行的 integer-pixel ME 
algorithms 就已完成計算（已知），若這 5 個
已知的 integer-pixel search positions，C，H1，
H2，V1，及 V2 的 local coordinates 分別是（0，
0），（-1，0），（1，0），（0，-1）及（0，
1），而其對應的已知 matching error 值分別是
F(C) ， F(H1) ， F(H2) ， F(V1) ， F(V2) ，則
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
−+=
+−=
++=
+−=
=
.)(
,)(
,)(
,)(
,)(
2
1
2
1
EDCVF
EDCVF
EBAHF
EBAHF
ECF
 
為了簡化，可令 
⎪⎪⎩
⎪⎪⎨
⎧
−=
−=
−=
−=
),()(
),()(
),()(
),()(
1
2
1
2
CFVFL
CFVFK
CFHFJ
CFHFI
 
則我們可以得到： 
⎪⎪
⎪⎪
⎪⎪
⎩
⎪⎪
⎪⎪
⎪⎪
⎨
⎧
=
−=
+=
−=
+=
).(
,
2
,
2
,
2
,
2
CFE
LKD
LKC
JIB
JIA
 
根據在 local fractional-pixel search area
中 ， 我 們 所 提 的 “degenerate” quadratic 
prediction function F(x, y)是一個連續的函
數，為了求取函數 F(x, y)之最小值，F(x, y)
可分別對 x 及 y 做偏微分，並令這兩個偏微分
值為“0”。假設這兩個偏微分方程的解為（xp, 
yp），亦即（xp, yp）這個 fractional-pixel search 
position 有 最 小 matching error ， 則
⎩⎨
⎧
=+
=+
02
02
DCy
BAx
p
p  
但有兩個特殊狀況必須特別處理，（1）
如果 A＝0，則 xp 是無限大，（2）如果 C＝0，
則 yp 是無限大。因此這兩種狀況必須做特殊
調整如下： 
⎪⎩
⎪⎨
⎧
==
≠−=⇒=+
⎪⎩
⎪⎨
⎧
==
≠−=⇒=+
0.if  0,
 0, if ,
2
02
 
  0, if 0,
0, if  ,
2
02
 Cy
C
C
DyDCy
Ax
A
A
BxBAx
p
pp
p
pp
 
以上所求 the best predictive MV (xp, yp)的
兩個 local coordinates xp 及 yp 可以量化為 the 
best quantized predictive MV at 1/4-pixel 
accuracy 如下： 
⎪⎪
⎪⎪
⎪
⎩
⎪⎪
⎪⎪
⎪
⎨
⎧
<
≤<
≤<
≤≤
−<≤
<≤
−<
=
,0.625 if  0.75, 
0.625,0.375 if   0.5,
0.375,0.125 if   0.25,
0.125,0.125- if  ,0
0.125,0.375- if  0.25,-
-0.375,0.625- if   0.5,-
0.675, if  , 0.75-
p
p
p
p
p
p
p
p
x
x
x
x
x
x
x
x
 7
品質 PSNR、主觀的視訊品質評量，the average 
encoding time per frame, the average ME time 
per frame, the average fractional-pixel ME time 
per frame, the average number of search 
positions per fractional-pixel ME, the average 
bit rate 等。部分實驗結果顯示於 Tables 2-4。 
 
四、結論與討論 
 
根據實驗結果顯示，所提方法在各種情
況下均優於比較的現有方法，除了平均 PSNR
及 bit rate 外，其餘各項性能度量也大體上都
較優良，這證明所提方法的可適性。 
 
五、計畫成果自評 
 
本研究內容與原計畫書內容相符，預期
成果及目標均已達成，本研究成果計有一篇
碩士論文、一篇已發表的會議論文[34]及一篇
期刊論文[35]。 
 
六、參考文獻 
 
[1] Y. Wang, J. Ostermann, Y. Q. Zhang, Video 
Processing and Communications, Prentice Hall, 
New Jersey, 2002. 
[2] M. T. Sun, A. R. Reibman, Compressed Video 
over Networks, Marcel Dekker, New York, 
2001. 
[3] H.264, Draft ITU-T Recommendation and Final 
Draft International Standard, Pattaya, Thailand, 
2003. 
[4] A. N. Netravali and J. D. Robbins, “Motion 
compensated television coding: Part I,” Bell Syst. 
Tech. J., vol. 58, pp. 631-670, Mar. 1979. 
[5] J. R. Jain and A. K. Jain, “Displacement 
measurement and its application in interframe 
image coding,” IEEE Trans. on 
Communications, vol. 29, pp. 1799-1808, Dec. 
1991. 
[6] T. Koga, K. Iinuma, A. Hirano, Y. Iijima, and T. 
Ishiguro, “Motion compensated interframe 
coding for video conference,” in Proc. National 
Telecommun. Conf., New Orleans, LA, Nov. 
29-Dec. 3, 1981, pp. G5.3.1-G5.3.5. 
[7] L. M. Po and W. C. Ma, “A novel four-step 
search algorithm for fast block motion 
estimation,” IEEE Trans. on Circuits and 
Systems for Video Technology, vol. 6, no. 3, pp. 
313-317, June 1996. 
[8] S. Zhu and K. K. Ma, “A new diamond search 
algorithm for fast block-matching motion 
estimation,” IEEE Trans. on Image Processing, 
vol. 9, no. 2, pp. 287-290, Feb. 2000. 
[9] M. Bierling, “Displacement estimation by 
hierarchical block matching,” in Proc. of SPIE, 
1988, vol. 1001, pp. 942-951. 
[10] Y. Q. Shi and X. Xia, “A thresholding 
multiresolution block matching algorithm,” 
IEEE Trans. on Circuits and Systems for 
Video Technology, vol. 7, no. 2, pp. 437-440, 
Feb. 1997. 
[11] B. Liu and A. Zaccarin, “New fast algorithms 
for the estimation of block motion vectors,” 
IEEE Trans. on Circuits and Systems for 
Video Technology, vol. 3, no. 2, pp. 148-157, 
April 1993. 
[12] C. K. Cheung and L. M. Po, “Normalized 
partial distortion search algorithm for block 
motion estimation,” IEEE Trans. on Circuits 
and Systems for Video Technology, vol. 10, no. 
3, pp. 417-422, April 2000. 
[13] L. J. Luo, C. Zou, and X. Q. Gao, “A new 
prediction search algorithm for block motion 
estimation in video coding,” IEEE Trans. on 
Consumer Electronics, vol. 43, no. 1, pp. 
56-61, Feb. 1997. 
[14] J. B. Xu, L. M. Po, and C. K. Cheng, 
“Adaptive motion tracking block matching 
algorithms for video coding,” IEEE Trans. on 
Circuits and Systems for Video Technology, 
vol. 97, no. 7, pp. 1025-1029, Oct. 1999. 
[15] A. Chang, P. H. W. Wong, Y. M. Yeung, and 
O. C. Au, “Fast integer motion estimation for 
H.264 video coding standard,” in Proc. of 
IEEE Int. Conf. on Multimedia and Expo, June 
2004. 
[16] W. Li and E. Salari, “Successive elimination 
algorithm for motion estimation,” IEEE Trans. 
on Image Processing, vol. 4, no. 1, pp. 
105-107, Jan. 1995. 
[17] C. H. Lee and L. H. Chen, “A fast motion 
estimation algorithm based on the block sum 
pyramid,” IEEE Trans. on Image Processing, 
vol. 6, no. 11, pp. 1587-1591, Nov. 1997. 
[18] T. M. Oh, Y. R. Kim, W. G. Hong, and S. J. 
Ko, “A fast full search motion estimation 
algorithm using the sum of partial norms,” in 
Proc. of IEEE Int. Conf. on Consumer 
Electronics, June 2000, pp. 236-237. 
[19] A. Gersho, and R. M. Gray, Vector 
Quantization and Signal Compression. Boston 
MA: Kluwer, 1991. 
[20] S. Eckart and C. Fogg, “ISO/IEC MPEG-2 
software video codec,” Proc. of  SPIE, 1995, 
vol. 2419, pp. 100-118. 
[21] “ITU-T recommendation H.263 software 
implementation,” Digital Video Coding Group, 
 
Fig. 2. The small diamond search pattern (SDSP) at 1/4-pixel accuracy. 
 
 
 
Table 1. Partial probability distributions of the sum of absolute component differences between the best MV (xb, yb) 
determined by the conventional 2-stage full ME search algorithm for 1/4-pixel accuracy and the best quantized 
predicted MV determined by H.264 [80], and the best quantized predicted MV (xp, yp) determined by the 
proposed scheme with the search range R=16, QP=28, and the number of reference frames=1, 3, 5. 
 
Sequences 
No. of reference 
frames 
Method 
d=0 
pixel 
d≤ 0.25 pixel d≤ 0.50 pixel d≤ 0.75 pixel
CBFPS 64.6% 86.1% 92.6% 96.8% 
1 
Proposed 41.6% 80.6% 95.2% 98.6% 
CBFPS 51.5% 73.1% 84.0% 91.9% 
3 
Proposed 39.3% 77.7% 93.8% 98.1% 
CBFPS 46.3% 67.2% 79.3% 88.8% 
Stefan 
5 
Proposed 37.9% 76.0% 92.8% 97.6% 
CBFPS 80.2% 96.0% 98.4% 98.7% 
1 
Proposed 59.8% 93.7% 98.7% 99.7% 
CBFPS 77.9% 93.9% 97.3% 99.2% 
3 
Proposed 57.9% 92.0% 98.0% 99.4% 
CBFPS 76.6% 92.7% 96.6% 97.4% 
Akiyo 
5 
Proposed 56.9% 91.1% 97.6% 99.2% 
CBFPS 64.4% 82.2% 89.8% 96.2% 
1 
Proposed 36.7% 72.4% 88.7% 95.7% 
CBFPS 59.0% 77.0% 86.1% 94.2% 
3 
Proposed 36.3% 71.4% 88.1% 95.1% 
CBFPS 56.9% 74.7% 84.3% 93.1% 
Carphone 
5 
Proposed 36.0% 71.0% 87.9% 95.1% 
 11
 
Table 3. The simulation results for the “Carphone” sequence with R=16, different QP values, and number of reference 
frames=1 of the six comparison fractional pixel ME search schemes at 1/4-pixel accuracy. 
 
Carphone QCIF 
 Method 
Average 
encoding time 
per frame (ms) 
Average ME 
time per 
frame (ms)
Average 
fractional pixel 
ME time per 
frame (ms) 
Average no. of 
search 
positions 
Average 
PSNR 
(dB) 
Bit rate 
(kbit/s) 
FFPS 443.93 323.73 198.38 16 43.23 351.68 
OTS 360.62 241.16 119.04 8 43.22 356.72 
PPHPS 326.77 207.55 87.84 6 43.22 359.72 
CBFPS 375.00 248.87 133.92 5.67 43.22 351.76 
Proposed 1 328.48 202.80 78.51 4.60 43.21 358.66 
QP=20 
Proposed 2 312.17 187.49 64.52 3.84 44.55 359.65 
FFPS 439.63 316.79 197.38 16 40.53 200.74 
OTS 357.18 243.75 122.07 8 40.51 205.49 
PPHPS 318.58 201.53 80.36 6 40.52 206.40 
CBFPS 371.28 253.07 133.13 5.58 40.53 201.65 
Proposed 1 321.69 198.38 79.39 4.59 40.52 205.94 
QP =24 
Proposed 2 302.31 187.56 62.74 3.77 40.53 206.30 
FFPS 439.68 325.24 202.67 16 37.95 110.45 
OTS 354.99 242.67 118.60 8 37.96 113.44 
PPHPS 317.02 206.23 87.18 6 37.96 114.03 
CBFPS 374.02 264.27 144.20 5.45 37.93 110.37 
Proposed 1 321.55 193.95 74.10 4.57 37.93 113.19 
QP =28 
Proposed 2 300.82 189.20 67.57 3.63 37.96 114.17 
FFPS 441.73 329.53 197.68 16 35.55 57.98 
OTS 360.14 248.10 114.03 8 35.57 59.45 
PPHPS 320.29 209.31 81.54 6 35.56 60.20 
CBFPS 380.01 272.95 139.77 5.27 35.54 58.14 
Proposed 1 326.21 203.06 75.87 4.51 35.53 59.82 
QP =32 
Proposed 2 304.23 196.28 67.49 3.34 35.57 60.16 
 
