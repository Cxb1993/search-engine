i 
國科會專題研究計畫成果報告撰寫格式 
101年 1月 4 日本會第 348 次學術會報修正通過 
一、說明 
國科會基於學術公開之立場，鼓勵一般專題研究計畫主持人發表其研究成
果，但主持人對於研究成果之內容應負完全責任。計畫內容及研究成果如涉及專
利或其他智慧財產權、違異現行醫藥衛生規範、影響公序良俗或政治社會安定等
顧慮者，應事先通知國科會不宜將所繳交之成果報告蒐錄於學門成果報告彙編或
公開查詢，以免造成無謂之困擾。另外，各學門在製作成果報告彙編時，將直接
使用主持人提供的成果報告，因此主持人在繳交報告之前，應對內容詳細校對，
以確定其正確性。 
成果報告繳交之期限及種類（期中進度報告及期末報告），應依本會補助專題研究
計畫作業要點及專題研究計畫經費核定清單之規定辦理。至報告內容之篇幅，期中進度
報告以 4至 10頁為原則，期末報告不得少於 10頁。 
二、報告格式：依序為封面、目錄、中英文摘要及關鍵詞、報告內容、參考文獻、計
畫成果自評、可供推廣之研發成果資料表、附錄。 
(一)報告封面：請至本會網站（http：//www.nsc.gov.tw）線上製作（格式如附件一）。 
(二)中、英文摘要及關鍵詞 (keywords)。 
(三)報告內容：包括前言、研究目的、文獻探討、研究方法、結果與討論（含結
論與建議）…等。 
(四)計畫成果自評部分：請就研究內容與原計畫相符程度、達成預期目標情況、
研究成果之學術或應用價值(簡要敘述成果所代表之意義、價值、影響或進一
步發展之可能性)、是否適合在學術期刊發表或申請專利、主要發現或其他有
關價值等，作一綜合評估，並請至本會網站線上製作（格式如附件二）。 
(五)頁碼編寫：請對摘要及目錄部分用羅馬字 I 、II、 III……標在每頁下方中央；
報告內容至附錄部分請以阿拉伯數字 1.2.3.……順序標在每頁下方中央。 
(六)附表及附圖可列在文中或參考文獻之後，各表、圖請說明內容。 
(七)可供推廣之研發成果資料表： 
1.研究計畫所產生之研發成果，應至國科會科技研發成果資訊系統（STRIKE
系統，https://nscnt66.nsc.gov.tw/strike/）填列研發成果資料表（如附件三），
循執行機構行政程序，由研發成果推廣單位（如技轉中心）線上繳交送出。 
2.每項研發成果填寫一份。 
(八)若該計畫已有論文發表者(須於論文致謝部分註明補助計畫編號)，得作為成果
報告內容或附錄，並請註明發表刊物名稱、卷期及出版日期。若有與執行本
計畫相關之著作、專利、技術報告、或學生畢業論文等，請在參考文獻內註
明之。 
三、計畫中獲補助赴國外或大陸地區移地研究差旅費、出席國際學術會議差旅費或國
際合作研究計畫出國差旅費者，須依規定分別撰寫出國心得報告（其中，獲補助
出席國際學術會議差旅費者須另附發表之論文），並至本會網站線上繳交電子檔，
出國心得報告格式\]如附件四、五、六。 
四、報告編排注意事項 
(一)版面設定：A4紙，即長 29.7 公分，寬 21公分。 
(二)格式：中文打字規格為每行繕打（行間不另留間距），英文打字規格為 Single 
Space。 
(三)字體：以中英文撰寫均可。英文使用 Times New Roman Font，中文使用標楷
體，字體大小以 12 號為主。 
i 
目錄 
摘要 ......................................................................................................... ii 
前言 ........................................................................................................ iii 
研究目的 ................................................................................................ iv 
文獻探討 ................................................................................................. v 
研究方法 ................................................................................................. 1 
結果與討論 ............................................................................................. 9 
 
iii 
前言 
  現今的病毒程式以加殼的方式呈現之比例越來越高，一些重要資料或文件可能會因為病毒
的入侵使之流失或竊取，有時太相信一些掃毒軟體認為說任何病毒都能偵測且處理掉，這會
導致比較新的病毒或經過加殼過的病毒容易侵入，即使比較老舊的病毒只要經過新的客製化
加殼軟體稍作保護就可避過擁有最新病毒碼的防毒軟體偵測，故偵測檔案是否被加殼對於防
止惡意軟體的入侵上非常重要的課題。 
然而在日常生活中我們卻很少去注意到加殼後之病毒所帶來之後遺症及破壞性，使我們
都認為我們現在的電腦是處於很安全的狀態因為我們相信所以的病毒都能被偵測出來，並且
肆無忌憚的大量下載資料及檔案，並沒有去做一些保護檔案資料之措施。但有一天資料正被
竊取時，才開始懷疑軟體的防毒效果，了解加殼病毒的威力及破壞。 
如果能針對惡意程式的加殼技術來找出防毒的，且不需經過解殼來判斷是否為惡意程
式，是目前所希望去達成的目標，能夠利用程式加殼前後的特性，找出足以區分是否加殼的
特徵，在做惡意程式特徵時將加殼及未加殼的程式分別分析，才不會造成特徵被混淆，而影
響惡意程式偵測結果。 
有此可猜想，是不是能對一些先今的加殼工具去做種類上的分析，能立刻經由其特徵去
做辨識的效果，同時如何能加速在偵測加殼病毒的機制上變成所需要放大探討的過程。並且
能在第一時間內將相同加殼軟體所保護的惡意軟體分類出來，對未知客製化加殼軟體作一次
的手動脫殼分析，再將相同的脫殼方式套用在該類惡意軟體，加速分析未知惡意軟體的速度。 
現有惡意程式皆用加殼技術來隱藏惡意程式和逃避防毒軟體的偵測，找出有效的加殼特
徵用來區別程式是否加殼，然後針對加殼程式和未加殼程式給予不同的偵測惡意程式的方法
也是本計畫合作的重點，篩選加殼檔案作為病毒偵測的依據之一，並且分類病毒所使用的加
殼軟體種類來降低分析病毒人員的時間成本，加快漏洞管理程序的速度強化資訊安全的防線。 
 
v 
文獻探討 
 在電腦程式中也有些有段專門負責保護程式不被非法修改或反編譯的程序，這程序和自
然界的殼在功能上有很多相同的地方，無非是為了保護、隱蔽殼內的東西，大家就把這樣的
程序稱為“殼”了。加殼和一般常見的 WinRAR、WinZip 等壓縮程式主要差別是，不必另外
手動先解壓縮的程序，加殼過的 EXE文件是可執行文件，它可以同正常的 EXE文件一樣直
接執行。由於目前商業所用的惡意程式偵測方法都是利用病毒碼比對為基礎，每當執行掃毒
程式時，便能立刻掃描程式檔案，並作病毒碼比對，即能偵測到是否有惡意程式，所以必須
不斷更新病毒碼，才能防禦推陳出新的惡意程式。因此本計畫希望能研究「零時差防禦」的
監測方式，來對抗病毒的「零時差攻擊」。 
近年來惡意程式因為演變與傳播速度太快而被重視，造成電腦的安全體系上常會遭受到
後門程式的威脅，許多個人或公司資料被竊取，因而造成極大的損失。有鑑於此，各大防毒
軟體廠商無不開始正視惡意程式所帶來的危害。例如知名防毒軟體廠商 symantec Internet 
Security[1] [1],McAfee 的 Anti-spyware[2],Kaspersky 的 AntiVirus[3]。連微軟也不得不防範惡
意程式來勢洶洶的攻勢，近幾個月來，相關系統、作業軟體更新頻繁，以確保電腦使用上之
安全。雖然各家廠商的偵測技巧上略有不同，但是大部分還是依賴特徵碼比對(Pattern Match)
的技術，不過特徵碼比對無法在沒有特徵碼的情況下比對出新型或經過加殼程序的惡意程
式，僅能針對已知惡意程式作到快速且有效的防範。 
目前針對惡意程式的偵測與防護上， 可以找到許多相關的研究如[4][5][6][7][8][9]，大部
份的作法，是將特徵萃取出來，而這些特徵常見的如：程式使用了哪些 DLL，以及 API；亦
或是利用 n-gram 的方式將特徵萃取出來，所謂 n-gram，其中 n可以為任意值，大部份 n值為
3到5，而利用n-gram方式粹取出的特徵，可以為程式的binary code、hexadecimal code、assembly 
code、DLL call…等。但利用 n-gram 的方式粹取特徵，最大的缺點在於，若檔案的 size 太大，
特徵的數量會非常的多，導致訓練時運算量過大。特徵萃取出來後，再利用一些資料探勘的
方法，作特徵的選取以及篩選，例如：Information Gain、Gain Ratio、Fisher Score、Document 
Frequency measure…等，都是常用作為特徵選取的方法，最後將篩選過後的特徵，利用分類
器去作訓練以及測的工作，而常見的分類器如：Artificial Neural Network、Decision Trees、Naïve 
Bayes、Support Vector machine…等。利用這種靜態的分析方式，最大的優點就是不必將程式
執行，以避免系統中毒，且偵測上會有不錯的效果；但缺點就是若篩選過後的特徵數量太多，
花費於訓練的時間與成本會相對的增加，且會有誤報與漏報的情形發生。 
傳統的防毒軟體技術，是藉由特定的特徵碼來判定是否為惡意程式。通過加殼處理的檔
案，其內容已經改變，所以透過特徵碼的比對，便無法辨識。因此，目前的惡意程式常會利
用加殼工具對其進行加殼的動作，除了檔案的 size減少許多外，還可以有效躲過防毒軟體的
偵測。而加殼其實就是利用一些特殊的演算法，對 EXE、DLL檔案裡的資源進行壓縮。類似
WINZIP 的效果，但壓縮之後的檔案，可以獨立執行，且脫殼過程完全隱蔽，都會在記憶體
中完成。而脫殼的原理，就是加殼工具會在檔案的頭加一段程式碼，當執行到這段程式碼時，
電腦將會知道如何進行脫殼的工作。由於現今電腦的 CPU執行速度都很快，所以脫殼的過
程，使用者並不會察覺程式正在進行脫殼的動作。 
vii 
BH-US-06-Morgenstern.pdf. 
[15] Yang-seo Choi, Ik-kyun Kim, Jin-tae Oh, Jae-cheol Ryou, “PE File Header Analysis-based 
Packed PE File Detection Technique”, 2008 IEEE International Symposium on Computer 
Science and its Applications. 
[16] M. Zubair Shafiq, S. Momina Tabish, Muddassar Farooq, PE-Probe: Leveraging Packer 
Detection and Structural Information to Detect Malicious Portable Executables, National 
University of Computer & Emerging Sciences (NUCES-FAST) Islamabad, 44000, Pakistan., 
2009 
[17] Lyda, Robert et al, “Using Entropy Analysis to Find Encrypted and Packed Malware”, IEEE 
Security and Privacy,Apr, 2007 
[18] Martignoni, L., Christodorescu, M., Jha, S., 2007. Omniunpack: fast, generic, and safe 
unpacking of malware. In: ACSAC’07: Proceedings of the 23rd Annual Computer Security 
Applications Conference on Annual Computer Security Applications Conference. 
[19] Roberto Perdisci, Andrea Lanzi, Wenke Lee, “McBoost: Boosting Scalability in Malware 
Collection and Analysis Using Statistical Classification of Executables”. 
[20]  M. G. Kang, P. Poosankam, and H. Yin. Renovo: A hidden code extractor for packed 
executables. In WORM ’07: Proceeding of the 5th ACM Workshop on Recurring Malcode, 
2007. 
[21] P. Royal, M. Halpin, D. Dagon, R. Edmonds, and W. Lee, Polyunpack: Automating the 
hidden-code extraction of unpack-executing malware. In Annual Computer Security 
Applications Conference (ACSAC), 2006. 
 
2 
 
(1) 確定資料來源，針對PE table(如圖三)去分析找出資料來源 
 
    
圖二 研究方法之流程圖 
PE Table記載程式的相關資訊，主要可分為檔頭及區段。檔頭中包含許多檔案本身的相關
資訊，包含許多PE 加載器用到的重要欄位，供系統載入器初始化程式時使用。區段則是程式
的本體，包含了程式碼及所需的各式資料。程式內的各個區塊則包含了程式真正的資料(如程
式碼、變數、輸入函數、輸出函數、資源等) 。 
                    
圖三  PE Table 架構 
 
藉由三個特點去說明加殼與未加殼之特徵改變，以下分別就加殼目的、加殼行為和加殼演
算法來加以說明： 
(A) 加殼目的造成特徵改變 
1.程式區塊屬性： 
一般正常程式在程式碼的區塊一定是賦予可執行的屬性，而加殼者為了保護其程式，
會故意將程式碼區塊不賦予可執行屬性，或將其它非程式碼區塊賦予可執行的屬性，
增加程式被逆向工程分析的難度。 
2.程式入口點(Entrypoint)的屬性： 
有些特殊加殼者會將還原子程式（stub）放置於PE header未使用的空間中，讓程式一
開始讀入PE header 時即還原加殼前程式碼並執行，因而可將Entrypoint的區塊改為
4 
 
(最後計算IG(Dj) = Entropy(N) －Entropy(Dj)，依照Information Gain 定義，資料在類別
分離程度越大，代表性越高。) 
(B). Kullback-Leibler divergence 
 
藉由事件P 與事件Q 機率分布的變化，找出P 與Q 的差異性，示意圖如圖四。即KL 值 
越大，表示P 與Q 之間的差異性越大。 
      
圖四  Kullback-Leibler divergence 示意圖 
 
 
(3) 加殼特徵之判別(SVM之概述)以及分別處理加殼和未加殼程式的惡意程式偵測 
 
(一) SVM 的處理程序以及變數意義 
  首先先介紹 SVM的用途，SVM常用於處理回歸問題(時間序列分析、生物序列分析)和模式
識別(樣本分類、圖像分類、手寫字元識別、判別分析)等諸多問題，其性能勝過其它大多數
的學習系統。由於 SVM分類器在樣本分類、手寫識別、圖像分類、生物資訊學等領域中獲得
了相當不錯的應用，以及具有較佳的預測未知檔案能力，與在兩類樣本分類上具有非常好的
效能。 
接下來介紹處理程序，以下為會使用到的變數與函數名稱： 
ix ：為一向量(Vector)，記錄每筆資料的屬性(attribute), liRy
N
i ,....1,   
6 
 
 
(二) .惡意程式偵測系統的實作 
系統流程： 
 
圖七 系統流程圖 
目的在於如何分辨加殼的程式與未加殼的程式，並判別加殼程式是使用何種方法、技術
進行加殼，程式會先經由 Packed Executables Classification System判別是否為加殼程式，
若為加殼程式，則由 Packed Tools Classification System分辨程式是屬於何種加殼技術，
並於網路上找尋對應的脫殼工具進行脫殼的工作，最後再將程式由防毒軟體進行偵測；若
Packed Executables Classification System判定是未加殼程式，則程式直接由防毒軟體進
行偵測。 
8 
 
圖十 特徵向量對應值 
 
 
 
10 
80.00%
82.00%
84.00%
86.00%
88.00%
90.00%
92.00%
94.00%
96.00%
98.00%
100.00%
Dataset 
detected by 
PEiD
Dataset 
missed by 
PEiD
Non-Packed 
executable
69 features Accuracy
 
圖十二 69類特徵之偵測率 
 
最後，本計畫從第三種類別的特徵中，取出96類特徵，加上先前的69類特徵，總共165類作第
三次的實驗(圖十三)。由於第三種類別的特徵太細，加入第一類別與第二類別一起實驗，反
而會造成Overfitting的情況發生，因而降低整體的偵測率。 
80.00%
82.00%
84.00%
86.00%
88.00%
90.00%
92.00%
94.00%
96.00%
98.00%
100.00%
Dataset 
detected by 
PEiD
Dataset 
missed by 
PEiD
Non-Packed 
executable
165 features Accuracy
 
圖十三 165類特徵之偵測率 
 
進行加殼種類分析後再依39，69，165之特徵去做辨識加殼之正確率分析(如圖十四、圖十五) 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/11/01
國科會補助計畫
計畫名稱: 有殼與無殼惡意程式偵測系統
計畫主持人: 洪西進
計畫編號: 100-2218-E-011-020- 學門領域: 推動計畫-資安
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
