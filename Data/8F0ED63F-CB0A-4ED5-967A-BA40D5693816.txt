 i
摘要 
 
雖然有許多文獻著重於二階存貨配送系統，但是企業全球化的供應鏈管理，在採
購、生產、配送及銷售的網絡中，對於快速回應上下游的產品供應及需求、協調存貨批
量之大小與補貨排程等問題都較以往要複雜得多。因此，本研究將以探討多階存貨配送
的供應鏈架構為研究重點。本研究擬由基礎的多階序列式存貨配送系統為研究的起始，
輔以一般整數及二冪整數的補貨策略以及兩種和兩種以上不同的運輸折扣成本為研究
的議題，探究網絡中多階倉儲的總成本為最小。以同樣的思維剖析並尋得總成本結構的
原型以利獲得較佳的啟發式搜尋法，進而推廣至三階存貨配送的供應鏈架構在一般整數
及二冪整數的補貨策略以及兩種不同的運輸折扣成本下，如何使得三階供應鏈上所有成
員總成本為最佳。 
本研究將文獻中三階供應鏈系統只考慮生產及存貨的既有架構再加上配送運輸因
素的考量。利用成本分析的手法，探究供應鏈中每一成員各自的成本圖形藉以建構並發
展出合適的啟發式解法，以求解此問題。由於考量運送數量的折扣成本，在成本架構上
較易出現複雜的片段凸性且不連續的折斷點，過去的文獻單純是以繁複的數學推導出其
經濟訂購批量，而忽略探討問題中基本的成本結構特性，以此結構發展出的啟發式搜尋
法是可以更有效率地求得估計最佳解。 
 
關鍵詞：三階配送系統、序列式存貨配送系統、運輸成本折扣、啟發式搜尋法 
 iii
 
CONTENTS 
摘要 ............................................................................................................................................ i 
ABSTRACT .............................................................................................................................. ii 
CONTENTS .............................................................................................................................iii 
LIST OF TABLES.................................................................................................................... vi 
LIST OF FIGURES.................................................................................................................vii 
Chapter 1 Introduction............................................................................................................... 1 
1.1 Motivation ................................................................................................................... 1 
1.2 Research Objective ...................................................................................................... 7 
1.3 Framework of the Research......................................................................................... 7 
Chapter 2 Literature Review ..................................................................................................... 9 
2.1 Background.................................................................................................................. 9 
2.2 Inventory Replenishment and Transportation Cost Policies ..................................... 10 
2.3 Multi-Stage Systems.................................................................................................. 12 
2.4 Serial Systems ........................................................................................................... 14 
2.5 The LINGO® Software............................................................................................... 15 
2.6 Lot-Sizing Problems in Flowshop Systems............................................................... 15 
2.7 Transportation Costs with Quantity Discounts.......................................................... 17 
2.8 The Research Gap...................................................................................................... 19 
Chapter 3 A Heuristic Approach for Solving Serially Distributed Storage Depots under 
General-Integer Policy............................................................................................................. 20 
3.1 The Problem Definition ............................................................................................. 20 
3.2 The Problem Statement.............................................................................................. 22 
3.3 The Cost-Curve Structure Analysis ........................................................................... 24 
3.3.1 Some Insights into TCGI,TL and TCGI,ML Functions.......................................... 25 
3.4 A Proposed Heuristic Method.................................................................................... 28 
3.4.1 A Search Mechanism for Finding BPs ........................................................... 28 
3.4.2 A Search Mechanism for Finding JPs ............................................................ 30 
3.4.3 A Mechanism for Determining TTCi .............................................................. 32 
3.4.4 A Mechanism for Finding ki Values of the Searched Points ........................... 34 
3.5 A Numerical Example................................................................................................ 35 
3.6 Computational and Comparative Results .................................................................. 38 
3.6.1 Our Proposed Heuristic versus the LINGO® Software................................... 38 
3.6.2 Our Proposed Heuristic versus Relaxed Problems ......................................... 41 
3.6.3 Our Proposed Heuristic versus Vroblefski et al. (2000) ................................. 42 
3.7 Conclusions ............................................................................................................... 52 
Chapter 4 A Heuristic Approach for Solving Serially Distributed Storage Depots under 
 v
Appendix B............................................................................................................................ 127 
B.1 The proof of Lemma 5.1 ......................................................................................... 127 
B.2 The proof of Lemma 5.2 ......................................................................................... 127 
B.3 The proof of Proposition 5.1................................................................................... 127 
B.4 The proof of Lemma 5.3 ......................................................................................... 127 
B.5 The proof of Proposition 5.2................................................................................... 127 
B.6 The proof of Proposition 5.3................................................................................... 128 
B.7 The proof of Lemma 5.4 ......................................................................................... 128 
B.8 The proof of Lemma 5.5 ......................................................................................... 128 
B.9 The proof of Proposition 5.4................................................................................... 128 
B.10 The proof of Proposition 5.5................................................................................. 128 
 
 vii
 
LIST OF FIGURES 
 
Figure 1.1 The serial inventory-distribution system.................................................................. 4 
Figure 1.2 The transportation process of chlorine vessels......................................................... 5 
Figure 1.3 The three-stage inventory-production-distribution supply chain configuration ...... 6 
Figure 1.4 Framework of the Research ..................................................................................... 8 
Figure 3.1The ordering and inventory cost function of the #1 storage depot ......................... 26 
Figure 3.2 The total cost function for all storage depots ......................................................... 28 
Figure 3.3 The total cost function of the #1 storage depot (with two breakpoints)................. 29 
Figure 3.4 Searched points in the #1 storage depot (considering on curves k1= 1 and k1= 2). 36 
Figure 3.5 The structure of the hypercube for n=4.................................................................. 45 
Figure 3.6 The structure of the hypercube for n=5.................................................................. 46 
Figure 3.7 Vroblefski et al. (2000) algorithm to solve problems with GI policies and two-level 
transportation costs .................................................................................................................. 47 
Figure 3.8 Vroblefski et al. (2000) algorithm to solve problems with GI policies and 
multi-level transportation cost ................................................................................................. 50 
Figure 4.1 The ordering and inventory cost function of #2 storage depot .............................. 56 
Figure 4.2 The total cost function of #2 storage depot ............................................................ 58 
Figure 4.3 The criteria illustrated in Remark 2 are used for judging the positions of the JPs 60 
Figure 4.4 The cost structure of the demonstrated example with two-level transportation costs
................................................................................................................................................. 60 
Figure 4.5 A demonstrated example for determining segments of 1C
  and 2C
 ....................... 61 
Figure 4.6 The cost structure of the demonstrated example with three-level transportation 
costs ......................................................................................................................................... 63 
Figure 4.7 Vroblefski et al. (2000) algorithm to solve problems with PoT policies and 
two-level transportation costs.................................................................................................. 73 
Figure 5.1 The annual setup/ordering cost and carrying cost of all firms at stage 3............... 83 
Figure 5.2 The annual setup/ordering cost and carrying cost of all firms at the stage 2 ......... 83 
Figure 5.3 The annual setup/ordering cost and carrying cost of all firms at stage 1............... 84 
Figure 5.4 The annual setup/ordering cost and carrying cost of all firms at all stages ........... 84 
Figure 5.5 The total annual cost of all firms at stage 3 ........................................................... 85 
Figure 5.6 The total annual cost of all firms at stage 2 ........................................................... 85 
Figure 5.7 The total annual cost of all firms at stage 1 ........................................................... 86 
Figure 5.8 The total annual cost of all firms at all stages........................................................ 86 
Figure 5.9 Starting and termination conditions on B* ............................................................. 91 
Figure 5.10 To illustrate the cost properties of each K2 curve (Take K2=1 for an example) ... 92 
Figure 5.11 The JP-Stage 2 Finding Procedure ...................................................................... 96 
 1
Chapter 1 Introduction 
 
1.1 Motivation 
This study aims at the basic supply chain configurations, the serial systems, as 
shown in Figure 1.1. We take inventory and transportation factors into 
considerations. Apply the general integer, or power-of-two integer inventory 
replenishment policies and two-level or multi-level transportation costs to serial 
systems. The practical implementation of the serial system is the transportation of 
poison gas vessels. The order is placed to buy poison gas by the customer has to 
follow the restriction on the conditions that the total ordering number of vessels is an 
integer multiple of the base lot size because the poison gas needs to be packaged in 
the form of vessels. The customer, the Department of Chemistry in a certain 
university in Hsinchu City, Taiwan, issues an order of two 15-kilogram vessels of 
chlorine to its suppler, Horng-Yang Chemistry Inc. that has two storage depots, its 
factory and tank, located in Chyan-Jenn, Kaohsiung City, Taiwan. Horng-Yang 
Chemistry Inc. provides four kinds of vessels: 2-kilogram, 5-kilogram, 15-kilogram 
and 50-kilogram vessels. Horng-Yang Chemistry Factory further places an order 
with four 15-kilogram vessels of chlorine to its tank. Its suppler in Mainland China 
receives the order and consigns Jye-Shin International Marine Sipping Corporation 
to transport goods to Yeou-Lian Container Terminal in Chyan-Jenn, Kaohsiung City, 
Taiwan. Jiann-Shing Transportation Car was consigned by Horng-Yang Chemistry 
Inc. to transport chlorine vessels to the Department of Chemistry in a certain 
university in Hsinchu City, Taiwan. Figure 1.2 illustrates the transportation process 
of chlorine vessels from what has been discussed above. 
The extension of serial systems we attempt to discuss is the three-stage supply 
chain. The three-stage supply chain configurations which involve multiple 
 4
 
 
 
 
 
 
 
 
 
Figure 1.1 The serial inventory-distribution system 
…
…
A Single Supplier Stage n Stage i Stage 1 A Single Customer 
 
 
 6
 
 
 
 
 
 
 
 
 
 
 
Figure 1.3 The three-stage inventory-production-distribution supply chain configuration 
Transportation 
Outside 
vendor
Supplier 
(j=1)(a1=800) 
(λ11=133,000) 
(R11=399,000) 
Manufacturer
(j=1)(a2=200)
(λ21 =70,000)
(R21=140,000)
Transportation 
Transportation 
Manufacturer 
(j=2)(a2=200) 
(λ22 =36,000) 
(R22=108,000) 
Manufacturer
(j=3)(a2=200)
(λ23 =27,000)
(R23=108,000)
Stage 1 
(J1=1) 
Stage 2 
(J2=3) 
Stage 3 
(J3=7) 
Retailer 
(j=1) (a3=50)
(λ31=10,000) 
(h0 =0.08) 
 
 
(h1 =0.8) 
(h1 =0.8) 
 
 
(h2 =2.0) 
(h2 =2.0) 
 
 
(h3 =5.0) 
(C10 =0.1) 
(C11 =0.075)(b=1500) 
(C20 =0.15) 
(C21 =0.135)(b=1500) 
(C30 =0.2) 
(C31 =0.16)  
(b=1500)
Retailer 
(j=2)(a3=50) 
(λ32=20,000) 
Retailer 
(j=3)(a3=50) 
(λ33=40,000) 
Retailer 
(j=4)(a3=50) 
(λ34=12,000) 
Retailer 
(j=5)(a3=50) 
(λ35=24,000) 
Retailer 
(j=6)(a3=50) 
(λ36=9,000) 
Retailer 
(j=7)(a3=50) 
(λ37=18,000) 
Demand Demand Demand Demand Demand Demand Demand 
 8
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 1.4 Framework of the research 
 
 
 
 
 
 
 
 
 
 
 
 
Introduction 
(Chapter 1) 
Literature Review 
(Chapter 2) 
The Serial Systems under 
General-Integer Policy 
(Chapter 3) 
The Serial Systems under 
Power-of-Two Policy 
(Chapter 4) 
The Divergent Systems under 
General-Integer Policy 
(Chapter 5) 
The Summary and Future Research 
 (Chapter 6) 
 10
able to provide a stable equilibrium coordination mechanism when the buyers act 
independently. Lately, Wang et al. (2006) discussed a general model that they treat the 
supplier’s and the buyers’ replenishment intervals as the decision variables and 
presents that in order to obtain the significant benefit, they applied the time 
coordination. The quantity discounts are on the buyer’s ordering quantities basis. 
Wang and Wu (2000) illustrated that the method applied to greatly enhance the 
effectiveness of a unified general all-unit quantity discount is to adopt the 
percentage-increasing price discounts, not unit-increasing ones. Wang (2005) showed 
that a unified discount policy is able to achieve nearly optimal system profit. Chaouch 
(2007) developed an inventory model that determines replenishment strategies for 
buyers facing situations whereby sellers offer price-discounting campaigns at random 
times as a way to drive sales or clear excess inventory.  
 
2.2 Inventory Replenishment and Transportation Cost Policies 
Chen (1997) illustrated that inventory costs constitute the second largest cost factor in 
many industries after production costs. Silver and Peterson (1985) mentioned that 
34% of the current assets and 90% of the working capital of a typical company in the 
United States are tied up in inventories. The general-integer-ratio inventory 
replenishment policy requires that the ratio between the ordering size of a warehouse 
and that of its successor warehouse is a positive integer. Likewise, the ratio is a 
positive power-of-two integer under the power-of-two policy. The so-called stationary 
policy is the one where each facility receives a constant ordering batch in equally 
spaced time. The nested policy is the one if storage depot i orders, each of its 
successors would be triggered to place orders. Vroblefski et al. (2000) assumed that a 
two-level (two differential transportation costs) or a multi-level (more than two 
differential transportation costs) problem means that one or multiple common 
 12
three-stage supply chain configuration. However, Khouja (2003) did not take 
transportation costs into consideration. The model in this study borrows key ideas 
from two research streams of literature: (1) multi-stage production-inventory systems, 
(2) distribution systems. 
 
2.3 Multi-Stage Systems 
Teo and Shu (2004) modeled the two-stage inventory cost based on subsystems with 
single distribution center and multiple retailers. The multi-stage management 
strategies include fixed partition policies mentioned in Bramel and Simchi-Levi 
(1995), direct shipping policies adopted in Gallego and Simchi-Levi (1990), the 
power-of-two strategies discussed in Federgruen et al. (1992a), and Qu et al.’s (1999) 
modified periodic policy. Koh and Saad (2004) established a framework to model 
uncertainty under a multi-stage ERP-controlled manufacturing system. To examine 
the relationship between supply chain collaboration and logistics performance, Stank 
et al. (2001) developed several qualitative performance measures. Recently, Ho (2007) 
proposed a quantitatively comprehensive measurement to evaluate the system 
performance of an ERP-based supply chain system. Huang et al. (2003) classified 
supply chain structures into five configurations, including dyadic, serial, divergent, 
convergent, and network. They analyzed relationships between those structures as 
follows. (1) The dyadic structure consists of two business entities. For example, Lau 
and Lau (2001) solved an analytical model on two-stage (for instance, one 
manufacturer and one retailer) systems by the complete mathematical analysis. (2) 
The serial structure is obtained from cascading several dyadic structures. (3) The 
divergent and convergent configurations are modified structures of serial supply 
chains. (4) The complex supply chain, i.e. the network structure, is a combination of 
convergent and divergent structures. Huang et al. (2003) also pointed out that unlike 
 14
2.4 Serial Systems 
Except Huang et al. (2003), a number of researchers described how the serial systems 
related to multi-stage systems. Ng et al. (2001) stated that a serial system, only one 
facility at each level, is an important special case of multi-level inventory systems. 
For example, (1) Schwarz (1973) proved that stationary and nested policies are 
optimal strategies to the one-warehouse-one-retailer problem. (2) Love (1972) and 
Muckstadt and Roundy (1993) analyzed serial logistics systems, i.e. multistage 
production systems, introduced the concept of nested policies for more practical 
concerns, and dealt with the lot-size or the reorder interval for each stage in the serial 
system under considerations of the incremental stage inventory cost. (3) Vroblefski et 
al. (2000) was motivated by serially distributed warehouse logistics adopted by 
Western New York, a large paint manufacturing company. The company avoids 
difficulties in tracking and cost management, i.e. a warehouse receiving from several 
higher-stage facilities is excluded, and re-designs their logistics system as streams of 
serial distribution centers. To decide ordering quantities for each serially located 
warehouse with two or multiple transportation freight rates, Vroblefski et al. (2000) 
developed a cluster algorithm and a hypercube method, respectively. Eynan and 
Kropp (1998) and Rao (2003) studied the single-stage (R, nT) inventory model, where 
T is the fixed reorder interval, n is a positive integer, and R is the order-up-to 
base-stock level. Lately, Feng and Rao (2007) is one of the first to study an (R, nT) 
policy in a two-stage serial inventory system with stochastic demand.  
Gallego and Özer (2005) also studied multi-stage serial supply systems because 
they considered that the study of multi-stage serial inventory systems is crucial to the 
study of supply chain management both as a benchmark and as a building block for 
more complex supply networks. Speranza and Ukovich (1994) pointed out that most 
of long distance shipments (international and overseas) fit in the single link case and 
 16
the economic lot scheduling problem (ELSP) (see Elmaghraby (1978) and Zipkin 
(1991)). Lawler et al. (1993) gave an extensive overview of models and algorithms 
for lot-sizing problems. These scheduling models essentially determine the start and 
finish times of jobs (scheduling), the order in which jobs are processed (sequencing) 
and the assignment of jobs to machines (loading). 
Lee et al. (1993) considered minimizing the makespan in the three-machine 
assembly-type flow-shop scheduling problem. In their model, each product is 
assembled from two types of parts. Potts et al. (1995) extended the model of Lee et al. 
(1993) and developed a heuristic algorithm to minimize the makespan. Hariri and 
Potts (1997) considered the same model as Potts et al. (1995) and presented a 
branch-and-bound algorithm. Cheng and Wang (1999) considered minimizing the 
makespan in the 2-machine flow-shop scheduling with a special structure and 
developed several properties of an optimal solution and obtain optimal schedules from 
some special cases. Lin and Cheng (2002) considered the same model as Cheng and 
Wang (1999) and presented strong NP-hardness results for the batch availability and 
item availability problems. Yokoyama (2001) and Yokoyama and Santos (2005) 
studied flow-shop scheduling with assembly operations and developed a solution 
procedure to obtain an ε-optimal solution based on a branch-and-bound method. 
Detti et al. (2007) addressed a coordination problem between two subsequent 
departments of a production system, in which parts are processed in batches and 
discussed the issue about minimizing and balancing setups in the serial production 
system. R ios-Mercado and Bard (1998) offered a review of heuristics for setup 
problems in serial systems. Meloni et al. (2007) proposed a genetic algorithm for 
some bi-objective variants of the problem of sequencing production batches. The 
literature presented various real-world applications, for example, (i) Spina et al. (2003) 
discussed the optimization of the line scheduling for the production of components for 
 18
inventory management in thin film transistor-liquid crystal display (TFT-LCD) 
manufacturing because the color filter replenishment has the characteristics of price 
quantity discount, large product size, batch-sized purchase and forbidden shortage in 
the plant. When the production costs are actually distribution costs, van Norden and 
van de Velde (2005) argue that there is a dual cost structure. Any amount up to a 
reserved capacity is charged at a specific cost, and any amount above is charge at a 
higher cost. 
 The transportation costs are often frequently assumed to be linear. However, 
these costs often have a more complex form, such as an all-unit discount structure or 
the piecewise cost function, etc. The supply chain management problems with all-unit 
discounts will increase the significant complexity. Therefore, due to the efficiency of 
solution time concerns, transportation costs with the complex form are usually 
ignored. Hill and Galbreth (2008) presented a new heuristic procedure which provides 
good solutions to problems involving all-unit discounts while significantly reducing 
solving times. Carter and Ferrin (1996) mentioned that linear transportation costs are 
often far from accurate, particularly in cases involving less than truckload (LTL). 
Thomas and Griffin (1996) and Ertogral et al. (2007) pointed out the impact of 
complex shipping costs. Toptal et al. (2003) considered the case where the vendor’s 
replenishment cost includes a stepwise inbound transportation cost component, 
representing the cargo cost. Their latest research was on modeling inbound and 
outbound cargo capacity and transportation costs and provided analytical and 
numerical results under different replenishment cost structures, see Toptal et al. 
(2008). 
 In prior literature, transportation problems involving transportation costs with 
all-unit discounts have been investigated in various contexts. Russell and Krajewski 
(1991) provided an analytical procedure for finding the ordering quantity that 
 20
 
Chapter 3 A Heuristic Approach for Solving Serially Distributed Storage Depots 
under General-Integer Policy 
 
3.1 The Problem Definition 
In this study, we present the problems of shipping a single product from a single 
supply origin, through a serial system of storage depots, to a single demand 
destination by trucks or ships, and aim to minimize the sum of ordering, inventory and 
transportation costs over an infinite time horizon as shown in Figure 1.1. We 
formulate the problem consisting of general-integer (GI), stationary and nested 
replenishment policies for the multistage inventory-distribution system. This study 
presents the near-optimal cost-curve structure analysis for this serially distributed 
storage depot problem (SDSDP) and show that the ordering quantities for each storage 
depot always comply with the GI replenishment policy. Moreover, we develop a 
heuristic approach, which is based on an efficient search procedure to obtain 
satisfactory results. A comparison of results obtained from the proposed heuristic 
method has been made with that from the LINGO® software on randomly generated 
problems. The proposed heuristic is the first solution approach in the literature to 
solve single link problems based on the cost-curve structure analysis. Furthermore, we 
provide an important foundation for carrying out investigations on lot sizing and 
distribution problems with other supply chain configurations. 
Although basic composition elements of the serial structure are adopted from the 
dyadic structure, Huang et al. (2003) mentioned that an extension of the results 
obtained from the dyadic structure could not be applied straightforwardly into the 
serial structure. That is the necessity of this research. Recall that Speranza and 
Ukovich (1994), Huang et al. (2003), and Gallego and Özer (2005) considered the 
 22
analyze the cost-curve structure for the SDSDP_GI in the third section. We develop a 
heuristic method in accordance with the analyzed cost-curve structure to compute 
general-integer policy in the fourth section. Moreover, we introduce numerical 
examples that are solved using the proposed heuristic and the LINGO® software. 
Computational results are reported in the sixth section. Finally, we summarize our 
conclusions. 
 
3.2 The Problem Statement 
Let a serial system of storage depots for stocking one product, which is dispatched 
from a single supply source to a single retailer or customer destination be in the order 
of {n, n-1, …, 1}, where n is denoted as the number of stocking depots. Assumptions 
made in the SDSDP are as follows: (1) the #1 storage depot faces a constant and 
deterministic demand at the demand destination; (2) the demand in each storage depot 
has to be satisfied by its predecessor without shortages; (3) the #n storage depot 
orders from an outside supplier with unlimited stocks; (4) deliveries of orders and 
replenishment occur instantaneously, right after an order is placed, namely, lead times 
are negligible; (5) the planning horizon is infinite; (6) the unit transportation cost for 
each storage depot is assumed to be nonincreasing over the quantity shipped; (7) the 
transportation discount quantity occurs at the same transportation volume for all 
storage depots. Accordingly, a mathematical model presents the above system under 
both the GI policy and two-level transportation costs denoted as PGI,TL, which is 
described in the following: 
PGI,TL:  Minimize ∑ ++∑+∑
===
n
i
iii
n
i
iin
i i
i PyPqh
q
K
1
01
'
1
11
}{
2
λλ  
  subject to  
01 ≤− ii qby   ni  ..., 2, 1, =          (3.1a) 
0>iq    ni  ..., 2, 1, =        (3.1b)   
 24
Table 3.1 A glossary of SDSDP_GI notations 
Terminology Definition 
i an index of the storage depot, i= 1, 2, …, n. 
Ki a fixed ordering cost per order charged for each storage depot i. λ  a known, external, continuous and constant demand rate for a single 
product at the #1 storage depot. 
hi the Stage inventory holding cost per unit time at each storage depot i. 
qL the base lot size, is one of our decision variables. 
ki a positive integer, is one of our decision variables. 
qi = ki qL, the ordering quantities for storage depot i. 
j an index of the different transportation cost breakpoints and j= 0, 1, 
2, …, m. 
bj the transportation cost breakpoint, where b0= 0 and bm+1=∞. 
Pi0 the unit transportation cost for dispatching a single consignment product 
from storage depot (i+1) to the next successive storage depot i while the 
reorder or shipped quantities for each storage depot qi is less than a 
certain transportation volume, b1. 
Pi1 the unit transportation cost when qi is greater than or equal to b1. Pi0 and 
Pi1 would result in yi1= 0 and yi1= 1, respectively.  
'
1iP  0)( 01 <−= ii PP  and denote it as the transportation cost difference in 
two-level cases 
Pij the unit transportation cost in multi-level cases. Note that bj < bk and Pij 
> Pik jk >∀ . 
'
ijP  0)( 1 <−= −ijij PP , and denote it as the transportation cost difference in 
multi-level cases. 
yij = 0 or 1 depends on the comparison of iq  and bj. If ji bq ≥ , 1=ijy ; 
Otherwise, 0=ijy . 
Since proposed models PGI,TL and PGI,ML focus on general-integer and nested 
policies, for each storage depot i, qi can be expressed as a positive integer multiple of 
qL, that is, qi= (ki/ ki-1)qi-1 when 1−≥ ii qq , for  . ..., 2, ni = Note that Clark and Scarf 
(1960) employed the stage approach to compute holding costs in this situation.  
 
3.3 The Cost-Curve Structure Analysis 
In this section, we attempt to illustrate cost-curve properties for the SDSDP_GI. In 
order to solve mathematical models, we plot curves to investigate cost functions. We 
denote those curves as “cost-curves” and analyze on their basic structure such that we 
could further develop our heuristic approach. Recall that in constraint (3.1d), we must 
consider the positive integer ki and qL simultaneously for each storage depot i. The 
 26
  
Figure 3.1The ordering and inventory cost function of the #1 storage depot 
In addition, we conducted the analysis on the occurrence of transportation cost 
breakpoints. The two-level transportation cost function is added into equation (3.2) as: 
}{
2
) ,( 01
'
1 iii
Lii
Li
i
ii PyP
qkh
qk
KqkTTC L +++= λλ .      (3.4) 
Denote TTCi(ki, qL) and TTCi(qL) as the total cost and the minimum total cost function 
for each storage depot, respectively,  
)} ,({min)( LiikLi qkTTCqTTC i
= .               (3.5) 
According to equations (3.4) and (3.5), we can define the objective function of PGI,TL 
as ∑∑ == == ni Liikni LiTLGI qkTTCqTTCTC i11, )} ,({min)(  and that of PGI,ML as 
.]}[
2
{min1 01
'
, ∑ ∑= = +++= ni iijmj ijLii
Li
i
kMLGI
PyPqkh
qk
KTC
i
λλ  
A numerical example of two-level transportation costs that Vroblefski et al. 
(2000) used to illustrate their viewpoints is summarized in Table 3.2.  Other 
parameters are the external demand at the end of the serial system, λ = 5000 
units/year, and the ordering quantity at which the transportation discount cost occur, 
 28
 
Figure 3.2 The total cost function for all storage depots 
 
3.4 A Proposed Heuristic Method 
Unlike the search algorithms employed in the literature, our study examines the 
potential cost-curve properties of the SDSDP_GI in advance. Then, on the basis of the 
analyzed methodologies for the cost structure, we develop a new heuristic approach, 
viz., the following four search mechanisms, to solve problems efficiently.  
3.4.1 A Search Mechanism for Finding BPs 
To locate GI-TCBs shown on the cost-curve, we develop The GI-TCB Locating 
Procedure. Each GI-TCB implies information about the unit transportation cost, e.g., 
(For two-level cases) 
⎭⎬
⎫∀
⎪⎩
⎪⎨⎧ ∀≥
<<=  k
kq, ifP
q, ifP
i
ikLi
kLi
i
i  ,
,  
 0
costportation unit trans The
11
1  0
ρ
ρ
.  (3.7) 
(For multi-level cases) 
 30
save and sort values of jkiρ  in descending order. 
3.4.2 A Search Mechanism for Finding JPs 
To find out the location of all JPs shown on the cost-curve, we propose The JP 
Locating Procedure. The junction point leads to, more than anything, a change 
through the curve from its right-hand side to the next and successive curve on its 
left-hand side. According to the sequence of bj, mbbbb <<<< ...321 for each ki-curve, 
we can organize all GI-TCB points for each ki-curve solved by the equation (3.6). 
Because we are only concerned about two ki curves at a time, the searched areas were 
divided by breakpoints jkiρ . Thanks to BPs are fixed located in the solution space, 
there are two curves in each searched area. In each searched area separated by BPs, 
the unit transportation cost of each curve only belongs to one value (Pi0, Pi1, …,or 
Pim). Whether two curves intersect in each searched area or not needs to be judged. In 
each searched area separated by BPs, the objective values of two curves with the same 
unit transportation costs or with different unit transportation costs result in two 
intersection situations. There are two types of JPs:  
Type I: This kind of JP, denoted as 1iwξ , can be found as demonstrated by the 
following expression:  
is
L
b
ii
L
b
i
i
ir
L
a
ii
L
a
i
i Pqkh
qk
KPqkh
qk
K λλλλ ++=++
22
,          (3.9) 
where aik  and 
b
ik  are two curves with the intersection point (In order to simplify 
the solving procedure, we only consider aik  and its successive positive number 
b
ik ), 
and r= s. By simplifying equation (3.9), the corresponding value of 1iwξ  on qL axis 
can be computed using the following equation:  
iiiw xhK /)(
1 λξ = ,                        (3.10) 
 32
follow the same search procedure illustrated from Steps 2-3 to 2-4 for 
acquiring suitable junction points.  
Step 2-6: This search procedure is to locate JPs by checking curves paired off and 
terminates on )  ( maxfki =  curve for all storage depots. As for ordering and 
holding costs of each storage depot i, Lq  is the minimum when 1 =ik  
where 2
1
)/2(1)( ii
i
iL hKk
kq λ= . Because the total cost curve of each storage 
depot i is convex but discontinuous (or decreased) at BPs, )  ( maxfki =  is 
greater than or equal to )1 ( =ik  such that )( maxfkq iL =  is smaller than or 
equal to )1( =iL kq . As a result, )  ( maxfki =  can be the termination 
condition of the search procedure on the ik  value. 
3.4.3 A Mechanism for Determining TTCi 
Select the points from BPs and JPs as searched points which are the basic elements in 
the minimal cost-curve TTCi. The minimal cost-curve is the curve that is combined by 
the minimal cost at each searched point for every storage depot. The TTCi Forming 
Procedure provide the criteria to generate TTCi. Before introducing TTCi Forming 
Procedure, we illustrate how to accurately compute TTCi values by the following 
remarks. 
Remark 3.2 presents that two kinds of points, BPs and JPs, appear on TTCi(ki, qL) 
curves. TTCi values of those points at each storage depot i can be accurately 
calculated on the basis of Remark 3.4 and Remark 3.5. 
Remark 3.4 For the BP, its TTCi value can be computed by subsituting 
jki
ρ obtained from eq. (3.6) with its corresponding ki and yij=1 into eq. (3.5) as 
shown in eq. (3.12)                   
mjniPkTCTTC ijjkiijki ii  ..., 2, 1, and  ..., 2, 1,for  ,) ,()( ==+= λρρ .    (3.12) 
 34
3.4.4 A Mechanism for Finding ki Values of the Searched Points 
Each searched point has one ki value recorded in the set Θ . The ki Values Finding 
Procedure is to find out other (n-1) ki values so as to yield the TCGI,TL or TCGI,ML at 
each searched point. 
The ki Values Finding Procedure: 
Step 4-1: Collect the JPs from the set iΨ  together with the GI-TCB points from Φ , 
sort them completely in descending order, denoted as Λ , and compare them 
with Θ  to decide the ki value of each storage depot i at the searched point, 
defined as cν  where c= 1, 2, … is a count for searched points, such that 
total average costs for n storage depots, TCGI,TL or TCGI,ML, would be 
calculated accordingly.  
Step 4-2: Initialize the search by the first searched point in the set Λ . Set the set for 
saving ki values of n storage depots as Kc, its ki values are expressed as a 1× 
n unit vector with (1, 1, 1, …, 1) at the beginning of the search process. 
Step 4-3: There are two approaches used for determining what ki value should be 
chosen if it is assumed that cν  is situated in the interval ),[ 21 tt  for each 
storage depot i: (1) Do not replace the ki value obtained fromΘ , defined as 
Θ
ik , if t2 is a breakpoint; (2) Change ki value from 
Θ
ik  to (
Θ
ik +1) if t2 is a 
junction point.  
Step 4-4: After deciding each ki value for all storage depots, we must check ki values 
again from storage depot 1 to n for meeting the constraint (3.1d) and save 
them into cK . TCGI,TL or TCGI,ML is obtained accordingly after cν  and Kc 
are already known. 
Step 4-5: The search process terminates at all the searched points in the set Λ  are 
considered. 
Step 4-6: Pick out the best or minimum value of TCGI,TL or TCGI,ML and set it as 
 36
set 1Ψ  are organized partly in Table 3.3. 
 
Figure 3.4 Searched points in the #1 storage depot (considering on curves 
k1= 1 and k1= 2) 
Table 3.3 The junction points appear in the set 1Ψ  
w1ξ  TTC1 k1 
193.65 4154.74 1 
111.80 4045.08 2 
79.06 4016.99 3 
61.24 4005.68 4 
50.00 4000.00 5 
42.26 3996.75 6 
74.10 4316.44 6 
36.60 3994.72 7 
69.32 4449.02 7 
Steps 3-1 and 3-2: We obtain Θ  as shown in Table 3.4. 
c d e 
11ρ21ρ
10P
10P
11P
11P
1
11ξ
 38
constraint (3.1d). The search procedure for this example is demonstrated 
partly in Table 3.5. 
Table 3.5 The search procedure for solving PGI,TL 
Kc cν  TCGI,TL
10 19 25 25 27.78 11547.11
10 19 25 25 27.74 11543.58
10 19 26 26 27.60 11579.05
10 19 26 26 26.69 11502.44
10 19 27 27 26.32 11516.41
10 10 27 27 26.11 11709.57
11 11 27 27 26.05 11737.72
11 20 27 27 25.82 11528.54
11 20 27 27 25.72 11519.27
11 20 28 28 25.00 11496.49*
11 11 28 28 24.81 11703.43
11 11 29 29 24.25 11711.05
Steps 4-6 and 4-7: Find out that the minimal cost is 49.11496$* , =TLGITC , 
)28 28, 20, ,11(* =cK , and 00.25* =cv  whose value is a 
solution for the base lot size, that is, 25=Lq  units. Hence, 
the GI replenishment policy for each storage depot ( *1q , 
*
2q , 
*
3q , 
*
4q ) would be the quantities (25×11, 25×20, 25×28, 25×
28)= (275, 500, 700, 700) units. 
 
3.6 Computational and Comparative Results 
3.6.1 Our Proposed Heuristic versus the LINGO® Software 
To generate data randomly, we refer to experiments in Vroblefski et al. (2000). Levels 
of factors in the third column of Table 3.6 include EOQ turnover level (F1), 
transportation cost break turnover level (F2), transportation cost differentials (F3), and 
relative measure of transportation to ordering and holding costs (F4). 
 40
The situation described above causes the LINGO® software to run 220520 
iterations. The LINGO Error Message: Out of memory in preprocessor appears in the 
LINGO® software when the runtime is 30 hours, 54 minutes and 16 seconds. 
Table 3.6 The objective value comparison between our proposed heuristic and LINGO® 
n m Factors Levels Deviation (%) )()( LTCHTC GIGI ≠  Deviation (%) 
[5, 10] 0.10% 53 0.15% F1 
[20, 30] 0.04% 74 0.05% 
[5, 7] 0.02% 51 0.03% F2 
[9, 11] 0.12% 77 0.12% 
[0.1, 0.3] 0.05% 69 0.05% F3 
[0.4, 0.6] 0.10% 60 0.13% 
[0.2, 0.3] 0.04% 65 0.05% 
5 1 
F4 
[0.7, 0.8] 0.10% 62 0.13% 
[5, 10] 0.12% 69 0.15% F1 
[20, 30] 1.37% 24 1.50% 
[5, 7] 0.12% 52 0.15% F2 
[9, 11] 0.14% 41 0.26% 
[0.1, 0.3] 1.29% 49 1.33% F3 
[0.4, 0.6] 0.21% 45 0.28% 
[0.2, 0.3] 1.31% 49 1.36% 
5 5 
F4 
[0.7, 0.8] 0.18% 45 0.29% 
[5, 10] 0.19% 55 0.28% F1 
[20, 30] 0.08% 77 0.08% 
[5, 7] 0.06% 57 0.09% F2 
[9, 11] 0.20% 75 0.22% 
[0.1, 0.3] 0.12% 70 0.13% F3 
[0.4, 0.6] 0.15% 62 0.19% 
[0.2, 0.3] 0.13% 68 0.16% 
10 1 
F4 
[0.7, 0.8] 0.13% 64 0.16% 
[5, 10] 0.14% 66 0.15% F1 
[20, 30] 0.04% 33 0.10% 
[5, 7] 0.10% 50 0.14% F2 
[9, 11] 0.07% 50 0.11% 
[0.1, 0.3] 0.08% 57 0.10% F3 
[0.4, 0.6] 0.10% 44 0.16% 
[0.2, 0.3] 0.11% 60 0.14% 
10 5 
F4 
[0.7, 0.8] 0.07% 40 0.12% 
Table 3.7 Run time comparison between our proposed heuristic and LINGO® 
n m Run Time≥T 
 
Average Run Time
(Heuristic) 
Average Run Time 
(LINGO®) 
5 1 3 1.63 sec. 72.08 sec. 
5 5 1 4.99 sec. 27.40 sec. 
10 1 7 3.85 sec. 262.41 sec. 
10 5 2 10.90 sec. 79.95 sec. 
 42
P( RP ) discussed above is also the relaxed problem of PML(RP). Tables 3.8 and 
3.9 are comparative results on the objective value and the run time between our 
proposed heuristic and relaxed problems. 
The objective values obtained from relaxed problems are lower bounds of 
SDSDP_GI problems solved by our proposed heuristic. The comparative results are 
presented as shown in Tables 3.8 and 3.9. The maximal deviation is 0.29%. 
3.6.3 Our Proposed Heuristic versus Vroblefski et al. (2000) 
Vroblefski et al. (2000) modeled the cluster space as a hypercube and proposed the 
algorithm on a basis of the hypercube model. Figures 3.5 and 3.6 represent the 
hypercube structure for warehouse n= 4 and n= 5, respectively. This study organized 
the solving procedure proposed by Vroblefski et al. (2000) in the form of the 
flowchart. Figure 3.7 illustrates Vroblefski et al. (2000) algorithm to solve problems 
with GI policies and two-level transportation costs. The procedure to solve problems 
with GI policies and multi-level transportation costs as shown in Figure 3.8. The time 
complexity of algorithm proposed by Vroblefski et al. (2000) is O(nlog n). 
The results of the numerical example mentioned in Section 3.5 solved by 
Vroblefski et al. (2000) algorithm can be summarized in Table 3.10. According to 
Vroblefski et al. (2000) algorithm, the solution to problem PTL(RP) are computed by 
solving the common economic ordering quantity of each cluster. 
Vroblefski et al. (2000) denoted the optimal set of clusters, G={G1, G2, …, GR}, 
and denoted their respective ordering levels, Q={Q1, Q2, …, QR}. Vroblefski et al. 
(2000) find the optimal set of clusters G={G1=(4, 3), G2=(2,1)} and Q={Q1= (536.19, 
536.19), Q2=(250.33, 250.33)}. Then, Vroblefski et al. (2000) applied RDP (a 
restricted dynamic program) to approximate ordering levels to be integers. The total 
cost $11,555 with ordering quantities (500, 500, 250, 250) units. The cost deviation 
between our proposed heuristic and Vroblefski et al. (2000) is 
 44
Table 3.9 Run time comparison between our proposed heuristic and relaxed problems 
n m Average Run Time
(Heuristic) 
Average Run Time 
(Relaxed problems are solved by LINGO®) 
5 1 1.63 sec. 2.45 sec. 
5 5 4.99 sec. 9.52 sec. 
10 1 3.85 sec. 5.79 sec. 
10 5 10.90 sec. 16.86 sec. 
 
 46
 
 
 
 
 
 
 
 
 
 
 
Figure 3.6 The structure of the hypercube for n=5 
(5) (4) (3) (2) (1)
(5,4) (3) (2) (1) (5) (4,3) (2) (1) (5) (4) (3,2) (1) (5) (4) (3) (2,1) 
(5,4) (3) (2, 1) 
 
(5,4) (3,2) (1) (5,4,3) (2) (1) (5) (4,3,2) (1) (5) (4,3) (2,1) (5) (4) (3,2,1) 
(5,4,3,2) (1) (5,4,3) (2,1) (5,4) (3,2,1) (5) (4,3,2,1) 
(5,4,3,2,1) 
The number of clusters: k= 5Ö level 5 
nodes at level 5: 
1)()()( 44
15
15
1
1 === −−−−nk  
The number of clusters: k= 4Ö level 4 
nodes at level 4: 
4)()()( 43
15
14
1
1 === −−−−nk  
The number of clusters: k= 3Ö 
level 3 
nodes at level 3: 
6)()()( 42
15
13
1
1 === −−−−nk  
The number of clusters:  
k= 2Ö level 2 
nodes at level 2: 
4)()()( 41
15
12
1
1 === −−−−nk  
The number of clusters: k=1Ö level 1 
nodes at level 1: 
1)()()( 40
15
11
1
1 === −−−−nk  
 48
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 3.7 Vroblefski et al. (2000) algorithm to solve problems with GI policies 
and two-level transportation costs (Continued) 
Choose the cut ( +*L , −*L ) that yields the 
minimum total cost among the cuts in ζ . 
G> >= G~   
G=={ +*L }  the optimal ordering policy 
G< <= *~G    for PTL(RP)          
Use a restricted dynamic programming 
(RDP): a version of the dynamic 
programming (DP) model restricted to 
integer ratio policies nested around the 
optimal solution to problem PTL(RP)   
Define a dynamic programming (DP) 
with stages (n, n-1, …, 1), where each 
stage correspond to a warehouse 
Vroblefski et al. defined  
Si: the set of states in  
stage i, where each  
state in Si is defined by  
an ordering level iij Sq ∈  
of warehouse i 
Let  
},|{ +∈== ZzqzqqS 1L1j1j11 , where Z+ 
is the set of real positive integers 
},|{ )( 1ijk1ijijiji SkZzqzqqS −
+
− ∈∀∈==  
@This DP encounters infinite states 
within each stage, and is impractical to 
solve. 
A
Is Gsi={(n, n-1, …, 1)} 
searched?
Yes 
No 
B 
C
 50
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 3.8 Vroblefski et al. (2000) algorithm to solve problems with GI policies and 
multi-level transportation cost
Start from the source node 
Gso={(n), (n-1), …, 1} at level n 
Vroblefski et al. let  
: a hypercube, a directed graph 
N( ): the node set  
A( ): the arc set 
Gso={(n), (n-1), …, 1}: the source 
node 
Gsi={(n, n-1, …, 1)}: the sink node 
Start 
Nodes of the hypercube are 
explored level by level 
Start the branch-and-bound search. 
At each node G, the bound B(G) is computed by: 
∑= ∈GG kkk GqTCGB ))(()( *  
where  
))}(())((|)({ kiikkkkk GeoqbbqGeoqqqTCMin >∀=∪=  
)(* kGq : the optimal ordering level for Gk 
B(G) < the 
incumbent solution? 
Yes 
All the 
descendants of G 
are dropped from 
further 
consideration 
No 
The solution at G is 
infeasible to 
PML(RP)? 
Yes 
No 
The incumbent is updated. 
End 
Apply the RDP heuristic to the resulting 
solution after completing the search. 
 52
[9, 11] 16.53% 4.86 0.63 
[0.1, 0.3] 17.37% 5.05 0.66 F3 
[0.4, 0.6] 24.99% 4.92 0.77 
[0.2, 0.3] 9.62% 4.96 0.80 F4 
[0.7, 0.8] 22.90% 5.01 0.63 
[5, 10] 20.76% 10.78 7.09 F1 
[20, 30] 13.54% 11.02 7.37 
[5, 7] 17.69% 11.00 7.19 F2 
[9, 11] 14.34% 10.79 7.28 
[0.1, 0.3] 16.57% 10.82 7.22 F3 
[0.4, 0.6] 27.86% 10.99 7.24 
[0.2, 0.3] 12.25% 10.91 7.19 
10 5 
F4 
[0.7, 0.8] 24.19% 10.88 7.26 
Table 3.12 Run time comparison between our proposed heuristic and 
Vroblefski et al. (2000) 
n m Average Run Time
(Heuristic) 
Average Run Time 
(Vroblefski et al. (2000)) 
5 1 1.63 sec. 0.50 sec. 
5 5 4.99 sec. 0.72 sec. 
10 1 3.85 sec. 2.98 sec. 
10 5 10.90 sec. 7.23 sec.  
 
3.7 Conclusions 
There is an increased emphasis on making freight costs more transparent in supply 
chain management. When the buyer pays freight costs, we should incorporate 
transportation costs into ordering and inventory replenishment decisions. Therefore, 
we analyze the basic cost-curve structure for each storage depot. Our study presents 
several important results on the near-optimal cost-curve structure of the single link 
problems under GI policy. For instance, we have the thorough discussion on the 
properties of both JPs and BPs that are crucial searched elements. Second, we develop 
the new search heuristic that is totally different from methods in the literature and 
obtain satisfactory outcomes efficiently.  
The method proposed by Vroblefski et al. (2000) cannot correctly solve problems. 
Especially, as the number of warehouses increases, our heuristic performs well in the 
aspect of computing objective function values. 
Future extensions of our proposed search heuristic approach can offer further 
 54
 
Chapter 4 A Heuristic Approach for Solving Serially Distributed Storage Depots 
under Power-of-Two Policy 
 
4.1 The Problem Definition 
The serially distributed storage depot problem under PoT policy (SDSDP_ PoT) is 
investigated in this study. We formulate the problem consisting of power-of-two (PoT), 
stationary and nested replenishment policies for the multistage inventory-distribution 
system. We then present the cost structure analysis for this problem, SDSDP_ PoT, 
and develop a heuristic method to obtain satisfactory results. On average, the average 
cost deviations between our proposed heuristic and LINGO® software are within 
1.2%.  
 
4.2 The Problem Statement 
Assumptions of SDSDP_ PoT are the same as those made in Section 3.2 but the 
replenishment quantity. The equation (4.1d) reveals that the replenishment quantity 
follows the power-of-two policy. Accordingly, a mathematical model with both PoT 
policy and two-level transportation cost condition is denoted as P2,TL, which is 
described as follows:  
P2,TL:  Minimize ∑ ++∑+∑
===
n
i
iii
n
i
iin
i i
i PyPqh
q
K
1
01
'
1
11
}{
2
λλ  
  subject to  
01 ≤− ii qby    i = 1, 2, ..., n,           (4.1a) 
0>iq     i = 1, 2, ..., n,         (4.1b) 
1−≥ ii qq     i = 2, ..., n.             (4.1c) 
Li qq i
α2= ,              (4.1d) 
 56
4.3.1 Some Insights into Two-Level Transportation Cost Problems 
We conducted an analysis by going through a numerical example summarized in 
Table 3.2 andλ = 5000 units/year and b= 500 units. 
For a storage depot i, its ordering and inventory costs, defined as TCi(ki, qL): 
TCi(ki, qL)= 2
Lii
Li
i qkh
qk
K +λ .       (4.2) 
According to the above equation, the cost-curve of each storage depot can be 
represented in two-dimensional axes, which are qL and TCi(ki, qL). The TC2(k2, qL) is 
given in Figure 4.1.  
 
 
Figure 4.1 The ordering and inventory cost function of #2 storage depot 
For any given value of qL, we can obtain the PoT positive integer ki so as to 
minimize eq. (4.2). We denote it as )( Li qTC , the minimal cost function with respect 
to qL for the storage depot i. 
)},({min)( LiikLi qkTCqTC i
= .      (4.3) 
Remark 4.1 The )( Li qTC  function is piece-wise convex with respect to qL.  
21θ
qL
22θ 21δ22δ
 58
 
Figure 4.2 The total cost function of #2 storage depot 
It is of interest that some changes would happen to the JPs between two curves 
because of the incorporation of transportation cost. We define those points as 
ivξ where v= 1, 2, 3, … is the new JP count for all i. Concerning the positions where 
the JPs are located, we suggest one remark be taken into considerations. Some 
notations should be defined in advance:  
iC α2

: the corresponding curve with ( iik
α2= ). 
)1(2 +iC α

: the corresponding curve with ( )1(2 += iik α ). 
0,2 sgi
C α

: the first segment of  iC α2

separated by 
12 iαρ . 
1,2 sgi
C α

: the second segment of iC α2

 separated by 
12 iαρ . 
0,2 )1( sgi
C +α

: the first segment of  )1(2 +iC α

separated by 
12 )1( +iαρ . 
1,2 )1( sgi
C +α

: the second segment of  )1(2 +iC α

separated by 
12 )1( +iαρ . 
Remark 4.2 There are three intersecting conditions for iC α2

and )1(2 +iC α

: 
(1) 
0,2 sgi
C α

intersects 
0,2 )1( sgi
C +α

at the point iiiv hKi /)()2/1( λξ α ×= . (Similar 
 60
 
 
0,2 sgC

  1,2 sgC

 
0,1 sgC

       1,1 sgC

 
Figure 4.3 The criteria illustrated in Remark 2 are used for judging the 
positions of the JPs 
 
Figure 4.4 The cost structure of the demonstrated example with two-level 
transportation costs 
21ρ 11ρ
qL 
11ξ
 62
breakpoints, we need to sort 2m breakpoints with iC α2

and )1(2 +iC α

, including 
12 iαρ , 22 iαρ , …, miαρ2  and 12 )1( +iαρ , 22 )1( +iαρ ,…, mi )1(2 +αρ  in ascending order. The first 
and the last ordered points are definitely 
12 )1( +iαρ  and miαρ2 , respectively.  
Remark 4.3 Sort 2m breakpoints that are related to the curves iC α2

and )1(2 +iC α

 in 
ascending order and check the individual interval. If the indices js of two segments are 
the same when they are considered at the same time (for instance, 
0,2 sgi
C α

vs. 
0,2 )1( sgi
C +α

), then the JP can be computed by equation (4.4); otherwise, by the 
following formula: 
iiiiCiCiCiCiiv khKhPPPP
sgyisgxisgyisgxi
/])([)( 2
,)1(2,2,)1(2,2 ⎭⎬
⎫
⎩⎨
⎧ +−+−=
++ αααα
λλλξ  ,  (4.9) 
where x, y∈  j (= 0, 1, 2, …, m) and yx ≠ . Note that we need to further check if ivξ  
belongs to the interval. All the consecutive points can be determined by utilizing the 
same method, for each storage depot.  
We employ the previous example m=2, the order of the PoT-TCBs, 
21ρ < 22ρ = 11ρ < 12ρ , to explain how to find out the first JP. To decide the intersection 
of iC α2

 and )1(2 +iC α

, we must explore each interval divided by the PoT-TCBs. A 
detailed figure is shown as in Figure 4.5 for illustration. 
Except setting P22= 0.045 and b2= 1,000, we also add the new parameters P12= 
0.1, P32=0.06 and P42=0.15 to forming a problem P2,ML with three-level transportation 
costs. The cost-curve structure of that problem is presented in Figure 4.6. All the 
different kinds of points we discussed in this section are the foundation for the 
heuristic approach. 
 64
expressed as a 1× n unit vector with (1, 1, 1, …, 1) at the beginning of the 
search process. The 1st element in the vector cK  means the ki-value that 
minimizes TTCi(ki, qL) at the searched point for #1 storage depot, and the 2nd 
element in the vector cK  means the ki-value that minimizes TTCi(ki, qL) at 
the searched point for #2 storage depot, etc. 
Step 4: Once the cv is chosen, record its related storage depot i and ki-value. As the 
searched point is selected from JPs ( ivξ ), ki-value has to be changed from ki to 
2ki for a certain storage depot i. After deciding each ki-value for all storage 
depots, we must check ki values again from storage depot 1 to n for meeting 
the constraint (4.1e) and save them into cK . 
Step 5: Pick out the best or minimum value of TC2,TL and set it as *,2 TLTC . Select the 
best solution )},({minarg),( ***
,2 cc
c
cc vKTCvK TL= . 
This search procedure can also be applied to solving multi-level problems with 
the change of the process of obtaining JPs to equations (4.4) or (4.9). 
4.4.1 An illustrative Example  
The time complexity of our proposed heuristic is O(log2n). The search procedure of 
solving problem P2,TL with the data in Table 3.2 is illustrated step by step: 
Step 1: The JPs, MCPs and PoT-TCBs are computed and summarized as shown in 
Tables 4.1 to 4.3, respectively. Each result in the Tables 4.1 and 4.2 means the 
different kinds of searched points obtained from different ki-values at different 
storage depots. 
Step 2: Two adjacent points JPs in each searched interval are selected from Table 4.1 
as shown in the 1st column of Table 4.4. Gather and sort searched points from 
Tables 4.1, 4.2 and 4.3 in descending order as presented in the 2nd column of 
Table 4.4. 
 66
search process.  
Table 4.2 The MCPs for the P2,TL in the example  
Storage depot i ki= 1 ki= 2 ki= 4 ki= 8 ki= 16 ki= 32 
1 273.86 136.93 68.47 34.23 17.12 8.56 
2 194.94 97.47 48.73 24.37 12.18 6.09 
3 707.11 353.55 176.78 88.39 44.19 22.10 
4 400.00 200.00 100.00 50.00 25.00 12.50 
Table 4.3 The PoT-TCBs for the P2,TL in the example  
ki= 1, for all i 50011 =ρ  
ki= 2, for all i 25021 =ρ  
ki= 4, for all i 12541 =ρ  
ki= 8, for all i 5.6281 =ρ  
ki= 16, for all i 25.311,16 =ρ  
ki= 32, for all i 625.151,32 =ρ  
Step 5: Based on our proposed heuristic, we can obtain the best solution, *cv = 250 
(the base lot-size 250* =Lq ), four PoT positive integer *ik -values (1, 2, 2, 2) 
and an ultimate total average cost of *,2 TLTC = $11,365, to this numerical 
example as shown in Table 4.4. Hence, the PoT replenishment policy ( *1q , 
*
2q , 
*
3q , 
*
4q ) would be of the quantities (250, 500, 500, 500).  
 
4.5 Computational and Comparative Results 
4.5.1 Our Proposed Heuristic versus the LINGO® Software 
To generate data randomly, we refer to the experiments in Vroblefski et al. (2000). 
Levels of factors, including EOQ turnover level, transportation cost break turnover 
level, transportation cost differentials, and relative measure of transportation to 
ordering and holding costs, are our referencing bases in both two-level and multi-level 
experiments. We randomly generate 360 instances (36 combinations and each 
combination has 10 examples) in two-level experiment and another 360 examples in 
 68
From these experimental results, we can conclude that the proposed heuristic 
methods can solve the problems very efficiently and within 1.006 CPU seconds. 
Tables 4.6 and 4.7 present average cost deviations, the percentage of the term 
(TC2,TL(Heuristic)－ TC2,TL (LINGO®))/ TC2,TL (LINGO®) and  (TC2,ML(Heuristic) 
－  TC2,ML (LINGO®))/ TC2,ML (LINGO®), in both two-level and multi-level 
experiments. In general, the heuristic method performed satisfactorily, yielding 
solution within 3% of the optimal cost. In particular, the two-level cases performed 
very well, yielding solution within 0.66%. Besides, we found that the cost deviations 
tend to enlarge in both two-level and multi-level experiments in EOQ turnover level 
factor. Finally, Table 4.7 shows that on average, the average cost deviations between 
our proposed heuristic and LINGO® software are within 1.2%. 
The LINGO® software cannot solve when the parameter settings are shown as 
follows (This study change memory in the LINGO® software from 4MB to 1024MB): 
5. The number of storage depots n is 120.  
6. The number of different transportation cost breakpoints m is 10. 
7. The number of variables is 1442. 
8. The number of constraints is 1680. 
The situation described above causes the LINGO® software to run 450634 
iterations. The LINGO Error Message: Out of memory in solver appears in the 
LINGO® software when the runtime is 55 hours, 34 minutes and 27 seconds. 
4.5.2 Our Proposed Heuristic versus Relaxed Problems 
The comparative results between our proposed heuristic and relaxed problems 
mentioned in Section 3.6.2 are summarized in Table 4.8. 
 70
Table 4.7 The average cost deviations of each generated example 
n  
(storage depots) 
m  
(breakpoints) 
Average TC Deviation 
5 1 0.248% 
5 5 0.497% 
5 10 0.684% 
10 1 0.194% 
10 5 1.113% 
10 10 1.019% 
4.5.3 Our Proposed Heuristic versus Vroblefski et al. (2000) 
The procedure proposed by Vroblefski et al. (2000) is used to solve the serially 
distributed system with two-level transportation costs under power-of-two policy as 
shown in Figure 4.8. For the problems with multi-level transportation costs, 
Vroblefski et al. (2000) proposed that the hypercube search is carried out exactly the 
same as before (see Figure 3.8), except that the optimal power-of-two approximation 
for each cluster G∈kG is also determined at each node. If B(G) is greater than the 
incumbent solution, then the node is fathomed. If the power-of-two solution at G is 
feasible and costs less than the incumbent, then the incumbent is updated. Search is 
continued from G only if B(G) is smaller than the incumbent solution. The time 
complexity of algorithm proposed by Vroblefski et al. (2000) is O(nlog n). Tables 4.10 
and 4.11 reveal that our proposed method outperforms Vroblefski et al. (2000). 
 
4.6 Conclusions 
Based on the comprehensive analysis on cost properties of the serial distributed 
storage depot problem, we first solve the sort of problems with multiple storage 
depots and a single transportation cost breakpoint, then demonstrate the performance 
of the heuristic method with those of the LINGO® package. Next, we expand the 
problems to multiple storage depots and multi-level differential transportation costs. 
The results obtained from computational experience show that the proposed heuristic 
method is efficient in solving practical inventory-distribution problems. 
 72
Table 4.9 Run time comparison between our proposed heuristic and relaxed problems 
n m Average Run Time
(Heuristic) 
Average Run Time 
(Relaxed problems are solved by LINGO®) 
5 1 0.088 sec. 2.45 sec. 
5 5 0.104 sec. 9.52 sec. 
10 1 0.468 sec. 5.79 sec. 
10 5 0.619 sec. 16.86 sec. 
The contributions of this paper are in two aspects. First, our study presents 
several important results on the near-optimal cost structures of the single link 
problems under PoT policy. For instance, we have discussed the properties of both 
junction points and breakpoints that are the crucial searched elements. Second, we 
develop a new search heuristic and obtain the satisfactory outcomes efficiently. The 
proposed heuristic is the first solution approach in the literature to solve the problems 
analyzing those with cost-curve properties. Furthermore, the theoretical results in this 
study shall establish an important foundation for those lot sizing and distribution 
problems. 
It is time consuming to construct the hypercube network structure when the 
number of warehouses increases. This study explores the values of iα  by 0, 1, 2,… 
as depicted in Section 4.3. However, to meet the power-of-two integer constraint, 
Vroblefski et al. (2000) used the approximation process. Our proposed method can 
obtain better solutions than Vroblefski et al. (2000) as shown in Tables 4.10 and 4.11. 
 74
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 4.8 Vroblefski et al. (2000) algorithm to solve problems with PoT policies and 
two-level transportation costs (Continued) 
A 
Let } ,{
≤>= GGG  denote the 
revised partition structure of G~  
after the approximations. 
Holding the cluster of 
>
G ordering at 
power-of-two levels greater than b, 
the set of warehouses in 
≤
G  is 
investigated as follows. 
Vroblefski et al. let  
L: the set of warehouses in 
≤
G  
≥< bb  and : the bounding 
power-of-two approximations for b 
For each cut (L+, L-) of L, the 
following is carried out: 
c the ordering level of the 
warehouses in L+ is fixed at ≥b  
d the optimal power-of-two policy 
for the warehouses L- is 
determined 
e the least total cost cut ( +*L , −*L ) 
among the cuts that yield clusters 
of L- all ordering at levels less than 
b is chosen
>
G  
{ +*L }     the optimal ordering policy 
<
*G  
where  
 each cluster ∈kG >G orders at its eoq*( kG ) > b 
 the set { +*L } orders at 
≥b  
each cluster ∈kG <*G orders at its eoq*( kG ) < b 
Is Gsi={(n, n-1, …, 1)} 
searched?
C 
B 
Yes 
No 
 76
 
Table 4.10 The objective value comparison between our proposed heuristic 
and Vroblefski et al. (2000) 
n m Factors Levels 
TL2
TL2Vroblefski
TC
TCTC
Deviation
,
,−=
 (%) 
Average Run 
Time 
(Heuristic) 
Average Run 
Time 
(Vroblefski et 
al. (2000)) 
[5, 10] 5.63% 0.092 sec. 0.751 sec. F1 
[20, 30] 3.14% 0.083 sec. 0.642 sec. 
[5, 7] 5.24% 0.078 sec. 0.689 sec. F2 
[9, 11] 5.30% 0.097 sec. 0.725 sec. 
[0.1, 0.3] 2.45% 0.087 sec. 0.711 sec. F3 
[0.4, 0.6] 4.18% 0.091 sec. 0.701 sec. 
[0.2, 0.3] 3.32% 0.075 sec. 0.724 sec. 
5 1 
F4 
[0.7, 0.8] 6.55% 0.102 sec. 0.685 sec. 
[5, 10] 6.92% 0.465 sec. 3.897 sec. F1 
[20, 30] 4.35% 0.472 sec. 3.812 sec. 
[5, 7] 6.36% 0.458 sec. 3.833 sec. F2 
[9, 11] 5.10% 0.477 sec. 3.859 sec. 
[0.1, 0.3] 3.42% 0.483 sec. 3.854 sec. F3 
[0.4, 0.6] 4.23% 0.451 sec. 3.849 sec. 
[0.2, 0.3] 4.89% 0.459 sec. 3.872 sec. 
10 1 
F4 
[0.7, 0.8] 7.25% 0.477 sec. 3.835 sec. 
n m Factors Levels 
ML2
ML2Vroblefski
TC
TCTC
Deviation
,
,−=
 (%) 
Average Run 
Time 
(Heuristic) 
Average Run 
Time 
(Vroblefski et 
al. (2000)) 
[5, 10] 20.26% 0.098 sec. 0.952 sec. F1 
[20, 30] 15.23% 0.112 sec. 0.991 sec. 
[5, 7] 16.48% 0.092 sec. 0.986 sec. F2 
[9, 11] 17.66% 0.117 sec. 0.965 sec. 
[0.1, 0.3] 18.59% 0.082 sec. 0.944 sec. F3 
[0.4, 0.6] 25.67% 0.124 sec. 0.979 sec. 
[0.2, 0.3] 11.26% 0.077 sec. 0.927 sec. 
5 5 
F4 
[0.7, 0.8] 24.32% 0.132 sec. 1.037 sec. 
[5, 10] 22.41% 0.632 sec. 9.079 sec. F1 
[20, 30] 15.28% 0.604 sec. 9.155 sec. 
[5, 7] 18.56% 0.628 sec. 9.084 sec. F2 
[9, 11] 17.45% 0.611 sec. 9.142 sec. 
[0.1, 0.3] 17.22% 0.633 sec. 9.179 sec. F3 
[0.4, 0.6] 27.43% 0.605 sec. 9.066 sec. 
[0.2, 0.3] 16.54% 0.629 sec. 9.188 sec. 
10 5 
F4 
[0.7, 0.8] 25.61% 0.611 sec. 9.054 sec. 
 
 78
 
Chapter 5 On Coordinating the Replenishment Cycles in the Three-Stage 
Inventory-Distribution Supply Chains 
 
5.1 The Problem Statement 
This study refers to Khouja (2003) and assumes that the distribution system is 
arborescence, i.e. tree-like, structure as shown in Figure 1.3. Apart from the original 
inventory and production concerns in Khouja (2003), we add transportation factor into 
this decentralized network. We cite the elements considered in Khouja (2003) and 
then add other notations used in the aspect of transportation cost such that the 
notations we are going to use are organized in Table 5.1.  
The assumptions in the TSIDP include: (1) companies in the same stage share the 
same reorder interval, (2) the replenishment interval at the stages 1 and 2 is an integer 
multiple of the basic reorder interval at the immediate and consecutive downstream 
stage, (3) each firm’s replenishment order is in the amount of ijijTλ units because we 
assume that the inventory level is down to zero when next replenishment epoch begins, 
(4) this study concerns two differential unit transportation costs Ci0 and Ci1, i.e. one 
price breakpoint, (5) the supplier’s and manufacturers’ production capacity are not 
overloaded. The decision variables in the TSIDP are B, K2, and K1. Upon a 
general-integer policy, the ratio of T2j/T3j (for j= 1, 2, … J2) or that of T1j/ T2j (for j= 1, 
2, … J1) needs to be a positive integer such that K1 and K2 are restricted to be positive 
integers. 
We summarize cost elements of each firm at each stage in Table 5.2 such that the 
annual total costs in the model TSIDP are the summation of those cost elements. 
 
 
 80
Table 5.2 The cost elements at each stage 
 Setup/ 
Ordering 
Cost 
Inventory Carrying Cost Transportation Cost 
Stage 3 
(the retailer stage) 
Ba /3  2/33 jBh λ   
(finished goods) 
  ..., ,2 ,1,
  ..., ,2 ,1,0
   ..., ,2 ,1},1,0{
       subject to
}{
333
3313
33
303
'
313
JjBq
Jjqbs
Jjs
CsC
jj
jj
j
jj
==
=≤−
=∈
+
λ
λ
Stage 2 
(the manufacturer 
stage) 
BKa 22 /  (1) The production 
portion of a cycle 
jj RBKh 2
2
,221 2/λ  
(raw material) 
  jj RBKh 22,222 2/λ  
(finished goods) 
(2) The non-production 
portion of a cycle 
2/)1( 222 hBK jλ−  
(finished goods)  
  ..., ,2 ,1,
  ..., ,2 ,1,0
   ..., ,2 ,1},1,0{
       subject to
}{
2222
2212
22
202
'
212
JjBKq
Jjqbs
Jjs
CsC
jj
jj
j
jj
==
=≤−
=∈
+
λ
λ
Stage 1 
(the supplier 
stage) 
BKKa 211 /  (1) The production 
portion of a cycle 
jj RBKKh 1
2
1210 2/λ   
(raw material) 
 jj RBKKh 121211 2/λ  
(finished goods) 
(2) The non-production 
portion of a cycle 
2/)1( 1211 −KKBh jλ  
(finished goods) 
  ..., ,2 ,1,
  ..., ,2 ,1,0
   ..., ,2 ,1},1,0{
       subject to
}{
11211
1111
11
101
'
111
JjBKKq
Jjqbs
Jjs
CsC
jj
jj
j
jj
==
=≤−
=∈
+
λ
λ
 
 82
quantities and transportation discount quantities. If our given transportation discount 
quantities are greater than ordering quantities, the variable sij is restricted to be 0 as 
shown in the equations (5.2), (5.5), and (5.8) such that the transportation cost Ci0 is 
adopted. On the other hand, the transportation cost Ci1 is to be adopted when sij=1. 
 
5.2 The Cost-Curve Structure Analysis 
In this section, we attempt to illustrate the cost-curve properties for TSIDP. The 
solving procedure proceeds from the two steps: (1) to analyze the cost-curves on the 
mathematical models and (2) to develop the heuristic approaches from the findings in 
(1), please refer to Lee and Yao (2003), Lee and Wen (2007). First of all, this study 
follows the same solving procedure to discuss the cost structure for each stage before 
applying the suitable methods to the problems. The cost-curves are generated by 
referring to the parameters that are in parenthesis demonstrated in Figure 1.3. The 
values with transportation costs are given by us, while others are the same as those 
mentioned in Khouja (2003). Figures 5.1, 5.2 and 5.3 individually represent the 
relationships between the basic period and the costs (transportation costs are not 
included) at stages 3, 2 and 1 and that three figures also display the convexity, 
piece-wise convexity, and piece-wise convexity but with some truncate points in the 
minimal cost-curves. Figure 5.4 demonstrated the piece-wise convexity but 
discontinuity structure on the minimal cost-curve of PTC. Taking the transportation 
cost into account, we discover that the cost functions separately reveal the convexity 
but discontinuity, the piece-wise convexity but discontinuity, the piece-wise convexity 
but discontinuity and with some truncate points on the minimal cost-curves as shown 
in Figures 5.5, 5.6, and 5.7. Finally, we find out the cost structure of the model TSIDP 
is the piece-wise convexity but discontinuity and with some truncate points as Figure 
5.8 demonstrates.  
 84
 
Figure 5.3 The annual setup/ordering cost and carrying cost of all firms at stage 1 
 
Figure 5.4 The annual setup/ordering cost and carrying cost of all firms at all stages 
 86
 
Figure 5.7 The total annual cost of all firms at stage 1 
 
Figure 5.8 The total annual cost of all firms at all stages 
By means of our foregoing discussion, it is clear that the model TSIDP has some 
features on its cost structure. In the next section, we develop the appropriate heuristic 
approach using the interesting findings on cost curves of the model TSIDP. The 
following theoretical analysis is used to indicate our observations on the cost curve 
 88
at some breakpoints with respect to B. 
(5.17)                                                                                               })(
)]1(/)[2/(
)2/(/{),(
2
2
2
1 202
'
212
1 222222
1 2
2
22122222
∑
∑
∑
=
=
=
++
−++
+=
J
j jj
J
j jjj
J
j jj
CsC
KRKBh
RBKhBKaJMinimizeBKATC
λ
λλ
λ
 
subject to  the constraints (5.5), (5.6), (5.7) and (5.11). 
Proof. The proof is shown in Appendix B.5.  
Proposition 5.3 The minimal cost function of the function ATC2(K2, B) is piece-wise 
convex but discontinuous at some breakpoints with respect to B. 
We define )(2 BATC  as the minimal cost function of the function ),( 22 BKATC with 
respect to B, where 
)},({min)( 222
2
BKATCBATC
K
= .           (5.18) 
Proof. The proof is shown in Appendix B.6.  
Definition 5.1 Let a junction point, a particular value of B where two consecutive 
curves concatenate, on the curve of )(2 BATC  be the truncation point for the curve of 
ATC1(K1, B). Suppose that )(min2 LK  and )(
min
2 RK , respectively, are the K2 multipliers 
that result in the minimal cost function )(2 BATC of the left-side and right-side curves 
with regard to a junction point, where  
)} ,({minarg 22
min
2
2
BKATCK
K
= .       (5.19) 
Lemma 5.4 Let min2K and its corresponding JP also be decided while we are 
analyzing on the function )(2 BATC . For a given value of K1, all breakpoints of the 
function ATC1j(K1, B) will be inherited by the ATC1(K1, B) and ATC1(K1, B) is convex 
but discontinuous at some breakpoints with respect to B. 
Proof. The proof is shown in Appendix B.7.  
Lemma 5.5 Let min2K and its corresponding JP also be decided while we are 
analyzing the function )(2 BATC . The minimal cost function of the 
function ),( 11 BKATC  is piece-wise convex but discontinuous with respect to B. 
 90
∑ == 3 1 33
332
J
j j
RP
h
aJB λ  .         (5.22) 
Let ATC(BRP) be the objective function value of the TSIDP at BRP. We will 
demonstrate that a lower bound and an upper bound on *B are given by values of B 
where the objective function value of the problem RP equals ATC(BRP). The 
derivation of the bounds is presented by the following proposition.  
Proposition 5.5 Let BLB be the smallest and BUB be the largest B for which the 
objective function value of the problem RP equals ATC(BRP). Then, UBLB BBB ≤≤ * . 
Proof. The proof is shown in Appendix B.10.  
By Proposition 5.5, we show how to place the bounds BLB and BUB on * B in 
Figure 5.9. The Bisection Method is applied to find BLB and BUB. We set the 
approximation, denoted as mn, which converges to ATC(BRP) at step n with an error En, 
where 
410)( −≤−= nRPn mBATCE        (5.23) 
Therefore, we need to determine the objective function value of BLB or BUB to 
accuracy within 10-4. The following search method is implemented in the interval [BLB, 
BUB]. 
 92
⎪⎪
⎪⎪
⎭
⎪⎪
⎪⎪
⎬
⎫
⎪⎪
⎪⎪
⎩
⎪⎪
⎪⎪
⎨
⎧
∈∈+++++
∈∈+++
∈∈++
∈∞∈+++++
= ∑
∑
≠≠
≠
} ..., ,2 ,1{,),0(for  ,)...() ,(
} ..., ,2 ,1{,,),[for  ,)() ,(
} ..., ,2 ,1{,,),[for   ,) ,(
} ..., ,2 ,1{,),[for   ,)...() ,(
) ,(
2220223222122
22221, 2202222
22221220222
2221223222122
22
2
2
22
22
2
2
J wBCBKPTC
Jr uBCCBKPTC
Jt rBCCBKPTC
J tBCBKPTC
BKATC
K
wJ
K
r
K
utjrj jrt
K
t
K
rtj jt
K
tJ
ρλλλλ
ρρλλλ
ρρλλ
ρλλλλ
#
 (5.27) 
Taking (K2=1) for an example, we illustrate the meaning of the above equation in 
Figure 5.10. 
 Figure 5.10 To illustrate the cost properties of each K2 curve (Take K2=1 for an 
example) 
Two K2 curves, say (K2= v) and (K2= v+1), intersect such that the junction points 
are generated. The JP of stage 2 is defined as g2δ , where g= 1, 2, … is a counter for 
JPs and is obtained by the following procedure, called The JP-Stage 2 Finding 
Procedure. Figure 5.11 demonstrates this procedure. 
Remark 5.1 The unit transportation costs of all firms at stage 2 on the curve (K2= v) 
are the same as those of all firms at stage 2 on the curve (K2= v+1) in the interval 
1
21ρ
1
22ρ  
1
23ρ
PTC2(K2=1, B)+ 21232221 )( Cλλλ ++  
PTC2(K2=1, B)+ 2122212023 )( CC λλλ ++  
PTC2(K2=1, B)+ 2121202322 )( CC λλλ ++  
PTC2(K2=1, B)+ 20232221 )( Cλλλ ++  
 94
is divided into (J1+1) segments by J1 different BPs. 
And for each K1 curve at stage 1, its cost function is  
⎪⎪
⎪⎪
⎭
⎪⎪
⎪⎪
⎬
⎫
⎪⎪
⎪⎪
⎩
⎪⎪
⎪⎪
⎨
⎧
∈∈+++++
∈∈+++
∈∈++
∈∞∈+++++
=
=
∑
∑
≠≠
≠
} ..., ,2 ,1{,),0(for  ,)...(), ,(
} ..., ,2 ,1{,,),[for  ,)() ,,(
} ..., ,2 ,1{,,),[for   ,), ,(
} ..., ,2 ,1{,),[for   ,)...() ,,(
) ,,() ,(
21101131211
min
211
11111, 11011
min
211
111111101
min
211
11111131211
min
211
min
21111
1
1
11
11
1
1
J wBCBKKPTC
Jr uBCCBKKPTC
Jt rBCCBKKPTC
J tBCBKKPTC
BKKATCBKATC
K
wJ
K
r
K
utjrj jrt
K
t
K
rtj jt
K
tJ
ρλλλλ
ρρλλλ
ρρλλ
ρλλλλ
#
 (5.30) 
The JP of stage 1 is defined as g1δ , where g= 1, 2, … is a counter for JPs at stage 1 
and is obtained by The JP-Stage 1 Finding Procedure, as illustrated in Figure 5.12. 
Remark 5.3 Assume that vK =min2 . Unit transportation costs of all firms at stage 1 
on the curve (K1= x) are the same as those of all firms at stage 1 on the curve (K1= 
x+1) in the interval 1EnτΨ , where ... 3, 2, ,1=τ . This means that at stage 1, we number 
the interval which divided by BPs appearing on the curves (K1= x) and (K1= x+1). JPs 
of curves (K1= x) and (K1= x+1) in the interval 1EnτΨ  can be computed using the 
following equation: 
.
])[()1(
2
1 2
1
1 1
11
1
2
1
10
2
1
1
1
⎪⎪⎭
⎪⎪⎬
⎫
⎪⎪⎩
⎪⎪⎨
⎧
+++
=
∑ ∑
∑
= =
=
J
j
J
j
j
j
j
J
j
g
h
R
hhvxx
a
λλ
δ           (5.31) 
Remark 5.4 Assume that vK =min2 . Find the firm which has unit transportation costs 
10C  and 11C  on curves (K1= x) and (K1= x+1), respectively. The numerator of eq. (32) 
consists of the firm whose unit transportation costs are not the same on curves (K1= x) 
and (K1= x+1). JPs of curves (K1= x) and (K1= x+1) in the interval 1EnτΨ  can be 
calculated as follows:  
 96
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 5.11 The JP-Stage 2 Finding Procedure 
Start 
2E
nτΨ = the thτ  interval which 
divided by BPs at stage 2, where τ  
is a nonnegative integer.  
v= the positive integer 
Set the initial value τ = 0 
and let }{maxmax ττ
τ n=  
f
E 2∆ = the set for storing JPs, 
BPs, their 
corresponding 212 }{
J
jjs = , and 
K2 where f is a counter, f= 1, 
2, … 
1+= ττ  
The JPs are obtained by 
the following equations 
(5.28) or (5.29). 
Save 22
K
jρ  into 
the set fE 2∆  
2
2
E
ng τδ Ψ∈ ? 
Yes 
No 
g
K
j 22
2 δρ ≥ ? 
Calculate BPs of the (K2= 
v) and (K2= v+1) curves 
by eq. (5.25)  
Sort BPs, the original 
point 0, and the infinity∞  
and save individual pair of 
points into 2EnτΨ in 
desceding order 
Yes 
v= v+1 
End 
maxττ > ? 
Yes 
No 
No 
Save g2δ  into 
the set fE 2∆  
 98
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 5.12 The JP-Stage 1  
Finding Procedure (Continued) 
A B 
maxττ > ? 
x= x+1 
Yes 
No 
The JPs at stage 1, g1δ , are 
obtained by the following 
equations (5.31) or (5.32). 
1
1
E
ng τ
Ψ∈δ ? 
µδ ng Ω∈1 ? 
Yes 
No 
Yes 
Save g1δ  into 
the set fE1∆  
No 
D 
g
K
j 11
1 δρ ≥ ? 
Yes 
No 
Save 11
K
jρ  into 
the set fE1∆  
End 
C 
1+=ττ  
f
E1∆ = the set for storing JPs, BPs 
and their corresponding 1 11 }{
J
jjs = , K1 
at stage 1,  
where f is a counter, f= 1, 2, … 
 100
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Sort points in the set fE1∆ , 
the original point 0, and 
the infinity∞  and save 
individual pair of points 
into 1Etθ in desceding order 
E 
For the current point 
dn
E3∆ , 
save the information 
about 212 }{
J
jjs =  and K2 
from 2Ezθ
Set the initial value t= 0 
t= t+1 
The BPs of 
?13
E
t
n
E
d θ∈∆  
For the current point 
dn
E3∆ , 
save the information 
about 1 11 }{
J
jjs =  and K1 
from 1Etθ
No 
Yes 
maxdd < ? 
No 
End  
F 
Yes 
 Figure 5.13 A search mechanism for 
solving searched points at stage 3 
(Continued) 
 102
where m is a counter for the searched points. 
Observe that the minimal cost of ATC is 818,104$* =ATC , such that 
)0625.0 ,2 ,1() , ,( **1
*
2 =BKK , and it takes 0.05 seconds instead of 3 seconds to find the 
same results by LINGO® 8.0. Recall that in Figure 5.8, we used small-step search 
method to enumerate a wide range of B using a small step size of 0001.0=∆B . This 
near-exhaustive search procedure is used to solve the TSIDP, the result is 
103,613$* =ATC , )0.0556 ,2 ,1() , ,( **1*2 =BKK  and the run time is 18.64 seconds. 
The comparison of cost deviation between our proposed search method and the 
small-step search method is [(104,818－103,613)/103,613]×100%= 1.16%. This 
example demonstrates that our proposed search method could be an efficient method 
to obtain the solution to the TSIDP. 
 
5.5 Computational and Comparative Results 
We will further test the performance of the proposed search method by experiments 
shown in this section. First, we randomly generate parameters of solved problems 
from five settings, PS1, PS2, PS3, PS4, and PS5. For each setting, the data range for 
each parameter is defined in Table 5.4. There are 30 experimental problems in each 
setting. Therefore, we have a total of 150 experimental problems. We coded our 
search method in MATLAB® 6.5 and ran experiments on a computer with P4-1.8 GHz, 
512MB RAM. Comparisons between our proposed search method and LINGO® 
software in the aspect of average run times and cost deviations are summarized in 
Table 5.5 and Table 5.6, respectively. Because some experiments ran over an hour 
using LINGO® software, we limited the longest run time to 3,600 seconds in LINGO® 
software. On average, the run time is within 0.057 sec. and the cost deviation is within 
0.33%. These results demonstrate that our proposed heuristic method outperforms 
LINGO® software in solving the TSIDP. 
 104
Table 5.5 Average run time between our proposed method and LINGO® software 
Average Run Time Parameter Settings 
(Heuristic) (LINGO®) 
PS1 0.049 sec. 3120 sec. 
PS2 0.052 sec. 3343 sec. 
PS3 0.057 sec. 3480 sec. 
PS4 0.051 sec. 3000 sec. 
PS5 0.055 sec. 3600 sec. 
Table 5.6 Average cost deviation between our proposed method and LINGO® software 
Average Cost Deviation Parameter Settings 
(ATCHeuristic－ ATCLINGO®)/ ATCLINGO® 
PS1 0.30% 
PS2 0.33% 
PS3 0.06% 
PS4 0.02% 
PS5 0.01% 
 
5.6 Conclusions 
In this study, we focus on a three-stage inventory/production/distribution supply chain 
system with 11 members, including 1 supplier, 3 manufacturers and 7 retailers. This 
model was originally presented in Khouja (2003), who discussed only inventory and 
production activities in this system, without considering transportation costs. 
Therefore, applications could meet practical needs, we added the transportation cost 
into the inventory and production system. The objective of our research is to find the 
minimal cost of those activities conducted by members along the supply chain. 
By analyzing the cost curve structure of the model TSIDP, we provide useful 
insights into the model TSIDP and develop a search method based on JPs and BPs 
appearing on the cost curve of each firm. The outcomes demonstrate that our search 
method outperforms LINGO® software by testing randomly generated experiments.  
In summary, the contributions of this paper are twofold. First, we not only 
 106
 
Chapter 6 Coordinated Replenishments in Three-Stage supply chains  
 
6.1 The Problem Statement 
The three-stage inventory-distribution supply chain with the different power-of-two 
replenishment policies (TSIDP_DPoT) for each member. As presented in Figure 6.1, 
the ordering frequency of each firm is defined as the power-of-two integer multiple of 
the basic reorder interval. The assumptions in this problem are identical with those 
described in the TSIDP in Chapter 5 except the ordering cycle time of each firm at 
stages 1, 2 and 3.  
Table 6.1 The newly added notations in the TSIDP_DPoT 
Notations Definition 
k1j a nonnegative integer, the power of two for the firm j at stage 1 
k2j a nonnegative integer, the power of two for the firm j at stage 2 
k3j a nonnegative integer, the power of two for the firm j at stage 3 
 
The mathematical model of TSIDP_DPoT: 
TSIDP_DPoT: 
{ }
{ }
})(         
)])(2/2(22[)(         
)2/2)(()2/(         
)(         
)])(2/2(22[)(        
)2/2)(()2/(         
)()2/2()2/({ 
1
1
1
211221
1 11 1
2
2
2
322332
2 22 2
33 33 3
1 101
'
111
1 2
1)2/2(
0
2
1
1 1
2
1101 1
1 202
'
212
1 3
1)2/2(
0
2
2
1 2
2
2211 2
1 303
'
3131 331 3
∑ ++
∑ ∑ ∑−−+
∑ ++∑+
∑ ++
∑ ∑ ∑−−+
∑ ++∑+
∑ ++∑+∑=
=
= ∈
−
=
==
=
= ∈
−
=
==
===
J
j jj
J
j Gf ft
kkkk
J
j jj
kJ
j
k
J
j jj
J
j Gf ft
kkkk
J
j jj
kJ
j
k
J
j jj
J
j j
kJ
j
k
DPoT
CsC
tBh
RBhhBa
CsC
tBh
RBhhBa
CsCBhBaMinimizeTC
j
fkjkjffj
jj
j
fkjkjffj
jj
jj
λ
λ
λ
λ
λ
λ
λλ
(6.1) 
subject to  
        ..., ,2 ,1},1,0{ 33 Jjs j =∈         (6.2) 
 108
 
 
 
 
 
 
 
 
 
 
 
Figure 6.1 The three-stage inventory-production-distribution supply chain configuration with  
PoT inventory replenishment policies 
Transportation   
Outside 
vendor 
Supplier 
BT k11211 =  
(j=1)(a1=800) 
(λ11=133,000) 
Manufacturer
BT k21221 =  
(j=1)(a2=200)
(λ21 =70,000)
Transportation 
Transportation 
Manufacturer 
BT k22222 =  
(j=2)(a2=200) 
(λ22 =36,000) 
Manufacturer 
BT k23223 =  
(j=3)(a2=200) 
(λ23 =27,000) 
Stage 1 
(J1=1) 
Stage 2 
(J2=3) 
Stage 3 
(J3=7) 
Retailer 
BT k31231 =
(j=1) (a3=50)
(λ31=10,000) 
Retailer 
BT k32232 =  
(j=2)(a3=50) 
(λ32=20,000) 
Retailer 
BT k33233 =  
(j=3)(a3=50) 
(λ33=40,000) 
Retailer 
BT k34234 =  
(j=4)(a3=50) 
(λ34=12,000) 
Retailer 
BT k36236 =  
(j=6)(a3=50) 
(λ36=9,000) 
Retailer 
BT k37237 =  
(j=7)(a3=50) 
(λ37=18,000) 
Demand Demand Demand Demand Demand Demand Demand 
(C10 =0.1) 
(C11 =0.075)(b=1500) 
(h0 =0.08) 
 
(h1 =0.8)
(C20 =0.15) 
(C21 =0.135)(b=1500) 
(h1 =0.8) 
 
(h2 =2.0)
(C30 =0.2) 
(C31 =0.16) 
Retailer 
BT k35235 =  
(j=5)(a3=50) 
(λ35=24,000) 
(h2 =2.0) 
 
(h3 =5.0) 
 110
 
References 
1. Abdul-Jalbar, B., Gutiérrez, J., Sicilia, J. (2005) Integer-ratio policies for 
distribution/inventory systems. International Journal of Production Economics, 
93-94, 407-415. 
2. Al-Haboubi, M.H., Selim, S.Z. (1993) A sequencing problem in the weaving 
industry. European Journal of Operational Research, 66, 65-71. 
3. Baumol, W. J., Vinod, H. D. (1970) An inventory theoretic model of freight 
transportation demand. Management Science, 16, 413-421.  
4. Bertazzi, L., Speranza, M. G. (2005) Worst-case analysis of the full load policy in 
the single link problem. International Journal of Production Economics, 93-94, 
217-224. 
5. Bramel, J., Simchi-Levi, D. (1995) A location based heuristic for general routing 
problems. Operations Research, 43, 649-660. 
6. Burwell, T.H., Dave, D.S., Fitzpatrick, K.E., and Roy, M.R. (1997) Economic lot 
size model for price-dependent demand under quantity and freight discounts. 
International Journal of Production Economics, 48(2), 141-155. 
7. Cachon, G. P., Zipkin, P. H. (1999) Competitive and cooperative inventory policies 
in a two-stage supply chain. Management Science, 45, 936-953. 
8. Carter, J.R., Ferrin, B. (1996) Transportation costs and inventory management: 
Why transportation costs matter. Production and Inventory Management Journal, 
37(3), 58-62. 
9. Cha, B.C., Moon, I.K. (2005) The joint replenishment problem with quantity 
discounts under constraint demand. OR Spectrum, 27, 569-581. 
10. Chakravarty, A. K. (1985) An optimal heuristic for coordinated multi-item 
inventory replenishments. Journal of the Operational Research Society, 36, 
 112
cardinality domination trail set of a graph. Annals of Operations Research, 156, 
5-24. 
22. Drexl, A. and Kimms, A., (1997) Lot sizing and scheduling--- survey and 
extensions. European Journal of Operational Research, 99, 221-235. 
23. Elmaghraby, S.E. (1978) The economic lot scheduling problem (ELSP): review 
and extensions. Management Science, 24(6), 587-598. 
24. Erenguc, S. S., Simpson, N. C., Vakharia, A. J. (1999) Integrated 
production/distribution planning in supply chains: an invited review. European 
Journal of Operational Research, 115, 219-236. 
25. Ertogral, K., Darwish, M., Ben-Daya, M. (2007) Production and shipment lot 
sizing in a vendor-buyer supply chain with transportation cost. European Journal 
of Operational Research, 176, 1592-1606. 
26. Eynan, A., Kropp, D. (1998) Periodic review and joint replenishment in stochastic 
demand environments. IIE Transactions, 30, 1025-1033. 
27. Federgruen, A., Queyranne, M., Zheng, Y. S. (1992a) Simple power of two 
policies are close to optimal in a general class of production/distribution networks 
with general setup costs. Mathematics of Operations Research, 17, 951-963. 
28. Federgruen, A., Zheng, Y. (1992b) The joint replenishment problem with general 
joint cost structures. Operations Research, 40, 384-403. 
29. Feng, K., Rao, U. S. (2007) Echelon-stock (R, nT) control in two-stage serial 
stochastic inventory systems. Operations Research Letters, 35, 95-104. 
30. Gallego, G., Özer, Ö. (2005) A new algorithm and a new heuristic for serial 
supply systems. Operations Research Letters, 33, 349-362. 
31. Gallego, G., Simchi-Levi, D. (1990) On the effectiveness of direct shipping 
strategy for the one warehouse multi-retailer systems. Management Science, 36, 
240-243. 
 114
42. Klastorin, T.D., Moinzadeh, K., and Son, J. (2002) Coordinating orders in supply 
chains through price discounts. IIE Transactions, 34(8), 679-689. 
43. Koh, S. C. L., Saad, S. M. (2004) Modeling uncertainty under a multi-echelon 
ERP-controlled manufacturing system. International Journal of Production 
Research, 40, 3015-3039. 
44. Kreskinocak, P., Tayur, S. (2001) Quantitative analysis for Internet-enabled supply 
chains. Interfaces, 31, 56-69. 
45. Lakhal, S., Martel, A., Kettani, O., Oral, M. (2001) On the optimization of supply 
chain networking decisions. European Journal of Operational Research, 129, 
259-270. 
46. Lau, A. H. L., Lau, H. S. (2001) Some two-Stage style-goods inventory models 
with asymmetric market information. European Journal of Operational Research, 
134, 26-42. 
47. Lawler, E.G., Lenstra, J.K., Rinnooy Kan, A.H.G., Shmoys, D.B. (1993) 
Sequencing and scheduling: algorithms and complexity in Handbooks in 
Operations Research and Management Science Vol. 4: Logistics of Production and 
Inventory, edited by Graves, S.C., Rinnooy Kan, A.H.G. and Zipkin, P.H., 445-522, 
North Holland, Amsterdam. 
48. Lee, A.H.I., Kang, H.Y. (2008) A mixed 0-1 integer programming for inventory 
management--- A case study of TFT-LCD manufacturing company in Taiwan. 
Kybernetes, 37(1), 66-82. 
49. Lee, C.Y., Cheng, T.C.E., Lin, B.M.T. (1993) Minimizing the makespan in the 
3-machine assembly-type flowshop scheduling problem. Management Science, 
39(5), 616-625. 
50. Lee, F.C. and Wen, U.P. (2007) A heuristic approach for solving serially 
distributed storage depots under general-integer policy. Asia-Pacific Journal of 
 116
Logistics of Production and Inventory, 4, Elsevier Science Publishers, Amsterdam, 
59-31. 
62. Ng, C. T., Li, L. Y. O., Chakhlevitch, K. (2001) Coordinated replenishments with 
alternative supply sources in two-level supply chains. International Journal of 
Production Economics, 73, 227-240. 
63. Papachristos, S., Skouri, K. (2003) An inventory model with deteriorating items, 
quantity discount, pricing and time-dependent partial backlogging. International 
Journal of Production Economics, 83(3), 247-256. 
64. Potts, C.N., Sevast’janov, S.V., Strusevich, V.A., Wassenhove, L.N.V., Zwaneveld, 
C.M. (1995) The two-stage assembly scheduling problem: Complexity and 
approximation. Operations Research, 43(2), 346-355. 
65. Qu, W. W., Bookbinder, J. H., Iyogun, P. (1999) An integrated 
inventory-transportation system with modified periodic policy for multiple 
products. European Journal of Operational Research, 115, 254-269. 
66. Rao, U. (2003) Convexity and sensitivity properties of the periodic review (R, T) 
inventory control policy for stationary, stochastic demand. Manufacturing Service 
of Operations Research, 5, 37. 
67. Reyes, P. M. (2005) Logistics networks: A game theory application for solving the 
transshipment problem. Applied Mathematics and Computation, 168, 1419-1431. 
68. Rios-Mercado, R.Z., Bard, J.F. (1998) Heuristics for the flow line problem with 
setup costs. European Journal of Operational Research, 110, 76-98. 
69. Romeijn, H. E., Shu, J., Teo, C. P. (2007) Designing two-echelon supply networks. 
European Journal of Operational Research, 178, 449-462. 
70. Roundy, R. O. (1985) 98% Effective integer-ratio lot sizing for one-warehouse 
multi-retailer systems. Management Science, 31, 1416-1430. 
71. Russell, R. M., Krajewski, L. J. (1991) Optimal purchase and transportation cost 
 118
European Journal of Operational Research, 94, 1-15. 
84. Toptal, A., Cetinkaya, S. (2008) Quantifying the value of buyer-vendor 
coordination: Analytical and numerical results under different replenishment cost 
structures. European Journal of Operational Research, 187, 785-805. 
85. Toptal, A., Cetinkaya, S., Lee, C.Y. (2003) The buyer-vendor coordination 
problem: Modeling inbound and outbound cargo capacity and costs. IIE 
Transactions on Logistics and Scheduling, 35, 987-1002. 
86. van Norden, L., van de Velde, S. (2005) Multi-product lot-sizing with a 
transportation capacity reservation contract. European Journal of Operational 
Research, 165, 127-138. 
87. Vroblefski, M., Ramesh, R., Zionts, S. (2000) Efficient lot sizing under a 
differential transportation cost structure for serially distributed warehouses. 
European Journal of Operational Research, 127, 574-593. 
88. Wagner, H. M., Whitin, T. (1958) Dynamic version of the economic lot size model. 
Management Science, 5, 89-96. 
89. Wang, Q. (2001) Coordinating independent buyers in a distribution system to 
increase a vendor’s profits. Manufacturing and Service Operations Management, 3, 
337-348. 
90. Wang, Q. (2004) Coordinating independent buyers with integer-ratio time 
coordination and quantity discounts. Naval Research Logistics, 51, 316-331. 
91. Wang, Q. (2005) Discount pricing policies and the coordination of decentralized 
distribution systems. Decision Science, 36, 627-646. 
92. Wang, Q., Wu, Z. (2000) Improving a supplier’s quantity discount gain from many 
different buyers. IIE Transactions, 32, 1071-1079. 
93. Wang, Q., Chay, Y., Wu, Z. (2006) A simple coordination strategy for a 
decentralized supply chain. Working Paper, Nanyang Business School, Nanyang 
 120
 
Appendix A 
 
A.1 SDSDP_GI (One Breakpoint) LINGO® Pseudo Code 
MODEL: 
SETS: 
 node/1..5/:q,a,h,P0,Pprime,y,alpha; 
  number/1..1/:Z; 
endsets 
 
Data: 
 a=@ole('E:\Onebp_PoTGI.xls'); 
 h=@ole('E:\Onebp_PoTGI.xls'); 
 P0 =@ole('E:\Onebp_PoTGI.xls'); 
 Pprime = @ole('E:\Onebp_PoTGI.xls'); 
 lambda = @ole('E:\Onebp_PoTGI.xls'); 
 b = @ole('E:\Onebp_PoTGI.xls'); 
 @ole('E:\Onebp_PoTGI.xls')=q; 
 @ole('E:\Onebp_PoTGI.xls')=y; 
 @ole('E:\Onebp_PoTGI.xls')=alpha; 
 @ole('E:\Onebp_PoTGI.xls')=Z; 
enddata 
 
 
MIN=@SUM(NODE(I):(a(I)*lambda)/q(I)+(h(I)*q(I))/2+lambda*(Pprime(I)*y
(I)+P0(I))); 
 @for(node(i): @BIN(y(i))); 
 @for(node(i):y(i)*b-q(i)<=0); 
 @for(node(i)|I#GE#2:q(i)-q(i-1)>=0);  
 @for(node(i):q(i)>0); 
 @for(node(i):q(I)=(alpha(I))*qL);   
 @for(node(i):alpha(I)>=1); 
 @for(node(i):@GIN(alpha(i))); 
@FOR(NUMBER(K):Z=@SUM(NODE(I):a(I)*lambda/q(I)+h(I)*q(I)/2+lambda*(Pp
rime(I)*y(I)+P0(I)))); 
 
End 
 122
 
A.3 SDSDP_ PoT (One Breakpoint) LINGO® Pseudo Code 
MODEL: 
SETS: 
 node/1..10/:q,a,h,P0,Pprime,y,alpha; 
  number/1..1/:Z; 
endsets 
 
Data: 
 a=@ole('E:\Combination.xls'); 
 h=@ole('E:\Combination.xls'); 
 P0 =@ole('E:\Combination.xls'); 
 Pprime = @ole('E:\Combination.xls'); 
 lambda = @ole('E:\Combination.xls'); 
 b = @ole('E:\Combination.xls'); 
 @ole('E:\Combination.xls')=q; 
 @ole('E:\Combination.xls')=alpha; 
 @ole('E:\Combination.xls')=Z; 
enddata 
 
MIN=@SUM(NODE(I):a(I)*lambda/q(I)+h(I)*q(I)/2+lambda*(Pprime(I)*y(I)+
P0(I))); 
 @for(node(i): @BIN(y)); 
 @for(node(i):y(i)*b-q(i)<=0); 
 @for(node(i)|I#GE#2:q(i)-q(i-1)>=0); 
 @for(node(i)|I#GE#2:q(i-1)>=0); 
 @for(node(i):q(I)=(2^alpha(I))*qL);  
 @for(node(i):@GIN(alpha)); 
 @for(node(i):alpha(I)>=0);  
@FOR(NUMBER(K):Z=@SUM(NODE(I):a(I)*lambda/q(I)+h(I)*q(I)/2+lambda*(Pp
rime(I)*y(I)+P0(I)))); 
 
END 
 
 
 
 
 124
 
A.5 TSIDP LINGO® Pseudo Code 
MODEL: 
SETS: 
 holding/1..4/:h,Rate; 
 echelon/1..3/:Cost,Cprime; 
 firm/1..7/; 
 combine(echelon,firm):a,q,D,s; 
 row/1..2/; 
 column/1..3/; 
 number/1..1/:Z,T,Ktwo,Kone; 
endsets 
 
Data: 
 a=@ole('E:\parameter_generation.xls'); 
 h=@ole('E:\parameter_generation.xls'); 
 D=@ole('E:\parameter_generation.xls'); 
 Rate =@ole('E:\parameter_generation.xls'); 
 b = @ole('E:\parameter_generation.xls'); 
 Cost=@ole('E:\parameter_generation.xls'); 
 Cprime= @ole('E:\parameter_generation.xls'); 
 @ole('E:\parameter_generation.xls')=T; 
 @ole('E:\parameter_generation.xls')=s; 
 @ole('E:\parameter_generation.xls')=Ktwo; 
 @ole('E:\parameter_generation.xls')=Kone;  
 @ole('E:\parameter_generation.xls')=Z; 
enddata 
 
MIN= @SUM(combine(i,j)|(i #EQ# 3 #AND# j #LE# 7):a(i,j)/T(1)) 
 + h(4)*@SUM(combine(i,j)|(i #EQ# 3 #AND# j #LE# 7):D(i,j)*T(1)/2) 
+ @SUM(combine(i,j)|(i #EQ# 3 #AND# j #LE# 7): 
D(i,j)*(Cprime(i)*s(i,j)+Cost(i))) 
 + @SUM(combine(i,j)|(i #EQ# 2 #AND# j #LE# 3):a(i,j)/(Ktwo(1)*T(1))) 
+ h(2)*@SUM(combine(i,j)|(i #EQ# 2 #AND# j #LE# 3):D(i,j)* 
D(i,j)*Ktwo(1)*T(1)/(2*Rate(j+1))) 
+ h(3)*@SUM(combine(i,j)|(i #EQ# 2 #AND# j #LE# 3):D(i,j)* 
D(i,j)*Ktwo(1)*T(1)/(2*Rate(j+1))) 
+ h(3)*@SUM(combine(i,j)|(i #EQ# 2 #AND# j #LE# 
 126
 + @SUM(combine(i,j)|(i #EQ# 2 #AND# j #LE# 3): 
 D(i,j)*(Cprime(i)*s(i,j)+Cost(i))) 
+ @SUM(combine(i,j)|(i #EQ# 1 #AND# j #LE# 
1):a(i,j)/(Ktwo(1)*Kone(1)*T(1))) 
+ h(1)*@SUM(combine(i,j)|(i #EQ# 1 #AND# j #LE# 1):D(i,j)* 
D(i,j)*Kone(1)*Ktwo(1)*T(1)/(2*Rate(j))) 
+ h(2)*@SUM(combine(i,j)|(i #EQ# 1 #AND# j #LE# 1):D(i,j)* 
D(i,j)*Kone(1)*Ktwo(1)*T(1)/(2*Rate(j))) 
+ h(2)*@SUM(combine(i,j)|(i #EQ# 1 #AND# j #LE# 
1):D(i,j)*T(1)*Ktwo(1)*(Kone(1)-1)/2) 
+ @SUM(combine(i,j)|(i #EQ# 1 #AND# j #LE# 1): 
D(i,j)*(Cprime(i)*s(i,j)+Cost(i)))); 
END 
 128
B.6 The proof of Proposition 5.3 
Choosing one K2 that results in the minimal cost of ),( 22 BKATC  for each positive 
value of B. For B> 0, )(2 BATC  is piece-wise convex but discontinuous at some 
breakpoints with respect to B.  
B.7 The proof of Lemma 5.4 
The multiplier min2K and its corresponding JP are already given. For a given value of 
K1, ATC1(K1, B) is a convex but discontinuous function with respect to B because 
ATC1(K1, B) is the summation of J1 convex but discontinuous functions ATC1j(K1, B). 
 
B.8 The proof of Lemma 5.5 
The multiplier min2K and its corresponding JP are already given. For B>0, )(1 BATC  is 
piece-wise convex but discontinuous at some breakpoints with respect to B.  
B.9 The proof of Proposition 5.4 
Because the function ATC is the summation of ATC3(B), )(2 BATC , and )(1 BATC , 
ATC is another piece-wise convex but discontinuous curve with respect to B. That 
means JPs and BPs on curves of ATC3(B), )(2 BATC , and )(1 BATC  will be 
inherited by the function ATC.  
B.10 The proof of Proposition 5.5 
We have the range UBRPLB BBB ≤≤  shown on the B-axis because the objective 
function of the problem RP is strictly convex. For UBBB > , the objective function 
value of the problem RP is definitely larger than ATC(BRP). The objective function 
value of the TSIDP is also larger than ATC(BRP) for UBBB > since the problem RP is 
a relaxation of the TSIDP. Consequently, UBB  is an upper bound on 
* B . It is 
analogous that the proof is used for *BBLB ≤ . 
 130
 
成果報告附錄 
已有論文發表 
 
1. Lee, F.C. and Wen, U.P. (to appear), “Coordinating Replenishment Cycles in 
Three-Stage Inventory-Distribution Supply Chains,” International Journal of 
Operations Research. 
國科會研究計畫編號：NSC-95-2221-E-007-178-MY2 
 
2. Lee, F.C. and Wen, U.P. (2008), “A Heuristic Approach for Solving Serially 
Distributed Storage Depots under Power-of-Two Policy,” Applied Mathematical 
Sciences, 2(6), 255-274. 
國科會研究計畫編號：NSC-95-2221-E-007-178-MY2 
 
3. Lee, F.C. and Wen, U.P. (2007), “A Heuristic Approach for Solving Serially 
Distributed Storage Depots under General-Integer Policy,” Asia-Pacific Journal of 
Operational Research, 24(4), 479-497. (SCI)  
國科會研究計畫編號：NSC-95-2221-E-007-178-MY2  
 
