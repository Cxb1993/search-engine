移動物體順利地偵測並且擷取出來，以供後續物體的
追蹤及識別之用，其中物體偵測的階段包括背景建
立、前景偵測、背景更新與陰影去除等程序。 
 
2.1.1 背景建立 
根據Li等人的分類[7]，背景影像可以被描述成靜
態(static)和動態(dynamic)兩種像素。又背景影像特徵
的擷取，一般被分成光譜(spectral)、空間(spatial)和時
間(temporal) 三種類型；近年來，有些研究者係使用
光譜的特徵來建造背景模型[3, 7, 8]。為了對抗照度
(illumination)的改變，有些研究者係採用空間特徵來
增加強健性[3, 9, 10]；雖然光譜和空間的特徵足夠用
來描述靜態像素，但是對於動態像素必須要配合時間
特徵來描述[3, 11]。 
建立背景的基本原則是同樣的像素會在影像序列
中相同位置重複出現，也就是像素值會有中央趨勢的
特性。於本報告中，我們係採用中位數來建立背景影
像，即利用前N張畫面取出每個影像點的中位數當做
背景值。 
2.1.2 前景偵測 
在低對比的環境之下，分辨前景與背景的門檻值
不易選取，所以我們改用一個擷取函數來取得前景偵
測物[12]，如式(1)所示。 
2 ( 1)( 1) 2 (256 )(256 )
( , ) 1
( 1) ( 1) (256 ) (256 )
a b a b
g a b
a b a b
+ + − −= − ⋅+ + + − + −  
                                  (1) 
其中 、 分別是目前影像與背景影像的亮度值。 a b
偵測演算法常見的缺點是：會產生欺騙像素
(spurious pixel)以及緣於移動物體所產生的空洞
(hole)。有鑑於此，我們採用數理形態學(mathematic 
morphology)的方法，以膨脹(dilation)和侵蝕(erosion)
運算子來移除欺騙像素和填補空洞；接著，利用相連
元件(connected component)標記演算法將修補後的像
素連成多個區塊(block)。當形成的區塊大於畫面的百
分之一大小時，就開始進行移動物體的追蹤程序。 
2.1.3 背景更新 
背景更新的情況可分成基於像素(pixel-based)和
基於物體(object-based)兩大類，前者係根據週期性的
亮度變化來改變，而後者則是在有物體進入場景且逗
留一段時間後，把物體當成背景學習起來。有研究者
採用建構式方法來記錄影像中每一位置都有自己的
特徵個數和每一個特徵出現的次數[13]；當某特徵出
現一次，則該特徵的次數就增加，反之，則減少，最
後把出現次數最多的特徵當作該位置的背景值。 
因應各種不同的場景，必須要有一組設定值來改
變背景的學習速率，對於物體移動速度較慢的場景，
其設定的學習速率較慢。因為上述原來的方法，計算
量太大無法達到我們對於速度的要求，而且記憶體空
間的使用也相當龐大。我們修改他們的方法，使運算
速度可以更快，歷史圖的累加方法如式(2)所示： 
 
( , )   ( , )
( , )
( , )     ( , )
t
t
t
h x y A   x y
h x y
h x y D x y
+= −
⎧⎨⎩
若 為前景像素的位
 
置
若 為背景像素的位置
 
(2) 
其中A與D分別為累加與遞減值。 
依照以上所提的方法，圖2為一個序列影像的前景
偵測實例，所得的結果以二值化的影像顯示。 
  
(a)   (b) 
  
        (c)                  (d) 
圖2 前景偵測的實例：(a)、(b)為第118、164個畫
面的影像；(c)、(d)為前述畫面所偵測到的前
景影像。 
 
2.1.4 陰影去除 
陰影分成靜態和動態兩種，前者指的是環境中一
些固定物體所產生的陰影，它們會隨著背景更新而被
學習當成背景，我們的焦點在於動態陰影的去除，而
此種陰影一般指的是源自移動中的物體。 
針對陰影去除的研究有幾種方法被提出，本報告
係採取利用HSV的色彩資訊來清除陰影的方法[5]，因
為色調(hue)值並不會受陰影的影響而改變。首先，將
影像從RGB的色彩空間轉換成HSV的色彩空間；使用
HSV的主要理由在於它和人類的感知比較類似，且用
來區別陰影較為正確。事實上，陰影與背景的像素相
比對，色調值並沒有明顯的改變，也就是不容易受到
光 源 的 影 響 ， 又 陰 影 通 常 有 較 低 的 飽 和 度
(saturation)；綜合以上所述，可以根據式(3)決定某像
素是否為陰影。 
   
( , )1 ,
( , )
     ( , ) ( , )( , )
( , ) ( , )
0
V
k
V
k
S S
k k Sk
H H
k k
I x y    
B x y
 I x y B x ySP x y
 I x y B x y
   
α β
τ
Hτ
⎧ ≤ ≤⎪⎪⎪ − ≤= ⎨⎪ − ≤⎪⎪⎩
       
若
且
其它
 
(3)            
 2
量，以評估事後機率密度函數 ，如式(6)所示。 ( | )t tp x Z
1 1 1( | ) ( | ) ( |
dynamic model measurement
t t t t t tp x Z p x Z p x Z− − − )  
      (6) 
 
4)因子取樣： 
事後機率密度函數 非常複雜，因為( | )t tp x Z tx 是
一個隨時間步驟 變化的多維度隨機變數，所以我們
改用疊代取樣的方法，找出一個最相似的機率密度函
數來取代 ，以下藉由式(7)來說明此方法： 
t
( | )t tp x Z
1 2 1 1 1( ) ( ),    ,( )t t t t - t tf f f x x xx x −= D X∈    (7) 
此處 1 ( )f i 為描述物體的動態模型之隨機取樣函數，
2 ( )f i 為決定所取樣本的隨機權重函數，而「 D」為因
子取樣運算子，如下所述。 
設一個含有N個樣本的集合 ，
其中
(1) ( 2 ) ( ){ , , ..., }NS s s s=
( )js X∈ ，它是利用機率密度函數 1 ( )f i 隨機抽樣
取出，此時，令每個樣本的權重皆相同，如式(8)所示。 
    
( )
1=1( )
1
( )
,  1, 2,...,( )
N j
jj
f s
π j N
N
s = =∑    (8) 
    接著，每一個樣本 ( )js 的權重，透過機率密度函
數 2 ( )f i 測量所得的值加以調整，如式(9)所示。 
    
( )
2
( )
2=1
( )
2
( )
,  1, 2,...,
( )
( )
j
N j
j
j f sπ j N
f s
s = =∑    (9) 
最後，根據每個樣本的新權重，經過計算選取出
新的樣本集合 ，而這些樣本所對應的機率密度函數
傾向於
S′
1 ( )f i ，即為描述物體的動態模型之新隨機取樣
函數，圖4為一次疊代中的因子取樣示意圖。  
 
 圖4 因子取樣的示意圖。 
3. 實驗結果與討論 
本系統的各項實驗是在下列的電腦軟、硬體環境
完成：使用Pentium 4 2.4GHz 中央處理器(CPU)配備
512MB記憶體，作業系統為Microsoft Windows XP 
Professional，而程式開發工具為Borland C++ Builder 
6.0。 
3.1 物體偵測的實驗結果 
    針對多種場景做移動物體的偵測實驗，以驗證視
訊監控系統的強健性，同時舉出效果較不理想的例子。 
1) 戶外場景： 
圖5顯示的場景有一半的光源是被建築物所遮
蔽。由於影片的品質比較差，產生的雜訊較多，但我
們透過相連元件標記的處理，過濾掉小於百分之一的
區塊，所以可以成功地偵測我們所期望的移動物體。 
  
        (a)                  (b) 
  
        (c)                  (d) 
圖5 戶外場景的物體偵測實驗結果：(a)背景影像； (b)
目前影像；(c)前景影像；(d)去除陰影與雜訊之
後的影像。 
 
2) 室內場景： 
對於圖6的監視場景，本系統有效地把移動物體
的陰影造成的影響降低，避免發生離譜的偵測錯誤。 
  
        (a)                  (b) 
 4
