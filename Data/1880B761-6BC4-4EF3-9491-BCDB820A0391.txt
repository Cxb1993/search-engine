摘要
在圖G = (V,E)上, 只要節點u和節點v相等或是相鄰, 則稱節點v支配節點u。 如果G中
每一點均為V的子集合D中的一節點所支配, 稱D為支配集。 支配集問題旨在尋找一最小支配
集。 本計畫主要探討以下四個支配集的變形問題: k-元支配 (k-tuple domination)、 k-元集
合支配 ({k}-domination)、 k-元正負號 (k-signed domination), 以及k-元負數支配集問題 (k-
minus domination)。本計畫針對雙重弦圖 (dually chordal graphs)、強弦圖 (strongly chordal
graphs)、 平面圖 (planar graphs)、 弦二分圖 (chordal bipartite graphs) 等圖研究上述諸支
配集問題以及其它相關的問題。
經過兩年的執行, 我們已達成計畫預定的目標。值得一提的是, 在執行計畫的過程中, 我們
提出一個新的概念:「標記支配」(labelled domination)。 這個概念統整了k-元支配 、 k-元集合
支配 ({k}-domination)、 k-元正負號 (k-signed domination), 以及k-元負數支配集問題 (k-
minus domination)。 我們設計出一個線性時間演算法在強弦圖上解決標記支配問題。所以 k-
元支配、 k-元集合支配 ({k}-domination)、 k-元正負號 (k-signed domination), 以及k-元負數
支配集問題 (k-minus domination), 在強弦圖上, 亦可在線性時間內解決。 本報告將詳細說明
我們的研究成果。
關鍵詞: k-元支配 (k-tuple domination), k-元集合支配 ({k}-domination)、 k-元正負號支配
(k-signed domination)、 k-元負數支配 (k-minus domination)、 雙重弦圖 (doubly chordal
graphs)
i
Contents
1 Introduction 1
2 Problem Definitions and Status 3
3 The Labelled Domination Problem on Strongly Chordal Graphs 8
4 The {k}-Domination Problem on Dually Chordal Graphs 15
5 Algorithmic Results on Distance-Hereditary Graphs 16
5.1 k-Tuple and k-Signed Domination on Distance-Hereditary Graphs . . . . 17
5.2 The k-Minus Domination Problem on Distance-Hereditary Graphs . . . . 24
5.3 The {k}-Domination Problem on Distance-Hereditary Graphs . . . . . . . 27
6 NP-complete results 32
7 Evaluation and Conclusion 42
Bibliography 43
iii
Graphs Domination
k-tuple
{k}-domination
k-signed k-minus
domination
(fixed k > 1)
domination domination
(fixed k > 1) (fixed k > 1) (fixed k > 1)
Planar NP-c [26] NP-c*
NP-c* NP-c* NP-c*
(k = 2, 3) (k = 2, 3) (k = 2, 3)
Strongly chordal P [6]*
P
O(n+m)* P* [13] O(n+m)*
[13, 38]*
Doubly chordal P [6]* NP-c* O(n+m)* NP-c* NP-c*
Dually chordal P [6]* NP-c* O(n+m)* NP-c* NP-c*
Distance-hereditary P [42]* O(k3n+m)* O(k3n+m)* O((k + n)3n)* O(n6)*
Chordal bipartite NP-c [40] NP-c*
NP-c*
NP-c* NP-c*
(k = 2, 3)
Bipartite Planar
NP-c
?
NP-c*
NP-c* NP-c*
[22, 47] (k = 2, 3)
Table 1: A summary of our complexity results for various domination problems. ”NP-c”, ”P”, and
”?” represent ”NP-complete”, ”Polynomial-time solvable, and ”Unknown complexity”, respectively.
Each entry indicates the complexity of a problem for a graph class. Starred entries are the complexity
results of the dissertation. An entry with a citation represents the best previously known result in the
literature. A starred entry with a citation represents that the complexity of our result is the same as
that of the best previously known result.
2
steadily growing to date.
A part of the research on domination is to generalize various concepts by defining a set
of functions from the vertices of a graph to a subset of the real numbers. Given a graph
G = (V,E), let Y be a subset of real numbers and let f : V → Y be a function which
assigns to each v ∈ V a value in Y . We let f(S) =
∑
u∈S f(u) for any subset S of V and
let f(V ) be the weight of f . The set Y is called the weight set of f . The function f is
called a Y -dominating function if f(NG[v]) ≥ 1 for every vertex v ∈ V . The Y -domination
problem is to find a Y -dominating function of G of minimum weight. The concept of Y -
domination was introduced by Bange et al. as a generalization of domination [5]. Besides
Y -domination, many domination problems have been proposed and studied in terms of
functions. We focus on the k-tuple domination problem, {k}-domination problem, the
signed domination problem, and the minus domination problem.
Definition 1. For a fixed positive integer k, a k-tuple dominating set of a graph G =
(V,E) is a subset D of V such that |NG[v] ∩D| ≥ k for all vertices v ∈ V . The k-tuple
domination number of G, denoted by γ×k(G), is the minimum cardinality of a k-tuple
dominating set of G.
Remark 1. A graph G has a k-tuple dominating set if and only if δ(G) + 1 ≥ k. A
k-tuple dominating set of a graph G = (V,E) can be expressed as a k-tuple dominating
function f : V → {0, 1} such that f(NG[v]) ≥ k for all vertices v ∈ V . Then, the k-tuple
domination number of G is equal to the minimum weight of a k-tuple dominating function
of G.
Definition 2. A signed dominating function of a graph G = (V,E) is a function f : V →
{−1, 1} such that f(NG[v]) ≥ 1 for all vertices v ∈ V . The signed domination number of
G is γs(G) = min{f(V )|f is a signed dominating function of G}.
Definition 3. A minus dominating function of a graph G = (V,E) is a function f : V →
{−1, 0, 1} such that f(NG[v]) ≥ 1 for all vertices v ∈ V . The minus domination number
of G is γ−(G) = min{f(V )|f is a minus dominating function of G}.
4
Chen solved the fault tolerant domination problem in linear-time for strongly chordal
graphs and showed the following result.
Theorem 1. Given a function g : V → {−1, 1} of a graph G = (V,E), let S = {v|g(v) =
1, v ∈ V }. The function g is a signed dominating function if and only if |S ∩ NG[v]| ≥
⌊ |NG[v]|2 ⌋+ 1 for all vertices v ∈ V .
By Theorem 1, Chen solved the signed domination problem on a strongly chordal
graph G = (V,E) in linear-time using the algorithm for the fault tolerant domination
problem on G with h(v) = ⌊ |NG[v]|2 ⌋+ 1 for all vertices v ∈ V .
The concepts of signed and minus domination can be generalized to k-signed and
k-minus domination, respectively.
Definition 7. For a fixed positive integer k, a k-signed dominating function of a graph
G = (V,E) is a function f : V → {−1, 1} such that f(NG[v]) ≥ k for all vertices v ∈ V .
The k-signed domination number of G is γk,s(G) = min{f(V )|f is a k-signed dominating
function of G}.
Definition 8. For a fixed positive integer k, a k-minus dominating function of a graph
G = (V,E) is a function f : V → {−1, 0, 1} such that f(NG[v]) ≥ k for all vertices v ∈ V .
The k-minus domination number of G is γ−k (G) = min{f(V )|f is a k-minus dominating
function of G}.
Definition 9. The k-signed (respectively, k-minus) domination problem is to find a k-
signed (respectively, k-minus) dominating function of a graph G of minimum weight.
Signed and minus domination are special cases of k-signed and k-minus domination,
respectively when k = 1. We define the labelled domination problem as follows.
Definition 10. Let Y = {I1, I1 + d, I1 + 2d, . . . , I1 + (ℓ− 1) · d}, where ℓ, d, I1 are finite
integers and ℓ, d > 0. Suppose that G = (V,E) is a graph and L is a labelling function
which assigns to each v ∈ V a label L(v) = (t(v), k(v)), where t(v) ∈ Y ∪ {F} and k(v) is
6
3 The Labelled Domination Problem on Strongly Chordal
Graphs
This section gives a linear-time algorithm to solve the labelled domination problem on
strongly chordal graphs. It provides a unified approach to the k-tuple domination problem,
the {k}-domination problem, the k-signed domination problem, and the k-minus domina-
tion problem on strongly chordal graphs. We recall the definitions and some properties
of strongly chordal graphs.
Let G = (V,E) be a graph. A vertex v is simplicial if all vertices of NG[v] form a
clique. The ordering (v1, v2, . . . , vn) of the vertices of V is a perfect elimination ordering
of G if for all i ∈ {1, . . . , n}, vi is a simplicial vertex of the subgraph Gi of G induced by
{vi, vi+1, . . . , vn}. Let Ni[v] denote the closed neighborhood of v in Gi. Rose [44] showed
the characterization that a graph is chordal if and only if it has a perfect elimination
ordering. A perfect elimination ordering is called a strong elimination ordering if it has
the following property:
For i ≤ j ≤ k if vj and vk belong to Ni[vi] in Gi, then Ni[vj] ⊆ Ni[vk].
Farber [23] showed that a graph is strongly chordal if and only if it admits a strong
elimination ordering. So far, the fastest algorithm to recognize a strongly chordal graph
and give a strong elimination ordering takes O(m log n) [43] or O(n2) time [46]. Strongly
chordal graphs include trees, block graphs, interval graphs, and directed path graphs.
We recall the definition of the labelled domination problem.
Definition 11. Let ℓ, d, I1 be finite integers and ℓ, d > 0. Let Y be the set {I1, I1 +
d, I1 + 2d, . . . , I1 + (ℓ − 1) · d}. Suppose that G = (V,E) is a graph and L is a labelling
function which assigns to each v ∈ V a label L(v) = (t(v), k(v)), where t(v) ∈ Y ∪ {F}
and k(v) is an integer. An L-dominating function of G = (V,E) is a function f : V → Y
satisfying the following two conditions.
(1) If t(v) 6= F , then f(v) = t(v).
8
Algorithm 1 MLD(G,L, I1, ℓ, d)
Require: The algorithm takes G, L, I1, ℓ, and d as inputs. Input G represents a strongly
chordal graph G = (V,E) with a strong elimination ordering (v1, v2, . . . , vn). Inputs ℓ, d, I1
are finite integers and ℓ, d > 0. The weight set Y is assumed to be the set {I1, I1 + d, I1 +
2d, . . . , I1+(ℓ−1) ·d}. Input L represents a labelling function which assigns to every vertex
v of G a label L(v) = (t(v), k(v)), where t(v) ∈ Y ∪ {F} and k(v) is an integer.
Ensure: An L-dominating function of G of minimum weight.
1: for i = 1 to n do {Initialization}
2: if t(vi) = F then
3: f(vi) = I1 + (ℓ− 1) · d.
4: else
5: f(vi) = t(vi).
6: end if
7: end for
8: for i = 1 to n do {Determining whether G has an L-dominating function}
9: if k(vi) > f(NG[vi]) then
10: stop and return the infeasibility of the problem.
11: end if
12: end for
13: for i = 1 to n do {Reducing the weight of the function}
14: if t(vi) = F then
15: M = min{f(NG[v])− k(v)|v ∈ NG[vi]}.
16: f(vi) = max{I1, I1 + (⌈ℓ−
M
d
⌉ − 1) · d}.
17: end if
18: end for
19: return the function f .
10
Therefore, the new function f obtained by replacing the value of f(vi) with x in Step 16
is still an L-dominating function of G. Following the discussion above, we know that the
function f returned from Step 19 of Algorithm 1 is an L-dominating function of a strongly
chordal graph G = (V,E).
Lemma 4. Let ℓ, d, I1 be integers and ℓ, d > 0. Let Y = {I1, I1 + d, I1 +2d, . . . , I1 +(ℓ−
1) · d}. The function f : V → Y returned from Algorithm 1 is a minimum L-dominating
function of a strongly chordal graph G = (V,E).
Proof. By Lemma 3, the function f returned from Algorithm 1 is an L-dominating func-
tion of G. In the following, we show that f is a minimum L-dominating function of G.
Among all minimum L-dominating functions of G, we let h be a minimum L-dominating
function of G such that the number of vertices in {v|v ∈ V, f(v) = h(v)} is maximum.
We claim that f(v) = h(v) for every vertex v ∈ V . Assume for contrary that W is a
nonempty set of all vertices w with f(w) 6= h(w). Suppose that t is the smallest index
such that vt ∈W . Obviously, t(vt) = F . We consider the following cases.
Case 1: h(vt) < f(vt). The value of f(vt) is finalized in Step 16 at t-iteration of
Algorithm 1 (where an iteration here of the algorithm is understood as one iteration of
Steps 13–18). At t-th iteration of Algorithm 1, M = min{f(NG[v]) − k(v)|v ∈ NG[vt]}
and f(vt) = max{I1, I1 + (⌈ℓ−
M
d
⌉ − 1) · d}. We consider the following two cases:
Case 1.1: f(vt) = I1. Then h(vt) < f(vt) = I1, which contradicts the assumption that
h(vt) ∈ Y since I1 is the smallest number in Y .
Case 1.2: f(vt) = I1+(⌈ℓ−
M
d
⌉−1)·d. Then h(vt) ≤ f(vt)−d = I1+(⌈ℓ−
M
d
⌉−2)·d. Let
vc be a vertex in NG[vt] such thatM = f(NG[vc])−k(vc). Notice that f(vt) = I1+(ℓ−1)·d
before the execution of Step 16 at the t-th iteration. Therefore, f(NG[vc] \ {vt}) =
M + k(vc) − (I1 + (ℓ − 1) · d) before the execution of Step 16 at the t-iteration. Notice
that only the value of f(vt) was changed at the t-th iteration. Therefore f(NG[vc] \ {vt})
is still equal to M + k(vc)− (I1 + (ℓ− 1) · d) at the end of t-th iteration.
Notice that h(vx) = f(vx) for every index x < t. At the end of the t-th iteration,
12
Clearly, h(V ) = h′(V ) and |{v|v ∈ V, f(v) = h′(v)}| ≥ |{v|v ∈ V, f(v) = h(v)}| + 1.
We prove h′(NG[v]) ≥ k(v) for every vertex v ∈ V by showing that P ⊆ NG[vb]. There
are two cases:
Case 2.1: s ≤ t. Then s ≤ t < b. By definition of the strong elimination ordering,
Ns[vt] ⊆ Ns[vb]. Since P ⊆ Ns[vt], we have P ⊆ NG[vb].
Case 2.2: s > t. By definition of the strong elimination ordering, Nt[vs] ⊆ Nt[v] for
every vertex v ∈ P . Since vb ∈ Nt[vs], vb ∈ Nt[v] for every vertex v ∈ P . In other words,
P ⊆ NG[vb].
Hence, h′ is a minimum L-dominating function such that the number of vertices in
{v|v ∈ V, f(v) = h′(v)} is larger than that of vertices in {v|v ∈ V, f(v) = h(v)}, a
contradiction to the assumption that the number of vertices in {v|v ∈ V, f(v) = h(v)} is
maximum.
Following the discussion above,W does not exist. Hence, f is a minimum L-dominating
function of G.
Theorem 5. Let G = (V,E) be a strongly chordal graph with |V | = n and |E| = m.
Algorithm 1 solves the labelled domination problem on G in O(n +m) time if the strong
elimination ordering is given.
Proof. In a practical implementation of Algorithm 1, we use d(vi) to keep track of
f(NG[vi]) for each vertex vi ∈ V and use m(vi) to keep track of d(vi) − k(vi). Let
F (vi) denote the set {v|v ∈ NG[vi], t(v) = F} for every vertex vi ∈ V . Following the
initialization of a function f in Steps 1–7, we initialize
d(vi) =


|F (vi)|∑
j=1
(I1 + (ℓ− 1) · d) +
∑
v∈NG[vi]
t(v) 6=F
t(v)

 and m(vi) = d(vi)− k(vi).
The initialization of d(vi) and m(vi) can be done in O(degG(vi) + 1) time. While
f(vi) is replaced by a number x = max{I1, I1 + (⌈ℓ −
M
d
⌉ − 1) · d}, d(v) and m(v) are
respectively decreased by (I1 + (ℓ − 1) · d) − x for every vertex v ∈ NG[vi]. This can be
14
Theorem 6. For any dually chordal graph G, γ(G) = P2(G).
Theorem 7. [9] Given a graph G = (V,E) and an integer k ≥ 1, γ{k}(G) = kγ(G) if
P2(G) = γ(G).
Proof. Suppose that D is a dominating set of a graph G = (V,E) of γ(G) vertices. Let f :
V → {0, 1, 2, . . . , k} be a function defined by f(v) = k if v ∈ D and f(v) = 0 if v ∈ V \D.
Notice that |NG[v] ∩ D| ≥ 1 for every vertex v ∈ V . Therefore, f(NG[v]) ≥ k for every
vertex v ∈ V and thus f is a {k}-dominating function of G. We have γ{k}(G) ≤ kγ(G).
Suppose that P is a 2-packing set of G of P2(G) vertices and P2(G) = γ(G). For
every pair of vertices u, v ∈ P , dG(u, v) > 2. The distance between u and v is at least
3. Let f : V → {0, 1, . . . , k} be a minimum {k}-dominating function of G. For every
vertex v ∈ P , f(NG[v]) ≥ k. Since NG[u] ∩ NG[v] = ∅ for u, v ∈ P , therefore γ{k}(G) ≥
k ·P2(G) = kγ(G). Following the discussion above, γ{k}(G) = kγ(G) if P2(G) = γ(G).
By Theorems 6–7, we can obtain a minimum dominating set D of a dually chordal
graph G = (V,E) by the algorithm of [6], and then a minimum {k}-dominating function
f of G can be obtained by setting f(v) = k if v ∈ D and f(v) = 0 if v ∈ V \D. We have
the following theorem.
Theorem 8. The {k}-domination problem on dually chordal graphs can be solved in
linear-time.
The following corollaries are immediate.
Corollary 9. The {k}-domination problem can be solved in linear-time for doubly chordal
graphs, strongly chordal graphs, directed path graphs, interval graphs, Ptolemaic graphs,
block graphs, and trees.
5 Algorithmic Results on Distance-Hereditary Graphs
This section develops algorithms for the k-tuple domination problem, the {k}-domination
problem, the signed domination problem, the minus domination problem on distance-
16
if |S ∩ NG[v]| ≥ ⌈
|NG[v]|+k
2 ⌉ for every vertex v ∈ V . We can assign a label M(v) =
(t(v) = 0, k(v) = ⌈ |NG[v]|+k2 ⌉) to each vertex v ∈ V and then compute a minimum M -
dominating set D. We can define a function h : V → {−1, 1} such that h(v) = 1 if v ∈ D
and h(v) = −1, otherwise. It is easy to see that the function h is a minimum k-signed
dominating function. Hence, the k-signed domination problem can be solved by using the
algorithm for the M -domination problem on graphs.
This section presents an O(κ3n+m)-time algorithm to solve the M -domination prob-
lem for a distance-hereditary graph G = (V,E), where κ = max{k(v)|v ∈ V }.
A graph is distance-hereditary if any two distinct vertices have the same distance in
every connected induced subgraph containing them. Two well-known classes of graphs,
trees and cographs, both belong to distance-hereditary graphs. Properties of distance-
hereditary graphs have been studied by many researchers [3, 4, 8, 16, 17, 18, 28, 33, 41].
In 1997, Chang et al. showed that distance-hereditary graphs can be defined recursively.
Theorem 10. [12] Distance-hereditary graphs can be defined recursively as follows:
1. A graph consisting of only one vertex is distance-hereditary, and the twin set is the
vertex itself.
2. If G1 and G2 are disjoint distance-hereditary graphs with the twin sets TS(G1) and
TS(G2), respectively, then the graph G = G1 ∪ G2 is a distance-hereditary graph
and the twin set of G is TS(G1) ∪ TS(G2). G is said to be obtained from G1 and
G2 by a false twin operation.
3. If G1 and G2 are disjoint distance-hereditary graphs with the twin sets TS(G1)
and TS(G2), respectively, then the graph G obtained by connecting every vertex of
TS(G1) to all vertices of TS(G2) is a distance-hereditary graph, and the twin set
of G is TS(G1) ∪ TS(G2). G is said to be obtained from G1 and G2 by a true twin
operation.
4. If G1 and G2 are disjoint distance-hereditary graphs with the twin sets TS(G1)
and TS(G2), respectively, then the graph G obtained by connecting every vertex of
TS(G1) to all vertices of TS(G2) is a distance-hereditary graph, and the twin set of
18
is a nonnegative integer. Let κ = max{k(v)|v ∈ V }. Let t and t′ be integers such that
0 ≤ t ≤ κ and 0 ≤ t′ ≤ n. For each vertex v ∈ V , we define a conditional labelling function
CL(M, t, t′)(v) = (t(v), s(v)) by setting s(v) = k(v) − t′ if v ∈ TS(G); s(v) = k(v),
otherwise. A CL(M, t, t′)-dominating set of G is a subset D of V satisfying the following
conditions.
(1) If t(v) = 1, then v ∈ D.
(2) |NG[v] ∩D| ≥ s(v) for all vertices v ∈ V .
(3) If t < κ, then |D ∩ TS(G)| = t; otherwise t ≤ |D ∩ TS(G)|.
Definition 14. Suppose that a distance-hereditary graph G = (V,E) is formed from two
disjoint distance-hereditary graphs G1 = (V1, E1) and G2 = (V2, E2), and every vertex
v of G is associated with a label M(v) = (t(v), k(v)), where t(v) ∈ {0, 1} and k(v) is
a nonnegative integer. We use M1 to represent the restriction of M on V1 defined by
M1(v) = M(v) for every vertex v ∈ V1. We use M2 to represent the restriction of M on
V2 defined by M2(v) =M(v) for every vertex v ∈ V2.
We use γ(M, t, t′) to denote the minimum cardinality of a CL(M, t, t′)-dominating set
of G. If there does not exist a CL(M, t, t′)-dominating set, then γ(M, t, t′) =∞.
Lemma 11. Suppose that G = (V,E) is a distance-hereditary graph and every vertex
v of G is associated with a label M(v) = (t(v), k(v)), where t(v) ∈ {0, 1} and k(v) is a
nonnegative integer. Let κ = max{k(v)|v ∈ V }. Let t and t′ be integers such that 0 ≤ t ≤ κ
and 0 ≤ t′ ≤ n. Assume that p′ is an integer larger than κ. Then, γ(M, t, κ) = γ(M, t, p′).
Proof. Obviously, γ(M, t, p′) ≤ γ(M, t, κ). On the other hand, suppose that D is a
CL(M, t, p′)-dominating set of G. Then,
(1) If t(v) = 1, then v ∈ D.
(2) |NG[v] ∩D| ≥ k(v)− p
′ for all vertices v ∈ V .
(3) If t < κ, then |D ∩ TS(G)| = t; otherwise t ≤ |D ∩ TS(G)|.
Notice that the integer p′ is larger than κ and |NG[v] ∩ D| ≥ 0 for all vertices v ∈
V . The set D is also a CL(M, t, κ)-dominating set of G since κ = max{k(v)|v ∈ V }.
20
is a CL(M2, t2, t
′)-dominating set of G2. Then D is a CL(M,κ, t
′)-dominating set of G.
Hence, γ(M, t, t′) ≤ min
0≤t1≤κ
κ−t1≤t2≤κ
{γ(M1, t1, t
′)+γ(M2, t2, t
′)}. Following the discussion above,
the lemma holds.
Lemma 14. Suppose that G = (V,E) is formed from two disjoint distance-hereditary
graphs G1 = (V1, E1) and G2 = (V2, E2) by a true twin operation. Let t, t
′, and t1
be nonnegative integers such that t, t′, and t1 are not larger than κ. Then, we have
γ(M, t, t′) =


min
0≤t1≤t
{γ(M1, t1,min{κ, t
′ + (t− t1)}) + γ(M2, t− t1,min{κ, t
′ + t1})} if t < κ;
min
0≤t1≤κ
κ−t1≤t2≤κ
{γ(M1, t1,min{κ, t
′ + t2}) + γ(M2, t2,min{κ, t
′ + t1})} if t = κ.
Proof. Notice that the graph G is formed from G1 and G2 by connecting every vertex
in TS(G1) to all vertices in TS(G2), and TS(G) = TS(G1) ∪ TS(G2). We consider the
following two cases.
Case 1: t < κ. For any CL(M, t, t′)-dominating set D of G, |D ∩ TS(G)| = t. Then
|D ∩ TS(G1)| = t1 and |D ∩ TS(G2)| = t − t1 for some integer 0 ≤ t1 ≤ t. Let D1 =
D ∩ V1 and D2 = D ∩ V2. By definition, |D ∩NG[v]|=|D1 ∩NG1 [v]| ≥ k(v) (respectively,
|D∩NG[v]|=|D2∩NG2[v]| ≥ k(v)) if v ∈ V1 \TS(G1) (respectively, v ∈ V2 \TS(G2)). It is
clear that NG[v]∩V1 = TS(G2) (respectively, NG[v]∩V2 = TS(G1)) for every vertex v in
TS(G1) (respectively, TS(G2)). Since |D∩NG[v]| ≥ k(v)−t
′ for every vertex v in TS(G1)
(respectively, TS(G2)), |D1∩NG1 [v]| ≥ k(v)− (t
′+(t− t1)) (respectively, |D2∩NG2 [v]| ≥
k(v) − (t′ + t1)) for every vertex v in TS(G1) (respectively, TS(G2)). By Lemma 11, we
have γ(M, t, t′) ≥ min
0≤t1≤t
{γ(M1, t1,min{κ, t
′ + (t− t1)}) + γ(M2, t− t1,min{κ, t
′ + t1})}.
On the other hand, let p1 = min{κ, t
′+(t−t1)} and p2 = min{κ, t
′+t1}. Suppose that
D1 is a CL(M1, t1, p1)-dominating set of G1 and D2 is a CL(M2, t − t1, p2)-dominating
set of G2. Let D = D1 ∪ D2. Obviously, |D ∩ NG[v]| ≥ k(v) for every vertex v ∈
V \TS(G). For every vertex v in TS(G1), |D1∩NG1 [v]|=|D∩NG[v]|−(t−t1) ≥ k(v)−p1.
Therefore, |D ∩ NG[v]| ≥ k(v) − (p1 − (t − t1)) for every vertex v in TS(G1). Similarly,
22
v ∈ TS(G1), |D ∩NG[v]| ≥ |D1 ∩NG1 [v]| + t2 ≥ k(v) − p + t2 ≥ k(v) − t
′. For a vertex
v ∈ TS(G2), |D ∩ NG[v]| ≥ |D2 ∩ NG2 [v]| + t ≥ k(v) − t + t = k(v). Therefore, D is a
CL(M, t, p)-dominating set of G. Hence, we have γ(M, t, t′) ≤ min
0≤t2≤κ
{γ(M1, t,min{κ, t
′+
t2}) + γ(M2, t2, t)}. Following the discussion above, the lemma holds.
Based upon Lemmas 12–15, we can design a dynamic programming algorithm to solve
the M -domination problem on distance-hereditary graphs with the aid of the PTF-trees.
Hence, we have the following theorem.
Theorem 16. The M -domination problem can be solved in O(κ3n+m) time for distance-
hereditary graphs.
Proof. Following Lemmas 12 to 15 and the recursive definition of distance-hereditary
graphs in Theorem 10, we can compute theM -domination number of a distance-hereditary
graph G in O(κ3n+m) time. Moreover, it is not difficult to see that the M -dominating
set of G of minimum cardinality can be obtained in the same time bound.
Corollary 17. The k-signed domination problem can be solved in O((k + n)3n) time for
distance-hereditary graphs.
Corollary 18. For a fixed positive integer k, the k-tuple domination problem can be solved
in O(k3n+m) time for distance-hereditary graphs.
5.2 The k-Minus Domination Problem on Distance-Hereditary Graphs
This section gives an O(n6)-time algorithm to compute the k-minus domination number
for any given distance hereditary graph.
Definition 15. Suppose that G = (V,E) is a distance-hereditary graph and TS(G) is
the twin set of G. Let p, q, and r be integers such that 0 ≤ p, q ≤ n and −n ≤ r ≤ n.
A (p, q, r)-minus dominating function g : V → {1, 0,−1} of G is a function satisfying the
following conditions.
24
Proof. In this case, the graph G is formed from G1 and G2 by connecting every vertex
in TS(G1) to all vertices in TS(G2), and TS(G) = TS(G1) ∪ TS(G2). Suppose that f
is a (p, q, r)-minus dominating function of G with f(V ) = γ−(G, p, q, r). Let g be the
function of G1 defined by g(v) = f(v) for every vertex v ∈ V1 and let h be the function
of G2 defined by h(v) = f(v) for every vertex v ∈ V2. Then, in TS(G1), there are
p1 vertices with the value 1 and q1 vertices with the value −1 for some 0 ≤ p1 ≤ p
and 0 ≤ q1 ≤ q. Therefore, in TS(G2), there are p − p1 vertices with the value 1
and q − q1 vertices with the value −1. By definition, it is easy to see that f(NG[v]) =
g(NG1 [v]) ≥ k for every vertex v ∈ V1 \ TS(G1) and f(NG[v]) = h(NG2 [v]) ≥ k for every
vertex v ∈ V2 \ TS(G2). Consider a vertex v ∈ TS(G1). Since NG[v] ∩ V2 = TS(G2),
we have f(NG[v]) + r = g(NG1 [v]) + r + (p − p1) − (q − q1) ≥ k. Similarly, we have
f(NG[v])+r = h(NG2 [v])+r+(p1−q1) ≥ k for every vertex v in TS(G2). It is clear that the
function g is a (p1, q1, r+p−p1−q+q1)-minus dominating function of G1 and the function
h is a (p−p1, q− q1, r+p1− q1)-minus dominating function of G2. Hence, γ
−(G, p, q, r) ≥
min0≤p1≤p,0≤q1≤q{γ
−(G1, p1, q1, r + p− p1 − q + q1) + γ
−(G2, p− p1, q − q1, r + p1 − q1)}.
On the other hand, for any integer p1 and q1 with 0 ≤ p1 ≤ p and 0 ≤ q1 ≤ q,
suppose that g is a (p1, q1, r + p − p1 − q + q1)-minus dominating function of G1 with
g(V1) = γ
−(G1, p1, q1, r+ p− p1− q+ q1) and that h is a (p− p1, q− q1, r+ p1− q1)-minus
dominating function of G2 with h(V2) = γ
−(G2, p−p1, q−q1, r+p1−q1). Define a function
f of G as follows: f(v) = g(v) if v ∈ V1 and f(v) = h(v) if x ∈ V2. By definition, it is easy
to see that f(NG[v]) = g(NG1 [v]) ≥ k for every vertex v ∈ V1 \ TS(G1) and f(NG[v]) =
h(NG2 [v]) ≥ k for every vertex v ∈ V2 \ TS(G2). Consider a vertex v ∈ TS(G1). Since
NG[v] ∩ V2 = TS(G2), we have g(NG1 [v]) + r + (p − p1) − (q − q1) = f(NG[v]) + r ≥ k.
Similarly, we have h(NG2 [v]) + r + (p1 − q1) = f(NG[v]) + r ≥ k for every vertex v in
TS(G2). It is clear that the function f is a (p, q, r)-minus dominating function of G.
Hence, γ−(G, p, q, r) ≤ min0≤p1≤p,0≤q1≤q{γ
−(G1, p1, q1, r + p − p1 − q + q1) + γ
−(G2, p −
p1, q − q1, r + p1 − q1)}.
Lemma 22. Suppose that G = (V,E) is formed from distance-hereditary graphs G1 =
26
we consider the following generalization of the {k}-domination problem.
Suppose that G = (V,E) is a distance-hereditary graph. Let k be a fixed positive
integer, and let p and q be two integers with such that p ≥ 0 and 0 ≤ q ≤ k. A
(p, q)-integer function of G is a function g : V → {0, 1, 2, . . . , k} satisfying the following
conditions.
(1) If q < k, then q = g(TS(G)); otherwise q ≤ g(TS(G)).
(2) The value g(NG[v]) + p ≥ k if v ∈ TS(G) and g(NG[v]) ≥ k if v ∈ V \ TS(G).
The (p, q)-domination number of G = (V,E) is γ(G, p, q) = min{g(V ) | g is a (p, q)-
integer function of G}. If there does not exist any (p, q)-integer function of G, then
γ(G, p, q) =∞.
Lemma 24. Assume that G = (V,E) is a distance-hereditary graph. Let k be a fixed
positive integer. Let q be an integer with 0 ≤ q ≤ k. Suppose that p′ is an integer larger
than k. Then γ(G, k, q) = γ(G, p′, q).
Proof. Obviously, γ(G, p′, q) ≤ γ(G, k, q). On the other hand, suppose that a function
f : V → {0, 1, . . . , k} is a (p′, q)-integer function of G. Then, f(NG[v]) + p
′ ≥ k if
v ∈ TS(G) and f(NG[v]) ≥ k if v ∈ V \ TS(G). Then, f(NG[v]) ≥ 0 for every vertex
v ∈ TS(G). In other words, f(NG[v]) + k ≥ k for every vertex v ∈ TS(G). Hence, the
function f is also a (k, q)-integer function of G. The inequality γ(G, k, q) ≥ γ(G, p′, q)
holds. Following the discussion above, we have γ(G, k, q) = γ(G, p′, q).
By Lemma 24, this section considers only (p, q)-integer functions with 0 ≤ p ≤ k of a
distance-hereditary graph G.
Lemma 25. Assume that G = (V,E) is a distance-hereditary graph. Let k be a positive
integer. Let p and q be integers with 0 ≤ p, q ≤ k. The {k}-domination number γ{k}(G)
is min0≤q≤k{γ(G, 0, q)}.
Proof. The lemmas follows the fact that g is a {k}-dominating function of G if and only
if g is a (0, q)-integer function of G for some q ∈ {0, 1, 2, . . . , k}.
28
Lemma 28. Suppose that G is formed from two disjoint distance-hereditary graphs
G1 = (V1, E1) and G2 = (V2, E2) by a true twin operation. Let k be a fixed positive integer
and let p and q be integers with 0 ≤ p, q ≤ k. Let q1 and q2 be two nonnegative integers.
Then, we have γ(G, p, q) =


min
0≤q1≤q
{γ(G1,min{k, p+ (q − q1)}, q1) + γ(G2,min{k, p+ q1}, q − q1)} if q < k ;
min
0≤q1≤k
k−q1≤q2≤k
{γ(G1,min{k, p+ q2}, q1) + γ(G2,min{k, p+ q1}, q2)} if q = k .
Proof. Notice that the graph G is formed from G1 and G2 by connecting every vertex
in TS(G1) to all vertices in TS(G2), and TS(G) = TS(G1) ∪ TS(G2). We consider the
following two cases.
Case 1: q < k. For any (p, q)-integer function f of G, the value f(TS(G)) is equal
to q. Then, f(TS(G1)) = q1 and f(TS(G2)) = q − q1 for some integer 0 ≤ q1 ≤ q. Let
g be a function defined by g(v) = f(v) for every vertex v in V1. Let h be a function
defined by h(v) = f(v) for every vertex v in V2. By definition, g(NG1 [v]) = f(NG[v]) ≥ k
(respectively, h(NG2 [v]) = f(NG[v]) ≥ k) for every vertex v ∈ V1 \ TS(G1) (respectively,
v ∈ V2\TS(G2)). It is clear that NG[v]∩V2 = TS(G2) (respectively, NG[v]∩V1 = TS(G1))
for every vertex v in TS(G1) (respectively, TS(G2)). Then, f(NG[v]) + p is equal to
g(NG1 [v]) + p + (q − q1) (respectively, h(NG2 [v]) + p + q1) for every vertex v ∈ TS(G1)
(respectively, v ∈ TS(G2)). The function g is a (p + q − q1, q1)-integer function of G1
and the function h is a (p + q1, q − q1)-integer function of G2. By Lemma 24, we have
γ(G, p, q) ≥ min0≤q1≤q{γ(G1,min{k, p+ (q − q1)}, q1) + γ(G2,min{k, p+ q1}, q − q1)}.
Let p1 = min{k, p + q − q1} and p2 = min{k, p + q1}. Suppose that g is a (p1, q1)-
integer function of G1 and h is a (p2, q − q1)-integer function of G2. Define a function
f of G as follows: f(v) = g(v) if v ∈ V1 and f(v) = h(v) if v ∈ V2. Then f(NG[v]) =
g(NG1 [v]) ≥ k (respectively, f(NG[v]) = h(NG2 [v]) ≥ k) for every vertex v ∈ V1 \ TS(G1)
(respectively, v ∈ V2 \ TS(G2)). For a vertex v ∈ TS(G1), we have f(NG[v]) + p =
g(NG1 [v]) + p + (q − q1) ≥ g(NG1 [v]) + p1 ≥ k. For a vertex v ∈ TS(G2), we have
f(NG[v]) + p = h(NG2 [v]) + p + q1 ≥ h(NG2 [v]) + p2 ≥ k. Then, the function f is a
30
p + q ≥ k. Then, the function f is a (p, q)-integer function of G. Therefore, we have
γ(G, p, q) ≤ min0≤q2≤k{γ(G1,min{k, p + q2}, q) + γ(G2, q, q2)} Following the discussion
above, the lemma holds.
Based upon Lemmas 26–29, we can design a pseudo polynomial-time algorithm to
solve the minus domination problem on distance-hereditary graphs by the dynamic pro-
gramming technique. Hence, we have the following theorem.
Theorem 30. For a fixed positive integer k, the {k}-domination problem can be solved
in O(k3n+m) time for distance-hereditary graphs.
Proof. The theorem follows Lemmas 26 to 29 and the recursive definition of distance-
hereditary graphs in Theorem 10. Moreover, it is not difficult to see that a {k}-dominating
function of a distance-hereditary graph G of minimum weight can be obtained in the same
time bound.
6 NP-complete results
In this section, we study the k-tuple, k-signed, and k-minus domination problems on
doubly chordal graphs, planar graphs, and chordal bipartite graphs. We also study the
{k}-domination problem on planar graphs and chordal bipartite graphs for k = 2, 3.
Before presenting the NP-complete results, we restate the k-tuple domination, k-signed
domination, k-minus domination, and {k}-domination problems as decision problems.
(1) The k-tuple domination problem:
Instance: A graph G = (V,E) and positive integers k and K.
Question: Is γ×k(G) ≤ K?
(2) The k-signed domination problem:
Instance: A graph G = (V,E) and positive integers k and K.
Question: Is γk,s(G) ≤ K?
(3) The k-minus domination problem:
32
|EH | = 2n+ 5m. Evidently, the construction of H can be done in polynomial time.
For any signed dominating function h of H, if a vertex w is of degree 1 and NH(w) =
{u}, then h(u) = h(w) = 1. Therefore, h(v) = 1 for every vertex v ∈ VH \ VG. In
particular, if h(v) = −1, then v ∈ VG. Note that |NG[v]| = degG(v) + 1 and |NH [v]| =
2 · (degG(v) + 1) for every vertex v ∈ VG. It is impossible that h(v
′) = −1 for every
vertex v′ ∈ NG[v]. That is, at least one vertex of NG[v] is of value 1. Hence, the
set {v ∈ VG|h(v) = 1} is a dominating set of G. For a positive integer K, let K
′ =
|VH | − 2(n − K) = 4m + n + 2K. It is easy to see that γ(G) ≤ K if and only if
γs(G) ≤ K
′.
Theorem 32. The minus domination problem is NP-complete on chordal bipartite graphs
and planar graphs.
Proof. It is obvious that the minus domination problem on chordal bipartite graphs (re-
spectively, planar graphs) is in NP. We next show the NP-completeness of the minus
domination problem on chordal bipartite graphs (respectively, planar graphs) by reducing
the domination problem on chordal bipartite graphs (respectively, planar graphs) to it in
polynomial-time. The following proof is based upon a construction proposed by Dunbar
et al. [19] for proving the NP-completeness of the minus domination problem on bipartite
graphs.
Given a graph G = (VG, EG), we construct the graph H = (VH , EH) by adding a path
of length 3, say v−v1−v2−v3, to each vertex v ofG. That is, VH = VG∪(
⋃
v∈VG
{v1, v2, v3})
and EH = EG ∪ (
⋃
v∈VG
{(v, v1), (v1, v2), (v2, v3)}). Then, H is a chordal bipartite graph
(respectively, planar graph) if G is a chordal bipartite graph (respectively, planar graph).
Clearly, H can be constructed in polynomial time.
Claim 1. γ−(H) = γ(H) = γ(G) + |VG|
Proof. Among the minimum minus dominating functions of H, let h be one which assigns
the value −1 to as few vertices as possible. Let v ∈ VG, and let v, v1, v2, v3 be the
path of length 3 added to v. Clearly, h(v2) ≥ 0 and h(v3) ≥ 0. If h(v1) = −1, then
34
2
G
3
G
4
G
5
G
6
G
1
v
2
v
1
v
2
v
1
v
2
v 1v 2v
1
v
2
v
Figure 2: Graphs G2 −G6.
on planar graphs. We next show the NP-completeness of the k-minus (respectively, k-
signed and k-tuple) domination problem on planar graphs by reducing the (k − 1)-minus
(respectively, (k − 1)-signed and (k − 1)-tuple) domination problem on planar graphs to
it in polynomial time.
Let G = (VG, EG) be a planar graph. We construct the graph H = (VH , EH) using
the following steps:
(1) For each vertex v ∈ VG, we construct the subgraph Gv = (VGv , EGv ) = Gk as shown
in Figure 2. Clearly, Gv is a planar graph.
(2) Among all vertices in VGv , we specify two vertices v1 and v2 which are in the outer
face of Gv as shown in Figure 2 and let vertex v be adjacent to v1.
36
the k-minus (respectively, k-signed and k-tuple) domination problem on chordal bipar-
tite graphs by reducing the (k − 1)-minus (respectively, (k − 1)-signed and (k − 1)-tuple)
domination problem on chordal bipartite graphs to it in polynomial time.
Let G = (VG, EG) be a chordal bipartite graph. We construct the graph H = (VH , EH)
using the following steps:
(1) For each vertex v ∈ VG, we construct the subgraph Gv = (VGv , EGv ) which is a
complete bipartite graph Kk−1,k.
(2) Among all vertices w in VGv with degGv(w) = k, we pick a vertex called v1 and then
we let v be adjacent to v1.
Clearly, the construction of the graph H can be done in polynomial-time and H is a
chordal bipartite graph.
Claim 5. γ−k (H) = γ
−
k−1(G) + |VG| · (2k − 1).
Proof. Suppose that f is a minimum (k−1)-minus dominating function ofG. Let g : VH →
{−1, 0, 1} be a function of H such that g(v) = f(v) if v ∈ VG and g(v) = 1 if v ∈ VH \VG.
For every vertex v ∈ VG, it has a neighbor v1 in Gv with g(v1) = 1. For every vertex
w ∈ Gv , g(NGv [w]) ≥ k and g(NH [v1]) = g(NGv [v1])+g(v) = k+1+g(v) ≥ k. Hence, g is
a k-minus dominating function of H and γ−k (H) ≤ γ
−
k−1(H) + |VG| · (2k − 1). Conversely,
let g be a minimum k-minus dominating function of H. Let f : VG → {−1, 0, 1} be a
function of G such that f(v) = g(v) for every vertex v ∈ VG. It is easy to verify that
g(w) = 1 for every vertex w ∈ VH \ VG. For every vertex v ∈ VG, it has a neighbor
v1 in Gv with g(v1) = 1. Hence, f is a (k − 1)-minus dominating function of G and
γ−k (H) = g(VH) ≥ γ
−
k−1(G) + |VG| · (2k − 1). Following the discussion above, we have
γ−k (H) = γ
−
k−1(G) + |VG| · (2k − 1).
The following two claims can be proved by arguments similar to those for proving the
claim above.
Claim 6. γk,s(H) = γk−1,s(G) + |VG| · (2k − 1).
38
vertex v ∈ V , g(NH [v]) = g(NG[v])+g(v1) ≥ 2. Hence, the function g is a {2}-dominating
function of H and γ{2}(H) ≤ γ(G) + 3n.
Conversely, let g be a minimum {2}-dominating function of H. We define a function
h : V (H)→ {0, 1, 2} as follows.
Case 1: A vertex v in V is of the value g(v) in {0, 1}. Then, g(V (Gv)) is at least 3.
We let h(v) = g(v), h(v1) = h(v2) = h(v3) = 1, and h(v4) = 0.
Case 2: A vertex v in V is of the value g(v) = 2. Then, g(V (Gv)) ≥ 2 if g(v1) = 0;
otherwise g(V (Gv)) ≥ 3. Let Pv = {w | w ∈ NG(v), g(NH [w]) = 2}. Notice that g(w) = 0
for every vertex w ∈ Pv and g(VGw) ≥ 3. For every vertex w ∈ Pv , we let h(w) = g(w),
h(w1) = h(w2) = h(w3) = 1, h(w4) = 0, and let h(v) = 1, h(v1) = h(v2) = h(v3) = 1, and
h(v4) = 0.
It can be easily verified that h(V (H)) ≤ g(V (H)), the function h is a {k}-dominating
function of H, and the function h restricted on V is a dominating function of G. Hence,
γ{2}(H) ≥ γ(G) + 3n. Following the discussion above, γ{2}(H) = γ(G) + 3n.
Claim 9. γ{3}(G) = γ{2}(G) + 4n.
Proof. Suppose that f is a minimum {2}-dominating function of G. Notice that for every
vertex v ∈ V , there are four corresponding vertices v1, v2, v3, and v4 in V (H) \ V . We
define a function g : V (H)→ {0, 1, 2, 3} of H such that for each vertex v ∈ V , g(v) = f(v),
g(v1) = g(v2) = g(v3) = g(v4) = 1. Clearly, g(NH [vi]) ≥ 3 for 1 ≤ i ≤ 4. For each vertex
v ∈ V , g(NH [v]) = g(NG[v])+ g(v1) ≥ 3. Hence, g is a {3}-dominating function of H and
γ{3}(H) ≤ γ{2}(G) + 4n.
Conversely, let g be a minimum {3}-dominating function of H. We define a function
h : V (H)→ {0, 1, 2, 3} as follows.
Case 1: A vertex v in V is of the value g(v) in {0, 1, 2}. Then, g(V (Gv)) is at least 4.
We let h(v) = g(v), h(v1) = h(v2) = h(v3) = h(v4) = 1.
Case 2: A vertex v in V is of the value g(v) = 3. Then, the value g(V (Gv)) is at least
3 if g(v1) = 0; the value g(V (Gv)) is at least 4 if g(v1) ∈ {1, 2, 3}. Let Pv = {w | w ∈
40
if v ∈ VG and g(v) = 1 if v ∈ VH \ VG. For 1 ≤ i ≤ k, Xi ∪ {w} is a clique of size
k, g(NH [w] \ VG) = (n + k) · (k − 1) + 1 > n, and every vertex v ∈ VG has a common
neighbor w with g(w) = 1. The function g is also a k-minus dominating function of
H. Hence γ−k (H) ≤ (n + k) · (k − 1) + 1 + γ
−
k−1(G). Conversely, let g be a minimum
k-minus dominating function of H. By the definition of a k-minus dominating function,
g(v) must be 1 for every vertex v ∈ Xi ∪ {w}, 1 ≤ i ≤ n + k. We define a function
f : VG → {−1, 0, 1} of G such that g(v) = f(v) for every vertex v ∈ VG. For every
vertex v ∈ VG, g(NH [v]) = f(NG[v]) + g(w) ≥ k . Hence f is a (k − 1)-minus dominating
function of G and γ−k (H) ≥ (n+ k)(k− 1)+ 1+ γ
−
k−1(G). Following the discussion above,
γ−k (H) = (n+ k) · (k − 1) + 1 + γ
−
k−1(G).
The following two claims can be proved by arguments similar to those for proving the
claim above.
Claim 11. γk,s(H) = (n+ k)(k − 1) + 1 + γk−1,s(G).
Claim 12. γ×k(H) = (n+ k)(k − 1) + γ×k−1(G).
The three claims above imply that for a positive integer K, (1) γ−k−1(G) ≤ K if and
only if γ−k (H) ≤ (n+k)(k−1)+1+K, (2) γk−1,s(G) ≤ K if and only if γk,s(H) ≤ (n+k)(k−
1)+1+K and (3) γ−k−1(G) ≤ K if and only if γ
−
k (H) ≤ (n+k)(k−1)+1+K. Hence, the
k-tuple, k-signed, and k-minus domination problems are NP-complete on doubly chordal
graphs and hence on dually chordal graphs and chordal graphs.
7 Evaluation and Conclusion
We have obtained the expected results of the project. Furthermore, some of the obtained
results have been written down and published in the proceedings of the 23th Workshop
on Combinatorial Mathematics and Computation Theory , Taiwan, 2006 [36]. The journal
version of it has been submitted to Discrete Mathematics for possible publication. We
think that it will be accepted with high probability.
42
[11] G.J. Chang, Algorithmic aspects of domination in graphs, in: D.Z. Du, P.M. Parda-
los eds., Handbook of Combinatorial Optimization, Vol. 3, Kluwer, Boston, MA,
1998, pp. 339–405.
[12] M.S. Chang, S.Y. Hsieh, and G.H. Chen, Dynamic programming on distance-
hereditary graphs, Lecture Notes in Computer Science, Vol. 1350 (1997) 344–353.
[13] Y.M. Chen, The fault tolerant domination problem on strongly chordal graphs, Mas-
ter Thesis, National Chung Cheng University, Taiwan, July 2001.
[14] E.J. Cockayne, S.E. Goodman, and G.T. Hedetniemi, A linear algorithm for the
domination number of a tree, Information Processing Letters, 4 (1975) 41–44.
[15] P. Damaschke, Minus domination in small-degree graphs, Discrete Applied Mathe-
matics, 108 (2001) 53–64.
[16] A. D’atri and M. Moscarini, Distance-hereditary graphs, Steiner trees, and con-
nected domination, SIAM Journal on Computing , 17 (1988) 521–538.
[17] D.P. Day, O.R. Oellermann, and H.C. Swart, Steiner distance-hereditary graphs,
SIAM Journal on Discrete Mathematics, 7 (1994) 437–442.
[18] D.P. Day, O.R. Oellermann, and H.C. Swart, A characterization of 3-Steiner
distance-hereditary graphs, Networks, 30 (1997) 243–253.
[19] J. Dunbar, W. Goddard, S. Hedetniemi, A. McRae, and M.A. Henning, The algo-
rithmic complexity of minus domination in graphs, Discrete Applied Mathematics,
68 (1996) 73–84.
[20] G. Dura´n, M.C. Lin, and J.L. Szwarcfiter, On clique-transversal and clique-
independent sets, Annals of Operations Research, 116 (2002) 71–77.
[21] F.F. Dragan, HT -graphs: centers, connected r-domination, and Steiner trees, The
Computer Science Journal of Moldova, 1 (1993) 64–83.
44
[33] E. Howorka, A characterization of distance-hereditary graphs, Quarterly Journal of
Mathematics (Oxford), 28 (1977) 417–420.
[34] S.F. Hwang and G.J. Chang, The edge domination problem, Discussiones Mathe-
maticae Graph Theory , 15 (1995) 51–57.
[35] R. Laskar, J. Pfaff, S.M. Hedetniemi, and S.T. Hedetniemi, On the algorithm com-
plexity of total domination, SIAM Journal on Algebraic Discrete Methods, 5 (1984)
420–425.
[36] C.M. Lee and M.S. Chang, On the complexity of some variations of Y -dominating
functions on graphs, in: Proceedings of the 23th Workshop on Combinatorial Math-
ematics and Computation Theory , Taiwan (2006) 131–144.
[37] C.S. Liao and G.J. Chang, Algorithmic aspect of k-tuple domination in graphs,
Taiwanese Journal of Mathematics, 6 (2002) 415–420.
[38] C.S. Liao and G.J. Chang, k-tuple domination in graphs, Information Processing
Letters, 87 (2003) 45–50.
[39] M. Moscarini, Doubly chordal graphs, Steiner trees, and connected domination,
Networks, 23 (1993) 59–69.
[40] H. Mu¨ller and A. Brandsta¨dt, The NP-Completeness of Steiner tree and dominating
set for chordal bipartite graphs, Theoretical Computer Science, 53 (1987) 257–265.
[41] H. Mu¨ller and F. Nicolai, Polynomial time algorithms for Hamiltonian problems
on bipartite distance-hereditary graphs, Information Processing Letters, 46 (1993)
225–230.
[42] F. Nicolai and T. Szymczak, Homogeneous sets and domination: A linear time
algorithm for distance-hereditary graphs, Networks 37 (2001) 117-128.
46
出席國際學術會議心得報告
計畫編號 NSC 95—2221—E—194—012
計畫名稱 特殊圖上的 Y -支配集問題
出國人員姓名
服務機關及職稱
張貿翔，國立中正大學資訊工程學系，教授
會議時間地點 2007/6/21~23, Jena, Germany
會議名稱 The 33rd International Workshop on Graph-Theoretic Concepts in ComputerScience (WG 2007)
發表論文題目 The 3-Steiner Root Problem
一、參加會議經過
這次僥倖有一篇論文被這個會議接受：
The 33rd International Workshop on Graph-Theoretic Concepts in Computer Science (WG 2007):
發表論文題目: The 3-Steiner Root Problem.
這個會議(WG)主要從德國發源，如今維持每兩年一年在德國、一年在歐洲其他國家舉辦。這
個會議受到德國國科會 The Deutsche Forschungsgemeinschaft (German Research Foundation)
相當充裕的經費補助，因此註冊費與參加會議期間所受到的待遇相比，顯得非常便宜。這個
會議是歐洲特殊圖演算法研究學者雲集的交流場合。本次會議共收到 99 篇投稿，經審稿後接
受 30 篇於會議上發表。論文接受率只有 30.3 百分比。這個會議的論文主要由法國、德國、
挪威、英國、美國、捷克等國的研究學者所發表。今年來自亞洲的論文只有一篇由我們所發
表。去年會議有很多日本學者參加，今年只有一位。他純粹參加會議，並未發表論文。本次
會議邀請兩位學者演講，一位是美國西北大學電機工程暨電腦科學系 Ming-Yang Kao 教授。
他是台灣大學的畢業生。
參加三天的會議之後，我順道參訪了坐落於德國西北部一個古老小鎮 Aachen 的 RWTH
Aachen University 的 Department of Computer Science 的 Theoretic Computer Science 研究群。主
持該研究群的教授為 Peter Rossmanith。他於去年八月來台參加 COCOON 2006 會議時，我邀
請他順道訪問中正大學，之後他就愛上了台灣寶島的生活。去年十一月他再度訪問中正大學
一個月。我也安排他訪問東華大學、中央研究院。之後他推薦我的兩位博士生申請得到行政
院國家科學委員會與德國學術交流協會（簡稱 DAAD）簽訂合作協定（簡稱三明治計畫）的
獎學金到 Prof. Peter Rossmanith 任教的德國 RWTH Aachen University 的 Department of
Computer Science 的 Theoretic Computer Science 組訪問研究一年。知道我要到德國參加會議
後，他邀我順道訪問 RWTH Aachen University。我們也合作一個研究，預計今年可以完成一
篇論文。RWTH Aachen University 為德國機械工程研究的重鎮。在該校訪問一周，讓我更了
解德國大學生活與德國學制。這是個難得的經驗。
