2although their applicability for nonlinear models of structures and non-Gaussian uncertainties is seldom
verified either empirically or theoretically.
Several important breakthroughs [12,14,15,16,17] have produced Bayesian state-estimation algo-
rithms that are applicable to highly nonlinear models of a system. State estimation for general nonlinear
dynamical models is still an active research area, and novel techniques (e.g., [18,19]) can be found in the
most recent signal-processing literature. Although these breakthroughs have had significant impact in the
area of signal processing, they are rarely seen in civil engineering. Exceptions include [20,21], who have
implemented an improved version of Kitagawa’s approach for system identification and damage detection.
2. STATE ESTIMATION
Let nkx R denote the model state at time k, while pku R and qky R denote the observed input and
observed output for the system at time k . The discrete-time state-space model of a dynamical system can
then be modeled by:
1 1 1( , , )k k k k kx f x u w   ( , , ) 1, 2...k k k k ky h x u v k T  (1)
where lkw R and mkv R are introduced to account for unknown disturbances exciting the system and
unknown prediction errors (from the modeling and measurement processes), respectively; kf is the pre-
scribed state transition function at time k ; and kh is the prescribed observation function at time k . The
two equations in (1) are called, from left to right, state transition (or evolution) and observation (or output)
equations, respectively. The values of the variables kx , ky , kw and kv are uncertain, while ku is as-
sumed to be known excitation.
For each time k , the dynamical system input ku and output kˆy are measured. Note that ky de-
notes the uncertain value of the observed output (before it is measured) whereas kˆy denotes the measured
value of ky that becomes available at time k . Also, 1 2ˆˆ ˆ{ , ,..., }ky y y and 1 2{ , ,..., }ku u u are denoted by
kˆY and kU , respectively. Our goal is to evaluate sequentially the conditional probability density function
(PDF) ˆ( | )k kp x Y for the state kx at every time k , i.e., to perform a sequential update of this conditional
PDF using the measured system input and output up to the current time, based on prescribed probabilistic
models for kw and kv . From this conditional PDF, some important features of the state can be estimated,
such as the conditional expectation ˆ( | )k kE x Y and conditional covariance matrix ˆ( | )k kCov x Y . Note that
the conditioning of every PDF on kU and the chosen model in (1) is left implicit.
The basic equations for updating 1 1ˆ( | )k kp x Y  to ˆ( | )k kp x Y are the predictor and updater (or
corrector) equations that follow from the Theorem of Total Probability and Bayes Theorem, respectively:
1 1 1 1 1
1 1
11
ˆ ˆ( | ) ( | ) ( | )
ˆ ˆˆ ˆ( | ) ( | ) ( | ) ( | )ˆ( | ) ˆˆ ˆˆ ( | )( | ) ( | )
k k k k k k k
k k k k k k k k
k k
k kk k k k k
p x Y p x x p x Y dx
p y x p x Y p y x p x Y
p x Y
p y Yp y x p x Y dx
    
 


 


(2)
where 1ˆkY  is dropped in 1( | )k kp x x  and ˆ( | )k kp y x because the models for the state transition and ob-
servation PDFs make it irrelevant. The main challenge in Bayesian state estimation for nonlinear models
is that these basic equations cannot be readily evaluated because they involve high-dimensional integra-
tions.
3. PARTICLE FILTER
When kf and kh in (1) are both linear in ku , kx , kw and kv and all uncertainties are Gaussian, the con-
ditional PDF ˆ( | )k kp x Y is also Gaussian and can be updated analytically in a sequential manner. The up-
dating algorithm is the well-known Kalman filter (KF). In the case that the adopted dynamical model is
4where
0 1
1
ˆ ˆ ˆ ˆ ˆ( ) ( | ) ( | )
ˆ ˆ( | )
k
i i i i
m m m m
i m
k i
k k
p x p y x p x x
q X Y



 

 (6)
is the non-normalized importance weight of the i-th sample. Note that the likelihood functions
ˆ ˆ( | )im mp y x and 1ˆ ˆ( | )
i i
m mp x x  can be readily evaluated using the prescribed PDFs for mv and mw if the
mappings in (1) uniquely specify mv and mw , given 1, andm m my x x  . It is shown in [24] that this estima-
tor is asymptotically unbiased if the support region for ˆ( | )k kp X Y is a subset of that for ˆ( | )k kq X Y . Any
quantity of interest can be estimated with the appropriate ( )r  function in (5); for instance, if
( )k kr X X , ˆ[ ( ) | ]k kE r X Y is simply the conditional expectation ˆ[ | ]k kE X Y ; if ( ) Tk k kr X X X ,ˆ[ ( ) | ]k kE r X Y is the conditional second moment ˆ[ | ]Tk k kE X X Y . In practice, the quantity of interest
might be any facility performance metric such as peak interstory drift, repair cost, repair duration, casual-
ties, etc.
The chosen ˆ( | )k kq X Y must also be Markovian since a Markovian PF algorithm is desired. In
other words, the structure of ˆ( | )k kq X Y must be such that 1kX  is independent of ky conditioned on
1kY  . The selection of such an importance sampling PDF is discussed in [23,25]. The conclusion is that
the following importance sampling PDF is optimal:
0 1
1
ˆ ˆ( | ) ( ) ( | , )
k
k k m m m
m
q X Y p x p x x y

  (7)
With this choice, one can see that the importance weights can be computed sequentially:
1
1
1
ˆ ˆ ˆ ˆ( | ) ( | )
ˆ ˆ ˆ( | , )
i i i
i i k k k k
k k i i
k k k
p y x p x x
p x x y
  

   (8)
Note that sampling from ˆ( | )k kq X Y requires the ability to sample from 1 ˆ( | , )m m mp x x y , which is gen-
erally not Gaussian. A solution is to find a Gaussian PDF 1 ˆ( | , )G m m mp x x y whose first two moments are
close to this PDF. Such a task can be accomplished by using a single-time-step EKF algorithm [18,23].
Because of the structure of the algorithm, at any time k , we are only required to store the sam-
pled states and weights in time steps k and 1k , if the quantity of interest is ( )kr x and so depends only
on the current state (although, clearly, additional dependence on the previous state 1kx  can also be
treated). As a result, the following recursive algorithm can be used:
Basic PF algorithm
1. Initialize the N samples: Draw 0ˆfrom ( )
ix p x and set 1 , 1,...,i N i N  .
2. At time k , store the previous samples and weights
ˆi i i ix x    (9)
For 1,...,i N , draw 1ˆ ˆfrom ( | , )i iG k k kx p x x x y and update the importance weight
1
1
ˆ ˆ ˆ( | ) ( | )
ˆ ˆ( | , )
i i i
i i k k k k
i i
G k k k
p y x x p x x x x
p x x x x y
  

    
 

 (10)
For 1,...,i N , ˆ[ ( ) | ]k kE r x Y can be approximated:
1 1
ˆ ˆ[ ( ) | ] ( )
N N
i j i
k k
i j
E r x Y r x 
 
     
   
  (11)
64,
3,
2,
1,
t
t
t
t
t
x
x
x
x
x
 
 
  
 
 













1
2
3
4
000
000
000
000
m
m
m
m
M

















1
2
3
4
m
m
m
m
F
4, 4,
4, 4, 3, 3,
3, 3, 2, 2,
2, 2, 1,
0 0
0
0
0 0
t t
t t t t
t
t t t t
t t t
c c
c c c c
C
c c c c
c c c
 
       
   
4, 4,
4, 4, 3, 3,
3, 3, 2, 2,
2, 2, 1,
0 0
0
0
0 0
t t
t t t t
t
t t t t
t t t
k k
k k k k
K
k k k k
k k k
 
       
   
(13)
,i tx is the displacement of the ( 1i )-th floor (fifth floor is the roof) relative to the ground at time t ; tu is
the acceleration at the base (first floor of the building); and ,i tc and ,i tk are the inter-story damping coef-
ficient and stiffness of the i -th story, respectively, at time t .
0 5 10 15 20
0
200
400
600
k 4
(t)
(M
N
/m
)
0 5 10 15 20
0
200
400
600
k 3
(t)
(M
N
/m
)
0 5 10 15 20
0
200
400
600
k 2
(t)
(M
N
/m
)
0 5 10 15 20
0
200
400
600
Time (sec)
k 1
(t)
(M
N
/m
)
0 5 10 15 20
0
500
1000
1500
c 4
(t)
(k
N
/m
*s
ec
)
0 5 10 15 20
0
500
1000
1500
c 3
(t)
(k
N
/m
*s
ec
)
0 5 10 15 20
0
500
1000
1500
c 2
(t)
(k
N
/m
*s
ec
)
0 5 10 15 20
0
500
1000
1500
Time (sec)
c 1
(t)
(k
N
/m
*s
ec
)
Figure 1. Time evolutions of the actual inter-story stiffnesses and dampings (Example 1)
We generate the data using white-noise for the excitation tu . The observed output ty is the absolute ac-
celeration time histories at the four stories:
1,
2, 1
3,
4,
[ ]
t t
t t
t t t t t t t
t t
t t
x u
x u
y v M C x K x v
x u
x u

 
       
  

 

(14)
where 4 ~ (0, )tv R N I are the (stationary) measurement uncertainties for ty ; 1 4( ,..., )diag   is
such that the overall signal/noise rms amplitude ratios for each channel is roughly equal to 10. Both the
excitation and observation are sampled at an interval of 0.02 second and are shown in Figure 2. With the
excitation and observation of the system, i.e.,  : 1,...,tu t T and  :ˆ 1,...,ty t T , the goal is to esti-
mate the system states (displacements and velocities) as well as the system parameters (dampings, stiff-
nesses and the uncertainty parameters) in real time.
8recent data. The converse is true when the entries of G are small; in this case, the identified parameters
can reflect data from the remote past.
In this example, the prior PDF for 0x and 0xis taken to be zero-mean Gaussian with large vari-
ances; the prior PDF of 0 is taken to be Gaussian with mean equal to the actual value of 0 and large
variances; the diagonal entries of G are chosen such that in each time step, each parameter drifts with a
coefficient of variation (c.o.v., defined by the standard deviation divided by the mean value) equal to 2%.
Recall that for k1, k3, k4, c1, c2, c3 and c4, their actual evolutions (see Figure 1) are Brownian motions with
the same 2% drift c.o.v., i.e. there is no modeling error for the evolutions of 1k , 3k , 4k , 1c , 2c , 3c and
4c . But for 2k and the four uncertainty parameters, the actual evolutions are not Brownian motions (the
actual evolution of 2k is shown in Figure 1; the four uncertainty parameters are actually constant), while
the identification model uses a Brownian-motion prior on their evolutions.
Before we can proceed, we first convert (15) to the following discrete-time system using numeri-
cal integration (integrate over time step):
1
1 1 1 1
1
, , , ,
k k k
k k k k k k k k k k
k k k
x x x
x f x u w y h x u v
  

   

        
                                 
   (17)
where 1kf  is evaluated using Matlab command ODE23.
Results
The PF methods are applied to the simulated data. The stiffness and damping parameter estimates, and the
associated 95% confidence intervals from PF (with N = 2000 and the importance weight c.o.v. threshold =
200%) are shown in Figure 3. For this example, using more samples in PF than 2000N  gives little
improvement in the convergence, indicating the results are close to convergence.
In Figure 3, the thick lines indicate the actual parameter evolutions while the thin dashed lines are
the conditional means of the identified system parameters and the thin dotted lines indicate the 95% con-
fidence intervals. The PF algorithm successfully tracks the system parameters. For most parameters, the
actual parameter evolutions lie within the 95% confidence bounds. Notice that although the Brownian-
motion prior for 2k and the uncertainty parameters does not exactly match their actual evolutions, the PF
algorithm can still appropriately track 2k . Compared to the accuracy of the stiffnesses, the estimates of
the damping and uncertainty parameters are worse and the associated uncertainties are larger.
0 5 10 15 20
0
200
400
600
800
1000
Time (sec)
S
tif
fn
es
s
(M
N
/m
)
Actual k4,t
PF mean estimate
0 5 10 15 20
0
200
400
600
800
1000
Time (sec)
S
tif
fn
es
s
(M
N
/m
)
Actual k3,t
PF mean estimate
0 5 10 15 20
0
200
400
600
800
1000
Time (sec)
S
tif
fn
es
s
(M
N
/m
)
Actual k2,t
PF mean estimate
0 5 10 15 20
0
200
400
600
800
1000
Time (sec)
S
tif
fn
es
s
(M
N
/m
)
Actual k1,t
PF mean estimate
0 5 10 15 20
0
500
1000
1500
2000
2500
Time (sec)
D
am
pi
ng
(k
N
/m
*s
ec
)
Actual c4,t
PF mean estimate
0 5 10 15 20
0
500
1000
1500
2000
2500
Time (sec)
D
am
pi
ng
(k
N
/m
*s
ec
)
Actual c3,t
PF mean estimate
0 5 10 15 20
0
500
1000
1500
2000
2500
Time (sec)
D
am
pi
ng
(k
N
/m
*s
ec
)
Actual c2,t
PF mean estimate
0 5 10 15 20
0
500
1000
1500
2000
2500
Time (sec)
D
am
pi
ng
(k
N
/m
*s
ec
)
Actual c1,t
PF mean estimate
Figure 3. The PF estimates of system parameters (Example 1)
10
4, 4,1
1, 2, 3,
1,
2,
3,
4,
0
1/ 1/ 0
0
0
0
0
0
0
1/ 1/
t t
tt
t tt
t t t t t t t t t t
t
t
t
t
t
t
t t t t
xx
m r m ux
r x x r r x r
d
w
dt
G
h
y m r m u h
   





   
        
          
        
   
   
   
   
       
    


  
tv
(19)
where 5 ~ (0, )tw R N I ; ~ (0,1)tv R N ; and m is assumed to be known so it is not considered one
of the uncertain parameters.
The prior PDF for 0x and 0xis taken to be zero-mean Gaussian with large variances; the prior
PDF of 1,0 2,0 3,0 4,0 0, , , , h    is taken to be Gaussian with mean equal to their actual value at time zero
and large variances; the G matrix in (19) is taken to be diagonal. The diagonals of G are chosen such
that in each time step, each parameter is allowed to drift with a c.o.v. equal to 2%, i.e. there is no model-
ing error for the evolutions of 1,t , 2,t , 3,t and 4t but modeling error exists for the evolution of th in
(19) (the actual th is constant instead of a Brownian motion). The continuous-time model is numerically
integrated to get the discrete-time version of this model similar to (17) with sampling rate equal to 0.5
second.
Results
Figure 5 shows the results of identification of PF (as before, N = 2000 and the importance weight c.o.v.
threshold = 200%). For this example, using more samples in PF than 2000 gives little improvement in the
convergence, indicating that the results are close to convergence. The results from PF are treated as a
comparison standard. As before, the 95% confidence intervals on the parameters and states are indicated
by thin dotted lines in Figure 5. Again, the results show PF is consistent.
0 20 40 60 80 100
4
4.5
5
5.5
6
6.5
7
7.5
Time (sec)
Actual theta1
PF mean estimate
0 20 40 60 80 100
0.5
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
Time (sec)
Actual theta2
PF mean estimate
0 20 40 60 80 100
-0.14
-0.12
-0.1
-0.08
-0.06
-0.04
-0.02
Time (sec)
Actual theta3
PF mean estimate
0 20 40 60 80 100
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
1.4
Time (sec)
Actual theta4
PF mean estimate
0 10 20 30 40 50 60 70 80 90 100
-2
-1
0
1
2
Time (sec)
Actual displacement
PF mean estimate
0 10 20 30 40 50 60 70 80 90 100
-2
-1
0
1
2
Time (sec)
Actual velocity
PF mean estimate
0 10 20 30 40 50 60 70 80 90 100
-5
0
5
Time (sec)
Actual restoring force
PF mean estimate
Figure 5. The PF estimates of the system parameters and states (Example 2)
