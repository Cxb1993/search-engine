 2
所需之繞線金屬層數便成為一項重要的費
用指標。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖二 
 
 由於 SiP 牽涉系統整合、封裝技術、
晶圓製程等統整，在設計方法及軟體工具的
研發上將面臨與傳統設計不同的挑戰，進而
衍生新的待解問題[9,10,11]。誠如總計畫所
規劃的設計流程所示，針對三維晶片堆疊架
構下採用wire bonding及 leadframe完成晶片
間繞線之技術，在不同的設計階段，包括
partitioning、 pad assignment、 floorplanning、 
intra-chip routing 、  chip stacking 以 及
leadframe routing (亦即 inter-chip routing)等
皆需有新的解決方案。而 pad assignment 及
floorplanning 的結果好壞將決定之後 routing
的難易程度。至於如果採用三維堆疊架構
時，所引發的散熱等問題更是不容忽視
[32,33]。 
 因此本子計畫將針對 pad assignment
及 floorplanning 問題，研發並實作能避免打
線相交、縮短線路連線長度以及分散熱源之
快速、有效的演算法，同時產出一套三維 pad 
assignment 及 floorplanning 的自動化工具。 
 
 國內外研究情況 
 三維 IC 的實體設計(physical design)近
年來在國內外逐漸受到重視並成為熱門的
研究題材[34,35,36]，但就我們所收集的資
料，並未發現有任何學術論文就堆疊架構下
採用wire bonding及 leadframe完成晶片間繞
線之 SiP 設計流程中的 pad assignment 或
floorplanning 提出相關的研究成果，而絕大
多數的成果都集中在以 TSV (如圖二(D)所
示)作為垂直連線方式的技術上；雖然 TSV
能提供較高的 interconnect density，但若是在
晶圓(wafer)層級才組裝(assembly)，將無法在
組裝前知道每個 die 的好壞，進而造成良率
(yield)會隨堆疊層數的增加而快速下降 
[8]，目前一些先進的製程公司也針對此項技
術 之 可 行 性 進 行 研 發 。 以 下 就 pad 
assignment、floorplanning 在二維及三維晶片
之國內外研究現況作一說明。 
 針 對 二 維 晶 片 內 module 的 pin 
assignment 問題，現有方法乃是將其與
floorplannning [37]、global routing [38]、buffer 
planning [39]、或前述這些階段[40]等一起考
慮。  
 至於二維晶片的 floorplanning 問題則
已有許多方法被提出，較主流的做法是採用
不同的 floorplan表示法，如 normalized Polish 
expression [41]、sequence pair [42]、 B*-tree 
[43]、TCG [44]等，搭配 simulated annealing 
(SA) 或其他隨機方式，藉由成本函數（cost 
function ）的計算來評估每個 candidate 
floorplan 之好壞。   
 另外，從傳統的 variable die 推展至更
符合當代設計規範的 fixed-outline(亦即 fixed 
die)的二維問題，也有很好的成果被提出，
例如 [47,48,49]. 
 三維 floorplanning 問題的現有解法可
分兩大類，第一類為 un-partitioning based 的
方法[50,52,53,54]，能同時決定每個 module
的所在層(或晶片)和在該層中的位置，並在
合理的 floorplanning 解中，盡可能找到最小
晶片面積（chip area）、最少連線長度（total 
wirelength）及連接不同層之相同訊號所需之
TSV 數目。目前被提出來這類的三維
floorplanning 方 法 ， 大 多 是 修 改 二 維
floorplanning 的 表 示 法 如 sequence pair 
[52,53]、TCG [55,56]、B*-tree [57]（註：[55,57]
討論的內容是針對 reconfigurable computing
的設計），加入垂直方向的概念來表示三維
floorplanning 的結果，並搭配 SA 的尋找方
式。第二類則為 partitioning based 的方法
[58,59]，和第一類不同的地方是，會先透過
partitioning 的技術決定每個 module 的所在
層，接者在採用二維 floorplanning 的做法決
定每一層中每個所屬 module 的位置，以最
佳化晶片面積與連線長度。此類方法的好處
是 solution space 較小，但必須要有好的
partitioning 方法配合，方能得到較佳的結果。 
 影響三維晶片能不能量產的關鍵因素
之一在於散熱問題，當散熱的情況不好時，
晶片的最大溫度就會相對提高。一顆晶片若
是溫度太高，除了會使效能降低之外，更會
leadframe
(A) wire bonding (B) micro bump: 3D package 
(C) micro bump: face-to-face (D) TSV 
(E) contactless:  
capacitive coupling 
(F) contactless: inductors 
 4
三、 本年度成果 
 研究方法 
本子計畫的前二年針對採用 wire 
bonding 的三維腳位指定與三維佈局規劃二
個研究議題分別研發有效的解決方法，本年
度為第三年，除了針對這二個議題繼續研發
更好的方法外，由於 TSV 的技術逐漸成熟，
加上與 wire bonding 相較起來，TSV 技術可
達成不同晶片間高密度的訊號連接與大幅
提升晶片間資料傳輸的頻寬，因此也將研究
議題擴展至採用 TSV 技術的三維佈局規劃
上，這些研究議題簡述如下： 
 
問題一：採用打線連接(wire bonding)的三
維腳位指定(pad assignment)。在此問題中
我們假設晶片的擺放順序已知(由上而下的
晶片大小遞增)，我們的目標是將每個晶片
上須對外連接的訊號指定到適當的 pad，使
得可以透過 die-to-die 連接的 wire connection 
越多越好(而無法直接連接的訊號則必須經
由 leadframe 來完成)，同時避免可能的打線
相交與縮短打線長度。 
 
問題二：採用打線連接的三維固定邊框佈局
規劃(fixed-outline floorplanning)。在此問題
中我們假設晶片間的上下擺放順序、各晶片
的固定邊框、各晶片四周腳位上的訊號、每
個 module 所屬的晶片、module 間的連線關
係、以及每個 module 的 power desinity 等資
訊都已經給定，我們的目標是決定每個
module 在所屬晶片內的位置，同時滿足固定
邊框與溫度的限制以及縮短晶片內的線路
連線總長度。 
 
問題三：具訊號和散熱矽通道配置(signal 
and thermal TSV planning)考量的固定邊框
三維晶片佈局規劃。在此問題中我們假設晶
片的數目和晶片的固定邊框都已經知道，我
們的目標是決定每個 module 所要配置的晶
片以及其位置，並適當地配置訊號及散熱的
矽通道，使得整個晶片的繞線長度能最小
化，且能滿足固定邊框和溫度的限制。 
 
對於問題一，我們與子計畫一共同研發
數個方法。第一個方法是把問題轉化成
minimum-cost maximum-flow [64]的問題，此
方法雖只能用在所有的訊號連線都有一個
pad 出現在同一個 die (稱為 common die) 上
的 case 或是兩層 die 的 case，但可以保證在
多項式時間內找到最佳解，我們將此方法命
名為MCMF。以下為MCMF解決這些 special 
cases 的步驟: 
1. 先建一個 flow network G = (V, E)，V 是
所有 nodes 的集合，E 是所有 edges 的
集合。每個 pad 都是一個在集合 V 裡
的 node。另外，還必須要有一個 source 
node 和 sink node ， 以 及 L 個
intermediate nodes (L 是 die 的個數)，
分別是 m(1) ~ m(L)。同一個 die 上的
pad 之間不會有 edge 相連，所有在
common die 上的 pad 會和其它所有 die
上的 pad之間有條 edge相連，這條 edge
上的 cost 是這兩 pad 間的連線長度，
capacity 是 1。所有同一個 die 上的 pad
都會連到同一個 intermediate node，不
同 die 上的 pad 會連到不同的一個
intermediate node，其所有的edge的cost
都是 0，capacity 都是 1。Common die
上所有 pad 連到的那個 intermediate 
node 會和 source node 相連，其 edge 的
cost 是 0，capacity 是 k，其它所有的
intermediate node 會和 sink node 相連，
其 edge 的 cost 都是 0，capacity 是 k(i) 
(k(i)是有連到 die(i)的訊號數目，die(i)
不是 common die，所有 k(i)加起來會等
於 k，k 是所有訊號的數目)。 
2. 找 G 的 一 個 minimum-cost 
maximum-flow，再根據此 flow求出 pad 
assignment 的解。 
 
第二個方法是先將我們的問題轉換成
一個類似 channel routing 的問題，並修改 left 
edge algorithm [63] 來求解，最後再用 integer 
linear Program (ILP) [51]的方法去把剩下的
訊號指定到適當的 pad，此方法可以套用在
所有的 cases 上(即適用於 general case)，但是
不能保證找到的解是最佳解，我們將此方法
命名為 MLE+ILP，其步驟如下: 
1. 把每個 die 的四邊都展開成一邊。 
2. 決定可供 die-to-die wire connection 的
track 數(每個 track 由不同 die 上的 pad
連接形成)，但不是所有的 track 都等
長，而 track 的長度和 die 的數量有關。
假設有 n 個 die 堆疊在一起，那 track
可能的長度是 n-1 到 1，這是和原本
channel routing 問題不一樣之處。  
3. 修改 left edge algorithm 來決定哪些訊
號連線將放置在步驟 2 產出的 tracks
上，再把這些訊號指定給對應的 pads。
每決定一個訊號連線放在哪些 pads 上
後，要去檢查此兩個 pads 間還有沒有
空間可以放訊號連線，如果有，就產生
相對應空間大小的 track 到原來所有
tracks 的後面。 
4. 把 pads 分配回所屬 die 的某一邊，訊號
 6
Mb 且 Ma 的 power density 小於 Mb 的
power density，但 Ma 和 Mb 的面積不
可以差太多，因為如果差太多，交換之
後很可能會使 floorplan 的結果變成不
滿足 fixed-outline 的限制；如果有找到
Ma 和 Mb，就將 Ma 和 Mb 位置交換。 
 
我們將上述解決問題二的方法命名為 
3DIMF-T，相關的研究成果已發表於 2010
年的 GLSVLSI，詳細的內容請參閱[67]。 
 
 對於問題三，我們先提出一個只考慮
signal TSV 的大小與配置的兩階段佈局規劃
方法，此方法與子計畫三共同研發完成。 
第一個階段使用 SA 為基礎的演算法，
在這個階段，決定每一個 module 的位置，
在這裡我們使用序列對(sequence pair)[42]來
表示 floorplan，每一層晶片上都有對應的序
列對。我們主要運用下列三種擾動方式來產
生 floorplan candidate：(1) 隨機挑選某兩個
modules 互換，或是挑選某個 module 移動到
別的位置。(2) 找出面積比較擁擠的層，將
其任一module移動到面積比較鬆散的層。(3) 
挑選一個負鬆弛度 (slack) 的 module( 該
module 位於讓 floorplan 的邊框超出限制的
路徑上)，移動到一個正鬆弛度的 module
旁，或是與它互換。決定 module 位置後，
接著要執行 signal TSV 的配置，這裡分為兩
個策略，會因為 SA 溫度的高低而選擇不同
的策略。在早期 SA 溫度較高的時候，採用
速度快且較不精準的機率方式來配置 signal 
TSV，等到 SA 溫度較低，才選擇用速度慢
但較精確的配置策略。signal TSV 配置結束
後，我們會依據成本函數(包含面積、連線長
度、晶片最高溫度、違反 fix-outline 的 penalty
等)來評估每個 floorplan candidate 之好壞並
決定是否接受。 
第二階段則是將第一階段產生的佈局
規劃結果(含 signal TSV 配置)進一步改善，
運用 minimum-cost maximum flow 的技術，
針對 signal TSV 於現有之空白空間(white 
space)重新配置，以期讓總繞線長度能夠再
短。 
上述方法的研究成果已發表於 2010 年
的 ICGCS、以及即將發表於 IEEE TVLSI，
詳細的內容請參閱[73、74]。 
為了將 thermal TSV 的配置也納入考慮
以進一步降低晶片溫度，我們將上述只考慮
signal TSV 配置的方法加以修改如下：(1) 於
第一階段中，將目前 module 和 signal TSV
配置後的結果做溫度分析，我們採用[69]所
提出的內插法估算，依據得到的溫度和邊框
的資訊決定是否進行 thermal TSV 的配置。
我們採用[70]提出的垂直配置法，對每個較
熱的 tile stack 估算所需的 thermal TSV 數
量，以使整個晶片的溫度能滿足最高溫度的
限制。當要配置的 thermal TSV 所需的空白
空間不足時，我們運用類似[71]的線性規劃
方法來調整空白空間，以利更多 thermal TSV
的插入。(2) 在第二階段中， 運用一個略微
不同的 minimum-cost maximum flow 技術，
針對 signal TSV 的位置做進一步地改進，讓
總繞線長度能夠再更小，且取代原有的
thermal TSV 成為 signal TSV，以減少最後所
需的 TSV 總數。 
 
 結果與討論 
 問題一 
針對問題一所研發的方法，我們用 C++
語言實作，而工作平台為 Linux，並隨機產
生 test cases 來測試我們的方法 ，我們用
CPLEX [65]去解 ILP 問題，用 LEDA [66]去
解 minimum-cost maximum-flow 問 題 。
MCMF 針對只有 2 個 dies 的 special case 所
得到的結果列在表格一，MLE+ILP 針對
general case 所得到的結果列在表格二，我們
的比較對象是直接跑 ILP 的方法 (稱為
ILP)，該方法的執行時間上限設為 10,000
秒。由表格一、二可看出我們的方法都可以
在幾秒的時間內跑出結果，而品質(即連線長
度 WL)與 ILP 一樣或只差不到百分之一，但
ILP 方法對大多數的 cases 都無法跑出結
果，原因是因為變數太多使得記憶體不夠
用。 
另外，為了比較我們研發的 iMCMF 與
MLE+ILP 方法，我們額外再隨機產生 11 個
test cases (即 case11 ~ case20)，結果列在表格
三(前面 9 個 test cases 來自於表格二的 9 個
cases)。我們發現 iMCMF 在所有的 test cases
下都能產生較短的連線長度，平均可減少約
2.5%的長度，所花的執行時間則與 MLE+ILP
互有勝負。另外針對 Case 11，MLE+ILP 無
法找到一組合法的腳位指定結果(於表格三
中以 N/A 表示)，但 iMCMF 可以在不到 0.1
秒的時間內找到。  
目前我們也正與美國 Purdue 大學的
Cheng-Kok Koh 教授合作並研究如何修改
ILP 方法使其執行時間能大幅縮短，同時產
出的腳位指定的結果品質能較 iMCMF 好，
考慮的方向是將腳位指定問題分類成只有
三個 dies 與超過三個 dies 二種情況，並分別
研發最佳及快速的近似解法，初步實驗結果
顯示此方向應具可行性。 
 問題二 
針對問題二所研發的方法 3DIMF-T，
 8
 
五、 參考文獻 
[1] L. Golick, J. Goodelle, and T. Shilling, 
“SiP Modules Call for Right Blend of 
Tech,” EE Times, 2004. 
[2] A. W. Lin, “Taiwan Foundry for 
System-In-Package (SIP),” Proc. Asia 
and South Pacific Design Automation 
Conference, pp. 197-204, 2000. 
[3] S. J. Mihelcic, “Package Can Be 
Integration Platform,” EE Times, 2004. 
[4] C. S. Mitchell, and C. White, “SiPs: 
Intelligent Partitioning and Integration 
for Today’s Electronics,” EE Times, 
2004. 
[5] S. K. Pienimaa, J. Miettinen, and E. 
Ristolainen, “Stacked Modular 
Package”, IEEE Transactions on 
Advanced Packaging, Vol. 27, No. 3, 
pp. 461-466, 2004. 
[6] S. K. Lim “Physical Design for 3D 
System on Package,” IEEE Design & 
Test of Computers, Vol. 22, No. 6, pp. 
532-539, 2005. 
[7] R. Tummala, “SOP: What is it and 
why? A New Microsystem-integration 
Convergent Systems of The Next 
Decade,” IEEE Transactions on 
Advanced Packaging, vol. 27, no. 2, pp. 
241-249, May 2004. 
[8] W. R. Davis, J. Wilson, S. Mick, J. Xu, 
H. Hua, C. Mineo, A. M. Sule, M. 
Steer, and P. D. Franzon, 
“Demystifying 3D ICs: The Pros and 
Cons of Going Vertical,” IEEE Design 
& Test of Computers, Vol. 22, No. 6, 
pp. 498-510, 2005. 
[9] S. Islam, “Overcoming the Technical 
Challenges of System-in-Package 
(SiP),” EE Times, 2004. 
[10] J. Miettinen, M. Mantysalo, K. Kaija, 
and E. O. Ristolainen, “System Design 
Issues for 3D System-in-Package 
(SiP),” Proc. Electronic Components 
and Technology Conference, Vol. 1, pp. 
610-615, 2004. 
[11] R. Wilson, “SiPs from Good SoC 
Alternative, but Designer Beware,” EE 
Times, 2004. 
[12] S. Dhamdhere, N. Zhou, and T.-C. 
Wang, “Module Placement with 
Pre-Placed Modules Using the Corner 
Block List Representation,” Proc. 
International Symposium on Circuits 
and Systems, Vol. 1, pp. 349-352, 
2002. 
[13] Y.-H. Jiang, J. Lai, and T.-C. Wang, 
“Module Placement with Pre-Placed 
Modules Using the B*-Tree 
Representation,” Proc. International 
Symposium on Circuits and Systems, 
Vol. 5, pp. 347-350, 2001. 
[14] Y.-C. Chang, Y.-W. Chang, G.-M. Wu, 
and S.-W. Wu, “B*-trees: A New 
Representation for Non-slicing 
Floorplans,” Proc. Design Automation 
Conference, pp. 458-463, 2000. 
[15] H. H. Murata, K. Fujiyoushi, and M. 
Kaneko, “VLSI/PCB Placement with 
Obstacles based on Sequence-pair,” 
Proc. International Symposium on 
Physical Design, pp. 26-31, 1997. 
[16] F. Y. Young and D. F. Wong, “Slicing 
Floorplans with Pre-placed Modules,” 
Proc. International Conference on 
Computer-Aided Design, pp. 252-258, 
1998. 
[17] F. Y. Young and D. F. Wong, “Slicing 
floorplans with Range Constraints,” 
Proc. International Symposium on 
Physical Design, pp. 97–102, 1999. 
[18] J. Lai, M.-S. Lin, T.-C. Wang and, L.-C. 
Wang, “Module Placement with 
Boundary Constraints Using the 
Sequence-Pair Representation,” Proc. 
Asia and South Pacific Design 
Automation Conference, pp. 515-520, 
2001. 
[19] E.-C. Liu, T.-H. Lin, and T.-C. Wang, 
“On Accelerating Slicing Floorplan 
Design with Boundary Constraints,” 
Proc. International Symposium on 
Circuits and Systems, Vol. 3, pp. 
339-402, 2000. 
[20] E.-C. Liu, M.-S. Lin, J. Lai, and T.-C. 
Wang, “Slicing Floorplan Design with 
Boundary-Constrained Modules,” Proc. 
International Symposium on Physical 
Design, pp. 124-129, 2001. 
[21] Y. Ma, S. Dong, X. Hong, Y. Cai, C.-K. 
Cheng, and J. Gu, “VLSI 
Floorplanning with Boundary 
Constraints based on Corner Block 
List,” Proc. Asia and South Pacific 
Design Automation Conference, pp. 
509–514, 2001. 
[22] F. Y. Young, D. F. Wong, and H. H. 
Yang, “Slicing Floorplans with 
Boundary Constraints,” IEEE 
Transactions on Computer-Aided 
Design of Integrated Circuits and 
Systems, Vol. 18, pp. 1385–1389, 
1999. 
[23] X. Tang and D. F. Wong, 
“Floorplanning with Alignment and 
Performance Constraints,” Proc. 
Design Automation Conference, pp. 
848–853, 2002. 
[24] F. Y. Young, H. H. Yang, and D. F. 
 10
[44] J.-M. Lin, and Y.-W. Chang, “TCG: A 
Transitive Closure Graph Based 
Representation for Non-slicing 
Floorplans,” Proc. Design Automation 
Conference, pp. 764-769, 2001. 
[45] S. Liao, M. A. Lopez, and D. Mehta, 
“Constrained Polygon Transformations 
for Incremental Floorplanning,” ACM 
Transactions on Design Automation of 
Electronic Systems, 2001. 
[46] Y. Feng, D. Mehta, and H. Yang, 
“Constrained Floorplanning Using 
Network Flows,” IEEE Transactions 
on Computer-Aided Design of 
Integrated Circuits and Systems, 2004. 
[47] S. N. Adya and I. L. Markov, 
“Fixed-Outline Floorplanning through 
Better Local Search,” Proc. 
International Conference on Computer 
Design, pp. 328-334, 2001. 
[48] T.-C. Chen and Y.-W. Chang, 
“Modern Floorplanning based on Fast 
Simulated Annealing,” Proc. 
International Symposium on Physical 
Design, pp. 104-112, 2005. 
[49] T.-C. Chen, Y.-W. Chang, and C.-C. 
Lin, “IMF: Interconnect-driven 
Multilevel Floorplanning for 
Large-scale Building-module 
Designs,” Proc. International 
Conference on Computer-Aided 
Design, pp. 159-164, 2005. 
[50] K. Balakrishnan, V. Nanda, S. Easwar, 
and S. K. Lim, “Wire Congestion and 
Thermal Aware 3D Global Placement,” 
Proc. Asia and South Pacific Design 
Automation Conference, pp. 
1131-1134, 2005. 
[51] R. J. Vanderbei, Linear Programming: 
Foundations and Extensions, Springer, 
2007. 
[52] J. Minz, E. Wong, and S. K. Lim, 
“Multi-layer Floorplanning for 
Reliable System-on-Package,” Proc. 
International Symposium on Circuits 
and Systems, p69-72, 2004. 
[53] P. H. Shiu, R. Ravichandran, S. Easwar, 
and S. K. Lim, “Reliability-aware 
Floorplanning for 3D Circuits,” Proc. 
International SOC Conference, pp. 
81-82, 2005. 
[54] Y. Deng and W. P. Maly, 
“Interconnect Characteristics of 2.5-D 
System Integration Scheme,” Proc. 
International Symposium on Physical 
Design, pp. 171-175, 2001. 
[55] K. Bazargan, R. Kastner, and M. 
Sarrafzadeh, “3D Floorplanning: 
Simulated Annealing and Greedy 
Placement Methods for Reconfigurable 
Computing System,” Journal of Design 
Automation for Embedded System, 
2000. 
[56] J. Cong, J. Wei, and Y. Zhang, “A 
Thermal-Driven Floorplanning 
Algorithm for 3D ICs,” Proc. 
International Conference on 
Computer-Aided Design, pp. 306-313, 
2004. 
[57] P. H. Yu, C. L. Yang, and Y. W. 
Chang, “Temporal Floorplanning using 
the T-tree Formulation,” Proc. 
International Conference on 
Computer-Aided Design, 2004. 
[58] Z. Li, X. Hong, Q. Zhou, Y. Cai, J. 
Bian, H. Yang, P. Saxena, and V. 
Pitchumani, “A Divide-and-Conquer 
2.5-D Floorplanning Algorithm Based 
on Statistical Wirelength Estimation,” 
Proc. International Symposium on 
Circuits and Systems,  pp. 6230-6233, 
2005. 
[59] T. Yan, Q Dong, Y. Takashima, and Y. 
Kajitani, “How Does Partitioning 
Matter for 3D Floorplanning?,” Proc. 
Great Lake Symposium on VLSI, pp. 
73-78, 2006. 
[60] J. Hu, Y. Shin, N. Dhanwada, and R. 
Marculescu, "Architecting Voltage 
Islands in Core-based 
System-on-a-Chip Designs," Proc. 
International Symposium on Low 
Power Electronics and Design, pp. 
180-185, 2004. 
[61] W. L. Hung, G. M. Link, Y. Xie, N. 
Vijaykrishnan, N. Dhanwada, and J. 
Conner, “Temperature-Aware Voltage 
Islands Architecting in 
System-on-Chip Design,” Proc. 
International Conference on Computer 
Design, pp. 689-696, 2005. 
[62] W.-P. Lee, H.-Y. Liu, and Y.-W. 
Chang, “Voltage Island Aware 
Floorplanning for Power and Timing 
Optimization,” Proc. International 
Conference on Computer-Aided 
Design, pp. 389-394, 2006. 
[63] A. Hashimoto and J. Stevens “Wire 
routing by optimizing channel 
assignment within large apertures,” 
DAC, 1971. 
[64] R. K. Ahuja, T. L. Magnanti, and J. B. 
Orlin, Network Flows: Theory, 
Algorithms, and Applications. 
Prentice-Hall, 1993. 
[65] CPLEX. [Online]. Available: 
http://www.ilog.com 
[66] LEDA package. [Online]. Available: 
http://www.algorithmicsolutions.com 
[67] D.-Y. Liu, W.-K. Mak, and T.-C. Wang, 
 12
表格一：MCMF 與 ILP 方法的結果比較;“-＂表示記憶體不夠 
 
MCMF 
 
ILP 
 
# of  
dies 
 
# of 
wires 
 
# of 
pads 
WL(um) Time(s) WL(um) Time(s) 
2 40 96 7181.96 <0.01 7181.96 0.31 
2 80 176 14363.92 <0.01 14363.92 4.48 
2 160 336 28727.84 0.04 28727.84 103.7 
2 240 496 43091.76 0.07 - - 
2 320 656 57455.68 0.13 - - 
2 400 816 71819.60 0.20 - - 
2 480 976 86183.52 0.27 - - 
2 640 1296 114911.35 0.52 - - 
2 800 1616 143639.19 0.92 - - 
 
 
表格二：MLE+ILP 與 ILP 結果比較;“-＂表示記憶體不夠 
 
MLE+ILP 
 
ILP 
 
# of 
dies 
 
# of 
wires 
 
# of  
Pads 
WL(um) Time(s) WL(um) Time(s) 
4 160 352 50580.14 0.02 49972.38 161.55 
4 320 672 98656.11 0.15 - - 
4 640 1312 196248.85 7.65 - - 
5 160 340 54256.06 0.01 54122.13 10000 
5 320 660 110619.77 0.03 - - 
5 640 1300 224237.89 0.08 - - 
6 160 336 58303.69 0.03 58056.77 10000 
6 320 672 127335.97 0.75 - - 
6 640 1296 271759.95 6.71 - - 
 
 14
 
表格六：STSV-aware 與 STSV-unaware 的結果比較 
STSV-aware STSV-unaware 
#tier circuit S.Rate avg WL avg #TSV
runtime 
(s) S.Rate avg WL
avg 
#TSV 
avg 
runtime(s)
3 ami33 100% 47731 97.2 41.17 30% 60438 132.5 1.82 
3 ami49 100% 690825 361.2 172.92 90% 890588 443.5 5.51 
3 n100 100% 165825 833.2 1195.51 80% 157480 888.8 22.68 
3 n200 100% 310924 1509.1 7720.45 0% 339768 1689.5 87.38 
3 n300 100% 424585 1899.7 21155.10 0% 440954 2019.3 159.02 
4 ami33 100% 45179 141.0 42.46 50% 60772 174.7 2.00 
4 ami49 90% 585804 435.6 184.63 70% 773076 505.4 4.80 
4 n100 100% 148748 1171.4 1306.39 90% 165940 1290.5 23.38 
4 n200 100% 291091 2179.0 8237.10 0% 367602 2431.5 94.45 
4 n300 100% 391694 2730.6 21450.50 10% 448905 2865.0 234.12 
 avg 0.99 1 1  0.42 1.177 1.168  
 
 
表格七：STSV-aware+TTSV-aware 與 STSV-aware+TTSV-unaware 的結果比較 
STSV-aware+TTSV-aware STSV-aware+TTSV-unaware #tier circuit S.Rate avg WL avg #TSV S.Rate avg WL avg #TSV 
3 n100 100% 196182.40 1602.20 100% 235219.40 1243.00 
3 n200 100% 382196.20 1613.00 100% 440237.20 1708.60 
3 n300 100% 495912.00 2320.33 100% 620901.00 2444.67 
4 n100 20% 203504.83 2328.00 0% 235757.80 2952.80 
4 n200 100% 396646.60 2383.20 100% 455054.20 2449.60 
4 n300 100% 536297.67 3891.00 100% 612350.00 3011.33 
 avg 0.87 1 1 0.83 1.175 0.993 
論文發表場次：「Advances in Routing」，該場次安排 4 篇論文進行最新的相
關技術成果報告。 
除了二天半的議程外，大會還在前一天安排學生的程式設計比賽
(CADathlon)、以及第四天需另外繳費參加的 Colocated Workshops。值得一
提的是在程式設計比賽部分，榮獲第一名的隊伍來自台灣，這也是台灣學
生參與此一競賽以來第二次拿到冠軍。至於大會安排的 Receptions 則在第
一天與第二天的晚上舉辦，筆者也於這些場合和一些國內外的老朋友、新
朋友交談並分享研究心得。  
筆者於出席 ICCAD 之後，接者於 11 月 5 日參加 ISPD (International 
Symposium on Physical Design)的議程委員會會議(Technical Program 
Committee Meeting)，該會議與 ICCAD 同一地點舉行，為期一天，任務是
從 62 篇投稿論文中遴選論文，排入 2010 年的大會議程。議程委員會會議
從當天上午 8 時 30 分開始進行，一直到下午接近 5 點時，才完成審查並
從中選出 22 篇論文。     
  筆者於參加ICCAD期間，藉由聆聽Keynote Address、Panel、Tutorials、
Special Sessions與論文發表，更加了解國際上的研究現況及未來發展趨
勢，受益良多。至於ISPD的TPC會議，則是第一次參加，與其他一流的會
議一樣，每篇論文於會議進行中都被逐一討論，在取得共識後，才決定接
受與否，遴選過程嚴謹，這也是ISPD能夠吸引實體設計領域內的專家、學
者踴躍投稿、參與的重要原因。 
Pad Assignment for Die-Stacking
System-in-Package Design∗
Yu-Chen Lin†, Wai-Kei Mak†, Chris Chu‡, and Ting-Chi Wang†
†Department of Computer Science, National Tsing Hua University, Hsinchu 300, Taiwan
‡Department of Electrical and Computer Engineering, Iowa State University, Ames, IA 50011, USA
kenter78@gmail.com, wkmak@cs.nthu.edu.tw,
cnchu@iastate.edu, tcwang@cs.nthu.edu.tw
ABSTRACT
Wire bonding is the most popular method to connect signals
between dies in System-in-Package (SiP) design nowadays.
Pad assignment, which assigns inter-die signals to die pads
so as to facilitate wire bonding, is an important physical
design problem for SiP design because the quality of a pad
assignment solution aﬀects both the cost and performance of
a SiP design. In this paper, we study a pad assignment prob-
lem, which prohibits the generation of illegal crossings and
aims to minimize the total signal wirelength, for die-stacking
SiP design. We ﬁrst consider a variety of special cases and
present a minimum-cost maximum-ﬂow based approach to
optimally solve them in polynomial time. We then describe
an approach, which uses a modiﬁed left edge algorithm and
an integer linear programming technique, to solve the gen-
eral case. Encouraging experimental results are shown to
support our approaches.
Categories and Subject Descriptors
B.7.2 [Integrated Circuits]: Design Aids
General Terms
Algorithms, Experimentation
Keywords
System-in-Package, Pad Assignment, Wire Bonding
1. INTRODUCTION
Comparing System-in-Package (SiP) with System-on-Chip
(SoC), SiP is a more economical option than SoC in many
consumer electronic products because of the high process
complexity and cost associated with SoC. On the other hand,
compared with traditional system integration where multi-
ple dies with separate packaging are mounted on a PCB, SiP
∗This work was partially supported by National Science
Council of Taiwan under Grants NSC 98-2220-E-007-011,
NSC 98-2220-E-007-012, and NSC 98-2220-E-007-013.
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
ICCAD ’09, November 2-5, 2009, San Jose, California, USA
Copyright 2009 ACM 978-1-60558-800-1/09/11 ...$10.00.
has the advantages of smaller size, lower cost, higher perfor-
mance, lower power, and shorter time to market. So, today
SiP is already widely used in consumer electronics such as
cell phones. Currently, SiP design is mostly done by ad hoc
methods and the quality of a design is heavily dependent on
the designers’ expertise. Tool support speciﬁc to SiP design
is still inadequate [5, 6, 9].
Wire bonding is the most popular method to connect sig-
nals between diﬀerent dies in SiP nowadays. As shown in
Figure 1, a die-stacking SiP design using wire bonding has
the following properties: (1) Dies with diﬀerent sizes are
stacked and pad signals are connected by bonding wires.
(2) Die pads can only be located on die boundaries.

Figure 1: Wire bonding for die-stacking SiP design.
If a direct inter-die connection cannot be made for a signal
between two dies, then we need to route the signal from the
two dies to the package substrate by two bonding wires and
use the substrate to complete its routing which will not only
aﬀect performance but is much more costly (because many
SiPs use gold for bonding wires). It is desirable to maximize
the number of direct inter-die connections and minimize the
total bonding wirelength both for cost and performance con-
sideration.
An important stage during the SiP physical design ﬂow is
pad assignment which assigns inter-die signals to die pads.
Pad assignment is typically invoked after the partitioning
of the components of a system (or sub-system) into diﬀer-
ent dies. After pad assignment, the subsequent ﬂoorplan-
ning/placement and routing stages can then be carried out.
When we do pad assignment, some wire crossings might be
produced. Figure 2 shows a few types of crossings, where
two wires are said to have a crossing if after projecting their
pads to the x-z plane, the two line segments connecting the
pads intersect. Nevertheless, some types of crossings are in
fact tolerable because it is relatively easy to prevent the two
wires from actually touching each other when the bonding
wires are made [1]. For example, Type 1 crossing in Figure 2
will not cause actual bonding wires to touch. On the other
3.1 Two-die case
For the case with only two dies, there is only one wire
type, i.e., each wire is from the top die to the bottom die.
We can formulate the two-die pad assignment problem as a
minimum-cost maximum-ﬂow problem as follows.
Suppose we are given 𝑘 signals, and the pad sets 𝑃 and
𝑄 on the two dies, respectively. We will construct a ﬂow
network 𝐺 = (𝑉,𝐸), where 𝑉 and 𝐸 are the node and edge
sets, respectively. For each pad in 𝑃 ∪ 𝑄, there is a node
in 𝑉 . A source node 𝑠, a sink node 𝑡, and two intermediate
nodes 𝑚1 and 𝑚2 are also added to 𝑉 . For each pad 𝑝𝑖 ∈ 𝑃
and each pad 𝑞𝑗 ∈ 𝑄 (i.e., a pair of pads on diﬀerent dies),
if they are on the same side, there is a directed edge from
𝑝𝑖 to 𝑞𝑗 in 𝐸 with the capacity being 1 and the cost being
the wirelength between 𝑝𝑖 and 𝑞𝑗 . In addition, there is a
directed edge from 𝑚1 to each pad 𝑝𝑖 in 𝑃 and there is a
directed edge from each pad 𝑞𝑗 in 𝑄 to 𝑚2; the capacity
and cost of each of these edges are 1 and 0, respectively.
Finally, there is a directed edge from 𝑠 to 𝑚1 and there is
a directed edge from 𝑚2 to 𝑡; the capacity and cost of each
of the two edges are 𝑘 and 0, respectively. Figure 4 shows
the ﬂow network for an instance of the two-die pad assign-
ment problem, where each node 𝑝𝑖 (1 ≤ 𝑖 ≤ 12) represents
a pad on the upper die, each node 𝑞𝑗 (1 ≤ 𝑗 ≤ 16) rep-
resents a pad on the lower die, 𝑘 is the number of signals,
and 𝑊𝐿(𝑝𝑖, 𝑞𝑗) denotes the wirelength between two pads
𝑝𝑖 and 𝑞𝑗 . In this example, it is also assumed that pads
in the set {𝑝1, 𝑝2, 𝑝3, 𝑞1, 𝑞2, 𝑞3, 𝑞4} ({𝑝4, 𝑝5, 𝑝6, 𝑞5, 𝑞6, 𝑞7, 𝑞8},
{𝑝7, 𝑝8, 𝑝9, 𝑞9, 𝑞10, 𝑞11, 𝑞12}, {𝑝10, 𝑝11, 𝑝12, 𝑞13, 𝑞14, 𝑞15, 𝑞16}, re-
spectively) are on the same side.
1p
2p
3p
4p
6p
5p
7p
8p
9p
12p
11p
10p
1q
2q
3q
4q
6q
5q
7q
8q
9q
12q
11q
10q
14q
13q
16q
15q
Sink
2m t
(k,0)
(1,0)
(1,0)
))q,WL(p(1, 86
Source
s 1m
(k,0)
capacity cost
Figure 4: The ﬂow network of a two-die instance.
After the ﬂow network 𝐺 is built, we proceed to ﬁnd a
minimum-cost maximum-ﬂow of 𝐺 [4]. It is well known that
for any minimum-cost maximum-ﬂow problem instance with
integral edge capacities, there is always an integral optimum
solution and the network simplex algorithm is guaranteed to
ﬁnd an integral optimum ﬂow 𝑓 in polynomial time. Since
we assume that each die has adequate pads to accommodate
associated signals, it is not hard to see that 𝑓 must have ﬂow
value equal to the number of signals, 𝑘. We now explain
how to produce the corresponding pad assignment solution
from 𝑓 . Because the ﬂow value of 𝑓 is 𝑘 and the capacity
of each edge except (𝑠,𝑚1) and (𝑚2, 𝑡) is 1, there will be
𝑘 paths of the form: 𝑚1 → 𝑝𝑖 → 𝑞𝑗 → 𝑚2 such that all
edges on each path are saturated (i.e., having a ﬂow of 1);
in addition, except the starting node 𝑚1 and ending node
𝑚2, these paths are all node-disjoint. As a result, we can ﬁnd
𝑘 node-disjoint saturated edges (𝑝𝑖, 𝑞𝑗)’s from these paths,
and assign the given 𝑘 signals to the corresponding pads of
these edges one by one in an arbitrary order. For example,
in Figure 4, if there are 6 signals to be assigned, and the
bold edges are saturated edges found in a minimum-cost
maximum-ﬂow, then we can assign the 6 signals to the pairs
of pads (𝑝3, 𝑞1), (𝑝5, 𝑞5), (𝑝6, 𝑞6), (𝑝7, 𝑞9), (𝑝10, 𝑞14), (𝑝11, 𝑞16).
The above-mentioned minimum-cost maximum-ﬂow based
approach is called MCMF. It can be proved that the pad as-
signment solution produced by MCMF has minimum wire-
length and does not have any crossing. Therefore we have
the following theorem.
Theorem 1. The two-die pad assignment problem can be
optimally solved by MCMF.
3.2 Extensions to other cases
In fact, MCMF can be easily extended to handle other
special cases with more than two dies. For example, Figure 5
gives a three-die pad assignment problem instance where
for simplicity, we only show one side for each die. Each of
the 5 signals 𝑎, 𝑏, 𝑐, 𝑑, 𝑒 has to be assigned to a pad located
on a common die, i.e., Die 2. For this example, we can
construct the ﬂow network as shown in Figure 6, where three
intermediate nodes 𝑚1,𝑚2, and 𝑚3 (instead of two in the
two-die case) are created and there is no edge between each
pair of 𝑝𝑖 and 𝑟𝑗 (because there is no signal connecting Die
1 and Die 3). The capacities of edges (𝑠,𝑚2), (𝑚1, 𝑡), and
(𝑚3, 𝑡) are set to 5, 2, and 3, respectively since Dies 2, 1, and
3 have 5, 2, 3 associated signals. Similar to the two-die case,
we can also prove that an optimal pad assignment solution to
this example can be produced by using the network simplex
algorithm to ﬁnd a minimum-cost maximum-ﬂow from the
corresponding ﬂow network.






1p 3p2p
1q 3q2q 4q
2r
5q
1r 3r 5r4r 6r
Figure 5: A three-die pad assignment problem in-
stance.
We can generalize the 2-die and 3-die cases to any 𝑛-die
case as long as each of the signals in the 𝑛-die case has to be
assigned to a pad located on a common die. Consequently
we have the following theorem.
Theorem 2. For any 𝑛-die pad assignment problem, where
𝑛 ≥ 2 and each signal has to be assigned to a pad located on
a common die, it can be transformed into a minimum-cost
maximum-ﬂow problem and solved optimally.
4. ANAPPROACHTOTHEGENERALCASE
In this section, we describe an approach, which consists
of two stages, to the general case. To reduce the problem
complexity, our approach only focuses on a certain subset
of solution space in the ﬁrst stage such that the left edge
algorithm [7] can be modiﬁed and applied to assign as many
signals as possible to die pads. If there are remaining signals
have no capacity for the current wire, the wire fails to be
assigned in this stage. Every time after a wire from Die 𝑖
to Die 𝑗 (𝑖 < 𝑗) is assigned to a track, the pads from Die
(𝑖+ 1) to Die (𝑗 − 1) in the track can still be used later for
some wires, and therefore we create a new track from Die
(𝑖 + 1) to Die (𝑗 − 1) and add it to the end of the set of
tracks. Note that the original left edge algorithm does not
create such a track. After all the wires are processed, we
need to check if there are any illegal crossings and remove
them whenever necessary by making some assigned wires
become unassigned.
The wire assignment result produced for the example in
Figure 8 is shown in Figure 10. When the wire assignment
is ﬁnished, we will distribute all the assigned wires to four
sides uniformly, and meanwhile the wires assigned to the
same track will be assigned to the same side and to the pads
with same label. Figure 11 shows the pad assignment result
produced for the example in Figure 8. We call the method
used in this stage as the modiﬁed left edge algorithm. As
shall be seen in Section 5, the majority of the signals can
have their die pads assigned in the ﬁrst stage.
a bc
d
e
f gh
i
j
k
lm
n
o p
q r s
t
Sorted wires
Assign to tracks
a
n
c m b q r e j l s
d h t f g o
i k
Result (wire p cannot 
be assigned)
New tracks
Figure 10: Wire assignment by the modiﬁed left
edge algorithm.
Side1
Die2
Die3
Die1
Die4
3
1
2
Die2
Die3
Die1
Die4
3
1
2
Die2
Die3
Die1
Die4
3
1
2
Die2
Die3
Die1
Die4
3
1
2
Side2
Side4Side3
a
n
h
l
t i
c r s
f
m
k
e b j
o
q
d
g
Figure 11: Pad assignment by the modiﬁed left edge
algorithm.
4.2 The second stage
If there are wires which cannot be assigned to die pads
after the ﬁrst stage, we will assign them by an ILP based
method in the second stage. In this ILP formation, we have
the following constants and variables.
∙ Constants
– 𝑇𝑖: 1 ≤ 𝑖 ≤ 𝑛
The 𝑖-th wire type. The wire type of a signal
is determined by its two associated die numbers.
If two signals have the same associated die num-
bers, they have the same wire type. 𝑛 is the total
number of diﬀerent wire types for the remaining
signals.
– 𝑁𝑇𝑖 : 1 ≤ 𝑖 ≤ 𝑛
The number of remaining signals with wire type
𝑇𝑖.
– 𝐶𝑇𝑖 : 1 ≤ 𝑖 ≤ 𝑛
The number of wire candidates for wire type 𝑇𝑖.
This amount can be determined from the remain-
ing die pads. If a wire candidate causes an illegal
crossing with an already assigned wire, then we
will not create this wire candidate.
– 𝑊𝑇𝑖𝑗 : 1 ≤ 𝑗 ≤ 𝐶𝑇𝑖 , 1 ≤ 𝑖 ≤ 𝑛
The wirelength of the 𝑗-th wire candidate for wire
type 𝑇𝑖.
– 𝑃𝑘: 1 ≤ 𝑘 ≤ 𝑚
The 𝑘-th unassigned pad. Here we only consider
those pads which may be used by unassigned sig-
nals. 𝑚 is the total number of such unassigned
pads.
– 𝐸𝑇𝑖𝑗 : 1 ≤ 𝑗 ≤ 𝐶𝑇𝑖 , 1 ≤ 𝑖 ≤ 𝑛
𝐸𝑇𝑖𝑗 is the set of the two pads which are used to
realize the 𝑗-th wire candidate for wire type 𝑇𝑖.
∙ Variables
– 𝑥𝑇𝑖𝑗 : 1 ≤ 𝑗 ≤ 𝐶𝑇𝑖 , 1 ≤ 𝑖 ≤ 𝑛
𝑥𝑇𝑖𝑗 ∈ {0, 1}. If 𝑥𝑇𝑖𝑗 is 1 in an ILP solution, it
means that the 𝑗-th wire candidate of wire type
𝑇𝑖 is selected; if 𝑥
𝑇𝑖
𝑗 is 0, the wire candidate is not
selected.
For each wire type 𝑇𝑖, it needs to select exactly 𝑁𝑇𝑖 wire
candidates, so we have the following constraints:
𝐶𝑇𝑖∑
𝑗=1
𝑥𝑇𝑖𝑗 = 𝑁𝑇𝑖 , 1 ≤ 𝑖 ≤ 𝑛
Each unassigned pad can only be used by a wire candidate
or none, so we have the following constraints:
∑
∀𝐸𝑇𝑖𝑗 :𝑃𝑘∈𝐸
𝑇𝑖
𝑗
𝑥𝑇𝑖𝑗 ≤ 1, 1 ≤ 𝑘 ≤ 𝑚
For any two wire candidates, say the 𝑗-th wire candidate
of wire type 𝑇𝑖 and the 𝑗
′-th wire candidate of wire type 𝑇𝑖′ ,
if they cause an illegal crossing, we need to add the following
constraint to avoid the two wire candidates to be selected
simultaneously:
𝑥𝑇𝑖𝑗 + 𝑥
𝑇𝑖′
𝑗′ ≤ 1
Table 1: Comparison of MCMF and ILP on two-die test cases; “-” denotes out of memory
MCMF ILP
test # of # of # of WL Time WL Time
case dies wires pads (um) (s) (um) (s)
case1 2 40 96 7181.96 <0.01 7181.96 0.31
case2 2 80 176 14363.92 <0.01 14363.92 4.48
case3 2 160 336 28727.84 0.04 28727.84 103.7
case4 2 240 496 43091.76 0.07 - -
case5 2 320 656 57455.68 0.13 - -
case6 2 400 816 71819.60 0.20 - -
case7 2 480 976 86183.52 0.27 - -
Table 2: Results on real test cases
test # of # of # of # of wires of each wire type Original MCMF
case dies wires pads (1,2) (1,3) (2,3) WL(um) WL(um) Imp. Time(s)
case8 3 58 197 26 0 32 55483.88 42416.03 23.6% 0.02
case9 3 38 155 15 23 0 212760.68 135641.88 36.2% 0.01
case10 3 141 483 41 0 100 221244.62 169771.38 23.3% 0.08
Table 3: Detailed information of general test cases
# of wires of each wire type
test # of # of # of
case dies wires pads (1,2) (1,3) (1,4) (1,5) (1,6) (2,3) (2,4) (2,5) (2,6) (3,4) (3,5) (3,6) (4,5) (4,6) (5,6)
case11 4 160 352 19 22 35 0 0 31 26 0 0 27 0 0 0 0 0
case12 4 320 672 43 58 55 0 0 58 58 0 0 48 0 0 0 0 0
case13 4 640 1312 87 114 110 0 0 115 115 0 0 99 0 0 0 0 0
case14 5 160 340 16 11 11 14 0 17 16 11 0 12 28 0 24 0 0
case15 5 320 660 32 28 26 30 0 37 27 28 0 26 41 0 45 0 0
case16 5 640 1300 69 61 50 61 0 56 66 61 0 70 73 0 73 0 0
case17 6 160 336 4 10 6 8 8 14 14 5 7 12 8 8 12 16 28
case18 6 320 672 12 23 18 20 19 30 27 12 19 22 16 17 20 29 36
case19 6 640 1296 46 30 49 34 37 35 51 34 38 30 56 57 42 48 53
case20 6 800 1632 59 38 65 45 45 44 60 46 51 41 64 69 52 58 63
Table 4: Detailed results of each stage of MLE+ILP
stage 1 stage 2
# of # of
Time assigned assigned WL Time assigned assigned WL # of
test case (s) wires % (um) (s) wires % (um) Iter
case11 <0.01 134 83.75 40578.07 0.02 26 16.25 10002.07 1
case12 <0.01 262 81.88 77206.07 0.16 58 18.12 21450.04 2
case13 <0.01 521 81.40 153514.39 7.69 119 18.60 42734.46 5
case14 <0.01 131 81.88 41655.37 0.01 29 18.12 12600.69 1
case15 <0.01 264 82.50 85285.77 0.03 56 17.50 25334.00 1
case16 <0.01 508 79.38 165185.07 0.08 132 20.62 59052.82 1
case17 <0.01 130 81.25 43091.76 0.03 30 18.75 15211.93 1
case18 <0.01 252 70.00 91390.44 0.78 68 30.00 35945.53 2
case19 <0.01 455 71.09 170930.64 6.55 185 28.91 100829.31 6
case20 <0.01 570 71.25 215638.34 10.53 230 28.75 123260.75 6
Average 78.44 21.56
Table 5: Comparison between ILP, ILP-R, and MLE+ILP on general test cases; “-” denotes out of memory
ILP ILP-R MLE+ILP
WL Time WL # of Time WL Time
test case (um) (s) (um) Iter (s) (um) (s)
case11 49972.38 161.55 49972.38 1 0.79 50580.14 0.02
case12 - - 98217.35 1 588.39 98656.11 0.16
case13 - - 195913.38 1 10000 196248.85 7.69
case14 54122.13 10000 54122.13 1 10000 54256.06 0.01
case15 - - 110422.41 1 10000 110619.77 0.03
case16 - - 223861.00 1 10000 224237.89 0.08
case17 58056.77 10000 58059.08 1 10000 58303.69 0.03
case18 - - 126149.74 1 10000 127335.97 0.78
case19 - - 264067.02 2 20000 271759.95 6.55
case20 - - 332138.26 1 10000 338899.09 10.53
Ratio 1.0 1.0085
98年度專題研究計畫研究成果彙整表 
計畫主持人：王廷基 計畫編號：98-2220-E-007-013- 
計畫名稱：在 System-in-Package 設計下之自動化工具研發--子計畫二：在 SiP 設計下之三維腳位指
定及佈局規劃技術研發(3/3) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 2 2 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 50% 與子計畫三之共同成果 
研究報告/技術報告 0 0 100%  
研討會論文 3 3 50% 
篇 三篇論文中，有二
篇是與子計畫一
之共同成果，有一
篇是與子計畫三
之共同成果。 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
