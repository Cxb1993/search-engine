蟑螂演算法的發展與應用 
The Development and Applications of a Cockroach Colony Algorithm 
 
鄭富升 涂嘉勝 陳慶鴻  
        
正修科技大學 Cheng Shiu University    
     fscheng1129@yahoo.com.tw
 
 
摘要 
 
藉由觀察蟑螂的生活習性所發展的蟑螂演算
法，由於只在可行解區域搜尋的特性，因此不須要
運用懲罰函數。另外，有效的遷移觀念可以持續改
善目標函數直到非常靠近整體最佳解。模擬具有多
個局部最佳解的問題顯示：蟑螂演算法比傳統隨機
搜尋演算法能夠有較大的機會獲得整體最佳解。 
 
關鍵詞：蟑螂演算法（Cockroach Colony 
Algorithm）、可行解（Feasible Solutions）、遷移
（Migration）。 
 
1. 前言 
 
由於傳統計算方式需要一些微分的資訊，並
且其最後結果會受到初始點的影響，因此在一些
「難以微分」或具有「多個局部最佳解」的問題表
現不佳，這促使隨機搜尋演算法（Evolutionary 
Computation）如雨後春筍的發展。有許多的前輩
為這些演算法作出貢獻，如基因演算法（Genetic 
Algorithms ） [2] 、 進 化 規 劃 法 （ Evolutionary 
Programming ） [3] 、 進 化 策 略 法 （ Evolution 
Strategies）[4]、模擬退火法（Simulated Annealing）
[5]、禁忌搜尋法（Tabu Search）[6]等。除了上述
這些較傳統的隨機搜尋演算法之外，最近有很多學
者觀察動物生活習性，發展出具生物特色的隨機搜
尋演算法，如粒子群演算法（Particle Swarm 
Optimization）[7]、人工免疫系統演算法（Artificial 
Immune System） [8]蜜蜂演算法（Honey Bees 
Optimization ） [9] 、蟻群演算法（ Ant Colony 
Optimization ） [10] 以 及 原 始 蟻 群 演 算 法
（Pachycondyla apicalis ants）[11]等。作者曾根據
原始蟻群演算法的精神，分別應用於兩個國科會計
畫上。執行的經驗顯示：原始蟻群演算法搜尋整體
最佳解的機會大於一般常見的隨機搜尋演算法，但
在演算法結構及特性上，似乎仍有改進的空間。因
此藉由觀察蟑螂的生活習性，嘗試發展「蟑螂演算
法」。 
在動物分類學上，蟑螂是屬於節肢動物門，
昆蟲綱，蜚蠊目之昆蟲。美考古學家發現生存年代
遠較恐龍早 5500 萬年的蟑螂化石，三億年前已存
在地球上。據估計，全世界之蟑螂大約有 4000 種。
本省之蟑螂已知者有六十多種，其中於居家環境中
較常見者有七種，而以美洲蟑螂、德國蟑螂為數最
多，其次為澳洲蟑螂、棕色蟑螂、家屋蟑螂、灰色
蟑螂、潛伏蟑螂等。蟑螂性喜溫暖潮濕，具夜行性、
群聚性、趨觸性、遷移性與雜食性[1]。以下分別
闡述蟑螂的生活習性與演算法之間的關聯性： 
 
1.1 夜行性 
蟑螂的眼睛是由許多小眼組成的複眼，視覺
方面並不靈敏，再加上喜歡在夜間覓食與活動，因
此它的運動方式類似「瞎子摸黑走路」，其行進軌
跡雜亂無章，這似乎符合隨機搜尋演算法的特性。 
 
1.2 群聚性 
蟑螂的體內分泌一種特殊氣味的化學性物質,
稱為費洛蒙（Pheromone），用來聯絡同伴及吸引異
性。這種群聚的特性，類似粒子群演算法、蜜蜂演
算法和蟻群演算法，因此可發展成為族群式搜尋法
（Population-Based Search）的最佳化技術。 
 
1.3 趨觸性（Thigmotaxis） 
蟑螂的觸感十分發達。例如，藉由前方的觸
角可以探知外界動靜，遇到敵害攻擊時，能即時遁
入牆壁、地板、器物之空隙內；藉由後面的尾毛與
空氣接觸來偵測氣流及聲波，以便於及時發現從身
後來襲的敵人；另外，它的身體上下扁平，平時喜
歡棲息在各處裂縫中，當遇到危險時，也常常經由
牆邊逃逸。上述這些藉著身體與周圍物體的接觸獲
得安全感的特性（驅觸性），可有效減少天敵的危
害，提高族群的存活率。本計畫從蟑螂這種在安全
區域活動的習性獲得靈感，建構在可行解（Feasible 
Solutions）區域搜尋的演算法。 
1.4 遷移性 
蟑螂數億年來，在這漫長的歷史長河中，地
球發生過無數次的變化，當年的許多動物和小昆
蟲，因不能適應環境的變遷，多先後遭到絕滅的命
步驟2：決定相依變數 
機組 1 的輸出功率為相依變數，如下式所示： 
 
321 PPLP −−=                   (6) 
 
步驟3：決定蟑螂族群的大小及每隻蟑螂在每個獨
立變數方向上的最大搜尋距離 
 
利用「全部可能搜尋的狀態」除以「蟑螂族群
的大小（Population Size）」，可決定每隻蟑螂需要
搜尋的狀態。然後根據此數據，決定每隻蟑螂在每
個獨立變數方向上的最大搜尋距離。 
 
步驟4：產生第一代蟑螂族群的位置 
假設族群中共有m隻蟑螂，則共有m個解。從
(5)可知：每個解有兩個分量，首先決定 如下： 2P
))(( 2222 PPrandroundPP −×+=        (7) 
222 PPP <<                         (8)  
其次產生 如下：  3P
))(( 3333 PPrandroundPP −×+=        (9) 
333 PPP <<                         (10) 
其中 
round 為四捨五入函數； 為均勻分佈隨
機變數（Uniformly distributed random numbers），
其值介於 0 與 1 之間；
rand
2P 、 2P 、 3P 、 3P 詳細推
導方式請參考[17]。 
 
步驟5：計算蟑螂族群位置的適應函數並記錄最佳
解 
 
雖然本計畫是找出最好的 和 來求得實
際成本最小化的問題，但對蟑螂族群來說，可視最
佳的成本位置 為「殘留食物最多」的地方
（稍後在圖 2 將看出此處恰好是蟑螂族群最喜歡
的窄縫處）。透過步驟 4 的篩選，可確保族群中皆
為可行解，沒有產生違反量，不需要設定懲罰函數
（penalty function）。因此，成本函數即為適應函
數。然後將適應函數經由排序選出最佳解，將此解
當作「目前最佳解（current best solution）」。 
2P 3P
),( 32 PP
 
步驟6：產生蟑螂族群的新的位置 
 
首先決定新的 如下： '2P
)
2
1(22 −×= randβ                   (11) 
)(ˆ 2222 DroundPP ×+= β              (12) 
⎪⎪⎩
⎪⎪⎨
⎧
<
≤≤
<
=
222
2222
222
'
2
ˆ
ˆˆ
ˆ
PPifP
PPPifP
PPifP
P            (13) 
其中 2β 為均勻分佈隨機變數，其值介於-1 與
1 之間， 決定如下： 2D
 
kDD 2max22ˆ γ×=                    (14) 
⎪⎩
⎪⎨⎧ <
≤=
min22min2
2min22
2 ˆ
ˆˆ
DDifD
DDifDD          (15) 
 
可設計 0=k 時，對應機組 2 輸出功率的最大
搜尋距離 ；max2D maxkk = ，對應機組 2 輸出功率
的最小搜尋距離 。 min2D
 
其次產生新的 如下：  '3P
)
2
1(23 −×= randβ                   (16)  
)(ˆ 3333 DroundPP ×+= β              (17) 
⎪⎪⎩
⎪⎪⎨
⎧
<
≤≤
<
=
333
3333
333
'
3
ˆ
ˆˆ
ˆ
PPifP
PPPifP
PPifP
P            (18) 
其中 3β 為均勻分佈隨機變數，其值介於-1與1
之間， 決定如下： 3D
 
kDD 3max33ˆ γ×=                    (19) 
⎪⎩
⎪⎨⎧ <
≤=
min33min3
3min33
3 ˆ
ˆˆ
DDifD
DDifDD          (20) 
可設計 0=k 時，對應機組 3 輸出功率的最大
搜尋距離 ；max3D maxkk = ，對應機組 3 輸出功率
0 10 20 30 40 50 60 70 80 90 100
8234
8235
8236
8237
8238
8239
8240
8241
8242
Trial number
C
os
t($
)
 
圖 4 執行 100 次的結果（不使用遷移過程） 
 
 
圖 5 遷移過程的區域劃分 
 
圖 5 為遷移過程的區域劃分，如果該區域被
選定，則須由該區域隨機產生一個可行解，再將應
被遷移的蟑螂放置在這個地點，然後開始搜尋過
程。 
0 10 20 30 40 50 60 70 80 90 100
8234
8235
8236
8237
8238
8239
8240
8241
8242
Trial number
C
os
t($
)
 
圖6為執行100次的結果（使用遷移過程） 
 
圖 6 為執行 100 次的結果（使用遷移過程），
共有 99 次可以到達整體最佳解，只有 1 次在次佳
解。平均執行時間稍微上升至 0.6059 秒，但是獲
得最佳解的次數提高了。顯示使用遷移過程確實可
強化脫離次佳解的能力，防止過早收斂的現象。 
表一 執行參數及相關結果 
方法 不使用遷
移過程 
使用遷移
過程 
GA方法
[13]重做 
族群大小 40 40  40 
最終代數 100 100 100 
maxk  95 95 不使用 
max2D max3D 46  23 46  23 不使用 
min2D min3D 1   1 1   1 不使用 
未改善的代
數 
不使用 20 不使用 
執行次數 100 100 100 
最佳解 91 99 35 
次佳解 9 1 42 
其他解 0 0 23 
速度 0.4438秒 0.6059秒 1.2634秒 
最佳成本 $8234.22 $8234.22 $8234.07 
 
表一中 GA 在 100 次執行，只獲得 35 次最佳
解，因此確實有過早收斂的情形。另外因為採二進
位編碼，在解碼須要多浪費一些時間，因此速度稍
慢。但 GA 考慮較高的解析度，因此獲得一個稍好
的最佳解。當然，蟑螂演算法也非常適用於小區域
的搜尋，本計畫稱為爭食過程。將蟑螂族群移至原
來的最佳解（400MW，150MW），然後針對
400399 2 ≤≤ P 及 151149 3 ≤≤ P 的小區域進行搜
尋，最小搜尋距離定為 0.01MW，演化過程如圖 7
所示。 
1 2 3 4 5 6 7 8 9 10
8234.05
8234.1
8234.15
8234.2
Number of generations
C
os
t (
$)
 
圖7爭食過程的成本函數改善 
 
最後可得 =300.26MW， =400.00MW，
=149.74MW，最佳成本降為$8234.07。 
1P 2P
3P
swarm optimization for economic dispatch 
with nonsmooth cost functions;” IEEE 
Transactions on Power Systems,  
Volume 20,  Issue 1, Feb. 2005, pp 34 – 
42. 
16. [16] N. Sinha, R. Chakrabarti, and P.K. 
Chattopadhyay, “Evolutionary 
programming techniques for economic load 
dispatch;” IEEE Transactions on 
Evolutionary Computation, Volume 7, Issue 
1, Feb. 2003, pp 83 – 94. 
17. [17] X.S. Han, H.B. Gooi and D.S. 
Kirschen, “Dynamic economic dispatch: 
feasible and optimal solutions,” IEEE 
Transactions on Power Systems,Volume 16, 
Issue 1, Feb 2001, pp. 22 – 28. 
 
System; Power Market and Power System; Power Generation and Sust
 66
ainable 
Deve
領域的最新發展現況，涵蓋了所有
力學門領域 內容相當豐富並且精彩。 
二、
學家對基礎科學研究的態度、方向與分析技術方法都是我們所
學習
提倡與鼓勵的。期許有朝一日台灣
電力學 研究可躋身世界一流的水準。 
三、
會和學校能持續支
我們參與國際會議，以 進我們的研究能力與國際觀。 
會議所發表資料與文章 
 
 
lopment; Renewable Energy & alternative Generation Technology」。 
合計發表論文數約四百多篇，探討電力相關的議題如電力系統控制，再生
能源發展應用，節能方法或技術，與其他各
電 ，
 
與會心得 
我們於2007年7月8日至12日期間參與此次於香港所舉辦之ICEE國際研討
會，並於7月9日 發表論文，論文題目為「Generalized Regression Neural Network 
for Solving Economic Dispatch Problem」。並於早上的P1場次10:30-12:15 會議
主 題 為 「 Power System Modelling, Simulation and Analysis; Sensors & 
Micromachines 」發表壁報並與許多國外教授及學者進行討論，藉由互相討論
可以更加了解論文的優缺點，並且提出更多改善的空間與方法。而藉由此次將
近四天國際會議的討論與學習，不但使得我們的視野與相關知識增廣許多，也
增進了與外國學者溝通之能力。另外，此次會議對我們而言，除了有上述感想
外，對於國外科
的目標。 
綜合此次參與ICEE 會議，我們深感台灣的電力研究在理論上並不落後於
其他先進國家，但是在理論應用在實務或是實體經驗上卻是比較不足，這方面
就有待改善，並缺乏與各國學者更加密切的合作關係，因此藉由參與國際研討
會的機會與國際學者交流是十分重要且值得
的 術
 
建議 
感謝國科會計畫所提供出席國際學術研討會的補助，使我們得以順利香港
參與此一國際盛會。此次會議除了開闊國際視野之外，我們所發表的研究成果
也能進一步與國外專家學者討論，獲益良多。期望將來國科
助 增
 
四、攜回資料名稱與內容 
1.  ICEE會議論文集及會議議程 
2.  ICEE
2.2 Active power balance constraint 
 
For power balance, an equality constraint should be 
satisfied. The total power should be the same as the 
demand. 
 
{ }             DPP N
N
i
i =+∑−
=
1
1
(2) 
  
where D is the power demand; NP is the power output of 
dependent unit.  
  
2.3 Generating capacity constraints  
 
The power output of each generator should be laid between 
maximum and minimum limits. The corresponding 
inequality constraints for each generator are 
 
max,min, iii PPP ≤≤      (3) 
 
where min,iP  and max,iP  are the minimum and maximum 
power outputs of the ith generator, respectively. 
 
3. PROPOSED METHODS 
 
In this paper, we propose three methods for solving 
dynamic economic dispatch problem. Every method needs 
to collect the units’ input and related output data to 
establish the generalized regression neural network for cost 
functions (GRNNCF) to replace polynomial cost functions.  
The generalized regression neural network (GRNN) with a 
sufficient number of hidden neuron can precisely represent 
the relationship between the fuel cost and power output, 
but it may lead to a nonconvex economic dispatch problem. 
The steps of three methods can be introduced in the 
following, respectively. 
 
The first method is constructed as follows: 
Step 1) Construct GRNNCF; 
Step 2) Apply PSO to solve static economic dispatch; 
Step 3) Collect all static economic dispatch solution to 
form dynamic economic dispatch solution. 
 
The second method is constructed as follows: 
Step 1) Construct GRNNCF; 
Step 2) Apply PSO to solve static economic dispatch, i.e., 
use PSO with GRNNCF to yield the global or close to 
global optimums in static nonconvex economic dispatch 
problem with various load demands; 
Step 3) Construct GRNNED to solve dynamic economic 
dispatch, i.e., accumulate sufficient static economic 
dispatch solutions as training data to form generalized 
regression neural network for economic dispatch 
(GRNNED). After training, inputting specified power 
demand into GRNNED can efficiently produce the real 
power output of each generator. 
 
The third method is constructed as follows: 
Step 1) Construct GRNNCF; 
Step 2) Apply PSO to solve static economic dispatch; 
Step 3) Construct GRNNED to solve dynamic economic 
dispatch; 
Step 4) Apply SQP to refine the solution. 
 
In fact, the third method shown as Fig. 1 is equal to use the 
solution of the second method as a starting point of SQP to 
refine the solution. The important concept of each step can 
be further introduced as follows. 
 
 
    
Fig. 1 Flowchart of the third method 
 
3.1 Generalized Regression Neural Network for Cost 
Functions 
 
Matlab Neural Network Toolbox [10] involves many 
powerful neural networks, such as back propagation, radial 
basis networks, generalized regression neural networks, 
probabilistic neural networks, self-organizing feature maps, 
learning vector quantization networks, etc. This paper uses 
generalized regression neural networks (GRNN) for 
function approximation. GRNN has a radial basis layer 
with xN  input elements, hN  radial basis functions 
(RBFs) and a special linear layer with yN output neurons 
shown in Fig. 2.  
problem for any given demand value, when its population 
size and the number of generation are enough large. 
Therefore, for various power demands, this algorithm can 
produce high-quality dispatch (power outputs) as the 
training data of GRNNED to be introduced later.   
 
3.3 Generalized Regression Neural Network for 
Economic Dispatch 
Although the construction of CRNNED shown as Fig. 4 
forms one-to-many mapping, it will still yield very good 
solutions due to excellent interpolation of GRNN [18].  
Thus, when a value of power demand is inputted into 
CRNNED, this neural network can fast and precisely 
estimate power outputs that lie among data obtained by 
using PSO. 
1P
2P
NP
D
 
 
Fig. 4 Schematic diagram of CRNNED 
 
3.4 Sequential Quadratic Programming  
 
Recently, the SQP method has shown very promising 
results in many economic dispatch problems [19-21]. It is 
similar to Newton’s method for constrained optimization. 
At each major iteration a positive definite quasi-Newton 
approximation of the Hessian of the Lagrangian function is 
calculated using the BFGS method. The result of this 
approximation is then applied to form a quadratic 
programming (QP) sub-problem whose solution is used to 
generate a search direction for a line search procedure. The 
SQP includes three main stages as follows: 1) Updating of 
the Hessian matrix of the Lagrangian function; 2) 
Quadratic programming problem solution; and 3) Line 
search and merit function calculation. Details of the SQP 
procedure are described in the Optimization Toolbox [22].  
 
4. SIMULATION RESULTS 
 
The proposed algorithm was implemented with MATLAB 
language on a 2.4GHz Pentium 4 computer with 1GB 
RAM. The power output limits of test system comprised 12 
generating units are shown in Appendix.  
 
4.1 Construct GRNNCF 
From December 1 to December 7 in 2006, the practical load data 
supported by Taiwan Power Company (TPC) were random 
picked 200 points (100 points as training data and the other 100 
points as test data of each unit’s GRNNCF). The input-output 
curve obtained by using GRNN, (i.e. GRNNCF) is close to 
training data shown in Fig.5. 
100 150 200 250 300 350 400 450
30
40
50
60
70
80
90
100
110
Generation (MW)
Fu
el
 C
os
t (
$/
hr
)
 
 
 
Fig. 5 GRNNCF of Unit 1 
 
In addition, the units with the same power output limits 
should yield similar GRNNCF shown as Fig. 6. However, 
the fuel or the other unknown factors may cause unit 11 
and unit 12 to generate the slight different GRNNCF.  
80 100 120 140 160 180 200 220
25
30
35
40
45
50
55
Generation (MW)
Fu
el
 C
os
t (
$/
hr
)
 
 
Unit 11
Unit 12
 
Fig. 6 GRNNCF of Unit 11 and Unit 12 
 
Table 1 lists the percentage of errors between the actual 
fuel cost measured by TPC and cost computed by 
GRNNCF every day in a week. Small percentage of errors 
reveals that GRNNCF can model effectively the 
relationship between input and output of units. 
 
Date  TPC (TWD)* GRNNCF (TWD) Error (%)
Dec.1 51717547 51611541 0.2050%
Dec.2 51624533 51541231 0.1614%
Dec.3 51645877 51784584 -0.2686%
Dec.4 51786411 51644177 0.2747%
Dec.5 51545673 51664181 -0.2299%
Dec.6 51765413 51677441 0.1699%
Dec.7 51677451 51734884 -0.1111%
Total Cost  361762905 361658039 0.0290%
*: Taiwan Dollars 
Table 1 Comparison of Fuel Cost from TPC and GRNNCF 
