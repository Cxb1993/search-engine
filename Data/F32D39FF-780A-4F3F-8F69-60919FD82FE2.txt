In these unbiased, adaptive free path sampling techniques, the structure of the partitioned space influ-
ences the sampling efficiency, and an estimation framework for investigating the gain in sampling efficiency
is important in order to obtain a good structure. However, currently, there is no estimation framework that
works in the 3D space. For example, in [17], the space partitioning scheme they used is based on a heuristic
approach that degenerates the 3D problem into a set of disjoint 1D problems. As a result, the resulting
sampling efficiency is not always optimal.
In this paper, we show for the first time an estimation framework that works in 3D space. Using our
new framework, we can analytically estimate the sampling efficiency given a particular space partitioning.
Conversely, we can also use this estimation framework for determining the optimal space partitioning. Our
framework is derived from the formulation of the 1D problem presented in [17], and can be regarded as a
generalization of it. Thanks to its generality, our estimation framework is the first one that can be used to
develop automatic space partitioning schemes based on any typical spatial subdivision structures. In this
paper, we show new automatic space partitioning schemes aiming at optimal sampling efficiency, using a
uniform grid, octree and kd-tree. Moreover, we show that the differences in the performances using different
schemes can be predicted fairly well using our estimation framework.
2 Related Work
In this section, we focus on previous work related to free path sampling. For previous research on partici-
pating media rendering, the reader may refer to the surveys [4, 6].
The techniques for free path sampling can be classified into the following two categories: 1) ray march-
ing or its variants [12, 7, 10, 2], and 2) Woodcock tracking or its variants [16, 3, 9, 17].
Although ray marching is widely used in the computer graphics field, it produces biased solutions
which do not converge to the exact solutions. The bias due to ray marching could be problematic because
1) different sampling intervals would result in different results and 2) the error between a biased solution
and the exact solution is easily noticeable but is difficult to be estimated in advance.
An alternative that is free from the aforementioned bias induced problems is Woodcock tracking [16],
which was proposed in the nuclear science field and was first introduced to the computer graphics field by
Raab et al. [13]. Woodcock tracking is proven to be unbiased by Coleman [5], thus will produce exact
solutions. A shortcoming of Woodcock tracking is that it becomes less efficient for more inhomogeneous
participating media [9]. Badal and Badano [1] accelerated Woodcock tracking by implementing it on the
GPU. Another improvement was done by Leppa¨nen [9], in which a two-level space partitioning was used.
Very recently, much more efficient techniques using more general space partitioning schemes were pro-
posed. Yue et al. [17] and Szirmay-Kalos et al. [15, 14] proposed to use a kd-tree and a uniform grid,
respectively.
In these space partitioning based methods, it is important to obtain a good structure of the partitioned
space as the space partitioning influences the sampling efficiency. Moreover, we claim that an estimation
technique to investigate the gain in sampling efficiency is important for determining how to partition the
space. However, an estimation framework that works in 3D space is lacking. For example, in the methods
using uniform grids, the user needs to determine the resolution of the grid manually. The kd-tree based
method offers an automatic space partitioning, but is inherently based on a heuristic approach that utilizes
1D formulations [17]. As a result, the method is imperfect, and the partitioned space is not guaranteed to be
optimal. Thus, in this paper, we focus on deriving an estimation framework that works in 3D space, aiming
at optimal space partitioning.
3 Free Path Sampling
In this section, we first state the free path sampling problem and briefly review Woodcock tracking and the
concept behind previous methods utilizing space partitioning.
To generate a light path in a Monte Carlo based rendering method, scattering events are generated
successively. To generate the (i + 1)-th scattering event, the free path di and the scattering direction
~ωi need to be determined through stochastic sampling. The scattering direction can be obtained using a
2
4.1 Estimation Framework in 1D Space
The efficiency of the free path sampling is tightly coupled with the average numbers of the iterations needed
before the rays encounter ‘real’ scattering events. Therefore, it is important to estimate the expected number
of iterations.
In 1D space (assuming the x axis, see Figure 1), the rays travel only along the x axis. Suppose that we
want to estimate the expected number of iterations when a ray travels through the interval (s, t], and k(x)
is given at an arbitrary location x. For simplicity, we assume that a ‘real’ scattering event does not happen
in the interval (s, t].
For the interval (s, t], we assume that we are given a space partitioning, which is represented by a set
of n subintervals, Ij , where j = 1, ..., n, and the majorant extinction coefficient in a subinterval Ij is given
as kM,Ij . Between any two adjacent subintervals Ij and Ij+1, there is a partition Pj . When the ray travels
through the interval (s, t], the ray will pass through the subintervals and the partitions in alternate order. To
estimate the expected number of iterations, we account for the expected numbers of iterations needed for
passing through each subinterval and partition as follows.
Let |Ij | be the length of the subinterval Ij . Since the majorant extinction coefficient in this subinterval
is kM,Ij , the expected distance that the ray will proceed in a single iteration is 1/kM,Ij . Thus, the expected
number of iterations to travel through this subinterval is given by |Ij |kM,Ij . To go across a partition, we
need to perform a single rewind process. Thus, the expected number of iterations to go across a partition is
1. Combining these two results, the expected number of iterations N¯ needed to travel the interval (s, t] can
be formulated as
N¯ =
n∑
j=1
|Ij |kM,Ij + (n− 1). (2)
Similarly, we may also account for the expected computation time. Let titer and trewind be the average
computation time for a single iteration inside a subinterval and for a rewinding process, respectively. Then,
the expected computation time T¯ for the ray to travel the interval (s, t] can be formulated as
T¯ = titer
n∑
j=1
|Ij |kM,Ij + trewind(n− 1). (3)
4.2 Estimation Framework in 3D Space
In 3D space, we need to account for the rays traveling in any direction. Thus, the formulation in 3D space
is much more difficult than that in 1D space.
To account for the rays in all the directions, we consider the average of the expected numbers of itera-
tions for all the rays passing through a subspace or a partition. Since a typical space partitioning scheme
uses axis-aligned planes, the subspaces and the partitions can be assumed as rectangular parallelepipeds
and planes, respectively.
Let the bounding box of the medium be E. We assume that a space partitioning is given so that E
is subdivided into ns subspaces Ej (j = 1, ..., ns) by np partitions Pk (k = 1, ..., np). We estimate the
average of the expected numbers of iterations N¯Ej for the rays passing through a subspace Ej as
N¯Ej =
∫
Γ(Ej)
kM,Ej lEj (r)dr
/∫
Γ(E)
dr, (4)
and the average of the expected numbers of iterations N¯Pk for the rays passing through a partition Pk as
N¯Pk =
∫
Γ(Pk)
1 · dr
/∫
Γ(E)
dr, (5)
where Γ(Ej), Γ(E) and Γ(Pk) indicate the sets of rays passing through Ej , E and Pk, respectively. kM,Ej
is the majorant extinction coefficient of the subspace Ej , lEj (r) denotes the length of the intersection
between the ray r and the subspace Ej , and dr is the measure of the ray r. The meanings of Eqs.(4) and
(5) are as follows. The numerators in them describe the summation of the numbers of iterations for all the
4
where S(E) denotes the surface area of E.
Finally, we show the analytical solution of
∫
Γ(Pk)
1 · dr. By calculating the integral first according to
the directions of the rays, we obtain∫
Γ(Pk)
1 · dr =
∫
S2
(∫∫
Pk,⊥(~ω)
dudv
)
dω =
∫
S2
|Pk,⊥(~ω)|dω, (12)
where Pk,⊥(~ω) represents the region when projecting Pk onto a plane perpendicular to ~ω, and |Pk,⊥(~ω)|
denotes its area. Then, using the polar coordinates for ~ω to compute the integral, we obtain∫
Γ(Pk)
1 · dr =
∫
S2
|Pk,⊥(~ω)|dω = 2π|Pk|, (13)
where |Pk| is the area of Pk.
Then, by putting Eqs.(4), (5), (8), (11) and (13) all together, we obtain an estimator for the average of
the expected numbers of iterations N¯ for a given space partitioning as
N¯ =
( ns∑
j=1
4kM,Ej |Ej |+
np∑
k=1
2|Pk|
)/
S(E). (14)
Note that N¯ is a dimensionless value because kM,Ej has the dimension m−1, |Ej | has the dimension m3,
and |Pk| and S(E) have the dimension m2, respectively. The average computation time T¯ can be estimated
similarly as
T¯ =
(
titer ·
ns∑
j=1
4kM,Ej |Ej |+ trewind ·
np∑
k=1
2|Pk|
)/
S(E). (15)
An important contribution of the above formulations is that they do not contain any heuristic user specified
parameters, rather, they can be computed strictly.
5 On Optimal Space Partitioning Schemes
In this section, we apply our estimation framework to develop new schemes aiming at optimal partitioning,
using the uniform grid, octree and kd-tree, respectively.
5.1 Uniform Grid based Scheme
When using a uniform grid, we need to decide the resolution of the grid. That is, from a variety of the
possible resolutions, we need to check for 1) the best resolution and 2) whether partitioning the space
according to this resolution is beneficial.
First, we show that we can use Eq.(14) to estimate the average of the numbers of iterations. For sim-
plicity, we assume that the simulation space (the bounding box) is a cube, and the length of each side is w.
We also assume that each side is subdivided into m slices so that we have m×m×m grid-cells. Then, in
Eq.(14), the volumes of the grid-cells are the same, thus |Ej | = (w/m)3, the summation of the areas of the
partitions is
∑np
k=1 2|Pk| = 3(m− 1) · w
2
, and S(E) = 6w2. Thus, we have
N¯part =
2w
3
·
1
m3
m3∑
j=1
kM,Ej + (m− 1). (16)
To find the best resolution, we find m which makes N¯part minimum from all possible m. Typically, we
choose m as a power of two.
To determine whether the partitioning according to this resolution is beneficial, we also estimate the
average of expected numbers of iterations N¯nopart without partitioning as,
N¯nopart =
2w
3
kM,E . (17)
If N¯part < N¯nopart, then it is beneficial to partition the simulation space according to the best resolution.
6
Table 1: Win-loss standings for the estimated acceleration ratios. For example, UG is equal or superior to
WT in 168 cases and inferior in 0 case; KD(h) is equal or superior to OC in 102 cases and inferior in 66
cases.
WT UG OC KD(h)
UG 168-0 - - -
OC 168-0 168-0 - -
KD(h) 168-0 120-48 102-66 -
KD 168-0 168-0 168-0 161-7
are 4291 different ways for partitioning.) Currently, we are limited to use an auxiliary grid with equal to or
less than 163 grid-cells, but we believe we can overcome this limitation in future research.
6 Evaluations
We evaluate the sampling efficiencies for the partitioned spaces obtained using the uniform grid based
scheme (abbreviated as UG), the octree based scheme (OC), the kd-tree based scheme using the heuristic
approach [17] (KD(h)) and the kd-tree based scheme presented in this paper (KD).
As we did not take into account the termination of iteration inside the analytical space in our estimation
framework, the prediction of the numbers of iterations in actual situations is not accurate. Nevertheless,
we show that our estimation framework can predict the ratio of the performances between any two schemes
fairly well. The evaluation is conducted by both comparing the estimated acceleration ratios over Woodcock
tracking (WT) (i.e., the case without partitioning) and comparing the actual acceleration ratios measured
by shooting random rays. Here, the acceleration ratio is defined as the ratio between the averages of the
expected numbers of iterations. We did not use the computation time, as it is dependent on the optimization
of the code and the computing architecture.
For the evaluation, we prepared the following 168 types of media with different spatial distribution of the
extinction coefficient. Using 3D Perlin noise [11], we first prepared 3 types of base media (represented by
8×8×8 grid-cells) by setting the frequency parameter from 0 to 2. After that, we normalized the extinction
coefficient in the range [0, 1]. Then for each of the base medium, we prepared 8 types of different variations
by changing the contrast to 2j , (j = 1, ..., 8). The contrast is defined as the ratio of the maximum difference
of the extinction coefficient to the average extinction coefficient. To obtain the desired contrast, we applied a
power r to the normalized extinction coefficients, where an appropriate r is found using a bisection method.
Finally, for each of these 24 types of media, we multiplied the extinction coefficient by 1/8, 1/4, 1/2, 1, 2, 4,
8 times of a baseline value to create 7 sets of media with different maximum extinction coefficients. In these
168 types of media, a medium with higher contrast parameter, higher maximum extinction coefficient and
lower frequency parameter is more inhomogeneous, because the portion with higher extinction coefficient
is coagulated in a smaller region.
First, we compare the estimated acceleration ratios in Figure 3. From the figure, we can see that the
tendency of the performance is basically KD ≥ KD(h) ≥ OC ≥ UG ≥ WT . Especially, for highly
inhomogeneous participating media, kd-tree based schemes (KD(h) and KD) performed much better.
To investigate this tendency in more detail, we show in Table 1 the win-loss standings between any two
schemes, and in Table 2 a quantitative evaluation of the estimated acceleration ratios. From Table 1, we can
see that although KD(h) is basically superior to UG and OC, there are around 30 to 40% cases where KD(h)
is inferior to UG and OC. Conversely, KD is always equal or superior to UG and OC, and outperforms
KD(h) for almost all the cases except for only 7 cases. From Table 2, we can see that KD performs more
than 2 times better than UG or OC for highly inhomogeneous participating media.
Next, we show the actual acceleration ratios of the schemes over Woodcock tracking in Figure 4. These
ratios were obtained by shooting random rays and measuring the actual numbers of iterations. We can see
1If a subspace is fully contained in the space Ep, there are two partitioning planes for each axis. Let us describe these planes
as x+, x−, y+, y−, z+ and z−. Then, a partitioning can be described as a permutation of these labels, like y+x−x+z−y−z+.
Note that, if two planes for the same axis (e.g., x+ and x−) are neighboring, the resulting partitioning would be the same even if we
transpose the partitioning order of these two planes. By omitting these duplicated cases, we obtain the number 429.
8
㪈 㪊 㪌
㪎 㪐 㪈㪈 㪈㪊 㪈
㪌 㪈㪎 㪈㪐 㪉
㪈 㪇㪅㪇
㪌㪅㪇
㪈㪇㪅㪇
㪈㪌㪅㪇
㪉㪇㪅㪇
㪉㪌㪅㪇
㪊㪇㪅㪇
㪊㪌㪅㪇
㪋㪇㪅㪇
㪋㪌㪅㪇
㪌㪇㪅㪇
㪈
㪏
A
c
c
e
le
ra
tio
n
 ra
tio
C
o
n
trast 㪈 㪊 㪌
㪎 㪐 㪈㪈 㪈
㪊 㪈㪌 㪈㪎 㪈
㪐 㪉㪈 㪇㪅㪇
㪌㪅㪇
㪈㪇㪅㪇
㪈㪌㪅㪇
㪉㪇㪅㪇
㪉㪌㪅㪇
㪊㪇㪅㪇
㪊㪌㪅㪇
㪋㪇㪅㪇
㪋㪌㪅㪇
㪌㪇㪅㪇
㪈
㪏
A
c
c
e
le
ra
tio
n
 ra
tio
C
o
n
trast 㪈 㪊 㪌
㪎 㪐 㪈㪈 㪈㪊 㪈
㪌 㪈㪎 㪈㪐 㪉
㪈 㪇㪅㪇
㪌㪅㪇
㪈㪇㪅㪇
㪈㪌㪅㪇
㪉㪇㪅㪇
㪉㪌㪅㪇
㪊㪇㪅㪇
㪊㪌㪅㪇
㪋㪇㪅㪇
㪋㪌㪅㪇
㪌㪇㪅㪇
㪈
㪏
A
c
c
e
le
ra
tio
n
 ra
tio
C
o
n
trast 㪈 㪊 㪌
㪎 㪐 㪈㪈 㪈
㪊 㪈㪌 㪈㪎 㪈
㪐 㪉㪈 㪇㪅㪇
㪌㪅㪇
㪈㪇㪅㪇
㪈㪌㪅㪇
㪉㪇㪅㪇
㪉㪌㪅㪇
㪊㪇㪅㪇
㪊㪌㪅㪇
㪋㪇㪅㪇
㪋㪌㪅㪇
㪌㪇㪅㪇
㪈
㪏
A
c
c
e
le
ra
tio
n
 ra
tio
C
o
n
trast
(a) UG (b) OC (c) KD(h) (d) KD
Figure 4: Comparison of the measured acceleration ratios. The axes are the same as those used in Figure 3.
Table 3: Win-loss standings for the measured acceleration ratios.
WT UG OC KD(h)
UG 168-0 - - -
OC 168-0 165-3 - -
KD(h) 168-0 124-44 102-66 -
KD 168-0 168-0 167-1 162-6
[5] W. Coleman. Mathematical verification of a certain Monte Carlo sampling technique and applications
of the technique to radiation transport problems. Nuclear Science and Engineering, 32:76–81, 1968.
[6] Diego Gutierrez, Henrik Wann Jensen, Wojciech Jarosz, and Craig Donner. Scattering. In SIGGRAPH
ASIA Courses, 2009.
[7] Henrik Wann Jensen and Per H. Christensen. Efficient simulation of light transport in scenes with
participating media using photon maps. In Proc. SIGGRAPH 98, pages 311–320, 1998.
[8] Eric P. Lafortune and Yves D. Willems. Rendering participating media with bidirectional path tracing.
In Proc. EGWR 96, pages 91–100, 1996.
[9] Jaakko Leppa¨nen. Development of a New Monte Carlo Reactor Physics Code. PhD thesis, Helsinki
University of Technology, 2007.
[10] Mark Pauly, Thomas Kollig, and Alexander Keller. Metropolis light transport for participating media.
In Proc. EGWR 2000, pages 11–22, 2000.
[11] K. Perlin. Improving noise. In Proc. SIGGRAPH 2002, pages 681–682, 2002.
[12] K. Perlin and E. M. Hoffert. Hypertexture. Computer Graphics (Proc. SIGGRAPH 89), 23(3):253–
262, 1989.
[13] Matthias Raab, Daniel Seibert, and Alexander Keller. Unbiased global illumination with participating
media. In Proc. Monte Carlo and Quasi-Monte Carlo Methods 2006, pages 591–605, 2006.
[14] L. Szirmay-Kalos, G. Liktor, T. Umenhoffer, B. To´th, S. Kumar, and G. Lupton. Parallel iteration to
the radiative transport in inhomogeneous media with bootstrapping. IEEE Transactions on Visualiza-
tion and Computer Graphics, 17(2):146–158, 2011.
[15] La´szlo´ Szirmay-Kalos, Bala´zs Toth, and Mila´n Magdic. Free path sampling in high resolution inho-
mogeneous participating media. Computer Graphics Forum, 30(1):85–97, 2011.
[16] E.R. Woodcock, T. Murphy, P.J. Hemmings, and T.C. Longworth. Techniques used in the GEM code
for Monte Carlo neutronics calculations in reactors and other systems of complex geometry. In Proc.
Conference on the Application of Computing Methods to Reactor Problems, ANL-7050, pages 557–
579, 1965.
[17] Yonghao Yue, Kei Iwasaki, Bing-Yu Chen, Yoshinori Dobashi, and Tomoyuki Nishita. Unbiased,
adaptive stochastic sampling for rendering inhomogeneous participating media. ACM Transactions
on Graphics (Proc. SIGGRAPH Asia 2010), 29(5):177:1–177:7, 2010.
10
出席國際學術會議心得報告 
 
計畫編號 99-2221-E-002-016 
計畫名稱 大氣與雲朵的擬真高速繪圖之研究 
出國人員姓名 
服務機關及職稱 
國立台灣大學 資訊管理學系暨研究所 副教授 陳炳宇 
會議時間地點 2010年 12月 15日至 18日於韓國首爾 
會議名稱 ACM SIGGRAPH Asia 2010 
發表論文題目 
Unbiased, Adaptive Stochastic Sampling for Rendering Inhomogeneous 
Participating Media 
 
一、參加會議經過 
 
十二月七日 
搭乘日本航空公司班機前往日本東京 
十二月八日～十四日 
前往東京大學進行訪問 
十二月十五日 
一早便搭乘日本航空公司班機由日本東京前往韓國首爾參加 ACM SIGGRAPH Asia 
2011國際會議。首爾近日的溫度都在零下十度左右，若非為了參加如此重要的會議，
實在是不該在這個時節來到首爾。抵達韓國首爾後，旋即搭車前往會議會場，傍晚
參加完 Technical Papers Fast Forward 之後，便由韓國圖學學會邀請參加該學會所主辦
的歡迎晚宴，該晚宴並非是大會的晚宴，而是僅邀請一些與會的國際知名學者，也
因此，有許多非常知名的研究人員都出席了此一晚宴，來自台灣的研究人員除了本
人之外，僅有成功大學的李同益教授受邀。 
十二月十六日 
上午與台灣的學生們利用遠距會議設備進行研究討論。中午則與成功大學李同益教
授、美國微軟研究院（Microsoft Research）魏立一博士、順德工業公司陳維超博士與
壹傳媒動畫公司王銓彰先生共同餐敘。下午則參加 Rendering 以及 Image & Video 
Editing 的論文發表，並且對其中由美國加州大學聖地牙哥分校（University of 
California at San Diego）、瑞士伯恩大學（University of Bern）、蘇黎世聯邦理工學院
（Eidgenössische Technische Hochschule Zürich；ETH Zurich）與迪士尼蘇黎世研究院
（Disney Research Zurich）所共同合作的 Stereoscopic 3D Copy & Paste 特別印象深
刻，由於本論文的第一作者為正在美國加州大學聖地牙哥分校攻讀博士學位的羅婉
嫣同學（本校資訊工程學系暨研究所 2004年學士、2006年碩士畢業），且我們目前
也正在從事相關的研究計畫，因此，在論文發表之後，本人與羅同學便留下來進行
的論文品質與數量亦日漸提升，因此，ACM SIGGRAPH 協會決定於前（2008）年起，
除每年夏天於北美洲地區舉辦的 ACM SIGGRAPH國際會議外，每年年底亦於亞洲
地區舉辦 ACM SIGGRAPH Asia 國際會議，前（2008）年則是首次舉行，會議地點
為新加坡，去（2009）年的會議地點是日本橫濱，今（2010）年的會議地點則是日
本橫濱，往後預定將定期於亞洲舉辦，明（2011）年的會議地點為中國香港，其審
稿程序完全比照 ACM SIGGRAPH 國際會議，直接刊登於頂尖期刊 ACM Transactions 
on Graphics。因此，已名列頂尖國際會議之一，許多國家亦表達了主辦此一會議的意
願。 
我方雖然已表達了希望能夠主辦此一會議的訊息，不過，中國上海似乎也是信誓旦
旦的希望能夠獲得後（2012）年的主辦權，相較於香港政府與上海政府的支持，我
方似乎就顯得十分的勢單力薄，此一會議的影響力似乎有越來越大的趨勢，若無法
在這一兩年內爭取到主辦權的話，缺少了官方的奧援應該就更難達到爭取主辦權的
目的吧。 
 
(a) (b)
Figure 2: (a): Illustration of light paths. (b): Sampling in parti-
tioned space. Black dots show the locations of scattering events and
the boxes with dashed lines show the bounding box of the medium.
tioning is represented as a kd-tree. During rendering, the locations
of the scattering events are determined adaptively using the kd-tree.
Our sampling technique is proven to be unbiased. A key contri-
bution of our method is an automatic partitioning scheme based
on a cost model for evaluating the sampling efficiency. We find
the optimal partitioning with respect to the cost model by solving
the largest empty rectangle problem. Another contribution of our
method is its scalability to handle a wide range of scenes including
clouds and atmosphere in whole-sky-scale as shown in Figure 1.
Using our method, the cost for obtaining the free path becomes
as low as the cost for other rendering processes including shading,
contrasting with other methods where it is the dominant cost. Our
method is one to two orders of magnitude faster in the overall ren-
dering speed than the previous methods for highly inhomogeneous
media, and is implemented on the GPU using CUDA.
An important benefit of our method is the ability to accelerate all
of the previous methods that generate light paths for rendering par-
ticipating media. Such methods include path tracing and Metropo-
lis light transport [Pauly et al. 2000], as well as photon mapping
[Jensen and Christensen 1998]. This benefit is also applicable in
other fields, such as nuclear science and medical physics.
2 Related Work
There has been much previous research on rendering participating
media. Thorough reviews can be found in [Cerezo et al. 2005] or
[Gutierrez et al. 2009]. Here, we briefly review some closely re-
lated papers. According to Cerezo et al. [2005], rendering meth-
ods for participating media can be classified into voxel-based meth-
ods [Stam 1995; Nishita et al. 1996] and sampling-based methods.
Voxel-based methods are usually inefficient for obtaining accurate
results, as the resolution of the voxels needs to be maintained finely.
In sampling-based methods, such as Metropolis light transport
[Pauly et al. 2000] and photon mapping [Jensen and Christensen
1998], the intensity at a pixel is calculated by generating a number
of light paths, each of which consists of a set of scattering events.
Major techniques to determine the locations of the scattering events
are the ray-marching method [Perlin and Hoffert 1989; Jensen and
Christensen 1998; Pauly et al. 2000] or its variants, e.g., [Brown and
Martin 2003]. However, they are biased and will produce different
results for different sampling intervals.
For unbiased sampling, Raab et al. [2006] introduced Woodcock
tracking [Woodcock et al. 1965; Lux and Koblinger 1991] (also
known as delta-tracking or pseudo-scattering) from the field of nu-
clear science. Although it has been proven to be unbiased [Coleman
1968], it is known to be inefficient when dealing with inhomoge-
neous media [Leppa¨nen 2007]. Surprisingly, however, little work
has been proposed to overcome this inefficiency in the past few
decades. Recently, GPU implementations of Woodcock tracking
were proposed by, e.g., Badal et al. [2009]. Leppa¨nen [2007] im-
proved Woodcock tracking by separating dense regions from sparse
regions, and treating these two kinds of regions differently. Unlike
the problem settings in Leppa¨nen [2007], the density distribution of
participating media appearing in the computer graphics field (such
as smoke and clouds) is usually continuous, and it is not obvious
how to adapt such two-level separation.
In this paper, we propose for the first time an automatic space par-
titioning scheme and use a kd-tree to represent the partitioning.
Inefficiency for rendering inhomogeneous participating media is
overcome by utilizing the space partitioning for free path sampling.
Moreover, our method scales well to the complexity of the scene.
3 Free Path Sampling
We first state the free path sampling problem, and then discuss the
issues of ray-marching and Woodcock tracking.
Monte Carlo techniques calculate the pixel intensity by first gen-
erating a number of light paths, and then integrating their contri-
butions. To generate a light path, scattering events are generated
successively as shown in Figure 2(a). Assume the scattering event i
has already been generated. The location of scattering event (i+1)
is typically determined by sampling the free path di and the scat-
tering direction ~ωi by using random numbers. For the scattering
direction, we can use conventional importance sampling. The free
path di should be sampled according to the following probability
density function [Pauly et al. 2000]:
pdffp(xi+1 = xi + di~ωi) = e
−τ(xi,xi+1)k(xi+1), (1)
where xi and xi+1 are the locations of the scattering events i and
(i+1). τ(xi,xi+1) =
∫
xi+1
xi
k(x′)dx′ is the optical depth between
xi and xi+1. k indicates the extinction coefficients. To generate
random numbers that obey the above probability density function,
the inversion method is usually used together with ray-marching:
first, a random number ξ ∈ (0, 1) is drawn using rand(), then
di satisfying τ(xi + di~ωi,xi) = − ln(1 − ξ) is found using ray-
marching, which, however, introduces bias.
Woodcock tracking (shown as Algorithm 1) samples the free path in
an unbiased way by utilizing a rejection sampling technique. First,
a majorant extinction coefficient kM which is the maximum ex-
tinction coefficient of the participating medium is computed. Then,
Woodcock tracking samples pseudo scattering events by regard-
ing the medium as a uniform medium with the extinction coeffi-
cient being kM . For unbiasedness, such pseudo scattering events
are only accepted as ‘real’ scattering events with the probability
k(xi + di~ωi)/kM . This process is proven to be unbiased and
we can obtain di with the probability density function given by
Equation (1) [Coleman 1968]. Every time a random number is
generated, the free path di (see Figure 2(a)) is incremented by
− ln(1 − rand())/kM , whose expectation value is 1/kM . In an
inhomogeneous participating medium, k(xi + di~ωi) is often much
smaller than the majorant extinction coefficient kM , and the ra-
tio k(xi + di~ωi)/kM becomes small where the medium is sparse.
Therefore, many random numbers might be generated until a real
scattering event is detected. Thus, this method becomes less effi-
cient when the participating medium is highly inhomogeneous.
177:2        •        Y. Yue et al.
ACM Transactions on Graphics, Vol. 29, No. 6, Article 177, Publication date: December 2010.
Figure 4: An illustration of building functions k+(x) and kδ(x),
and calculating partitioning coordinates. For each location a, we
scan along a slice ‘a’ perpendicular to the x axis, and find the
maximum and minimum extinction coefficients (k+(a) and k−(a),
respectively) in this slice. kδ(a) is then defined as k+(a)− k−(a).
Suri 1987]. In our problem, the area of each rectangle is replaced
by the reduced area. For the solution, we discretize the empty re-
gion E into n bins along the x axis and use dynamic programming
to find the largest empty rectangle in E. Both the computational
complexity and the memory requirement are in O(n). For details,
please refer to the supplemental material.
Assume R′ in Figure 3(b) is reported to be the largest rectangle
with the reduced area. Let q1 and q2 be the two ends of the rectan-
gle. As we use a kd-tree to represent the partitions, we partition the
interval once. Of these two ends, the one that is closer to the center
c = (s+ t)/2 of interval (s, t] is chosen as the partitioning location
q as shown in Figure 3(c). This makes the lengths of the two new
intervals, (s, q] and (q, t] as nearly equal as possible. The partition-
ing is then recursively applied to each of the two child intervals, as
shown in Figure 3(c). The kd-tree is constructed so that an inner
node represents the corresponding partitioning location and a leaf
node stores the majorant extinction coefficient of the corresponding
interval.
Three-dimensional case. An interval of the medium now be-
comes a volumetric region V . Hence, we want to choose a plane
for partitioning V . To maintain a kd-tree, we only consider planes
aligned to axes for partitioning. A straightforward way to find the
partitioning plane is to find the largest hyper-rectangle in the 4D
region bounded by w = k(x), w = kM and V . However, current
solutions for the largest empty rectangle problem in 4D space have
high computational complexity [Edmonds et al. 2003].
Instead, we employ a heuristic approach, with which, in our exper-
iments, the kd-tree can be built in less than one minute. Although
it is not always optimal, it works well for media with complex dis-
tributions as shown in Section 5.2. We regard the problem as three
individual 1D problems along each of the three axes, and try to find
the partitioning candidate for each of the axes. We then choose the
best one from those candidates comparing their benefits.
We first explain how to find the partitioning candidate for the x
axis. We first setup a 1D function k+(x) along the x axis, defined
as k+(x) = maxy,z,(x,y,z)∈V k(x, y, z). We apply the solution of
the one dimensional case to find the largest empty rectangle and
obtain its reduced area N∆+ . If N∆+ > 0, we obtain the corre-
sponding partitioning coordinate q+. This simple approach works
well for most cases, but if k(x) has many peaks in V and their
projections onto 1D overlap each other, k+(x) tends to become
uniform and fails to detect the non-uniform regions, e.g., sparse
regions that are enclosed by dense regions. To address this situa-
tion, we introduce another 1D function kδ(x), defined as kδ(x) =
maxy,z,(x,y,z)∈V k(x, y, z) − miny,z,(x,y,z)∈V k(x, y, z). Please
see Figure 4 for a graphical illustration of k+(x) and kδ(x). Using
kδ(x) makes it possible to detect the non-uniform regions in such
a case, because kδ(x) becomes large when the distribution of the
medium in the plane at x perpendicular to the x axis is inhomoge-
neous and becomes small if the distribution of the medium is nearly
homogeneous. We notice that the 1D largest empty rectangle solver
can be used to detect such homogeneous regions. Similar to the pro-
cess for obtaining N∆+ from k+(x), we obtain N∆δ from kδ(x). If
N∆δ > 0, we obtain another partitioning coordinate qδ . The last
step is then to choose the partitioning candidate from these two co-
ordinates. Empirically, we find that using q+ preferentially will
result in better performance. Thus, we compare N∆+ with F ·N∆δ ,
where F < 1 is a constant. We then choose the larger one and let its
value be the numerical representation of the benefit for the x axis.
We find that F = 0.7 gives good performance.
The above process is performed for the y and z axes. To lower the
cost for free path sampling, we seek the largest benefit. If it is less
than or equal to 0, V is left unpartitioned. Otherwise, we select the
partitioning axis and location that give the largest benefit value.
The memory footprint of a kd-tree is usually negligible compared to
the storage for the participating medium itself. In our implementa-
tion, the memory layout of the kd-tree is similar to that for standard
ray tracing [Wald 2004], and each node consumes only 8 bytes.
To handle object surfaces, we first perform the above process ignor-
ing the surfaces. Then, for each leaf node, if surfaces are aligned
in the node, we further construct a sub kd-tree in the node for the
surfaces. Compared to using separate kd-trees for the surfaces and
the medium, we can reduce redundant ray-surface intersections.
4.3 Ray Traversal
Algorithm 2 shows a ray traversal algorithm using the kd-tree. The
algorithm proceeds by first locating the leaf node for the current
sampling location. dmin and dmax in line 4 indicate the distances
to the nearest and farthest points of the node. In each leaf node, we
apply Algorithm 1 to sample the location of the scattering event. If
a ray-surface intersection is found as shown in line 8, disect is set
to the distance to the intersection. If d obtained in line 6 exceeds
disect, we return an intersection event. If the location correspond-
ing to d is inside the current leaf node, that location is determined
as the scattering location. Otherwise, we continue to the next in-
terval, by traversing the next leaf node. The resulting algorithm is
quite simple and similar to the standard kd-tree based ray tracing
algorithm for polygonal scenes, e.g., [Keller 1998]. Lines 2, 4, 8
and 9 of Algorithm 2 share his code.
177:4        •        Y. Yue et al.
ACM Transactions on Graphics, Vol. 29, No. 6, Article 177, Publication date: December 2010.
Figure 7: Rendered results of inhomogeneous participating media using our method. Global illumination effects, including multiple scatter-
ing and inter-reflection, are simulated. Image sizes are 640 by 480 for the left image and 960 by 450 for the middle and right images.
lowing two reasons: 1) the heuristics are imperfect; 2) the cost of
traversing the kd-tree influences the performance slightly.
Next, we would like to briefly mention the performance gain for
the whole rendering process, which have other sub-processes, such
as shading and sampling the scattered direction. In our implemen-
tation, they take up about half of the computation time. Thus, the
performance gain for the whole rendering process is about half of
that for free path sampling.
5.3 Rendered Results
The images in Figure 7 from left to right show the fire, steam and
sky scenes, lit by the fire, an environment light source and the sun-
light, respectively. Scene statistics are shown in Table 1. Kd-tree
construction took 5, 7 and 42 seconds for the fire, steam and sky
scenes. Our method is 2.7, 8.9 and 380 times faster than [Raab et al.
2006] to render the images in the same quality for these scenes.
These increased speeds come from the fact that the numbers of av-
erage iterations are significantly reduced. Our method running on
the GPU is about 50 times faster than on a single core of the CPU.
At each thread on the GPU, we compute tens of light paths for a
single pixel: light paths passing through the pixel are started from
the viewpoint, and successive scattering or intersection events are
generated. A single CUDA kernel execution evaluates the contri-
butions for all the pixels. We execute the kernel hundreds of times,
and then finally average the contribution of each light path to obtain
the result. The rendering times for these scenes are 225 min, 58 min
and 345 min on the GPU. Using a two-layered kd-tree described in
Section 4.2 resulted in 10 to 35% faster speedup than using separate
kd-trees for the object surfaces and the participating medium.
In the sky scene, the clouds are in a voxel-based representation and
is modeled based on a satellite image. The atmosphere is in a proce-
dural representation. We used physically-based optical coefficients
and phase functions to render the images. In the real world, the ex-
tinction coefficients of the clouds are about 102 to 103 times as large
as those of the atmosphere, thus the sky is highly inhomogeneous.
In Figures 1 and 7 right, global illumination effects, including mul-
tiple scattering inside the clouds and the atmosphere, the haze, and
shadows on the ground due to the clouds, are simulated.
5.4 Discussion and Applications
On voxelization. If the participating medium is not in a voxelized
representation, we need a temporal voxelized representation, e.g., a
uniform grid or an adaptive grid, during the space partitioning in
order to solve the largest empty rectangle problem. In each voxel,
the majorant extinction coefficient of the corresponding subspace
needs to be stored. As long as the majorant extinction coefficient
is any valid upper bound of the extinction coefficient (i.e., not nec-
essarily the least upper bound), the unbiasedness of our method is
guaranteed. A tighter bound leads to more efficient sampling. If the
Table 1: Scene statistics. Values in the style ‘x/y’ show ‘#ray/sec’
and ‘#average iterations’. depth and #leaf show the average depth
and the number of leaves of the kd-tree for the participating me-
dia. k and σ(k) show the average and standard deviation of the
extinction coefficient.
participating medium is in a procedural representation, in practice,
we can estimate an upper bound from the formulae of the procedu-
ral representation. Currently, the resolution is chosen by the user.
We recommend the use of as high resolutions as possible for better
performance in sampling.
On the heuristics. As a quantitative evaluation of our heuristic
approach, we prepared various volume data with two different res-
olutions, 83 and 163, and compared the computation time for the
free path sampling using the kd-trees built with our heuristic ap-
proach and with the optimal partitioning solution. Comparisons for
higher resolutions were not possible due to the prohibitive compu-
tation cost for the optimal solution. We found that use of the opti-
mal solution is more efficient in sampling than using the heuristic
approach, but the gain is only less than 10% on average.
Applications. Our unbiased free path sampling technique is a
common building block for typical rendering methods based on
Monte Carlo sampling. We would like to emphasize that our
method can be used with any algorithm, including photon mapping,
that must sample inhomogeneous media. The code for generating
scattering events can be replaced by our method for better accu-
racy and performance. Our method is also applicable to problems
in other fields: nuclear simulation in the nuclear science field, x-
ray simulation in the medical physics field, etc. Additionally, our
method can be used to accelerate unbiased computation of the trans-
mittance, which also uses Woodcock tracking [Raab et al. 2006].
6 Conclusions and Future Work
We have proposed a free path sampling technique to efficiently
find scattering events. Our method partitions the spatial domain
into partitions that adapt to the inhomogeneous distribution of the
medium, by solving the largest empty rectangle problem and using
the kd-tree to represent the partitioning. Our sampling technique
then samples the free path using the kd-tree in an unbiased manner.
We have conducted a case study to investigate the performance gain
of our method over previous methods, reporting one to two orders
of magnitude acceleration for highly inhomogeneous media. By
177:6        •        Y. Yue et al.
ACM Transactions on Graphics, Vol. 29, No. 6, Article 177, Publication date: December 2010.
赴國外研究心得報告 
 
計畫編號 99-2221-E-002-016 
計畫名稱 大氣與雲朵的擬真高速繪圖之研究 
出國人員姓名 
服務機關及職稱 
國立台灣大學 資訊管理學系暨研究所 副教授 陳炳宇 
出國時間地點 2010年 12月 7日至 12月 20日於日本東京 
國外研究機構 日本東京大學 
 
工作記要： 
 
十二月七日 
搭乘日本航空公司班機由台北前往日本東京。 
十二月八日 
前往東京大學與電腦科學研究所五十嵐健夫教授及其博士後研究員橋本直博士進行
研究討論。由於之前與五十嵐教授與橋本博士共同投稿到 ACM CHI 2011 國際會議
的論文「Robicon: Interacting with Home Robots through Icon Manipulations」（附件一）
的審查結果不甚理想，雖然也有許多很正面的審查意見，但終究還是沒有被接受了。
因此，本次討論的重點便在於如何進行系統及論文的修正，以及是否需要再投入更
多的研究人力，且因為大部份的實驗器材都在東京，本次討論的另一個重點便是是
否需要寄送部份的實驗器材到台北供我方測試。此外，亦共同決定將本計畫的下一
個投稿目標放在 ACM Symposium on User Interface Software and Technology（UIST） 
2011，雖然五十嵐教授與橋本博士已是該會議的常客，但對我方而言卻是第一次的
挑戰，也因次希望能夠盡早開始進行系統及論文的修改工作。 
十二月九日 
本日與台灣的學生們利用遠距會議設備進行研究討論。 
十二月十日 
前往東京大學與中國籍的博士班留學生樂永灝同學進行研究討論。樂同學首先就其
上個月於廣島市立大學參加由日本情報處理學會所主辦的圖學與計算機輔助設計第
141回研究發表會的參加心得做一簡單的說明，在此一會議當中，樂同學並就「On 
Optimal Space Partitioning for Unbiased, Adaptive Free Path Sampling」為題發表了一篇
論文（附件二），也因此而獲得了一些建議。此外，由於樂同學下週即將前往韓國首
爾參加 ACM SIGGRAPH Asia 2010國際會議並發表以「Unbiased, Adaptive Stochastic 
Sampling for Rendering Inhomogeneous Participating Media」為題之論文（附件三），
因此，本次討論的重點便是如何修改報告的內容以及投影片，希望能夠呈現出最好
嵐教授希望能夠趁著本人過境東京之時，能夠再有更深入且具體的討論。 
十二月二十日 
搭乘日本航空公司班機由東京返回台北。 
built the mental model on it [21]. Moreover, window-based
UI has already be surveyed, researched, and discussed in
HCI area for several decades since Engelbart and English
had made the concept of GUI at their NLS (On-Line Sys-
tems) [3]. It also means that in this community, we have
already had abundant knowledge about the window-based
UI.
However, binding the operations between virtual window-
based UI control and real robot actions in a real home envi-
ronment is also a challenge for user interaction design. How
to let the user interface be able to represent the spatial con-
text in home? How to map different types of robots, ap-
pliances, and passive objects in home to different kinds of
icons? Most of work can be done through mouse click and
drag through icons in window-based UI. How the similarity
of the design of our system can be mapped to the traditional
window-based operations, and make it sense? Those are the
challenges.
Therefore, in this paper, we developed the Robicon system
to address these challenges. It uses the metaphor of the
window-based UI for the control of multiple robots, and
treats every photo of a room as a folder, with a house floor
being a root folder that consists several sub-folders (rooms).
Every object in the home is then considered as an icon. Dif-
ferent kinds of objects are represented as different types of
icons. We designed three different types of icons, which are
robot icons, appliance icons, and passive object icons. The
major difference between the robots and appliances is that
the robots have certain degrees of freedom to move around,
while the appliances are immovable. The passive object is
that without computing capabilities, like a cup. Hence, the
passive object icons are like data items in our operating sys-
tem, and the robot icons and appliance icons are like appli-
cations.
In Robicon, users can move their robots by moving the robot
icons, which is just like how the users move their icons in
their window system folders. If the users want the robots to
execute some tasks, then they can just double-click on the
robots to perform the assigned task. All the task arrange-
ments are through the actions of dragging, dropping, and
clicking, as in a window system. Figure 1 shows one snap-
shot while using Robicon.
To demonstrate and evaluate our proposed novel interaction
method, we built our system by using a customized robot
with an arm and an iRobot’s Roomba to demonstrate the
illustrated scenarios. A customized cooler is also used to
fit the smart home scenarios. To let users interact with the
robots, appliances, and passive objects, we used the mark-
ers generated by ARToolkit4 for recognizing and tracking.
Through the evaluation with robot UI experts and house-
wives, we then concluded the design guidelines on devel-
oping with the new proposed interaction methods.
In the following sections, the related work is described first,
and then we illustrate our design idea and user interface. We
4http://www.hitl.washington.edu/artoolkit/
then describe how we implemented and evaluated our sys-
tem. Finally, we discuss the evaluation results and the possi-
ble improving directions before concluding this paper.
RELATED WORK
More and more different kinds of robots are developed and
can be easily bought on the market. Hence, how to control
the robots in home to help housework [41] becomes a hot
issue in HRI field [4]. Several different approaches had been
invented before, but most of them are related to control only
one robot or do not take the environment into consideration.
Zhao et al. [41] developed the Magic Cards system to help
people to assign tasks to the robots at home through paper
cards. The designed system does not only take the envi-
ronment into consideration, but also can assign the tasks to
multiple robots. However, through the implicit control, the
system can only provide few awareness for users, which is
deemed as an important factor while controlling the robots [2].
Without any feedback, the users can not know what hap-
pened immediately. Moreover, through the card system, the
users need to manually put the cards to the target locations
physically, and hence, can not directly or remotely control
the robots.
Jones and Snyder [14] tried to explore the design from the
RTS (real-time strategy) game interface to design their su-
pervisory robot control system. The OBTLC (Object-Based
Task-Level Control) technologies5 combined with the icon
manipulation can let users focus on the high-level task as-
signment without knowing the detailed robot operations. How-
ever, their work does not take the environment into consid-
eration.
Several gesture-based control methods had also been devel-
oped by using arm movements [17], arm directions [25], or
hand gestures [7] to control the robots. Rogalla [23] even al-
lowed users to control the robots with gesture and speech at
the same time. Besides the body gestures, several work uti-
lized hand-drawn gestures to control the robots. Sakamoto
et al. [24] developed several hand gestures to control a robot.
Skubic et al. [29] let users to sketch a qualitative hand-drawn
map to drive the robot navigation. Ishii et al. [10] let users
drag and drop an object to implicitly control the robots by
triggering them to move the objects. Though gestures are
quite convenient to most users, they can only provide simple
commands and easily have the problems of ambiguity.
Some work tried to use tabletops or tangible objects to con-
trol the robots. Guo et al. [6] let users interact with the robots
through toys on a multi-touch table. Krzywinski et al. [18]
designed a RoboTable to let people be able to control the
robots on a multi-touch table with mixed reality. Kato et al.
[15] allowed users touching and dragging the remote robots
through a multi-touch surface. To explore 3D floor space,
Lapides et al. [19] designed the 3D Tractus, and with the de-
vice, users can move their tablet up and down to switch the
floor to control the robots. Shimizu et al. [27] proposed an
RUI (Robot User Interface), and through it users can control
5http://sun-valley.stanford.edu/
2
Figure 3. Scenario II: Let a robot help to fill a cup of water.
aligned well with their trained mental model of the window-
based UI [21].
In order to illustrate our ideas clearly, two scenarios are used
to illustrate the operations. Following the scenarios, we will
illustrate the mapping between the virtual window-based UI
and the real robot interactions in home. There are three de-
sign goals. First, representing the spatial context in home
through the window-based UI. Second, mapping different
types of objects as different kinds of icons. Third, design-
ing intuitive interactions between the icons.
Scenarios
Scenario I: Moving a Box From One Room to the Other by
Two Robots’ Cooperation
When a user opens the Robincon system, she will see the
initial floor plan of her house (Figure 2 (a)). The floor plan
is like the root folder of a window system. Through this floor
plan, she can easily know her rooms’ conditions and spatial
layout by the overview, like how many robots in each room
and the relative position of the rooms. She can hover a room
by using the mouse cursor, like hovering folder icons in the
window system (Figure 2 (b)). Finally, she can double click
into a room, like double clicking into a folder (Figure 2 (c)).
In the room, there is a box, and she wants to move it to the
other room. She first clicks to select the box, and presses the
“cut” button (Figure 2 (c)). After pressing the “back to top”
button to switch back to the root folder, she selects and gets
into the destination room (Figure 2 (d)). She then presses the
“paste” button, and the box icon will be put on the entrance
of the destination room (Figure 2 (e)). The visualization of
the box hints her that the box has not moved to the actual
destination. While finishing the paste operation, the system
will ask her to select a robot responsible for the task, be-
cause the box can not be moved by itself. To help the robot
selection, the system lists the candidate robots and highlights
a default one which has the necessary capability and is the
nearest one to the object.
Then, she switches back to the root folder (Figure 2 (f)).
The visualization shows that there is one task in each room.
Then, she gets into the destination room and drags the box
to the actual destination position (Figure 2 (g)). The visual-
ization also shows how many movements of the box. While
releasing her mouse cursor, a menu is popped up to ask her
to select a robot responsible for this task (Figure 2 (g)). Af-
ter finishing the task assignments, she can see the number
of task assigned on the roomba (Figure 2 (j)). There are
one task in the original room and two tasks in the destina-
tion room. To let the robots perform the tasks, she presses
the “task” button to open the task menu (Figure 2 (i)). Af-
ter checking the tasks, she can press the “start” button to let
the robots perform the tasks (Figure 2 (j)). If she wants a
robot to stop performing, she can press the “stop” button.
For emergency, she can also stop all robots in the house at
the same time by pressing the “stop all” button.
Scenario II: Let a Robot Help to Fill a Cup Of Water
First, a user double clicks to enter a room (Figure 3 (a)). He
then selects and drags a cup onto a hot water dispenser (Fig-
ure 3 (b)). After releasing the mouse cursor, he is asked to
assign a robot to move the cup (Figure 3 (c)). After select-
ing the responsible robot, a function menu of the hot wa-
ter dispenser is popped up and needs him to select the per-
formed function (Figure 3 (b)). After assigning the tasks, he
presses the “task” button to confirm the assigned tasks (Fig-
ure 3 (d)(e)). If there is no problem, he executes the tasks
by pressing the “start” button (Figure 3 (d)). Through the vi-
4
Passive Object
Available
1
(a) (b) (c)
Appliance
Robot
Virtual Executed Off-line
(d) (e) (f)
(g) (h) (i) (j)
1
1
1 11
Figure 5. Visualization of the icon states. The counter number on the
right-top corner shows its order in sequential moves, and that on the
left-top corner shows the number of tasks of the entity.
ject’s position. Finally, while dragging a passive object icon
onto an appliance icon, if the appliance can accept the pas-
sive object, a robot will move the passive object to the ap-
pliance’s position and then execute the appliance’s function
menu. The other combinations such as dragging a robot or
appliance icon onto another robot or appliance icon do not
trigger any action.
Visualization of Icons
The visualization of the icons is different for different states
as shown in Figure 5. There are four states to visualize an
icon: available state, virtual state, executed state, and off-
line state. When a user moves a movable icon to a new
position, it will generate a virtual icon of the movable icon
with virtual state on the new position. However, due to the
immovability of the appliances, the appliance icon does not
have such a virtual state, and due to lack of processing abil-
ity, the passive object icon does not have the off-line state.
When an icon is in the available state, it means that this re-
source is not occupied. On the contrary, if an icon is in the
executed state, it means that this resource has been occupied
or under execution. When an icon is moved, a move se-
quence counter will be shown on the right-top corner of the
icon to hint the user. If an object has several virtual icons,
the user can only move the latest one. For the robot and ap-
pliances icons, the queued task number will be shown on the
left-top corner of an icon, and if they are malfunction and
the system can not access them, they will be shown as the
off-line state. Because a robot has the move direction, there-
fore, the icon is designed as circle shape. The figure inside
the icon also can point to a robot’s direction. About the size,
the icon right now is designed as 50×50 pixels, which can
just cover the marker.
SYSTEM ARCHITECTURE AND IMPLEMENTATION
Figure 6 shows the overview of Robicon’s system architec-
ture. The registered robots, appliances, and passive objects
will be detected through the detection engine by analyzing
the input video images which are captured by webcams. Hence,
users can arrange the tasks based on the available resources
User Interface
Detec!on
Resource 
Management
Cameras Robots Appliances
Figure 6. Robicon system architecture overview.
(a) (b) (c) (d) (e) (f)
Figure 7. Used robots and appliance: (a) iRobot Create, (b) Roomba,
(c) Customized Arm-Robot, (d) Customized Mini-Robot, (e) Hacked
hot water dispenser, (f) Customized coffee dispenser.
on the screen. The arranged tasks and interactions on the UI
will be examined through the resource management module.
Finally, the validated actions will be issued to the robots and
appliances.
Detection and Cameras
To detect available resources and their movements in a space,
we use the markers generated by ARToolkit for detecting and
tracking right now. Therefore, each available resources in
the home must be registered first. The detection module can
be replaced with other kinds of computer vision techniques,
like color histogram [10] or feature vectors [20]. However,
we focused on the interaction design in this paper and the
marker-based method is easy-to-use to achieve our goals.
Some Logitech QuickCam Pro for Notebooks webcams are
used as the detection sensors, which are installed on the ceil-
ing to provide top-down views of the spaces. The video
images are not only used for detection, but also are shown
on the screen as the user interface. Each camera can cover
1.2×1.8 m2 and provide 30 fps. (frames per second) with
the resolution of 640×480. If a room size is bigger than the
covered area by one camera, several cameras can be com-
bined through the image stitching technique [37]. However,
in our case, the covered area for each camera is large enough
to examine our interaction through the simulation.
Robots and Appliances
To communicate with the robots and appliances, we used the
wireless channel via Bluetooth. The robots and appliances
that we used are shown in Figure 7. iRobot Create is used
for moving the objects, Roomba is used for moving the ob-
jects and vacuuming, Arm-Robot is used for holding the ob-
jects, Mini-robot is used to push objects, hot water dispenser
dispenses hot water, and coffee dispenser dispenses coffee
6
to enter a room instead of double click at first time, though
we have mentioned that the interaction way is like using
window-based UI. While performing the task of filling water
in the cup, one housewife tried to put the arm-robot icon onto
the hot water dispenser icon. However, in our design, it trig-
gered nothing, which made her confused. She commented
that dragging the arm-robot’s clamp to interact with the ap-
pliance is like human who can interact with the appliances
directly.
Most of them used the word “map” to describe the room
space, and all appreciated the novel design by using the room
map idea. While arranging the tasks, they can easily take the
benefits from this kind of design. One robot expert also dis-
cussed the possible design to extend the map idea. He com-
mented that since it is a map, a context-plus-detail design
by incorporation the overview map on the corner to indicate
where users are right now can efficient help the users navi-
gate the room spaces. One user also commented that while
there are more room spaces in a house, this kind of design
can be more beneficial. Since the room is a concept design
borrowed from the file folder, one robot expert event thought
that a ALT-TAB to switch between the rooms can allow users
quickly accessing different rooms.
The visualization can make them easily understand the sta-
tus and how many tasks are arranged. However, for the move
sequence, two users thought that there might be an arrow
to direct the trajectory on the map to easily understand the
route. Since our interaction heavily depends on the icons
on the screen, one robot expert pointed out the importance
of the design of the icon. To let users easily understand the
icon, a careful design is needed. One housewife mentioned
that a text on the bottom of the icon to indicate the meaning
might be a good way. Two users thought that the icons might
be too big to occlude the objects. A hiding function for the
icon might be helpful instead of using dynamic icon meth-
ods, due to the icon size may affect the usability of pointing.
About task execution, one user mentioned about right click
context menu to execute the action instead of pop-up menu.
Because some tasks are dependent, therefore, one robot ex-
pert thought that a timeline design can be more helpful to
review the task. One robot expert proposed a design to quick
access the start function by integrating the start button into
the robot or appliance icons. Then, users can quickly start
a task by clicking the start button on the icon to execute the
assigned tasks.
About the general issues, housewives all concerned about the
security of the system. They concerned about that this semi-
automation may incautiously hurts her children, because the
system right now is based on the detection of the marker.
They also concern about whether the system can success-
fully complete the task without any side effect. For example,
while filling water in the cup, they may concern the robot
will spill out the water. However, while imaging the future,
they thought this kind of interaction might be suitable for
their houses, because the way to manipulate objects in the
space is suitable to clean a room. One housewife mentioned
that every time, while she needs to clean a room, she always
needs to move stuffs outside the room, and with this kind of
UI, she can drag and drop object across space directly.
Generally, this new design of user interface is accepted by
all users. Most of them thought that this UI is interesting.
Through the interview, the design challenges about window-
based UI control are also confirmed. The folder concept de-
sign to match the room can easily take the benefits from hu-
man’s spatial intelligence, and is appreciated by all users.
For the icon type issue, we originally treated that there are
three different kinds of icons, and thought that robot and ap-
pliance icons are just like application icons in the window-
based UI system. However, from the observations of users’
interactions, the users seemed treating the robots as agent
by dragging the robot onto the appliance directly. There-
fore, the original metaphor from the window-based UI con-
trol should be expanded to match users’ expectation. Finally,
the traditional click, drag, and drop interactions on icons are
easily to learn and users can learn it quickly and adapt to
other kinds of icons quickly. Moreover, through the proto-
type design, the design guidelines for the proposed window-
based UI robot interaction is concluded below.
Guidelines For Designing Home Robots Through Icons
Simple. The designed user interaction for icon should be
simple and easy enough. Users just need to use mouse to per-
form clicking and dragging to issue the commands. More-
over, the interaction methods between different icons should
be the same or very similar. Through this way, users can eas-
ily generalize their understanding to interact with new added
icons.
Space. While designing home robot interaction, a floor plan
based interaction can help users to arrange their home tasks
easily by utilizing their space intelligence. Therefore, navi-
gating between the space is more like navigating map as they
are already familiar with. Hence, the design guideline devel-
oped from map communities might be useful and beneficial.
Sequence. Task arrangement usually relates to time sequence.
Therefore, a timeline based UI to let users review the ar-
ranged tasks might be required. Moreover, the design for
virtual movement to reveal the task sequence also can help
users to know the arranged tasks’ trajectories.
Visualization. Since most interactions rely on the icons on
the screen, the visualization of the icon becomes important,
which may help users to arrange their tasks. Besides, the
design of the icon also becomes essential for easily visually
understanding.
Quick. Through the user study, we found that like most soft-
ware applications, if users are familiar with the basic oper-
ations, they would like some advanced gestures to quickly
execute the required tasks. Therefore, the hot-key design for
the advanced users might be the long-tern use issue.
Extensible. The technologies of home robots are growing
rapidly and many special purpose robots are developed, like
8
18. A. Krzywinski, H. Mi, W. Chen, and M. Sugimoto.
RoboTable: a tabletop framework for tangible
interaction with robots in a mixed reality. In Proc. ACM
ACE’09, pages 107–114, 2009.
19. P. Lapides, E. Sharlin, and M. Costa Sousa. Three
dimensional tangible user interface for controlling a
robotic team. In Proc. ACM/IEEE HRI’08, pages
343–350, 2008.
20. D. G. Lowe. Distinctive image features from
scale-invariant keypoints. IJCV, 60(2):91–110, 2004.
21. D. A. Norman. The Psychology Of Everyday Things.
Basic Books, 1988.
22. S. Olufs and M. Vincze. A simple inexpensive interface
for robots using the Nintendo Wii controller. In Proc.
IEEE/RSJ IROS’09, pages 473 –479, 2009.
23. O. Rogalla, M. Ehrenmann, R. Zollner, R. Becher, and
R. Dillmann. Using gesture and speech control for
commanding a robot assistant. In Proc. IEEE
ROMAN’02, pages 454 – 459, 2002.
24. D. Sakamoto, K. Honda, M. Inami, and T. Igarashi.
Sketch and run: a stroke-based interface for home
robots. In Proc. ACM CHI’09, pages 197–200, 2009.
25. E. Sato, T. Yamaguchi, and F. Harashima. Natural
interface using pointing behavior for human-robot
gestural interaction. IEEE TIE, 54(2):1105 –1112,
2007.
26. T. Seifried, C. Rendl, F. Perteneder, J. Leitner,
M. Haller, D. Sakamoto, J. Kato, M. Inami, and S. D.
Scott. CRISTAL, control of remotely interfaced
systems using touch-based actions in living spaces. In
ACM SIGGRAPH’09 E-Tech., page Article No.: 6,
2009.
27. N. Shimizu, N. Koizumi, M. Sugimoto, H. Nii,
D. Sekiguchi, and M. Inami. A teddy-bear-based
robotic user interface. ACM CiE, 4(3):Article No.: 8,
2006.
28. T. Shirokura, D. Sakamoto, Y. Sugiura, I. M. Ono, T.,
and T. Igarashi. Robojockey: Real-time, simultaneous,
and continuous creation of robot actions for everyone.
In Proc. ACM ACE’10, 2010.
29. M. Skubic, D. Anderson, S. Blisard, D. Perzanowski,
and A. Schultz. Using a hand-drawn sketch to control a
team of robots. Autonomous Robots, 22(4):399–410,
2007.
30. Y. Sugiura, T. Igarashi, H. Takahashi, T. A. Gowon,
C. L. Fernando, M. Sugimoto, and M. Inami. Graphical
instruction for a garment folding robot. In ACM
SIGGRAPH’09 E-Tech., pages 1–1, 2009.
31. Y. Sugiura, G. Kakehi, A. Withana, C. Fernando,
D. Sakamoto, M. Inami, and T. Igarashi. Walky: An
operating method for a bipedal walking robot for
entertainment. In ACM SIGGRAPH Asia’09 E-Tech.,
pages 77–79, 2009.
32. Y. Sugiura, D. Sakamoto, A. Withana, M. Inami, and
T. Igarashi. Cooking with robots: designing a
household system working in open environments. In
Proc. ACM CHI’10, pages 2427–2430, 2010.
33. J.-Y. Sung, R. E. Grinter, H. I. Christensen, and L. Guo.
Housewives or technophiles?: understanding domestic
robot owners. In Proc. ACM/IEEE HRI’08, pages
129–136, 2008.
34. J.-Y. Sung, L. Guo, R. E. Grinter, and H. I. Christensen.
”my Roomba is Rambo”: intimate home appliances. In
Proc. UbiComp’07, pages 145–162, 2007.
35. G. Suzuki, S. Aoki, T. Iwamoto, D. Maruyama,
T. Koda, N. Kohtake, K. Takashio, and H. Tokuda.
u-Photo: Interacting with pervasive services using
digital still images. In Proc. PERVASIV’05, pages
190–207, 2005.
36. T. Suzuki, A. Ohya, and S. Yuta. Operation direction to
a mobile robot by projection lights. In Proc. IEEE
ARSO’05, pages 160 – 165, 2005.
37. R. Szeliski. Image alignment and stitching: a tutorial.
FTCGV, 2(1):1–104, 2006.
38. G. Vanderhulst, K. Luyten, and K. Coninx. Photo-based
user interfaces: Picture it, tag it, use it. In Proc.
OTM’09, pages 610–615, 2009.
39. G. Vanderhulst, K. Luyten, and K. Coninx. Pervasive
maps: Explore and interact with pervasive
environments. In Proc. IEEE PerCom’10, pages 227
–234, 2010.
40. H. Yoon, W. Woo, and S.-G. Lee. NVUI framework:
Natural view user interface framework for consistent
and intuitive appliance control. In Proc. IEEE
ISUVR’08, pages 63–66, 2008.
41. S. Zhao, K. Nakamura, K. Ishii, and T. Igarashi. Magic
Cards: a paper tag interface for implicit robot control.
In Proc. ACM CHI’09, pages 173–182, 2009.
10
情
報
処
理
学
会
研
究
報
告
IP
S
J
S
IG
T
ec
h
n
ic
a
l
R
ep
o
rt
推
定
に
基
づ
い
て
,
最
適
な
空
間
分
割
を
求
め
る
方
法
を
示
し
た
.
三
次
元
の
場
合
に
つ
い
て
は
,
ヒ
ュ
ー
リ
ス
テ
ィ
ッ
ク
な
解
法
を
用
い
た
が
,
以
下
の
点
で
不
完
全
で
あ
っ
た
:
1
)
得
ら
れ
る
空
間
分
割
を
用
い
た
サ
ン
プ
リ
ン
グ
効
率
が
最
適
で
あ
る
と
い
う
保
証
は
な
い
,
2
)
い
く
つ
か
の
場
合
(典
型
的
に
は
媒
質
が
均
質
に
近
い
と
き
)
に
,
W
o
o
d
co
ck
tr
a
ck
in
g
よ
り
も
効
率
が
悪
く
な
る
こ
と
が
あ
る
.
本
稿
で
は
,
三
次
元
の
場
合
に
お
い
て
,
理
論
的
に
サ
ン
プ
リ
ン
グ
効
率
が
最
適
と
な
る
空
間
分
割
ス
キ
ー
ム
を
示
す
.
そ
の
よ
う
な
ス
キ
ー
ム
は
,
下
記
の
理
由
で
不
偏
で
適
合
的
な
自
由
行
程
サ
ン
プ
リ
ン
グ
手
法
に
と
っ
て
重
要
で
あ
る
:
1
)
最
適
解
を
用
い
る
こ
と
に
よ
り
,
既
存
の
ス
キ
ー
ム
の
効
率
や
ロ
バ
ス
ト
性
の
評
価
が
可
能
と
な
る
,
2
)
ま
た
そ
の
よ
う
な
評
価
に
よ
り
,
新
た
な
空
間
分
割
ス
キ
ー
ム
を
開
発
す
る
際
に
,
空
間
分
割
を
求
め
る
の
に
要
す
る
計
算
時
間
と
サ
ン
プ
リ
ン
グ
効
率
の
ト
レ
ー
ド
オ
フ
の
評
価
が
可
能
に
な
る
.
2.
関
連
研
究
本
節
で
は
,
自
由
行
程
サ
ン
プ
リ
ン
グ
の
従
来
法
に
つ
い
て
議
論
す
る
.
関
与
媒
質
の
レ
ン
ダ
リ
ン
グ
に
関
す
る
従
来
研
究
は
,
サ
ー
ベ
イ
4
),
6
)
を
参
照
さ
れ
た
い
.
自
由
行
程
サ
ン
プ
リ
ン
グ
の
手
法
は
,
次
の
二
つ
に
分
類
で
き
る
:
1
)
レ
イ
マ
ー
チ
ン
グ
お
よ
び
そ
の
応
用
手
法
2
),
7
),
1
0
),
1
1
)
,
2
)
W
o
o
d
co
ck
tr
a
ck
in
g
お
よ
び
そ
の
応
用
手
法
3
),
9
),
1
3
)–
1
5
)
.
C
G
分
野
で
は
,
レ
イ
マ
ー
チ
ン
グ
が
一
般
的
に
用
い
ら
れ
て
い
る
が
,
計
算
結
果
に
は
一
般
的
に
統
計
的
に
偏
り
が
あ
り
,
厳
密
解
に
収
束
し
な
い
.
厳
密
解
と
統
計
的
に
偏
り
の
あ
る
解
の
差
は
視
覚
的
に
容
易
に
わ
か
る
も
の
の
,
そ
の
よ
う
な
差
は
前
も
っ
て
見
積
も
る
こ
と
が
難
し
い
た
め
,
し
ば
し
ば
問
題
に
な
る
.
上
記
の
偏
り
に
起
因
す
る
問
題
を
解
決
す
る
方
法
と
し
て
,
W
o
o
d
co
ck
tr
a
ck
in
g
1
3
)
が
原
子
力
科
学
の
分
野
で
提
案
さ
れ
て
お
り
,
R
a
a
b
ら
1
2
)
に
よ
っ
て
初
め
て
C
G
分
野
に
導
入
さ
れ
た
.
W
o
o
d
co
ck
tr
a
ck
in
g
は
C
o
le
m
a
n
ら
5
)
に
よ
っ
て
統
計
的
に
不
偏
で
あ
る
こ
と
が
証
明
さ
れ
て
お
り
,
厳
密
解
に
収
束
す
る
.
W
o
o
d
co
ck
tr
a
ck
in
g
の
欠
点
は
,
非
均
質
の
度
合
い
が
よ
り
高
い
媒
質
に
お
い
て
,
計
算
効
率
が
よ
り
悪
く
な
る
こ
と
9
)
で
あ
る
.
こ
の
問
題
は
長
ら
く
知
ら
れ
て
き
た
が
,
近
年
に
至
る
ま
で
解
決
法
は
存
在
し
な
か
っ
た
.
B
a
d
a
l
ら
1
)
は
,
G
P
U
実
装
を
利
用
す
る
こ
と
に
よ
り
W
o
o
d
co
ck
tr
a
ck
in
g
を
高
速
化
し
た
.
L
ep
p
a¨
n
en
9
)
は
,
手
動
で
密
度
の
濃
い
領
域
と
薄
い
領
域
を
分
け
て
別
々
に
扱
う
こ
と
に
よ
り
,
サ
ン
プ
リ
ン
グ
の
効
率
を
改
善
し
た
.
我
々
の
先
行
研
究
1
4
),
1
5
)
で
は
,
k
d
-木
を
用
い
た
空
間
分
割
の
考
え
方
を
導
入
し
,
こ
の
空
間
分
割
に
基
づ
い
た
,
統
計
的
に
不
偏
で
適
合
的
な
自
由
行
程
サ
ン
プ
リ
ン
グ
法
を
開
発
す
る
こ
と
に
よ
っ
て
,
W
o
o
d
co
ck
tr
a
ck
in
g
の
欠
点
を
解
決
し
た
.
空
間
分
割
の
方
法
と
し
て
,
我
々
は
ヒ
ュ
ー
リ
ス
テ
ィ
ッ
ク
な
ア
プ
ロ
ー
チ
を
用
い
た
自
動
的
な
分
割
方
法
を
提
案
し
た
.
し
か
し
,
サ
ン
プ
リ
ン
グ
の
効
率
が
最
適
に
な
る
保
証
は
な
い
た
め
に
不
完
全
で
あ
り
,
ど
の
よ
う
に
す
れ
ば
最
適
な
空
(a
)
(b
)
図
1
(a
):
W
o
o
d
c
o
ck
tr
a
ck
in
g
の
概
念
図
.
(b
):
提
案
法
の
概
念
図
.
間
分
割
を
求
め
る
こ
と
が
で
き
る
か
,
と
い
う
問
題
を
残
し
た
.
本
稿
で
は
,
不
偏
で
適
合
的
な
自
由
行
程
サ
ン
プ
リ
ン
グ
に
お
い
て
,
サ
ン
プ
リ
ン
グ
効
率
を
最
適
に
す
る
た
め
の
空
間
分
割
の
求
め
方
に
つ
い
て
議
論
を
行
う
.
3.
自
由
行
程
サ
ン
プ
リ
ン
グ
本
節
で
は
,
自
由
行
程
サ
ン
プ
リ
ン
グ
に
つ
い
て
説
明
し
,
次
に
W
o
o
d
co
ck
tr
a
ck
in
g
1
3
)
と
我
々
の
先
行
研
究
1
4
),
1
5
)
を
概
説
す
る
.
モ
ン
テ
カ
ル
ロ
ベ
ー
ス
の
レ
ン
ダ
リ
ン
グ
法
に
お
い
て
光
路
を
生
成
す
る
際
に
は
,
連
続
す
る
散
乱
イ
ベ
ン
ト
を
順
次
生
成
し
て
い
く
.
図
1
(a
)
に
示
す
よ
う
に
,
散
乱
イ
ベ
ン
ト
i
が
す
で
に
生
成
さ
れ
て
い
る
と
き
,
新
た
な
散
乱
イ
ベ
ン
ト
(i
+
1
)
を
生
成
す
る
に
は
,
自
由
行
程
d
i
お
よ
び
散
乱
方
向
ω
i
を
確
率
的
に
サ
ン
プ
リ
ン
グ
す
る
.
散
乱
方
向
の
サ
ン
プ
リ
ン
グ
に
は
,
一
般
的
な
重
点
的
サ
ン
プ
リ
ン
グ
手
法
を
用
い
る
こ
と
が
で
き
る
.
自
由
行
程
の
サ
ン
プ
リ
ン
グ
で
は
,
d
i
を
下
記
の
確
率
密
度
分
布
に
従
っ
て
サ
ン
プ
リ
ン
グ
す
る
1
0
)
.
p
df
f
p
(x
i+
1
=
x
i
+
d
i
ω
i
)
=
e−
τ
(x
i
,x
i
+
1
)
k
(x
i+
1
)
(1
)
こ
こ
で
,
x
i
と
x
i+
1
は
i
番
目
と
(i
+
1
)
番
目
の
散
乱
イ
ベ
ン
ト
の
位
置
,
k
は
消
散
係
数
,
τ
(x
i
,x
i+
1
)
=
∫ x i
+
1
x
i
k
(x
′ )
d
x
′
は
,
x
i
と
x
i+
1
間
の
光
学
的
深
さ
を
表
す
.
W
o
o
d
co
ck
tr
a
ck
in
g
は
,
棄
却
サ
ン
プ
リ
ン
グ
法
に
よ
り
自
由
行
程
を
サ
ン
プ
リ
ン
グ
す
る
.
事
前
に
m
a
jo
ra
n
t
消
散
係
数
k
M
を
求
め
て
お
く
.
m
a
jo
ra
n
t
消
散
係
数
k
M
は
空
間
を
代
表
す
る
よ
う
な
消
散
係
数
で
あ
り
,
媒
質
中
の
消
散
係
数
よ
り
も
小
さ
く
な
い
値
で
あ
れ
ば
ど
ん
な
値
で
も
よ
く
,
通
常
は
消
散
係
数
の
最
大
値
を
用
い
る
.
サ
ン
プ
リ
ン
グ
時
は
,
媒
質
を
消
散
係
数
が
k
M
で
あ
る
一
様
媒
質
と
み
な
し
て
,
仮
想
散
乱
イ
ベ
ン
ト
を
生
成
す
る
.
図
1
(a
)
に
示
す
よ
う
に
,
新
た
な
仮
想
散
乱
イ
ベ
ン
ト
を
生
成
す
る
に
は
,
乱
数
を
用
い
て
,
自
由
行
程
d
i
を
−
ln
(1
−
ra
n
d
()
)/
k
M
だ
け
進
め
る
.
な
お
,
こ
の
と
き
に
増
加
す
る
自
由
行
程
の
期
待
値
は
1
/
k
M
で
あ
る
.
不
偏
性
を
保
障
す
る
た
め
に
は
,
こ
う
し
た
仮
想
散
2
c ©
2
0
1
0
In
fo
rm
a
ti
o
n
P
ro
ce
ss
in
g
S
o
ci
et
y
o
f
J
a
p
a
n
情
報
処
理
学
会
研
究
報
告
IP
S
J
S
IG
T
ec
h
n
ic
a
l
R
ep
o
rt
上
記
の
二
つ
の
ケ
ー
ス
は
,
R
it
e
r
(I
′ )
=
A
(I
′ )
−
T
(I
′ )
と
い
う
形
に
統
合
し
て
定
式
化
で
き
る
.
こ
こ
で
,
I
′

(s
,t
]
で
あ
る
.
A
(I
′ )
は
ケ
ー
ス
I
の
場
合
に
は
A
(I
′ )
=
(k
M
−
k
N
)
·(
q
−
p
)
で
あ
り
,
ケ
ー
ス
II
の
場
合
に
は
A
(I
′ )
=
∑ 3 i
=
1
(k
M
−
k
M
i
)
·|I
i
|を
表
す
.
ま
た
,
T
(I
′ )
は
ケ
ー
ス
I
の
場
合
に
は
T
(I
′ )
=
1
で
あ
り
,
ケ
ー
ス
II
の
場
合
に
は
T
(I
′ )
=
2
で
あ
る
.
最
適
な
空
間
分
割
を
求
め
る
に
は
,
R
it
e
r
を
最
大
化
す
る
部
分
区
間
I
を
探
す
.
す
な
わ
ち
,
I
=
a
rg
m
a
x
I
′ 
(s
,t
]
R
it
e
r
(I
′ )
(2
)
で
あ
る
.
も
し
,
R
it
e
r
(I
)
>
0
な
ら
ば
,
分
割
に
よ
っ
て
反
復
回
数
の
期
待
値
を
減
少
で
き
る
.
R
it
e
r
(I
)
≤
0
な
ら
ば
,
分
割
に
よ
っ
て
反
復
回
数
の
期
待
値
を
減
少
で
き
な
い
の
で
,
(s
,t
]
は
分
割
し
な
い
.
上
記
の
議
論
は
,
反
復
回
数
の
期
待
値
の
評
価
に
基
づ
い
て
い
た
.
こ
の
議
論
は
次
の
よ
う
に
し
て
計
算
時
間
の
評
価
に
拡
張
で
き
る
.
t i
te
r
を
仮
想
的
な
散
乱
イ
ベ
ン
ト
を
一
回
生
成
す
る
の
に
要
す
る
計
算
時
間
,
t r
e
w
in
d
を
後
戻
り
の
処
理
を
一
回
行
う
の
に
要
す
る
計
算
時
間
と
す
る
.
分
割
を
行
っ
た
場
合
に
,
(s
,t
]
を
通
過
す
る
の
に
要
す
る
計
算
時
間
の
減
少
R
ti
m
e
は
R
ti
m
e
(I
′ )
=
t i
te
r
·A
(I
′ )
−
t r
e
w
in
d
·T
(I
′ )
(3
)
と
表
す
こ
と
が
で
き
る
.
k
d
- 木
を
構
築
す
る
に
は
,
ケ
ー
ス
I
の
場
合
に
は
,
適
切
な
(p
,q
]
の
端
で
,
(s
,t
]
を
分
割
す
る
.
ケ
ー
ス
II
の
場
合
に
は
,
(p
,q
]
の
両
端
の
う
ち
,
ま
ず
(s
,t
]
の
中
央
c
=
(s
+
t)
/
2
に
近
い
ほ
う
で
分
割
し
,
次
に
も
う
一
方
で
分
割
す
る
.
こ
の
よ
う
に
す
る
こ
と
で
,
よ
り
バ
ラ
ン
ス
さ
れ
た
k
d
-木
を
構
築
す
る
こ
と
が
で
き
る
.
上
記
の
手
順
を
分
割
さ
れ
た
各
領
域
に
対
し
て
,
再
帰
的
に
適
用
す
る
こ
と
に
よ
り
,
最
適
な
空
間
分
割
を
得
る
こ
と
が
で
き
る
.
4
.2
三
次
元
の
場
合
の
最
適
な
空
間
分
割
三
次
元
の
場
合
,
区
間
に
替
わ
り
,
三
次
元
の
(軸
平
行
な
面
で
囲
ま
れ
た
直
方
体
状
の
)
ボ
リ
ュ
ー
ム
領
域
E
を
考
え
る
.
ま
た
,
E
を
通
過
す
る
あ
ら
ゆ
る
光
線
の
空
間
Γ
(E
)
を
考
え
る
.
E
の
部
分
空
間
E
′
を
考
え
,
E
′ に
よ
っ
て
E
を
分
割
し
た
場
合
と
分
割
し
な
い
場
合
と
で
,
E
を
通
過
す
る
各
光
線
に
つ
い
て
反
復
回
数
の
期
待
値
を
求
め
,
そ
れ
ら
の
光
線
に
つ
い
て
の
平
均
を
考
え
る
.
こ
こ
で
,
E
′ に
よ
っ
て
E
を
分
割
す
る
と
は
,
複
数
の
長
方
形
状
の
有
限
な
大
き
さ
の
平
面
P
k
を
用
い
て
E
を
二
分
し
な
が
ら
分
割
し
,
最
終
的
に
E
′ を
得
る
よ
う
な
分
割
を
意
味
す
る
.
こ
れ
は
,
k
d
-木
を
用
い
て
空
間
分
割
を
表
現
す
る
こ
と
に
基
づ
く
.
以
下
で
は
こ
う
し
た
長
方
形
状
の
有
限
な
大
き
さ
の
平
面
P
k
を
単
に
分
割
平
面
P
k
と
呼
ぶ
.
分
割
の
回
数
を
最
小
に
す
る
に
は
,
各
P
k
は
E
′ の
ど
れ
か
の
面
を
含
む
よ
う
に
選
ぶ
.
E
′ が
E
に
厳
密
に
包
含
さ
れ
て
い
る
場
合
,
E
′ に
は
六
つ
の
面
が
あ
る
の
で
,
k
=
1
,.
..
,6
と
な
る
.
た
だ
し
,
分
割
平
面
を
選
ぶ
順
序
は
一
意
で
は
な
い
が
,
そ
の
取
り
扱
い
は
後
述
す
る
.
ま
ず
,
分
割
を
行
わ
な
い
場
合
の
,
反
復
回
数
の
期
待
値
の
全
光
線
に
つ
い
て
の
平
均
値
N
を
,
下
記
の
よ
う
に
定
式
化
す
る
.
N
=
∫ Γ(
E
)
k
M
l(
r)
d
r/
∫ Γ(
E
)
d
r
(4
)
こ
こ
で
,
k
M
は
E
の
m
a
jo
ra
n
t
消
散
係
数
,
l(
r)
は
光
線
r
が
E
を
通
過
す
る
距
離
を
表
す
.
次
に
,
分
割
を
行
う
場
合
に
は
,
1
)
各
分
割
さ
れ
た
空
間
を
通
過
す
る
の
に
要
す
る
反
復
回
数
と
2
)
分
割
平
面
を
通
過
す
る
際
の
後
戻
り
の
処
理
に
要
す
る
回
数
と
を
別
々
に
考
慮
す
る
.
ま
ず
,
P
k
に
よ
っ
て
分
割
さ
れ
た
E
の
複
数
の
部
分
空
間
を
E
j
と
す
る
と
,
1
)
は
,
∑ j
∫ Γ(
E
j
)
k
M
,E
j
l(
r)
d
r/
∫ Γ(
E
)
d
r
(5
)
と
定
式
化
で
き
る
.
こ
こ
で
,
k
M
,E
j
は
,
E
j
の
m
a
jo
ra
n
t
消
散
係
数
を
表
す
.
次
に
,
2
)
は
,
∑ k
∫ Γ(
P
k
)
1
·d
r/
∫ Γ(
E
)
d
r
(6
)
と
定
式
化
で
き
る
.
こ
こ
で
,
Γ
(P
k
)
は
,
P
k
を
通
過
す
る
全
光
線
の
空
間
を
表
し
,
数
字
の
1
は
分
割
平
面
を
通
過
す
る
際
に
行
う
一
回
の
後
戻
り
処
理
を
表
す
.
し
た
が
っ
て
,
分
割
を
行
っ
た
場
合
の
,
反
復
回
数
の
期
待
値
の
全
光
線
に
つ
い
て
の
平
均
値
N
p
a
r
t
は
,
N
p
a
r
t
=
∑ j
∫ Γ(
E
j
)
k
M
,E
j
l(
r)
d
r/
∫ Γ(
E
)
d
r
+
∑ k
∫ Γ(
P
k
)
1
·d
r/
∫ Γ(
E
)
d
r
(7
)
と
表
せ
る
.
4
.1
節
の
R
it
e
r
は
,
R
it
e
r
=
N
−
N
p
a
r
t
で
あ
り
,
三
次
元
の
場
合
は
下
記
の
形
式
に
拡
張
さ
れ
る
.
R
it
e
r
(E
′ )
=
∑ j
∫ Γ(
E
j
)
(k
M
−
k
M
,E
j
)l
(r
)d
r/
∫ Γ(
E
)
d
r
−
∑ k
∫ Γ(
P
k
)
1
·d
r/
∫ Γ(
E
)
d
r
=
A
(E
′ )
−
T
(E
′ )
(8
)
上
記
の
定
式
化
に
現
れ
る
積
分
は
,
通
常
正
確
に
評
価
す
る
こ
と
が
難
し
い
と
考
え
ら
れ
る
が
,
我
々
は
,
下
記
の
二
つ
の
仮
定
の
下
で
は
,
解
析
的
に
求
ま
る
こ
と
を
発
見
し
た
.
1
)
光
線
は
無
限
遠
か
ら
入
射
し
,
4
c ©
2
0
1
0
In
fo
rm
a
ti
o
n
P
ro
ce
ss
in
g
S
o
ci
et
y
o
f
J
a
p
a
n
情
報
処
理
学
会
研
究
報
告
IP
S
J
S
IG
T
ec
h
n
ic
a
l
R
ep
o
rt
も
異
な
る
の
で
,
式
(1
7
)
あ
る
い
は
式
(1
8
)
は
そ
の
都
度
評
価
す
る
.
す
べ
て
の
E
′
と
す
べ
て
の
分
割
方
法
の
う
ち
で
,
R
it
e
r
あ
る
い
は
R
ti
m
e
が
最
大
の
も
の
を
探
し
,
R
it
e
r
あ
る
い
は
R
ti
m
e
が
正
な
ら
ば
,
そ
の
分
割
方
法
を
用
い
て
E
を
分
割
す
る
.
そ
う
で
な
け
れ
ば
,
E
は
分
割
し
な
い
.
5.
デ
ィ
ス
カ
ッ
シ
ョ
ン
本
節
で
は
,
本
稿
で
述
べ
た
手
法
の
利
用
法
に
つ
い
て
述
べ
る
.
4
節
で
述
べ
た
空
間
分
割
を
求
め
る
方
法
は
,
全
探
索
を
用
い
た
方
法
で
あ
り
,
計
算
の
コ
ス
ト
が
非
常
に
高
い
の
で
,
実
用
的
な
解
像
度
の
媒
質
に
対
す
る
空
間
分
割
を
求
め
る
と
い
う
用
途
に
は
向
か
な
い
.
し
か
し
,
次
に
示
す
よ
う
に
,
既
存
の
空
間
分
割
ス
キ
ー
ム
に
よ
る
サ
ン
プ
リ
ン
グ
効
率
を
評
価
す
る
の
に
役
立
て
る
こ
と
が
で
き
る
.
我
々
は
,
8
3
や
1
6
3
の
解
像
度
の
ラ
ン
ダ
ム
に
生
成
し
た
媒
質
に
対
し
て
,
ま
ず
,
1
)
先
行
研
究
の
方
法
と
2
)
本
稿
の
方
法
で
空
間
分
割
を
計
算
し
た
.
次
に
,
ラ
ン
ダ
ム
に
1
0
6
本
の
光
線
を
生
成
し
,
散
乱
イ
ベ
ン
ト
が
起
こ
る
ま
で
に
要
し
た
反
復
回
数
を
測
定
し
全
光
線
に
つ
い
て
の
平
均
を
計
算
し
た
.
そ
の
結
果
,
先
行
研
究
の
方
法
で
得
ら
れ
る
空
間
分
割
を
用
い
た
サ
ン
プ
リ
ン
グ
効
率
に
比
べ
て
,
本
稿
の
方
法
で
得
た
空
間
分
割
を
用
い
た
サ
ン
プ
リ
ン
グ
効
率
は
,
平
均
的
に
3
.3
%
よ
く
,
最
大
で
2
3
.4
%
よ
い
と
い
う
結
果
と
な
っ
た
.
6.
お
わ
り
に
本
稿
で
は
,
三
次
元
の
場
合
に
お
い
て
,
理
論
的
に
サ
ン
プ
リ
ン
グ
効
率
が
最
適
と
な
る
空
間
分
割
ス
キ
ー
ム
の
た
め
の
定
式
化
を
示
し
た
.
ま
た
1
)
光
線
は
無
限
遠
か
ら
入
射
し
,
無
限
遠
へ
射
出
す
る
,
2
)
光
線
は
空
間
内
に
お
い
て
一
様
に
分
布
す
る
,
と
い
う
二
つ
の
仮
定
の
下
で
,
解
析
的
に
計
算
で
き
る
こ
と
を
示
し
た
.
さ
ら
に
,
本
稿
で
示
し
た
ス
キ
ー
ム
を
利
用
し
て
,
先
行
研
究
1
4
),
1
5
)
の
方
法
を
用
い
た
場
合
の
サ
ン
プ
リ
ン
グ
の
効
率
に
つ
い
て
評
価
を
行
っ
た
.
今
後
の
課
題
と
し
て
,
次
に
示
す
こ
と
が
考
え
ら
れ
る
.
ま
ず
,
上
記
の
二
つ
の
仮
定
を
緩
和
し
た
場
合
に
お
い
て
も
,
解
析
解
が
存
在
す
る
か
ど
う
か
に
つ
い
て
調
べ
た
い
.
次
に
,
本
稿
で
述
べ
た
解
法
と
先
行
研
究
の
方
法
と
の
間
に
は
,
空
間
分
割
の
計
算
時
間
と
,
得
ら
れ
た
空
間
分
割
を
用
い
た
サ
ン
プ
リ
ン
グ
の
効
率
と
の
ト
レ
ー
ド
オ
フ
に
関
し
て
,
一
連
の
手
法
の
ク
ラ
ス
が
存
在
す
る
と
考
え
ら
れ
る
の
で
,
ど
の
よ
う
な
手
法
が
可
能
か
を
検
討
し
て
い
き
た
い
.
参
考
文
献
1
)
B
a
d
a
l,
A
.
a
n
d
B
a
d
a
n
o
,
A
.:
A
cc
el
er
a
ti
n
g
M
o
n
te
C
a
rl
o
si
m
u
la
ti
o
n
s
o
f
p
h
o
to
n
tr
a
n
s-
p
o
rt
in
a
v
ox
el
iz
ed
g
eo
m
et
ry
u
si
n
g
a
m
a
ss
iv
el
y
p
a
ra
ll
el
g
ra
p
h
ic
s
p
ro
ce
ss
in
g
u
n
it
,
M
ed
ic
a
l
P
h
ys
ic
s,
V
o
l.
3
6
,
N
o
.1
1
,
p
p
.4
8
7
8
–
4
8
8
0
(2
0
0
9
).
2
)
B
ro
w
n
,
F
.B
.
a
n
d
M
a
rt
in
,
W
.R
.:
D
ir
ec
t
S
a
m
p
li
n
g
o
f
M
o
n
te
C
a
rl
o
F
li
g
h
t
P
a
th
s
in
M
ed
ia
w
it
h
C
o
n
ti
n
u
o
u
sl
y
V
a
ry
in
g
C
ro
ss
-s
ec
ti
o
n
s,
P
ro
c.
A
N
S
M
a
th
em
a
ti
cs
&
C
o
m
p
u
ta
ti
o
n
T
o
p
ic
a
l
M
ee
ti
n
g
(2
0
0
3
).
3
)
C
a
rt
er
,
L
.,
C
a
sh
w
el
l,
E
.
a
n
d
W
.M
.T
ay
lo
r:
M
o
n
te
C
a
rl
o
S
a
m
p
li
n
g
w
it
h
C
o
n
ti
n
u
-
o
u
sl
y
V
a
ry
in
g
C
ro
ss
S
ec
ti
o
n
s
a
lo
n
g
F
li
g
h
t
P
a
th
s,
N
u
cl
ea
r
S
ci
en
ce
a
n
d
E
n
gi
n
ee
ri
n
g,
V
o
l.
4
8
,
p
p
.4
0
3
–
4
1
1
(1
9
7
2
).
4
)
C
er
ez
o
,
E
.,
P
e´r
ez
,
F
.,
P
u
ey
o
,
X
.,
S
er
o´
n
,
F
.J
.
a
n
d
S
il
li
o
n
,
F
.X
.:
A
su
rv
ey
o
n
p
a
rt
ic
i-
p
a
ti
n
g
m
ed
ia
re
n
d
er
in
g
te
ch
n
iq
u
es
,
T
h
e
V
is
u
a
l
C
o
m
p
u
te
r,
V
o
l.
2
1
,
N
o
.5
,
p
p
.3
0
3
–
3
2
8
(2
0
0
5
).
5
)
C
o
le
m
a
n
,
W
.:
M
a
th
em
a
ti
ca
l
v
er
iﬁ
ca
ti
o
n
o
f
a
ce
rt
a
in
M
o
n
te
C
a
rl
o
sa
m
p
li
n
g
te
ch
-
n
iq
u
e
a
n
d
a
p
p
li
ca
ti
o
n
s
o
f
th
e
te
ch
n
iq
u
e
to
ra
d
ia
ti
o
n
tr
a
n
sp
o
rt
p
ro
b
le
m
s,
N
u
cl
ea
r
S
ci
en
ce
a
n
d
E
n
gi
n
ee
ri
n
g,
V
o
l.
3
2
,
p
p
.7
6
–
8
1
(1
9
6
8
).
6
)
G
u
ti
er
re
z,
D
.,
J
en
se
n
,
H
.W
.,
J
a
ro
sz
,
W
.
a
n
d
D
o
n
n
er
,
C
.:
S
ca
tt
er
in
g
,
S
IG
G
R
A
P
H
A
S
IA
C
o
u
rs
es
(2
0
0
9
).
7
)
J
en
se
n
,
H
.W
.
a
n
d
C
h
ri
st
en
se
n
,
P
.H
.:
E
ﬃ
ci
en
t
si
m
u
la
ti
o
n
o
f
li
g
h
t
tr
a
n
sp
o
rt
in
sc
en
es
w
it
h
p
a
rt
ic
ip
a
ti
n
g
m
ed
ia
u
si
n
g
p
h
o
to
n
m
a
p
s,
P
ro
c.
S
IG
G
R
A
P
H
9
8
,
A
C
M
,
p
p
.3
1
1
–
3
2
0
(1
9
9
8
).
8
)
L
a
fo
rt
u
n
e,
E
.P
.
a
n
d
W
il
le
m
s,
Y
.D
.:
R
en
d
er
in
g
p
a
rt
ic
ip
a
ti
n
g
m
ed
ia
w
it
h
b
id
ir
ec
-
ti
o
n
a
l
p
a
th
tr
a
ci
n
g
,
P
ro
c.
E
G
W
R
9
6
,
p
p
.9
1
–
1
0
0
(1
9
9
6
).
9
)
L
ep
p
a¨
n
en
,
J
.:
D
ev
el
o
p
m
en
t
o
f
a
N
ew
M
o
n
te
C
a
rl
o
R
ea
ct
o
r
P
h
y
si
cs
C
o
d
e,
P
h
D
T
h
es
is
,
H
el
si
n
k
i
U
n
iv
er
si
ty
o
f
T
ec
h
n
o
lo
g
y
(2
0
0
7
).
1
0
)
P
a
u
ly
,
M
.,
K
o
ll
ig
,
T
.
a
n
d
K
el
le
r,
A
.:
M
et
ro
p
o
li
s
L
ig
h
t
T
ra
n
sp
o
rt
fo
r
P
a
rt
ic
ip
a
ti
n
g
M
ed
ia
,
P
ro
c.
E
G
W
R
2
0
0
0
,
p
p
.1
1
–
2
2
(2
0
0
0
).
1
1
)
P
er
li
n
,
K
.
a
n
d
H
o
ﬀ
er
t,
E
.
M
.:
H
y
p
er
te
x
tu
re
,
C
o
m
p
u
te
r
G
ra
p
h
ic
s
(P
ro
c.
S
IG
-
G
R
A
P
H
8
9
),
V
o
l.
2
3
,
A
C
M
,
p
p
.2
5
3
–
2
6
2
(1
9
8
9
).
1
2
)
R
a
a
b
,
M
.,
S
ei
b
er
t,
D
.
a
n
d
K
el
le
r,
A
.:
U
n
b
ia
se
d
g
lo
b
a
l
il
lu
m
in
a
ti
o
n
w
it
h
p
a
rt
ic
ip
a
t-
in
g
m
ed
ia
,
P
ro
c.
M
o
n
te
C
a
rl
o
a
n
d
Q
u
a
si
-M
o
n
te
C
a
rl
o
M
et
h
od
s
2
0
0
6
,
p
p
.5
9
1
–
6
0
5
(2
0
0
6
).
1
3
)
W
o
o
d
co
ck
,
E
.,
M
u
rp
h
y,
T
.,
H
em
m
in
g
s,
P
.
a
n
d
L
o
n
g
w
o
rt
h
,
T
.:
T
ec
h
n
iq
u
es
u
se
d
in
th
e
G
E
M
co
d
e
fo
r
M
o
n
te
C
a
rl
o
n
eu
tr
o
n
ic
s
ca
lc
u
la
ti
o
n
s
in
re
a
ct
o
rs
a
n
d
o
th
er
sy
st
em
s
o
f
co
m
p
le
x
g
eo
m
et
ry
,
P
ro
c.
C
o
n
fe
re
n
ce
o
n
th
e
A
p
p
li
ca
ti
o
n
o
f
C
o
m
p
u
ti
n
g
M
et
h
od
s
to
R
ea
ct
o
r
P
ro
bl
em
s,
A
N
L
-7
0
5
0
,
p
p
.5
5
7
–
5
7
9
(1
9
6
5
).
1
4
)
Y
u
e,
Y
.,
Iw
a
sa
k
i,
K
.,
C
h
en
,
B
.-
Y
.,
D
o
b
a
sh
i,
Y
.
a
n
d
N
is
h
it
a
,
T
.:
U
n
b
ia
se
d
,
A
d
a
p
-
ti
v
e
S
to
ch
a
st
ic
S
a
m
p
li
n
g
fo
r
R
en
d
er
in
g
In
h
o
m
o
g
en
eo
u
s
P
a
rt
ic
ip
a
ti
n
g
M
ed
ia
,
A
C
M
T
ra
n
sa
ct
io
n
s
o
n
G
ra
p
h
ic
s
(P
ro
c.
S
IG
G
R
A
P
H
A
si
a
2
0
1
0
),
V
o
l.
2
9
,
N
o
.5
(2
0
1
0
).
A
rt
ic
le
1
7
7
.
1
5
)
Y
u
e,
Y
. ，
岩
崎
　
慶
，
陳
　
炳
宇
，
土
橋
宜
典
，
西
田
友
是
：
非
均
質
関
与
媒
質
の
レ
ン
ダ
リ
ン
グ
の
た
め
の
不
偏
で
効
率
的
な
重
点
的
サ
ン
プ
リ
ン
グ
手
法
，
V
is
u
a
l
C
o
m
p
u
ti
n
g
/
グ
ラ
フ
ィ
ク
ス
と
C
A
D
合
同
シ
ン
ポ
ジ
ウ
ム
2
0
1
0
(2
0
1
0
).
論
文
番
号
1
.
6
c ©
2
0
1
0
In
fo
rm
a
ti
o
n
P
ro
ce
ss
in
g
S
o
ci
et
y
o
f
J
a
p
a
n
(a) (b)
Figure 2: (a): Illustration of light paths. (b): Sampling in parti-
tioned space. Black dots show the locations of scattering events and
the boxes with dashed lines show the bounding box of the medium.
tioning is represented as a kd-tree. During rendering, the locations
of the scattering events are determined adaptively using the kd-tree.
Our sampling technique is proven to be unbiased. A key contri-
bution of our method is an automatic partitioning scheme based
on a cost model for evaluating the sampling efficiency. We find
the optimal partitioning with respect to the cost model by solving
the largest empty rectangle problem. Another contribution of our
method is its scalability to handle a wide range of scenes including
clouds and atmosphere in whole-sky-scale as shown in Figure 1.
Using our method, the cost for obtaining the free path becomes
as low as the cost for other rendering processes including shading,
contrasting with other methods where it is the dominant cost. Our
method is one to two orders of magnitude faster in the overall ren-
dering speed than the previous methods for highly inhomogeneous
media, and is implemented on the GPU using CUDA.
An important benefit of our method is the ability to accelerate all
of the previous methods that generate light paths for rendering par-
ticipating media. Such methods include path tracing and Metropo-
lis light transport [Pauly et al. 2000], as well as photon mapping
[Jensen and Christensen 1998]. This benefit is also applicable in
other fields, such as nuclear science and medical physics.
2 Related Work
There has been much previous research on rendering participating
media. Thorough reviews can be found in [Cerezo et al. 2005] or
[Gutierrez et al. 2009]. Here, we briefly review some closely re-
lated papers. According to Cerezo et al. [2005], rendering meth-
ods for participating media can be classified into voxel-based meth-
ods [Stam 1995; Nishita et al. 1996] and sampling-based methods.
Voxel-based methods are usually inefficient for obtaining accurate
results, as the resolution of the voxels needs to be maintained finely.
In sampling-based methods, such as Metropolis light transport
[Pauly et al. 2000] and photon mapping [Jensen and Christensen
1998], the intensity at a pixel is calculated by generating a number
of light paths, each of which consists of a set of scattering events.
Major techniques to determine the locations of the scattering events
are the ray-marching method [Perlin and Hoffert 1989; Jensen and
Christensen 1998; Pauly et al. 2000] or its variants, e.g., [Brown and
Martin 2003]. However, they are biased and will produce different
results for different sampling intervals.
For unbiased sampling, Raab et al. [2006] introduced Woodcock
tracking [Woodcock et al. 1965; Lux and Koblinger 1991] (also
known as delta-tracking or pseudo-scattering) from the field of nu-
clear science. Although it has been proven to be unbiased [Coleman
1968], it is known to be inefficient when dealing with inhomoge-
neous media [Leppa¨nen 2007]. Surprisingly, however, little work
has been proposed to overcome this inefficiency in the past few
decades. Recently, GPU implementations of Woodcock tracking
were proposed by, e.g., Badal et al. [2009]. Leppa¨nen [2007] im-
proved Woodcock tracking by separating dense regions from sparse
regions, and treating these two kinds of regions differently. Unlike
the problem settings in Leppa¨nen [2007], the density distribution of
participating media appearing in the computer graphics field (such
as smoke and clouds) is usually continuous, and it is not obvious
how to adapt such two-level separation.
In this paper, we propose for the first time an automatic space par-
titioning scheme and use a kd-tree to represent the partitioning.
Inefficiency for rendering inhomogeneous participating media is
overcome by utilizing the space partitioning for free path sampling.
Moreover, our method scales well to the complexity of the scene.
3 Free Path Sampling
We first state the free path sampling problem, and then discuss the
issues of ray-marching and Woodcock tracking.
Monte Carlo techniques calculate the pixel intensity by first gen-
erating a number of light paths, and then integrating their contri-
butions. To generate a light path, scattering events are generated
successively as shown in Figure 2(a). Assume the scattering event i
has already been generated. The location of scattering event (i+1)
is typically determined by sampling the free path di and the scat-
tering direction ~ωi by using random numbers. For the scattering
direction, we can use conventional importance sampling. The free
path di should be sampled according to the following probability
density function [Pauly et al. 2000]:
pdffp(xi+1 = xi + di~ωi) = e
−τ(xi,xi+1)k(xi+1), (1)
where xi and xi+1 are the locations of the scattering events i and
(i+1). τ(xi,xi+1) =
∫
xi+1
xi
k(x′)dx′ is the optical depth between
xi and xi+1. k indicates the extinction coefficients. To generate
random numbers that obey the above probability density function,
the inversion method is usually used together with ray-marching:
first, a random number ξ ∈ (0, 1) is drawn using rand(), then
di satisfying τ(xi + di~ωi,xi) = − ln(1 − ξ) is found using ray-
marching, which, however, introduces bias.
Woodcock tracking (shown as Algorithm 1) samples the free path in
an unbiased way by utilizing a rejection sampling technique. First,
a majorant extinction coefficient kM which is the maximum ex-
tinction coefficient of the participating medium is computed. Then,
Woodcock tracking samples pseudo scattering events by regard-
ing the medium as a uniform medium with the extinction coeffi-
cient being kM . For unbiasedness, such pseudo scattering events
are only accepted as ‘real’ scattering events with the probability
k(xi + di~ωi)/kM . This process is proven to be unbiased and
we can obtain di with the probability density function given by
Equation (1) [Coleman 1968]. Every time a random number is
generated, the free path di (see Figure 2(a)) is incremented by
− ln(1 − rand())/kM , whose expectation value is 1/kM . In an
inhomogeneous participating medium, k(xi + di~ωi) is often much
smaller than the majorant extinction coefficient kM , and the ra-
tio k(xi + di~ωi)/kM becomes small where the medium is sparse.
Therefore, many random numbers might be generated until a real
scattering event is detected. Thus, this method becomes less effi-
cient when the participating medium is highly inhomogeneous.
177:2        •        Y. Yue et al.
ACM Transactions on Graphics, Vol. 29, No. 6, Article 177, Publication date: December 2010.
Figure 4: An illustration of building functions k+(x) and kδ(x),
and calculating partitioning coordinates. For each location a, we
scan along a slice ‘a’ perpendicular to the x axis, and find the
maximum and minimum extinction coefficients (k+(a) and k−(a),
respectively) in this slice. kδ(a) is then defined as k+(a)− k−(a).
Suri 1987]. In our problem, the area of each rectangle is replaced
by the reduced area. For the solution, we discretize the empty re-
gion E into n bins along the x axis and use dynamic programming
to find the largest empty rectangle in E. Both the computational
complexity and the memory requirement are in O(n). For details,
please refer to the supplemental material.
Assume R′ in Figure 3(b) is reported to be the largest rectangle
with the reduced area. Let q1 and q2 be the two ends of the rectan-
gle. As we use a kd-tree to represent the partitions, we partition the
interval once. Of these two ends, the one that is closer to the center
c = (s+ t)/2 of interval (s, t] is chosen as the partitioning location
q as shown in Figure 3(c). This makes the lengths of the two new
intervals, (s, q] and (q, t] as nearly equal as possible. The partition-
ing is then recursively applied to each of the two child intervals, as
shown in Figure 3(c). The kd-tree is constructed so that an inner
node represents the corresponding partitioning location and a leaf
node stores the majorant extinction coefficient of the corresponding
interval.
Three-dimensional case. An interval of the medium now be-
comes a volumetric region V . Hence, we want to choose a plane
for partitioning V . To maintain a kd-tree, we only consider planes
aligned to axes for partitioning. A straightforward way to find the
partitioning plane is to find the largest hyper-rectangle in the 4D
region bounded by w = k(x), w = kM and V . However, current
solutions for the largest empty rectangle problem in 4D space have
high computational complexity [Edmonds et al. 2003].
Instead, we employ a heuristic approach, with which, in our exper-
iments, the kd-tree can be built in less than one minute. Although
it is not always optimal, it works well for media with complex dis-
tributions as shown in Section 5.2. We regard the problem as three
individual 1D problems along each of the three axes, and try to find
the partitioning candidate for each of the axes. We then choose the
best one from those candidates comparing their benefits.
We first explain how to find the partitioning candidate for the x
axis. We first setup a 1D function k+(x) along the x axis, defined
as k+(x) = maxy,z,(x,y,z)∈V k(x, y, z). We apply the solution of
the one dimensional case to find the largest empty rectangle and
obtain its reduced area N∆+ . If N∆+ > 0, we obtain the corre-
sponding partitioning coordinate q+. This simple approach works
well for most cases, but if k(x) has many peaks in V and their
projections onto 1D overlap each other, k+(x) tends to become
uniform and fails to detect the non-uniform regions, e.g., sparse
regions that are enclosed by dense regions. To address this situa-
tion, we introduce another 1D function kδ(x), defined as kδ(x) =
maxy,z,(x,y,z)∈V k(x, y, z) − miny,z,(x,y,z)∈V k(x, y, z). Please
see Figure 4 for a graphical illustration of k+(x) and kδ(x). Using
kδ(x) makes it possible to detect the non-uniform regions in such
a case, because kδ(x) becomes large when the distribution of the
medium in the plane at x perpendicular to the x axis is inhomoge-
neous and becomes small if the distribution of the medium is nearly
homogeneous. We notice that the 1D largest empty rectangle solver
can be used to detect such homogeneous regions. Similar to the pro-
cess for obtaining N∆+ from k+(x), we obtain N∆δ from kδ(x). If
N∆δ > 0, we obtain another partitioning coordinate qδ . The last
step is then to choose the partitioning candidate from these two co-
ordinates. Empirically, we find that using q+ preferentially will
result in better performance. Thus, we compare N∆+ with F ·N∆δ ,
where F < 1 is a constant. We then choose the larger one and let its
value be the numerical representation of the benefit for the x axis.
We find that F = 0.7 gives good performance.
The above process is performed for the y and z axes. To lower the
cost for free path sampling, we seek the largest benefit. If it is less
than or equal to 0, V is left unpartitioned. Otherwise, we select the
partitioning axis and location that give the largest benefit value.
The memory footprint of a kd-tree is usually negligible compared to
the storage for the participating medium itself. In our implementa-
tion, the memory layout of the kd-tree is similar to that for standard
ray tracing [Wald 2004], and each node consumes only 8 bytes.
To handle object surfaces, we first perform the above process ignor-
ing the surfaces. Then, for each leaf node, if surfaces are aligned
in the node, we further construct a sub kd-tree in the node for the
surfaces. Compared to using separate kd-trees for the surfaces and
the medium, we can reduce redundant ray-surface intersections.
4.3 Ray Traversal
Algorithm 2 shows a ray traversal algorithm using the kd-tree. The
algorithm proceeds by first locating the leaf node for the current
sampling location. dmin and dmax in line 4 indicate the distances
to the nearest and farthest points of the node. In each leaf node, we
apply Algorithm 1 to sample the location of the scattering event. If
a ray-surface intersection is found as shown in line 8, disect is set
to the distance to the intersection. If d obtained in line 6 exceeds
disect, we return an intersection event. If the location correspond-
ing to d is inside the current leaf node, that location is determined
as the scattering location. Otherwise, we continue to the next in-
terval, by traversing the next leaf node. The resulting algorithm is
quite simple and similar to the standard kd-tree based ray tracing
algorithm for polygonal scenes, e.g., [Keller 1998]. Lines 2, 4, 8
and 9 of Algorithm 2 share his code.
177:4        •        Y. Yue et al.
ACM Transactions on Graphics, Vol. 29, No. 6, Article 177, Publication date: December 2010.
Figure 7: Rendered results of inhomogeneous participating media using our method. Global illumination effects, including multiple scatter-
ing and inter-reflection, are simulated. Image sizes are 640 by 480 for the left image and 960 by 450 for the middle and right images.
lowing two reasons: 1) the heuristics are imperfect; 2) the cost of
traversing the kd-tree influences the performance slightly.
Next, we would like to briefly mention the performance gain for
the whole rendering process, which have other sub-processes, such
as shading and sampling the scattered direction. In our implemen-
tation, they take up about half of the computation time. Thus, the
performance gain for the whole rendering process is about half of
that for free path sampling.
5.3 Rendered Results
The images in Figure 7 from left to right show the fire, steam and
sky scenes, lit by the fire, an environment light source and the sun-
light, respectively. Scene statistics are shown in Table 1. Kd-tree
construction took 5, 7 and 42 seconds for the fire, steam and sky
scenes. Our method is 2.7, 8.9 and 380 times faster than [Raab et al.
2006] to render the images in the same quality for these scenes.
These increased speeds come from the fact that the numbers of av-
erage iterations are significantly reduced. Our method running on
the GPU is about 50 times faster than on a single core of the CPU.
At each thread on the GPU, we compute tens of light paths for a
single pixel: light paths passing through the pixel are started from
the viewpoint, and successive scattering or intersection events are
generated. A single CUDA kernel execution evaluates the contri-
butions for all the pixels. We execute the kernel hundreds of times,
and then finally average the contribution of each light path to obtain
the result. The rendering times for these scenes are 225 min, 58 min
and 345 min on the GPU. Using a two-layered kd-tree described in
Section 4.2 resulted in 10 to 35% faster speedup than using separate
kd-trees for the object surfaces and the participating medium.
In the sky scene, the clouds are in a voxel-based representation and
is modeled based on a satellite image. The atmosphere is in a proce-
dural representation. We used physically-based optical coefficients
and phase functions to render the images. In the real world, the ex-
tinction coefficients of the clouds are about 102 to 103 times as large
as those of the atmosphere, thus the sky is highly inhomogeneous.
In Figures 1 and 7 right, global illumination effects, including mul-
tiple scattering inside the clouds and the atmosphere, the haze, and
shadows on the ground due to the clouds, are simulated.
5.4 Discussion and Applications
On voxelization. If the participating medium is not in a voxelized
representation, we need a temporal voxelized representation, e.g., a
uniform grid or an adaptive grid, during the space partitioning in
order to solve the largest empty rectangle problem. In each voxel,
the majorant extinction coefficient of the corresponding subspace
needs to be stored. As long as the majorant extinction coefficient
is any valid upper bound of the extinction coefficient (i.e., not nec-
essarily the least upper bound), the unbiasedness of our method is
guaranteed. A tighter bound leads to more efficient sampling. If the
Table 1: Scene statistics. Values in the style ‘x/y’ show ‘#ray/sec’
and ‘#average iterations’. depth and #leaf show the average depth
and the number of leaves of the kd-tree for the participating me-
dia. k and σ(k) show the average and standard deviation of the
extinction coefficient.
participating medium is in a procedural representation, in practice,
we can estimate an upper bound from the formulae of the procedu-
ral representation. Currently, the resolution is chosen by the user.
We recommend the use of as high resolutions as possible for better
performance in sampling.
On the heuristics. As a quantitative evaluation of our heuristic
approach, we prepared various volume data with two different res-
olutions, 83 and 163, and compared the computation time for the
free path sampling using the kd-trees built with our heuristic ap-
proach and with the optimal partitioning solution. Comparisons for
higher resolutions were not possible due to the prohibitive compu-
tation cost for the optimal solution. We found that use of the opti-
mal solution is more efficient in sampling than using the heuristic
approach, but the gain is only less than 10% on average.
Applications. Our unbiased free path sampling technique is a
common building block for typical rendering methods based on
Monte Carlo sampling. We would like to emphasize that our
method can be used with any algorithm, including photon mapping,
that must sample inhomogeneous media. The code for generating
scattering events can be replaced by our method for better accu-
racy and performance. Our method is also applicable to problems
in other fields: nuclear simulation in the nuclear science field, x-
ray simulation in the medical physics field, etc. Additionally, our
method can be used to accelerate unbiased computation of the trans-
mittance, which also uses Woodcock tracking [Raab et al. 2006].
6 Conclusions and Future Work
We have proposed a free path sampling technique to efficiently
find scattering events. Our method partitions the spatial domain
into partitions that adapt to the inhomogeneous distribution of the
medium, by solving the largest empty rectangle problem and using
the kd-tree to represent the partitioning. Our sampling technique
then samples the free path using the kd-tree in an unbiased manner.
We have conducted a case study to investigate the performance gain
of our method over previous methods, reporting one to two orders
of magnitude acceleration for highly inhomogeneous media. By
177:6        •        Y. Yue et al.
ACM Transactions on Graphics, Vol. 29, No. 6, Article 177, Publication date: December 2010.
D
es
kt
op
 R
ea
lit
y 
p
y
~B
ri
ng
in
g
yo
ur
ho
m
e
in
to
yo
ur
de
sk
to
p~
Br
in
gi
ng
 y
ou
r h
om
e 
in
to
 y
ou
r d
es
kt
op
Ca
m
er
a 
vi
ew
PC
 D
es
kt
op
???
G
oa
l
G
oa
l
•
Th
e 
go
al
 is
 to
 c
on
tr
ol
 v
ar
io
us
 h
om
e 
ap
pl
ia
nc
es
, 
no
t j
us
t r
ob
ot
s.
j
•
Ex
am
pl
es
 a
re
 s
pe
ak
er
, d
ig
ita
l p
ho
to
‐f
ra
m
e,
 T
V,
 
et
c
et
c.
•
Re
la
te
d 
w
or
k:
 C
RI
ST
A
L,
 u
‐P
ho
to
 (U
bi
co
m
p0
4)
 
(T
he
y 
do
 n
ot
 a
ch
ie
ve
 ti
gh
t i
nt
eg
ra
tio
n 
w
ith
 P
C 
de
sk
to
p)
de
sk
to
p)
Ba
si
c 
sc
en
ar
io
1
Cl
i
k
i
th
d
kt
2
R
f
ld
(
ith
b
k
d
h
t
)
1.
 C
lic
k 
ro
om
 ic
on
 o
n 
th
e 
de
sk
to
p
2.
 R
oo
m
 fo
ld
er
 (w
ith
 b
ac
kg
ro
un
d 
ph
ot
o)
ap
pe
ar
s
3.
 D
ra
g 
m
us
ic
 fi
le
 fr
om
 d
es
kt
op
 to
 s
pe
ak
er
 in
 th
e 
ph
ot
o
Ba
si
c
O
pe
ra
tio
ns
Ba
si
c 
O
pe
ra
tio
ns
•
D
ra
g‐
an
d‐
dr
op
 m
us
ic
 fi
le
 fr
om
 d
es
kt
op
 to
 
sp
ea
ke
r 
in
 th
e 
ro
om
 to
 p
la
y 
it.
 
•
D
ra
g‐
an
d‐
dr
op
im
ag
e 
fil
e 
fr
om
 d
es
kt
op
 to
 d
ig
ita
l 
ph
ot
o 
fr
am
e 
or
 T
V 
in
 th
e 
ro
om
 to
 s
ee
 it
.
p
•
D
ra
g‐
an
d‐
dr
op
ro
bo
t c
on
tr
ol
 s
cr
ip
t f
ile
 fr
om
 
de
sk
to
p
on
to
ro
bo
ti
n
th
e
ro
om
to
ru
n
it
de
sk
to
p 
on
to
 ro
bo
t i
n 
th
e 
ro
om
 to
 r
un
 it
. 
•
D
ra
g‐
an
d‐
dr
op
sp
ea
ke
r 
or
 p
ho
to
 fr
am
e 
fr
om
 th
e 
t
d
kt
t
t
h
t
t
Th
ro
om
 to
 y
ou
r 
de
sk
to
p 
to
 c
re
at
e 
a 
sh
or
tc
ut
. T
he
n 
yo
u 
ca
n 
dr
ag
 m
us
ic
 fi
le
s 
in
to
 th
e 
sh
or
tc
ut
.
Im
pl
em
en
ta
tio
n
Im
pl
em
en
ta
tio
n
1.
D
ev
el
op
 a
 d
es
kt
op
 a
pp
lic
at
io
n 
th
at
 s
up
po
rt
s 
dr
ag
 a
nd
 d
ro
p 
of
 fi
le
s.
g
p
2.
Co
nn
ec
t t
he
 a
pp
lic
at
io
n 
w
ith
 v
ar
io
us
 a
pp
lia
nc
es
, 
m
us
ic
pl
ay
er
di
gi
ta
lp
ho
to
fr
am
e
et
c
m
us
ic
 p
la
ye
r, 
di
gi
ta
l p
ho
to
 fr
am
e,
 e
tc
.
3.
D
ev
el
op
 ro
bo
t s
ys
te
m
 th
at
 w
or
ks
 a
cc
or
di
ng
 to
 
sc
ri
pt
 a
nd
 a
ls
o 
ca
n 
pr
in
t a
nd
 d
el
iv
er
 b
ar
co
de
s.
Re
la
te
d
W
or
k
Re
la
te
d 
W
or
k
•
Pi
ck
‐a
nd
‐d
ro
p 
U
IS
T 
19
97
‐>
Th
ey
br
in
g
in
fo
rm
at
io
n
sp
ac
e
in
to
th
e
re
al
> 
Th
ey
 b
ri
ng
 in
fo
rm
at
io
n 
sp
ac
e 
in
to
 th
e 
re
al
 
w
or
ld
, W
e 
br
in
g 
re
al
 w
or
ld
 in
to
 c
om
pu
te
 w
or
ld
.
•
M
ed
ia
Bl
oc
k,
 Ic
on
St
ic
ke
r, 
In
fo
Po
in
t
‐>
Th
ey
do
no
th
an
dl
e
ap
pl
ia
nc
e
co
nt
ro
la
nd
 T
he
y 
do
 n
ot
 h
an
dl
e 
ap
pl
ia
nc
e 
co
nt
ro
l a
nd
 
lo
ca
tio
ns
 in
 th
e 
re
al
 w
or
ld
.
99 年度專題研究計畫研究成果彙整表 
計畫主持人：陳炳宇 計畫編號：99-2221-E-002-016- 
計畫名稱：大氣與雲朵的擬真高速繪圖之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 3 100%  
博士生 1 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
