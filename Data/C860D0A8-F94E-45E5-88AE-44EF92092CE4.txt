 行政院國家科學委員會補助專題研究計畫 █ 成 果 報 告     □期中進度報告 
 
網頁注入攻擊弱點自動修護機制 
 
計畫類別：■個別型計畫   □整合型計畫 
計畫編號：NSC 99－2219－E－036－001－ 
執行期間：99 年 08 月 01 日至 100 年 07 月 31 日 
 
執行機構及系所：大同大學資訊工程學系 
 
計畫主持人：林金城 
共同主持人： 
計畫參與人員：Ms.張筑婷, Mr.許書豪, Mr.胡廷瑋 
 
 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  ■完整報告 
 
本計畫除繳交成果報告外，另須繳交以下出國心得報告： 
■出席國際學術會議心得報告 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，□一年■二年後可公開查詢 
 
中華民國 100 年 10 月 31 日 
 
 
ABSTRACT 
 
As the popularity of the web increases and web applications become tools of everyday use, 
the role of web security has been gaining importance as well. The last years have shown a 
significant increase in the number of web-based attacks. Too many nouns web application security 
vulnerabilities result from generic input validation problems. Examples of such vulnerabilities are 
SQL injection and Cross-Site Scripting (XSS). Although the majority of web vulnerabilities are 
easy to understand and to avoid, many web developers are, unfortunately, not security-aware. As 
a result, there exist many web sites on the Internet that are vulnerable. This paper implemented 
an automated vulnerability scanner that for the injection attacks. To this end, we implemented a 
system that automated scanned the injection attack vulnerabilities. Our system was automatically 
analyses web sites with the aim of finding exploitable SQL injection and XSS vulnerabilities. It 
was able to find many potentially vulnerable web sites. We picked 7 identified web sites with 
vulnerabilities from National Vulnerability Database to verify our system. 
 
Keywords: SQL-Injection, XSS; Complete Crawling; Security Scanner; Web Application Testing; 
Black-Box Testing. 
 
Besides the above classic XSS where the payload moves to the server and back, there is another form of user agent 
injection attacks, which does not depend on the payload to be embedded in the response, but rather on the payload in the 
Document Object Model (DOM) . [10] 
 
B. Black-box testing [4] 
 
Many web application security vulnerabilities result from generic input validation problems. Examples of such 
vulnerabilities are SQL injection and Cross-Site Scripting (XSS). Although the majority of web vulnerabilities are easy to 
understand and to avoid, many web developers are, unfortunately, not security-aware. As a result, there exist a large number of 
vulnerable applications and web sites on the web.  
 
There are two main approaches to testing software applications for the presence of bugs and vulnerabilities: 
• In white-box testing, the source code of the application is analyzed in an attempt to track down defective or vulnerable 
lines of code. This operation is often integrated into the development process by creating add-on tools for common 
development environments. 
• In black-box testing, the source code is not examined directly. Instead, special input test cases are generated and sent to 
the application. Then, the results returned by the application are analyzed for unexpected behavior that indicates errors 
or vulnerabilities. 
 
So far, white-box testing has not experienced widespread use for finding security flaws in web applications. An important 
reason is the limited detection capability of white-box analysis tools, in particular due to heterogeneous programming 
environments and the complexity of applications that incorporate database, business logic, and user interface components. In 
practice, black-box vulnerability scanners are used to discover security problems in web applications. These tools operate by 
launching attacks against an application and observing its response to these attacks. 
 
C. Crawling [7] 
 
Raghavan proposed a model of a hidden Web crawler consists of the four components described below. 
 
1) Internal Form Representation.  
On receiving a form page, the internal representation of a form F includes the following pieces of information: 
F=({E1,E2,...,En},S,M}), where {E1,E2,…,En}          (1) 
F is the form, S is the submission information associated with the form (e.g., submission URL, internal identifiers for each 
form element, etc.), and M is meta-information about the form (e.g., URL of the formpage, web-site hosting the form, etc.). 
For example, Fig. 1 shows a form with three elements.  
 
2) Matching function 
A crawler’s matching algorithm, Match, takes as input, an internal form representation, and the current contents of the 
database D. It produces as output, a set of value assignments. Formally:  
Match(({E1, ..., En}, S, M), D)={[E1 ← v1, ..., En ← vn]}  (2) 
A value assignment {[E1 ← v1, ..., En ← vn]} associates value vi with form element Ei . 
 
Figure 1. Crawler form interaction 
So we execute the injection test with single injection and multiple injection, as the Fig. 6 indicates. 
 
We use Nikto [16] and N-Stealth [18] to scan web site, and record their query string to use for our injection test. It seems 
reasonable to suppose that use the test pattern of the top scanner in the real world. The results are presented in 
 
 
 
Figure 2. System architecture 
 
 
Figure 3. A algorithm for Injection point analysis 
 
Pv ← pi , if  Match(ri, ei),  for I = 1 → n             (6) 
Fig. 7 shows our algorithm for Injection Test and Web-App Response analysis.  
 
TABLE I. THE TESTING DATASET 
Pattern type # Queries 
SQL attack 143 
XSS attack 1060 
Other attack 2988 
Normal 10 
Total 4201 
 
 
TABLE II. THE SAMPLE OF DATASET 
Pattern 
# Pattern Pattern type
1 OR username IS NOT NULL OR username = ' SQL attack 
2 ; and 1=1 and 1=2 SQL attack 
3 name=<script>alert('Vulnerable')</script> XSS attack 
4 name=<script>alert(document.cookie)</script> XSS attack 
5 editor_insert_bottom=http://attack/nstalker Other attack 
6 James@ttu.edu.tw Normal 
 
TABLE III. SAMPLE FOR THE RULE LIST OF INJECTION TESTING 
Rule # Site # Pattern # Threat type Expected response
1 1 1 SQL injection Log In 
2 1 2 SQL injection Log In 
3 1 3 SQL injection Log In 
…. 
12 4 3 XSS error 
 
 
 
 
Figure 7. A algorithm for Injection Test and Web-App Response analysis 
CVE-2009-3716 MCshoutbox 1.1 
Threat type: XSS 
CVE-2010-1742 Scratcher N/A 
 
 
Table VI. An vulnerable injection point list for experimental Web 
site 
Vulnerable 
injection point # URL Parameter Threat type 
1 login.php acc SQL injection 
2 login.php pwd SQL injection 
3 login.php login SQL injection 
4 bbs.php name XSS 
5 bbs.php title XSS 
6 bbs.php body XSS 
7 bbs.php post none 
8 res.php name XSS 
9 res.php title XSS 
10 res.php body XSS 
11 res.php res none 
 
 
 
 
Table VII. The comparison between manual and automated testing result for experimental program 
Detection type pages # Injection points # Vulnerability point # Vulnerable page #  Flaw type # 
Manual  13 47 36 bbs.php, res.php, login.php SQL injection/XSS 
Automated 13 47 36 bbs.php, res.php, login.php SQL injection/XSS 
 
Table VIII.  The experimental result of the experimental Web site 
Injection 
point # 
Parent 
URL URL 
Para
meter
Method Target Threat 
type 
1 bbs.php login.php acc POST login.php SQL 
2 bbs.php login.php pwd POST login.php SQL 
3 bbs.php login.php login POST login.php SQL 
4 bbs.php bbs.php name POST bbs.php XSS 
5 bbs.php bbs.php title POST bbs.php XSS 
6 bbs.php bbs.php body POST bbs.php XSS 
7 bbs.php bbs.php post POST bbs.php none 
8 res.php res.php?rid=1 name POST bbs.php XSS 
9 res.php res.php?rid=1 title POST bbs.php XSS 
10 res.php res.php?rid=1 body POST bbs.php XSS 
... ... ... 
44 res.php res.php?rid=10 name POST bbs.php XSS 
45 res.php res.php?rid=10 title POST bbs.php XSS 
46 res.php res.php?rid=10 body POST bbs.php XSS 
47 res.php res.php?rid=10 res POST bbs.php XSS 
 
 
Table IX. An injection point list for experimental Web site 
Injection point # URL Parameter Threat type False positive False negative 
1 login.php acc SQL 0 0 
2 login.php pwd SQL 0 0 
3 login.php login SQL 0 0 
4 bbs.php name XSS 0 0 
5 bbs.php title XSS 0 0 
6 bbs.php body XSS 0 0 
7 bbs.php post none 0 0 
8 res.php name XSS 0 0 
9 res.php title XSS 0 0 
10 res.php body XSS 0 0 
11 res.php res none 0 0 
 
 
Table X. Summary of system training and detection experiment 
Table V. The detail description  
about the testing result of some CVE_exploits 
Program  pages # 
Injection 
 points # 
Vulnerabil
ity point # 
Vulnerable 
page 
Flaw 
type # 
Experimen 
program 13 47 36 bbs.php 
SQL  
/XSS 
CVE-2010-
0122 72 324 5 
add_user.ph
p 
SQL 
injection
CVE-2009-
4669 748 2947 2 Login.php 
SQL 
injection
CVE-2008-
2488 748 2947 4 
userform.ph
p 
SQL 
injection
CVE-2009-
4595 30 22 2 index.php 
SQL 
injection
CVE-2010-
1742 13 15 1 
projects.ph
p XSS 
CVE-2009-
4456 9 10 1 
news_detail
.php 
SQL 
injection
CVE-2009-
3716 7 8 2 
admin_logi
n.php 
SQL 
injection
[11] MeiJunjin, “An approach for SQL injection vulnerability detection”, Information Technology: New Generations, 2009. ITNG '09. Sixth International 
Conference on 27-29 April 2009 
[12] cURL Library, http://www.php.net/manual/en/book.curl.php, visit on Jun 2010. 
[13] National Vulnerability Database, http://nvd.nist.gov/, visit on Jun 2010. 
[14] Top 10 Web Vulnerability Scanners, http://sectools.org/web-scanners.html visit on Jun 2010. 
[15] OWASP, “A Guide to Building Secure Web Applications: The Open Web Application Security Project”, 2002 
[16] Nikto of CIRT, http://www.cirt.net/nikto2, visit on Jun 2010. 
[17] Nessus of Tenable, http://www.nessus.org/nessus/, visit on Jun 2010. 
[18] N-Stealth Security Scanner, http://www.nstalker.com/, visit on Jun 2010. 
[19] Paros of Chinotec Technologies Company., http://www.parosproxy.org/, visit on Jun 2010. 
[20] AppScan of IBM Software, http://www-01.ibm.com/software/awdtools/appscan/, visit on Jun 2008. 
[21] Acunetix of Acunetix Ltd, http://www.acunetix.com/, visit on Jun 2009. 
 
 
表 Y04 
此參加者不多. 大會主席 Prof. Naymjav Jambaljav 安排了兩部車共九個人, 先去參觀Chinggis 
Khaan 營區, 然後參觀 Terelj national park 內的古修道廟和烏龜石, 回到 Ulaanbaatar 時已經
很晚了.  
  
本人的論文被安排在第三天上午的 Session B報告，論文題目是 An ARP Query Schema to 
Protect Against ARP Spoofing 一個防止 ARP Spoofing 攻擊的 ARP 查詢機制，這是一篇有關
internet 中 ARP attack 的論文，討論在現有 internet 環境下如何避免 ARP spoofing 的攻
擊。本人論文在會場報告時, 其研究方向與做法引起與會學者濃厚的興趣與廣泛的討論，有
三位學者專家提問，本人亦針對本項研究對防禦 ARP spoofing attack 的有效性及其效率問
題作即席的答覆，並與提問者於會後互換名片，以備日後透過 email 互相討論。 
 
第三天下午的 session C 和 session D 則安排了十二篇論文報告,由於這些論文都屬於
computing Techniques 方面的論文, 和本人的論文領域較無相關, 因此雖然依規定去參加, 
但皆未發問.  
 
第四天上午安排為 post papers and discussion, 參觀 post papers和自由交談討論, 下午則安
排為參觀蒙古國國慶日遊行. 
 
最後一天 2011/07/12 在參觀烏蘭巴托 Ulaanbaatar 的景點之後, 搭機經北京飛返台灣. 
 
二、與會心得 
 
本次 2011 國際計算和安全學術研討會 2011 International Conference on Computing and 
Security (ICCS 2011), 是一個小型的探討電腦計算科技與安全技術的國際學術研討會，本次共
約有五十餘人參加。它是針對世界各地的研究人員、科學家及工程師，提供一個國際學術交
流的場合，以交換在電腦計算科技與安全技術方面之學術研究與工業實務設計製作方面的技
術經驗。 
 
參加此一研討會的一個收穫是與與會學者專家的面對面交談, 互相討論彼此的觀點與研
究成果，這方面的收穫特別多。例如本人即與多位參加的專家學者討論了電腦網路安全和程
式測試技術的問題，並相約日後在 email 上繼續討論。本人與這些專家學者在會場上的討論
與交換研究心得，是此行的最大收穫。 
 
三、考察參觀活動 (無是項活動者省略) 
 
無 
 
四、建議 
 
無 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                          100 年 07 月 23 日 
報告人姓名 林金城    
Jin-Cherng Lin 
服務機構 
及職稱 
大同大學資訊工程系所 
副教授 
會議時間     
地點 
自 100年 07月 16日至 17日 
Kota Kinabalu, Malaysia 馬來西亞亞庇市 
本會核定 
補助文號 
專題研究計畫 
NSC 99-2219-E-036 -001 
會議 
名稱 
2011 年計算機科學與社會國際學術研討會 
2011 International Symposium on Computer Science and Society (ISCCS 2011) 
發表論文 
題目 
使用基因演算法預估軟體工作量 
Research on Software Effort Estimation Combined with Genetic Algorithm and Support Vector Regression 
 
報告內容應包括下列各項： 
 
一、參加會議經過 
 
2011 年計算機科學與社會國際學術研討會 2011 International Symposium on Computer Science 
and Society (ISCCS 2011), 是由 University of Malaya, Malaysia 和 Hong Kong Education Society, 
China 聯合主辦，選在 Kota Kinabalu, Malaysia 馬來西亞亞庇市舉行。本次會議會期兩天, 共
有 108 篇論文參與發表, 總共約有 100 位來自世界各國的教授學者及科學家參加。 
 
本人於100年07月15日經香港抵達亞庇市，隨即入住大會的 conference venue hotel, Best 
Western Kinabalu Daya hotel，當晚在飯店準備隔日的論文報告。隔日一早直接抵達會場 (11F 
Conference Room) 報到。隨即參加第一個 oral session 1，並發表論文一篇。午餐後，聽了兩
場 oral sessions。晚上參加 Conference Welcome Banquet。 
  
    本人的論文被安排在第一天上午的 oral session 1 中報告，論文題目是 ”使用基因演算法
預估軟體工作量”Research on Software Effort Estimation Combined with Genetic Algorithm and 
Support Vector Regression，這是一篇有關使用計算智慧 computing intelligence 去預估軟體工作
量的研究論文，討論如何使用計算智慧的新方法去改善傳統軟體工作量使用專家預估方式的
缺失, 以求得更準確的預估數據。本人論文在會場報告時, 其研究方向與做法引起與會者濃厚
的興趣與廣泛的討論，有兩位學者專家提問，本人亦針對本項研究對軟體工作量預估的有效
性及其效率問題作即席的答覆，並與提問者於會後互換名片，以備日後透過 email 互相討論。 
 
第二天為 oral sessions 論文報告和 free discussion，同時有 post papers 展示。本人於會
議後續留亞庇市參觀一天, 並於 2011/07/19 晨搭機經香港返國.  
附
件
三
 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/07/25
國科會補助計畫
計畫名稱: 網頁注入攻擊弱點自動修護機制
計畫主持人: 林金城
計畫編號: 99-2219-E-036-001- 學門領域: 應用服務(網通國家型)
無研發成果推廣資料
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
技術創新: 我們研發的系統比現行使用單一規則的黑白名單方法更佳的誤判率
及更佳或同等的漏判率。此研究成果可有效解決現行大量弱點程式無人修復的
窘境，可有效提升資訊安全，研究成果可與廠商現行技術相結合。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
