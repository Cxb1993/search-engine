1Bandwidth-aware Loss Discrimination for Rate Adaptive
Video Streaming∗∗
Yu-Chen Huang1,2, Chun-Shien Lu1,∗, and Hsiao-Kuang Wu2
1Institute of Information Science, Academia Sinica, Taipei, Taiwan, ROC
2Dept. Computer Sci. & Information Eng., National Central Uni., Chung-Li, Taiwan, ROC
Abstract— Measurement of end-to-end available bandwidth
has received considerable attention due to its potential use in
improving QoS over heterogeneous networks. Available band-
width enables the sending rate adaptive to network conditions,
so that packet loss, caused by congestion, can be significantly
reduced before error control mechanisms are finally employed.
To this end, we propose a new available bandwidth estimation
scheme, called JitterPath, which is adaptive to both the fluid
and bursty traffic models. We further exploit the process of
JitterPath to distinguish congestion loss from random loss and
then achieve adaptive rate control when congestion is detected.
The contributions of our method include: (1) JitterPath can
work without being restricted to fluid traffic models; (2) since
JitterPath does not directly use the bottleneck link capacity to
calculate the available bandwidth, it is feasible for use in a
multi-hop environment with a single bottleneck; (3) JitterPath
inherently reduces the impact of probing noises under the bursty
cross traffic model; (4) bandwidth-aware loss discrimination
rate control. Extensive simulations, Internet experiments, and
comparisons with other methods were conducted to verify the
effectiveness of our method under both single-hop and multi-
hop environments.
keywords: Available bandwidth, Congestion, One-Way-Delay jit-
ter, Probing, QoS, Rate control, Video streaming
I. INTRODUCTION
A. Background
For multimedia transmission over a network, bandwidth is a
key factor that affects the packet loss rate, which may be severe
if the sending rate is not adaptively adjusted according to the
network conditions. In order to exploit network bandwidth effi-
ciently, multimedia data (e.g., video) needs to be compressed
in advance before transmission. However, when packet loss
occurs, reference errors that occur during decoding will be
propagated, further degrading the quality of the decoded data.
In order to enable decoded video to be displayed with uniform
quality, the network needs to provide quality-of-service (QoS)
[30] for video transmission. In this paper, we shall focus
on available bandwidth estimation, which is the basis for
congestion control and adaptive rate adjustment.
In the literature, numerous approaches have been presented
for estimating network bandwidth. In [3], Dutta and Zhang
improved the current Internet infrastructure so as to support
different kinds of QoS in core networks. However, their
method undesirably changes the intermediate nodes of a net-
work; thus, scalability is lost. In [15], [16], [23], [30], methods
**This research was supported by the National Science Council under
NSC grants 93-2213-E-001-026 and 94-2213-E-001-027. Partial results of
this study were published in [10].
*Contact author (lcs@iis.sinica.edu.tw)
were proposed for adjusting the transmission rate according to
the current network conditions. Their common characteristic
is that a scalable video coding scheme is incorporated with
a network behavior monitor. The key to these solutions lies
in the methods used to reliably detect network conditions,
where congestion plays a crucial role. Traditional transport
protocols (e.g., TCP), however, are still insufficient for dealing
with congestion because they need an indication of the packet
loss to adjust the sending rate in a blind manner such that
video transmission with stable quality cannot be guaranteed.
For this reason, the user datagram protocol (UDP) and an
additional congestion control mechanism are usually combined
to facilitate video transmission.
In order to deal with congestion, loss has been recognized
to not a sufficient factor. On the contrary, our method is
presented based on the fact that bandwidth is a critical factor
reflecting the dynamic conditions of networks. Our idea is
also supported by the findings that (1) the aggregated TCP
throughput is stationary, and the individual TCP rate varies
by less than a factor of hours [7], [32]; (2) intermediate
nodes on the Internet are often stable, and the routing paths
of flows remain unchanged for a long period of hours or
days [7], [22]. The above facts indicate that available stable
bandwidth exists and can be used to predict the future behavior
of a propagation path over the Internet. In addition, available
bandwidth can be used to improve the performance of a
network. For example, Hu and Steenkiste proposed using
PaSt [6] to set the slow-start threshold and Pathneck [8] to
detect the location of a bottleneck based on active estimation
of the available bandwidth so that the bandwidth could be
sufficiently utilized, while Ribeiro et al. [26] proposed locating
available bandwidth bottlenecks through available bandwidth
estimation.
Active probing has been found to be useful for discovering
network conditions, including available bandwidth. In [13],
Keshav proposed using a new idea, called the “packet pair,”
to estimate the capacity of a bottleneck link (or narrow link),
which is defined as the minimum capacity among the links
between the sender and the receiver. However, the capacity
of a bottleneck link is not really significant enough to affect
network conditions. On the other hand, available bandwidth
[5], [27], which is determined from all the links as the
minimum bandwidth that has not been used [11], has been
recognized as the most important factor. Formally, the link
with minimum available bandwidth is referred to as tight link,
which is the bottleneck of an underlying propagation path.
Thus, it is known that a bottleneck link is not necessarily a
3Finally, concluding remarks are made in Sec. VII.
II. PROBLEM DESCRIPTION AND OUR SOLUTION
From a review of the literature, we find that the main
drawback of the PRM-based methods is that the accuracy in
determining the OWD increasing trend strongly depends on
the nature of the fluid cross traffic model. Unfortunately, TCP
is inherently bursty instead of fluid so the OWD increasing
trend does not suffice to represent the relationship between
the probing rate and available bandwidth (Eq. (1)), especially
when the cross traffic rate varies during measurement.
In view of this fact, the restriction of using fluid traffic
only is removed in our method. In addition, the common
belief that the OWD decreasing trend is useless for estimating
the available bandwidth is also ignored in this study. On the
contrary, we find that it indeed provides useful information
for indicating the relationship between the probing rate and
available bandwidth. On the other hand, we also show in Eq.
(1) that only one-way delay jitter is employed to infer the
relationship between the probing rate and available bandwidth
in the PRM-based methods. As we will show later, this is not
sufficient.
The PGM-based methods typically assume the use of the
fluid cross traffic model since it can judge that the expanded
output gaps are filled with cross traffic, while the reduced
output gaps are only caused by previously expanded output.
In addition, the PGM-based methods rely on the use of the
bottleneck link capacity to directly calculate the available
bandwidth. Thus, accurate estimation of the bottleneck link
capacity is indispensable. In our method, the bottleneck link
capacity is only employed to approximately set the upper
bound of the available bandwidth during the process of iter-
ative approximation in available bandwidth estimation. Thus,
the BC mainly affects the convergence time instead of the
accuracy in our method.
To address the aforementioned problems, we propose a new
queuing region determination technique based on one-way
delay jitter and queuing delay, where sufficient information
is collected to infer the relationship between the probing
rate and available bandwidth, i.e., bottleneck utilization. One
advantage is that only information about the queuing status of
the bottleneck is collected no matter where the bottleneck is
located. Another advantage is that the proposed queuing delay
propagation model can efficiently eliminate the probing noise
caused by bursty traffic, our method is not limited to the fluid
traffic model.
III. THE PROPOSED METHOD, JITTERPATH, BASED ON
THE FLUID TRAFFIC MODEL
The proposed method based on the fluid cross traffic model,
in which no probing noise exists and the packet pairs of
the same packet train operate in the same queuing region,
will be presented in this section. In Sec. III-A, a strategy
for queuing delay propagation model (QDPM)-based queuing
region determination will be presented. In Sec. III-B, we will
exploit the types of queuing regions and the magnitude rela-
tionship between the total output gaps accumulated in JQRs
and the total input gaps to investigate the relationship between
the probing rate and available bandwidth. Then, in III-C, we
will describe an iterative probing rate adjustment strategy,
where the updated probing rate can gradually approximate the
available bandwidth.
A. Queuing Delay Propagation Model (QDPM)-based Queu-
ing Region Determination
Here, a packet train is composed of several back-by-back
packet pairs, and the time interval within a packet pair is called
the “probing gap.” In other words, the “input probing gap” is
defined as the inter-departure time of a packet pair sent from
the sender, while the “output probing gap” is defined as the
inter-arrival time of a packet pair reaching the receiver. The
output probing gap may be different from its corresponding
input probing gap because the sent packet train may be affected
by cross traffic since the time interval within a packet pair is
either compressed or expanded.
The utilization of the bottleneck router during the inter-
arrival time of a packet pair is expressed by two different
queuing regions (QRs) [5]: a joint queuing region (JQR) and
a disjoint queuing region (DQR). Below, a more accurate QR
determination method is described.
1) Queuing Region Determination: A probing packet train
is composed of n packet pairs. Let PP ij (1 ≤ i ≤ n), which
is composed of consecutive probing packets P i−1j and P ij ,
denote the i-th packet pair in the j-th packet train, whose
inter-departure time is denoted by Δj,in. Let QRij denote the
queuing region in which PP ij operates. If PP ij is defined
as operating in a JQR, then the bottleneck router does not
finish the following three tasks before the arrival of P ij :
processing the queued traffic (let Qi−1j denote the sum of the
queued traffic and undelivered packets when P i−1j arrives at
the router), processing P i−1j (let s be the constant packet size),
and processing the cross traffic inserted within this packet pair
PP ij (let CT ij denote the amount of cross traffic arriving at the
bottleneck during the inter-arrival time of PP ij ). These tasks
can be related to each other as follows:
(
Qi−1j + s + CT
i
j
TC
) > Δj,in, if QRij is a JQR, (2)
where TC denotes the capacity of a tight link. Based on the
definition of a JQR, the inter-arrival time of a packet pair PP ij
measured at the receiver side is s+CT
i
j
TC , which is the output
gap, Δij,out. In addition, let Qi−1j /TC be denoted as D
i−1
j ,
representing the queuing delay that accumulates before packet
P i−1j . Thus, Eq. (2) can be rewritten as
Δij,out > (Δj,in −Di−1j ), if QRij is a JQR. (3)
Eq. (3) can be further rewritten as follows:
ΔOWDij + D
i−1
j > 0, if QR
i
j is a JQR, (4)
where ΔOWDij = Δij,out−Δj,in. In fact, Eq. (4) shows what
can be derived if a packet pair operates in a JQR.
In practice, in order to determine the queuing region type
of a packet pair, what the receiver needs based on Eq. (4)
is the OWD jitter and the accumulated queuing delay. In
5Sec. IV-A, iterative approximation also facilitates elimination
of probing noise. Given the probing rate R j of the j-th packet
train and the obtained CTRj , the next probing rate can be
determined as follows:
Rmin = Rj , if CTRj > 1,
Rmax = Rj , if CTRj ≤ 1,
Rj+1 = (Rmin + Rmax)/2,
where Rmin denotes the upper bound of Avbw and Rmax
denotes the lower bound of Avbw. We recommend that Rmin
be set to the upper bound of the available bandwidth, which
is equal to the capacity of the bottleneck link, and that Rmax
be set to the lower bound of the available bandwidth, which
is, ideally, zero. It should be noted that Rmin is merely
used to bound the maximum value of Avbw. If Rmin is
arbitrarily set to a large value or a known link’s capacity (e.g.,
first output link capacity), the convergence time for available
bandwidth estimation will become longer. On the other hand,
the bottleneck link capacity can be estimated by means of
available methods, such as pathrate [2] and Nettimer [14].
The above probing rate adjustment procedure stops if
|Rmin −Rmax| < γ holds such that the degree of fluctuation
of the available bandwidth is bound to γ, which is called the
“estimation resolution.” When the stop condition is satisfied,
Rmax is adopted as the estimated available bandwidth. In
addition, Rmin is adopted as the next initial probing rate when
the available bandwidth procedure restarts.
IV. THE PROPOSED METHOD, JITTERPATH, UNDER THE
BURSTY TRAFFIC MODEL
In this section, we will discuss the proposed method un-
der the bursty traffic model. When bursty cross traffic is
encountered, the output probing gaps, even those carrying
useful information for measuring the cross traffic rate, are
contaminated with probing noises, which are defined as gaps
that are not occupied by traffic. An example of probing noise is
illustrated in Fig. 1, where the aggregated traffic’s rate for the
two scenarios is larger than the bottleneck capacity. Therefore,
a bottleneck will be congested during the inter-arrival time of
a packet pair. However, a bottleneck in the second scenario
will not be congested due to the appearance of probing noise.
Liu et al. [18] first pointed out that probing noise is caused by
the superposition of incoming probing and cross traffic even if
the probing rate is larger than the available bandwidth. Let the
probing noise be denoted by I˜iΔj,in . The following relationship
can be established [18]:
Δij,out =
CT ij
TC
+
s
TC
+ I˜iΔj,in . (12)
The probing noise, I˜iΔj,in , is the key reason for inaccurate
measurement of the cross traffic rate with the PGM-based
methods, which exploit the relationship between the output gap
and input gap. Since the PGM methods exploit the condition
where Δij,out = Δj,in holds to infer the available bandwidth,
Eq. (12) can be rewritten as
TC − ( CT
i
Δj,in
+ Rj) =
I˜iΔj,in × TC
Δj,in
. (13)
In Eq. (13), if the probing rate, Rj , is equal to the available
bandwidth and if the cross traffic exactly fills the gap within
the packet pair PP ij (where the queuing region of PP ij is a
JQR), then the probing noise I˜iΔj,in must be zero. In addition,
if the cross traffic does not completely fill the gap within
PP ij but creates a false phenomenon such that Δ ij,out = Δj,in
(where the queuing region of PP ij is a DQR), then probing
noise exists. Under these circumstances, we can define the
rules for queuing region determination under the bursty cross
traffic model as follows:
QRij is JQR, if I˜iΔj,in = 0;
QRij is DQR, if 0 < I˜iΔj,in ≤ Δj,in.
(14)
In order to reduce the impact of probing noise on queuing
region determination, we eliminate the probing noise by means
of our queuing delay propagation model, as discussed in the
next subsection.
A. Eliminating Probing Noise
In [18], Liu et al. investigated the quantification of probing
noise, I˜iΔj,in , which is determined by the injected probing
packets and accumulated queuing delay as follows:
I˜iΔj,in = max(0, I
i
Δj,in −
s
TC
−Di−1j ), (15)
where I iΔj,in is the idle period during which no probing
traffic data is serviced, and 0 ≤ I iΔj,in ≤ Δj,in. However,
they focused on probing-based single hop analysis without
presenting a probing noise-resilient available bandwidth esti-
mation method. In the following, we shall analyze two cases
to show that the probing noise can be effectively eliminated
by means of our queuing region determination strategy. It
should be noted that both cases discussed below involve
interference caused by probing noises such that a queuing
region is erroneously determined as a JQR, while it is actually
a DQR.
In the first case, ΔOWDij < 0. In addition, we assume
that ΔOWDij +D
i−1
j > 0 holds so that the queuing region of
PP ij is determined as a JQR based on Eq. (5), and D ij < Di−1j
can be derived based on Eq. (6). If probing noise continues
to exist, then a sequence of decreasing queuing delays can be
built. When the decreasing queuing delay sequence converges
to zero, i.e., Dkj = 0 (for k > i), our method can accurately
determine that packet pair PP k+1 is a DQR based on Eq. (5)
since ΔOWDk+1j + Dkj < 0. Therefore, the negative impact
of probing noise can finally be eliminated.
In the second case, ΔOWDij > 0. Again, we assume that
ΔOWDij+D
i−1
j > 0 holds so that the queuing region of PP ij
is determined as a JQR. Based on Eq. (6), we can obtain D ij >
Di−1j . If probing noise continues to exist, then a sequence of
increasing queuing delays can be built. In this situation, we
can see from Eq. (15) that probing noise I˜kΔj,in (for k > i) can
be eliminated when the queuing delay Dk−1j is larger enough
to make IkΔj,in <
s
TC + D
k−1
j .
We have found that our queuing delay propagation model is
inherently able to stop or eliminate probing noises. Simulation
results will be presented later to confirm our analysis that
7Substituting k = 0 into Eq. (20), we can derive the maximum
̂j as follows:
̂j =
∑n
i=1 Δ
i
j,out
n×Δj,in −
TC + τ
2TC
. (21)
In order to reduce the effect of probing noise, the sender
needs to use an additional probing rate ω̂j , to capture the un-
captured traffic, which is composed of probing and cross traffic
in those m− k packet pairs operating in DQRs. This implies
that our goal is to exhaust the unused bandwidth, such that the
aggregated traffic will fill the gaps between packet pairs. To
this end, the amount of un-captured traffic is first calculated
as (m− k)×Δj,in× (Rj +λ− τ). Then, we further consider
that the probing rate is equal to the available bandwidth, i.e.,
Rj = TC − λ, the aim being to consider the bursty cross
traffic with the largest rate. Thus, the un-captured traffic is
(m− k)×Δj,in × (TC − τ). To achieve maximum capture,
k = 0 is set in order to obtain the maximum un-captured
traffic, m × Δj,in × (TC − τ). In addition, the amount of
additionally probed traffic is 2m × Δj,in × ω̂j . To achieve
effective capture, the following condition must be guaranteed:
2m×Δj,in×ω̂j = m×Δj,in×(TC−τ), i.e., ω̂j = TC − τ2 .(22)
Given Eqs. (21) and (22), the relationship between ω̂ j and ̂j
can be derived as
ω̂j = TC × (̂j + 1−
∑n
i=1 Δ
i
j,out
n×Δj,in ). (23)
However, the tight-link capacity in Eq. (23) is unknown, thus,
we use BC derived in [2], [14] to approximate TC in our
method.
D. Probing Rate Adjustment in the Ambiguous Region
When CTRj falls between 1 − j and 1, both Rmin and
Rmax are kept unchanged and the next probing rate R j+1
is adjusted based on the derived ω̂j as Rj+1 = min{Rj +
ω̂j , Rmin}. After this kind of adjustment, once the next value
of CTR does not fall within the ambiguous region, Eq. (19) is
used again. Otherwise, after α additional probing we need to
check the relationship between Rj+α and Rmin. If they are
close to each other enough, the probing procedure stops.
V. ADAPTIVE RATE CONTROL BASED ON
BANDWIDTH-AWARE LOSS DISCRIMINATION
In this paper, we propose to perform adaptive rate control
during the process of available bandwidth estimation. As
described in the previous sections, CTR is used to indicate
the relationship between probing rate and available bandwidth.
When probing rate is larger than available bandwidth, a
congestion signal is detected. Otherwise, a non-congestion
signal is detected so that if packet loss occurs, then it is a
random (wireless) loss. This is so-called bandwidth-aware loss
discrimination. For congestion loss, TCP friendly rate control
(TFRC) mechanism is employed to obtain the new sending
rate.
VI. SIMULATION AND REAL-NETWORK RESULTS
A. Available Bandwidth Estimation
In order to demonstrate the performance of our method,
several simulations using ns2 [20] were conducted based on
two different network models. Our method was also compared
with PathChirp [25] and IGI [5], which are, respectively,
typical PRM- and PGM-based mechanisms, in terms of the
accuracy of available bandwidth estimation. Moreover, this
choice is also based on the fact that PathChirp [25] has been
shown to perform better than Pathload [12]. In this study,
three different types of cross traffic, that is, constant bit-
rate (CBR) traffic, FTP traffic, and Poisson traffic, were used
for performance evaluation. Among them, CBR traffic, which
approximates the fluid traffic model, is the least bursty traffic,
FTP traffic is the most common traffic on the Internet, and
cross traffic with a Poisson distribution was adopted here to
emulate bursty and memoryless traffic. The default parameters
used in ns2 were set for cross traffic except that the packet
size was fixed at 1000 bytes.
In JitterPath, the value of γ was fixed at 200Kbps. The initial
value of ̂j is set to be γBC . The probing rate was initially set
to half of the bottleneck link capacity that can be estimated
using the methods [2], [14], and its variation during available
bandwidth measurement is plotted using dash-dot curves in
the figures shown below. For IGI, we adopted a packet train
composed of 60 packet pairs (i.e., n = 60), and the size of
each packet was 700 bytes, as suggested in [5], so that the best
results could be obtained. For pathchirp, we adopted a packet
train with a packet size of 700 bytes. In our method, the setting
is kept the same as in IGI to make a fair comparison.
In addition to extensive simulations reported below, Internet
experiments [10] were also conducted to further confirm the
performance achievable with our method.
1) Available Bandwidth in Single-Hop Network Environ-
ments: The first network topology, as shown in Fig. 2,
specifies a single-hop environment, where Ps and Pr denote,
respectively, the sender and receiver in the end-to-end probing
path, and Cs and Cr denote, respectively, the sender and
receiver in the cross traffic transmission path. Three different
kinds of cross traffic were, respectively, used to evaluate
available bandwidth estimation. In the first scenario, the cross
traffic contained CBR traffic only, which implied that the cross
traffic rate was stable. In the second scenario, the cross traffic
was composed of FTP traffic only. In this case, we added the
first FTP flow at the beginning of network transmission and
added a new FTP flow from Cs to Cr every 25 seconds. In the
third scenario, the cross traffic was a Poisson distribution with
a rate of 8Mps, a bursty period of 5ms, and an idle period of
10ms.
The results of available bandwidth estimation obtained using
our method, IGI, and PathChirp are, respectively, obtained
for the above three scenarios. The difference between the
estimated bandwidth and true available bandwidth was cal-
culated in terms of the Mean Square Error (MSE). All the
numerical results are depicted in Table II for comparison
purposes. We can observe from this table that our method
always obtained measurements with minimal errors. When the
9TABLE IV
COMPARISON AMONG JITTERPATH, IGI, AND PATHCHIRP WITH THE PATH
PERSISTENT MODEL IN TERMS OF MSE.
Method JitterPath IGI PathChirp
CBR 0.149273 0.564788 0.453189
CBR+FTP 0.518683 1.056713 0.567474
CBR+Poisson 0.416943 0.611006 0.727283
Westwood [29] in terms of the preservation of throughput
when random loss occurred. Again, three different types of
cross traffic, that is, constant bit-rate (CBR) traffic, FTP traffic,
and Poisson traffic, were used in the simulation. At present,
we used a single-hop network model (Fig. 5) with the wireless
link being the bottleneck to evaluate the achievable throughput
of our method when both random loss and congestion loss are
considered. Three scenarios were considered for performance
evaluation. In the first scenario, the cross traffic contained three
CBR traffic, which implies that the cross traffic rate was stable.
In the second scenario, the cross traffic was composed of three
FTP traffic. In the third scenario, the cross traffic flows were
a Poisson distribution with a rate of 2Mbps, a bursty period
of 5ms, and an idle period of 10ms. The initial sending rate
was set to zero and total simulation time was 500 seconds.
Fig. 5. Single-hop heterogeneous network model. Cross traffic flows from
Cs to Cr. Wireless transport traffic flows from Ps to Pr.
The results of throughput obtained using our method, TCP-
Reno, TFRC, JTCP, and TCP Westwood are plotted in Figs.
6, 7, 8, respectively, for the above three scenarios. We can
observe from these figures that our method can utilize band-
width without flooding the bottleneck even if random loss
ratio becomes higher. When the cross traffic was FTP or
Poisson, the bursty behavior leads JTCP and TCP Westwood
to incorrectly estimate the relationship between the sending
rate and congestion. On the other hand, when cross traffic
is composed of CBR traffic only, our method can perfectly
approximate the unused bandwidth and keep sending rate
stably without overshooting residual bandwidth of bottleneck.
When cross traffic is bursty likes FTP and Poisson traffic,
the throughput obtained using our method slightly drops
when random loss ratio becomes higher. This phenomena is
caused by the lost packets, which make probing noise not
being completely deleted. However, the throughput of other
known methods drops dramatically when random loss ratio is
gradually increased.
VII. CONCLUSION
Traditional transport protocols are unable to provide stable
transmission due to the lack of information about the avail-
0 1 2 3 4 5 6 7 8 9 10
0.5
1
1.5
2
2.5
3
3.5
4
4.5
5
random loss ratio (%)
a
ve
ra
ge
 th
ro
ug
hp
ut
 (M
bp
s)
RENO
JPTFRC
TFRC
JTCP
WESTWOOD
Fig. 6. Throughput comparison under the background traffic, which was
composed of three CBR flows whose sending rate is 2 Mbps.
0 1 2 3 4 5 6 7 8 9 10
1
2
3
4
5
6
7
8
9
10
random loss ratio (%)
a
ve
ra
ge
 th
ro
ug
hp
ut
 (M
bp
s)
RENO
JPTFRC
TFRC
JTCP
WESTWOOD
Fig. 7. Throughput comparison under the background traffic, which was
composed of three FTP flows whose sending rate is less than 2 Mbps.
able bandwidth. Meanwhile, end-to-end available bandwidth
estimation has been found to be helpful for joint congestion
and rate control of multimedia transmission. In this paper, we
have proposed a new available bandwidth estimation scheme,
called JitterPath, and used it to achieve bandwidth-aware loss
discrimination rate control for video streaming over wired and
wireless networks. Specifically, we have presented solutions to
(i) queuing region classification; (ii) queuing delay propaga-
tion; (iii) initial queuing delay determination; and (iv) adaptive
rate adjustment-based on bandwidth-aware loss discrimination.
We further quantify the captured traffic ratio, which is defined
as the ratio of the total output gaps accumulated in JQRs to
the total input gaps, and use it to specify the relationship
between the probing rate and available bandwidth, i.e., the
bottleneck utilization. Finally, a binary search-based probing
rate adjustment mechanism has been proposed to iteratively
approximate the available bandwidth with an error that is
within the preset estimation resolution. Our method has been
presented with both the fluid and bursty traffic models. In
addition, several simulations and Internet experiments have
been conducted to verify our method. By integrating both the
congestion control and rate control technologies, we aim to
develop a QoS-guaranteed video transmission system for use
in wireless environments.
