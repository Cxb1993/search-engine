嵌入式快閃記憶體之測試排程研究 
“The Study of Test Scheduling of Embedded Flash Memories” 
計畫編號：NSC96-2221-E-230-023 
執行期間：96 年 8 月 1 日 至 97 年 7 月 31 日 
主持人：王維倫 正修科技大學資訊工程系副教授 
 
一、中文摘要 
近年來由於半導體技術的突飛猛進，使得
快閃記憶體的單位製造成本下降及其記憶容
量得以增加，再加上快閃記憶體本身具有低功
率消耗及儲存資料不隨電源關閉而消失的非
揮發特性，因此目前快閃記憶體已經大量使用
於許多手持式消費性電子產品如 MP3 播放
器、數位相機及智慧型手機等用途。此外隨著
電子產品尺寸不斷縮小及功能日益增強，使得
快閃記憶體必需嵌入於系統晶片(System on 
Chip、SOC)中以儲存資料與程式碼。 
由於在系統晶片中所使用的記憶體數量
逐漸增多而且因系統需求同時使用不同類型
的快閃記憶體的機會亦將增加，由於快閃記憶
體的抹除時間(Erasure Time)遠大於讀取時間
(Read Time)，因此快閃記憶體的測試時間將大
為增加，在本研究中我們將以 Flash Memory 
Vendor 的觀點，探討不同類型的快閃記憶體的
測試排程以縮短整個快閃記憶體的測試時間。 
一般而言，嵌入式快閃記憶體(Embedded 
Flash Memory)是使用植入式自我測試(Built-In 
Self-Test、BIST)方法來解決無法從外界直接對
SOC 內部的快閃記憶體進行測試的問題。此外
隨著系統功能增加，在 SOC 內部所需要的記
憶體數目亦隨之增加，因此在本研究中我們提
出『系統晶片之嵌入式快閃記憶體測試排程』
方法，針對SOC中各個 embedded flash memory 
core 所使用的 march algorithm 進行測試排程
(test scheduling)的研究，其中並將 power 
constraint(功率限制)與 precedence constraint(測
試順序限制 )等因素加以考慮，研究發展
preemptive test scheduling 以縮短測試時間。 
本計畫的研究重點主要著重於：(1) 在系
統晶片中的嵌入式 NOR Flash 與 NAND Flash
的測試與修復方法，(2) 在系統晶片功率限制
條件下針對 Flash Memory Core 提出【測試排
程(Test Scheduling)】，(3) 針對 Flash Memory
提出一個【植入式自我測試】電路的自動化設
計軟體。 
英文摘要 
With the rapid progress in the VLSI 
fabrication process, a complex system can now 
be integrated into a system-on-chip (SOC). 
Embedded memory cores are essential to the 
performance of an SOC.  
To implement the complicated functionality, 
the number of required embedded memory cores 
in an SOC is growing more and more. Tens to 
hundreds or memory cores may be required in 
the networking and communication SOC 
designs.  
Recently, the NOR Flash and NAND Flash 
memories play the important roles in the 
consumer electronics. In this project, we firstly 
investigate the testing and repair methods for the 
embedded flash memories. Then, a test 
scheduling has been proposed to shorten the 
testing time. Finally, an automatic built-in 
型亦不盡相同，一般而言 NOR Flash 主要的故
障模型為 WPD、BED、BPD、RDA1、RDU1
等而 NAND Flash 的主要故障模型則為 WPD
與 RDU1 [9]，因此兩類快閃記憶體的測試方
法亦有所不同。 
在一個陣列(array)為 m*n (其中 m 與 n 分
別為 row address 及 column address 的空間)的
快閃記憶體中，目前已知用於測試 NOR Flash
的測試方法有： 
(A1) Flash March [6]： 
{( ); ( 1, ); ( 0);( ); ( 1, ); ( 0)}E R P R E R P R⇑ ⇓8 8  
(A2) March FT [7]： 
{( ); ( 1, , 0); ( 0); ( ); ( 1, , 0); ( 0)}E R P R R E R P R R⇓ ⇑8 8  
(A3) Diagonal FT [8]： 
! 1 1 ! 1
1 ! 1 2 1
{( ); ( 1, , 0); ( 1, , 0); ( 0);( );
( 1, , 0); ( 1); ( 1, , 0); ( 0)}
D D D
D D D D
E R P R R P R R E
R P R R R P R R
⇑ ⇑ ⇑
⇓ ⇑ ⇓ ⇑  
而用於 NAND Flash 的測試方法則有： 
(B1) NAND-FT [2]： 
!
! ! ( 1, 1)
{( ); ( ); (( 1) , ( 0) ); ( );
( ); (( 0) , ( 1) );( 1) }
D D D
D D D m n
E P R R E
P R R R
− −
⇑ ⇑
⇓ ⇓  
在上述的每一個測試方法中其運作方式大致
與傳統記憶體測試方法 march algorithm 相
似，但是也不盡相同。符號 ( )E 表示進行抹除
(erase)動作、( )RX 表示讀取資料後再與資料 X 
(X = 0 或 1)作比對動作、 ( )P 表示執行寫入資
料 0 的動作；另外符號⇑ (或⇓ )表示測試動作
是以位址增加(或減少)的方向來進行，符號
1D⇑ (或 1D⇓ )表示測試動作則是以 memory array
的左上右下的對角線(diagonal)位址增加(或減
少)的方向來進行，符號 2D⇓ 表示測試動作則是
以 memory array的右上左下的對角線(diagonal)
位址減少的方向來進行，符號 ! 1D⇑ 表示測試動
作是除了左上右下的對角線(diagonal)位址之
外的所有位址以位址增加的方向來進行；此外
值得一提的是在 NAND-FT 中有個特殊的符號
( 1, 1)( 1) m nR − − 即為在位址(m-1,n-1)執行讀取資料
再與資料 1 作比對動作。 
此外，預期嵌入式快閃記憶體數目會隨著
電子產品功能增加與半導體製程進步而增
加，在進行測試時所產生的功率消耗(power 
consumption)與測試時間(test time)亦將會隨之
急遽增加。近年來為了減少 core 的測試功率消
耗與測試時間，學者專家大都是以測試排程
(test scheduling)理論來進行研究。一般而言，
快閃記憶體的抹除 (erase)時間遠高於其他
Read / Write 時間 [10]，而且在執行抹除(erase)
動作時並未使用到快閃記憶體的 address bus
與 data bus [7]，所以此時測試向量產生器(test 
pattern generator，TPG)可以先行對其他記憶體
提供測試向量(test pattern)來進行測試，如此不
僅可以充分運用測試向量產生器亦可減少整
體的測試時間。在本計畫中我們將運用快閃記
憶體這項特性來進行嵌入式快閃記憶體的測
試排程研究。 
ㄧ般而言，以「abort at first fail」的測試
觀點來看，SOC 的 embedded memory core 應
該需要先進行測試 [11]。提供 flash memory 
core 的各家 core vendor 可能會因本身 IC 製程
與快閃記憶體電路設計方法的不同而採用不
同的 march algorithm 來進行測試。 
SOC的 test scheduling是用來決定 SOC中
各個 core 的測試順序，ㄧ個有效的 test 
scheduling approach 主要是 minimize testing 
time 與解決下列問題: (1) 各個 core 之間使用
TAM 與 on-chip BIST engine 的 resource (即為 
test pattern generator)衝突問題，(2) 各個 test
間的 precedence constraint (即為  在 SOC 
testing 中某些 test 需要考慮 ordering)問題，(3) 
power dissipation constraint(即為限制單一時間
同時測試 core 的數量以確保 SOC 的測試功率
不會超過最大額定功率(maximum power rating)
1500 測試標準快閃記憶體的輸入/輸出端加上
wrapper boundary register (WBR)並受到 WCK
的時脈控制，其中 Control Signals 是由
Chip_Erase、Program、CEB、WEB、OEB、
READYB 等 6 條線所組成，當執行 march 
algorithm中的 erase動作時由於 erase時間遠超
過其他 read/write 時間且毋需用到 address bus
及 data bus，所以此時可由 TAM (test access 
mechanism)對WCK時脈進行 disable動作使得
WBR 保持 erase 的控制信號狀態，然後 TAM
即可命令 Source 改對其他 flash memory core
進行測試。 
 
假設 SOC 中有 U 個 embedded memory 
core 分別表示為 C1, C2, …, CU ，其中用以對
第 i 個 memory core 進行測試所使用的 march 
algorithm 為 Ci 並將 march algorithm 改寫成如
下所示： 
{ | 1,  2, 3, ..., }i ijC S j m= =  
對第 i 個 memory core 進行 march algorithm 測
試所需要的測試時間為 Ti 並為如下所示 
1
m
i ij
j
T t
=
=∑  
其中 ijt 表示執行 march algorithm 的第 j 個
march element 所需的測試時間 
 
我們以 Spansion 公司 90 nm MirrorBit 製
程的 128 Mbit 快閃記憶體為例，其 block 共有
32 個，block size 為 256 K words，page size 為
512 bytes，word length 為 16 bits，此外相關運
作所需的時間與功率消耗如下表所示[16]： 
Flash  
Characteristics 
NOR NAND 
Read Time 160 ns 50 ns
Page Program Time 1.5 ms 180 μs
Block Erase Time 2 s 150 ms
Read Power 79 mW 105 mW
Page Program Power 94 mW 93 mW
Erase Power 94 mW 93 mW
從上表可知，在NOR Flash與NAND Flash
所進行的 Read、Program 與 Erase 等動作所需
要的時間與消耗功率都不相同，而且各家半導
體製造廠所產製的快閃記憶體其相關的時間
與消耗功率等參數亦有所不同，因此我們將各
個 flash core 的每個 march step 所產生的消耗
功率納入快閃記憶體的測試排程中加以考慮。 
如下圖所示，在一個 SOC 中假設有 k 個
flash memory core 被單一的 test resource 依序
測試，那麼我們可以用一個 k 列 q 行(其中 q
為所有 memory core 所用的 march algorithm 中
最多的 march element 數目)的 Core Table 來表
示這些 memory core 所需要的測試時間與消耗
功率。在一般的測試排程中為了縮短測試時間
及提高 test source 的使用率，假設有 u 個 test 
resource 對 k 個 memory core 進行時間分工
(time multiplexing)，換言之，同一個 test 
resource 並不一定對 memory core 做完測試方
才進行下一個 memory core 的測試，我們可以
依據 test scheduling的最小測試時間來決定 test 
resource 的工作狀態。此外為了能進一步縮短
測試時間，我們將快閃記憶體的 Erase time 視
為 test source 的 idle time，在快閃記憶體的
Erase 過程中將 test source 轉移到對其他記憶
體的測試以提高 test source 的使用率。 
 
Core Table 主要是用來描述 memory core
被 test algorithm 進行測試時所需的測試時間
 
(2) Core 2 (NOR Flash): Diagonal FT 
! 1 1 ! 1
1 ! 1 2 1
21 22 23 24 25
26 27 28
{( ); ( 1, , 0); ( 1, , 0); ( 0);( );
( 1, , 0); ( 1); ( 1, , 0); ( 0)}
{ ;         ;                 ;                ;      ;
        ;             ;              ;   
D D D
D D D D
E R P R R P R R E
R P R R R P R R
M M M M M
M M M
⇑ ⇑ ⇑
⇓ ⇑ ⇓ ⇑
29             }M
 
 
(3) Core 3 (NOR Flash): Diagonal FT 
! 1 1 ! 1
1 ! 1 2 1
31 32 33 34 35
36 37 38
{( ); ( 1, , 0); ( 1, , 0); ( 0);( );
( 1, , 0); ( 1); ( 1, , 0); ( 0)}
{ ;         ;                 ;                ;      ;
        ;             ;              ;   
D D D
D D D D
E R P R R P R R E
R P R R R P R R
M M M M M
M M M
⇑ ⇑ ⇑
⇓ ⇑ ⇓ ⇑
39             }M
 
 
如下圖所示為 2個 test sources對 3個 flash 
core 進行測試時所對應的測試排程，由於 test 
source S1 在測試 core 2 進行到 M25 位置此時動
作為 erase，毋需用到 S1，因此在那段時間 S1
改去測試 core 1 並且由 M15 位置開始進行到
M17，完成 core 1 的測試，再回來測試 core 2
並且由 M26 位置開始進行到 M29 以完成 core 2
的測試。至於 test source S2 在測試 core 1 進行
到 M14 位置此時動作為 erase，因此改去測試
core 3 由 M32 位置開始進行到 M39(其中 M35 位
置動作為 erase，此時 S2 為 idle 狀態)，完成 core 
3 的測試。 
 
(B) 快閃記憶體測試電路之自動化設計 
由於快閃記憶體的用途日益廣泛，因此不
同型態及容量的快閃記憶體將被設計製造並
用於不同的電子產品中，在進行快閃記憶體的
先導期測試(pilot-run testing)時測試信號必需
由硬體電路產生以實際進行快閃記憶體測
試，以確認測試效果。但是快閃記憶體的測試
複雜度主要決定於待測記憶體的位址容量，因
此隨著當今記憶體容量不斷增加的趨勢下在
先 導 期 若 是 使 用 人 工 在 測 試 儀 器 (test 
instrument)來設定測試信號來測試記憶體時將
會是件耗時費力的工作。 
基於此，為節省設計人力，在本研究計畫
中我們在 Microsoft Windows 平台下藉由
Visual Basic 的程式語言來設計ㄧ個『快閃記
憶體測試系統自動化設計』軟體。使用者在圖
形使用者介面(graphical user interface、GUI)的
環境中依據待測快閃記憶體的特性以滑鼠點
選相關的參數如 address width、data width、快
閃記憶體的型態及測試方法後即能自動編輯
快閃記憶體測試電路的硬體描述語言檔案並
自動啟動 FPGA 發展軟體 – Altera Quartus II
進行編譯(compilation)及模擬(simulation)等動
作，最後產生可以用於測試儀器的測試信號檔
案，然後此一自動化軟體可以自動啟動測試儀
器產生實際的硬體信號以測試快閃記憶體，如
此不僅可大幅減少在先導開發期的人工成本
亦可降低人為誤差。 
Address
Generator
Erase/
Program/
Read
Generator
Data
Generator
Flash
Memory
Test
Controller
 
如上圖所示為用於快閃記憶體的測試電
路方塊圖，根據快閃記憶體的測試方法可以得
