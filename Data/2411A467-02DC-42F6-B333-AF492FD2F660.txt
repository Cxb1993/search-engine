一、簡介
在現今的電腦多媒體娛樂界中，三維電
腦圖學的利用在電腦遊戲以及電腦動畫扮演
了舉足輕重之角色，尤其在現在越來越要求真
實性以及視覺化的關係下，三維的方法利用已
經越來越普遍。二維的動畫方法中，偏好使用
許多連續圖層來展現其連續性播放效果。但是
在三維的方法中，都是使用頁框與頁框彼此的
關係來做呈現。在遊戲及動畫中，充滿著許多
人類的訴求以及渴望，期望能藉由虛擬實境中
的沈浸、互動和幻想，來完成日常生活中無法
達成的一些行為。於是大部分的主題多圍繞在
人類或是動物上，而對於這些以動物為主題的
一些電影以及遊戲中，多半以動物來做模仿人
類的動作行為為其角色設定。
在三維電腦圖學的領域中，一個角色的
動作行為就是一段頁框期間中使用內插的表
現結果，而這些角色是被許多多邊型所包覆，
要控制這些多邊形實為不易，所以便產生了為
角色設立骨架的方法，被稱為內隱方法
(implicit approach) [1][2]，透過角色人物的關
節、骨頭與其週遭的多邊形彼此建立起關聯
性，使用這些關節以及骨頭來調整人物動作並
且設立關鍵頁框，最後再搭配內插方法，即可
讓這個角色做出簡單的動作[3][4]。它的好處
是可以讓該人物主角透過骨架事先已與多邊
形定義好的關聯性，在需要即時運算的場景中
使用該動作檔時，可以即時地被產生與場景互
動的運算，而不需要一些事先針對此場景進行
費時的前置處理。但是就算讓一位有豐富經驗
的美術人員來做一段極為真實的動作，過程通
常是非常費時又浪費勞力。所以現今電腦娛樂
界中，動態動作捕捉器普遍受到業界所使用。
雖然動作捕捉器可以透過真人的行為來捕捉
錄製，可以產生人類生活化並且極為真實的人
物動作，但是不同的公司所生產的動態捕捉
器，所產生的人物骨架檔案結構彼此不盡相
同，甚至於不同的三維建模軟體所使用的骨架
結構，以及不同的美術人員所習慣設定的骨架
結構也不一定會相同，所以當一個被期待可重
複利用的動作檔被產生時，要指定給不同的角
色骨架，便會造成雙方關節彼此無法對應的情
況發生，更何況是不同動物彼此的動作要互相
轉換。可以想像當我們把ㄧ隻海豚的動作對應
到人類身上，便會發現海豚的鰭沒有可以被人
類所對應的關節，以及人類的雙腳動作也沒辦
法對應到海豚身上。為解決角色雙方骨架無法
對應的問題，以及希望被花費許多時間與勞力
來產生的動作檔可以被多次重複使用，在三維
電腦圖學技術中，便發展出了一個被名為“動
作重置” (motion retargetting)的技術。
本研究期望能讓不同種類的生物採用此
篇 論 文 提 出 的 階 層 式 演 化 (hierarchical
evolution, HE)，如圖 1 能夠產生出新型的生
物。首先利用交配(crossover)的機制，讓兩個
親代的骨架交配產生新的巨集骨架 (meta
skeleton)，此巨集骨架會同時包含親代雙方的
關節以及骨頭，再針對此巨集骨架產生突變以
及適應值篩選，之後讓被篩選後產生的骨架對
應到親代的骨架，以產生動作傳遞 (motion
transition) [5][6]進而完成動作重置的結果。
運算且不方便套用的限制令，他所著重的項目
為人物走路以及跑步的方面。他將人物的走路
的一段步伐做分割和分類，最後再針對腳掌的
旋轉角度來做動作重置。到了2005年的Hsieh
[10]，提出了使用骨架對應的方式，1998年的
Gleicher是使用相似骨架架構的模型，而Hsieh
則是使用差異度較大的骨架來作研究。他充分
利用了骨架的結構，找到彼此的關聯性，並且
讓兩個骨架利用手動的方式產生結合彼此資訊
的巨集骨架，透過這個巨集骨架來做動作的傳
送與對應，已經可以做到了骨架形變的階段。
本研究是著眼於利用兩個不同而且差異度
較大的骨架，並且將這兩個骨架做使用階層式
演化的步驟分析，期望可以產生新型生物的骨
架，透過此骨架來讓多親代骨架的動作可以做
重置，並且將此技術應用在三維電腦動畫與數
位遊戲領域，以產生多樣性的生物骨架，除增
加動作檔的重複使用性之外並解決現今動作擷
取方面的困難以及成本過高的問題。
2.2 演化式演算法
基因演算法[18][19]為具有演化式計算所
建立的計算模式統稱為演化式演算法，如演化
式規劃、演化策略、基因演算法及基因規劃。
在整個演化式計算研究中，範圍最為廣泛的研
究主要為基因演算法，基因演算法可有效的搜
尋出問題最佳解並產生較為穩定的結果，其主
要運作方式為模仿生物界中的生存法則，適者
生存，不適者淘汰，這種物競天擇的自然演進
法則，可有效地選擇出具有較好特性的物種並
繼續繁延下去而產生出比上一代更優秀的子
代，如此一直反覆的演化之後以產生適應性最
高的子代，進而找到最理想的解答。Karls 於
1994 年[21]為了能夠產生虛擬生物，考慮最佳
化技術可以自動產生複雜子代，就採用了在人
工演化(artificial evolution)中較被一般所使用
的基因演算法。
基因規劃(Genetic progrmming, GP)是由
Koza 於 1992 年所提出[20]，與基因演算法在
演化的過程有所類似，最主要的差異為 GA 通
常產生一個固定長度的二元字串解，然而 GP
運算於電腦程式時會產生多樣性的複雜度，並
且此最佳解的複雜度是無法事先知道的。當使
用 GA 時，它的複雜度必須要在起始時就給
定，但是 GP 可以盡可能地逐步解決此複雜的
問題。1995年的L.Gritz以及 J. K. Hahn [22][23]
將 GP 運用於以骨架為基礎的角色動作上，他
們提出了適應性函數給予特定的獎懲，例如當
該角色的動作較為快速或是消耗較少能量時
給予獎勵，如果在行動途中遇到障礙物或是維
持一致的動作持續很久一段時間時給予處
罰，將此適應性模型持續運算多次，可以求出
該角色較好的行徑方式。
本研究考慮了最佳化技術中的全自動計
算以及使用者互動控制兩者的平衡。互動式控
制可以透過一些簡易的選擇來循序式找尋在
審美觀上較符合需求的新型生物骨架，所以本
研究提出的階層式演化規劃了使用者介面，讓
使用者在系統介入產生符合其需求的解而不
必是系統認定的最佳解。規劃步驟如圖 2 所
示，此為階層式演化的演化流程，由圖中可得
知選擇 (selection) 、交配 (crossover) 、突變
(mutation)及適應性篩選(survivor)為整個階層
式演化的主要運作中心，不管缺少那一步驟都
無法有效地得知最終解答。
。利用 1
sC 和 2
sC 其中的限制令 1 c
sC 和 2c
sC 可以
求 得 1
sC 和 2
sC 的 轉 化 矩 陣 (transformation
matrix) T ，如式(1)。此時再利用 sM 上的資
訊讓雙方做動作傳遞(motion transition)。這裡
的初始化具有一定的必要性，因為每個骨架所
擁有的本地座標是不完全相同的，本研究是以
1
csC 為主要參考對象，唯有在每個骨架做出相
同姿勢時，然後再轉換到 sM 上，才能讓動作
順利地完成傳送的步驟。
1 2 1 2( )c c
s s s s sC T C M C T C     
(1)
3.1.3 動作傳遞
將記錄骨架在一段時間內發生位移以及
轉動資料的動作檔，透過彼此骨架名稱的對應
性來做對應，如式(2)將 1
mC 和 2
mC 做結合，透
過章節 3.2 的結果，產生新生物 (population
creature) 所 應 擁 有 的 動 作 檔 mpC ， 經 由
( , ( 1), ( ))i iposture LinearInterpolate offset j t j t 
隨時更新目前的姿勢(posture)，以呈現一連串
的 線 性 內 插 動 畫 ， 式 (2) 中 的
1 2( ( ), ( ))
m i m iAssociate C j C j 會利用章節 3.2.4
的適應性結合比例來做結合。
1 2
1 2
1
1
2
if( ( ). ( ). ( ). ( ). )
( ) ( ( ), ( ));
else if( ( ). ( ). )
( ) ( );
else if( ( ). ( ).
(
s i s i s i s i
p p
m i m i m i
p
s i s i
p
m i m i
p
s i s i
p
m
p
C j name C j name AND C j name C j name
C j Associate C j C j
C j name C j name
C j C j
C j name C j name
C j
 




2) ( );
i m iC j
(2)
3.2 階層式演化
在現今遊戲的運用中，已有將虛擬演化
應用在人物角色的產生上；藉由輸入特定的參
數，如人種，膚色，髮型，體型等等，以產生
多樣性的角色人物於遊戲場景之中。在此本研
究提出了一種產生多樣性骨架的方式，以階層
式演化來產生新的生物骨架，再將親代雙方的
動作重置到此一新生物上，藉以讓此一新生物
擁有新繁衍出來的動作，期望藉此亦能擁有多
元的生物角色產生。
3.2.1 選取親代 (Selection)
首先，我們將定義親代雙方的物種，我
們採用脊椎動物為主。該物種必須符合如圖 3
所示的骨骼結構，我們藉此限制令來生成初步
的對應。
圖 3、 csC 限制令骨架架構圖
本系統的親代選取方式為人工選取，使
用者可以隨著自己需求選取自己所需要的動
物，當他選取一個親代為馬的時候，此模型即
為 1C 。如圖 4 所示，本系統會讀進此模型的
骨架 1
sC 。
圖 6、親代骨架架構分析
將相同的關節代號合併之後，其餘不同
的關節代號就會接在此架構的後面，所產生的
新架構即是交配所得的巨集骨架，如圖 7 和圖
8 所示。
圖 7、巨集骨架的 spine1架構
圖 8、巨集骨架生成圖
3.2.3 突變 (Mutation)
讓原本的 sM 綜合了 1
sC 和 2
sC 之後的巨
集骨架，藉突變將多餘的關節經篩選後做去
除。如圖 8 可以將 sM 從 1
sC 將得到的馬四肢
以及尾巴給消去。於是 sM 的軀幹將只保留海
豚的結構，在其後要將動作做傳遞時，就不會
再將 sM 上所沒有的關節動作傳入。此一步驟
為階層式演化的重點之一，要產生適合的骨架
做為後來的動作傳遞使用。本研究的作法為旋
轉角度的運算判斷， ( )ij t 記錄了該關節 i 在頁
框 t 所擁有的尤拉角(Euler angles)。
( ) ( 1)
( ) , =frame_no., =joint_no., -1 1
| ( )| | ( 1)|
i i
i i
i i
j t j t
Cos t t i Cos
j t j t
    
 
1 () ( 1)() , =frame_no., =joint_no., :Rotationangleof joint
| ()| | ( 1)|
i i
i i
i i
j t j t
t Cos t i i
j t j t
  
 
(4)
由式(4)可知，由 ( )ij t 和 ( 1)ij t 所形成的
夾角，將可決定出 ( )i t ，本研究會將這些關節
的旋轉角度蒐集起來使用動作分析 (motion
analysis)的方法，利用式(5)的標準差公式，來比
較所選取的關節何者變化的變異程度較大。
0
1
( ) , =frame_no. , =joint_no.
n
i i
i
t t i
n
 

 
2
0
( ( ) )
, =frame_no. , joint_no.
( 1), if
n
i i
i t
i i i i
t
t i
n
w w is assigned
 

 


 
  

(5)
: Rotation angle of a joint, : Average of
rotation angles in a frame interval, n : Total
numbers of rotation angle in a frame interval,
w :Weighted value, : Variance of a joint
3.2.4 適應值 (Survival)
為了讓親代的骨架動作可以對應到經由突
變產生的子代骨架上。本研究期望能結合親代
動作的最小差異度來做結合，所以必須要結合
兩個親代的動作，如讓馬做出像人的動作，或
是海豚作出像猴子的動作。我們將使用Gleither
[15] 在 I3D 1997 年 “Motion Editing with
Spacetime Constraints”一文所提到的spacetime
constraint中的object function方法。
0( , ) ( , ), : frameno., : adjustmentparametermt x m d t x t x 
(7)
在式(7)中， d 是一個新的動作取樣，它
提供了動作檔的自由度。之前的時空方法是找
出最小能量損失的物件，Gleither 將它運用為
找出最小的差異度在兩個動作檔之間，如此可
以在我們動作合成的同時並且保留了親代雙
方的特徵值。所以 ( )m t 和 0 ( )m t 的差異就是
( )d t 的位移，則可將此 ( )d t 最小化，利用參
數 x 調整該動作曲線在頁框 t 上的差異程度
以產生符合需求的動作資料給 ( )m t 。
由於式(7)是讓其中一個物種做出像另外
一種物種的動作，但本研究目的是讓所產生的
新型生物 pC 能夠擁有親代雙方的動作，並且
可以同時作出像親代 1C 亦與另一個親代 2C
相似的動作，所以本研究將式(7)更改為式
(8)，利用 x 來調變該生物與兩者親代的差異
度。
1 2
1 2
( , ) ( )
: frameno., : adjustmentparameter ,
: mutativemotion, : the1stmotiondata, : the2ndmotio
m m m
p
m m m
p
C t x C x C t
t x
C C C
 
ndata
(8)
經由式(8)，將兩者親代的動作傳遞給新
型生物 pC ，其結果如圖 12 所示， pC 結合了
親代 1C 與另一個親代 2C 的動作。
圖 12、適應計算所得的動作
四、討論與實驗
本論文提出的階層式演化跟一般最佳化
方法演化較為不同之處為本研究的適應值判
斷。一般最佳化方法將會利用自動化系統來執
行重複性運算，判斷決策找到最佳適應值解或
是近似解，例如我需要一個非常會飛翔的生
物，於是在該生物背部加上突變變因，要求決
策出最佳的關節生長以產生具有可使該生物
擁有豐富飛翔動作表現的關節。但是，要產生
這樣的生物除了所要花費的計算時間長之
外，更重要的一點為無法產生可以完全符合一
個動畫人員所需要的人物資料，如圖 11 這是
突變後產生的新生物骨架，從圖看來可以發覺
已經出現不合理之處，如這個生物的右前腳掌
以及左腹鰭在突變過程被篩選掉了。針對這樣
的問題，本研究在實作的時候便發現此問題是
沒辦法透過全自動最佳化方法來做解決的，於
是使用了互動式方法來實作此階層式演化，如
圖 12 的結果。
本研究的圖形化使用者介面使用 FLTK
(Fast Light Toolkit)[24]讓使用者能夠指定所需
要的參數。接下來，將讓使用者指定這些特殊
參數以產生不一樣的實驗結果，本論文提供了
三個物種如圖 13 及表 1 分別為馬、海豚，以
表 3. 子代生物突變數目與動作平均標準
差比較
突變數目 突變後總
關節數目
(個數)
適應值的動作
平均標準差
馬-
海
豚
3 70 0.317517
5 64 0.345493
馬-
鳥
3 46 0.849974
5 46 0.849974
海
豚-
鳥
3 57 1.796679
5 53 1.932278
在表 3 的實驗中，在突變過程中控制了
突變所要刪除的關節數目，利用這些關節數目
在 spC 架構中作子葉節點的刪除。可以從馬-海
豚以及海豚-鳥發覺由於所突變的數目較多所
以保留下來的平均標準差值都會比較高，在馬
-鳥中，雖然給予的突變數目不相同，但是在
做子葉節點刪除時候所刪除的關節點是一樣
的，導致所剩餘的關節數目是相同的，因此兩
者的平均標準差相同。
4.3 動作結合比例
使用者可以改變適應值動作的結合比
例，該比例為 1
mC 與 2
mC 的分配比例，當分配
比例為動作結合比例為 1:a 時，
1 21
m m m
pC C a C   。如此新生物 pC 所擁有的
m
pC 所擁有的動作資料會有所不同，未來本研
究仍希望能結合一些有關物理屬性以及 IK 的
方法來加強適應值動作的真實性。預設的狀態
是權重參數不更改，突變數目為 5。
表 4. 子代適應值動作結合比例與動作平
均標準差比較
適應值動
作的結合
比例
突變後總
關節數目
(個數)
適應值的動作
平均標準差
馬-
海
豚
1:1 64 0.317517
1:2 64 0.392748
馬-
鳥
1:1 46 0.849974
1:2 46 0.875604
海
豚-
鳥
1:1 53 1.796679
1:-2 53 0.192497
在表 4 的實驗中，適應值的動作結合給
定兩種比例，由於比例被放大所以動作的差異
度被放大，計算得到的平均標準差值也會被放
大，當比例被縮小時，動作差異度被縮小所得
到的平均標準差值就被變小了。
透過以上三個實驗，不同的參數指定將
會產生擁有不同關節數目的新生物骨架 spC ，
也由於這些參數的關係造就了新生物動作檔
m
pC 擁有不同活潑程度的差異性動作，因此我
們所提出的使用者互動方式的階層式演化系
統能夠產生不論是在骨架或是動作方面都具
有多樣性的新生物。
五、結論與未來工作
本研究的三維骨架繁衍技術透過動作重
置以及階層式演化的配合，透過選擇親代，讓
親代交配產生出巨集骨架，藉由突變來篩選刪
除多餘的關節，動作重置時的適應性結合等步
“Generating consistent motion transition 
via decoupled framespace interpolation,” 
Computer Graphics Forum (Proceedings of
Eurographics 2000 Conference), pp.
447–456, 2000.
7. Kwang-Jin Choi and Hyeong-Seok Ko,
“On-line motion retargeting,” The Journal 
of Visualization and Computer Animation,
Vol. 11, No. 5, pp. 223-235, 2000.
8. Michael Gleicher, “Retargeting motion to
new characters,” Proceedings of the 25th
annual conference on computer graphics
and interactive techniques, pp. 33-42, 1998.
9. Alexander Savenko and Gordon
Clapworthy, “Using motion analysis
techniques for motion retargeting,” 
Proceedings of Information Visualization,
IEEE Computer Society Press, pp. 110-115,
2002.
10. Ming-Kai Hsieh, Bing-Yu Chen, and Ming
Ouhyoung, “Motion retargetting and
transition in different articulated figures,” 
Proceedings of 2005 International
Conference on Computer Aided Design and
Computer Graphics, pp. 457-462, 2005.
11. Robert W. Sumner and Jovan Popović,
“Deformation transfer for triangle meshes,”
ACM Transactions on Graphics, Vol. 23,
No. 3, pp. 399-405, 2004.
12. Michael Gleicher and Peter Litwinowicz,
“Constraint-based motion adaptation,” The
Journal of Visualization and Computer
Animation, Vol. 9, No. 2, pp. 65-94, 1998.
13. Michael F. Cohen, “Interactive spacetime 
control for animation,”Proceedings of the
19th annual conference on computer
graphics and interactive techniques, pp.
293-302, 1992.
14. Charles Rose, Brain Guenter, Bobby
Bodenheimer, and Michael F. Cohen,
“Efficient generation of motion transition 
using spacetime constraints,” International
Conference on Computer Graphics and
Interactive Techniques, pp. 147-154, 1996.
15. Michael Gleicher, “Motion editing with 
spacetime constraint,”Proceedings of the
1997 symposium on interactive 3D
graphics, pp. 139-ff, 1997.
16. Zoran Popovi´c and Andrew Witkin,
“Physicaly based motion transformation,” 
Proceedings of the 26th annual conference
on computer graphics and interactive
techniques, pp. 11–20, 1999.
17. Ronan Boulic and Daniel Thalmann,
“Combined direct and inverse kinematic
control for articulated figures motion
editing,” Computer Graphics Forum, Vol.
11, No. 4, pp. 189-202, 1992.
18. John H. Holland and Judith S. Reitman,
“Cognitive systems based on adaptive
algorithms,” In 1997 ACM SIGART
Bulletin, pp. 49-49, 1997.
19. Cândida Fereira, “Gene expression
programming: A New adaptive algorithm
for solving problems,” Complex Systems,
Vol. 13, Issue 2, pp. 87-129, 2001.
20. John R. Koza, “Genetic programming”,
MIT Press, 1992.
21. K.Sims, “Evolving virtual creatures,”
Computer Graphics (Siggraph '94
Proceedings), pp.15-22, 1994.
22. L. Gritz, J.k. Hahn, “Genetic programming
出席國際學術會議心得報告
計畫編號 NSC96-2221-E-415-007
計畫名稱 使用三維骨架繁衍技術進行物體動作轉移串接之研究
出國人員姓名
服務機關及職稱
盧天麒
國立嘉義大學資訊工程學系 副教授
會議時間地點
日本廣島市 Grand Prince Hotel Hiroshima, Hiroshima, Japan
Nov. 5-9, 2007
會議名稱 15th International Conference on Computers in Education
發表論文題目 Animation of a Virtual Skeleton-based Creature via Motion Retargetting
一、參加會議經過
2007年的 15th International Conference on Computers in Education會議在日本廣
島市舉行，主辦單位為 Asia-Pacific Society for Computers in Education (APSCE)及
Japan Society for Educational Technology (JSET)，ICCE2007舉辦的天數為五天，主辦
單位規劃了四場專題主講，主講人分別是新加坡 Nanyang Technological University的
Chee-kit Looi、加拿大 University of Saskatchenwan的 Julita Vassileva、日本 National
Institute of Multimedia Education的 Yasutaka Shimizu以及挪威 University of Bergen的
Barbara Wasson，會場中並同步舉行九場的 workshops；本篇論文是發表在會議主題
為”Learning and Fun: Should Educational Games and Toys be Serious?”，此主題共計發
表 10篇論文，發表於此 session的作者來至於香港、馬來西亞、台灣及日本等國；與
會學者人數眾多，ICCE2007 會場 Q&A 討論情況踴躍，同時也跟在場與會人士進行
短暫的主題討論及研究心得分享。
二、與會心得
本次 ICCE2007在日本廣島市舉辦，因廣島市的特殊地理環境及濃厚人文發展，
研討會在此舉行和廣島市觀光相輔相成，使得參與的研究學者非常踴躍，而本次
ICCE2007 並邀請了其它國家的知名學者擔任 session chairs 並進行論文發表，因此
session數量及 workshop數量非常多，會場中儼然成為一個小型聯合國；此外，在國
內相關學者多年辛苦爭取下，ICCE2008將在台灣台北市舉行，在日後也希望國內能
多爭取到類似的大型國際會議，除了讓國內學者能和國際學者進行交流之外，也能
讓國際學者及學生進一步瞭解台灣，增加跨國合作機會並提升國內相關領域研究水
準。
another different skeleton of a character in case of different number of joints or bones
between two skeletons. On the other hand, expense and time required to capture new
motion data are considerably high, we desire to reuse these motions as much as possible
for a new character, especially a virtual creature. Motion retargetting is a well-known
technique to edit existing motions to gain the desired results on another target character.
The proposed technique aims to produce a new virtual creature by means of employing
genetic programming to cross over two different animal characters, such as a horse and a
dolphin, as shown in Figure 1. After crossing over the characters, a meta skeleton is
generated according to its parents’ skeletons, and it contains joints and bones of its parents. 
We define a fitness evaluation function for mutating the meta skeleton and construct a
next-generation skeleton, namely a target skeleton. Finally, we align the target skeleton to
the parents’ skeletons and accomplish motion transition [6, 7] in order to animate the new 
virtual creature.
Fig. 1. A new virtual creature generated by employing genetic programming.
1. Related Works
We look forward to viewing more and more diverse characters with realistic motions
nowadays. However, it is a time-consuming and high-cost job to capture new character’s 
motions by means of using motion capture system. In this paper, we devise a novel
approach to combining motion retargetting technology [8, 9, 10] and genetic programming
for the sake of motion reusability. The genetic programming is described in the following.
In 1992, Koza [11] proposed genetic programming that is similar to genetic algorithm.
Genetic algorithm can be classified as a kind of artificial evolution, and the common
purpose is to find out an optimal solution for a high complex problem. Its operation is
similar to a Darwinian “survival of the fitest” approach. Therefore, the finer coming 
generations can survive after many evolutions. When we start to employ genetic algorithm,
we need to define a problem’s complexity in advance. In contrast, we do not require an
understanding of the procedures or the complexity of a problem as long as we adopt
genetic programming to perform a given computational task. In 1995, L. Gritz and J. K.
Hahn apply genetic programming to motion control for articulated figures [12, 13]. They
present an approach to articulated figure motion in which motion tasks are defined in
terms of goals and ratings.
Figure 2 shows the evolution process of performing genetic programming in our
proposed technique. By means of employing the selection, crossover, mutation, and
we can take the meta skeleton to accomplish the motion transition through the motion data
file.
2.2 Steps for Performing Genetic Programming
2.2.1 Selection
In the selection stage, we need to specify which kinds of animal characters to be
treated as the source objects. The constraint is to use vertebrate animals that their
articulated figures meet with the specified constraint’s hierarchy, as shown in Fig. 3 (a). 
With the aid of the constraint’s hierarchy, it is easy to carry outthe correspondences of
joints and bones. The selections of animal characters are manual in our system. Users can
arbitrarily pick up their interested vertebrate animals to be the source objects. For example,
we select a horse as the first source, and its skeleton is S that is shown is Fig. 3 (b). Fig.
3 (c) shows another animal character, a dolphin, by loading its skeleton 'S to the system.
Loading two skeletons S and 'S into the system is the first step to carry out genetic
programming.
(a) (b) (c)
Fig. 3. (a) Hierarchy (b) Loading the skeleton S (c) Loading the skeleton 'S
2.2.2 Crossover
(1)
g _ _ _Tar et skeleton Same skeleton UniqueT skeleton 
_ g _ _Source skeleton Tar et skeleton Same skeleton 
_ _ _UniqueT skeleton Source skeleton Meta skeleton 
2.2.3 Mutation
With the operation of crossing over two animal characters, a meta skeleton is
produced. Its articulated figure includes all joints and bones of source and target objects.
The purpose of using mutation is to remove specific redundant joint segments from the
meta skeleton. For instant, we can reject the horse’s limbs and tail, but keep the dolphin’s 
main body. Subsequently, we only take into account the joints that are included within the
meta skeleton to perform motion transition from the sources to the target. The mutation is
an important process for the proposed technique, and its function is to generate an
appropriate next-generation skeleton for transiting motion data to it. In addition, we take
advantage of degree of freedom (DOF) to analyze the motion data of the source characters.
( , , )X xVector yVector zVector 1
1
, i = frame_no. , -1 Cosθ 1
| | | |
i i
i i
X X
Cos
X X
 

  

1 1
1
, i = frame_no.
| | | |
i i
i i
X X
Cos
X X
  



(2)
X : Vector of a joint, : Degree of a joint
In Equation (2), each angle  that is formed by any two vectors of joints, iX and
1iX , is collected to perform motion analysis. We take Equation (3) that is the standard
deviation function to calculate the motion variations of these selected joints.
0
1
, i=frame_no. , k=joint_no.
n
k i
in
 

 
2
0
( )
, i=frame_no. , k=joint_no.
n
i k
i
k kw n
 
 

 

(3)
: Degree of a joint, : Average of degrees in a frame interval, n : Total numbers of
degrees in a frame interval, w : Weight value, : Variance of a joint
We show the distribution of using the standard deviation for source characters C
and 'C in Fig. 7 (a). We also make use of principal component analysis (PCA) to project
every value of standard deviation onto a user-defined coordination and sort these values
according to their degrees. Fig. 7 (b) shows the result of using the principal component
analysis.
Fig. 8. The skeleton after accomplishing the mutation process.
3. Conclusion
The paper has proposed a novel approach to accomplishing motion retargetting towards a new
virtual skeleton-based creature that is generated by using genetic programming. By means of
employing selection, crossover, mutation, and survival operations, we can pick up more than one
character to serve as source objects, and make good use of genetic programming to construct a new
skeleton as the target object. In addition, we carry out motion analysis, including DOF and PCA, to
preserve the original motion attributes of the source objects in order to make the new creature’s 
motion more fantastic and with fewer artifacts. Finally, we apply the motion transition from the
source objects to the target object in a very smooth manner. The proposed approach is applicable to
most computer game applications when game developers desire to reuse existing motion data on 3D
virtual creatures.
Acknowledgement
This work is supported in part by the National Science Council at Taiwan, R.O.C., under the
project grant number NSC95-2221-E-415-015.
References
[1] Pamela K. Levangie and Cynthia C. Norkin, Joint Structure and Function: A Comprehensive
Analysis, 4th Edition, ISBN: 0803611919, 2000.
[2] Michael Girard and A. A. Maciejewski, “Computational modeling for the computer animation 
of legged figures,” Proceedings of the 12th annual conference on computer graphics and
interactive techniques, pp. 263-270, 1985.
[3] Daniel Sanchez-Crespo Dalmau and Daniel Sanchez-Crespom, Core Techniques and
Algorithms in Game Programming, New Riders Publish, 2003.
[4] David H. Eberly, 3D Game Engine Design, Academic Press, 2001.
[5] James McCann, Nancy S. Polard, and Siddhartha S. Srinivasa, “Physics-based motion
retiming”, In 2006 ACM SIGGRAPH / Eurographics Symposium on Computer Animation,
2006.
[6] Michael Gleicher, Hyun Joon Shin, Lucas Kovar, and Andrew Jepsen, “Snap-together motion:
Assembling run-time animations,” ACM Transactions on Graphics, Vol. 22, Issue 3, pp.
