 
摘要 
本計畫為設計一套智慧車輛之自主導航系統，提供駕駛者導航資訊，尤其為路口防碰
撞安全資訊，由於路口交通環境常有建築物及障礙物等，除了影響駕駛人視線的能見度之
外，駕駛人也有可能因為特別注意某個物體，或者注意力渙散，而忽略行人的存在，導致
碰撞事故的發生。我們採用TI OMAP5912 嵌入式平台建置一套碰撞風險系統，並整合GPS 
接收器(WBT-201)、觸控式面板等周邊，搭配全球定位系統。此系統將針對交叉路口進行
碰撞風險評估，並依不同的風險程度顯示於車上單元，給予駕駛不同程度的警示，以達到
降低交叉路口事故發生率的目的。OBU 使用Qt 程式來設計應用程式作為風險程度顯示操
作介面,應用程式結合模糊碰撞風險評估演算法,而模糊決策以相對距離、速度、行人路口的
行進方向以及行人初始位置為歸屬函數，來建構碰撞風險評估的模糊規則庫，並計算出人
車可能發生碰撞的風險程度，將其結果顯示至介面來提醒駕駛者。 
 
關鍵字: 導航系統、路口防碰撞、全球定位系統、嵌入式系統、車輛安全系統、智慧車輛。 
 
 
Abstract 
In this project, an embedded vehicle-to-pedestrian collision avoidance system is presented. 
This system is developed by integrating the TI OMAP5912, GPS receiver(WBT-201), and touch 
panel. The system will calculate the collision risk of a particular vehicle, driving through the 
cross-road junction, and the results will be shown on the display of an On Board Unit (OBU) of 
that car. Specially, the position and relative distance between pedestrians and vehicles are 
determined with the aid of GPS and CCD cameras mounted on road side and inside the vehicle. 
Then the collision risk for a particular driver is calculated base on fuzzy inference scheme. 
Results will be given to the OMAP5912 in the case of high collision risk to warn the driver the 
dangerous situation he will be confronted with. Experimental results show that the applicability 
of the proposed approach. 
 
Keywords: Navigation system, intersection collision avoidance, GPS, embedded system, vehicle 
safety system, intelligent vehicles. 
 
 
資訊網路。目前手機已在無線通訊中發展甚是完善，但車輛導航系統中要與行人手機間架
設出資訊網路，這的確是一大挑戰，其一，台灣無線網路發展並不普及，而手機以3G 上
網費用更是高的嚇人。在Vehicle-to-Vehicle 道路交通環境方面，由Yusuke Sasaki 等人提出
一個以無線網路為架構[9]，利用GPS 與CCD Cameras，架設一個資訊網路。本研究處於研
究之初，行人與車輛碰撞風險研究，已有架構在手機上[10]，但卻無在車輛導航系統上架構
之研究，因此本研究之重點在於，架構碰撞風險程度於嵌入式平台上，並加入其他條件，
來使碰撞風險之判斷更加完善。 
 
三、研究方法 
本研究為三部份:硬體建構、軟體設計、風險判斷演算法。硬體建構，使用OMAP5912
是由德州儀器 (TI)所推出的發展套件，OMAP5912 可以有兩種發展模式，分別為WinCE及
Linux，本研究是以Linux Kernel 為主，其發展順序為:燒入Booting 軟體→設定並燒入Linux 
Kernel→決定Rootfilesystem 所需之Library。軟體設計，以Qt X11 及Qtopia Embedded 版
本，作為設計Graphical User Interface(使用者介面)之設計軟體，並加入本研究所需之
Library，一開始先設計GPS 接收儀之介面，確認取出之GPS Data 是正確的，接著將風險
判斷演算法，加入Qt 應用程式中，而風險判斷演算法是以Fuzzy Logic 為主，以四種歸屬
函數(Membership Function)，發展出72 條規則(Rule)。一開始至實際路口取得所需之經緯
度，及Heading angles，且以模擬之數據，產生Fuzzy Logic 所需之輸入(Input)，先確認演算
法之結果是否正確。接著將其Qt 應用程式所需之Library存入Rootfilesystem，最後將
Rootfilesystem 燒入OMAP5912，使其OMAP5912成為一獨立之系統。下一代的設備包含大
量採用高數據速率和即時信號處理技術的應用，同時需要DSP和GPP，此為OMAP技術提出
的背景。為即時信號處理的優化、功耗極低的DSP成為通訊和應用模組的主要處理器;GPP
居於次要地位，負責系統管理、指揮、控制及某些使用者介面的活動。OMAP優點在於OMAP
為開放式多媒體應用平臺，即OMAP未針對某種OS(Window、Linux or Mac)才能操作;特點
在於可程式規劃能力。 
最後，本研究之所以選用Linux Kernel 做為發展，主要為Linux 為open source，許多資
源上將可在網路上尋找出所要的解答，且ARM 是以Linux Kernel為主[11];演算法選用Fuzzy 
Logic，因為Fuzzy Logic 其特性為可將自然語言的“語意變數＂加以量化，倘若日後需增加
其它input，便能很輕易的加入系統的演算規則庫中。 
              
                      圖3-1 OMAP5912 of TEXAS INSTRUMENTS 
 
                       
                             圖 3-3:GPS 接收儀 
2.功能說明: 
a.使用最先進的衛星定位核心(u-blox超高感度定位引擎)。 
b.快速定位及追蹤16顆衛星的能力。 
c.高追蹤衛星靈敏度：-158 dBm 
d.內建SBAS解調器，不需額外硬體即可接收SBAS信號。 
e.支援 NMEA0183 2.3 版本輸出資料格式（ GPRMC，GPGSA，GPGGA，GPGSV）。 
f.軌跡記錄功能，像一個黑盒子般記錄位置、日期與時間，只需供給它電源即可。 
g.提供軌跡讀取與設定G-RAYS 2的工具程式（時光機器X），讓使用者能輕易的與G-RAYS 
2溝通。 
h. 無線藍芽傳輸功能，讓您使用起來輕鬆自在，而且距離長達10公尺。 
3.2.1 功能模組規劃[6] 
本研究的系統軟體與韌體架構，如下圖 3-4 所示: 
 
                        圖 3-4 軟體及韌體架構 
由圖 3-4 可知本研究之系統應用層(使用者介面)方面所有的操作功能均已Qt[15]所設計出來
的使用者介面來呈現風險程度警示，此Qt應用程式結合GPS接收儀擷取NMEA字串程式將
所擷取出來的資料用U演算法U加以計算，最後將所計算出來的資料呈現在使用者介面上，以
    Step1:在 kernel source 的路徑下輸入“make menuconfig”,接著會進入調整驅動程式
的設定選單介面，如圖 3-6 所示。 
 
         
圖 3-6“make menuconfig”的選單介面 
    Step2:首先先設定 QVLM driver 部分，在使用“make menuconfig”設定 kernel drivers
之前，必須先增加有關 QVLM 的驅動程式檔案，其修正動作是透過執行“patch-p1＜
qvlm_path_1.0”來完成，經過修正後在選單介面中才會有 QVLM 的選項，如圖 3-7 所
示。 
 
                      圖 3-7 QVLM Driver 設定 
    Step3:再來設定 USB device driver 部分，透過下列的驅動程式選項，來設定在我們系統
中一些裝置: 
          SCSI support 
             SCSI support 
             SCSI disk support 
          USB support 
             Support for USB(CONFIG_USB usbcore.o) 
             Preliminary USB filesystem(CONFIG_USB_DEVICEFS) 
             USB Mass Storage support(CONFIG_USB_STORAGE usb-storage.o) 
             OHCI(Compaq,iMacs,OPTi,SiS,Ali,…)support 
             OMAP1510/1610 OHCI-compatible host interface support 
燒錄到我們的平臺，好完成獨立的系統，接下來分別介紹 kernel 與 rootfilesystem 映像
檔的產生及燒錄流程。 
a. Kernel: 
    Step1: 
使用“make uImage”來產生 kernel 映像檔，而所產生的映像檔會命名為
uImage，建立存放的路徑為“$kernelpath/arch/arm/boot/”。 
    Step2: 
     複製映像檔以及 OMAP5912 所附的 u-boot.bin 軟體至 host pc 端的 TFTP server
目錄下，再透過系統 (HyperTerminal 端 )以 bootloader 開機時，使用“tftpboot 
0x10000000 u-boot.bin”、“tftpboot 0x10000000 uImage”commands 先將 OMAP5912 
u-boot 及 kernel 映像檔燒錄到 0x10000000 記憶體位址上，暫存 u-boot 及映像檔。 
  Step3:使用“protect off 1:0”command 先解除 OMAP5912 快閃記憶體初始位址;使
用 “erase 1:0”command 來清除 OMAP5912 快閃記憶體初始位址 ;使用 “erase 
1:8-15”command 來清除 kernel 的快閃記憶體位址。 
  Step4:使用“cp.b 0x10000000 0x0 Size_in_Hex”command 將 u-boot 檔燒錄到開機
載 入 設 定 的 記 憶 體 起 始 位 址 ; 使 用 “cp.b 0x10000000 0x100000 
Size_in_Hex”command 將 kernel 映像檔燒錄到 kernel 開機的記憶體位址，其中
Size_in_Hex 這個參數是代表 kernel 映像檔及 u-boot 檔大小(以十六進制計算)。 
b. Root file system:此節分為兩個部份，第一部分是使用 nfs 直接分享 rootfilesystem 目
錄，並可在 HyperTerminal 端瀏覽 rootfilesystem 目錄以節省燒錄時間，第二部份則
是直接將以設計好的 rootfilesystem 打包成映像檔，在燒錄到 OMAP5912，使
OMAP5912 成為獨立系統，再第二階段也是需要使用到 NFS。 
第一部份: 
  Step1:更改 boot loader 開機參數值,如下所示: 
 
 
 
  
Step2:reboot OMAP5912。 
第二部份: 
  Step1: 在 Linux Terminal 裡 先 安 裝 mkfs.jffs2 檔 案 ， 使 用 “yum install 
mtd-utils”command。 
  Step2:在 root filesystem 目錄下使用“mkfs.jffs2 –p –l –e 0x20000 –n –v -r”command
制作一個容量較小的 JFFS2 格式之檔案系統映像檔 filesys.jffs2。 
#setenv bootargs console=ttyS0,115200n8 noinitrd rw 
ip=192.168.1.201:192.168.1.101:192.168.1.255:255.255.255.0:osk:eth
0:off root=/dev/nfs rw 
nfsroot=192.168.1.101:/omap/sa_prj/rootfs,nolock mem=32M 
1. 使用由 Qt 所提供的工具，Qt designer 來編輯 GUI，編輯完成後將其檔案存成
filename.ui 檔案格式。 
2. 執行 qmake –project 會將 filename.ui 轉成 ui_filename.h，再這個標頭檔中會自動產
生成一個新的 class 來宣告步驟 1 所需要的物件。 
3. 編譯 filename.h and filename.cpp(如下所示)讓主要執行的 class 繼承由步驟 2 所產生
的 class，以便延伸日後所需的 GUI 應用程式功能。 
               .h 
                
               .cpp 
                 
4. 執行 qmake 會產生一 Makefile 檔，再執行 make 來進行編譯便可得到其應用程式。
其中 qmake command 是 Qt 所提供的簡易 tool，它可以產生一 Makefile 檔，當使用
者在產生 Makefile 後，再執行 make 時，即會從 Termainal 得知語法是否有錯誤。 
7. QVLM Library: 
由 OMAP5912 所附之軟體,用來以 Linux Kernel 為主時,將其致能 LCD Device 程式以
“include”方式加入到 Qt 發展應用程式中,以便開啟 Q-VGA LCD 模組。 
8. QextSerialPort Library[18]: 
QextSerialPort 是 Qt 第三方多個串列端口(SerialPort)的開放源代碼(open source)類(class)
的集合，主要用來提供交叉平台(cross-platform)可以用串列端口進行操作，它對於 POSIX
及 Windows 這兩大系統都有提供支援。 
 
3.2.3 發展流程圖 
  本小節將以一流程圖(如圖 3-9)，說明本研究整個軟硬體發展順序，接著會再以文字說明
加以補充。 
第二個辯護是描述模糊系統理論唯一的特色與證明模糊系統理論存在性在工程上是一個獨
立分支的性質。對許多實際系統來說，重要資料的來源為二:一，用自然語言來描述他們對
這系統知識的人類專家;二，依據物理法則推導知覺測量與數學模型。以下我們將以 FIS 
(Fuzzy Inference System)流程圖來概敘本研究是如何以“模糊”來建立碰撞風險警示系統，如
圖 3-10: 
 
              圖3-10 Fuzzy Inference System之流程圖[19] 
 
而以下將分別介紹本研究所使用的歸屬函數(Membership function)，以及如何建立規則庫
(Rules base)，最後使用何種解模糊化(Defuzzifiers)，進而得到最後的風險程度(Risk degree)
之輸出值。 
1. 歸屬函數(Membership function):如 2.3.1 節所述歸屬函數分為幾種類型，而本研究所使用
的是高斯型歸屬函數，使用移動車輛及行人之間的相對速度(Relative Speed)和相對距離
(Relative Distance)，行人的移動方向(Direction)和初始位置(Initial Position)，其中初始位
置將會加以說明如何得知，而以四個條件來制定前件部之歸屬函數，如圖 3-11(a)～
3-11(d)。 
 
初始位置的歸屬函數:主要將行人是在車輛的左邊或右邊，作量化的處理，也就是用來
解決車輛與行人軌跡之垂直問題，在數學上可知一平面上兩點可得知一直線方程式(如
cbyax =+ )，在本研究上我們用 c< , c> 值來代表左邊或右邊，如圖 3-12 所示: 
 
        圖 3-12 直線方程式 
由 經 緯 度 可 得 知 目 前 車 輛 的 一 直 線 方 程 式 ， 以 本 研 究 為 例 ， 假 設 取
(25.042540,121.537105) 、 (25.040159,121.53743) 可 得 知 一 直 線 方 程 式
為: 42.915326.7 =− yx ,Let 42.915=cv ，之後再將接收進來的行人經緯度帶入此一
方程式，即可得一c值，此時 Let cpc = ，再令一函式: cvcp −=ρ ,將 cpcv, 帶
入即可得ρ 值，其ρ 值則為初始位置的歸屬函數左界與右界。 
2. 規則庫(Rules base): 
把明確的系統輸入資料轉換成適當的語意式模糊資訊,在 Fuzzy Logic 稱為: 語句變數
(Linguistic Variables),首先我們先確定語句變數範圍並且整理為如表 3-2: 
最後將其語句變數整理一規則表(Rules Table),如表 3-3 所示: 
 
表 3-3 規則表 
 
 
四、研究成果 
當一般車輛加速至100 公里約5、6 秒，人體反應時間約0.2 秒，而包括反映時間到完全停
止煞車約在3.1 秒內，而嵌入式系統計算及3G 資料傳輸的時間不到一秒。所以，使用本研
究的系統在駕駛者收到警示後減速甚至煞車，就能避免憾事發生。 
4.1 實驗建置 
如前一章節所述，分為軟體與硬體方面;本研究須先架設其嵌入式系統，才能進入軟體設計
程序，軟體部分則以Qt 設計軟體為開發工具，首先必須因為GPS 接收儀所接收進來的數
據為NMEA 格式，故必須先將GPS 接收儀所接收進來的數據加以處理，取出“$GPRMC＂
字串裡的經度、緯度、速度、方向、HDOP 等數據。其Qt 應用程式即使用者介面如圖4.1、
4.2 所示。 
  
圖4.1 GPS 接收儀顯示介面 圖4.2 GPS 接收儀顯示介面在開發版上 
 
接著開發風險程度警示介面，為了節省外出實際接收數據時間，所以本研究先至實際路口
取得所需之經緯度，再將FIS 風險程度判斷演算法與Qt 應用程式結合，以迭加方式模擬出
車輛與行人之軌跡，先行測試FIS 風險程度判斷演算法是否正確。其流程圖如圖4.3 所示。
最後發展風險程度警示介面如圖4.4、4.5 所示。 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 4.8(a)行人時速 7.2km/h，車速 30km/h 之模擬圖 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 4.8(b)行人時速 7.2km/h，車速 60km/h 之模擬圖 
 
 
五、結論 
本計畫使用FIS 演算法對於風險程度判斷上的實用性，並選用嵌入式系統是因為
OMAP5912 所使用的ARM926EJ-S Core，足以用來運算演算法，且以Linux Kernel 能自行
設計操作介面，自由度很大。但是本研究所使用的發展平台的Linux Kernel 版本為2.4，在
建構整個嵌入式系統上，多了許多繁雜步驟，例如touch panel 部分如是2.6 版本則可以不
用自行建構這一部分;以嵌入式入門而言，OMAP5912 是很好的練習平臺，它可以很完整幫
助研究者建立整個流程。本研究尚有許多需改善、加強之處，以下大致分為兩大部分，作
為延續未來研究工作的方向: 
1. 在硬體方面，本研究已完成整個嵌入式平台架構，Booting、Linux Kernel、Root 
Filesystem，以及Qt Application Program，需加強的部份為通訊部份，因為本研究是以模擬
行人軌跡來做風險程度之判斷，所以在與行人通訊方面尚未建立。以OMAP5912 來講，有
一組無線模組，只要外接無線網卡即可。另外Qt Application Program 也可以加入GIS 系
統，誠如上文所說即使GPS 接收儀已到公尺等級，但在都市之中，訊號漂移情況影響很大，
加入GIS 系統，便能使得地圖比對(Mapping Match)工作更加精準，也能讓整個GUI 看起來
更加生動。 
2. 在警示部份，也就是FIS 演算法，本研究是以相對距離、相對速度、行人方向和初始位
置作風險評估，未來可以加入其他Membership Function 如海拔高度之類，可以用來判斷是
否有一方在陸橋上;由於嵌入式系統的發展平臺，在運算方面以及記憶體方面，都有比較大
的自由度，因此演算法也可以加入其他演算法，如類神經網路(Neural Network)，使得所計
算出來的風險程度，可以更為精準。 
 
Reference 
[1] 交通安全教育網, http://www.hpps.ntct.edu.tw/traffic/traffic.htm. 
[2] 台北市政府警察局交通大隊, http://td.tcpd.gov.tw/ct.asp?xItem=75056&ctNode=17787& 
mp=108191. 
[3] Z. Wen-hui, X. Hong-guo, W. Biao, and L. Sheng-qin, "Safety management of traffic 
accident scene based on system dynamics," International Conference on Intelligent Computation 
Technology and Automation, pp. 482-485, 2008. 
[4] H. Weiming, X. Xuejuan, D. Xie, T. Tieniu, and S. Maybank, "Traffic accident prediction 
using 3-D model-based vehicle tracking," IEEE Transactions on Vehicular Technology, vol. 53, 
no. 3, May 2004, pp. 677-694. 
[5] 紀佳宏，應用即時車輛導航系統之GPS/GIS 整合設計，交通大學電機與控制工程研究
所碩士論文，2003. 
[6] 林仕偉，整合GPS/GIS 於嵌入式平台之主動式車輛導航系統，交通大學電機與控制工
程研究所碩士論文，2007. 
[7] M. A. Quddus, R. B. Noland, and W. Y. Ochieng, "A high accuracy fuzzy logic based map 
matching algorithm for road transport," Journal of Intelligent Transportation Systems, 2006, pp. 
103-115. 
[8] S. Chika, Y. Nakamura, and T. Hashimoto, "Prototype of pedestrian-to-vehicle 
communication system for the prevention of pedestrian accidents using both 3G wireless and 
WLAN communication," International Symposium on Wireless Pervasive Computing, 2008, pp. 
764-767. 
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
