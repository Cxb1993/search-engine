 2
前言 
最佳化(Optimization)理論的發展至今相當成熟，其應用更是遍及各個領域，例如：航太
工業、機械設計、土木工程、工商管理、經濟領域等各種問題，都能用最佳化的方法分析得
到最佳的設計。 
結構最佳化設計可以分為兩個部分，第一部份為結構分析，例如使用有限元素法(finite 
element method)進行物理問題之分析；第二部分為利用不同的最佳化演算法，進行最佳化問
題的分析，以求取最佳化問題的最佳解。最佳化問題與一般分析的問題有一個不同的特性，
那就是最佳化分析需要重覆的迭代(recursive iteration)運算。對於使用商業或非商業軟體來做
有限元素分析，每一次的迭代過程，就代表了一次以上的有限元素分析。因此解物理問題的
最佳化分析，除了需要有好的最佳化演算工具，也要有快速及分析功能強大的有限元素分析
程式。 
隨著電腦分析的能力快速成長，市面上泛用型的有限元素商業軟體，已能做愈來愈複雜
之模擬，其所建立的分析模型(analysis model)，不僅準確且分析效率高。然而，在最佳化應
用的相關文獻中，大部分的研究者仍以自行撰寫的分析程式驗證所提出的最佳化演算法、或
是最佳化理論的改善。自行撰寫之分析程式在效率及應用上皆無法和商業軟體相比，也因此
文獻上所探討的結構最佳化問題大部分屬於較簡單的梁、桁架、構架等，對於分析門檻較高
(即需要耗費非常多的時間來開發分析的軟體)、分析問題較複雜(如幾何非線性、材料非線
性等)的問題則不多見。 
本研究團隊目前已經使用先進軟體技術，設計出一個可以串連各種最佳化分析程式與多
種泛用型有限元素商業軟體的最佳化設計系統架構(張民昆 2004；林士傑 2005；李宗豪 
2005)，目的在於建立一套聯繫介面，溝通有限元素商業軟體和最佳化分析程式，對於使用
者而言，將不再需要自行撰寫有限元素分析程式，只要使用商業軟體(ABAQUS、ANSYS)
建立分析模型，並選擇最佳化分析程式(CFSQP、IMSL、GA)即可進行最佳化設計。透過此
系統，在最佳化研究上，已擁有功能強大的商業軟體作為分析引擎。 
 
研究目的 
結構最佳化設計主要可以分為兩個部分，第一部分為利用各種不同的分析方法，例如有
限元素法(finite element method)，進行物理問題之分析以得到分析結果；第二部分為利用不
同的最佳化演算法，例如數學規劃法、基因演算法等，進行最佳化問題之分析，以求取最佳
化問題的最佳解。從過去的文獻中可以發現，大部分的結構最佳化問題都局限於桁架(truss)、
梁(beam)、構架(frame)類型結構之線彈性問題上，其主要原因為分析程式多由研究者自行開
發，因此大多以此類較簡單的結構及分析型式作為結構最佳化設計的題目。 
本研究之目的分為兩個部分，第一個是在演算法和函數計算部分，擴充現有之最佳化設
計系統。原有系統的最佳化演算法為數學規劃法和基因演算法，前者收斂速度快，但無法跳
脫局部最小解的陷阱，後者雖然為求解全域解之演算法，但無其他方法互相驗證，因此本研
究將新增另一搜尋全域解之演算法—模擬退火法，和基因演算法互相驗證比較。函數計算類
別的擴充，主要是提供使用者更多的選擇，最佳化問題可以探討的物理量很多，譬如位移、
結構重量、元素應力應變、極限載重等等，系統提供越多項目，使用者就能做更多應用。 
第二部分為應用最佳化設計系統(李宗豪 2005)於板、殼結構之最佳化設計。最佳化分
析問題的應用，系統開發時已探討過梁、桁架及平板等基本之最佳化設計，而較為複雜的板、
殼結構，儘管在現實生活裡應用很廣，如一般建築的薄壁、補強板、船艙、甲板等等，但文
獻上卻礙於分析工具能力不足而討論不多，本研究的目的即為利用此系統對板、殼結構做最
佳化分析。 
 
式來解決問題。以下將簡介此最佳化設計系統的優點及架構。 
本系統特點為利用物件導向技術來開發，將系統責任區分為驅動套裝軟體分析、擷取分
析結果、更新有限元素模型資料、定義目標函數與約束條件，及整合不同之最佳化分析程式
等五個模組，系統架構如圖二，因此相當具有彈性與擴充性，可抽換最佳化程式，也可以加
入新的套裝軟體。它提供統一格式的文字檔，讓使用者定義不同的最佳化問題，包括設計變
數資訊之定義、目標函數與約束條件計算之定義(李宗豪 2005)。 
<<介面>>
RepetitiveAnalysis
<<interface>>
Bridge Pattern (1)
Bridge Pattern (2)
Strategy Pattern (1)
Strategy Pattern (2)
+Modify()
Section
+Modify()
Coordinate
+Modify()
Element_Removal
+Modify()
Model_Modification
+ExecuteAnalysis()
+WaitForCompletion()
+GetAnalysisStatus()
#_jobname
#_isFinished
FEA
ABAQUSANSYS
+GetData()
+CreateFile()
InputProcessor
+GetData()
+CreateFile()
OutputProcessor
DPI_ABAQUS
DPI_ANSYS
+Optimize()
+CalculateFunctionValue()
+CalculateGradientValue()
+UpdateFEMModel()
+GetData()
+Analysis()
#_obj
#_cntr
#num_of_FEA_calls
OptDesign
+GetValue()
func_evaluation
+GetValue()
displacement
+GetValue()
element_stress
+GetValue()
frequency
+GetValue()
xsum
#ParseModelInput()
#ParseResultOutput()
#Create()
+GetData()
+CreateFile()
-_dpi
Data_Processor
+ParseModelInput()
+ParseResultOutput()
+Create()
Data_Processor_Imp
 
圖二 最佳化設計系統類別圖(李宗豪 2005) 
應用此系統結合套裝軟體強大的分析能力，使用者就不需要精通有限元素的理論以及最
佳化演算法，只需要專注於最佳化分析程式和套裝軟體的使用上，即可以利用本系統將最佳
化設計應用於分析門檻較高、較複雜的問題上（如：非線性問題、板結構、殼結構、膜結構、
索結構及熱傳問題的最佳化設計）。以下將分別介紹此系統架構中的五個模組及使用方法: 
 
1. 最佳化設計模組 
    本系統由一控制者(Controller)負責控制程式，包括產生需要的模組(或物件)、控制所
有最佳化設計系統的程式流程、以及負責各模組間訊息的傳遞。因此，控制者被設計為一個
接收參數(包括最佳化問題之參數、系統參數及有限元素模型資料)、產生所需物件、負責訊
息傳遞的控制者介面—重複性分析(RepetitiveAnalysis)。 
而最佳化設計模組 (OptDesign module)則利用物件導向設計中的物件複合 (object 
composition)，將 RepetitiveAnalysis 所產生的物件，包括有限元素分析模組(FEA module)、
資料處理模組(Data_Processor module)、函數計算模組(func_evaluation module)、以及有限元
素模型更新模組(Model_Modification module)，由 OptDesign一併來管理其物件，以進行最佳
化設計的分析，OptDesign類別圖參見圖三。 
OptDesign 類別的方法包括：啟動最佳化分析的 Optimize()、執行有限元素分析的
Analysis()、計算函數值與梯值值的 CalculateFunctionValue()與 CalculateGradientValue()、取
得有限元素分析之結果的 GetData()、以及更新設計變數對應之有限元素模型資料的
UpdateFEMModel()。其中，Analysis()方法需要透過 FEA類別來執行分析；GetData()方法仰
 4
目前系統架構所考慮到的函數計算有節點位移的 displacement 類別、元素應力的
element_stress類別、整體重量的 weight類別、元素應變的 element_strain類別、挫屈載重的
buckling_load類別、模態振動頻率的 frequency類別、元素應變能密度的 energy_density類別、
外力作功的 external_work類別、節點切線應力誤差平方和的 stress_var類別、設計變數總和
的 xsum類別、以及設計變數組合的 xcomb類別等。 
透過 func_evaluation類別提供的介面，配合使用者給予的最佳化問題定義輸入檔，最佳
化設計系統可以在需要計算函數值時，自動地由 Result物件與Model物件擷取所需的資料，
再按定義計算所需要的函數值(李宗豪 2005)。 
6. 使用者介面說明 
使用者在使用最佳化設計系統進行最佳化分析時，必須準備三個文字輸入檔，分別為.ifo
檔、有限元素分析輸入檔以及.opt 檔。.ifo 檔為提供資訊給系統，包括使用的有限元素套裝
軟體及最佳化工具；有限元素分析輸入檔則需依照不同的有限元素軟體而有不同的副檔名
(如 ABAQUS為.inp ，ANSYS為.ipt)；.opt檔是用於定義最佳化設計問題的參數，和系統關
係最為密切。 
在.opt檔中，使用者必須定義問題參數、設計變數資訊、目標函數、約束條件以及模型更
新。其中問題參數包括設計變數個數、目標函數個數、等式約束條件或不等式約束條件的個
數、收斂精度與最大迭代次數，如果此問題是使用結構演進法(ESO)，則需定義初始移除比
率 RR、演進比率 、最大移除比率ERR maxRR 、最大體積移除率 maxRV 以及最大演進次數
maxITER 等參數。設計變數資訊的部分，包括設計變數名稱、初始值、上下限值。目標函數、
約束條件以及模型更新的定義，根據題目類型的不同可以有多種選擇。 
<<介面>>
RepetitiveAnalysis
< interface>>
FEA Model_Modification
+Optimize()
+CalculateFunctionValue()
+CalculateGradientValue()
+UpdateFEMModel()
+GetData()
+Analysis()
#_obj
#_cntr
#num_of_FEA_calls
OptDesign
ti ize()
+ alculate unction alue ()
+CalculateGradientValue ()
+UpdateFEMModel ()
+GetData()
+Analysis ()Data_Processor func_evaluation
GA MPESO
+ExecuteAnalysis ()
+WaitForCompletion ()
+GetAnalysisStatus ()
#_jobname
#_isFinished
FEA
ABAQUSANSYS
Bridge Pattern
<<介面>>
RepetitiveAnalysis
<<interface >
+Optimize()
+CalculateFunctionValue()
+CalculateGradientValue()
+UpdateFEMModel()
+GetData()
+Analysis()
#_obj
#_cntr
#num_of_FEA_calls
OptDesign
ti ize()
+ alculateFunctionValue ()
+CalculateGradientValue ()
+UpdateFEMModel ()
+GetData()
+Analysis()
圖三 OptDesign類別圖(李宗豪 2005) 圖四 FEA類別圖(李宗豪 2005) 
Bridge Pattern
Model Result
+GetData()
+CreateFile ()
InputProcessor
+GetData()
+CreateFile ()
OutputProcessor
+ParseModelInput ()
+ParseResultOutput ()
+Create()
Data_Processor_Imp
#ParseModelInput ()
#ParseResultOutput ()
#Create()
+GetData()
+CreateFile ()
-_dpi
Data_Processor
DPI_ABAQUSDPI_ANSYS
Data_Processor _Imp*_dpi
_dpi->ParseResultOutput ()
+Modify()
Section
+Modify()
Coordinate
+Modify()
Element_Removal
Strategy Pattern
Model
<<介面>>
RepetitiveAnalysis
<<interface>>
+Optimize()
+CalculateFunctionValue ()
+CalculateGradientValue ()
+UpdateFEMModel ()
+GetData()
+Analysis()
#_obj
#_cntr
#num_of_FEA_calls
OptDesign
+Modify()
Model_Modification
 6
Initialize parameters
Perform a cycle of random moves , each along 
one coordinate direction . Accept or reject each 
point according to the Metropolis criterion . 
Record the optimum point reached so far .
Adjust step vector v.
Reset no. cycles to 0.
Reduce temperature .
Reset no. adjustments to 0.
Set current point to the optimum .
No. cycles ≥NCYC
No. step 
adjustments ≥ NTP
Stop criterion 
satisfied ?
End
no
no
no
yes
yes
yes
 
圖八 SA 流程圖(Corana 1987) 
 
本研究已應用最佳化設計系統，探討不同設計變數類型之最佳化問題。傳統最佳化設計
是將所有設計變數一起考慮，按照使用的演算方法，搜尋至一組最佳設計，使得目標函數達
到最佳值，同時滿足各項約束條件。本研究則結合不同類型的最佳化問題，針對同一結構模
型進行最佳化設計，並應用在板、殼形狀最佳化設計，本研究將採用文獻(Ansola et al. 2002)
建議的方式，應用 B-Splines及 Coons Patches方法產生曲殼形狀，以下將分別說明。 
由於最佳化設計系統架構明確，因此本研究將套用 Façade Pattern設計模式(Gamma et al. 
1995)來處理此問題，可以避免影響到原先的架構。Façade pattern 之目的是提供子系統
(subsystem)統一的介面(interface)。此處將設計MainController物件，其介面包含： 
(1)可讀取兩組或兩組以上之最佳化問題參數(.opt)及分析資訊(.ifo)，此功能原先是在
Controller物件裡，現在將它放在 MainController，再按照分析的問題給予 Controller物件對
應的參數與資訊，如此無須更改原先系統即可完成輸入檔的擴充。 
(2)儲存每一組最佳化設計問題之最佳解及最佳化的設計變數值。此目的為當某一組最
佳化設計完成之後，系統要執行下一組最佳化分析之前，必須將本次的最佳化結果更新至結
構模型(model)，以及問題參數(.opt)的初始設計部分，以供下一回分析時直接採用這次的最
佳化結果當初始設計，並以更新後的模型當作下一組最佳化設計的模型，例如進行完形狀最
佳化分析之後，以此形狀為設計領域，再進行拓樸最佳化設計，完成後，再從上次的最佳形
狀開始進行這一次的形狀最佳化設計。另外，當所有最佳化問題都執行過一回合之後，需藉
由和上一回合的目標函數值比較，判斷整體問題是否已達收斂，以決定程式是否結束。 
(3)控制最佳化程式流程。當一組最佳化執行完畢之後，負責清除以 singleton 產生之物
 8
 10
n
此方法即為傳統之 Coons Patches方法。若考慮離散點的邊界，以陣列表示，令各點為
，假設,  , 0,...,  ,    0,...,i j i m j= =b 3m n= = ，如下： 
00 01 02 03
10 13
20 23
30 31 32 33
b b b b
b b
b b
b b b b
 
則中間各點同樣可用內差的方式求得，表示為： 
[ ]
, 0, , ,0
0,0 0,
,
,0 ,
(1 / ) / (1 / )
1 /
 / 1 / /
/
i j j m j i
n
i n
m m n
i m i m j n
j n
j n i m i m
j n
= − + + −
−⎡ ⎤ ⎡ ⎤+ − − ⎢ ⎥ ⎢ ⎥⎣ ⎦⎣ ⎦
b b b b
b b
b
b b
 
上述方法即為 Discrete Coons Patch，由此方法做出的曲面如圖十，黑色點為已知邊界節
點，灰色點則為內差求得之中間節點。為了使曲面形狀更好，文獻上(Farin and Hansford 1999)
提供另一個方式求取中間節點，延續 Discrete Coons Patch的演算方式，考慮一個3 3× 的陣
列，表示如下： 
1, 1 , 1 1, 1
1,     ,     1,    
1, 1 , 1 1, 1
 
i j i j i j
i j i j i j
i j i j i j
− + + +
− +
+
− − − +
b b b
b b b
b b b −
 
若邊界 8個點皆為已知，則按照 Discrete Coons Patch，則3 3× 的陣列的中間節點 可
表示為： 
,i jb
, 1, 1 1, 1 1, 1 1, 1
, 1 1, 1, , 1
1 ( )
4
1      ( )
2
i j i j i j i j i j
i j i j i j i j
− + + + − − + −
+ − + −
= − + + +
+ + + +
b b b b b
b b b b
 
以此類推，大小為 的陣列，必有( 1) ( 1m n+ × + ) )( 1) ( 1m n− × − 個未知點，將其切分為3 3×
的陣列，即可得到 ( 1 條方程式，各點內差之值即為此聯立方程組的解，由此得到
的曲面會更漂亮，圖十一為圖十的邊界採用此方式求得的曲面圖形。 
) ( 1m n− × − )
本研究將兩種方法實做且加入系統中。第一種方法較易撰寫，而第二種方法—解聯立方
程組的實做方式，撰寫方式是先將各個節點的關係以節點編號紀錄，再將係數及已知點按照
順序存入陣列，組成 的形式，然後採用 IMSL數學函式庫中之第一章線性規劃的 lin_sol_gen()
函式 (IMSL C Numerical Library 2003)求解，得到對應的各點數值，即為所求之曲面形狀。 
圖十 Discrete Coons Patches示意圖一(Farin 
and Hansford 1999) 
圖十一 Discrete Coons Patches示意圖二(Farin 
and Hansford 1999) 
 
算例一： 
此例題為數學問題，用於測試模擬退火法之正確性(Ashok 2003)。下列方程式表示彈簧
算例二： 
此例題為自行設計之結構尺寸最佳化問題，考慮雙簡支梁之結構，參見圖十四，桿件長
分別為 1 m及 1.2 m，材料性質為：E = 200GPa、ν =0.3、密度 ρ =1.0 kg/cm3，此結構在O點
受到集中載重 1000 kN，目標函數是使整體結構重量最輕，兩根桿件為矩形斷面(RECT)，固
定梁深 h =2cm，每根梁的梁寬 1X 、 2X 為設計變數，上下限在3 之間，約束條件
為O點之垂直位移需小於 4.5 cm (即 0.045 m)。 
 cm ~ 15 cm
本例題採用 ABAQUS梁元素之 B32(3-node quadratic beam)模擬，將本題的設計空間繪
製在 1X - 2X 平面上，參見圖十五，可看出可行解的區域在曲線的右方，此問題存在兩個極
值。此例題應用最佳化設計系統求解，並採用三種最佳化方法互相比較：傳統最佳化方法
CFSQP、基因演算法 GA和本章實做之模擬退火法 SA。三種演算法都可以得到最佳解，但
是 CFSQP會受到初始設計影響，本例題給予兩組不同的初始設計，最佳化的結果並不一樣，
只有一組為最佳解，另一組僅為局部極小解。而其他兩種演算方法(GA、SA)則都能脫離局
部極小解，搜尋到全域最佳解，本題最佳化結果列於表二。 
此例題應用最佳化設計系統求解，並且為有束制之最佳化問題，可以驗證模擬退火法和
系統連結正確，以及應用懲罰函數處理有約束條件的問題亦為可行。藉由和傳統最佳化方法
及基因演算法的比較，也證實模擬退火法應用在結構最佳化設計之優點，可跳脫局部解求得
全域最佳解。 
表二  算例二之最佳化結果 
 Initial Design 
1X , 2X  (cm) 
Optimal Design 
1X , 2X  (cm) 
Objective 
Function (kg) 
( 3.00 , 14.00 ) ( 3.0000 , 13.5325 ) 3847.80 CFSQP 
( 5.00 , 5.00 ) ( 11.3186 , 3.0029 ) 2984.40 
Genetic Algorithm (GA) ( 11.2576 , 3.0000 ) 2971.52 
Simulated Annealing (SA) ( 11.2574 , 3.0002 ) 2971.53 
 
1000 kN
1.2 m
1 m
x1
x2
O
0
2
4
6
8
10
12
14
16
0 2 4 6 8 10 12 14 16
Feasible
 Region
X2
X1
圖十四 算例二之結構示意圖 圖十五 算例二之設計空間圖 
 
算例三：
此例題為一18根桿件之桁架結構(Hansen and Vanderplaats 1990)，桿件初始幾何形狀、
節點編號、邊界條件與外力加載情形參見圖十六，材料性質為 、 ，約7E=10 psi 3=0.1 lb/inρ
 12
料分配，因此設計變數為各元素厚度 ，上下限分別為h 0.0285ubh m= 與 。兩部
分最佳化的目標函數皆為最小化結構應變能(strain energy)，約束條件則為整體體積需小於或
等於初始體積。應變能(strain energy)定義如下： 
0.0001lbh m=
1
2
U =∑ Td kd  
其中k為勁度矩陣(stiffness matrix)，由於結構順從度(compliance)的定義為(Ansola et al. 
2002)： 
2L U= =TD P  
由此可知外力向量P固定時，位移愈小應變能(strain energy)愈小。因此本例題將以外力
加載處之位移作為目標函數。 
本例題採用 ABAQUS的廣義殼元素 S4R(四節點)模擬，演算法使用 CFSQP。考慮結構
形狀對稱，因此採用左邊平板模擬，切分元素(element)為30 10× 共300個元素。圖十九為文
獻上最佳化的結果，圖二十為本研究的最佳化結果，兩者在形狀方面，最佳化的設計都是
90α = °，而在拓樸方面，兩者分佈亦相當吻合。圖二十一及圖二十二則分別為 90α = °時的
結構 Von Mises 應力分佈圖與採用結構演進法(ESO)所得到之拓樸分佈，兩者趨勢亦相似。
結果顯示此結構的形狀與拓樸最佳化的結果類似柱結構。 
 
1.0 m
2.4 m
fixed
fixed
α
F=1N
45
E 210GPa
0.3
iniα
ν
=
=
=
o
圖十八 算例四兩片板結構示意圖(Ansola et 
al. 2002) 
圖十九 算例四之最佳化結果(Ansola et al. 
2002) 
圖二十 算例四之最佳化結果(本研究) 圖二十一  算例四
90α = °時 Von Mises應力分
佈圖 
 14
 
 
圖二十五 算例五之初始設計之 Von Mises應力
分佈 
圖二十六 算例五之初始設計拓樸分佈(Ansola 
et al. 2002) 
 
圖二十八 算例五之最佳化設計結果(本研究)
 
圖二十七 算例五之最佳化設計結果(Ansola et 
al. 2002) 
圖二十九 以最佳化形狀做 ESO之結果(本研究)
 
 16
 18
Davidor, Y. (1991), Genetic Algorithms and Robotics – A Heuristic Strategy for Optimization, 
World Scientific, Singapore. 
Gamma, E., Helm, R., Johnson, R., and Vlissides, J. (1995), Design patterns: Elements of 
Reusable Object-Oriented Software, Addison-Wesley, USA. 
Gen, M. and Cheng, R. (2000), Genetic Algorithms & Engineering Optimization, John Wiley & 
Sons, USA. 
Gerald Farin and Dianne Hansford (1999), “Discrete Coons Patches,” Computer Aided Geometric 
Design, Vol. 16, pp.691-700. 
Gu, Y.X., Zhao, G.Z., Zhang, H.W., Kang, Z. and Grandhi, R.V. (2000), “Buckling design 
optimization of complex built-up structures with shape and size variables,” Structural and 
Multidisciplinary Optimization, Vol. 19, pp. 183-191. 
Hansen, S.R. and Vanderplaats G.N. (1990), “Approximation Method for Configuration 
Optimization of Trusses,” AIAA Journal, Vol. 28, No. 1, pp. 161-168. 
IMSL C Numerical Library (2003), Visual Numerics®. 
Jog, C.S., (2004), “Higher-order shell elements based on a Cosserat model, and their use in the 
topology design of structures,” Computer Methods in Applied Mechanics and Engineering, 
Vol. 193, pp.2191-2220. 
Khan, M.R. (1984), “Optimality Criterion Techniques Applied to Frames Having General 
Cross-Sectional Relationships,” AIAA Journal, Vol. 22, No. 5, pp. 669-676. 
Kirsch, U. (1993), Structural Optimization fundamentals and Applications, Springer-Verlag, 
Berlin Heidelberg. 
Lawrence, C., Zhou, J. L., and Tits, A. L. (1997), User's Guide for CFSQP Version 2.5. 
Vanderplaats, G. N. and Salajegheh, E. (1989), “New approximation method for stress constraints 
in structural synthesis,” AIAA Journal, Vol. 27, No.3, pp. 352-358. 
Venkayya, V. B. (1993), Structural Optimization: Status and Promise, AIAA Series: Progress in 
Aeronautics and Astronautics, Vol. 150, AIAA, Washington D. C.. 
Schittkowski, K. (1981), “The nonlinear programming method of Wilson, Han and Powell with an 
Augmented Lagrangian type line search function, part 1: convergence analysis; part 2: an 
efficient implementation with least squares subproblems,” Numerische Mathematik, Vol. 5, 
pp. 485-500. 
Xie, Y. M. and Steven, G. P. (1993), “A simple evolutionary procedure for structural 
optimization,” Computers and Structures, Vol. 49, No. 5, pp. 885-896. 
黃仲偉 (1996)，折減法在結構最佳化及非線性分析之應用，國立台灣大學土木工程學研究
所碩士論文。 
黃仲偉 (2003)，結合拓樸最佳化之壓拉桿模型理論與軟體開發，國立台灣大學土木工程學
研究所博士論文。 
黃睿 (1993)，發展一套具正、逆向工程及網路功能之電腦輔助幾何設計軟體，私立逢甲大
學應用數學研究所碩士論文。 
張民昆 (2004)，應用有限元素軟體 ABAQUS於結構最佳化設計之系統開發，國立台灣大學
土木工程學研究所碩士論文。 
郭建青、李彥、王洪勝、馬健(2004)，”應用單純形-模擬退火混合算法估計河流水質參數”，
水科學進展，第十五卷，第六期，第 765-769頁。 
林士傑 (2005)，以 Python整合有限元素商業軟體於重複性分析計算架構之開發：應用於結
構可靠度，國立台灣大學土木工程學研究所碩士論文。 
林裕顥 (2001)，模擬退火法在解析蛋白質螺旋結構的應用，國立中山大學物理學研究所碩
士論文。 
林瑞宗 (1997)，加勁圓柱薄殼強度之有限元素分析，國立台灣大學土木工程學研究所碩士
論文。 
李宗豪 (2005)，以有限元素套裝軟體為分析引擎之最佳化設計系統架構開發，國立台灣大
