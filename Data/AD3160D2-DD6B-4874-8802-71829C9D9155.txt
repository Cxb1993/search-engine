視覺化方面，我們將設計針對行動裝置的特性，重新設計
UI，功能將包含過去的搜尋、串流、情緒分類、推薦、分
群、風格分析等，並利用 GPS 與行動裝置上的感測器、以及
加速度偵測器，提供 location-based service 與 gesture 
control 等功能。 
整個系統，將以開放式的架構來實作，並將重要的核心模
組，實作成 Android Framework 或 Library，達到軟體共
享、與計畫的延續性。 
中文關鍵詞： 音樂資料探勘、特徵擷取、MFCCs、行動裝置 
英 文 摘 要 ： In the client-server architecture, we have been 
developed several systems and prototypes to provide 
various kinds of music information services, 
including streaming, classification, tagging and 
retrieval service. 
In this proposal, we first combine our previous 
subsystems to design an integrated system of personal 
music service. In addition, the integrated system 
will be dedicated to the mobile device running on the 
Android platform, rather than just migrating the 
original subsystems on mobile device. Considering 
limited resource on mobile device (weak computation 
power, small screen size, less memory capacity, and 
low bandwidth), we identify some working items, i.e., 
system design, feature extraction, user interface, 
and genre analysis. 
Feature extraction is one of key issues for content-
based music information retrieval. MFCCs are 
effective features of music object. However, large 
amount of high-dimensional MFCCs cannot be processed 
on mobile device with limited computation power. In 
the project, we apply SNN to reduce the 
dimensionality of MFCCs, and to compute similarity 
between MFCCs in the non-Euclidean space. In 
addition, we design multi-label sequence clustering 
to improve the accuracy of music genre analysis. 
Regarding the implementation, the whole system will 
be built on Android platform, and the client will be 
implemented as an Android Application. The core 
software module will be implemented as an Android 
Framework or Library for software reuse. 
 1 
行政院國家科學委員會補助專題研究計畫  ■ 成 果 報 告    
□期中進度報告 
 
音樂資料探勘：行動裝置上的音樂風格分析 
 
計畫類別：■個別型計畫   □整合型計畫 
計畫編號：NSC 100-2221-E-030-021 
執行期間：100年 08月 01日至 101年 07月 31日 
 
執行機構及系所：輔仁大學資訊工程學系 (所) 
 
計畫主持人：徐嘉連 
共同主持人： 
計畫參與人員：黃建彰、蕭資翰、吳玉舒、莊東霖 
 
 
成果報告類型(依經費核定清單規定繳交)：■精簡報告  □完整報告 
 
本計畫除繳交成果報告外，另須繳交以下出國心得報告：  
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
■出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
 
 
中   華   民   國   101年 9月 17日 
 3 
英文摘要及關鍵字：  
（Keyword: music information retrieval, feature extraction, MFCCs, mobile device） 
 
In the client-server architecture, we have been developed several systems and 
prototypes to provide various kinds of music information services, including streaming, 
classification, tagging and retrieval service. 
In this proposal, we first combine our previous subsystems to design an integrated 
system of personal music service. In addition, the integrated system will be dedicated to 
the mobile device running on the Android platform, rather than just migrating the original 
subsystems on mobile device. Considering limited resource on mobile device (weak 
computation power, small screen size, less memory capacity, and low bandwidth), we 
identify some working items, i.e., system design, feature extraction, user interface, and 
genre analysis. 
Feature extraction is one of key issues for content-based music information retrieval. 
MFCCs are effective features of music object. However, large amount of 
high-dimensional MFCCs cannot be processed on mobile device with limited 
computation power. In the project, we apply SNN to reduce the dimensionality of 
MFCCs, and to compute similarity between MFCCs in the non-Euclidean space. In 
addition, we design multi-label sequence clustering to improve the accuracy of music 
genre analysis. 
Regarding the implementation, the whole system will be built on Android platform, 
and the client will be implemented as an Android Application. The core software module 
will be implemented as an Android Framework or Library for software reuse. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 5 
與使用者聆聽歌曲的歷史資訊，利用 context-enhanced 同儕式演算法產生
context-sensitive 推薦音樂。[Sch07] 選擇 Rock-box 實作 Apple iPod 界面，利用
last.fm 網站服務得到歌曲相關標籤資訊，再擷取語音信號 MFCC 特徵計算相似
性，最後以 TSP 演算法產生播放清單[Poh05][Poh07]，自動標籤歌曲風格並以顏色
視覺化的方式呈現。 
 
四、  研究方法  
我們針對「(A). The System Architecture」、「(B). Features」、「(C). UI of mobile 
device (on Android platform)」，分述如下： 
(A). The system architecture 
在第一個研究項目中，我們整合過去提出的數個系統，包括： 
m  「跨模態音樂物件分析與分類系統」 
m  「音樂情緒分類系統」 
m  「音樂推薦系統」：  
在這些我們過去所完成的數個系統中整合成如下的架構（參考圖一）。 
 
 
圖一：The system architecture. 
 
 (B). Features 
我們歸納音樂物件的特徵（參考圖二），各有其優點與長處，目前音樂查詢領
域的學者，多半同意若僅使用單一特徵，查詢、分類或分群的效果，仍將有限。若
能使用多種特徵，特別是不同類型的特徵，將會提昇查詢、分類或分群的準確度。
我們以MFCCs（Mel-scale Frequency Cepstrum Coefficients）和 Genre等特徵，整合
 7 
之間的相似度。此方法是利用積分算出機率模型之間的相似度，再用 entropy 計算
彼此之間的差異。此外，我們也利用 Monte-Carlo sampling，來幫助計算 Gaussian 
mixture model之間的距離，根據 GMM給予每個高斯分布不同權重值，挑選出不同
的高斯模型產生出隨機的點，再透過這些點去記算兩個混合高斯模型的機率值。之
後使用 KL divergence來計算差異。 
最後，我們將每個音樂物件與相對應的 GSM with reduced MFCCs,以 multimedia 
graph來表達（參考圖四）。然後，以 link analysis的演算法，完成音樂物件的分類。 
 
圖四：MMG架構圖. 
 
(B.2). 序列分群以及 SNN 
我們實作了一個有效的序列分群演算法，處理多標籤序列上的問題，來處理這
些降維度後、數量仍龐大的向量。再分別以 weighted K-means以及 SNN（Shared Near 
Neighbors）的方法進行序列資料的分析。我們利用 sliding window將序列分成許多
固定長度子序列，再進行Mapping（參考圖五），將大量的子序列對應到特徵空間，
可以減少許多的計算時間，當序列轉換到特徵空間後。最後我們可以利用特徵間的
關係，作 SNN演算法將資料作分群（參考圖六）。在我們的研究中，SNN演算法有
效的將序列分析的資料作有意義的分群，利用分群出的特點，連結MMG的架構，
統整 GSM之間的權重值，進而組合成我們的推薦系統。 
 
(C). UI of mobile device (on Android platform) 
在這個研究項目中，我們設計了下列 UI of mobile device，功能包含：searching、
streaming（Fantasy Player）、emotional plane（mePlane）、recommendation（playlist）、
以及 clustering/classification等。首先我們實作伺服器端（參考圖七）和客戶端（參
考圖八）兩者的應用程式，伺服器提供使用者註冊服務，利用前面研究方法中我們
提到的演算法，產生推薦的播放清單。我們利用 Java 程式開發伺服器端的圖形介
面，對資料庫存取，並且驗證使用者，提供客戶端存取音樂服務。當使用者評分歌
曲後，歌曲會以座標點呈現在二維平面上，任意點選平面任何地方則會產生圓形。
點選情緒歌單按鈕，會將包含在圓圈內座標點所代表的歌曲，產生播放清單。這種
互動式的介面可以重複點選產生不同播放清單。 
 
 9 
   
圖八：客戶端介面 
 
五、  結果與討論  
我們實作出一套個人化音樂服務系統，將音樂風格分析實作在行動裝置上，配
合行動裝置的特性，結合搜尋、串流、情緒分類、推薦、分群、風格分析等，建構
成一套開放式的架構，以MMG為架構，串聯起大量的特徵，營造出跨模態的功能，
使得搜尋的方式更多元，改進了音樂風格分析的演算法，使運算量更小，結果更精
確，符合手持裝置的需求。 
本計畫均依計畫申請書之內容，依序完成 3個核心項目。除此之外，並訓練學
生作深入的討論，完成碩士論文。此計畫支持產出 3篇學生論文，2篇技術報告，1
篇國際會議論文，並出席會議發表論文，均得到顯著的成果。 
 
Reference 
[Koh97] T. Kohonen, Self-Organizing Maps, Springer, Berlin, Heidelberg, 1997. 
[Neu05] Robert Neumayer, Michael Dittenbach, and Andreas Rauber, “Playsom and 
pocketsomplayer,alternative interfaces to large music collections”, in ISMIR, 2005. 
[Tza09] George Tzanetakis and M. Singh Benning, “Assistive Music Browsing using Self-Organizing 
Maps”,in Proceedings of the 2nd International Conference on Pervasive Technologies Related to 
AssistiveEnvironments, 2009. 
[Sch07] Dominik Schnitzer, Tim Pohle and Peter Knees, ”One-Touch Access to Music on Mobile 
Devices”,in ACM MUM’07, 2007, 
[Poh07] Tim Pohle, Peter Knees and Markus Schedl, ”Reinventing the Wheel: A Novel Approach to 
MusicPlayer Interfaces”, IEEE Transactions on Multimedia, 9(3):567–575, 2007. 
[Poh05] Tim Pohle, Elias Pampalk, and Gerhard Widmer, “Generating similarity-based playlists 
usingtraveling salesman algorithms”, in Proceedings of the 8th International Conference on Digital 
AudioEffects (DAFx-05), 2005. 
[Jaco05] Jacobsson, M., Rost, M. and Håkansson, ”Push!Music: Intelligent Music Sharing on Mobile 
Devices”, in Proc. of UbiComp, 2005 
[Leh08] Arto Lehtiniemi, ”Evaluating SuperMusic: streaming context-aware mobile music service”, in 
Proc.of ACM Advances in computer Entertainment Technology, 2008 
國科會補助專家學者出席國際學術會議心得報告 
                                     日期：100 年 10 月 22 日 
一、參加會議經過 
十月九日：正式會議開始的前一天，均安排 tutorials 以及 workshops。這些 workshops 活動，
並不是會議主要的計劃行程，而 tutorials，也因經費拮据，無法報名參加。 
十月十日（會議第一天）：上午的 keynote 主題是「Innate Theories in Cognitive Agents: The 
Symmetry Engine」，接下來，則是一連串的 parallel sessions。 
十月十一日（會議第二天）：上午的 plenary 主題是「Brain-Robot Interaction」，接下來，是我
進行口頭發表論文的 session。下午，則是一連串的 parallel sessions。晚上，大會晚宴之後，有
數場的小組討論。 
十月十二日（會議第三天）：上午的 plenary 主題是「Cognitive Recognition and the HomeMate 
Robot」，這主題，恰與這幾年國內的一項重點研究主題「居家照護」，有直接密切的相關。接下來，
則是一連串的 parallel sessions 
 
二、與會心得 
本次，參加 IEEE SMC 發表論文。同時，也是 IEEE SMC 的年會。會議期間，除了一般的論文發表
場次之外，也由華人的學界資深代表（楊蘇教授、周孟初教授等人），舉辦數次的小組座談，將兩
岸三地，以及旅居其他各地的華人召集起來，一一介紹每個研究者的研究方向，嘗試尋求合作機
會。更重要的，集合大家的力量與選票，成立 SMC 分區協會、推舉 SMC 協會主席及其他重要職
位（期刊主編、期刊編輯委員）。也同時爭取舉辦後年的 IEEE SMC 年會、與其他 IEEE sponsorship
的國際會議。也有助於了解 IEEE SMC 協會的實務運作。 
次外，來自大陸方面的學者，無論是在與會人數、論文發表數量，均佔有很大的比例。也逐漸地
在 IEEE SMC 以及其他的協會中，擔任重要的職位與期刊主編。這樣的趨勢，值得我們警惕。 
 
三、考察參觀活動(無是項活動者略) 
補助編號 NSC100－2221－E－030－021－ 
計畫名稱 音樂資料探勘：行動裝置上的音樂風格分析 
出國人員 
姓名 徐嘉連 
服務機構及
職稱 
輔仁大學、資訊工程學系 
助理教授 
會議時間 100 年 10 月 9 日至 100 年 10 月 12 日 會議地點 Anchorage, Alaska, United States 
會議名稱 
(中文) (略) 
(英文) IEEE International Conference on System, Man, and Cybernetics 
發表論文
題目 
(中文) (略) 
(英文) Constraint-based Playlist Generation by Applying Genetic Algorithm
 GENERAL CHAIR 
Edward Tunstel, Johns Hopkins 
University Applied Physics Laboratory 
 
GENERAL CO-CHAIR 
Saeid Nahavandi, Deakin University 
 
PROGRAM CHAIR 
Adrian Stoica, Jet Propulsion Laboratory 
 
PROGRAM CO-CHAIRS 
Systems Science and Engineering 
   Aly El-Osery, New Mexico Tech. 
 
Human-Machine Systems 
   Ayanna Howard, Georgia Tech 
 
Cybernetics 
   Nestor Rychtyckyj, Ford Motor Co. 
 
Quality Control/Assurance 
   Hong Zhang, University of Alberta 
 
SPECIAL SESSIONS CHAIR 
Huaglory Tianfield, Glasgow Caledonian 
University 
 
TUTORIAL/WORKSHOP CHAIRS 
Peter Xu, Massey University 
Jianda Han, Chinese Academy of Sciences 
 
LOCAL ARRANGEMENTS CHAIR 
Jeffrey Miller, Univ. of Alaska, Anchorage 
 
FINANCE CHAIR 
Cang Ye, Univ. of Arkansas, Little Rock 
 
 
PUBLICATIONS CHAIRS 
Gary Anderson, U. of Arkansas, Little Rock 
Ying (Gina) Tang, Rowan University 
 
 
PUBLICITY CHAIR 
Seta Bogosyan, Univ. of Alaska, Fairbanks 
 
 
STUDENT ACTIVITIES CHAIRS 
Andrew Williams, Spelman College 
Patrick Chan, So. China Univ. of Tech 
 
 
AWARDS CHAIRS 
Michael H. Smith, Univ. of Cal, Berkeley 
Eugene Santos Jr., Dartmouth College 
 
WEBMASTER & EDITOR 
Christopher Lee, Univ. of Central Florida 
Samer Hanoun, Deakin University 
 
2011 IEEE International Conference on 
Systems, Man, and Cybernetics 
 
October 9-12, 2011, Anchorage, Alaska USA 
 
 
http://www.smc2011.org 
 
       August 6, 2011 
 
Hsu, Jia-Lien 
Fu Jen Catholic University 
Taiwan 
 
Subject: Invitation to the 2011 IEEE International Conference on Systems, Man, 
and Cybernetics 
 
Dear Hsu, Jia-Lien:  
 
The 2011 IEEE International Conference on Systems, Man, and Cybernetics will 
take place October 9–12, 2011 at the Hilton Anchorage Hotel in Anchorage, Alaska.  
 
This premier IEEE conference will bring together scientists, academics, and 
practicing engineers from all over the world. The aim of the conference is to provide 
an international forum for these experts to promote, share, and discuss various issues 
and developments in the broad fields of interest to the IEEE Systems, Man, and 
Cybernetics Society. 
 
Our records indicate that you have registered for this conference with Registration 
ID# 51457427 and paid the required registration fee. Your conference paper, 
“Constraint-based Playlist Generation by Applying Genetic Algorithm,” with Paper 
ID# 4007, has been accepted and is scheduled for oral presentation at the meeting. 
You are hereby invited to attend. 
 
This conference affords all attendees an opportunity to exchange ideas, thoughts, and 
experiences with other experts from around world. I look forward to your 
attendance, and I hope you enjoy this important event. 
 
      Sincerely, 
 
 
      Edward Tunstel, Ph.D. 
General Chair 
      IEEE SMC 2011 
      tunstel@ieee.org 
 
 
Please note that this letter in no way implies that any funds will be provided to you by the 2011 IEEE 
SMC Organizing Committee or the IEEE SMC Society to financially support your attendance at the 
Conference. 
 
TABLE I
Song attributes.
Attribute Description Type Example
songID unique identifier text 301
title title of song text Let’s move it
album name of album text Agent J
artist name of performing artist text Jolin
composer name of composer text Nik QuangLars
songwriter name of song writer text Lin Pei
producer name of producer text Nik Quang Lars
company published company text EMI
genre genre to the song belongs categorical Popular
language language of the song categorical Mandarin
mood mood of song categorical Happy
duration duration of song (in seconds) numerical 214
year release year numerical 2007
constraints. In our implementation, we design a form
action of tab-window application in which users are able
to manipulate operators and assign parameters to describe
constraints.
Derived constraints. For na¨ıve users, they may not
understand operations of our system or may be hard to
specify their constraints. Therefore, our system provides
derived constraints which will be automatically “learned”
and “derived” through the user behaviour, the user profile,
and/or the user interaction. We will show more examples
in Section IV.
User-defined constraints. If users cannot specify re-
quirements by using the first two types of constraints and
operators, we provide an alternative which allows users
to provide their own constraints in cooperate with our
system. The expression of user-defined constraints should
be in boolean functions and will be included/plugged into
our system to generate playlists. By means of user-defined
constraints, our system is capable of extensions to user-
tailored requests.
B. Related work
In this section, we describe two kinds of approaches of
playlist generation. First, we briefly describe the recom-
mendation systems. The goal of recommendation system
is very similar to our system, but recommendation systems
return top-N songs to the users where these songs do not
exist any relationships. Next, we describe methods which
are dedicated to generate playlists.
Recommendation system. In the research of playlist
generation, there are several literatures or papers which
make use of recommendation mechanism. Recommenda-
tion systems try to capture the user preference, maintain
profiles and then make decisions to provide objects to
meet user requirements. There are three kinds of rec-
ommendation systems, including content-based learning,
collaborative filtering and the hybrid system.
Content-based learning [1] extracts features from the
content of the objects and those features are organized as
attributes. By comparing attributes, it is able to determine
whether two objects are similiar or not. If a user likes the
song A, he also likes another song B that is similar to song
A. In the system of [1], a user is requested to select a song
that he is currently listening to, and the system generate
a set of songs that are similar to that selected songs.
Collaborative filtering [2]–[6] uses the ratings and the
user preferences to make recommendations. This system
tries to use such information to find other users who have
a similar taste, and recommends those songs from the same
user group. The basic idea behind is that users with similar
behavior manner shares their preference. For example, user
A and user B belong to the same group. User A likes object
1 and object 2, while user B likes object 1 and object 3.
Therefore, object 3 will be recommended to user A.
Usually, most of recommendation systems return a sin-
gle object, one by one. Even top-N objects returned, there
is no inter-relationship among top-N objects. On the con-
trary, objects of playlist are not independent. Therefore,
we still need approaches dedicated to playlist generation
although most recommendation systems work well.
Constraint-based approach. One typical approach for
generating playlists is the constraint-based approach. Con-
straints can be specified by users or derived by system. A
playlist will be constructed to satisfy constraints as much
as possible.
In [7], [8], the authors use the network flow approach
to solve the playlist generation problem. In this system,
a song is represented as a node and constraints as edges
with cost and weight. The target of this system is to find
a continuous path connecting the source and the sink (i.e.,
the first and the last song in the playlist) associated with
a minimum cost. This system consists of two constraints:
absolute and coherence constraints. Absolute constraints
are the maximum and the minimum percentage of each
attribute; they are represented by weights associated with
edges in the network flow model. The coherence con-
straints enforce certain correlations between successive
songs in the sequence such that they are similar. The
coherence constraints are represented by costs associated
with edges in the network flow model. After setting up
the corresponding network model, the problem of finding
TABLE II
The prototypical genetic algorithm [19]–[22]
1. Choose the initial population.
2. Evaluate the fitness of each individual in the population.
3. Repeat until the termination condition is reached.
3.1 Select best-ranking individuals.
3.2 Breed new generation through for crossover and mutation,
and give birth to offspring.
3.2 Evaluate the individual fitness of the offspring,
and replace worst ranked part individuals.
4. Output the individual which has highest fitness value.
Example: GCo (1, |P|, 6, “Jay”, 0, 3) means“At most three
songs in the playlist are written by Jay”.
D. Problem definition
We define our playlist generation problem as follows.
Definition 12: (Fitness function) Given a set of con-
straints C, and a playlist P, the fitness function F (P ) is
defined as the number of matched constraints with respect
to P .
Definition 13: (The playlist generation problem) Given
a music database M , a threshold of fitness value Thf , a
playlist length n, and a set of constraints C, the problem
is to find a playlist P =< p1, p2, ..., pn > where pi ∈ M
and F (P ) ≥ Thf .
Example: Given M,Thf = 3, n = 8 and C = {c1, c2, ..., c4}
which ci are as follows:
c1 = UI(1, 4, “Jason”).
c2 = BG(2, 5, 13).
c3 = UE(3, 10, “Korean”).
c4 = GCo(1, 3, 4, “Jay”, 1, 2).
The problem is to find a P =< p1, p2, ..., p8 > where the
number of matched constraints is at least three.
III. Genetic algorithm
The genetic algorithm (GA) is a heuristic algorithm for
solving optimization problems. In this paper, we apply
the genetic algorithm to generate a playlist which matches
those given constraints as much as possible.
A. Introduction
GA originates from the mechanism of natural evolution.
It simulates the mechanism through three operators: se-
lection, crossover and mutation. The prototypical genetic
algorithm [19]–[22] is described in Table II and we describe
three operators briefly as follows.
In GA, a possible solution to the given problem is an in-
dividual from the population. An individual is represented
by a corresponding chromosome which is usually coded as
a bit string.
B. Selection
The selection process is used to select the individuals
from the population. The well-studied selection methods
include Tournament Selection, Roulette Wheel Approach,
and Ranking Selection.
C. Crossover
After the selection, the remained individuals of the
population are applied for crossover and mutation. Single-
point crossover, and two-point crossover are often to be
used. We will describe the crossover methods as follow.
1) Single-point crossover: In the single-point crossover,
it has one crossover cutpoint. The substrings of individual
beyond the cutpoint will be swapped.
2) Two-point crossover: In the two-point crossover, it
has two crossover cutpoints. Each chromosome of individ-
ual is divided into three substrings which are separated by
the two cutpoints. The middle substring will be swapped
between individuals.
D. Mutation
Mutation is to randomly select one gene (i.e., a sub-
string) from a chromosome of individual, and then switch
the bits of the substring.
IV. Proposed method
In our model, the playlist generation problem is con-
sidered as a combinatorial problem. In this paper, we
use a genetic algorithm to solve the playlist generation
problem. We describe our method of constructing the
derived constraints in Section IV-A and our approach of
applying GA to solve the playlist generation problem in
Section IV-B.
A. Derived constraints
If na¨ıve users are not able to specify constraints, our
system will construct the corresponding constraints based
on user behavior. For example, a listened list of user A is
shown in Table III.
From the given list, we use unary, binary, and global
operators for each song to generate the candidate
constraints.
• GCo(1, |P|, 10, “sad”, 1, |P|)
−→ At least one sad mood song in the listened list.
• UI(6, 11,“sad”)
−→ The mood of the sixth song should be sad.
...
• BS(7, 5, 13)
−→ The release year of the seventh song should be
earlier than the fifth one.
For each candidate constraint, say a constraint CA, CA
will be evaluated against the listened list. If the number
of matched cases is more than a predefined threshold, CA
will be considered as a result of derived constraint.
B. Algorithm for playlist generation
First, we describe the genetic representation of the
solution domain to our problem. Second, we describe the
fitness function and our stop criterion, as well as the
pseudo code of playlist generation algorithm.
Fig. 5. Rating score of playlist w.r.t. population size. (Thf =
8, |C| = 10, and n = 10.)
TABLE V
Average rating scores of questions.
item average rating score
Q1 (ease-of-use) 3.4
Q2 (derived constraint) 1.2
Q3 (parameter-specified constraint) 3.4
When designing a retrieval system of music objects, a
user would like to pose a query to find a specified music
object and expect the target music object. Therefore, in
general, the high precision of retrieval system may not be
easily achieved. However, when dealing with a recommen-
dation system, users may easily accept returned results,
whether consisting of same taste of music objects or not.
Rather than the returned lists, users pay more attentions
on friendly user interface and short elapsed time.
Also, we ask the following questions to show the quality
of playlist associated with a certain type of constraint. The
questions are described as follow:
• Question 1: Do you like the look of user interface
(ease-of-use)?
• Question 2: Do you satisfy the generated playlists
associated with derived constraints?
• Question 3: Do you satisfy the generated playlists
associated with parameter-specified constraints?
Table V shows the rating scores of three questions,
respectively.
In summary, we conclude that our system works prop-
erly and generate playlists efficiently. The user believe our
system is easy to use. Most of the users satisfy a playlist
generated by our system. The users are satisfied with our
playlists especially when the constraints are defined by
themselves.
VI. Conclusion
Dealing with a huge amount of music, a variety of music
services are required to manage music in massive stor-
age devices. In this paper, we focus passive applications,
e.g., recommendation system and playlist generation. We
describe our system architecture of playlist generation
service, as well as the formal model.
In this following, we define three types of constraints,
including parameter-specified constraints, derived con-
straints, and user-defined constraints. Our system con-
structs the derived constrains via the user behaviour and
the user interaction. We apply genetic algorithm to solve
the playlist generation problem. From the experiments
above, we also show the performance of our system in
efficiency and effectiveness.
Future Work. Some future works are described as
follows. First, we are going to investigate data mining
techniques to analysis user profile and interaction for
designing algorithms of constructing derived constraints.
Second, we are going to study some GA extension and
weka packages to further improve our performance.
References
[1] S. Pauws and B. Eggen, “Pats: Realization and user evaluation
of an automatic playlist generation,” in Proceedings of the In-
ternational Conference on Music Information Retrieval, 2002.
[2] J. L. Herlocker, J. A. Konstan, L. G. Terveen, and J. T. Riedl,
“Evaluating Collaborative Filtering Recommender Systems,”
ACM Transactions on Information Systems, vol. 22, no. 1,
January 2004.
[3] A. M. Rashid, S. K. Lam, G. Karypis, and J. Riedl, “Clustknn:
A highly scalable hybrid model- & memory-based cf algorithm,”
in Proceedings of 12th ACM SIGKDD International Conference
on Knowledge Discovery and Data Mining, 2006.
[4] M. G. Vozalis and K. G. Margaritis, “Applying svd on item-
based filtering,” in Proceedings of the 2005 5th International
Conference on Intelligent Systems Design and Applications,
2005.
[5] G. Adomavicius and Y. Kwon, “New recommendation tech-
niques for multicriteria rating systems,” IEEE Intelligent Sys-
tems, vol. 22, no. 3, pp. 48–55, 2007.
[6] A. S. Harpale and Y. Yang, “Personalized active learning for
collaborative filtering,” in Proceedings of the 31st annual inter-
national ACM SIGIR conference on Research and development
in information retrieval, vol. 22, no. 3, 2008, pp. 91–98.
[7] M. Alghoniemy and A. H. Tewfik, “User-defined music sequence
retrieval,” in Proceedings of the 8th ACM International Multi-
media Conference, 2000.
[8] ——, “A network flow model for playlist generation,” in Pro-
ceedings of the IEEE International Conference on Multimedia
and Expo, 2002.
[9] Y. Dai, H.-W. Ye, and S.-J. Gong, “Personalized recommenda-
tion algorithm using user demography information,” in Proceed-
ings of the Knowledge Discovery and Data Mining, 2009, pp.
100–103.
[10] T. Magno and C. Sable, “A comparison of signal-based music
recommendation to genre labels, collaborative filtering, musico-
logical analysis, human recommendation, and random baseline,”
in Proceedings of the International Conference on Music Infor-
mation Retrieval, 2008.
[11] P. Lamere and D. Eck, “Using 3D visualizations to explore and
discover music,” in Proceedings of the International Conference
on Music Information Retrieval, 2007.
[12] A. Flexer, D. Schnitzer, M. Gasser, and G. Widmer, “Playlist
generation using start and end songs,” in Proceedings of the
International Conference on Music Information Retrieval, 2008.
[13] T. Phole, E. Pampalk, and G. Widmer, “Generating similarity-
based playlists using traveling salesman algorithms,” in Pro-
ceedings of the 8th International Conference on Digital Audio
Effects, 2005.
[14] J. J. Aucouturier and F. Pachet, “Improving Timbre Similarity:
How high is the sky?” Journal of Negative Results in Speech and
Audio Sciences, vol. 1, no. 1, 2004.
[15] B. Logan and A. Salomon, “A music similarity function based
on signal analysis,” in Proceedings of the IEEE International
Conference on Multimedia and Expo, 2001.
國科會補助計畫衍生研發成果推廣資料表
日期:2012/08/16
國科會補助計畫
計畫名稱: 音樂資料探勘：行動裝置上的音樂風格分析
計畫主持人: 徐嘉連
計畫編號: 100-2221-E-030-021- 學門領域: 圖形辨識
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
出席國際會議、發表論文：一次。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
