一、中英文摘要
本研究以個人電腦叢集為基礎，搭配島嶼式架構，實作平行基因演算法，來求解
找尋特定基因片段的問題(Motif Finding Problem)。所謂個人電腦叢集是將廉價的個人
電腦與其他軟硬體進行組裝之後，所構建而成的大量平行計算系統，可應用在需要大
量的工程計算或分散式資料處理上；而 Motif 是指生物體中有著重要功能的基因片
段，在生物的演化過程中保留了下來，這些生物的遺傳物質 DNA 由標記為 A、G、C、
T 的四種核苷酸鹼基所組成，形成了一長串的基因序列，但生物體中的鹼基對高達數
億個，如何在眾多序列中找出一段重要且有意義的基因序列便成為了一個重要的問
題。本研究使用平行基因演算法，針對序列搜尋的挑戰者問題進行績效評量，實驗結
果顯示，使用島嶼式平行架構之基因演算法確實能夠大幅提升搜尋速度，也能夠提高
求解品質。
關鍵詞：個人電腦叢集、平行基因演算法、Motif Finding Problem
Abstract
This work applies island-based parallel genetic algorithms (PGA) with PC cluster
technique to solve the Motif finding problem. In the cluster based parallel computing, PCs
are interconnected together using a low-latency and high bandwidth interconnection
networks. It can be applied to mass engineering computation. Motif is usually a short
fragment in DNA sequences that affects gene activity through binding transcription factors.
Identification of subtle regulatory motifs in unaligned DNA sequences is a fundamental
problem in computational biology. The general version of the motif finding problem is a
difficult pattern recognition problem. This paper presents an island-based PGA to solve this
problem. Experimental results show that the running time of this approach is reduced
drastically. Meanwhile, the quality of solution obtained from this method remains good.
Keyword：PC cluster, Parallel genetic algorithms, Motif Finding Problem
二、前言
近年來個人電腦的運算速度與記憶體容量等不斷突飛猛進，甚至已經追上了傳統
的工作站或是大型電腦；另一方面，電腦的零組件價格卻不斷地降低，使得現今的個
人電腦具有相當不錯的效能與價格比。加上目前各零組件的相容性和穩定性大大提
高，使得過去在價格上遙不可及的大型電腦，可以透過平行技術與電腦效能的提升而
達到。由於這些技術發展趨勢，使得個人電腦叢集(PC Cluster)成為最近幾年新興的高
效能平行計算平台。
個人電腦叢集的理念是源自於科學與工程應用領域的研究人員，ㄧ般認為的起源
是由 1994 年美國太空總署(NASA)的 CESDIS 研究機構，為了進行太空科學計畫所發
展出來的。他們透過使用廉價的電腦設備，自行組裝成為一個電腦叢集，將之命名為
Beowulf，來幫助他們做太空科學上的大量運算。Beowulf 成功的掌握了電腦科學快速
而蓬勃的發展，微處理器與相關設備進步神速，加上普遍性高，ㄧ般人也可以輕易地
於市面上購得；軟體方面，為了應付更多的高速運算需求，平行計算的技術也漸漸成
熟，由於以上等等原因，終於讓個人電腦叢集成為一股趨勢與潮流。目前這種個人電
腦叢集已經被成功應用在許多平行或是分散式處理的領域，像是高速電腦應用、網路
服務、資料探勘等。
而生物 DNA 主要為 A、G、C、T 此 4種核苷酸鹼基所構成，這些核苷酸的組合
四、 Motif Finding Problem與挑戰者問題(Challenge Problem)
基序(motif)是 DNA 序列上的ㄧ小片段，它會影響生物體的蛋白質組成或是性徵功
能等，因此找到越多的 motif 便可幫助人們了解生物體內的組成奧秘。Jones 與 Pevzner
定義 Motif Finding Problem 為：一段長度固定為 l 的 motif，內部允許 d 個突變，也就
是( l , d )–motif，分別植入 t 條長度為 n 的序列當中。例如(8 , 2)–motif 植入以下 5 條
序列中：
本研究就是期望能夠找出每條序列上的 motif，將之取出對齊後，做 profile 分析。如圖
2 所示，其 score = 5+4+4+4+5+3+3+2 = 30：
ATACTAgc
AcACTtTT
Alignment ATcCTATg
ATACTcTc
ATAgTAaT
A 50400310
Profile C 01140102
G 00010011
T 04005132
Consensus ATACTATT
圖 2. motif 分數計算方式
而在 Prvzner 與 Sze 的研究中，發現在生物定序技術上，儘管有著重大突破，但是
仍然有些問題引起許多科學家的興趣，其中之一便是挑戰者問題(Challenge Problem)。
在生物 DNA 序列中，特定基因序列片段(motif)扮演著相當關鍵的角色，但其 DNA 序
列，卻也有著可能產生變異的可能性。當其發生變異，可能會導致在 DNA 定序的錯誤，
由於 motif 的位置變異不一，將會導致在搜尋比較時，產生相當大的落差，其結果可能
並不是所要找尋的 motif，而真實的 motif 卻被隱藏在龐大資料中。
挑戰者問題是指如何在 20 條長度為 600 的序列中是否能找出所植入長度 l =15 的
motif，內含突變又稱為雜訊，突變個數為 4 的 motif 出來，一般以(15 , 4)表示這個問
題。如果兩條序列之間突變的位置各不重疉，那就相當於在比對序列時，有 8 個不確
定的突變，剛好是序列長度的一半，代表著長度 15 的序列有著一半的突變，這將會大
大地增加搜尋的複雜度，所以找出(15, 4) motif 是具有一定的難度，故一個演算法能否
順利解決挑戰者問題便具有指標性意義。
五、平行基因演算法
1. 基因演算法
cgagttcgcgggtaaacatagcggaacATACTAgctccgt
tcctttgtgttagAcACTtTTataaagttggccacctttt
catATcCTATgcacatgatatgactgccgcttagtaaccg
gcgcgtaccgtttcgtcccatctgagcgttATACTcTcca
ATAgTAaTgaccttcattcttggtgttgcactagcgcaat
父 C C GT A TAC
母 A G CT C CAC
子代 1 C G CT C TAC
子代 2 A G GT C CAC
圖 4. 雙點交配方式
(5)突變
突變意味著生物體內的基因發生了改變，雖然它的發生機率極低，但卻是生物演
化中不可或缺的一環。突變在演算法中能夠幫助搜尋跳脫出區域解，幫助全域搜尋。
突變方法有很多種，常用的方法為單點突變，當突變的條件發生時，依隨機的方式任
選一點進行鹼基變換，如圖5所示：
突變前 ATT C TTAG
突變後 ATT A TTAG
圖 5. 單點突變
2. 平行基因演算法
一般而言，當染色體越長，則會導致演算法搜尋的範圍擴大，增加找出最佳解的
困難度，也進而提高搜尋時間；另外，當母體內的染色體越多，雖然可以提高求解的
品質，但仍然會使得搜尋時間大大提升，除此之外，若再加上於大型問題上求解，勢
必演算時間會相當可觀。Grefenstette 是最早將基因演算法進行平行計算的人，他提出
了主僕式(master slave model)基因演算模式與多人口的平行基因演算模式。Cohoon et al.
則更進一步解釋了分散式基因演算法的理論，藉由引入新的人口，可以把原本的人口
素質提升到更好的新平衡點。
目前常見的平行架構有主僕式與島嶼式(island model)兩種，主僕式的平行架構主
要是把原本單機的母體分割給各子處理器，之後自己再做適合度的評估與計算。另一
種島嶼式則是將數個獨立的子群體分別置於各處理器上執行，並於每隔固定幾世代
後，進行資料的交換，來改善母群體縮小而解空間縮小的缺點，相對的亦提高最終解
的優化。本研究利用此兩種平行架構來實現基因演算法。
(1) 主僕式平行基因演算法
主僕式藉由主處理器建構初始母群體，分割母群體分送給子處理器，讓其分擔基因
演算法的演化運算，主要步驟如下：
步驟 1. 主處理器產生初始母群體。
步驟 2. 將產生的母群體平均分散至各子處理器，執行傳統基因演算法的搜尋流程，
如適應度計算、選擇、交配、突變等運算。
步驟 3. 自各子處理器傳回結果，主處理器收集後，並且紀錄最佳解。
步驟 4. 主處理器判斷是否停止，若到達終止迭代則主機計輸出最佳解；若不符合，
則回到步驟 2。
表 2. 實驗參數結果
交配率
0.90 0.95 1.00
0.05 205.20 204.74 203.77
0.10 204.27 207.10 204.74
0.02 206.17 207.74 206.90
突
變
率
0.04 205.83 206.77 208.57
表 3. 平行參數實驗結果
PC 總數
2 4 6
50 212.63 215.00 210.67
100 211.83 211.97 213.60
200 209.60 213.83 214.50
移
民
間
隔 400 211.67 213.80 215.10
2. 實驗結果
經由上述的實驗參數設定，本研究分別以單機型基因演算法和主僕式與島嶼式
平行基因演算法來測試由 MELINA 網站所得的 DNA 序列資料，得到以下的實驗結
果。從表 4 可以發現，套用島嶼式平行架構之基因演算法求序列找尋的挑戰者問題，
可以有效提升求解速度，並且提高基因演算法的求解品質；表 5 為單機 GA 與 PGA
平均執行時間結果，主僕式由於耗費太多時間於資料接收與傳輸，因此所花費的時
間反而大於單機型的基因演算法；表 6 為島嶼式 PGA 的加速因子，它是以單機型基
因演算法執行時間除以平行基因演算法所得到，由表中可以得知隨著序列越長，所
產生的加速比越明顯，這是因為啟動 JavaParty 環境所需要的成本對於執行時間的比
例越來越小的關係。
表 4. 單機 GA 與 PGA 平均得分結果
序列長度 單機 GA 主僕式 PGA 島嶼式 PGA
600 210.81 210.83 213.47
700 210.85 208.50 211.19
800 212.00 214.31 213.12
900 213.12 210.95 213.77
1000 212.66 210.23 213.69
平均得分 211.88 210.96 213.05
表 5. 單機 GA 與 PGA 平均執行時間結果(單位：秒)
序列長度 單機 GA 主僕式 PGA 島嶼式 PGA
600 659.0 827.0 141.0
700 781.0 963.0 167.0
800 886.0 1106.5 161.5
900 993.5 1244.0 181.5
1000 1108.5 1388.5 201.5
平均時間 885.6 1105.8 170.5
No. 2, pp. 447-464, 2002
12. Mount, D.W., Bioinformatics Sequence and Genome Analysis, Cold Spring Harbor
Laboratory Press, 2004.
13. Rocke, E and Tompa, M., An Algorithm for Finding Novel Gapped Motifs in DNA
Sequences, 1998.
14. Rouchka, E.C., A Brief Overview of Gibbs Sampling, Washington University Institute
for Biomedical Computing Statistics Study Group, 1997.
15. Walsh, B., Markov Chain Monte Carlo and Gibbs Sampling, Lecture Notes for EEB,
Vol. 596, 2002.
16. Yeh, J.Y., J. Huang, and T. Lin,“Cluster Analysis of Gene Expression Data Based on a
Hierarchical Genetic Algorithm,”The 11th Annual International Conference on
Industrial Engineering Theory, Applications & Practice, Nagoya, Japan, 2006.
17. 葉進儀、黃嘉政、謝祖怡，「HEp-2 免疫螢光顯影細胞影像之邊界檢測研究」，第
十二屆資訊管理暨實務研討會，光碟論文集，虎尾科技大學，雲林，2006。
18. 葉進儀、翁振峯、郭李哲、江俊良、蔡建勝、白宗育，「使用 Multi-CONSENSUS
演算法來搜尋特定基因序列片段」，中國工業工程學會九十五年度年會暨學術研討
會，光碟論文集，東海大學，台中，2006。
19. 葉進儀、林子瑋、黃靖雯、鄭紹偉、葉乃榮、童彥博，「使用基因演算法與決策樹
於基因表現資料上之癌症分類」，中國工業工程學會九十五年度年會暨學術研討
會，光碟論文集，東海大學，台中，2006。
20. 葉進儀、林子瑋、黃靖雯、鄭紹偉、葉乃榮、童彥博，「使用基因演算法於基因表
現資料上之特徵篩選」，2007 資訊管理專題成果展示研討會，國立聯合大學，苗
栗，2007。
21. 葉進儀、翁振峯、郭李哲、江俊良、蔡建勝、白宗育，「基因序列搜尋演算法之研
究」，2007資訊管理專題成果展示研討會，國立聯合大學，苗栗，2007。
22. 葉進儀、吳佳蒟，「應用自組特徵映射網路解基序搜尋問題」，2007 台灣長榮--企
業管理暨經營決策學術研討會，光碟論文集，長榮大學，台南，2007。
23. 黃嘉政，應用資料探勘技術於抗核抗體免疫螢光顯影分析，國立嘉義大學碩士論
文，民國 96。
  
圖 2. 本人(中)與其他二位學者於名古屋的國際會議中心註冊櫃台前留影 
 
十月二十五日早上及下午均有分組論文發表。本人之論文發表乃被排在二十六日下午
4:10 至 5:25，屬於基因演算法 (Genetic Algorithms) 之議題，其他為：Kurokawa 之 Soft 
Computing Method for Market Timing with Multiple Day Candle Chart Pattern Recognition、
Tseng and Liu之 A Problem-Specific Genetic Algorithm for Balancing, Selecting, and Scheduling 
R & D Project Portfolio、與 Lin等人之 Reserve Capacity Planning for LCD TV Manufacturer。
圖 3為本人在論文發表會場看板前留影。 
 
 
圖 3. 論文發表會場看板前留影 
 
CLUSTER ANALYSIS OF GENE EXPRESSION DATA BASED ON A HIERA
RCHICAL GENETIC ALGORITHM 
 
Jinn-Yi Yeh, Jing-Wen Huang, and Tzu-Wei Lin 
 
Department of Management Information Systems 
National Chiayi University 
580 Sinmin Rd. 
Chiayi City, Taiwan 600 
Corresponding author’s e-mail: jyeh@mail.ncyu.edu.tw 
 
Abstract: DNA microarray technology is a novel tool in experimental molecular biology for determining the 
expression levels of thousands of genes in parallel and producing huge amounts of data. Analysis and handing of such 
data is one of the major tasks in the utilization of the technology. In the exploration of the dynamic state of genetic 
networks, an important step is to cluster gene expression data into identify groups of genes with similar patterns. 
Although many clustering algorithms have been proposed for such work, obtaining the right number of clusters and 
adapting to different cluster characteristics are still not satisfactorily addressed. In this paper, we apply a hierarchical 
genetic algorithm (HGA) for clustering of gene expression data without knowing the number of clusters in advance. 
This approach can find natural clusters and give the appropriate number of clusters. The HGA is verified by the 
comparison with other popular clustering algorithms such as k-means and hierarchical clustering. 
 
Keywords: Microarray; Clustering; Gene expression data; Hierarchical genetic algorithm 
 
 
1. INTRODUCTION 
 
In the last decade, cluster analysis for gene expression data has emerged as an active area of research. Gene expression 
appears in the process of transcribing a gene’s deoxyribonucleic acid (DNA) sequence into ribonucleic acid (RNA). A 
gene’s expression level indicates the approximate number of copies of that gene’s RNA produced in a cell and it is 
correlated with the amount of the corresponding proteins made (Lu and Han 2003). The ability to monitor gene 
expression at the transcript level has become possible due to the emergence of DNA microarray technologies which are 
used for measuring thousands of genome-wide expression values in parallel. A microarray is a glass slide, onto which 
single-stranded DNA molecules are attached at fixed spots. There may be tens of thousands of spots on an array, each 
related to a single gene. Analysis and handing of such data is becoming one of the major bottlenecks in the utilization of 
the macroarray technology (Brazma and Vilo 2000). 
A crucial step in the analysis of gene expression data is the detection of gene groupings that manifest similar 
expression pattern. Most current methods for gene expression data analysis rely on the use of clustering algorithms (Wu 
et al. 2004). For example, Szeto et al. (2003) proposed a binary hierarchical clustering algorithm for the clustering of 
gene expression data. Qin et al. (2003) described a generalization of the hierarchical clustering algorithm that efficiently 
incorporates higher-order features by using a kernel function to map the data into a high-dimensional feature space. 
Okada et al. (2005) developed a novel approach using hierarchical clustering algorithm in which cluster boundaries are 
determined by referring to functional annotations stored in genome databases. Although hierarchical clustering has 
advantages such as investigators do not need to specify the number of clusters in advance and results are visually 
presented in the form of a dendrogram, it suffers from robustness, uniqueness, and the inversion problems, which 
complicate interpretation of the resulting hierarchy. 
To overcome these problems attention is turning towards model-based clustering approaches which provide 
statistical frameworks to model the cluster structure of gene expression data. For instance, Mar and Mclachlan (2003) 
presented a mixture model-based algorithm (EMMIX-GENE) for breast cancer data analysis. Yip et al. proposed a new 
projected algorithm that exploits the clustering status to adjust the internal thresholds dynamically without the 
assistance of user parameters. Ji et al. (2004) implemented a weighted expectation maximization (EM) algorithm for 
clustering the gene expression data. Liu et al. (2005) discussed the application of kernel principal component analysis 
(KPCA) and fuzzy C-means to microarray data clustering. Qin and Self (2005) proposed a new model-based clustering 
method, the clustering of regression models method, which groups genes that share a similar relationship to the 
covariate(s). Yoshida et al. (2006) developed a novel model-based clustering method, mixed factors analysis, to provide 
analytic tools for clustering DNA microarray datasets. Despite the different forms that those models assume, they all 
share the common feature of modeling the expression data with a gene-specific presumed distribution. This may not be 
3. Join these entries to form a new cluster in the tree, where the height of the tree represents the distance between cluster 
members. 
4. Create a new distance matrix for the distance between the new cluster, the existing clusters, and the remaining 
unclustered genes. 
5. Return to step 2 and repeat until all genes and nodes are clustered. 
 
 
2.3 k-means 
 
The k-means clustering partitions n-dimensional data into k clusters so that an objective function providing the 
desired properties of the distribution of feature vectors of clusters in terms of similarity and distance measures is 
optimized. The k-means clustering algorithm includes the following steps (Dhawan 2003): 
1. Select the number of clusters k with initial cluster centroids ci, i=1, 2, …, k; 
2. Partition the input data points into k clusters by assigning each data point gj to the closest cluster centroid ci using the 
Euclidean distance; 
3. Compute the centers of all current clusters; 
4. If the cluster centroids do not change from the previous iteration, stop; otherwise, go to Step 2. 
 
 
2.4 Hierarchical genetic algorithm 
 
HGA is a revised version of a genetic algorithm (GA) which is an optimization scheme based on biological evolution. 
The HGA scheme was inspired by the biological DNA structure, which consists of two different types of genes: 
regulatory sequences (RSs) and structural genes (SGs). The RSs serve as the leaders that denote the beginning and 
ending of SGs. Similar to this structure, the genes of the chromosome in the HGA are classified into two categories 
hierarchically, i.e., cluster-control genes (analogous to RSs) and connection-control genes (analogous to SGs). A single 
change in the high-level genes will cause multiple changes in the lower-level genes (Man et al. 1999). 
For clustering gene expression data, the hierarchical structure of HGA is shown in Figure 1. The connection-
control genes are in the form of bits which are used to control the activation of the gene expression level, i.e., 1 means 
activation and 0, inactivation. The cluster-control genes are in the form of integers which are used to indicate the cluster 
number (from 1 to k) that genes (gi) belong to. This structure provides a vast dimension for genetic operations, including 
fitness value evaluation, reproduction, crossover, and mutation, which are described in the following sections. 
 
 
Figure 1. Hierarchical structure of HGALVQ chromosome 
 
 
2.4.1. Fitness function
 
The goal of HGA is to improve the quality and reliability of the cluster sets without knowing the correct number of 
clusters. In this paper, we apply the Silhouette index method to evaluate the results of clustering gene expression data. 
For a given cluster,  the Silhouette index method assigns to each sample of C),,,1( kjC j L= j a quality measure,  
known as the Silhouette width. The Silhouette width is a confidence indicator on the membership of the i
),(if j
th sample in 
3. EXPERIMENTAL RESULTS 
 
Two well known gene expression datasets are selected to evaluate the performance of HGA including Leukemia and 
Colon. The Leukemia dataset consists of expression profiles of 7129 genes from 38 training samples with 27 samples of 
acute lymphoblastic leukemia (ALL) and 11 samples of acute myeloblastic leukemia (AML). There is also an 
independent test set composed of 20 ALL and 14 AML samples. The Colon dataset consists of expression profiles of 
2000 genes from 22 normal tissues and 40 tumor samples (Liu et al. 2005 and Liu et al. 2001). After an intensive test, 
the parameter setting for genetic operations is listed in Table 1. 
Table 2 shows the Global Silhouette values, fitness, for each partition, and the Silhouette values, Fj, for different 
number of clusters, k, using the HGA with Colon dataset. These results indicate that k = 32 is suggested as the best 
clustering configuration for this gene expression data. This complies with the results obtained from Bolshakova and 
Azuaje (2003). 
 
 
Table 1. Parameters for genetic operations 
 
 Cluster-control genes Connection-control genes 
Representation Integer Bit representation 
Crossover type One-point crossover Two-point crossover 
Crossover rate 1.0 1.0 
Mutation type Random mutation Bit mutation 
Mutation rate 0.05 0.05 
 
 
Table 2. Silhouette values for expression clusters originating from Colon dataset 
 
k fitness Fi
2 0.351 0.364, 0.338 
4 0.208 0.088, 0.136, 0.315, 0.295 
8 0.333 0.156, 0.34, 0.034, 0.475, 0.329, 0.647, 0.118, 0.567 
16 0.435 0.461, 0.414, 0.484, 0.537, 0.397, 0.37, 0.551, 0.467, 0.336, 0.557, 0.468, 0.524, 0.658, 0.238, 
0.274, 0.156 
32 0.719 0.543, 0.9, 0.646, 0.571, 0.551, 0.255, 0.34, 0.78, 0.471, 0.49, 0.8, 0.478, 0.657, 0.297, 0.493, 
0.559, 0.542, 0.865, 0.49, 0.585, 0.84, 0.7, 0.587, 0.711, 0.481, 0.108, 0.54, 0.568, 0.656, 0.859, 
0.8, 0.328 
 
 
Table 3 and 4 show the Global Silhouette (fitness) values of different clustering algorithms for varied number of 
clusters (k) using the Leukemia and Colon data, respectively. The Global Silhouette for HGA presents the second-best 
in Leukemia dataset and the best scores in Colon datasets. Although the hierarchical clustering algorithm outperforms 
others in Table 2, its splitting of the clusters from the hierarchical results is neither robust nor unique. However, it may 
be the case that hierarchical clustering algorithm can be useful in conjunction with genetic algorithms to provide an 
optimal number of clusters. From Table 4, we can conclude that the HGA is more suitable than other algorithms for 
clustering the Colon dataset. 
 
Table 3. Global Silhouette (fitness) values of different clustering algorithms for Leukemia data 
 
Algorithms k = 2 k = 4 k = 8 k = 16 k = 32 
HGA 0.167 0.047 0.107 0.275 0.524 
Hierarchical clustering 0.169 0.488 0.422 0.411 0.613 
k-means 0.127 0.084 0.081 0.100 0.156 
 
 
Table 4. Global Silhouette (fitness) values of different clustering algorithms for Colon data 
 
Algorithms k = 2 k = 4 k = 8 k = 16 k = 32 
HGA 0.351 0.208 0.333 0.435 0.719 
Hierarchical clustering 0.338 0.475 0.240 0.376 0.486 
k-means 0.123 0.147 0.154 0.203 0.325 
15. Szeto, L.K., Liew, A.W., Yan, H., and Tang, S. (2003). Gene expression data clustering and visualization based on 
a binary hierarchial clustering framework. Journal of Visual Languages and Computing, 14: 341-362. 
 
16. Wu, S., Liew, A.W., Yan, H., amd Yang, M. (2004). Cluster analysis of gene expression data based on self-
splitting and merging competitive learning. IEEE Transaction on Information Technology in Biomedicine, 8(1): 5-
15. 
 
17. Yip, K.Y., Cheung, D.W., and Ng, M.K. (2004). HARP: a practical projected clustering algorithm. IEEE 
Transaction on Knowledge and Data Engineering, 16(11): 1387-1397. 
 
18. Yoshida, R., Higuchi, T., Imoto, S., and Miyano, S. (2006). ArrayCluster: an analytic tool for clustering, data 
visualization and module finder on gene expression profiles. Bioinformatics, 22(12): 1538-1539. 
 
