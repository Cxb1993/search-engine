  1 
I. 中、英文摘要及關鍵詞 (keywords) 
 
1. 中文摘要 
本研究計畫中，我們針對無線感測網路（Wireless Sensor Network, WSN）定位系統，特別是
植基於節點序列定位法（Sequence-based Localization, SBL）之室內無線電-超音波定位系統，
研究發展可有效降低定位誤差之網路節點佈署方式。我們首先開發一套以節點序列定位為基礎
的節點佈署分析工具，以探討檢測區域內節點佈署的位置，在該演算法中對定位誤差的影響。
在佈署節點時，我們發現，為降低定位誤差，（1）節點間中垂線切割面的面積標準差應越小越
好；（2）節點間應保持至少一定間距；（3）應藉由節點間中垂線夾角值優化來佈署節點的位置。
我們採用 ns2網路模擬器來進行驗證與分析，ns2模擬結果顯示，我們所發展的節點佈署方式，
確可有效降低節點序列定位演算法之定位誤差。 
 
中文關鍵詞 
無線感測網路、節點序列定位法、節點佈署策略、定位誤差 
 
2. 英文摘要 
In this research project we focus on the deployment strategy of sensor nodes for Wireless Sensor 
Network (WSN) location system, more specifically indoor RF- Ultrasonic Location System based on 
Sequence-based Localization (SBL) algorithm in order to effectively reduce location error. To 
investigate the effects of locations of deployed sensor nodes on the location error, we first develop a 
node deployment analysis toolkit for node-sequence localization. Based on the observation via the 
toolkit we then develop our node deployment methodology. When deploying sensor nodes, we 
discover that in order to reduce location error (1) the standard deviation of the polygon area cut by the 
perpendicular bisectors of the sensor nodes should be kept as small as possible, (2) certain amount of 
space should be maintained between the sensor nodes and (3) optimization with the angle between the 
perpendicular bisectors should be utilized. We use the ns2 network simulator for evaluation, and the 
ns2 simulation results show that our proposed node deployment methodology can indeed reduce 
location error of the SBL algorithm. 
 
英文關鍵詞 
Wireless Sensor Network (WSN), Sequence-based Localization (SBL), Node Deployment Strategy, 
Location Error 
 
  3 
in this project we focus on these important issues for further in-depth investigation. There are three 
main contributions in this project: 
(1) A set of simulation toolkit based on SBL is developed to perform analysis for different node 
deployment models and different target paths.  
(2) Node deployment methodologies are proposed based on “maintaining the spacing between 
nodes” and “optimization of the angles between perpendicular bisectors”. 
(3) Assistive manual node deployment methodology as well as automatic node deployment 
methodology is proposed and implemented. 
2. Introduction to SBL 
In this section more details of SBL will be given to provide necessary background knowledge. 
  In SBL, when the sensing space is deployed with sensor nodes, the perpendicular bisectors of each 
pair of sensor nodes can be used to cut the sensing space into multiple faces and each of the faces is a 
convex polygon. For locations within each polygon, the relativity of distance to each sensor node is 
unique. Each polygon can thus be represented by a unique node sequence. Fig. 2 shows a simple 
example. As shown in Fig. 2(a) where two nodes are deployed, the perpendicular bisector, Bis(1, 2), of 
nodes 1 and 2 divides the sensing space into two faces, f1 and f2. Within f1, each location is nearer to 
node 1 than node 2 and the node sequence of f1 thus becomes (1, 2). Similarly, the node sequence of f2 
is (2, 1). As shown in Fig. 2(b) where three nodes are deployed, the sensing space is divided into six 
faces each of which can be represented numerically with a unique node sequence and can be 
represented geometrically with the center of gravity of the face (blue points in Fig 2(b)). When a target 
is located within a face, for example f3, by processing of received signal strength, transmission time or 
other signal characteristics the node sequence for nodes sorted from shorter distance to longer distance 
would be (3, 2, 1) and the location of the target can then be estimated with the center of gravity of f3. 
There is thus location error between the real location and the estimated location of the target. Our goal 
is to effectively reduce the location error. 
 
Fig. 3. Adjacency structures of the faces: (a) possible next 
location of the moving target (b) neighborhood graph of all 
faces.
 
Fig. 4. Moving trace of the target: (a) the target moves 
within the sensing space (b) the node sequence for 
different time k 
When tracking a moving target, the next possible location of the target would most probably be in 
the original face or in the adjacent face as shown in Fig. 3(a). By this feature, a neighborhood graph 
can then be produced as shown in Fig. 3(b) to predict the next location of the target or to determine 
whether the inferred node sequence is correct.  
For the signal processing to estimate the location of the target, the sensor nodes receive the signal 
from the moving target and can infer the node sequence according to the received signal strength or 
  5 
equations and there are no relevant references for node deployment, we therefore develop a set of node 
deployment analysis toolkits based on SBL to visualize in real time the space division by 
perpendicular bisectors in SBL. As shown in Fig. 7 is the user interface of the toolkit that we have 
developed. On the left is the visualized control area representing the sensing space where sensor nodes 
can be added, deleted and moved by mouse clicking. After the manipulation of sensor nodes, the space 
division by the perpendicular bisectors of the sensor nodes together with the center of gravity of the 
faces can be calculated and shown in real time. The important information such as the exact locations 
of the deployed sensor nodes, the number of faces, the standard deviation of the area of the faces and 
the average location error can be shown simultaneously on the right. The area of a surface can be 
calculated as Eq. (2) where (Xi, Yi) is the vertex coordinate of the face. The center of gravity of the 
face (Cx, Cy) can be calculated as Eq. (3). 
;)(
2
1 1
0
11∑
−
=
++ −=
N
i
iiii YXYXA
             
(2)
 
;))((
6
1
;))((
6
1
1
0
111
1
0
111
∑
∑
−
=
+++
−
=
+++
−+=
−+=
N
i
iiiiii
N
i
iiiiii
YXYXYY
A
Cy
YXYXXX
A
Cx
   (3) 
 
Fig. 7. Node deployment analysis toolkit 
 
 
Fig. 8. Relationship between sensing space and node number 
With the node deployment analysis toolkit, the input to ns2 network simulator can be also provided 
according to current sensor node deployment. After the ns2 simulation according to real environment, 
the result can be fed back to the toolkit to show the simulation result on the left.   
With the aid of this toolkit, we have observed that the location error seems to be relevant to the 
standard deviation of the face area, while the standard deviation of the face area in turn seems to be 
relevant to the node spacing and the angle between the perpendicular bisectors. 
4. Sensor Node Deployment 
We will first analyse and verify the relevance of the standard deviation of face area, the node 
spacing, and the angle between perpendicular bisectors to the location error that we have observed in 
section 3 with the help of our node deployment analysis toolkit. 
To allow the nodes in sensing space to play a better role in reducing the location error, some space 
should be kept between the sensor nodes and the space is related to the size of the sensing space and 
  7 
the deployment cannot be competed. We therefore set a breakpoint of one hundred thousand times. 
When the number of redeployments is larger than one hundred thousand, the deployment will be 
terminated prematurely and the number of redeployment is set to be one hundred thousand. As can be 
seen in Fig. 12, though the location error is minimal when α is set to be 1, the deployment cannot 
guarantee to be completed every time. We thus set parameter α to be 1.5 for the balance between 
location error and number of redeployments. 
As shown in Fig. 13, when the smaller angle between perpendicular bisectors is smaller than certain 
threshold value θA, the difference between areas of faces a1 and a2 can be significant and subsequently 
incur large location error. 
 
Fig. 13. Setting of threshold angle between 
perpendicular bisectors. 
 
Fig. 14. Correlation coefficients between angle between 
perpendicular bisectors and location errors.  
;,)( A
2
A θθθθAL <−=+   (4) 
As shown in Eq. (4), θ is the angle between two perpendicular bisectors, 𝜃A is the threshold angle, 
and AL (Angle and Length) is the parameter considering angle and distance between two perpendicular 
bisectors. As shown in Fig. 14 is the correlation coefficients between location errors and angles 
between perpendicular bisectors. The results in Fig. 14 are produced by first randomly deploying with 
certain amount of spacing in between, then moving one of sensor nodes to arbitrary location within the 
sensing space, and the average of 100 executions is calculated. As the results in Fig. 14 shows, for 
different numbers of nodes, all have a higher correlation coefficient for threshold angle 𝜃A of value 45 
degrees. We then set our threshold angle 𝜃A as 45. 
The calculations of angle are different for conditions when the intersection (cross-points) of two 
perpendicular bisectors is located within or out of the sensing are. As shown in Fig. 15, since there are 
four different conditions for angles between perpendicular bisectors, we utilize different calculation 
methods to accumulate AL values for all conditions to verify the correlation between angles and 
location errors. 
Are there 
cross points?
Outside the 
region
Within the 
region
Cross-point 
positionOverlapping
Parellel The number of cross points
YesNo
Infinite number of cross points Cross at one point
 
Fig.15. Classification of angle between perpendicular bisectors.
 
Fig.16. Correlation coefficients between distance between 
perpendicular bisectors L and location errors. 
  9 
location error increases as the AL increases, we can choose to move to the location with smallest blue 
solid circle. The process can be repeated with the radius halved each time for convergence purpose. 
For automatic deployment, after the initial deployment with spacing between nodes, we take each node 
sequentially to proceed with the previous process. In our experience, three complete runs would 
generally be enough for convergence. 
5. ns2 Simulation and Results 
In the ns2 simulation, we utilize the node locations from the node deployment analysis toolkit 
together with the moving path and moving speed of the target to set the OTcl Script. After the ns2 
simulation the results are then fed back to the node deployment analysis toolkit for display and 
analysis of the location errors. The sensing space is set as 60×60 meters. To let any of the nodes 
receive signal from the target, the transmission range has been set to 85 meters. The simulation results 
are as shown in Fig. 18 (a), (b), (c) and (d) for number of nodes as 6, 8, 10 and 12 respectively. For Fig. 
18, initial random deployment with spacing between nodes is first executed and the automatic 
optimization utilizing Algorithm 1 is then performed. The original path is as shown in green with total 
length of 160 meters. The recording of node sequence is executed for every one meter of the path. The 
ns2 simulation results are represented as red lines and the results after smoothing are represented as 
blue lines. As shown in Fig. 19, we investigate the relationship between the size of smoothing window 
and the location error. As can be observed in Fig. 19, when the ratio of the size of smoothing window 
to the total number of node sequences is 1/6, the location error can be minimized.  
 
Fig.17. Assistance to 
manual node 
deployment. 
    
(a)N=6 (b)N=8 (c)N=10 (d)N=12 
Fig.18. ns2 simulation results. 
We now evaluate the performance of different deployment mechanisms by ns2 simulation. As 
shown in Fig. 20 are the results for 9 sensor nodes that are deployed with three different types of 
deployment mechanisms: (a) random deployment, (b) random deployment with spacing and (c) 
optimization with angle after random deployment with spacing. Each type of deployment has been 
executed for 20 times to take the average. Location errors before and after smoothing have both been 
included. As can be observed in Fig. 20, the improvement by deployment mechanisms (b) and (c) to 
deployment mechanism (a) are 15% and 35% respectively while the improvement of smoothing to 
deployment mechanisms (a), (b) and (c) are 31%, 40% and 39% respectively. From the results we can 
conclude that the deployment mechanism with spacing between nodes and with optimization with 
angle can effectively improve location errors that can be further reduced by smoothing. 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/30
國科會補助計畫
計畫名稱: 室內無線電-超音波定位系統之最佳部署策略研究
計畫主持人: 蕭俊杰
計畫編號: 99-2221-E-262-010- 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
