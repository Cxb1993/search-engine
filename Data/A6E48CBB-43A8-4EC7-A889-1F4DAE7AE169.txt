                                                  1  
1. 摘要  
當資料位元通過渦輪編碼器 [1][2]的時候，其編碼過程經
常會在資料位元，Xs；和對應之檢查位元，Xp，之間建立不同
程度之位元關聯性。我們發現：用來估測接收位元其對數可
能比率 (LLR)之公式中，向前機率、向後機率和分支機率之計
算過程均假設資料位元 (Data bit)和對應之檢查位元 (Parity bit)
之間其位元關聯性非常小，也就是相互獨立 [3][4]，此一關聯
性在後續的渦輪解碼過程中經常被忽略掉，以便於減少計算
方面之複雜度。然而，從渦輪碼之編碼器架構可以明確知道
採 用 遞 迴 系 統 性 迴 旋 編 碼 法 則 (Recursive Systematic 
Convolutional Encoding Scheme)將無可避免地會在資料位元
和 對 應 之 檢 查 位 元 之 間 ， 引 入 相 當 程 度 之 位 元 關 聯 性
(Bit-level Correlation)，此一關聯性在渦輪碼解碼器應考慮進
去。相信透過關聯性模型的建立與輔助，對於渦輪解碼器其
解碼之能力必定能夠產生相當之助益。  
 
 
 
 
關鍵字：渦輪編碼器，LLR、Bit-level Correlation，渦輪解碼
器  
PDF created with pdfFactory trial version www.pdffactory.com
                                                  3  
( )
)|(
)|(
1lnexp
1
)|(lnexp
1
1exp
1
1.......111exp
11
min
minminmin
321
klkl
l
klkll
klkl
lll
F
F
n
FFFl
xyP
xyP
xyP
a
aaaa
a
=
÷
÷
ø
ö
ç
ç
è
æ
÷÷
ø
ö
çç
è
æ
=
÷
ø
ö
ç
è
æ -
=
÷÷
ø
ö
çç
è
æ
@
÷÷
÷
ø
ö
çç
ç
è
æ
÷÷
ø
ö
çç
è
æ
++÷÷
ø
ö
çç
è
æ
+÷÷
ø
ö
çç
è
æ
+÷÷
ø
ö
çç
è
æ
=
 
因此正確的調適參數 F，我們可以近似不同程度的相關性給予
接收的訊息
k
y ，有兩種方法可以求出條件機率 ( )kk xyP | 的近似
值  
Case 1：  knkk yyy ,,2,1 L  是獨立或極少相關性  
ÕÕ
==
úû
ù
êë
é ×-
×
×
-==
n
l
klkl
b
n
l
klklkk
xayrExyPxyP
1
2
2
1
)(
2
exp
2
1)|()|(
ssp
   (2.3) 
式中：  
klx ：傳送的訊息 kx 的個別位元  
kly ：接收的訊息 ky 的個別位元  
bE ：每個位元的傳送能量  
2s ：雜訊變異量  
r：碼率 (code rate) 
a： fading amplitude 
 
PDF created with pdfFactory trial version www.pdffactory.com
                                                  5  
而我們所使用在 n=2，也就是 l的值為 1 到 2，因此分支機率
可寫成下式  
( )2221112)(2),'(
)(
kkkk
b
k
k
k xyxy
arEuLuCss
CORR
CORR ××+×××
××
+×+=G mm
s
  (2.8) 
令 mm =1 且假設 { })|(min)|( 11 klkllkk xyPxyP =  
則 mmm -=-= 22 12  
則式子可以改寫如下  
[ ]22112 )2()(2),'(
)(
kkkk
b
k
k
k xyxy
arEuLuCss
CORR
CORR ××-+×××
××
+×+=G mm
s
 (2.9) 
當 1=m 時，則 ),'()( ssCORRkG 有最小的相關性  
當 2=m 時且 )|()|(  2211 kkkk xyPxyP < 則 ),'(
)( ssCORRkG  有緊密的相關性  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
PDF created with pdfFactory trial version www.pdffactory.com
                                                  7  
我們做了一系列的實驗，來證明關聯性模型對渦輪碼的
影響，實驗條件如下：  
1. AWGN 通道   
2. 調變：Binary Phase Shift Keying(BPSK). 
3. RSC 參數：K=3， n=2， (G0，G1) = (7，5)8，1000 bit/frame 
4. 交錯器：隨機交錯器  
5. 解碼器：Max Log-MAP decoder 
6.  疊代次數：最多 8 次  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
PDF created with pdfFactory trial version www.pdffactory.com
                                                  9  
3.2 Eb/No V.S. Correlation Weight 
由圖 2.2 可知，加入加權值的確有一定的做用，接下來我
們實驗 Eb /No的值從 -2dB 到+3dB，每一次增加 0.2dB，而關聯
性加權值從 0 到 2 每一次增加 0.1，根據實驗的結果，不同的
Eb/No下，其相對應的最佳關聯性加權值如圖 2.3。  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
詳細實驗數據如表 2.1：  其中 µ1=1，µ2=1 為標準的渦輪碼  
 
 
 
 
 
 
圖 2.3  Eb /No  V.S. 最佳 Correlat ion Weight 關係圖  
PDF created with pdfFactory trial version www.pdffactory.com
                                                  11
3.3 在不同的渦輪解碼器上比較位元錯誤率  
依照較佳的加權值 ( m )進行實驗，當實驗時 Eb/No 的值是
由 -1.5~+1 dB，每次增加 0.2 dB，其繪製的曲線如圖 2.4，數
據如表 2.2。Uncoded 是完全不經過渦輪解碼器，而直接使用
hard decision 來做 0，1 的判斷；TBC 是標準的 Max Log-MAP
渦輪解碼器；CTBC 是我們所提的關聯性模型渦輪解器。  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
詳細實驗數據如表 2.2 
 
 
 
 
圖 2.4  Uncoded、TBC 及 CTBC 的位元錯誤率比較  
PDF created with pdfFactory trial version www.pdffactory.com
                                                  13
4.1使用 Radix-4架構提升 SOVA演算法解碼速度  
在本篇主題中，我們針對 SOVA 解碼器中的解碼單元加
法比較選擇單元 (Add Compare Select Unit，ACSU)來做改良。
ACSU 在先前已經被證實是 SOVA 解碼器的一大瓶頸，而在一
般 ACSU 方面，都是以所謂的「Radix-2」的架構來實現，而
在本文所提出的架構中，是以「 Radix-4」的架構實現。
「Radix-4」的架構曾在 MAP 解碼器上被提出，但是由於在每
次解碼的過程中皆會減少一個時間點的資訊，所以在碼增益
的效能大約差 0.4dB 左右，而本文所提的架構卻可保有相同的
碼增益。  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
PDF created with pdfFactory trial version www.pdffactory.com
                                                  15
所以狀態度量值會有遞增的現象。  
Radix-2 狀態度量值的遞迴式如 (4.1)式  
sm0(k+1)=max{sm0(k)+bm00(k)， sm1(k)+bm10(k)} 
sm1(k+1)=max{sm2(k)+bm21(k)， sm3(k)+bm31(k)} 
sm2(k+1)=max{sm0(k)+bm02(k)， sm1(k)+bm12(k)} 
sm3(k+1)=max{sm2(k)+bm23(k)， sm3(k)+bm33(k)} 
(4.1) 
又 Radix-2 分支度量值的計算式如 (4.2)式  
bm i j(k)= å
=
=
×+
2
12
)(
2
1 n
l
klkl
c
kk xy
LuLu           (4.2) 
由 (4.1)式，我們可以發現，在每個時間點，每個狀態底下都
是使用相同的運算單元，再加上每一個運算單元都有「加
(Add)」、「比較 (Compare)」及「選擇 (Select)」的動作，所以
我們稱此單元為 ACSU(Add-Compare Select Unit)，其架構如
圖 4.2。
 
 M1  
M2  
Compare un it  
M1 >=M2 ? 
MUX 
sm0 (k ) 
bm0 0 (k) 
bm1 0 (k) 
sm1 (k ) 
圖 4.2  Radix-2 ACSU 架構  
Max{  sm0 (k )+bm0 0 (k)， sm0 (k )+bm0 0 (k)}  
= sm0 (k+1) 
PDF created with pdfFactory trial version www.pdffactory.com
                                                  17
Radix-4 的狀態度量值遞迴式如 (4.3)式  
sm0(k+2)=max{sm0(k)+bm00,00(k)， sm1(k)+bm10,00(k)，      
           sm2(k)+bm21,10(k)， sm3(k)+bm31,10(k)}    
 sm1(k+2)=max{sm0(k)+bm02,21(k)， sm1(k)+bm12,21(k)，      
           sm2(k)+bm23,32(k)， sm3(k)+bm33,32(k)}     
 sm2(k+2)=max{sm0(k)+bm00,02(k)， sm1(k)+bm10,02(k)，      
           sm2(k)+bm21,12(k)， sm3(k)+bm31,12(k)}     
 sm3(k+2)=max{sm0(k)+bm02,23(k)， sm1(k)+bm12,23(k)，      
           sm2(k)+bm23,33(k)， sm3(k)+bm33,33(k)}     
(4.3) 
又 Radix-4 分支度量值的計算式如 (4.4)式  
bm i j， xy(k)= ååå
=
=
++
=
=
=
=
++ ×+
2
1
,,
1
0
1
0
)(
2
)(
2
1 n
l
lcklck
n
c
c
n
c
ckck xy
LuLu     (4.4) 
由 (4.3)式，我們推演出一個 Radix-4 的 ACSU 實現架構，如圖
4.4 
 
PDF created with pdfFactory trial version www.pdffactory.com
                                                  19
表 4.1 最大值條件表  
M1>= M2 ? M1>= M3 ? M1>= M4 ? M2>= M3 ? M2>= M4 ? M3>= M4 ? Max Value 
True True True NC NC NC M1  
False NC NC True True NC M2  
NC False NC False NC True M3  
NC NC False NC False False M4  
NC：Don’t  Care 
在此，必須注意的是，我們加入了一個 Re-Coder 的機制，因
為 4 選 1 多工器只有兩條選擇線，而 Re-Coder 就是將 6 個必
要資訊經由查表的方式轉換成 2 條選擇線。以 FPGA 而言，
這樣子的作法可以節省許多硬體。  
Re-Coder 的設計方法如下：  
令 M1>= M2? 為 x1 
M1>= M3? 為 x2 
M1>= M4? 為 x3 
M2>= M3? 為 x4 
M2>= M4? 為 x5 
M3>= M4? 為 x6 
x1、 x2、 x3、 x4、 x5、 x6為 Re-Coder 的六個輸入，也是比較單
元 (Compare Unit)的輸出  
再根據表 4.1 我們可推出 x1、 x2、 x3、 x4、 x5、 x6與 M1、M2、
M3、M4的布林代數關係  
PDF created with pdfFactory trial version www.pdffactory.com
                                                  21
4.4 合成＆模擬結果   
我們將以上的想法，使用 Qurtus II 合成工具來合成，並
且在 CycloneII 系列 FPGA 完成模擬，以下是我們的合成及模
擬成果，如表 4.4。  
表 4.4 Radix-2 ACS & Radix-4 ACS 比較表  
比較類型  相對延遲  
(per bit )  
相對產出量  
(per clock) 
LE 使用量  Cr it ical Path 
傳統  
Radix-2  
ACSU 
1 1 1 
1 ´2- input  Adder 
+1 ´2-way comparator 
+1 ´2-way Mult iplexer 
Radix-4 
ACSU 0.7 2 4.8 
1 ´2- input  Adder 
+1 ´4-way comparator 
+1 ´Re-Coder 
+1 ´4-way Mult iplexer 
我們是以 Radix-2 為參考基準，也就是以每產出一個位元，每
個週期的延遲時間及產出量做比較。在相對延遲的比較方
面，因為 Radix-4 一次可產出 2 個位元，所以它的相對延遲理
應比 Radix-2 小，只是與我們的理想值 0.5 有段差距。而在
Logic Element 的用量方面，我們也發現多出了不少倍，這是
使用 Radix-4 架構的一大缺點。  
以 Radix-4 的架構來實現解碼機制，雖然可以增加解碼
速度，不過由於複雜度相對提高，因此，面積增大是它的缺
點，不過隨著時代演進及製程進步，相同的積體電路會日益
PDF created with pdfFactory trial version www.pdffactory.com
                                                  23
5. 結論  
從編碼過程中，渦輪碼在訊息位元及同位元有關聯性，
我們發現此關聯性對錯誤率有影響，而關聯性模組提供了一
個簡單的方法，而且有效的架構。根據實驗結果指出，關聯
性的影響對渦輪碼解碼過程具有效作用。透過我們提出調整
關聯性加權值 ( m )，可以降低其位元錯誤率，確實可以增加渦
輪碼的解碼能力，並提昇渦輪碼的效能。  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
PDF created with pdfFactory trial version www.pdffactory.com
