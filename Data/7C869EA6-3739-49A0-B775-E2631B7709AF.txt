 2
(2) The cells in Gi are allocated the same channel set Pi, 
termed as the primary channels of these cells, where i =1, 
2, ..., and cs [1, 2, 3]. 
2.2. Call-based Channel Assignment 
After cell C acquired primary channels P(C), when C 
needs a channel to serve an incoming call, it acquires an 
available channel using an assignment strategy. If this 
assignment strategy cannot find an available channel, 
the call is blocked. The assignment strategies have been 
intensively studied in the literature. Some call-based 
channel assignment strategies [1-3] are presented below. 
(a) Nonpriority strategy 
In the nonpriority strategy (NS), for cell C, all 
primary channels P(C) are shared by both new and 
handoff calls. C handles a handoff request [6-7] 
exactly in the same way as a new call. Both kinds 
of requests are blocked if no free channel is 
available.  
(b) Queuing strategy[6- 8] 
In the queuing strategy (QS), the same channel 
sharing strategy is used as PS, excepting that 
queuing of call requests is allowed. When a call 
arrives to C, if no channels in P(C) are available, 
the request is put in the queue. If a channel is 
released when the queue is not empty, the channel 
is assigned to the request in the queue based on 
first-in-first-out manner. 
(c) Priority strategy 
In the priority strategy (PS), C gives the priority to 
handoff call requests by assigning PR(C) channels 
exclusively for handoff calls among P(C). The 
remaining channels P(C)−PR(C) are shared by 
both new calls and handoff requests. A new call is 
blocked if the number of available channels is less 
than or equal to P(C)−PR(C). A handoff request is 
blocked only when no channel is available in C. 
However, these approaches only considered the 
level of call-based channel assignment and the handoff 
management. Variations in traffic indicate changes in 
system traffic profile among cells, and the problem 
requires handling using cell-based channel allocations. 
Therefore, when traffic variation exists in certain cells, 
the above method has difficulty in tuning the allocations. 
 
minD
80
120
180
160
80
60 140 100 80 160 80
100 60 120 60 40 100 120
100 120 40 140 40 180
160 100 200 60 60 40
80
60
120
40
100
60
40
140
60
80
100
160
60 100
160
120
20
20
20
1C 2C
10C
6C
8C
7C
9C
3C 5C
40C
11C
20C
30C
4C
13C12C
16C 17C15C
14C
18C 19C
29C
28C27C26C25C24C23C22C
21C
35C32C
37C
31C
38C 39C
33C 34C
36C 42C41C
47C46C 48C43C 44C 49C45C
Fig. 1. A 7×7 Cellular system 
3. System Model 
A communication session (or a call) can be established 
if a channel is assigned to support the communication 
between the mobile host and the BTS. Two BTSs, whose 
geographical distance, is less than Dmin cannot 
concurrently assign the same channel to calls. Otherwise, 
their communication sessions will interfere with each 
other [1, 3]. 
Definition 1: Given a cell C, the set of interfering 
neighbors of cell C, denoted by IN(C), is: IN(C) = {cell 
C' : the BTSs of cells C and C' operate at the same band 
and Dist(C, C') < Dmin}, where Dist(C, C') denotes the 
geographical distance between cells C and C'. 
Cell-based channel set allocations are responsible 
for allocating each cell C a set of channels P(C), termed 
the primary channels of cell C. Therefore, Def. 2 is the 
condition of primary channel allocation. Besides the 
primary channel set P(C) of cell C, this study also uses 
S(C), termed the secondary channel set, to denote other 
non-primary channels of cell C. 
Definition 2 (Cell-based channel allocation): Given 
two distinct cells C and C', where C'∈IN(C), the 
 4
more than one cell concurrently activates to reassign the 
same channel r. ChStatus(C, r) contains ″Activated″, 
″Inactivated″, and ″Ready″ to denote that the 
reallocation of channel r is activated, not activated, and 
ready to be activated by cell C, respectively. 
Step 1: Sending a request to each cell in IN(C) for 
acquiring the state X, where X = {(λ(C'), P(C')) | cell C′ 
∈ IN(C)}. 
Step 2: After acquiring the state X, if ℜ(C, r) > 0, 
where r∈S(C), cell C performs the following operations: 
− ChStatus(C, r)← ″Ready″. 
− Performs Steps 3 and 4. 
Step 3: Generating a timestamp TS(C, r) according to 
the rule of Lamport’s logical clock system, and performs 
ChStatus(C, r)←″Activated″. One of the following two 
cases is performed. 
(C1). If IP(C, r)≠∅, cell C sends a REQ() to 
each cell C', where C'∈IP(C, r). 
(C2). If IP(C, r)=∅, cell C sends a REQ() to 
each cell C', where C'∈IN(C). 
(Notably, the consulting process includes: (1) cell 
C sends a REQ() to cell C' in Step 3; (2) cell C' sends 
REPLY() back to cell C; (3) cell C sends a RESULT() to 
cell C'; (4) cell C' sends FINISHED() back to cell C.) 
Step 4: Consulting between cell C and cell C', where 
C'∈IP(C, r) in case (C1); otherwise, C'∈IN(C) in case 
(C2). 
For cell C', when receiving a REQ() or RESULT(), it 
performs the following operations:  
(a) After receiving a REQ(C, TS(C, r), r), it replies 
″Req_allow″ or ″Req_deny″ back to cell C based 
on the following conditions: 
(D1). If ChStatus(C', r)=″Activated″, it sends 
REPLY(″Req_deny″) back. 
(D2). If ChStatus(C', r) = ″Inactivated″ and 
r∈P(C', r), it performs the following 
operations: 
− ChStatus(C', r) ←″Activated″ 
− Sends REPLY(″Req_allow″) back. 
(D3). If ChStatus(C', r)=″Ready″, it sends 
REPLY (″Req_allow″) back when TS(C, 
r)<TS(C', r); otherwise, it sends 
REPLY(″Req_deny″) back. 
(b) After receiving a RESULT(r, result), it performs 
the following operations: 
− If result = ″Successful″, it performs P(C') ← 
P(C') −{r} and S(C') ← S(C')∪{r}. 
− ChStatus(C', r)←″Inactivated″. 
− Sends FINISHED(r) to cell C. 
For cell C, after receiving each REPLY() from cell C′: 
(a) If all cells in IP(C, r) in case (C1) or IN(C) in case 
(C2) reply ″Req_allow″ message back, cell C 
sends a RESULT(r, ″Successful″) back to C′; 
otherwise, it sends a RESULT(r, ″Unsuccessful″) 
back to C′. 
(b) After each C′ sends a FINISHED(r) back, it 
performs the following operations: 
− If cell C sent a RESULT(r, ″Successful″) to 
C′, cell C sets P(C) ← P(C) ∪{r} and 
S(C)← S(C) −{r}. 
− ChStatus(C′, r) ←″Inactivated″. 
5. Simulation Results 
The simulated cellular system had 49 hexagonal cells, as 
shown in Fig. 1. The total number of channels in the 
system was 70. With Dmin = 21 R, in the conventional 
cell-based channel set assignment strategy [4-5], each 
cell was assigned 70/7 = 10 channels. The base traffic 
distribution is described as follows. As shown in Fig. 1, 
the number in each cell represented the call arrival rate, 
which was from 20 to 200 calls/hour. The call arrival was 
a Poisson process and the call duration was exponentially 
distributed with a mean of 3 minutes. The call arrival rate 
for each cell is then increased by 0%, 20%, 40%, 60%, 
and 80% with respect to the base traffic distribution dλ. 
To identify the enhancement, we also defined the 
call blocking reduction rate (CBR). For convenience, if 
notation CA represents a specific call-based channel 
assignment scheme, CA+ and CA are used to represent 
