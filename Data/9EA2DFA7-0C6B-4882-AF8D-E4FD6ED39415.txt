unknown variable. That is, the solution gradient 
should be determined by solving a difference 
equation derived from the original governing 
equation. For example, the widely-used finite-
element method [5] incorporates solution gradient 
as an additional computational variable. Suitable 
polynomials of specified degrees are assumed 
within the computational cell and appropriate 
weighting functions are chosen to derive the 
resulting difference equation system. Although 
quite versatile as it sounds, some important 
modifications on the weighting functions must be 
made to prevent spurious physical processes in the 
convection-dominant flow problems. Meanwhile, 
the resulting difference equations for unknown 
variables will be emerged in the coupled form. It is 
difficult to specify an individual equation to a 
particular solution variable via simple physical 
reasoning. Similar treatments can be referred to the 
discontinuous Galerkin method [6] and the spectral 
volume formulation [7]. In the discontinuous 
Galerkin method [6], the solution space is defined 
locally in a single computational cell to avoid the 
computationally intensive matrix inversion 
procedure in a conventional finite-element method, 
which will yield an efficient solution procedure. 
For the spectral volume formulation [7], the 
computational cell is divided into several sub-
domains to determine the resulting difference 
equation. Accurate solutions can be obtained if the 
sub-domains are appropriately defined. Recently, 
Chang and his coworkers [8-10] proposed a 
numerical method consisting of conservation 
element and solution element (CE/SE) and 
investigated its numerical characteristics by 
successfully solving extensive physical problems. 
In the CE/SE method, the solution variable and its 
gradient are solved with difference equations 
derived by dividing a single solution element into 
several conservation elements. Staggered grid in 
the space-time domain is adopted to avoid the 
upwind treatment of convective flux. High-
resolution results can be obtained for the multi-
dimensional Navier-Stokes equations. 
 
The present work proposes a novel approach 
to determine the solution gradient whose associated 
difference equation will be derived by a 
supplementary equation. This supplementary 
equation explicitly governs the evolution of 
solution gradient which is indicated by the original 
working equation. Similar finite-volume procedure 
can be employed to derive its difference 
counterpart; however, its control volume will be 
different from that for the original equation. In fact, 
the supplementary control volume is completely 
included in and geometrically similar to the original 
control volume. All geometrical properties required 
to discretize the supplementary equation will be 
confined in a single computational cell, which will 
result in a compact difference stencil. Required flux 
functions are evaluated only at the computational 
nodes and cell boundaries to fulfill the numerical 
closure problem between solution unknowns and 
difference equations. Since the solution gradient is 
resolved by a difference equation rather than the 
geometric relations in the conventional finite-
volume method, the present formulation can be 
regarded as a difference interpolation scheme (DIS). 
Nevertheless, it can be easily proven that the 
difference expression in a conventional finite-
volume also implicitly solves an evolution equation 
of solution gradient. Therefore, the conventional 
method can be cast into the present formulation to 
yield a more general finite-volume category. To 
shed some light on the numerical aspects of present 
proposition, numerical analyses both on 
amplification factor and modified equation are 
conducted and their results are compared with the 
well-established Lax-Wendroff and Warming-
Beam schemes. Meanwhile, several one- and two-
dimensional test problems are solved to 
demonstrate the numerical performances of present 
scheme. 
 
Besides the Introduction section, the present 
paper is organized as follows: Section 2 is devoted 
to demonstrating the essential ingredients of the 
present method. It focuses on the derivation of one-
dimensional formulation to highlight the solution 
procedure for supplementary equation and its 
difference counterpart. Numerical analyses for the 
resulting difference equations are carried out in the 
third section. Both the amplification factor and 
modified equation are demonstrated. In addition, a 
simple limiter function on the solution gradient to 
avoid possible oscillatory solution for a high-
resolution scheme is also introduced in this section. 
Section 4 details the solution procedure for the two-
dimensional formulation, which is extended for the 
problem described by equation systems. Numerical 
experiments are preformed and the results will be 
reported in Section 5. Finally, some relevant 
conclusions drawn from the present work are 
summarized in Section 6. 
 
 2
at the computational node. This relation can then be 
used to simplify the original approximate solution 
distribution (2b): 
 
n n n n
i i i i i
np [(x x ) a (t t )] (x, t) V
(x, t; i, n)
0 oth
⎧φ + − − − ∈⎪φ = ⎨⎪⎩ erwise
   
 (2e) 
 
In this way, to appropriately determine the resulting 
solution distribution, two parameters,  and , 
must be defined for each computational cell. That is, 
two difference equations must be offered to solve 
for these parameters at each computational node. 
Meanwhile, it is noted that the approximate 
solution is piecewise linear because it becomes 
discontinuous at the computational cell boundary, 
n
iφ nip
 
)n,1i;t,()n,i;t,( +ξφ≠ξφ  as  2/1ix +→ξ
 
 
2.2 Difference equations 
For each computational cell, two difference 
equations are required to characterize the solution 
distribution. The first equation can be obtained by 
integrating the governing equation (1a) over its 
corresponding control volume as shown in Fig. 1(a) 
by following the finite volume procedure: 
 
0dtdx
x
Fdtdx
t
2/1i
2/1i
1n
n
2/1i
2/1i
1n
n
x
x
t
t
x
x
t
t
=∂
∂+∂
Φ∂ ∫ ∫∫ ∫ +
−
++
−
+
 (3a) 
 
which will lead to: 
 
n 1
i 1/ 2 i 1/ 2
n
i 1/ 2 i 1/ 2
n 1
n
x x t
n 1 n
i 1/ 2
x x t
t
i 1/ 2
t
(x, t )dx (x, t )dx F(x , t)dt
F(x , t)dt 0
++ +
− −
+
+
+
−
Φ − Φ +
− =
∫ ∫ ∫
∫
 
 
The first term in this integration can be estimated 
with the approximate solutions (2a) and (2b) 
 
i 1/ 2 i 1/ 2
i 1/ 2 i 1/ 2
i 1/ 2
i 1/ 2
i 1/ 2
i 1/ 2
x x
n 1 * n 1
x x
x
n 1
x
x
n 1 n 1
i i i
x
n 1
i
(x, t )dx (x, t )dx
(x, t ;i, n 1)dx
[ p (x x )]
x
+ +
− −
+
−
+
−
+ +
+
+ +
+
Φ ≈ Φ
= φ +
= φ + −
= φ Δ
∫ ∫
∫
∫ dx
 
 
since  is the centroid of the control volume. 
Similarly, the second term becomes 
ix
 
i 1/ 2
i 1/ 2
x
n n
i
x
(x, t )dx x
+
−
Φ ≈ φ Δ∫  
 
Also, the third term can be approximated as: 
 
tf)t(Ot)t,x(F
dt)]t(O)tt(
t
)t,x(F)t,x(F[dt)t,x(F
2/1n
2/1i
32/1n
2/1i
t
t
22/1n
2/1n
2/1i2/1n
2/1i
t
t
2/1i
1n
n
1n
n
Δ≈Δ+Δ=
Δ+−∂
∂+=
+
+
+
+
+
+
++
++ ∫∫
++
 
where  and . 
Meanwhile,  is the approximate flux function 
at the computational cell boundary, 
2/ttt n2/1n Δ+=+ n1n ttt −=Δ +
2/1n
2/1if
+
+
 
)]t,x([F)t,x(Ff 2/1n2/1i
2/1n
2/1i
2/1n
2/1i
+
+
+
+
+
+ Φ=≈  
 
 4
evolution of solution gradient derived from the 
original equation, )
x
(L)
x
(
t ∂
Φ∂=∂
Φ∂
∂
∂
. The basic 
idea in the present study is to explicitly solve a 
working equation for solution gradient, which can 
be derived by taking the derivative of original 
governing equation (1a) with respect to spatial 
coordinate, 
 
0
x
F)
x
(
t 2
2
=∂
∂+∂
Φ∂
∂
∂
 (5) 
 
This is the supplementary equation for the 
evolution of solution gradient. It is directly derived 
from the original governing equation. This equation 
can be discretized by the finite-volume procedure 
as well. However, since this supplementary 
equation involves the second derivative of flux 
function, the derivative of flux function must be 
specified at the integration boundary to construct 
the associated difference equation. Therefore, in 
order to preserve the minimal supporting stencil, 
the supplementary equation is integrated over the 
control volume as shown in Fig.1(b). This control 
volume is constructed as half of original control 
volume in Fig.1(a). That is, the control volume for 
the supplementary equation (5) is completely 
included in the computational cell and its 
associated geometric characteristics can be entirely 
defined within the corresponding computational 
cell. Because this control volume will be employed 
to derived the difference equation for 
supplementary equation, it can be regarded as the 
supplementary control volume to distinguish from 
the original one shown in Fig.1(a). Integration of 
the supplementary equation (5) over the 
supplementary control volume will yield: 
 
0dtdx
x
Fdtdx)
x
(
t
4/1i
4/1i
1n
n
4/1i
4/1i
1n
n
x
x
t
t
2
2x
x
t
t
=∂
∂+∂
Φ∂
∂
∂ ∫ ∫∫ ∫ +
−
++
−
+
 
which can also be expressed as: 
 
i 1/ 4 i 1/ 4
i 1/ 4 i 1/ 4
n 1 n 1
n n
x xn 1 n
x x
t t
i 1/ 4 i 1/ 4
t t
(x, t ) (x, t )dx dx
x x
F(x , t) F(x , t)dt dt 0
x x
+ +
− −
+ +
+
+ −
∂Φ ∂Φ−∂ ∂
∂ ∂+ − =∂ ∂
∫ ∫
∫ ∫
 
 
 
The first term in this integration can be estimated 
with the approximate solutions (2a) and (2b) 
 
i 1/ 4 i 1 / 4
i 1 / 4 i 1 / 4
i 1 / 4
i 1 / 4
i 1 / 4
i 1 / 4
x xn 1 * n 1
x x
x n 1
x
x
n 1 n 1
i i
x
(x, t ) (x, t )dx dx
x x
(x, t ; i, n 1) dx
x
xp dx p
2
+ +
− −
+
−
+
−
+ +
+
+ +
∂Φ ∂Φ≈∂ ∂
∂φ += ∂
Δ= =
∫ ∫
∫
∫
 (6b) 
 
Similarly, the second term becomes 
 
i 1/ 4
i 1/ 4
x n
n
i
x
(x, t ) xdx p
x 2
+
−
∂Φ Δ≈∂∫  (6c) 
 
Also, the third term can be approximated by the 
following expression: 
 
t
x
f)t(Ot
x
)t,x(F
dt)]t(O)tt(
xt
)t,x(F
x
)t,x(F[dt
x
)t,x(F
2/1n
4/1i3
2/1n
4/1i
t
t
22/1n
2/1n
4/1i
22/1n
4/1i
t
t
4/1i
1n
n
1n
n
Δ∂
∂≈Δ+Δ∂
∂=
Δ+−∂∂
∂+∂
∂=∂
∂
+
+
+
+
+
+
+
+
++ ∫∫
++
 
where 
x
f 2/1n 4/1i
∂
∂ ++  is the approximate representation of 
flux derivative at the integration boundary, 
 
 6
boundary in our formulation can be determined: 
 
),(ff L,2/1n 2/1i
L,2/1n
2/1i
N2/1n
2/1i
+
+
+
+
+
+ φφ=  
 
and 
 
  (8c) ),(ff 2/1ni
2/1n
i
N2/1n
i
+++ φφ=
 
where  is the approximate solution at the 
computational node, 
2/1n
i
+φ
 
n 1/ 2 * n 1/ 2
i i
n 1/ 2
i
n n n
i i i
(x , t )
(x , t ;i,n)
xp
2
+ +
+
φ = Φ
= φ
Δ= φ − σ
 (8d) 
 
2.5 Resulting difference formulation 
In summary, we list the associated difference 
formulae to solve the equation with general 
conservation law:  
 
(i) difference governing equation 
 
)ff(
x
t 2/1n
2/1i
2/1n
2/1i
n
i
1n
i
+
−
+
+
+ −Δ
Δ−φ=φ  (4) 
 
(ii) difference supplementary equation  
 
)ff2f(
x
t4pp 2/1n 2/1i
2/1n
i
2/1n
2/1i
n
i
1n
i
+
−
++
+
+ +−Δ
Δ−=  (7) 
 
(iii) numerical flux function 
 
)(a
2
1)](F)(F[
2
1),(f LRRLRLN φ−φ−φ+φ=φφ  (8a) 
 
with 
 
LR
LR
L
LR
LR
RL
)(a
)(F)(F
),(a
φ=φ
φ≠φ
⎪⎪⎩
⎪⎪⎨
⎧
φ
φ−φ
φ−φ
=φφ  (8b) 
 
with 
 
),(ff L,2/1n 2/1i
L,2/1n
2/1i
N2/1n
2/1i
+
+
+
+
+
+ φφ=  
 
and   
 
),(ff 2/1ni
2/1n
i
N2/1n
i
+++ φφ=   
 
(iv) intermediate states 
 
)1(
2
xp ni
n
i
n
i
L,2/1n
2/1i σ−Δ+φ=φ ++  (8c) 
 
)1(
2
xp n 1i
n
1i
n
1i
R,2/1n
2/1i +++
+
+ σ+Δ−φ=φ  (8d) 
 
2
xpni
n
i
n
i
2/1n
i
Δσ−φ=φ +  (8d) 
 
As compared with the conventional finite-volume 
formulation, only equations (7) and (8d) are 
additionally incorporated in the present formulation. 
In fact, the present formulation can be recovered to 
a conventional finite-volume method if equation (7) 
is replaced by an expression for numerical solution 
gradient. That is, all the existing methodology 
developed for the finite-volume methodology can 
be straightforwardly applied in our present 
formulation.  
 
 
3. Numerical analyses and limiter function 
 8
 
2 2
2 I
[2 4 ( 2 )(1 e )] 1
4 ( 2 )(1 e ) 0
− θ
− θ
λ − − σ + σ − σ − λ +
− σ + σ + σ − =
I
 
 
To discern these two eigenvalues, we signify those 
as the principle and spurious eigenvalues, Pλ  and 
. Their properties can be analyzed via smooth 
solution ( ): 
Sλ
0→θ
 
2 2 2 3 4
P
2
2
(3 13 18 12 )1
2 96
1 3 6I [1 ]
24
σ θ σ − σ + σ − σ θλ ≅ − −
− σ + σ− σθ − θ
 (11d) 
 
σθσ−+σ−≅λ )1(I2)41(S  (11e) 
 
Since the amplification matrix for  becomes 0→θ
 
⎟⎟⎠
⎞⎜⎜⎝
⎛
σ−= 410
01
G , 
 
one can easily show that the principle eigenvalue 
dominates the evolution of computed variable,  
and the spurious eigenvalue affects the evolution of 
. Meanwhile, from the above asymptotic 
analysis for smooth solution, the present 
formulation will become unstable for 
n
iφ
n
ip
5.0>σ  
since both the magnitudes of principle and spurious 
eigenvalues shown in Eqs.(11d) and (11e) will be 
larger than unity, 1P >λ  and 1S >λ . This is a 
more restricted constraint on the time step than a 
conventional finite-volume scheme where the 
scheme may remain stable for .  1<σ
 
Generally speaking, eigenvalue of the 
amplification matrix is a complex number and can 
be expressed as: 
 
ψ−λ=λ Ie  (12a) 
 
where λ  is the magnitude and ψ  the phase angle. 
Since the principle eigenvalue dominates the 
evolution of computed variable which is our main 
concern, Figs.2(a) and 2(b) respectively show its 
magnitude and propagation phase angle in the 
stable region. In Fig.2(b), distribution of phase 
angle is expressed by the relative quantity obtained 
from the comparison with exact solution, Ψ : 
 
Ψψ=εψ /  (12b) 
 
with the exact phase angle,  
 
tka Δ=Ψ  (12c) 
 
The exact phase angle can be easily obtained for 
differential equation (9) [14]. From these figures, it 
can be observed that the proposed formulation 
yields more damping solution for high frequency 
components and the damping magnitude is 
symmetric with respect to . Furthermore, 
phase lagging solution can be expected in the 
numerical results especially with low Courant 
number. As compared with the existing second-
order accurate schemes such as the Lax-Wendroff 
[15] and Warming-Beam [16] schemes, the present 
method provides more accurate approximation if 
the numerical solution remains stable. 
25.0=σ
 
3.2 Modified equation 
Although the accuracy of a difference scheme 
may be estimated by the eigenvalues of the 
amplification matrix as stated above, its formal 
accuracy may be explicitly elucidated by the 
modified equation analysis [17]. The modified 
 10
where I is the identity matrix. This relation 
implies that evolution of solution variables in 
DIS formulation does not obey the simple 
weighting rule as most finite-volume methods 
always do. 
 
(2) As has been shown in the numerical analyses, 
the resulting difference equation (10) is a 
second-order approximation for the governing 
differential equation (9). That is, the DIS 
formulation yields a compact stencil 
encompassing only two computational nodes 
for a second-order accurate scheme. 
 
(3) Exact solution can be obtained by the 
difference equation (10) if the solution initial 
profile is linearly distributed, 
 
i 0 1c c xφ = + i  and 
 T0 1 1q (c (i 1/ 2)c x,c x / 2)= + − Δ Δ
 
where  and  are arbitrarily constant 
coefficients. This numerical property serves as 
a supplementary supporting evidence for a 
second-order accurate scheme. 
0c 1c
 
(4) When , Eq.(10) will be reduced as: 1=σ
 
n
1j
1n
j −
+ φ=φ  
 
This is the well-known shift condition for a 
general explicit finite-volume method [14], 
which is also valid for the DIS formulation. 
Furthermore, an additional shift condition can 
be obtained for  where Eq.(10) can be 
rearranged as, 
5.0=σ
 
1n
1j
1n
j qq
−
−
+ =  
 
That is, there exist two shift conditions for 
 and  in the present formulation 
although the instability of the solution may 
happen for 
5.0=σ 1=σ
5.0>σ .  
 
 
3.2 Limiter function 
It is well-known that a linear second-order 
accurate scheme will inevitably produce oscillatory 
computational results unless the solution gradient is 
appropriately limited [18]. Unlike the conventional 
geometric interpolation scheme (GIS), the present 
formulation directly adopts the solution gradient as 
a dependent variable. Therefore, it is a very easy 
and flexible task to impose some limitations on its 
magnitude. In the present work, we employ the 
constraint that the solution distribution should not 
induce local extremum on the computational cell 
boundaries due to resulting solution gradient. For a 
typical computational cell with grid index i, the 
maximum and minimum values on the cell 
boundaries can be determined from the solution and 
its gradient in the adjacent cells: 
 
)2/xp,,max( 1i1i1ii
R
max,2/1i Δ−φφφ=φ ++++
 
)2/xp,,min( 1i1i1ii
R
min,2/1i Δ−φφφ=φ ++++
 
)2/xp,,max( 1i1i1ii
L
max,2/1i Δ+φφφ=φ −−−−
 
L
i 1/ 2,min i i 1 i 1 i 1min( , , p x / 2)− − − −φ = φ φ φ + Δ
 
where superscript L and R denote the left and right 
boundaries for the specified cell, respectively. The 
over bar on the solution gradient, p , denotes the 
quantity directly calculated from governing 
difference without imposing any limiter. Therefore, 
conditions to imposing limiter function are quite 
straightforward in the present work: 
 12
are the respective grid sizes,  and 
. The control volume over which the 
governing equation (18) will be integrated is 
depicted in Fig.4(a). The solution is approximated 
by the following piecewise linear distribution:  
i1i xxx −=Δ +
j1j yyy −=Δ +
 
*
n j i
(x,y,t)  (x,y,t)
(x,y,t;i, j,n)
Φ ≈ Φ
= φ∑∑∑  (19a) 
 
with 
 
otherwise
V)t,y,x(
0
)yy(q)xx(p)tt(s
)n,j,i;t,y,x(
n
j,ij
n
j,ii
n
j,i
nn
j,i
n
j,i ∈
⎪⎩
⎪⎨
⎧ −+−+−+φ
=φ
 (19b) 
 
where  is the associated computational cell 
which is defined by the following relation: 
n
j,iV
 
n n
i,j, i 1/2 i 1/2 j 1/2 j 1/2V {(x,y,t) x x x ,y y y ,t t t
+
− + − +≡ < < < < < n 1}≤  
 
In the above equation, besides the aforementioned 
solution variables, ,  and , the additional 
variable, , is the derivative of solution variable 
with respect to the y-coordinate at the 
computational node, 
n
j,iφ n j,is n j,ip
n
j,iq
 
y
)n,j,i;t,y,x(
q
n
jin
j,i ∂
φ∂=  
 
Therefore, four dependent variables are 
incorporated to characterize the approximate 
solution distribution within a computational cell. 
We further assume the approximate solution 
satisfies the original governing equation at the 
computational node and arrive at the following 
equation: 
 
n
j,i
n
j,i
n
j,i
n
j,i
n
j,i qbpas −−=  (19c) 
 
With this condition, the approximate solution can 
be further simplified as: 
 
otherwise
V)t,y,x(
0
)]tt(b)yy[(q)]tt(a)xx[(p
)n,j,i;t,y,x(
n
j,i
nn
j,ij
n
j,i
nn
j,ii
n
j,i
n
j,i ∈
⎪⎩
⎪⎨
⎧ −−−+−−−+φ
=φ
 
 
As in the one-dimensional problem, the 
supplementary equations are employed to solve for 
the solution gradient,  and . Therefore, they 
can be obtained by taking derivatives of the 
original governing equation with respect to spatial 
coordinates: 
n
j,ip
n
j,iq
 
2 2
2
F G( )
t x x x y
∂ ∂Φ ∂ ∂ 0+ + =∂ ∂ ∂ ∂ ∂  (20a) 
 
and 
 
2 2
2
F G( )
t y x y y
∂ ∂Φ ∂ ∂ 0+ + =∂ ∂ ∂ ∂ ∂  (20b) 
 
Therefore, we have three equations (18), (20a) and 
(20b) for the three solution unknowns, ni, jφ ,  
and .  General finite-volume procedure can be 
employed to obtain their difference counterparts. 
n
i, jp
n
i, jq
 
4.2 Difference equations  
In our formulation, the approximate solution 
distribution (19) in a computational cell is 
described by three parameters, which must be 
solved with three difference equations. The first 
difference equation can be derived from the 
original governing equation (18) and the other two 
equations from the supplementary equations (20a) 
 14
n 1 n n 1/2 n 1/2 n 1/2
i, j i, j i 1/2, j i, j i 1/2, j2
n 1/2 n 1/2
i, j 1/2 i, j 1/2
4 tp p (f 2f f
x
g gt ( )
y x x
+ + +
+ −
+ +
+ −
Δ= − − +Δ
∂ ∂Δ− −Δ ∂ ∂
)+
 (23a) 
 
and  
 
n 1/ 2 n 1/ 2
i 1/ 2, j i 1/ 2, jn 1 n
i, j i, j
n 1/ 2 n 1/ 2 n 1/ 2
i, j 1/ 2 i, j i, j 1/ 22
f ftq q ( )
x y y
4 t (g 2g g )
y
+ +
+ −+
+ + +
+ −
∂ ∂Δ= − −Δ ∂ ∂
Δ− − +Δ
 (23b) 
 
where  and  are the numerical fluxes 
evaluated at the computational node for x- and y-
direction, respectively:  
n 1/ 2
i, jf
+ n 1/ 2
i, jg
+
 
n 1/ 2 n 1/ 2
i, j i jf F(x , y , t
+ +≈ )
)
 
 
and  
 
n 1/ 2 n 1/ 2
i, j i jq G(x , y , t
+ +≈  
 
Meanwhile, 
y
f 2/1n j,2/1i
∂
∂ ++  and 
x
g 2/1n 2/1j,i
∂
∂ ++  are the 
approximate derivatives of flux functions at the 
computational cell boundaries, 
 
y
)t,y,x(F
y
f 2/1nj2/1i
2/1n
j,2/1i
∂
∂≈∂
∂ ++++  
 
and  
 
x
)t,y,x(G
x
g 2/1n2/1ji
2/1n
2/1j,i
∂
∂≈∂
∂ ++++  
 
It should be noted that the following 
approximations are employed to derive the 
supplementary difference equations (23a) and (23b):  
 
n 1
i 1/ 2
n
i 1/ 2
x t
j 1/ 2
x t
n 1/ 2 n 1/ 2
i, j i, j 1/ 2
G(x, y , t)
dtdx
x
g g x t( )
x x
++
−
+
+ +
+
∂
∂
∂ ∂ Δ Δ≈ +
4∂ ∂
∫ ∫
 
 
and 
 
n 1j 1/ 2
n
j 1/ 2
y t
j 1/ 2
y t
n 1/ 2 n 1/ 2
i, j i, j 1/ 2
F(x, y , t)
dtdy
y
g g y t( )
y y
++
−
+
+ +
+
∂
∂
∂ ∂ Δ Δ≈ +∂ ∂
∫ ∫
4
 
 
The above difference equations can be made 
closured if all the numerical fluxes are 
appropriately defined.  
 
4.3 Numerical flux functions  
As similar to those in one-dimensional situation, 
the numerical flux functions in the above difference 
equations are proposed with the upwind 
differencing formulation. Besides the flux function 
in the x-direction as given in equations (8a) and 
(8b), the flux function in the y-direction is defined 
as:  
 
N B T B T
B T
1g ( , ) [G( ) G( )]
2
1 b ( )
2
φ φ = φ + φ
− φ − φ
 (24a) 
 
with 
 
 16
 
and  
 
n 1/ 2 n 1/ 2
i 1/ 2, j i 1/ 2, jn 1 n
i, j i, j
n 1/ 2 n 1/ 2 n 1/ 2
i, j 1/ 2 i, j i, j 1/ 22
f ftq q ( )
x y y
4 t (g 2g g )
y
+ +
+ −+
+ + +
+ −
∂ ∂Δ= − −Δ ∂ ∂
Δ− − +Δ
 (23b) 
 
(iii) numerical flux functions 
 
N L R L R
R L
1f ( , ) [F( ) F( )]
2
1 a ( )
2
φ φ = φ + φ
− φ − φ
 (8a) 
 
N B T B T
B T
1g ( , ) [G( ) G( )]
2
1 b ( )
2
φ φ = φ + φ
− φ − φ
 (24a) 
 
with 
 
LR
LR
L
LR
LR
RL
)(a
)(F)(F
),(a
φ=φ
φ≠φ
⎪⎪⎩
⎪⎪⎨
⎧
φ
φ−φ
φ−φ
=φφ  (8b) 
 
BT
BT
B
BT
BT
TB
)(b
)(G)(G
),(b
φ=φ
φ≠φ
⎪⎪⎩
⎪⎪⎨
⎧
φ
φ−φ
φ−φ
=φφ  (24b) 
 
and 
 
),(ff R,2/1n j,2/1i
L,2/1n
j,2/1i
N2/1n
j,2/1i
+
+
+
+
+
+ φφ=  
 
),(ff 2/1n j,i
2/1n
j,i
N2/1n
j,i
+++ φφ=  (25a) 
 
),(gg T,2/1n 2/1j,i
B,2/1n
2/1j,i
N2/1n
2/1j,i
+
+
+
+
+
+ φφ=  
 
),(gg 2/1n j,i
2/1n
j,i
N2/1n
j,i
+++ φφ=  (25b) 
 
(iv) intermediate states 
 
n
i, jn 1/ 2 n n
i, j i, j i, j
n
i, j n
i, j
a t xp
x 2
b t yq
y 2
+ Δ Δφ = φ − Δ
Δ Δ− Δ
 (26a) 
 
n
i, jn 1/ 2,L n n
i 1/ 2, j i, j i, j
n
i, j n
i, j
a t x(1 )p
x 2
b t yq
y 2
+
+
Δ Δφ = φ + − Δ
Δ Δ− Δ
 (26b) 
 
n
i 1, jn 1/ 2,R n n
i 1/ 2, j i 1, j i 1, j
n
i 1, j n
i 1, j
a t x(1 )p
x 2
b t yq
y 2
++
+ + +
+
+
Δ Δφ = φ − + Δ
Δ Δ− Δ
 
n
i, jn 1/ 2,B n n
i, j 1/ 2 i, j i, j
n
i, j n
i, j
a t xp
x 2
b t y(1 )q
y 2
+
+
Δ Δφ = φ − Δ
Δ Δ+ − Δ
 (26d) 
 
n
i, j 1n 1/ 2,T n n
i, j 1/ 2 i, j 1 i, j 1
n
i, j 1 n
i, j 1
a t xp
x 2
b t y(1 )q
y 2
++
+ + +
+
+
Δ Δφ = φ − Δ
Δ Δ− + Δ
 (26e) 
 
(v) derivatives of numerical fluxes 
 18
N L R L R
1 R L
A A A
1( , ) [ ( ) ( )]
2
1( )(
2
−
= +
− −
f u u F u F u
R Λ R u u )
 (31a) 
 
N B T B T
1 T B
B B B
1( , ) [ ( ) ( )]
2
1( )(
2
−
= +
− −
g u u G u G u
R Λ R u u )
 (32b) 
 
where the eigensystems are determined from the 
diagonalization of coefficient matrixes based on 
their corresponding states, LRu  and BTu , 
respectively: 
 
1
ARALR )(
−= RΛRuA  
 
and  
 
1
BBBBT )(B
−= RΛRu  (32c) 
 
Meanwhile, these states are specified to satisfy the 
Rankine-Hugoniot relation [12]: 
 
))(()()( LRLR
LR uuuAuFuF −=−  (32d) 
 
and 
 
))((B))( BTBT
BT uuuGuuG −=−  (32e) 
 
The resulting numerical flux functions at the 
computational node and cell boundaries become: 
 
),( 2/1n j,i
2/1n
j,i
N2/1n
j,i
+++ = uuff  (33a) 
 
),( 2/1n j,i
2/1n
j,i
N2/1n
j,i
+++ = uugg  (33b) 
 
),( R,2/1n j,2/1i
L,2/1n
j,2/1i
N2/1n
j,2/1i
+
+
+
+
+
+ = uuff  (33c) 
 
),( T,2/1n 2/1j,i
B,2/1n
2/1j,i
N2/1n
2/1j,i
+
+
+
+
+
+ = uugg  (33d) 
 
(v) intermediate states 
 
n
i, jn 1/ 2 n n
i, j i, j i, j
n
i, j n
i, j
t x
x 2
t y
y 2
+ Δ Δ= − Δ
Δ Δ− Δ
A
u u p
B
q
 (34a) 
 
n
i, jn 1/ 2,L n n
i 1/ 2, j i, j i, j
n
i, j n
i, j
t x( )
x 2
t y
y 2
+
+
Δ Δ= + − Δ
Δ Δ− Δ
A
u u I p
B
q
 (34b) 
 
n
i 1, jn 1/ 2,R n n
i 1/ 2, j i 1, j i 1, j
n
i 1, j n
i 1, j
t x( )
x 2
t y
y 2
++
+ + +
+
+
Δ Δ= − + Δ
Δ Δ− Δ
A
u u I p
B
q
 
n
i, jn 1/ 2,B n n
i, j 1/ 2 i, j i, j
n
i, j n
i, j
t x
x 2
t y( )
y 2
+
+
Δ Δ= − Δ
Δ Δ+ − Δ
A
u u p
B
I q
 (34d) 
 
n
i, j 1n 1/ 2,T n n
i, j 1/ 2 i, j 1 i, j 1
n
i, j 1 n
i, j 1
t x
x 2
t y( )
y 2
++
+ + +
+
+
Δ Δ= − Δ
Δ Δ− + Δ
A
u u p
B
I q
 (34e) 
 
(vi) derivatives of flux functions 
 
 20
are well known and will not be further emphasized 
in the present work. The unlimited DIS may 
produce phase-lagging oscillatory solution near 
solution steep change as expected from numerical 
analysis; however, its magnitude is quite limited. 
The limited DIS formulation clearly shows very 
agreed results both in smooth and steep regions. It 
provides results with very sharp profiles but 
without the clapping effect as observed in 
SuperBee scheme due to numerically over-
compression. Its numerical diffusion is also 
significantly less that the MinMod scheme. 
 
The second test problem is also the calculation 
of linear convection equation with computational 
region, . The initial condition is defined 
via the following distribution: 
1x1 ≤≤−
 
1x3/1
3/1x3/1
3/1x1
6/)x3sin(1x2
)x2sin(
)x5.1sin(x
)x(~
2
≤<
<<−
−<≤−
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
π−−
π
π−
=Φ  (37a) 
 
with simple transformation given below: 
 
⎪⎩
⎪⎨
⎧
<<
<<
−Φ
+Φ
=Φ
2x5.0
5.0x0
)5.0x(~
)5.1x(~
)0,x(  (37b) 
 
As is shown in the above equations, there exist 
several discontinuities in the initial solution profile. 
Meanwhile, the calculation is proceeded with the 
periodic boundary conditions at  and 1x −= 1x = . 
It can be employed to verify the numerical 
treatment on the periodic boundaries. This problem 
is proposed by Lax [21] and becomes a benchmark 
problem to test numerical schemes. In Figure 6, the 
computational results are compared with the exact 
solution for the initial profile propagating one 
period ( a/2t = ). These calculations are carried 
out with grid spacing, 02.0x =Δ  and the time step 
is determined with Courant number, 3.0=σ . 
Similar conclusions can be drawn from the 
computational results as in the previous test 
problem: the proposed DIS formulation with 
suitable limiter on solution gradient can provide 
non-oscillatory and very accurate results as 
compared with other numerical schemes. Due to its 
effectiveness to eliminate possible solution 
oscillation, the flux limiter treatment will be 
employed in the subsequent calculations without 
further emphases.  
 
5.2 One-dimensional Euler equations 
The main motive of present DIS formulation is 
to develop an accurate simulation tool for gas 
dynamics phenomena. Therefore, we will verify the 
performances of this scheme on non-linear equation 
system by solving Euler equations. For the non-
linear equation system (28), the gas dynamics 
problems equip with the following solution and 
flux vectors [2]: 
 
T)E,u,( ρρρ=U , 
T22 )]u
2
1E(u,pu,u[ ρ+γρ+ρρ=F  (38a) 
 
where ρ  is the gas density, u the velocity, p the 
pressure and E the total energy. The ideal gas 
equation is also implied, 
 
2u
2
1
1
pE ρ+−γ=ρ  (38b) 
 
with specific heat ratio, .4.1=γ  For brevity, 
 22
artificial reflection wave can be observed from the 
boundary. The calculated result in Fig.9(c) at t=0.2 
illustrates that the right-running shock approaches 
the right boundary. There is no reflection wave 
emanating from the right boundary. Figure 9(d) 
depicts the computational results at t=0.25. Both 
the left-running fan and right-running shock 
smoothly emerge into the left and right boundaries, 
respectively. As before, no significant reflection 
waves can be observed on the boundaries. The 
computational results at t=0.35 are elucidated in 
Fig.9(e), where all generating waves due to the 
initially discontinuous states reached and left the 
boundaries. The generated intermediate state 
uniformly remains in the computational domain 
without any significantly artificial wiggles. From 
these computational results, it is clearly shown that 
no significantly spurious reflection wave is 
produced as the waves merge into the boundaries. 
That is, the present DIS formulation with solution 
gradient as an additional dependent variable can 
provide quite accurate results for wave propagation 
phenomena without significantly artificial wave 
reflection. 
 
The third problem is a severe separation flow 
problem. The initial left and right states are 
assigned as: 
 
⎪⎩
⎪⎨
⎧
>
<−
=ρ
M
M
xx
xx
.)1.,5.,1(
.)1.,5.,1(
)p,u,(  (41) 
 
This problem will produce a region with pressure 
being so low that fails many numerical schemes. 
The numerical flux function should be modified by 
increasing the numerical diffusion to prevent the 
occurrence of negative pressure or density [24]. In 
the present work, we adopt the grid spacing, 
01.0x =Δ  and time step,  to simulate 
this problem. Figure 10 shows the computational 
density distributions as well as the exact solution at 
t=0.06 after the separating diaphragm is removed. It 
clearly shows that, following the evolution of exact 
solution, the present formulation can provide more 
accurate results than other schemes. 
25.0=σ
 
The fourth test case is the blast wave interaction 
problem. It consists of three initial states divided by 
two diaphragms [21, 23]: 
 
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
<
<<
<
=ρ
xx
xxx
xx
.)100.,0.,1(
)01.0.,0.,1(
.)1000.,0.,1(
)p,u,(
2M
2M1M
1M
 (42) 
 
The dividing diaphragms are located at 1.0x 1M =  
and 9.0x 2M = . Boundary conditions of solid 
walls are assigned at both ends,  and 0x = 1x = . 
Besides the waves and intermediate states 
generated in the initially discontinuous distribution, 
there also exist complicated wave-boundary 
interaction phenomena. In our calculations, the 
computational parameters of grid spacing and time 
step are set as 400/1x =Δ  and 45.0=σ , 
respectively. The computational density 
distribution at t=0.038 after the diaphragms are 
removed is shown in Fig.11. Since it is very 
difficult to derive the exact solution for this 
complicated flow phenomena, a referenced solution 
with a refined grid of 1600/1x =Δ  is depicted for 
comparison. Results obtained by the UD and 
MinMod schemes are also included in this figure to 
indicate the accuracy of the present DIS 
formulation. It is shown that the DIS formulation 
 24
solution and computational result: 
 
∑∑ φ−Φ=εφ
j i
2n
j,i
n
ji
ij
])t,y,x([
N
1
 (45) 
 
where  is the total computational nodes in the 
interested domain. From Fig.15(a), it is clearly 
depicted that the solution error by the present DIS 
is much less than the UD and MinMod schemes. 
That is, to attain the same accurate result predicted 
by the DIS, both UD and MinMod schemes require 
more computational nodes. As for the effects of 
time step, it is expected that adoption of more 
restricted time step will incur more solution error, 
which is clearly shown in Fig.15(b). In Fig.15(c), it 
is illustrated that more accurate result can be 
obtained with more refined grid. However, much 
more CPU time must be invested to yield the 
resulting accurate solution with refined grid 
spacing. The required CPU time and corresponding 
solution error for UD, MinMod and DIS are shown 
in Fig.16 in terms of the adopted grid number, . 
The grid number is specified both in the x- and y-
direction. In this figure, the solution error for time 
evolution problem is defined as the average error in 
the course of simulation time: 
ijN
cn
 
∑ −φφ −ε=ε
n
1nnn
max
)tt(
T
1
 (46) 
 
In this figure, the respective increasing and 
decreasing exponents for CPU time and solution 
error between two successive grids are also 
depicted. These exponents are estimated by the 
following relations: 
 
)n(n
)CPU(n
c
cpu A
A
Δ
Δ=δ  and 
)n(n
)(n
cA
A
Δ
εΔ−=δ φφ  (47) 
 
where ( )Δ ⋅  signifies the difference between two 
successive grids. It can be expected that the 
exponents of CPU time for all schemes is 
approximately three. It is because that as the grid 
spacing is halved, the total computational nodes 
will be quadrupled and the required computational 
steps will be double due to a given Courant number. 
Meanwhile, for a given grid spacing, the ratios of 
required CPU time will be approximately 2:3:6 for 
UD, MinMod and DIS in our programming. The 
exponent of solution error for the proposed DIS 
(1.94 with finest grid) is larger then those for UD 
(0.60 with finest grid) and MinMod (1.64 with 
finest grid). That is, the gain of solution efficiency 
by the proposed DIS is significant as compared 
with the UD and MinMod schemes. 
 
The second test example in this category is a 
convection problem with rotating flow field,  
 
ya −=  and xb =  (48a) 
 
The interested domain is defined in the square 
region of 1y,x1 ≤≤− . The initial solution 
distribution is assigned as: 
 
21 ta n h {5 0[0 .1 x ( y 0 .5 ) ]}
( x , y , 0 )
2
+ − + −Φ =
2  (48b) 
 
which will yield a circular distribution centered at 
)5.0,0()y,x( =  with steep gradient around the 
radius of 0.1. Figure 13 shows the computational 
solution contours by UD, MinMod and DIS 
uniform grid spacing,  and 
Courant number, 
x y 1/ 5Δ = Δ = 0
3.0=σ  aftern one revolution. 
 26
adopted grid nodes for various schemes are 
depicted in Fig.24. As consistent with previous 
results, the increasing exponent of CPU time is 
approximate three for all schemes. 
 
 
6. Conclusions 
In the present work, we have successfully 
developed a novel difference interpolation scheme 
(DIS) for conservation laws. As compared with the 
conventional finite-volume methods, an additional 
unknown variable associated with solution gradient 
is introduced to obtain second-order accurate 
approximations. Developments of the 
supplementary equation and its associated finite-
volume procedure for the additional variable are the 
essential features of present proposition. Although 
arising from different approaches and having to 
introduce an explicit difference equation for 
solving the solution gradient, the proposed DIS 
formulation may be conveniently cast into the same 
category as the conventional methods. Therefore, 
we can directly take the advantages of all the 
existing technologies developed for the 
conventional finite-volume method. Necessary 
numerical analyses on scheme stability and 
accuracy for the resulting difference equation are 
conducted to shed some lights on essential 
properties of the proposed formulation. From the 
normal mode and modified equation analyses, one 
can find the present proposition is more accurate 
than some of the existing widely-used second-order 
schemes. For practical applications, we also 
investigate the effects of the introduced limiter 
function on solution gradient to prevent oscillatory 
solutions. Manipulations of limiter functions 
become very simple and comprehensive since the 
solution gradient has been extracted as a dependent 
variable.  
 
Besides the one-dimensional formulation, the 
present article also details the two-dimensional DIS 
formulation for equation system with conservation 
laws. Approximate solution distribution, 
supplementary equations, associated difference 
equations and numerical flux functions are 
described. It also itemizes the necessary solution 
procedure to perform a practical calculation. 
Finally, numerical experiments on several one- and 
two-dimensional benchmark problems are carried 
out to verify the present analyses as well as to 
demonstrate the feasibility of the proposed DIS 
formulation. The test problems include the scalar 
linear convection equation and the Euler equations 
in gas dynamics. Solution accuracy and required 
CPU time are also evaluated in the present study. 
From the computational results, it is shown that the 
present DIS formulation can provide accurate 
results as compared with some widely-used 
schemes. Therefore, it can be concluded that the 
DIS formulation may be one of the possible 
candidates to simulate complicated physical 
phenomena derived from non-linear conservation 
laws.  
 
 
References 
1. B. van Leer, “Towards the ultimate 
conservative difference scheme. V. A 
second-order sequel to Godunov’s method,” 
Journal of Computational Physics, Vol.32, 
pp.101-136 (1979) 
2. Ch. Hirsch, Numerical computation of 
internal and external flows, Vol. 2: 
computational methods for inviscid and 
viscous flows, John Wiley and Sons (1990) 
3. T. J. Barth and P. O. Frederickson, Higher-
order solution of the Euler equations on 
 28
i i+1i-1
n
n+1
i+1/2i-1/2
 
(a) original governing equation 
i i+1i-1
n
n+1
i+1/2i-1/2
 
(b) supplementary equation 
Figure 1. Control volumes to derive difference 
equations for one-dimensional problems 
 
θ (deg)
0 20 40 60 80 100 120 140 160 180
|λ P
|
0.85
0.90
0.95
1.00
1.05
σ=0.5
σ=0.1, 0.4σ=0.2, 0.3
 
(a) amplitude 
 
θ (deg)
0 20 40 60 80 100 120 140 160 180
εψ
0.90
0.92
0.94
0.96
0.98
1.00
1.02
σ=0.1
σ=0.2
σ=0.3
σ=0.4
σ=0.5
 
(b) phase angle 
Figure 2. Principal amplification factor of DIS 
 
 
σ
0.0 0.1 0.2 0.3 0.4 0.5
-0.2
-0.1
0.0
0.1
0.2
0.3
0.4
Lax-Wendroff
Warmimg-Beam
DIS
 
Figure 3. Coefficients in the leading truncation 
error terms for various schemes 
 
 
i-1/2 i+1/2
j-1/2
j+1/2
 
(a) original governing equation 
i-1/2 i+1/2
j-1/2
j+1/2
 
(b) supplementary equations 
Figure 4. Control volumes to derive difference 
equations for two-dimensional problems 
 
 
 30
x0.0 0.2 0.4 0.6 0.8 1.0
-1
0
1
2
3
4
p
u
ρ
 
(c) t=0.2 
 
x
0.0 0.2 0.4 0.6 0.8 1.0
-1
0
1
2
3
4
p
u
ρ
 
(d) t=0.25 
 
x
0.0 0.2 0.4 0.6 0.8 1.0
-1
0
1
2
3
4
p
u
ρ
 
(e) t=0.35  
Figure 9. Time sequences of evolution of 
computational results for the one-
dimensional Lax’s shock tube problem  
 
 
x
0.0 0.2 0.4 0.6 0.8 1.0
ρ
-0.2
0.0
0.2
0.4
0.6
0.8
1.0
1.2
Exact
UD
MinMod
DIS
 
Figure 10. Computational density distribution for 
the one-dimensional separation flow 
problem 
 
 
x
0.4 0.5 0.6 0.7 0.8 0.9 1.0
ρ
-1
0
1
2
3
4
5
6
7
ref. (refined grid)
UD
MinMod
DIS
 
Figure 11. Computational density distribution for 
the one-dimensional blast wave interaction problem 
 
 
x
0.0 0.5 1.0 1.5 2.0 2.5
ρ
2
3
4
5
ref. (refined grid)
UD (Δx=1/40)
MinMod (Δx=1/40)
MinMod (Δx=1/80)
DIS (Δx=1/40)
 
Figure 12. Computational density distribution for 
the one-dimensional shock/turbulence interaction 
problem 
 
 32
t
0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7
εφ
0.000
0.005
0.010
0.015
0.020
0.025
320x320
40x4
0
80x80
160x160
 
(c) grid size 
Figure 15. Solution error of two-dimensional linear 
problem with constant convection velocity 
 
 
nc
30 40 50 60 70 80 90 200 300 400100
0.0001
0.001
0.01
0.1
1
10
100
1000
UD
MinMod
DIS
CPU time (s)
1.66
1.52
1.94
0.96 1.38
1.64
0.36 0.48
0.60
3.11
3.11
3.13
2.91
3.04
3.17
3.13
3.09
3.09
φε
 
Figure 16. Variations of solution error and CPU 
time in terms of number of computational nodes for 
two-dimensional linear problem with constant 
convection velocity 
 
 
y
-1.0
-0.5
0.0
0.5
1.0
y
-1.0
-0.5
0.0
0.5
x
-1.0 -0.5 0.0 0.5 1.0
y
-1.0
-0.5
0.0
0.5
UD
MinMod
DIS
 
Figure 17. Computational solution contours for 
two-dimensional linear problem with rotating flow 
field 
 
 
θ/2π
0.0 0.1 0.2 0.3 0.4 0.5
φ
0.0
0.2
0.4
0.6
0.8
1.0 exact
UD (Δx=1/50)
MinMod (Δx=1/50)
MinMod (Δx=1/100)
DIS (Δx=1/50)
 
Figure 18. Computational solution profiles along 
r=0.5 for two-dimensional linear problem with 
 34
x-1.0 -0.5 0.0 0.5 1.0
y
-1.0
-0.5
0.0
0.5
1.0
UD
 
(a) UD 
 
x
-1.0 -0.5 0.0 0.5 1.0
y
-1.0
-0.5
0.0
0.5
1.0
MinMod
 
(b) MinMod 
 
x
-1.0 -0.5 0.0 0.5 1.0
y
-1.0
-0.5
0.0
0.5
1.0
DIS
 
(c) DIS 
 
x
-1.0 -0.5 0.0 0.5 1.0
y
-1.0
-0.5
0.0
0.5
1.0
Reference (400x400)
 
(d) reference solution 
Figure 22. Computational density contours for two-
dimensional Euler equations  
 
 
 36
