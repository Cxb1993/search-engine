行修正與實作以驗證其可行性，同時並利用標準模型 
(Standard Model) 進行安全性之證明，以證明我們所提出之
儲存證明確實符合所要求之安全需求。 
 
中文關鍵詞： 大型多人線上遊戲、雲端運算、雲端儲存、保密性、整體
性、零知識證明、動態操作、批次驗證、輕量驗證 
英 文 摘 要 ： MMOG is very productive and needs best protection. 
Once a successful attack lands on MMOG companies, the 
loss of property will be significant. 
The main challenge of MMOG is the loading from 
numerous online players all over the world, and this 
is the reason why cloud computing which provides high 
performance and reliability is extremely applicable 
to MMOG. 
However, the security problem becomes extremely 
difficult in large-scale environments such as clouds. 
The increase of cloud users will result in the 
difficulty of handling the communication needed by 
authentication, the computing power needed by cloud 
users, or the large scale key management. On the 
other hand, not all the traditional secure mechanisms 
are valid in clouds while the security standards are 
not completed.  
In the first year of this project, we proposed a 
provable data possession protocol which enables some 
other parties besides the data owner to verify the 
integrity of data stored on cloud servers without 
revealing the contents of the data. Moreover, we 
proposed another virtual file system to hide data 
information and directory architecture from the cloud 
server. 
In the second year of this project, we proposed a 
provable data possession protocol which supports 
dynamic operation, which means that the owner does 
not have to start over the whole protocol for a 
single insertion, deletion, or modification on part 
of their data. Besides, our protocol also enables 
Thin-Clients, such as smart phones, to perform not 
only efficient integrity verifications but also 
repository-wise verifications. Thus, the provable 
data possession protocols become practical on Thin-
 1
 
行政院國家科學委員會專題研究計劃成果報告 
具高效率資源與服務管理之高可信度遊戲雲端計算 
Dependable Gaming Clouds with Efficient Resource and Service Management 
子計畫六：遊戲雲端上身分管理與隱私續存協定之設計與實作 
 
計劃編號：NSC99-2221-E-002-109-MY3 
執行期限：99年 8月 1日至 102年 7月 31日 
主持人：雷欽隆  台大電機系教授 
 
 
一、中文摘要 
 
大型多人線上遊戲 (Massively 
Multiplayer Online Game, MMOG) 是一塊
產值非常高的市場，故在安全上更需要多
加重視，若遭到駭客成功的攻擊，資產的
損失將會相當可觀。MMOG 主要的問題都
在於龐大的玩家人數，這使得 MMOG 是
一個相當適合運行在雲端運算上的應用，
雲端運算可以提供遊戲公司高性能、高可
靠性的虛擬設備來負荷極大量的上線玩
家。 
然而，在雲端這類大規模的環境中，
安全性變成一個相當棘手的問題，無論是
身份認證的通訊量、計算量問題，或是大
規模的金鑰管理問題，都會隨著用戶數量
的提昇而造成極快速的成長。而傳統的安
全機制並非全部都能有效地運用在雲端的
環境之中，而目前雲端的安全標準及安全
元件也尚未完備。 
對傳統的線上遊戲而言，運作環境為
遊戲公司本身的機器，故主要的安全議題
集中在維護資料保密及與客戶間的安全傳
輸上。然而，當運作環境轉移到雲端中時，
舉凡資料儲存和運算等，都可能委託其他
第三方雲端服務來進行。如此將可能導致
遊戲公司所擁有之客戶個人資料、儲值資
料、遊戲參數、遊戲歷程等重要資料外流
或遭到竄改，造成遊戲公司甚至是其客戶
之損失。 
所以，遊戲公司在考慮如何利用雲端
運算、雲端儲存等服務來降低時間和金錢
成本的同時，必須去考慮一些安全上的基
本需求：如保密性 (Confidentiality)、整體
性 (Integrity) 和可得性 (Availability) 等。  
有鑒於雲端運算帶來的各種安全議
題，本子計畫的目標是對各種常見的密碼
協定進行研究，進而發展出適合用於遊戲
雲端運算的密碼協定。其中，由於雲端儲
存服務的日益普及 (從企業及各種組織使
用的 Amazon S3 以至於一般個人使用的 
Dropbox)，故我們的研究重心著重於雲端
儲存的安全議題上。 
在計畫的第一年中，我們提出了兼顧
資料保密性、整體性及支援動態操作 
(Dynamic Operation) 的儲存證明協定。雲
端儲存協定本身的目的即為提供使用者對
於其儲存於雲端伺服器上之資料的整體性
確認。除此之外，我們藉由零知識證明協
定 (Zero-Knowledge Proof) 的協助，提供
雲端儲存伺服器能在不揭露儲存資料內容
的情況下向使用者證明其儲存資料之整體
性的能力；藉此功能，使用者不需要額外
對其資料進行加解密處理。另外，對於動
態操作 (諸如插入、修訂、刪除等操作) 的
支援，使得使用上並非必定要將整份完整
的資料取回。 
此外，我們還提出了一個虛擬檔案系
統。這個虛擬檔案系統可防止雲端伺服器
 3
proposed a provable data possession protocol 
which supports dynamic operation, which 
means that the owner does not have to start 
over the whole protocol for a single insertion, 
deletion, or modification on part of their data. 
Besides, our protocol also enables 
Thin-Clients, such as smart phones, to 
perform not only efficient integrity 
verifications but also repository-wise 
verifications. Thus, the provable data 
possession protocols become practical on 
Thin-Clients due to our work. 
In the last year, we proposed a provable 
data possession protocol especially for 
Thin-Clients. We implement our system 
(Cirrus) on Android platform and give a 
formal proof to prove that Cirrus actually 
meets the security requirement for a provable 
data possession system. 
 
Keywords: Massively Multiplayer Online 
Game, Cloud Computing, Cloud Storage, 
Confidentiality, Integrity, Zero-Knowledge 
Proof, Dynamic Operation 
 
二、緣由與目的 
 
在過去十數年間，個人電腦是一般大
眾較為主流的運算裝置，但隨著通訊技術
的進步，電腦與通訊網路的可用頻寬持續
地以倍數成長、網際網路的興起也帶動了
各類型網路應用程式的發明與演進。其
中，雲端運算憑藉者利用網路將各地運算
資源進行連結統整的能力，成為當今電腦
科學中最熱門的領域之一。 
正因為網路發展帶動了雲端運算的崛
起，不管是個人或是企業都或多或少會使
用到各種雲端服務。從一般個人用途的 
Gmail、Dropbox，到企業組織使用的 
Amazon EC2、Amazon S3，雲端運算已然
悄悄在我們的日常生活中紮根。然而，由
於運算能力、儲存空間等資源並非完全在
使用者的管理之下，新的安全議題也就此
衍生。一方面，企業使用雲端運算服務來
代替自己維護的伺服器可以大幅降低硬體
購置、故障排除、或是服務的維護等時間
或金錢上的開銷。而在另一方面，使用者
在考慮如何利用雲端運算、雲端儲存等服
務來降低時間和金錢成本的同時，必須去
考慮一些安全上的基本需求：如保密性 
(Confidentiality)、整體性 (Integrity) 和可
得性 (Availability) 等。  
有鑒於雲端運算帶來的各種安全議
題，本子計畫的目標是對各種常見的密碼
協定進行研究，進而發展出適合用於遊戲
雲端運算的密碼協定。其中，由於雲端儲
存服務的日益普及 (從企業及各種組織使
用的 Amazon S3 以至於一般個人使用的 
Dropbox)，故我們的研究重心著重於雲端
儲存的安全議題上。 
 
三、結果與討論 
 
第一年成果 
在計畫的第一年中，我們提出了兼顧
資料保密性、整體性及支援動態操作 
(Dynamic Operation) 的儲存證明協定 
(NIC Storage)。雲端儲存協定本身的目的即
為提供使用者對於其儲存於雲端伺服器上
之資料的整體性確認。除此之外，我們藉
由零知識證明協定 (Zero-Knowledge Proof) 
的協助，提供雲端儲存伺服器能在不揭露
儲存資料內容的情況下向使用者證明其儲
存資料之整體性的能力；藉此功能，使用
者不需要額外對其資料進行加解密處理，
也便於在行動裝置上使用。另外，對於動
態操作 (諸如插入、修訂、刪除等操作) 的
支援，使得使用上並非必定要將整份完整
的資料取回，也減輕了行動裝置在通訊上
的負擔。 
此外，我們還提出了一個虛擬檔案系
統。這個虛擬檔案系統可防止雲端伺服器
得到資料的檔案資訊 (如檔名、目錄結構
等)，以確保儲存於雲端伺服器之資料的保
密性；使用者同時還能將檔案的存取權限
委派給其他使用者，而不影響其它未被分
享的資料。 
 5
 
圖 10：NIC Storage：手機端驗證程式功能列表與
伺服器位址。 
 
圖 11：NIC Storage：手機端驗證程式檔案佈建畫
面 (1)。 
 
圖 12：NIC Storage：手機端驗證程式檔案佈建畫
面 (2)。 
 
圖 13：NIC Storage：手機端驗證程式檔案佈建畫
面 (3)。 
 
圖 14：NIC Storage：手機端驗證程式完整性驗證
成功。 
 
圖 15：NIC Storage：手機端驗證程式完整性驗證
失敗。 
 7
人合作的情境 [23]。 
 
 
圖 19：遊戲雲端儲存證明情境一，用於遊戲歷程
之儲存 
 
圖 20：遊戲雲端儲存證明情境二，用於虛擬資產
之購買 
 
圖 21：Subversion 工作空間演化 
 
圖 22：儲存證明標籤生成 
 
圖 23：儲存證明驗證 
 
圖 24：儲存證明資料更新 
 9
由於運算效率的緣故，當前儲存證明
協定仍舊難以運行在行動裝置上，故本計
畫對現存之儲存證明協定進行研究與改
良，並進行原型系統的實作工作。 
 
儲存證明之效率改善 
而本計畫進行改良的方式則是利用橢
圓曲線乘法循環群 (Multiplicative Cyclic 
Group) 之乘法運算代替指數運算；然而，
一般情況下，這類變動將帶來額外的安全
隱憂。以 BLS 簽章 [4] 為例： 
簽章： ))(,(),( mHmSm  ，其中 m  為簽
章的文件內容，α 為簽章者之私密金鑰，
GH *}1,0{:  為密碼學雜湊函式 
(cryptographic hash function)，G  為目 
(order) 為大質數 p  (通常長度為 128-bit 
以上) 的乘法循環群。 
驗證： ),())(,( SgemHge   是否成立。 
若為了節省運算量而直接以橢圓曲線
乘法循環群之乘法運算代替指數運算，則 
BLS 簽章將修改為以下內容： 
 簽章： ),(),( *)( mhgmSm  ，其中 
m  為簽章的文件內容，α 為簽章
者之私密金鑰， **}1,0{: pZh   為
密碼學雜湊函式 (cryptographic 
hash function) ，大質數 p (通常長
度為 128-bit 以上) 為乘法循環
群 G  的目。 
 驗證： ),(),( )( Sgegge mh   是否
成立。 
如此一來，任何人只要取得一組簽章 
),( Sm ，即可以以下方式變造出任何有效簽
章： ),'()','( )'()( 1 mhmhSmSm   
所以，我們在設計儲存證明協定內容
時特別使其安全性植基於離散對數問題 
(Discrete Logarithm Problem) 並加以證明
其安全性。 
離散對數問題簡述如下：給定
),,( xgGg ，計算出 x 的數值。其中： 
 G  為一個目為大質數 p  的乘法循
環群； 
 g  為 G  的一個生成元 (generator)； 
 x  為一個 *pZ  中的元素。 
 
Cirrus 系統概述 
如圖 28：儲存證明情境。 所示，在
我們的系統 (Cirrus)中，主要有三種角色，
資料所有者、遠端伺服器、驗證者。其各
自之職責如下： 
1. 資料所有者：負責資料的佈建、修改
等動作，這些動作經由個人電腦或筆
記型電腦來完成。其中資料的佈建、
修改，主要是進行驗證資訊的生成、
以及資料與驗證資訊的上傳工作。 
2. 遠端伺服器：負責資料的儲存與儲存
證明的證明生成與回應。另外，遠端
伺服器同時也負責回應資料所有者的
資料佈建、修改等動作，在這部份遠
端伺服器主要是負責接收資料所有者
所上傳之資料及相關驗證資訊。 
3. 驗證者：在我們的系統中，由於可進
行完整性的公開驗證，所以驗證者可
以是資料所有者、遠端伺服器、或是
任何其它實體。而驗證者所負責的任
務則是挑戰資訊 (Challenge) 的生成
以及驗證遠端伺服器所回應之儲存證
明。驗證者所使用之設備，可以是個
人電腦/筆記型電腦或是 Android 智
慧型手機。 
 
圖 28：儲存證明情境。 
由於以上情境，我們著眼在降低驗證
者所需之運算資源，如此，使智慧型手機
等低運算量之行動裝置也得以進行儲存證
明之驗證工作。 
 
 
 11
 R  為 MHT 之根節點； 
 ver  為當前版本資訊。 
4. ChalGen: 此演算法由驗證者發起，驗
證者必須決定以下資訊： 
i. 先決定目標檔案，決定目標檔案
之版本 ver， 
ii. 再隨機決定要驗證的 c  個檔案
區塊 ),,,( 21 ciiiI  ， 
iii. 並為各個檔案區塊選取一個在 
*
pZ  中的亂數 ),,,( 21 ciii vvv  。在 
上述運算完成後，便將以上資訊做為
挑戰資訊送給遠端伺服器。 
5. ProofGen: 此演算法由遠端伺服器執
行。遠端伺服器必須依據挑戰資訊、
驗證資訊、版本資訊、以及實際儲存
在遠端伺服器的資料來生成儲存證
明，並將儲存證明送回給驗證者。儲
存證明的內容為
)),(,,)}({,,( 2 verRsigmH IIii  。其
中： 
i.  Ii iimv ； 
ii.  Ii vi i ； 
iii. I  則為由 I  這些檔案區塊要
重建 MHT 根節點所需之 MHT 
節點。 
6. ProofVer: 在收到儲存證明後，驗證者
可利用資料所有者的公開金鑰與遠端
伺服器所提供之儲存證明來進行完整
性的驗證。驗證的過程如下： 
i. 先重建 MHT 的根節點 'R ，並
檢驗等式 
)),||'(()),||(( 1 VverRHegverRsige 
 是否成立。 
ii. 計算  Ii ii vimHH )||)(( 22  
iii. 檢驗等式 ),(),( Vuhege    是
否成立。 
7. Commit: 在檔案被資料所有者變更了
之後，資料所有者必須為被變更的檔
案區塊生成新的驗證資訊 'i ，並更新
版本資訊 )','( verRsig 。 
 
批次驗證協定 
在批次驗證協定中，和基礎協定較大
的差異在於，批次驗證協定需要每個檔案
區塊都具備獨特的索引，這一點我們利用
檔名與檔案內部索引的組合來達成。 
如圖 29 所示，在儲存空間內我們建
立另一個 MHT，每個 MHT 的葉節點皆
由單一檔案 MHT 的根節點組成，故無論
是插入檔案或是對檔案進行動態操作，皆
只需額外更新儲存空間的 MHT 即可。 
所以，在驗證資訊的部份的變動只有
索引的部份；而在版本資訊的變動則是簽
章由一個變成二個，一個在單一檔案的 
MHT 根節點，另一個則是在儲存空間 
MHT 的根節點。 
 
圖 29：如何延伸 Cirrus，使其支援批次驗證。 
 
Cirrus 安全證明 
在安全證明的部份，我們延伸了 [1] 
的安全模型，重新定義了一個儲存證明安
全模型 (Provable Data Possession Game)，
模型中包含了四個階段，內容如下： 
 
 13
Game 之 Setup 階段。 
 
圖 33：安全證明，Provable Data Possession Game 
Query 階段部份內容。 
 
在圖 33 中，我們描述了允許攻擊者
進行之查詢種類，同時並定義出面對二種
不同的查詢時，挑戰者該如何去產生出有
效的儲存證明標籤。 
 
 
圖 34：安全證明，範圍為 Provable Data Possession 
Game 之 Challenge 階段部份內容。 
在圖 34 中，我們詳述了在 Challenge 
階段中，挑戰者該如何將離散對數問題埋
到挑戰資訊之中。 
 
 
圖 35：安全證明，範圍為 Provable Data Possession 
Game 之 Forge 階段部份內容。 
在圖 35 中，我們詳述了當攻擊者偽
造出儲存證明之後，挑戰者該如何將偽造
的儲存證明轉化為離散對數問題之解答。 
 
實驗 
在實驗的部份，我們實作了我們的系
統 (Cirrus)、Ateniese 在 2007 的論文 [1] 
與 Wang 在 2009 的論文 [19]。 
而實驗數據的部份主要是在個人電腦
上完成，我們的實驗環境如下： 
1. 硬體：Intel Core2 6429@2.13 GHz 的 
CPU 以及 4 GB 的主記憶體；HTC 
Desire。 
2. 軟體：GNU C Compiler [24]、OpenSSL 
0.9.8k [20]、ubuntu 10.04、PBC [13]、
與jPBC [6]。 
由於我們的系統使用的是機率式的驗
證，所以當有資料毁損發生的情況下，我
們將有偵測機率的考量，圖 27、圖 36、
及圖 37 為不同資料毁損率下，要達到特
定偵測率所需之檔案區塊數量。 
 
圖 36：儲存證明在 0 到 1% 毁損率下，達到各
種偵測率所需之檔案區塊數。 
 
圖 37：儲存證明在 0 到 0.1% 毁損率下，達到各
種偵測率所需之檔案區塊數。 
 
另外，我們設定了幾個檢查點，其意
義為在特定的資料毁損率下，可達成之偵
 15
 
圖 41：使用 128 MB 大小檔案，利用不同數量檔
案區塊進行儲存證明時，使用 Cirrus 個人電腦版
與 Android 2.3 模擬器版之驗證者所需花費時間
比較。 
 
圖 39 是實驗三的結果，我們將檔案
大小固定在 1 GB，並以表格 2 的檢查點
來進行實驗。由圖 39 可以看到，我們系
統的驗證時間幾乎是常數，而 [1] [19] 則
是隨著驗證的檔案區塊個數線性成長。可
能的原因是因為指數運算的運算量主宰了
整個系統，而 [1] [19] 的指數運算數量則
和驗證檔案區塊的數量成線性成長。 
另外圖 40 的部份則是實驗三中我們
的系統在個人電腦環境下，使用 1GB 大
小檔案，利用不同數量檔案區塊進行儲存
證明所需之時間，雖然驗證時間乍看並不
規則，但進行線性迴歸後，可以發現我們
的驗證時間依舊隨著檔案區塊成線性成
長。而驗證時間不規律的原因很可能是因
為我們的驗證時間太短，導致系統的效能
波動能夠很輕易地影響到我們的結果。 
圖 41 的部份則是實驗四的結果，我
們可以看到雖然我們的系統在個人電腦上
所需之驗證時間非常地少，但在轉移至 
Android Emulator 後，驗證時間依舊很明顯
地隨著驗證的檔案區塊數量而成線性成
長。然而，即使是 20000 個檔案區塊，我
們的 Android 版本也僅需約一分鐘 
(63.743 秒) 即可驗證完畢。而 20000 個
檔案區塊意謂著可以高達 99.9% 的偵測
率來偵測低至 0.035% 的檔案毁損。 
由以上實驗結果，我們可以發現我們
的系統在效能上取得相當大優勢，所以得
以在智慧型手機等行動裝置上實作我們的
系統。 
 
與其它儲存證明協定之比較： 
我們在這裡比較了 Ateniese 在 2007 
與 2008 的論文 [1] [3]、Shacham 在 2001 
的論文 [15]、以及 Wang 在 2009 與 
2010 的論文 [18][19]。 
由表格 4 可以看出： 
 基本的儲存證明功能在這五篇論文及 
Cirrus 都有達成，但是 [3] 因為僅採
用雜湊函數與對稱式加密法，所以無
法提供公開驗證的功效； 
 [1] [15] [18] 三篇並未定位動態操作
的議題，所以不提供動態操作的支援； 
 在提供動態操作支援的二篇論文中，
[19] 無法判斷遠端伺服器是否進行替
換攻擊，而 [3] 與 Cirrus 則可以偵測
到替換攻擊的發生； 
 而在批次驗證方面，僅有 [18] 與 
Cirrus 得以支援此功能，但是 [18] 與 
Cirrus 的批次驗證並不相同，[18] 藉
由 n 個小的驗證程序 (n 為欲驗證
之檔案所有者個數) 來達到批次驗證
的功效，但實際上卻等同於進行 n 個
相異驗證程序。而 Cirrus 卻是將檔案
所有者的整個遠端儲存空間視為一個
整體，所以在驗證時可視為是可驗證
遠端儲存空間任何子集合的單一驗證
程序。 
 
表格 4：不同儲存證明協定間之功能比較。 
 
表格 5：不同儲存證明協定間，儲存伺服器與驗證
者之運算量比較。 
 
 
 
 17
 
6. 驗證者隨後將從伺服器取得指定儲存
空間中有哪些檔案可供驗證。在此原
型系統中，我們只驗證最新版本的資
料。 
 
7. 選擇要驗證的檔案數量。 
 
8. 選擇要驗證的檔案名稱。 
 
9. 選擇要驗證的檔案區塊個數。 
 
10. 驗證者端生成挑戰資訊，而伺服器端
在收到挑戰資訊後進行儲存證明的生
成。其中黃框為驗證者所生成的部份
挑戰資訊。 
 
11. 伺服器將生成的儲存證明傳送給驗證
者，而驗證者驗證完整性無誤。黃框
為驗證者的驗證過程，而紅框為驗證
結果。 
 
Cirrus: 手機端完整性驗證 
以下為使用 Android SDK 的模擬器
所截之系統操作圖，所使用的 Android 版
本為 2.3.3。 
1. 首先一樣要輸入伺服器位址。 
 
2. 成功連上伺服器後，會進入這個畫
面，上面是檔案的選擇，而下面是驗
證檔案區塊個數的選擇。為了操作的
簡便，我們使用預設的使用者與儲存
空間。 
 19
四、 計劃成果自評 
 
在計畫的三年中，我們已完成下列預
設目標: 
 蒐集與研讀輕量化認證協定、儲存證
明、加密檔案系統等相關文獻。 
 分析 MMOG 安全機制與其它現行相
關技術，並選定雲端儲存服務做為研
究之主要方向。 
 提出一個虛擬檔案系統，除了可對檔
案系統內之檔案結構等資料提供保密
服務外，還提供了使用者將其資料之
存取權限委任給第三方而不影響其餘
資料的彈性。 
 提出了一個儲存證明協定，可確保資
料的保密性與整體性，並能夠支援插
入、刪除、修改等動態操作以及公開
進行整體性驗證。 
 提出了合作式的儲存證明協定 [23]，
可供多用戶於線上合作使用儲存證明
功能。 
 提出了另一個儲存證明協定 (Cirrus) 
[14]，可確保高效能與資料的整體性，
並能夠支援插入、刪除、修改等動態
操作以、批次驗證及公開進行整體性
驗證，使儲存證明得以在 Thin-Client 
上進行實作，並可實際進行驗證。 
 對 Cirrus 之安全性進行正式的安全
證明，以證明其安全性確實如我們所
宣稱一般。 
 實作所提出之儲存證明模組，以提供
儲存證明之功能，可供應其它子計畫
需求。 
 實驗及實作中驗證我們所提出的方法
可以應用在遊戲雲端計算的環境中以
保護使用者的各種數據資料。 
除了上述預定目標外，我們更額外達
成以下目標：  
 將我們的儲存證明系統 (Cirrus) 轉移
至 Android 平台上，證明 Cirrus 在 
Thin-Client 運行之可行性。同時並提
供各式數據供後續研究參考。 
 實作其它現存儲存證明協定，利用實
驗數據進行 Cirrus 與現存儲存證明
協定之量化比較。 
在我們三年的計畫中，主要研究焦點
放在發展適於行動裝置，且與雲端 MMOG 
需求契合之密碼學協定與系統  (儲存證
明、加密檔案系統等密碼協定與實作系
統)。在設計密碼協定以外，我們同時也提
供 NIC Storage、Cirrus 等直接面對使用者
需求以提供安全服務的原型系統。這些成
果都能夠在未來雲端遊戲安全、行動安全
等領域提供一個良好的範本，並可做為將
來往這些領域進行更深入研究的基石。 
 
五、參考文獻 
 
1. G. Ateniese, R. Burns, R. Curtmola, J. 
Herring, L. Kissner, Z. Peterson, and D. 
Song, "Provable Data Possession at 
Untrusted Stores," CCS '07: Proceedings of 
the 14th ACM conference on Computer and 
Communications Security, ACM, 2007, pp. 
598-609 
2. G. Ateniese, S. Kamara, and J. Katz, "Proofs 
of Storage from Homomorphic 
Identification Protocols," Proceedings of the 
15th International Conference on the 
Theory and Application of Cryptology and 
Information Security: Advances in 
Cryptology, Springer-Verlag, 2009, pp. 
319-333 
3. G. Ateniese, R. di Pietro, L. V. Mancini, and 
G. Tsudik, "Scalable and Efficient Provable 
Data Possession," SecureComm '08: 
Proceedings of the 4th international 
conference on Security and privacy in 
communication netowrks, ACM, 2008, pp. 
1-10 
4. D. Boneh, B. Lynn, and H. Shacham." 
Short signatures from the weil pairing." 
In C. Boyd, editor, Advances in 
Cryptology ASIACRYPT 2001, volume 
2248 of Lecture Notes in Computer 
Science, pages 514–532. Springer 
Berlin / Heidelberg, 2001. 
5. K. D. Bowers, A. Juels, and A. Oprea, 
"HAIL: A High-Availability and Integrity 
Layer for Cloud Storage," CCS '09: 
Proceedings of the 16th ACM conference 
on Computer and Communications Security, 
ACM, 2009, pp. 187-198 
 21
pp. 253-272, 2007. 
30. John Bethencourt, Amit Sahai, and Brent 
Waters “Ciphertext-Policy Attribute-Based 
Encryption,” Proceedings of the 2007 IEEE 
Symposiumon Security and Privacy, 2007. 
31. Dan Boneh and Matthew Franklin, 
“Identity-Based Encryption from the Weil 
Pairing,” Crypto 2001, LNCS 2139, pp. 
213-229, 2001 
32. Dan Boneh , Eyal Kushilevitz , Rafail 
Ostrovsky  and William E. Skeith III, "Public 
Key Encryption That Allows PIR Queries," 
Advances in Cryptology - CRYPTO 2007, 
Volume 4622/2007, pp. 50-67, 2007. 
33. Dan Boneh and Brent Waters, “Conjunctive, 
Subset, and Range Queries on Encrypted Data,” 
Theory of Cryptography, Volume 4392/2007, 
pp. 535-554, 2007 
34. Rajkumar Buyya, Chee Shin Yeo, Srikumar 
Venugopal, James Broberg, and Ivona Brandic, 
``Cloud Computing and Emerging IT Platforms: 
Vision, Hype, and Reality for Delivering 
Computing as the 5th Utility’’, Future 
Generation Computer Systems, Volume 25/2009, 
Number 6, pp. 599-616, ISSN: 0167-739X, 
Elsevier Science, Amsterdam, The Netherlands, 
June 2009. 
35. Jan Camenisch ,Markulf Kohlweiss, Alfredo 
Rial, and Caroline Sheedy, "Blind and 
Anonymous Identity-Based Encryption and 
Authorised Private Searches on Public Key 
Encrypted Data," Proceedings of the 12th 
International Conference on Practice and 
Theory in Public Key Cryptography, pp. 196 - 
214, 2009 
36. Ann Cavoukian, "Privacy in the Clouds," 
Identity in the Information Society, Volume 
1/2009, Number 1, pp. 89-108, 2009. 
37. Chin-Chen Chang and Sun-Min Tsu, 
"Arithmetic Operations on Encrypted Data," 
International Journal of Computer Mathematics, 
Volume 56, Issue 1 & 2 1995 , pp. 1 - 10, 1995. 
38. Liang Chen , Yong Xu1, Weidong Fang, and 
Chengmin Gao, “A New ElGamal-based 
Algebraic Homomorphism and Its 
Applications,” 2008 International Colloquium 
on Computing, Communication, Control, and 
Management, Volume 1/2008, pp 643 – 648, 
2008. 
39. Xinjun Du, Ying Wang, Jianhua Ge, and Yumin 
Wang, "An Id-Based Broadcast Encryption 
Scheme for Key Distribution," IEEE 
Transactions on Broadcasting, Volume 51,  
Issue 2, pp. 264- 266, 2005. 
40. Eiichiro Fujisaki and Tatsuaki Okamoto, 
“Secure Integration of Asymmetric and 
Symmetric Encryption Schemes,” Proceedings 
of Crypto’99 ,pp.537-554, 1999. 
41. Roxana Geambasu, Tadayoshi Kohno, Amit 
Levy, and Henry M. Levy, "Vanish: Increasing 
Data Privacy with Self-Destructing Data," 
Proceedings of the USENIX Security 
Symposium, , 2009. 
42. Vipul Goyal, Omkant Pandey, Amit Sahai, and 
Brent Waters “Attribute-Based Encryption for 
Fine-Grained Access Control of Encrypted 
Data,” Proceedings of the 13th ACM conference 
on Computer and communications security, 
2006. 
43. Bijit Hore, Sharad Mehrotra, and Gene Tsudik, 
"A Privacy-Preserving Index for Range 
Queries," Proceedings of the Thirtieth 
international conference on Very large data 
bases, Volume 30/2004, pp. 720 - 731, 2004. 
44. Mahabir Prasad Jhanwar and Rana Barua, "A 
Variant of Boneh-Gentry-Hamburg’s 
Pairing-Free Identity Based Encryption 
Scheme," Information Security and Cryptology, 
Volume 5487/2009, pp. 314-331, 2009. 
45. Jonathan Katz, Amit Sahai and Brent Waters, 
"Predicate Encryption Supporting Disjunctions, 
Polynomial Equations, and Inner Products," 
Advances in Cryptology – EUROCRYPT 2008, 
Volume 4965/2008, pp. 146-162, 2008. 
46. Takaaki Komura, Yasuhiro Nagai, Shoichi 
Hashimoto, Makiko Aoyagi, and Kenji 
Takahashi, "Proposal of Delegation Using 
Electronic Certificates on Single Sign-On 
System with SAML-Protocol," Ninth Annual 
International Symposium on Applications and 
the Internet, pp. 235 – 238, 2009. 
47. Chih-Yin Lin, "haplog: A Hash-Only and 
Privacy-Preserved Secure Logging 
Mechanism," 2008 Third International 
Conference on Availability, Reliability and 
Security, pp.458-460, 2008. 
48. Lianzhong Liu and Jingfen Gai, "A Method of 
Query over Encrypted Data in Database," 
International Conference on Computer 
Engineering and Technology, Volume 1, pp. 
23-27, 2009. 
49. Microsoft, “Securing Microsoft's Cloud 
Infrastructure,” May, 2009. 
50. Igor Muttik and Chris Barton, "Cloud Security 
Technologies," Information Security Tech. 
Report, Volume 14/2009 , Issue 1, pp. 1-6, 2009 
51. Jon Oberheide, Kaushik Veeraraghavan, Evan 
Cooke, Jason Flinn, and Farnam Jahanian, 
"Virtualized In-Cloud Security Services for 
Mobile Devices," Proceedings of the First 
Workshop on Virtualization in Mobile 
Computing, pp. 31-35, 2008. 
52. Thomas Ristenpart, Eran Tromer, Hovav 
Shacham, and Stefan Savage, "Hey, You, Get 
Off of My Cloud! Exploring Information 
Leakage in Third-Party Compute Clouds," 
Proceedings of ACM Conference on Computer 
and Communications Security, pp. 199-212, 
- 1 - 
出席第七屆亞洲資安聯合會議心得報告 
 
雷欽隆 
國立臺灣大學電機工程學系教授 
 
會議名稱：第七屆亞洲資安聯合會議 
The 7th Asia Joint Conference on Information Security 
會議地點：日本東京 
會議日期：2012/8/9 – 2012/8/10 
發表論文(中/英文)之題目： 
z 利用 Google Trend Tool 分析安全修補程序之生命週期/An 
Analysis of Security Patch Lifecycle Using Google Trend Tool 
z 線上協作環境下之遠端資料完整性驗證/Data Integrity on 
Remote Storage for On-line Co-working 
 
一、 參加會議經過 
    本人於 2012/8/8 中午扺達羽田機場，並於當天先行前往會議會場
熟悉環境。8/9 早上由中國科學院的 Sihan Qing 教授為我們講授作業
系統安全的相關議題。在第一天的議程中，討論主要集中在多媒體資
料隱藏、系統安全分析、身份認證、與金鑰協議等議題上。 
    我在下午報告 An Analysis of Security Patch Lifecycle Using 
Google Trend Tool 這篇論文，並和與會學者討論其優缺點及後續可能
的發展。接著我主持本次會議的第三段論文發表，主軸是認證技術，
共有如下四篇論文之報告: 
- 3 - 
z 會議已列入 EI，將持續爭取列入其他重要之 index。 
    第二天的議程最後是由台科大吳宗成教授的演講做為最後的活
動。吳教授在演講中提到了 NFC 中的各種安全議題與反制方法，最
後更展示了吳教授們所實作的 NFC 安全系統。 
 
二、 與會心得 
在為期二天的會議中，聽到了許多來自不同領域的學者之間的討論，
尤其是網路與雲端運算的討論中，更是讓本人大開眼界、受益良多，
相信這次的經驗能夠讓本人在未來的研究上更加順利，建議有志於學
術研究的學者們多多爭取參加國際學術會議的機會。 
 
三、 建議 
在本會議中，每場報告中間提供了充足的討論時間，所以在報告的步
調上不需要為了趕時間而省略報告的內容；會場亦提供了相當充足的
電源插座，在參與討論的過程中可以放心進行紀錄，不需要擔心電池
的續航力，這點也是我們可以學習的地方。 
 
四、 攜回資料名稱及內容 
z 7th AsiaJCIS 的會議論文摘要集一本 
z 會議的論文電子檔 
 
 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2013/10/31
國科會補助計畫
計畫名稱: 子計畫六：遊戲雲端上身分管理與隱私續存協定之設計與實作
計畫主持人: 雷欽隆
計畫編號: 99-2221-E-002-109-MY3 學門領域: 平行與分散處理
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
