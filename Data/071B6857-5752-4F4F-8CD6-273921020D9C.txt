1以多處理器視窗作業系統為基礎之半導體製程設備即時控制架構研究
The Research of the Real-Time Control Framework for Semiconductor
Process Equipment Based on Windows-Based Multi-Processor
Operation System
計 畫 編 號：NSC95-2221-E-264-010
執 行 期 限：95 年 08 月 01 日至 96 年 07 月 31 日
主 持 人：劉錦松 元培科技大學資訊管理系
Email：csliu68@gmail.com
計畫參與人員：馬雲天 元培科技大學資訊管理系
黃鈞蔚 元培科技大學資訊工程系
中文摘要
在半導體製程設備開發中，尤其對於高速的製程設備，即時控制器佔有舉足輕重的角
色。而在即時控制系統之中，有些行程是屬於即時行程，需在限定的時間內完成，這些行程
會依據外界的事件來做適當的即時反應。儘管即時作業系統可以滿足即時控制的需求，但其
程式設計難度比一般作業系統高出許多，而眾多針對泛用型作業系統所開發的軟硬體，亦不
一定能支援即時作業系統，造成即時控制程式開發所衍生與周邊系統整合問題，以及眾多軟
硬體無法派上用場的窘境。
本研究計畫提出一套以多處理器為基礎，並具有整合性的半導體製程設備即時控制程式
架構，該架構以多執行緒間的資訊交換技術及物件導向技術，建立一套可輕易實作的即時控
制程式架構。該架構以微軟視窗作業系統為執行環境，因此可與眾多軟硬體相容。同時搭配
多執行緒的程式技術，將整體的控制架構分為即時及非即時兩大部分；其中即時控制部分以
單獨處理器執行，以便達到即時控制的目的。最後針對即時控制部分的反應品質進行測試與
分析，發展出一套與眾多軟硬體相容且具彈性的 Windows-Based 多工即時控制程式架構。
關鍵詞：半導體製程設備、多工即時控制、多處理器控制器、Windows-Based 控制器。
3前言
隨著科技的進步，人們對於半導體產品的需求日趨迫切，促成半導體製程設備的蓬勃發
展。而在眾多的製程設備開發中，控制器的開發佔有舉足輕重的角色，尤其在不影響設備的
安全及穩定性的情況下，有效的提升設備的產能，是一重要課題，因此高速製程設備的控制
技術發展日益重要。在半導體製程設備的控制器中，一般可分為 PLC-Based (可程式化邏輯控
制器)及 PC-Based 兩大類。在順序控制的設備開發中，控制器主要採用可程式化邏輯控制器
(PLC)搭配階梯式語言所設計。PLC 控制器屬於封閉式架構，採用專屬的階梯式語言開發，當
系統小且動作簡單時，具有學習快及開發時間短的優點；然而 PLC 的階梯式語言並非結構化
物件導向式程式語言，因此對於複雜且需要高速反應的系統開發困難度較高。而 PC-Based 控
制器中，以 Windows-Based 控制器為主流，相對於 PLC 與其階梯式語言，Windows-Based 控
制器具有軟硬體資源豐富、系統架構開放與其他系統整合容易及程式執行速度快等優勢。
研究目的
本研究計畫以製程設備研發的觀點，發展出具整合性的半導體製程設備即時控制程式架
構，該架構以多執行緒間的資訊交換技術及物件導向技術[2, 7]，建立一套可輕易實作的控制
程式整合平台，並建立以多處理器為基礎的共通即時控制程式架構，以整合各種技術所開發
出來的子系統。以目前多處理器的控制器價格已大幅滑落，本架構更具有實用性。本架構中
採用與眾多軟硬體相容的微軟視窗作業系統為控制程式的執行環境，搭配多執行緒的程式設
計，將整體的控制架構分為即時及非即時兩大部分。其中即時控制部分以單獨處理器的模式
執行，以便達到即時控制即時反應的目的。同時針對半導體設備生產過程中不斷有來自主機
或設備的運轉訊息要相互傳遞，本計畫亦提出一套針對即時及非即時模組間的通訊模式，以
及與外部其他系統的通訊整合機制，發展出一套可與眾多軟硬體相容且具彈性的即時控制程
式架構。
在一般順序控制程式中，異常的偵測與排除往往比正常流程來的複雜，一套完整的順序
控制程式必須考慮到各種可能發生的異常狀況，同時當異常狀況排除後，機台必須能夠回復
到異常發生前的狀態後繼續執行，因此本研究計畫設計一套有系統的順序控制架構，以便能
在機台的控制發生異常時仍能保持機台的狀態，以便當異常排除後，仍能回復到異常發生前
的狀態後繼續執行。
文獻探討
Windows-Based 控制器的開發，以泛用型工業電腦為主流，特殊的控制器則有系統整合
的問題需要考慮；而視窗作業系統並非專為控制器所發展的作業環境，同時開發工具也是以
泛用型的電腦語言為主。然而控制程式與一般的應用程式，無論在設計架構、設計原則及考
慮層次上都有相當大的差異，因此不同的控制程式設計師所設計出的程式差異性會很大，造
成資源無法共享及經驗難以累積。為避免上述的問題，有共通控制程式架構的提出[13-15]。
目前在 PC-Based 控制器中，以具備多工處理能力的視窗作業系統為主，其中又可分為
即時作業系統(Real-Time Operating System; RTOS)及泛用型作業系統兩大類。常見的即時作業
系統包含 Embedded Linux、Windows CE、QNX、VxWorks 等[16]。即時作業可以被定義為一
個作業行程，其正確性不但和邏輯上執行的結果有關，同時也和執行的時間有密切的關係。
也就是說，即使一個作業行程，它的執行結果在邏輯上來說是正確的，但卻沒有能夠滿足時
間上的要求（例如未能在期限之前做完），則這樣的結果是不被接受的。一般來說，在即時作
業系統之中，有些行程屬於即時行程(Real-Rime Process)，它們具有某種程度的迫切性，這些
行程會試圖根據外界所發生的一些事件來做適當的即時反應。因為這些事件是即時(Real-Time)
發生的，所以行程必須要能夠跟得上這些即時事件所發生的速度，否則它們便失去了意義。
5圖一、半導體製程設備控制器主要模組架構圖
在需要高速運動的製程設備中，控制訊號偵測將更加重要，任何控制訊號的遺失，都有可能
造成設備嚴重的損害，甚至造成操作人員的傷害。因此在高速的製程設備控制器中，運動模
組中控制訊號偵測的即時性比其他模組來的重要。下列將針對即時控制系統中，各模組中所
必須考量的問題詳加討論如下：
1. 處理器(CPU)模組：在單處理器的控制器中，因多工執行緒的切換需消耗較多的系統資
源，而在 Windows NT 或 2000 作業系統中，執行緒的切換約需要 10ms 的時間，無法
滿足即時控制的需求。而在多處理器的控制器中，透過將核心執行緒優先權設定為最高
權限（Critical Priority），如此便可以避免因作業系統切換執行緒的執行權而影響到高
速即時控制訊號的攔截，以滿足即時控制的需求[11]。
2. 輸出入(I/O)模組：該模組一般來說具有極快速的反應速度，所以此部分的控制程式一般
會與核心即時控制程式直接結合，進行訊號感測及控制等動作。而在 I/O 模組界面卡的
考量上，則是以其驅動程式是否支援目前所採用的作業系統，反應速度是否符合即時控
制需求，以及界面卡所提供的 I/O 點數是否足夠，而推動力是否足以推動所連接的周邊
設備亦需列入考量。
3. 運動控制模組：該模組一般是透過函式庫與控制卡做控制訊號之傳遞，對各運動軸下達
控制命令，所以主要的運算會落在控制卡內，核心即時控制程式部分則直接透過其所提
供的函式庫進行控制動作。而機構運動的訊號感測亦是此模組的重點，尤其異常狀況的
即時偵測對於設備操作的安全性相當重要。
4. 資料庫及檔案模組：該模組因反應速度遠比處理器來的慢，如果在核心控制程式中直接
連結此模組，將會嚴重影響即時控制訊號的偵測及控制流程的即時反應，因此必須將此
模組的連結移出核心即時控制程式以外，再透過同步機制進行溝通。
5. 視覺及顯示模組：在高精度的製程設備中，視覺模組如同人的眼睛具有舉足輕重的角
色。Windows-Based 的控制器較能輕易的整合高精度視覺模組到控制系統中；然而在
PLC-Based 控制器中所能提供的選項則相對有限，因此經常須輔助整合其他
Windows-Based（或 PC-Based）的視覺控制器，以達到視覺檢測、辨識或定位等功能，
進而增加系統整合的困難度。另外，視覺模組的運算往往需要佔用大量的處理器資源，
因此如果未將視覺模組的運算與控制程式獨立分開，將會造成即時訊號偵測漏失等問
題，也可能造成整體的控制流程，因視覺模組運算佔用過多的處理器資源而反應過慢。
6. 通訊模組：控制器對外通訊方式包含有串列埠、平行埠、I/O 埠及網路等方式，一般通
訊的處理速度遠低於處理器的速度，因此若將通訊流程直接併入核心即時控制流程中，
將嚴重影響核心即時控制的反應速度，因此通訊流程必須獨立自成一模組，再透過通訊
介面與核心即時控制系統通訊。
7測的時間內執行完成，所以不會造成 I/O 介面訊號或感測器訊號遺失等問題。
圖三、核心即時輪詢及子系統內部的調適性輪詢流程圖
在核心即時控制模組中，以主控制流程為核心，系統內部各子模組採用調適性輪詢的流
程。在此模組中，不允許有任何會造成流程停滯或停止的流程，以達到即時訊號偵測及即時
控制反應。同時，透過分解並征服(Divide and Conquer)的觀念，可以將一個複雜的大系統，
分解成若干互相獨立運作控制的子系統後，各子系統內部可進一步再細分為子模組。核心控
制系統因屬於設備即時控制的核心，為避免產生設備操作的意外，不容許有任何延遲發生。
基於即時控制的原則，核心控制系統的執行時間必須是可預測的，因此所有可能造成延遲的
功能皆必須移出核心控制系統到其他系統執行，核心控制系統只保留訊息派送、指令派送、
I/O 檢測及其他可在規定時間內執行完成的功能。如圖三所示，在各子系統內的模組，彼此間
可能存在互相關連的執行流程；然而在各子系統間則是各自獨力運作，其間透過指令的派送
以啟動相關的控制流程。以下詳述子系統及模組間的關係：
(1) 指令派送：各模組間的指令派送將以物件導向技術包裝成指令物件，因此可以透過訊息
派送到資料庫模組，以紀錄所有模組間派送的指令。同時指令派送機制亦可以加入除錯
用的保護機制，亦即如果因程式流程設計的疏失，造成某一模組尚處於忙碌狀態下即被
下令進行下一循環的工作，此時透過產生例外(Exception)的機制，可以派送訊息到資料
庫存取模組以記錄錯誤訊息。
(2) 逾時處理：在各步驟內設有倒數計時器功能，因此一旦任何步驟執行時間超過預定時
間，系統將產生逾時例外事件(Timeout Exception)，以啟動各模組所設計逾時處理程序。
(3) 異常處理：當設備軟硬體發生異常時，則透過例外機制(Exception)，以啟動各模組所設
計例外處理程序，同時透過訊息派送機制，可以將異常發生的時間及原因記錄到資料庫
模組，以便作為異常原因分析。
(4) 視覺控制模組：此模組主要功能在配合視覺處理模組進行控制流程及同步運作，以避免
冗長的視覺運算影響到即時控制。同時若視覺取像具有運動機構時，則此模組必須與運
動機構控制系統協同工作。
(5) 通訊控制模組：此部分乃是針對與非即時系統中的通訊模組進行同步運作，在不影響核
心主控制流程的即時反應下，與需要較長執行時間的外部通訊介面溝通。
(6) 運動機構控制系統：該系統包含設備中機構的控制流程，一般在各機構間是透過函式庫
與控制卡做控制訊號之傳遞對各運動軸下達控制命令，所以主要的運算會落在控制卡
內，核心即時控制程式部分則直接透過其所提供的函式庫進行控制動作。此模組中的控
制流程採用即時輪詢的方式，核心程式並不允許任何造成核心即時輪詢程式停滯的因素
發生，所有的步驟只有程序狀態的判斷及程序的切換，當程序狀態的判斷或切換執行完
成，程式的控制權會立即釋放回上一層的主控制程式，因此所有狀態的改變，皆會在每
9圖五、視覺控制模組與處理模組間的同步運作
結果與討論
本計畫所提出的即時控制架構將可作為國內相關產業及研發機構進行製程設備開發之
參考，以提昇國內自動化設備開發的技術深度。同時可以提供充分的資訊供自動化設備控制
程式的升級參考。本計畫並結合異常處理技術，不僅協助控制程式設計師發掘即時控制程式
流程的問題，並藉由程式設計流程的持續改善，提昇程式設計的效率，降低維護成本及提升
客戶滿意度，並可做為下一代產品控制程式設計的改進參考。
在一般順序控制程式中，異常的偵測與排除往往比正常流程來的複雜，透過本架構，當
異常發生端的函式並未有效的攔截到異常事件時，該異常事件並不會消失，而是自動繼續傳
遞到上一層函式直到被攔截為止。如果所有層級的函式皆未攔截到該異常事件，則最後會被
作業系統攔截並可能造成應用程式被終結執行。透過異常事件的沸升傳遞，可保證異常資訊
一定會被攔截而不會無故消失，但也可能造成應用程式被終結執行，因此如何有效的在控制
程式中攔截並處理所有的異常事件是本架構後續研究相當重要的課題。
在強制性多工系統中，控制權可被排程器強制移轉，因此兩個執行緒之間的執行次序變
得不可預期。因此多個執行緒同時存取相同的資料時，會因不同的指令執行順序而得到不同
的結果，這不可預期性造成了所謂的競爭情況(Race Conditions)。為了解決競爭情況，必須要
協調各個執行緒之間的執行次序，進行同步化的機制。在 Windows 系統中，主要提供五種同
步化機制，包含有關鍵區域(Critical Section)、號誌(Semaphore)、事件(Event)、互斥器(Mutex)
及 Interlocked 等。然而前四種同步化機制皆有可能造成執行緒因等待資源的釋放而造成停滯
的問題，同時在執行上會耗費較多的系統資源，進而影響系統的即時反應速度。為避免上述
問題，主控制流程中應採用執行速度快速的 Interlocked 同步機制，該機制針對多重執行緒共
用的變數，提供不可部分完成的作業 (Atomic Operation)，同時該同步機制並不會切換到
Windows 作業系統中的核心模式，只需要極少的處理器指令時間(CPU Cycles)即能完成同步機
11
計畫成果自評
本研究計畫依照原計畫書所提出的即時控制架構概念，發展出以多處理器為基礎的視窗
多工作業系統控制架構，計畫主要成果分述如下：
1. 針對半導體製程設備的 Windows-Based 控制器，建構一完整且容易實作的多工即時控
制整合架構，該架構以多處理器並行運作為基礎，可與眾多軟硬體相容，同時具有與
周邊通訊介面及資料庫系統容易整合的特性。
2. 結合異常處理技術，在不影響即時控制程式的反應能力及穩定度下，建構即時控制程
式異常偵測及紀錄機制。
3. 在強制性多工系統中，控制權可被排程器強制移轉，因此兩個執行緒之間的執行次序
變得不可預期，造成了所謂的競爭情況(Race Conditions)。本計畫提出一套有系統的
機制來避免競爭情況，可以提供高效率的多處理器同步處理機制，可以有效解決高速
控制模組間的同步問題。
半導體及奈米製程設備的研發為我國未來的發展重點之一，本計畫所提出的即時控制架
構將可作為國內相關產業及研發機構進行製程設備開發之參考，以提昇國內自動化設備開發
的技術深度。同時本計畫所提出的即時控制程式架構，可作為國內相關產業以 Windows-Base
為基礎的設備控制程式技術平台，並提供充分的資訊供自動化設備控制程式升級參考。本計
畫成果將會繼續整理並翻譯成英文，以發表於自動化設備控制等相關領域之國際學術期刊。
