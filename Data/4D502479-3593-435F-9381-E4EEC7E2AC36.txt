I 
中英文摘要 
 
無線通訊與感測技術的快速發展使得無線感測網路(Wireless Sensor Network, WSN)成為一
門新興的科技，無線感測網路的應用也被廣泛地討論。其中，物件追蹤感測網路是利用感
測器偵測並追蹤物件(如車輛、野生動物等)，偵測到物件後，這些感測器會以無線傳輸的方
式將追蹤結果回報給使用者，物件追蹤感測網路有許多的應用，例如搜尋與救援任務(山
難、地震、土石流等)、野生動物的棲息地監控、交通流量監控、入侵者偵測與監控等。一
個物件追蹤感測網路包含了許多的議題，如物件的偵測、目標物的分類與辨識、物件位置
的估算以及位置管理機制，在一個物件追蹤感測網路中，當物件的位置被估算出來之後，
一個能夠回報物件最新位置以及傳送使用者查詢的位置管理機制是必須的，本計畫提出了
一個新的位置管理機制。 
 
樹狀架構的位置管理機制已被廣泛地討論了，然而，傳統以樹狀架構為基礎的位置管理機
制有兩個主要缺點，第一是樹狀架構的維護成本相當高，第二是需要事前做統計才能建構
出一個較好的樹狀架構(細節會於計畫書中做詳細的說明)。針對傳統樹狀架構的缺點，本計
畫提出了一個以四分樹為基礎的位置管理機制，此機制有以下七個特點，(1) 維護四分樹架
構的通訊成本極低，(2) 不需要事前做任何的統計，(3) 會隨時將物件的最新位置嵌入在查
詢封包中(這樣的設計能降低封包遺失所造成的損害)，(4) 支援能夠容忍不精準位置的查詢
(queries)，(5) 支援多尺度(multi-resolution)的聚集查詢(aggregate queries)，聚集查詢包含了
和(sum)，總數(count)，平均(average)等，(6) 能夠達成較好的負載平衡(load balance)，(7) 藉
著利用不同的路徑來傳送封包，以便減輕傳送競爭的問題。本計畫最後也利用模擬實驗驗
證了所提出的機制的效能。 
 
關鍵詞：無線感測網路，位置管理，物件追蹤，網路內資料處理，聚集查詢 
 
Wireless sensor networks (WSNs) have attracted extensive attentions recently. Applications of 
WSNs have also been studied widely. An object-tracking wireless sensor network is a kind of 
WSN in which objects/targets are tracked by tiny sensor nodes that communicate with each other 
via wireless transmission. It has applications in habitat monitoring, search and rescue tasks, 
traffic monitoring, intrusion detection, and so on. The key issues involved in an object-tracking 
WSN include object detection, target classification, location estimation, and location 
management. In a WSN, after the locations of objects are successfully determined, a location 
management scheme for reporting objects' newest locations and disseminating users' queries is 
required. We have proposed a location management scheme in this project. 
 
Tree-based location management schemes have been studied extensively. However, the 
traditional tree-based schemes have two major drawbacks. First, the structure maintenance cost is 
high. Second, taking statistics is required. This project has proposed a quadtree-based location 
management scheme, which is based on the prune-and-search strategy and has the following 
III 
目錄 
 
一、前言 .......................................................................................................................................... 1 
二、研究目的 .................................................................................................................................. 1 
三、文獻探討 .................................................................................................................................. 1 
四、研究方法 .................................................................................................................................. 2 
五、研究成果與結論 ...................................................................................................................... 9 
參考文獻 ........................................................................................................................................ 10 
附錄一：出席國際學術會議心得報告 ........................................................................................ 11 
附錄二：A Quadtree-based Location Management Scheme for Wireless Sensor Networks ....... 15 
附錄三：A Channel Management Protocol for Multi-Channel, Single-Radio 802.11-based 
Wireless Mesh Networks ............................................................................................................... 46 
附錄四：位置感知旅遊翻譯機之設計與實作 ............................................................................ 52 
 
2 
的移動樣式(mobility pattern)，使用者的查詢樣式(query pattern)往往是建樹時的考量，而這
些樣式必須利用統計來獲得，當物件的移動或使用者的查詢並沒有規則的樣式時，要建立
一個最佳樹狀結構幾乎是不可能的，雖然在參考文獻[6]中，作者提出了一個 Markov-chain
模型來產生移動樣式，如此就不需要做事前的統計，然而在參考文獻[7]則證明了要建構一
個最佳樹是一個 NP-Complete 的問題，因此本計畫欲提出一個新的位置管理機制，此位置
管理機制必須有低的結構維護成本並且不需要任何事前的統計資料。 
 
四、研究方法 
  
在本節中我們將詳細地敘述本計畫所提出的位置管理機制及相關的實驗結果。 
 
以四分樹為基礎的位置管理機制之基本運作原理 
在這一小節，我們會利用一個例子來說明本計畫所提方法的基本運作原理，首先我們假
設感測區域(sensing field)會被遞迴地切割成許多區塊 (Regions) (要注意的是，我們不一定
非要切割成完美的四等份，因此在這小節我們使用 Regions 而非 Quads) ，其中，Level-1
區塊即代表著整個感測區域，某些感測器會被選出來當做 Level-1 的邊界(boundary) ，如圖
一(a)中的藍色實線所示，此外，一個感測器會被選出來做為 Level-1 區塊的領導者，我們
稱那個感測器為 Level-1 Leader，當一個物件跨越 Level-1 邊界時，位在 Level-1 邊界上的感
測器如果偵測到這個物件，就會回報此事件至 Level-1 領導者，亦即傳送位置更新封包
(update packets)給 Level-1 領導者。要注意的是，感測區域的邊界必須屬於 Level-1，如此的
話，當一個物件進入感測區域時，Level-1 領導者必定知道一個物件進入了感測區域。 
 
 
圖一：(a)邊界(boundary)與區塊(region)的範例。(b)以四分樹為基礎的位置管理機制
的基本運作原理範例。 
 
我們可發現 Level-1 邊界會將感測區域分割成數個 Level-2 區塊，例如在圖一中有三個
Level-2 區塊，分別為 Region(2,1), Region(2,2)以及 Region(2,3)，其中 Region(l, i)代表第 i 個
Level-l 區塊。每個 Level-2 區塊會進一步地被 Level-2 邊界所切割，同樣地，當一個物件跨
越 Level-2 邊界時，位在 Level-2 邊界上的感測器如果偵測到這個物件，就會回報此事件至
其 Level-2 領導者(亦即傳送一個位置更新封包給 Level-2 領導者)，根據這樣的規則，每個
4 
最短的線是直線，較短的線代表著一個物件跨越此線的機率降低，這同時也代表位置
更新的通訊成本可以被降低(前面已提過，當物件跨越一個邊界時會送出位置更新封
包)，因此，和不規則的邊界比較起來，當邊界為直線時，位置更新的通訊成本應該會
較低。 
 
根據上面所提出的理由，本計畫所提出的邊界建構演算法中，邊界是被有規則地決定的。
  
 
圖二： 規則邊界的範例 
 
現在我們就要開始敘述本計畫所提出的邊界建構演算法，我們假設感測區域為一個長
為 L 寬為 W 的長方形區域，左上與右下角的座標分別表示為(0, 0)與(L, W)，如同我們先前
已經提到的，感測區域的邊界必須屬於 Level-1 邊界的一部份，此外，兩條通過座標
的水平線與垂直線同樣也會屬於 Level-1 邊界(圖二中的藍色實線) ，邊界本身的寬度則假
設為α，因此感測器只要知道自己的位置、α的值以及感測區域四個角落的位置，便能知道
自己是否是屬於 Level-1 邊界。要注意的是，α的值必須足夠大，使得當一個物件跨越 Level-1
邊界時至少能被一個位於 Level-1 邊界的感測器偵測到，本計畫只做一個簡單的假設：當物
件跨越一個邊界時，一定會被邊界上至少一個感測器所偵測。 
 
在 Level-1 邊界建立好後，四個 Level-2 區塊自然地形成了。接著，系統會更進一步地
去建立四個 Level-2 邊界，分別通過 , , ,以及 ，如圖二的紅
線所示(我們可發現 level-i 邊界的形狀都是十字形當 i ≥ 2)，邊界本身的寬度仍然假設為α，
因此感測器藉著它們自己的位置與α的值便能知道自己是否屬於 Level-2 邊界，然而，當一
個感測器已經屬於 Level-1 邊界，它就不會屬於任何的 Level-2 邊界。Level-3 邊界可根據相
同的規則繼續的建構下去，邊界的建構會一直持續下去直到系統允許的最大 Level 值到達
或者新的邊界無法被建立出來為止，新的邊界無法被建立的可能性有(1)現存的邊界已經覆
蓋了整個感測區域，(2) Barrier Coverage 無法被保證，以及(3) 新邊界的領導者無法被選出。 
領導者的選擇也是邊界建構的一部份，如先前所提到的，邊界的形狀為十字形，為了
要降低結構維護成本，系統可規定一個領導者必須要位於一個十字形的中央，因此，領導
6 
位置更新的運作 
位置更新的基本作法是當物件跨越邊界時，邊界的領導者應該被通知，首先，我們先
說明，不屬於任何邊界的感測器如何作位置更新。不屬於任何邊界的感測器在做位置更新
時有兩種機制可採用： 
z 區域廣播機制(Local Flooding)。在此機制中，不屬於任何邊界的感測器不會發送任何
的位置更新封包(update packet)，當一個領導者接收到一個查詢封包且發現沒有下一個
領導者時，它會做一個區域性的廣播，例如圖四，如果 Level-1 領導者發現這個物件應
該位於 R 這個區域內，則它會在 R 這個區域做一個區域性的廣播。 
z 區域性的位置更新(Local Updating)。在此機制中，一個位於 R 的感測器會被選為 R 的
領導者，當一個物件從一個感測器移動到另一個同樣位於 R 內的感測器，位置更新封
包 會被送到 R 的領導者。 
 
接著，我們討論位於邊界上的感測器的位置更新行為，本計畫中我們假設當有多個感
測器同時偵測到一個物件，接收到從物件發出的訊號強度最大的感測器會負責做此位置更
新的動作。然而在實際上，訊號強度通常是不穩定的而且會環境的改變相當的敏感，因此，
收到物件所發出訊號強度最大的感測器有可能不是離物件最近的感測器，然而本計畫在訊
號強度不精準的環境下仍然能夠正常地運作，本計畫的方法只要求當一個物件從感測器 a
移動到感測器 b 時，感測器 a 和 b 能夠被辨識出來，在後面的討論中，我們就只考慮一個
物件從某個感測器移動到另一個感測器的情境。 
 
我們現在就開始敘述位置更新的詳細運作，首先我們先定義一個符號 Level(x)，我們假
設如果一個感測器 x 是屬於 Level-i 邊界，則 Level(x) = i，如果感測器 x 不屬於任何邊界，
則 Level(x) = MAX_LEVEL + 1，其中 MAX_LEVEL 代表網路中最大的 Level 值(在邊界建
構完成後，MAX_LEVEL 的值就可以被知道了)。此外，我們假設每個領導者會維護一物件
列表(object list)，這個物件列表會記錄被領導者所知的物件的最新位置資訊，物件列表中的
一筆記錄可以表示成<o, loc, rec_time>，其中 o 代表被記錄物件的 ID，loc 代表此領導者所
知 o 的最新位置，而 rec_time 則代表 o 在 rec_time 那個時間是位於 loc，當一個領導者接受
一個位置更新封包時，它會根據封包內容更新它的物件列表。 
 
當一個物件 o 從感測器 a 移動到到感測器 b 時，感測器 a 與 b 會根據下面的規則運作(注
意：一個位置更新封包將被表示成 Update(o, loc, rec_time)，其中 loc 代表回報此移動事件
的感測器所知 o 的最新位置，而 rec_time 則表示感測器偵測到此移動事件的時間。 
z 如果 Level(a) < Level(b)，則感測器 a 會送出一個更新封包 Update(o, loc, rec_time)給它
的領導者，如此，當感測器 a 的領導者收到一個查詢，它可以知道它應該將此查詢送
給哪一個 Level-(Level(a)+1)的領導者，而感測器 b 的運作如下： 
 如果 Level(b) = MAX_LEVE+1 且區域廣播機制(Local Flooding)機制被採用，則 b
不會做任何的事情。 
 否則，感測器 b 會發送一個更新封包 Update(o, loc, rec_time)給它的領導者，如此，
當感測器 b 的領導者收到一個查詢，它可以知道該怎麼回應此查詢。 
z 如果 Level(a) < Level(b)，則感測器 a 什麼都不會做，因為關於 o 的查詢不會再被送到
感測器 a 的領導者了，感測器 b 則會送出一個更新封包 Update(o, loc, rec_time)給它的
8 
 
圖五：查詢運作的範例，Quad(l, i)代表第 i 個 Level-l quad。虛線的箭頭代表著查詢
(Query)封包的傳送路徑，而星星代表著物件於 t1 時的位置。 
 
而當一個 Level-i (i ≥ 2)領導者(之後會以領導者 x 來稱呼)收到一個查詢時，那個領導者 x 會
先檢查查詢封包中的 loc 及 rec_time，檢查的規則如下： 
z 如果領導者 x 的物件列表(object list)中沒有任何關於 o 的資訊，或者 o 的 rec_time 較查
詢中所攜帶的 rec_time 早，則領導者 x 的物件列表會被更新。要注意的是，這個比較
動作是必要的，例如在圖五中，Quad(2, 1)的領導者所知的物件最新位置為 Quad(3, 4)，
因為當物件從 Quad(3, 3)移動到 Quad(3, 4)時，一個更新封包會被送到 Quad(2, 1)的領
導者， 然而 Level-1 領導者所知的物件最新位置則為 Quad(3, 2)，因為當物件從 Quad(2, 
2)移動到 Quad(2, 1)時，一個更新封包會被送到 Level-1 領導者，這代表 Level 值較低
的領導者有可能有較新的位置，因此比較 rec_time 是必要的。在這個例子裏面，當
Quad(2, 1)的領導者接收到查詢時，它可以知道它應該將查詢傳送給 Quad(3, 2)的領導
者而不是 Quad(3, 4)的領導者。 
z 否則，查詢封包上的 loc 以及 rec_time 會被儲存在領導者 x 物件列表的值所取代。 
 
接著，根據查詢封包上較新的 loc 值，領導者 x 運作如下： 
z 如果沒有下一個領導者(即 Level-i+1 的領導者)存在且區域廣播機制(Local Flooding)機
制被採用，則區域廣播會被執行。接著，正在偵測查詢物件的感測器會回覆此查詢。 
z  如果沒有下一個領導者(即 Level-i+1 的領導者)存在且區域性的位置更新(Local 
Updating)機制被採用，則領導者會回覆此查詢，告知使用者在 rec_time 時位於 o。 
z 如果 loc是在領導者 x的Level-i邊界上，則領導者會回覆此查詢，告知使用者在 rec_time
的時候是位於 o。 
z 否則，領導者 x 會根據 loc 的值將查詢送給下一個對應的領導者。 
 
最後，回覆封包(reply packet)會被送到發出此查詢的感測器。 
10 
 
¾ C.-Y. Lin, "A Quadtree-based Location Management Scheme for Wireless Sensor 
Networks," (submitted) 
¾ C.-Y. Lin, S.-H. Lu, Y.-C.Tseng, "A Channel Management Protocol for Multi-Channel, 
Single-Radio 802.11-based Wireless Mesh Networks", IEEE International Workshop on 
Computer Aided Modeling Analysis and Design of Communication Links and Networks, 
Japan, 2011. (受本計畫補助) 
¾ 林致宇、時文中, "位置感知旅遊翻譯機之設計與實作,"第六屆台灣數位學習發展研討
會，台灣，台中，2010. (受本計畫補助) 
 
參考文獻 
 
[1] H. T. Kung and D. Vlah, “Efficient location tracking using sensor networks,” in Proc. of 
WCNC’03, New Orleans, Louisiana, USA, 2003, pp. 1954–1961. 
[2] C.-Y. Lin, W.-C. Peng and Y.-C. Tseng, “Efficient in-network moving object tracking in 
wireless sensor networks,” IEEE Transactions on Mobile Computing, Vol. 5, No. 8, 2006, 
pp. 1044-1056. 
[3] J. Xu, X. Tang, and W.-C. Lee, “A new storage scheme for approximate location queries 
in object-tracking sensor networks,” IEEE Transactions on Parallel and Distributed 
System, Vol. 19, No. 2, 2008, pp. 262–275. 
[4] C.-Y. Lin, Y.-C. Tseng, and Y.-C. Liu, “Imprecision-tolerant location management for 
object-tracking wireless sensor network,” The Computer Journal, 
doi:10.1093/comjnl/bxp043. 
[5] C.-Y. Lin, Y.-C. Tseng, T.-H. Lai, and W.-C. Peng, “Message-efficient in-network 
location management in a multi-sink wireless sensor network,” International Journal of 
Sensor Networks, Vol. 3, No. 1, 2008, pp. 3–15. 
[6] L.-H. Yen and C.-C. Yang, “Mobility profiling using Markov chains for tree-based object 
tracking in wireless sensor networks,” in Proc. of SUTC’06, Taichung, Taiwan, 2006, pp. 
220–225. 
[7] B.-H. Liu,W.-C. Ke, C.-H. Tsai, and M.-J. Tsai, “Constructing a message-pruning tree 
with minimum cost for tracking moving objects in wireless sensor networks is 
NP-complete and an enhanced data aggregation structure,” IEEE Transactions on 
Computers, Vol. 57, No. 6, 2008, pp. 849–863. 
 
下頁開始為附件一（出席國際學術會議心得報告）、附件二（「A Quadtree-based Location 
Management Scheme for Wireless Sensor Networks」之論文全文）與附件三（「A Channel 
Management Protocol for Multi-Channel, Single-Radio 802.11-based Wireless Mesh Networks」
之論文全文）、附件四（「位置感知旅遊翻譯機之設計與實作」之論文全文）的內容。 
 
12 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                              日期： 100 年 6 月 13 日 
一、會議簡介 
 
CAMAD 是開始於 1986 年，一開始是兩年舉辦一次，由於網路通訊技術的快速進展，
相關的研究也因此蓬勃發展，2006 年後一年舉辦一次。CAMAD 常常和一些 IEEE 
Communication Society 的著名會議合辦，如 ICC (International Conference on 
Communications)、GLOBECOM (Global Telecommunication Conference)等，今年就在 ICC
之後於相同地點舉辦。 
 
CAMAD 研討會的主題是討論通訊系統的分析與模擬工具，CAMAD 所討論的通訊系
統包含：無線隨意網路、無線感測網路、衛星網路等，由於本國科會計畫的主題是無
線感測網路，主持人主要的研究主題也是集中在無線網路，因此參加此研討會，可以
計畫編
號 
NSC 99 - 2221 - E - 468 - 004 - 
計畫名
稱 
無線感測網路上一個以四分樹為基礎的位置管理系統 
出國人
員姓名 林致宇 
服務機
構及職
稱 
亞洲大學資訊多媒體應用學系助理
教授 
會議時
間 
100年 6月 10日至
100 年 6 月 11 日 會議地
點 
日本京都 (Kyoto Research Park) 
會議名
稱 
(中文) 第十六屆通訊鏈結與網路的電腦輔助模組分析與設計研討會 
 
(英文) 16th IEEE International Workshop on Computer Aided Modeling 
Analysis and Design of Communication Links and Networks (IEEE CAMAD, 
2011) 
發表論
文題目 
(中文) 多頻道單一收發器以 802.11 為基礎的無線網狀網路上的頻道管理
協定 
 
(英文) A Channel Management Protocol for Multi-Channel, Single-Radio 
802.11-based Wireless Mesh Networks 
14 
這次由於受到日本 311 大地震的影響，有些研究學者無法親臨現場，但也透過視訊的
方式，參與討論，研討會並沒有因此受到影響，仍是相當的熱絡，由此可見提供彈性
與方便的機制給研討會的參與者，是能否吸引國際學者與會的重要關鍵。 
 
而此次參與會議的過程中，發現感知網路 (Cognitive Network) 與智慧電網 (Smart Grid) 
被廣泛地討論，本人目前對此兩個主題涉獵未深，為了跟上研究的新趨勢，本人將開
始進行相關主題的研究。 
 
四、建議 
 
在這次會議中，有不少學者針對感知網路 (Cognitive Network) 與智慧電網 (Smart Grid) 
提出研究成果，由於電力線跟電話線一樣，是普及被設置的線路，若能進行一些簡單
的通訊，對於省電是相當有幫助的，這對於提倡廢除核子發電廠的年代，可說是明日
之星的新技術。此外感知網路也是一種新型數據網路，為了跟上研究的新潮流，本人
也將閱讀/搜集相關的研究。 
 
五、攜回資料名稱及內容 
 
CAMAD 2011 論文集：以隨身碟的型式儲存，內容為這次研討會所有論文。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
A Quadtree-based Location Management Scheme for
Object-tracking Wireless Sensor Networks
Chih-Yu Lin
Department of Information Science and Applications, Asia University, Taiwan
E-mail: lincyu@asia.edu.tw
Abstract
The applications of object-tracking wireless sensor networks have attracted at-
tentions recently. The key issues involved in object tracking include object de-
tection, target classification, location estimation, and location management. The
main theme of this paper is location management. Tree-based location manage-
ment schemes have been studied extensively. However, the traditional tree-based
schemes have two major drawbacks. First, the structure maintenance cost is high.
Second, taking statistics is required. This paper proposes a quadtree-based lo-
cation management scheme, which is based on the prune-and-search strategy and
has the following attractive characteristics: (1) low structure maintenance cost, (2)
working without any statistics, (3) embedding the latest location information in
the queries (specifically, the impact of packet loss can be relieved by this design),
(4) supporting imprecision-tolerant queries easily, (5) supporting multi-resolution
aggregate queries easily, (6) achieving load balance easily, and (7) relieving the
contention problem by transmitting packets along different paths. Performance
evaluations are also conducted through simulations to demonstrate the efficiency
of the proposed scheme.
Keywords: location management, object tracking, sensor networks, in-network
processing, wireless networks, imprecision-tolerance, aggregate queries
1. Introduction
Wireless sensor networks (WSNs) have attracted extensive attentions recently.
Applications of WSNs have also been studied widely [1, 2, 3]. An object-tracking
wireless sensor network is a kind of WSN in which objects/targets are tracked by
tiny sensors that can communicate with each other via wireless transmission. It
Preprint submitted to Computer Communication April 29, 2010
The Sensing Field
A level-1
quad
Four level-2
quads
Sixteen level-3
quads
Figure 1: The quadtree structure representation.
plying the quadtree structure to sensor networks has been studied in many aspects
such as data dissemination, addressing, security and so on[19, 20, 21]. In [22],
a quadtree-based querying framework is proposed in which the applications of
object tracking have also been addressed. However, reference [22] does not fo-
cus on the issue of location management. As far as the author knows, applying
the quadtree structure to location management has not been studied yet. In the
proposed scheme, the sensing field is recursively divided into four equal quads as
shown in Fig. 1. Each quad is bounded by boundaries, and a sensor will be se-
lected as the leader for each quad. When an object crosses a boundary, an update
message will be sent to the corresponding leader. On the other hand, when a user
issues a query, the query will be sent among leaders to locate the queried object.
Compared with the traditional tree-based schemes, the proposed scheme has the
following attractive characteristics:
• Low structure maintenance cost. In the proposed scheme, many interesting
features make the structure maintenance cost low. First, boundaries of quads
are determined according to the geographic locations. With this design, new
sensors can join the network easily. Second, the leaders are also selected
according to the geographic locations. Therefore, each sensor only has to
3
2. Basic Idea
This section will present the basic idea of the quadtree-based location man-
agement scheme. To begin with, it is assumed that the sensing field is recursively
divided into regions. (Note that in the proposed scheme, it is not necessary to
divide a region into exactly four quads. Thus, this paper uses the term “region”
rather than “quad” in this section.) The level-1 region is the whole sensing field.
Some sensors will be selected to form the level-1 boundary as the solid blue line
shown in Fig. 2(a). One sensor will be selected as the level-1 leader for the level-1
region. When an object crosses the level-1 boundary, the sensor that is on the
level-1 boundary and detects this event will report this event to the level-1 leader;
that is, an update packet will be sent to the level-1 leader. Note that the boundary
of the sensing field must belong to the level-1 boundary so that when an object
enters the sensing field, the level-1 leader can know of this event.
The level-1 boundary will divide the sensing field into several level-2 re-
gions. For example, there are three level-2 regions, Region(2, 1), Region(2, 2)
and Region(2, 3), in Fig. 2, where Region(l, i) denotes the i-th level-l region. For
each level-2 region, one sensor will be selected as the level-2 leader. Thus, there
are three level-2 leaders in Fig. 2. Each level-2 region will be further divided by a
level-2 boundary. Similarly, when an object crosses a level-2 boundary, the sensor
that is on the level-2 boundary and detects this event will send an update packet to
its corresponding level-2 leader. Based on this rule, each level-3 region will also
be further divided by the level-3 boundary, and so forth.
So far, the quadtree-based structure and the update operation have been briefly
described. The remaining issue is the query operation. A query can be issued from
anywhere and the query will be forwarded to the level-1 leader first. Because
update packets will be sent to the level-1 leader when objects cross the level-1
boundary, the level-1 leader can easily determine to which level-2 leader it should
forward the query. For example, in Fig. 2(b), the level-1 leader determined that it
should forward the query to Region(2, 1) at t0 and t1 because the level-1 leader
only received one update packet after the object entered the sensing field at t0
and t1. The level-1 leader will receive another update packet when the object
crosses the level-1 boundary from Region(2, 1) to Region(2, 2). Thus, at t2, the
level-1 leader can know that it should forward the query to the level-2 leader of
Region(2, 2) rather than to the level-2 leader of Region(2, 1) so as to get more
precise location information.
When a level-2 leader receives the query from the level-1 leader, there are
two cases that should be discussed. In the first case, the level-2 leader does not
5
have any location information of the queried object. For example, in Fig. 2(b),
the leader of Region(2, 1) did not have any location information on the car at t0,
because the car had not yet crossed the level-2 boundary of Region(2, 1). Thus,
the leader with lower level value should embed the latest location information
in the query so that the next leader can decide how to process the query. For
example, at t0, the leader of Region(2, 1) determined that the car was located
in Region(3, 1) by the latest location information of the object embedded by the
level-1 leader. In the second case, the level-2 leader has the location information
of the queried object. For example, when the object crosses the level-2 boundary
from Region(3, 1) to Region(3, 2), an update packet will be sent to the leader of
Region(2, 1) so that the leader of Region(2, 1) knows that it should forward the
query to the leader of Region(3, 2) so as to get more precise location information.
Then, the same rules can be applied to the level-3 leaders, and so forth. (Note
that a query will be forwarded to the next leader only when the next leader is
available.)
The basic idea of the quadtree-based location management scheme has been
described above. In order to implement this quadtree-based scheme, there are
many issues that should be addressed, for example, how to determine the bound-
aries and the leaders so that the communication cost and the structure maintenance
cost can be minimized, and which assumptions that should be made for the bound-
aries so that the scheme can work normally. In the next section, the details of the
quadtree-based scheme will be discussed.
3. The Quadtree-based Location Management Scheme
3.1. Boundary Construction
The first issue of the quadtree-based scheme is boundary construction. This
proposed scheme assumes that the shape and the size of the sensing field are
known by the system. (This can be achieved by the boundary detection algo-
rithm [26].) For simplicity, it is assumed that sensors are deployed in a sensing
field with a rectangular-like shape. Later, how to apply the proposed approach to
sensing fields with irregular shapes will be discussed.
From the discussion of the previous section, it can be known that the boundary
can be determined randomly. However, it is preferred that the boundaries are
determined regularly as the original quadtree structure (An example is shown in
Fig. 3.) There are two major reasons.
• Regular boundaries make the structure maintenance cost negligible.
When boundaries are regular, a sensor can easily know whether it belongs
7
Level 1
Boundary
Level 2
Boundaries
Level 3
Boundaries
Length
W
idth
Figure 3: An example of the sensing field with a rectangular-like shape which is divided by regular
boundaries.
9
Length
W
idth
Level 1
Boundary
Level 2
Boundaries
Level 3
Boundaries
R
Figure 4: An example of an irregular sensing field. The circle denotes the location of the center of
the left-down level-2 quad.
11
– Otherwise, b will send an update message Update(o, loc, rec time) to
its leader so that when b’s leader receives a query, it can respond to
this query.
• If Level(a) > Level(b), then sensor a will do nothing (Note that the queries
regarding o will not be forwarded to the leader of a anymore.), and sensor
b will send an update message Update(o, loc, rec time) to its leader so that
b’s leader can know how to process the received queries.
• If Level(a) = Level(b), then two cases will be considered.
– If Level(a) = MAX LEV EL + 1 and the local flooding scheme is
adopted, then both a and b will do nothing.
– Otherwise, one of them will send an update messageUpdate(o, loc, rec time)
to their leader.(Note that they have the same leader.) Either IDs or the
distances to the leader can be used to determine which one should re-
port.
One interesting feature of the proposed update operation is that update packets
may suffer less contention then those in the traditional tree-based schemes do.
The reason will be explained in Sec. 4.
3.3. Query Operation
To begin with, the query format will be defined. Each query can be represented
by Query(o, loc, rec time), where o denotes the queried object, loc presents the
latest location of o known by the query, and rec time is the time at which o is
located at loc. A user may issue a query from anywhere. The query will be sent to
the level-1 leader first. If the sensors on the level-1 boundary do not miss detecting
o and no packet loss occurs, then the object list of the level-1 leader will have the
information of o. (Recall that the barrier coverage problem is beyond the scope
of this paper.) The level-1 leader will fill in the loc and rec time fields of the
query based on the information stored in its object list. Then, two cases should be
considered.
• If loc belongs to the level-1 boundary, then the level-1 leader will reply to
this query immediately by telling the user that o is located in loc at rec time.
• Otherwise, the level-1 leader will forward the query to the corresponding
level-2 leader based the value of loc. For example, in Fig. 5, when the ob-
ject moves from the sensor on the level-1 boundary to the sensor located
13
ing rec time is required in the proposed scheme. For example, in Fig. 5,
the last location of the queried object known by the leader of Quad(2, 1)
is Quad(3, 4), because when the object passed through from Quad(3, 3)
to Quad(3, 4), an update was sent to the leader of Quad(2, 1). However,
the last location of the object known by the level-1 leader is Quad(3, 2),
because when the object passed through from Quad(2, 2) to Quad(2, 1),
an update was sent to the level-1 leader. This means that the leader with
lower level value may have newer location information. Thus, comparing
rec time is required. In this example, when the leader of Quad(2, 1) re-
ceived the query, it can know that it should forward the query to the leader
of Quad(3, 2) rather than that of Quad(3, 4) after performing comparison.
• Otherwise, the values of loc and rec time carried in the query will be re-
placed by the values stored in x’s object list.
Then, according to the newer loc value that is carried in the query, x will act
as follows.
• If no next leader (i.e., a level-i + 1 leader) exists and the local flooding
scheme is adopted, then local flooding will be started. The sensor that re-
ceives the flooded query and is detecting the queried object will reply to this
query.
• If no next leader exists and the local updating scheme is adopted, then x will
reply to this query by telling the user that o is located in loc at rec time.
• If loc belongs to the level-i boundary of x, then x will reply to this query by
telling the user that o is located in loc at rec time.
• Otherwise, x will forward the query to the next corresponding leader based
on loc.
Finally, the reply packet will be sent to the sensor that issues the query.
4. Interesting Features of the Quadtree-based Scheme
In this section, some issues will be discussed that include why the proposed
scheme can relieve the contention problem, how to improve the proposed scheme
so that the impact of packet loss can be reduced, how to support imprecision-
tolerant queries and aggregate queries, and how to achieve load balance.
15
Furthermore, in the proposed update operation, update packets may suffer less
contention then those in the traditional tree-based schemes do. The reason is ex-
plained as follows: To begin with, it can be seen that only one sensor has to report
in most cases. Although it is possible that both of a and b have to report in the case
of Level(a) < Level(b), these two update messages may suffer less contention,
because these two update messages will be transmitted along different paths. An
example is shown in Fig. 6. When an object moves from the level-1 boundary to
the level-2 boundary, two update messages will be sent to the level-1 leader and
the level-2 leader along different paths respectively. On the contrary, the update
messages in the tree-based location management schemes may suffer higher con-
tention, because both a and b have to report. In addition, because the destination
of these two update packets is the same (i.e., the lowest common ancestor of a and
b), these two packets may be transmitted closely. This implies high contention.
4.2. Reducing the Impact of Packet Loss
In the proposed scheme, the latest location information will be embedded in
the queries. This design can relieve the impact of packet loss. In order to achieve
this goal, not only the leaders but also the other sensors in the network have to
maintain their own object lists, in which the latest location information of objects
known by them will be recorded. Then, when a sensor receives a query and ob-
serves that the location information of the queried object stored in its object list
is newer than that which is carried in the query, the location information carried
in the query will be updated. On the contrary, if the location information stored
in the object list is older than that carried in the query, the location information
stored in the object list will be updated.
Now, the example shown in Fig. 5 is used to explain why this design can
relieve the impact of packet loss. It is assume that the level-1 leader did not receive
the update packet when the object crossed the level-1 boundary from Quad(2, 4)
to Quad(2, 3) due to packet loss. Thus, at t1, the location of the dog stored in
the object list of the level-1 leader is in Quad(2, 4). Then, it is assumed that a
query was issued from x at t1. Recall that the query will be sent to the sink first.
If no additional mechanism is adopted, then the level-1 leader may forward the
query to the leader of Quad(2, 4) falsely. (This query will fail finally.) However,
in Fig. 5, it can be seen that the forwarding path of the query and the moving path
of the object intersect with each other. Thus, if the location information carried in
the query can be updated when the query crossed the moving path of the object,
then the level-1 leader can update the location information stored in its object list
accordingly and forward the query to the correct level-2 leader. When every sensor
17
the contrary, in the proposed scheme, quads are regular and thus easy to match
with the shape of the queried area.
Besides, due to the hierarchical structure, the proposed scheme can support
multi-resolution aggregate queries easily. For example, in Fig. 5, the level-1 leader
can know how many objects are there in Quad(2, 1), Quad(2, 2), Quad(2, 3), and
Quad(2, 4), because when objects cross the level-1 boundary, the level-1 leader
will be notified. If more precise information is required, the query will be for-
warded to the next leader. For example, if the level-1 leader receives a query
for how many objects are there in Quad(3, 3), it will forward the query to the
leader of Quad(2, 1) which will know how many objects are there in Quad(3, 3).
Note that the level-1 leader should provide necessary information to the leader of
Quad(2, 1) so that the leader of Quad(2, 1) can compute the number of objects in
Quad(3, 3). For example, when an object moves from Quad(2, 3) to Quad(3, 3),
the leader of Quad(2, 1) will not be notified. Thus, the level-1 leader should pro-
vide such information to the leader of Quad(2, 1).
4.5. Load Balance
In the quadtree-based scheme, leaders are responsible for forwarding queries
and all update packets are sent to the leaders. Thus, the leaders may consume
more energy than other nodes. In order to achieve load balance, the concept of
the geographic hash table proposed in [25] can be incorporated into the quadtree-
based scheme.
One possible scheme is described as follows. To begin with, it is assumed
that boundaries are formed regularly. Then, each boundary is divided by many
squares, each of which has area α × α, where α is the width of the boundary.
The update and query packets will then be sent to one square of the boundary
according to the ID of the detected/queried object (a hash function will be used).
5. Simulation Results
An event-oriented simulator written in C language has been developed for
evaluating the performance of the quadtree-based scheme. A sensing field with
size 256 × 256 (units2) is simulated, where 1000 sensors are deployed randomly
with uniform distribution. The modified city mobility model [13] is adopted for
simulating the movement of objects. Queries are issued periodically from any
sensor. A simple CSMA-based MAC protocol is used to simulate packet trans-
mission and it is assumed that each sensor’s sending buffer is limited. The related
parameters are shown in Table 1.
19
Figure 7: Performance comparison between the traditional tree-based scheme and the quadtree-
based scheme under different query rates. The average speed of objects is 1 unit/second.
2 boundary and stays on the level-2 boundary, the leader of that level-2 boundary
will keep receiving the update packets regarding o. Then, when the level-2 leader
receives a query regarding o, it can reply to this query immediately (because it has
the up-to-date location information of o). Therefore, although the query will be
transmitted along the shortest path in the DAT scheme (due to the deviation-free
property of the DAT scheme), the quadtree-based scheme has better performance
in terms of query cost. Second, it is focused on the update cost. Although the
quadtree-based scheme does not use the mobility profile to minimize the update
packets, the quadtree-based structure limits the update propagation naturally. That
is, when an object o keeps moving inside a quad, the update packets regarding o
will only be transmitted in that quad. Thus, the quadtree-based scheme has simi-
lar performance to that of the tree-based scheme in terms of update cost. Finally,
as mentioned in Sec. 4, the design of the quadtree-based scheme can relieve the
contention/collision problem. From the simulation results, it can be observed that
the collision in the quadtree-based scheme is lighter indeed. Therefore, the num-
ber of retransmission packets in the quadtree-based scheme is less than that in the
tree-based scheme.
21
Figure 8: Performance comparison between the tree-based scheme and the quadtree-based scheme
under different speeds. The query rate is 1 query/second.
23
Figure 10: Performance comparison between the local updating and the local flooding schemes
under different MAX LEV EL values. The query rate is 1 queries/second, and the average speed
of objects is 5 units/second.
the local flooding schemes are similar and better, because the number of sensors
that are not on any boundary become less. Thus, it is suggested that a larger
MAX LEV EL should be adopted.
Finally, the load balance scheme is also investigated. Fig. 11 shows the results.
MAX PACKETS denotes the number of packets transmitted by the sensor that
transmits most packets in the network. It can be seen that the load balance scheme
can reduce the value of MAX PACKETS indeed. However, the total commu-
nication cost becomes higher and the query response time becomes longer when
the load balance scheme is adopted. The reason is that the paths used for trans-
mitting update and query packets become longer. This is a trade-off problem.
6. Conclusions
The major contribution of this paper is the proposal of a novel location man-
agement scheme called the quadtree-based scheme. Compared with the traditional
tree-based scheme, the quadtree-based scheme does not need any statistics, and
25
benefits from low structure maintenance cost. Especially, the MAC layer issues
are also taken into consideration. The contention problem is relieved by trans-
mitting packets that are sent simultaneously on different paths, and the impact of
packet loss is relieved by embedding the latest location information in the queries.
Furthermore, the quadtree-based scheme can support imprecision-tolerant queries
and aggregate queries easily. It can also achieve load balance with minor modi-
fication. Simulation results also demonstrate the efficiency of the quadtree-based
scheme.
References
[1] I. F. Akyildiz, W. Su, Y. Sankarasubramaniam, E. Cayirci, Wireless sensor
networks: a survey, Computer Networks 38 (4) (2002) 393–422.
[2] J. Burrell, T. Brooke, R. Beckwith, Vineyard computing: sensor networks in
agricultural production, IEEE Pervasive Computing 3 (1) (2004) 38–45.
[3] Y. Li, M. T. Thai, W. Wu, Wireless Sensor Networks and Applications,
Springer, Berlin, Heidelberg, 2008.
[4] R. Szewczyk, E. Osterweil, J. Polastre, M. Hamilton, A. Mainwaring, D. Es-
trin, Habitat monitoring with sensor networks, Commun. ACM 47 (6) (2004)
34–40.
[5] J. Reich, E. Sklar, Robot-sensor networks for search and rescue, in: Proc. of
SSRR’06, IEEE, Washington, DC, USA, Gaithersburg, MD, USA, 2006.
[6] E. C. H. Ngai, J. Liu, M. R. Lyu, An efficient intruder detection algorithm
against sinkhole attacks in wireless sensor networks, Comput. Commun.
30 (11-12) (2007) 2353–2364.
[7] J. Aslam, Z. Butler, F. Constantin, V. Crespi, G. Cybenko, D. Rus, Tracking
a moving object with binary sensors, in: Proc. of SenSys’03, ACM, New
York, NY, USA, Los Angeles, California, USA, 2003.
[8] S. Blackman, R. Popoli, Design and Analysis of Modern Tracking Systems,
Artech House, Norwood, MA, USA, 1999.
[9] D. Li, K. Wong, Y. Hu, A. Sayeed, Detection, classification, and tracking of
targets, IEEE Signal Processing Magazine 19 (2) (2002) 17–29.
27
[20] Z. H. Mir, Y.-B. Ko, Quadtree-based hierarchical data dissemination for mo-
bile sensor networks, Telecommunication Systems 36 (1-3) (2007) 117–128.
[21] E. Cayirci, V. Coskun, C. Cimen, Querying sensor networks by using dy-
namic task sets, Computer Networks 50 (7) (2006) 938–952.
[22] M. Demirbas, X. Lu, P. Singla, An in-network querying framework for wire-
less sensor networks, IEEE Transactions on Parallel and Distributed Systems
20 (8) (2009) 1202–1215.
[23] B. Karp, H. T. Kung, GPSR: greedy perimeter stateless routing for wireless
networks, in: Proc. of MOBICOM’00, ACM, New York, NY, USA, Boston,
Massachusetts, USA, 2000, pp. 243–254.
[24] G. Xing, C. Lu, R. Pless, Q. Huang, On greedy geographic routing algo-
rithms in sensing-covering networks, in: Proc. of MobiHoc’04, ACM, New
York, NY, USA, Tokyo, Japan, 2004, pp. 31–42.
[25] S. Ratnasamy, B. Karp, L. Yin, F. Yu, D. Estrin, R. Govindan, S. Shenker,
GHT: A geographic hash table for data-centric storage, in: Proc. of
WSNA’02, ACM, New York, NY, USA, Atlanta, Georgia, USA, 2002, pp.
78–87.
[26] C. Zhang, Y. Zhang, Y. Fang, Localized algorithms for coverage boundary
detection in wireless sensor networks, Wireless Networks 15 (1) (2009) 3–
20.
[27] A. Chen, S. Kumar, T.-H. Lai, Designing localized algorithms for barrier
coverage, in: Proc. of MOBICOM’07, ACM, New York, NY, USA, Mon-
treal, Quebec, Canada, 2007, pp. 63–74.
[28] S. Kumar, T.-H. Lai, A. Arora, Barrier coverage with wireless sensors, in:
Proc. of MOBICOM’05, ACM, New York, NY, USA, Cologne, Germany,
2005, pp. 284–298.
[29] W.-P. Chen, J. C. Hou, L. Sha, Dynamic clustering for acoustic target track-
ing in wireless sensor networks, IEEE Transactions on Mobile Computing
3 (3) (2004) 258–271.
[30] P. Bahl, V. N. Padmanabhan, RADAR: An in-building RF-based user loca-
tion and tracking system, in: Proc. of INFOCOM’00, IEEE, Washington,
DC, USA, Tel-Aviv, Israel, 2000, pp. 775–784.
29
46 
附錄三：A Channel Management Protocol for Multi-Channel, 
Single-Radio 802.11-based Wireless Mesh Networks 
發表於 CAMAD 2011 之論文全文「A Channel Management Protocol 
for Multi-Channel, Single-Radio 802.11-based Wireless Mesh 
Networks」 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
and a channel switch scheduling algorithm, to determine its
behavior.
In this paper, we propose a multi-channel, single-radio
(MCSR) protocol for tree-based WMNs. We observe that
even if some mesh points do not switch their operational
channels, the network connectivity and the benefit of using
multiple channels can still be achieved. This may significantly
reduce a lot of channel-switching overheads. In our protocol,
mesh points are divided into two sets. Mesh points in the
first set will be assigned fixed channels to transmit/receive
packets. On the other hand, mesh points in the second set
will switch their operational channels dynamically according
to their communication counterparts. We will develop three
channel assignment algorithms to allocate channels to the
mesh points in the first set. We will also develop a channel
switching algorithm to help mesh points in the second set to
determine their channel hopping schedule. A special feature
of our protocol is that a mesh point needs to perform either
channel assignment algorithm or the channel switching algo-
rithm, but not both. In fact, our scheme does enforces the
first set of mesh points to interleave with the second set of
mesh points in the tree topology. This actually simplifies the
design of our channel switching algorithms because whenever
the second set of nodes want to transmit/receiver packets, they
can switch to channels of the first set without considering their
channel switching patterns. By this design, we believe that the
side-effect of channel switch (such as channel switch delay,
synchronization drift, etc.) can also be significantly mitigated.
The rest of this paper is organized as follows. We make
an observation to motive our work in Sec. II. We present our
proposed protocol in Sec. III. Performance studies are given
in Sec. IV. Conclusions are drawn in Sec. V.
II. OBSERVATION
In [22], it has been shown that in a chain topology an
ideal multi-channel MAC protocol could achieve an end-to-
end throughput as high as 12 of the effective MAC data rate in
a single-radio, multi-channel WMN. Fig. 2 shows two possible
channel switching schedules. In Fig. 2(a), each node switches
between two channels. Continuous packets sent from A to
F can form a perfect pipeline effect separated by two hops.
Interestingly, the schedule in Fig. 2(b) has a similar effect,
but only half of the nodes need to switch channels. The other
half can stay in the assigned channels. With this design, a
lot of channel switching overhead (such as switching delay,
synchronization drift, etc.) can be mitigated.
Our design will also lead to the following benefits:
• Improved Channel Reuse: The very idea of channel reuse
is to exploit the most compact spatial reuse pattern of
each channel. However, if a node owns a fixed channel
without using it (for examples, it may switch to another
channel to communicate with other nodes), then that
channel could be wasted. Our scheme can effectively
avoid this problem because only some nodes have fixed
channels. In fact, our scheme has the concept of com-
A B C D E F
[2,1] [1,3] [3,2] [2,1] [1,3] [3,2]
Channel2 Channel2
Channel1
Channel3
Channel2
Channel1
Channel3
A B C D E F
[3,1] [1] [1,2] [2] [2,3] [3]
Channel3 Channel3
Channel1
Channel1
Channel2
Channel2
Channel3
(a)
(b)
Fig. 2. Two ideal channel switching schedules in a chain WMN that can
achieve the optimal pipeline effect.
pactness in mind when choosing those nodes with fixed
channels.
• Mitigated Collision: Since our scheme enforces nodes
with fixed channels to interleave with those without
fixed channels, a lot of multi-channel hidden-terminal and
missing-receiver problems can be avoided.
• Simplified Channel Switching: Since nodes without fixed
channels will only communicate with those with fixed
channels, the former can always find the latter (at the right
channels) whenever they intend to. This will significantly
simplify our design of channel switching.
III. THE PROPOSED CHANNEL MANAGEMENT PROTOCOL
A. Network Model
We consider an 802.11-based WMN with one mesh point
serving as the gateway. We assume that the WMN is mainly
for providing Internet services, so most traffics will go through
the gateway. There are multiple non-overlapping channels
available. Each mesh point has one wireless radio, except that
for performance reason the gateway has multiple radios equal
to the number of available channels.
For such a multi-channel, single-radio WMN, we need
a channel management protocol to help a mesh point to
determine its channel and a channel scheduling protocol to
determine its channel-hopping pattern. The main idea of our
work is to divide mesh points into two sets V and V ′. Each
mesh point in V will be assigned a fixed channel, while each
in V ′ will not have a fixed channel but will switch to a proper
operational channel channel at proper time.
To determine V and V ′, we will construct a tree T rooted
at the gateway (any such algorithm, such as HWMP[25], can
be used here). Let the root be at level 0. Then, mesh points
in the odd levels of T will be assigned to V , and those in the
even levels of T will be assigned to V ′. An example is shown
in Fig. 3.
Our scheme works in a TDMA-over-CSMA manner. Time
is divided into equal-length superframes. Each superframe
consists of k slots. The first slot is used not only for supporting27
yC1
P
C2
C3
(a) Topology
Odd-Level
y
2
1
3
4
(b) Low-Interference
y
2
1
2
2
(c) Low-Delay
y
2
1
3
3
(d) Hybrid
Fig. 5. Examples of different channel assignment strategies. (a) Network
topology. (b) Interference-based strategy. (b) Delay-based strategy. (c) Hybrid
Strategy.
C. Channel Switching Schemes for V ′
Next, we present how a mesh point y ∈ V ′ switches its
operational channel in the k−1 general slots of a superframe.
It is clear that if y is a leaf node, it is sufficient to always
set its operational channel to its parent’s fixed channel. So we
only consider a non-leaf y below. We propose a scheme that
allows y to switch its operational channel dynamically based
on traffic conditions.
In this scheme, traffic conditions will be exploited. In
the first slot of each superframe, each node y ∈ V ′ will
announce its channel switching schedule. Let PC(y) be the
set of y’s parent and children. We define two terms. For each
z ∈ PC(y), let f(y, z, i) be the traffic load between y and
z estimated by y in superframe i (this can be measured by,
say, the number of packets transmitted between them and the
backlog at y destinated to z). Further, we define F (y, z, i) as
the weighted traffic load between y and z estimated by y until
the i-th superframe. such that
• For each z ∈ PC(y), define F (y, z, i) as the weighted
traffic flow between y and z estimated by y until the i-th
superframe. More specifically, the recursive definition of
F (y, z, i) is as follows:
F (y, z, i) =


α× f(y, z, i− 1)+
(1 − α)× F (y, z, i− 1) , i > 2
f(y, z, 1) , i = 2
1 , i = 1
(1)
where 0 ≤ α ≤ 1.
Based on F (y, z, i), y calculates its slot allocation as
follows. First, it will reserve one slot for each member in
PC(y). Here we assume that (k − 1) ≥ |PC(y)|. Then, the
remaining slots will be allocated evenly to members in PC(y).
More precisely, the number of slots allocated to z ∈ PC(y)
will be
TABLE I
THE DEFAULT VALUES OF PARAMETERS USED IN THE SIMULATION.
Underlining MAC IEEE 802.11b with RTS/CTS
Simulation Area 100 units x 100 units
Transmission range 25 units ∼ 45 units
Link capacity 2 Mbps
Flow data rate 300 kbps (for each flow)
Channel Switch Delay 12 ms
Slot size 400 ms
Data frame size 512 bytes
Number of available channels 3
Number of slots in one frame 11
Simulation Time 200 s
The buffer size 200 packets (per node)
⌊
((k − 1)− |PC(y)|) ×
F (y, z, i)∑
`∈PC(y) F (y, `, i)
⌋
+ 1. (2)
Note that since a floor function is used, some slots will
actually be free. We can distribute these slots to PC(y) based
on some round-robin scheme. Also, locations of these slots
can be permuted with others’ slots to ensure fairness.
IV. PERFORMANCE EVALUATION
We have developed an in-house simulator to verify the
performance of our channel management protocol by exe-
cuting comprehensive simulations. We compare our protocol
with the single-channel scheme. We also modify JMM[22] so
that we can compare our protocol with it. In the simulation,
25 mesh points are deployed as a 5 × 5 grid network. We
assume that each node equips only one radio except for the
gateway equipping 3 radios and 3 non-overlapping channels
are available. Two types flows are simulated: up-link flow and
down-link flow. In up-link flow, traffic flows from the mesh
points to the gateway. In down-link flow, traffic flows from
the gateway to the mesh points. 80% down-link and 20% up-
link flows are used in our experiments. The impact of channel
switching is an important issue. Thus, channel switch delay
and time synchronization error are simulated. Besides, each
result is achieved by averaging 20 runs. The default values of
parameters are shown in Table I.
Fig. 6 shows the simulation results. We can see that the
single channel scheme has the worst performance because it
does not benefit from multiple available channels. Our protocol
outperforms the MJMM no matter which channel assignment
strategy is used. The major reason is that our protocol reduces
the channel switch overhead. We allow that several packets
can be transmitted in a slot. Thus, when packets arrives at
mesh points in V , mesh points in V can forward these packets
immediately in the same slot. Thus, mesh points do not need
to store many packets in their buffers. This can relieve the
buffer overflow problem. This can be verified by Fig. 7. We
can see that our protocol has the best performance in terms
of the packet drop rate. (The packet drop rate is defined as
the ratio of the number of packets dropped to the number of
packet generated.) We can further observe that if there exists29
52 
附錄四：位置感知旅遊翻譯機之設計與實作 
發表於 TWELF 2010 之論文全文「位置感知旅遊翻譯機之設計與實
作」 
TWELF 2010 
當我們到國外旅行時，難免會需要和當地人溝通，而為了要和當地人溝通，我們可
能會去書局購買旅遊會話的相關書籍，然而傳統的旅遊會話書籍有兩個主要的缺點，第
一是不易攜帶，我們總是希望外出旅遊時，行李能夠輕簡，如此才能增加旅遊的舒適度，
此時若還要攜帶一本旅遊會話書，對於旅行者來說是一個額外的負擔。 第二個缺點是
例句搜尋不易，一本旅遊會話書為了盡可能地包含旅行中可能用到的例句，必定會包含
成千上百個例句，雖然書中會對例句做分類，例如『機場用語』、『餐廳用語』、『購
物用語』等等（坂井浩志與林理惠，2002；國際學村語文學習機構，2008），但是例句
的搜尋仍屬不易，例如旅行者所處的城市內只有巴士，可是在『交通用語』裡面卻可能
有『請問電車站在哪裡？』等根本用不到的例句。 
輕薄短小的電子辭典解決了旅遊會話書籍不易攜帶的缺點，然而還是有兩個問題存
在，首先，例句搜尋不易的問題仍然存在，例句的顯示並沒有根據使用者的位置做篩選，
例如當使用者於跳蚤市場購物時，在『購物用語』中『請問化妝品專櫃在哪裡？』這樣
的例句並不適合出現，而當使用者於不二價的百貨公司購物時『請問能打個折嗎？』這
樣的例句就並不適合出現。傳統電子辭典的第二個問題是，當緊急狀況或特殊狀況發生
時，其很難即時地提供協助給使用者，且不一定有使用者想表達的例句，因此當緊急狀
況發生時，往往使用者是希望有個能夠直接溝通的翻譯者提供立即的協助。 
本篇論文針對傳統旅遊書籍及電子辭典的缺點提出了解決方法，我們設計了一個特
殊的旅遊翻譯機，首先此翻譯機結合了位置感知(Location Awareness)與擴增實境
(Augmented Reality)的概念，幫助使用者找出其附近的翻譯者。使用者只需擁有一台具
相機及定位功能的行動裝置，並於行動裝置上安裝了我們所設計的翻譯軟體，就可拿著
該行動裝置尋找翻譯者，當有願意提供協助的翻譯者在其附近時，若行動裝置的鏡頭拍
攝到該翻譯者，就會顯示該翻譯者的相關資訊，例如翻譯者的暱稱、能夠溝通的語言及
該語言的熟練度等。其中根據使用者的位置提供其附近翻譯者的資訊就是位置感知的應
用，而利用相機功能，將翻譯者的相關資訊顯示於鏡頭所拍攝到的翻譯者的旁邊就是一
種擴增實境的應用。藉著這樣的設計，當我們於旅程中發生緊急狀況時，就可立即尋找
附近是否有願意提供協助的翻譯者。而熱心的翻譯者也能獲得練習語言及結交外國朋友
的機會。 
除了即時搜尋翻譯者的功能之外，我們所設計的翻譯軟體也提供了例句的搜尋等一
般翻譯軟體該有的功能，然而跟現在市面上的旅遊翻譯機比起來，我們所設計的翻譯軟
體有兩個創新的特色。第一，我們充分地利用位置感知的概念，讓使用者能根據其所在
地快速地尋找到適合該場所的例句，為了達成這個目的我們需要維護兩個資料庫，第一
個是景點資料庫，資料庫中的一筆資料代表了一個觀光景點，除了景點的名稱、經緯度
等資訊外，還記錄了該觀光景點的屬性，例如有些景點是屬於『都會型』景點，有些則
屬於『鄉村型』，第二個資料庫則是例句資料庫，每個例句也會擁有景點屬性來說明這
個例句適用於哪些景點，從上面的敘述中，不難發現，屬性的設定會影響本翻譯軟體的
品質，為了能夠讓景點與例句的屬性設定能夠更貼近真實情況，我們所設計的翻譯軟體
的第二個創新特色是利用了大眾分類法(Folksonomy)的概念來對景點與例句做分類及
屬性的設定，全世界的人都能夠參與分類與屬性設定的過程，並藉著投票等機制讓分樂
與屬性更貼近大眾的認知，如此，我們所設計的翻譯軟體便能持續不斷地做改進。 
本論文接下來的章節架構說明如下，首先在第二節我們會針對我們所使到的技術或
概念，如位置感知、擴增實境及大眾分類法做相關文獻的探討。在實作此翻譯機時，我
們並不是只需要在行動裝置上設計我們的翻譯軟體就足夠了，我們還必須要架設一個伺
TWELF 2010 
燕超（2006）則將擴增實境應用於數位學習上。在早期的行動擴增實境中，使用者的頭
上必須戴著一個頭戴式裝置及一個特殊的眼鏡，此頭戴式裝置包含了一個攝影機，可以
將所拍攝到的實景傳至隨身帶著著電腦，接著電腦再將資訊顯示於特殊的眼鏡上，然而
隨著手持行動裝置技術的改進，利用 PDA(Personal Digital Assistant)或智慧型手機來實
作擴增實境已被廣泛地討論（Daniel Wagner, Thomas Pintaric, Florian Ledermann & 
Dieter Schmalstieg, 1995）。在本論文中我們利用擴增實境的技術來做翻譯者的搜尋，
當翻譯者出現於鏡頭前時，會有該翻譯者的相關資料呈現於行動裝置的螢幕上。 
3. 系統架構 
我們並不是只需要在行動裝置上設計我們的翻譯軟體就足夠了，我們還必須要架設
一個伺服器，用來記錄使用者及熱心翻譯者的最新位置，同時也必須提供一個平台讓全
世界的人都能夠參與景點及例句資料庫的建置，因此這一節會介紹我們的系統架構及運
作流程。 
 
圖 1、系統架構 
 
圖 1 顯示了整個系統架構，首先我們可觀察到我們需架設一個伺服器，這個伺服器
上會儲存兩個重要的資料，第一是願意成為翻譯者的志願者資料(Volunteer Database)，
第二是景點及例句資料庫(Sentences & Spots Databases)。而會存取此伺服器的人員可分
成四類來討論，下面將分別說明： 
(一) 旅行者：旅行者必須擁有一台具備了定位及照相功能的行動裝置，此行動裝置
上還必須安裝我們所設計的翻譯軟體。藉著此翻譯軟體，旅行者可以做到： 
¾ 翻譯者的搜尋：為了達到搜尋的功能，首先旅行者必須回報自己的位置給伺服
器，其主要目的是要讓伺服器比對志願者資料庫，尋找出旅行者附近的熱心翻
譯者，接著伺服器會回傳志願者的資料給旅行者。 
TWELF 2010 
外觀光』，表 1 中列出了數個例句及其屬性與屬性相符數，程式會依據屬性相
符數來對例句做排序，如圖 3(a)所示。 
 
(a) 進入畫面    (b) 主選單 
圖 2、行動裝置上的翻譯軟體主畫面 
 
表 1、例句範例 
例句 屬性 類別 屬性相符數
請問熊貓館在哪裡？ 動物、戶外觀光 問路 2 
請問捷運站在哪裡？ 捷運、都市 問路 1 
請問票價是多？ 戶外觀光、室內觀光 購物 1 
請問廁所在哪裡？ 戶外觀光、室內觀光 問路 1 
請問２樓的展覽室怎麼去？ 室內觀光 問路 0 
請問化妝品專櫃在哪裡？ 室內觀光、高價 購物 0 
 
¾ 語音搜尋：語音搜尋是利用 Google 所提供的 Voice Search 來達成的（Google 
Mobile App for your phone, 2010），使用者首先唸出數個關鍵字，並交由 Google
判讀後，得到的文字關鍵字串列再與例句做比對，翻譯軟體會找出使用者可能
需要的例句。 
¾ 搜尋翻譯者：此部份是結合擴增實境與 Google 地圖來完成，首先旅行者會將自
己的位置傳送給伺服器，伺服器會找出其附近的翻譯者，若旅行者將手機平放
（亦即鏡頭朝下），程式會將翻譯者顯示於 Google 地圖上，如圖 4(a)所示，旅
行者可藉此知道其附近百公尺內的翻譯者。若翻譯者已經很靠近旅行者，旅行
者可將手機橫放（亦即鏡頭朝前），搜尋前方是否有翻譯者，如圖 4(b)所示。 
¾ 真人即時語音翻譯：此功能尚未完成，即時語音翻譯是希望當旅行者的附近找不
到翻譯者時，旅行者能將想要翻譯的句子說出來並上傳至伺服器，伺服器會送
個廣播給合適的翻譯者，若有熱心的翻譯者願意幫忙，可將句子翻譯好後再回
送給伺服器，接著再傳送給旅行者。 
 
TWELF 2010 
本篇論文針對傳翻譯工具的缺點提出了一個創新的翻譯軟體，其最主要的特色是透
過擴增實境尋找附近的熱心翻譯者，這不僅能夠在緊急狀況發生時幫助旅行者，也能提
供熱心的翻譯者練習語言及結交外國朋友的機會。而我們所設計的旅遊翻譯機跟現在市
面上的旅遊翻譯機比起來，還有兩個有趣的特色：(1)我們所設計的翻譯機充分利用位
置感知的概念，讓使用者能根據其所在地快速地尋找到適合該場所的例句、(2)例句的
屬性設定是透過大眾分類法的概念，讓全世界的人都能參與此翻譯機的改進。雖然我們
已經完成初步的系統實作，然而距離實用還有一段路要走，未來我們將繼續地完成這個
翻譯系統。 
誌謝 
林致宇與時文中的研究獲得行政院國家科學委員會補助專題研究計畫的補助，計畫
編號分別為 NSC 99 – 2221 – E – 468 – 004 –與 NSC 99 – 2511 – S – 468 – 003 –。 
參考文獻 
王燕超（2006）。從擴增實境觀點論數位學習之創新。空中教學論叢，20，40-63。台
北：中華民國國空中教育學會。 
坂井浩志、林理惠（2002）。觀光日語自由行。台北：愛迪生出版社。 
李宗翰、陳菁惠（2006）。位置感知技術應用於華語文學習之研究。第二屆台灣數位學
習發展研討會。台南，台灣。 
陳俊麟、王維國（2006）。一個具位置感知的數位服務。2006 數位科技與創新管理國
際研討會。台北，台灣。 
國際學村語文學習機構（2008）。日語自助旅行一本通。台北：國際學村。 
張淇龍、卜小蝶（2006）。淺談 Web2.0 與通俗分類於圖書資訊服務之應用。圖書與資
訊學刊，57，74-93。 
Azuma, Ronald T. (August 1997). A Survey of Augmented Reality. Teleoperators and 
Virtual Environments 6, 4, 355-358. 
Daniel Wagner, Thomas Pintaric, Florian Ledermann, and Dieter Schmalstieg (1995). 
Towards Massively Multi-user Augmented Reality on Handheld Devices. Proceedings of 
the 3rd International Conference on Pervasive Computing, Munich, Germany, pp. 
208-219. 
Eija Kaasinen (2003). User needs for location-aware mobile services. Personal and 
Ubiquitous Computing, Vol. 7, No. 1, pp. 70-79. 
Google Mobile App for your phone (2010). Retrieved from 
http://www.google.com/mobile/google-mobile-app/. 
Harry Halpin, Valentin Robu, and Hana Shepherd (2007). The complex dynamics of 
collaborative tagging. Proceedings of the 16th International Conference on the World 
Wide Web, Banff, Canada, pp. 211-220, ACM Press. 
Mike Hazas, James Scott, and John Krumm (2004). Location-aware computing comes of age. 
IEEE Computer, Vol. 37, No. 2, pp. 95-97. 
Vander Wal, Thomas (2009). Folksonomy Coinage and Definition. Retrieved from 
http://vanderwal.net/folksonomy.html. 
 2
一個 Session，第一個 Session 的主題是 Architectures and Protocols，有一位新加坡學者也是透過視
訊，發表了一個關於感測網路相關的媒介存取協定，此協定是以 TDMA (時間分割多重存取)協定
為基礎，由於這些感測器是做成膠囊 (Capsule) 的型式，放入人體內，因此不可能更換電池，因此
其所提出的媒介存取控制協定的主要訴求是省電，也用電腦模擬來進行實驗，實驗結果也證明其
省電的訴求。此外有一位芬蘭的學者也提出 802.16 的網路上，當客戶端發現基地台訊號微弱時，
改藉著其他客戶端轉送的想法，其用數學分析，並於報告時顯示了分析的結果。此外也有學者提
出延遲容忍網路上的架構與應用，延遲容忍網路是一個很有趣的想法，當使用者身處在無法存取
網際網路的環境時，他可以將資料先傳送到一個電腦上，而這部電腦可能是裝在一個交通工具上，
如公車上，如此當公車移動到市區時，便可以將資料傳送到網際網路，並把使用者所需的資料抓
取下來，這個問題有很多的議題要解決，例如所使用者也允許移動，則如何把資料回送給使用者
也是需要有良好的設計。 
 
我自己剛好是第一個 Session 中最後報告的報告者，我針對無線網狀網路 (Wireless Mesh Networks)
提出了一個頻道管理協定。我們假設該網路上有多個頻道可以使用，然而每個網路上的節點只有
一個收發器。針對這樣的網路環境，我們的頻道管理協定包含了一個頻道分配 (Channel Assignment)
演算法及一個頻道切換 (Channel Switching)演算法。詳細的內容可參考附錄一的論文原文。事實上
論文中所提出的概念也可用於無線感測網路上，這也是本人未來努力的一個方向。 
 
第一個 Session 結束後，剛好也遇到一位來自台灣長榮大學的學者，午餐時也交換了相關研究心
得。其他的 Session 還包含了許多主題，如無線網路上的路由協定 (Routing Protocol)、最佳化
(Optimization)問題、智慧電網 (Smart Grid) 與感知網路 (Cognitive Network)等，其中最讓我感興趣
的是智慧電網 (Smart Grid)，這次日本 311 大地震所引發的核電廠危機，也讓人重新思考替代能源
等議題，除了開源之外，節流也是很重要的，智慧電網的技術所直接帶來的好處，就是可以減少
家庭用電的浪費，相信會是未來很熱門的一個網路技術。 
 
三、與會心得 
 
這次由於受到日本 311 大地震的影響，有些研究學者無法親臨現場，但也透過視訊的方式，參與
討論，研討會並沒有因此受到影響，仍是相當的熱絡，由此可見提供彈性與方便的機制給研討會
的參與者，是能否吸引國際學者與會的重要關鍵。 
 
而此次參與會議的過程中，發現感知網路 (Cognitive Network) 與智慧電網 (Smart Grid) 被廣泛地
討論，本人目前對此兩個主題涉獵未深，為了跟上研究的新趨勢，本人將開始進行相關主題的研
究。 
 
四、建議 
 
在這次會議中，有不少學者針對感知網路 (Cognitive Network) 與智慧電網 (Smart Grid) 提出研究
成果，由於電力線跟電話線一樣，是普及被設置的線路，若能進行一些簡單的通訊，對於省電是
相當有幫助的，這對於提倡廢除核子發電廠的年代，可說是明日之星的新技術。此外感知網路也
是一種新型數據網路，為了跟上研究的新潮流，本人也將閱讀/搜集相關的研究。 
A Channel Management Protocol for
Multi-Channel, Single-Radio 802.11-based Wireless
Mesh Networks
Chih-Yu Lin1, Shu-Hsien Lu2, and Yu-Chee Tseng2
1Department of Applied Informatics and Multimedia
Asia University, Taichung, Taiwan
2Department of Computer Science
National Chiao Tung University, Hsin-Chu, Taiwan
Abstract—Wireless mesh networks (WMNs) have emerged as
a key technology for next-generation broadband wireless access.
While benefiting from larger coverage, WMNs also suffer from
some scalability problems in terms of throughput, delay, and
packet delivery ratio faced by all multi-hop wireless networks.
Using multiple channels is a cost-effective solution to these
problems. In this paper, we propose a channel management
protocol for multi-channel, single-radio 802.11-based wireless
mesh networks. In such an environment, two issues should be
addressed: channel assignment and channel switch scheduling.
Therefore, most existing multi-channel solutions involve a channel
assignment scheme and a scheduling scheme to determine nodes’
behaviors at different times. However, we observe that channel
switching of some mesh points may not be necessary under this
environment. In fact, even without channel switching, the benefit
of using multiple channels (spatial reuse) can still be achieved.
In this work, mesh points are divided into two sets. Those in
the first set will be assigned channels and stay in the assigned
channels to transmit/receive packets. On the other hand, those
in the second set will switch to proper channels dynamically.
With this design, a lot of channel switching overheads (switching
delay, synchronization drift, etc.) can be mitigated. Extensive
simulations are conducted to verify the efficiency of the proposed
protocol.
Keywords: channel management protocol, IEEE 802.11, IEEE
802.11s, wireless mesh network (WMN), wireless network.
I. INTRODUCTION
Wireless Mesh Networks (WMNs) provide a possibility to
offer broadband wireless access for the areas where wired
infrastructure is not available or not worthy to deploy [1].
Moreover, due to its self-configuring and self-healing capabil-
ities, a WMN can be deployed and maintained easily. A WMN
consists of a collection of mesh points, which cooperatively
form a multi-hop backbone network. In this paper, we focus on
IEEE 802.11-based WMNs where mesh points communicate
with each other by IEEE 802.11 radio interfaces, and end users
can connect to mesh points, which will forward traffics on
behalf of them. Furthermore, some mesh points can serve as
gateways to provide Internet access. An example of a WMN
is shown in Fig. 1.
While benefiting from larger coverage, WMNs also suffer
from some scalability concerns in terms of throughput, delay,
802.11-based
Wireless Mesh Network
Mesh Gateway
Mesh
Router
802.11 STA
802.11 STA802.11 STA
802.11 STA
802.11 STA
802.11 STA
802.11 STA
Mesh
Gateway
Mesh
Router
Mesh 
Router
Mesh
Router
Mesh
Router
Mesh
Router
Mesh
Router
Mesh 
Router
Fig. 1. An example of a WMN.
and packet delivery ratio faced by other multi-hop wire-
less networks [2]. There are many approaches to addressing
these concerns, such as using directional antennas, adopting
transmission power control, assisting by location information,
exploiting multiple channels, etc. Observing that most existing
wireless interfaces provide multiple channels [3], [4], we
look for cost-effective, multiple-channel solutions for WMNs.
Multi-channel solutions have been studied intensively [5], [6],
[7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18],
[19], [20], [21], [22], [23], [24]. Considering the number of
radios per node, these protocols can be further categorized on
single-radio and multi-radio schemes.
Taking practicality and cost effectiveness into consideration,
this work proposes a multi-channel, single-radio solution for
IEEE 802.11-based WMNs. Compared to previous multi-
channel, single-radio solutions [10], [12], [16], our solution
take both the routing and the network structure into con-
sideration. Because each node has only one radio, it has to
switch its operational channel periodically to ensure network
connectivity when multiple channels are used. Usually, two
issues should be addressed. One is channel assignment and
the other is channel switch scheduling. In most literatures,
these two issues are considered simultaneously; that is, each
node needs two algorithms, a channel assignment algorithm
IEEE 16th International Workshop on Computer Aided Modeling and Design of Communication Links and Networks (CAMAD)978-1-4244-7635-0/11/$26.00 ©2011 IEEE 26
1
Gateway
[3]
3
[1, 2]
[1]
[1, 3] [3, 2]
3 1
[2, 1]
Internet
2
2
2 [3]
[1]
[1]
2
Mesh Points in V
Mesh Points in V’
Fig. 3. An example of our proposed network architecture. Solid lines are tree
edges and the dotted lines mean neighboring relations. The numbers labeled
on the mesh points in V denote their fixed channels and the numbers labeled
on the mesh points in V ′ are their switchable operational channels.
Superframei
1 2
Superframe i-1 Superframe i+1
3 k
kslots
BroadcastSlot GeneralSlot
Fig. 4. The superframe structure of our protocol.
broadcast but also for sending out the channel switching
schedules for nodes in V ′. So mesh points must switch to the
same default channel. For the other k−1 slots, node in V will
switch to their fixed channels (refer to Sec. III-B) and nodes in
V ′ will switch to different slots according to schedules (refer
to Sec. III-C). Fig. 4 shows the superframe structure. Inside
each slot, node will contend the medium using a typical CSMA
protocol (such as IEEE 802.11). We assume that each slot is
large enough to accommodate several packet transmissions.
B. Channel Assignment Algorithms for V
During general slots, each mesh point x in V will own a
fixed channel for transmissions. We propose three strategies
for x to choose its fixed channel.
• Interference-Based Strategy : The operation will be
triggered from the gateway. When a mesh point x is
triggered and gets all of its 2-hop neighbors’ permission,
x will choose the least used channel used by its 2-
hop neighbors as its fixed channel to minimize potential
interference. However, x should also avoid using the same
channel as its grandparent to prevent collisions at x’s
parent. Then, x will trigger its 2-hop neighbors in T
to choose their fixed channels. Fig. 5(a) shows a partial
network with y ∈ V ′. Assuming four available channels,
Fig. 5(b) shows the assignment result.
• Delay-Based Strategy: The above strategy intends to
minimize interference, but it may lead to long delay for y
because y has to switch among four operational channels.
To relieve this problem, this strategy tries to enforce all
children of y ∈ V ′ to choose the same fixed channel
(refer to Fig. 5(c) for an example). Therefore, y only
needs to switch between two channels. The operation is
also triggered from the gateway. When a node x ∈ V
is triggered, it will try to get all of its 2-hop neighbors’
permission to choose a channel. The channel-selecting
rules are as follows:
1) If x is a child of the gateway or none of its siblings
has owned a channel, it will choose the least used
channel among its 2-hop neighbors except the one
used by its grandparent as its fixed channel.
2) Otherwise, x chooses the same channel used by any
of its siblings as its fixed channel.
• Hybrid Strategy: It can be seen that although the delay-
based strategy can decrease delay, the corresponding
interference among y’s childrenmight be raised. In fact,
latency and interference are conflicting factors. To bal-
ance these concerns we propose a hybrid strategy (refer
to the example in Fig. 5(d)). The triggering operation is
the same. When any x ∈ V gets permission from all its
2-hop neighbors, the following rules are checked.
1) If x is a child of the gateway or none of its siblings
has owned a channel, it will choose the least used
channel among its 2-hop neighbors except the one
used by its grandparent as its fixed channel.
2) Otherwise, if one of x’s one-hop siblings has owned
a fixed channel, it will choose that channel as its
fixed channel.
3) Otherwise, only x’s two-hop siblings have owned
fixed channels. Then x will choose the least used
channel (which is different from its two-hop sib-
lings) among its two-hop siblings as its fixed chan-
nel.
It remains to state how a node gets permission from its 2-
hop neighbors to choose channel. Let x.ID and x.LV L be
the ID and level of x, respectively. For two mesh points x
and y, we say x < y if (x.LV L < y.LV L) ∨ (x.LV L =
y.LV L∧x.ID < y.ID). A node is triggered when it receives a
CHL GRANT message. When an odd-level node x receives
the CHL GRANT , it will send a CHL REQ to its one-
hop and two-hop neighbors. When a mesh point y receivers a
CHL REQ from x, it will send a CHL GRANT to x if
y.LV L is even. If y does not own a channel yet and y > x,
y will send a CHL GRANT to x. Otherwise, y will keep
on waiting for others’ CHL GRANT s. Once x receives all
CHL GRANT s from all its one-hop and two-hop neighbors,
it can select its fixed channel based on the earlier strategies.
After that, x will send a CHL GRANT to all its one-hop
and two-hop neighbors.
Note that when packet loss is possible, a node can proac-
tively ask for CHL GRANT s from its neighbors.28
 0
 500
 1000
 1500
 2000
 2500
2420161284
Th
ro
ug
hp
ut
s(K
bp
s)
Number of  flows 
SingleChannel
LowInterference
LowDelay
Hybrid
MJMM
Th
ro
ug
hp
ut
s(K
bp
s)
Fig. 6. Comparison of throughput performance under a 5× 5 grid network.
100
80
60
40
20
2420161284
D
ro
p 
ra
te
 (%
)
(N
um
be
r o
f p
ac
ke
ts 
dro
pp
ed
/n
um
be
r o
f p
ac
ke
ts
 g
en
er
at
ed
)
Number of  flows 
SingleChannel
LowInterference
LowDelay
Hybrid
MJMM
Fig. 7. Comparison of packet drop rates under a 5× 5 grid network.
one quality of service (QoS) demand of 50% packet drop rate,
our protocol can support up to 12 traffic flows transmission.
Both MJMM and the single channel scheme can support about
4 traffic flows. Finally, we can see that the channel assignment
strategies do not impact on performance deeply.
V. CONCLUSIONS
In this paper, we propose a channel management protocol
to mitigate channel switching overhead and increase network
throughput. Our protocol is a distributed and hierarchical
approach to deploy a multi-channel environment in tree-based
wireless mesh networks. Simulation results also demonstrate
the efficiency of the proposed protocol.
ACKNOWLEDGEMENT
C.-Y. Lin’s research is supported by National Science Coun-
cil, Taiwan, under the grant number NSC-99-2221-E-468-004.
REFERENCES
[1] I. F. Akyildiz, X. Wang, and W. Wang, “Wireless mesh networks: a
survey,” Computer Networks, vol. 47, no. 4, pp. 445–487, March 2005.
[2] M. Gerla, R. Bagrodia, L. Zhang, K. Tang, and L. Wang, “TCP
over Wireless Multihop Protocols: Simulation and Experiments,” in
Proceedings of the IEEE International Conference on Communications
(ICC), June 1999.
[3] IEEE 802.11 Working Group, “Wireless LAN Medium Access Control
(MAC) and Physical Layer (PHY) specifications,” 1997.
[4] IEEE 802.11a Working Group, “Wireless LAN Medium Access Control
(MAC) and Physical Layer (PHY) specifications - Amendment 1: High-
speed Physical Layer in the 5 GHz band,” 1999.
[5] M. X. Gong and S. F. Midkiff, “Distributed Channel Assignment Pro-
tocols: A Cross-Layer Approach,” in Proceedings of the IEEE Wireless
Communications and Networking Conference (WCNC), March 2005.
[6] R. Draves, J. Padhye, and B. Zill, “Routing in multi-radio, multi-hop
wireless mesh networks,” in Proceedings of the ACM International Con-
ference on Mobile Computing and Networking(MobiCom), September
2004.
[7] A. Raniwala and T. cker Chiueh, “Architecture and Algorithms for
an IEEE 802.11-Based Multi-Channel Wireless Mesh Network,” in
Conference on Computer Communications (INFOCOM), March 2005.
[8] P. Kyasanur and N. H. Vaidya, “Routing and interface assignment in
multi-channel multi-interface wireless networks,” in Proceedings of the
IEEE Wireless Communications and Networking Conference (WCNC),
March 2005.
[9] S.-L. Wu, C.-Y. Lin, Y.-C. Tseng, and J.-P. Sheu, “A New Multi-Channel
MAC Protocol with On-Demand Channel Assignment for Multi-Hop
Mobile Ad Hoc Networks,” in International Symposium on Parallel
Architectures, Algorithms, and Networks (I-SPAN), December 2000, pp.
232–237.
[10] J. So and N. H. Vaidya, “Multi-channel MAC for Ad Hoc Networks:
Handling Multi-channel Hidden Terminals Using a Single Transceiver,”
in Proceedings of the ACM International Symposium on Mobile Ad Hoc
Networking and Computing (MobiHoc), May 2004, pp. 222–233.
[11] A. Adya, P. Bahl, J. Padhye, A. Wolman, and L. Zhou, “A Multi-Radio
Unification Protocol for IEEE 802.11 Wireless Networks,” in Inter-
national Conference on Broadband Networks (BROADNETS), October
2004, pp. 344–354.
[12] P. Bahl, R. Chandra, and J. Dunagan, “SSCH: Slotted Seeded Channel
Hopping for Capacity Improvement in IEEE 802.11 Ad-hoc Wireless
Networks,” in Proceedings of the ACM International Conference on
Mobile Computing and Networking(MobiCom), September 2004.
[13] A. Nasipuri, J. Zhuang, and S. Das, “A Multichannel CSMA MAC
Protocol for Multihop Wireless Networks,” in Proc. of IEEE Wireless
Communications and Networking Conference (WCNC), September 1999.
[14] N. Jain, S. Das., and A. Nasipuri, “A Multichannel CSMA MAC
Protocol with Receiver-Based Channel Selection for Multihop Wireless
Networks,” in IEEE International Conference on Computer Communi-
cations and Networks (IC3N), October 2001.
[15] A. Nasipuri and S. R. Das, “Multichannel CSMA with Signal Power-
Based Channel Selection for Multihop Wireless Networks,” in IEEE
Vehicular Technology Conference (VTC), September 2000.
[16] A. Tzamaloukas and J. Garcia-Luna-Aceves, “A Receiver-Initiated
Collision-Avoidance Protocol for Multi-Channel Networks,” in Proceed-
ings of IEEE INFOCOM, 2001.
[17] J. S. Pathmasuntharam, A. Das, and A. K. Gupta, “Primary channel
assignment based MAC (PCAM) - a multi-channel MAC protocol
for multi-hop wireless networks,” in Wireless Communications and
Networking Conference (WCNC), March 2004.
[18] S.-C. Lo and C.-W. Tseng, “A Novel Multi-Channel MAC Protocol for
Wireless Ad Hoc Networks,” in Vehicular Technology Conference, 2007.
VTC2007-Spring., April 2007, pp. 46–50.
[19] J. Chen and Y.-D. Chen, “AMNP: Ad Hoc Multichannel Negotiation
Protocol for Multihop Mobile Wireless Networks,” in Proceedings of
the IEEE Interneational Conference on Communications (ICC), June
2004.
[20] Q. Xue and A. Ganz, “Temporal Topologies in Multi-channel Multihop
Wireless Access Networks,” in International Conference on Broadband
Networks (BROADNETS), October 2005.
[21] R. Vedantham, S. Kakumanu, S. Lakshmanan, and R. Sivakumar, “Com-
ponent Based Channel Assignment in Single Radio, Multi-channel Ad
Hoc Networks,” in ACM International Conference on Mobile Computing
and Networking (MOBICOM), May 2006, pp. 378–389.
[22] W.-H. Tam and Y.-C. Tseng, “Joint Multi-Channel Link Layer and Multi-
Path Routing Design for Wireless Mesh Networks,” in Conference on
Computer Communications (INFOCOM), May 2007.
[23] F.-Y. Leu, I. You, and Y.-T. Huang, “A coordinated multiple channel
assignment scheme and ap deployment for channel reuse in metropolitan
scale wireless networks,” Journal of Network and Computer Applica-
tions, vol. 34, no. 2, pp. 632–643, March 2011.
[24] S. Jiang and Y. Xue, “Providing survivability against jamming attack for
multi-radio multi-channel wireless mesh networks,” Journal of Network
and Computer Applications, vol. 34, no. 2, pp. 443–454, March 2011.
[25] IEEE, “Draft amendment: ESS mesh networking,” IEEE
P802.11s/D1.07, September 2007.30
99 年度專題研究計畫研究成果彙整表 
計畫主持人：林致宇 計畫編號：99-2221-E-468-004- 
計畫名稱：無線感測網路上一個以四分樹為基礎的位置管理系統 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備註（質化說明：
如數個計畫共同
成果、成果列為
該期刊之封面故
事...等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 發表於第六屆台灣
數位學習發展研討
會，台灣，台中，
2010。 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  國外 論文著作 
研究報告/技術報告 1 1 100% 
篇 
已投稿至國際期刊
(審查中) 
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
