網際網路架構下的自動化資料分析服務中心 
 
本計劃將利用網際網路及資料庫管理技術，提供使用者於使用端上傳待分析
資料至伺服器，而系統可自動依使用者的需求進行資料分析，系統完成分析工作
後自動產生之結果，可存至使用者預先註冊之帳戶，供使用者下載分析結果與學
習模型(Learning Model)。初期將利用支撐向量法[4, 13]提供分類、迴歸與群聚問
題之分析服務。基於公開網路化資料探勘平台的設計理念，我們將採以下原則開
發使用介面與計算平台： 
 
系統架構圖 
 
圖 1  計劃整體架構圖 
 
整個計劃分為三個部份，前端、資料庫、後端前端指的是 Users 和 Web Server
部份，資料庫指的是圖中 Database Server 部份，後端指的是 Computing Server 
Group 部份。而且前端不需要和後端直接傳訊息來做事，全部都是由 Database 
Server 當仲介來傳遞資料。 
3 
本計劃網頁伺服器是以 JSP [3] 語言所撰寫而成，使用者在第一次連到伺服
器時，必須先註冊，之後才能以註冊之資料來登入本網站。另外在會員註冊和資
料修改的部分有使用到 JavaScript [3] 的技巧作表單的驗證。 
使用者在登入後會進入到首頁的框架頁面，網頁伺服器同時為使用者產生一
個 Session 作為專屬資料的保存，也提供不同使用者個人化的服務。依需要可以
選擇登出、登入或 E-mail 給網頁管理者，如果要執行工作的上傳或是檢閱工作
進度，就選擇 Process State 頁面。使用者可以使用 View 來查閱已完成工作的運
算結果， Delete 則是用來刪除工作。 
無論是 SSVM、SSVR 或 K-means 都需要使用者設定參數，同一使用者會在
不同的頁面中設定所要使用的參數類型與數值，所以要配合 Session 來做個人化
的記錄。不同的演算法所使用到的參數不一，我們使用 XML [3] 的技術來做參
數的傳遞，將使用者設定的參數寫成 XML 檔再存入資料庫。參數設定完成後，
新增加的任務就會放入 Process State 頁面當中。 
對於不知如何設定參數之使用者，本計劃特別發展出巢狀式均勻撒點法的策
略。在許多學習模型中，挑選參數時常是建立模型中最耗費時間的步驟。像是支
撐向量機(support vector machine)中，就需要挑選兩個適當的參數 C 與 gamma(高
斯核函數之參數)。傳統挑選參數之方式多為撒格子點法，但這類的方法雖然簡
易，但是其效率性較低而且需要使用者指定格子點之範圍。有鑒於此，我們的資
料分析系統屏除了格子點法，使用巢狀式均勻撒點法的策略。在此種方式中，使
用者僅需要上傳其資料，無需額外之設定即可得到適當之參數(其細節請參考本
實 驗 室 之 論 文 ”Model Selection for Support Vector Machines via Uniform 
Design”)。藉由此巢狀式均勻撒點法，本系統提供了一個自動挑選參數的策略來
幫助使用者挑選參數，並且藉由此種方式來減輕系統的負擔。而在實測的環境
中，巢狀式均勻撒點法也確實達到了減少消耗系統資源及提供使用者方便之效
用。 
Process State 頁面可以清楚瀏覽各項工作的上傳時間、計算花費時間、目前
狀態(Waiting, Operating, Finish)，使用者如果想要隨時監控工作的狀態，本計劃
也提供了一個貼心的小設計，讓使用者可以勾選每隔 60 秒網頁重整一次，這部
份也是使用 JavaScript 的技巧。如果工作完成，資料庫會得到後端程式傳回來的
結果，它也是一個 XML 的檔案，網頁伺服器會去資料庫將檔案讀出並解析，讓
使用者點選 View 來觀看計算結果。 
 
 
 
5 
JNI ( Java Native Interface ) 
 
我們計劃中的 SSVR 和 SSVM 的程式是由 MATLAB 語言來寫成的，而計劃
的後端的主程式是由 Java 所寫成，自然而然會讓人想到這兩種語言應該如果做
連結、呼叫及引用模組，我們就想到使用目前最流行的 JNI ( Java Native 
Interface )。 
 
JNI 簡介 
 
Java Native Interface ( 以下簡稱 JNI ) 是 JDK 的一部份，如果你的程式有使
用到 JNI 的技術，可以使寫出來的程式擁有更完整的可攜性 ( Portable )，也就是
可以在跨平台上有更好的相容性。 
 JNI 允許 Java 程式在 Java Virtual Machine ( JVM ) 的內部去操縱、控制由其
它語言寫好的應用程式 ( Applications ) 及函式庫 ( Libraries )，像是 MATLAB、
C、C++甚至是組合語言 ( Assembly )，這些語言寫出來的模組，都可以透過 JNI
來和 Java 程式互相連結、引用，而不用重新將程式重寫一致化成同一種語言。 
 
 
圖 4  JNI 示意圖 
 
 
我們的計劃就是因為上面的第二個例子，計劃中的 SSVR 及 SSVM 在之前都
己經用 MATLAB 開發完成，而我們計劃是選用 Java 來撰寫，因此我們就需要使
用到 JNI 當媒介來呼叫 SSVR 和 SSVM 這兩套 Library。 
 
若我們用 Java 來重寫一份 SSVR 及 SSVM，如果以後有什麼修改的話，就必
需在 MATLAB 和 Java 兩個版本上都要做修改，所以使用 JNI 來呼叫 MATLAB
在維護上比較方便，只需更改 MATLAB 的那份。 
 
 
7 
網頁安全性問題– SQL Injection 
 
由於我們的整各計劃架構中，是透過網路的方式來提供使用者服務的，所以我們
將面對的是一群來自各方不同的使用者，也因如此，我們也將面臨駭客入侵的嚴
苛挑戰，為了保護我們的使用者資料，因此我們對整體的系統，做了一些防駭的
措施。 
 
JAVA Call MATLAB 製作流程 
 
• //建立一個 JMatLink 的 engine 物件 
• JMatLink engine = new JMatLink(); 
 
• //開啟 MATLAB 
• engine.engOpen();  
 
• //將參數傳至 MATLAB 
• engine.engPutArray(“Mat”, work.getMatData());  
• engine.engPutArray(“K”, (double)work.getXmlParam().getK_Value()); 
 
• //呼叫 MATLAB function 計算 
• engine.engEvalString("[IDX, C, SUMD, D] = kmeans(Mat, K);"); 
• engine.engEvalString(“IDX=IDX‘; SUMD=SUMD’; D=D‘;”); 
engine.engEvalString(“CNUM=zeros(1, K);  
 
• //Return 計算結果至 Java 端 
• work.setIdx(engine.engGetArray(“IDX”)[0]);  
• work.setCentroid(engine.engGetArray("C")); 
• work.setSumD(engine.engGetArray("SUMD")[0]);                 
• ork.setCNum((int[])StaticFuncs.ConvertArray(new int[0], 
engine.engGetArray(“CNUM”)[0])); 
              
• //關閉 MATLAB 
• engine.engCloseAll(); 
 
 
 
 
 
9 
 
 
 
 
 
 
 
 
 
 
 
 
圖 6.7 設定參數                         圖 6.8 設定分割的方式及比例 
 
 
 
 
 
 
 
 
 
 
 
圖 6.9 新增上傳的資料                   圖 6.10 SSVM-Training 的結果 
 
 
 
 
 
 
 
 
 
 
 
 
圖 6.11  SSVM-Testing 的結果 
出席國際會議報告書 
報告人姓名 中文：李育杰 
英文：Lee, Yuh-Jye 
係所年級 台科大 資工系 助理教授 
會議時間及地點 July 10-20, 2006, Erice, Italy 
會議正式名稱 Workshop 
MATHEMATICS AND MEDICAL DIAGNOSIS 
Sponsored by the: 
- Italian Ministry of University and Scientific Research 
- Sicilian Regional Government 
- University of Calabria 
- Centro “Enrico Fermi” 
- Italian National Research Council, Institute of High 
Performance  
Computing and Networking, Rende (CS) 
 
報告內容： 
一、參加會議經過： 
1.行程說明、 
  7 月 8 日由台北出發，往義大利西西里島的 Erice 於 7 月 10 日抵達會議場地 
The objective of this Workshop on Mathematics and Medical Diagnosis is to present 
the state-of-the- art on applications of optimization tools to this area, through the 
description of new models and algorithms, and the discussion of primarily medical 
real world applications.  
 
2.會議參加過程 
 
The Mathematics and Medical Diagnosis workshop 涵蓋的主題包括: 
Kernel Methods for Pattern Recognition 
Support Vector Machines 
Neural Networks 
Symbolic Methods 
Fuzzy Logic 
Inductive Inference 
Foundations of Computer Learning 
Bayesian Classification 
Diagnostics of Dynamic Processes 
