 3
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
□ X 達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：X 已發表 □未發表之文稿 X 撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本研究計畫撰寫時，Facebook 等社會網路並未像現在的穿透力那麼高，但三、
四年下來，我們見證了社會網路的快速發展與影響。本研究試圖對 blog 與社
會網路進行一點了解，並就如何在這樣的網路中尋找資源與傳遞資訊進行相
關研究。在學術上，我們對這些議題做出了一點點貢獻(產生了六、七篇相關
碩士論文)，但在應用上，我們還有很長的路要走。 
 
 
 
 
附件二 
路，或許有助於我們進一步的探索網際網路上的資訊搜尋與傳播行為，以改善其效能。
本計畫因此將對這些社會網絡相關議題做深入的研究。主要研究成果可以分成下列三部
份來說明包括： 
z 由文章分類和引用關係改善 blog 連結分析方法 
z 社會網絡的搜尋與傳播策略組合 
z 社會網絡中強連結與弱連結對網路特性的影響 
 
二、由文章分類和引用關係改善 blog 連結分析方法 
Blog 是一種 online publishing system。其便利書寫的特性，讓使用者即使不懂 html 語
法也可以在網路上發表自己的意見。而且讀者可以對 blog 文章作 comment、使用 RSS 訂
閱 blog，而 trackback 會紀錄被其他 blog 引用的連結，這些功能強化 blog 社群的互動，
讓 blogosphere 快速成長，成為 WWW 的主要應用服務之一。雖然 blog 身為 WWW 的一
員，卻與一般的網站不同，每個 blog 都是個人所有，blogger 可以自訂 blog 的樣式、文章
類別，因此 blog 可以反映出 blog owner 的個人特性，而 blogroll 又把不同的 blog 串連在
一起，反應個人線上的交友圈，形成 blog social networks。Blog 雖然允許 blogger 做許多
個人化的設定，但是仍具有 semi-structure 的特性，每篇文章都有日期、分類、引用及被
引用(trackback)的連結。 
然而 blog 最大的問題就是不同 blog 系統無法互通，除非透過其他的搜尋引擎如
Google Blog Search (http://blogsearch.google.com) 和 Feedster (http://www.feedster.com)，否
則使用者一般僅能對一個 blog 做站內搜尋、一次只能瀏覽一個 blog site 下的文章。不同
blog 之間僅能藉由引用、被引用(trackback)的 link 及 blogroll 互連，對讓使用者難以跨 blog
搜尋、瀏覽文章，使得 blogosphere 空有這麼多豐富的文章資源，卻無法充分被大眾利用。
不過 blog social network 因為 blog 具備 semi-structure 的特性並能反映 blogger 的個性，所
以吸引不少學者對 blog 做分析研究。在眾多研究中，link analysis 是常見的方法[GD05]，
從分析 blog 間的連結關係下手，進行 blog social network analysis [KNRT04,CC06], blog 
ranking ([FIS05,TTW05, NTH+05, AZAL04]), communities identification ([TTW05,EHA05, 
ZD06,CC06,LSC+06]), blog information diffusion and trend detection ([BP98,KNRT03, 
AZAL04,AA05b,AdHBE05,FMN05])等研究，以協助使用者可以更方便地獲取感興趣的
blog 資源，並能夠搜尋、瀏覽不同 blog 的文章。 
但是這些的 blog 研究在建構由 link 形成的 network 時，並沒有考量 link 中可能隱含
的 semantic，因此一個 blog 僅會分到一個 community 中。可是現實生活中，同一個 blogger
可能參與許多不同的 communities，在不同 communities 中扮演的角色可能不同、影響力
也不同，因此沒有考量一個 blog 可能屬於多個 community 的 blog link analysis，必然具備
某種程度的偏誤。文章是 blog 的主體，blogger 所撰寫的文章可以反應他所關注的議題，
無形中造成醫療資源的浪費。因此上一段所述的文章分類 mapping 方法勢必需要做某種
程度的調整及改善，也成為本項研究的重點議題。 
另外，在蒐集 blog 的研究資料方面，目前網路上存在各種 blog systems，而且這些
系統之間無法互通，造成研究蒐集資訊的困難。但是因為 blog 有提供以 XML 為基礎的
RSS 顯示文章資訊，使得某些類別的 blog 研究可以使用 RSS 直接辨識 blog 的內容。可是
一般 blogs 的 RSS 只提供最近幾筆的文章資訊，需要 blog 中全部筆數文章才能判斷的研
究就不適用。所以這類研究（如上述的 mapping blog 分類的方法）在自動化識別 blog 資
訊上必須花費更多工夫。 
本項研究希望利用 blog 現有的資源找出 link 隱含的 semantic，透過 blog 原有的自
訂文章分類，經由文章互相引用的 link 找出 blog 所屬的 communities。而 semantic link 的
觀念還可以應用在利用 link analysis所發展出的 blog分析方法上(如以 semantics 的強弱決
定連結的強弱)，進而改善現有 blog 的搜尋、瀏覽、傳播、推薦等機制，促進 blog 間的知
識分享。 
我們的研究成果顯示，使用引用連結的資訊來做 blog tag 的分群與直接使用 blog 的
內容來做分群所得的分群效果近似。但由於使用 blog 的內容來做分群所需耗費的運算資
源較大，因此使用連結的資訊來做 blog 的分群可以視為一項輕量有效的 blog 分群及協助
跨部落格瀏覽的方法。更多的細節與實驗結果在第一期的期中成果報告已有交代，因此
這裡不再贅述。 
 
三、社會網絡的搜尋與傳播策略組合 
Milgram 與 Travers 在 1967 年發現兩個不同的陌生人之間存在平均只要六步就可以到
達的路徑，這就是著名的「六度分隔理論」。這個發現顯示，社會網路雖然個體及個體之
間關係的數目相對於一完整的網路 (complete graph) 所具有的連結數目是稀疏的，可是人
與人之間的距離並非想像中的遠，這就是著名的「小世界現象」[TM67,TM69]。  
隨著資訊科技越來越進步，這個發現刺激了許多社會網路相關研究，並且發現社會網
路與一般網路相較之下，有很多不同的特性。例如，在網路結構上，個體的連結數符合
了複雜網路中常見的 Power-law Distribution，這個特性為社會網路帶來了高容錯與高度連
結等特性[NP03]；在關係強度上，社會網路中人與人的關係可以使用不同的強度來描述，
也就是強連結、弱連結，而其中弱連結被視為網路中個體接收新訊息以及快速傳播訊息
的主要管道[Gran74]；在關係的形成上，社會網路關係的形成具有遞移性，也就是群聚特
性[NP03]，舉例來說，社會網路中，兩個擁有相同朋友的人彼此互相認識的機率高於沒
有相同朋友的兩個人。 
介讓人與人的關係越來越多樣化，網際網路的出現更徹底改變了世界的面貌，許多線上
社會網絡也逐漸成形，不論是電子郵件、即時通訊、線上論壇、部落格、社群網站等，
皆可視為由使用者所構成的社會網絡[Well01]，而藉著電腦的幫助，完整且極大量的資料
被詳細地記錄下來，讓研究者有機會觀察和分析使用者在其中的活動特徵，也讓線上社
會網絡成為一個新興的研究議題。 
由於網際網路的無遠弗屆，線上社會網絡的大小比起傳統社會網絡更難掌握，數以千
萬計的使用者所形成的網絡結構尤其複雜，也由於其多樣化的溝通方式，讓「關係」有
了許多新的定義。以部落格中的社會網絡為例，兩個使用者間的關係可能是：瀏覽、加
入好友、放置部落格聯播(blogroll)、引用、回應、留言…等，在這些不同的定義之下，我
們也可以去衡量其連結的強度，探討線上社會網絡中所謂關係的內涵。 
但是，就我們目前已知的文獻中，還沒有就線上社會網絡中連結強度的衡量做深入的
研究。我們想要知道，在線上的社會網絡中，關係的內涵如何影響社會網絡中巨觀的特
性？這些特性會隨著關係不同的定義而改變，抑或是維持不變？運用不同的方式來衡量
連結強度，對網絡結構所造成的差異為何？具體而言，我們要探討連結強度的衡量是否
會對下列社會網絡特性有所影響： 
一、平均最短路徑(shortest path)：社會網絡具有「小世界現象(Small World 
Phenomenon)」，也就是任意兩點間平均距離極短。在計算平均最短路徑時，原本僅考慮
關係的存在與否，而未去分析其關係強弱對最短路徑長短的影響，以及連結強度在最短
路徑中的分布有何差異。 
二、度群聚(clustering)：一般我們以群聚係數(cluster coefficient)作為網絡中群聚現象
的指標，其最基本的計算方式為：「封閉的連結─節點─連結組除以所有的連結─節點─連
結組」。社會網絡具有高度群聚特性，亦即，「朋友的朋友互為朋友的機率很高」。我們將
藉檢視群聚係數來探討連結的強度對於該機率的影響。 
三、連結個數呈冪次法則分配(Power-law Distribution) ：社會網絡中擁有高度連結的
節點佔極少數，大部分的節點都只有為數不多的連結。我們將觀察連結強度的分配狀況，
比較不同衡量方式產生的圖形，再來將探討節點的連結個數與其連結強度分配的關連
性，討論關係的定義。 
四、同類混合(assortative mixing)現象：同質性(homophily)高的節點會有傾向互相連
結，例如：高度連結的節點間、相同性別之間、相同種族之間、相同社會階級之間…等。
若考慮了不同的關係定義，我們將探討連結強度是否也符合這樣的現象，並進而比較節
點間連結強度的對稱性。 
五、明顯的社群(community)結構：節點會根據興趣、教育程度、年齡等屬性行成群
集，同群中的連結密度較高、不同群間的連結密度較低。我們將進一步加入連結強度來
觀察社群結構，觀察不同的關係定義對於社群結構有何影響。 
4.1 實驗設計  
的困難。舉例來說，當我們捕捉到＂James＂這樣的暱稱，我們無法判斷他為＂James＂、
＂JamesChen＂、＂James1126＂、甚至＂JamesGood＂或是＂JamesCool＂等帳號（以上
帳號皆確實存在），若我們在遇到此問題時擅自將相同暱稱是為同一個使用者，顯而易見
地將出現錯誤。因此，在蒐集「回應」關係時，我們只記錄「有登入」的使用者，這樣
一來雖然增加了資料的正確性，卻也遺漏了一定程度的資料量，但由於資料的樣本數相
對龐大，我們並不認為這樣的舉措會影響到實驗的有效進行。 
4.2 連結強度定義 
究竟我們該如何衡量使用者間關係的強弱呢？承上所述，每位使用者發表過數篇文
章，每篇文章則有數位其他使用者與之產生「關係」，舉例來說，若在我們的資料庫中發
現乙回應過兩次甲的文章、丙則回應過十次甲的文章，就直覺上來說，我們認為「丙Æ
甲」連結比起「乙Æ甲」連結的強度較高，因為強度包含了時間、親密程度等因素，我
們將丙對於甲的較熱烈的回應解釋成：丙較常瀏覽甲的網誌、較關注甲所發表的文章、
對於甲的文章有較高的認同或共鳴、或是較願意提供甲一些幫助或支持，因此我們將藉
此來定義所謂連結的「強度」。 
 於是，我們就可以針對不同的關係，檢視每個部落客的所有文章，加總原先資料庫
中「使用者」對「文章」的紀錄，合併成「使用者」與「使用者」的連結，而每一條連
結都將帶著一個「強度」的參數，最小為一，表示兩者間此種關係只出現過一次，即為
過去研究中所認為的此關係「存在」，而隨著該動作的重複出現，強度也將逐漸累加，一
條連結的強度越大，表示兩使用者間的關係越強。 
 但是該如何評估這樣的方法能有效捕捉到連結間的「強度」呢？或者說，在我們定
義下所測量到的強度，確實能反映使用者間關係的強弱嗎？為了驗證我們的假設，我們
也提出了數據加以支持。首先，在我們所蒐集的資料中，「回應」、「引用」、及「收藏」
是帶有強度的，而「好友」是由使用者設定名單，即只有「是好友」和「不是好友」兩
種情況，並無法測量其強度。我們認為，若我們所定義的強度是正確的，應該能反映預
測現實中或是線上環境中的另一種關係，也就是說，若在我們蒐集到的資料中，兩使用
間者的連結強度越強，他們在現實生活中應該越熟稔、互動越密切。當然在線上的社會
網絡中，我們不可能去捕捉到現實世界的連結狀態，如前所述，好友名單可以說是一種
使用者的主動宣告，代表使用者主觀的認同與對方間的關係，於是我們將「好友」關係
作為預測的目標。 
 
強度越強，所指向的兩節點間存在連結的機率越大，且該連結的強度也會越強。六、社
會網絡的連結確實具有對稱性，且兩節點間成雙出現、互指向對方的連結是有具有相關
性的。 
這些結果，幫助我們能有效地觀察關係的內涵所代表的意義，釐清連結強度的衡量在
社會網絡中所扮演的角色，讓我們更了解關係是什麼，也提供了一個更正確、更完整的
方法給後續的研究。 
 
參考文獻 
[AA05a] Adamic, L. and E. Adar (2005). "How to search a social network." Social Networks 27(3): 
187-203. 
[AA05b] Eytan Adar and Lada A. Adamic. Tracking information epidemics in blogspace. In 
Proceedings of the The 2005 IEEE/WIC/ACM International Conference on Web Intelligence (WI 2005), 
pages 207-214, Washington, DC, United States, 2005. IEEE Computer Society. 
[AdHBE05] Anjo Anjewierden, Robert de Hoog, Rogier Brussee, and Lilia Efimova. Detecting 
knowledge flows in weblogs. In Proceedings of the thirteenth International Conference on Conceptual 
Structures (ICCS 2005). Kassel university press, 2005. 
[AZAL04] Eytan Adar, Li Zhang, Lada A. Adamic, and Rajan M. Lukose. Implicit structure and the 
dynamic of blogspace. In Proceedings of the First Annual Workshop on the Weblogging Ecosystem: 
Aggregation, Analysis and Dynamics (WWE 2004), 2004. 
[BP98] Sergey Brin and Lawrence Page. The anatomy of a large-scale hypertextual web search engine. 
In Proceedings of the seventh international conference on World Wide Web(WWW 1998), pages 
107-117, Amsterdam, The Netherlands, 1998. Elsevier Science Publishers B. V. 
[CC06] Alvin Chin and Mark Chignell. A social hypertext model for finding community in blogs. In 
Proceedings of the seventeenth conference on Hypertext and hypermedia (HYPERTEXT 2006), pages 
11-22, New York, NY, United States, 2006. ACM Press. 
[DM03] Dodds, P. S., R. Muhamad, et al. (2003). "An Experimental Study of Search in Global Social 
Networks." Science 301(5634): 827-829. 
[EHA05] Lilia Efimova, Stephanie Hendrick, and Anjo Anjewierden. Finding "the life between 
buildings": An approach for defining a weblog community. In Internet Research 6.0:Internet 
Generations. Association of Internet Researchers, October 2005. 
[FIS05] Ko Fujimura, Takafumi Inoue, and Masayuki Sugisaki. The eigenrumor algorithm for ranking 
blogs. In Proceedings of the second Annual Workshop on the Weblogging Ecosystem: Aggregation, 
Analysis and Dynamics (WWE 2005), 2005. 
[FMN05] Tomohiro Fukuhara, Toshihiro Murayama, and Toyoaki Nishida. Analyzing concerns of 
people using weblog articles and real world temporal data. In Proceedings of the second Annual 
Workshop on the Weblogging Ecosystem: Aggregation, Analysis and Dynamics (WWE 2005), 2005. 
[Gran74] Granovetter, M. S. (1973). "The Strength of Weak Ties." The American Journal of Sociology 
AN EXAMINATION OF ONLINE SOCIAL NETWORK 
PROPERTIES WITH TIE-STRENGTH 
Chien-Chou Chen, Department of Information Management, National Taiwan University, 
Taipei, Taiwan, ccc1126@gmail.com 
Terry Hui-Ye Chiu, Department of Information Management, National Taiwan University, 
Taipei, Taiwan, terry@mcut.edu.tw 
Yuh-Jzer Joung, Department of Information Management, National Taiwan University, 
Taipei, Taiwan, joung@ntu.edu.tw 
Shymin Chen, Department of Information Management, National Taiwan University, Taipei, 
Taiwan, chen@mcut.edu.tw 
Abstract 
In the past, most researchers focused on the efficacy of tie-strength in various applications for both 
online and offline social networks. However, how tie-strength can help in the analysis of online social 
networks was a commonly neglected issue. The massive size and recording properties of online social 
networks offer the possibility to measure tie-strength objectively. In this study, we examine a social 
network extracted from a blog network. We then propose a tie-strength measurement and investigate 
several properties of the network using the tie-strength we defined. We also study how tie-strength 
plays a role in these properties. 
Keywords: online social network, tie-strength, weak ties, strong ties, clustering coefficient 
models for women to advance in organizations through weak ties (Crowell 2004), and more. Several 
other studies (Karathanos and Pettypool 1992; Wilson 1998; Lin et al. 1981; Wellman and Wortley 
1990; Hansan 1999; Brown and Konrad 2001; Jenseen and Koen 2002; Köhler 2004; Crowell 2004; 
Levin and Cross 2004) proved that a seemingly unimportant weak tie actually plays an important role 
in a social network. Claims and theories can only be examined if the tie-strength can be measured and 
strong ties can be distinguished from weak ties.  
The definition of tie-strength is vague; there is no clear rule to classify a connection into a strong tie 
or weak tie. However, attempts have been made in the past to determine a valid indicator and 
predicator of tie-strength. Marsden and Campbell (1984) showed that many indicators are 
contaminated by situation factors (predicator) with the exception of emotional attachment/support. 
Petróczi et al. (2007) summarized tie-strength components in off-line social networks as contact 
frequency, intimacy, voluntary investment in the tie, advice given/received, desire for companionship, 
multiple social context, period of time, reciprocity, emotional support/intensity, trust, and sociability, 
among others. Research regarding the measurement of tie-strength in online social networks is rather 
scarce. Muncer et al. (2000) used posting frequency between users to indicate tie-strength. Paolillo et 
al. (2001) used informal speech as an indicator of closeness and friendship. Petróczi et al. (2007) 
proposed a VTS-scale and scoring method for measuring tie-strength. In this study, we use the 
definition of tie and the tie-strength measuring method from Muncer et al. (2000) with slight 
modification. The definition of tie and the measurement of tie-strength will be described in Section 
3.1 and 3.3. 
3 METHODOLOGY 
3.1 Dataset 
We focus on blog networks for the following reasons. Blogs (Weblogs) are continuous online social 
groups, and the minimum communication period between users is at least 1 year (Zhou and Davis 
2007). The network is fairly stable, and unlike other online social networks, most information is open 
to the public, which can enhance the validity of our analysis. Blogs also contain all the features of 
social networks like shared interests, personal preference, different tie-strengths, etc. In addition, 
blogs tend to form groups with certain shared values, behavioral norms, and inter-blog relationships.  
Blogs are usually maintained by individuals with regular commentary entries, descriptions of events, 
or other material such as graphics or videos. The blogger who writes the weblog is the actor, and 
blogger generally has read and respond relations with each other (Zhou and Davis 2007). Each 
hyperlink between two blogs is a communication instance between two bloggers, which can be treated 
as a tie between nodes in a social network. The number of instances between blogs can then indicate 
the strength of tie between bloggers.  
Wretch.cc1 is one of the most popular Web-based social network sites in Taiwan, with more than three 
million users. Members can use services such as bulletin boards, blogs, videos, photo albums, etc. to 
interact with their friends. The average time a user spent visiting the site was roughly 11 minutes, with 
19 seconds spent on each page view. On average, each user will visit 23.1 unique pages per day 
(Alexa2). Wretch.cc ranks as the number one online social network site in Taiwan (excluding the 
international site Facebook). With such credentials and regional relevance, we are confident in using 
the Wretch.cc blog as our data source for this study. 
The main page of the blog shows a summarized list of articles, which is displayed in reverse-
chronological order. If user desires, each article can be drilled down for further detailed reading, and 
interaction with the blogger can take place on the article. An article is a unique page with a permalink 
where other users can interact with the blogger via three different interactions: “reply,” “trackback,” 
                                              
1 http://www.wretch.cc 
2 http://www.alexa.com/, a web information company which provides information about websites, as of 2011.04. 
another, the higher the chance the former views the latter as a friend. Our results on “trackback” and 
“collect” relations show a similar pattern.  
 
Figure 1. Relationship between weight of tie-strength and the probability users recognized one 
another as “friends” on “reply” relations 
4 EXPERIMENTAL RESULT 
Newman (2003) stated that a social network normally consists of the following properties: the shortest 
path, clustering phenomenon, power-law distribution of degree, homophily, and obvious community 
structure. In this section we investigate some of the properties from the perspective of tie-strength. 
4.1 Distribution of Tie-Strength 
First we inspect the distribution of tie-strength, as shown in Figure 2. The x-axis represents the weight 
of the tie-strength and the y-axis represents the number of links with the weight. All three relations 
exhibit a power-law distribution; the number of links decreases with an increase in strength. That is, 
most links in the network are weak ties. 
 
Figure 2. Distribution of weight in links 
4.2 Degree of Connection 
A social network exhibits a power-law distribution. That is, a network consists of only a small amount 
of nodes that feature a high degree of connection, and most nodes are loosely connected. A node’s 
degree indicates how well connected it is in the network. Figure 3 shows the distribution of out-degree 
(a) and in-degree (b). All distributions follow a power-law distribution, which proves that the data we 
collected also exhibits similar behavior of a social network. It is interesting to note that the slope of 
the out-degree is steeper than the slope of the in-degree; that is, the maximum out-degree is smaller 
than the maximum in-degree. This can be explained as follows. Some blogs are very famous and 
popular, attracting many users to interact with them (thus yielding a large in-degree). In contrast, the 
0
10
20
30
40
50
60
70
0 200 400 600
be
 fr
ie
nd
 (%
)
weight
y = 1E+06x‐2.34
y = 26841x‐2.287
y = 174863x‐2.609
1
10
100
1000
10000
100000
1000000
10000000
1 10 100 1000
no
. o
f l
in
ks
weight
reply
trackback
collect
few interactions with each blog. On the other hand, a user may only reply to a few blogs, but the 
interaction between them is very frequent. Moreover, a user who has attracted many responses may 
generally have more interaction with each responder.  
We also show the correlation coefficient between the inbound connections and outbound connections 
with respect to degree and with respect to total weight in Table 2. With respect to degree (third 
column), the correlation between inbound connections and outbound connections is very low (0.212), 
meaning that a user who has replied many different users may not necessarily attract many responses. 
However, if we consider the total weight (fourth column), then the correlation between inbound 
connections and outbound connections increases to 0.51. This means that a user who has replied many 
times may have a chance to get some reciprocal replies, but perhaps only from a few users. The 
results for the “trackback” and “collect” relations show no correlation between total weight of 
inbound connections and total weight of outbound connections. This may be due to the fact that the 
data collected for these two types of relations are much smaller than the reply-relation, and thus no 
statically meaningful conclusion can be drawn.  
 
Relation Degree vs. Total Weight Inbound vs. Outbound Out-degree In-degree Degree Total Weight 
Reply 0.646 0.870 0.212 0.510 
Trackback 0.903 0.977 0.004 0.005 
Collect 0.805 0.986 -0.018 -0.013 
Table 2. Correlation coefficients between connection degree and total weight 
4.3 Small-World Phenomenon  
Milgram’s (1967) experiment suggested that a social network is a small world in which every two 
persons are connected via a small number of hops (approximately six). In this section we examine the 
small-world phenomenon in our dataset, and discuss how weight plays a part in the construction of the 
shortest path. Due to the relatively smaller amount of data collected for the track and collect relations, 
we shall focus our study on the reply relation. 
In our dataset, there is about a 46 percent chance that we can successfully locate the shortest path 
between any two given nodes. The distribution of the shortest path lengths is shown in Figure 5. On 
average, a shortest path has a length of 5.3, which is close to what Milgram observed. Next, we 
investigate if weight plays an important role in constructing the shortest path. To do so, we draw the 
distribution of link weight in both network and shortest paths. In Figure 6, we can see that the weight 
distribution in shortest paths and the weight distribution in the whole network are very closely 
overlapped. For example, 54 percent of links in the network has a weight of 1, while 55 percent of 
links in the shortest paths also has a weight of 1. 
 
Figure 5. Distribution of shortest path lengths 
Weak ties have been suggested by Burt (1995) to be important in bridging subgroups (and in linking 
persons to resources in a network). Without weak ties, the chance of finding a shortest path between 
0.06 0.58
8.11
23.75
25.49
22.60
13.90
3.48
1.16 0.41 0.29 0.17
0
5
10
15
20
25
30
1 2 3 4 5 6 7 8 9 10 11 12
no
. o
f p
at
hs
shortest path length
tie with A. Figure 7 shows the result. The “All” category is the result that does not distinguish tie-
strength; that is, the result in Table 3 (second column). For the reply relation, we see that, among the 
three cases studied, two nodes that are weakly tied to a common node have the least chance to be tied 
together. However, if one of them is strongly tied to the common node, then the chance for the two 
nodes to be connected increases significantly. If both nodes are strongly tied to the common node, 
then the chance for them to be connected is the highest. The result for the trackback and collect 
relations also demonstrates this phenomenon, although the situation is not as salient as the reply 
relation (once again possibly due to the fact that the number of the relations collected is much smaller 
than in the reply case). 
The above finding suggests that although social networks have a high clustering coefficient (relative 
to a random graph), the clustering phenomenon is primarily boosted by strong ties. To verify this, we 
further analyze how weight in ties influences clustering. We focus on the reply relation due to the 
large volume of data we have collected. Figure 8 shows the chance that two nodes, B and C, have a 
relation when both B and C have a tie with another node, A, of a strength greater than or equal to a 
given weight. We see that the stronger the tie-strength B and C have with A, the higher the chance for 
B and C to have a relation. 
 
Figure 8.  Clustering coefficient of a link between two nodes with a common neighbor with 
changes of tie-strength 
In addition, we also measure the tie-strength of B and C in the previous experiment and calculate the 
chance for the link between B and C to be a strong tie. See Figure 9. The result indicates that the 
higher the tie-strength B and C have with a common node, the more likely a strong tie-strength will 
exist between B and C. 
 
Figure 9.  Probability of discovering a strong tie with changes of tie-strength 
4.5 Relationship Symmetry 
Finally, we discuss the association between relationship symmetry and tie-strength. As mentioned 
earlier, a social network normally exhibits bi-directional relationships; that is, when A has a link 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0 50 100 150 200 250
cl
us
te
rin
g 
co
ef
fic
ie
nt
weight
0
10
20
30
40
50
60
70
80
90
0 50 100 150 200 250
st
ro
ng
 ti
es
 (%
)
weight
5.1 Discussions 
The structural properties of social networks, like degree, are often used as a measure of how well 
connected an actor is in the social network. For online social networks, such as blogs, the in-degree 
can be used as an indicator of a given blog’s popularity and prestige. The out-degree can indicate a 
user’s diversity of interest. Google’s PageRank (Page et al. 1998) included both in- and out-degree as 
measuring variables in a link analysis algorithm to "measure" a Web page’s relative importance 
within the set of hyperlinks.  
PageRank’s algorithm considers each link in a set of a network has equal weight, but in fact it is not 
true in both WWW and social networks. Some cheaters have found a way to increase the in- and out-
degree count by using link farms or by selling links to other Web sites to increase PageRank. Our 
findings suggest that a blog with a high in-degree weight does not necessarily indicate that it is highly 
involved in the network. Also, a blog with a low out-degree weight does not indicate that it is a “loner” 
in the network. We believe that including tie-strength in the analysis of a social network can improve 
the identification of popular blogs within the network. This can also encourage users to take the effort 
to interact with other users since their work will be noticed.  One of our future work will be focusing 
on this study. 
5.2 Conclusions 
We analyzed the network data collected from wretch.cc. Based on this dataset we presented a 
quantification method of tie-strength in online social networks, and the role tie-strength plays in 
defining characteristics of the blog network. The method to quantify a weight of tie has been proved 
valid and can be used as a tie-strength measurement between two users in this type of online social 
networks. Based on our results, we can safely conclude that the social network extracted from the 
online social network site can be viewed and studied as a traditional social network. 
Our attempt to understand the tie-strength in an online social network has opened up some topics for 
further discussion. For example, we only focused on data collected from the blog network, wretch.cc. 
This dataset may represent other blog networks in Taiwan; however, this dataset may not fully 
represent other online social networks like Facebook. The usage and functionality of Facebook differ 
from most blog networks. Therefore, analyzing different types of online social networks may lead to 
different conclusions. 
Acknowledgment 
 We would like to thank the anonymous reviewers for providing many usual comments on the 
manuscript. This research was supported in part by National Science Council, Taiwan, under Grants 
NSC 96-2628-E-002-026-MY3 and 99-2221-E-002-099-MY3. 
References 
Ahn, Y. Y., Han, S., Kwak, H., Moon, S. and Jeong, H. (2007). Analysis of Topological 
Characteristics of Huge Online Social Networking Services. In Proceedings of the 16th 
international conference on World Wide Web (WWW’07), p.835-844, Banff, Alberta, Canada. 
Barnes, J.A. (1954). Class and Committees in a Norwegian Island Parish, Human Relations, 7 (1), 39-
58 
Bornholdt, S. and Schuster, H.G. (2003). Handbook of Graphs and Networks: From the Genome to 
the Internet. John Wiley & Sons, Inc., New York, NY, USA.  
Brown, D.W. and Konrad, A.M. (2001). Granovetter was right: The importance of weak ties to a 
contemporary job search. Group and Organization Management, 26 (4), 434-462. 
Brown, J.J. and Reigen, P.H. (1987). Social ties and word-of mouth referral behaviour. Journal of 
Consumer Research, 14 (3), 350-362. 
Burt, R. (1995). Structural holes: The social structure of competition. Harvard University Press, 
Cambridge, Massachusetts, and London, England. 
Wellman, B. and Wortley S. (1990). Different strokes from different folks: community ties and social 
support. American Journal of Sociology. 96 (3), 558-588 
Wilson, T.D. (1998). Weak ties, strong ties: network principles in Mexican migration. Human 
Organization. 57 (4), 394-403. 
Zhou, Y. and Davis, J. (2007). Analysis of Weblog Link Structure - A Community Perspective. Web 
Information Systems and Technologies, 307-320. 
 5
other two keynotes. The second, entitled "Efficient broadcast in wireless sensor networks" is 
delivered by David Peleg from Weizmann Institute of Science. I personally knows David. We 
have served on some program committees before. He also works on quorum systems in 
distributed systems as I do, and has published several important papers in the area. David is 
more of a theoretical scientist. So, in contrast to the previous talk, his research is more of a 
theoretical work, and more close to distributed computing. The third keynote "The algorithmic 
Lens: How the computational perspective is transforming the sciences" is given by Christos 
Papadimitriou from UC Berkeley. He is a very famous theoretical computer scientist. He has 
published a number of widely-used textbooks in computational theory, including 
"Computational Complexity". His research is not directly related to sensor networks, but his 
talk gives us aa sense of the importance of computation in different sciences. Basically, the 
point of the talk is that computational research transforms the sciences (physical, mathematical, 
life or social) not just by empowering them analytically, but mainly by providing a novel and 
powerful perspective which often leads to unforeseen insights. 
My paper was presented in Session 7 on July 13th. The paper was a byproduct of this NSC 
project. As we have witnessed, sensors have begun to infiltrate people's everyday lives. They 
can provide information about a car's condition, can enable smart buildings, and are being used 
in various mobile applications, to name a few. Generally, sensors provide information about 
various aspects of the real world. Online social networks, on the other hand, can provide 
insights into the communication links and patterns between people. They have enabled novel 
developments in communications as well as transforming the Web from a technical 
infrastructure to a social platform. This has resulted a new term “social Web”. When social 
networks meet sensor networks, several interesting research topics and applications can be 
innovated, e.g., from sensors providing contextual information in context-aware and 
personalized social applications, to using social networks as "storage infrastructures" for sensor 
information (see http://www.w3.org/2008/09/msnws/papers/sensors.html).  
We started our research in the sensor network field by looking at the very fundamental 
problem: data and query dissemination problem in sensor network (much like the information 
dissemination and query forwarding problem in social networks.) We then came out with some 
novel and optimal solutions for the problem, which were presented in the paper. 
I also attended several other sessions. Overall, the quality of the papers are good and above 
average. Because DCOSS is a single-session conference, participants get more chance to 
interact with one another. 
三、考察參觀活動 
Before attending the conference, I paid a visit to the prestigious Cambridge University in 
UK. I was hosted by my former student Eric (Yu-En) Lue 
(http://www.cl.cam.ac.uk/~yel21/Welcome.html). Eric got his PhD degree from the university, 
and is working as a research associate working on US-UK International Technology Alliance 
and EU FP7 SocialNETs project (see http://www.social-nets.eu/) . His research interests are 
mathematical analysis and applications of algorithmic/system design for complex systems. He 
 7
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                                             
計畫編號 96-2628-E-002-026-MY3 
計畫名稱 社會網絡中資訊搜尋與擴散策略之研究 
出國人員姓名 
服務機關及職稱 莊裕澤, 國立台灣大學管理學院資訊管理學系教授 
會議時間地點 Busan, Korea 
會議名稱 Proceedings of the International Conference on Information Networking 2008 (ICOIN 2008) 
發表論文題目 P2PConf: A Medium-Size P2P Internet Conference with Effective Floor Control
 
一、參加會議經過 
ICOIN (International Conference on information Networking) was initiated under a joint 
workshop on Computer Communications in 1986. This year is the 22st edition, and is held in Paradise 
Hotel, Busan, Korea, from January 23rd to 25th, 2008. 
The conference focuses on computer communications and wireless networks, in the theoretical 
and practical aspects. Specific areas include wired/wireless network architecture, design, protocol, 
service, analysis, implementation, measurement and simulation. Social networking is also one of the 
emerging topics the conference wishes to target. This year, the program committee received 206 
submissions, among which, 97 papers were selected, with an accept rate about 47%. Accepted papers 
were published in the conference proceedings with an IEEE ISBN number and indexed in IEEE 
Xplorer. 
 
二、與會心得 
ICOIN is certainly not a first-tier conference, but because it has been held for many years, it has 
earned certain reputation. I had never submitted a paper to the conference before, but I am aware of its 
level. The conference was basically an area conference in the pacific region for computer 
communication and networking. However, I am a little bit disappointed about this year’s conference 
organization and program committee. The program committee has a majority of members from the 
organization country (Korea), and the result is that it may have accepted too many papers from the 
country.  I attended some of the sessions, and found that the presentations are sometimes weak. The 
quality of the accepted papers, in general, is also not high. Even in the conference banquet there are 
not too many attendances. There are also some no-show presentations. Overall, I consider this year’s 
ICOIN a conference of poor organization and program. It did not match the reputation of the 
conference it has established in the past years. 
 
 9
Transactions on Parallel and Distributed Systems, served as the program co-chairs for the 
ISPAN-2009 and as the vice-chair for 2 parallel processing conferences, and co-edited 
Large-Scale Parallel Data Mining. Dr. Ho has received multiple formal awards from IBM and 
has published 18 patents, over 30 journal papers, and over 50 conference papers in these areas. 
He received a B.S. degree in electrical engineering from National Taiwan University, Taiwan in 
1979 and a Ph.D. degree in computer science from Yale University in 1990. 
I also have some research overlap with Dr. Ho, particularly in parallel/distributed 
computing. In my recent papers on keyword search in peer-to-peer networks and social 
networks, the search model was based on his highly cited papers on hypercubes. I wish to 
establish more close relationship with him and seek for potential research collaboration in 
information search in social networks. 
二、 研究成果 
The most satisfactory outcome of this visit was a more deep cooperation with the two hosts. 
I have arranged a visiting research position in the School of Information at UC Berkeley, and at 
IBM Almaden Research Center in San Jose for the coming academic year. Both Prof. Chuang 
and Dr. Ho have promised me an office space (private office at Almaden) so that I can spend 
my sabbatical year there. The two institutes are very prestigious. They have the leading 
research environment and scientists in the world. I would be able to learn a lot by attending 
their seminars and discussions with the researchers there. A great opportunity! 
 
 
 
 
 
 
 
 
 
DCOSS08_notification.txt
unique features- mainly the geography and the knowledge about the geographic 
position. The way this is addressed is somewaht simplistic. For example, no 
competitive analysis is used. It is assumed (rather implicitly) that the 
distribution will not change very fast once the system changes the mode and the 
number of replicas. Multiple other simplifying assumptions are made. For 
example, the sensors are distributed uniformly, the events and the queries take 
place according to a uniform distribution, no obstacles exist, so if two ndes 
are within range of each other they are also within line of sight.
Nevertheless, this approach makes sense and seems to have a practical potential.
The analysis is not deep, but it is also supported by simulation.
Confidential review comments (for PC only) 
-------------------- review 2 --------------------
 
OVERALL RATING: 1 (weak accept) 
REVIEWER'S CONFIDENCE: 2 (medium)  
----------------------- REVIEW --------------------
Review comments (that will be sent to authors)
The paper presents an adaptive method for data-centric storage in sensor 
networks.  The basic idea is that queries and event data are routed to a 
rendezvous point which depends on the event type.  The main idea of the paper is
that the identity of the rendezvous point should depend on the relative 
frequency of queries and events. A protocol called Tug-of-War is presented in 
which if queries are very frequent then data is stored close to the querying 
nodes whereas if queries are very rare then data is stored next to the nodes 
generating the events. 
The paper presents a detailed analysis of the costs associated with each mode 
and with each level of resolution for storing data. This allows the algorithm to
determine which configuration to use in any situation. The Tug-of-War approach 
is then compared to a number of other storage methods that lie between External 
and Local storage. 
I enjoyed reading this paper. I believe that it presents comprehensive analysis 
of a very natural approach for storage in sensor networks. My only concern is 
that there are a number of other approaches that use both "pushing" and 
"pulling" of data in sensor networks.  Hence Tug-of-War might be considered to 
be "just one more" such approach. However, I think that on balance the paper 
does introduce some new ideas on how exactly to do this and so I believe that it
would be good to accept this paper if there is room. 
第 2 頁
DCOSS08_notification.txt
     routing cost in a hierarchical storage mechanism, is asymptotically not 
much better, which is evident from
     the graphs resulting from the experiments also. There is no strong reason 
to accept this paper. Also, when comparing 
     with the Comb-Needle approach, the analysis only considers one scenario 
which favors the  
     algorithm in this paper. It has been mentioned that the analysis for the 
other scenario is similar, 
     but the fact that the result in that case would go in favor of the 
Comb-Needle algorithm has not been mentioned.
IV. Technical strengths and weaknesses:
1) Section II: Network model and Definitions:
   a) Each event is characterized by, alongwith other parameters, the geographic
coordinates of where it occurs.
      It is not clear how the sensor nodes know the exact coordinates of the 
event? Even if nodes know their own 
      coordinates, that would not be same as the event coordinates.
   b) Can a more precise definition of event class be given, maybe alongwith 
some examples?
2) Section III: Tug-of-War
   C. Selection of Mirror Images
   1) In the last sentence, add 'for all r >= 2'.
   E. Routing Algorithms
   1) Can it be clearly stated that the combing algorithm improves over the 
hierarchical algorithm because it 
      operates only on a single level r (the optimal one, depending on whether 
it is write-once-query-all or
      write-all-query-once) of the hierarchy? 
   2) A significant improvement in the routing cost can occur only if the 
optimal level $r$ selected in the 
      combing algorithm is big enough, because the cost of routing from the 
source of the message to the nearest level-r 
      image is $\frac{\delta(s,h)}{2^r}$, whereas in the hirearchical algorithm,
the cost of routing from the source of 
      the message to the root image. 
   3) There is another part to the routing cost. In case of the hirearchical 
algorithm,
      it is for disseminating to all the other nodes, and the cost is 
${1.7}2^r\sqrt{n}- {1.7}2^r\sqrt{n}$. 
      In case of the combing algorithm, it is for disseminating to all the other
level-r nodes, and the 
      cost is $2^r\sqrt{n}- \frac{1}{2^r}\sqrt{n}$. Note that the combing 
algorithm asymptotically does not offer 
      much improvement over the hirearchical algorithm in this part. Figure 4 
confirms this fact.
      
   G. Query and Event Frequency Estimation
   1) Para 4, Line 3: Can a precise definition of view consistency be given?
   2) Para 4, Line 12: Do not use the term 'sampling interval'. There is no 
第 4 頁
Tug-of-War: An Adaptive and Cost-Optimal
Data Storage and Query Mechanism in Wireless
Sensor Networks
Yuh-Jzer Joung and Shih-Hsiang Huang
Dept. of Information Management, National Taiwan University, Taipei 10617, Taiwan
Abstract. We propose Tug-of-War (ToW) for data storage and query
mechanism in sensor networks. ToW is based on the concept of data-
centric storage where events and queries meet on some rendezvous
node so that queries for the events can be sent directly to the node
without being ﬂooded to the network. However, rather than ﬁxing the
rendezvous point, we dynamically replicate the point and ﬂoat them in
between query nodes and event sensor nodes according to the relative
frequencies of events and queries. By carefully calculating the optimal
setting, we are able to minimize the total communication costs while
adapting to the environment.
1 Introduction
The main role of sensor nodes in a wireless sensor network is to interact with
the physical environment to detect relevant event data, which are then to be
queried by interested clients. The problem of how to eﬃciently and eﬀectively
gather these data back to the clients for further processing then arises. There
are two canonical ways: External Storage and Local Storage [1]. In External
Storage, whenever sensor nodes detect events, the data are sent directly to an
external node, referred to as sink, where the data are stored and processed.
Obviously queries can be very eﬃcient as they need not be disseminated into
the network. However, much communication cost is wasted if the stored data are
less frequently queried.
In contrast, in the Local Storage mechanism event information is stored at
the detecting nodes. When the client needs the data, it sends query messages
to collect them. Compared to External Storage, data is transmitted only when
needed, thus avoiding unnecessary transmission. The performance of the sys-
tem then is primarily inﬂuenced by the way how queries are disseminated into
the network. Because nodes in a wireless sensor network are usually deployed
in a random manner and the client has no knowledge about where the events
might occur in the network, ﬂooding is perhaps the most simple and intu-
itive way to disseminate queries. Flooding, however, generates too much traﬃc,
and so some remedies have been proposed to reduce the costs, e.g., directed
diﬀusion [2], data aggregation [3,4,5], TTL-based expanding search [6], and
in-network processing [7].
S. Nikoletseas et al. (Eds.): DCOSS 2008, LNCS 5067, pp. 237–251, 2008.
c© Springer-Verlag Berlin Heidelberg 2008
Tug-of-War: An Adaptive and Cost-Optimal Data Storage 239
and c is the event class of e. The event e is detected by the set of nodes Ve ⊆ V ,
where s ∈ Ve iﬀ δ(e, s) ≤ d.
Queries of events are of the form: q = (s, c,Δ), where s is the querying node,
c is the target event class (type), and Δ is the time interval during which the
query is interested. Only events occurring in the interval will be collected. We
assume that queries can be disseminated by any node in the network, thereby
allowing us to model mobile information gathering. The results in the paper can
be easily extended to the case where queries can only originate from some ﬁxed
external sinks.
We also assume that events and queries are the main concerns of the system.
Each detected event is to be stored at some node which can be queried by others.
Therefore, the system cost is comprised of event storage and query dissemination
and reply. Because the energy consumption of radio transmission in sensor net-
works is typically much higher than that of storage and memory access, we count
only radio transmissions when measuring the system costs. Radio transmissions
will be measured in terms of the number of hops a message has traversed.
3 Tug-of-War
ToW is based on GHT [10], but improves it to support an adaptive mechanism
to minimize the communication cost. We begin by a brief introduction to GHT.
3.1 Geographic Hash Table (GHT)
The core step in GHT is the hashing of event types into geographic coordinates
to determine the rendezvous point for events and queries of a given type. Each
event type is associated with a key, and the storage and retrieval of events of
the type are performed according to the key. Because GHT stores all events
with the same key in the same node (called the home node of the events), if too
many events with the same key are detected, the key’s home node may become
a hotspot, both for communication and storage. To alleviate the node’s load,
GHT applies structured replication (SR) to distribute the events to other nodes.
To see the idea, let us call the point a key maps to the root point of the key. SR
divides the network’s geographical space into 2d ·2d = 4d subspaces with a given
hierarchy depth d, and assigns a mirror image of the root point in each subspace.
Fig. 1 shows an example of mirror images for d = 2 and root point at (5, 5). A
node that detects an event with the key in consideration can store the event at
the mirror closest to its location. This reduces the storage cost from O(
√
n) to
O(
√
n/2d), where n is the number of nodes in the network. However, a query to
events of the key should be routed throughout all mirrors. In SR, this is done
recursively: the query ﬁrst routes to the root point (node), then from the root
node to three level-1 mirror nodes. Each level-1 node in turn forwards the query
to the three level-2 mirrors associated with them, and so on until all mirrors are
reached. The total query cost thus increases from O(
√
n) to O(2d
√
n). That is,
SR reduces storage cost at the expense of queries. The hierarchy depth d in SR
Tug-of-War: An Adaptive and Cost-Optimal Data Storage 241
replication. Here we call it the system resolution. The coordinates of the home
node is obtained by hashing the name of c using a globally known hash function
h. Let (hx(c), hy(c)) denote the home node coordinates in binary representation.
Let m be the size of the binary strings used in the coordinate system. Then the
4r − 1 mirror images of the home node are at the coordinates (x, y) such that
x and hx(c) have identical suﬃx of m − r bits, and similarly for y and hy(c).
For a given r, we will refer to the home node of an event class and all its mirror
images as the level-r images of the class. Note that a level-(r − 1) image of c is
by deﬁnition also a level-r image of c.
3.4 Operating Modes
ToW operates in two basic modes: one allows a sensor node to store an event
to its nearest image, while the other allows a querying node to query only its
nearest image. In the former, queries must be disseminated to all images, as the
querying node does not know where an event might occur. Conversely, in the
latter events must be stored at all images if we assume that queries can originate
from anywhere in the network. We refer to the two modes as write-one-query-
all and write-all-query-one, respectively. For now, let us assume that both
querying nodes and event detecting nodes know which mode to operate. Later
in Section 3.6 we will discuss how the nodes know which mode to operate.
In each mode, we also need to determine a system resolution r to ﬁnd the
images of an event class so that queries and the target events will meet at
some image. The resolution is determined according to the relative frequencies
of events and queries so as to optimize the system cost. We will return to this
issue in Section 3.6. When the resolution r is determined, in write-one-query-all,
a node detecting an event simply stores the event data to the nearest level-r
image of the event class. A query of the event class will then be routed to all
level-r images of the class. On the other hand, in the write-all-query-one mode,
detected events need to be stored to all level-r images so that queries can be
routed to the images that are closest to the query nodes.
3.5 Routing Algorithms
In both the write-one-query-all and write-all-query-one modes we need to route
a message to a nearest image as well as to the set of all level-r images of an
event class. Like in GHT, the former can be done using the GPSR algorithm [14].
GHT also presents a “hierarchical” routing algorithm for the latter: ﬁrst routes
the message to the home node. The home node then forwards the message to
the three level-1 images. Each of the level-1 image in turn forwards the query
to the three level-2 images associated with them, and so on until all images
are reached. Fig. 2(a) illustrates the routing algorithm. Each edge represents a
message delivery path, with the delivery order labeled.
Rather than using the hierarchical routing algorithm, here we present another
algorithm, referred to as combing, that yields lower cost than the hierarchical
algorithm. The combing algorithm works by ﬁrst letting the originating node of a
Tug-of-War: An Adaptive and Cost-Optimal Data Storage 243
part, observe that the distance d from the message source to the nearest image
is d = δ(s, h) when r = 0 (i.e., the root image h is the nearest image), and is
halved for every increment of r. So d = δ(s,h)2r . So the total routing cost of the
combing algorithm is
CRcombing  δ(s, h)2r + (2
r + 1)(1 − 1
2r
)
√
n
=
δ(s, h)
2r
+ (2r − 1
2r
)
√
n (2)
3.6 Optimizing the System Mode and Resolution
Nodes in ToW need to know which mode to operate, and in the selected mode,
which resolution to use to minimize the total communication cost. To see how
this can be determined, assume that the system consists of n sensor nodes uni-
formly deployed in a square region, and fe and fq respectively denote the event
frequency and query frequency for some event class c in consideration. Every
event of the class has the same inﬂuence range, and will be detected by k nodes.
We use δ
√
n to denote the average distance between a querying node and the
home node of c.1 The estimation of δ depends on the query model and the selec-
tion of a home node. For example, if events and queries can originate randomly
from anywhere in the square, and the home node of c is also chosen randomly
from the network, then δ  0.52. This is because two random points have an
average distance of 115 [
√
2 + 2 + 5 ln(1 +
√
2)]  0.52 in a unit square.2 On the
other hand, if the home node is ﬁxed at the origin, then δ  0.76.3
Assume that the GPSR algorithm is used to route a message to the nearest
level-r image, while the combing routing algorithm is used for routing a message
to all level-r images. Let us ﬁrst calculate the total cost in the write-one-query-all
mode with a given resolution r. Observe that storing an event to its home node
with resolution r = 0 costs δ
√
n. An increment of r will shorten the distance by
half, as the event needs only be stored to the nearest level-r image. So, the event
storage cost Ce per unit interval is
Ce  fe · k · δ
√
n
2r
By (2), the cost Cq in delivering query messages per unit interval is
Cq  fq
[
δ
√
n
2r
+ (2r − 1
2r
)
√
n
]
1 More precisely, this distance should be δ(
√
n − 1), as the side of the network square
has length
√
n−1 when measured by hop count. To avoid complicating the equations
too much, in this section we use
√
n to approximate the side length. Later in Section 4
the more accurate length will be used in order to obtain a precise bound.
2 See, e.g., http://mathworld.wolfram.com/SquareLinePicking.html
3 http://mathworld.wolfram.com/SquarePointPicking.html
Tug-of-War: An Adaptive and Cost-Optimal Data Storage 245
So the total cost per unit interval is
CWallQ1  C′e + 2C′q
= fe · k
√
n
(
2r − 1 − δ
2r
)
+ 2fq · δ
√
n
2r
(7)
CWallQ1 is minimized by the following value of r:
ΥWallQ1(fe, fq) 
1
2
log(
2δ
k
· fq
fe
− (1 − δ)) (8)
By using an optimal r, the cost of ToW in the mode per event is
CWallQ1  2
√
2kδ
√
fq
fe
√
n (9)
So the cost of ToW in the write-all-query-one mode relative to GHT is as follows:
CWallQ1
CGHT

2
√
2kδ
√
fq
fe
√
n
kδ
√
n + 2δ fqfe
√
n
=
2
√
2k fqfe
(k + 2 fqfe )
√
δ
(10)
Again, we see that the improvement increases as fq/fe increases, regardless of
the network size. Also, if fq/fe is large relatively to k, then the cost ratio of
ToW versus GHT is approximately in proportion to
√
fe/fq. So the larger the
fq/fe ratio, the larger the improvement of ToW over GHT. Also note that (10)
can be applied up to the case when the fq/fe ratio in (8) yields the maximal
resolution; and in that case, ToW reduces to External Storage.
Equations (4) and (8) determine an optimal resolution for each mode. To
determine which mode to operate, we observe that resolution must be non-
negative. For a given k, fe, and fq, if a nonzero optimal r exists in one mode,
then no nonzero optimal r can exist in the other mode. Moreover, the two modes
converge at r = 0 (and at which CW1Qall = CWallQ1). So, to determine the best
mode, it suﬃces to see in which mode a nonzero optimal r exists for a given
k, fe, and fq. Otherwise, r = 0 is the best choice for both modes, making it no
diﬀerence in selecting which mode to use. For example, by (4) and (8) we see
that when fe ≥ fq, write-one-query-all is the best mode. Even if fe < fq, the
mode may still be preferred if k is large.
3.7 Query and Event Frequency Estimation
Up to now we have assumed that every node in ToW has the knowledge of the
event-query ratio so that they can determine which query and storage mode to
operate, and in which resolution. For ToW to be adaptive, we let each node
estimate the frequencies based on the number of events and queries it has en-
countered or learned from other nodes.
To estimate the frequencies, every level-r image of an event class c maintains
two counts, the number of events ce and the number of queries cq addressed to
Tug-of-War: An Adaptive and Cost-Optimal Data Storage 247
4 Related Work
Recently there has been much work to study query strategies in between Local
Storage and External Storage. Intuitively, in Local Storage a query source needs
to “pull” relevant results out of the network, while in External Storage nodes
“push” results out to the query source. A hybrid approach is to use both “push”
and “pull” strategies simultaneously. For example, rumor routing [15] propagates
queries and events via random walk with some TTL to allow them to meet with
high probability. An in-depth analysis in [16] shows that a combined use of
push-pull strategies in random walk has the best query success rate over time.
Propagating queries and events along a tree of sensor nodes with root being the
query source is analyzed in [17]. The result also shows that a hybrid push-pull
query processing strategy is often preferred to pure approaches. Push-pull-based
directed diﬀusion routing protocols are analyzed in [18] to determine how well
they match diﬀerent application scenarios.
The work by Liu, et al. [19] is most close to our work. They study push-pull
event dissemination and query strategy in a grid network, and propose a deter-
ministic mechanism, referred to as Comb-Needle (CN), to guarantee query
results. Like ToW, CN also considers an optimal setting to minimize communi-
cation cost, and adapts to diﬀerent frequencies of queries and events. In the rest
of the section we give a thorough comparison of CN and ToW to see how the two
mechanisms diﬀer when both claim an optimal setting. Note that ToW is based
on DCS, but adds on a mechanism to dynamically adjust the rendezvous point.
In fact, we have just learned that a comparative study of DCS with CN has
recently been studied in [20]. Our analysis here complements the studies, hop-
ing to provide more insight into hybrid push-pull query strategies in two query
processing paradigms in sensor networks—structured (of DCS) vs. unstructured
(of non-DCS) [20].
As CN is presented mainly in a grid environment, here we assume that the
system layout is a grid. Furthermore, we assume events dominate queries; the
query-dominated case can be analyzed in a similar way as we did below. CN
can be illustrated by Fig. 3. When a sensor x detects an event, it disseminates
the information, say vertically, to a path of length l (called the needle length).
Then when some node y wishes to query the event, it can issue several horizontal
search paths, each of which s distance apart, to the network. So if l+1 ≥ s, then
one of the query paths must intersect with the event dissemination path, thereby
to guarantee resolving the query. So when the event dissemination path is long,
fewer number of query search paths need to be issued. The dissemination path
corresponds to event cost, while the search paths correspond to query cost. So
event cost can be reduced at the expense of query, and vice versa. Therefore, we
can minimize the total communication cost by dynamically adjusting the event
dissemination path length according to the relative frequencies of events and
queries.
Although both ToW and CN use a dynamic strategy for information dissem-
ination and gathering, there are some subtle diﬀerences. First, ToW is based on
Data-Centric Storage, where events and queries meet at some globally known
Tug-of-War: An Adaptive and Cost-Optimal Data Storage 249
respectively. Rather than directly using (3), for the purpose of estimating the
maximum value of CW1Qall shortly, below we use a more accurate estimate of C
′
e
and C′q. For C′e, the cost (per query) is
C′e 
fe
fq
· δeh · (
√
n
2r
− 1)
where δeh denotes the average distance between an event detecting node and
the home node of the event class in a unit grid. Note that here we use
√
n
2r − 1
to represent the hop-count length of one side of a grid of
√
n
2r ×
√
n
2r nodes. In
contrast, in Section 3.6, we simply use
√
n
2r . Similarly,
C′q  δqh(
√
n
2r
− 1) + (2r − 1
2r
)
√
n
where δqh denotes the average distance between a query node and the home node
of the event class in a unit grid.
To estimate δeh and δqh, we ﬁrst note that by virtue of hash function we
assume that the home node can be an arbitrarily node in the network. As events
can arise from anywhere in the network, δeh represents the average distance of
two random points in grid. Since routing in grid uses Manhattan distance, by
the fact that the average distance between two random points in a unit length
is 1/3, we have δeh  2/3. For δqh, since here we assume that the query source
is ﬁxed at the origin, we have δqh  1.
So the total communication cost per query in ToW is
CW1Qall = C
′
e + 2C
′
q 
2
3
fe
fq
(
√
n
2r
− 1) + 2(2r√n − 1) (12)
By using an optimal r = log
( 1
3
fe
fq
) 1
2 , we have
CW1Qall 
2
3
√
n
√
3fe
fq
+ 2
√
n
√
fe
3fq
− 2
3
fe
fq
(13)
By comparing (11) and (13), we see that ToW yields lower cost than CN,
as the former has the cost in the order of O(
√
n
√
fe
fq
), while the latter is of
O(
√
n fefq ).
In the above we considered CN where every event yields one reply path, and
so the total query reply cost is Cqr = (
√
n − 1)fefq . One can see that when
fe/fq is large, it may be worth to combine reply paths by letting the end node
in each horizontal query path issue a return message along the query path to
gather the results hop by hop. In this way, the communication cost of CN can be
estimated by
C′CN = Ce + 2Cqd  4
√
n + 3
√
n
√
fe
fq
(14)
Tug-of-War: An Adaptive and Cost-Optimal Data Storage 251
References
1. Shenker, S., Ratnasamy, S., Karp, B., Govindan, R., Estrin, D.: Data-centric stor-
age in sensornets. SIGCOMM Computer Communication Review 33(1), 137–142
(2003)
2. Intanagonwiwat, C., Govindan, R., Estrin, D., Heidemann, J., Silva, F.: Directed
diﬀusion for wireless sensor networking. IEEE/ACM Transactions on Network-
ing 11(1), 2–16 (2003)
3. Madden, S., Szewczyk, R., Franklin, M.J., Culler, D.: Supporting aggregate queries
over ad-hoc wireless sensor networks. In: WMCSA 2002, pp. 49–58 (2002)
4. Madden, S., Franklin, M.J., Hellerstein, J.M., Hong, W.: TAG: a tiny aggregation
service for ad-hoc sensor networks. SIGOPS Operating Systems Review 36(SI),
131–146 (2002)
5. Shrivastava, N., Buragohain, C., Agrawal, D., Suri, S.: Medians and beyond: new
aggregation techniques for sensor networks. In: SenSys 2004, pp. 239–249 (2004)
6. Chang, N., Liu, M.: Revisiting the TTL-based controlled ﬂooding search: optimal-
ity and randomization. In: MobiCom 2004, pp. 85–99 (2004)
7. Rabbat, M., Nowak, R.: Distributed optimization in sensor networks. In: IPSN
2004, pp. 20–27 (2004)
8. Ratnasamy, S., Francis, P., Handley, M., Karp, R., Shenker, S.: A scalable content-
addressable network. In: SIGCOMM, pp. 161–172 (2001)
9. Stoica, I., Morris, R., Karger, D.R., Kaashoek, M.F., Balakrishnan, H.: Chord: A
scalable peer-to-peer lookup service for Internet applications. In: SIGCOMM 2001,
pp. 149–160 (2001)
10. Ratnasamy, S., Karp, B., Yin, L., Yu, F., Estrin, D., Govindan, R., Shenker, S.:
GHT: a geographic hash table for data-centric storage. In: WSNA 2002, pp. 78–87
(2002)
11. Newsome, J., Song, D.: GEM: graph embedding for routing and data-centric stor-
age in sensor networks without geographic information. In: SenSys 2003, pp. 76–88
(2003)
12. Greenstein, B., Estrin, D., Govindan, R., Ratnasamy, S., Shenker, S.: DIFS: a
distributed index for features in sensor networks. In: SNPA 2003, pp. 163–173
(2003)
13. Ghose, A., Grossklags, J., Chuang, J.: Resilient Data-Centric Storage in Wireless
Ad-Hoc Sensor Networks. In: Chen, M.-S., Chrysanthis, P.K., Sloman, M., Za-
slavsky, A. (eds.) MDM 2003. LNCS, vol. 2574, pp. 45–62. Springer, Heidelberg
(2003)
14. Karp, B., Kung, H.T.: GPSR: greedy perimeter stateless routing for wireless net-
works. In: MobiCom 2000, pp. 243–254 (2000)
15. Braginsky, D., Estrin, D.: Rumor routing algorithm for sensor networks. In: WSNA
2002, pp. 22–31 (2002)
16. Shakkottai, S.: Asymptotics of query strategies over a sensor network. In: INFO-
COM 2004, pp. 548–557 (2004)
17. Trigoni, N., Yao, Y., Demers, A.J., Gehrke, J., Rajaraman, R.: Hybrid push-pull
query processing for sensor networks. GI Jahrestagung (2), 370–374 (2004)
18. Krishnamachari, B., Heidemann, J.: Application-speciﬁc modelling of information
routing in sensor networks. In: MWN 2004, pp. 717–722 (2004)
19. Liu, X., Huang, Q., Zhang, Y.: Combs, needles, haystacks: balancing push and pull
for discovery in large-scale sensor networks. In: SenSys 2004, pp. 122–133 (2004)
20. Kapadia, S., Krishnamachari, B.: Comparative analysis of push-pull query strate-
gies for wireless sensor networks. TR CENG-2005-16, USC (2005)
ICOIN 2008-review.txt
> *** Presentation 2: How proper is the organization and description 
> method of this paper?
Average (3)
> *** Comments: Please provide some comments and/or revision requests.
The paper needs to include numerical results.
======= TPC Review 2 =======
Regards,
Kwangsue Chung, TPC Chair
第 2 頁
Unlike previous Internet conferencing systems, our target
is a medium-size conference that involves up to dozens of
participants. We believe that conferences of this size are
appropriate and more practical than those that can accom-
modate more participants. Besides, peers in a P2P network
are not as powerful and stable as dedicated servers. Without a
complicated technology to aggregate peers, establishing a large
conference in such a network makes the conference fragile and
the voice quality low. Moreover, because not just a few people
are involved in a conference, our system must incorporate
some floor control mechanism to avoid too many users from
speaking simultaneously to degrade the audio quality.
Several floor control mechanisms have been proposed for
conferencing, including the use of a centralized “chair” to
control the floor [9], by voice loudness to determine whose
audio packets can dominate the bandwidth [5], by elec-
tion [10], and by some simple policies such as First-Come-
First-Served, Shortest-Task-First, or Least-Recently-Served to
prioritize floor requests [11]. In this paper, we add one more
mechanism to the literature by taking conferee’s role into
account. Intuitively, depending on a conference’s purpose, the
participants in the conference have different roles, and their
roles should reflect their priority in competing for the floor.
For example, in a lecture conference, the lecturer should have
a higher priority than the audiences in obtaining the floor,
while in a chat room conference every participant bears the
same priority. In addition, since floor is a resource, every
contestant acquiring the floor must effectively use it, or else
he should yield it to another contestant to increase conference
interaction. Hence, we also take floor utilization into account
in our scheduling policy, along with the length of the requested
floor.
The rest of the paper is organized as follows. Section II
presents our system; Section III presents the floor control
mechanism; Section IV presents the implementation; and
finally Section V concludes and highlights some directions
for future work.
II. SYSTEM DESIGN
As shown in Fig. 2, our Internet conference system is
composed of two parts: a P2P overlay network and, on top
of which, a virtual conference environment where various
conferences can be established independently. We begin by
describing the P2P overlay network.
A. The P2P Overlay Network
The main purposes of the P2P overlay network are (1) for
users to find and invite others to establish an Internet confer-
ence, and (2) for selecting some relatively powerful peers to
handle a conference. We choose a Gnutella-like unstructured
network to build the P2P overlay for its ease of maintenance
and for being practically available. In addition, like KaZaa,
we distinguish two kinds of nodes: ordinary nodes (ONs) and
super nodes (SNs). SNs are just more powerful ONs whose
primary tasks are to act as a centralized server to a group
of ordinary nodes to maintain their information, such as user
SuperNode
OrdinaryNode
Login/Conference
RegistrationServer
P2POverlay
Network
Conferee
Conference
Architecture
VirtualConference
Environment
Fig. 2. System Architecture
BootStrap
SuperNode
ON
ON
ON
ON
ON
SN
SN
ON
ON
ON
ONON
ON
ON
ON
ON
ON
ON
ON
ON
ON
ON
SN
ON
ON
ON
SN
SN SN
SN
BootStrap
SuperNode
Login and Conference
Registration Server
Fig. 3. The P2P overlay.
name and IP address. In particular, SNs are also responsible for
storing the metadata of a conference created by their groups.
The P2P overlay is shown in Fig. 3. We observe that there
are also some bootstrap SNs for new nodes to connect to the
network, and a Login and Conference Registration Server for
storing user names and passwords for authentication.
An important step to construct the P2P overlay is to se-
lect super nodes. Existing systems typically rely on manual
selection, e.g., by asking participating peers to explicitly
state their hardware capability so as to determine whether
they are qualified to be super nodes. Here we refer to the
construction in [13] that can automatically elect super nodes
from ordinary nodes, and organize the super nodes into a
secondary overlay in a purely distributed style. Although the
work in [13] allows elected super nodes to form a more
complex structured overlay, here we need only the secondary
overlay to be unstructured.
Since the SNs themselves form an unstructured overlay,
like Gnutella, each SN needs to maintain a neighbor table
recording some other SNs it is aware of, so as to forward
queries in the SN overlay.
As mentioned above, the P2P overlay serves as an in-
frastructure for users to find each other and to establish a
conference. There is a rich literature on search in unstructured
P2P networks, and so we omit details of this in our system.
TABLE I
CONFERENCE MODES AND ROLES
Conference Mode Conference Roles
Lecture one speaker and a number of audiences
Discussion some speakers and some audiences
Chatroom a number of speakers
chairman (or the creator) should have full control to the floor,
we let the tokens be held by the chairman initially, and floor
requests must go to the chairman. A speaker returns his token
to the chairman after finishing his talk.
B. Scheduling Policy
The next question is: how should floor requests be granted?
A simple policy is First-Come-First-Serve. However, observe
that depending on its purpose, a conference has different roles,
and different roles should have different priority in obtaining
the floor. For example, in a lecture conference, there are
typically one speaker and a number of audiences. Clearly, the
speaker should have higher priority to obtain the floor than the
audiences. In contrast, in a chatroom every participant should
have the same priority to talk.
To reflect different purposes of conferences, we define three
conference modes for three different purposes of conferences,
Lecture, Discussion, and Chatroom. The conferee roles in
each mode are shown in Table I. The lecture mode has one
speaker and a number of audiences. The speaker typically will
make a long presentation to the audiences, which may raise
questions from time to time. The discussion mode resembles
a panel discussion where there are several speakers that may
address their opinions to the audiences. The chatroom mode
allows every conferee to speak with the same priority, as if
they are chatting to one another. If needed, more conference
modes may be added. Note that the role of a participant in
a conference is determined when the participant joins the
conference.
In addition to user roles, to improve the degree of interaction
and to make a meeting more efficient, speakers should try
to make the best use of their floor time. However, without
a sophisticated speech recognition system, it is very difficult
to evaluate a user’s contribution based on his speech content
in a conference. Nevertheless, it is possible to evaluate if a
speaker has properly used his floor time by examining his
audio packets. Thus we evaluate how a user utilizes his floor
time by the ratio, called volubility, of the time he has spoken
versus the floor time he has held. For example, if a user
has spoken only four minutes in a five-minute interval during
which he has occupied the floor, then the volubility is 0.8.
Taking volubility into account encourages users to release the
floor if they have nothing to say. Volubility can be calculated
by the number of active audio samples versus the total number
of audio samples produced in a speech. It can be refreshed for
each floor, or after a number of floors a user has acquired.
Finally, short floor time requests should be favored over
long floor time requests to reduce the overall waiting time.
Based on the above criteria, we evaluate the priority of a
floor request from three perspectives: the role of the requester
in a conference, the requester’s volubility, and the length of
the requested floor time. The three perspectives are evaluated
independently using their own scoring systems. The final
priority is then obtained by giving different weight to each
score, and then summing up the scores. There are certainly
numerous ways to score a request for each perspective. Below
we present one possible approach.
Let SR, SV , and SL denote the scores from the perspectives
of role, volubility, and floor length, respectively. To evaluate
a role’s score SR, we simply use 1/N to represent the score,
where N is the number of participants to assume the role.
For example, if there are 3 speakers and 20 audiences in a
discussion conference, then each speaker scores 1/3 and each
audience scores 1/20. For volubility SV , a requester’s score
is the volubility of his previous possession of the floor. The
initial value is 1. For floor length SL, the score is 1/T , where
T is the length of the floor (with respect to some unit time).
Given that the three scores SR, SV , and SL are weighted
by w1, w2, and w3 respectively, the priority of a request is
calculated as follows:
P = w1 × SR + w2 × SV + w3 × SL
Finally, requests are entered in a priority queue maintained
by the conference creator. Once a floor is released, it will
be assigned to the one with the highest priority. To avoid
starvation, we allow each request to be cut in by a higher
priority request for only a fixed number of times so that every
request will eventually be granted.
IV. SYSTEM IMPLEMENTATION
We implement our system in Java. The system consists of
mainly two modules: Floor Control and VoIP Transport. The
Floor Control has been described in the previous section. The
VoIP Transport handles communication within a conference.
We use the G.711 pulse-code modulation (PCM) as our voice
codec. G.711 is an ITU-T standard for audio companding,
and is primarily used in telephony system. We use 8 bits per
sample, with a sample rate 8000 per second, yielding 64Kb/s
bit stream for the raw data. As audio data are relatively large,
we also compress the data before transmission to gain better
voice quality. For this, we use Speex4, an open source and
patent-free audio compression format designed primarily for
speech. We use RTP (Real-time Transport Protocol) for real-
time transmission between two endpoints. The header of RTP
packets also specifies the audio encoding scheme so that the
recipients can know how to decode the packets.
Fig. 5 shows the user interface in our system when a
conference is in progress. The conferee list is shown on the
right frame, while the users that currently hold the floors
are given on the left. The users who are waiting for the
floors are highlighted in the conferee list, and their priority
in the queue are also indicated in the parentheses after their
4http://www.speex.com
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/06
國科會補助計畫
計畫名稱: 社會網絡中資訊搜尋與擴散策略之研究
計畫主持人: 莊裕澤
計畫編號: 96-2628-E-002-026-MY3 學門領域: 平行與分散處理
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
Through this project's sponsor, I also established some connections with 
UC Berkeley and IBM Almaden Research Center. Both of them are very 
prestigious research institutes. Hopefully, more concrete cooperations 
can be established in the future. 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
