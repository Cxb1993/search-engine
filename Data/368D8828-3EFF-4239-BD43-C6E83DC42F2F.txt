 1
具異質性處理硬體的可規劃系統之架構、程式語言及編譯器設計 
The hardware architecture, programming language and compiler for the 
reconfigurable computing system with heterogeneous processing unit 
計畫編號：NSC 94-2215-E-006-054 
執行期限：94 年 8 月 1 日至 95 年 7 月 31 日 
主持人：賴源泰 國立成功大學電機工程學系 
一、中文摘要 
動態可重組的現場可規劃邏輯陣列
(DRFPGAs)進化的速度很快，而且越來越
受到歡迎，因為它提供了一種高效能且具
有彈性的超大型積體電路(VLSI)設計技
術。而在這些動態可重組的現場可規劃邏
輯陣列中，最廣為流傳的架構就是 Xilinx
的 分 時 多 工 現 場 可 規 劃 邏 輯 陣 列
(TMFPGA)。這個架構有一種潛在的能力
可以透過分時共用邏輯的方式來提升邏
輯的使用率，而且在可重組計算(RC)這個
領域中，它已經成為了一個很活躍的研
究。 
在動態可重組化現場可規劃邏輯陣
列上執行電路切割的問題和一般傳統的
電路切割問題有所不同，是因為在動態可
重組現場可規劃邏輯陣列上執行電路切
割，會有優先權先後順序的限制，而在傳
統的電路切割則不需要考慮這樣的問題。 
在本研究中，我們著重在探討切割動
態可重組化現場可規劃邏輯陣列時，如何
降低每階段之間的通訊成本。我們使用一
個兩階段的演算法。在第一階段中，利用
儘早排程以及儘晚排程來將電路做初始
化的切割。再來，我們用一個我們所提出
的改良後的列舉式排序法來符合優先權
先後順序的限制。在第二階段中，我們使
用複製節點的演算法，來更有效的降低每
階段間的通訊成本。實驗的結果證實了我
們所使用的演算法對大部分的測試電路
相當有效的。 
關鍵詞: 可規劃計算機，分割。 
Abstract 
Dynamically Reconfigurable FPGAs 
(DRFPGAs) are evolving rapidly, and they 
are more and more popular, because they 
offer flexibility and high performance for 
the VLSI design technology. In these 
DRFPGAs, the most popular architecture is 
the Xilinx Time-Multiplexed FPGA 
(TMFPGA). This architecture has a 
potential to improve logic utilization by 
time-sharing logic dramatically, and have 
become an popular research for 
 3
 Design 
Configurations 
 Configure 
Logic 
Execute
 Design 
Configurations 
 Configure 
Logic 
Execute
(a)
(b)
圖 1. (a)靜態可重組 (b)動態可重組 
使用可重組硬體使得主機與有彈性
的硬體資源連接成為可能，如此可依據程
式執行需求調整硬體資源，對於程式的更
新維護也有了更好的支援。而且，動態可
重組的能力利用分時來執行程式，這可以
顯著降低所需的硬體面積。 由於動態可
重組的種種優點， 因此，動態重組計算
是我們的研究的焦點。。 
(A) 動態可規劃 FPGA 模型 (Dynamically 
Reconfigurable FPGAs, DRFPGAs) 
目前， 在動態可規劃計算的領域， 
以動態可規劃 FPGA (DRFPGA)發展最為
迅速， 因為他們能透過分時操作邏輯動
態提升邏輯使用率。  DRFPGAs 透過
SRAM 位元來控制邏輯區塊和電路連接
線。每一個在晶片上的組態稱為 context，
並且一個 device 為一個以上的 context 的
組合。 在 DRFPGA 上，邏輯和電路連接
線是分時存在的，並且隨時間可能有所不
同，因此新步驟需要被加入在傳統的
FPGA 設計流程。我們必需要將原始電路
分割成一個以上的子電路，每個子電路再
轉換成設定組態而分時載入 DRFPGA。 
分時 FPGA(Time-Sharing FPGA)的
模 型 如 圖 2 所 示 。 ， 組 態 記 憶 體
(configuration memory)決定子電路的形
式。組態邏輯區塊 (configuration logic 
block, CLB)作為最小的規劃單元。我們必
須採用虛擬硬體(virtual hardware) 的方
法，過大的電路就要依時序進行切割。這
種觀念類似於虛擬記憶體的觀念，
Dynamic Reconfiguration 的能力提供不同
工作的分時多工 (time-sharing) 以達成 
Virtualization，這種方式能以有限硬體來
Dynamic Reconfiguration 是 加 入 多 組
Configuration RAM sets 如圖 2 所示，這些
RAM 儲存了函式及繞線等規劃資訊
(configuration data)。它需要時序安排器
(scheduler)安排各個分時區塊 (temporal 
partition)的規畫、執行，及彼此間的通訊。
應用分時切割的技術，我們所設計的電路
就不會受限於硬體單元的大小。 
FPGA architectureConfigurable 
Logic block 
(CLB)
Context
 
圖 2. TMFPGA 模型 
(B) 組態邏輯區塊 (Configuration Logic 
Block, CLB)架構  
從 FPGA 上 SRAM 重新規劃組態所
需花費的時間，主要是花費在重新配置邏
輯區塊和電路連接線，大概需要奈秒(ns)
等級，比起利用晶片外記憶體的毫秒等級
可說迅速多了。每個 CLB 包括了微記憶
 5
 
 
 
 
圖 5. 通訊成本的例子 
 
 
 
 
圖 6. 面積成本的例子 
三、 研究與討論 
當大電路被分割成許多小電路時，各
式各樣的成本可以被發現。例如：面積成
本，延遲成本，以及最後一項通訊成本。
在這些成本當中，我們將焦點放在通訊成
本。我們已觀察到對於安排一個設計載入
動態可規劃計算機中，通訊成本通常是主
要的瓶頸，而在分割的處理過程中，減低
通訊成本就成了主要的目標。 
(A) 電路的圖形化模型 
在這個章節裡，我們將介紹如何將電
路中的組合電路閘轉換成為我們的圖形
化模型。 每個組合及循序邏輯閘都被轉
換成圖形中的一個節點，其中組合邏輯為
有色節點而循序邏輯為無色節點，圖 7 為
一個轉換的例子。 
 
 
 
 
 
 
 
 
 
 
 
圖 7. 由電路轉換成圖形化模型 
　 　(B) 分割演算法 
　 　 　 經過上面圖形化的步驟之後，
我們的問題成為下面的形式: 
輸入: 給定一個圖形 G=(V, E) 
優先權限制: 1. 輸出組合邏輯閘必須置放
在輸入邏輯閘之後或相
同的 stage 
           2. 輸入的循序邏輯閘必須置
放在輸出邏輯閘之前或
相同的 stage 
輸出: 輸出一個有效的切割並使得通訊
成本為最小 
我們的分割演算法分為兩個 phase：
labeling phase 及 CM minimization phase。
