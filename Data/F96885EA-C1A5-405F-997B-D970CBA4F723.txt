 2 
摘要 
近幾年隨著電腦在計算能力與圖形處理上的進步，拓樸最佳化的問題開始引起學界與業
界的注意，然而文獻上的研究多集中在單一材料之結構拓樸最佳化。事實上，多重材料之複
合結構在應用方面具有眾多的潛在用途，故對應的拓樸最佳化設計應不容忽視。本研究提出
交換式結構最佳化演進法來探討雙重（或多重）材料不含孔隙之結構拓樸最佳化設計，並以
承載效率的觀念探討含孔隙拓樸最佳化問題。此外，本研究也結合有限元素商業軟體與最佳
化演進程式，利用物件導向與系統整合的觀念開發相對應之視窗化介面軟體，將結構演進的
歷程與最佳化拓樸結構做即時動態呈現，供使用者觀察比較。 
 
關鍵詞：拓樸最佳化、交換式結構最佳演進、多重材料、承載效率、物件導向、系統整合 
 
Abstract 
The topic of structural topology optimization has generated considerable interests recently.  
It has been widely applied to many applications, thanks to the ever increase of computing power 
and rapid improvement of interactive computer graphics.  However, most of the studies so far 
only focus on structural topology optimization with a single material.  In practice, composite 
structures with multiple materials have many potential applications.  In this study, a switching 
evolutionary structural optimization method is proposed to deal with topology optimization with 
multiple materials.  In particular, the optimal topology of multiple materials with voids is 
discussed through the concept of bearing efficiency.  We also combine the switching evolutionary 
structural optimization method, finite element analysis, and computer graphics techniques to 
develop a windows-based software in .NET for structural topology optimization design.  This 
software will provide an interactive environment for users to monitor the evolutionary process and 
optimal topology of structures. 
 
Keywords: multiple materials, topology optimization, evolutionary structural optimization method, 
finite element analysis, computer graphic 
 4 
導自行開發程式並與有限元素商業套裝軟體相整合，開發相對應之視窗化介面程式，將結構
演進的歷程與最佳化拓樸結構圖形做即時動態呈現，供使用者觀察比較。 
 
文獻探討 
文獻上已有不少學者提出各種方法來求解連體結構（continuum structures）的拓樸最佳
化問題，其中較著名的包括均質法（homogenization method，Bendsøe and Kikuchi 1988）、固
體等向性懲罰函數方法(solid isotropic material with penalization method，Bendsøe 1989；
Mlejnek 1992)以及結構演進法(structural evolutionary method，Baumgartner et al. 1992；Xie and 
Steven 1993)。這些方法對於連體結構的拓樸最佳化一般是先將初始設計領域離散化
（discretization），其次利用有限元素法進行結構分析，再將有限元素法所得的結果透過各
種最佳化理論來修正結構物的拓樸形狀，達到最佳化的目標。 
然而上述方法大都集中在研究單一材料組成之結構拓樸最佳化，對於雙重（或多重）材
料組合而成的複合結構卻只有少數幾篇論文探討。舉例而言，Thomsen（1992）以及 Fujii et 
al.（2001）考慮兩種不同勁度等向性材料組成之結構拓樸最佳化，將原本僅用於單一材料拓
樸最佳化之均質法加以擴充。該法首先利用有限元素概念將結構予以離散化，而結構中每一
元素視為由不同的週期性的單位孔隙晶胞（porous cell，參見圖 2）所構成，圖 2 中黑色實
心部分為第一種材料；黑色網格部分為第二種材料；白色部分為孔隙處（不填充任何材料）。
以各晶胞所含的孔隙（即圖 2 中的δ1、δ2 與γ 為設計變數）大小為設計變數，孔隙的大小與
分佈會影響元素的彈性模數（elastic moduli）矩陣 Eij。其次利用最佳化方法來重新安排這些
孔隙介質。結構中受力較小處的孔隙較大；反之受力較大處的孔隙較小。在最佳化的過程中
隨著孔隙的逐漸轉移，最後會產生類似灰階(gray-scale)的拓樸最佳化結構。 
 
11
 
12
 
 
(a)兩種材料之模型 (b)兩種材料與孔洞之模型 (c)拓樸最佳化結構 
圖 2 複合材料之單位孔隙元素模型 
 
Sigmund and Torquato（1997）以及 Sigmund（2001）則是利用固體等向性懲罰函數方法
探討雙重與三重材料之拓樸最佳化問題。該法假設元素的物理性質（一般取彈性模數矩陣 E）
為元素局部密度（local density） eρ 之冪級數，其對應之數學式如下： 
 
(1) (2)( ) ( ) (1 )e e p eρ ρ ρ= + −E E E  (2a) 
 
(1) (2)
1 2 2( ) ( ) ( ) (1 ( ) )e e p e p e pρ ρ ρ ρ = + − E E E  (2b) 
 min 1 1
eρ ρ≤ ≤ ； min 2 1eρ ρ≤ ≤  (2c) 
上式中 E(1)與 E(2)分別為材料 1 與 2 之彈性模數矩陣，p 為懲罰因子（penalty factor）。若設
計領域中不含任何孔隙（填滿材料 1 與 2），則元素之彈性模數矩陣 E 為方程式（2a）；若
元素中包含孔隙，則元素之彈性模數矩陣 E 為方程式（2b），此時元素內所含材料 1 與材
料 2 之局部密度分別為 1 2( )( )e eρ ρ 與 1 2( )(1 )e eρ ρ− 。將元素所含之材料局部密度為設計變數（即
1
eρ 與 2eρ ），利用最佳化條件方法來調整元素密度，最後移除密度較小的元素達到結構之最
佳化拓樸形狀。 
然而利用均質法或固體等向性懲罰函數方法卻存在著一些問題：首先，計算元素有效彈
性模數矩陣需要複雜的數學運算，尤其當填充材料不止兩種時，非但公式必須重新推導，且
 6 
研究方法 
本研究旨在探討多重材料拓樸最佳化設計的問題，其中根據設計領域中孔隙含量是否為
定值將此問題區分為兩大類。第一類屬於材料分佈問題：在給定材料體積下，尋求材料的最
佳化分佈使之滿足結構總順度最低。第二類問題屬於承載效率問題：在給定材料體積比率
下，孔隙量應含多少使結構之承載效率最高。主要的研究方法為本研究所提出交換式結構最
佳化演進法（Switching Evolutionary Structural Optimization，以下簡稱為 SESO）。以下將敘
述 SESO 處理前述兩大類多重材料結構拓樸最佳化問題採用之原理與流程。 
（A）交換式結構最佳化演進法 
本研究擬將最佳化演進法擴充至探討多重材料拓樸最佳化問題。首先探討單純兩種等向
性材料填充（不考慮孔隙）問題：給定某一設計領域，兩種不同材料的體積比率固定，則兩
種不同材料該如何分佈此一設計領域可讓結構物之順度最小？此問題對應之數學式如下： 
 Minimize  { } { }TP U  (6a) 
 Such that  1 2TV V V= + ； 1 1 TV a V= ； 2 2 TV a V= ； 1 2 1a a+ =  (6b) 
上式中 VT 為設計領域總體積；V1 與 V2 分別為材料 1 與材料 2 的體積，a1 與 a2 均為常數，分
別代表 V1 與 V2 所佔設計領域體積的比例。 
由於目標函數是最小化結構的總順度，同時考慮有限元素網格大小可能不一，故在此改
以元素的應變能密度作為結構最佳化演進之準則。若元素所含之應變能密度愈小，代表此元
素對結構物順度改變的影響愈小，屬於無效率元素。至於第 i 個元素所含應變能密度αi 可依
下式計算： 
 
1 { } { }
2
T
i i iα σ ε=  (7) 
其中{σi}為第 i 個元素之應力向量，而{εi}為第 i 個元素之應變向量。值得注意的是一般有限
元素軟體是提供元素各積分點的應力與應變向量，非而「元素」的應力與應變。故本文將元
素內所有積分點應力與應變取其平均值做為元素的代表應力與應變向量。 
對於雙重材料分配的拓樸最佳化問題可先假設初始設計領域完全為彈性模數較高的材
料所填充（假設 E1 > E2，即 V1 = VT；V2 = 0），透過有限元素分析後可得每一元素所含之應
變能密度。然後將應變能密度最低的若干元素從原本的材料 1 替換為材料 2。此種替換過程
相當符合物理上的直覺：因為應變能密度低的元素是較無效率的元素，自然改由彈性模數較
低的材料取代。由於本文所提出的方法是採逐步交換的方式來達到材料最佳化分配，故稱為
「交換式結構最佳演進方法」（簡記為 SESO）。至此可知：結構最佳化演進方法 ESO 可視
為交換式結構最佳化演進方法 SESO 的一種特例，傳統 ESO 中無效率的元素會逐漸被移除，
相當於元素的材料性質被改為孔隙（void），而在 SESO 中無效率的元素是將該元素的材料
性質改為彈性模數較小的材料所取代。 
求出每一元素之應變能密度後，其次便是決定在每次演進的過程中要交換若干元素的材
料性質。若單純採用 ESO 中的移除比率 RR 與演進速率 ER 作為演進參數，往往結構最後演
進的結構在體積上會略有差異，無法精確控制最佳化時各材料體積為預設值。因此拓樸最佳
化所得的結構順度無法反應出是不同材料彈性模數的影響抑或移除體積不同的影響。有鑑於
此，本研究將所有元素的應變能密度按大小加以排序，在每次迭代演進的過程中以固定的增
量交換若干元素的材料性質。元素替換之後再對新的結構進行有限元素分析重新計算各元素
所含之能量密度，再繼續交換新結構中的低能量密度元素，逐次增加材料 1 所佔的體積直到
滿足預設值才停止。此外，在傳統 ESO 方法中元素一旦被判斷為無效率後就從有限元素模
型中移除，後續的演進過程中不再出現。而在本文所提的 SESO 方法中，元素的材料性質係
根據其應變能密度排列之先後順序所決定，故任一元素的材料性質在逐次演進的過程是可以
改變的。 
 8 
（B）承載效率與功能指標 
前述討論僅探討結構中多重材料分佈的問題，也就是結構物總體積並未改變，只是改變
不同材料分佈的位置來使結構整體順度最小，結構設計領域中並不包含孔隙。換句話說，元
素只是材料性質改變，並未被移除。若進一步考慮孔隙（元素移除）的影響會引入兩個議題：
孔隙應該分佈於何處？以及孔隙應佔多少體積比例方能使結構承載效率最高？ 
孔隙分佈問題其實仍是屬於材料分佈的類型，只需將孔隙視為一種極軟的材料，其彈性
係數趨近於零即可。此假設並不會影響結構整體的勁度與受力反應，故前節所述之交換式最
佳化演進方法仍可適用。至於結構承載效率的問題，則是屬於多目標函數最佳化問題。一方
面必須最大化結構承載效率；同時仍須維持在該體積下最小化結構順度。對於多種材料（含
孔隙）考慮承載效率的拓樸最佳化問題，其對應之數學式可寫成： 
 Maximize  Bearing efficiency (10a) 
 Minimize  { } { }TP U  (10b) 
 Such that  
0
n
i T
i
V V
=
=∑ ； i i TV aV ′= ；
1
1
n
i
i
a
=
=∑ ；for i = 1,…, n (10c) 
其中 V0 代表結構中的孔隙體積， TV ′代表扣除孔隙體積後的總體積。另一方面，各材料體積
與孔隙體積之總和為設計領域之總體積，且各材料之間的體積必須滿足給定的比例關係。 
本研究採用功能指標(Zhao et al. 1998; Leu et al. 2003)的概念來判斷結構是否最具承載效
率。對於線彈性的單自由度系統而言，可定義承載效率為結構單位體積的勁度。而在外力固
定下，結構單位體積的勁度是反比於結構總體積與總能量的相乘積。而功能指標是定義第 j
次演進結構承載效率與初始結構承載效率的比值，可寫成如下型式： 
 
0 0
0 0
/
/
j j
j j
K V W VPI
K V W V
= =  (11) 
上式中上標代表演進次數，W 代表系統總能量。PI 值越高代表結構承載效率越高。雖然上
式是從單自由度系統推導得來，但在此將之推廣應用於多自由度系統。而對於多種材料（含
孔隙）的結構系統，其對應的功能指標可寫成下式： 
 
0 0
0 0 0
0 0
1 1 1 1
1 1 1 1
i i
j j
i i
N Nn n
ik ik ik
i k i kT T
T j j N Nn n
T T j j j
ik ik ik
i k i k
v v
W VPI
W V
v v
α
α
= = = =
= = = =
×
= =
×
∑∑ ∑∑
∑∑ ∑∑
 (12) 
上式中下標 T 代表系統總體的物理量。αik 與 vik 分別為第 i 種材料中第 k 個元素的應變能密
度與體積。而 Ni 意味結構系統中第 i 種材料所有的元素數目。 
由功能指標的定義可得知：功能指標之初始值為 1.0，隨著無效率元素逐漸被移除，結
構物單位體積的勁度逐漸增大（或應變能與體積的乘積逐漸下降），故功能指標之值會逐漸
增加。一旦結構物已達最具承載效率的拓樸形狀，此時若繼續移除元素會造成結構物承載效
率的降低，功能指標反而會下降。由功能指標的歷時變化，可以得知不同演進階段的優劣。
功能指標值較大者，即為較具效率之結構。而功能指標一旦自最大值開始下降，演進過程即
可結束。值得一提的是方程式(12)同樣適用於材料分配問題，在此類問題中因為系統總體積
不變，故功能指標會退化成結構所含應變能的比值。當功能指標最大時，也就意味著對應的
結構應變能（或順度）是最小值。 
綜合上述，交換式結構最佳化演進方法（SESO）流程可概述如下： 
一、將結構設計領域離散為有限元素網格。 
二、針對既有邊界條件及載重進行有限元素分析，並計算元素應變能密度。 
三、根據元素應變能密度進行排序。 
四、根據排序結果，以固定增量交換若干元素的材料性質。 
五、若為材料分配問題，則則重複步驟二至步驟五直至各材料的體積達到預設的條件即
 10 
的過程並不需要再花費額外的轉換時間，雖然 ABAQUS 並沒有公開 ODB 檔案內容的存放
格式，但是 ABAQUS 提供一套 C++的 API，可以讓使用者便利的存取 ODB 檔的資料，使用
這些 API 除了可以免除繁瑣的檔案處理之外，還提供所有輸出資料的標準取得方式，使用者
不用個別開發解析器。所以透過 C++的 API 取得 ODB 檔的輸出資料，是整合 ABAQUS 相
關研究中，最有效率的方法（Le et al. 2003）。 
由於在 SESO 的迭代過程中，會不斷地調整結構模型（亦即調整結構模型材料的分佈），
過去研究大部份是自行設計資料結構，維護這些異動的結構模型資料，但這種方式需要針對
結構模型的特性（2D 或 3D，不同的元素類型等）設計其結構模型的資料結構，所以較缺乏
彈性。目前 ABAQUS 並沒有提供 C++的 API，讓使用者調整結構模型，僅提供 Python 的程
式庫，讓使用者透過撰寫腳本語言（Script Language）的方式，發展調整結構模型的程式，
本研究亦將採用此方式，透過 Python 語言，以及相關的 Python 程式庫，發展 SESO 迭代過
程所需要的結構模型調整機制。 
本研究除了運用ABAQUS提供的C++及Python程式庫，發展一套能自動化地進行SESO
研究的輔助系統之外，更運用.NET 所提供的 Remoting 技術，發展分散式整合（Distributed 
Integration，Peng and Law 2004a, b）機制，讓使用者可以在客戶端（Client-Side）透過輔助
系統，和伺服端（Server-Side）的 ABAQUS 整合，此種整合機制除了可以有效地讓使用者
使用伺服端的 ABAQUS 計算資源，便利管理有限的版權之外，更可以將輔助系統應用在工
程教育，讓學生可以透過 Remoting 的技術，使用 ABAQUS 計算資源研究 SESO（參見圖 5）。 
 
ABAQUS Remoting Services
Client
Client
Client
AbaqusESO
AbaqusESO
AbaqusESO
.NET Remoting 
channel
 
圖 5 運用.NET Remoting 機制建立的分散式整合架構 
 
綜合上述，本研究使用.NET 做為輔助系統的執行平台，設計六個主要的模組，各項模
組的功能說明如下： 
(1) AbaqusWrapper 模組：在 ABAQUS 6.4 版中，提供 C++版本的 API，讓使用者可以
存取 ABAQUS 分析結果的輸出檔 (ODB 檔 )。為配合本研究的需求，設計
AbaqusWrapper 模組，讓使用者可以便利地從.NET 環境中，使用任何程式語言，透
過 AbaqusWrapper 存取 Abaqus 的 ODB 檔。本研究的迭代分析過程中，將會從 ODB
檔中取出結構分析所得到的應變能密度，並進一步計算出每一個元素的應變能，以
評估元素的承載效率。 
(2) Abaqus 模組：此模組主要建立 ODB 檔資料的物件架構(參考圖 6)，以 Odb 類別為
基礎，包含輸出檔中的 RootAssembly 類別、Materials 類別集合、Parts 類別集合、
Steps 類別集合、SectionCatagories 類別集合；結構的原始模型資料存放在 Instances
 12 
介面，讓 ESO 或 SESO 的分析核心可以透過此介面呼叫這些實作的類別(參考圖 8)。 
 
Input Parameter 
Validation
Initialization
Analysis
Optimization
Checking Stop Criteria
Start
Finish
Evolutionary 
Structural 
Optimization
Loop
ESO/SESO 
Analysis Method
(IESOMethod)
 
 
public interface IESOMethod 
{ 
   …… 
bool Validate(); 
   bool Initialize(); 
void RunAnalysis(); 
   void Optimize(); 
   bool StopCriteria(); 
   …… 
} 
圖 8 ESO/SESO Analysis Method 
 
(5) AbaqusRemoting 模組：ESO 或 SESO 的分析核心規劃在此模組中，負責啟動
ABAQUS 商用軟體執行分析的工作(參考圖 8)。首先，會先檢查輸入的分析參數是
否正確；接著進行初始化的分析，透過初始化的分析，以確定此結構模型可以正常
地進行分析；接下來則開始進行迭代的分析工作，依序進行結構分析、最佳化分析、
目標函數的檢核，當達到目標函數後，即停止迭代的分析工作。 
(6) AbaqusESO 模 組 ： 此 模 組 為 建 構 GUI 介 面 的 基 礎 ， 模 組 的 規 劃 以
Model-View-Controller（MVC）的架構設計，其中 Model 的部份以 AnalysisCase 類
別為主，包含結構模型資料、所有分析的參數與連結 ABAQUS 計算資源；Controller
的部份以 ESOAnalysisController 類別為主，負責控制 Model 與 View 之間的各項資
訊的傳遞；View 的部份包含 AnalysisCaseForm 類別負責顯示每一個 AnalysisCase
類別的資訊；OutputForm 類別顯示由 ABAQUS 輸出的分析資訊；ErrorForm 類別顯
示所有錯誤的訊息；StartPageForm 類別提供使用者建立 AnalysisCase 類別的資訊；
MainForm 類別負責管理所有的表單（Form）類別（參考圖 9 所示）。 
 
 
 
 14 
是一致的，但仍有些許的不同：在由軟變硬的實例中，較硬的材料會由受力與支承的局部區
域向外延伸；而在由硬變軟的實例中，較硬的材料則會集中在內力的傳遞路徑上。進一步比
較兩種策略所得拓樸形狀之總應變能，其值分別為 216.52 與 230.20。總應變能較小者意味
其順度亦較小，則較符合最小化結構順度的目標函數。故可知由硬變軟的交換策略能得到較
小的總應變能，其原因可能由於初始結構包含較多無效率的元素，則採用由硬變軟會使得演
進之結構拓樸較為平滑，故以下之數值實例均採用由硬變軟的交換策略。 
 
 
 
(a) 由軟變硬之最佳化拓樸形狀 (b) 由硬變軟之最佳化拓樸形狀 
圖 11 不同演進策略之拓樸最佳化結果 
 
其次，探討每次演進過程中交換元素的增量數目對拓樸最佳化的影響，此處所謂的增量
數目係指在演進過程中依序交換 m，2m，3m（以下類推）個元素的材料性質，直到交換元
素的數目達到預設的體積為止。初始設計領域假設均為較硬材料，考慮兩種材料的彈性模數
E1 與 E2 分別為 200GPa 與 20GPa，而最終之材料體率比率 a1 與 a2 均為 0.5。當增量數目分
別為 4 與 8 時所對應的拓樸最佳化結果如圖 12 所示。由圖 12 可發現兩者所得之拓樸形狀雖
然趨勢相同，但仍存在些許差異。進一步比較兩種拓樸形狀之總應變能，其值分別為 217.55
與 216.71，兩者差異並不明顯。增量數目越少，代表演進至預設體積所需的演進次數越多，
而演進次數的多寡往往是決定是否達到最佳化的關鍵因素。演進次數太少則不足以達到最佳
化拓樸形狀，太多則浪費計算時間。數值經驗顯示出演進次數在 80 至 150 次之間可兼具效
率與正確性。 
 
 
(a) 交換個數 m = 4 之最佳化拓樸形狀 (b) 交換個數 m = 8 之最佳化拓樸形狀 
圖 12 不同交換數目之拓樸最佳化結果 
 
(B) 材料差異性 
本節主要考慮在雙重材料結構拓樸最佳化問題中，材料彈性模數的比值是否會影響到材
料分配的拓樸形狀。同樣以 Michell beam 為例（載重、邊界條件與網格如上節所示），演進
策略定為由硬變軟，每次交換元素增量數目為 8，最終之材料體率比率 a1 與 a2 分別為 0.8
與 0.2（演進次數為 80 次）。考慮材料彈性模數比值 E1/E2 為 2、5、10 與 20 的情形（其中
E1 固定為 200GPa，E2 則按比例改變），利用 SESO 所得之結果如圖 13 所示。由圖 13 可發
現：當兩種材料彈性模數比值 E1/E2 差異大時，較硬的材料（E1）會逐漸透過 SESO 產生類
桁架結構（參見圖 13c 與 13d）；而兩種材料彈性模數比值 E1/E2 接近時（E1/E2 = 2），雖然
內力傳遞的路經大致相同，但所產生的拓樸形狀會有不連續的現象（參見圖 13a 與 13b）。
此現象主要是因為當材料彈性模數差異大時，載重主要透過材料 1 所形成的類桁架結構傳遞
至支承處；而當材料彈性模數接近時，由於材料 2 也具有相當的承受能力，故載重之傳遞可
 16 
 
圖 14  Micehll beam 三種材料之拓樸最佳化結果 
 
(D) 含孔隙雙重材料 
在此以雙重材料含孔隙之拓樸最佳化為例：假設兩種材料之彈性模數 E1 與 E2 分別為
200GPa 與 100GPa。扣除孔隙體積之外，兩種材料之體積比率 a1 與 a2 分別為 0.3 與 0.7，欲
探討孔隙量為多少時會有最大之承載效率。本研究在求解此一雙重最佳化問題時係將孔隙的
視為一種極軟的材料，其彈性模數趨近於零；再利用前述所推導的功能指標來判斷在多少孔
隙量結構最具承載效率。首先將初始設計領域設為由較軟材料（材料 2）所構成，每次演進
過程中元素交換的增量數目為 8。亦即每次增加 8 個孔隙性質的元素，再從剩下的體積中進
行雙重材料分配的最佳化；待達到按給定的材料體積比率，根據方程式（8）計算對應的功
能指標，再增加孔隙性質的元素數目以進行下一次的迭代演進。 
由圖 15 的功能指標歷時圖中可看出功能指標值在初始上升很快，爾後即漸趨平緩，待
越過平台後在逐漸下降。功能指標初段之所以快速上升的原因在於初始結構一方面移除不具
效率的元素（即孔隙部分），同時將最具效率的元素改以較硬的材料所取代。此兩方面因素
造成結構的承載效率會大幅增加。爾後較硬的材料的體積雖然逐漸增加，但其應變能增加並
不明顯，此時承載效率的增加主要是因為無效率的元素遭到移除（孔隙逐漸增加）。最後功
能指標逐漸下降是因為孔隙含量過多，導致結構承載效率逐漸降低。圖 15 中可發現當演進
至第 22 次時（此時孔隙的含量為初始總體積的 0.21）功能指標值最大（PI = 1.58），代表
此時的結構最具承載效率（也就是結構單位體積所含的應變能最大）。圖 16 則是對應功能
指標最大值之雙重材料結構拓樸形狀。同樣地較硬材料（材料 1）主要集中在結構受力處與
支承處。 
 
0.0
0.5
1.0
1.5
2.0
0 20 40 60 80
演進次數
功
能
指
標
功
能
指
標
功
能
指
標
功
能
指
標
 
 
圖 15 功能指標歷時圖 圖 16 考量孔隙時的結構最佳化拓樸形狀 
 
結論 
本研究提出交換式結構最佳化演進法處理多重材料之拓樸最佳化問題，該法具有觀念簡
單，容易與有限元素相結合之優點。對於雙重材料分配問題，透過參數分析本文建議將初始
設計領域設為較硬材料，透過由硬變軟的策略逐步交換硬變能密度較低元素的材料性質來達
到最佳分配；而單次交換元素個數的增量建議控制在 1%元素總數之內。對於多重材料之分
配問題，利用材料群組的觀念可以簡化為雙重材料分配，透過雙向同步演進的方式或兩次單
向演進的方式均可達到最佳化拓樸形狀。若進一步考慮含孔隙材料之最佳化問題，本文利用
承載效率的觀念推導出對應的功能指標，由功能指標的大小來評估不同孔隙大小的優劣。數
