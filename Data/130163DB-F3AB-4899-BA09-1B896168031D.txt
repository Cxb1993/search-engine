 2
但能夠減少資源的閒置時間以及降低在製品存貨
水準之外，更可以使工作能夠如期的完成，進而滿
足顧客的交期需求。 
在排程研究中為了要達到降低在製品存貨水
準以便降低製造生產成本的目的，常用的評估準則
是將目標函數設定為總完工時間最小化。基於每一
件工作的重要性或價值不盡相同，因此需要針對每
一個工作給予不同的加權係數值，因而將目標函數
修正為總加權完工時間最小化。在過去文獻中探討
諸如此類單一目標評估準則的期刊論文相當多，但
是在現實的生產環境中排程的決策過程通常都不
只會考慮單一的總加權完工時間最小化目標而
已，而且還要另外考慮滿足顧客的交期因素。在此
情況下，同時考量兩種以上目標條件的排程研究是
有其必要性的。在這雙重考量目標下，基本上可以
將影響上述目標的兩項因素予以整合，使其形成所
有工作均需滿足截止時間前完工的條件下，求取總
加權完工時間最小化的單機排程問題。過去針對此
類的排程問題研究中，大部分的期刊文獻對於工作
之釋放時間(Release Time)均視為相同或者根本不
加以考量，表達為 ∑ ⋅= iii Cwdmn //1/ 之靜態排程
問題。然而在實際的生產環境中，工作的釋放時間
需要予以考量，因而構成 ∑ ⋅= iiii Cwdrmn /,/1/ 之
動 態 排 程 問 題 。 本 計 畫 係 針 對 上 述 此 種
∑ ⋅= iiii Cwdrmn /,/1/ 的排程問題，提出可以獲得
最佳解的數學規劃模式(Mathematical Programming 
Model)與分枝界限法(Branch And Bound)，以茲作
為驗證與評估求解成效的基準。由於此問題被歸類
屬於典型的 NP-Hard 問題，基於求解效率之考量，
因此本計畫同時也提出一種可以迅速求解的啟發
式 (Heuristic)演算法以及常用於解決組合最佳化
(Combinatorial Optimization)問題的貪婪隨機調適
搜尋程序 (Greedy Randomized Adaptive Search 
Procedure, GRASP)演算法，以期能夠迅速有效地獲
得較佳的可行解，藉以協助管理者執行排程之作
業。 
 
四、文獻探討 
   
為了要達到降低在製品存貨水準以便降低製
造生產成本的目的，常用的評估準則是將目標函數
設定為總完工時間最小化。但是，由於每一件工作
的重要性或價值不盡相同，因此需要針對每一個工
作給予不同的加權係數值，因而將目標函數修正為
總加權完工時間最小化[2,5,15]。 
單機排程問題中，處於釋放時間均為相等且為
零（靜態）的環境時，假使目標函數設定為總完工
時間 (Total Completion Time)最小化的問題狀況
下，以 ∑= iCmn //1/ 來表示之。倘若遭遇此類問
題時，只要根據工作的加工時間依照 SPT(Shortest 
Processing Time)排序即可獲致最佳解。求解方法的
複雜度為 ( )nnO log⋅ ，因此可以在多項式的時間內
順利求取最佳解，屬於 P 類的問題[2,5,15]。假使目
標函數設定為總加權完工時間 (Total Weighted 
Completion Time) 最 小 化 的 問 題 狀 況 下 ， 以
∑ ⋅= ii Cwmn //1/ 來表示之。倘若遭遇此類問題
時，只要根據工作的加工時間以及加權係數值依照
WSPT(Weighted Shortest Processing Time)排序即可
獲致最佳解。求解方法的複雜度為 ( )nnO log⋅ ，因
此亦可以在多項式的時間內順利求取最佳解，它也
是屬於 P 類的問題[20]。然而，當所有工作的釋放
時間不見得均為相等（動態）的環境時，不管其目
標函數是設定為總完工時間最小化的問題狀況
下，以 ∑= ii Crmn //1/ 來表示之；或者是目標函數
設定為總加權完工時間最小化的問題狀況下，以
∑ ⋅= iii Cwrmn //1/ 來表示之。基本上，這兩類排
程問題的困難程度均已經從多項式之時間內可以
求取最佳解的P類問題雙雙地提昇到屬於NP-Hard
等級的問題[12]，相關的研究有運用分枝界限法予
以求取最佳解[4,8,9,11]或是提出啟發式演算法來
獲得近似最佳解[7,11]。另外，當問題一旦考量到
截止時間(Deadline)時，即使不考慮釋放時間的情況
下，以 ∑ ⋅= iii Cwdmn //1/ 來表示之；此類的排程
問題也是屬於 NP-Hard 等級的問題[3,12]。針對此
種單機排程問題中，最早是由 Lenstra[12]所提出，
他只證明這種問題可以被歸類為典型的 NP-Hard
問題，但是並沒有提出任何的解決方案。直到
Bansal [3]才針對此問題提出一些可以降低求解狀
態空間的優勢性質(Dominance Property)，並且運用
這些優勢的性質構建分枝界限法來進行求解。其下
限值的計算式是將截止時間的限制條件加以釋
放，如此一來，原先的問題便可以簡化成單純的
∑
=
⋅=
n
i
ii Cwmn
1
//1/ 單機排程問題。經過簡化後的單
機排程問題，即可運用 Smith [20]所提出的 WSPT
派工法則排序便可以獲得最佳解。然後，將此簡化
後之單機排程問題的最佳解拿來作為原先之排程
問題的下限值。Shanthikumar 與 Buzacott [19]提出
運用分解的手法來進行分枝界限法求解，而 Potts
等人[18]則是依據 Bansal [3]所提出之可以降低求
解狀態空間的優勢性質之外，他們還另外提出一些
更具有成效的優勢性質，因此其所提出之下限值的
計算式更具精確。爾後，Posner [16]針對此問題提
出另外一種分枝界限法的方式進行求解，其方法的
重點在於綜合並且擴展過去之理論，因而推導出許
多有關於工作加工先後順序之關係。經由這些工作
事先決定的先後次序關係，可以事先洞悉一些不可
能成為最佳解的分枝，因而增加求解的效率。
Bagchi [1] 提出運用分枝界限法的方式進行求解，
其重點在於提出更精確的下限值計算方法。Pan [14] 
也是提出運用分枝界限法的方式進行求解，其方法
的重點在於運用遞迴(Recursion)手法來分割問題使
其成為複雜度較小的子問題，藉此來增加問題求解
效率。除了上述多篇可以獲致最佳解的求解方法之
 4
 任意兩個工作，倘若工作 i以及工作 j 滿足 
 ( ) ( )ijj rkMaxprkMax ,, ≤+ 之條件時，則排 
程順序解： δθπ ,,,, ji 絕對不會是最佳解。 
除了一些優勢性質可以用來降低求解的狀態
空間之外，精確的下限值計算方式也是讓分枝界限
法提升求解效率的重點之一。由於本計畫所採取之
分枝策略是特殊的頭尾夾擊方式，因此研擬的下限
值計算方式亦分為三個部分。其中第一個部分是前
面 f ( )fn 2> 個已經確定加工順序之工作，由於此
部分之工作加工順序是屬於正向固定順序，所以這
個部分的總加權完工時間 ( )HeadLB 可以明確的計
算出來。 
( ) ii CwHeadLB f
i
ππ ⋅= ∑=1  
iπ ：表示被安排在第 i個順序加工之工作 
第二個部分則是中間 fn 2− 個尚未確定加工
順序之工作，這個部分的總加權完工時間 ( )BodyLB
可以透過問題簡化的手法來加以估算。估算的過程
是先將 fn 2− 個尚未確定加工順序工作之釋放時
間與截止時間的條件狀況加以忽略，如此一來便可
以將原來的問題轉化成 ∑ ⋅=− jj Cwmfn //1/2 的
單機排程問題。簡化後的單機排程問題依照
Smith[20]所提出的 WSPT 法則加以排序即可獲得
最佳解，因此可以作為估算此部分的總加權完工時
間之下限值。 
( ) ( )[ ]∑−
=
+⋅=
fn
j
jfj pCwBodyLB
2
1
θπθ
 
jθ ：表示 fn 2− 個尚未確定加工順序之工作
依照 WSPT 排序後，第 j 個順序之工作 
第三個部分則是最後 f 個已經確定加工順序
之工作，由於此部分之工作是屬於逆向固定順序，
這個部分的總加權完工時間 ( )TailLB 也可以透過問
題簡化的手法來加以估算。不過，計算過程的前提
是必須先將前面 fn − 個工作的最後完工時間估算
出來，其中前面 f 個屬於正向固定順序工作的最後
完工時間 fCπ 可以明確的取得。至於後面 fn 2− 個
尚未確定加工順序工作則可以將其截止時間的條
件 狀 況 加 以 忽 略 ， 使 其 形 成 簡 單 的
max//1/2 Cmfn =− 單機排程問題。簡化後的單機排
程問題依照 FIFO 法則加以排序即可獲得最佳解，
因此可以作為估算此部分的總加權完工時間之下
限值。 
( ) ( )[ ]∑
+−=
+⋅= −
n
fnk
kfnk pCwTailLB
12
2 δψδ
 
kδ ：表示被安排在第 k 個順序加工之工作 
jψ ：表示 fn 2− 個尚未確定加工順序之工作
依照 FIFO 排序後，第 j 個順序之工作 ( ) 111 , ψψπψ prCMaxC f +=  ( ) kkk prCMaxC k ψψψψ += − ,1  
( ) ( ) ( )TailLBBodyLBHeadLBLB ++=  
當問題工作數目不多時，數學規劃模式以及分
枝界限法雖然可以輕易地求取最佳的排程順序結
果，然而當問題工作數目急遽擴大時，數學規劃模
式以及分枝界限法的求解方法會發生無法在可容
忍的時間內獲得最佳解或者甚至於無法求解的狀
況。因此，基於求解效率的因素考量下，有必要發
展一個啟發式演算法，藉由其迅速且有效地特性來
獲得滿意可行的排程順序解。 
本計畫所研擬的啟發式演算法，主要是運用非
延遲(Non-Delay)以及修正加權最短加工時間優先
派工法則 (Modified Weighted Shortest Processing 
Time, MWSPT)的觀念想法。由於問題中考量具有
釋放時間之因素，因此採取非延遲的觀念來事先過
濾掉一些可能會造成機器長時間空閒(Idle)的狀
況。除此之外，基於必須滿足截止時間前完工的特
性，因而提出一個結合寬裕時間(Slack Time)與加權
最短加工時間觀念之新的判斷優先執行順序的指
標，透過此項指標將可以增加判斷排程順序的正確
性。另外，為了避免產生非可行解(Infeasible)的情
形發生，本方法還具有回溯(Backtracking)修正成為
可行解的程序，複雜度經過分析後為 ( )3nO 。 
組合最佳化(Combinatorial Optimization)的問
題中，貪婪隨機調適搜尋程序演算法是一種常用的
有效率解決手法。每次貪婪隨機調適搜尋的程序當
中均包含有兩的階段，其中一個是建構階段
(Construction Phase)以及另外一個局部搜尋階段
(Local Search Phase)。基本上建構階段具有重複執
行、貪婪進行以及可調適之特性，因此每次過程均
可能建立產生一組不同的可行解。本計畫研擬的建
構階段是利用上述啟發式演算法之指標判斷值計
算式作為貪婪函數，經由貪婪函數計算每一個候選
工作的指標判斷值並且透過適當的函數轉換成被
挑選中的機率值，形成一個不均勻的俄羅斯轉盤，
然後再依據產生的隨機亂數來判斷決定下一個作
業順序之工作。至於局部搜尋階段，本計畫則是預
計運用模擬退火法(Simulated Annealing Algorithm)
來改善建構階段所產生的可行解。 
 
 
六、研究成果與結論 
   
本計畫將針對工作具有釋放時間與截止時間
之單機排程問題環境，以所有工作均需符合截止時
間前完工之條件下求取『總加權完工時間』最小化
的評估準則為目標構建一個數學規劃模式以及分
枝界限法。在分枝界限法當中，本計畫除了將推導
出一些可以降低求解狀態空間的優勢性質之外，還
將運用特殊的前後夾擊手法來進行求解。數學規劃
模式與分枝界限法雖然均可以獲致最佳解，然而此
問題屬於 NP-Hard 的特性使得當問題之工作數目
一旦增多時，數學規劃模式所藉助的 LINGO 求解
套裝軟體或者本計畫自行撰寫的分枝界限法程式
