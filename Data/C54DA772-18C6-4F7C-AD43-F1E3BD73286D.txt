  
中文摘要 
無線感測網路是軍事和民間相關應用的一項重要新技術。感測節點可能獨自並且部署
在公開或者敵人的區域。它的通信可能受到監控並且感測節點也易受到敵對者取得和操
縱。因此安全技術是發展與應用無線感測網路一項很重要的議題。發展無線感測網路的安
全機制和技術，密鑰管理是一極為重要主題。無線感測網路 Ad Hoc 本質和其計算能力、儲
存空間、頻寬和電力等資源限制使傳統密鑰管理技術在無線感測網路環境中無法切實可
行。也由於無線感測網路的這些特殊本質，提高了密鑰管理設計的挑戰與難度。本專案計
畫研發設計一適用於具大量感測節點的無線感測網路中感測節點間安全通信所需密鑰管理
技術。本專案計畫研發設計的技術提供鑑別和祕密性功能且不需要密鑰配發中心的協助。
我們的技術有良好的擴充性，因為每個感測節點都僅僅需持有數量不多的密鑰且其數量不
受網路節點數量的影響。本專案計畫研發設計的技術的另一種重要性質是它提供兼具安全
與高效率的資訊廣播功能；每一個感測節點都與它所有的直接相鄰感測節點共有一份密
鑰，所以僅僅一次廣播資訊就能將資料安全地透過所有可能的管道傳遞出去。另外我們所
研發設計的技術也提供許多重要性質例如抵抗節點複製攻擊、廣播效率、感測節點擴充性
和感測撤消與新增等。比起過去的研究成果，本專案計畫研究成果是更有效率且安全。因
此本專案計畫研究成果有符合並達到計畫的目標。我們將投稿本專案計畫研究成果到國際
學術期刊。 
Abstract 
Wireless sensor networks (WSNs) is an important new technique for military and civilian 
applications.  WSN nodes may be left unattended and the WSN may be formed in public or 
hostile areas.  Its communication is monitored and sensor nodes are subject to capture and 
manipulation by an adversary.  Security is a very important issue of WSN.  To develop security 
mechanisms and protocols for sensor networks, key management is a paramount issue.  The 
special nature of MSNs imposes challenging requirements on key management design.  The 
traditional key management schemes are not feasible in WSN because of its ad hoc nature and the 
limited processing power, storage, bandwidth and energy resources. This project devises a 
distributed, deterministic key management protocol for securing communication between sensor 
nodes in large-scale sensor networks.  The proposed protocol provides authentication and 
confidentiality functionality, without the need of a key distribution center.  It is scalable since 
every node only needs to hold a small number of keys independent of the network size.  Another 
important property of the proposed protocol is that it is optimized for message broadcast; each 
node shares one pairwise key with all of its immediate neighbors, so only one transition is 
necessary to broadcast a message. The proposed scheme provides many important properties such 
as resiliency against node replication, efficient broadcasting of encrypted messages, intermediate 
node accessibility of data, scalability, and revocation of compromised nodes and addition of new 
ones.  The proposed scheme is more efficient and secure than the previous research results.  
Thus, this result achieves the subject of this project.  We will submit this research result to an 
international journal. 
 
ㄧ、前言與目的 
Advances in micro-electro-mechanical systems (MEMS) and evolution in wireless 
communication, the application domains of wireless sensor network (WSN) are more and more 
  
message to all of its neighbors. In these cases, we believe that transmissions must be kept as low 
as possible because of their high energy consumption rate. This project devises a security 
protocol that has the following properties: resilience to node replication, energy efficiency, 
scalability, easy deployment and node addition. 
 
二、文獻探討 
Basagni et al.’s key management scheme [1] uses a global common key shared by all nodes. 
In terms of storage requirements and energy efficiency, their solution is good.  However, it is 
obvious that its disadvantage is the compromise of even a single node will reveal the universal 
key. There exist several schemes [3, 5, 6, 9] suggest random key pre-distribution: Before 
deployment each sensor node is preloaded with a set of symmetric keys that have been randomly 
chosen from a key pool. Then nodes can communicate with each other by using one or more of 
the keys they share according to the model of random key pre-distribution used.  It is not 
scalable, although these schemes offer network resilience against node capture. The number of 
symmetric keys stored in sensor nodes must be increased in order to provide sufficient security of 
links when the size of the sensor network increases.  However, in case of node capture, the more 
keys are stored in a node, the more links become compromised (even not neighboring ones).  In 
LEAP [11], starting from a master key, each node creates a cluster key that distributes to its 
immediate neighbors using pair-wise keys that shares with each one of them. In this case, each 
node has to apply a different cryptographic key before forwarding the message because clusters 
highly overlap.  This scheme has a more expensive bootstrapping phase and increased storage 
requirements, while it offers deterministic security and broadcast of encrypted messages.  
Dimitriou and Krontiris [4] discovered that even if the master key is deleted, the LEAP protocol 
can be attacked. More specifically an attacker may force a sensor node to compute pairwise keys 
with other nodes in WSN.  Slijepcevic et al. [10] proposed dividing the network into hexagonal 
cells, each having a unique key shared between its members. Nodes belonging to the bordering 
region between neighboring cells store the keys of those cells, so that perform message exchange.  
All sensor nodes of their scheme can discover their exact location.  It is an important assumption 
for Slijepcevic et al.’s scheme, because nodes can organize into cells and produce a location 
based key. Moreover, they assume that sensor nodes are tamper resistant. However, these 
assumptions are usually too demanding for sensor networks. 
 
三、研究方法與成果 
In this section, we introduce the research results of this project briefly.  We divide our 
protocol into three phases: the initial phase, cluster key setup phase and Secure message 
forwarding phase.   
Initialization phase: 
Loading 4 keys: Node key Ki, Cluster Key Kci, Master Key Km, Commitment key K0 to each 
sensor Node i before distributing it. 
Cluster key setup phase: 
  
 
Case 2. Node i (belong to CIDi cluster with a cluster key Kci) would like to forward a received 
message C(={IDo|CIDs|CIDd|T|t1|t2|τ |L}) to the base station. 
Step 1: If CIDd≠CIDi terminate this protocol. 
Step 2: Verify “IDo|T|t1|τ” by t2, if it is false terminate this protocol.    
Step 3: If Node i is not the cluster head go to Step 7. 
Step 4: If L includes CIDi or (T, τ) has been forward terminate this protocol; otherwise, add CIDi 
to L. 
Step 5: Perform the following substeps to generate and broadcast new C to cluster member. 
Step 5.1: K′M=FKci(1). 
   Step 5.2: CIDs=CIDd=CIDi. 
   Step 5.3: t2 = H(K′M, CIDs, IDo |T|t1|τ). 
   Step 5.4: Broadcast C={IDo|CIDs|CIDd|T|t1|t2|τ|L}. 
Step 5.5 Record (T, τ) has been forward. 
Step 6: Generates and broadcasts new C to each neighbor cluster CIDj (whose cluster key is Kcj) 
except the neighbor cluster CIDs as the following substeps. 
Step 6.1: K′M=FKcj(1). 
Step 6.2: CIDs=CIDi; CIDd=CIDj. 
Step 6.3: t2 = H(K′M, CIDs, IDo| T | t1 | τ). 
Step 6.4: Broadcast C={IDo | CIDs | CIDd | T | t1 | t2 | τ | L}. 
Step 6.5: Terminate this protocol. 
Step 7:If CIDs≠CIDi go to Step 10. 
Step 8:If CIDs≠IDo terminate this protocol. 
Step 9:Perform the following substeps to generate and broadcast new C to its each neighbor 
cluster CIDj (whose cluster key is Kcj) 
Step 9.1: K′M=FKcj(1). 
Step 9.2: CIDs=CIDi; CIDd=CIDj. 
Step 9.3: t2 = H(K′M, CIDs, IDo| T | t1 | τ). 
Step 9.4: Broadcast C={IDo | CIDs | CIDd | T | t1 | t2 | τ | L}. 
Step 9.5: Terminate this protocol. 
Step 10:If L includes CIDi or (T, τ) has been forward terminate this protocol. 
Step 11:Generate and broadcast new C to the cluster head as the following substeps. 
Step 11.1: K′M=FKci(1). 
   Step 11.2: CIDs=CIDd=CIDi. 
    Step 11.3: t2 = H(K′M, CIDs, IDo | T | t1 | τ). 
Step 11.4 Broadcsat C={IDo | CIDs | CIDd | T | t1 | t2 |τ| L}. 
Step 11.5 Record (T, τ) has been forward. 
 
四、結論與成果自評 
This project devises a key establishment protocol for sensor network deployment.  The 
