filters, IIR filters, and systolic arrays. We 
simulated the designs and implemented them with cell-
based design flow. 
英文關鍵詞： timing errors, error resilience, VLSI design, digital 
signal processing, fault tolerance 
 
 具容忍多重時序錯誤之數位訊號處理系統 
 
“Design of Digital Signal Processing Systems for Tolerating Multiple Timing Errors” 
計畫編號：NSC 100-2221-E-259-028 
執行期間：100 年 8 月 1日 至 101 年 7 月 31 日 
主持人：紀新洲 東華大學資訊工程系副教授 
 
一、 中文摘要 
時序錯誤為資料進入時，因為受到影響而
使電路取樣到錯誤的資料。在半導體製程的大
幅提升後，時序錯誤將會造成電路嚴重的失
敗，而容忍錯誤的設計能在電路發生錯誤時，
立即偵查(detect)出錯誤，並能將發生錯誤的
資料做修正(correct)，使電路回復正常運作
狀態，對於現在的晶片系統(system-on-chip 
或 SoC)而言，是一個重要的設計方向。本計
畫提出了一個可在多重時序錯誤發生時，仍能
持續正常工作的數位訊號處理電路設計，我們
將變更數位訊號處理電路中的管線緩衝器
(pipeline buffer)，使得正反器(flip-flop)
組織能偵查出時序錯誤，並針對電路中不同的
路徑狀況，設計其相對應的控制電路。我們設
計了應用於許多數位訊號處理的電路上，包括
FIR、IIR、systolic arrays 等電路，並且實
作不同位元數資料的版本來做比較，驗證電路
擁有時序錯誤的容忍性，驗證時間延遲能符合
我們電路的需求，並觀察原始設計與應用容錯
設計兩者的數據結果來做比較分析。 
 
英文摘要 
Owing to the ever advancing of 
semiconductor technology, the size of transistors 
and their operating voltage keep decreasing. 
Hence, the problems of wires and circuits being 
susceptible to process variation, noise, wire 
delay, and soft errors are getting more and more 
severe. One of the challenges we are faced with 
is timing errors. As the clock rate is higher, the 
probability of timing errors gets higher too. One 
of the solutions to these problems is 
error-resilient design. Error-resilient design of 
VLSI circuits can detect and even correct errors. 
Such design is more important when the 
system-on-chip era has become practical for 
many applications. This project has proposed a 
new error-resilient design for pipelined digital 
signal processing circuits to tolerate multiple 
timing errors. In our design, a technique is 
presented to detect and correct the timing errors. 
Basically, we modified the pipeline buffer by 
adding appropriate control circuits to adjust to 
the timing error event. We validated our idea by 
applying our technique to digital signal 
processing designs, including FIR filters, IIR 
filters, and systolic arrays. We simulated the 
designs and implemented them with cell-based 
design flow.  
 
二、 計畫目的與相關研究 
由於半導體製程的快速進步，促使晶片中
的電晶體個數和工作時脈頻率也相對大幅提
升，積體電路所擁有的機會遠甚於過去，但也
出。 
delay
flip-flop
M
U
X
XOR
out
error
in
clk
clkd
main
flip-flop
 
圖 2. T-error 基本架構。 
T-error 的優點在於能將時序錯誤復原，
但缺點是發生錯誤時，需要花一個時序週期
時間的補償(penalty)，而且前面的管線緩衝
區皆需暫緩以配合此階電路的復原動作。 
錯誤容忍架構可以應用在晶片網路的管
線化連結，主要是為了解決時序錯誤的問
題，系統效能隨著通訊系統改善而提升的同
時 ， 晶 片 網 路 需 支 援 更 高 的 流 量
(throughput)、低延遲的通訊以及低功率消耗
等等。如圖 3 連結管線化能夠增加連接的流
量以及減低傳輸延遲，連結上面的管線數
目，隨著連結的長度以及每個單位時間訊號
所能達到的最大距離而有所不同。因此，在
這麼多的管線之下，若我們使用積極的設計
方法，將有可能發生時序錯誤。傳統上我們
用資料加上額外的資訊(redundant bit)來偵
測資料傳送的過程中是否有受到干擾而產
生錯誤，若有錯誤則要求來源端重送該筆資
料。這種方法除了增加了延遲時間外，也同
時消耗能多功率，進而造成系統過熱的問
題。 
sender receiver
pipeline
buffer 1
pipeline
buffer 2
pipeline
buffer b
 
圖 3. 管線化連結設計。 
 
圖 4中說明T-error架構應用於管線化連
結，同一階管線裡的所有錯誤判斷位元接到
或閘再接到控制電路裡，同一筆資料裡，只
要有另一位元發生時序錯誤，在下一個時序
週期前進入延遲狀態，由 delay 正反器提供
正確的值給 main 正反器，而下一個時序週
期送出復原時序錯誤後的值。 
T-error
1
T-error
1
control
1
OR
T-error
2
T-error
2
control
2
bit 1
bit w
OR
T-error
b
T-error
b
control
b
OR
 
圖 4. T-error 架構的管線化連結設計。 
T-error 架構的應用能有效解決時序錯
誤，但只考慮到單一鏈結的情況，如果我們
要應用在具有回溯狀態或一條連結以上之
系統的電路，則就無法用 T-error 架構來實
現，而且 T-error 架構需要一個時序週期來
當復原代價，影響到往後進來的資料都須經
由延遲狀態輸入才能正常運作。 
本計畫提出了一個可容忍多重時序錯誤
的數位訊號處理積體電路設計，針對的不僅
是過去他人所提出的鏈結而已，而是可以應
用在規則化資料流動的積體電路上，例如數
位訊號處理的電路。我們將變更電路中的管
線緩衝器(pipeline buffer)架構，使得正
反器(flip-flop)組織能偵查出時序錯誤，
並針對電路中不同的路徑狀況，設計其相對
應的控制電路。此設計不但能夠將錯誤的資
料復原，並且不影響整體管線的正常運作，
本計畫提出了一個可在多重時序錯誤發
生時，仍能持續正常工作的數位訊號處理電路
設計，我們將變更數位訊號處理電路中的管線
緩衝器 (pipeline buffer)，使得正反器
(flip-flop)組織能偵查出時序錯誤，並針對
電路中不同的路徑狀況，設計其相對應的控制
電路。我們設計了應用於許多數位訊號處理的
電路上，包括 FIR、IIR、systolic arrays
等電路，並且實作不同位元數資料的版本來做
比較，以驗證電路擁有時序錯誤的容忍性。 
 
五、參考文獻 
[1] H. Asadi and M.B. Tahoori, “Soft Error Hardening for 
Logic-Level Designs,” Proceedings of IEEE 
International Symposium on Circuits and Systems, pp. 
4, May, 2006. 
[2] M. Fazeli, A. Patooghy, S.G. Miremadi and A. Ejlali, 
“Feedback Redundancy: A Power Efficient 
SEU-Tolerant Latch Design for Deep Sub-Micron 
Technologies,” Proceedings of IEEE/IFIP 
International Conference on Dependable Systems and 
Networks, pp. 276-285, June, 2007. 
[3] A. Floros, Y. Tsiatouhas, A. Arapoyanni and Th. 
Haniotakis, “A Pipeline Architecture Incorporating a 
Low-Cost Error Detection and Correction 
Mechanism,” Proceedings of 13th IEEE International 
Conference on Electronics Circuits and Systems, 
pp.692-695, December, 2006. 
[4] A. Goel, S. Bhunia, H. Mahmoodi and K. Roy, 
“Low-Overhead Design of Soft-Error-Tolerant Scan 
Flip-Flops with Enhanced-Scan Capability,” 
Proceedings of Design Automation Asia and South 
Pacific Conference, January, 2006. 
[5] R. Guo and S. Venkataraman, “A Technique for Fault 
Diagnosis of Defects in Scan Chains,” Proceedings of 
IEEE International Test Conference, pp.268-277, 
November, 2001. 
[6] Y. Huang, W.T. Cheng, S.M. Reddy, C.J. Hsieh and 
Y.T. Hung, “Statistical Diagnosis for Intermittent Scan 
Chain Hold-Time Fault,” Proceedings of IEEE 
International Test Conference, Vol. 1, pp.319-328, 
September, 2003. 
[7] R.K. Iyer, N.M Nakka, Z.T. Kalbarczyk and S. Mitra, 
“Recent Advances and New Avenues in 
Hardware-Level Reliability Support,” IEEE Micro, 
Vol. 25, No. 6, pp. 18-29, 2005. 
[8] J.C.M. Li, “Diagnosis of Multiple Hold-Time and 
Setup-Time Faults in Scan Chains,” Proceedings of 
IEEE Transactions on Computers, Vol. 54, No. 11, 
pp.1467-1472, November, 2005. 
[9] J.C.M. Li, “Diagnosis of Single Stuck-at Faults and 
Multiple Timing Faults in Scan Chains,” Proceedings 
of IEEE Transactions on Very Large Scale Integration 
Systems, Vol. 13, No. 6, pp.708-718, June, 2005. 
[10] S. Mitra, N. Seifert, M. Zhang, Q. Shi and K.S. Kim, 
“Robust System Design with Built-In Soft Error 
Resilience,” Proceedings of IEEE Transactions on 
Computer, Vol. 38, No. 2, pp. 43-52, February, 2005. 
[11] S. Mitra, M. Zhang, T.M. Mak, N. Seifert, V. Zia and 
K.S. Kim, “Logic Soft Errors: A Major Barrier to 
Robust Platform Design,” Proceedings of IEEE 
International Test Conference, pp.10, November, 
2005. 
[12] S. Mitra, M. Zhang, N. Seifert, B. Gill, S. Waqas and 
K.S. Kim, “Combinational Logic Soft Error 
Correction,” Proceedings of IEEE International Test 
Conference, pp1-9, October, 2006. 
[13] S. Mitra, M. Zhang, N. Seifert, T.M. Mak and K. Kim, 
“Soft Error Resilient System Design through Error 
Correction,” Proceedings of IFIP International 
Conference on Very Large Scale Integration, 
pp.332-337, October, 2006. 
[14] S.M. Reddy, I. Pomeranz, S. Kajihara, A. Murakami, 
S. Takeoka and M. Ohta, “On Validating Data Hold 
Times for Flip-Flops in Sequential Circuits,” 
Proceedings of IEEE International Test Conference, 
pp. 317-325, October, 2000. 
[15] Y. Sasaki, K. Namba and H. Ito, “Soft Error Masking 
Circuit and Latch Using Schmitt Trigger Circuit,” 
Proceedings of IEEE International Symposium on 
Defect and Fault Tolerance in VLSI Systems, 
pp.327-335, October, 2006. 
  ISOCC 2011 
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                   日期：100年 12月 10日 
                                 
一、參加會議經過 
本會議為國際系統晶片設計會議會議(ISOCC 2011)，舉辦地點是在韓國濟州島的
濟州市(Jeju)。ISOCC 是一個近年因應系統晶片趨勢而興起的國際會議，涵蓋了許
多超大型積體電路系統尤其是系統晶片設計的研究課題。 
本屆會議所研討的課題相當廣，主要包括 Low-Power Integrated Circuit Design, 
High-Speed and Power-Aware Circuit Techniques for Future Integrated Systems, Low-
Density Parity-Check Code, Data Converter, RF Front-End Circuits for SoC and SiP, 3D 
Stacking, SOC Testing/Verification, Signal Integrity, SoC Design Methodology, Low 
Power Design Techniques, Architectural Reconfiguration and Customization for 
Embedded Systems, Microprocessor and DSP Architectures, RF Techniques, Display 
Drivers and Multimedia SoCs, Analog Techniques, Design and Analysis for Integrated 
Circuits and Systems, Communication SoCs，另外並有 Keynote Speeches, Plenary, Chip 
Design Contest, Demo, and Panel 等。參加的學者以亞洲為最多，另外也有來自歐美
各國的學者。 
計畫編號 NSC 100－2221－E－259－028 
計畫名稱 具容忍多重時序錯誤之數位訊號處理系統 
出國人員
姓名 
紀新洲 
服務機構
及職稱 
國立東華大學資工系副教授 
會議時間 
100年 11月 17
日至 100年 11月
18日 
會議地點 
 
韓國濟州(Jeju) 
會議名稱 
(中文) 國際系統晶片設計會議 
(英文) International SoC Design Conference 
發表論文
題目 
(中文) 矩陣乘法之容忍時序錯誤的心脈陣列設計 
(英文) Design of Timing-Error-Resilient Systolic Arrays for Matrix 
Multiplication 
   
 
From: =?ks_c_5601-1987?B?wLGxpLy3?= <ksyoon@inha.ac.kr> 
To: "Chi Hsin-Chou" <hcchi@mail.ndhu.edu.tw> 
Subject: ISOCC 2011 notification 
Date: Wed, 2 Nov 2011 20:57:36 +0900 
 
Dear Speakers, 
 
 
I appreciate your contribution to ISOCC 2011. The conference program is now posted at http://www.isocc.org. 
Please check your session and schedule. 
 
The Speakers have to be seated 10 minutes before the session starts. Please introduce yourself and give your bio 
to the session chair. You can use the bio form attached in this mail. The paper presentation time is fixed to 15 
minutes including Q & A. 
 
If you didn’t submit your presentation material yet, please upload it to www.isocc.org as soon as possible. 
 
I look forward to seeing you at Jeju island, Korea. 
 
 
Best Regards, 
 
Kwang Sub Yoon 
Technical Program Chair, ISOCC 2011  
  Presenters-bio-2011  
 
 
 
 
 
   
multiplication problem, where the result c elements stay in the 
cell [11]. Such orthogonally connected systolic array is shown 
in Fig. 3. In each cell of an orthogonally connected systolic 
array, the c element stays in the cell and accumulates the 
multiplication result of the arriving a and b elements. Note that 
after the computation is finished, the c elements may need time 
to be pumped out to obtain the results at the outside. 
a11
a21
a31
0
0
a12
a22
a32
a42
0
0
a23
a33
a43
a53
0
0
a34
a44
0
0
0
0
a45
0
b1
b2
b3
b4
b5
=
c1
c2
c3
c4
c5
 
a11
a12 a21
a31a22
a32a23
a33
a34 a43
a42
a44 a53
a45
b1
c1 c2...
b2...b3
 
Figure 1. Linearly connected systolic array for band matrix multiplication. 
a11
a21
a31
0
a12
a22
a32
a42
0
a23
a33
0
0
0
a34
0
b11
b21
0
0
b12
b22
b32
0
b13
b23
b33
b43
0
b24
b34
0
0
0
b35
0
=
c11
c21
c31
c41
c12
c22
c32
c42
c13
c23
c33
c43
c14
c24
c34
c44
c15
c25
c35
c45
 
 
a12
a21
a22a32
a42
a31
a23a33
a34
b23
b13
b22b21 b24
b12
b33b32
b43
b34 b35
c43
c33
c31
c41 c23
c42
c22
c21 c12
c13
c24
c32 c14
c25c34
c44 c35
a11 b11
c11
 
Figure 2. Hexagonally connected systolic array for band matrix multiplication. 
P5P4 P6
P9P8P7
P1 P2 P3
b11
b21
b31
b12
b22
b32
b13
b23
b33
a11a12a13
a21a22a23
a31a32a33
 
Figure 3. Orthogonally connected systolic array for matrix multiplicatioin. 
The c elements stay in the corresponding cell. 
Fig. 4 shows the basic organization of the cell for the 
linearly connected systolic array. The cell for the hexagonally 
connected systolic array, shown in Fig. 5, is almost the same. 
The only difference is that there is a Register A at the output in 
the cell for the hexagonally connected systolic array. Note that 
the latching registers A, B, and C can be either at the inputs or 
at the outputs. The designs in Fig. 4 and Fig. 5 use output 
registers.  
Multiplier
Adder
cin
ain
aout
bout
bin
Register B
Register C
cout
 
Figure 4. Basic organization of the cell for the linearly connected systolic 
arrays. 
Register A
Multiplier
Adder
cin
ain
bin
cout
aout
bout
R
eg
is
te
r 
B
R
egister C
 
Figure 5. Basic organization of the cell for the hexagonally connected systolic 
arrays. 
The basic organization of the cell used in the orthogonally 
connected systolic array is shown in Fig. 6. While the elements 
a and b pass through the cell each cycle, the result element c 
stays in the cell and accumulates the product of incoming a and 
b. Note that input registers instead of output registers are used 
in the Fig. 6. 
   
The design described above can be used in both linearly 
connected systolic arrays and hexagonally connected systolic 
arrays. Furthermore, our design can tolerate not only single but 
also multiple timing errors. For the orthogonally connected 
systolic arrays, the design is relatively simple since the result of 
the multiply-accumulate operation stays in the cell. The data 
flows for the a and b elements have the same timing, and there 
is no need to facilitate delay or catch-up operation for them. 
IV. IMPLEMENTATION 
To study the impact of supporting tolerance of multiple 
timing errors, we have designed and implemented linearly 
connected, hexagonally connected, and orthogonally connected 
systolic arrays for matrix multiplication. Both pure systolic 
architectures and error-resilient systolic architectures are 
implemented with TSMC 90nm technology for comparison. 
The size of the data elements is 32 bits. There are 8 cells, 16 
cells, and 9 cells for the linearly connected, hexagonally 
connected, and orthogonally connected systolic arrays for 
implementation, respectively. The results for larger arrays can 
be obtained readily due to regularity of the architectures. 
Table I, II, and III show the clock rate, core area, and power 
consumption for pure and error-resilient systolic arrays for 
matrix multiplication. The overheads for tolerance of timing 
errors in speed, area, and power are 20.9%, 16.1%, and 23.7%, 
respectively, for the linearly connected systolic arrays. The 
overheads for tolerance of timing errors in speed, area, and 
power are 22.2%, 30.9%, and 27.2%, respectively, for the 
hexagonally connected systolic arrays. For the orthogonally 
connected systolic arrays, the overheads for tolerance of timing 
errors in speed, area, and power are 0%, 16.9%, and 26.1%, 
respectively. 
TABLE I.  LINEARLY CONNECTED 8-CELL IMPLEMENTATION 
Systolic Array Design Clock Rate Core Area Power Consumption 
Original LC 526MHz 176,740µm2 24.9mW 
Error-Resilient LC 435MHz 205,207µm2 30.8mW 
Overhead 20.9% 16.1% 23.7% 
TABLE II.  HEXAGONALLY CONNECTED 16-CELL IMPLEMENTATION 
Systolic Array Design Clock Rate Core Area Power Consumption 
Original LC 526MHz 336,125µm2 51.4mW 
Error-Resilient LC 455MHz 440,102µm2 65,4mW 
Overhead 22.2% 30.9% 27.2% 
TABLE III.  ORTHOGONALLY CONNECTED 9-CELL IMPLEMENTATION 
Systolic Array Design Clock Rate Core Area Power Consumption 
Original LC 556MHz 227,182µm2 32.6mW 
Error-Resilient LC 556MHz 265,471µm2 41.1mW 
Overhead 0% 16.9% 26.1% 
In general, the overhead for timing-error-resilient designs is 
not costly for core area and power consumption. Furthermore, 
the increase of the clock period is also reasonable for each 
systolic architecture. In particular, the clock rate of the 
orthogonally connected design is the same when including the 
capability of tolerating timing errors. The reason for this is that 
in the cell of the orthogonally connected systolic array, the 
modified design does not add delay to the critical path. 
V. SUMMARY AND CONCLUSIONS 
Conventional conservative circuit design suffers poor 
system performance with advanced semiconductor technology 
due to process variation and noises. Aggressive approaches 
with better-than-worst-case design have been proposed to 
overcome the problem.  In this paper, we have presented the 
designs of timing-error-resilient systolic arrays for matrix 
multiplication. With the proposed modified basic cells, the 
systolic array can reconfigure the cells to adapt to the “skewed” 
data flows when timing errors occur. Furthermore, our design 
can even tolerate multiple timing errors. Three timing-error-
resilient architectures have been described, including linearly 
connected, hexagonally connected, and orthogonally connected 
architectures. 
Our implementation results show that the overheads for 
timing-error-resilient designs are not costly for core area and 
power consumption. Furthermore, the increase of the clock 
period is also reasonable for each systolic architecture.  Among 
the three architectures, the orthogonally connected architecture 
has no extra clock period overhead, and is particularly suitable 
for the timing-error-resilient design of systolic arrays for 
matrix multiplication. Finally, our design methodologies can be 
applied to the design of systolic arrays for many other 
applications, too. 
REFERENCES 
[1] S. Borkar, T. Karnik, S. Narendra, J. Tschanz, A. Keshavarzi, and V. De, 
“Parameter Variation and Impact on Circuits and Microarchitecture,” 
Proc. Design Automation Conf., pp.338-342, 2003. 
[2] T. Austin, V. Bertacco, D. Blaauw, and T. Mudge, “Opportunities and 
Challenges for Better Than Worst-Case Design,” Proc. Asia and South 
Pacific Design Automation Conf., Jan. 2005. 
[3] J. Cong and K. Minkovich, “Logic Synthesis for Better Than Worst-
Case Designs,” Proc. Int’l Symp. VLSI Design, Automation and Test, pp. 
166-169, Apr. 2009. 
[4] D. Ernst, S. Pant, R. Rao, C. Ziesler, D. Blaauw, T. Austin, K. Floutner, 
and T. Mudge, “Razor: A Low-Power Pipeline Based on Circuit-Level 
Timing Speculation,” Proc. IEEE/ACM Int’l Symp. Microarchitecture, 
pp. 7-18, 2003. 
[5] R. Tamhankar, S. Murali, and G.D. Micheli, “Performance Driven 
Reliable Link for Networks on Chips,” Proc. Asia and South Pacific 
Design Automation Conf., pp. 749-754, Jan. 2005. 
[6] R. Tamhankar, S. Murali, S. Stergiou, A. Pullini, F. Angiolini, L. Benini, 
and G.D. Micheli, “Timing-Error-Tolerant Network-on-Chip Design 
Methodology,” IEEE Trans. Computer-Aided Design of Integrated 
Circuits and Systems, pp. 1297-1310, July 2007. 
[7] S. Mitra, N. Seifert, M. Zhang, Q. Shi, and K.S. Kim, “Robust System 
Design with Built-In Soft Error Resilience,” IEEE Computer, pp. 43-52, 
Feb. 2005. 
[8] S. Mitra, M. Zhang, N. Seifert, T.M. Mak, and K. Kim, “Soft Error 
Resilient System Design Through Error Correction,” Proc. IFIP Int’l 
Conf.  Very Large Scale Integration, pp. 332-337, Oct. 2006. 
[9] H.T. Kung, “Why Systolic Architecture?” Proc. IEEE Int’l Test Conf., 
pp. 37-46, 1982. 
[10] H.T. Kung and C.E. Leiserson, “Algorithms for VLSI Processor 
Arrays,” Introduction to VLSI Systems, Chapter 8, Addison-Wesley, 
1979. 
[11] J.C. Tsay and P.Y. Chang, “Some New Designs of 2-D Array for Matrix 
Multiplication and Transitive Closure,” IEEE Trans. Parallel and 
Distributed Systems, vol. 6, no. 4, Apr. 1995. 
   
中國的大陸的學者特別多，我是唯一的 ICESS-2012 台灣參加者(不包括附屬的
Workshops)， 而 ICESS-2012 所附屬的 Workshop on Embedded Multi-Core 
Computing and Applications 則有許多台灣學者參與。 
Keynote Speeches 包括有 Utility-based Routing and its Application in 
Dynamic Wireless Networks、 Cyber Security、 Detection of and Defense 
Against Distributed Denial-of-Service (DDoS) Attacks 、 Complexity 
Science Takes Charge of Viral Infections、 Partitioning Graphs for a 
Reconfigurable Topology、Future Internet Technologies: From Access to 
Core。與我的研究領域較有相關的是 Utility-based Routing and its 
Application in Dynamic Wireless Networks 嵌入式軟體與系統 Partitioning 
Graphs for a Reconfigurable Topology、 Future Internet Technologies: 
From Access to Core。 
我們的論文發表是在會議的第二天下午的 Session – Embedded Systems 
Architecture。同一 Session 的論文發表者除了我來自台灣，還有有來自美
國、中國、日本與韓國等國的學者，論文的題目大都是先進的嵌入式系統硬體的
設 計 課 題 ， 如 : Network-on-Chip Architectures 、 Embedded System CPU 
Design、Wireless Sensor Networks、Robotics 等。在口頭報告完畢之後，現
場聽眾也與我有一些問題上的討論，討論最多的是來自中國大陸的學者。 
 
二、與會心得 
參加這次會議最大的心得是學術圈是個密切往來的次社會，各國的學者交流
比以往更密集與頻繁。由參加這次會議的機會，也多認識了許多學者。參加這類
的國際會議活動，增加了我們在國際間的曝光度，並為以後的交流奠定了些基
礎。另外，由與其他國家的學者與產業界代表的互動討論的過程中，也可以學習
他人的經驗與觀摩別人的優點。 
   
Date: Sun, 22 Apr 2012 12:48:13 -0300 
Message-Id: <201204221548.q3MFmDuw027540@cse.stfx.ca> 
To: hcchi@mail.ndhu.edu.tw 
Subject: ICESS-2012 Status of paper 153 
From: icess_2012@googlegroups.com 
Cc: icess_2012@googlegroups.com 
Reply-to: icess_2012@googlegroups.com 
 
Dear  Hsin-Chou Chi,  Jr-Fen Ferng,  Yu-Chen Hsieh 
 
First of all, thank you very much for submitting your paper to the 9th IEEE International Conference on 
Embedded Software and Systems (ICESS-2012) to be held in Liverpool, UK, 25-27 June 2012. 
 
Based on the peer-review results, we are pleased to inform you that your paper  
 
Paper ID: ICESS-153 
Title:  Area Utilization Based Mapping for Network-on-Chip Architectures with Over-Sized IP Cores 
Authors:  Hsin-Chou Chi,  Jr-Fen Ferng,  Yu-Chen Hsieh 
 
has been accepted for the oral presentation at the conference and will be published in the conference 
proceedings by IEEE Computer Society press. Congratulations for your excellent work! We have 
received a large number of submissions. All papers were carefully peer-reviewed and ranked according 
to their original contribution, quality, presentation and relevance to the themes of the conference. At end, 
less than 30% high-quality papers have been selected. 
 
In order to achieve the highest quality proceedings, please consider carefully the reviewers' comments if 
any (attached at the end of this email) when preparing the final version of your contribution. 
 
All detailed information on deadlines, author instructions and final ready uploading, registrations, and 
hotel reservation will be available soon at ICESS-2012 web site: 
http://www.scim.brad.ac.uk/~hmibrahi/ICESS2012/ 
 
Please be aware of the following Important Dates: 
------------------------------- 
Camera-Ready Paper Submission Due: 13 May 2012 
Registration Due:  15 May 2012 
-------------------------------- 
 
The camera-Ready Paper should follow the IEEE CS two-column 8.5" x 11" format with 8 pages for 
main conference and 6 pages for workshops/symposia. 2 additional pages are allowed to purchase with 
GBP 80 per page. The detailed style files for LATEX or WORD can be found at: 
http://www.computer.org/portal/web/cscps/formatting 
 
   
Area Utilization Based Mapping for Network-on-Chip Architectures 
with Over-Sized IP Cores 
 
Hsin-Chou Chi
1,2
, Jr-Fen Ferng
1
, and Yu-Chen Hsieh
1
 
1 
Department of Computer Science and Information Engineering 
2 
Institute of Electronics Engineering 
National Dong Hwa University 
Hualien, Taiwan 
E-mail: hcchi@mail.ndhu.edu.tw 
 
 
Abstract—Network-on-chip (NoC) architectures have been 
recently proposed as the communication framework for large-
scale chips. A well-designed NoC architecture can facilitate the 
IP cores to communicate with each other efficiently. In this 
paper, we propose a systematic mapping scheme, called area 
utilization based mapping (AUBM), to map the IP cores from 
the communication core graph to the mesh network. In AUBM, 
the IP cores can be of various sizes. Extensive experiments 
have been conducted for evaluating the mapping schemes. 
AUBM is compared with previously proposed schemes for 
different applications as well as synthetic workloads. Our 
experiment results show that AUBM outperforms others in 
almost all cases in terms of the mapping cost involving traffic 
volume and chip area. 
Keywords- IP mapping; network-on-chip architectures; SoC 
design; routing switches; communication core graph 
VI.  INTRODUCTION 
System-on-a-chip (SoC) designs provide designers to 
integrate dozens or hundreds of IP cores together in a single 
chip. These IP cores can be a processor, hardware accelerator, 
FPGA block, or embedded memory. With fast advance of 
semiconductor technology, a single chip can accommodate 
up to billions of transistors. With the number of IP cores in a 
chip rapidly growing, the interconnection of IP cores has 
become a critical issue for SoC design. 
Dedicated wiring and shard bus are popular for the on-
chip interconnect in traditional VLSI chips. However, these 
two approaches lack flexibility and scalability for large-scale 
SoC. To overcome such on-chip communication problems 
for large-sclae SoC, the network-on-chip (NoC) architecture 
based on regular tiles has been proposed for interconnecting 
IP cores. Such an on-chip network provides a high-
performance chip-level communication infrastructure with 
regularity and modularity [1, 2, 3, 4, 5, 6, 7, 8, 9]. 
One of the main problems in NoC design is mapping of 
IP cores [10, 11, 12]. The communication between IP cores 
in SoC can be represented by a communication core graph. 
In the graph, the vertex stands for an IP core, while the edge 
stands for communication between IP cores. A weight can be 
associated with an edge to indicate the bandwidth 
requirement of the corresponding communication flow. Each 
IP core is required to be mapped to a proper tile in the 
network in order to meet the communication requirements 
for the core graph. 
Fig. 1 shows an example for the IP core mapping 
problem. In the figure, each core running one or multiple 
tasks is mapped to an associated tile from the communication 
core graph to the 2D mesh on-chip network. Each tile in the 
on-chip network typically consists of a mapped IP core and 
an associated routing switch. The network is typically 
packet-switched and the communication paths for pairs of 
tiles can share the whole set of links in the network 
dynamically. Power consumption and cost of the on-chip 
network are affected by the mapping algorithm significantly.  
Mapping 
00 01 02
10 11 12
20 21 22
A
C B
D
E F G H
CPU1
ASIC1
CPU2
Memory
DSP1
DSP2 I/O 
Controller
Communication Core Graph On-chip Network
ASIC2
 
Figure 1.  Mapping problem for NoC architectures. 
Many solutions have been proposed for IP core mapping 
with NoC design in recent research studies [10, 11, 12, 13]. 
However, most of the proposed techniques aim at mapping 
for regular mesh networks where each IP core is fitted into a 
uniform-sized tile. However, IP cores can be of various sizes 
in reality. Hence, the mapping problem for NoC 
architectures with over-sized IP cores is more practical but 
yet more challenging. 
In this paper, we address the mapping problem for 2D 
mesh on-chip networks with over-sized IP cores. We propose 
a mapping scheme to minimize both power consumption and 
area for the network. The next section describes the mapping 
problem of IP cores for on-chip networks. An effective 
   
area of multiple unit tiles (smallest tiles) in the NoC 
architecture. 
In Fig. 3, the circle indicates a routing switch, while the 
rectangular indicates an IP core. There are two kinds of 
switches. The switch indicated by a black circle is an access 
switch, which connects to an associated IP core besides its 
neighboring switches. The switch indicated by a white circle 
is a bypass switch, which routes packets but does not have a 
connected IP core.  
5 4
3 1
7
9
8
2 6
 
Figure 3.  A mapped NoC architecture from the communication core 
graph in Fig. 2. 
In the NoC architecture with over-sized IP cores, the 
importance of the area consumed by the mapped on-chip 
network becomes more pronounced due to the irregularity of 
the network. Hence, a new cost metric involving both 
communication and area for the NoC architecture is more 
appropriate. The cost function defined in the following is 
used in this paper: 
CAcost = Ccost  Area = 
lk
lkji hw
,
,,  Area          (3) 
if   ki vuMap   and   lj vuMap  , and lkh ,  is the hop count 
of the routing path from Tile kv  to Tile lv . 
It can be seen that he hop count of the routing path is a 
key to the contributed communication cost. The hop count of 
each routing path is strongly affected by the placement of the 
IP cores in the network. Furthermore, due to the irregularity 
of the IP cores, different IP core placement results determine 
the network area. Hence, the IP mapping scheme impacts the 
CAcost significantly. 
VIII. OUR SCHEME FOR IP CORE MAPPING 
In this section, we present our design for IP core mapping 
for NoC architectures with over-sized IP cores. Our mapping 
scheme is called area utilization based mapping (AUBM). 
The whole mapping scheme is described in the following 
two stages: 
A. Pre-mapping 
There are two sets for the IP core mapping during this 
stage: N and M. N is the set of the unmapped IP cores, while 
M is the set of mapped IP cores. Initially, N is empty and M 
contains all the IP cores. Calculate the required bandwidth of 
the communication flow of each IP core with all the other IP 
cores, including inward and outward traffic. Find out which 
IP core has the highest bandwidth of the communication 
flow with the other IP cores. Select this IP core, and move it 
from N to M. 
B. Mapping 
In the mapping stage, we have the following steps: 
Step 1: Select from N the IP core which has the highest 
total required bandwidth with all the IP cores in M. 
Step 2: Move the selected IP core from N to M. 
Step 3: Merge the IP core to the connected NoC 
architecture with different positions and 
different orientations, through circling the IP 
core around the connected NoC architecture. 
Calculate the mapping cost for each 
configuration. 
Step 4: Choose the configuration with the lowest 
mapping cost. 
Step 5: If N is empty, then terminate. Otherwise, go 
back to Step 1. 
In our design, we use the mapping cost function Mcost 
defined as the CAcost of the mapped NoC architecture over 
the area utilization ratio (AUR). The AUR is equal to the 
area occupied by the mapped IP cores over the area of the 
rectangular frame accommodating the mapped NoC 
architecture. That is: 
Mcost = CAcost / AUR                       (4) 
AUR is an indicator for how much unused area is wasted. 
During the merging process, AUR is used to help guide the 
selection of the merged network configuration.  
The following example demonstrates the mapping cost 
for different configurations of the mapped NoC architecture. 
Fig. 4 shows two IP cores to be merged, while Fig. 5 shows 
two different configurations for the mapping case in Fig. 4. 
This example is a special case for simplicity. In general, one 
of the two IP cores in Fig. 4 is typically a partial NoC 
architecture with multiple IP cores integrated. 
 
Figure 4.  Two IP cores to be merged. 
   
0
50000
100000
150000
MPEG-4 VOPD MWA
CAcost
PBB
BMAP
Onyx
FMAP
AUBM
 
Figure 10.  CAcost for three real-world applications. IP cores of unit size. 
Shortest-path routing used. 
0
2000000
4000000
6000000
MPEG-4 VOPD MWA
CAcost
PBB
BMAP
Onyx
FMAP
AUBM
 
Figure 11.  CAcost for three real-world applications. IP cores of practical 
sizes. Shortest-path routing used. 
Fig. 12 and Fig. 13 show the experiment results for the 
three real-world applications again but with the deadlock-
free TRAIN routing. Again, the results demonstrate that our 
AUBM consistently achieves lower CAcost than the other 
schemes in almost every case. Also, AUBM only has a 
slightly higher CAcost in VOPD when the IP cores are of 
unit size. 
0
50000
100000
150000
MPEG-4 VOPD MWA
CAcost
PBB
BMAP
Onyx
FMAP
AUBM
 
Figure 12.  CAcost for three real-world applications. IP cores of unit size. 
TRAIN routing used. 
0
2000000
4000000
6000000
MPEG-4 VOPD MWA
CAcost
PBB
BMAP
Onyx
FMAP
AUBM
 
Figure 13.  CAcost for three real-world applications. IP cores of practical 
sizes. TRAIN routing used. 
Fig. 14 and Fig. 15 show the experiment results for 
synthetic communication core graphs with 16, 32, and 64 
cores. The IP cores are of various sizes. The shortest-path 
routing is assumed. The results demonstrate that our AUBM 
consistently achieves lower CAcost than all other schemes. 
Fig. 16 and Fig. 17 show the experiment results for 
synthetic communication core graphs with 16, 32, and 64 
cores. The IP cores are of various sizes. TRAIN routing is 
assumed. Again, the results show that our AUBM has lower 
CAcost than all other schemes. 
Basically, based on the experiment results in the above, 
our AUBM outperforms all other mapping schemes 
previously proposed in terms of CAcost consistently. AUBM 
has only slightly higher CAcost in the VOPD case when the 
IP cores are of the unit size, which is typically not practical. 
 
0
200000
400000
600000
16 nodes 32 nodes
CAcost
PBB
BMAP
Onyx
FMAP
AUBM
 
Figure 14.  CAcost for syntheic communication core graphs with 16 and 32 
cores. IP cores of various sizes. Shortest-path routing used. 
   
[26] H. C. Chi, Y. H. Jhang, and W. S. Chen, “Tree-Based Routing for 
Faulty On-Chip Networks with Mesh Topology,” Proc. IEEE 
Computer Society Annual Symposium on VLSI, Lixouri, July 2010. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：紀新洲 計畫編號：100-2221-E-259-028- 
計畫名稱：具容忍多重時序錯誤之數位訊號處理系統 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 3 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
