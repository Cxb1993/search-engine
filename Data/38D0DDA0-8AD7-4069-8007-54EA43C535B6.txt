中   華   民   國  99年  5月   30日 
行政院國家科學委員會專題研究計畫成果報告 
計畫名稱：嵌入式網路通訊裝置評比技術與工具之研發 - 子計畫一： 
嵌入式網路通訊裝置應用效能評比技術與工具之研發 
計畫編號：NSC 98-2220-E-009-049 
執行期限：2009年 8月 1日至 2010年 7月 31日 
主持人：林盈達 
計畫參與人員：甘東杰 吳金龍 陳一瑋 江易達 陳李睿 
國立交通大學資訊工程系 
 
1. 摘要 
  嵌入式系統平台已被大量應用在商用
及家用產品上如 PDA和WiFi Phone，但是
對於嵌入式系統網路裝置在使用者端的應
用效能上卻缺乏可用的測試工具，廠商在開
發產品之後無法精確得到其效能，當產品有
關於效能方面的問題也無從得知可以改善
的方式，為此，開發「嵌入式系統網路通訊
裝置應用效能評比工具」，除了要提供黑箱
測試數據外，更應設計對於開發者可進行加
強以及偵錯的灰箱及白箱測試，協助開發者
清楚了解產品在使用者端所遇到的缺點以
及相關改進的方法。 
  本計畫開發的項目，是針對目前熱門的
嵌入式系統網路通訊產品，進行相關網路應
用服務效能評比(如 : Throughput, Session 
Capacity, Session Rate, Voice Quality )，利用
NBL現有的工具以及 Open Source軟體，以
Repeatable、Scalable、Automatic、Integrated
等四個條件為前提，進行 1. 測試計畫及方
法之研發, 2. 對測試設備無依賴性之測試
工具研發, 3. 整合型測試工具研發，配合總
計畫提供的共通測試平台，提供各種不同層
級的背景流量，更能貼近實際上使用者端使
用的環境，在測試工具的開發規劃裡，預計
進行兩項測試工具的開發，其中包括：連線
量測試工具、SSL VPN連線量測試工具以及
語音品質整合測試工具，這些都是目前所所
缺乏的應用效能測試工。達成對嵌入式網路
通訊裝置進行完整效能的測試及評比，除了
能幫助產品開發者進行效能改進及選擇適
合使用的元件平台，亦可做為學術上進行相
關研究時有實際上產品的數據供做先進技
術的研發，並將此系統原始碼公開，提供開
放原始碼社群使用及研究。 
 
關鍵詞： 嵌入式系統、網路通訊裝置、網
路應用服務效能、開放原始碼 
 
2. 緣由與目的 
  晶片設計以及製程技術的進步，晶片組
以及其相關整合產品效能不斷的提升且價
格更趨便宜，使得許多平常可見的商用或家
用產品皆可利用嵌入式系統實現之，尤其現
在更強調這些產品的網路連通性，以及彼此
之間與個人電腦和網際網路的整合性，網路
功能不再是個人電腦的專利，而是各項資訊
產品、家電等各種產品用來整合個人和公司
資訊及各項功能的方案；然而針對這類型的
整合性產品(ex: PDA, WiFi Phone)卻缺乏可
以進行嵌入式網路通訊系統效能評比的方
式，針對單一元件可以直接進行該元件測試
即可達成，然而對 System Vendor而言卻非
如此，Chip Vendor 可以經由單一晶片測試
達到其所需求的結果，但是 System Vendor
卻必須將目標放在產品的系統效能上，除此
Test 
Client 
SSLVPN 
裝置 
後端
Server
SSL VPN 
Tunnel 
用一台 PC製造出同時上千條的 SSL VPN 
tunnels。 
Traffic Generator – Background Traffic：除
了建立 SSL VPN tunnel外，也可產生網路流
量導入 SSL VPN tunnel中，如 HTTP、FTP..
等等。 
Controller：會使用一台 PC作為 controller，
controller 的功能一是用來 trigger traffic 
generators，二是用來抓取 DUT 上的
information 來判斷該次測試的結果是 Pass 
or Fail。 
SSLTC 之系統架構如下所示： 
 
 
 
 
 
 
在 Client上先執行 pptpd，然後執行測
試程式。測試程式會先登入 SSLVPN裝置，
認證成功後由 pptpd呼叫 pppd建立 ppp介
面，連到後端 server所在的 subnet，之後再
由測試程式透過建立好的 SSLVPN Tunnel
向後端 server抓取資料，驗證是否成功連線。 
目前支援 capacity及 throughput兩種測
試模式，capacity會不斷建立 tunnel，直到
指定的數量或是所有帳號都用完為止，每個
tunnel建立的間隔時間為 RATE。每個 tunnel
建立後，會依據指定的 TRAFFICRATE時間
間隔，向後端 server抓取資料，驗證 tunnel
是否正常。 
Throughput測試會先建立指定數量的
tunnel。等全部建立好後同時向後端 server
抓取資料。每條 tunnel會各自計算
throughput(總傳輸的資料量/(結束時間-開始
時間))，另外也會算總共的 throughput，以
全部 tunnel的傳輸量除以(所有傳輸完成時
間-開始傳輸時間)。 
目前支援 capacity及 throughput兩種測
試模式，capacity會不斷建立 tunnel，直到
指定的數量或是所有帳號都用完為止，每個
tunnel建立的間隔時間為 RATE。每個 tunnel
建立後，會依據指定的 TRAFFICRATE時間
間隔，向後端 server抓取資料，驗證 tunnel
是否正常。 
 
Throughput測試會先建立指定數量的
tunnel。等全部建立好後同時向後端 server
抓取資料。每條 tunnel會各自計算
throughput(總傳輸資料量/(結束時間-開始時
間))，另外也會算總共的 throughput，以全
部 tunnel的傳輸量除以(所有傳輸完成時間-
開始傳輸時間)，時間計算如下圖的 部
分。 
 
程式首先會讀取命令列參數，取得設定
檔名與要測試 tunnel數，如果不是前面列的
參數(如 TRAFFIC、RATE)，就建立一個 test 
instance，傳入帳號密碼及其他資訊，若密
碼後有接 IP(以,分隔)，則使用這組帳號密碼
連線時，會連到此 SSLVPN裝置，而不是
DEVICE指定的 IP。全部建好後，就依設定
的間隔執行。每一個 instance用一個 thread
跑，所以測試時會有很多個 thread同時跑。 
 
Tunnel建立流程如下: 
NIST-Net Controller：需能支援使用
NIST-Net控制對於網路環境的影響，如在收
話端與受話端之間 Traffic受環境影響的控
制，封包延遲或 Loss等條件，用以測試在
該環境下對於語音通話品質的影響。 
Background Traffic Generator：需能支援
在不同型態的Background Traffic之下，擷取
語音相關的封包進行語音品質測試，
Background Traffic可以為HTTP,FTP, or P2P 
etc.，藉以觀察在不同的traffic以及不同的
loading之下對Voice Quality的影響。 
Azimuth Platform(For Wireless Only)：利
用 Azimuth平台進行 RF Attenuator控制，可
以擬似對於WiFi Phone的移動模式，藉以
測試在移動狀態中的WiFi Phone對於 Voice 
Quality的影響，藉由本測試可以分析關於
WiFi Phone與 AP在移動態狀下的適應性，
由本測試可以進一步進行在移動中需進行
Roaming時，WiFi Phone對於 Roaming機制
的調適，選擇以何機制和時機進行 Roaming
的動作，以及在 Roaming的同時對於語音品
質的影響為何。 
Integrated Controller：上面的測試都是只
有針對單一的情況進行測試，但是這樣的測
試無法進行多次的重複使用，每次進行測試
時都要重新再設定不同的環境和不同的條
件及劇本，做一次測試要花費許多的時間進
行其它工具的設定，再者在動態設定的情況
下，會造成各工具之間 Timing的非同步，
造成測試不精確，因此本項目支援的目的是
要做到在測試時可以利用單一視窗介面，進
行對WiFi Phone, NIST-Net和 Azimuth同步
的控制以及批次處理。 
 
IVQT之整體系統架構如下所示： 
 
 
 
 
 
 
 
 
 
 
IVQT之自動化控制架構： 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
IVQT之程式架構與Work Flow： 
 
 
 
 
 
 
 
 
 
 
 
整個系統的軟體架構可以分成三部
份：Platform Controller、Traffic Controller
及 Traffic Parser，初始時可以利用 tcl進行對
VoIP產品與 AP間的距離，控制 Azimuth的
RF Module造成Voice Phone與AP之間有訊
號上的衰減等因子，透過距離與 RF訊號衰
減的公式，進行 RF訊號強度調整，同時套
用入距離動態調變，並啓動相關 module(ex: 
利用 chariot產生背景流量等)，而整個系統
啓動同時，VQT亦開始進行 voice quality的
量測，包含語音訊號產生、語音訊號傳送與
語音訊號品質量測等。最後會將測試的結果
及過程，將相關的記錄檔送至 Traffic Parser
進行後端的分析，以及語音量測分數產生，
達成對語音訊號品質量測的結果及報告。 
 
IVQT之 Stack Diagram(Platform)： 
 
 
