資源限制下 PERT 排程之風險評估架構 
 
曾清枝 
大葉大學企業管理研究所 
cctseng@mail.dyu.edu.tw 
摘要 
過去數十年來資源限制下專案排程問題(Resource Constrained Project Scheduling 
Problem, RCPSP)一直是學術界與實務界探討的重要議題。而在實務上作業工期
(activity duration)是不確定的(uncertain)，因而使得在不確定工期資源限制下專案
排程問題相對於RCPSP 變得更為複雜。因此本研究針對不確定工期資源限制下專案排程
問題試圖發展出一以模擬為基礎的演算法(simulation-based approach)，針對專案進
行過程的不確定性、以及決策所產生的風險與效益加以考量，以提升排程的準確性與有
效性。演算法包括二個階段：首先本研究採用Ingalls and Morrice (2004)所提出質性
模擬圖形法(Qualitative Simulation Graph Methodology, 簡稱QSGM)概念，以產生此
RCPSP 問題所有可能路徑。第二階段則依據某一特定目標函數(如最小平均專案工期)作
為決策準則，採取倒退刪除程序(backward-pruning procedure)刪去不佳分支(worse 
branch)後即可獲得一個縮小場景樹(reduced-scenario tree)，根據此我們簡單得到專
案平均工期以及每條路徑發生機率。接下來考量決策準則能反應專案經理或決策者對於
風險的直覺態度，也就是說依據專案管理者所期望獲得的結果與可承受的風險值來制
定。因此本研究使用Yang and Qiu (2005)所提出的EU-E (Expected Utility – Entropy 
model)作為決策準則。最後本研究就不同風險轉換係數探討不同客觀和主觀組合風險，
並分析其對應之排程風險。 
 
關鍵字：資源限制專案排程、不確定活動工期、場景樹、期望效用-螪模式 
 
Abstract 
In this research, we address a simulation-based approach for resource-constrained project 
scheduling problem (RCPSP) with stochastic durations. The duration of each activity is a 
random variable with a given density function. The approach consists of two stages: stage one 
is to use the concept of QSGM (Qualitative Simulation Graph Methodology) to build a set of 
paths for each deterministic RCPSP, generated by a configuration of activity durations. A path 
is defined as a possibly feasible sequence of activity events in the project. Then integrate all 
the possible paths, generated by a specified number of configurations, into a scenario tree. 
Stage two is a backward pruning procedure is subsequently adopted to eliminate the worse 
branches of the scenario tree according to the objective values. The procedure leads to the 
reduced scenario tree, based on which the expected project duration can be obtained, and the 
probability of each scenario is known. Also, we adopt a measure of risk—expected 
utility-entropy (EU-E) which can reflect a decision maker’s intuitive attitude toward risk as 
個架構所提供的資訊進行決策的考量，並發展專案控制計畫。 
  本文後續內容如下：第二節為RCPSP的發展簡介，並提出本研究的主要論點，第三
節介紹本研究所提出的排程與風險評估架構，說明架構內使用的相關技術與概念，解說
決策的流程，並提供範例說明，第四節將使用一個簡單的釋例呈現此架構運用的結果，
第五節為研究結論。 
 
2 RCPSP 的發展 
  大多的專案都存在資源有限的狀況，因此過去數十年來RCPSP一直是學術界與實務
界討論的熱門議題。面對這樣的問題解法通常分為兩大類型：採用最佳化技術來獲得最
佳排程，最佳化技術常採用0-1整數規劃(Zero-One programming)，這是由Pritsker, 
Watters and Wolfe (1969)首次提出，或使用啟發法來產生符合資源限制的近似最佳排
程，最早是由Wiest (1967)所提出。 
  由於RCPSP是屬於NP-hard problem，所以使用最佳化技術所需的龐大運算時間，限
制了其運用於較大型專案(通常為60個作業以上)時的效用，雖然近年來最佳化的技術已
經大幅改善，可參考Demeulemeester and Herroelen (1992, 1997)，Mingozzi et al. 
(1998)，Brucker et al.(1998)，Böttcher, Drexl, Kolisch and Salewski (1999)和
Sprecher (2000)的研究中，採取分支界限(Branch-and- Bound)的方法解決RCPSP的問
題。然而啟發法卻可更快速求得近似最佳解，並具有相當大的彈性，能夠與各種演算法
結合，因而促使大量的研究採用啟發法。 
  相對於最佳化的技術，啟發法是在解答的精確性、可延伸性以及易於執行之間做取
捨，這是因應最佳化的方式在NP-hard problem限制之下所產生求解時間過長的缺點，
而選擇在有效的時間內，求得可行的近似最佳解。 
  近年來大量RCPSP研究結合了各種啟發法與演算法，如Mori and Tseng (1997)，
Alcaraz and Maroto (2001) 與 Hartmann (1998,2002)使用基因演算法(genetic 
algorithm, GA)結合啟發法，隨後Hartmann and Kolisch (2000)，Kolisch and Hartmann 
(2006) 對各種啟發法進行分類並比較其表現後，提出未來應採基因演算進行發展的建
議。在Bouleimen and Lecocq (2003) 的研究裡則提出更新的模擬退火法(Simulated 
Annealing, SA)並與Hartmann and Kolisch (2000)的結果進行比較，Merkle et al.(2002)
首次應用螞蟻演算法(Ant systems)解決RCPSPS的問題，Fleszar and Hindi (2004) 使
用啟發法並參考各種的鄰域收尋法(neighbourhood search)對RCPSP問題進行探討，
Nonobe and Ibaraki (2002)應用禁忌搜索法(tabu search, TS)解決標準的RCPSP問題
並作出各種延伸Valls et al. (2003)採用tabu search 結合族群式(population-based)
的方法進行研究.。 
  然而RCPSP的發展過程總是圍繞在NP-hard problem的限制之上，首要目標多為尋找
較快的求解方法，因此時常簡化問題的複雜度以求得近似最佳解。但在計算機工程與演
算法高速發展的今日，運算速度已非昔日可比，加上各方研究的努力成果，使各類啟發
法的求解速度與結果的差異性逐漸縮小。這可能是一個轉變的機會，去嘗試執行更大量
的運算過程，以更加符合實際的專案需求。 
通衡量尺度來評估專案中的各種風險，並加總成為專案的整體風險。 
  最後，決策準則必須依據專案管理者所期望獲得的結果與可承受的風險值來制定。
因此本架構使用Yang and Qiu (2004)所提出的EU-E (Expected Utility - Entropy model)
決策與風險分析模型，EU-E是以Entropy與期望效用為基礎的風險評估與決策模型，結
合客觀的風險值與主觀的期望效用值，此模型可用來結合依據排程所產生的期望效用值
與風險評估值(entropy)。 
  此外，為了評估各種情境下的決策情形，本架構使用 Mummolo（1994）所提出的
PERT-path觀念，採樹狀圖形來描述專案可能的完成路徑。並根據PERT-path後續研究所
提出的方法，評估出專案的期望完成時間Pontrandolfo (2000)，以及排程的不確定性
Mummolo (1997)。在此PERT-path同樣使用Entropy的方式來描述風險，符合架構中的風
險評估模式，因此採用PERT-path的觀念來結合架構中的各種因素，以此對排程的情境
進行衡量，進而評估出EU-E決策模型所需的客觀風險值(Entropy)與主觀的期望值
(Expected value)。 
  圖1為本研究根據上述概念發展而成的排程與分析架構，此架構主要分為三大部
分：專案網路圖與邏輯建立、排程模擬、決策分析。最後輸出根據決策準則所產生的專
案風險值與期望值、最可能依循的完成路徑與依照情境所發展的樹狀排程圖。 
圖1 排程與風險分析架構 
 
專案作業資料
PERT 網路圖
 事件圖形
排程模擬
路徑發生機率 : pi
EU-E決策模型 
路徑產生的期望值:Xi
決策風險與期望值
最可能的完成路徑
專案的排程計劃表
建立專案監控計畫
所有專案可能路徑 
  專案網路圖就是以圖形的方法表示專案各作業之間的邏輯關係依存關係)。它可以
包括專案的全部作業，也可以只有一項或若干項簡短的作業，並附有簡要敘述，說明作
業基本資訊。 
  專案PERT圖是網路圖的一種具體形式，可建立專案作業的依存關係圖，以節點表示
作業之間的連結，作業本身則以箭號表示，此種描述法稱為AOA (activity-on-arrow) 。
另一種常用的圖解是將作業表示在節點上，而以箭號表示作業的關係，稱為
AON(activity-on-node)。 
圖 2 專案 PERT 圖，其中 t=(樂觀值,期望值,悲觀值)，r=資源需求量。 
 
  專案PERT圖是建立專案作業之間的依存關係的一種簡單工具，在加入各項作業工期
與資源使用量後，以簡單且明確的網路圖形呈現出專案作業的資訊，包含了各個作業之
間的依存關係，各項作業工期與資源使用量，如：圖2即為加入作業工期與資源使用量
的專案PERT圖。但這樣的表示法對於資源限制下專案的排程的問題難以提供更進一步的
資訊。為了後續的模擬分析，必須將專案PERT圖轉變成事件圖形表示法。 
 
3.3 事件圖形表示法 
圖3 利用專案PERT圖轉換後的事件圖形 
 
  由於PERT網路圖在有資源限制的專案中，無法提供足夠的資訊，為了描述出在資源
限制下作業排程的邏輯關係，Ingalls and Morrice, (2004) [16] 提出根據專案PERT
圖建立事件圖形(Even graph)的方法，解決多資源限制下的排程問題。依據作業執行的
條件，事件圖形可提供作業之間明確的邏輯關係，隨後的流程將依照此邏輯關係演算出
專案可行的完成路徑。以下對事件圖形做更詳盡的說明。 
  事件圖形表示法是將專案內作業情形以事件的方式表示，如：專案的起始、作業的
開始、作業的結束都被視為一個事件的發生，每個事件以節點表示，並以箭號表達事件
進行的邏輯與方向。 
  專案PERT圖轉換成事件圖形的方法並不困難，只要依循步驟，加上邏輯判斷式即
可。圖3即為依據圖2轉換成事件圖形的範例，下列為專案PERT圖轉換成事件圖形的主要
步驟： 
步驟一、 保留專案 PERT 圖中表示作業關係的連結點，改寫為事件觸擊點(Hit 
point)。 
步驟二、 在專案 PERT 圖中表示作業的箭號前後加上作業開始事件與結束事件兩節
點。 
步驟三、 於第一個節點前加入專案起始點(0)。 
步驟四、 使用箭號連結事件點與觸擊點。 
 
1 2
3
4
t=(1,3,5),r=1 t=(3,6,9),r=1
t=(10,13,19),r=1t=(3,6,9),r=2
圖4 包含邏輯關係的事件圖形 
 
觸擊點(H)：觸擊點可視為計數器，當有任何連結到觸擊點的事件完成時，觸擊點立即
被觸擊，並記錄被事件觸擊的次數。如圖4中H1被觸擊，代表專案初始完成，執行下列
邏輯運算式： 
111 += HH ：觸擊點1被觸擊，被觸擊次數增加1。 
( )1112 >== HQ ：若觸擊點1被觸擊的次數大於或等於1，則將Q12設定為1，允許作業1.2
執行。 
( )1113 >== HQ ：若觸擊點1被觸擊的次數大於或等於1，則將Q13設定為1，允許作業1.3
執行。 
 
作業起始點(S)：代表作業開始，並開始使用資源，因此可用資源減少，並限制作業再
次執行。此外，所有的作業起始點之前都會連結到觸擊點，如圖4中 S1.2事件發生，代
表作業1.2開始執行，執行下列邏輯運算式： 
1−= rr ：此作業使用資源1個單位，因此可用資源減少1個單位。 
012 =Q ：作業已執行，不允許再次被執行。 
 
作業完成點(F)：代表作業結束。所有作業完成點後都連有觸擊點，因此當作業完成時，
必定觸擊某個觸擊點，如圖4中F1.2事件發生，代表作業1.2完成，並釋出資源，執行下
列邏輯運算式：  
r = r + 1：可用資源增加1個單位 
3.4.2 箭號 
 
H 1
H 2
H 3
t= (1 ,3 ,5 )
t= (3 ,6 ,9 )
t= (1 0 ,1 3 ,1 9 )
t= (3 ,6 ,9 )
S 1 .2 F 1 .2
S 1 .3
S 2 .4
S 3 .4
F 1 .3
F 2 .4
F 3 .4
0
H 4
r= 2
H 1 = H 1 + 1
Q 1 2 = (H 1 > = 1 )
Q 1 3 = (H 1 > = 1 )
r= r-1
Q 1 2 = 0
r= r-2
Q 1 3 = 0
r= r-1
Q 2 4 = 0
r= r+ 1
r= r+ 2
r= r+ 1
Q 12
=  =
1 , r  
> = 1
Q 13=  =1 , r  >= 2
H 4 = H 4 + 1
E n d = (H 4 > = 2 )
r= r-1
Q 3 4 = 0 r= r+ 1
Q 2 4 =  = 1  ,  r> = 1
Q 3 4 =  = 1 ,  r> = 1
H 2 = H 2 + 1
Q 2 4 = (H 2 > = 1 )
H 3 = H 3 + 1
Q 3 4 = (H 3 > = 1 )
t=(1,3,5)
S1.2 F1.2
 
  作業完成點的事件發生時，會立即觸擊隨後連結的觸擊點，並進行觸擊點內的邏輯
運算。如圖8中，當F2.4或F3.4的事件發生時，便會立即觸擊到H4。 
  依照事件圖形建立的邏輯關係，事件會依照邏輯關係依序進行，直至所有的事件皆
發生為止。在上述範例中，當最後的事件F2.4與F3.4皆完成後，最後的觸擊點H4累計的
觸擊數為2次，即表示專案內所有作業皆已被完成，如圖8所示。 
  在Ingalls and Morrice (2004) [16]的研究中，指出事件圖形法可以克服在資源
限制下的排程問題，並確保所有作業皆能在資源限制之下完成。但當同時有兩個以上的
行動等待執行，卻沒有足夠的資源能夠全部執行時，哪些作業該優先執行，而哪些作業
會被擱置，即需要專案團隊進行決策。如圖4中，專案起始完成後，立即有2個作業
(S1.2,S1.3)等待進行，共需3個單位的資源，但專案的可用資源只有2個單位，作業無
法同時進行，此時就需要進行決策(決策點)，決定作業的優先順序，因此專案團隊在排
程的過程中，必須制定決策準則，並依此產生對應的專案排程。 
  事件圖形法旨在描述資源限制下作業之間的關係，而非提供作業優先順序的排列方
法，因此允許專案管理團隊設定決策準則來進行排序。 
  因此事件圖形表示法提供了一個明確的作業邏輯關係，允許自由建立決策準則，十
分適合用來建立模擬流程，利用模擬的方式產生出各種決策之下的可能路徑與路徑完成
時間，並以此計算出路徑的發生機率、路徑的平均完成時間等資訊，可評估出決策所產
生的專案期望完成時間。這些資訊可以進一步發展成排程分析程式，根據不同的決策準
則進行排程規劃，並計算出對應的期望值與風險值。 
  本研究發展的程式主要分為兩大部分，第一部分採用較具彈性的蒙地卡羅模擬法，
將事件圖形所建立的邏輯關係納入模擬流程之中，模擬出所有可能的決策組合與相關完
成路徑，第二部份的主要功能是計算第一部分的結果，並依據事先設定的決策準則進行
排程規劃與分析。 
圖9 專案可能依循的完成路徑 
3.5 模擬分析流程一：路徑模擬流程 
  路徑模擬的結果包含所有可行的決策組合及其所對應的路徑與發生機率，可依照各
路徑所產生的效益(如專案完成時間)，計算出各種決策組合之下的期望值(如專案的期
望完成時間)。以下是模擬流程的步驟說明： 
步驟一、 決定模擬次數Ｎ，並輸入作業資料。 
步驟二、 設定 0=n ，模擬開始。 
步驟三、 根據事先預估的作業時間，使用相關的機率分佈模型，以亂數產生專案內
                                                      固 定 事 件
不 確 定 事 件
決 策 組 合決 策 點選 擇
S 1 .3 或 S 2 .4決 策 點
選 擇
S 1 .2 或 S 1 .3 S 1 . 2 F 1 .2
專 案 起 始
S 1 .3 F 1 .3S 2 .4
F 2 .4
S 3 .4
F 3 .4S 1 .3 F 1 .3 S 3 .4S 2 .4
F 2 .4 F 3 .4
S 1 . 3 F 1 .3 S 1 .2 F 1 .2S 3 .4
F 3 .4
S 2 .4
F 2 .4
S 1 .2 ,S 1 .3
S 1 .2 ,S 2 .4
S 1 .3
F 3 .4 F 2 .4
 風險是與個體喜好有關的主觀感受。 
 風險是不確定事件與機率的客觀組合。 
 風險是屬於對比的事物。 
兩個主要的因素影響決策者如何決策： 
 不確定事件所造成的風險感受。 
 決策者對事件的期望效用。 
 
4.1 EU-E 決策函式與參數定義 
 
可能發生的狀態（state）： { }niiiI ,,, 2 L1=  
可做的決策： { }kaaaA ,,, 21 L=  
 
決策a下產生狀態i的機率： ( )api , 
1=∑n
i
ip
  (1) 
決策a的Entropy值： ( ) ii ppaH ln∑−=       (2) 
 
決策a產生狀態i的收益： ( )aX i  
 
決策a產生狀態i的效用： ( )( )aXu i  
 
決策a的期望效用函式： ( )( )[ ]aXuE i           (3) 
 
決策a所產生的EU-E值： 
 
( ) ( ) ( ) ( )( )[ ] ( )( )[ ]{ }aXuEaXuEaHaR
Aa∈
−−= max/1 λλ
， 10 ≤≤ λ            
(4) 
 
  風險轉換參數λ是用來調整決策目標的參數，λ越大時，目標為獲得較低的風險，
相反的λ越低時，則是希望獲得較高的效用值。 
  Entropy公式(2)反映出客觀的不確定性，期望效用公式(2)則反映出決策者的主觀
 在a決策之下路徑i產生次數： ( )ani  
 
在a決策之下所有的路徑總數： 
( ) ( )∑= anan itotal                         (7) 
 
在ａ決策之下路徑ｉ發生機率：                             
( )
( )an
anp
total
i
ai =)(  (8)
 
ａ決策下的專案期望完成時間： 
( ) ( ) ( )∑ ×= apitaXE i][  (9)
                  
圖10 決策組合與對應路徑的刪選過程 
 
風險中立的態度設定效用函式：     
( ) XXu =  (10)
 
Entropy值為該決策a產生可能路徑的離散程度： 
( ) ( ) ( )apapaH ii ln∑−=  (11)
  為了不事先設定專案必須完成時間(due date)，使用專案的期望完成時間為決策效
用值，由於期望完成時間越小效用越大，與原本公式不符，因此必須修正公式(3)，得
到以決策目標所制定的決策函式(11)： 
n = 0的
決 策 點
n = 0的
決 策 點
n= 2的
決 策 點
S 1.2 F 1.2
專 案 起 始
F 2.4 F3 .4S1 .3 F 1.3 S3 .4S2.4
S 1.3 F1.3 S1.2 F1 .2S 3.4
F3 .4
S2 .4
F 2.4
S1 .2 ,S 1 .3
S 1.3
F 3.4 F2 .4
S 1.2 F 1.2
專 案 起 始
S1.3 F1 .3S2 .4
F 2.4
S3 .4
F3 .4S 1 .3 F 1.3 S3 .4S2.4
F 2.4 F3 .4
S 1.3 F1.3 S1.2 F1 .2S 3.4
F3 .4
S2 .4
F 2.4
S 1.2 ,S1 .3
S 1.2 ,S2 .4
S 1.3
F 3.4 F2 .4
S 1.2 F 1.2專 案 起 始 F 2.4 F3 .4S1 .3 F 1.3 S3 .4S2.4 S1 .2 ,S 1 .3
刪 除 決 策 組 合  S 1 .2 ,S2 .4
刪 除 決 策 組 合  S 1 .3
I
II
III
  
 
 
表2  d=10時的決策點及可行之決策與相關路徑發生機率與平均完成時間 
路徑長度 d 
   4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
1 1 2 2 3 5 5 4 4 6         
路徑平
均 
完成時
間
決策組合
中的 
路徑發生
機率1 1 2 2 3 5 5 4 4 7   
1 1 2 2 3 5 5 4 4 8           
1 1 2 2 3 5 5 4 4 7 3 6 6 8 7 9 8 9 35.5 0.05 
1 1 2 2 3 5 5 4 4 7 3 6 6 8 7 9 9 8 36.5 0.20 
1 1 2 2 3 5 5 4 4 7 3 6 6 7 8 9 8 9 35.0 0.10 
1 1 2 2 3 5 5 4 4 7 3 6 6 7 8 9 9 8 36.5 0.65 
1 1 2 2 3 5 5 4 4 6           
1 1 2 2 3 5 5 4 4 7   
1 1 2 2 3 5 5 4 4 8           
1 1 2 2 3 5 5 4 4 8 3 7 4 6 8 9 7 9 38.0 0.45 
事件路徑長度 d 
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
1 1 2 2 3 5 5 4 4 7 3 6       
路徑平
均 
完成時
間 
決策組合
中的 
路徑發生
機率 
1 1 2 2 3 5 5 4 4 7 3 8  
1 1 2 2 3 5 5 4 4 7 3 6 6 8 7 9 8 9 35.5 0.05 
1 1 2 2 3 5 5 4 4 7 3 6 6 8 7 9 9 8 36.5 0.20 
1 1 2 2 3 5 5 4 4 7 3 6 6 7 8 9 8 9 35.0 0.10 
1 1 2 2 3 5 5 4 4 7 3 6 6 7 8 9 9 8 36.5 0.65 
1 1 2 2 3 5 5 4 4 7 3 6  
1 1 2 2 3 5 5 4 4 7 3 8         
1 1 2 2 3 5 5 4 4 7 3 8 7 6 8 9 6 9 38.0 0.15 
1 1 2 2 3 5 5 4 4 7 3 8 7 6 8 9 9 6 39.0 0.45 
1 1 2 2 3 5 5 4 4 7 3 8 8 6 7 9 6 9 36.0 0.04 
1 1 2 2 3 5 5 4 4 7 3 8 8 6 7 9 9 6 37.5 0.01
1 1 2 2 3 5 5 4 4 7 3 8 7 8 8 9 6 9 36.0 0.10 
1 1 2 2 3 5 5 4 4 7 3 8 7 8 8 9 9 6 37.5 0.25
（黑色數字為：起始的作業編號 紅色數字為：完成的作業編號 白字黑框為：可選
擇的決策） 
5.1 案例簡介  
  專案可獲得資源r =2個單位，表3為專案作業資料，圖11為專案PERT圖，作業工期
採用Beta分佈，進行10000次的模擬，比較λ= 0.1、λ= 0.2、λ= 0.3的排成結果。
( 13.0 ≤≤ λ 所得排程結果相同) 
 
表3 專案作業資料 
任務編 節 工期 資源需求量
1 1,2 (1,3,5) 2 
2 1,3 (3,6,9) 2 
3 1,4 (10,13,19) 1 
4 2,5 (3,9,12) 1 
5 2,3 (1,3,8) 1 
6 3,6 (8,9,16) 1 
7 3,4 (4,7,13) 1 
8 5,6 (3,6,9) 1 
9 4,6 (1,3,8) 1 
圖11 專案PERT圖 
 
5.2 分析與排程結果 
  表4~7為λ=0、λ=0.1、λ=0.2、λ=0.3的專案排程表。 
λ=  0：專案排程以最小的期望完成時間為目標進行規劃，可排出專案最短的期望完成
時間約34.8644天，可能的專案完成路徑有40種，最可能的完成路徑有21.3 %的發生機
率，較難以預測專案會以怎樣的路徑完成。專案的風險值為Entropy=2.6813。 
λ= 0.1：專案期望完成時間約35.3485天，可能的專完成路徑有26種，最可能的完成路
徑約有31.8 %的發生機率。專案的風險值為Entropy=1.8621。 
λ= 0.2：專案期望完成時間約37.1898天，可能的專案完成路徑有18種，最可能的完成
路徑約有61.7 %的發生機率。專案的風險值為Entropy=1.4079。 
λ= 0.3：專案期望完成時間約47.0749天，可能的專案完成路徑有10種，最可能的完成
路徑約有91.5 %的發生機率。專案的風險值下降為Entropy=0.3832。 
 
5.3 研究結果說明與應用 
1 6
5
4
3
2
t=(3,6,9),r=2
t=(1,3,5),r=2
t=(10,13,19),r=1
t=(3,9,12),r=1
t=(8,9,16),r=1
t=(1,3,8),r=1
t=(1,3,8)
r=1
t=(4,7,13)
r=1
t=(3,6,9)
r=1
考量，最後依照各種情境發展出專案排程，管理者可以藉由樹狀排程圖，快速獲得有關
情境的資訊與最佳決策。 
 
 
圖12 設定 0=λ 的專案完成時間累計圖 
 
 
圖13 設定 1.0=λ 的專案完成時間累計圖 
 
 
圖14 設定 2.0=λ 的專案完成時間累計圖 
 
 
圖15 設定 3.0=λ 的專案完成時間累計圖 
 24
表4 設定 0=λ 的排程結果表 
λ=0 Entropy=2.681 Expect=34.864
事件路徑 Expect Pb
1       
2       
3       
112     
113     
114     
115     
11223   
11224   
11225   
112234  
112235  
11223554
11223556
11223557
1122355446
1122355447
1122355448
112235544736
112235544738
11223554473668798935.412 0.00210
11223554473668799836.571 0.00433
11223554473667898935.133 0.00185
11223554473667899836.471 0.01734
1122355447376
1122355447378
1122355447379
11223554473768
11223554473769
11223554473768896933.776 0.01053
11223554473768899634.111 0.00557
11223554473768689935.714 0.00086
11223554473678
11223554473679
11223554473678698934.427 0.21264
11223554473678699834.939 0.09962
11223554473678689934.760 0.08351
11223554473678896934.453 0.08389
11223554473678899634.817 0.01623
112235544776
112235544778
11223554477638
11223554477639
11223554477638689933.214 0.00347
11223554477638698933.333 0.00111
 
 
 
 26
表5 設定 1.0=λ 的排程結果表 
λ=0.1 Entropy=1.8621 Expect=35.3485
事件路徑 Expect Pb
1        
2        
3        
1 1 2      
1 1 3      
1 1 2 2 3    
1 1 2 2 4    
1 1 2 2 5    
1 1 2 2 4 3   
1 1 2 2 4 5   
1 1 2 2 4 5 5 3
1 1 2 2 4 5 5 6
1 1 2 2 4 5 5 7
1 1 2 2 4 5 5 3 4 6
1 1 2 2 4 5 5 3 4 7
1 1 2 2 4 5 5 3 4 8
1 1 2 2 4 5 5 3 4 7 3 6
1 1 2 2 4 5 5 3 4 7 3 8
1 1 2 2 4 5 5 3 4 7 3 6 7 8
1 1 2 2 4 5 5 3 4 7 3 6 7 9
1 1 2 2 4 5 5 3 4 7 3 6 7 9 9 8 6 8 35.3920 0.317600 
1 1 2 2 4 5 5 3 4 7 3 6 7 9 9 8 8 6 35.5350 0.038133 
1 1 2 2 4 5 5 3 4 7 3 6 7 9 6 8 9 8 37.1670 0.020000 
1 1 2 2 4 5 5 3 4 7 3 6 7 9 6 8 8 9 35.0000 0.000133 
1 1 2 2 4 5 5 3 4 7 3 6 7 9 6 9 8 8 37.6090 0.032400 
1 1 2 2 4 5 5 3 4 7 3 6 6 8
1 1 2 2 4 5 5 3 4 7 3 6 6 9
1 1 2 2 4 5 5 3 4 7 3 6 6 8 7 9 8 9 35.0000 0.000133 
1 1 2 2 4 5 5 3 4 7 3 6 6 8 7 9 9 8 38.0000 0.000133 
1 1 2 2 4 5 5 3 4 7 3 6 6 7 8 9 8 9 34.0000 0.000133 
1 1 2 2 4 5 5 3 4 7 3 6 6 7 8 9 9 8 36.3330 0.002000 
1 1 2 2 4 5 5 3 4 7 7 6
1 1 2 2 4 5 5 3 4 7 7 8
1 1 2 2 4 5 5 3 4 7 7 6 3 8
1 1 2 2 4 5 5 3 4 7 7 6 3 9
1 1 2 2 4 5 5 3 4 7 7 6 3 9 6 8 9 8 36.5480 0.022133 
1 1 2 2 4 5 5 3 4 7 7 6 3 9 6 8 8 9 32.7500 0.000533 
1 1 2 2 4 5 5 3 4 7 7 6 3 9 9 8 6 8 35.0840 0.309870 
1 1 2 2 4 5 5 3 4 7 7 6 3 9 9 8 8 6 35.2570 0.035733 
1 1 2 2 4 5 5 3 4 7 7 6 3 9 6 9 8 8 36.8600 0.031467 
1 1 2 2 4 5 5 3 4 7 7 6 6 8
1 1 2 2 4 5 5 3 4 7 7 6 6 9
1 1 2 2 4 5 5 3 4 7 7 6 6 8 3 9 8 9 37.0000 0.000133 
 
 
 
 
 
 28
表6 設定 2.0=λ 的排程結果表 
λ=0.2 Entropy=1.407 Expect 
事件路徑 Expec Pb
1       
2       
3       
11 2     
11 3     
11 4     
11 5     
11 2 2 3   
11 2 2 4   
11 2 2 5   
11 2 2 4 3  
11 2 2 4 5  
11 2 2 4 5 5 3
11 2 2 4 5 5 6
11 2 2 4 5 5 7
11 2 2 4 5 5 6 4 3
11 2 2 4 5 5 6 4 7
11 2 2 4 5 5 6 4 8
11 2 2 4 5 5 6 4 3 6 7
11 2 2 4 5 5 6 4 3 6 8
11 2 2 4 5 5 6 4 3 6 8 3 7 7 9 8 9 36.00 0.0001
11 2 2 4 5 5 6 4 3 6 8 3 7 7 8 9 9 36.20 0.0006
11 2 2 4 5 5 6 4 3 6 8 3 7 8 7 9 9 38.29 0.0704
11 2 2 4 5 5 6 4 3 6 8 8 7 3 7 9 9 37.16 0.6171
11 2 2 4 5 5 6 4 3 6 8 8 7 7 3 9 9 36.24 0.0644
11 2 2 4 5 5 6 4 3 6 8 3 8 7 7 9 9 39.21 0.0671
11 2 2 4 5 5 6 4 3 3 6 7 8 7 9 8 9 40.00 0.0001
11 2 2 4 5 5 6 4 3 3 6 7 8 7 8 9 9 36.00 0.0001
11 2 2 4 5 5 6 4 3 3 6 7 8 8 7 9 9 38.40 0.0006
11 2 2 4 5 5 6 4 6 3
11 2 2 4 5 5 6 4 6 7
11 2 2 4 5 5 6 4 6 8
11 2 2 4 5 5 6 4 6 3 7
11 2 2 4 5 5 6 4 6 3 8
11 2 2 4 5 5 6 4 6 3 8 8 7 3 7 9 9 36.27 0.0744
11 2 2 4 5 5 6 4 6 3 8 8 7 7 3 9 9 36.39 0.0490
11 2 2 4 5 5 6 6 3
11 2 2 4 5 5 6 6 7
11 2 2 4 5 5 6 6 3 4 8 3 8 7 7 9 9 39.00 0.0001
11 2 2 4 5 5 6 6 3 4 8 8 7 3 7 9 9 36.77 0.0379
11 2 2 4 5 5 6 6 3 4 8 8 7 7 3 9 9 36.12 0.0127
11 2 2 4 5 4 3
11 2 2 4 5 4 8
11 2 2 4 5 4 3 5 6
 
 
 
 
 30
 
表7(續) 設定 3.0=λ 的排程結果表 
3 3 1 1 4 5 4 8 5 8 2 2 6 7 6 7 9 9 47.0000 0.000293  
3 3 1 1 4 5 4 8 5 8 2 2 6 7 7 9 9 6 42.0000 0.000147  
3 3 1 1 4 5 4 5 2  
3 3 1 1 4 5 4 5 8  
3 3 1 1 4 5 4 5 2 2 6  
3 3 1 1 4 5 4 5 2 2 7  
3 3 1 1 4 5 4 5 2 2 8  
3 3 1 1 4 5 4 5 2 2 6 7  
3 3 1 1 4 5 4 5 2 2 6 8  
3 3 1 1 4 5 4 5 2 2 6 8 6 8 7 7 9 9 46.0000 0.000147  
3 3 1 1 4 5 4 5 2 2 6 8 8 7 6 7 9 9 42.8000 0.004395  
3 3 1 1 4 5 4 5 2 2 6 8 8 7 7 9 6 9 41.0000 0.000147  
（黑色：作業起始紅色：作業完成白字黑框：可選擇決策） 
 
參考文獻 
 
1.Alcaraz, J. and Maroto, C., “A robust genetic algorithm for resource allocation in project scheduling,” 
Annals of Operations Research, 102, 83-109 (2001). 
2.Biute, R., Demeulemeester, E. and Herroelen, W., “A real options approach to project management,” 
International Journal of Production Research, vol. 42, NO.9, 1715-1725, (2004). 
3.Böttcher, J., Drexl, A., Kolisch, R., and Salewski, F., “Project Scheduling Under Partially Renewable 
Resource Constraints,” Management Science, Vol.45, No.4, April (1999). 
4.Bouleimen, K. and Lecocq, H., “A new efficient simulated annealing algorithm for the resource -constrained 
project scheduling problem and its multiple mode version,” European Journal of Operational Research, 149, 
268-281 (2003). 
5.Brucker, P., Knust, S., Schoo, A. and Thiele, O., “A branch & bound algorithm for the resource -constrained 
project scheduling problem,” European Journal of Operational Research, 107, 272-288 (1998). 
6.Bushuyev S.D., and Sochnev, S.V., “Entropy measurement as a project contril tool,” Internation- al Journal 
of Project Management, Vol. 17, No 6, 343-350 (1999). 
7.Demeulemeester, E., Herroelen, W., “A branch- and-bound procedure for the multiple resource- constrained 
project scheduling problem,” Manage- ment Science, 38, 1803-1818. (1992). 
8.Demeulemeester, E., Herroelen, W.,. “New benchmark results for the resource-constrained project 
scheduling problem,” Management Science, 43, 1485-1492 (1997). 
9.Dixit, A.K. and Pindyck, R.S. “The Options Approach to Capital Investment,” Harvard Busi- ness Review, 
May-June (1995). 
10. Fleszar, K., Hindi, K.S., “Solving the resource -constrained project scheduling problem by a variable 
neighbourhood search,” European Jour- nal of Operational Research, 155 (2), 402-413 (2004). 
11. Golenko-Ginzburg, D. and Gonil, A. “Stochastic network project scheduling with non-consumable 
limited resources,) International Journal of Pro- duction Economics, 48, 29-37 (1997). 
12. Golenko-Ginzburg, D., Gonik, A. and Laslo, Z., “Resource constrained scheduling simulation model for 
alternative stochastic network projects,” Mathematics and Computers in Simulation, 63, 105-117 (2003). 
13. Hartmann, S., “A competitive genetic algorithm for the resource-constrained project scheduling,” Naval 
 32
 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
□ ■達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：□已發表 □未發表之文稿 ■撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
 
 
 
附件二 
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
