I 
 
摘要 
數位家庭的興起，帶動了相當大的商機，無論資訊、消費性、通訊、娛樂
等3C產業都往此方向發展。當數位家庭的概念逐漸成型時，家中的影音產品、家
庭網路設備都有不同的發展趨勢，不管設備、系統產品及關鍵零組件，也都會隨
著數位家庭趨勢的發展而有所改變。因此，本研究開發出滿足人們能在家庭中隨
時享受數位化的生活方式。 
RFID（Radio Frequency IDentification）即無線射頻識別技術，又稱電子標
籤。它是一種通信技術，可利用無線電訊號來識別特定目標並讀寫相關數據資
料，無需識別系統與特定目標之間建立機械或光學接觸。換言之，也就是利用無
線電波來傳送識別資料，以達到身份識別的目的。由於RFID具有上述所描述的
各項優點存在，且未來極有可能家中的任何物品都隱含有RFID標籤存在，因此
本計畫選擇RFID做為室內定位的使用，並整合其它相關數位家庭的技術，構成
一完整的智慧型家庭系統。 
本研究發展出一套高便利安全的智慧型家庭平台架構，以RFID定位Bundle
為系統核心，進而加入多媒體影音Bundle與遠端服務通訊Bundle進行配合，將其
整合在OSGi平台之上，藉由上述的系統，整合為一高智慧型居家系統，並提供
一無縫式影音存取系統與居家安全監控系統。以下說明本計劃所開發的RFID定
位Bundle、多媒體影音Bundle以及遠端服務通訊Bundle： 
 RFID定位Bundle 
此Bundle可提供家中相關成員(老人或小孩)的定位資訊，其為三層架構，分
別為設備監控及管理層(Device Monitoring and Management Layer)、資料監控
及 管 理 層 (Data Monitoring and Management Layer) 、 通 訊 整 合 層
(Communication Integration Layer)。 
 多媒體影音Bundle 
此Bundle可提供家庭環境中一無縫式影音存取系統，其為四層架構，分別為
通訊層(Communication Layer)、UPnP設備架構層(UPnP Device Architecture 
Layer)、UPnP內容發現層(UPnP Content Discovery Layer)、多媒體格式層
(Media Format Layer)。 
 遠端服務通訊Bundle 
此Bundle可提供相關行動裝置或多媒體影音裝置間的通訊能力，其為三層
架構，分別為節點層(Node Layer)、網域連結層(Domain Connection Layer)、
網際網路連結層(Internet Connection Layer)。 
 
    經過上述的系統研究與開發，本研究建構出一高智慧的數位居家環境空間，
並提供一無縫式影音存取系統，使用者在室內移動過程中依然可以同步觀賞其正
在收看的節目。 
關鍵詞: 數位家庭、無線射頻辨識系統、定位系統、數位家庭閘道器、服務包 
III 
 
video/audio devices, it includes three layers: Node Layer, Domain Connection 
Layer, and Internet Connection Layer. 
 
Through the development and study of the above mentioned system, it is able to build 
up an intelligent digital home environment. An individual can be allowed to follow a 
TV program while moving from one sector to another sector in a house. Moreover, 
children and elders can be monitored by a surveillance system that will react 
immediately in emergency cases to avoid sudden accidents. 
 
Keywords: Digital Home Network, RFID, Positioning System, Residential Gateway, 
Bundle 
 
V 
 
圖 目 錄 
圖 1 智慧型家庭網路居家系統架構........................................................... 2 
圖 2 訊號強度法圖....................................................................................... 3 
圖 3 RFID 定位 Bundle 架構圖 ................................................................... 4 
圖 4 使用者操作介面................................................................................... 5 
圖 5 智慧型家庭多媒體影音示意圖........................................................... 5 
圖 6 多媒體影音 Bundle 架構圖 ................................................................. 6 
圖 7 遠端服務通訊情境圖........................................................................... 7 
圖 8 遠端服務通訊 Bundle 架構圖 ............................................................. 7 
圖 9 系統情境圖........................................................................................... 9 
圖 10 系統實作圖...................................................................................... 10 
圖 11 影像轉移 .......................................................................................... 10 
圖 12 影像轉移流程圖............................................................................... 11 
圖 13  Control Panel 所顯示的資料數據 ................................................. 12 
圖 14  OSGi Bundle .................................................................................. 12 
圖 15 開啟影像串流接收.......................................................................... 13 
圖 16  PC Device 分享影音設置 1 .......................................................... 14 
圖 17  PC Device 分享影音設置 2 .......................................................... 14 
圖 18  PC Device 分享影音設置 3 .......................................................... 15 
 
 2 
 
家系統的方法，將提供龐大的經濟和營運優勢。圖 1 為智慧型家庭網路居家系統架構，底層是
智慧型家庭網路系統，中間層是 OSGi 平台，上層為依各種需求功能所開發的服務包(bundle)，
包括：多媒體視訊裝置服務包(Multimedia Video/Audio Device Bundle, MVDB)、RFID 定位服務
包(RFID Location Bundle, RLB)、遠端通訊服務包(Remote Service Communication Bundle, 
RSCB)。 
 
圖 1 智慧型家庭網路居家系統架構 
其中，RFID 定位系統，主要利用下列三項設備： 
(1) 欲定位的 RFID 標籤。 
(2) 進行目標定位的 RFID 讀取器。 
(3) 在區域周遭會使用另外的 RFID 標籤佈建參考點。 
在完成RFID定位系統Bundle後，再加入多媒體影音Bundle與遠端服務通訊 Bundle進行搭
配，將其整合在OSGi平台之上，藉由上述的系統，形成一高智慧型的居家系統，並提供一無
縫式影音存取系統與居家安全監控系統。 
3.文獻探討 
在本節中，我們將探討 RFID 與 OSGi 的相關標準技術與架構。 
3.1 RFID 與 RFID 定位 
RFID 系統由下列三項物體組成:讀取器(Reader)、標籤(Tag)、及最重要的中介軟體
(Middleware)。RFID 標籤中存放有序號及其他可能使用之資料，RFID 讀取器利用電磁體傳送
取得標籤中資料，在一套 RFID 系統中，通常會具備有多台的讀取器、標籤，藉由其通訊運作，
達成我們想要的功能。 
RFID 讀取器可讀取標籤上之資料及序列號碼(Serial Number)。讀取器與標籤使用一定義好
的協定及無線電頻段進行溝通、傳輸與接收資料。RFID 標籤可區分為主動式、半主動式、及
被動式三種不同規格，被動式標籤不需要有額外電源藉由 RFID 讀取器傳送之無線電頻段進行
資料傳輸。若是讀取器想要增加資料到標籤上，讀取器必須調變頻段，才可進行資料的傳輸。
然而，被動式標籤其傳輸距離非常的短，因此不適合用在定位系統上使用[9]。 
半主動及主動式標籤都包含有無線電收發器及鈕扣型電池以供給電源給收發器。也因有了
電池供給電源，半主動式及主動式標籤便擁有更佳的傳輸距離，其傳輸距離更大幅超越被動式
標籤。也因此半主動式及主動式標籤較為適用於定位系統上使用，採用主動式標籤進行設計及
 4 
 
Framework 所提供的查詢機制(基於 LDAP 的語法)，請求並取得所要的 Service。在 Framework
裡，一個有效的應用是由一系列的 Service 相輔相成所互相搭配而成[14]。 
OSGi規格中所定義的 Service包括 Standard Services與Custom Services兩種，其中 Standard 
Services 是由 OSGi Framework 本身所提供；Custom Services 則較為彈性，主要由服務廠商定
義開發，目的在於區隔產品服務市場[15]。 
4.研究方法 
在本節中，我們將分別說明本計畫所設計的智慧型家庭網路系統中的各層架構。 
4.1 RFID 定位 Bundle 
此 Bundle 為本研究之核心，其詳細架構如圖 3 所示，此 Bundle 區分為三層架構，分別為
設備監控及管理層(Device Monitoring and Management Layer)、資料監控及管理層(Data 
Monitoring and Management Layer)、通訊整合層(Communication Integration Layer)，其詳細架構
分述如下。 
 
圖 3 RFID 定位 Bundle 架構圖 
4.1.1 設備監控和管理層(Device Monitoring and Management Layer) 
此為最底層與 Reader 溝通的部分。目前考量在 Reader 與標籤設計上還沒有統一的標準出
現，而且 Reader 的功能仍在發展修正的階段。所以 Agent 的設計目的就是為了解決居家網路
定位系統的介面問題。設備監測和管理層區分為兩個模組，上層模組為 Agent Management，
它可以使用一台電腦來控制 Reader 的功能和整合不同型態和品牌的 Reader。該 Agent 
Management 在本機端是個別模組表層的核心元素，負責控制個別 Reader 代理控制器和 Reader
充當代理控制器容器。而底層的模組為 agent,，它負責功能轉換和控制 Reader 提供有關內容納
入到 agent management module。 
4.1.2 資料監控和管理層(Data Monitoring and Management Layer) 
在本層的家庭網路定位系統層中有三個模組，包括是Reader Framework(RF)，Reader User 
Interface(RUI)，與Application Level Event(ALE)。家庭網路定位系統RF模組之考量重點為處理
多標準環境中所必須研發的整合性平台，需要透過連線機制來處理。而顧慮到大量Reader的管
理，還需要配合Monitor的功能。由於各種讀取器，標記的具體標準，不同製造商使用的不同
的控制命令，因此需要一個統一平台來控制這些命令。RUI模組主要提供給使用者一個簡單、
 6 
 
體透過 DLNA 的規格傳送到車內的 Android 影音播放裝置做儲存，讓使用者不論是在家中或是
在戶外移動中都可以享受到影音資料。 
現今在多媒體的規格上，一般的常用的規格是 UPnP、UPnP AV，以及 2003 年由 Sony 和
Intel 所創立 DLNA 組織的規格，而市面上通過 DLNA 認證的產品，已達 2000 多件，且此規
格也開始針對智慧家庭居家網路多媒體規格，進行統整的動作，希望能提供統一化的標準。本
研究之多媒體影音 Bundle 架構圖如下圖 6 所示。 
 
圖 6 多媒體影音 Bundle 架構圖 
在 Communication Layer 中，定義了與 OSGi 的傳輸通訊協定。至於在各設備之間的相互
偵測，則是採用 UPnP Device Architecture 1.0 標準，其主要目的在於多媒體影音平台設備透過
UPnP 機制來搜尋家中可互相連接的數位家庭影音裝置，當使用者移動其位址後，此時影音設
備便可以根據 RFID 定位 Bundle 進行後續的播放傳輸或撥放轉遞動作，這個動作是全自動的，
因此使用者無須進行任何干涉。而在媒體內容的發現方面，是由 UPnP Content Discovery Layer
機制負責。 
    在可傳輸的多媒體格式上，則分為必需支援以及非必需支援兩方面，在必需支援方面，圖
形檔案格式為 JPG、音效格式為 LPCM，影片格式為 MPEG-2。而在非必需支援格式方面，圖
形檔案為 PNG，音效壓縮格式則是 AAC、WMA9，至於在影片壓縮格式 H.264。 
4.3 遠端服務通訊 Bundle 架構 
使用者透過RFID定位Bundle進行位址的偵測，若系統偵測到使用者停留於一地方超過一
定時間，則可透過多媒體影音Bundle將攝影機的位址調整至RFID定位系統所偵測到的位址，
並將此影像透過遠端服務通訊Bundle傳送至手機上，讓使用者可立即了解家中狀況。如此，於
智慧型家庭監控上可使得家中具有更高的安全性。 
其中相關的運用情境(如圖 7)說明如下: 
1.出門在外的使用者可以透過行動裝置(如手機、PDA)觀看家中的監視器畫面並進行控制，以
提升居家安全。 
2.透過連線的建立，家中成員可以透過電視與遠端的另一個家庭(例如祖父母家)進行互動。 
3.在家中的使用者可以透過電視觀賞內容供應商或是使用系統供應商所提供的服務。 
 8 
 
節點層內具備基本的配置文件(basic profile)，它用來定義單元模組以及提供遠端服務功
能。如此即可降低代理單元模組到最少，藉以支援更多種類的裝置。然而，基本的配置文件也
可藉由擴充的配置文件(extension profile)的安裝而增加。擴充的配置文件是一組提供特殊功能
給服務平台的單元模組。在本計劃中，我們開發了多個擴充的配置文件，包括：遠端服務管理、
分散式配置以及內容調節等，以配合遠端服務通訊的相關功能。 
4.3.2 網域連結層(Domain link layer) 
    網域連結層主要是處理相關網域內的服務通訊，包括服務發現(discovery)與服務呼叫。服
務發現的功能是經由多重播送可以自動地將一個節點以及其所提供的服務，通知網域內所有其
他節點。為達到此目的，網路連結層必須建立一個分散式的服務註冊系統。 
 服務呼叫的功能是讓網域內服務的實際位置能夠具備透通性。網域內的任一節點都具備許
多的服務，它們都會被註冊於網域連結層內。當某一個單元模組呼叫一個服務時，它並不知道
此服務的位置。於是便可以藉由此網域連結層的服務註冊系統的資料，執行此服務的實際運作。 
4.3.3 網際網路連結層(Internet link layer) 
 網際網路連結層是擴充網域內的服務通訊至網際網路上，達成網域之間服務的通訊。本層
僅提供服務呼叫，而服務發現由各自網域的網域連結層負責。當所呼叫的服務是註冊位於網域
外時，即上傳至網際網路連結層，由網際網路連結層封裝成訊息並且執行此服務呼叫。 
 藉由遠端服務通訊 Bundle 技術，在智慧家庭中提供與安全、資訊和娛樂相關的加值服務，
一直是智慧家庭產業界相當關注的一塊領域。要能在所有的網路與智慧家庭間達到無縫式地傳
遞這些服務，則必須透過一個具有開放性標準的系統來達成。其中，OSGi 即是此種標準架構，
主要目的為定義並迅速地透過此開放性的規格來將管理的服務由寬頻網路傳遞到家庭、汽車或
是其他環境的網路範圍。而在此發展智慧家庭資訊服務平台階段，我們以此平台，開發出一些
基本應用服務可提供給使用者。可讓智慧家庭製造商能夠進行操作及使用所建置的服務，進行
開發智慧家庭通訊之溝通、安全、娛樂、商務、遠端及智慧型家庭整合等服務。 
5.實作結果 
如圖9所示的系統情境圖中，包括本計畫所設計建置的 OSGi平台，RFID讀寫器和RFID標
籤。當RFID設備讀取到用戶的位置後，其位置訊息就會透過OSGi平台發送到多媒體影音設備
Bundle和遠端服務通訊Bundle。其包括下列幾個部分： 
 RFID感測網路 
使用RFID射頻模組在此空間排列出一個感測網路；使用者在定位模式下攜帶RFID模組，當
作行動參考節點。 
 UPnP串流系統 
根據通用的隨插即用A / V架構，影音串流服務由影音伺服器和影音render提供。 
 建構於 OSGi服務平台上的智慧影音串流系統。 
 
OSGi服務平台與RFID設備為RFID網路的協調員，用於從 RFID的感測器收集回饋訊息。
本研究在OSGi服務平台上，建構一個智慧影音串流系統，它以Bundle的形式區分為三個子系
 10 
 
 
圖 10 系統實作圖 
 
 
圖 11 影像轉移 
 
其中影像轉移的功能，在於使用者於 PC A 的時候，使用 RFID Tag 讓 RFID Reader A 接收
ID 碼並傳回給 OSGi Server，並判斷此 ID 碼為家中使用者，便將影片的影像傳送給 PC A，若
使用者離開 PC A，RFID Reader 沒有繼續讀取到 RFID Tag 的 ID 碼，便把影像傳輸暫停並記錄
暫停的時間點，此時間點的暫存資料是一串時間編碼，PC A將此串時間編碼回傳給OSGi Server
紀錄，使用者到達 PC B 的地點後，令 RFID Reader B 感應使用者所攜帶之 RFID Tag 之 ID 碼
並回傳給 OSGi Server，OSGi Server 便把剛剛暫存時間點的時間編碼傳給 PC B，PC B 接收時
 12 
 
 
如圖 13 所示，PC A 與 PC B 的 RFID Reader 可依據其所提供的 control Panel，顯示所接
收 Tag ID 與 RFID Reader 的編號，而 Reader 所接收的數值經由網路傳送至 OSGi Server 後，判
斷若為為家中的使用者，便會把影像傳輸或轉移至接收 RFID Tag 資料所在地的電腦，。 
 
圖 13  Control Panel 所顯示的資料數據 
 
如圖 14 所示為本計畫所設計安裝的各類 OSGi Bundle，從 Reader 接收的數值與影像傳輸
等動作，都是藉由這些 Bundle 來控制與相互溝通，其中包含 RFID 設備所使用的 Phidger21 與
RFID.jar，以及控制影像傳輸的 Media_ever.jar。 
 
圖 14  OSGi Bundle 
 14 
 
 
圖 16  PC Device分享影音設置1 
 
圖 17  PC Device分享影音設置2 
 16 
 
[2] Want, R., Hopper, A. Falcao, V. and Gibbons, J. (1992) ‘The active badge location system’, 
ACM Transactions on Information Systems, Vol. 10, No. 1, January, pp.91–102 
[3] Graafstra, A. (2006) RFID Toys: 11 Cool Projects for Home, Office and Entertainment, Wiley, 
February, Shared Images from Amazon.com 
[4] Lu, H., Tzeng, H., Chen, M. and Chen, J.L. (2005) ‘Design of a residential gateway for 
tele-homecare systems’, Proceedings of the Ninth International Symposium on Consumer 
Electronics (ISCE 2005), June, pp.291–295. 
[5] Okugawa, T., Masutani, H. and Yoda, I. (2005) ‘A home network service environment for 
wide-area communications’, Proceedings of the 2005 Asia-Pacific Conference on 
Communications, October, Japan, pp.14–18. 
[6] Duenas, J.C., Ruiz, J.L. and Santillan, M. (2005) ‘An end-to-end service provisioning scenario 
for the residential environment’, IEEE Communications Magazine, Vol. 43, No. 9, September, 
pp.94–100. 
[7] Kang, K., Lee, J. and Choi, H. (2006) ‘Management system for OSGi-based infrastructure’, 
Digest of Technical Papers of International Conference on Consumer Electronics (ICCE ’06), 
January, Korea, pp.53–54. 
[8] Hightower, J., Boriello, G. and Want, R. (2000) SpotON: An indoor 3D Location Sensing 
Technology Based on RF Signal Strength, Report on Research, University of Washington, 
February, Seattle, WA. 
[9] Harter, A., Hopper, A., Steggles, P., Ward, A. and Webster, P. (1999) ‘The anatomy of a 
context-aware application’,Proceedings of the 5th Annual ACM/IEEE International Conference 
on Mobile Computing and Networking, United States, pp.59–68. 
[10] Bekkali, A., Sanson, H. and Matsumoto, M. (2007) ‘RFID indoor positioning based on 
probabilistic RFID map and kalman filtering’, Proceedings of the IEEE International 
Conference on Wireless and Mobile Computing, October, United States, pp.21–27. 
[11] Haga, T., Horikoshi, Y., Tsukamoto, S. and Hoshino, H. (2007)Two-dimensional location and 
direction estimating method’, Proceedings of the IEEE International Special Topic Conference 
on Information Technology Applications, November, Japan, pp.296–297. 
[12] Jeong, J., Shin, D. and Shin, D. (2006) ‘An XML-based automated authentication profile for 
home network based on OSGi (open service gateway initiative) framework’, Digest of 
Technical Papers of International Conference on Consumer Electronics (ICCE’06), January, 
Korea, pp.99–100. 
[13] Cervantes, H. and Hall, R.S. (2003) ‘Automating service dependency management in a 
service-oriented component model’, Proceedings of the 6th Workshop on Component-Based 
Software Engineering (CBSE2003), May, France, pp.91–96.\ 
[14] Offermans, M. (2005) Automatically Managing Service Dependencies in OSGi, The OSGi 
Alliance 2005 World Congress. 
[15] Dobrev, P., Famolari, D. and Kurzke, C. (2002) ‘Device and service discovery in home 
 1 
 
出席國際學術會議心得報告 
                                                             
出國人員姓名 
服務機關及職稱 
國立台東大學 資訊工程學系 陳明僑 助理教授 
會議時間地點 February 7-10, 2010,  Phoenix Park, Korea 
會議名稱 The 12th International Conference on Advanced Communication(ICACT2010) 
發表論文題目 Android/OSGi-based Vehicular Network Management System 
一、參加會議經過 
我與台灣科技大學電機系陳俊良教授一起於 2/6 搭乘 8:10 的中華航空 CI160 班機前
往韓國首爾，並於當地時間 11:35 抵達首爾仁川國際機場。之後搭乘機場巴士前往漢城
RITZ 飯店。並於次日搭乘巴士前往 Phoenix Park，並住進會場飯店。 
ICACT 研討會自從 1999 年開始辦理，ICACT 2010 為第十二屆研討會，今年共有 2
場 Keynote Speech，3 場 Tutorial 共 5 項主題；49 Technical Session 及 5 Poster Session：
包含來自 22 國家之 311 篇論文，今年大會的主題為 ICT for Green Growth and Sustainable 
Development，非常符合當前綠色科技與環境永續發展的議題。 
會中我參加了由國立台東大學張耀中教授所主持的Session 9D: Network Management, 
Operation and Maintenance (III) 原有五篇論文發表，其中 Iran 代表由於簽證問題未參加發
表，其餘四篇依序發表並與在座學者交換意見。發表的論文包括:  
1. Double WFQ QoS Scheduling based on Flow Number in Diffserve Network, Tadasuke 
Minagawa, Tetsushi Ikegami(Meiji university, Japan) 
2. Analysis of M/M/1 Queuing model of Reservation Management for Media Gateway 
Controller, Pedram Hajipour, Nahid Amani, Farzaneh Seyed Mostafaei(Iran 
Telecommunication Research Center, Iran) 
3. A Study on a QoS/QoE Correlation Model for QoE Evaluation on IPTV Service, Hyun 
Jong Kim, Seong Gon Choi(Chungbuk National University, Korea) 
4. 4. Automated tools for manipulating files in a distributed environment with RSYNC, 
Alireza Ghobadi, C. Eswaran, Chin-Kuan Ho, Payam Vahdani Amoli, Roozbeh 
Karimi(Multimedia University, Malaysia) 
5. 5. Adaptive Cross-layer QoS Mechanism for Cognitive Network Application, Shih-Wei 
Liu), Szu-Lin Wu (National Dong Hwa University, Taiwan), Jiann-Liang Chen (National 
Taiwan University of Science & Technology, Taiwan) 
 
我的 poster 報告是安排在 2/10 10:40，session 中各國學者都提出相當精闢的研究成果
及說明，讓我對於相關領域的先進研究，有了較為深入的了解。對於我所發表的論
文—“Android/OSGi-based Vehicular Network Management System”，與會的先進也提出了
一些問題並與之回覆與討論，受益良多。大會並於中午 12:00 順利圓滿結束。 
     
 
 
 
Android/OSGi-based Vehicular Network Management System 
 
Teng-Wen Chang1, Jiann-Liang Chen3, Ming-Chiao Chen2, and Sy-Yen Kuo1  
 
1
Department of Electrical Engineering, National Taiwan University, Taipei, Taiwan 
2Department of Computer Science and Information Engineering, National Taitung University, Taiwan 
3Department of Electrical Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan 
 
Abstract- With the enormous market potential of the telematics 
industry and the rapid development of information technology, 
automotive telematics has attracted considerable attention for 
mobile computing and intelligent transport systems (ITSs). This 
study integrates the Open Gateway Service Initiative Vehicle 
Expert Group (OSGi/VEG) into an Android platform to generate 
a vehicular Android/OSGi platform that has the advantages of 
both original platforms. These features include remote 
management, rich class sharing, proprietary vehicular 
applications, security policies, easy management of application 
programming interface (APIs), and an open environment. This 
study also integrates a cloud computing mechanism into the 
Android/OSGi platform, allowing service providers to upload 
their telematics bundles onto storage clouds using a provisioning 
server. A management agent in the Android/OSGi platform can 
simultaneously update its application service modules using 
remote storage clouds and use visual intelligence to continually 
change the distinguishing features of applications based on 
context awareness without user intervention. To assess the 
feasibility of the proposed Android/OSGi platform, this study 
presents a vehicular testbed to determine the functionalities of 
different telematics applications. Android/OSGi platform 
applications require less memory and system resources than those 
on the original Android platform when performing complicated 
operations. Additionally, the Android/OSGi platform launches 
telematics services more quickly than the original Android 
platform. The proposed platform overcomes the problem of 
frequent non-responsive exceptions in the original Android 
platform. 
 
Keywords- Intelligent Transport Systems, Vehicular Platform, OSGi, 
Android, Cloud Computing, Telematics Applications 
 
I. INTRODUCTION 
In recent years, sophisticated information technology has 
allowed the automotive industry to mature in the field of 
telematics. Telematics in automobiles involves the 
automated convergence of telecommunications and 
information technology. So far, automakers and third-party 
service providers have developed quite a number of 
telematics services, including monitoring, emergency 
roadside assistance, navigation, driver aids, remote 
diagnostics, entertainment, and web browsing. The 
telematics market is currently quite young, and most 
telematics technologies are independent of each other due 
to multiple platform standards. This situation also makes it 
difficult for service providers to create value-added 
telematics services. Consequently, numerous vehicle 
manufacturers have established and developed 
open/standard embedded platforms for vehicles. These 
platforms include OSGi/VEG, AUTOSAR, AMI-C, CVIS, 
OSEK/VDX, and Android. Fig. 1 illustrates an open Linux 
operating system ported into an embedded on-board 
terminal. This system not only provides a variety of device 
drivers, including CAN\LIN\FlexRay buses and 
out-network connection modules, but also offers resources 
management. The open/standard telematics platforms in the 
telematics middleware layer mainly standardize API’s and 
graphic/vocal HMI (human-machine interface) so that both 
service providers and car manufacturers can quickly deliver 
solutions to potential markets and simplify development. If 
service providers want to remotely deploy telematics 
services to an on-board terminal, or if road-side centers 
need to diagnose/configure vehicular devices or manage 
modules of telematics application, they should use remote 
management services that rely on open/standard telematics 
platforms.  
 
Figure 1.  Telematics Architecture 
 
This study discusses how to combine OSGi/VEG into an 
Android platform to form a new vehicular Android/OSGi 
platform that has the advantages of both original platforms, 
including remote management/deployment, rich 
class-sharing, proprietary vehicular applications, security 
policies, and more.  
 
II. RELATED WORKS 
 
A.  Android Platform 
 
The Android™ platform delivers a complete set of software 
for mobile devices: an operating system, middleware, and 
key mobile applications [1]. Windows Mobile and Apple’s 
iPhone provide a richer, simplified development 
environment for mobile applications. However, unlike 
Android, they’re built on proprietary operating systems that 
often prioritize native applications over those created by 
 
 
Android 1.6 r1 kernel, allowing the proposed 
Android/OSGi platform to be integrated into real 
Android-based hardware devices. This design also allows 
the OSGi R4 implementation to be operated normally in an 
Android Dalvik virtual machine (VM), developing the 
communication interface between users and OSGi 
framework is called Android/OSGi applications, and 
embedded Android/OSGi applications. This study 
implements an advanced technique for embedding an OSGi 
instance into Android applications, to make them more 
adaptive and flexible. Any time-consuming operations, 
such as continually loading the main class of OSGi 
framework and updating the Android GUI interfaces, will 
be performed by Android background services. We also 
installed indispensable OSGi bundles for developing some 
valuable telematics applications, such as the Web 
management console, remote deployment interface, 
navigation, diagnostics, and so on. Finally, this study 
implements a provisioning server to remotely deploying 
packages or OSGi bundles to the client’s Android/OSGi 
platforms. 
 
Figure 5.  System Architecture 
 
A. Location of OSGi Framework in the Android 
Platform 
The Dalvik VM use the device’s underlying Linux kernel to 
handle low-level functions, including security, threading, 
process, and memory management. It’s also possible to read 
and write C/C++ applications that run directly on the 
underlying Linux OS. However, Dalvik VM can only 
execute Dalvik executable files (e.g., classes.dex), a format 
optimized to ensure minimal memory footprint. 
Consequently it cannot perform general Java packages and 
OSGi bundles, causing OSGi framework operations to fail 
when Android encounters OSGi functionalities in runtime. 
Besides, as Fig. 6 shows, if the OSGi framework 
successfully runs in the Android Runtime layer, it cannot 
directly interact with users, because users can only view 
Android Activities (or applications) in the application layer. 
For this reason, the Android/OSGi Activity must grab a 
report or log message from the OSGi framework, and use 
the Android UI to present information to the users. The 
proposed design uses the OSGi R4 implementation of 
Apache Felix to integrate with the Android platform because 
this container is more portable and light-weight, and 
better-suited to embedded hardware devices such as 
telematics systems.  
 
 
Figure 6.  Location of OSGi Framework 
 
B. Android/OSGi Conversion Mechanism 
The Android/OSGi conversion mechanism uses the OSGi 
framework to dynamically load bundles through the Android 
Davik VM. Fig. 7 shows the Android/OSGi conversion 
mechanism, which makes the OSGi framework perform a 
series of complied Java classes from OSGi bundles in the 
Android runtime layer using a classes.dex file to refernce 
the OSGi bundle’s general Java classes. The proposed 
design implements Android/OSGi conversion code through 
Dalvik.system.dexFile API, and imports two parameters, the 
package name (bundle API packages) and ClassLoader 
(reading the Java classes) objects. The conversion code then 
returns the collection of Java classes, allowing the OSGi 
framework to indirectly perform the functionalities provided 
by the OSGi bundles. 
With the Android conversion mechanism and dexified OSGi 
bundles, it is possible to port the OSGi framework to the 
Android underlying layer, along with other functional 
bundles such as telnet, deployment admin, http, and remote 
manager bundles etc, so that the Android platform can be 
operated and managed remotely.  
 
 
Figure 7.  Android/OSGi Conversion Mechanism 
 
C.  Development of Android/OSGi Application 
We created an Android/OSGi application in the Android 
application layer, which can fetch the corresponding OSGi 
information from the Android runtime layer and provide an 
interactive environment between users and the OSGi 
framework. In the first integration of this procedure, the 
proposed Android/OSGi application had Android Activity 
 
 
also manages their packages and resources. 
 
Figure 10.  Vehicular Testbed 
 
A. Vehicular Android/OSGi Platform 
Fig. 11 illustrates inter-architecture of Vehicular embedded 
Android/OSGi platform, in first, because Android/OSGi 
platform can only update its foreground screen after calling 
setContentView method, Android/OSGi application must to 
provide ViewFactory objects make other Android/OSGi 
bundles being able to provide or update their Android GUI 
interfaces into main Activity. Additionally, the 
Android/OSGi application should register its Activity 
instance service, so that host bundle can fetch this main 
Activity, and push registered GUI interfaces into it. The host 
bundle implements a ViewFactory interface with the primary 
responsibility of providing DesktopApplication service to 
other comsumer bundles. The second service of 
DesktopApplication acts as a container for any Android 
View in the bundles. Consequently, if any bundles want to 
provide some Views for the main Activity, they must 
implement the DesktopApplication interface, and register 
their DesktopApplication services with the OSGi service 
registry. Besides, the host bundle implements 
ServiceTrackerCustomizer interface, which makes host 
bundle being able to track primary Activity service and other 
DesktopApplication services simultaneously in customized 
way. 
 
    Figure 11.  Inter-architecture of Android/OSGi platform 
 
B. Android/OSGi Bundles 
1) GUI-based Bundles 
Figure 12 illustrates vehicular Android/OSGi platform has 
feature of lightweight bundles such as navigation bundle, 
which bundle size is less 11KB than original Android 
application. But vehicular Android/OSGi platform must to 
spend about 7.5 seconds to start OSGi framework in first 
time, and additional memory size of OSGi framework. In 
tested android hardware, it has total 990440KB memory 
size, and Android/OSGi platform need to spend about 
1.91MB memory size for initiating and starting OSGi 
framework, and 0.25MB memory size for starting 
application, however in pure Android platform same 
application only needs to spend about 1.21MB memory 
size.  
 
 
     Figure 12.  Lightweight navigation application for Android/OSGi 
platform 
 
Figure 13 illustrates Android/OSGi platform spends 
approximately 2MB memory size to launch OSGi 
framework, and when OSGi framework had been started, 
Android/OSGi platform can consume less memory size to 
start other applications. Total occupied memory size of 
probably lies in between 2MB and 3MB in Android/OSGi 
platform, however, pure Android platform has increased 
memory size, and grows up 5MB. Consequently, proposed 
Android/OSGi platform can spend less memory size than 
pure Android platform when OSGi framework had been 
started. 
 
 
        Figure 13.  Used Memory Analysis 
 
2) Telematics Services 
Figure 14 illustrates this study presents various telematics 
services to establish intelligent vehicles in mobile 
environment which mainly consist of line follow, object 
detection, keep distance, and so on. The first part of service 
helps vehicles follows guidelines to ensure driver security 
and reduce route-finding complexity to lighten the use of 
power. The second part of this service provides vehicles 
with visual intelligence to identify objects like traffic 
signals. The third part of the service helps vehicles 
maintain a set distance from vehicles in front of back. The 
last component of this service allows road-side centers to 
 1 
 
出席國際學術會議心得報告 
                                                             
出國人員姓名 
服務機關及職稱 
國立台東大學 資訊工程學系 陳明僑 助理教授 
會議時間地點 February 7-10, 2010,  Phoenix Park, Korea 
會議名稱 The 12th International Conference on Advanced Communication(ICACT2010) 
發表論文題目 Android/OSGi-based Vehicular Network Management System 
一、參加會議經過 
我與台灣科技大學電機系陳俊良教授一起於 2/6 搭乘 8:10 的中華航空 CI160 班機前
往韓國首爾，並於當地時間 11:35 抵達首爾仁川國際機場。之後搭乘機場巴士前往漢城
RITZ 飯店。並於次日搭乘巴士前往 Phoenix Park，並住進會場飯店。 
ICACT 研討會自從 1999 年開始辦理，ICACT 2010 為第十二屆研討會，今年共有 2
場 Keynote Speech，3 場 Tutorial 共 5 項主題；49 Technical Session 及 5 Poster Session：
包含來自 22 國家之 311 篇論文，今年大會的主題為 ICT for Green Growth and Sustainable 
Development，非常符合當前綠色科技與環境永續發展的議題。 
會中我參加了由國立台東大學張耀中教授所主持的Session 9D: Network Management, 
Operation and Maintenance (III) 原有五篇論文發表，其中 Iran 代表由於簽證問題未參加發
表，其餘四篇依序發表並與在座學者交換意見。發表的論文包括:  
1. Double WFQ QoS Scheduling based on Flow Number in Diffserve Network, Tadasuke 
Minagawa, Tetsushi Ikegami(Meiji university, Japan) 
2. Analysis of M/M/1 Queuing model of Reservation Management for Media Gateway 
Controller, Pedram Hajipour, Nahid Amani, Farzaneh Seyed Mostafaei(Iran 
Telecommunication Research Center, Iran) 
3. A Study on a QoS/QoE Correlation Model for QoE Evaluation on IPTV Service, Hyun 
Jong Kim, Seong Gon Choi(Chungbuk National University, Korea) 
4. 4. Automated tools for manipulating files in a distributed environment with RSYNC, 
Alireza Ghobadi, C. Eswaran, Chin-Kuan Ho, Payam Vahdani Amoli, Roozbeh 
Karimi(Multimedia University, Malaysia) 
5. 5. Adaptive Cross-layer QoS Mechanism for Cognitive Network Application, Shih-Wei 
Liu), Szu-Lin Wu (National Dong Hwa University, Taiwan), Jiann-Liang Chen (National 
Taiwan University of Science & Technology, Taiwan) 
 
我的 poster 報告是安排在 2/10 10:40，session 中各國學者都提出相當精闢的研究成果
及說明，讓我對於相關領域的先進研究，有了較為深入的了解。對於我所發表的論
文—“Android/OSGi-based Vehicular Network Management System”，與會的先進也提出了
一些問題並與之回覆與討論，受益良多。大會並於中午 12:00 順利圓滿結束。 
     
 
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
