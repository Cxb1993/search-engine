 I
 
中文摘要 
 
使用者身份認證是資訊安全中最重要的議題之一，而通行碼身份認證方法則一
直是最普遍被採用的遠端使用者身份認證方法，現今的通行碼身份認證設計可依伺
服器是否需要儲存通行碼驗證資訊而分為兩類，伺服器需儲存通行碼驗證資訊設計
的缺點在於攻擊者一旦取得此通行碼驗證資訊後便有機會猜得通行碼或憑藉此通
行碼驗證資訊假冒合法使用者，此外，攻擊者亦可能藉由篡改通行碼驗證資訊以危
害系統；至於伺服器免儲存通行碼驗證資訊設計則可避免通行碼驗證資訊遭竊或被
篡改之類的攻擊。過去已有許多伺服器免儲存通行碼驗證資訊之通行碼身份認證設
計被提出，例如：以公開金鑰密碼技術為基礎之 HL 設計與 YS 設計、以赫序函數
技術為基礎之 Sun 設計與 CJT 設計、以歐幾里得幾何技術為基礎之 Wu 的設計，但
均被發現有其安全弱點與實用性不佳的缺點。在本計畫中，我們分別分析以赫序函
數技術為基礎與以歐幾里得幾何技術為基礎的伺服器免儲存通行碼驗證資訊設計
常遭遇之攻擊的原因、影響與對策並以此為基礎分析最近被提出的此類代表性設
計，包括：以赫序函數技術為基礎之 HLT 設計與 DSG 設計、以歐幾里得幾何技術
為基礎之 CJT-geometric 設計與 LHL 設計。最後，我們亦提出較安全且實用性較高
的伺服器免儲存通行碼驗證資訊之通行碼身份認證設計，包括：以赫序函數技術為
基礎的改進設計以及以歐幾里得幾何技術為基礎的改進設計。 
 
 
關鍵字：通行碼身份認證、通行碼驗證資訊、赫序函數、智慧卡、可回復性。 
 III
目錄 
中文摘要 .....................................................................................................................I 
Abstract..................................................................................................................... II 
目錄 ........................................................................................................................... II 
Section 1. Introduction ............................................................................................. 1 
Section 2. Background and Related Works ............................................................ 4 
Section 3. Verifier-Free Schemes Based on Hash Functions ................................. 5 
3.1  The HLT Scheme ....................................................................................... 5 
  Description of the HLT Scheme..................................................................... 5 
  Security Analysis of the HLT Scheme ........................................................... 6 
3.2  The KC Scheme......................................................................................... 6 
  Description of the KC Scheme....................................................................... 7 
  Security Analysis of the KC Scheme ............................................................. 7 
     3.3  The DSG Scheme...................................................................................... 8 
 Description of the DSG Scheme .................................................................... 8 
 Security Analysis of the DSG Scheme........................................................... 9 
Section 4. Verifier-Free Schemes Based on Geometric Approach ........................ 9 
  4.1  Wu’s Scheme............................................................................................. 9 
 Description of Wu’s Scheme........................................................................ 10 
 Security Analysis of Wu’s Scheme .............................................................. 10 
 4.2  The CJT-geometric Scheme .................................................................... 11 
 Description of the CJT-geometric Scheme................................................... 11 
 Security Analysis of the CJT-geometric Scheme ......................................... 12 
4.3  The LHL Scheme..................................................................................... 12 
  Description of the LHL Scheme................................................................... 13 
  Security Analysis of the LHL Scheme ......................................................... 13 
Section 5. Improved Schemes ................................................................................ 15 
  5.1  An Improved Verifier-Free Scheme Based on Hash Functions .............. 15 
  Description of the Improved Hash Based Scheme....................................... 15 
  Security Analysis of the Improved Hash Based Scheme ............................. 16 
 5.2  An Improved Verifier-Free Scheme Based on Geometric Approach...... 17 
  Description of the Improved Geometric Based Scheme .............................. 17 
  Security Analysis of the Improved Geometric Based Scheme..................... 18 
Section 6. Conclusion and Future Work............................................................... 18 
References................................................................................................................ 19 
計畫成果自評 .......................................................................................................... 22 
 2
process consists of two steps: (1) identification — 
presenting an identifier to the security system; and (2) 
verification — presenting or generating authentication 
information that corroborates the binding between the 
entity and the identifier. For a security system, user 
authentication methods can be used to associate a 
unique identifier with a user. Because the security 
system relies on such association to enforce its poli-
cies, a critical requirement for user authentication is 
that it must ensure the unambiguous association of a 
user with his identifier. User authentication factors can 
be classified as: (1) something the user knows (e.g., 
password and personal identification number); (2) 
something the user possesses (e.g., identification card 
and badge); and (3) some personal trait of the user 
(e.g., fingerprint and signature). Among existing user 
authentication schemes, using a password is probably 
the most widely adopted user authentication strategy 
in login procedure because of its inexpensiveness, 
easy implementation, and user-friendliness. To be an 
effective security mechanism, passwords should be 
individually owned and must be kept secret. However, 
it is common to find people following poor security 
practices when dealing with passwords, such as writ-
ing them down in a piece of paper, to use familiar 
words that are easy to guess, and the use of the same 
password for different applications. Important factors 
affecting the strength of a password include its com-
position (the set of acceptable characters that can be 
used in a password), its length (the number of charac-
ters in a password), and its lifetime (the period of time 
a password is valid). 
Until now, many people have devoted themselves 
to investigating the password authentication scheme. 
In general, the remote server allows each user choos-
ing an identifier and a password for later login valida-
tion. If a user wants to login to a remote server, he can 
submit his identifier and password to the server. The 
simplest authentication approach is to store and main-
tain a password table including users’ identifiers and 
passwords in the remote server. Upon receipt of user’s 
identifier and password, the remote server searches the 
password table to check whether or not the submitted 
identifier and password match with those stored in the 
password table. Once the identifier and password 
match the corresponding pair stored in the server’s 
password table, the user will be granted access to the 
server’s facilities. Since the user’s password is stored 
in plaintext form in password table, this approach is 
vulnerable to the revelation of the passwords. An ad-
versary can impersonate a legal user by stealing the 
user’s identifier and password from the password table. 
Besides, two disadvantages are found in this approach. 
One is that the system load is high. If a lot of users 
register with the system, the password table will be-
come big and hard to maintain. The other is that an 
adversary can intercept a user’s identifier and pass-
word from the Internet and then replay it later to login. 
To prevent the password table from stealing by others, 
password is usually hashed or encrypted inside the 
server. However, the transmission of unencrypted and 
unhandled password could be stolen by wiretapping. 
Since conventional static password authentication 
schemes cannot resist direct wiretapping attacks, such 
schemes are unsuitable for open network environ-
ments. To meet today’s security requirements, many 
one-time password authentication schemes have been 
proposed. Existing one-time password authentication 
schemes can be categorized into two types: 
─ Password authentication schemes using verifiers: 
In 1981, Lamport [L81] proposed the novel hash 
based one-time password authentication scheme, 
which was intended to allow the server to au-
thenticate the user in a way that neither eaves-
dropping on an authentication exchange nor 
reading server’s database enables someone to 
impersonate the user. However, high hash over-
head and the necessity for password resetting 
decrease its suitability for practical use. Addi-
tionally, Lamport’s scheme is vulnerable to a 
small n attack [MC96]. Later, Haller [H94] pro-
posed a deployed version of Lamport’s scheme, 
S/KEY. Similar to Lamport’s scheme, S/KEY is 
also vulnerable to a replay attack [MC96]. Since 
then, many hash based password authentication 
schemes have been proposed, and each has its 
pros and cons. One of the common features of 
these earlier schemes is that a verification table 
should be securely stored in the server. And, if 
the verification table is stolen or modified by the 
adversary, the system will be at risk. 
─ Verifier-free password authentication schemes: 
To resist the server-compromise attack, many 
password authentication schemes without storing 
verifiers in the server have been proposed. In 
1990, Hwang, Chen, and Laih [HCL90] initially 
proposed a non-interactive password authentica-
tion scheme that does not require storing a pass-
word table in the server. However, the authors 
themselves showed that this scheme is vulnerable 
to a replay attack, and then described an en-
hanced version, which additionally uses smart 
cards. Unfortunately, Hwang et al.’s enhanced 
scheme still has several drawbacks and weak-
nesses. Since then, many verifier-free password 
authentication schemes using smart cards have 
been proposed. The smart card includes a com-
puter chip embedded into a carrier the size of a 
credit card. The design consists of a central 
processing unit, an optional coprocessor, input 
and output lines, and volatile and non-volatile 
memory. Using smart card as a part of authenti-
cation method will enhance the security and trust 
of people in transacting on the net. 
In terms of the usage of techniques, existing veri-
fier-free password authentication schemes can be 
categorized into three types: 
─ Cryptosystem based: Password authentication 
schemes of this type employ cryptosystems 
and/or modular exponential operation. Inevitably, 
using cryptosystems will lead heavy computa-
tional load to application systems. The represen-
tative cryptosystem based verifier-free password 
authentication schemes include the HL scheme 
 4
addition, we will show that these two improved 
schemes can withstand well-known attacks. Finally, 
our conclusion and future work are given in Section 6. 
2. Background and Related Works 
One of the common features of conventional 
password authentication schemes is that a verification 
table, which contains the verifiers of users’ passwords, 
should be securely stored in the server. If the verifica-
tion table is stolen or modified by the adversary, the 
system will be partially or totally broken. In 1990, 
Hwang, Chen, and Lai [HCL90] initially proposed a 
non-interactive password authentication scheme, 
which is referred to as the HCL scheme, and its en-
hanced version which additionally uses smart cards. 
Their schemes are novel because the server does not 
require storing verifiers and the server does not need 
to keep any secret of the user. However, the authors 
themselves [HCL90] showed that the HCL scheme is 
vulnerable to a replay attack. In addition, the enhanced 
HCL scheme still has several drawbacks and weak-
nesses: (1) passwords are difficult to memorize; (2) 
users cannot freely choose passwords; (3) users cannot 
freely change passwords; and (4) cannot withstand an 
impersonation attack. In 1991, Chang and Wu [CW91] 
also proposed a verifier-free password authentication 
scheme, which is referred to as the CW scheme, using 
smart cards based on the Chinese remainder theorem 
(CRT). However, the CW scheme is vulnerable to an 
impersonation attack [CL92]. Since then, many veri-
fier-free password authentication schemes using smart 
cards have been proposed, and each has its pros and 
cons. In 1996, Wang and Chang [WC96] proposed a 
verifier-free password authentication scheme using 
smart cards based on the difficulty of factoring a large 
number and discrete logarithm problem. In their 
scheme, which is referred to as the WC scheme, users 
can freely choose passwords. However, the WC 
scheme was found to be vulnerable to a replay attack 
and an impersonation attack [YS99][CC01]. 
In 1999, Yang and Shieh [YS99] proposed two 
verifier-free password authentication schemes using 
smart cards, the timestamp-based version, which is 
referred to as the YS-t scheme, and the nonce-based 
version, which is referred to as the YS-n scheme. In 
their schemes, users can freely choose passwords. 
Later, the YS-t scheme was found to be vulnerable to 
several impersonation attacks [CC02][FLZ02][SY03]. 
In addition, since the user’s password is revealed to 
the server, the YS-t scheme and the YS-n scheme may 
suffer from an insider attack. In 2002, Fan, Li, and 
Zhu [FLZ02] proposed an improved version, which is 
referred to as the FLZ scheme, of the YS-t scheme. 
Unfortunately, the FLZ scheme was found to be vul-
nerable to an impersonation attack [WLT03][CZ03]. 
In 2000, Hwang and Li [HL00] proposed a veri-
fier-free password authentication scheme, which is 
referred to as the HL scheme, using smart cards based 
on ElGamal’s public-key technique [E85]. The HL 
scheme does not allow users freely choosing and 
changing their passwords. Furthermore, the HL 
scheme was found to be vulnerable to various imper-
sonation attacks [CC00][CH03][SLH03][YSH04]. In 
2002, Lee, Ryu, and Yoo [LRY02] proposed an im-
proved version of the HL scheme without using pass-
word table by employing a fingerprint verification 
mechanism in the user’s smart card and two server’s 
secret keys. However, we find that their scheme, 
which is referred to as the LRY scheme, is vulnerable 
to a simple forgery attack and its reparability is poor 
[KCC05]. To solve the security problems of the HL 
scheme, Shen, Lin, and Hwang [SLH03] also pro-
posed a modified scheme, which is referred to as the 
SLH scheme. However, the user’s password is a 
pseudo-random number, i.e., it is not easily memoriz-
able. Additionally, the SLH scheme was found to be 
vulnerable to several impersonation attacks 
[LCFC03][YSH04]. In 2003, Awasthi and Lal [AL03] 
proposed a verifier-free password authentication 
scheme using smart cards, and claimed that their 
scheme, which is referred to as the AL scheme, can 
provide forward secrecy. In the AL scheme, users 
cannot freely choose and change passwords. In addi-
tion, we find that the AL scheme is potentially vul-
nerable to an impersonation attack. 
All previously mentioned schemes require modular 
exponentiation operations and/or other heavy compu-
tations. Aimed to improve the efficiency, Sun [S00] 
proposed a light-weight verifier-free password authen-
tication scheme, which is referred to as Sun’s scheme, 
using smart cards based on cryptographic hash func-
tions. The major drawbacks of Sun’s scheme are that 
the password is not easily memorizable and the user 
cannot freely choose/change password. In 2002, Lee, 
Hwang, and Yang [LHY02] proposed a hash based 
verifier-free password authentication scheme using 
smart cards as an improved version of Sun’s scheme 
in that their scheme, which is referred to as the LHY 
scheme, allows users to freely choose and change 
passwords. However, we find that the LHY scheme is 
potentially vulnerable to an insider attack and its 
reparability is poor.  Same security problems can 
also be found in the similar scheme, which is referred 
to as the HLT scheme, proposed by Hwang, Lee, and 
Tang [HLT02]. In 2002, Chien, Jan, and Tseng 
[CJT02] pointed out that Sun’s scheme only achieves 
unilateral user authentication. Then, they proposed a 
hash based verifier-free password authentication 
scheme using smart cards, and claimed that their 
scheme, which is referred to as the CJT scheme, can 
achieve mutual user authentication.  In addition, the 
user can freely choose password. Unfortunately, Hsu 
[H04] pointed out that the CJT scheme suffers from a 
parallel session attack. Furthermore, the CJT scheme 
is also vulnerable to a reflection attack and an insider 
attack [KC04]. In 2004, Ku and Chen [KC04] pro-
posed an improved version of the CJT scheme with 
better resistance to the reflection attack. Unfortunately, 
Yoon, Ryu, and Yoo [YRY04] pointed out that their 
improved scheme, which is referred to as the KC 
scheme, is vulnerable to a parallel session attack [G92] 
and a denial-of-service attack. In the same year, 
Kumar [K04] also pointed out that the KC scheme is 
 6
                L = h(PW2i ⊕ T) 
       where T denotes Ui’s the current 
timestamp. 
Step L3. Ui sends {IDi, L, T} to S. 
Authentication Phase 
This phase is invoked whenever S receives Ui’s 
login request. Let T' denote the time S receives Ui’s 
login request. 
Step A1. If the format of IDi is invalid, S rejects 
Ui’s login request. 
Step A2. If T′ – T ≥ ΔT, where ΔT denotes the 
maximal legal time interval for trans-
mission delay, S rejects Ui’s login re-
quest. 
Step A3. S computes h(h(IDi ⊕ x) ⊕ T). If 
the computed result equals the re-
ceived L, S accepts Ui’s login request. 
Otherwise, S rejects Ui’s login request. 
Password Change Phase 
This phase is invoked whenever Ui requests to 
change his password PWi with a new one, say PWi'. 
Step P1. Ui inserts his smart card into a login 
device, and then enters IDi, PWi, and 
PWi'. 
Step P2. Ui’s smart card first computes h(PWi) 
and h(PWi'), and then computes PW2i 
= PW1i ⊕ h(PWi), which yields h(IDi 
⊕ x). Next, Ui’s smart card computes 
PW1i' = PW2i ⊕ h(PWi'). 
Step P3. Ui’s smart card replaces PW1i with 
PW1i'. 
Security Analysis of the HLT Scheme  
In this section, we will show that the HLT 
scheme is not reparable [HK95] and is vulnerable to 
an insider attack [KCL03]. Furthermore, we will point 
out that it also lacks the user eviction mechanism, 
which should be provided by a practical remote user 
password authentication scheme. 
Poor Reparability 
The tamper resistance of smart cards was 
widely assumed in their applications, However, such 
an assumption may be problematic in practice. Many 
researches have showed that the secrets stored in a 
smart card can be breached by monitoring the power 
consumption, e.g., [KJJ99], or analyzing the leaked 
information, e.g., [MDS02]. Suppose that the adver-
sary has obtained the PW1i stored in Ui’s smart card 
and also intercepted the message transmitted in Step 
L3, i.e., {IDi, L, T}, during one of Ui’s past login 
processes. Then, the adversary can perform an off-line 
password-guessing attack to obtain PWi as follows. 
The adversary guesses a candidate password PWi* and 
computes PW2i* = PW1i ⊕ h(PWi*) = h(IDi ⊕ x)* and 
L* = h(PW2i* ⊕ T). If L* equals the intercepted L, the 
adversary has correctly guessed PWi* = PWi, which 
also implies that he has obtained PW2i* = PW2i (= 
h(IDi ⊕ x)). Otherwise, the adversary tries another 
candidate password. After obtaining PW2i, the adver-
sary can use it to impersonate Ui to login S.  
Unfortunately, the above described fraud can-
not be prohibited even if Ui has detected that his PW2i 
has been compromised and then uses a new password 
PWi' to request for re-registration. As the value of 
PW2i is unrelated to PWi' and is determined only by 
Ui’s identifier IDi and S’s permanent secret key x, S 
cannot change PW2i for Ui unless either IDi or x can be 
changed. However, since x is commonly used for all 
users rather than specifically used for only Ui, it is 
unreasonable and inefficient if x should be changed to 
recover the security for Ui only. Furthermore, it is also 
impractical to change IDi, which should be tied to Ui 
uniquely in most application systems. Hence, the ad-
versary can still employ the compromised PW2i to 
impersonate Ui to login S. That is, the HLT scheme is 
not easily reparable [HK95]. 
Insider Attack 
In practice, it is likely that the user uses the 
same password to access several servers for his con-
venience. In this case, if an insider of the server, e.g., 
the administrator, has learned the user’s password, he 
may try to impersonate the user to access other servers 
that adopt normal remote user password authentication 
schemes [KCL03]. In the registration phase of the 
HLT scheme, the hashed value of Ui’s password PWi, 
i.e., h(PWi), will be revealed to S after Step R2. The 
insider of S can guess a candidate password PWi* and 
compute h(PWi*). If the computed result equals 
h(PWi), the insider of S has correctly guessed PWi* = 
PWi. Otherwise, the insider of S tries another candi-
date password. 
Knowing PWi, the insider of S can try to use it 
to impersonate Ui to access other servers that adopt 
normal remote user password authentication schemes. 
Although it is also possible that all the insiders of S 
are not malicious and Ui does not use the same pass-
word to access several servers, the implementers and 
the users of the scheme should be aware of such a 
potential weakness. 
No User Eviction Mechanism 
If a user is evicted from the server, there should 
be a mechanism that can be used to revoke all the ac-
cessing rights previously assigned to that user. In the 
HLT scheme, if Ui is evicted from S, he can still login 
S because S cannot distinguish the evictees from the 
users that are not evicted. If S has to maintain a black 
list to record all the evictees, it violates the original 
expectation for the HLT scheme that the server does 
not need to store any user related information except 
his own secret key x for authenticating the user. 
3.2 The KC Scheme 
In 2004, Ku and Chen [KC04] proposed an 
improved version of the CJT scheme [CJT02] with 
better resistance to the reflection attack [M89] and the 
insider attack [KCL03]. In addition, their improved 
 8
terminal, enters ID and PWa, where PWa is the adver-
sary’s arbitrary password and requests to change 
password. Next, the adversary enters his new pass-
word PWa*. Next, U’s smart card computes Rnew* = R 
⊕ h(b ⊕ PW) ⊕ h(b ⊕ PWa*) which yields h(EID 
⊕ x) ⊕ h(b ⊕ PW) ⊕ h(b ⊕ PWa) ⊕ h(b ⊕ PWa*), 
and then replaces R with Rnew*. Therefore, the user 
U’s succeeding login requests will be denied unless he 
re-registers to S again. 
Off-line Password-Guessing Attack 
Generally, the tamper resistance of smart cards 
is widely assumed in most smart card based schemes. 
However, such an assumption may be problematic in 
practice. In 1999, Kocher et al. [KJJ99] stated that all 
existing smart cards were vulnerable in that the secret 
keys stored in the smart card could be extracted by 
monitoring the power consumption. In 2002, 
Messerges et al. [MDS02] showed that the secrets 
stored in a smart card may be breached by analyzing 
the leaked information. Next, once the adversary has 
obtained the R and b stored in U’s smart card, he can 
perform an off-line password-guessing attack to obtain 
PW. Suppose that the adversary also has intercepted 
the messages transmitted in Step L3, i.e., {ID, Tu, C2}, 
during one of U’s past logins. First, the adversary 
guesses a candidate password PW′ and computes 
C1′ = R ⊕ h(b ⊕ PW′) = h(EID ⊕ x)′ 
C2′ = h(C1′ ⊕ Tu). 
If C2′ equals the received C2, the adversary has cor-
rectly guessed PW′ = PW, which implies that he has 
obtained C1′ = C1 (= h(EID ⊕ x)). Otherwise, the ad-
versary tries another candidate password. After ob-
taining C1, the adversary can use it to impersonate U 
to login S. 
Insider Attack 
In the registration phase, U’s password PWs (= 
h(b ⊕ PW)) will be revealed to S after Step R2. S will 
compute R = h(EID ⊕ x) ⊕ PWs. The insider of S can 
use PWs and R to impersonate U to access the server 
[KCL03]. According to our research, it seems that 
Kumar misunderstands the meaning of the insider 
attack. 
3.3 The DSG Scheme 
In 2004, Das, Saxena, and Gulati [DSG04] 
proposed a dynamic identifier-based verifier-free 
password authentication scheme using smart cards. In 
their scheme, which is referred to as the DSG scheme, 
the user’s login identifier is dynamically generated 
and one-time used to resist the identifier-theft attack. 
In addition, users can freely choose and change their 
passwords. 
Description of the DSG Scheme 
The DSG scheme involves four phases, the 
registration phase, the login phase, the verification 
phase, and the password change phase, which can be 
described as in the following. The notations used in 
the DSG scheme can be summarized as in the follow-
ing table: 
 
 
Registration Phase 
This phase is invoked when Ui requests to reg-
ister with S. 
Step R1. Ui freely chooses his password PWi. 
Step R2.  Ui ⇒ S: PWi. 
Step R3.  S computes Ni = h(PWi) ⊕ h(x). 
Step R4.  S ⇒ Ui: PWi and a smart card con-
taining h( ), Ni, and y. 
Login Phase 
This phase is invoked whenever Ui requests to 
login S. 
Step L1. Ui inserts his smart card into the smart 
card reader of a terminal, and then en-
ters PWi. 
Step L2. Ui’s smart card computes CIDi = 
h(PWi) ⊕ h(Ni ⊕ y ⊕ T), where T 
denotes the current timestamp. 
Step L3. Ui’s smart card computes 
           Bi = h(CIDi ⊕ h(PWi)) 
       Ci = h(T ⊕ Ni ⊕ Bi ⊕ y). 
Step L4. Ui → S: CIDi, Ni, Ci, T. 
Verification Phase 
This phase is invoked whenever S receives Ui’s 
login request. 
Step V1. If T is not valid, i.e., not fresh, S re-
jects Ui’s login request. 
Step V2. S computes CIDi ⊕ h(Ni ⊕ y ⊕ 
T), which yields h(PWi), and then 
computes h(CIDi ⊕ h(PWi)) to ob-
tain Bi. 
Step V3. S computes h(T ⊕ Ni ⊕ Bi ⊕ y) 
and checks if the computed result 
equals the received Ci. If it holds, S 
accepts Ui’s login request. Otherwise, 
S rejects Ui’s login request and termi-
nates the operation. 
Password Change Phase 
This phase is invoked whenever Ui requests to 
 10
are its simplicity of geometry and the property that the 
user can freely choose his password. 
Description of Wu’s Scheme 
In Wu’s scheme, there are three kinds of partici-
pants: the users, the server, and a central authority 
(CA), where CA is assumed to be trusted and is re-
sponsible for setting up several public/secret parame-
ters and publishing some system information. The 
notations used in Wu’s scheme can be summarized as 
in the following table: 
 
The point (x0, y0) is generated by CA and is 
securely stored in CA and S. In the rest of this section, 
all multiplication operations are performed under 
modulo P, and we drop the operator mod P for clear-
ness. Wu’s scheme involves the registration phase, the 
login phase, and the authentication phase, which can 
be described as in the following. 
Registration Phase 
This phase is invoked when Ui requests to reg-
ister with CA. 
Step R1. Ui freely chooses his password PWi 
and sends the computed h(PWi) to CA. 
Step R2.  CA chooses the identifier IDi for Ui 
and defines two points riw and ri0 as (0, 
h(PWi)) and (h(IDi × x0), h(IDi × y0)), 
respectively. 
Step R3. CA constructs a line Li passing 
through riw and ri0, and then computes 
the middle point of riw and ri0, denoted 
by Ai. 
Step R4. CA delivers a smart card containing 
{IDi, h, P, Ai} to Ui through a secure 
channel. 
Login Phase 
This phase is invoked whenever Ui requests to 
login S. 
Step L1. Ui inserts his smart card into the smart 
card reader of a terminal and then en-
ters PWi. 
Step L2. Ui’s smart card computes riw = (0, 
h(PWi)) and reconstructs the line Li 
passing through riw and Ai. 
Step L3. Ui’s smart card computes the middle 
point of riw and Ai, denoted by Bi, and 
a new point riT = (0, h(PWi) + h(T)), 
where T denotes the current timestamp, 
and then uses riT and Bi to construct a 
new line LWT. 
Step L4. Ui’s smart card randomly selects a 
point Ci, which differs from riT and Bi, 
on the line LWT. 
Step L5. Ui sends {IDi, Ai, Ci, T} to S through a 
common channel. 
Authentication Phase 
This phase is invoked whenever S receives Ui’s 
login request at the time T'. 
Step A1. If the format of IDi is incorrect, S re-
jects Ui’s login request. 
Step A2. If the difference between T' and T is 
greater than the acceptable legal time 
interval for the transmission delay and 
the inconsistency of clocks, S rejects 
Ui’s login request. 
Step A3. S computes the point ri0 = (h(IDi × x0), 
h(IDi × y0)) and then uses ri0 and Ai to 
reconstruct the line Li. 
Step A4. S computes the intercept point riw of Li 
and y-axis, defines riw as (0, Ei), and 
then computes riT = (0, Ei + h(T)). 
Step A5. S uses riT and Ci to reconstruct LWT, 
and then computes the intercept point 
Di of Li and LWT. 
Step A6. If Di is the middle point of Ai and riw, 
S accepts Ui’s login request. Other-
wise, S rejects Ui’s login request. 
Security Analysis of Wu’s Scheme  
In 1999, Hwang [H99] pointed out that Wu’s 
scheme is vulnerable to an impersonation attack. In 
2001, Chien, Jan, and Tseng [CJT01] also pointed out 
that Wu’s scheme is vulnerable to an impersonation 
attack which is different from Hwang’s attack. 
Impersonation Attack by Hwang 
Assume that the adversary has intercepted one 
of Ui’s previous login messages, say {IDi, Ai, Ci, T}. If 
the adversary attempts to use the line Li to imperson-
ate Ui, an impersonation attack by Hwang can be per-
formed as in the following: 
Step 1.  The adversary defines R as (ai1, y), 
and then uses R and Ai to construct the 
line LRA. 
Step 2.  The adversary computes y = ai2 − h(T), 
and then constructs the line LWT pass-
ing through R and Ci. 
Step 3.  The adversary computes the intercept 
point riT = (0, h(PWi) + h(T)) of LWT 
and y-axis, and then computes riT − (0, 
h(T)) to obtain h(PWi) and riw. 
Step 4.  The adversary has the ability to recon-
struct the line Li passing through Ai 
and riw. Then, the adversary can easily 
use the line Li to impersonate Ui to 
 12
h(T))). 
Step A5. S uses riT and Ci to reconstruct LWT, 
and then computes the intercept point 
Di of Li and LWT. 
Step A6. If Di is the middle point of Ai and riw, 
S accepts Ui’s login request. Other-
wise, S rejects Ui’s login request. 
Security Analysis of the CJT-geometric Scheme  
The CJT-geometric scheme was claimed to be 
resistant to the replay attack, the Hwang’s attack 
[H99], and the attack on Wu’s scheme described by 
[CJT01]. Unfortunately, we find that the 
CJT-geometric scheme is still vulnerable to an off-line 
password-guessing attack. 
Off-line Password-Guessing Attack 
Suppose that the adversary has intercepted the 
messages {IDi, Ai, Ci1, T1} and {IDi, Ai, Ci2, T2} 
transmitted in Step L5 of two Ui’s past logins at T1 and 
T2, respectively. First, the adversary guesses a candi-
date password PWi', and then computes r'iT1 = (0, 
h(h(PWi') ⊕ h(T1))) and r'iT2 = (0, h(h(PWi') ⊕ 
h(T2))). Next, the adversary determines the line L'WT1 
passing through the computed r'iT1 and the intercepted 
Ci1. Similarly, the adversary can also determine the 
line L'WT2 passing through the computed r'iT2 and the 
intercepted Ci2. Then, the adversary computes the in-
tercept point of L'WT1 and L'WT2, denoted by Bi'. Next, 
he computes r'iw = (0, h(PWi')), and then computes the 
middle point of the computed r'iw and the intercepted 
Ai, denoted by Bi''. If Bi'' does not equal Bi', the adver-
sary tries another candidate password. Otherwise, i.e. 
Bi'' = Bi', the adversary additionally verifies whether 
PWi' equals PWi as follows. The adversary computes 
riT' = (0, h(h(PWi') ⊕ h(T))), where T is the current 
timestamp, and then constructs the line LWT' passing 
through the computed riT' and Bi'. Next, he randomly 
selects a point Ci', which differs from riT' and Bi', on 
the line LWT', and sends {IDi, Ai, Ci', T}, where IDi and 
Ai are previously intercepted by the adversary, to S. If 
the adversary’s login request is accepted by S, the ad-
versary has correctly guessed PWi' = PWi. From now 
on, the adversary can use PWi to impersonate Ui to 
login S at any time. If the adversary’s login request is 
rejected by S, the adversary tries another candidate 
password. 
4.3 The LHL Scheme 
In 2003, Lin, Hwang, and Li [LHL03] pro-
posed an efficient verifier-free password authentica-
tion scheme using smart cards for multi-server archi-
tecture based on the geometric property of the Euclid-
ean plane. Their scheme, which is referred to as the 
LHL scheme, allows users freely choosing and 
changing passwords. The service period for accessing 
each server can be assigned to each user independ-
ently, and the ElGamal’s digital signature technique is 
employed to prevent the user from illegally extending 
the service period. 
Description of the LHL Scheme 
In the multi-server architecture of the LHL scheme, 
there are three kinds of participants: the login users, m 
servers, and a central manager (CM), where CM is 
assumed to be trusted and is responsible for setting up 
several public/secret parameters and publishing some 
system information. The user only has to register with 
CM once and then can obtain the services from a set 
of servers. That is, the user does not need to individu-
ally register with each server. The notations used in 
the LHL scheme can be summarized as in the follow-
ing table: 
 
The LHL scheme involves five phases, the ini-
tialization phase, the registration phase, the login 
phase, the authentication phase, and the password 
change phase, which can be described as in the fol-
lowing. 
Initialization Phase 
This phase is invoked for the initialization of 
the whole system. 
Step I1.  CM selects a large prime p and a 
primitive element of GF(p), say g. 
Step I2.  For each server Seri ∈ Sm, CM se-
lects the private key di and computes 
the corresponding public key ei as 
follows: 
              ei = g
di mod (p−1) 
    Then, CM delivers (ei, di) to Seri 
through a secure channel. 
Registration Phase 
This phase is invoked when U requests to reg-
ister with CM. Assume that U is granted registration 
by a set of n servers Sn, where Sn ⊆ Sm. 
Step R1. U chooses his own identifier ID and 
password PW, and then delivers ID 
and PW to CM through a secure 
channel. 
Step R2.  For each Seri ∈Sn, CM computes the 
following items: 
          Xi = ID
ei mod p; Yi = ID
di mod p 
         Di = eiID mod p; Wi = eiPW mod p 
        where (Xi, Yi) and (Di, Wi) are two 
points for U with respect to Seri on the 
 14
IDa
ei mod p) to compute Yi,a. If (IDa × IDa) mod p 
equals the identifier of any legal user, say Ub, i.e., IDb 
= (IDa × IDa) mod p, Ua can compute Xi,b and Yi,b as in 
the following:  
    Xi,b = IDb
ei mod p 
  Yi,b = IDb
di mod p = Yi,a
2
 mod p 
Since Ua can intercept the Ki,b and Qi,b previously sent 
from Ub, he can construct Li,b passing through (Xi,b, Yi,b) 
and (Ki,b, Qi,b). Consequently, Ua can successfully use 
Li,b to impersonate Ub to login the remote server Seri. 
Similarly, Ua can compute Lj,b, for all j such that Serj 
∈ Sn, to impersonate Ub to login the remote server 
Serj. However, if (IDa × IDa) mod p does not equal the 
identifier of any legal user, we can further extend our 
attack by checking whether IDa
r
 mod p, where r is an 
integer within the interval [3, p−1], equals the identi-
fier of a legal user. Alternatively, two legal users, say 
Ua and Uc can conspire to check whether (IDa × IDc) 
mod p equals any legal user’s identifier. If IDb = (IDa 
× IDc) mod p, Ua and Uc can cooperate to compute: 
Xi,b = IDb
ei mod p 
Yi,b = IDb
di mod p = Yi,a × Yi,c mod p 
Then, Ua and Uc can construct Li,b, for all i such that 
Seri ∈ Sn, based on the computed (Xi,b, Yi,b) and the 
intercepted (Ki,b, Qi,b). That is, Ua and Uc can use Li,b 
to impersonate Ub to login the remote server Seri, for 
all i such that Seri ∈ Sn. 
Specified Forgery Attack 
Suppose that the attack target of the adversary 
is the specific valid user Ub. The adversary can try to 
find IDa with valid format such that IDa = IDb
r
 mod p, 
where r is an integer within the interval [2, p−1]. If the 
adversary succeeds in finding such an IDa, he can se-
lect PWa, and then register IDa and PWa to CM as Ua. 
Clearly, the adversary can compute Di,a = ei
IDa mod p 
and Wi,a = ei
PWa mod p. In addition, he can obtain the 
(Ki,a, Qi,a) sent out from his smart card during the 
login phase. Hence, the adversary can reconstruct the 
line Li,a passing through (Di,a, Wi,a) and (Ki,a, Qi,a). 
After computing Xi,a = IDa
ei mod p, the adversary can 
use Xi,a to compute Yi,a based on Li,a. Next, the adver-
sary can compute Xi,b and Yi,b as in the following: 
  Xi,b = IDb
ei mod p 
  Yi,b = IDb
di mod p = Yi,a
−r
 mod p 
Since the adversary can intercept the Ki,b and Qi,b pre-
viously sent from Ub, he can construct the line Li,b 
passing through (Xi,b, Yi,b) and (Ki,b, Qi,b). Then, the 
adversary can successfully use Li,b to impersonate the 
specific user Ub to login the remote server Seri. Simi-
larly, the adversary can compute Lj,b, for all j such that 
Serj ∈ Sn, to impersonate the specific user Ub to login 
the remote server Serj. Note that the difficulty of the 
above described specified forgery attack to succeed is 
not closely related to the number of legal users. 
Off-line Password-Guessing Attack 
If any of the above described two forgery at-
tacks succeeds, the adversary Ua can also perform an 
off-line password-guessing attack as follows. Since Ua 
can construct Li,b and compute Di,b = ei
IDb mod p, he 
can use Di,b to compute Wi,b based on Li,b. Next, Ua 
guesses a candidate password PWb' and computes 
ei
PWb' mod p. If the computed result equals Wi,b, Ua has 
correctly guessed PWb' = PWb. Otherwise, Ua tries 
another candidate password. If Ub also uses PWb to 
access the servers outside this system for his conven-
ience, Ua can impersonate Ub to access these servers 
[KC04]. 
Poor Reparability 
In real application environments, it is imprac-
tical to assume that the secrets will never be compro-
mised. Suppose that the adversary Ua has learned Ub’s 
password PWb by some means and intercepted (Ki,b, 
Qi,b) for any Seri ∈ Sn. Knowing PWb, Ua can com-
pute (Di,b, Wi,b) and construct Li,b based on (Di,b, Wi,b) 
and (Ki,b, Qi,b), and then use Li,b to impersonate Ub to 
login Seri. Next, we will show that such a fraud cannot 
be prohibited even if Ub has detected that PWb has 
been compromised and replaced it with a new one, say 
PWb(new), by invoking the password change phase. 
Clearly, Ua can compute Xi,b = IDb
ei mod p, and then 
use Xi,b to compute Yi,b based on Li,b. Since Xi,b and Yi,b 
are irrelevant to Ub’s password, their values will re-
main unchanged after completing the password 
change phase. Then, Ua still can use (Xi,b, Yi,b) and 
(Ki(new), Qi(new)), which can be obtained by interception, 
to construct Li,b(new). Henceforth, Ua can use Li,b(new) to 
impersonate Ub to login any remote server Seri ∈ Sn. 
On the other hand, if any of the previously described 
two forgery attacks succeeds, Ua can impersonate Ub 
to login Seri ∈ Sn no matter Ub has changed his pass-
word or not. Since the values of Xi,b and Yi,b are deter-
mined only by Ub’s identifier IDb and Seri’s perma-
nent key pair (ei, di), CM cannot change (Xi,b, Yi,b) for 
Ub unless either IDb or (ei, di) can be changed. How-
ever, since (ei, di) is commonly used for all users 
rather than specifically used for only Ub, it is unrea-
sonable and inefficient that (ei, di) should be changed 
to recover the security for Ub only. Additionally, it is 
also impractical to change IDb, which should be tied to 
Ub uniquely in most application systems. Hence, the 
LHL scheme is not reparable [HK95]. 
No User Eviction Mechanism 
When a user is evicted from the system, there 
should be a mechanism that can effectively revoke all 
the accessing rights previously assigned to him. In the 
LHL scheme, the service period for accessing Seri 
assigned to U is specified in SPi, and the ElGamal’s 
digital signature technique is employed to produce the 
signature (ri, si) to prevent U from illegally changing 
SPi. However, the LHL scheme cannot evict the user 
from the system immediately. 
 16
PWnew), and then replaces V and R 
with Vnew and Rnew. 
Security Analysis of the Improved Hash Based 
Scheme  
In this section, we will demonstrate that the 
improved hash based scheme is secure against the 
reflection attack [M89] and the parallel session attack 
[G92]. Additionally, we will also show that the im-
proved hash based scheme can resist the replay attack, 
the denial-of-service attack, the forgery attack, the 
off-line password-guessing attack, the insider attack 
[KCL03], and the server-compromise attack. Fur-
thermore, the improved hash based scheme is easily 
reparable [HK95]. 
Resistance to Replay Attack 
Suppose that the adversary has intercepted the 
login message {IDu, Tu, C2} transmitted in Step L3 at 
Tu. He can try to impersonate U to login S by directly 
replaying the intercepted message to S. Clearly, S will 
reject the adversary’s login request because the time-
stamp Tu is invalid. Alternatively, if the adversary 
sends {IDu, Tu', C2}, where Tu' is the current time-
stamp, to S, his login request will also be rejected be-
cause Tu' is inconsistent with C2, in which Tu was 
cryptographically embedded. Hence, the improved 
hash based scheme can resist the replay attack. 
Resistance to Denial-Of-Service Attack 
In the improved hash based scheme, the adver-
sary cannot easily change the user’s PW to denial the 
service between the server and the user. Because even 
if someone obtains user’s smart card, he has to enter 
valid PIN to activate smart card and enter correct PW 
so that he can invoke the password change phase. 
Since the adversary doesn’t know the PIN and PW, the 
improved hash based scheme can resist the de-
nial-of-service attack. 
Resistance to Forgery Attack 
Suppose that the adversary has intercepted the 
login message {IDu, Tu, C2} transmitted in Step L3 at 
Tu. To forge a valid login message that will be ac-
cepted by S at Tu', the adversary has to produce the C2' 
corresponding to Tu'. However, without knowing C1, it 
is infeasible for the adversary to compute C2'. That is, 
the adversary cannot forge a valid login message {IDu, 
Tu', C2'} that can pass S’s verification at Tu'. Similarly, 
the adversary cannot forge a valid message {Ts', C3'} 
that can pass U’s verification at Ts' to masquerade as 
the server. Hence, the improved hash based scheme 
can resist the forgery attack. 
Resistance to Off-line Password-Guessing Attack 
Suppose that the adversary also has intercepted 
the messages transmitted in Step L3, i.e., {IDu, Tu, C2}, 
during one of U’s past logins. First, the adversary 
guesses a candidate password PW' and computes C1' = 
R    ⊕ h(b ⊕ PW') and C2' = h(C1' || Tu || IDu). If C2' 
equals the received C2, the adversary has correctly 
guessed PW' = PW, which implies that he has obtained 
C1' = C1 (= h(EID ⊕ x)). Otherwise, the adversary 
tries another candidate password. After obtaining C1, 
the adversary can use it to impersonate U to login S. 
However, without knowing R and b, it is infeasible for 
the adversary to compute C1' and C2'. That is, the ad-
versary cannot guess PW in this way. Therefore, the 
improved hash based scheme can resist the off-line 
password-guessing attack. 
Resistance to Insider Attack 
Since U registers to S only by submitting IDu 
instead of PW or the verifier of PW, the insider of S 
can neither obtain PW nor the verifier of PW. Thus, 
the improved hash based scheme can resist the insider 
attack [KCL03]. 
Resistance to Server-Compromise Attack 
In the improved hash based scheme, the server 
only stores IDu and the number n. Even if an adversary 
steals the content of IDu and n from S, he still cannot 
masquerade as a legal user. Thus, the improved hash 
based scheme can resist the server-compromise attack. 
Resistance to Reflection Attack 
During Step L3, the adversary can copy and 
block the message sent by U, i.e., {IDu, Tu, C2}. Next, 
the adversary can impersonate S to send Ts  (= Tu) and 
C3 (= C2) to U in Step V2. However, U will terminate 
the session in Step V3 because the C2 and C3 are di-
rection-sensitive. Thus, the improved hash based 
scheme can resist the reflection attack [M89]. 
Resistance to Parallel Session Attack 
Yoon, Ryu, and Yoo showed that the KC 
scheme is vulnerable to a parallel session attack dur-
ing verification phase. This weakness is due to that C2 
and C3 (in the KC scheme) are direction-insensitive 
which allows an adversary to reuse a part of a previ-
ous message as a valid part in a new message. In the 
improved hash based scheme, the C2 and C3 are direc-
tion-sensitive. Thus, the adversary cannot masquerade 
as a legal user in the same way. Hence, the improved 
hash based scheme can resist the parallel session at-
tack [G92]. 
Reparability 
If U finds or suspects that his C1 (= h(EID ⊕ 
x)) has been compromised, U can re-register to S by 
submitting his IDu. Upon receiving U’s re-registration 
request, S will set nnew = n + 1 and compute EIDnew = 
(IDu || nnew). Next, S stores EIDnew in S’s database and 
U’s new smart card. After receiving the new smart 
card from S through a secure channel, U sets the PIN 
for activating his smart card. Then U enters new 
password PWnew into it. His smart card generates a 
new random number bnew, and then computes and 
stores 
Vnew = h2(b new ⊕ PW new) 
  Rnew = h(EIDnew ⊕ x) ⊕ h(bnew ⊕ PWnew). 
From now on, U can securely login S by using his new 
smart card and new password PWnew. In the mean-
while, the compromised C1 has been revoked auto-
matically, i.e., the login request of the adversary who 
 18
change his password PWi with a new one, say PWi(new). 
Step P1. Ui inserts his smart card into the smart 
card reader of a terminal and enters 
PIN to activate his smart card, and 
then enters his original password PWi 
and new password PWi(new). 
Step P2. Ui’s smart card uses PWi and the 
stored R to compute Ki = h(PWi || R) 
and h(Ki). If h(Ki) equals the stored Vi, 
Ui’s smart card sets the point riw = (0, 
Ki). Otherwise, Ui’s smart card rejects 
Ui’s request. Since Ai is the middle 
point of riw and ri0, Ui’s smart card 
computes ri0 = 2Ai − riw. 
Step P3. Ui’s smart card generates a random 
number R(new) and then computes 
riw(new) = (0, h(PWi(new) || R(new))). Next, 
Ui’s smart card computes Ai(new) = 
(riw(new) + ri0) / 2. 
Step P4. Ui’s smart card replaces the stored R, 
Ai, and Vi with R(new), Ai(new), and Vi(new) 
= h(h(PWi(new) || R(new))), respectively. 
Security Analysis of the Improved Geometric 
Based Scheme  
In this section, we will demonstrate that the 
improved geometric based scheme is secure against 
the off-line password-guessing attack. Additionally, 
we will also show that the improved geometric based 
scheme can resist the replay attack, the de-
nial-of-service attack, the forgery attack, the insider 
attack [KCL03], and the server-compromise attack. 
Resistance to Replay Attack 
Suppose that the adversary has intercepted the 
login message {IDi, Ai, Ci, T} transmitted in Step L5 
at T. He can try to impersonate Ui to login S by di-
rectly replaying the intercepted message to S. Clearly, 
S will reject the adversary’s login request because the 
timestamp T is invalid. Alternatively, if the adversary 
sends {IDi, Ai, Ci, T'}, where T' is the current time-
stamp, to S, his login request will also be rejected be-
cause T' is inconsistent with Ci, in which T was cryp-
tographically embedded. Hence, the improved geo-
metric based scheme can withstand the replay attack. 
Resistance to Denial-Of-Service Attack 
As there is no verifier stored in S, the de-
nial-of-service attack due to the inconsistence of 
stored data cannot be performed by the adversary in 
the login and authentication phases. Furthermore, 
since Ui’s smart card will verify Ui’s password PWi by 
using the stored Vi in Step P2 before changing its 
stored data, the adversary who has temporarily held 
Ui’s smart card cannot modify the data stored in it so 
that Ui’s subsequent login requests will be denied. For 
the same reason, the data stored in Ui’s smart card will 
not be wrongly changed by Ui himself in the password 
change phase. Therefore, the improved geometric 
based scheme can withstand the denial-of-service at-
tack. 
Resistance to Forgery Attack 
Suppose that the adversary has intercepted the 
login message {IDi, Ai, Ci, T} transmitted in Step L5 
at T. To forge a valid login message that will be ac-
cepted by S at T', the adversary has to produce the Ci' 
corresponding to T', which implies that he can con-
struct the corresponding LWT' passing through Bi and 
riT'. However, without knowing h(PWi || R), it is infea-
sible for the adversary to compute Bi and the corre-
sponding riT' = (0, h(h(PWi || R) ⊕ h(T'))), and there-
fore he cannot construct LWT'. That is, the adversary 
cannot forge a valid login message {IDi, Ai, Ci', T'} 
that can pass S’s verification at T'. Hence, the im-
proved geometric based scheme can withstand the 
forgery attack. 
Resistance to Off-line Password-Guessing Attack 
Suppose that the adversary has intercepted the 
login messages {IDi, Ai, Ci1, T1} and {IDi, Ai, Ci2, T2} 
transmitted in Step L5 at T1 and T2, respectively. Next, 
he can guess a candidate password PWi' and then try 
to verify his guess by using the intercepted messages. 
If the adversary can compute r'iT1 = (0, h(h(PWi' || R) 
⊕  h(T1))), he can determine the line L'WT1 passing 
through r'iT1 and Ci1. Similarly, if the adversary can 
compute r'iT2 = (0, h(h(PWi' || R) ⊕ h(T2))), he can 
determine the line L'WT2 passing through r'iT2 and Ci2. 
Then, the adversary can compute the intercept point 
Bi' of L'WT1 and L'WT2. On the other hand, if the adver-
sary can compute r'iw = (0, h(PWi' || R)), he can obtain 
the middle point Bi'' of r'iw and Ai. Once the equation 
Bi' = Bi'' holds, the adversary has correctly guessed 
PWi' = PWi. However, since the adversary does not 
know R, he cannot compute r'iw, r'iT1, and r'iT2. There-
fore, the improved geometric based scheme can with-
stand the off-line password-guessing attack. 
Resistance to Insider Attack 
Since Ui registers with CA by submitting 
h(PWi || R) instead of PWi or h(PWi) to CA and R is 
not revealed to CA, the insider of CA can neither ob-
tain PWi directly nor derive PWi by performing the 
off-line password-guessing attack. Therefore, the im-
proved geometric based scheme can withstand the 
insider attack [KCL03]. 
Resistance to Server-Compromise Attack 
In the improved geometric based scheme, the 
server only stores IDi tables. Even if an adversary 
steals the content of IDi from S, he still cannot mas-
querade as a legal user. Thus, the improved geometric 
based scheme can resist the server-compromise attack. 
6. Conclusion and Future Work 
Most verifier-free password authentication 
schemes based on hash functions and Euclidean geo-
metric property have the advantages of lighter com-
putational overhead, simpler designs, and easier im-
plementations. In this project, we have studied the 
causes and effects of the attacks often mounted on 
 20
using smart cards,” Computer Stan-
dards and Interfaces, vol. 26, no. 3, pp. 
167−169, May 2004. 
[HCL90]  T. Hwang, Y. Chen, and C. S. Laih, 
“Non-interactive password authentica-
tions without password tables,” IEEE 
Region 10 Conference on Computer 
and Communication Systems, Hong 
Kong, pp. 429−431, Sept. 1990. 
[HK95]  T. Hwang and W. C. Ku, “Reparable 
key distribution protocols for internet 
environments,” IEEE Transactions on 
Communications, vol. 43, no. 5, pp. 
1947−1949, May 1995. 
[HL00]  M. S. Hwang and L. H. Li, “A new 
remote user authentication scheme 
using smart card,” IEEE Transactions 
on Consumer Electronics, vol. 46, no. 
1, pp. 28−30, Feb. 2000. 
[HLT02]  M. S. Hwang, C. C. Lee, and Y. L. 
Tang, “A simple remote user authen-
tication scheme,” Mathematical and 
Computer Modelling, vol. 36, no. 1−2, 
pp. 103−107, July 2002. 
[K04]  M. Kumar, “On the weaknesses and 
improvements of an efficient pass-
word based remote user authentication 
scheme using smart cards,” Cryptol-
ogy ePrint Archive, July 2004. 
[KC04]  W. C. Ku and S. M. Chen, “Weak-
nesses and improvements of an effi-
cient password based remote user au-
thentication scheme using smart 
cards,” IEEE Transactions on Con-
sumer Electronics, vol. 50, no. 1, pp. 
204−207, Feb. 2004. 
[KC05]  W. C. Ku and S. T. Chang, “Imper-
sonation attack on a dynamic ID-based 
remote user authentication scheme 
using smart cards,” IEICE Transac-
tions on Communications, vol. E88-B, 
no. 5, pp. 2165−2167, May 2005. 
[KCC05]  W. C. Ku, S. T. Chang, and M. H. 
Chiang, “Further cryptanalysis of a 
fingerprint-based remote user authen-
tication scheme using smart cards,” 
Electronics Letters, vol. 41, no. 5, pp. 
25−26, March 2005. 
[KCL03]  W. C. Ku, C. M. Chen, and H. L. Lee, 
“Cryptanalysis of a variant of Pey-
ravian-Zunic’s password authentica-
tion scheme,” IEICE Transactions on 
Communications, vol. E86-B, no. 5, 
pp. 1682−1684, May 2003. 
[KJJ99]  P. Kocher, J. Jaffe, and B. Jun, “Dif-
ferential power analysis,” Proceedings 
of Advances in Cryptology 
(CRYPTO’99), pp. 388−397, 1999. 
[L81]  L. Lamport, “Password authentication 
with insecure communication,” Com-
munications of the ACM, vol. 24, no. 
11, pp. 770−772, Nov. 1981. 
[LCFC03]  K. C. Leung, L. M. Cheng, A. S. Fong, 
and C. K. Chan, “Cryptanalysis of a 
modified remote user authentication 
scheme using smart cards,” IEEE 
Transactions on Consumer Electron-
ics, vol. 49, no. 4, pp. 1243−1245, 
Nov. 2003. 
[LHL03]  I. C. Lin, M. S. Hwang, and L. H. Li, 
“A new remote user authentication 
scheme for multi-server architecture,” 
Future Generation Computer Systems, 
vol. 19, no. 1, pp. 13–22, Jan. 2003. 
[LHY02]  C. C. Lee, M. S. Hwang, and W. P. 
Yang, “A flexible remote user authen-
tication scheme using smart cards,” 
ACM Operating Systems Review, vol. 
36, no. 3, pp. 46−52, July 2002. 
[LRY02]  J. K. Lee, S. R. Ryu, and K. Y. Yoo, 
“Fingerprint-based remote user au-
thentication scheme using smart 
cards,” Electronics Letters, vol. 38, no. 
12, pp. 554–555, June 2002. 
[M89]  C. Mitchell, “Limitations of chal-
lenge-response entity authentication,” 
Electronics Letters, vol. 25, no. 17, pp. 
1195−1196, Aug. 1989. 
[MC96]  C. J. Mitchell and L. Chen, “Com-
ments on the S/KEY user authentica-
tion scheme,” ACM Operating System 
Review, vol. 30, no. 4, pp. 12−16, Oct. 
1996. 
[MDS02]  T. S. Messerges, E. A. Dabbish, and R. 
H. Sloan, “Examining smart-card se-
curity under the threat of power analy-
sis attacks,” IEEE Transactions on 
Computers, vol. 51, no. 5, pp. 
541−552, May 2002. 
[S00]  H. M. Sun, “An efficient remote user 
authentication scheme using smart 
cards,” IEEE Transactions on Con-
sumer Electronics, vol. 46, no. 4, pp. 
958−961, Nov. 2000. 
[SLH03]  J. J. Shen, C. W. Lin, and M. S. 
Hwang, “A modified remote user au-
thentication scheme using smart 
cards,” IEEE Transactions on Con-
sumer Electronics, vol. 49, no. 2, pp. 
414−416, May 2003. 
[SY03]  H. M. Sun and H. T. Yeh, “Further 
cryptanalysis of a password authenti-
cation scheme with smart cards,” 
IEICE Transactions on Communica-
tions, vol. E86-B, no. 4, pp. 
1412−1415, April 2003. 
[W95]  T. C. Wu, “Remote log in authentica-
tion scheme based on a geometric ap-
proach,” Computer Communications, 
vol. 18, no. 12, pp. 959−963, Dec. 
 22
計畫成果自評 
 
本研究內容與原計畫 (兩年期) 相符，並已達成預期目標：分析較具代表性的伺服器
免儲存通行碼驗證資訊之通行碼身份認證協定之安全性，並設計改良的伺服器免儲存通
行碼驗證資訊之通行碼身份認證協定。本研究已發表多篇論文於學術期刊與會議論文集
，論文目錄如下： 
期刊論文         
1. Hao-Rung Chung and Wei-Chi Ku, “Three Weaknesses in a Simple Three-Party Key Exchange Protocol,” accepted for 
publication in Information Sciences, full paper, 2007. 
(SCI, EI)   
2. Wei-Chi Ku and Hui-Lung Lee, “Authentication Protocols Using Hoover-Kausik’s Software Token,” Journal of Infor-
mation Science and Engineering, vol.22, no.3, pp.691-699, May 2006.    
(SCIE, EI)   
3. Min-Hung Chiang and Wei-Chi Ku, “Weaknesses of Two SAS-Like Password Authentication Schemes,” IEICE Trans-
actions on Communications, vol.E89-B, no.2, pp.594-597, Feb. 2006. 
(SCI, EI)   
4. Wei-Chi Ku, Hsiu-Mei Chuang, and Maw-Jinn Tsaur, “Vulnerabilities of Wu-Chieu's Improved Password Authentica-
tion Scheme Using Smart Cards,” IEICE Transactions on Fundamentals of Electronics, Communications and Computer 
Sciences, vol.E88-A, no.11, pp.3241-3243, Nov. 2005. 
(SCIE, EI)   
5. Wei-Chi Ku, Hsiu-Mei Chuang, and Min-Hung Chiang, “Cryptanalysis of a Multi-Server Password Authenticated Key 
Agreement Scheme Using Smart Cards,” IEICE Transactions on Fundamentals of Electronics, Communications and 
Computer Sciences, vol.E88-A, no.11, pp.3235-3238, Nov. 2005. 
(SCIE, EI)   
6. Wei-Chi Ku, Shen-Tien Chang, and Min-Hung Chiang, “Weaknesses of a Remote User Authentication Scheme Using 
Smart Cards for Multi-Server Architecture,” IEICE Transactions on Communications, vol.E88-B, no.8, pp.3451-3454, 
Aug. 2005. 
(SCI, EI)   
 
會議論文   
1. Wei-Chi Ku, Chun-Hao Hwang, and Hao-Rung Chung, “An Enhanced Verifier-Free Remote User Password Authentica-
tion Scheme,” Proceedings of the 2007 IEEE International Conference on e-Business Engineering (ICEBE), Hong Kong, 
China, pp. 406-409, Oct. 24, 2007. 
2. Hao-Rung Chung and Wei-Chi Ku, “Impersonation Attacks on a Simple Three-Party Key Exchange Protocol,” Pro-
ceedings of the 17th Information Security Conference, Taiwan, pp. 281-290, June 7-8, 2007. 
3. Wei-Chi Ku, Hsi-Hung Chen, Hao-Rung Chung, Chun-Hao Hwang, and Feng-Yuan Yang, “A Security Enhanced 
Password Authentication Scheme Based on Geometric Approach,” Proceedings of the 16th Information Security Con-
ference, Taiwan, pp.299-306, June 8-9, 2006.  
4. Wei-Chi Ku, Min-Hung Chiang, and Chun-Hao Hwang, “Security Analysis of Two SAS-Like Password Authentication 
Schemes,” Proceedings of the 2005 National Computer Symposium, Taiwan, IS-1, pp.1-6, Dec. 15-16, 2005.   
5. Wei-Chi Ku, Hsiu-Mei Chuang, Min-Hung Chiang, and Kuo-Tsai Chang, “Weaknesses of a Multi-Server Password 
Authenticated Key Agreement Scheme,” Proceedings of the 2005 National Computer Symposium, Taiwan, IS-2, pp.1-5, 
Dec. 15-16, 2005.   
6. Wei-Chi Ku, Kuo-Tsai Chang, and Feng-Yuan Yang, “A Remote User Authentication Scheme Based on Strong Graphi-
cal Passwords,” Proceedings of the 2005 National Computer Symposium, Taiwan, IS-12, pp.1-6,  Dec. 15-16, 2005.   
7. Wei-Chi Ku, Hsi-Hung Chen, Shen-Tien Chang, and Chun-Hao Hwang, “An Improved Geometric Based Password Au-
thentication Scheme Using Smart Cards,” Proceedings of the 2005 IEEE Workshop on Consumer Electronics and Signal 
Processing, Taiwan, 222, pp.1-4, Nov. 17-18, 2005.   
8. Wei-Chi Ku, Hsiu-Mei Chuang, Kuo-Tsai Chang, and Maw-Jinn Tsaur, “Weaknesses of an Improved Verifier-Free 
Password Authentication Scheme Using Smart Cards,” Proceedings of the 2005 IEEE Workshop on Consumer Electron-
ics and Signal Processing, Taiwan, 224, pp.1-4, Nov. 17-18, 2005.   
9. Wei-Chi Ku, Shen-Tien Chang, Hsi-Hung Chen, and Maw-Jinn Tsaur, “Weakness and Simple Improvement of a Pass-
word Authentication Scheme Based on Geometric Approach,” Proceedings of the 30th Annual IEEE Conference on Lo-
cal Computer Networks, Sydney, Australia, pp.1-2, Nov. 15-17, 2005. 
 
Session 3C-ES: E-Business Case Studies 
[第二天] 
Session 4A-EL: Electronic Contracts and Knowledge Management in E-Business 
Session 4B-EL: E-Commerce: Algorithms and Applications  
Session 5A-EL: Service Design and Collaboration 
Session 5B-EL: Workflow and Negotiation Systems for E-Services 
[第三天] 
Session 6A-EL: Agent Systems and Document Exchange 
Session 6B-EL: Design and Collaboration in E-Commerce Activities  
Session 6C-ES: Performance, Security and Personalization Services    
會議的場地主要安排在香港大學Graduate House (研究生樓) 的 P601, P602, P603, P503, 
P207，由於我的論文發表時間排在第三天 (2007.10.27)，我選擇參加 Keynote speeches：  
Keynote II:  
Digital Communities and Implication for e-Business  
Josephine M. Cheng 
IBM China Development Laboratories 
 
Keynote III:  
Proposition for E-DoD: An Overall Plan for Network-Centric Operation 
Raymond A. Paul 
DoD 
 
Keynote IV:  
Emergent Trends on Green Business and Service Engineering Green Business  
Jen-Yao Chung 
IBM T.J. Watson Research Center 
Accountable Services 
Kwei-Jay Lin 
University of California, Irvine 
 
以及較有興趣且與本專題研究計畫相關的 sessions： (以綠字表示較有收穫的 presentations) 
 
Session 2A-EL: RFID, Sensor, and  
Service Technologies in Business  
Processes 
Chair: Steven Miller 
  
Subscribing and Matching RFID-Related Events 
Beihong Jin, Shuang Yu, Xinchao  
Zhao, Zhenyue Long, and Yifeng Qian 
Negotiation Systems for E-Services 
Chair: Dickson Chiu 
  
Facilitating Agile Model Driven  
Development and End-User Development for  
Evolving Web-Based Workflow Applications 
Xufeng Liang, Ioakim Marmaridis, and  
Athula Ginige 
  
Machine Learning for Negotiation  
Knowledge Discovery in E-Marketplaces 
Raymond Y.K. Lau 
  
A Hidden Credential Based Oblivious 
Automated Trust Negotiation Model 
Zhensong Liao, Hai Jin, and Deqing Zou 
 
Session 6C-ES: Performance, Security 
and Personalization Services 
Chair: Steven Miller 
  
The Contribution of Intelligent System in 
Forming Trust and Competitiveness during  
Online Transactions 
Fahim Akhter 
  
An Enhanced Verifier-Free Remote User 
Password Authentication Scheme 
Wei-Chi Ku, Chun-Hao Hwang, and  
Hao-Rung Chung 
  
A Data Flow Optimization Based  
Approach for BPEL Processes Partition 
Yanlong Zhai, Hongyi Su, and Shouyi Zhan 
  
Toward an On-Demand Option Rating  
Service for E-Business 
Raymond Y.K. Lau, K-S Wong, K-F Fung,  
and S-Y Ho 
 
我們的論文發表場次為 Session 6C-ES: Performance, Security and Personalization 
Services，由於當中有其它論文的報告者缺席，我的報告時間便得以擴充為 30 分鐘，時間
充裕，過程尚稱順利，報告中有一位學者提問，報告結束後則有二位學者提問，他們均對
我們所設計的 Verifier-Free Remote Password Authentication Scheme 的安全性與效能感到有
興趣，而提問者均得到尚稱滿意的答覆。 
大會於 2007.10.27 結束，由於回程的航班安排在次日，因此，我也趁此機會到香港著
名的維多利亞港附近看看，晚上並到太平山頂欣賞維多利亞港夜景。次日，我搭乘華信航
使用者，故此類早期的靜態通行碼遠端使用者身份認證技術已不能滿足今日的安全需求；
而現今的遠端使用者通行碼身份認證方法則多藉由密碼技術以使遠端伺服器與使用者之間
所傳輸的通行碼為不固定值以避免攻擊者直接藉由竊聽網路取得通行碼。現今的遠端使用
者動態通行碼身份認證方法依其所使用的技術可大略分為兩類：(1) 以公開金鑰密碼技術為
基礎之身份認證方法；(2) 以赫序函數為基礎之身份認證方法。以公開金鑰密碼技術為基礎
之身份認證方法通常需要高複雜度的運算，相對地，以赫序函數為基礎之身份認證方法通
常僅需要低複雜度的簡單運算，因此有實作較容易、系統建置費用較低等優點，而本論文
的研究重點即為以赫序函數技術為基礎的身份認證方法。我們分析了 Yoon、Ryu 與 Yoo 的
伺服器免儲存通行碼驗證資訊設計，之後，我們提出一個較安全且實用性較高的伺服器免
儲存通行碼驗證資訊之通行碼身份認證設計，此改進設計能夠抵擋已知的攻擊並具備理想
的可回復性。由於現有的伺服器免儲存通行碼驗證資訊之通行碼身份認證設計皆缺乏一個
適當的使用者移除機制，然而此機制在實際應用環境卻是不可缺少的，故我們將使用者移
除機制加入於伺服器免儲存通行碼驗證資訊之通行碼身份認證改進設計中。我們的研究成
果對於 e-Business 中的使用者身份認證問題提供了一種解決的選項。 
在這次的與會過程中，香港學者普遍擁有良好的英文語言能力與很好的表達能力，在
論文簡報與問題討論中可以得心應手，這方面值得我多多學習與加強。此外，香港大學近
年來雖有很好的學術表現，但由於其校地在山坡上且較為擁擠，進出校園與在校園中行中
並不方便，相較而言，國內許多大學則具有較好的環境與發展潛力，這也可算是我們的一
項優勢。 
為了防衛以上的攻擊策略，澳大利亞政府訂定了多項資訊安全管理目標，並將此目標
與 e-Government 之安全及危機策略關聯在一起。本次會議中另一項重點即在於商業環境中
資訊戰的攻擊與防衛之政策與技術的討論。本國在資訊安全上的技術研究均在水準之上，
但似未能完全反映或協助提昇國家的安全保護與攻擊能力，未來政府與國內資訊安全相關
研究者的互動關係應仍有很大的發展空間。 
 
 


