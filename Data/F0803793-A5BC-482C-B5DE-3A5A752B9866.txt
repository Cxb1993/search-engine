 2
中文摘要 
 
關鍵字：封包分類、防火牆、服務品質、封包過濾、規則、衝突分析  
 
封包分類是在由封包檔頭中的欄位所構成的多維空間中執行點定位，藉由預先設定好的規
則來將封包分成不同的類別。目前封包分類的應用十分廣泛，從傳統應用在網際網路差異
化服務中來決定封包傳送之優先權到網路安全中用來過濾潛在威脅之封包，以及其他如負
擔平衡和流量計費等。 
封包分類演算法針對不同類型的網路應用皆有不同的需求，例如針對差異化服務之應用，
利用定義好的規則，每一個進入網路的封包都可以被歸類至一個傳送等級，例如對應至一
個差異化服務中的一個服務等級。在此模式中，每一個封包必定只會被歸類至一個傳送等
級，因此只需搜尋一個對應到的規則。但是針對網路安全的應用，由於網路入侵偵測系統
必須找出所有可能的威脅，亦即需要偵測出所有對應到的過濾規則，也因此產生不同的設
計需求。 
在此計畫中，我們針對不同類型之封包分類演算法提出整合性之解決方案，此方案為一以
軟體為基礎之高速封包分類。此演算法除了滿足一般高速演算法之需求外，我們還支援快
速更新，並可同時支援單一配對與多重配對。我們透過實驗驗證我們所開發出的演算法，
並與目前現有的數個著名演算法作比較。我們發現新的演算法除了提供比較好的效能與空
間兩者之間的平衡，並可提供一個完整的解決方案與更為彈性的應用。 
 4
一、研究計畫內容： 
（一）前言 
隨著網際網路服務的多樣化，各式各樣特別的需求也跟著被提出，包括具有品質保證的網
路服務與網路安全。上述兩類的需求都與此計畫要研究的主題“封包分類＂有著極為深切
的關連。在路由器上執行的路由搜尋可視為使用單一欄位(網路目的位址)的一維封包分類
技術，而 IP VPN 使用的則是兩個欄位(網路來源與目的位址)的二維封包分類。高維度封包
分類技術進一步允許管理者定義複雜的規則欄位，包括傳輸層來源、目的埠與通訊協定等。
隨著網際網路的新應用不斷出現，網路業者對於網路的設備也有了新的需求，與使用者最
殷切相關的兩個需求分別是針對網路封包的傳送品質與網路安全，而此二類需求皆與高維
度封包分類技術息息相關，本計劃即針對此一重要議題進行深入研究。 
 
（二）研究目的 
高維度封包分類問題定義 
我們先定義高維度封包分類演算法所要解決的問題，在一個規則資料庫中，包含了許多的
規則與過濾條件，每個規則(與過濾條件)都是由封包檔頭中的數個欄位中的值所組成，每
個欄位的值可以是變動長度的位址字首字串(Variable-length Prefix)、一個任意區間
(Range)或是一個數值(Explicit Value)，對於一個 d 個欄位的規則 Rj，我們可以定義成
Rj=(Rj [1], Rj [2],…, Rj [d])。通常在封包分類中，會使用到的欄位包括 IP 起始位址、
目標位址、協定類別、發起端與接收端的傳送層埠號等。圖一舉例出有哪些封包的欄位可
以當作分類的條件，值得注意的是這些欄位不限於網路層的欄位(如起始位址與目標位址)， 
資料連結層與傳送層的欄位也可包含在內。我們稱一個封包符合一個規則的條件是每一個
封包的 d 個欄位值與該規則的 d 個欄位定義值均相符。對於任一封包而言，當然有可能同
時符合數個規則，在傳統的封包分類中，每一個規則都被設定權重(如圖二所示)，當封包
符合數個規則時，最高權重規則的指定動作會被執行(如圖三所示)。但是針對防火牆所設
計之封包分類，則所有的符合規則都將被取出，因此無法使用權重簡化搜尋的步驟。此外，
IP 位址搜尋（IP Address Lookup）在理論上可視為封包分類問題的簡化版本
[18][19][20][21]，這個問題是有關於路由器如何快速的針對 IP 封包中目的位址來決定
傳送的路由器埠，而決定的原則就是最大符合的位址遮罩。對封包分類演算法而言，可視
為將規則縮減成只有一個欄位(即變動長度的位址字首字串)，因此許多在 IP 位址搜尋的
技巧亦可用來改進封包分類演算法的效能。利用將多欄位搜尋的問題分解成多個單一欄位
的搜尋，進而簡化搜尋的複雜度[2][6][9][11][14][28]。 
 
 6
6. 製作彈性：有的演算法必須使用特殊的硬體來製作，因此成本較高。一般而言，允許
使用軟體製作的演算法具有較高的彈性。 
我們的演算法目標即為針對上述六項目標提供一個完整的解決方案，以高速搜尋與縮
小記憶體需求為第一目標，並可增加支援的規則欄位與規則數。 
 
（三）文獻探討 
最直覺的封包分類演算法即利用線性搜尋，透過逐一比對來找出符合的規則，然而此方法
無法處理大量的規則，但由於其簡易的設計與節省的空間，線性搜尋在封包分類演算法中
仍扮演了重要的角色，許多的演算法透過將規則資料庫切成許多小資料庫的組合，進而使
用線性搜尋來處理小資料庫內的規則。接下來我們將分類回顧現有的演算法並說明相關的
弱點。 
 
硬體解決方案：使用三態內容定址記憶體(Ternary Content Addressable Memory, TCAM)，
透過這類型的記憶體，我們可將規則放入此TCAM中，然後平行比對所有的規則。此方法是
最快的解決方案[7][8]。然而，TCAM的一些限制仍造成其不適用於某些應用環境，例如，
TCAM無法有效的處理任意區間的欄位而會導致儲存的規則數目大增，此外，TCAM亦有高耗
電、成本高等缺點，且支援的規則數目不多都限制了其使用的環境。而TCAM只能找到第一
筆符合的規則，因此並不適用於多重配對封包分類，在[29]中，應用TCAM來處理多重配對
封包分類的方法已被提出，然而其所需的TCAM容量經常是規則數目的數十倍之譜。 
 
另一類型的硬體解決方案則是使用一個位元來代表一個規則，所有的規則進一步組成一個
位元向量(Bit Vector, BV)，每個不同欄位值內都放入一個BV，搜尋時只需找到相關的欄
位值，並將相關的BV取出後交集即可得到所有符合的規則。此方法的問題在於當規則數目
很多時，位元向量將佔很大的空間，並需要花很長的時間來存取。在[4]中，針對存取時間
改善的方案已被提出，然而其空間的問題並未解決。在[28]中，我們亦提出了針對時間與
空間同時改良的方案。 
 
樹狀資料結構解決方案：在[9]中提出了利用Grid-of-tries的資料結構來處理封包分類，
然而此演算法只能處理二維規則。因此在[14]中另提出了將Grid-of-tries的資料結構延伸
到多維規則的演算法，但是搜尋效能較不理想。另一類針對二維的資料結構有有
Area-Based-Qqadtree [15]與Fat Inverted Segment Tree [11]。有數篇論文針對只有兩
維的情況作演算法設計，細節可參考[22]。 
 
決策樹解決方案：與決策樹有關的方案包括了[12][13][17]，這類型的方法透過事先計算
出的切割方式將規則資料庫切成許多小的資料庫，進而使用線性搜尋來尋找小資料庫內的
規則。由於在切割的過程中會造成規則的複製，因此此類演算法在最差情況下可能會需要
巨大的空間來存放資料庫。但在現有的環境中，決策樹演算法被公認為目前最有效的方案。 
 
欄位組合解決方案：另一類型的解決方案運用了欄位組合的概念，藉由事先運算將所有的
可能欄位組合找出，之後僅需搜尋每個符合的欄位並加以組合即可找出符合的規則[9]，此
 8
的實作，尤其當以硬體來進行實作時，我們的方法可以提供與TCAM近乎相同的搜尋效能，
但是成本卻相對較低，因此我們計畫下一步以FPGA作為平台來實作我們的演算法，希望能
建立一個可實際運作之系統。 
 目前研究的成果都已經進入發表的程序，例如包含我們主要的演算法的論文目前正在
進行revise，另外我們在研究的過程中亦陸續衍生出數篇規模較小的封包分類效能改進方
案，希望能夠在近期內陸續完成投稿。 
 
二、參考文獻： 
[1] S. Blake et al, “An Architecture for Differentiated Services,＂ RFC 2475, 1998. 
[2] P. Gupta and N. McKeown, “Packet Classification on Multiple Fields,＂ in ACM SIGCOMM, 
September 1999, pp.147–160. 
[3] V. Srinivasan, G. Varghese and S. Suri, “Packet Classification using Tuple Space Search,＂ 
in ACM SIGCOMM, September 1999, pp. 135–146. 
[4] F. Baboescu and G. Varghese, “Scalable packet classification,＂ in ACM SIGCOMM ＇01, August 
2001, pp. 199–210. 
[5] Pankaj Gupta and Nick McKeown, “Algorithms For Packet Classification,＂ IEEE Network Magazine, 
vol. 15, no. 2, pp. 24–32, 2001. 
[6] Vijay P. Kumar, T. V. Lakshman and Dimitrios Stiliadis, “Beyond Best Effort: Router 
Architectures for the Differentiated Services of Tomorrow＇s Internet,＂ IEEE Communication 
Magazine, vol. 36, no. 5, pp. 152–164, 1998. 
[7] J. van Lunteren and T. Engbersen, “Fast and scalable packet classification,＂ IEEE JSAC, 
vol. 21, no. 4, pp. 560–571, May 2003. 
[8] Huan Liu, “Efficient mapping of range classifier into ternary-CAM,＂ in Hot Interconnects 
X, August 2002, pp. 95–100. 
[9] V. Srinivasan, G. Varghese, S. Suri and M. Waldvogel, “Fast Scalable Level Four Switching,＂ 
in ACM SIGCOMM, September 1998, pp. 191–202. 
[10] T.V. Lakshman and D. Stidialis, “High Speed Policy-based Packet Forwarding Using Efficient 
Multi-dimensional Range Matching,＂ in ACM SIGCOMM, September 1998, pp. 203–214. 
[11] Anja Feldmann and S. Muthukrishnan, “Tradeoffs for Packet Classification,＂ in IEEE INFOCOM, 
March 2000, pp. 1193–1202. 
[12] Thomas Woo, “A Modular Approach to Packet Classification: Algorithms and Results,＂ in IEEE 
INFOCOM, March 2000, pp. 1213–1222. 
[13] Pankaj Gupta and Nick McKeown, “Packet Classification using Hierarchical Intelligent 
Cuttings,＂ in Hot Interconnects VII, August 1999. 
[14] Florin Baboescu, Sumeet Singh and George Varghese, “Packet Classification for Core Routers: 
Is there an alternative to CAMs?＂ in IEEE INFOCOM, March 2003, pp. 53–63. 
[15] M. Buddhikot, S. Suri and M. Waldvogel, “Space Decomposition Techniques for Fast Layer-4 
Switching.＂ in IFIP Sixth International Workshop on Protocols for High Speed Networks, August 
1999, pp. 25–41. 
[16] V. Sahasranaman and M. Buddhikot, “Comparative Evaluation of Software Implementations of 
Layer-4 Packet Classification Schemes.＂ in IEEE ICNP, November 2001, pp. 220–228. 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 96-2221-E-005-010- 
計畫名稱 高維度封包分類演算法之設計與分析 
出國人員姓名 
服務機關及職
稱 
王丕中/國立中興大學資訊科學系/助理教授 
會議時間地點 時間：2008.07.06~2007.07.10, 地點：Sorrento, Italy 
會議名稱 2nd international workshop on Agent-oriented software engineering challenges for ubiquitous and pervasive computing 
發表論文題目 Service Discovery Based on Anycasting in Mobile Ad-hoc Networks 
 
一、 參加會議經過 
本人於 7/3 日出發前往義大利，於 7/4 抵達羅馬，並在羅馬休息兩天後前往
會議地點 Sorrento，第一天與第二天的議程包括數位 Keynote Speaker 的演
講以及其他數個同時舉行的研討會，我們的論文發表時程安排在 7/8 當天上
午，於該議程中我們介紹了“ Agent-Oriented Software Engineering 
Challenges for Ubiquitous and Pervasive Computing Workshop＂，並與參與
的學者針對實作的議題進行了討論。由於當天歐洲的運輸工會集體罷工，因
此當天與會的學者較前兩天少，但是因此也延長了我們報告時與其他學長討
論的時間。連同報告後的討論，我們一共花了將近一個小時相關議題的介
紹，也可以算是蠻特殊的經驗。第四與第五天則繼續參與其他學者的論文報
告。議程在第五天下午全部結束。此論文將收錄於 ACM Digital Library 中。 
 
