摘要 
 
最近這些年多媒體影音服務的應用發展越來越快速。被JVT所訂定的
H.264/AVC是目前最新的國際視訊編碼標準。同時針對使用H.264/AVC的即時多媒
體應用，編碼位元率控制也是一項極為重要的技術。為了克服這個課題，JVT採
用了JVT-G012方案作為這項控制機制的主體並把它實作在H.264的模擬平台
JM12.4。然而JVT-G012仍然存在了一些問題，其中包括了 
(1)針對關鍵的 R-D Model，方案中使用的 MAD預測方式並不夠精確。 
(2)針對高壓縮率的影音標準，方案中所使用的檔頭預測並不夠精確。 
(3)錯誤延續的緩衝區控管技術導致實際緩衝區溢出的情況大幅上升。 
 
因此為了解決上述問題本研究針對即時或是低延遲環境的視訊服務提出一
個改良的編碼位元率控制機制。在此機制裡本研究將利用場景轉換偵測區分出不
同的畫面特性，再利用INTER 16X16的移動向量來預測最適合的檔頭位元數以及
MAD資訊，最後站在實際緩衝區的角度上對編碼位元率控制的分配機制進行限制。 
 第一章 緒論 
1.1 背景 
從早期的MPEG-2，H.263，MPEG-4到H.264/AVC，現代社會中我們對於視訊多
媒體通訊的高度需求促使著眾多視訊編碼標準的誕生。目前漸漸有種觀點形成，
表示H.264/AVC很有可能藉著它優秀及廣泛的效能成為廣播電視，通訊以及儲存
媒體界的統一標準。同時由於它能夠因應現有及未來的網路要求，流暢地在網路
及廣播通道中傳送與接收，因此成為寬頻互動多媒體的國際標準[1]。 
承襲先前的視訊編碼標準的特性，H.264/AVC也要針對原始影像序列在時間
軸、空間軸以及統計特性上的冗餘資訊進行簡化處理。然而這些年來隨著越來越
多的影像處理技術的加入，H.264/AVC相較於之前訂定的視訊編碼標準，它已經
達到了一個相當高的編碼效率[2]。H.264/AVC正因為具備了這樣的特性，對於下
一個世代的多媒體通訊服務而言，從有線到無線通訊，從視訊會議、視訊廣播到
交錯式多媒體應用，從窄頻到寬頻服務，這項視訊標準都將因此而佔有一席之地。 
 
1.2 研究動機 
編碼位元率控制(Rate Control)實際上就是一種控制機制，目標就是控制壓
縮視訊的編碼位元數來達到視訊串流的成功傳輸以及最佳視訊品質。根據壓縮影
片的位元率特性，位元率控制可以分做變動位元率(Variety Bit Rate：VBR)以
及固定位元率(Constant Bit Rate：CBR)兩種[3]。變動位元率的影像可以達到
一致的影像品質，然而由於影片信號的不穩定特性導致它無法達到很好的頻寬使
用效率；因此犧牲部分品質重視頻寬資源使用效率的固定位元率控制成為了眾多
專家學者的研究重點。 
由於畫框的冗餘資訊量是隨著畫框各有不同，因此每個畫框所產生出的編碼
第二章 針對低延遲環境下的適應性H.264編碼位元率控制 
2.1簡介 
JVT-G012針對編碼位元率控制的解決草案在2003年之後就被H.264/AVC的制
訂團體採用且被此團體實做在H.264/AVC的模擬平台上JM12.4上。然而在後續的
研究中，這項解決的方案漸漸浮現出了一些潛藏的問題。於是爾後的這些年來，
針對編碼位元率控制的學者們主要就是在這階層控制的架構下陸續針對發現到
的問題提出改進的方案。結合了以往學者的研究成果以及本實驗室所發現到的問
題，以下就是本研究針對JVT-G012所整理出的問題： 
 
(1)針對關鍵的 R-D Model，方案中使用的 MAD預測方式並不夠精確 
因為無法在執行編碼位元率控制的時候得到基本單位的實際MAD資訊，因此採用
線性的模型來預測待編碼基本單位的MAD資訊。然而因為模型太過簡單，當測試
影像具有快速移動或是場景轉換的特性時此線性模型並不足以應付這種不可預
期的情況。此外在模型的參數更新時，由於參與訓練的資料出現誤差將會導致錯
誤延續的問題。 
 
(2)針對高壓縮率的影音標準，其所使用的檔頭預測並不夠精確 
在JVT-G012中預測待編基本單位的檔頭位元數是使用了之前所有已編碼過的檔
頭平均位元數。但是因為基本單位的檔頭大小跟其在畫框中所處的空間位置具有
極大的關連性，因此無法僅僅是使用平均的方式來預測。使用這種方式，尤其是
在低傳輸通道中將會因為預測的誤差導致編碼位元率控制的效果不理想。 
 
(3)錯誤延續的緩衝區控管技術導致實際緩衝區溢出的情況大幅上升 
 圖 2-1  針對低延遲情況的適應性編碼位元率控制流程圖 
0 50 100 150 200 250 300
500
1000
1500
2000
2500
3000
frame number
bi
ts
JM12.4
 
圖 2-3  H.264/AVC 檔頭位元數示意圖 
2.3檔頭位元數預測 
同一個場景內的相鄰兩畫框由於時間軸上的高度相關性所以可以藉由之前
的畫框資訊來預測當前的狀態。然而具有高度相關性不僅僅存在於時間軸上，在
空間軸上同樣也有著這樣的特性，因此理論上待編碼的基本單位在一張畫框相對
應的空間位置附近將會存在一個與其最雷同的參考單位。之前的演算法依靠著檔
頭平均來預測檔頭的位元數會產生落差便是因為它只考慮了時間軸的關連性而
忽略了空間分佈上的影響。本研究便因此根據上述的觀點提出了一個新的檔頭預
測機制，其操作步驟如下： 
1.在前一張畫框且符合移動預測的搜尋範圍內根據移動補償來比對MAD資訊，藉
此找出INTER16X16的移動向量以及與待編碼基本單位最匹配的參考單位。 
2.利用這個參考單位的檔頭位元數來當作目前待編碼基本單位的檔頭位元數。 
 
其示意圖見圖2-4以及圖2-5，在圖2-4中基本單位所找出的最佳匹配剛好等
同於前一個畫框中的某一個基本單位；然而在圖2-5中基本單位所找出的最佳匹
 
圖 2-5  基本單位資訊參考示意圖(2) 
 
圖 2-6  本研究所提的編碼流程圖 
2.4場景轉換偵測 
在編碼位元率控制當中所使用的MAD線性預測模型由於理論基礎在於相鄰兩
畫框的高度時間相關性。一旦對一個有不同場景特性的畫框進行編碼，此時便會
產生兩個嚴重的問題。第一，之前所依靠的線性關係就會被破壞；第二，由於場
景轉換的畫框跟前一張畫框的時間相關性不夠高，因此移動預測以及編碼模式極
有可能會從畫面間預測轉換成畫面內預測。這時其編碼特性便會跟I畫框的特性
類似而導致實際編碼位元數的急遽增加。上述這兩項原因便是本研究為何會特別
強調場景轉化偵測機制的緣故。 
 
當影片在網路上傳輸時，萬一發生了畫框遺失，名叫做畫框複製(Frame Copy)
2.6 HRD以及緩衝區控制的修正 
當一張畫框編碼完成後，其實際編出的位元數便會先進入緩衝區再經由通道
傳送出去。此時若生成的位元數大過傳輸的頻寬，多餘的位元數便會留在緩衝區
內，增加緩衝區的佔有率；反之，若生成的位元數小於傳輸的頻寬時，此時緩衝
區的佔有率便會下降。然而若生成的位元數小於傳輸的頻寬且在緩衝區的位元數
也小於未使用的頻寬資源，此時在原本的緩衝區控制機制中，其緩衝區的狀態便
會出現負值的情況，見[14]所發表的圖表，藉此說明緩衝區確實有可能出現負值
的情況。 
但是實際的緩衝區是不會有負值的狀態出現，一旦出現這種情形將會導致
HRD的上下限的設定會偏離實際的緩衝區狀態，並且這種錯誤從此之後會一直延
續下去。雖然之前已經有人發現這問題[15]，然而他們只針對緩衝區的狀態進行
修正，卻忽略了HRD的上下限的相關性。因此在本研究的修正中，緩衝區的狀態
將在出現負值的情況後將緩衝區的狀態值設成0，同時HRD的上下限狀態也將重新
設定，其初始公式更新如下： 
 
 
 
 
2.7針對畫框層的位元率分配機制 
在畫框層的編碼位元率控制本研究針對編碼前的處理進行了關鍵的修改，以
下為詳細步驟:  
編碼前： 
根據(a)緩衝區的佔有率以及(b)剩餘未分配的位元總數來計算目標位元數  
z 緩衝區的佔有率 
,0
,1
,0
,1
( )
( )
( )
( ) ( )        (4.2)
i
i
r
i
i
r
u n
L n
F
u n
U n BS w
F
=
= + ×
,
,
,
,
, ,
,
( )
( )
( 1)
( ), 1.1
ˆ ( ) (1.1 0.7 ( 1.1)) ( ),1.1 2.0     (4.4)
1.73 ( ), 2.0
r i j
ave i j
p r
ratio ave i j ratio
i j ratio ave i j ratio
ave i j ratio
T n
f n
N j
MAD f n MAD
f n MAD f n MAD
f n MAD
=
−
⎧ × <⎪
= + × − × ≤ <⎨⎪
× ≥⎩
 
 
若吾人先計算總數而後逐次分配出去的作法有很大的可能會因為之前
的資源濫用而導致之後的品質下降，因此本研究採用一種根據次序先後的權重計
算機制： 
1 2
1( )     (4.5)
p
jw j b b
N
−
= ⋅ + , 其中 1b 以及 2b 為定值，分別被設定為0.4和0.8。 
 
於是畫框層的所計算出的目標位元數 ,( )i jf n 便可以由 ,( )i jf n% ， ,ˆ ( )i jf n 以及
( )w j 共同計算，數學公式如下： 
, , ,
, ,
ˆ( ) ( ) (1 ) ( )   
( ) ( ) ( )                             (4.6)
i j i j i j
i j i j
f n f n f n
f n w j f n
β β= × + − ×
= ×
%
 
最後使用經過修正之後的HRD上下限進一步對目標位元數進行限制： 
{ }
{ }
, , ,
, , ,
( ) max ( ), ( )
( ) min ( ), ( )       (4.7)
i j i j i j
i j i j i j
f n L n f n
f n U n f n
=
=
 
 
2.8 針對基本單位層的位元率分配機制 
在基本單位層的編碼位元率控制，在第一階段的計算上本研究與在畫框層所
做的修正類似，同樣考慮內容的複雜度以及次序分配的不公正；第二個階段則是
使用在3-3的方式預測基本單位所用在檔頭上的位元數，最後一個階段則是針對
R-D Model修正MAD的預測方式。因此接下來便針對第一階段進行說明。 
 
2.9 演算法流程 
整體演算法架構以文字敘述如下： 
------------------------圖像組層控制--------------------------------- 
階段一：當一個新的GOP開始，利用緩衝區使用量，上一個GOP剩餘未分配資源以
及已知的頻寬資源，畫框速率，GOP大小計算新的GOP整體的目標位元數。 
階段二：利用預設値或是前一個GOP的平均值計算I畫框的量化參數。 
----------------------------畫框層控制------------------------------ 
階段三：利用場景轉換偵測計算當前畫框的複雜度 
階段四：利用流量控制模型計算出目前畫框所可分配到的目標位元數。 
階段五：利用這一整個GOP剩餘未分配的位元數以及畫框的複雜度計算出目前畫
框所分配到的目標位元數，最後依照畫框在GOP中的次序調整分配值。 
階段六：將階段四以及階段五所得的目標位元數合併，並且利用HRD所算出的上
下限對計算出的目標位元數進行限制。 
--------------------------基本單位層控制----------------------------- 
階段七：對當前的基本單位利用移動預測找出INTER16X16的移動向量，藉此在前
一張畫框中找出最接近的參考單位。 
階段八：使用前一個畫框移動向量找出的參考單位MAD，代入線性的MAD預測模
型，來預測出目前這個基本單位的MAD以及基本單位的畫面複雜度。 
階段九：在目前的畫框中，利用這一整個畫框剩餘未分配的位元數、預測出的單
位複雜度以及基本單位在畫框的次序計算出目前這個基本單位所分配到的目標
位元數。 
階段十：使用前一個畫框移動向量找出的參考單位檔頭位元數來預測目前這個基
本單位的檔頭資訊。 
階段十一：在二次方的位元率失真模型中，利用階段八所得出的MAD以及階段十
的檔頭資訊去計算出其所對應到的量化參數。 
第三章實驗結果 
本章節將對本研究的演算法進行模擬，將之跟JVT-G012以及[8]加以分析比較。 
 
3.1模擬環境 
本研究採用的H.264模擬平台JM版本為12.4版，系統環境為Micsoft Windows 
XP作業系統，並使用Visual C++ 6.0進行編譯。其餘的實驗條件列表如下： 
H.264 層級：Baseline 規範 
影像格式：QCIF，CIF 
測試影片：New_cif、Foreman_cif、Highway_cif、Akiyo_cif、 Carphone_qcif、
Container_qcif、Ice_qcif、Football_qcif、Claire_qcif、News_Ice_cif、
Foreman_Football_cif 、 Carphone_Mot&Dau_qcif 、 Mot&Dau_News_qcif 、
News_Salesman_qcif、Salesman_Container_qcif 
傳輸頻寬：QCIF格式使用64K bps，CIF格式使用480K bps 
畫框率：QCIF格式使用15 Hz，CIF格式使用30 Hz 
緩衝區大小：1.25倍 傳輸頻寬 /畫框率 
基本單位大小：1MB 
參考畫面數：1 
編碼方式：CAVLC 
搜尋範圍：16 pixels 
搜尋模式：FULLFAST  
圖像組格式：第一張I畫框其餘為P畫框 
 
在本研究的模擬中根據[16]將圖像組設做整部影片，同時根據[8][14]將緩
情況了，然而由於控制模型已經偏離真實情況導致演算機制對於真實情況毫無所
悉。此外在表3-5以及表3-6所呈現的數據，根據實際編碼的位元速率可以得知本
研究所提出的演算機制同樣維持了一定的頻寬資源使用率並且大幅降低實體緩
衝區發生溢出的可能性。 
接下來本研究將分別針對每部影片進行細部的分析。對於每一部測試影片隨
機選取一張畫框比較JVT-G012、[8]以及本研究所提出的基本單位檔頭預測機
制。同時本研究將針對測試影片所造成的PSNR、VBV控制模型以及實際緩衝區狀
態進行作圖。根據三種演算法在各種測試影片畫框所呈現的圖形曲線，本研究所
提出的方法雖然仍會有些許誤差但與其餘兩種相比精確性已經有了大幅度的提
升。在”Highway_cif”影片中根據表3-1雖然平均只有0.02、0.01dB左右的增長
但是這部影片在緩衝區所呈現的數據卻值得討論。由圖3-15發現在影片開頭時
VBV控制模型負值最高達到了30Kbits再慢慢降低，因此後續位元堆積在緩衝區時
從數值上來說並不會被偵測為溢出。然而對實際緩衝區來說卻完全不是那回事，
由圖3-16可以發現一旦控制機制未發現發生溢出，這錯誤將會一直產生下去。類
似的情況在”Akiyo_cif”、”News_Ice_cif”等多部影片都曾出現；
在”New_cif”影片裡根據圖3-5以及表3-1本研究所提出的演算法在PSNR上有著
大幅提升，平均可達0.63dB以及0.47dB，此外因為VBV控制模型的佔有率不曾低
於零，因此VBV模型與真實緩衝區狀態沒有差別，然而根據圖3-4在緩衝區內的佔
有率本研究所提出的方法比其餘兩種機制要來得低，因此本研究的方式對於緩衝
區所造成的負擔是相對小的。相似的情況在”Carphone_qcif”、”Ice_qcif”
等影片也有發現。 
在VBV控制模型與實際緩衝區相差不多的條件下所發現的PSNR增益以及疏解
緩衝區負擔的現象本研究將之歸因為前期預測和分配機制的提升。 
 
Football
Claire
Ice
Container
Carphone
Akiyo
Highway
Foreman
News
sequence
651636521
222932932283101
074074
41287457
152152
16293294162813
02952950160
263502118
3414334143
ProposeN. LingJM12.4ProposeN. LingJM12.4
Buffer overflow (張)VBV overflow (張)
 
表 3-3  單一影片緩衝區溢出統計表 
Buffer overflow (張)VBV overflow (張)
ProposeN. LingJM12.4ProposeN. LingJM12.4sequence
143093801424101Salesman_Container
103201201030120News_Salesman
1054258610114286Mot&Dau_News
347150341150Carphone_Mot&Dau
1882131182256Foreman_Football
11782551118176News_Ice
 
表 3-4  合併影片緩衝區溢出統計表 
 
 0
50
100
150
0 50 100 150 200 250 300 350 400
MB number
bit
s
MB header JM12.4 predict
 
圖 3-1  JM12.4檔頭位元數預測比較圖(News_cif) 
0
50
100
150
0 50 100 150 200 250 300 350 400
MB number
bit
s
MB header N.Ling predict
 
圖 3-2  Nam Ling檔頭位元數預測比較圖(News_cif) 
36
38
40
42
44
0 50 100 150 200 250 300
frame number
dB
JM12.4 N.Ling Propose
 
圖 3-5  PSNR比較圖(News_cif) 
0
20
40
60
80
100
120
0 50 100 150 200 250 300 350 400
MB number
bit
s
MB header JM12.4 predict
 
圖 3-6  JM12.4檔頭位元數預測比較圖(Foreman_cif) 
圖 3-9  VBV緩衝區比較圖(Foreman_cif) 
0
9000
18000
27000
36000
0 50 100 150 200 250 300
frame number
bit
s
JM12.4 N.Ling Propose buffer size
 
圖 3-10  真實緩衝區比較圖(Foreman_cif) 
32
34
36
38
40
0 50 100 150 200 250 300
frame number
dB
JM12.4 N.Ling Propose
 
圖 3-11  PSNR比較圖(Foreman_cif) 
0
20
40
60
80
100
0 50 100 150 200 250 300 350 400
MB number
bit
s
MB header Propose predict
 
圖 3-14  Propose檔頭位元數預測比較圖(Highway_cif) 
-30000
-20000
-10000
0
10000
20000
30000
0 50 100 150 200 250 300
frame number
bit
s
JM12.4 N.Ling Propose buffer size
 
圖 3-15  VBV緩衝區比較圖(Highway_cif) 
第四章結論 
 本研究根據檔頭位元數對於編碼位元率控制的高度重要性以及VBV控制模型
的疏漏而提出這一個更動編碼流程的演算機制。針對花費運算時間最大的移動預
測及移動補償來說本研究的方法只更動了編碼的次序而不增加運算的時間，這對
於低延遲或即時的多媒體應用尤其重要。在影片的品質上由第五章的模擬數據可
以發現這項演算法的確得到了一定的增益。此外對於緩衝區所提出的假設也使得
編碼端對於緩衝區的負擔有一定程度的舒解，特別對於越來越走向輕巧化以及精
緻化的行動數位商品而言更顯得重要。 
 
 
