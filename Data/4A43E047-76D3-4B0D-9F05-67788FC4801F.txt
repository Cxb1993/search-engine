I. INTRODUCTION
Differential evolution (DE) is a stochastic
population-based optimization algorithm [11],
[12]. Its simplicity and effectiveness on numeri-
cal optimization problems has attracted increas-
ing attention [2], [5], [8]. Recently, DE has
been successfully applied to deal with real-world
problems [10].
The differential mutation is a leading success
mechanism of DE [9]. In this operation, a mutant
vector for altering an individual is generated with
reference to a difference vector (DV) between
two other individuals. This operator enables DE
to explore the search space and keep population
diversity. The DV, which serves as a measure for
the dispersion of individuals, plays a key role
in the adaptive mutation of DE. Traditionally,
DE uses one DV for the differential mutation.
However, the number of DVs is truly an arity
for DE and is not necessarily limited to one.
This project investigates the influences of
the arity—the number of DVs—over the per-
formance of DE. Specifically, two issues are
considered:
• Is it beneficial to use more than one DV?
• What if the number of DVs is varying?
To address the two issues, this study examines
the effects of different fixed numbers of DVs
on convergence speed and solution quality of
DE. In addition, we propose a DE with varying
number of DVs based on Poisson distribution.
An empirical analysis and performance evalua-
tion are conducted on 24 numerical benchmark
functions.
The rest of this project is organized as follows.
Section II recapitulates the related work of DE.
Section III introduces the algorithm and opera-
tors of DE. In Section IV, we describe the pro-
posed DE methods in detail. Section V presents
the experimental results. Finally, conclusions are
drawn in Section VI.
II. RELATED WORK
In the light of DE scheme, Price and Storn
[11], [12] presented several variants of DE and
used the notation DE/x/y/z to identify them,
where x indicates selecting either a random or
the best individual to mutate, y is the num-
ber of DVs used for mutation, and z denotes
the crossover method. For example, the basic
DE/rand/1/bin represents the DE that mutates a
random individual with reference to one DV and
performs a binomial crossover.
The control parameters of DE include ampli-
fication factor of the difference vector, crossover
rate, and population size. Some studies focus on
determination and sensitivity analysis of control
parameters in DE. Most of them intend to im-
prove DE through adaptively tuning parameters
[3], [17]. Liu and Lampinen [4] proposed a fuzzy
adaptive differential evolution (FADE) which
applies fuzzy logic to control the parameters for
crossover and mutation adaptively. They reported
that the performance of DE is sensitive to the
control parameters. Additionally, the best setting
for control parameters depends on problems and
requirements. Their experimental results demon-
strate that FADE is better than the traditional DE
with all parameters fixed.
In addition, Brest et al. [1] employed a self-
adaptive parameter control in a way similar to ES
by encoding the parameters into the chromosome
and using a self-adaptive control mechanism to
change them. Nobakhti et al. [6] proposed the
co-evolutionary self-adaptive DE, which updates
the amplification factor during the optimization
process based on a uniform distributed update
rule. Noman and Iba [7] integrated DE with local
search method to improve exploitation of the
local optima for a balance of local and global
search ability of DE. Sun et al. [13] proposed
a combination of DE and the estimation of
distribution algorithm (EDA), in which ample
new solutions from a probability model help to
search toward a promising search space. Qing [9]
conducted a comprehensive comparative para-
metric study on DE. The results showed that the
strategies of random base vector are neither effi-
cient nor robust. He further adopted four differ-
ent strategies: DDE/best/1/bin, DDE/rand/1/bin,
CDE/best/1/bin, and CDE/rand/1/bin. Exper-
imental results confirm the superiority of
DDE/best/1/bin over other three strategies. Wang
and Xiang [14] proposed the DE/fit-dis/rand
strategy based on the Euclidean distance of
two individuals for constructing base vector.
Moreover, they developed DE/rand/±mean and
DE/rand/ring. The former uses two subpopula-
tions to increase the population diversity; the lat-
ter adopts the ring topology in order to regulate
the information flow among individuals. These
Table I: Parameter Setting
High-D unimodal High-D multimodal Low-D multimodal
f1–f7 f8–f13, f24 f14, f16–f18 f19 f20 f15, f21–f23
Dimension D 50 50 2 3 6 4
Population size NP 250 100
Amplification factor Fk 0.5
Crossover rate Cr 0.9
Num. of DVs N FDE: N = 1, . . . , 5
PDE: N ∼ Poisson(λ), λ = 1, . . . , 5
Num. of generations 5000
Num. of runs 30
Poisson differential evolution (PDE), in which
the number of DVs is based on Poisson distri-
bution, i.e., N ∼ Poisson(λ), and is determined
independently for each mutant vector. According
to Poisson distribution, it holds for the number
of DVs that
E(N) = λ and Var(N) = λ,
where E denotes the expected number and Var
denotes the variance. The dynamic characteristic
and variance of the number of DVs in PDE
can increase the diversity of mutant vectors and
further the population, which helps to escape
from local optima in the course of evolution.
V. EXPERIMENTAL RESULTS
This project conducts experiments on 24 nu-
merical benchmark functions [15], [16] to inves-
tigate the effects of FDE and PDE. The bench-
mark functions are divided into three categories:
f1–f7 are high-dimensional unimodal functions,
f8–f13 and f24 are high-dimensional multimodal
functions with many local optima, and f14–f23
are low-dimensional multimodal functions with
a few local optima. For more detailed description
of these functions, see [15], [16].
Table I lists the parameter setting used in
the experiments for FDE and PDE. Note that
FDE using N = 1 corresponds to the origi-
nal DE/rand/1/bin and λ is the parameter for
Poisson distribution in PDE. The population is
initialized at uniform random. Each experiment
setting includes 30 independent runs concerning
the stochastic nature of DE.
A. High-dimensional Unimodal Functions
Regarding solution quality, Table II compares
FDE and PDE with different numbers (expec-
tation) of DVs in the mean best fitness (MBF)
and standard deviation. The results show that the
10-2
100
102
104
106
108
 0  200  400  600  800  1000  1200  1400
M
BF
 (f 6
)
Generation
DE
PDE (λ=1)
PDE (λ=2)
PDE (λ=3)
PDE (λ=4)
Figure 2: Comparison of convergence for DE
and PDE(λ) on f6.
original DE, i.e. FDE using N = 1, is better
than FDE using more than one DV on unimodal
functions. Increasing the number of DVs in FDE
generally deteriorates the solution quality. On the
other hand, PDE with λ ∈ {1, . . . , 5} generally
outperforms DE in terms of solution quality. The
increase of DVs in PDE consistently improves
the solution quality on f7; nonetheless, this trend
is unclear on other unimodal functions.
The one-tailed t-test is further carried out to
examine the statistical significance. With confi-
dence level α = 0.05, the p-values in Table III
demonstrate that PDE can significantly enhance
DE on f1, f2, f3, and f7 while FDE with
more than one DV can achieve it only on f7.
These results show that using more DVs is not
useful for FDE but can be advantageous for PDE
on unimodal functions. In addition, Table III
indicates that PDE leads to significantly better
solutions than FDE does with respect to the same
expectation of DVs. This outcome validates that
the varying number of DVs is superior to fixed
number of DVs in terms of solution quality.
Next, we look into the convergence of FDE
Table III: T-test results for FDE and PDE on high-dimensional unimodal functions f1–f7. Boldface
signifies the statistical significance that method B outperforms method A.
A – B f1 f2 f3 f4 f5 f6 f7
DE – FDE(N=2) 7.06E-22 1.19E-18 2.60E-14 4.40E-13 2.12E-13 1.80E-15 3.37E-06
DE – FDE(N=3) 4.10E-16 2.83E-16 1.56E-18 2.60E-16 3.01E-09 1.47E-10 6.27E-09
DE – FDE(N=4) 2.44E-14 4.66E-13 7.42E-12 5.84E-11 2.87E-06 9.17E-11 4.48E-12
DE – FDE(N=5) 7.04E-12 1.92E-14 3.63E-16 7.77E-19 1.22E-03 8.80E-11 1.16E-15
DE – PDE(λ=1) 9.65E-08 1.06E-08 7.79E-15 -9.94E-02 1.51E-32 - 1.08E-04
DE – PDE(λ=2) 9.65E-08 1.06E-08 7.60E-15 1.15E-03 3.32E-16 - 1.30E-05
DE – PDE(λ=3) 9.65E-08 1.06E-08 7.60E-15 2.15E-12 1.92E-10 - 4.58E-09
DE – PDE(λ=4) 9.65E-08 7.70E-02 1.06E-14 5.69E-14 4.19E-09 - 2.18E-11
DE – PDE(λ=5) 8.33E-02 1.06E-08 6.92E-03 1.40E-17 1.82E-05 - 8.24E-15
FDE(N=1) – PDE(λ=1) 9.65E-08 1.06E-08 7.79E-15 9.94E-02 1.51E-32 - 1.08E-04
FDE(N=2) – PDE(λ=2) 7.06E-22 1.19E-18 2.43E-14 5.43E-13 9.59E-02 1.80E-15 3.66E-01
FDE(N=3) – PDE(λ=3) 4.10E-16 2.83E-16 1.49E-18 5.97E-16 3.90E-01 1.47E-10 2.06E-01
FDE(N=4) – PDE(λ=4) 2.44E-14 4.66E-13 7.14E-12 2.37E-10 2.13E-01 9.17E-11 2.97E-01
FDE(N=5) – PDE(λ=5) 7.04E-12 1.92E-14 3.58E-16 5.50E-18 3.36E-02 8.80E-11 1.91E-01
10-20
10-15
10-10
10-5
100
105
1010
 0  1000  2000  3000  4000  5000
M
BF
 (f 1
3)
Generation
DE
PDE (λ=1)
PDE (λ=2)
PDE (λ=3)
Figure 4: Comparison of convergence for DE
and PDE(λ) on f13.
and PDE. Due to similarity of results and limited
space, this report only presents the convergence
of FDE and PDE on f3 and f6. Figure 1
shows that PDE converges much faster than FDE
does on f3. As the expected number of DVs
increases, the efficiency of PDE improves but
that of FDE deteriorates. As for f6, Table II
exhibits that both DE and PDE can achieve the
optimal solution; however, Fig. 2 demonstrates
the advantage of PDE in convergence speed
over DE. The above experimental results verify
that, on high-dimensional unimodal functions,
the varying number of DVs in PDE is beneficial
for improving solution quality and convergence
speed of DE, but using more than one DV in
FDE is disadvantageous.
B. High-dimensional Multimodal Functions
The second part of our experiments focuses
on high-dimensional (D = 50) multimodal func-
tions with many local optima. To find the global
optima of these test functions is very challeng-
ing. Table IV presents the mean best fitness and
standard deviation for FDE and PDE on the
seven high-dimensional multimodal functions.
The results show that using more than one DV
in FDE seldom outperforms DE. Increasing DVs
in FDE worsens the solution quality on f9, f11,
f12, and f13. Additionally, the table demonstrates
that PDE can achieve better solution quality than
DE and FDE. The best expectation λ for PDE is
dependent upon problem.
The t-test results on Table V further con-
firmed that PDE can significantly enhance DE
in solution quality, except on f11. Noteworthily,
the table shows that FDE with five DVs can
gain significant improvement over DE on f8 and
f24 and with two or three DVs on f10. The
outcome validates the use of more than one DV
can be beneficial for FDE on high-dimensional
multimodal functions, if the number of DVs is
set properly. As the expectation λ of PDE is the
same as the adopted number N of FDE, PDE
can significantly outperforms FDE, especially on
f9, f11, f12, and f13. These preferable results
reconfirmed the advantage of PDE over DE in
solution quality.
Figure 3 depicts the convergence of FDE
and PDE on f9. The figure shows that PDE
converges faster and achieves better fitness than
Table V: T-test results for FDE and PDE on high-dimensional multimodal functions f8–f13 and
f24. Boldface signifies the statistical significance that method B outperforms method A.
A – B f8 f9 f10 f11 f12 f13 f24
DE – FDE(N=2) 6.06E-13 3.08E-46 1.52E-19 9.73E-14 4.38E-10 3.43E-09 8.80E-08
DE – FDE(N=3) 4.42E-13 7.77E-52 1.52E-19 7.05E-12 6.16E-17 3.51E-15 3.43E-10
DE – FDE(N=4) 6.28E-06 2.30E-52 -8.02E-02 7.06E-12 5.87E-10 8.72E-10 -3.37E-01
DE – FDE(N=5) 4.39E-03 6.11E-68 2.86E-02 1.05E-11 6.48E-21 5.22E-21 8.24E-05
DE – PDE(λ=1) 1.99E-03 4.16E-12 1.52E-19 - 3.24E-07 2.99E-10 3.33E-02
DE – PDE(λ=2) 1.18E-04 3.87E-23 1.52E-19 - 3.24E-07 2.99E-10 6.06E-05
DE – PDE(λ=3) 1.81E-06 2.44E-28 1.52E-19 -4.15E-02 3.88E-02 2.99E-10 1.14E-07
DE – PDE(λ=4) 1.31E-02 3.25E-15 -1.63E-01 - 1.63E-02 2.98E-02 5.41E-03
DE – PDE(λ=5) 5.99E-03 1.26E-21 -5.18E-02 9.20E-03 3.12E-02 1.11E-03 3.00E-02
FDE(N=1) – PDE(λ=1) 1.99E-03 4.16E-12 1.52E-19 - 3.24E-07 2.99E-10 3.33E-02
FDE(N=2) – PDE(λ=2) 1.24E-03 7.24E-52 1.63E-01 9.73E-14 4.38E-10 3.43E-09 6.35E-02
FDE(N=3) – PDE(λ=3) 1.17E-03 1.25E-59 2.96E-03 7.05E-12 6.16E-17 3.51E-15 3.79E-02
FDE(N=4) – PDE(λ=4) 2.76E-02 7.56E-33 8.02E-02 7.06E-12 5.87E-10 8.72E-10 3.43E-01
FDE(N=5) – PDE(λ=5) 4.75E-01 1.87E-34 2.59E-01 1.06E-11 6.48E-21 5.22E-21 6.94E-03
FDE. Increasing the expectation λ in PDE can
accelerate the convergence. Next, we examine
the convergence on f13, where the MBF values
of DE and PDE with λ ≤ 3 are very close to each
other. The profiles in Fig. 4 have a consistent
trend with those in Fig. 3: PDE converges faster
than DE; increasing the expected number of DVs
in PDE further speeds up convergence. These
outcomes validate that PDE can improve DE
in both convergence speed and solution qual-
ity on high-dimensional multimodal functions.
Increasing the expectation λ in PDE causes
faster convergence but at the risk of premature
convergence.
C. Low-dimensional Multimodal Functions
Finally, we investigate the performance of
FDE and PDE on the low-dimensional multi-
modal functions, which have relatively fewer
local optima than those in Section V.C. Table VI
points out that both FDE and PDE with all
the test numbers of DVs can achieve the opti-
mal solutions on f16–f20. The results on other
functions are also similar. Moreover, Table VII
confirms that neither PDE nor FDE can lead
to significant improvement on DE. In the case
that λ of PDE equals N of FDE, PDE can
significantly outperform FDE in solution quality
on f17, f20–f23.
Figure 5 compares the convergence of DE
with that of PDE using different values of λ.
In the figure, PDE with all λ ∈ {1, . . . , 5}
converges faster than DE does. The tendency
with the increase of λ, however, is not clear.
-3.2
-3
-2.8
-2.6
-2.4
-2.2
-2
-1.8
-1.6
 0  5  10  15  20  25  30  35  40
M
BF
 (f 2
0)
Generation
DE
PDE (λ=1)
PDE (λ=2)
PDE (λ=3)
PDE (λ=4)
PDE (λ=5)
Figure 5: Comparison of convergence for DE
and PDE(λ) on f20.
These outcomes reveal that PDE benefits only
convergence speed but solution quality on low-
dimensional multimodal functions. This ineffec-
tiveness of PDE on improving solution quality
could be due to the fact that these functions are
not difficult for DE to find the optima.
VI. CONCLUSIONS
This project investigates the effects of number
of DVs through two strategies for DE. First,
the FDE extends the original DE by allowing
an arbitrary but fixed number of DVs. Second,
the PDE determines the number of DVs based
on Poisson distribution, which brings about a
varying number of DVs for the mutant vector.
Experimental results on 24 numerical bench-
mark functions give some keys to the two issues
tation λ for PDE is problem-dependent. An
appropriate strategy for its setting is needed.
In addition, the model for the number of DVs
is unnecessarily limited to Poisson distribution:
other distributions are applicable. Currently we
are developing adaptive and self-adaptive meth-
ods to control the value of λ. A study on the
effects of the variance and distribution for the
number of DVs is also ongoing.
REFERENCES
[1] J. Brest, S. Greiner, B. Boškovic´, M. Mernik, and V. Žumer.
Self-adapting control parameters in differential evolu-
tion: A comparative study on numerical benchmark prob-
lems. IEEE Transactions on Evolutionary Computation,
10(6):646–657, 2006.
[2] U. K. Chakraborty, editor. Advances in Differential Evolu-
tion. Springer, 2008.
[3] J. Liu and J. Lampinen. Adaptive parameter control of
differential evolution. In Proceedings of the International
Conference on Soft Computing, pages 19–26, 2002.
[4] J. Liu and J. Lampinen. A fuzzy adaptive differential evolu-
tion algorithm. Soft Computing—A Fusion of Foundations,
Methodologies and Applications, 9(6):448–462, 2005.
[5] E. Mezura-Montes, J. Velázquez-Reyes, and C. A. Coello
Coello. A comparative study of differential evolution
variants for global optimization. In Proceedings of the
Genetic and Evolutionary Computation Conference, pages
485–492, 2006.
[6] A. Nobakhti and H. Wang. Co-evolutionary self-adaptive
differential evolution with a uniform-distribution update
rule. In Proceedings of the IEEE International Symposium
on Intelligent Control, pages 1264–1269, 2006.
[7] N. Noman and H. Iba. Accelerating differential evolution
using an adaptive local search. IEEE Transactions on
Evolutionary Computation, 12(1):107–125, 2008.
[8] K. V. Price, R. M. Storn, and J. A. Lamplinen. Differential
Evolution: A practical approach to global optimization.
Springer, 2005.
[9] A. Qing. A study on base vector for differential evolution.
In Proceedings of the IEEE World Congress on Computa-
tional Intelligence, pages 550–556, 2008.
[10] R. Storn. Differential evolution design of an IIR-filter.
In Proceedings of the IEEE Congress on Evolutionary
Computation, pages 268–273, 1996.
[11] R. Storn and K. Price. Differential evolution—a simple
and efficient adaptive scheme for global optimization over
continuous spaces. Technical Report TR-95-012, Berkeley,
1995.
[12] R. Storn and K. Price. Differential evolution—a simple and
efficient heuristic for global optimization over continuous
spaces. Journal of Global Optimization, 11(4):341–359,
1997.
[13] J. Sun, Q. Zhang, and E. Tsang. DE/DEA: Anew evo-
lutionary algorithm for global optimization. Information
Sciences, 169:249–262, 2004.
[14] Y. X. Wang and Q. L. Xiang. Exploring new learning
strategies in differential evolution algorithm. In Proceed-
ings of the IEEE Congress on Evolutionary Computation,
pages 204–209, 2008.
[15] Z. Yang, K. Tang, and X. Yao. Differential evolution for
high-dimensional function optimization. In Proceedings of
the IEEE Congress on Evolutionary Computation, pages
3523–3530, 2007.
[16] X. Yao, Y. Liu, and G. Lin. Evolutionary programming
made faster. IEEE Transactions on Evolutionary Compu-
tation, 3(2):82–102, 1999.
[17] K. Zielinski and R. Laur. Differential evolution with
adaptive parameter setting for multi-objective optimization.
In Proceedings of the IEEE Congress on Evolutionary
Computation, pages 3585–3592, 2007.
 2 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
 
本研究之學術價值如下： 
 提出差分演化演算法之新參數： 
差分演化演算法（Differential Evolution, DE）已展現它在全域最
佳化，尤其在處理數值最佳化問題的優異能力。差分突變為帶領差分
演化成功的重要機制，它根據兩個隨機個體間的向量差（Difference 
Vector, DV）來改變另一個體，致使差分演化能探索搜尋空間並維持
族群多樣性。向量差乃用以估量眾個體的分散程度，在差分演化的突
變程序中，它扮演著非常重要的角色。傳統上，差分演化在突變過程
中僅使用一個向量差；但是，這個數量無需限制為一。就我們所知，
目前仍未有文獻探討向量差數量的問題。 
本計畫提出將向量差數量視為差分演化演算法之參數，打破了差分演
化演算法使用單一向量差之傳統。這個新參數（向量差數量）不僅提
昇操作差分演化演算法的彈性，也開拓一個新的研究方向。 
 使用機率分佈作為參數： 
演化式演算法的參數通常需設定一固定值或藉由某些規則來改變它。
本計畫提出以機率分佈來決定向量差數量，以增加參數之變化程度。
在計畫當中，我們嘗試了多種機率分佈並探討它們對演化式演算法效
能的影響。 
這種使用機率分佈來決定向量差數量的方式，亦可使用於其它差分演
化演算法及演化式演算法的參數。 
 設計參數控制策略與驗證其影響： 
本計畫針對以機率分佈為基礎的數量，發展兩個決定型的策略，以在
演化過程中控制向量差的數量與分佈。實驗結果證明多差分向量的確
能夠提升差分演化的效能，這些優異表現證明了這些策略的效用；此
外，實驗分析更進一步檢驗這些策略對差分演化的影響，這些結果在
差分演化的設計與應用上，有非常高的重要性。 
 
 
在此次 CEC 2010 會議，我組織並主持一個特別議程 (S117) Special Session on 
“Evolutionary Computation in Scheduling”，於七月廿二日下午舉行。此外，我與我的學生廖歆
蘭發表 “An Evolutionary Approach for the Selective Pickup and Delivery Problem” 論文，時間分
配為 20 分鐘 (包含論文內容報告及 Q&A)。本篇論文報告時，約有三十餘人蒞臨聆聽，有兩
位學者於 Q&A 表達對此論文的高度興趣，並讚賞論文提出的 representation 方式。會後我與
Prof. M. Fatih Tasgetiren 與蔣宗哲教授進一步討論其它研究上的想法，另有學者表示會在其研
究中參考引用我們的研究。大會期間我參加了各相關研究的議程，心得則描述於下一章。在
大會第二天傍晚，我出席 Emergent Technologies Technical Committee (ETTC) of the 
Computational Intelligence Society (CIS) 會議，會中並與其它 CIS ETTC Members 交流。 
二、 與會心得 
今年大會的議題包含了演化式計算所有相關的研究主題，以我所參加的議程而言，發表
的論文均有不錯的學術水準，所針對的問題也都有其重要性，對於瞭解並掌握各研究領域的
現況與挑戰，具有相當大的幫助。整體來說，從自己及他人發表的論文中，吾人之心得為： 
 差分演化 (Differential Evolution, DE)  
差分演化為重要而新興的演化式演算法。延續去年的熱門程度，今年的 CEC 仍有超
過 20 篇論文探討或應用 DE，但相較於去年的作品，今年除了有新的 DE 方法被提
出外，更有一些論文研究 DE 內部的運作機制並試著探討其影響，提昇 DE 研究的深
度與增進對 DE 的瞭解。在演算法設計上，會中有數篇論文提出利用適應性 (adaptive) 
或自適性 (self-adaptive) 方式來調整DE參數：amplification factor F, population size NP, 
crossover rate CR，未來我們亦將提出適應性與自適性方式來調整差分向量數，並期
許這方法能更進一步提昇差分演化效能。 
 多目標最佳化 (Multi-objective Optimization, MO) 
今年 CEC 有許多 MO 相關論文發表於 5 個 sessions，包含多目標演化式演算法設計與
實驗分析，也有各式各樣的多目標最佳化的問題與應用被提出。這些應用實例反映出
許多工程問題實為多目標最佳化問題，實驗結果亦展現了演化式演算法在解決多目標
最佳化問題的效能。在眾多的多目標演化式演算法中，值得注意的方法為 
Multi-objective Evolutionary Algorithm Based on Decomposition (MOEA/D)，這篇論文
獲得今年的 IEEE Transactions on Evolutionary Computation Outstanding Paper Award，
未來我們將使用 MOEA/D 取代 NSGA II，作為解決多目標最佳化問題之測試方法。 
 理論分析 
理論分析仍為演化式計算領域中最具挑戰性的課題之一，尤其各式各樣的演算法與操
作子被提出後，除了傳統的實驗證明外，一個更大更強烈的需求即為理論分析。在今
年的 CEC 中，有幾個理論研究值得特別注意： 
o T.L. Yu 提出的 Differential Mutual Complement (DMC)，利用 clustering 的作法
處理 linkage / building block。 
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
組織與主持 IEEE Congress on Evolutionary Computation 的 Special 
Session on [Evolutionary Computation in Scheduling]. 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：□已發表 □未發表之文稿 ■撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
本研究成果已發表一篇 IEEE CEC 國際會議論文：C.K. Ting and C.H. Huang, ＇＇＇＇
Varying Number of Difference Vectors in Differential Evolution＇＇＇＇. 目前正在
整理研究成果並撰寫論文，以投稿至國際期刊。 
 
