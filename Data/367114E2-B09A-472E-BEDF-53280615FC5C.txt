1發展一種求解多重目標最佳化之智慧型非支配排序基因演算法並應用
於長滯空無人載機之多目標氣動力外型設計
Development of an Intelligent Non-dominated Sorting Genetic Algorithm for
Solving Multi-objective Optimization and Apply to Multi-objective Aerody-
namic Shape Design of a Long-endurance Unmanned Aerial Vehicle
計畫編號：NSC 96-2221-E-214-012-
執行期限：96年8月1日至97年7月31日
主持人：劉振隆 義守大學資訊管理學系
計畫參與人員：邱泰毓 義守大學資訊管理研究所
蔡政倫 義守大學資訊管理研究所
E-mail：jlliu@isu.edu.tw
中文摘要
本計畫為三年期計畫中的第一年期計畫，本期計畫為發展包含有非支配排序、擁擠距離
排序、競爭式選擇、智慧型交配以及非均勻突變等運算子之一種智慧型非支配排序基因演算
法來求解多重最佳化問題。基本上，因為基因演算法在演化時各運算子是操作一群個體，因
此它似乎自然地能應用於多重最佳化問題上來同時獲得一群解。本計畫將使用Goldberg的非
支配排序觀念加上Deb et al. 的擁擠距離排序法以使得在估算的Pareto鋒面上具有良好多樣性
保存與均勻擴展。另外，子孫的染色體產生方式是透過部份因子設計從親代的基因中有智慧
地篩選出好的基因組合而成，如此將可達到快速收斂與高數值準確性的目標。一般而言，在
傳統式的基因演算法中交配運算子執行方式為隨意交換親代的基因，故部份因子交配子將可
強化基因演算法之演化效率。藉由分析九種無限制條件以及四種具限制條件的多重最佳化測
試函數，以評估本計畫提出之智慧型非支配排序基因演算法在多重最佳化問題上的效能。
關鍵字：智慧型非支配排序基因演算法、多重最佳化問題、Pareto鋒面、智慧型交配子。
Abstract
This study is the first year program of a three-year project. Inthis year’s project, we propose the
developments of a non-dominated sorting, crowded distance sorting, tournament selection, intelli-
gent crossover and non-uniform mutation operators to construct a non-dominated sorting genetic al-
gorithm (GA), called INSGA herein, for solving multi-objective optimization problems (MOOPs).
Basically, since GAs operated operators using a population of individuals during evolution, they
seem can be applied naturally to MOOPs to capture a number of solutions simultaneously. There-
fore, we adopt Goldberg’s notion of non-dominated sorting and Deb’s crowded distance sorting in
the proposed multi-objective GA to achieve solutions with good diversity-preservation and uniform
spread on the approximated Pareto front. In addition, the chromosomes of offspring are generated
based on an intelligent crossover operator using a fractional factorial design to select good genes
from parents intelligently and achieve the goals of fast convergence rate and high numerical accu-
racy. In general, the crossover operation of a traditional GA is implemented by changing the genes
from the parents randomly. Performance evaluation of the INSGA is examined by applying it to
nine unconstrained and four constrained multi-objective optimization functions.
Keywords: Intelligent non-dominated sorting genetic algorithm, multi-objective optimization prob-
lems, Pareto front, intelligent crossover operator.
3multiplier is given randomly in the range[−s, 1+
s]. In principle, population-based MOEAs have
a superior capability with parallelized search to
extensively explore candidate solutions in a
whole solution space but inefficiently exploit
candidate solutions in a local region. In the
neighborhood of each individual, it is beneficial
for MOEAs to use local search strategies to ex-
ploit better solutions. Therefore, MOEAs always
attempt to choose good individuals from the
population for further exploiting non-dominated
solutions. Ho et al. [16] incorporated the well-
known orthogonal arrays of Taguchi into the
crossover operator to generate good chromo-
somes of children based on those of parents
through several factorial experiments, rather
than exchanging genes randomly. Their strategy
resulted in a remarkable improvement in the
search ability of their GA. Previous work [17]
introduced the classical fractional factorial de-
sign (FFD) into the crossover operator resulted
comparable results with the Ho et al.’s method.
The fractional factorial crossover, called intelli-
gent crossover, is used to intelligently select the
genes of parents for mating of genes in the pre-
sented MOGA. To further improve the fine turn-
ing capabilities of the presented MOGA, a non-
uniform mutation operator is applied.
Therefore, the presented intelligent non-
dominated sorting GA, termed INSGA, com-
bines non-dominated sorting procedure with elit-
ist strategy, tournament selection, intelligent
crossover operator and non-uniform mutation
operator to construct a high efficiency MOGA.
The efficiency of the proposed INSGA is evalu-
ated by comparing the computational results
with those obtained by the NSGA-II. Further-
more, the presented INSGA will be applied to
the nine benchmark unconstrained functions and
four constrained functions to examine the ability
and efficiency in computing unconstrained and
constrained multiple objective problems.
II Numerical Procedure
2.1 Multiple Objective Optimization
The general form of a MOOP involves the
minimization of objective functions subject to
constraints. The mathematical form can be ex-
pressed as follows.
 
 T
T
M
xxxx
fffxf
n,21
,21
...,,
,...,,)(Minimize




(1)
pjxg j ...,,1,0)(Subject to 

(2)
where x

and )(xf

represent the design vari-
able vector and objective function vector in the
n-dimensional hyperplane with M objectives.
Also, )(xg  is the constrained function vector
with p constraints. In a minimization problem, a
variable vector ax

is said to dominate bx

if
and only if the following two conditions are sat-
isfied.
  )()(:,...,2,1 biai xfxfNi 
  and
  )()(:,...,2,1 bjaj xfxfNj 
  (3)
Therefore, a feasible solution *x

is said to be a
Pareto-optimal solution if and only if there does
not exist a feasible solution x

where x

dominates *x

, and the corresponding vector of
Pareto-optimal solutions forms a so called
Pareto-optimal front shown in Fig. 1.
Figure 1. Dominated solutions, non-dominated
solutions and Pareto-optimal front involved in a
multi-objective minimization problem.
2.2 Non-dominated Sorting and Crowded
Distance Sorting
5position based on the classical full factorial de-
sign principle. In columns AB, AC, BC and
ABC, each cell level is determined via the inner
products of columns A and B, A and C, B and C,
and A, B and C. The first experiment has one
factor set to x {  7654321 ,,,,,, xxxxxxx },
which is obtained by combining the factors A to
ABC with the assigned levels.
(2) The function value 1mf is computed and
placed in the first position of the column “Out-
put”. The computations then are repeated for the
remaining seven experiments with function val-
ues 2mf , 3mf ,..., and 8mf .
(3) In column A, multiply the function values
2mf , 3mf ,..., and 8mf by the corresponding al-
gebraic value -1 for level““and 1 for level“+”.
The effect of factor A on the level is determined
by adding the eight products together. The
mathematical form for each factor i is



8
1
,
j
mjjii fUC where jiU , equals -1 when
the cell is at level “”, and equals +1 when it is
at level ‘+”. The summation 1C is positioned
first in the new row “Contribution”which is as-
sociated with factor A. The multiplication and
summation operations are completed for the re-
maining 2C , 3C ,…, and 7C , and placed in the
second, third, …, and seventh positions in the
row “Contribution”; the effects of factors B,
C,…, and ABC on the levels thus are obtained.
(4) Check the signs of the seven values 1C ,
2C ,… , and 7C listed in the row “Contribu-
tion”; if iC is negative, then place the symbol
“”in the new row“Selected Level”. Otherwise,
select symbol “+”. The dominant levels of the
seven factors thus can be determined.
The best combination of bestix for the seven
factors is determined from the factors with se-
lected levels, listed in the new row“Best Factor”,
and the best value of the function is obtained by
calculating the objective function )( bestxf 
where bestix is expressed as follows.











0)(if,
0)(if,
ii
iibest
i
Csignx
Csignx
x (4)
The second child is created initially by repli-
cating the factors from the first child, and fol-
lowing to replace the level factor with another
one at the position of minimal absolute value of
contribution.
2.4 Non-uniform Mutation Operator
After completing the intelligent crossover op-
erator, a non-uniform operator is applied. This is
the operator responsible for enhancing the fine
turning capabilities of the presented INSGA. For
a parent x

with n variables ],...,,...,[ 1 nl xxx , if
the variable  lll lux , and was selected for
the non-uniform mutation, the parent is ex-
changed to be ],...,,...,[ '1 nl xxxx 

. The vari-
able lx, which is the one of the variables x

, is
obtained as follows.








10.5if),,(
0.50if),,('
rlxtx
rxutx
x
lll
lll
l (5)
The symbol t and r represent the number of gen-
eration and random number in the range [0, 1],
respectively. The function ),( yt is expressed
as follows.
)1(),( )/1(
bTtryyt  (6)
where ]0.1,0.0[r , T is the maximal number
of generation, and b is a system parameter de-
termining the degree of non-uniformity. In this
study, parameter b was set to 0.1. The function
),( yt creates a value in the range [0, y] such
that its value being close to 0 as t increases and
approaches to T. This property produces this op-
erator to search space uniformly initially when t
is small, and locally at latter stages.
7ZDT6
(n =10)
  
  nix
nxxg
xgxfxgxf
xxxf
i
n
i
i
,...,1,1,0
)1/(91)(
)(/)(1)()(
)6(sin)4exp(1)(
25.0
2
2
12
1
6
11





 






 
Both INSGA and NSGA-II encoded by real-
valued variables are applied to implement the
nine test functions. The population size and the
maximal number of generation for the two
MOGAs was both set to 100 and 2000, respec-
tively. Also, we use a crossover probability of
pc=0.9 and a mutation probability of pm=0.1 for
the computations. Figures 3(a)-(i) show the non-
dominated solutions obtained using the proposed
INSGA and NSGA-II for the nine test functions.
The efficient frontiers found by the NSGA-II
and the proposed INSGA are very close for
Problems SCH, FON, POL, and ZDT1-4. How-
ever, INSGA outperforms NSGA-II on the cov-
erage of Pareto-optimal front for Problem KUR
(Fig. (d)). Especially, NSGA-II gets stuck at a
local Pareto-optimal front for Problem ZDT6
(Figs. 3 (i) and (j) presented in Ref. [9]),
whereas, INSGA and PAES locates global
Pareto-optimal front. Namely, INSGA and
PAES find better converged sets of non-
dominated solution for Problem ZDT6 com-
pared to NSGA-II. In addition, the distribution
in non-dominated solutions obtained using
INSGA is better than PEAS displayed in Fig.
3(j). Figures 3(a)-(i) clearly show the frontiers
with convex, non-convex, piecewise and discon-
tinuous types. The results clearly indicated that
the proposed INSGA can be successfully ap-
plied to solve various MOOPs.
(a) (b)
(c) (d)
(e) (f)
(g) (h)
(i) (j)
Figure 3. Comparison of results obtained using
NSGA-II and INSGA for Problems (a) SCH, (b)
FON, (c) POL, (d) KUR, (e)ZDT1, (f)ZDT2,
(g)ZDT3, (h) ZDT4, (i) ZDT6, and (j) compari-
son results from Ref. [9] for Problem ZDT6.
3.2 Constrained Multi-objective Optimization
The presence of constraints significantly af-
fects the simulation performance of any optimi-
zation algorithm including MOGAs. Literature
survey on constraint handling methods is pre-
sented by Michalewicz [13]. Constraint handling
methods have been applied over the years in-
cluding rejection of infeasible solutions, use of
penalty functions, repair methods, and so on.
Constraint handling using a Pareto-ranking ap-
proach is a recent concept to cope with con-
strained MOOPs. This study uses Deb et al.’s
9(a) (b)
(c) (d)
(c) (d)
Figure 4. Comparison of results obtained using
NSGA-II and INSGA for Problems (a) TNK, (b)
OSY, (c) two-bar truss design, and (d) welded
beam design.
IV Conclusions
The study developed an intelligent non-
dominated sorting genetic algorithm, termed
INSGA in this study, which combines the non-
dominated sorting procedure with elitist strategy,
crowded distance sorting, tournament selection,
intelligent crossover with arithmetical crossover
and fractional factorial design, and non-uniform
mutation operators. Including the fractional fac-
torial design in the crossover operator, called in-
telligent crossover, the best genes for children
was intelligently determined by the mating of a
pair of parents. Therefore, the proposed intelli-
gent crossover operation effectively enhances
the evolutionary efficiency of a MOGA. More-
over, this study also introduced a non-uniform
mutation operator to enhance the fine turning
capabilities of the proposed INSGA. The elitist
non-dominated sorting and crowded distance
criterion used in NSGA-II are applied to INSGA
to achieve the approximated Pareto front. Sev-
eral test functions, including nine unconstrained
and four constrained MOOPS are performed by
using the proposed INSGA. The unconstrained
multi-objective functions include SCH, FON,
POL, KUR, ZDT1, ZDT2, ZDT3, ZDR4, and
ZDT6. The computational results displayed that
the proposed INSGA outperforms the NSGA-II
significantly on Problems KUR and ZDT6. Also,
the results showed that the proposed INSGA
provides reliable solution for analyzing Pareto
fronts with convex, non-convex, piecewise and
discontinuous types. Furthermore, the study ap-
plied the proposed INAGA to four constrained
mulit-objection functions. The constrained
multi-objective functions including TNK, OSY,
two-bar truss design, and welded beam design
problems. From the computational results,
INSGA performed the Problem OSY with better
distribution of non-dominated solutions than
NSGA-II. Also, INSGA outperforms NSGA-II
in finding the distribution and spread of solu-
tions on the Pareto fronts for the two engineer-
ing design problems.
References
[1] Coello Coello, C. A., Evolutionary Mul-
tiobjective Optimization: A Historical View
of the Field, IEEE Computational Intelli-
gence Magazine, Vol. 1, No. 1, 2006, pp.
28–36.
[2] Zitzler, E., Deb K., and Thiele, L., “Com-
parison of Multiobjective Evolutionary Al-
gorithms: Empirical Results,” Evolutionary
Computation, Vol. 8, No. 2, 2000, pp.173-
195.
[3] Zitzler, E. and Thiele, L., “Multiobjective 
Evolutionary Algorithms: A Comparative
Case Study and the Strength Pareto Ap-
proach,” IEEE Trans. on Evolutionary
Computation, Vol. 3, No. 4, 1999, pp. 257–
271.
[4] Srinivas, N. and Deb, K., “Multi-objective
Optimization Using Non-dominated Sorting
in Genetic Algorithms,”Evolutionary Com-
putation, Vol. 2, No. 3, 1994, pp. 221–248.
