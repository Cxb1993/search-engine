摘要 
 
數位學習是一種利用電腦和通訊科技來提供更好的學習環境，促進更有效率學習
的方法。遠距教學是教育的一種，它可以讓學生不需到教室但仍然可以在其居處
參與教室內之授課及相互討論之活動。今日之遠距教學，大部已採用數位學習技
術。學生和老師可以用電腦印製的檔案或電子郵件來相互連繫，也可以用卽時通
話或其他多媒體來參與實際之課堂討論。 
 
在本研究計畫，我們藉由軟體整合科技，研發出一套虛擬學習環境。此虛擬學習
環境整合了好幾套大型自由軟體像：Moodle, DSpace, Asterisk, Ekiga,及 VNC 
來支持遠距教學之應用。此系統可讓遠方參與上課的學生與課堂上的老師能有即
時的互動。 
 
藉由本研究計畫，我們顯示了一個全新的應用可由好幾個已經存在的應用整合而
成。我們研究了軟體整合科技，並且運用了一些簡單和富有彈性的技術來做系統
設計。由於這些技術的使用，使我們能夠縮短研發時間，減少資源的耗費，進而
造出一部堅固、而且富彈性的系統。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  II
Abstract 
 
e-Learning is an approach to facilitate and enhance learning through both computer 
and communications technology. Distance learning is one field of education which 
delivers education to students who are not physically "on site". Distance learning is 
part of e-learning through which teachers and students may communicate 
asynchronously by exchanging printed or electronic media, or through technology 
that allows them to communicate in real time. 
 
In this research, we have developed a virtual learning environment by using software 
integration approach. Specifically, we integrated several large scale open source 
software including Moodle, DSpace, Asterisk, Ekiga, VNC, etc. to create a distance 
learning system which allows real time interactions between teachers and students 
even they are geographically separated. 
 
We demonstrated a new approach to generate new applications from existing 
non-related applications, i.e., through software integration. We investigated software 
integration technology and applied some simple and flexible techniques in our system 
design. With those design techniques, we have been able to shorten our development 
period, to minimize the resource used, and to produce a robust, maintainable, and 
scalable system. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  IV
Table of Contents 
 
1. Introduction..........................................................................................................1 
2. Goal and Significance of the Research...............................................................2 
2.1 Research Goals ..........................................................................................2 
2.2 Significance of the Research .....................................................................2 
2. Literature Survey.................................................................................................4 
3.1 Terminologies ..................................................................................................4 
3.1.1        e‐Learning......................................................................................4 
3.1.2    Distance Learning ..........................................................................4 
3.1.3        Learning Management Systems (LMS) .........................................5 
3.1.4        Virtual Learning Environment (VLE) .............................................5 
3.1.5        DSpace ...........................................................................................6 
3.1.6 Voice Over IP .................................................................................7 
3.2 Related Research .............................................................................................7 
3. Research Method .................................................................................................8 
4.1 Development Considerations ...................................................................8 
4.1.1        System Requirements ...................................................................8 
4.1.2 Development Approaches.............................................................8 
4.1.3 Why Not Blackboard .....................................................................9 
4.2 Open Source software in Use..................................................................10 
4.2.1 Moodle (Modular Object‐Oriented Dynamic Learning Environment) 10 
4.2.2 DSpace .........................................................................................10 
4.2.3 Asterisk ........................................................................................10 
4.2.4 Ekiga .............................................................................................11 
4.2.5 VNC (Virtual Network Computing) .............................................11 
4.2.6 GTK+ (GIMP Toolkit) ....................................................................12 
4.2.7 MySQL..........................................................................................12 
4.2.8 Apache and Tomcat Servers ........................................................13 
4.2.9 PHP...............................................................................................13 
4.2.10      Fedora ..........................................................................................13 
4.3 Establishment of Research Platform.......................................................13 
4.4 System Architecture ................................................................................14 
4.4.1        Design Principles .........................................................................14 
4.4.2        Architecture Design.....................................................................15 
4.5 System Design..........................................................................................17 
4.5.1        Technologies Used in System Design ..........................................17 
4.5.2 Graphical User Interface (GUI) Design ........................................18 
  VI
 
1. Introduction 
 
e-Learning is an approach to facilitate and enhance learning through both computer 
and communications technology. Distance learning is a field of education and a part 
of e-Learning that uses various technologies and instructional systems to deliver 
education to students who are not physically "on site". In distance learning, teachers 
and students may communicate asynchronously by exchanging printed or electronic 
media, or through technology that allows them to communicate in real time 
(synchronously). 
 
Lots of schools, colleges and universities have emerged into the e-Learning trend by 
spending money to install various hardware and software to achieve the goals of so 
called Course Management, Learning Management, Virtual Learning Environment, 
and Distance Learning. Other than PCs, projectors, LAN (local area network), WLAN 
(wireless LAN/WIFI), Internet access, etc. installed in each classroom, our university 
has long being installed the popular Blackboard learning system and has been very 
helpful in assisting our daily teaching activities.  
 
As usual, some issues and challenges popped up with the use of the learning 
environment. One of the most complained issues regarding the e-Learning 
environment from our faculty is the preparation of teaching material (and the issue 
exists in all of similar learning systems). Other than the PowerPoint slides, major 
classroom material can come from books, pictures and live videos stored in libraries. 
To transfer these kinds of material into the Blackboard type of learning systems is a 
little bit complicated and time-consuming for an average faculty member. As a 
consequence, faculty may avoid using them.  
 
To resolve this issue, a solution has been sought for a while. Recently our library 
transitioned to a new digital asset management system – DSpace which is 
co-developed by the MIT library and HP as an open source and freely distributed 
software. Thus, a solution to the issue described above seems possible. 
 
Another issue came from university’s continuous expansion. Our university has set up 
new campuses/offices in some foreign countries. This created a challenge to 
efficiently deliver courses to locations geographically separated. That is, instead of 
sending instructors to a far side campus to lecture classes or bring in students to the 
main campus to attend classes, a “virtual classroom” has to be built which will allow 
  1
 
e-Learning has receive lots of attention worldwide during the past several decades. It 
can make a significant difference: to how quickly learners master a skill; how easy it 
is to study; and, of course, how much learners enjoy learning. It is  important 
because it can contribute to all objectives for education – to raising standards; 
improving quality; removing barriers to learning and participation in learning; 
preparing for employment; improving skills in the workplace; and ultimately, 
ensuring that every learner achieves their full potential. 
 
As most organizations, companies, and universities promote globalization, the chance 
of delivering and receiving distance education increases a lot. It is not unusual to sit in 
our own office in Taipei to participate a company’s training classes in New York. 
Therefore, a distance learning system to efficiently assist the instructor and the 
students to achieve their education goal is critical. Our research concentrates on the 
development of a virtual learning environment to support distance learning, thus 
provides many advantages: 
 
¾ Direct access course material and references from libraries in the classroom 
¾ Reduce instructor’s course preparation efforts 
¾ Reducing course administration cost 
¾ Reducing course delivering cost – e.g., instructors’ travel, repeating courses at 
different locations 
¾ Reducing employer’s training cost 
¾ Flexibility of learning – anywhere and anytime 
¾ Real-time classroom interaction 
¾ Promoting wider participation on a global scale 
 
Now from technology point of view, the technologies involved in large scale software 
integration are not well taught (or mostly not taught) in schools here in Taiwan. As a 
matter of fact, software integration has become a main stream in computer application 
field in the past decade. Integration solves problems which can not be resolved by 
individual software. It adds power to resolve new issues. It also can make the 
manufacturing process more efficient and make the business decision faster. Most of 
the time, we can find more applications from the integrated system. Comparing to 
develop new software from the ground, software integration provides a way to reduce 
the development cost and time.  Thus, it becomes the business and industry preferred 
solution. 
 
  3
course material and real-time conversation are all required in a distance learning 
environment. 
 
3.1.3   Learning Management Systems (LMS) 
 
A learning management system is a computer program that facilitates computerized 
learning or e-learning. Such systems are sometimes also called Course Management 
System (CMS), Managed Learning Environment (MLE), Learning Support System 
(LSS) or Learning Platform (LP). There are many commercial products belonging to 
this category. Two most popular ones are WebCT and Blackboard. Other than those 
commercial products, there are several open source software fit into this category. 
Some famous ones are Moodle, Atutor, and ILIAS. 
 
A learning management system should provide a single, consistent, and intuitive 
interface for a course designer to present to students all the components required for a 
course of education or training. It should implement all the following features: 
 
¾ The syllabus for the course 
¾ A notice-board for up-to-date course information 
¾ Student registration and tracking facilities 
¾ Basic teaching material e.g., PowerPoint slides, visual aids 
¾ Additional resources, including reading materials, and links to outside resources 
in libraries and on the internet 
¾ Self-assessment quizzes 
¾ Formal assessment procedures 
¾ Differential access rights for instructors and students 
¾ Production of documentation and statistics on the course in the format required 
for institutional administration and quality control 
¾ Easy authoring tools for creating the necessary materials, and documentation 
 
3.1.4 Virtual Learning Environment (VLE) 
 
Although many people consider a virtual learning environment is also a learning 
management system, they do have a major difference. Other than the features 
described in 3.1.1, a virtual learning environment must provide mechanisms to allow 
tutors and /or students to interact in synchronous and asynchronous modes. 
Mechanisms will include some or all of the following: 
 
  5
• Reformatted digital library collections  
With its popularity and capabilities, it actually is a very good tool to support a virtual 
learning environment. 
3.1.6 Voice Over IP 
Voice over Internet Protocol (also called VoIP, IP Telephony, Internet telephony, 
and Broadband Phone) is the routing of voice conversations over the Internet or 
through any other IP-based network. Voice over IP traffic can be deployed on any IP 
network.  
 
VoIP has become so popular largely because of the cost advantages to consumers over 
the traditional telephone network. Many companies, schools, and organizations have 
used this technology to reduce the communication expense by subscribing to VoIP 
service providers like Vontage, Skype, and TelTel. Some have installed free VoIP open 
source software like Asterisk, SER, and sipX themselves and developed various 
applications based on that downloaded platform. These applications include but not 
limited to audio/video conference, stream media access, unified mail service, etc. 
 
3.2 Related Research 
 
There is several e-learning software out in the field which provide some features of 
virtual learning environment. Some products are commercially available, e.g., WebCT 
and Blackboard. Some are freely distributed open source codes like Moodle, Atutor, 
and ILIAS. This type of software normally support the following features: 
 
¾ Content Authoring - for preparation of class material 
¾ Syllabus Builder 
¾ Discussion Board – threaded forum 
¾ Assessments and Surveys 
¾ Grade Book 
¾ Reporting and Performance Dashboard 
¾ Community Building Tool – to create clubs, class subgroups 
¾ Web Portal Service 
¾ Content and File Management 
 
These features are all some sorts of static data/process management features. They 
allow instructors and students create data records and access them. There is nothing to 
  7
 
The simplest way to fulfill all the requirements described above is, obviously, to buy a 
new system. But the university has no budget for this kind of expensive system. Also, 
considering the existing e-Learning hardware and software already in use in the 
university, this approach would be a big waste of previous investments. Even worse 
was that after searching for a product, to our surprise, we could not find any 
commercially ready system for our application. 
 
We also considered developing a totally new system. However, because of our 
non-committed workers (students) and their too flexible and limited working hours, 
we estimated that the project wouldn’t be finished within a reasonable time frame. 
 
This left only one solution, i.e., reusing existing e-Learning systems and combining 
them with other software which could support distance learning. In other words, the 
solution we would be taking was software system integration. 
 
Integration of several large scale software systems into a complex “system of 
systems” has been seen frequently in the past decade. When manufacturing processes 
in a factory or business processes in a company get integrated we can expect that all 
individual software systems for each process have to be integrated together. Another 
example is merge of companies. To streamline operations, software systems from 
companies involved have to be integrated. Our work to develop a new software 
system of an application by integrating several software systems is less common.  
 
4.1.3 Why Not Blackboard 
 
Our original development plan included the integration of the Blackboard learning 
system which was already up and running in our campus. After an in depth study, we 
found that its APIs (Application Programming Interface) were not a good fit into our 
integration. It is a commercial system, i.e., it looks like a black box from the outside 
and we have no way to create our own APIs. The worst part came when we 
discovered its parent company (The Blackboard Inc.) was suing several competitors 
for patent infringement. When all these facts came out, we had to re-think the role of 
the Blackboard system. After a careful evaluation, we decided to dump the 
Blackboard system and go for all open source software systems. The reason for this 
was mainly because open source software has the freedom for development and 
distribution. 
 
  9
BSD, Windows (emulated), Solaris and OS X and does voice over IP in several 
protocols, such as SIP, H323, IAX, and MGCP. It can also interoperate with almost all 
standards-based telephony equipment using relatively inexpensive hardware. Asterisk 
provides many calling features like Voicemail services with Directory, Call 
Conferencing, Caller ID, Call Waiting, Call Forwarding, Interactive Voice Response, 
Call Queuing, etc. Many VoIP service providers actually use Asterisk as their central 
switching systems to connect customers’ calls. 
 
Asterisk will be used in our system as the communication center. It will reside on a 
processor to serve all communication needs in our application. Specifically, it will 
provide real time voice communication between students and teachers when they are 
not at the same location. It also supports instant messaging and email services.  
 
4.2.4 Ekiga 
 
Ekiga is an SIP and H.323 compatible VoIP, IP Telephony, and Video Conferencing 
application that allows you to make audio and video calls to remote users with SIP or 
H.323 hardware and software. It supports all modern VoIP features for both SIP and 
H.323. Ekiga is the first Open Source application to support H.323 and SIP protocols, 
as well as audio and video communication. Ekiga was formerly known as 
GnomeMeeting. 
 
Ekiga is compatible with any software, device or router supporting SIP or H.323. It 
supports VoIP hardware products from SwissVoice, CISCO, SNOM, etc. It also 
supports commercial software like Windows Messenger, Netmeeting, SJPhone, 
Eyebeam, X-Lite, and  the Asterisk popular IPBX (Internet PBX). 
 
In our system, Ekiga plays the role of the communication client software. It resides in 
a user’s PC to do VoIP communication with other PCs through the Asterisk server. We 
also changed/redesigned Ekiga’s GUI (Graphic User Interface) for our system control 
menu. 
 
4.2.5 VNC (Virtual Network Computing) 
 
VNC is a graphical desktop sharing system which uses the RFB protocol to remotely 
control another computer. It transmits the keyboard and mouse events from one 
computer to another, relaying the graphical screen updates back in the other direction, 
over a network. VNC is platform-independent — a VNC viewer/client on any 
  11
PostgreSQL in DSpace  
 
4.2.8 Apache and Tomcat Servers 
The Apache HTTP Server, commonly referred to simply as Apache, is a web server 
notable for playing a key role in the initial growth of the World Wide Web. Apache 
supports a variety of features, many implemented as compiled modules which extend 
the core functionality. These can range from server-side programming language 
support to authentication schemes. Some common language interfaces support 
mod_perl, mod_python, Tcl, andPHP. Apache is the web server used to support 
Moodle. 
 
Tomcat is a web container. It is an application server developed at the Apache 
Software Foundation (ASF). Tomcat implements the servlet and the JavaServer Pages 
(JSP) specifications from Sun Microsystems, providing an environment for Java code 
to run in cooperation with a web server. Tomcat is the web server we used to support 
web pages of DSpace. 
 
4.2.9 PHP 
 
PHP is a reflective programming language originally designed for producing dynamic 
web pages. PHP is used mainly in server-side scripting, but can be used from a 
command line interface or in standalone graphical applications. We used PHP to 
create web pages as the interface between Moodel/DSpace and our system users. 
 
4.2.10 Fedora 
 
Fedora is one of the variations of Linux. Our system is based on the Fedora 5 
platform. 
 
4.3 Establishment of Research Platform 
 
The first task to be done in the project is to set up the research platform. We have 
DSpace and VoIP network running in university’s production system. To avoid 
damaging to the production system and interrupt the university’s daily business, we 
have to set up a platform for our own research project. Four major tasks have to be 
done in this phase: 
 
1. Setting up the development platform 
  13
y Vulnerability 
 An integrated system easily crashes even with the smallest data perturbation. 
y Maintainability 
 It is difficult to maintain an integrated system as the software involved gets 
upgraded. 
y Scalability 
 It is difficult to scale when new requirements arise. 
 
Some general solutions to these issues would be: 
 
y The hardware involved is compatible with each other. 
y The relationships of software components are well defined. 
y The purposes and protocols of communication are mutually agreed. 
y The data flow in the integrated system must be well defined. 
y The interfaces between software components must be either open format or 
conform to some standard. 
y The terminology used in the system must be accurate in meaning. 
 
From the above discussions, we aim to keep the integration work simple and flexible. 
To do so, we decided to reuse an individual system’s software as much as possible. 
Except when absolutely necessary, we do not modify the software’s code. 
 
4.4.2 Architecture Design 
 
With those design principles described above, we now describe the system 
architecture. Consider Figure 4.1. 
 
  15
First, let’s take a look at the facilities equipped to support the system. In the main 
campus, there are three main servers, i.e., VoIP server, Moodle server and DSpace 
server. The VoIP server running Asterisk serves as the communication switching 
system which connects calls and forwards instant messages between students and the 
teacher.  The Moodle server acts as the school administration and course 
management system. It uses the MySQL database system to store information. The 
DSpace server might be located in the school library and uses PostGres to store digital 
medium which could be used in a class. In each classroom, there is a PC for the 
teacher to use. In Figure 4.1, we also show two student PCs which may be located in 
some foreign countries. 
 
Now consider a common scenario. If a student in Malaysia has to take a course 
through the distance learning system, he first uses his PC (which has been installed 
with VNC viewer and system control panel) to log into the distance learning system. 
The login process first invokes the VNC viewer. Then the login data including his 
student ID and a course ID are sent to the Moodel server. The Moodle server checks 
his ID and the course ID to make sure he is eligible to attend the distance learning 
class. After this verification, the Moodle server notifies the VoIP server to put this 
student in the class’s conference circuit. Thus, the student is connected to the class. 
 
Now in the real classroom, the teacher does the same thing to log into the learning 
system. After the login process, the teacher will be put on the class conference circuit. 
At this time, the VNC server in the teacher’s PC will also be invoked.  
 
After the teacher and students have logged into the system, they are on the same class 
conference circuit. Therefore, they can talk to each other in real time and send instant 
messages. Since the VNC server and viewers are all up, whatever shows on the 
teacher’s screen can be shared by all students on their own PCs. If the teacher needs 
any extra or complementary course material, he can retrieve them from the DSpace 
server in the library or the Moodle server through web pages. These web pages can 
also be shown in real time on students’ PCs.  
 
4.5 System Design 
 
This section describes the component interface design in the integrated system. 
 
4.5.1 Technologies Used in System Design 
 
  17
Distance learning system control refers to the GUI used by the instructor and students 
to communicate with each other and to issue commands to the VoIP server, DSpace 
server, and Moodle server. To design this interface, we have reused Ekiga GUI 
interface. We have also added various buttons on the Ekiga GUI to form a complete 
control panel to activate different applications. 
 
4.5.3 The VoIP Server 
 
The VoIP server accepts connection requests from other entities and notifies the 
destination point of that connection to establish a connection. In our project, this 
would be the Asterisk server described before. Asterisk is a SIP-based PBX. It is open 
source and has been shared developed by a large development community. With the 
Ekiga as the VoIP client, since both of them use SIP protocol, there is no need to add 
anything into it. 
 
4.5.4 DSpace Proxy Agent 
 
A proxy agent is a software component which represents some other software 
component to deal with outside world’s interaction. The purpose of proxy agent 
design is to provide information hiding and a better interface for others which use the 
hided component’s service. For example, if a new version of DSpace comes out, we 
can just install it and use it without rewriting our application code. 
 
The duties of DSpace proxy agent include 
 
1. Accepting connection and service requests from teacher/students. 
2. The DSpace agent notifies the DSpace server about this request. Based on the 
decision of DSpace Server, the DSpace agent can do a proper response. 
3. If the request is granted, the DSpace agent will set up a web page and sends it 
back to the requester. 
4.  
4.5.5 Moodle Proxy Agent 
 
The Moodle proxy agent represents the Moodle server to provide services to all PCs. 
Its functionalities are the same as the DSpace proxy agent. 
 
4.6 System Testing 
 
  19
The following Figures demonstrate the real graphical user interfaces we use in our 
system. 
 
 
 
 
 
Figure 5.1 System Login GUI 
 
 
 
 
 
Figure 5.2 System Control Panel 
 
 
 
  21
5.2  Contribution 
 
The major contribution of this project would be providing a new virtual learning 
environment to further enhance the distance learning. Most learning management 
systems support only the “static” style of education, i.e., most of the time just doing 
class content delivery. The way they achieve distance learning is to send a Web page 
with class contents over to the students’ places. There is no support of class 
interactions. In our project, we took advantage of the VoIP network to not only deliver 
the material but also link the students and instructors together real-time. Thus, the 
new system can provide a nearly real class environment even students are farther 
away. 
 
Another contribution we would like to address is the extension of software 
applications, in this project, the VoIP and the DSpace. VoIP technology has been out 
for a long time. It is popular but not really taking-off. The main reason is its 
application coverage is not broad enough yet. Our effort to introduce it into the 
educational area should be a big plus to enhance its applications. Similar argument 
applies to DSpace. It is originally designed to support the library repository business. 
With the integration with VoIP software, we can easily extend its application into 
education field. 
 
Yet another contribution which relates to the open source software community is the 
pioneering in the integration of open source software. We have seen lots of people 
devoting their time in the development of open source software. Most of them are 
developed from scratch. It is rare to see that open source software is created from 
integration not to mention from integration of several large scale open source software. 
Our project has demonstrated a totally new approach to develop open source software, 
i.e., through software integration. 
 
As a final note of contribution, we would like to point out the importance of software 
integration. The integration concept is a red hot topic in the past decade. It is not 
limited to the computer software area and actually we can see lots of integration work 
occurring in business and manufacturing too. The benefit from system integration, 
most of the time, is huge. Due to the collaborate effects from the systems been 
integrated, the resulting “system of systems” could generate new powerful 
functionalities and applications. Use our project as an example, DSpace, Moodle and 
VoIP network could have their original applications. After integration, the new virtual 
learning environment application is generated. 
  23
in this research project to learn about integration technologies. Also, as the software 
used in this project is open source, the result of this research project can definitely be 
shared. 
 
Acknowledgement 
 
The author would like to thank Taiwan’s National Science Council for its generous 
support of this research project with ID 95-2218-E-035-006. Also, we appreciate the 
help from TelTel Inc. (台灣網上網股份有限公司) for their VoIP support. I would 
also like to mention the system implementers here, they are 黃朝琴, 楊翰鈞, 邱晨
峰, 朱勛暉, 李慶堂, 花俊廷, 李永祥, 葉淑華 and 林彥均. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  25
[19] H. Schulzrinne, A. Rao, and R. Lanphier, “Real Time Streaming Protocol 
(RTSP)”, RFC2326, IETF, Apr. 1998. 
[20] H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, “RTP: A Transport 
Protocol for Real-Time Applications”, RFC1889, IETF, Jan. 1996. 
[21] J. Rosenberg and and H. Schulzrinne, “A Framework for Telephony Routing 
Over IP”, RFC 2871, IETF, June 2000. 
[22] J. Rosenberg, J. Lennox, and H. Schulzrinne, “Programming Internet 
Telephony Services”, IEEE Network, 13(3), May/June 1999. 
[23] MIT and Hewlett Packard, “DSpace System Documentation”, 2002-2004 
[24]  “DSpace Internal Reference Specification- Technology & Architecture” 
Version 2002-03-01 
[25] M. Pittinsky, “Blackboard Building Blocks”, 2003 Overview White Paper, 
Blackboard Inc. 
[26] Larry Stone, “A Lightweight Network Interface (for CWSpace)”, DSpace Wiki, 
May 2006. 
[27] H. Jerez, J.Bekaert and H. Van de Sompel “DSpace Federatios and OAI-PHM 
Harvesting: Beyond Dublin Core”, DSpace User Group Meeting, Cambridge, 
MA, Mar, 2004. 
[28] “Blackboard Building Block System Extension Developers Guide”, by 
Blackboard Inc., 2003. 
[29] T. Chi, “Using Blackboard Building Blocks with Macromedia Flash MX 
Technology”, Blackboard Inc. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  27
