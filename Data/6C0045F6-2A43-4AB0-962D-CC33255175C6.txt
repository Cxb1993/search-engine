  1
一、中、英文摘要及關鍵詞： 
 
中文摘要： 
決策回授等化器(DFE) 是一項被廣泛運用於通訊系中消除符際干擾(ISI)的技術。在
有線通訊中，通道響應通常是非常的長，以致DFE的計算複雜度顯得相當的高。當DFE的
回授部份實作於傳送器端時，系統將以預先編碼方式運作，此時由於回授訊號的值為連續
數值而非離數值，高計算複雜度的問題顯得特別明顯。在本研究計畫中，我們將提出一個
內插式決策回授等化器(IDFE)來解決此一問題。所提IDFE，是由一個前向有限脈衝響應(FIR)
濾波器和一個回授內插有限脈衝響應濾波(IFIR)所組成。由於內插運算之故，DFE的計算複
雜度可被大幅的降低。爲了適應通道變化與降低實作複雜度，我們使用最小平均平方(LMS)
法作為適應性演算法。對於所提的IDFE，我們推導出其最佳濾波器係數、均方誤差與信號
雜訊比等理論性能公式。相對應的適應性IDFE演算法，我們也做了完整收斂行為分析。模
擬結果顯示，IDFE的性能表現與DFE相當，但其計算複雜度可被大幅的降低。在高速用戶
迴路應用(SHDSL)的實例中，所提方法可節省76%的計算複雜度。所提之演算法雖然以
SHDSL為例，但其可應用於所有可內插的(interpolatable)長通道有線通訊系統，如高速乙太
網路等。接著我們將研究使用此概念研究延伸到複雜度極高但性能極佳的遞迴式等化系統
的可行性。最後，我們將研究結合所提IDFE與內插式回音消除(IEC)之方法；與研究結合所
提IDFE與適應性內插濾波器之方法，以得到一個更強健的收發器架構。 
 
關鍵詞—等化、決策回授等化、預先編碼、內插、數位用戶迴路 
 
 
英文摘要： 
The decision feedback equalizer (DFE) is widely used in communication systems 
combating intersymbol interference effect. In wireline communications, the channel response is 
usually long and the computational complexity of the DFE is often high. This is particularly true 
when the precoding is applied in which the feedback signal value becomes continuous rather 
  3
(1) 本研究成功的提出一個可用於長通道響應的低複雜度內插式決策回授等化與預先編
碼演算法。並將成果發表於國際期刊 Signal Processing。 
(2) 本研究成果與原所提計畫相符。除了得到許多有用的研究結果外，透過研究的過程，
也達到培養通訊的人才的目的。 
Au
th
or
's 
  p
er
so
na
l   
co
py
For wireline applications, the channel often
possesses strong lowpass characteristics and this
makes the channel response look like a smoothly
decaying function. In [2], Crespo et al. proposed to
use an inﬁnite-impulse-response (IIR) ﬁlter as the
DFE feedback ﬁlter (instead of an FIR ﬁlter). This
approach only uses a two-pole feedback ﬁlter to
avoid possible stability problem in the adaptive
implementation. Simulation results for a 12-kft 24-
gauge twisted-pair copper wire channel were re-
ported. Since the order of the IIR ﬁlter is low, this
approach may not yield good performance for all
practical channels. Young [3] used a ﬁxed ﬁrst-order
FIR feedforward ﬁlter to shorten the digital
subscriber line (DSL) channel and assumed that
the resultant channel had postcursors only. The
resultant channel response was then modelled as an
exponential decaying function approximated by the
response of a low-order FIR ﬁlter cascaded with a
ﬁrst-order IIR ﬁlter. Simulation results reported
that this approach could have comparable perfor-
mance with the conventional DFE. Similar to [2],
the channel modelling is oversimpliﬁed and its
applicability may be limited.
In [4], Al-Dhahir et al. used an ARMA-model to
describe the channel response and proposed a
matrix-based multistage method to derive a low
complexity DFE. The method ﬁrst estimates the
channel impulse response and solves the optimal
DFE solution using the fast Cholesky factorization
algorithm [9]. Then, it uses low-order IIR ﬁlters to
model the FIR feedforward and feedback ﬁlters,
and identiﬁes their coefﬁcients with a generalized
ARMA-Levinson algorithm [4]. Finally, the low-
order IIR ﬁlters is used to implement the DFE in
run-time. The problem of this approach is that the
preprocessing requires a high computational com-
plexity. Also, the modelling may not be adequate
for all DSL channels. Apart from the time-domain
processing, a frequency-domain approach was
studied in [10]. It is well known that the convolution
operation can be efﬁcien ly implemented in the
frequency domain. As a result, the frequency-
domain approach may achieve better reduction in
computational complexity. However, since it in-
volves processing in two domains, its implementa-
tion complexities such as hardware architecture,
circuit control, memory requirement may be higher.
In this paper, we focus on the DFE complexity
reduction issue in DSL. A typical DSL channel
response is shown in Fig. 1. The response consists of
a short and rapidly changing precursor ISI, and a
long and slowly decaying postcursor ISI. As we can
see, the channel response is long and highly low-
passed. For a conventional DFE, it is well known
that the feedback ﬁlter length is on the same order
of the postcursor ISI length. Thus, the feedback
ﬁlter may also require hundreds of tap weights, and
the computational complexity of a transversal FIR
feedback ﬁlter may be high. This problem is more
apparent in a precoding system. The purpose of
precoding is to avoid error propagation problem
inherent in the DFE. A commonly used precoding
technique is the Tomlinson–Harashima precoder
(THP) [11–13]. The key to avoid error propagation
is to place the DFE feedback ﬁlter in the transmit
side instead of the receive side. Though the co-
efﬁcients of the THP are the same as the feedback
ﬁlter coefﬁcients, the input data characteristics are
different. The input to a THP has a continuous
value rather than discrete. That means the compu-
tation complexity requirement when precoding is
used will be much higher than a conventional
DFE. Since the length of the feedback ﬁlter may
be many times greater than that of the feedforward
ﬁlter, the computational complexity of the DFE
(particularly the THP) will be dominated by the
feedback ﬁlter.
Fortunately, it is observed that the response of
the DFE feedback ﬁlter is similar to that of the
postcursor ISI. It will be justiﬁed later by simula-
tions over standard test loops. Thus, the optimal
response of the feedback ﬁlter is also a slowly
ARTICLE IN PRESS
0 50 100 150 200 250
-4
-2
0
2
4
6
8
10
12
14
x 10-3
A
m
p
lit
u
d
e
Sample
Fig. 1. Typical channel impulse response in digital subscriber
loop application.
S.-S. Lin, W.-R. Wu / Signal Processing 87 (2007) 2673–26852674
Au
th
or
's 
  p
er
so
na
l   
co
py
respectively. The Wiener solution for f and b can
be derived as follows. Assume that all the decisions
are correct, i.e., x^kD ¼ xkD, x^k ¼ xk ¼ ½xkD1;
xkD2; . . . ; xkDNbþ1T. Let ek ¼ xkD  zk be the
estimation error. Then, the mean square error
(MSE), denoted as J, is Efe2kg, where Efg denotes
the expectation operation. Let s2x ¼ Efx2kg be the
transmit signal power, Rxx ¼ Efx^kx^Tk g ¼ E xkxTk
 
,
Ryy¼EfykyTk g, Ryx¼Efykx^Tk g, and pyx¼EfykxkDg.
Taking the partial derivatives of J with respect to f
and b, and set the results to zeros, we have the
optimal f and b as
fmmse ¼ ðRyy  RyxR1xx RTyxÞ1pyx, (7)
bmmse ¼ R1xx RTyxfmmse. (8)
Inserting the above optimal tap weights fmmse and
bmmse into J, we can obtain the minimum MSE
(MMSE) of the conventional DFE denoted as
Jmin;DFE. The signal to noise ratio (SNR) of the
MMSE DFE before decision is found to be [17]
SNRDFE;MMSE ¼
s2x
Jmin;DFE
. (9)
Let nk be white and its variance be s2n. The
correlation matrices and the cross-correlation vector
in (7) can be then expressed as follows:
Ryy ¼ s2xHHT þ s2nINfNf , (10)
Ryx ¼ s2xH½ 0NbðDþ1Þ INbNb 0NbðNfþNhNbD2Þ T,
(11)
pyx ¼ s2xH½ 0NbD 1 0NbðNfþNhD2Þ T, (12)
where H is the channel matrix given by
H ¼
h0 h1    hNh1 0    0
0 h0 h1    hNh1 0   
..
. ..
.
0    0 h0 h1    hNh1
2
666664
3
777775
NfðNfþNh1Þ
.
(13)
Substituting (10)–(12) into (7)–(9), we can obtain
the theoretical SNR and optimal tap weights. In
simulations, these expressions will be used to obtain
theoretical DFE performance bounds.
3. The proposed interpolated DFE
In this section, the proposed IDFE will be
elaborated in detail. First, we formulate the IDFE
structure and derive the Wiener solution as well as
the MMSE for the IDFE ﬁlter. Using these results,
we can calculate the SNR performance bound.
Applying the LMS algorithm to the IDFE ﬁlter, we
can obtain an adaptive IDFE. Then, we analyze the
convergence behavior of the adaptive IDFE. This
includes the step size bounds and the steady state
misadjustment. Finally, the complexity reduction is
discussed.
3.1. Interpolated DFE
Usually, the optimal feedback ﬁlter response of a
conventional DFE is a smoothly decaying function
as shown in Fig. 3(a). The smooth shape makes it
interpolatable and a low-complexity structure pos-
sible. As assumed, the feedback ﬁlter length of the
DFE is Nb. We can then select a cutting point called
a to separate the optimal feedback ﬁlter response
into two parts; one is an a-tap head response and
the other is an ðNb  aÞ-tap tail response. In general,
ðNb  aÞ is much larger than a. As a result, if the tail
response is implemented by a low-complexity ﬁlter,
the overall computational complexity can be re-
duced dramatically. As shown in Fig. 3(b), we use
a low-complexity IFIR ﬁlter to model the tail
response, and use an FIR ﬁlter to model for the
head response. Thus, an interpolated feedback
equalizer shown in Fig. 4 can be constructed. The
proposed IDFE consists of a conventional feedfor-
ward ﬁlter, and an interpolated feedback ﬁlter.
ARTICLE IN PRESS
b1↑Mg
Interpolated feedback tail
bk
α
1α + Nb1
 g ∗ b1↑Mb2
∗
+
Feedback head
Conventional feedback filter
Fig. 3. (a) Optimal feedback ﬁlter response of conventional
DFE. (b) Interpolated feedback ﬁlter response of proposed
IDFE.
S.-S. Lin, W.-R. Wu / Signal Processing 87 (2007) 2673–26852676
Au
th
or
's 
  p
er
so
na
l   
co
py
Note that x1;k is a vector with downsampled ~xk’s as its
components. The dimension of x1;k is Nb1 and that of
x2;k isNb2. From (14) to (20), we then have zf ;k ¼ ~fTyk
and zb;k ¼ bT1 x1;k þ bT2 x2;k, where zf ;k and zb;k is the
output value of the feedforward and feedback ﬁlters,
respectively.
Given the interpolation ﬁlter g, the Wiener
solution for ~f, b1, and b2 can be derived as follows.
Assume that all the decisions are correct, i.e.,
x^kD ¼ xkD. Deﬁne the IDFE output value (before
decision) as zk ¼ zf ;k  zb;k. Let ek ¼ xkD  zk be
the estimation error; the MSE denoted as J is
Efe2kg. Also, let Ryy ¼ EfykyTk g, Rx1x1 ¼ Efx1;kxT1;kg,
Rx2x2¼Efx2;kxT2;kg, Ryx1¼EfykxT1;kg, Ryx2¼EfykxT2;kg,
Rx1x2 ¼ Efx1;kxT2;kg, and pyx ¼ EfykxkDg. Taking
the partial derivatives of J with respect to ~f, b1, and
b2, and setting the results to zeros, we can obtain the
Wiener solution for the IDFE as
~f
b1
b2
2
64
3
75
mmse
¼
Ryy Ryx1 Ryx2
RTyx1 Rx1x1 Rx1x2
RTyx2 R
T
x1x2
Rx2x2
2
664
3
775
1

pyx
0
0
2
64
3
75.
(21)
Invoking the assumptions made previously, we can
obtain the results shown below.
Ryy ¼ s2xHHT þ s2nINfNf , (22)
Rx1x1 ¼ s2xMMT, (23)
Rx2x2 ¼ s2xIðM1ÞðM1Þ, (24)
Ryx1 ¼ s2xH½0NtðDþ1Þ INtNt
0NtðNfþNhNtD2ÞTMTjNt ¼D Nba, ð25Þ
Ryx2 ¼ s2xH½0ðM1ÞðDþ1Þ IðM1ÞðM1Þ
0ðM1ÞðNfþNhMD1ÞT, ð26Þ
Rx1x2 ¼ s2xM
0ðM1Þa IðM1ÞðM1Þ
0ðNbMþ1Þa 0ðNbMþ1ÞðM1Þ
" #
,
(27)
pyx ¼ s2xH½ 01D 1 01ðNfþNhD2Þ T, (28)
where
M ¼
gT; 0; :::::::::::::::; 0|ﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
ðNb11ÞM
0; . . . ; 0|ﬄﬄﬄ{zﬄﬄﬄ}
M
; gT; 0; . . . ; 0|ﬄﬄﬄ{zﬄﬄﬄ}
ðNb12ÞM
..
.
0; :::::::::::::::; 0|ﬄﬄﬄﬄﬄﬄﬄﬄﬄ{zﬄﬄﬄﬄﬄﬄﬄﬄﬄ}
ðNb11ÞM
; gT
2
66666666666664
3
77777777777775
(29)
is the interpolation-then-decimation matrix andH is
the channel matrix shown in (13). For simplicity, the
detailed derivation is omitted here. Using the above
optimal tap weights ~fmmse, b1;mmse and b2;mmse, we
can then obtain the MMSE of the IDFE, denoted as
Jmin;IDFE. The SNR for the MMSE IDFE before
decision is then
SNRIDFE;MMSE ¼
s2x
Jmin;IDFE
. (30)
We will use the above formula to compute the
theoretical SNR bounds for the IDFE. Note that
when the cutting point equals zero and the
interpolation factor equals one, the IDFE degen-
erates to a conventional DFE.
3.2. Adaptive IDFE
Rewrite the inputs and weights of the IDFE in an
augmented vector form as
uk ¼
yk
x1;k
x2;k
2
64
3
75; wk ¼
~fk
b1;k
b2;k
2
64
3
75. (31)
We can then have the DFE output expressed as
zk ¼ wTkuk. (32)
From (32), we can see that the proposed IDFE has a
linear structure similar to a conventional DFE. As a
result, adaptive algorithms developed for the con-
ventional DFE can be directly applied here. For the
complexity consideration, the simplest adaptive
algorithm, namely the LMS, is employed. Then,
the adaptive IDFE with the LMS algorithm can be
summarized as follows:
Filter output:
zk ¼ wTkuk. (33)
ARTICLE IN PRESS
S.-S. Lin, W.-R. Wu / Signal Processing 87 (2007) 2673–26852678
Au
th
or
's 
  p
er
so
na
l   
co
py
Fig. 5 shows the complexity ratio for different
interpolation factors. As we can see, the complexity
ratio can be as low as 24% when M equals 8. If the
computational complexity of the feedforward ﬁlter
is also taken into account, the ratio will be 31%.
Clearly, the IDFE can reduce the complexity
effectively.
4. Interpolation ﬁlter design
In this section, we discuss the issue of the
interpolation ﬁlter design. An optimal interpolation
ﬁlter has been proposed for the echo cancellation
problem in [19]. We extend its use here. The idea is
to minimize the sum of error squares between the
interpolated and original ﬁlter responses. Given a
channel, the optimal feedback ﬁlter, bmmse, of the
DFE can be obtained theoretically by (8). Let bt be
the tail response of the optimal feedback ﬁlter
starting at a, i.e., bt ¼ ½baþ1; baþ2; . . . ; bNb T. Let bi
be the tail response of the interpolated feedback
ﬁlter shown in Fig. 3, i.e., bi ¼ Bg; where B is a
matrix such that bi ¼ g  b"M1 . Due to the convolu-
tion operation of g and b"M1 , transient responses
results in both end of the interpolated feedback
ﬁlter. As a result, bt cannot be approximated well by
bi at the transient regions. Thus, the transient
regions are ignored and a cost function is deﬁned as
zðgÞ ¼ kB0g b0tk22, (41)
where b0t and B
0 are the same as bt and B,
respectively, but excluding the transient responses.
The optimal interpolation ﬁlter can be calculated by
the least-squares (LS) method,
g0ls ¼ ðB0TB0Þ1B0Tb0t. (42)
In the real world, it is impractical to design a
particular interpolation ﬁlter for each channel. A
practical approach is to ﬁnd an interpolation ﬁlter
jointly optimized by a set of typical channels. For
example, for DSL applications, we can use eight
CSA testing loops in [20]. Thus, (42), optimized for
a single channel, can be extended to multiple-
channel case.
Now, we use an example to demonstrate the
performance of the optimum interpolation ﬁlter.
A twisted-pair wire channel named as CSA No. 3 [20],
which includes most bridged taps and is expected to
receive most multipath reﬂected signals, is consid-
ered. We use the LS method described above to
design two interpolation ﬁlters. The ﬁrst one
interpolate each ﬁlter tap with two given neighbor-
ing taps (named LS-2), and the other with four
given neighboring taps (named LS-4). The inter-
polation factor is set as eight. The interpolation
ﬁlters are optimized for eight CSA loops in [20]. The
results are shown in Fig. 6. The linear interpolation
ﬁlter is also shown in the ﬁgure for comparison.
Note that the linear interpolation ﬁlter interpolates
a ﬁlter tap using two given neighboring taps. Similar
to [9,16], we deﬁne the normalized interpolated
error (NIE) as the performance index, i.e.,
NIE ¼ b
0
i  b0t
b0t

2
2
, (43)
ARTICLE IN PRESS
2 4 6 8 10 12 14 16
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
C
o
m
p
le
x
it
y
 R
a
ti
o
Interpolation Factor
Complexity Ratio (C.R.)
Nb1/Nb
: Feedback tail
Nb2/Nb: Feedback head
Ng/Nb: Interpolation
min. C.R.=24% @ M=8
Fig. 5. Complexity ratio compared to a conventional DFE,
ðNf ;NbÞ ¼ ð16; 180Þ. The minimum complexity ratio (C.R.) is
24% when the interpolation factor equals 8.
-2 -1.5 -1 -0.5 0 0.5 1 1.5 2
-0.2
0
0.2
0.4
0.6
0.8
1
1.2
Interpolation Filter Responses
A
m
p
lit
u
d
e
Sample
Linear
LS-2
LS-4
Fig. 6. Interpolation ﬁlter responses.
S.-S. Lin, W.-R. Wu / Signal Processing 87 (2007) 2673–26852680
Au
th
or
's 
  p
er
so
na
l   
co
py
For a received signal with SNR of 30 dB, an
IDFE(16,22,8) was used to perform equalization.
The delay value D was set to 16 pointing to the peak
of the channel response. Figs. 8(a) and (b) show the
optimal feedforward and feedback ﬁlter responses,
respectively. The feedback ﬁlter response of the
IDFE was obtained by g  b"M1 þ b2. As we can see,
the response of the IDFE is similar to that of the
DFE (but not exactly the same) and the IDFE
successfully equalizes the channel. Coincidentally,
the SNR performance for the DFE and the IDFE is
about the same (20.4 dB for this loop).
5.2. Different loop topologies
To test the robustness of the IDFE, we used eight
CSA loops in [20] for simulations. The theoretical
performance results was evaluated using (9) and (30).
The delay value D was set to 21 here for accom-
modating all eight different loops. Fig. 9(a) shows the
performance of the DFE and the IDFE for a received
SNR of 40dB. The averaged SNRs for the DFE and
the IDFE are 29.4 and 29.1dB, respectively. Fig. 9(b)
shows the performance of the DFE and the IDFE for
a received SNR of 20dB. The averaged SNRs for the
DFE and the IDFE are both equal to 11.5dB.
Though the performance highly depends on the loop,
the performance of the IDFE is always close to that of
the DFE. For the higher received SNR of 40dB, the
performance difference is only 0.3 dB. For the lower
received SNR of 20dB, the performance of both
equalizers is nearly the same.
5.3. The adaptive IDFE
In this subsection, we will evaluate the validity of
derived expressions for the adaptive IDFE. The
ﬁlter parameters are the same as those used above.
We let the step size of the LMS algorithm be
1=8=ðNf þNbÞ ¼ 1=8=ð16þ 180Þ ¼ 0:000638. In a
real application, a variable step size of LMS may be
used to shorten the training period, however, it is
difﬁcult to its analysis convergence behavior. The
step size chosen here is just for the veriﬁcation of the
convergence behavior analyzed in Section 3. In this
case, we need 500,000 iterations to achieve conver-
gence. A 9-kft 26 gauge loop (CSA No. 6), which is
the longest CSA test loop and usually considered as
the worst case in many works, was simulated. The
received SNR was assumed to be 30 dB. Fig. 10
shows the simulation result. In the ﬁgure, the
theoretical steady-state MSE, J1, and the MMSE,
Jmin, are indicated with different horizontal
lines. The adaptive DFE is also simulated for
performance comparison. For easier inspection
and comparison, all learning curves were ﬁltered
ARTICLE IN PRESS
0 5 10 15
-50
0
50
100
150
A
m
p
lit
u
d
e
0 20 40 60 80 100 120 140 160 180
-2
-1.5
-1
-0.5
0
0.5
A
m
p
lit
u
d
e
n-thTap Weight
bDFE
bIDFE
fDFE
fIDFE
Fig. 8. (a) Optimal feedforward ﬁlter coefﬁcients for IDFE and DFE. (b) Optimal feedback ﬁlter coefﬁcients for IDFE and DFE.
S.-S. Lin, W.-R. Wu / Signal Processing 87 (2007) 2673–26852682
Au
th
or
's 
  p
er
so
na
l   
co
py
trained with 500,000 samples. After convergence,
the ﬁlter coefﬁcients of the interpolated feedback
tail ﬁlter b1, and the feedback head ﬁlter b2 were
transmitted back to the transmit side by a reliable
reverse channel. Note that the ﬁlter coefﬁcients of
the interpolation ﬁlter g were known as a priori at
both sides. After the training period, an 8-PAM
data sequence was then transmitted. A conventional
THP (with adaptive DFE) was also simulated for
comparison. For the ‘‘error propagation’’ case, the
scenario was the same except that the THP was not
used. A 9-kft 26 gauge loop (CSA No. 6) was used
as the test loop, and scenarios with different
received SNRs from 20 to 36 dB were considered.
Fig. 12 shows the simulation results. From the
ﬁgure, we can ﬁnd that the performance of the
adaptive IDFE in either case is almost the same as
the adaptive DFE. However, the adaptive IDFE
requires a much lower computational complexity.
5.5. Discussions
The cutting point a is used to separate the fast
and slow varying response of the feedback ﬁlter.
The larger the a, the higher the complexity ratio.
However, the ability to well model the head portion
response is higher. As long as the response is
smooth in the tail region, we can always ﬁnd a
proper a and reduce complexity without compro-
mising performance. For the SHDSL applications,
the performance of the IDFE and DFE is nearly the
same even when a ¼ 0. The feedback ﬁlter response
of the IDFE may exhibit a different shape from that
of the DFE. This indicates that the interpolated
feedback ﬁlter does not approximate the original
feedback response. It is easy to deduce that the
MSE surface for the DFE has a ﬂat bottom near the
Wiener solution. This property makes the perfor-
mance of the IDFE comparable to that of the DFE.
From our simulation experience, we found other
properties with the proposed IDFE. The IDFE is
insensitive to the selection of delay value D. That
means a wide range of delay value reaches nearly the
same performance. When the length of feedforward
ﬁlterNf becomes larger, the feedback ﬁlter response of
the IDFE looks more similar to that of the DFE. This
is because the feedforward ﬁlter can help to compen-
sate for the interpolation error in the feedback ﬁlter.
The other property is that a larger noise level will make
ARTICLE IN PRESS
Noise
xk
nk
yk
xˆk−Δ
h
rk
Σ
fk
FFF
ISI channel
g
b2,k
Σ
Modulo
vk
 
Modulo
+
−
Interpolated Tomlinson-Harashima Precoder
Σ
b1,k
↑M
vk−   −1α
Fig. 11. Low complexity interpolated THP (associated with adaptive IDFE).
20 22 24 26 28 30 32 34 36
SNR (dB)
Adaptive IDFE + ITHP
Adaptive DFE+ THP
Adaptive IDFE
Adaptive DFE
With error propagation 
Without error propagation
10-7
10-6
10-5
10-4
10-3
10-2
10-1
100
S
y
m
b
o
l 
E
rr
o
r 
R
a
te
Fig. 12. Symbol error rate comparison for adaptive IDFE and
DFE plus THP (without error propagation), and for adaptive
IDFE and DFE (with error propagation).
S.-S. Lin, W.-R. Wu / Signal Processing 87 (2007) 2673–26852684
