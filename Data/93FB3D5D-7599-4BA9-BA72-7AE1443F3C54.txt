For a car racing game, the most common artificial 
intelligence is waypoint navigation by carefully 
placing waypoints in the game environment to move the 
game-controlled characters between each waypoint. The 
major drawback of this method is that the number of 
waypoints and the location of waypoints are also 
different due to human factors. In order to overcome 
these problems, we propose two modified A* search 
algorithms to effectively solve the pathfinding 
problem in a static obstacles racing game. The first 
modified A* search algorithm uses a line-of-sight 
algorithm to reduce the waypoints found by the 
original A* search algorithm. The second modified A* 
search algorithm improves the performance of original 
A* search algorithm by heuristically considering the 
truth that the game-controlled car should steer 
itself towards. That is to say, we only need to check 
three waypoints in front of the car, instead of 
checking four waypoints (up, down, left and right) in 
the original A* search algorithm. Finally, we propose 
a more general dynamic pathfinding algorithm which 
can solve the random obstacles avoidance problem in a 
racing game. This method is put two collision 
detection points in front of the right and left side 
of the car, and then utilize the trick of collision 
detection by different color to automatic move the 
cars around the racetrack. The advantages is that it 
can do the pathfinding in real time and it looks more 
natural then the static path of A* finding. 
(2) Simulating Collective Behaviors for Virtual 
Crowds  
In this topic, we use two popular machine learning 
methods, neural network and support vector machine, 
to predict which emotion should be excited for a NPC. 
The experiment results show that the applications for 
both neural network and support vector machine 
achieve the prediction accuracy rate of over 93%. In 
other words, both of them can successful using in the 
on-line simulation of emotion in games, and can 
easily replace the traditional method of finite state 
machine. After that, we develop a simulated system 
which embedded above trained SVM module to simulate 
 
行政院國家科學委員會補助專題研究計畫成果報告 
 
 
應用路徑規劃及群聚人工智慧於數位遊戲上之研究 
 
 
 
計畫類別：■個別型計畫  □整合型計畫 
計畫編號： NSC 100-2221-E-262-026 
執行期間： 100年 08月 01日至 101年 7月 31日 
 
計畫主持人：王榮英 副教授 
計畫參與人員：曾彥睿 
成果報告類型(依經費核定清單規定繳交)：■精簡報告  □完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
▇出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
 
處理方式：得立即公開查詢 
 
 
執行單位：龍華科技大學多媒體與遊戲發展科學系 
 
中 華 民 國 101 年 7 月 31 日 
 2 
 
(1) Pathfinding for a Car Racing Game 
For a car racing game, the most common 
artificial intelligence is waypoint navigation 
by carefully placing waypoints in the game 
environment to move the game-controlled 
characters between each waypoint. The 
major drawback of this method is that the 
number of waypoints and the location of 
waypoints are also different due to human 
factors. In order to overcome these problems, 
we propose two modified A* search 
algorithms to effectively solve the 
pathfinding problem in a static obstacles 
racing game. The first modified A* search 
algorithm uses a line-of-sight algorithm to 
reduce the waypoints found by the original 
A* search algorithm. For the speedway of F1 
in Turkey, the waypoints reduced from 985 
points to 28 points, over 97% waypoints 
could be removed. The second modified A* 
search algorithm improves the performance 
of original A* search algorithm by 
heuristically considering the truth that the 
game-controlled car should steer itself 
towards. That is to say, we only need to 
check three waypoints in front of the car, 
instead of checking four waypoints (up, 
down, left and right) in the original A* 
search algorithm. Finally, we propose a more 
general dynamic pathfinding algorithm 
which can solve the random obstacles 
avoidance problem in a racing game. This 
method is put two collision detection points 
in front of the right and left side of the car, 
and then utilize the trick of collision 
detection by different color to automatic 
move the cars around the racetrack. The 
advantages is that it can do the pathfinding in 
real time and it looks more natural then the 
static path of A* finding. 
 
(2) Simulating Collective Behaviors for 
Virtual Crowds in Real Time Strategy 
Game 
In this topic, we first review and summarize 
the theories and researches on human 
emotions and flocking. Then we select the 
appropriate items from human emotions to 
implement them in game. We use two 
popular machine learning methods, neural 
network and support vector machine, to 
predict which emotion should be excited for 
a NPC. The experiment results show that the 
applications for both neural network and 
support vector machine achieve the 
prediction accuracy rate of over 93%. In 
other words, both of them can successful 
using in the on-line simulation of emotion in 
games, and can easily replace the traditional 
method of finite state machine. After that, we 
develop a simulated system which embedded 
above trained SVM module to simulate the 
flocking behavior by the infection of human 
emotions. The experiment results show that 
when the flock is activated by a special type 
of emotion, e.g. angry, our simulation system 
can successfully simulate the non-player 
characters all have the human-like (or 
animal-like) behavior. 
 
Keywords: Artificial intelligence, Racing 
game, Pathfinding, A* search algorithm, 
Flocking, Emotions 
 
二、緣由與目的 
 
近年來，電玩遊戲的繪圖技術已經逐
漸面臨瓶頸，而且對於遊戲效果的提升也
愈來愈有限。為了突破現況，有些人開始
將研究的焦點，轉移到人工智慧的技術上
。人工智慧是用來模擬人類行為的技術，
在遊戲中加入適當的人工智慧，除了可以
增加遊戲的挑戰性，還可以增加遊戲的耐
玩性。 
遊戲人工智慧的應用相當廣泛，其中
較常見的問題就是路徑搜尋。路徑搜尋的
主要用途在於尋找能夠避開障礙物，並且
抵達目的地的路徑，然後再將尋找出來的
路徑，做為非玩家角色的移動路線。路徑
搜尋的設計優劣，會直接影響遊戲的品質
，路徑搜尋設計不良，可能會造成畫面延
遲或是移動路徑死板。人工智慧的設計對
於遊戲而言雖然非常的重要，但是在遊戲
中可以使用的運算資源相當有限。然而，
傳統的路徑搜尋演算法，大部分都是應用
在網格式或節點式的遊戲環境底下，不僅
需要花費時間將遊戲規劃成網格式的環境
，還需要花費時間設置路徑的節點座標。 
所以本計畫提出了兩種改良式的 A*搜尋
演算法和一個能夠通用於動態環境的貪婪
 4 
的距離(此為 A*搜尋演算法的主要評價公
式)，f(n)代表的是目前節點的評價分數。 
於遊戲中汽車的設定方面，遊戲之圖片更
新率採用 XNA遊戲開發平台，內定之每秒
60個影格(60 frames/sec)。為使汽車在遊戲
畫面上行進時，看起來較為流暢自然，汽
車於每次畫面更新時將移動 4 個像素，故
汽車之移動速度為每秒 240 個像素(240 
pixels/sec)，而轉彎的速度設定為每次畫面
更新時，可旋轉 0.3個弳度量。至於汽車的
圖像大小則是 18*12像素。 
以下針對我們提出之兩個改良式之 A*搜
尋演算法，和可以解決遊戲中動態障礙物
問題之貪婪式搜尋演算法進行說明之： 
 
3.1 視線式搜尋演算法 
 
視線式搜尋演算法是使用視線判別的
方式(即：兩點連線間直線碰撞判斷的方
式)，來進一步的刪減由 A*搜尋演算法所求
得之路徑中不需要的節點。首先，我們使
用網格式 A*搜尋演算法，也就是說，當
A*搜尋演算法在檢視相鄰節點時，只會檢
視上下左右四個方向的相鄰節點。如圖 3
所示。其中藍色的節點表示當前的節點，
而綠色的節點則是將會檢視的相鄰節點。 
 
 
 
圖 3: 四方移動方式的當前節點和相鄰節
點 
 
當 A*搜尋演算法計算出最佳路徑
後，再使用視線判別的方式，將視線中的
最後一個節點保留下來，並且將其他中間
的節點刪除。舉例來說，如圖 4 所示，節
點 1、節點 2 和節點 3 中間沒有障礙物存
在，只有節點 1 和節點 4 中間有障礙物。
所以我們可將節點 2 移除，然後使汽車依
照每次更新位置時移動 4 個像素和每次可
旋轉 0.3個弳度量的規則下，由節點 1直接
往節點 3 的方向移動，並且從節點 3 開始
繼續與後面的節點做視線之判別。 
 
 
圖 4: 刪減節點的方式 
 
3.2 適應性向量式搜尋演算法 
 
適應性向量式搜尋演算法是以汽車當
前的位置與方向為基準，針對汽車逆時針
旋轉 0.3弳度、順時針旋轉轉 0.3弳度和直
線前進三種向量大小為 4 個像素的相鄰節
點進行 A*搜尋演算法，如圖 5所示。藍色
的節點為當前的節點，綠色的節點則是將
會檢視的相鄰節點。 
 
 
圖 5: 適應性向量式搜尋演算法的當前節
點和相鄰節點 
 
 
圖 6: 汽車碰撞偵測點之示意圖 
 
3.3 動態貪婪式搜尋演算法 
 
動態貪婪式搜尋演算法，是在汽車兩
側的前方設置偵測點，當汽車前方左邊的
偵測點發生碰撞，汽車就會順時針旋轉動
一個 0.3弳度量，當汽車前方右邊的偵測點
 6 
 
圖 9: 土耳其視線搜尋演算法取得的節點全圖 
 
 
圖 10: 土耳其視線搜尋演算法的局部節點圖片 
 
 
圖 11: 匈牙利視線搜尋演算法取得的節點全圖 
 
 
圖 12: 匈牙利視線搜尋演算法的局部節點圖片 
 
 
圖 13: 義大利視線搜尋演算法取得的節點全圖 
 
 
圖 14: 義大利視線搜尋演算法的局部節點圖片 
 
4.4 綜合討論 
 
綜上所述，我們將本研究所提出之 3
個演算法之優劣與適用場合做一個摘要式
之整理與比較，如表 2 所示。其中視線式
搜尋演算法在連續彎道偶有碰撞跑道的情
形，乃因為於此演算執行時，我們僅以兩
點間之最短距離為評估函數來選擇最佳之
路徑點，而並未加入以跑道之中心點為優
先之選擇條件。如此做法之好處是可簡化
演算法之複雜度與節省執行之時間。缺點
是汽車行進時可能會較貼近跑道邊緣。 
而適應性向量式搜尋演算法偶有擺盪的情
形產生，乃因為於實做此賽車遊戲之演算
法時，當汽車行進至時間為 t-1之位置時，
我們才以該位置為基準，依 A*演算法進行
下一個位置之計算(即：時間為 t 位置之計
算)，其示意圖如圖 15 所示，其中之虛線
點表示車子於時間 t-3至時間 t+2之行進路
線，因於連續之時間內不斷的上下調整行
進之方向，而造成擺盪情形之產生。 
 
 
 
 8 
 
圖18 激發痛苦情緒連續圖 
 
圖 19為受憤怒情緒激發，因而產生狂
怒狀態的群體連續圖。第 1 格，群體的情
緒尚未被激發，朝向情緒領域移動。第 2-6
格，群體的情緒被激發，此時移動速度為
每秒增加 5 個像素，此移動速度為原本之
2.5倍來進行模擬，因被激發之個體速度迅
速的增加，導致無該個體無法保持在該群
體中，會獨自的衝出。換言之，當個體之
憤怒情緒被激發之時，個體會失去理性快
速的脫離群體及急速的突進，直到該情緒
值低於我們設定之門檻值後，方回歸正
常。第 7-8 格，群體的情緒激發結束，回
歸正常狀態。由截圖之 5-6 格可看到有趣
的模擬結果，即：憤怒的情緒會使得群體
分裂。頗符合我們擬真的觀察結果。 
 
 
圖19 激發憤怒情緒連續圖 
 
圖 20為受恐懼情緒激發，因而產生逃
跑狀態的群體連續圖。第 1 格，群體的情
緒尚未被激發，朝向情緒領域移動。第 2-6
格，群體的情緒被激發，開始閃避情緒領
域。第 7-8 格，群體的情緒激發結束，回
歸正常狀態。 
 
 
圖20 激發恐懼情緒連續圖 
 
從以上的模擬結果可以得知，本計畫
成功的使用支持向量機，建構出情緒因
素，並且藉由情緒產生的狀態變化，讓群
體的行動也有所改變。此外，本模擬亦可
觀察到情緒的傳播與個體及群體間之連動
關係。如在一些特定情況之下，原未受到
情緒影響的個體，會因為基本群聚規則的
影響，做出跟群體相同的反應。舉例來說，
在激發恐懼情緒連續圖中(圖 20)，其第 3-5
格內，有些個體沒有受到情緒影響，卻因
基本群聚規則，同樣地產生了逃跑行為；
這一點，當進行依照個體內定之情緒反應
測時，所得到的結果也是相同的。 
 
五、計劃成果自評 
 
研究內容與原計畫程度相符並達成預
期之目標。相關研究結果共發表了4篇論
文，其中國外期刊論文2篇，國際研討會論
文1篇，國內研討會論文1篇，並指導學生
以自製之遊戲，參加國內最具代表性之經
濟部工業局4C 數位創作競賽，獲得鈊象贊
助獎。 
本計劃進行期間，皆定時開會討論，
所有成員皆參與研討，並且報告各人負責
的進度報告，因此，皆能按照進度計劃原
預計的目標進行。此計畫目前已獲得相當
多的成果，相信本計劃繼續進行下去，將
會有具體且完整的成果。 
 
六、相關論文之發表及成果 
 
(1). "Game AI: Simulating Car Racing 
Game by Applying Pathfinding 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                           101 年 3 月 14 日 
報告人姓名  
王榮英 
服務機構 
及職稱 
龍華科技大學 
副教授 
     時間 
會議 
     地點 
2012/3/10 ~ 2010/3/11 
香港 
本會核定 
補助文號 
 
NSC 100-2221-E-262 -026 - 
 
會議 
名稱 
 (中文) 2012年網際網路與電腦科學國際研討會 
 (英文) 2012 International Conference on Network and Computer Science 
(ICNCS 2012) 
發表 
論文 
題目 
 (中文) 使用支持向量機於遊戲中群聚現象之模擬 
 (英文) Simulation of Flocking Behavior in Game by Human Emotions – 
Using Embedded Support Vector Machine 
報告內容應包括下列各項： 
一、參加會議經過 
此次國際研討會被錄取收錄於 2012 International Proceedings of Computer Science and 
Information Technology之研討會論文集中。我於 3月 9日出發到香港，於研討會中有來
自世界各地的研究論文發表，會場的安排及討論與專題演講都相當豐富。也藉著報告論
文的空檔，去觀摩於網路及電腦科技等領域上的研究趨勢、方法、以及發展的現況。本
人參加報告的 Session是在 3/11日舉行，當天總共分為 4個小主題，包含了網路及電腦
科技等領域的主題，也在上午時進行了 3 場相當精彩的 Plenary Speech。而本人的報告
是在下午的第 3 個 Session 舉行，順位是第二位，有許多此一領域的學者參與，也與本
人做簡短的討論交流。 
 
二、與會心得 
許多的研究領域與專題演講都與我的研究相關，聽完相關的發表和與參與會議的各國研
究人員相談與討論，增長了各領域的知識水平，發現收穫良多。這對我們的研究是很有
幫助的；而各個相關主題的分類更可以使相同領域的學者們針對彼此不同的概念、想法
做分享。也結交了許多的朋友與同領域的研究伙伴。對未來研究上將會大有助益。另香
港相當有趣，故除參與研討會之外，體驗當地的社會文化是一種重要與難得的經驗。 
 
三、考察參觀活動(無是項活動者省略) 
 
四、建議 
本次參與網際網路與電腦科學國際研討會，發現國際上相關領域的研究者相當多，可惜
平時與我們的互動比較少，未來應可以利用本次研討會的經驗與結識國外學者後之聯絡
方式，多多與國外領域專案進行互動研討。 
 
五、攜回資料名稱及內容 
2012 International Conference on Network and Computer Science之研討會論文集。 
 
六、其他 
 
2012 International Conference on Network and Computer Science (ICNCS 2012) 
 
- 2 - 
If the above requirements are met by the set deadlines, the paper will be included in ICNCS 2012 conference 
proceeding, which will be included in the ASME Digital Library, and indexed by the Ei Compendex and 
Thomson ISI Proceedings. 
Maybe some unforeseeable events could prevent a few authors not to attend the event to present their papers, so if you 
and your co-author(s) could not attend ICNCS 2012 to present your paper for some reasons, please inform us. And we 
will send you, the official receipt of registration fee, proceedings after ICNCS 2012 free of charge.  
Please strictly adhere to the format specified in the conference template while preparing your final paper. If you have 
any problem in preparing the final paper, please feel free to contact us via icncs@vip.163.com. For the most updated 
information on the conference, please check the conference website at http://www.icncs.org. The Conference Program 
will be available at the website in late February, 2012. 
Finally, we would like to further extend our congratulations to you and we are looking forward to meeting you in Hong 
Kong! 
Yours sincerely, 
 
ICNCS 2012 Organizing Committees 
http://www.icncs.org 
Hong Kong 
Two machine learning methods, the neural networks and support vector machine, are used as predictor to 
predict which emotion will be excited. In order to develop our prediction model, four basic motions anger, 
distress, fear and joy are selected as the feature vectors. All emotions exist on a scale of 0 to 100. In this 
study, the coding scheme uses the method of exhaustion (brute force method) to code. That is, the score 
range of each basic emotion is set from 0 to 100 increments of 10 with 0 the lowest and 100 the highest. We 
randomly selected 2/3 of the data as training data, the remaining 1/3 of the data as the test data.  Based on 
this coding, there will be 11*11*11*11 = 14641 possible patterns in our data set. Because of the emotion 
simulation in game, only the strongest emotion will be excited at each time frame. Therefore, we take the 
highest score of the four basic emotions as the excited state. For example, a non-player character datum with 
emotion score of anger = 30, distress = 50, fear = 70 and joy = 40, then the basic emotion of fear will be 
excited. But if the highest score of any two or more of the four basic emotions are the same, then we set its 
state to "undetermined", and random choose one of the highest emotion score as the excited state.  For 
example, a non-player character datum with score of anger = 10, distress = 50, fear = 50 and joy = 30, then 
the state will be set to undetermined and the excited state will random select from the emotion of distress or 
fear. In other words, each data is set to one of four emotions state or set to the “undetermined” state.   
2.2. Software and Model Selection for NN and SVM 
In our study, a computer program was implemented using WEKA 3.6 [7] for the back-propagation neural 
network model. There were four input nodes and five output node. The maximum iteration for the back-
propagation neural network was set as 500.  The learning rate and momentum were set to as 0.3 and 0.05, 
respectively.  It is worth mentioning that there is no standard method to get the number of nodes needed in 
the hidden layer.  In here, 20 nodes were used in the hidden layer by try and error. 
We use the software LIBSVM 3.1 [8] for experiments. LIBSVM is a general library for support vector 
classification and regression. There is different functions φ to map data to higher dimensional spaces; 
practically we need to select the kernel function. There are several types of kernels in used with all kinds of 
problems. Each kernel may be more suitable for some problems. In our experience, the RBF kernel is a 
decent choice for most problems. A learner with the RBF kernel usually performs no worse than others do, in 
terms of the generalization ability. In this paper, we did some simple comparisons and observed that using 
the RBF kernel the performance is better than the linear and polynomial kernel for the problem we studied. 
We then use the RBF kernel for all the experiments. 
Another important issue is the selection of parameters. For SVM training, few parameters such as the 
penalty parameter C and the kernel parameter γ of the RBF function must be determined in advance. 
Choosing optimal parameters for support vector machines is an important step in SVM design. We carried 
out some experiments to turn up and evaluate the prediction system by random selecting about 1/n data as 
training data and testing the selected model by another 1/n, where n equal to seven for our data set. After this 
we could find the optimal pairs of C and γ for the 5 binary-class SVM models. The optimal pairs of C and γ 
are C = 30.5 and γ = 0.00115; Therefore, the optimal parameters are used for constructing the models for 
future testing.  
2.3. Prediction Results 
We use 3-fold cross validation to measure the performance. With 3-fold cross-validation approximately 
1/3 of the data is left out while training and the remaining 2/3 part is used for testing. This is done cyclically 
3-times, and the resulting prediction is thus a mean over 3 different testing sets.  Based on our data set, the 
prediction performance by NN and SVM achieved the accuracy of 95.61% and 99.96%, respectively. In 
other words, both of them can successful using as the on-line predictor of excited emotion in game, and can 
easily replace the traditional method of finite state machine. 
3. Simulation of Flocking Behavior by Human Emotions 
3.1. Flocking 
In the field of computer animation and game, simulation of crowd motions occupies a very important 
position. Reynolds [9] proposed a basic model of flocking behavior consisting of three simple rules: (1) 
of distress. But they still keep their rank by Reynolds rules.  After that, units return to the normal state of 
flocking.  
Fig. 4 is the simulation result for crowd (units) pass through the fear excited zone. The screenshot 
number 2 to 6 shown units run away to avoid touch the fear excited zone. Though just a few units excited by 
fear, crowd immediately make a sharp turn by the flocking rule of Reynolds.  After that, units return to the 
normal state of flocking. Fig. 5 is the simulation result for crowd (units) pass through the anger excited zone. 
The screenshot number 2 to 6 shown when a unit is excited by anger, it quickly rushes to pass the excited 
zone.  Therefore, the rank formed by units is broken into pieces. After that, units return to the normal state of 
flocking. 
4. Conclusions 
The simulation of flocking behavior by human emotions in game has been few studies in these days. In 
this paper, we used the trained SVM module as an excited emotion predictor to embed in our simulation 
system. Then we simulate the flocking behavior by human emotions in game. Simulation results show that 
when the flock is activated by a special type of emotion, e.g. angry, our simulation system can successfully 
simulate the non-player characters all have the human-like (or animal-like) behavior. In other words, our 
emotion simulation system can embed into games to simulate non-player characters their flocking behavior.  
 
   
Fig. 2: Result of excited by joy 
 
  
Fig. 3: Result of excited by distress 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/09/30
國科會補助計畫
計畫名稱: 應用路徑規劃及群聚人工智慧於數位遊戲上之研究
計畫主持人: 王榮英
計畫編號: 100-2221-E-262-026- 學門領域: 人工智慧
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
指導學生以自製之遊戲，參加國內最具代表性之經濟部工業局 4C 數位創作競
賽，獲得鈊象贊助獎。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
