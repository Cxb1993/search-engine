 I 
中文摘要 
本計畫是建置於既有研究之上，並增加新特性以提昇遊戲引擎。在過去的版本中，於遊
戲開發上已達成一定的簡化程度，但我們仍發現在遊戲設計的過程中仍將遇到開發困難，
以及繁雜處理的部份可以再予以簡化。因此本計畫將針對實際的開發需求來達到所謂「Total 
Solution」的遊戲設計方案，其中包含四大方向，分別是「ㄧ致化裝置架構」，即讓開發者
可以自由地使用或移除本引擎所支援的多元化互動裝置，以簡化互動遊戲之設計；「直覺化
編輯器」，從遊戲開發者的觀點去思考，再藉由 Plug-in的彈性機制來強化引擎功能，以提
昇編輯器對於遊戲開發者的助益；「強化網 路處理能力」，即針對線上遊戲上複雜的資料與
物件，提出通用的架構予以簡化，以適用於 不同類型網路遊戲的開發；「網路多媒體平台」，
提供一個發展多媒體應用的開放平台。在未來，我們希望它可以推廣至各大專院校與業界
以強化國家競爭力。 
關鍵字：體感遊戲、網路遊戲、遊戲編輯器、遊戲引擎 
 III 
目錄 
前言 .................................................................................................................................................. 1 
研究目的 .......................................................................................................................................... 1 
文獻探討 .......................................................................................................................................... 1 
研究方法 .......................................................................................................................................... 3 
1. 一致化裝置架構 ................................................................................................................. 3 
2. 直覺化編輯器 ..................................................................................................................... 4 
3. 強化網路處理能力 ............................................................................................................. 5 
4. 網路多媒體平台 ................................................................................................................. 6 
結果與討論 ...................................................................................................................................... 8 
參考文獻 .......................................................................................................................................... 9 
計畫成果自評 ................................................................................................................................ 10 
 2 
3. 同步化處理 
網路遊戲多半會遇到網路延遲的問題，所以同步化的處理顯得非常重要，為了解決網
路遊戲的同步問題，本計畫在此進行簡略地探討。 
對於在兩個站台i 以及j，都具有一個共用物件o，而o 在i 及j 狀態則分別為si(t) 及
sj(t)，若時間t 相同，則si(t) 必須等於sj(t)。但是考慮到實際面，上述要求其實具有困難度，
主要是因為網路延遲將使得時間的狀態難以完全相同。因此Frederick W.B.提出了相對鬆散
的同步控制模型，則對於在Ta 及Tb 間的任何時候，兩站台間的狀態差距D 不可超過特定
的容許值ξ，故在D之間來進行同步化的調整，其模型如下所示。 
 
A. 持續同步的方式 
根據Frederick W.B 等人[9][10]所提出的一個架構，即針對每一個動態物件都將配置一
個模擬器，而動態物件可能是經由電腦所控制，或者是由網路玩家所操縱，故必須對於每
個用戶端的動態物件進行同步化動作。而一般在網路遊戲中，角色目前的動作與位置是最
需要進行同步化處理，而依據動作的向量可以決定角色的位移向量，並利用下列的公式在
模擬器進行推測。 
 
而p 即代表目前角色的位置，t 表示p 以及Pnew 之間的時間差，而V 則為角色的位移
向量。因此當遇到網路延遲與封包遺失時會產生角色跳動的效應，即資料封包所接收的值
與計算所得的值存在差距，而產生跳動的情況。為了解決這樣的問題，有許多的處理方法
都會在移動與旋轉物件時使用平滑化（Smoothing）的處理，讓誤差的調整能夠平順地表現。 
4. 網路多媒體平台架構元件 
Microsoft DirectX DirectPlay Lobby[19]主要是針對開發遊戲多媒體平台架構的技術，其
中網路多媒體平台所需要的元件其實大同小異，因此本計畫報告將簡略地針對Microsoft 
DirectX DirectPlay Lobby來探討網路多媒體元件。 
A. DirectPlay Lobby 
在DirectPlay Lobby的架構中，其主要是透過五個主要元件所組成。而除了可建置Lobby 
Servers在網際網路上提供Client端實際連接與運行，其他四個元件都必須安裝在使用者的個
人電腦上才能夠執行。以下 將列出DirectPlay Lobby 包含的五個元件：大廳伺服端
（ LobbyServer）、大廳客戶端（ Lobby Client）、支援大廳的遊戲（ Lobbyable 
GameApplicaiton）、DirectPlay 大廳客戶端元件(DirectPlay Lobby Client Object)、大廳遊戲
程式元件（DirectPlay Lobbied Application Object）。 
大廳客戶端元件(DirectPlay Lobby Client Object) 和大廳遊戲程式元件（DirectPlay 
Lobbied Application Object）負責連接遊戲程序和大廳客戶端，並且通過私有平台進行聯
絡，其架構如下圖所示： 
 4 
動上的需要，並製作 InputDevice Editor編輯器(後續將介紹)，以方便幫助開發者進行設計。 
 2. 直覺化編輯器 
本計畫在Editor部份，一為主要的整體遊戲內容編輯器「IS.GD Editor」，另一個則針
對在互動遊戲的外部裝置編輯器「InputDevice Editor」。 
A. IS.GD Editor 
在本計畫中，IS.GD Editor編輯器目的是為簡化使用者學習與整合時間，以強化IS.GD
之核心精神「簡化開發」。本計畫之編輯器架構目標是以單一輸出為主，遊戲開發者不需
整合不同編輯器之間的輸出，大量縮短整合時間，直接與底層Engine進行結合，即可達成
真正的「所見即所得」的目的。而目前IS.GD Editor已完成在場景編輯與遊戲關卡編輯部份，
已可簡易地加入的遊戲物件與內容設計，並且可立即看到實際的遊戲場景與物件的繪圖影
像；此外，也可讀入預先用3D Max所繪出的場景模型之ofusion[21]與產出相關資訊檔，供
開發者可快速地對遊戲內容進行雛型化，以此基礎，之後將進行Editor第二階段的開發工作。 
  
圖3、IS.GD Editor 
B. InputDevice Editor 
InputDevice Editor目的為希望可以簡化遊戲開發者在處理多重互動裝置的設計。此編輯
器主要是依循前述的一致化裝置架構。而InputDevice Editor是以拖曳裝置動作區塊的方式所
呈現，其實際的使用畫面如下。  
 
圖4、InputDevice Editor實際使用圖 
 6 
在遊戲開發者自訂物件資訊時，即可以決定網路遊戲同步化的程度，分為High、
Mediam、Low 三種不同的更新程度，而遊戲引擎會針對遊戲開發者所設定的同步化程度，
在網路更新時期，即針對不同程度的第三方物件做一致性的處理。 
4. 網路多媒體平台 
本計畫在網路多媒體平台架構之設計，主要包含三個元件，分別是簡化社群介面建置
流程、後端資料處理通用性架構、通用性網路平台需求機制。 
A.簡化社群介面建制流程 
遊戲開發者有兩種方式可透過遊戲引擎來定義社群介面：(1).使用複合型態介面 (2).基
本介面，複合型態介面主要是由基本介面所構成的，一般而言，基本介面包含一般使用者
元件，例如：Text、Famework、ListBox、Button 等，而複合型態介面則是用於特定目的，
如登入介面、網路伺服器狀態介面等。在遊戲引擎使用複合型態介面繼承與一般介面一樣
的使用方式。 
 
圖 8、使用複合型態登入介面 
遊戲開發者必須要在 Triggle.xml定義輸入裝置驅動的事件，如果是引擎內建的介面都
會加上前綴詞 Isgd_表示為引擎內建物件。接著，遊戲開發者指定按下滑鼠左鍵，則去執行
LoginCheck 的行為。 
 
圖 9、定義物件的觸發事件 
 
圖 10、使用社群命令列範例 
 
 8 
 
圖 12、每個節點皆可存取其他節點資源檔 
首先，如果是設定成 Client 端電腦，必須在 Network.xml 設定下列參數，在這裡設定
的參數都是為預設值，例如：連接的更新伺服器 IP、以及連線的 Port、專案名稱、以及下
載其他遊戲資源的根目錄資料夾名稱，以及是否同時開放資源給其他 Client 端下載、目前
Client 端資源檔的版本紀錄檔案名稱。 
 
圖 13 本研究玩家身份轉換機制設定範例圖 
結果與討論 
本計畫是架構於本計畫主持人之前的研究之上[1][2][3][4][5][6][7]，研究計畫的核心為
簡化使用者開發遊戲的 3D 線上遊戲引擎。本計畫更加強了簡化開發的精神；計畫將從四
方面著手切入，分別為一致化裝置架構、直覺化編輯器、強化網路處理能力以及網路多媒
體平台架構之設計。 
在一致化裝置架構上，目的是希望簡化遊戲在互動裝置的設計過程以及降低裝置背景
知識的問題。藉由從內、外部交叉分析遊戲主體、玩家和互動裝置之間的關係，以歸納出
核心概念，讓不同的裝置可以透過相同的設定模式來處理，利用本計畫所歸納與設計的動
作區塊可快速的進行互動上的設計與裝置上的抽換，更以此架構製作 InputDevice Editor，
藉由將多個裝置動作的串聯，提高裝置間的結合性以及變化性。 
在直覺化編輯器的部份，「 IS.GD 遊戲引擎」參照了許多資料驅動的研究
[8][11][13][16]，以 XML 為開發介面，對於遊戲開發者而言，在某些方面而言仍然不夠直
覺。本計畫之編輯器目前 IS.GD Editor 提供使用者視覺化且即時顯示的機制，目前階段已
可設計簡易的遊戲內容，並且持續地往第二階段更實質的視覺互動設計之建置。 
