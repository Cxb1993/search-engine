spectrum has increased to the extent that spectrum 
shortage is an imminent problem. Recent studies 
reveal that the shortage problem results from 
inefficient management of the spectrum usage, not the 
scarcity of the wireless spectrum itself. If the 
unused bands can be made open for access, the 
spectrum shortage can be improved significantly, if 
not solved completely. 
In this two-year project, we develop several key 
technologies to realize DSA In particular, we focus 
on spectrum sensing and neighbor discovery issues and 
develop several protocols/algorithms. Our research 
outcomes are summarized as follows. 
1.We implemented a Digital Video Broadcasting-
Terrestrial (DVB-T) feature detection scheme in the 
Universal Software Radio Peripheral (USRP) platform 
to detect primary users. Using our feature detection, 
a primary user (DVB-T station) can be accurately 
detected in less than 10 ms. A novel quiet period 
(QP) scheduling algorithm using slot chasing is 
proposed to support distributed cooperative sensing. 
The proposed QP scheduling algorithm guarantees the 
QP alignment among heterogeneous secondary users 
without explicit communication or synchronization 
among collocated heterogeneous secondary users. Our 
work has been published in IEEE Transactions on 
Wireless Communications. 
 
2.We developed three sequenced-based schemes to solve 
the neighbor discovery issue in DSA networks. With 
the help of our specially-designed hopping sequences, 
any two devices are guaranteed to meet on all 
channels without synchronization or prior 
negotiation. Besides, we also adopted a novel non-
uniform sequence design to achieve higher system 
utilization 
 
3.Our protocols/algorithms have been implemented in 
USRP test bed in order to evaluate their performance. 
Our test bed was also demonstrated in 2011 6th ACM 
workshop on Wireless Multimedia Networking and 
Computing. 
1 
 
TABLE OF CONTENTS 
(一) 前言........................................................................................................................ 2 
(二) 研究目的................................................................................................................ 3 
(I) Neighbor Discovery ................................................................................... 3 
(II) Spectrum Sensing....................................................................................... 5  
(三) 文獻探討................................................................................................................ 6 
(四) 研究方法.............................................................................................................. 18 
(I) Neighbor Discovery ................................................................................. 18 
(a) Non-uniform hopping sequences  ........................................................ 19 
(b) Adaptive non-uniform hopping sequence  .......................................... 24 
(c) Hopping sequence design based on SSCH using two transceivers ...... 31 
(II) Spectrum Sensing..................................................................................... 35 
(III) Experimental Test bed ............................................................................. 37 
(a) Slot Structure ......................................................................................... 38 
(b) Feature Detection ................................................................................... 38 
(c) Beacon and Data Transmission .............................................................. 39 
(d) Detection of the Secondary User ........................................................... 40 
(e) Test bed .................................................................................................. 41 
(五) 結果與討論 ......................................................................................................... 43 
(六) 參考文獻.............................................................................................................. 44 
 
  
3 
 
by primary users. The spectrum-sensing-based scheme requires secondary 
devices to sense over-the-air primary signal so that the real-time information of 
channel states can be obtained without any ``active” involvement of primary 
users. The spectrum-sensing-scheme seems a better choice in DSA networks. 
Therefore, we will focus on the problems in the spectrum-sensing-scheme.  
The spectrum sensing in the DSA network is an important issue since the 
correctly detection can protect the incumbents. The spectrum sensing requires 
not only the physical-layer sensing but also the higher-layer coordination among 
collocated secondary devices. If incumbents can be protected, then we should 
further address the neighbor discovery issue which is related to the performance 
of secondary devices. Neighbor discovery in this project is referred to as the 
process where two devices detect the existence of each other whenever in the 
radio coverage of each other. In general, the process requires two devices in 
radio vicinity to rendezvous on a frequency band. In addition to the issues 
mentioned above, there are still many issues need to be addressed. For example, 
spectral sharing between heterogeneous secondary devices and detection 
accuracy with potential misbehaviors from malicious secondary users are also 
very challenging issues. By `` heterogeneous”, we refer to those devices that use 
different physical-layer radios and MAC-layer protocols. In this project, we 
focus on the spectrum sensing and the neighbor discovery issues in DSA and 
give proper solutions to these two challenging problems. 
(二) 研究目的 
(I) Neighbor Discovery 
A wireless network using DSA is essentially a multi-channel network where 
devices search among different bands for transmission opportunities. The major 
difference between a conventional multi-channel network and a DSA network is 
channel accessibility. In a conventional multi-channel network, devices have full 
access to a channel either via contention or reservation. Any two communicating 
devices can choose to stay in any channel and obtain a certain percentage of the 
channel time for data transmission. Whenever the devices decide to vacate a 
channel, they have plenty of time to negotiate in advance. After changing to a 
new channel, the devices will gain access to the new channel — sooner or 
later — to resume their transmission. In a DSA network, however, channel 
access is subject to the usage of licensed users. DSA devices could be forced to 
vacate a channel without any notice in advance. Therefore, determination of a 
new channel via negotiation may not be possible. Even when they can switch to 
5 
 
frequently. We define this kind of design as “non-uniform” design. In this project, 
we propose well designed sequences which adopt the novel “non-uniform” 
designs. The proposed sequence-based solutions can not only address the 
neighbor discovery issue but also achieve high system utilization.    
(II) Spectrum sensing 
Spectrum sensing is a vital part of DSA because it provides secondary 
devices real-time information about spectrum availability. In general, spectrum 
sensing requires (1) physical layer sensing capability at individual secondary 
devices, and (2) higher-layer coordination among collocated secondary devices. 
Various sensing techniques via energy detection, preamble sensing or feature 
detection have been proposed [21][22][23]. To ensure timely and accurate 
sensing, quiet periods (QPs) usually need to be scheduled. During the QPs, a 
sensing device stops its transmission to detect signals from primary devices 
using appropriate sensing techniques [24][25]. The length of a QP is an 
important operating parameter in spectrum sensing. On the one hand, it should be 
as short as possible to minimize the interruption. On the other hand, it should be 
long enough for sensing devices to accurately detect primary devices.   
 
Figure 1. DSA TV-band systems 
Detecting primary devices using QPs can only be effective if the QPs of 
collocated secondary devices are aligned. Otherwise, the sensing device in its QP 
may receive a mixed signal from both primary devices and collocated secondary 
devices (not in their QPs), and may be unable to detect primary devices 
accurately. QP alignment is usually achieved through explicit signaling among 
collocated secondary devices. Take IEEE 802.22 standard as an example. The 
standard is developed to support fixed, point-to-multipoint broadband access 
within a range of 30 km in the VHF/UHF bands. The IEEE 802.22 TV band 
devices (TVBDs) have some legacy mechanisms to schedule QPs, even though 
they are not required to perform spectrum sensing. The base station of an IEEE 
802.22WRAN can schedule two types of QPs called intra-frame and inter-frame 
7 
 
the next channel. Consider a wireless network with k devices and N channels and 
each channel is labeled as 0, 1, 2,⋯ , N − 1, respectively. The channel hopping 
is controlled by so-called hopping sequences. Let 𝑆𝑖 = {𝑠𝑖,1, 𝑠𝑖,2, … , 𝑠𝑖,𝐿𝑖} be the 
sequence used by device i where 𝑠𝑖,𝑗 ∈ {0,1,2, … ,𝑁 − 1} and 𝐿𝑖 is the length 
of 𝑆𝑖. In general, a sequence-based scheme requires a device to visit channel 
𝑠𝑖,(�𝑡−𝑡0,𝑖� 𝑚𝑜𝑑 𝐿𝑖) in time slot t. Here 𝑡0,𝑖 denotes the time slot when device i 
starts its channel hopping (e.g., after being powered up for the first time). Take 
𝑆𝑖 = {1,0,3,2} and 𝑡0,𝑖 = 5 for device i in a network with 4 channels as an 
example. Device i starts visiting channel 1 at slot 5, and then channels 0, 3, and 2 
in the following three slots, respectively. After that, the device returns to channel 
1 and starts over again. In a sequence-based multi-channel network, devices i and 
j are said to “rendezvous” (i.e., a meet-up) whenever 
𝑠𝑖,(�𝑡−𝑡0,𝑖� 𝑚𝑜𝑑 𝐿𝑖 ) = 𝑠𝑗,(�𝑡−𝑡0,𝑗� 𝑚𝑜𝑑 𝐿𝑗 ).    (1) 
Although Eq. (1) implies that the slot boundaries of different devices are 
aligned, we will show later that such requirement is generally not needed in most 
of the existing sequence-based schemes. 
Depending on how hopping sequences are constructed, the existing 
sequence-based scheme can be further categorized as random-based, 
modulo-based, or quorum-based. In what follows, we give an overview of some 
representative schemes in each of these categories. Both qualitative and 
quantitative evaluation of these schemes will then be provided. 
(a) Random-based hopping sequences 
As the name suggests, the hopping sequences in this category are 
constructed in a random manner. The main advantage of a random-based scheme 
is that the sequences can be constructed easily. Take SeqR [26] as an example. A 
sequence is constructed based on a random permutation of integers 0 to N-1. For 
example, the permutation could be P = [1,0,2]  for the case of N=3. The 
hopping sequence with a length of N*(N+1) is then constructed based on 
permutation P as  S = [𝑝1, P,𝑝2, P, … ,𝑝𝑁 , P],   (2) 
where 𝑝𝑖 is the 𝑖𝑡ℎ element in P. Use N=3 and P=[1,0,2] as an example again. 
The sequence will be S = [1,1,0,2,0,1,0,2,2,1,0,2].   (3) 
 p p p 
9 
 
table contains the ranking of N channels, which is determined based on the 
activity of incumbent devices. The channel with the lowest incumbent activity is 
ranked as 1 while the one with the highest incumbent activities is ranked as N. 
Let the label of the channel with a rank r be 𝐿𝑖,𝑟 ∈ {0,1, … ,𝑁 − 1} for device i. 
The number of integer 𝐿𝑖,𝑟 in 𝑆𝑖 is given by 
𝑛𝐿𝑖,𝑟 = (−𝑟 + 𝑁 + 1)2,   (5) 
and 𝑆𝑖 with a length of 𝐿𝑖 = 𝑁(𝑁+1)(2𝑁+1)6  is generated in a random manner 
accordingly. Take N = 3 as an example and assume that channels 0, 1, and 2 are 
ranked by device i as 1, 3, and 2, respectively. A feasible sequence for device i is 
𝑆𝑖 = [0,1,0,0,2,2,0,0,2,0,0,0,2,0]. The key design rationale of AMRCC is that 
devices should spend more time on the channels that have less incumbent 
activities so that spectral resources could be better utilized. Since the incumbent 
activities vary with time, AMRCC suggested that the   composition of device 
i’s sequence should also adapt accordingly. Unfortunately, AMRCC does not 
guarantee timely rendezvous, especially when devices do not have unanimous 
channel ranking. 
(b) Modulo-based hopping sequences 
The most representative modulo-based scheme is the so called SSCH [30] 
for conventional multi-channel networks. In SSCH, a device, say device i, 
chooses an arbitrary 𝑠𝑖,1 from integers 0 to N-1, where N is the total number of 
channels and must be a prime number. Sequence 𝑆𝑖 is then constructed by the 
following modulo operation.  
𝑠𝑖,𝑘 = �𝑠𝑖,𝑘−1 + 𝑑𝑖� 𝑚𝑜𝑑 𝑁,   (6) 
where 𝑑𝑖 could be any integers between 1 and N-1. Take N = 3 as an example. 
If device chooses 𝑠𝑖,1 = 1  and𝑑𝑖 = 2 , the resulting sequence 𝑆𝑖 = [1,0,2] . 
SSCH guarantees any two devices i and j to rendezvous once on a signal channel 
in every N slots as long as  𝑑𝑖 ≠ 𝑑𝑗 . The channel where devices i and j 
rendezvous depends on not only 𝑠𝑖,1, 𝑠𝑗,1, 𝑑𝑖 and 𝑑𝑗, but also the values of 𝑡0,𝑖 
and 𝑡0,𝑗. Therefore, the rendezvous cannot be determined one-sidedly by any 
single device. To resolve the problem that two devices may not be able to 
rendezvous in the case of 𝑑𝑖 = 𝑑𝑗 , one additional element 𝑠𝑖,𝑁+1 = 𝑑𝑖, referred to 
as the parity slot in [30], is added to 𝑆𝑖. The resulting sequence in the example 
above become 𝑆𝑖 = [1,0,2,2]  with a length  𝐿𝑖 = 𝑁 + 1 . Such sequences 
guarantee devices i and j using the same 𝑑𝑖  to rendezvous on channel 𝑑𝑖 
11 
 
appearing in the first 3N slots in 𝑆𝑖 with parameters 𝑠𝑖,1 and 𝑑𝑖. 𝑑𝑖 is replaced 
by ((𝑑𝑖+1) mod N) every �𝑆𝐽𝑆(𝑠𝑖,1,𝑑𝑖)� slots and 𝑠𝑖,1 is replaced by ((𝑠𝑖,1+1) 
mod N) every 2N ∗ �𝑆𝐽𝑆(𝑠𝑖,1,𝑑𝑖)� slots. JS-2 guarantees any two devices to 
rendezvous on all N channels— instead of just 1 in JS— in 6𝑁2 ∗ (𝑁 − 1) slots.  
In [33], two ring-walk schemes are proposed for DSA networks and are 
similar to SSCH. The basic idea of “ring-walk” is representing each channel as a 
vertex of a ring and each device “walks” on the ring by visiting vertices with a 
unique velocity in clockwise direction. If we regard the velocity in ring-walk 
schemes as the seed in SSCH, then the ring-walk schemes can be seen as the 
SSCH-based protocol. Consider a network with the number of devices equaling 
to k. In these two schemes, device i has unique ID vi, where vi  ∈  [1,2,··· , k]. 
Note that for any two users, vi ≠ vj. In ring-walk scheme 1, device i starts at 
initial vertex si,1 and stays at each vertex for vi time slots before it advances 
one vertex. Take N = 3, si,1  =  0 and vi  =  2 for example. The resulting 
hopping sequence should be Si  =  [0,0,1,1,2,2]. Any two users i and j, with ID vi  and vj , respectively, are guaranteed to rendezvous on two channels in lcm(vi, vj) ∗ N slots without sequence-level synchronization, where lcm(a, b) 
denotes the least common multiple of a and b. In ring-walk scheme 2, device i, 
which starts at initial vertex si,1, keeps moving forward one vertex each time slot 
until it advances vi − 1 vertices. Then it stops at vertex (si,1 + vi  − 1) mod N 
and stays for k − vi time slots. The next vi time slots, device i starts at vertex (si,1  + vi) mod N and keeps the same moving pattern as mentioned in the first 
vi time slots and then also stays for the next (k−vi) time slots. The same 
procedure repeats and Si can be constructed. Take N =  3, si,1  =  0, vi  =  2 
and k =  5 for example. We have 
 
Any two users i and j, with ID vi and vj, respectively, are guaranteed to 
rendezvous on one channel in (N − 1) ∗ k time slots without sequence-level 
synchronization. 
A modulo-based scheme, called ASYNC-ETCH [34], was proposed for 
DSA networks. In ASYNC-ETCH, a total of N-1 sequences must be constructed 
first and a device selects any of the constructed sequences as its hopping 
sequence. Let 𝐴𝑘 be the k
th constructed sequence and 𝐴𝑘 is constructed based 
on 𝑃𝑘 ∙ 𝑃𝑘 = [𝑝𝑘,1,𝑝𝑘,2, … ,𝑝𝑘,𝑁] , where 𝑝𝑘,1 = 0  and 𝑝𝑘,𝑖 = �𝑝𝑘,1 + 𝑘 ∙
Si = 
13 
 
said to be a relaxed (n,κ)-difference set of G. 
Definition 4: Given difference set D = [d1, d2, … , dκ] under G, the cyclic 
quorum system which is defined by D  is Q = {H0, H1, … , Hn−1} , where Hi = [𝑑1 + 𝑖,𝑑2 + 𝑖, … ,𝑑𝑘 + 𝑖](𝑚𝑜𝑑 𝑛), i=0,…, n-1. Since rotate(Hj, 𝑖) is also 
a quorum in Q for any i, then by the intersection property, the cyclic quorum 
system satisfies the rotation closure property. Take G=[1,2,3,4,5,6,7] as an 
example. D1 = [1,2,4]  is a (7,3,1) quorum or difference set under G and D2 = [1,2,3,4] is a relaxed (6,4)-difference set of G. 
Many sequence-based schemes have applied the theory of quorum or 
difference set theories to construct sequences for multi-channel wireless 
networks. In AQCH [36], mutually exclusive difference set D1 and relaxed 
difference set D2 of G =  [1, 2, 3,⋯ , n] are used to construct the sequence S. D1  and D2  represent the positions of two preselected channels c1  and c2 
(∈ {0,1,2, … , N − 1} in S). The remaining positions in S (i.e., G − D1 − 𝐷2) are 
then filled evenly with integers in [[0,1,2, … , N − 1] − c1, c2]. Take N=3 as an 
example. Two feasible difference sets are D1 = [1,2,4,10]  and D2 =[3,5,6,7,8,9,11] for G = [1,2,3, … ,13]. The resulting sequence then becomes S =  [0,0,1,0,1,1,1,1,1,0,1,2,2]. In AQCH, any two devices are guaranteed to 
rendezvous on channels c1  and c2  in |S|  slots, without sequence-level 
synchronization as in SSCH. 
Another quorum-based scheme called DSMMAC [37] was also proposed 
for conventional multi-channel network. DSMMAC is very similar to AQCH, 
except that N mutually exclusive difference sets are used to construct the 
hopping sequence. Each difference set represents the positions of a unique 
integer (∈  [0,1,2,··· , N − 1]) in S. For a multi-channel network with N = 3, the 
required difference sets could be D1  =  [1,2,3,4,8], D2  =  [5,6,9,11,12], and D3  =  [7,10,13,14,15] for G =  [1,2,3,···  ,15]. The resulting sequence then 
becomes S =  [0,0,0,0,1,1,2,0,1,2,1,1,2,2,2].      (12) 
Based on the construction procedure, DSMMAC requires κ ∗ (κ − 1)  ≥  |S| 
and N ∗ κ ≤  |S|. That is, a sequence with a size of at least N ∗ (N + 1) will 
be needed in DSMMAC. Although DSMMAC guarantees any two devices to 
rendezvous on all N channels — instead of just 2 in AQCH — in |S| slots, 
finding N mutually exclusive difference sets could be a formidable task [35]. 
An interesting quorum-based scheme that adopts the design of DSMMAC 
15 
 
respectively, while integer 1 may select the second, first, and second position in 
the first, second and third column, respectively, for N = 3. The rest positions in 
the array are filled in with integer 2. Once the array is constructed, the receiver 
sequence is constructed in the same way as the sender sequence. Let 
 
be the arrays used by sender i and receiver j for N = 3. The resulting sequences Si and Sj will be [1,0,2,1,0,2,1,0,2] and [0,1,2,1,0,1,2,2,0], respectively. This 
design also guarantees that a sender and a receiver rendezvous on all channels.  
In torus-QS [40], the sequence design based on the concept of the torus 
quorum system was proposed for DSA networks. A torus quorum under an N by 
M torus grid A is composed of N + 𝑀
2
 elements. Note that A(u, v) = M ∗ (u − 1) + v, where u and v are the row and column indexes of A, respectively, with u ∈  [1,2,··· , N]  and v ∈  [1,2,··· , M] . The torus quorum is formed by N 
elements in a randomly selected column v of A, plus 𝑀
2
 elements, where each of 
which falls in any position of column [(v + i − 1) mod M + 1]  with i =1 … �𝑀
2
�. A backward-torus quorum which is defined in [40] is almost the same as 
the torus quorum. A backward-torus quorum is also formed by N elements in a 
randomly selected column v, plus �𝑀
2
� elements, where each of which falls in 
any position of column [(v −  i −  1) mod M + 1] with i = 1 … �𝑀
2
�. S, which 
is determined based on torus quorums, is constructed as follows. Torus quorum D1 and backward-torus quorum D2, both under N by M torus grid A, are 
mutually exclusive, where M should be equal to (N + �𝑀
2
�) . D1  and D2 
represent the positions of two preselected channels, c1 and c2 (∈  {0,1,2,··· , N −1})in S, respectively. The remaining positions in S (the elements in A excluding D1 and D2), are then filled evenly with integers in [[0,1,2, ··· ,N−1]−c1, c2]. 
Take N = 3 for example. Let 
17 
 
DSMMAC[37] Multiple No No 
BIBD[38] Multiple No No 
ACH[39] Multiple Yes No 
Torus-QS[40] Multiple No No Table I Comparison of different sequence designs 
Based on the above argument and Table I, only DSMMAC, BIBD, McMAC, 
ACH, DH-MAC and JS-2 are potential candidates for DSA networks. However, 
McMAC requires a device to obtain the seeds of other devices from a 
pre-defined common channel. The availability of the common channel will be an 
issue in a DSA network. In ACH, each device must determine its role (as a 
sender or receiver) before constructing the hopping sequence. However, a device 
usually is both a sender and a receiver at the same time. For example, device A 
may have data for device B and C while device D has data for device A. In this 
case, devices A and D may not be able to meet each other since they both use 
sender sequences. In other words, devices must negotiate their roles with each 
other before they are guaranteed to meet with each other. Obviously, negotiation 
is impossible for devices that have not met yet. Finally, DH-MAC requires 
sequence-level synchronization as we explained earlier, which again is 
impossible for devices that have not met yet.  
We argue that DSMMAC, BIBD and JS-2 work best for DSA networks 
given that devices are guaranteed to rendezvous on all channels, without 
knowing any parameter of peer devices or requiring sequence-level 
synchronization. Two devices can always rendezvous on some channels as long 
as there exist some commonly available channels between them (even they are 
not aware of which channels). However, such guarantee is achieved with some 
prices. Firstly, the sequences in these schemes are more difficult to be 
constructed and the sequence length |S| is usually very large. Secondly and 
more importantly, all of these schemes use a uniform design in the sense that a 
device visits all channels, available or not, with an equal probability. In fact, all 
sequence-based schemes except AMRCC adopt such a uniform design. Although 
uniform design is a nature and reasonable choice for conventional multi-channel 
networks, it leads to inefficient spectrum utilization in a DSA network. The 
non-uniform design of AMRCC would be a better choice for DSA networks, if 
multi-channel rendezvous can also be guaranteed for individual devices.  
In section Ⅳ, we will propose our sequence-based solutions which cannot 
only guarantee multi-channel rendezvous for individual devices but also can 
achieve high system utilization by adopting the non-uniform design. The 
19 
 
guarantee any two devices to rendezvous on all channels but also achieve higher 
system utilization than those existing protocols which adopting uniform designs. 
In these two schemes, each device only has to equip a single transceiver. 
(a)  Proposed scheme 1: A novel design using multiple non-uniform hopping 
sequences [46]:  
In this algorithm, a total of N hopping sequences are constructed for a DSA 
network with N channels. Denote 𝑆𝑘 as sequence k and 𝐿𝑘 as the length of 𝑆𝑘, 
k=0 to N-1. The construction of 𝑆𝑘 follows the below procedure. 
1) 𝑆𝑘 is composed of all integers between 0 and N-1 where each integer 
corresponds to a channel. 
2) 𝐿𝑘 must be a prime number or the power of a prime number. 𝐿𝑘 and 𝐿𝑗 
also must be co-prime for any k ≠ j. 
3) There must be at least 𝐵𝑘  integer k’s in 𝑆𝑘 . The values of 𝐵𝑘  are 
determined as follows.  
a) Denote the positions of integer k in 𝑆𝑘 as 𝑃𝑖,𝑘, i = 1 to 𝐵𝑘 and 1 ≤ 𝑃𝑖,𝑘 ≤ 𝐿𝑘. The set composed of (𝑃𝑖,𝑘 − 𝑃𝑗,𝑘) 𝑚𝑜𝑑𝑢𝑙𝑜 𝐿𝑘 for all i 
≠ j must be identical to the set {1,2,3, … , 𝐿𝑘 − 1}. 
b) According to (3)-a, 𝐵𝑘 ∗  𝐵𝑘−1 ≥ 𝐿𝑘 − 1. 
c) According to (1) and (3)-a, we require  
𝐵𝑘 + 𝑁 − 1 ≤ 𝐿𝑘 ≤ 𝐵𝑘 ∗ 𝐵𝑘−1 + 1. 
In the proposed scheme, the minimum 𝐵𝑘 and 𝐿𝑘 that satisfy all the 
above requirements for k= 0 to N-1 are used. A feasible selection of 𝐿𝑘’s 
and 𝐵𝑘’s for the case of N = 16 are given in Table II. 
 
Table II Sequence length 𝐿𝑘 for N=16 
4) Once 𝐿𝑘 and 𝐵𝑘 are determined in the previous steps, the positions of 
integer k are determined according to (3)-a. All other integers j ( j = 0 to 
N-1, j ≠ k) are assigned to the remaining positions of 𝑆𝑘. Each integer 
21 
 
 
Figure 2. Sequence selection and channel switching  
A DSA device can only select 𝑆𝑘 if channel k is locally considered as 
available by the device. If a device using 𝑆𝑘 detects that channel k becomes 
unavailable, it randomly selects a new sequence 𝑆𝑗  as long as channel j is 
available to the device. If a channel other than channel k is occupied during a 
visit, the device simply waits until the end of the current slot. In some 
asymmetric channel availability cases, for example, channel 0 and 1 are 
considered always available to device A and channel 0 and 3 are considered 
always available to device B---this case happens when the two devices are far 
from some specific primary users---the channel selection rule should be extended. 
According to our channel selection rules, device A may choose sequence 1 and 
device B may choose sequence 2. However, the ratio of commonly available 
channel 0 for device A and B in sequence 1 and sequence 2 is less than 1/N, so 
the time to rendezvous will even larger than using uniform design. Therefore, we 
extend the rule as follows. Although device A and B choose sequence 1 and 2, 
respectively, they can change their sequence to sequence 0 after they meet each 
other. Then the time to rendezvous will be the same in the symmetric channel 
availability case. 
To evaluate the efficiency of neighbor discovery, a performance metric — 
Encounter Time T(k, l) — is defined. T(k, l) is the time interval between two 
consecutive encounters of two devices A and B using sequences Sk and Sl . An 
encounter occurs when A and B rendezvous on a commonly available channel. 
Obviously, the smaller T(k, l), the higher the efficiency. T(k, l) in a DSA 
network depends on (1) the timing offset, and (2) the number of channels 
23 
 
equal probability of 1
𝑁
. Although such a simple scheme cannot guarantee 
bounded discovery time, devices do have chances to discover each other on their 
commonly available channels. E[T] under the random sequence scheme can be 
easily derived as 
E[T] = 𝑁2
𝑛𝑎
,       (22) 
where na is the number of commonly available channels between two DSA 
devices. 
 
Figure 3 Comparison of E[T]:N=8 
Figure 3 shows the comparison of E[T] among different schemes. E[T] in 
the proposed scheme which using multiple non-uniform hopping sequences, is 
the average of E[T(k, l)]’s over all possible combinations of sequence selection. 
The case of N = 8 channels is considered. The main reason we select N = 8 is 
that the sequence for N > 8 is not provided by DSMMAC [37].The results in 
Figure 3 shows that E[T] is almost the same in all schemes when all 8 channels 
are available. The result implies that sequenced-based schemes work equally 
well in a conventional multi-channel network. When the number of available 
channels decreases, it can be observed that E[T] starts to increase as expected. 
E[T]’s under DSMMAC,BIBD, JS-2 and the random sequence scheme still 
remain close to each other. The observation shows that even BIBD, DSMMAC 
and JS-2 guarantee encounters in bounded time, the frequency of encounters is 
the same as the random sequence scheme as they all use the uniform design; that 
is, each DSA device visits every channel with the same probability. E[T] under 
25 
 
the sequence is.  
𝑛𝑑 = 𝑙𝑀−𝑙𝑚𝐿𝑖 ,  (23) 
where 𝑙𝑀, 𝑙𝑚𝜖[0, 𝐿𝑖] . 𝑙𝑀  is the maximum number of the channel in the 
sequence under the circumstance that the channel is the only one available 
channel in the system. 𝑙𝑚  is the minimum number of the channel in the 
sequence under the circumstance that the channel is the only one unavailable 
channel in the system. We define that an extreme non-uniform case, which the 
sequence only contains the available channel, 𝑛𝑑 = 1. In this case, 𝑙𝑀 = 𝐿𝑖 and 
𝑙𝑚 = 0. 𝑙𝑀 = 𝐿𝑖 indicates that when there are only one channel available, the 
entire sequence will be filled with this available channel index. Therefore, the 
device following this sequence only accesses the available channel and does not 
access the unavailable channel. In contrast, 𝑛𝑑 = 0 denotes the uniform case 
with 𝑙𝑀 = 𝑙𝑚. It is intuitive that accessing only the available channels achieves 
the highest utilization as shown in Figure 5. Figure 5 shows that in an N=8, k=20 
system, the utilization of the extreme non-uniform sequence ( 𝑛𝑑 = 1 ) 
outperforms the uniform one. The channel availability ratio denotes the dynamic 
incumbents’ activity. For example, if channel availability=3/8, on average, the 
ratio of the channel available time period to the channel unavailable time period 
is equal to 3/8, but in any given time slot, the number of available channels and 
unavailable channels cannot be predicted. The uniform scheme is considered as 
the baseline and the extreme non-uniform scheme is considered as the upper 
bound of the utilization.   
 
Figure 5. The utilization versus channel availability of extreme non-uniform 
27 
 
evenly. In this case, 𝐿𝑖 = 7 ∗ 6 = 42, 𝑙𝑀 = 6 ∗ 4 + 3 ∗ 3 = 33 and 𝑙𝑚 = 3 ∗3 = 9, and then we can get 𝑛𝑑 = (33 − 9)/42 ≈ 0.57. The value 0.57 is 
between 0 (uniform) and 1 (extreme non-uniform), so the utilization of our 
proposed sequence is larger than the utilization of uniform design. The sequence 
we provide also guaranteed any two devices can rendezvous on all channels 
without sequence-level synchronization and prior negotiation.  
Note that from previous section, we know that finding out N mutually 
exclusive difference sets when N > 8 is difficult due to high computational 
complexity. Therefore we have to modify our algorithm when N > 8.  
When N > 8, the first step should be modified to finding out 8 mutually 
exclusive difference sets, 𝐷1, 𝐷2…𝐷8, with the same (L, n, λ). The second step, 
more blocks should be contained in a sequence so more than two mutually 
exclusive difference sets should be constructed. For example, one can choose 
three mutually exclusive difference sets 𝐵1 = {1,2,3,4,8}, 𝐵2 = {5,6,9,11,12} 
and 𝐵3 = {7,10,13,14,15}  to be the block indices. Each blocks contains 
𝐷1, 𝐷2…𝐷8. Blocks in 𝐵1 can be filled with 8 channels and blocks in 𝐵2 can 
be filled with at most 8 channels. The remaining blocks in 𝐵3 can then be filled 
with the current available channels. Then this sequence can be used in the system 
that N ≤ 16. 
If we want N ≥ 16, more blocks should be contained in the sequence. 
Therefore, more mutually exclusive difference sets (4, 5,…,etc.) should be 
constructed by the same rules. Actually, all 𝐵𝑖 can contain at most 8 channels. 
One should construct the sequence base on 𝑛𝑑. If larger 𝑛𝑑 is needed, then 
more blocks should be filled with the current available channels.  
We first analyze the performance of different sequence-based protocols in 
DSA in terms of maximum time-to-rendezvous (MTTR) and system utilization. 
When it comes to DSA, one should first consider the feasibility for devices to 
communicate without interfering primary users. Even if they meet each other on 
a channel, primary users may have already using it. Suppose two devices have 
only one common available channel, the MTTR is the upper bound of time for 
them to meet on every channel. Some researches focus on providing a finite 
MTTR and are dedicated to make it shorter. DSMMAC [37], using cyclic 
quorum system, has MTTR same as the cycle of those difference sets. JS-2 [32] 
has MTTR which is equals to 6NP(P − 1) slots. BIBD[38] has MTTR as 7log2N. Note that, the sequence designs without guarantee of rendezvous (e.g., 
AMRCC [29] and random hopping) and single rendezvous (e.g., SSCH [30] and 
29 
 
System utilization is the average ratio of number of channels used by 
secondary users to the number of all available channels and it is important to 
evaluate the performance of the protocols. Let In be the indicator function 
which equals 1 if there are two or more devices stay in channel n. If otherwise, In equals 0. M is the set of available channels (channels that are not occupied by 
primary users). Thus, system utilization is defined as 
Utilization = 1|𝑀|∑ 𝐸[𝐼𝑛]𝑛∈𝑀 .    (24) 
Note that k should be larger than 2N since it is meaningless to discuss utilization 
when the number of devices is small. Suppose we observe at a random time slot, 
we have no idea how long each device has been following their sequence. 
Therefore, we describe their actions by using the probability of one device 
accessing a channel according to its sequence. Denote pi(·) as the proportion of 
channel indexes in sequence used by device i to describe how often device i hops 
to a channel. Let ci(n) denote the slot count which has channel index n in 
sequence Si. If the sequence does not have a repeating cycle (typically generated 
by a pseudo-random function), then pi(·)  is actually the channel index 
generating probability of sequence. 
pi(n) = �𝑐𝑖(𝑛)𝐿 , 𝑖𝑓 𝑛 ∈ {0,1, … ,𝑁 − 1}0, 𝑜𝑡ℎ𝑒𝑟𝑤𝑖𝑠𝑒                          (25) 
Let A1, A2, . . . , Ai, . . . , A�k𝑙� denote different l-combination of set {1,2, ..., k}, 
that is, Ai is a set of l distinct elements chosen from set {1,2, ..., k}. And Ai is 
the complementary set of Ai in {1,2, ...,k}. Therefore, the probability for l 
devices to rendezvous on channel n is written as 
P(l, n) = ∑ (∏ 𝑝𝑗(𝑛)∏ (1 − 𝑝𝑗(𝑛))𝑗∈𝐴𝑖𝑗∈𝐴𝑖 )�𝑘𝑙�𝑖=1 .    (26) P(l, n) is the probability sum of �𝑘𝑙� different combinations with l out of k 
devices stay in channel n. The expectation of indicator function In can then be 
obtained as E[In] = ∑ 𝑃(𝑙,𝑛)𝑘𝑙=2 .      (27) 
System utilization of most of sequence-based channel hopping protocols 
discussed in previous sections can be evaluated by Eq. (24). The three protocols, 
DSMMAC, BIBD and JS-2, which adopt uniform designs as mentioned before, 
31 
 
 
Figure 10. The utilization of symmetric case and asymmetric case: N=8, k=20 
The above two schemes are designed for the device which is equipped with 
one transceiver. Devices with only one transceiver can reduce the cost of the 
hardware. If the cost of the hardware is not considered, devices with dual 
transceivers may use the frequency bands more efficiently. In what follows, we 
will propose a solution for devices with dual transceivers and this solution can 
also guarantee any two devices rendezvous on all channels. 
(c) Proposed scheme 3: A novel hopping sequence design based on SSCH using 
two transceivers 
The proposed scheme [47] adopts a simple sequence design, called SSCH 
[31], with the price of using one additional transceiver. Since our scheme is 
based on SSCH, we will first give a brief introduction to SSCH and point out its 
problem.  
In SSCH, each device chooses a pair of parameters (𝐶0 ,𝑑) to generate the 
SSCH sequence. 𝐶0 is an arbitrary integer chosen from [0, N‐1] while 𝑑 is 
another arbitrary integer chosen from [1, N‐1]. Here, N is a prime number and 
must be larger than the total number of channels in the network. Different 
devices may choose different (𝐶0 ,𝑑)  as no central controller or a priori 
knowledge is available. Let Ci represents the channel number that a device visit 
at the i‐th slot, we have 
𝐶𝑖+1  =  (Ci + d )mod N, i =  0, 1, 2, …. (29) 
That is, the current visiting channel is determined by the previous visiting 
channel number, via a simple modulo operation. The SSCH guarantees two 
33 
 
result, we can at least solve the problem of logical partitions without the 
requirement of synchronization between devices or using the parity slot. Figure 
13 illustrates an example of use our dual‐antenna design with N=3. In this 
example, Node A has (C0  = 1, d = 2) and (C’0  = 0, d’ = 1) and Node B has (C0 = 1, d = 2) and (C’0  = 2, d’ = 2). There is also a slot time offset between 
Node A and Node B. As shown in the figure, Node A and Node B meet in 
channel 1 using antenna A2 and antenna B1, respectively, every N=3 slots. These 
two nodes also meet in channel 0 using antenna A2 and antenna B2, respectively, 
every N=3 slots. 
 
Figure 13: SSCH with dual antenna: red circles represent frequency 
rendezvous 
Although SSCH with dual antenna guarantees the provisioning of frequency 
rendezvous, it can be found (at least from Figure 13) that the two devices cannot 
meet in all channels as desired. For example, Node A and Node B can only meet 
in channel 0 and channel 1. If both channels are unavailable (that is, only channel 
2 is available), these two devices still cannot meet each other even using two 
antennas. To remedy the problem we require each device to increment the 
parameter C0  and C’0  by 1every 2N slots. The new sequence with this 
additional requirement can be formulated as 
Ci = �C0 + i ∗ d + � 𝑖2𝑁��𝑚𝑜𝑑 𝑁, 𝑖 = 0,1,2, ….    (30) 
This new design guarantees two devices to meet in all N channels within 
less than or equal 2N2 slots. 
35 
 
The lines of random-type and the proposed protocol are almost overlapping 
in the same number of devices. The proposed sequence visits every channel in a 
certain period, so it has the same property as the uniform design as mentioned in 
previous two algorithms.  
Although the utilization of the propose scheme is the same as uniform 
designs, it provides a guarantee, which is needed in DSA networks, that any two 
devices can rendezvous on all channels whenever in symmetric model or 
asymmetric model. Besides, the sequence is very easy to construct since it is 
based on the SSCH protocol. The detailed simulation results are given in the 
thesis [47].  
The above three schemes are the solutions we proposed to address the 
neighbor discovery issue. The simulation results show that our solutions work 
well in DSA networks. Our novel non-uniform designs have the best 
performance among all existing sequence-based protocols. In what follows, we 
will also give a novel solution to address the spectrum sensing problem. 
(II) Spectrum sensing[48] 
In this project, we focus on two TVBSs. The first TVBS follows the IEEE 
802.22 WRAN standard and is denoted as TVBS-R. TVBS-R may be composed 
of multiple IEEE 802.22 WRANs. The second TVBS follows the ECMA-392 
WPAN standard and is denoted as TVBS-P. Within each TVBS, the TVBDs are 
assumed to have coordinated QPs by explicit signaling. Therefore, we only focus 
on QP alignment between collocated TVBS-R and TVBS-P. We also consider in 
our design a third TVBS that is composed of future WLANs for forward 
compatibility. This TVBS is denoted as TVBS-L. 
The proposed scheme: A novel QP scheduling across heterogeneous TVBSs 
using slot chasing 
To better explain the QP scheduling algorithm, time is divided into 
superslots. The superslots are only used by the proposed algorithm as timing 
reference and have no effect on the original timing structures of TVBS-R or 
TVBS-P. A superslot is further divided into N slots, each with a length of Ls 
seconds. It should be noted that the slots or superslots of different TVBSs are not 
necessarily synchronized given that these TVBSs are heterogeneous and cannot 
communicate with each other. Within every superslot, TVBS-X (X ∈  {R, P, L}) 
selects Nx slots as its quiet slots. Denote the position of TVBS-X’s quiet slot k, 1 ≤  k ≤  Nx, in superslot i as 𝑝𝑖,𝑥𝑘 . 𝑝𝑖,𝑥𝑘  is determined recursively by 
37 
 
position in a superslot, the number and the length of QPs in a superslot may vary. 
For example, the QP in superslot 1 has a length of only 2 slots. Furthermore, 
there might be more than two QPs in one superslot. For example, there are two 
QPs in superslot 4, one with a length of 2 slots and the other with a length of 1 
slot. Note that the pattern of a TVBS’s quiet slots repeats itself every N2 
superslots as suggested by Eq. (2). Therefore, the QPs of a TVBS also repeat 
themselves every N2 superslots. 
The proposed algorithm guarantees that the QPs of collocated TVBS-R, 
TVBS-P and TVBS-L overlap at least three times every N2 superslots. Such 
guarantee requires no coordination of quiet slots (e.g., negotiation of Nx ,𝑝𝑖,𝑥𝑘 , or sk) or synchronization among collocated heterogeneous TVBSs. The detailed 
analysis can be found in [48]. 
It is pointed out earlier that collocated secondary devices must align their 
QPs to achieve effective spectrum sensing. Without aligned QPs, sensing-only 
TVBSs may not be able to provide required protection to primary devices, 
regardless of the underlying physical-layer sensing capabilities. Take energy 
detection as an example. Energy detection cannot differentiate primary and 
secondary signals. Therefore, a device using energy detection during the QP may 
mistakenly consider the signal received from a collocated non-sensing TVBD as 
an indication of the presence of TV signals. Although such false detection causes 
no harm to primary devices, it prevents a sensing-only TVBD from coexisting 
with non-sensing TVBDs on a usable TV channel. In fact, a sensing-only TVBD 
will be deprived of access to an idle channel by any co-channel non-sensing 
TVBD. Feature detection does not work better than energy detection from the 
viewpoint of sensing-only TVBDs. To demonstrate the problem, we 
implemented a Digital Video Broadcasting-Terrestrial (DVB-T) feature detection 
scheme using USRP. The details of the DVB-T feature detection will be given in 
the next sub-section. 
(III) Experimental testbed [48][49] 
To simulate our secondary searching solutions of DSA, we set up the 
developed test bed available to academic society and the industry. Our test bed 
demonstrates that real-time over-the-air spectrum sensing can be realized and 
accurately determines channel availability. With such capability of spectrum 
sensing, secondary users can discover each other on all available channels, 
thanks to our specially-designed hopping sequences. The experiments show that 
fast and seamless transmission can be achieved even under rapid change of radio 
39 
 
� 𝑋(𝑛) ∗ 𝑋∗(𝑛 + 𝑁𝐹𝐹𝑇)𝑖+𝑁𝑐𝑝−1
𝑛=𝑖
 
of a given DVB-T signal X(n), a peak appears every TFFT . Here, Ncp and NFFT are the sizes of cyclic prefix and Fast Fourier Transform (FFT) of an 
OFDM symbol. In our test bed, we have Ncp  =  1/4 ∙ NFFT   and TFFT  = 1.4921ms. By observing the peaks over a proper sensing window, one can 
determine the presence of DVB-T signal with a probability of more than 0.95. In 
our test bed, the sensing window is set as 6 ∗ TFFT or about 9 ms.  
(c) Beacon and Data Transmission 
After the end of the detection period with feature detection, a secondary 
user transmits a beacon after a random back-off time, if no primary user is found. 
The reason to wait for a random back-off time before transmitting a beacon is to 
avoid collision of beacons when multiple secondary users are on the same 
channel. The beacon contains two major fields. One is the remaining time in the 
current slot of the beacon transmitter, and the other is the sequence the 
transmitter adopts and the current position in that sequence. The first information 
allows a receiver to synchronize its slot boundary to that of the beacon 
transmitter (synchronization is optional) while the second information allows the 
receiver to follow the hopping sequence of the beacon transmitter. The process 
that a secondary receiver follows a secondary transmitter is referred to as the 
“follow mode” in our project. 
Once the beacon is transmitted, 
- If no beacon ACK is received after a specified time-out period, 
the secondary user waits for a random back off time and resends the 
beacon. This process repeats itself until the end of the slot; 
- If a beacon ACK is received before a specified time-out period, 
the secondary user may enter the data transmission period.  
Within the data transmission period, 
- If no data ACK is received after a specified time-out period, the 
same data packet is sent again; 
- If a data ACK is received with the same sequence number within 
a specified time-out period, the next data packet is sent with its data 
sequence number incremented by one; 
41 
 
(e) Testbed 
In our lab, a system with the sequence proposed above is proven that every 
device can discover any others in all cases in a bounded time. Two USRPs 
(Universal Software Radio Peripheral) are used as TVBDs, with one in the role 
of a transmitter and the other a receiver. Each USRP device is equipped with two 
antennas. One antenna supports only the receiving function and takes up a RX 
port; the other antenna supports the transmitting function and takes up a TX port. 
In our setting, the two antennas don’t operate simultaneously at any given time. 
In other words, the USRP is a half-duplex transceiver. 
 The software to control the USPRs is the open source GNU Radio. 
GNU Radio is a free software development toolkit that provides the signal 
processing runtime and processing blocks to implement software radios. GNU 
Radio uses Python as the upper layer for programmers to construct control flows. 
C++ serves as the direct interface between the computer and the USRPs. 
When transmitting any frame (including beacon, data, beacon ACK and data 
ACK), each USRP device uses Gaussian Minimum Shift Keying (GMSK) 
modulation. The sampling rates at a USRP transmitter and receiver are set as 128 
Mbps and 64 Mbps, respectively. The slot length of each secondary user is set as 
500 ms and the detection period in each slot is set as 10 ms. The time-out values 
of beacon and data transmission are set to 50 and 150 ms, respectively. Note that 
these values are determined mainly based on the hardware/software limitation of 
the USRP. We expect these values to be much smaller in the real deployment of 
DSA networks. 
 The USRP will follow the following steps when it begins to transmit: 
1. Since USB 2.0 supports up to 256Mbps (half duplex) and one complex 
sample is represented by 32bits (16-bit I and 16-bit Q), we can derive that the 
highest samples/s should not exceed 8MS/s (256Mbps/32=8MS/s). The 
maximum symbols/s can also be derived as 4M symbols/s because each 
symbol is sampled twice in USRP. The maximum data rate should be 4M 
bits/sec since GMSK carries only 1 bit per symbol.  
2. Since the DAC’s operate at 128MS/s and the highest samples/s is 8MS/s, 
the interpolation should be set not lower than 16 (128/8=16).If we set the 
interpolation lower than 16, USRP will still use the value of the minimum 
interpolation which is 16. 
3. USRP will use Interpolation setting to determine the data rate if the 
43 
 
 
Figure 18. The photo of the whole test bed 
In this project, we implement a multi-channel test bed for DSA networks. 
The test bed adopts a new sequence-based protocol that enables fast neighbor 
discovery and fast transmission across multiple channels. The test bed 
successfully demonstrates the feasibility of our solution and its performance in a 
realistic multi-channel DSA network. 
(五) 結果與討論 
In this project, two novel neighbor discovery schemes using non-uniform 
hopping sequences are proposed. The schemes not only guarantees two 
secondary devices to encounter on their commonly available channels in 
bounded time, but also expedites data transmission in a highly-volatile spectral 
environment. We have demonstrated via mathematical analysis and experiment 
results that the proposed schemes outperforms the existing sequenced-based 
schemes and are two feasible solutions for DSA networks. A novel neighbor 
discovery scheme based on SSCH with each device equipped with two 
transceivers is also proposed. Although this sequence design has the utilization 
the same as the uniform design, it has the advantage that the sequence is very 
easy to construct. Besides, it guarantees that any two devices rendezvous on all 
channels which is required in DSA networks.   
For spectrum sensing issues, we identify and demonstrate sensing problems 
in heterogeneous DSA networks where sensing and non-sensing secondary 
systems are collocated. A new quiet period (QP) scheduling algorithm is 
proposed to address these problems. The algorithm requires non-sensing devices 
to provide a minimum amount of QPs to assist sensing devices in spectrum 
sensing. With the help of mathematical analysis and a USRP-based test bed, we 
45 
 
Receiver-Based Channel Selection for MultihopWireless Networks,” in 
Proceedings of the Tenth International Conference on Computer 
Communications and Networks, pp. 432 - 439, Oct. 2001 
[7] Chih-Yung Chang, et al., “MCDA: An Efficient Multi-Channel MAC 
Protocol for 802.11 Wireless LAN with Directional Antenna,” in Proceedings of 
the International Conference on Advanced Information Networking and 
Applications, pp. 64 - 67, Mar. 2005 
[8] Jenhui Chen, et al., “A New Multichannel Access Protocol for IEEE 802.11 
Ad HocWireless LANs,” in Proceedings of the IEEE Personal, Indoor and 
Mobile Radio Communications, pp. 2291 - 2296, Sep. 2003 
[9] Christian Doerr, et al., ‘Dynamic Control Channel Management in Presence 
of Spectrum Heterogeneity,” in Proceedings of the IEEE Military 
Communications Conference, pp. 1 - 8, Nov. 2008 
[10] Loukas Lazos, et al., “Mitigating Control-Channel Jamming Attacks in 
Multi-Channel Ad Hoc Networks,” in Proceedings of the Second ACM 
Conference on Wireless Network Security, pp. 169 - 180, Mar. 2009 
[11] Christian Doerr, et al., “Dynamic Control Channel Assignment in Cognitive 
Radio Networks Using Swarm Intelligence,” in Proceedings of the IEEE Global 
Telecommunications Conference, pp. 1 - 6, Dec. 2008 
[12] Liangping Ma, et al., “Single-Radio Adaptive Channel Algorithm for 
Spectrum Agile Wireless Ad Hoc Networks,” in Proceedings of the IEEE 
International Symposium on New Frontiers in Dynamic Spectrum Access 
Networks, pp. 547 - 558, Apr. 2007 
[13] Jun Zhao, et al., “Distributed Coordination in Dynamic Spectrum Allocation 
Networks,” in Proceedings of the First IEEE International Symposium on New 
Frontiers in Dynamic Spectrum Access Networks, pp. 259 - 268, Nov. 2005 
[14] Carlos Cordeiro and Kiran Challapali, “C-MAC: A Cognitive MAC 
Protocol for Multi-Channel Wireless Networks,” in Proceedings of the IEEE 
International Symposium on New Frontiers in Dynamic Spectrum Access 
Networks, pp. 147 - 157, Apr. 2007 
    [15] Juncheng Jia, et al., “HC-MAC: A Hardware-Constrained Cognitive MAC 
for Efficient Spectrum Management,” in Proceedings of the IEEE Journal on 
Selected Areas in Communications, vol. 26, no. 1, pp. 106 - 117, Jan. 2008 
47 
 
Frontiers in Dynamic Spectrum Access Networks, pp. 1 - 7, Oct. 2008 
[27] D. Yang, et al., “Deterministic rendezvous scheme in multichannel access 
networks,” in Proceedings of Electronics Letter, vol. 46, no.20, pp. 1402 – 1404, 
Sep. 2010 
[28] Hoi-Sheung Wilson So, et al., “McMAC: A Parallel Rendezvous 
Multi-Channel MAC Protocol,” in Proceedings of the IEEE Wireless 
Communications and Networking Conference, pp. 334 - 339, Mar. 2007 
[29] Claudia Cormio and Kaushik. R. Chowdhury, “An Adaptive Multiple 
Rendezvous Control Channel for Cognitive Radio Wireless Ad Hoc Networks,” 
in Proceedings of the 2010 8th IEEE International Conference on Pervasive 
Computing and Communications Workshops, pp. 346 - 351, May. 2010 
[30] Paramvir Bahl, et al., “SSCH: Slotted Seeded Channel Hopping for 
Capacity Improvement in IEEE 802.11 Ad-Hoc Wireless Networks,” in 
Proceedings of the 10th Annual International Conference on Mobile Computing 
and Networking, pp. 216 - 230, Sep. 2004 
[31] Chao-Fong Shih, et al., “DH-MAC: A Dynamic Channel Hopping MAC 
Protocol for Cognitive Radio Networks,” in Proceedings of the IEEE 
International Conference on Communications, pp. 1 - 5, May. 2010 
[32] Zhiyong Lin, et al., “Jump-Stay Based Channel-hopping Algorithm with 
Guaranteed Rendezvous for Cognitive Radio Networks,” in Proceedings of the 
IEEE INFOCOM, pp. 2444 - 2452, May. 2011 
[33] Hai Liu, et al., “Ring-Walk Based Channel-Hopping Algorithms with 
Guaranteed Rendezvous for Cognitive Radio Networks,” in Proceedings of the 
Green Computing and Communications (Green-Com), IEEE/ACM Int’l 
Conference on and Int’l Conference on Cyber, Physical and Social Computing, 
pp. 755 - 760, Dec. 2010 
[34] Yifan Zhang, et al., “ETCH: Efficient Channel Hopping for Communication 
Rendezvous in Dynamic Spectrum Access Networks,” in Proceedings of the 
IEEE INFOCOM, pp. 2471 - 2479, Apr. 2011 
[35] Wai-Shing Luk and Tien-Tsin Wong, “Two New Quorum Based Algorithms 
for Distributed Mutual Exclusion,” in Proceedings of the 17th International 
Conference on Distributed Computing Systems, pp.100 - 106, May. 1997 
[36] Kaigui Bian, et al., “A Quorum-based Framework for Establishing Control 
49 
 
Master Thesis 
[48] Y. S. Hsieh, et al., “Quiet Period (QP) Scheduling Across Heterogeneous 
Dynamic Spectrum Access (DSA)-Based Systems,” in Proceedings of the IEEE 
Transactions on Wireless Communications, pp. 2796 - 2805, Aug. 2012 
[49] Yi-Sheng Hsieh, Chia-Wei Lien and Chun-Ting Chou, “A Multi-Channel 
Testbed for Dynamic Spectrum Access (DSA) Networks,” in proceedings of the 
6th ACM workshop on Wireless Multimedia Networking and Computing, 2011 
[50] H. Kopka and P. W. Daly, “A Guide to LATEX”, 3rd ed. Harlow, England: 
Addison-Wesley, 1999. 
 
99年度專題研究計畫研究成果彙整表 
計畫主持人：周俊廷 計畫編號：99-2221-E-002-031-MY2 
計畫名稱：電視白通帶通訊之協同偵測與頻譜管理 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 2 100% 
Our second 
journal 
submission is 
under the final 
(3rd) round of 
review in IEEE 
Transactions on 
Mobile 
Computing. 
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 1 1 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 8 8 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 ■申請中 □無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
本研究計畫成功開發出以 USRP 為基礎的實驗平台, 此實驗平台可以展現即時偵測,避免
干擾電視傳輸以及支援多頻道次級使用者傳輸, 此平台可以做為 DSA 可行性評估之基礎 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
[學術成就]: A novel quiet period (QP) scheduling algorithm using slot chasing is 
proposed to support distributed cooperative sensing. The proposed QP scheduling 
algorithm guarantees the QP alignment among heterogeneous secondary users without 
explicit communication or synchronization among collocated heterogeneous 
secondary users. Our work has been published in IEEE Transactions on Wireless 
Communications. Our protocols/algorithms have been implemented in USRP test bed 
in order to evaluate their performance. Our test bed was also demonstrated in 2011 
6th ACM workshop on Wireless Multimedia Networking and Computing. 
[技術創新] We developed three sequenced-based schemes to solve the neighbor 
discovery issue in DSA networks. With the help of our specially-designed hopping 
sequences, any two devices are guaranteed to meet on all channels without 
synchronization or prior negotiation. This is very crucial for deployment of 
diverse DSA networks in TV bands. 
[社會影響] With the help of our solutions, DSA can be realized so that mobile users 
can get higher 
wireless transmission speed at a lower price. As a result, information sharing 
across different levels of the society can be expedited.  
