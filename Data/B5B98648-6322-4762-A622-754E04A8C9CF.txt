Contents
1 Physical model 1
1.1 Arch . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1
1.2 Testing rig . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1
1.3 Tests . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
2 Mathematical model 6
2.1 Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6
2.2 Geometry . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
2.3 Forces and displacements . . . . . . . . . . . . . . . . . . . . . 7
2.4 Blocks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8
2.5 Faces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
2.6 Face criteria . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
2.7 Structure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
2.8 Objective function . . . . . . . . . . . . . . . . . . . . . . . . 16
2.9 Optimisation . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
2.10 Structure deformation . . . . . . . . . . . . . . . . . . . . . . 18
2.11 Helper programs . . . . . . . . . . . . . . . . . . . . . . . . . 18
3 Implementation notes 23
3.1 Note on design choices . . . . . . . . . . . . . . . . . . . . . . 23
3.2 Programming environment . . . . . . . . . . . . . . . . . . . . 24
3.3 Libraries and Programs . . . . . . . . . . . . . . . . . . . . . . 25
4 Dissemination 26
5 Conclusions 28
1
Dr P. Smars, NYUST 2
In the framework of the present project, a complete re-design of the soft-
ware was accomplished. The new Calipous is a flexible command-driven
platform allowing the construction of 3D block structures of complex geome-
try and to study them using limit analysis. The software commands run in a
scripting environment facilitating the development of algorithms to deal with
specific problems (deformations, changes in the geometry, complex material
properties. . . ).
Physical testing were also conducted to lead software development.
Dr P. Smars, NYUST 2
Figure 1.1: Stainless steel voussoir used for the experiments.
line is used to control the direction of rotation of the motor and one line to
transmit a clock signal controlling the speed of rotation of the motors.
p a r a l l e l w r i t e :
s e t the data on the p a r a l l e l port
syntax : p a r a l l e l w r i t e [− i |−− i n i t ] [− f va l |−− f r equency va l ]
[−?|−h|−−help ] [ b i t s | seq ]
b i t s : data b i t s o f the p a r a l l e l port
examples : p a r a l l e l w r i t e 1101
s e t s data1 , data3 and data4 to ’1 ’
p a r a l l e l w r i t e 5 0 10
s e t s data1 (5 t imes ) and data3 (3 t imes )
high then low
keeps other b i t s unchanged
−− i n i t : put the INIT b i t ’ low ’ then ’ high ’
−−f r equency va l : s e t s the f requency o f the most f r equent
b i t change
de f au l t ( and max value ) : 500Hz
author : P. Smars , 2008−9
ve r s i on : 2009−05−12
An other program parallel_read can be used to read the data from the
parallel port. A Tcl/Tk script translate.tcl gives a higher level interface
(Fig.1.3).
The stepper motors are controlled by electronic drivers designed by the
author.
Dr P. Smars, NYUST 4
1.3 Tests
To accommodate the movements of its abutments, an arch must crack: hinges
form in between blocks, relative sliding or rotation of faces occur. Experi-
ments were done on the test arch to document those changes.
During the first experiments, the collapse mode of the arch often in-
volved the formation of “torsion” mechanisms in which voussoirs were ro-
tating around the normal to their faces of contact. This is the consequence
of the character of the joints: the blocks are very rigid (stainless steel) and
their edges are not perfectly straight (variations of the order of 1/10mm).
When a hinge was forming, the zone of contact between the block was not
always a segment but rather a point-like area, generally off-centred. To pass
by this point and be in equilibrium, a moment of torsion is necessary, the
small area of contact cannot resist to it and the arch collapses. This is of
course less a concern in a real structures: the size effect, the lesser resistance
of the masonry and the presence of relatively soft joints insure that the zone
of contact is large enough to offer a sufficient torsion resistance.
This is nevertheless an interesting observation which should be kept in
mind when dealing with smaller arches or dry-stone masonry.
It was then decided to improve the contact between the face, adding
a joint. First tests made with a thin layer of synthetic mortar were not
successful. It was too difficult to apply a regular layer of mortar and the
material was still too rigid. The solution used now is to cover the contact
face with a band of medical tape. It is thin and flexible enough. It also offers
some friction resistance.
Results are now much more reproducible even if there are still variations.
Small differences in the shape of the arch have a significant influence on its
stability. The verticality and the flatness of the arch in its plane are also
critical. These variations are difficult to control because, after the arch is
put in place, it always move slightly.
Again these observations are of importance to understand the limitations
of mathematical models (which are much more perfect). Elsewhere it was
shown how limit analysis can deal with such problem [7, 8]. The new math-
ematical model (chapter 2) will facilitate such an approach.
Most of the time, there is a reasonably good agreement with the mathe-
matical model. The maximum deformation predicted by the software is an
upper bound. The agreement is very good at the beginning of the defor-
mation and, as it proceeds, small imperfections are more and more likely to
prevent the arch reaching its upper-bound.
The most interesting result of the program of investigation is the observa-
tion of transitions between mechanisms (Fig.1.4). As the abutments moves,
Chapter 2
Mathematical model
2.1 Model
The structural model developed in the framework of the present project may
be very briefly described:
• Structures are made of blocks (3D polyhedra)
• Blocks are rigid and infinitely resistant
• Blocks haves faces (2D polygons)
• Faces are rigid but may have a limited resistance (various criteria)
• A face can be in contact with a face of another block or it can be free
• External forces can be applied on free faces
• Calculations are made using the equations of equilibrium and criteria
of resistance (not the deformability of the elements of the structure)
Elements are defined as C++ classes (implementation details are discussed in
Chapter 3). Those classes are not used to build a rigid program imposing
a particular way to approach a structural problem. The target is rather to
create an environment in the spirit of matlab (of more modest proportion of
course. . . ) useful for engineers or researchers working on masonry structures.
Elements can be built, modified and queried interactively.
A particular decision coherent with this design choice is that elements are
not directly stored in files. What is stored, is the list of commands used to
create elements, manipulate them and produce results.
6
Dr P. Smars, NYUST 8
t c l s h% se t f 5 [ f 1 − f 3 ]
t c l s h% se t f 6 [ f 1 + $f2 ]
t c l s h% a po in t p 10 0 0
t c l s h% se t m [ $ f6 torque p ]
As usual with Tcl, objects stored in a variable using set are accessed
adding a $ in front of the name. The function torque returns the torque of
a wrench around a given point. Other methods can be used to return the
force or its components (F,fx,fy,fz), the torque around the origin and its
components (M,mx,my,mz), to change the system of reference (origin), to
return a point where the torque is null or aligned with F (d0)
A class ve_twist was also developed to deal with displacements. Objects
of type ve_twist are associated to structural elements and can be used to
displace them (translation or rotation).
t c l s h% a po in t p 1 0 0
t c l s h% ve tw i s t t
t c l s h% t t r a n s l a t e 5 0 0
t c l s h% [ t ∗ p ] p r i n t
6 0 0
t c l s h% t r o t a t e [ new a point 5 0 0 ] [ new a point 0 1 0 ]
[ expr 3 . 14159265/2 . ]
t c l s h% [ t ∗ p ] p r i n t
5 0 −1
In this example, a point p and a twist t are created. The twist t is first
defined like a simple translation and the position of a new point resulting
from the application of the twist applied to p is calculated. A rotation of
pi
2
radian around an axis (0,1,0) passing by point (5 0 0) is then added
to the twist - now a translation followed by a rotation - and its effect on p
calculated.
The class can be used to represent various rotations as matrices of rotation
or quaternions, defined in other classes: ve_mat, ve_mat_sq, ve_quaternion.
2.4 Blocks
The basic structural units used for the model are blocks. Blocks have a given
geometry and are made of some material. At this stage, two classes are used
for that purpose: ve_block and ve_block_2d4.
The class ve_block is the parent class, defining a generic block and vari-
ous operations which can be applied to blocks. It is not intended to be used
Dr P. Smars, NYUST 10
system. In practice, it is more convenient to define the geometry of the block
in a local coordinate system, possibly rotate it, and then to move it in its
final position.
t c l s h% [ b pos ] r o t a t e [ new a point 0 . 5 0 0 ]
[ new a point 0 1 0 ] . 2
t c l s h% [ b pos ] t r a n s l a t e 5 0 3
In the previous example, b is a block and pos is a method which return
a ve_twist which can be used to manipulate the block. To define the block
in a local coordinate system has the extra advantage that a limited number
of block prototypes can be created, then copied and moved into position.
Blocks in an arch, a pillar or any other structures are often identical.
t c l s h% f o r { s e t i 0 } { $ i < 10 } { i n c r i } {
t c l s h% se t b2 [ new ve block 2d4 ]
t c l s h% $b2 deepcopy b
t c l s h% se t v [ expr $ i ∗ 0 . 5 ]
t c l s h% [ $b2 pos ] t r a n s l a t e 0 0 $v
t c l s h% }
This loop constructs a pillar of 10 blocks (Fig.2.2) (they should still be
associated with a structure but this is going to be described later).
2.5 Faces
Blocks have faces. When blocks are in contact, this is through those faces
(dry joints or mortar joint in the reality). Faces are created automatically
with the block to which they belong. Faces are important elements in the
modelling, because they are the elements on which resistance criteria are set.
ve_face is a generic class which does not define the geometry of the face
but offer a common interface for any specific type of face:
• a local system of reference (nx,ny,normal)
• geometrical data: the centre of gravity of the face c, the plane defined
by the face (plane)
• internal forces on the face (N,Qx,Qy,Mx,My,Mt)
• as it is customary for arches, internal forces can be decomposed in
another way: a point in the plane defined by the face can be calculated
(method x) such that the bending moments (Mx and My) at that point
are null. The distance between this point and the centre of the face
Dr P. Smars, NYUST 12
is defined as the eccentricity (exx, exy). The internal force is then
entirely defined by (N,Qx,Qy,exx,exy,Mt).
• check interaction type with linked face: how face are touching? [contacttype:
do not touch, touch by a point, a segment (part of the edge of one
of the face) or some surface]. Touching interface: (contactpoint,
contactsegment, contactface)
Internal forces are of course important to compute in order to decide
whether the wrench on a face is admissible. This will be discussed in the
next section.
ve_face_2d4 is the type of face associated with blocks of the type
ve_block_2d4.
t c l s h% se t f [ c f 2d4 [ b i 2 ] ]
t c l s h% puts ”N: [ $ f N] , Qx: [ $ f Qx] , Qy: [ $ f Qy] ”
In the previous example, the second face of block b is stored in variable
f (function cf_2d4 is used to ensure a proper cast of type ve_face_2d4).
Results on internal forces are then printed.
2.6 Face criteria
Face criteria are used to check whether wrenches acting on faces are admis-
sible or not. A class ve_fcriteria defines functions prototypes:
• ok returns 1 if the wrench is admissible and 0 if it is not admissible.
• penalty is a measure of how far the force on a face is from an admissible
condition. It is null if the force is admissible. penalty is used by the
optimisation routines (which will be discussed in section 2.9).
By default, the criterion on a face is always satisfied. The interest is of
course that more complex criteria can be applied. Those are defined in chil-
dren classes of ve_fcriteria. Two such possible criteria were implemented.
ve_fcriteria_in defines a criterion fulfilled if the wrench is passing in a
given part of the face (which could be the middle-third, the full face, or any
given proportion of the face). When a specific criteria is defined, it can be
applied to a face (as it is done in the following example).
t c l s h% v e f c r i t e r i a i n c r i t 1 .
t c l s h% fa c e c r i t e r i a c r i t
Dr P. Smars, NYUST 14
If a force enters block n by face 0 which is linked to block n − 1, It is not
possible to automatically decide on which of the other faces, the structure is
resting, it could be face 1, 2 or 3. In the following example, face 1 of block
2 of structure s is tagged as an exit face.
t c l s h% [ s b 2 ] e x i t 1
Calculations can be started in that way, but it is not always very con-
venient. In the case of an arch (our structure of main interest), it can be
too complicated to guess what should be the force applied on, say, the left
abutment to keep the structure stable. The basic function used to compute
the force in an arch is requiring from the user parameters easier to specify,
i.e. 3 points of passage for the resistance line.
The resistance line is a classical concept of the structural analysis of
arches. The six internal forces on a face are N , Qx, Qy, Mx, My and Mt.
Those values are expressed in a frame of reference whose origin is at the centre
of the face. The two bending moments Mx and My can also be produced by
N if it is applied, not at the centre of the face, but at some point p in the
plane of the face. This point p is at a distance exx = My
N
from the y local
axis and at distance exy = Mx
N
from the x local axis. The resistance line is
the line joining the points p of all the faces of the arch. exx and exy are the
eccentricities of the force on the face. The relative eccentricities exrx and
exry are relative value, varying between −1 when p is one edge of the face
to 1 when it reaches the other edge.
The function calculating the resistance line passing by three points is also
called compute. Each point of passage requires 4 parameters (total: 12): the
block number, the face number and the relative eccentricities (exrx, exry).
The first step is to calculate the force which should be applied on the first
point to pass by the other two points. In the first point, the unknown are
N , Qx, Qy and Mt (4 parameters to find). On the second and third point,
Mx and My must be null (4 conditions). When this force on the first point is
calculated, the two parameters version of compute (described above) is used
to calculate all the internal forces.
t c l s h% s compute 3 3 1 . 0 . 7 1 1 . 0 . 12 1 −1. 0 .
t c l s h% se t f [ c f 2d4 [ [ s b 0 ] i 3 ] ]
t c l s h% puts [ format ” erx :%5.2 f ery :%5.2 f ”
[ $ f exrx ] [ $ f exry ] ]
In this example, the resistance line has to pass by points (1,0) of face 3
of block 3, point (1,0) of face 1 of block 7 and point (-1,0) of face 1 of block
12 (Fig.2.3). Here, points 1 and 3 are on the intrados of the arch and point
2 on the extrados of the arch. The x relative eccentricity for blocks 3 and 12
Dr P. Smars, NYUST 16
in the structure (material, criteria). Other functions will be described
in further sections. As can be seen in the following example, materials are
created using objects of type ve_material.
t c l s h% se t mat [ new ve mater ia l ]
t c l s h% $mat r e f 1
t c l s h% $mat name ”marble ”
t c l s h% $mat dens i ty 2 . 6 e−9
t c l s h% s mate r i a l $mat
2.8 Objective function
In all generality, the equations of equilibrium of a structure can be written
as:
Ax = F (2.1)
Where F are the external (generalised) forces on the structure, x the in-
ternal (generalised) forces and A a matrix (or more generally an operator).
Most of the structures modelled here are statically indeterminate: the equa-
tions of equilibrium are not sufficient to determine uniquely the state of the
structure (internal stresses and reaction forces): x has a higher dimension
than F . Equation 2.1 can be rearranged.
[
A11 A12
] [ x1
x2
]
= F (2.2)
Where A11 is a full ranked square matrix. Equation 2.2 can be used to
compute x1 in function of x2 and F .
x1 = A
−1
11 (F −A12x2) (2.3)
In the case of a 2D arch, the internal forces x are Ni, Qi and Mi on
each joint i and the external forces are Fjx , Fjy and Mj on each block j.
the degree of indeterminacy is 3 and x2 has therefore dimension 3. It can
be chosen as the internal forces in the first joint [x2 = (N0, Q0,M0)
T ], the
eccentricity ex = M
N
in three faces [x2 = (exi, exj , exk)
T ] or other sets of three
parameters.
In the case of a 3D arch, x2 can again be chosen as the internal force
in the first face [x2 = (N0, Q0x , Q0y ,M0x ,M0y ,M0t)
T ]. Other choices of 6
parameters are of course possible.
Dr P. Smars, NYUST 18
The optimisation uses a penalty approach [12]. Violation of a condition in
a joint increase the value of a penalty which is added to the objective function.
A global multiplication factor for the penalty is progressively increased as the
calculation proceed. If the condition is satisfied everywhere, the value of the
penalty is null. The initial multiplication factor can be set manually in case
of problems of convergence. It can help to provide some estimate of the
solution before by putting the arch in a condition not too far away from the
expected solution.
2.10 Structure deformation
The linked faces of two blocks in a structure can be coincident, in plane
contact, in contact by one of their edge or just by one point. They could
even not touch or overlap (in some circumstances, it may be an acceptable
and useful hypothesis). Objects of type ve_structure have some functions
which facilitate the relative deformation of linked faces.
rotate can be used to open an hinge and slide to slide to move one face
in the plane of its linked face.
t c l s h% s r o t a t e 5 3 2 [ d2r 10 ]
t c l s h% s s l i d e 4 1 −5 5
The first command rotates of 10◦. the right part of the arch around edge
2 of face 3 of block 5. The next command slides the other part of the arch
(left part) along the plane of face 1 of block 4.
With those functions, it is not complicated to progressively deform an
arch and to check up to which point it remain stable (Fig.2.5). The influence
on values like the horizontal thrust or the potential energy can be recorded
along the transformation.
In Fig.2.6, the kinematic zone of stability G of an arch is computed (for a
mechanism having three hinges: 1, 2 and 3). The domain G is represented in
3D. The y dimension is used to represent the potential energy of the arch as it
moves (an important parameter to study the transition between mechanism).
The isolines are isopotential lines. The (x, z) dimensions is used to represent
the locus of positions accessible by the lower intrados edge of the last block.
A short script of 40 lines was necessary to generate the figure.
2.11 Helper programs
Repetitive actions can be recorded in Tcl files and reused for other analysis.
Various such scripts were prepared: to build semi-circular arches, to output
Dr P. Smars, NYUST 20
Figure 2.6: Kinematic zone of stability of an arch with th mechanism .
and format the internal forces in all the joints of an arch, to create the “line
of resistance” (the line joining all the points of intersection of the force acting
on a face with the plane of the face), to visualise the structure. . . Below, as
an example, we give the listing of the function to create semi-circular arches.
proc arch { r dr t n} {
#r : arch rad iu s
#dr : block he ight
#t : block th i ckne s s
#n : number o f b l o cks
g l oba l s
s e t ang le [ d2r 1 8 0 . ]
s e t da [ expr $angle / $n ]
#block width
s e t b [ expr 2∗ $r∗ s i n ( $da / 2 . ) ]
s e t b2 [ expr 2∗( $r+$dr )∗ s i n ( $da / 2 . ) ]
s e t db [ expr ( $b2−$b ) / 2 . ]
s e t h [ expr $dr∗ cos ( $da / 2 . ) ]
#c r ea t e a template block
a po in t a1 0 0 0
a po in t a2 $b 0 0
a po in t a3 [ expr $b+$db ] 0 $h
Dr P. Smars, NYUST 22
Figure 2.7: Use of pt2arch to generate a structural model from a “real” 3D
geometrical model of a vault. 9 parallel arches were generated
pt2arch :
conver t ’ x y z ’ f i l e to an input f i l e to bu i ld the arch
with ca l i p ou s t c l module
syntax : pt2arch [−n s t r i n g |−−name s t r i n g ]
[− s double |−− s i d e double ] [−?|−h|−−help ] t h i ckne s s depth
< p o i n t f i l e > a r c h f i l e
t h i ckne s s : in the plane o f the arch
depth : p e rp end i cu l a r l y to the plane o f the arch
−n name : g ive the name to the arch
( de f au l t : arch )
−s code : p o s i t i o n o f the po in t s on the arch
−1: in t rado s ( d e f au l t )
1 : ext rados
0 : c ent r e
The section is just a list of 3D points: it can be the result of direct
measurements or be the result of some pre-processing. Previously developed
programs can be used to facilitate this process. cut_tri creates sections in
a triangle file, cut_pt in a point cloud, bspline and interpolate can be
used to generate a good section. Example:
computer> c u t t r i −− l i n e 0 0 0 1 0 0 1 0 1 < model . t r i \
| bp l ine 200 | i n t e r p o l a t e 50 \
| pt2arch 0 .2 0 . 5 > commands . l i s t
The file containing the commands (commands.list in the previous exam-
ple) can then be imported in Tcl to generate the arch.
Dr P. Smars, NYUST 24
scripting languages such as Perl, Python, Tcl, Ruby and PHP.”
The Tcl functions offer a very flexible scripting environment. Tcl is used
in particular to:
• Work interactively or from “batch” files prepared in advance. Both ap-
proaches have their interest: interactive sessions facilitate testing and
batch sessions can be faster and more efficient. In practice, we usually
work with the two approaches at the same time. Two windows are
open, one is an interactive session and the other a batch file. When a
process (modelling, analysis or post-processing) is tested in the inter-
active session, the list of commands is copied to the batch file. The file
can then be used to restart the analysis or to create variations.
• Develop higher level functions to automatise repetitive tasks. Some
parts of the batch files of previous analysis can be transformed in func-
tions reusable in other circumstances.
• Glue the new mechanical functions with external programs necessary to
accomplish specific tasks (visualisation, conversions, file manipulation
. . . )
• Testing. Each of the C++ classes are tested using Tcl. There is a file
“test classname.tcl” for each class in which the functions are tested.
• Tk could be used to create Graphical User Interfaces (in the framework
of this project, that was only done for the physical model controlling
software)
3.2 Programming environment
The programs were mainly developed under FreeBSD (from 7.0 to 8.0, 32bit
and 64bit) and Linux (Debian Lenny). They were also tested on OpenBSD.
As far as possible, we tried to develop our program in a OS independent
way. Most C++ programs and libraries should also compile on MS Windows
(but we did not test it).
A CVS (concurrent version system) server was set-up to keep track of
the changes in the software. It also facilitated the testing of the software on
various computers.
The system of documentation of the classes (new classes and previous
libraries) was improved using Doxygen [18], a system which allows to extract
an automatic creation of documentation from the source code.
Chapter 4
Dissemination
• Documents presenting the project are put on the web site of the author.
http://smars.yuntech.edu.tw/projects/arches/.
• A paper will be presented at “SAHC 2010” (The Structural Analysis of
Historical Constructions 2010), 6-8 October 2010, Shanghai (China).
The paper is concerned with aspects of the project related to the resis-
tance of arches to deformations. Pierre Smars, “Kinematic Stability of
Masonry Arches”.
• Results of the project will be presented at the conference “CSAAR
2011” (Conservation of Architecture, Urban Areas, Nature & Land-
scape: Towards a Sustainable Survival of Cultural Landscape), organ-
ised in 14-16 March, 2011 in Amman (Jordan). The author is member
of the scientific committee of the conference and the abstract is under
preparation.
• We also intend to reformat the present report as a paper to present to
the International Journal of Architectural Heritage for publication.
• The author is the only developper of the software described above.
In the framework of this project, a lot of work was done to facilitate
future collaboration. Attention is paid to the style of the code to keept
it uniform, comments are added, classes are documented automatically
using Doxigen. Copyright notices are included in all the files (GPL).
Software is accessible through a CVS server and programs and libraries
are built using a portable build system (CMake). It is our intention to
give free access to the code after publication of the paper presenting
the result of the project. It is by using it, that software can improve.
26
Chapter 5
Conclusions
Mathematical Model
• A flexible platform for the analysis of masonry block structures was
developed. The modelling tools allows to study a large class of problems
(stability conditions, internal forces, influence of deformations: hinges
and sliding, influence of criteria of resistance. . . )
• This is a clear improvement in relation to previous tools developed in
the past by the author which, being less flexible (menu-driven, 2D,
simpler criteria of resistance), are less suited to research purpose.
• A consequence of this flexibility is that testing will require a long time.
Our tests (very positive until now) concerned mainly arches and only
some of the possibility offered by the software. Interesting directions
of research are: interactions between structures (arches, pillars . . . ),
shape optimisation, influence of external forces.
• Another consequence of the flexibility is that the software is more com-
plex to use: the order of the operations is not imposed, tasks can
be accomplished in different ways, commands are often long (possibly
cryptic). At this stage, the software was only used by the author who
being involved in the development of core elements, did not work much
on providing functions to simplify common tasks.
• The software is particularly well suited to the analysis of large dis-
placements, a problem difficult to study with any existing tool (to our
knowledge).
• Improvements are most needed on the optimisation functions which
are not very robust. In the current stage, there are still problem of
28
Bibliography
[1] J. Heyman. The stone skeleton. International journal of solids and
structures, 2:249–279, 1966.
[2] R.K. Livesley. Limit analysis of structures formed from rigid blocks.
International journal for numerical methods in engineering, 12:1853–
1871, 1978.
[3] R.K. Livesley. A computational model for the limit analysis of three-
dimensional masonry structures. Meccanica, 27:161–172, 1992.
[4] Ring, 2010. http://www.limitstate.com/ring/.
[5] R.J. Mainstone. Structural analysis, structural insights, and histor-
ical interpretation. Journal of the society of architectural historians,
56(3):316–340, 1997.
[6] E. Verstrynge, Schueremans L., P. Smars, and D. Van Gemert. De-
sign and testing of masonry arches: a project of bachelor students in
civil engineering. In P.B. Loureno, D.V. Oliveira, and A. Portela, edi-
tors, Arch’07, 5th International Conference on Arch Bridges, September
2007.
[7] L. Schueremans, P. Smars, and D. Van Gemert. Safety of arches - a
probabilistic approach. In P.H. Bischoff, J.L. Dawe, A.B. Schriver, and
A.J. Valsangkar, editors, 9th Canadian masonry symposium (Spanning
the Centuries with Masonry), New Brunswick, 4,5,6 June 2001, 2001.
[8] L. Schueremans, D. Van Gemert, and P. Smars. Safety assessment of
masonry arches using probabilistic methods. International Journal for
restoration of buildings and monuments, 7(5):517–538, 2001.
[9] Schueremans L., K. Van Balen, K. Brosens, D. Van Gemert, and
P. Smars. Church of saint-james at leuven (b) - structural assessment
and consolidation measures. In P.B. Loureno, P. Roca, C. Modena, and
30
Third International Congress on Construction History
20-24 May 2009, Cottbus, Germany
Report of the participation of Pierre Smars
Pierre Smars, June 2009
Presentation (http://www.ch2009.de/)
Following the success of  the congresses in Madrid (2003) and Cambridge (2006),  the 
Brandenburg  University  of  Technology  Cottbus  invited  scholars,  engineers  and  the 
interested  public  from  all  over  the  world  to  the  Third  International  Congress  on 
Construction History in May 2009.
Transcending the constraints of traditional cultural and disciplinary boundaries, the Cottbus 
Congress was open to contributors associated with all disciplines focussed on and around 
the worldwide movement of construction history. The Congress will offer an open forum for 
presenting the broad field of construction history.
The  Congress  was  hosted  by  the  Chair  of  Construction  History  and  Structural 
Preservation,  represented  by  its  director  Prof.  Werner  Lorenz.  Organisation  of  the 
Congress  was  undertaken  in  collaboration  with  the  Congress  Advisory  Committee, 
consisting of members of the Berlin-Brandenburg Construction History Group, as well as 
with a National Support Group, composed of representatives of several related societies 
and organisations. An International Scientific Committee has peer reviewed abstracts and 
papers submitted.
Themes and Topics
• Disciplines  and  Techniques (Civil  and  structural  engineering,  Building 
construction, Military and industrial construction, Service engineering and building 
physics, Construction materials, Construction methods, processes and tools)
• Theoretical Issues (Methods of design and analysis, Developments in engineering 
sciences, Relationships between theory and practice, empiricism and science, craft 
and  industrialisation,  Recording,  communication  and  spread  of  experience  and 
knowledge in construction, Development of building regulations and codes, books 
and journals)
• Economical,  Cultural  and  Social  Issues (Biographic  research,  Economic  and 
social  history of building firms and labour,  Efficiency, optimisation, economy and 
ecology  in  construction,  Cultural  influences  to  and  cultural  effects  of  building 
technology, Construction engineering and policy, Construction history in literature 
and  film,  Societal  attitudes  to  construction  engineering  in  different  eras  and 
cultures)
• Methodical  Aspects (Defining  “Construction  History”  –  from  movement  to 
discipline,  Methods  of  investigation,  documentation,  analysis  and  evaluation, 
Engineering appraisal of historic structures, Communication of construction history 
–  new means and media,  Construction  history  pedagogy – purpose and goals, 
Integration of construction history into the education of engineers and architects)
 
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
no 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：□已發表 ■未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
