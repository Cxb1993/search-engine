energy-efficient data storage scheme in wireless 
sensor networks. 
英文關鍵詞： Data Storage, Power-Saving, Wireless Sensor Networks 
 
  — 2 — 
行政院國家科學委員會專題研究計畫精簡報告  
在無線感測網路下設計跨層的省電資料儲存機制  
計畫編號：NSC99-2221-E-036-036-MY2 
執行期限：99 年 8 月 1 日至 101 年 7 月 31 日 
計畫主持人：廖文華  大同大學 資訊經營學系 
計畫參與人員: 蒯思齊、蔡欣晏、林祐頡、李明憲   
 
(一) 中文摘要 
無線感測網路儲存資料以描述環境的變化。其
中最中要的議題便是如何延長網路生命週期以及
正確的取回資料，其中資料儲存方法扮演著一個
重要的角色，它影響電力的消耗及資料的可靠
度。無線感測網路可以切換睡眠模式以節省電
力，但在睡眠的感測點中存取資料是困難的。在
計畫的第一年，我們提出了一個省電的資料儲存
方法。在同一格子中只有兩個感測器醒來以節省
電力。感測器的醒來時間會重疊其它感測器的醒
來時間，因此資料不會因為某些感測器進入睡眠
模式而遺失，因為可以將資料或查詢傳給另一個
醒著的感測器，我們將設計一個保證會有另一個
感測器醒來一段連續的時間以處理可能未完成的
查詢。在計畫的第二年，我們發展在感測器的初
始電量不同時也能正確運作。我們假設所有感測
器的初始電量可能不一樣，因此我們將對不同的
電力的感測器做分類，希望可以將一些感測器放
在矩陣的列，一些感測器放在矩陣的行，找出能
夠達到整個網路生命週期最大化的組合，也就是
提出一個電力已知的網路生命週期最佳化的資料
儲存策略。 
 
 (二) 英文摘要 
In wireless sensor network (WSN), many 
literatures focus on developing power-saving 
protocols. In addition, many papers present data 
storage schemes but they do not take power saving 
into consideration. Hence, these data storage 
schemes cannot perform well based on power-saving 
protocols. Therefore, it is very critical to propose a 
data storage scheme to support power-saving 
mechanism. The project in the first year, we will 
propose a power-saving data storage scheme in 
wireless sensor networks. Our scheme is based on 
grid architecture. Our strategy will guarantee that 
there are exactly two sensors to be active in a grid 
and the one sensor can be active in two sequent time 
slot. Thus, the query packet can be forward to 
another active node to finish the query task. We will 
evaluate our scheme performance.The project in the 
second year, we will propose a power-aware 
energy-efficient data storage scheme in wireless 
sensor networks. In the first year of the project, we 
assume that the initial energy of each node is equal. 
In the second year of the project, we will relieve the 
constraint and propose a power-aware 
energy-efficient data storage scheme in wireless 
sensor networks. 
 
(三) 簡介 
無線感測網路是最近熱門的研究議題之一，其
低成本及簡單的網路架構，加速了無線感測網路
的發展。人們利用無線感測網路蒐集平時不易觀
察到區域的資料，例如在深海或廣大的森林中，
感測器可以長期地蒐集資料，並且不花費人力成
本。無線感測網路為我們的生活帶來了許多的便
利。感測器是一個很小的裝置，它有自己的處理
器、記憶體及電池。感測器可以感測周圍的環境，
儲存資料或傳輸資料。如果感測了一段時間，該
感測器會因為電力耗盡而失去作用，更糟糕的情
況會因此而造成切斷了網路拓撲或遺失資料的問
題，電力消耗是無線感測網路中熱門的研究方
向。我們發現資料的儲存方法和電力消耗有很大
的關係，浪費太多電力是沒效率的，而且會減少
網路的存活時間。我們必須在設計資料儲存方法
時就將電力消耗的問題納入考量。節省電力機制
最主要的目標是讓感測器進入睡眠模式，進入睡
眠模式的感測器無法感應周圍的環境，就像是這
顆感測器消失了一般，這麼一來，感測器進入睡
眠模式會衍生出許多的問題，當想查詢的資料在
進入睡眠模式的感測器中該怎麼辦？感測器在進
入睡眠模式前，必須將自己的資料先備分在其它
感測器嗎？又查詢該如何知道它想查詢的資料已
經被移至別的地方？那感測器醒來了又該如何處
                —   — 4 
詢，就算感測器進入睡眠模式，還是可以保證資
料的可靠度。  
 
A. 基本概念 
我們所提出的省電資料儲存方法是基於網格架
構之上所發展出來[17][19]，每一個網格可以和其
鄰居網格通訊。當感測器偵測資料需要儲存時，
依此資料屬性雜湊算出一個地理位址 L 以當作儲
存位址，再將 L 對應至網格的編號。直覺地，讓
每一個格子至少有一個感測器醒來就可以維持無
線感測網路的運作，在儲存時也非常合理，但是
在查詢時會發生一個致命的問題，那就是查詢的
資料並不一定儲存在醒來的那顆感測器上，因此
我們設計了一個保證一個網格中有兩顆感測器醒
來的省電資料儲存方法，這兩個感測器負責查詢
資料的動作，當查詢尚未完成，感測器 A 將會將
查詢資料傳給另一個感測器 B；當感測器 A 將要
切換至睡眠模式時，感測器 C 會接續著醒來，而
感測器 B 會將查詢的程序交給感測器 C 繼續執
行，因此我們所提出的省電資料儲存方法能夠保
證只有兩個感測器在同一個網格醒來，而在其中
一個感測器切換至睡眠模式到其它感測器醒來之
間，另一個感測器一定醒著。 
 
B.  蛇形時槽分配方法 
我們假設網路被切割成二維的網格，其中各個
網格以 grid(x, y)來表示，假設網格中的感測器目
為 N，則我們利用一個 m × n 的矩陣 T 來安排
每個網格的醒睡時間。矩陣 T 中的列 m 以及行 n 
是由以下的公式所決定 
  













2
2/
2
N
m
Nnm
 (1) 
 
定義 1: T 為 m × n 矩陣的時槽，而 m 和 n 是
由公式(1)所計算出來，那麼
 
 
 





even. is  if    1
odd. is  if    1
ijni
ijni
Tij  
 
定義 2: S 為一個(m + n) × (m × n)的矩陣狀態，
那麽
 







 
otherwise. sleep), i.e.,( 0
.'1 ,for   if ,active) i.e.,( 1
.'1 ,1for   if ,active) i.e.,( 1
)('
'
minmimjT
njmijT
S mii
ij
ij ≦≦≦
≦≦≦≦
 
在公式(1)中，我們分別分配 m 個感測器至 m 
列以及 n 個感測器至 n 行，而矩陣中時槽的個
數為 m × n。每個時槽所對應的列及行就是必須
醒來的感測器。假設所有的感測器初始電力相
同，如果各個感測器所醒來的時槽數愈相近愈
好，而網路的生命週期也會延長。因此我們讓
m+n=N，m 愈接近 n 愈好。 
 接下來，我們將描述如何利用定義 1 分配矩陣
Tij 中的時槽。這此時槽的序號分配是以蛇形的方
法排列，在圖 1(a)中是一個蛇形分配例子，假設 Tij 
是一個 4 × 3 矩陣，矩陣中有 4 × 3=12 個時
槽。時槽 1 至 3 以從左至右的方式被分配至第一
列，時槽 4 至 6 以反方向分配至下一列，而其它
的感測器依此類推。因此我們稱這種分配策略為
蛇形分配。每一個感測器被對應至 i 列或 j 行，
它的醒來時槽就是該 i 列或 j 行的所有時槽，這
麼分配一定會有兩個感測器在同一時間醒著，這
個特性會在定理 1 證明。舉例來說，在圖 1(a)中，
感測器 A 在時槽 1、 2 和 3 醒來，同理感測器
E 會在時槽 1、 6、 7 和 12 醒來。  
 
定理 1: 讓 i1, i2 為列的兩個索引，那麼 jiS 1 =1, 
jiS 2 =1, 和 Sij=0 ，當 1 ≦ i1 < i2≦ m+n, i≠i1 
或 i2, 在 1≦j≦m × n 的情況之下。也就是說，
在矩陣 S 中，同一行有兩個列的值是 1，也就是
醒來的狀態。 
證明: 在矩陣 Sij 中，行 j 表示在矩陣 T 中的
時槽 j。而在矩陣 T, kT ji ''  表示感測器 'i 和 'j  
在時槽 k 是醒著的。 'i  被轉換成為矩陣 S 的列 i，
而 'j  被轉換為列 'j +m。那麼一定會有兩個索
引 i1, i2，讓 jiS 1 =1 和 jiS 2 =1, 1 ≦ i1 < i2≦ 
m+n。 ■ 
 
矩陣 S 是由定義 2 所得，我們將解釋由矩陣 T
轉換至矩陣 S 的過程。在圖 2 (a)中，每一個感測
器在矩陣 T 的列位置最少有兩個連續的時槽，而
這個特性將會在定理 2 說明。當醒來的感測器轉
換至另一列時，列如從 A 到 B，一定有一個行位
置的感測器在這段時間處於醒來的狀態，也就是
感測器 G。那麼當兩個醒著的感測器收到查詢封
包時，兩個感測器的其中一個一定能在下一個時
槽處於連續的醒著狀態，這個機制可以保證查詢
封包被保留在其中連續時槽的感測器中以完成連
                —   — 6 





mmmynm
mmmynm
'1 andeven  is ' if ),1('
'1 and odd is ' if ),1()1'(1
 
 
感測器 i 在時槽 1+( 'm −1)×n 醒來，而且在時
槽 1+( 'm −1)×n+1 切換至醒睡模式，則感測器 'm  
在時槽 1+( 'm −1)×n 及 1+( 'm −1)×n+1 連續醒
來。 ■ 
 
在公式(1)中，列的數目 m 必須是偶數，如果 m
是奇數，如圖 1(b)所示，矩陣 T 是一個 3×4 的矩
陣，它的時槽狀態圖如圖 2(b)所示，在圖 1(b)中，
一個時槽對應至兩個感測器，例如感測器 A 在時
槽 1、 2、3 和 4 醒來；而感測器 E 在時槽 1、
8 和 9 醒來。狀態矩陣 S 如圖 2(b)所示，在圖 2(b)
中，每一個感測器在矩陣 T 的列位置最少有兩個
連續的醒來時槽。當醒來時槽從某列換至下一列
時，例如從列 A 換至列 B，一定有一個感測器在
這段時間連續醒著，也就是行 G。同理，從列 B 到
列 C，一定有一個感測器在這段時間連續醒著，
也就是行 D。然而，從時槽 12 轉換至下一個循
環的時槽 1，感測器 C 和 G 在時槽 12 都醒著，
而且感測器 A 和 D 會在時槽 1 醒來，也就是從
列 C 到列 A，並沒有兩個連續的醒來時槽，其
中的原因就是因為列的個數 m 是奇數，因此列的
個數一定要是偶數，在公式 (1) 中不僅保證
m+n=N ，而且讓 m 的數目近可能地接近 n ，而
且 m≧n。 
 
C. 儲存資料 
我們的儲存策略類似[19]，當感測器偵測到事
件，它利用此事件的屬性來雜湊出一個地理位址
L，而各個屬性所算出的 L 會對應至網格座標並且
轉換成網格編號，在我們的省電儲存方法中每個
網格中會有兩個感測器醒來。偵測到事件的感測
器將儲存資料以地理繞徑通訊協定將它送至對應
的網格中醒來的感測器儲存，兩個醒來的感測器
確定資料是送至自己的網格即將資料儲存下來。 
 
D.  查詢事件 
由於我們所設計的省電機制在同一時間，同一
網格內只有兩個感測器醒來，而每個感測器都有
自己的醒睡排程，同一個屬性的資料會被分散儲
存至同一網格中的感測器中。如果我們需要查詢
網格中所有的資料，勢必要等待每一個網格中的
感測器都至少醒來一次才能完全查詢，直覺地必
須等待一個循環的延遲時間，但事實上並非如
此，在我們的方法中最多只要等待 2n – 1 個時槽
延遲就能得到完全查詢資料，n 是矩陣 T 的行數
目，此證明會在定理 3 詳細說明。 
 
定理 3: 讓 j 為矩陣 S的行位置索引，那麼從 j 查
詢網格中的資料最多只要連續查詢 2n-1 個時槽。  
證明: 讓 Ti 為矩陣 T 的第 ith 行向量而且
 ={collected Ti }。如果我們可以得到全部 Ti (1≦
i ≦n)，則在網格中的資料可以被完全查詢。假設
我們從時槽 j= ''nmT 開始查詢資料，在時槽 j 我們
可以得到 'nT 。  
 







even. is  if  ), 1'(+  to slots  timefrom },'≦≦1 | {
odd. is  if  ), (+  to slots  timefrom },≦≦' | {
m'njjniT
m'n'njjninT
i
i
 
 (2) 
在公式(2)的上半部，如果 'n =1，則={ Ti |1≦i
≦n}，得到網格中的資料，否則當 'n >1，在下
一個時槽從 j+(n− 'n +1) 到 j+2(n− 'n )間，並
沒有改變，  因此 會在時槽 j+2(n− 'n )+1 到 
j+2(n− 'n )+1+ 'n − 2 之間得到資料，換句話說，
全部的時槽為 2(n− 'n +1)+ 'n − 1=2n− 'n +1 個，
而 2n− 'n +1 的最大值為 2n− 1 當 'n =2 時。 
在公式(2)的下半部，如果 'n =n，則  ={ Ti |1
≦i≦n}，得到網格中的資料，否則當 'n <n，在
下一個時槽從 j+( 'n − 1)+1 到 j+( 'n − 1)+1+ 'n −
1 間，並沒有改變，因此會在時槽 j+2 'n  到 
j+2 'n +(n− 'n )之間得到資料，換句話說，全部的
時槽為 2 'n +n− 'n = 'n +n，個，而 'n +n 的最大值
為 2n− 1 當 'n =n− 1 時。 ■ 
 
當兩個醒著的感測器 X、Y 收到查詢封包，假設
X 在下一個時槽仍然醒著，則 Y 會將查詢的資料
傳給 X，在下一個時槽另一個感測器 Z 改變狀態
醒來，則 Z 持續與 X 類似的動作直到網格中的資
料被完全查詢，例如圖 3(a)所示，當感測器 A 和 
E 在時槽 1 收到查詢的封包，然而感測器 A 擁有
時槽 1、2 和 3 的資料，然而感測器 E 擁有時槽 1、
6、7 和 12 的資料，在下一個時槽也就是時槽 2
時，感測器 A 還是醒著，而感測器 E 進入睡眠
模式，感測器 E 會把自己 6、7 和 12 時槽儲存的
資料傳給感測器 A，那麼感測器 A 擁有時槽 1、2、
3、6、7 和 12 儲存的資料。同一時間，感測器 F 即
將來，感測器 A 將查詢送給感測器 F ，而感測
器 F 擁有時槽 2、5、8 和 11 儲存的資料，同理
在下一個時槽，感測器A持續醒著，而感測器F 將
進入睡眠模式，感測器 F 會將資料傳給感測器 
A，這麼一來感測器 A 擁有時槽 1、2、3、5、6、
7、8、11 和 12 儲存的資料。在下一個時槽也就
                —   — 8 
序，由低到高分配於矩陣列的欄位，相同的將高
電量群感測器也依據相同方式分配於矩陣行的欄
位。此時矩陣的第一列感測器 n1與第一行感測器
nk+1 是兩個電量群中電量最低的感測器，接著我
們計算這兩個感測器的電量分別可運作多少個時
槽，數值較小的就是在此醒睡排程中會最早耗盡
電源的感測器，而其可運作的時間就是此醒睡排
程的生命週期值 LTk。再來我們將高電量群中兩個
電量最低的感測器(nk+1、nk+2)移到低電量群，藉此
改變矩陣的行列比例，可再求得另一個醒睡排程
的生命週期值。以此類推我們可以求得各種不同
行列組合的生命週期值。而其中擁有最大生命週
期值的行列比例就是最佳的矩陣調配方式。 
 
 
圖 4：電量已知節能資料儲存演算法 
 
以下提出我們的演算法如圖 4，假設格子內感
測器的數量為 N，經電量高低排序後感測器編號
為 n1~nN，感測器剩餘電量為 P(ni)其單位為感測
器可醒來的時槽數 timeslot，電量由低到高排序為
P(n1)~P(nN)。我們將感測器依據電量高低區分成
高電量與低電量兩群，取低電量群感測器的數量
為 k，k 必須是偶數且數量要大於或等於感測器總
數的一半，所以 k 可表示如公式(7)。 
 









2
2/
*2
N
k
      (7) 
而高電量群感測器的數量為 N-k，所以矩陣為
k*(N-k)矩陣。接下來分別計算矩陣中行與列中最
低電力感測器 n1與 nk+1的生命週期。首先計算感
測器 nk+1的生命週期，計算方式為將 nk+1的電量
P(nk+1)除以 k，k 為每一個時槽週期感測器 nk+1要
醒來的次數，所求得的商值為



 
k
nP k )( 1 是感測器
nk+1可完整運作的週期數，而所求得的餘數 P(nk+1) 
mod k 為最後一個週期感測器 nk+1 可醒來的次
數。感測器 nk+1生命週期
k
nk
LT
1
計算方式為其可完
整運作的週期數



 
k
nP k )( 1 乘上每個週期的時槽數
k*(N-k)加上最後一個週期感測器 nk+1 可以運作的
時槽數。由於感測器 nk+1 位於矩陣列的位子，其
醒來的時槽並非連續時槽且矩陣中時槽的排列方
式為蛇形排列，因此最後一個週期若感測器 nk+1
醒來次數為單數，則最後一個週期可運作的時槽
數為感測器 nk+1 最後一個週期可醒來的次數
P(nk+1) mod k 加 1，乘上每次醒來需間隔的時槽數
N-k 再減 1，其計算公式如(8)。 
k
nk
LT
1
=



 
k
nP k )( 1 *k*(N-k)+((P(nk+1) mod 
k)+1)*(N-k)-1  (8) 
若最後一個週期感測器 nk+1 醒來次數為偶數，
則最後一個週期可運作的時槽數為感測器 nk+1 最
後一個週期可醒來的次數 P(nk+1) mod k 乘上每次
醒來需間隔的時槽數 N-k。此時感測器 nk+1生命週
期 knkLT 1 計算公式如(9)。 
k
nk
LT
1
=



 
k
nP k )( 1 *k*(N-k)+ (P(nk+1) mod k)*(N-k)  
 (9) 
接著計算低電量群中 n1感測器的生命週，計算
方式為將感測器 n1 的電量 P(n1)除以(N-k)，(N-k)
為每個時槽週期感測器 n1必須醒來的次數，所求
得的商值為




 kN
nP )( 1 是感測器 n1可完整運作的週期
數，而所求得的餘數為 P(n1) mod (N-k)是最後一
個週期感測器 n1可醒來的次數。感測器 n1生命週
期 knLT 1 的計算方式為可完整運作的週期數 



 kN
nP )( 1
乘上每個週期的時槽數 k*(N-k)加上最後一個週期
感測器 n1可醒來的次數 P(n1)mod(N-k)，其計算公
式可表示如(10)。 
k
nLT 1
=




 kN
nP )( 1 *k*(N-k)+ (P(n1) mod (N-k))   (10) 
比較 knLT 1 與
k
nk
LT
1
，數值較小者為此醒睡排程的
生命週期值 LTk，接著改變矩陣的行列比例，將高
電量群中電量最小的兩個感測器 nk+1與 nk+2移到
矩陣列的欄位，矩陣列欄位仍保持為偶數的限
制，依上述步驟可再求得另一個生命週期值，以
                —   — 10 
至網路時，所以 400 查詢以上都會在 40 秒死亡，
然而我們的方法可以看出來是比較平衡的。 
 
0
50
100
150
200
200 400 600 800 1000
Number of queries
L
if
et
im
e(
se
c.
)
Our scheme GHT
 
圖 7：不同查詢數目下的網路生命週期變化 
 
(ii).   剩餘電量百分比 
我們觀察在不同感測器數目、不同儲存事件
數目和不同查詢數目下，剩餘電量百分比的變化。  
觀察在不同感測器數目下剩餘電量百分比的
變化：我們和 GHT 比較剩餘電量百分比，感測器
變化為 300 到 700，而在第 100 秒時觀測他們的
電量。如圖 8 所示，剩餘電量百分比在我們的方
法中因為感測器數目增加而增加，相對的，GHT
不會因為感測器數目增加而增加，這是因為在我
們的方法中同一網格只會有兩個感測器醒來，而
GHT 全部感測器都醒著，當感測器數目增加，電
力也呈同比例消耗。我們的方法因為網格中的密
度增加而讓感測器有更多的睡眠時間，雖然總電
量增加，但是在 500 到 700 間的增加幅度趨緩，
這是因為電力增加的百分比沒有像 300 增加至
400 時那樣多所呈現的狀況。如圖 9 所示，我們
觀察平均睡眠百分比，因為 GHT 未採用省電機
制，所在睡眠百分比為 0，然而我們的方法保證
一個網格中只有兩個感測器醒來，所以睡眠百分
比會因為感測器數目增加而增加。 
 
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
300 400 500 600 700
Number of nodes
R
es
id
u
al
 p
o
w
er
 %
Our scheme GHT
 
圖 8：不同感測器數目下的剩餘電量百分比變化 
 
0
10
20
30
40
50
60
70
80
90
300 400 500 600 700
Number of nodes
P
er
ce
n
ta
g
e 
o
f 
sl
ee
p
in
g
 t
im
e(
%
)
Our scheme GHT
 
圖 9：不同感測器數目下的平均睡眠百分比 
 
觀察在不同儲存事件數目下剩餘電量百分比
的變化：我們比較在 100 到 1600 儲存事件增加至
網路中剩餘電量百分比的變化，如圖 10 所示，和
GHT 比較起來，增加的事件數量並不會對我們的
方法有顯著影響，而是緩慢地減少，但是對 GHT
卻很明顯的造成大幅度的減少，在我們的方法
中，事件儲存在網格中而非特定的感測器對於省
電有很大的功效。 
0
0.2
0.4
0.6
0.8
1
1.2
100 400 700 1000 1300 1600
Number of events
R
es
id
u
al
 p
o
w
er
 %
Our scheme GHT
 
圖 10：不同儲存事件數目下的剩餘電量百分比變化 
                —   — 12 
器醒來的比例，使得網路生命週期隨電量範圍增
加而有所增加。由此可知我們的方法確實能有效
的增加網路生命週期。 
 
0
1000
2000
3000
4000
5000
6000
100-200 100-300 100-400 100-500 100-600 100-700 100-800 100-900 100-1000
Power Range
L
if
e 
T
im
e 
(s
ec
)
EEDS Our Scheme
 
圖 13：不同電量範圍下的網路生命週期 
 
(ii). 電源利用率 
我們觀察在不同數量的感測器及不同電量範圍
下對於感測器電源利用率的影響。電源利用率的
定義為當網路生命週期結束時，格子內所有感測
器所消耗的電量百分比。電量消耗百分比越高，
表示其電源利用率越佳。 
實驗在不同數量感測器環境底下，當網路生命
週期結束時，格子內感測器電源利用率的多寡。
每個感測器電量由 100~500 time slots 隨機設定，
電量級距為 10 time slots。格子內感測器數量由 10
個增加到 100 個，每次增加 10 個，模擬計算 50
次求取電源利用率平均值。實驗結果如圖 14，雖
然感測器數量逐漸增加，感測器總電量也逐漸增
加，但電源的利用率並未因此大幅降低，反而維
持在一定範圍內。主要原因是隨著感測器數量增
加，如實驗 12 的結果顯示網路生命週期亦隨之增
加，因此電源利用率會維持在一定的比例。比較
兩個方法的數據結果，我們方法的電源利用率平
均較 EEDS 多出約 20%，因此可知我們的方法能
提升整體網路的電源利用率，減少感測器電源的
浪費。 
 
0
10
20
30
40
50
60
70
10 20 30 40 50 60 70 80 90 100
Number of Nodes
P
er
ce
nt
ag
e 
of
 P
ow
er
 u
til
iz
at
io
n(
%
)
EEDS Our Scheme
 
圖 14：不同數量感測器下的電源利用率 
 
實驗在不同剩餘電量範圍的情況下，當網路生
命週期結束時，格子內感測器電源利用率的多
寡。首先將格子內感測器的數量固定為 50 個，接
著調整感測器電量的設定範圍，由 100~200 time 
slots 逐漸增加至 100~1000 time slots，每次增量級
距為 100 time slots，感測器電量由設定範圍內隨
機方式設定，每個電量級距實驗 50 次取平均值。
實驗結果如圖 15，隨著電量範圍增加，電源利用
率也隨之降低，這是因為感測器高低電量差異懸
殊，當低電量感測器電源耗盡時，高電量感測器
會剩餘更多的電力，因而導致電源利用利率降
低。比較兩個方法的數據結果，我們方法的電源
利用率仍然比 EEDS 來的好，平均約有 20%的差
異，因此可知我們的方法在感測器電量範圍懸殊
的情況下，仍有較好的電源利用率。 
 
0
10
20
30
40
50
60
70
80
90
100-200 100-300 100-400 100-500 100-600 100-700 100-800 100-900 100-1000
Power Range
P
e
rc
e
n
ta
g
e
 o
f 
P
o
w
e
r 
u
ti
li
z
a
ti
o
n
(%
)
EEDS Our Scheme
 
圖 15：不同數量感測器下的電源利用率 
 
 
(六) 結論 
 
在此計畫中，我們提出了一個有效提升資料可
靠度的資料儲存方法。蛇形時槽控制同一格子中
只有兩個感測器醒來以節省電力。資料儲存以資
料中心儲存，當資料雜湊出儲存位址時，我們將
它轉換成對應的格子編號，儲存在格子中。除此
之外，感測器的醒來時間會重疊其它感測器的醒
來時間，因此資料不會因為某些感測器進入睡眠
模式而遺失，因為可以將資料或查詢傳給另一個
醒著的感測器，而我們的方法保證一定會有另一
個感測器醒來一段連續的時間以處理可能未完成
的查詢。另外我們提出另一個新的感測器醒睡排
程方法，讓感測器的醒睡排程可以依據其剩餘電
量來安排，藉由調整醒睡排程矩陣的行列比例，
讓低電量感測器進入睡眠的時間比高電量感測器
長，而達到提高網路電源利用率以及延長網路生
命週期的目的。我們先針對格子內感測器的電力
 1 
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：101年 5 月 10日 
                                 
一、參加會議經過 
IEEE/IFIP Network Operations and Management Symposium (NOMS 2012) 是一個包含網路營運和管
理相關的學術會議。NOME 2012 每兩年舉辦一次，今年已經是第 13屆，所以會議已經有 24年的
歷史，是一個很成熟頗具規模的會議。它是 IEEE Communications Society's forum，主要做為網路
服務和管理技術的交流，主要集中於研究、發展、整合、標準、服務的提供和使用者的社群。今
年在美國的夏威夷舉辦，夏威夷大學是網路MAC Aloha 協定的發明地，所以今年會議的主題也特
別訂為 “Managing the Next Wave of Information and Communications Technologies”。NOMS 的特色
是除了 Technical Program 以下的 Session 之外 
 Paper Sessions - providing numerous technical sessions with papers presenting the latest technical 
advances through peer-reviewed paper sessions. 
 Poster Sessions – enabling one-on-one interactions between authors and attendees. 
 Tutorials - offering education for keeping up with new and emerging topics essential to today's 
engineering and technology environment. 
 Workshops - with specialized focus on the latest breakthroughs in information and communications 
technology management in an environment that encourages discussion and debate. 
另外還包含了  
Industrial Forum and Patrons 
 Keynote Presentations – seven top industry leaders share their visions and experiences, and 
challenge us in exciting, new ways. 
計畫編號 NSC 99－2221－E－036－036－MY2 
計畫名稱 在無線感測網路下設計跨層的省電資料儲存機制 
出國人員
姓名 
廖文華 
服務機構
及職稱 
大同大學 副教授 
會議時間 
101年 4月 16日至 
101年 4 月 20日 
會議地點 美國夏威夷 
會議名稱 
IEEE/IFIP Network Operations and Management Symposium, NOMS 2012 
發表論文
題目 
1. An Energy-Efficient Data Storage Scheme in Wireless Sensor Networks 
2. An Efficient Data Storage Scheme for Top-k Query in Wireless Sensor 
Networks  
3. An Object Tracking Scheme for Wireless Sensor Networks Using Data 
Mining Mechanism 
An Energy-Efficient Data Storage Scheme in 
Wireless Sensor Networks 
 
Wen-Hwa Liao 
Department of Information Management 
Tatung University 
Taipei, Taiwan 
whliao@ttu.edu.tw 
Hung-Chun Yang 
Department of Information Management 
Tatung University 
Taipei, Taiwan 
 
 
 
Abstract—In wireless sensor network (WSN), much literature 
focuses on developing energy-efficient protocols. In addition, 
many papers propose data storage schemes but they do not take 
power saving into consideration. Hence, these data storage 
schemes cannot perform well based on energy-efficient protocols. 
Therefore, it is very critical to propose a data storage scheme to 
support energy-efficient mechanism. In this paper, we propose an 
energy-efficient data storage scheme in WSN. Our scheme adopts 
a grid-base architecture, in which each grid guarantees that two 
sensors will stay in active mode while the other sensors stay in 
sleep mode to save energy. Simulations have shown that our 
energy-efficient data storage scheme can reduce energy 
consumption.  
Keywords-data storage; energy-efficient; wireless sensor 
networks. 
I.  INTRODUCTION 
Wireless sensor network (WSN) applications are used in 
environment monitoring, personal healthcare, enemy 
monitoring, etc [1]. In such applications, users are interested in 
events instead of the identity of a particular sensor. Energy 
consumption is the primary consideration in the design of a 
sensor network, with most related research focused on reducing 
energy consumption. The use of a sleeping mechanism is one 
of the most effective energy saving methods, but it is important 
to arrange the sleeping schedule without affecting the normal 
operation of the sensor network, especially the sensor function. 
That is, the sensing coverage of the network cannot be reduced 
too much; otherwise, the network will not function normally. 
Much literature focuses on developing energy-efficient 
protocols [2][3]. The S-MAC [2] is a MAC protocol in wireless 
sensor networks (WSNs). Its main design is to periodically put 
the sensors into a sleeping mode to replace the problem of idle 
listening. The AMAC [3] has good adaptation ability to 
environmental change. In addition, many papers present data 
storage schemes [4][5] but they do not take power saving into 
consideration. In [4], a data-centric storage scheme GHT is 
proposed. GHT is a geographic hash table system that hashes 
an event type into geographic location and stores the data of the 
event at the sensor node that is closest to the hash location. In 
[5], they propose an effective hotspot storage management 
mechanism to solve the hotspot storage problem. However, 
these data storage schemes cannot perform well based on 
energy-efficient protocols. Therefore, it is very critical to 
propose a data storage scheme to support energy-efficient 
mechanism. Hence, we propose an energy-efficient data 
storage scheme in this paper. 
The rest of this paper is organized as follows. Our energy-
efficient data storage scheme in WSN is presented in section II. 
Section III presents the results of performance evaluation. 
Section IV concludes this paper. 
II. THE ENERGY-EFFICIENT DATA STORAGE SCHEME  
A. Basic Idea 
Our energy-efficient data storage scheme is based on a grid-
based architecture [6]. Each grid can communicate with its 
neighboring grids.  When a node detects an event, it uses the 
event type to compute a geographic location L by hash 
function. The hash location L of each event is mapped into a 
grid and the hash location L is transformed into a grid ID. 
Intuitively, at least one sensor should be awake to store data in 
the grid; this is reasonable in the storing data phase. However, 
a critical problem will occur in the querying phase. The 
problem is that the active node may not store the querying data 
by users. Hence, we design an energy-efficient mechanism that 
will guarantee that two sensors will stay in active mode 
simultaneously in a grid. The two active sensors are 
responsible for query data.  
B. Snake-like Energy-efficient Scheduling 
We assume that the network is partitioned into 2-
dimensional logical grids. Assuming that the number of sensors 
in a grid is N, we use an )( nm×  matrix T to schedule active and 
sleep time slots for each sensor in the grid. Row m and column 
n of the matrix T are shown in the following equations. 
¬ ¼
°¯
°
®
­
»»
º
««
ª
=
=+
2
2/2
,
Nm
Nnm
 (1) 
Definition 1: Let T be an m ͪ n matrix of time slot and  m and 
n be computed by Eq. (1). Then 
( )
( )¯®
­
−+×
+×−
=
even. is  if    1
odd, is  if    1
ijni
ijni
Tij                                        (2) 
478978-1-4673-0269-2/12/$31.00 c©2012 IEEE
12 and send the query data to the sink. The delay time is 3 
time slots for this query data in this grid. As another example, 
in Fig. 3(b), assume that the query packet arrives at time slot 2. 
Without going through the complete procedure here again, we 
find that the delay time is 5 time slots.  
  
     (a)      (b) 
Figure 3. (a) The partial data as query packet arrives at time slot 1. (b) 
The partial data as query packet arrives at time slot 2. 
III. SIMULATION RESULTS 
In this section, we present simulation results for our 
energy-efficient data storage scheme. The simulation 
parameters are given in Table I. We will evaluate the network 
lifetime and residual power percentage of sensors by varying 
the number of sensor nodes, storage events, and event queries.  
TABLE I. SYSTEM PARAMETERS AND SETTINGS 
Symbol Definition Setting 
N No. of sensor nodes 400/500/600/700 
X×Y Size of the sensing region 136×136 m2 (8×8 grids) 
r Transmission range 50 m 
T Simulation time 600 sec. 
Tslot Slot time 0.1 sec 
Ptx Pw consum. in Tx 50 mW/sec 
Preceive Pw consum. in Rx 50 mW/sec 
Pidle Pw consum. in idle listing 20 mW/sec 
Psleep Pw consum. in sleeping 5 mW/sec 
E No. of event 200/300/400/500 
Q No. of query 150/250/350/450 
 
A. Network Lifetime
We will evaluate the network lifetime by varying the 
number of sensor nodes, storage events, and events queries. 
Network lifetime refers to the time when the first node in the 
network runs out of energy. 
1) The network lifetime by varying the number of sensor 
nodes: As shown in Fig. 4, the network lifetime of our scheme 
increases as the number of sensor nodes increase. The reason 
is that exactly two sensors will be active while the other sensor 
nodes are in sleep mode. In contrast, the GHT does not adopt 
any energy-efficient method. Hence, the lifetime of the GHT 
is insensitive to the number of sensor nodes.
 
2) The network lifetime varying the number of storage 
events: As shown in Fig. 5, the increasing events do not 
influence our scheme very much. The network lifetime of our 
scheme decreases while the store events increase. The event 
will be stored in the corresponding grid in no specific node. It 
reduces the power consumed during the storing event. Our 
scheme outperforms GHT because it saves a lot of power 
when sensor nodes go into sleeping mode.
 
3) The network lifetime varying the number of queries: As 
shown in Fig. 6, the lifetime decreases slowly as the number 
of queries increase. In contrast, the lifetime is 110 sec when 
the number of queries is 200. When the number of queries is 
equal to or greater than 400, its lifetime is always 40 sec. The 
reason is that the first sensor runs out of energy after 400 
queries in GHT. Thus, the lifetime cannot change. However, 
our method can achieve energy balance.
0
50
100
150
200
250
300
350
400
400 500 600 700
Number of nodes
Li
fe
tim
e(
se
c.
)
Our scheme GHT
  
Figure 4.  The network lifetime varying the number of sensor nodes. 
 
0
50
100
150
200
250
100 400 700 1000 1300 1600
Number of events
Li
fe
tim
e(
se
c.
)
Our scheme GHT
  
Figure 5.  The network lifetime with different number of events. 
 
0
50
100
150
200
200 400 600 800 1000
Number of queries
Li
fe
tim
e(
se
c.
)
Our scheme GHT
  
Figure 6.  The network lifetime with different numbers of queries. 
480 2012 IEEE Network Operations and Management Symposium (NOMS): Short Papers
An Efficient Data Storage Scheme for Top-k Query in 
Wireless Sensor Networks 
 
Wen-Hwa Liao 
Department of Information Management 
Tatung University 
Taipei, Taiwan 
whliao@ttu.edu.tw 
Chong-Hao Huang 
Department of Information Management 
Tatung University 
Taipei, Taiwan 
 
 
 
Abstract—In this paper, an energy efficient data storage method 
for top-k query in wireless sensor networks is proposed. In the 
proposed method, the sensor network is divided into a number of 
grids and there is a grid head present at the center of each grid. 
Each grid head is assigned a definite sub-range of sensed data 
and the grid heads store only those sensed data within the 
assigned sub-range. Division of network into grids distributes the 
network traffic and reduces the traffic hotspot problem, which 
prolongs the network lifetime. The grids are assigned sub-ranges 
in a snake-like fashion so that minimum communication is 
required to query the top-k sensed data from the sensor network. 
We have proposed an energy efficient query algorithm to query 
the top-k value of sensed data. Experimental results show that 
our proposed method can prolong the lifetime of the sensor 
network as compared to the existing methods. 
Keywords-datastorage;top-k; wireless sensor networks. 
I. INTRODUCTION 
Wireless sensor network (WSN) is composed of a large 
number of sensor nodes deployed in the monitoring region. The 
sensor nodes monitor the physical or environmental condition 
of the monitoring region and send the collected data to the sink 
through multi-hop communication. The sink acts like a 
gateway, which exchanges data between the sensor network 
and external users. WSN is widely used in many applications 
including military operations, environmental monitoring, 
health care systems, home applications and object tracking [1]. 
The sensor nodes in the sensor network have limited 
availability of recourses like energy and computational power. 
Hence, energy saving is one of the most important issues in 
WSN. 
Top-k query of the sensor network is the issue of finding 
the highest k sensed data and their corresponding location in 
the WSN. Earlier research work mainly focuses on top-k query 
in a centralized database. However, the centralized techniques 
cannot be applied to the WSN due to the distributed nature of 
WSN [2]. The work [3] proposed an in-network aggregation 
method known as TAG, for top-k monitoring in WSN. Initially, 
a routing tree routed at the sink is established and sensor 
readings are aggregated from the leaf to the base station. The 
aggregation of sensor reading reduces the communication cost 
and saves significant amount of energy. However, in a 
distributed system like WSN, it is difficult and energy 
consuming to maintain a routing tree. In addition, with the 
change of value of k for top-k monitoring, it has to be 
broadcasted in the WSN, which consumes enormous amount of 
energy.  A novel priority based top-k monitoring scheme called 
PRIM has been proposed in [4]. The basic idea is to collect 
readings sequentially with highest reading being collected 
earlier. A data-aware priority assignment algorithm is proposed 
which allows the sensor nodes to determine the timeslot to 
transmit data to the base station. When the base station receives 
enough sensed data to decide the top-k result, it sends a 
broadcast packet to all the sensor nodes to stop transmitting 
any more data packet. The method has two disadvantages. First, 
the sent broadcast packet consumes significant amount of 
energy. Second, the sensed data of the sensor nodes situated far 
away from the base station may be ignored as the time during 
which the sensed data arrive at the base station, it might have 
already decided the top-k result. Hence, the top-k result 
obtained in this method may not be accurate.  
The authors proposed a semi-supervised top-k query 
approach called commit aggregate verify (CAV) [2]. CAV 
constructs a spanning tree of the network and each parent node 
in the spanning tree maintains a histogram of frequency of its 
each child’s contribution towards the top-k value in past. A 
parent node estimates it’s every child’s possible contribution to 
the next top-k query by using the histogram and decides which 
of the child nodes are to be filtered out. The sensing data are 
aggregated only in the unfiltered nodes and the aggregated 
results are verified in the filtered nodes. The histogram 
evaluation is the key issue in CAV and it directly influences the 
amount of transmission required for top-k query processing, 
which is the main part of energy consumption. 
The authors proposed a top-k algorithm named partial 
ordered tree to retrieve highest readings in the sensor network 
where sensor readings are spatially correlated [5]. Each sensor 
node selects a node whose reading is the highest among its 
neighbors as its parent node. In this way, several partial 
ordered trees are constructed in a sensor network and the 
network is logically partitioned into a number of partial ordered 
trees. The authors proposed a top-k monitoring technique 
called FILA [6]. The basic idea is to install a filter at each 
sensor node to avoid unnecessary sensor update. If the readings 
of the sensor node falls in the range of the filter then the sensor 
554978-1-4673-0269-2/12/$31.00 c©2012 IEEE
 
Figure 3.An example of top-5 query. 
 
III. ENERGY COST ANALYSIS 
In top-k query of the sensor network, energy consumption 
cost includes storage cost (Estorage) and query cost (Equery). 
Each sensor node has to store data to the storage nodes 
periodically. And the query occurs randomly at any time and 
any place in the sensor network. The sensor node transmits 
data to the storage node at the fixed data transmit frequency F 
in a unit time interval. Suppose we have n sensor nodes in the 
sensor network and m source of query in a unit time interval. 
Estorage(i, GID) denotes the storage cost when sensor node i 
stores data to its storage node GID and Equery(j) denotes the 
query cost when sensor node j sends a query. In the top-k 
method the data store frequency F is the same for all sensor 
nodes, hence the storage cost is influenced by the hop distance 
h(i, GID) between the sensor node i and the storage node GID. 
The query cost, on the other hand depends both hop distance 
and the query frequency F(j) of node j.  Because the query will 
happen at any time and it does not have any fixed frequency. 
The total cost Etotal is the sum of Estorage and Equery[7]. 
 
),(
1
ID
n
i
storage GihFE ∗=¦
−
  
(2) 
)()(
1
jEjFE query
n
i
query ∗=¦
−
  
(3) 
¦
=
+∗=
n
i
storageIDIDtotal EGihFGE
1
),()(  
 
(4) 
 
Let us suppose the transmission range is r, length of the 
sensing region is x and grid dimension is d. The farthest 
distance to store data will be 2
12
2 ¸¸¹
·
¨¨©
§
−
+d
xx and the closest hop 
distance will be one hop. Hence, the average hop distance is 
r
rxx d
2
2
2
2
1 +¸¹
·¨
©
§
−
+ . 
We count storage cost in Eq. (5). 
r
rxx
nF
d
2
2
2
**
2
1 +¸¹
·
¨
©
§
−
+  
 
 
(5) 
 
Suppose the coordinate of the query node is (0, 0).  Based 
on our snake grids placement, we can analyze the query cost. 
2
1
2
1 22
¸
¹
·¨
©
§
−+¸
¹
·¨
©
§
++ dd
xxx is the distance between (0, 0) to grid head 
that we first make the query. When we want to query next grid 
head, we have to move (x/2d).  Since the distance between the 
grid head to next grid head has fixed distance (x/2d), when the 
packet arrives at the last grid head, we can count the distance 
from the last grid head to (0,0) is
IDID GG YX
22 + . We sum of all 
distances and divided the transmission range r. We can get the 
hop distance. We can obtain the cost of query from (0, 0) as 
given in Eq. (6). 
 
rYXGxxxxF IDID GGID
d
ddd /))4(222
(* 22
2
1
2
1 ++−∗+¸¸¹
·
¨¨©
§
−+¸¸¹
·
¨¨©
§
++
  
(6) 
 
IV. SIMULATION RESULTS 
In this section, we perform simulation to measure the 
performance of our top-k query method named GRID-top-k. 
The simulation parameters are given in Table I. A query may 
take place in any node of the network randomly. We evaluate 
the network lifetime for varying number of sensor nodes and 
varying dimension of the sensor network. In addition, we also 
evaluate the average energy consumption for varying number 
of sensor nodes. 
TABLE I. SYSTEM PARAMETERS AND SETTINGS. 
Symbol Definition Setting
N No. of sensor nodes 200/300/400/500 
X×Y Size of the sensing region 200×200 m2 
r Transmission range 10m 
T Simulation time 600 sec. 
Tslot Slot time 0.1 sec 
Ptx Pw consum. in Tx 50 mW/sec 
Preceive Pw consum. in Rx 50 mW/sec 
F Data storage frequency 100 
 
Fig. 4 shows the variation of network lifetime with 
varying number of sensor nodes. The network lifetime is 
defined as the earliest time when any of sensor node’s battery 
is dead. We have compared the performance of our scheme 
GRID-top-k with that of FILA. As shown in Fig. 4, the 
network life time decreases with increase in the number of 
sensor nodes in the network. This is because of the fact that 
with increase in the number of sensor nodes, storage cost of 
the network increases and hence the total energy consumption 
increases. Because of which the network lifetime decrease. In 
addition, our scheme outperforms the FILA scheme in terms 
of network lifetime. This is because our scheme can distribute 
data traffic and reduce sensor hotspot and FILA on the other 
hand wastes more energy because it has to update the filter. 
0 1
1
1G
3G
2G[0,0.25]
[0.25,0.5]
[0.5,0.75]
[0.75,1] 4
G
{1,0.97,0.94,0.9}
TOP 5
TOP 5 {1,0.97,0.94,0.9,0.75}
{0.75,0.6,0.55}
556 2012 IEEE Network Operations and Management Symposium (NOMS): Short Papers
An Object Tracking Scheme for Wireless Sensor 
Networks Using Data Mining Mechanism 
 
Wen-Hwa Liao 
Dept. of Information Management 
Tatung University 
Taiwan 
whliao@ttu.edu.tw 
Kuo-Chiang Chang 
Dept. of Information Management 
Tatung University 
Taiwan 
Sital Prasad Kedia 
Dept. of Computer Science 
Purdue University 
USA 
  
 
Abstract—Recently, object tracking application of sensor 
networks has drawn significant attention of the researchers due 
to its wide application. However, most of these studies cannot 
deal with the trade-off between energy efficiency and accuracy of 
the tracking. In object tracking sensor networks (OTSNs), the 
movement of the object generally follows some definite patterns. 
The moving object location, arrival time, path are likely to hide 
some useful association rules, which can be excavated by 
applying suitable data mining algorithm. In this paper, we have 
proposed an object tracking scheme for OTSNs using data 
mining approach. We have improved the Apriori algorithm for 
mining association rules and made it applicable to the OTSNs. 
The data mining algorithm is applied to the past movement 
information of the object and useful association rules are 
excavated, which are then used to predict the next location of the 
object. Our scheme predicts the next location of the object more 
accurately and increases the network lifetime. Experimental 
results have been conducted to evaluate the performance of our 
proposed scheme for OTSNs and they show that our scheme 
outperforms the existing schemes in terms of energy efficiency 
and accuracy of tracking. 
Keywords-data mining; object tracking sensor networks 
(OTSNs); wireless sensor network (WSN). 
I.  INTRODUCTION 
Wireless sensor network (WSN) is composed of large 
number of small sized, inexpensive and computable sensors, 
which are limited in power, memory and computation. 
Normally, large numbers of tiny sensors are deployed 
randomly to monitor one or more phenomena, to collect and 
process the sensed data, and to send the data back to the sink. 
The important applications of WSN include environmental 
monitoring, object tracking application, personal healthcare, 
and enemy monitoring [1][2]. These kinds of applications 
introduce new challenges for WSN, among which tracking of 
objects in sensor networks has attracted extensive attentions 
[3]. In such applications, users are interested in events instead 
of the identity of a particular sensor. Energy consumption is the 
primary consideration in designing an object tracking sensor 
network and most related research works [5][6] focus on 
reducing energy consumption. The use of a sleeping 
mechanism is one of the most effective energy saving methods. 
In object tracking sensor networks (OTSNs), power 
consumption is a major issue, which directly affects the 
lifetime of the network. Energy can be conserved in OTSNs by 
putting a sensor node to sleep when there is no object in the 
node’s sensing region and turn on a sensor node when an object 
is to enter the node’s sensing region. Based on this idea, the 
research for energy conservation in OTSNs can be classified 
into two types: non-prediction tracking and prediction tracking 
[4]. In non-prediction tracking, the sensor nodes are 
periodically put to sleep in order to conserve energy and they 
wake up after some time to monitor the sensing region and 
collect the object movement information. On the other hand, 
prediction based tracking uses the latest detected location of the 
object, its average speed and direction of travel to predict the 
next location of the object. By this way, only the sensor nodes 
at the predicted location of the objects can be active and thus 
saving significant amount of energy. However, these 
predictions may not be entirely correct, which leads to loss of 
object, and large amount of energy may be wasted in 
recovering the object. In real-world applications, the behavior 
of the moving objects is often based on certain underlying 
events, instead of complete randomness. We observe that many 
creatures such as animals, birds usually form mass organization 
and migrate together for food.  Many recent works have 
focused on application of data mining technology in OTSNs to 
discover useful association rules from past movement 
information of the object. The discovered association rules are 
then compared with the movement behavior of the object under 
observation to predict its next location. Use of association rules 
in predicting the next location of the object helps to improve 
the performance of prediction and increase the accuracy of 
tracking. 
The authors proposed an object tracking algorithm by 
mining object movement data from its temporal movement 
patterns [4]. They construct a temporal movement pattern tree 
from the temporal movement log of the object, which is used to 
identify the useful association rules and forecast the next 
location of the object. In another research work, the authors 
proposed a multi-level wireless sensor networks construction 
based on K-mean clustering technique [5]. They first conduct 
the hierarchical clustering to form a hierarchical model for the 
sensor nodes. Then the movement logs of the objects are 
analyzed by a data mining algorithm to obtain the movement 
rules, which are used to predict the next position of the object. 
The authors proposed a technique for mining region movement 
patterns based on the three kinds of movements pattern i.e., 
526978-1-4673-0269-2/12/$31.00 c©2012 IEEE
I2, I5 2 
I3, I4 0 
I3, I5 1 
I4, I5 0 
(B) 
 
We will apply the Apriori algorithm to the past movement 
logs of objects to find out association rules for movement of 
the objects. In OTSNs, an association rule is useful only when 
it follows the object movement sequence. The association 
rules, which are not part of the object movement sequence, can 
be discarded as they might not be feasible. Based on the above 
observation, we can prune the frequent item sets in each 
iteration, so that it contains only useful entries. For example, 
the candidate 2-itemsets C2 can be obtained for the transaction 
data base of Table II. Suppose that the minimum support count 
required is 2. All the entries in C2, whose support count is less 
than the minimum support are removed and the remaining 
entries of C2 form the frequent 2 items-set (L2) which has been 
shown in Table V(A).  All the entries in L2 is then searched  in 
the object movement log in the Table II  and the entries which 
are not found are discarded to form the pruned frequent 2 
itemset L2’ as shown in Table V(B). For example, L2 includes 
the entries 1ė6, 1ė10, 1ė14, and 1ė17. However, since 
only 1ė6 exists in Table II, L2’ does not includes the entries 1
ė10, 1ė14 and 1ė17. We can apply the similar procedures 
to get L3’, L4’, L5’, and L6’ as shown in Table VI. 
TABLE V. L2 AND L2’ OF OUR ASSOCIATION RULE MINING FOR OTSNS. 
L2 L2’ 
Item-set Sup_count 
1ė6 2 
1ė10 2 
1ė14 2 
1ė17 2 
2ė10 2 
2ė14 2 
2ė17 2 
3ė8 2 
3ė11 2 
. . 
. . 
. . 
(A) 
Item-set Sup_count 
1ė6 2 
3ė8 2 
6ė10 3 
8ė11 2 
10ė14 4 
11ė17 2 
14ė17 4 
17ė21 2 
17ė23 3 
21ė22 2 
23ė26 3 
26ė27 3 
(B) 
TABLE VI. L3’, L4’, L5’, AND L6’ OF OUR ASSOCIATION RULE MINING 
FOR OTSNS. 
L3’ L4’ 
Item-set Sup_count 
1ė6ė10 2 
3ė8ė11 2 
6ė10ė14 3 
8ė11ė17 2 
10ė14ė17 4 
14ė17ė21 2 
14ė17ė23 2 
17ė21ė22 2 
17ė23ė26 3 
23ė26ė27 3 
 
Item-set Sup_count 
1ė6ė10ė14 2 
3ė8ė11ė17 2 
6ė10ė14ė17 3 
10ė14ė17ė21 2 
14ė17ė21ė22 2 
14ė17ė23ė26 2 
17ė23ė26ė27 2 
 
L5’
Item-set Sup_count 
1ė6ė10ė14ė17 2 
6ė10ė14ė17ė21 2 
10ė14ė17ė21ė22 2 
10ė14ė17ė23ė26 2 
14ė17ė23ė26ė27 2 
L6’
Item-set Sup_count 
6ė10ė14ė17ė21ė22 2 
10ė14ė17ė23ė26ė27 2 
 
Fig. 2 illustrates how the node 1 decides to predict the next 
node to track the moving object. Node 1 selects the potential 
node 6 of L2’ to track the next object move path. The other 
nodes keep in sleep mode to save energy.  The Fig. 3 and Fig. 
4 show the node 6 and node 17 to predict the next node in 
OTSNs, respectively. 
 
 
Figure 2. Illustration of the node 1 to predict the next node in OTSNs. 
 
 
 
Figure 3. Illustration of the node 6 to predict the next node in OTSNs. 
 
 
 
Figure 4. Illustration of the node 17 to predict the next node in OTSNs. 
 
IV. SIMULATION RESULTS 
In this section, we evaluate the performance of our 
proposed method under varying conditions by altering the 
parameters such as number of sensor nodes and number of 
528 2012 IEEE Network Operations and Management Symposium (NOMS): Short Papers
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/22
國科會補助計畫
計畫名稱: 在無線感測網路下設計跨層的省電資料儲存機制
計畫主持人: 廖文華
計畫編號: 99-2221-E-036-036-MY2 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
