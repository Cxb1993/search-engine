  
行政院國家科學委員會補助專題研究計劃 
成果報告 
期中進度報告 
阻隔環境下之多目標多階段非等效平行機台排程求解模式建構(II) 
計畫類別： 個別型計畫  □ 整合型計畫 
計畫編號：100-2221-E-224-041  
執行期間：100 年 08 月 01 日 至 101 年 07 月 31 日 
 
計畫主持人：駱景堯 
共同主持人： 
計畫參與人員：林松農 
 
成果報告類型(依經費核定清單規定繳交)：精簡報告□完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、列
管計畫及下列情形者外，得立即公開查詢 
涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
執行單位：國立雲林科技大學工業管理學系 
 
中   華   民   國 一百零一 年  七  月 三十一 日
  
討。為了更接近真實狀況，在加入了可分割整備時間(separable setup time)、加工順序相
依之拆卸時間(sequence dependent removeal time)及搬運時間作為考量因素，以及最小化
總完工時間為目標，來決定各工作在各階段的加工順序和加工機台之安排。先建構其數
學模式用以求的最佳解，但數學模式求解過於花費時間，且只能針對小規模問題進行求
解，故使用粒子群最佳化演算法及基因演算法對較大規模問題進行求解，期望在可容許
之時間下，能快速且有效的安排生產計劃。 
    本研究探討 n項獨立工件在 m階段流程式生產環境，行加工處理，每階段各有一台
以上的平行機，其平行機之加工處裡速度不同為非等效平行機台(unrelated parallel 
machine)。各個工作在各階段上的作業時間可細分為整備、處理、拆卸及搬運時間四項，
當加工進行時需考量獨立可分割的整備時間和獨立處理時間並同時考量排序相依的拆
卸時間、各機台間的搬運時間以及阻隔條件(blocking)之限制。排程的重點在以總完工時
間(makespan)與總工作延遲時間(tardiness)最小化為目標下，決定出工件在階段上的處理
順序及加工機台的指派。本研究之問題假設如下： 
1. n項工件，m階段，各階段中都有著一台以上的平行機，平行機台為非等效平行機。 
2. n項工件，都須經過 m階段中的任一平行機台一次，工件經過階段的加工順序具有一
定順序且都相同。 
3.工件之整備時間、拆卸時間不包含於處理時間內，且整備時間為排序獨立可分割，拆
卸時間為排序相依。換言之，每一工件在每一階段中的任一平行機台上都有其固定的整
備時間、處理時間，但其拆卸時間則視下一項在同一階段中同一平行機台進行的工件而
定。 
4.每一工件在進行處理作業之前必須先進行整備作業，當處理作業完成後不需等待拆卸
作業完成，可立即進行下一階段上之可行作業(整備作業或處理作業)。 
5.每一工件在前項作業的機台加工完成後，需等待後項作業的工機台空閒方可進入其機
台加工，否則需要暫時停留在前項作業的機台中等待，當工件離開機台後才能進行拆卸
作業。 
6.當工件離開機台時，便立即進行搬運，且搬運時間會因起始機台及目的機台的不同而
有不同。 
7.在同一階段相同的平行機台上工件進行整備作業時須等待其前一項工件的拆卸作業完
成後，方可進行工件之整備作業。 
8.每部平行機台均可以運作，不考慮故障或當機的情形發生。 
 
 
2.文獻探討 
 
回顧過去學者考量阻隔條件下的排程問題所做的研究， Kamoun 和
Sriskandarajah(1993)提出考慮阻隔條件的流程型兩階段等效平行機台之排程問題中，若
第一階段中機台數為 2且第二階段機台數為 1時，此問題會近似考量非等候條件之相同
問題。Hall和 Srisk and arajah(2003)證明出考慮阻隔條件下以總完工時間(makespan)為目
標的三機台流程型排程問題為 NP-hard。Debora(2004)在考量阻隔條件的流程型排成問題
環境下，先分析過去提出的求解方式，再提出新的求解方式加以比較，並將問題規模提
升到 500個工作和 20個機台。 
回顧過去學者考量平行機台排程問題的研究，Suresh(1996)利用禁忌搜尋(tabu search)
為基礎的演算法則，對於以最小化最大總完工時間和最小化最大總延遲時間為目標之單
階段 m 台非等效平行機台排程問題進行求解。Kim 等人(2003)使用 SWPT(the shortest 
  
TPijk：工件 i在第 j個階段的機台 k上之處理開始時間。 
TRij ：工件 i在第 j個階段的拆卸開始時間。 
TRijk：工件 i在第 j個階段的機台 k上拆卸開始時間。  
Fi   ：工件 i的完工時間。 
Xijk  ：1，工件 i在第 j個階段上的機台 k作加工；0，其它。      
'ii jkU ：1，在第 j階段之機台 k上，工件 i為工件 'i 之前項作業；0，其它。 
'ii jkZ ：1，在第 j階段之機台 k上，工件 i為工件 'i 的前一項作業；0，其它。  
'ii jkY ：1，工件 i與工件 'i 都是在第 j階段中的機台 k加工；0，其它。 
( 1) 'ij j kkW + ：1，工件 i由工件由第 j階段中的機台 k搬運至第 j+1階段中的機台 'k ；0，
其它。 
Ejk  ：所有在階段 j機台 k上加工的工件集合。 
mj  ：階段 j中平行機台的數量。 
Ajk ：所有可能在階段 j中機台 k上加工工件的集合。 
Afjk ：階段 j機台 k上加工的最後一個工件。 
Cjk ：代表階段 j中機台 k上加工之所有工件之整備時間矩陣。 
'ii jkR ：在第 j階段的機台 k上，工件 'i 為工件 i的後一項作業時，機台所需之拆卸時間。 
拆卸時間矩陣： 
Cjk ： 
1 2
12 1 1 11
21 2 2 22
1 2
1 2
\
i
i
i
i
i If fi
jk ijk Ijk f jk
jk ijk Ijk f jk
i i jk i jk iIjk if jk
If I jk I jk Iijk If jk
From To Job Job Job Job Job
R R R RJob
R R R RJob
Job R R R R
Job R R R R
∞ 
 
∞ 
 
 
∞ 
 
 
 ∞ 
L L
L L
L L
M M M O M M
M M M O M M
L L
 
Tjk ：代表所有工件之搬運時間矩陣。 
' 'jj kkM ：工件由第 j階段中的機台 k搬運至第 j’階段中的機台 'k 之搬運時間。 
搬運時間矩陣： 
Tjk ： 
  
(8.2) 0≥ijTP     ji,∀  
(8.3) ijkijkij TPXHTP ≤−⋅− )1(     , , ji j k m∀ ∈  
(9.1) 
1
jm
ij ijk
k
TR TR
=
=∑     , , ji j k m∀ ∈  
(9.2) 0≥ijTR     ji,∀  
(9.3) ijkijkij TRXHTR ≤−⋅− )1(     , , ji j k m∀ ∈  
(10.1) 
( )
( )
' '
' '
0.5
0.5 0.5
ii jk ijk i jk
ijk i jk ii jk
Y X X
X X Y
 ≤ × +

× + ≤ +
    , ' ; ,jk ji i E j k m∀ ∈ ∀ ∈  
(10.2) jkiiijkijkii YUU ′′′ =+     , ' ; ,jk ji i E j k m∀ ∈ ∀ ∈  
(10.3) ijkijkii YY ′′ =     , ' ; ,jk ji i E j k m∀ ∈ ∀ ∈  
(11) 
'
' jk fjk
ijk ii jk
i A A
X Z
∈ ∪
= ∑     , , ji j k m∀ ∈  
(12) 
'
'
1
fjk
ii jk
i A
Z
∈
≤∑     , , ji j k m∀ ∈  
(13) 
'
1
jk
ii jk
i E
Z
∈
≤∑     , , ji j k m∀ ∈  
(14) 
' '
0ii jk ii jkU Z− ≥     , ', , ji i j k m∀ ∈  
(15) 1'' ≤+ ijkijkii ZU     , ', , ji i j k m∀ ∈  
(16) 
( )
( )
' ' ' '
' ' ' '
1
1
ij ii jk ii jk ii jk i j
i j ii jk i ijk i ijk ij
TR R Z H Z TS
TR R Z H Z TS
 + × − × − ≤

+ × − × − ≤
    , ', , ji i j k m∀ ∈  
{ }0,1ijkX ∈     , , ji j k m∀ ∈  
' ' '
, , {0,1}ii jk ii jk ii jkY ZU ∈     , ', , ji i j k m∀ ∈  
iF INTEGER∈     i∀  
, ,ij ij ijTS TR TP INTEGER∈     ,i j∀  
INTEGERTPTRTS ijkijkijk ∈,,     , , ji j k m∀ ∈  
模式說明： 
(1) maxC 為各工作完工時間的最大值。 
(2) 延遲時間之宣告。 
(3) 各工作完工時間為各工作在最後一階段上的開始拆卸時間加上其拆卸時間。 
(4) 工作之開始處理時間等於其整備完成時間。 
(5) 工作之開始拆卸時間小於等於其處理完成時間；由於阻隔條件的考量下當處理
作業結束後不一定能立即進行拆卸作業，需等待下一作業的機台空閒時工作方可離開
前一機台，因此作業完成後並不一定能立即進行拆卸作業。 
(6) 各工作在各階段中只需經過一台機器加工。 
  
由上述之組合可證明
'ii jkY 與 'ijk i jkX X× 可以有相同的結果，便可使用 'ii jkY 代
替
'ijk i jkX X× ，可得 jkiiijkijkii YUU ′′′ =+ 即為 (10.2)式。而 (10.3)式則是表示在
' ' 'ii jk i ijk ijk i jkU U X X+ = × 式中 ijkX 與 'i jkX 不考慮工作 i、 'i 兩工作之順序關係。 
(11) 表示任一工作在各階段任一機台加工時( ijkX =1)皆會有一後續工作，即
'
'
1
jk fjk
ii jk
i A A
Z
∈ ∪
=∑ 。 
(12) 限制在任一機台中，最後一個加工的工作最多只能有一個。 
(13) 限制在任一機台加工的工作多只能有一個前項加工工作。 
(14) 表示當工作 i為工作 'i 之前項作業(
'
1ii jkU = )時，工作 i才可能成為工作 'i
的前一項作業(
'
1ii jkZ = )，也就是 'ii jkU 必須大於等於 'ii jkZ 。 
(15) 用來限制工作 i 為工作 'i 之前後關係，當工作 i 為工作 'i 之前項作業時，
工作 'i 不可為工作 i之前一項作業，也就是當
'
1ii jkU = 時 'i ijkZ 必為 0；而當工作 i
不為工作 'i 之前項作業時，工作 'i 才有可能為工作 i之前一項作業，也就是也就是
當
'
0ii jkU = 時 'i ijkZ 可為 0或 1。 
(16) 表示若工作 i為工作 'i 之前一項作業時，工作 i’之開始整備時間須大於等
於工作 i之拆卸完成時間，若否則為無效式；相同的，若工作 'i 為工作 i之前一項
作業時，工作 i之開始整備時間須大於等於工作 'i 之拆卸完成時間，若否則為無效
式。 
 
 
4. 啟發式演算法之建構 
 
    在先前所建構的最佳解數學模式，只適用於小規模問題之求解，且需要較長的求解
時間。在本章中將使用粒子群最佳化演算法及基因演算法進行求解模式建構，用以求解
大規模問題，以期可在容許時間下求得最佳解或一近似最佳解。 
4.1粒子群最佳化演算法求解模式架構 
    在本研究中，使用 Liang 與  Suganthan[17]提出了動態多群粒子最佳化演算法
(dynamic multi-swarm particle swarm optimizer, DMS-PSO)之中粒子分群的觀念建構出兩
階段之粒子最佳化演算法求解模式。其演算法流程如圖 4.1所示，步驟說明如下： 
初始化：設定最大迭代數 Tmax、粒子數 P、群組數 G、懲罰值 M 
設定迭代數 T 、pbest=M、gbest=M 
Step 1：產生初始母體，並將母體中粒子分群。 
Step 2：計算及紀錄初始母體中各粒子之排程、總完工時間、及總工件延遲時間。 
Step 3：合適度計算。 
Step 4：分別將各分群中的各粒子之合適度與各分群中的 pbest及 gbest進行比較，合適
度值小於 pbest或 gbest，則 pbest或 gbest紀錄之排程更新為此粒子所紀錄之排
程。 
Step 5：利用門檻值及 pbest、gbest進行各粒子排程之更新。 
Step 6：選取並紀錄粒子群中最佳的解，並令 T＝T＋1。 
Step 7：若 T＞Tmax且若尚未進行母體重新分群，即進行母體重新分群(重新分群動作只
執行一次)，並將 T歸零，回到 Step 4；若否則進入下一步驟。 
  
4.1.5更新 
    在粒子群最佳化演算法中，主要的搜尋方式就是藉著更新 pbest、gbest及各個粒子
來進行，在本節中將分別對 pbest和 gbest的更新方式及粒子的更新步驟進行說明。 
pbest和 gbest的更新步驟： 
Step 1：分別比較各粒子與 pbest、gbest的總完工時間大小。 
Step 2：若粒子的總完工時間小於 pbest (gbest)的總完工時間，則將 pbest (gbest)所紀錄之
排程資訊更新為此粒子所紀錄之資訊。 
粒子(particle)的更新： 
    在粒子更新的方式中，本研究中採用一將粒子群最佳化演算法中的速率(V)轉換成門
檻值的方式來進行更新，意即：先對要進行更新之粒子工作進入階段的工作順序中每個
位置計算其是否變更工作的門檻值，再對每個位置產生一隨機變數，若其隨機變數數值
小於門檻值則將其工作換成 pbest (gbest)上所對應之工作順序位置上的工作。其門檻值
之計算方式如下： 
1 1 1
2 2 2
p
g
V c rand d
V c rand d
= × ×
= × ×
  或  
1 1
2 2
p
g
V c rand
V c rand
= ×
= ×
； 
其中， 
pV ：對應 pbest之門檻值。 
gV ：對應 gbest之門檻值。 
1d ：更新之排列與 pbest對應之工作順序中位置不同的工作數除以排序之總工作數。 
2d ：更新之排列與 gbest對應之工作順序中位置不同的工作數除以排序之總工作數。 
    除了使用門檻值之外，在本研究中使用兩種粒子更新方式，以下將對本研究所
使用的兩種方式之步驟進行說明。 
4.1.5.1粒子更新方式一(PSO_1)之步驟： 
Step 1：在粒子的排程中隨機選取一階段 j作為改善階段，分別判斷改善階段之工作順序
與 pbest、gbest在該階段之工作順序是否相同，若相同則進入 Step 1.1；若不同則
進入 Step 1.2。 
Step 1.1：計算 1 1pV c rand= × 及 2 2gV c rand= × ，將粒子在改善階段中各工作之
所在機台分別與 pbest、gbest所對應之工作所在機台進行比較，若工作所在之
機台與 pbest(gbest)所對應之工作所在機台不同，則產生一隨機變數，若此變
數之值小於 pV ( gV )，則其工作所在機台更新為 pbest(gbest)所對應之工作所在
機台，完成此階段所有工作之機台更新後即進入 Step 2。 
Step 1.2：計算 1 1 1pV c rand d= × × 及 2 2 2gV c rand d= × × ，將粒子在改善階段之
工作順序的各位置分別與 pbest、gbest所對應之工作順序之各位置進行比較，
若其位置上的工作與 pbest(gbest)所對應之位置上的工作不同，則產生一隨機
變數，若此變數之值小於 pV ( gV )，則此工作順序位置更新為 pbest(gbest)所對
應之工作順序位置上的工作，完成此階段所有工作順序更新後即進入 Step 2。 
Step 2：先將 Step 1中更新後之兩工作順序由 j+1階段開始進行工作安排，選取可先進
入階段之工件優先選派，其各階段工作安排至機台之方式由隨機決定。計算此
兩粒子的總完工時間並記錄其排程資訊。 
Step 3：比較在 Step 2中產生之兩新粒子的總完工時間，將原始粒子紀錄之排程資訊由
  
4.2.2初始族群 
本研究在基因演算法的起始族群產生方式中，也是使用 CDS法則、NEH法則及隨
機產生三種產生起始排序，同樣再以起始排序為第一階段之工作排序進行排程，以先進
先出的觀念往下安排在第一階段後之各階段中的工作指派，用以產生初始解。 
4.2.3合適度函數 
    基因演算法中的合適度函數都是以最大化為目標，但在本研究中所期望找到的加工
作業順序是能滿足總加工時間與總工件延遲最小化之雙目標，因此無法直接拿目標值評
估適合度，所以在本研究中先找出族群染色體中最大的合併目標函數值，再分別將此數
值減去族群各染色體之合併目標函數值，用以獲得各染色體的合適度函數值。整合目標
值之計算同 4.1.3節。 
4.2.4複製 
    在本研究中使用一種取後不放回的隨機抽樣方式來進行複製，其進行步驟如下： 
Step 1：計算族群中染色體的平均適合度。 
Step 2：計算各染色體適合度除以染色體平均適合度，得各染色體之適合度比值，取比
值之個位數數目為其染色體之複製數量，而其小數值則作為輪盤法選取之機率。 
Step 3：分別對各染色體複製 Step 2中決定之複製數量進入子代群族。 
Step 4：使用輪盤法則及 Step 2中決定之各染色體機率，選取進入子代之染色體。 
Step 5：重複 Step 4，直到補足子代族群所需之染色體數目。 
4.2.5交配 
在本研究中，使用雙點交配中的 LOX(linear order crossover)方式進行交配，此方法
之特性是可將父代染色體中的排序之相對位置保留至子代，如此便不至於破壞先前所搜
尋出來的順序結構。 
4.2.6突變 
     在本研究中採用隨機突變來進行，就是給定一突變率，再對每個要進行突變的染
色體給予一隨機變數，若此隨機變數小於突變率就進行突變。而突變的方式則使用隨機
兩工作交換，意即在要進行突變的染色體中隨機挑選兩位置，將此兩位置中的工作交
換，以產生新的染色體，便完成突變。 
4.2.7子代族群之產生 
本研究將父代族群中表現較好的染色體依照一開始給定的保留率保留一定數量不
變，不經過演化機制直接進入子代，在經過演化機制產生其餘的染色體數量，以此方式
產生子代染色體族群。 
 
4.3柏拉圖解之搜尋權重 
在上述兩種敢發式演算法中，柏拉圖解之搜尋方式為每一進代以不同之權重進行搜
尋，所以本節介紹於不同權重之使用下，對產生柏拉圖解集合之差異。柏拉圖搜尋可行解
過程中，其搜尋目的為找出此問題空間中之非凌駕解集合，且非凌駕解集合可創造一前緣
線，前緣線上任一點皆不會被其他點所凌駕。若一開始固定各目標之權重，即是固定柏拉
圖機搜尋方向，將造成只找出一組最終解，無法找出其他柏拉圖解。所以使用固定權重並
無法搜尋到所有之柏拉圖解，故必須使用不同搜尋方向來找尋出不同之柏拉圖解。為了產
生不同之搜尋方向，本研究以隨機方式產生各目標之權重，其公式說明如下 。 
n
i
i
rrrr
r
w
++++
=
...321
 
nrrrr ,...,,, 321 為非負隨機實數或非負隨機整數。在粒子最佳化演算法中，選取粒子最佳
  
分，經由實驗測試後採用下述之設定： 
粒子群最佳化演算法之因子設定： 
1. 學習因子 c1：使用 0.1、1等兩水準，進行實驗。 
2. 學習因子 c2：使用 0.1、1等兩水準，進行實驗。 
3. 粒子數×群數(PG)：分為 10×10、15×15、20×20等三種組合(即使用總計為 100、225、
400個粒子進行搜尋)，進行實驗。 
4. 演算法之迭代次數(I )：分為 100、200等兩種迭代次數進行實驗。 
5. 實驗題數：兩種方式分別在六種問題規模下考量階段中平行機台數為 2、3等兩種機
台數量，並使用五種比例題組，各產生 3題進行實驗。 
基因演算法之因子設定： 
1. 交配率：使用 0.5、0.9等兩水準，進行實驗。 
2. 突變率：使用 0.01、0.1等兩水準，進行實驗。 
3. 保留率：使用保留父代較優秀之前 1/2、1/10等兩種比例的染色體數量進入子代，
進行實驗。 
4. 族群數：分為 50、100、200等三種族群大小，進行實驗。 
5. 世代數：分為 100、200、300等三種世代數，進行實驗。 
6. 實驗題數：分別在六種問題規模下考量階段中平行機台數為 2、3等兩種機台數量，
並使用五種比例題組，各產生 3題進行實驗。 
 
5.2啟發式演算法執行結果分析  
本研究以總完工時間與總延遲時間最小化為目標，來探討多目標排程問題中兩種啟發式演
算法之求解效率及品質。針對求解品質方面，啟發式驗算法利用田口實驗所建議的參數組合來
搜尋柏拉圖解集合，再以柏拉圖解集合評估方式來衡量兩種啟發式演算法所搜尋之柏拉圖解集
合優劣。柏拉圖解集合評估方式為4.4節所介紹之衡量方法，考慮柏拉圖解散佈狀況及柏拉圖解
數量，衡量值越小表示其求解品值越佳。在前 5.1節所設定之六組規模問題中，考慮階段中的
機台數為兩台及三台五組時間比例與重覆實驗五次，將其執行結果列於各規模問題之柏拉圖解
集合衡量表，如表 1所示。 
由表1可得知問題規模較小時，為粒子群最佳化演算法的求解品質表現較好。當問題規模變
大，混合型基因演算法的求解品質表現較佳。在求解時間方面，粒子群最佳化演算法較混合型
基因演算法迅速。 
表1. 中大規模之柏拉圖解集合比較表 
   PSO HGA 
工作數 階段數 機台數 平均值 時間 平均值 時間 
10 5 2 1419.1 145.3 1868.3 255.5 
  3 939.6 163.4 1100.3 295.0 
10 15 2 1437.4 893.1 1210.6 761.1 
  3 673.6 1032.8 947.2 3190.9 
30 5 2 9573.4 895.6 7147.4 1366.8 
  3 7609.6 1039.1 6463.9 1449.3 
30 15 2 25936.3 5052.2 13308.4 6232.4 
  3 6626.8 5199.6 6467.6 7325.2 
50 5 2 25378.6 2173.9 20368.6 4461.0 
  3 28682.1 2492.4 7327.2 3198.6 
50 15 2 43280.5 16446.8 25570.3 32913.2 
  3 10600.4 18259.5 6955.4 27774.1 
  
pp.812-817(1994). 
12. Proust, C., Gupta, J.N.D., and Deschamps, V., “Flowshop scheduling with set-up, 
processing and removal times separated,” International Journal of Production Research, 29, 
479-493(1991). 
13. Srikanth K. Iyera, and Barkha Saxena, “Improved genetic algorithm for the permutation 
flowshop scheduling problem,” Computers & Operations Research 31 593–606(2004). 
14. Suresh, V., and Chaudhuri, Dipak., “Bicriteria scheduling problem for unrelated parallel 
machines ”,Computers and Operations Research,Vol.30,No.1,pp77-82(1996). 
15. Lian, Zhigang, Gu, Xingsheng, and Jiao, Bin, “A similar particle swarm optimization 
algorithm for permutation flowshop scheduling to minimize makespan,” Applied Mathematics 
and Computation 175 773–785(2006). 
100 年度專題研究計畫研究成果彙整表 
計畫主持人：駱景堯 計畫編號：100-2221-E-224-041- 
計畫名稱：阻隔環境下之多目標多階段非等效平行機台排程求解模式構建(II) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100% 
部分結果已整理
完成，並已投稿國
際知名學術期刊
International 
Journal of 
Production 
Research 審查中。
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
