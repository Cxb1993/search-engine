 2
(二)中、英文摘要及關鍵詞 (keywords)。 
 
中文摘要 
   本計劃提出以分散階層式之可靠群播路由協定應用於可擴充性的無線隨建即連網
絡。已提出的幾個群播路由協定利用地理位置感知算法進行資料群播樹的分組，每個
群播成員沿著群播樹成員廣播。然而，目前的地理位置感知群播協議雖可以提高網絡
的效率和編碼的負荷，但這些無狀況的群播路由協定，卻無法提供無線網路傳輸可靠
度的提升。為了避免群播源的的廣播風暴，我們提出了具有“Rendezvous  Location＂
等級的群播路由協定並提供可靠的無線網路傳輸服務，以提升階層式與穩健性的拓撲
變化時的可靠性。無線隨意即連網路(Mobile Ad-hoc Network)是一群移動式主機的相
互溝通連結，相較於傳統的無線結構式網路，不需要固定的主機做為伺服器，而是每
個節點動態的尋找周邊相近的節點相互廣播，節點與節點間需更頻繁的廣播訊息來告
知彼此的生存情況，正因如此，穩定而節能的繞徑演算法為無線隨意即連網路設計時
重要的考量。本研究結合區域分割與叢集群播演算法之優點，利用 DCA 與 AODV 協
定提出新的演算法 LDCA，即時分割區域大小並尋找每個區域內的叢集首領，行動裝
置間利用叢集首領尋找路徑與傳遞封包，解決在廣大區域時封包廣播氾濫之問題，以
期改進無線隨意即連網路在傳遞封包時因廣播氾濫所造成廣播風暴與網路資源浪費
的問題。 
 
英文摘要 
This project tries to describe a distributed, hierarchical and reliable multicast service 
for a scalable wireless ad hoc network. Several multicast protocols provide multicast  
trees  by  using  geographic  location-aware  algorithms  to  relay  forward 
information,  which  carries  tree  membership  in  each  packet  along  the  
multicast members of a multicast tree. However, current geographic location-aware 
multicast protocols can improve network efficiency and encoding overhead, but these 
stateless multicast protocols not used to ensure end-to-end delivery for all multicast 
members in a scalable multicast communication. To avoid feedback implosion at the 
multicast source, we propose a “Rendezvous Location” with hierarchical reachable 
information protocol. It provides a reliable service by using a tree-based recovery scheme 
under a circumstance of decomposition subgroups. Furthermore, it also provides a 
robustness result  to  against  a  topological  change  impacted  by  
fragmentation  caused  by  the motion failure of wireless nodes. 
 
 
關鍵詞 (keywords) 
行動隨意網路,  群播,叢集法,可靠群播路由協定 
 
mobile ad hoc network, scalable multicast, cluster scheme, reliable multicast protocol
 4
研究方法 
本文研究在無線網路下利用區域分割法建立群播叢集演算法，利用 Location-based 
Distributed clustering algorithm(LDCA)演算法算出群組中的叢集首領(cluster-header)，最後以
AODV 的方式建立群播叢集的主幹連線達成無線網路群播通訊。 
LDCA 區域分割叢集演算法 
 
Location-based Distributed Clustering Algorithm(LDCA)  
D:the set of ID＇s distance to the Center of a Circle  
{  
 
 Set the AreaStart(0,0);   //起始座標 
 Set the AreaEnd(x,y);   //終點座標 
 Set the Center of a Circle(x/2,y/2); //中心點 
 Set my_id (id , (xi,yi) ,partition_id); //節點資訊 
 Partition_id = (xi\100)+(yi\100)(x\100);  
//計算節點區域位置 
 
For(;;) //迴圈 
 { 
 For i = 0 to (x\100)*(y\100)-1;//全部區域範圍 
 If (partition_id ==i  and  my_id == min(D));  
     Set my_id = cluster_header;  
//某節點在區域中離中心點為最小值時，則為叢集首領 
 }  
  
If (my_id == Φ) stop ; //沒有新的節點加入則停止 
}  
 
LDCA 演算法實作 
 
如圖 1 是 400 平方公尺的開放區域，在這個區域中分佈了許多無線節點，每個節點皆知
道自己的獨特 id，並藉由 GPS 知道本身位置。 
分割區域 
首先我們先將此區域的座標標示出來，以左上角為起始點，標示座標為(0,0)，最右下方
為區域終點，座標為(x,y)，接著我們可以得知此區域中心點為(0+x/2,0+y/2)。在這邊我們定義
每個分群區域邊長為 100 公尺，所以我們會得到(x/100*y/100)的分割子區域，子區域中每個
節點會利用 GPS 計算並得知到自己所在的區域位置，我們利用(xi\100)+(yi\100)(x\100)算出各
節點的所在子區域，(xi,yi)是節點在區域的座標，x 則是區域的 x 軸長度。 
如圖 1，這是一個 400m*400m 的區域，以 100 為區域邊長切割，共會切出 16 個子區域，
每個子區域代表一個叢集。叢集內的所有節點皆有自己的座標位置，並由座標可得知所在區
域，假設節點座標為(132,257)，那此座標會座落在 1+2*4=9，也就是第 9 區。 
 6
 
當來源端節點想要送一個封包到某個目的端節點時，會先尋問自己區域的叢集首領是否
有這個路由資訊，叢集首領會檢查它的路由表來決定是否存在可到達目的端節點的路由。如
果有，它將直接將來源端節點封包到往下一個叢集首領傳送，直到接力傳至目的端節點。如
果路由表沒有目地的節點的話，來源節點需廣播 RREQ 封包給附近叢集首領，RREQ 封包包
括來源 IP 位址，目的地節點 IP 位址，及最後已知的序號。 
圖 3 是區域 4 的來源端節點 36 要傳送封包至區域 15 目的端節點 38。 
首先節點 36 會傳送 RREQ 給區域 4 的叢集首領節點 44 尋問在路由表中是否有節點 38
的位置，如果是，區域 4 的叢集首領會直接回覆 RREP 給節點 36，接著節點 36 可透過叢集
首領建立起與節點 38 的連線。如果否，叢集首領節點 44 會透過廣播的方式發送 RREQ 給附
近其他的叢集首領尋問節點 38 的區域位置，如圖 10，這時 RREQ 傳到了區域 15 的叢集首領
節點 39，確認節點 38 的位置後，如圖 4 回送 RREP 給區域 4 節點 44，記錄在延路叢集首領
的路由表中，此時連線已完成，節點 36 可透過叢集首領傳送封包給節點 38。 
 
 
圖 3.RREQ 路由請求              圖 4. RREP 路由回覆 
 
 8
結論  
 
在缺乏基礎建設的環境下，MANET 能把許多節點，以廣播或群播的方式，使封包能迅
速的傳達到目的地，但在節點隨意廣播之下，容易造成網路內廣播風暴，導致區域內網路壅
塞，使原有正常封包無法傳遞。本文提出一個在區域範圍較大的環境中，如何有效率地分割
為各個子區域，以子區域為叢集群組，找出各叢集間的叢集首領，各區域節點利用叢集首領
傳遞封包，使各區域節點能夠更有效率傳送與接收資料封包，以增加 MANET 在大範圍區域
內的傳輸效率，減少因不必要的廣播所帶來的網路資源浪費及風險。從本研究實驗數據看來，
4*4 區域分割時在較多節點與較長傳輸時間時效率來的比完全不分割的情況佳，但在 2*2 時
沒有明顯的提升，之後的研究可以考慮到節點間的範圍大小不同與傳輸時移動的情況。 
 
 10
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期： 99 年 7 月 01 日 
一、參加會議經過 
本人這次出國行程的主要目的是參加在韓國釜山市舉行的 The 10th International 
Conference on Algorithms and Architectures for Parallel Processing 國際會議，並發表學術
論文。此次會議主辦機構為 IEEE。本次會議共安排了多場 keynote 演講，主題包含 Cloud 
Computing: The Next Revolution in Information Technology 與 Efficient Web Browsing 
with Perfect Anonymity Using Page Prefetching 等多項重要的相關議題。 
本人這次發表論文的題目為『Wireless Bluetooth Communications Combine With 
Secure Data Transmission using ECDH and Conference Key Agreements』，安排於上午的
Oral Session-I 進行發表。這個場次也有多篇論文發表，包含網路等多項重要的相關議題，在
場多位學者對於無線網路安全均深感興趣，至於其他相關論文，對日後的研究重點有相當的
助益。 
除了發表論文之外，本人也參與會議議程。會議期間，本人聆聽了許多來自不同領域的
學者的研究心得。休息期間，本人也就所得與作者談論，受益不淺。 
計畫編號 NSC 99-2218-E-029-002- 
計畫名稱 以交會區域為基礎之階層式可靠群播路由協定運用於無線隨建即連網路 
出國人員
姓名 姜自強 
服務機構
及職稱 東海大學資管系/助理教授 
會議時間 99年 5月 21日至99 年 5月 23 日 會議地點 韓國/釜山 
會議名稱 
(中文) 
(英文) The 10th International Conference on Algorithms and Architectures for 
Parallel Processing 
發表論文
題目 
(中文) 
(英文) Wireless Bluetooth Communications Combine With Secure Data 
Transmission using ECDH and Conference Key Agreements 
附件四 
 12
四、建議 
韓國資訊科技產業飛快的起飛，。本次會議主辦單位在議程規劃及安排上，非常用心，
十分適切。可以看出韓國對於 IT 產業的重視與決心，作為同樣以 IT 產業為發展重心的臺灣，
應該特別注意中國 IT 產業的興起，特別是他們有人力資源上的優勢。 
五、攜回資料名稱及內容 
 
一份研討會論文集 CD。 
 
 
 2
 
會場接待處 
 
與會簡報情形 
二、與會心得 
   本人在這次會議中，認識許多來自不同國家、不同地區、及不同領域的學者，深感
收穫甚多。以下本人僅就這次行程中的會議過程與內容，作一簡短的心得報告。多媒體網路、
無線感知網路、多重異質網路與同儕對等式網路是網路領域近年來十分搶眼的議題，在這次
的會議中，本人也深深感受到這些領域被許多專家學者重視，仍有多項關鍵技術待進一步的
了解與分析，尋求解答。 
三、考察參觀活動(無是項活動者略) 
     略 
 Wireless Bluetooth Communications Combine With Secure Data 
Transmission using ECDH and Conference Key Agreements 
 
Hua-Yi Lin* and Tzu-Chiang Chiang**  
Department of Information Management, China University of Technology, Taiwan, R.O.C. * 
Department of Information Management, Tunghai University, Taiwan, R.O.C. ** 
calvan.lin@msa.hinet.net*, steve312kimo@thu.edu.tw** 
 
Abstract. As the fast development of Bluetooth networks and wireless communications, the 
mobile devices share information with each other easier than ever before. However, the handy 
communication technology accompanies privacy and security issues. Nowadays, a Bluetooth 
adopts peer-to-peer and Frequency Hopping Spread Spectrum (FHSS) mechanisms to avoid data 
reveal, but the malicious attacks collect the transmission data of the relay station for a long period 
of time and then can break into the system. In this study, we take a Piconet as a cube, and transform 
a Scatternet into a cluster (N-cube) structure. Subsequently, this study exploits the Elliptic Curve 
Diffie-Hellman (ECDH) [1] and the Conference Key (CK) schemes to perform session key 
agreements and secure data transmissions. The proposed scheme only needs a small key length 
160-bit to achieve compatible security levels on 1024-bit Diffee-Hellman (DH) [2], and each node 
uses few CPU, memory and bandwidth to complete security operations. As a result, the proposed 
fault-tolerant routing algorithm with secure data transmissions can perform rapidly and efficiently, 
and is quite suited for Bluetooth networks with limited resources. 
 
 
1. Introduction 
 
The Bluetooth adopts the 2.4GHz frequency band using Frequency Hopping Spread Spectrum 
(FHSS) for changing frequency 1600 times per second, and the 2.4GHz is divided into 79 channels[3]. 
For avoiding interruptions and protecting data transmissions, each hope chooses a specific channel, and 
then jumps into the other channel after 400ms as shown in Fig. 1. In a Bluetooth infrastructure, a 
Piconet consists of a master device and 7 clients, and several Piconets construct a Scatternet. The 
communication of Bluetooth devices allocated on distinct Piconets exploits a gateway node to assist in 
data transmissions. Therefore, this study considers a Piconet as a special case of a cluster. The master 
device servers as a cluster head, and the Scatternet consists of several clusters. A well Scatternet has to 
consider the routing efficiency and secure data transmissions. Nowadays, the security in Bluetooth 
networks only employs a simple Peer-to-Peer password authentication and FHSS technologies to 
protect data transmissions. However, the identification and the security key are transmitted in plain 
texts. Thus, malicious intruders can easily launch attacks such as Bluejacking, Bluesnarfing, Backdoor 
attack, Cabir worm, and L2CAP connection re-setter. Additionally, since 802.11 and Bluetooth use the 
same frequency on 2.4GHz, the neighboring devices possibly interfere with each other. Therefore, it is 
an important issue to provide a reliable and secure communication protocol. 
The Bluetooth communication has limited CPU, Memory, Power and bandwidth. Many 
asymmetric key mechanisms although provide rather secure functions, however, they need a lot of 
computing power and are not suited for Bluetooth networks. This study proposes a secure data 
transmission protocol associated with ECDH which can save resources and achieve secure data 
transmissions in Bluetooth networks. Additionally, we propose a fault-tolerant path-finding protocol 
which only needs O(n) time complexity to find a routing path in Bluetooth networks.  
The rest of this study is structured as follows. Section 2 introduces the Piconet and Scatternet 
fault-tolerant routing protocols. Section 3 describes the proposed secure data transmission scheme. 
Section 4 presents the security analyses of the proposed scheme. Section 5 depicts the computing 
evaluation. 
 
 
 
 
 
 
 
 
 (1111 XOR 0000)  1111 (choose 1000). 
(1111 XOR 1000)  0111 (choose 1100). 
(1111 XOR 1100)  0011 (choose 1110). 
(1111 XOR 1110)  0001 (choose 1111). 
(1111XOR 1111)  0000 (find the target node). 
 
3. Secure Data Transmission Protocols 
 
In this study, we consider that the Bluetooth network has limited resource. Therefore, the 
asymmetric key and public key infrastructures although provide excellent security functions, but they 
need a huge amount of computing powers and resources, and therefore are not suited for Bluetooth 
networks.  This study adopts the CK and ECDH schemes to solve the problem of constrained 
resources in Bluetooth networks. In the CK scheme, the entire system exploits a master key to 
en/decrypt transmitted data, and effectively improves the efficiency of security operations. However, in 
the initial phase, the CK scheme needs more complicated key agreement operations than the ECDH 
scheme. Oppositely, the ECDH scheme does not need to compute the master key. But, ECDH has to 
calculate a session key between each pair of nodes which want to perform secure data transmissions. 
However, only few addition and multiplication operations have to be performed in ECDH. In other 
words, the CK and ECDH schemes have different characters, but they are efficient for secure data 
transmissions. This study presents the secure data transmission scheme for CK and ECDH in the 
following sessions.  
 
3.1. Conference Key Agreement 
 
Since each Bluetooth device has a unique make address (MAC), thus we employ the MAC 
address (6 bytes) as the identification IDi, and adopt that T. Hwang et al.[4,5] proposed conference key 
algorithms to calculate the conference key K. First of all, in a Piconet, the head node chooses a 
common parameter (N, q, r, s, t, and n=qr, st=1 mod L, where L=lcm(q-1, r-1). And then we calculate 
B=(b1,b2,…,bn), 1≦bi≦L-1. Let H=(h1,h2,…hn)=(hb1 mod N, hb2 mod N,... hbn mod N), where h is a 
root of GF(q) and GF(r). Subsequently, each member Ui of the Piconet applies for private keys Zi and 
Yi from the head node using IDi. Since each Bluetooth device IDi is the verification basis, and 
IDi=(Xi1,Xi2,…Xij), Xij ∈{0,1}, 1≦j≦48. After head node receiving IDi, it performs a one way hash 
function f1(IDi)=(Yi1,Yi2,…,Yij), Yin∈{0,1}, 1≦j≦n, and then head node calculates the private key 
Zi=(IDi)d mod N for each node, where 1≦i 8≦ . 
 When the head node calculates Hi for each member (U1~U8), then chooses a random number r, 
C1=hsr mod N, and C2=ZMhf2(t,C1)r mod N, where f2 is a one way function with two parameters and t 
denotes current time and M denotes the serial number of the conference members (1~8). Subsequently, 
KMi=(Hi)sr mod N, then head node chooses a conference key from (1~N-1). According to KMi, the head 
node can construct a Larange Interpolation as follows: 
∑ ∏
= ≠= −
−
+=
7
1
7
,1
mod)(
)()()(
i ijj ji
j
i NKMKM
KMx
IDKXA  Maxaxaxa 01
5
5
6
6 ... ++++= . 
Subsequently, the head node broadcasts (C1,C2,a0,a1,…,a6,t) to the other members. Anyone receives it, 
and verifies the correct of )(mod
)(
)(
),(
1
2
112
NID
C
C
MCtf
s
= to insure that the head node is the dealer, and 
then calculates NgNCK ii
i
rsYY
M modmod)( 1 == . Consequently, the legitimate Ui can obtain the 
conference key K from A(X), where A(KMi)=a6KMi+…+a1KMi+a0 mod N = K + IDi mod N, and K = K+ 
IDi - IDi(mod N). In other words, each member has the same conference key K, and can perform the 
secure data transmission using K. 
 
3.2. Piconet and Scatternet Secure Data Transmission Protocols Using Conference Key 
 
In a Piconet, each node obtains the same conference key, if the sender Ke wants to deliver data to 
the receiver Kd, as shown in Fig. 4. The detailed secure data transmissions using the CK scheme is as 
follows: 
 
 Consider the case in ECDH, where sensor node A wants to establish a shared key with node B, as 
shown in Fig. 6. The public parameters (a prime p, a base point P as a generator in Diffe-Hellman, 
coefficients a and b, elliptic curve y2=x3+ax+b) must first be set. Additionally, each party must have an 
appropriate key pair for elliptic curve cryptography, comprising a ECC private key K (a randomly 
selected integer) and a public key Z (where Z = KP). Let a node key pair of A denote (KA, ZA), and a 
node key pair of B denote (KB, ZB). Each party must have the other party's public key. Node A 
calculates ZA = KAP, while node B calculates ZB= KBP. Both parties calculate the shared key R as R = 
KAZB = KAKBP = KBKA P = KBZA. The protocol is secure because it reveals nothing (except public keys, 
which are not secret), and because no party can calculate the private key of the other unless it can solve 
the elliptic curve Discrete Logarithm Problem (DLP). 
The ECDH scheme provides rapid and efficient operations with limited resources. Therefore, a 
node requires only addition and multiplication operations without performing exponent operations in 
DH. Consequently, this study employs the ECDH key agreement to achieve secure data transmissions 
in Bluetooth networks. 
 
3.3.1. ECDH Secure Data Transmission Protocols for Piconet 
 
In a Piconet, as shown in Fig. 4, the sender Ke wants to deliver data to the destination node Kd. 
According to the proposed routing protocol, this study can find one of the routing paths 
(KeKfKhKd). Subsequently, this study exploits the ECDH scheme to perform secure data 
transmissions along the routing path. The detailed processes are as follows: 
  
Ke  Kf 
EKKeKfP[Ke|Me|HMAC(Me)] 
 
Initially, Ke and Kf calculate the session key KeKfP for both using the ECDH scheme. Subsequently, Ke 
employs KeKfP to calculate message authentication code HMAC(Me); then Ke encrypts the passing 
node ID, transmitted data Me and HMAC(Me) using KeKfP, and then sends the entire encrypted data to 
the next node Kf. 
 
KfKh 
EKKfKhP[KfKe|(Mf||Me)|HMAC(Mf||Me)] 
 
Upon Kf receiving the transmitted data, Kf uses the session key KeKfP to decrypt the encrypted data, and 
adopts KeKfP to verify the integrity of HMAC(Me). Subsequently, Kf adds its own ID to the routing 
path; accumulates message Mf with Me, and exploits KfKhP to calculate the HMAC(Mf||Me). Eventually, 
Kf encrypts the entire data using the session key KfKhP, and deliveries them to the following node Kh. 
 
KhKd 
EKKhKdP[KhKfKe|(Mh||Mf||Me)|HMAC(Mh||Mf||Me)] 
 
After receiving the transmitted data, Kh uses the session key KfKhP to decrypts them, and verifies the 
integrity of HMAC(Mf||Me). Subsequently, Kh adds its own ID into the routing path KfKe; accumulates 
Mh with Mf||Me, and uses KhKdP to calculate HMAC(Mh||Mf||Me). Consequently, Kh encrypts the entire 
data using the session key KhKdP, and sends the encrypted data to the next node Kd . Upon receiving the 
encrypted data, Kd decrypts the encrypts data using the session key KhKdP, and verifies the integrity of 
HMAC(Mh||Mf||Me). 
This proposed mechanism is plain and straightforward with well performance and fault-tolerant 
routing functions. This system exploits a small key length with 160-bit to achieve compatible security 
levels on 1024-bit for DH or RSA, but only needs few CPU, memory and bandwidth. The proposed 
scheme is highly suited for Bluetooth networks with constrained resources. 
  
3.3.2. ECDH Secure Data Transmission Protocols for Scatternet 
 
As shown in Fig.5, Ke wants to send data to the destination node Kl, if one of routing paths is 
KeKaKbKj Kl, the detailed secure data transmission processes are as follows: 
 
 (4)The performance of secure data encryption and encryption 
 
Since the limited resource of Bluetooth networks, the asymmetric key and Public Key Infrastructure 
(PKI) need a lot of resources, and thus are not suited for Bluetooth devices. In this study, we propose a 
CK scheme. Initially, each node takes much longer time to calculate a common conference key. After 
that, each node employs the conference key to efficiently perform the secure data transmission. 
Oppositely, in initial, ECDH scheme doesn’t need to calculate the common key for each node, and 
therefore ECDH saves the key synchronization time. However, ECDH has to calculate the session key 
for each pair of nodes in every secure data transmission, and thus takes much longer time during 
transmission. However, the two proposed schemes only conserve a session key, and exploit a hash 
function such as HMAC-160 or RIPEMD-160 to verify data integrity. Consequently, they can reduce 
the operational resources and are highly suited for Bluetooth networks. 
 
5. Computing Evaluation 
 
 Since the time complexity of the routing algorithm relies on the dimension of the Piconet or 
Scatternet. In this study, the Piconet adopts a 3-dimension cube and the Scatternet adopts a 
4-dimension cube. Therefore, a Piconet only needs three phases to determine a routing path, and a 
Scatternet needs four phases to decide a routing path. The proposed scheme is rapid and efficient, and 
takes O(n) time complexity, where n denotes the dimension of the cube. Additionally, the proposed 
method provides fault-tolerant and multiple path-finding functions. Even the dedicated routing path 
collapses and the system can rapidly find a replacement path performing the routing algorithm.  
Consider the performance of secure data transmissions, the experiments are implemented on a 
MICAII-like mote production JN-5121 with 32-bit 16 MHz CPU, 96KB RAM and 64KB ROM. 
Several ECDH operations are performed on the JN-5121 platform. The mote computes a point 
multiplication in 0.18s on SECP-160 curve [7] and 5.2s to establish a session key on ECDH in the 
prime field. Additionally, we evaluate the routing algorithm and the secure data transmission on a 
Piconet and a Scatternet. 
Figure 7 demonstrates the searching time of a routing path for the Piconet and Scatternet. From 
the experimental results, we can conduct that the scheme needs few XOR operations and takes O(n) 
time complexity to find a routing path form the source node Ka (0000) to the destination node Kh 
(1111). 
Figure 8 demonstrates the comparison of three kinds of schemes (DH, ECDH and CK) on secure 
data transmission time in a Piconet using the session key scheme. As the increasing nodes, the 
experimental results show that ECDH outperforms the other two schemes on the compatible security 
level.  
Figure 9 depicts the secure data transmission time in a Scatternet. This study adopts DH, ECDH 
and CK schemes to calculate the secure data transmission time between two Piconets. During the 
transmission, since the CK scheme has to calculate the conference key in advance, therefore takes 
much longer time than the other two schemes. After that, the entire system uses the same conference 
key to perform secure data transmissions, and thus saves a lot of key agreement time. As the increasing 
nodes, the experimental results demonstrate that ECDH and CK schemes outperform DH.  
 
 
 
 
 
 
 
 
 
 
 
Fig. 7. The time complexity of finding a routing path 
for the Piconet and Scatternet 
Fig. 8. The secure data transmission time of DH, 
ECDH and CK schemes in a Piconet 
0
5
10
15
20
25
2 4 8
Number of vertexes
El
ap
se
d 
tim
e
(se
c)
ECDH-160 ECDH-224
DH-1024 DH-2048
Conf. Key
 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1 2 3 4 5 6 7
N-dimension for Piconet and Scatternet
Ti
m
e 
Co
m
pl
ex
ity
 O
(n)
 
se
c.
Routing time
 
無研發成果推廣資料 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
