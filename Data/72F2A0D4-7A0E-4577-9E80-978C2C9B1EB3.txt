 2
considering the complexity and variation of semiconductor 
wafer fabrication systems.  
The decision support system communicates with the fab 
model and contains three subsystems. They are rush order 
handling subsystem, diagnosis and maintenance subsystem, 
and knowledge management subsystem. In particular, the 
methods for knowledge extraction, learning, and update are 
provided. Also, four scenarios are provided to support 
decision making. All these scenarios are through web pages to 
achieve knowledge sharing. 
In the third year, the achievements that have already been 
completed are: (1) obtain real-time information via RFID 
information platform; (2) construction of Knowledge 
Management system; (3) comparison and implementation 
between all kinds of knowledge management methods. 
Keywords: RFID, Diagnosis, Knowledge Management, 
Dispatching Rules, Decision Supporting 
二、 緣由與目的 
Since the RFID technology has boosted rapidly and been 
integrated with manufacturing system, it demands effective 
scheduling, especially in complex manufacturing systems 
such as semiconductor wafer manufacturing. Scheduling of 
semiconductor wafer fabrication systems is a complicated and 
difficult task because of their distinguishing characteristics, 
such as re-entrant product flow, high uncertainties in 
operations, and rapidly changing products and technologies. 
Among them, the re-entrant product flow makes production 
planning and scheduling of wafer fabrication difficult. Wafers 
at different stages of their life in a fab have to compete with 
each other for the same machines. Thus, wafers need to spend 
a larger amount of their time simply waiting for machines, 
rather than for processing. The system uncertainties include 
machine failure, uncertain process yield, and rework. The 
unreliable machines disrupt the flow of wafers in a fab and 
cause the cycle time to increase and fluctuate. It is thus a 
significant challenge to develop effective scheduling methods 
in a wafer fabrication system. 
For another aspect, there is general agreement on the 
importance of knowledge management applying to the 
manufacturing systems. In the human resources field, 
knowledge management embraces the ability to define the 
skills required to perform a manufacturing operation, and to 
teach those skills for consistent, effective execution. To the 
information technologist, it may be a strategy for assuring that 
knowledge is systematically captured, updated, and available 
in a useful form to all who need it. To senior executives, it 
usually implies information and tools to assure effective 
decisions. To the manufacturing strategist, it may be the 
capture of best knowledge to create design advisors and 
automated information systems to assure that the best product 
and process designs are created and executed. It is important 
to note that, no matter what the perspective, knowledge 
management must always be applied to enable organizational 
success and never to store information for information's sake. 
All levels of the organization must be enabled to react with 
instinct and creativity towards an internal improvement or an 
external market opportunity. 
三、 文獻探討 
3.1 Radio Frequency Identification System 
RFID is a wireless communication technology applicable to 
various applications such as distribution, storage management, 
healthy care, campus security, etc. RFID systems consist of 
Radio Frequency (RF) tags, networked RF tag readers and 
antennas. Through radio, a reader can read the data from 
remote tags whether there are some obstacles between them.  
A reader can identify several different signals from different 
tags at the same time and collect data at a high rate. 
Tags can update the stored data dynamically.  
There are other features, such as durability, real-time 
transmission, etc. 
A discussion is warranted to better understand RFID. The 
following sections briefly describe some topics of RFID. 
Radio frequency identification (RFID) is expected to 
become pervasive and ubiquitous, as it can be embedded into 
everyday items as smart labels. This traditional and emerging 
technology has attracted considerable press attention in recent 
years. It has been used for automatic data collection since 
World War II, but its growth has been relatively slow through 
the past decades until the Wal-Mart publicly embraces this 
technology, the future of RFID looks increasingly brighter. 
From a functional point of view, an RFID system consists of 
three components: tag (transponder), reader and software 
application. 
Tags can either be passive or active. Passive tags are those 
which work without a power source. Active tag has an 
embedded power source. Tags which identification data can be 
embedded are devices that identify the item to which they are 
attached. RFID tags are also called transponders or 
contact-less data carriers.  
Antenna is a device which is connected with reader and 
uses radio waves to read and write data to the tags. The 
antenna is mounted under deionized water to read/write data 
to the tags while submerged. Other examples include antennas 
that offer portals around conveyors or even dock doors. These 
portals (also called tunnels and gates) read or write to 
Tags/Labels/PCBs as they pass through. 
Reader manages the communication interface between 
antennas and a PC server or network interface module. Some 
systems integrate the antenna and reader into a single reader. 
Software application reads/writes data from/to tags 
through the reader. The software application in a workstation 
or pc initiates all communications between the readers and the 
 4
CCRi (which is changed after performing step 2-(d)) 
equal to its capacity limit again. Then, the new 
product mix is derived. Let n = n + 1 and go to step 1. 
B. Support Vector Machine (SVM) 
The original idea of support vector machine (SVM) 
classification is to use a linear separating hyperplane to create 
a classifier. The support vector technique tries to find the 
separating hyperplane with the largest margin between two 
classes, measured along a line perpendicular to the hyperplane. 
This means it would find a line with parameters w and b such 
that the distance between wTx + b = ±1 is maximized [16]. 
However, practical problems may not be linearly separable. 
For this reason, SVM introduces slack variables ξ to original 
objective function and constraints [5]. 
If data are distributed in a highly nonlinear way, employing 
only a linear function causes many training instances to lie on 
the wrong side of the hyperplane. So underfitting occurs and 
the decision function does not perform well. To fit the training 
data better, a nonlinear curve should be used. Instead of 
adopting sophisticated curves, SVM maps data into a higher 
dimensional space. In higher dimensional space, it is more 
possible that data can be linearly separated. SVM then tries to 
find a linear separating plane in a higher dimensional space. 
To solve the problem effectively, the dual problem is dealt. 
The remaining issue of using the dual problem is about the 
inner product )(x)(x j
T
i φφ . If (x)φ  is an infinite-long vector, 
there is no way to fully write it down and then calculate the 
inner product. This is resolved by using special kernel 
function )(x)(x) x,K(x j
T
iji φφ=  so that )(x)(x jTi φφ  is 
efficiently calculated. Some popular kernels are polynomial 
kernel and radial basis function (RBF) kernel. For example, 
the RBF kernel is
2
ji x-x-e γ . 
The discussion so far assumes that data are in only two 
classes. Many practical applications involve with more classes. 
There are many ways to extend SVM for such cases. Two 
simple methods are one-against-all and one-against-one. The 
detail of these methods for multi-class support vector 
machines can be found in [8]. 
C. Adaptive Neuro-Fuzzy Inference System (ANFIS) 
In this section, a classic adaptive network which is 
functionally equivalent to a fuzzy inference system will be 
introduced [9]. For simplicity, we assume that the fuzzy 
inference system under consideration has two inputs x and y 
and one output f. For a first-order Sugeno fuzzy inference 
system, a common rule set with two fuzzy if-then rules is the 
following: 
Rule1 - If x is A1 and y is B1, then f1 = p1x + q1x + r1, 
Rule2 - If x is A2 and y is B2, then f2 = p2x + q2x + r2. 
As Fig. 2 shown, there are five layers of the network. Thus 
an adaptive network which is functionally equivalent to a 
Sugeno fuzzy inference system has been constructed. Next it 
shall demonstrate how to apply the hybrid learning algorithm 
to identify ANFIS parameters. For the hybrid learning, each 
epoch is composed of a forward pass and a backward pass. 
TABLE I below summarizes the activities in each pass. 
 
Fig. 2 (a) A two-input first-order Sugeno fuzzy inference system with two 
rules (b) equivalent ANFIS architecture. 
TABLE I. Two passes in the hybrid learning procedure for ANFIS. 
 Forward Pass Backward Pass 
Antecedent Parameters Fixed Gradient Descent Method 
Consequent Parameters Least Squares Method Fixed 
Signals Node Outputs Error Rates 
D. Decision Tree 
Among several different decision trees, the CART 
(Classification and Regression Tree) methodology [18] is 
technically known as binary recursive partitioning. The 
process is binary because parent nodes are always split into 
exactly two child nodes and recursive because the process can 
be repeated by treating each child node as a parent. 
CART is to look at all possible splits for all variables 
included in the analysis. Any problem will have a finite 
number of candidate splits and CART will conduct a brute 
force search through them all. Then next activity is to rank 
order each splitting rule on the basis of a quality-of-split 
criterion. The default criterion used in CART is the gini index, 
essentially a measure of how well the splitting rule separates 
the classes contained in the parent node. When a best split is 
found, CART repeats the search process for each child node, 
continuing recursively until further splitting is impossible. 
Once a terminal node is found, the group with the greatest 
representation determines the class assignment. 
At the time the maximal tree is grown and a set of sub-trees 
are derived from it, CART determines the best tree by testing 
 6
SPT Shortest Processing Time Shortest processing time first
TIS Time In System Longest one first 
SRPT Shortest Remaining Processing Time Shortest RPT first 
CR Critical Ratio Smallest one first 
LS Least Slack Smallest slack time first 
EDD Earliest Due Date Earliest due date first 
 
 
Fig. 5 Procedure of building ANFIS prediction model. 
 
Fig. 6 Sketch map of interval variant rescheduling. 
B. Procedure of Building ANFIS Prediction Model 
The entire procedure for building ANFIS prediction model 
is shown in Fig. 5. After observation of a long run simulation, 
the period between two decision points is set as 12 days. 
Between two decision points, the length of the scheduling 
intervals (SI) may be 1 day, 2 days, 3 days, 4 days, 6 days or 
12 days. For example, if SI is 2 days, scheduling will be taken 
six times between these two decision points. A sketch map is 
shown in Fig. 6. 
For the sake of on-line deciding the scheduling intervals 
between two decision points, six ANFIS prediction models are 
built, as shown in Fig. 5. Performance values of previous 
four-time scheduling are fed as the prediction model’s input, 
and then the performance of following 12-day scheduling 
result is predicted. Predicted performance values of six 
ANFIS prediction models are compared to decide the actual 
scheduling intervals between these two decision points. 
II. EXPERIMENT RESULTS 
The model used in this paper is SEMATECH 
(SEmiconductor MAnufacturing TECHnology) model 
following “300 mm Factory Layout and Material Handling 
Modeling: Phase II Report” by Campbell and Ammenheuser 
[3]. This model represents a 300 mm wafer fab with 277 tools 
belonging to 43 different tool groups distributed in 23 
intrabays. The wafer fab processes each lot with 316 process 
steps and the total processing time of each lot is about 6.756 
days. For lot releasing, nine lots of 25 wafers are started every 
8 hours. In addition, two single-wafer NPW (Non-Product 
Wafer) lots are released every 24 hours, and one 25-wafer hot 
lot is released every 72 hours. 
Cluster 1 2 3 4 5 
Gene 4 1 6 2 7 
Fig. 7 Chromosome encoding. 
TABLE III. The result of clustering the intrabays. 
 Cluster  Cluster
A_Imp 2 K_Etch 3 
B_CMP 3 M_Etch 3 
D_CMP 3 O_Etch 3 
C_Photo 3 Q_Etch 3 
E_Photo 3 S_Etch 3 
G_Photo 3 L_Furn 2 
I_Photo 3 N_Furn 1 
F_Wet_BEOL 4 P_Metal 5 
H_Wet_BEOL 4 R_Metal 5 
J_Wet_FEOL 2 T_Metal 4 
U_Test 3 V_CVD 3 
 X_CVD 3 
 
The result of clustering the intrabays of the fab is exhibited 
in TABLE III. Intrabays with the same function are almost 
clustered in the identical cluster. 
For running the genetic algorithm, every individual is 
evaluated for 15 days. The chromosome including 5 genes is 
encoded, as illustrated in Fig. 7. Each gene represents the 
 8
to build a new decision tree, so the accuracy rate will not be 
down. 
The information here is extracted from the SEMATECH 
Model’s system attributes. Fig. 9 shows the position of 
representative information with update, and it can be seen that 
the representative information is only be fine tuned. Fig. 10 
demonstrates the appearance of decision tree with update. It 
can be observed that the circled nodes’ attributes are almost 
the same with update and theirs cut values are only be fine 
tuned. For the un-circled nodes, they may be new nodes or will 
be automatically pruned with update. Fig. 11 shows the 
accuracy rate of knowledge with update and Fig. 12 reveals 
the structural complexity of knowledge with update. 
 
Fig. 8 Procedure for knowledge extraction, learning, and update. 
(a) (b) 
Fig. 9 Position of representative information with update. 
 
 
 
(a) (b) 
Fig. 10 Appearance of decision tree with update. 
 
 
86
88
90
92
94
96
98
100
1 2 3 4 5 6 7 8 9
Update Times
A
cc
ur
ac
y 
Ra
te
Decision Tree
GDA-Based Decision Tree
 
Fig. 11 Accuracy rate of knowledge with update. 
 
Fig. 12 Structural complexity of knowledge with update. 
 10
 
(e) Interface of decision support system. 
 
(f) Press the button “eM-Plant” and the model is opened. 
 
(g) Diagnosis and maintenance: select the concerned tool to monitor and start 
to monitor the tool. 
 
(h) Diagnosis and maintenance: do fault classification and take the PM task.
 
(i) Knowledge management: extract information. 
 
(j) Knowledge management: extract knowledge with decision tree. 
 
(k) Rescheduling: periodic rescheduling. 
 
(l) Rescheduling: event-driven rescheduling. 
Fig. 13 Some interfaces of decision support system. 
 
