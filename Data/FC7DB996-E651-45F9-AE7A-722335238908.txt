1MODELING AND PERFORMANCE ANALYSIS
OF OPTICAL PACKET SWITCHING WITH
PERIODIC RECONFIGURATION
Abstract—The overhead associated with reconfiguring a switch
fabric in optical packet switches is an important issue in relation
to the packet transmission time and can adversely affect switch
performance. The reconfiguration overhead increases the mean
waiting time of packets and reduces throughput. The scheduling
of packets must take into account the reconfiguration frequency.
This work proposes an analytical model for input-buffered
optical packet switches with the reconfiguration overhead, and
analytically finds the optimal reconfiguration frequency that
minimizes the mean waiting time of packets. The analytical model
is suitable for several round-robin (RR) scheduling schemes in
which only non-empty virtual output queues (VOQs) are served
or all VOQs are served, and is used to examine the effects of the
RR scheduling schemes and various network parameters on the
mean waiting time of packets.
I. INTRODUCTION
Input-buffered packet switches using hybrid
optical/electronic architecture are recently considered a
promising approach for the implementation of high-speed
scalable switches. The input-buffered architecture is a
feasible solution to meet high-speed and large-scale switching
requirements, because the architecture can internally operate
at the same speed of input/output ports. Moreover, optical
buffers using fiber delay lines are still expensive and bulky
today. Therefore, the input-buffered packet switches using
hybrid optical/electronic architecture are very interesting for
future high-capacity routers and switches.
The input-buffered packet switches require high-speed and
scalable optical switch fabrics for the packet transmission
between buffers and output ports. Recent progress in optical
switching technologies [1] has enabled these requirements.
However, input-buffered packet switches with optical switch
fabrics suffer from the overhead associated with reconfiguring
a switch fabric [2]. Reconfiguring input and output connections
in an optical switch fabric takes time, and aligning arriving
packets and the optical switch fabric also takes time. There-
fore, the reconfiguration overhead is an important issue in
relation to the packet transmission time and throughput.
This work proposes an analytical model to facilitate the
analysis on reconfiguration optimization with the minimun
waiting time for the input-buffered packet switches. It regards
switch reconfiguration as a stochastic process, and views
the arrival time and the service time of each packet as a
random variable. Switches are reconfigured cyclically, and
packets are selected in each cycle for transmission from input
buffers to outputs. The analytical model is based on Markovian
analysis, and is suitable for round-robin scheduling schemes
in which only non-empty VOQs [3] are served or all VOQs
are served. The numerical analysis demonstrates how various
scheduling schemes and network parameters affect the optimal
reconfiguration frequency.
II. INPUT-BUFFERED SWITCH ARCHITECTURE AND
SCHEDULING SCHEMES
This work considers a class of input-buffered switch ar-
chitecture with VOQs as shown in [3]. This work makes
the following six assumptions to make our analytical model
tractable:
1) All time durations are discretized and normalized so that
the service time of a packet is a multiple of the time slot.
The optical fabric forwards packets in a synchronous
fashion and on the boundary of the time slot.
2) The optical fabric is periodically reconfigured and set at
a regular time interval, T slots, referred to as a cycle.
Each cycle comprises a reconfiguration period and a
service period. Packets can be switched across the switch
fabric during the service period.
3) Each reconfiguration period takes an overhead of δ slots,
referred to as reconfiguration overhead.
4) Each VOQ is served during a fixed-length service period
of M slots, and then waits during a variable-length
vacation. Each vacation comprises a reconfiguration pe-
riod and several cycles, and the length of each vacation
depends on the scheduling scheme used in the system.
5) A served packet will be preempted if the fixed-length
service period of M slots ends and the packet transmis-
sion is still in progress.
6) Only those packets present in the served VOQ at the
beginning of a service period can be served during the
service period. The packets arriving during the service
period will not be immediately served and they need to
wait for the next service period.
Moreover, this work employs round-robin (RR) schedul-
ing schemes to study reconfiguration optimization of the
input-buffered packet switches: a basic RR scheduling
scheme (BRR) and a RR-with-empty-queues-skipped schedul-
ing scheme (RREQS). In BRR, each output uses a RR counter
to assign an input to serve in circular order. The corresponding
VOQ of the assigned input is served during a fixed-length
service period of M slots, and then waits during a vacation.
The vacation is fixed-length, because the corresponding VOQ
needs to wait for the other (N − 1) VOQs, that correspond to
the other outputs, to be served during the vacation.
3of an arbitrary slot during a vacation, respectively. [6] shows
a corresponding equation, Y (z) = χ[B(z)]. From (7) and (8),
we have
E[P ] =
E[Y ]
b
+ E[PGeoX/G/1]. (9)
B. Fixed-Time Service System with Vacations
In this subsection, we deal with a fixed-time service system
with vacations. We assume that the length of each service
period is fixed of M slots even if packets in the system may
not need M slots for transmission. In this service system,
only those packets present in the system at the beginning of
a service period are served during the service period. As the
current service period ends and a packet transmission is not
completed, the packets is preempted and the system is forced
to take a vacation. After the vacation is over, the next service
period begins and the system resumes the transmission of the
preempted packet. The unfinished work U immediately after
an arbitrary slot is distributed as the sum of UGeoX/G/1 and
Y . It is worth mentioning that the fixed-time service system
with vacations may have an unfinished work, denoted as Ue,
at the beginning of each vacation. Therefore, Y in the fixed-
time service system with vacations is distributed as the sum of
Ue and the service time brought to the system by the packets
that arrive until an arbitrary slot during a vacation.
Therefore, according to the stochastic decomposition, the
PGF U(u) of the unfinished work immediately after an ar-
bitrary slot boundary in the fixed-time service system with
vacations can be computed by
U(u) = UGeoX/G/1 × U
e(u)×
1− V [Λ[B(u)]]
E[V ](1− Λ[B(u)])
, (10)
where Ue(u) denotes the PGF of the unfinished work Ue. The
third factor of the r.h.s. of (10) is the service time brought to
the system by the packets that arrive until an arbitrary slot
during a vacation. From (10), the average unfinished work
immediately after an arbitrary slot boundary can be computed
by
E[U ] = E[UGeoX/G/1] + E[U
e] +
ρE[V (V − 1)]
2E[V ]
(11)
and E[UGeoX/G/1] =
λb(2) + λ(2)b2 + ρ(1− 2ρ)
2(1− ρ)
,
where E[Ue] is the mean unfinished work at the beginning of
each vacation.
From (9) and (11), the average number of packets can be
computed by
E[P ] = E[PGeoX/G/1] +
E[Ue]
b
+
λE[V (V − 1)]
2E[V ]
. (12)
From Little’s theorem [9], we have E[W ] = E[P ]/λ.
Now, we come to a point where E[Ue] must be computed
in order to solve E[U ], E[P ], and E[W ]. This will be shown
in the next subsection.
C. Computational Method of the Unfinished Work E[Ue]
In this subsection, we present a computational method for
computing E[Ue] of the fixed-time service system with vaca-
tions. The computational method is based on the construction
of two Markov chains described as follows.
Let us define uk as the steady-state probability that the
unfinished work Ue at the beginning of each vacation is equal
to k slots in the first Markov chain. If the sum of Ue and
the service time of the packets arriving during the vacation is
less than or equal to M slots, Ue and the service time will be
completely served during the service period. If the sum of Ue
and the service time of the packets arriving during the vacation
exceeds M slots, only M slots out of Ue and the service time
will be served during the service period. Let λv(n, i) be the
probability that the service time of the packets arriving during
a vacation is i slots and the length of the vacation is n slots,
and let λs(i) be the probability that the service time of the
packets arriving during a service period of M slots is i slots.
If the lengths of each vacation and each service period are
independent and identically distributed, λv(n, i) and λs(i) can
be calculated with the given λ(i) and b(i). The state transition
probabilities from uk to uk′ can be calculated:


∞∑
n=0
v(n){λs(0)
M−k∑
i=0
λv(n, i)} if k′ = 0
∞∑
n=0
v(n){λs(k
′)
M−k∑
i=0
λv(n, i)+
M+k′−k∑
j=max(0,M−k+1)
λs(M + k
′ − k − j)λv(n, j)} if k′ > 0.
(13)
Let Pu denote the vector version of uk, and let Tu denote the
transition probability matrix constructed from the state transi-
tion probabilities. u0 is initialized with one and uk is initialized
with zero for k = 1, 2, 3, .... Essentially, a Markov chain is a
stochastic process with the Markov property, meaning that the
next state depends only on the current state but not on any past
states. Therefore, our method recursively updates Pu through
computing Pu = PuTu until Pu converges. Finally, E[Ue]
can be calculated by
∑
∞
k=0 ukk, and E[P ] and E[W ] can be
calculated by (12) and E[W ] = E[P ]/λ, respectively.
Note that the probability distribution of v(n) may depend
on the packet scheduling scheme used in the system. The
computational method considers the scheduling schemes in
which the probability distributions of v(n) and uk depend
on each other. Let v(n) denote the steady-state probability
that the length of vacation is equal to n slots in the second
Markov chain. Let Pv denote the vector version of v(n), and
let Tv be the transition probability matrix that is determined
by the packet scheduling scheme used in the system. v(δ)
is initialized with one and v(n) is initialized with zero for
n 6= δ. The computational method uses a nested loop structure
to recursively updates Pu and Pv at the same time. Since
the probability distributions of v(n) and uk depend on each
other, the computational method uses Tu to confirm if the two
Markov chains converge at the same time.
國科會補助計畫衍生研發成果推廣資料表
日期:2012/09/05
國科會補助計畫
計畫名稱: 周期性重組光封包交換之模型化及效能分析
計畫主持人: 林偉
計畫編號: 100-2221-E-005-066- 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
