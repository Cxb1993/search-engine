英文關鍵詞： Embedded System, Low Power Software Design, Neural 
Network, CPN, DVFS 
 
 I 
中文摘要： 
 
近年來手持式裝置深入人們的日常生活當中，功率消耗的研究在可攜式裝置上已變成重要的系統
設計議題。動態電壓與頻率調整(Dynamic Voltage and Frequency Scaling, DVFS)根據處理器所運行的程
式對計算能力的不同需要，動態調節處理器的運行頻率和電壓。越來越多的動態電壓與頻率調整研究
使用學習的方式來建立動態電壓與頻率調整預測模型，而不使用複雜的數學模型。此計畫中，我們提
出了一個輕量學習導向動態電壓與頻率調整技術。此技術使用反傳遞類神經網路(Counter Propagation 
Networks, CPN)來辨別工作的行為，並預測出最理想的電壓與頻率組合，同時使用者可以選擇一個可接
受的效能數值，預測模型會根據使用者輸入的效能來判斷出可用的電壓與頻率組合。預測模型演算法
實作在Intel PXA270平台上，並使用Linux作業系統。由實驗結果來看，學習導向動態電壓與頻率調整
技術經由運行時得到的工作量統計訊息可以精準預測出合適的電壓與頻率組合，並將效能控制在使用
者可以接受的範圍內。此計畫讓使用者可以更容易選擇自己可以接受的效能範圍，並達到省電的效果。 
 
關鍵詞：低功耗設計、嵌入式行動裝置、動態電壓頻率調整、類神經網路、反傳遞類神經網路、Linux、
PXA270。 
 
英文摘要： 
 
Dynamic voltage and frequency scaling (DVFS) is an effective technique for reducing power 
consumption. A number of DVFS researches apply learning methods in an attempt to approach the DVFS 
prediction model instead of using complicated mathematical models. In this research, we propose a 
lightweight learning-directed DVFS technique using Counter Propagation Networks (CPN) to identify the 
task behavior and predict the corresponding voltage/frequency setting precisely. An adjustable performance 
mechanism is also provided to users that have diverse performance requirement. The algorithm has been 
implemented on the Linux operating system and used a PXA270 development board. The results show that 
the learning-directed DVFS method could accurately predict the suitable frequency, given runtime statistics 
information of a running program. In this way, the user can easily control the energy consumption by 
specifying allowable performance loss factor. 
 
Keywords: Embedded System, Low Power Software Design, neural network, CPN, DVFS, PXA270
 3 
監控單元(Performance Monitor Unit, PMU)監測。而 Poellabauer 等人使用緩存命中率(cache miss rates)來
計算出記憶體使用率(Memory Access Rates)，並利用記憶體使用率來預測下一個工作的執行時間。 
DVFS 研究[2,4]指出，系統的最低能量消耗可能不會出現在系統運行最低頻率的時候。R. Jejurikar
和 R. Gupta[2]指出處理器執行程式時，最低的能耗不等於處理器採用最低頻率。因處理器頻率下降會
使程式完成時間拉長，而在此拉長的時間中週邊元件如記憶體仍在啟動狀態，反而使整體能耗上升。
在處理器執行程式的過程中，往往會有特定頻率使能耗降低，這種頻率就稱為臨界速度(critical speed)。
在我們之前發表的研究中[4]，MA-DVFS 演算法就使用此方法，主要的 MA-DVFS 演算法概念是利用記
憶體存取率與臨界速度的關係來預測最低能耗的處理器速度，然而在 CPU-Memory 的 DVFS 方法裡有
一些問題依然存在。Eyerman 和 Eeckhout[5]提到 CPU-Memory 的 DVFS 方法都是使用線性的模型來預
測，但是並沒有辦法精準預測，因為同時間裡可能有多的記憶體存取 (multiple memory accesses 
overlapping in time; MLP)問題，並因此導致不準確的 DVFS 預測。由於這些問題，本計畫的動機就去找
尋一個更聰明的方式還尋找 CPU 與記憶體之間的關係來預測 CPU 頻率而不使用線性模型。 
Lahiri 等人[6]提出一個類神經網路(Artificial Neural Network; ANN)的方法來解決 DVFS 的問題，此
方法主要使用倒傳遞網路(Back-Propagation Network; BPN)去預測未來的程式工作量，根據不同的工作
量網路模型可以產生出處理器所需要的頻率。在文獻[7][8]中，Dhiman 和 Rosing 也使用一個線上學習
演算法來做 DVFS 的預測模型，並實作在 Intel PXA27x 平台上。Moeng 及 Melhem[9]使用了決策樹演算
法(decision tree algorithm)來預測DVFS。Jung和 Pedram[10][11]提出了貝式分類法(Bayesian Classification)
來預測系統的效能情況，並可以從此訊息中預測處理器頻率。還有很多的研究包括[12][13]，都開始使
用學習的方式來預測程式行為以及頻率，但是還有一些需要考量的因素，Rangan[14]就提出說 DVFS 演
算法不應該太過複雜，不然會導致作業系統排程的負擔，影響到整個程式的執行時間和總能量消耗。 
此計畫提出一個輕量化的學習導向動態電壓與頻率調整機制，我們叫它 CPN-DVFS 演算法。其基
本概念是將DVFS的問題轉化為一個分類(Classification)問題，利用類神經網路(Artificial Neural Network; 
ANN)裡的反傳遞類神經網路(CPN)來執行此學習的控制演算法。 
研究方法 
反傳遞類神經網路(CPN)[16]該方式利用人類經驗法則的學習及判斷方式，建構包含一個輸入層、
一個隱藏層及一個輸出層的反傳遞網路，在網路學習階段將輸入的資料依資料點的相似程度自動予以
分類，架構出一規則庫形式(IF-THEN)之類神經網路；在網路輸出方面則應用模糊控制的方法，將輸入
值與網路訓練所得的規則庫比較，依不同的相似程度予以量化，並以模糊權重的方式求得網路輸出值；
模式隨著歷史資料的增加，可以自動地增加規則數，增加推估的能力。 
CPN 具備網路平行架構在分類的優越效果及非線性函數的良好模擬效率，使得此網路模式應用於
圖形分類、函數近、統計分析及資料比對等均有不錯的效果。CPN 網路主要由架構中的輸入層、隱藏
層(又稱為 Kohonen 層)及輸出層(又稱為 Grossberg 層)之節點結合而成的類神經網路，其結構示如圖 1。
網路輸入值(X)經由一個邏輯判斷而產生輸出值(Y)，該邏輯判斷就稱之為一個規則，而 CPN 網路如同
由很多的 If-Then 規則組合而成，Kohonen 層中各節點與輸入層間的鍵結 w 有如規則控制中的 IF 敘述
部份，而各節點與 Grossberg 層的鍵結π則有如規則控制的 Then 敘述部份，因此每個節點與輸入層及
Grossberg 層間的鍵結關係可視為一完整的 IF X is w, Then Y is π的規則敘述，所以 CPN 網路基本上就
是由許多規則集合而成的規則庫。 
 5 
當做輸出向量 y。 
 
w1
w2
wi
wn πn
πi
π2
π1
… …
……
Input vector
x
Output vector
yi
 
圖 2. 反傳遞類神經網路功能查找表 
根據以前的 DVFS 研究[1][2][3]指出 CPU 頻率與記憶體存取率有很相近的關係，所以此計畫使用
記憶體存取率來當作程式的行為指標，其記憶體存取率公式如下所示： 
     
ExecutednInstructioofNumber
MissCacheIntructionMissCacheData
MAR
___
____ 
                 (3) 
其中 Data Cache Misses 是指處理器內快取資料失誤的次數，表示需從外部記憶體(如：SDRAM)讀取所
需資料的頻率，而 Number of Instructions Executed 則是指已經執行的指令數。而在(7)所定義的記憶體存
取率(MAR, Memory Access Rate)中，針對於不同的工作型態而有不同的數值，以 CPU-bound 之任務來
說，所得到的 MAR 數值將會偏低；以 Memory-bound 之任務來說，所得到的 MAR 數值將會偏高。所
以記憶體存取率跟理想電壓/頻率值是有正向的關係，所以我們在效能監控單元挑 Data Cache Miss、
Instruction Cache Miss 和 Instruction was executed 為訓練之資料。此外，由於對系統進行 DVFS 的調整
雖然可以節省能耗，但可能也會降低效能，因此，我們也將把動態電壓/頻率調整對於效能的影響列入
考慮，由使用者或作業系統依系統狀態提供效能損失之忍受值，結合具備回饋機制的動態電壓/頻率演
算法做出更合適之電源管理決策。 
Performance 
instructions 
executed
data cache 
misses
instruction 
cache miss
Frequency
…
Hn
H6
H5
H4
H3
H2
H1
 
圖 3. CPN-DVFS 架構圖 
 7 
 
圖 5. PXA270 支援電壓與頻率表 
實驗一開始，我們觀察 gzip_b 的能量消耗以及執行時間在 CPN-DVFS 效能為 70 以及 90 之前的差
別。如圖 6，CPN-DVFS_70 在能量消耗的表現比 CPN-DVFS_90 出色許多，但是 CPN-DVFS_70 的執
行時間卻比 CPN-DVFS_90 還要長。主要的原因為 CPN-DVFS_70(30%時間延遲)可以容忍比較多的效能
流失，所以選擇的頻率當對於 CPN-DVFS_90(10%時間延遲)還要低很多，所以能量消耗也會比較低。 
 
圖 6. gzip 在 CPN-DVFS_90 與 CPN-DVFS_70 的執行時間與能量消耗 
圖 7 為各種不同演算法的能量消耗比較，由左至右分別為 MA-DVFS、CPN-DVFS_70、
CPN-DVFS_90、Ondemand governor 以及 Performance governor。CPN-DVFS_90 節省了 5%到 20%的總
能耗，從圖來看結果比 Ondemand governor 和 Performance governor 能耗結果還要好。MA-DVFS 節省了
8%到 32%的總能耗，而 CPN-DVFS_70 節省了 9%到 42%總能耗，CPN-DVFS_70 展現了最好的節省能
耗結果，因為 CPN-DVFS_70 能夠承受較大的延遲。在此計畫的實驗裡，我們也實驗了效能低於 70 的
CPN-DVFS 演算法，但是總能耗卻沒有比 CPN-DVFS 還好。這結果表示一味了拉長延遲來達到節能的
效果是不正確的方法，因為效能越差執行時間就會拉長，雖然功耗戰時降低，但是執行時間拉長卻使
總能耗升高。所以我們在此實驗裡建議使用者設定的效能最好要高於 70。 
在 DVFS 的研究裡，權衡執行時間與總能耗是很重要的議題，如果降低的能耗很小反而拉長很多
執行時間，這是得不償失的做法。本實驗中，為了權衡執行時間與總能耗，我們也實驗了能耗延遲乘
積(Energy Delay Product; EDP)的結果。圖 8 顯示了各種不同演算法的 EDP 結果，較低的 EDP 值通常意
味著效能與能耗之間的平衡較好。在 EDP 的實驗裡，一開始我們先將能耗與執行時間與 Performance 
governor 的能耗與執行時間做正規化，接著把正規化好的能耗與執行時間相乘得到 EDP。從圖結果來
看，CPN-DVFS_90 的 EDP 值都比 MA-DVFS 以及 MA-DVFS 還要好。CPN-DVFS_70 在大部分的
Benchmark 裡的結果都比較差，這是因為 CPN-DVFS_70 將執行時間延遲固定在 30%，如果我們的程式
大部分是 CPU-bound 程式的話，會導致能耗可以節省的時機不多，但是在某些 Memory-bound 程式裡，
卻因為有機會可以降低很多能耗而得到很好的結果。從圖舉例來說，gzip 程式是一個 Memory-bound 程
式，所以在 CPN-DVFS_70 的 EDP 卻是最出色的。因此我們在這裡做一個總結，如果效能與能耗都必
 9 
on Computer-Aided Design of Integrated Circuits and Systems, May 2009, pp.676-689. 
[9]  M. Moeng and R. Melhem, “Applying statistical machine learning to multicore voltage & frequency 
scaling,” In Proc. of the 7th ACM international conference on Computing frontiers. 2010, pp. 277-286. 
[10]  H. Jung and M. Pedram, “Improving the Efficiency of Power Management Techniques by Using Bayesian 
Classification,” in Proc 9th International Symposium on Quality Electronic Design, 2008, pp. 178-183. 
[11]  H. Jung and M. Pedram, “Supervised Learning Based Power Management for Multicore Processors,” IEEE 
Transactions on Computer-Aided Design of Integrated Circuits and Systems, Sept. 2010, pp.1395-1408. 
[12]  G. Tesauro, R. Das, H. Chan, J. Kephart, D. Levine, F. Rawson, and C. Lefurgy, “Managing power 
consumption and performance of computing systems using reinforcement learning,” In Proc. of NIPS, 
2007. 
[13]  C. Isci, G. Contreras, M. Martonosi, "Live, Runtime Phase Monitoring and Prediction on Real Systems with 
Application to Dynamic Power Management," in proc. 39th Annual IEEE/ACM International Symposium 
on Microarchitecture, Dec. 2006, pp. 359-370. 
[14]  K. K. Rangan, G.-Y. Wei, and D. Brooks. “Thread motion: fine-grained power management for multi-core 
systems,” in Proc. 2009 SIGARCH Comput. Archit. 2009, News 37, 3. 
[15]  M. R. Guthaus, J. S. Ringenberg, D. Ernst, T. M. Austin, T. Mudge, and R. B. Brown, “Mibench: A Free 
Commercially Representative Embedded Benchmark Suite,” IEEE Int’l Workshop on Workload 
Characterization, Dec. 2001, pp. 3-14. 
[16]  R. Hecht-Nielsen, “Counter-propagation networks.” In Proc. 1987 Applied Optics, 1987, pp. 4979-4984 
[17]  V. Pallipadi and A. Starikovskiy, "The on-demand governor-past, present, and future", In Proc. Linux Symp, 
2006, p. 223. 
[18]  Intel XScale® Technology, available on http://www.intel.com/design/intelxscale/ 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
 100 年 06 月 20 日 
報告人姓名 
梁 文 耀 
Wen-Yew Liang 
服務機構 
及職稱 
國立台北科技大學 
資訊工程系助理教授 
     時間 
會議 
     地點 
100/06/14~100/06/17 
 
新加坡 
本會核定 
補助文號 
NSC 99-2221-E-027-047- 
會議 
名稱 
 (中文) IEEE 第十五屆國際消費性電子研討會 
 (英文) The 15th IEEE International Symposium on Consumer Electronics 
(ISCE-2011) 
發表 
論文 
題目 
 (中文) 以電池為供應電源的嵌入式系統上考慮效能與記憶體存取影響因
子的處理器能耗節省演算法 
 ( 英文 ) A Memory-aware Energy Saving Algorithm with Performance 
Consideration for Battery-enabled Embedded Systems 
報告內容： 
 
    感謝國科會的補助，使我有機會到新加坡參加這次會議並發表論文  “A 
Memory-aware Energy Saving Algorithm with Performance Consideration for 
Battery-enabled Embedded Systems”。本次的會議名為“2011 IEEE 國際消費性電子會議
(The 15th International Symposium on Consumer Electronics” (簡稱 ISCE 2011)是 IEEE 
Consumer Electronics Society 所舉辦的國際會議，今年為第十五屆，於 2011 年 6 月 14
日至 2011 年 6 月 17 日舉行，內容涵蓋(i) Basic Technologies for Consumer Electronics, (ii) 
Key Entertainment and Information Systems, (iii) Consumer Electronics for Health-care & 
Wellness, and (iv) Enabling Technologies 等四大主軸。論文集同時收錄於 IEEE Xplore 資
料庫中。除了於該會議發表論文之外，個人並受邀擔任其中一場論文發表議程(Session 
#17)之議程主席。 
 
一、參加會議經過 
這次在新加坡所舉行的第十五屆IEEE國際消費性電子會議(ISCE 2011)共計四天，地
點在新加坡Singapore Management University舉行。主辦單位在四天的研討會中安排了非
常豐富的內容。會議一共包含三個大會主題演講，以及23個Oral議程，在三個會議室中
同時進行，。議程進行的過程大致如下：第一天(6/14)的議程包括報到、開幕式、主題
演講、及論文發表。第二天(6/15)議程主要包含主題演講與論文報告，當晚主辦單位亦
安排歡迎酒會。第三天 (6/16)亦為主題演講為論文報告。第四天(6/17)則為CE相關
Tutorial，主題為：Grounding: The Grounds for EMC Design。個人論文報告時間為第三天
下午1:45 (Session #21)，過程非常順利，報告完後即刻有四個問題的討論。個人同時並
擔任第三天上午11:00~12:15的Session#17 (主題：多媒體訊號處理#5)議程主席，亦順利
引導四篇論文的報告與答詢。總而言之，研討會舉行過程相當順利，與會學者分別就不
同主題發表論文或演說、並廣泛地討論及交換意見。 
 
 
二、與會心得 
  參加此次的國際會議，收獲良多。特別是 IEEE Consumer Electronics Society 為一結
附
件
三 
 
Program Guide / Proceedings Cover Page 
 
會議報到處 
 
Keynote Speech 
 
Session Chair 
 
Paper Delegate 
 
論文報告會議室 
 
研討會晚宴 
 
  
achieve the minimum energy consumption. This is because as the 
CPU frequency is decreased, the total execution time will be 
increased. Since memory is always kept active when the 
processor is in execution, the extended execution time may cause 
the total energy consumption to increase. This explains the cause 
of the observation about the critical speed. 
In this paper, we propose a memory-aware DVFS algorithm 
based on a relationship between the memory access behavior, 
defined by MAR, and the critical speeds. An approximation 
equation is deduced from the relationship to predict the critical 
speed which tends to minimize the energy consumption. Since 
the resulting performance could be sacrificed at this frequency 
level, a frequency higher than the critical speed will be used 
instead. We have implemented the algorithm as a user-space 
policy manager on the Linux operating system for dynamic 
processor power management. The PMU is used to get the run-
time information about memory accesses. The algorithm and the 
implementation are described in the following sections in detail. 
3. THE PROPOSED DVFS ALGORITHM 
To investigate how external memory accesses affects the energy 
consumption, we first define the memory access rate (MAR) 
indicator to represent the memory access property of a program. 
The MAR is defined as a ratio of the total number of data and 
instruction cache misses (Ncache_miss) to the number of instructions 
executed (Ninstr_exec), as below.  
 
 execinstrmisscache NNMAR __ /=
 (1)  
As described in previous sections, the required information for 
MAR can be obtained from the underlying hardware counters if 
available. A higher MAR value indicates that the program tends 
to be a memory-bound program, whereas a lower value shows 
that it tends to be a CPU-bound program. 
Table 1 lists the critical speeds and the MAR values of several 
benchmarks that we have measured. The critical speed is 
normalized with respect to the highest frequency of the used 
platform. We chose MiBench [3] as the benchmark suite. The 
selected benchmark programs include basicmath, bitcount, fft, 
sha, susan, jpeg, and mad. In considering that the problem size 
may affect how a program behaves, each benchmark program 
was tested with a larger and a smaller size of input data.  
From the table, we can find that MAR is inversely proportional 
to the critical speed: a program with higher MAR has a lower 
critical speed, whereas a program with lower MAR has a higher 
critical speed. This implies that a memory-bound program may 
have higher opportunity to consume lower energy at lower 
frequency. On the other hand, the energy consumed by a CPU-
bound program may soon be raised if the CPU clock rate is 
further decreased, since it has a higher critical speed. 
To formally describe the relationship between the MAR and the 
critical speed, we have created an approximation equation by the 
least square curve fitting method from the measured data. The 
equation is called the Memory Access Rate - Critical Speed 
Equation (MAR-CSE), as below.  
 797.082.3797.185504.30474 23 +−+−= mmmcs (2) 
In the equation, cs is the critical speed, and m is the MAR value. 
MAR-CSE can be used to predict the critical speed during 
program execution time when the run-time MAR information can 
be obtained from the hardware counters. Note that the critical 
speed needs to be mapped to a discrete frequency supported by 
the processor before it can be applied to the processor. Since the 
critical speed is mainly for the lowest energy consumption, 
which may sacrifice the performance, we choose to use a 
supported frequency which is slightly higher than the critical 
speed, so that a better performance can be obtained while 
keeping the energy consumption at a lower level. The proposed 
algorithm is listed in Fig. 1. 
Table 1. Critical speed and MAR for the benchmarks 
Benchmarks MAR Critical Speed 
bitcount_b  0.000171 0.785 
fft_b  0.001489 0.7628 
bitcount_s  0.00182 0.7377 
fft_s  0.00236 0.754 
basicmath_s  0.002597 0.7201 
sha_b  0.003209 0.6685 
mad_b 0.003319 0.6567 
susan_b  0.003708 0.6421 
basicmath_b  0.005748 0.6888 
mad_s  0.00848 0.5885 
susan_s  0.009569 0.5806 
sha_s  0.010571 0.5305 
jpeg_b  0.013905 0.5854 
jpeg_s  0.015367 0.56 
Note: Program names appended with _b and _s are for large 
and small data size, respectively. The environment is the Linux 
kernel 2.6.25 over the Creator PXA270 board. 
 
 
Figure 1. The proposed DVFS algorithm. 
In the algorithm, a value above the critical speed will be set as 
the target frequency (at line 7-8). To determine a proper 
frequency which can be used as the target frequency, two 
frequencies close to the critical speed were evaluated in this 
study. One is the frequency immediately above the critical speed, 
and the other is the next higher frequency. If such frequency does 
not exist, the closest frequency supported by the processor will 
be used directly. 
4. IMPLEMENTATION 
We have implemented the algorithm on the Linux operating 
system. In Linux, the CPUfreq subsystem provides a 
DVFS algorithm 
Requirement: The counter information in PMU 
1. initialize PMU counter registers. 
2. pmu_start() for first times calculate. 
3. for every execution interval do 
4. pmu_stop(); 
5. calculate MAR (cache misses/instruction count) 
6. cs = get_critical_speed_by_lookup_table(MAR); 
7. target_freq = map_to_target_freq(cs); 
8. set_freq(target_freq); 
9. pmu_start(); 
10. end for 
  
0
2
4
6
8
10
12
14
basicmath_b basicmath_s bitcount_b bitcount_s fft_b fft_s sha_b sha_s mad_b mad_s susan_b susan_s jpeg_b jpeg_s
Ex
ec
ut
io
n 
Ti
m
e 
(s
)
Execution Time
preformance
ondemand
DM-DVFS1
DM-DVFS2
 
Figure 4. Execution time of the benchmarks. 
0
0.2
0.4
0.6
0.8
1
1.2
1.4
basicmath_b basicmath_s bitcount_b bitcount_s fft_b fft_s sha_b sha_s mad_b mad_s susan_b susan_s jpeg_b jpeg_s
EDP
ondemand
DM-DVFS1
DM-DVFS2
 
Figure 5. EDP of the benchmarks. 
 
Since improvements to the energy consumption and the 
execution time usually go in different directions. We use the 
energy-delay production (EDP) as a fair comparison metric. A 
lower EDP value usually implies that a balanced result between 
performance and energy consumption has been achieved. For our 
results, the energy consumption and the execution time are first 
normalized to the values of the Performance governor, and then 
multiplied to get the EDP values. Fig. 5 shows the EDP results. 
From the figure, we can see that DM-DVFS1 governor is worse 
than the other governors due to much longer execution time. On 
the other hand, for DM-DVFS2, most of the results are better 
than that of the Ondemand governor. The EDP values are lower 
than the values of Ondemand from 0.5% to 12.5% with 8.4% in 
average. These results indicate that the DM-DVFS2 governor can 
be better than the Ondemand governor when both the energy 
consumption and the performance are considered at the same 
time. 
6. CONCLUSIONS 
In this paper, we proposed a memory-aware DVFS algorithm 
which considers the performance issue. To predict an appropriate 
frequency for the system, an equation called MAR-CSE can be 
constructed from an analysis of the relationship between MAR 
and the critical speed over the benchmark programs on the target 
platform. During the task execution time, a dynamic MAR value 
can be obtained from the PMU hardware counters and then 
applied to the equation to get a frequency, i.e. the critical speed, 
which tends to minimize the energy consumption. In order to 
maintain better performance while trying to minimize the energy 
consumption, we use a frequency slightly higher than the critical 
speed instead.  
Two frequencies have been evaluated in this paper: the first one 
uses the frequency immediately above the critical speed, and the 
second one adopts the next higher frequency. The DVFS 
governor have been realized on an Intel PXA270 XScale 
platform. Experiment results show that the second higher 
frequency can be better than the Linux Ondemand DVFS 
implementation when both the energy consumption and 
performance are concerned. For the benchmark programs, 
although the average execution time of our implementation is 
longer than that of the Ondemand governor by 7.4%, the energy 
consumption was reduced by 15.4% in average. This resulted in 
better EDP values. The average EDP value is 8.4% lower than 
that of the Ondemand governor. The future work of this research 
will be to consider the input and output behavior of the 
application programs in the algorithm. 
7. ACKNOWLEDGMENT 
This research was partially supported by National Science 
Council, Taiwan under grant NSC 99-2221-E-027-047. The 
authors would like to thank the reviewers for their valuable 
comments. 
8. REFERENCES 
[1] K. Choi, R. Soma, and M. Pedarm, “Dynamic voltage and 
frequency scaling based on workload decomposition,” in 
Proc. 2004 Int. Symp. Low Power Electronics and Design, 
Aug. 2004, pp. 174-179. 
[2] K. Choi, R. Soma, and M. Pedram, “Fine-grained dynamic 
voltage and frequency scaling for precise energy and 
performance trade-off based on the ratio of off-chip access 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/11/30
國科會補助計畫
計畫名稱: Android上以系統即時資訊為基礎並採用機器學習之低功耗作業系統核心軟體
設計之研究
計畫主持人: 梁文耀
計畫編號: 99-2221-E-027-047- 學門領域: 計算機結構與計算機系統
無研發成果推廣資料
Surveillance 
Systems,’’ AICIT 
Journal of 
Convergence 
Information 
Technology, Vol. 6, 
No. 2, pp. 306 ~ 
318, 2011. NSC 
99-2221-E-027-047. 
(EI) 
研究報告/技術報告 0 0 0%  
研討會論文 1 1 100% 
Wen-Yew Liang, 
Yen-Lin Chen, and 
Ming-Feng 
Chang, ’’A 
Memory-aware 
Energy Saving 
Algorithm with 
Performance 
Consideration for 
Battery-enabled 
Embedded 
Systems,’’ 
accepted to appear 
in The 15th IEEE 
Symposium on 
Consumer 
Electronics (ISCE 
2011), Jun. 14-17, 
2011, Singapore, 
NSC 
99-2221-E-027-047. 
(To be available on 
the IEEE Xplore 
website.) 
專書 0 0 0% 章/本  
申請中件數 0 0 0%  專利 已獲得件數 0 0 0% 件  
件數 0 0 0% 件  
技術移轉 
權利金 0 0 0% 千元  
碩士生 0 0 0%  
博士生 0 0 0%  
博士後研究員 0 0 0%  
參與計畫人力 
（外國籍） 
專任助理 0 0 0% 
人次 
 
