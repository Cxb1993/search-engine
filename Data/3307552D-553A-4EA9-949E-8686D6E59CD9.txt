計畫中文摘要。 
關鍵詞：內容調適, 轉碼代理服務, 多媒體, 無線網路, 行動計算 
最近幾年來，由於無線網路的快速發展，再加上時下個人化行動設備的運算能力越來
越強大、通常內建無線網路連線能力等特性，隨時可以看到使用者手持行動設備在任何時
間、任何地點經由這些無線網路存取網路上的資訊。因此所謂的 content provider 便開始提
供如道路導航資訊、與地理位置相關的娛樂訊息、和天氣預報等即時多媒體資訊服務。 
然而要建構這樣子的一個行動運算環境所面臨的一個問題便是各個行動設備之間硬體
規格的差異可能相當地大。因此 content provider 必須依據這些行動設備的運算能力、網路
連線速率、記憶體容量及影像解析度等條件對使用者所要求的多媒體文件進行所謂的
transcoding，以確保該份多媒體文件下載到使用者的行動設備上時是可被瀏覽的。但是對於
某些文件而言，不適當的 transcoding 會造成重要資訊的流失或是扭曲的問題。 
此外，將一文件全部都作 transcoding 會增加 servers 或 proxies 的負擔，進而增加了使
用者收到文件的 response time。因此在本計劃中，我們提出多媒體文件元件化的概念，也
設計了能善加利用文件元件化的特性及 on-demand data broadcasting 技術的 transcoding 
proxy 系統架構。元件化的多媒體文件提供了關於其資訊內容相對重要性的元資料使得
transcoding proxies 不會因為盲目地 transcoding 而造成資訊失真的問題並能降低整個系統的
負載。重複的元件可以互相合併，讓需要這個元件的行動設備經由一次的 broadcasting 就同
時能接收到以節省頻寬。 
我們將設計和實作出可元件化的多媒體文件語法與相關的瀏覽器和編輯器，並根據設
計的系統所建立系統模擬器，藉著系統模擬分析與效能評估來調整及改進設計。接著，我
們將根據調整以及改進後的架構來實作出整個系統。我們相信本計畫的完成將可提高人們
日常生活中行動計算的方便性，並進一步擴大行動商務的商機。 
 
計畫英文摘要。 
Keywords: Content Adaptation, Transcoding Proxy, Multimedia, Wireless Networks, Mobile 
Computing 
Last years have seen the emergence of a multitude of mobile equipments, such as laptops, 
personal digital assistants (PDAs), and smart phones, connected to the Internet. These devices can 
be connected to the Internet through different networks. As a consequence, content providers are 
establishing a number of mobile services such as route guidance, location-dependent 
entertainment information, and weather forecasting. 
However, mobile devices differ significantly in their hardware characteristics, which bring 
many challenges to design of mobile information systems. As a result, it becomes necessary to 
adapt distributed multimedia documents according to capabilities of mobile devices or network 
traffic. For instance, the information system will transmit the complete version of the requested 
document to a high-end device, but may omit all video clips and images to reduce document 
processing requirements for a less capable device. However, there may be problems with such a 
multimedia-omission approach. 
Furthermore, fully transforming a document will cause extra burden on the system and 
increase response time. Thus, in this project, we propose a new transcoding proxy architecture by 
utilizing the concept of composite multimedia document structure and request merging with 
on-demand broadcasting technique. The proposed document structure allows transcoding proxies 
 一、 前言與研究目的 
隨著行動通訊的驚人迅速成長，各式各樣的行動裝置，例如，個人數位助理（PDA）、
智慧型手機、手持式電腦、以及網頁電視（WebTV）都逐漸地能夠存取網際網路 [2][1]。 
大部份現有的HTML文件都是被產生用來在桌上型電腦上顯示 [2][7]，而且網頁的設計
者喜歡提供複雜、詳細的內容，以及充滿大量多媒體的網頁 [5]。結果由於行動裝置上的解
碼能力、記憶體、可顯示的最大顏色數、顯示器尺寸、以及HTML文件編碼的各項規格不
同可能會產生資訊呈現產生了不協調的問題 [3][4][5][1][7]。 
為了處理這個不協調的問題，一個解決方法便是針對不同能力裝置提供同一份HTML
原始文件但不同的版本 [2][5]。這個提供內容調適的程序稱為轉碼[7]。轉碼也可以根據使
用者的喜好以及互通的內容提供不同的版本。 
轉碼不僅可以配合客戶端裝置提供合適內容外，也可以進一步地整合了轉碼後的結果
來迎合使用者的需求，例如摘要文件或語言翻譯 [6]。本次計畫主要在於將原本適合在PC
上瀏覽的blog網頁經由關鍵內容的擷取重新整合，使得內容更容易在行動裝置上瀏覽。 
二、 參考文獻 
 
[1] J. Smith and R. Mohan and C. Li, “Transcoding Internet Content for Heterogeneous 
Client Devices,” IEEE Int. Conf on Circuits and Syst.（ISCAS）, May 1998. 
[2] Y. Whang, C. Jung, J. Kim and S. Chung, “WebAlchemist: A Web Transcoding System for 
Mobile Web Access in Handheld Devices,” In Proc. of SPIE Vol. #4534, Aug 2001. 
[3] R. Schaefer, A Dangberg, W. Mueller, “Fuzzy Rules for the Transcoding of HTML Files,” 
HICSS 35, Hawaii, USA, Jan 2002. 
[4] A. Singh, A. Trivedi and K. Ramamritham, “PTC: Proxies that Transcode and Cache in 
Heterogeneous Web Client Environments,” WISE 2002, Singapore, Dec 12 - 14, 2002. 
[5] J.C. Mogul, “Server-Directed Transcoding,” Computer Communications 24（2）:, 
pp.155-162, Feb. 2001. 
[6] B. Knutsson, H. Lu and J. Mogul, “Architecture and Pragmatics of Server-Directed 
Transcoding,” Proc. 7th International Workshop on Web Content Caching and 
Distribution, Boulder, Colorado, August 2002. 
[7] Hori M. Kondoh G., Ono K. Hirose S. and Singhal S, “Annotation-based web content 
transcoding,” In Proc. of Ninth Internetional WWW Conference, pp. 197-211, 2000. 
 
三、 成果報告 
1. 概觀 
 
本次計畫使用案例圖、關係圖、與系統架構圖分別如下 
 
 
 圖表 3 系統架構圖 
 
2. 系統架構與關係圖相關說明 
 
z index.php : 包含登入函數，得知使用者帳號，並利用該資訊搜索資料庫中資料，比對
後整理成變數及陣列後，傳送到瀏覽介面 
z main.php: 將從 index.php 傳來變數及陣列分析後，配合一個迴圈演算法，把擷取網頁
(catch_*_*.php)資料秀出。再使用 HTML 等相關語法，進行版面上連結規劃。 
z setting(envirSetting.php, userSetting.php): 重新從資料庫讀出帳號與部落格種類，依照使
用者所設定視窗顯示目前設定狀態，有 2 個選項返回上頁和確定送出，一旦按確定送
出後，會將目前帳號與部落格種類記下傳到 turn_main 部分修改資料庫。 
z turn_main(envir_turn_main.php, user_turn_main.php): 接收 setting 部分所傳來的資料，修
改資料庫成功後，重新讀出已改好的帳號與部落格種類或顏色等，利用自動轉頁方式
轉回 main。 
z search.php: 將關鍵字送到搜尋引擎後，得出搜尋結果，將之簡化秀出。若欲新增搜尋
到的部落格，則設定完成先轉到 turn_main 部分進行資料庫修改再回到 main.php。 
z send.php: 在設定部分設定自動更新時間，當自動更新時間到時，該頁面會自動重整，
此時比對重整後網頁與先前未重整的網頁差異，如有差異，送出該網頁有更新內容訊
息給使用者。手機方面則設定一個時間，當設定時間到時，利用官方提供的 SMS API
寄出簡訊。 
3. 實作 
 
瀏覽視窗，是整個計畫提供的主軸，加上可以由系統架構圖中，我們將之規劃成重要
的的連結點，大多數網頁均由此瀏覽視窗出發的關係，所以我們決定優先將瀏覽主視窗時
做出來。 
要如何解決單一視窗瀏覽多部落格，在經過多天的網路搜尋網路版面後，由最近興起
的 igoole 視窗與我們的服務功能，有著相當大的符合性，個人化、可同時觀看多個小視窗，
所以只要將部落格做成位於頁籤之中，再放入模擬 igoogle 的小視窗，便可以達到我們所期
望的瀏覽成果。 
igoogle 的版面，除了可容納頁籤顯示各小視窗外，還可以將各個視窗拖曳的使用者想
要的位置，更可以放大縮小視窗動態顯示。要達到這些效果的話，只能使用 javascript 語法
來撰寫了。使用 javascript 內建函數 onmousedown、onmouseup等相關函數來偵測滑鼠游標
的狀態決定作何處理，當偵測到滑鼠游標按下時，啟動開始移動這個 function 先動態求出
與原本位置所差的偏移量並將類別設定成 draging防止再次重複執行。當滑鼠移動中時，
計算並辨別目前落點區域，使預測的空白視窗得以預先顯現，最後滑鼠放開則把類別設定
回 drag，完成拖曳。而放大縮小部份，將所要改變大小的框架 id名稱傳給 fold函式後，
比對高度若是已經縮到最小則放大，反之則縮小。 
資料庫讀寫部份，在 phpMyAdmin 上依照先前規劃的資料庫表格式，先把資料表建成
於資料庫中。建好後，便可以在網頁上將資料在資料庫中進行存取了。當使用者登入後，
利用官方函數 GetMhfansUser()得到使用者帳號，接著用變數$username暫存。SQL 語法中
用 WHERE加入條件使用者帳號檢索所得特有 ID，ID編號是每個使用者唯一擁有，以方便於
資料庫中其他資料表分辨資料是歸屬於誰。 
PHP 加上 SQL 語法下達搜尋資料指令，把所有該使用者的相關資料帳號，部落格種類，
偏好全數讀出後，使用陣列與變數暫時存起來供瀏覽頁面解析。如果資料庫中沒有該使用
者帳號則在資料表中建立新的使用者和特有 ID。 
 
圖表 4 登入資料庫流程圖表 
由資料庫所得的暫存陣列與變數，是多數網頁的建立重要資訊，若是單以 PHP 的 POST
將資料傳送出去。 
目前系統實作測試狀況，使用部落格 API 是目前編輯部份最大的難題，大多數部落格
並沒有提供，因此可能需要使用其他方法來解決 
在網站美化部分中，CSS 是「Cascading Style Sheets」的縮寫，可以用來宣告樣式，對
標籤下定義，如要改變顏色的話，如下 
 
<style type="text/css"> 
body{background:white} 
</style> 
 
 每個人的電腦解析度都不太相同，然而為了使模擬 igoogle 的瀏覽版面有更好的瀏覽
效果，依解析度大小改變網站顯示的大小與相對位置也勢必要做個動態調整。使用 ajax 可
以解決此問題，到主要瀏覽視窗時，使用 javascript 內建 screen.width得出目前使用者電
腦的解析度，再用 getElementById取得物件的寬度，來動態調整到合適大小。 
 Firefox 與 IE 間的相容，在撰寫網頁時，需注意兩者可以通用的寫法，如：在 IE 中，
getElementsByName()、document.all[name]均不能用來取得 div元素只好用
getElementsById()等來取代了。除了通用寫法外，還要注意版面顯示的問題。在 javascropt
語法中，還使用 window.event來辨別目前瀏覽器，做出不同動作。 
 
4. 目前成果與未來展望 
 
 目前為止，瀏覽和搜尋部分的功能已經大致完成，而編輯部分也跳出企劃階段正式進
入實作階段，未來除了將編輯完成外，也希望能加入多國語系、瀏覽頁面的小視窗可任意
縮小放大...等讓使用者可以更方便瀏覽的新功能，來加強這個專題的功能。下面是部分成
果的擷圖，更多實作成果公布於http://mhapps.tagala.tw/s00055/ 
 
 
 
圖表 5 原本部落格 
 
