1中文摘要
在本計畫中，我們將探討如何在超立方體網路上建構最佳一點對多點的節點互
斥路徑。給定一個起始節點 s 及另外 m 個目的節點 d1, d2,…, dm (不需完全不同)，我
們要在 n 維超立方體網路上建構出 m 條分別從 s 至 d1, d2,…, dm 之節點互斥路徑使其
長度和為最小，且其最大長度於最差情況下為最小，其中 1mn。同時，每條路徑
不是最短就是第二最短。我們提出的建構演算法的最差狀況時間複雜度是
O(mn1.5+m3n)，此結果改進了由 Gao 等人所提出的 O(m2n2.5)建構演算法。
關鍵詞：連結網路，超立方體，節點互斥路徑，最佳化問題
英文摘要
In this project, the construction of optimal one-to-many node-disjoint paths in a
hypercube network will be studied. Given a source node s and another m destination nodes
d1, d2,…, dm (not necessarily distinct), we will construct m node-disjoint paths from s to d1,
d2,…, dm, respectively, in an n-dimensional hypercube network so that their total length is
minimized, and their maximal length is minimized in the worst case, where 1mn.
Besides, each path is shortest or second shortest. Our construction algorithm has time
complexity O(mn1.5+m3n) in the worst case, which improved the O(m2n2.5) construction
algorithm given by Gao et al.
Keywords: interconnection network, hypercube, node-disjoint paths, optimization problem
3In order to reduce both the total transmission latency and cost, disjoint paths are desired to
have both their maximal length and total length minimized. In an n-cube, m disjoint paths from
one source node to another m (not necessarily distinct) destination nodes were constructed in [21]
so that their maximal length is minimized in the worst case, where mn. In [16], it was shown
that in an n-cube, m disjoint paths from one source node to another m (not necessarily distinct)
destination nodes can be derived so that their total length is minimized. However, only the
existence of the desired disjoint paths had been shown and no complete construction procedures
were proposed. In this project, m optimal disjoint paths from one source node to another m (not
necessarily distinct) destination nodes are constructed in an n-cube so that not only is their total
length minimized, but also their maximal length is minimized in the worst case.
三、文獻探討
There are three categories of disjoint paths, i.e., one-to-one, one-to-many, and many-to-many
[8]. Suppose that W is a network with connectivity n. According to Menger's theorem [2], there
exist n disjoint paths between every two distinct nodes of W. They belong to the one-to-one
category. Many one-to-one disjoint paths constructed for a variety of networks can be found in
the literatures [6-8, 12-14, 17, 20]. On the other hand, according to Theorem 2.6 in [1], there exist
n disjoint paths from one node to another n distinct nodes in W. They belong to the one-to-many
category. One-to-many disjoint paths were first studied in [26] where the Information Dispersal
Algorithm (IDA) was proposed on the hypercube. Taking advantages of disjoint paths, the IDA
has numerous potential applications to secure and fault-tolerant storage and transmission of
information. Some examples of one-to-many disjoint paths can be found in [4, 9, 16, 21-24, 26].
Many-to-many disjoint paths (or named set-to-set disjoint paths), which connect two sets of
nodes in W, can be found in [5, 18, 19, 25].
In order to reduce both the total transmission latency and cost, disjoint paths are desired to
have both their maximal length and total length minimized. In an n-cube, m disjoint paths from
one source node to another m (not necessarily distinct) destination nodes were constructed in [21]
so that their maximal length is minimized in the worst case, where mn. In [16], it was shown
5Procedure Paths0(, m, n, D, I).
Step 1. If n=2, then {
Construct P1, P2, …, Pm as the m disjoint paths in a 2-cube that connect {
1k
e ,
2k
e , …,
mk
e } and {d1, d2, …, dm}.
Return P1, P2, …, Pm. }
Step 2. Determine dc so that |dc||di| for all 1im, where 1cm. If there are multiple candidates
for dc, then select arbitrary one. Without loss of generality, we assume c=m, kc=km=n,
and(di)=ki for all 1im.
Step 3. If |dm|=1, then {
Construct Pi as a shortest path from
ik
e to di for all 1im.
Return P1, P2, …, Pm. }
Step 4. Partition D into D' and D'', where D'={di | di,n=0 and 1im} and D''={di | di,n=1 and
1im}. Without loss of generality, suppose D'={d1, d2, …, dr} and D''={dr+1, dr+2, …, 
dm}, where 0rm.
Step 5. Construct P1, P2, …, Pm according to the following two cases.
Case 1. dm,=1 for some {1, 2, …, n}{kr+1, kr+2, …, km}.
/* Define': {d1, d2, …, dr} {k1, k2, …, kr} as follows:'(di)=(di)=ki for all 1ir,
and'': {dr+1, dr+2, …, dm} {kr+1, kr+2, …, km1,} as follows:''(dm)=and
''(dj)=(dj)=kj for all r+1jm1. */
Construct P1, P2, …, Pr in 01n by executing Paths0(', r, n1, {d1, d2, …, dr}, {k1,
k2, …, kr}). /* P1, P2, …, Pr connect {
1k
e ,
2k
e , …, 
rk
e } and {d1, d2, …, dr}. */
Construct Pr+1, Pr+2, …, Pm in 11n by executing Paths0('', mr, n1, {dr+1, dr+2, …, 
dm}, {kr+1, kr+2, …, km1,}). /* Pr+1, Pr+2, …, Pm connect { )(
1
n
kr
e

, )(
2
n
kr
e

, …, )(
1
n
km
e

, )(ne }
and {dr+1, dr+2, …, dm}. */
Augment Pr+1, Pr+2, …, Pm with links (
1rk
e , )(
1
n
kr
e

), (
2rk
e , )(
2
n
kr
e

), …, (
1mk
e , )(
1
n
km
e

), (en, )(ne ).
Case 2. dm,=0 for all {1, 2, …, n}{kr+1, kr+2, …, km}.
/* Suppose that=ktn and dm,=1, where r+1tm1. Define': {d1, d2, …, dr, )(nmd }
 {k1, k2, …, kr,} as follows:'( )(nmd )=and'(di)=(di)=ki for all 1ir, and'':
{dr+1, dr+2, …, dm1} {kr+1, kr+2, …, km1} as follows:''(dj)=(dj)=kj for all r+1j
m1. */
Construct P1, P2, …, Pr, P'm in 01n by executing Paths0(', r+1, n1, {d1, d2, …, dr,
7named Paths2 was proposed in [22] to construct m optimal disjoint paths from s to d1, d2, …, dm,
respectively. The following is a formal description of the procedure.
Procedure Paths2(n, {d1, d2, …, dm}).
Step 1. Find a maximum matching M in a bipartite graph G=(U, V, E), where U={d1, d2,…, dm},
V={1, 2, …, n}, and E={(di, k) | di,k=1, 1im, and 1kn}. Suppose that there are c
edges in M, where 0cm.
Step 2. Define a maximal partial routing function: {d1, d2, …, dm} {1, 2,…, n} with=c
according to the following statements. First, define(di)=k if (di, k)M, and(di)=0
otherwise, where 1im and 1kn. Without loss of generality, suppose that(di)=ki for
all 1ic and(dj)=0 for all c+1jm. Then, for all c+1jm, define(dj)=kj such that
kc+1, kc+2, …, km are distinct to each other and kj{1, 2, …, n }{k1, k2, …, kc}.
Step 3. Define a routing function: {d1, d2, …, dc, d'c+1,…, d'm} {k1, k2, …, km} as follows:
(di)=(di) for all 1ic and(d'j)=(dj) for all c+1jm, where d'j= 1,jd 2,jd 
1)(, jdjd  (1 )(, jdjd  ) 1)(, jdjd   mjd , .
Step 4. Obtain Q1, Q2, …, Qc, Q'c+1…, Q'm by executing Paths1(, m, n, {d1, d2, …, dc, d'c+1,…, 
d'm}, {k1, k2, …, km}), where Qi is the path from s to di for all 1ic and Q'j is the path
from s to d'j for all c+1jm.
Step 5. While (dz is included internally in Qt for some c+1zm and 1tc) {
/* Suppose that
ik
e is included in Qi for all 1ic and
jk
e is included in Q'j for all
c+1jm. */
Swap dt and dz. /* Exchange the nodes of dt and dz. */
Redefineas follows:(di)=ki for all 1im.
Do Step 3 and Step 4 again. }
Step 6. Construct Qj by augmenting Q'j with the link (d'j, dj) for all c+1jm.
Step 7. Return Q1, Q2, …, Qm.
五、結果與討論
During the execution of this project, we obtain deeper knowledge about routing functions,
hypercubes, node-disjoint paths, and fault tolerant routing techniques. Besides, our research
abilities are improved. As shown in [22], by the aid of maximal partial routing functions,
procedure Paths2(n, {d1, d2, …, dm}) can produce m disjoint paths Q1, Q2, …, Qm from s to d1,
d2, …, dm, respectively, in an n-cube so that not only is their total length minimized, but their
maximal length is also minimized in the worst case, where mn. For general case, their maximal
length is not greater than the minimum of n+1 and the maximal distance (from s to d1, d2, …, dm)
plus two. Besides, each path is either shortest or second shortest. The time complexity of
9Surveys, vol. 18, no. 1, pp. 23-38, 1986.
[16] S. Gao, B. Novick, and K. Qiu, "From Hall's matching theorem to optimal routing on
hypercubes," Journal of Combinatorial Theory, Series B. vol. 74, pp. 291-301, 1998.
[17] T. F. Gonzalez and D. Serena, "n-Cube network: node disjoint shortest paths for maximal
distance pairs of vertices," Parallel Computing, vol. 30, no. 8, pp. 973-998, 2004.
[18] Q. P. Gu and S. Peng, "k-pairwise cluster fault tolerant routing in hypercubes," IEEE
Transactions on Computers, vol. 46, no. 9, pp. 1042-1049, 1997.
[19] S. Y. Hsieh and Y. F. Weng, "Fault-tolerant embedding of pairwise independent Hamiltonian
paths on a faulty hypercube with edge faults," Theory of Computing Systems, vol. 45, no. 2,
pp. 407-425, 2009.
[20] D. F. Hsu, "On container width and length in graphs, groups, and networks," IEICE
Transactions on Fundamentals of Electronics, Communications and Computer Science, vol.
E77-A, no. 4, pp. 668-680, 1994.
[21] C. N. Lai, "One-to-Many Disjoint Paths in the Hypercube and Folded Hypercube," Ph.D.
thesis, Department of Computer Science and Information Engineering, National Taiwan
University, Taipei, Taiwan, 2001. (also available at http://owm.nkmu.edu.tw/public/Lai_
phd.pdf).
[22] C. N. Lai, "Constructing optimal node-disjoint paths in hypercubes," submitted to IEEE
Transactions on Parallel and Distributed Systems, 2010.
[23] C. N. Lai and G. H. Chen, "w-Rabin numbers and strong w-Rabin numbers of folded
hypercubes," Networks, vol. 51, no. 3, pp. 171-177, 2008.
[24] S. C. Liaw and G. J. Chang, "Generalized diameters and Rabin numbers of networks,"
Journal of Combinatorial Optimization, vol. 4, pp. 371-384, 1999.
[25] J. H. Park, H. C. Kim, and H. S. Lim, "Many-to-many disjoint path covers in hypercube-like
interconnection networks with faulty elements," IEEE Transactions on Parallel and
Distributed Systems, vol. 17 , no. 3, pp. 227-240, 2006.
[26] M. O. Rabin, "Efficient dispersal of information for security, load balancing, and fault
tolerance," Journal of the ACM, vol. 36, no. 2, pp. 335-348, 1989.
[27] Y. Saad and M. H. Schultz, "Topological properties of hypercubes," IEEE Transactions on
Computers, vol. 37, no. 7, pp. 867-872, 1988.
[28] R. Y. Wu, G. H. Chen, Y. L. Kuo, and G. J. Chang, "Node-disjoint paths in hierarchical
hypercube networks," Information Sciences, vol. 177, no. 19, pp. 4200-4207, 2007.
計畫結果自評
Routing functions had been shown effective in deriving node-disjoint paths in hypercubes and
folded hypercubes. In this project, a new routing function called maximal partial routing function
was proposed. By the aids of it, m node-disjoint paths from a source node to another m (not
necessarily distinct) destination nodes are constructed in an n-dimensional hypercube so that not
only is their total length minimized, but also their maximal length is minimized in the worst case.
We believe that there are other routing functions which are useful in constructing various
node-disjoint paths in hypercube-like networks and deserve more studies.
98年度專題研究計畫研究成果彙整表 
計畫主持人：賴正男 計畫編號：98-2221-E-022-007- 
計畫名稱：一個可在超立方體網路上快速建構出最佳一點對多點節點互斥路徑的演算法 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
