 
1
報告內容 
一、前言 
近年來，行動通訊與行動計算設備日益普及，智慧型手機、平板電腦與輕薄筆電的功
能日益強大。各種電子設備，如醫療診斷與看護設備、電力設施、車用儀器、居家電器等
也都逐漸朝網路互連發展。同時，網路通訊環境日益成熟，有線寬頻網路與無線通訊網路
日益普及。在這樣的基礎之上，再加上節能減碳的環保意識抬頭、企業與組織精簡設備與
軟體投資成本的考量、以及人們想要更加彈性、便利且隨心所欲地存取資料與服務的需求
等諸多因素，造就了雲端運算(Cloud Computing)時代的來臨。雲端運算是由傳統的分散式
計算(Distributed Computing)、格網運算(Grid Computing)與叢集式運算(Cluster Computing)
等概念演進而來。NIST 對雲端運算的定義為：「Cloud computing is a model for enabling 
convenient, on-demand network access to a shared pool of configurable computing resources 
(e.g., networks, servers, storage, applications, and services) that can be rapidly provisioned and 
released with minimal management effort or service provider interaction. …」[1]。藉由設備與
機房的集中控管，以及虛擬化的技術，雲端運算提供各種作業系統、應用軟體與儲存空間
等資源供使用者使用。使用者不必像以往一樣要自行購買、建置並維護所需的設備與軟
體，而只要向雲端服務廠商申請或購買所需的服務，就可以透過網路存取這些資源。這樣
的架構具有多種好處：首先使用者可以節省硬體與軟體投資與維護的成本，並且可以快速
地取得或擴充所需的服務，讓使用者有使用雲端服務的誘因；再者由於虛擬化技術的運
用，使得整體實體設備與機房的數量得以減少，進而減少電力與資源的消耗，符合節能減
碳的環保訴求；更特別的是使用者可以不再受限於某些場所與地點，而可以更便利且隨心
所欲、無所不在地(ubiquitous)存取所需的資料與服務，進而促成生產力的提升，並且允許
創造更多全新可能的應用，例如自動資料備份與企業內部跨地域的團隊共同合作。團隊共
同合作是企業使用雲端服務的重要誘因之一，尤其對大型企業而言。以往企業在進行跨地
域的團隊共同合作時，往往需要使用電子郵件或電話溝通的方式自行傳遞與協調控制共用
的資料。但是藉由雲端運算，可以發展出支援團隊共同合作的雲端服務，讓團隊成員對程
式與資料的存取都能達到自動的控管與記錄，並且允許事後的追蹤與驗證。 
然而雲端運算卻也帶來一些問題，其中最重要的就是資訊安全的問題。根據資策會產
業情報研究所(MIC)的調查顯示[2]，到 2010 年 7 月為止台灣大型企業只有 1% 採用雲端
運算服務，而超過 57.1% 大型企業對於雲端服務仍採取觀望的態度，且 44.2% 的企業仍
沒有熟悉的雲端供應商，其中資安問題是企業在考量採用雲端服務的主要疑慮。在雲端運
算中，資源與服務由雲端業者提供，使用者雖然省下了建置與維護的成本，卻也因此無法
完全掌控雲端所提供的服務與儲存在雲端伺服器中的資料，只要雲端伺服器暫時停止服
務，使用者就會面臨無法存取資料與服務的問題。這個問題一般只能祈求雲端業者能提供
穩定的服務品質，以及使用者本身備援網路的建置以降地網路斷線的風險。雲端運算的另
一個更嚴重的問題是資料安全的問題。使用者與雲端伺服器傳輸過程中的資料，以及存放
在雲端伺服器中的資料可能會被竊取、竄改、毀損或冒名偽造。雲端運算因為採用開放式
的架構，雲端服務可以透過網路方便地存取，卻也暴露在攻擊者的威脅之下。雲端服務的
存取一般都是透過傳統的身分驗證機制。因此一旦雲端伺服器遭到外部入侵或雲端業者內
部不肖員工的非法存取，使用者的資料便岌岌可危了。因此如何讓雲端運算既便利又安
全，即使在雲端伺服器被入侵與非法存取的情況下仍能確保資料不被竊取且正確無誤，是
一個相當重要的研究議題。 
一個雲端資料儲存的架構如圖 1 所示。其中包含了三種不同的角色： 
 使用者(User)：資料的擁有者，將資料儲存在雲端伺服器中，擁有這些資料的存取權。
包括個人使用者與組織機構。 
 雲端服務提供者(Cloud Storage Service Provider, CSSP)：提供雲端資料儲存服務的組
 
3
二、研究目的 
本研究計畫的目的是針對雲端資料儲存提出一個基於身份識別字的安全儲存架構，支
援分散式資料儲存與動態資料更新，且支援團隊共同合作。團隊管理者可以新增和移除團
隊的成員。任一個團隊成員都可以對團隊的資料進行新增、插入、修改與刪除的動作，且
這些動作都是可以被驗證與追蹤的。資料會經過加密，因此即使儲存伺服器被入侵或非法
存取，仍然可以確保資料不被竊取或被有意義地竄改。儲存架構滿足資料保密性與完整性，
具有團隊成員身分外部隱匿性與內部可追蹤性的特性。儲存伺服器可以在不需存取全部資
料的情況下，向使用者(或驗證者)證明資料是正確無誤且是可被取回的。 
 
三、文獻探討 
早期相關的研究是針對同級間(Peer-to-Peer, P2P)網路中資料儲存的問題。2003 年
Lillibridge 等人提出一個 P2P 資料備份架構[19]，使用一個(m + k, m)抹除碼，將檔案區塊
分散到 m + k 台同級主機上。他們的方法可以成功偵測到資料的遺失，但是無法確保所有
資料都是未被更動的。Filho 等人使用以 RSA 為基礎的雜湊函數驗證資料的完整性，在 P2P
分享網路上達到無法欺騙的資料驗證[14]。但是這個方法的時間複雜度跟資料成指數關
係，因此無法實用。 
2007 年 Ateniese 等人提出了「可證明的資料擁有」(Provable Data Possession, PDP)的
模型[3]，用意在不被信任的儲存伺服器中確認資料的正確性。他們的模型利用以公開金鑰
加密為基礎的資料驗證，因此允許公共驗證。但是他們的方法需要相當多的計算，對於整
個檔案的編碼與驗證可能是一個相當沈重的負擔。在其後續的研究中，Ateniese 等人改用
以傳統對稱金鑰加密為基礎的 PDP 架構[5]，提供比前一個架構更低的計算負擔，並且支
援動態的檔案區塊修改與新增。但是這個架構只針對單一的儲存伺服器，並且無法應付小
量的資料毀損。Curtmola 等人將 PDP 架構擴充到多份分散的資料副本，無需對副本個別
編碼，就可以保證資料的完整性[11]。 
Juels 等人提出「可取回性之證明」(Proof of Retrievability, PoR)的模型[17]，用以確保
遠端資料的完整性。他們的架構使用編碼技術與虛擬隨機散佈的查核區塊來確保靜態資料
的擁有性與可取回性。但是查核區塊被用過之後便失效，致使這個架構的驗證有次數的限
制。Shacham 等人以此 PoR 模型為基礎，加上一個以隨機線性函數為基礎的「同態驗證器」
(Homomorphism Authenticator)，建構出一個可以提供無數次驗證的架構[24]，並且只需要
更少的傳輸負擔。Bowers 等人綜合 Juels 與 Shacham 等人的方法，將其一般化，得到一個
改進的 PoR 架構[7]。在後續的研究中，Bowers 等人將其方法擴充為分散式的架構[8]，但
仍然只是針對靜態的資料。Dodis 等人將 PoR 與計算複雜度理論中已經被廣泛研究的
hardness amplification 理論連結起來，並且首度以資訊理論嚴格地定義 PoR [12]。 
Wang 等人運用抹除碼與同態符號，提出一個分散的、支援動態新增、修改、刪除(但
不支援插入)資料的架構[28]，並且可以在偵測到資料錯誤時試著找出錯誤區塊的位置，有
效率地將錯誤回復。但是這個架構將同態符號儲存在使用者端(作為資料驗證之用)，因此
無法支援公共驗證。在後續的研究中，Wang 等人運用 Merkle Hash Tree (MHT)方法將 PoR
架構加以改進，同時達成公共驗證與完整的動態資料更新支援[27]。大約在同一時間，
Erway 等人則是將 PDP 擴充為完整支援動態資料更新的架構[13]。為了支援動態更新，特
別是區塊插入的操作，他們運用跳躍清單(skip list)的資料結構。Wang 等人將此架構加以
延伸，以公開金鑰加密為基礎提出一個同時達成公共驗證與完整的動態資料更新支援的架
構，並且保證公共驗證不會造成使用者資料外洩的風險[29]。這個架構同時利用聚集簽章
(Aggregate Signature)的技術將多個驗證的動作合併為一次的驗證，以增加執行的效率。
Ateniese 等人不久前提出一個建構公開金鑰「同態線性確認器」(Homomorphic Linear 
Authenticator, HLA)的一般性機制[4]。任何確認協定只要滿足適當的同態條件，就可以建
 
5
 
圖 2. 一個 MHT 驗證的範例 
 
在資料驗證與資料加解密方面，我們預計使用 identity-based 公開金鑰密碼技術。因為
identity-based 不需要憑證基礎結構，具有使用上的彈性與便利性。Identity-based 公開金鑰
密碼的觀念早在 1984 年便由 Shamir 提出[25]，但一直要到 2001 年才有二個可行的方案出
現：分別是 Boneh 與 Franklin 基於 pairing 的方案[6]，以及 Cocks 基於二次剩餘問題
(Quadratic Residuosity Problem)的方案[10]。由於後續的 ID-based 方案普遍都是以 pairing
為基礎，因此我們也將延續這個方向。假設 G1與 G2 是二個 order 為 r 的加法群、GT是一
個 order 也是為 r 乘法群，pairing 是一個函數 e : G1  G1  GT。函數 e 必須要滿足下面二
個特性 
 雙線性(bilinear)：對於所有的 P, P1, P2  G1 與 Q , Q1, Q2  G2， 
e (P1 + P2, Q) = e (P1, Q) e (P2, Q) 且  
e (P, Q1 + Q2) = e (P, Q1) e (P, Q2) 
 非退化(nondegenerate)：若對所有的 P  G1，e (P, Q) 都等於 1 (GT的單位元素)，則 Q 
= O (G2 的單位元素)；同理，若對所有的 Q  G2，e (P, Q) 都等於 1，則 P = O (G1
的單位元素)。 
一般 G1 與 G2 都是取自某個橢圓曲線上的點所構成的加法子群，而 GT則是取自定義
橢圓曲線的有限延伸體中的一個乘法子群。在某些應用中，G1 會等於 G2。在這種情況下，
pairing 是對稱的，也就是 e (P, Q) = e (Q, P)。 
在團隊共同合作上，需要做到團隊成員可以互相共享團隊的資料。每個成員都可以讀
取或修改團隊的資料，並且可以驗證資料的正確性。團隊成員的行為對外應具有隱匿性，
亦即團隊外部的人無法得知一個團隊內有哪些成員，也無法區別資料的修改是出自哪一個
團隊成員。但是在團隊的內部，成員行為應該是可以被追蹤的，亦即團隊管理員，甚至是
任一個團隊成員都可以查出某一筆資料最後是被誰修改的。這樣的架構當然必須經得起各
種可能的攻擊。對於團隊外部的對手(adversary)，即使掌握了雲端伺服器的控制權，應該
也無法竊取或有意義地修改團隊的資料，也無法冒用某個團隊成員偽造出資料。同時外部
的對手也無法破壞團隊的隱匿性。對於團隊內部的成員，應該無法冒用其他團隊成員的身
分修改資料，即使多個團隊成員合謀，甚至團隊管理員參與其中也一樣。要達成上述這些
要求，我們覺得應該可以採用群體導向的加密與簽章方面所發展出來的方法，並將它修改
成 identity-based。群體簽章是由 David Chaum 在 1991 年提出[9]，從此以後便有相當多相
關的研究提出，並衍生到群體加密的問題。在 ID-based 的方法提出之後，也有很多的
ID-based 群體加密與群體簽章的架構被提出。另外，類似 signcryption 的作法[18][22]，將
加密與簽章在一個步驟內同時完成，以提升運算的效率，也是可以一併考慮。 
 
h(A || B) 
R 
h(C || D) 
A B 
C D E F 
h(E || F) 
h(G || H) h(I || J) h(K || L) 
G H 
h(B1) h(B2) 
h(B3) 
I J 
h(B4) h(B5) 
K L 
h(B6) h(B7) 
 
7
雲端服務提供者則會以 ExecUpdate 完成資料的更新，並傳回一個驗證用的證明給使
用者；最後使用者以 ChkUpdate 檢查資料是否已經更新無誤，以確認這個更新。群
組管理者可以 Open 找出一個檔案區塊最後是由哪一位成員所更新。這些程序的詳細
描述如下： 
 Setup(l): 此程序依據參數 l 產生系統共用的整體性參數，包括一個長度為 l 的大質
指數(prime power) q、一個定義在有限體 F q 上的橢圓曲線 E、二個階(order)為 p 的
有限群 G1 與 G2、一個雙線性的 pairing e : G1  G1  G2、一個 G1 的生成元素 P，
用來作為公開的基準點、以及一個對映到橢圓曲線點的雜湊函數 H: {0,1}*  G1。
G1 與 G2 中的離散對數問題(discrete logarithm problem, DLP)與計算性迪菲-赫爾曼
問題(computation Diffie-Hellman problem, CDHP)必須都是困難的。Pairing e 必須滿
足雙線性與非退化性。除此之外，e 還要滿足可計算性(computable)，亦即對任意
二個的 P1, P2  G1，存在一個有效率的演算法可以計算 e (P1 , P2)。 
 GrpSetup(PA , IDGroup): 群組管理者以此程序產生一個新群組的參數。首先隨機選
擇一個 sA 
R
 Zp
*作為群組的主金鑰，並計算出群組公開金鑰 PA = H(IDGroup)，以
及群組的私密金鑰 sAPA。另外再隨機選取一個整數 sE 
R
 Zp
*作為加密與解密金
鑰。有了這些參數之後，群組管理者便可以 PA與 IDGroup 向系統申請註冊這個新的
群組。系統會將這些資訊記錄下來。 
 Join(PU , IDUser, IDGroup): 使用者以此程序加入一個群組，PU = H(IDUser) 是使用者
的公開金鑰。群組管理者若同意使用者的請求，會計算出該成員的私密金鑰(sAP, 
sAPU)與憑證 Cert  sAPA + H(IDGroup || PU || T )，T 是憑證的有效期間。管理者將 PU、
IDUser、Cert 與 T 記錄下來，然後將(sAP, sAPU)、Cert、T 與 sE送回給該名使用者。 
 ReqPermit(PA , PU, T, Cert, xiPA , xiSU1 < i < k): 使用者(群組成員)以此程序向群組管
理者申請簽署簽章時所要用的一次性「執照」。假設使用者的私密金鑰是(sAP, SU)。
使用者事先隨機挑選 x1, x2, . . . , xk 
R
 Zp
*，並計算出 x1PA , x2PA , . . . , xkPA與 x1SU , 
x2SU , . . . , xkSU。群組管理者收到請求後，首先驗證 
e(Cert, P)
 ? 
e(H(IDGroup || PU || T ), P)．e(sAPA, P), 
e(xiSU, PA)
 ? 
e(PU, sAxiPA), i = 1, . . . , k. 
若驗證失敗，則拒絕申請。否則管理者算出 Pi  sAxiPA + H(IDGroup || xiSU || T ),     
i = 1, . . . , k。管理者將這些 xiSU、xiPA、Pi與 PU的對應關係記錄下來，並將這些
Pi交給申請者。使用者可以在任何需要簽署執照的時候呼叫此程序。 
 Enc(sE , B): 使用者執行此程序，以金鑰 sE加密一個資料區塊 B。 
 Dec(sE , C): 使用者執行此程序，以金鑰 sE解密一個已加密的資料區塊 C。 
 Sign(xi SU , xisAP , Pi , B, T): 使用者執行此程序，以一個簽章 Si為一個資料區塊 B
產生一個群組簽章。使用者事先挑選一個簽章執照 Si，並以對應的 xi 算出 xi sU
與 xiPU。此程序計算 
SB  H(B) + xiSU + Pi 
簽章即為 
  (SB , xiSU , xi sAP, T )。 
 Verify(, H(B), PA , IDGroup): 使用者或第三方驗證機構執行此程序驗證 是否為資
料區塊 B 合法的簽章。令 = (SB , xiSU , xi sAP, T )。若 
e(SB , P) = e(H(B) + xiSU + H(IDGroup || xiSU || T ), P)．e(PA, xi sAP) 
則驗證成功，否則驗證失敗。 
 
9
令(修改、插入、或刪除)、欲更新之區塊的索引、以及新的區塊及其簽章(刪除區
塊時無此項目)。區塊的附加(appending)可以插入指令完成。  
 ExecUpdate(F ′, Φ, inst): 雲端服務提供者使用此程序，依據 inst 參數指示完成檔案
F 的更新，並得到一個要回傳給提出請求者的證明 V。更新的動作包括儲存新的區
塊及其簽章(修改或插入)或刪除目標區塊及其簽章(刪除)，並據此調整 MHT 的結
構。我們採用 [27] 的作法進行此調整。更新完成後雲端服務提供者會 V = (H(Bi′), 
Ai , RF ′, RF) 給使用者，其中 i 是更新之區塊的索引、Bi′是更新前索引 i 的區塊、
Ai 是驗證輔助資訊、RF′是更新前之 MHT 根節點的簽章、RF 則是更新後的 MHT
根節點。 
 ChkUpdate(inst, V): 使用者以此程序檢查雲端服務提供者是否依據指示正確地更
新檔案。給予雲端服務提供者回傳的更新證明 V = (H(Bi′), Ai , RF′ , RF)，程序首先以
驗證輔助資訊 H(Bi′) 與Ai算出更新前的 MHT 根節點 RF′，再以 Verify 程序驗證 RF′ 
是否為 RF′的簽章。這個驗證的目的是要檢驗 AAI。若檢驗不成立，則終止執行並
輸出 FALSE；若成立，則以新的區塊值(包含在 inst 參數中)與 Ai 算出更新之後的
MHT 根節點，並與 RF比較是否相等，以檢查雲端服務提供者是否已正確地更新檔
案。若是，則輸出 TRUE，否則輸出 FALSE。在得到 TRUE 的回傳值時，使用者會
簽署這個新的根節點，並將此簽章傳送給雲端服務提供者，更新此簽章。 
對於 Enc 與 Dec 程序，可以使用傳統的對稱式加密與解密，例如 AES 或 ECIES。群
組資料會被加密，所以只有群組成員才能正確地解密並讀取到資料。群組成員或 TPA 可
以用群組的公開金鑰驗證資料的正確性與可取回性，因此我們的架構是允許公共驗證的。
同時，動態資料更新，亦即資料的新增、插入、修改和刪除在我們的架構中也是被支援的。 
 
 
參考文獻 
[1] NIST Definition of Cloud Computing v15, available at 
http://csrc.nist.gov/groups/SNS/cloud-computing/cloud-def-v15.doc 
[2] 資策會，“資訊安全是大型企業未採用雲端服務的主要疑慮,” available at 
http://edn.gmg.tw/article/view.jsp?aid=298063&cid=47 (Jul. 8, 2010). 
[3] G. Ateniese, R. Burns, R. Curtmola, J. Herring, L. Kissner, Z. Peterson, and D. Song, 
“Provable Data Possession at Untrusted Stores,” Proc. of CCS ’07, pp. 598–609, 2007. 
[4] G. Ateniese, S. Kamara, and J. Katz, “Proofs of Storage from Homomorphic Identification 
Protocols,” ASIACRYPT 2009, pp. 319-333. 
[5] G. Ateniese, R. D. Pietro, L. V. Mancini, and G. Tsudik, “Scalable and Efficient Provable 
Data Possession,” Proc. of SecureComm ’08, pp. 1-10, 2008. 
[6] D. Boneh, M. Franklin, “Identity-based encryption from the weil pairing”, Advances in 
cryptology-Crypto 2001, LNCS 2139, Springer, pp. 213-229. 
[7] K. D. Bowers, A. Juels, and A. Oprea, “Proofs of Retrievability: Theory and 
Implementation,” Cryptology ePrint Archive, available at http://eprint.iacr.org/2008/175. 
[8] K. D. Bowers, A. Juels, and A. Oprea, “HAIL: A High-Availability and Integrity Layer for 
Cloud Storage,” Cryptology ePrint Archive, available at http://eprint.iacr.org/2008/489. 
[9] D. Chaum and E. van Heyst. “Group signatures,” Advances in Cryptology — 
EUROCRYPT ’91, LNCS 547, Springer, pp. 257-265. 
[10] C. Cocks, “An Identity Based Encryption Scheme Based on Quadratic Residues,” 
Cryptography and Coding, LNCS 2260, pp. 360-363, Springer-Verlag, 2001. 
[11] R. Curtmola, O. Khan, R. Burns, and G. Ateniese, “MR-PDP: Multiple-Replica Provable 
Data Possession,” Proc. of ICDCS ’08, pp. 411–420, 2008. 
[12] Y. Dodis, S. Vadhan, and D. Wichs, “Proofs of retrievability via hardness amplification,” 
Theory of Cryptography Conference, LNCS 5444, pp. 109-127, Springer-Verlag, 2009. 
 1
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                   日期： 2012 年 8 月 15 日 
一、 參加會議經過 
首先在研討會網頁上線上投稿論文，經審查後，於 2012 年 5 月 26 日接獲通知
本論文已被接受，並於 7 月 13 日前上網註冊並繳交註冊費。 
本次參加的研討會是 International Conference on Cloud Computing and 
e-Governance 2012 (ICCCEG 2012)。會議時間為 2012 年 7 月 26 日至 7 月 28，於泰
國首都曼谷舉行。研討會的主題聚焦 Cloud Computing 與 e-Governance 以及其他相
關的議題，與本論文的研究主題相符。 
於 7 月 24 日早上 7:50 搭乘泰國航空 TG 637 班機由桃園中正國際機場出發直飛
泰國曼谷蘇汪納蓬國際機場，於泰國時間 10:35 分抵達。抵達後，先前往飯店休息。
隔日早上 10 點即前往 Holiday Inn, Silom 酒店參加研討會，早上先參加開幕典禮，
再聆聽 Keynote Speech。下午則選擇感興趣的場次參加，聽取其他研究學者的報告，
並於中場休息時間與其他的學者互相討論。 
第二天(7 月 27 日)早上 9:00 再前往 Holiday Inn, Silom 酒店參加研討會。早上一
樣選擇感興趣的場次參加，聽取其他研究學者的報告，並於中場休息時間與其他的
學者互相討論。本次發表的論文被安排在的 16:15~18:00 發表，本場次共有 5 篇論
文發表，本論文被安排在第 3 個順位作簡報。 
第三天(7 月 28 日)早上 9:00 再前往 Holiday Inn, Silom 酒店參加研討會，聽取其
他研究學者的報告，並於中場休息時間與其他的學者互相討論。於下午 16:00 圓滿
結束研討會。 
計畫編號 NSC 100-2221-E-264-009- 
計畫名稱 基於身份識別字且具有團隊共同合作支援之雲端資料儲存架構 
出國人員
姓名 
林志賢 
服務機構
及職稱 
元培科技大學資訊管理學系 
助理教授 
會議時間 
2012 年 7 月 26 日至 
2012 年 7 月 28 日 
會議地點 泰國曼谷 
會議名稱 
(中文) 
(英文) International Conference on Cloud Computing and e-Governance 
2012 (ICCCEG 2012) 
發表論文
題目 
(中文) 
(英文) An ID-Based Cloud Data Storage Scheme for Group Collaboration 
 3
 
 
 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：林志賢 計畫編號：100-2221-E-264-009- 
計畫名稱：基於身份識別字且具有團隊共同合作支援之雲端資料儲存架構 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 1 1 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
