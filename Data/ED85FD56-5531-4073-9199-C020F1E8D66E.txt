壹、前言 
 在電腦科技發展中，各種工程應用皆需要大量使用電腦計算來解決問題，使得最佳化
問題的重要性比例日益漸增，其解決方式在以往常用的有線性規劃、動態規劃及分支界定
等方法。當問題過於複雜時，上述方法會因問題太大導致電腦記憶體的不足而無法實作，
或是需要長時間計算而不能有效求解。 
最佳化演算法發展至今已有很長的一段時間，在這段時間提出了不同種類的演算法技
術，如遺傳演算法(Genetic Algorithm)、模擬退火法(Simulated Annealing)、蟻群演算法(Ant 
Colony Optimization)、禁忌搜尋法(Tabu Algorithm)等的近似求解法。此類求解方法逐漸受
到重視，其中以遺傳演算法最具代表性，原因在於遺傳演算法對許多傳統方法難以解決的
問題非常有效，是一種應用十分廣泛的隨機搜尋技術。 
使用遺傳演算法求解時，需要選擇適當的基因運算子以及設定演算法的參數。這些環
結必須與問題做緊密的結合，才能有效地逼近到最佳解，但是如何決定基因運算子及參數
的設定方法是非常困難的。因此，本研究針對遺傳演算法中基因運算子及參數的設定方法
做一有系統的探討，並改良在應用上的一些缺點，以使其在生產排程上可獲得不錯的結果。 
貳、研究目的 
 使用遺傳演算法在求解最佳化問題上的瓶頸，例如：目前的文獻中並沒有清楚交待如
何將問題轉換為適當的染色體編碼、如何決定基因運算子及參數的設定方法等，因此，本
研究希望藉由重要的遺傳演算法之研究與探討，找出一個標準化程序與加速解決最佳化問
題的方法，欲達到的目的如下： 
1. 要使遺傳演算法的各個環結與最佳化問題能夠做緊密的結合，本研究以標準作業
程序做為目標，進一步分析最佳化問題與遺傳演算法的各個環節之相關性，歸納
成標準程序。 
2. 由於遺傳演算法的演化效能會被族群大小、演化代數、交配率、突變率等參數所
左右，對於參數的設計，利用自適應的機制依據族群內染色體的狀態，動態調整
交配率與突變率，使遺傳演算法在求解問題時能減少受到參數的干擾。 
參、文獻探討 
遺傳演算法是由 Holland 在 1975 年提出的一種通用的隨機搜尋演算法[1]。主要是建構
在自然界裡，『適者生存，不適者淘汰』的自然演化觀念上。簡單的說遺傳演算法是利用多
方向的搜尋演算法，藉由搜尋的過程，互相交換彼此之間的資訊，有系統地來提高搜尋效
率。傳統搜尋演算法需要明確指定搜尋方向才得以運作，但遺傳演算法是不需明確指定搜
尋方向的開放式架構演算法，可以很容易的將原本複雜的問題，透過編碼轉換與適應函數
的評估，以隨機的方式求得解答。因此，可以廣泛的應在用各種不同領域上。已知有許多
學者將遺傳演算法應用在工廠生產排程問題[2-4]、全球決策支援系統[5-7]、組合最佳化問
題[8]等等。以下幾節將針對遺傳演算法作詳細的介紹。 
3-1 遺傳演算法的流程 
遺傳演算法(Genetic Algorithm)的基本理論最早是由 Holland 於 1975 年提出，為一種
模仿生物自然進化過程的隨機搜尋法，它從一組隨機產生的初始解，稱為族群(Population)，
開始搜尋的過程。族群內的每一個個體代表問題的一個解答，稱為染色體(Chromosome)。
1. 演化代數最主要的功用是控制遺傳演算法搜尋的終止條件。遺傳演算法族群內的
染色體經由世代演化，會使得族群內的染色體的適應程度均趨向一致，換句話說
再找到有更好的適應程度染色體的機率變小，在族群內的染色體便形成為收斂的
狀態，此時便滿足遺傳演算法的終止條件。一般設定的方式可以指定演化代數、
演化時間等來決定，若定的太低，容易陷入局部解中；反之定的太高可能需要很
長的時間才能收斂，因此，在決定演化代數時須根據染色體的基因個數、搜尋範
圍來做一致性考量。 
2. 族群參數的大小可以決定遺傳演算法的隨機搜尋的廣度，並利用群體學習的觀念
來交換資訊，達到進化的目的。如果族群數目太多會對演算法造成計算上的負擔，
反之族群數目太少則學習的效果會變差，容易陷入局部最佳解。 
3. 交配率參數是在演化過程中用來決定交配頻率的次數。交配率設的越高，則產生
新染色體的數量就越多，因此求解的搜尋區域相對的也會隨之變大。但是如果交
配率設定的太高，則要付出的計算成本就要越多，且會導致搜尋區域重疊，破壞
族群內染色體的多樣性；反之如果將交配率設的太低，則會使搜尋的速度停滯下
來。 
4. 突變率是決定在演化過程中發生突變的機率參數，突變率設定太低會使得落入局
部解的機率變高，而無法搜尋到全域最佳解，反之突變率設的太高則搜尋方式將
會與隨機搜尋的效果相同。 
肆、研究方法 
本章研究目的在於制定遺傳演算法標準作業程序(Standard Operation Procedure in 
Genetic Algorithm, SOPGA)。在以往使用遺傳演算法求解時，需要選擇適當的基因運算子以
及設定演算法的參數，這些環結必須與問題做緊密的結合，才能有效地逼近到最佳解。 
因此本研究提出遺傳演算法標準作業程序(SOPGA)來求解最佳化問題。本研究將排程
問題定義出相對應的編碼型態與其適用的基因運算子。為了改進遺傳演算法的搜尋能力，
SOPGA 採用三種不同的區域搜尋法來分別處理排程問題。對於簡化最佳化參數設定的問
題，本研究使用自適應調整法在演化的過程中決定適當的參數值。。 
遺傳演算法標準作業程序 SOPGA 
本研究在此提出一個遺傳演算法標準作業程序 SOPGA 用以解決排程問題，其詳細做
法如下：首先訂出該對於問題的目標函數，再來依據目標函數的變數數量來決定染色體內
的基因個數，以及其相對應的編碼方式，其編碼方式共有三種，分別為實數編碼、順序編
碼及二元編碼。在確定基因個數及編碼型式後，定義出染色體的框架，便可用來產生在族
群內的染色體。在初始化族群內的染色體，其數量由族群大小參數來決定，而染色體內的
基因表現值是由隨機的方式產生，產生後使用目標函數對染色體做評估得到適應值，再放
入族群內完成初始化動作。 
接下來為演化的流程的第一個步驟，目的為建立一個按照染色體適應程度的輪盤內的
累積機率表。然後判斷是否滿足終止條件，若是滿足則結束 SOPGA，反之則繼續演化。而
終止條件的判斷方式為設定一個最少演化代數為 100 及最大演化代數為 200，在此中間的
代數若是適應程度最好的染色體在 50 代內皆沒有改變，則強迫終止 SOPGA。 
第二個步驟利用建構好的輪盤，以隨機方式選取族群內的染色體，然後做交配及突變
的動作產生新的子代染色體。交配出來的新染色體數量由交配率 cp 來決定，再經由突變率
的區域最佳解。而編碼的配對方式為實數編採用直接搜尋法、順序編碼採用後推-前向式法
及二元編碼採用貪婪搜尋法。 
最後的步驟是在所有的子代染色體產生完後，以競爭取代的方式來變更族群內的染色
體。取代的方式是由子代染色體逐一選取，再由族群內隨機抽取一個染色體，互相做適應
程度的比較，若是子代染色體的適應程度較佳，而取代族群內被選中的染色體，反之則是
將子代染色體淘汰掉。在所有的子代染色體都比較過後，便完成了一個世代的演化，此時
留在族群內的染色體便為新世代的染色體。 
整個 SOPGA 的演化過程要重覆到滿足終止條件時結束，此時族群內適應程度最好的
染色體，即為求到的最好結果。圖 2 為 SOPGA 流程圖，實線外框表示由 SOPGA 所建議做
法，虛線外框表示要依據所遇到的最佳化問題做適當調整。 
伍、實驗結果及分析 
本章實驗目的在於分析遺傳演算法的各個環節之間的影響，用來驗証在上個章節中制
定的標準遺傳演算法設計流程，對於排程問題是否有效。以下幾節將針對實驗設計及實驗
結果做詳細的介紹。 
5-1 實驗設計 
本研究實驗所使用的遺傳演算法程式皆由 Microsoft Visual C++ 6.0 撰寫，執行的作業
系統平台為 Windows XP。運用範例測試，將不同屬性的排程問題，來試驗本研究提出之標
準作業程序所設計出來的遺傳演算法，是否可以滿足旅行銷售員問題、背包問題二種排程
問題做實驗。 
5-2 旅行銷售員實驗及分析 
 實驗主要目的在測試 SOPGA 對於順序編碼中旅行銷售員問題的求解能力，包含的測
試檔案為 att48.tsp 有 48 個城市、eil51.tsp 有 51 個城市、eil76.tsp 有 76 個城市、ulysses16.tsp
有 16 個城市、ulusses22.tsp 有 22 個城市共五個測試檔案。此實驗的測試資料，所使用的交
配運算子為單點交配法，突變運算子為插入突變法，其餘設定使用 SOPGA 所建議的項目，
其中區域搜尋方式為後推-前向式法，使用自適應方式來設定參數，隨機產生 100 組染色體
等，詳細的測試資料如表 1 所示。 
 
表 1 旅行銷售員測試資料 
項目 設定值 
實驗對象 att48.tsp, eil51.tsp, eil76.tsp, ulysses16.tsp, ulysses22.tsp 
交配運算子 單點交配法 
突變運算子 插入突變法 
適應值調整方式 穩定調整法 
進化策略 競爭式取代 
區域搜尋法 後推-前向式法 
族群 隨機產生 100 個染色體 
演化世代 200 
交配率 自適應調整(0.5~1.0) 
突變率 自適應調整(0.05~0.2) 
可以有效的求解此類問題。表 4 為背包問題測試結果。 
 
表 4 背包問題測試結果 
滿足度 上界 下界 最差結果 最好結果 平均值 標準差 
10% 1051.24 1041.91 1048.07 1050.65 1050.334 0.80962 
20% 1526.29 1524.09 1522.61 1525.43 1525.264 0.625874 
30% 1870.05 1861.24 1868.73 1868.73 1868.73 1.14E-12 
40% 2147.07 2145.59 2137.89 2145.85 2145.267 1.416333 
50% 2386.99 2376.11 2382.1 2386.53 2385.394 1.133168 
60% 2587.17 2586.55 2581.39 2586.55 2586.054 1.254896 
70% 2755.56 2749.23 2749.97 2755.02 2753.639 1.311316 
80% 2879.39 2876.19 2878.79 2879.21 2878.902 0.185731 
90% 2957.34 2956.72 2956.72 2956.75 2956.727 0.012689 
5-4 個案排程資料分析與比較 
為了驗證系統所計算之結果是合理且無誤的，在本節將利用系統模擬訂單排程，並且
透過分枝界限法來尋找準確的最佳解，以供系統計算結果對照之用。本研究所分析之工廠
及訂單資料係從個案公司所使用之 ERP 系統所得而來，工廠範圍包括了台灣、美國、非洲、
中國大陸、越南及其它亞洲國家，而訂單內容主要以上衣、裙子、褲子及外套為主。由於
詳細資料內容涉及商業機密範圍，故不在本研究所討論之範圍。 
在進行一百次的試驗與分枝界限法的計算之後，如表 5 所示，利用改良型遺傳演算法
分析後所得之平均成本，明顯小於透過傳統遺傳演算法計算所得之結果。而且經過一百次
的計算，改良型遺傳演算法的變異係數為 0.018，亦遠低於簡易遺傳演算法之變異係數
0.109。因此，經由改良型遺傳演算法來尋求全域最佳解，不僅較易尋找到符合適應性函數
所定義之結果，而且其運算過程較簡易遺傳演算法平穩。再者，利用改良型遺傳演算法所
求得的解(132168.4 千元)，非常接近分枝界限法所求得之最佳解(129413.6 千元)，但是在業
界的實際情況底下，憑著人力及經驗進行生產訂單排程，並無法使得每張訂單均符合最佳
狀態，而得到最佳解。因此，利用此全球決策支援系統，並且透過改良型遺傳演算法所得
之結果，是合理且可以被當決策參考依據。 
表 5 簡易遺傳演算法與改良型遺傳演算法計算結果比較表 
 平均值 變異係數 準確率 
簡易遺傳演算法 158472.3 0.1094 77.55% 
改良型遺傳演算法 132168.4 0.0180 97.87% 
單位：千元新台幣 
由表 5 可得知，改良型遺傳演算法所模擬之決定訂定結果之準確率相當地高(97.87%)，
一般而言，在極短的時間之內訂定決策，就實際業界來講，預測準確率需高於 70%，便算
是可接受的解。因此，本研究系統所模擬之決策結果，具備了相當高的參考價值。然而，
系統運算所耗費的時間，亦是衡量系統是否有其使用價值之重要因素之一。有鑑於此，本
研究使用分枝界限法、簡易遺傳演算法及改良型遺傳演算法分析計算相同的訂單資料，希
望透過資料分析所耗用的運算時間，來驗證系統是否能夠在允許的時間之內計算結果。在
相同的個人電腦下執行分析資料，資料類型為實際生產訂單，產品包括了上衣、褲子、裙
子及外套，系統執行時間測試分為兩次，第一次將分析三十張訂單，第二次分析訂單個數
6-2 未來研究方向 
 本研究是根據以往遺傳演算法以及區域搜尋的研究理論，所歸納出來的一個標準作業
程序，以編碼方式來區分實數型、順序型及選擇型三個不同特性的問題，但在實際應用中
必然還存在著其他特性的最佳化問題。第二個問題是本研究所結合區域搜尋法是採用較通
用的做法，在搜尋效率上浪費了許多不必要的計算成本。除了上述的兩個問題之外如果在
交配時能夠透過資料分析的方法，找出染色體內基因的特性，讓遺傳運算子能夠更正確的
找到搜尋方向，加強搜尋效率。因此尚有許多改進的空間，以下針對未來可以研究的方向
加以說明： 
1. 在實際的應用中，有許多最佳化問題是屬於非線性規劃問題，這些問題都存在複
雜的限制條件，在本研究中並未對這些限制條件做深入的探討，因此在未來設計
遺傳演算法時，對於不合法染色體的去留，使用合理的方法來調整，並可對於搜
尋空間做有效的評估，用來滿足最佳化問題的限制條件。 
2. 本研究所採用的區域搜尋機制，在基本的架構上還是屬於盲目搜尋的區域搜尋
法，利用不斷的測試方式來找尋正確的搜尋方向，所以在求解時浪費了許多不必
要的計算成本。而在作業研究的領域中，有許多解決問題的好方法，而這些方法
擁有良好的求解效率，未來若能嘗試結合適當的求解方法，便能再加快遺傳演算
法的求解速度及保持穩定度。 
3. 由於資料挖掘技術的演算法經過多年的發展，已經到了成熟的階段，而目前也有
許多專家學者將此項技術，應用在不同領域中，且得到良好的成效；換言之，若
未來可考慮針對改善交配運算子作一番研究探討，透過資料挖掘演算法將族群內
的染色體做適當的分析，找出更多有用的遺傳資訊，對於引導交配運算子到正確
的搜尋方向，做進一步的改善，勢必能得到更佳的演化效率。  
參考文獻(含本計畫已發表之論文及學生碩士論文) 
[1] J. H. Holland, Adaptation in Natural and Artificial Systems, Ann Arbor, MI: The University of 
Michigan Press, 1975. 
[2] R.C. Chen, T.S. Chen, C.C. Feng, C.C. Lin, and K.C. Lin, “Application of Genetic Algorithm 
on Production Scheduling of Elastic Knitted Fabrics,” Engineering and Applied Sciences, vol. 
1, no. 2, pp. 149-153, 2006. 
[3] R.C. Chen, T.S. Chen, K.C. Lin, and C.C. Lin, “A Production Scheduling System Based on 
Self-adaptive Genetic Algorithm for Manufacturing Elastic Knit Fabrics,” Dynamics of 
Continuous, Discrete, and Impulsive Systems, Series B: Application & Algorithms, (DCDIS), 
Vol. 13(b) Supplement, pp. 176-180, 2006. (NSC 95-2221-E-025-011) 
[4] R.C. Chen, S.S. Li, C.C. Lin, and T.S. Chen, “Application of Self-Adaptive Genetic 
Algorithm on Allocating International Demand to Global Production Facilities,” in 
Proceedings of Sixth World Congress on Intelligent Control and Automation, Dalian, China, 
2006. (CD-ROM) 
[5] S.S. Li, R.C. Chen, and C.C. Lin, “A Genetic Algorithm-Based Decision Support System for 
Allocating International Apparel Demand,” WSEAS Transactions on Information Science and 
Applications, vol. 3, no. 7, pp. 1294-1299, 2006. 
[6] R.C. Chen, C.C. Lin, and S.S. Li, “An Automatic Decision Support System Based on Genetic 
