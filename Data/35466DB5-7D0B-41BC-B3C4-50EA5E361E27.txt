     
 
i
目   錄 
目   錄 ............................................................................................................................. i 
表 目 錄 ......................................................................................................................... iii 
圖  目  錄 ..................................................................................................................... iv 
摘  要 ............................................................................................................................. vi 
ABSTRACT .................................................................................................................. vii 
壹、前言 .......................................................................................................................... 8 
貳、研究目的 .................................................................................................................. 8 
參、文獻探討 ................................................................................................................ 10 
一、網路蠕蟲 ............................................................................................................ 10 
(一)網路蠕蟲的定義 ................................................................................................................. 10 
(二)網路蠕蟲的發展史 ............................................................................................................ 10 
(三)網路蠕蟲的功能模組 ....................................................................................................... 16 
(四)蠕蟲生命週期 ...................................................................................................................... 19 
(五)網路蠕蟲的傳播途徑 ....................................................................................................... 20 
(六)網路蠕蟲的行為特徵 ....................................................................................................... 21 
二、點對點(Peer-to-Peer)網路 ................................................................................ 23 
(一)點對點網路 .......................................................................................................................... 23 
(二)點對點網路安全性 ............................................................................................................ 26 
(三)點對點蠕蟲 .......................................................................................................................... 27 
(四)即時通訊蠕蟲簡介 ............................................................................................................ 27 
三、網路釣魚(Phishing)攻擊 ................................................................................... 29 
(一)網路釣魚的攻擊手法 ....................................................................................................... 30 
(二)網路釣魚攻擊流程 ............................................................................................................ 31 
四、防火牆 ................................................................................................................ 31 
(一)封包過濾防火牆 ................................................................................................................. 32 
(二)應用層閘道防火牆 ............................................................................................................ 33 
(三)多階層狀態檢查防火牆 ................................................................................................... 33 
肆、研究方法 ................................................................................................................ 34 
     
 
iii
表 目 錄 
表 3-1 近代網路蠕蟲編年史 ........................................................................................ 15 
表 3-2 近代常見蠕蟲主體功能結構模組統計表 ........................................................ 18 
表 3-3 即時通訊蠕蟲年表 ............................................................................................ 28 
表 6-1 本研究之環境需求 ............................................................................................ 45 
表 6-2 本研究之環境設定 ............................................................................................ 51 
表 7-1 相關防禦系統比較表 ........................................................................................ 62 
 
 
 
     
 
v
圖 6-10 主動連線惡意網頁 .......................................................................................... 52 
圖 6-11 測試用的釣魚網頁 .......................................................................................... 53 
圖 6-12 有 XSS漏洞的網頁 ........................................................................................ 54 
圖 6-13 惡意網站封包轉向的警示網頁 ...................................................................... 55 
圖 6-14 釣魚網站封包轉向的警示網頁 ...................................................................... 55 
圖 6-15 XSS網站封包轉向的警示網頁 ...................................................................... 56 
圖 6-16 惡意網站、釣魚網站、XSS資料庫 ............................................................. 57 
圖 6-17 系統偵測到惡意網址並寫入 iptables ............................................................ 57 
圖 6-18  系統偵測到釣魚網址並寫入 iptables .......................................................... 58 
圖 6-19 系統偵測到 XSS網址並寫入 iptables ........................................................... 58 
圖 6-20 系統管理者收到郵件畫面 .............................................................................. 59 
圖 6-21 P2P軟體阻檔設定畫面 ................................................................................... 59 
圖 6-22 過濾主機進行 P2P軟體阻擋 ......................................................................... 60 
圖 6-23 P2P軟體無法連線畫面 ................................................................................... 60 
圖 6-24系統管理者收到郵件畫面 ............................................................................... 61 
 
 
 
 
 
 
     
 
vii
The Defense Research of Peer-to-Peer Network Worm 
 
 
 
 
ABSTRACT 
As the rapid growth of network technologies and bandwidth, network service has 
transformed into peer-to-peer network transmission by users instead the old 
Client-Server architecture. While the various services have been developed speedily, 
web-based services are applied in many ways. However, there are a lot of security 
issues has not been carefully considered. For instance, there are increasing worms, 
malicious links and phishing websites attacking security systems. Users’ privacy is 
seriously endangered.  
Therefore in this research, we tried to set up a stateful inspection firewall with 
packet filter firewall and programming. The stateful inspection firewall system helps 
inspect the status of peer-to-peer software while users surf on website. As soon as it 
detects any possible clues to worms, malicious links and phishing websites, it will 
immediately confine the connection and notify the administrators. Meanwhile, to 
protect users’ own security, it will prevent them from accidentally connecting malicious 
links or use restricted peer-to-peer software. 
In this study, we have examined efficiency of the stateful inspection firewall 
system. The test proves that the system can provide users with better security. In the 
future, with the contribution of this research, we hope to better the system functions, 
and upgrade it to be a faultless protection tool in network communication. 
 
Keyword: Network worms, Instant Message worms, phishing, P2P worms defense, 
Statefule Inspection Firewall 
     
 
9
企業或個人極大威脅和損失的駭客攻擊手法(邱瑩青,2006)。常見的社交工程攻擊包括透過(1)即時通、(2) 
電子郵件、(3)網路釣魚、(4) 圖片中的惡意程式、(5) 偽裝修補程式。目前即時通訊感染病毒方式可分
為下列三種，第一種是透過 URL網址方式傳遞病毒檔案，例如：先前發生過 jose.rivera4.home.att.net以
及Worm_SDBOT. GEN病毒，都是附帶 URL連結，引誘網友下載，只要使用者開啟連結就會下載執行
檔造成中毒。第二種是傳送檔案型，當對方打開內容中的傳送檔案就會中毒，例如：新型 MSN 病毒
-BR2002.exe(Henpeck)及MSN 射手 (worm.smibag)等。第三種則是透過前兩種方式，利用電子郵件擷取
好友名單中用戶帳號，快速傳播病毒。 
而目前時下流行的社交媒體，例如：Twitter、Facebook，都是使用者進行網頁瀏覽(Web Surfing)行
為，透過 URL方式連結網站，存取服務。賽門鐵克安全機制應變中心在 2009年第 14期全球網際網路
安全報告中，針對在 2008 年間的一些病毒行為做了研究，網頁瀏覽是新病毒的主要來源，在研究期間
所偵側到的病毒威脅中，有 90%意圖竊取機密資料。其中具有鍵盤側錄(keystroke-logging)能力的威脅占
了 76%，較 2007年的研究數據 72%，成長了 4%，該功能會記錄使用者在電腦上的輸入資訊，就可以用
以竊取如網路銀行帳戶憑證等資料。同時報告中亦提出網路釣魚活動仍然持續成長，將 2008 年所偵測
到數量與 2007年比較，從 2007年 33,428個增加到 55,389個網路釣魚活動，總計網路釣魚活動成長了
66%。最後，報告亦指出，在過去一年當中垃圾郵件(spam)的數量亦有持續成長的趨勢，從 2007年的 1,196
億筆訊息，成長到 2008 年的 3,496 億筆訊息，整體成長了 192%。其中，在 2008 年有將近 90%的垃圾
電子郵件是由殭屍網路進行散布。另外，依據 2009 年六月份的賽門鐵克安全應變部落格(Symantec 
Security Response Blog)所發佈訊息” The Phishing on Facebook Continues”指出，Symantec偵測到新一波針
對 Facebook使用者的釣魚式攻擊。此攻擊利用受到入侵的 Facebook帳號寄送惡意連結給朋友，該連結
引導使用者到假冒 Facebook 的登入頁面。使用者被要求在此釣魚網站上提供其登入帳號與密碼，被竊
取帳號密碼的帳戶則被攻擊者繼續用來發送類似的釣魚式郵件以蒐集更多帳號密碼等資料。 
另外，由於 P2P檔案分享軟體的普及，也成為另一個安全漏洞的管道，使得企業或組織擁有的個人
資料，容易在 P2P網路上大量外洩，亦可能造成個人身份遭受冒用及詐欺等等問題。舉例來說，P2P軟
體可以找到醫療資訊、報稅資料，及身份證字號，這些都可能導致個人身份被盜用，甚或洩露個人隱私，
因此，企業應該慎重檢視是否有未經授權的 P2P軟體，或是經授權使用的 P2P軟體是否已有妥善的管理，
以防止企業之資料外洩。此外，提供 P2P軟體的公司也應確認軟體設計上不會洩露個人及企業的資料。
在臺灣地區，2007年就曾有 Foxy P2P軟體洩露警局問案筆錄，至今仍可以在網路上找到相關檔案。因
P2P 軟體的檔案分享必須配合使用者的設定，供他人下載。類似 Foxy 軟體，其預設將軟體安裝的磁碟
機做檔案分享，而使得其他使用者可以透過 Foxy 找到一般人不會拿來分享的機密資訊，由於使用者對
於使用軟體的不熟悉，以及對於資訊安全觀念的不完整，而導致本身電腦上的資料外漏，造成資安事件
不斷的發生。有鑑於此，如何針對網頁瀏覽、電子郵件與 P2P軟體管理將是資訊安全防護上一個很重要
的課題。 
 
     
 
11
overflow）進行傳播，此外會檢查 TCP port 53是否有開啟，若有則進行溢位攻擊，同時攻擊者會留下一
個私人帳戶能夠日後再次回到受害主機。  
1999年 9月，類似 ADM蠕蟲的Millennium蠕蟲，或俗稱千禧蟲出現（Vision, 2001; Nazario, 2003; 
鄭輝，2003），此蠕蟲會使用 Shell 程式去進行感染下一個受害主機，同時只入侵 Linux 系統，並且修
補它所利用過的系統漏洞。它透過 imapd、qpopper、bind、rpc.mountd 四種系統服務中存在漏洞進行傳
播，此外會開啟 TCP port 1388安裝後門，進而獲取該系統的進入權限，以利將自身複製到其他主機上
繼續繁殖。  
2001年 1月，出現了一隻專門攻擊 RedHat Linux作業平台的 Ramen蠕蟲（Lemons, 2001; Nazario, 
2003），此蠕蟲會利用未經更新的 rpc.statd、wuftp 與 LPRng 三種系統服務中存在的漏洞進行傳播，具
有下列行為特徵：（1）入侵修改網頁伺服器中所屬的 index.html文件；（2）關閉 FTP匿名登入到系統；
（3）關閉 rpc.statd與 lpd的服務，確保蠕蟲將能夠再次攻擊受害主機；（4）會安裝小型的網頁伺服器，
經由 TCP port 27347進行感染；（5）移除任何一個主機存取限制，並且確保重開機時蠕蟲也跟著啟動；
（6）發送一封電子郵件給任兩個 E-mail 帳號，內容詳述被中毒電腦的 IP 位址，以及其它資料；（7）
最後在 Class B的網段中尋找新的受害主機進行感染。  
2001年 3月，由中國一名駭客所寫出的 Lion（li0n）蠕蟲（Kasarda, 2003）在網路中流竄，此蠕蟲
主要攻擊 DNS bind程式的漏洞，被感染主機中所有 index.html 都會被修改，它也會將一些重要的程式
全部換掉。藉由傳送特定的 Shell codes作緩衝區溢位攻擊，可能讓攻擊者取得 named執行時的權限或是
root權限，執行惡意的指令。甚至在被入侵的主機利用 TCP port 53開啟一個 Remote login shell，以方便
下次的入侵。 
2001年 4月，發現了 Adore蠕蟲（Dell, 2001; ISTS, 2001），並且只攻擊具有軟體弱點的 Linux系
統，例如：LPRng services、rpc.statd、Wuftpd、與 BIND等軟體，結合了 Ramen蠕蟲與 Lion蠕蟲的攻
擊方式，因此此蠕蟲具備了這兩種蠕蟲的攻擊行為模式與特徵。此蠕蟲會執行一個呼叫 ICMP的程式，
用來攻擊 TCP port 65535，同時建立後門程式。  
2001年 5月，出現了 Cheese蠕蟲（Barber, 2001; Houle, 2001），主要攻擊未更新的 DNS版本，類
似 Lion蠕蟲一樣，都是進行 BIND漏洞攻擊，只是 Cheese就像隻啃食腐肉的土狼一樣，會趁機二次入
侵那些受害主機。此蠕蟲利用 TCP port 10008進行攻擊，接著把自己安裝在/tmp/.cheese目錄中，然後執
行一連聯的 Shell command 將自己偽裝成 httpd 行程，讀取 inetd.conf 重新改寫/bin/sh，避免再被其它
Cheese蠕蟲攻擊。接著，它會重新啟動 inetd並開始掃瞄另一個 class B網段，以進一步感染其他主機。  
2001 年 5 月，首度出現一隻會跨平台感染的蠕蟲名叫 Sadmind 蠕蟲（Schachte, 2001; Dougherty, 
Hernan, Havrilla, Carpenter, Manion, Finlay, & Shaffer, 2001），此蠕蟲會透過 Solaris系統以及 IIS伺服器
上的漏洞來攻擊系統及置換網頁。這個程式會攻擊 TCP port 600，並且在 root 使用者的 home 目錄裡
     
 
13
減慢甚至無法連結。當 SQL的客戶端欲與伺服器連線時，會連線至 UDP port 1434的 Resolution service，
告知使用者欲連線時要使用何種連結埠。因此該蠕蟲利用這個 SQL 的常態行為，使用了分散式阻斷服
務（DDOS）的攻擊方式，只常駐在記憶體中，但是並不會產生任何病毒檔案。  
2003年 3月，Deloder蠕蟲出現（賽門鐵克，2003；Householder & Danyliw, 2003），此蠕蟲主要攻
擊微軟Windows NT、2000與 XP的系統，針對有開啟檔案共享的主機並且具有一份載有 86個密碼的清
單進行攻擊，同時對 TCP port 445 發動攻擊資料給受害主機。 
2003年 8月，Blaster蠕蟲，或俗稱疾風病毒（台灣微軟，2003；趨勢科技，2003）橫掃整個網際網
路，此蠕蟲利用微軟作業系統中遠端程序呼叫（RPC，Remote procedure call）緩衝溢位的弱點，取得受
害電腦的完整權限執行任何程式碼，並持續掃描攻擊網路上仍有此漏洞的電腦之 TCP port 135。同時還
會透過受感染電腦系統中的 TCP port 69與 4444去攻擊感染更多的電腦。  
2003年 8月 12日，Lovesan蠕蟲（Kaspersky Lab, 2003）利用了Windows作業系統上的 DCOM RPC
弱點，每次都會隨機掃描 20個 IP位址來搜尋目標主機是否存在此弱點，掃描的間隔時間為 1.8秒，主
要透過 TCP port 445對目標主機進行 Buffer-overrun攻擊，一旦感染了目標主機，便會開啟 TCP port 4444
來對該主機進行控制，再透過相同的手法繼續找尋其他目標主機。  
2004年 4月，微軟發現一隻名為 Sasser蠕蟲（台灣微軟，2004）正在網路上流竄，主要利用微軟的
本地安全性授權子系統服務（LSASS，Local security authority subsystem service）之弱點來進行攻擊。此
蠕蟲會大量開啟對外 TCP port 445，掃描隨機選取的 IP位址，試圖感染其他電腦，由於此行為耗盡了使
用者網路頻寬與系統資源，使用者會感覺自己無法正常上網，電腦速度變慢，甚至出現視窗倒數重新開
機的現象。 
Windows 2000，Windows XP與Windows Server 2003，透過 C++語言所撰寫，經過 UPX封裝後檔
案大小為 10KB。該蠕蟲會建立起一個 FTP伺服器在 TCP port 69，發佈四個 IP位址來掃描潛在性具有
LSASS的弱點的主機，利用 TCP port 445對受害主機進行 Request，若該受害主機回應，則會安裝 cmd.exe
執行檔在受害主機上。  
2004年 6月 9日，Dabber蠕蟲（Kaspersky Lab, 2004）與 Sasser蠕蟲非常類似，本身是一個 PE EXE
檔案，使用 UPX封裝後檔案大小為 29696 bytes。該蠕蟲會在網路上隨機搜尋 IP位址，透過 TCP port 5554
來找尋是否具有 LSASS弱點的目標主機，若找尋到則在該目標主機上的 TCP port 8967發布指令碼，另
外透過 TCP port 9898上植入後門程式。  
2004年 12月 20日，DipNet蠕蟲（Kaspersky Lab, 2004）會感染具有Windows作業系統的主機，使
用 UPX封裝後成 PE EXE檔案後，檔案大小有 154KB，解封裝後則有 314KB。該蠕蟲透過 LSASS弱點
來進行傳染，同時會隨機選擇 IP位址進行攻擊，針對目標主機的 TCP port 445要求 Request，假如目標
主機回應，則會自我複製並且隨機命名存放在Windows的系統資料夾底下（例如：%System%\h2ww.exe）。  
     
 
15
軟體最初被認為是 Warezov 的新變體。然而，詳細的分析結果顯示，此程式是起源於亞洲的全新家族。
現在可能將有第三者加入 Bagle 與 Warezov 的競賽行列。附帶一提，自二月起，我們會將來自此家族
的程式歸類為 Email-Worm.Win32.Zhelatin，並且追蹤它的活動。 
2007年 5月 6日，Sdbot蠕蟲（趨勢科技，2007）主要會透過在使用者不經意瀏覽惡意網站，或是
在該網站下載資料與工具，蠕蟲便順著資料流進入了使用者電腦，並且更改檔名，隱藏至Windows作業
系統中。由於該蠕蟲使用隨機選取 Port，同時會連接到 Internet relay chat（IRC）伺服器，並且加入該 IRC
頻道，從遠端進行監聽使用者的網路行為，導致機密資訊外流。 
張嘉哲(2007)經過文獻歸納之後，把蠕蟲主要區分成「作業系統漏洞」與「應用軟體漏洞」兩種類
型。表 3-1為網路蠕蟲歷年資料，以時間先後加以排序，同時整理出每種蠕蟲所攻擊的對象以及通訊埠
（Port）。 
 
表 3-1 近代網路蠕蟲編年史 
年代 蠕蟲名稱 漏洞類型 攻擊對象 攻擊方式 
1988年 11月 Morris 作業系統 
fingered、sendmail、
rexec/rsh 
TCP Port 23357 
1989年 10月 WANK 作業系統 DECNet的主機 無 
1998年 05月 ADM 作業系統 Linux TCP Port 53 
1999年 09月 Millennium 作業系統 Linux TCP Port 1388 
2001年 01月 Ramen 作業系統 RedHat Linux TCP Port 27374 
2001年 03月 Lion（li0n） 應用軟體 DNS BIND TCP Port 53 
2001年 04月 Adore 應用軟體 Linux LPRng services TCP Port 65535 
2001年 05月 Cheese 應用軟體 DNS BIND TCP Port 10008 
2001年 05月 Sadmind 作業系統 Solaris IIS Server TCP Port 600 
2001年 07月 CodeRed 作業系統 
Microsoft IIS Web 
Server 
TCP Port 80 
2001年 08月 CodeRed II 作業系統 
Microsoft IIS Web 
Server 
TCP Port 80 
2001年 09月 Nimda 作業系統 
Microsoft IIS Web 
Server 
TCP Port 80 
UTP Port 69 
2002年 05月 SQL Snake 應用軟體 Microsoft SQL Server TCP Port 1433 
2002年 09月 Slapper 作業系統 
Linux Apache Web 
Server 
UDP Port 1812 
UDP Port 1978 
UDP Port 2002 
UDP Port 4156 
     
 
17
蠕蟲功能下結論，並推測未來蠕蟲的功能輪廓。 
 
 
圖 3-1 網路蠕蟲統一功能模型 
資料來源：文偉平等(2004) 
1. 網路蠕蟲主體功能結構 
網路蠕蟲主體功能模組由四個子模組構成，分別為「資訊收集模組、掃描探測模組、
攻擊滲透模組、自我繁殖模組」。 
(1) 資訊收集模組(Information Collection Module)：主要決定使用何種搜尋方式做資訊收
集，包括主機系統資訊、用戶資訊、郵件位址清單，主機所在網路結構與路由資訊等，
所有資訊可與子模組共用。 
(2) 掃描探測模組(Probe Module)：主要完成對攻擊目標的弱點掃描，運用與資訊收集模組
所得到資訊，選擇決定相對的攻擊方式。 
(3) 攻擊滲透模組(Attack Module)：利用掃描探測模組獲得的主機安全漏洞，建立蠕蟲傳播
的管道。 
(4) 自我繁殖模組(Self-propagating Module)：該模組可以採用各種形式產生各種形態的蠕蟲
副本，並在不同主機間完成蠕蟲副本傳播。 
     
 
19
(3) 通信模組(Communication module)：負責蠕蟲間的溝通，或傳送指令及訊息給攻擊者，
利用此模組可讓攻擊者可以更好控制蠕蟲行為。 
(4) 遠端控制模組(Remote control module)：負責可能蠕蟲本體與攻擊者連線，可讓攻擊可
控制目標主機及傳送指令。 
(5) 自動升級模組(Automatic updating module)：負責讓攻擊者可更新其他模組功能，增加
蠕蟲能力與強度。 
(四)蠕蟲生命週期 
美國普渡大學的 CERIAS(Center for Education and Research in Information Assurance and Security)中
的入侵偵測研究小組 IDRP(Intrusion Detection Research Group)，成立專案分析 2001年所爆發的 CodeRed
等幾個網路蠕蟲的行為，並在 2002年將 CodeRed等網路蠕蟲的共同行為，歸納出網路蠕蟲從目標選擇
(Target Selection)開始，選擇利用漏洞(Exploitation)進行感染目標(Infection)，不斷重複的傳播蠕蟲
(Propagation)的蠕蟲生命週期四個階段(如圖 3-2)。 
 
 
圖 3-2 蠕蟲生命週期四個階段 
資料來源：(Intrusion Detection Research Group, 2001) 
 
1. 目標選擇 Target Selection 
這個階段蠕蟲將進行掃描動作，並決定攻擊平台，選擇被廣泛使用的平台將會使攻擊行動
更有效率。其次選擇攻擊方式，如何去攻擊遠端主機的弱點，例如一些常見的服務：網頁伺服
器或網路芳鄰等。 
以 CodeRed蠕蟲為例，在目標選擇這個階段，CodeRed蠕蟲會先掃描網路上是否有通訊埠
80的網頁主機，如果有將會開始進行攻擊行動，如果無通訊埠 80服務，將進行下一個主機的
掃描。此階段與第三節主體功能模組-資訊收集模組對應。 
     
 
21
網路蠕蟲最主要的傳播方式就是利用應用軟體、作業系統或設備的缺陷，只要是軟體，一
定會有些錯誤沒被開發者發覺，而這些錯誤可能會造成系統或軟體會有當初設計以外的功能，
這些問題就是所謂的漏洞。網路蠕蟲就是利用電腦系統存在的漏洞去撰寫程式來攻擊電腦網
路。因此，網路蠕蟲在發動攻擊前，就會對目標主機做弱點掃描，如有漏洞便於目標主機建立
環境，再對其它主機發動攻擊。例如 2001年的 RedCode&Nimda、2003年的 SQL Slammer蠕
蟲與Worm Blaster蠕蟲，以及 2004年的Worm Sasser蠕蟲，都是屬於此類。 
2. Email電子郵件傳播方式 
Email電子郵件為現代人溝通的工具，很多訊息及檔案會借由電子郵件傳遞，著名的Morris
蠕蟲就是電子郵件系統來進行傳播，至今，電子郵件仍是蠕蟲傳播最主要的媒介。蠕蟲藉由通
訊清單，逐一向清單上使用者發送郵件，用戶在不知情的情況下點擊電子郵件附件或所列網址
時，網路蠕蟲就會藉此途徑感染電腦。 
2000 年五月，名為  I Love You 的蠕蟲以簡單的標題 I Love You 並挾帶
Love-Letter-for-you.txt.vbs 附件，誘騙收信人開啟含毒郵件與附加檔案。此蠕蟲藉由 Microsoft 
Outlook 上的通訊名單完成散發，在目標主機上會感染重要的系統檔案，並下載一個名為
Win-Bugsfix.exe的檔案，偷取使用者密碼，並將密碼寄給攻擊者，造成約 55億美金的損失。 
3. 網路芳鄰共享 
Microsoft 作業系統傳輸檔案的網路芳鄰功能，也是蠕蟲傳播的重要途徑一，如 2001 年的
Nimda蠕蟲，透過攻擊Microsfot Security Bulletin MS01-044的弱點，攻擊目標主機，在成功攻
擊後，就透過網路檔案分享傳播。 
(六)網路蠕蟲的行為特徵 
經由對網路蠕蟲的生命週期、動作流程與傳播途徑進行分析，進而可以歸納出蠕蟲的行為特徵(Cliff 
Changchun Zou, Lixin Gao, Weibo Gong, and Don Towsley,2003; Vincent Berk and George Bakos,2003)： 
1. 主動攻擊 
蠕蟲目前已有自動化工具可大量散播於網際網路，當蠕蟲被執行後，就將進行一連串的自
動化攻擊程序，從掃瞄漏洞主機到發動攻擊弱點，成功後攻擊其它系統或偷取資料，並將自己
複製散播，進行生命週期的循環。整個流程都由蠕蟲程式自己完成，不需人員介入，與傳統病
毒有很大的差別。 
2. 隱蔽行蹤 
     
 
23
Security Bulletin MS03-026所發佈的弱點加以修正，將會再讓蠕蟲透過攻擊感染。 
8. 破壞性 
蠕蟲的攻擊模式已從單純感染散播，到帶有惡意攻擊的行動，如 CodeRed，除本身複製散
播以外，還會發送 100Kbyte的資料針對 www1.whitehouse.gov進行 DDos攻擊，當感染主機越
多，破壞力也將越強大。 
綜上所述條件，可以得知網路蠕蟲的破壞能力取決於傳播速度，而網路蠕蟲傳播速度的關鍵取決於
目標的選擇、多執行緒搜尋、掃描策略、傳播途徑，一般情況下，採用 DNS掃描傳播的蠕蟲速度最慢，
選擇性掃描和路由掃描比隨機掃描的速度還要快；對於目標清單掃描，當列表超過 1M位元組時，蠕蟲
傳播的速度就會比路由掃描蠕蟲慢；當列表大於 6M 位元組時，蠕蟲傳播速度比隨機掃描還慢(Vogt T, 
2003)。 
 
二、點對點(Peer-to-Peer)網路 
(一)點對點網路 
點對點網路是一種需依賴網路中使用者的電腦處理能力和網路頻寬，資源分散於使用者，而非把資
源以傳統形態集中在少數的幾台伺服器上，點對點網路的目標就是要讓所有使用者端都可提供資源。點
對點網路通常透過對等式網路(AD-HOC Network)來連接各個使用者節點，當使用者連結到點對點網路
中，就可得到一個節點序號，所有節點都是由使用者構成，透過這個序號可以去找尋其它使用者，交換
彼此擁有的節點資訊，使用這樣的方式去分享彼此所開放的資源。點對點網路透過分佈在各節點的資料
複製，增加了防範故障的可能性，在純點對點的網路中並不需要一個索引伺服器來找尋資料，點對點網
路也不會因此崩潰無法連線。點對點技術已有許多的應用，包含各種音訊視訊的傳送，以及 VoIP 的應
用等。 
Mohammad Mannan et al.(2005)提出點對點網路的三個主要架構： 
1. 純粹的點對點模式 
純粹的點對點模式，沒有主從式網路的概念-伺服器(Server)與用戶端(Client)，亦即是指在
點對點網路中，所有節點都是平等的，每個節點既是伺服器也是用戶端，每個節點會透過廣播
本身的資訊去找出鄰近的節點，並與其它節點交換資訊，這樣的設計可避免只將交換資訊集中
在少數幾台伺服器上的問題，其中，較為常見的點對點軟體 Gnutella便是使用這種架構，如圖
3-3。 
     
 
25
 
圖 3-4 半純粹的點對點模式 
資料來源：本研究整理 
 
3. 混合式的點對點模式 
混合式的點對點模式是同時有純粹點對點模式與半純粹點對點模式的特點，此一模式係由
Skype所發展而來，其在 Skype網路中架設了超級節點(Super Node)，超級節點本身即是節點，
但也用來當作交換其他節點資訊的伺服器，如圖 3-5。 
 
 
     
 
27
CA(Computer Associcate)公司在 2007 年 3 月間，也曾發佈對於點對點網路的資訊安全警訊，包括
Foxy、BitComet、eDonkey、µTorrent、Ares、Azureus、BearShare、Lphant、Shareaza、Hamachi、exeem 
lite、Fpsetup、Morpheus、iMesh等共 14款常見點對點網路軟體全部都有存在安全威脅。而這些 P2P軟
體的潛在威脅來源包括可能會覆寫檔案、為檔案重新命名、刪除檔案，或被第三方植入惡意程式等，其
中，較值得注意的是，一種名為 API HOOK、可用來隱藏真正執行程序的技術，卻廣泛被 P2P軟體採用，
「背後隱藏很大的資安風險」(林宏嘉,2007)。 
綜上所述，點對點網路在使用上的安全性問題是值得被考慮的因素之一，尤其以該架構容易擴散、
分享檔案特性，如無法適當控管，一旦被有心人士利用，影響程度可能不同以往，威力也更強大。 
 
 
(三)點對點蠕蟲 
點對點蠕蟲意指經由點對點軟體或點對點網路散播的蠕蟲，散播的方式如下： 
1. 透過點對點網路散佈 
使用者透過點對點軟體進行軟體下載時，惡意蠕蟲將自身偽裝成相似的檔案名稱供使用者
下載，如使用者不加以檢查，並會執行惡意蠕蟲。 
2. 透過點對點軟體散佈 
惡意蠕蟲經由使用者執行感染後，惡意蠕蟲針對使用者資訊進行收集(如好友列表)，並傳
送檔案或惡意連結給好友清單上目標，若不注意點擊，將會下載蠕蟲造成感染。以此類方式造
成傳染與散佈的蠕蟲，依卡巴斯基網站上的定義，稱之為即時通訊軟體蠕蟲。 
(四)即時通訊蠕蟲簡介 
即時通訊蠕蟲(IM-WORM)為點對點蠕蟲的一種，針對即時通訊軟體攻擊的蠕蟲。這種蠕蟲利用人
與人使用即時通訊軟體共享訊息、軟體，發送一個網頁連結或檔案，且該網頁通常是藏有惡意程式的網
頁或釣魚攻擊網頁，誘使使用者點擊下載，感染使用者系統。不同於其它蠕蟲，會攻擊系統弱點，而是
善用社交工程技巧，散播及感染。 
本研究彙整近年來較有名的即時通訊蠕蟲的範例，如表 3-3： 
 
     
 
29
2007年 6月 Mubla worm 
1. 使用社交工程技巧傳送「照片」相關訊息，
且附上一個壓縮檔供使用者下載的蠕蟲。
2. 當使用者執行後，它會換掉Windows Live 
Messenger、Internet Explorer(IE)，當使用
者一旦執行這兩項軟體時，蠕蟲會連上
www.brendashop.com 網域的 IRC 頻道
(Internet Relay Chat Channel)供蠕蟲撰寫
者下達指令，例如：下載檔案或寄送帳號
密碼至特定信箱。 
2008年 6月 Evolym worm 
執行時將會下載檔案，並透過即時通、電子郵
件與行動裝置散播。 
2008年 7月 Chod worm與變種
1. 使用Windows Live Messenger 傳播惡意
連結 
2. 大量發送病毒信件並安裝後門程式 
3. 更改 hosts檔案，使中毒電腦無法連到相
關資安網站。 
2010年 5月 Yimfoca worm 
1. 使用即時通傳播 
2. 利用社交工程傳送「照片」相關訊息，且連
上一個乍看下像是 Facebook等有照片的網
站連結。 
3. 蠕蟲一經執行，就會自我複製到
%WinDir%\infocard.exe，然後把自己加入
Windows Firewall List，並修改註冊機碼
(registry keys)，並阻止Windows Updates服
務。 
資料來源：本研究整理 
 
即時通訊蠕蟲除了感染主機外，多數也會安裝後門程式，進一步的控制受感染主機，至目前為止，
尚未有利用即時通訊軟體漏洞進行攻擊的蠕蟲，多數還是利用社交工程技巧誘使用者下載軟體或點擊惡
意網址。 
 
三、網路釣魚(Phishing)攻擊 
「Phishing」一詞最早起源於 1996年，根據反網路釣魚工作小組(Anti-Phishing Working Group, 2008)
定義，「網路釣魚是一種利用社交工程與資訊技術，在網路上竊取個人身份資料或金融帳戶等的一種方
     
 
31
網路釣魚另一種含意就是網路詐騙，利用人們的不注意，欺騙使用者輸入資料，尤其攻擊手法不斷
的翻新，除了入侵正當網站以外，進行網路釣魚攻擊最好的方式亦可直接架設惡意網站，讓使用者在網
路上瀏覽網頁，可能因為無法及時反應而避免受害。 
(二)網路釣魚攻擊流程 
1. 知識的缺乏攻擊者透過網際網路搜尋有漏洞的網頁伺服器，入侵得到權限之後，為完整控
制伺服器，會在伺服器中植入後門。 
2. 建立惡意網站，或使用已入侵的網頁伺服器，上傳經攻擊者修改或偽造的網頁至伺服器，
等待使用者連線。 
3. 攻擊者發送大量偽造郵件或利用撰寫蠕蟲攻擊即時通訊平台，讓使用者連線。 
4. 當使用者收到偽造郵件或透過即時通訊平台點擊連結時，將直接連線至惡意網站。 
5. 使用者透過惡意網頁輸入個人資訊(例如：帳號、密碼)時，使用者之個人資訊將透過網站傳
送至攻擊者。 
整體而言，網路釣魚的流程並不複雜，且複製網站技術目前已有很多程式或工具支援，只需點選選
項，整個網頁便可完整複製成另一複本使用。不過本研究歸納上述 5點網路釣魚攻擊流程，網路釣魚防
治仍是有跡可尋的，需要使用者與系統管理者雙方的配合，加強教育使用者使用系統及提昇管理者於系
統管理等方面的能力，以防範網路釣魚攻擊。 
本研究彙整上述文獻，歸納出四種最常見的網路釣魚攻擊手法：(1)利用電子郵件大量傳送，以社交
工程技巧，宣稱緊急訊息或程式重大更新等訊息，等待使用者受騙後連結至惡意假冒網站；(2)建立釣魚
網站，待使用者經由電子郵件或搜尋引擎連結；(3)撰寫惡意程式，木馬、病毒、蠕蟲等，夾帶至附件，
使用者點擊執行後，讓使用者連線至正當網站時替換連結，使其連至惡意網站；(4)網域名稱下毒，稱為
Pharming，藉由入侵 DNS(Domain Name Server)的方式，在使用者連線至正當網站時，轉向連結到惡意
假冒網站，讓使用者誤以為是正當網站而輸入資料。其中，在這些網路釣魚的攻擊手法中，以電子郵件
與網域名稱下毒最為常見。 
 
四、防火牆 
在面對各式網路攻擊不斷的增加與翻新手法，要在網路中隔絕惡意流量與存取，最好的方式便是使
用防火牆。引用Macrcus J.Ranum(2000)的說法：「防火牆可抵檔來自網路上各種型態的攻擊，除了你不
使用它。」防火牆存在於内部網路與外部網路咽喉點，無論是外部與內部的網路封包，在經過防火牆時
需依照防火牆所設定的安全規則與政策才能夠正常傳輸，如同中古時代，守衛負責城堡門口的檢查，檢
查無誤後允以放行。在網路環境中，也可使用同樣的方式，隔絕內外部網路，不但能夠防護外部攻擊，
也能限制內部網路通訊。 
     
 
33
(二) 應用層閘道防火牆 
應用層閘道防火牆又稱 Application Level Gateway，又被稱為代理伺服器(Proxy Service)作用於
OSI 第七層應用層，如圖 3-7。所有內部使用者必須透過 Proxy Server 才能與外部網路連線，而
且一切的連線動作都由 Proxy Server 代為執行。每一種網路應用程式，如 HTTP、FTP、SMTP、
POP3、FTP等，將由 Proxy Server代理程式模擬網路協定連線。不同於過濾型防火牆，Proxy Server
不轉送封包，優點在於可「隱藏」內部主機位址，目的地的伺服器無法知道原始發送資料主機的
實際位址，使得內部的網路得以隱藏起來不被外部網路所知，並且記錄功能較強，可以記錄經過
防火牆的封包內容。如無相對應的代理程式，封包將完全無法通過防火牆，缺點是價格昂貴、效
能差、不易安裝與維護，不過以安全控管與封包過濾能力的方面來看，應用層閘道防火牆還是高
於封包過濾型防火牆。 
 
 
圖 3-7應用層閘道防火牆功能示意圖 
資料來源：本研究整理 
 
(三) 多階層狀態檢查防火牆 
多階層狀態檢查防火牆(Multiplayer Statefule Inspection)，結合了封包過濾防火牆的速度與彈性
與應用層閘道防火牆的安全防護，是一種較新型的防火牆，可以說是一種混合型的防火牆架構，
如圖 3-8。它在除了過濾在網路層的封包的來源與目的做放行與攔截，並且會在應用層中萃取出跟
狀態有關的資訊，放在動態狀態表來對後續封包的情況做判斷。 
 
     
 
35
 
圖 4-1 研究方法圖 
資料來源：本研究整理 
 
(一)瞭解相關問題 
近年來因為網路頻寬的大幅提升，網頁瀏覽、電子郵件、P2P軟體被大量使用的同時，網路安全的
問題也凸顯出來。經由使用這些網路服務的行為而產生的資安事件時有所聞，需要網路及系統管理人員
與使用者加以重視，以減少網路安全事件的危害。 
(二)文獻探討 
回顧與蒐集有關網路蠕蟲、點對點網路、惡意連結、網路釣魚攻擊、防火牆防護之相關文獻，包含
攻擊手法、防禦方式、安全性問題等文獻資料與理論，藉此了解在使用網頁瀏覽、即時通訊軟體、P2P
軟體對網路環境的可能的安全威脅，以提出防護系統之基本架構。 
(三)設計防護系統 
     
 
37
本研究所提出的系統主要是利用封包重新導向的方式對使用者發出警告該連結已被列為不安全網
站，並立即結束該連線，如此可降低使用者在不知情的情況下連結至惡意網址所造成的損害。 
本研究的網路架構如圖 5-1，本研究建置了一台過濾閘道主機負責監控，使用兩張網路卡，除了路
由內部網路與外部網路封包之外，所有出入口的封包都必須經過該過濾閘道主機，用來分析與判斷封包
內容。 
 
 
圖 5-1 網路架構圖 
二、系統架構說明 
本研究的目的在於開發網路封包監控機制的監測系統，並結合防火牆與路由器，將封包監控機制應
用於使用者與網路間的通訊安全保護，以協助管理者保障使用者的網路使用安全。 
本研究除了以封包監控機制來做為網路通訊內容的檢查外，並應用 Netfilter/iptables 防火牆子系統
功能的 L7-filter模組，其具有應用層防火牆功能，與多數應用層防火牆架構相同，成本低，功能完善，
又是開放源始碼(open source)的程式設計，便於維護，是一個低成本的選擇。 
實作架構共分為三個部分，1.系統架構、2.系統設計流程、3.系統運作流程，分別說明如下。 
(一)系統架構 
本研究之系統架構如圖 5-2，本系統主要的功能有 1.主動連結防護、2.被動式連結防護、3.P2P軟體
防護、4.轉向封包、5.防火牆設定阻檔、6.郵件通知，等六項功能。 
     
 
39
此功能主要在程式處理封包特徵比對時，當比對出有惡意連結 URL/IP address 特徵
時，即由系統製造出即時連線封包，在來源端及目地端之間插入轉向封包，將使用者封包
做轉向至內部警示網站，並立即設定防火牆規則，即切斷來源端與目的端的連線。 
5. 防火牆設定阻檔 
此功能主要在當程式處理主動式防護/被動式防護封包特徵比對時，當比對出有惡意連
結 URL/IP address特徵時，即將其 URL/IP address寫入 iptables設定檔，並即時新增阻檔規
則，利用 iptables為之後的連線做阻檔，不用再由程式重覆執行相同的 URL /IP address過
濾。 
而在程式比對 P2P軟體特徵時，當比對出有設定的 P2P特徵，則會將其特徵阻檔規則
寫入 iptables設定檔，由 iptables 子系統 L7-Fliter做後續的封包阻檔。 
6. 郵件通知 
此功能主要由程式所比對出有惡意連線 URL/IP address特徵時，會將相關資訊(如:來源
端、目的端與封包內容等)收集成報告，並發送郵件通知管理員目前偵測狀況，以讓管理員
可以依報告進行處理。 
(二)系統設計流程 
本研究中採用了 Sharppcap/libpcap 這套開放原始碼的程式碼進行撰寫底層封包的處理，並使用 C#
撰寫封包特徵比對功能、封包轉向、郵件通知功能等外部程式，資料儲存以 Mysql 作為 URL 及特徵資
料庫儲存之用。 
系統主要的執行步驟為，設定 Linux 本身既有的 Routing 功能，確定內部網路與外部網路都經由過
濾閘道主機後，以及安裝 MONO 及 XSP模組使 Linux支援.net 程式，接著進行 Sharppcap/libpcap的程
式撰寫，部份程式碼如圖 5-3，進行網頁瀏覽、P2P軟體以及其它軟體網路之間通訊的偵測。 
     
 
41
 
 
圖 5-5  P2P軟體特徵庫 
 
(三)系統運作流程 
本系統運作流程如下： 
1. 將過濾閘道主機與 iptables 功能啟動，並且執行程式，用以觀察與監控內部網路與外部網路中
所有通訊封包。 
2. 先進行主動式防護比對，先比對是否為通訊埠 80 TCP通訊封包出現網址，程式直接與資料庫
內容進行比對。 
3. 比對後如有在資料庫裡所出現的惡意網址，即產生封包直接使來源端做轉向至警告網頁並設定
iptables config檔案及資料庫並發送郵件，阻止後續有關連線。 
4. 若不是，將進行被動式防護比對，比對所有網路封包內容是否帶有網址，程式直接與資料庫內
容進行比對。 
5. 比對後如有在資料庫裡所出現的惡意網址，立即使用指令至 iptables 進行阻檔，並將資訊寫入
config檔案及資料庫，發送郵件，阻止後續有關連線。 
6. 若都非為以上內容，進行 P2P軟體特徵比對，比對後如有 P2P軟體特徵，立即使用指令至 iptables
進行阻檔，並將資訊寫入 config檔案及資料庫，發送郵件，阻止後續有關連線。 
整體流程如同圖 5-6。 
 
     
 
43
透過系統模組的設計，本研究完成以下兩點功能，1.讓網路蠕蟲所發送的惡意連結或釣魚網站連結
無法作用。2.惡意連結在內部網路中無法作用，因 URL/IP address已被記錄並阻檔在 iptables裡，所有封
包將在傳送前會被檢查，此外，惡意連結也適用於其他使用者，所以惡意連結在內部網路中將無法作用。 
(二)封包轉向設計 
利用封包轉向，可以在使用者電腦與攻擊者網站正確建立連結前就予以阻斷，惡意內容或程式並不
會下載到使用者端，不同於其它系統，在建立連結下載軟體後，才過濾掃描，採取被動的處理威脅行為。 
(三)P2P軟體防護功能 
利用 iptables/L7-filter子系統，當程式判別封包內容存有 P2P軟體封包特徵時，交由 L7-filter進行阻
檔，可有效管理使用者在內部網路 P2P軟體的使用，禁止未經授權的 P2P軟體通訊的行為。 
 
四、研究限制 
(一)加密封包 
本研究是利用單一過濾閘道主機進行過濾封包，監控所有流經過濾閘道主機的封包資料。如果加密
封包無適當的金鑰解碼，封包的資料欄位將只是無意義亂碼，透過使用 SSL 協定、VPN 連線或 P2P 軟
體 eMule的模糊協定及 Skype的 SSL通訊，其所加密的封包目前無法進行判斷，而像其它無加密的通訊
協定，如 http、smtp、ftp等協定，則是都可以正確判別，進行相關防護工作。 
(二)實體限制 
本研究架構中，以過濾閘道主機方式連結內外部網路，強制所有封包導入過濾閘道主機，過濾閘道
主機除了監控封包以外仍需進行比對特徵並路由封包，使得過濾閘道主機的效能決定於 CPU 處理速度
與網路卡好壞。 
 
五、系統演練設計 
本研究在內部網路中設計了一個實驗環境，實驗的內部網路為 172.16.3.0/24，本研究實驗架構如圖
5-7，內部網路使用者將透過過濾閘道主機與外部網路進行連線，我們將進行主動式防護與被動式防護測
試與 P2P軟體阻檔測試。在主動式防護測試時，由使用者自動連線惡意網站，測試資料庫中惡意連結、
釣魚網站、及 XSS資料網址時，系統是否可以正確攔截，進而導向警示網站。在被動式防護上，本研究
     
 
45
陸、系統成果與驗證 
一、系統環境與平台建置 
    因為在實際企業網路環境部署上需要有相當的時間及人力配合，在成本、系統效能及環境考量下，
本研究利用VMware Vsphere 4.0軟體，利用虛擬化技術，建置了整個研究實驗環境，整個環境包含大頻
寬的VDSL(Very High Data Rate DSL) 10M/2M的對外網路，使系統能符合與現實企業的環境相符。 
本研究使用閘道方式部署，主機裝置於網路連接點咽喉，可讓所有內外部網路傳輸封包必需經過主
機檢查封包，本研究的檢查機制可以充份發揮效果。而不論內部網路使用者所使用不同的作業系統或通
訊軟體，經本研究之測試結果顯示不會產生其他問題，在本研究裡使用了各版本的Windows作業系統主
機作測試，均可以與現實的企業網路環境相配合。本研究利用Linux系統，並使用Mono平台以C#語言開
發，並搭配Sharppcap/Libpcap函式庫補捉封包資訊，探討本研究所提出防護方法之成效。表6-1為本研究
閘道過濾主機之環境需求。 
 
表6-1 本研究之環境需求 
實驗環境需求 系統(軟體)名稱 版本 
作業系統平台 CentOS CentOS 5.4 
測試系統平台 微軟 Windows 作業系統 Windows XP SP3 
程式平台 
Mono
Visual C#  
SharpPcap 
2.4.2.3 
2008 
2.4.3 
封包截取 Libpcap 0.9.8 
網路瀏覽器 Internet Explorer 8.0 
P2P下載軟體 BitTorrent 6.3 
P2P下載軟體 eMule 0.45以上 
即時通訊軟體 Windows Live messenger 8.1以上 
即時通訊軟體 Yahoo 即時通 8.0以上 
資料來源：本研究整理 
 
本研究相關軟體之官方網站表列如下，可提供參考。 
z CentOS：http://www.centos.com 
     
 
47
圖 6-2為一般網頁瀏覽畫面，使用者在網址列輸入網址，就可以透過連結到網站主機，本研究將會
由內部使用者，主動連線幾個已被列為惡意網站，測試閘道過濾主機是否能找出惡意連結並阻擋。 
 
 
圖 6-2網頁瀏覽器使用介面 
 
在圖 6-3為Windows Live Messenger的使用介面，本研究使用了兩個帳號供測試使用，並把對方加
入好友群組，測試從外部網域傳送惡意連結給內部網域使用者，閘道過濾主機是否能找出惡意連結並阻
擋。 
     
 
49
 
圖 6-5 Yahoo 即時通使用介面 
 
圖 6-6 為 Yahoo 即時通訊息交談畫面，本研究在內部網路中的測試電腦使用了 Windows Live 
Messenger與 Yahoo 即時通兩套軟體，而外部使用者則是使用了Windows Live Messenger，如此可以測
試Windows Live Messenger互傳與跨軟體兩種封包能否被偵測出來。 
 
圖 6-6 Yahoo 即時通與MSN訊息交談畫面 
圖 6-7、圖 6-8、圖 6-9 則是 P2P 軟體使用畫面，本研究在內部網路中的測試電腦使用了
eMule/Edonkey、BitTorrent、Foxy等檔案傳輸型的 P2P軟體，測試本研究中所選定的 P2P軟體封包是否
可以正確的被閘道過濾主機正確檢查出來，並設定阻檔。 
     
 
51
 
圖 6-9 Foxy P2P軟體畫面 
 
三、系統演練 
(一)實驗設計 
本研究實驗中，將使用幾個真實被列為惡意網站、釣魚網站、XSS攻擊安全性威脅網站進行實證測
試，均使用目前系統內資料庫做 URL 比對。在實驗中將主動連至惡意網站做為主動式防護實驗，釣魚
網站則以電子郵件方式做被動式防護實驗，XSS網站則使用即時通軟體Windows Live Messenger與Yahoo 
即時通做社交工程實驗，而 P2P軟體過濾方式相同，本研究選定 Foxy P2P軟體測試選定阻檔。 
本研究使用的資料來源，包括惡意網站資料庫為 Malware.com 資料，釣魚網站使用 Phishtank.com
的資料，XSS 攻擊網站則是收集各網站上被列為有 XSS 漏洞網站。在程式一開始執行時，就會連至上
述網站更新最新的網址資料，而整個實驗環境如表 4-2所示，實驗中利用外部使用者傳送訊息給內部網
路使用者，測試閘道過濾主機是否能找出惡意連結並設定阻檔。 
 
 
表6-2 本研究之環境設定 
扮演角色 IP OS 
外部使用者 219.87.160.35/24 Windows 7  
     
 
53
 
圖 6-11 測試用的釣魚網頁 
 
圖 6-12 被列為有 XSS漏洞的網站，一般的網頁若沒有對查詢字串進行控制，有心人士可透過一些
攻擊語法來開啟新視窗，透過即時通訊方式或電子郵件，經由社交工程方式，讓使用者連線至特定網址，
或利用於縮址技術，這一大串的攻擊碼也可以縮成一串短網址，在使用者不知情的情況下，一旦開啟便
受到威脅。 
     
 
55
 
圖 6-13 惡意網站封包轉向的警示網頁 
 
 
圖 6-14 釣魚網站封包轉向的警示網頁 
     
 
57
 
圖 6-16 惡意網站、釣魚網站、XSS資料庫 
 
 
 
圖 6-17 系統偵測到惡意網址並寫入 iptables 
     
 
59
 
圖 6-20 系統管理者收到郵件畫面 
 
圖 6-21 為閘道過濾主機設定 P2P 軟體畫面，在選擇畫面選定要阻擋的 P2P 軟體，當在內部網路內
有使用者使用 P2P軟體時，主機將會進行阻檔，並將資訊寫入 iptables內，發送信件通知管理者。 
 
圖 6-21 P2P軟體阻檔設定畫面 
 
     
 
61
 
圖 6-24系統管理者收到郵件畫面 
(三)實驗結論 
本研究實作測試了由使用者主動輸入網址連線的主動式防護、使用者被動式點擊網址的被動式防護
以及 P2P軟體的防護，實驗結果均可在本研究所設計的防護系統，設定的劇本下正常運作，顯示閘道過
濾主機可以符合本研究所設定之防護需求及功能。 
 
 
 
 
 
 
 
 
 
     
 
63
適用於所有網路程
式。 
時阻檔，以發送分析
報告通知管理者。 
報表功能 無 有 有 
建置成本 
無(不含硬體) 100人版本為 13萬元
(不含硬體)，依使用者
數，每位使用者每年
1000元 
價格為 30萬元(不含
硬體) 
資料來源：本研究整理 
 
由上表可得知，如要在企業網路內建置防護系統，需花費大量的金錢與系統需求評估後才能有效的
達成系統防護。本研究利用過濾網路封包與防火牆阻檔機制，阻絕了使用者與惡意網站接觸的可能，並
且整個環境架構皆使用開放原始碼軟體與作業系統，提供了企業網路安全建設上低成本的建置策略的選
擇。 
 
二、研究結論與貢獻 
本研究所開發的防護系統及功能對於使用者在網路上的行為能夠提供安全的防護，尤其一般使用者
在網路上無法判別連結是否有問題，通常看到可以輸入或執行的畫面就會直接執行，導致惡意程式入侵
並開啟後門，造成個人或企業相當大的損失。本系統在攻擊者及內部使用者間建立連結前就由系統阻
止，惡意的連結或攻擊程式將不會下載到使用者端，並可讓管理者即時得知目前網路狀況，即時採取處
置，有效隔絕網路攻擊。 
本研究之主要貢獻如下所示： 
z 使用封包監控技術，能夠協助系統管裡人員有效的防範惡意連結、釣魚網站、XSS跨站攻擊及
做到 P2P軟體管理，可以有效避免企業網路受到攻擊或資料外洩等資訊安全事件的發生。 
z 使用 OpenSouce軟體，並採.net語言撰寫，程式可在Windows與 Linux跨平台執行，適用環境
彈性大，成本低廉，維護方便，且有相當好的防護效果。 
 
三、未來研究方向 
未來希望除了目前已有的惡意連結、釣魚網站、XSS跨站等資料特徵外，加入報表與統計功能對使
用者網路連線行為做管理與分析。或提升讓系統可以使用 Snort特徵資料庫，進一步擴充成 IDS(入侵偵
     
 
65
http://www.cert.org/advisories/CA-2001-26.html. 
17 CERT, 2003, CERT Advisory CA-2003-20 W32/Blaster worm, Available at:  
http://www.cert.org/advisories/CA-2003-20.html. 
18 CERT/CC, 1989, CERT Advisory CA-1989-04 WANK Worm On SPAN Network, Available at: 
http://www.cert.org/advisories/CA-1989-04.html. 
19 Cliff Changchun Zou, Lixin Gao, Weibo Gong , Don Towsley , 2003, Monitoring and Early Warning 
for Internet Worms, CCS 03, p.190-199, Washington DC, October 27-31. 
20 Darrell M.Kienzle and Matthew C. Elder, 2003, Recent Worms: A Survey and Trends, WORM ‘03, 
Washington, DC, USA, October 27. 
21 Emule, http://www.eMule-project.net. 
22 Eugene H Spafford, 1989, The Internet worm program: an analysis, ACM Computer Communication 
Review, Available at:   http://homes.cerias.purdue edu/~spaf/tech-reps/823.pdf. 
23 Eugene H. Spafford, 1988, An analysis of the worm, Purdue Technical Report CSDTR-823, Available 
at: http://homes.cerias.purdue.edu/~spaf/tech-reps/823.pdf.  
24 Gunter Ollmann, 2006, The Phishing Guide, Avaliable at: 
http://www.technicalinfo.net/papers/Phishing.html. 
25 J Nazario, 2004, Defense and Detection Strategies against Internet Worms,  Artech House. 
26 J Nazario, Anderson J, Wash R,Connelly C, 2001, The future of Internet worms,Blackhat 
Briefings,Las Vegas, NV. Retrieved April 24, 2007, Available at: 
http://www.cgisecurity.com/lib/the_future_of_internet_worms.pdf. 
27 Kaspersky Lab Virus List, Available at:   
http://www.securelist.com/en/threats/detect/viruses-and-worms?behavior=2#list. 
28 Libpcap/tcpdump, http://www.tcpdump.org.  
29 Mohammad Mannan, Paul C. van Oorschot,2005, “On Instant Messaging Worms, Analysis and 
countermeasures”, Proceedings of the 2005 ACM workshop on Rapid malcode, p2-11. 
30 Mono, http://www.mono-project.com. 
31 Netfilter/iptables, http://www.netfilter.org. 
32 Nicholas Weaver, Vern Paxson, Stuart Staniford, and Robert Cunningham, 2003, “A Taxonomyof 
Computer Worms”, WORM ‘03, Washington, DC, USA, October. 
33 Prabhat K. Singh and Arun Lakhotia, 2002, “Analysis and Detection of Computer Viruses and 
Worms-An Annotated Bibliography”, ACM SIGPLAN Notices 29 V.37(2), February. 
34 Sharppcap,http://sourceforge.net/projects/sharppcap/. 
35 Symantec, The Phishing on Facebook Continues, 2009,  Available at: 
http://www.symantec.com/connect/blogs/phishing-facebook-continues 
36 Vincent Berk and George Bakos, 2003, Designing a Framework for ActiveWorm Detection onGlobal 
Networks, IEEE International Workshop on Information Assurance (IWIA’03), Darmstadt, Germany, 
March 24. 
37 Vogt T, 2003, Simulating and optimizing worm propagation algorithms,  Avaliable at: 
http://web.lemuria.org/security/WormPropagation.pdf.  
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
