中文摘要： 
在大型的監測環境中，為了監測環境狀態，經常佈建大量的靜態的感測器。很顯然在監測區域內
會有許多覆蓋空洞(Coverage Hole)，而且覆蓋空洞具有多邊形的外型。每一空洞區由散佈在其周圍的感
測器合力計算出來，因此所有的覆蓋空洞區可同時計算出來。由於可將多邊形三角化，所以本計畫鎖
定如何在一三角形區域內佈建感測器。本計畫提出一個新的佈建方法：以三角形為基礎的分而治佈建
演算法。 其中三角形的頂點為三個靜態感測器，將此三角形切成一個具有內角為 60°小三角形，我們
保證具有 60°內角的小三角形可被完全覆蓋(Full Coverage)，剩下的部分繼續分割成具有 60°內角的小三
角形，直到剩下的部分能被位於三角形頂點的感測器完全覆蓋。每一個佈建的感測器，其位置座標均
可被推導出。因此，構成多邊形的三角形所需的感測器位置均可被推導，換言之，多邊形空洞區所需
的感測器，其座標位置皆可被計算出來。 
關鍵詞：無限感測網路，佈建感測器，座標轉換，覆蓋空洞區 
英文摘要： In order to monitor the environmental conditions, a large quality of static sensors normally are 
deployed randomly in large monitored area. Obviously, there are coverage holes distributed over the 
monitored area, and the coverage hole can be polygonal. Each coverage hole is evaluated collaboratively by 
static sensors surrounding the hole, while all coverage holes are evaluated in parallel. Owing to that a polygon 
can be divided triangularly, exactly how to deploy sensors on a triangle is of priority concern. Three static 
sensors are located individually on the three nodes of triangles following random deployment. This work 
presents a novel divide-and-conquer deployment algorithm based on the triangular form that is executed on 
the three static sensors. The triangle can be cut into smaller ones that contain at least one interior angle equal 
to 60°. The small triangles with a 60° angle can be ensured full coverage, while the remaining area is still a 
triangle. The cutting is repeated until the triangle is sufficiently small so that the sensors on the three nodes 
can fully cover the area. Ultimately, the coverage hole of a triangle can be full coverage.  Moreover, the x-y 
coordinates of each deployed sensor can be deduced. The proposed algorithm can conquer the coverage hole 
of each triangle of the polygon. The number of sensors and x-y coordinates of all sensors deployed in the 
coverage hole of the polygon can be evaluated as well.  
Keyword：Wireless sensor networks, sensor deployment, coordinate transformation, coverage hole  
I. INTRODUCTION 
Wireless sensor networks (WSNs) [1] continuously evolve in industry and academia. In contrast with 
traditional mobile ad-hoc networks [2], a WSN comprises sensing, computing, and communication elements 
that enable an administrator to implement, observe, and react to a specified environment [3]. An increasing 
number of WSNs are utilized to gather information for practical applications, including irrigation systems, 
pollution detection, intelligent buildings, bridges, security mechanisms, military operations and transportation 
[4].  
Many researchers have paid their attention to WSNs, and one of the most important issues investigated in 
previous works is the deployment of the sensor nodes. As the mobile sensors are more expensive than static 
ones, the latter are randomly deployed in a large monitored area initially. Apparently, unforeseeable factors 
such as wind and landforms may affect. As the location of each static sensor can be determined by the 
researches [5], [6], coverage holes are then detected and estimated using the Voronoi diagram [7], [8]. 
Coverage holes refer to locations that no sensor covers [9]. Information of coverage holes is collected, along 
with determination made of how to cover the coverage holes with mobile sensors. Obviously, deployment 
costs can be significantly reduced, if evaluating the number of sensors and the explicit coordinates of sensors 
deployed in the coverage hole is feasible. Determining the exact number of sensors and where to place them 
are of priority concern.   
This work describes a triangle deployment algorithm based on the divide-and-conquer method in WSNs. A 
coverage hole can be polygonal, and a polygon can be divided into triangles [10], [11]. A triangle consists of 
three nodes, and three randomly deployed sensors are located on the nodes. The triangle can be cut into small 
ones that contain at least one interior angle equal to 60°. These small triangles with 60° angle can be ensured 
full coverage, while the remaining area is still a triangle. The cutting is repeated until the triangle is 
sufficiently small so that the sensors on the three nodes can fully cover the area. Ultimately, the coverage hole 
of a triangle can be full coverage. Moreover, the x-y coordinates of each deployed sensor can be deduced. The 
proposed algorithm can conquer each triangle of the polygon. The number of sensors and the x-y coordinates 
of all sensors deployed in the coverage hole of the polygon are evaluated as well.  
1
     
Fig. 1.  The topology of optimal    Fig 2.  The Voronoi         (a)                         (b) 
deployment for three neighboring                       Fig. 3. (a) The Voronoi diagram with a coverage hole. (b)  
sensors.                                            The polygon ABCDE is decomposed into four triangles 
A. Evaluate the Coverage Holes in Parallel 
The Voronoi [7], [8] diagram of a collection of geometric objects is a partition of space into cells, each of 
which consists of the nodes closer to one particular object than to any others. Figure 2 shows an example. The 
nodes in Fig. 2 are the static sensors and each point in a given cell is closer to the sensor in this cell than to 
any other one. The sensing range of nodes A, B and C as shown in Fig. 3, cannot fully cover the triangle 
ΔABC, i.e., there is a coverage hole in ΔABC. Figure 3(a) illustrates the scenario in which sensors are 
randomly deployed on the monitored area. Assume that the area is full coverage except for the gray area. 
Based on the Voronoi diagram, the nodes surrounding the gray area can evaluate the polygon ABCDEF. The 
sensing range of nodes A, B, C, D and E are closer to the gray area than to any other sensor. Additionally, 
these nodes cannot fully cover the gray area, i.e., the gray area is a coverage hole. Following random 
deployment, many coverage holes are distributed over the monitored area. All coverage holes are evaluated in 
parallel, and the polygon of each coverage hole is evaluated by the static sensors surrounding the hole. 
The work devises developing a novel algorithm to deploy sensors in triangles. The three static sensors, 
located on the nodes of the triangle, execute the algorithm to deduce the x-y coordinates of each sensor. The 
coverage hole in the monitored generally has a polygon shape. Figure 3(b) shows the polygon ABCDE. 
Because a polygon can be decomposed into many triangles [10], [11], the deployment strategy focuses on the 
triangles. According to Fig. 3(b), the polygon ABCDE is decomposed into four triangles, i.e. ΔAEF, ΔAED, 
ΔADC and ΔABC. 
B. The Strategy of Deployment and Assumptions 
The triangle with a 60° interior angle is considered because the basic optimal deployment topology (Fig. 1) 
shapes an equilateral triangle. For ΔABC, assume that ∠𝐴𝐵𝐶 = 60° and ∠BAC<90°. After sensors are 
randomly deployed, nodes A, B, C are deployed sensors. These sensors are depicted with shaded circles as 
shown in Figs. 4 and 5. To achieve full coverage ΔABC, the sensor is deployed on line 𝐴𝐵 and the adjacent 
sensors on the line are separated by the distance of √3𝑟. Once one sensor is deployed, all sensors that must be 
deployed on the right hand side can be evaluated by front point /rear point. 
For sensor o, the front point /rear point is on the line 𝐴𝐵 and above/under node o. The two points to the 
node o are both with the distance of 𝑟
√3
. While ∠𝐵𝐴𝐶 ≤ 30°, the amount of sensors, deployed on the right 
hand side of node o, can be determined by the distance from front point to the line 𝐴𝐶 in Fig. 4. The amount 
can be evaluated by the distance from rear point to the line 𝐴𝐶 in Fig. 5 for 30° < ∠𝐵𝐴𝐶 ≤ 90°. Owing to 
of  ∠𝐴𝐵𝐶 = 60°, ΔABC can obviously be fully coverage. 
For simplicity, assume that line 𝐴𝐵 denotes the left side of ΔABC; node B and C are on x-axis in the 
following section. If line 𝐴𝐵 denotes the right side of △ABC and ∠𝐴𝐵𝐶 = 60°, these sensors, evaluated by 
front point/rear point, will be deployed at the left hand side of node o. A triangle with no interior angle to 60° 
must be rotated and cut, as described in a later section. 
C. The Basic Deployment Scheme I (𝜃 ≤ 30°) 
Figure 6 illustrates the basic deployment scheme I, in which the shadow circles denote the sensor deployed 
on the node A and B. Additionally, ΔABC refers to the monitored area that the sensors must fully cover, in 
which  ∠𝐵𝐴𝐶 = 𝜃 ≤ 30° , and ∠𝐴𝐵𝐶 = 60° . Lines 𝐴𝐷  and 𝐵𝐷  are perpendicular, and ∠𝐵𝐴𝐷 = 30° . 
Lines 𝑖𝑘, 𝑢𝑥 and 𝐵𝐷 are parallel to x-axis. Line 𝑖𝑘 is tangent to the sensing range of sensor A at point k, 
and intersects line 𝐴𝐵 and 𝐴𝐶 at point i and j, respectively. 
3
between 30° and 90°. Besides, the line 𝑢𝑥 intersects line 𝐴𝐵 at the rear point of the nth deployed sensor in 
line 𝐴𝐵. Figure 7 shows ΔABC. By similarity criteria AAA and same inference, we can obtain 
�𝐴𝑖�: �𝐴𝑢� = �𝑖𝑗�: |𝑢𝑤|, in which  
�𝑖𝑗� = �𝑖𝑘� + �𝑗𝑘� = 𝑟
√3
+ 𝑟 × 𝑡𝑎𝑛(𝜃 − 60°)         (12) |𝑢𝑣| = 1
2
�√3 + 1
√3
� 𝑟            (13) 
Finally, the |𝑢𝑤| = �𝑛×√3+ 1√3�� 1√3+𝑡𝑎𝑛(𝜃−60°)�𝑟2
√3
         (14) 
According to Fig. 7, the amount of sensors deployed on the right hand portion of node o along the x-axis 
direction can be evaluated by �|𝑢𝑤|−|𝑢𝑣|
√3𝑟
�. Besides, the x-y coordinates of the deployed sensors are the same as 
the basic deployment scheme I.  
IV. THE CUTTING AND DEPLOYMENT ALGORITHM 
If an interior angle of a triangle is equal to 60°, the sensors can be deployed with full coverage over the 
triangle by the basic deployment schemes mentioned in a previous section. A triangle must be cut into small 
triangles fit for one of the interior angles is equal to 60° and, then, each small triangle is appropriate for the 
basic deployment schemes. Next, the origin and rectangular coordinates must be determined to depict the x-y 
coordinates of each deployed sensor. Figure 8 shows three nodes, i.e. a, b, and c, connected by line segments 
to form a right triangle Δabc, in which nodes b and c are on the x-axis, and node b denotes the origin.  The 
triangle is called a template triangle, while ∠𝑎𝑏𝑐 = 60° and ∠𝑎𝑐𝑏 = 90°.  
 
Fig. 8.  The template triangle. 
For a triangle, the triangle is rotated to overlap the template triangle and one side of the triangle matches 
with the 𝑎𝑏 of the template triangle. Obviously, three rotations occur. Following one rotation, assume that 
node X, Y and Z correspond to node a, b and c, respectively. If the topology of ΔXYZ corresponds the criteria: 
(1) ∠𝑋 < 90° and (2)node Z is not above the x-axis, the rectangular coordinates and origin are found to cut 
ΔXYZ. 
For instance, Fig. 9(a) shows ΔXYZ. The ΔXYZ are rotated three times, as shown in Fig. 9(b)~(d). Obviously, 
Fig. 9(c) can correspond to the criteria, in which node Z and Y′ are on the x-axis in which line 𝑋𝑌 intersects 
x-axis on node Y′. Additionally, node Z denotes the origin of the rectangular coordinates. 
For convenient description, nodes of the triangle in Fig. 9(c) are named as shown in Fig. 10(a). Notably, 
∠𝐴𝐵𝐴1 equals 60° and node A1 on 𝐴𝐶 refers to the first cutting node of ΔABC. Moreover, ΔABA1 can be 
deployed sensors by selecting the basic deployment schemes according to ∠𝐵𝐴𝐴1. The remaining triangle, 
ΔBA1C, must be cut into small triangles, and the basic deployment schemes can be applied to deploy sensors 
in these triangles. Node B1 is on line 𝐵𝐶 and line 𝐴1𝐵1 is parallel to the line 𝐴𝐵, and then ∠𝐴𝐵𝐴1 =
∠𝐵𝐴1𝐵1 = 60°. Obvious, the basic deployment schemes can deploy sensors in ΔBA1B1. Node B1 refers to the 
second cutting node of ΔABC. 
Because 𝐴1𝐵1 and 𝐴𝐵 are parallel, i.e. ∠𝐵𝐴𝐶 = ∠𝐵1𝐴1𝐶, our results indicate that ΔABC and ΔA1B1C are 
similar. Notably, ΔA1B1C can be cut by the line 𝐵1𝐴2, parallel to 𝐵𝐴1, and node A2 is on line 𝐴𝐶. The 
remaining triangle ΔB1A2C can be cut by the line 𝐵2𝐴2, in which B2 is on line 𝐵𝐶 and 𝐵2𝐴2 is parallel to 
𝐵1𝐴1. Restated, A2, B2 are the first cutting node and second cutting node of ΔA1B1C, respectively. The cutting 
process can be repeated until the remaining triangle can be fully covered by the sensors deployed on three 
nodes. 
 5
node. Because  ∠𝐴𝐵𝐴1 is equal to 60°, ΔABA1 can be full coverage by the basic deployment schemes, as 
shown in Fig. 11(a). All x-y coordinates of each sensor deployed are relative to the origin: node B. 
 x-y coordinates of node I: 
),( 2
1
2
3 ×× BoBo  
= ))33(,)33(( 2
3
2
1 ××−××− rABrAB
            
 
 x-y coordinates of node J: 
),3( 2
1
2
3 ××+× BormBo  
= ))33(,32)33(( 2
3
2
1 ××−×+××− rABrrAB
        
 
Notably, ΔBA1C under the x-axis is cut by the line 𝐵1𝐴1, in which node B1 refers to the second cutting node 
of ΔABC. Because ∠𝐵𝐴1𝐵1 is equal to 60°, ΔBA1B1can be full coverage by the basic deployment schemes 
shown in Fig. 11(b). All x-y coordinates of each sensor deployed are relative to the origin: node A1. For 
instance, node P denotes the third sensor on line 1BA ; in addition, node Q is the first sensor deployed on the 
left hand side of node P. The x-y coordinates of node P and Q, relative to the origin: node A1, can be 
computed, respectively, as follows.   
 x-y coordinates of node P: 
),( 2
3
12
1
1 ××− PAPA  
= ))34(,)34(( 2
3
12
1
1 ××−××−− rBArBA         
 
 x-y coordinates of node Q: 
),3( 2
3
12
1
1 ××−×− PArmPA  
= ))34(,3)34(( 2
3
12
1
1 ×−−×−− rBArrBA         
 
The remaining area, ΔA1B1C, is not full coverage, and the triangle must be cut by 𝐵1𝐴2, i.e., node A2 refers 
to the first cutting node of ΔA1B1C. Figure 11(c) illustrates the deployment. All x-y coordinates for each 
sensor deployed are relative to the origin: node B1. Figure 11(d) shows the deployment of ΔB1A2B2, and the 
node B2 refers to second cutting node of ΔA1B1C. The 𝐵2𝐴2 is the x-axis, and all x-y coordinates of each 
sensor deployed are relative to the origin: node A2. 
Notably, ΔA2B2C is full coverage by sensors located on nodes A2, B2 and C, and, then, the deployment is 
completed. Regardless of whether a triangle is full coverage or not in this algorithm, it can be determined by 
the lengths of three sides. The length of the side of the triangle can be evaluated by the known lengths: 𝐴𝐵, 
𝐵𝐶 and 𝐴𝐶. If all the lengths of three sides are less than √3𝑟, the triangle is full coverage. 
In the proposed algorithm, the cutting nodes change the x-y axis and origins. Restated, to ensure that all 
deployed sensors are relative to the same x-y axis and origin, coordinate transformation is necessary. For 
convenience, nodes P and Q are cited as examples to describe how to process coordinate transformation. 
If R(x, y) is rotated through α around the origin, it moves to point R′ whose coordinates, (x′, y′), can be 
expressed as the following formula: [26] 











 −
=





y
x
y
x
αα
αα
cossin
sincos
'
'
           
(15) 
While the deployment area is ΔBA1B1, all x-y coordinates of each sensor deployed are relative to the origin: 
node A1 and the x-y coordinates of A1, relative to node B, is �0, �𝐵𝐴1��. The current x-axis is rotated 60° 
around the previous x-axis which is used to deploy ΔABA1. The coordinate transformation between the origin 
A1 and the origin B can be computed as the following formula: 
�
𝑥′
𝑦′� = � 12 −√32√3
2
1
2
� �
𝑥
𝑦� + ��𝐵𝐴1�0 �           (16) 
, where (x, y) represents the coordinates relative to node A1, and (x′,  y′) to node B. 
According to Fig. 11 (b), ΔBA1B1 is deployed sensors. The coordinates of P, Q relative to the origin node B 
are transformed by Eq. (16) according to the x-y coordinates of nodes P and Q relative to the origin: node A1, 
respectively. 
7
  
       Fig. 12. Minimum number of mobile sensor requirement.  Fig. 13.  Comparison of the minimum number of mobile  
                                                        sensor requirement under different static sensors deployment 
                                                                                                                     
                       .   
Fig. 14.  Comparison of the efficiency of mobile sensor       Fig. 15.  Comparison of the average density of sensor under  
under different static sensors deployment.                   different static deployment. 
  
Fig. 16.  Comparison of the average depleting energy of mobile     Fig. 17.  Comparison of the average moving distance of  
sensor under different static sensors deployment.                  mobile sensor under different static sensors deployment. 
In sum, simulation results indicate that the proposed deployment algorithm can achieve a high utilization 
rate, high scalability property and minimum deployment costs. 
 
Fig. 18.  Comparison of the average deployment time under different static sensors deployment. 
VI. CONCLUSION 
In a large monitored area, the sensors are randomly deployed initially. Obviously, there are coverage holes 
distributed over the area. The interesting coverage holes of could have a polygon shape that can be divided 
into triangular shapes and covered by mobile sensors to achieve full coverage. This work presents an efficient 
deployment algorithm that can achieve full coverage; the x-y coordinates of each deployed sensor can be 
deduced as well. The proposed algorithm can conquer the coverage hole of each triangle of the polygon. 
Finally, the number of sensors and the x-y coordinates of all sensors deployed in the coverage hole of the 
polygon can be evaluated. 
The x-y coordinates for each deployed sensor is important because WSNs can maintain topology control 
based on the coordinates. An attempt is also made to solve the deployment problem, which determines how 
many sensors are required, where the explicitly stated coordinates can be placed with minimum deployment 
0
50
100
150
200
250
300
350
50 100 200 300 400 500 600 700 800M
in
im
um
 N
um
be
r 
of
 M
ob
ile
 
Se
ns
or
s R
eq
ui
re
m
en
t
Triangle Area (Unit: 103m2) 
Bidding
Triangle
Optimal
0
50
100
150
200
250
300
10 20 30 40 50 60 70 80 90 100
M
in
im
um
 N
um
be
r 
of
 M
ob
ile
  
Se
ns
or
s R
eq
ui
re
m
en
t
Number of Static Sensors
Bidding
Triangle
0
1000
2000
3000
4000
5000
6000
10 20 30 40 50 60 70 80 90 100E
ff
ic
ie
nc
y 
of
 M
ob
ile
 S
en
so
r 
(m
2 )
Number of Static Sensors
Bidding
Triangle
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
10 20 30 40 50 60 70 80 90 100A
ve
ra
ge
 D
en
si
ty
 o
f M
ob
ile
 S
en
so
r 
D
is
tr
ib
uc
tio
n
Number of Static Sensors
Bidding
Triangle
0
50
100
150
200
250
10 20 30 40 50 60 70 80 90 100
A
ve
ra
ge
 D
ep
le
tin
g 
E
ne
rg
y 
(J
)
Number of Static Sensors
Bidding
Triangle
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
10 20 30 40 50 60 70 80 90 100A
ve
ra
ge
 M
ov
in
g 
D
is
ta
nc
e 
(m
)
Number of Static Sensors
Bidding
Triangle
0
50
100
150
200
250
300
10 20 30 40 50 60 70 80 90 100A
ve
ra
ge
 D
ep
lo
ym
en
t T
im
e 
(s
)
Number of Static Sensors
Bidding
Triangle
9
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□ 未達成目標（請說明，以 100字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100字為限） 
 
 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
當要在大範圍的監測區域內，隨機佈建大量靜態感測器時，因著自然風力、地形的因
素，靜態感測器覆蓋的範圍幾不可能毫無空洞。所以目前許多的研究主要在探討如何提高
感測器節點的覆蓋率(Coverage Ratio)。目前由於移動技術的發展，近年來有許多的應用與
研究使用行動感測器節點(Mobile Sensor Node)移動到空洞區內，藉以提高感測器節點的覆
蓋率。如何估計空洞區是本計畫的研究議題，我們提出以三角形為基礎，明確計算出需佈
建在空洞區內感測器數量及座標位置的方法。 
不同於其他研究以漸進式的方式慢慢在空洞區內補滿感測器，本計畫的方法可計算出
感測器的座標位置，因此整個無線感測網路的生存時間(Life Time)、拓普控制(Topology 
Control)或者感測器之動態派遣上，均能以此為基礎更進一步的進行研究。 
當實際大範圍的監測區域可能是戰區、森林、地震或土石流監控地區，以人力佈建感
測器有其危險性，而依本文的方法，在大量以隨機方式佈建感測器後，剩餘的空洞在感測
器的數量與座標位置已知的狀況下，更能以快速、省能的方式完成，已達到完全覆蓋(Full 
Coverage)的目的。 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：許良政 計畫編號：98-2221-E-251-003- 
計畫名稱：以分割三角形為基礎之感測器佈建演算法與需求導向之感測器派遣演算法 
量化 
成果項目 
實際已達
成數（被
接受或已
發表）
預期總達
成數(含實
際已達成
數) 
本計畫
實際貢
獻百分
比 
單位
備註（質化說明：如數個計畫
共同成果、成果列為該期刊
之封面故事...等） 
期刊論文 0 0 100%  
研究報告/技術報
告 0 0 100%  
研討會論文 0 0 100% 
篇
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100%  
博士生 2 2 100%  
博士後研究員 0 0 100%  
國
內 
參與計畫人
力 
（本國籍） 
專任助理 0 0 100% 
人次
 
期刊論文 1 1 100% IEEE Sensors Journal 
研究報告/技術報
告 0 0 100%  
研討會論文 1 1 100% 
篇
the IEEE International 
Conference on Information 
Science and Applications, 
Seoul, Korea, vol. 1, pp. 
46-51, April 21-23, 
2010.(ISBN:978-1-4244-5941-4)
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國
外 
參與計畫人
力 
（外國籍） 
專任助理 0 0 100% 
人次
 
 
