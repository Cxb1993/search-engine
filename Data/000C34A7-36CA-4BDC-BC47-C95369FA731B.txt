任意存取需要較多時間 寫入速度較慢 缺點 
無法單獨修改 Byte資料 Erase速度較慢 
 
NAND flash的存取需要透過命令方式下達指令，因此不像非同步介面
的記憶體裝置直接連接到 CPU的控制信號便可以存取。同時因為製程特性
以及確保儲存資料完整性的關係，NAND flash需要有錯誤糾正的能力（Error 
Correct Code)。這些特性使得 NAND flash的存取與一般的記憶體裝置有很
大的不同。 
因此，如何設計並實作一套嵌入式系統基本作業執行環境，同時製作完
整的 NAND Flash檔案系統，使得在不需要 Operating System的嵌入式系統
中，可以用標準的檔案存取方式去使用 NAND flash，是一件相當值得去發
展實作的工作。最後，將相關的結果模組化，經由此模組化的方式讓系統設
計者方便的去建構軟體所需功能。 
 
研究計畫之目的 
 
本計畫之目的主要有三方面：降低成本、降低電源消耗、以及增加系統
穩定性。 
(1). 降低成本 
一般的嵌入式作業系統為了要具備多工環境，檔案系統，圖形
化使用者介面等等功能，必須要使用複雜的架構以及較高的系統效
能去達到目標。而使用模組化功能的作業執行環境，嵌入式系統軟
體將可只納入所需要的功能以減少系統需求。 
(2). 降低電源消耗 
基於系統效能的需求降低，採用適量的系統架構，因此可以較
低耗能的 SoC晶片而不需要動輒上GHz的高耗能、高發熱量 CPU。 
(3). 增加系統穩定性 
由於軟硬體的需求降低，整體系統的複雜度相對將減少許多而
大幅的增加系統穩定度。例如大部分的 SoC晶片的耗能大多在數
百 mW，無須額外散熱裝備便可運作。因此可避免風扇等機械性設
備故障的機會。當系統所使用的元件越多，則系統的失效機會越
高。一般失效的原因在硬體方面為雜訊干擾、晶片損壞。較低的系
統效能所需要的時脈較低，雜訊的耐受度較高，而較少的晶片則因
晶片損害而使得系統失效的機會也會減少。在軟體方面，複雜度降
低後，開發難度相對將會降低許多，可以讓軟體品質提高而減少
bug。 
 
目前嵌入式作業系統主要為WinCE，Linux。在 RTOS方面則有
I/O函式。取代 GNU的相關函式。 
z 製作圖形化操作介面，讓 SoC開發人員可以很容易的以拖拉方式訂
製並建立起一個 SoC的基本作業執行環境。 
z 現在主流的 SoC產品所使用的 CPU核心大多為 ARM與MIPS，因
此本計畫將先以 ARM系統開發，在完成整體架構後，修改相關設
定資料再測試MIPS相關系統。以驗證測試本系統可以使用在不同
的系統平台上。 
 
一般在完成硬體設計之後，接著需要有適當的軟體開發工具。在本計畫中，
由於系統是獨立無作業系統的關係，因此所有的軟體在開發完成之後，必須是絕
對位址的 Binary image檔案。因為一般的程式在開發完成後，經過 Compiling、
Linking之後所產生的檔案都是 re-locatable，也就是說可以透過作業系統的 loader
功能將此程式檔在載入到主記憶體執行時，根據檔案中所記錄的資訊去分配所有
程式資料的位址。而本計畫的設計是在開機之後就直接執行，因此輸出的檔案格
式就不能是一般的 ELF（Linux底下的可執行檔格式）。 
 因此我們必須建立一套開發工具是可以建立前述的絕對位址程式。這些工具
包括了： 
z GCC。 
z Newlib。 
z Binutils。 
 這些工具都是 Open source，而且都是在 Linux作業系統下所執行的。為了方
便，我們必須先到 http://www.cygwin.com下載並且安裝完成 cygwin的環境。之
後再進入 cygwin才能夠執行下面的編譯及安裝開發工具。Cygwin是一套在
Microsoft Windows作業系統下可執行的 Linux作業環境，也就是說它使用類似
Linux終端機的介面以及執行環境。 
 
自評 
 
1. 當初主要目的有三：降低成本、降低電源消耗、增加系統穩定性。其中在降
低成本方面，由於我們使用模組化功能的作業執行環境，嵌入式系統軟體將
可只納入所需要的功能以減少系統需求，因此成本相較於使用複雜的架構以
及較高的系統效能而言，的確達到降低成本的目標。在降低電源消耗方面，
由於採用適量的系統架構，因此可以使用較低耗能的 SoC晶片，因此系統效
能的需求降低，基本上亦達到降低電源消耗。在增加系統穩定性方面，這部
分成效較不理想，尚有空間待改進。 
2. 在重新編譯以產生指令的 GNU C Cross Compiler時，需要設定下列的主要選
項告知所欲得到的 GCC功能：(1) with-float=soft ：由於（以 Au1200為例）
硬體並未支援浮點數運算，故須設定 Compiler為軟體模擬方式提供浮點數運
