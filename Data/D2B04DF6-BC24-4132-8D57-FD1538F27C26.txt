  
 

X
i
Y
i
iPADOiPADOiPADIiPADIPAD fPfPPower
1 1
,_,_,_,_
 
 

M
i
iDFFiDFFiIiIcoredd
L
i
L
i
iIiIcore fPCfVfPPower
1
,,,,
2
_
1 1
,, 2
1
dd_corecorecore VPowerI 
PAD_ddPADPAD VPowerI 
Area
PowerityPower_dens 
layerAmax
originalA



limit_pad
core
padspowercore I
IN __



limit_pad
PAD
padspowerIO I
IN __



limit_TSV
core
TSVpower I
IN _
PADcoreavg PowerPowerPower 
The rest of this paper is organized as follows. 
Section II presents the problem description. The 
details of the power-aware partitioning algorithm 
will be described in Section III. Experimental results 
are shown in Section IV. Finally, we give 
conclusions in Section V. 
3. PROBLEM FORMULATION 
In this problem, we need to partition a verilog 
netlist into k layers. The objective is to minimize 
total number of TSVs (signal TSVs and power TSVs) 
and area overhead under power constraints. Area 
overhead is defined as the following equation: 
 
 
where   is the max layer area among all layers,   
and           is the total area of original design. 
 The power density is as the power constraint of a 
certain layer, and it is defined as following. 
             
 
We assume that all layers are stacked by using the 
Face-to-Back style, and the I/O pads (including the 
power/ground pads) of this design are all at the first 
layer. The TSV cells and the nets have no effect to 
the function and power of the circuit. 
Before introducing the power model, we 
summarize the notations used in the equations below 
in Fig. 1.  
For calculating the power of an IC, we introduce 
the average power estimation equation as following 
[10]: 
 
                        
The following equations are the power model for 
the core and pads, respectively: 
 
 
 
 
 
We calculate the current coreI for the core and the 
current PADI for the pads first by eq. (6) and (7), 
respectively.  
                  
 
                  
 
Then we can compute the number of power TSVs, 
power/ground pads and I/O pads by eq. (8), (9) and 
(10).  
 
 
 
 
 
 
 
 
 
L  number of the input pins (all standard cells) 
 PI,i power associated with the i-th input pin 
 fI,i  frequency associated with the i-th input pin 
 Q  number of the output pins for all standard cells 
 Vdd_core operating voltage of the core 
 fO,i frequency associated with the i-th output pin 
 M  number of the storage elements 
 PDFF,i power associated with the i-th storage element 
 fDFF,i  frequency associated with the i-th storage element
 X  number of input pads 
 PI_PAD,i power associated with i-th input pad 
 fI,PAD,i  frequency associated with the i-th input pad 
 Y number of output pads 
 PO_PAD,i power associated with the i-th output pad 
 fO,PAD,i  frequency associated with the i-th output pad 
 CI,i external capacitive loading for the i-th input pin 
Fig. 1   Parameters table 
4. ALGORITHM 
Too many constraints will limit partition 
performance. Therefore, we don’t consider the effect 
of power density and power TSV first. We make 
efforts in minimizing signal TSVs and area overhead 
in partitioning scheme. Then we try to improve the 
result to satisfy the power constraints and reduce 
total TSVs. If the result after improvement still 
violates power density constraints, we redo the 
partitioning scheme with power consideration to 
make sure the correctness of the final result. In the 
end, we do optimization for the area overhead. 
Therefore, our algorithm is separated to three 
stages as shown in Fig. 2. 
 
 
 
 
 
 
 
 
 
 
 
There are two partitioning options in Stage 1 as 
following: 
 
(2) 
(3) 
(4) 
(1)
(5) 
(6) 
(7) 
(9) 
(10) 
(8) 
Fig. 2   Algorithm flow 
Coarsening & Partitioning 
without power consideration
Layers Swapping Coarsening & Partitioning with power consideration
Satisfied power    
density constraints ?
Area Overhead Refinrment
Stage 1a
Stage 1bStage 2
Stage 3
Yes
No
originaloriginal
layer AAkAadAreaOverhe ))(( max 
 Stage 2: Layers Swapping 
In this phase, our objective is to find a result with 
minimum total TSVs and satisfy power density 
constraint. We will keep the logic relationship on 
each layer and do k! permutation of layer swapping. 
After each permutation, we check the power density 
and calculate total TSVs (signal TSVs and power 
TSVs). Finally, we try to find a result with minimum 
total TSVs under power density constraints. There 
are three possible cases of the result after Layers 
Swapping. 
 
Case 1: Original result is better. 
The result before Layers Swapping is called 
original result. The original result has satisfied 
power density constraints, and the number of total 
TSVs is less than the result after Layers Swapping. 
 
Case 2: The result after Layers Swapping is 
better. 
There are two situations belong to this case. The 
first one is that the original result has satisfied power 
density constraints, but the number of total TSVs is 
more than the result after Layers Swapping. The 
second one is that the original result has violated 
power density constraints, but we can get a legal 
result after Layers Swapping. For both situations, we 
will do partitioning with power density 
consideration to refinement the number of signal 
TSVs. 
 
Case 3: All results violate power density 
constraints. 
Both results before and after Layers Swapping 
violate power density constraints. Then we will redo 
Initial Partitioning and 3D-Aware 
Two-Way-Partitioning phases with option b.. 
 
Stage 3: Area Overhead Refinement 
 After Stage 1 and Stage 2, we have optimized the 
number of total TSVs. In Stage 3, we do refinement 
for area overhead without affecting TSVs number. 
So we move cells of zero gain to reduce maximum 
area among layers. 
5. EXPERIMENTAL RESULTS 
We implement our algorithm in C/C++ and the 
program is executed on an CentOS release 5.4 with 
Intel(R) Core(TM) i7 CPU 870 2.93GHz and 8 GB 
memory. We tested the quality of resulting number 
of TSVs and area overhead, based on the 
benchmarks used in the “3D IC Design Partitioning 
with Power Consideration” problem in the IC/CAD 
2011 Contest in Taiwan [1]. The test cases are 
industrial circuits provided by Industrial 
Technology Research Institute (ITRI) [11]. The test 
cases include verilog gate-level netlists, standard 
cell library and design information file. Table I 
shows the characteristics of the benchmark circuits 
including the number of cells, number of nets and 
number of device layers. 
 
TABLE I 
BENCHMARKS INFORMATION 
Benchmark Netlist # of Cells # of Nets # of Layers
bench1_200.info bench1.v 201 206 3
bench1_2.0_200.info bench1.v 201 206 3
bench1_500.info bench1.v 201 206 3
bench2_2.5_300.info bench2.v 49,762 53,097 3
bench3_1.8_400.info bench3.v 106,818 111,742 3
bench3_2.0_200.info bench3.v 106,818 111,742 3
bench4_2.5_400.info bench4.v 20,367 21,955 3
bench5_2.5_320.info bench5.v 35,906 40,685 3
bench7_1.8_400.info bench7.v 385,488 402,742 4
bench8_2.0_250.info bench8.v 48,032 52,078 3
test1_1.8_400.info test1_h9.v 1,079,420 1,088,835 5
 
Table II proves our basic ideas which are 
described in Abstract are effective. Only two 
benchmarks belong to Case 3 which need to redo 
partitioning with power consideration.  
 
TABLE II 
THE CASES AFTER LAYER SWAPPING AMONG ALL BENCHMARKS 
Benchmark Case 
bench1_200.info 1 
bench1_2.0_200.info 1 
bench1_500.info 3 
bench2_2.5_300.info 2 
bench3_1.8_400.info 2 
bench3_2.0_200.info 2 
bench4_2.5_400.info 1 
bench5_2.5_320.info 2 
bench7_1.8_400.info 3 
bench8_2.0_250.info 2 
 
Table III shows the difference of total TSVs 
before and after Stage 2. It proves that our Stage 2 is 
effective to reduce total TSVs under power density 
constraints. 
In Stage 1, we focus on minimizing the number of 
signal TSVs but not power TSVs. After Stage 2, we 
can reduce power TSVs by moving the sub-netlist 
which has higher power density among all layers to 
the lower layer. The total number of signal TSVs 
increases slightly, but the power TSVs decreases 
significantly. Therefore, the number of total TSVs 
will be reduced. 
 
 8. REFERENCE 
[1] http://cad_contest.cs.nctu.edu.tw/cad11/index.
htm 
[2] G.Karypis, V. Kumar, “Multilevel k-way 
Hypergraph Partitioning*”, Proc. ACM/IEEE 
Automation Conf, pp.343-348, 1999. 
[3] G.Karypis, R.Aggarwal, V.Kumar, S.Shekhar 
“Multilevel Hypergraph Partitioning: Applications in 
VLSI Domain”, IEEE Trans. VLSI Syst. Vol.7, pp.69-79, 
1999. 
[4] C. M. Fiduccia and R. M. Mattheyses, “A 
Linear Time Heuristic for Improving Network 
Partitions”, Proc.ACM/IEEE Design 
Automation Conf, pp.175-181,1982. 
[5] Iris Hui-Ru Jiang, “Generic Integer Linear 
Programming Formulation for 3D IC Partition”, 
SOCCON, pp.321-324, 2009. 
[6] Yu Cheng Hu, Yin Lin Chung and Mely Chen 
Chi, “A Multilevel Multilayer Partitioning 
Algorithm for Three Dimensional Integrated 
Circuit”, ISQED p.483-487,2011. 
[7] Hua-Sin Ye, Mely Chen Chi, Shih-Hsu Huang, 
“A Design Partitioning Algorithm for Three 
Dimensional Integrated Circuits”, 3CA, 
pp.229-232, 2010. 
[8] Tsu-Yun Hsueh, Hsiang-Hui Yang, Wei-Chieh 
Wu and  Mely Chen Chi, “A Layer Prediction 
Method for Minimum Cost Three Dimensional 
Integrated Circuits” , ISQED pp.359-363, 
2011. 
[9] Cheng-Chi Chan, Yen-Ting Yu, Iris Hui-Ru 
Jiang, “3DICE: 3D IC Cost Evaluation Based 
on Fast Tier Number Estimation”, ISQED, 
pp.50-55, 2011. 
[10] http://cad_contest.cs.nctu.edu.tw/cad11/Proble
ms.htm, “3D IC Design Partitioning with 
Power Consideration”, 2011 IC/CAD Contest 
Problem B2. 
[11] Provided by Industrial Technology Research 
Institute (ITRI), Hsinchu, Taiwan, 2011. 
 
Abstract 
We propose a layer prediction method. It may be applied to 
automatically partition a gate-level netlist into a minimum cost 
3D IC. The number of layers of the lowest cost 3D IC design 
is noted as Min_Cost_Layer of the design. We develop a 
multilevel multilayer partitioning program. It partitions a gate 
level netlist into a K-layer 3D IC structure. Its objective is to 
minimize the total number of TSVs under an area constraint. 
The program is applied to benchmark circuits to study the 
relation between the cost of 3D ICs and the number of 
partition layer K. The relation shows two classes of curves. 
One class shows “smiling” curves and the other shows 
“upward” curves. Our study shows the Min_Cost_Layer of a 
circuit depends on the ratio of total TSV area to the die area. 
We also find the upper bound of the Min_Cost_Layer. 
Therefore, we propose two methods: “Less_TSV” and 
“More_TSV” prediction methods. According to the processing 
technology and connectivity of a circuit, we select the 
appropriate method. The experimental results show that 
combining the Min_Cost_Layer prediction methods and the 
partitioning program, we can get the minimum cost 3D IC of a 
circuit effectively. For the 9 test circuits, on average, the cost 
of 3D implementations may save 13.74% compared with 2D 
implementations.  
Keywords 
Three dimensional integrated circuits partition, Through 
Silicon Via (TSV), Min_Cost_Layer prediction 
1. Introduction 
      Recently, the emerging 3D integration technology has 
become one of very important topics in semiconductor 
industry. 3D ICs have the advantages of shorter global wire 
length, smaller power consumption, and better performance of 
a chip [2,3,4]. 
      To construct a 3D IC, the circuit is partitioned into N sub-
circuits. These sub-circuits are then stacked in three 
dimensional layers. The signals located on different layers are 
connected by Through Silicon Vias (TSVs).  
    Since the cost of a product is the most important issue for a 
company to survive. For a new IC product, whether to 
partition the circuit into multiple layers or not is very difficult 
for a decision maker to determine without any help of cost 
analysis tools [5, 6]. So we propose a method to evaluate the 
costs of both 2D and 3D implementations of a design, and find 
the minimum cost of this design. 
The rest of this paper is organized as follows. Section 2 
presents the problem description. The details of the prediction 
method and the multilevel multilayer partition are described in 
Section 3. Experimental results are shown in Section 4. Finally, 
we give conclusion in Section 5. 
2. Problem Description 
Fig. 1 shows a structure of 3D ICs. Devices are placed on 
different layers. Bumps are located at bottom connecting to the 
substrate of the chip. All TSV_IOs are connected to bumps, 
and are located on the first layer. All layers are stacked up 
vertically. A TSV is assigned between every pair of neighbor 
layers within a net range. Every TSV is modeled as a cut 
between the neighbor layers [11].  
 
In this problem, we develop a program to partition a 
Verilog netlist into multiple layers to get the minimum cost 3D 
IC. To evaluate the cost of a 3D IC chip, we utilize a simplified 
cost evaluation formula [1,5,6] as follow: 
( )∑ ∑=
=
−
− ⎟⎟
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜⎜
⎜
⎝
⎛
⎟⎠
⎞⎜⎝
⎛
×−×
×−
+
⎟⎟
⎟⎟
⎟⎟
⎠
⎞
⎜⎜
⎜⎜
⎜⎜
⎝
⎛
×⎟⎟⎠
⎞
⎜⎜⎝
⎛
−
+
=
K
1i
TSV_Fail
K
i
i
TSV
1)(K
Stacking
i
DA
i
die
wafer
i
die
2
wafer RN1Y
oststacking_c1K
e
2A
πd
4A
πd
TSV_costewafer_pricTotal_Cost
0
i
die
1
 
where     ( ) TSViTSVicellidie aNARA ×+×+= 1  
The die area is the summation of cell area, routing overhead, 
and area of TSVs.  
A Layer Prediction Method for Minimum Cost Three Dimensional Integrated 
Circuits 
Tsu-Yun Hsueh, Hsiang-Hui Yang, Wei-Chieh Wu, Mely Chen Chi 
 
Department of Information and Computer Engineering 
Chung Yuan Christian University 
Chung Li, Taiwan 
Email: { g9877014, g9877006, g9877007, mlchen } @cycu.edu.tw 
Figure 1: A structure of 3D ICs 
(1) 
978-1-61284-914-0/11/$26.00 ©2011 IEEE                             359                  12th Int'l Symposium on Quality Electronic Design
the cost is 0.796973. Because the cost is larger than the cost of 
partition of K=5, the Min_Cost_Layer is 5.  
 
Table II. ZERO-TSV TABLE OF b1 
# of Layers (K) Total Cost (US$) 
1 0.92074041 
2 0.834851537 
3 0.804976828 
4 0.795873774 
5 0.794983641 
6 0.798189517 
7 0.803869046 
 
 
 
3.1.2. More_TSV Prediction Method 
      Then we analyze the circuit with large total area of TSVs. 
It may occur with either a large TSV or a large number of 
TSVs in a chip. In these cases, the die area will be increased 
by the area of TSVs. In general, more layers will generate 
more TSVs and the total cost is increased accordingly. 
Therefore, the curve of the total cost relative to the number of 
layers will show an upward trend. This type of circuits can not 
be predicted by the Less-TSV method. 
Our experiments show that the Min_Cost_Layer is less 
for the 3D IC of this type. As shown in Fig. 5, we draw the 
cost of partition and the cost in the Zero-TSV Table of circuit 
b9. It shows that the prediction by Zero-TSV Table is not 
appropriate for circuit b9. It also shows the Min_Cost_Layer is 
3. Therefore, for this class of circuits, we start partitioning 
process from K=2 and then perform partition with K+1 until 
the cost increases. At most we need to perform partition from 
K=2 to Kmax times.  
3.1.3. Selection of Prediction Method 
  By our experiments, we observe that the total TSV area 
could affect the selection of Min_Cost_Layer prediction 
method. From equation (2), we know the total TSV area is 
related to the process and the die connectivity. 
 
       Total TSV area    =          NTSV       ×       aTSV             (2) 
                                      (connectivity related)    (process related) 
 
  NTSV is the total number of TSVs and aTSV is the area of a 
TSV. We apply two different sizes of TSV on circuit b9 for 
partition. The results are drawn in Fig. 6. It shows that we can 
apply the More_TSV prediction method for the larger TSV 
implementation (shown in blue), otherwise Less_TSV 
prediction method (shown in red) should be applied. It shows 
if a circuit is manufactured by different processes, the suitable 
prediction method is different. 
 
 
  Therefore, we define two parameters Rtc and Rtd: 
(a) Process related parameter  
cells of area average the
TSV_Cell a of area theRtc =
 
(b) Die related parameter 
die the of area total the
die a in TSVs of area total theRtd =
 
Rtc may be calculated directly from process information. 
However, Rtd is the result after partition.   We use different TSV areas to calculate the value of Rtc 
and compute the value of Rtd after partition the circuit into two 
layers. Then we can draw the results as shown in Fig. 7. In Fig. 
7, the circuits in the yellow area which have smaller Rtd will 
be suitable for Less_TSV method. The circuits in the blue area 
will be suitable for More_TSV method. The points of a circuit 
almost form a straight line. Its slope represents the complexity 
of connectivity of the circuit. The larger slope means the 
connectivity is more complex.  
When we select a prediction method for a new circuit, 
first we calculate Rtc. If it is larger than thresholdtcR , then Kinitial is 
2, otherwise Kinitial is Kmax. Then we can calculate Rtd with the 
partition result of Kinitial. When Kinitial is Kmax, we use the 
partition result to estimate the Rtd of  two layer partition. If Rtd 
is less than thresholdtdR , then we utilize the Less_TSV prediction 
method, otherwise apply the More_TSV prediction method. 
threshold
tcR and 
threshold
tdR are obtained by experiments and data 
analysis.  
threshold
tdR
threshold
tcR
 
 
 
Figure 5: Total cost 
associated with number 
of layers of b9 
Figure 4: Total cost 
associated with number of 
layers of b1 
Figure 6: Partitioned result of b9 by applying two 
different sizes of TSV areas.
Figure 7: The relationship between Rtd and Rtc of 
different circuits by applying different processes.
  
 
5. Conclusions 
We propose a Min_Cost_Layer prediction method to get 
the Min_cost 3D IC for a circuit.. The Less_TSV prediction 
method or More_TSV prediction method is chosen according 
to the process and the die connectivity. In order to partition a 
circuit and minimize TSVs, we develop an efficient multilevel 
multilayer partition with Bi-partitioning refinement program. 
Our results show that our partitioning program can produce 
partitions with small number of TSVs and small value of die 
area. Combining the Min_Cost_Layer prediction methods and 
the partitioning program, we can get the minimum cost 3D IC 
of a circuit. The Min_Cost_Layer of our results are exactly the 
same with that of exhaustive partitions. For the 9 test circuits, 
on average, the cost of 3D implementations may save 13.74%. 
We won the first prize on this subject in the IC/CAD 2010 
contest in Taiwan. 
  
 
 
6. References 
[1] Industrial Technology Research Institute (ITRI), Hsinchu, 
Taiwan 
[2] C. Ferri, S. Reda, R. I. Bahar, “Parametric Yield 
Management for 3D ICs: Models and Strategies for 
Improment”, ACM Journal on Emerging Technologies 
inComputing Systems, 4(4), pp. 19:1-19:22, 2008. 
[3] I.H.-R. Jiang, “Generic integer linear programming 
formulation for 3D IC partitioning”, in Proc. SOC 
Conference, pp. 321-324, Jan. 2010. 
[4] Emrah Acar, IBM Research, 3D IC Workshop, National 
Tsing Hua University,  Hsinchu, Taiwan, 2008.  
[5] X. Dong, Y. Xie, “System-Level Cost Analysis and 
Design Exploration for Three-Dimensional Integrated 
Circuits (3D ICs)”, in Proc. Asia and Sourth Pacific 
Design Automation Conference, pp. 234-241, Jan. 2009. 
[6] R.Weerasekera, L.R. Zheng, D. Pamunuwa, H. Tenhunen, 
“Extending Systems-on-Chip to the Third Dimension: 
Performance, Cost and Technological Tradeoffs”, in Proc. 
International Conference on Computer-Aided Design, 
pp.212-219, Nov. 2007. 
[7] G. Karypis, V.Kumar, “Multilevel k-way hypergraph 
partitioning”,in Proc. ACM/IEEE Design Automation 
Conference, pp.343-348, Jun. 1999. 
[8] G. Karypis, R.Aggarwal, V.Kumar, S.Shekhar, 
“Multilevel Hypergraph Partitioning: Applications in 
VLSI Domain”, IEEE Trans. VLSI Syst., vol. 7, no. 1, 
pp.69-79, Mar. 1999.  
[9] W. C. Huang, J. H. Wang, C. M. Huang, M. C. Chi, “A 
hierarchical partitioning algorithm for VLSI designs”, in 
Proc. SOC Conference, pp.265-266, Sept. 2003. 
[10] C. M. Fiduccia, R. M. Mattheyses, “A linear time 
heuristic for improving network partitions”, in Proc. 
ACM/IEEE Design Automation Conference, pp.175-181, 
Jun. 1982.  
[11] Y. C. Hu, Y. L. Chung, M. C. Chi, “A Multilevel 
Multilayer Partitioning Algorithm for Three Dimensional 
Integrated Circuits”, in Proc. International Symposium on 
Quality Electronic Design, pp. 483-487, Mar. 2010. 
[12] H. S. Ye, M. C. Chi, S. H. Huang, “A Design Partitioning 
Algorithm for Three Dimensional Integrated Circuits”, in 
Proc. Computer Communcation Control and Automation 
(3CA), pp. 229-232, May. 2010. 
 
TABLE VII. COMPARISON OF THE RESULTS BETWEEN OUR 
PARTITION ALGORITHM [11] AND [12]. 
circuit 
TSV, Total area, Chip area, Run 
time, Area overhead results Comparison 
[12] [11] Ours [12] [11] Ours
C1 
# TSVs 663 579 541 1.226  1.070 1  
Total area (um2) 208161 207411 206461 1.008  1.005 1  
Run time (sec) - 5 1.19 - 4.202 1 
C2 
# TSVs 171 157 106 1.613 1.481 1  
Total area (um2) 1411368 1411018 1409743 1.001 1.001 1  
Run time (sec) - 379.5 71.614 - 5.299 1 
C3 
# TSVs 501 285 272 1.842 1.048 1  
Total area (um2) 271945.5 266545.5 266220.5 1.022 1.001 1  
Run time (sec) - 11.3 1.905 - 5.92 1 
  Average TSV comparison 1.560 1.200 1  
  Average Total area comparison 1.010  1.002 1  
  Average Run time comparison - 5.144 1 
*Total area = total cells area + total TSVs area 
TABLE VI. BENCHMARK CIRCUITS INFORMATION. 
circuit # cells # nets # layers # TSV IO Total Cell Area (um2)
C1 6291 6511 4 134 162786 
C2 85013 89189 5 13 1404168 
C3 9155 9627 3 96 237820.5 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：陳美麗 計畫編號：99-2221-E-033-062- 
計畫名稱：考量熱效應之三維積體電路實體設計自動化方法(I) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 The 22nd VLSI 
Design/CAD 
Symposium 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
2011 12th 
International 
Symposium on 
Quality 
Electronic 
Design 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
