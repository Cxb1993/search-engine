1中文摘要
在本計畫中，我們將探討如何在折疊超立方體網路上建構多點對多點的節點互斥路
徑。給定兩個屬於 n 維折疊超立方體之節點集合 S={s1, s2,…, sk}及 T={ t1, t2,…, tk }，我們
要建構 k 條從 si 至
ij
t 之節點互斥路徑使其最大長度不大於n/2+logk+2，其中 1kn+1、(j1,
j2,…, jk)是(1, 2,…, k)的一組排列、而且節點 s1, s2,…, sk, t1, t2,…, tk 互不相同。對於一般擁
有 m 個節點的任意網路來說，若使用傳統以最大流量為基礎的方法來建構多點對多點的節
點互斥路徑，往往需要 Poly(m)的時間。因為 n 維折疊超立方體擁有 2n 個節點，所以我們
希望我們的方法複雜度能夠不超過 O(kn logk)，而此一結果比 Poly(2n)為佳。
關鍵詞：連結網路，折疊超立方體，節點互斥路徑，最佳化問題
英文摘要
In this project, the construction of many-to-many node-disjoint paths in a folded hypercube
will be studied. Given two sets S={s1, s2, …, sk} and T={t1, t2, …, tk} of nodes in an
n-dimensional folded hypercube, we will construct k node-disjoint paths from si to
ij
t so that
their maximal length is not greater than n/2+log k+2, where 1kn+1, (j1, j2, …, jk) is a
permutation of (1, 2, …, k), and s1, s2, …, sk, t1, t2, …, tk are all distinct. For a general network
with m nodes, the construction of many-to-many node-disjoint paths will take Poly(m) time by
applying a traditional maximum flow based algorithm. Since there are 2n nodes in an
n-dimensional folded hypercube, we hope that the time complexity of our method will be
bounded above by O(kn logk), which is better than Poly(2n).
Keywords: interconnection network, folded hypercube, node-disjoint paths, optimization
problem
3fc u b e .-3ao fs tru c tu reT h e1 .F igu re
00 0 0 0 1
0 1 1
1 11
10 11 0 0
110
0 1 0
Routing is a process of transmitting messages among processors, and its efficiency is crucial
to the performance of a multiprocessor system. Efficient and reliable routing can be achieved by
using internally node-disjoint paths (disjoint paths for short), because they can be used to avoid
congestion, accelerate the transmission rate, and provide alternative transmission routes. The
concept of disjoint paths arose naturally from the study of routing, reliability, and fault tolerance
in parallel and distributed systems. Throughout this project, processor and node are used
interchangeably.
There are three categories of disjoint paths, i.e., one-to-one, one-to-many, and many-to-many.
Suppose that W is a network with connectivity n. According to Menger's theorem [2], there exist
n disjoint paths between every two distinct nodes of W. They belong to the one-to-one category.
Many one-to-one disjoint paths constructed for a variety of networks can be found in the
literature [3, 7-10, 12, 19, 26, 29, 32]. On the other hand, according to Theorem 2.6 in [1], there
exist n disjoint paths from one node to another n distinct nodes in W. They belong to the
one-to-many category. One-to-many disjoint paths were first studied in [27] where the
Information Dispersal Algorithm (IDA) was proposed on the hypercube. Taking advantages of
disjoint paths, the IDA has numerous potential applications to secure and fault-tolerant storage
and transmission of information. Some examples of one-to-many disjoint paths can be found in [5,
9, 11, 13, 14, 19-25, 27, 28, 31].
Many-to-many disjoint paths (or named set-to-set disjoint paths), which connect two sets of
nodes in W, can be found in [9, 15, 16-18]. According to Menger’s theorem [2], the k disjoint
paths for many-to-many disjoint paths exist in an n-connected network if kn. In order to reduce
the transmission latency, disjoint paths are desired to have their maximal length minimized.
Constructing k many-to-many disjoint paths in an n-dimensional hypercube has been studied in
[15], where 1kn and their maximal length is not greater than n+logk+2. In particular, if, before
the construction, the starting and ending nodes are fixed for each many-to-many disjoint path,
then the k-pairwise disjoint paths result.
In [18], k-pairwise disjoint paths were constructed in an n-dimensional hypercubes so that
their maximal length is not greater than n+log n+1, where 1kn/2. In an n-dimensional
5coming from [15], where a concept called faulty cluster is introduced. We use C to denote the
cluster and the set of nodes in the clusters as well if no confusion arises. The number of nodes in
C and the diameter of C are denoted as |C| and d(C), respectively. A cluster C is called faulty
cluster if all nodes in C are faulty. In this project, faulty clusters with d(C)1 will be taken into
account during the construction of disjoint paths.
Let dist(s, t) denote the distance between nodes s and t in an n-cube. Assume that
=
 n
)0...,,0,0( and =
 n
)1...,,1,1( , where x =(1x1, 1x2, …, 1xk) denote the complement of a
node x=(x1, x2, …, xk). Suppose that sS satisfies dist(, s)dist(, si) for all 1in+1, and tT
satisfies dist(t, )dist(tj, ) for all 1jn+1. Since the n-fcube is node symmetric, we assume
s=s1=
 n
)0...,,0,0( and t=t1 without loss of generality. In the following, we briefly describe our
construction method. First of all, if dist(s, t)n/2, dist(s, si)n/2for all 2in+1, and dist(s,
t)n/2, then we can first construct k1 disjoint paths from {s2, s3,…, sk} to { t2, t3,…, tk} by the
algorithms in [15] and then construct a path by the combination of (s, s ) and a shortest path from
s to t in an n-cube.
On the other hand, many cases must be taken into considerations. We just outline our ideas
as follows. Let Cs (Ct) be the cluster so that Cs (Ct) includes s (t) and its adjacent nodes but the
nodes in {s2, s3, …, sk} and {t2, t3, …, tk}. Suppose that Cs and Ct are faulty clusters. By
modifying the algorithms in [15], we obtain another algorithms which can construct k1 disjoint
paths from {s2, s3,…, sk} to { t2, t3,…, tk} in an n-fcube. Finally, we discuss the construction of
path from s to t according to several cases.
For a general network with m nodes, the construction of many-to-many node-disjoint paths
will take Poly(m) time by applying a traditional maximum flow based algorithm. Since there are
2n nodes in an n-dimensional folded hypercube, the time complexity will be Poly(2n). For the
regular folded hypercube, this construction method will be far from efficient. In this project, we
hope that the time complexity of our method will be bounded above by O(kn logk).
五、結果與討論
During the execution of this project, we obtain deeper knowledge about hypercubes, folded
hypercubes, many-to-many node-disjoint paths, and cluster fault tolerant routing techniques.
Besides, our research abilities are improved. Due to the time shortage, we did not success to find
the construction of disjoint paths from 2n nodes (not necessarily distinct) to another 2n nodes (not
necessarily distinct) in an n-dimensional folded hypercube. However, we find another interesting
property which can be used to construct optimal one-to-many disjoint paths in hypercubes with
time complexity smaller than [14]. These results will be written in [21] and parts of them are
described below.
First, we discover a routing function called optimal routing function as described below.
Suppose that s, d1, d2, …, dm are arbitrary m+1 distinct nodes of a k-cube, where mk. Since the
hypercube is node symmetric, we assume s=
k
0...00 =0k without loss of generality. A routing
7計畫結果自評
Given two sets S={s1, s2, …, sk} and T={ t1, t2, …, tk} of nodes in an n-dimensional folded
hypercube. In this project, we want to construct k disjoint paths from si to
ij
t so that their
maximal length is not greater than n/2+logk+2, where 1kn+1, (j1, j2,…, jk) is a permutation
of (1, 2,…, k), and s1, s2,…, sk, t1, t2,…, tk are all distinct. Due to the time shortage, we did not
success to find the construction of these disjoint paths in an n-dimensional folded hypercube.
However, we find another interesting property which can be used to construct optimal
one-to-many disjoint paths in hypercubes with time complexity smaller than [14]. These results
will be written in [21] and submitted to international journal for publication. We hope that, in the
near future, we can succeed in constructing man-to-many and pair-wise disjoint paths in an
n-dimensional folded hypercube.
