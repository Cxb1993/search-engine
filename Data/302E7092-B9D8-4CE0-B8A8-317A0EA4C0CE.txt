行政院國家科學委員會補助專題研究計畫 
▉成果報告   
□期中進度報告 
 
高效能廣播掃描壓縮技術之研究 
 
計畫類別：▉個別型計畫   □整合型計畫 
計畫編號：NSC  100－2218－E－539－003    
執行期間：  100 年 8 月  1 日至 101  年 7 月 31  日 
 
執行機構及系所：國立陸軍專科學校電子工程科 
 
計畫主持人：李隆仁 
共同主持人： 
計畫參與人員：林冠宇 
              陳志展 
 
成果報告類型(依經費核定清單規定繳交)：▉精簡報告  □完整報告 
 
本計畫除繳交成果報告外，另須繳交以下出國心得報告： 
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
□出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，□一年□二年後可公開查
詢 
 
中   華   民   國   101 年   10 月  6  日 
  
2 
cost of hardware to be decoded. 
 
 
二、研究目的 
In order to simultaneously reduce test data volume and test application time for scan 
sequential circuits, we propose the method that iteratively merges compatible columns of a test 
set such that test data in scan cells can be shared and test data volume as well as test application 
time can then be reduced. To decode the compressed test patterns, a scan chain disabling 
technique is also employed. 
 
 
三、文獻探討 
The ILLinois Scan Architecture (ILS) has been proposed recently to deal the problems of 
long scan-in time and large test data volume where branches of scan sub-chain are originated 
from the same input pin such that compatible data can be scanned in simultaneously. Being in a 
broadcast way, the compatible data can be shared and the scan-in time can be reduced. BIST 
(built-in self-test) architecture gives another solution for reducing test data volume and test 
application time, where test patterns are randomly generated by linear-feedback shift-register 
(LFSR) using smaller test data called seed for on-chip testing. Although this technique 
successfully decreases test data storage, it appears inefficient for testing some random pattern 
resistant (RPR) faults. A method called hybrid BIST [15], which combines the technique of 
compressing test data to store deterministic test patterns for detecting RPR faults as well as 
BIST architecture for easy-to-detect faults, is proposed to solve this problem. In addition, there 
are some techniques proposed to solve this problem, such as reseeding [16, 17], weight random 
pattern testing [18]. 
Recently, by analyzing the compatibility of test data among columns in the test set and the 
correlation among scan cells in the scan chain, a tree-like [19] architecture is proposed to reduce 
test data volume and number of clock cycles to scan in/out test data. Although it can improve 
efficiency with the help of some XORs, it may cause a high overhead and an aliasing problem. 
In S/TC [20] method, two-dimensional (space/time) compression methods are proposed to 
reduce the test data volume and the test application time for testing intellectual property (IP) 
cores. However, the hardware overhead remains high. In [21], the authors also explore the 
compatibility of scan cells and propose a tree-based architecture of scan path for reducing test 
application time and test data volume. 
To reduce the test cost for multiple cores in SOC, the authors in [22] proposed an approach of 
concurrent core test which efficiently condenses a large amount of test data in a much smaller 
shared set and employs on-chip scan chain disable signal to active only a portion of scan chain 
during testing. 
 
四、研究方法 
The basic idea of the proposed method is to iteratively merge compatible columns to 
maximize the sharing of test data among scan cells such that both the test data volume and test 
application time can be reduced. Compatibility is defined as the number of bit pairs that are 
compatible between two columns of a test set. For example, in Fig. 1, the compatibility between 
columns i and j is 4, since only the bit pairs in the first four rows are compatible. Two columns 
of a test set are called compatible, if and only if all their bit pairs are compatible. Any two 
compatible columns can be merged to reduce test data volume. For a test set, if there exists some 
test patterns that prevent corresponding column pair from merging, those patterns are called 
“conflict test patterns”. 
More compatible column pairs mean more columns of data can be shared. However, the 
4 
pattern V3 which is obtained from the first iteration. Only two columns are in the temporary set 
and two steps are needed during this iteration. Column 8 is firstly considered to be merged since 
it is the column with the least X-bits in the temporary set. Fig. 4(b) shows the merging. In this 
step columns 8 and 5 are merged together. Since Columns 8 and 5 are full compatible, none of 
conflict patterns are removed and the unfolded set remains unchanged. In the second step, as 
shown in Fig. 4(c), column 7 in Vt is merged with column 6 in Vf. Since this two columns are 
not full compatible, two conflict patterns, V1 {10100} and V5 {1X101} are removed from the 
test set to the unfolded set. Note that, both test pattern V1 and V5 in the new test set are not the 
same as in the original test set since they have been compressed in the first iteration and are 
shorter in length. Fig. 4(d) shows the test set after the second iteration. The total test bits are 2 × 
3 + 2 × 5 + 1 × 9 = 25. Similarly, during iteration 3, the column 5 is merged into column 6 as 
shown in Fig. 4(e). The total test bits is now equal to 2 × 2 + 2 × 5 + 1 × 9 = 23. Since the total 
test bits obtained from iteration 3 is greater than from iteration 2, the merging process is 
terminated after iteration 2. Fig. 4(f) shows the final merging result and it achieves a 
compression ratio of (45 - 23) / 45 = 48.9%. 
B. Test Data Decompression 
The columns being merged imply that they share the same test data in a scan cell. While 
some patterns that are removed to Vu represent they share partial (eg. V1 and V5) or none (eg. V3) 
of test data. In order to shift the test data correctly, the scan cells are arranged as a tree-like 
multiple scan chains, as shown in Fig. 5, in which the scan cells sharing the same test data are 
placed in the same column. By broadcasting the compressed test data bit by bit, the cells in the 
same column receive the same test data simultaneously. However, for test data in Vu, a longer 
single scan chain may need to scan the uncompressed or partial compressed test data. Hence, we 
use multiplexers to configure the scan chains to switch between broadcast mode and partial scan 
mode when different test data, Vf and Vu, are applied, respectively. In broadcast mode, all 
multiplexers are set to 1, test data is broadcasted to all sub-scan chains. In partial scan mode, 
part of multiplexers are selected to set as 0 and the corresponding sub-scan chains are connected 
in series and form a longer single scan chain. The controller in Fig. 5 also provides necessary 
shift enable signals for each sub-scan chain. The enable signals are generated by considering the 
cell order in each scan chain as well as the correlation among multiple scan chains according to 
the merging results in the final completed folded set.  
To facilitate the understanding on designing the proposed decompression architecture, we 
continue the previous example and develop its decompression architecture step by step as 
follows. As shown in Fig. 4(a), after the first merging iteration, five Flip-Flops are remained. 
They are FF4, FF5, FF6, FF7 and FF8 in which the former four FFs share compatible data with 
FF2, FF9, FF3 and FF1 respectively. Therefore, we place the FFs in the same merged pair on the 
same level of the scan tree, as shown in Fig.6(a). In the same way, we obtain the scan trees after 
the second and the third iterations as shown in Fig. 6(b) and (c). Note that consider the removed 
test patterns in different iterations, i.e. test patterns in Vu, corresponding FFs containing the 
removed test data should be placed closer to each other for serially scanning in the correct test 
data. Fig.7 shows the respective scan enable signals in different modes. For broadcast mode, as 
shown in Fig.7(a), only two clock cycles are required 
to broadcast the test data for each test pattern in folded set. In the first clock cycle, test data is 
broadcasted to FF6, FF5, FF8, FF7 FF3, FF9 and FF1 simultaneously while in the second clock 
cycle, only FF4, FF7 and FF2 receives the test data. When scan the partial compressed test 
patterns, V1 and V5, the scan tree forms two longer scan chains, which are 4-6-7-5-8 and 2-3-9-1, 
as shown in Fig.7(b). In Fig.7(c), when scan the uncompressed test patterns V3, all scan chains 
are serialized and the test data in V3 is scanned in by the sequence of 4-6-7-5-8-2-3-9-1. 
C. Complete Design Flow 
In Fig. 8, we depict the entire design flow, as shown, each merging iteration contains three steps: 
(1) Decide Vf and Vt according to number of Xs in each column (2) Remove conflict test 
6 
[7] P. T. Gonciari, B. Al-Hashimi and N. Nicolici, “Improving compression ratio,  area overhead, and test 
application time for system-on-a-chip test data  compression/decompression”, Proc. DATE Conf., pp. 
604–611, 2002. 
[8] A. Jas, J. Ghosh-Dastidar, M.-E. Ng, and N. A. Touba.: ‘An efficient test vector compression scheme using 
selective Huffman coding”. IEEE Trans. Computer-Aided Design, Jun 2003, vol. 22, no. 6, pp.797-806. 
[9] X. Kavousianos, E. Kalligeros and D. Nikolos, ‘Optimal Selective Huffman Coding for Test- Data 
Compression’. IEEE Trans. On Computers, Mar 2007. 
[10] A. Chandra and K. Chakrabarty.: ‘System-on-a-chip test data compression and decompressed architectures 
based on Golomb Codes’. IEEE Trans. Computer-Aided Design, Mar 2001, vol. 20, no. 3, pp. 355-368. 
[11]  A. Chandra and K. Chakrabarty. ‘A unified approach to reduce SoC test data volume, scan power and testing 
time’. IEEE Trans. Computer-Aided Design Integrated Circuits Syst., Mar 2003, vol. 22, no. 3, pp. 352-363. 
[12] A. Chandra and K. Chakrabarty.: ‘Test Data Compression and Test Resource Partitioning for System-on-a-Chip 
Using Frequency-Directed Run-Length (FDR) Codes’. IEEE Trans. Comput., Aug 2003, vol. 52, pp. 
1076-1088. 
[13] X. Ruan and R. Katti: ‘An efficient data-independent technique for compressioning test vectors in 
systems-on-a-chip’. ISVLSI, 2006, pp. 153-158. 
[14] L. Li and K. Chakrabarty.: ‘Test data compression using dictionaries with fixed-length indices’.  Proc. VTS, 
2003. 
[15] G. Jervan,P. eles,Z. peng and R. Ubar,M. Jenihhin , “Test Time Minimization for Hybrid BIST of Core-Based 
Systems”, Proceedings of the IEEE Asian Test Symposium (ATS), November 2003, pp. 318-323. 
[16] S. Hellebrand, H. Linag and H.-J. Wunderlich, “A mixed-mode BIST scheme based on reseeding of folding 
counters”, in Proc. Int. Test Conf. (ITC’00), 2000, pp. 778-784. 
[17] C. Krishna, A. Jas and N.A. Touba, “Test vector encoding using partial LFSR reseeding”, in Proc. Int. Test 
Conf. (ITC’01), 2001, pp. 885-893. 
[18] S. Wang, “Low hardware overhead scan based 3-weight weighted random BIST”, in Proc. Int. Test Conf. 
(ITC’01), 2001, pp. 868-877. 
[19] Banerjee, S.; Chowdhury, D.R.; Bhattacharya, B.B., “An Efficient Scan Tree Design for Compact Test Pattern 
Set”, July 2007, pp. 1331-1339. 
[20] L. Li, K. Chakrabarty, S. Kajihara, and S. Swaminathan. “Efficient space/time compression to reduce test data 
volume and testing time for IP cores”, In Proc. Int. Conf. VLSI, 2005, pp. 53-58.  
[21] Y. Bonhomme, T. Yoneda, H. Fujiwara, and P. Girard, “An efficient scan tree design for test time 
reduction,” in Proc. 9th IEEE ETS, May 23–26, 2004, pp. 174–179. 
[22] Gang Zeng and Hideo Ito, “Concurrent Core Test for SOC Using Shared Test Set and Scan Chain Disable,” 
date, p. 219, Proceedings of the Design Automation &amp; Test in Europe Conference Vol. 1, 2006. 
[23] I. Hamzaoglu and J. H. Patel, “Test set compaction algorithms for combinational Circuits,” Proc. Int. Conf. 
Computer-Aided Design, 1998, pp. 283-289. 
 
 
 
 
 
(a) 
 
(b) 
Fig. 1. Compatibility between 
two columns. Fig. 2.  (a) Division of Vf and Vt  (b) Bipartite compatibility graph. 
 
 
 
i j
0 0
1 1
0 x
x x
1 0
Compatible
Non-compatible
FF1 FF2 FF3 FF4 FF5 FF6 FF7 FF8 FF9
V1 0     1 1 X X X 0      0 0
V2 1    X 1 X X X X     X 1
V3 0     0      X 1 1 1 X     X 1
V4 1     0 X 0 X X 0     1 1
V5 1     1 1       X X X 0     X X
# Xs   0      1 2 3 4 4      2      3 1
4
2
5 6 7
1 9Temporary Set (Vt)
Folded Set (Vf) 8
3
Unfolded Set (Vu) :{ } 
8 
 
 
 
 
Fig. 5. Decompression architecture after the first merging 
iteration. 
 
 
 
 
 
FF4 FF5 FF6 FF8 FF7
FF2 FF9 FF3 FF1  
(a) 
 
 
(b) 
 
(c) 
 
Fig. 6. Decompression architecture after (a) the first, (b) 
second, and (c) third merging iteration. 
 
Fig. 7. Scan cell ordering and SE set for each scan chain on 
three modes: (a) broadcast mode (b) partially scan 
mode for V1 and V5 (c) partially scan mode for V3. 
 
Fig. 8.  Complete design flow for the proposed method 
 
 
 
 
 
TABLE 1 
TEST SETS GENERATED BY MINTEST ON ISCAS’89 BENCHMARK 
CIRCUITS 
Circuit 
# Test patterns  
(np) 
# Scan cells 
(ns) 
Total 
bits 
Test 
time 
(clock 
cycles) 
s5378 111 214 23754 23968 
s9234 159 247 39273 39520 
s13207 236 700 165200 165900 
s15850 126 611 76986 77597 
s38417 99 1664 164736 166400 
s38584 136 1464 199104 200586 
TABLE 2 
MERGING RESULTS BY THE PROPOSED METHOD 
 
Circuits Nf tf Np tp Nu tu Tn # SCs Lmax 
s5378 71 3834 16 1712 24 5136 10682 4 54 
s9234 67 4154 56 6944 36 8892 19990 4 62 
s13207 201 17688 20 3500 15 10500 31688 8 88 
s15850 89 13617 33 10098 4 2444 26159 4 153 
s38417 39 16224 36 29952 24 39936 86112 4 416 
s38584 97 35502 33 24156 6 8784 68442 4 366 
 
 
 
 
Scan chain 1
Scan chain 2 M
I
S
R
Scan chain 3
Controller
Scan chain 4
0
1
0
1
0
1
0    1
Scan_in
Scan_out
Shift_en1
Shift_en2
Shift_en3
Shift_en4
Select
FF4 FF5 FF6
FF8FF7
FF2 FF9 FF3
FF1
FF4 FF6
FF9
FF8
FF2
FF7 FF5
FF1
FF3
1 2 3 4 5
FF1
FF2 FF3
FF4
FF5
FF6
FF7
FF8
FF9
FF4
FF4
FF4
FF4
FF4
FF4
1 2
(a) (b) (c)
1 2 3 4 5 6 7 8 9
Start
Decide  folded  set  and  
temporary  set
Remove conflict test patterns
and decide  merging  sequence  
Calculate total  number  of bits
Tn = tf + tp +tu
If  Tn < Tn-1 Yes
No
Give up and go back to construct  
scan chains and generate SCDS  
End
Perform  column  merging 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/06
國科會補助計畫
計畫名稱: 高效能廣播掃描壓縮技術之研究
計畫主持人: 李隆仁
計畫編號: 100-2218-E-539-003- 學門領域: 積體電路及系統設計
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
助理人員陳志展目前於工研院從事相關工作 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
