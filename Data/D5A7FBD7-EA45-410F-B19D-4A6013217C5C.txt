  
TABLE OF CONTENTS 
TECHNIQUE REPORT………………..…………………1 
REFERENCES…………………………………………….8 
EVALUATION OF THIS PROJECT..…………..………..9 
 
 
 
 
 
 
 
 
 
*資料內容須包含目錄、報告內容、參考文獻及計畫成果自評。 
 
 
ically [5, 20]. By making use of Pareto dominance relation-
ship, MOEAs are capable of performing the fitness assign-
ment of multiple objectives without using relative prefer-
ences of multiple objectives. Thus, all the objective func-
tions can be optimized simultaneously. As a result, MOEA
seems to be an alternative approach to solving production
planning and inspection planning problems on the assump-
tion that no prior domain knowledge is available.
One of the recent growing areas in evolutionary algo-
rithms (EAs) research is memetic agorithms (MAs). MAs
are population-based meta-heuristic search methods inspired
by Darwinian principles of natural evolution and Dawkins
notion of a meme defined as a unit of cultural evolution that
is capable of local refinements [4]. From an optimization
point of view, MAs are hybrid EAs that combine global and
local search by using an EA to perform exploration while
the local search method performs exploitation. Combining
global and local search is known as an efficient strategy in
many successful optimization approaches [9].
In this paper, a novel approach using a multi-objective
memetic algorithmMOMA is proposed to solve multi-objective
production and inspection planning problems (MOPIPs) hav-
ing six objectives: minimizing total machining time, ma-
chine workload unbalance, greatest machine workload, total
tool cost, total inspection time and number of inspections.
A schemata-guided local search strategy is also proposed
for enhancing performances of MOMA. The proposed ap-
proach can obtain a set of non-dominated solutions for deci-
sion makers in a single run. Decision makers can easily dis-
tinguish between the costs of different production plans and
choose more than one satisfactory production plans which
may offers high-quality products at lower costs at a time.
Six benchmark problems with different complexities are de-
rived to evaluate the performance of the proposed approach.
It is shown empirically that MOMA can converge to better
solutions than traditional MOGA in solving MOPIPs.
This paper is organized as follows: Section 2 describes
the investigated MOPIPs. Section 3 presents the proposed
memetic multi-objective genetic algorithm MOMA for solv-
ing investigated problems. Section 4 gives the experimental
results and analysis of the proposed algorithm. Section 5
summarizes our conclusions.
2. PROBLEM STATEMENT
The aim of production planning and inspection planning
is to develop a cost-effective and operative inspection and
production plan over planning phases. In this section, a
multi-objective production and inspection planning problem
(MOPIPs) is established. With the assignments of inspec-
tion and assignments of operations to machines, six opti-
mization objectives: minimizing total machining time, ma-
chine workload unbalance, greatest machine workload, total
tool cost, total inspection time and number of inspections,
are considered in our problems.
2.1 The FMS environment
An FMS consists of a set of identical and/or complemen-
tary numerically controlled machines, coordinate measuring
machines and tool systems. All components are connected
through an automatic guided vehicle (AGV) system. Fig. 1
shows the layout of a simple FMS with several machines,
AGVs and a tool system.
In order to design production plans and inspection plans
Figure 1: FMS with several machines, a coordinate
measuring machine (CMM), AGVs and a central
tool magazine.
of FMSs, the environment within which the FMS under con-
sideration operates can be described below.
1. The investigated FMS consists of several identical and/or
complementary manufacturing machines and a coordi-
nate measuring machine. The types and number of
manufacturing machines are known. There is a suffi-
cient input/output buffer space at each machine.
2. A part type requires a number of operations. A number
of part types will be manufactured simultaneously in
batches. Parts can choose one or more machines at
each of their operation stages, and the transportation
of the parts within different machines is handled by an
AGV system.
3. A machine can perform several types of operations,
and an operation can be performed on alternative ma-
chines.
4. A machine can only process an operation at one time.
Operations to be performed in the machine are non-
preemptive. Operation lot splitting is ignored in this
paper.
5. A production plan consists of part indices, operation
indices, and a series of machine indices corresponding
to operations of all parts. Based on a production plan,
each operation is operated on its corresponding ma-
chine. An illustrative production plan of 3 parts and
10 operations is presented in Fig. 2, and the operations
are operated on 3 different machines. An example of
the series of machine indices to be optimized is Y=[ 1
1 1 3 1 2 2 2 3 3 ].
6. A inspection plan consists of part indices, operation
indices, and a series of binary indices corresponding
operations of all parts. Based on a inspection plan,
if an index is true, a part will be transport to coordi-
nate measuring machine for inspection after the corre-
sponding operation is finished. An example of a series
of binary indices to be optimized is Z=[ 0 1 0 0 1 0 0
1 0 1 ].
2
2.2.2 Objectives
There are six objectives to be optimized in FMSs, de-
scribed below.
1. Minimization of total machining time. This objective
is to minimize the processing time and transportation
time for producing the parts. The total machine pro-
cessing time (f1) is defined as Equation 1, the trans-
portation time (f2) is defined as Equation 2, and the
total flow time (F1) is defined as Equation 3. Trans-
portation between unlinked machines are penalized in
f2.
f1 =
I∑
i=1
Ji∑
j=1
K∑
k=1
pvi × ptijk × xijk, (1)
f2 =
I∑
i=1
Ji−1∑
j=1
K∑
k=1
K∑
l=1
tikl × xijk × xi(j+1)l, (2)
F1 = f1 + f2. (3)
2. Minimization of machine workload unbalance. Balanc-
ing the machine workload can avoid creating bottle-
neck machines. The objective function (F2) is defined
as Equation 4.
F2 =
K∑
k=1
(RWLk −AvgRWL)2. (4)
3. Minimization of greatest machine workload. Pursuing
this objective also implies attempting to minimize the
total flow time. The objective function (F3) is defined
as Equation 5.
F3 = max(RWLk). (5)
4. Minimization of total tool cost. Tool costs consider the
consumptions of tools, tool life issues, tool expenses
and the number of tool copies. The objective function
(F4) is defined as Equation 6.
F4 =
I∑
i=1
Ji∑
j=1
K∑
k=1
cijk × xijk. (6)
5. Minimization of total inspection time. This objective
is to minimize the inspection time of parts. The in-
spection time is p% of the sum of all previously unin-
spected machining operation times. Although this ob-
jective is proportion of f1 in Equation 2, it should be
considered independently. Otherwise, if the inspection
time is integrated in F1, it would be dominated by f1
and f2. In consequence, the results will be biased in
optimizing F1. The objective function (F5) is defined
as Equation 7.
F5 =
I∑
i=1
Ji∑
j=1
K∑
k=1
p
100
× pvi × ptijk × xijk × bij , (7)
6. Minimization of number of inspections. The num-
ber of inspections consider the consumptions of in-
spection machines and their related expenses. Deci-
sion makers usually expect that the number of inspec-
tions is smaller than a maximum number of inspec-
tion MaxIP . The objective function (F6) is defined
as Equation 8.
F6 =
I∑
i=1
Ji∑
j=1
zij . (8)
2.2.3 Multi-objective Mathematical Model
The overall multi-objective mathematical model of MOPIPs
can be formulated as follows. Given the production vol-
ume pvi, the processing time ptijk, the maximum workload
MaxWLk, the maximum number of inspectionMaxIP , the
available capacity of AGV per trip abl, the transportation
time tmkl and the tool costs cijk, find a series of machine
indices Y and a series of binary indices Z for operations and
inspection of all parts, such that
minimize F1, F2, F3, F4, F5, F6 (9)
subject to
K∑
k=1
xijk = 1, ∀(i, j), (10)
tmkl ≥ 0, ∀(k, l), (11)
RWLk ≤ 1, ∀i. (12)
F6 ≤MaxIP. (13)
The constraint, Equation 10, ensures that only one ma-
chine is selected for each operation of a part. Equation 11 en-
sures an AGV path exists between machines k and l. Equa-
tion 12 is to ensure the machine workload wlk is smaller or
equal to its maximum machine workload MaxWLk. Equa-
tion 13 is to ensure the number of inspections F6 is smaller
or equal to the maximum number of inspections MaxIP .
If the total number of machines ism and the total number
of operations is n, then the complexity of the investigated
problem is O(mn · 2n).
3. MULTI-OBJECTIVE MEMETIC
ALGORITHMMOMA
MOMA differs from MOGA mainly in its local search
strategy. A summary of Pareto dominance relationship and
the fitness assignment strategy for handling multiple objec-
tive functions is described in Section 3.1. The proposed
schemata-guided local search strategy is presented in Sec-
tion 3.2. MOMA for solving MOPIPs is presented in Sec-
tion 3.3, including the representation of chromosomes, ge-
netic operators, constraint handling, and the procedure of
MOMA.
3.1 Fitness assignment strategy
ManyMOEAs differ mainly in the fitness assignment strat-
egy, which is known as an important issue in solving MOOPs [5].
MOMA uses a generalized Pareto-based scale-independent
fitness function GPSIFF considering the quantitative fit-
ness values in Pareto space for both dominated and non-
dominated individuals. GPSIFF makes the best use of Pareto
dominance relationship to evaluate individuals using a single
measure of performance.
4
search strategy is proposed based on this guideline. Infor-
mation of fixed and ”don’t care” schemata in species are
utilized to guide local search. However, the key question of
this local search strategy is that how do we classify popula-
tion to different species when true Pareto-optimal solutions
of MOOPs are unknown. To deal with this question, it is as-
sumed that the best individuals in each objective functions
are the pioneers of each species. These pioneers will be used
to classify all individuals in population to different species.
Given a maximum local search times MaxLS and a tem-
porary elite set E′, the procedure of the proposed schemata-
guided local search strategy is written as follows:
Step 1: Identification Identify the best individualsBq, q =
1, 2, ..., Q, in each objective from the current popula-
tion. For MOPIPs, Q=6.
Step 2: Classification Classify the current population into
Q species by the best solutions in each objective.
Step 3: Compute Schemata For each species, compute
its schemataHq. Both fixed and ”don’t care” schemata
are identified.
Step 4: Parameter setting Let q = 1, counter = 0.
Step 5: Perturbation Perturb Bq into a new solution B
′
q.
According to Hq, apply the mutation operator only on
”don’t care” locations of Bq with a mutation proba-
bility pm.
Step 6: Evaluation Evaluate the objective functions of
B′q. Let counter = counter + 1.
Step 7: Comparison There is 3 cases in comparisons of
Bq andB
′
q. Case 1: IfBq dominatesB
′
q and counter <
MaxLS, go to Step 5. Case 2: If Bq is dominated by
B′q, replace Bq by B
′
q. Case 3: If Bq and B
′
q doesn’t
dominated each other. Stored B′q in a temporary elite
set E′.
Step 8: Termination test Let q = q + 1 and counter=0,
if q¿Q, stop the local search strategy. Otherwise, go
to Step 5.
3.3 MOMA for solving MOPPP
3.3.1 Chromosome representation
A series of machine indices Y and a series of binary indices
Z for operations of all parts is directly encoded as a integer
chromosome. For the first series of indices Y , the range
of each gene of Y is [1, K]. Each gene of Y stands for a
machine index. For the second series of indices Z, each gene
of Z is either 1 or 0, which represent an inspection of this
manufacturing part is to be conducted or not.
3.3.2 Genetic Operators
The genetic operators used in the proposed approach are
widely used in literature. The selection operator of MOMA
uses a binary tournament selection which works as follows.
Choose two individuals randomly from the population and
copy the better individual into the intermediate population.
Crossover is a recombination process in which genes from
two selected parents are recombined to generate offspring
chromosomes. The two-points crossover is used in MOMA.
In a two-points crossover operation, the first cutting point
individual genes
P1 1 1 1 3 1 2 3 2 3 3 0 1 0 0 1 0 0 1 0 1
P2 2 2 3 1 1 2 2 1 2 2 0 0 0 1 1 0 1 1 0 1
C1 2 2 3 1 1 2 3 2 3 3 0 0 0 1 1 0 0 1 0 1
C2 1 1 1 3 1 2 2 1 2 2 0 1 0 0 1 0 1 1 0 1
Figure 5: An illustrated crossover operation. As-
suming the generated cutting points are 5 and 16,
P1 and P2 are parents, then C1 and C2 are the gen-
erated offsprings.
is selected randomly among Y , and the second cutting point
is selected randomly among Z. The genes on the sides of
the cutting point are exchanged between the parent chro-
mosomes. A crossover operation is illustrated in Fig. 5.
A simple mutation operator is used to alter genes. For
each gene, randomly generate a real value from the range [0,
1]. If the value is smaller than the mutation probability pm,
replace its index with a randomly generated integer among
its possible values.
3.3.3 Constraint Handling
Based on the proposed chromosome representation, Equa-
tion 10 is always satisfied. If Equation 11 is violated, the
transportation time between machines k and l, tmkl, is set
to be a large value, 107. In this way, f2 will be penalized.
For each machine k, if Equation 12 is not satisfied, one is
added to RWLk, as follows:
RWLk =
{
wlk
MaxWLk
, if wlk ≤MaxWLk;
wlk
MaxWLk
+ 1, otherwise.
(18)
If Equation 13 is not satisfied, F6 is penalized with a value
MaxIP .
3.3.4 Procedure of MOMA
Since it has been recognized that the incorporation of
elitism may be useful in maintaining diversity and improv-
ing the performance of multi-objective EAs [5], MOMA se-
lects a number of elitists from an elite set E in the selection
step. The elite set E with capacity Emax maintains the best
non-dominated solutions generated so far. In addition, an
external set E with no capacity is used to store all the non-
dominated solutions ever generated so far. The procedure
of MOMA is written as follows:
Step 1: Initialization Randomly generate an initial pop-
ulation of Npop individuals and create two empty elite
sets E, E and an empty temporary elite set E′.
Step 2: Evaluation For each individual Y in the popu-
lation, compute F1(Y ), F2(Y ), F3(Y ), F4(Y ), F5(Y ),
and F6(Y ).
Step 3: Fitness assignment Assign each individual a fit-
ness value by using GPSIFF.
Step 4: Local Search Apply the proposed schemata-guided
local search strategy. Non-dominated solutions ob-
tained by the local search strategy will be stored in
temporary elite set E′.
Step 5: Update elite sets Add the non-dominated indi-
viduals in both the population and E′ to E, and empty
6
chine workload unbalance, greatest machine workload, total
tool cost, total inspection time and number of inspections.
The advantages of the proposed approach are that MOMA
can optimized multiple objectives without decomposing prob-
lems into sub-problems, and MOMA makes use of Pareto
dominance relationship to solve problems without using rel-
ative preferences of multiple objectives. While prior domain
knowledge for the decomposition of problems or relative
preferences of multiple objectives are not available, the pro-
posed approach is an expedient method to solve production
planning and inspection planning of FMSs, compared with
the decomposition and preference-based approaches in lit-
erature. In addition, the proposed approach can obtain a
set of non-dominated solutions for decision makers in a sin-
gle run. Decision makers can easily distinguish between the
costs of different production plans and choose more than one
satisfactory production plans at a time. These additional de-
grees of freedom could provide a better exploitation of the
resources of FMSs.
Experimental results demonstrated that the quality of
non-dominated solutions obtained by MOMA is better than
that of MOGA in terms of convergence speed and accuracy
using the same number of function evaluations. The results
indicate that the proposed approach is a generalized and ef-
ficient approach to solving MOPIPs. Moreover, the results
also show that the proposed schemata-guided local search
could be good bonus for MOMA. Possible future work of
this paper can be
1. the number of pioneers for classifying species;
2. selection of pioneers for classifying species;
3. determine potential ”don’t care” locations for local
search;
4. use information of ”fixed” schemata of a species to
alter ”don’t care” location of another species;
5. performance of the proposed schemata-guided; local
search in different evolution phases.
6. ACKNOWLEDGMENTS
We thank the anonymous reviewers for their comments.
This work was supported by the National Science Council of
Taiwan, R.O.C., under Contract NSC-95-2221-E-216-036.
7. REFERENCES
[1] J. A. Bosch, editor. Coordinate Measuring Machines
and Systems. Marcel Dekker Inc., New York, 1995.
[2] J.-H. Chen and S.-Y. Ho. A novel approach to
production planning of flexible manufacturing systems
using an efficient multi-objective genetic algorithm.
International Journal of Machine Tools and
Manufacture, 45(7-8):949–957, June 2005.
[3] Y.-J. Chen and R. G. Askin. A multiobjective
evaluation of flexible manufacturing system loading
heuristics. International Journal of Production
Research, 28(5):895–911, 1990.
[4] R. Dawkins. The selfish Gene. Oxford University
Press, 1976.
[5] K. Deb. Multi-objective optimization using
evolutionary algorithms. Wiley-Interscience series in
systems and optimization. John Wiley & Sons, 2001.
[6] D. E. Goldberg. Genetic algorithms in search,
optimization, and machine learning. Addison-Wesley
Pub. Co., 1989.
[7] J. H. Holland. Adaptation in natural and artificial
systems. University of Michigan Press, Ann Arbor,
MI, 1975. ISBN: 0-262-58111-6.
[8] M. Innala and S. Torvinen. Integrating computer
aided quality assurance in flexible engineering and
production processes. International Journal of
Production Economics, 41(1):179–184, 1995.
[9] H. Ishibuchi, T. Yoshida, and T. Murata. Balance
between genetic search and local search in memetic
algorithms for multiobjective permutation flowshop
scheduling. IEEE Trans. on Evolutionary
Computation, 7(2):204–223, 2003.
[10] P. Kumar, N. K. Tewari, and N. Singh. Joint
consideration of grouping and loading problems in a
flexible manufacturing system. International Journal
of Production Research, 28(7):1345–1356, 1990.
[11] C. S. Lee, S. S. Kim, and J. S. Choi. Operation
sequence and tool selection in flexible manufacturing
systems under dynamic tool allocation. Computers &
Industrial Engineering, 45(1):61–73, 2003.
[12] J. Lee and C. F. F. Inspection sequencing and part
scheduling for flexible manufacturing systems.
European Journal of Operational Research,
(65):344–355, 1996.
[13] M. Liang. Integrating machine speed, part selection
and machine loading decision in FMSs. Computer &
Industrial Engineering, 26(3):599–608, 1994.
[14] M. Liang and P. S. Dutta. A mixed-integer
programming approach to the machine loading and
process planning problem in a process layout
environment. International Journal of Production
Research, 28(8):1471–1484, 1990.
[15] V. Pareto. Cours d’economie politique professe a
l’universite de Lausanne, volume 1. F. Rouge,
Lausanne, 1896.
[16] M. Siemiatkowski and W. Przybylski. Simulation
studies of process flow with in-line part inspection in
machining cells. Journal of Materials Processing
Technology, 171(1):27–34, 2006.
[17] M. S. Sodhi, R. G. Askin, and S. Sen. Multiperiod
tool and production assignment in flexible
manufacturing systems. International Journal of
Production Research, 32(6):1281–1294, 1994.
[18] R. Swarnkar and M. K. Tiwari. Modeling machine
loading problem of FMSs and its solution
methodology using a hybrid tabu search and
simulated annealing-based heuristic approach.
Robotics and Computer-Integrated Manufacturing,
20(3):199–209, 2004.
[19] H. Tempelmeier and H. Kuhn. Flexible manufacturing
systems: decision support for design and operation.
Wiley series in systems engineering. Wiley, New York,
1993.
[20] E. Zitzler and L. Thiele. Multiobjective evolutionary
algorithms: a comparative case study and the
strengthen Pareto approach. IEEE Transaction on
Evolutionary Computation, 4(3):257–271, 1999.
8
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 95-2221-E-216-036 
計畫名稱 研發多目標瀰因型演算法規劃彈性製造系統之生產計劃 
出國人員姓名 
服務機關及職稱 
陳建宏 
中華大學資訊工程學系 
會議時間地點 英國倫敦, 96年 7月 7日至 96年 7月 11日 
會議名稱 ACM Genetic and Evolutionary Computation Conference 
發表論文題目 Multi-Objective Inspection Planning and Production Planning for Flexible Manufacturing Systems 
 
一、參加會議經過 
 
7月7日註冊報到，與會人士共計約千名來自學術界和工商業界之專業人士與學生。7月7
日及8日分別依不同的主題在不同會議室舉辦專題討論和 tutorial，7日共舉辦了8個專題研討
會和17個 tutorial。8日共舉辦了8個專題研討會和23個tutorial [1]。值得一提的是GECCO維持
一貫的傳統舉辦了大學生專題討論會和研究生專題討論會，一樣由學生投稿審查發表，會內
並邀請著名學者與學生分享討論其研究內容和研究方法。此一活動已連續舉辦八年，讓學生
獲益良多。 
7月9-11日有14個論文主題領域共計266篇會議論文分別依不同的主題在不同的會議室舉
行口頭報告。9日晚間在英國國家歷史博物館舉辦生物與電腦科學討論會，邀請三位知名生物
學者Prof. Richard Dawkins, Prof. Steve Jones, Prof. Lewis Wolpert與眾多研究學者共同討論，隨後於同一會館
並舉辦壁報論文發表。 
本人於11日早上11:30發表論文，發表之後與各地學者討論，會後並有美國Mathworks公
司員工代表前來詢問，該員工代表作即為MATLAB GA toolbox，互相交流意見並邀請本人前
往波士頓該公司參訪。 
 
[1] http://www.sigevo.org/gecco-2007/tutorial-workshops-schedule.html 
 
二、與會心得 
 
透過參加此次國際會議與來自各國的學者交流研究心得並且同時建立溝通管道。與本次
會議中，與會的各國學者就其研究領域充份探討及意見交流，本人更於會後與美國麻省理工
學院、伊利諾大學香檳校區、英國艾賽克斯大學、丹麥科技大學、日本大阪大學、新加坡南
洋理工大學 等各國學者共同討論研究方向，並獲邀請前往參訪其所屬大學。會後並與摩根史
坦利倫敦副總裁共同進餐討論本研究領域對於商業界之影響。會議所見所得對於未來個人學
術研究開拓更寬廣的視野。個人能參與該會議備感榮幸。 
 
Simultaneous Optimization of Production Planning and
Inspection Planning for Flexible Manufacturing Systems
Jian-Hung Chen
Department of Computer Science and Information Engineering
Chung-Hua University
707, Sec. 2, Wu-Fu Road, Hsin-Chu 300, Taiwan
jh.chen@ieee.org
ABSTRACT
Quality assurance in ﬂexible manufacturing systems (FMSs)
has become a matter of great importance in recent years.
The possibility for oﬀering high-quality products at lower
costs has become an essential for a manufacturer to keep
in a competitive edge. In this paper, an approach to the
multi-objective optimization of production planning and in-
spection planning in ﬂexible manufacturing systems is pre-
sented. A multi-objective memetic algorithm MOMA is pro-
posed to solve the problems having six objectives: mini-
mizing total machining time, machine workload unbalance,
greatest machine workload, total tool cost, total inspection
time and number of inspections. A schemata-guided local
search strategy is proposed for enhancing performances of
MOMA. High eﬃciency of MOMA arises from that multi-
ple objectives can be optimized simultaneously without us-
ing heuristics and a set of good non-dominated solutions
can be obtained providing additional degrees of freedom for
the exploitation of resources of FMSs. Experimental results
demonstrate eﬀectiveness of the proposed approach using
MOMA for production planning and inspection planning of
FMSs.
Categories and Subject Descriptors
H.4.m [Information Systems Applications]: Miscella-
neous
General Terms
Algorithms, Management, Performance
Keywords
Inspection planning, production planning, ﬂexible manufac-
turing systems, multi-objective optimization
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
GECCO’07, July 7–11, 2007, London, England, United Kingdom.
Copyright 2007 ACM 978-1-59593-697-4/07/0007 ...$5.00.
1. INTRODUCTION
A ﬂexible manufacturing system (FMS) is a production
system consisting of a set of numerically controlled ma-
chines which are connected through an automated guided
vehicle (AGV) system [19]. Since FMS is capable of pro-
ducing a variety of part types and handling ﬂexible routing
of parts instead of running parts in a straight line through
machines, FMS gives great advantages through its ﬂexibility,
such as dealing with machine and tool breakdowns, changes
in schedule, product mix, and alternative routes.
Recently, quality assurance has become an important is-
sue in the integration of FMSs, a machining cell can be
further integrated with sophisticated inspection equipments
(e.g., coordinate measuring machines, CMMs) [1, 8]. In-
corporating coordinate measuring machines for automatic
inspection of parts produced in FMSs have become an im-
portant manufacturing issue. In consequence, the possibil-
ity for oﬀering high-quality products at lower costs has be-
come an advantage for a manufacturer to keep in a compet-
itive edge in nowadays. However, it imposes the necessity
of decision-making at which process should part inspections
be performed in order to minimize the costs associated with
quality assurance and the production costs.
While FMS oﬀers many strategic and operational beneﬁts
over conventional manufacturing systems, its eﬃcient man-
agement requires solutions to complex product planning and
inspection planning problems with multiple objectives and
constraints. Therefore, decisions regarding multi-objective
production and inspection planning problems (MOPIPs) have
to be made before the start of actual production, and consist
of organizing the limited resource constraints eﬃciently.
During the past decades, a number of production planning
approaches [2, 3, 10, 11, 13, 14, 17, 18, 19] have been de-
veloped for automated planning and increased eﬃciency of
production planning approaches. Meanwhile, only a few ap-
proaches [12, 16] proposed rule-based scheduling policies to
solve inspection planning problems. However, from a system
designer’s point of view, it is very desirable to obtain a set
of deterministic solutions that considering both production
planning and inspection planning problems simultaneously.
Multi-objective evolutionary algorithms (MOEAs) have
been recognized to be well-suited for solving MOOPs be-
cause their abilities to exploit and explore multiple solutions
in parallel and to ﬁnd a widespread set of non-dominated so-
lutions in a single run [5]. Several MOEAs based on Pareto
dominance relationship [15] are proposed to solve MOOPs
directly, and present more promising results than single-
objective optimization techniques theoretically and empir-
1928
7. Processing times of operations in machines are avail-
able and deterministic. The tool costs of operations in
machines are known.
8. Inspection time is a ratio of operation processing time.
A ratio of 0.05 means that the mean inspection opera-
tion time is 5% of the sum of all previously uninspected
machining operation times. In this paper, a ratio of
0.05 is assumed.
9. Workload on each machine is contributed by those op-
erations assigned to a machine.
10. A load/unload (L/U) station serves as a distribution
center for parts not yet processed and as a collection
center for parts ﬁnished. All vehicles start from the
L/U station initially and return to there after accom-
plishing all their assignments. There are suﬃcient in-
put/output buﬀer spaces at the L/U station.
11. The number of AGVs is given and the transportation
time among diﬀerent machines are known. Some ma-
chines may not be linked.
12. AGVs carry a limited number of products at a time.
They move along predetermined paths, with the as-
sumption of no delay because of congestion. Preemp-
tion of trips is not allowed.
13. It is assumed that all the design, layout and set-up
issues within FMS have already been resolved.
14. Real-time issues, such as traﬃc control, congestion,
machine failure or downtime, scraps, rework, and ve-
hicle dispatches for battery changer are ignored here
and left as issues to be considered during real-time
control.
Part index 1 2 3
Operation index 1 2 3 4 1 2 3 1 2 3
Machine index 1 1 1 3 1 2 2 2 3 3
Inspection index 0 1 0 0 1 0 0 1 0 1
Figure 2: A inspection plan and production plan of
3 parts and 10 operations, operated on 3 diﬀerent
machines. For example, the operation 2 of the part
1 is assigned to the machine 1, and the part 1 will
be transport for inspection after the operation 2 of
the part 1.
2.2 Mathematical formulation of MOPIPs
2.2.1 Notations
In order to formulate MOPIPs, the following notations
are introduced:
• i : part index, i = 1, 2, 3, ..., I.
• j : operation index for part i, j = 1, 2, 3, ..., Ji.
• k, l : machine index k, l = 1, 2, 3, ...,K.
• pvi : production volume (unit) for part i.
• cijk : tool costs to perform operation j of part i using
machine k.
• ptijk : processing time per unit to perform operation
j of part i using machine k.
• tmkl : transportation time from machine k to l. If ma-
chines k and l are not linked, it is set to be a negative
value for constraint handling.
• abl : available capacity of AGV per trip, abl is set to
10 in this paper.
• MaxWLk : maximum workload of machine k.
• MaxIP : maximum number of inspection.
• wlk : workload in machine k, WLk = ptijk × pvi.
• RWLk : workload ratio in machine k, RWLk = wlkMaxWLk .
• AvgRWL : average workload ratio of machines.
• yij : a machine index, if machine k is selected to per-
form operation j of part i, then yij = k. yij ∈ [1, k].
• zij :
⎧⎪⎨
⎪⎩
1, if operation j of part i is selected for
inspection;
0, otherwise.
• bij :
⎧⎪⎨
⎪⎩
1, if there exists an inspection in or after
the operation j of part i ;
0, otherwise.
• sikl :
{
1, if part i is to transfer from machine k to l ;
0, otherwise.
• xijk :
⎧⎪⎨
⎪⎩
1, if machine k is selected to perform
operation j of part i ;
0, otherwise.
• nikl : the number of trips between machine k and l for
part i,
nikl = sikl × pvi
abl
,
where the bracket represents a ceiling operation.
• tikl : total transportation time between machines k
and l for part i,
tikl = nikl × tmkl.
• Y : a series of machine indices yij corresponding to
operations of all parts in a production plan.
• Z : a series of binary indices zij corresponding to op-
erations of all parts in a inspection plan.
1930
FF
2
1
Figure 3: The circles represent non-dominated so-
lutions and the black dots are dominated solutions.
The ﬁtness values are calculated by GPSIFF.
3.1.1 Pareto dominance relationship
Assume all the objective functions Fm are to be mini-
mized. Mathematically, MOOPs can be represented as the
following vector mathematical programming problems:
Minimize F (X) = {F1(X), F2(X), ..., Fm(X)}, (14)
where X denotes a solution and Fm(X) is generally a nonlin-
ear objective function. When the following inequalities hold
between two solutions X1 and X2, X2 is a non-dominated
solution and is said to dominate X1(X2  X1):
∀m : Fm(X1) ≥ Fm(X2) and ∃n : Fn(X1) > Fn(X2). (15)
When the following inequality hold between two solutions
X1 and X2, X2 is said to weakly dominate X1(X2 
 X1):
∀m : Fm(X1) ≥ Fm(X2). (16)
A feasible solution X∗ is said to be a Pareto-optimal solu-
tion if and only if there does not exist a feasible solution
X where X dominates X∗. The corresponding vector of
Pareto-optimal solutions is called Pareto-optimal front. An
example in a bicriteria space is shown in Fig. 3, where the
circles represent non-dominated solutions and the black dots
are dominated solutions.
3.1.2 GPSIFF
The used GPSIFF is described below. Let the ﬁtness value
of an individual X be a tournament-like score obtained from
all participant individuals by the following function:
F (X) = p− q + c, (17)
where p is the number of individuals which can be domi-
nated by the individual X, and q is the number of individ-
uals which can dominate the individual X in the objective
space. Generally, a constant c can be optionally added in
the ﬁtness function to make ﬁtness values positive. In this
paper, c is the number of all participant individuals. GP-
SIFF can assign discriminative ﬁtness values to not only
non-dominated individuals but also dominated ones. Fig. 3
illustrate an example of ﬁtness values of 12 participant in-
dividuals for a bicriteria optimization problem (c=12). For
example, considering the individual A with a ﬁtness value
*00011****
****1011**
f 2
f
1
Figure 4: The population were divided into several
species, and each species optimizes its own niche
(Pareto-optimal solution).
13, in the rectangle formed by A, two individuals dominates
A (q=2) and three individuals is dominated by A (p=3).
Therefore, the ﬁtness value of A is 3-2+12=13.
3.2 Schemata-Guided Local Search Strategy
Based on schema theorem and the niche hypothesis [6, 7],
a schemata-guided local search strategy is proposed to be
combined with MOGA for improving the convergence speed
to the Pareto-front. Extended from the niche hypothesis,
it is assumed that, given a MOOP with Q Pareto-optimal
solutions, Q Pareto-optimal solutions can be regarded as Q
niches of the MOOP. In the worst case, to ensure MOEAs
is capable of searching Q Pareto-optimal solutions, it is as-
sumed that the population were divided into Q species (sub-
populations). Thus, each species is expect to optimize its
own niche (Pareto-optimal solution), as shown in Figure 4.
Therefore, the optimal schemata of a species is its Pareto-
optimal solution.
Let the schema of species be Hq, where the ﬁxed positions
are the maximum common string of all individuals in its
species and the others are ”don’t care”(*). Since species
are in the same population, a schemata of a species may be
disrupted by schemata of the other species due to genetic
operators. The disruption between species can be further
classiﬁed into the following two types:
1. Species disrupt noise: The ﬁxed schemata ofHorigin
are altered to ”don’t care” schemata by the corre-
sponding positions of the schemata Hother. Thus, a
species requires more time for ﬁxing it’s ”don’t care”
schemata.
2. Species hitchhiking noise: The ”don’t care” schemata
of Horigin are altered to ﬁxed schema by the corre-
sponding positions of the schema Hother. If the al-
tered schemata are located in the similarity regions
of their optimal schemata, the change is good for the
schemata Horigin. On the contrary, the change is bad
for the schemata Horigin.
Based on the foregoing inference, it is desired that a species
should keep its good schemata (building blocks) while mak-
ing good eﬀorts to alter its ”don’t care” schemata to its
ideal optimal schemata. As results, a schemata-guided local
1932
Table 1: The parameter settings of MOMA and
MOGA.
Parameters Value
Npop 100
Emax 100
ps 0.25
pc 0.6
pm 0.05
MaxLS 3
E′. Considering all individuals in E, remove the dom-
inated ones in E. Add E to E, remove the dominated
ones in E. If the number of non-dominated individu-
als in E is larger than Emax, randomly discard excess
individuals.
Step 6: Selection Select Npop −Nps individuals from the
population using the binary tournament selection and
randomly select Nps individuals from E to form a new
population, where Nps = Npop×ps and ps is a selection
proportion. If Nps is greater than the number NE of
individuals in E, let Nps = NE .
Step 7: Recombination Perform the two-points crossover
operation with a recombination probability pc.
Step 8: Mutation Apply the mutation operator to each
gene in the individuals with a mutation probability
pm.
Step 9: Termination test If a stopping condition is sat-
isﬁed, stop the algorithm and output E. Otherwise,
go to Step 2.
4. RESULTS AND DISCUSSION
Considering the real manufacturing environment, we de-
rived the AGV transportation time matrix and six bench-
mark problems: m3o10, m4o20, m5o100, m5o200, m10o100
and m10o200, where mxoy stands for the x machine and
y operation problem. In order to further investigate the
performance of MOMA, a MOGA (MOMA without the lo-
cal search strategy) is also implemented to solve MOPIPs.
The solutions obtained by MOGA are used as the baseline
performance for comparisons. The parameter settings of
MOMA and MOGA are given in Table 1. All the parame-
ters of MOMA and MOGA in each experiment are the same.
Thirty independent runs were performed per test problems,
compared with the same number of function evaluations
100xy.
The coverage metric C(A,B) of two solution sets A and
B [20] used to compare the performance of two correspond-
ing algorithms considering the six objectives:
C(A,B) =
|{a ∈ A, b ∈ B, a 
 b}|
|B| , (19)
where 
 stands for weakly dominate in Pareto dominance
relationship. The value C(A,B) = 1 means that all in-
dividuals in B are weakly dominated by A. On the con-
trary, C(A,B) = 0 denotes that none of individuals in B is
weakly dominated by A. Because the C measure considers
the weakly dominance relationship between two sets A and
B, C(A,B) is not necessarily equal to 1 − C(B,A). The
m3o10 m4o20 m5o100 m5o200 m10o100 m10o200
0
0.2
0.4
0.6
0.8
1
(b) C(MOGA, MOMA)
m3o10 m4o20 m5o100 m5o200 m10o100 m10o200
0
0.2
0.4
0.6
0.8
1
(a) C(MOMA, MOGA)
Figure 6: Box plots based on the cover metric. (a)
C(MOMA, MOGA), (b) C(MOGA, MOMA).
comparison results of two solution sets using the coverage
metric are depicted using box plots. A box plot provides an
excellent visual result of a distribution. The box stretches
from the lower hinge (deﬁned as the 25th percentile) to the
upper hinge (the 75th percentile) and therefore contains the
middle half of the scores in the distribution. The median is
shown as a line across the box.
For each run, the solutions set of two algorithms are com-
pared using the coverage metric. Fig. 6 depicts the coverage
metrics of C(MOMA,MOGA) and C(MOGA,MOMA) from
30 runs. In solving the small problem m3o10, Fig. 6 shows
that the performance of MOMA is slightly better than MOGA.
However, as the complexity of problems increases, Fig. 6
shows that 50%-90% of the non-dominated solutions ob-
tained by MOGA are weakly dominated by the non-dominated
solutions obtained by MOMA in solving the problems m4o20,
m5o100, m5o200, m10o100 and m10o200. On the contrast,
the non-dominated solutions of MOGA dominate nearly 3-
10% of the non-dominated solutions obtained by MOMA.
The results indicate that MOMA can converge to better
solutions more quickly than MOGA. It reveals that the pro-
posed schemata-guided local search strategy plays an impor-
tant role in MOMA.
For practitioners of FMSs, by taking advantage of this
multi-objective approach, a satisfactory production plan can
be fast obtained by given relative preferences from practi-
tioners, and practitioners can also choose several alternative
production plans at a time. These additional degrees of free-
dom could provide a better exploitation of the resources of
FMSs. On the contrary, single-objective approaches have
to perform multiple runs in order to obtain a set of non-
dominated solutions.
The complexity of the investigated problem is determined
by the numbers of operations and machines. If the complex-
ity increases, a large computation time may be necessary to
solve a large-scale problem. In practical, MOMA can uti-
lize some speciﬁc heuristic rules (smallest processing time,
smallest tool cost, smallest inspection time etc.) such that
the results may be better.
5. CONCLUSIONS
In this paper, a novel approach to production planning
of ﬂexible manufacturing systems (FMSs) using an multi-
objective memetic algorithm MOMA is proposed. A schemata-
guided local search strategy is integrated with MOMA for
enhancing the performance of MOMA. The investigated multi-
objective production and inspection planning problem (MOPIP)
has six objectives: minimizing total machining time, ma-
1934
