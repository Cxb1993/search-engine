  I 
中文摘要 
在有空洞(或障礙物)的無線感測環境中，如何辨識空洞以有效傳遞資料，是一個具
挑戰性的議題。在辨識空洞的相關研究中，大多需仰賴感測點多次交換訊息才能逐步完
成，使得感測點會消耗較多能量；而即使已知有空洞存在，資料傳送時若缺乏有效的機
制繞過空洞，亦可能造成資料傳送的失敗。此外，目前大多數的避洞繞徑機制僅考慮資
料傳送過程中遭遇單一空洞的情形，造成在多個空洞的環境中繞徑效能不佳。因此，本
計畫在具多空洞的感測網路環境中，設計有效的機制以辨識空洞，並提出省能的避洞繞
徑機制，減少偵測及繞過空洞所消耗的感測點能量，並使資料能經由較佳的路徑傳送至
目的點。模擬結果顯示我們的方法相較於 EEHM 和 EHDS 方法，有較少的能量消耗、
控制封包數以及較短的路徑長度。 
 
關鍵詞：無線感測網路、空洞、障礙物、避洞繞徑、省能 
 
 
 
Abstract 
In wireless sensor networks with holes (obstacles), how to efficiently identify holes and 
help data packets to bypass holes along a short path are challenging issues. Most existing 
studies require sensor nodes to exchange messages multiple times for hole identification, thus 
consuming excessive energy of sensor nodes. Some studies assume that sensor nodes know 
the information of the holes. However, data packets may fail to be delivered to the destination 
due to the lack of efficient hole bypassing routing. In this project, we design an effective hole 
identification mechanism and propose an efficient hole bypassing routing scheme in wireless 
sensor networks with holes. With the proposed scheme, the energy consumption for hole 
identification and hole bypassing routing can be reduced, and data packets can be delivered to 
the destination along a shorter path. Simulation results show that the proposed scheme is 
more energy efficient, and has less control overhead and a shorter average path length than 
the EEHM and EHDS schemes. 
 
Keywords：wireless sensor networks, hole, obstacle, hole bypassing routing, energy efficient 
 
  2 
著，我們說明如何避免資料封包在繞徑過程中進入凹形區域，最後是來源點如何有效率
地將資料封包傳送至目的點。 
 
3.1 空洞資訊建立 
由於空洞的位置、形狀以及成因是不可預期的，因此，我們利用感測點的局部資訊
交換，將空洞的位置劃分出來。根據感測點與空洞的相關位置，將其分為一般感測點和
空洞邊界點，藉由能包圍整個空洞的空洞邊界點得知空洞的位置和形狀。 
我們將整個網路劃分成 L L 個邊長為 d 的正方形網格，每個網格內部均隨機散佈具
位置資訊的感測點。而每個網格中的感測點會輪流擔任網格管理者，其餘感測點進入睡
眠；網格管理者負責感測網格的資訊，同時也要能與相鄰的網格溝通、交換訊息，故令
其感測半徑和傳輸半徑分別為 2 d 與2 2 d。 
我們利用網格管理者和八個相鄰網格管理者是否能互相交換訊息來確認相鄰網格
管理者的存在否，同時，讓感測點判斷自己是否為空洞邊界點之候選者。假設最左下角
的網格編號為[0,0]，則每個網格管理者可由自己的實際位置座標得知其所屬網格編號。
若其網格編號為[x,y]且存在之相鄰網格管理者個數為 n，則若以下任一條件成立，此網
格管理者即為空洞邊界點之候選者： 
1. 8n   and 1 , 1x y L   . 
2. 5n   and (( 0x  ,1 1y L   ) or ( 1x L  , 1 1y L   ) or ( 0y  , 1 1x L   ) 
or ( 1y L  , 1 1x L   )). 
3. 3n   and ([x,y] = [0,0] or [0, L－1] or [L－1, 0] or [L－1, L－1]). 
以上的條件能初步產生空洞邊界點之候選者，如圖 1(a)，但可能會選出較多的空洞
邊界點，為了使傳送的資料能以更短的路徑繞過空洞。每個空洞邊界點之候選者 p，將
檢查其相鄰網格的空洞邊界點之候選者。若其可連通且個數 2，則點 p 為多餘的空洞邊
界點，如圖 1(b)。 
 
 
hole
A B
D
C
E
感測點
空洞邊界點之
候選者
 
 
hole
A B
D
C
E
感測點
空洞邊界點
 
(a) (b) 
圖 1 空洞邊界點之選取範例 
 
當空洞邊界點產生後，以最靠近 [0,0]的空洞邊界點為起點，依右手定則發送
HBD(Hole Boundary Detection)封包至下一個空洞邊界點，繞一圈後，所有空洞邊界點都
擁有其空洞的位置資訊。經過之空洞邊界點會紀錄至 HBD 封包，同時標示是否為交叉
點(若空洞邊界點之相鄰空洞邊界點的個數3，則稱之為交叉點(junction node))。若無法
傳送 HBD 封包至下一個空洞邊界點，則分以下兩種情況處理： 
情況一：若 HBD 封包的紀錄中有交叉點，則往回傳至交叉點，並繼續以右手定則
方式傳送封包。如圖 2(a)，當 A 將 HBD 封包傳遞至 C 時，HBD 封包紀錄 C 點，並將其
標示為交叉點。C 以右手定則方式繼續傳送直到 F。而 F 找不到下一個傳送點，因此往
回傳至交叉點 C，之後再繼續依右手定則將 HBD 封包傳送至 B。此外，當 HBD 封包再
次回到交叉點時，則取消此點在 HBD 封包中為交叉點之標示，同時將其間所經過之空
  4 
空洞邊界點。因此，在空洞周圍的每一個空洞邊界點均知道所有空洞邊界點的 ID 及位
置資訊。 
 
 
A
B
DC
E
F
空洞邊界點
空洞
感測點
交叉點
 
 
A
B
DC
E
F
空洞邊界點
空洞
感測點
 
(a) (b) 
圖 5 HBD 封包經過多個交叉點之傳送與更新範例 
 
3.2 資料封包進入凹形區域之避免機制 
為避免資料封包傳送至空洞的凹形區域內，造成不必要的繞路而消耗多餘的能量，
因此當空洞的位置資訊建立完成，我們為每個空洞邊界點 p 設定一旗標值 f(p)；當每個
空洞邊界點收到 HBL 封包後，依其傳送順序計算前一點的網格中心座標、自己(p)的網
格中心座標和下一點的網格中心座標之順時針形成的夾角 ，並根據下列條件設定其對
應的旗標值： 
 (1)若 180  ，則 f(p) ← 1。 
 (2)若 180  ，則 f(p) ← 1 。 
 (3)若 180  ，則 f(p) ← 0。 
若 p 和 q 兩個空洞邊界點之旗標值均為 1，且其間(順時針)經過 a 個旗標值為 1 的
空洞邊界點，b 個旗標值為 0 的空洞邊界點，且 a+b≧k 時(a、b 及 k 之設定將依環境及
應用之需要來調整)，則視 p 與 q 之間為一個凹形區域；此時，q 則傳遞一個 FNL(Forbidden 
Node Location)封包給 p，連接空洞之凹形區域的邊界，而 q 至 p 路徑上一般感測點，如
圖 6 的 b1、b2、b3 及 b4，在接收到 FNL 封包後，則會成為空洞邊界點，以避免資料封
包傳送進凹形區域。此外，q 亦廣播此空洞資訊至凹形區域內的節點。 
 
p
q
θ
感測點
空洞感測點
空洞
 
p
q
hole
b3
b2
b1
b4
感測點
空洞感測點
空洞
 
(a) (b) 
圖 6 凹形區域之識別及空洞邊界點之更新 
 
3.3 避洞繞徑機制 
當空洞的資料建置完成後，我們將設計有效率的避洞繞徑演算法，使來源點(S)至目
的點(D)能以較短的路徑及方向行走，進而達到省能的效果。 
在單一空洞的環境中，為了有效率的繞過空洞，S 在第一次傳送資料時若遇到某一
空洞邊界點 B，則會藉由空洞邊界點取得空洞的位置資訊並計算空洞兩側之端點位置，
其計算方式如下：以 SD 線段為中心，利用垂線計算 SD 至空洞兩側最遠距離之空洞邊界
  6 
 
S
D
E
K
B
 
圖 9 局部調整避洞繞徑機制 
 
p
q
D
S
d1
d2
EL
ER
d3
d4
d5
d6
感測點
空洞邊界點
空洞
(D)
(S)
 
圖 10 來源點(S)或目的點(D)位於凹形區域內 
 
四、模擬結果及分析 
本節介紹我們的模擬環境，以及基本的參數設定。同時將我們提出的方法與EEHM[7]
和 EHDS[8]針對平均路徑長度、控制封包數和總能量消耗進行比較分析。我們使用 C++
程式語言設計一無線感測網路之模擬環境，網路大小設為 50×50 網格(grids)，網格邊長
為 12.5m，5000 個感測點被均勻散佈在網路中。我們利用四種不同的空洞形狀(圓形、U
形、L 形和 T 形，如圖 11)來模擬各方法在單空洞及多空洞環境下的效能。在單空洞環
境下，我們將單一空洞放置於網路正中央，而在多空洞環境下，我們則是放置三個相同
形狀的空洞。 
 
 
 
 
 
 
 
 
 
(a)圓形空洞 (b)U 形空洞 (c)L 形空洞 (d)T 形空洞 
圖 11 不同的空洞形狀 
 
在能量消耗計算方面，我們採用 LEACH[13]中所提出的 first order radio model，其
中 Eelec= 50nJ/bit，εamp = 100pJ/bit/m
2，K 為封包大小(bit)，d 為兩點距離。傳送(ETx)與
接收(ERx)的能量消耗公式如下： 
ETx (k,d) = Eelec × K ＋εamp × K × d 
2
  
ERx (k,d) = Eelec × K 
  8 
則會造成過多的繞路，若 L 太短，則封包無法有效繞過空洞。此外，EHDS、EEHM 在
U 形空洞環境下，均無法有效繞過凹形區域，使得 EHDS、EEHM 在凹形空洞環境下，
路徑長度明顯增加。 
圖 14 及圖 15 為各方法在不同空洞形狀及空洞數量的環境下，對不同的傳輸對數之
控制封包數(即空洞資訊建立及資料傳送路徑建立過程中所需的控制封包數量)。由於我
們的方法採用網格架構，僅需較少感測點收集與交換空洞資訊，故控制封包數較 EHDS
和 EEHM 少，尤其在 U 形空洞的環境中差距更為明顯。此外，EHDS 將封包傳送至空
洞邊界點後，必頇將空洞資訊回傳至來源點，因此，EHDS 比 EEHM 的控制封包數多。 
 
0
50
100
150
200
250
300
350
400
450
1 3 5
Communication Sessions
C
o
n
tr
o
l 
o
v
e
rh
e
a
d
 (
p
a
ck
e
ts
)
Proposed scheme EHDS EEHM
 
0
50
100
150
200
250
300
350
400
450
1 3 5
Communication Sessions
C
o
n
tr
o
l 
o
v
e
rh
e
a
d
 (
p
a
ck
e
ts
)
Proposed scheme EHDS EEHM
 
(a) 圓形空洞 (b) U 形空洞 
0
50
100
150
200
250
300
350
400
450
1 3 5
Communication Sessions
C
o
n
tr
o
l 
o
v
e
rh
e
a
d
 (
p
a
ck
e
ts
)
Proposed scheme EHDS EEHM
 
0
50
100
150
200
250
300
350
400
450
1 3 5
Communication Sessions
C
o
n
tr
o
l 
o
v
e
rh
e
a
d
 (
p
a
ck
e
ts
)
Proposed scheme EHDS EEHM
 
(c) L 形空洞 (d) T 形空洞 
圖 14 不同的傳輸對數下之控制封包數(單空洞) 
 
0
200
400
600
800
1000
1200
1 3 5
Communication Sessions
C
o
n
tr
o
l 
o
v
e
rh
e
a
d
 (
p
a
ck
e
ts
)
Proposed scheme EHDS EEHM
 
0
200
400
600
800
1000
1200
1 3 5
Communication Sessions
C
o
n
tr
o
l 
o
v
e
rh
e
a
d
 (
p
a
ck
e
ts
)
Proposed scheme EHDS EEHM
 
(a) 圓形空洞 (b) U 形空洞 
0
200
400
600
800
1000
1200
1 3 5
Communication Sessions
C
o
n
tr
o
l 
o
v
e
rh
e
a
d
 (
p
a
ck
e
ts
)
Proposed scheme EHDS EEHM
 
0
200
400
600
800
1000
1200
1 3 5
Communication Sessions
C
o
n
tr
o
l 
o
v
e
rh
e
a
d
 (
p
a
ck
e
ts
)
Proposed scheme EHDS EEHM
 
(c) L 形空洞 (d) T 形空洞 
圖 15 不同的傳輸對數下之控制封包數(多空洞) 
  10 
度上，雖差異較為不明顯，但 EHDS 將封包傳送至空洞邊界點後，必頇將空洞資訊回傳
至來源點，需耗費較多能量，因此，EHDS 的能量消耗較 EEHM 多，尤其當 EHDS 在 U
形空洞的環境下，需要較多的控制封包數，能量消耗與我們的方法和 EEHM 之差距更
為明顯。 
 
五、結論 
本計畫提出有效且省能的避洞繞徑機制，以解決傳遞訊息的過程中可能會遇到空洞
而造成不必要的繞路問題。我們的方法主要採用網格架構，並分散式地建立空洞邊界
點，使得封包傳送路徑依據所得到的空洞邊界點位置資訊，計算出一條較短的路徑來傳
遞訊息。模擬結果顯示其在單空洞及多空洞的感測環境下，能有效的縮短封包傳送的路
徑長度，且在能量消耗及控制封包數皆有良好的表現。 
 
六、學術論文 
本計畫已發表之相關學術論文如下： 
1. Shiow-Fen Hwang, Chia-Hsuan Yang, Yi-Yu Su and Chyi-Ren Dow, “Energy Efficient Hole Bypassing 
Routing in Wireless Sensor Networks,” Proceedings of the 3rd IEEE International Conference on Computer 
Science and Information Technology (ICCSIT), pp. 576-580, Chengdu, China, July 9-11, 2010. 
2. 黃秀芬, 楊佳瑄, 蘇奕宇, 竇其仁, “無線感測網路中具省能之避洞繞徑機制,” 第十五屆行動計算研討
會, 台中教育大學, May 28, 2010. (最佳論文獎) 
 
七、計畫成果自評 
本人所提之研究計畫在一年執行期間已順利完成，並達原計畫目標，而部分研究成
果也已發表於國內外相關學術會議。此外，也將準備投稿至國際期刊。 
 
參考文獻 
[1] I. F. Akyildiz, S. Weilian, Y. Sankarasubramaniam, and E. Cayirci, “A Survey on Sensor Networks. IEEE 
Communications Magazine,” vol. 40, no. 8, pp. 102-114, 2002. 
[2] N. Ahmed, S.S. Kanhere, and S. Jha, “The Holes Problem in Wireless Sensor Networks: A Survey,” ACM 
SIGMOBILE Mobile Computing and Communications Review, vol. 9, no. 2, pp. 4-18, 2005. 
[3] D. Chen and P.K. Varshney, “A Survey of Void Handling Techniques for Geographic Routing in Wireless 
Networks,” IEEE Communications Surveys & Tutorials, vol. 9, no. 1, pp. 50-67, 2007. 
[4] Q. Fang, J. Gao and L.J. Guibas, “Locating and Bypassing Routing Holes in Sensor Networks,” In Proc. of 
IEEE INFOCOM, vol. 4, pp. 2458-2468, 2004. 
[5] C.-Y. Chang, K.-P. Shih, S.-C. Lee, and S.-W. Chang, “RGP: Active Route Guiding Protocol for Wireless 
Sensor Networks with Obstacles,” In Proc. of IEEE MASS, pp. 367-376, 2006. 
[6] W. Jia, T. Wang, G. Wang, and M. Guo, “Hole Avoiding in Advance Routing in Wireless Sensor 
Networks,” In Proc. of IEEE WCNC, pp. 3519-3523, 2007. 
[7] F. Yu, Y. Choi, S. Park, E. Lee, Y. Tian, and S.-H. Kim, “An Edge Nodes Energy Efficient Hole Modeling 
in Wireless Sensor Networks,” In Proc. of IEEE GLOBECOM, pp. 4724-4728, 2007. 
[8] F. Yu, S. Park, Y. Tian, M. Jin and S.-H. Kim, “Efficient Hole Detour Scheme for Geographic Routing in 
Wireless Sensor Networks,” In Proc. of IEEE VTC, pp. 153-157, 2008. 
[9] C.-Y. Chang, W.-C. Ju, C.-T. Chang and Y.-C. Chen, “WRGP: Weight-Aware Route Guiding Protocol for 
Wireless Sensor Networks with Obstacles,” In Proc. of IEEE ICC, pp. 3302-3306, 2008. 
[10] M. Aissani, A. Mellouk, N. Badache, and B. Saidani, “Oriented Void Avoidance Scheme for Real-Time 
Routing Protocols in Wireless Sensor Networks,” In Proc. of IEEE GLOBECOM, pp. 1-5, 2008. 
[11] J. You, D. Lieckfeldt, F. Reichenbach, and D. Timmermann, “Context-Aware Geographic Routing for 
Sensor Networks with Routing Holes,” In Proc. of IEEE WCNC, pp. 1-6, 2009. 
[12] B. Karp and H. T. Kung, “GPSR: Greedy Perimeter Stateless Routing for Wireless Networks,” In Proc. of 
the 6th Annual International Conference on Mobile Computing and Networking, pp. 243-254, 2000. 
[13] W. R. Heinzelman, A. Chandrakasan, and H. Balakrishnan, “Energy-Efficient Communication Protocol for 
Wireless Microsensor Networks,” In Proc. of the 33rd Hawaii International Conference on System Sciences, 
pp. 3005-3014, 2000. 
 2
二、與會心得 
對於能參加這次的國際研討會，在此特別感謝國科會所提供的經費補助。藉由這次研討
會的舉辦，各國學者間使用英語做一個分享與交流，各國學生的英文能力透過這樣一個場合
也能略窺一二。在此次會議中，除了遇見多位同樣來自台灣的學者，也能與他國的學者專家
學習請教，藉此交流無線感測網路方面前瞻的研究，和目前通訊技術領域的發展現況及未來
趨勢與潛力。 
此會議為通訊領域的研究學者、產業界及相關研究人員提供一個國際性的交流平台，對
我們未來的研究方向與內容都有所啟發。此外，眼見他國學者致力於學術與應用的研究，期
望我們也能獲得更具前瞻性與應用價值的研究成果，以對我國的科技發展有所助益。 
 
三、攜回資料名稱及內容 
會議論文集一本及光碟一片。 
 
 
 
 
 
2011 3rd International Conference on Computer Engineering and Applications (ICCEA 2011) 
 
- 2 - 
5. Send your final papers (both .doc and .pdf format), filled registration form (.doc format), and the 
scanned payment (in jpg format) to us at iccea@vip.163.com. (Before May 20, 2011) 
*If you pay by on-line Credit Card Payment, please fill your confirmation number in the registration 
form after paying. 
*If you pay by bank transfer, please scan the payment slip as the payment proof for checking. 
If the above requirements are met by the set deadlines, the paper will be included in the ICCEA 
2011 conference proceeding. The ICCEA 2011 proceedings will be indexed by the Ei Compendex, 
ISI Proceeding and other indexing services. 
Maybe some unforeseeable events could prevent a few authors not to attend the event to present 
their papers, so if you and your co-author(s) could not attend ICCEA 2011 to present your paper for 
some reasons, please inform us. And we will send you, the official receipt of registration fee, 
proceedings, and/or other materials after ICCEA 2011 free of charge.  
Please strictly adhere to the format specified in the conference template while preparing your final 
paper. If you have any problem in preparing the final paper, please feel free to contact us via 
iccea@vip.163.com. For the most updated information on the conference, please check the 
conference website at http://www.iccea.org. The Conference Program will be available at the 
website in the late May, 2011. 
Finally, we would like to further extend our congratulations to you and we are looking forward to 
meeting you in Haikou, China! 
Yours sincerely, 
 
ICCEA 2011 Organizing Committees 
http://www.iccea.org 
Haikou, China 
centers of target grids. These target grids contain at least k 
destinations. Since the formation of the Steiner tree is in a 
centralized way, the energy consumption of nodes will 
increase with an increasing number of destinations. 
E. Lee et al. [3] proposed a general sink location service 
scheme that can support of unicast, anycast, manycast, and 
multicast communication modes. In this scheme, each sensor 
node knows its height from a predetermined base node. 
Every sink constructs a circle path (sensor nodes with the 
same height value) to store its location information by 
sending a SLA (sink location announcement) message from 
the highest height in order. For manycast, a source sends a 
SLQ (sink location query) message to k circle paths (from the 
highest height to k-th height) to obtain the location 
information of k sinks. The main drawback of the scheme is 
that the average distance between the source and one of k 
found sinks may be large, thus increasing the energy 
consumption for data routing. 
III. ENERGY-EFFICIENT VORONOI-BASED MANYCAST 
In this section, we describe the network model, including 
the assumptions of the sensor network and the formation of 
Voronoi diagram. We present an efficient mechanism to 
select location servers for sink location management. In 
order to find k sinks near the source and avoid a large 
number of query messages, we propose an efficient query 
forwarding strategy. Additionally, a sink location update 
mechanism is given. 
A. Network Model 
The proposed EEVM scheme makes the following 
assumptions about the sensor network: 
• Sensor nodes are uniformly deployed in the sensor 
network and remain stationary at their initial 
locations. 
• There are n (mobile) sinks in the sensor network 
equipped with higher capabilities on wireless 
transmission range. 
• All sinks and sensor nodes are aware of their 
locations using GPS devices or existing localization 
techniques [5, 6]. 
• No three sinks are collinear and no four sinks fall on 
the same circle (in reality, it can be easily ensured 
via small random perturbations to node locations). 
Let S be a set of n distinct sinks in the network. We use 
the completely cooperative (CC) algrorithm [7] to compute 
the Voronoi diagram of S, thereby dividing the network area 
into n Voronoi regions (one for each sink). Each Voronoi 
region is a convex polygon. For example, in Figure 1, six 
sinks are deployed and the network area is divided into six 
Voronoi regions (A, B, C, D, E and F). The black dots u, v, x, 
y and z are the Voronoi vertices of region D. We assume that 
each sensor node is aware of which Voronoi region it 
belongs to and the locations of vertices in its Voronoi region 
by receiving notification messages from sinks after the 
Voronoi diagram is formed. For convenience, we say a 
vertex also indicates a sensor node closest to that vertex for 
easily explaining our scheme. 
 
 
Figure 1.  An example of the Voronoi diagram of six sinks. 
 
 
Figure 2.  An example of location server selection. 
B. Location Server Selection 
To reduce the sink location update cost incurred by sink 
mobility, each sink selects a sensor node closest to itself as 
the sink agent (SA) and the location of the sink agent is used 
to represent the location of its corresponding sink. In each 
Voronoi region, a vertex closest to the network center is 
selected as the location server (LS). The LS is responsible 
for storing the sink location information including sink’s ID, 
sink’s location, and sink’s Voronoi region. Each sink agent 
sends a location registration packet to the location sever in 
its Voronoi regions. Moreover, in a Voronoi region, each 
sensor node definitely knows which vertex is the LS of 
sinks. Figure 2 shows an example of location server 
selection. Vertex u is the LS of regions A, C and D, vertex x 
is the LS of regions B and E, and the LS of region F is 
vertex z. Note that a vertex may be the LS of different 
regions simultaneously (e.g., vertex u in Figure 2). This will 
be benefit for reducing the delay time of finding k sinks and 
saving unnecessary query packets. 
 
C. The proposed Manycast 
When a sensor node needs to find k sinks (k ≧ 1) in the 
network, it becomes a source and then sends a location 
query (LQuery) packet to the LS in its Voronoi region. An 
LQuery packet includes the following fields: 
• SID: the ID of source. 
• SLoc: the location of source. 
• K: the number of sinks needed to be searched. 
• R: the current query region of an LQuery packet. 
  
Figure 5.  Query model (source near the network boudary). 
 
Figure 6.  The query paths of a source near the network boudary. 
Next, the query model with the source locating near the 
network boundary is introduced. Like that of the query 
model mentioned before, the query path is also based on 
common vertices and edges of regions, but a difference 
appears when location query packets encounter the network 
boundary. As Figure 5 shows, two query packets are sent 
from vertices a to b and a to d. After receiving the query 
packet, vertex b found that the next vertex h is located at the 
network boundary. In such situation, vertex h will be 
ignored. Similarly, vertex i is also ignored when vertex d 
receives the query packet. For querying more sink locations, 
the query packet is sent to an unvisited neighboring vertex 
(i.e., b → c and d → e), and the query region changed to an 
unvisited region. These two query packets will arrive at 
vertex f, and then to vertex g for outer regions. 
Figure 6 shows an example in which source is located 
near the network boundary. The source first transmits an 
LQuery packet to LS a. After receiving the LQuery packet, 
LS a generates two query packets (LQuery1 and LQuery2) 
which are forwarded to LS b and vertex d, respectively. 
Since vertex h is a boundary vertex, the next query node is 
changed to unvisited vertex c (the query region is also 
changed). Similarly, vertex d selects unvisited vertex e as 
the next query node. Overall query paths are shown in 
Figure 6. The process of collecting the location information 
of k sink is the same as that in Figure 4. 
 
 
(a) 
 
u
v
x
y
z
2RS2 S1
Location registration
Location deletion
Sink
Location server
Vertex
New sink agent
Sink moving path
Old sink agent
 
(b) 
Figure 7.  Two examples of sink location update. 
D. Sink Location Update 
When a sink moves, it may need to re-select a new sink 
agent (SA) according to the distance between its current SA 
and itself. We use Figure 7 as an example to illustrate the 
update mechanism. In Figure 7(a), the LS of sinks S1 and 
S2 is vertex u. When a sink moves a distance, there are the 
following two cases. 
• If the distance between the sink and its SA is less 
than or equal to two times of the transmission range 
of a node, no matter the sink is in the same regions 
or not, the SA will not be changed (e.g., sinks S1 and 
S2 in Figure7(a)). 
• If the distance between the sink and its SA is large 
than two times of the transmission range of a node, a 
sensor node closest to the sink will be selected as the 
new SA. If the sink is still in the same region (e.g., 
sink S1 in Figure 7(b)), its LS will not be changed 
and the new SA sends a location registration packet 
to the LS (e.g., vertex u in Figure 7(b)) for updating 
the sink location information. However, if the sink 
moves out of the region (e.g., sink S2 in Figure 7(b)), 
besides sending a location registration packet to the 
new LS (e.g., vertex z in Figure 7(b)), the new SA 
forwards a location deletion packet to the old SA 
which will relay this packet to the old LS (e.g., 
vertex u in Figure 7(b)) for deleting the old sink 
location information. 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/07/19
國科會補助計畫
計畫名稱: 在無線感測網路中動態事件資料匯集及避洞繞徑機制
計畫主持人: 黃秀芬
計畫編號: 99-2221-E-035-050- 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計畫研究成果之論文榮獲 2010 年行動計算研討會(Mobile Computing 
Workshop)最佳論文獎。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
