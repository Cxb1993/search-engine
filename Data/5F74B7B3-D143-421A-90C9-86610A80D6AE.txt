I行政院國家科學委員會補助專題研究計畫成果報告
以向量量化編碼法實現影像版權保護之研究
計畫編號：NSC 97－2221－E－153－001
執行期限：97年08月01日至98年07月31日
主 持 人：楊政興副教授(chyang@mail.npue.edu.tw) 屏東教育大學資訊科學研究所
計畫參與人員：黃正達、林義程、蔡孟璇、曾世偉等研究生屏東教育大學資訊科學研究所
摘要
在本研究，我們提出二個植基於向量
量化(Vector Quantization; VQ)編碼法來產
生非嵌入式浮水印的影像版權保護技術。
我們的方法利用編碼簿，將影像中的區塊
與浮水印位元產生關連，並輸出表示關連
的 key stream，藉由此 key stream 來證明
影像與浮水印的關連性，達成宣告版權的
目的。我們的方法可以彈性調整每個區塊
對應浮水印的位元數。與學者 Lin 等所提
出的非嵌入式浮水印方法相比較，我們的
方法只需要一本編碼簿，而他們的方法需
要七本，再者我們的方法不會有某些區塊
無法與浮水印產生關連的缺點。最後，我
們提出強健型浮水印和脆弱型浮水印兩種
變型，增加我們浮水印方法在應用上的彈
性。
關鍵詞：浮水印; 資訊隱藏; 向量量化; 版
權保護
In the research, we propose a non-
embedded watermarking scheme, which is
based on vector quantization (VQ), to
protect the image copyright. Our approach
applies a codebook to generate a relationship
between image blocks and watermark bits,
then the relationship is outputted as the key
stream. With the key stream, the relation
between the image and the watermark is
confirmed and the copyright of the image is
declared. In our method, the number of bits
related to a block is adaptive. Compared
with Lin et al.’sapproach, our approach
needs only one codebook; however, their
approach needs seven codebooks. Moreover,
each block can be connected with watermark
bits in our approach; however, some blocks
can not be connected with watermark bits in
their method. Finally, we propose two
extensions: robust watermarking and fragile
watermarking, which increase the flexible
applications of our methods.
Keywords: Watermarking; Information
Hiding; Vector Quantization; Copyright
Protection
2元的浮水印，則輸出最先符合的編碼簿之
標號作為該區塊的 key 值；若七本編碼簿
都不符合，則輸出(111)2，代表此區塊不
與浮水印產生關連。持續上述動作直到所
有區塊處理完成。圖 1 為產生 key stream
的流程圖。
圖 1 學者 Lin[5]等的非嵌入式浮水印方法
產生 key stream 之流程圖
假設每個區塊將與浮水印中的 t 個位
元產生關連，則其產生 key stream 的詳細
步驟如下：
Step 1: 針對目前正在處理的區塊，到編
碼簿 0C 中尋找最接近的編碼字，
假設此編碼字的索引值為 Index，
利用公式 (1)算出 Secret 值，該
Secret 值定義如下:
Secret = Index mod 2t (1)
Step 2: 如果Secret值與t位元的浮水印之數
值相符，則輸出此編碼簿的標
號，並結束此區塊的處理，否則
繼續執行步驟3。
Step 3: 對下一本編碼簿執行步驟 1 和步驟
2，並且重複直到七本編碼簿都被
執行過。如果所有的編碼簿所產
生的 Secret 值，都與 t 位元的浮
水印不相符，則輸出(111)2表示此
區塊沒有對應的浮水印。
Step 4: 對所有未處理的區塊，重複執行
步驟 1~步驟 3，直至處理完影像
的所有區塊。
舉例來說，表 1 為區塊 H1、H2 和
H3，分別從七本編碼簿中找出與其最接
近之編碼字的索引值。例如：在編碼簿
0C 中，區塊 1B 找到的索引值為 100；在
編碼簿 1C 中，區塊 1B 找到的索引值為
102。假設浮水印為(000111)2，且 t = 2，
則將浮水印位元兩兩分為一組：00 01
11，用十進位來表示分別為 0, 1, 3，利用
公式(1)算出表 1 的 Secret 值，結果顯示
於表 2。例如：區塊 H1 在編碼簿 0C 中產
生的 Secret 值為 0，在編碼簿 1C 產生的
Secret 值為 2。接著，依序將浮水印所代
表的十進位數值，與區塊相連結來產生
key stream。第一個浮水印的十進位數值
為 0，由表 2 知，區塊 H1所產生的 Secret
中，最先符合 Secret 為 0 的編碼簿為
0C ，所以輸出 0C 的標號(000)2，當作是區
塊 H1 的 key 值。接著，下一個浮水印數
值為 1，因為表 2 中區塊 H2 所產生的
Secret 值都不是 1，所以區塊 H2沒有與浮
水印產生關連，因此輸出標號(111)2 的
key 值，且浮水印數值 1 必須在下一個區
塊中繼續處理。因為區塊 H3 所產生的
Secret 中，最先符合 Secret 為 1 的編碼簿
為 2C ，所以區塊 H3 所產生的 key 值為
(010)2。依此方式，對剩下的浮水印數值
和區塊作處理，直到浮水印或整張影像的
區塊處理完畢。上述做法可以得知，每個
區塊會產生 3 位元的 key 值，但是有些區
塊無法與浮水印產生關連，例如表 1 和表
4表 3 區塊 1H 、 2H 和 3H ，利用我們的 VQ
編碼法進行編碼
Codewords
Blocks 0c 1c 2c 3c
1H 96 98 85 64
2H 116 118 79 120
3H 74 91 53 67
圖 3 為我們的方法一的版權驗證流程
圖。版權驗證的過程，利用原先產生的
key stream，一一取出 key 值 ik ，然後把
ik 當作編碼簿的索引值。另外，假設與 ik
產生關連的區塊 iH ，其最接近的 2
t 個編
碼字依序為 0c , 1c , … , 2 1tc ，則判斷 ik 是
屬於 2t 個編碼字中的哪一個，假設為
jc ，則輸出 t 位元的浮水印 iW j 。
圖 3 我們的方法一的版權驗證流程圖
1. 在我們的第二個方法中，利用一本編
碼簿去產生 key stream。為了增加安
全度，我們使用隨機亂數在我們的第
二個方法中。圖 4 所示我們的方法二
之 key stream 產生方式，每一個區塊
iH ，加上浮水印 iW 和一個隨機亂數
ri來產生我們的 key value ki，每一個
key value 產生方式如下：
.2mod tiiii rWIk  (2)
表 4 為產生 key stream 的例子，其中
t = 2 和 W = 10110110...。例如，區塊 H1
找出最接近的編碼字為(10111010)2，隨機
亂數 r1 是(01)2。Key value k1 計算方式如
下：
   
.01
2mod011010111010
2mod
2
2
222
1111


 trWIk
圖 5 所示為方法二的驗證程序，浮水
印 W 萃取時需要區塊 H、key value k 和
隨機亂數 r。萃取公式如下：
.2mod tiiii rIkW  (3)
續接前述例子，對區塊 H1 而言，I1、k1
和 r1 分別是(10111010)2、(01)2 和(01)2。
可以計算出 W1 是(01)2。在驗證程序中，
可以進一步對萃取出的浮水印進行驗證。
W atermark
Key stream
generator
Host
image
Random number
Key stream
ir
iH
iW
ik
圖 4 方法二產生 key value 流程圖
Key stream
Watermark
extractor
Host
image
Random number
Extracted
watermark
Watermark
Verify
ir
ik
iH' iW'
圖 5 方法二的驗證流程圖
6肆、分析比較
在此節中，我們針對方法一與 Lin 等
的方法分析比較，有關方法二的分析比
較，可以參考我們發表在 2008 ISDA 的
論文。
(一) 方法比較
我們的方法一，相較於學者 Lin 等的
方法[5]，有下面幾個優點：
A. 編碼簿大小與數量
我們的方法只需要一本編碼簿，而學
者 Lin 等的方法卻需要七本編碼簿。而
且，我們的方法甚至可以使用大小為 4 的
編碼簿(當 t = 2 時)。所以我們所需要的編
碼簿空間小很多。
B. key stream 的長度
我們的方法所產生的 key 值，其位元
數可視 t 值的大小調整，當 t = 1, 2, 3
時，key 值的位元數分別為 1, 2, 3。而學
者 Lin 等的方法，其 key 值的長度固定為
3。就一般浮水印的大小來說，t = 1 或 2
是非常足夠的。所以我們的方法可以產生
較短的 key stream。以 t = 2 為例，我們所
使用的掩護影像 Lena，其為大小 512 ×
512 的灰階影像，當 Lena 被切成區塊大
小為 4 × 4 不重疊的區塊時，可以產生
(512 × 512 / 4 × 4) = 16384 個影像區塊，
一個 block 產生 2 位元的 key，則 key
stream 的總長度為 32768 位元。
C. 浮水印與區塊間的關連性
在我們的方法中，每個區塊都可以和
t 位元的浮水印產生關連，不會有失敗的
情形。但是在學者 Lin 等的方法中，由於
需 mod 2t 後的餘數與欲關連的 t 位元浮水
印相等時，才能產生關連，所以在機率均
等之下，若 t = 1，則任一本編碼簿失敗
的機率為二分之一，所以七本編碼簿都失
敗的機率為:
7
1
2


= 0.00731，換言之有
0.7%的區塊無法產生關連；同理，在 t =
2 的情況下，找到的索引值須取 mod 4 的
餘數，所以七本編碼簿都失敗的機率
為:
7
3
4


= 0.13348，也就是說有 13%的區
塊是無法產生關連；在 t = 3 的情況下，
找到的索引值要取 mod 8 的餘數，所以失
敗機率為
7
7
8


= 0.39269，表示有 39%的
區塊無法產生關連。
D. 強弱浮水印的彈性
我們的非嵌入式浮水印技術，衍生出
強健型和脆弱型兩種策略，但是學者 Lin
等的方法沒有此種彈性。
(二) 實驗分析
我們用 NC 值來判斷取出浮水印之強
韌性，其值介於 0 和 1 之間。假設原始的
浮水印為 W，取出的浮水印為W ，NC 值
的定義為：
   
 
=1 =1
2
1 1
, ,
NC
W ,
M M
i j
M M
i j
W i j W i j
i j
 



(4)
其中M代表浮水印的寬度與高度。
我們所使用的掩護影像 Lena 和
Baboon，其為大小 512 × 512 的灰階影
像，其中 Lena 顯示在圖 7。圖 8 顯示浮
水印 NPUE_CS，其為大小 64 × 64 的二
元影像。在我們方法中所使用的編碼簿為
8圖 11 強健型方法所萃取的浮水印
(NC = 0.921143)
表 7 和表 8 顯示受到壓縮攻擊和雜訊
攻擊的 NC 值。其中壓縮攻擊採用 Photo
Impact 的 JPEG 壓縮功能，分別對 Lena
和 Baboon 進行不同的壓縮比處理；雜訊
攻擊利用 Photoshop CS2 之功能，使用一
致分佈和 10%雜訊作測試。由表 7 和表 8
的結果顯示，我們的脆弱型浮水印策略，
其對抗壓縮攻擊和雜訊攻擊的能力，與學
者 Lin 等之方法差不多，但是我們的強健
型浮水印策略則明顯具有較高的強韌性。
表 9 為三種方法在 Lena 上執行時間之比
較。
表 7 以 Lena 為掩護影像，經過壓縮攻擊
和雜訊攻擊後，所測得之 NC 值
方法
攻擊
方式
強健型
浮水印
脆弱型
浮水印
學者 Lin
等的方法
壓縮比
1:16.8
0.928955 0.789246 0.727661
壓縮比
1:25.6
0.908752 0.704956 0.692566
壓縮比
1:33.3
0.893860 0.673401 0.663208
雜訊
攻擊
0.906494 0.564331 0.581970
表 8 以 Baboon 為掩護影像，經過壓縮攻
擊和雜訊攻擊後，所測得之 NC 值
方法
攻擊
方式
強健型
浮水印
脆弱型
浮水印
學者 Lin
等的方法
壓縮比
1:10.7
0.915161 0.627197 0.727661
壓縮比
1:15.0
0.906189 0.583923 0.668091
壓縮比
1:18.4
0.897278 0.544922 0.625366
雜訊
攻擊
0.900208 0.501526 0.713562
表 9 以 Lena 為掩護影像，所測得之執行
時間
強健型
浮水印
脆弱型
浮水印
學者 Lin
等的方法
Time
(sec) 0.546 2.828 10.593
伍、結論
由於數位多媒體和網路科技的發展快
速，使得數位電子資料傳播快速，也因為
網路的傳輸過程中，缺乏私人的空間，使
得私人的數位影像被大量快速的使用，因
此數位影像的版權問題日漸嚴重。近年
來，在著作權法制定後，版權問題受到相
當的重視。本研究所提出的非嵌入式浮水
印技術可應用於數位產品(尤其是不可失
真數位產品)版權的認證及偵測產品是否
遭受更改。我們提出的方法與原先學者
Lin 等所提出的非嵌入式浮水印方法相比
較，我們的方法只需要一本編碼簿來證明
影像與浮水印的關連性，並且可以彈性調
整每個區塊對應浮水印的位元數達成宣告
版權的目的。
10
Watermarking Scheme on Digital
Images,” Fundamenta Informaticae, 
Vol. 92, No. 4, pp. 397-409,
September 2009. (SCI, EI)
(二)研討會論文：
1. Cheng-Hsing Yang, Cheng-Ta
Huang, and Shiuh-Jeng Wang,
“Reversible Steganography Based on
Side Match and Hit Pattern for VQ-
Compressed Images,” presented in 
The Fifth International Conference
on Information Assurance and
Security (IAS 2009), Xi’an, China,
August 18-20, 2009.
2. Cheng-Hsing Yang, Cheng-Ta
Huang, Shu-Chien Huang, and
Sheng-Chang Wu, “Multiple Bits 
Embedding Approach for the Hit-
pattern-based VQ Reversible
Steganography,” presented in The 
Fourth Joint Workshop on
Information Security (JWIS 2009),
Kaohsiung, Taiwan, August 6-7,
2009.
3. 楊 政 興 , 林 義 程 , 黃 正 達 ,
“Reversible VQ Data Hiding Based
on Side-Match Prediction,” in第十九
屆資訊安全會議 , 台灣科技大學 ,
June 3-5, 2009.
4. 楊政興, 蔡孟璇, 黃正達,“以棋盤式
預測法改善直方圖可逆資訊隱藏技
術,” in第十九屆資訊安全會議, 台
灣科技大學, June 3-5, 2009.
5. 曾世偉, 楊政興, “植基於互動式垃
圾語音電話偵測系統,” in2009數位
學習與生活研討會, 屏東教育大學,
May 25, 2009.
6. Wen-Ya Chiang, Shiuh-Jeng Wang,
Chi-Yao Weng, and Cheng-Hsing
Yang, “Robustness-set in
Watermarking Embedding Systems
Using Codebook Classifications,” 
presented in The 3rd International
Conference on Ubiquitous
Information Management and
Communication (ICUIMC 2009),
SKKU, Suwon, Korea, January 15-
16, 2009.
7. Cheng-Hsing Yang, Shu-Chien
Huang, Cheng-Ta Huang, and Shiuh-
Jeng Wang, “Non-embedded Image
Protection Approaches Based on
Vector Quantization,”presented in
IEEE, The Eighth International
Conference on Intelligent Systems
Design and Applications (ISDA
2008) held at Kaohsiung City,
Taiwan, pp. 620-625, November 26-
28, 2008.
8. Cheng-Hsing Yang, Yi-Cheng Lin,
Sheng-Chang Wu, Min-Hao Wu,
“Reversible Data Hiding Based on a
Sorted VQ Index Table,” presented
in Internal Computer Symposium
(ICS 2008) held at Taipei, Tamkang
University, pp. 456-461, November
13-15, 2008.
9. 楊政興, 蔡孟璇, 黃建銘, 吳敏豪,
“植基於交錯式預測法之可逆資訊
隱藏技術,” in TANET 2008台灣網
際網路研討會, 義守大學, pp. 127-
132, October 20-22, 2008.
2 Knowledge discovery and data mining, link analysis, Web mining -
Internet search, UCC management, online communities, automatic
classification, e-commerce, e-learning, recommendation,
personalization - Intelligent systems and techniques
 Multimedia content recognition, indexing, search - Human Computer
Interaction
 Database management system (flash-based database system), personal
information management, data integration and federation, security,
privacy
3. Foundational Technologies
 Distributed and parallel system architecture, service-oriented
architecture - Embedded systems
 Software engineering
此會議 ICUIMC 2009 於 1 月 15-16 日於韓國 Sungkyunkwan University
(成均館大學校)舉行，計有 94 篇論文在本次會議中發表，而 Security 的部
份約有 13 篇。此兩天的會議中，同一時段分為三個 Session，在三個會議
場同時舉行，每個 Section 會包含幾個不同領域的論文，因此，藉由參加
本次會議，可以涉略許多不同知識背景的議題。
2. 會議參加過程
此次會議，我們報告的論文題目為 “Robustness-set in Watermarking
Embedding Systems Using Codebook Classifications”，主要內容為提出一種
利用編碼簿來歸類的浮水印技術，利用選取和旋轉等技巧，來嵌入二元浮
水印，藉由參數的調整來增加浮水印的強韌度。我們的報告被安排在第一
天下午的議程。第一天上午的議程中，並沒有 security 方面的論文，主要
是無線網路架構相關論文和行動通訊相關議題。security 方面的議題全部集
4三、 建議
這次幸運獲得國科會的補助，出國發表論文，非常感謝。期間遇見某
位國內學者，完全自掏腰包出席會議，非常感佩他的進取與努力。若學術
機構能有更多管道，或多或少補助實際出國發表論文的學者，必定可以激
發更多年輕學者的參與。
四、其他(攜回資料項目)
ICUIMC 2009 會議論文集。
五、論文全文
另附 (PDF format)。
2
 

w
i
h
j
ijij yxwh
MSE
MSE
PSNR
1 1
2
2
10 )(
1
)
255
(log10 (1)
2.1.2 NC (Normalized Correlation)
This tool is used to determine the similarity of the original
and extracted watermarks. The value of NC is between 0 and 1. If
the value is 1, it means the two watermarks are same. Value of NC
closer to 1 shows the similarity between the two original and
extracted watermarks. On the other hands, more the value of NC
closer to 0, more dissimilarity in the two watermarks and it’s 
difficult to validate the ownership. The formula of NC is as
follows:


 w
i
h
j
ij
w
i
h
j
ijij
w
ww
NC
2
'
(2)
Where w and h are the width and height of the watermark,
wij is the ij
th pixel of the original watermark and wij’ is the ijth
pixel of the extracted watermark. However, some mistake may
occur in determining the value of NC. The mistakes are resulted
from the formula of NC. In some cases, when the watermark
value gets changed from 0 to 1, the numerator of NC formula
remains unchanged. Hence, it can not detect the changes of
watermark. In this paper, we highlight the defectiveness shown in
two case studies with example demonstrations below.
Case I: The evaluation of NC is correct.
Suppose we have original binary watermark as







0
0
0
0
1
0
0
0
0
1W ,
and after extracting watermark is







0
0
0
0
1
0
0
0
0
'1W . Using the
formula of NC, we get the value
of 1
1
1
)11(8)00(
)11(8)00(
22 
NC .It is accurate to
compute the computation for the value of NC.
Case II：The evaluation of NC is incorrect.
Assume we have original binary watermark
as







0
0
0
0
1
0
0
0
0
1W , and after extracting watermark
is







0
0
0
0
1
0
0
1
0
'2W . Using the formula of NC, we get the value
of 1
1
1
)11(8)00(
)11()10(7)00(
22 
NC . In this case
value of NC produces mistake and is not accurate to compute. The
tool of the NC is not accurate. Therefore, we used the tools of
TAF (Tamper Assessment Function) to replace NC to correctly
evaluate the watermark.
2.1.3 TAF (Tamper Assessment Function)
TAF is a standard to judge the similarity of the original
and extracted watermark. The value of TAF is from 0 to 1. If the
TAF is closer to 1, it means that the numbers of changed
watermark bits are more. The TAF formula is as follows:



wN
i
ii
w
ww
N
wwTAF
1
'' 1),( (3)
2.2 Related literature reviews
Wu and Chang [17] proposed a watermark embedding
technique based on vector quantization in 2005. The codebook
division is used to classify the watermark bit 0 and 1 for
embedding process. They emphasize that their scheme can sustain
against the attacks of image processing and JPEG compressing.
Their proposed methods are termed as two algorithms of
codebook division and data embedding algorithms.
The algorithm of codebook division
Step1：Let the initial codebook trained by LBG.
Step2：Use MSE to find the two closest codeword to be having the
same division. The MSE of two codeword CWx and CWy
is defined as follows：






1a
0i
1a
0j
2
yx2yx j))(i,CWj)(i,(CWa
1
)CW,MSE(CW (4)
Step3：Each division can have two codeword either 0 or 1.
The algorithm of data embedding
Step1：Divide cover-image into m blocks and get an index table
using VQ processing.
Step2：Use PRNG to choose the started index.
Step3：Take one watermark bit and search for the corresponding
division and codeword number.
Step4：Replace the corresponding number bit with the watermark
bit.
Step5：Renew the index values according the record items and
generate the watermarked image.
In Wu and Chang scheme [17], the watermark is
embedded into the VQ compressed image. In the embedding
process, they divide the cover image into many blocks and renew
the index according to the size and classification of codebook. The
watermark is not only embedded in the VQ compressed image but
also in the index table. Wu and Chang emphasized that their
scheme can extract the identifiable watermark even after the stego
image suffered the attacks of frequent image processing and JPEG
compression.
3. Our Scheme
The key-concept of watermark technique is to keep high
quality of image and enhancing robustness of the technique. The
embedding watermark should be imperceptible. The extracted
watermark should be identifiable even after various images
processing attacks. In order to achieve the demand of quality and
robustness, we proposed a flexible and adaptable watermark
technique by combining the concepts of bit rotation and codebook
for gray-level images.
In our method, the binary watermark is embedded into the
gray-level images. Firstly, we select the pixel bits used to embed
the watermark bits from the cover image. According to the size of
4Table 1 the codebook table
Assume that the index pair (IBXm, IBYm) is found from
the codebook as the coordinate in the plane. The coordinate plane
is pre-divided into two blocks, which is representing the
watermark bit 0 or 1, respectively. It is shown in Fig. 3.
Fig 3. The coordinate plane division
Assume that we want to embed the mth watermark bit Wm.
We just take out the e-pixel pair (BXm, BYm) and find the index
pair (IBXm, IBYm) from the codebook. According to the position
of coordinate (IBXm, IBYm), we can get the respective watermark
bit Wp on the plane. If Wm = Wp, the index pair (IBXm, IBYm) is
unchanged. In other words, if Wn Wp , the index pair (IBXm ,
IBYm) is changed to (IBXm , IBY’m), which shift IBY’m to
corresponding position of the IBYm on the coordinate plane. When
the user wants to extract the watermark, they just need the
information of estart and constants b, c1, c2 to find the index pair of
(SBXm , SBYm). We can extract the watermark bit SWp successfully
by using the index pair (ISBXm , ISBYm) and the coordinate plane.
Our proposed two algorithms for data of watermark in the
embedding and extracting processes are depicted in the following
Algorithm 1 and Algorithm 2.
Algorithm 1: (embedding process)
Input：Gray-level image GI, binary watermark image W, seed,
constants a, b, c1 and c2.
Output：Stego-image EGI.
Step1: Take out the least a bits of each pixel of GI to form SGI
containing (M×M×a) bits.
Step2: Divide SGI into four blocks. (SEup-left , SEup-right , SEdown-left ,
SEdown-right)
Step3: Select Sup-left-i ,Sup-right-i ,Sdown-left-i ,Sdown-right-i to form BXm
and select Sup-left-j ,Sup-right-j ,Sdown-left-j ,Sdown-right-j to form
BYm based on the pre-define parameters ( b, c1, c2, estart).
Step4: Classify the codebook CB and divide the coordinate plane
into two blocks representing the watermark bit 0 and 1.
Step5: Take out each e-pixel pair (BXm, BYm) one by one to find
the index pair (IBXm, IBYm) on the codebook CB. Find the
coordinate (IBXm, IBYm) and position of Wp on the plane.
If the original watermark bit Wn is equal to Wp, then
(IBXm, IBYm) is unchanged. If the Wn is opposite to Wp,
change the IBYm to the corresponding position where Wn
is equal to Wp.
Step6: Take out the new code words of index IBYm or IBYm’and
form the new block BYm’.
Step7: Use BYm’to generateSGI’.
Step8: Use SGI’to convert the cover image GI into the stego
image EGI.
Algorithm 2: (extracting process)
Input：Stego image EGI, seed, and parameters of a, b, c1 and c2.
Output: binary watermark image W.
Step1: Take out the least ‘a’bits of each
pixel of EGI to form SEGI.
Step2: Divide the SEGI into four blocks, where contains SEup-left ,
SEup-right , SEdown-left , and SEdown-right.
Step3：Use the constants b, c1, estart to select SEup-left-i , SEup-right-i ,
SEdown-left-i , SEdown-right-i to form SBXm. Use the constants b,
c2, estart to select SEup-left-j , Eup-right-j , SEdown-left-j ,
SEdown-right-j to form SBYm.
Step4：Take out each e-pixel pair (SBXm, SBYm) one by one to
find the index pair of (ISBXm , ISBYm) from the codebook
CB.
Step5：Judge the index pair (ISBXm, ISBYm) to find the position of
SWp on the coordinate plane. The SWp is the extracted
watermark.
Let us take an example to demonstrate the data embedding
process in Algorithm 1 as follows.
1. GI：A cover image with size of 512512 pixels.
2. Set the parameters a= 2, b = 4, c1 = 1 and c2 = 3.
Step1: Take out the least 2 bits of each pixel of the GI to form
SGI which contains 512512 bits.
Step2: Divide the SGI into four blocks SEup-left , SEup-right ,
SEdown-left , SEdown-right (see Fig. 4).
Step3: i=bm+c1=4m+1. select SEup-left-i , SEup-right-i , SEdown-left-i ,
SEdown-right-i to form BXm；j=bm+c2=4m+1. select SEup-left-j ,
Eup-right-j , SEdown-left-j , SEdown-right-j to form BYm (see Fig.
5).
Case I : m=0, assume that estart=0
1. BX0=( Sup-left-1 ,Sup-right-1 ,Sdown-left-1 ,Sdown-right-1)=(00,11,1
1,01).
2. BY0=( Sup-left-3 ,Sup-right-3 ,Sdown-left-3 ,Sdown-right-3)=(11,10,11,
01).
Case II: m=1, assume that estart=1
1. BX1=(Sdown-right-5 ,Sup-left-5 ,Sup-right-5 ,Sdown-left-5)=(00,10,00,1
1).
2. BY1=( Sdown-right-7 ,Sup-left-7 ,Sup-right-7 ,Sdown-left-7)=(10,01,11,
00) .
Step4: Use the classified codebook (see Fig. 3) to find the
64.2 TYPE-III, TYPE-IV
In TYPE-III and TYPE-IV, a=2, b=4, c1=1 and c2=3, we
take the gray-level images Baboon, F16, and Pepper as the cover
image with size equal to 512512 pixels. The ICCL image
(6464 bits) is the binary watermark image. In the experimental
result, the extracted watermark image is totally the same as the
original watermark image. In TYPE-III, we take out the 5-th,6-th
bits from right to left of each pixel of GI to form the SGI. In
TYPE-IV, we take out the 6-th,7-th bits from right to left of each
pixel of GI to form the SGI. The PSNR value of TYPE-III and
TYPE-IV are shown in Table 4 and Table 5, respectively.
Table 4
TYPE-III ( a=2, b=4, c1=1, c2=3)
( = bit5 & bit6 )
watermark ICCL image(6464 bits)
cover image PSNR
Baboon 39.43
F16 38.28
Peppers 39.04
4.3 Attack Analysis
Our scheme can sustain against the image attacks, such as
cropping and filling the pixels with value 0, and JPEG
compression. In this section, we analyzed our scheme with all of
the attacks. Fig. 8 shows the result of cropping a quarter of block
and filling with value 0, the attack was done on image of TYPE-I.
Fig. 9, 10 are the result of filling half of the block with value 0
and the attack was done on TYPE-II. Half and quarter of block
cropped and filled with the original image of TYPE-III is shown
in Fig. 11. Fig. 12 is the extracted result after the stego image is
suffered the attack of JPEG compression.
Fig. 8 A quarter of block cropped and filled with pixel value 0
of TYPE-I
Fig 9. 1/2 block cropped and filled with pixel value 0 of TYPE-II
Table 2
TYPE-I ( a=1, b=2, c1=1, c2=2)
watermark ICCL image(128128 bits)
cover image PSNR
Baboon 63.16
F16 63.24
Peppers 63.09
Table 3
TYPE-II ( a=2, b=4, c1=1, c2=3)
watermark ICCL image(128128 bits)
cover image PSNR
Baboon 63.18
F16 63.27
Peppers 63.16
Table 5
TYPE-IV ( a=2, b=4, c1=1, c2=3)
( = bit6 & bit7 )
watermark ICCL image(6464 bits)
cover image PSNR
Baboon 32.86
F16 34.23
Peppers 32.83
8Table. 6 The comparison of our scheme and Wu and Chang scheme
in cropped, filled with pixel value 0 attacks
Table. 7 The comparison of our scheme and Wu and Chang scheme
in filled with the original image and JPEG compression
6. Conclusions
In this paper, we proposed a new robustness watermark
technique based on pixel bits selected, rotated, decentralized,
codebook classified and coordinate plane divided. By setting up
the parameters we can achieve more robustness for watermark.
From experimental results, TYPE-I and TYPE-II images show
high image quality and can sustain against the attacks of cropping
and filling with pixel value 0. Our method can effectively resist
the filled with the original image and JPEG compression attacks
through setting different parameters. According to the analysis
and some discussion, our scheme is therefore full of flexibility
and adaptability.
Acknowledgements: This work was supported in part by the
National Science Council of the Republic of China under the
Grant NSC 95-2221-E-015-002-MY2, NSC 97-2221-E-153-001,
NSC 97-2221-E-015-001, the TWISC@NCKU, and NSC
97-2219-E-006 -003.
REFERENCES
[1] S. Agreste and G. Andaloro, “A new approach to 
pre-processing digital image for wavelet-based watermark,” 
Journal of Computational and Applied Mathematics, In
Press, Corrected Proof, Available online 5 November 2007.
[2] S. Agreste, G. Andaloro, D. Prestipino and L. Puccio, “An
image adaptive, wavelet-based watermarking of digital
images,” Journal of Computational and Applied
Mathematics, Vol. 210, Issues 1-2, pp.13-21, 2007.
[3] M. Barni, F. Bartolini, and A. Piva, “Improved 
wavelet-based watermarking through pixel-wise masking,” 
IEEE Transactions on Image Processing 10, pp.783–791,
2001.
[4] W. Bender, D. Gruhl, and N. Morimoto, “Techniques for 
data hiding,” IBM Systems J. 35, pp.313-336, 1996.
[5] C.C. Chang and P.Y. Lin, “Adaptive watermark mechanism
for rightful ownership protection,” Journal of Systems and
Software, In Press, Corrected Proof, Available online 28
August 2007.
[6] N. Chen and J. Zhu, “Multipurpose speech watermarking 
based on multistage vector quantization of linear prediction
coeficients,” The Journal of China Universities of Posts and
Telecommunications, Vol. 14, Issue 4, pp. 64-69, 2007.
[7] I.J. Cox, J. Kilian, F.T. Leighton, and T. Shamoon, “Secure 
spread spectrum watermarking for multimedia,” IEEE 
Transactions on Image Processing 6, pp. 1673–1687, 1997.
[8] Y.G. Fu and R.M. Shen, “Color image watermarking scheme
based on linear discriminant analysis,” Computer Standards
& Interfaces, Vol. 30, Issue 3, pp. 115-120, 2008.
[9] M.S. Hwang, C.C. Chang, and K.F. Hwang, “A 
watermarking technique based on one-way hash functions,” 
IEEE Transactions on Consumer Electronics, Vol. 45, No.2,
pp. 286-294, 1999.
[10] C.T. Kuo and S.C. Cheng, “Fusion of color edge detection 
and color quantization for color image watermarking using
principal axes analysis,” Pattern Recognition, Vol. 40, Issue
12, pp. 3691-3704, 2007.
[11] Y.S. Kim, O.H. Kwon, and R.H. Park, “Wavelet based 
watermarking method for digital images using the human
visual system,” Electronics Leters 35, pp.466–468, 1999.
[12] P.L. Lin, “Robust transparent image watermarking system
with spatial mechanisms,” Journal of Systems and
Software, Vol. 50, Issue 2, pp. 107-116, 2000.
[13] L.D. Li and B.L. Guo, “Localized image watermarking in
spatial domain resistant to geometric atacks,” 
AEU –International Journal of Electronics and
Communications, In Press, Corrected Proof, Available
online 20 December 2007.
[14] W. Lu, H.T. Lu, and F.L. Chung, “Chaos-based spread
spectrum robust watermarking in DWT domain,” in 
Proceedings of the 4th International Conference on Machine
Learning and Cybernetics, Vol. 9, pp. 5308-5313, 2005.
[15] T.V. Nguyen and J.C. Patra, “A simple ICA-based digital
image watermarking scheme,” Digital Signal Processing, In
Press, Corrected Proof, Available online 16 October 2007.
[16] F.Y. Shih and S.Y.T. Wu, “Combinational image
Water
mark
Stego
image
1/4
cropped
(filled
with 0)
1/2
cropped
(filled
with 0)
Our scheme 128128
bits
Baboon NC=0.758
NC
=0.516
Wu and
Chang
scheme[17]
6464
bits
Lena NC=0.749
NC
=0.497
Water
mark
Stego
image
1/4
cropped
1/2
cropped
Our scheme 128128
bits
Baboon NC=1 NC=1
Wu and
Chang
scheme[17]
6464
bits
Lena NC=0.749
NC
=0.497
filled with original image
waterm
ark
Steg
o
imag
e
1/4 1/2
Our
scheme
6464
bits
Babo
on
NC
=0.900
NC
=0.788
Wu and
Chang
scheme[1
7]
6464
bits Lena
NC
=0.895
NC
=0.785
JPEG attack
waterm
ark
Steg
o
imag
e
Ratio
=10.2
Ratio
=12
Ratio
=14.1
Our
scheme
6464
bits F16
NC
=0.987
NC
=0.981
NC
=0.98
0
Wu and
Chang
scheme[1
7]
6464
bits Lena
NC
=0.949
NC
=0.910
NC
=0.87
6
