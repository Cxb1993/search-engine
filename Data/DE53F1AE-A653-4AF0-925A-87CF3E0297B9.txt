  I
目錄 
壹、前言……………………………………………………………………….  1
貳、研究成果………………………………………………………………..…  2
  
附件一  會議論文：An Expandable Petri Net Framework for Method Behavior 
Evaluation of Reconfigured Equipment 
附件二  會議論文：A Pareto-Optimal Fitting Scheme to Identify Cascaded 
Distributions 
附件三  會議論文：基於泛型派區網路之工程鏈階段評估機制 
附件四  會議論文：A Reconfigurable Petri Nets Based Simulation System  
附件五  會議論文：Improving Software System Visualization using Genetic 
Algorithm 
  2
在實現上，此工程鏈效能評估方法，可處理來自供應商端的歷史交易型在製品資料和出貨計畫，
以獲得歷史投料時程資料與歷史產出時程資料。接著，根據供應商端的未來出貨計畫，進行整數規劃
以推估最遲產出時程，使用小生境基因演算法以配適出供應商端的歷史投入與產出統計分佈參數，並
配合類神經迴歸網路以估計未來統計分佈參數，最後，運用具隨機彩色時延之派區網路以來模擬出下
一生產時期之供應商端最遲合理投料時程和最遲合理產出時程。 
所申請計畫為三年期以模擬工程鏈的效能評估方法，除作為其他子計畫的動作之觸發來源外，
亦將透過模擬的建構與產出，作為實務工廠的效益評估之用。因此，綜整本計畫成果如下： 
1. 建立工程鏈評估模擬情境：可根據性能規格，規劃與研究各子計畫與模擬工廠溝通之流程。 
2. 開發工程鏈評估模組：基於派區網路工具開發適用於評估工程鏈之系統，除引用系統間界面與前
所建構模型外，並根據所選擇的派區網路工具設計其擴充模組。 
3. 建立工程鏈模擬環境：基於所開發的評估系統，建構可模擬多種產品、可變流程與不同運作法則
的工廠模型。 
4. 模擬工程鏈測試與整合：根據前所蒐集的生產流程分析案例，可建構此一工程鏈模擬物流，經由
前所實作之系統間介面與各系統模組溝通，從而模擬出可能之資訊流。 
總之，本計畫所提出之將可提供工程鏈效能評估方法的有效的模擬與評估，而所完成的工作成
果， 將針對各研究成果依序說明。 
 
貳、研究成果 
到目前為止，在研究論文上成果為： 
一、會議論文 
1. W.-L. Li, H.-C. Yang, and T. Murata, “An Expandable Petri Net Framework for Method 
Behavior Evaluation of Reconfigured Equipment,” to be published in IMECS, 2010. 
(如附件一) 
2. H.-C. Yang and T.-H. Tsai, “A Pareto-Optimal Fitting Scheme to Identify Cascaded 
Distributions,” in the proceeding of The 10th International Conference on Automation 
Technology, 2009. (如附件二) 
3. 楊浩青、林明儀、趙千億、鄭芳田, “基於泛型派區網路之工程鏈階段評估機制,” 中華民
國第十六屆全國自動化科技研討會, 2008. (如附件三) 
4. H.-C. Yang and T.-H. Tsai, “A Reconfigurable Petri Nets Based Simulation System” in the 
proceeding of the NKFUST, 2008. (如附件四) 
 
 
 
  
Abstract—This paper proposed a design approach for 
evaluating the feasibility of Reconfigurable Equipment 
Behavior (REB) based on the Extendable Petri Nets Framework 
(EPNF). The approach can analyze equipment scenarios 
through developing and usage phases. Especially, EPNF is fully 
automatic to build a Petri nets (PNs) model according to 
equipment scenarios of Unified Modeling Language (UML) [11]. 
Moreover, it also can enhance efficiency of production system. 
As a case study on a cluster tool (CT) of semiconductors was 
presented to illustrate the proposed approach. 
 
Index Terms—Petri-Nets, Reconfigurable Equipment, 
Behavior Model.  
 
I. INTRODUCTION 
Recently, the manufacturing industry in Taiwan is rapidly 
expanding and gradually becoming one of the most important 
industries. Present-day goods involving the quality and 
variety are becoming more and more critical influences on 
the competitive global market. With fast changing tendencies 
on the market, efficient processing needed comprehensive to 
survey various elements of assortment such as highly 
customizable, time-in-market, complex manufacture 
schedule and so on. The need of automation for reconfiguring 
processes is rather serious after changed requirements 
according to different products. At present, the main 
objective of a reconfigurable manufacturing system (RMS) 
which concludes the following: modifying equipment 
behaviors with less cost, another, integrating different 
equipment into a cluster-like or FMS-like operation system. 
However, a RMS has some difficult evaluations as follows: 
RMS used to be terminated to evaluate the feasible 
configurations, as well as evaluation decreases overall 
efficiency of the RMS. 
We discussed issues of specification where those divided  
into three parts as follows: verification specification, 
transformation specification, and reconfigurable equipment 
behaviors. In addition, semiconductor manufacturing usually 
adopted CT to configure many wafers of process module, and 
suggested production scheduler [1]-[3]. In the verifying 
 
Manuscript received December 1, 2009. 
W. L. Li is a PhD student of Graduate School of Information, Production 
and System, WASEDA University, Fukuoka, Japan (Corresponding Author, 
phone: +81 90-9486-2283; e-mail: ashburn23@fuji.waseda.jp). 
H. C. Yang, Dr. Eng, is an Assistant Professor of Institute of System 
Information and Control, National Kaohsiung First University Science and 
Technology, Kaohsiung, Taiwan (e-mail: hao@ccms.nkfust.edu.tw). 
Tomohiro Murata, Dr. Eng, is a Professor of Graduate School of 
Information, Production and System, WASEDA University, Fukuoka, Japan 
(e-mail: t-murata@waseda.jp). 
specification [4] [5], those were applied to evaluate 
feasibility of system based on equipment behaviors. But, 
those had a constraint that could not be applied to diversity 
module. Thus, a common model [6] was adopted requirement 
oriented approach to analyze different scenarios. However, 
we discovered that verifying specification of [4]-[6] took 
many times to reconstruct and re-verify latest system after 
requirements changed. In the transformation specification, a 
hierarchy architecture [7] was proposed to transform and 
analyze equipment behaviors. Besides, a scenarios-based [8] 
was described in detail how unexpectedly states about factors 
of human or environment based on system scenario occurred. 
In the reconfiguration system, the logic controller [9] was 
adapted to re-verify and reconfigure equipment behaviors in 
a RMS. The approach of [10] was proposed to verify 
specifications by high-level PNs, which used relaxation 
techniques to decide the acceptance of states through 
developing and usage phase. 
The rest paper is organized as follows. Section II describes 
the problem of the automatic building model for equipment 
requirements. Section III explains the Petri-Net formalism 
that should be synthesizing module according to 
requirements. Section IV proposes the mathematical 
programming for behavior evaluation of reconfigurable 
equipments. Section V applies approach to simulate an 
example of a cluster tool. Finally, Section VI presents the 
main conclusions of this research and its perspectives. 
 
II. REQUIREMENTS AND HUMAN PROBLEM SOLVING 
Actually, factories in Taiwan usually have not evaluated 
equipment requirements whether it is feasibility after 
changed that. In the other hand, conventional methods 
needed to be re-evaluated feasibility of thorough 
requirements. In other words, there are many instable risks 
would bring indirect losses. Therefore, we had planned an 
automatic model to correspond to actually equipment 
requirements, then it avoided losses of times and costs. 
However, how to ensure consistency between automatic 
model and actual equipment for reconfiguration is a critical 
problem. How to completely transform actual equipments 
requirements into a model of simulation for decreasing 
uncertainty of model, as well as verifying consistency of 
model and specifications. Finally, how to evaluate feasible 
operation sequences (paths) after reconfigured requirements. 
In regard to how to simulate and analyze equipment 
behaviors about issues as follows: 1. How to solve the 
constraint which the model needs to be rebuilt after 
requirement changed? 2. How to correctly map and symbol 
An Expandable Petri Net Framework for Method 
Behavior Evaluation of Reconfigured Equipment 
Wan-Ling Li, Haw-Ching Yang, Member, IEEE, and Tomohiro Murata 
 
 
 
phase. Consequently, this paper considered how to 
effectively construct a model of equipment behavior, 
especially paths, to efficiently analyze the scenario with a 
framework.  
 
Fig. 3 Relationship between Framework and Reference model 
C. Creating relationship between the requirements and 
the scenarios 
However, SA evaluated requirement which was described  
with text formatting was difficult; moreover, how 
transformed it into scenarios of UML according to whose 
mutually relationship. Thus, we formulated strategy with RM 
to compare UC and scenarios, and then ensured properties of 
completeness and consistence. In the meantime, components 
of RM would be updated relational objects according to a 
latest scenarios.  
 
IV. SOLUTION APPROACH 
A. Equipments requirements transform into scenarios 
Requirements was built UC based on RM. However, how 
to evaluate RM practicality and feasibility before combined 
an equipment model. The STV which was developed by 
Manufacturing Information System Laboratory [16] (MIS 
LAB) was detailed description scenarios that could parallel 
and serial combine. In an aspect of efficiently evaluate 
scenario,  feasible scenario would be updated or created into 
RM; moreover, we would reduced complex scenarios in the 
EPNF. As for an above, we defined relationship as follows 
Table 2. 
TABLE 2 THE RELATIONSHIP COMPREHENDS UC, SD, STV AND EPNF 
UC SD / STV / EPNF
Notation Content Notation Content 
Basic  
Flow/ 
Alternative 
Flow 
From State/ 
To State Lifeline Object 
Serial 
Number Order 
Message of 
Order
Basic flow 
name Message Message 
B. Forward Transformation 
Although scenarios presented with SD, yet System Analyst 
cannot quickly analyze feasibility of scenarios. Hence, we 
constructed Forward transformation that this transforms SD 
of scenarios to PN model. Another, flowchart of forward 
transformation is showed in the Fig.4. Using the Multi-Stages 
Verification Method (MSVM) which was developed by MIS 
LAB [16] and Renew to analyze and evaluate model of PN. 
EPNF provided paths to assist corresponding machine 
behaviors.  
 
Fig. 4 Forward transformation transforms scenarios into PN model 
Algorithm of Forward transformation is listed as follows, 
Input: Reference model, RM = (MI, MMI, MMT, RPN) 
Sequence Diagram, RD = (Oc, Me, ObS, ObR) 
Output: XML file of Petri Net, DPN = (P, T, I, O, MI) 
Step1. Object Name: Oc[1][] = {x1,…,xi},  
Object No.: Oc[2][] = {x1’,…, xi’}. 
Message Name: Me[1][] = {y1,…,yi}, 
Message No.: Me [2][] = {y1’,…,yi’}. 
Sending Set: ObS[1][] = {z1,…,zi}. 
Receiving Set: ObR[1][] = {zn,…,zz}. 
Step2. In the RM, Place Name Set: RPN[1][]= {O1,…,Om}. 
Incidence Matrix Set:  
MI[i][j]={(M(0,…,j-1),…,M(i-1,...,j-1))}. 
Initial Matrix Set: MMI[1][i]={MI(0,0),…, MI(0,i-1)}. 
Target Matrix Set: MMT[1][i]={MT(0,0),.., MT(0,i-1)}. 
Step3. Comparing RPN[1][] and Oc[1][] to find new objects 
and count CountON , then updated Incidence Matrix 
NMI [i+CountON][j+CountON]. 
Update Place Name Set: 
NRPN[1][]= {O1,…, Om, …, Om+CountON-1}. 
RD is confirmed position of new objects of NRPN[1][] 
which those belong to the ObS[1][] or the ObR[1][].  
Update Incidence Matrix Set: 
Switch (new objects) 
{Case ObS[1][]: new object is a sending point; break;  
Case ObR[1][]: new object is a receiving point}. 
If (new object is a receiving point)  
{let p=1, NMI [i+p][j+p]= 1}  
based on (new object is correspond to original object)  
{ NMI [i][j+p]= - 1, p++}. 
If (new object is a sending point) 
{ let t = p, NMI [i+p+t][j+p+t]= -1} 
based on (new object is correspond to original object) 
{NMI [i][j+p+t]= 1, t++}. 
Update RM:  
NMMI [1][ i+CountON-1]= {MI(0,0),…, MI(0,i-1), …, 
MI(0,i+CountON-1)} 
NMMT [1][ i+CountON-1]={MT(0,0),…, MT(0,i-1), ..., 
MT(0,i+CountON-1)} 
Step4. PN is transformed into XML of formatting. Setting 
parameter of P is Row of NMI, and T is Column of 
NMI. Another, designing unique number for P and T 
of XML. 
If (column value of NMI [i+p+t][i+p+t] = -1) {setting 
arc is a source of input, then -1 is respected to P number, 
another  target is a T number}. 
If (column value of NMI [i+p+t][i+p+t]= 1) {arc is a 
target of output, then 1 is respected to P number, another 
source is a T number}. 
NMI [i+p+t][i+p+t] is a MI  of XML file of PN model. 
C. Backward Transformation 
EPNF provided diverse evaluation to obtain paths, then 
backward transformation disclosed error paths including 
fault, cause fault, and fault position according to evaluation 
result. Algorithm of Backward transformation is listed as 
follows, 
Input: Path, PRS = (IOc, IMe) 
Output: Sequence Diagram, DRS = (Oc, Me, ObS, ObR) 
Step1. Find all of the objects and messages from PRS. 
Component_A 
Component_B 
Component_C 
Framework 
Component_1 
Component_n 
Reference model 
 
 
 
requirements to SDs which partial SDs are show in Fig. 10.  
 
Fig. 8 Establishing relationship about package diagram of CMP 
 
Fig. 9 Partial basic flows of Use Case about requirements of CMP 
  
(a) 
 
(b) 
Fig. 10 Sequence diagram of CMP includes (a) Scenario of Cluster#1 in the 
TopLevel_P1 of hierarchy, and (b) Scenario of Cluster#2 in the 
SecondLevel_P12 of hierarchy 
We used mapping rules and forward transformation to 
achieve framework of CMP based on Table 3. The 
framework was composed as follows eight components of 
workstation, one component of load/unload, and five 
components of robot. 
TABLE. 3 COMPONENTS OF PETRI-NET MODEL OF CMP 
Name Model of PNs Description 
Load/
Unload 
 
Loading 
material to 
Robot1 or not.
Robot 
 
Transforming 
it to Unload or 
Workstations.
Workst
ation 
 
Receiving 
material from 
Robot1.  
Processing 
and sending it  
to Robot1. 
B. Comparing evaluation result between CDT and PDT  
In the meanwhile, user perchance considered particular 
paths of framework; thus, who carried out PDT based on Law 
of Large Numbers. As for an above, user gained on mostly 
phenomena of occurrence actually. Besides, we had chose 
respectively some specific packages of 3, 4, 7, 8, and 15 
according to a Fig. 8, to evaluate feasibility and efficiency. 
Collating information to draw simulation results was shown 
Fig. 11; nevertheless, we clearly observed that CDT took 
numerous times after raise package. As regards evaluation 
efficiency, we inferred that efficiency of PDT would be better 
than CDT to acquire feasible paths. Hence, we decided to 
reconfigure and increase some packages based on Fig. 8. 
C. Updating and Extending packages into framework 
In the framework of CMP were reconfigured and increased 
some packages of 20, 26, and 32 respectively. Integrating the 
EPNF and the REBs into the CT were respectively 
accomplished using the re-configuration and combination 
equipment in a model. Besides, in a part of changing 
requirements, the paper had indeed confirmed latest system 
includes properties of original system. As regards above, 
CDT had high-quality efficiency in a small system which 
includes little packages, but PDT had better than CDT in the 
large-scale system.  
 
Fig. 11 CDT and PDT usually accompany time of addition after raise 
package 
D. Cluster tool of conclusion and discussion 
A framework of CMP had various properties as follows 
bounded, deadlock-free, and reachable according to results of 
evaluation. User carried out the backward transformation to 
look for actual operation sequences of equipment based on 
paths. The other words, it also improved difficulty scenarios 
when paths had any faults. Subsequently, information of 
equipments were drawn tables to correspond to operation 
sequences of equipment based on paths. Thus, tables of 
output were assisted user or equipment operator in operating 
equipments conveniently. Besides, we contemplated a issue 
that user just acquire fewer packages, then did not evaluated 
all of packages. Hence, user could assigned specifies 
combination of markings of the reachability tree based on 
different association of packages. In the paper, we presumed 
that user determined to observe certain particular 
associations of markings which included 2, 4, 6, 8, and 10 of 
markings. An above results was shown in the Fig. 12 that this 
illustrated efficiency of PDT better than CDT in the partial 
conditions of constraints, because PDT did not took many 
times to search all of markings. 
 
 
 
[13]  Renew, ”Renew Manual,”  http://www.renew.de , 2005. 
[14] S. Ding, J. Yi, and M.T. Zhang, “Multicluster Tools Scheduling: An 
Integrated Event Graph and Network Model Approach,” IEEE 
Transactions on Semiconductor Manufacturing, vol. 19, no. 3, 
pp.339-351, Aug. 2006. 
[15] F. T. Cheng, H. C. Yang, T. L. Kuo, C. Feng, and M. Jeng, “Modeling 
and Analysis of Equipment Managers in Manufacturing Execution 
Systems for Semiconductor Packaging,” IEEE Transactions on 
Systems, Man, and Cybernetics Part B: Cybernetics, vol. 30, no. 5, 
October 2000. 
[16] Manufacturing Information System Laboratory, http://163.18.48.70, 
2009. 
 
 
 
explore the goal tradeoffs are needed. If the variable space is 
transformed into the criterion space forming a boundary, on 
part of boundary, named the Pareto Frontier, no point is 
better than any other point with respect to other objectives, 
and no improvement can be made in any objective without 
lost the others. A solution ∗∈Ωx  is Pareto-optimal, where 
Ω represents the solution space of x , iff there no exists 
other ∈ Ωx satisfying conditions , ( ) ( )i f fi i∀ ≤ ∗x x and 
, ( ) ( )i f fi i∃ < ∗x x . The Pareto set is the set of x* where there 
are no other solutions for which simultaneous improvement 
in all objectives can occur [3].   
In a stable production environment, probability density 
function of PT shows Normal(μ,σ), and the probability 
density function of TD shows exponential distributed with 
arrival rate λ. The unknown probability density function of 
WT can be found from CT using the Pareto-optimal. To 
solve this multimodal distributed problem, we propose a 
pareto-optimal fitting scheme to identify the behavior 
parameters based on the pareto genetic programming (PGP). 
With MLE initiated and stable production assumption, the 
scheme finds the pareto-optimal parameters of the cascading 
distributions to represent the three typical behaviors. Cycle 
time modeling case study shows that the proposed PGP 
scheme indicates its better explaining capability than that of 
MLE and EM.  
II. PROPOSED METHOD 
In typical distribution fitting, different statistics are used 
to find suitable fitting results: 
z Chi-square statistic: 2 2[ ( ) ( )] ( )1m p x p x p xx f e eχ ∑= −= , 
where ( )
e
p x  is expected p.d.f., ( )
f
p x  is fitted p.d.f., 
and m= n  is the number of class intervals with 
sampling size n. 
z F statistic: 2 2
f e
F σ σ= , where 2
fσ  is expected 
variance, 2eσ  is fitted variance, F statistic expresses 
the confidence between expected and fitted 
variances. 
z Kolmogorov-Smirnov: max ( ) ( )
f e
D F x F x= − , where 
( )F xe is expected c.d.f. ( )F xf  is fitted c.d.f., D 
statistic is used to test the maximum error between 
fitting and expectation. 
z Kullback-Leibler Distance (KLD): KLD measures 
the distance between the two probabilistic models 
using ( )
1
( ) log ( ) ( )
n
e e fi
I p x p x p x== ×∑ . 
Different statistic values represent different measurement. 
To combine the above-mentioned statistics, we modified a 
Niche Genetic Algorithm to find Pareto front set. In each 
generation, the feasible chromosomes are selected to with α 
confidence for the F and D values. When taking KLD and 
2χ  value as the fitness functions of the selected 
chromosomes, we will eventually find multiple optimal 
solutions from reserved chromosomes in different niches.  
Each time when data collection is finished, the 
probability distribution of CT from the collected data will be 
fixed. Therefore, according to law of large numbers, the 
mean probability function of the Pareto set will be normal 
distributed, the mean of the fitting results is the actual 
processing time PT, and its confidence can be represented by 
the variance of the solutions. To find the distribution’s 
parameters, the following outlines the fitting steps required 
to compute processing time distributions. 
Step 1) Represent distribution parameter with chromosome. 
Assume that TD is given, WT and PT are unknown. 
The distribution families and parameters are 
represented by normalized binary vectors as 
chromosomes. The initial values of distribution 
parameters are found from CT by MLE fitting.  
Step 2) Separate initial populations into different subgroups 
as niches where the number of niches is greater than 
30 at least. 
Step 3) Decide subgroup existence and size. The sizes of 
subgroups depend on their mean fitness values, 
which are bounded between the maximum allowed 
scale Sa and minimum live scale Sl. The judgment 
rules of sizes are given as follows.  
i. Immature protection: for keeping population 
variety, an immature subgroup is protected from 
be eliminated for nip generations. 
ii. Worst die: if a protected subgroup has the worst 
mean fitness values existed for nip generations, or 
the values of F and K-S statistics of the subgroup 
are greater than thresholds, the subgroup should 
be replaced with a new subgroup whose size is as 
same as the removed one. 
56
2008第十六屆全國自動化科技研討會 
中華民國九十七年六月二十七日~二十八日                          臺灣‧高雄   國立高雄第一科技大學 
 1206
基於泛型派區網路之工程鏈階段評估機制 
楊浩青  林明儀  趙千億  鄭芳田* 
國立高雄第一科技大學 資訊系統與控制研究所 
Email: hao@ccms.nkfust.edu.tw 
*國立成功大學 製造工程研究所 
Email: chengft@mail.ncku.edu.tw  
摘要 
本研究提出一評估階段特性的機制，以評估鏈結不同製程功能與階段的工程鏈系統。首先，根據階層化的架構，
並經由轉換規則，將工程鏈以派區網路表示之。其次，運用泛型派區網路的特性，建立各階段評估方法，包含如局
束性與死結驗證以檢驗工程鏈合理性，時間限制性質以檢查資訊回饋時效等。最後，透過模擬以推估工程鏈的預期
效益，建立如其可能之產能範圍，評估其製程轉移時機、追蹤與記錄產品之狀況等。結果顯示，此評估機制可根據
IC工程鏈之各個階段，推估其運作效能，從而羅列出其各階段可能問題，藉以縮短中間階段之時間，降低開發成本。 
關鍵字： 工程鏈、派區網路、評估機制
1. 前言 
產品製程生命週期，可定義為從該產品之製程規劃到
大量製造的歷程時間。這中間歷經冗長步驟，若存在錯
誤將會使產品增加鉅額成本，亦使產品進入市場的時間
延遲，而損及其原有利益；因此，製程生命週期之績效
從而凸顯其重要性。在製程生命週期之移轉過程中，存
在著大量的資訊協調與合作的關係，為能有效的整合因
協同所需的資訊交換鏈結關係，並提供一個迅速且精確
的交換程序，工程鏈(Engineering Chain, EC)相關之探討
[1]便因應運而生。 
由於資訊間的交換過程在不同階段需求相異，如何建
立 EC 模型，從而運用所建立之模型，以模擬及分析該
EC系統整體的運作效能，從而提高設計成功率，縮短產
品上市的時間便成為評估 EC的課題。其中，EC可視為
一種鏈結不同製程功能與階段成熟度的複雜工程資訊系
統；從資訊系統分析開始，即建立對應之 EC 模型，將
可有效呈現此種工程資訊系統的特性與行為。 
在系統設計上， UML提供統一之塑模規範，允許開
發者分工設計，以加快其整體開發效率。然而以需求塑
模為主的 UML 法，適於需求之制訂與設計；在需求之
工作流程驗證上，UML付之闕如。因此，藉由轉換到其
他分析方法以驗證該設計邏輯的相關研究亦所在多有，
如 Lin[1]與 Lee[2]等人，利用派區網路(Petri Nets, PN)轉
換 UML的使用者案例與次序圖等需求設計，透過 PN驗
證其需求的正確性。 
在方法上， PN是一種同時具有圖形化與數學化的分
析方法，利用標記(token)、移轉(transition)與狀態(place)
來分析離散事件系統的中資源、狀態移轉與資源狀態
等。同時亦運用狀態的輸入輸出所建立之關聯矩陣
(Incident Matrix)，從而以狀態方程式來分析系統暫態行
為。在分析與評估具有離散事件特性的系統行為與效能
上，派區網路已經發展出多種不同類型的研究方法，如：
普通派區網路(Ordinary Petri Nets, OPN)[1]、模糊派區網
路 (Fuzzy Petri Nets, FPN)[4] 和彩色時間派區網路
(Colored Timed Petri Nets, CTPN)[5]等。 
在應用上，可運用 PN 之各種特性於不同領域之分
析。如物流方面，利用 OPN[6]分析在供應鏈中的兩種生
產方式：make-to-stock與 assemble-to-order，並以最小存
貨與運送成本為目標，分析兩種生產方式對於供應鏈的
動態行為以及實際物流有何影響，以決定此兩種生產方
式在何種情況下會使得存貨與物流運送成本為最低。或
利用 CTPN[7]，並另外定義了 Pitch Up Place, Catch Up 
Place, Pitch Down Place, Catch Down Place 四種 Place來
模擬在半導體製程中的熔爐製程中，資源在各種不同功
能模組間的，藉以分析其熔爐製程的動態行為及效能。 
在分析上，利用 CPN[8]來探討多評準則決策分析
法，包括分析階層程序法(Analytic Hierarchy Process, 
AHP)、分析網路程序法(Analytic Network Process, ANP)
與模糊分析網路程序法(Fuzzy Analytic Network Process, 
FANP)，利用高階 PN的動態行為的視覺化展示，並利用
標記傳遞的行為模擬並解讀 AHP、ANP與 FANP三者間
相互影響的過程，相依行為透過圖形化分析以便於掌握。 
2008第十六屆全國自動化科技研討會 
中華民國九十七年六月二十七日~二十八日                          臺灣‧高雄   國立高雄第一科技大學 
 1208
3. 研究方法 
階層化系統方法 
對於半導體產業製造過程的五個階段而言，整個製造
過程要進入下一製造階段的關鍵點在於：上一製造階段
經評估確認後，方得以進入到下一製造階段；同時，在
不同的階段分別有各自不同的評估方法與標準。因此，
本研究提出一三階層式的系統結構，同時利用 GPN來呈
現此階層式系統架構，如圖一所示： 
 Top Layer：呈現 EC簡化的鏈結關係，讓使用者可
以清楚看到整個 物流的宏觀狀況，此層為中間層
利用 PN簡化原則簡化之後可得。 
 Middle Layer：表達各個鍵結點的細部流程，由此
層可以清楚看到整個系統的詳細物流與資訊流的
實際運作狀況，此層由實際活動圖或流程圖透過
PN轉換規則轉換後可得。 
 Bottom Layer：代表各個鍵結點的階段能力，由此
層可紀錄各製程點之製程成熟度。 
根據前述三種不同類型的 PN，可發展出一套 GPN元
素，GPN = (P, T, K, I, O, C, M) 
z P = {p1, p2,…pm}為一個狀態的有限集合，m為
PN中狀態個數。 
z T = {t1, t2,…..tn}為一個移轉的有限集合，n為 PN
中移轉個數，T0(set of immediate transition)，Tt(set 
of timed transition) ⊂ T，其中 t為正數，代表延
遲的時間。 
z 1 2{ ,  ,... }vK b b b= ，為一個標記識別的有限集
合，v為具識別標記種類數。 
z jbI : P×T →[ ]m nN × ，矩陣中元素值以 xyc+ 表示，
代表從狀態 px到移轉 ty的引弧(arc)與觸發所需
之具識別標記  jb 數量， jb K∈ ， xyc N+ ∈ ，
xp P∈ ， yt T∈ ，N為非負整數。 
z jbO : T×P → [ ]m nN × ，矩陣中元素值以 yxc− 表
示，代表從移轉 ty到狀態 px的引弧與具識別標
記 jb 轉入狀態之數量，N為非負整數。 
z [ ]jb xyC c= m×n，代表具識別標記 jb 的關聯性矩
陣 ， 其 中 元 素 cxy 為 整 數 ， 其 定 義 為
xy xy xyc c c
+ −= − 。 
z jbM : 表示具識別標記 jb 系統的狀態， j
bM
→[ ]N ，為一個(1×m)向量， 
1
( ) ( )j j
m
b b
x
x
M P M p
=
=∑  
( ) ( ,  )jb x x jM p s p b= ，亦為一個(1×m)向量，s 為具識
別標記 jb 在狀態 px 的數量， 0 j
bM 則代表具識別標記 
jb 在狀態中的初始狀態。移轉致能的條件為
( ) ( )jb bjx xyM p I c
+≥ ， xp P∈ 。當移轉 ty觸發後 marking
後可得， 
 1 1
b j
j jb b
t t t bjM M u C+ += + ⋅ ， 
其中， tu 為一個(n ×1)向量，代表 PN中所有移轉，
當移轉被觸發時， tu 中相對應之值為 1，其餘未被觸發
的移轉相對應之值為 0；而 marking 1
b j
tM + 亦可從 0 j
bM 直
接求得，其方法為 
1 0
1
b j
j jb b
t t bj
t
M M u C+
=
= + ⋅∑δ  
其中，t 代表觸發順序，δ代表要到達
1
b j
tM + 狀態需觸
發的次數。EC在不同的階段所面對的問題不同，將分別
針對各不同階段提出了對應的驗證方式。採取 GPN的優
點在於其已存在許多特性[10]，可供為特性驗證之用。
以局束性為例， 
目標式 1： 
Min    
1
n
y
y
t
=
∑  
st.     0C t⋅ ≥  
       1TI C t⋅ ⋅ ≥ ， [ ]111 "=TI  
       0jt ≥ ， nj ≤≤1  
其中 t代表所要檢驗的派區網路模型中對應的移轉，
y 代表其移轉序，Cm×n 為關聯性矩陣。若存在一組非零
元素之 t向量，即對應的 y 元素經過觸發數目後，將會
使得矩陣 Ct 中值為相對應的狀態會產生狀態累積的問
題；但若此目標式無法求得非零矩陣 t，即表示此派區網
路模型中的任一狀態皆具局束性。若以活性討論： 
目標式 2： 
Min    
1
m
x
x
p
=
∑  
st.     0Tp C⋅ ≤  
1Tp C I⋅ ⋅ ≤ −  
0xp ≥ ， mi ≤≤1  
當矩陣 pTC中其值為-1之對應移轉觸發後，使得整個
派區網路模型因缺乏標記而運作停止；但若此目標式最
後的計算結果無法求得矩陣 p，即表示此派區網路模型
中的任一狀態皆不會發生死結。 
2008第十六屆全國自動化科技研討會 
中華民國九十七年六月二十七日~二十八日                          臺灣‧高雄   國立高雄第一科技大學 
 1210
結關係，易於掌握產品物流的宏觀流向與位置。在評估
機制上，驗證此 GPN模型於 EC可分述如下。 
I. 工程規劃階段 
由於資源累積與死結的問題起因均為在設計規劃時
因設計或規格錯誤而產生之問題，因此利用所引用的兩
個目標式來檢驗此兩個問題，以確認此設計的正確性與
合理性。以局束性檢查結果為例：利用目標式 1，可求
得矩陣 t 在 index 29 與 index 51 的值為 1。即表示在
Cleanning.P30與 Cutting.P52的地方產生局束性問題。其
原因為製程間獨立或協同動作尚未明確定義。 
經過修改後，再檢查其局束性發現不存在 t的解，可
表示此 GPN模型無局束性問題。此外在活性上，透過：
目標式 2，亦不存在 p的解，即表示此 GPN無死結問題。
因此透過以上的兩個目標式的檢驗及轉換規則的配合，
工程規劃階段的可能問題點能有效的推估與羅列，從而
由問題點的羅列作為其工程規劃動作設計的修改依據，
以加快工程規劃的合理化過程。 
II. 原型製造階段 
在原型製造階段中，需確保回饋資訊的有效性，也就
是這一次動作的回饋資訊必須在下一次動作前到達所要
同步動作的檢查點。對於此問題，可以利用時間 GPN的
時間延遲特性來做檢查，其檢查的規則以@符號為時間
延遲符號，若 T1時間大於 T2與 T3的時間總和，即可
確保所需回饋資訊的時效性。 
對不同產品而言，追蹤其不同回饋時效與正確性尤為
關鍵。以 IC工程鏈中，就擷取蝕刻與離子植入的部分，
其需要 EP(Electrical Performance)這部分的資訊，而在做
完離子植入的步驟之後會再回傳新的 EP 資訊。根據上
述的時間檢查規則，可以發現 9 > 5 + 2 + 1，可確保資訊
回饋的有效性；假設若違反這個檢查規則，在蝕刻的部
分就會因為所需要的回饋資訊時間過長，資源在這步驟
的時候累積而造成整個系統的瓶頸點。因此，透過上述
的時間延遲的檢查機制，可以確保在需要資訊回饋時候
的資訊有效性的問題。 
III. 原型評估階段 
基於圖五與可能良率分佈，今設定光罩製造與 IC Fab.
中的曝光顯影這兩部分的良率，其分別各以 n1與 n2為
代表，範圍從為 0.2、0.4、0.6、0.8與 1.0等，預期從這
些組合變化以觀察整體運作效能的變化。利用 GPN 模
擬，可獲得如圖六的推估結果。其條件為若曝光顯影的
良率為 0.6 時，改變對光罩製造在各種良率下的組合變
化。就兩種之組合變化，可獲得如圖七之所有的良率組
合下之可能產出模擬結果。由圖七可發現，整體的產出
隨良率 n1增加而上升，然其變化的區間實決定於 n2。 
另外透過圖六，亦可觀察到產能在不同良率下的可能
範圍，藉以評斷在產能是否達到所要的標準；若沒有的
話，良率該再往上提升多少，才能達到所要的產能，藉
以建立所需要的產能可能範圍。 
IV. 製程轉移階段 
由於各製程均有其各自的製程成熟度，可表達成每一
階段需經過該階段的檢驗決定後方得以進入次一階段。
將可以五大階段串連，而構成如圖八之階段成熟度 GPN
模型，以配合所設計的檢驗架構來檢驗製程轉移的時機
與條件。由於圖五中各製程均以單一狀態表達，其製程
的階段成熟度進一步可透過此種階段的成熟度以對應數
量的標記來表示。換句話說，對每一製程而言，均存在
其對應的階段成熟度模型，構成該製程的 Bottom Layer。 
舉例而言，假設欲評估 Exposure製程，以 material 標
記表實際物流的動作，information 標記，以代表目前針
對此 Exposure製程的成熟度。若要從 Exposure製程轉移
到下一個製程則需要 information 標記的數量為3時的製
程成熟度才能夠轉移到下一個製程階段；但若目前的
information 標記量為 2，意即目前的製程成熟度還不到
標準，Exposure製程將維持於本階段。 
利用上述的方法，將可模擬整個實際物流的流向，同
時也可以表現出因製程成熟度而造成的製程轉移時機與
條件，從而呈現在製程轉移階段的能力。但就製程轉移
階段而言，其製程成熟度是有模糊特性。因此未來若加
入可能性 PN或是其他類型的模 FPN來模擬具有多值特
性的部分，並整合各種不同類型的 PN，將可使其可以在
同一個 PN模型圖中呈現所要表達的概念。 
V. 產品量產階段 
在此階段 GPN 應用彩色派區網路的概念來檢驗及紀
錄整個系統的模擬狀況，並利用 tw.MISlab 套件中的統
計圖表的功能來呈現運作結果。若每隔 5 個時間單位一
個 lot的 wafer進入 IC Fab.中，lot數為 80，並在 Reticle 
Fab.中的曝光製程良率設定為 0.8，在 IC Fab.中的曝光良
率設定為 0.6條件下。 
由圖九(a)，在 Developing.P39的製程中有大量的標記
累積，最高為 42。對於此現象，可將 Developing.P39製
程視為製造過程的瓶頸點。當檢查模擬設定時發現，其
原因可能為 PR Strip.P47 製程良率設定過低造成，導致
大量標記回流至 Cleaning.P32製程中重新進行。因此導致
2008第十六屆全國自動化科技研討會 
中華民國九十七年六月二十七日~二十八日                          臺灣‧高雄   國立高雄第一科技大學 
 1212
 
圖一. 階層模型 表一. 對應規則 
 
圖二. 機制流程 圖三. 模擬工具系統架構 
 
圖四. IC工程鏈流程 圖五. IC工程鏈派區網路模型 
  
  
  
I
Growing
Cutting
Polishing
Cleaning
A
Wafer Manufacturer
Wafer Test
IC Test
Burn in
D
F
G
E
Test
Logic Circuit Design Pattern Design DRC
GDS II
Frame 
Specification
Approval, Issue
B
H
IC Design
Dummy Generation
Frame Generation EB Conversion
ORC, OPC Generation
EB Exposure
Mask Inspection
Reticle Fab.
Inspection Data
Inspection Recipe
B
C
I
Encoding
Cleaning
Filming Diffusion
Coating
Exposure
Developing
Photo
Film
Information
AEI CD
ADI CD
Etching
Implantation
PR Strip
EP
WAT Test
WAT
H
A
C
D
IC Fab.
Cutting
Wiring
Packaging
E
F
Package
D
Yes
No
  
 1
A Reconfigurable Petri Nets Based Simulation System 
Haw-Ching Yang and Tzung-Han Tsai 
Abstract— This paper proposes a reconfigurable Petri 
Nets based simulation system to improve throughput 
prediction in varying production conditions of a 
production chain. The proposed system can used to 
reflect and forecast the production updated dynamics 
by learning their past production behaviors, to 
reconfigure the simulation model by the forecast 
model, and to predict the throughput by simulation. 
Experimental results show that the throughput 
prediction by the proposed system is appreciated by 
the studied factory. 
I. INTRODUCTION 
OR the IC product, its production covers the design, 
masking, making, packaging, and testing stages and 
the corresponding times [1]. A delay or trouble in stage 
could increase the production cost, postpone the product 
time to market, and even lost the expected profit of the 
product. In this production chain, although the IC design 
houses are typically majored in IC design level rather 
than actual IC production level, those design houses still 
need to lead and control the actual production progresses 
when they are customers not owners of the actual 
production factory. In this situation, how to control the 
production through remote monitoring and forecasting 
by stage becomes a challenge for the virtual 
manufacturer like the design house [2]. 
To forecast the stage production, the prediction model 
should be constructed based on the past behaviors which 
can be characterized by suitable distribution families and 
parameters. In production environments flow-shop, 
flexible manufacturing system, and job-shop, applying 
neural network (NN) in those environment have proved 
the values of NN. Among the NN methods including 
Hopfield Neural Network, Back Propagation Network, 
and Adaptive Resonance Theory, which have shown the 
applicability by topics. 
Because actual productions are complicated and 
stochastic, that induces the corresponding mathematic 
models usually too simplified to predict their actual 
behaviors effectively. The simulation based method 
which utilizes the computation power of computer can 
describe stochastic data, simulate the stochastic 
behaviors, and analyze the simulation results [3].  
Currently, Petri Nets based methods [4] are applied in 
simulation studies which have covered the properties: 
time delay, stochastic, and identification for production 
[5][8][9].  Therefore, except to the properties of Petri 
Nets included, we also propose a reconfigurable scheme 
[6][7] for the Petri Nets model to adaptive reflect the 
forecast behaviors. 
In general, we constructed two models to achieve the 
virtual production goal, one is forecast model which is 
used to predict the future production distributions, and 
another one is simulation model which was designed for 
generate the statistic production behaviors based on the 
forecast model.  
The remainder of this paper is organized as follows. 
Section II explains the design of the architecture of the 
simulation system including the forecast and simulation 
models. Section III presents the results of the 
experimental analysis. Finally, the last section states the 
contribution of this work. 
II. ARCHITECTURE 
This section addresses the proposed architecture of the 
simulation system. Figure 2 depicts the details of the 
procedure, which are described below. Figure 1 shows 
the system workflow for modeling and simulation of a 
process. Raw data xr is imported from the exchanging 
database which collects the input/output date and size by 
sub-lot ID. For data quality, filter rules are applied to 
eliminate the unreasonable data including lots with cycle 
time less than zero and missing lots, etc. In data 
segmentation, xr is classified by the corresponding 
classes, accuracy and region of convergence into 
segmented data xd , which contains lot size, cycle time, 
F 
[ ]ˆ +1Y k
 Fig. 1 System Workflow 
 3
IT denotes the distribution parameters of interarrival time. 
In this NN model, there are three layers: input, hidden 
and output layers. In input layer, each node is mapping to 
the corresponding input [ ]θ j k . Node j in the hidden and 
output layers is defined as 
1
-ξ== ∑ nxj ij i jin w x , (4) 
where xn is the size of input x for node j, ijw is 
weighting of ix and ξ j is the node threshold. The node 
output of the hidden layer is defined as ( )=h hO f n  
following the output function -( ) 1 (1 )= + xf x e . 
Similarly, the NN model node output at the output layer 
is defined as -ˆ 1 (1 )θ = + hnj e . From (3) and (4), the 
updated operator for each node weighting is followed as  
-η ∂= ∂ 
f
ij
ij
E
w
w
. (5) 
Using (5), the jth output error in the output 
layerδ j can be derived to stand  
ˆ ˆ ˆ(1- )( - )δ θ θ θ θ=j j j j j . 
Similarly, the hidden layer h error satisfies 
(1- )δ = ∑h h h hj jjn n w E , 
where η is a given learning rate, the weighting of 
hidden layer is = + hj hj hjw w w with ηδ=  hj j hw n , and 
the weighting of hidden layer is = + ih ih ihw w w with 
ηδ=  ih h iw n . After the forecast model been trained, this 
model can be applied to forecast distribution parameters 
of next duration from current duration. 
PN Model Synthesis 
To synthesize the simulation model [ 1]+N k , we apply 
the estimated parameter [ 1]+θ k  into the predefined PN 
skeleton. The skeleton was to specify the basic 
components and relations for an essential process which 
accept a number of lots, dispatch the lots, and split lots 
into sub-lot for production per duration. During the 
processing time, a contracted capacity is specified to 
control the maximum number of throughput per working 
day.  
Assume a Genetic Petri Nets is defined as GPN = (P, 
T, K, I, O, M), where ={ }, +∈P P  ip is a finite place 
set, ={ }, +∈T T  jt  is a finite transition set, subset  
T0 ⊂ T represents the immediate transition set, and 
subset ⊂T Tdt  denotes the timed transition set with 
timed delay +∈  dt . Identifiable token vb is defined in 
the finite set ={ }, +∈K K  vb . Arc set 
: [ ]× →I P T  jb  with element +xyc , which represents the 
necessary token number letting transition ty to be 
triggered from state px. Element -vxc  
in : [ ]× →O P T  jb represents the required number of ID 
token jb to enable transition ty to state px. M j
b  is 
denoted by the marking with 
 ( ) ( )= ∑M P Mj jb b xx p  
where ( ) ( , )=jb x x iM p s p b is the number of ID jb at 
state px. Initial state of ID jb is defined as 0M j
b . When 
enable condition ( ) ( )+≥M Ij jb bx xyp c , transition ty is 
triggered, then the following equation stands: 
 1 1+ += + ⋅M M u Cb j jj jb b bt t t . (6) 
In (6), the corresponding element value of tu  is 1 
when this transition is triggered; otherwise, the 
un-triggered corresponding value is 0. The incident 
matrix =[ ]C jb xyc  represents the ID token with 
element + −= −xy xy xyc c c . In this research, each colored 
token will represent a lot or sub-lot which is inputted into 
the specified model to simulate the production behaviors 
based on GPN. 
Fig. 3 Petri Net base Simulation Model for Single Process
 5
distributions were found and shown in Table 1; 
unfortunately, those corresponding p values of χ2-test 
only the distribution fitting of cycle time is 0.479 which 
indicates this fitting being accepted with 95% confidence. 
Even so, after applying TGA to the cycle time fitting, Fig. 
5 demonstrates that the fitting by TGA which sampled 
based on bootstrap achieved the given confidence level. 
According to the LCD driver IC domain knowledge 
and expert feedbacks, next duration throughput is 
decided by the following factors: the historical product 
characteristics, the process and contract capability, shop 
flow factors, dispatching rules, e.g. Theory of Constraint, 
and holding number by reasons.  
For improving the prediction accuracy, we applied 
the factors into the neural network to forecast the next 
duration distributions. After the forecast model 
constructed, in order to valid the forecast model, the 
followed simulation steps are executed: (1) training the 
forecast model by past N week data; (2) deriving next 
week distribution parameters from the forecast model; 
(3) inputting next week demand to the simulation model 
with the next week distribution parameters and 
simulating this week throughput 30 times; finally, (4) 
comparing the actual with the simulation mean, if the 
prediction error is greater than a given error tolerance, 
than go back to step 1, else export the simulation 
results. 
First, to valid the simulation model, we set 8th week 
distribution parameters of the simulation model from the 
parameter estimation, inputted 8th week demand to the 
simulation model, then simulated this week throughput 
30 times. Finally, as shown in Fig. 6 comparing the 
actual throughput with the simulation results, some of the 
daily differences between the simulation mean and actual 
throughput are obvious but some are not, as shown in the 
upper portion of Fig. 6; however, the per average 3 day 
differences between the two distributions are acceptable 
as shown in the lower portion of Fig. 6. Therefore, the 
simulation model is valid for this week throughput 
simulation. 
To valid the forecast model with simulation model, we 
applied the simulation steps: (1) trained the forecast 
model with 8 week data; (2) derived week 9 forecast 
distributions; (3) simulated week 10 from the week 9 
forecasting. The result is shown in Fig. 7, which 
indicates that there existed ±2% ~ ±23% daily errors 
between the simulation and actual throughput on the next 
week. Actually, the accumulating throughput is more 
practice than daily throughput in the production 
requirement. Hence, as shown in the lower portion of Fig. 
7, the accumulating difference ratios between the 
simulation and the actual throughput are lower than 2% 
after 80% actual accumulating throughput. However, the 
simulation accumulating throughputs on last 5 days are 
greater than the actual situations did, that hints there 
exists some space for prediction improvement. 
IV. CONCLUSION 
This research constructs a reconfigurable system to 
forecast and simulate throughput based on the given 
scenarios in the production chain. The primary result is 
that the simulation model can be used to forecast next 
duration production in the confidence level. Each input 
corresponding throughput in the beginning days is 
affected by the residual parts which are separated from 
the original lots and merged into the succeeding lots. In 
the future, we need to identify the distribution of the 
residual parts and model that in the simulation model. 
REFERENCE 
[1] G. S. May and C. J. Spanos, Fundamentals of 
Week 10
0
100000
200000
300000
400000
500000
0 5 10 15 20 25Day
Siz
e
Actual 
Sim.mean
Sim.max
Sim.min
Difference Ratio of Accumulating Throughput: (Expected - Actual)/Expected*100%
-10.0%
10.0%
30.0%
50.0%
70.0%
90.0%
110.0%
DAY
R
at
io
Difference
Ratio
Actual Acc.
Difference Ratio 83.0% 50.3% 30.6% 28.4% 29.2% 32.2% 26.0% 17.7% 12.1% 8.1% 6.0% 4.6% 1.9% -1.0% -2.0% -4.5% -5.6% -7.1% -9.0% -11.4% -12.0%
Actual Acc. 0.2% 2.4% 7.8% 14.2% 21.4% 28.1% 38.6% 50.6% 60.1% 67.5% 72.6% 76.4% 80.8% 85.1% 87.5% 90.9% 92.7% 94.6% 96.7% 99.1% 100.0%
Sim. Acc. 1.3% 4.8% 11.2% 19.8% 30.2% 41.5% 52.2% 61.4% 68.4% 73.5% 77.2% 80.1% 82.3% 84.2% 85.8% 86.9% 87.8% 88.3% 88.7% 89.0% 89.3%
2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
Fig. 7 Throughput Forcast for Next Week 
Cycle time comparsion, sample rate: 0632, 75% sublot, grid:60
-0.05
0
0.05
0.1
0.15
0.2
0.25
0.00 5.00 10.00 15.00 20.00 25.00cycle time (day)
Pr
ob
ab
ilt
iy
1/15-2/25: actual data
1/15-2/25: TGA(double gamma)
1/22-3/02: actual data
1/22-3/02: TGA(double gamma)
Fig. 5 Distribution Fitting of Cycle Time  
Improve Software System Visualization  
using Genetic Algorithm 
 
Haw-Ching Yang and Cheng-Da Chang 
Institute of System Information and Control, National Kaohsiung First University of Science and Technology, 
Kaohsiung, Taiwan, R.O.C. Email: hao@ccms.nkfust.edu.tw 
 
Abstract 
Well visual effects for system facilitate user to overall 
master the system relations. To enhance the current 
visual effects, this work proposes a concrete mapping 
and software metrics to reveal the relations’ 
characteristics such as size, association and coupling. To 
adapt user’s dynamic viewing changes, the genetic 
allocation algorithm with the allocation criteria are 
developed to place the concretes by viewing constraints. 
In addition, JOGL is adapted to realize the animation 
functions. Finally, the cases study show that the 
distinguishability of system is improved.  
Keywords: Genetic Algorithm, Visualization, Software 
Metric. 
 
I. INTRODUCTION 
With growth of software systems’ functions, users get 
increasing burden to understand and master relations of 
the systems. To ease the burden, effective visualization 
for the relations of systems’ structures and relations has 
proposed one of research topics [1..5]. However, these 
visualizations were limited by the corresponding static 
algorithms, which still failed to display the relations 
adaptively by user’s view with well human factors 
guaranteed. 
In early time, Seesoft [1] expressed source codes of a 
system by a two-dimensions mapping to show structures 
of the source codes. For constraints from the few 
expressions of Seesoft, sv3D [2] extended it and 
proposes a three-dimensions mapping to display the 
relations, which improved the visual effect. Currently, 
even though UML is popular accepted in software 
application domain, due to limited by object manually 
allocated, there still exists complicated and confusing 
relations from the 2D allocation. However, using the 
associated 2D arrangement method [3] for object 
allocation that was insufficient for the increasing 
complicated degree of visualization. Hence, applying 3D 
to show the relations of software system becomes 
recommended [3][4][5]. 
To allocate objects in 3D, spring-embedded algorithm 
[4] and approaching integrated GA method [6] were 
significant methods to find the arbitrary positions by 
objects. The visual effects of these two studies were 
better than before; however, they lacked dynamic 
viewing to reveal the further relation characteristics such 
as cohesion [7] and coupling [8] in a system. Because 
cohesion the number of private attributes and methods 
represents the complex degree of one object, and 
coupling the number of imports and exports of public 
attributes and methods between objects expresses 
complicated degree between objects. Among the 
relations of system, the two characteristics decide the 
effect of visualization, crucially [9]. 3D visualization for 
object’s relations should include not only human effects 
but also system characteristics [10][11]. 
Therefore, we propose the following methods to 
improve the display issues of object’s relations: 
z 3D mapping of object structures to visualize the 
relations; 
z Criteria for judgment to fit dynamic viewing 
requirement; 
z An algorithm for allocation to reveal the relations’ 
characteristics; then,  
the 3D concrete tool is proposed to generate interactive 
3D objects supporting user observation and improving 
relations searching efficiency. 
The rest of this paper organizes as follows. Section II 
explains the design of system workflow. Section III 
presents data analysis of case study. The finial section 
states the conclusions of this paper. 
 
II. SYSTEM WORKFLOW 
Essentially, this research proposes a visualization tool 
to adapt to users’ viewing changes and expose the system 
relations. After retrieving the relations of objects into the 
corresponding files, the system workflow for the tool as 
In a limited visual space, toward (2) minimization can 
limit the space explosion. Similar to 1θ , let 2θ  be sum 
of relation segments that represents corresponding 
relation distances among concretes. Reducing 2θ  make 
visual effect better. However, there is trade-off between 
both criteria and distinguishability.  
 
z Sum of space and projecting intersection   
For influenced by viewpoint, projective intersection 
will confuse unrelated with correlated segments. To 
reduce the intersection by viewpoint, we assume that 3θ  
represent the total number of space intersections at the 
specified view. To reduce misunderstanding of relation 
between concretes, constraining 3θ  is one of solutions. 
Similar to space intersection, because the plane vertical 
to the view called projecting plan filling with 
intersections of projection, that is hard to avoid. Suppose 
4θ   stands for sum of the projecting segments whose 
distances are shorter than a given range. Then as we 
know, smaller 4θ  gets better viewing effect. 
With growth of system, relations of the system become 
complicated and incomprehensible. To achieve better 
distinguishability and well viewing effect, next we will 
combine the four criteria with suitable weighting ω to 
satisfy the objective function J.  
 
Genetic Allocation Algorithm 
To reduce the visual complication of concrete’s 
relations, next will describe how to apply Genetic 
Algorithm in this research. As shown in Figure 2, let 
each binary vector (chromosome) represents a concrete 
location (x, y, z). If we stepwise extend 
lN and aN , we 
will find an enough space to allocate all concretes such 
that give the default values of max ( ) max ( )= = ax y N  
and max ( ) = lz N . As shown in Figure 2, the fitness 
ΦP is defined as: 
-1
1
oT
p p i
i
ρ ρ
=
⎛ ⎞Φ = ⎜ ⎟⎝ ⎠∑  (3) 
∑
=
⋅=
R
i
iip
1
θωρ . (4) 
where: 
Pρ : objective value of pth population, 
oT ：number of populations, 
R ：number of criteria. 
 
Given max times maxR and visual acceptance 
ratio
3 /θ on  with applying GA procedure, then we can 
find the near-optimal allocation xH  where x can be class, 
entity or object, etc. 
 
III. CASE STUDY 
To realize the 3D concretes, we adopt Java with JOGL 
to develop the visualization through JOGL (Java binding 
OpenGL) interface that supports Java with shift, zoom, 
rotation, and projection. In this research, model-view 
matrix defined by OpenGL transforms position matrix 
[ ]xΗ to both of model-view matrix and projection 
matrix, which can construct the final position of 
concretes in the 3D environment. To enhance the visual 
effect, table 1 shows the concrete mappings. Comparison 
with other researches, the proposed method 2GA  owns 
rather rich features for concrete visualization. 
Table 1. Concrete mappings 
Characteristics [6] [10] [4] This work
Concrete Particles Atom Shape Sphere 
Concrete measure Blob size - Size Size  
Concrete 
association 
Particle  
clustering 
Color Area Color cube 
Concrete 
relationship 
Cylindrical 
blob  
Cons 
 
Edge 
color 
Cylindrical 
color  
Relationship 
strength 
Potential 
energy  
- 
 
Cylindrical 
diameter 
Allocation 
Method 
Hill- 
climbing 
Spring- 
embedding  
Genetic 
algorithm  
Multi view - Supported 
lNaN
1θ > xn
cR
maxRRc >
 
Figure 2. 2GA  flow chart 
