1 
 
行政院國家科學委員會補助專題研究計畫 ■ 成 果 報 告   
□期中進度報告 
 
結合本體論與行動代理人之雲端環境醫療資訊/知識檢索平
台建置與研究 
 
 
計畫類別：■ 個別型計畫  □ 整合型計畫 
計畫編號：NSC 100 – 2221 – E – 305 - 013 
執行期間： 100 年 8 月 1 日至 101 年 7 月 31 日 
 
計畫主持人：張玉山 
共同主持人： 
計畫參與人員：范植添 
 
 
成果報告類型(依經費核定清單規定繳交)：■精簡報告  □完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
■出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、列管計
畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年■二年後可公開查詢 
          
執行單位：國立臺北大學資訊工程系 
 
 
 
中   華   民   國  101 年  7 月  31 日 
3 
 
狀。我們先以 Protégé來建立貝式-本體論模
式及其推論規則，再利用 Jena 來推論憂鬱
症患者的行為是屬於那一種憂鬱症。從結果
可以發現，這個模式及機制可以順利的推論
及診斷憂鬱症的病症。 
此外，我們也將本年度相關的研究整理
投稿相關的國際期刊及國際會議論文，成效
可說是相當良好。 
 
二、 研究目的 
就如前所述，本計畫除了將本體論和貝
氏網路做結合外，更將此應用在診斷憂鬱症
上。因此本計畫的重點在於如下: 
1. 醫療醫學資訊/知識本體論之建立。 
2. 本體論為基礎之資訊/知識檢索行動代
理人設計。 
3. 建構醫療相關之知識雲端平台。 
4. 本體論、智慧型行動代理人與雲端平台
之整合。 
5. 建構醫療資訊/知識檢索web services中
介軟體與整合測試。 
 
三、 文獻探討 
本體論(Ontology)[7]，是一種概念的定
義。該如何使電腦判斷概念，並且加以推
論，這便是本體論存在的目的。本體論提供
一個知識模型(Knowledge model)，來表示該
概念的架構。而不同的本體論語言，提供不
同的便利性，在近期，被 W3C 認可的標準
本體語言是網路本體語言 (Web Ontology 
Language,OWL)[5,9]，且其子語言分別為
OWL Lite、OWL DL 和 OWL Full。 
OWL Lite 為提供給用戶只需要一個分
類層次和簡單限制。其優點是，對使用者來
說輕易理解，對建構者來說，容易維護。但
其缺點是，所能表達的範圍被限制住了。 
OWL DL(Description Logic) 可 視 作
OWL Lite 的擴充，是用於支援那些需要強
大的表達能力且須保持計算完備性和可判
定性。因為每種 OWL 子語言各有其優缺
點，所以該選擇何種子語言來建構本體論也
是需要做考量的一點，而由於憂鬱症其牽扯
不只憂鬱症該種病症，更涉及到其他生理心
理層面的病癥，諸如，輕鬱症、不孕症、遲
緩、產生幻覺、頭痛等等。 
而在各論文中[1,4,6,12,13]，雖然不斷的
提及有關於 Ontology 和 Bayesian Network
一起應用的部分，但通常皆只有著墨於
Ontology 部分的概述，對於 Bayesian 
Network，以及推論引擎的 Rule 建立，頂多
提及，並無詳述。 
在[13]中，解釋了本體論，卻沒有詳述
是如何將知識轉譯成本體論。[4,12]，雖然
提及了 Bayesian Network，但是並無詳述，
是如何運用與設定。[6]中，沒有提到作推論
時引擎所需的 Rule 編撰。[1,14]，詳述了如
何架構貝氏本體論，但是仍缺 Rule 的設定。 
 
四、 研究方法 
在這個計劃中我們分成下列幾個方向
同時進行。 
 
4.1 憂鬱症之本體論 
   我們設計了憂鬱症病人的本體論，如圖
一所示。在這本體論中要根據病患的病癥推
論出醫師可能所要的憂鬱症資訊或知識需
要有複雜的推論規則(Inference Rule)。這些
推論規則將成為重要的知識推論引擎的一
部份。 
 
5 
 
論系統中，並且可直接透過推論系統做運
算，我們在推論法則中下手，更改原先在本
體論的輸入模式。 
  我們在使用者輸入時，會一併請使用者
輸入病人相對應病徵的程度數值 1 至 100，
此值是使用者評估病患一個月中病徵出現
的頻率，並以此值，作為貝氏網路做為運算
變數之一。系統在收集完病患相關資訊後，
至醫療中心所提供的資料表查詢相關資
料，並將查到的相關值回傳，此對應值是病
患對應到各病症的機率關係。系統彙整各對
應值和各病症至推論規則上，以供推論引擎
推論。推論引擎推論出結果，匯出結果後，
接著由系統根據推論引擎推論的結果，建構
出患者的憂鬱症貝氏本體知識模型。 
 
圖四: 系統架構圖 
 
4.4 實作結果 
 在實作的部分，首先，我們先要求使用
者輸入病患的所有病徵，例如：Bradykinesia
等，接著會以使用者輸入的病徵，建出 OWL
檔，即為該病患的本體知識模型，如圖五。 
 
 
圖五: 建立病患本體知識模型 
 
 接著，以方才的知識模型為基礎，將此
知識模型利用 Jena 的推論引擎。當 Jena 推
論引擎得到結論時，會同時將新的結果加入
到病患的本體知識模型當中，可以利用
Protégé將病患知識模型呈現出來，如圖六，
亦可用查詢的方式，如圖七。在推論後，可
以看到推論引擎 Jena 推論出，該病患(WR)
有輕鬱症(Dysthymia)之可能。 
 
圖六:推論後的貝氏本體知識模型 
 
 
圖七: 以查詢的方式來看病患的本體模型 
 
五、 結果與討論 
本計畫主要是擴充醫療體系，防止醫療
死角，也就是常受忽略的憂鬱症，我們已經
完成本體論與貝氏網路等理論的開發，系統
的實作。從其結果可以知曉系統供應使用者
查詢憂鬱症資訊/知識，並且建構病人憂鬱
症貝氏本體知識模型。我們也計畫將此結
果撰寫成國際研討會論文及國際期刊論文。 
另外我們在此計畫補助下，亦發表了 1
篇 SCI 等級的國際期刊論文[15] 及四篇國
際研討會論文[2,17,19,20]，由此不僅在學
術發表及人員的訓練上我們都有不錯的成
果。 
 
六、 成果自評 
本成果自評部份，我們將分三個部份來
說明，如下： 
以計畫產出而言，本計畫中…我們可見
本計畫論文產出而言，有相當不錯的成果。 
從人材培訓而言，由於本計畫中除了理
論的推導外，有系統的實作，學生得以學習
7 
 
District Medical Data Center Based on 
Cloud Computing,”The 5th International 
Conference on Computer Science & 
Education Hefei, China. August 24–27, 
2010, pp. 1424-1427. 
22. 劉立 , “智慧型醫療物聯網—雲端運
用 ” , 
http://salmon.rfidlab.iecs.fcu.edu.tw/works
hop/slides/workshop_4_4.pdf   
23. 鍾明男, “雲端服務可獲利商業模式之
探索性研究,” 國立臺灣科技大學資訊
管理系, 碩士論文, 2009. 
 
 
2 
 
generate mobile agent for retrieving desired information on 
cloud platforms. The framework can assist users to 
automatically generate mobile agents for retrieving desired 
information spread over cloud platforms without user’s 
intervention. But, the framework did not aim at the service 
discovery for cloud environment.  
Wang et al. [14] proposed a mobile agent-based 
architecture for service-oriented knowledge grid to implement 
KG-services by utilizing mobile agent technology. The 
proposed architecture integrates MA technology and 
knowledge grid technology and improves the performance of 
knowledge grid such as reducing network traffic, enhancing 
reliability and intelligence of KG-Services. Similarly, the 
framework did not aim at the service discovery for cloud 
environment. 
Yang [15] was to design a ubiquitous interface agent based 
on the ontology technology and interaction diagram with the 
backend information agent system, i.e., OntoIAS (Ontology-
supported Information Agent Shell), in cloud computing 
environments. The agent adopts the CURRL (Canonical User 
Request Representation Language) to fast and precisely deal 
with user query commands. Through the techniques of packet 
decoding and recognizing, the agent employs CURRL to 
transform user commands into internal canonical format to 
conveniently process those commands by OntoIAS, which can 
avoid numerous, jumbled, and incorrect information torrents 
that result in misunderstanding of the information intention of 
users. Similarly, the framework did not aim at the service 
discovery for cloud environment. 
Han and Sim [16] presented a Cloud service discovery 
system (CSDS) that aims to support the Cloud users in finding 
a Cloud service over the Internet. The CSDS interacts with 
Cloud ontology to determine the similarities between and 
among services. The project attempts in building an agent-
based discovery system that consults ontology when retrieving 
information about Cloud services. Although the work is similar 
to our proposed framework, the main difference between them 
is that the work needs to launch a generic search engine to 
searching desired cloud services before reasoning suitable 
service for client, which is obviously time consuming. In our 
framework, searching cloud services can be completed before 
user submitting a query.  
III. CLOUD SERVICE DISCOVERY SYSTEM 
The system is mainly divided into three layers; the first 
Layer is Application Layer, the second is Context Layer 
including major agents of the system, and the third layer is 
Physical Layer, which might involve the data center and 
hardware resources behind the cloud, as shown in Figure 1. 
The following subsections describe individual components and 
their roles in order to understand the principles behind the 
operations of system.  
A. Application Layer 
The layer aims at supporting users to submit their query and 
to get reply from the platform. In the layer, we design and 
implement a User Agent (UA) that can help user to send a 
query in terms of natural language and get reply. The UA 
knows how to interact with other agents in the platform. In 
other words, the UA knows the target of query request and the 
semantics of communication context with each other.  
  
Figure 1.  Overview of system architecture. 
B. Context Layer 
The layer is the core layer in the framework. It is composed 
of Inference Module, Cloud Service Search Module, and Result 
Collection Module. These modules totally include four agents 
to complete user’s request. We will depict the modules and 
agents follows. 
1) Inference and Discovery Module 
The module is responsible for reasoning user query in terms 
of natural language sent from user agent to know what user’s 
want and translate user query to machine identifiable format. 
This module mainly consists of two agents including 
Reasoning Agent (RA) and Discovering Agent (DA), and a 
domain knowledge repository. The domain knowledge 
repository contains information, ontology, and rules; so that the 
RA knows how to translate the user query into machine 
identifiable format. The details of domain knowledge 
repository can refer to our previous work [13]. The work of two 
agents is described as follows: 
a) Reasoning Agent 
Since user sends query in terms of natural language that 
involves user’s demand with search criteria, but is not an 
identifiable format by generic inference engine. It is necessary 
a RA and some ontology and rules to inferring what the user 
wants. The ontology and inferring rules, as mentioned above, 
are kept in the domain knowledge repository. While the RA 
receives a query from UA, it will consult the domain 
knowledge to infer the meaning of user request and translate 
the request into machine identifiable format and save it as a file, 
namely QRDF (Query Request Description File). The file will 
be sent to the DA to further processing. In addition, in order to 
accurately look for user desired service, the RA also send the 
filter criteria embedded in the user query to Filter Agent in the 
Result Collection Module.  
4 
 
Due to the diversity of cloud services, we have to classify 
accurately them according to cloud hierarchy, such as SaaS, 
PaaS, and IaaS; so that we can accurately define a class for 
certain service, as shown in Figure 2. For example, the Gmail is 
a kind of application, so it is belong to the “SaaS” class. Based 
on the hierarchy of cloud service, we can classify all cloud 
service into the classes. 
Next, we construct an ontology model based on SOA 
ontology for cloud services using Protégé 5 . Due to the 
limitation of space, we only show a part of PaaS ontology in 
the Figure 3. Of course the ontology can be extended 
dynamically.  
 
Figure 3.  Partial PaaS ontology 
B. Inference Rule  
As well known, ontology is used to concretize a specific 
concept. Each node represents an individual.  In order to verify 
the correctness of user query, we have defined inference rule 
which is executed by Jena 6  inference engine. The kind of 
inference rule we also refer to our previous work [13] to 
construct. In addition, the FA also needs to infer QRDF to 
understand what the criterion has in the query.  
Therefore, we construct some inference rules to infer 
desired information. To explain the inference rules we utilize 
simple example to demonstrate partial inference rules, as 
shown in Figure 4.  The example we demonstrate while a “user 
wants to find a VeryPopular album cloud service” on the 
Internet. Obviously, in the case the DA discovers various album 
services from Cloud Service Repository and delivers these 
services to FA. The FA will infer the all services using the 
criterion “VeryPopular”.   
In the cloud service ontology, we define a property 
“hasServiceCountValue” to an Individual for representing the 
use ratio in the same kind of cloud service. For example, if the 
                                                           
5 http://protege.stanford.edu/ 
6 http://jena.sourceforge.net/ 
use ration of a cloud service is larger than 80%, it means that 
over 80 person use the service in 100 users. Therefore, the 
service will be PrettyPopular. If the use ratio is great than 40 
and less than 79, we call it is VeryPopular, otherwise it is 
NormalPopular. Figure 4 shows the inference rule for the 
criterion. These rules can be executed by Jena inference engine. 
Similarly, we can also define various inference rules for a 
variety of user criteria.  
 
Figure 4.  Partial  inference rules 
V. SYSTEM IMPLEMENTATION  
Here we implement a prototype to demonstrate service 
discovering using the proposed framework. The prototyping we 
exploit JADE7 as the mobile agent platform to design agents. 
These agents use ACL message to communicate with each 
other. In addition, the query sentence and suitable service 
inference, we import the Jena inference engine into RA and FA; 
so the agents can infer related rules. We also, in this section, 
show two examples to demonstrate the service discovery.  
 
Figure 5.  Multi-agents platform in our system. 
                                                           
7 http://jade.tilab.com/ 
6 
 
class and property, the evaluation result shown as Recall2 in 
Figure 9; the other is increasing the number of inference rules, 
the evaluation result shown as Recall3 in Figure 9. We 
compare the Recall2 with the Recall1, the result shows that 
some query requests can increase from 20% to 40%. In 
addition, we also add 21 inference rules, as shown of Recall3, 
the result shows that some query requests can increase from 
25% to 33%. It is shown that the more number of classes and 
property of ontology and the number of inference rules, the 
higher Recall is. According to the evaluations, it is shown that 
the system can effectively discover user desired cloud service.  
 
 
Figure 9.  Recall comparison 
VII. CONCLUSION AND FUTURE WORK 
In the paper, we have proposed a framework that integrates 
mobile agent and ontology and developed a prototype for 
service discovery in cloud environment. The framework 
mainly assists users to discovering suitable service according 
to user demand. User can submit his flat-text based request for 
discovering required service. The request will be automatically 
deduced by a Reasoning Agent (RA) based on predefined 
ontology and reasoning rule, and then be translated into a 
QRDF (Query Request Description File) that defines the 
behavior of the query request. In addition, we also implement 
a prototype to demonstrate the usability of the framework. We 
also utilize the Recall and Precision to evaluate the accuracy 
of the system. It shows that the proposed can effectively 
discover user desired cloud services automatically.  
In the future, we will aim at implementing the entire 
system and do more evaluations and comparison. In addition, 
we think that the approach can be applied to other domains 
smoothly to find out useful services.  
REFERENCES 
[1] M. Armbrust, A. Fox, R. Griffith, A. D. Joseph, R. Katz, A. Konwinski, G. 
Lee, D. Patterson, A. Rabkin, I. Stoica, M. Zaharia, “Above the Clouds: 
A Berkeley View of Cloud Computing,” is available at 
http://www.eecs.berkeley.edu/Pubs/TechRpts/2009/EECS-2009-28.html 
[2] J. Geelan, “Twenty one experts define cloud computing,” Virtualization, 
August 2008. Electronic Magazine, article available at 
http://cloudcomputing.syscon.com/node/612375?page=0,1. 
[3] M. A. Vouk, ”Cloud Computing – Issues, Research and Implementations,” 
In Proc.30th International Conference on Information Technology 
Interfaces, June 2008, pp. 235–246. 
[4] M. Koehler, M. Ruckenbauer, I. Janciak, S. Benkner, H. Lischka, W. N. 
Gansterer, “A grid services cloud for molecular modelling workflows,” 
International Journal of Web and Grid Services 6(2) 2010: 176-195. 
[5] W.-C. Shih, C.-T. Yang, S.-S. Tseng, “Ontology-based content 
organization and retrieval for SCORM-compliant teaching materials in 
data grids,” Future Generation Computing Systems 25(6) 2009: 687-694. 
[6] A. Flahive, B. O. Apduhan, J. W. Rahayu, D. Taniar, “Large scale 
ontology tailoring and simulation in the Semantic Grid Environment,”  
International Journal of Metadata, Semantics and Ontologies 1(4) 2006: 
265-281. 
[7] A. Flahive, D. Taniar, J. W. Rahayu, B. O. Apduhan, “Ontology tailoring 
in the Semantic Grid,” Computer Standards & Interfaces 31(5) 2009: 
870-885. 
[8] B. ZadJabbari, P. Wongthongtham, F.K. Hussain, “Ontology based 
Approach in Knowledge Sharing Measurement,” Journal of Universal 
Computer Science 16(6) 2010: 956-982. 
[9] S. S. Manvi, M. S. Kakkasageri, J. Pitt, “Multiagent based information 
dissemination in vehicular ad hoc networks,” Mobile Information 
Systems 5(4) 2009: 363-389. 
[10] J. Luo, X. Ni, “A clustering analysis and agent-based trust model in a 
grid environment supporting virtual organisations,” International Journal 
of Web and Grid Services 5(1) 2009: 3-16. 
[11] E. Camponogara, R. B. Shima, “Mobile Agent Routing with Time 
Constraints: A Resource Constrained Longest-Path Approach,” Journal 
of Universal Computer Science 16(3) 2010: 372-401. 
[12] A. B. Waluyo, B. Srinivasan, D. Taniar, “Research on location-dependent 
queries in mobile databases,”Comput. Syst. Sci. Eng. 20(2) 2005: 79-
95. 
[13] Y. S. Chang, C. T. Yang, Y. C. Luo, “An Ontology based Agent 
Generation for Information Retrieval on Cloud Environment,”Journal 
of Universal Computer Science, 17(8) 2011: 1135-1160. 
[14] G. Wang, T. Wen, Q. Guo, X. Ma, “A Knowledge Grid Architecture 
Based on Mobile Agent,” In Proc.: Second International Conference on 
Semantics, Knowledge, and Grid, 2006, pp. 48 – 51. 
[15] S. Y. Yang, C. L. Hsu, D. L. Lee, “An Ontology-supported Ubiquitous 
Interface Agent for Cloud Computing- Example on Bluetooth wireless 
technique with Java Programming,”In Proc.: Ninth International 
Conference on Machine Learning and Cybernetics, Qingdao, 2010, pp. 
2971-2978. 
[16] T. Han, K. M. Sim, “An Ontology-enhanced Cloud Service Discovery 
System,”Lecture Notes in Engineering and Computer Science 2180(1) 
2010: 644-649. 
[17] Y. S. Chang, H.-T. Cheng, “A scientific data extraction architecture using 
classified metadata,” Journal of Supercomputing, Journal of 
Supercomputing, 60(3), 2012: 338-359. 
 
 2 
 
    每年這個領域的專家學者都會齊聚在一起共同分享研究成果，今年亦不例外，
這個會議由 9月 2日及 9月 4日共分 3天。除了一般的會議論文報告外，值的注意
的是還有 5個 keynote speech，第一天(9月 2日)是由美國 National Institute of 
Standards and Technology的 Jeffrey Voas博士主講，題目是「Smart Phones, Mobile 
Applications and Clouds in Foreign Wars」從這個題目一看就知道是相當新的研
究題目及方向，因此參加了這個演講，Dr. Jeffrey Voas 在演講中主要是討論由一
些智慧型裝置所延伸出來的威脅，包括電腦病毒、資料的竊取及經由 USB來偷竊重
要資料，Dr. Voas也針對這些議題提了一些目前他們正在進行的一些研究計畫，從
他的演講也可以激發一些研究的靈感，雖然目前所進行的這個計畫並沒有考量到這
個部份，在未來亦可有相關的研究。 
    第二場 Keynote 則是由我國的宜蘭大學校長趙涵捷校長主講的「Internet of 
Things and Cloud Computing for Future Internet」，去聽這場 Keynote 除了是我
們台灣的學者，有一些親切感外，這個題目也與本計畫的研究有一些關聯。趙校長
的演講主要是將二個目前最火紅的研究主題「Internet Of Thing」及「Cloud 
Computing」結合在一起，形成下一世代的網路平台。IOT主要是為了無縫的整合目
前的各種網路連結的設備(networked things)及各種網路平台(networks)，而雲端
運算則是提供 IOT的後端運算環境，包含軟體、運算資源、儲存設備、及運算平台
等。因此這二者的結合將可以完美的提供未來的的網際網路應用的所有環境。趙校
長也提了一些在結合二者之架構與開放式服務結構與相關的相議，跟所有與會者共
享研究的結果。 
  
(a)第一天的註冊                (b)與趙校長及中正大學黃仁竑教授的合影 
 
 除此之外，本人的論文則是安排在趙校長演講完之後發表，發表的時間則排在
11:00-12:20，發表當場也與一些與會的學者討論這個題目所延伸的相關議題，與會
的學者也提出了一些問題加以指教，使得本人受益良多，研究可以更加的完美，必
需要感謝這些與會的學者。 
 4 
都提供了很多相關的問題及方法論，非常有趣。例如 Leung 教授講的 Vehicles 
Network相關的應用、研究議題及他們在這方法的研究成果，就感覺受益良多。 
 另外，第二天及第三天也參加了一些論文報告，雖然有些論文的內容不是那麼的
清楚，但報告者所報告的內容都讓人感受到研究的深度及精神是值得敬佩的，因此
在這次的會議中，可以說成果豐碩。 
 
二、與會心得 
 此行算是收獲非常多，第一是在短短的三天中參加多場的 keynotes，聽到國際間
一些先進的研究及其成果，以作為未來研究的方向參考，特別是 Jeffrey Voas 博士
主講「Smart Phones, Mobile Applications and Clouds in Foreign Wars」、宜蘭
大學趙校長所主講的「Internet of Things and Cloud Computing for Future 
Internet」，及 Ivan Stojmenovic教授所講的「Green Computing in Mobile Cloud」，
都提供了很多很好的研究方向。第二是與多位國際學者交換研究心得，也經由研究
成果的相互討論了解目前研究之不足與未來要繼續的方向。特別是在報告論文及主
持會議時對於與會者及報告者的討論，使得印象更為深刻，未來應該多參與這方面
的會議，以便可以跟國際接軌。 
 
三、考察參觀活動(無是項活動者略) 
由於大會安排在風景美麗的班夫國家公園，離研究單位及大學都有很長的距離，
所以大會只安排 tour，並沒有安排任何考察及參觀活動。 
 
四、建議 
  
五、攜回資料名稱及內容 
 論文集光碟一片、相關會議的 CFP、相關研究及成果的 DM 等。 
六、其他 
 
 
 and service
environment
migration w
what the tech
Hao et 
migration pr
framework to
a cost analy
service sele
adopted gene
optimal servi
Amorett
middleware 
clouds, chara
that can be 
mechanisms.
service mig
example in w
able to host t
Zhang e
factoring ser
best use of 
privately-ow
technology o
is a fast freq
 
 
3.1 Federat
Federated B
architecture. 
resource and
system scale
load between
and two rep
Agent, Rec
Migration 
System/Servi
 migration 
. But, they ha
ill affect the
nologies they
al. [4] disc
oblem in a c
 facilitate ser
sis model to
ction and m
tic algorithm
ce migration 
i et al. [5] p
that enable h
cterized by p
replicated b
 They also p
ration, and 
hich services
hem. 
t al. [2] prop
vice for enter
public cloud
ned (legacy)
f the intellige
uent data item
ed Broker 
roker layer 
It is respon
 all behavior
, and migratin
 clouds. The 
ositories; th
onfiguration 
Agent, P
ce Informatio
in a clo
ve not addres
 consumer’s 
 utilized.  
ussed service
loud. They al
vice migratio
 determine th
igration. In 
 to find the o
decisions. 
resented a fr
ighly dynam
eer providers 
y means of 
roposed a P
a Video st
 are pushed t
osed an intel
prise custom
 services al
 data cent
nt workload f
 detection a
is the seco
sible for mo
s of resource
g services an
layer consists
ere are Syst
Decision A
rofiling D
n Database, r
ud computi
sed how servi
ecosystem a
 selection a
so developed
n and design
e tradeoffs 
addition, th
ptimal or ne
amework and
ic and adapti
and by servic
code mobil
ull strategy f
reaming bas
o peers that a
ligent worklo
ers to make t
ong with th
ers. The co
actoring servi
lgorithm, whi
Figure
nd tier in t
nitoring syste
, reconfiguri
d balancing t
 of three agen
em Monitori
gent, Servi
atabase, a
espectively. 
2 
ng 
ce 
nd 
nd 
 a 
ed 
on 
ey 
ar-
 a 
ve 
es 
ity 
or 
ed 
re 
ad 
he 
eir 
re 
ce 
ch 
en
vo
ap
ac
3.
Th
cl
sy
hy
in
dy
co
w
cl
w
ca
vi
an
In
ad
co
ne
pr
1: System arch
he 
m 
ng 
he 
ts 
ng 
ce 
nd 

ables factor
lume but a
plication dat
cess.  
 System D
is section pr
oud. Figure 1
stem, which 
brid environm
 pay-per-use 
namic prov
mputing pla
ords, the pro
uster from p
hile the load
pability is pr
rtual machin
d KVM. The
terface to ma
dition, priva
nnected via v
twork if do n
ivate cloud an
itecture 
System Mo
responsible 
remainderin
nodes in 
communica
resided in 
information
message th
The inform
follows: 1
ing incoming
lso on data 
a popularity. 
esign  
esents the sy
 shows the ar
involves a 
ent.  Since t
scheme, in g
ision of r
tform and re
posed system
ublic cloud f
ing of privat
ovided by m
e, such as X
tools provide
nage the reso
te cloud an
irtual private
ot consider t
d public clou
nitoring Age
for collec
g resource r
the hybrid c
te with the C
each cluster
 or passivel
at contains th
ation involvin
) cluster's n
 requests n
content, up
It is only ap
stem design 
chitecture of 
federated bro
he public clo
eneral, it sh
esources in
quired stora
 can start ne
or new jobs
e cloud is o
ost virtualiza
EN, Microso
 Application 
urce of virtua
d public cl
 network (VP
he security i
d. 
 
nt (SyMA): 
ting the l
elated inform
loud.  It 
luster Admin 
 periodically
y receive t
e informatio
g in the hea
ame, 2) c
ot only on
on changing
plied to data
of the hybrid
the proposed
ker and the
ud is charged
ould provide
volving the
ge. In other
w computing
 dynamically
verrun. Such
tion tools of
ft’s Hyper-V
Programming
l machine. In
oud can be
N) or public
ssue between
The agent is
oading and
ation of all
will actively
Agent (CAA)
 to get the
he heartbeat
n from CAA.
rtbeat are as
luster's load
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
4 
 
in the private cloud, excepting exterior job submitted 
by users. Therefore, all jobs invoked by users are 
queued in the private cloud first. When the load of the 
private cloud exceeds, the SyMA will initiate service 
migration process.  
The policy of service migration is used to make a 
decision for when the service migration process will be 
initiated. In this prototype, three intuitive algorithms 
are used to demonstrate the feasibility and verify the 
proof-of-concept: Job Count (JC), Size of Job (SJ), 
and Estimated Finish Time (EFT).  
    The JC scheme is the simplest one. It only makes 
decision according to the number of job in the both 
clouds. In other words, the number of job in the private 
cloud JCPR is larger a threshold TC than in the public 
cloud, JCPU.  As shown in Equation (1) 
CPUPR T-JCJC      (1) 
    In this case, the SeMA will pick the (JCPU +TC+1)th 
job in the queue of private cloud, and trigger it to be 
migrated. For example, if the JCPR is equal to 10, the 
JCPU is equal to 4, and the TC is equal to 2. Therefore, 
the 7th job will be migrated to public cloud. The use of 
TC is to avoid migrating service frequently between 
both clouds.  
    The SJ scheme is to make the migration decision 
based on the total size of jobs in the both clouds. When 
the total size of jobs in the private cloud 

n
i
iSJ
1
is 
larger a threshold TS than in the public cloud 

m
k
kSJ
1
. 
Where the n is the number of job in the private cloud; 
the m is the number of job in the public cloud. As 
shown in Equation (2). 
 
 

n
i
m
k
ki TSJSJ
1
S
1
      (2) 
In the case, the SeMA will pick the 



 

 

1
1
S
m
k
k TSJ th job in the queue of private 
cloud, and trigger it to be migrated. The ceiling 
function   is to obtain the bound of size of the job. 
For example, if the total size of job in public cloud is 
10Mbytes, the TS is equal to 2Mbytes, and the size of 
jobs in private cloud are 3, 4, 3, 3, 2, 3, 4 Mbytes 
respectively. The 5th job (2Mbytes) will be migrated to 
public cloud because the   13210   (3+3+4+3); so 
that the 5th job will be migrated. The use of TS is to the 
same as TC. 
    The EFT scheme is to make the migration decision 
based on the estimated finish time of jobs in the both 
clouds. When the total finish time of jobs in the private 
cloud 

n
i
iT
1
is larger a threshold TT than in the public 
cloud 

m
k
kT
1
. Where the n is the number of job in the 
private cloud; the m is the number of job in the public 
cloud. As shown in Equation (3). 
 
 

n
i
T
m
k
ki TTT
1 1
   (3) 
In the case, the SeMA will pick the 



 

 

1
1
T
m
k
k TT th job in the queue of private 
cloud, and trigger it to be migrated. The ceiling 
function   is to obtain the bound of finish time of job. 
For example, if the total finish time of jobs in public 
cloud is 100s, the TT is equal to 20s, and the finish time 
of jobs in private cloud are 33, 24, 45, 43, 22, 37, 24 
second respectively. The 5th job (22s of finish time) 
will be migrated to public cloud because the 
  14520100   (33+24+45+43); therefore the 5th job 
will be migrated. The use of TT is to the same as TC. 
 
5. Prototyping and evaluation 
Prototyping is a useful approach of proof-of-concept. 
We prototype the system by implementing all the 
agents described in the Section 3, using the agent plat-
form JADE v3.5.1 in Java language. In addition, the 
cloud platform is the Hadoop environment with First In 
First Serve (FIFS) job scheduling scheme. In the proto-
type, we first built two clouds, one is for private cloud, 
and the other is for public cloud, all are connected by 
100Mbps Ethernet in a LAN. We then deploy the 
JADE environment and implement the CAA on top of 
Hadoop platform. 
 
5.1 Prototyping 
First, we deployed the implemented all agents which 
can be run and monitored using the JADE. Figure 4 
shows the agents run on the federated layer. Figure 5 
shows the agents run on the cloud. In the Figure 5, two 
clouds are managed by a JADE platform, the hdp001 is 
the platform run on named private cloud, while hdp006 
is on public cloud. Each cloud has a CAA, for instance, 
the CAA is named as hdp001admin in the hdp001. 
Other agents in the platform are the JAs. In the proto-
typing, we assume that all jobs are submitted to private 
cloud before migration. The jobs are migrated to public 
cloud according to migration policy of system agents. 
Figure 5 also shows some JAs have migrated to public 
cloud after a time period.  
Figure 6 shows the snapshot of job information in 
the hybrid cloud, which is caught using Hadoop’s Job 
Tracker. In the snapshot, some jobs are run on the 
hdp001, and the others run on the hdp006. These jobs 
are all managed by the CAAs in both private and pub-
lic cloud.   
 Figure 8: To
Figure 9: The 
job 
 
Table 1: The
ments 
 5 
Total 
tasks 
30
ta
 
Figure 
task migratio
the evaluatio
is the reason
Figure 9 is la
The result sh
scheme is sli
loading, for i
 
6. Conclus
In this pap
automatic int
hybrid clou
technique is 
system beha
hybrid cloud
service mig
prototype tha
public cloud
mechanism o
and ITRI’s 
evaluation, it
to  hybrid clo
    In the futu
deploy the a
two issues a
Therefore, t
business prac
 
tal latency com
comparison of
count scheme a
 number of t
Jobs 10 J
0 
sks 
550
task
9 shows the 
n between JC
n, the numbe
 why the total
rger than the 
own in the F
ghtly fast than
nstance 20 jo
ion & Futu
er we have
elligent servi
d. In the 
exploited to m
viour, and n
, in order to a
ration betwe
t integrating 
. We demon
n Hadoop pl
public cloud
 shows that t
ud and work 
re, we will co
gents in the 
re most imp
he framewo
tically.  
parison in term
 total migration
nd size of job 
otal tasks in t
obs 15 Job
 
s 
850 
tasks 
total latency
 scheme and
r of task in a 
 latency of JC
same scheme
igure 9 pres
 the JC schem
bs simultaneo
re Work 
 proposed 
ce migration 
framework, 
anage all res
egotiate all 
chieve autom
en the clou
our private cl
strate the se
atform betwe
. From the p
he framework
well.  
nsider cost a
federation br
ortant in the
rk can be 
 of Job Count
 latency betwe
scheme 
he third expe
s 20 Jobs
1100 
tasks 
 comparison 
 SJ scheme. 
job is varied.
 scheme in t
 in the Figure
ents that the 
e in the high
usly submitte
an agent-bas
framework on
mobile age
ources, monit
actions of t
atic, intellige
ds.We built
oud with ITR
rvice migrati
en our platfor
rototyping a
 can be appli
nd QoS issue
oker, since t
 hybrid clou
applied to t
6 
 
 
 
en 
ri-
of 
In 
 It 
he 
 8. 
SJ 
er 
d. 
ed 
 a 
nt 
or 
he 
nt 
a 
I’s 
on 
m 
nd 
ed 
 to 
he 
d. 
he 
A
Th
Sc
99
R
N
R
[1
[2
[3
[4
[5
[6
[7
[8
[9
[1
[1
[1
cknowledg
is work wa
ience Counci
-2628-E-305
esearch Instit
o. B0-A0007.
eference:
]  George Pal
Internet Co
14, No. 5, 2
]   Hui Zhang
Chen, Ak
Factoring 
“ 2009 Con
]  Stephen K
Migration 
Internation
2011, pp.1-
]  Wei Hao, 
“Dynamic 
Clouds,“ 3
Software an
]   Michele Am
Francesco 
Cloud: Co
Conference
Simulation
]  Ian Fos
Kesselman
Need Each
York, New
]   Zehua Zhan
Cloud Com
IEEE Int
Computing
pp. 642 – 64
]  Rocco Ave
Rak, Salvat
Agent Bas
Conference
Intensive Sy
]  J. Octavio 
“Self-Organ
Cloud Com
Conference 
Science (Cl
0] F. Bellifemi
A White Pap
/http://jade.t
.pdf. 
1] B. Sotomay
“ Virtual I
Hybrid Clou
5, 2009, pp.
2] R. Van den
“Cost-Optim
Deadline C
Internationa
(CLOUD), 
ement: 
s partially s
l of Republic
-001 and b
ute of Repub
 
lis, “Cloud Com
mputing,” IEE
010, pp. 70-73
, Guofei Jian
hilesh Saxen
for a Hybrid
gress on Servic
aisler and W
in a Cloud 
al Conference o
10. 
I-Ling Yen a
Service and
3rd Annual IE
d Applications
oretti, Maria 
Zanichelli, “S
de Mobility in
 on  High P
(HPCS), pp.19
ter, Nichola
,”Brain Meets B
Other,” AAMA
York, USA. 
g and Xuejie 
puting Federati
ernational C
and Intelligent
6. 
rsa, Beniamino
ore Venticinqu
ed Cloud Sy
on Complex
stems (CISIS)
Gutierrez-Gar
izing Agents 
puting,“ 2010
on Cloud C
oudCom), pp. 5
ne, G. Caire, A
er 2003“. 
ilab.com/paper
or,  R.S. Mont
nfrastructure M
ds,“ IEEE Inte
 14 – 22. 
 Bossche, K. V
al Scheduling
onstrained W
l Conference
2010, pp. 228-2
upported by
 of China und
y Industrial 
lic of China
puting: The N
E Internet Co
.  
g, Kenji Yosh
a, “Intellige
 Cloud Comp
es - I pp.701-7
illiam H. Mo
Architecture,“ 
n System Scie
nd Bhavani T
 Data Migr
EE Internatio
 Conference, p
Chiara Laghi, 
ervice Migrati
 SP2A,“  201
erformance C
6-202.  
s R. Jen
rawn: Why G
S'04, July 19­
Zhang, “Realiz
on Based on M
onference o
 Systems, 20­2
 Di Martino,
e, “Cloud Age
stem,“ 2010
, Intelligent 
, pp. 132-137. 
cia and Kwan
for Service C
 IEEE Second
omputing Te
9-66.  
. Poggi, G. Rim
s/2003/WhiteP
ero, I.M. Llor
anagement i
rnet Computin
anmechelen, 
 in Hybrid Ia
orkloads,“ 20
 on Cloud
35.  
 the Nation
er Grant No.
Technology
 under Grant
ew Frontier of
mputing, Vol.
ihira, Haifeng
nt Workload
uting Model,
08. 
ney, “Service
44th Hawaii
nces (HICSS),
huraisingham,
ation in the
nal Computer
p.134-139. 
Fabio Tassoni,
on within the
0 International
omputing and
nings, Carl
rid and Agents
23, 2004, New
ation of Open
obile Agent,”
n Intelligent
2 Nov. 2009 .
 Massimiliano
ncy: A Mobile
 International
and Software
g-Mong Sim,
omposition in
 International
chnology and
assa, “JADE:
aperJADEEXP
ente, I. Foster,
n Private and
g, Vol. 13, No.
J. Broeckhove,
aS Clouds for
10 IEEE 3rd
 Computing
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：張玉山 計畫編號：100-2221-E-305-013- 
計畫名稱：結合本體論與行動代理人之雲端環境醫療資訊/知識檢索平台建置與研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100% 
目前已經有一篇
發表於 SCIE 等級
的 Personal and 
Ubiquitous 
Computing 國際期
刊, 目前也正在
整理 , 要結合二
篇國際會議論文
之成果, 延伸成
一篇國際期刊論
文 
研究報告/技術報告 0 0 100%  
研討會論文 4 2 200% 
篇 
目前已經發表四
篇, 其中三篇刊
登在 IEEE 的資料
庫中, 一篇是在
IET 的資料庫中 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
國外 
技術移轉 
權利金 0 0 100% 千元  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
一篇 SCI-E 等級的國際期刊發表於 Personal and Ubiquitous Computing, 四篇會議論文
分別發表於: 二篇在 9th IEEE International Conference on Ubiquitous Intelligence and 
Computing, 一篇在 the 5th IET International Conference on Ubi-Media Computing 
(U-Media 2012), 及一篇在 The 2012 IEEE International Conference on Systems, Man, and 
Cybernetics (IEEE SMC 2012) 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
本研究已發表一篇SCI-E等級之國際期刊, 四篇國際會議論文, 這四篇會議論文都跟雲端
運算有關, 因此有其相關性, 我們也將以其中二篇為藍本, 撰寫一篇期刊論文, 此期刊
論文已經著手撰寫中. 另外醫療上的應用, 我們以本體論與貝式網路為基礎用來推論在
憂鬱症上各種症狀所發生之機率, 並且以 protege 及 jena 來實作一個推論機用於憂鬱症
之症狀推論. 未來將把這個推論之方法論在於雲端上. 就此我們將以下列各項來說明我
們研究成果. 
 
學術成就: 目前己發表一篇SCI-E等級之國級期刊及四篇國際會議論文, 未來將延伸其中
的二篇, 撰寫並發表至少一篇國際期刊論文.  
 
技術創新: 以雲端來處理並憂鬱症並推論其機率的相關研究並不多, 在本研究中我們以
雲端運算來處理算是一種技術之創新, 未來持續之研究, 必定有不錯之成果. 
 
社會影響方面: 目前此方面之研究是最新的趨勢, 從研究成果看來是相當可行而且研究
