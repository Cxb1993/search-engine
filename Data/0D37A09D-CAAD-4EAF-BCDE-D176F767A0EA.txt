  i 
設計及製作介面系統產生器用於整合連結前端認知辨識系統及後端
應用軟體系統 
The design and Implementation of Interface Interfacing generator 
for integrating and bridging front-end recognizers and back-end 
application software systems 
計畫編號：NSC97-2221-E-009-062-MY3 
執行期限：97 年08 月01 日至100 年07 月31 日 
主持人：陳登吉交通大學資訊工程系教授 
成果報告目錄 
一、摘要........................................................................................................................ 1 
二、計畫緣由與目的.................................................................................................... 8 
三、結果與討論............................................................................................................ 9 
第一年研究成果................................................................................................ 9 
第二年研究成果.............................................................................................. 10 
3.1 Introduction ................................................................................................ 10 
3.1.1 研究動機............................................................................................. 10 
3.1.2 問題描述與解決方法......................................................................... 11 
3.1.3 研究目標............................................................................................. 13 
3.1.4 設計理念............................................................................................. 14 
3.1.5 研究步驟............................................................................................. 14 
3.1.6 相關名詞............................................................................................. 16 
3.1.7 章節說明............................................................................................. 17 
3.2 Related Work .............................................................................................. 17 
3.2.1 現有多媒體互動的方式..................................................................... 17 
3.2.2 現有的遠端遙控機制與 Rajicon System .......................................... 18 
3.2.3 巨集指令的制定方式-Rajicon System .............................................. 20 
3.2.4 遠端遙控介面的製作-PUC System ................................................... 23 
3.2.5 手機上的介面產生器之介面產生方式............................................. 25 
3.2.6 J2ME 與 Java TV ................................................................................ 26 
3.3 Proposed Method and Algorithm ............................................................... 29 
3.3.1 遠端控制介面系統架構..................................................................... 29 
3.3.2 系統架構說明..................................................................................... 30 
3.3.3 系統運作流程..................................................................................... 32 
3.3.4 應用程式介面載入器......................................................................... 33 
3.3.5 手機內的 Java 程式之介面產生器 ................................................... 37 
3.3.6 應用程式樣板分析............................................................................. 46 
  1 
設計及製作介面系統產生器用於整合連結前端認知辨識系統及後端
應用軟體系統 
The design and Implementation of Interface Interfacing generator 
for integrating and bridging front-end recognizers and back-end 
application software systems 
計畫編號：NSC97-2221-E-009-062-MY3 
執行期限：97 年08 月01 日至100 年07 月31 日 
主持人：陳登吉交通大學資訊工程系教授 
一、摘要 
中文摘要 
在[49]的文獻中指出大部份的應用軟體系統裡幾乎有80%的軟體程式碼是和
介面系統有相關的。介面系統的花費是開發應用軟體時必需面對的議題，應用軟
體的使用者常以人機介面的好壞來評定該應用軟體的好壞。如何快速並簡化介面
系統的開發或修改是一重要的研究主題。一般而言，介面系統可分為人機介面系
統和應用軟體及應用軟體之間的整合介面系統。前者是目前較常見的議題，我們
已在上期國科會三年期研究計畫有開發一使用者人機介面產生器，而後者是強調
在兩種應用軟體之間的整合時所設計的介面系統。本研究針對後者提出一個為期
三年的研究計畫。期待能達到有彈性且易延伸的介面之介面系統架構Interface 
Interfacing System (如圖1 所示)，期待能給軟體開發者在製作應用軟體的介面系
統時能有較彈性且易維護的解決方式。此計畫的完成我們將予提供一簡易的橋
樑，來協助系統開發者將兩種應用軟體(前端的認知器與後端GUI的應用軟體)整
合成以前端認知器為人機介面的應用系統，將可和前期的國科會計畫整體連成一
無縫式的軟體介面系統的整體解決方案。對軟體介面將有重要的貢獻。 
圖1為一介面整合的interface interfacing system應用例子。此例子之後端為
windows 環境內的傷心小棧應用軟體，前端為語音辨識應用軟體。透過此介面
系統可將現有的傷心小棧(solitary)軟體透過語音的方式來做人機介面的操作。其
他應用軟體若要使用相同語音方式來操控應用軟體亦可。此interface interfacing 
system 比傳統的方法在製作介面系統時可以快速且不易出錯，同時可減輕介面
軟體程式的維護。 
 
  3 
5$243$252$253$243$312$310$307$308$297$310$243$263$275$264$250$249$28
0$274$243$315$312$242$314$307$299$242$295$311$306$242$246$245$312$30
6$295$311$306$243$243$254$311$308$312$312$300$6190 
 
圖2、Remote Control Interfacing System Overview 
 
第三年我們將前兩年的研究成果加以應用到多媒體內容的製作及不同的多
媒體播放平台上。大部分的多媒體內容，例如廣告、動畫、簡訊等，都能在各式
的平台上播放。如果使用者能藉由一些簡易的操作裝置(例如手機、PDA 等)來與
顯示裝置(例如 PC、Digital TV)上的多媒體應用系統進行遠端遙控的溝通，這
樣的服務與操作會變得很生動有趣。但由於操作的目標裝置種類很多且控制方式
不同，如果要為每一個既有裝置上的多媒體應用軟體，進行遙控互動程式之撰寫
或局部功能的新增修改時，勢必要知道每個被遙控的多媒體應用系統之原始碼，
才可能為每個互動多媒體系統裝置量身訂作一套遙控溝通的程式。但由於具有互
動功能之多媒體系統種類相當多，這樣的開發步驟與方法，非常浪費時間且沒有
效率。本期計畫提出一個介面產生器(Interface Generator)，像一個程式碼的
剖析器(Parser Generator)的運作功能，能夠為特定裝置上的應用軟體，自動產
生手機操作程式，如此，開發者不需了解及撰寫手機內的遙控溝通程式，這樣的
機制能夠簡化複雜的開發步驟，而使系統之開發與修改更有彈性。本期計劃運用
此介面產生器及其方法實際製作產生三種不同的手機應用軟體為例，使其能和
PC 內相同之應用軟體得以透過遙控的方式來達成互動溝通。透過此實際應用的
例子，我們展示此介面產生器及其方法的可行性及應用性。第三年計畫較詳細的
資料，請參閱第 10 頁至第 88 頁。 
 
關鍵詞：See-through interface、程式碼的剖析器(Parser Generator)、介面產生器、
認知辨識、語音辨識(Speech Recognizers)、軟體工程 
  5 
interface between recognizers and application systems must be quested. 
In the first year of this integration research work, we propose a generic and 
visual interfacing framework for bridging the interface between application systems 
and recognizers through the application system’s front end, applying a visual level 
interfacing without requiring the detailed system design and programming knowledge, 
allowing for modifications to an interfacing environment to be made on the fly and 
more importantly allowing the interfacing with the 3rd party applications without 
requiring access to the application’s source code. Specifically, an interfacing script 
language for building the interfacing framework is designed and implemented. The 
interfacing framework uses a see-through grid layout mechanism to position the 
graphic user interface icons defined in the interfaced application system. The 
proposed interfacing framework is then used to bridge the visual interface commands 
defined in application systems to the voice commands trained in speech recognizers. 
The proposed system achieved the vision of interface interfacing by providing a 
see-through grid layout with a visual interfacing script language for users to perform 
the interfacing process. Moreover such method can be applied to commercial 
applications without the need of accessing their internal code, and also allowing the 
composition of macros to release interaction overhead to users through the automation 
of tasks. Figure 1 also indicates an example that a solitary game or an authoring 
system in window system can be played using the speech recognizer in window 
system after the integration using the proposed approach. 
The main contributions of such interface interfacing system include 1) 
Productivity is reasonable good: system developers no need to trace the low level 
code (without requiring the detailed system design and programming knowledge) 
while integration the recognizer with the application software, 2) Maintenances effort 
is low: allowing fo r modifications to an interfacing environment to be made on the 
fly, and 3) Flexibility is good: allowing the interfacing with the 3rd party applications 
without requiring access to the application’s source code. The 1st year project has 
been implemented, please see the following website. 
(https://nscnt12.nsc.gov.tw/prQUERY/ShowPDF.asp?url_www=298$296$308$242$2
97$299$310$297$305$291$247$285$273$246$250$244$253$244$244$265$245$2
46$246$246$251$253$243$265$243$251$253$243$312$310$307$308$297$310$2
43$263$275$264$250$249$280$274$243$315$312$242$314$307$299$242$295$3
11$306$242$246$245$312$306$295$311$306$243$243$254$311$308$312$312$3
00$6190) 
In the 2nd year project, we continue the concept used in the first year to 
investigate the handheld device environment such as PDA or Smart phone. In this 
case, we use the remote control capability in the smart phone as the front-end 
  7 
features for the multimedia application module in the display device, then he needs to 
know the software source code in the multimedia application module that will be 
remotely controlled, so that he can custom-design a set of remote control programs for 
each multimedia application. However, there is a lot of multimedia application; a 
custom design for each of these applications becomes time consuming and less 
efficient. The 2
nd
 year project has been implemented, please see the following website. 
(https://nscnt12.nsc.gov.tw/prQUERY/ShowPDF.asp?url_www=266$264$276$242$2
47$285$273$246$250$244$253$244$244$265$245$246$246$246$251$253$243$2
65$243$252$253$243$312$310$307$308$297$310$243$263$275$264$250$249$2
80$274$243$315$312$242$314$307$299$242$295$311$306$242$246$245$312$3
06$295$311$306$243$243$254$311$308$312$312$300$6190) 
  Most of the multimedia contents, such as advertisement, motion pictures, 
messages, etc., can be displayed on different kinds of platforms. If user can use some 
simple instruments (such as cell phone, PDA, etc.) to remotely communicate with the 
multimedia application module in the display device (such as PC monitor, digital TV, 
etc.), then the control becomes alive and vivid. But there are various control 
instruments and display devices, and different kinds of control methods. If one wants 
to write the control program or partially modify the control features for the 
multimedia application module in the display devices, then one has to know the 
software source code in the multimedia application module that will be remotely 
controlled, so that he can custom-design a set of remote control programs for each 
multimedia application. However, there are a lot of multimedia applications, a 
custom design for each of these applications becomes time consuming and less 
efficient. This research proposes an interface generator, similar to the concept of the 
parser generator, to automatically generate remote control programs for a specific 
multimedia application in the cell phone. With this generator, designer does not 
need to write the textual remote control programs in the cell phone. This will simplify 
the development process and make the control system development and 
modification more flexible. This research demonstrated this interface generator and 
its algorithm to produce three different kinds of application softwares in the cell 
phone. These three softwares can remotely communicate with similar application 
softwares in PC. With this practical example, we demonstrate the feasibility and 
applicability of this interface generator and its algorithm. For more detail information 
of the 3
rd
 year project, please refer from page 10 to page 88. 
 
Keywords：See-through interface, Software Engineering, Parser Generator, 
Interface generator, Recognizers, Speech Recognizers 
 
  9 
expandability, we use macro command to define and combine the control commands. 
One macro command may be combined with several control commands; this will 
avoid noise effect between long commands and make the application control more 
flexible with grammar analysis technology. Through this process we can make any 
application, which did not have HCI control ability previously, with speech or 
wireless remote HCI control functions in an easier and more efficient manner and do 
not need to write any program code, as shown in figure 2. 
 
Figure 2 Architecture of GIB control system 
 
三、結果與討論 
第一年研究成果 
在第一年的計畫裡我們將先期研究成果重新規畫並定義其系統架構，包括前
端的語音命令語言(command language)、parser，以及後端的應用程式的介面整合
模組。建立基本架構與定義所需的Script 語言及GUI 模組，先以滑鼠進行測詴，
接著企圖提供一個有系統的方法利用語音辨識操控應用軟體來和滑鼠模組結合
以達使用語音來控制滑鼠的互動工作。第一年的計畫已經執行完畢，請參閱下列
網址
https://nscnt12.nsc.gov.tw/prQUERY/ShowPDF.asp?url_www=298$296$308$242$29
7$299$310$297$305$291$247$285$273$246$250$244$253$244$244$265$245$24
6$246$246$251$253$243$265$243$251$253$243$312$310$307$308$297$310$24
  11 
樣的特定裝置上所開發的控制協定，不易維護，因為若是增加新的操作程序，將
導致系統常需要大量的修改，開發上而言成本負擔大、浪費時間且不夠彈性。 
    本計畫研究的動機，考量手機與 PC 上開發 Java 應用軟體的過程，提供一個
手機程式的產生器，來為 PC 上的應用軟體產生出可以在手機上進行遙控的操作
介面，因為能夠免除手機程式的撰寫，以及免除重複撰寫應用軟體上的遙控溝通
協定，這樣一個有效的機制使其在軟體的製作上，能夠改善其生產力及維護能力。 
 
3.1.2 問題描述與解決方法  
    進行裝置間互動的方式有很多，一般互動的方法，舉例來說，有以下幾項： 
(1) 在數位家庭環境中，採用聲音輸入以控制家電。 
(2) 在遊戲主機上，用藍芽連線的方式，透過特殊感應搖桿，來遙控遊戲(如：
日本任天堂所開發的 Wii 遊戲平台)。 
(3) 利用手機紅外線功能，遙控數位家電(如：Nokia 6708-內建紅外線遙控程式)。 
(4) 透過網路進行遠端登入。 
(5) 透過網路進行視訊電話操作。 
在(1)至(5)這些互動的方式中，比較會遭遇的問題有： 
(a) 在特定的互動裝置與被互動的裝置間，開發互動溝通的程式，過程較為複 
雜。 
(b) 需考慮裝置的運作能力以及本身的辨識系統(recognizer)支援，例如手機鍵 
盤、觸控板，麥克風等可否開發額外的互動控制。 
(c) 操作上是否夠友善(friendly)，使用者能夠輕易上手。 
 
依據本計畫的研究動機描述，在手機上進行遙控操作 PC 上應用軟體的機制，可
能遭遇的問題就概括以上三點。而我們解決的方式會針對開發互動溝通過程上的
簡化，主要是改善第(1)點所遇到的問題，即利用手機程式的產生器來降低複雜
繁瑣的開發過程，且由於產生的程式是 Java MIDlet 手機程式，目前所有的手機
裝置上都普遍具有支援 Java KVM(K Virtual Machine)平台，所以應用程式能透過
手機的鍵盤或觸控板來進行操作，較容易與手機上的辨識系統結合，這樣的方式
也能夠解決第(2)點問題，且產生出的手機操作介面與 PC 上的應用軟體操作介面
的功能相同，使用者能夠輕易的操作，相對又能解決第(3)點問題。 
    在特定的裝置上，開發遙控互動的應用方式，往往比較沒有彈性，當有新的
互動服務產生時，應用軟體需要修改，甚至重新開發，為了能夠與操作控制器上
的辨識系統(recognizer)結合，例如，鍵盤或是觸控板，應用軟體中還必頇撰寫對
應的互動操作功能，這個底層用來處理控制器訊號的程式碼，會因為一個新的應
用軟體產生，而重新再被開發過，如此重複的控制程序(control statement)，就常
常發生在開發過程中，使得開發應用程式變得沒有彈性及效率。 
  13 
 
(b)、提供一個介面系統來為 Java AP 產生 MIDlet 手機程式 
                                                                                                                                                                                                                                                                                                                                 
圖 1、手機上開發遙控服務的方式比較 
 
    以上是本計畫提出應用手機內的 Java 程式之介面產生器，為一個 Java 的應
用軟體產生手機操作程式的解決方法，能夠解決重複且複雜的應用軟體開發流
程，下ㄧ節中會針對我們欲進行的解決方法，分析其所要達到的研究目標有哪些。 
 
 
3.1.3 研究目標 
    本計畫研究的目標是提供一個遠端控制介面系統架構 (remote control 
interfacing system framework)，該架構的核心系統就是建構出介面產生器
(interface generator)，來產生 Java MIDlet 手機程式。本研究目標以手機與 PC 的
兩個異質平台為例，並利用 Java 程式語言來實作，開發該系統的目標是根據以
下幾點來進行研究： 
(1) 一般提供巨集指令(macro commands)的方式，利用手機按鍵的組合來操作一
台遠端電腦上的系統介面[1]，這樣的操作方式複雜。本計畫之系統能夠包裝
使用者的操作方式，並靜態的賦予每個操作項目一個控制命令 (control 
command)，因此不需定義複雜的操作指令。 
(2) 每個特定裝置上的操作項目不同，需要個別提供系統規格的描述文件給介面
產生器，方能產生介面[3]。本計畫之系統能夠分析 Java 應用軟體介面上的操
作元件，並自動產生描述檔案給手機內的 Java 程式之介面產生器，以產生手
機操作的介面程式。 
(3) 利用 Java 程式語言在手機或是跨平台的裝置上[16]，開發 Java 應用軟體系統
以進行遙控互動的操作，過程複雜，透過本計畫之系統所提供的開發機制，
能夠簡化複雜且彈性不佳的互動程序，這樣的開發機制稱之為介面化機制
(interfacing mechanism)。該機制規範開發者為 Java 應用軟體撰寫一個特定的
  15 
行遠端遙控操作，並利用裝置上辨識器(recognizer)的操作，制定對應遠端系統的
操作(keypad mapping)方式，並對目前手持行動裝置上的介面設計 (interface 
generation)評估，進而規劃出整個系統架構、需求及實作。初步可以分為下列幾
個步驟: 
(1) 了解現存系統、及文獻探討: 
本計畫會先介紹現存遙控操作的應用。以 Rajicon System[1]而言，該系統架
構是藉由一個有限的行動裝置介面，對遠端 PC 的 GUI(graphic user interface)
來進行遙控操作，該系統利用手機上的鍵盤辨識器(keypad recognizer)與巨集
指令定義每一個操作，來操作遠端的 PC 介面，取代 PC 上的滑鼠操作。此
外 還 會 介 紹 個 人 化 通 用 控 制 器 系 統 PUC (personal universal 
controller)System[3]，該系統藉由下載功能描述的規格文件來設計與產生手
機呈現介面，在 3.2.2 到 3.2.4 節會說明本計畫之遠端控制介面系統與上述系
統之不同處，另外在 3.2.6 節會進行 J2ME(Java 2 Micro Edition)環境以及互
動電視(interactive TV，iTV)和 Java TV 的討論，以期將來能夠在數位電視平
台上發展。  
(2) 系統功能分析： 
討論過目前現有的技術後，分析可否在現有的 Java Virtual Machine 環境上，
搭配手機上的 J2ME 版本，開發多媒體互動的服務。並建立一個能夠和遠端
PC 的 Java Content 互動溝通的機制，規劃出手機上的遠端遙控操作介面
(remote control interface)及 PC 上介面系統(interfacing system)的設計。 
(3) 系統設計規劃與實作： 
清楚目前需要建置的平台後，必頇獨立規劃出新系統，依需求來設計相關
的 Java 物件與類別，定義相關的套件與功能規格，並提供系統使用者撰寫
抽象類別來定義程式樣板，如此能夠快速有效的開發一個 Java 應用軟體。
並設計介面系統產生器，能夠幫助系統設計師產生手機操作介面程式，進行
遠端遙控多媒體內容的服務。最後針對各個規劃的系統，選定開發工具進行
程式撰寫，並同時進行單元測詴工作，詳細的系統功能分析及設計實作會在
第 3.3 節說明。 
(4) 應用的實例與未來應用的評估： 
針對手機介面平台，本計畫在 PC 上利用其他研究生(林賢忠、楊博鈞)實際
開發了三個 Java 多媒體的應用程式，以提供手機端的使用者來進行實際遙
控的操作示範。在第 3.4 節會介紹這三個 Java 應用軟體，並根據軟體工程製
作的兩個維度：生產力及維護力，評估本計畫所提供的介面系統來進行應用
軟體的開發，與一般的 Java 軟體開發，在這兩個維度上的比較，以及手機
應用程式的開發對於生產力與維護力等特定項目上的比較結果，我們會根據
質化的比較結果，來分析並評估他們彼此之間的好壞。另外在第 3.5 節結論
及未來展望裡，也規劃在其它能夠支援相同規格的 Java 平台上(例如：互動
電視)進行移植，而達到跨平台的橫向發展與技術擴增。 
  17 
 
3.1.7 章節說明 
  本計畫分成五個章節來說明，第 3.1 節主要是介紹說明以及研究的動機，第 3.2
節則是說明相關的研究、知識背景與文獻的探討，第 3.3 節則是系統架構與實作
的部份，並針對應用程式介面載入器(application program interface loader)、手機
內的 Java程式之介面產生器(interface generator for MIDlet program)及 Java應用軟
體三個模組，詳細說明一個遠端控制介面系統架構(remote control interfacing 
system framework)如何運作，以及強調本計畫的研究與技術特點，第 3.4 節是一
些實際開發的 Java 應用服務說明，以及進行系統開發上的評估，第 3.5 節是結論
以及未來展望的探討。 
 
3.2 Related Work 
3.2.1 現有多媒體互動的方式 
隨著多媒體的內容的變化越來越多，許多數位內容的業者就希望能夠提供豐
富且生動的服務模式，來給一般普及的家電裝置或行動裝置上的使用者使用，所
以使用者與多媒體內容的互動方式就變得越多，互動模式是人們現實生活中不可
或缺的溝通行為，例如數位電視便提供了一個互動式服務，而互動數位電視
(interactive TV, iTV)就是提供數位電視互動服務的商品。現實生活中，人們需要
互動參與，需要商務交易，也需要資訊隨身化，互動電視即是實現此互動式的電
視商務與娛樂的重要工具，控制互動電視需要一個遙控器來操作播放的內容，遙
控互動的方式常見於各種行動裝置與家電用品中。以往較直接的人機介面操作以
及語音輸入操作等互動，比較受限在目標裝置的支援能力，以及不能夠提供跨平
台的應用服務，圖 2 是普遍的互動實例： 
 
圖 2、普遍的互動方式 
 
  19 
相同的 GUI 作為 PC 的螢幕，因此需要分析行動裝置螢幕，來點擊螢幕以遙控
PC 上的畫面，這是一個行動裝置遙控 PC 系統的提議方法。針對遠端遙控而言，
client-server 就是一個簡單架構，客戶端(client)透過 OTA(On the Air)連線的方式，
送出請求(request)給伺服器端(server)，server 端接到請求後，進行 parsing 並處理
這個請求，然後將結果回應(response)給 client 端。這是一種針對特定的裝置所開
發的一個互動協定，建立這樣的遠端遙控機制，必頇考慮裝置運作的能力、能否
支援多媒體的內容呈現以及相對應的遠端操作功能，當目標裝置上進行遠端互動
的功能越來越複雜時，控制器介面的設計以及互動的協定，就變得較難去開發。 
本研究探討如何透過一個遠端控制介面系統  (Remote Control Interfacing 
System)與 PC 上的 Java 應用程式(Application Program，AP)，來產生手機操作的
介面程式，以便與多元化的多媒體內容互動。該介面系統包含一個手機內的 Java
程式之介面產生器(Interface generator for MIDlet program)與應用程式介面載入器
(Application Program Interface Loader)來產生手機操作程式。一旦手機操作程式與
手機的觸控辨識系統結合，使用者將能夠利用手機與跨平台的應用軟體進行遙控
操作，且透過這個介面系統，也能簡化 PC 上應用軟體的開發程序，表 1 是現行
使用手機遙控操作的特色。 
 
表 1、手機遙控操作的特色 
  功能特色 搭配環境 
紅外線遙控 
透過紅外線遙控家用電器與設備。 電視遙控。 
WiFi 網路 
 
透過通用隨插即用(Universal Plug and 
Play，UPnP)技術[23]，各種數位電器、
裝置，在連接上網路平台時，可以互
相自動搜尋並且連接。 
 
搭配各種數位電器的數位
家庭環境。 
藍芽連接  
經過藍芽連接後，按下手機上的控制
按鈕，能操作特定的裝置。 
機器人、電子寵物等。 
     
    現有的遠端遙控機制很多，本研究以 Rajicon System[1]為例子來做說明與研
究探討，該系統架構於 2002 年被提出，主要的功能是能以手機進行遠端遙控操
作 PC 上的畫面，手機普遍能夠進行的功能雖然如上表所示，但是比較侷限在特
定的目標裝置上，進行特定的操作功能，如果要進行許多複雜的操作方式，就必
頇定義一套互動協定的規則，Rajicon System 利用巨集指令(macro commands)來
制定每一個操作，所以操作的功能越多，巨集指令就定義的越多，且不會不敷使
用，這是現有的手機遠端遙控機制與 Rajicon System 的操作機制最主要的不同
處，而使用這種方式制定操作，能夠使互動的功能不受裝置侷限。 
  21 
以及圖 9 是進行 scrolling 的呈現結果。 
 
     
圖 7、Zoom Movement Mode            圖 8、Scale Movement Mode 
 
圖 9、Scroll Movement Mode 
 
 
圖 10、The cellular phone's keypad 
 
  23 
根據表 3 則必頇在手機的鍵盤上輸入： Hello?nWorld ，所以利用巨集指令的制
定就能建立一套溝通的協定。 
    針對第(2)項，溝通的協定(communication protocol)的探討，Rajicon System
中所使用的 macro command 對應操作會有下列幾種問題： 
 這種 command-based 的 protocol 來當作 interactive protocol 需要定義許多的
macro commands，而利用手機鍵盤來輸入這些 commands，導致操作複雜且
不夠彈性。 
 有新的應用軟體產生時，這樣的操作協定又需重新量身訂作，維護力與可再
利用性不佳。 
因此本計畫提供一個遠端控制介面系統(remote control interfacing system)，能夠
自動產生互動的協定，並且利用系統化的方式來為每一種操作制定巨集指令，而
該系統又能支援 Java 跨平台的裝置，且針對 Java 應用軟體上的開發，提供良好
的可再利用性(reusable)，新的操作功能可以被快速並有效的重覆開發，這樣的方
式能夠變換出新的多媒體服務。 
    至於第(3)項，對於裝置的呈現能力，在Rajicon System中Cellular Phone Client
是一個 Java program，它必頇佔用較少的 memory 資源，才能與 server 端互動，
並將遠端 PC 桌面影像呈現出來。針對裝置呈現的能力，需要針對使用者對 screen 
size 的視覺觀感來進行協調，即是進行情境感知(context awareness)的協調，以呈
現最佳的畫面，情境感知是指有能力去使用或擷取目標裝置的情境資訊(context 
information)，是一個能夠顯示關於使用者、載具、環境以及那些可以增加使用者
在異質行動裝置上互動的資訊觀念[15]。 
 
3.2.4 遠端遙控介面的製作-PUC System 
根據上節所討論，採用手持行動裝置來進行遠端遙控的功能，可能會遭遇的
第一個問題就是遙控介面(Remote Control Interface)的設計，因為隨著複雜的週邊
配備功能日益增加，在手持行動裝置開發對應的遙控操作介面，就變得相當困
難，在 2002 年 Jeffrey Nichols，Brad A. Myers 等人發表了 Generating remote control 
interfaces for complex appliances 的主題[3]，根據這篇文獻的內容，是提出個人化
通用控制器系統 PUC(personal universal controller)的方法，來改良對於複雜設備
上的圖形介面(graphical interface)與語音介面(speech interface)，PUC 是一個能夠
與日常家用設備連結進行雙向溝通(two-way communication)的系統，由下載一份
關於家用設備的功能的規格說明(specification)之後，並能自動的建立一個控制的
介面，圖 11 是一個 PUC 系統的架構圖以及藉由網路雙向溝通的方式，圖中 PUC
裝置需要透過網路(network)將目標裝置規格(device specification)、呈現狀態(state)
以及控制功能(control)下載，才能產生介面： 
  25 
圖 13、A sample group tree for a shelf stereo with both a CD player and radio tuner 
 
   圖 13 是描述一個擁有 CD 播放器和廣播頻道調節器的書櫥音響，黑色的方塊
是代表群組(groups)，有文字描述的白色方塊則是代表狀態變數(state variables)，
而 mode variable 是表示透過喇叭播放出來的來源。利用建立 group tree 來描述
specification 的方式，需要一個決策的演算法[5]來進行分析，主要是利用 decision 
tree 的決策，根據這個研究的實驗比較結果[6]，用這樣的介面產生方式來建立介
面比一般業者在目標裝置上所開發的真實介面來的較佳，介面產生的方法不用考
慮外視感覺(look and feel)的設計，僅將功能的描述表現在介面上。另外要為複雜
的硬體裝置，自動產生一個遙控的操作介面，需求上要有一些規範[7]，主要就
是使用者的設計觀點，以及裝置上的應用能力考量，根據使用者的設計來產生遙
控介面的方式[10][12]以及考慮觸控式的遙控裝置能力[9]或大型展示的裝置能力
[11]，能總結出使用者的介面需要，結合使用者的設計觀點以及裝置協調特性[8]
方能有較佳的呈現與充分表達功能的用途。  
    總結介面上的設計有許多的因素需要考慮，包括： 
 針對特定的設備，需下載一份功能的規格說明(specification)之後，產生器才
能自動的建立一個控制的介面。 
 介面設計的演算法需要考慮使用者需求與裝置呈現，設計的方法繁瑣。 
在本計畫研究的範圍中，手機遠端控制介面的設計是開發在 J2ME 的平台上，開
發的系統能夠分析 Java 應用軟體介面上的操作元件，並自動產生描述檔案給手
機內的 Java 程式之介面產生器，以產生手機介面的操作，如此不需為特定的裝
置下載一份規格說明，在本研究中，我們為 PC 上的 Java 應用軟體，自動在手機
上產生了手機操作介面的程式，透過手機的觸控與鍵盤識別器(keypad recognizer)
能夠遙控操作 PC 上的 Java Content。 
 
3.2.5 手機上的介面產生器之介面產生方式 
    在本計畫的研究目標中，是建構出介面產生器(interface generator)，來產生
Java MIDlet 手機程式，透過這樣的方式，最主要提供了三個特點：(1)免除重複
開發手機上的遙控協定，與減少 PC 上應用軟體的程式撰寫來完成遙控的操作、
(2)產生的手機應用程式(MIDlet)能在相容的 KVM 上執行，所以可以在不同的裝
置上運作，遙控的裝置不易受限，也易於和不同的辨識器(例如：鍵盤、觸控板、
麥克風、照相功能等)結合、(3)使用者不需利用巨集指令定義複雜的操作方式，
介面產生器會自動包裝互動的程序，因此使用者透過手機程式的介面進行遙控操
作時比較容易。 
    ㄧ般手機介面的產生方法，是需要考慮使用者的外視感覺(look and feel)來設
計[7][8][9]，一般來說，製作手機的介面，可能需要介面的製作者利用編輯工具，
  27 
          
圖 15、The Java Platform 
 
 
圖 16、The Wireless Platform 
 
 
圖 17、Digital Media Platform 
 
  29 
看板有支援相同規格的 KVM，則能實現遠端遙控 Java TV 的技術[13][29][30]，
本計畫在第 3.5 節的應用開發實例中，也有一個模擬廣告播放頻道的 Java TV 
Player，是根據 Java Media Framework[31]開發出的播放器，因應將來能運用在有
支援相容 J2ME 規格的互動電視上。 
 
3.3 Proposed Method and Algorithm 
3.3.1 遠端控制介面系統架構 
在本計畫實作的架構裡，我們夠結合手機觸控辨識功能並以 PC 上應用軟體
介面的架構，來產生手機操作程式，這個系統稱為遠端控制介面系統(Remote 
Control Interfacing System)，系統概觀圖如圖 19 所示： 
 
圖 19、Remote Control Interfacing System Overview 
 
該系統是由應用程式介面載入器(application program interface loader)、手機內的
Java 程式之介面產生器(interface generator for MIDlet program)和 Java 應用程式
(Java Application Program，Java AP)所組成，本系統係針對 PC 環境上的 Java 應
用程式，來進行介面載入的機制。系統開發者在 PC 上所開發的 Java AP，為了
能夠與手機遠端操作介面進行遙控互動，必頇撰寫底層的 AP 控制程序(AP 
control statement)，方能處理遠端操作介面所傳送的訊息，並觸發軟體介面上的
操作元件。在 3.1.2 節中曾經提及這樣重複的控制程序(control statement)，在開發
另一個新的 AP 時，就常常需要被重複納入到開發過程中，變得較沒有彈性。根
據圖 19 所示，應用程式介面載入器(Application Program Interface Loader)能夠將
  31 
圖 20、Remote Control Interfacing System Framework 
 
    圖 20 為遠端控制介面系統的架構圖(Remote Control Interfacing System 
Framework)，該系統能夠進行連結 Java 應用軟體介面，幫畫面上的操作元件制
定巨集指令(macro command)產生控制程序及進行程式碼產生(code generator)。而
這些運作過程分別由系統中的三個模組來完成，第一個模組為應用程式介面載入
器(application interface loader)，第二個模組為手機內的 Java 程式之介面產生器
(interface generator for MIDlet program)或是稱之為介面產生器，第三個模組則是
Java 應用程式(Java AP)。應用程式介面載入器會載入 Java AP 的介面，並包裝控
制程序(remote control statement)；手機內的 Java 程式之介面產生器則是根據包裝
好的控制程序，操作描述檔案(operation script file)與控制表單(control table)資訊
來產生手機 MIDlet 程式；而 Java 應用軟體則是會依據本計畫第 3.4 節的應用實
例中，已開發的三個應用軟體來進行說明，分別是 Java 多媒體播放器系統，行
動名片樣板編輯系統，電子賀卡樣板編輯系統。以下是遠端控制介面系統架構中
各個模組與子模組的相關說明： 
 
應用程式介面載入器(application interface loader) 
 使用者介面(user interface)-載入 PC 上的 Java AP。 
 命令剖析器模組(command parsing module)-處理來自手機操作介面程式的控
制命令。 
 
手機內的 Java 程式之介面產生器(interface generator for MIDlet program) 
 程式樣板剖析器模組(code template parsing module)-分析應用程式的抽象類
別，根據該類別自動產生操作描述檔案與控制命令表單。 
 遠端控制程序(remote control statement)-處理 http 的連線與控制命令的傳遞。 
 程式碼產生模組(code generation module)-根據操作描述檔案，自動產生
MIDlet 程式與執行 WTK 編譯器。 
 
Java 應用系統(Java Application System) 
 Java 多媒體播放器(Java Media Player)-能透播放影音多媒體串流的 Java 程
式。 
 行動多媒體名片樣板編輯器-進行多媒體名片樣板套用的 Java 程式。 
 電子賀卡樣板編輯器-進行電子賀卡樣板套用的 Java 程式。 
 
 
  33 
抽象類別是規範應用軟體的操作元件及屬性等，有了這個類別來提供程式的樣
板，手機內的 Java 程式之介面產生器會分析應用程式的抽象類別，並根據該類
別自動產生操作描述檔案(Operation Script File)，之後 parsing 這份文件產生 Java 
AP 的控制命令表單畫面，其中控制命令是採用系統化的方式，依 UI 上元件數目
來給予每個操作元件一個控制命令，之後介面系統儲存這份控制命令表單資訊，
並進行 MIDlet 程式的產生，連同這份表單寫出，系統最後會自動呼叫
WTK(Wireless Toolkit)編譯器來編譯產生 MIDlet 程式，編譯完成後，使用者可將
程式包裝成 jar 檔，即可放到 PDA 手機上執行手機遠端操作介面的程式，並可以
與 PC 上的 Java 應用軟體進行遙控的操作。 
 
3.3.4 應用程式介面載入器 
3.3.4.1 目的與功能 
應用程式介面載入器 (以下簡稱為載入器 )是一個提供給使用者的
GUI(graphical user interface)介面，它是一個執行在 J2SDK 平台上的 Java 伺服器
程式，系統端使用者(system user)可以利用應用程式介面載入器，來為 PC 上的
Java 應用軟體進行介面的載入，並處理來自手機操作介面程式的控制命令，系統
端使用者必頇先制定 Java 應用軟體的程式樣板，及提供應用程式給載入器系統，
當載入器載入應用軟體的介面之後，會交由手機內的 Java 程式之介面產生器來
進行分析程式樣板並產生手機程式。 
 
3.3.4.2 需求分析 
應用程式介面載入器主要的功能需求有：(1)連結 PC 上的 Java AP 與(2)   處
理來自手機操作介面程式的控制命令。連結 PC 上的 Java AP，是需要系統開發
者去撰寫程式的樣板，以及提供程式類別名稱給載入器，如此載入器才能載入對
應的 Java 應用軟體，並且委任手機內的 Java 程式之介面產生器來進行分析程式
樣板並產生手機程式，本計畫中載入器程式是利用 Java Swing 的套件，繼承其
JFrame 的外觀介面，而在第 3.4 節的 Java 應用實例中，制定的程式樣板是繼承
Java Swing 套件中的 JInternalFrame 介面[26]來規範 UI 的上的操作元件，未來也
可以擴增其他 Swing 或是 Awt 的介面套件，以下是應用程式介面載入器提供連
結的 Java AP 需求： 
 
 
  35 
 
圖 22、應用程式介面載入器-MVC design pattern 
 
應用程式介面載入器主要包含兩個子模組：使用者介面(user interface)、命令剖析
器模組(command parsing module)。使用者介面(user interface)是提供介面的功
能，能將應用軟體的操作畫面載入(loading)，並連結(linking)所有的操作元件，
圖 23 是將第 3.4 節中所舉的三個 Java 應用程式畫面連結進來的結果，圖 24 是載
入器系統所呈現介面畫面，在 Application 選項中，可以選擇載入系統開發者已
經開發完成的三個應用系統，在這三個應用系統中，開發者已經提供了程式樣板
的規範，及提供程式類別名稱給載入器，如此載入器才能載入對應的 Java 應用
軟體。 
 
圖 23、連結 PC 上的 Java AP 
  37 
當載入器連結一個 Java 應用程式(Java AP)後，它會記錄所有的操作元件資訊，
圖 25 是以第 3.4 節中的行動名片樣板編輯器為例，當應用系統的畫面載入進來
之後，手機內的 Java 程式之介面產生器會自動產生控制命令表單(control table)，
並由載入器來將表單畫面呈現出來，畫面的內容記錄了所有的操作元件資訊，而
由手機內的 Java 程式之介面產生器所產生的手機程式(MIDlet program)，也會有
這份相同的表單記錄(table record)，記錄對應的操作元件命令碼，如此當用戶端
使用者在手機操作介面程式中按下背景 1(bkg_1)的圖示切換(play Btn_1)，對應的
命令碼 001 就會傳送給伺服器端的應用程式介面載入器，載入器會進行命令剖析
及觸發對應的按鈕操作，將行動名片的背景進行切換。      
    以上我們歸納使用者介面(user interface)、命令剖析器模組(command parsing 
module) 與 Java 應用系統(Java AP)的運作： 
 使用者介面(user interface) 
1. 連結 AP 程式。 
2. 載入 AP 的操作畫面。 
 命令剖析器模組(command parsing module) 
1. 處理來自手機操作介面程式的控制命令。 
2. 觸發 AP 的操作元件。 
 Java 應用程式(Java AP) 
1. 提供介面外觀與版型呈現給載入器系統。 
2. 提供操作元件的事件處理程序給載入器系統。 
 
3.3.5 手機內的 Java 程式之介面產生器 
3.3.5.1 目的與功能 
手機內的 Java 程式之介面產生器是遠端介面系統的核心元件，其主要的功能
如下：(1)分析應用程式的抽象類別，(2)根據該類別自動產生操作描述檔案，(3)
自動產生 Java AP 的控制命令表單畫面，(4)根據操作描述檔案自動產生 MIDlet
程式。抽象類別是頇由系統開發者依照程式樣板的規範去撰寫的，每一個需要利
用介面系統進行連結的 Java 應用軟體，必頇撰寫一個抽象類別，並提供相對應
的抽象方法以及實作，將來利用這個抽象類別來當作程式樣板，可以進行重複開
發，提供開發新的軟體應用服務。手機內的 Java 程式之介面產生器會先進行剖
析(parse)這個抽象類別，並且產生操作描述檔案(operation script file)，操作描述
檔案會描述程式樣板上所定義的操作項目，之後產生器會在介面系統的畫面產生
Java AP 的控制命令表單畫面，產生器自動產生 MIDlet 程式，將這個表單以及
MIDlet 程式包裝為一個 jar 檔，就能安裝在手機上並執行。 
  39 
    第二個步驟是根據抽象類別來產生操作描述檔案，產生器會剖析抽象類別所
定義的成員及屬性，並產生一個操作描述檔案(operation script file)，這份文件會
描述程式樣板上所定義的操作項目，描述的內容如下： 
 操作元件的項目(button string/combobox string/radiobutton string) 
 操作元件的標籤文字內容(label text) 
 操作元件的圖示檔案路徑說明(icon url) 
當操作描述檔案產生後，第三個步驟就是自動產生 Java AP 的控制命令表單畫
面，這個表單是以多媒體的資料內容來記錄，並呈現在介面系統的連結畫面上，
資料內容包括文字描述還有按鈕圖示描述。表 10 是控制命令表單的欄位描述： 
 
表 10、控制命令表單的欄位描述 
Operation 操作元件項目的名稱 
Icon 操作元件的按鈕圖示 
Label 操作元件的文字內容 
 
    經過步驟一到步驟三之後，手機內的 Java 程式之介面產生器就能根據控制
表單與操作描述檔案來產生 MIDlet 程式，產生器會呼叫 WTK 編譯的模組，進
行編譯程式並產生 class 檔，使用者將 class 與資源檔案進行壓縮成 jar 檔，就可
以部署到手機上執行，表 11 是 WTK 的環境需求。 
 
表 11、WTK 的開發環境需求 
開發平台 J2ME Wireless Toolkit 
平台版本 Version 2.2 
作業系統需求 Windows XP 
作業系統版本 5.1 
Java Version 1.4.2_01 
 
系統開發者進行撰寫程式樣板的規範，會在 3.3.6 節詳細說明抽象類別的架構，
並且會說明如何利用程式樣板來達到開發新的軟體應用服務，這樣重複利用程式
樣板來開新的服務，可以減少開發者的負擔並節省開發的時間，在 3.3.7 與 3.3.8
節會分別說明操作描述檔案的功能以及控制命令表單的制定，最後 3.3.9 節會介
紹 WTK(Wireless Toolkit)編譯器的功能。 
 
 
 
 
 
  41 
上呈現對應的控制表單(control table)。 
   
 
圖 27、剖析器模組的運作流程 
 
第二個階段是轉譯遠端控制程序，而遠端控制程序是一個伺服器端的 CGI 程式，
會在進行程式碼產生(code generation)時被程式碼產生模組連結進來。主要的設計
功能包括： 
1. 繼承一個 HTTP 的 servlet 類別(HttpServlet) 
2. 提供 Get 與 Post 的方法(doGet/doPost method) 
3. 處理 HTTP 的 request 訊息(HttpServletRequest 物件) 
4. 處理 HTTP 的 response 訊息(HttpServletResponse 物件) 
遠端控制程序會提供手機端程式與介面系統間的溝通互動，程式碼產生模組會將
這段遠端控制程序轉成一支特定程式，提供手機操作介面系統來進行遠端遙控的
工作，所以針對每個 PC 的 Java 應用軟體，這份相同的 AP control statement， 
就可以不需要經由系統開發者在進行開發，只需要處理接收到的命令並呼叫觸發
的物件方法即可，如此進行程式碼產生時，可以取代掉重新撰寫控制程序的工作。 
圖 28 是一個遠端控制程序的主要程式片段說明： 
  43 
 
圖 29、分析 abstract 類別名稱資訊與設定視窗標題名稱(Frame Title) 
 
程式產生的第一與第二步驟，是分析出應用軟體所繼承的抽象類別名稱，設定名
稱資訊與設定視窗標題名稱，圖 29 所示。 
 
 
圖 30、分析操作元件屬性的字串值 
 
第三步驟則是需要分析操作元件屬性的字串值，如圖 30 所示，在擷取程式樣板
剖析器模組所產生的控制表單的資訊後，這些操作元件資訊會相對的被轉譯成手
機上不同的操作元件。 
 
  45 
 
圖 33、手機介面程式上對應的單一選項鈕(RadioButton)操作元件 
 
圖 34、手機介面程式上對應的下拉列表(ComboBox)操作元件 
 
在第六步驟中為每個操作元件產生操作元件事件處理程序，如圖 35 所示，手機
程式中提供操作元件的觸發事件處理(operation event handle)，根據觸發的形式，
會去比對控制命令表單(control table)來判斷命令形式(command type)，最後將命
令由 http 請求發送給 PC 上的介面系統。 
 
 
  47 
容器(Container)元件： 
 javax.swing.JInternalFrame 
 
操作元件代表了 UI 上的一些視覺化的按鈕或是選單等，在本系統中，我們定義
了按鈕 (JButton)，單一選項的選擇鈕 (JRadioButton)以及下拉式選項的選單
(JComboBox)，安排這三種視覺化操作元件排放位置的視窗，就是一個容器
(Container)元件，這邊開發者需要繼承一個內部視窗(JInternalFrame)，頇把上述
三種操作元件包含進來。圖 36 是描述程式樣板的繼承架構，VCardPlayer.java 的
執行結果是第 3.4 節的行動名片樣版編輯器的應用實例，它繼承的程式樣板就是
VCardPlayerAbs.java，需由開發者撰寫定義，而所採用的視窗容器就是繼承內部
視窗(JInternalFrame)，最後由應用程式介面載入器，即 APLinkInterface.java，它
繼承了 javax.swing.JFrame 視窗而將內部視窗包含進來。 
 
圖 36、程式樣板的繼承架構 
 
    從上圖得知 VCardPlayerAbs.java 就是行動名片樣版編輯器的程式樣板，而
VCardPlayer.java 則是進行實作這個抽象類別，圖 37 就是 VCardPlayerAbs.java
的抽象類別程式片段，它繼承了 javax.swing.JInternalFrame 的容器視窗，定義了
JButton、JComboBox 以及 JRadioButton 三個操作元件的屬性，下圖的字串值
(String)是描述操作元件的標籤文字及圖示(jpg ,gif)檔案的路徑，這些關係可以用
一個 Regular expression 來辨認字串變數，依屬於哪種型態之 token，而加以分析： 
Identity :  [a-zA-Z_][a-zA-Z_0-9]* 
Integer number：[0-9]+ 
String : \"([^"\n]|\\["\n])*\" 
Keyword : "protected"｜"String"… 
  49 
3.3.7 操作描述檔案說明 
圖 38 是描述操作描述檔案與控制表單的關係，而在 3.3.5.3 節中，程式樣板
剖析器模組(code template parsing module)在剖析完應用程式的樣板後，會產生操
作描述檔案(Operation Script File)。 
 
圖 38、操作描述檔案與控制表單的關係 
 
    而控制表單(Control Table)會根據操作描述檔案，自動產生在介面系統中應
用程式載入器的畫面上，上圖是行動名片樣版編輯器的操作畫面，右列是所有的
操作元件，包含按鈕(JButton)，單一選項的選擇鈕(JRadioButton)以及下拉式選項
的選單(JComboBox)。而描述這些視覺化的操作元件，就是需要操作描述檔案來
負責，最後程式樣板剖析器模組，再剖析該文件而產生控制表單畫面，如上圖右
方的表單呈現結果。一份操作描述檔案的內容說明大致如圖 39 所示，共分成三
個部份，第一個部份是操作元件項目的描述，共有以下三種元件項目： 
 play_btnN ：代表按鈕(JButton)操作元件 
 play_radiobtnN ：代表單一選項的選擇鈕(JRadioButton)操作元件 
 play_comboBoxitemN ：代表下拉式選項的選單(JComboBox)操作元件 
(N : [0-9]+) 
第二個部份是操作元件的圖示檔案路徑，描述各個操作元件的圖示內容，每個元
件可以有兩種描述資訊，一是以圖示內容描述，二是以標籤文字描述。兩種描述
不能同時具有，操作元件的圖示檔案分為 jpg 與 png 檔案，jpg 圖檔(or gif)是提
供給 Java 應用程式，而 png 圖檔則是提供給手機內的 Java 程式之介面產生器產
生的手機程式，針對三種元件項目，共有以下三種圖示檔案路徑描述： 
 btnN_Icon：代表按鈕(JButton)的圖示路徑 
 radiobtnN_Icon：代表單一選擇鈕的圖示路徑 
 comboBoxitemN_Icon：代表下拉式選項的圖示路徑 
  51 
 
表 12、使用命令字串觸發物件的方式 
UI on Device   Command               Action 
  Btn_1     001   Focus object_1 
  Btn_2     002   Focus object_2 
  Btn_3     003   Focus object_3 
  Btn_4     004   Play object_1 
  Btn_5     005   Play object_2 
  Btn_6     006   Play object_3 
   ……    ……   …… 
                    
假設在 Java 應用程式的 UI 畫面上，有數個按鈕元件(Btn_N，N : [0-9]+)，控制
命令表單會賦予每個按鈕元件一個命令碼(command ID)，如同上表的描述 Btn_1
至 Btn_6 的命令碼分別是 001 至 006。當應用程式接收到 001 至 003 的命令時，
對應的觸發事件行為分別是 Focus object_1 至 Focus object_3，而接收到 004 至
006 的命令時，對應的觸發事件行為分別是 Play object_1 至 Play object_3，以上
就是一個利用命令來進行事件觸發的方法。 
   圖 40 至圖 42 就是本計畫所開發的三個應用實例與控制表單的操作描述，
Operation 欄位是描述操作描述檔案上定義的操作元件項目，Icon 欄位是依據操
作元件的圖示檔案路徑將圖示呈現出來，而 Label 欄位則是描述操作元件的標籤
文字，Icon 欄位值與 Label 欄位值不會同時描述一個操作元件的內容。 
      
          
圖 40、JMF 播放器應用程式的控制表單操作描述 
 
  53 
 
圖 43、以元件產生的順序來賦予命令碼 
 
3.3.9 WTK 編譯器 
在手機內的 Java 程式之介面產生器的程式碼產生模組中，當 MIDlet 的程式
寫出的時候，該模組會呼叫 WTK(Wireless ToolKit)編譯器系統，這是一個可以編
譯手機 MIDlet 程式的工具程式，並且會執行模擬器程式，模擬 MIDlet 程式實際
執行在手機上的畫面。由於 WTK 自身並沒有附帶 Java 的運作環境，即 J2DK(Java 
2 Standard Edition Development Kit)，所以在 WTK 安裝之前必需要安裝 JDK 的執
行環境。 
本計畫開發的 JDK 環境是 J2DK 1.4.2_01 版本，WTK 開發工具支援
MIDP(Mobile Information Device Profile)2.0 應用程序、WMA 2.0、MMAPI 1.1，
File and PIM APIs (JSR 75)、Bluetooth、OBEX APIs (JSR 82)及 3D Graphics (JSR 
184)，以下是 WTK2.2 所支援的這些 API 說明： 
 
 
 
 
 
 
操作元件項目 命令碼 
play_btn1 1 
play_btn2 2 
play_btn3 3 
play_btn4 4 
play_btn5 5 
play_btn6 6 
play_btn7 7 
play_btn8 8 
play_btn9 9 
play_btn10 10 
play_radiobtn1 11 
play_radiobtn2 12 
…… …… 
 
  55 
Step 1、執行 WTK(J2ME Wireless Toolkit)編譯工具(圖 44) 
Step 2、使用者可以點選 New Project 以新增專案(圖 45) 
Step 3、點選 Open Project 直接執行手機內的 Java 程式之介面產生器所產生的  
        MIDlet(圖 46) 
Step 4、專案 MyRemoteAP 載入成功(圖 47) 
Step 5、建置(build)與編譯 MyRemoteAP 專案(圖 48) 
Step 6、建置專案完成(圖 49) 
Step 7、 建置完成後的專案資料夾如圖 51 所示，src 是存放.java 的來源碼，當
Step 6 建置專案完成後，classes 資料夾會產生，編譯完成的 class 檔皆
放於該資料夾底下(圖 50)。    
Step 8、設定環境組態(圖 51) 
Step 9、設定相關的屬性資訊(圖 52) 
Step 10、執行 MIDlet 程式(圖 53) 
Step 11、啟動手機模擬器以執行 MIDlet 程式(圖 54、圖 55) 
Step 12、執行手機模擬器的操作畫面(圖 56) 
 
        
       圖 44、執行畫面                        圖 45、新增專案 
 
              
         圖 46、打開專案                圖 47、載入專案 MyRemoteAP
 
  57 
       
       (a) 選擇 API型式                        (b)進行 MIDlet 檔案描述設
定 
 
 
    (c)確認 MIDlet 程式的描述資訊 
 
圖 52、相關的組態資訊內容 
 
    
  59 
               
  (a)選擇欲執行的應用程式                         (b)應用程式的主表單
畫面 
 
 
     
  (c)Button的操作選單        (d)RadioButton的操作選單     (e)Combobox操
作選單 
 
圖 56、模擬器主選單與操作選單的畫面 
 
   以上是在 WTK 開發工具下的操作說明，在系統實作中由手機內的 Java 程式
之介面產生器所產生的 MIDlet 程式，會放置到 MyRemoteAP 的專案底下，該專
案需要利用 WTK 工具進行編輯，當 MIDlet 程式碼產生完畢後，介面系統
 
   
 
  61 
表 15、JMF 支援的播放格式 
Media Type  JMF 2.1.1 
Cross Platform 
Version  
JMF 2.1.1  
Solaris/Linux 
Performance Pack  
JMF 2.1.1 
Windows Performance 
Pack  
AIFF (.aiff)  read/write  read/write  read/write  
AVI (.avi)  read/write  read/write  read/write  
HotMedia (.mvr)  read only read only read only 
MIDI (.mid) read only read only read only 
MPEG-1 Video (.mpg)            read only read only 
 MPEG Layer II Audio  
(.mp2 )  
read only read/write read/write 
Wave (.wav) read/write read/write read/write 
 
該系統是以三個廣告與兩個導覽簡介的 mpg 檔案當作播放的來源，以下的系統
畫面是系統端使用者利用介面系統進行載入 Java 多媒體播放器，並產生出手機
遙控介面的操作流程： 
Step1：在系統畫面上選擇載入 Java 多媒體播放器(圖 57、圖 58) 
Step2：點選 Generate Operation File 以產生操作描述檔案(圖 60、圖 61) 
Step3：點選 Generate Control Table 以產生控制表單(圖 62、圖 63、圖 64) 
Step4：點選 Generate MIDlet Source Code 並執行 WTK 編譯器(圖 65) 
Step5：編譯產生的 MIDlet 程式並執行手機模擬器(圖 66) 
Step6：執行手機模擬器的畫面(圖 67)  
Step7：PDA Phone 上的 MIDlet 程式執行畫面(圖 68) 
 
 
圖 57、在系統畫面上選擇載入 Java 多媒體播放器 
 
 
 
 
  63 
 
圖 60、點選 Generate Operation File 以產生操作描述檔案 
 
圖 61、描述檔案的內容 
 
圖 62、點選 Generate Control Table 以產生控制表單 
 
  
 
 
  65 
 
圖 66、編譯產生的 MIDlet 程式並執行手機模擬器 
 
       
(a) 操作項目主選單-按鈕元件    (b) 操作項目的內容選單-按鈕元件 
 
圖 67、執行手機模擬器的畫面 
 
 
  
  67 
3.4.3 行動多媒體名片樣板編輯器 
行動名片樣板編輯器是利用 Java Swing 套件[26]所開發的 GUI(graphical user 
interface)系統，提供名片製作者在 PC 上進行多媒體名片的製作，主要的名片製
作功能，是進行背景樣板(background)、Logo 與呈現樣式(layout)的套用。在本計
畫系統應用實例中，是利用手機來進行遙控編輯，換言之，編輯器上的編輯功能，
將由手機介面程式來進行遙控操作，以下的系統畫面是系統端使用者利用介面系
統進行載入行動名片樣板編輯器，並產生出手機遙控介面的操作流程： 
Step1：在系統畫面上選擇載入行動名片樣板編輯器(圖 70、圖 71) 
Step2：點選 Generate Operation File 以產生操作描述檔案(圖 73、圖 74) 
Step3：點選 Generate Control Table 以產生控制表單(圖 75、圖 76、圖 77) 
Step4：點選 Generate MIDlet Source Code 並執行 WTK 編譯器(圖 78) 
Step5：編譯產生的 MIDlet 程式並執行手機模擬器(圖 79) 
Step6：執行手機模擬器的畫面(圖 80) 
Step7：PDA Phone 上的 MIDlet 程式執行畫面(圖 81) 
 
 
圖 70、在系統畫面上選擇載入行動名片樣板編輯器 
 
 
圖 71、行動名片樣板編輯器系統畫面載入結果 
 
 
 
 
  69 
 
圖 75、點選 Generate Control Table 以產生控制表單 
 
 
圖 76、控制表單的呈現畫面 
 
 
圖 77、控制表單的內容 
 
 
 
  71 
        
(c) 操作項目主選單-選項鈕元件    (d) 操作項目的內容選單-選項鈕元件 
 
     
(e) 操作項目主選單-下拉選單元件  (f) 操作項目的內容選單-下拉選單元件 
 
圖 80、執行手機模擬器的畫面 
 
 
 
 
 
 
 
  73 
        
(e) 操作項目主選單-下拉選單元件   (f) 操作項目的內容選單-下拉選單元件 
 
圖 81、PDA Phone 上的 MIDlet 程式執行畫面 
 
圖 82 至 84 是終端使用者在手機上進行遙控操作 PC 上的行動多媒體名片樣板編
輯器，在手機操作介面上的按鈕與行動多媒體名片樣板編輯器的操作畫面上，圈
框貣的部份是標示相同對應的操作功能： 
 
       圖 82、手機上遙控行動多媒體名片樣板編輯器-Button 按鈕操作 
 
 
 
 
  75 
3.4.4 電子賀卡樣板編輯器 
電子賀卡樣板編輯器系統，提供多媒體賀卡的樣板套用功能，操作功能類似
行動名片樣板編輯器，但具有動畫角色的套用功能。主要的賀卡製作功能是進行
背景樣板(background)與動畫角色(actor)的套用，之後播放畫面會隨製作者的套
用，動態呈現預覽的結果，最後可以進行上傳到伺服器平台進行協調，再下載至
手機上播放，電子賀卡的編輯機制，搭配行動化，將來可以提供互動式多媒體簡
訊的應用，以下的介面系統畫面是系統端使用者利用介面系統載入電子賀卡樣板
編輯器，並產生出手機遙控介面的操作流程： 
Step1：在系統畫面上選擇載入電子賀卡樣板編輯器(圖 85、圖 86) 
Step2：點選 Generate Operation File 以產生操作描述檔案(圖 88、圖 89) 
Step3：點選 Generate Control Table 以產生控制表單(圖 90、圖 91、圖 92) 
Step4：點選 Generate MIDlet Source Code 並執行 WTK 編譯器(圖 93) 
Step5：編譯產生的 MIDlet 程式並執行手機模擬器(圖 94) 
Step6：執行手機模擬器的畫面(圖 95) 
Step7：PDA Phone 上的 MIDlet 程式執行畫面(圖 96) 
 
 
圖 85、在系統畫面上選擇載入電子賀卡樣板編輯器 
 
 
 
 
 
  77 
圖 89、描述檔案的內容 
 
圖 90、點選 Generate Control Table 以產生控制表單 
 
 
圖 91、控制表單的呈現畫面 
 
 
圖 92、控制表單的內容 
 
 
 
  79 
              
(a) 操作項目主選單-按鈕元件           (b) 操作項目的內容選單-按鈕元件 
 
圖 96、PDA Phone 上的 MIDlet 程式執行畫面 
 
圖 97 是終端使用者在手機上進行遙控操作 PC 上的電子賀卡樣板編輯器，在手
機操作介面上的按鈕與電子賀卡樣板編輯器的操作畫面上，圈框貣的部份是標示
相同對應的操作功能： 
 
 
圖 97、手機上遙控電子賀卡樣板編輯器-Button 按鈕操作 
 
 
 
  
  81 
表 17、評估項目的比較 
 評估項目 Generic Interfacing Interface 
Mechanism 
Current Java AP 
Development Approaches 
針對手機上
的 Java應用
程式開發 
Productivity 由介面產生器自動產生
MIDlet 程式，因此不需撰寫
手機上的操作介面程式。 
需要撰寫手機上的操作介
面程式。 
Maintainability 不需要重新撰寫互動的控制
程序，開發上較易維護。 
需要重新撰寫或改寫互動
的控制程序，開發上不易
維護。 
Flexibility 
 
能分析應用軟體的物件屬
性，自動產生手機上對應的操
作功能，開發方式較為彈性。 
需要設計手機上對應的操
作功能，開發方式較不彈
性。 
Efficiency 
 
不需要重新設計手機操作程
式與重新改寫被操作裝置上
的軟體。 
手機與被操作的裝置上，
都需要重新開發應用軟
體，才能提供新的操作功
能。 
 
由表 17 的評估項目比較得知，針對手機上的 Java 應用程式開發，在生產力、維
護力、彈性以及效率性這四個主要的項目上，由於提供了能夠產生手機內的 Java
程式之介面產生器系統，來為目標裝置上自動產生 Java 應用 MIDlet 程式，比現
行開發 Java 軟體的方式，更能夠提升上述四點的能力。 
                              
3.5 Conclusion  
3.5.1 結論 
本計畫提出一個遠端控制介面系統的架構(remote control interfacing system 
framework)，可以為特定裝置上的 Java 應用軟體，自動產生手機上的遙控操作介
面(remote control interface)，利用該架構開發的機制將使系統開發者免於重新撰
寫手機應用程式，以及減少特定裝置上的 Java 軟體開發時間，以下是該系統提
供幾項主要的特色： 
 
(1) 手機內的 Java 程式之介面產生器 
該介面系統(interfacing system)的核心元件，就是提供一個手機內的 Java 程式
之介面產生器(interface generator for MIDlet program)，這個產生器能夠剖析開
發者撰寫的程式樣板(即抽象類別)，並根據該程式樣板來產生操作描述檔案
  83 
上，在此我們將提出未來可能發展的方向及尚未解決的問題： 
 
(1) 介面系統能提供更多應用服務上的變化，例如擴增抽象類別的定義與操作檔
案的描述規則，在本研究中只定義了三種基本的 Swing 操作元件：(JButton、
JRadioButton、JComboBox)，未來則希望能夠制定更多的 Swing 操作元件。 
(2) 考慮結合手機的語音或影像辨識系統，提供前端的行動裝置能有更多元的互
動能力。 
(3) 進行遠端遙控大型廣告看板及數位電視(Java TV)，支援其他相容的 Java平台。 
(4) 手機內的 Java 程式之介面產生器進行適性化的協調(Content Adaptation)機
制，改善手機應用軟體介面的設計。 
四、參考文獻 
[1]  Norman Makoto Su,Yutaka Sakane, Masahiko Tsukamoto,Shojiro 
Nishio,September 2002 ,“Systems Issues: Rajicon:: remote PC GUI     
operations via constricted mobile interfaces” , International Conference on 
Mobile Computing and Networking, Proceedings of the 8th annual international 
conference on Mobile computing and networking.   
[2]  H. Okada, K. Kato, T. Ikegamai, Y. Tatusmi, and T. Asahi. Proposal of PC       
Remote Control System by Mobile Devices. IPSJ Sig Notes(2001-HI-93),    
2001(38):1–6, 2001. 
[3]  Jeffrey Nichols, Brad A. Myers, Michael Higgins, Joseph Hughes, Thomas      
K. Harris, Roni Rosenfeld, Mathilde Pignol, October 2002,“Papers:    
infrastructure for ubicomp: Generating remote control interfaces for     
complex appliances”, Symposium on User Interface Software and     
Technology, Proceedings of the 15th annual ACM symposium on User       
interface software and technology.  
[4]  Abrams, M., Phanouriou, C., Batongbacal, A.L., Williams, S.M., and     
Shuster, J.E. “UIML: An Appliance-Independent XML User Interface       
Language,” in The Eighth International World Wide Web Conference. 1999. 
Toronto, Canada. 
[5]  de Baar, D.J.M.J., Foley, J.D., Mullet, K.E. “Coupling Application Design     
and User Interface Design,” in Conference on Human Factors and     
Computing Systems. 1992. Monterey,California: ACM Press. pp. 259-266. 
[6]  Nichols, J.W. “Using Handhelds as Controls for Everyday Appliances: A       
Paper Prototype Study,” in ACM CHI'2001 Student Posters. 2001. Seattle, WA: 
pp. 443-444.  
  85 
[17]  Shih-Kun Huang, “Objected-Oriented Program Behavior Analysis Based on 
Control Patterns”;a Ph. D. dissertation, Computer Science and Information 
Engineering, National Chiao-Tung University, Taiwan, 2002. 
[18]  W. C. Chen, “A Reuse-based Software Construction Paradigm for Visualized 
Reusable Components and Frameworks”; a Ph. D. dissertation, Computer 
Science and Information Engineering, National Chiao-Tung University, Taiwan, 
1998. 
[19]  J. Rumbaugh, M. Blaha, W. Premerlani, F. Eddy and W. Lorensen;       
Object-Oriented Modeling and Design, 1991 Prentice-Hall. 
 
 
[20] Grady Booch; Object-Oriented Analysis and Design with Applications, The 
Benjamin/Cummings Publishing Company, Inc., 1994. 
[21]  Jones J., DVB/MHP Java
TM
 data transport mechanisms,Proceedings of       
the 40th International Conference on Tools Pacific: Objects for internet       
and embedded applications,Volume 10, 2002, pp: 115-121. 
[22]  Cesar P. and Vuorimaa P., A Graphical User Interface Framework for         
Digital Television, Proceedings of the 10
th
 International Conference on     
Computer Graphics, Visualisation and Computer Vision, February 2002,     
Czech Republic, Posters,pp. 1-4. 
[23]  Microsoft corporation. Universal plug and play forum.  
     http://www.upnp.org/ 
[24]  API specification for the Java 2 Platform, Standard Edition, version 1.4.2. 
     http://java.sun.com/j2se/1.4.2/docs/api/  
[25]  Java ME Technology API Documentation, MIDP 2.0 
     http://java.sun.com/javame/reference/apis/jsr118/ 
[26]  A Java/Swing GUI Framework 
     http://www.newt.com/java/swing.html 
[27]  Design Patterns in Java. Available:      
     http://www.fluffycat.com/java/patterns.html 
[28]  An Introduction To MHP 
     http://www.interactivetvweb.org/tutorial/mhp/index.shtml 
[29]  Java TV API 1.1 (JSR-927) 
     http://java.sun.com/javame/reference/apis/jsr927/ 
[30]  Introduction to Digital TV Applications Programming 
     http://java.sun.com/developer/technicalArticles/javatv/apiintro/ 
[31]  Java Media Framework API 
http://java.sun.com/products/java-media/jmf/2.1.1/download.html 
  87 
[49]  E. Lee, “User-interface development tools,” IEEE Software, Vol. 7, 1990, 
pp.31-36. 
五、計畫成果自評 
有關計畫成果可分為論文發表及專利申請兩大方向來自評。有關論文發表方面，
附於 5.1，成果發表如下 
5.1 Papers publication 
1) Shih-Jung Peng, Jan Karel Ruzicka and Deng-Jyi Chen, “A Generic and Visual 
Interfacing Framework for Bridging the Interface between Application Systems 
and Recognizers,” Journal of Information Science and Engineering, Vol. 22, No.5, 
September 2006, pp.1077-1091 .(SCI) 
2) Deng-Jyi Chen, Shih-Jung Peng and Chin-Eng Ong, “Generate Remote Control 
Interface Automatically into Cellular Phone for Controlling Applications running on 
PC”, Journal of Information Science and Engineering, Vol.26, No.2, Mar. 2010, 
pp549-563 
3) Shih-Jung Peng and Deng-Jyi Chen, “A Generic Interface Methodology for 
Bridging Application Systems and Speech Recognizers,” 2007 International 
Conference on Information, Communications and Signal Processing (IEEE 
ICICS2007), 10-13 December, 2007, in Singapore 
4) Ming-Jyh Tsai, Deng-Jyi Chen, Chi-Chung Hung and Hao-Chun Lu, 2009, 
Context Aware and Content Adaptation of Template Based Multimedia 
Presentation on Handset Devices, Advances in Multimedia Information Processing 
- PCM 2009, December 15-18, Bangkok, Thailand. 
5) Ah-Fur Lai, Deng-Jyi Chen, Web-based Two-tier Diagnostic Test and Remedial 
Learning Experiment, International Journal of Distance Education Technologies, 
Vol. 8, Issue 1, 2010, pp. 31-55. 
6) Chung-Yueh Lien, Hsu-Chih Teng, Deng-Ji Chen, Woei-Chyn Chu, and 
Chia-Hung Hsiao, “ A Web-Based Solution for Viewing Large-Sized Microscopic 
Images” Journal of Digital Imaging, Published online: 27 June 2008, 
0897-1889 (Print) 1618-727X (Online). doi: 10.1007/s10278-008-9136-x 
7) Chen, D.J., Lai, A.F., Chiu, H.H., & Cheng, H.L., 2008, The Design and 
Implementation of On-line Video-based Oral Test Management System and its 
Experiment on English Speaking Proficiency Test, Proceedings of 
Technology  Enhanced Learning Conference 2008, Dec 4-6,2008, Hanoi, Vientam. 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/21
國科會補助計畫
計畫名稱: 設計及製作介面系統產生器用於整合連結前端認知辨識系統及後端應用軟體
系統
計畫主持人: 陳登吉
計畫編號: 97-2221-E-009-062-MY3 學門領域: 程式語言與軟體工程
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
