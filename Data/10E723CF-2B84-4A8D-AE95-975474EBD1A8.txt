factors. Our experimental results show that the 
proposed method is indeed effective. 
英文關鍵詞： image forgery, resampling, zeroing mask, 
interpolation 
 
IEEE Transactions on Image Processing: TIP-06918-2010.R3 
 
2
  
Abstract—In this study, we propose an effective method for 
detecting linear up-sampling in images. Our method includes 
three parts. First, we present an algorithm Resampling Matrix 
Construction (RMC) that automatically derives the resampling 
matrix for any given resampling factor of fraction. Second, we 
show an algorithm Zeroing Mask Derivation (ZMD) that 
constructs a zeroing mask for the resampling by produced by the 
proposed algorithm. Lastly, we propose an algorithm 
Up-sampling Detection (UD) that detects the up-sampling in 
images using the zeroing masks in a specific order. Compared 
with existing methods, the proposed method for up-sampling 
detection can not only effectively detect resampling by any 
fraction but can also recover the up-sampling fraction. 
Preliminary experimental results show that the proposed method 
is indeed effective. 
 
Index Terms—image forgery, linear up-sampling, resampling 
factor, zeroing mask, linear interpolation. 
 
I. INTRODUCTION 
ITH the widespread use of the Internet and availability 
of powerful image processing and editing software, 
digital images are easy to acquire through the Internet 
and to manipulate and edit. To protect copyrights and prevent 
forgery, methods for forgery detection have become more and 
more important and thus it is necessary to identify the 
authenticity of images. 
Recently, many methods for detecting forged images have 
been proposed. Popescu and Farid [1] and Gopi et al. [2] 
detected forgeries with resampling or rotation based on the 
relationship between each pixel and its neighbors. Nillius and 
Eklundh [3] and Johnson and Farid [4] used light source 
consistency to detect forged images. Li et al. [5] detected 
tampered watermarked images with the embedded information 
and then recovered the images using the methods similar to 
                                                 
Manuscript received October 25, 2010. This work was supported by the 
National Science Council of Taiwan, R.O.C. under the grant 
NSC-99-2221-E-032-069. 
Yang-Ta Kao is currently an assistant professor at Department of 
Information Network Technology, Chihlee Institute of Technology. (e-mail: 
ydkao@mail.chihlee.edu.tw). 
Hwei-Jen Lin is currently a professor at the Department of Information 
Engineering of Tamkang University. (phone: 886-2-2621-5656 Ext. 2738; 
e-mail: 086204@mail.tku.edu.tw). 
Chun-Wei Wang was with Tamkang University, Taipei, Taiwan. He is 
currently serving in the Army (e-mail: chunweiwang0120@gmail.com). 
Yi-Chun Pai is currently a Ph. D. student at the Department of Information 
Engineering of Tamkang University (e-mail: ianevangeline@gmail.com). 
those in [6-7]. 
Camera defects such as chromatic aberration [8] and sensor 
pattern noise [9-12], and the color filter arrays [13] which 
cameras use to interpolate colors can be used to detect 
forgeries. Copy-move images are easily made by copying 
certain regions and pasting them on some other regions. Some 
methods have been proposed to detect these kinds of forged 
images [14-19]. 
Due to the fact that resampling is frequently involved in 
image forgeries, we would like to propose an effective method 
to detect such manipulation in images. Popescu and Farid [1] 
proposed a technique for detecting traces of digital tampering 
in the complete absence of any form of digital watermark or 
signature. They employed the expectation maximization 
algorithm (EM) to simultaneously estimate a set of periodic 
samples that are correlated to their neighbors, and the specific 
forms of these correlations. In the method proposed by Gopi et 
al. [2], the image was divided into sub-blocks, each with a size 
of 50X50. Each sub-block was reshaped to size of 1X2500 and 
modeled with 20 coefficients. These coefficients were treated 
as feature vectors to train the ANN. 300 such feature vectors 
were collected from the original images. Another 300 feature 
vectors were collected from the forged images. All of these 
feature vectors were used to train a neural network. In each of 
the above methods, the detecting window has a fixed size, and 
thus the resampling detected is limited to a small range of 
fractions. Another drawback is inability to recover the 
resampling fraction. In this study, we propose an effective 
method for not only detecting image resampling and but also 
recovering the corresponding fraction. 
The rest of the paper is organized as follows. In Section 2, 
the proposed method is described in detail. In Section 3, we 
show some experimental results and offer a conclusion in 
Section 4. 
II. THE PROPOSED METHOD 
A.  Resampling 
Resampling is the mathematical technique used to create a 
new version of the image with a different width and/or height 
in pixels. Increasing the size of an image is called upsampling; 
reducing its size is called downsampling. 
Color images are treated like three grey-scaled images 
which are separated from the original image, individually 
resampled, and finally recombined to create the final image. 
For two dimensional resampling, resampling for each 
dimension could be separately performed and could be 
Effective Detection for Linear Up-Sampling by 
Factor of Fraction 
Yang Ta Kao, Hwei Jen Lin, Chun Wei Wang, and Yi Chun Pai
W 
IEEE Transactions on Image Processing: TIP-06918-2010.R3 
 
4
(7) 
for every integer k with 0 < pk < m and 0 < qk < n, or 0 < k < 
min{m/p, n/q}. 
Because of the periodicity, it is sufficient to consider only 
the (p+1)×(q+1) sub-matrix Ap/q[1..p+1, 1..q+1] for any 
resampling matrix Ap/q. We called the sub-matrix Ap/q[1..p+1, 
1..q+1] the primary sub-matrix of Ap/q. For the sake of 
simplicity, as follows, when we refer to a resampling matrix 
Ap/q, we mean its primary sub-matrix. (8), (9), and (10) show 
the newly defined matrices A2/1, A4/3, and A5/4, respectively, 
from each of which we can see that the entries are symmetric 
to the center of the matrix; that is, Ap/q [i, j] = Ap/q [p+2-i, q+2-j] 
for i = 1, 2, …, p+1 and j = 1, 2, …, q+1. 
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
=
10
5.05.0
01
1/2A
                                                      
(8) 
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
=
1000
25.075.000
050.050.00
0075.025.0
0001
3/4A
                               
(9) 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
=
1000
4.06.000
08.02.00
02.08.00
006.04.0
0001
3/5A
     
      (10) 
Again, for the sake of simplicity we assume that q = 1 or p 
and q are coprime (or relatively prime) positive integers. 
For 1 ≤ q < p ≤ 12, there are a total of 45 factions p/q made 
up as listed below: 
p = 2, q = 1;                 
p = 3, q = 1, 2; 
p = 4, q = 1, 3;  
p = 5, q = 1~4;              
p = 6, q = 1, 5; 
p = 7, q = 1~6;              
p = 8, q = 1, 3, 5, 7;  
p = 9, q = 1, 2, 4, 5, 7, 8;     
p = 10, q = 1, 3, 7, 9;  
p = 11, q = 1~10;   
p = 12, q = 1, 5, 7, 11. 
It can be further observed from (8) to (10) that every row 
except the top row and the bottom row in a resampling matrix 
Ap/q , has exactly two nonzero entries, which are adjacent in 
the row. The nonzero entries in row i are 
( ) ppqip /mod))1(( ⋅+−  and ( ) ppqi /mod))1(( ⋅+ . Assume 
that the nonzero entries in row i ( 12 −≤≤ pi ) are located in 
the jth and (j+1)th columns. Then, those in row i + 1 are 
located in the (j+1)th and (j+2)th columns 
if pqip mod))1(( ⋅+−  < ;mod))2(( pqip ⋅+−  and located 
in the jth and (j+1)th columns, otherwise. The general form of 
the resampling matrix Ap/q is given in (11), where ( ) ppqipi /mod)( ⋅−=β , i = 1, 2, …, p-2, denotes the first 
nonzero entry located in the (i+1)th row of Ap/q . Let rβ be in 
column c(r) of Ap/q; then rqp rcrA β=+ )](),1[(/ . If 
1+> rr ββ (or pqrp mod)( ⋅− > pqrp mod))1(( ⋅+− ), then 
rβ and `1+rβ must be located in the same column, that is, c(r+1) 
= c(r); otherwise, c(r+1) = c(r) + 1. 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢
⎣
⎡
−
−
−
−
−
−
−
=
−−
++++
++
++
++
1000
100
00
0010
0100
00000
000100
0010
0100
000
0001
000001
22
11
22
11
11
/
LLL
LOOM
LLLM
MLLL
LLMML
L
LLLM
MLLL
LLLOO
LLL
LLL
pp
krkr
krkr
rr
rr
rr
qpA
ββ
ββ
ββ
ββ
ββ
ββ
ββ
  (11)  
                                                             
As shown in (11), assume that 1+> ii ββ  (or 
pqrp mod)( ⋅− > pqrp mod))1(( ⋅+− ), for i = r+1, 
r+2, …r+k, and kr+β < `1++krβ  (or pqkrp mod))(( ⋅+−  
< pqkrp mod))1(( ⋅++− ), then c(r) +1 = c(r+1) = c(r+2) 
= ...= c(r+k) = c(r+k+1) - 1. For each row (between the 3rd 
row and the (p-1)th row) where its first nonzero entry is 
located at the same column as the first nonzero entry in the 
preceding row, we called it the following row. It can be 
observed that the matrix Ap/q possesses a following row only 
when p > q+1. For instance, the 4th row of the matrix A5/3 is a 
following row. 
The sequence of the entry pairs ),1,(( 11 ββ − ),1,( 22 ββ −  
))1,(, 22 −− − pp ββL is symmetric; i.e., ipi −−−= 11 ββ  for i = 1, 
2, …, ⎣ ⎦2/)1( −p . 
With the above observation we may determine the content 
of any resampling matrix Ap/q. The algorithm Resampling 
Matrix Construction (RMC) deriving resampling matrices is 
given as follows. 
Algorithm RMC 
IEEE Transactions on Image Processing: TIP-06918-2010.R3 
 
6
the same set of signals. Hence, a solution for a zeroing mask 
corresponds to a set of parallel vectors (M and M’ are 
considered two parallel vectors), which can be considered as a 
1-D vector space. Therefore, for p ≥ q+2 (or p-q ≥ 2) there are 
an infinite amount of nonequivalent zeroing masks for the 
resample fraction p/q. To unify equivalent zeroing masks and 
to exclude the zero zeroing mask as well, we fix the first 
element 11 =α  for every mask Fp/q = [ 121 +pααα L ]. This is 
equivalent to adding the equation 11 =α  in each of the 
systems stated above. This setting can also avoid trivial 
solutions or the solution of the zero filter. For example, adding 
the equation 11 =α  into (21) yields the nonhomogeneous 
linear system shown in (23), which is equivalent to the matrix 
form shown in (24). 
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
=+⋅
=⋅+⋅+⋅
=⋅+⋅+⋅
=⋅+
=
04.0
06.08.02.0
02.08.06.0
04.0
1
65
543
432
21
1
αα
ααα
ααα
αα
α
                                  
(23) 
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
=
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
0
0
0
0
1
14.00000
06.08.02.000
002.08.06.00
00004.01
000001
6
5
4
3
2
1
α
α
α
α
α
α
               
(24) 
The zeroing masks for the resample factor 5/3 can be 
obtained by solving the nonhomogeneous linear system in (23) 
or (24). In general, the zeroing mask Fp/q for the resample 
factor p/q can be obtained by solving the following 
nonhomogeneous linear system given in (25). 
,2// += qt qpqp IFE                                             
(25) 
where 
⎥⎥⎦
⎤
⎢⎢⎣
⎡= +t
qp
t
p
qp A
I
E
/
1
/
, tkkI ]0001[ L= denotes a unit 
column matrix with a size of k×1, and Fp/q = [ 121 +pααα L ] 
is a row matrix of size 1×(p+1) consisting of p+1 variables. 
Therefore, qpE /  is a matrix of size (q+2)×(p+1) with the 
submatrix tpI 1+  located at its top row, i.e., qpE / [1..1, 1..p+1] 
= tpI 1+ , and qpE / [2..q+1, 1..p+1] = 
t
qpA / . Taking the general 
form for qpA /  given in (11) yields the expanded form for 
qpE / , as shown in (26). 
 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢
⎣
⎡
−
−
−−−
−
−
=
−
−
++
+++++
+++
11000
00
00
00
000
1000000
111000
0100
00000000
00010
00000001
00000000001
2
2
1
121
21
1
1
/
p
p
kr
krkrrr
krrrr
r
qpE
β
β
β
ββββ
ββββ
β
β
β
M
MOM
MO
MO
MO
ML
ML
LLO
LLO
LLL
L
      
          (26) 
 
The transpose of the augmented matrix of the linear system shown in (25), =+ tqqp IE ]|[ 2/  ⎥⎥⎦
⎤
⎢⎢⎣
⎡
+
+
t
q
qpp
I
AI
2
/1 | , has the expanded 
form of size (p+2)×(q+2), as shown in (27). 
 
IEEE Transactions on Image Processing: TIP-06918-2010.R3 
 
8
Interchanging the top row with the bottom row of the above matrix tqqp IE ]|[ 2/ + yields the matrix Dp/q shown in (28). 
 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
−
−
−
−
−
−
−
=
−−
++++
++
++
++
00011
10000
100
1
1
1
1
1
00
000010
00001
22
11
22
11
11
/
pp
krkr
krkr
rr
rr
rr
qpD
ββ
ββ
ββ
ββ
ββ
ββ
ββ
OO
MM
OO
L
      
                (28) 
 
It is not difficult to observe that when carrying out 
Gauss-Jordan elimination on A, the first row is left unchanged, 
the pair of entries 1β  and 11 β−  in the 2nd row are changed 
to 1 and 0, respectively. Then for each row i (3 ≦ i ≦ p-1), 
the pair of entries 
1−iβ  and 11 −− iβ  are changed to 1 and 0, 
respectively, if it is not a following row; and both are changed 
to 0, otherwise. Finally the pth row is left unchanged and the 
two ones in the bottom row become a row of zeroes. As a 
result, the matrix Dp/q can be reduced to a matrix with a 
leading one in each column, and such a matrix can be further 
reduced to a reduced row-echelon form Rp/q with q+2 leading 
ones since there are q+2 columns. Thus the rank of Dp/q is 
rank(Dp/q) = q+2. Since neither transposition nor an 
elementary row operation change the rank of a matrix, we 
have the following lemma. 
Lemma 1 The rank of ]|[ 2/ +qqp IE  is q+2. 
Example 1 Considering p/q = 5/3,  
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢
⎣
⎡
=
00011
10000
4.06.0000
08.02.000
02.08.000
006.04.00
00001
3/5D
  
 
is of size 7×5 and has the reduced row-echelon form 
 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢
⎣
⎡
=
00000
00000
10000
01000
00100
00010
00001
3/5R
, 
 
which has a leading one in each column. 
Definition 1 A matrix is called the reverse of a 
matrix A of size m×n and denoted by Ar, if Ar is of 
the same size as A and Ar [i, j] = A[m+ i-1, n+j-1], 
for 1≦i≦m, 1≦j≦n. 
Since the sequence ),1,(( 11 ββ − ,),1,( 22 Kββ −  
))1,( 22 −− − pp ββ  is symmetric; i.e., ipi −−−= 11 ββ  for i = 1, 
2, …, ⎣ ⎦2/)1( −p , the reverse of qpE / can be expressed as 
]|[)( 1//
r
pqp
rt
qp IAE += . With an argument similar to that for 
the rank of Dp/q, we can conclude that the reduced row-echelon 
form of the matrix rt qpE )( /  has a leading one in each column 
and thus has a rank of q+2. Since reversion can be 
accomplished by performing a sequence of elementary row 
operations, we have the following lemma. 
Lemma 2 The rank of qpE /  is q + 2. 
Theorem 1 The nonhomogeneous linear system 
shown in (25) is consistent. 
Proof: According to theorems from elementary 
linear algebra (Howard Anton, 2005) [20], a 
nonhomogeneous linear system is consistent if and 
only if its coefficient matrix and its augmented 
matrix have the same rank; hence the system is 
IEEE Transactions on Image Processing: TIP-06918-2010.R3 
 
10
⎣ ⎦
⎣ ⎦
1                           
                           
do 1 while                       
else                    
1                           
                           
             do 1 while                        
then                    
2/)2(1 & odd is  if                 
                     
)(                     
1                         
                         
do 1  while                    
1                     
/)(                     
1                         
                         
do   while                    
                     
1                     
do 2/)2( while             
2                 
1                 
1                 
 ..., , , tscoefficien :Output
     with and 
 integerscoprime positive  two:Input
2
2
1
ki
1
1
1
121
−←
←
+≤
−←
−←
+≤
+=−
+←
−⋅←Δ
+←
←
−≤
←
Δ−←
+←
+←
≥
←
←
+≤
←
−←Δ
←
>
−+
−+
−++
+
+−+
+
ii
aa
pi
ii
aa
pi
pip
kii
ka
aa
k
a
kk
k
pi
i
a
aaa
qpqp
ipi
ipi
i
ii
i
kiki
i
p
α
α
βαα
ββ
βα
β
ll
l
l
ll
 
D.  Detecting resampling with zeroing masks 
To detect horizontal up-sampling of factor p/q for an image 
I of size m×n, each row of I is divided into overlapping blocks 
of size 1×(p+1), and each block y is convolved with the 
zeroing mask Fp/q, as shown in (14). More precisely speaking, 
for each Ik, the kth row of I, it is divided into blocks Bk1, Bk2, …, 
Bkr, where Bkj = I[k, (j-1)p+1.. jp+1] and r = ⎣(n-1)/p⎦. 
Detection for vertical up-sampling can be done in a similar 
manner by dividing each column of I into overlapping blocks 
of size (p+1)×1 to perform convolution with Fp/q. 
When detecting resampling using a sequence of zeroing 
masks, M1, M2, …, MK, constructed by algorithm ZMD, in a 
specific order. We assume that Mi is the zeroing mask for 
resampling of fractions pi/qi, then 1 ≤ qi < pi ≤ K, and qi is 
equal to 1 or pi and qi are coprime. We consider three different 
sorting orders for the zeroing masks in the sequence. Each of 
the sorting orders satisfies the condition mentioned in 
Theorem 5 to avoid false positive. In the first sorting order, the 
masks are sorted so that the numerators of their corresponding 
fractions are in the decreasing order and then the denominators 
are in the increasing order. That is, the list of their 
corresponding fractions is of the form: p1/q11, p1/q12, …, 
p1/q1k1, p2/q21, p2/q22,…, p2/q2k2,…, pn/qn1, pn/qn2,…, pn/qnkn, 
where p1 > p2 >…> pn, and qi1 < qi2 <…< qiki <pi. In the second 
sorting order, the masks are sorted so that the denominators of 
their corresponding fractions are in the increasing order and 
then the numerators are in the decreasing order. Thus, the list 
of their corresponding fractions is of the form: p11/q1, p12/q1,…, 
p1k1/q1, p21/q2, p22/q2,…, p2k2/q2,…, pn1/qn1, pn2/qn2,…, pnkn/qn, 
where q1 < q2 <…< qm, and pi1 > pi2 >…> piki > qi. In the third 
sorting order, they are sorted in the decreasing order of the 
differences p-q. Thus, the list of their corresponding fractions 
is of the form: p1/q1, p2/q2, …, pK/qK, where qi < pi and p1-q1 > 
p2-q2 > …> pK-qK. With each of the orders mentioned above, 
Mi is not a zeroing mask for every fraction pj/qj with j > i since 
neither pi|pj nor qj|qi holds. As a result, theoretically, a false 
positive can be avoided. 
Due to the space limitation, we only explain 19 fractions 
(1< q < p ≤ 9), which are denoted by (f(k))k = 1, 2, …, 19 = (9/2, 
7/2, 8/3, 9/4, 7/3, 9/5, 5/2, 7/4, 8/5, 5/3, 7/5, 9/7, 3/2, 4/3, 5/4, 
6/5, 7/6, 8/7, 9/8), in which the fractions p/q are sorted 
according to the differences p-q. As in the matrix T shown in 
Fig. 2, T[i, j] = 1 means that any zeroing mask for the fraction 
f(j) is also one for f(i); otherwise, it is not. For example, by 
Theorem 3, any zeroing mask for fraction 5/4 is also one for 
fraction 5/2, and thus T[7, 15] = 1. It is inevitable that T[i, j] = 
1 for i = j. Because T is an upper triangular matrix, the use of 
this sequence of masks can avoid a false positive. 
For detecting up-sampling by fraction p/q on an 
image region I, we use an up-sampling portion 
function up as defined in (29), where Bd(I), d = H or 
V, is the set of divided blocks of the image region I. 
BH(I) = {Bij}i = 1, 2, .., m; j = 1, 2, …, ⎣(n-1)/p⎦ for horizontal 
detection, and BV(I) = {Bij}i = 1, 2, .., ⎣(m-1)/p⎦; j = 1, 2, …, n 
for vertical detection. Let Mp/q*Bij denote the 
convolution value of Bij by the mask Mp/q. If the 
convolution value Mp/q* Bij is small enough, block 
Bij is considered to be resampled by factor p/q. The 
function h is used to count the blocks resampled by 
factor p/q: h(x) = 1 if x ≤ s, and 0 otherwise, where s 
is a given threshold. If the resampling score value 
up(I, p/q) is greater than a threshold t, we consider 
the image region I as having been resampled by 
fraction p/q. 
( )∑
∈
∗=
)(
/|)(|
1)/,(
IBB
ijqp
d dji
BMh
IB
qpIup                       
(29) 
IEEE Transactions on Image Processing: TIP-06918-2010.R3 
 
12
 
(d) 
 
(e) 
 
(f) 
Fig. 3. (a) Original image, (b) & (c) resampled images by fractions 5/4 and 4/3, respectively. (d)~(f) scores for images in (a)~(c) with the sequence of 45 masks, 
where each of the green bars indicates a hit of detection with high score. 
 
As shown in Tables I and II, the detection rate 
for up-sampling in each of horizontal detection 
and vertical detection and with each order of 
masks reaches 100%, and the recovery rate for 
up-sampling rates in each case is higher than 
98.07%. The detection rates for up-sampling for 
our method and the method proposed by Popescu 
and Farid [1] are compared in Fig. 4. 
 
Table I 
Detection rates for up-sampling 
Order Detection Rates(H) Detection Rates(V) 
1 100 100 
2 100 100 
3 100 100 
Table II  
Recovery rates for up-sampling rates 
Order Detection Rates(H) Detection Rates(V) 
1 96.99 98.07 
2 99.20 99.76 
3 99.22 99.57 
As illustrated in Fig. 5, while tested on each 
resampling rate in the range [1, 12], the average 
computational times required by our method and 
the method proposed by Popescu and Farid are 
0.03912 seconds and 10.8615 seconds, 
respectively. Note that for the method proposed 
by Popescu and Farid, the time required by 
observing response produced by Fourier 
transform is not included the counted running 
time. 
As shown in Table III, the detection rates for 
the up-sampled images, which have been 
modified by JPEG compression with quality 
factors higher than 98, are all higher than 97.3%. 
IEEE Transactions on Image Processing: TIP-06918-2010.R3 
 
14
provided zeroing masks. To overcome this limitation, we 
are currently trying to use the sequence of masks to 
approximately detect resampling by a much wider range of 
fractions. For example, a zeroing mask of fraction 4/3 can 
be used to detect resampling by factor near 4/3, such as 1.3, 
1.33, or 1.34, etc. Such an approach is expected to detect 
other types of resampling (eg., cubic) in an approximate 
manner. In the future, we will also deal with resistance to 
other sorts of modification such as rotation, Gaussian noise, 
and gamma correction, and extend our study to color 
images. 
ACKNOWLEDGMENT 
This work was supported by the National Science 
Council of Taiwan, R.O.C. under the grant 
NSC-99-2221-E-032-069. 
REFERENCES 
[1] A. C. Popescu and H. Farid, “Exposing digital forgeries by detecting 
traces of resampling,” IEEE Transactions on Signal Processing, Vol. 
53, 2005, pp. 758-767. 
[2] E. S. Gopi, N. Lakshmanan, T. Gokul, S. KumaraGanesh, and P. R. 
Shah, “Digital image forgery detection using artificial neural network 
and auto regressive coefficients,” Electrical and Computer 
Engineering, 2006, pp. 194-197. 
[3] Peter Nillius and Jan-Olof Eklundh, “Automatic estimation of the 
projected light source direction,” in Proceedings of 2001 IEEE 
Computer Society Conference on Computer Vision and Pattern 
Recognition, Vol. 1, 2001, pp. 1076-1083. 
[4] M. K. Johnson and H. Farid, “Exposing digital forgeries by  
detecting inconsistencies in lighting,” in Proceedings of ACM 
Multimedia and Security Workshop, New York, 2005, pp. 1-9. 
[5] Kwang-Fu Li, Tung-Shou Chen, and Seng-Cheng Wu, “Image 
tamper detection and recovery system based on Discrete Wavelet 
Transformation,” Intelligent Conference Communications, 
Computers and Signal Processing, Vol. 1, 2001, pp. 26-28. 
[6] Phen Lan Lin, Chung-Kai Hsieh, and Po-Whei Huang, “A 
hierarchical digital watermarking method for image tamper detection 
and recovery,” Pattern Recognition, Vol. 38, Issue 12, 2005, pp. 
2519-2529. 
[7] Ming-Shi Wang, Wei-Che Chen, A majority-voting based 
watermarking scheme for color image tamper detection and recovery, 
Computer Standards & Interfaces, Vol. 29, No. 5, July, 2007, pp. 
561-570. 
[8] M. K. Johnson and H. Farid, “Exposing digital forgeries through 
chromatic aberration,” in Proceedings of ACM Multimedia and 
Security Workshop, New York, 2006, pp. 48-55. 
[9] N. Khanna, A. K. Mikkilineni, G. T. C. Chiu, J. P. Allebach, and E. J. 
Delp, “Scanner identification using sensor pattern noise,” in 
Proceedings of the SPIE International Conference on Security, 
Steganography, and Watermarking of Multimedia Contents IX, Vol. 
6505, No. 1, 2007, pp. 65051K. 
[10] J. Lukas, J. Fridich, and M. Goljan, “Detecting digital image 
forgeries using sensor pattern noise,” in Proceedings of the SPIE 
Conference on Security, Steganography, and Watermarking of 
Multimedia Contents, Vol. 6072, January 2006, pp. 362-372. 
[11] J. Lukas, J. Fridrich, and M. Goljan, “Determining digital image 
origin using sensor imperfections,” in Proceedings of SPIE 
Electronic Imaging, Image and Video Communication and 
Processing, January 16-20, 2005, pp. 249-260. 
[12] N. Khanna, G. T. C. Chiu, J. P. Allebach, and E. J. Delp, “Scanner 
identification with extension to forgery detection, ” in Proceedings of 
SPIE Electronic Imaging, San Jose, CA, Vol. 6819, February 2008. 
[13] A. C. Popescu and H. Farid, “Exposing digital forgeries in color filter 
array interpolated images,” IEEE Transactions on Signal Processing, 
Vol. 53, 2005, pp. 3948–3959. 
[14] A. C. Popescu and H. Farid, “Exposing digital forgeries by detecting 
duplicated image regions,” Technical Report, TR2004-515, 
Dartmouth College, Computer Science, 2004. 
[15] Guohui Li, Qiong Wu, Dan Tu, and Shaojie Sun, “A sorted 
neighborhood approach for detecting duplicated regions in image 
forgeries based on DWT and SVD,” in Proceedings of IEEE 
International Conference on Multimedia and Expo., Beijing China, 
July 2-5, 2007, pp. 1750-1753. 
[16] Weiqi Luo, Jiwu Huang, and Guiping Qiu, “Robust detection of 
region- duplication forgery in digital image,” in Proceedings of the 
18th International Conference on Pattern Recognition, Vol. 4, 2006, 
pp. 746-749. 
[17] Hwei-Jen Lin, Chun-Wei Wang, and Yang-Ta Kao, “An efficient 
method for copy-move forgery detection,” in Proceedings of the 
WSEAS International Conference, Hangzhou, China, May 20-22, 
2009. 
[18] Hwei-Jen Lin, Chun-Wei Wang, and Yang-Ta Kao, “Fast copy-move 
forgery detection,” WSEAS Transactions on Signal Processing, Vol. 
5, Issue 5, 2009, pp. 188-197. 
[19] A. N. Myna, M. G. Venkateshmurthy , and C. G. Patil, “Detection of 
region duplication forgery in digital images using wavelets and 
log-polar mapping,” in Proceedings of the International Conference 
on Computational Intelligence and Multimedia Applications 
(ICCIMA 2007), December 13-15, 2007, pp. 371-377. 
[20] Howard Anton and Chris Rorres, “Elementary linear algebra,” 9th 
edition, WILEY, 2005. 
REF05 
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：101 年 6 月 15 日 
一、參加會議經過 
International Conference on Electrical Engineering and Computer Science (ICEECS) 是
由 Agency for Science Technology and Research 主辦。會議地點在新加坡。會議時程
只有一天，此次總共發表一篇論文，安排在當天上午報告。 
二、與會心得 
在會場有許多專家學者參加此次會議，可與來自世界各地的專家學者研討並交換資
訊、經驗與心得。在論文報告的場次中同時瞭解了其他專家學者所做的研究，收穫豐
計畫編號 NSC 100-2221-E-032 -054 
計畫名稱 影像重新取樣與其倍率之精確與近似偵測 
出國人員
姓名 林慧珍 
服務機構
及職稱 
淡江大學資工系 
 
會議時間 
民國 101 年 6 月 9 日
至 101 年 6 月 9 日 
會議地點 
新加坡 
會議名稱 
(中文)電氣工程與電腦科學國際研討會 
(英文) International Conference on Electrical Engineering and Computer 
       Science (ICEECS) 
發表論文
題目 
(中文)臉部表情模仿 
(英文) Facial Expression Imitation 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/06/18
國科會補助計畫
計畫名稱: 影像重新取樣與其倍率之精確與近似偵測
計畫主持人: 林慧珍
計畫編號: 100-2221-E-032-054- 學門領域: 影像處理
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
擔任研討會議程主席: 
2011 亞太大學資訊教育暨數位學習發展研討會（iCube2010）」，Dec. 2010. 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
