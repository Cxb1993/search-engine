                                                             共 9 頁  第 2 頁 
與否。 
 
雖然在引進最長共同子序列問題後，生物序列的相似程度可以經由計算機輔助並加以量化。但隨即
發現，單純的計分方式無法詳細表現生物序列各種胺基酸之間的相對親近程度或關係。因此使用較
為複雜的分數矩陣(Score Matrix)的序列排列(Sequence Alignment)問題引起廣大的研究興趣，各研究
學者基於不同的考量發展出各式不同的分數矩陣像是 PAMs、Blosums、Gonnets，或計分方式[Alts89, 
Dayh78, Dayh79, Lesk86]，主旨均是圍繞在如何合理量化兩生物序列間的相似程度，以期得到貼近
演化史的演化樹或較佳的結構預測。 
 
然而各學者提出之分數矩陣計算方式莫衷一是，在不同場合或不同要求下使用的分數矩陣亦不相
同。若是使用者對分數矩陣的揀選無所適從、或需考慮的因素所搭配的分數矩陣多於一個時，那如
何評定最後序列排定結果的優勝劣敗？因此，本研究期望探討在多個分數矩陣同時運用的情況下，
能有一客觀合理的方式用以評定結果之好壞。我們所提出之方法並非唯一解決之道，然而是個研究
的新方向，亦期望藉此能激發學者們對此問題之研究。 
文獻探討： 
我們以下簡單介紹利用分數矩陣，計算兩條生物序列的相似度方法。 
演算法：生物序列最佳排列演算法 
輸入：生物序列 S=s1s2…sm與 T=t1t2…tn，分數矩陣 SM(s,t)。 
輸出：S 與 T 在排列後，經由 SM(s,t)加總後可得之最高總分。 
詳細步驟： 
 步驟 0：(初始化 I) 
    AL(0,0)=0 
 步驟 0：(初始化 II) 
    AL(i,0)=0, where 1≦i≦m 
 步驟 0：(初始化 III) 
    AL(0,j)=0, where 1≦j≦n 
 步驟 1： 
    









),,(),1(
),,()1,1(
),,()1,(
max),(
i
ji
j
sSMjiAL
tsSMjiAL
tSMjiAL
jiAL  where 1≦i≦m and 1≦j≦n. 
 步驟 2： 
    傳回 AL(m,n). 
 
在上述演算法中，AL 是我們的排列晶格(Alignment Lattice)，它是一個大小為(m+1)×(n+1)的二維陣
列，AL(i,j)記錄著在 S 字串的前 i 個與 T 字串的前 j 個排列在一起時的最高得分，我們亦可利用其
來追溯最高得分的排列為何，在之後我們會有簡單的小例子說明。而 SM 即為我們所稱的分數矩
陣，它是一個對應表，給定兩個需要排列在一起的字母，它會傳回這兩字母排列在一起的得分為何。
分數矩陣是對稱的，因為給定的兩字母如 a 與 b 排列在一起、與 b 與 a 排列在一起是一樣的分數。
通常除了生物序列的四個核苷酸、或二十個胺基酸外，還會使用「-」符號來表示空格之意。某些
計分方式相當重視連續空格數使用的多寡，開新空格甚至有額外的扣分，此方式我們稱為 Affine 
Gap Penalty[Alts89, Lesk86]，在此我們略下不表。 
 
我們用一個簡單的小例子，來詳細說明上述的演算法。假設 S=ab 而且 T=bac，而我們的分數矩陣
                                                             共 9 頁  第 4 頁 
SM - a b c d 
- -∞ -1 -1 -1 -1 
A -1 4 1 0 2 
B -1 1 3 0 -2 
C -1 0 0 2 1 
D -1 2 -2 1 1 
 
 
圖 二：S=abdcd與 T=bacddb的排列晶格 
 
在圖二的排列晶格中，若我們依循粗黑線的指引由右下方追溯到左上方時，可以得到兩組最佳排列
bacddb
abdcd


與
bacddb
d-abdc


，其得分為 5。事實上，我們亦可在追溯的過程中，在某處刻意地迴避粗
黑線，之後再依循粗黑線追溯，則我們可得某個較差於最佳排列的生物序列排列。視其迴避粗黑線
處及其方向，其差分公式詳列於下： 
 












.
,
,
),(),1(
),()1,1(
),()1,(
),()(
vu
du
hu
sSMjiAL
tsSMjiAL
tSMjiAL
jiALp
i
ji
j
 if
 if
 if
  
 
其中 h、d、v 為其方向，分別代表水平、對角、垂直。我們在圖三中列出在差分為二以內的所有近
似最佳排列其追溯情形。 
 
 
圖 三：S = bacddb、T = abdcd，分數矩陣為表 2，在容忍範圍為 2時，可能會有的排列情形。空
                                                             共 9 頁  第 6 頁 
使用者在得知這些資訊後，該如何判定此兩排列何者為較適切之解答？這是本計畫意欲研究之重
點。 
 
在上述討論中，我們單純將問題點明，並未詳細描述我們如何得到生物序列的各排列與各分數矩陣
的最佳值差分之資訊。藉由前述的差值公式，在 O(nm)的時間內，我們可建構差分晶格(Losing Score 
Lattice)如圖五。 
 
 
圖 五：S = bacddb、T = abdcd，使用上述各 SM為分數矩陣時所得之差分晶格。 
 
在圖五的差分晶格中，每格為一個三維陣列，由上至下分別代表該處走向左方、對角、上方之
分數損失。對照圖二可較詳細了解，圖二中之粗黑線代表最佳回溯方向，換言之、粗黑線之走法其
損失分數均為 0。 
 
利用圖五之差分晶格，我們可建構各方向(左方、對角、上方)之差分向量，利用差分向量之比
較即可得知各排列方式之優勝劣敗。我們提出了幾種的比較步驟來決定排列之好壞，列舉如下： 
 投票機制(Voting Mechanism)：差分向量彼此兩兩相比，勝者多之向量為勝。 
 最少差分(Summing Model)：將差分向量內元素總和相比，較小差分和者為勝。 
 最大最小制(Minimax Decision)：差分向量中最大之元素相比，較小者為勝。 
 權重制(Priority Judgment)：分數矩陣權重較高者優先採用。 
 任意採用(Whatever)：若上述方式均無法比出不同，那採用何者均無差別，故任意採用。 
 
 
                                                             共 9 頁  第 8 頁 
參考文獻： 
 
[1] [Alts86a] Stephen F. Altschul and Bruce W. Erickson, “Locally optimal subalignments using 
nonlinear similarity functions,” Bulletin of Mathematical Biology, Vol. 48, pp. 633–660, 1986. 
[2] [Alts89] S. F. Altschul, “Gap costs for multiple sequence alignment,” Journal of Theoretical Biology, 
Vol. 138, pp. 297–309, 1989. 
[3] [Apos87] A. Apostolico and C. Guerra, “The longest common subsequences problem revisited,” 
Algorithmica, Vol. 18, pp. 1–11, 1987. 
[4] [Berg00] L. Bergroth, H. Hakonen, and T. Raita, “A survey of longest common subsequence 
algorithms,” Proceedings of Seventh International Symposium on String Processing and Information 
Retrieval, SPIRE 2000, pp. 39–48, 2000. 
[5] [Chen03] Y. Y. Chen, C. B. Yang, and K. T. Tseng, “Prediction of protein structures based on curve 
alignment,” Proc. of the 20th Workshop on Combinatorial Mathematics and Computation Theory, 
Chiayi, Taiwan, pp. 33–44, 2003. 
[6] [Dayh78] M. O. Dayhoff., Atlas of Protein Sequence and Structure. National Biomedical Research 
Foundation, Washington, DC, 1978. 
[7] [Dayh79] R. M. Schwartz and M. O. Dayhoff., Matrices for detecting distant relationships. National 
Biomedical Research Foundation, Washington, DC, 1979. 
[8] [Fara95] M. Farach, S. Kannan, and T. Warnow, “A robust model for finding optimal evolutionary 
trees,” Algorithmica, Vol. 13, pp. 155–179, 1995. 
[9] [Fels81] J. Felsenstein, “Evolutionary trees from DNA sequences: a maximum likelihood 
approach,”Journal of Molecular Evolution, Vol. 17, pp. 368–376, 1981. 
[10] [Gasi99] L. Gasieniec, J. Jansson, A. Lingas and A. Ostlin, “On the complexity of constructing 
evolutionary trees,” Journal of Combinatorial Optimization, Vol. 3, pp. 183–197, 1999. 
[11] [Hend82] M. D. Hendy and D. Penny, “Branch and bound algorithms to determine minimal 
evolutionary trees,” Mathematical Biosciences, Vol. 59, pp. 277–290, 1982. 
[12] [Hilb93] M. Hilbert, G. Bohm, and R. Jaenicke, “Structural relationships of homologous proteins as 
a fundamental principle in homology modeling,” Proteins, Vol. 17, No. 2, pp. 138–151, 1993. 
[13] [Hirs75] D. S. Hirschberg, “A linear space algorithm for computing maximal common 
subsequence,” Communications of the ACM, Vol. 18, No. 6, pp. 341–343, 1975. 
[14] [Hirs77] D. S. Hirschberg, "Algorithms for the longest common subsequence problem", Journal of 
ACM, Vol. 24, pp. 664-675, 1977. 
[15] [Huan01] C. M. Huang and C. B. Yang, “Approximation algorithms for constructing evolutionary 
trees,” Proc. of National Computer Symposium, Workshop on Algorithm and Computation Theory, 
pp. A099–A109, 2001. 
[16] [Huan07] K.S. Huang, C.B. Yang, K.T. Tseng, Y.H. Peng, and H.Y. Ann, “Dynamic programming 
algorithms for the mosaic longest common subsequence problem,” Information Processing Letters, 
Vol. 102, pp. 99–103, 2007. 
[17] [Hunt77] J. W. Hunt and T. G. Szymanski, “A fast algorithm for computing longest common 
subsequences,” Communications of the ACM, Vol. 20, No. 5, pp. 350–353, 1977. 
[18] [Lesk86] A. M. Lesk, M. Levitt, and C. Chothia, “Alignment of the amino acid sequences of 
distantly related protei ns using variable gap penalties,” Protein Engineering, Vol. 1, pp. 77–78, 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/01/25
國科會補助計畫
計畫名稱: 使用多重比分方式在生物序列比對上之研究
計畫主持人: 曾國尊
計畫編號: 98-2218-E-242-001- 學門領域: 生物資訊
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
