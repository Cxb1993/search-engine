I中文摘要
本計畫提出一個在複雜環境下，以可
視導向路徑規劃之有效能的蟻行演算法。
路徑規劃問題攸關許許多多技術應用，為
了使物件無碰撞地從起始點移動到目的
地。首先，在進行路徑規劃前，本計畫使
用可視圖做為一個適合離散化的基礎以建
立圖形。實驗結果顯示，本演算法在大部
分情況可取得最佳解。
關鍵字：路徑規劃、可視圖、蟻行演算法
Abstract
This project proposed an effective
algorithms of visibility oriented path planning
in a complex environment, based on an ant
algorithm. Path planning is essential to
numerous technological applications. In order
to let a path has to be planned that guarantees
a collision-free translation from the start to
the goal position. This project uses a visibility
graph for a suitable discretization of the
ground on which one can build a graph. Our
numerical results show that the proposed
algorithm may obtain the optimal solution in
most case.
Keywords: path planning; visibility graph;
ant algorithm.
2[26] 。 2006 年 David Wooden & Magnus
Egerstedt提出在即時環境中低複雜度規劃
之導向可視圖[27]。2004年台大Han-Pang
Huang等提出用於路徑規劃之動態可視圖
[28]。2004年D.Madden等提出在分散交談
應用(DIA)可視路徑尋找之混合策略模型
[29]。
蟻行演算法是近年來出現的一種新型
的模擬進化演算法。它是由意大利學者
M.Dorigo等人首先提出[30]，並在基本的
蟻行演群算法的基礎上提出稱為Ant-Q
System的更一般的蟻行演算法[31-32]，每
次讓訊息量最大的路徑以较大的概率被選
中，以充分利用學習機制,强化最佳訊息的
回饋。為了克服在Ant-Q中可能出現的停滞
現象，T.Stutzle等人提出了MAX-MIN蟻群
系统[33]，允許各個路徑上的訊息量在一
個限定的範圍内變化。L.M.Gambardella等
人提出了一種混合型蟻群算法HAS [34]，
在每次循環中螞蟻建立各自的解後，再以
各自的解為起點用某種局部搜尋算法求局
部最佳解，作為相對螞蟻的解，這樣可以
迅速提高解的質量。H.M.Botee等人對參數
m，α，β，ρ的選擇進行了深入的研
究，用遺傳演算法求得這些参数最佳组合
[35]。W.J.Gutjahr等人提出一種以圖為基礎
建構的蟻群系统架構來解決組合最佳化之
問題，在特定的條件下，每次疊代所得到
的解能以近似於1的概率向最佳解收敛
[36]。Chen曾將蟻行演算法改進，使其能
夠直接求解線性和非線性規劃等連續空間
的最佳化問题[37]。Wu提出了基於蟻行演
算法的分段求解算法[38]，提高了螞蟻搜
尋的速度，為蟻行演算法的平行化奠定了
基礎。由於在蟻行演算法求解的過程中，
選擇策略一般是随機的，收斂速度較慢。
CHUNG等人[39]提出了自適應的蟻行演算
法，採用確定性選擇和隨機選擇相结合的
策略，在搜尋的過程中動態的調整選擇的
機率，實現了選擇機率的自適性，提高了
演算法的速度和性能. David Gorden [40]在
其論文中，將動差因素加入到轉移函數
中，以增進其動態環境之適應性。
四、研究方法
首先將一般圖形採離線方式轉換成可
視圖，參考VISPAK所提供之程式，將複雜
環境中包含不同型態之障礙物的情況，轉
換成可視圖，以做為下一步驟路徑尋找之
依據。因為蟻行演算法非常適合處理最短
路徑特性之問題，所以透過蟻行演算法尋
找最短路徑。在尋找中間過程中，可以將
目標點當成一個基點，做為引導螞蟻行進
之方向和距離。由於可視圖本身已經避開
了障礙物，所以演算法可以更快速求得更
佳解。其流程如圖1所示。
結束
路徑規劃蟻行演算法
建立可視圖
開始
圖 1 路徑規劃演算法
定義 1:可行域 FS 為所有可行節點之集合。
定義2:任意可視點間的距離為兩個可視點之
間的連線長度，亦即
22 )()(),( jijiji yyxxggd 
定義 3:螞蟻 k 在 ig 的視野域記為 )( igBR ，
而k在 it 時刻的視野域中的可行域表
示為 )( ii gWk
將 m 隻螞蟻置於起始位置 )(tPR ，以
goalg 為目標，依最近鄰居選擇策略及啟發
函數，選擇並走到下一可行節點。其步驟
如下：
路徑規劃蟻行演算法
Step0:將 m 隻螞蟻置於出發點 )(tPR ，並記
錄在禁忌表中 tabuk 中
(k=1,2,…,m)。設置循環計數器為
n=0，最大循環次數為 MAX。
Step1: k ,以當前節點 FSg i  為中心，依
4Gems 3.Charles River Media, Hingham,
MA, 2002.
[3] E. by Mark DeLoura. Game
Programming Gems.Charles River
Media, Hingham, MA, 2000.
[4] E. by Mark DeLoura. Game
Programming Gems 2.Charles River
Media, Hingham, MA, 2001.
[5] E. by Steve Rabin. AI Game
Programming Wisdom.Charles River
Media, Hingham, MA, 2002.
[6] J. Canny. The Complexity of Robot
Motion Planning.MIT Press, 1988.
[7] Higgins, D. (2002). Generic A*
Pathfinding. AI Game Programming
Wisdom, pages 114-121. Charles River
Media
[8] Cain, T. (2002). Practical Optimisations
for A* Path Generation. AI Game
Programming Wisdom, Charles River
Media.
[9] Reese, B., Stout, B. (1999). Finding a
Pathfinder. AAAI Spring Symposium on
Artificial Intelligence and Computer
Games, pp. 69-72.
[10] Stentz, A. (1994). Optimal and Efficient
Path Planning for Partially-Known
Environments. Proceedings of the IEEE
International Conference on Robotics
and Automation (ICRA ’94), Vol. 4, pp. 
3310 - 3317.
[11] Kapoor, S. and S. N. Maheshwari,
Efficiently constructing the visibility
graph of asimple polygon with obstacles,
SIAM Journal on Computing, Vol. 30,
No. 3 (2000), 847-871.
[12] Ghosh, S. K. and D. M. Mount, An
output-sensitive algorithm for computing
visibility graphs, SIAM Journal on
Computing, Vol. 20, No. 5 (1991),
888-910.
[13] O’Rourke, J. and I. Streinu, The
vertex-edge visibility graph of a polygon,
SmithTechnical Report 047, (1996).
[14] O’Rourke, J. and I. Streinu, Vertex-edge
pseudo-visibility graphs:characterization
and recognition, in Proceedings of the
13th Annual ACM Symposium on
Computational Geometry, Nice, France,
(1997), 119-128.
[15] El-Gindy, H. and D. Avis, A linear
algorithm for computing the visibility
polygon from a point, Journal of
Algorithms, Vol. 2 (1981), 186-197.
[16] Asano, T., T. Asano, L. Guibas, J.
Hershberger, H. Imai, Visibility of
disjoint polygons, Algorithmica, 1 (1986),
49-63.
[17] Vegter, G., The visibility diagram: a data
structure for visibility problems and
motion planning, in Proceedings of the
2nd Scandinavian Workshop on
Algorithm Theory, Bergen,
Springer-Verlag Lecture Notes in
Computer Science, vol. 447, (1990),
97-110.
[18] Hefferman, P. J. and J. S. B. Mitchell, An
optimal algorithm for computing
visibility in the plane, in Proceedings of
the 2nd Workshop WADS’91, Otawa, 
437-448.
[19] Pocchiola, M. and G. Vegter, The
visibility complex, in Proceedings of the
9th Annual ACM Symposium on
Computational Geometry, San Diego,
CA (1993), 328-337.
[20] Pocchiola, M. and G. Vegter, Computing
the visibility graph via
pseudotriangulations, in Proceedings of
the 11th Annual ACM Symposium on
Computation Geometry, Vancouver, B.C.,
(1995), 248-257.
[21] Riviere, S., Topologically sweeping the
visibility complex of polygonal scenes, in
