simulations. Errors resulting from a lack of spatial resolution are particularly deleterious. On the other hand, over-resolving
is computationally expensive. Therefore, how to efﬁciently/effectively solve the governing partial differential equations
(PDEs), representing the mathematical model of the physical problem concerned, becomes a subject of active research in
the numerical analysis [1,2].
In general, there are two approaches to obtain accurate solution of PDEs. One such approach is to employ high-order
numerical methods [3–5]. The high-order methods can achieve a given accuracy of the solutions with much coarser mesh
than the low-order schemes. Thus, despite the larger bandwidth of the stiffness matrix, the high-order methods often prove
to be more computationally efﬁcient than low-order schemes. However, high-order methods can yield accurate results only
for length scales that are larger than a few mesh cells. For problems with locally high gradient, they may not be able to accu-
rately capture the local ﬁne-scale behavior of the physical phenomenon. Therefore, the higher order methods are usually
preferred for problems with smooth solutions. In addition, for many types of practical problems, there exists a limit beyond
which it is quite difﬁcult to improve the accuracy of the solutions by using higher order methods. Thus, an extremely attrac-
tive alternative is to resort to the second approach, that is, implementation of added mesh reﬁnement in order to improve
the solution through resolution of computational grids. Notably, the mesh reﬁnement is desirable to improve spatial reso-
lution both in uniform and non-uniform grids. In the uniform mesh reﬁnement, the resulting grid evolution equation is gen-
erally less non-linear, which becomes very efﬁcient in conjunction with the successive-over-relaxation (SOR). However, the
uniform mesh reﬁnement may not be perfect for applications in which the solution may need different resolutions at differ-
ent regions. For the well-understood physical problems, a non-uniform mesh can therefore be designed to reﬂect the nec-
essary resolution requirement. For example, for the boundary value problems, a ﬁne resolution is typically required for
regions near the boundaries. However, for the evolving interfacial ﬂows or ﬂow ﬁelds with complicated structures, the local
reﬁnement techniques are more preferred in order to locally increase mesh densities at the regions of interest, and thereby
saving the computer resources. Nowadays, in general, the local mesh reﬁnement plays an indispensable role in the efﬁcient
solution of both industrial and scientiﬁc problems. Over the past decades, intensive efforts have been made for the develop-
ment of local reﬁnement procedures [6–15]. Consequently, a large number of adaptive algorithms have been proposed,
which allow use of multi-resolution approximation in the simulation and represent recent advances in the area. The strat-
egies of adaptive mesh reﬁnement are further classiﬁed into structured and unstructured approaches.
Notably, a representative structured grid approach is the adaptive Cartesian mesh reﬁnement of Berger and Oliger [6].
Their formulation is established on regular Cartesian meshes and arranged hierarchically with different resolutions. In regard
to the unstructured approach, Zhu and Zienkiewicz [8] reviewed state-of-the-art automatic mesh reﬁnement strategies, and
discuss its important role in the error estimation and automatic adaptation in ﬁnite-element analysis. Again, in the context of
block-structured local reﬁnement, important it may be to mention here the work of Minion [16] in which a second-order
accurate cell-centered Godunov type projection method is used to solve incompressible Euler equations. On the other hand,
Martin and Colella [17] present a solution algorithm for Euler equations that uses block-structured local reﬁnements both in
space and time. The method has subsequently been extended by Martin et al. [18] to compute three-dimensional incom-
pressible viscous ﬂows, in which a second-order semi-implicit Runge–Kutta scheme is used to compute the viscous terms.
Notably, while solving ﬂow interaction with visco-elastic structures, Grifﬁth et al. [19] efﬁciently combined the Godunov
type projection method (to compute the non-linear advection terms) of Minion [16] together with the semi-implicit sec-
ond-order Runge–Kutta scheme (to calculate diffusion) as introduced in McCorquodale et al. [20]. Worth mentioning it
may be here that, the projection methods are a class of fractional-step algorithm that ﬁrst compute the velocity ﬁeld (which
is generally not divergence free) from the momentum equations without imposing the incompressibility constraint. The up-
dated velocity is subsequently obtained by solving the pressure Poisson equation.
In this work, we focus on developing a structured multi-block Cartesian grid method for effectively simulating unsteady
viscous incompressible ﬂows with complex immersed boundaries. The strongest point for the proposed structured nested
grid reﬁnement approach is that the solution process of the resulting ‘uniform’ grid evolution equation is very efﬁcient in
conjunction with the line-SOR. Notably, the presently implemented alternating direction line-SOR method is one of the most
widely used iterative methods for solving equations resulting from discretization on structured grids. The advantage of using
the line-SOR, as a pre-conditioner, is that convergence rate becomes signiﬁcantly faster than what is obtained with a simple
point Jacobi method [21]. A further advantage here (of using line SOR) is that the procedure only requires the solution of tri-
diagonal systems, and this can be accomplished with ease using the Thomas algorithm.
The idea of immersed boundary (IB) methodwas ﬁrst introduced by Peskin [22], in which the solid object is represented by
a distributed body force in theNavier–Stokes equations. Since Peskin [22] introduced themethod, the numerousmodiﬁcations
and reﬁnements have been proposed and a number of variants of this approach now exist [23,24]. In addition, there appear
another class of method, usually referred to as ‘‘Cartesian gridmethod,” which were originally developed for simulating invis-
cid ﬂows with complex embedded solid boundaries on Cartesian grids [25]. Thesemethods have subsequently been extended
to simulate the unsteady viscous ﬂows [26,21] and have capabilities similar to those of IB methods. Notably, the original IB
method by Peskin [22] was developed for the coupled simulation of blood ﬂow and the muscle contraction in a beating heart
and is generally suitable for ﬂowswith immersed elastic boundaries. But its application to ﬂowswith rigid bodies poses prob-
lems, because the constitutive laws used for elastic boundaries are not generally well posed in the rigid limit. Subsequently,
anothermethod for the rigid body class is developed by Angot et al. [27] and Khadra et al. [28]. In thismethod, the entire ﬂow is
assumed to occur in a porous medium and is governed by the Navier–Stokes/Brinkman equations. These equations contain an
extra force term (with respect to the classical Navier–Stokes equations) in the form~f ¼ ðl=KÞ~u, where K is the permeability of
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7073
Z
CV
u
*nþ1  u*
Dt
dV ¼ 
Z
CV
rpnþ1dV ; ð4Þ
where we require that the ﬁnal velocity ﬁeld satisfy the integral mass conservation equation,Z
CS
U
*
nþ1  n*dS ¼ 0: ð5Þ
This results to the following pressure equationZ
CS
ðrpnþ1Þ  n*dS ¼ 1
Dt
Z
CS
U
*  n*
 
dS ð6Þ
which is the integral form of the Poisson equation. Note that, the pressure correction step is represented by the inviscid Eq.
(4) and is well posed only if the velocity component normal to the boundary is speciﬁed. The velocity boundary condition
consistent with Eq. (4) is u
*nþ1  N
*
¼ v*nþ1  N
*
, where v
*
is the prescribed boundary velocity, and N
!
is the unit normal to the
boundary of the ﬂow domain. It can easily be shown that ðrpnþ1Þ  N! ¼ 0, which we use as the boundary condition for Eq.
(6). Once the pressure is obtained by solving this equation, both the cell-center (cc) and face-center (fc) velocities are up-
dated separately as,
u
*nþ1 ¼ u*  Dt rpnþ1 	cc; U*nþ1 ¼ U*  Dt rpnþ1 	fc: ð7Þ
For instance, with reference to Fig. 1, the x-direction pressure gradient at the cell center ‘c’ is computed as
ð@p=@xÞC ¼ ðpE  pWÞ=2Dx; ð8Þ
whereas the same gradient on the east face is given by
ð@p=@xÞe ¼ ðpE  pCÞ=Dx: ð9Þ
It follows however that U
*
nþ1 is not simply an interpolated form of the face-center velocities u
*nþ1 [16]. In fact, the pressure
equation Eq. (6) is discretized in terms of the pressure gradients on the cell faces and with the separate update of the face-
center velocity, as shown in Eq. (7), ensuring exact satisfaction of Eq. (5).
2.2. The nested grid methodology
In this work, a local grid reﬁnement technique is adopted by introducing multiple nested blocks. A detailed sketch of the
ﬂow domain, together with the inside coarse/ﬁne grid area, is presented in Fig. 2(a) and (b). For simplicity, we describe our
nested-block technique for two-dimensional (2D) ﬂows with a two-block domain. However, the present nested-block
technique can be extended for 3D ﬂows and with higher multi-block domains without much hindrance. The coarse and ﬁne
grid domains in Fig. 2(a) and (b) are denoted by D1 and D2, respectively. Again, for simplicity, the ﬁne grid length is deﬁned
W E
S
N
C
v
u U
V
e
n
s
w
NENW
SW SE
5-point stencil for regular cell
p
Fig. 1. Schematic of regular Cartesian cells, and the arrangement of cell-center and face-center velocities.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7075
v  vn
Dt
DxDy ¼ 1
2
3 vneU
n
e  vnwUnw
 	
Dyþ vnnVnn  vns Vns
 	
Dx

 
 vn1e Un1e  vn1w Un1w
 
Dyþ vn1n Vn1n  vn1s Vn1s
 
Dx
h io
þ 1
2Re
@v
@x
 
e
 @v

@x
 
w
 
Dyþ @v

@y
 
n
 @v

@y
 
s
 
Dx

þ @v
n
@x
 
e
 @v
n
@x
 
w
 
Dyþ @v
n
@y
 
n
 @v
n
@y
 
s
 
Dx

; ð10Þ
where u and v represent the x- and y-direction velocities, respectively, at the cell-center. Ue, Uw, Vn, and Vs are the introduced
face-center velocities.
Notably, Eq. (10) is the discretized form of advection–diffusion equation for a general cell. We now describe how these
equations are implemented for cells without domain interface, cells (D1) with domain interface, and cells (D2) with domain
interfaces in sequence.
(i) Cells without domain interface
For the control volumes without domain interface, Eq. (10) is exactly the same as Eq. (3) of a single block domain,
which has been outlined in the previous section. In such a situation, by using the second-order accurate central-dif-
ference method for spatial terms, the cell-center velocities and their gradients at the cell faces are computed from the
adjacent velocities, i.e.,
ue ¼ ðuE þ uCÞ=2; uw ¼ ðuW þ uCÞ=2; un ¼ ðuN þ uCÞ=2; us ¼ ðuS þ uCÞ=2; ð11Þ
ve ¼ ðvE þ vCÞ=2; vw ¼ ðvW þ vCÞ=2; vn ¼ ðvN þ vCÞ=2; v s ¼ ðvS þ vCÞ=2; ð12Þ
and
@u
@x
 
e
 @u
@x
 
w
¼ ðuE  2uC þ uWÞ
Dx
;
@v
@x
 
e
 @v
@x
 
w
¼ ðvE  2vC þ vWÞ
Dx
;
@u
@y
 
n
 @u
@y
 
s
¼ ðuN  2uC þ uSÞ
Dy
;
@v
@y
 
n
 @v
@y
 
s
¼ ðvN  2vC þ vSÞ
Dy
; ð13Þ
(ii) D1 cells with domain interface
For those D1 cells with domain interface, as shown in Fig. 2(a), since uE and vE are not deﬁned in the computational
domain, the cell-center velocities at the east surface can not be computed by using Eqs. (11) and (12) directly. Here we
need to compute the velocities at the ghost cell by introducing appropriate interpolations. In our study, a simple way
devoted to calculate these interfacial ghost velocities is obtained by using average velocity of the occupied D2 cells
instead, i.e.,
uE ¼ ðu1 þ u2 þ u3 þ u4Þ=4; and vE ¼ ðv1 þ v2 þ v3 þ v4Þ=4 ð14Þ
where subscript E denotes the ghost cell with respect to D1 (E being the eastern cell), as shown in Fig. 2(a), in which
control volume E is occupied by four (1, 2, 3, and 4) D2 cells. Notably, in view of Eq. (14), the general form of the cell-
surface velocities [Eqs. (11) and (12)] and their second-order accuracy could be preserved.
Note that, it is the block-interface processing which plays the essential part of the present nested-block formulation.
In the general advection–diffusion equation (Eq. (10)), except ue and ve, which have been described in the previous
paragraph, there are some other terms such as Ue, (@u/@x)e, and (@ v/@x)e located at the block-interface. Here Ue,
(@u/@x)e, and (@v/@x)e are used for computing the volume ﬂux and the momentum ﬂux, respectively, from D1 to D2
cells. Although there are varied interpolations available, we calculate the volume and momentum ﬂuxes from D1 to
D2 cells as follows:
Ue  Dy1 ¼ U1w  Dy2 þ U2w  Dy2 ð15Þ
@u
@x
 
e
 Dy1 ¼
@u
@x
 
1w
 Dy2 þ
@u
@x
 
2w
 Dy2 ¼
u1  u1W
Dx2
 Dy2 þ
u2  u2W
Dx2
 Dy2;
@v
@x
 
e
 Dy1 ¼
@v
@x
 
1w
 Dy2 þ
@v
@x
 
2w
 Dy2 ¼
v1  v1W
Dx2
 Dy2 þ
v2  v2W
Dx2
 Dy2; ð16Þ
where Dy1 and Dy2 denote the vertical lengths of D1 and D2 cells, respectively. It may be carefully noted that the use
of Eqs. (15) and (16) ensures mass and the momentum diffusion ﬂuxes through the D1 and D2 domain-interface and
vice versa is consistent.
(iii) D2 cells with domain interface
For the D2 cells with domain interface, as shown in Fig. 2(b), since uW, and vW are not deﬁned in the computational
domain, the general form of the cell-face velocities [Eq. (12)] cannot be applied directly, and we need to compute these
terms by introducing second-order accurate interpolations. Similar to the ghost D1 cells, these ghost velocities are
obtained by using average value of adjacent velocities, i.e.,
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7077
(i) Cell-center velocity correction for cells without domain interface
For instance, with reference to Fig. 1, the velocity correction at the cell center is now conducted as
unþ1 ¼ u  Dt  ð@p=@xÞC ¼ u  Dt  ðpE  pWÞ=ð2DxÞ;
vnþ1 ¼ v  Dt  ð@p=@yÞC ¼ v  Dt  ðpN  pSÞ=ð2DyÞ: ð25Þ
(ii) Cell-center velocity correction in D1 cells with domain interface
Notably, for those D1 cells with domain interface, as shown in Fig. 2 (a), since pE is not deﬁned in the computational
domain, the cell-center velocity cannot be corrected by using Eq. (25) directly. In such a situation we ﬁrst need to com-
pute pE by introducing an appropriate interpolation. Here the ghost pressure used is the averaged occupied D2 pres-
sures [Eq. (24)], i.e.,
pE ¼ ðp1 þ p2 þ p3 þ p4Þ=4:
(iii) Cell-center velocity correction in D2 cells with domain interface
For D2 cells with domain interface, as shown in Fig. 2(b), since pW is not deﬁned in the computational domain, the
pressure gradient at the east surface can not be computed by using Eq. (25), and we therefore need to compute pW
ﬁrst. Similar to those described in the previous paragraph, the ghost pressure, as obtained from Eq. (23), now becomes,
pW ¼ ðp1 þ p2 þ p3 þ p4Þ=4:
(iv) Velocity correction at non-inter-domain face-center
For the ﬁne-ﬁne or the coarse–coarse non-inter-domain face-center we implement the general form of velocity cor-
rection at the face-center as:
Unþ1 ¼ U  Dt  ð@pnþ1=@xÞe ¼ U  Dt  ðpE  pCÞ=Dx;
Vnþ1 ¼ V  Dt  ð@pnþ1=@yÞn ¼ V  Dt  ðpN  pCÞ=Dy: ð26Þ
(v) Velocity correction at domain interface
At the ﬁne-coarse cell interface, as shown in Fig. 2(a), the coarse cell face-center velocity, Unþ1e , is obtained from the
consistency equation [Eq. (15)], i.e.,
Unþ1e  Dy1 ¼ Unþ11w  Dy2 þ Unþ12w  Dy2
where Unþ11;w and U
nþ1
2;w are corrected by Eq. (25) using the ﬁne mesh domain ghost velocity formulation Eq. (17).
2.3. Immersed boundary method
In this study, a simple concept of immersed boundary (IB) method is adopted for the numerical simulation of bluff body
wake ﬂows by introducing a distributed body force in the Navier–Stokes equations. The governing equations for the ﬂow are
solved everywhere in the computational domain including cells which are occupied by the solid body. The distributed body
force is then determined at every time step of the iteration by adjusting the value of velocity in those solid cells to match the
prescribed velocity of the solid body (whenever relevant). Notably, a similar process has been adopted in Ravoux et al. [29],
and the authors referred it as the ‘embedding method’. The underlying logic of the present IB method, as described below, is
however slightly different from that of Ravoux et al. [29].
In this work, the presence of a solid object within the ﬂow domain is represented by a locally active distributed body force
in the Navier–Stokes equations, i.e.,
@~u
@t
¼ ð~u  rÞ~urpþ 1
Re
D~uþ~f :
Here, the distributed force is deﬁned as~f  ð~u  rÞ~uþrp 1ReD~u
 	 /, in which / represents the volume-fraction of the
solid body [30] within a cell. Note that, / = 1 for a structure cell (cell occupied entirely by the solid body), / = 0 for a ﬂuid cell
(cell occupied entirely by ﬂuid), and 0 < / < 1 for an interface cell (cell partially occupied by solid body and partially by ﬂuid),
respectively. As a consequence, the body force which acts on the ﬂuid satisfy the condition that the velocity in cells occupied
by the solid body should match the prescribed velocity of the solid body.
This IB method is subsequently implemented to the solver together with the fractional-step procedure. Although there
are other IB methods available, such as those of Lai and Peskin [24] and Ye et al. [21], the present method is not only easy
to use, but also found to be quite suitable for our nested grid formulation.
3. Numerical experiments
In order to demonstrate the performance of the proposed nested-block formulation, herewith we extensively examine
several of our computed complex ﬂow phenomena of recent interest, and validate them with the well established results
available in the literature.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7079
improvement of resolution has been achieved. Such results clearly show that the present nested-block method works very
effectively for the investigated ﬂow.
-0.5 0.0 0.5 1.0
u
cen
0.0
0.2
0.4
0.6
0.8
1.0
y
: B1G1
: B1G2
: B1G3
: B2G3
: Ghia (1982)square symbols
circular symbols: Chiu et al. (2008)
-0.35 -0.30 -0.25
u
cen
0.05
0.10
0.15
0.20
0.25
0.30
0.35
y
: B1G1
: B1G2
: B1G3
: B2G3
square symbols: Ghia (1982)
circular symbols: Chiu et al. (2008)
0.15.00.0
x
-0.4
-0.2
0.0
0.2
0.4
0.6
v c
en
: B1G1
: B1G2
: B1G3
: B2G3
: Ghia (1982)square symbols
circular symbols: Chiu et al. (2008)
0.84 0.86 0.88 0.90 0.92 0.94 0.96
x
-0.54
-0.52
-0.50
-0.48
-0.46
-0.44
-0.42
-0.40
-0.38
-0.36
v c
en
: B1G1
: B1G2
: B1G3
: B2G3
: Ghia (1982)square symbols
circular symbols: Chiu et al. (2008)
(a) (b)
(c) (d)
10 0 10 1 10 2 10 3
Gs1/2
10 -4
10 -3
10 -2
10 -1
er
r 1
square symbols: err1u (uniform grid)
circular symbols: err1v (uniform grid)
delta symbols: err1u (nested grid)
gradient symbols: err1v (nested grid)
10 0 10 1 10 2 10 3
Gs1/2
10 -4
10 -3
10 -2
10 -1
er
r 2
square symbols: err2u (uniform grid)
circular symbols: err2v (uniform grid)
delta symbols: err2u (nested grid)
gradient symbols: err2v (nested grid)
(e) (f)
Fig. 4. Simulated velocity proﬁles and error norms for the square lid-driven cavity ﬂow at Re = 1000. (a) Velocity component u on the vertical centerline. (b)
Enlarged view around largest reversed u. (c) Velocity component v on the horizontal centerline. (d) Enlarged view around largest negative v. (e) Depicted
err1 norm shows the second-order global convergence of u and v velocities. (f) Depicted second-order global convergence of velocity err2 norm. (g) Depicted
pressure convergences for uniform and nested grids. (h) Convergence tolerance history for various uniform and nested grids.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7081
-0.5 -0.4 -0.3 -0.2 -0.1 0.0 0.1 0.2 0.3 0.4 0.5-0.5
-0.4
-0.3
-0.2
-0.1
0.0
0.1
0.2
0.3
0.4
0.5
y
-0
.8
-
0.
7
-
0.6
-0.5
-
0.
4
-
0.3
-
0.2
-0
.2
-
0.
1
-0.1
0
0
.1
0
.2
0.
3
0.4 0.5
0.6
-0.50 -0.25 0.00 0.25 0.50
x
y
-0
.8
-
0.
6
-0.4
-
0.2
0
0
.2
0
.4
0.
6
0.8
-0
.4
-0
.2
-
0.
2
0
0.2
0.4
0
.6
0.8
-0.5 -0.4 -0.3 -0.2 -0.1 0.0 0.1 0.2 0.3 0.4 0.5-0.5
-0.4
-0.3
-0.2
-0.1
0.0
0.1
0.2
0.3
0.4
0.5
y
-0.9
-
0.
8
-0.6
-
0.5
-0.4
-0.4
-0
.3
-
0.
2
-
0.
1
0
0
.1
0.1
0.2
0.2
0
.3
0.3
0.4
0.4
0.
5
0.6
0
.7
0.
9
-0.50 -0.25 0.00 0.25 0.50
x
y
0.8
-
0.
4
-0
.2
0.2
0.
2
0.4
0.4
0.
6
0
.8
-0
.6
0.4
-0
.4
-0
.2
0
0
.2
0.4
0.6
-0.5 -0.4 -0.3 -0.2 -0.1 0.0 0.1 0.2 0.3 0.4 0.5
x
-0.5
-0.4
-0.3
-0.2
-0.1
0.0
0.1
0.2
0.3
0.4
0.5
y
0.3
0.2
0.1
0.
1
0
0
-0
.1
-
0.
1
-0.2
-
0.3 -0.4
-
0.4
-0.3
-
0.2
-0.1
0
0
0.
1
0.2
0
.2
-0.5 -0.4 -0.3 -0.2 -0.1 0.0
p
-0.5
-0.4
-0.3
-0.2
-0.1
0.0
0.1
0.2
0.3
0.4
0.5
y
square symbols: present, 10 10
circular symbols: present, 20 20
delta symbols: present, 40 40
solid line: exact solution
×
×
×
(a) (b)
(c) (d)
Fig. 5. Code validation for the Pearson vortex problem. (a) u(x,y); (b) v(x,y); (c) p(x,y). The solid lines in (a–c) are exact solutions, and dotted lines denote the
corresponding solutions obtained with 40  40 grids. (d) grid convergence test on p(x = 0,y).
Table 1a
Various one-block and two-block grid systems and corresponding error norms for square lid-driven cavity ﬂow at Re = 1000.
Case No. Grid Grid size (Gs) err1u err1v err2u err2v err1p err2p
Magnitude Number
B1G5 Dh = 1/640 409,600 409,600 0 0 0 0 0 0
B1G4 Dh = 1/320 102,400 102,400 2.65  104 2.63  104 7.83  104 6.30  104 1.35  104 9.54  104
B1G3 Dh = 1/160 25,600 25,600 1.30  103 1.29  103 2.38  103 2.30  103 5.87  104 1.57  103
B1G2 Dh = 1/80 6400 6400 5.13  103 5.14  103 7.52  103 7.79  103 2.20  103 3.28  103
B1G1 Dh = 1/40 1600 1600 1.70  102 1.79  102 2.29  102 2.46  102 6.91  103 8.61  103
B2G4 Dh = 1/320 24,000 43,600 4.39  104 6.97  104 1.12  103 1.42  103 1.93  102 3.99  102
Dh = 1/160 19,600
B2G3 Dh = 1/160 6000 10,900 1.67  103 2.26  103 2.99  103 3.55  103 2.82  102 5.57  102
Dh = 1/80 4,900
B2G2 Dh = 1/80 1776 2932 6.73  103 7.61  103 9.76  103 1.08  102 3.84  102 7.12  102
Dh = 1/40 1156
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7083
3.2. Flow past a circular cylinder
While the benchmark solutions of lid-driven cavity ﬂow and Pearson vortex problem allow us to conﬁrm the global accu-
racy of the present nested-block method, here we validate it further by simulating different unsteady viscous ﬂows past a
circular cylinder (of diameter d) placed symmetrically in a planar channel of height h. Fig. 7(a) shows a schematic of the ﬂow
conﬁguration that has been used for simulations with implemented parabolic inlet proﬁle and the immersed boundary
method. Notably, the two main parameters in this ﬂow are the blockage ratio b = d/h, and the Reynolds number Re = Q/m,
where Q is the inlet volume ﬂux. A systematic numerical investigation of the ﬂow over a parameter range has been presented
by Chen et al. [35], and their results (and the deﬁnition of Re) have been used to further validate our simulations. Impor-
tantly, the presently investigated ﬂow shares some common feature with the case of a cylinder immersed in a free stream;
in particular, the vortex shedding behavior observed beyond a critical Reynolds number. The value of the critical Reynolds
number, however, remains strongly dependent on the blockage ratio. Furthermore, the development of vortices is also sig-
niﬁcantly affected by the boundary layers that form on the channel walls. Thus, overall, this is a more complicated ﬂow and a
good test case for our nested grid simulation methodology.
We now ﬁrst conduct a resolution study by solving the vortex shedding ﬂow at Re = 500 with blockage ratio 0.2. A series
of grid systems including one-block, two-block, and three-block grids are used for simulation of this ﬂow. The resolution
study included two parts, namely, the locally-reﬁned-domain inference study and the grid independence study, which are
separately conducted and results are collected/listed systematically in Tables 2 and 3. Computed results concerning the
dimensionless dynamic forces acting on the cylinder (e.g., the mean drag force coefﬁcient Cd, the lift force amplitude Cl,
and the vortex shedding frequency, i.e., Strouhal number St) for different uniform/non-uniform (single/nested) grid systems
are listed in Table 2; where B1G1 denotes a one-block coarse uniform grid system with Dx = Dy = 0.02h, and B1G2 denotes a
one block ﬁner uniform grid system with Dx = Dy = 0.01h. Notably, the simulated data (Table 2) clearly suggest that, in the
case of single block uniform grids the use of higher grid resolution is very much essential for an effective simulation of this
class of ﬂows, as solutions appear to depend strongly on the grid size (e.g., the difference of Cl, as obtained with the coarse
B1G1 grid and the ﬁne B1G2 grid (Table 2) is about 34.4%). However, in order to make sure that the presented results remain
quite close to the grid independent solution, another single block simulation with 151,200 uniform grids (B1G20) was sub-
sequently conducted, and notably, now the difference of Cl with respect to B1G2 grid became 3.2%. On the other hand, dif-
ferences of Cd between the coarse (B1G1) and the ﬁner (B1G2) grids, and between B1G2 and B1G2’ became about 6.8% and
0.3%, respectively. This clearly shows the G2 grids are ﬁne enough to produce signiﬁcantly accurate results. On the other
hand, note carefully that, although the improvement of numerical results from B1G1 to B1G2 is signiﬁcant, the B1G2 grid
numbers are four times that of B1G1, and the required CPU time for B1G2 is more than six times that of B1G1; which unde-
niably suggests there is a need for local grid reﬁnement. Now, in order to investigate the effect of local reﬁnement domain
inference on the simulated results, we conducted a series of computations using the nested two-block method by suitably
placing the reﬁnement area around the cylinder. For this, simulations in eight two-block grid systems, as denoted by B2D1 to
B2D8 (see Table 2 for detail), are performed. The corresponding reﬁned area for each grid system is shown in Fig. 7(b), and
the grid numbers, including coarse (G1) and ﬁner (G2) grids, are listed in Table 2. From the tabulated data (Table 2) it may be
carefully noted that the employed grid reﬁnement around the cylinder improves the numerical results signiﬁcantly. For in-
stance just with extra 6000 reﬁned (G2) grids (e.g., B2D5 with 29,250 grids, Table 2), which is about 23% of the G1 grid num-
ber, the present nested two-block method can predict very closely resembled results to that of B1G2 (a single block grid with
105,000 nodes!). Notably, the differences of each of the computed Cd and Cl values, as obtained with B1G2 and B2D5 grids,
now appear within 1.0%. This locally-reﬁned-domain inference study, therefore, not only clearly demonstrates efﬁciency of
the present nested-block method, but also strongly suggests that the local-reﬁnement around the cylinder plays a very
important role in an effective simulation.
Table 1d
Various one-block and two-block grid systems and the corresponding error norms for Pearson vortex ﬂow at Re = 1000.
Case No. Grid Grid size (Gs) err1u err1v err2u err2v err1p err2p
Magnitude Number
B1G5 Dh = 1/160 25,600 25,600 5.20  105 4.92 105 9.87  105 9.24  105 1.22  103 1.74  103
B1G4 Dh = 1/80 6400 6400 1.08  104 1.06  104 1.71  104 1.70  104 1.38  103 2.28  103
B1G3 Dh = 1/40 1600 1600 3.32  104 3.36  104 4.80  104 4.84  104 3.57  103 4.42  103
B1G2 Dh = 1/20 400 400 1.38  103 1.36  103 1.80  103 1.80  103 4.46  103 5.66  103
B1G1 Dh = 1/10 100 100 5.44  103 5.38  103 6.85  103 6.88  103 1.09  102 1.42  102
B2G5 Dh = 1/160 6000 10,900 2.04  104 1.98  104 2.76  104 2.72  104 2.29  103 3.02  103
Dh = 1/80 4900
B2G4 Dh = 1/80 2800 3700 8.54  104 8.66  104 7.68  104 7.93  104 3.72  103 3.97  103
Dh = 1/40 900
B2G3 Dh = 1/40 816 1012 3.11  103 3.20  103 2.54  103 2.64  103 5.10  103 4.91  103
Dh = 1/20 196
B2G2 Dh = 1/20 256 292 1.24  102 1.28  102 8.94  103 9.18  103 1.22  102 1.04  102
Dh = 1/10 36
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7085
Based on experience gained from the local-reﬁned-domain inference study, we now construct a three-block nested grid
system, B3G3, for simulating this vortex shedding ﬂow with high resolution. In B3G3 grid system the computational domain
is divided into three blocks, with suitably arranged uniform distribution of coarse (G1), ﬁner (G2), and ﬁnest (G3) Cartesian
grids, respectively; where G1 denotes a uniform grid withDx =Dy = 0.02h, G2 denotes a uniform grid with Dx = Dy = 0.01h,
and G3 denotes a uniform grid with Dx =Dy = 0.005h. Notably, the computed vorticity contours with this three-block grid
system B3G3, together with the marked three blocks, are presented in Fig. 8. First, it is clearly seen from Fig. 8 that the vor-
ticity contours remain smoothly distributed across those block-interfaces, which seem to ensure that the present nested-
block method works perfectly well even for complex (highly reversed) ﬂow situations. Second, from the extracted corre-
sponding u and v velocity contours, and the pressure contours for this vortex shedding ﬂow, as extensively depicted in
Fig. 9(a)–(c), respectively, it becomes quite evident that such ﬂow characteristics in the high resolution region can be pre-
dicted more smoothly than that in the low resolution region. For further improved clarity, the computed values of Cd, Cl, St,
together with (G1, G2, G3) grid numbers and CPU time for B3G3 are collected/listed in Table 3, and the corresponding values
are compared to those obtained from B1G1, B1G2, and B2D5. All the above mentioned computations are carried out on a
Table 2
Computed results of mean drag coefﬁcient Cd , and the lift force amplitude Cl for a circular cylinder at Re = 500. Details of various one-block
and two-block grid systems are also listed.
Grid system Cd Difference to B1G2 Cl Difference to B1G2 Gl (Dh = 0.02h), G2(Dh = 0.01h) Grids G1 + G2
B1G1 2.608 6.8% 0.510 34.4% 26,250 26,250
0
B1G2 2.797 0.0% 0.777 0.0% 0 105,000
105,000
B1G20 2.806 0.3% 0.802 3.2% 0 151,200
151,200
B2D1 2.759 1.4% 0.687 11.6% 25,450 27,050
1600
B2D2 2.785 0.4% 0.760 2.2% 24,450 28,050
3600
B2D3 2.796 0.0% 0.779 0.3% 23,050 29,450
6400
B2D4 2.791 0.2% 0.768 1.2% 23,850 28,650
4800
B2D5 2.791 0.2% 0.771 0.8% 6000 29,250
6000
B2D6 2.791 0.2% 0.770 0.9% 22,650 29,850
7200
B2D7 2.791 0.2% 0.770 0.9% 21,450 31,050
9600
B2D8 2.792 0.2% 0.772 0.6% 19,850 32,650
12,800
Table 3
Computed results of mean drag coefﬁcient Cd , lift force amplitude Cl, and Strouhal number (St) for a circular cylinder at Re = 500. Details of
various one-block, two-block, and three-block grid systems and the corresponding CPU times are also listed.
Grid
system
Cd Difference to
B3G3
Cl Difference to
B3G3
St Difference to
B3G3
G1:Dh = 0.02h, G2:Dh = 0.01h, G3:
Dh = 0.005h
Grids
G1 + G2 + G3
CPU
(min)
B1G1 2.608 0.510 0.277 26,250 26,250 174
5.2% 39.1% 0.0% 0
0
B1G2 2.797 0.777 0.276 0 105,000 800
1.1% 7.2% 0.3% 105,000
0
B2D5 2.791 0.771 0.277 23,250 29,250 227
(B2G2) 1.3% 7.9% 0.0% 6000
0
B3G3 2.828 0.837 0.277 22,650 33,050 300
0.0% 0.0% 0.0% 4000
6400
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7087
investigate the performance of the present nested grid method in a situation when more than two ﬁne grid domains are
present and they overlap. Uniform ﬂows past an elliptic cylinder with the angle of attack 45 and Reynolds numbers (Re*)
163 and 525 are considered here. Based on the projected width, L*, of the ellipse, the Strouhal number (St*) and the Reynolds
number (Re*) of the ﬂow are deﬁned as St* = fL*/U1 and Re* = L*U1 /t, respectively, where f is the oscillation frequency. Nota-
bly, the calculation of St* is useful here in the sense that, it can be used for comparison between ﬂows over elliptic cylinders
of various thickness ratios and angles of attack. In particular, the simulated St* can be compared with the corresponding
Strouhal number for circular cylinders, in order to validate our results.
The computational domain for the ﬂow is taken to be rectangular of size 25Lx  10Lx, where Lx is the length of the semi-
major axis of the ellipse. Four different grids, as used to compute the ﬂows are listed in Table 4. Note that, B1G1 and B1G2
420
x
-1
0
1
y
G1G2G3
420
x
-1
0
1
y
G1G2G3
420
x
-1
0
1
y
G1G2G3
(a)
(b)
(c)
Fig. 9. Simulated near-wake velocity and pressure contours for the ﬂow past a circular cylinder at Re = 500 obtained with the grid system B3G3. (a)
Computed u velocity contours. (b) Computed v velocity contour plots. (c) Computed pressure (p) contour plots.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7089
by using the same grid distribution as in Fig. 13. Interestingly, the vortex shedding pattern at Re* = 525, as presented in
Fig. 15, clearly reveals encouragingly smooth variations of local ﬂows across different block interfaces.
3.4. Flow past two circular cylinders with different diameters
Flow past two cylinders in tandem or in side-by-side arrangement exhibits an interesting but remarkably complex class
of wake structure. Depending on the relative arrangement of the two cylinders, formations of a variety of interesting unsta-
ble/stable bifurcation patterns/modes in the near-wake have been widely documented in the literature. However, most of
the reported studies concerning the ﬂow past two cylinders of different diameters appear to be primarily devoted to the ﬂow
control. It is well known that the vortex shedding can cause structural damage through the oscillations of the ﬂow, and in-
420
x
-1
0
1
y
G1G2G3
420
x
-1
0
1
y
G1G2G3
420
x
-1
0
1
y
G1G2G3
(a)
(b)
(c)
Fig. 11. Simulated near-wake velocity and pressure contours for the ﬂow past a circular cylinder obtained with the grid system B3G3. (a) Computed u
velocity contours at Re = 750. (b) Computed v velocity contour plots at Re = 750. (c) Computed pressure (p) contours at Re = 750. (d) Simulated wall pressure
distribution at Re = 40, and comparison with existing results. (e) Computed wall pressure distribution at Re = 750.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7091
body ﬁtted grids. In our study, we primarily focus on wake evolution behind two circular cylinders of different diameters, in
which the governing Navier–Stokes equations are solved using the present nested grid formulation and the immersed
boundary method. The aim here is to examine the ability/efﬁciency of the nested grid solver in reproducing the widely re-
ported phenomenon of suppression of the vortex shedding behind the two-cylinder system, which was kind of difﬁcult to
reach by a Cartesian grid method. The two cylinders considered in this study are shown in Fig. 17, and the diameter ratio
of the small cylinder to the large cylinder is taken as 0.2. The values of Reynolds numbers, based on the diameter of the large
cylinder, are taken as 100 and 80, and hence the corresponding values of Rewith respect to the small cylinder become 20 and
16, respectively. The gap between the small cylinder and the large cylinder is taken as 2.0 times the diameter of the large
cylinder. The position/angle of the small cylinder relative to the ﬂow direction ranges from 20 to 40. In all of such compu-
tations, a rectangular computational domain has been used. The large cylinder is placed at 5D downstream of the inﬂow
boundary, and the distance between the large cylinder and the outﬂow boundary is ﬁxed to 20D. The two lateral boundaries,
however, remained located at 7D away from the large cylinder (Fig. 17). As far as the reported results are concerned, the
effects of the position/angle (of the small cylinder) on the drag and the lift forces over the large cylinder, the pressure dis-
tributions around it, corresponding vortex shedding frequencies, and the combined governing streamwise ﬂow characteris-
tics are critically examined here.
In order to demonstrate the efﬁciency of our numerical model, we ﬁrst consider simulating the uniform ﬂow past a single
circular cylinder with Reynolds number varying from 10 to 200. Subsequently, the model is applied to simulate the ﬂow over
the two-cylinder system. For the single cylinder case, the computational domain of 25D  14D was divided into two blocks.
In the outer block, G1 grids with D x = Dy = 0.1D were used to compute the outer ﬂow. In the inner block of 6D  4D [see
Fig. 20(a)] the G2 grids with Dx = Dy = 0.05D were used to compute the ﬂow around the cylinder. In Fig. 18 our simulated
time average drag coefﬁcients, for Reynolds number varying between 10 and 100, are compared with the ﬁnite difference
results of Lei et al. [48] and the ﬁnite element solutions of Zhao et al. [44]. Notably, an excellent agreement between the
existing results [45,48] and the present solutions has been achieved. Fig. 19 provides a comparison of the simulated Strhoual
Table 4
Computed results of mean drag coefﬁcient Cd , mean lift coefﬁcient Cl , lift force amplitude Cl,Amp and the Strouhal number St
* for ﬂow past an elliptical cylinder
with C = 0.2, a = 45, and Re* = 163.
Grid system Grids Cd Difference to B1G2 Cl Difference to B1G2 Cl,Amp Difference to B1G2 St
* Difference to B1G2 CPU
B1G1 25,000 3.603 2.700 1.386 0.1981 208.5
6.7% 0.2% 8.7% 3.2%
B1G2 100,000 3.378 2.705 1.275 0.2045 1257.0
0.0% 0.0% 0.0% 0.0%
B2G2 28,321 3.374 2.698 1.270 0.2056 383.9
0.1% 0.3% 0.4% 0.5%
B3G2 28,888 3.377 2.701 1.272 0.2038 390.8
0.0% 0.1% 0.2% 0.4%
Mittal (1996) 8100 3.71 Na Na 0.19 Na
Fig. 13. Physical conﬁguration and the vortex shedding ﬂow behavior past a thin elliptical cylinder with an angle of attack. C = 0.2, a = 45, Re* = 163.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7093
Fig. 21 shows the computed time history of lift coefﬁcient of the main cylinder at Re = 100. For the sake of comparison, the
lift coefﬁcient with an isolated single cylinder is also plotted here. It may be noted from the Fig. 21 that the effect of the small
cylinder on the lift coefﬁcients is quite signiﬁcant. Speciﬁcally, the suppression of the mean lift on the large cylinder is very
Fig. 15. Physical conﬁguration and the associated vortex shedding ﬂow behavior past a thick elliptical cylinder with C = 0.5, a = 45, Re* = 525.
250 260 270 280 290 300
t
1.5
2.0
2.5
3.0
3.5
4.0
4.5
5.0
C
d
250 260 270 280 290 300
t
-2.0
0.0
2.0
4.0
6.0
C
l
(a)
(b)
Fig. 16. Temporal variations of drag and the lift forces for the ﬂow past a thick inclined elliptical cylinder with C = 0.5, a = 45, Re* = 525, (a) distribution of
the drag force Cd, (b) distribution of the lift force Cl.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7095
much noteworthy for all the computed cases (Fig. 21) with 20 6 h 6 40. The maximum suppression of the lift on the main
cylinder is clearly noted (Fig. 21) to occur at h = 25. For further clarity, the variations of mean lift and drag coefﬁcients,
amplitudes of the lift coefﬁcients, and the Strouhal number St for the main cylinder as functions of the position angle of
the small cylinder were collected from our simulated data and listed in Table 6. It is noted that (Table 6) the maximum sup-
pression ratio of Cl on the main cylinder is about 3.7%, and it occurs at h = 25. For the sake of enhanced clarity, corresponding
simulated results for the two-cylinder system with Re = 80 are plotted/presented in Fig. 22 and Table 7. Notably, from Tables
6 and 7 it becomes absolutely clear that the suppression of the vortex shedding is most dominant at Re = 80 and h = 25,
Fig. 20. Computed iso-vorticity plots and the associated nested grid domains: (a) ﬂow past a single circular cylinder at Re = 100, (b) ﬂow past two circular
cylinders of different diameters at Re = 100 and h = 30.
Fig. 21. Simulated temporal ﬂuctuations of Cl for the ﬂow past two cylinders of different diameters at Re = 100 with various position angles. The solid line
represents the corresponding single cylinder case.
Table 6
Computed results of mean drag coefﬁcient Cd , mean lift coefﬁcient Cl , lift coefﬁcient amplitude Cl, and the Strouhal number for the ﬂow past
two cylinders of different diameters at Re = 100 with various position angles.
h Cd Cl Cl Cl/Cl,single (%) St
20 1.270 0.0125 0.0215 7.2 0.155
25 1.263 0.0098 0.0111 3.7 0.156
30 1.300 0.0065 0.0645 21.5 0.169
35 1.316 0.0045 0.0921 30.8 0.176
40 1.339 0.0075 0.1205 40.2 0.182
Single 1.422 0.0 0.2994 100 0.177
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7097
is far more economical (Tables 3–5) with respect to a single block method. Here we would like to add that the vortex shed-
ding behind a circular cylinder (in absence of the control cylinder) starts approximately at Re = 47 through a single mode
Hopf bifurcation, as the spanwise pressure oscillation along the corelins of the shedded vortices reaches a critical threshold
value. This in turn facilitates the development of a local pressure maximum at the point of bifurcation (e.g., see [49]). More-
over, at Re = 80 owing to enhanced spanwise pressure oscillation (and growing local convective instability), there appears
nearly symmetrical growth of two such isolated local pressure maxima [49–51] along the corelines of the shedded vortices
(both in presence/absence of the control cylinder). The vortex shedding behind the (isolated) cylinder at this stage (Re = 80)
occurs through the growth of a second mode of supercritical Hopf bifurcation. Therefore, suppression of vortex shedding till
Re = 80, in the presence of a control cylinder, is indeed an important phenomenon/goal to achieve, which has been quite suc-
cessfully obtained through our present nested grid formulation.
4. Conclusions
In this work, a nested-block ﬁnite-volume based Cartesian grid method has been developed, which allows us to effectively
simulate the unsteady viscous incompressible ﬂows with complex immersed boundaries. The underlying method is based on
a colocated arrangement of variables, in which a globally second-order accurate central-difference scheme is used for spatial
differencing. The solution is advanced in time using a two-step fractional-step scheme. The key aspects that needed careful
consideration in developing such a nested-block solver are imposition of interface conditions on the nested-block boundaries
and accurate discretization of the governing equation in cells that are with block-interface of a control-surface. The interpo-
lation procedure adopted here allows systematic development of a discretization scheme that preserves the second-order
global spatial accuracy of the underlying solver. As a result, high efﬁciency and accuracy nested-block method is developed.
Herein, ﬁve different complex numerical experiments have been conducted in order to extensively examine/demonstrate
the performance of the present nested-block solver. For the lid-driven cavity ﬂow our numerical results demonstrate that
even with marginally reﬁned grids the developed method helps to effectively improve the global ﬂow features adequately.
Such an observation clearly shows that the present nested-block method works very well for the investigated ﬂow. In an-
other numerical experiment, simulations of ﬂows past a circular cylinder when placed symmetrically in a channel have been
carried out in the Reynolds number range 225–750. Notably, the important key quantities, such as, the mean drag coefﬁcient,
the length of recirculation zone, and the Strouhal number, as obtained from our simulations, agree quite well with the avail-
able well established numerical results. In addition, the solver could predict the critical Reynolds number, associated with
the vortex shedding, with a high degree of precision. For the ﬂow past an inclined elliptic cylinder placed in a uniform stream
the validity/effectiveness of the present numerical method in a situation when more than two ﬁne nested grid domains are
present/overlap is conﬁrmed.
For the ﬂow past two circular cylinders of different diameters (in tandem) the ability of the present numerical method in
effectively predicting the suppression of the vortex shedding phenomenon, which has been reported to be difﬁcult to obtain
by a Cartesian grid method, is widely demonstrated. In addition, our numerical experiments clearly indicate that even with
considerably reduced grid size the present nested-block method can achieve a solution of comparable accuracy to that ob-
tained by the traditional ﬁnite difference methods on a ﬁnest uniform grid, and the present method also helps to signiﬁcantly
Fig. 24. Computed iso-vorticity contour plots and the associated nested grid domains: (a) ﬂow past a single cylinder at Re = 80, (b) ﬂow past two cylinders
with different diameters at Re = 80 and h = 25.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7099
[49] A. Sau, Hopf bifurcations in the wake of a square cylinder, Phys. Fluids 21 (2009) 0341051–03410519.
[50] A. Sau, T.W. Hsu, S.H. Ou, Three-dimensional evolution of vortical structures and associated ﬂow bifurcations in the wake of two side-by-side square
cylinders, Phys. Fluids 19 (2007) 0841051–08410517.
[51] A. Sau, Growth of unsteady Hopf bifurcation modes and their swapping in a transitional coupled wake, Phys. Fluids 20 (2008) 1041081–10410818.
Y.-F. Peng et al. / Journal of Computational Physics 229 (2010) 7072–7101 7101
98年度專題研究計畫研究成果彙整表 
計畫主持人：彭逸凡 計畫編號：98-2221-E-260-019- 
計畫名稱：巢狀卡式網格法於含自由液面及複雜邊界三維流場之發展及應用(II) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
