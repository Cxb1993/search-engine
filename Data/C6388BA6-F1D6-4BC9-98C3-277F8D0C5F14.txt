本研究第三年成果二篇期刊分別接受刊登於 2010 IET security system、 Nov. 2010, 
Journal of Internet Technology 、及 International Journal of Communication Systems 
等期刊成果報告內容如下: 
 
 2
3 
 
attacks and protocol attacks [4]. Each method applies a particular strategy to interfere with a watermarked image to make the 
extracted watermark, which is obtained by the watermarking method, cannot verified by the owner of the watermarked image. 
Removal attacks [4]-[6], in the spatial domain, treat the watermark ܅ as noise that is added to the original image ۷ to yield 
the watermarked image ܇. The relevant relations are 
܇ ൌ ۷ ൅ ܅.  (1) 
Based on this assumption, watermark-removal algorithms apply a denoising method to remove the watermark to yield the 
predicted image ۷ሚ and the predicted watermark ܅෩ . Furthermore, they may use remodulation approaches to change the signs 
of part of the predicted watermark and add this predicted watermark to the predicted image to yield the final attacked image ۷መ. 
Figure 1 presents the flow chart for removing the watermark and remodulation. 
Two objectives must be considered in the removal of a watermark. The first is to remove the watermark energy from the 
watermarked image; the second is to retain the energy of the original image in the watermarked image. 
In fact, a trade-off exists between these two aims, because when attackers wish to remove a watermark from a 
watermarked image, they know nothing about the watermark, the original image and the watermarking algorithm. As most of 
watermark-removal methods, such as denoising filtering or image compression (or quantization) methods, removing 
watermark energy also leads to remove partial original image energy at the same time. Therefore, to obtain a high-quality 
predicted image, the amount of watermark energy as a fraction of total removed energy must be maximized. Furthermore, the 
more correctly predicted image can also increase remodulation efficiency. However, the literature indicates that most 
watermark-removal schemes were suffered with such problems. 
5 
 
۷ ൌ ܃܁܄்,  (2) 
where ܃ is an ݉ ൈ  ݊ orthogonal matrix; ܄ is an ݊ ൈ ݊ orthogonal matrix and ܁ is an ݊ ൈ ݊ diagonal matrix with 
ݏூభ ൒ ݏூమ ൒ ڮ ൒ ݏூ೙ ൒ 0. ݏூ೔ሺ1 ൑ ݅ ൑ ݊ሻ are the singular values of ۷, and the columns of ܃ and ܄ are the left and right 
singular value vectors, respectively. 
The rank of ۷ is ݎ ሺݎ ൑ ݊ሻ, and is the number of nonzero singular values: 
ݏூభ ൒ ݏூమ ൒ ڮ ൒ ݏூೝ ൐ ݏூೝశభ ൌ ڮ ൌ ݏூ೙ ൌ 0. (3) 
Then Eq. (2) can be written as 
۷ ൌ ෍ ݏூ೔܃ூ೔܄ூ೔
்
௥
௜ୀଵ
 
ൌ ݏூభ܃ூభ܄ூభ
் ൅ ݏூమ܃ூమ܄ூమ
் ൅ ڮ ൅ ݏூೝ܃ூೝ܄ூೝ
்  
ൌ ۷ଵ ൅ ۷ଶ ൅ ڮ ൅ ۷௥,  (4) 
where ܃ூ೔ and ܄ூ೔ are the ݅th columns of ܃ and ܄, respectively.  ۷࢏ ൌ ݏூ೔܃ூ೔܄ூ೔
் represents the eigen-images. Accordingly, 
an image can be decomposed into ݎ eigen-images and the total energy of ݎ eigen-images is exactly equal to the energy of the 
image. It can be shown as: 
ԡ۷ԡଶ ൌ ෍ ෍ ܫ௜௝ଶ
௡
௝ୀଵ
௠
௜ୀଵ
ൌ ෍ԡ۷࢏ԡଶ.                                    ሺ5ሻ
௥
௜ୀଵ
 
Since the square of the Frobenius-norm of ۷ is defined as, 
ԡ۷ԡଶ ൌ ෍ ݏூ೔
ଶ
௥
௜ୀଵ
 .                                                                 ሺ6ሻ 
7 
 
the filtered matrix is defined as ۷ሚ ൌ ܃௒܁ூሚ܄௒். 
3.2. Adaptive Wiener Filter 
The authors of two earlier studies [6][12] modeled watermarking based on the stochastic distribution of images and used 
such proposed schemes as the adaptive Wiener filter, soft-shrinkage in the wavelet domain and reweight-least-squares (RSL) to 
remove watermarks from watermarked images. They treated original images as either locally independent identically 
distributed (i.i.d.) non-stationary Gaussian (nG) or globally i.i.d. stationary Generalized Gaussian (sGG) images, and regarded 
watermarks as i.i.d. random variables with Gaussian distributions of zero mean and variance ߪௐଶ . 
One of the cited works [6] employed the well known adaptive Wiener or Lee filter to remove watermarks. The filter is 
given as follows: 
ܫሚ௜௝ ൌ ܫ ҧ௜௝ ൅
ఙ಺೔ೕ
మ
ఙ಺೔ೕ
మ ାఙೈ
మ ൫ ௜ܻ௝ െ ܫ ҧ௜௝൯,  (9) 
where ܫ ҧ௜௝ and ߪூ೔ೕ
ଶ  are local mean and local variance, respectively. 
4. Proposed Method 
The watermarking equation ܇ ൌ ۷ ൅ ܅  demonstrates that regardless of the algorithm adopted for embedding a 
watermark, the watermarked image can always be separated into the original image and the watermark in the spatial domain, 
and each pixel is represented by ௜ܻ௝ ൌ ܫ௜௝ ൅ ௜ܹ௝. 
To establish the energy relations among three images, the aforementioned assumptions in section 3.2 concerning the 
stochastic distribution of images are made, namely, the original image is modeled as a global i.i.d. sGG, and the watermark is 
i.i.d. ௜ܹ௝~ܰሺ0, ߪௐଶ ሻ. For simplicity, pattern ܅ is assumed to be uncorrelated with image ۷: covሺ۷, ܅ሻ ൌ 0. 
9 
 
In Eq. (13), although the energy of the watermarked image is not precisely divided into the energy of the original image 
and that of the watermark, most of the energy of each of the three images must be concentrated in only the first few 
eigen-images. Therefore, the energy of each eigen-image of a watermarked image is intuitively assumed to be almost equal to 
the sum of the energy of the eigen-image of the original image and the watermark of the same rank: 
ԡ܇௜ԡଶ ൎ ԡ۷௜ԡଶ ൅ ԡ܅௜ԡଶ.         (14) 
Hence, Eq. (14) can be rewritten as 
ฮ۷ሚ௜ฮ
ଶ ൌ ԡ܇௜ԡଶെฮ܅෩௜ฮ
ଶ, (15) 
where ฮ۷ሚ௜ฮ
ଶ
 and ฮ܅෩௜ฮ
ଶ
 represent the energy of the ith eigen-image of the predicted image and the predicted watermark, 
respectively. 
From Eq. (7), the energy of each eigen-image equals the square of its singular value. Therefore, Eq. (15) can be rewritten 
as 
ݏூሚ೔ ൌ ቀݏ௒೔
ଶ െ ฮ܅෩௜ฮ
ଶቁ
ଵ ଶ⁄
. (16) 
To obtain the energy of the predicted watermark ฮ܅෩௜ฮ
ଶ
, the characteristic of JND is used and the stochastic distribution 
of the watermark is assumed. 
Each pixel in an image has a JND value and the JND value is the maximum gray level that may be changed at the 
particular pixel without changing the gray levels of the other pixels. A change in the value of the gray level of a particular 
pixel to below JND value cannot be observed by the human visual system. Therefore, several imperceptible watermarking 
11 
 
ฮ܅෩௜ฮ
ଶ ൌ ߣ · ݉݊ߪଶ ·
ԡ܇௜ԡം
∑ ԡ܇௜ԡം௥௜ୀଵ ,
                                       ሺ20ሻ 
where ߣ is the percentage of the removal energy of the predicted watermark, ԡ܇೔ԡ
ം
∑ ԡ܇೔ԡംೝ೔సభ
 is the prediction function and ߛ is the 
function parameter. 
The energy of each eigen-image of the predicted watermark ฮ܅෩௜ฮ
ଶ
 is constrained to be less than the energy of the 
eigen-image of the watermarked image ԡ܇௜ԡଶ: if ฮ܅෩௜ฮ
ଶ ൐ ԡ܇௜ԡଶ, then ฮ܅෩௜ฮ
ଶ ൌ ԡ܇௜ԡଶ. Therefore, ԡ܇௜ԡଶ െ ฮ܅෩௜ฮ
ଶ ൒ 0.  
According to Eqs. (16) and (20), every singular value of the predicted image is represented as 
ݏூሚ೔ ൌ ൭ݏ௒೔
ଶ െ ߣ · ݉݊ߪଶ ·
ݏ௒೔
ఊ
∑ ݏ௒೔
ఊ௥
௜ୀଵ
൱
ଵ ଶ⁄
.                                      ሺ21ሻ 
Finally, the predicted image can be reconstructed from the singular values of the predicted image and the singular value 
vectors ܃௒, ܄௒ of the watermarked image: ۷ሚ ൌ ܃௒܁ூሚ܄௒் 
5. Experimental results 
In this section, four watermarking algorithms are adopted to embed an original watermark in an original image. Then, the 
watermark is removed from a watermarked image using the four watermark-removal methods to obtain the predicted images; 
finally, the PSNR of each predicted image is computed from the predicted image and the original image, and also the similarity 
between the extracted watermark and the original watermark is computed. The proposed method uses parameters ߣ ൌ 1, 
γ ൌ 3 2⁄  in Eq. (21). 
The degree of similarity, NC, between the original watermark ܆ and the extracted watermark ܆כ can be determined by 
performing a correlation test. Their two-dimensional correlation coefficient is calculated directly using 
13 
 
of the original image of the adaptive Wiener filter is locally i.i.d. nG and the assumption of the proposed method is globally 
i.i.d. sGG.  
After removing watermarks from the watermarked images whose watermarking algorithms are employed by Cox, Huang, 
Maity and Lee, the predicted images can be obtained and the corresponding performances of these watermark removal 
methods (SVD 1, SVD 2, Wiener, Eigen) are listed from Table 2 to 5. 
Figure 5 presents the predicted images by removing the watermarks from the watermarked images, using Maity’s 
watermark embedding algorithm and also the watermark-removal method of the adaptive Wiener filter. Figure 6 presents 
watermarks extracted from the predicted images in Fig. 5. Figure 7 is obtained by the same way as in Fig. 5 except using the 
watermark-removal method of the proposed method. Figure 8 presents watermarks extracted from the predicted images in Fig. 
7. Due to the page limit imposed, only the results performed by using Maity’s embedding watermark algorithm, and the 
watermark removal method of the adaptive Wiener filter and the proposed method are presented. 
In Fig. 9, each diamond on the curve “watermarked” represents the mean PSNR of the watermarked images, which is 
given in Table 1, obtained by applying four watermarking algorithms to each original image. The mean PSNR can be 
determined from the information provided in Tables 2 to 5. For instance, for the image Barbara and the watermark-removal 
method ‘SVD 1’, the mean PSNR is derived from the four values of row ‘SVD 1’ and column ‘PSNR’ from Tables 2 to 5. As 
presented in Fig. 10, the NC values of the extracted watermarks, before watermark-removal methods are applied, are all 1.0. 
The mean NC values can also be calculated in the same way as the mean PSNR, except when these calculations refer to the 
‘NC’ columns. 
15 
 
benchmark’, Signal Processing, June 2001, vol. 81, pp. 1177-1214 
[3] Solachidis, V., Tefas, A., Nikolaidis, N., Tsekeridou, S., nikolaidis, A., and Pitas, I.: ‘A benchmarking protocol for 
watermarking methods’. IEEE Int. Conf. on Image Processing, Oct. 2001, vol.3, pp. 1023-1026 
[4] Kutter, M., Voloshynovskiy, S., and Herrigel, A.: ‘The watermark copy attack’. IS&T/SPIE’s 12th Annual Symposium, 
Electronic Imaging 2000: Security and Watermarking of Multimedia Content II, SPIE Proc., San Jose, CA, USA, Jan. 2000, 
vol. 3971, pp. 23-28 
[5] Craver, S., Memon, N., Yeo, B. L., and Yeung, M.: ‘Resolving rightful ownerships with invisible watermarking techniques: 
limitations, attacks, and implications’, IEEE Journal on Selected Areas in communications, May 1998, vol. 16, pp. 573-586 
[6] Voloshynnovskiy, S., Pereira, S., Herrigel, A., Baumgartner, N., and Pun, T.: ‘Generalized watermarking attack based on 
watermark estimation and perceptual remodulation’ In Proceedings of SPIE: Security and Watermarking of Multimedia 
Content II, San Jose, CA, USA, Jan. 2000 
[7] Chou, C. H., and Li, Y. C.: ‘A perceptually tuned subband image coder based on the measure of just- noticeable-distortion 
profile’, IEEE Trans. Circuits Syst. Video Technol., Dec. 1995, vol. 5, no. 6, pp. 467-476 
[8] Konstantinides, K., and Yao, K.: ‘Statistical analysis of effective singular values in matrix rank determination’, IEEE Trans. 
Acoustics, Speech, and Signal Processing, May 1988, vol. 36, pp. 757-763 
[9] Wongsawat, Y., Rao, K. R., and Oraintara, S.: ‘Multichannel SVD-Based Image De-Noising’. IEEE International 
Symposium on Circuits and Systems, ISCAS 2005, May 2005, vol. 6, pp. 5900-5993 
[10] Lu, W.: ‘Adaptive Noise Attenuation of Seismic Image Using Singular Value Decomposition and Texture Direction 
Detection’. International Conference on Image Processing, Sep. 2002, vol. 2, pp. II-465-II-468 
17 
 
 
Removing
Watermark + Remodulation +
Y I~
+
− W~ ++ Iˆ
 
Fig. 1 Removing watermark and remodulation flow chart. 
 
 
 
Fig. 2 Energy distribution of eigen-images of an image. 
 
 
Fig. 3 Original images: Barbara, Lena, Baboon and Peppers. 
 
 
 
 
 
Fig.4 Original watermarks 
 
0
1E+09
2E+09
3E+09
4E+09
1 51 101 151 201 251 301 351 401 451 501
En
er
gy
Eigen-images
19 
 
Fig. 5 Predicted images obtained from four different watermarked images by 
applying Maity’s watermarking algorithm to four original images and using the 
watermark-removal adaptive Wiener filter to the four watermarked images. 
 
 
Fig.6 Four watermarks extracted from the four predicted images in Fig. 5 
 
 
Fig.7 Predicted images obtained from four different watermarked images by 
applying Maity’s watermarking algorithm to four original images and using the 
proposed watermark-removal method to the four watermarked images. 
 
1Threshold Functions for Embedding Secure Paths into Random Key Pre-Distribution Based Wireless Sensor Networks
Threshold Functions for Embedding Secure Paths into Random Key Pre-
Distribution Based Wireless Sensor Networks
Wei-Shuo Li1, Wen-Shyong Hsieh1,2, Cheng-Yeh Chen1
1Department of Computer Science and Information Engineering, National Sun Yat-Sen University, Taiwan 
2Department of Computer Science and Information Engineering, Shu Te University, Taiwan.
WeiSoul.Li@gmail.com, wshsieh@mail.stu.edu.tw
Abstract
Many random key pre-distribution based schemes have 
been developed to enhance security. Most of these schemes 
need to guarantee the existence of specific properties, such 
as disjoint secure paths or disjoint secure cliques, to achieve 
a secure cooperation among nodes. Which conditions ensure 
that large-scale sensor networks have a certain structure? 
The most well-known solutions of this kind of problems 
are probably Szemerédi’s regularity lemma for embedding 
and perfect matching. The Szemerédi’s Embedding lemma 
allows one to embed a small graph H into an underlying 
graph, when a network is sufficiently large. Perfect 
matching is generalized by perfect H-packing, which covers 
G by disjoint copies of a small graph H instead of covering 
all vertices of G with disjoint edges. However, analyzing 
such a structure or combinatorial problem is complicated 
in classical wireless network models such as percolation 
theories or random geometric graphs. Particularly, proof of 
results in geometric setting models often blend stochastic 
geometric and combinatorial techniques and is more 
technically challenging. To overcome this problem, our 
objective is to use an approximate quasi-random graph 
in order to eliminate some properties that are difficult to 
handle.
In this work, we analyzes the question of the threshold 
probability function for the property that “every pair of 
vertices lies in a secure path” with respect to a security 
parameter p. In other words, the goal is to obtain a 
threshold function p0(n), such that if given p  p0(n) 
then the probability that a security subgraph has above 
property is close to 1 and if p is slightly small then p0, 
then this probability is close to 0. To be more precise, we 
first obtain a ε-regular partition of the sensor network by 
using the Szemerédi regularity lemma. Then, cover each 
pair of nodes that is regular by a secure path P of length 
. Finally, a threshold can be obtained for almost pair of 
nodes (regularity nodes), and then one can match remaining 
irregular pairs using an appropriate control for those 
irregular nodes. Nevertheless, the main difference is that 
in a random graph the dependence/disjointness of certain 
events comes naturally, whereas in an ε-regular graphs, one 
needs to work on it. We show that in almost all security 
graphs the number of secure paths of length  is close to its 
expectation provided ε is sufficiently small, p  n(-1)/+o(1), 
and n is sufficiently large.
Keywords: Sensor networks, Security, Random key pre-
distribution, Threshold, Szemerédi’s regularity 
lemma.
1   Introduction
Security problems become increasingly important to 
telecommunications, and information transmission, have 
also become more and more increasingly complex for large-
scale networks [1-4][11][46-50]. Sensor networks require 
cryptographic protection for communication, sensor-capture 
detection, key revocation and sensor disabling. The key pre-
distribution solution is particularly suitable for large scale 
sensor network due to the lack of prior knowledge of which 
nodes will be in the communication range of each other 
node after deployment. Most of security solutions need 
to guarantee the existence of specific properties, such as 
disjoint secure paths or disjoint secure cliques, to achieve a 
secure cooperation among nodes. The algorithms designed 
for secure communication in wired and wireless networks, 
however, have markedly different characteristics. This 
work provides a graph-theoretical model for it, and we will 
show that an effective probability analysis can be model the 
behavior of RKP based techniques. The secure subgraphs 
embedding supported by the key management scheme are 
discussed and analytical results are presented.
RKP-based schemes are the most popular probabilistic 
models used to solve security problems for large scale 
sensor networks. It relies on probabilistic key sharing 
among nodes and uses simple protocols for shared-key 
discovery, path-key establishment, and incremental addition 
of nodes. The key setup phase generates a key pool of K 
keys. For each node, k keys are randomly drawn from the 
key pool before deployment, and the probability of at least 
one key are shared between two nodes is
  (1)
*Corresponding author: Wen-Shyong Hsieh; E-mail: wshsieh@mail.stu.edu.tw
JIT1199.indd   1 2010/11/8   下午 04:23:20
3Threshold Functions for Embedding Secure Paths into Random Key Pre-Distribution Based Wireless Sensor Networks
equally sized “clusters,” such that most pairs of the clusters 
have some random-like edge distribution. Importantly, 
the regularity lemma is particularly suited to dealing with 
the subgraph problems in a dense graph, such that one 
can search or count the subgraphs in the partition clusters, 
which is guaranteed by this lemma and is employed the 
structure of the subgraph.
The remainder of this paper is organized as follows. 
First, an introduction of RKP and its variants descried 
in, then, in Section II-B, we give some primary reasons 
why use Szemerédi’s lemma to deal with the subgraph 
embedding problems. In Section III-C, we show how 
to embed a subgraph into a dense graph. Moreover, the 
regularity lemma is applied to obtain a ε-regular partition, 
V1, V2, ... Vk, in which many paths exist between any two 
vertices u ∈ V1 and v ∈ V

+1. Second, we investigate the 
threshold of the property that every pair of vertices of a 
RKP subgraph lies in a security path (EPV) on the random 
subgraph of a Szemerédi regular partition. Finally, match 
our desired to the remainder irregular nodes, and we show 
that the threshold function p0(n) for EPV is n
(

-1)/

+o(1) (see 
our main result in Theorem 12). 
2   Underlying Model for RKP-Based 
Multi-Hop Wireless Networks
2.1 Random Key Pre-Distribution
Nodes in a network must be able to communicate 
securely. To make such secure communication possible, 
nodes must have access to the proper keying management. 
Typical approaches to the key management problem in 
wireline networks that depend on the use of trusted third 
parties are not suited to ad hoc/sensor network scenario; the 
primary reason is the lack of a trusted infrastructure in ad 
hoc/sensor networks. Generally, resource usage, scalability, 
key connectivity and resilience are conflicting requirements; 
therefore, trade-offs among these requirements must made 
carefully. 
The trivial solution, RKP, addresses the unnecessary 
storage problem, and provides very good key resilience. 
On the contrary, it sacrifices key connectivity to decrease 
storage usage. Of course, given that security/reliable models 
are probabilistic, a network may not be fully connected, 
thereby preventing some pairs of neighboring nodes from 
communicating securely. In other words, each sensor node 
stores a random set of keys to achieve probability p that 
two nodes are connected. 
Generally, the RKP-based schemes [1-4][11], which 
can be stated as following three phases:
(1) Key pre-distribution prior to deployment.
(2) Shared key discovery after deployment.
(3) Path-key establishment when two sensor nodes do not 
share a key.
In the key setup phase, a large pool of K keys and their 
identities are generated. For each sensor node, k keys are 
randomly drawn from the key pool without replacement. 
These k keys and their identities form a key-chain for a 
sensor node. The size K of the key pool is important for 
ensuring both good connectivity and increased resilience 
of key management. That is, a smaller size of K makes a 
key sharing between two nodes with a higher probability, 
thereby leading to greater chances of ensuring connectivity. 
Conversely, this can also increase the network susceptibility, 
since by compromising fewer nodes an adversary would 
be able to eavesdrop successfully on a large number of 
communications among non-compromised nodes. Note 
also that when a network is sparse, the probability of key 
sharing between two sensor nodes becomes decreases, as 
shown in [4]. For each node, k keys are randomly drawn 
from the key pool before deployment, and the probability 
of key shared between two nodes is 
  (3)
as demonstrated in [1-2].
A small K ensures high connectivity; however, it 
suffers from no resilience against node. Since capture 
of a single node compromises the large fraction of 
communications of a network. The various proposals differ 
according to the structure of the key pool, the number of 
common keys required, their applicability to a dynamic 
deployment scenario, and the method of determining the 
common keys. These schemes offer network resilience 
against capture of nodes since a node has very few keys 
deployed on it. Thus, there is no need to consider tamper 
resistant nodes (though note that non tamper-resistant nodes 
might not be acceptable in some situations such as military 
deployments).
Generally, the following three kinds of key commonly 
used in the key pre-distribution based schemes, (1) pair-
wise key [12], (2) path-key, [1][3], and (3) neighbor-
key [5]. The pair-wise key schemes suffer from heavy 
resource consumption when k (memory) is increased to 
achieve connectivity as the number of nodes increases. In 
the path-key approaches, one does not need to establish 
a direct secure link between a pair of nodes; instead, 
finding a secure path to forward messages is the principal 
challenge [3][13]. Differing from the path-key, a neighbor-
key process [5] can achieve the same effect with the 
assistance of neighbors to encrypt/decrypt the message for 
a sender/receiver without the path-finding problem [4]. 
Another important advantage is that using neighbor-key 
is particularly efficient for a critical link. We call a link or 
JIT1199.indd   3 2010/11/8   下午 04:23:20
5Threshold Functions for Embedding Secure Paths into Random Key Pre-Distribution Based Wireless Sensor Networks
A practical problem is that the integrand above is not 
observable, if one only observes X\W. When u is a node 
close to the boundary of the window W, the nodes of X 
nearest to u may lie outside W (although the process is 
generate limit to the window, one can figure out that inside 
point process is a random sampling from an infinite region, 
that why some nodes may exist “outside” the window). 
Thus, this will result in a negatively biased estimator of 
F, which called a bias due to boundary effects. One of 
the most common solution is replace window W with 
the torus model [10], which is convenient for analysis, 
but not for practical application. Others methods, such 
as border methods, try to eliminate the boundary effect 
via an appropriate erosion on window W (for a survey of 
corrections for edge effects, see [14]). Notably, the same 
problem occurs when one needs to count the subgraph 
nearing the boundary.
The other reason is that Erdös-Rényi random 
graphs have the characteristic of independence or near-
independence between different edges. This is not the case 
for geometric graphs. In a geometric context, the triangle 
property is frequently more realistic than the independence 
of edges in the Erdös-Rényi model. Consequently, if one 
can generate a tolerance room of ε to carry these bad effects 
then one can then reduce some properties that are difficult 
to handle. For instance, one can collect boundary nodes into 
an exceptional class V0 when apply the Semerédi partition.
Another significant reason is the algorithm aspects of 
the regularity lemma. The original proof of the regularity 
lemma is non-constructive, but later a polynomial time 
algorithm for finding (ε, k)-regular partitions have been 
developed in [15], and the interested reader is refer to [16] 
for a survey on algorithmic variants and applications of the 
regularity Lemma. Recently, a fast O(n) algorithm appears 
in [17], and actually has the added advantage of being able 
to find the smallest regular partition.
Another O(1) randomized algorithm of regularity 
lemma is developed and is particularly suitable for 
distributed nature of wireless networks [18]. These reasons 
motivate us to make use of the Szemerédi’s regularity 
lemma.
3   ε-Regularity Partition
Our aim in this section is to state a variant of the 
celebrated regularity lemma of Szemerédi [19]. Since its 
discovery in the late 1970s, the Szemerédi’s Regularity 
Lemma is one of the most remarkable results in modern 
graph theory [19], having a wide variety of uses and 
applications. In computer science, such regularity notions 
have been used extensively in approximation algorithms 
[20-23], distributed computing [24-25], property testing 
[26-30] and communication complexity [31]. Therefore, 
there has been a growing interest in studying the properties 
of such graphs. The following is the introduction of the 
regularity lemma [32].
3.1	 Preliminary	Definition	and	the	Regularity	Lemma
The Regularity Lemma says that any dense graph an 
be partitioned into a small number of regular pairs and 
a few leftover edges [32]. Let G = G(V, E) ∈ WSN be a 
realization of wireless ad hoc/sensor network on n nodes 
and m edges, for any two disjoint sets U, W ⊆ V, a pair of 
disjoint sets of vertices. Denote by E (U, W ) the set of all 
edges between U and W, i.e.,
  (6)
The density of the pair (U, W ) is defined by
  (7)
The pair (U, W ) is called ε-regular if
  (8)
for any U' ⊆ U and W' ⊆ W with |U' | ≥ ε |U | and |W' | ≥ ε 
|U |. We may now state Szemerédi’s celebrated regularity 
lemma.
Theorem 1. For every ε > 0 and k0 ≥ 1, there exists an 
integer K = K(ε, k0) such that any graph G admits a partition 
V = V1 ∪ V2 ∪ ... ∪k, where |V1| ≤ |V2| ≤ ... ≤ |Vk| and k0 ≤ k ≥ 
K such that all but ≤  pairs (Vi, Vj)are ε-regular.
Note that Theorem 1 tells us that the notion of 
ε-regularity is equivalent to a condition concerning global 
uniformity of degrees deg(u, v) and codegrees codeg(u, 
v), for u, v ∈ Vi. Since codegrees concern only pairs of 
vertices, and not large subsets U' and W' as in the definition 
of regularity, we have a “local” criterion for regularity. Let 
us now consider applications of the regularity lemma. The 
result below and its generalizations are crucial in the proofs 
of most of the applications of the regularity lemma.
Theorem 2. (Embedding lemma) For every d > 0, there 
exist an ε > 0 and n0 ≥ 1 such that the following holds: let 
H be a graph with vertex set {1, ... , k}. Let G = (V, E) be 
a graph and V1, ... . Vk be k disjoint subsets of V, with |V1| 
= ... = |Vk| = n ≥ n0. If all pairs (Vi, Vj) with {i, j} 2 E(H) are 
ε-regular with density ≥ d, then G contains a copy of H with 
vertex set {v1, v2, ... , vk}, with vi ∈ Vi for all 1 ≤ i ≤ k. 
It is quite natural to refer to results of the form of 
Theorem 2 as embedding lemmas. It turns out that one can 
in fact prove that the number of copies of the graph H in G 
in Theorem 2 is at least d |E(H)| nk (1 - g(ε)), where g(ε) → 
JIT1199.indd   5 2010/11/8   下午 04:23:21
7Threshold Functions for Embedding Secure Paths into Random Key Pre-Distribution Based Wireless Sensor Networks
Theorem 6. For any β, δ > 0, there exist constants ε0 > 0, C 
> 0; n0 > 0 such that
  (14)
for all T ≥ Cn2-(-1)/, n ≥ n0, and 0 ≤ ε ≤ ε0.
Throughout this paper, a random subgraph with constant 
p is not a very interesting object to study for our purposes. 
If p is a constant, the degree, i.e., the number of edges per 
vertex, grows linearly with n, while many real networks are 
much sparser. As we will see, interesting behavior such as 
packing and embedding occurs within much sparser RKP 
graphs. Moreover, we assume the wireless sensor network 
is dense, and a RKP subgraph is always sparse.
In this paper, denote by WSN be a class of wireless 
sensor networks, then G is a graph of WSN with n vertices, 
and SG denote a subgraph from G. We write G(r) is an 
ε-regular graph from G, and SG(r) = S(G(r), p) is a random 
subgraph of G(r), and if it will not cause any confuse, we 
may ignore parameter p. As usual, the abbreviation w.h.p. 
stands for with high probability, i.e., with probability 1 - 
o(1). All logarithms are natural logarithms.
3.3 P-Packing	Problem	by	Regularity	Lemma
In this section, we shall see that in many applications 
of the regularity lemma, the original problem for G one is 
interested in can be turned into a “simpler” problem for the 
reduced graph. Given two graphs H and G, an H-packing 
in G is a collection of vertex-disjoint copies of H in G. It is 
perfect if all of the vertices of G are covered.
Let R, which its vertex is composed of singleton i, a 
reduce or regularity graph of G with parameters ε,  and d. 
Now replace every vertex i of R by a set Vi of n vertices, 
and every edge by a complete bipartite graph. Then, we can 
use R(n) to construct G by replace edges between i with 
ε-regular pair. The following lemma says that subgraphs 
of R(n) can also be found in G. Roughly speaking, it states 
that R almost “inherits” the minimum degree of G.
Lemma	7. For every 0 < η < 1/2 and integer , there exist 
an n0 (ε, ) such that for every n ≥ n0, any graph G(n, d) 
with minimum degree δ (G) > (1 - 1/2 + η)n contains at 
least (1 - η)n/3 vertices lie in a path P.
Proof: First, apply degree form regularity lemma to G, 
and choose 1/2  η  d  ε  1/n0. Consider the reduced 
graph R, we want show that δ(R) ≥ (1 + η) k/2, then R 
contains a Hamilton path.
By the definition of degree form regularity lemma, 
  (15)
Thus, for a specific cluster, say Vi, 
  (16)
Let 2ε ≤ d ≤ (1/2 + η)/2, then for every neighbor of v in G' 
lies in . We have
  (17)
and hence,
k = |R|, thus δ(R) ≥ (1/2 + η)k/2, as required, thus R contains 
a Hamilton path P (this follows e.g., from Dirac’s theorem). 
By relabeling if necessary we may assume that P = 1 
... k, and a bipartite subgraph (Vi, Vj) We want to modify the 
pair (Vi, Vj) so that the pair is (2ε, d/2)-super-regular.
Now we can obtain a subset Vi' by removing at most 
[εs] + 1 vertices, which has de Vj(vi) ≤ (d - ε)s, such that for 
every edge (i, j) ∈ P the induced bipartite subcluster (Vi', 
Vj')G' is (2ε, d = 2)-superregular. 
Thus,
 
 
 
 
 (18)
Thus, choose , and apply the Blow- 
Up lemma [36] with d = d/2, ∆ = 2, H = P, then there 
exist εb such that for every ε ≥ εb, and every cluster 
contains a P-packing. Clearly, P is embedded in R(n). So, 
given d - 2ε ≥ d/2, there is an ε' such that G, being the (ε', 
d/2)-superregular approximation of (n).
The constants is choose as follows,
  (19)
 ■
JIT1199.indd   7 2010/11/8   下午 04:23:22
9Threshold Functions for Embedding Secure Paths into Random Key Pre-Distribution Based Wireless Sensor Networks
Now suppose that SGr admit a sparse (ε', p)-regular 
partition. Hence, Theorem 6 bounds the number of all 
graphs in all (ε', p)-regular graph that contain fewer than 
copies of P, with one vertex in each of the partition classes.
First of all, let d, ε', be given. We set
,
and let ε0 and C be given by Theorem 6 applied with β, 
and ε'. Then fix ε = min {d/2, ε'/4, ε0}. Suppose V1, V2, ... , 
V are -partite partition graph from
F(P, n, T, ε', β). We shall show that a RKP subgraph of F 
that is unlikely to appear in SWSN(r). Since the bipartite 
subgraph SG(Vi, Vj) contain at least (d - ε)pn2 edges each. 
By the definition of F, there is a set W ⊂ V1 with |W | ≤ δn 
such that |Γ1(Γ2(...Γ

-1)| ≤ (1 - δ)n. Then Theorem 6 infer 
that there are at most
possibilities for choosing all such subgraph. Now the 
number of all possible subgraphs in WSN (r) are at most 
Hence, the probability that the random subgraph SG ∈ F is 
bounded from above by
 
 (24)
since the choice of β and log N  n-1/ as N → ∞.
The prove of the 1-statement is complete since Claim 
10 implies with probability 1 - o(1) that S(G(r)) admit 
a sparse (ε', p)-regular partition, and therefore has the 
expected copies of P, provided with appropriate choice of β, 
ε and large enough N. ■
We now prove Claim 10 (see [39]).
Proof: (of claim 10) Let Gp(r) ∈ SWSN (r) and let two non-
disjoint sets U, W ⊆ V(Gp(r)) with |U|, |W| ≥ αn.
First, e(U, W ) is a binomial random variable with
 
Summing all possible choices of U, W gives us 
 
where τ is a carefully choice constant. ■
The threshold of Type II is considerable now. Note that 
Type II path should involve the vertices’ local behavior 
rather than global. The key is count the average number 
of P between two vertices rather than count in global 
graph. Thus, fix a pair of vertices, the variance of a event 
in such local setting is more easy to handle. To bound 
the probability , it was worth to mention 
not only those edges joining sets Vi and Vj are need to 
be considerable, but also those edges that inside in the 
partition class.
Lemma	11. For every λ > 1, γ > 0 there exist d, ε > 0 with (d 
± ε) > 6, such that for any two neighboring vertices (u, v)
for p0 = (dn)
-(

-1)/(

) and n is sufficiently large, where
and 
Ij = 1[ jth ( - 1)-hop key path between (u, v)].
Proof: Fix two neighboring vertices u, v ∈ WSN (r), choose 
λ satisfies λ(d ± ε) = 2(d ± ε) - codeg(u, v). S = b(u, r) 
∪ b(v, r) denotes the area on union of two neighboring 
vertices, and let Dλ(S) := λ(d ∨ ε)n, i.e., the average number 
of vertices that inside S. Note also (d ∨ ε)~ d as ε → 0. 
JIT1199.indd   9 2010/11/8   下午 04:23:23
11Threshold Functions for Embedding Secure Paths into Random Key Pre-Distribution Based Wireless Sensor Networks
(1) for p ≤ c(n)-(-1)/()+o(1) we have
       P[SWSN has EPV] → o(1).
(2) for p ≤ C(n)-(-1)/()+o(1) we have
       P[SWSN has EPV] → 1 - o(1).
Proof: First we estimate the density of the network,
  (29)
Then by Theorem 1 applied with ε = min{ε1: Lemma 1, 
ε2: Lemma 2} and d = d˜ , k0 =  we can obtain an ε-regular 
graph G(r) with a partition V = V0 ∪ V0 ∪ V0 ∪ ... ∪ Vk, 
where k0 ≤ k ≤ K.
Let B1 be the set of all edges of WSN
(r) incident to 
V0. We have |B1| ≤ ε2, since |V0| < εn. Let B2 be the set of al 
edges between partition class do not form an ε-regular pair. 
By the definition, there are at most ε  such pairs and 
each pair contains at most (n/k)2 edges.
Thus,
Further, let B3 be the set of all edges belonging to the pairs 
(Vi, Vj) with density d(Vi, Vj) ≤ d. Then 
Finally, let B4 be the edges that lie inside a partition class, 
we have
 
Consequently, setting E0 = B1 ∩ B2 ∩ B3 ∩ B4, then
  (30)
Denote by E' by the sets of edges E(G(r))\E0. As before, let 
S(G(r)) be the spanning RKP subgraph of G(r)(V, E'). Let P 
= P() to be the family of paths of length , which can be 
the union of paths in Type I and Type II classes. Lemma 7 
implies that every dense graph satisfies δ(G) > (1 - 1/2 + η)
n then at least (1 - η)n vertices lie in a path belongs to P. 
Furthermore, Lemma 9 and Lemma 11 assert that S(G(r)) 
satisfies EPV, since the thresholds is slight different in the 
sense that dn2 = (n2). Moreover, the third type paths can be 
seen as combinational of Type I and Type II with smaller  
respectively.
Finally, the remainder is ask how many random edges 
T need to be added to G(irr)= G\G(r) to satisfy EPV? We 
first show that S(G) is indeed connected, then follow the 
argument of [41] which suggest that nε degree is enough to 
cover these irregular vertices. Since G has expected degree 
(1/2 + η)np, w.l.o.g, we let minimum degree δ(S(G)) = (1/4 
+ δ )np, thus there are at most ζ = (1/4 + η)p)-1 connected 
components, Ci, ... , Ck, in S(G).
 
. (31)
The last inequality due to pn2  n log n and we can choose 
η such that (δsη)
2 is linear with T. Roughly speaking, since 
SG is connected, the argument of [41] asserts that nε is 
sufficiently enough for the average subgraph degree. We 
thus complete this proof. ■
Remark 13. If one replace nr2 → ∞ condition by a weaker 
one nr2(-1)  (log n)4, it seems still provide sufficiently 
dense to prove Lemma 9 and Lemma 11.
5   Conclusion and Future Work
In this paper, the idea of approximating a random 
geometric graph by an ε-regularity graph is presented 
in Section 2.2. By applying the Szemerédi lemma, one 
can deduce that the any graph can be approximated by 
a random-like graph with a tolerance ε, and this makes 
analysis of the subgraph count of the random geometric 
networks simpler. The regularity lemma has an advantage 
in terms of decomposition of the underlying graph into 
such pseudorandom ε-regular structures. Obviously, such 
decomposition can be extremely helpful for proving results 
on the structure of a graph. Hence standard arguments often 
suffice to find certain structures first in the ε-regular pairs or 
reduce graph and then show the existence of the subgraph 
in the original graph.
JIT1199.indd   11 2010/11/8   下午 04:23:25
13Threshold Functions for Embedding Secure Paths into Random Key Pre-Distribution Based Wireless Sensor Networks
[8] Geoffrey Grimmett, Percolation, Springer-Verlag, 
New York, 1999. 
[9] Ronald Meester  and Rahul  Roy,  Continuum 
Percolation, Cambridge University Press, Cambridge, 
1996.
[10] Mathew Penrose, Random Geometric Graphs, Oxford 
University Press, New York, 2003.
[11] Roberto Di Pietro, Luigi V. Mancini and Alessandro 
Mei, Random Key-Assignment Secure Wireless 
Sensor Networks, 1st ACM Workshop on Security of 
Ad Hoc and Sensor Networks, Fairfax, VA, October, 
2003, pp.62-71.
[12] Rolf Blom, An Optimal Class of Symmetric Key 
Generation Systems, Eurocrypt 84, Paris, April, 1984, 
pp.335-338.
[13] I a n  F .  A k y i l d i z ,  We i l i a n  S u ,  Yo g e s h 
Sankarasubramaniam and Erdal Cayirci, A Survey 
on Sensor Networks, IEEE Commun. Mag., Vol.40, 
No.8, 2002, pp.102-114. 
[14] Adrian Baddeley, Spatial Sampling and Censoring. 
In O.E. Barndorff-Nielsen, Wilfrid S. Kendall and 
M.N.M. van Lieshout (eds.), Stochastic Geometry: 
Likelihood and Computation. Monographs on 
Statistics and Applied Probability, Chapman Hall/
CRC, Boca Raton, FL, 1999, pp.37-78.
[15] Noga Alon, Richard A Duke, Hanno Lefmann, 
Vojtěch Rödl and Raphael Yuster, The Algorithmic 
Aspects of the Regularity Lemma, Proc. Colloque 
Inter. CNRS, (conference location), (month), 1996, 
pp.295-352.
[16] Yoshiharu Kohayakaw and Vojtěch Rödl, Algorithmic 
Aspects of Regularity. In G. Gonnet, D. Panario and 
A. Viola (eds.), Latin 2000: Theoretical Informatics, 
Lecture Notes in Computer Science, Springer, Berlin, 
2000, pp.1-17. 
[17] Eldar Fischer, Arie Matsliah and Asaf Shapira, 
Approximate  Hypergraph Par t i t ion ing  and 
Applications, FOCS, Providence, RI, October, 2007, 
pp.579-589.
[18] Yoshiyasu Ishigami, A Simple Regularization of 
Hypergraphs, http://arxiv.org/abs/math.CO/0612838 
[19] Endre Szemerédi, Regular Partitions of Graphs. In 
J.-C. Bermond, J.-C. Fournier, M. Las Vergnas and D. 
Sotteau (eds.), Problemes en Combinatoire et Theorie 
des Graphes, Proc. Colloque Inter. CNRS, CNRS, 
Paris, 1978, pp.399-401.
[20] Nikhil Bansal and Ryan Williams, Regularity Lemmas 
and Combinatorial Algorithms, Proc. FOCS, Vol.50, 
Atlanta, GA, October, 2009.
[21] Alan Frieze and Ravindran Kannan, The Regularity 
Lemma and Approximation Schemes for Dense 
Problems, Proc. of FOCS, Burlington, VT, October, 
1996, pp.12-20.
[22] Alan Frieze and Ravi Kannan, Quick Approximation 
to Matrices and Applications, Combinatorica, Vol.19, 
No.2, 1999, pp.175-220.
[23] Amin Coja-Oghlan, Colin Cooper and Alan Frieze, 
An Efficient Sparse Regularity Concept, Proc. of 
SODA, New York, January, 2009, pp.207-216.
[24] Nathan Linial and Michael Saks, Low Diameter 
Graph Decompositions, Combinatorica, Vol.13, 
No.4, 1993, pp.441-454.
[25] Joanna Polcyn and Andrzej Ruciński, Short Paths in 
ε-regular Pairs and Small Diameter Decompositions 
of Dense Graphs, Discrete Mathematics, Vol.309, 
No.22, 2009, pp.6375-6381.
[26] Noga Alon, Eldar Fischer, Michael Krivelevich and 
Mario Szegedy, Efficient Testing of Large Graphs, 
Combinatorica, Vol.20, No.4, 2000, pp.451-476.
[27] Noga Alon, Eldar Fischer, Ilan Newman and Asaf 
Shapira, A Combinatorial Characterization of the 
Testable Graph Properties: It’s All About Regularity, 
SIAM Journal on Computing, Vol.39, No.1, 2009, 
pp.143-167.
[28] Chr i s t i an  Borgs ,  J enn i f e r  Chayes ,  Lász ló 
Lovász, Vera T. Sós, Balázs Szegedy and Katalin 
Vesztergombi, Graph Limits and Parameter Testing, 
Proc. of STOC, Seattle, WA, May, 2006, pp.261-270.
[29] Vojtěch Rödl and Mathias Schacht, Property Testing 
in Hypergraphs and the Removal Lemma, Proc. of 
STOC, San Diego, CA, June, 2007, pp.488-495.
[30] Guy E. Blelloch, Virginia Vassilevska and Ryan 
Williams, A New Combinatorial Approach for Sparse 
Graph Problems, LNCS, Vol.5125, 2008, pp.108-120.
[31] András Hajnal, Wolfgang Maass and György Turán, 
On the Communication Complexity of Graph 
Properties, Proc. of STOC, Vol.1, Chicago, IL, May, 
1988, pp.186-191.
[32] Yoshiharu Kohayakaw and Vojtěch Rödl, Regular 
Pairs in Sparse Random Graphs I. In B. Reed and C. 
Linhares-Sales (eds.), Recent Advances in Algorithms 
Combinatorics, CMS Books Math./Ouvrages Math, 
SMC, Springer, New York, 2003, pp.289-351.
[33] Daniela Kühn and Deryk Osthus, Embedding 
Large Subgraphs into Dense Graphs,  Surveys 
in Combinatorics, Cambridge University Press, 
Cambridge, 2009, pp.137-167.
[34] Yoshiharu Kohayakaw, Tomasz Łuczak and Vojtěch 
Rödl, On k4-free Subgraphs of Random Graphs, 
Combinatorica, Vol.17, 1997, pp.173-213.
[35] Stefanie Gerke, Yoshiharu Kohayakawa, Vojtěch Rödl 
and Angelika Steger, Small Subsets Inherit Sparse 
ε-regularity, Journal of Combinatorial Theory, Series 
B, Vol.97, 2007, pp.34-56.
JIT1199.indd   13 2010/11/8   下午 04:23:25
 
	
		

	

				
	
	
	

	
	


  	
  	  
 
  !
	

 
	!
"	!#	!$%	
!!	 
  
	 &	
	 

! 
 %    	
 
	 	

 	

 !   
 !
  
&
'
 ! !
&
 (  
  	

   	  	
	
 &   	
	

!	  	  ") 	$  *!
 	 
 

% 	 !!  	  !  
 
 	
 
 ! 
   

  	


#

#

%
 
			
!! !!	 	
 #
 
 !  
  
&    		!  ! 


%
	
  	    (  

	
 &
'

&


+#

#
&

!%
	&


&	
	


##
#
%,

",$  
 	 & 	 
   



  


%&	
 

   #	 
	
 	   ,
  

 
 	   

 !
			
,	
		&&%	
! 
 	 
&     
 	  	%- 
  !
 
  !
& 


	%
&		. 
   
 		

 
	
	%,&
 

		&
!		


% 	 	   

    

	
 # 	 
	! 
 "	! # 	!$% 

	&!./0(
??????? . 
 ???????? 
.
 
	! ?????????  

/- /-
   /-     #
 


 ?????????  ! 
 ??????????

  	  #&% 	 

 !	
'
!%1		
-&0"-0$
  


  	   	 
 	 
 

 & 	
	   !
 % 	 	
  *!
 
 2345 !#   #  &&

% 
	
	
 !	&&

&

!  
#

 & 	  	  # 

 	   !*
%  	  
 
	! !#   # 	  
	! 


	

!
	 

	

!!%	
!! 	 %
-0"-&0$

%
/
 !( 
 
 

&
'	
	
!	%	
   
    
 

 

	 
 
  	 *  # & 	!
 #    	   

% 
 	 


 
#%	
&	
!!

'&

6!
% 	  	  
 !! 
 
 3
	 
 
    
 
 7 

4	!!%

		
/8%2675!!/)+
	
9*!  
 !#    

!
!

	%
	    
 

 
 
  	
+#
-"+-$	+-

& 
 	   
 
  	% 0

#    	    !
	
#	
	
:%	#
 +-
 
!
  
    
 	  # &  !% ;&
).  	 
 	 	
  *!  

!#  	
	  #  
  
	!
 

% 

  % 26<5 !!  	!   
 	    !*
 
 


	

#	
% / 	! 
   ! 

	 	 
 :
 
 !# 
   	
%	
   



& ,+-%		!

   
 	 		! 

#%
 	
   
 	 /-  
!
	/- %
 3
&	">#&$%
 		
	 
& 	 &
%	# # 	
!

/CG1>1 



>0/# 
#	
	
	
 


  	96  #  

& % 1 &  
 >0/ 

  
/CG1>1 !
 #&&
 
&


H- 
& 	

 >0/ #& 	  & #&& 
  	 
 
H-     & # 
  # 	

	

	

	
%&


 	 
 &  	 
  
 /CG1>1
   	 
 
*/CG1>1 %
	! 
#	#	



(1>+   &  
 &	 % =  
*!
     	 #&& 
  &  

>0/

&&%	&
'

&% 
&
'
!
	 


-0;
 !
# 	  	 		  

*
!& &	&





%

"$>  &       
 &
 	# 


	  #      	  	
" 
 3%7 & 
$   /CG1>1
  
#-0C 
&	#
 @
 	  . # 
 "/ 	
 
  
 
 
 # 
$ 	 & 
  
	#
	&	
# 

=
%	%
"6$# &
 & 

 
  "/CG1>1  $  	




#F9696	

#&& &
 
&	
%
& 	    
  	 
 #&
#&&
 !	
	
	
  H- 
 # -0;   & @



 
 . # 
 "!
  	
$	

@
	# 
&%
	  	  #    # &  
	  
 	 # 
  	 	 
	 
  /CG1>1  

#-0C  
& 	  #  @
 
 
 # 
  #    & 	
 
# 
 "
  	 $% 	
  

#	
"	#$
# #
&	!


	%
"3$&  	   
  /CG1>1
 	



	96
-0;
-0C

-0;
-0C
0	


#
=
3%6"#$
&#
F96
96

)#

">0/$
-0;
-0C

=
3%6"$0
&
-0;
-0C

-0;
-0C
0	


#
-0;
-0C
0	


0	
@
&&>
=
3%6"$0
&&
 4
# 	& 	
# 
&


	 . -0C (   	 . -0; (
	
	<
	 &
 ' &
 &  	 &	 
  	

    +K("?$  	
 . -0; (
%
 
	-0C(&	

	
 	&-0;*!+K("?$
I% 

&	"	
	@
# 
#&
	  & 	 # 
 &
 
 	 .
-0C (   	 . -0; (  	
     &   &   644 
+K("<$+K("?$%
 
	-0C(
 & 	
  
 	    -0; ( 
*!+K("?$
I% 

1* !&&
'
 
!
=
%3%7"$
	
		

!#& !
  
 < " 
 	
 * !$ 
 	
  
+K("$ 

&%	-0;
(
IIIIII	-0C(

IIIIIII% 	 
 NN  & &

!%	
.-0C	
	

# 
  
# 
 
 3%7   	 
##  #&	
# 
%

=
3%7"#$-0;
/CG1>1
  
# 	# #
	!
& <"6

	
* !$
	
+K("6$&	
#% 	 -0; (  
 I6IIII 
	 -0C (  
 I6IIIII% 	
 .
-0C 
	
# @ 	
##  #&	
# 
% 

=
3%7"$ 
&.-0;@
#K 

#  &  & 	 !
 # 
% 
#	& 644"A

	
 $  
 	
   +K("<$ & 	
 &
.-0;+K("?$%	-0C(
	
 	&-0;*!+K("?$
I%
=
 3%7 "$ 	  !
#  
 &   	
%

'(	#	

 	#

 
 -0C  #
  # 
   	
#&@
#   #&
	# 
%
	

	
#
-0C( 
	
-0C 	 # 	
	  #
 
 # 
 

	 &
 &  	 !   !
   #
	
	 
 	 !
  # 	 #&
	#	%=
%3%7!E63	
	
EB@E4E66 EE3%


%()
%(

*  * * * * * *
=
3%7"$  
&
*  * * * *  *

????

????
????
?????????
???????? ????
?????????
?????????
?????????????????
????????????????
????????????????
????????????????
=
3%7"$  
&&
????????????????
%(

%()
%(
0	

# 
=
3%7"#$ 
&#
*  * * * * * *
*   * * *  *
*   * * * * * *
 <
 	  	!! 	 (!
	
	   (  

  (  

	 ! 	 	 !&  	>
! " $
#	
 	

% & 	



  
 	  
 	 	
)
! " $ 
   #
  
! 
	   	 !

  	  
	

!	!&	
!%
,  	 

  (  
 	  (
!  	 

 ( ! 	 

 


 	  
 	 

! 
 	
>
! " $ 
	  
 !&    

	!!
!	%
	 !
	>
!"$
!& 
  
 	 ! !
 !	 
  
 

%  	    

  	
>
! " $ 
 
  	 >
! " $

	

		&

%
& 	  
  

  	 
 
 	
! 	
 
 	 	    #
 
 	
!	  
		 
 	!
  
!* 	  ! 
 	 


! ! 
 
  	  

! 

	>
!"$%
/ 
	!	&(!& 
# 	12
O
+K((&M
CK((&


		&(!M

&"+K(EECK($>
!"$M
&"
EM+K("
$ I≠ M
FF$   *E
M
&"@EMCK("@$ I≠ M@FF$  E@M
&"EM+K("$EECK("$MFF$  'EM

&"'EEI$)
!"$M
&"'P*$	
!!
&	*

&"'EE*'EE$
    	
!
&
		



(M
1O
&"
EM
PE'M
FF$#K("
$E+K("
$M
#K("'F$ECK("'F$M
	
!
#
	
#(M
Q
Q
,	
			
&+K("$EE+K(-"$99 

		
99  
 
  O
    &"
EM+K("
$ I≠ M
FF$  *E
M
    &"@EM+K(-"@$ I≠ M@FF$  E@M
   &"*PE$
       >:	

 
	 

 
& 
	 
M
    1
      >:	 
	 
 

& 
	 
M
  Q
199 

	
&& 
 
     & &	#



 
M
		

 

&
    "+K(-0;$"+K(--0C$
		 

&
    "+K(--0C$"+K(-0;$
		3	 	????? ?
?? ?
? 
&"


&$
>
	
!*
>
!"$M
? O
    
&"

!
!$
>
	
!*
>
!"$M
O
           
!*	(!M

	

(!M
	 K(-0;+K(-
-0CM
Q
  Q
Q
,	
 # 	12 
O
0	
)#M
 =


		 
&	


M
= 	
	

(M
/
(

(M
1!

(!	!&	

! 	
!
!
0*'
		&(
!M
Q
 B
	 !
 
  !
   
#
  
& 
 &  	  % 	
 
& 
 
   
 	 . />(
  #%       

 
 
&& 
%	/>()
#& &

	


M
&	


M
	


,	
5	
   !  
 "   
 !  
"  #   
 !

"# 
 !
"M
	
 


,	 

	!&	
    & 	
  	 !  #
 !
		!#	!
/>()
#%

/!#	  	
 
  
  	  # 	
' 


 
  
   6  
	
# 	 %=  #
&
	!	&#
'(&

#&'(&
	!%=* !.
!	 
     &
 &
 
 '% /&
 !
 &
'
 !   *!
&
!	
	 
#
&
&!		
	
 . !	 
   	 	  
  
!	 	
	  . !	 
 %/ 

 	  #  !	   	
	


	#
!	   	 
 	  
 &	
  
			

%=* !
!! 	  
  !	 
 A !	  
  
 
	 !	 6  !	 3 
  
 
	 !	 7  !	 4 
  
 
	 !	 ?   !	 < 
  
 
	 !	 A    
% / 6

 	  #  !	   	


&	
*!	
#!		


%
= * ! !	 6    
 
	 !	 3
 !	 7    
 
	 !	 4 
!	?    

	 !	 <%,

 	
  	  . 	
  
#!!

 %	&	

!& 

 	#	


!%

'!	 
=
7		!. !
&4I
=
76		!. !
&II

 	
  	 !!  ")$  	

&&  	 
 ! "CCG /HCG 
C>$
 #-6
6%6?
 
  
 	  "		!  
!

$
&&!
 
&  II  BII  & 4I  #
   II
 #
 % 	 
 
 & 	 &
  AII  × 
AII 	 *
  !##
I
  !  
	 64I    

 % 
  	 111 AI6% +/0 ! 

>909C9/0T   
	  	   &
6+#9% 	 ;C( ";   ($ &&
 
	
46#!

#	 %
 

 !
   &% 	 		! 

	 #&
!

#
	
 

 %	
 

	
 &!	& 
 

%	!

 
 	
  # & ! 
 #  




# 	  #&!  
#
?????????????????????????????
?
?????
??????
? ??? ??? ??? ??? ??? ??? ??? ??? ???
????????????????
??
??
??
??
??
??
??
??
?
????
????
???
???
??????????????????????????????
?
?????
??????
??????
? ??? ??? ??? ??? ??? ??? ??? ??? ???
????????????????
??
??
??
??
??
???
??
??
?
????
????
???
???
 

	"			 
25

	
	N/0(0(&+#
/
-V 111    / 

0  

%B%<!!%3?J736II%
265 G	 > 	
   +
 /% #
N(& /
&0(
/

-V  (% &	 /1C 

0&  (  C

# 0 !
 
 "(C06II6$!!%7I74-%7?6II6%
235S		=R
:
+N#0(
 !&  
  #
  	 V 	

  !
   0 ! 
0  

!!%6BAJ3I36II6%
275C%%+ N0( &# !&  
 &
   
 ! &  #
  	
V G	
 	 0& % !!%
6<6J6<46II%
245T%0	%>		%G>%(	N/
&# # 	  & 
 !
 0( !&  

	
V(0  

%A
!!%373B=#%6II%
2?5 C   + N1-0   
 ! 
#
! 	  &  #
  	 V )#
  

 0& % 4 !!% 6A46 J 6A4?
-%6II%
2<5+% +%+ N(&  
 !  & 0(
  
  	 V G	
 	
0&%7!!%66<?J66AI/!
6II3%
2A5C%,%	C%/%+'NC 
>


/
 -V +#
 0 !
 

#  '  


   T	 	! 4 T
/ 
(#
	*!!%43JA/!
6II3%
2B5 0	 1% (
 (
 ,	 N
	 C 

C

:C
G>
"CCG$&
+#
 0 !V 0 ! 0  

 >%
!!%637677H%BB7%
2I5 0	 1% (
 1
'#	 +% >N/	
HC  C
 G >
V  111
	!+#
0 !
 /!!


!!%BIII=#%BBB%
25%%0%T%	+
)N(& 1

& #C
  HC  /  >

(V(%111(+>0%!!%6B<3I!%BBB%
265 C T  T
    	V
(&  0 !
 &  H  / 
>
 ( 
 C 
 > 	
&
 /-V
(
 & 111 
 0& 
0  

"006II3$!!%464?+6II3%
235%  %  % S	  ,% ,	V &
C
 G >
 ( & +#
 / 
-V 111 
 0&  (

0 !
0  

"(0 D6II3$*!!%
A<B7+	6II3% 
275=%%(%=
'C%/

)%+''

+%S'
WC

 (&  &  1	 111 AI6% +/0
(&+
	!01*
W111

0  %%I%?!!%3I3BC%6II3%
245/! /	 /	 +
  ,
W
	!& 	
&(# 
	!AI6%
W111
0  

%I%4!!%
666AH%6II3%
2?5%+
>%N0!
 
	!#&

 V 111    / 

0  

%66?!!%IAIIAA/6II7%
2<5 	
>  0	
  0	  N/
@  
#+/0!&
 
	!	
V (% 111G	
 	0&
!!%3B?7IIH%6II3%
2A5 % R  % 
 NC 	 111 AI6% +/0
!   
  
	! 
  	
XV 
 111 0  

 +'
 !!%
3IJ3<%6II%
2B5 ,
 =% ,''' ,% +		 V/ /	
!& 
	! #
	
V

( & ?	 0 !

  
 /! ,
 
!!%6B7I6II7%
26I5  0%  /% 1!	 
 N	 ; & +

C & +

 
 
 / 	 0C+/
-V111%& 
	%7A-%
!!%6A<36AA<6II6%
265 U,
 % N/!&  !
#
 	    0C+/ 
 /-V
111

0  

%%
7!!%A6BJA7H%6II6%
2665%0%U
%CH%'N
	 
0/>V111
/ 
 0  

 !
 
  +#

 
>+ 
-*)

 
%B%I!!%6I4J64H%6II%
2635 R% %% 0	  ,%+	@ W+/C=/-
/!!	 / /	H   =
* 0
&W (
 & 1110-00	
 
;/!!%47B447!%6III%
2675 ) -
 /8  >	
  &'
 WH 	
>
 0!#

 & -*)
 )+ 0
-W111(0  

!!%7I7<=#%
6II%
98.04.06 更新 
樹德科技大學專任教師出席國際會議發表論文參加情形報告書 
姓 名 謝文雄 服務系所 資工系 職 稱 教授 
論文發表方式或任
務 
□Keynote Speaker    □Invited Speaker   □Session Chairman 
5Oral       □Poster     □Other(請註明) 
出差時間 自 2010 年 08 月 22 日至 2010 年 08 月 26 日 
出差地點 （國家／城市）法國/尼斯 
會議主辦機構名稱 IEEE Computer Society 
國際會議正式名稱 The Fifth International Conference on Systems and Networks Communcications 
發表論文名稱 A Novel RSU-based Message Authentication Scheme for VANET 
參加國際會議概況 
第五屆國際系統與網路通訊研討會(ICSNC 2010, The Fifth International 
Conference on Systems and Networks communications)由 IARIA 學會
(International Academy, Research, and Industry Association)舉辦的年度研討
會，與 ICSEA 2010，SIMUL 2010, CENTRIC 2010, Multi a-Pro 2010 及 Euro 
CAT 2010 合辦七個研討會，55 個 sessions, 三個 Tutorials, 一個 Keynote 
speech, 兩個 invited speeches, 四個 panels, 四個 open Discussions，由 8 月 22
日起至 8 月 26 日止（27 日為 Tour），每天由上午 8:30 到下午 8:00 熱熱鬧
鬧地開了五天，真是盛會。 
本人參加的 ICSNC 2010，有八個主題含 SENET, VANET, RFID, SESYS, 
MHNET, MCSYS, WINET, HSNET, 共十六個 sessions，由八月二十二日的
Tutorial 開場，到八月二十六日下午 5:30 才結束，共有六十八篇論文發表，
論文接受率約 30％，是網路界的年度盛會之一。 
這次會議參與 VANET 的 Track，發表論文以＂A Novel RSU-based Message 
Authentication Scheme for VANET”, 此次 VANET 的論文並不多，只佔一個
session，共四篇文章，這是當初未料到的情形，若參加安全的議題，如 SENET, 
SESYS，則有不少 sessions 在同一 session 中包括台灣、法國、美國，與義大
利四個國家的學者參與，探討車輛網路訊息認證、安全車網、車輛位置私密
性及安全車網雲端的運用等，其他如 RFID、SENET、SESYS 等 Track 應有
不少類似主題足以支持參與者由第一天到最後一天，尤其 Keynote 的 on the 
cloud computing Frontier,更提出雲端運算的未來遠景及需求 panel Discussion
討論的系統及網路佈署的議題，亦將研究方向由純理論探討落實到具體實
施，讓所有研究與具體設備、設置相關聯，總體來看是一個值得參加會議。
此次會議選擇在熱門景點尼斯舉行，不管地點或時間均非常熱鬥，這意味著
參加的人多，且所耗之經費亦非常可觀，由台灣到法國尼斯機票就超過五萬
元，且票難求，更不提昂貴的註冊貴及生活費。因此台灣參與者非常少，這
與在中國或港澳地區動輒上百個台灣學者參加之情形，不可同日而語，補助
出國開會經費逐年縮減，大概是造成此現象的原因之一，此次會議在 Nice St. 
Laurent 區 Ave.du Verdun 的 Novetel 旅館召開，由於所有文件均註明開會地
國科會補助計畫衍生研發成果推廣資料表
日期:2010/11/19
國科會補助計畫
計畫名稱: 用於媒體驗證之脆弱及半脆弱數位浮水印技術研究
計畫主持人: 謝文雄
計畫編號: 96-2628-E-366-005-MY3 學門領域: 影像處理
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
