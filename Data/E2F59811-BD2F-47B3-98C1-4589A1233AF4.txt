with privacy and authenticity guaranteed. Note that 
data privacy means that the data, which may be 
sensitive, cannot be known by the adversary whereas 
data authenticity means that the data received by the 
authority should be authenticated to know which it 
has been maliciously tampered with. 
In this three-year project, our goal is to study 
「Security and Authenticity of Wireless Sensor 
Networks」 to solve many problems that are still not 
solved well in the literature. In view of the fact 
that key distribution will be the foundation of many 
security protocols providing data privacy and 
authenticity. In the first year of this project, we 
study and develop an efficient key distribution 
scheme. Note that there exist numerous key 
distribution schemes in the literature. However, they 
either incur poor efficiency or cannot be easily 
implemented so that it is inappropriate to apply the 
existing schemes over the sensor networks. 
Then, with the consideration of the frequent use of 
aggregation function over the sensor networks for 
energy efficiency, in the second year of this project 
we will study a secure aggregation scheme. Since the 
ordinary aggregation function is vulnerable to 
various attacks, our goal is to develop a new method 
that can guarantee that the aggregated data will not 
be maliciously tampered with within the intermediate 
aggregators. 
Finally, by considering the fact that the captured 
nodes are always able to inject bogus data into the 
network in order to confuse the authority, an en-
route filtering scheme will be developed in the third 
year of this project to guarantee that the data 
received by the authority is indeed authentic. 
英文關鍵詞： Aggregation function、Authenticity、Key 
distribution、Node capture、Security、Wireless sensor 
network。 
 
 2
 
中文摘要 
近年來，無線感測網路的應用逐漸成熟，因此，如何確保傳遞在無線感測網路上的資料的安全性，
成為一個重要且熱門的研究議題。在本計畫中，我們主要著眼於無線感測網路資料傳輸的安全性與真
實性。對於在整個無線感測網路的應用當中，我們希望讓網路管理者能夠得到正確的感測資料，並且
這些資料不被未授權者所得知。要特別強調的是，資料的安全性指的是所傳送的資料能不被敵人所得
知；而資料的真實性則是代表我們能夠確認所收集到的資料是可信的並未被惡意竄改過。 
在這三年計劃中，我們的目標是「無線感測網路上資料安全性與真實性」之研究。有鑒於金鑰分
配機制能夠作為保證資料安全性與真實性的基石，在本計畫的第一年，我們首先研究一套有效率的金
鑰分配機制。換言之，我們將會利用所設計的金鑰分配機制來建造能抵禦其它攻擊的網路安全機制。
雖然，在目前的文獻當中，已經存在著許多現成的金鑰分配機制，但是我們發現這些方法在效能方面
仍未有很好的表現，使得其實施在無線感測網路時有其困難性以及不適應性，更影響到了所有以金鑰
分配機制為基礎的安全機制的效能。因此，我們將研究一套能簡單實作並安全有效率的金鑰分配機制，
來當做所有安全機制的原型。 
接著，在本計畫的第二年，我們考慮到在無線感測網路上資料收集時，為了節能而常使用到聚集
函數，並無法抵抗任何攻擊。有鑑於此，我們將研究一套安全的聚集函數，經由此安全的聚集函數的
運作，資料將不會在傳輸過程中被竄改。 
最後，在本計畫的第三年，考慮到惡意節點可能一開始即產生錯誤的事件數據給整個網路，我們
預計發展一套中途過濾機制，用來保證即便有惡意的感測節點存在於網路當中，它們仍舊無法送出假
資料來矇騙網路的管理者使其做出錯誤的判斷。 
 
關鍵詞: 聚集函數、真實性、金鑰分配機制、節點捕捉、安全性、無線感測網路。 
 
 
 
 
 
 
 
 
 4
報告內容 
前言 
 近幾年來，由於電機、資訊與微機電技術的進步，無線感測網路（Wireless Sensor Network， 
WSN）或稱分散式感測網路（Distributed Sensor Network，DSN）的概念應醞而升，以下我們將以sensor 
networks通稱之。大部分sensor networks上的安全議題均與傳統網際網路上會遇到的安全議題相似。譬
如在傳統網際網路上會注意的秘密性（confidentiality）、確實性（authenticity）、資料完整性（integrity）
等，在sensor networks中依然需要滿足。但是由於sensor networks的特性使然，有很多特殊的攻擊手法
衍伸出來。譬如，因為sensor node便宜而易被攻擊，因而衍申出來的節點捕獲攻擊（node capture 
attack），也就是說，sensor node可以很容易地被adversary所控制，並且原先藏於sensor node裡面的祕密
資訊都會被adversary所輕易存取。在這種node capture attack之下，sensor network需要面對的，與一般
internet不同的攻擊模式，即是所謂的內部攻擊（insider attack）；這是相對於外部攻擊（outsider attack）
的一種攻擊模式。Insider attack是指adversary可以擁有所有與正常網路節點相同的資訊，並且表現的就
像一個正常節點般地來擾亂網路正常該有的功能，或是竊取網路上的資料；而outsider attack則如其名
字所顯示的一般，是adversary如同外人一樣地來進行與insider attack一樣的攻擊。由於sensor node便宜
的特性，相當容易變成node capture attack的目標，進而sensor network需要處理insider attack的攻擊。 
其它的延伸出來的攻擊方法五花八門，有專門擾亂routing efficiency的蟲洞攻擊（wormhole 
attack）、黑洞攻擊（blackhole attack）、女預言家攻擊（sibyl attack）...等等。有可以被視為node capture 
attack的多重複製版本的節點複製攻擊（node replication attack）。有試圖要讓base station接收不到任何
sensor nodes所收集到的資料的選擇性傳送攻擊（selective forwarding attack）。也有乾脆想要誤導base 
station拿到錯誤的資料，使得進而做出錯誤決策的鬼祟攻擊（stealthy attack）以及假資料注入攻擊（false 
data injection attack）。 
基於以上理由，我們在這三年計畫中研究感測網路之安全(security)與隱私(privacy)。 
 
 
研究目的 
 本計劃是有關無線感測網路在安全性方面的研究。在本計劃的第一年，我們將發展至為重要的 key 
distribution scheme。Key distribution scheme 可以說是所有 security protocol 的基礎。如果有一個安全有
效率的 key distribution scheme，則會對接下來設計抵抗其它攻擊的方法上有絕大的用處。但是綜觀現
有的 key distribution schemes，大多數有著不同的缺點。譬如，有些 key distribution schemes 要建立起
 6
來設計能使 sensor network 抵抗 DoS attack，特別是 path-based DoS attack 的機制。這將會使得 data 
forwarding 除了安全性以及可信賴性之外，更能提供了保證性（guaranteed data forwarding）。 
 
文獻探討 
 相關文獻探討請參考計畫書與所發表之論文，在此便不再贅述。 
 
研究方法 
 在第一年，我們研究non-interactive pairwise key establishment for sensor networks，略述如下。As a 
security primitive, key establishment plays the most crucial role in the design of the security mechanisms. 
Unfortunately, the resource limitation of sensor nodes poses a great challenge for designing an efficient and 
effective key establishment scheme for wireless sensor networks (WSNs). In spite of the fact that many 
elegant and clever solutions have been proposed, no practical key establishment scheme has emerged. In this 
project, a ConstrAined Random Perturbation-based pairwise keY establishment (CARPY) scheme and its 
variant, a CARPY+ scheme, for WSNs, are presented. Compared to all existing schemes which satisfy only 
some requirements in so-called sensor-key criteria, including 1) resilience to the adversary’s intervention, 2) 
directed and guaranteed key establishment, 3) resilience to network configurations, 4) efficiency, and 5) 
resilience to dynamic node deployment, the proposed CARPY+ scheme meets all requirements. In particular, 
to the best of our knowledge, CARPY+ is the first noninteractive key establishment scheme with great 
resilience to a large number of node compromises designed for WSNs. We examine the CARPY and 
CARPY+ schemes from both the theoretical and experimental aspects. Our schemes have also been 
practically implemented on the TelosB compatible mote to evaluate the corresponding performance and 
overhead. (成果與詳細研究方法參見附件一、二、三) 
在第二年，我們研究message authentication for sensor networks，略述如下。Sensor networks are 
vulnerable to false data injection attack and path-based denial of service (PDoS) attack. While conventional 
authentication schemes are insufficient for solving these security conflicts, an en-route filtering scheme, 
enabling each forwarding node to check the authenticity of the received message, acts as a defense against 
these two attacks. To construct an efficient en-route filtering scheme, this project first presents a Constrained 
Function-based message Authentication (CFA) scheme, which can be thought of as a hash function directly 
supporting the en-route filtering functionality. Obviously, the crux of the scheme lies on the design of 
guaranteeing each sensor to have en-route filtering capability. Together with the redundancy property of 
sensor networks, which means that an event can be simultaneously observed by multiple sensor nodes, the 
devised CFA scheme is used to construct a CFA-based en-route filtering (CFAEF) scheme. In addition to the 
resilience against false data injection and PDoS attacks, CFAEF is inherently resilient against false 
endorsement-based DoS attack. In contrast to most of the existing methods, which rely on complicated 
security associations among sensor nodes, our design, which directly exploits an en-route filtering hash 
function, appears to be novel. We examine the CFA and CFAEF schemes from both the theoretical and 
numerical aspects to demonstrate their efficiency and effectiveness. Moreover, prototype implementation on 
TelosB mote demonstrates the practicality of our proposed method. (成果與詳細研究方法參見附件四) 
 在第三年，我們研究privacy-preserving query in sensor networks，略述如下。The two-tier architecture 
consisting of a small number of resource-abundant storage nodes in the upper tier and a large number of 
 8
 
在第二年，我們研究 message authentication in sensor networks。Sensor networks 已知 vulnerable to 
false data injection attack and path-based denial of service (PDoS) attack。而現今驗證(authentication)方法不
足以處理這些攻擊，我們提出一新的方法稱為 Constrained Function-based message Authentication 
(CFA)，它可視為一 hash function 並提供 en-route filtering。除了抗 false data injection and PDoS attacks，
我們的方法也能抗 false endorsement-based DoS attack，並證明能抗 node compromise。 
 
第三年 
[1] Chia-Mu Yu, Yao-Tung Tsou, Chun-Shien Lu, and Sy-Yen Kuo, “Practical and Secure Multidimensional 
Queries in Tiered Sensor Networks,’’ IEEE Trans. on Information Forensics and Security, vol. 6, no. 2, pp. 
241-255, 2011. 
[2]Chia-Mu Yu, Chun-Shien Lu, and Sy-Yen Kuo, “A DoS-Resilient En-route Filtering Scheme for Sensor 
Networks,” Proc. The 10th ACM International Symposium on Mobile Ad Hoc Networking and Computing 
(Mobihoc), pp. 343-344, New Orleans, LA, USA, May 18-21, 2009. (poster session) (student travel grant) 
 
在第三年，我們研究 privacy-preserving query in sensor networks。為了資料安全，通常使用加密技
術保護資料，此時，對資料的處理需在加密域執行。我們研究 privacy-preserving multi-dimensional query 
for sensor networks，我們的方法既簡單又有效，能同時達成 data confidentiality、query result authenticity、
與 query result completeness。 
 
除了以上，我們也研究 node replica detection，成果如下 : 
[1]Chia-Mu Yu, Chun-Shien Lu, and Sy-Yen Kuo, “Mobile Sensor Network Resilient Against Node 
Replication Attack,’’ Proc. IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc 
Communications and Networks (SECON), pp. 597-599, 2008. (poster session) 
[2]Chia-Mu Yu, Chun-Shien Lu, and Sy-Yen Kuo, “Efficient and Distributed Detection of Node Replication 
Attacks in Mobile Sensor Networks,’’ IEEE 70th Vehicular Technology Conference: VTC2009-Fall, 
Anchorage, Alaska, 20–23 September 2009. 
[3]Chia-Mu Yu, Chun-Shien Lu, and Sy-Yen Kuo, “CSI: Compressed Sensing-Based Clone Identification in 
Sensor Networks,’’ Proc. 8th IEEE International Workshop on Sensor Networks and Systems for Pervasive 
Computing (in corporation with IEEE Int. Conf .on Pervasive Computing and Communications (PerCom)), 
March 19-23, Lugano, Switzerland, 2012. 
 
 
 
 
 
 
 
 
 10
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本計畫之研究主題為無線感測網路之安全與隱私，非常適用於 resources 
(如 power 等)有限之裝置或 sensors(如 mobile devices 等)。在第一年我們研
究 non-interactive key establishment，更特別的是就我們所知 CARPY+ 是第一
個 non-interactive key establishment scheme，能大幅降低 sensors 間的通訊量，
還能抗大量 node compromises。以此為基礎架構，在第二年我們感測網路的
message authentication。Sensor networks 已知 vulnerable to false data injection 
attack and path-based denial of service (PDoS) attack 。 而 現 今 驗 證
(authentication)方法不足以處理這些攻擊，我們提出一新的方法稱為
Constrained Function-based message Authentication (CFA)，它可視為一 hash 
function 並提供 en-route filtering。除了抗 false data injection and PDoS attacks，
我們的方法也能抗 false endorsement-based DoS attack，並證明能抗 node 
compromise。在第三年我們研究 privacy-preserving query in sensor networks。
為了資料安全，通常使用加密技術保護資料，此時，對資料的處理需在加密
域執行。我們研究 privacy-preserving multi-dimensional query for sensor 
networks，我們的方法既簡單又有效，能同時達成 data confidentiality、query 
result authenticity、與 query result completeness。 
總之在這計畫中，大部分結果已發表，大都發表於 IEEE Trans. on 
Information Forensics and Security (TIFS)這一頂尖與 security 相關的期刊，也有
近 7 篇國際會議論文發表。 
 
 
 
YU et al.: NONINTERACTIVE PAIRWISE KEY ESTABLISHMENT FOR SENSOR NETWORKS 557
A common problem existing in both P-KPD and D-KPD
schemes is that not every pair of nodes can directly establish
their common key. Zhang et al. recently proposed a random
perturbation-based (RPB) scheme [40] to avoid this, while
maintaining resilient security.
Usually, one assumes that, prior to sensor deployment, the
nodes’ locations are not known by the network planner. When
some special deployment models are considered, prior knowl-
edge about the nodes’ locations can be utilized to construct effi-
cient location-aware key predistribution (L-KPD) schemes [8],
[14], [18], [33], [34]. Note that most L-KPD schemes can be
thought of as a special case of P-KPD or D-KPD, where the de-
ployment knowledge is taken into account. In addition, based
on the assumption that there is a short bootstrapping time se-
cure after a sensor network is deployed, Localized Encryption
and Authentication Protocol (LEAP) [39] is proposed to estab-
lish the pairwise keys between each pair of neighboring sensor
nodes.
In fact, many perspectives on the security in WSNs are inves-
tigated. For example, Aysal and Barner [1] consider the sensor
data cryptography in WSNs from the estimation theory point
of view. Exploiting location information, Ren et al. [26] pro-
posed an en-route filtering scheme to achieve data security. In
this paper, we focus only on the design of key establishment
schemes. For the other security issues, please refer to [13], [15],
and [29] for a comprehensive overview.
Problem Statement: With the fact that the communication
channels in WSNs are highly noisy and prone to transmission er-
rors [37], [38] and that over 95% of energy consumption comes
from communication [24] in mind, we can know that although
numerous key establishment schemes are proposed, all of them,
except the TKD schemes [2], [3] (which unfortunately cannot
achieve resilient security), are inefficient and highly energy-
consuming due to the involved communications. Thus, it is de-
sirable, but extremely challenging, to have a key establishment
scheme satisfying both security and energy efficiency.
Evaluation Metrics: To evaluate the key establishment
schemes, five requirements were recently presented in [40].
Nevertheless, we find that they are too weak to be utilized, as the
security and performance of certain key establishment schemes
have been overestimated. Hence, a so-called sensor-key criteria
composed of five new requirements is proposed as follows to
thoroughly evaluate the key establishment schemes applied in
the real world.
1) Resilience to the Adversary’s Intervention (RAI)—The
adversary may launch a wide range of attacks such
as eavesdropping, node compromise, message forgery,
packet dropping, and noise injection, etc., to compromise
the security of a key establishment scheme. On the other
hand, the adversary may only want to hinder the nodes
from establishing keys. Hence, in addition to the resilience
to node capture considered in the literature, it is also nec-
essary to consider the robustness against various attacks
mounted by the adversary (described in Section IV-A).
2) Directed and Guaranteed Key Establishment
(DGKE)—Each pair of sensor nodes should be
able to establish a common key by their own effort
wherever they reside and whenever they need, without
exposing secrets to or obtaining secrets from the third
parties.
3) Resilience to Network Configurations (RNC)—Since the
use of sensor networks is highly application-dependent,
the heterogeneity, mobility, deployment pattern, density
of sensor nodes, and the network size should not affect
the effectiveness and efficiency of the key establishment
schemes. In other words, key establishment schemes are
necessary to be applicable whatever network configuration
is applied.
4) Efficiency (EFF)—Key establishment schemes are re-
quired to be performed efficiently in terms of storage,
computation, and communication overhead. The time con-
sumed for finding the common key is also a nonnegligible
metric for evaluating the efficiency of a key establishment
scheme. For example, when underwater sensor networks
are considered, since the propagation speed of acoustic
signals in water is five orders of magnitude lower than
the radio propagation speed [31], the key establishment
scheme should be carefully designed so that the latency
for establishing keys can be minimized.
5) Resilience to Dynamic Node Deployment (RDND)—The
hardware failure or energy depletion of sensor nodes could
lead to a WSN that cannot achieve full coverage of the
sensing region, or even becomes disconnected. In light of
this, new sensor nodes are necessary to be deployed in the
network. A desirable key establishment scheme should be
applicable under the consideration of on-the-fly addition of
new sensor nodes.
A. Contribution
There are two major contributions in this paper:
1) Two constrained random perturbation-based pairwise
key establishment schemes, CARPY and CARPY+, are
presented. While all the existing schemes only meet a part
of the sensor-key criteria, CARPY+ is the only scheme
satisfying all the requirements in the sensor-key criteria
(Table I). (The detailed comparison will be shown in
Section IV-C.) In particular, CARPY+ is the first noninter-
active key establishment scheme with great resilience to a
large number of node compromises designed for WSNs,
and can thus act as the building block of other security
mechanisms.
2) Detailed theoretical studies with respect to the per-
formance and security of the proposed CARPY and
CARPY+ schemes are provided. In addition, both CARPY
and CARPY+ have also been practically implemented on
the TelosB compatible mote to evaluate the performance
and overhead.
B. Organization
At first, the network and security models used in this paper
are presented in Section II. Subsequently, the proposed CARPY
and CARPY+ schemes will be presented in Section III. Together
with a comprehensive comparison with some known schemes,
the theoretical and experimental results will be described in
Section IV. At last, the conclusion will be made in Section V.
YU et al.: NONINTERACTIVE PAIRWISE KEY ESTABLISHMENT FOR SENSOR NETWORKS 559
Fig. 2. Illustration of the CARPY scheme.
sensor node is directly related to the private matrix . Hence,
after collecting a sufficient number of row vectors of , the ad-
versary is able to construct the private matrix by solving a
system of linear equations since is publicly known. An idea,
similar to the one used in [40], to enhance the security is to break
the direct relation between and by adding certain random
noise1 on to distort Blom’s key. However, if improper random
noise is applied, either additional computation and communica-
tion are needed to extract the common bits of distorted Blom’s
key between two sensor nodes, or the common key cannot be
found anymore. To conquer these drawbacks, we propose to
apply constrained random perturbation (CRP). The constrained
random perturbed Blom’s key, when compared to the original
Blom’s key, will satisfy high signal-to-noise ratio (SNR), i.e., if
the length of Blom’s key is , then only the least bits of
Blom’s key are perturbed after the CRP is added. Thus, the first
bits of Blom’s key are retained, resulting in the guaran-
teed establishment of the common key without the need of addi-
tional overhead. In contrast to the random perturbation [40] that
incurs unnecessary computation and communication overhead,
the way of constructing CRP and the corresponding efficiency
gain substantially differentiate our work and [40]. The main idea
of CARPY is shown in Fig. 2. Obviously, the execution of each
round of the CARPY scheme can generate bits of a pair-
wise key. When the bit-length of desired key is , the
CARPY scheme should be executed rounds to gen-
erate a pairwise key with desired key length. Albeit
rounds of CARPY are required, the overall computation over-
head, which will be analyzed in Section IV-B2, is still affordable
for the current generation sensor nodes.
There are two steps in the CARPY scheme, the off-line step
and the on-line step. In general, the off-line step is performed,
before deployment of sensor nodes, to determine the desired key
length, select appropriate parameters, and preinstall the keying
materials into the sensor nodes. The on-line step is performed
for each pair of sensor nodes required to find the pairwise key
in common after sensor nodes are deployed.
2) Off-Line Step of CARPY: In addition to the parameters
such as the size of the finite field , the security parameter
of Blom’s scheme, and the set of IDs of sensor nodes men-
tioned in the previous sections, some other parameters such as
1The terms random noise and random perturbation will be used interchange-
ably throughout this paper.
Fig. 3. Off-line step of the CARPY scheme.
the number of least bits perturbed by CRP for the Blom’s key,
and the bit-length of desired key should be determined by the
network planner before the off-line step is executed. Let be the
least number of bits necessary to represent the elements in .
Since the execution of each round of the CARPY scheme can
generate bits of a pairwise key, the CARPY scheme should
be executed rounds to obtain a pairwise key
with desired key length .
The algorithm for the off-line step is shown in Fig. 3. Here, we
explain the off-line step of the CARPY scheme from executing
the th round of the CARPY scheme, where . Note that
all the arithmetic operations in the subsequent descriptions are
accomplished in the finite field unless specifically noted. At
first, as in Blom’s scheme, the network planner randomly gener-
ates two matrices and
such that is symmetric and any columns of
are linearly independent. After that, we calculate the matrix
.
Let be the value of which has least bits of its
binary representation set to 0. Similarly, let be the
value of which has least bits of its binary representation
set to 1. For example, and
. Let denote the set of CRPs applied on the row vector
for . When the th round of the CARPY scheme
is performed, each CRP must satisfy the following
constraints:
(2)
(3)
(4)
where , , , , and
is the th element of . Note that a CRP is a -di-
mensional row vector. Equations (2) and (3) ensure that after
YU et al.: NONINTERACTIVE PAIRWISE KEY ESTABLISHMENT FOR SENSOR NETWORKS 561
sensor nodes. A straightforward method for obtaining is to
adopt an exhaustive search. Specifically, given a finite field ,
all the possible -dimensional vectors are examined
in terms of (2)–(4). An exhaustive search can be accomplished
in computational complexity, which is time-con-
suming. Thus, we present two algorithms for constructing ,
which are less time-consuming than the exhaustive search in
most of the cases of CARPY and CARPY+. Our approach takes
advantage of the efficiency of the linear programming, and we
refer readers to [20] for the knowledge of linear programming
and only introduce the terminology required for our use.
A linear program (LP) of variables is composed of a linear
objective function of the form, ,
where are constant numbers, and a number of
linear equality and inequality constraints of . The
so-called linear programming is a technique for optimizing the
objective function subject to the constraints. In other words,
linear programming aims at finding the best assignment of
such that the objective function is optimized while
the constraints are satisfied. For an LP, any solution
satisfying both the objective function and constraints is a
feasible solution. Usually, a feasible solution can be thought of
as a point in . Thus, geometrically, all the feasible solutions
constitute a region, called feasible region, in . It can be
shown that the feasible region must be a convex set if it is
bounded. On the other hand, an integer linear program (ILP)
is an LP with integrality constraints. As for the computational
complexity, LP is shown to be solvable in polynomial time
while ILP turns out to be -hard [12].
TwiLP Algorithm: Recall that our objective is to find more
than two CRPs, , satisfying (2)–(4), for and
. Unfortunately, to our knowledge, other than the
exhaustive search, there is no technique useful for finding the so-
lutions. An observation here is that, though the consideration of
(2)–(4), which constitute the so-called CRP criteria, can provide
all the possible CRPs, in fact, the consideration of a restricted
version of (2)–(4), called weak CRP criteria, is sufficient for our
use in most cases of CARPY and CARPY+. The weak CRP cri-
teria are derived from (2)–(4) without considering the modular
arithmetic as
(5)
(6)
(7)
(8)
where , , , , is the
th element of
(9)
and
(10)
An immediate observation is that the solutions satisfying the
weak CRP criteria are a subset of the solutions satisfying the
CRP criteria. In particular, (5) and (6) are, respectively, the
Fig. 7. TwiLP Algorithm.
same as (2) and (3) except that the modular arithmetic is aban-
doned. Equation (7) should be added to the weak CRP criteria.
Otherwise, if an improper is found, the constructed pair-
wise keys and could be inconsistent between two
nodes and . From an ILP point of view, some CRPs can be
thought of as the set of all the feasible solutions in the feasible
region formed by the linear constraints of (5)–(8). In other
words, finding a CRP amounts to finding a point in the feasible
region. Thus, by introducing an arbitrary objective function,
a CRP can be constructed by finding an optimum solution of
the corresponding ILP. Recall that, since is composed of
several CRPs, the strategy we use here is to discover a CRP one
by one. Once more than two CRPs are found, the construction
of is considered successful. In the following, we explain
the construction of , an element of .
By assuming two objective functions and are oppo-
site each other, we propose an algorithm, called TwiLP, in which
LP-relaxation [28] is used twice to find the two optimum solu-
tions with respect to and in LPs, respectively, and then
performs randomized rounding [27] on the point resulted from
averaging those two optimum solutions to search for a feasible
solution of ILP. TwiLP is shown in Fig. 7 and a more detailed
description is as follows.
By considering two matrices and , together with
as an objective function, we can construct an ILP, ILP ,
as shown in the following:
With a simple calculation, one can obtain the optimum solution
for the LP-relaxation of ILP . Let the column vector
. Considering the integer linear program ILP , one
can also calculate the optimum solution for the LP-relax-
ation of ILP . Then, the average ,
where is a randomly selected integer, is calculated. It should
YU et al.: NONINTERACTIVE PAIRWISE KEY ESTABLISHMENT FOR SENSOR NETWORKS 563
acts as a metric for evaluating the hardness of recovering in
terms of physical attack, the CBC is defined in terms of compu-
tational effort the adversary needs to pay. To break the security
of the CARPY and CARPY+ schemes, the effort one should pay
is the PBC plus CBC. A theorem describing the breaking com-
plexity of compromising the matrix is as follows.
Theorem 1: Let be the set of captured nodes. Let be
the th subgroup of captured nodes, on which the same CRP
is applied, correctly identified by the adversary. In the case of
, the CARPY and CARPY+ schemes are infor-
mation-theoretic perfectly secure. In the case of ,
the CBC for recovering the matrices , where ,
is , if ,
and , otherwise, for both the CARPY and
CARPY+ schemes.
Proof: Blom’s scheme can be regarded as a special case of
CARPY and CARPY+, where the same publicly-known CRPs
are applied on each row of . Thus, in the case of ,
the security of CARPY and CARPY+ directly inherits from that
of Blom’s scheme; it is perfectly secure.
Since the matrices are constructed independently for
each round , the breaking complexity for different
matrices is the same. Recall that holds.
After sensor nodes, , are cap-
tured by the adversary, a system of linear equations is obtained
as follows:
(26)
(27)
where , , and de-
notes the element on the th row and -column of the matrix
transpose of . In the linear system shown in (27),
and are known by the adversary while and
are unknown to the adversary. It can be seen that the total
number of linear equations is and the total number of
unknowns is . Obviously, finding a unique
solution for is impossible.
A strategy possibly adopted by the adversary to find a unique
solution for in the linear system shown in (27) is to reduce
the number of unknowns. Since the elements in are chosen
from the finite field arbitrarily and independently, the number
of unknowns coming from cannot be reduced and is still
. The remaining possibility for the adversary is to se-
lect a group of sensor nodes with
row vectors on which the same CRP is ap-
plied. In this case, the number of unknowns due to CRPs can be
reduced by . Define such a group as an ill-perturbed
group. According to this observation, the adversary may iden-
tify one or more ill-perturbed groups to reduce the number of un-
knowns in the linear system shown in (27) so that a unique solu-
tion for can be determined. The probability that an ill-per-
turbed group is found is , because CRPs are
randomly and independently applied on the matrix . As-
sume that ill-perturbed groups , each of which
TABLE II
RELATION BETWEEN VARIOUS PARAMETERS
consists of nodes, , are identified by the adversary.
To recover , it is necessary to satisfy
since is a symmetric matrix. As a result, the probability for
breaking a matrix is the same as the probability of correctly
identifying these ill-perturbed groups, which can be calculated
as . Since the adversary needs to recover
independently constructed matrices , the probability of
correctly identifying these ill-perturbed groups for those ma-
trices can be calculated as .
As a consequence, the CBC turns to be
(28)
which completes the proof.
Corollary 1: Given that , , and
, the CBC for recovering the matrices is for
both the CARPY and CARPY+ schemes.
Proof: Simply substituting into the result de-
rived from Theorem 1, we have the probability of correctly
identifying the ill-perturbed groups for matrices as follows:
(29)
Therefore, the CBC can be written as .
The intuition behind Theorem 1 and Corollary 1 is that, after
capturing a set of nodes, the adversary must guess
the correct CRPs applying on the row vectors of captured
nodes. Since a successful guess in one attempt is with proba-
bility and there are rounds of CARPY and
CARPY+ needed to be performed, if for all and ,
the required computational effort is
. The security levels under different settings can
be found in Table II. Consider for example that the parameters
, , , and are used. Even with the
unrealistic assumptions that input/output (I/O) operations can
be ignored and each trial can be accomplished within one single
cycle, the time needed for breaking ’s is over years on
a 3-GHz processor.
In addition to recovering the matrices , the adversary may
also try to derive the CRP applied on each captured node by
using the methods described in Section III-D. Given ,
if nodes have been captured, since CRPs should
be simultaneously and correctly guessed, exhaustive search in-
curs computation overhead, which is infeasible for
the adversary. On the other hand, the TwiLP algorithm can be
utilized by the adversary. However, the parameters , , and
, used in TwiLP are only known to the network planner and
YU et al.: NONINTERACTIVE PAIRWISE KEY ESTABLISHMENT FOR SENSOR NETWORKS 565
Probabilistic Key Predistribution: We show how to calculate
the energy consumption for P-KPD, which is composed
of the energy consumption of communications and the
energy consumption of computation, as follows. Basi-
cally, the schemes [5], [8], [9], [11], [17], [18], and [33] are
all within the same framework of P-KPD. Without loss of gen-
erality, we only conduct energy consumption for [11], but the
evaluation results can be naturally extended to [5], [8], [9], [17],
[18], and [33].
Let the key ring size for each node be , let the key pool
size be , and let the key ring of the sensor node be a set
. The probability that two nodes share at least
one common key in their respective key rings can, thus, be com-
puted as . For simplicity, we as-
sume that each node has established either the shared-key or the
path-key with its neighboring nodes after sensor deployment.
Let be the byte-length of Merkle puzzle packet which is of
the form
(30)
where are random words. To have a common key
with the node , the node tries to find their shared-key by
sending the Merkle puzzle packet to . With probability ,
the energy consumption of communications for the shared-key
discovery between and is
. However, after the above communications,
with probability , they find that they do not have the
shared-key so that the path-key establishment is necessary, re-
sulting in additional energy consumption
required for transmitting the path-key.
Thus, the energy consumption of communications for
P-KPD can be estimated as
(31)
The energy consumption of computation for P-KPD can
be estimated as
(32)
because encryptions in and decryptions for finding
the common key in are required in shared-key discovery
while in path-key establishment each pair of consecutive nodes
on the key path performs one decryption and re-encryption. It
should be noted that for simplicity some hidden costs, i.e., the
energy consumption for establishing the shared-key or path-key
between two neighboring nodes, are ignored in our calculation.
Deterministic Key Predistribution: Here, we consider the
two-dimensional (2-D) PIKE scheme proposed in [4]. Note that
the evaluation results can be easily extended to the other deter-
ministic KPD schemes [6], [7], [19]. From the key assignment
of each node, the probability that two nodes share a common
key in the deterministic key establishment schemes can usually
be directly derived. For example,
is derived in the 2-D PIKE scheme. We also assume that each
node has established either the shared-key or the path-key with
its neighboring nodes after sensor deployment. With probability
, nodes and have a shared-key; thus, no communication
is needed. With probability , the path-key establishment
is required to be performed between nodes and . Conse-
quently, the energy consumption
for deterministic KPD can be derived by calculating the energy
consumption of communications as
(33)
and the energy consumption of compu-
tation.
RPB Key Establishment: The RPB scheme [40] is the only
scheme to take advantage of random perturbation to strengthen
security and reduce communication overhead. The energy con-
sumption of the RPB scheme is .
Since executing RPB one time derives a part of the pairwise
key, without loss of generality, we assume that rounds of RPB
need to be performed. In addition, a security parameter needed
in the RPB scheme is also assumed to be for simplicity. Since
the key sharing between each pair of nodes is guaranteed and
proven in [40], the energy consumption of communica-
tions for the RPB scheme can be easily estimated as
(34)
where is the byte-length of a hash. When the node wants
to establish a pairwise key with , the primary energy con-
sumption of computation for RPB scheme can be esti-
mated as for , and
for , where and ,
respectively, denote the energy consumption of accomplishing
the addition and multiplication of two integers, and means
the energy consumption of accomplishing exclusive OR (XOR)
operation between two bit-strings. Here, as in the experiment
conducted in [40], the energy consumed for calculating a hash
is replaced by the energy consumed by a block cipher.
CARPY and CARPY+ Schemes: We calculate the energy
consumptions and for both CARPY
and CARPY+, respectively. can be estimated as
. Here, is calculated
as
(35)
because the respective column vectors of of two nodes and
need to be exchanged. As for , it can be computed
as , where and , respectively,
denote the energy consumption of accomplishing the addition
and multiplication of two integers, as the primary task needed
to be performed by two ends is to calculate an inner product.
Since, in the CARPY+ scheme, a pairwise key can be directly
constructed between any pair of nodes without the need of com-
munication, the energy consumption is zero. As to
the computation needed for the construction of the common key
between two nodes and , the node should first generate
the corresponding column vector , requiring
YU et al.: NONINTERACTIVE PAIRWISE KEY ESTABLISHMENT FOR SENSOR NETWORKS 567
we can know from Fig. 8 that the energy consumption of P-KPD
[11] is about 1000 times greater than that of CARPY+. In partic-
ular, the scalability of CARPY+ is superior to the other schemes
because only the energy consumption of CARPY+ is indepen-
dent of the network size. The effect of packet size can also be ob-
served from Figs. 8 and 9. The energy consumption of D-KPD
[4] is about 23 times greater than that of CARPY+ in a net-
work with bytes while the energy consumption
of D-KPD is about 72 times greater than that of CARPY+ in
a network with bytes. Moreover, the effect of
packet loss rate is clearly revealed in Figs. 9 and 11. The en-
ergy consumption of D-KPD is about 72 times greater than that
of CARPY+ in a network with while the energy
consumption of D-KPD is about 95 times greater than that of
CARPY+ in a network with . Such energy sav-
ings can also attribute to the communication-free property of
CARPY+. More specifically, the higher the packet loss rate, the
larger the transmission errors and the more the retransmissions.
We conclude that the communication-free property of CARPY+
is extremely helpful in reducing communication cost.
C. Comparisons
Here, we emphasize the comparisons among CARPY+ and
other known key establishment schemes from the sensor-key
criteria point of view. The results are shown in Table I and are
described in detail in the following.
RAI: Due to the need of path-key establishment, the P-KPDs,
D-KPDs, L-KPDs, and LEAP are all vulnerable to the node cap-
ture attack. In addition, due to the need of communications, the
adversary can always impede the key establishment between
two nodes in P-KPDs, D-KPDs, RPB, L-KPDs, and LEAP. On
the other hand, RAI of TKDs is also poor because TKDs in-
volve threshold behavior in security aspect. For CARPY+, since
there is no need of communications in key establishment, all the
eavesdropping, node capture, routing layer, and physical attacks
cannot degrade the security between a pair of nodes having not
been compromised. Even better, for the same reason, key es-
tablishment can be guaranteed to be successfully accomplished
whenever the aforementioned attacks occur. This implies the
strongest survivability. In addition, it does not incur DoS attacks
in that key establishment is carried out in a spontaneous way.
Thus, a message claiming the request for establishing keys will
simply be dropped. Hence, the proposed CARPY+ scheme is
considered to be a key establishment scheme satisfying RAI.
DGKE: Due to the storage limitations of each sensor node,
predetermined keys cannot be preloaded into each pair of nodes
if P-KPDs, D-KPDs, and L-KPDs are applied, leading to the
partial connectivity of key sharing. Hence, there always exists
pairs of nodes that do not have shared-keys and require path-key
establishment. For LEAP, a node can establish common keys
with its neighbors only. However, we can know from the de-
scriptions of the proposed CARPY and CARPY+ schemes in
Figs. 4 and 6 that key sharing can be always established between
any two nodes.
RNC: While L-KPDs and LEAP obviously cannot be applied
to mobile networks, the efficiency for establishing key sharing
will be significantly decreased if P-KPDs and D-KPDs are con-
sidered in the mobile networks. This is because the bootstrap-
ping procedure involves considerable communication and com-
putation overheads and cannot be repeated quite often. The RPB
scheme is applicable in a wide range of networks. However,
the advantages come from sacrificing its applicability to het-
erogeneous networks because the IDs of sensor nodes in the
RPB scheme should be artificially assigned, which could be
infeasible in certain devices. For CARPY+, it works irrespec-
tive of the network scale. In addition, key establishment can
be performed independent of deployment knowledge. In fact,
CARPY+ can be carried out with arbitrary network topology be-
cause the pairwise key is calculated by the node itself. Finally,
CARPY+ does not assume the knowledge of hardware; thus, it
can be considered to be hardware independent and is applicable
in heterogeneous networks.
EFF: As for the efficiency of the CARPY+ scheme, it does
not require any message exchange and only involves a constant
number of additions and multiplications. Hence, because of the
communication-free property of the CARPY+ scheme, both the
energy saving and reduction of latency incurred by the key es-
tablishment are very significant and can be kept as minimal.
RDND: In D-KPDs, key sharing between nodes usually re-
lies on some fixed structures, such as the hypercube in [4], the
expander graph in [7], and the combinatorial design in [6] and
[19]. If the construction of the underlying structure does not
consider the nodes to be deployed in the future, on-the-fly ad-
dition of nodes is usually infeasible. A possible solution is to
construct the structure with the consideration of a large number
of nodes, but it also increases the storage overhead. Compared
with D-KPDs, on-the-fly addition of nodes can be supported by
also taking a large number of nodes to be deployed in the future
into account prior to the initial node deployment. Fortunately, ir-
respective of the number of nodes considered, the size of keying
materials necessary to be stored in each node is the same. Ac-
cordingly, by considering the nodes to be deployed in the future
in the construction of and , our proposed CARPY and
CARPY+ schemes are resilient to dynamic node deployment.
Other Advantages: A unique feature possessed by CARPY+
is that it is transparent to the other network services, that is,
CARPY+ can work well in cooperation with the other network
services such as power saving and medium access control
(MAC) mechanisms. For example, radio function of sensor
nodes usually should be turned off to prolong the network
lifetime. However, if the other schemes requiring communica-
tions are used for establishing keys, for the efficiency of key
establishment the nodes should be always in the active mode to
deliver the packets with minimal latency, resulting in the faster
energy depletion of sensor nodes. On the other hand, for the
efficiency of power consumption, the nodes often turn off their
radio, leading to an unstable route between nodes and, there-
fore, larger latency in establishing keys. Fortunately, since the
proposed CARPY+ scheme does not require communications,
it does not need to face such a dilemma. In addition, if the com-
munications are required in establishing keys, MAC protocols
could also be overloaded since the increased communications
imply higher interference. The proposed CARPY+ scheme can
be implemented without this difficulty.
YU et al.: NONINTERACTIVE PAIRWISE KEY ESTABLISHMENT FOR SENSOR NETWORKS 569
Chia-Mu Yu (S’09) is currently working toward the
Ph.D. degree at the Department of Electrical Engi-
neering, National Taiwan University, Taipei, Taiwan.
He has been a research assistant with the Institute
of Information Science, Academia Sinica, Taipei,
Taiwan, since 2004. His research interests include
experimental and theoretical aspects of sensor
network security.
Chun-Shien Lu (M’99) received the Ph.D. degree
in electrical engineering from National Cheng-Kung
University, Tainan, Taiwan, in 1998.
From October 1998 to July 2002, he was with the
Institute of Information Science, Academia Sinica,
Taiwan, as a postdoctoral fellow for his military
service. From August 2002 to June 2006, he was
an assistant research fellow at the same institute.
Since July 2006, he has been an associate research
fellow. His current research interests mainly focus
on various topics (including security and signal
processing) of multimedia, compressive sensing, and sensor network security.
He organized a special session on Multimedia Security in the 2nd and 3rd
IEEE Pacific-Rim Conference on Multimedia, respectively (2001–2002). He
co-organized two special sessions (in the area of media identification and DRM)
in the 5th IEEE International Conference on Multimedia and Expo (ICME),
2004. He is a guest co-editor of the Special Issue on Visual Sensor Network,
EURASIP Journal on Applied Signal Processing, in 2005. He holds two U.S.
patents, three R.O.C. patents, and one Canadian patent in digital watermarking.
Dr. Lu won the Ta-You Wu Memorial Award, National Science Council in
2007 and was a co-recipient of the National Invention and Creation Award in
2004. He is a member of the ACM.
Sy-Yen Kuo received the B.S. degree in electrical
engineering from National Taiwan University, in
1979, the M.S. degree in electrical and computer
engineering from the University of California at
Santa Barbara, in 1982, and the Ph.D. degree in
computer science from the University of Illinois at
Urbana-Champaign, in 1987.
(S’85–M’88–SM’98–F’01) is a Distinguished Pro-
fessor at the Department of Electrical Engineering,
National Taiwan University, Taipei, Taiwan, and was
the Chairman at the same department from 2001 to
2004. He was a Chair Professor and Dean of the College of Electrical and Com-
puter Engineering, National Taiwan University of Science and Technology from
2006 to 2009. He spent his sabbatical years as a Visiting Professor at the Com-
puter Science and Engineering Department, the Chinese University of Hong
Kong from 2004–2005 and as a visiting researcher at AT&T Laboratories-Re-
search, New Jersey, from 1999 to 2000, respectively. He was the Chairman of the
Department of Computer Science and Information Engineering, National Dong
Hwa University, Taiwan from 1995 to 1998, a faculty member in the Depart-
ment of Electrical and Computer Engineering at the University of Arizona from
1988 to 1991, and an engineer at Fairchild Semiconductor and Silvar-Lisco,
both in California, from 1982 to 1984. In 1989, he also worked as a summer
faculty fellow at the Jet Propulsion Laboratory of California Institute of Tech-
nology. His current research interests include dependable systems and networks,
mobile computing, and quantum computing and communications. He has pub-
lished more than 300 papers in journals and conferences, and also holds more
than 10 U.S. and Taiwan patents.
Dr. Kuo received the distinguished research award between 1997 and 2005
consecutively from the National Science Council in Taiwan and is now a Re-
search Fellow there. He was also a recipient of the Best Paper Award in the
1996 International Symposium on Software Reliability Engineering, the Best
Paper Award in the simulation and test category at the 1986 IEEE/ACM Design
Automation Conference (DAC), the National Science Foundation’s Research
Initiation Award in 1989, and the IEEE/ACM Design Automation Scholarship
in 1990 and 1991.
TABLE I
COMPARISONS BETWEEN DIFFERENT KEY ESTABLISHMENT SCHEMES
(IN TERMS OF THE SENSOR-KEY CRITERIA)
RAI DGKE RNC EFF RDND
TKD [1], [2]    
P-KPD [4], [7], [9], [12] 
D-KPD [3], [5]
RPB Scheme [25]  
L-KPD [6], [10] 
LEAP [24] 
CARPY scheme   
CARPY+ scheme     
as the security and performance of certain key establishment
schemes have been overestimated. Hence, a so-called sensor-
key criteria composed of ﬁve new requirements is proposed as
follows to thoroughly evaluate the key establishment schemes
applied in the real world.
1) Resilience to the Adversary’s Intervention (RAI) – In-
stead of compromising the security of a key establishment
scheme, the adversary may only want to hinder the nodes
from establishing keys. Hence, in addition to the resilience to
node capture considered in the literature, it is also necessary
to consider the robustness against various attacks mounted by
the adversary (described in Sec. III-A).
2) Directed and Guaranteed Key Establishment (DGKE)
– Each pair of sensor nodes should be able to establish a
common key by their own effort wherever they reside and
whenever they need, without exposing secrets to or obtaining
secrets from the third parties.
3) Resilience to Network Conﬁgurations (RNC) – Key
establishment schemes are necessary to be applicable whatever
network conﬁguration is applied.
4) Efﬁciency (EFF) – Key establishment schemes are re-
quired to be performed efﬁciently in terms of storage, compu-
tation, and communication overhead.
5) Resilience to Dynamic Node Deployment (RDND) – A
desirable key establishment scheme should be applicable under
the consideration of on-the-ﬂy addition of new sensor nodes.
Contributions. Our major contributions are:
1) Two constrained random perturbation based pairwise key
establishment schemes, CARPY and CARPY+, are presented.
While all the existing schemes only meet a part of the sensor-
key criteria, CARPY+ is the only scheme satisfying all the
requirements in the sensor-key criteria (Table. I). In particular,
CARPY+ is the ﬁrst non-interactive key establishment scheme
with great resilience to a large number of node compromises
designed for WSNs, and thus act as the building block of other
security mechanisms.
2) Detailed theoretical studies with respect to the perfor-
mance and security of the proposed CARPY and CARPY+
schemes are provided. In addition, both CARPY and CARPY+
have also been practically implemented on the TelosB com-
patible mote to evaluate the performance and overhead.
II. THE PROPOSED METHOD
Since the proposed schemes, CARPY and CARPY+, re-
markably generalize and improve Blom’s concept [1], after de-
scribing the system model in Sec. II-A, we will brieﬂy review
Blom’s scheme in Sec. II-B to facilitate the descriptions of
our methods. Afterwards, CARPY and CARPY+ are described
in detail in Sec. II-C and Sec. II-D, respectively. Finally, the
methods for constructing constrained random perturbation will
be described in Sec. II-E.
A. System Model
Network Model. We assume that N low-cost resource-
constrained sensor nodes are deployed over the sensing region
and no prior deployment knowledge about the nodes’ locations
is known by the network planner in advance. There is a data
collection unit, called data sink, placed in the network. We do
not assume the trustworthiness and authenticity of data sink.
Each sensor node is assumed to have a unique ID, which could
be arbitrarily chosen in a general-purpose sensor node or ﬁxed
in a speciﬁc sensing hardware. In addition to static networks,
mobile nodes are also allowed in our methods so that partial
or entire nodes could have mobility. Moreover, we also do
not assume the network topology. In other words, the density,
deployment pattern, and other characteristics of sensor nodes
could be arbitrary.
Security Model. Sensor nodes are assumed to have no
tamper-resistant hardware so that once the sensor node is
captured by the adversary, the secret information stored in the
captured node will be exposed to the adversary. The adversary
can mount attacks immediately after sensor deployment, i.e.,
the secure bootstrapping time [24] does not exist in our model.
The objective of the adversary is to either compromise the
secure communications between sensor nodes which have not
yet been compromised by the adversary or just to hinder
the nodes from establishing keys. To achieve this goal, the
adversary can simultaneously launch several attacks. In this
paper, we assume that four categories of attacks, which are
eavesdropping, node capture, routing layer, and physical layer
attacks, can be mounted by the adversary. They are described
in detail in Sec. III-A.
B. A Review of Blom’s Scheme [1]
Suppose the number of sensor nodes is N . Let Fq =
{0, . . . , q − 1}, q > N , be a ﬁnite ﬁeld. For a matrix G,
we denote the element in the i-th row and j-th column of G
by Gi,j , the i-row of G by Gi,− and the j-th column of G by
G−,j . Assume that a symmetric matrix D ∈ F(λ+1)×(λ+1)q and
a matrix G ∈ F(λ+1)×Nq are randomly generated. Note that the
only requirement for G is that any λ+1 columns of G should
be linearly independent in order to achieve guaranteed security.
Let A = (D ·G)T and K = A·G. It can be easily checked that
K is also a symmetric matrix. Blom’s idea [1] is that for each
node i, the row vector Ai,− and the column vector G−,i are
stored into the node i. Thus, when two nodes i and j would
like to have a common key, they exchange their columns of G
in plaintext and then use their private rows of A to calculate
Algorithm: CARPY-Off-line-Step(q, r, I, λ, L)
Input: q: elements of D and G are selected from Fq
r: the least r bits which will be infected by CRP
I: the set of sensor nodes identities
λ: a security parameter
L: the bit-length of desired key
1 Calculate 
2 for t = 1 to ξ (= L−r )
3 Randomly generate D(t) and G(t), and Calculate A(t)
4 for u = 1 to |I| (= N )
5 Calculate Φ(t)su
6 Randomly select a row vector φ(t)su from Φ
(t)
su
7 Calculate W (t)su,− = A
(t)
su,− + φ
(t)
su
8 Store W (t)su,− and G
(t)
−,su into the sensor node su
Fig. 3. Off-line step of the CARPY scheme.
is performed, each CRP φ(t)su ∈ Φ(t)su must satisfy the following
constraints:
(A(t)su,− + φ
(t)
su ) ·G(t)−,sv ≥ cmin(A(t)su,− ·G(t)−,sv , r) (mod q)
(1)
(A(t)su,− + φ
(t)
su ) ·G(t)−,sv ≤ cmax(A
(t)
su,− ·G
(t)
−,sv , r) (mod q)
(2)
φ(t)su (k) ∈ Z, (3)
where u = v, 1 ≤ u, v ≤ N , 1 ≤ k ≤ (λ + 1), and
φ
(t)
su (k) is the k-th element of φ
(t)
su . Note that a CRP φ
(t)
su is
a (λ + 1)-dimensional row vector. Eqs. (1) and (2) ensure
that after CRP is added to A(t)su,− of the sensor node su, the
most signiﬁcant −r bits of the corresponding Blom’s key are
retained for every other sensor node sv . These two constraints
guarantee the existence of the common part of constrained
random perturbed Blom’s keys without needing computation
or communication overhead resulting from additional checks.
The constraint indicated in Eq. (3) should be satisﬁed because
in CARPY the elements of CRPs are constrained to be
integers. As a whole, every φ(t)su that satisﬁes Eqs. (1)∼(3)
is one of the elements in Φ(t)su .
Following the construction of Φ(t)su , for every su ∈ I, a
CRP φ(t)su is randomly and independently selected from Φ
(t)
su .
Then, the matrix W (t) is constructed by calculating W (t)su,− =
A
(t)
su,− + φ
(t)
su for 1 ≤ t ≤ ξ, 1 ≤ u ≤ N . After the matrix
W (t) is constructed, the row vector W (t)su,− together with the
column vector G(t)−,su are stored into the node su.
3) On-line Step of CARPY: Assume that two sensor nodes,
suˆ and svˆ ∈ I, want to share a pairwise key. When the
t-th round CARPY scheme is executed, they ﬁrst exchange
their columns of G(t), G(t)−,suˆ and G
(t)
−,svˆ . Then, suˆ and svˆ
calculate κ(t)suˆ,svˆ = W
(t)
suˆ,− ·G
(t)
−,svˆ and κ
(t)
svˆ,suˆ = W
(t)
svˆ,− ·G
(t)
−,suˆ ,
respectively. We can see from Eqs. (1)∼(3) that the distortion
of the constructed constrained random perturbed Blom’s keys
between two nodes is guaranteed to be limited within their
least r bits, and, thus, the t-th part of pairwise key between suˆ
and svˆ is X
(t)
suˆ,svˆ = f,r(κ
(t)
suˆ,svˆ ) = f,r(κ
(t)
svˆ,suˆ), where f,r(x)
is the most signiﬁcant − r bits of -bit binary representation
of a number x. Eventually, the pairwise key Xsuˆ,svˆ between
nodes suˆ and svˆ is X
(1)
suˆ,svˆ ||X(2)suˆ,svˆ || · · · ||X(ξ)suˆ,svˆ . The algorithm
for the on-line step of CARPY is depicted in Fig. 4.
Algorithm: CARPY-On-line-Step
Scenario: nodes suˆ and svˆ want to agree a pairwise key
Note: this algorithm is executed by the sensor node svˆ
1 for t = 1 to ξ (=  L−r )
2 Send G(t)−,suˆ to the sensor node svˆ
3 Receive G(t)−,svˆ from the sensor node svˆ
4 Calculate κ(t)suˆ,svˆ = W
(t)
suˆ,− ·G
(t)
−,svˆ
5 Calculate X(t)suˆ,svˆ = f,r(κ
(t)
suˆ,svˆ )
6 Calculate Xsuˆ,svˆ = X
(1)
suˆ,svˆ ||X(2)suˆ,svˆ || · · · ||X(ξ)suˆ,svˆ
Fig. 4. On-line step of the CARPY scheme.
D. Communication-Free CARPY (CARPY+) Scheme
In the CARPY scheme, two sensor nodes communicate with
each other only for exchanging the respective column of G,
which can be known by the adversary. If each column of G can
be generated by each sensor node itself, then communications
will no longer be necessary. Recall that the only requirement
for G is that any λ + 1 columns of G should be linearly
independent. Thus, the Vandermonde matrix is most suitable
for our use because, if ϕ is the primitive element of Fq , then
any λ+1 columns of Vandermonde matrix, which is generated
by only one element ϕ, are linearly independent [14]. Note that
such Vandermonde matrix is of the form that the i-th column
is generated by
[
1 ϕi (ϕi)2 · · · (ϕi)λ ]T , where λ is
a security parameter independent of N . Therefore, communi-
cation overhead can be eliminated if the matrix G of CARPY
is selected as a Vandermonde matrix. For convenience, the
CARPY scheme with G being a Vandermonde matrix is called
CARPY+. The off-line and on-line steps of the CARPY+
scheme are depicted in Fig. 5 and Fig. 6, respectively.
E. Constructing Constrained Random Perturbation
In this section, we deal with the problem of calculating the
set Φ(t)su of CRPs for 1 ≤ t ≤ ξ and 1 ≤ u ≤ N . Note that the
calculation of CRPs is performed only by the network planner
but not sensor nodes. A straightforward method for obtaining
Φ(t)su is to adopt an exhaustive search. Speciﬁcally, given a
ﬁnite ﬁeld Fq , all the qλ+1 possible (λ + 1)-dimensional
vectors are examined in terms of Eqs. (1)∼(3). An exhaustive
search can be accomplished in O(ξ · qλ+1 ·N) computational
complexity, which is time-consuming. Thus, we present an
algorithm, called TwiLP, for constructing φ(t)su , which is less
time-consuming than the exhaustive search in most of the cases
of CARPY and CARPY+. Our approach takes advantage of
establishment scheme, or the impediment of key establishment
between two nodes. The resilience of CARPY and CARPY+
to these four possible attacks is described in Sec. III-A1∼Sec.
III-A4, respectively. In addition to the aforementioned attacks,
Denial of Service (DoS) is a common strategy mounted by the
adversary to attack networks. While DoS attack has no direct
impact on the information leakage of the key establishment
schemes, an ill-designed key establishment scheme easily
incurs DoS attack. The immunity of CARPY and CARPY+ to
DoS attack will be described in Sec. III-A5.
1) Eavesdropping Attack: In our assumption, a global
eavesdropper is involved in the network so that all the trafﬁc
on the network will be immediately known by the adversary.
In the CARPY scheme, the message exchanged between nodes
is only the column vectors of the matrix G, which is assumed
to be publicly known by everyone including the adversary. On
the other hand, there is no message exchanged between nodes
during the key establishment of the CARPY+ scheme. Thus,
the adversary gains nothing about the pairwise key between
each pair of nodes by using eavesdropping attack.
2) Node Capture Attack: The CARPY and CARPY+
schemes can be regarded as a generalization of Blom’s scheme.
In particular, the construction of the matrix W (t) in CARPY
and CARPY+ comes from the elements of the matrix A(t)
of Blom’s scheme, on which the CRPs are applied. Due
to this observation, directly inherited from Blom’s scheme,
the security of both CARPY and CARPY+ can be perfectly
guaranteed before λ + 1 sensor nodes are captured by the
adversary. Therefore, we only consider the case where the
number of captured nodes is larger than λ + 1.
Recall that the security of both CARPY and CARPY+
is completely broken if D(t) is obtained by the adversary.
We will study the breaking complexity of compromising the
matrix D(t) as follows. After CRPs have been applied on A(t)
to construct the matrix W (t), the relation between the matrices
A(t) and D(t) in Blom’s scheme does not exist any more. Here,
a metric, called computational breaking complexity (CBC), for
evaluating the computational difﬁculty of recovering D(t) is
deﬁned. While physical breaking complexity (PBC), mean-
ing the least number of nodes necessary to be captured to
compromise the security, acts as a metric for evaluating the
hardness of recovering D(t) in terms of physical attack, the
CBC is deﬁned in terms of computational effort the adversary
needs to pay. A theorem describing the breaking complexity
of compromising the matrix D(t) is as follows.
Theorem 1. Let Υ be the set of captured nodes. Let Δi be
the i-th subgroup of captured nodes, on which the same CRP
is applied, correctly identiﬁed by the adversary. In the case of
|Υ| ≥ λ+1, the CBC for recovering the matrices D(t), where
1 ≤ t ≤ ξ, is Ω(∑ξj=1
∏ζ
i=1
∏
bˆ∈Δi |Φ
(j)
bˆ
|) if ∑ζη=1(|Δη| −
1) ≥ λ+1, and Ω(∑ξj=1
∏
bˆ∈Υ |Φ(j)bˆ |) otherwise, for both the
CARPY and CARPY+ schemes.
Corollary 1. Given that |Φ(t)su | ≥ ρ, 1 ≤ t ≤ ξ, and 1 ≤ u ≤
N , the CBC for recovering the matrices D(t) is Ω(ξ · ρλ+1)
TABLE II
RELATION BETWEEN VARIOUS PARAMETERS
L q  λ r |Φ(t)su | ξ BC
128 216 − 15 16 32 14 ≥ 2 64 ≥ 236
128 216 − 15 16 64 14 ≥ 2 64 ≥ 270
128 216 − 15 16 128 8 ≥ 2 16 ≥ 2133
128 216 − 15 16 128 14 ≥ 2 64 ≥ 2135
for both the CARPY and CARPY+ schemes.
The intuition behind Theorem 1 and Corollary 1 is that,
after capturing a set Υ ⊂ I of λ + 1 nodes the adversary
must guess the correct CRPs applying on the row vectors
of λ + 1 captured nodes. Since a successful guess in one
attempt is with probability O(1/
∏
b∈Υ |Φ(t)b |) and there are
ξ rounds of CARPY and CARPY+ needed to be performed,
if |Φ(t)su | ≥ ρ for all u and t, the required computational effort
is Ω(
∑ξ
t=1
∏
b∈Υ |Φ(t)b |) = Ω(ξ · ρλ+1). The security levels
under different settings can be found in Table II. Consider for
example that the parameters,  = 16, λ = 128, r = 14, and
ρ = 2 are used. Even with the unrealistic assumptions that I/O
operations can be ignored and each trial can be accomplished
within single one cycle, the time needed for breaking D(t)’s
is over 1023 years on a 3GHz processor.
In addition to recovering the matrices D(t), the adversary
may also try to derive the CRP applied on each captured node
by using the methods described in Sec. II-E. Given |Φ(t)su | ≥ ρ,
if λ+1 nodes have been captured, since λ+1 CRPs should be
simultaneously and correctly guessed, exhaustive search incurs
Ω(ξ · ρλ+1) computation overhead, which is infeasible for the
adversary. On the other hand, TwiLP algorithm can be utilized
by the adversary. However, the parameters, c, d, and ω, used in
TwiLP are only known by the network planner and unknown
by the adversary. The adversary is forced to examine Ω(ξ ·
ρλ+1) possibilities for the captured nodes. Therefore, it is also
inefﬁcient for the adversary to ﬁnd CRPs by using TwiLP.
3) Routing Layer Attack: Routing layer attacks typically
focus on disrupting the routing mechanisms. The adversary
may not gain information about the pairwise key by directly
mounting routing layer attacks. However, routing layer attacks
(such as Sybil [15] and sink hole [11] attacks) could be
used to either hinder the legitimate nodes from achieving
key establishment or even strengthen the effectiveness and
efﬁciency of node capture attack. Accordingly, attention to
the study of the resilience of key establishment schemes to
routing layer attacks is of primary importance.
For CARPY, since two nodes establish their pairwise key
by exchanging their respective column vectors of G, CARPY
is not resilient to routing layer attacks. Nevertheless, when
CARPY+ is exploited, since no communication is required
for establishing the pairwise key, routing layer attacks cannot
disrupt the key establishment procedure. Hence, the resilience
of CARPY+ against routing layer attacks can be guaranteed.
4) Physical Layer Attack: Physical layer attack usually
means jamming attack [21], in which the adversary disrupts
Energy Calculation. We consider the energy consump-
tion of several operations implemented on the TelosB mote.
CC2420 consumes 18.8 mA current for receiving and 17.4
mA for transmission. If the battery voltage and the data rate
are set to 3.6V and 250kbps, respectively, then the energy
for receiving one byte needs 2.1658μJ and the energy for
transmitting one byte needs 2.0045μJ. In our experiments, ea
and em are about 0.2164μJ and 0.2405μJ, respectively. In a
network whose N nodes are evenly and randomly deployed,
the expected hop distance is O(
√
N), i.e., h = O(
√
N). For
P-KPD [9], the parameters are selected to achieve ≥ 0.999 net-
work connectivity. For D-KPD, the 2-D PIKE [3] is adopted.
The parameter setting of RPB is done according to [25]. For
CARPY and CARPY+, the parameters,  = 16, ξ = 20,
and λ = 75, which achieve the same level of security with
RPB, are used. We compare these schemes in two cases2:
Lpacket = 29 and Lpacket = 102. Under the setting of
ploss = 30%, the comparisons of energy consumption for
establishing a key between two nodes among different schemes
are shown in Fig. 7.
   





(Q
HUJ
\F
RQ
VX
PS
WLR
Q
μ-

7RWDOQXPEHURIVHQVRUQRGHV
3í.3'>@
'í.3'>@
53%>@
&$53<
&$53<
3í.3'>@
'í.3'>@
53%>@
&$53<
&$53<
Fig. 7. Energy Consumption for different key establishment schemes (The
number in the parenthesis indicates the payload size).
Due to the fact that CARPY incurs larger packet overhead,
CARPY consumes more energy than D-KPD and RPB. Note
that if the parameters, such as , r, and ξ, are chosen
properly, the overhead can be further reduced. Fortunately, it
can be easily observed that the energy consumption in the
proposed CARPY+ scheme is substantially smaller than all
the known schemes chosen for comparisons. For example,
in a network with 104 nodes, the energy consumption of P-
KPD [9] is about 100 times greater than that of CARPY+. In
particular, the scalability of CARPY+ is superior to the other
schemes because only the energy consumption of CARPY+ is
independent of the network size.
2The default maximum payload size in TinyOS is 29 bytes and the
maximum payload size in IEEE 802.15.4 is 102 bytes.
C. Comparisons
Here, we emphasize the comparisons among CARPY+ and
other known key establishment schemes from the sensor-key
criteria point of view. The results are shown in Table I and
are described in detail in the following.
Resilience to the Adversary’s Intervention (RAI). Due to
the need of path-key establishment, the P-KPDs, D-KPDs, L-
KPDs, and LEAP are all vulnerable to the node capture attack.
In addition, due to the need of communications, the adversary
can always impede the key establishment between two nodes
in P-KPDs, D-KPDs, RPB, L-KPDs, and LEAP. For CARPY+,
since there is no need of communications in key establishment,
all the eavesdropping, node capture, routing layer, and physical
attacks cannot degrade the security between a pair of nodes
having not been compromised. Even better, for the same
reason, key establishment can be guaranteed to be successfully
accomplished whenever the aforementioned attacks occur. This
implies the strongest survivability. In addition, it does not
incur DoS attacks in that key establishment is carried out in
a spontaneous way. Thus, a message claiming the request for
establishing keys will simply be dropped. Hence, the proposed
CARPY+ scheme is considered to be a key establishment
scheme satisfying RAI.
Directed and Guaranteed Key Establishment (DGKE).
Due to the storage limitations of each sensor node, pre-
determined keys cannot be preloaded into each pair of nodes
if P-KPDs, D-KPDs, and L-KPDs are applied, leading to the
partial connectivity of key sharing. Hence, there always exists
pairs of nodes that do not have shared-keys and require path-
key establishment. For LEAP, a node can establish common
keys with its neighbors only. However, we can know from the
descriptions of the proposed CARPY and CARPY+ schemes
in Fig. 4 and Fig. 6 that key sharing can be always established
between any two nodes.
Resilience to Network Conﬁgurations (RNC). While L-
KPDs and LEAP obviously cannot be applied to mobile
networks, the efﬁciency for establishing key sharing will be
signiﬁcantly decreased if P-KPDs and D-KPDs are considered
in the mobile networks. This is because the bootstrapping
procedure involves considerable communication and compu-
tation overheads and can not be repeated quite often. The
RPB scheme is applicable in a wide range of networks.
However, the advantages come from sacriﬁcing its applica-
bility to heterogeneous networks because the IDs of sensor
nodes in the RPB scheme should be artiﬁcially assigned,
which could be infeasible in certain devices. For CARPY+,
it works irrespective of the network scale. In addition, key
establishment can be performed independent of deployment
knowledge. In fact, CARPY+ can be carried out with arbitrary
network topology because the pairwise key is calculated by the
node itself. Finally, CARPY+ does not assume the knowledge
of hardware; thus, it can be considered to be hardware inde-
pendent and is applicable in heterogeneous networks.
Efﬁciency (EFF). As for the efﬁciency of the CARPY+
scheme, it does not require any message exchange and only
Int. J. Sensor Networks, Vol. 9, No. 2, 2011 89 
Copyright © 2011 Inderscience Enterprises Ltd. 
An application-driven attack probability-based 
deterministic pairwise key pre-distribution  
scheme for non-uniformly deployed sensor 
networks 
Chia-Mu Yu 
Department of Electrical Engineering, 
National Taiwan University, 
Taipei 106, Taiwan 
and 
Institute of Information Science,  
Academia Sinica,  
Taipei 115, Taiwan 
Email: r91045@csie.ntu.edu.tw 
Cheng-Chung Li 
Department of Computer Science and Information Engineering,  
National Taiwan University,  
Taipei 106, Taiwan 
Email: r92087@csie.ntu.edu.tw 
Chun-Shien Lu* 
Institute of Information Science,  
Academia Sinica,  
Taipei 115, Taiwan 
Email: lcs@iis.sinica.edu.tw 
*Corresponding author 
Sy-Yen Kuo 
Department of Electrical Engineering, 
National Taiwan University, 
Taipei 106, Taiwan 
Email: sykuo@cc.ee.ntu.edu.tw 
Abstract: Secure communication is a challenging problem in wireless sensor networks. Key  
pre-distribution is commonly used to establish key sharing among sensor nodes. In this paper, we 
investigate an attack probability-based deterministic key pre-distribution method for non-uniform 
sensor deployment aiming mainly at preserving the integrity of the network to ensure the 
functionality of sensor networks. We first design a model for group-based deployment to estimate 
the attack probability of each deployment group. The proposed model further considers the 
motion of the adversaries and the location of the data sink to meet the practical situation. Based 
on this attack model, a deterministic key pre-distribution mechanism for group-based deployment 
is proposed. To evaluate the proposed method, the issues of memory overhead, communication 
overhead, and the fraction of total communication compromised after adversaries launch node 
capture attacks analytically and empirically. Simulation results show that our approach is 
superior than some known methods. 
Keywords: attack probability; key pre-distribution; security; sensor network. 
Reference to this paper should be made as follows: Yu, C-M., Li, C-C., Lu, C-S. and  
Kuo, S-Y. (2011) ‘An application-driven attack probability-based deterministic pairwise key  
pre-distribution scheme for non-uniformly deployed sensor networks’, Int. J. Sensor Networks, 
Vol. 9, No. 2, pp.89–106. 
 
 
 An application-driven attack 91 
1.2 Our contribution 
In this paper, an attack probability-based deterministic key 
pre-distribution method for non-uniform sensor deployment 
is proposed. The major contributions include: 
1 the design of a reasonable model for group-based 
deployment to estimate the attack probability of each 
deployment group 
2 the proposed model is the first to take the location of 
the data sink into consideration to meet the practical 
situation 
3 based on this attack model, we propose a deterministic key 
pre-distribution mechanism for group-based deployment, 
which leads to more precise indication of the number  
of communication influenced by a node capture attack 
launched by the adversary.  
In addition to the use of deployment knowledge and further 
study of attack probability, we also investigate the following 
issues: (a) comparison of memory overhead, local connectivity, 
and global connectivity; (b) the relationship between the size  
of component consisting of data sink and number of captured 
sensors; (c) the relationship between the fraction of 
compromised communication and number of captured sensors; 
and (d) the relationship between the expected communication 
overhead and number of captured sensors. 
The remainder of this paper is organised as follows. In 
Section 2, the system model is described. In Section 3, the 
proposed method, including the attack probability model and 
attack probability-based deterministic key pre-distribution,  
is described. Our analytical and simulation results are, 
respectively, elaborated in Sections 4 and 5. Some related 
works on key distribution methods and security protocols are 
described in Section 6. Finally, conclusions are given in 
Section 7. 
2 System model 
Let the total number of sensor nodes to be deployed be N. 
The sensor nodes are divided into k subgroups, Gi for 
1 i≤ ≤ κ , whose number of sensor nodes are ni, i.e. 
=1
= iiN n
κ∑ . Each subgroup is called a deployment group. 
For each deployment group, we choose a deployment point, 
which is defined as the location where sensor nodes are 
scattered. Different from the deployment point, the resident 
point is defined as the location where a sensor node is 
finally located. In this paper, the probability density 
function for resident points is assumed to follow a two-
dimensional Gaussian distribution, i.e. 
2 2( ) ( )
22
2
1( , ) = ,
2
x x y yi i
iGau x y e
− + −−
σ
πσ  (1) 
where σ is the standard deviation and (xi, yj) is the 
deployment point of Gi. However, it should be noted that 
our proposed method can also be applied to other 
probability density functions such as uniform distribution. 
In this paper, the sensing region is assumed to be 
divided into grids for simplifying analyses. In other words, 
the deployment points are arranged in a two-dimensional 
grid2, as shown in Figure 1, where the deployment point of 
group Gi,j is located at the i-th row and j-th column. 
Figure 1 5×6 deployment points are arranged into a grid and the 
distance between two neighbouring deployment points 
is t. Each black dot is the deployment point (see online 
version for colours) 
 
From the experience of sensor network design, the following 
assumptions can be made with respect to the communication 
pattern obtained for the group-based deployment (Du et al., 
2004): 
1 if two sensor nodes are within the same deployment group, 
then communication between them frequently happens 
2 communication between two sensor nodes that is, 
respectively, located in two horizontally/vertically adjacent 
deployment groups are less frequent than communication 
within the same deployment group 
3 communication happens rarely if two sensor nodes are 
positioned in diagonally adjacent deployment groups 
4 compared with communication between adjacent 
deployment groups, there is almost no communication 
between two deployment groups that are non-adjacent. 
3 Proposed method 
Based on group-based deployment model, Chan et al. (2006) 
further expressed that, for group-based deployment, each 
deployment group is associated with an attack probability, 
which can be exploited to improve the resistance to node 
capture attack. However, the attack probability for each 
deployment group in their paper was predefined to be a 
constant without the possibility of depending on other groups. 
In other words, they assume that the exact attack probabilities 
of sensor nodes in different groups are known a priori. 
Moreover, according to Chan et al. (2006) because each 
group is associated with a different attack probability, the key 
ring size of each group should be different in order to enhance 
 An application-driven attack 93 
neighbouring to the currently monitored region. Therefore, a  
descendent factor α is used to indicate how many tiers of 
neighbouring groups will be also affected. For deployment 
group Gi,j, these α tiers of neighbouring groups are associated 
with the attack influence factors 1 , 2 , ,, ,i j i j i jg b g b g bα… , 
respectively, where 1 20 , , , 1g g gα≤ ≤… . 
For the third factor, since the data sink is most likely to 
be attacked, the attack probability originating from the data 
sink has to be taken into consideration. This is because the 
data sink is the only gateway of forwarding collected data 
from sensor nodes to the authority. The easiest way for 
adversaries to break a WSN is to disconnect the links 
between the data sink and the sensor nodes near the data 
sink, leading to the highest pay-off. Therefore, the attack 
probability of a deployment group containing the data sink 
should, accordingly, be high.3 An illustration is shown in 
Figure 2, where a snapshot of a network with single data 
sink is considered. To break down the networks, in addition 
to directly making the data sink crash, the easiest way is  
to capture the set of sensor nodes 1 2 3{ , , }s s s . If capturing 
these three sensor nodes is not feasible for certain reasons, 
then the secondary choice for the adversary is to capture  
the set of sensor nodes 4 5 6{ , , }s s s . Therefore, a simple 
conclusion is that the attack probability of the sensor nodes 
closer to the data sink should be higher than the attack 
probability of the sensor nodes which are distant from the 
data sink. 
Figure 2 Increment of attack probability for those sensor  
nodes that are near the data sink (see online version  
for colours) 
 
Let DS be a set of sensor nodes, which are data sinks. Let GDS 
be a set of deployment groups containing at least one data 
sink. Given ,i j DSG G∈ , the base coefficient, ,i jb , for data 
sink is assigned, which should be different from the base 
coefficient ,i jb , , = 0i jb  if ,i j DSG G∉  and , 0i jb ≠  if 
,i j DSG G∈ . Furthermore, for the deployment group ,i jG   
 
 
 
containing a data sink, the descendent factor, α , for data  
sink and attack influence factors, 1 , ,{ , , }i j i jg b g bα  … , where 
1 20 , , , 1g g gα≤ ≤  … , for data sink are chosen. 
The overall attack probability of a deployment group 
can be formulated as follows: 
1 The so-called attack coefficient ,i jω , associated with 
,i jG , is a value gained by considering all of the factors 
discussed above. Thus, ,i jω  can be determined as 
, , , , ,
=1( , ) ( , ), , ,
= ( ),i j i j i j i j i j
b b Gi j i j i j
b b g b g b
α
′ ′ ′ ′ρ ρ
ρ ∈ϒ ρ′ ′ ′ ′
ω + + × + ×∑ ∑

   (2) 
where 
, , , ,( , ) = {( , ) : ,| |= | |= }i j i j i j i jG b b G i i or j j′ ′ ′ ′ ′ ′ ′ ′ϒ ρ − ρ − ρ  (3) 
is a set of pairs of the base coefficient ,i jb ′ ′  for ,i jG ′ ′  and 
base coefficient ,i jb ′ ′  for data sink satisfying that ,i jG  
and ,i jG ′ ′  are at a distance from ρ deployment groups. 
From equation (2), it can be seen that the deployment 
containing a data sink possesses higher attack probabilities 
since , 0i jb ≠ . 
2 The normalised attack probability, ,i jp , with respect to 
the deployment group ,i jG , is defined as 
,
,
,
,
= .i ji j
i j
i j
p
′ ′
′ ′
ω
ω∑  (4) 
Figure 1 illustrates a simple example, where 3,4 = 10b , 
2,5 = 1,b  and 5,6 = 5b . If α = 2 and the influence factors are 
1 2{ , } = {0.5,0.1}g g , for each deployment group, the effect of 
the attack will be diffused to its neighbouring deployment 
groups whose locations are within two tiers around it.  
For example, in Figure 1, 3,4G  contributes an attack influence 
factor 3,4 1 = 5b g×  to 2,5G  because 2,5G  is the first-tier neighbour 
of 3,4G . Similarly, 2,5G  contributes 0.5 to 3,4G , 3,4G  contributes 1 
to 5,6G , and 5,6G  contributes 0.5 to 3,4G . Since the distance 
between 2,5G  and 5,6G  is beyond the descendent factor α, they 
do not influence each other. Moreover, from the viewpoint  
of data sink, the only deployment group containing a data sink 
is 5,6G . Thus, 5,6G  also diffuses the attack influence factors to 
its neighbouring deployment groups. For example, if 5,6 = 8b , 
= 2α , and 1 2{ , } = {0.5,0.1}g g  , then 5,6G  contributes 
5,6 2b g×   to 3,4G  because 3,4G  is the second-tier neighbour  
of 5,6G . 
 An application-driven attack 95 
normalised attack probability of ,i jG  and ,i jG ′ ′ . Let 
,( )I i jD p  be the intra-group degree determination function 
used to determine the degree of a node within ,i jG , i.e. 
, ,= ( )i j I i jd D p . In this paper, ,( )I i jD p  is empirically 
designed to be a threshold function. Let 1 2{ , , , }Ωϖ ϖ ϖ…  be 
a set of threshold values and let 1 2 1{ , , , }Ω+π π π…  be a set of 
(Ω + 1) integer values used to represent the degree values. 
The values 1 2 1{ , , , }Ω+π π π…  are given such that, after the 
assignment of keys based on the above setting, sensor nodes 
can resist attacks in the corresponding groups they belong 
to. In practice, these values are designated empirically in 
order to match the memory size of sensor nodes. When 
( )ID ⋅  takes input as ,i jp , it maps ,i jp  into one of (Ω+1) 
values. Formally, ( )ID ⋅  can be represented as: 
1 , 1
2 1 , 2
, ,
1 ,
, if <
, if <
= ( ) =
, if .
i j
i j
i j I i j
i j
p
p
d D p
pΩ+ Ω
π ϖ⎧⎪π ϖ ≤ ϖ⎪⎨⎪⎪π ϖ ≤⎩
# #  (7) 
where 1 2 1Ω+π ≤ π ≤ ≤ π… . Therefore, if , ,i j i jp p ′ ′≤  holds 
then , ,i j i jd d ′ ′≤  holds. 
Based on the group-based deployment model, the level of 
key sharing between two deployment groups, ,i jG  and ,i jG ′ ′ , is 
determined as follows. Let ( , ),( , )ˆ i j i jd ′ ′  denote the needed node 
degree to achieve connection between ,i jG  and ,i jG ′ ′ . The 
value of ( , ),( , )ˆ i j i jd ′ ′  is determined by , ,( , )C i j i jD p p ′ ′ , which  
is the inter-group degree determination function used to 
determines the degree between ,i jG  and ,i jG ′ ′  based on the 
maximum degree between them as: 
1 , , , ,
( , ),( , ) 2 , , , ,
3 , , , ,
max{ , }, if
ˆ = max{ , }, if
max{ , }, if
i j i j i j i j
i j i j i j i j i j i j
i j i j i j i j
d d G G
d d d G G
d d G G
′ ′ ′ ′
′ ′ ′ ′ ′ ′
′ ′ ′ ′
⎧φ ⋅ Τ⎪φ ⋅ ⊥⎨⎪φ ⋅ ∇⎩
 (8) 
where 1 2,φ φ  and 3φ  are within [0,1] and they satisfy  
with 3 2 1φ ≤ φ ≤ φ . Note that ( , ),( , )ˆ i j i jd ′ ′  is equivalent to 
, ,( , )C i j i jD p p ′ ′ . In addition, in equation (8), , ,i j i jG G ′ ′Τ  means 
that ,i jG  and ,i jG ′ ′  are vertically or horizontally adjacent, 
, ,i j i jG G ′ ′⊥  means that ,i jG  and ,i jG ′ ′  are diagonally adjacent, 
and , ,i j i jG G ′ ′∇  means that ,i jG  and ,i jG ′ ′  are non-adjacent. 
Similar to the determination of the intra-group degree 
determination function ,( )I i jD p , the inter-group degree 
determination function , ,( , )C i j i jD p p ′ ′  is determined by a 
heuristic, and the performances from different heuristics used 
will be presented in Section 5.2. Obviously, inter-group degree 
satisfies a symmetric property, i.e. ( , ),( , ) ( , ),( , )1 1 2 2 2 2 1 1
ˆ ˆ=i j i j i j i jd d . 
Therefore, we can derive ( , ),( , ) ( , ),( , )1 1 2 2 1 1 3 3
ˆ ˆ
i j i j i j i jd d≤  if and only 
if 2 1 2 1 3 1 3 1| | | | | | | |i i j j i i j j− + − ≥ − + − . 
The parameters used in equations (7) and (8) will be 
empirically determined via simulations and discussed in 
Section 5.2. 
3.3.3 Shared key discovery phase 
The goal of this phase is to make two sensor nodes become 
connected with an edge in the key graph for finding the 
common key. This can be easily achieved because the key 
graph is constructed deterministically and the edges of key 
graph are pre-assigned by authority. Thus, when the source 
node s wants to communicate with the destination node d, 
the source node s first checks whether it has a key shared 
with the destination node d. If such a shared key exists, s 
and d use it to secure their communication. Otherwise, the 
path key establishment phase described in the following 
must be performed in order to agree on a new key between 
them. 
3.3.4 Path key establishment phase 
In this phase, a path key will be found between the pair of 
sensor nodes that do not share a key within their respective 
key rings. More precisely, if two sensor nodes s and d 
willing to communicate with each other can not find a 
shared key within their respective key rings, they try to find 
a path connecting them, on which each pair of sensor nodes 
has a shared key. Once such a path is found, the two ends s 
and d on this path can negotiate a path key using this secure 
path. Note that two methods can be used to generate the 
path key. The first one is that a new key, ,s dk , is randomly 
generated by one of the two ends on the secure path and 
then sent to the other end. The path key serves as the 
communication key between s and d. The second one is  
that one of two ends on the secure path, for example s, 
selects one of recently unused keys as the common key, 
,s dk , between s and d. 
4 Analytical results 
In this section, we analytically investigate the issues of 
memory overhead, communication overhead, and the fraction 
of total communication compromised after adversaries launch 
node capture attacks for the proposed method. 
4.1 Memory overhead 
Based on equations (7) and (8) defined in the key pre-
distribution phase, the memory overhead of each sensor 
node in ,i jG  is its total degrees of sensor nodes, i.e. 
, , , , ( , ),( , )
, ,
ˆ( ) ( , ) = .I i j C i j i j i j i j i j
i i j j i i j j
D p D p p d d′ ′ ′ ′
′ ′ ′ ′≠ ≠ ≠ ≠
+ +∑ ∑  (9) 
 
 An application-driven attack 97 
sensor node s1 is from ,i jG , s1 resides within the circle  
centred at Z with radius r. Here, Z is defined to be an 
infinitesimal area containing s2 and is located within ,i jG ′ ′ . 
3 1 ,( , | )i jf Z r s G∈  can be represented as: 
2 2( ) ( )
22
3 1 , 2
, 2
1( , | ) = ,
2
x x y yi j
i j Cr s
f Z r s G e dxdy
− + −
−
σ∈ πσ∫  (13) 
where ( , )i jx y  is the deployment point of ,i jG . An 
illustration of equation (13) is shown in Figure 5. 
Figure 5 Schematic expression of equation (13) 
 
Based on the above derivations, the product of functions f2 
[equation (12)] and f3 [equation (13)] denotes the probability 
of 1 2( , )RC s s  at the specified deployment groups and 
locations of deployment points. As a result, 1 2( ( , ))Pr RC s s  
of equation (10) can be calculated through the combination 
of functions f2 and f3 by considering all possible deployment 
groups and locations as: 
1 2 1 ,=0 =0
, ,
2 ,
2 , 2 2 ,
3 1 ,
( ( , )) = ( )
( )
( ( , ) | )
( , | )
X Y
i jx y
G Gi j i j
i j
i j i j
i j
Pr RC s s Pr s G
Pr s G
f dis s Z s G
f Z r s G
∈Ψ ∈Ψ′ ′
′ ′
′ ′ ′ ′
∈
⋅ ∈
⋅ ∈
⋅ ∈
∑ ∑∫ ∫
 (14) 
1 , 2 ,=0 =0
, ,
1 , 2 2 , 3 1 ,
= ( ) ( )
( ( , ) | ) ( , | ) ,
X Y
i j i jx y
G Gi j i j
i j i j i j
Pr s G Pr s G
f dis s Z s G f Z r s G dxdy
′ ′
∈Ψ ∈Ψ′ ′
′ ′ ′ ′
∈ ∈
⋅ ∈ ⋅ ∈
∑ ∑∫ ∫
 (15) 
where Ψ  denotes the set of all deployment groups and 
1 ,( )i jPr s G∈  represents the probability that s1 is from ,i jG . 
In addition, if the average probability of key sharing 
between sensor nodes, denoted as ( , ),( , )
ˆ
i j i jd
n
′ ′ , is considered,  
 
 
then 1 2 1 2( ( , ) ( , ))Pr KS s s RC s s∩  of equation (10) can be 
derived as: 
1 2 1 2
1 , 2 ,=0 =0
, ,
1 , 2 2 , 3 1 ,
( , ),( , )
( ( , ) ( , ))
= ( ) ( )
( ( , ) | ) ( , | )
ˆ
.
X Y
i j i jx y
G Gi j i j
i j i j i j
i j i j
Pr KS s s RC s s
Pr s G Pr s G
f dis s Z s G f Z r s G
d
dxdy
n
′ ′
∈Ψ ∈Ψ′ ′
′ ′ ′ ′
′ ′
∩
∈ ∈
⋅ ∈ ∈
⋅
∑ ∑∫ ∫
 (16) 
The numerical result regarding global connectivity and local 
connectivity will be presented in Section 5.3. 
4.3 Communication overhead 
First, we study the expected communication overhead 
needed for any two distinct sensor nodes, s1 and s2, within 
the same deployment group ,i jG . In this case, we denote X 
as a random variable, which represents the communication 
overhead between s1 and s2, and E[X] as the expected 
communication overhead between any pair of sensor nodes 
in the same deployment group. E[X]can be written as 
1 2 1
[ ] = 1 2 = hhE X p p h p≥⋅ + ⋅ + ⋅∑" , where ph is the 
probability that given a pair of sensor nodes s1 and s2 the 
number of hops required for sending messages from s1 to s2 
is h. To calculate ph, we also need the following 
information. Define , ,= { | , }r rE s s C sΘ Θ∈ ∉Θ  as a set of 
sensor nodes lying within the circles from ,rC Θ  but not 
coming from Θ. Moreover, recursive definitions of ( ),hrC Θ  and 
( )
,
h
rE Θ  for all h’s are defined as 
(1) ( ) ( )
, , , ( 1) ,, , <
= , = \ ( ),h hr r r h rr Er h h
E E E E E ′Θ Θ Θ − Θ
Θ ′
∪  (17) 
and 
(1) ( ) ( )
, , , ( 1) ,, , <
= , = \ ( ),h hr r r h rr Er h h
C C C C C ′Θ Θ Θ − Θ
Θ ′
∪  (18) 
respectively. Note that, if sensor node s1 is located within Θ 
and sensor node s2 is located within the area ( ),
h
rC Θ , then they 
are exactly h hops away from each other. Different from 
( )
,
h
rC Θ , which marks the area where the sensor nodes are h 
hops far away from the sensor nodes within Θ, ( ),hrE Θ  
indicates the set of sensor nodes which are h hops 
neighbours of the sensor nodes in Θ. Note also that 
( ) ( )
, ,= { | }
h h
r rE s s CΘ Θ∈ . 
An illustrative example of the notations ( ),
h
rC Θ  and 
( )
,
h
rE Θ  is 
shown in Figure 6. In this example, four sensor nodes, 
1 2 3, ,s s s , and s4, having the same communication range,  
r, are considered. Given that 1= { }sΘ , (1),rC Θ  is the circle  
 
 
 
 
 An application-driven attack 99 
Furthermore, the probability H2(W) that there exists at 
least one sensor node in ,i jG , which is also the neighbour of 
the sensor nodes in ,i jG ′ ′ , is defined as: 
2 3( ) = 1 ( ).H W H W−  (22) 
Eventually, given two vertically or horizontally adjacent 
deployment groups, the probability that there exists at least 
one bridge between them is: 
21( ) ( ).H W H W⋅  (23) 
An example illustrating the number of bridges between two 
horizontally or vertically adjacent deployment groups is 
shown in Figure 8. It shows that the number of bridges is 
large enough to handle communication between the sensor 
nodes from two deployment groups. 
Figure 8 Relationship between average number of bridges between 
two deployment groups and number of sensors in a 
deployment group. The upper curve shows the number of 
bridges between two horizontally/vertically adjacent 
deployment groups ,i jG  and ,i jG ′ ′  with , ,= = 30i j i jd d ′ ′  
and ( , ),( , )ˆ = 20i j i jd ′ ′ , respectively. The lower curve shows 
the number of bridges between two horizontally/vertically 
adjacent deployment groups ,i jG  and ,i jG ′ ′  with 
, ,= = 30i j i jd d ′ ′  and ( , ),( , )ˆ = 10i j i jd ′ ′ , respectively (see 
online version for colours) 
 
4.4 The impact of the data sink on network integrity 
Certainly, eavesdropping is one common means for 
adversaries to obtain the messages transmitted over WSNs. 
In addition to eavesdropping, in this work we consider that 
adversaries can launch node capture attacks, which can be 
divided into two kinds based on the actions of adversaries. 
The first one is passive node capture, which means that 
after physically capturing a sensor node adversaries can 
only steal the data stored in the sensor node. The second one 
is active node capture, based on which adversaries not only 
steal the data stored in the sensor nodes but also put the 
captured sensor nodes back into the WSNs as agents for 
further collection of messages. 
In our method, for a pair of sensor nodes in WSNs, a 
pairwise key is used. It is widely believed that WSNs with 
pairwise key distribution have perfect resilience against 
node capture (Chan et al., 2003). In other words, the fraction 
of total communication compromised is almost linearly 
proportional to the number of sensor nodes compromised if 
adversaries launch passive node capture attack. However, 
when adversaries launch active node capture attack, the 
captured sensor nodes can be put back into WSNs to listen 
and steal the traffic through the captured sensor nodes. As a 
pair of sensor nodes that want to share a message might be 
connected by a single secure path, the capture of sensor 
nodes over this path also compromises the secure 
communication paths involving these two sensor nodes. 
Hence, as the number of sensor nodes captured increases, 
the fraction of total communication compromised could be 
increased beyond being linearly proportional to the number 
of captured sensor nodes as when active node capture attack 
is encountered. 
An example illustrating the case of key sharing when 
sensor nodes are deployed to form a single deployment 
group is shown in Figure 9. In this example, the number of 
sensor nodes is 10. Provided that sensor nodes 1, 6, 7 and 10 
are captured by adversaries, the secure link, such as the link 
between sensor nodes 8 and 9, remains secure. However, as 
the secure path between, for example, sensor nodes 2 and 8 
is composed of at least one of the captured sensor nodes, the 
communication between nodes 2 and 8 is no longer secure. 
Figure 9 An example of key sharing in a single deployment 
group: (a) a sensor network with 10 sensor nodes; (b) 
blue nodes (i.e. nodes 1, 6, 7 and 10) denote the sensor 
nodes being captured; and (c) after some sensor nodes 
are captured, the network is divided into two parts. 
Both parts work well but they cannot communicate 
with each other. In this case, the size of the component 
containing the data sink (i.e. node 2) is 4 (i.e. nodes 2, 
3, 4 and 5) (see online version for colours) 
 
On the other hand, to query the status of the region controlled 
by the WSN, the data sink is placed at a specified location 
and the data collected by sensor nodes are aggregated to the 
data sink. However, the problem of resistance to attacks 
becomes more delicate when the location of a data sink is 
taken into consideration. Since a node capture attack will 
most likely break a WSN into two parts, this means that these 
two parts cannot communicate with each other; henceforth, 
the network’s integrity is said to be broken. As shown in 
Figure 9, if the data sink is sensor node 2 and the sensor 
nodes 1, 6, 7 and 10 are captured, the remaining network can 
be seen as a network composed of only sensor nodes 2, 3, 4 
and 5 because, even if sensor nodes 8 and 9 are able to 
 An application-driven attack 101 
from Figures 12 and 13 that the results show similar 
tendency. By integrating the above evaluation results, it is 
sufficient to set Ω ≥ 2 according to our simulations. 
Figure 10 Relationships between the size of component containing 
data sink and number of captured sensors under  
the setting of Ω for average memory overhead, 90  
(see online version for colours) 
600 800 1000 1200 1400 1600 1800
0
200
400
600
800
1000
1200
1400
1600
1800
2000
Number of broken nodes
Si
ze
 o
f c
om
po
ne
nt
 th
at
 c
on
ta
in
s 
da
ta
 s
in
k
 
 
DI(pi,j) with Ω=6
DI(pi,j) with Ω=5
DI(pi,j) with Ω=4
DI(pi,j) with Ω=3
DI(pi,j) with Ω=2
DI(pi,j) with Ω=1
 
Figure 11 Relationships between the size of component containing 
data sink and number of captured sensors under  
the setting of Ω for average memory overhead, 125  
(see online version for colours) 
600 800 1000 1200 1400 1600 1800
0
200
400
600
800
1000
1200
1400
1600
1800
2000
Number of broken nodes
Si
ze
 o
f c
om
po
ne
nt
 th
at
 c
on
ta
in
s 
da
ta
 s
in
k
 
 
DI(pi,j) with Ω=6
DI(pi,j) with Ω=5
DI(pi,j) with Ω=4
DI(pi,j) with Ω=3
DI(pi,j) with Ω=2
DI(pi,j) with Ω=1
 
For the inter-group degree determination function, 
, ,( , )C i j i jD p p ′ ′ , it depends on three parameters, 1φ , 2φ , and 
3φ , which are determined according to the relationship 
between ,i jG  and ,i jG ′ ′  [equation (8)]. Based on the 
standard group-based deployment model (Du et al., 2004), it 
is reasonable to assume that 3 = 0φ  for ,i jG  and ,i jG ′ ′  that 
are non-adjacent. Therefore, we only derive the values of 1φ  
and 2φ  under the condition that the average memory 
overhead [see equation (9)] of a sensor node is a constant. 
 
Figure 12 Relationships between the fraction of compromised 
communication and number of captured sensors under 
the setting of Ω for average memory overhead, 90  
(see online version for colours) 
600 800 1000 1200 1400 1600 1800
0.4
0.5
0.6
0.7
0.8
0.9
1
Number of broken nodes
Fr
ac
tio
n 
of
 to
ta
l c
om
m
un
ica
tio
ns
 c
om
pr
om
ise
d
 
 
DI(pi,j) with Ω=6
DI(pi,j) with Ω=5
DI(pi,j) with Ω=4
DI(pi,j) with Ω=3
DI(pi,j) with Ω=2
DI(pi,j) with Ω=1
 
Figure 13 Relationships between the fraction of compromised 
communication and number of captured sensors under 
the setting of Ω for average memory overhead, 125 
(see online version for colours) 
600 800 1000 1200 1400 1600 1800
0.4
0.5
0.6
0.7
0.8
0.9
1
Number of broken nodes
Fr
ac
tio
n 
of
 to
ta
l c
om
m
un
ica
tio
ns
 c
om
pr
om
ise
d
 
 
DI(pi,j) with Ω=6
DI(pi,j) with Ω=5
DI(pi,j) with Ω=4
DI(pi,j) with Ω=3
DI(pi,j) with Ω=2
DI(pi,j) with Ω=1
 
By varying values of 1φ  and 2φ , two metrics will be 
examined to show how 1φ  and 2φ  can be selected. First, we 
examine the relationship between the size of the component 
containing data sink and the number of captured sensors 
under different settings of 1φ  and 2φ , as shown in Figures 
14 and 15. It can be observed from Figures 14 and 15 that 
the differences among the results obtained from different 
settings of 1φ  and 2φ  are insignificant. Second, we also 
examine the relationships between the fraction of 
compromised communication and the number of captured 
sensors under different settings of 1φ  and 2φ , as shown in 
Figures 16 and 17. It is obvious in observation that there is 
no significant difference between the results obtained from  
 
 
 
 An application-driven attack 103 
attack probability only slightly increases. On the other hand, 
the decrease of key sharing intensively affects the local 
connectivity in the deployment group with lower attack 
probability. As a whole, although the local connectivity of our 
method is inferior to the method of Du et al. (2004), the global 
connectivity of our method is similar to that of Du et al. (2004). 
However, it should be noted that the connectedness of the 
network is primarily determined by global connectivity and is 
not determined by local connectivity. 
Table 2 A comprehensive comparison of memory overhead, 
local connectivity, and global connectivity for our 
method 
Memory usage Local connectivity Global connectivity 
50 0.09 0.80 
70 0.13 0.95 
96 0.19 0.98 
120 0.24 0.99 
160 0.32 0.99 
200 0.40 1.00 
As for Chan et al.’s (2006) method, the authors presented an 
idea similar to ours in that deployment groups with different 
attack probabilities should be associated with different 
degrees of connectivity in key sharing. However, they did not 
take both local and global connectivity into consideration. In 
their method, each group does not have its own key pool, 
instead, each node chooses its own key ring from a single but 
big key pool. Under this circumstance, one sensor node may 
share keys with another one that is far from it. Therefore, the 
local and global connectivities in Chan et al. (2006) are very 
poor when the communication range of each sensor node is 
considered. 
5.3.2 Relationship between the size of component 
consisting of data sink and number of  
captured sensors 
After certain sensor nodes are captured, the Kryptograph is 
perhaps divided into many connected components, which 
cannot securely communicate each other. Since the network 
we can control is only the component containing a data sink, 
it will reduce the scale of the network if this situation 
happens. As shown in Figure 18, as the number of captured 
sensor nodes becomes large, the size of the component 
consisting of data sink is gradually reduced. It can be 
observed from Figure 18 that our method is superior to  
Du et al.’s (2004) method, which did not consider the  
attack probabilities of deployment groups and is superior  
to Chan et al.’s (2006) method, which did not consider  
the communication range of each sensor node. Since the 
number of total sensor nodes is 2500, the component 
containing the data sink in our method is still the maximum 
one in the whole network after some sensor nodes are 
captured by adversaries. In Du et al. (2004) and Chan et al. 
(2006), when adversaries capture more than 800 nodes, the 
size of a component containing a data sink is almost equal 
to 1 leading to the network crashing completely. 
Figure 18 After some sensor nodes are captured, the size of the 
component consisting of data sink is decreased. In this 
figure, m denotes the number of keys stored in a sensor 
and m* denotes the average number of keys stored in a 
sensor (see online version for colours) 
600 700 800 900 1000 1100
0
200
400
600
800
1000
1200
1400
1600
1800
2000
Number of broken nodes
Si
ze
 o
f c
om
po
ne
nt
 th
at
 c
on
ta
in
s 
da
ta
 s
in
k
 
 
m*=96, proposed method
m*=120, proposed method
m=96, Chan et al.
m=120, Chan et al.
m=96, Du et al.
m=120, Du et al.
 
5.3.3 Relationship between the fraction of 
compromised communication and  
number of captured sensors 
The relationship between the fraction of communication 
compromised and the number of sensor nodes captured is 
shown in Figure 19. Since the capture of sensor nodes will 
incur the compromise of some other communication links  
in the probabilistic key pre-distribution and will not incur 
the compromise of other communication links in the 
deterministic key pre-distribution, under the situation where 
the number of sensor nodes captured is the same, the 
fraction of communication compromised in deterministic 
key pre-distribution is less than that in the probabilistic key 
pre-distribution. 
Figure 19 Relationship between the number of captured sensor 
nodes and the fraction of compromised communication. 
In this figure, m denotes the number of keys stored in a 
sensor and m* denotes the average number of keys 
stored in a sensor (see online version for colours) 
50 100 150 200 250 300
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Number of broken nodes
Fr
ac
tio
n 
of
 to
ta
l c
om
m
un
ica
tio
ns
 c
om
pr
om
ise
d
 
 
m*=96, proposed method
m*=120, proposed method
m=96, Chan et al.
m=120, Chan et al.
m=96, Du et al.
m=120, Du et al.
 
 An application-driven attack 105 
similar idea of Zhang et al. (2007) but with constrained 
random perturbation, Yu et al. (2010) refined Blom’s (1984) 
method to derive a non-interactive key distribution scheme 
for WSNs. On the other hand, multiple path technique was 
also exploited by Li et al. (2005) and Wacker et al. (2005) to 
enhance the security of key pre-distribution protocols. Conti 
et al. (2007) proposed a method in which a pair of sensor 
nodes can collaboratively negotiate a common key with the 
help of the other sensor nodes. Moreover, when considering 
a heterogeneous sensor network, Traynor et al. (2006) 
analysed the corresponding performance of key distribution 
methods. Zhu et al. (2003) proposed a key management 
protocol in which a family of pseudo-random functions are 
used to authenticate node and derive pairwise keys. Finally, 
a Routing-Driven Elliptic Curve Cryptography Based Key 
Management Scheme for Heterogeneous Sensor Networks 
has been recently introduced by Du et al. (2009). 
7 Conclusions 
In this paper, an attack probability-based deterministic key 
pre-distribution mechanism for secure communication in 
wireless sensor networks has been presented. We first study 
a new model of calculating the attack probability of each 
deployment group. Then, a new deterministic key pre-
distribution mechanism for group-based deployment by 
taking attack probability into consideration is proposed. We 
further investigate several issues, including communication 
overhead, memory overhead, and resistance to node capture 
attack to verify the suitability of the proposed method. The 
key idea is to consider the location of data sink in order to 
help the attack probability determination of a deployment 
group. Simulation comparisons with some known methods 
further demonstrate the superiority of our method. 
Acknowledgements 
This research was supported by NSC 97-2221-E-001-008, 
NSC 98-2221-E-001-004-MY3, and NSC 97-2221-E-002-
216-MY3. 
References 
Akyildiz, I.F., Su, W., Sankarasubramaniam, Y. and Cayirci, E. 
(2002) ‘A survey on sensor networks’, IEEE Communication 
Magazine, Vol. 40, No. 8, pp.102–114. 
Blom, R. (1984) ‘An optimal class of symmetric key generation 
systems’, Proceedings of the Workshop on Advances in 
Cryptology: Theory and Application of Cryptographic 
Techniques, EUROCRYPT, pp.335–338. 
Blundo, C., Santis, A.D., Herzberg, A.C., Kutten, S., Vaccaro, U. and 
Yung, M. (1992) ‘Perfectly-secure key distribution for dynamic 
conferences’, Proceedings of the 12th Annual International 
Cryptology Conference on Advances in Cryptology CRYPTO, 
Springer-Verlag, London, UK, pp.471–486. 
 
Çamtepe, S.A. and Yener, B. (2005) Key Distribution Mechanisms for 
Wireless sensor networks: A Survey, RPI Technical Report 05-07. 
Çamtepe, S.A. and Yener, B. (2007) ‘Combinatorial design of key 
distribution mechanisms for wireless sensor networks’, IEEE/ACM 
Transaction on Networking, Vol. 15, No. 2, pp.346–358. 
Çamtepe, S.A., Yener, B. and Yung, M. (2006, June) ‘Expander graph 
based key distribution mechnisms in wireless sensor networks’, 
Proceedings of the Communications, IEEE ICC’06, Istanbul, 
pp.2262–2267. 
Chan, H. and Perrig, A. (2005) ‘PIKE: Peer intermediaries for key 
establishment in sensor networks’, Proceedings of the 24th 
Annual Joint Conference of the IEEE Computer and 
Communications Societies, IEEE INFOCOM, 13–17 March, 
Vol. 1, pp.524–235. 
Chan, H., Perrig, A. and Song, D. (2003) ‘Random key 
predistribution schemes for sensor networks’, Proceedings of 
the IEEE Symposium on Security and Privacy, 11–14 May, 
pp.197–213. 
Chan, S.P., Poovendran, R. and Sun, M.T. (2006) ‘A key 
management scheme in distributed sensor networks  
using attack probabilities’, Proceedings of the Global 
Telecommunications Conference, 2005, IEEE GLOBECOM’05, 
28 November–2 December 2005, p.5. 
Conti, M., Pietro, R.D. and Mancini, L.V. (2007) ‘ECCE: 
Enhanced cooperative channel establishment for secure pair-
wise communication in wireless sensor networks’, Ad Hoc 
Networks, Vol. 5, No. 1, pp.49–62. 
Delgosha, F. and Fekri, F. (2005) ‘Key pre-distribution in wireless 
sensor networks using multivariate polynomials’, IEEE SECON. 
Du, W., Deng, J., Han, Y.S., Chen, S. and Varshney, P.K. (2004) 
‘A key management scheme for wireless sensor networks 
using deployment knowledge’, Proceedings of the 23rd 
Annual Joint Conference of the IEEE Computer and 
Communications Societies, INFOCOM 2004, 7–11 March. 
Du, W., Deng, J., Han, Y.S. and Varshney, P.K. (2003) ‘A 
pairwise key pre-distribution scheme for wireless sensor 
networks’, Proceedings of the 10th ACM Conferences on 
Computer and Communications Security, ACM CCS, New 
York, USA, pp.42–51. 
Du, X., Guizani, M., Xiao, Y. and Chen, H. (2009) ‘A routing-driven 
elliptic curve cryptography based key management scheme for 
heterogeneous sensor networks’, IEEE Transactions on Wireless 
Communications, Vol. 8, No. 3, pp.1223–1229. 
Eschenauer, L. and Gligor, V. (2002) ‘A key-management scheme 
for distributed sensor networks’, Proceedings of the 9th ACM 
conference on Computer and Communications Security, ACM 
CCS, New York, USA, pp.41–47. 
Galton, A. (2001) Qualitative Spatial Change, Oxford University Press. 
Guan, Y. and Yu, Z. (2005) ‘A key pre-distribution scheme using 
deployment knowledge for wireless sensor networks’, 
Proceedings of the 4th International Symposium on Information 
Processing in Sensor Networks, IPSN, 15 April, pp.261–268. 
Huang, D. and Medhi, D. (2007) ‘Secure pairwise key 
establishment in large-scale sensor networks: an area 
partitioning and multigroup key predistribution approach’, 
ACM Transaction on Sensor Networks, Vol. 3, No. 3. 
Huang, D., Mehta, M., Medhi, D. and Harn, L. (2004) ‘Location-
aware key management scheme for wireless sensor networks’, 
Proceedings of the 2nd ACM Workshop on Security of  
Ad hoc and Sensor Networks, ACM SASN, New York, USA, 
pp.29–42. 
 
IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 6, NO. 2, JUNE 2011 407
Constrained Function-Based Message Authentication
for Sensor Networks
Chia-Mu Yu, Student Member, IEEE, Yao-Tung Tsou, Chun-Shien Lu, Member, IEEE, and
Sy-Yen Kuo, Fellow, IEEE
Abstract—Sensor networks are vulnerable to false data injection
attack and path-based denial of service (PDoS) attack. While con-
ventional authentication schemes are insufficient for solving these
security conflicts, an en-route filtering scheme, enabling each for-
warding node to check the authenticity of the received message,
acts as a defense against these two attacks. To construct an efficient
en-route filtering scheme, this paper first presents a Constrained
Function-based message Authentication (CFA) scheme, which can
be thought of as a hash function directly supporting the en-route
filtering functionality. Obviously, the crux of the scheme lies on the
design of guaranteeing each sensor to have en-route filtering capa-
bility. Together with the redundancy property of sensor networks,
whichmeans that an event can be simultaneously observed bymul-
tiple sensor nodes, the devised CFA scheme is used to construct a
CFA-based en-route filtering (CFAEF) scheme. In addition to the
resilience against false data injection and PDoS attacks, CFAEF
is inherently resilient against false endorsement-based DoS attack.
In contrast to most of the existing methods, which rely on compli-
cated security associations among sensor nodes, our design, which
directly exploits an en-route filtering hash function, appears to be
novel. We examine the CFA and CFAEF schemes from both the
theoretical and numerical aspects to demonstrate their efficiency
and effectiveness. Moreover, prototype implementation on TelosB
mote demonstrates the practicality of our proposed method.
Index Terms—Authentication, en-route filtering, security, sensor
networks.
I. INTRODUCTION
A WIRELESS sensor network (WSN) is composed of alarge number of sensor nodes with limited resources.
Since WSNs can be deployed in an unattended or hostile
Manuscript received February 22, 2010; revised November 17, 2010; ac-
cepted December 29, 2010. Date of publication January 13, 2011; date of current
version May 18, 2011. This paper was published, in part, in the Proceedings
of the IEEE Wireless Communications and Networking Conference (WCNC),
2009 and the Proceedings of The ACM International Symposium on Mobile Ad
Hoc Networking and Computing (MobiHoc), 2009. The work of C.-M. Yu and
C.-S. Lu were supported by NSC 97-2221-E-001-008 and NSC 98-2221-E-001-
004-MY3. The work of S.-Y. Kuo was supported by NSC 96-2628-E-002-138-
MY3. This work was supported by the National Science Council, Taiwan, under
Grant NSC 97-2221-E-002-216-MY3 and by the Excellent Research Projects of
National Taiwan University under the Center for Quantum Science and Engi-
neering (97R0066-65), and Quantum Computing, Quantum Information/Com-
munication (97R0066-67). The associate editor coordinating the review of this
manuscript and approving it for publication was Prof. Robert H. Deng.
C.-M. Yu and Y.-T. Tsou are with the Department of Electrical Engineering,
National Taiwan University, Taipei 106, Taiwan, and also with the Institute of
Information Science, Academia Sinica, Taipei, Taiwan (e-mail: r91045@csie.
ntu.edu.tw; yaodong@iis.sinica.edu.tw).
C.-S. Lu is with the Institute of Information Science, Academia Sinica, Taipei
115, Taiwan (e-mail: lcs@iis.sinica.edu.tw).
S.-Y. Kuo is with the Department of Electrical Engineering, National Taiwan
University, Taipei 106, Taiwan (e-mail: sykuo@cc.ee.ntu.edu.tw).
Color versions of one or more of the figures in this paper are available online
at http://ieeexplore.ieee.org.
Digital Object Identifier 10.1109/TIFS.2011.2106120
environment, the design of an efficient authentication scheme
is of great importance to the data authenticity and integrity in
WSNs. In this respect, many authentication schemes have been
proposed. The most straightforward way to guarantee data au-
thenticity is to use conventional public-key cryptography-based
digital signature techniques. Although the use of public-key
cryptography on WSNs has been demonstrated in [30] and [33]
to be feasible, the computation overhead is still rather high for
resource-constrained devices.
Authentication Problem: Sensor networks are vulnerable to
false data injection attack [46], by which the adversary injects
false data, attempting to either deceive the base station (BS, or
data sink), and path-based denial of service (PDoS) attack [13],
by which the adversary sends bogus messages to randomly se-
lected nodes so as to waste the energy of forwarding nodes.1
Several so-called en-route filtering schemes have been proposed
to quickly discover and remove the bogus event report injected
by the adversary. Here, “en-route filtering” means that not only
the destination node but also the intermediate nodes can check
the authenticity of the message in order to reduce the number of
hops the bogus message travels and, thereby, conserve energy.
Hence, it is especially useful in mitigating false data injection
attack and PDoS attack [13], because the falsified messages will
be filtered out as soon as possible.
Related Work: SEF [49] is the first en-route filtering scheme
found in the literature that exploits probabilistic key sharing
over a partitioned key pool. Due to its design strategy, however,
only a few intermediate nodes between the source-destination
node pair have the ability to check the validity of forwarding
messages, leading to low filtering capability. IHA [54], which
verifies the transmitted packets in a deterministic hop-by-hop
fashion, has also been proposed to authenticate the event report.
It, however, requires complicated key sharing among neigh-
boring nodes and could be vulnerable to node compromises if
node compromises are mounted immediately after sensor de-
ployment. Based on the similar idea used in SEF and IHA, sev-
eral other en-route filtering schemes are proposed. With the so-
phisticated use of one-way hash chains in clustered sensor net-
works, DEF [43] has improved filtering power over SEF [49].
Using the proposed multiple-axis technique, GREF [45] is de-
signed to support en-route filtering in the networks with mul-
tiple data sinks. LBRS [50], LTE [52], and LEDS [35] take
advantage of location information to enhance the resilience to
node compromises. CCEF [44], STEF [22], and KAEF [51]
are presented to authenticate the transmitted packets only in
1The terms “forwarding node” and “intermediate node” are used interchange-
ably in this paper.
1556-6013/$26.00 © 2011 IEEE
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 409
Our Contributions: Our contributions are as follows:
1) A CFA scheme forWSNs is proposed. CFA can be thought
of as a hash function directly supporting en-route filtering
functionality, and can act as a building block for other se-
curity mechanisms.
2) A CFAEF scheme that can simultaneously defend against
false data injection, PDoS, and FEDoS attacks is proposed.
Particularly, compared with the existing methods, which
either have low filtering capability or necessitate some un-
realistic assumptions, our CFAEF scheme can be applied
to arbitrary networks without further assumptions.
3) The efficiency of CFA and CFAEF schemes is studied in
both theoretical and numerical aspects. Furthermore, pro-
totype on TelosB mote demonstrate the practicality of our
proposed method.
II. SYSTEM MODEL
Network Model: We assume a WSN composed of re-
source-limited sensor nodes with IDs, . The unique ID
for each node can be either arbitrarily assigned in the sensor
platform, such as telosB, or fixed in a specific sensing hardware
when manufactured, like the MAC address on current network
interface cards (NICs). Although one or multiple base stations
(or data sinks) are involved in data collection in a WSN, the
efficiency of our proposed schemes does not rely on their
trustworthiness and authenticity. In addition, arbitrary network
topology is allowed in our method. Some or all of the sensor
nodes can have mobility. The network planner, prior to sensor
deployment, also cannot gain any deployment knowledge
pertaining to sensors’ locations.
Security Model: The objectives of the adversary are to de-
ceive the BS into accepting the falsified event report and to
deplete sensor nodes’ energy by launching PDoS attack and
FEDoS attack. In this paper, sensor nodes are assumed to not
be equipped with tamper-resistant hardware. Thus, all the infor-
mation is exposed and can be utilized by the adversary as long
as a node is captured. We also assume that the attacks such as
node compromises can be mounted by the adversary immedi-
ately after sensor deployment, i.e., the proposed schemes cannot
rely on the secure bootstrapping time used in [35] and [53]. In
particular, four specific attacks are considered in this paper:
1) Eavesdropping attack—The adversary continuously
eavesdrops on the communication of the whole network,
attempting to enhance its capability to send the false
report without being detected. If needed, the adversary
may receive a message from one node and then resend a
modified message to another node.
2) Node capture attack—The adversary eavesdrops on the
communication of the whole network and compromises
certain sensor nodes. Taking advantage of the overheard
information and the information gained from the com-
promised sensor nodes, the adversary attempts to recover
the coefficients of the polynomial (described
later) used in the en-route filtering.
3) Reflection attack [43]—Exploiting the techniques bor-
rowed from error correction codes, the adversary attempts
to recover the coefficients of the polynomial
TABLE I
NOTATION TABLE
used in the en-route filtering. This attack is similar to
the node capture attack and is specific to our proposed
method.
4) Deperutrbation attack [2]—Exploiting certain algebraic
operations, the adversary attempts to recover the coef-
ficients of the polynomial (described later)
used in the en-route filtering. This attack is similar to
the node capture attack and is specific to our proposed
method.
If required, any pair of sensor nodes can establish their shared
key2 in a noninteractive fashion [46]. Although sensor networks
are known to be vulnerable to many attacks such as wormhole
attack, selective forwarding attack, etc., we refer to the existing
rich literature [4], [19], [25], [42] for these issues and the de-
fense against these attacks is beyond the scope of this paper.
III. CONSTRAINED FUNCTION-BASED AUTHENTICATION
(CFA) SCHEME
Since the proposed CFA scheme is constructed by making
use of the pairwise key generated by the CARPY+ scheme [46]
for secure communication, we first briefly review CARPY+ in
Section III-A to make this paper self-contained. Then, the pro-
posed CFA scheme will be presented in the remaining subsec-
tions. In this paper, nodes , , and are denoted as the source
node, destination node, and intermediate node, respectively. In
addition, is used to represent the pairwise key be-
tween the nodes and . The notations frequently used in the
paper are summarized in Table I.
2Here, the key establishment scheme in [46], instead of the ones in [7], [10],
[11], [15], [26], and [31], is chosen to be used in our proposed method because
the latter are interactive, which means that two nodes are required to commu-
nicate with each other once they would like to establish their common key. In
fact, when the mobile sink with localization capability is available, the other
key establishment schemes can also be used because, with the aid of the mobile
sink, each node can only share keys with its upstream and downstream nodes,
as in [35] and [50]. For ease of explanation, we omit the details in this case.
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 411
Fig. 1. Off-line step of CFA.
from , , and may be time- and energy-consuming.
It, however, could be acceptable because such construction
is performed only by the network planner, instead of sensor
nodes. If the time required for constructing
and is still an issue that cannot be ignored,
an efficient method for constructing the polynomials in a
restricted version of will be later discussed in Section III-E.
The off-line procedure of CFA is described in Fig. 1.
D. On-Line Step of CFA Scheme
After sensor deployment, the sensor node may work as a
source node, intermediate node, or destination node depending
on whether the message is to be sent or verified. In the fol-
lowing, we describe the operations one should perform when
the node acts as different roles. It should be noted that the pair-
wise key , used here, is constructed by applying
the CARPY+ scheme [46] on nodes and , respectively.
Source Node (Message Transmission): When node wants
to send a message to node , it calculates the message au-
thentication code:
where is randomly picked from the set .
Then, the packet is sent to
possibly through a multihop path. Note that the message
authentication code is only a number here.
Destination Node (Message Verification): After receiving the
packet , the destination node
first calculates the verification number:
according to its own verification polynomial
and then calculates the corresponding verification difference,
:
If is within the range , where is a
security parameter mentioned in Section III-C, then the authen-
ticity and integrity of the packet is successfully verified. Oth-
erwise, the packet is dropped. The principle behind this step
is as follows:
(2)
From the rules of constructing authentication and verifi-
cation polynomials, we know that
, ,
and . Thus, when is genuine, the
verification difference
must be within . In other
words, when the , for some and ,
is randomly generated by the adversary attempting to claim
that is sent from or constructed from ,
the probability that such a falsified MAC successfully passes
the verification is , and, therefore, the probability of
detecting such a falsified MAC is .
Intermediate Node (Message Verification): After re-
ceiving the packet , the
intermediate node first calculates
according to its own verification polynomial
and then calculates the verification difference
. If is within the
range , then the authenticity of the packet
is successfully verified, and the packet will be forwarded
by node . Otherwise, the packet is dropped. The principle
behind this step is as follows. When a genuine packet is
received, we can obtain:
(3)
By the construction of , we know:
(4)
In addition, from the rules of constructing authentication and
verification polynomials, we know that
, ,
, and therefore
.
Hence, the verification difference must be within
.
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 413
Fig. 3. -construction algorithm.
After that, the polynomials used in CFA are sampled from the
constructed subset of . Assume that
, and . The
property useful in constructing a polynomial sat-
isfying the constraints in will be shown as follows.
Assume that ,
, . The polynomial can be
rewritten as:
(9)
With the representation in (9), the term
can be written as:
(10)
By taking the constraint
in into consideration, we have
(11)
With and being the lower bound and upper bound
of , respectively, (11) can be
rewritten as: We can examine if a given set of ’s,
, constitutes a polynomial of by
exploiting the definitions in (8) and considering the extremes
in (12)
(12)
shown in (13)
(13)
Define ,
which is only different from in the part
of coefficients. From (13), we can observe that the
possible range of will
be contained in , i.e.,
and
, if ,
, , , . With this monotone property, our algorithm for
randomly sampling a polynomial from a random subset of
, whose pseudocode is shown in Fig. 3, can be described as
follows.
As in denotes the coefficient of
for specified , we use to denote an
instance of ’s, . At the beginning of -Con-
struction algorithm shown in Fig. 3, we randomly choose
and determine if the chosen satisfies (13). If fails to
satisfy (13), is checked recursively until (13) is
satisfied (Lines 1 3). Here, consists of ’s,
where each is an element in . Note that the loop
(Lines 2 3) is guaranteed to terminate within at most
steps because at least the setting of , ,
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 415
scheme, and sends an endorsement of , , back
to . After collecting MACs from the neighboring nodes,5
, first checks whether the value of
, , is within the predetermined range
. Note that the sensor nodes are endorsing
nodes of the event report and the reporting node . If some of
the collected endorsements, , fail to be verified,
drops all ’s and acquires other endorsements from
the neighboring nodes other than . forwards
to only when all of collected endorsements are successfully
verified.
En-Route Filtering Phase: Once receiving the packet
the intermediate node first checks whether the attached
endorsements are generated by distinct nodes. The
packet is dropped if the verification fails. Afterwards, for
each of the endorsements, node checks whether
is within the pre-
determined range . Only if node succeeds in
verifying all the endorsements, is the packet forwarded.
Otherwise, the packet is dropped. The operation performed
by the destination node is similar to that performed by the
intermediate node. The difference is that checks whether
is within the prede-
termined range . Only if succeeds in verifying
all the endorsements, is the event report accepted.
Otherwise, the packet is dropped.
V. PERFORMANCE AND SECURITY EVALUATION
In this section, for CFAEF, in addition to analyzing the
overhead (Section V-A), we study its security (Section V-B)
and compare the energy saving with the other methods
(Section V-C).
A. Overhead Analysis
As to the storage overhead, two trivariate polynomials need
to be stored in each node in CFA, as shown in Fig. 1. Therefore,
in CFAEF, the storage overhead is required due to the use
of authentication and verification polynomials.
For the endorsing node, the computation overhead comes
from the calculation of the message authentication code, which
involves trivariate polynomial evaluation and requires
arithmetic operations [5], [36]. On the other hand, the compu-
tation overhead for the source node, intermediate nodes, and
destination node is the same, which is , because MACs
should be calculated.
5The WSNs in our consideration possess high node density such that -cov-
erage [18], [39], [41] can be achieved.
As to the communication overhead of CFAEF, the source
node has to communicate with the neighboring nodes to obtain
the endorsements. Moreover, the source node has to send
instead of , to the destination node. As a result, the ad-
ditional communication overhead incurred by the use of CFAEF
is , where is the average number of hops between two
arbitrary nodes in a network. The issue of the energy consump-
tion incurred by the use of CFA will be discussed in Section V-C
in more details.
B. Security
First, we study the security of the proposed CFA scheme. In
particular, we assume that the adversary attempts to recover the
coefficients of and is used in CFA. Please note
that our security proof, compared to the pure descriptive manner
of proving security in other works, suffices to demonstrate the
security of our scheme at least in the engineering point of view,
because many attacks (eavesdropping attack, node capture at-
tack, reflection attack, and deperturbation attack) are considered
and some of them (eavesdropping attack, node capture attack,
and reflection attack) are further modeled and analyzed in our
paper.
Resilience Against Eavesdropping Attack: Consider the ad-
versary that can only modify the transmitted packet and re-
transmit the modified one in order to deceive the destination
node into accepting that the packet originates from the other
node or that the message is authentic. The probability of the ad-
versary successfully deceiving the destination node can be an-
alyzed as follows. If the message with sent by
the node is modified to or , then we can know
that the probability that the intermediate node forwards the mes-
sage is at most and the probability that the des-
tination node accepts the message is at most . This
can be explained by the fact that, to deceive the destination node,
the best strategy that can be adopted by the adversary is to forge
the MAC corresponding to and . Nonetheless, such MAC
can only be randomly guessed by the adversary. Therefore, the
verification difference would be arbitrary and the probabilities
that and happen to be within the predetermined
ranges are at most and for the intermediate
node and destination node, respectively.
Resilience Against Node Capture Attack: We consider the
case where the adversary not only eavesdrops on the transmitted
messages but also compromises nodes to use the security
information stored in them, trying to recover the coefficients
of . We can know that the adversary cannot break
if only nodes are compromised [3]. When
the adversary has compromised nodes, the complexity
for it to obtain the coefficients of is . This
can be explained as follows. Assume that are
compromised nodes. Let , , and be arbitrary elements in
.We know that if we can arbitrarily construct
for any , , and , then the coefficients of can
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 417
TABLE II
COMPARISON OF ENERGY CONSUMPTION OF DIFFERENT EN-ROUTE FILTERING SCHEMES
Nonetheless, only counting the number of the hops the falsified
message traveled will mislead us into thinking that the en-route
filtering scheme being considered is both efficient and effective.
We argue that, to correctly evaluate the efficiency and effec-
tiveness of an en-route filtering scheme, calculating the corre-
sponding energy consumption works as the best measurement.
We later will describe the disadvantage of using the number of
hops the falsified message traveled, and the advantage of di-
rectly using the energy consumption.
Energy Calculation: A general formula, , is
shown in [43] for evaluating the number of bits to be transmitted
in the report forwarding with the consideration of en-route fil-
tering schemes, where , , , and denote the bit-length of
the report plus endorsements, the average number of hops be-
tween two arbitrary nodes, the ratio of the false report to the
legitimate report, and the probability of detecting the false re-
port on each node, respectively. As and denote the energy
for transmitting one single bit and the energy for receiving one
single bit, respectively, we use the formula
(18)
to calculate the energy consumption incurred by the commu-
nication of en-route filtering schemes. Note that the above for-
mula only works for probabilistic key sharing-based en-route
filtering schemes such as SEF [49] and DEF [43]. For the deter-
ministic key sharing-based en-route filtering schemes such as
IHA [54] and LEDS [35], the corresponding energy consump-
tion should be considered otherwise. Note also that the energy
consumption incurred by the computation is usually not consid-
ered. Nevertheless, because our proposed scheme requires more
computation, for fairness of comparison, the energy consump-
tion incurred by the computation is included in the energy cal-
culation here. The energy consumption of different schemes is
summarized in Table II. It should be noted that the energy con-
sumption values in Table II are the approximate ones because
different parameters in different schemes should be considered.
Although the formulas of energy consumption are provided in
some works [35], [43], [49], it is still cumbersome to list all of
the notational details even without explaining their meanings.
For simplification, we only provide the approximate energy con-
sumption in different en-route filtering schemes in Table II. The
derivation of approximate energy consumption in Table II of
different schemes is described in Appendix B.
Let and be the energy consumption incurred
by the computation and communication, respectively, of the
en-route filtering scheme . For example, is the energy
consumption incurred by the computation when no en-route
filtering scheme is used, and is the energy consump-
tion incurred by the communication of SEF. We further de-
fine as the total energy consumption
of . Throughout the energy evaluation, the common param-
eters, MAC size with 64 bits and the byte-length of the report
with 24 bytes, were used for the methods adopted for compar-
isons. From [43], with the default parameter setting, we know
that ,
, and ,6
where is defined in Appendix B.
According to (18), with the calculation7 similar to [43] and
the setting of and , the energy consumption
in CFAEF can also be derived as
. In CFAEF, each intermediate
node needs to check the legitimacy of MACs. Each check
involves a trivariate polynomial evaluation. In the worst case,
the intermediate nodes do not resort to sophisticated algorithms
in the polynomial evaluation; i.e., the polynomial evaluation is
accomplished by calculating the values term by term and finally
summing the evaluation result of each term up. As the multi-
variate squaring method in calculating exponentiation is used,
the number of multiplications required is ,
where is the joint Hamming weight of the exponents of vari-
ables in the term under the consideration. For example, as the
term is considered, its joint Hamming weight of the
exponents will be six since there are six ones in the binary rep-
resentation of the exponents. It may be observed that the com-
putation overhead of CFAEF is higher than that of the other
schemes. Nonetheless, the communication overhead of CFAEF
is substantially lower than that of the other schemes. This can
be validated by the subsequent numerical results. Moreover,
CFAEF possesses several nice characteristics such as the re-
silience against FEDoS attack and the applicability on mobile
6It seems to have some erroneous calculations in deriving of DEF because
the derivation of in [43] is independent of . Nevertheless, should be pos-
itively proportional to in essence. Thus, the formula of used here is an
approximation based on our observation that should be somewhat linearly de-
pendent on . Note that 0.055 in is obtained by simply dividing 0.275,
which is provided in [43] as the of DEF when , by 5.
7In [43], the packet length is only calculated based on counting the lengths
of the report and MACs excluding the lengths contributed from the source node
ID, destination node ID, and endorsing nodes IDs.
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 419
Fig. 5. Numerical results of the energy consumption as a function of and (best viewed on a color display). (a) CFAEF versus DEF; (b) CFAEF versus SEF;
(c) CFAEF versus IHA; (d) CFAEF versus LBRS; (e) CFAEF versus LEDS.
In our evaluation, the setting of and
was used. When CFAEF is considered, we assume that
. The setting of J/bit, J/bit, and
J/bit was used based on the measurement results
on MICA2 mote in [40]. To our knowledge, there is no known
measurement result on . Nevertheless, we believe that
should be less than the energy required for AES decryption.
Thus, is assumed to be 0.31123 J/bit. Since only
involves with , such overestimation of can be used to
obtain the upper bound of .
The numerical results of the energy consumption as a func-
tion of and are shown in Fig. 4. For all schemes, the larger
the or , the more the energy consumed. This is obvious be-
cause the increase of implies the increase of the number of
hops the genuine and bogus messages travel, and the increase
of implies the increase of the number of packets to be trans-
mitted. It can also be known from Fig. 4 that is the
lowest among all the schemes while the energy consumption of
the other schemes increases dramatically.
The numerical results of the energy consumption as a func-
tion of and are depicted in Fig. 5. Note that is indepen-
dent of , and, therefore, is ignored here. Because of the high fil-
tering capability in DEF, the larger only marginally improves
the higher filtering effectiveness, but the larger has the sub-
stantially larger packet overhead, degrading the energy savings.
Nonetheless, since the packet overhead in DEF is significantly
larger than that in CFAEF, compared to , grows
promptly as increases. Hence, it can be shown in Fig. 5(a)
that, as increases, grows relatively slowly. On the
other hand, although each endorsement in SEF only has poor
filtering capability, when multiple endorsements are used, the
filtering effectiveness can be enhanced. It turns out that, as in-
creases, the packet overhead only slightly increases but the fil-
tering effectiveness are greatly enhanced. Thus, decreases
as increases.8 In particular, because of the low packet over-
head, when , with the increased packet overhead due
to the raise of , the filtering capability of SEF has the greater
improvement in detecting the bogus message, resulting in the
reduction of . Nevertheless, when , since the fil-
tering capability cannot be enhanced anymore in our parameter
setting, SEF also encounters the problem that the increase of
only implies the larger . Thus, as for the comparison of
SEF and CFAEF, under the conditions of relative low packet
overhead and , is lower than mainly be-
cause CFAEF can offer greater filtering capability and therefore
reduce the energy wasted on transmitting falsified messages.
When as shown in Fig. 5(b), is lower than
primarily because the packet overhead in CFAEF incurred
by the increase of is still lower than SEF. Note that, in the cases
where becomes larger, will be larger than even-
tually because the packet overhead of CFAEF is lower than that
of SEF only in certain cases. Nonetheless, in the realistic sensor
network applications, the sensor node does not have so many
neighboring sensor nodes. Hence, it is not necessary to consider
such cases. Recall that IHA guarantees that the false report can
be detected within at most hops. As shown in Fig. 5(c), because
the packet overhead will be increased and at the same time the
upper bound of the number of hops the false reports can travel
is increased, is positively proportional to . Since LBRS
and LEDS can be thought of as the location-based variants of
SEF and IHA, respectively, the curves of their energy consump-
tion shown in Fig. 5(d) and (e) are similar to those shown in
Fig. 5(b) and (c), respectively. Note that this kind of similarity
can also be observed in Figs. 4 and 6.
8In fact, as , turns to increases, because the increase of does
not improve the filtering effectiveness and only increases the packet overhead.
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 421
TABLE IV
POSSIBLE PARAMETER SETTINGS
works. 4) As the security association is used in conjunction with
the location information, some special assumptions should be
included. For example, a mobile robot is needed in LEDS [35]
while the secure bootstrapping time is required in IHA [54].
Nonetheless, our scheme does not need such an “initial setup
phase” to setup the security associations among sensor nodes.
In particular, although some security materials should be stored
in each sensor before sensor deployment (Offline Step of CFA),
the CFA scheme can work immediately after sensor deployment
without any configurations or assumptions. In addition, when a
message needs to be authenticated, although the sensor needs to
generate the key via CARPY+ [46], establishing the shared key
in CARPY+ does not rely on the other assumptions and even
does not require the communication between sensors. Hence,
due to the above reasons, we claim that our CFAEF does not re-
quire the establishment of the complicated security associations
among sensors.
Actually, each of the existing en-route filtering scheme can be
applied to the network with multisink. Nevertheless, as shown
in Table III, it is not economical to implement some en-route
filtering schemes on the multisink network. Here, “not econom-
ical” means that although IHA [54] (or DEF [43] or LBRS [50]
or LEDS [35]) can be adapted to be applied to the network with
multisink in a straightforward way that the network planner just
applies IHA (or DEF or LBRS or LEDS) many times, the over-
head will also be linearly increased with the number of data
sinks, which is a disaster. Thus, we consider some of the ex-
isting schemes incapable of being applied to the network with
multisink.
Finally, as the location information is required for each node
in some schemes [35], [45], [50], which consume additional en-
ergy, each node in our proposed CFAEF scheme does not require
us to derive its geographic position and, therefore, will be more
energy-efficient.
Prototype Implementation: To study the practicality of our
proposed CFA scheme for the current generation of sensors, a
prototype of CFA on TelosB motes on top of the TinyOS plat-
form was implemented (Micro-Controller: TI MSP430F1611;
ROM: 48KB+256B; RAM: 10KB; Radio Chipset: ChipCon
CC2420).
There are many possible combinations of parameter settings
in our CFA, some of which are shown in Table IV. In the imple-
mentation, the setting of , , and was used.
To keep the prototype implementation as simple as possible, the
coefficients in polynomial are artificially selected
so that the trivariate polynomial evaluation will not overflow.
In general, coefficients from authentication polyno-
mial and verification polynomial should be stored in the sensor
node. Nevertheless, since these two polynomials are fixed for
each node, if there are only a few nonzero coefficients in these
two polynomials, one would store only the nonzero coefficients
for reducing storage overhead. The MAC generation function
was implemented based on CBC-MAC mode. Since there is a
hardware-based AES encryption function in CC2420 chipset,
this hardware-based AES encryption function is launched as it
is required in CBC-MAC execution. In addition, in our program
code, we do not implement the function of pairwise key gener-
ation. Instead, the pairwise key is treated as a constant in the
program code. As a whole, the ROM needed for our program
code is 19724 bytes and the RAM needed for our program code
is 1668 bytes.
Our prototype was also run on TOSSIM, which is a dis-
crete-event simulator especially designed for TinyOS sensor
networks, to evaluate the energy consumption of CFA. The
TinyOS code can be directly executed on TOSSIM so that
TOSSIM can report the energy consumption. Due to this
feature, the energy consumption reported by TOSSIM would
be convincing. In the TOSSIM simulation, since the hard-
ward-based AES function in CC2420 is not supported by
TOSSIM, we, instead, implemented a software-based AES
function for CFA. We focus on the energy consumption in-
curred by the computation. Thus, the radio module is not
included in the program code. In our simulation, the CFA
computation is triggered per second. The period we conducted
the simulation was 60 s. The energy consumption reported by
TOSSIM is 706.197 mJ.
VI. CONCLUSION
ACFA scheme, which can be thought of as a hash function di-
rectly supporting en-route filtering functionality, was proposed.
According to CFA, we constructed a CFAEF scheme to simulta-
neously defend against false data injection, PDoS, and FEDoS
attacks. Some theoretical and numerical analyses were provided
to demonstrate the efficiency and effectiveness of CFAEF.
APPENDIX A
DERIVATION OF LOWER BOUND OF
Recall that the coefficients of the polynomial
used in CFA work as a kind of key, and should be kept secret.
Thus, the polynomials in can be thought of as the “com-
posite” key in CFA, and is an important indicator to eval-
uate the security of CFA because if there are only few choices
in then the adversary can obtain the same polynomial used
in CFA by performing -Construction algorithm as well. We
know from (8) and (11) that can be represented as
(19)
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 423
possibilities of , , in are re-
duced to two possibilities of , in , re-
sulting in the significant underestimation of . Hence, as the
setting of and is considered, should be sub-
stantially greater than 145. The more accurate approximation of
will be our future work.
APPENDIX B
DERIVATION OF ENERGY CONSUMPTION IN TABLE II
This Appendix describes how we derive the approximate en-
ergy consumption of different en-route filtering schemes shown
in Table II. We refer the readers to the corresponding references
for the explanation of the terms that are not explained in this
paper.
When the scheme without filtering is used, intermediate
nodes simply forward the message, resulting in .
Although is given for SEF with the use of Bloom filter,
we consider as if the ordinary version of SEF is used
and, therefore, , where denotes the energy
for calculating an MAC, because approximately keys from
different partitions are considered. is set to , where
is a random constant representing the distance between the
current position in the key chain and the last position in the key
chain.
IHA can guarantee that the false report can be detected within
at most hops if MACs are used. Thus, the average number
of hops the false report can travel is , resulting in
. LBRS and LEDS can be regarded as
the location-based variants of SEF and IHA, respectively. As the
conception of key partition in SEF is used in LBRS in conjunc-
tion with the geographic locations of the cells, should
be similar to because each intermediate node checks the
messages if it has an associated remote cell in which the MAC
of the received message is constructed. Similar to IHA, LEDS
establishes the security associations among nodes, except that
the security associations are directly established among nodes in
IHA but the security association is established according to the
cells where the nodes locate. Thus, compared to ,
should include an additional term representing the average
hop distance between two nodes within a cell. The probability of
detecting the false report in GREF is approximately ,
where is the number of keys from distinct groups and is
the key sharing probability. Thus, we can use this probability to
derive according to (18). Since different key groups are
constructed in GREF and each intermediate node has to check
the legitemacy of MACs constructed with the keys from dif-
ferent key groups, is set to be , where is the
number of MACs from the same group where the node shares
the key.
ACKNOWLEDGMENT
Chun-Shien Lu is the corresponding author of this paper.
REFERENCES
[1] T. C. Aysal and K. E. Barner, “Sensor data cryptography in wireless
sensor networks,” IEEE Trans. Inf. Forensics Security, vol. 3, no. 2,
pp. 273–289, Jun. 2008.
[2] M. Albrecht, C. Gentry, S. Halevi, and J. Katz, “Attacking crypto-
graphic schemes based on ‘Perturbation Polynomials.’,” in Proc. ACM
Conf. Computer and Communications Security (CCS), Chicago, IL,
2010.
[3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M.
Yung, “Perfectly-secure key distribution for dynamic conferences,” in
Proc. Int. Cryptology Conf. (CRYPTO), Santa Barbara, CA, 1993.
[4] M. Cagalj, S. Capkun, and J. P. Hubaux, “Wormhole-based antijam-
ming techniques in sensor networks,” IEEE Trans. Mobile Comput.,
vol. 6, no. 1, pp. 100–114, Jan. 2007.
[5] M. Ceberio and V. Kreinovich, “Greedy algorithms for optimizing
multivariate horner schemes,” ACM SIGSAM Bull., vol. 38, no. 1, pp.
8–15, 2004.
[6] S. Craver, N. Memon, B. L. Yeo, and M. M. Yeung, “Resolving
rightful ownership with invisible watermarking techniques: Limita-
tions, attacks, and implications,” IEEE J. Sel. Areas Commun., vol.
16, no. 4, pp. 573–586, May 1998.
[7] H. Chan, A. Perrig, and D. Song, “Random key predistribution schemes
for sensor networks,” inProc. IEEE Symp. Security and Privacy (S&P),
Berkeley, CA, 2003.
[8] H. Chan, A. Perrig, and D. Song, “Secure hierarchical in-network
aggregation in sensor networks,” in Proc. ACM Conf. Computer and
Communications Security (CCS), Alexandria, VA, 2006.
[9] R. Cardell-Oliver, K. Smetten, M. Kranz, and K. Mayer, “A reactive
soil moisture sensor network: Design and field evaluation,” Int. J. Dis-
tributed Sensor Netw., vol. 1, no. 2, pp. 149–162, 2005.
[10] S. A. Çamtepe and B. Yener, “Combinatorial design of key distribution
mechanisms for wireless sensor networks,” IEEE/ACM Trans. Netw.,
vol. 15, no. 2, pp. 346–358, Apr. 2007.
[11] W. Du, J. Deng, Y. S. Han, and P. Varshney, “A key predistribution
scheme for sensor networks using deployment knowledge,” IEEE
Trans. Dependable Secure Comput., vol. 3, no. 2, pp. 62–77, Jan./Mar.
2006.
[12] A. Deshpande, C. Guestrin, W. Hong, and S. Madden, “Exploiting cor-
related attributes in acquisitional query processing,” in Proc. IEEE Int.
Conf. Data Engineering (ICDE), Tokyo, Japan, 2005.
[13] J. Deng, R. Han, and S. Mishra, “Defending against path-based DoS
attacks in wireless sensor networks,” in Proc. ACM Workshop on Se-
curity of Ad Hoc and Sensor Networks (SASN), Alexandria, VA, 2005.
[14] Q. Dong, D. Liu, and P. Ning, “Pre-authentication filters: Providing
DoS resistance for signature-based broadcast authentication in wire-
less sensor networks,” in Proc. ACM Conf. Wireless Network Security
(WiSec), Alexandria, VA, 2008.
[15] L. Eschenauer and V. Gligor, “A key-management scheme for dis-
tributed sensor networks,” in Proc. Annu. ACM Computer and Com-
munications Security (CCS), Washington, DC, 2002.
[16] V. C. Giruka, M. Singhal, J. Royalty, and S. Varanasi, “Security in
wireless sensor networks,”Wireless Commun. Mobile Comput., vol. 8,
no. 1, pp. 1–24, Jan. 2008.
[17] H. Yu, “Secure and highly-available aggregation queries in large-scale
sensor networks via set sampling,” in Proc. ACM/IEEE Int. Conf. In-
formation Processing in Sensor Networks (IPSN), San Francisco, CA,
2009.
[18] C.-F. Huang and Y.-C. Tseng, “The coverage problem in a wireless
sensor network,” Special Issue onWireless Sensor Networks, ACMMo-
bile Netw. Applicat., vol. 10, no. 4, pp. 519–528, 2005.
[19] Y.-C. Hu, A. Perrig, and D. B. Johnson, “Wormhole attacks in wireless
networks,” IEEE J. Sel. Areas Commun., vol. 24, no. 2, pp. 370–380,
Feb. 2006.
[20] G. H. Hardy and S. Ramanujan, “Asymptotic formulae in combinatory
analysis,” in Proc. London Mathematical Society, 1918, vol. 17, pp.
75–115.
[21] D. Kundur, W. Luh, U. N. Okorafor, and T. Zourntos, “Security and
privacy for distributed multimedia sensor networks,” Proc. IEEE, vol.
96, no. 1, pp. 112–130, Jan. 2008.
[22] C. Krauß, M. Schneider, K. Bayarou, and C. Eckert, “STEF: A secure
ticket-based en-route filtering scheme for wireless sensor networks,”
in Proc. Int. Conf. Availability, Reliability and Security (ARES), 2007.
[23] C. Krauß, M. Schneider, and C. Eckert, “Defending against false-en-
dorsement-based dos attacks in wireless sensor networks,” in Proc.
ACM Conf. Wireless Network Security (WiSec), Alexandria, VA, 2008.
[24] M. Kutter, S. Voloshynovskiy, and A. Herrigel, “The watermark copy
attack,” in Proc. SPIE Electronic Imaging, Security and Watermarking
of Multimedia Contents II, San Jose, CA, 2000, vol. 3971, pp. 371–380.
[25] C. Karlof and D. Wagner, “Secure routing in wireless sensor networks:
Attacks and countermeasures,” in Proc. IEEE Int. Workshop on Sensor
Network Protocols and Applications, Anchorage, AK, 2003.
YU et al.: CONSTRAINED FUNCTION-BASED MESSAGE AUTHENTICATION FOR SENSOR NETWORKS 425
Processing and Pattern Recognition Society of Taiwan for his work on data
hiding. He won the Ta-You Wu Memorial Award, National Science Council in
2007 and was a corecipient of a National Invention and Creation Award in 2004.
From July 2007, he served as a member of the Multimedia Systems and Appli-
cations Technical Committee of the IEEE Circuits and Systems Society. He is
currently an Associate Editor of IEEE TRANSATIONS ON IMAGE PROCESSING.
He is a member of the ACM.
Sy-Yen Kuo (S’85–M’88–SM’98–F’01) received
the B.S. degree in electrical engineering from Na-
tional Taiwan University, in 1979, the M.S. degree
in electrical and computer engineering from the
University of California at Santa Barbara, in 1982,
and the Ph.D. degree in computer science from the
University of Illinois at Urbana-Champaign, in 1987.
He is a Distinguished Professor at the Department
of Electrical Engineering, National Taiwan Univer-
sity, Taipei, Taiwan, and was the Chairman at the
same department from 2001 to 2004. He was a Chair
Professor and Dean of the College of Electrical and Computer Engineering,
National Taiwan University of Science and Technology from 2006 to 2009.
He spent his sabbatical years as a Visiting Professor at the Computer Science
and Engineering Department, the Chinese University of Hong Kong from 2004
to 2005, and as a visiting researcher at AT&T Labs-Research, New Jersey
from 1999 to 2000, respectively. He was the Chairman of the Department
of Computer Science and Information Engineering, National Dong Hwa
University, Taiwan, from 1995 to 1998, a faculty member in the Department of
Electrical and Computer Engineering at the University of Arizona from 1988
to 1991, and an engineer at Fairchild Semiconductor and Silvar-Lisco, both in
California, from 1982 to 1984. In 1989, he also worked as a summer faculty
fellow at Jet Propulsion Laboratory of California Institute of Technology. His
current research interests include dependable systems and networks, mobile
computing, and quantum computing and communications. He has published
more than 300 papers in journals and conferences, and also holds more than 10
U.S. and Taiwan patents.
Prof. Kuo received the distinguished research award between 1997 and 2005
consecutively from the National Science Council in Taiwan and is now a Re-
search Fellow there. He was also a recipient of the Best Paper Award in the
1996 International Symposium on Software Reliability Engineering, the Best
Paper Award in the simulation and test category at the 1986 IEEE/ACM Design
Automation Conference (DAC), the National Science Foundation’s Research
Initiation Award in 1989, and the IEEE/ACM Design Automation Scholarship
in 1990 and 1991.
242 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 6, NO. 2, JUNE 2011
desired portion of sensed data. As the sensed data have multiple
attributes, the query could be multidimensional. Though many
kinds of queries are useful in retrieving the sensed data mean-
ingful to the authority, we restrict ourselves in this paper to dis-
cussing range query, top- query, and skyline query, which are
the most commonly used queries. Range query [11], [16], which
is useful for correlating events in the network, is used to retrieve
sensed data whose attributes are individually within a specified
range. Top- query [29], which is used to retrieve the sensed
data whose ranking values are among the first priority, can
be used to extract the extreme sensor readings. Skyline query
[5], [10], due to its promising application in multicriteria deci-
sion making, is also useful and important in environment mon-
itoring, industry control, etc. These queries will be discussed in
more detail in Section II.
Nonetheless, in the tiered network model, the storage nodes
easily become the targets to be compromised because of their
significant role in responding to queries. For example, the ad-
versary can eavesdrop on the communications among nodes or
compromise the storage nodes to obtain the sensed data, re-
sulting in the breach of data confidentiality (DC). After the com-
promise of storage nodes, the adversary can also return the falsi-
fied query results to the authority, leading to the breach of query
result authenticity (QRA). As confidentiality and authenticity
can be fulfilled via off-the-shelf cryptographic algorithms, the
most challenging is that the compromised storage nodes can vi-
olate query result completeness (QRC), creating an incomplete
query result for the authority by dropping some portions of the
query result.
Existing Works on Secure Queries
Secure range queries in tiered sensor networks have been re-
cently studied. While DC and QRA of the range query in [21],
[28], [33] can be preserved very well, owing to the use of the
bucket scheme [7], [8], their QRC is achieved in different man-
ners. In fact, as mentioned above, the main point in this line
of research lies in how to guarantee QRC. In particular, in the
tiered networks without the security concern, each sensor for-
wards the original sensed data to the storage node per epoch
when it has sensor readings. In [21], QRC is achieved by using
the encoding approach, which forces a state where, even when
sensors do not generate the bucketed data, they are still required
to send an unforgeable encoding number to the storage node in-
stead of sending nothing. Thus, if the compromised storage node
wants to report an incomplete query result, it has to forge the
corresponding encoding numbers, which has been proven to be
difficult. In [28] and [33], several crosscheck approaches were
proposed. Spatial crosscheck requires that each node broadcasts
its bucketed data to all the other sensors, and then forwards its
own sensed data and the received sensed data to the storage
node. Temporal crosscheck requires that each sensor forwards
the data sensed not only at the current epoch but also at the pre-
vious several epochs. Hybrid crosscheck combines spatial and
temporal crosscheck approaches. The idea behind these cross-
check approaches is that the information about the existence of a
specific sensed data is distributed over all the sensed data. Con-
sequently, to report an incomplete query result without being de-
tected, the compromised storage node has to drop a large amount
of other data, resulting in vacant epochs, within which no sensor
is deemed to generate sensor readings. This will attract the at-
tention of the authority, who will inspect the legitimacy of the
storage node.
The preliminary version of this paper [31] addresses the is-
sues of securing range, top- , and skyline queries. In addition,
very recently, by exploiting ranking and crosscheck approaches,
top- query can be secured in [32]. Nonetheless, DC is not taken
into consideration in [32]. Last, to the best of our knowledge,
no research effort was conducted on securing skyline query in
tiered sensor networks.
Security and Efficiency Gap
As stated in [28], the encoding approach [21] is only suit-
able in environment monitoring scenarios, in which sensors
constantly generate and report sensor readings, because the
transmission of encoding numbers incurs tremendous commu-
nication overhead. As stated in [33], the encoding approach
is only suitable for the one-dimensional query scenario be-
cause its communication overhead grows exponentially with
the dimensionality of data. On the other hand, crosscheck
approaches [28], [33] would be efficient only in the event
detection scenarios, in which sensors generate sensed data only
when triggered by specific events, because data broadcast will
imply considerable communication overhead. In addition, as
compared with the encoding approach, crosscheck approaches
sacrifice the probability of detecting query result incomplete-
ness for its applicability on multidimensional query. More
importantly, in crosscheck approaches, there are many param-
eters that must be manually and heuristically set, restricting its
practical use.
Due to their design nature, the methods in [21], [28], [33],
and [32] are especially designed to secure range query and top-
query, respectively. Nevertheless, the authority could issue dif-
ferent kinds of queries to retrieve the desired portions of the
sensed data. Therefore, their applicability is rather restricted.
Most importantly, the methods in [21], [28], and [32] only ad-
dress the security issues incurred by the compromise of storage
nodes with the unrealistic assumption that sensors cannot be
compromised. In fact, the security impact resulting from the
compromise of sensors can be considerable. Here, two kinds
of specific attacks resulting from sensor compromises are con-
sidered. They are collusion attack and false-incrimination at-
tack (Section III-B). The impact of collusion attacks, defined
as the collusion among compromised sensors and compromised
storage nodes, however, was only discussed in [33], wherein
only a naive method, in which the authority occasionally checks
if a random subset of sensors has been compromised, was pro-
posed as a countermeasure. As indicated in [33], spatial cross-
check is subject to this attack.
A false-incrimination attack, as a kind of denial-of-service
attack, can be extremely harmful but is never addressed in the
literature. Unfortunately, in such an attack, the compromised
sensors subvert the functionality of the secure query schemes
by simply claiming that their sensed data have been dropped by
the storage nodes. After that, the innocent storage nodes will
be considered compromised and be revoked by the authority. It
244 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 6, NO. 2, JUNE 2011
TABLE II
NOTATION TABLE
For skyline query, the desired skyline data are defined as
those not dominated by any other data. Assuming that smaller
values are preferable to larger ones for all attributes, for a set
of -dimensional data, a datum dominates another datum
if both the conditions, , and
, where is the th attribute
value of the datum , hold. Hence, the form of the skyline query
issued by the authority is given as , which is used to re-
trieve the skyline data generated in cell at epoch .
III. SECURING MULTIDIMENSIONAL QUERIES
In this section, the proposed SMQ schemes are described. Our
study is conducted evolutionarily through two steps. First, we
present the SMQ-1 scheme, which constitutes the foundation
of our proposed hash tree-based framework, in Section III-A.
Nevertheless, SMQ-1 is secure only against the compromise of
storage nodes. Thus, in Section III-B, SMQ-1 is enhanced to be
SMQ-2, which is resilient against sensor compromises. Table II
summarizes the notations frequently used in this paper.
A. SMQ-1
Our proposed SMQ-1 scheme consists of two phases: confi-
dentiality-preserving data reporting (Section III-A2) and QRC
verification (Section III-A3). The former is used to achieve
DC and QRA properties, while the latter guarantees the QRC
property. Since bucket scheme [7], [8] is used in the confi-
dentiality-preserving data reporting phase, to make the paper
self-contained, we will briefly review the bucket scheme in
Section III-A1.
It should be noted that the assumption that only the storage
nodes could be compromised is madewhen SMQ-1 is described.
This assumption is made to ease the explanation of our hash
tree-based framework and will be removed in Section III-B.
1) Bucket Scheme: Data encryption is a straightforward and
common method of ensuring the DC property. Moreover, we
hope that even when the adversary compromises the storage
node , the previously stored information should not be ex-
posed to the adversary. To this end, the keys used in encryption
should be selected from a one-way hash chain. In particular, as-
sume that a key is initially stored in sensor . At the begin-
ning of epoch , the key , which is used only within epoch ,
is calculated as , where is a cryptographic
hash function, and is dropped. Suppose that sensor
has sensed data at epoch . One method for storing in
while preserving privacy is to send the encryption of
with the key . With this method, when an OCB-like authen-
ticated encryption primitive [18] is exploited, the DC and QRA
properties can be guaranteed simultaneously. Nevertheless, the
query can be answered by only if operations on encrypted
data are possible. Hence, the bucket scheme proposed in [7] and
[8] is used in the SMQ-1 scheme. There is a tradeoff between the
communication cost and confidentiality in terms of bucket sizes
because a larger bucket size implies higher DC and higher com-
munication cost due to more superfluous data being returned to
the authority. The design of optimal bucketing strategies is be-
yond the scope of this paper, and we refer the reader to [7] and
[8] for more details.
In the bucket scheme, the domain of each attribute ,
, is assumed to be known in advance, and is divided into
consecutive nonoverlapping intervals sequentially in-
dexed from 1 to , under a publicly known partitioning rule.
For ease of representation, in the following, we assume that
, . A -dimensional bucket is defined as
a tuple, , where . The
sensor , when it has sensed data at epoch , sends to the
corresponding buckets, which are constructed by mapping each
attribute of the sensed data to the proper interval index, and the
sensed data encrypted by the key .
Let be the set of all possible buckets. Assume that there
are on average and data generated in a cell and in
a node, respectively, at epoch . Assume that is a set
containing all the data within the bucket sensed by
at epoch . The messages sent from to at the end
of epoch can be abstracted as , where
if there are some data
sensed by within epoch . Note that sends nothing to
at epoch if , . After that, , for ex-
ample, can answer the range query according to the informa-
tion revealed by the buckets. Assume that and are located
within the th and th intervals, respectively, where ,
, and . The encrypted data falling into
the buckets in the set
are reported to the authority. In other
words, once receiving the range query, first translates the in-
formation into the proper buckets and then
replies all the encrypted data falling into the buckets in .
As an illustrative example, shown in Fig. 2, when has
sensed data 3, 4, and 11 of the th attribute at epoch , the
message transmitted to the storage node at the end of epoch
246 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 6, NO. 2, JUNE 2011
Fig. 3. Illustrative example of SMQ-1. (a) The network setting. (b) The for-
warding of .
denotes the data sensed by . In Fig. 3(b), we illustrate
the forwarding of . It is shown in Fig. 3(b) that, once
receiving and from its descendants, computes
. Note that
the output of hash function in Fig. 3 is assumed artificially. In
reality, this depends on the hash function used.
3) Query Result Completeness Verification: In the following,
we discuss how can answer different queries and how the
authority can verify the QRC in SMQ-1.
Answering Range Query: Assume that a range query
is issued by the authority. The
encrypted data falling into the buckets in the set (the set
of buckets which the encrypted data belong to, mentioned in
Section III-A1), along with the proof composed of and
, are sent to the authority.
Once is received, the authority immediately performs
the prime factor decomposition of . Due to the construc-
tion of , which guar-
antees that the bucket primes are all distinct, after the prime
factor decomposition of , the authority can be aware of
which node contributes which data within specified buckets. As
a result, the authority can know which keys should be used to
verify the authenticity and integrity of .
More specifically, we assume that
, and that
are distinct prime numbers. From the construction
of , we know that , for , is equal
to , for and . From the
procedure performed by each node, it can also be known that
the appearance of in means that at
epoch the sensor produces data falling into bucket
, contributing the bucket key in total times
in . Here, the sensor producing the data falling into
the bucket means that senses nothing. Thus, we can
infer the total amount of data falling into specified buckets at
epoch . Recall that the authority is aware of the topology of
the aggregation tree. After the prime factor decomposition of
, the authority can reconstruct according to the
derived and by its own effort, because it knows and
, , , . Therefore,
we know that reconstructed by the authority is equal
to the received if and only if the received are
considered authentic. When the verification of fails,
is considered compromised. When the verification of is
successful, the authority decrypts all the received encrypted
data, and checks whether the number of query results falling
into the buckets in matches those indicated by . If and
only if there are matches in all the buckets in , the received
query results are considered complete.
Answering Top- Query: Based on the proof, and
, generated in SMQ-1, the authority can know which
buckets contain data, which allows it to also utilize such
information to examine the completeness of query results of
top- query. In other words, top- query can also be secured by
means of SMQ-1. Because of the similarity between answering
the range query and answering the top- query, some details
will be omitted in the following description.
For each bucket , , , we de-
fine a -dimensional tuple, , where is the central
value of the th interval of the th attribute. As
acts as the representative data of the bucket , the
value can be used to be the representative
ranking value of all the data in the bucket . Recall
that we simply assume that the data with the first smallest
ranking values are desired. Assume that are
buckets whose representative ranking values are among the
first smallest ones. can be known by according
to the proper computation on . To answer a top- query,
, issued by the authority, the storage node reports
the buckets, , and their corresponding encrypted data,
along with and , to the authority because it can be
known that the data with the first smallest ranking values
must be within . After receiving the query result,
the authority can first verify the authenticity of by using
, and verify the QRC by using . Note that both of the
above verifications can be performed in a way similar to the
one described in verifying range query. In fact, after receiving
, the authority knows which buckets contain data and the
amount of data. Hence, knowing and the representative
ranking values of the buckets in , the authority can also
obtain . Afterwards, what the authority should do is
to check if it receives the buckets, , and if the number
of data in each received bucket is consistent with the number
indicated by . If and only if these two verifications pass, the
authority considers the received query result to be complete and
extracts the top- result from the encrypted data sent from .
Answering Skyline Query: Assume that a skyline query
is issued by the authority. Each bucket can be
thought of as a data point if the data point central in the bucket
is considered as the representative of the bucket. With this no-
tion, we define the skyline bucket data set at epoch as a
subset of , in which each bucket is not dominated by the
other buckets. can construct for each easily because
of its knowledge of . Recall that the domination here has
been defined in the query model of Section II. Therefore, when
receiving the skyline query issued by the authority,
can report , together with the proof and the encrypted data
falling into , to the authority. The authority verifies the cor-
rectness of the proof as in range query and top- query cases.
With , the authority can also calculate . Finally, the au-
thority can check if it receives the complete skyline query result.
Storage Overhead Reduction: The storage overhead due
to the bucket primes and bucket keys can be reduced without
248 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 6, NO. 2, JUNE 2011
Fig. 4. Conceptual diagrams of the use of . In this illustration, we only
emphasize on and without considering . (a) and
know and , respectively. (b) After receiving messages from the
children, can obtain .
Offline Stage: Like SMQ-1, a set
of bucket keys and a set
of bucket primes
are selected by the authority. Nonetheless, in SMQ-2, the
set of bucket keys of and the set
of bucket primes of are assigned to the
node .
Online Stage: Let be a user-selected constant indi-
cating the subtree height. Let generated by at epoch
be the subtree proof of the data sensed by the nodes on
a subtree of the underlying aggregation tree rooted at
with height . In the SMQ-2 scheme, each is assumed
to receive
, from its children, .
Each calculates , , and as in the SMQ-1 scheme.
In addition, calculates
(4)
where
(5)
if it has sensed data, and otherwise. Note that the
leaf node on the aggregation tree is assumed to receive nothing.
Furthermore, performs the following operations. Assume that
are available, where
, and . The sensor calculates
and .
The sensor also calculates and ,
where and are computed in the method stated above.
Then, and are assigned to the set . The sensor
keeps in its local storage if , where
is a predetermined threshold known by each node that will
be analyzed later, and drops otherwise. At last, sends
to its parent node.
performs the same operations as except that it keeps ,
, , and in its local storage. The conceptual di-
agrams of the above procedures are depicted in Fig. 4.
Let be a subtree with height , rooted at at epoch
. Note that, when and are fixed, the corresponding sub-
tree is invariant with . Nonetheless, to ease the explanation of
our methods, the superscript remains. The generation of
depends only on the nodes in . In other words, the com-
promised nodes outside the cannot affect . Let be
the witness set of sensors satisfying at epoch
. The nodes in are called witness nodes at epoch . With
such a definition of , can also be regarded as a sub-
tree of the underlying aggregation tree, whose nodes contribute
to the construction of , . Assume that the query
result is found to be incomplete at epoch . The authority re-
quests for some ’s for the corresponding witness nodes in
’s via authenticated broadcast [13]. The method whereby the
nodes securely forward their subtree proofs to the authority is
described in Section III-B2. Without loss of generality, we as-
sume in the subsequent discussion that the authority requests
for and .
Counteracting False-Incrimination Attack: To identify the
nodes in , all the nodes at first are considered (labelled) neutral
at epoch by the authority. The nodes in become innocent
at epoch if the verification of passes, and the nodes in
become suspicious at epoch otherwise. The above verification
goes as follows.
According to the in the subtree proof , the authority
knows which nodes in the subtree contribute data and their
amount. The authority can, based on this information, calculate
, and by itself. As a consequence, the verifi-
cation passes if and only if the calculated by the authority
itself is equal to the extracted from the received . As a
whole, each time the above checking procedures are performed
according to for each at epoch , the nodes in
will be assigned to one of three sets, which are , , and
, containing suspicious nodes, innocent nodes, and neutral
nodes, respectively. Note that, for a fixed epoch , those nodes
that do not belong to are neutral, and, at this point,
and could overlap. We sequentially define the innocent
set , suspicious set ,
and neutral set at epoch .
Define and as the set of nodes cov-
ered by sampled subtrees at the epochs in and the set
of nodes to be inspected, respectively. Note that we only need
to check the legitimacy of the nodes in to find at least
one node in . Finally, assuming that at epochs within ,
always sends the wrong subtree proofs, no compromised node
acts as a witness node, and , we can have a weak filtering
criteria
(6)
that contains the compromised node in injecting the false sub-
proof if at least one , , is nonempty, and
(7)
contains the compromised node in injecting the false subproof
otherwise (Theorem 1).
The intuition behind the checking procedure is illustrated in
Fig. 5. It can be observed that, as grows, the size of
250 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 6, NO. 2, JUNE 2011
witness nodes so that the compromised nodes can escape from
being detected and the innocent can still be framed.We, mo-
tivated by the IP traceback techniques used in internet security
literature [27], develop a new traceback scheme especially suit-
able for WSNs to resist against such malicious manipulation.
Particularly, we need a mechanism, by which the receiver not
only can know whether the received message is manipulated
by the intermediate nodes, but also can identify the last node
altering the message if that node does exist. Although IP trace-
back techniques in the internet security literature [27] seem to be
a solution to this issue, their usual assumption that the interme-
diate nodes are innocent in most cases makes them vulnerable to
the compromised nodes in WSNs. In view of this, we develop a
cascade traceback scheme. The idea is simple; each node con-
structs a cryptographic hash according to the whole message re-
ceived from the descendant nodes and the self-generated data.
The hash is appended to the message to be sent. Afterward, the
final messages received by the authority will be associated with
several hashes. Using these hashes, the authority can verify the
integrity of the received message.
To be more specific, in the cascade traceback scheme, each
node is assumed to receive messages from children
nodes. Afterwards, sends , where
denotes the concatenation of the messages from children
nodes and the data generated by itself, to the parent node.
Note that the leaf node on the aggregation tree directly sends
the data it generates. With this procedure, the packet the
authority receives is of the form . To
verify the integrity of the data generated by the nodes, the
authority checks whether the calculated by it-
self according to the received is equal to the received
. With the assumption that has children
sensors , , and , , ,
the authority proceeds with the verification of that is
of the form
if the verification of is successful and is aware of the
message manipulation otherwise. Note that the verification of
means that the verification is conducted for each part
, in . Such verification is
conducted for each node until we examine all nodes in the cell.
If and only if all of the verifications pass, the messages from
the nodes are considered intact.
When the cascade traceback scheme is used to forward the
subtree proofs in a specific time interval , prepares the
corresponding subtree proofs as the data generated by itself if
, for some , and prepares nothing other-
wise. After receiving the notification from the authority, the sub-
tree proofs, along with a number of MACs, will be forwarded
to the authority.
The security of the cascade traceback scheme is two-fold.
First, cascade traceback guarantees that the adversary cannot
manipulate the messages generated by nodes. Second, cascade
traceback guarantees that if the intermediate nodes manipulate
the transmitted message, the last node performing the manipu-
lation can be identified by the authority.
To show that the first security goal of cascade traceback can
be achieved, we assume that the sensor has children sen-
sors, , , and , , . Sup-
pose that the adversary does not possess the key . In this
case, the adversary cannot generate a valid hash cor-
responding to the manipulated message . Suppose that the
adversary possesses . In this case, can be gener-
ated and the verification on passes. Nonetheless, as is of
the form , if the
adversary does not possess all the corresponding keys, then at
least the verification on one of nodes , , and will
fail.
The second security goal can be restated formally as follows.
As long as the transmitted messages are manipulated by an in-
termediate node , with the cascade traceback scheme, the au-
thority can identify a set of nodes, where is defined
as a set of nodes including and its one-hop neighbors. In other
words, the authority can ensure that one of nodes in ma-
nipulates the forwarded message. Note that, if multiple nodes
alter the message, the last node altering the message will be .
This property can be proven as follows. Suppose that the veri-
fication stalls on . Obviously, this means that . In
addition, according to the rule of the cascade traceback scheme,
must contain . Since , the security goal
is satisfied. Without loss of generality, consider again the sensor
and its children sensors, , , and . Suppose that
the verification stalls on the sensor , . This means
that must contain . In the case where replaces
with making unverifiable, the second security goal
is satisfied because . On the other hand, the case
that can be further divided into two cases, which are
the cases where and , respectively. In the case
where and the verification on fails, the second se-
curity goal is satisfied because . In the case where
, a contradiction occurs because, as and are in-
nocent, the verification should not be stalled on . Hence, ac-
cording to the argument, the second security goal of the cascade
traceback scheme can be achieved.
IV. PERFORMANCE EVALUATION
We provide numerical (Section IV-A), simulation
(Section IV-B), and prototype implementation (Section IV-C)
results to demonstrate the efficiency and effectiveness of our
SMQ schemes.
A. Numerical Result
We will focus on analyzing the critical issue of detecting an
incomplete query result in tiered networks. Here, the following
two metrics will be analyzed.
1) Detection probability: the probability that query result in-
completeness is detected.
2) Communication cost: the number of bits in the communi-
cations required in the data report of each sensor and query
response of for the proposed schemes.
It is assumed that the number of hops between and each
sensor is for a collection of uniformly deployed nodes [2].
In this section, both detection probability and communication
cost are discussed at a fixed epoch .
The communication cost of the encoding approach [21]
grows exponentially with the number of attributes. Some
crosscheck approaches [28], [33] have relatively low detection
252 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 6, NO. 2, JUNE 2011
2) The number of compromised sensors identified by
the authority. Note that, in Figs. 9–12, is labeled
identifying number.
1) Simulation Environment: We used MATLAB to conduct
the simulation here, which is, thus, independent of mote selec-
tion. The reason that we choose MATLAB as our simulation
platform is as follows. The primary purpose of our simulation
is to evaluate the efficiency of our subtree sampling technique.
Such evaluation is irrespective of radio chipset and microcon-
troller in the mote. In fact, it is hardware independent. In addi-
tion, a large number of sensor nodes are needed to fairly eval-
uate the efficiency. Note that if only a small-scale network is
considered (e.g., ten nodes in total), straightforward methods
like probing each of sensors may work well. Thus, we choose
MATLAB to conduct the efficiency evaluation of our subtree
sampling technique in a simulated large-scale network. (As can
be seen later, the maximum number of sensor nodes in the sim-
ulation reaches 1000.)
In the simulation environment, different numbers of nodes
were deployed to simulate a single cell. The communication
range of each node is the same, and is set properly such that
the nodes form a connected network [1]. In the cell, the aggre-
gation tree [15] is constructed. We also assume error-free and
collision-free packet transmission. Since our focus is on the re-
silience of the subtree sampling against false-incrimination at-
tack, a sensor is picked randomly as the compromised one. As
simultaneously launching false-incrimination attacks frommul-
tiple compromised nodes does not benefit the adversary, so we
assume that only one compromised node launches the
false-incrimination attack.
2) Impact of : Recall that the authority checks the
proofs of witness nodes in the time interval . We argue
that the efficiency of the subtree sampling is independent of
. Instead, it is only dependent on subtree height and
the number of witness nodes within epochs. Fig. 8
can be used to testify for our argument. Specifically, in Fig. 8(a),
where the weak filtering criteria is used, two curves representing
in the cases of and are
plotted independently. One can observe from Fig. 8(a) that the
two curves are nearly identical. The same observation can also
be obtained in Fig. 8(b), where the strong filtering criteria is
used. This means that our argument is correct even if the fil-
tering criteria used are different. Therefore, in the following
discussion of the impact of the other parameters, we simply ig-
nore the impact of . Finally, one may observe in Fig. 8(b)
that the number of nodes to be attested does not monotonically
decrease with and . We will explain this phenomenon in
Section IV-B4.
3) Impact of : Comparing Figs. 9(a) and (c) and com-
paring Figs. 10(a) and (c), we have an immediate observation
that increases . This stems from two facts. First, as
increases, it is less probable for the sampled subtrees to cover
. It follows that, when the weak filtering criteria is used, the
number of subtrees covering will be decreased, leading to in-
creased because of the increased cardinality of the in-
tersection result of the subtrees covering . Second, more impor-
tantly, as the sampled subtrees are more likely to be innocent,
(7) will be utilized to determine . Based on this observa-
Fig. 8. Results of subtree sampling in the cases of and
. (a)Weak filtering criteria. (b) Strong filtering criteria (must be viewed
on a color display.).
tion, as grows, we know that will increase because,
for fixed , as is doubled, grows more than double
in most cases. For example, when is set to be 500 and 1000,
as and all the sampled subtrees are innocent, the cor-
responding ’s will be 300 and 700, respectively. This
can be used to explain the differences of Figs. 9(a) and (b), and
Figs. 10(a) and (c) with respect to their quantities.
4) Impact of , and Filtering Criteria: From Figs. 9(a)
and (c), we can see that is monotonically decreased
with increase of and as the weak filtering criteria is used.
This is due to the nature of the weak filtering criteria that the
suspicious sets at different epochs are intersected to determine
. Nevertheless, as the strong criteria is employed, since
all the nodes in the suspicious sets at different epochs need to
be checked, could turn to be increasing as and
grow, as shown in Figs. 10(a) and (c). For example, instead of
the intersection of two dark triangles in the case where the weak
criteria is used [Fig. 5(a)], when strong filtering criteria is em-
ployed, the union of the two dark triangles constitutes .
As and are small, it is more probable that the subtrees do
not cover . Due to the fact that the weak and strong filtering
criteria share the same rule (7), the trend of appears to
be the same, no matter which filtering criteria is used. As and
grow, however, it is more likely that multiple subtrees cover
, and, thus, the difference between the intersection and union
operations would appear.
On the other hand, from Figs. 9(b), (d), 10(b), and (d), one
can observe easily that as long as always sends the falsified
subproofs, the detection probability is close to 1 regardless of
and . This also revalidates Theorems 1 and 2.
5) Impact of Incriminating Probability: In Figs. 9 and 10,
we assume that always sends falsified packets, attempting to
frame the innocent . Nonetheless, may choose to launch
a false incrimination attack occasionally in reality. Note that,
as mentioned in Section III-B1, doing so also proportionally
downgrades the security impact of false-incrimination attacks.
Define as the incriminating probability that launches
false-incrimination attack at each epoch. The results in Fig. 11
(Fig. 12) are plotted according to the same same setting as
in Fig. 9 (Fig. 10) except that is set to 0.8. We may be
aware of the fact that, as decreases, does not vary
substantially, when comparing Figs. 9(a) and 11(a), and com-
paring Figs. 9(c) and 11(c), but turns to decrease when
comparing Figs. 9(b) and 11(b), and comparing Figs. 9(d) and
11(d). The above phenomena are due to the fact that some of
254 IEEE TRANSACTIONS ON INFORMATION FORENSICS AND SECURITY, VOL. 6, NO. 2, JUNE 2011
TABLE III
SUMMARY OF PROTOTYPE IMPLEMENTATION OF THE PROPOSED
SMQ SCHEMES
TABLE IV
SUMMARY OF ENERGY CONSUMPTION OF THE PROPOSED SMQ SCHEMES
(PERIOD: 60 s)
C. Prototype Implementation
To study the practicality of our proposed SMQ schemes for
the current generation of sensors, we have implemented a pro-
totype of our schemes on TelosB motes on top of the TinyOS
platform (Micro-Controller: TI MSP430F1611; ROM: 48 KB
256B; RAM: 10 KB; Radio Chipset: ChipCon CC2420).
In the implementation, we focused only on observing the
memory overhead of ordinary sensors, because storage node is
storage-abundant and is always capable of storing the required
materials. The setting of , , and was
used. The bucket primes and keys, each of which are of length
128 bits, were plainly stored in the sensors, and do not utilize
the methods stated in Section III-A3. Together with the AES en-
cryption function in a CC2420 chipset, CBC-MACmode is used
to implement the hash function. Table III reports the results of
the prototype implementation of the proposed SMQ schemes.
Our program code was also run on TOSSIM in TinyOS
1.1.15 to evaluate the energy consumption of the SMQ
schemes. Note that TOSSIM is a discrete-event simulator
especially for TinyOS WSNs, on which TinyOS code can be
executed directly. Due to the above feature, though TOSSIM
is, in essence, a simulator, its estimation of energy consump-
tion is rather accurate. Note that, since the AES function in a
CC2420 chipset cannot be acceptable in TOSSIM, we, instead,
implemented a software-based AES function for the SMQ
schemes in the TOSSIM environment. Thus, we should be
aware of that the energy consumption can be further reduced
if the hardware-based AES function in CC2420 is used. In our
setting, the length of an epoch was 1 s; i.e., the SMQ scheme
was triggered every second. The period for which we conducted
the simulation was 60 s. The results of TOSSIM simulation are
depicted in Table IV.
V. CONCLUSION
We proposed SMQ schemes for securing multidimensional
queries, including range query, top- query, and skyline query.
Two critical performance metrics, detection probability and
communication cost, were analyzed. In particular, the per-
formance of SMQ is superior to all of the prior works. We
also investigated the security impact of collusion attacks and
newly identified false-information attacks, and we explored the
resiliency of the proposed schemes against these two attacks.
REFERENCES
[1] C. Bettstetter, “On the minimum node degree and connectivity of
a wireless multihop network,” in Proc. ACM MobiHoc, Lausanne,
Switzerland, 2002.
[2] H. Chan and A. Perrig, “PIKE: Peer intermediaries for key establish-
ment in sensor networks,” in Proc. IEEE INFOCOM, Miami, FL, 2005.
[3] H. Chan and A. Perrig, “Efficient security primitives from a secure
aggregation algorithm,” in Proc. ACM CCS, Alexandria, VA, 2008.
[4] H. Chan, A. Perrig, and D. Song, “Secure hierarchical in-network ag-
gregation in sensor networks,” in Proc. ACM CCS, Alexandria, VA,
2006.
[5] H. Chen, S. Zhou, and J. Guan, “Towards energy-efficient skyline mon-
itoring in wireless sensor networks,” inProc. EWSN, Delft, TheNether-
lands, 2007.
[6] P. Desnoyers, D. Ganesan, H. Li, M. Li, and P. Shenoy, “PRESTO: A
predictive storage architecture for sensor networks,” in Proc. HotOS,
Santa Fe, NM, 2005.
[7] H. Hacigumus, B. R. Iyer, C. Li, and S. Mehrotra, “Executing SQL
over encrypted data in the database service provider model,” in Proc.
ACM SIGMOD, Madison, WI, 2002.
[8] B. Hore, S. Mehrotra, and G. Tsudik, “A privacy-preserving index for
range queries,” in Proc. VLDB, Toronto, Canada, 2004.
[9] C. Krauß, M. Schneider, and C. Eckert, “Defending against false-en-
dorsement-based DoS attacks in wireless sensor networks,” in Proc.
ACM WiSec, Alexandria, VA, 2008.
[10] W. Liang, B. Chen, and J. Yu, “Energy-efficient skyline query pro-
cessing and maintenance in sensor networks,” in Proc. ACM CIKM,
Napa Valley, CA, 2008.
[11] X. Li, Y. Kim, R. Govindan, and W. Hong, “Multi-dimensional range
queries in sensor networks,” in Proc. ACM SenSys, Los Angeles, CA,
2003.
[12] S. Lumetta and M. Mitzenmacher, “Using the power of two choics to
improve bloom filters,” Internet Math., vol. 4, no. 1, pp. 17–33, 2009.
[13] D. Liu and P. Ning, “Multi-level TESLA: Broadcast authentication
for distributed sensor networks,” ACM Trans. Embedded Comput. Syst.
(TECS), vol. 3, no. 4, pp. 800–836, 2004.
[14] G. Mathur, P. Desnoyers, D. Ganesan, and P. Shenoy, “Ultra-low
power data storage for sensor networks,” in Proc. ACM/IEEE IPSN,
Nashville, TN, 2006.
[15] S. R. Madden, M. J. Franklin, J. M. Hellerstein, and W. Hong, “TAG:
A tiny AGgregation service for ad-hoc sensor networks,” in Proc.
USENIX OSDI, Boston, MA, 2002.
[16] S. R. Madden, M. J. Franklin, J. M. Hellerstein, and W. Hong,
“TinyDB: An acquisitional query processing system for sensor net-
works,” ACM Trans. Database Syst., vol. 30, no. 1, pp. 122–173, Mar.
2005.
[17] J. Newsome, E. Shi, D. Song, and A. Perrig, “The Sybil attack in sensor
networks: Analysis and defenses,” in Proc. IPSN, Berkeley, CA, 2004.
[18] P. Rogaway, M. Bellare, and J. Black, “OCB: A block-cipher mode of
operation for efficient authenticated encryption,” ACM Trans. Inf. Syst.
Security, vol. 6, no. 3, pp. 365–403, 2003.
[19] RISE Project [Online]. Available: http://www.cs.ucr.edu/~rise
[20] S. Ratnasamy, B. Karp, S. Shenker, D. Estrin, R. Govindan, L. Yin,
and F. Yu, “Data-centric storage in sensornets with GHT, a geographic
hash table,” Mobile Netw. Applicat., vol. 8, no. 4, pp. 427–442, 2003.
[21] B. Sheng and Q. Li, “Verifiable privacy-preserving range query in two-
tiered sensor networks,” inProc. IEEE INFOCOM, Phoenix, AZ, 2008.
[22] B. Sheng, Q. Li, and W. Mao, “Data storage placement in sensor net-
works,” IEEE Trans. Mobile Comput., to be published.
[23] M. Shaneck, K. Mahadevan, V. Kher, and Y. Kim, “Remote software-
based Attestation for wireless sensors,” in Proc. ESAS, Visegrad, Hun-
gary, 2005.
[24] K. Sun, P. Ning, C. Wang, A. Liu, and Y. Zhou, “TinySeRSync: Se-
cure and resilient time synchronization in wireless sensor networks,”
in Proc. ACM CCS, Alexandria, VA, 2006.
[25] A. Seshadri, A. Perrig, L. V. Doorn, and P. Khosla, “SWATT: Soft-
Ware-based attestation for embedded devices,” in Proc. IEEE S&P,
Berkeley, CA, 2004.
[26] Stargate Gateway (SPB400) [Online]. Available: http://www.
xbow.com
[27] S. Savage, D. Wetherall, A. Karlin, and T. Anderson, “Practical net-
work support for IP traceback,” in Proc. ACM SIGCOMM, Stockholm,
Sweden, 2000.
[28] J. Shi, R. Zhang, and Y. Zhang, “Secure range queries in tiered sensor
networks,” in Proc. IEEE INFOCOM, Rio de Janeiro, Brazil, 2009.
 1
 
行政院國家科學委員會補助專題研究計畫 成果報告   □期中進度報告 
無線感測網路資料傳輸之安全性與真實性 
（計畫名稱） 
 
計畫類別：個別型計畫   □整合型計畫 
計畫編號：NSC 98－2221－E－001－004－MY3 
執行期間： 98 年 8 月 1 日至 101 年 10 月 31 日 
 
執行機構及系所：中央研究院資訊科學研究所 
 
計畫主持人：呂俊賢 
共同主持人： 
計畫參與人員：游家牧、鄒耀東 
 
 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  完整報告 
 
本計畫除繳交成果報告外，另須繳交以下出國心得報告： 
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
  □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
 
中   華   民   國 101 年 11 月 04 日 
 
 
 3
ACM MM 會議共分五天舉行，第一天為 tutorial day，第五天為 Workshop day。第二天至第四天主
要為論文發表。此次本人所接受的 long paper 屬 track 8: Multimedia Security and Forensics，另一接受的
short paper 屬 track 3: Multimedia Search and Retrieval。 
在第一天Tutorial day之後，第二天Oct. 30上午在開幕儀式結束，唯一的single session是學生論文獎
的競賽。在這之後，下午是由多個oral sessions與poster sessions同時進行，我則挑選media retrieval and 
search等相關session聽講。由於本屆ACM MM已舉辦達20藉，故在傍晚有一個20th Anniversary Keynote 
Talk，講題為``Future Direction of Digital Content，’’講者為Dr. Masahiro Fujita (Sony Corporation, JP)。此
talk主要簡介多媒體技術發展歷史與趨勢。 
第三天Oct. 31上午一開始是由Dr. Hong-Jiang Zhang領取SIGMM Technical Achievement Award，並
發表演講``Reflections from an Industrial Perspective。’’其餘早上時間沒有其它論文發表場次，卻特別安
排一個20th Anniversary Panel以``Coulda, Woulda, Shoulda: 20 Years of Multimedia Opportunities’’為題。
由Prof. Klara Nahrstedt (UIUC)為主席邀請幾位多媒體領域知名學者擔任panelist。在這panel中，由這些
panelists先對幾個問題發表感想與意見，最後也回答聽眾之提問。下午是由多個oral sessions與poster 
sessions同時進行，我則挑選visual search這oral session聽講部份發表，也到poster session去看看。此次，
我們的一篇short paper ``Sparsity Cue in Image Copy Detection’’被安排於Oct. 31下午的poster session發
表。 
第四天Nov. 01早上9:00開始是一場Plenary talk，講題為``Decoding Visual Experience from the 
Human Brain，’’講者為 Dr. Yukiyasu Kamitani (ATR Computational Neuroscience Laboratories, JP)。基本
上，此次演講內容與今年三月在Kyoto舉辦之ICASSP由Dr. Mitsuo Kawato (Director, ATR Computational 
Neuroscience Lab., Japan)主講``Computational Neuroscience, Brain Decoding, and Neurofeedback’’相似，強
調Human Brain Interface (HBI)的重要性。隨後，是Multimedia Grand Challenge Solutions這一特殊session
的發表，它是首先於 2009 ACM MM開始由業界提出問題，再由學界有興趣者提出解法。基本上，幾
年看下來覺得這些題目娛樂性與商業性太強，較缺乏學術性學理之探討。下午是由多個oral sessions與
poster sessions同時進行。此次我們的一篇long paper ``Constraint-Optimized Keypoint Inhibition/Insertion 
Attack: Security Threat to Scale-Space Feature Extraction’’被安排於Nov. 01下午的最後一場oral session發
表。統計此次，本人於本屆ACM MM共發表兩篇論文，順利完成此行任務。 
Nov. 01 晚上則是舉行晚宴，會議註冊者皆能參加，唯一的藝妓表演甚是無聊。在晚宴進行中，
有些獎項的頒獎，這次國內一些團隊成績不錯。分別有台大資訊系洪一平教授團隊獲最佳學生論文獎!
台大資訊系徐宏明教授團隊獲最佳博士論文獎!中研院資訊所/資創中心語音訊號處理團隊獲
Multimedia Grand Challenge (http: 
//www.acmmm12.org/call-for-multimedia-grand-challenge-solutions/)第一名。 
第五天 Nov. 02 全天則為 ACM MM main conference 之 satellite workshops，有 9 個。可惜今年
workshop 主題吸引不了我，有些 workshops 是今年才剛辦，往年有辦過的有不少夭折沒有持續性。
Workshops 精彩度真的遠不如 main conference，難怪最後一天參與者減少相當多。 
 
二、與會心得 
今年國內教授與學生參與相當踴躍，根據大會統計資料，在世界各國註冊人數上排名第四位，除大多
來自台大與中研院，也有來自台科大、師大、清大與北科大等。但論文接受率還少於註冊率，畢竟在
低錄取率著稱的 ACM MM，能投稿並接受是有一定難度。 
另外，以本人研究範疇 Multimedia Security 而論，是 ACM MM 的非主流，這在幾年前參加此項會議已
 1
 
行政院國家科學委員會補助專題研究計畫 成果報告   □期中進度報告 
無線感測網路資料傳輸之安全性與真實性 
（計畫名稱） 
 
計畫類別：個別型計畫   □整合型計畫 
計畫編號：NSC 98－2221－E－001－004－MY3 
執行期間： 98 年 8 月 1 日至 101 年 10 月 31 日 
 
執行機構及系所：中央研究院資訊科學研究所 
 
計畫主持人：呂俊賢 
共同主持人： 
計畫參與人員：游家牧、鄒耀東 
 
 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  完整報告 
 
本計畫除繳交成果報告外，另須繳交以下出國心得報告： 
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
  □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
 
中   華   民   國 101 年 11 月 04 日 
 
 
 3
ACM MM 會議共分五天舉行，第一天為 tutorial day，第五天為 Workshop day。第二天至第四天主
要為論文發表。此次本人所接受的 long paper 屬 track 8: Multimedia Security and Forensics，另一接受的
short paper 屬 track 3: Multimedia Search and Retrieval。 
在第一天Tutorial day之後，第二天Oct. 30上午在開幕儀式結束，唯一的single session是學生論文獎
的競賽。在這之後，下午是由多個oral sessions與poster sessions同時進行，我則挑選media retrieval and 
search等相關session聽講。由於本屆ACM MM已舉辦達20藉，故在傍晚有一個20th Anniversary Keynote 
Talk，講題為``Future Direction of Digital Content，’’講者為Dr. Masahiro Fujita (Sony Corporation, JP)。此
talk主要簡介多媒體技術發展歷史與趨勢。 
第三天Oct. 31上午一開始是由Dr. Hong-Jiang Zhang領取SIGMM Technical Achievement Award，並
發表演講``Reflections from an Industrial Perspective。’’其餘早上時間沒有其它論文發表場次，卻特別安
排一個20th Anniversary Panel以``Coulda, Woulda, Shoulda: 20 Years of Multimedia Opportunities’’為題。
由Prof. Klara Nahrstedt (UIUC)為主席邀請幾位多媒體領域知名學者擔任panelist。在這panel中，由這些
panelists先對幾個問題發表感想與意見，最後也回答聽眾之提問。下午是由多個oral sessions與poster 
sessions同時進行，我則挑選visual search這oral session聽講部份發表，也到poster session去看看。此次，
我們的一篇short paper ``Sparsity Cue in Image Copy Detection’’被安排於Oct. 31下午的poster session發
表。 
第四天Nov. 01早上9:00開始是一場Plenary talk，講題為``Decoding Visual Experience from the 
Human Brain，’’講者為 Dr. Yukiyasu Kamitani (ATR Computational Neuroscience Laboratories, JP)。基本
上，此次演講內容與今年三月在Kyoto舉辦之ICASSP由Dr. Mitsuo Kawato (Director, ATR Computational 
Neuroscience Lab., Japan)主講``Computational Neuroscience, Brain Decoding, and Neurofeedback’’相似，強
調Human Brain Interface (HBI)的重要性。隨後，是Multimedia Grand Challenge Solutions這一特殊session
的發表，它是首先於 2009 ACM MM開始由業界提出問題，再由學界有興趣者提出解法。基本上，幾
年看下來覺得這些題目娛樂性與商業性太強，較缺乏學術性學理之探討。下午是由多個oral sessions與
poster sessions同時進行。此次我們的一篇long paper ``Constraint-Optimized Keypoint Inhibition/Insertion 
Attack: Security Threat to Scale-Space Feature Extraction’’被安排於Nov. 01下午的最後一場oral session發
表。統計此次，本人於本屆ACM MM共發表兩篇論文，順利完成此行任務。 
Nov. 01 晚上則是舉行晚宴，會議註冊者皆能參加，唯一的藝妓表演甚是無聊。在晚宴進行中，
有些獎項的頒獎，這次國內一些團隊成績不錯。分別有台大資訊系洪一平教授團隊獲最佳學生論文獎!
台大資訊系徐宏明教授團隊獲最佳博士論文獎!中研院資訊所/資創中心語音訊號處理團隊獲
Multimedia Grand Challenge (http: 
//www.acmmm12.org/call-for-multimedia-grand-challenge-solutions/)第一名。 
第五天 Nov. 02 全天則為 ACM MM main conference 之 satellite workshops，有 9 個。可惜今年
workshop 主題吸引不了我，有些 workshops 是今年才剛辦，往年有辦過的有不少夭折沒有持續性。
Workshops 精彩度真的遠不如 main conference，難怪最後一天參與者減少相當多。 
 
二、與會心得 
今年國內教授與學生參與相當踴躍，根據大會統計資料，在世界各國註冊人數上排名第四位，除大多
來自台大與中研院，也有來自台科大、師大、清大與北科大等。但論文接受率還少於註冊率，畢竟在
低錄取率著稱的 ACM MM，能投稿並接受是有一定難度。 
另外，以本人研究範疇 Multimedia Security 而論，是 ACM MM 的非主流，這在幾年前參加此項會議已
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/15
國科會補助計畫
計畫名稱: 無線感測網路資料傳輸之安全性與真實性
計畫主持人: 呂俊賢
計畫編號: 98-2221-E-001-004-MY3 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
[2]Yao-Tung Tsou, Chun-Shien Lu, and Sy-Yen Kuo, ``Privacy- and 
Integrity-Preserving Range Query in Wireless Sensor Networks,＇＇ The 
8th Workshop on Wireless, Ad Hoc and Sensor Networks (WASN 2012), August 
29-30, 2012. (優良論文獎) 
[1]Yao-Tung Tsou, Chun-Shien Lu, and Sy-Yen Kuo, ``MoteSec-Aware: An 
Adaptive Secure Mechanism for Wireless Ad-Hoc Sensor Networks,＇＇ 數
位生活科技研討會, July 7-8, 2011. (最佳論文獎) 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
