the rogue devices is able to provide better 
location accuracy than using signal strengths 
when rogue devices lower their signal 
strengths on purpose to reduce the possibility 
of being detected. 
 
二、計劃緣由與目的 
傳統上，所謂的 sensor network 
[1][2][3]，乃是由許多的 sensor節點所構成
的網路。這些 sensor會主動或被動地收集外
界的各種資訊，例如氣溫、空氣成份、水質
等等，同時 sensor也會將所收集來的資訊儲
存於本地端的儲存空間，例如磁碟、flash之
中。sensor與 sensor之間會透過彼此相連的
網路（例如 bus、無線網路、區域網路、或
Internet等）來交換彼此所收集的資料。欲
取得 sensor network所收集之資訊的使用
者，可對 sensor network進行查詢。傳統的
sensor多半為小型的嵌入式設備（embedded 
device），其收集的資訊則為真實世界的各
種狀態。 
這種利用 sensor network收集真實世界
狀態的概念，也可被應用來收集網路世界的
狀態[4][5]。近來，研究者開始發展利用
Internet-based sensor network來收集各種網
路狀態的技術，例如利用 Internet-based 
sensor network來收集和網路流量有關的各
種資訊，或是利用 Internet-based sensor 
network來進行網路入侵行為的偵測
（intrusion detection）。目前的 Internet-based 
sensor network有以下幾個特性：（1）規模
較小：sensor network中的節點數目並不多
（2）應用的侷限性：各個 sensor節點，已
被指定執行某種特定的任務，例如流量的監
控，而節點所被指派的任務並無法動態的改
變。 
因此，本計畫研究如何建構一個廣域
Internet-based sensor network，此 sensor 
network 具可程式化的能力並可擴展至極大
的規模，此 programmable Internet-based 
sensor network有兩個特性：（1） 極大之規
模（2）可程式化(programmable)。此外，並
研究此 Internet-based sensor network的應用。 
為了建構一個極大規模的
Internet-based sensor network，我們考慮採用
peer-to-peer networking（點對點網路架構）
[7][8][9] 以及 mobile agent（行動式代理人）
技術 [10][11]。透過 P2P網路技術，我們便
得以組織 Internet上的眾多節點，形成巨大
規模的 Internet-based sensor network。而且，
只要讓每個 sensor network中的節點，都具
備執行 mobile agents的動態執行環境，我們
便可利用mobile agents來設計各種可執行於
sensor節點中的應用程式，並且能夠動態的
於執行時期注入 sensor節點之上加以執行。
如此一來，每個 sensor節點便能夠擁有可程
式化的能力。 
本計畫為期三年，在第一年度的計畫時
程內，我們研究將 mobile agent技術應用於
Internet-based sensor network的相關議題，因
為在此 sensor network中，每個節點都可能
被其他節點或應用系統動態地部署各種
sensor applications，為了防範惡意者或錯誤
的程式佔據 sensor節點的資源，我們研究
mobile agent技術的進入許可控管與資源管
理的問題。 
在第二年度的計畫時程內，我們研究將
P2P技術應用於 Internet-based sensor 
networks的相關議題。在系統的規劃中每個
sensor節點都可允許任何被許可之 sensor 
application以mobile agent的形式進入 sensor
 2
將自己所需資源的使用時間與數量，與
Context進行協商，只有在 Context允許之
後，mobile agent才到 Context去，避免到了
Context之後，卻無可供使用的資源，引發
執行上的困難。整個 Admission Control的程
序，可分為同步與非同步兩種，非同步的
admission control程序主要用於預約型的，
當 mobile agent的遷移動作並不那麼即時，
採取非同步的方式，可以讓 Context對資源
的利用率高一點，而同步則是用於較即時的
遷移動作。Context本身不斷的統計自身各
種資源（包括網路頻寬、記憶體、磁碟空間）
的使用量，以及各個 mobile agent已預約以
及已使用的量。當收到來自外界mobile agent
的遷入請求時，根據請求者的身份以及資源
請求類型及數量，才能依據資源配置策略
（resource allocation policy）來決定是否應
允。在我們的設計中，各 Context的擁有者
可以自行決定各 Context自己的資源配置策
略。 
Admission Control機制只決定了是否應
允 mobile agent的資源請求，以及進行相關
的記錄。然而，實際上要限制 mobile agent
在 Context上的資源使用，必須倚靠各種資
源管理的機制。此資源管理的機制有兩個作
用：（1）提供 Admission Control機制來查
詢目前 Context上各種資源的使用情況。（2）
當 Admission Control機制與 mobile agent協
調好 mobile agent所能配置資源的類型與數
量時，資源管理的機制必須能夠對 mobile 
agent進行資源使用的限制，mobile agent不
能使用超過 Admission Control所應允的資
源數量。在本研究中，我們研究並設計了網
路以及記憶體資源的管理機制，以下則分別
說明之。 
在網路資源管理中，我們研究設計了兩
種類型的網路資源管理：socket的存取管理
與 socket頻寬管理。socket的存取管理可再
區分為兩類：（1）socket的作業控管：可以
控制 mobile agent是否能進行 socket的
connect、listen、以及 accept等三種動作。（2）
socket使用數量的控管：因為可使用 socket
的數量是有限的，因此一個 mobile agent同
時所能使用 socket的數量必須控管，以避免
mobile agent無限制的消耗 socket資源。而
在 socket的頻寬管理部份，亦可再區分為兩
類：（1）socket傳輸速率的控管：以每秒傳
輸的位元組為單位，限制 mobile agent單位
時間內所能接收或傳送的資料量。（2）socket
傳輸總資料量的控管：以位元組為單位，限
制mobile agent在Context上最多所能傳輸的
資料總量。 
在記憶體資源管理中，是採取以修改
JVM的方式來提供記憶體資源的管理。這個
部份的修改主要分為兩處。 
首先是 Java 程式語言中的 new 指令。
 4
源分享查詢的機制，實作於我們所設計開發
的mobile agent 平台－Mobilet之上。Mobilet
是一套提供mobile agents應用程式開發的環
境與執行平台。此平台乃是由跨平台的程式
語言 Java所撰寫，故能執行於多種不同類型
的作業平台之上，例如Windows系列與Unix
族系的作業系統。 
對mobile agent平台來說，所有的mobile 
agent在遷入後，皆執行於平台的執行環境
上，此執行環境對Mobilet平台而言，即稱
為 Context。 
以下分別說明分散式組織架構與資源
分 享 查 詢 的 機 制 的 研 究 成 果 。 
使用分散式組織架構機制，是希望
Context能不透過一個集中式的機器就能參
與目前由其它 Context所形成的組織並且知
道其它 Context的存在，但在第一次參與該
組織之前，新的 Context還是必須先知道至
少一個存在於組織中的 Context，透過該
Context節點使得新的Context能夠順利參與
該組織，之後新的 Context上執行的Mobilet
若有任何需要與其它 Context協助時都不再
需要透過特定一台 Context，而能夠直接在
組織中尋找目標 Context的存在並取得該目
標 Context提供的必要協助。 
分散式組織架構機制只提供引導式進
入組織的服務。然而，實際上要這些 Context
或是 Mobilet 利用已形成的組織架構，彼此
分享自己的資源則必須倚靠資源分享查詢
的機制。此資源分享查詢的機制必須：（1）
提供分享資源的方式，讓 Context 能分享它
們所掌握的資源。（2）提供查詢資源的方
式，讓 Context當需要其它 Context的資源時
能透過查詢方式來獲知資源的存在並試圖
取得資源（3）提供取得資源的保證，Context
透過查詢獲知資源的存在後，應保證不論資
源的提供在所處理網路環境都能順利取得
該資源。在本研究中，我們研究並使用了
JXTA[9] 來設計分散式組織架構以及資源
分享查詢機制，以下則分別說明之。 
在分散式組織架構和資源分享查詢機
制中，我們研究並且利用 JXTA的設計來提
供這兩種機制。在 JXTA的設計中，節點
（Peer）在第一次參與組織時透過集結點
（Rendezvous）來順利參與組織，之後在組
織中的任何活動都可以不一定需要透過原
本的集結點來運作。在 JXTA中，集結點也
是一種節點，只是它提供讓一般節點在做任
何需要其它節點協助的活動時，可以透過它
來得知其它節點存在。透過這樣的方式，利
用 JXTA所實作的分散式組織架構機制就能
讓在組織中節點都可以很容易知道其它節
點的存在。而 JXTA的分享查詢機制都以一
份公告文件（Advertisement）為出發的基
礎，每一種資源的內容都必須以一份公告文
件來描述，並且透過集結點發佈到 JXTA上
 6
mobile devices，對於不同於
training machine的 802.11無線網
路模組的 802.11 mobile devices，
雖能找出其可能位置，但會有較大
的定位誤差。因為 802.11 rogue 
devices的 802.11無線網路模組不
見得與 training machine的 802.11
無線網路模組相同，由於 802.11無
線網路模組的實作方式不同，使得
802.11無線網路卡的輸出功率不會
完全相同，而造成 802.11無線訊號
強度的差異，且 802.11 rogue 
devices也可能會刻意調整 802.11
無線網路模組的輸出功率以改變無
線訊號強度。 
由於以上的兩個問題，利用現存的
802.11定位系統，並無法準確的找出802.11 
rogue devices的可能實際位置。本計劃的
主要目的在於設計並實作一個 802.11定位
系統，可以偵測 802.11 rogue devices的出
現和找出 802.11 rogue devices的實際位
置。為了解決上述的第一個問題，本 802.11
定位系統使用 802.11無線 sensors來偵測
802.11 rogue devices；為了解決上述的第
二個問題，本 802.11定位系統所使用的
802.11無線訊號特徵為 802.11無線訊號強
度差。 
我們設計的系統包含一個 Location 
server和多個 802.11無線 sensors，這些
802.11無線 sensors部署在適當的位置。
802.11無線 sensors的功能是在 training 
phase時，接收 training machine所散發的
Probe request或 Beacon封包，紀錄 Probe 
Request或 Beacon封包內的 802.11無線
訊號強度和 BSSID(若是 Beacon封包，即
是 training machine上 802.11無線網路卡
的 MAC address)，並將這些資料傳送給
location server。在 location estimation 
phase時，接收 802.11 mobile devices所
散發 Probe request或 Beacon封包，紀錄
Probe Request或Beacon封包內的 802.11
無線訊號強度和 BSSID，並將資料傳送給
location server。 
Location server 的功能是在 training 
phase時，接收由各 sensor所傳送的資料，
並將資料處理成為 training set 的資料。在
location estimation phase，接收由各
sensor 所傳送的資料，並根據資料判斷
802.11 mobile devices 是否為 802.11 
rogue device，若 802.11 mobile devices是
802.11 rogue devices，則推估 802.11 
r o g u e  d e v i c e s 的可能實際位置。 
為了瞭解使用訊號強度差為無線訊號
特徵的好處，我們利用不同的 802.11 無線
網路卡輸出功率(100%、50%、25%、12.5%
和最低的輸出功率)，進行 802.11 rogue 
 8
applications,” IEEE Personal 
Communications, vol. 8, no. 4, pp. 
52-59, Aug. 2001. 
[2] G. J. Pottie, “Wireless sensor 
networks,” Proceedings of Information 
Theory Workshop, pp. 22-26, June 
1998. 
[3] S.S. Pradhan, J. Kusuma, and K. 
Ramchandran, “Distributed 
compression in a dense microsensor 
network,” IEEE Signal Processing 
Magazine, vol. 19, no. 2, pp.51-60,  
Mar. 2002. 
[4] P. M. Irey IV, R. W. Hott, D. T. 
Marlow, “An Architecture for Network 
Resource Monitoring in a Distributed 
Environment,” Proceedings of 
Workshop on Parallel and Distributed 
Real-Time Systems, pp. 1153-1163, 
1998. 
[5] Distributed Monitoring Framework 
(DMF), http://dsd.lbl.gov/DMF/ 
[6] Y.I  Wijata, D. Niehaus, V. S. Frost, “A 
Scalable Agent-Based Network 
Measurement Infrastructure,” IEEE 
Communications Magazine, vol. 38, no. 9, 
pp. 174-183, Sept. 2000. 
[7] M. Parameswaran, A. Susarla, and A. 
B. Whinston, “P2P Networking: An 
Information Sharing Alternative,” 
Computer, pp.31-38, July 2001. 
[8] G. Fox, “Peer-to-peer Networks,” 
Computing in Science & Engineering, 
pp.75-77, May/Jun 2001. 
[9] Project JXTA 2.0 Super-Peer Virtual 
Network, 
http://www.jxta.org/project/www/docs/
JXTA2.0protocols1.pdf 
[10] V. A. Pham and A. Karmouch, 
“Mobi l e  So f tware  Agen ts :  An 
Overview”, IEEE Communication 
Magazine, pp. 26-39, July 1998. 
[11] R. Gray, D. Kotz, S. Nog, D. Rus, and G. 
Cybenko, “Mobile Agents: The Next 
Generation in Distributed Computing,” 
Parallel Algorithms/Architecture 
Synthesis, pp. 8-23, 1997. 
[12] P. Bahl and V. N. Padmanabhan, 
“RADAR : An In-Building RF-based 
User Location and Tracking System,” 
IEEE INFOCOM 2000, March 2000. 
[13] A. M. Ladd, K. E. Bekris and A. Rudys, 
“Robotics-based Location Sensing Using 
Wireless Ethernet,” ACM MobiCom 2002, 
September 2002. 
[14] D. Paiidya, R. Jain and E. Lupu, “Indoor 
Location Estimation Using Multiple 
 10
