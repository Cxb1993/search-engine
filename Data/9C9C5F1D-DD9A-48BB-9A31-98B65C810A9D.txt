 218
0101.19.00.00-7 both belong to the 1st subcategory. 
 
However, the simple comparison will meet with the problem 
whether the string lengths are the same or not: 
 
1. The different lengths of key words: 
For example, there is 2 word- sheep within the 1st sub-category 
(Live animals) of category1; and the 2nd sub-category (meat and 
edible meat offal) of category 1 is listed with a key word- sheep 
meat. If there is a record with the description of “538 FROZEN 
SHEEP MEAT; NET WEIGHT: 17462.4KGS, NET WT: 
38,520.0000 LB”. When we are making the comparison, the 
description listed with a word- sheep shall be classified into the 
1st sub-category, but the description listed with “sheep meats” 
shall be wrongly put into the 2nd sub-category to cause the 
classification error.  
    
2. The identical lengths of key words:    
For example, if the key word-jack is frequently listed within the 
field of commodity name, it usually represents the “connector of 
household appliance” belonging to the sub-category 84; and 
there is another key word-jacket belonging to sub-category 62. 
If we adopt the “Fully Match” methodology to make 
comparison, whenever the key word is written as “jackets” in its 
plural form, thus this record will be omitted to lose its 
comparability and error tolerance. Accordingly, the data 
processing is available for porter stemming algorithm [2, 6] and 
each English word shall be returned its original singular form. 
However, there are still some occasional errors unavoidable; for 
example, the typists could possibly input the wrong words.  
 
Thus, although the term database comparison is conveniently 
operable, yet it is mainly defected with low accuracy of 
classification. Seeing from the research results made by M.E. 
Maron, among 145 articles with 60 articles of no key words 
previously excluded, the comparison accuracy merely reaches 
51 %.  
 
Thus, this article is aimed to establish a classification system 
from the specific input data (“Cargo” B/L with overall English 
text input). It is based on the comparison methodology to 
propose 2 notions of “priority weight setting for categories” and 
“multi-classification” to improve the classification 
methodologies. 
 
Regarding “priority weight setting for categories”, if it exists in 
various wordy lengths, we can allow the longer words with 
higher priority weighting to avoid the possibly happening errors. 
For example, between “sheep” and “sheep meat”, the “sheep 
meat” is obviously right. If the key words are identical, from the 
experiments, we can find that some categories will naturally 
pose higher priorities than other categories. We can tale “wood” 
and “chair” for example, the “chair” belonging to “furniture 
category” originally with higher priority. If we can combine the 
rules for priority setting into the classification system, it will 
naturally increase considerable accuracy. However, with the 
dynamic combination of rules for priority setting, it will cause 
some problems as what we call cycle priority. In chapter 3, we 
will discuss this problem in detail and also propose the “the 
algorithm to detect redundancy cycle priority” to sole the said 
problem. 
 
The notion of multi-classification originates from the fact that 
some B/L is composed of more than 2 kinds of commodity, such 
as “428 FROZEN FISH AND FROZEN BEEF”. Thus, if this 
kind of B/L is classified into a category, it seems highly 
unreasonable. Thus, the mechanism of multi-classification is 
allowable for systemic multi-classification in data processing.  
 
The research resulting within this article suggests that after the 
priorities added and multi-classification allowed, within the B/L 
classification exclusive of the B/L of no Match key word, the 
classification accuracy can reach 95% above. 
 
 
RELATIVE WORKS 
 
M.E. Maron [5], in 1961, published his dissertation to be the 
pioneer to investigate the science of text classification. He 
proposed that by using clue words, we can make some available 
clues for text classification with much contribution for the 
subsequent scientific research about text classification. The 
sources of his research lectures for text classification were 
adopted from the periodical – Transaction on Electronic 
Computers with the document profile excerpt from the 
dissertation abstract within the said periodical.  M.E. Maron 
totally selected 405 scientific dissertations with 260 articles to 
serve as training data and the remaining 260 articles were used 
for testing. All the articles were classified into 32 categories. 
 
The dissertation of Hamill and Zamora [3] was proposed in 
1980. The article texts were sourced from Chemical Abstracts 
with the document profile excerpted from the dissertation titles. 
The had chosen 63372 articles with 47283 articles to serve as 
the training data and the remaining 16089 articles were used for 
testing articles with all articles classified into 5 categories and 
80 sub-categories:  
 
The process of classification can be divided into 2 major parts: 
One part is to establish the classification models from the 
already classified data; the other is to use the classification 
models to categorize from the unclassified data [1, 2, 4, 6, 7, 8]. 
 
We refer to the dissertation of K Aas and L. Eikivil[1] and sum 
up the systemic process for document classification as Fig. 2. 
 
At first, we divide the article required for classification into 
training data and testing data. From the training data of already 
classified category, we pick out the similar feature terms or key 
words. This process is known as Feature Extraction including 
preprocessing, document representation and feature selection, 
totally 3 parts. 
 
with the root class firstly by means of “deep firstly” searching. 
We can search each category and sub-root-class v (denoted as 
descendant (v)). Thereafter, we can check the route of this node 
to see if it exists in the category W to make the cycle priority 
{W,…V,W}. Thereafter, we can further delete this cycle. The 
whole set can be re-defined as a new category W’; namely, we 
can re-define a new category to replace the category set of cycle 
priority shown as Fig 3.  
 
 
Fig. 3 The Demonstration for the Combination of Redundant Priority 
 
Algorithm CPD (V) (Cyclic Priority Detection) 
Input: There is a Direct Graph G = (V, E) recorded with all 
priority correlations. 
Output: There is a Direct Acyclic Graph without any cycle 
priority existing, neither does the redundant category. 
 
Pre-processing: We can firstly find out the descendant (v) from 
all the sets of category {V}. 
 
1) visited [v]= true 
2) for (each class w adjacent to v) begin 
(a) we attached next being traversed class w to the 
descendant (v) set. 
(b) Check the descendant (v) whether there is repeated 
class w appeared. If so, we reduce these redundant 
classes {w,…v,w} into another class w’ and 
reconstruct the graph with the class w’; otherwise 
we can discard the class w from the descendant (v). 
(c) If cyclic priority is found then  CPD(w’)  Else 
CPD(w)   end 
 
Multi- Classification  
 
Knowing from the previous studies, some key words like 
“container ship”, occur will frequently cause erroneous 
classification because there are more than 2 category of 
commodity within the cargo. Thus, this research article firstly 
filters out the data with such a feature and then it is particularly 
processed. Thus, it can considerably improve the accuracy of 
subsequent classification. 
 
The major basal accordance for filtering process is that after 
each learning cycle, from the erroneous data, we can pick out 
the key words highly possible to cause wrong 
multi-classification. Before the action for general classification, 
we previously remove all the data featured with 
multi-classification. In other words, we select all the erroneous 
data from the original multi-classification; and then, after 
processing, the data will be correctly classified. 
 
System Architecture 
 
From the sub-category filed of CCC Code, we can extract the 
original term pools; by following experimental rules, we can 
add the pre-defined key words with priority weight values and 
multi-classification. Thereafter, we can further add training data 
to execute the first classification. Thus, we can use the priority 
rules proposed by this research and the revised key word to 
execute learning; finally, we can examine the new term pool and 
rules.  
  
Within the pre-processing, we can execute 3 actions: 
1. Delete the stop words like conjunctions, prepositions and 
article nouns. 
2. Delete the particular characters like “@” and “#”. 
3. Process the syntactic arrangement. Reduce the gerunds, 
plurals, past tenses, present participle and adverbial ending 
to their original forms. 
 
Under multi-classification processing, we have filtered out some 
key words with multi-classification before the 1st classification, 
such as “container ship”. We can filter these key words of B/L 
from the training data independently. The data is allowable for 
direct multi-classification. According to the classification 
situation, we can gradually revise or add the key words with 
such a feature. 
 
Regarding the major classification processing, we can directly 
adopt the key words by means of Fully Match and Partially 
Match to compare with training data under the 1st classification. 
The so-call Fully Match Methodology defines the successful 
action that the check-out key word shall be fully matched to 
reach its successful comparison. The Partially Match 
Methodology means the successful action that the prefix of 
check-out key word shall be fully matched to reach its 
successful comparison. When we are checking out the key 
words, the longer words shall pose higher priority such as the 
situation that the “ice cream” shall be prior to the “ice”. 
 
In addition, we can set up an information table for key word 
priority and place this table into the same location as the key 
word database. The priority default for each category is set to 1. 
As for the priority determination, we can default in the notion 
that the finished product category shall be prior to the raw 
material category according to our past experience. For example, 
the priority of “Furniture” shall be superior to “Wood”. 
“Furniture” belongs to sub-category 94, while “Wood” falls on 
sub-category 44. Thus, we can add the category priority rule 
(94→44) and the priority weighing value of sub-category 94 
will be added by 1. Whenever there is any new priority rule 
added, we can use the foresaid CPD Algorithm to check if it 
exists in the redundant cycle priority.  
 
After various steps of classification, we can collect the data 
unavailable for classification and the data of erroneous 
 220
