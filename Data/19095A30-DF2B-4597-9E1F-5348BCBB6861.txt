行政院國家科學委員會專題研究計畫成果報告 
自主性分散式無線感測網路嵌入系統研製(I I) 
子計畫五：自主性無線感測機器人群組合作之相對定位與地圖探勘演算法
設計與實作(I I) 
 
計畫編號：NSC 94-2213-E-182-005 
執行期限：94 年 8 月 1 日至 95 年 7 月 31 日 
 
主持人：吳世琳                        執行機構及單位名稱：長庚大學資訊工程學系 
計畫參與人員：施智評、曾奎富          執行機構及單位名稱：長庚大學資訊工程學系 
                 、農令辰、楊鎮宇                 
摘  要 
 
探知無線感測機器人(Wireless Sensor Robots)所
處之實際環境的地圖資訊是提升行動感測網路
(Mobile Sensor Networks)應用的重要關鍵技
術。此計畫主要是透過為無線感測機器人設計
出相對於環境之定位演算法及地圖探勘演算法
來建構出高效率、高容錯之協定。在傳統的無
線感測機器人皆是配備精準完善的感應設備以
及強大的電源供應但是數量稀少且龐大昂貴的
機器人來進行相關工作，使得成本無法降低且
處理的精準度與完成任務的速度無法大幅提
升。然而我們著眼在如何利用簡單的感應設備
但是數量眾多且低價的小機器人透過彼此協調
合作來完成相關的工作，使得總成本下降且處
理的精準度與速度大幅提升。  
 
1. 簡介 
 
無線行動感測網路（Wireless Mobile Sensor 
Network ）是近年國內外廣為討論的熱門議
題，諸如災害現場協助救災、自然生態資源探
測、太空探勘等應用均隨今日硬體技術的進步
而實現，從使各界對相關研究的重視。無線感
測機器人依應用需求搭載各式感測器於未知環
境內收集感測資訊，並將此資訊藉由無線感測
機器人自行成之無線感測網路傳至 Sink Node
供救災人員、科學家即時資料匯整及解讀。然
而僅具感測資訊卻缺乏未知地理位置了解，將
使無線感測機器人應用甚為有限。如無線感測
機器人在未知環境內利用溫度感測器偵測出火
源，卻無法得知火源所在地及鄰近地形，貿然
派遣消防人員進入的結果，可能反增加人員傷
亡；或讓無線感測機器人配備生命探測儀器進
入火場偵搜生還者位置作定位，爭取黃金救災
時間。 
在無線感測機器人 (wireless sensor robots) 的
研究領域裡，兩個極為重要的研究方向：1.相對
定位、2.地圖探勘。如果我們所架構的無線感測
網路中的各個無線感測機器人，無法對於自己
所在的地理位置或環境有所區分與認知，那麼
前面所提之應用就會很難實現。如果將無線感
測機器人應用在室內、深海或是外太空探測，
就無法利用 GPS 的衛星訊號來進行定位的工
作。因此，我們的目的就是要找出每個無線感
測機器人彼此之間相對的位置拓樸關係，以及
他們相對於所探勘環境的位置，藉此，就可以
完成 GPS 所無法完成的工作。 
 
有鑒於此，本計畫著重室內環境探勘為主，利
用數個可移動行動感測載具，讓載具可自我定
位，兼具感測能力，同時建構未知室內、室外
環境地理資訊，泛稱 SLAM（Simultaneous 
Localization And Mapping，SLAM）。 
 
數個可移動的行動感測載具，我們稱行動感測
點（Mobile Sensors，MS），或稱行動感測機器
人，如圖一所示。本計畫所提 SLAM 分兩大部份，
一為定位（Localization），另一為團隊探勘建
圖（Mapping）。大範圍定位演算法中，所有 MS
採 dead-reckoning 定位模式 [3]，在行動感測
網路大範圍環境內，配合 MS 構成無基礎式通訊
網路架構（ad hoc network），採通訊訊號功率
為依據，加上三角定位及重心法為輔，修正 MS
定位誤差。小範圍環境中，我們讓 MS 間直接尋
找更佳定位能力 MS 修正定位誤差。MS 間具定位
能力後，由我們設計的團隊探勘策略，收集 MS
間資訊彙整至中控點 Sink，建立全域地理資訊。 
 
本計畫接下來將分以下六大部分說明我們所提
出的 SLAM 演算法：2. SLAM 相關研究。3. SLAM
定位修正機制。4. SLAM 團隊探勘機制。5. 模
擬分析。6. 結論。 
 
 
圖四、back and forth、Zig-Zag 探勘模式 
 
利用 critical point 我們把探勘環境劃分許多
cell（cellular decomposition）。這種切 cell
的 方 式 稱 morse decomposition （ 或 稱
boustrophedon decomposition）。利用 morse 
decomposition 所得圖形繪成 Reeb graph。Reeb 
graph 由點與線構成，點就是我們先前建構的
critical point ， 而 線 分 別 對 應 morse 
decomposition 分屬的 cell。MS 執行 back and 
forth motion 過程中，若偵測到 critical 
point，就會更新 Reeb graph。當 Reeb graph
中所有邊都走訪過，代表整體環境探勘完畢，
如圖五所示。[7][8] 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖五、morse decomposition 和建立 Reeb Graph 
decomposition map 藉由 MS 擴張並列隊形，本
意是利用該團隊碰到障礙物，導致隊形變化建
立 critical point。但複雜度較高的地理環境，
容易遺失 critical point，同時感測器的效能
也會是影響建立 critical point 主因。不過
back and forth 團隊探勘方式仍為本計畫採
用，簡單易於實作、可藉增加 MS 數量，增加即
時探勘面積；調整 MS 間距，同時達到收集環境
資訊（溫度、溼度等），是本計畫採用的主因。 
 
本 計 畫 歸 納 分 兩 種 架 構 ， 一 為 分 散 式
（distributed）探勘演算法，另一種為集中式
（centralized）探勘演算法。分散式的作法是
在每個 MS 內保存 global map，並隨時更新彼此
資料。集中式探勘作法在每個 MS 內保存 local 
map，再將此 local map 傳送至中控點作 global 
map 整合，因此理論上若每個探勘 MS 定位很準
的情況下，由中控點作整體調配，重覆探勘的
問題大幅減少，增加探勘效率，不過仍以 MS 間
與中控點 line of sight 通訊為考量。集中式
（centralized）在整體探勘效能上優於分散式
（distributed），不過卻缺乏分散式備援能力。 
 
3. SLAM 定位修正機制 
 
3.1 階層式 SLAM 架構  
在 SLAM 中依功能可分中控點（Sink）、行動定
位參考點（Mobile Localization Reference 
Point，MLRP）及探勘者（EXPlorer，EXP）。其
中 MLRP 及 EXP 我們稱行動感測點（Mobile 
Sensors，MS），MS 間掛載相同感測器、具備相
同通訊能力，故我們說 MLRP 及 EXP 為同質性
（homogeneous）MS，不過兩者在 SLAM 中功能
有相當差異。EXP 為 SLAM 中最底層成員，負責
感測未知環境地理資訊；MLRP 提供 EXP 定位用，
並將無線通訊半徑調至最大，作為 EXP 及 Sink
間資料傳遞中繼點；Sink 具備超越 MS 計算能
力，彙整來自 MLRP 的資料，即時決策、動態協
調 MS 探勘，且供 MLRP 定位用。 
 
所有 MS 定位方式採基礎 dead reckoning 演算
法。Dead reckoning 優缺點在前述研究文獻已
詳述，因此理論上我們應限制所有 MS 運動行
為。然而受限的運動行為間接影響 MS 地圖探勘
靈活性，折衷作法我們將 MS 分為 MLRP 及 EXP，
EXP 的運動模式不受限，然而 MLRP 予以限制運
動模式，降低累計誤差之影響，因此 MLRP 定位
準確度應優於 EXP。EXP、MLRP 除從 Sink 處直
接任命外，依探勘任務需求，MLRP 於探勘過程
中可變換功能為 EXP，但 EXP 因累計誤差遠大於
MLRP，故不能直接變換為 MLRP，除非 EXP 回鄰
近 MLRP 或 Sink 重新定位，我們才允許其變換
功能。圖六說明 Sink、MLRP 及 EXP 間定位、通
訊階層關係。 
3.2 MS 大範圍定位機制 
EXP 執行探勘任務中，會不斷接收來自鄰近 MLRP
廣播資訊（broadcast），內含 MLRP 位置、ID、
訊號強度等資訊，如圖七所示。 
 
 
 
 
 
 
 
勘模式簡單來說，就是把 EXP 整體探勘團隊並
排掃描，以求同時函括較大感測區域。當這個
團隊所有 EXP 同時碰到障礙物時，會往未探勘
區域移動，且反向並排掃描，如圖十所示。這
種探勘模式在本計畫 SLAM 中是最基本的群組探
勘模式，任何探勘模式均以 BFSP 為基礎。因此，
若整體探勘團軌跡如圖所示，我們稱 Back and 
Forth Scan Phase（BFSP）。 
 
 
圖十、BFSP 探勘模式 
 
4.2 Parallel Shift Phase（PSP） 
PSP（Parallel Shift Phase，PSP）嚴格說起
來是 BFSP 的一部份。當一個探勘團隊中 ＂所
有＂ EXP 同時偵測到前方障礙物時，會沿障礙
物邊緣上移到位探勘區塊，這個動作稱之 PSP，
如圖十一所示。另外值得注意的是，探勘團隊
偵測到前方區域均已被其他團隊探勘過，其效
果等同於前方為一障礙物，亦會執行 PSP。 
 
 
圖十一、PSP 探勘模式 
4.4 Deployment Phase（DP） 
DP（Deployment Phase，DP）部署方式是針對
MS 發現新區域所做的探勘決策，在說明後續探
勘決策前，本計畫再度引用前述 grid 資料結
構，因為 MS 是以 grid 為移動單位，而 grid 內
含資訊給予 MS。此外，MS 上測距感測器也必須
有能力偵測 MS 前、左、右的 grid 情況，如圖
十二所示。若我們設 EXP_1 目前位置為
EXP_1.grid.position={(x,y)}，則 EXP_1 鄰近
grid (x,y+1)、(x+1,y)、(x-1,y)均會在 EXP_1
感測範圍內，EXP_1 亦可在這些 grid 內寫入對
應資訊。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Structure grid  
{ 
position 
grid_probability 
scan_direction 
} 
圖十二、Grid Structure 
 
如圖十三所示，EXP_1 從門口入內走段距離後，
會先預設自己掃瞄方向（使用者自訂），因此會
在 所 屬 grid 設 定
EXP_1.grid.scan_direction=left，發現左右
兩邊 grids 為 free space，同時在右方佈下一
個虛擬 mark_1。Mark_1 其實就是告訴 Sink，在
EXP_1 右方為 free space，請另增派一個 EXP
（本例為 EXP_2）來這個 grid，同時 EXP_1 設
定這個 grid 的 scan_direction=right，意在告
訴 EXP_2 將 來 掃 描 的 方 向 為
EXP_2.grid.scan_direction=right ，而概念
上，EXP_1 及 EXP_2 分屬不同兩群，分稱
group_A、group_B。 
 
而後，EXP_1 繼續往前走，EXP_3 被派進遞補
EXP_1 原先位置，直行前述相同程序，在右方佈
下 Mark_2，派 EXP_4 前往 Mark_2 位置，如圖十
四所示。這程序直到 EXP_1 偵測到障礙物，或
waiting pool 沒有支援的 EXP 為止。當 DP 佈署
完畢後，我們會要求 group_A、group_B 轉向，
然後執行 BFSP，如圖十五所示。 
 
IF（group_C.sensor.front = obstacle）&& 
IF（group_D.sensor.front = free || 
group_D.grid.front = unexplored） 
{ 
1. group_B execute DP. 
2. EXPs in group_C set idle state. 
3. group_D execute BFSP. 
} 
 
 
 
 
 
 
 
 
 
 
 
 
圖十七、D3GP 探勘模式 
 
4.5.1 D3GP 退化為 D2GP 
group B 知道前方為 free space，且是尚未探
勘過的區域，因此執行 DP。Group C 偵測到前
方為障礙物，故 group C 中所有 EXP 設 idle 。
group D 知道前方為 free space，但是已探勘
過區域，故 group D 中所有 EXP 亦設為 idle，
這種情節 
是 D3GP 退化為 D2GP。 
 
IF（group_B.sensor.front = free ||
（group_A.grid.front = unexplored）&& 
IF（group_C.sensor.front = obstacle）
&& 
IF（group_D.sensor.front = free || 
group_C.grid.front = explored） 
{ 
1. group_B execute DP 
2. EXPs in group_C set idle state 
3. EXPs in group_D set idle state 
} 
} 
 
4.5.2 D3GP 退化為 PSP 
group 碰到障礙物時會分為 group B、group C
及 group D。group B 知道前方為 free space，
但是已探勘過的區域，不過上方為未探勘過區
域，因此執行 DP。Group C 偵測到前方為障礙
物而設 idle。group D 知道前方為 free space，
但是為已探勘過區域，故 group D 中所有 EXP
均設 idle。在這種情下，整個 D3GP 退化為 PSP。 
 
IF（group_B.sensor.front = free ||
（group_B.grid.front = explored）&& 
IF（group_C.sensor.front = obstacle）&& 
IF（group_D.sensor.front = free ||
（group_D.grid.front = explored） 
{  
group_B、group_C、group_D execute PSP 
} 
 
5. 模擬分析 
 
5.1 模擬參數設定 
1. 模擬環境：50 x 30 （grids） 
2. Grid 解析度：20 cm / grid 
3. MS 載具設定前、左、又搭配雷射測距感測
器（超音波感測器），警戒距離 20cm，故可
忽略測具感測器散射效應影響。 
4. MS 運動速度：1 grid/sec 
5. 模擬平台：Intel Pentium IV 1.6GHz、512MB 
RAM 
 
5.2 MS 數量與探勘時間關係 
針對 EXP 團隊探勘時間本計畫也做了些觀察，
我們模擬一個 free space（後簡寫 FS，即無障
礙物環境）探勘，室內會議室探勘（後簡寫 CFR）
如圖十八及教室探勘（後簡寫 CLS）如圖十九，
實驗重覆三次求平均，模擬結果分別如圖二
十、圖二十一及圖二十二所示。 
 
 
 
 
 
 
 
 
 
 
 
圖十八、模擬會議室探勘環境 
 
就單一 EXP 探勘作比較，FS=840s 探勘時間大於
CFR=713s，這是因為在 close space 環境中，
單一 EXP 必須多走 CFR 原為障礙物的 grids 緣
故。由此推論 CLS 探勘時間應該更短，不過我
們卻發現單一 EXP 探勘時間 CLS=891s 居然會略
高於單一 EXP 於 FS 探勘時間，其原因在於 EXP
必須多花路徑規畫時間（ path planning 
time），返回原先未探勘區域探勘，尤其在環境
複雜的幾何障礙物中，會產生許多未探勘空
洞，這樣空洞本計畫稱「蟲洞」，如圖十九劃圈
