ever signed. This property is usually referred to as ”non-
repudiation”. However, in the proxy signature scheme,
there exists a dispute as to partial delegation where, aside
from the proxy signature key for the proxy signer, the
original signer can derive another proxy signature key and
save it for her/his own use to generate a valid proxy signa-
ture and impersonate the proxy signer. This problem can
be solved using the non-repudiation property, the capabil-
ity of identifying the actual signer, to further strengthen
the proxy signature scheme.
Following the development of the proxy signature
scheme, some threshold proxy signature schemes were
widely studied [9, 16]. In a (t, n) threshold proxy sig-
nature scheme, which is a variant of the proxy signature
scheme, the proxy signature key is shared among a group
of n proxy signers delegated by the original signer. Any
t or more proxy signers can cooperatively sign messages
on behalf of the original signer. So far, there have been
at least two threshold proxy signature schemes proposed
[9, 16]. Kim’s scheme [9] is non-repudiable, but Zhang’s
scheme [16] is not.
Based on Kim’s scheme, Sun [12] proposed an efficient
non-repudiable threshold proxy signature scheme with a
known signer. Sun’s scheme is more efficient than the
other threshold proxy signature schemes. The main ad-
vantage of Sun’s scheme is that the verifier is able to iden-
tify the actual signers in the proxy group. However, the
weakness of Sun’s scheme is that it is vulnerable to the
conspiracy attack [3, 6]. Hsu et al. [3] proposed a new
non-repudiable proxy signature scheme with known sign-
ers that can withstand the conspiracy attack and is more
efficient than Sun’s scheme. Technically, the security of
the above two non-repudiable threshold proxy signature
schemes is based on the discrete logarithm (DL) problem
[2, 5].
In this paper, a new secure non-repudiable proxy sig-
nature scheme will be proposed where the verifier is able
to identify the actual signers in the proxy group. Besides,
the new scheme will be able to withstand the conspiracy
attack. Moreover, the proposed scheme divides the valid
delegation period of proxy signature into many pieces.
In the different pieces of valid delegation period exists
a different proxy signature key. The goal is to increase
security.
In this article, we shall first briefly review Hsu-Wu-Wu
scheme in the following section. Then, in Section 3, our
new secure non-repudiable proxy signature scheme will
be proposed. The security and the performance analysis
of the proposed scheme will be separately discussed in
Sections 4 and 5. Finally, the concluding remarks will be
in the last section.
2 Review of Hsu-Wu-Wu Scheme
In this section, we will overview Hsu-Wu-Wu scheme [3].
Their scheme can be divided into four phases: secret share
generation, proxy share generation, proxy signature gen-
eration, and proxy signature verification. There exists a
system authority (SA) whose tasks are to initialize the
system and to manage the public directory. In the se-
cret share generation phase, SA is the party that takes
all the action. Initially, SA first selects and publishes the
following parameters: p denotes a large prime; q denotes
a large prime factor of p − 1; g denotes a generator in
GF (p) with order q; h(·) denotes a one-way hash func-
tion; mw denotes a warrant, which records the identity of
the original signer, the proxy group of the proxy signers,
the parameters t and n, and the valid delegation time,
etc; and ASID denotes an identity of the actual signer.
Each user Pi, having the public identity vi ∈ Zq, now
owns a secret key xi ∈ Z∗q and a public key yi = gxi mod p
which is certified by the certificate authority (CA). Let
P0 be the original signer and G = {P1, P2, · · · , Pn} be the
proxy group of n proxy signers.
2.1 Secret Share Generation Phase
SA first chooses the group secret key XG and calculates
the group public key YG = gXG mod p which is certified
by CA. Then, SA randomly generates a (t − 1)-degree
polynomial as
f(v) = XG + a1v + a2v2 + · · ·+ at−1vt−1 mod q (1)
with random integers ai ∈ Zq, i = 1, 2, · · · , (t− 1).
For each Pi ∈ G, SA calculates the secret share
γi = f(vi) and the corresponding public information
τi = gγi mod p, where vi is the public identity for Pi. Af-
ter that, SA separately sends γi to Pi via a secure channel
and publishes all τi’s.
2.2 Proxy Share Generation Phase
The original signer P0 performs the following steps to del-
egate the signing capability to G.
1. Choose a random integer k ∈ Z∗q and compute K =
gk mod p.
2. Compute the proxy signature key as σ = k +
x0h(mw||K) mod q.
3. Choose a polynomial
f0(v) = σ + b1v + b2v2 + · · ·+ bt−1vt−1 mod q (2)
with random integers bj ∈ Zq, j = 1, 2, · · · , (t− 1).
4. Publish Bj = gbj mod p, for j = 1, 2, · · · , (t− 1).
5. Send σi (= f0(vi)) to Pi ∈ G via a secure channel.
6. Broadcast (mw,K) to G.
Upon receiving σi, each Pi ∈ G can vali-
date it by checking the following equation:
gσi ?= y
h(mw‖K)
0 K(
∏t−1
j=1B
vji
j ) mod p. If it holds,
Pi calculates
σ′i = σi + γih(mw||K) mod q (3)
as her/his proxy share.
2
3.2 Proxy Share Generation Phase
P0 executes the following steps to delegate the signing
capability to G.
1. Choose a random number t0 ∈ Z∗q and compute the
parameter k0.
k0 = gt0 mod p
2. Compute the proxy signature key as
σ = t0 + x0h(mw||k0) mod q.
3. Send (σ,mw, k0) to Pi ∈ G via a public channel.
After receiving (σ,mw, k0), each Pi ∈ G checks whether
or not the following equation holds,
gσ ?= k0y
h(mw||k0)
0 mod p.
If it holds, each Pi uses σ as his proxy share.
3.3 Proxy Signature Generation Phase
Given a message m, any t or more proxy signers will be
proxies for P0 to sign m in this phase. Without loss of
generality, let D = {P1, P2, · · · , Pt} be the actual proxy
signers. They cooperatively sign m on behalf of P0 by
performing the following steps:
1. Each Pi ∈ D chooses a valid delegation period Tu and
finds some corresponding values, the public key eu
and public parameters (xuk, yuk) from P0’s warrant
mw.
2. Each Pi ∈ D calculates the secret siu as
siu = h(si, Tu)
and sends (IDi, siu) to each Pj for j = 1, 2, ..., t, j 6=
i.
3. Upon receiving (IDi, siu), each Pi ∈ D uses t pairs
of (IDi, siu) and (n − t) pairs of public parameters
(xuk, yuk) to construct the (n−1)-degree polynomial
fu(x) from the Lagrange interpolation polynomial as
follows:
fu(x) = du + b1,ux+ b2,ux2 + · · ·+ bn−1,uxn−1.
Here, the secret du can be derived.
4. Each Pi ∈ D chooses a random number ti ∈ Z∗q and
broadcasts ki.
ki = gti mod p
5. For each received kj (j = 1, 2, ..., t, j 6= i), each Pi ∈
D computes
R =
t∏
i=1
ki mod p,
si = tiR+ ((σ + du)t−1 + xi)h(R||m||ASID) mod q.
Here, si is the individual proxy signature which is
sent to the designated clerk.
6. For each received si, the designated clerk checks
whether the following equation holds
gsi ?= k
R
i ((k0y
h(mw||k0)
0 eu)
t−1yi)h(R||m||ASID) mod p.
If it holds, (ri, si) is a valid individual proxy signature
of m. If all individual proxy signatures are valid, the
designated clerk computes
S =
n∑
i=1
si mod q.
The proxy signature of m is (mw, k0, R, S, Tu, ASID).
3.4 Proxy Signature Verification Phase
On receiving the proxy signature
(mw, k0, R, S, Tu, ASID) for m, any verifier can verify
the validity of the proxy signature by following the steps
below:
1. From mw and ASID, the verifier can get the public
key yi of P0 and Pi ∈ G from CA and know who the
original signer and the actual proxy signers are.
2. The verifier can use Tu of the proxy signature to find
the corresponding value, the public key eu, from mw.
3. The verifier checks the validity of the proxy signature
of the m through the following equation:
gS ?= R
R(k0y
h(mw||k0)
0 eu
t∏
i=1
yi)h(R||m||ASID) mod p.
If it holds, the signature (mw, k0, R, S, Tu, ASID) for m
is a valid proxy signature and is cooperatively generated
by the proxy signers P1, P2, · · · , Pt on behalf of the proxy
group and the original signer.
4 Security Analysis
The security of the proposed scheme is similar to that
of Hsu-Wu-Wu scheme based on the well-known one-way
hash function and the discrete logarithm problem [2] cryp-
tographic assumptions. In this section, we shall make a
comparison between the proposed scheme and Hsu-Wu-
Wu scheme in terms of confidentiality as well as possible
compromising and conspiracy attacks. In Hsu-Wu-Wu
scheme, any t users in G can work together to separately
reconstruct XG and σ from Equations (1) and (2) with
their γi’s and σi’s. They can easily derive any other user
Pj ’s γj and σj . That is, they also can compute Pj ’s σ′j by
Equation (3). However, it is unreasonable that they can
do these.
In the proposed scheme, each Pi ∈ G has to protect
only one secret share si. Furthermore, each Pi ∈ G can
compute a different proxy share siu in Tu, and each dele-
gation period Tu can obtain the corresponding public key
4
