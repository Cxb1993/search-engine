3 • Grid points
2 • • • •
1 • Sensors
1 2 3 4 5
Fig. 1. A complete coverage/discrimination sensor field with 3 by 5 grids.
(The detection radius of sensor is 1.)
operate at the sleeping mode. As soon as the intrusion event
occurs, all sets of sensors are activated and work together to
locate the intruder. With this strategy, the duty cycle of each
sensor is only 1/K and the lifetime of sensor can be effectively
prolonged up to K times.
In this paper, we formulate the problem as a 0/1 integer
programming problem where the objective function is the
minimization of the total deployment cost subject to complete
coverage and discrimination constraints under a given amount
of cover K. The problem is a variant of the set K-cover
problem and thus is NP-complete [1], [15]. In the proposed
solution procedure, a Lagrangean relaxation based heuristic is
developed to solve the optimization problem [8], [9].
From papers review, we find that this study differs from
prior works in several points. First, we consider both the
energy conservation and lifetime extending during the sensor
deployment phase for target positioning. Second, we present
a mathematical model to describe the optimization problem.
This formulation can be used for an integer programming
package for optimally solving a small-scale problem, and
can be used to facilitate the development of an efficient and
effective heuristic algorithm for solving large-scale problems.
Third, a Lagrangean relaxation based heuristic is proposed to
solve the problem. Finally, the relationship between the de-
ployment cost and the maximum extension of system lifetime
is investigated.
The rest of this paper is organized as follows. The problem
and mathematic model then are described in sections II and III,
respectively. Additionally, the solution procedure is presented
in section IV. Furthermore, the computational results are
discussed in section V, and conclusions are presented in
section VI.
II. PROBLEM DESCRIPTION
A. Sensor Placement
In this paper, we use the grid-based placement approach to
construct WSNs [4], [5], [6], [7], [11]. The sensor field can
be represented as a collection of two-dimensional grid points
and sensors are placed on candidate grid points, as illustrated
in Fig. 1. The positioning resolution of system determines the
granularity of grid point. The distance between two adjacent
grid points is adopted as a length unit. Fig. 1 illustrates a
sensor field with 5 by 3 grid points. On the field, there are six
TABLE I
THE WORKING MODES ON THREE STATES FOR THE SENSOR NODE. THE
RADIO IS A DOMINANT POWER CONSUMER.
Power states Components of sensor node
of sensor node Processor Sensor Radio
Active active on Tx/Rx
Monitor idle on Rx
Sleep off off off
sensors place on grid points with coordinates (1, 2), (2, 1), (2,
2), (4, 2), (4, 3), and (5, 2).
This study assumes that the sensor detection model is 0/1
model [4], [5], [11]. The coverage is assumed to be complete
(1) if the distance between the grid point and the sensor is no
more than the detection radius of the sensor. Otherwise, the
coverage is assumed to be incomplete (0). For example, the
radius of the sensors illustrated in Fig. 1 is assigned to one.
It is a homogeneous sensor network. Therefore, the sensor
which is situated at (4, 3) covers grid points (4, 3), (3, 3), (5,
3), and (4, 2). Sensor locating at (2, 2) can cover grid points
(1, 2), (2, 1), (2, 2), (2, 3), and (3, 2). If each grid point in
a sensor field can be detected by at least one sensor, the field
is called completely covered sensor field. The sensor network
illustrated in Fig. 1 has complete coverage.
To locate an intruder, we define a unique power vector for
each grid point. The power vector of a grid point is constructed
according to the deployment of sensors. If a sensor covers the
grid point, constituent of the power vector of the grid point,
which is corresponding to the sensor, is set to 1, otherwise 0.
For example, as illustrated in Fig. 1, the power vectors of grid
point (1, 3) and (3, 2) are <1, 0, 0, 0, 0, 0> and <0, 0, 1, 1,
0, 0> corresponding to sensors at (1, 2), (2, 1), (2, 2), (4, 2),
(4, 3), and (5, 2), respectively. The power vector for each grid
point on the sensor field is stored on the database of the back-
end systems. Once an intruder is detected, the sensors have
to report the information to the sink nodes. According to the
received information, the back-end can obtain a specific power
vector to determine the position of the intruder. If each grid
point has a unique power vector on a sensor field, the sensor
field is completely discriminated. The sensor field in Fig. 1
is completely covered/discriminated by the sensor network,
which can provide surveillance and target-positioning services.
B. Energy-Efficient Sensor Networks
The duplicate deployment approach is a simple and intuitive
way to extend network lifetime in sensor deployment phase.
With this approach, we can deploy K duplicate sensor net-
works on a sensor field. Each of them can provide surveillance
and target-positioning services. These sensor networks operate
in relay fashion and therefore can provide up to K times
service time. However, the total cost is increased by K times
accordingly.
In this section, we propose a novel energy-efficient strategy
to cope with the problem. We deploy a sensor network such
that it includes K independent covers to support position-
ing service on a sensor field. Each cover can only provide
587
TABLE II
THE THEORETIC UPPER BOUND ON THE NUMBER OF COVERS IN THE 10 X
10 SENSOR FIELD.
r 1 2 3 4 5 6 7
Upper bound (Ur) 3 6 11 17 26 35 45
each grid point on the field can be covered by 5 sensors at
most.
Generally, it is impractical to use an infinite sensor field.
This study focuses on the case of the rectangular and finite
sensor field. For a finite sensor field, an upper bound on the
number of covers is determined by critical grid points in the
field. A critical grid point is one that is covered by a sensor
set with the smallest cardinality.
Lemma 3: On a rectangular sensor field with a finite area,
the critical grid points are located at the corner of the field.
Therefore, the upper bound of the number of covers, Ur, is
Ur = 2r + 1 +
r∑
∆y=1

√
r2 −∆y2
, where r represents the detection radius of the sensor and ∆y
is the distance from the sensor to a grid point in y axis.
In a sensor field with 3 by 5 grid points, as illustrated in Fig.
2, the radius of sensor is assumed to be one, and the critical
grid points are (1, 1), (1, 3), (5, 1), and (5, 3). According to
Lemma 3, the upper bound of the number of covers, U1, is 3.
In Fig. 2, grid point (1, 3) can only be covered by the sensors
placed in (1, 3), (1, 2), and (2, 3). Meanwhile, the corner
grid points are all covered by 3 sensors maximally. In this
case, the sensor network can be partitioned into the maximum
number of covers, 3 covers. Clearly, as shown in Fig. 2, we can
deploy three covers, using the minimum number of sensors,
14 sensors, for the 3 by 5 sensor field.
To achieve complete discrimination, the sensor radius must
be smaller than a half of the diameter of the sensor field.
Therefore, we vary the radius (from 1 to 7) to compute the
theoretic upper bound of the number of covers Ur in a 10 by
10 sensor field. Table II shows the theoretic upper bound on
the number of covers in the field. Theoretically, if radius is 7,
we can deploy a sensor network with 45 covers such that its
lifetime can be extended by 45 times.
The solution space of the problem is O((K + 1)m). When
field size, m, and the number of covers, K, increase gradually,
the solution space increases rapidly. Hence, it is necessary to
develop an efficient algorithm for this problem.
III. PROBLEM FORMULATION
The notations used to model the problem are listed as
follows.
Given Parameters:
• A = {1, 2, ...,m} : The set of the indexes for candidate
locations where sensor can be allocated.
• B = {1, 2, ..., n} : The set of the indexes for grid points
that can be covered and located by the sensor network,
m ≤ n.
• K : The number of covers required for the sensor
network.
• aij : Indicator which is 1 if grid point i can be covered
by sensor j , and 0 otherwise.
• cj : Cost function of sensor j.
Decision Variables:
• xjk : 1 if sensor j is designated to cover k of the sensor
network, and 0 otherwise.
• yj : Sensor allocation decision variable, which is 1
if sensor j is allocated in the sensor network and 0
otherwise.
Problem (IP):
ZIP = min
m∑
j=1
K∑
k=1
cjxjk (IP )
s.t. :
m∑
j=1
aijxjk ≥ 1 ∀i ∈ B, 1 ≤ k ≤ K (1)
K∑
k=1
xjk ≤ 1 ∀j ∈ A (2)
yj =
K∑
k=1
xjk ∀j ∈ A (3)
m∑
j=1
(aij − aj)2yj ≥ 1 ∀i,  ∈ B, i =  (4)
xjk = 0 or 1 ∀j ∈ A, 1 ≤ k ≤ K (5)
yj = 0 or 1 ∀j ∈ A. (6)
Physical meanings of the objective function and constraints
are briefly described as follows. Problem (IP) presents that the
objective is to minimize the total cost of sensors. Constraint
(1) requires that each grid point must be covered in every
cover of the sensor network. Constraints (2) and (3) ensure that
each sensor only belongs to one cover of the sensor network.
The discrimination constraint is
∑m
j=1(aijyj − ajyj)2 ≥ 1
that requires the Hamming distance between each pair of grid
points in the sensor network must be greater than one. And
the discrimination constraint can be rewritten as Constraint (4).
Constraints (5) and (6) require integer property of the decision
variables with respect to xjk and yj .
IV. SOLUTION PROCEDURE
A. Lagrangean Relaxation
This section presents the algorithm for solving the pro-
posed sensor placement problem. An approach based upon
Lagrangean relaxation is considered. Lagrangean relaxation is
a method for obtaining lower bounds (for minimization prob-
lems) as well as good primal solutions in integer programming
589
of the constraints are relaxed, the solutions are infeasible for
the primal problem. However, efficient heuristic algorithms
must be developed to adjust the optimal dual solutions. A
set of feasible solutions of the primal problem (IP) then can
be obtained. With increasing number of iterations, the better
primal feasible solution is an upper bound (UB) of the problem
(IP), while the Lagrangean dual problem provides the lower
bound (LB) of the problem (IP).
In this section, we develop a heuristic for obtaining primal
feasible solutions. The algorithm is shown as follows.
Step 1: Check Constraint (3) for each sensor. If yj = 1
and
∑K
k=1 xjk = 0 for sensor j, sensor j is added
to cover k′ such that pjk′ is the minimum of pjk for
all covers on sensor j. If yj = 0 and
∑K
k=1 xjk = 1
for sensor j, then let yj be one, and the sensor j is
allocated.
Step 2: For each cover k of the sensor network, check
coverage Constraint (1). If the coverage constraint
is violated, then addition procedure or exchange
procedure is repeated until the coverage constraint
is satisfied. Then, we try to drop sensors that are
redundant in terms of coverage constraint.
Step 3: Check the discrimination Constraint (4) for the
whole sensor network. If Constraint (4) is violated,
a lot of sensors are added to achieve the completely
discriminated sensor network. Afterwards, this algo-
rithm attempts to drop some sensors that are redun-
dant for coverage and discrimination constraints.
V. COMPUTATIONAL RESULTS
To evaluate the performance of the proposed algorithm, we
conduct a serial of experiments. The performance is assessed
in terms of lifetime of sensor network, deployment cost, and
computation time.
A. Scenario
The proposed algorithm is coded in C under a Microsoft
Visual C++ 6.0 development environment. All the experiments
are performed on a Pentium IV-1.4G Hz PC running Microsoft
Windows XP. The algorithm is tested on a 10 by 10 sensor
area. To achieve complete discrimination, the sensor radius
must be smaller than a half of the diameter of the sensor area.
The distance between two adjacent grid points is defined as a
length unit. Hence, seven sets of experiments are conducted,
which consider sensor radius r ranging from 1 to 7. According
to Lemma 3, each set of experiments is investigated under a
given K cover which ranges between 1 and the theoretic upper
bound on maximum number of covers, Ur, 1 ≤ r ≤ 7, as listed
in Table III.
B. Results
1) Maximum Increasing Lifetime of Sensor Network: We
first investigate whether the theoretic upper bound of covers,
Ur, can be found. Based on our assumptions, the maximum
lifetime of network is almost proportional to the number of
covers that can be found. The experimental results are listed
TABLE III
COMPARISON OF Ur BETWEEN THE THEORETICAL AND THE BEST FOUND
VALUES.
r 1 2 3 4 5 6 7
U∗r 3 6 11 17 26 35 45
U∗∗r 3 6 11 17 26 34 43
D 0% 0% 0% 0% 0% 2.9% 4.4%
∗ : the theoretic upper bound.
∗∗ : the best found upper bound.
D : degradation.
TABLE IV
SELECTED SENSOR DENSITIES OBTAINED IN EXPERIMENTS.
Sensor radius (r)
K 1 2 3 4 5 6 7
1 0.40 0.28 0.25 0.19 0.22 0.25 0.25
3 0.80 0.40 0.29 0.22 0.22 0.25 0.25
6 0.76 0.42 0.31 0.25 0.26 0.26
11 0.76 0.50 0.36 0.31 0.33
17 0.79 0.61 0.42 0.40
26 0.97 0.65 0.53
34 0.97 0.75
43 0.97
K: number of covers.
in Table III. In the first five cases, the sensor radius ranges
from 1 to 5, and the proposed algorithm can always obtain the
solution under the given upper bound of cover. Moreover, a
little difference exists between the situations where the sensor
radius is 6 and 7. The degradation of the solution quality is
less than 4.4%. From this perspective, the proposed algorithm
is very effective for maximizing the lifetime of network.
2) Deployment Cost: This study shows the best found for
the minimum deployment cost by the proposed algorithm. We
assume all sensors have the same deployment cost, hence the
overall deployment cost can be simplified as the number of
deployed sensors. In this section, the sensor density is used to
be a performance metric and it can be defined as follows:
Sensor density (%) = ( 1n
∑m
j=1
∑K
k=1 xjk)× 100%.
Table IV lists the selected results of experiments, which
shows the sensor density requirements with specific sensor
radius, r, and the number of covers, K. For example, the
sensor radius is 1 in the first experiment, and the number of
covers are 1, 2, and 3. In the first row of the Table (i.e., K =
1), we list the minimum required sensor density to support the
target-positioning functionality. Furthermore, we can observe
in the case K = 1 and K = 3 have the same deployment
sensor-density when the sensor radius is 5. That means we
can deploy a 3-cover sensor network using the same density
for a single-cover network. Consequently, the lifetime of the
sensor network can be extended up to 3 times. We can also
get the same result when the sensor radius 6 and 7 in the same
Table. These results indicate the proposed algorithm is very
energy efficiency for deploying sensor networks. Due to the
space limitation, the topologies of sensor networks obtained
in each experiment are not illustrated in this paper.
591
