 II
Abstract 
This research deals with the problem of scheduling a number of jobs on a single 
machine to minimize mean absolute deviation of job completion time about a 
common due window with maximum tardiness constraint (MAD/ maxT problem). When 
maxT constraint is imposed, the common due window is set to be large to allow the idle 
time prior to starting the first job in order to examine the effect of the maxT constraint. 
It is assumed that no penalties will occur if a job is completed within the due window. 
However, the penalties will occur if a job is completed outside the due window. When 
maxT constraint is considered for the MAD problem, we found the schedule is still 
V-shaped. The problem is classified into three cases according to the value of 
maximum allowable tardiness: △-unconstrained, △-constrained and tightly 
△-constrained cases. Some solution properties and dominance relationships will be 
proposed to expedite the solution algorithm. The exact algorithm of 
Branch-and-Bound algorithm will be developed based on these solution properties. 
Besides, in order to deal with the problems with large number of jobs, the heuristic 
algorithm will be developed. 
 
Keywords : single machine schedule, MAD, maximum tardiness, common due 
window 
 
 
 
 
 
 
 
 
 
 
 
 2
二、文獻探討 
關於單機靜態排程中提早完工處罰和延遲完工處罰加總最小化的問題可按
照到期日或到期時間窗所被安排的位置分為兩類：一類為「非限定的」
(unrestricted)，係指 N 個待排工作具有足夠大的共同到期日(common due date)，
共同到期日所在時間點不會影響最佳排程中工作的順序，也稱為大的共同到期日
(large common due date)；另一種為「限定的」(restricted)，係指最佳排程中工
作的順序會受到共同到期日所在時間點前後的影響。 
 
2.1 有關非限定的到期日或到期時間窗問題的文獻 
1981年Kanet [11] 提出處理工作沒有權重且擁有非限定的到期日的MAD問
題時，按照加工時間由小到大順序一個工作接著一個工作分別排入到期日的兩邊
使的排程呈現 V 形排列，並讓最小工作完成時間剛好等於到期日的方法，並且
證明這樣的排程是最佳排程，並且可以延伸到兩台平行機台的問題。1990 年
Baker 和 Scudder [3] 整理過去文獻對於最小化總過早和延遲處罰問題的基本特
性，並特別提到目標函數值等於每個工作的工作時間乘上所安排位置的位置權重
的觀念，所以要最小化目標函數值就必須愈小的工作時間配對愈大的位置權重，
相對愈大的工作時間就需配對愈小的位置權重。1993 年 Kramer 和 Lee [12] 把總
加權過早和延遲處罰且存在到期時間窗的問題分成兩部分，並分別求解：第一部
份是當到期時間窗的所在位置是決策變數時，利用已知特性發展出啟發式演算法
決定到期時間窗被安排在排程中的位置；第二部分是當到期時間窗的所在位置屬
於已知的參數時，利用動態規劃的方式來求解最佳排程，另外提到當到期時間窗
的所在位置大於所有工作時間加總時，此部分問題求解方式跟第一部份求解方式
相同。1994 年 Weng 和 Ventura [22] 整理過去文獻對於單機 MAD 問題的特性，
並參考 Kanet[1]的最佳排程方法，將適用於到期日的演算法延伸至可以求解非限
定的到期時間窗的 MAD 問題，同樣可以獲得最佳排程。1995 年 Sen 和 Dileepan 
[16] 同樣利用分支界限演算法並提供很嚴謹的下限值讓節點刪除更有效率，求
解速度更快，演算法用以求解非限定的到期日以及二次函數的處罰問題並且容許
排程最前面有閒置時間。1996 年 Chen [8] 增加額外批次成本，發展最佳排程的
定位判斷方式，並建構動態規劃模式決定到期日的最佳位置。1996 年 Liman、
Panwalkar 以及 Thongmee [13] 解決安排到期時間窗問題，證明到期時間窗內所
有工作加工時間都小於提早或延遲的工作加工時間，以及探討到期時間窗在排程
最前面和排程最後面的兩種特殊情況。1997 年 Azizoglu 和 Webster [2] 提到最佳
到期時間窗的定位法則是由 Kramer, F.-J.和 Lee, C.-Y.(1993)所提出，[2]中另外提
出 }{E 和 }{T 分別的特性再利用分支界限演算法求解問題。1999 年 Wu 和 Wang 
[23] 對於有額外完工時間處罰的問題證明到期時間窗之最佳定位法則，並用優
勢特性發展 OS 演算法且證明其為最佳排程。2001 年 Seo、Kim 以及 Lee [17] 分
析最大可容許延遲時間限制(Δ )的大小把 max/ TMSD 且擁有非限定的到期時間窗
 4
3.2 符號說明 
參數： 
N  : }{E 工作個數 + }{W 工作個數 + }{T 工作個數 = |||||| TWE ++  
iJ  : 工作命名按照 SPT 法則， },...,1{ ni =  
iP  : 工作 i的加工時間 
MS  : 所有工作的加工時間總和 ( ∑ == ni iPMS 1 ) 
],[ deD =  : 到期時間窗(假設 
i
n
i
Pd ∑=≥ 1 ) 
Δ  : 最大可容許延遲時間 
變數： 
iS  : 工作 i的加工開始時間 
iC  : 工作 i的加工完成時間 
iPW ：工作 i的位置權重 
maxT  : 排程中最大的延遲時間 
*
maxT  : 最佳排程中最大的延遲時間 
}{E  : 工作集合 }|{ eCJ ii ≤ ，排程中完成時間在時間點 e之前的所有工作集合 
}{T  : 工作集合 }|{ dSJ ii ≥ ，排程中開始時間在時間點 d 之後的所有工作集合 
}{W  : 非 }{E 也非 }{T 的所有工作集合 
][iE  : }{E 中所有工作按照 LPT 法則排的第 i個工作 
][iT  : }{T 中所有工作按照 SPT 法則排的第 i個工作 
][kJ  : 排程中排第 k 個位置的工作 
FE  : }{E 中的第一個工作 
LE  : }{E 中的最後一個工作 
FW  : }{W 中的第一個工作 
LW  : }{W 中的最後一個工作 
FT  : }{T 中的第一個工作 
LT  : }{T 中的最後一個工作 
)(SZ  : 排程 S 的目標函數值 
 
3.3 延伸特性 
延伸特性一 : 單機靜態排程中最佳排程相鄰工作和工作之間不會有閒置時間
(idle time)。 
 
 6
條件時，把
][ iE
J 和
][ jT
J 交換會改善排程。 
(3) DP
Wi i
=∑∈ ， eSFW = 且 dCLW = 的排程中，符合 LWET PPP ij ≤−< ][][0 且
1+> ji ，或 SWTE PPP ji ≤−< ][][0 且 1+> ij 的條件時，把 ][ iEJ 和 ][ jTJ 交換會改善排
程。 
(4) DP
Wi i
>∑∈ ， FWJ 跨立時間點 e且 LWJ 跨立時間點 d 的排程中，符合
{ }LWFWET SdSePP ij −−≤−< ,min0 ][][ 且 ji > ，或
{ }dCeCPP LWFWTE ji −−≤−< ,min0 ][][ 且 ij > 的條件時，把 ][ iEJ 和 ][ jTJ 交換會改善
排程。 
 
3.4 其他特性 
特性一：純粹 DgelarMAD / 問題沒有 maxT 限制的最佳排程往前移動至符合
max// TDgelarMAD 問題中的最大可容許延遲時間限制，此時的排程不會等於
max// TDgelarMAD 問題的最佳排程。 
 
特性二： max// TDgelarMAD 問題中至少存在一個最佳排程擁有以下性質：第 k 位
置的工作加工時間必大於或等於第 )2( kn −+ 位置的工作加工時間。( 當
|||| TE + 為奇數時， k 表示範圍 ( ) ⎥⎦
⎤⎢⎣
⎡ −+ 1||||
2
1,2 TE 內的所有整數值；當
|||| TE + 為偶數時， k 表示範圍 ( ) ⎥⎦
⎤⎢⎣
⎡ −+ 2||||
2
1,2 TE 內的所有整數值。) 
 
特性三： max// TDgelarMAD 問題中，最佳排程的定位： 
(1)當屬於 |||| TE = 的最佳排程時，必定符合 dCLW = 。 
(2)當屬於 2|||| += TE 的最佳排程時，必定符合 eSFW = 或 Δ+= dC n][ 至少一種。 
 
特性四： max// TDgelarMAD 問題中，對於任何 i 值和 j 值，當 ][iE 的位置權重大
於 ][ jT 的位置權重，且符合 max][][0 TPP ji TE −Δ≤−< 的條件時，交換 ][iE 和 ][ jT 會改
善排程；或當 ][ jT 的位置權重大於 ][iE 的位置權重，且符合 max][][0 TPP ij ET −Δ≤−<
 8
3.6 啟發式演算法之建立 
 max// TDgelarMAD 問題中，由延伸特性二和延伸特性三可以很清楚的知道
小工作都應排入{ }W 中，至於{ }W 中的排列順序都不會影響目標函數值的大小，
而由延伸特性五和特性三也可以很清楚知道最佳排程中{ }W 的可能定位位置，再
由延伸特性六可知最佳排程中{ }E 和{ }T 工作個數的可能情況，而延伸特性四也
可以確定最大工作時間的工作必排在排程的第一個位置，所以排程中剩下的其他
位置上應該指派給哪些工作是本研究要解決的。在啟發式演算法中本研究利用特
性二和特性四的交換法則來安排每一個工作應該排在什麼位置上才會降低目標
函數值，最後利用延伸特性一來計算啟發式演算法目標函數值的大小。詳細步驟
如下所述： 
起始狀態：{ } { } { } { } φ==== TEWU ，屬於Δ -constrained 題型。 
步驟一：把所有工作按照 SPT 的工作順序排列，根據延伸特性三，找w個最小
的工作符合 { }DPiw n
i i
≥= ∑ =1|min ，W 集合{ }W = { }wJJ ,,1 " 。未排工作
集合{ } { }nw JJU ,,1 "+= ，未排工作個數 wnU −= ，根據延伸特性六可分
成：當U 是奇數時進行步驟二，而當U 是偶數時進行步驟三。 
步驟二：根據延伸特性六，當U 是奇數時延遲工作個數 ( )1
2
1 −= UT ，提早工
作個數 TUE −= ，進行步驟四。 
步驟三：根據延伸特性六，當U 是偶數時先考慮延遲工作個數 ( )2
2
1 −= UT ；
假如已考慮過 ( )2
2
1 −= UT 的情況，接下來考慮
2
U
T = ，提早工作個數
TUE −= ，進行步驟四。 
步驟四：當 T 是奇數時取 ⎪⎭
⎪⎬
⎫
⎪⎩
⎪⎨
⎧
−+−−
2
1
2
1 ,, T
x
T
x
JJ " 共 T 個工作排入T 集合{ }T ，而當 T
是偶數時取 ⎪⎭
⎪⎬
⎫
⎪⎩
⎪⎨
⎧
−+− 1
22
,, T
x
T
x
JJ " 共 T 個工作排入T 集合{ }T ，其中
⎪⎭
⎪⎬⎫⎪⎩
⎪⎨⎧ Δ≤= TPix i|max 。 
 10
算 { } { }( )DPPT Wk kTi i −+= ∑∑ ∈∈max ，假如 Δ>maxT ，讓 Δ+= dC n][ ；假如
Δ≤maxT ，讓 eSFW = 。再根據特性一讓工作之間沒有閒置時間，再計算
目標函數值 )(SNZ ＝{ }E 造成的處罰 + { }T 造成的處罰 + { }W 造成的
處罰＝ ( )∑ −= −∗11 ][Ei E iEP i  + ( )∑ = −+∗Tj T jTP j1 1][  + 
{ }( ) ( )1+∗−∑ ∈ TDPWk k  ，假如未考慮 2UT = 情況則進行步驟三；而當
2
U
T = 情況下，讓 dCLW = 會讓{ }W 造成的處罰最小。再根據延伸特性
一讓工作之間沒有閒置時間，再計算目標函數值 )'(SNZ ＝{ }E 造成的處
罰 + { }T 造成的處罰 + { }W 造成的處罰＝ ( )∑ −= −∗11 ][Ei E iEP i  + 
( )∑ = −+∗Tj T jTP j1 1][  + { }( ) TDPWk k ∗−∑ ∈  。 ( )221 −= UT 和 2UT = 的
情況都做完後，啟發式演算法目標函數值＝ ( ) ( ){ }',min SNZSNZ ，結束
啟發式演算法。 
步驟十：啟發式演算法目標函數值＝ ( )SNZ ，結束啟發式演算法。 
 
3.7 分支界限演算法之建立 
 本研究之分支界限法演算法設計從加工時間較小工作逐漸往加工時間較大
的工作排入排程中，分支界限法的每一層級即確定目前欲排入工作將安排在{ }E
或{ }T 中，表示一個母節點只會產生兩個子節點，並且工作排入的位置是從較靠
近到期時間窗的位置開始往外圍排入，如此才能符合 V-about-window 的形式。
另外我們採用深度搜尋的分支界限法，優點在於深度搜尋能較快找到探底的節
點，並能較快更新上限值，刪除未探底節點中下限值大於或等於上限值的節點。
詳細步驟如下所述： 因為未排工作個數 wnU −= 為奇數或偶數時的求解步驟相
同，只是差異在延遲工作個數不同，所以在此本研究簡化分支界限法求解步驟，
只提出當 U 為奇數時的求解步驟。 
起始狀態：{ } { } { } { } φ==== TEWU ，屬於Δ -constrained 題型。 
步驟一：把所有工作按照 SPT 的工作順序排列，根據延伸特性三，找w個最小
的工作符合 { }DPiw n
i i
≥= ∑ =1|min ，W 集合{ }W = { }wJJ ,,1 " 。未排工作
集合{ } { }nw JJU ,,1 "+= ，未排工作個數 wnU −= ，根據延伸特性六，當
 12
四、研究結果與討論 
4.1 實驗參數設定 
在本研究中，參考 Cho、Kim 及 Lee[14]所提出之方法來建構實驗範例。實
驗範例中的每一個工作 i的工作時間 ip 是服從[1,100]的均勻分配；根據延伸特性
三可以知道小工作的完成時間都會落在到期時間窗裡面，而這些工作的排列順
序都不會影響到目標函數值的大小，所以假設有w個工作完成時間落在到期時
間窗裡面就表示最佳排程至少存在 !w 種組合，在本研究的實驗測試中，到期時
間窗( D )設定 1，目的是為了在任何測試當中，都只存在一個工作的完成時間會
落在到期時間窗裡面，如此才能更精確測試完成時間落在到期時間窗外會造成
處罰的工作個數影響求解時間的關係；而最大容許延遲時間 (Δ)限制符合
*** Δ≤Δ≤Δ ，屬於Δ -constrained 問題，為了探討 Δ大小造成求解時間和求解品
質的影響，在本研究中對於 Δ大小採取 3 個不同水準，分別為 ( )*****
4
Δ−Δ+Δ k ，
3,2,1=k 。本實驗的執行次數總共為 690 次。 
在本研究中，啟發式演算法與分支界限演算法是利用 Visual C++ 6.0 程式語
言來撰寫。求解的過程中，限定可容許的求解時間為 7200 秒的 CPU 時間，若
無法在限定的時間下求得最佳解，則以 7200 秒代替為其求解時間。本研究在評
估啟發式演算法的成效時，是採取下列公式來計算其求解品質： 
( ) %100*]1[ 最佳解
最佳解啟發式解求解品質 −−=  
 
4.2 實驗結果與分析 
本研究針對靜態單機排程問題提出啟發式演算法，以及最佳化之分支界限
演算法，以追求在有最大延遲時間限制下最小化平均完工時間絕對偏差為目標。 
在研究中參考相關文獻所提出的基礎理論與性質，加以延伸為符合本研究
範圍之特性，並利用這些特性發展出啟發式演算法以及分支界限演算法。一開
始由延伸特性二和延伸特性三可以很清楚的知道工作時間較小的工作都應排入
{ }W 中，{ }W 中的排列順序都不會影響目標函數值的大小，而由延伸特性五和特
性三也可以很清楚知道最佳排程中{ }W 的可能定位位置，再由延伸特性六可知最
佳排程中{ }E 和{ }T 工作個數的可能情況，而延伸特性四也可以確定最大工作時
間的工作必排在排程的第一個位置，所以排程中剩下的其他位置上應該指派給
哪些工作是我們要解決的。在啟發式演算法中本研究利用特性二和特性四的交
換法則來安排每一個工作應該排在什麼位置上才會降低目標函數值；而在分支
界限演算法中本研究利用特性二和特性五來刪除節點，降低求解時間，兩個演
算法的最後利用延伸特性一來計算啟發式演算法目標函數值的大小。 
經由總共 690 次實驗測試顯示，當 50≤N 的情況下，對於啟發式演算法的
求解速度而言是非常具有效率的，不管 k 值大小所造成不同的最大可容許時間限
 14
[6] Biskup, D., Jahnke, H., Common due date assignment for scheduling on a single 
machine with jointly reducible processing times, International Journal of Production 
Economics 69 (2001) 317-322. 
[7] Chen, T., Qi, X., Tu, F., Single machine scheduling to minimize weighted 
earliness subject to maximum tardiness, Computers & Operations Research 24 (1997) 
147-152. 
[8] Chen, Z.L., Scheduling and common due date assignment with earliness-tardiness 
penalties and batch delivery costs, European Journal of Operational Research 93(1996) 
49-60. 
[9] Cheng, T.C.E., Chen, Z.L., Shakhlevich, N.V., Common due date assignment and 
scheduling with ready times, Computers & Operations Research 29 (2002) 
1957–1967. 
[10] Cho, S.A., Kim, C.B., Lee, D.H., Single machine MAD/Tmax problem with a 
common due date, Computers & Operations Research 29 (2002) 1099-1113. 
[11] Kanet, J.J., Minimizing the Average Deviation of Job Completion Times about a 
Common Due Date, Naval Research Logistics Quarterly 28(1981) 643-651. 
[12] Kramer, F.J., Lee, C.Y., Common Due-Window Scheduling, Production and 
Operations Management 2 (1993) 262-275. 
[13] Liman, S.D., Panwalkar, S.S., Thongmee, S., Determination of common due 
window location in a single machine scheduling problem, European Journal of 
Operational Research 93(1996) 68-74. 
[14] Ng, C.T.D., Cheng, T.C.E., Kovalyov, M.Y., Lam, S.S., Single machine 
scheduling with a variable common due date and resource-dependent, processing 
times, Computers & Operations Research 30 (2003) 1173–1185. 
[15] Rabadi, G., Mollaghasemi, M., Anagnostopoulos, G.C., A branch-and-bound 
algorithm for the early/tardy machine scheduling problem with a common due-date 
and sequence-dependent setup time, Computers & Operations Research 31 (2004) 
1727-1751. 
[16] Sen, T., Dileepan, P., Lind, M.R., Minimizing a weighted quadratic function of 
job lateness in the single machine system, International Journal of Production 
Economics 42 (1995) 237-243. 
[17] Seo, J.H., Kim, C.B., Lee, D.H., Minimizing mean squared deviation of 
completion times with maximum tardiness constraint, European Journal of 
Operational Research 129 (2001) 95-104. 
[18] Su, L.H., Chang, P.C., A heuristic to minimize a quadratic function of job 
lateness on a single machine, International Journal of  Production Economics 55 
(1998) 169-175. 
[19] Sundararaghavan, P.S., Ahmed, M.U., Minimizing the Sum of Absolute Lateness 
