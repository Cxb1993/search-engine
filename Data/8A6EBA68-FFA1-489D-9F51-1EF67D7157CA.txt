摘要 
本計劃是在無線感測網路上以調整感測半徑和搭載行動載具來延長目標監控的生命週
期。目標監控的問題近幾年也成為大家都在探討的問題。雖然有人證明為 NP-complete 的
問題，有許多學者將此問題轉換成其他問題，例如最大資料流量是考慮到目標監控的資料
傳輸的電量消耗問題，只有考慮到將感測資料回傳到基地台，並沒有考慮到感測時所消耗
的電量。我們會先針對無行動載具的無線感測網路的監控問題討論，找出幾個有關影響演
算法效能的因素，並提出我們的演算法，以模擬實驗來比較各種演算法效能，實驗結果中，
考慮較多因素的演算法會達到預期的效果。行動式無線感測網路我們提出了一個演算法給
搭載行動載具的感測器去計算是否該移動，並且往哪裡移動，我們發現電量的多寡對於行
動載具的感測器是相當重要的。 
 
關鍵字: Target coverage, Sensor networks, Optimization 
1. 前言 
近年來無線感測網路因為技術層面的提升，吸引了各方面的研究和廣泛的應用。無線
感測網路的感測器特性是體積小、成本低、低電量消耗，並且可以感應自身周圍的環境，
並且能將自身感測到的資料與在自己通訊半徑內的感測器透過無線傳輸協定(如：zigbee)做
資料的傳輸。無線感測網路可以感測和處理環境的資料並且可以透過無線網路將資料傳遞
給鄰近的感測點[1]。無線感測網路可以用在許多用途上，像是健康照顧、軍事用途和監控
系統上。例如在健康照顧上，我們可以在老人、病人或是幼童的身上或是可以攜帶的配件
上加上感測器，用來觀察他們的身體狀況。在軍事用途上，我們可以在戰場上部署無線感
測器來偵測敵人車輛或是軍隊的移動[2]，或是在建築物裡部署感測點來確保安全性和夜間
監視。 
而無線感測網路的電源是裝備電池來當能源使用，所以每個感測器的電量是有限制
的，如何去有效的利用這有限的資源一直是一個很重要的議題。這些議題包含如何媒介存
取控制(medium access control)[3, 4]、節省電源(power saving)[1]、目標追蹤(target tracking)、
網路的資料傳送路徑(routing)[6]之方式、網路的覆蓋問題(coverage)[2, 5]、網路的連結強度
等。 
通常覆蓋問題可以大致上區分成三個大議題來做探討：目標覆蓋問題(Targets Coverage 
Problem)、區域覆蓋問題 (Area Coverage Problem)和柵欄覆蓋問題 (Barrier Coverage 
Problem)。 
2. 研究目的 
以上三個大議題之中，區域覆蓋問題(Area Coverage Problem)在近年來已經有許多學者
提出很好的解決方式[10, 18, 19]。另外兩個問題在最近也被許多學者討論與研究中[7, 8, 
11]。 
源效率優先考量式演算法(Energy Efficient First Algorithm, EEFA)概念，提出了兩個相同名
字的分散式演算法，此問題雖然也是目標覆蓋問題 ，但是條件是在目標物都有相同數量不
同性質待測屬性的情況下，感測器不一定會有全部的感測元件，利用感測器的感測元件在
它鄰近的感測器之中的重要性來決定感測器開啟的先後順序。 
在[16, 17] 中，此兩篇論文都考慮到行動式的感測網路，其中[16]作者提出了以行動式
的感測器，依據資料傳輸的斷點來做行動式的感測網路移動的位置，而並非隨機的移動，
隨機的移動可能會造成多餘的電量消耗。在[17]之中作者提出了一個分散式的演算法，撒下
去的行動式感測器根據作者的演算法移動到達成區域覆蓋。 
4. 研究方法及成果 
接下來，我們會先針對每一個感測器並無搭載行動載具的狀況去介紹我們所設計出來
的演算法以及會影響整體監控生命週期長度的因素狀況分析，而會影響到最明顯的就是在
演算法中考慮到電量的因素。 
我們假設每一個感測器所搭載的感測元件是有 R-C 個，R 是最大的感測半徑，C 是開
啟感測元件至少要消耗的電量。每一個感測的半徑差為一單位長度，所以我們可以視為每
一個感測器的感測半徑為可完整調整到與目標物的距離相同，感測器消耗的電量與距離的
平方正比[15]，一個感測器可同時感測到在感測半徑內多個目標物。 
設計有效的排程方法使整個網路存活時間延長是本節的目標。以下幾個演算法都是集
中式演算法。其中大致上分為 Greedy Algorithm I、Greedy Algorithm II、Greedy Algorithm 
III、Maximum Weighted Matching Algorithm和 Estimated Lifetime Algorithm，每一個的特性
都有些許的不同。 
設計感測器監控目標物的演算法影響到生命週期下列許多的因素，包括： 
1. 一個感測器監控到目標物數目。 
2. 感測器電池剩餘電量。 
3. 平衡感測器的電量消耗：考慮感測器電量消耗的情況。 
4. 感測器與目標物之間的距離。 
5. 感測器移動所消耗之電量。 
6. 感測器分佈之情況。 
7. 目標物分佈之情況。 
在這一節沒有探討到可移動的感測點，所以我們在這針對我們提出的演算法考慮的因
素做列表，也就是前四項因素列表如下： 
表 I：影響的因素 
 一個感測器監
控到目標物數
目 
感測器電池剩
餘電量 
感測器整體電
量消耗平衡狀
況 
感測器與目標
物之間的距離 
Target都檢查完就到Step 5；否就回到Step 1。 
Step 5：檢查是否全部Target都被監控，如果是則lifetime++且回到Step 1；否則結束。 
兩個主要影響網路監控時間的因素為完全覆蓋和一個感測器監控到一個目標物，我們
要來利用這兩個概念，使用一個很傳統的圖論技巧- maximum matching algorithm [9]來解決
此問題，目標覆蓋問題可以轉換為二分圖來思考，其中的關係線也可以加上權重值，所以
這問題可以轉換成最大權重完美配對問題(Maximum Weighted Perfect Matching)[9]。 
以下我們對於轉換成配對問題(Maximum Weighted Perfect Matching)[9]演算法舉例作
說明。我們假設有 5 個感測器與 5 個目標物，想要找出最長的網路存活時間，首先我們先
紀錄每個感測器對於每個目標物的預估監控時間值，如果無法監控到的就表示為 0，如圖
一。 
 
圖一：單位回合內目標物和感測器的預估表。 
接下來，我們利用此陣列做最大預估監控時間配對 (Maximum Weighted Perfect 
Matching)[9]，得到配對出的預估監控時間值總和為最大。再去將感測器開啟到與配對到目
標物的距離，若是有感測器開啟時可以覆蓋到多個目標時，會將不必要開啟的感測器關閉。 
圖一配對好的感測器和目標物如圖二，S1到 S5為感測器，T1到 T5為目標物，實線為配
對好的感測器和目標物，虛線是配對時所用到的輔助線。表 III就是我們MWPM 演算法。 
 
圖二：圖一的配對結果。 
表 III：Maximum Weighted Perfect Matching Algorithm 
Step 1：去計算每一個感測器可以監控到各個目標的最大監控時間，若是監控不到就以 0為代表。 
Step 2：若是感測器較多，就把目標物補上虛擬點否則就將感測器補上虛擬點。 
 
圖三：t 是目標物集合。S 是感測器集合。(a)感測器覆蓋狀況。(b)5(a)的二分圖。 
為了將目標覆蓋問題公式化，對於在演算法中會用到的符號作如下的介紹： 
Bji：效益值，評估當感測器 j 開啟監控到目標物 i 有多少個目標物可以被監控到。 
ji
ji
j
ji Ce
E
B ×=
，
當 Sj∈ ( )iTϕ . 
Cji：當 Sj監控 Ti時，此範圍內尚未被監控到的目標物。 
eji：當 Sj監控 Ti時，感測器開啟所要消耗的感測元件電量。 
Ti：需要被監控的目標物 
Sj：用來監控目標物可調感測半徑的感測器個數。 
i：目標物編號。i=1~n。 
j：感測器編號。j=1~m. 
R：感測器最大的感測半徑大小。 
( )iTϕ ：在目標物 i的感測半徑內的感測器。 
即 ( )iTϕ ={ Sj ⎪d(Ti, Sj)≦R，where Sj∈S, Ti∈T} where 1≤i≤n, 1≤j≤m, Ti=(xi, yi), Sj=(xj, yj), d(Ti, 
Sj)= 22 )()( jiji yyxx −+−  。 
rji ：Ti 和 Sj 的距離，當 Sj 監控 Ti。 
rji =d(Ti,Sj)≦R, where Sj∈ ( )iTϕ , Ti∈T。 
Emax：感測器開啟最大感測半徑所消耗的最大電量。 
Ej：Sj的剩餘電量。 
Lifetime：此感測網路存活的回合數。 
ELT的演算法如下表： 
表 IV: Estimated Lifetime Algorithm 
Step 1：記錄 ( )iTϕ 。 
Step 2：計算 eji。 
Step 3：依序去計算 Ti的 ELTi值  (i=1,2,3,…,n)。 
Step 4：將 Ti依照 ELTi值的大小由小排到大。 
Step 5：由 Ti開始排程(ELTi數值最小的優先排程 i=1,2,3,…,n)。 
我們能夠將(1)和(2)其中的幾個參數為已知，而只有 x為未知數，則函式 M(x)=F(x)-G(x)
為一個曲線函式，M(X)函式如下： 
Ced
En
Cxde
mxEnxM +−+−
−= 22)()(  (3) 
依照(3)式，我們可以求出其極值，也就可以知道感測器應該向目標物移動多少後才能
夠達到極值，對 x微分，我們可以導出： 
)(
2
2 Ced
eEn
mdx +−=  (4) 
由(4)我們可以發現，感測器的移動和剩餘電量 En有極大的關係，當 En越大時，也就
是剩餘電量越多，可以移動的距離就越大，因為 En位於分母，當 En越大，d所要減去的
數值就越小，也就是可以移動的距離越遠，而且其中我們也可以看到(5)符合我們所預計的
x<=d。但是當其值計算出為負值時，也就表示不需要移動感測器，移動後也不會有較佳的
效果也就是當 d小於某個值(感測器與目標物距離太近)，就沒有移動感測器的必要性，因為
移動感測器反而沒辦法省到電源。 
當感測器的感測半徑內有兩個或是多個目標物的時候，如圖九，我們有多個目標物，
感測器要如果決定往哪一個方向移動，以及該移動多少的距離，都是會影響到目標覆蓋的
生命週期。  
圖五：一個感測器對多個目標物 
若是今天感測器 S的感測半徑內有四個鄰居 T1、T2、T3和 T4，則感測器 S4可以移動的
方向就會有四個方向，我們會希望能夠監控到這幾個目標物都能延長監控的時間，所以我
們可以利用 4.2 節所計算出來的式子來計算到各個目標物最有效率的坐標點 ST，如圖十，
可以找到四個目標物的四個點。 
 
圖六：多個目標物與感測器移動推算 
首先探討無線感測網路上的感測器數量與目標點的數量對無線感測網路存活時間的影
響。在這環境設定下，我們探討有 15個目標點的情況，感測器的數量介於 25到 75個間，
間隔為 10個。 
由圖八可清楚知道，無線感測網路的存活時間隨著感測器的增加而有提升，Bound 這
條線表示為利用 ELT 所算出最小被監控到目標物的最佳存活時間回合數，也就是目標物
ELT最小值，五種演算法都會增加無線感測網路的整體存活時間。其中的 Greedy演算法經
過改進之後可以有很明顯的提升整體存活時間。 
 
圖八：感測器的數量對於整個網路存活時間的影響，初始電量相同的情況下 
我們再來探討當每個感測器的初始電量不同的情況，初始電量設為 300~500 單位電
量。在這環境設定下，我們探討有 15個目標點的情況，感測器的數量介於 25到 75個間，
間隔為 10個。 
 
圖九：感測器的數量對於整個網路存活時間的影響，初始電量不同的情況下。 
由圖九可以的知道，ELT 此演算法很適合在初始電量不同的情況下，非常靠近 Bound
的 lifetime。之後的幾個實驗在電量不同的情形下，都可以發現到這一種特性。 
接下來，探討無線感測網路上的目標數量對無線感測網路存活時間的影響。在這環境
設定下，我們探討有 100個感測器的情況，目標的數量介於 15到 65個間，間隔為 10個。 
接下來我們會將感測器移動的方法以LEA演算法來當有行動式感測器和沒有行動式感
測器的排程來實驗，我們會在隨機的撒下感測器完成後，先以第四節所提出的移動方法調
整感測器的位置，等所有感測器位置調整完成以後，再以 ELT的排程方式來做目標物的監
控，一開始先對感測器數量增多來看與移動感測器之間的關係，如圖十二，在初始電量 1000
單位的情況下，雖然感測器移動之後的生命週期有比沒移動的生命週期長，但是感測器的
移動是否能幫助延長整體無線感測網路生命週期與感測器數量沒有絕對的關係，與感測器
的分佈狀況有關，但是感測器增多對於整體的生命週期是有幫助的。 
 
圖一二：感測器增加與感測器移動間的關係 
最後我們會將感測器的初始電量做增加的動作來觀察生命周期是否和我們所推測的一
樣會增加。當初始電量增加的時候，我們可以得知感測器可以移動的距離就會變遠。 
 
圖十三：初始電量與感測器移動的關係 
由圖十三我們可以發現當初始電量越多時，感測器搭載行動載具對於延長整體感測網路是
越有幫助的，不過由於會影響到感測器監控到多個目標物的因素太多，情況過於複雜，所
以目前只有對於一對一的感測器對目標物有去做數學模型上的分析。 
5. 討論 
 
本計劃主要對無線感測網路上以調整感測半徑和搭載行動載具來延長目標監控的生命
週期，提出 Estimated Lifetime Algorithm(ELT)演算法，根據找到的各個 ELT值我們可以知
道整個網路存活時間不會超過最小的 ELT值，並以調整感測半徑來節省能源，以達到無線
感測網路存活時間延長。將行動感測器加入考量後，我們有分析數學模型，我們提出了一
[16] Ryo Katsuma, Yoshihiro Murata, Naoki Shibata, Keiichi Yasumoto, Minoru Ito, “Maximizing Lifetime of 
Wireless Sensor Networks with Mobile Sensor Nodes,”  The Ninth International Conference on Mobile Data 
Management Workshops, April 2008, pp. 141 – 150. 
[17] Hua Wang, Yi Guo, “A decentralized control for mobile sensor network effective coverage,” The Proceedings of 
the 7th World Congress on Intelligent Control and Automation, June 2008, pp. 473 - 478. 
[18] Ke Cheng, Prithvirai Dasgupta, “Dynamic Area Coverage using Faulty Multi-Agent Swarms,” IEEE/WIC/ACM 
International Conference on Intelligent Agent Technology, November 2007, pp. 17 – 23. 
[19] Gallais Antoine, Carle Jean, Simplot-Ryl David, Stojmenovic Ivan, ”Ensuring Area k-Coverage in Wireless 
Sensor Networks with Realistic Physical Layers,” 5th IEEE Conference on Sensors, October 2007. pp. 880 – 
883. 
 
