2 
 
整體非同步-局部同步(Globally-Asynchronous Locally-Synchronous, GALS) 的設計方法
最初是由 D. M. Chapiro於 1984年的博士論文中所提出 [5]。在 GALS系統中，各個電路模
組彼此間是以非同步方式進行資料傳遞。為了使同步模組得以操作於非同步環境中，我們
需要一個非同步轉換介面。這個介面電路一方面要管理同步模組與外界的資料傳遞工作，
同時也要負責提供同步模組所需要的局部時脈(local clock)。為了避免同步模組間因傳遞資
料所衍生的暫穩態問題，這個時脈還必須能於資料交換進行中受到控制而暫時停止，以確
保資料傳遞的安全。因此我們需要一個可暫停(pausible)的局部時脈產生器(local clock 
generator)。每一個同步電路模組利用環型震盪器(ring oscillator)的設計方式來產生自己的時
脈信號。環型震盪器的週期是由其驅動的電路模組對操作速度上的要求來決定。使用可暫
停時脈可延遲工作時脈的取樣觸發邊緣，直到由其他電路模組來的輸入資料穩定為止，因
此可免除暫穩態問題的發生。暫停一個正在等待資料之電路模組的時脈也可以使其避免消
耗動態功率。同時，可進一步降低電路模組在時脈暫停期間之工作電壓，以減少靜態功率
之消耗。 
三、文獻探討 
要在不同時脈領域間傳遞資料需要安全的同步化動作，否則會發生暫穩態的現象。為
解決此問題，在完全同步的設計中，可使用同步器來近似資料同步化的動作 [8]，如圖 2(a)
所示。或是使用 FIFO來作為不同時脈領域間資料傳遞的輔助電路 [6]，如圖 2(b)所示。但
這兩個方法都只能減少暫穩態問題發生的機率，並不能完全加以避免，而且會有較長潛伏
期的缺點。然而在有些設計中，則是先假設同步模組間的時脈頻率有一定的比例關係，然
後再來設計針對此種比例關係的傳輸介面電路，以完全消除暫穩態的現象 [13]。雖然當頻
率比值改變時，便要再重新設計新的介面電路。但對於工作頻率比值固定的同步模組而言，
此方法可有效解決同步化問題，並可進一步利用來簡化介面電路之設計。 
       
(a)                                     (b) 
圖 2：同步模組間資料傳遞。(a)使用同步器，及(b)使用 FIFO。 
另一方面，在完全非同步的設計方法中，則是將每個同步模組重新設計成非同步模組，
彼此之間的資料傳遞便很自然地以非同步方式進行，理論上也就不會有暫穩態的問題發生 
[12]。但此種完全非同步的設計方法不僅必須將現有的同步模組重新設計，而且為了避免危
障 (hazard) 的發生，還必須耗用大量的電路面積以達成非同步控制的目的。介於完全同步
與完全非同步之間的則是 GALS的設計方法 [11, 15]。在 GALS系統中，我們希望各個電
路模組，不論本身是同步或非同步，彼此之間均是以非同步方式進行資料傳遞，如圖 3 所
4 
 
 
圖 4：使用局部時脈產生器之 GALS 模組。 
圖 4所示即為使用局部時脈產生器之 GALS模組的一般架構。圖中的同步模組可使用
傳統的同步電路方法設計，配上非同步轉換器後，即成為一個具有非同步介面的 GALS
模組。理論上，任何標準的同步模組都可以被非同步轉換器所包裝而形成一個 GALS 模
組。當資料要將從一個 GALS 模組傳至另一個 GALS 模組時，並非使用一個共同時脈來
同步資料的傳遞，而是藉由握手信號(handshake signal)來判斷資料是否可用或資料是否已
被接收，這種作法稱為成束資料(bundled data)的觀念。GALS模組中所有的埠控制電路都
是由同步模組所啟動。一般我們可用非同步有限狀態機(asynchronous FSM)來描述埠控制
電路的行為，這種描述可再利用 Yun [16] 所發展的 3D合成工具來產生對應的電路，而圖
5所示即為輸入埠控制電路的行為描述。另外一種描述控制電路的方法則是藉由信號轉移
圖(Signal Transition Graph, STG)，並利用 Petrify工具來合成 [7]。GALS模組內局部時脈
的產生也可利用外部時脈源與時脈閘控來達成，如圖 6所示。 
 
圖 5：輸入埠控制電路之 AFSM描述。 
 
圖 6：使用時脈閘控之 GALS 模組。 
6 
 
2. 電路實作 
在本計畫中我們分別對非同步轉換器內的輸出入埠控制電路以及環收發器內的狀態控
制器、選擇電路、仲裁電路做功能驗證，而後再進行整個環收發器的模擬。所有的電路皆
是使用 structural的方式描述。最後，我們利用環狀拓撲的方式，將四組環收發器以環形方
式連接成一個四階的旁通式環狀電路，如圖 8 所示。同時我們使用八位元的資料封包來驗
證電路的正確性，其中目標位址與來源位址各為二個位元，而資料則為四個位元。在軟體
平台方面，則是使用 Xilinx ISE，來進行 Synthesize、Translate、Map以及 Place & Route的
動作，並利用 ModelSim來進行電路的 Functional 與 Timing 的模擬硬體方面，如同前述是
採用 Xilinx Vritex-II XC2V3000的晶片。圖 9為環收發器控制端電路，包含一個選擇電路、
一個仲裁電路、與三個狀態控制器，而圖 10則為其模擬波形圖。 
 
圖 8：GALS環狀結構。 
 
圖 9：環收發器控制端電路。 
