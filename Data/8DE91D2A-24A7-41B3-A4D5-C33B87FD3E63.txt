行政院國家科學委員會專題研究計畫期中進度報告 
針對生物序列近似搜尋等應用來設計與實作有效的索引系統(2/3) 
Design and Implement efficient indexing system for  
its applications on approximate biological sequence searching(2/3) 
計畫編號: NSC 95-2221-E-007-031 
執行期限: 94年 08月 01日至 97年 07月 31日 
計畫主持人: 唐傳義 教授  清華大學資訊工程學系 cytang@cs.nthu.edu.tw 
共同主持人: 蔡英德 教授  靜宜大學資訊工程學系  
計畫參與人員： 林俊淵 博士  清華大學資訊工程學系 
    
 
中文摘要 
 
隨著 DNA 與蛋白質資料庫成指數倍
數成長以及所存取資料量的增加，對於特
徵標誌序列搜尋此重要生物問題，本計畫
已完成 DNA 與蛋白質特徵標記搜尋演算
法的設計並建立出一套資料索引系統，此
資料索引系統是運用過濾方法來過濾掉
不可能的候選特徵標記，經由此過濾方法
來縮短計算的時間複雜度，以便加速後來
查詢的速度。除了特徵標記搜尋之外，蛋
白質功能預測亦是許多分子生物學家所
關注的議題，在本計劃中，我們已透過蛋
白質序列以及三級結構所提供的線索，對
蛋白質功能預測提出了一個新的方法，並
應用在酵素資料的預測上，探索結合排比
方法以及運用幾何字尾樹此資料索引結
構所產生的特徵向量，來區分酵素與非酵
素資料。我們的方法是使用蛋白質序列以
及三級結構所取得的特徵值，運用支持向
量機來預測蛋白質功能。酵素與非酵素資
料集的實驗結果顯示平均精確度高於
85%，此方法比其他僅使用序列資訊的方
法還好，這亦顯示出在蛋白質功能預測
上，結合更多有價值的蛋白質結構資訊的
重要性。 
 
關鍵字詞: 特徵標記搜尋、資料索引系
統、蛋白質功能預測、幾何字尾樹、支持
向量機。 
Abstract 
 
  With exponentially increasing sizes and 
accesses of DNA and protein databases, we 
have finished designing the algorithms and 
building a data indexing system for DNA 
and protein unique signature finding in this 
project. It utilizes the filtration approaches 
to filter impossible candidates for unique 
signature. By using the filtration approaches 
to reduce time complexity, it speeds up the 
query subsequently. In addition to the 
unique signature finding, protein function 
prediction is also the important subject for 
many molecular biologists. In this project, 
we have also finished proposing a novel 
method for protein function prediction based 
on both sequences and 3-D structure 
information, and apply our method to actual 
data for enzyme prediction. We explore the 
capability of telling enzymes from 
non-enzymes by combining good features of 
alignment-based method and a newly 
proposed structure-based approach utilizing 
Geometric Suffix Tree. Our method predicts 
protein functions by training the SVM 
(Support Vector Machine) with the 
information derived from these two 
approaches. The experiments on enzyme 
and non-enzyme dataset show that the 
average accuracy is above 85%, which is 
better than the approaches with only 
sequence information. It reveals that the 
importance of combining more valuable 
enzyme and non-enzyme classification rises 
to 80%. The charged-based method [12] 
analyzes the charge interaction complement 
of the active site, pH-dependency, and so on 
to predict the active sites. 
  In this project we not only use the 
sequence-based technique but also combine 
a newly proposed comprehensive motif 
detection using the GST (Geometric Suffix 
Tree) [18] and the SVM tools, called 
SVMperf [19] to analyze the accuracies for 
enzyme and non-enzyme discrimination. 
 
Method 
A. Unique signature finding 
 
In this project, we have proposed two 
efficient algorithms to solve the problems of 
large-scale and small-scale data, and 
integrate them into a system which can be 
applied in DNA and protein unique 
signature finding application in any kinds of 
species’ databases. First we separate a 
large-scale database into a set of small runs 
which can be fitted in main memory with 
external algorithm, and then select 
appropriate candidates from each of runs 
with internal algorithm. Finally, the external 
algorithm will be executed to select truth 
candidates. The internal algorithm is used to 
speed up the computational time and the 
external algorithm is used to solve the 
large-scale data which can’t be put into 
main memory at a time. 
  Let l and d be two positive integers, 
where d ≦ l. An l-pattern is a string of 
length l over the alphabet set Σ  = 
{A,C,G,T} or the alphabet set of protein. 
Let HD(p,q) denote the Hamming distance 
between two l-patterns p and q, that is, the 
number of mismatches between p and q. If 
HD(p, q) ≦  d, we say that p (q) is 
(l,d)-mismatched to q (p), and p (q) is a 
d-mutant of q (p). We use p ≈l,d q to indicate 
p and q are (l,d)-mismatched. Let D = {y1, 
y2,…,yk} denote the input dataset, where the 
generic string yi, 1 ≦ i ≦ k, is an EST 
sequence over the alphabet set Σ . An 
l-pattern p ⊆  yi is referred to as a unique 
signature in D if there is no other l-pattern q 
in D such that q is a d-mutant of p. That is, 
{q|q ≈l,d p, q ⊆  yj, yj ∈  D for i≠j} = φ;. 
The unique signature discovery is to extract 
all unique patterns from the input database. 
 
Convert Dataset to Mutant Graph 
 
Let p be an l-pattern. The notation p[i, j] 
is used to indicate the substring from the i-th 
character to the j-th character in p, where i 
≦ j. We call p[1,l/2] the head seed of p and 
p[l/2 + 1; l] the tail seed.  
The head and tail seeds of a pattern are 
the counterparts to each other. We call a 
group of patterns sharing the identical seed 
string the pattern cluster. The seed string s 
shared by the patterns resided in cluster v is 
referred to as the dispatch seed of v, and v is 
the corresponding cluster of s. Cluster 
distance be denoted by CD(v, u), between 
two clusters v and u to the Hamming 
distance between the dispatch seeds of v and 
u. 
  By encoding each character in the 
alphabet set Σ with a distinct 2-bit value, 
the dispatch seed of a cluster can be 
translated to an l-bit unique integer. This 
number is referred to as ID of the cluster, 
and denoted by ID(v) for the cluster v. 
 Let R denote a collection of l-patterns. 
It is said a set C = {C1,C2, … ,Cn} of pattern 
clusters is the complete cluster set of R if 
the following criteria are satisfied, (1) 
n
i 1=U Ci = R, (2) for each p∈R, p is in Ci if 
the head or tail seed of p is identical to the 
dispatch seed of Ci∈C, (3) {s|s is a seed of p 
2 R} = {t|t is the dispatch seed of Ci∈C} 
and (4) the dispatch seeds of Ci and Cj are 
not identical if Ci ≠ Cj and Ci, Cj∈C. The 
notation vu  denotes the directed link from 
cluster v to cluster u, and the weight of vu  
is set to the cluster distance between v and u. 
A mutant graph over R is a directed and 
weighted graph consists of the complete 
cluster set of R and a link set. It represents 
the neighborhoods among the clusters. We 
w-segments are collected in the set H. Given 
a positive integer n, we select a set Z = 
{z1, … , zn} of n cores from H such that the 
number of mismatches between two cores in 
Z exceeds the predefined threshold α. The 
dissimilarity between cores helps to 
partition the dataset. Assume h is a segment 
in H. The core z is selected from Z such that 
the Hamming distance between h and z is 
minimum. We retrieve the l-patterns from h, 
and then add the patterns into the run 
corresponding to z. 
 
B. Protein function prediction 
Feature vector for a protein structure 
GST features 
 
  The nodes of the GST represent frequent 
substructures in a set of protein structures 
used for constructing the GST (Fig. 1). Thus, 
if we are given a training set of structures, 
we can obtain a set of candidate 3-D motifs 
by constructing the GST. We call the 
training set used for constructing the GST 
'Train-B', which is an arbitrarily chosen 
subset of the entire training set, called 
'Train-A'.  
  After obtained the candidate 3-D motifs 
by constructing the GST, we next consider 
how to construct a feature vector for some 
target protein structure Sj. Let M1, M2,..., Mk 
be the 3-D motifs that we get. For Mi , we 
compute all the RMSDs between Mi and all 
the Sj's substructure of length | Mi | and 
select the minimum value of them (Fig. 2). 
We let mi,j denote the value. We compute 
this value for all i, and we use { m1,j, m2,j,..., 
mkj } as a subset of the feature vector, with 
which we will predict the protein function. 
  It takes O(|Mi|n
2) time to compute the 
feature vector for structure Sj, by using the 
incremental RMSD computation technique 
(Shibuya, 2006). (Without it, it would 
require O(|Mi|n
3) time.)  
 
Dimension reduction by GST feature 
selection 
 
  The average GST made from the Train-A 
has more than six hundred thousand nodes 
in our experiments. It is time-consuming to 
compare all the target structures against the 
GST. We develop simple three phases 
filtering approach to reduce the dimension 
of the feature space and decrease the total 
computational time. 
 
phase (1) Log probability-based statistics   
 
  Let pi be the probability that an enzyme 
has a substructure similar to Mi. Similarity, 
let qi be the probability that a non-enzyme 
has a substructure similar to Mi. If these two 
values are significantly different for Mi, we 
consider Mi is important. Hence we claim 
that Mi is valid if it satisfies the following 
expression. The following expression shows 
the log level probability difference between 
enzyme and non-enzyme. Ne, and Nne are the 
total number of enzyme and non-enzyme 
protein structures we used in the datasets we 
used. ne and nne are enzyme and non-eyzme 
structures that have substructures similar to 
Mi. θ is the heuristic threshold assigned 
manually. In the later experiment, we set the 
θ to 0.1. It is obvious that the probability of 
enzymes must be significant different from 
the probability of non-enzymes. If Mi 
satisfies the condition, then we claim Mi is 
valid. Otherwise, it is considered a 
non-valid node. 
 
θ<⎟⎟⎠
⎞
⎜⎜⎝
⎛
+
+−⎟⎟⎠
⎞
⎜⎜⎝
⎛
+
+
1
1
log
1
1
log
ne
ne
e
e
N
n
N
n  
 
phase (2) Removal of unnecessary nodes 
 
  Assume that u is a node in GST. If all the 
children of u are valid, then node u is 
considered as a non-valid node. Good 
features are designed to be independent to 
each other in the SVM, so we can delete the 
features that are dependent with some other 
features. In the case, the feature of a parent 
node in GST can be predicted by the 
children nodes. In other words, if all the 
children nodes are valid, the parent node 
should be valid. It is the redundant 
information, so we can discard it. 
Feature vector based on combining GST 
and CS 
 
  Fig. 4 and Fig. 5 illustrate how to 
combine the GST and the CS feature values. 
In the train model (Fig. 4), training set A 
(Train-A) is a source data which is needed 
to train the SVM. Half of data in Train-A 
(training data B) is used to create the GST, 
and Train-A is also used to generate feature 
vectors. By computing the RMSD between 
each protein in Train-A and 3-D motifs 
found by the GST, we get all the GST 3-D 
motif features. The feature obtained by 
comparing the i-th motif and the j-th motif 
and the j-th target structure is designed as vi,j. 
Simultaneously, input Train-A into the CS 
model to acquire all catalytic site features cj 
for j-th target structure. Then we combine 
all features from the GST and the CS to 
make feature vectors (cj, m1,j, ..., mi,j), 
1≦j≦NTrain-A, where NTrain-A is the total 
amount of protein structures in Train-A. In 
the test model (Fig. 5), the procedure is 
almost the same as the train model, but we 
don't need to construct the GST, because the 
GST is created by the train model already. 
So it can be proceeded more efficiently to 
get all features of testing set A (Test-A). The 
representation of feature vectors of the 
Test-A is fvj = (cj, m1,j, ..., mi,j), 1≦j≦NTest-A, 
where NTest-A is the total amount of protein 
structures in Test-A. 
 
Fig. 6 shows the final procedure flow chart. 
Through inputting the feature vectors which 
result from the train model, the SVMperf 
model can generate training model x. Then 
we input the feature vectors of Test-A and 
training model x into the SVMperf together to 
determine the function of every protein 
structures in Test-A. 
 
Result 
 
A. Unique signature finding 
 
We have designed the algorithms and 
built the data indexing system for the DNA 
and protein large-scale data set.  
 
Fig. 4. The flow chart of train model. After 
constructing GST, RMSD computation, and 
catalytic sites feature generation, we combine 
these features to feature vectors. 
 
 
Fig. 5. The flow chart of test model. Almost 
the same with the train model, but it omits 
the GST construction procedure. 
 
Reference 
 
[1]. Kiryu,B.M. and Kiryu,C.P. (1998), 
“Rapid identification of Candida 
albicans and other human pathogenic 
yeasts by using oligonucleotides in a 
PCR,” J. Clin. Microbiol., 73, 
1634-1641. 
[2]. Sandberg,R. et al. (2001), “Capturing 
whole-genome characteristics in short 
sequences using a naive Bayesian 
classifier,” Genome Res., 11, 1404-1409. 
[3]. Karlin,S. and Burge,C. (1995), 
“Dinucleotide relative abundance 
extremes: a genomic signature,” Trends 
Genet., 11,.283-290. 
[4]. Deschavanne,P.J. et al. (1999), 
“Genomic signature: characterization 
and classi_cation of species assessed by 
chaos game representation of 
sequences,” Mol. Biol. Evol., 16, 
1391-1399. 
[5]. Karlin,S. and Ladunga,I. (1994), 
“Comparisons of eukaryotic genomic 
sequences,” Proc. Natl. Acad. Sci., 91, 
12832-12836. 
[6]. Karlin,S. et al. (1992), “Statistical 
analyses of counts and distributions of 
restriction sites in DNA sequences,” 
Nucleic Acids Res., 20, 1363-1370. 
[7]. Goldman,N. (1993), “Nucleotide, 
dinucleotide and trinucleotide 
frequencies explain patterns observed in 
chaos game representations of DNA 
sequences,” Nucleic Acids Res., 21, 
2487-2491. 
[8]. Karlin,S., et al. (1997), “Compositional 
biases of bacterial genomes and 
evolutionary implications.” J. Bacteriol., 
179, 3899-3913. 
[9]. Gentles,A.S. and Karlin S. (2001), 
“Genome-Scale Compositional 
Comparisons in Eukaryotes,” Genome 
Res., 11, 540-546. 
[10]. Bartlett,G.J. et al. (2002) Analysis of 
catalytic residues in enzyme active sites. 
J. Mol. Biol. 324, 105-121. 
[11]. Greaves,R. and Warwicker,J. (2005) 
Active site identification through 
geometry-based and sequence 
profile-based calculations: burial of 
catalytic clefts. J. Mol. Biol. 349, 
547-557. 
[12]. Bate,P. and Warwicker,J. (2004) 
Enzyme/non-enzyme discrimination and 
prediction of enzyme active site location 
using charge-based methods. J. Mol. 
Biol. 340, 263-276. 
[13]. Porter,C.T. et al. (2004) The Catalytic 
Site Atlas: a resource of catalytic sites 
and residues identified in enzymes using 
structural data. Nucleic Acids Res., 32, 
D129-D133. 
[14]. Torrance,J.W. et al. (2005) Using a 
library of structural Templates to 
recognise catalytic sites and explore 
their evolution in homologous families. 
J. Mol. Biol. 347, 565-581. 
[15]. Holliday,G.L. et al. (2007) MACiE 
(Mechanism, Annotation and 
Classification in Enzymes): novel tools 
for searching catalytic mechanisms. 
Nucleic Acids Res., 35, D515-D520. 
[16]. Dobson,P.D. and Doig,A.J. (2003) 
Distinguishing enzyme structures from 
non-enzyme without alignments. 
[17]. Joachims,T. (1998) Text categorization 
with support vector machines: learning 
with many relevant features. In 
Proceedings of ECML-98, 10th European 
Conference on Machine Learning, 
Springer, Berlin. 
[18]. Shibuya,T. (2006) Geometric Suffix 
Tree: a new index structure for protein 
3-D structures, Combinatorial Pattern 
Matching, LNCS 4009, Barcelona, pp. 
84-93. 
[19]. Joachims,T. (2005) A support vector 
method for multivariate performance 
measures, Proceedings of the 
International Conference on Machine 
Learning (ICML).
 
全注重計算速度，即使用先處理方法來降低最後找到正確 motif的錯誤率。(2) 之前有幾
個演算法均是用來在 DNA序列中找尋所謂的 weak motif，就像是 Oligo-Analysis、Yeast 
Motif Detection、CONSENSUS、Multiple Expected Maximization(MEME)、Gibbs Sampler、
Bioprospector、以及MDscan，但是都有些限制導致實驗結果並不理想，另一種創新的方
法就是以 graph為基礎的演算法來進行 weak motif的搜尋，比起上述幾種方法其搜尋比
對速度更快速，並更精確地在 Noise Data Sets中找到 weak motif。(3) 透過(1)的方法也可
以用來找尋短片段的 Exons，一般用來找尋 Exons 的程式通常有一定的長度限制，或許
因為是短片段的 Exon，相對無法找到具唯一性特徵的部份，所以通常無法辨識出這些短
片段 Exons，但是若有 weak motif的特增作為佐證，即可幫助找到短片段的 Exons。 
感謝國科會提供我們機會可以參加 ICPR2006 及 PRIB 2006 國際論文會議，除了讓
我們能夠擴展國際觀，並且提供許多增廣研究知識的途徑，之後會努力將所學所得應用
在生物資訊的研究上，相對提供在台灣所缺乏的相關研究心得，幫助台灣在生物資訊研
究一些突破性的發展。 
approaches provide more accuracy than the single-genome predictors. In addition to 
comparative analysis between genomes (e.g., ROSETTA [4], Pro-Gen [24], 
DOUBLESCAN [21], TWINSCAN [19], SGP2 [25], SLAM [1] and EXONALIGN 
[16], evidences from related organisms, such as cDNAs and ESTs of related 
organisms (e.g., GeneSeqer [8]), known proteins of related organisms (e.g., GeneWise 
[6], PROCRUSTES [15]) and known annotations of related organisms (e.g., Projector 
[20]), have been employed in the comparative approaches. Recently, several programs, 
Combiner [2], ExonHunter [7], and JIGSAW [3], devote to integrate multiple sources 
of information (e.g., multiple genomic sequences, cDNAs/ESTs and protein databases 
of related organisms, and the output of various gene predictors) to further increase 
accuracy for gene prediction. 
Currently, the gene structures for complete genome sequences are generated by 
incorporating multiple computational approaches depending on the evidence available. 
The Ensemble gene prediction pipeline uses two streams of evidence, the direct 
placement of cDNAs and ESTs on the genome of the same organism and a related 
gene in another organism which is used as a template for the homologous gene [13]. 
Although cDNA and EST collections are far from comprehensive for most organisms, 
the abundance of valuable data provided by more than 1700 complete and ongoing 
genome projects [5] (Genomes Online Database http://www.genomesonline.org, 
January 2006) could help to locate the exon-intron boundaries for organisms which 
full-length cDNA sequences have not been generated. Moreover, the previous studies 
indicate that the known gene annotations coming from homologous genes are more 
powerful in aiding gene prediction than the evidence of homologous protein 
sequences [20]. 
In this study, we present a gene prediction tool - GeneAlign. The same as Projector, 
GeneAlign employs gene annotations of one organism to predict the homologous 
genes of another relative organism. GeneAlign integrates signal detectors with 
CORAL [16] to efficiently align annotated exons with predicted sequences. CORAL, 
a heuristic alignment program, aligns coding regions between two phylogenetically 
close organisms in linear time. The approach could identify the distinctive features, 
the high degree of conservation between protein coding sequences and gene structure 
conservation between phylogenetically close organisms. GeneAlign assumes the 
conservation of the exon-intron structures, but it can also align exons which differ by 
events of exon-splitting. GeneAlign can help gene structure prediction by a fairly 
diverged annotated genome that still shares a common gene structure. Here, we show 
that GeneAlign performs well in identifying coding exons; specifically, the rates of 
missing exons and wrong exons are both low. 
 
2   Methods 
GeneAlign accepts two nucleotide sequences of homologous genes and known gene 
annotation of one of these two sequences as inputs and predicts the exon positions in 
another sequence according to the known gene annotation. The major components of 
GeneAlign for annotation-genome mapping and alignment include: (1) signal 
2.3  Gene Structure Alignments – GeneAlign 
After signal filtrations by NetStart and DGsplicer, the predicted sequences and 
annotated exons are aligned from 5’ to 3’. GeneAlign is designed for detecting multi-
exons genes. The coding exons are divided into three categories according to their 
location in the coding region, initial exon (ATG-GT, first coding exon of a gene), 
internal exon (AG-GT), and terminal exon (AG-stop codon, last coding exon of a 
gene). Splice sites are the most powerful signals for gene prediction, accurate 
modeling splice sites could improve gene prediction accuracy [9]. Thus, the 
alignments are processed from the splice acceptors, aligning the first annotated 
internal exons with regions following the candidate splice acceptors by CORAL. 
CORAL will stop aligning when the alignment score significantly drops. If the 
alignment score and aligned sequence length are greater than threshold, the aligned 
subsequence is predicted as a candidate exon. In general, the threshold is set at 
alignment score ≥ 50% and exon length ≥ 30 bp, which is determined empirically. 
Candidate splice acceptors and the following annotated exons are examined 
subsequently to search for meaningful alignments. For each aligned segment, the 
downstream boundary is delimited by an admissible candidate splice donor. A series 
of aligned segments is ended at the annotated terminal exon and delimited by a stop 
codon, e.g. TAG, TGA and TAA. The aforementioned process is repeated from 3’ to 
5’, from the last internal exons aligning with the regions following the candidate 
splice donors, and ended with initial exon. TISs are selected according to the scores 
evaluated by NetStart. This procedure retrieves possible missing exons resulted from 
underestimation of splice acceptors by DGsplicer, a single intron insertion/deletion to 
one of the exon pair, and frameshift at the 5’ end of exon pairs. Any annotated exon 
could not be mapped to the predicted sequence, the alignment score of threshold will 
be set lower, e.g., 30%, and the corresponding region is searched again. 
2.4   Performance Evaluation 
The standard performance measures on prediction accuracy defined by Burset and 
Guigó [11] are applied to compare the accuracy of gene prediction. The measures of 
sensitivity (Sn) and specificity (Sp) are respectively Sn=TP/(TP+FN) and 
Sp=TP/(TP+FP) where TP (true positives) is the number of correctly predicted genes, 
FN (false negatives) is the number of true genes missed in the prediction, FP (false 
positives) is the number of pseudo genes wrongly predicted, and TN (true negative) is 
the number of correctly predicted pseudo genes. At the exon level, the TP, FP, FN 
and, TN are the same as the definitions except that exons are compared. An exon is 
assumed to be correctly predicted only when both its boundaries are correct. ME 
(missing exons) is the proportion of annotated exons not overlapped by any predicted 
exon, whereas WE (wrong exons) is the proportion of predicted exons not overlapped 
by any annotated exons. 
In order to study the effects of sequence similarity on the performance of 
prediction accuracy, 449 homologous pairs were stratified into five classes with 
amino acid identities between two encoded proteins ranging from <60%, 60%~70%, 
70%~80%, 80%~90% and 90%~100% (Fig. 1).  
 
 
0
1 0
0
GeneWise Projector GeneAlign GeneAlign*
 
Exon Sn (%)
0
10
20
30
40
50
60
70
80
90
100
<60 60-70 70-80 80-90 90-100
Exon Sp (%)
0
10
20
30
40
50
60
70
80
90
100
<60 60-70 70-80 80-90 90-100  
Gene Sn (%)
0
10
20
30
40
50
60
70
80
90
100
<60 60-70 70-80 80-90 90-100
Gene Sp (%)
0
10
20
30
40
50
60
70
80
90
100
<60 60-70 70-80 80-90 90-100
 
Fig. 1.  Performance of the various gene predictors as a function of amino acid identities 
between two protein sequence encoded in each pair of homologous gene. We divided the data 
set by amino acid identities (<60%, 60%~70%, 70%~80%, 80%~90% and 90%~100%), and 
calculated the performance for each group. 
 
 
There are respectively 10, 21, 51, 143, 224 pairs in each class. The performances 
evaluated by the measures all exhibit the strong dependence on the amino acid 
identities for three programs. GeneAlign outperforms the others in all classes of 
sequence similarity. GeneAlign and GeneAlign* have no significant difference on the 
gene level performance. At the performance of exon level, GeneAlign also displays 
(a) Asb10 gene (NM_080871) at human genome 
 
 
 
 
 
(b) Asb10 gene (NM_080444) at mouse genome 
 
 
 
 
Fig. 2. Annotations of Asb10 at human and mouse genomes. (a) The human reference sequence 
is based on NCBI Build 35 and was produced by the International Human Genome Sequencing 
Consortium. (b) The mouse draft genome data was obtained from the Build 35 assembly by 
NCBI. The figures were produced with UCSC genome browser (http://genome.ucsc.edu/).  
4   Conclusion 
A great number of gene prediction tools have been developed to identify genes, 
whereas accurate gene identification is still a challenging problem. Each gene 
prediction tool is applicable and performs well in different stage of gene prediction 
depending on available information. Incorporate with different gene prediction tools 
can acquire higher accuracy. Direct mapping the cDNA to the genomes acquire the 
most accurate gene structure, whereas current experimental and bioinformatics 
approaches for exploring transcriptomes are yet to catch up the speed of the growing 
genomic information. However, the rapid growth of sequence repositories, especially 
the experimentally verified genes, provides ongoing genome projects an 
extraordinarily valuable data. In contrast of comparative identifying genes with 
genome sequences or protein sequences from other organisms, the genes have been 
validated in one organism helps to identify homologous genes in another organism. 
Gene structure conservation had been employed in existing gene prediction tools (e.g. 
Projector), the incorporation with gene structure conservation showed greatly 
improvement of the accuracy of gene prediction.  
GeneAlign, the same as Projector, predicts a gene by utilizing an annotated 
homologous one in the other organism. With the perspective of gene structure 
conservation aiding gene prediction, GeneAlign can provide highly accurate and 
sensitive predictions. Table 1 shows that GeneAlign performed well on gene 
prediction. The sensitivity and specificity are high at both the gene and the exon 
levels, while the rates of missing exons and wrong exons are both low. The 
applicability of CORAL results in low rate of missing exons, while aligning directly 
Predicted exon with mRNA/EST evidence 
