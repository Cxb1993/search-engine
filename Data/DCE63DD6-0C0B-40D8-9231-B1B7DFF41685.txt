 
考慮針腳限制之數位微流體生物晶片下之殘留物感知液珠繞線研究 
Research on Contamination-Aware Droplet Routing in Pin-Constrained Digital 
Microfluidic Biochips 
計畫編號：NSC 99－2221－E－006－220－ 
執行期限：99年08月01日 至 100年07月31日 
計畫主持人：何宗易助理教授 國立成功大學資訊工程學研究所 
一､中文摘要 
近年來數位微流體晶片的演進已大大改善傳統的生物實
驗步驟。藉著操作液珠的繞線，數位微流體晶片可以達到即
時生物實驗分析以及準確的生醫應用。然而，不同生化分子
交叉殘留的問題已經變成液珠繞線階段中最重要的問題。為
了克服此問題，目前的數位微流體晶片大多採用清洗液珠來
清除數位微流體晶片上的殘留物。然而，因為要顧及許多限
制及成本考量，要同時考慮一般液珠及清洗液珠的正確移動
使繞線問題困難許多。此外，隨著數位微流體晶片設計的複
雜度增加，數位微流體晶片上針腳最小化的問題也是極為重
要的課題。 
    在這個國際合作計畫中，我們想要與美國杜克大學共
同發展一個考慮針腳限制之數位微流體晶片下之殘留物感知
的液珠繞線演算法。由於 Krishnendu Chakrabarty 教授是世
界上研發數位微流體晶片自動化的大師，希望藉由其研究團
隊所累積的經驗，能提昇國內此領域的提昇。 
 
關鍵詞：交叉殘留、數位微流體生物晶片、針腳最小化、繞
線 
 
二､英文摘要(Abstract) 
Recent advances of digital microfluidic biochips (DMFBs) 
have revolutionized the traditional laboratory procedures. By 
providing the droplet-based system, DMFB can achieve real-time 
biological analysis and safety-critical biomedical applications. 
However, the contamination problem caused by liquid residue 
between different biomolecules has become a crucial design 
problem for the droplet routing stage. To overcome this problem, 
a wash droplet is introduced to clean the contaminations on the 
surface of the microfluidic array. However, the routing of wash 
droplets need to consider not only the practical constraints 
imposed by the fluidic property but also the contamination 
constraint, which increases the design complexity of droplet 
routing stage. Furthermore, with the increasing design 
complexities, the design of pin-constrained DMFBs is of practical 
importance for the emerging marketplace. In this international 
project, we would like to co-develop a contamination aware 
droplet routing algorithm for pin-constrained DMFBs. 
Furthermore, by this cooperation, we can verify the correctness, 
efficiency, and effectiveness of our algorithm on the real DMFB 
provided by Duke University.  
 
Keywords: Cross Contamination, Digital Microfluidic Biochips, 
Pin Minimization, Routing 
 
三､成果 (Publications) 
1.  T.-W. Huang, C.-H. Lin, and T.-Y. Ho, "A Contamination 
Aware Droplet Routing Algorithm for the Synthesis of Digital 
Microfluidic Biochips," IEEE Transactions on Computer-Aided 
Design of Integrated Circuits and Systems (IEEE TCAD), vol. 29, 
no. 11, pp. 1682-1695, November 2010 (Regular Paper) 
(EI/SCI).  
2.  T.-W. Huang and T.-Y. Ho, "A Two-Stage ILP-Based Droplet 
Routing Algorithm for Pin-Constrained Digital Microfluidic 
Biochips," IEEE Transactions on Computer-Aided Design of 
Integrated Circuits and Systems (IEEE TCAD), vol. 30, no. 2, pp. 
215-228, February 2011 (Regular Paper) (EI/SCI).  
3.  S. Chou, C.-S. Han, P.-K. Huang, K.-F. Tien and T.-Y. Ho, 
"An Effective and Efficient Framework for Clock Latency Range 
Aware Clock Network Synthesis," IEEE Transactions on 
Computer-Aided Design of Integrated Circuits and Systems 
(IEEE TCAD), vol. 30, no. 7, pp. 1045-1057, July 2011 (Regular 
Paper) (EI/SCI).  
4.  T.-W. Huang, S.-Y. Yeh, and T.-Y. Ho, "A Network-Flow 
Based Pin-Count Aware Routing Algorithm for Broadcast 
Electrode-Addressing EWOD Chips," Proceedings of IEEE/ACM 
International Conference on Computer-Aided Design (ICCAD-
2010), pp. 425-431, San Jose, CA, November 2010. 
5.  T.-Y. Ho, J. Zeng, and K. Chakrabarty, "Digital Microfluidic 
Biochips: A Vision for Functional Diversity and More than 
Moore," Proceedings of IEEE/ACM International Conference on 
Computer-Aided Design (ICCAD-2010), pp. 578-585, San Jose, 
CA, November 2010 (Tutorial Paper).  
6.  K.-Y. Lin, H.-T. Lin, and T.-Y. Ho, "An Efficient Algorithm 
of Adjustable Delay Buffer Insertion for Clock Skew 
Minimization in Multiple Dynamic Supply Voltage 
Designs," Proceedings of IEEE/ACM Asia and South Pacific 
Design Automation Conference (ASPDAC-2011), pp. 825-830, 
Yokohama, Japan, January 2011 (Best Paper Nomination). 
7.  Y.-L. Hsieh and T.-Y. Ho, "Automated Physical Design of 
Microchip-Based Capillary Electrophoresis 
Systems," Proceedings of IEEE International Conference on VLSI 
Design (VLSI-2011), pp. 165-170, Chennai, India, January 2011. 
8. T.-W. Huang, H.-Y. Su, and T.-Y. Ho, "Progressive Network-
Flow Based Power-Aware Broadcast Addressing for Pin-
Constrained Digital Microfluidic Biochips," Proceedings of 
ACM/IEEE Design Automation Conference (DAC-2011), pp. 741-
746, San Diego, CA, June 2011.  
9.  K.-T. Hsu, S. Sinha, Y.-C. Pi, C. Chiang, and T.-Y. Ho, "A 
Distributed Algorithm for Layout Geometry Operations," 
Proceedings of IEEE/ACM Design Automation Conference (DAC-
2011), pp. 182-187, San Diego, CA, June 2011.  
2600,000 20µm by 20µm electrodes has been demonstrated [2].
Thus, the design of droplet control scheme with pin-count re-
duction is of great practical importance for PDMFBs. Besides,
minimizations of routing time and used cells during bioassay
execution are also critical for real-time applications and high
fault-tolerant designs [6]. Hence, it is desirable to develop an
integrated routing algorithm that can concurrently handle these
concerns.
Consequently, we propose in this paper the first ILP-based
droplet routing algorithm that concurrently takes the droplet
routing and the broadcast-addressing schemes into considera-
tion for PDMFBs. The main challenge of this routing prob-
lem is to derive different constraints into ILP formulations,
while ensuring correct droplet movements and minimizing the
number of control pins. Different from the aforementioned
works, our algorithm, by using well-formulated constraints in
ILP formulations, is capable of minimizing the number of the
control pins, the number of the used cells, and the routing time
to achieve better design performance.
A. Previous Work
In DMFB marketplace, designing pin-constrained digital
microfluidic biochips (PDMFBs) is a critical issue in biochip
design automations due to their large impact on production
cost and fabrication issues. There are many state-of-the-
art algorithms in the literature for handling the pin-count
reduction problem [17], [19], [20], [23], [12]. The work
by [17] proposes an array-partition-based method to group
the electrode set without introducing unexpected fluidic-level
behaviors for scheduled fluidic operations. The work by [19]
partitions the scheduled routing paths into different regions
while minimizing the interference among these regions. Then,
for each region, a graph-coloring-based formulation is derived
to minimize the required number of control pins. However, the
two works suffer from a high number of partitioned regions
for multi-overlapped routing paths, and thus the required pin
count may potentially increase. The work by [20] presents a
clique-partition-based algorithm to formulate the compatibility
between control signals derived from scheduled routing re-
sults. By recognizing a minimum clique partition, the required
number of control pins can be optimized. However, since the
minimum clique partition is well-known as an NP-hard prob-
lem, a heuristic method of iterative clique recognitions is also
proposed. The work by [23] adopts a two-phased algorithm of
clique recognition followed by post-processing the pin-count
reduction. They first use a heuristic to generate a set of control
pins for performing scheduled fluidic operations. Then, based
on the pin-assignment result, a stalling strategy is applied
to synchronize the movements among different droplets in
a parallel manner. However, stalling the droplet movements
also increases the total routing time, thereby introducing
another practical problem such as reducing the reliability
of biochips [6]. Recently, a novel pin-count aware design
methodology for pin-constrained digital microfluidic biochips
is proposed by [12]. This work further integrates various pin-
count saving techniques into fluidic-level synthesis, and then
systematically addresses electrodes according to pre-classified
categories of pin demand. However, the minimization issues of
pin count, number of used cells, and droplet routing time, are
still separately considered from the droplet routing. Therefore,
the solution quality may be restricted.
Although these state-of-the-art algorithms provide many
pin-count reduction techniques to tackle the steadily-increased
number of electrodes, a common drawback is the separate
considerations for droplet routing and pin-count reduction.
However, the solution quality and performance of pin-count
reduction actually depend on given routing solutions, which
reveals a demand for design convergence. Therefore, it is
necessary to develop an integrated method to assist in this
concern.
B. Our Contribution
In this paper, we propose the first droplet routing algorithm
for PDMFBs that minimizes the number of control pins,
the number of used cells, and the routing time. We first
present a basic integer linear programming (ILP) formulation
to optimally solve the droplet routing problem for PDMFBs.
Due to its complexity, we also propose a two-stage technique
of global routing followed by incremental ILP-based routing
to reduce the solution space effectively. Our algorithm divide
the original routing problem to global routing paths spatially
to reduce the solution space of ILP formulations. In this way,
the original problem is reduced to a manageable size, then
we can practically apply an incremental ILP-based method to
finding a high-quality solution within reasonable CPU time.
To achieve further efficiency, we propose a deterministic ILP
formulation that casts the original optimization into a decision
problem and solve it by a search technique with logarithmic
time complexity. The major contributions of this paper include
the followings:
• We propose the first droplet routing algorithm that con-
siders the droplet routing and the broadcast-addressing
scheme for PDMFBs. In contrast with the previous works
that start with an initial direct-addressing-based routing
result, our algorithm has higher flexibility to solve the
droplet routing problem on PDMFBs globally.
• Unlike the previous works that only minimize the number
of control pins, our algorithm can minimize not only
the number of the control pins but also the number of
used cells and the routing time, which is attributed to the
well-founded formulations of the constraints into our ILP
formulations.
• To tackle the complexity of the basic ILP formulations,
we propose a two-stage routing scheme of global routing
followed by incremental ILP-based routing. For the basic
ILP, the problem instance is whole 2D plane and it
handles all droplets simultaneously. For our two-stage
ILP, the problem instance is reduced to global routing
paths and the droplets are routed in incremental manner
that reduce the solution space significantly. Therefore,
our algorithm can obtain a high-quality solution within
reasonable CPU time.
• To further reduce the runtime, we present a deterministic
ILP formulation that casts the original routing optimiza-
4the broadcast-addressing scheme [20]. In Figure 2 (a), if we
only adopt the broadcast-addressing scheme to a given routed
result, we need 15 control pins to execute this bioassay. But
if we simultaneously consider the routing and the broadcast-
addressing scheme, as shown in Figure 2 (b), we only need
13 control pins for this bioassay. In addition to minimizing
the number of control pins in PDMFBs, it is desirable to
minimize the number of used cells and the routing time for
fast bioassay execution and better reliability [6]. In Figure 2
(c), our droplet routing algorithm can concurrently address
these optimization issues to minimize the number of control
pins, the number of used cells, and the routing time, thereby
achieving significantly better routing solution. Therefore, in
addition to simultaneously considering the droplet routing and
the broadcast-addressing scheme, it is desirable to minimize
the number of control pins, the number of used cells, and the
routing time for PDMFBs.
C. Problem Formulation
As aforementioned, in addition to minimizing the number
of control pins in PDMFBs, it is desirable to minimize the
number of unit cells that are used during routing for better fault
tolerance. This issue is especially crucial for safety-critical
applications, such as patient health monitoring or biosensors
for detecting environmental toxins [14]. A DMFB contains
primary cells for bioassay execution and spare cells for re-
placing faulty primary cells to ensure the correctness during
bioassay execution. Therefore, to maximize the number of
spare cells for better fault tolerance, it is necessary to minimize
the number of used cells for droplet routing. Furthermore,
droplet transportation time is also critical for applications re-
quiring real-time response for early warnings, such as point-of-
care disease diagnostics and monitoring environmental toxins.
Moreover, shorter droplet routing time improves the reliability
of DMFBs. Longer droplet routing time implies that high
activation voltage must be maintained for a long period of
time, thereby accelerating dielectric breakdown or defects in
physical domain on some cells [4]. Therefore, it is desirable
to minimize the droplet routing time (i.e., latest arrival time
among routing all droplets) to achieve fast bioassay execution
and better chip reliability.
Besides the objectives of droplet routing, there are two rout-
ing constraints in droplet routing: the fluidic constraints and
the timing constraint. The fluidic constraints are used to avoid
unexpected mixtures between two droplets of different nets
during their transportation and it can be further divided into
the static fluidic constraint and dynamic fluidic constraint [16].
Let di at cell (xit, y
i
t) and dj at cell (x
j
t , y
j
t ) denote two
independent droplets at time t. Then, the following constraints
should be satisfied for any t during routing:
• Static constraint: |xit − xjt | > 1 or |yit − yjt | > 1.
• Dynamic constraint: |xit+1−xjt | > 1 or |yit+1−yjt | > 1
or |xit − xjt+1| > 1 or |yit − yjt+1| > 1.
The static fluidic constraint states that the minimum spacing
between two droplets is one cell for any time t during routing
(see Figure 3 (a)). The dynamic fluidic constraint states that
Minimum spacing Unexpected mixing
(a) Static fluidic constraint (b) Dynamic fluidic constraint
Figure 3. Illustration of the fluidic constraints. (a) Static fluidic constraint.
(b) Dynamic fluidic constraint.
the activated cell for di cannot be adjacent to dj between
successive time cycles t and t+1. The reason is that there can
be more than one activated neighboring cell for dj . Therefore,
we may have an unexpected mixing between di and dj (see
Figure 3 (b)). Beyond the fluidic constraints, there exists
the timing constraint, which specifies the maximum arrival
time among routing droplets from source cells to sink cells.
Regarding these concerns, the droplet routing problem for the
PDMFBs can be formulated as follows:
Input: A netlist of n droplets D = {d1, d2, . . . , dn}, the
locations of blockages, and the timing constraint Tmax.
Constraint: Both fluidic and timing constraints should be
satisfied.
Objective: Route all droplets from their source cells to their
sink cells while minimizing (1) the number of control pins, (2)
the number of used cells, and (3) the droplet routing time.
III. BASIC ILP FORMULATION FOR DROPLET ROUTING
In this section, we propose the basic ILP formulation that
considers the droplet routing and the broadcast-addressing
scheme simultaneously for PDMFBs. We show how the ba-
sic ILP formulation optimizes the droplet routing with the
three objectives of minimizing the number of control pins,
the number of used cells, and the routing time. In addition
to sharing the routing paths in a time-multiplexed manner,
our basic ILP formulation addresses the issue of scheduling
droplets under practical constraints imposed by the fluidic and
timing restrictions. Furthermore, our basic ILP formulation
simultaneously considers the control signal sharing among
different droplet routing paths. For the sake of brevity and
generality, we focus on 2-pin net routing. The notations used
in our ILP formulations are shown in Table I.
A. Formulation Rules
One of the most difficult challenges of this problem is
to model the electrode activation constraint into an ILP for-
mulation, considering the activated (“1”), deactivated (“0”),
and don’t care (“X”) activation terms. To successfully obtain
each cell’s activation sequence, we add “must” restriction to
this constraint in the formulation. As shown in Figure 4 (a),
when droplet d1 moves from cell (1,4) to cell (2,4) at time
t, all neighboring cells of cell (1,4) and cell (2,4) must be
deactivated, except for the cell (2,4), which must be activated.
When droplet d2 stalls at its original cell at time t, all the
neighboring cells of cell (4,1) must be deactivated, while the
cell (4,1) must be activated to hold this droplet [17]. Those
cells that have no impact on droplet transportation are regarded
6In the following subsections, we introduce the objective
function and constraints of our basic ILP formulations.
B. Objective Function
Our goal is to minimize the number of control pins, the
number of used cells, and the droplet routing time. Therefore,
the objective function is defined in the following equation:
Minimize : α ·
Pmax∑
p=1
up(p) + β ·
∑
(x,y)∈C
uc(x, y) + γ · Tl (1)
where α, β, and γ are set to one as the default value.
C. Constraints
There are total ten constraints in our basic ILP formulations.
1) Source requirement: All droplets are at their source
location at time zero. Therefore, the source requirement
can be represented in the following constraint:
c(i, six, s
i
y, 0) = 1, ∀di ∈ D (2)
2) Sink requirement: All droplets must reach their sinks
within timing constraint. Once a droplet reaches its sink,
it remains there. Therefore, the sink requirements can be
represented in the following constraints:
Tmax∑
t=0
c(i, skix, sk
i
y, t) ≥ 1,∀di ∈ D (3)
c(i, skix, sk
i
y, t)− c(i, skix, skiy, t+ 1) ≤ 0,
∀di ∈ D, 0 ≤ t < Tmax (4)
3) Exclusivity constraint: Each droplet has only one lo-
cation at each time step. Therefore, the exclusivity
constraint can be represented in the following constraint:
∑
(x,y)∈C
c(i, x, y, t) = 1, ∀di ∈ D, 0 ≤ t ≤ Tmax (5)
4) Computation of latest arrival time (required droplet
routing time): If a droplet reaches its sink at time t, then
the time it reaches its sink can be computed as t times
the difference of c(i, skix, sk
i
y, t) and c(i, sk
i
x, sk
i
y, t−1).
Therefore, the computation of latest arrival time can be
represented as follows:
t · (c(i, skix, skiy, t)− c(i, skix, skiy, t− 1)) ≤ Tl,
∀di ∈ D, 0 < t ≤ Tmax (6)
5) Computation of total used cells: A cell (x, y) is used if
a droplet ever located at this cell before. Otherwise, if
there is no droplet locating at the cell (x, y) during the
whole bioassay execution, the cell is un-used. Therefore,
the above two constraints can be represented as follows:
uc(x, y) ≥ c(i, x, y, t),
∀di ∈ D, (x, y) ∈ C, 0 ≤ t ≤ Tmax (7)
uc(x, y) ≤
∑
di∈D
Tmax∑
t=0
c(i, x, y, t), (x, y) ∈ C (8)
6) Droplet movement constraint: A droplet can have only
five possible movements; stall or move to four adjacent
cells from t to t+1. Therefore, the movement constraint
can be represented in the following constraint:
c(i, x, y, t) ≤
∑
(x′,y′)∈EC5 (x,y)
c(i, x′, y′, t+ 1),
∀di ∈ D, (x, y) ∈ C, 0 ≤ t < Tmax (9)
7) Fluidic constraints: As described in Section II, there
are two fluidic constraints: static and dynamic fluidic
constraints. Static fluidic constraint states the minimum
spacing between two droplets must be one cell. In other
words, there are no other droplets in the 3 × 3 region
centered by a droplet. Therefore, the static fluidic con-
straint can be represented in the following constraints:
c(i, x, y, t) +
∑
(x′,y′)∈EC9 (x,y)
c(j, x′, y′, t) ≤ 1,
∀di, dj ∈ D, di 6= dj , (x, y) ∈ C, 0 ≤ t ≤ Tmax (10)
To prevent unexpected mixing during droplet movement,
dynamic fluidic constraint requires that at time t+1, di
cannot move to the cell (x, y), which is the neighboring
cells of dj’s location at time t. Therefore, the dynamic
fluidic constraint can be represented in the following
constraint:
c(i, x, y, t+ 1) +
∑
(x′,y′)∈EC9 (x,y)
c(j, x′, y′, t) ≤ 1,
∀di, dj ∈ D, di 6= dj , (x, y) ∈ C, 0 ≤ t < Tmax (11)
8) Electrode constraints: EC-Rule I states that if droplet
locates at cell (x, y) at time t, this cell (x, y) must be ac-
tivated. Therefore, this activated rule can be represented
in the following constraints:
a1(i, x, y, t) = c(i, x, y, t),
∀di ∈ D, (x, y) ∈ C, 0 ≤ t ≤ Tmax (12)∑
(x,y)∈B
a1(i, x, y, t) = 1, ∀di ∈ D, 0 ≤ t ≤ Tmax (13)
Note that the constraint (13) states the exclusivity con-
straint in cell set B. The following two constraints state
the deactivated condition in EC-Rule I.
8A. Routing Algorithm Overview
Figure 5 shows the overview of our two-stage ILP-based
droplet routing algorithm. The essential intuition behind our
algorithm is to reduce the complexity of the solution space in
the basic ILP formulations by using a two-stage technique of
global routing followed by incremental ILP-based routing.
Global Routing
Construct the global routing tracks
Perform A* maze searching for all droplets
Net criticality calculation
Incremental ILP-Based Routing
Select an unrouted droplet with highest criticality
Set the routing resource and construct the 
deterministic ILP formulation
Binary solution search for minimum routing 
resource Increase Gi
Can be routed?
Yes No
Termination
All nets are 
routed?
YesNo
Figure 5. Overview of our two-stage ILP-based droplet routing algorithm.
The global routing stage first constructs the global routing
tracks by analyzing the preferred moving direction of each
droplet to guide the A* maze searching. Since droplets are
recommended to route along the global routing tracks orderly,
it can reduce the number of used cells and routing complexity.
By performing A* maze routing for all droplets in global rout-
ing, the solution space for each droplet is reduced significantly
from whole 2D plane to a global routing path.
In net criticality calculation, we determine the criticality of
each droplet. A droplet is said to be critical if it is difficult
to route it, due to the severe interference with other droplets.
This criticality information will be used in the incremental
ILP-based routing stage.
Instead of considering all droplets at the same time, we
propose an incremental ILP (IILP) approach to solve the
routing problem in several manageable iterations to reduce the
number of variables and constraints of the ILP formulations
significantly. In each iteration, we select an un-routed droplet
with the highest criticality, then route it with the previous
routed droplets by solving the ILP formulations incremen-
tally. Since searching a feasible solution is much faster than
searching the optimal solution in a given ILP formulation, to
further reduce the runtime, we propose a deterministic integer
linear programming (DILP) formulation that casts the original
routing optimization problem into a decision problem. The
DILP will determine whether a feasible solution exists within
given routing resources. To search a feasible solution in a
decision problem efficiently, we perform a binary solution
search method that searches it in logarithmic time. If this
droplet cannot be routed, we will increase routing resources to
improve the routability. Finally, iterations terminate until all
TABLE II: NOTATIONS USED IN OUR TWO-STAGE ILP-BASED
DROPLET ROUTING ALGORITHM.
Gi set of used cells in global routing path for droplet di
G′i set of used cells by the previous routed droplet di
N netlist among all subproblems
T imax maximum available routing time that
can be used for routing droplet di
P imax maximum available number of control pins that
can be used for routing droplet di
T il lower bound of T
i
max
T iu upper bound of T
i
max
P il lower bound of P
i
max
P iu upper bound of T
i
max
Mi routing resources for droplet di
to route with the previous routed droplets
IS increasing scalar of routing resources
BBi set of available cells in bounding box of droplet di
Eb set of blockage cells
Esi set of available cells in the 3× 3 area center by source si
Eti set of available cells in the 5× 5 area center by target ti
droplets are routed.
B. Global Routing
The goal of global routing is to schedule the initial droplet
routing paths to reduce the complexity of the solution space in
the ILP formulations from whole 2D plane to global routing
paths. With the increased design complexities, any naı¨ve rout-
ing path may violate the timing and fluidic constraints easily.
Furthermore, if droplets route disorderly, a large number of
cells and independent control pins will be used. Hence, the
reliability and fault tolerance for bioassays will be significantly
degraded. To overcome these drawbacks, we use the same
concept of global routing tracks in [11]. We construct the
global routing tracks with the preferred moving direction to
derive an initial routing path on these tracks for each droplet.
Due to the fluidic constraints, it is desirable to maintain a
minimum space when droplets move on the microfluidic array.
Therefore, the initial global routing tracks are constructed
on non-adjacent rows and columns. Then we determine the
preferred moving direction of these tracks by analyzing the
preferred moving direction of each net. We define pmdli(x, y),
pmdri(x, y), pmdui(x, y), and pmddi(x, y) to represent the
cell (x, y) with the left, right, up, and down preferred moving
directions, respectively, within the bounding box of net ni.
Note that we use the real bounding box computed by the maze
routing algorithm. For each cell (x, y) in the bounding box of
net ni, there are two preferred moving directions which are
determined by the coordinates of source and sink. Therefore,
the preferred moving direction of global routing tracks can be
defined as follows:
• For tracks on rows (trj):
If ∑
(x,y)∈trj
∑
ni∈N
pmdri(x, y) ≥
∑
(x,y)∈trj
∑
ni∈N
pmdli(x, y)
, the preferred moving direction is right; otherwise it is
left.
10
with previous routed droplets, we determine the minimum
bounds of routing time and control pins such that all the ILP
constraints can be satisfied. That is, the goal is minimizing the
bounds of maximum allowable routing time and control pins
so that this un-routed droplet can be successfully routed with
previous routed droplets. Based on these issues, the objective
function can be redefined as follows:
Minimize : 1 (32)
Instead of directly optimizing the original objective func-
tion within fixed-size Tmax and Pmax, we try to determine
the minimum bounds for incrementally routing an un-routed
droplet with previous routed droplets. For an un-routed droplet
di with the previous routed droplets, we define the routing
resources for routing di as T imax and P
i
max, representing
the bounds of maximum allowable routing time and control
pins, respectively. In formulating constraints, we replace the
maximum allowable routing time Tmax with T imax and re-
place the maximum allowable control pins Pmax with P imax,
respectively. Since it is desirable to minimize the routing time
and control pins for routing di with previous routed droplets,
scheduling the two routing resources with minimum bounds
for a feasible solution is the most important issue.
2) Solution Search of DILP: The key issue in the DILP for-
mulation is to minimize the routing resources such that we can
successfully route an un-routed droplet di with the previous
routed droplets. Intuitively, a naı¨ve approach is to exhaustively
search all the permutations of routing resources among the
range of [0, Tmax] and [0, Pmax]. This method is time-
consuming due to the time complexity is O(Tmax×Pmax). For
example, given a droplet d1 with Tmax = 9 and Pmax = 9.
The exhaustively search requires 10 × 10 = 100 iterations
(permutations of T 1max and P
1
max) in determining the feasible
solution for routing d1 with previous routed droplets. Further-
more, this kind of method also introduces many redundant
searching iterations. For example, if we have known that the
T 1max must be larger than 4, all the permutations with respect
to T 1max = 0 ∼ 4 are not necessary. That is, a total of
5 × 10 = 50 searching iterations are redundant. To remedy
these deficiencies, we use a linear combination of the two
routing resources to be one single objective function Mi and
define the increasing scalar to characterize the growth rate
of the two routing resources. The routing resources Mi for
routing an un-routed droplet di is defined as follows:
Mi = (T
i
l + σ1 · IS) + (P il + σ2 · IS) (33)
where IS is the common growth rate of the two routing
resources T imax and P
i
max and both σ1 and σ2 are user
specified constants. As the experimental setting, we set σ1 and
σ2 to be 0.8 and 1, respectively. The objective goal is simply
searching a minimum increasing scalar for a feasible solution
instead of exhaustive permutations. Considering the previous
example, all the required permutations of (T 1max, P
1
max) are
ranged from (0, 0), (0.8, 1), (1.6, 2), ..., (7.2, 9), (8, 9), (8.8, 9),
(9, 9). Note that when one of the routing resources exceeds its
maximum allowable value, it stops increasing. Compared with
the exhaustive method with 100 searching iterations, only 13
iterations are required by finding the increasing scalar, which
greatly reduces the searching time. Based on the definition,
we have the following lemma.
Lemma 1: Given two increasing scalars IS1 and IS2
where IS1<IS2. If droplet di can be routed with IS1, then
droplet di can be also routed with IS2.
Proof: Lemma 1 follows true since when the increasing
scalar IS increases, the corresponding routing resources will
increase monotonically. If we have found feasible routing
resources that can route an un-routed droplet, increasing the
routing resources only frees up more solution space of the
ILP. Specifically, as shown in Figure 7 (a), if there exists a
feasible solution with respect to IS1, for any IS2 > IS1,
the corresponding solution space must include such a feasible
solution.
e s
o u
r c
e
Feasible region
ISu
ILP solution space
R o
u t
i n
g  
R e
Increasing Scalar
o n
d i
n g
 R
IS*
IS1
IS2
C o
r r
e s
p
Infeasible region
ISl
Feasible solution
(a)
 
(b)
Figure 7. The relationship of increasing scalar and feasibility of the DILP
formulation.
Figure 7 (b) demonstrates the essence of lemma 1: The
continuous relationship of increasing scalar and feasibility of
the DILP formulation. This feature of increasing scalar shows
the capability of solving in logarithmic time by performing
a binary search method. Therefore, to further reduce the
searching iterations, we propose a binary solution search
method to optimally search the minimum increasing scalar,
denoted by IS∗, for routing resources to route the un-routed
droplet di successfully.
Algorithm 1 shows our binary solution search method for
IS∗. When routing an un-routed droplet di, we first set the
lower and upper bound of routing resources as shown in
line 2-6. Since we route each un-routed droplet with the
previous routed droplet incrementally, and the cell set in DILP
formulation is based on the global routing paths, we define the
lower bound T il of T
i
max to be the maximum value between the
cells in global routing path Gi and T jmax found by the previous
routed droplet dj . We define the lower bound of P imax to be the
maximum value between zero and P jmax since there may exist
a subproblem without any droplet to be routed in PDMFBs.
The upper bound of T imax and P
i
max is equal to the original
constraints of T imax and P
i
max. The goal of our searching
algorithm is to search the IS∗ of Mi. By determining the
lower and upper bound of routing resources, we can find the
lower and upper bound of IS for Mi as shown in line 8-
9. Then we perform the binary solution search method to find
IS∗ in line 10-18. For each searching iteration, the mean value
ISm = (ISl+ ISu)/2 is used to formulate the DILP. Finally,
12
T3d2 T3d2 T3d2
Droplet Global routing track Bounding box Blockage Routing path
1 2 3 4 5 6 7 8 9
1
T2 T2 T2
2
3
4
T
d1
T
d1 d1
5
6
7
1
d3
1
d3
T1
d3
(b)(a) (c)
8
9
T3 1 2 3 4 1 6 8
2 5
3 7T2
d2 1 2 3 1 2
3
5
T3
6
5
8
2 1 3 2 1 3 2 1
4
d3
2 1 7 6 5 3 6 7
3 2
1
1 4 3 2 1 3 2 1
2
d3
(d) Pins: 4  Cells: 9  
Time: 9  
(e) Pins: 5  Cells: 16 
Time: 10
(f) Pins: 8  Cells: 25
Time: 13
Figure 8. This example describes the proposed two-stage ILP-based routing algorithm. (a) A DMFB with three nets (droplets d1, d2, and d3). (b) Global
routing tracks construction. (c) Adopt the A* maze searching to route droplets along the preferred routing tracks. Then, we determine the routing priority
by calculating the criticality of each net. (d)-(f) Incremental ILP-based routing. (d) Successfully route droplet d1 with 4 control pins and 9 time cycles. (e)
Incrementally route droplet d2 with the previous routed droplet d1 with 5 control pins and 10 time cycles. (f) Incrementally route droplet d3 with previous
routed droplets d1 and d2 with 8 control pins and 13 time cycles.
TABLE III: STATISTICS OF THE ROUTING BENCHMARKS
Benchmark Size #Sub Tmax #Net #Dmax
vitro-1 16 × 16 11 20 28 5
vitro-2 14 × 14 15 20 35 6
protein-1 21 × 21 64 20 181 6
protein-2 13 × 13 78 20 178 6
Size: size of the microfluidic array. #Sub: number of subproblems.
Tmax: timing constraint. #Net: total number of nets.
#Dmax: maximum number of droplets among subproblems.
activation sequences. Third, for each cell, three variables are
used to represent the pin assigned on it. Therefore, the num-
ber of variables is O(|D|WHTmax +W 2H2 +WHPmax).
Similarly, the number of constraints are bounded by the
fluidic constraints and broadcast constraints. Therefore, the
number of constraints is O(|D|2WHTmax +W 2H2Tmax +
W 2H2Pmax). In the DILP formulation, the solution space
is reduced from the whole 2D plane to global routing paths.
Since the DILP formulation is based on an incremental rout-
ing strategy, only one selected droplet (un-routed droplet) is
needed to be considered. Therefore, the number of variables
and constraints are O((W + H)Tmax + (W + H)2 + (W +
H)Pmax) and O(|D|(W+H)Tmax+(W+H)2Tmax+(W+
H)2Pmax), respectively.
VI. EXPERIMENTAL RESULTS
Our two-stage ILP-based droplet routing algorithm was
implemented in the C++ language and ran on a 2GHz 64-
bit Linux machine with 16GB memory, and GLPK [1] was
used as our ILP solver. We evaluated all routing algorithms
on the two practical bioassays used in the previous work [22]:
the in-vitro diagnostics and the colorimetric protein assay.
Table III shows the statistics of each benchmark. To show
the effectiveness and the robustness of our algorithm, we
conducted three experiments for the number of control pins,
the number of used cells, and the droplet routing time among
the direct-addressing ( [22], [8] ), the broadcast-addressing
scheme( [22] + [20] and [8] + [20] ), and ours ( [22] +
IILP, [8] + IILP, and two-stage ILP ) in Table IV-VI. In [22]
+ IILP and [8] + IILP, we replace our global routing results
with the routing paths found in [22] and [8]. Note that the
four benchmarks are derived from the placement of previous
DMFB design flow. A series of 2D placement configurations
of fluidic modules in different time intervals are obtained in
the placement stage. Therefore, the droplet routing problem
is decomposed into a series of sub-problems corresponding
to different reactions. More details can be referred to [14],
[15]. For fair comparison with [22] and [8], we compare the
maximum and average values among all subproblems. We also
compare the runtime between [22] + IILP, [8] + IILP, and our
two-stage ILP to show the effectiveness and efficiency of the
proposed method in Table VII.
For the first experiment, we compared the number of control
pins among different schemes as listed in Table IV. Compared
with the direct-addressing scheme ( [22], [8] ), the respective
maximum and average number of control pins among all
14
For the basic ILP, the problem instance is whole 2D plane and
it solves all the droplets simultaneously. For our two-stage ILP,
the problem instance is reduced to global routing paths and
the droplets are routed in incremental manner that reduce the
solution space significantly. The results show that the basic
ILP needs at least five days to solve all 2D planes of one
benchmark, which is not feasible for this problem; in contrast,
our two-stage ILP algorithm needs at most 30.13 second due
to the significantly smaller solution space. To demonstrate
the effectiveness of our IILP formulations, compared with the
integrated scheme ( [22] + IILP, [8] + IILP ), our algorithm
reduced the runtime by about ( 34%, 55% ).
Based on the evaluation of four experiments, our two-
stage ILP-based droplet routing algorithm achieves the best
result of the number of control pins (an improvement by at
most 4.53×), the number of used cells (an improvement by at
most 1.07×), and the droplet routing time (an improvement by
at most 1.14×) over the existing algorithms within reasonable
CPU times. The experimental results demonstrate that our
algorithm is very effective for droplet routing on PDMFBs.
VII. CONCLUSION
In this paper, we proposed the first droplet routing algorithm
that considers the droplet routing and the broadcast-addressing
scheme simultaneously for PDMFBs. We first presented a
basic integer linear programming (ILP) formulation to opti-
mally solve the droplet routing problem with simultaneously
minimizing the number of control pins, the number of used
cells, and the droplet routing time. Due to its complexity,
we also proposed a two-stage technique of global routing
followed by incremental ILP-based routing. To further reduce
the runtime, we presented a deterministic ILP formulation
that casts the original routing optimization problem into a
decision problem, and then solves it by a binary solution
search method that searches in logarithmic time. Extensive
experiments demonstrate that in terms of the number of the
control pins, the number of the used cells and the droplet
routing time, we acquire much better achievement than all the
state-of-the-art algorithms in any aspect.
REFERENCES
[1] http://www.gnu.org/software/glpk/.
[2] http://www.siliconbiosystems.com/.
[3] K. F. Bo¨hringer, “Modeling and controlling parallel tasks in
droplet based microfluidic systems,” IEEE Trans. on CAD, vol.
25, no. 2, pp. 334–344, 2006.
[4] K. Chakrabarty, “Towards fault-tolerant digital microfluidic lab-
on-chip: defects, fault modeling, testing, and reconfiguration,”
Proc. IEEE Int. Conf. on BioCAS, pp. 329–332, 2008.
[5] K. Chakrabarty, “Design automation and test solutions for digital
microfluidic biochips,” (invited paper), IEEE Transactions on
Circuits and Systems, pp. 4-17, 2010.
[6] K. Chakrabarty and T. Xu, “Digital Microfluidic Biochips:
Design and Optimization,” CRC Press, Boca Raton, FL, 2010.
[7] S. K. Cho, H. Moon, and C. J. Kim, “Creating, Transport-
ing, Cutting, and Merging Liquid Droplets by Electrowetting-
Based Actuation for Digital Microfluidic Circuits,” J. Micro-
electromechanical systems, vol. 27, no. 10, pp. 1714–1724,
2008.
[8] M. Cho and D. Z. Pan, “A high-performance droplet routing
algorithm for digital microfluidic biochips,” IEEE Trans. on
CAD, vol. 27, no. 10, pp. 1714–1724, 2008.
[9] S. K. Fan, C. Hashi, and C. J. Kim, “Manipulation of multiple
droplets on N × M grid by cross-reference EWOD driving
scheme and pressure contact packaging,” Proc. MEMS Conf.,
pp. 694–697, 2003.
[10] E. J. Griffith, S. Akella, and M. K. Goldberg, “Performance
characterization of a reconfigurable planar-array digital microflu-
idic system,” IEEE Trans. on CAD, vol. 25, no. 2, pp. 345–357,
2006.
[11] T.-W. Huang, C.-H. Lin, and T.-Y. Ho, “A Contamination Aware
Droplet Routing Algorithm for Digital Microfluidic Biochips,”
IEEE/ACM ICCAD, 2009.
[12] C. C.-Y. Lin and Y.-W. Chang, “ILP-based pin-count aware
design methodology for microfluidic biochips,” IEEE Trans. on
CAD, 2010.
[13] J. Peng and S. Akella, “Coordinating multiple robots with
kinodynamic constraints along specified paths,” Int. J. Rob. Res.,
vol. 24, no. 4, pp. 295–310, 2005.
[14] F. Su and K. Chakrabarty, “Design of fault-tolerant and
dynamically-reconfigurable microfluidic biochips,” IEEE/ACM
DATE, pp. 1202–1207, 2005.
[15] F. Su, K. Chakrabarty, and R. B. Fair, “Microfluidics based
biochips: Technology issues, implementation platforms, and
design-automation challenges,” IEEE Trans. on CAD, pp. 211–
223, 2006.
[16] F. Su, W. Hwang, and K. Chakrabarty, “Droplet routing in
the synthesis of digital microfluidic biochips,” Proc. IEEE/ACM
DATE, pp. 1–6, 2006.
[17] T. Xu and K. Chakrabarty, “Droplet-trace-based array partition-
ing and a pin assignment algorithm for the automated design of
digital microfluidic biochips,” Proc. IEEE/ACM CODES+ISSS,
pp. 112–117, 2006.
[18] T. Xu and K. Chakrabarty, “Integrated droplet routing in the
synthesis of microfluidic biochips,” Proc. IEEE/ACM DAC, pp.
948–953, 2007.
[19] T. Xu, W. Hwang, F. Su and K. Chakrabarty, “Automated design
of pin-constrained digital microfluidic biochips under droplet-
interference constraints,” ACM JETC, vol. 3, Article 14, 2007
[20] T. Xu and K. Chakrabarty, “Broadcast electrode-addressing for
pin-constrained multi-functional digital microfluidic biochips,”
Proc. IEEE/ACM DAC, pp. 173–178, 2008.
[21] T. Xu and K. Chakrabarty, “A droplet-manipulation method
for achieving high-throughput in cross-referencing-based digital
microfluidic biochips,” IEEE TCAD, pp. 1905-1917, 2008.
[22] P.-H. Yuh, C.-L. Yang, and Y.-W. Chang, “BioRoute: A
network-flow based routing algorithm for digital microfluidic
biochips,” Proc. IEEE/ACM ICCAD, pp. 752–757, 2007.
[23] Y. Zhao, R. Sturmer, K. Chakrabarty and V. K. Pamula, “Syn-
chronization of concurrently-implemented fluidic operations in
pin-constrained digital microfluidic biochips,” IEEE Int. Conf.
on VLSI Design, pp. 69-74, 2010.
 2
心 得 
首先，謝謝國科會計畫可以撥款補助後學與兩位學生出國至Duke University與
Professor Krishnendu Chakrabarty及Professor Richard Fair進行學術交流。 
在參訪期間，我們不但參加了其實驗室的Group meeting，後學也擔任了博士生
Yang Zhao的博士論文口試委員，最重要的是，我們與Professor Krishnendu 
Chakrabarty共同討論出考慮電極可靠度之廣播定址法，且其結果已被2011年11
月在美國聖荷西所舉辦的IEEE/ACM ICCAD (International Conference on CAD)
所接受，值得一提的是，ICCAD為電子設計自動化領域之最頂尖之國際會議，能
在此會議發表，對台灣具有相當大的貢獻。國科會計畫的補助可以幫助教師們出
國進行國際交流，提昇自己及學校的國際視野並可以跟許多國外知名學者有接觸
的機會，對國內學術界的整體水準有很正面的加分作用。 
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：何宗易 計畫編號：99-2221-E-006-220- 
計畫名稱：考慮針腳限制之數位微流體生物晶片下之殘留物感知液珠繞線研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 10 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
後學藉由電子設計自動化的技術來作全面性的考量及最佳化。目前研究成果相當傑出，部
分結果已發表於電子設計自動化領域最頂尖的國際會議 IEEE/ACM International 
Conference on Computer Aided Design (ICCAD)(4篇，已連續三年發表)與ACM/IEEE Design 
Automation Conference (DAC) (1 篇)及頂尖期刊 IEEE Transactions on Computer-Aided 
Design of Integrated Circuits and Systems (TCAD) (3 篇)。 
 
由於後學在此研究領域的傑出表現，不但分別在 2010 年 IEEE/ACM ICCAD 及 2011 年
ACM/IEEE CODES+ISSS 擔任 Tutorial Speaker，也分別在 2011 年的 IEEE MWSCAS、IEEE SOCC
及 ACM CASES 擔任 Special Session 的 Organizer。對於提升我國在此研究領域的國際地
位，具有極重要的貢獻。此外，後學也分別於 2009 年 9 月、2010 年 7 月及 2011 年 2 月受
邀至日本北九州大學(Kitatkyushu University)、京都大學(Kyoto University)及杜克大
學(Duke University)演講數位微流體晶片上之液珠繞線演算法，以及擔任 ACM SIGDA 
CADAthlon 國際程式設計比賽中 BioEDA 分項題目的出題委員(為台灣首位學者受此殊榮
者)。 
 
後學在此研究領域的研究成果也於 2009 年獲得國研院大學院校奈米元件電腦輔助模擬與
設計軟體製作競賽之奈米生醫微機電元件組特優，在 2010 年 ACM/IEEE DAC 所舉辦的 ACM 
SIGDA Student Research Contest 中獲得全世界第一名(台灣首次獲獎)，更在 2011 年 ACM 
