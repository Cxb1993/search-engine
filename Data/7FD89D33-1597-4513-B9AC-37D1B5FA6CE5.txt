1 
中文摘要： 
目前有越來越多的嵌入式應用裝置同時具備可攜性、多媒體、及網路通訊
這三項特性。未來，這些個別存在的嵌入式系統裝置將可能不再單獨運作。透過
無線通訊，這些分散且無所不再的裝置將有可能隨時互相連結分享資料並運用彼
此的計算能力以共同完成一件較複雜的工作。為了達成這樣的一個目的，在本研
究計畫中，我們設計了一個以無線行動裝置為目標平台的分散式計算環境，運用
分散式叢集運算的技術來解決這個問題。我們採用分散式共享記憶體的架構，這
個架構擁有容易撰寫應用程式的特性。此外，配合行動裝置的動態特性，我們也
提出了動態工作群組的分散式運算架構。基於此架購，將使得分散式行動計算更
容易發展及普及。本計劃已實現出該架構的系統雛形。 
英文摘要： 
More and more embedded applications today combine the features of multimedia, 
networking, and mobility in a system. With the capability of wireless communication, 
mobile devices can be connected to share information, and even more, work together 
to accomplish a more complex job. For this objective to be realized, we’ve developed 
a distributed mobile computing environment using the techniques of cluster 
computing. Shared memory architecture is adopted in the implementation because of 
the consideration of easy programming. In this research, we also proposed a 
distributed computing model based on the concept of dynamic task group. With this 
model, writing distributed applications for mobile devices will be much easier. A 
prototype of the system has been established in this project. 
 
關鍵字(keyword)： 
嵌入式系統、無線行動裝置、分散式平行計算、動態群組、分散式共享記憶
體、低功率設計。 
 
3 
文獻探討： 
目前分散式平行計算主要應用領域包括叢集運算與網格運算。叢集運算與
本研究所針對的環境--分散式行動計算--皆屬於區域網路範圍之運算環境。在此
環境下，運算節點間的傳輸方式大多採用訊息傳遞的方式。例如，目前最常使用
的發展環境為 PVM[10]或 MPI[11]。除此之外，過去十多年間亦有一些研究探討
以共享記憶體模型為基礎的分散式計算環境[12][13]。以下就本計畫的兩大主題
--分散式共享記憶體系統與行動計算--分別論述其與本研究相關的技術與問題。 
一、 分散式共享記憶體系統： 
一般常見的共享記憶體多存在於對稱式多處理機(SMP)系統之上。在分
散式環境下，以共享記憶體方式運作的系統稱作分散式共享記憶體
(Distributed Shared Memory)系統，簡稱 DSM。對於設計共享記憶體平行程
式的使用者而言，主要是以多緒執行的方式或概念來撰寫程式。DSM 的幾
個議題簡述如下。 
1. 資料配置管理(Data Location Management)與存取單位大小(Data Access 
Granularity)：在分散式共享記憶體系統中，資料一般是切割為固定或不
過定的大小[12][17][18][19]，並以靜態或動態[14][15][16]的方式分配在
各節點之上，再配合快取(cache)及資料一致性協定來維持資料的正確
性。 
2. 快取配置與寫入一致性協定(Write Coherence Protocol)：DSM 為了減少
遠端的資料存取，通常使用快取(cache)或緩衝器(buffer)的方式或概念來
提升執行效能。為了解決同一份資料存放在多個快取記憶體中所產生的
資料不一致的問題，可使用如寫入失效(write-invalidate)以及寫入更
新(write-update)等寫入一致性協定[3]。 
3. 記憶體一致性模型(Memory Consistency Model)：記憶體一致性模型對於
共享記憶體系統的效能具有舉足輕重的腳色。記憶體一致性模型由最嚴
謹至較鬆散可以分為 Sequential Consistency [4]、Processor Consistency 
[5]、Weak Consistency [6]、Release Consistency (RC) [7]、Entry Consistency 
[8]等幾種。而使用越鬆散的模型效能越好，但是鬆散的模型通常需要使
用者的介入。 
二、 行動計算 
行動計算的主體為可攜式裝置。目前行動裝置主要的通訊機制為無線傳
輸。常見的無線通訊方式有：行動電話系統、無線區域網路、無線廣域網路、
短距離無線網路等等[20][21][22][23][24]。目前 WLAN 的應用主要的阻力來
自於傳輸品質與功率消耗的問題。尤其是行動裝置只能使用電池作為主要的
電力來源，使得我們在設計一個實用的系統時，必須謹慎地將傳輸資料時伴
隨的功率消耗問題列為重要的參考因素[25][26][27]。 
5 
此外，由於行動裝置的特性，參與運算的節點可能隨時需要離開工作群組，
亦即離線。一般而言，離線可分為事先告知與未告知等兩種情況。前者為正常離
線方式，後者通常為非自願性離線。目前我們已提供基本正常離線機制，讓節點
在離線之前先行通知群組內其他工作節點，使能夠釋放所佔用及擁有之資源。未
來我們將進一步研究共享資料移轉與非自願性之離線等問題。 
除了動態群組的機制外，我們亦提供以共享記憶體為基礎的分散式運算環
境，並採用鬆散一致性 (Release Consistency)為記憶體一致性模型 (Memory 
Consistency Model)。為了實現相關資料共享與同步的機制，我們在每個裝置節點
中利用數個系統執行緒(Thread)來支援所需的運算與溝通。執行緒類型分述如下： 
z 計算執行緒(Computation Thread；THR_COMP)：即使用者撰寫之執行
緒。每個節點可包括多個計算執行緒，由使用者自行決定。 
z 共享資料執行緒(Shared Data Thread；THR_SD)：亦稱為共享資料管理
者(Data Manager)，負責共享資料的存取與註冊等工作。每個節點可依
負載包含一個或多個共享資料執行緒。 
z 控制執行緒(Control Thread；THR_CTRL)：用於處理動態群組管理及同
步管理者的角色，其中包含等待佇列(Waiting Queue)的管理，圖二為其
中 Mutex Lock 之其訊息傳遞行為。 
 
 
圖二 Mutex Lock 之訊息傳遞行為 
7 
參考文獻： 
[1] Weijian Fang , Cho-Li Wang , Francis C. M. Lau, “On the design of global object 
space for efficient multi-threading Java computing on clusters,” Parallel 
Computing vol.29, pp. 1563--1587, Nov./Dec. 2003. 
[2] William Stallings, “Computer Organization & Architecture ; sixth edition”, 
Prentice Hall, 2003 
[3] J. L. Hennessy and D. A. Patterson, Computer Architecture: A Quantitative 
Approach, 3rd Edition, Beta draft, Morgan Kaufmann Publishing Co., Menlo 
Park, CA. 2001. 
[4] L. Lamport, “How to make a multiprocessor computer that correctly executes 
multiprocess programs,” IEEE Trans. Computer vol. C-28, no. 9, pp. 690--691, 
Sep. 1979. 
[5] J.R. Goodman, “Cache consistency and sequential consistency,” Technical 
Report no. 61, SCI Committee, Mar. 1989. 
[6] M. Dubois, C. Scheurich, and F. Briggs, “Memory access buffering in 
multiprocessors,” Proc. it 13th Int'l Symp. Computer Architecture, pp. 434--442, 
1986. 
[7] K. Gharachorloo, D. Lenoski, J. Laudon, P. Gibbons, A. Gupta, and J. Hennessy, 
“Memory consistency and event ordering in scalable shared-memory 
multiprocessor,” Proc. 17th Ann. Int'l Symp. Computer Architecture, pp. 15--26, 
May 1990. 
[8] B.N Bershad, M.J. Zekauskas, and W.A. Sawdon, “The Midway distributed 
shared memory system,” Proc. 93' CompCon, pp. 528--537, Feb. 1993. 
[9] Robert Sedgewick, “Algorithms in C++”, Addison-Wesley publishing company. 
[10] PVM : parallel virtual machine :a users' guide and tutorial for networked parallel 
computing / Al Geist 
[11] The Message Passing Interface standard, http://www-unix.mcs.anl.gov/mpi/ 
[12] W. Y. Liang, C. T. King, and F. Lai, “Adsmith: An Object-based Distributed 
Shared Memory for Network of Workstations”, IEICE Transaction on 
Information and Systems, Vol. E80-D, No. 9, Sep. 1997, pp. 899-908. 
[13] P. Keleher, A.L. Cox, and W. Zwaenepoel, ``Lazy consistency for software 
distributed shared memory,'' Proc. 19th Ann. Int'l Symp. Computer Architecture, 
pp. 13--21, May 1992. 
[14] K. Li , “IVY: a shared virtual memory system for parallel computing.” Proc. Int'l 
Conf. Parallel Processing, pp. 94--101, 1988. 
[15] L. Iftode. “Home-based Shared Virtual Memory.” PhD thesis, Princeton 
University, August 1998. 
9 
計畫成果自評： 
本計畫已達成預定目標，實現以共享記憶體模型為基礎之分散式行動計算環
境系統雛型，並提出動態群組之分散式運算模式。本結案報告所列內容係本計畫
執行成果，該成果將於完成測試評估後集結成論文發表。目前我們也針對後續研
究持續進行中。此外，我們亦針對無線網路傳輸，評估其對於行動可攜式裝置功
率消耗之影響，其成果已集結成論文“Design and Analysis of a Flexible 
Wireless Mobile Data Sharing Device＂發表於 10th WSEAS International 
Conference on Computers, Vouliagmeni, Athens, Greece, July 13-15, 2006, 
pp. 441-446。該論文及出席國際會議研究心得報告已上傳繳交國科會。 
