  
 
一、前言 
In recent years, more and more devices are equipped with multiple interfaces to connect to the Internet. 
In multihomed networks, mobile devices can have Wi-Fi and 3G interfaces. If one of the two transmission 
paths fails, mobile devices still can keep connect to the Internet using the other path. For example, many smart 
phones and notebooks have 3G and Wi-Fi interfaces at the same time. Generally speaking, 3G covers most of 
area but provides less bandwidth; Wi-Fi is often deployed in the hot spot, such as coffee shop, is more reliable, 
and provides more bandwidth than 3G. When users are in the hot spot with Wi-Fi, they can access the Internet 
through 3G and Wi-Fi concurrently. 
 
To have more reliable data transmission in the multihomed network, IEFT has proposed Stream Control 
Transmission Protocol (SCTP) in October 2000 [1]. SCTP is a reliable transport layer protocol and features 
with multihoming and multistreaming.  SCTP regards one path as the primary path and leaves the other paths 
as retransmission paths. Once the primary path fails, SCTP can switch the primary path to one of the 
retransmission paths. Data in SCTP can be spread into different streams. For example, MPEG I, P and B 
frames can be transmitted in three streams in SCTP separately [2]. Most of multimedia applications, such as 
Video on Demand (VoD), video conference and IP phone etc., are delay sensitive and require less reliability 
[3]. Thus, multimedia applications prefer UDP than TCP. SCTP Partial Reliability extension (PR-SCTP) 
enables applications to transmit data in a reliable mode or an unreliable mode. PR-SCTP can act as UDP, but 
is with congestion control, flow control, multihoming and multistreaming features. 
 
For the multihoming consideration, SCTP only uses one path for data transmission and leaves the other 
path idle. Even if users can connect to the Internet using 3G and Wi-Fi concurrently, they still cannot enjoy 
the aggregated bandwidth of 3G and Wi-Fi. Iyengar proposed the Concurrent Multipath Transfer (CMT) 
protocol based on the SCTP to resolve this problem [5]. In CMT, multimedia applications can use 3G and 
Wi-Fi to transfer data concurrently. 
 
Multimedia applications on the Internet that are over the multihomed networking environment need the 
following transmission features: (1) allowing data loss, (2) delivering data in sequence, (3) supporting 
congestion control, and (4) transmitting data in multiple paths over multiple network interfaces. To enhance 
support of multimedia streaming applications in the transport layer, we propose an Unreliable-Concurrent 
Multipath Transfer (U-CMT) and Partially Reliable-Concurrent Multipath Transfer (PR-CMT) protocols 
based on PR-SCTP and CMT in this project. 
 
Moreover, wireless networks have high data loss rate and the mobility issue. Two types of packet loss in 
wireless networks are as follows [4]: Packet loss may cause the receiver buffer blocking problem in CMT. For 
example, Wi-Fi and 3.5G have different bandwidth and end-to-end transmission delay. Data must be delivered 
from the transport layer to the upper layer in sequence. If packets are lost, the transport layer cannot deliver 
data to the upper layer in sequence. Thus, some received data begin to fill the receiver buffer. If the free 
  
 
To enhance support of real-time multimedia streaming applications in the transport layer, this project 
proposes an Unreliable-Concurrent Multipath Transfer (U-CMT) protocol based on PR-SCTP and CMT. The 
U-CMT ensures data delivery to applications in the correct sequence. Lost data are not retransmitted. The 
U-CMT supports congestion control to share the link bandwidth with other protocols fairly. The U-CMT can 
utilize the aggregated bandwidth in multihomed networks. 
The main contributions of U-CMT are as follows: 
 
 Congestion window: transmitting data unreliably over multiple network interfaces causes U-CMT to 
be unable to precisely infer congestion window. U-CMT uses delaying data abandonment 
mechanism and Path Sequence Number (PSN) to resolve the congestion control issue. 
 Lost packet detection: If transmitting data unreliably, PR-SCTP cannot precisely infer lost packets. 
The U-CMT can detect the packet loss more precisely than PR-SCTP can. The PR-SCTP may 
abandon data that are not lost. The U-CMT only abandons data that are lost using PSN. 
 Receiver buffer blocking: Since U-CMT guarantees sequential data delivery to applications, lost 
data results in queuing of received data in the receiver buffer, i.e., receiver buffer blocking. 
Transmitting data over multiple network interfaces worsens the receiver buffer blocking problem. 
The U-CMT uses PSN to detect lost packets on the receiver side.  Receivers can actively abandon 
lost data to free buffer space. 
 
B. Partially Reliable Concurrent Multipath Transfer (PR-CMT) 
 
The idea of PR-CMT is to transmit data over all available paths with a certain reliable level and treat 
streams with different priorities to provide a better QoS control. PR-CMT is featured with (i) Concurrent 
Multipath Transfer, (ii) partially reliable transmission and (iii) prioritized stream transmission. 
 
 PR-CMT would transmit data over all available paths to leave no paths idle and to improve the 
transmission throughput. The sender induced FORWARD TSN (Transmission Sequence Number) 
reordering is eliminated when applying the partially reliable transmission to CMT. 
 PR-CMT provides a “timed reliable service” based on the concept adopted in PR-SCTP. The 
application data are associated with lifetime. PR-CMT doesn't transmit and retransmit the lifetime 
expired data. PR-CMT can eliminate the false acked TSNs problem, which occurs in PR-SCTP, to 
have a more precise cwnd and loss detection. 
 Each stream in PR-CMT is associated with different priority. Higher priority streams can be 
transmitted before lower priority streams. As a result, the transmission of higher priority streams 
would not be blocked by lower priority streams. 
 
 
 
C. Mobile Concurrent Multipath Transfer (mCMT) 
mCMT extends U-CMT and PR-CMT to the wireless mobile network with considering reliable 
transmission. mCMT is able to reduce the effect of the receiver buffer blocking caused by error loss and 
  
 
would send the FORWARD TSN chunks to advance the receiver's cumulative TSN for the lifetime expired 
data chunks. As a result, the receiver would not wait for the lifetime expired data chunks. However, the 
transmission of FORWARD TSN chunks would cause the false acknowledged TSN problem. The false 
acknowledged TSN problem happens on receipt a SACK which acknowledges the abandoned data chunks. In 
PR-SCTP, if the lifetime of the data chunk is expired, it is treated as abandoned. The abandoned data chunks 
cannot be credited for cwnd. 
 
The false acknowledged TSN problem causes the following concerns: (i) too conservative for cwnd and 
(ii) miss loss detection. The sender cannot credit the lifetime expired data chunks for cwnd and cannot infer 
data loss precisely. 
 
Congestion Control issue 
Unreliable data transmission causes PR-SCTP to be unable to precisely infer congestion window (cwnd) 
and lost packets. Each destination address has independent cwnd for congestion control in PR-SCTP. 
Abandoned data chunks in PR-SCTP cannot be credited for cwnd. PR-SCTP marks data chunks as abandoned 
after the transmission. The sender cannot credit the abandoned data chunks for the cwnd, even if the receiver 
does receive abandoned data chunks and replies a SACK to the sender. Consequently, no matter how many 
data chunks are transmitted, cwnd of a destination address is never increased. 
 
To resolve this issue, we propose the delay abandoning data mechanism in U-CMT. In U-CMT, data are 
abandoned only when they need retransmission (fast retransmission or timeout retransmission). Once data are 
not abandoned immediately after the transmission, they can be credited for the cwnd. 
 
On the other hand, the original design of SCTP is that data are transmitted mainly over the primary path. 
SCTP uses the TSN to keep track of the data transmission sequence in an SCTP association. Congestion 
control is carried out based on TSN. The sender can update its cwnd only when sender receives an SACK with 
a new cumulative TSN. The new cumulative TSN implies that the receiver receives data chunks in sequence 
over the primary path. Figure 1 shows the congestion window update problem in U-CMT.  Let Path1 be with 
less end-to-end delay than Path2. Data chunks with TSN 1, 3, 5, and 7 are transmitted over Path1. Data 
chunks with TSN 2, 4, and 6 are transmitted over Path2. Although the receiver receives data chunks of TSN 1, 
3, 5 and 7 in sequence over Path1, the sender still cannot update the cwnd of Path1. 
 
  
 
 
Figure 2 Receiver Buffer Blocking 
At this moment, if the receiver buffer is full, CN can send only one packet to the receiver. CN retransmits 
the data with TSN 1 only when fast retransmission or timeout retransmission on the data with TSN 1 occurs. 
The receiver cannot free its buffer until it receives the data with TSN 1. During this long period, the 
throughput of CMT degrades dramatically because CN merely sends a few data to the receiver. If CN 
retransmits the lost data through fast retransmission, then the receiver may need 1-3 RTTs to free the receiver 
buffer. If the sender retransmits the lost data until retransmission timeout (RTO), the receiver needs more time 
than fast retransmission to recover the receiver buffer. The worst case is that the retransmitted data is lost 
again or the size of the lost data exceeds one packet limitation. On the other hand, if multiple packets are lost, 
CN needs to retransmit data more than once to release the receiver buffer. However, since the receiver buffer 
is blocked, CN can only send one packet per RTT. As a result, in the worst case, the receiver buffer may be 
blocked in terms of seconds. 
 
The main reason that causes the receiver buffer blocking is CMT itself. Transmitting data over all paths 
can have better throughput than SCTP does; but it also causes the receiver buffer blocking problem in CMT. 
When data are lost in one path, the other paths are keeping transmitting data to the receiver. If the transmitted 
data on the other paths belong to the same stream of the lost data, the receiver buffer is probably blocked. 
 
Receiver buffer blocking due to handoff loss 
With SCTP_DAR, CMT can perform the transport layer handoff in the multihomed wireless mobile 
network. When a MN moves from one location to another, MN gets a new IP address and the old IP address 
becomes unreachable. CMT performs the handoff process as follows: 
 
Figure 3 shows the receiver buffer blocking caused by handoff loss. A MN establishes a CMT association 
with a CN through two interfaces. MN moves out of the range of the old access point (oAP) to the range of 
the new access point (nAP). Path 1 is disrupted during handoff. Data, which are transmitted through oAP, are 
  
 
 
三、文獻探討 
SCTP is the transport layer protocol that supports multihoming and multistreaming [1]. SCTP transmits 
data via the primary path and retransmit data via the other paths that are regarded as secondary path or 
retransmission path. Although SCTP supports multihoming, SCTP doesn't utilize all of the available paths for 
data transmission. Several researchers have focused on utilizing all of the available paths for data transmission 
concurrently. Iyengar et al. proposed the Concurrent Multipath Transfer (CMT) using SCTP multihoming over 
independent end-to-end paths [5]. They identified the sender induced reordering issue, which is due to the 
path diversity and can impact the performance of transmitting data over all of the available paths greatly. After 
applying the proposed algorithms to reduce the sender introduced reordering, the CMT technology can 
achieve better performance than SCTP. SCTP and CMT are all reliable transport protocol and are not suitable 
for real-time data transmission. Thus, SCTP Partial Reliability extension (PR-SCTP) is proposed to provide 
data transmission between reliable transmission and unreliable transmission. However, PR-SCTP introduces 
the false acknowledged TSN problem, which would lead to reduced growth on cwnd and miss loss detection. 
 
On the other hand, SCTP treats streams with equal priority. Several researchers are dedicated to improve 
the QoS of SCTP from the multistreaming consideration. Heinz II et al. proposed prioritized stream 
transmission for SCTP [6]. The evaluation results show that the end-to-end delay for higher priority streams 
can be kept in a constant long and would not be affected by suddenly applied large amount of lower priority 
data. Zou et al. proposed a method that groups streams into subflows, which have independent congestion 
control parameters to avoid the false sharing problem [7]. Subflows are treated with different priorities. The 
above researches have demonstrated that they can get better performance comparing with SCTP. 
 
Iyengar et al. proposed five retransmission policies to the reduce receiver buffer blocking in [3]. By 
changing the retransmission policy, it can prevent retransmissions from getting dropped due to 
retransmissions through the same bad condition path. From the simulation result, the retransmission policy 
{RTX-SSTHRESH} has the better performance than the others. mCMT is an extended work from CMT. 
mCMT adopts the same retransmission policy from CMT, but also adds the path-oriented multistreaming and 
MIH assisted handoff mechanism to reduce the occurrence of the receiver buffer blocking. CMT acts after 
data is lost, while mCMT acts before data is lost. The retransmission policies of CMT only work after data is 
lost.  By scheduling data for suitable paths when transmission, mCMT avoids data lost which will result in 
the receiver buffer blocking.  
 
SCTP_DAR [5] extends the multihoming feature of SCTP to support seamless IP handoff. Koh et al. 
proposed mSCTP soft handoff in the transport layer [8]. They considered a mobile node (MN) that initiates an 
SCTP association with a correspondent node (CN) in wireless networks. SCTP_DAR can dynamically add a 
new IP address into an SCTP association and set the new IP address to be the primary path's IP address to 
force the sender to transmit data through the new IP address. When the old IP address becomes inactive, 
  
 
blocking issue. Moreover, the concept of the association resume is proposed to resolve the hard handoff issue. 
  
四、研究方法 
In this section, we introduce the design of U-CMT, PR-CMT and mCMT respectively. U-CMT adopts 
PTSN and receiver abandoning data to resolve the receiver buffer blocking issues. PR-CMT introduces the 
partially reliable transmission to deal with the false acknowledged TSN and congestion control issues. mCMT 
provides path-oriented multistreaming, MIH-Assisted mechanism and association resume. 
 
A. U-CMT 
Path Transmission Sequence Number (PTSN) 
TSN is not suitable for U-CMT to infer congestion windows and lost packets because U-CMT breaks the 
assumption that data are mainly transmitted over the primary path. U-CMT transmits data over all paths. To 
precisely infer cwnd and prevent unnecessarily abandoning data, U-CMT adds Path Transmission Sequence 
Number (PTSN) in the data chunk header. The size of data chunk with PTSN is 4 bytes. When transmitting a 
data chunk, the sender assigns a PTSN to that data chunk according to the destination address, to which that 
data chunk is transmitted. PTSN is different from TSN. TSN is used to identify the transmission sequence of 
data chunks in the SCTP association. PTSN is used to identify the transmission sequence of data chunks over 
a destination address. 
 
In Figure 1, if data chunks with TSN 1, 3, 5 and 7 are assigned PTSN 1, 2, 3, 4, and data chunks with 
TSN 2, 4, 6 are assigned PTSN 1, 2, 3 respectively, the sender can infer the fast retransmission on the data 
chunk with TSN 2 correctly. The sender can know that the data chunk with TSN 2 is transmitted over Path2, 
not Path1. The sender does not count a missing on data chunk with TSN 2 after receiving SACK2-4. As a 
result, unnecessarily abandoning the data chunk with TSN 2 can be prevented. With PTSN, the sender can 
update its cwnd correctly. When the sender receives SACK2-4, the sender knows that the receiver receives 
data chunks with PTSN 1, 2, 3, and 4 of Path1 in sequence. The cwnd of Path1 then can be updated. 
 
Receiver Abandoning Data 
The receiver buffer blocking is resolved by receiver abandoning data. Typically, only the sender can 
abandon data. If the receiver cannot abandon data, the receiver buffer may be full quickly. In U-CMT, the 
receiver can abandon data in two ways: 
 
 Lost Abandon: The receiver is able to actively abandon lost data to prevent receiver buffer blocking. 
Whenever the receiver receives new packets that indicate some PTSNs are missed, it waits for two 
further miss indications on the same PTSNs before abandoning them. After abandoning the lost data, 
the receiver can immediately upload the received data to the application. Thus, the receiver buffer 
blocking is released. The receiver can abandon the data chunk with TSN 1 (PTSN 1) after it receives 
the data chunk with TSN 4 (PTSN 4) according to the PTSNs of Path2. The buffer can be released 
  
 
the other paths. 
 
To avoid the aforementioned problem, the path-oriented multistreaming is devised to transmit data with 
the same stream in the same path. Thus, if data are lost in one path, the other paths would not fill up the 
receiver buffer by incomplete data transmitted over the other paths. Rules for path-oriented multistreaming are 
as follows: 
 
 Essentially, each stream is allocated to one main path. 
 A path must not transmit new data of the stream which has data for retransmission and is not 
allocated to it. 
 The data that need for retransmission can be retransmitted over any path. 
 Whenever a path is unreachable, streams, which are assigned to that path, are reassigned to other 
paths. 
 A path can transmit new data of streams, which are not allocated to it only if that path is completely 
idle, i.e., there is no data to send. 
 
Each path has its own unsent queue. When the cwnd of one path is allowed to transmit data, data in the 
unsent queue are transmitted. The dispatch module is responsible for assigning streams to paths. If the unsent 
queue of a path is empty, the dispatcher module updates the unset queue of that path. The dispatcher module 
moves new data of the streams to the unsent queue of the streams' main path. If streams allocated to one main 
path have no new data, then the unsent queue of that path can be filled with new data of the other streams. A 
path can take at most BlockSize bytes from one stream. The maximum bytes of data that a path can take from 
streams of the other paths are limited by the quota. The summation of quota of every path should not exceed 
the receiver buffer size. Thus, value of quota should not exceed 
 
 
 
 
 
When every path has new data for transmission, then mCMT guarantees that data in the same stream can 
be transmitted over the same path. If a path has no data for transmission, it can transmit data of the streams 
that are not allocated to it. Therefore, the path-oriented multistreaming never slows down the throughput of 
mCMT. All paths always have data for transmission. When streams have data for retransmission, paths, to 
which the streams are not allocated, cannot transmit the new data of these streams. The data need for 
retransmission can be retransmitted over any path. Basically, mCMT adopts the same retransmission policy of 
CMT, i.e., lost data are retransmitted via the path with highest slow start threshold (RTX-SSTHRESH). As a 
result, if data are lost over one path, path-oriented multistreaming can prevent transmitting data in the same 
stream over the other paths to cause the receiver buffer blocking. Notice that the path-oriented multistreaming 
is not to force streams to be transmitted in only one path. If one path is unreachable, streams, which are 
  
 
 
Figure 4 MIH‐assisted handoff 
 
The new idea of the handoff mechanism of mCMT is the combination use of MIH and extended 
SCTP_DAR with the ASCONF-PoFailure chunk. mCMT can mark an IP address as potentially failed to 
prevent CN to send new data and SACKs via the potentially failed path. 
 
 
The effectiveness of MIH assisted handoff is dominated by the LGD event. MIH is responsible to trigger 
LGD event for mCMT. mCMT is in a passive role to receive the LGD event. The LGD event can be triggered 
by monitoring the link parameters, i.e., noise level, link quality, signal strength, and bit rate. MIH must gather 
enough information to predict that the wireless interface is going to lose its signal soon. However, MIH may 
generate false LGD events to MIH. In order to deal with the false LGD event, mCMT takes the following 
actions. 
 If mCMT receives LGD from MIH, then mCMT sends the ASCONF-PoFailure to notify CN that 
the IP address is going to fail. 
 mCMT keeps monitoring the potentially failed IP address by sending Heartbeat chunk. 
  
 
 
Figure  2 The playable frame rate 
 
Figure 3 depicts the playable frames. Due to the heavily receiver buffer blocking in R-CMT, the playable 
frames for R-CMT were very small and varied largely. A frame is considered unplayable if its playout time is 
passed or the frames, on which it depends, are unplayable. Most of the received frames of R-CMT were 
unplayable, because their playout time was passed. U-CMTs cannot avoid receiver buffer blocking either. 
When the receiver buffer was full, the U-CMTs sender could not send any data. Thus the playable frames of 
U-CMTs were cut down greatly. A U-CMTr receiver can abandon actively data. The receiver buffer was not 
full in U-CMTr. A U-CMTr sender can send data to the U-CMTr receiver in sequence. As a result, the 
playable frames of U-CMTr were more than the others. 
 
B.PR-CMT 
There are two paths from the sender to the receiver. Path1 is with 500kb bandwidth, 100ms delay and 
0-1\% loss rate. Path2 is with 1mb bandwidth, 200ms delay and 0-10\% loss rate. The sender creates 3 streams 
in the association. The stream id is ranged from S0 to S2 with stream priority S0 > S1 > S2. The application 
sends data in 40 KB/s per stream, i.e., 120 KB/s totally. The application data are not fragmented and 
associated with lifetime which is the delivery time from the application to the transport layer + 10s. Each 
packet would contain one data chunk only. The application on the sender starts to send data of each stream 
from time 0.0s to 100.0s. All data are expired at 110.0s. In the experiment, if the loss rate situation of path2 is 
ranged from 1\% to 10\%, then the loss rate situation of path1 is fixed at 1\%. 
 
Evaluated transmission modes for CMT and PR-CMT are as follows: 
 CMT: the original CMT without any modification. 
 CMTs: CMT adopts prioritized stream transmission. 
 PR-CMTp: PR-CMT adopts partially reliable transmission without delayed FORWARD TSN. 
 PR-CMTpf: PR-CMT adopts partially reliable transmission with delayed FORWARD TSN. 
 PR-CMTpfs: PR-CMT adopts partially reliable transmission with delayed FORWARD TSN and 
prioritized stream transmission. 
 PR-CMTpfsd: PR-CMT applies partially reliable transmission with delayed FORWARD TSN, but only 
enables the prioritized stream transmission after the drop point.  
The bytes transmitted within lifetime are used to evaluate how many bytes are transmitted before the lifetime 
is expired. 
The “bytes transmitted within lifetime percentage” is defined as the bytes that are transmitted within lifetime 
  
 
module developed by University of Delaware [2]. There are two paths from the sender to the receiver. Path1 
(Interface1) is 3.5G, while Path2 (Interface2) is Wi-Fi (802.11). Based on the throughput measurement report 
of Tanaka et al., the throughput of 3.5G is 500KB/s when moving [20]. To have more precise network traffic 
in the simulation, the collected network traffic at the department of Computer Science and Information 
Engineering in National Cheng Kung University is injected into the simulation network as the background 
traffic. More than 1000 nodes are included in the collected network traffic. In the simulation, the compared 
protocols are cmpSCTP, CMT, and mCMT. The investigated receiver buffer size of cmpSCTP is 256KB, one 
128KB for the association buffer and another 128KB for the connection buffer. If the association buffer of 
cmpSCTP is full, then the association buffer is blocked, and CN cannot send more than one packet to MN. 
 
Transmission Efficiency 
In this experiment, CN sent three files to MN in three streams. Each file is 10MB. The investigated 
buffer sizes for CMT and mCMT are 64KB, 128KB and 256KB. In practice, the default buffer size of Linux 
kernel for SCTP is 64KB. For small memory devices, the buffer size may be smaller. The Wi-Fi was fixed in 
the 1\% loss rate. The 3.5G was ranged in the 1\%-10\% loss rate. The explored loss rate is in the range of 
[1\%, 10\%], which reflects the wireless data loss depicted in [2]. The BlockSize of the path-oriented 
multistreaming is set to 6KB, which is equal to four SCTP packets size. The BlockSize should not be too large 
to reduce the effect of the path-oriented multistreaming. 
 
Figure 5 shows the transmission speed for cmpSCTP, CMT and mCMT. Obviously, mCMT 
outperformed CMT and cmpSCTP in all buffer sizes. The transmission time of smaller buffer size increased 
much faster than that of larger buffer size when the loss rate increased. The occurrence of the receiver buffer 
blocking for small buffer size is more frequent than that of large buffer size. When data were lost, received 
data in the same stream as the lost data could not be delivered to the upper layer. Large buffer size could 
tolerate more data loss than small buffer size could. 
 
Figure 5 Comparison on Transmission Speed 
Handoff efficiency 
In this subSection, the MIH-assisted handoff mechanism is evaluated. In this experiment, no data were 
  
 
the throughput of mCMT was not degraded too much. The throughput of mCMT was approximate to the 
capacity of Path1. 
 
At the 18th second, MN moved out of the coverage of Wi-Fi AP2 and reentered into the coverage of 
Wi-Fi AP2 again at the 22th second. During the 18th second and the 22th second, the throughput of MN 
degraded to the capacity of 3.5G. However, cmpSCTP still suffered from the receiver buffer blocking as 
before. cmpSCTP spent more than 2 seconds to recover the receiver buffer blocking. In this long period, the 
throughput of cmpSCTP was very low. This experiment showed that the MIH-assisted handoff mechanism 
really helped mCMT to prevent receiver buffer blocking due to the packet loss caused by handoff. CN could 
be notified to stop sending data in paths that were going to fail. 
 
On the other hand, mCMT is able to deal with short disconnection problem. At the 25th second, MN moved 
into a no signal area, which was not covered by the Wi-Fi AP and 3.5G. In the no signal area, the association 
between MN and CN was fully disconnected. At the 28th second, MN moved out of the no signal area and 
entered the coverage of Wi-Fi AP3 and 3.5G again. cmpSCTP disconnected with CN from the 25th second. 
However, after the 28th second, mCMT was able to resume the previous association using the association 
resume mechanism. mCMT was more suitable than cmpSCTP to deal with short disconnection situation in the 
wireless mobile network. 
 
六、結論 
 
This project has made three important technologies, Partially Reliable Concurrent Multipath Transfer 
(PR-CMT), Unreliable-Concurrent Multipath Transfer (U-CMT), and Mobile-Concurrent Multipath Transfer 
(mCMT), for multimedia streaming in wireless mobile networks. PR-CMT can provide both partially reliable 
transmission and prioritized stream transmission for multimedia streaming, while U-CMT allows unreliable 
transmission with congestion control. mCMT is able to deal with handoff issues in wireless mobile networks 
for unreliable/partially reliable/reliable data transmission. 
 
PR-SCTP has overly conservation congestion window growth and falsely acknowledged TSN issues 
after abandoning lifetime expired data chunks. When combing PR-SCTP and CMT, the unnecessary 
discarding data and receiver buffer blocking due to abandoned data issues occurs. PR-CMT adopts delay data 
abandoning algorithm to resolve the above issues. Lifetime expired data chunks are marked as expired only. 
After there are retransmission events on the lifetime expired data chunks, the lifetime expired data chunks are 
marked as abandoned. In this way, lifetime expired data chunks can still be credited for congestion windows. 
The sender is able to infer packet precisely. With prioritized streaming transmission, I and P frames can be 
transmitted before B frames. Once I or P frames are lost, they have higher opportunity to be retransmitted than 
without prioritized stream transmission. The simulation results show that the playable frame rate of PR-CMT 
is higher than that of CMT. PR-CMT also can prevent the issue of large gaps in two playable frames. 
The playout of video is not suspended for seconds in PR-CMT. 
  
 
 
2nd year 
1. Chung-Ming Huang, Ming-Sian Lin, and Lik-Hou Chang 
"The Design of Mobile Concurrent Multipath Transfer (mCMT) in Multihomed Wireless Mobile 
Networks". 
accepted by The Computer Journal, 2009 
(NSC 97-2221-E-006-096-MY2) (SCIE, EI) 
 
2. Chung-Ming Huang, Ming-Sian Lin, Lik-Hou Chang and Wen-Yao Chang 
"An MIH-Assisted Handoff Mechanism for Concurrent Multipath Transfer in Wireless Multihomed 
Networks" 
Proceedings of The 20th International Symposium on Personal, Indoor and Mobile Radio Communications 
(PIMRC09), pp., 2009 
(NSC 97-2221-E-006-096-MY2) 
 
3. Chung-Ming Huang and Ming-Sian Lin,  
"RG-SCTP: Using the Relay Gateway Approach for Applying SCTP in Vehicular Networks", 
Proceedings of IEEE Symposium on computers and Communications (ISCC2010),  pp., June  2010. 
(NSC 97-2221-E-006-096-MY2) 
 
 
參考資料 
 
[1] RFC 4960 (2007) Stream Control Transmission Protocol. Internet Engineering Task Force. 
[2] Iyengar, J. R., Amer, P. D., and Stewart, R. (2006) Concurrent multipath transfer using sctp multihoming 
over independent end-to-end paths. IEEE/ACM Transactions on Networking, 14, 951–964. 
[3] Iyengar, J. R., Amer, P. D., and Stewart, R. (2007) Performance implications of a bounded receive buffer 
in concurrent multipath transfer. Computer Communications, 30, 818–829. 
[4] Ma, L., Yu, F. R., and Leung, V. C. M. (2007) Performance improvements of mobile sctp in integrated 
heterogeneous wireless networks. IEEE Transactions on Wireless Communications, 6, 3567–3577. 
[5] RFC 5061 (2007) Stream Control Transmission Protocol (SCTP) Dynamic Address Reconfiguration. 
Internet Engineering Task Force.  
[6] Tsang, K. C. K., Wang, C.-L., and Lau, F. C. M. (2008) Handoff performance comparison of mobile ip, 
fast handoff and msctp in mobile wireless networks. Proc. of I-SPAN 2008, Sydney, Australia, 7-9May, 
pp. 45–52. IEEE Computer Society.  
[7] Kim, M., Moon, T., and Cho, S. (2009) A study on ieee 802.21 mih frameworks in heterogeneous 
wireless networks. Proc. of ICACT 2009, Phoenix Park, Gangwon-Do, Korea, 15-18 Feb, pp. 242–246. 
IEEE Computer Society. 
[8] Koh, S. J., Chang, M. J., and Lee, M. (2004) msctp for soft handover in transport layer. IEEE 
Communications Letters, 8, 189–191. 
[9] Liao, J., Wang, J., and Zhu, X. (2008) cmpsctp: An extension of sctp to support concurrent multi-path 
transfer. Proc. of ICC 2009, Dresden, Germany, 14-18 June, pp. 5762–5966. IEEE Computer Society. 
[10] Kim, D. P., Koh, S. J., and V, L. (2008) On the packet reordering of msctp for vertical handover in 
heterogeneous wireless networks. Proc. of VTC 2008-Fall, Calgary, Alberta, 21-24 September, pp. 1–5. 
1Multimedia Streaming Using Partially Reliable
Concurrent Multipath Transfer (PR-CMT) for
Multihomed Networks
Chung-Ming Huang and Ming-Sian Lin
Lab. of Multimedia Mobile Networking,
Dept. of Computer Science and Information Engineering,
National Cheng Kung University,
Tainan, Taiwan, R.O.C.
Email: huangcm@locust.csie.ncku.edu.tw
Abstract
We propose a Partially Reliable-Concurrent Multipath Transfer (PR-CMT) protocol for multimedia streaming. The
novelty of PR-CMT is to combine techniques of CMT’s concurrent multipath transfer, PR-SCTP’s partially reliable
transmission, and prioritized stream transmission. MPEG frames are with varying priorities and lifetime. PR-CMT
can transmit important frames before other frames but does not transmit lifetime expired frames. The combination
of the aforementioned techniques, however, causes imprecise congestion window and receiver buffer blocking
problems without suitable control. Consequently, the throughput and video quality degrade. PR-CMT adopts the
concept of delay abandoning data to resolve the imprecise cwnd and the receiver buffer blocking problems. The
simulation results show that PR-CMT can precisely infer cwnd. Most importantly, PR-CMT can prevent large gaps
between two playable frames to have good video quality.
Keywords SCTP, CMT, Partially Reliable Transmission, Prioritized Stream Transmission, Multimedia Streaming
I. INTRODUCTION
Consumers are becoming accustomed to accessing media such as video, movies, TV shows, and music via
the Internet. Multimedia streaming technology plays an important role in these changes. The properties
of multimedia streaming applications are that increased bandwidth requirements and data with varying
priorities and time constraints. Important data must be transmitted before other data. If data does not
arrive at the receiver before the playout time (lifetime), then it becomes unplayable. Current MPEG
streaming technologies employ three frames in the MPEG encoding scheme: Intra-VOP (I), Predicted
(P), and Bidirectional interpolated (B) frames [1]. The I frames are encoded independently, P frames are
encoded from preceding I or P frames, and B frames are encoded from preceding and succeeding I or P
frames [2]. The I, P, and B frames form a pattern called Group of Pictures (GOP). Typically, an MPEG
stream is constructed by repeating the GOP. The I frames are the first frames of a GOP, and B frames
appear between I and P frames. Without I frames, the entire GOP is unplayable. Without P frames, the
succeeding P and B frames are unplayable. Thus, the relative importance of I, P, and B frames can be
expressed as importance of I > importance of P > importance of B.
3To enhance the support of multimedia streaming applications in the transport layer, this study proposes
the Partially Reliable-Concurrent Multipath Transfer (PR-CMT) protocol. The novel feature of PR-CMT is
combing techniques of concurrent multipath transfer, partially reliable transmission, and prioritized stream
transmission.
PR-CMT is more suitable than other protocols for multimedia streaming. PR-CMT improves throughput
by transmitting data over all available paths. A “timed reliable service” concept based on that of PR-SCTP
was adopted in PR-CMT. Lifetime expired frames are abandoned and are not transmitted. Each stream
in PR-CMT is associated with different priorities. PR-CMT can prioritize multimedia streaming data.
Transmitting high-priority streams before low-priority streams prevents the transmission of I and P frames
from being blocked by the succeeding frames. The coding dependency of I, P and B frames can be
preserved.
Several problems arise when combining aforementioned three techniques. Overly conservative cwnd
growth and falsely acknowledged TSN occurs when applying the partially reliable transmission of PR-
SCTP. The growth of cwnd in PR-SCTP is overly conservative. Data are abandoned when their lifetimes
expire. The transmitted but abandoned data cannot be credited for cwnd. PR-SCTP cannot tell whether
a lifetime expired data is received by the receiver or not. Consequently, the cwnd cannot be precisely
inferred.
A frame that exceeds the MTU (Maximum Transmission Unit) is divided into multiple data chunks. The
CMT receiver may discard the whole frame due to the late arrival of certain data chunks. Such discard is
unnecessary. The receiver still can use the lifetime expired frame, which may be the important I frame, to
decode the other frames. Moreover, the abandoned data are considered as loss. The receiver buffer could
be blocked if the receiver does not receive the notification of the abandonment of data.
The rest of the paper is organized as follows: In Section II, related works on PR-CMT are given.
In Section III, main issues of the partially reliable transmission and prioritized stream transmission are
discussed. In Section IV, related concepts and techniques of the PR-CMT protocol are presented. In
Section V, the transmission behavior of PR-CMT is analyzed. In Section VI, PR-CMT is evaluated and
investigated in comparisons with several other transport protocols. Finally, concluding remarks are given
in Section VII.
5PR-SCTP can improve the PSNR and the dropped frame rate. The imprecise cwnd and receiver buffer
blocking issues, however, were not discussed. Aydin et al. evaluated CMT in multihop wireless network
[22]. They suggested the retransmission of packets should be made on the path with highest cwnd and
SSTHRESH.
On the other hand, SCTP does not prioritize streams. Several researchers have attempted to improve
the QoS of SCTP for multistreaming. Heinz II et al. proposed prioritized stream transmission for SCTP
[23]. The evaluation results showed that the transmission of high-priority data would be unaffected by
suddenly applied large amount of low-priority data. Zou et al. proposed a method of grouping streams into
subflows and using independent congestion control parameters to avoid the false sharing problem [24].
Subflows are given different priorities. The methods proposed in the above studies outperform SCTP.
The novelty of PR-CMT is that PR-CMT resolves imprecise cwnd and false acknowledged TSN issues
while combing CMT and PR-SCTP. PR-CMT with prioritized stream transmission is more suitable for
multimedia streaming.
III. MAIN ISSUES
The concept of PR-CMT is combining techniques of concurrent multipath transfer, partially reliable
transmission and prioritized stream transmission. This Section discusses related problems that may occur
when PR-SCTP is combined with CMT for multimedia streaming.
A. Issues in PR-SCTP
Although PR-SCTP provides partially reliable transmission for the multimedia streaming data, PR-
SCTP throughput may be compromised in some cases. Application data have a limited lifetime. Before
the lifetimes of data expire, data are considered reliable, i.e., they can be transmitted and retransmitted.
When lifetimes expire, data are abandoned and cannot be transmitted and retransmitted. The PR-SCTP
sender must send the FORWARD TSN chunk to advance the cumulative TSN of the receiver for the
expired data that are already assigned TSNs. Otherwise, the receiver would wait for the abandoned data
forever. However, two issues associated with in PR-SCTP are overly conservative cwnd growth and falsely
acknowledged TSN.
Overly Conservative Congestion Window Growth: PR-SCTP states that the abandoned data cannot
be credited for cwnd. In the example depicts in Figure 2, the sender sends data chunks with TSNs 1, 2,
7Fig. 2. Overly conservative cwnd growth and falsely acknowledged TSN issues for PR-SCTP.
Thus, the sender abandons the data chunks with TSN 1-4 and sends the FORWARD TSN with the new
cumulative TSN 4 to the receiver. The receiver only receives an incomplete message of an I frame, e.g.,
data chunks with TSN 1-3.
On the other hand, when the receiver receives the FORWARD TSN for the abandoned data, it must
skip the abandoned data chunk. If the abandoned data chunk belongs to a message, the other received
data chunks of the same message must be discarded. When the receiver receives the FORWARD TSN, it
would discard the data chunks with TSN 1-3. The message is incomplete now. Consequently, the upper
layer cannot receive a complete message from the transport layer. Due to the path diversity, the receiver
may receive the abandoned data after the FORWARD TSN is received. Even though the receiver receives
the abandoned data later, the upper layer is unable to receive a complete message. The transport layer
has discarded the data chunks in the incomplete message.
Since the abandoned data chunk is part of an I frame, the whole I frame and other received P or B
frames in the same GOP become useless. Even though the abandoned I frame cannot be played, it still
can be used for decoding. Abandoning a data chunk may only cause a small degradation on throughput.
However, it may also cause the entire GOP become useless. Even though the abandoned data chunk
indeed arrives at the receiver later, the transport layer cannot deliver to the complete message to the upper
layer. Besides the overly conservative congestion window growth and falsely acknowledged TSN issues,
partially reliable transmission in CMT causes the unnecessary discarding data problem.
Receiver buffer blocking due to abandoned data: Another issue is the receiver buffer blocking caused
9Fig. 4. Time line for a data chunk.
Streams in PR-CMT have different priorities. The PSS is responsible for inserting the application data
for different streams to the application data queue according to the stream priority. The scheduler is
responsible for generating and inserting data from the application data queue to the sending queue, and
abandoning expired data. The following subsections describe partially reliable transmission, concurrent
multipath transfer, and prioritized stream transmission.
B. Partially Reliable Transmission
The data transmission rules are essentially the same in PR-CMT and PR-SCTP. To resolve the issues
of overly conservative cwnd growth and falsely acknowledged TSN, the concept of the delayed data
abandonment is proposed. The delayed data abandonment is based on the concept of our previous work
[25]. Figure 4 shows the way that PR-CMT handles the expired data:
Before the lifetime of data expires, data can be transmitted and retransmitted. After the lifetime of data
expires, PR-SCTP and PR-CMT handle expired data in different ways. PR-SCTP marks the expired data as
abandoned and acknowledged. Therefore, the expired data cannot be credited for cwnd. The FORWARD
TSN chunk is generated and sent to the receiver.
PR-CMT delays abandoning data. PR-CMT marks the expired data as expired. The expired data are
treated as non-acknowledged and can be credited for cwnd. However, if the expired data are lost, PR-CMT
functions like PR-SCTP and marks expired data as abandoned. The FORWARD TSN chunk is generated
and sent to the receiver.
PR-CMT delays abandoning data until data are lost. If expired data are not lost and acknowledged later,
they can be credited for cwnd. Consequently, PR-CMT can precisely infer cwnd than PR-SCTP does. If
the expired data are lost, PR-CMT can detect the loss of data through the fast retransmission event or
timeout retransmission event. Thus, the falsely acknowledged TSN problem is reduced in PR-CMT. Since
PR-CMT delays abandoning data until data are lost, the sending frequency of the FORWARD TSN chunk
11
of the latest transmitted destination address and then appended to TransmittedQueue of the new retrans-
mission destination address. PR-CMT can therefore determine which TSN is assigned to which destination
address.
In the steps of processing SACK, variables for inferring cwnd must be initialized first. The highestAckedTSN
keeps track of the highest acknowledged TSN for each destination address; the cumAck determines
whether or not a destination address can update its cwnd after receiving a SACK; the newAckedBytes
counts the newly acknowledged bytes that are not credited for cwnd so far.
In the step of investing newly acknowledged TSNs, let destination d be the destination address to which
the outstanding data chunk with TSN t is transmitted. To eliminate unnecessarily fast retransmission, the
missing report count of the data chunk with TSN t is increased only when the data chunk with TSN t
is not being acknowledged by the SACK and is less than highestAckedTSN of d. If the missing report
count reaches 3, the fast retransmission is triggered on the destination address d.
In the step of calculating the newly acknowledged bytes for each destination, if the data chunk with TSN
t is newly acknowledged by the SACK and the state of the data chunk with TSN t is not ABANDONED,
then the size of the data chunk with TSN t is added to newAckedBytes. Consequently, if the data chunk
with TSN t is the head of transmittedQueue of d, d.cumAck is set to TRUE.
In the final step, if cumAck of a destination address is set to TRUE, the cwnd of that destination
address can be updated as defined in RFC 4960 [12].
In PR-SCTP, the sender can send the FORWARD TSN via any path. In order to prevent the abandoned
data causing the receiver buffer blocking, once the data chunk is abandoned, the FORWARD TSN is sent
to every path. PR-CMT follows the following rules to send the FORWARD TSN:
• When data are abandoned, the FORWARD TSN is sent to every active destination address.
• Start the F-Timer for each destination address to which the FORWARD TSN is sent.
• Upon receiving a SACK, if the cumulative TSN of the SACK is larger than or equal to the cumulative
TSN of the FORWARD TSN, disable F-Timer on all destination address.
• If F-Timer is expired, retransmit the FORWARD TSN over every active destination address.
The main difference between the Iyengar CMT algorithm and PR-CMT is that PR-CMT must consider
abandoned data. If data are expired, the state of data is changed to expired. The expired data can be credited
for cwnd. However, when data are abandoned after loss, the sender must not credit the abandoned data for
13
transmission and prioritized stream transmission. Since all data have lifetimes, PR-CMTf must transmit
data before lifetimes expire. Let Dd be the time that the data is delivered from the application to PR-CMT,
let Dt be the time instant that the data is transmitted, let Dlt be the lifetime of the data, Dsize be the size
of the data, and let Dr be the remaining time for transmission, where
Dr = Dlt − CurrentT ime.
Dr changes over time. To simplify the analysis, assume that Dr is initially the same for all data. Let
BW be the aggregated bandwidth of all available paths. If BW is larger enough to transmit all data,
then no data are abandoned. However, in a congested environment or a high loss rate environment, the
increased transmission delay causes PR-CMT to abandon the expired data. Let the time instance in which
PR-CMTf begins abandoning data be the abandoning point. For data with unexpired lifetimes, their Dr
must approximate to 0.0s. This implies that each data chunk is queued in PR-CMTf for almost (Dlt−Dd)
seconds.
However, if the path loss rate is high, retransmitting lost data is difficult since the Dr of the lost data
are probably close to 0.0s. As a result, by the time PR-CMTf detects a loss of data, the lifetime of the
data are probably be expired. The lost data with expired lifetime cannot be retransmitted. Thus, PR-CMTf
must send the FORWARD TSN chunk to advance the cumulative TSN of the receiver for the lost data.
When combining partially reliable transmission and prioritized stream transmission, PR-CMTfs aban-
dons low-priority data to ensure the transmission of high-priority data. Let Sn be the nth stream, Sdrn
be the data rate for the Sn stream, and S0 > S1 > ... > Sn be the stream priorities. The transmission
behavior of the prioritized stream transmission ensures that data of Sj are transmitted only when there
are no queued data of Si, where i < j. If BW is insufficient to transmit all data, i.e.,
BW <
N∑
i=0
Sdrn .
PR-CMTfs finds a Sk to fit the bandwidth limitation, i.e.,
BW ≥
k−1∑
i=0
Sdrn .
For those Sj , PR-CMTfs does not transmit Sj data to ensure the transmission of Si data, where i < k
and j ≥ k,
15
Fig. 8. The simulation topology.
Evaluated transmission modes for PR-SCTP, CMT and PR-CMT are as follows:
• PR-SCTP: original, unmodified PR-SCTP.
• PR-SCTPf: PR-SCTP with delay abandoning data.
• CMT: unmodified CMT.
• PR-CMTf: PR-CMT with partially reliable transmission, but without using delay abandoning data.
• PR-CMT: PR-CMT with partially reliable transmission, delay abandoning data, and prioritized stream
transmission.
The partially reliable transmission is an important feature of streaming multimedia data. Partially reliable
transmission in PR-SCTP, however, causes overly conservative congestion window growth and falsely
acknowledged TSN issues. The following experiment results demonstrate that delay abandoning data
helps to precisely infer cwnd and loss of data. Thus, the partially reliable transmission can be used to
transmit the multimedia streaming data. The video quality achieved by PR-CMT is superior to the other
protocols.
A. Evaluation of Delay Abandoning Data
This subsection evaluates the effect of adopting delay abandoning data by comparing PR-SCTP and
PR-SCTPf. In this simulation, Path1 is the primary path and Path2 is for retransmission only. Both PR-
SCTP and PR-SCTPf sent data to the receiver at the full speed. The lifetime of data was set to 5s. Figure
9 shows that the increase in the cwnd of PR-SCTPf is more precise than that of PR-SCTP. Due to the
17
Fig. 10. Comparison on throughput.
Fig. 11. Comparison on cwnd growth.
packet loss rate in wireless network [27]. Figure 11 shows the cwnd of PR-SCTP and PR-SCTPf. In the
high loss rate environment, many packets were lost randomly. If the sender received three consecutive
SACKs, which implied that there was a missing on a certain data chunk, then the sender retransmitted
the missing data chunk via the fast retransmission, and the cwnd was halved. In Figure 11, PR-SCTPf
detected much packet loss than PR-SCTP did. After the abandoning point, PR-SCTP started to send the
FORWARD TSN for the lost data chunk. Consequently, the falsely acknowledged TSN occurred. As a
result, PR-SCTP could not reflect the fact that data were lost on the cwnd. Since PR-SCTP did not cut
the cwnd for the lost data chunk, the cwnd of PR-SCTP should be larger than PR-SCTPf. However, with
the impacts of overly conservative cwnd growth, PR-SCTP could not have a larger cwnd than PR-SCTPf.
PR-SCTP still could detect packet loss in some situations. Once the PR-SCTP cut the cwnd for the loss
data, the growth of cwnd of PR-SCTP was slow. Although the overly conservative cwnd growth decreased
19
Fig. 14. MPEG stream statistics.
acknowledged TSN may imprecisely increase the cwnd, the throughput of PR-SCTP is not as good as
PR-SCTPf.
B. Evaluation of Multimedia Streaming Quality
This subsection compares multimedia streaming quality of CMT, PR-CMTf, and PR-CMT. The used
MPEG stream was a famous Japanese animation, Naruto. The frame rate of the encoded stream was 30
fps. The used MPEG GOP pattern was “IBBBPBBBPBBBPBBBPBBBPBBBPBBBP”. Figure 14 shows
I, P, and B frames being sent in stream S0, S1, and S2, respectively. Thus, streaming priority is S0 > S1
> S2. The receiver is assumed to have 10s buffer time before the playout. Each frame has 10s lifetime.
The sender starts to stream data to the receiver during 0-50s. The 10s buffer time is reasonable. The
popular multimedia streaming application, PPStream, which has more than ten thousand channels, also
adopts 10-20s to buffer the streaming data before the first playout of frames [28].
In this simulation, more background traffic, which was gathered from NCKU, was injected into the
network. The available bandwidth was fewer and less sufficient to transmit all frames than previous
simulation. Some frames must be abandoned. Received frames that did not arrive at the receiver before
their lifetimes expired were unplayable. If the dependent frames were not playable, the received frames
were also unplayable. For example, let the received frames sequence in a GOP be I0B1B2B3P4B5B6B7-
B9B10B11P12. I0B1B2B3P4 are all playable. Since P8 was not received, B5B6B7 and B9B10B11P12 were
unplayable. Thus, loss of I or P frames substantially degraded video quality.
Figure 15 shows that the receiver buffered the received frames in the first 10s and started playing the
first frame from the 11th second. Due to the cwnd limitation, PR-CMTf and PR-CMT couldn’t transmit
frames at full speed. Numerous I and P frames were queued in the buffer of PR-CMTf and PR-CMT. The
abandoning point of PR-CMT occurred quickly. PR-CMT transmitted I or P frames in the 1-10th GOPs
before any B frames. However, in CMT and PR-CMTf, B frames were not delayed by I frames or P
frames. As a result, initially, CMT and PR-CMTf had higher playable frame rate than PR-CMT had. The
21
(a) (b)
Fig. 16. Comparison on playable frame distribution.
(a) (b)
Fig. 17. Comparison on PSNR.
frames in the same GOP cannot be played. In this way, even though B frames were transmitted and
received before the lifetime, B frames were unplayable. Therefore, large gaps appeared in the playable
frame distribution of PR-CMTf. In PR-CMT, when the bandwidth was insufficient, PR-CMT abandoned
B frames to preserve the transmission of I and P frames. Most frames received in PR-CMT are playable.
According to the GOP pattern, one P frame appeared after three consecutive B frames. If P frames were
playable, then the large gaps between playable frames would not occur. The coding dependency could be
kept in PR-CMT. Thus, the playout did not stop for several seconds.
Figure 17 shows the PSNR for PR-CMTf and PR-CMT. The PSNR is computed by comparing the frame
before and after transmission. The PSNR value for a playable frame is infinity. Thus, in the Figures, the
peak value of 100 dB is infinity. In Figure 17-(a), PR-CMT was able to maintain the PSNR value at the
peak level. When some frames were abandoned or unplayable, the PSNR was down to the range of 20dB
23
VII. CONCLUSION
The proposed Partially Reliable Concurrent Multipath Transfer (PR-CMT) combines techniques of concur-
rent multipath transfer, partially reliable transmission, and prioritized stream transmission for multimedia
streaming. PR-CMT can eliminate the overly conservative cwnd growth problem and precisely infer the
loss of packets. PR-CMT improves about 29% and 21% percentage of throughput when using only one
path for transmission in the two simulated network conditions. As for multimedia streaming, PR-CMT
can keep the coding dependency of I, P, and B frames during transmission. Consequently, the large gaps
phenomenon is reduced in PR-CMT. The value of PSNR is kept at the peak level. The playout of video is
not suspended for seconds when the network is congested or unreliable. PR-CMT improves the percentage
of the playable frame from 30.6% to 67.4% after applying delay abandoning data and prioritized stream
transmission.
In the future work, PR-CMT can be evaluated in a more complicated environment, such as the vehicular
network. The links between vehicles and road site units (RSU) are not reliable; the handoff between
vehicles and RSUs occurs frequently. PR-CMT can be adapted to deal with the high handoff frequency
and the high packet loss rate for data with limited lifetime and different importance.
Acknowledment The research is supported by the National Science Council of the Republic of China
under Grant No. NSC 97-2221-E-006-096-MY2 and the Program of Top 100 Universities Advancement,
Ministry of Education, Taiwan, Republic of China.
REFERENCES
[1] http://www.mpeg.org/ accessed January 2010.
[2] Wu, H., Claypool, M., and Kinicki, R. :‘Adjusting forward error correction with temporal scaling for tcp-friendly streaming mpeg’,
ACM Transactions on Multimedia Computing, Communications, and Applications (TOMCCAP), 2005, 1, (4), pp. 2971–2976.
[3] Caro, A. L., Iyengar, J. R., Amer, P. D., Ladha, S., Heinz, G. J., and Shah, K. C. :‘Sctp: A proposed standard for robust internet data
transport’, IEEE Computer, 2003, 36, (11), pp. 56–63.
[4] Casetti, C., and Gaiotto, W. :‘Westwood sctp: load balancing over multipaths using bandwidth-aware source scheduling’, Proceedings
of the IEEE International Conference on Vehicular Technology, 2004, (4), pp. 3028–3029.
[5] Wang, B., Feng, W., Zhang, S.-D and Zhang H.-K :‘Concurrent multipath transfer protocol used in ad hoc networks’, IET Commun.,
2010, 4, (7), pp. 884-893
[6] Wang, W., Liew, S. C., and Li, V. :‘Solutions to performance problems in voip over a 802.11 wireless lan’, IEEE Transactions on
Vehicular Technology, 2005, 54, (1), pp. 366–384.
[7] Huang, C. M., Tsai, C. H., and Tsai, M. C. :‘Design and implementation of video streaming hot-plug between wired and wireless
networks using sctp’, The Computer Journal, 2006, 29, (4), pp. 400–417.
[8] IETF RFC 3758 :‘Stream control transmission protocol (sctp) partial reliability extension’, 2004.
[9] Lee, H.-J, Byun, H.-J and Lim, J.-T :‘TCP-friendly congestion control for streaming real-time applications over wireless networks’,
IET Commun., 2008, 2, (1), pp. 159-163
[10] Chou, L.-D., Chen, J.-M., Kao, H.-S., Wu, S.-F. and Lai, W. :‘Seamless streaming media for heterogeneous mobile networks’, ACM
Springer Mobile Networks and Applications, 2006, 11, (6), pp. 873-887
[11] Jammeh, E. A., Fleury, M., and Ghanbari, M. :‘Performance analysis of multi-homed transport protocols with network failure tolerance’,
IET Commun., 2009, 3, (1), pp. 25–37
[12] IETF RFC 4960 :‘Stream control transmission protocol’, 2007.
RG-SCTP: Using the Relay Gateway Approach for
Applying SCTP in Vehicular Networks*
Chung-Ming Huang and Ming-Sian Lin
Lab. of Multimedia Mobile Networking,
Dept. of Computer Science and Information Engineering,
National Cheng Kung University,
Tainan, Taiwan, R.O.C.
Correspondence: huangcm@locust.csie.ncku.edu.tw
Abstract—Typically, a vehicle uses On Bus Unit (OBU)
to connect to Road Side Unit (RSU) in vehicular networks.
When a Corresponding Node (CN) communicates with a MN
(Mobile Node, i.e., a vehicle) in vehicular networks, packets are
transmitted through both the wired and wireless links. The link
between OBU and RSU is a wireless link, while the link between
RSU and CN is a wired link. The wireless link is known with a
high packet loss rate. Many packet losses in the wireless link are
caused by error loss. If the retransmission is made by CN, CN
needs to retransmit packets through both the wired and wireless
links. Thus, in this paper, we proposed to use the relay gateway
approach for having SCTP (RG-SCTP) in vehicular networks.
The relay gateway is able to retransmit packets caused by error
loss in the wireless link. The retransmission need not be made
by CN. As a result, retransmission made by the relay gateway
is much faster than that made by CN. The simulation results
show that RG-SCTP can have faster transmission speed and
less wasted bandwidth in the wired link than the basic SCTP can.
Keywords SCTP, relay gateway, vehicular network
I. INTRODUCTION
In recent years, the advanced wireless technologies enable ve-
hicles to connect to the Internet. Many wireless technologies,
such as 802.11b/g, 802.11p, and 3G, are proposed for vehicular
networks. A vehicular network can be along with a highway
or cover all roads in a specific area [1]. A moving vehicle can
have Internet access with Road Side Unit (RSU) in vehicular
networks. RSUs are connected to the infrastructure. Such com-
munication is Vehicle to Infrastructure (V2I) communication.
In addition, many researchers also focus on Vehicle to Vehicle
(V2V) communication. Such networks are Vehicular Ad hoc
NETworks (VANETs).
Figure 1 shows a typical vehicular network (V2I). A vehicle
connects to the Internet through a nearby RSU. A number of
RSUs are associated with one gateway. When a remote CN
communicates with a MN, e.g., a vehicle, all packets must pass
through the gateway. The link between CN and the gateway
is a wired link, while the link between RSU and MN is a
wireless link. The wireless link is known for a high loss rate.
Most packet loss occurs in the wireless link caused by error
*The research is supported by the National Science Council of the Republic
of China under Grant No. NSC 97-2221-E-006-096-MY2 and the Program of
Top 100 Universities Advancement, Ministry of Education, Taiwan, Republic
of China.
Fig. 1. Vehicular network (V2I).
loss, i.e., impairments such as noise, interference and multi-
path fading. The error loss causes packet loss randomly.
CN is able to deal with the loss of packets through fast
retransmission. The congestion window (cwnd) is cut to half
in fast retransmission in SCTP. However, error loss is different
from congestion loss. Decreasing cwnd for error lost packets is
unnecessary. Moreover, when packets are lost in the wireless
link, CN must retransmit lost packets through both the wired
and the wireless links. In a real-world measurement report
from Balasubramanian et al., the packet loss rate can reach
more than 20% depending on the distance between a vehicular
and its RSU [2]. Many wireless technologies employ link layer
retransmission. However, the maximum transmission retries is
usually below three times [3]. Since the packet loss is mainly
in the wireless link, the retransmission made by the gateway
is more efficient than that made by CN.
Thus, this study proposes using the relay gateway approach
for applying SCTP in vehicular networks, for which the
method is called RG-SCTP. The relay gateway is devised to
monitor the traffic passing through it. A relay gateway is able
to investigate SCTP packets to retransmit lost packets in the
wireless link. Notice that the handoff issue is not included in
this work. Main features of RG-SCTP are as follows:
• Retransmit packets by the relay gateway: The relay
gateway buffers SCTP packets that contain data chunks in
Fig. 2. Data transmission sequence in vehicular networks.
missing on a data chunk. However, in most cases, packets are
lost in the wireless link, but not in the wired link. Since all
packets flow through the gateway, the gateway is able to store
and retransmit lost packets. The retransmission made by the
gateway has the following benefits:
Bandwidth: Retransmitting a lost packet in the wireless
link consumes the bandwidth in wired and wireless links. If
the retransmission of the packet that is lost in the wireless link
can be done by the gateway, the bandwidth and the packet
retransmission time can be saved. CN need not waste the
bandwidth in the wired link to retransmit the lost packets.
Retransmission time: Since the gateway is only two hops
away from MN, the latency between the gateway and MN is
usually less than that between the gateway and CN. Retrans-
mission made by the gateway takes less time than that made
by CN.
However, in the traditional network design, the gateway is
only to forward received packets to the correct destination.
The gateway uses only the IP layer information to forward
packets. The SCTP is a transport layer protocol. The gateway
must have cross layer information to retransmit the lost packet
in the wireless link. Moreover, the packet loss in the wireless
can be error loss or congestion loss. If congestion loss occurs,
the gateway must not retransmit packets for CN. CN must react
to the network congestion on its congestion window. Thus, the
gateway only can retransmit lost packets caused by error loss.
The design of the relay gateway for SCTP is different from
the conventional gateway.
IV. DESIGN OF RG-SCTP
This Section introduces the design of RG-SCTP. The relay
gateway is assumed to connect to outer and inner networks
through two interfaces. CN is located in the outer network,
while MN is located in the inner network The actions of the
relay gateway are storing, retransmitting and freeing packets.
The relay gateway uses cross-layer information to identify
whether a received packet needs to be stored in the buffer
Fig. 3. The packet processing algorithm.
or not. Moreover, the relay gateway investigates SACKs from
MN to detect and retransmit the lost packets. Finally, the relay
gateway frees the stored packets depending on its resource
utilization.
Store packet In this action, the relay gateway stores received
packets from CN. Figure 3 shows the packet processing
algorithm in the relay gateway. In the first step, the relay
gateway checks the type of the packet that comes from the
outer network, i.e., from CN. If it is not an SCTP packet, the
packet is skipped. If the packet contains TSNs which not are
acknowledged, the packet is stored in the buffer of the relay
gateway. MNs are identified by their IP addresses. The relay
gateway keeps a TSN map for each MN. The relay gateway
checks every TSN in data chunks of the packet iteratively. The
MissCount counts the missing count of a TSN. If a TSN is
not received before, then the TSN is added to the TSN map and
marked as non-acknowledged. If a TSN is not acknowledged
but received before, it means that the data chunk of that TSN is
retransmitted by CN. The MissCount of that TSN is cleared.
If the relay gateway records that the TSN is retransmitted and
appeared in a previously received packet, the owner of that
TSN is reset to the current packet.
Retransmit packet To retransmit a lost packet, the relay
gateway must know that the packet is lost. The relay gateway
employs a retransmission scheme like fast retransmission of
SCTP. Figure 4 shows the SACK processing algorithm in the
relay gateway. The relay gateway analyzes the acknowledged
TSN in a SACK from the inner network, i.e., from MN. A
TSN that is not acknowledged before but acknowledged in
the current SACK is marked as acknowledged. If all TSNs
in a packet have been acknowledged, then that packet can be
freed.
The HighestTSN is the highest TSN value of the newly
acknowledged TSN in the SACK. If a non-acknowledged
TSN is less than HighestTSN , the MissCount of that
Fig. 6. Comparison on the transmission speed.
communicates with CN through the wired and wireless link,
i.e., Wi-Fi, in a vehicular network. MN was connected to a
nearby RSU covered by a relay gateway. CN transmitted a
20MB file to MN in the experiment. Based on the real-world
measurement report from Balasubramanian et al., the wireless
link was assumed with 5%-25% error loss rates. The wired
link was error loss free.
In the experiment, SCTP and RG-SCTP were evaluated.
The goal of this simulation is to evaluate the relay gateway in
retransmitting lost packets caused by error loss in the wireless
link. The handoff issue was not included in this evaluation.
Figure 6 shows the transmission speed for SCTP and RG-
SCTP. When the loss rate is increased, SCTP needed more
time to transfer the 20MB file than RG-SCTP did. SCTP
was able to detect the loss of packet in the wireless link and
retransmitted lost packets through both the wired and wireless
links. The retransmission time of SCTP was much longer than
that of RG-SCTP. The relay gateway was able to detect the
loss of packets in the wireless link. The relay gateway could
react to the packet loss much faster than CN. As a result, the
relay gateway saved the time to retransmit a lost packet.
Moreover, the cwnd of RG-SCTP was larger than that of
SCTP in most time. The growth of cwnd was analyzed in the
15% loss rate situation further. Figure 7 shows the growth of
cwnd of SCTP and RG-SCTP. Overall, RG-SCTP had larger
cwnd than SCTP did. In SCTP, CN would notice the error loss
in the wireless link. Since the error loss was random, CN could
detect the error loss through fast retransmission and the cwnd
was cut to half. Due to the high loss rate in the wireless link,
the cwnd size of SCTP was lower than 20000 bytes in most
time. The low cwnd reflected the increased transmission speed
in Fig 6. On the other hand, since the retransmission could be
made by the relay gateway, CN of RG-SCTP would not notice
the error loss in the wireless link through fast retransmission.
Consequently, the cwnd did not cut to half of the original
cwnd frequently. However, although CN did not notice the
packet loss in the wireless link, the retransmission made by
the relay gateway increased the round-trip time measured by
CN. In some cases, if the same packet has lost more than one
time, the relay gateway freed the packet. Consequently, CN
retransmitted the lost packet through timeout retransmission,
Fig. 7. Comparison on congestion window with the 15% loss rate in the
wireless link.
Fig. 8. Comparison on transmitted bytes in the wired link.
and cwnd was cut to one MUT, e.g., 1500 bytes. However, the
cwnd of RG-SCTP was still much larger than that of SCTP.
As a result, the transmission speed of RG-SCTP was faster
than that of SCTP.
On the other hand, the relay gateway improves not only the
transmission speed, but also the transmitted bytes in the wired
link. Figure 8 shows the transmitted bytes in the wired link.
Since RG-SCTP rarely retransmitted lost packets in the wired
link, the transmitted bytes in the wired link of RG-SCTP were
much less than that of SCTP. In most cases, retransmission was
made by the relay gateway. CN of RG-SCTP retransmitted
fewer packets than that of SCTP. As a result, the bandwidth
of the wired link was saved.
© The Author 2009. Published by Oxford University Press on behalf of The British Computer Society. All rights reserved.
For Permissions, please email: journals.permissions@oxfordjournals.org
doi:10.1093/comjnl/bxp100
The Design of Mobile Concurrent
Multipath Transfer in Multihomed
Wireless Mobile Networks
Chung-Ming Huang∗, Ming-Sian Lin, and Lik-Hou Chang
Laboratory Of Multimedia Mobile Networking, Deptartment of Computer Science and Information
Engineering, National Cheng Kung University, Tainan, Taiwan, R.O.C.
∗Corresponding author: huangcm@locust.csie.ncku.edu.tw
As more and more devices are equipped with multiple network interfaces, the multihomed technology
is becoming an important technology that can provide more reliable connection against the network
failure and higher data transmission rate. Concurrent Multipath Transfer (CMT), which is based
on SCTP, is devised for multihomed networks. CMT can transmit data over all paths to maximize
the data transmission speed. One of the main concerns of CMT is the receiver buffer blocking issue,
especially in multihomed wireless mobile networks. Receiver buffer blocking is mainly caused by lost
data. In this paper, we propose mobile CMT (mCMT) over wireless networks to deal with the receiver
buffer blocking caused by error loss and handoff loss. mCMT has the features of (i) path-oriented
multistreaming, (ii) MIH-assisted handoff mechanism, in which MIH denotes Media Independent
Handover and (iii) association resume. Path-oriented multistreaming can reduce the receiver buffer
blocking caused by error loss. MIH-assisted a handoff can reduce the amount of packet loss during
a handoff, which may lead to receiver buffer blocking. Moreover, mCMT introduces the concept of
association resume to recover the disconnected association. Simulation results show that mCMT can
reduce the effect of the receiver buffer blocking effectively for devices that have smaller buffer size.
Keywords: multihoming; Concurrent Multipath Transfer; SCTP; mobile wireless network
Received 14 June 2009; revised 20 October 2009
Handling editor: Ing-Ray Chen
1. INTRODUCTION
In recent years, Stream Control Transmission Protocol (SCTP),
which was proposed by IETF in 2004, has captured the attention
of researchers [1]. SCTP has the features of multihoming and
multistreaming. Computing devices in multihomed networks
are equipped with multiple interfaces, such as Wi-Fi and
3.5G. Unlike TCP and UDP, SCTP supports multihoming to
transmit data over multiple paths. SCTP mainly transmits data
over one primary path and leaves the others as retransmission
paths. Once the primary path fails, SCTP can switch the
transmission to one of the retransmission paths. The main
spirit of SCTP is in providing reliable link connections against
link failure. Therefore, SCTP does not exhaust the aggregated
bandwidth for data transmission. More and more devices, such
as Notebook or Smart Phone, are equipped with Wi-Fi and 3.5G
interfaces together. Iyengar et al. [2, 3] proposed the Concurrent
Multipath Transfer (CMT) protocol using SCTP multihoming
over independent end-to-end paths. CMT is a technology based
on SCTP that can transmit data over all paths. Unlike SCTP,
CMT can exhaust the aggregated bandwidth. SCTP only uses
one path for data transmission. CMT can fully utilize the
multihoming technology to transmit data using all interfaces.
CMT can have higher throughput than SCTP.
However, wireless networks have high data loss rate and the
mobility issue. Two types of packet loss in wireless networks
are as follows [4]:
(i) error loss, in which packet loss is mainly caused by
impairments such as noise, interference and multipath
fading;
(ii) handoff loss, in which packet loss is due to futile
transmissions over the old wireless network that the
mobile node has recently moved away from.
Packet loss may cause the receiver buffer blocking problem in
CMT. For example, Wi-Fi and 3.5G have different bandwidth
The Computer Journal, 2009
 The Computer Journal Advance Access published November 19, 2009
 at N
ational Cheng Kung University Library on Septem
ber 26, 2010
co
mjnl.oxfordjournals.org
D
ow
nloaded from
 
Mobile Concurrent Multipath Transfer 3
suitable paths during transmission, mCMT avoids data loss that
results in receiver buffer blocking.
SCT PDAR [5] extends the multihoming feature of SCTP
to support seamless IP handoff. Koh et al. [8] proposed
mSCTP soft handoff in the transport layer. They considered
a mobile node (MN) that initiates an SCTP association with a
correspondent node (CN) in wireless networks. SCT PDAR can
dynamically add a new IP address into an SCTP association and
set the new IP address to be the primary path’s IP address to force
the sender to transmit data through the new IP address. When the
old IP address becomes inactive, SCT PDAR can dynamically
delete the old IP address from the SCTP association.
Liao et al. [9] proposed cmpSCTP, which was able to transmit
data over all paths and deal with soft handoff. cmpSCTP
adopts multibuffer structure and a two-level sequence number.
Each path has its own connection buffer, and the association
has an association buffer to reorder the received packets.
Transmission Sequence Number (TSN) is used for one path
only. cmpSCTP uses Association Sequence Number (ASN)
to reassemble received data from different paths. However,
even with the multibuffer structure and two-level sequence
number, cmpSCTP cannot avoid receiver buffer blocking.
Received data still need to be reassembled in the association
buffer.
Kim et al. [10] proposed a data transmission method to
reduce packet reordering during handoff. Once MN changes
its primary IP address to a new IP address, MN checks
whether there are outstanding data chunks that have not been
acknowledged. If there are non-acknowledged outstanding data
chunks, MN retransmits all outstanding data chunks to the new
IP address. The simulation results shows that the performance
of SCTPDAR is improved.
Huang et al. [11] proposed a transmission method to improve
transmission goodput in wireless networks using multipath
transmission of SCTP (WiMP-SCTP). WiMP-SCTP introduced
two transmission modes, i.e. the ‘data-stripping mode’ and the
‘data-duplicating mode’, to enhance transmission goodput for
different wireless link status. The data-striping mode is designed
to greedily improve the goodput if the status of the wireless
network is good. The data-duplicating mode is designed to
improve the reliability when the status of the wireless networks
is bad. WiMP-SCTP determines the status of an association
by calculating the amount of transmission errors of all paths
used for mobile multipath transmission. When the amount
of transmission errors exceeds the data duplicating threshold,
WiMP-SCTP switches from the data-striping mode to the data-
duplicating mode to transmit data duplicately for improving
transmission reliability.
In the literature, many researchers have evaluated the handoff
efficiency of mSCTP and proposed new handoff schemes using
IPv6. Tsang et al. [6] evaluated the handoff performance
among Mobile IP, Fast Handoff and mSCTP in mobile wireless
networks. The result shows that mSCTP has better performance
than the others.
Kim et al. [12] proposed an analysis of handoff latency
between Mobile IPv6 and mSCTP. They compared both
horizontal and vertical handoff in Mobile IPv6 and mSCTP. The
results show that the latencies of horizontal and vertical handoff
in mSCTP are smaller than those of Mobile IPv6. mSCTP
is considered to be the fastest handoff solution for wireless
networks.
Lee et al. [13] proposed a fast handoff method for mSCTP
using FMIPv6. MN gets Router Advertisement (RA), which
includes the next router’s information, from the current router.
Through the help of RA, MN can perform tunneling between
old and new routers. However, tunneling increases the overhead
of the router buffer. The simulation result shows that mSCTP
handoff has less latency than FMIPv6.
An et al. proposed a handoff mechanism to reduce handoff
latency using MIH services in FMIPv6 [7, 14, 15]. With MIH
information, FMIPv6 can increase the precision in the predictive
mode by reducing the handover initiation time; thereby FMIPv6
can reduce the expected handoff latency. Since the handoff
initiation time in the FMIPv6 is decreased, the overlap coverage
between adjacent cells can be reduced.
Moreover, in the application layer, the IP Multimedia
Subsystem (IMS) also takes the advantages of multihoming
characteristics for continuous multimedia services. Bellavista
et al. [16] proposed a vertical handoff solution for service
continuity and dynamic multimedia content tailoring based
on the primary design guideline of exploiting terminal-
based decentralized handoff predictions to proactively activate
application-level management operations. Magedanz et al. [17]
proposed mSCTP-based proxy in IMS. The mSCTP-based
proxy supports QoS provisioning and adaptation for the mobile
nodes when moving in a heterogeneous wireless environment.
High loss rate in wireless networks and the loss due to handoff
may result in receiver buffer blocking frequently. Our proposed
mCMT concentrates on scheduling new transmissions to reduce
receiver buffer blocking during a normal state and handoff
state in wireless networks. The originality of mCMT is that
mCMT adopts path-oriented multistreaming and MIH-assisted
handoff mechanism to resolve the receiver buffer blocking issue.
Moreover, the concept of AR is proposed to resolve the hard
handoff issue.
3. MAIN ISSUES
In this section, issues of handoff and receiver buffer blocking
are discussed.
3.1. SCTP overview
Application data are divided into data chunks in SCTP. Each
data chunk is associated with a unique TSN. Data in SCTP
are considered as stream oriented. Each data chunk is assigned
a stream ID and a stream sequence number. SCTP uses the
The Computer Journal, 2009
 at N
ational Cheng Kung University Library on Septem
ber 26, 2010
co
mjnl.oxfordjournals.org
D
ow
nloaded from
 
Mobile Concurrent Multipath Transfer 5
FIGURE 2. The receiver buffer blocking caused by handoff loss.
the lost data resulting from handoff in Path 1. Lost data
resulting from handoff can only be retransmitted through
timeout retransmission, which takes much more time than fast
retransmission. Before the CN receives the ASCONF-DeleteIP
message, the CN possibly retransmits lost data resulting from
handoff to the failure path because the CN has no idea that Path
1 is unreachable. If the retransmission is made on the same path,
to which data are transmitted, the retransmission is meaningless.
Consequently, the receiver buffer blocking becomes worse.
The explanation for the receiver buffer blocking caused by
handoff loss is that the MN cannot notify the CN before
link failure. The transport layer lacks the knowledge of the
underlying link status, e.g. signal strength. The MN cannot
send the ASCONF-DeleteIP message to the CN until the MN
detects that the link fails. Before the CN receives the ASCONF-
DeleteIP message, many data that are sent to the unreachable
path are lost. The handoff loss makes the situation of receiver
buffer blocking worse than data loss caused by error, because
the CN needs more time to detect the unreachable path and to
retransmit the lost data resulting from handoff.
3.4. The impact of buffer size and bandwidth for receiver
buffer blocking
The size of the receiver buffer has its limitation. In practice,
the default socket buffer size of SCTP in the Linux Kernel is
64 kB. Although the memory capacity is increased, the Linux
Kernel still adopts limited memory for the socket buffer of
the transport layer. Most free memory is allocated to the other
kernel modules and applications. Receiver buffer blocking is
also related to the bandwidth. Higher bandwidth can cause
receiver blocking in a shorter time. Suppose that Path 1 is with
higher bandwidth than that of Path 2. Let t be the time to detect
and retransmit the lost data on Path 2. If the bandwidth of Path 1
is enough to fill up the free buffer space in the receiver before the
given time t , then receiver buffer blocking occurs. As the new
data transmission technology always improves the transmission
efficiency to provide better bandwidth, the increased buffer size
still cannot avoid the receiver buffer blocking.
On the other hand, receiver buffer blocking is not unique to
the transport layer. Receiver buffer blocking may appear at any
layer if data are transmitted and received in sequence through
multiple paths. The receiver always needs a single buffer to
reassemble or reorder the received data. When the buffer space
is limited, receiver buffer blocking cannot be avoided.
3.5. Association resume
In some worst cases, an MN may encounter a situation that
no path is available for data transmission. All links fail at the
time. The MN gets a new IP address after handoff. CN cannot
identify the MN by the new IP address. For example, an MN
has 802.11p and 3.5G interfaces. The MN may move with the
vehicle to enter an area, which is not fully covered by 802.11p
and 3.5G. The MN needs some short time to leave the no-
signal area to recover the connection. However, the time for
leaving the no-signal area is sufficient enough to cause the CN
suspending the association with the MN. Once the association is
suspended, applications on the MN and the CN are suspended
too. The MN needs to reestablish a new association with the
CN. Applications resided on the MN and the CN need to go
back to the state that was before the association was broken.
The application restarting involves much more time than that
for the transport layer handoff. For instance, to restart FTP files
downloading, the MN needs to transmit several messages to the
CN to resume the file downloading. The transmitted messages
include the login message, transfer mode setting message and
file transfer message.
In the current handoff mechanism of SCT PDAR , the MN
must have at least one active path to transmit control messages
for handoff. In the above scenario, the MN is fully disconnected
with the CN. Moreover, even if the MN reenters into the area,
which is covered by 802.11p or 3.5G, the IP address of the MN
is changed. The CN has no idea that the MN is the same as the
original one. As a result, the association cannot be resumed.
4. MOBILE-CONCURRENT MULTIPATH
TRANSFER (MCMT)
In this section, the concepts of path-oriented multistreaming,
MIH-assisted handoff mechanism and AR of mCMT are
introduced. Figure 3 shows the architecture of mCMT. mCMT
uses the sender buffer to store data from applications based
on the stream ID. The dispatcher module is responsible
for scheduling the data transmission. The receive module is
responsible for receiving data. The handoff module takes care
of the handoff process. MIH can pass information and events
from network interfaces to mCMT. Thus, mCMT can have more
The Computer Journal, 2009
 at N
ational Cheng Kung University Library on Septem
ber 26, 2010
co
mjnl.oxfordjournals.org
D
ow
nloaded from
 
Mobile Concurrent Multipath Transfer 7
to it. Therefore, the path-oriented multistreaming never slows
down the throughput of mCMT. All paths always have data
for transmission. When streams have data for retransmission,
paths, to which the streams are not allocated, cannot transmit
the new data of these streams. The data that need retransmission
can be retransmitted over any path. Basically, mCMT adopts
the same retransmission policy of CMT, i.e. lost data are
retransmitted via the path with the highest slow start threshold
(RTX-SSTHRESH). As a result, if data are lost over one
path, path-oriented multistreaming can prevent transmitting
data of the same stream over the other paths to cause receiver
buffer blocking. Note that path-oriented multistreaming is
not to force streams to be transmitted in only one path. If
one path is unreachable, streams, which are assigned to that
path, are reassigned to other paths. If streams have data for
retransmission, the retransmission data can be transmitted over
any path.
4.2. MIH-assisted handoff
In this subsection, the handoff mechanism of mCMT is
proposed. mCMT utilizes MIH to deal with handoff to reduce
the effects of the receiver buffer blocking resulting from handoff
loss. MIH can provide (1) Link up, (2) Link Down and (3)
Link Going Down (LGD) events for mCMT. Thus, mCMT can
minimize the amount of packet loss caused by handoff to prevent
receiver buffer blocking during handoff. If the signal strength
is too weak and going to fail, MIH generates LGD events to
the upper layer. Therefore, mCMT can utilize the LGD event
to prepare for handoff. To deal with handoff, mCMT uses the
following control chunks:
(i) ASCONF-AddIP: the MN sends an ASCONF-AddIP
chunk to the CN to add a new IP address to the existing
association.
(ii) ASCONF-DeleteIP: the MN sends an ASCONF-AddIP
chunk to the CN to delete an old IP address that is
unreachable from the existing association.
(iii) ASCONF-PoFailure: the MN sends an ASCONF-
PoFailure chunk with IP address to the CN to notify
the CN that the old IP address is going to fail.
ASCONF-AddIP and ASCONF-DeleteIP chunks are defined
in SCT PDAR . mCMT extends SCT PDAR by adding the
ASCONF-PoFailure chunk. Figure 5 shows the ASCON-
PoFailure chunk format. An ASCONF-PoFailure chunk
contains an IP address that is going to fail. If an interface is
going to fail, the MN can send an ASCONF-PoFailure chunk
to the CN. The CN would not send new data and SACKs to the
MN over the path that potentially fails. As a result, the handoff
loss can be reduced or avoided.
Figure 6 presents the message flow for the MIH-assisted
handoff. As mentioned previously, when Interface 1 is going
to fail, it triggers an LGD event to the MIH and then forwards
the LGD event to mCMT. After receiving the LGD event, the
FIGURE 5. The ASCONF-PoFailure chunk.
FIGURE 6. The message flow for MIH-assisted handoff.
MN transmits anASCONF-PoFailure chunk with the IP address
of Interface 1 to the CN. Since the CN has already been notified
that the IP address of Interface 1 of the MN is going to be
unreachable, the total number of packets lost caused by handoff
can be reduced or avoided. After a moment, Interface 1 fails and
cannot transmit and receive data. MIH triggers a Link Down
event to mCMT. The MN notifies the CN that the IP address of
Interface 1 is unreachable and can be removed using ASCONF-
DeleteIP. When Interface 1 finishes the handoff process and
obtains a new IP address, MIH triggers a Link Up event to
mCMT. Then, the MN can notify the CN about the new available
IP address of Interface 1 using the ASCONF-AddIP chunk.
The Computer Journal, 2009
 at N
ational Cheng Kung University Library on Septem
ber 26, 2010
co
mjnl.oxfordjournals.org
D
ow
nloaded from
 
Mobile Concurrent Multipath Transfer 9
FIGURE 8. The association resume message flows.
(i) Association initialization: In this step, the MN
initializes the association with the CN through 4-way
handshake. The MN must confirm that the CN has
accepted the Authentication Chunk option. The MN
and the CN must choose which hash function to use in
this step.
(ii) Key exchange: After the association is initialized, the
MN exchanges the shared key with the CN.
(iii) Data transfer: The CN sends data to the MN, and vice
versa.
(iv) Link failure: The link of the MN fails. The old IP
address of the MN is unreachable now.
(v) New link up: The link is up and the MN gets a new IP
address.
(vi) Association resume: the MN starts the three-way
association resume process using the new IP address.
(a) Step 1: The MN sends the AR chunk bundled
with SACK to the CN. The AR chunk contains
Authentication option with the computed HMAC
value. The CN can authenticate the MN by
comparing the HMAC value generated by the CN
and the MN. If the HMAC value is the same, the CN
can authenticate the MN.
(b) Step 2: The CN also sends AR-Ack bundled with
SACK for the MN. The MN can authenticate the CN
in the same way as that depicted in step 1.
(c) Step 3: The MN sends AR-Ack without the
authentication option to the CN to complete the
association resume.
(vii) Data transfer: After the association is resumed, the CN
can continue the previous transmission with the MN,
and vice versa.
In steps 1 and 2 of association resume, the AR and AR-Ack
chunks must be bundled with SACK. Therefore, the remote
endpoint can know the information about received chunks
and receiver windows after the association is suspended. One
concern is that if the CN does not release the resource and waits
for the MN to resume the disconnected association, the CN will
run out of resource finally. Thus, the CN is granted to release
the resource of the disconnected association depending on its
resource utilization.
5. EVALUATION
The performance evaluation of mCMT was done using
NS2 [19]. mCMT was modified from the NS2 CMT module
developed by University of Delaware [2]. The simulation
topology is depicted in Fig. 9. There are two paths from the
sender to the receiver. Path 1 (Interface 1) is 3.5G, while Path
2 (Interface 2) is Wi-Fi (802.11). Based on the throughput
measurement report of Tanaka et al. [20], the throughput of
3.5G is 500KB/s when moving. To have more precise network
traffic in the simulation, the collected network traffic at the
department of Computer Science and Information Engineering
in National Cheng Kung University was injected into the
simulation network as the background traffic. More than 1000
nodes were included in the collected network traffic. In the
simulation, the compared protocols were cmpSCTP, CMT and
FIGURE 9. The simulation topology.
The Computer Journal, 2009
 at N
ational Cheng Kung University Library on Septem
ber 26, 2010
co
mjnl.oxfordjournals.org
D
ow
nloaded from
 
Mobile Concurrent Multipath Transfer 11
FIGURE 12. Buffer usage for 64 kB buffer size (5% loss rate of 3.5G).
(a) CMT, and (b) mCMT
buffer blocking. Only one receiver buffer blocking situation
occurred in this experiment. mCMT with the path-oriented
multistreaming is more suitable than CMT for small memory
devices.
Figure 14 shows the transmission speed with a large amount
of mobile nodes. In this experiment, the number of mobile nodes
within the coverage of Wi-Fi access points was increased from
1 to 30 for each access point, i.e. [1–90] mobile nodes totally.
Each mobile node establishes association with corresponding
nodes through 3.5G and Wi-Fi. The used mobility model was
the random trip model proposed by Le Boudec [22]. The random
trip model is a generic mobility model that generalizes the
random waypoint and the random walk to realistic scenarios.As
the number of mobile nodes increased, the available bandwidth
of Wi-Fi for each mobile node decreased dramatically. The
increased mobile node also led to the growth of the error loss
packets. The reduced bandwidth and increased error loss packet
FIGURE 13. Buffer usage for 256 kB buffer size (5% loss rate of
3.5G). (a) CMT, (b) mCMT.
FIGURE 14. The comparison on transmission speed with large
amount of mobile nodes.
The Computer Journal, 2009
 at N
ational Cheng Kung University Library on Septem
ber 26, 2010
co
mjnl.oxfordjournals.org
D
ow
nloaded from
 
Mobile Concurrent Multipath Transfer 13
FIGURE 16. Comparison on cumulatively received TSNs during
handoff.
FIGURE 17. Comparison on buffer usage during handoff.
Figure 17 shows the buffer usage during handoff. The
free buffer space of cmpSCTP was decreased quickly during
handoff. During the 13th second to the 14th second, and the
18th second to the 21th second, the receiver buffer of cmpSCTP
only allowed the CN to transmit a few packets.
5.3. Association resume
In this subsection, the efficiency of association resume was
evaluated. Two kinds of applications were investigated in
this experiment. One was the application that supports file
downloading and resume, e.g. FTP and HTTP applications. The
other was the application that does support file downloading but
not resume, e.g. MSN and Yahoo messenger. An FTP client
or an HTTP client is able to resume the file downloading
from any portion of the file. However, for MSN and Yahoo
messenger, if the network is disconnected and reconnected,
users need to restart to download files from their beginning.
In this experiment, the MN connected with the CN only
using 3.5G.
Figure 18 shows the received packet size for FTP applica-
tions. The MN downloaded files from the CN using FTP. The
file to be downloaded was 10 MB. The MN was disconnected
with the CN at the 10th second. The associations of cmpSCTP
and mCMT were suspended. At the 16th second, the MN got
a new IP address and tried to resume the previous association.
In cmpSCTP, the MN needed to restart the FTP connection to
resume its downloading. As mentioned previously, restarting
the FTP connection took several messages, including the login
message, transfer mode setting message and file transfer mes-
sage. Thus, cmpSCTP took more time than mCMT to resume
the FTP file downloading. mCMT was able to resume the pre-
vious association. Therefore, the FTP application on mCMT
would not feel the handoff disconnection. The association
resume is indeed better than restarting the application.
On the other hand, we also compared file downloading with
and without file resume. This experiment result was the results
of 20 rounds. In this simulation, the MN was disconnected at the
10th second. The old IP address was unreachable. At the 16th
second, the MN got a new IP address and started to resume the
previous file downloading.
For applications that supported file resume, cmpSCTP took
about 26.5 s to complete the file downloading. For applications
that do not support file resume, cmpSCTP needed about 38.5 s.
As for mCMT, the time for file downloading was about 26–
27 s. The overhead to resume the association resume was the
three-way association resume. cmpSCTP needed to initialize
FIGURE 18. Comparison on received packet size.
The Computer Journal, 2009
 at N
ational Cheng Kung University Library on Septem
ber 26, 2010
co
mjnl.oxfordjournals.org
D
ow
nloaded from
 
Mobile Concurrent Multipath Transfer 15
2009, Dresden, Germany, June 14–18, pp. 5762–5966. IEEE
Computer Society.
[10] Kim, D.P., Koh, S.J. and V.L. (2008) On the Packet Reordering
of mSCTP for Vertical Handover in Heterogneous Wireless
Networks. Proc. of VTC 2008-Fall, Calgary, Alberta, September
21–24, pp. 1–5. IEEE Computer Society.
[11] Huang, C.M. and Tsai, C.H. (2007) Wimp-SCTP: Multi-
path Transmission using Stream Control Transmission Protocol
(SCTP) in Wireless Networks. Proc. of AINAW 2007, Niagara
Falls, Canada, May 21–23, pp. 209–214. IEEE Computer Society.
[12] Kim, D.P. and Koh, S.J. (2008) Analysis of Handover Latency
for Mobile IPV6 and mSCTP. Proc. of ICC 2008, Beijing, China,
May 19–23, pp. 420–424. IEEE Computer Society.
[13] Lee, J.-M., Lim, H.-J., Lee, J.-H. and Chung, T.-M. (2007) A
Scheme to Reduce the Handoff Latency using mSCTP in Fast
Mobile IPV6. Proc. of ICSNC 2007, Cap Esterel, French Riviera,
France, August 25–31, pp. 14–19. IEEE Computer Society.
[14] An, Y.Y., Yae, B.H., Lee, K.W., Cho, Y.Z. and Jung, W.Y. (2006)
Reduction of Handover Latency using MIH Services in MIPV6.
Proc. of AINA 2006, Vienna, Austria, April 18–20, pp. 229–234.
IEEE Computer Society.
[15] Chen, Y.-M., Lai, M.-Y., Lin, S.-C. and Tein Yaw Chung, S.-C.C.
(2006) SCTP-based Handoff Based on MIH Triggers Information
in Campus Networks. Proc. of ICACT 2006, Phoenix Park,
Gangwon-Do, Korea, February 20–22, pp. 1301–1305. IEEE
Computer Society.
[16] Bellavista, P., Corradi,A. and Foschini, L. (2008)An IMSVertical
Handoff Solution to Dynamically Adapt Mobile Multimedia
Services. Proc. of ISCC 2008, Marrakech, Morocco, July 6–9,
pp. 764–771. IEEE Computer Society.
[17] Thanh, N.H., Hung, N.T., Lan, T.N., Thanh, T.Q., Hanh, D.,
and Magedanz, T. (2009) mSCTP-based Proxy in Support
of Multimedia Session Continutity and QOS for IMS-based
Networks. Proc. of ICCE 2008, HoiAn, Vietnam, June 4–6, pp.
1301–1305. IEEE Computer Society.
[18] RFC 4895 (2007) Authenticated Chunks for the Stream Control
Transmission Protocol (SCTP). Internet Engineering Task Force.
[19] The network simulator version 2. http://www.isi.edu/nsnam/ns/.
[20] Tanaka, S., Ishii, H., Sao, T., Iizuka, Y. and Nakamori, T. (2005)
HSDPA throughput performances using an experimental hSDPA
transmission system. NTT DoCoMo Tech. J., 6, 19–28.
[21] Huang, C.M., Lin, C.W. and Lin, X.Y. (2007) A predictive video-
on-demand bandwidth management using the kalman filter over
heterogeneous networks. Comput. J., 52, 171–185.
[22] Boudec, J.-Y.L. and Vojnovic, M. (2009) Perfect Simulation and
Stationarity of a Class of Mobility Models. Proc. of IEEE Infocom
2005, Miami, FL, March 13–17, pp. 2743–2754. IEEE Computer
Society.
The Computer Journal, 2009
 at N
ational Cheng Kung University Library on Septem
ber 26, 2010
co
mjnl.oxfordjournals.org
D
ow
nloaded from
 
data transmission. The data loss caused by handoff in CMT
is much worse than in SCTP. As mentioned in the previous
paragraph, lost data can cause receiver buffer blocking in
CMT.
The transport layer usually lacks of cross-layer information
to deal with handoff. To facilitate the handoff over hetero-
geneous and homogeneous networks, IEEE 802.21 developed
the Media Independent Handover (MIH) standard to enable
handoff and interoperability between heterogeneous network
types, including both 802 and non 802 networks [7]. MIH
contains three services, i.e., Media Independent Event Service
(MIES), Media Independent Command Service (MICS), and
Media Independent Information Service (MIIS). Logically,
MIH Function (MIHF) is a slim layer between the network
layer and the link layer. MIES mainly provides (1) Link Up,
(2) Link Down, (3) Link Going Down, (4) Link Detect to
the upper layer. The upper layer can utilize these events as
handoff triggers. With the help of MIH, the handoff loss can
be reduced.
In this study, we proposed the MIH-Concurrent Mul-
tipath Transfer (MIH-CMT) protocol based on CMT and
SCTPDAR. MIH-CMT also employs MIH to deal with the
handoff issue. MIH-CMT is able to reduce the effect of
receiver buffer blocking caused by handoff loss for the small
receiver buffer. Main features of MIH-CMT are as follows:
• MIH-CMT can mark the link as potential failure and stop
sending data over that link.
• MIH-CMT utilizes events provided by MIH to reduce
handoff loss.
• MIH-CMT can reduce the effect of receiver buffer block-
ing during handoff.
The rest of the paper is organized as follows: In Section
II, related works of MIH-CMT are given. In Section III, the
receiver buffer blocking and handoff issues for MIH-CMT are
discussed. In Section IV, related concepts and techniques of
the MIH-CMT protocol are presented. In Section V, MIH-
CMT is evaluated and investigated. Finally, conclusion re-
marks are given in Section VI.
II. RELATED WORKS
Iyengar et al. proposed five retransmission policies to reduce
receiver buffer blocking in [3], [8]. By changing the retrans-
mission policy, it can prevent retransmission getting dropped
due to retransmission through the same bad condition path.
From the simulation result, the retransmission policy RTX-
SSTHRESH has the better performance than others. However,
they did not propose different policies for scheduling new
transmissions.
Kim et al. proposed a data transmission method to reduce
packet reordering by changing the primary IP address in the
SCTPDAR handoff state [9]. Once MN changes its primary
IP address to a new IP address, MN checks whether there are
outstanding data chunks that have not been acknowledged or
not. If there are non-acknowledged outstanding data chunks,
the MN retransmits all outstanding data chunks to the new
IP address. From the simulation results, this data transmission
method can reduce packet reordering when handoff occurs and
improve the SCTPDAR performance.
An et al. proposed a handoff mechanism to reduce handoff
latency by using MIH services in FMIPv6 [7], [10], [11].
With MIH information, FMIPv6 can increase the precision in
the predictive mode by reducing the handover initiation time.
Thereby FMIPv6 can reduce the expected handoff latency.
Since the handoff initiation time in the FMIPv6 is decreased,
the overlap coverage between adjacent cells can be reduced.
However, high loss rate in wireless networks and the loss
due to handoff may result in receiver buffer blocking. Our
proposed MIH-CMT concentrates on scheduling new trans-
missions to reduce receiver buffer blocking during handoff in
wireless networks.
III. MAIN ISSUES
In this Section, issues of handoff and the receiver buffer
blocking are discussed.
A. SCTP Overview
Application data are divided into data chunks in SCTP.
Each data chunk is associated with a unique Transmission
Sequence Number (TSN). Data in SCTP are considered as
stream-oriented. Each data chunk is assigned with a stream
id and a stream sequence number. SCTP uses the Selective
Acknowledgment (SACK) scheme to acknowledge received
data. SACK contains Cumulative TSN Ack, gap report and
advertised receiver window credit. The cumulative TSN is the
value of the last TSN received before a break in the sequence
of received TSNs occurs. Every TSN, which is less than or
equal to the cumulative TSN, is considered as acknowledged.
Gap report contains Gap Ack Blocks. Each Gap Ack Block
acknowledges a subsequence of TSNs received following a
break in the sequence of received TSNs.
B. Receiver buffer blocking due to handoff loss
With SCTPDAR, CMT can perform transport layer handoff
in the multihomed wireless mobile network. A Mobile Node
(MN) establishes a CMT association with a Corresponding
Node (CN) through two independent paths. When a MN moves
from one location to another, MN gets a new IP address and
the old IP address becomes unreachable. CMT performs the
handoff process as follows:
• CMT notifies the new IP address to the remote endpoint
using the ASCONF-AddIP message.
• Once the previous address is unreachable, CMT sends
ASCONF-DeleteIP message to the remote endpoint to
delete the useless IP address.
Figure 1 shows the receiver buffer blocking caused by
handoff loss. Considering the following scenario. CN transmits
data of stream 1 to MN through Path 1 and Path 2 respectively.
The data with TSN 1 is transmitted over Path 1; data with
TSN 2-5 are transmitted over Path 2. MN moves out of the
range of the old access point (oAP) to the range of the new
access point (nAP). Path 1 is disrupted during handoff. The
data with TSN 1 that is transmitted through oAP is lost due
Fig. 3. The message flow for MIH-assisted handoff.
chunk to CN. CN would not send new data and SACKs to
MN over the path, which has potential failure. As a result, the
handoff loss can be reduced or avoided.
Figure 3 presents the message flow for the MIH-assisted
handoff. As mentioned previously, when Interface1 is going
to fail, it triggers a Link Going Down event to MIH and then
forwards the event to MIH-CMT. After receiving the Link
Going Down event, MN transmits the ASCONF-PoFailure
chunk with the IP address of Interface1 to CN. Since CN
has already been notified that the IP address of Interface1
of MN is going to be unreachable, the total number of
packet loss caused by handoff can be reduced or avoided.
After a moment, Interface1 fails and cannot transmit and
receive data. Interface1 triggers a Link Down event to MIH
and then forwards the event to MIH-CMT. MN notifies CN
that the IP address of Interface1 is unreachable and can be
removed using ASCONF-DeleteIP. When Interface1 finishes
the handoff process and obtains a new IP address, it triggers
a Link Up event to MIH and then forwards the event to MIH-
CMT. Then, MN can notify CN about the new available IP
address of the interfaces using the ASCONF-AddIP chunk.
The new idea of the handoff mechanism of MIH-CMT is the
combination use of MIH and extended SCTPDAR with the
ASCONF-PoFailure chunk. MIH-CMT can mark an IP address
as having potential failure to prevent CN to send new data and
SACKs via the potential failure path.
V. EVALUATION
Fig. 4. The simulation topology.
Fig. 5. Comparison on cumulatively received TSNs during handoff.
The performance evaluation of MIH-CMT is done using
NS2. MIH-CMT is modified from the NS2 CMT module
developed by University of Delaware. The simulation topology
is depicted in Figure 4. There are two paths from the sender
to the receiver. Path1 is 3.5G (HSDPA), while Path2 is Wi-Fi
(802.11b). The simulation is focused on the receiver buffer
blocking caused by handoff loss. The investigated buffer size
is 64KB, which is the default buffer size in Linux.
Figure 5 shows the cumulatively received TSNs during
handoff. The handoff scenario was as follows. At the 12.7th
second, MIH triggered a Link Going Down event to MIH-
CMT. At the 13th second, Path2 was failed. The old IP address
of Interface2 of MN was unreachable. After the 14th second,
Interface2 of MN reconnected with the new base station and
got a new IP address.
When the Link of Path2 is going down, CN of MIH-CMT
would stop sending data over Path2. However, CN of CMT
kept sending data over Path2. As a result, the cumulatively
received TSN of MIH-CMT was a little bit smaller than that
of CMT. When Path2 was broken, many on-the-fly data, which
were transmitted over Path2 were lost. CMT suffered from
receiver blocking after Path2 was failed. On the other hand,
in MIH-CMT, MN sent the ASCONF-PoFailure chunk of the
old IP address of Interface2 to MN. After that, CN stopped
AN UNRELIABLE CONCURRENT MULTIPATH TRANSFER PROTOCOL
OVER MULTIHOMED NETWORKS
Chung-Ming Huang
Dept. of Computer Science and Information Engineering,
National Cheng Kung University,
Tainan, Taiwan, R.O.C.,
Email: huangcm@locust.csie.ncku.edu.tw
Ming-Sian Lin
Dept. of Computer Science and Information Engineering,
National Cheng Kung University,
Tainan, Taiwan, R.O.C.,
Email: linms@loucst.csie.ncku.edu.tw
Abstract
Real-time and multimedia applications require less reliabil-
ity but are sensitive to the transmission delay on data trans-
mission. Current unreliable transport layer protocols do not
have congestion control and concurrent multipath transfer
features at the same time. In this paper, we propose an
Unreliable-Concurrent Multipath Transfer (U-CMT) proto-
col, which features with (i) concurrent multipath transfer,
(ii) congestion and flow control, and (iii) unreliable data
transmission. Data in U-CMT are transmitted only once
and never retransmitted. U-CMT adopts the similar idea
of SCTP Partial Reliable extension (PR-SCTP) to transmit
unreliable data. However, (i) flat congestion window and
(ii) zero flight size phenomena may exist, which cause the
congestion control mechanism to be useless, when using
PR-SCTP to transmit unreliable data. U-CMT can elimi-
nate the above two phenomena through the way of delaying
marking data chunks as abandoned. Thus, U-CMT can pre-
cisely infer cwnd and flight size the same as SCTP. U-CMT
also utilizes all paths for data transmission. The simulation
results show that U-CMT can have better video streaming
quality in the congested network.
Keywords: SCTP, CMT, Unreliable Transmission
1 Introduction
Recently, more and more computing devices are associated
with multiple interfaces, e.g., (1) wired: Ethernet or ADSL
and (2) wireless: Wi-Fi, or 3G/3.5G. The multi-homed de-
vices are able to connect to the Internet through multiple
interfaces. Stream Control Transmission Protocol (SCTP),
which is a transport layer protocol, features with multi-
streaming and multihoming [1]. SCTP allows endpoints
to create an association using more than one IP address.
However, SCTP uses only one path, i.e., the primary path
for data transmission, and leaves other paths for retransmis-
sion only.
Concurrent Multipath Transfer (CMT) is a new tech-
nology based on SCTP to transfer data through all paths [2].
Generally speaking, CMT can have better bandwidth uti-
lization than SCTP for multihomed devices [2]. However,
both SCTP and CMT are all reliable transport layer pro-
tocols. For many real-time applications, such as streaming
media, Internet telephony and videoconferencing, they pre-
fer timeliness over reliability. When a packet is lost, most
of real-time applications do not like to retransmit it unless
there are some special concerns [3]. UDP is the mostly
used unreliable transport layer protocol. But UDP lacks
congestion and flow control. The newly proposed Data-
gram Congestion Control Protocol (DCCP) is a transport
protocol that provides bidirectional unicast connections of
congestion-controlled unreliable datagrams [4, 5]. How-
ever, DCCP does not support multihoming. DCCP cannot
transfer data over all paths for the multihomed devices.
To provide real-time applications a more feasible
transport layer protocol to transfer real-time data, we
propose an Unreliable-Concurrent Multipath Transfer (U-
CMT) protocol in this paper. U-CMT is mainly based on
SCTP and CMT, but added new features to transfer unreli-
able data. U-CMT is feature with (i) concurrent multipath
transfer, (ii) congestion and flow control and (iii) unreliable
data transmission.
• Concurrent multipath transfer: U-CMT adopts CMT
technology to transfer data over all paths to exhaust
the aggregated bandwidth of each path.
• Congestion and flow control: U-CMT is based on
SCTP. The congestion and flow control is inherited
from SCTP with some adaptation for the unreliable
data transmission.
• Unreliable data transmission: In contrast to SCTP
and CMT, U-CMT is able to transfer unreliable data,
which is more suitable for real-time applications.
The rest of the paper is organized as follows: In Sec-
tion 2, related works of SCTP, CMT and U-CMT are given.
In Section 3, main issues for the unreliable data transmis-
sion over multiple paths are discussed. In Section 4, re-
lated concepts and techniques of the U-CMT protocol are
presented. In Section 5, U-CMT is evaluated and investi-
gated by comparing with several transport layer protocols.
Finally, concluding remarks are given in Section 6.
2 Related Works
The mostly used transport layer protocol that supports mul-
tihoming is SCTP [6]. Many paths can exist in one SCTP
Figure 1. Different treatments on transmitted data chunks
for PR-SCTP and U-CMT.
creased. The corresponding FORWARD TSN chunk
will be sent to the receiver.
• U-CMT: U-CMT marks the transmitted data chunks
as transmitted, and not acknowledged. As a result,
if the sender receives the SACK that acknowledges
transmitted data chunks, transmitted data chunks can
be credited for cwnd. Since the transmitted data
chunks are not considered as abandoned, the transmit-
ted data chunks can be counted for the flight size. No
FORWARD TSN chunks are generated and sent.
Retransmission:
• PR-SCTP: since data chunks are already marked as
abandoned after the first transmission, PR-SCTP does
not take any action for retransmission.
• U-CMT: Once the retransmission condition is encoun-
tered, i.e., fast retransmission or timeout retransmis-
sion, it means that the data chunk is lost. When the re-
transmission event occurs, U-CMT marks those data
chunks that need for retransmission as abandoned and
acked. The corresponding FORWARD TSN chunk is
generated and sent to the receiver to prevent the re-
ceiver waiting for lost data chunks. The transmission
of the FORWARD TSN chunk is thus necessary.
The key idea of U-CMT is to mark unreliable data
chunks as abandoned until data chunks are lost. The re-
transmission events on transmitted data chunks imply that
data chunks are lost. Before transmitted data chunks are
lost, they still can be acked and credited for cwnd. Con-
sequently, U-CMT can precisely infer the loss of transmit-
ted data chunks. As a result, the congestion control of U-
CMT is the same as SCTP. Flat congestion window and
zero flight size phenomena do not happen in U-CMT.
Figure 2 shows the delay abandoning data algorithm,
in which only the sender is involved. When a data chunk is
firstly transmitted, it is marked as transmitted. The size of
the transmitted data chunk is added to the flight size of the
destination transport address d, to which the data chunk is
transmitted. If there is a retransmission event on the trans-
mitted data chunk, the transmitted data chunk is marked
Figure 2. The delay abandoning data algorithm.
as abandoned. The size of the abandoned data chunk also
must be subtracted from the flight size of the destination
transport address d. From now on, the abandoned is con-
sidered as acknowledged. When the receiver receives a
SACK, data chunks in the queue are checked. If the data
chunk of TSN t is not marked as abandoned yet, it can be
credited for cwnd. Thus, cwnd and the flight size of the
destination transport address d is updated as RFC 4960.
4.2 Concurrent Multipath Transfer
U-CMT adopts the same idea from Iyengar et. al. to trans-
fer data over all available paths [2]. Paths in the network are
with different bandwidth and delay. Since a U-CMT sender
sends data over all available paths, there will be the sender
induced reordering issue in U-CMT. Thus, each destina-
tion transport address keeps its own cwnd and flight size
to track whether the transmitted data chunks reach the re-
ceiver or not independently. There are three algorithms pro-
posed by Iyengar et. al. to eliminate unnecessary fast re-
transmission, update cwnd and process sack precisely [2].
These three algorithms are implemented in U-CMT to re-
solve the reordering issue. As a result, U-CMT is able to
transfer data concurrently with the same congestion control
as CMT. The sender induced reordering issue can thus be
eliminated in U-CMT.
Figure 5. Comparison on playable frames.
is useless. Therefore, we did not compare the video stream-
ing quality of U-CMTnd with U-CMT and CMT. In this
evaluation, the sender transmitted MPEG 4 data to the re-
ceiver at 30 frames/s. MPEG 4 data contains I, P and B
frames in a Group of Picture (GOP). MPEG 4 frames have
coding dependency. Without I frames, the whole GOP can-
not be played. Without P frames, some P frames and B
frames cannot be played. If data were lost, CMT would re-
transmit lost data. U-CMT did not retransmit lost data. If
the lost data were I or P frames, then the video streaming
application of U-CMT would retransmit them.
Figure 5 shows the playable frames for each protocol.
Video streaming data are sensitive to the transmission de-
lay and requires less reliability. Every frame has its own
lifetime. A frame is unplayable if it cannot arrive at the
receiver before its lifetime. Because of the retransmission
in CMT, many I and P frames arrived at the receiver could
not be played. The lifetimes of I and P frames were passed.
Consequently, the received frames that depended on the ex-
pired I and P frames became unplayable. Since the net-
work was congested, many packets were dropped by the
access points. The retransmission on the lost data caused
CMT spent more time to transmit frames. The CMT sender
buffered many frames in its queue. From the 6th second,
the queued frames were all expired. Even if the receiver
received frames after the 6th second, the received frames
were all unplayable.
If frames were lost during transmission, U-CMT
would not retransmit the lost frames. U-CMT did not waste
time and bandwidth on retransmitting lost frames. The
queued frames in the queue of the U-CMT sender did not
expire. The application on the U-CMT could decide to re-
transmit a lost frame or not. If the lost frame did not expired
and it was I or P frame, then the application would retrans-
mit the lost frame. Thus, the playable frames of U-CMT
was more than that of CMT.
Figure 6 shows the average transmission delay. The
frame transmission delay is (i) the time that a frame is
queued in the sender buffer and receiver buffer plus (ii) the
transmission time from the sender to the receiver. Because
Figure 6. Comparison on transmission delay.
of the retransmission on the lost frames, the average frame
transmission delay of CMT increased largely. The retrans-
mission on the lost frames could contribute transmission
delay on the queued frames. As the average frame trans-
mission delay increased, more and more frames could not
arrive at the receiver before their lifetime. After the 6th sec-
ond, CMT had an average frame transmission delay more
than 2 seconds. Consequently, no frames were playable af-
ter the 6th second.
Since U-CMT did not retransmit the lost frames, U-
CMT could keep the average frame transmission delay
more stable than CMT could. The average frame transmis-
sion delay of U-CMT was below 1 second. Thus, the U-
CMT sender had sufficient time to transmit frames. Most
of the received frames were playable.
6 Conclusion
In this paper, we have proposed an Unreliable-Concurrent
Multipath Transfer (U-CMT) protocol, which features with
(i) concurrent multipath transfer, (ii) congestion and flow
control and (iii) unreliable data transmission. U-CMT is
devised for real-time applications to transmit data that pre-
fer timeliness over reliability. Data in U-CMT would only
be transmitted once and never be retransmitted. The main
contributions are summarized as follows:
• Transmit data over all available paths in U-CMT can
have better bandwidth utilization than SCTP and other
transport layer protocols, which don’t support multi-
homing.
• The proposed delay abandoning data algorithm can
eliminate the (i) flat cwnd and (ii) zero flight size
phenomena by delaying marking the transmitted data
chunks as abandoned until they need for retransmis-
sion. The evaluation result shows that U-CMT can
have precise growth of cwnd than U-CMT that is with-
out the delay abandoning data algorithm.
• U-CMT is more suitable than CMT for video stream-
ing applications. Because U-CMT never retransmits
lost data, U-CMT does not waste time and bandwidth
The handoff control scheme for computing powerless devices and its applications
in the digital home networkq
Chung-Ming Huang *, Ming-Sian Lin, Hon-Long Wong
Laboratory of Multimedia Mobile Networking, Department of Computer Science and Information Engineering, National Cheng Kung University, No. 1. University Road,
701 Tainan, Taiwan, ROC
a r t i c l e i n f o
Article history:
Received 22 August 2007
Received in revised form 9 May 2008
Accepted 19 May 2008
Available online 5 June 2008
Keywords:
UPnP
Bluetooth
Handoff
Home network
a b s t r a c t
The evolution of wireless transmission technology enables users to have multimedia services any-
where in the digital home network. In this paper, we propose a handoff control scheme called Com-
puting Powerless Handoff (CP-Handoff) for devices without computation capability, such as the light-
weight Bluetooth (LW-BT) headset. The main concern of the CP-Handoff is that the client device
doesn’t have the computation capability. The main function of the computing powerless client device
is to send/receive signals and play the audio data. Thus, how to have the handoff control when a com-
puting powerless client device is switched from one access point to another access point becomes a
problem to be resolved. A typical example is in the BT wireless network environment. The LW-BT
headset is dedicated for audio applications and doesn’t have extra computation capability. The CP-
Handoff puts all handoff computation overhead on the master BT device, such that the LW-BT headset
is unaware of the handoff. Based on the proposed CP-Handoff control scheme, a Ubiquitous Audio
Access Platform (UAAP) is proposed and developed to allow users to access audio ﬁles using the
LW-BT headset in the digital home network when they are roaming. The evaluation results show that
the proposed CP-Handoff only needs 1.17 s to prepare the AVDTP session handoff and 0.38 s for the
AVDTP session handoff. The transmission of audio packets to the LW-BT headset is only suspended for
0.38 s. The audio packet buffering scheme and retransmission mechanism ensure that the LW-BT
headset can resume lost audio packets during handoff.
Crown copyright  2008 Published by Elsevier B.V. All rights reserved.
1. Introduction
The radical development and evolution of wireless communica-
tion techniques enable users to enjoy multimedia services without
wired connection. Typically, users can listen to audio ﬁles using de-
vices with or without computing capability. For example, a user
can listen to audio ﬁles from his PDA and Smart Phone. On the
other way, a user also can listen to audio ﬁles using a light-weight
Bluetooth headset (henceforth referred to simply as LW-BT head-
set). Since the LW-BT headset consumes less power and is cheaper
than PDA and Smart Phone, it is more applicable for audio applica-
tions in the home network environment. Users in the home may
still need to use the LW-BT headset to listen to audio ﬁles, because
they don’t want to bother other members.
Referring to Fig. 1, the main compositions in the digital
home network can be (1) a home gateway, (2) media servers
(MS), (3) wireless access points (APs), (4) BT gateways (BTGW)
and (5) a LW-BT headset. Audio ﬁles are distributed in media
servers. Media servers share the audio ﬁles’ information with
the home gateway. A user, who is equipped with the LW-BT
headset, can access audio ﬁles of media servers in the home
network by connecting to the home gateway. Audio ﬁles are
streamed to the LW-BT headset through the BT gateway which
interconnects the IP and Bluetooth networks. As a result, he can
listen to audio ﬁles stored in media servers using the LW-BT
headsets.
However, handoff occurs when the LW-BT headset moves out of
the BT gateway’s coverage. Considering the following scenario, a
housewife gets used to listen to music using a LW-BT headset
when she is doing her housework. She and the LW-BT headset
may roam anywhere inside the house, such as cleans a particular
room and then washes some clothes on the balcony. However,
the above scenario emerges the handoff issue for the LW-BT head-
set. The LW-BT headset doesn’t have extra computing capability,
communication resource and buffer to tackle the handoff problem.
Audio data would be lost when the above situation happens.
Most of current handoff control schemes are for client de-
vices that have computing capability, e.g., Notebook, PDA and
0140-3664/$ - see front matter Crown copyright  2008 Published by Elsevier B.V. All rights reserved.
doi:10.1016/j.comcom.2008.05.022
q The research is supported by the National Science Council of the Republic of
China under Grant No. NSC 96-2219-E-006-008 and the Program of Top 100
Universities Advancement, Ministry of Education, Taiwan, Republic of China.
* Corresponding author. Tel.: +886 6 2757575; fax: +886 6 2747076.
E-mail address: huangcm@locust.csie.ncku.edu.tw (C.-M. Huang).
Computer Communications 31 (2008) 3275–3285
Contents lists available at ScienceDirect
Computer Communications
journal homepage: www.elsevier .com/locate /comcom
BT headset is a candidate device in such situation. However,
the LW-BT headset is unlike some common mobile devices,
e.g., Notebook, PDA and Smart Phone. The main difference is
that a LW-BT headset has no computing power. Although there
are some works that focused on Bluetooth handoff
[1,3,4,16,17], these related works mainly deal with the handoff
for mobile devices with computing power and are inadequate
for the LW-BT headset. The main differences are summarized
as follows:
1. The LW-BT Bluetooth headset doesn’t contain computation
capability for general purpose. Consequently, the LW-BT
headset should be treated as a passive role. It means that
all computation works must be done outside the Bluetooth
headset.
2. The LW-BT headset cannot actively check the Receive Signal
Strength Indicator (RSSI) [18] between the nearby access points
and itself.
3. The existing handoff approach uses the clock offset to
reduce the baseband connection building time. Some of
the existing related works rely on turning low scan interval
to speedup the baseband establishment. However, the scan
interval of the LW-BT headset is ﬁxed and cannot be
adjusted.
4. The LW-BT headset can only establish single AVDTP session
with one Bluetooth device for high quality audio streaming.
As a result, resource utilization becomes another main issue
which must be taken into consideration. The CP-Handoff control
scheme is needed for the LW-BT headset in the digital home
network.
3. Issues of CP-handoff for bluetooth audio applications
The main limitations of the LW-BT headset for dealing with
CP-handoff are discussed in this Section. Two main limitations
for the LW-BT headset are (i) computation and (ii)
communication.
Computation: The only one purpose for the LW-BT headset
is to send/receive signal and play audio ﬁles from the BT gate-
way. The LW-BT headset doesn’t have the capability for com-
puting other data. Several handoff control schemes require
the mobile nodes to compute and decide when and how to
perform handoff procedure actively. In contrast to the devices
with computing capability, the LW-BT headset only can wait
for connection request from the BT gateway. The LW-BT head-
set cannot act as a master device to handle the handoff
procedure.
Communication: The BT speciﬁcation deﬁnes two procedures
to establish a baseband connection between two BT devices.
The two procedures are (i) inquiry and (ii) page procedures.
The inquiry procedure is used to discover nearby BT devices,
while the page procedure is used subsequently to synchronize
two BT devices. Only when the page procedure is complete,
the baseband connection is established. The inquiry procedure
gets the LW-BT headset’s Bluetooth Device (BD) address and
clock offset, which is used for the page procedure to establish
baseband connection. All Bluetooth devices have a 28-bit clock,
which is operating at 3.2 kHz. A slave device must maintain a
clock offset value which is the offset between the master device
and the slave device itself. Whenever a packet is received from
the master device, the clock offset is updated. Thus, the slave
device can keep in word synchronization with the master de-
vice. However, before the BT gateway can inquire/page the
LW-BT headset, the LW-BT headset must enter into the in-
quiry/page scan state. Since shorter scan interval consumes high-
er power, most LW-BT headsets adopt long scan interval, i.e.,
1.28 s, which is ﬁxed and cannot be modiﬁed. Referring to
Fig. 3, scan intervals have highly inﬂuence on baseband setup
time. If both inquiry and page procedures are executed conse-
quently, baseband setup time would be relatively high, which
can be in terms of second. However, the inquiry procedure
can be eliminated if the BD address and the clock offset of
the LW-BT headset can be known before the page procedure.
The baseband setup time with shared clock offset and BD ad-
dress for 0.32, 0.64 and 1.28 s scan intervals are 0.4, 0.67 and
3.23 s, respectively. Even though the inquiry procedure can be
eliminated, baseband setup time is still unacceptable, especially
for audio applications.
On the other hand, Bluetooth speciﬁes that a master device
can connect to at most seven active slave devices in a Piconet.
A slave device also can belong to several Piconets at the same
time. Thus, the LW-BT headset can have multiple baseband con-
nections with several BT gateways at the same time, but only
can establish one AVDTP session for an audio application with
the BT gateway. The AVDTP session limitation is quite straight-
forward, because users would not listen to more than one audio
ﬁle at the same time.
4. Computing powerless handoff (CP-Handoff)
In this Section, the CP-Handoff for the LW-BT headset for
high quality audio applications in the home network is intro-
duced. The neighbor discovery algorithm, the CP-Handoff and
Audio Packet Buffering and Perfecting are given in these
subsections.
4.1. Neighbor discovery
Since the LW-BT headset has computation and communica-
tion limitations, the BT gateways in the digital home network
must cooperate to share information and communication re-
sources of the LW-BT headset to deal with the CP-Handoff.
The BT gateways are supposed to be the devices which are con-
nected to the IP and Bluetooth networks, e.g., PCs and Note-
books that are equipped with BT Dongles. One BT gateway
may join or leave the home network dynamically. Thus, a
Fig. 3. Baseband setup time at different scan intervals.
C.-M. Huang et al. / Computer Communications 31 (2008) 3275–3285 3277
the LW-BT headset periodically. There is a RSSI timer associated
with the RSSI values in each BT gateways. If the RSSI timer is not
expired, then the last RSSI value is replied immediately. Otherwise,
the BT gateway needs to measure the new RSSI value.
Baseband handoff: After all neighbor BT gateways reply their
RSSI values, BTGWm selects the BT gateway with the highest RSSI
value as BTGWc. Since the LW-BT headset has limited baseband
connections, BTGWc may not be able to connect the LW-BT headset
if there are too many competing BT gateways. Thus, BTGWm asks its
neighbor BT gateways to stop measuring the RSSI value with the
LW-BT headset. On the other hand, BTGWm also asks the media ser-
ver to start to buffer audio packets. BTGWm sends the LW-BT head-
set’s clock offset and BD address to the BTGWc, and asks BTGWc to
establish a baseband connection with the LW-BT headset. With
clock offset and BD address, the baseband connection setup time
can be reduced.
Let CPN1 be the last audio packet number that is sent to the LW-
BT headset at this moment. Before BTGWc establishing a new base-
band connection with the LW-BT headset, BTGWc asks the media
server to send audio stream starting from the CPN1th audio packet
to it. BTGWc is buffering audio packets now. After BTGWc establish-
ing a baseband connection successfully, BTGWm checks its RSSI va-
lue with the LW-BT headset again. If the RSSI value of BTGWm is
still lower than the threshold and BTGWc’s RSSI value, then the
AVDTP session handoff procedure will be performed. At this mo-
ment, since the AVDTP session with BTGWm is still alive, the LW-
BT headset is still receiving audio packets.
AVDTP session handoff: BTGWm disconnects its AVDTP session
with the LW-BT headset and sends CPN2 to BTGWc. Then BTGWc uti-
lizes the backup baseband to establish a new AVDTP session with
the LW-BT headset. If BTGWc establishes the AVDTP session suc-
cessfully, BTGWc starts to transmit audio packets to the LW-BT
headset starting from the CPN2th audio packet. On the other hand,
if the RSSI value of BTGWm is increased and greater than the thresh-
old and BTGWc’s RSSI value, then the CP-Handoff procedure is
ended. All the neighbor BT gateways of BTGWm can start to mea-
sure the RSSI values again. The media server also stops buffering
audio packets.
4.3. Audio packet buffering and perfecting
Audio packets are kept in the ring buffer. Media servers and the
BT gateway keep the same size of the ring buffer. Let the buffer size
be S. The Nth audio packet is put on the (N%S)th slot. When it is
C.-M. Huang et al. / Computer Communications 31 (2008) 3275–3285 3279
UPnP Module: The UPnP module is used to communicate with
the home gateway. It has the following responsibilities.
 Send UPnP registration messages of audio ﬁles to the home
gateway.
 Handle the play audio ﬁle requests from the home gateway.
 When an audio ﬁle reaches its end, send an ‘‘End of Audio File”
event to the home gateway.
Streaming Engine: The Streaming Engine has following
functions.
 When the UPnP module asks the Streaming Engine to stream
audio ﬁles using TCP, the Streaming Engine opens the desired
audio ﬁle and sends the ﬁle to the BT gateway according to
the bit rate of that ﬁle.
 If the playing audio ﬁle ends up, the Streaming Engine conveys
the ‘‘End of Audio File” event to the UPnP module.
 The Streaming Engine buffers audio packets during the CP-hand-
off and retransmits audio packets according to the cumulative
packet number.
5.3. Bluetooth gateway
The BT gateway is connected to media servers and the LW-BT
headset respectively. A BT gateway needs to negotiate with other
BT gateways to tackle the handoff control and audio ﬁles transmis-
sion. Referring to Fig. 5, a BT gateway is composed of (1) RSSI
Detector, (2) Neighbor Discovery Module, (3) Connection Manager
and (4) Streaming Engine.
RSSI Detector: The RSSI Detector is used to detect the RSSI values
with the LW-BT headset and the neighbor BT gateways.
Connection Manager: The Connection Manager has the following
tasks:
 The Connection Manager maintains the neighbor BT gateway list
by performing the neighbor discovery algorithm as depicted in
Section 4.
 When the RSSI value with the LW-BT headset is lower than the
given threshold, the Connection Manager needs to perform the
CP-Handoff procedure as depicted in Section 4.
Streaming Engine: The Streaming Engine receives audio ﬁles
from media servers using TCP and forwards audio ﬁles to the
LW-BT headset using AVDTP.
6. Evaluation and performance
In the experiment, the BT gateway is implemented on Linux
kernel 2.2.17 based on Bluez package [19]. The libupnp package
is used for the UPnP module of the home gateway and media serv-
ers [20]. As depicted in Fig. 7, there are three BT gateways placed in
Fig. 7. Simulation environment.
Fig. 6. Audio ﬁles access message ﬂows.
C.-M. Huang et al. / Computer Communications 31 (2008) 3275–3285 3281
On the other hand, we also compare the baseband handoff with
three handoff control schemes proposed by George et al. [1]. The
M.L. George proposal 1 asks a BT device to act as a master device
and to scan nearby available base stations periodically. The infor-
mation of the base stations is kept in the stack. When the RSSI of
the link between the BT device and the base station falls below
the threshold, the BT device establishes a new baseband connec-
tion with another base station whose BD address is kept in the
stack of the BT device.
The M.L. George proposal 2 asks a BT device to act as a slave de-
vice. The base station must send the information of the BT device
and request all nearby base stations to establish baseband connec-
tion with the BT device if the RSSI is below the threshold. In the
M.L. George proposal 3, a BT device always establishes two base-
band connections with two nearby base stations. Once the RSSI va-
lue is below the threshold, the BT device disconnects the base
station with poorer link quality and establishes another new base-
band connection with another base station. The baseband handoff
delays for M.L. George proposal 1, 2 and 3 are 0.231, 0.172 and 0 s,
respectively.
The M.L. George proposal 3 utilizes the backup link for hand-
off. The baseband handoff in the CP-Handoff also utilizes the
backup link for handoff. However, the main difference between
M.L. George proposal 3 and the CP-Handoff is that in the CP-
Handoff the BT device acts as a slave device, while the M.L.
George proposal 3 asks the BT device to ack as a master device.
In M.L. George proposal 3, the BT device must enter the inquiry
scan state to ﬁnd out available base stations to establish the
backup link for handoff. This would make the BT device to con-
sume more power to look for the existence of nearby base
stations.
The beneﬁt of the CP-Handoff is that nearby BT gateways are
responsible for the baseband handoff. The LW-BT headset doesn’t
need to enter the inquiry scan state to discover nearby BT gate-
ways. Thus, the power is saved. Since the LW-BT is considered
without computation capability, the LW-BT can act as a slave de-
vice only. As a result, the proposed CP-handoff is more suitable
for the LW-BT headset.
6.4. Handoff latency analysis for CP-Handoff
In the subSection, the handoff latency for the CP-Handoff is
evaluated. As depicted in Fig. 11, four kinds of handoff control
schemes are evaluated: (1) No CP-Handoff with measuring RSSI
periodically, referred as No_CP-Handoff, (2) CP-Handoff without
measuring RSSI periodically, referred as CP-Handoffr, (3) CP-Hand-
off with measuring RSSI periodically.
No_CP-Handoff accomplishes the handoff by randomly select-
ing a candidate BT gateway and re-establishing the baseband con-
nection and AVDTP session. The master BT gateway would not ask
the candidate BT gateway to establish baseband connection before
handoff. The candidate BT gateway establishes the baseband con-
nection and the AVDTP session at the same after the master BT
gateway notiﬁes the candidate BT gateway to perform the handoff
procedure. The baseband handoff time and the AVDTP session
handoff time for No_CP-Handoff are 1.17 and 0.39 s, respectively.
On the other hand, for CP-Handoffr, the neighbor BT gateways
would measure RSSI value only when they receive the RSSI mea-
sure request from the master BT gateway. As depicted in Fig. 9,
the measurement of the RSSI value would take lots of time. If the
neighbor BT gateway measures the RSSI value only when they re-
ceive the RSSI measurement request, the master BT must wait for a
long time to get the RSSI values from its neighbor. As a result, CP-
Handoffr spends 6.21 s in RSSI query time. CP-Handoff only spends
0.01 s in RSSI query time, which is roughly equal to the network
end-to-end delay.
In CP-Handoffr and CP-Handoff, while the master BT gateway
selects the candidate BT gateway for handoff, it also takes time
for the candidate BT gateway to establish the baseband connection
with the LW-BT headset before the AVDTP session handoff. The
baseband connection time for CP-Handoffr and CP-Handoff are
1.20 and 1.16 s, respectively.
Since the baseband is established before the AVDTP session
handoff, CP-Handoffr and CP-Handoff only take 0.38 s for the
AVDTP session handoff. It is the main reason that CP-Handoffr
and CP-Handoff have shorter AVDTP session handoff time than that
of No_CP-Handoff.
However, when considering the audio quality during handoff,
No_CP-Handoff is worse than the other two. The LW-BT cannot re-
ceive any audiopacketwhenperforming theAVDTP sessionhandoff.
However, the baseband handoff and the AVDTP session handoff are
performed together in No_CP-Handoff. The audio suspending time
for No_CP-Handoff is 1.56 s, i.e., baseband handoff time plus AVDTP
session handoff time. On the other hand, the audio suspending time
for CP-Handoffr and CP-Handoff is 0.38 s. It is because when per-
forming baseband handoff in CP-Handoffr and CP-Handoff, the LW-
BTheadset canstill receiveaudiopackets. ThedrawbackofCP-Hand-
offr and CP-Handoff is that there is AVDTP session handoff preparing
time, i.e., RSSI query time plus baseband handoff time. The LW-BT
headset can receive audio packets from themaster BT gateway dur-
ing the handoff preparing time. However, if the handoff preparing
time is too long, the handoff may become useless or unnecessary.
CP-Handoffr takes 7.79 s to prepare AVDTP session handoff, while
CP-Handoff only takes 1.17 s. Thus, CP-Handoff is considered as
more efﬁcient and reliable than the other two.
6.5. Packet loss during Handoff
The sending rate for an audio ﬁle is about 48 packets/sec. Refer-
ring to Table 2, according to the sending rate of audio packets, the
calculated loss packet during handoff is close to 18.24 packets for
the 0.38 s CP-Handoff delay. However, the measured lost packets
during handoff are 20.23 packets in average. What causes the dif-
ference between the calculated and measured result is the unreli-
able transmission of BT.
As aforementioned, the candidate BT gateway is asked to buffer
the audio packet starting from the CPN1th audio packet when the
candidate BT gateway is asked to establish baseband connection
Fig. 11. Comparison on handoff latency.
Table 2
Average packet loss during handoff
Calculated Without LPR With LPR
Number of loss packets 18.24 20.23 0.24
C.-M. Huang et al. / Computer Communications 31 (2008) 3275–3285 3283
[12] S. Zeadally, A.Kumar, Protocol support for audio streaming between bluetooth
devices, in: Proceedings of IEEE Radio and Wireless Conference, 2004, pp. 303–306.
[13] S. Zeadally, A. Kumar, Design, implementation, and evaluation of the Audio/
Video Distribution Transport Protocol (AVDTP) for high quality audio support
over bluetooth, Journal of Computer Communications 28 (2) (2005) 215–223.
[14] L.-J. Chen,R.Kapoor,K. Lee,M.Y.Sanadidi,M.Geria,Audiostreamingoverbluetooth:
an adaptive arq timeout approach, in: Proceedings of the 24th IEEE International
Conference on Distributed Computing SystemsWorkshops, 2004, pp. 196–201.
[15] A. Floros, A. Tatlas, J. Mourjopoulos, Bluebox: a cable-free digital jukebox for
compressed-quality audio delivery, IEEE Transactions on Consumer
Electronics 51 (2) (2005) 534–539.
[16] A. Kansal, U.B. Desai, Mobility support for bluetooth public access, in:
Proceedings of 2002 IEEE International Symposium on Circuits and Systems,
vol. 5, 2002, pp. 725–728.
[17] C.-H. Yang, Y.-S. Chen, Bluetooth scatternet formation for supporting
device mobility, in: Proceedings of the Third IEEE International
Conference on Information Technology: Research and Education, 2005,
pp. 408–412.
[18] RSSI, Link Quality and Out-of-Range Indication Application Note, URLhttp://
www.csrsupport.com.
[19] Bluez, URLhttp://www.bluez.org/.
[20] Linux sdk for upnp devices (libupnp), http://upnp.sourceforge.net.
C.-M. Huang et al. / Computer Communications 31 (2008) 3275–3285 3285
年有 460 篇 paper，6 個 workshop 和 3 場 keynote talks。 
 
3場 keynote talks 中，由Dr. Werner Mohr 主講的”Towards the Future Internet-Research Activities 
in Europe” 聽完後心有同感。此演講主要在指出未來 Internet 的走向及演變。在 40 多年的演變中，
前面 20 年的草創始用期和後 20 年的推廣、商用、寬頻化、大量使用化期後，現在必須要有一新
視界來建構未來的 Internet，考量的因素已非過去從純技術眼光來看，必須包含 technology issue、
networking technology、services and applications 及 business process，還有一些 societal challenges，
如 e-health、energy、traffic 等。在其演講中言及許多國家，包含美、日、歐洲、韓、大陸等都已
有相關計畫及單位在從事此方面的研究，但竟未有”台灣”!!我們台灣這邊似乎應有相對計畫或單位：
網通國家型計畫或 TWNIC。 
 
晚宴中的 keynote talk 由 Dr. Michael Marcus 主講”Radio Technical Innovation and Spectrum 
Policy：A Help or a Hindrance? ”此演講主要在講無線寬頻管理及分配的政策。由於是非技術性的
內容相當適合在 banquet 中演說－未來敝人如果有機會主辦國際會議，將依此範例在 banquet 中安
排較 soft 的 keynote talk。 
 
敝人之 paper” An MIH-Assisted Handoff Mechanism for Concurrent Multipath Transfer in Wireless 
Multihomed Networks”被安排在第一天的第 3 個 session：Handover，總共有 6 篇 paper。此 session 中之 6 篇
論文和敝人之 paper 竟然都有一些同質性，不是談到 multihoming，就是談到 mobility management 的問題。
一個有趣的現象是大部分主講者都是研究生，由教授自己親自來講的不多。敝人這次有兩篇 paper 被接受，
另外一篇由敝人之博士後研究－涂來博士 present。未來應該要多加運用成大 5 年 500 億予研究生之
參加國際會議補助，帶些碩/博研究生出國，多參加及發表些會議論文。 
 
三、考察參觀活動(無是項活動者略) 
    無 
四、建議 
此次 PIMRC 國際會議論文發表方式分成口頭報告(oral presentation)或用 poster 的型式報告，
並言明兩者的 paper 是一樣 quality 的，並無哪者較好，哪者較差之分。敝人此次為 oral presentation
的型式。去年參加 Globecom 08 時，敝人是以 poster 的方式參加，雖然站了兩個小時，但有數人
來發問，而此次 PIMRC09 可以講 20 分鐘，但講完後無人發問－敝人用較簡易，但易懂且輕鬆的
方式講解，且博得大家笑容及最大/好的掌聲。不知是聽得很懂沒有問題可問或是聽不懂問不出問
題來!依此兩次經驗，敝人也覺得未來似乎該以 poster 方式參與。而國內未來舉辦會議時，似乎也
該考慮擴大 poster 的型式，以便參加者能有更多的互動。 
 
五、攜回資料名稱及內容 
帶回「The 20th Personal, Indoor and Mobile Radio Communications Symposium, PIMRC 2009」
之電子會議論文集一套。 
An MIH-Assisted Handoff Mechanism for
Concurrent Multipath Transfer in Wireless
Multihomed Networks*
Chung-Ming Huang, Ming-Sian Lin and Lik-Hou Chang
Lab. of Multimedia Mobile Networking,
Dep. of Computer Science and Information Engineering,
National Cheng Kung University,
Tainan, Taiwan, R.O.C.
Email: huangcm@locust.csie.ncku.edu.tw
Wen-Yao Chang
Emerging Smart Technology Institute,
Institute for Information Industry,
Taipei, Taiwan, R.O.C.
Email: wychang@iii.org.tw
Abstract—As more and more devices are equipped with
multiple network interfaces, the multihomed technology is
becoming an important technology that can provide more
reliable connections against the network failure and better
data transmission rate. Concurrent Multipath Transfer (CMT),
which is based on SCTP, is devised for multihomed networks.
CMT can transmit data over all paths to maximum the data
transmission speed. One of the main concerns of CMT is
the receiver buffer blocking issue, especially in multihomed
wireless mobile networks. If the receiver buffer is blocked,
the sender can send only one packet to the receiver. The
receiver buffer blocking is mainly caused by the lost data. For
small memory devices, e.g., PDA, smart phone and embedded
systems, the receiver buffer is limited and has less free space
to prevent receiver buffer blocking. In this paper, we proposed
Media Independent Handover - Concurrent Multipath Transfer
(MIH-CMT) over wireless networks to deal with the receiver
buffer blocking caused by handoff loss. MIH-CMT can reduce
the amount of packet loss during handoff, which may lead
to the receiver buffer blocking. Simulation results show that
MIH-CMT can reduce the effect of the receiver buffer blocking
effectively for devices that have smaller buffer size.
Keywords: SCTP, Hanodff, Multihoming, Concurrent Multipath
Transfer, MIH
I. INTRODUCTION
In recent years, Stream Control Transmission Protocol (SCTP),
which is proposed by IETF in 2004, captures the eyes of
researchers [1]. SCTP features with multihoming and mul-
tistreaming. Computing devices in multihomed networks are
equipped with multiple interfaces, such as Wi-Fi and 3.5G.
Unlike TCP and UDP, SCTP supports multihoming to transfer
data over multiple paths. SCTP mainly transfers data over
the primary path and leaves others as retransmission paths.
Once the primary path fails, SCTP can switch the transmis-
sion to one of the retransmission paths. The main spirit of
SCTP is providing reliable link connectives against the link
*The research is supported by the National Science Council of the Republic
of China under Grant No. NSC 97-2221-E-006-096-MY2 and the Program of
Top 100 Universities Advancement, Ministry of Education, Taiwan, Republic
of China and Institute for Information Industry
failure. Therefore, SCTP does not exhaust the aggregated
bandwidth for data transmission. More and more devices, such
as Notebook or Smart Phone, are equipped with Wi-Fi and
3.5G interfaces together. However, the transport layer does not
utilize the multihomed property to speed up data transmission.
Iyengar et al. proposed the Concurrent Multipath Transfer
(CMT) protocol using SCTP multihoming over independent
end-to-end paths [2], [3], [4]. CMT is a technology based on
SCTP that can transfer data over all paths. Unlike SCTP, CMT
can exhaust the aggregated bandwidth. However, wireless
networks have high data loss rate and the mobility issue.
Packet loss may cause the receiver buffer blocking problem
in CMT. Data must be delivered from the transport layer
to the upper layer. If packets are lost, the transport layer
cannot deliver data to the upper layer in sequence. Thus,
some received data begin to fill the receiver buffer. If the free
receiver buffer is too small to store newly coming data, the
receiver buffer is blocked. The sender cannot transmit new
data to the receiver, and the throughput degrades dramatically.
For small memory devices, such as PDA, smart phone and
embedded systems, the size of receiver buffer is limited. These
devises may run out of buffer quickly if data are lost. Thus, the
receiver buffer blocking becomes a major concern especially
for devices with a small receiver buffer.
The main concern in the multihomed wireless mobile
network is handoff. For example, in the vehicular network,
a mobile device may connect to the road side unit (RSU)
using IEEE 802.11p and has the 3.5G connection at the
same time. As the mobile device runs out of the range of
the connected RSU, it must handoff to another RSU. SCTP
Dynamic Address Reconfiguration (SCTPDAR) employs the
multihoming feature to facilitate the handoff procedure [5].
Since CMT is based on SCTP, CMT can employ SCTPDAR
to deal with the handoff issue in the same way. SCTP with
multihoming is known having more efficient handoff process
than Mobile IP and Fast Handoff [6]. However, when handoff
occurs on the primary path, data may be lost during the handoff
process in SCTP. As for CMT, CMT always uses all paths for
Fig. 1. The receiver buffer blocking caused by handoff loss.
to the disconnection with oAP. At the same time, CN is still
transmitting data over Path 2. However, the receiver buffer is
limited. Many received data, which are transmitted over Path 2,
are blocked by the data with TSN 1. Since the transmitted data
all belong to stream 1, the head-of-line blocking occurs. Data
with TSN 2-5 cannot be delivered to the upper layer without
the data with TSN 1. The receiver buffer is blocked and
occupied by data with TSN 2-5. RFC 4960 states that at any
given time, CN must not transmit new data to any destination
transport address if its peer’s receiver window (rwnd) indicates
that the peer has no buffer space. However, regardless of the
value of rwnd (including if it is 0), CN can always have one
data chunk in flight to the receiver if it is allowed by the
congestion window (cwnd).
At this moment, if the receiver buffer is blocked, CN can
send only one packet to the receiver. CN retransmits the data
with TSN 1 only when fast retransmission or timeout retrans-
mission on the data with TSN 1 occurs. The receiver cannot
free its buffer until it receives the data with TSN 1. During
this long period, the throughput of CMT degrades dramatically
because CN merely sends a few data to the receiver. In the fast
retransmission mechanism of CMT, CMT marks data for fast
retransmission only when it receives three consecutive SACKs,
which implies a missing on the lost data. However, since Path 1
is failed before MN reconnected with nAP, CN cannot receive
SACKs for data transmitted over Path 1. CN cannot have fast
retransmission for the lost data caused by handoff in Path 1.
Lost data resulted from handoff loss can only be retransmitted
through timeout retransmission, which takes much more time
than fast retransmission. Before CN receives the ASCONF-
DeleteIP message, CN possibly retransmits lost data caused by
handoff to the failure path because CN has no idea that Path 1
is unreachable. If the retransmission is made on the same path,
i.e., Path 1, the retransmission is meaningless. Consequently,
the receiver buffer blocking becomes worse. On the other hand,
if multiple packets are lost, CN needs to retransmit data more
Fig. 2. The ASCONF-PoFailure chunk.
than once to release the receiver buffer. However, since the
receiver buffer is blocked, CN can only send one packet per
RTT. As a result, in the worst case, the receiver buffer may
be blocked in terms of seconds.
The receiver buffer blocking caused by the handoff is that
MN cannot notify CN before link failure. The transport layer
lacks the knowledge of the underlying link status, e.g., signal
strength. MN cannot send the ASCONF-DeleteIP message to
CN until MN detects that the link is failed. Before CN receives
the ASCONF-DeleteIP message, many data, which are sent to
the unreachable path, are lost.
IV. MIH-CONCURRENT MULTIPATH TRANSFER
(MIH-CMT)
In this Section, the concept of MIH-Concurrent Multipath
Transfer (MIH-CMT) are introduced.
MIH-CMT utilizes MIH to deal with handoff to reduce the
effects of the receiver buffer blocking resulted from handoff
loss. MIH can provide (1) Link up, (2) Link Down, and (3)
Link Going Down events for MIH-CMT. Thus, MIH-CMT
can minimize the number of packet loss caused by handoff
to prevent the receiver buffer blocking during handoff. If the
signal strength is too weak and going to fail, MIH generates a
Link Going Down event to the upper layer. Therefore, MIH-
CMT can utilize the Link Going Down event to prepare for
handoff. To deal with handoff, MIH-CMT uses the following
control chunks:
• ASCONF-AddIP: MN sends the ASCONF-AddIP chunk
to CN to add a new IP address to the existing association.
• ASCONF-PoFailure: MN sends the ASCONF-PoFailure
chunk with IP address to CN to notify CN that the IP
address is going to fail.
• ASCONF-DeleteIP: MN sends the ASCONF-AddIP
chunk to CN to delete an old IP address, which is
unreachable.
ASCONF-AddIP and ASCONF-DeleteIP chunks are de-
fined in SCTPDAR. MIH-CMT extends SCTPDAR by
adding the ASCONF-PoFailure chunk. Figure 2 shows the
ASCON-PoFailure chunk format. An ASCONF-PoFailure
chunk contains an IP address that is going to fail. If an
interface is going to fail, MN can send the ASCONF-PoFailure
Fig. 6. Comparison on throughput during handoff.
Fig. 7. Comparison on buffer usage during handoff.
sending data in Path2. Therefore, when Path2 was really failed,
the on-the-fly data were very few. These on-the-fly data did
not cause receiver buffer blocking in MIH-CMT.
Figure 6 shows the throughput during handoff. MIH-CMT
had a small throughput degradation before Path2 was failed.
However, in CMT, after Path2 was failed, some on-the-fly
data were lost. Data were lost due to handoff. These packet
loss caused by handoff resulted in receiver buffer blocking in
CMT. CMT took more than one second to recover the receiver
buffer full resulted from the packet loss caused by handoff.
The throughput of CMT degraded dramatically. As for MIH-
CMT, when Path2 was failed, the throughput of MIH-CMT
was roughly matched the capacity of Path1.
Figure 7 shows the buffer usage during handoff. The free
buffer space of CMT was decreased quickly during handoff.
The free buffer space did not allow CN to transmit too many
packets to MN. Thus, the throughput degraded.
VI. CONCLUSION
In this paper, the Media Independent Handover - Concurrent
Multipath Transfer (MIH-CMT) protocol was proposed. The
Concurrent Multipath Transfer (CMT) is the technology that is
based on SCTP to transmit data over all paths. However, when
using all paths to transmit data, the receiver buffer blocking
is unavoidable. The receiver buffer blocking is mainly caused
by lost data. MIH-CMT is able to reduce the probability of
the receiver buffer blocking caused by handoff loss. Main
contributions of MIH-CMT are summarized as follows:
• The combination of MIH and SCTPDAR: MIH pro-
vides Link Up, Link Down, and Link Going Down
events for the upper layer to deal with handoff. MIH-
CMT extends SCTP Dynamic Address Reconfiguration
(SCTPDAR) by adding the ASCON-PoFailure chunk to
notify the remote end-point about which IP addresses are
going to be failed. MIH-CMT combines MIH events to
corresponding SCTPDAR chunks, i.e., ASCONF-AddIP,
ASCONF-DeleteIP and ASCONF-PoFailure, to deal with
handoff more effectively.
• Reduced probability of receiver buffer blocking: The
MIH-assisted handoff mechanism is able to stop sending
data in the path that is going to be failed. MN sends
ASCONF-PoFailure chunk to notify CN which path is
going to be failed. The amount of packet loss caused
by handoff can be reduced. Therefore, the occurrence of
receiver buffer blocking during handoff can be reduced or
avoided. Related experiments show that using the MIH-
assisted handoff mechanism, MIH-CMT can reduce or
avoid the receiver buffer blocking effectively.
REFERENCES
[1] R. Stewart, Ed., “Stream control transmission protocol,” IETF, RFC
4960, pp. 1–152, 2007.
[2] J. R. Iyengar, P. D. Amer, and R. Stewart, “Concurrent multipath transfer
using sctp multihoming over independent end-to-end paths,” IEEE/ACM
Transactions on Networking, vol. 6, no. 14, pp. 951–964, 2006.
[3] J. R. Iyengar, P. D. Amer, and R. Stewart, “Receive buffer blocking in
concurrent multipath transfer,” Proceedings of the Global Telecommuni-
cations Conference, vol. 1, pp. 121–125, 2005.
[4] P. D. A. Preethi Natarajan, Janardhan R. Iyengar and R. Stewart,
“Concurrent multipath transfer using transport layer multihoming: Per-
formance under network failures,” Proceedings of the Military Commu-
nications Conference, vol. 4, pp. 1–7, 2006.
[5] M. Riegel and M. Tuexen, “Stream control transmission protocol (sctp)
dynamic address reconfiguration,” IETF, RFC 5061, pp. 1–41, 2007.
[6] K. C. K. Tsang, C.-L. Wang, and F. C. M. Lau, “Handoff performance
comparison of mobile ip, fast handoff and msctp in mobile wireless
networks,” Proceedings of the Parallel Architectures and Algorithms and
Networks, pp. 45–52, 2008.
[7] M. Kim, T. wook Moon, and C. Sung-joon, “A study on ieee 802.21
mih frameworks in heterogeneous wireless networks,” Proceedings of
the Advanced Communication Technology, pp. 242–246, 2009.
[8] J. Liu, H. Zou, J. Dou, and Y. Gao, “Reducing receive buffer blocking in
concurrent multipath transfer,” Proceedings of the Circuits and Systems
for Communications, pp. 367–371, 2008.
[9] D. P. Kim, S. J. Koh, and L. V, “On the packet reordering of msctp
for vertical handover in heterogneous wireless networks,” Proceedings
of the Vehicular Technology Conference, pp. 1–5, 2008.
[10] Y. Y. An, B. H. Yae, K. W. Lee, Y. Z. Cho, and W. Y. Jung, “Reduction
of handover latency using mih services in mipv6,” Proceedings of the
Advanced Information Networking and Applications, pp. 229–234, 2006.
[11] Y.-M. Chen, M.-Y. Lai, S.-C. Lin, and S.-C. C. andTein Yaw Chung,
“Sctp-based handoff based on mih triggers information in campus
networks,” Proceedings of the Advanced Communication Technology,
pp. 1301–1305, 2006.
97年度專題研究計畫研究成果彙整表 
計畫主持人：黃崇明 計畫編號：97-2221-E-006-096-MY2 
計畫名稱：在多重定址(Multi-homed)網路中基於 SCTP 的不可靠(Unreliable)及部分可靠(Partially 
Reliable)的多路徑資料傳輸協定 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 4 100%  
研究報告/技術報告 0 0 100%  
研討會論文 3 4 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 0 100%  
博士生 1 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
