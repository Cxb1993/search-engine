2 
行政院國家科學委員會專題研究計畫成果報告 
控制區域網路的研究與應用 
Research and applications of the controller area network 
計 畫 編 號：NSC 97-2221-E-212-032 
執 行 期 限：97 年 8 月 1 日至 98 年 7 月 31 日 
主 持 人：陳木松 大葉大學電機工程學系 
共同主持 人：黃其泮 彰化師範大學電子工程學系 
計畫參與人員：顏豪緯 大葉大學電機工程學系 
 
一、中文摘要 
由於網路資源與截止期限的限制，控制區域網
路的訊息交換必須相互競爭共同的網路資源與頻
寬。本研究提出控制器-場的模型，其中”場”則是訊
息佇列池，”控制器”是一訊息排序控制器負責分配網
路資源給訊息佇列池的訊息。訊息排序控制器是以
輻射基底網路實現之，並具有機器學習的功能，以
因應”場”的動態特性。本研究對於訊息排序控制器提
供新型的學習方法，以維持低且穩定的訊息等待時
間及較低的訊息傳輸失敗率。此外訊息排序控制器
亦採用變動架構以適應複雜的訊息排序策略。模擬
實驗結果顯示，訊息排序控制器能有效提昇控制區
域網路的訊息交換效率，並比靜態排序策略或是動
態排序策略(如最早截止期限)，更能適用於較大範圍
的訊息流量與執行環境的變動。 
關鍵詞：控制區域網路、訊息排序控制器、輻射基
底網路、機器學習 
Abstract- Due to limited resource contentions and 
deadline constraints, messages on the Controller Area 
Network (CAN) are competing for service from the 
common resources. Actually, because of the fluctuation 
of network traffic or an inefficient use of resources, the 
existing static or dynamic priority policies may not 
guarantee flexibility for different kinds of messages in 
real-time scheduling. Consequently, the message 
transmission which cannot comply with the timing 
requirements or deadlines may deteriorate system 
performance significantly. In this paper, we have 
proposed a controller-plant model, where the plant is 
analogous to a message queue pool (MQP) and the 
message scheduling controller (MSC) is responsible to 
dispatch resources for queued messages. The MSC, 
which is realized by the radial basis function (RBF) 
network, is designed with machine learning algorithm 
to compensate the variations in plant dynamics. The 
MSC with the novel hybrid learning schemes can 
ensure a low and stable message waiting time variance 
and lower transmission failures. A significant emphasis 
of the MSC is the variable structure of the RBF model 
to accommodate to complex scheduling situations. 
Simulation experiments have shown that several 
variants of the MSC significantly improve overall 
system performance over the static scheduling 
strategies and the dynamic Earliest Deadline First (EDF) 
algorithms under a wide range of workload 
characteristics and execution environments. 
Keywords - Controller Area Network, Message 
Scheduling Controller, Radial Basis Function 
Network, Machine Learning 
I. INTRODUCTION 
The controller area network (CAN) [1][2] was 
originally developed to solve complex cable problems 
that cause reliability degradation in automobile control 
systems. The CAN system consists of a large number of 
interconnected nodes that exchange messages through 
communication medium. In real-time applications, 
controller area networks are inherently local area 
networks whose control performance is measured in 
terms of successful time critical message exchanges. 
Hence, an important research issue is the incorporation 
of adaptive message control mechanisms to improve its 
performance. In this paper, we have proposed the 
machine learning (ML) [3] algorithm for real-time 
on-line message scheduling. The framework of the 
proposed strategy consists of a learnable message 
scheduling controller (MSC) and a message queue pool 
(MQP). The MQP is an integration of parallel queues to 
model service systems with several distinct classes of 
messages. In fact, message scheduling on the MQP is 
similar to queueing problems that permit the use of 
standard queueing theory to predict the queueing 
behaviors. 
However, several problems are immediately apparent 
in applying the machine learning approach. First, 
parameter adaptation of the MSC (or the equivalent 
RBF network [4]) requires a complete input-output pair 
4 
structure for learning a desired mapping. To satisfy the 
time-varying CAN system, a static RBF network with 
merely parameter adaptation is not adequate for 
providing accurate scheduling decisions. In this study, 
we plan to utilize the Minimal Resource Allocation 
algorithm for both parameter learning and structure 
identification into one unified approach. The methods 
to resolve the aforementioned problems are discussed 
in the next section. 
III.  DESIGN OF THE RBF NETWORK 
In this section, we discuss the way to design the RBF 
network for message scheduling. According to 
mentioned problems in Section II, we should focus on 
input selections, hybrid learning, and structure 
adaptation for the RBF network. 
A. Input Determination 
Because the RBF models are data-driven models, 
choice of input features is very important to obtain 
acceptable output. In accordance with this, we plan to 
consider the mean waiting time Wi(⋅) and the largest 
waiting time Di,H(⋅) in each queue as possible input 
variables at each time instant. The mean waiting time of 
messages in queue is measured as 
(3)  
where ni and Di,m(⋅) are the number of queued messages 
and the waiting time of the mth message in Qi, 
respectively. Obviously, the larger value of Wi(⋅) 
indicates that messages in Qi have higher possibilities 
to miss their deadlines. However, a small value of Wi(⋅) 
cannot always guarantee timely transmission. It could 
be the case that Wi(⋅) is low but some messages’ 
waiting time is much larger than the average value. In 
this situation, any sudden changes of queue load can 
induce unpredicted adversity. Therefore, it is desirable 
to let the RBF model be aware of this fact such that 
queue Qi is selected more frequently to avoid 
transmission failures. To this end, we also consider 
Di,H(⋅) as another possible input variable. At this point, 
the input attributes that are of relevance include Wi(⋅) 
and Di,H(⋅). Finally, we arrive at our final expression for 
the input vector in the following formulation 
(4)  
Due to different deadlines of each queue, χi(⋅) is 
obtained by the scaled values of Wi(⋅) and Di,H(⋅) and 
(5)  
In summary, if there is p-class of messages in p 
parallel queues, x is a 2p-dimensional vector. From the 
classification respective, the aforementioned approach 
belongs to the classification problem, 
R2p6 {1,2,…,p}. 
B. Hybrid Parameter Learning 
After having chosen the input features, we need to 
decide when and how to initiate supervised learning. In 
the case of message scheduling, learning is necessary to 
modify the internal knowledge of the controller, 
especially when any inappropriate decisions incur 
unfair bandwidth usage or transmission failures. We, 
therefore, consider two critical cases to start the 
learning process. Firstly, the minimization of waiting 
time variance (WTV) is very essential for the MSC to 
offer a stable quality of service, because the 
minimization of the second moment of the waiting time 
leads to the service predictability and dependability [8]. 
In our study, WTV is defined as 
(6)  
In particular, the WTV is the global information 
between queues. In the case of message scheduling, too 
large of the WTV indicates that the bandwidth 
allocation is unfair among requesting messages. In the 
long run, the waiting time of some queued messages 
increase significantly. This is referred to the 
phenomena of non-uniform bandwidth utilization. The 
controller should notify this fact and allocate 
appropriate bandwidth for those messages to avoid 
possible transmission failures in advance. In this 
circumstance, type I learning is invoked when σbq (or 
square root of WTV) is greater than a specific value θσ. 
Secondly, another condition of learning involves 
whenever any transmission failures (i.e. δi(⋅) > 0) really 
occur. In this case, the controller needs a prompt 
recovery through effective parameter learning and/or 
structure adaptation. This is referred to type II learning. 
In fact, both kinds of learning provide complementary 
benefits (i) to prevent possible causes of non-uniform 
bandwidth allocation among requesting messages and 
(ii) to reduce possibilities of transmission failures in 
advance. The complementary effects can be verified 
clearly in the simulation examples. 
To start supervised learning, it is desirable to infer 
proper target values for learning. Our idea is based on 
enhancing the failure experiences which can be either a 
higher WTV or transmission failures. In type I learning, 
we are intended to assign more bandwidth for the queue 
with the largest mean waiting time whenever σbq > θσ. 
,
1
1( ) ( ),
in
i k i m k
mi
W t D t i
n =
= ∀∑
1 2( ) ( ) ( ) ( )k k k p kt t t t⎡ ⎤= ⎣ ⎦x χ χ χ"
,
max,
1( ) ( ) ( )i k i k i H k
i
t W t D t
D
= ⎡ ⎤⎣ ⎦χ
2 1 2
max,1 max,2 max,
( )( ) ( )( ) VAR , , , p kk kbq k
p
W tW t W tt
D D D
σ ⎧ ⎫⎪ ⎪= ⎨ ⎬⎪ ⎪⎩ ⎭
"
6 
ΣkTFRk, in the MQP. TFRk is defined as the ratio of the 
number of transmission failures in Qk to the total 
number of messages being transmitted. In formula 
(11)  
Regarding to the learning issue, the MSC makes use 
of a hybrid scheme of type I and II learning. Both types 
of learning utilize the MRA algorithm for structure 
adaptation and the DEKF algorithm for parameter 
learning iteratively. 
In Figure 3(a), we compare the proposed MSC with 
the EDF and SC for queue selection. When the queue 
load is small, the performances of all these methods are 
comparable. In fact, the TFR is almost zero when ρ is 
less than or equal to 0.65. As ρ becomes larger, the 
scheduling problem becomes more difficult. 
Consequently, the likelihoods of longer waiting time 
and transmission failures increase. These discrepancies 
can be readily observed from the figure. In the figure, 
the TFR of the EDF increases linearly when ρ is greater 
than 0.65 and the TFR of the SC also increases 
instantly when ρ is greater than 0.7. Nevertheless, the 
MSC consistently remains its lower TFRs until the end 
of simulation. For example, the TFRs are 0.037, 0.0582, 
0.0908, and 0.1318 for VS_MSC_Fuz, VS_MSC_Bin, 
FS_MSC_Fuz, and FS_MSC_Bin when ρ is 0.95. 
These results demonstrate the superior ability of the 
MSC in handling message scheduling, especially when 
the load is heavy. One important observation is that the 
MSC with variable structures (VS_MSC_*) exhibit 
lower TFRs than the ones with fixed structures 
(FS_MSC_*). Actually, the MSC with variable 
structure attempts to converge to a minimum 
complexity RBF model without forgetting already 
learned knowledge, while maintaining a continuously 
decreasing learning metric. The simulation results 
clearly stipulate that VS_MSC_Fuz and VS_MSC_Bin 
are capable of eliminating the locally divergent 
behavior of training approaches and reveal theirs 
robustness to unmodeled internal dynamics of the 
system under investigation. Additionally, the MSC with 
fuzzified outputs can also avoid the problem of 
overfitting and thus lead to lower TFRs than the MSC 
trained with binary outputs. 
In Figure 3(b), we also show the required n_RBFs 
versus different loads. In that figure, the n_RBFs 
increases to accommodate to more complex scheduling 
problems with increasing loads. However, 
VS_MSC_Fuz can quickly converge to a more 
parsimonious RBF network than the model created by 
VS_MSC_Bin. Interestingly, the n_RBFs is 
approximately 18 when ρ is 0.9. This maximum value 
is even less than the cases of FS_MSC_Fuz and 
FS_MSC_Bin. In both models, the n_RBFs is fixed at 
25 for simulations. At this point, we conclude that the 
variants of the MSC consistently perform better, with 
respect to TFRs, than the EDF and SC. Furthermore, 
the overall performance improvement achieved by 
VS_MSC_Fuz becomes more pronounced as shown in 
the second simulation. 
Apart from the lower TFRs, another important 
feature of the MSC is the minimization of waiting time 
variance (WTV) between requested queues. Figure 4(a) 
shows the WTV for different configurations of the 
MSC. Among these curves, the VS_MSC_Fuz presents 
good resistances to the workload variations and 
maintains the lowest WTV in a steady manner. The low 
values of WTV imply that the bandwidth allocation is 
fair and efficient in queue selections. In Figure 4(b), we 
also illustrate the WTV of the EDF and SC for 
comparisons. It is worth noting that the waiting time 
variances of the EDF and SC are very sensitive to the 
load change. Interestingly, the behaviors of these two 
methods are quite different. In the EDF, when the load 
is low, the queues with smaller deadlines can easily 
gain access to the bus than the queues with larger 
deadlines. As a result, variations of the waiting time are 
large and the WTV is high. When the load is high, all 
queues compete for the shared resources according to 
the deadline expiry policy. Therefore, the waiting time 
for different queues is comparable and the WTV is low. 
This explains why the WTV of the EDF decreases as 
the load increases. Nevertheless, the SC selects the 
queue in a cyclic manner without considering the 
deadlines and queue loads. As the load becomes heavy, 
the queues with larger deadline starve from bus access. 
Consequently, its WTV increases rapidly as the load 
increases. 
V. CONCLUSIONS 
In this paper, we have presented a real-time online 
message scheduling controller, which is realized by the 
RBF network, in the CAN system under resource 
contentions and deadline constraints. One of the distinct 
features in our approach is the inclusion of machine 
learning scheme in regulating the internal parameters of 
the MSC, which involves the structure of the RBF 
model and the related parameters associated with each 
RBF. The advantage of machine learning is that there is 
no need to manually specify the details of the model to 
be learned, or even necessarily to have any a priori 
knowledge of the model at all. Instead, the learning 
algorithms construct models automatically. In addition 
to this, the learning algorithm includes type I and type 
II learning for handling different queue load variations. 
# of transmission failures  in TFR
# of messages being transmitted in the MQP
k
k
Q=
8 
Figure 3. (a). Comparisons of TFRs with different scheduling methods for a 5-queue MQP model. (b). The 
average number of RBFs required for VS_MSC_Fuz and VS_MSC_Bin versus different queue loads. 
Figure 4. Waiting time variance variations in the cases of (a) different MSC configurations and (b) the EDF 
and SC scheduling. 
0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
0
0.1
0.2
0.3
0.4
0.5
TF
R
s
ρ     (a)
0
0.1
0.2
0.3
0.4
0.5
0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
5
10
15
20
25
30
ρ     (b)
A
ve
ra
ge
 #
 o
f R
B
Fs
VS_MSC_Fuz
VS_MSC_Bin
VS_MSC_Fuz
VS_MSC_Bin
FS_MSC_Fuz
FS_MSC_Bin
EDF
SC
0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
0.5
1
1.5
2
2.5
3
x 10-3
ρ     (a)
W
ai
tin
g 
tim
e 
va
ria
nc
e
VS_MSC_Fuz
VS_MSC_Bin
FS_MSC_Fuz
FS_MSC_Bin
0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
0.01
0.02
0.03
0.04
0.05
0.06
ρ     (b)
W
ai
tin
g 
tim
e 
va
ria
nc
e
SCEDF
