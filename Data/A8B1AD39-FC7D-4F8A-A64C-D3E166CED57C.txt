 2 
 
 
z K { _ | }  
z K { _  z ~ '(       

    /    
   800      
  | }     s `    `    
   www.contrel.com.tw               (02)86983554 
* +   (500   L ) 
   	 
                    ! "
TMS320C6711 DSP# Xilinx ! "  Spartan-II XC2S50 FPGA$% & ' ( )   * +,-
. / #0 1 2 3 I/O ,4 5 6 7 $8 2 9 : ; < => ? @ A < ,A   B $=C ) D
DSP E     F G * + IIOS/C −µ HI J K L ,  * +M N O PQ $R
S T F G * +
U V W 1 X: Y U V > Z N [  H F \] ,^ _ ` $: Y ; < a b
c d e f =g ] h ij k$l % m  n o L ,  p q $r    . / ,\] $
s t ) u v F ^ _ w x y p q E $z)    w x 	 
 
D   a     { |   }Cascade Control~K L  C ) $ m  \ 
   ,a $I       2    u ,  H\  
  $D 2     j k$)  
:  -    #     > 
u  
 0 1 $ ? OSIIC −µ   F G * +$C )         $S T
w     ¡ $  * +¢£ c ¤ ¥ ¦  c $z§     #¨  ,	 © ª
« ¬ ­ ®       ${ |   $    $  F G * +ª
 
Abstract 
Industrial motion controller is usually developed in two phases: motion control design and 
real-time implementation.  For first phase, this project presents a digital servo driver that 
realizes a novel feedback controller based on position, velocity feedback using optical encoder 
information.  For second phase, this project develops an embedded motion controller based on 
TI TMS320C6711 DSP, XILINX Spartan-II XC2S50 FPGA and multitasking real-time kernel. 
In this project, the control scheme is implemented based on the TI TMS320C6711 DSP and 
 4 
n a ,   DSP based    $   K L R$Õ#ó 
 
 7    ¥  
 º $¥   XILINX Spartan-II XC2S50 FPGA   4
  C )  . / 
      TMS320C6711   u   0 1 $9 * +
, c   $ z t Áu   0 1 -  ! $"   XILINX Spartan-II 
XC2S50 FPGA # 0 1 $¥ ì $  % ^ & ' ( ) , General I/O portXPWMÁ Encoder
i6 7  
 
   A < K L  
* +A <  F ¼ * Rn +$, IIOS/C −µ 
    ¼ #¹ ½ ¾ ¼  ñ
F  $:  - r CAD/CAM ; < . / 
Â  ¼  G-Code # M-Code S T ¥  & ' (
  * +$u   0 1 r ¹ ½ ¾ 0 & ' ( 2 3 1 2 < E $     ¼ ' (
3  F $ 4 r ¹ ½ ¾ t 5 ) 6 7 ½ ¾ n Ú  
U $  r  U  & ' 8 6 9 - $¿
À  %  : 6 9 ½ ¾ $j k ; Ä Å    - / <  =     $ . / ( Ä Å  z
> ? @    $r    ? @ $j k. / (Ä Å  z$I A   z$ ;     $
r    (u   0 1    $I C ) B   $RJ C ) v  
      
 6 
 
Z       
   [ \  
A u  C  0 1 (Digital Signal Processor, DSP) 
B 
% ]  Ì ^ M _ ` 1 2 < ( Synchronous Dynamic RAM, 
SDRAM ) 
C ² ¼ ` 
a b  (Filed Programmable Gate Array , FPGA) 
D ¥  (Printer Port) 
E  c 1 2 < (Flash) 
F JTAG  7 (IEEE-1149.1) 
G . / d e<  =  (Pulse width modulationHPWM) 
 * +    * +$f u   0 1 g \3 1 2 h N 72K byte$i
j l 2 3  2 < 128M Byte % ]  Ì ^ M _ ` 1 2 < ( Synchronous Dynamic RAM, 
SDRAM )$I ï k ¹ ½ ¾ #6 9 ½ ¾ @  U l m _  
   ¥ d :  Spartan-II XC2S50 ² ¼ ` 
 a b  (Filed Programmable Gate 
Array , FPGA)  ® Xilinx ! " / ¿,² ¼ n o   $  Í c $¦ N 1,728vn
o p e$384v CLB$n o qz 50,000q$²  I/O portz 176v$\3 RAM ² z 24,576
 e² ¼ ` 
a b  $  0 1       t Xu   I/O 0 1 X
PWM ½ ¾ t 5 i > C )  r u    $ s t u  u v w (D/A)# v w u u  (A/D)
u x n y z  F  
   # PC {  & . :  ¥  $r ¹ ½ ¾ S T J  7 & ' (  
 8 
 
  z > ? @     
 
  > ? @  < \3   
1.3               
o L    * +$Ú >  ¥ ) * +#w ¦ § ¨ ©   n ª ) 
T U Ë $d s
« > ¬ â  ­ 2 6 
Å ®  B $I Á ¯ @ î û  % 
  °   ±  B ² ³ * + ´ µ
 Ì Í c (Timing behavior)N « $   ¶ N  J   Ñ - » 
Ñ - n o ²  J  
 * +   M N  (Real time) ³  (Multi-tasking)
Í c $ J   I I/ −OSCµ  
  F G ¼ $K L R·n + 
F G * +,F -  Jean J. Labrosse$Í Q ¸ Ë [ > X¹  º  » X:  ² ¼
½ c . / XS T J F G * +: Y  )  ¼ 
a ³ j W  Y ] h $  Ú @ 
Z  ¾ ²
I ¶ Â õ 
 > $8 2 (=² %  W 1 64v F Hy  ¼ 
a ¿ À  $Á Â ² r
 10
 
ë    * +,K L  
D vC ì 
   * +Õ$        * +,. / $   
º 7 5  (E í CAD/CAM,½ ¾ $¥ r - k, ! ' ( í
 zA  $ J
   a 
Õ î $r 4  ì v   * + ª ) ï @ 
  ð² Y ñ $
   . / Þ ß I  3 % ® 
(1) ¹ ½ ¾ t 5  
(2)  : 6 9  
(3) Ä Å     
(4) u   0 1 #2 3 A <   
(5) â ã ò  
(6) ó Q ô õ  
	
 
	 ﬀﬁﬂﬃ	 
"!
#%$&
ﬂ')(
*+,-
./
"0
ﬂ
 
ð    . /  
 12

  
 
	 

    
 
%   6 9 +$  
3 $ %  ! " # &$ %  ! " # &$ %  ! " # &$ %  ! " # &  
v&  
B   * +Rdn +$
E Zvp en _ ) ®  (Controller)X
 < (Plant)#â ã (Sensor)    n  z
¯  ½ ¾ #â ã n ã Y 
C
 w g $n ¿À 
' (  ;   £ ) - / * ,
 µ C  ' ( < $ J   * +

	 
$D y : * +
 . / >   n + , ,. / N j   #¨ ù 
 ¥ )   ,
 	 
$D y     ½ ¾ # C  $¿À * ,
  µ C  $: * +N j ¤ 
 ¥ ) $
 vT ¼    C )   £ ) (Control Law)
¸ Ë   
 
d   * +
º -  
3r Ä Å  z* +$        $ J 
E 2 3   Á¯ u   n ª
) ,  $.     ü e  #  & +       $Rdn +$   
IP   $% &   kvi#kvp$   P   kpp 
 14
 ' (  F  
c ;  [ \  
 F (Task) 
  ` ¹ ½ ¾ (Load command task) 
 ¹ ½ ¾ t 5 (Parsing task) 
 ûü 6 9 (Interpolator task) 
 ó Q ô õ (Home) 
  0 & . (¹ ó  (Send Messages 
to Host PC ) 
§ 1 1 2 < Ò  U l  L  
(Ring Buffer) 
 m _ ¹ ½ ¾ (G/M code queue) 
 ¹ ½ ¾ t 5  6 9 n > <  ½ ¾
(Command data queue) 
 6 9 ½ ¾ (Interpolator queue) 
Õ V (Interrupt service 
routine) 
  ` PC { ¹ ½ ¾ ¼ (Printer port 
read ISR) 
 Ä Å  Õ (Servo control ISR) 
D J } 5 = ¹ ½ ¾ U l & . $:  A < Õ C ) ,$ ,U l : & .  $
I >  A < Õ  ? ñ    $} U l & . (   $¥ d ,   5
= C U l ë & . /  $I ? ñ ¹ ó ² r  @ U l A  & . $I 7  U l B C ~
 À  
Ä Å    I ' (   Õ $Ä Å    c  B  ,È É ,þï $D >
z)  ûü   #¨  $iÁ Â ' (   Õ E C ) ,¥ d 4 °  « â ã $ë : 
  Õ E w x $ 4 °  « ò ã «   ¨ ù $D  F £ 4 ¢   r « ò ã 4 °  «
1  $D > ´ µ 7  2 M À  
G H ® I ' (  F (Task)í$  IIOS/C −µ    * +$,I v|I
vI E  F $ v F / N P0 J (Priority) F K ä  $L ý 
P0 J ) K  J 
* +$' (  F P0 J M * Rn +² Y ñ  ` ¹ ½ ¾ (Load command task)P
0 J j $s « 0 r CAD/CAM¹ ½ Ô    $J     D >  ñ u $i
Á Â r P0 J ï § j $ ¹ ½ ¾ t 5 (Parsing task)$s « 0 r CAD/CAM¹ ½
¾ t 5 )  p Ë ¹ ½ ¾ $ ½ ¾ 6 9 (Interpolator task)#  3 ûü 6 9 j k$
G I v F (Task)w   $0 & . (¹ ó (Send Messages to Host PC )ä  c N N  O
 16
¡ J       ,c > ½ ¾ p  u x 1mm=1000pulse 
G01 X50 Y50 F100; 
G01 X50 Y-50  F100; 
G01 X-50 Y-50  F100; 
G01 X-50 Y50  F100; 
G02 X50 Y50  I0 J50  F100; 
G02 X50 Y-50  I50 J0  F100; 
G02 X-50 Y-50  I0  J-50 F100; 
G02 X-50 Y50  I-50 J0  F100; 
 
dZ    ûü  
7. 9 :9 :9 :9 :  
)  
:  -    # I/O  > 
u   0 1 $ ? OSIIC −µ 
  F G * +$C )         $S T w     ¡ $  * +¢
£ c ¤ ¥ ¦  c $ z§     #¨  ,	 ©  
     M N j @ PQ $,N Z Õ 
6 9 Ñ - » |Ú  j l  $¶ O Z
 |¶ Â 6 9  F (Task)\] ² |- $, N Z Õ 
Ä Å   Ñ - » $ØRE Z   X
 > Õ   (Multi-rate control)|M  ^ (Sliding mode)i  » I $ì  % ~  Ú  
% Ä Å   » I $¶ Ú Z  Ä Å Õ   ¼ ² $i* +  r ì vK L o L C ì $
W b c @ $² ì  %  > #Ú B $# * ,Z  $z§ [ \ ` Ú B  
 
