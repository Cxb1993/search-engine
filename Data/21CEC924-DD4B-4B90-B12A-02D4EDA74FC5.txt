表 C012   第 3 頁，共 20 頁 
algorithm [20] of polynomial complexity in 
the number of net nodes for checking a 
sufficient condition of diagnosability of the 
target system. If the system is found to be 
possibly non-diagnosable, T-components of 
the Petri net model are computed to find a 
location in the system for adding a sensor. The 
objective is to distinguish multiple 
T-components with the same observable event 
sequences. The diagnosability-checking 
algorithm is used again to see if the system 
with the newly added sensor is diagnosable. 
The process is repeated until either the system 
is diagnosable or diagnosability of the system 
cannot be enhanced. 
文獻探討 
Traditionally, diagnosis has been treated in 
an ad hoc manner using techniques such as AI 
[2], expert system [16], and fault trees [4].  
Sampath et al. [9], [10] first studied the 
problem in the domain of the discrete event 
system (DES)[18] theory and proposed the 
concept of DES-based diagnosability. The 
merit of their approach is that a model-based, 
systematic methodology is proposed to detect 
a specific type of failure in finite delay after 
its occurrence. In addition, they present a 
necessary and sufficient condition for 
checking diagnosability. One of the challenges 
of diagnosis is that not all events are 
observable. It is difficult to differentiate 
between a nominal and a faulty trace within a 
bounded delay from the time of the 
occurrence of a fault. Thus, the  
computational  cost  for checking 
diagnosability using the methods of Sampath 
and her followers [9] , [10] are quite high. On 
the other hand, some propose methods that 
take advantage of the conciseness of Petri net 
models [21] to solve the diagnosis problem [1], 
[6], [8], [12], [13]. In [20], an algorithm of 
polynomial complexity in the number of Petri 
net nodes is proposed for computing a 
sufficient condition of diagnosability. 
研究方法 
With the assumption that the reader is 
familiar with the basic concepts of FSMs, 
formal languages, and Petri nets, this section 
briefly summarizes the diagnosability 
concepts as follows: 
The system of interest is modeled as an 
FSM, ( , , , )oG X xδ∑= , where X  is the set 
of states, ∑  is set of events, δ  is the partial 
transition function, and ox  is the initial state. 
The event set o uo∑ ∑ ∑= ∪  is composed of 
observable events o∑ , and unobservable events 
uo∑ . For the nontrivial diagnosis problem, 
failures are unobservable events f uo∑ ∑⊆ . 
There can be several types of failure, with the 
possibility that several failures belong to the 
same type of failure: fi∑ . Collectively, we use 
the partition f∏  on f∑  to represent such 
categorization of failure types.   
The objective of the diagnosis problem is to 
identify the occurrence and type of, if any, 
failure events, based on the observable traces 
generated by the system. In doing so, the 
detection of the failure needs be done within 
finite steps of observation after the occurrence 
of the failure. 
While not all systems allow eventual 
diagnosis of an occurred failure, some systems 
do. In this regard, the notion of diagnosability 
is defined [6] as follows: for a given system 
G  with the associated language L , i.e., the set 
of all event traces, if s  is a trace in L  
ending with a iF -type failure, and ν  is a 
sufficient long (at least in  events longer) 
trace obtained by extending s  in L , then 
every trace ω  in L  that is observation 
equivalent to ν , i.e., ( ) ( )M Mω ν= , should 
contain in it a iF -type failure. In other words, 
a system is called diagnosable, if all of the 
表 C012   第 5 頁，共 20 頁 
may correspond to a minimal T-invariant of 
the net structure [23]. Since places are 
associated to labels, we will consider 
structural objects called T-components, which 
are related to minimal T-invariants, as follows: 
Let x be a minimal T-invariant of G. The 
subnet generated by X X X• ∪ ∪ •  is a 
T-component, denoted as TC  of G.  
 
Example 2 Fig. 2 shows a Petri net model G 
where event 1f  is a failure, which is 
unobservable. All places are unobservable and 
transition associated labels are shown in the 
parentheses following transition names. In the 
model, there are only two minimal 
T-invariants {t2, t3, t4} and {t7, t8, t9, t10}, 
which generate two T-components {t2, p2, p3, 
t3, p4, t4, p5} and {p7, t7, p8, t8, p9, t9, p10, 
t10, p11} respectively. 
Fig. 2 A Petri Net model. 
From the above discussion, we obtain a 
sufficient condition for a system to be 
diagnosable as follows:  
 
Property 1 The system G modeled by a 
Petri net is diagnosable if there do not exist 
two T-components with the same observable 
labels such that unobservable labels mapped 
into nulls. 
Proof: If there are no two T-components 
with the same observable labels, then there are 
no two cycles in G with the same observable 
labels such that one cycle is reached from a 
failure event while the other is not reached 
from a failure event. 
                     Q.E.D. 
Since T-invariants can be solved efficiently 
using linear programming [4], Property 1 can 
be transformed into the following property, 
which shows our diagnosability-checking 
algorithm: 
 
Property 2 (diagnosability-checking 
algorithm) A system modeled by a Petri net G 
is diagnosable if the following linear 
programming problem (LPP) has no solution: 
1 2
1 2
1 2
1 2
1 2
:
max 0( )
0
, 0
( ( )) ( ( ))
T T
T T
LPP
Z X X
Subject to
A X A X
X X
X X
C X C Xξ ξ
= +
= =
≠
>
=
    (1) 
where TA is the transpose of the incidence 
matrix A , X1 and X2 are any two T-invariants, 
and 1( ( ))TC Xξ  and  2( ( ))TC Xξ  are the 
observable label mapping (linear function) of 
the T-components 1( )TC X  and 2( )TC X  
respectively. 
 
Example 3 In Fig.2, since all places are 
unobservable, from the only two 
T-components 1( )TC X = {t2, p2, p3, t3, p4, t4, 
p5}, 2( )TC X ={p7, t7, p8, t8, p9, t9, p10, t10, 
p11}, we obtain their observable 
mapping 1 2( ( )) { , , }, ( ( )) { , , , }T TC X C Xξ β γ δ ξ β γ δ χ= = . 
Thus, Property 2 holds, which means that the 
system is diagnosable. 
 
Definition 1 A systems G is called 
well-diagnosable if Property 2 holds. In other 
words, well-diagnosable nets can be checked 
with polynomial complexity.  
表 C012   第 7 頁，共 20 頁 
Hydride
MO
Water
From 
Vent Pipe
Gate Valve 
Set
Chemical Pump 
To Scrubber
Oil Mist 
Eliminator
Particulate
Pressure 
Sensor
Control 
PC
 
Fig. 3 Diagnosability Enhancement procedure. 
 
 
表 C012   第 9 頁，共 20 頁 
 Fig. 6 Typical MOVPE System and its sketch illustration. 
 
Fig. 7 The pumping and control system of the MOVPE. 
表 C012   第 11 頁，共 20 頁 
  
Fig. 9 The complete Petri net model for the pumping and control system in the MOVPE. 
表 C012   第 13 頁，共 20 頁 
Then, we try to add all available sensors to 
the system of Fig.9, and collect all observable 
sensor readings, as shown in Table 7.  
For the pair of T-components obtained 
above, adding the pressure sensor pS  will 
distinguish  them, as show in Fig. 11. 
Thus, pS  will be added to the 
diagnosability enhancement sensors set ( )D S . 
The new observable labels of the system after 
the pressure sensor pS  is added is shown in 
Fig. 12.  
 
 
Table 6. Available sensors  
 
No.  Failures Available Sensors Location 
1 
STUCK_CLOSE( 1f )
STUCK_OPEN( 2f ) 
Pressure ( pS ) reactor chamber 
2 
STUCK_CLOSE( 1f )
STUCK_OPEN( 2f ) 
Temperature( tS ) reactor chamber 
3 
STUCK_CLOSE( 1f )
STUCK_OPEN( 2f ) 
Concentrations( cS ) reactor chamber 
4 
STUCK_CLOSE( 1f )
STUCK_OPEN( 2f ) 
Flow( fS ) 
Output of the 
chemical pump 
 
Table 7 Observable sensor readings of Fig.9 
Transition Event  
Pressure 
sensor  
Temperature
sensor 
Concentrations 
sensor 
Flow 
sensor 
t1 OPEN_VALVE  P(H to H) T(H to H) C(H to H) F(L to H) 
t2 START_PUMP P(H to L) T(H to L) C(H to L) F(H to H)
t3 CLOSE_VALVE P(L to H) T(L to H) C(L to H) F(H to L) 
t4 STOP_PUMP P(H to H) T(H to H) C(H to H) F(L to L) 
t5 OPEN_VALVE P(H to H) T(H to H) C(H to H) F(L to L) 
t6 START_PUMP P(H to H) T(H to H) C(H to H) F(L to L) 
t7 CLOSE_VALVE P(H to H) T(H to H) C(H to H) F(L to L) 
t8 STOP_PUMP P(H to H) T(H to H) C(H to H) F(L to L) 
t9 OPEN_VALVE P(H to H) T(H to H) C(H to H) F(L to H) 
t10 START_PUMP P(H to L) T(H to L) C(H to L) F(H to H)
t11 CLOSE_VALVE P(L to H) T(L to H) C(L to H) F(H to H)
t12 STOP_PUMP P(H to H) T(H to H) C(H to H) F(H to L) 
 
 
           
表 C012   第 15 頁，共 20 頁 
SO SC
t11
t7
t3
SO PON
SO PON
VO PON
VC PON
SC    PON
SC   PON
t15
t16
t1
t5
t9
VC POFF
VO POFF
SO POFF
SO POFF
SC    POFF
SC   POFF
PON
SO
PON
VO
PON
SC
POFF
SO
POFF
VO
POFF
SC
PON
VC
PON
SO
PON
SC
POFF
VC
POFF
SO
POFF
SC
t17
t14
t18 t19
t10
t6
t2
t4
t8
t12
PON
SO
PON
SO
PON
SO
PON
SO
POFF
SO
POFF
SO
POFF
SO
POFF
SO
t13
SC    POFF
VC    POFF
SC    PON
VC    PON
SC    PON
VO    PON
SC    POFF
VO    POFF
t20
<OPEN_VALVE, P(H to H)>
<START_PUMP, P(H to L)>
<START_PUMP, P(H to H)>
<START_PUMP, P(H to L)>
<STOP_PUMP, P(H to H)>
<CLOSE_VALVE,P(L to H)>
STUCK_CLOSE(F1)STUCK_CLOSE(F1)
STUCK_CLOSE(F1) STUCK_CLOSE(F1)
STUCK_OPEN(F2)
STUCK_OPEN(F2) STUCK_OPEN(F2)
STUCK_OPEN(F2)
<OPEN_VALVE, P(H to H)>
<OPEN_VALVE, P(H to H)>
<CLOSE_VALVE,P(H to H)>
<CLOSE_VALVE,P(L to H)>
<STOP_PUMP, P(H to H)>
<STOP_PUMP, P(H to H)>
POFF
C3C2
C1 C4
PONVOVO
Fig. 12 The observable labels of the system after the pressure sensor is added. 
 
We check Property 2 again and obtain a new 
pair of T-components with the same 
observable label, as shown in Table 8. By 
applying the above procedure again, we add 
the flow sensor fS  to distinguish the 
T-components 1X  and 3X . The new labels 
of the two T-components after the pressure 
and flow sensors are added are shown in Fig. 
13.
Table 8. T-components that have the same observable labels after the pressure sensor is added. 
iX  Set of 
T-invariants iX  
Observable label  
( ( ))T iC Xξ  
1X  {t1,t2,t3,t4} 
<OPEN_VALVE,P(H to H) > 
<START_PUMP,P(H to L)> 
<CLOSE_VALVE,P(L to H)> 
<STOP_PUMP,P(H to H) > 
3X  {t9,t10,t11,t12} 
<OPEN_VALVE,P(H to H)> 
<START_PUMP,P(H to L) > 
<CLOSE_VALVE,P(L to H)> 
<STOP_PUMP,P(H to H)> 
 
表 C012   第 17 頁，共 20 頁 
 
Fig. 14 The observable labels of the system after pressure and flow sensors are added. 
 
Next, we check the well diagnosability 
property once more, and obtain that there does 
not exist any pair of T-components with the 
same observable label. Thus, after the sensors 
pS and fS  are added to the system, it will 
become well diagnosable. 
 
Finally, we get the diagnosability 
enhancement sensors set ( )D S , which has 
two sensors ,p fS S . Thus, we just need to add 
these two sensors to the system for production. 
We can construct the diagnosis database 
shown in Table 9, i.e., when we on-line 
monitor the operation of the pumping and 
control system of the MOVPE, if the No.1 
observable label of Table 9 is discovered, then 
we know that the STUCK_CLOSE fault event 
has happened. If the No 2 observable label is 
discovered, then we know the STUCK_OPEN 
fault event has happened.
表 C012   第 19 頁，共 20 頁 
Control Engineering Journal., Vol.12, No.5, 
pp.217-223, Oct. 2001. 
[6]P. Frank, “Fault diagnosis in dynamic 
systems using analytical and knowledge 
based redundancy – a survey and some 
new results,” Automatica, vol. 26, pp. 
459-474, 1990. 
[7]D. L. Hall, J. Llinas, “An introduction to 
multisensor data fusion,” Proceedings of 
the IEEE, vol. 85, no.1 pp.6-23, Jan. 1997. 
[8]W. Hamscher, “Modeling digital circuits 
for troubleshooting,” Artificial Intelligence, 
vol. 51, no. 1-3, pp. 223-271, 1991. 
[9]Yi-Sheng Huang, Ta-Hsiang Chung, 
Yuan-Lin Wen, “Design and 
Implementation of Emulators for a 
Real-World Automated Manufacturing 
Systems Using Scenario,” Material 
Science Forum, vol. 505-507, 
pp.1141-1146, 2006 
[10]Y.S. Huang, M.D. Jeng and S.L. Chung, 
“Design, Analysis, and Implementation of 
a Real-World Manufacturing Cell 
Controller Based on Petri nets,” 
International Journal of Computer 
Integrated Manufacturing, vol. 14, no. 3, 
pp. 304-318, Jan. 2001. 
[11]S. Jiang, R. Kumar and H. E. Garcia, 
“Optimal Sensor Selection for 
discrete-Event Systems with Partial 
Observation,” IEEE Trans. on  Automatic 
Control, Vol. 48, No.3, pp.369-381, 2003. 
[12]S. Jiang, Z. Huang, V. Chandra, and R. 
Kumar, “A Polynomial Algorithm for 
Testing Diagnosability of Discrete-Event 
Systems,” IEEE Trans. on Automatic 
Control, Vol.46, No.8, pp.1318, Aug. 
2001. 
[13]M. Katsumata, M. Kurihara, A. Ohuchi 
and Y. Sugasawa, “Serial Failure 
Diagnosis of Computer System by Petri 
Net,” Proceedings of the 34th SICE 
Annual Conference, pp.1291-1296, 1995. 
[14]N. Katsumata and T.L. Johnson, “Fault 
Detection and Diagnosis of Automated 
Manufacturing Systems,” Proceedings of 
the 27th Conference on Decision and 
Control, pp.2301-2306, Dec. 1988. 
[15]C. H. Kuo, H. P. Huang, M. D. Jeng and L. 
D. Jeng, “Separation Model Design of 
Manufacturing Systems Using Distributed 
Agent-Oriented Petri Net,” International 
Journal of Computer Integrated 
Manufacturing, vol. 18, no. 2-3, pp. 
146-157, Mar.-May 2005. 
[16]S. Lapp and G. Powers, “Computer aided 
synthesis of Fault trees,” IEEE Trans. 
Reliability Engineering, vol. 26, no. 1, pp. 
2-13, 1977. 
[17]F. Lin and W. M. Wonham, “On 
observability of discrete-event systems,” 
Information Science, vol. 44, no. 3, pp. 
173–198, 1988. 
[18]W. Lin, “Introduction to Metal-Organic 
Vapor Phase Epitaxy System and 
Technology,” Instruments Today, Vol.24, 
No.2, pp.13-24, Oct. 2002. 
[19]M. Locy, “The impact of 
e-diagnostics—One year later,” in Proc. 
2001 IEEE Int. Symp. Semiconductor 
Manufacturing, pp.435-438, Oct. 2001. 
[20]T. Murata, “Petri Nets: Properties, 
Analysis and Applications,” Proceedings 
of the IEEE, Vol.77, No.4, pp.541-580, 
Apr. 1989. 
[21]J.L. Peterson, Petri Net Theory and the 
Modeling of Systems, Prentice-Hall 
Englewood Cliffs, N.J., 1981. 
[22]A. Ramírez-Treviño, I. Rivera-Rangel, 
and E. Lopez-Mellado, “Observability of 
Discrete Event Systems Modeled by 
Interpreted Petri Nets,” IEEE Tran. on 
Robotics and Automation, Vol. 19, No.4, 
pp.557-565, Aug. 2003.  
[23]A. Ramírez-Treviño, I. Rivera-Rangel, 
and E. Lopez-Mellado, “Diagnosability of 
Discrete Event Systems. A Petri Net Based 
Approach,” Proc. of the 2004 IEEE Int. 
Con. on Robotics and Automation, 
pp.541-546, 2004. 
[24]M. Sampath, S. Lafortune, K. 
Sinnamohideen, and D. Teneketzis, 
“Diagnosability of Discrete-Event 
Systems,” IEEE Trans. on Automatic 
