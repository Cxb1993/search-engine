i 
目 錄 
1. 中文摘要 
 
2. 英文摘要 
 
3. 關鍵字 
 
4. 報告內容 
 
 
 
3 
在管線架構高階合成中利用多重時脈設計與運算架構轉換方式之 
功率最佳化方法與自動化工具開發 
 
 
 
研究目的 
 本計畫的目的在於研究高階合成時，利用多重時脈設計與多重電壓配置方式，以達到功率最佳化
的方法。我們已成功利用整數線性規劃方式解決此一問題，並可延伸至管線合成的架構上以達到同時
維持運算效能、縮小晶片面積、減少功率消耗的目的。除此之外，我們的研究成果也可以應用在 3D 積
體電路高階合成的問題上，用以得到 TSV 個數的最小化。研究成果已撰寫成論文並發表在 2011 
VLSI/CAD Symposium。 
 
研究方法 
 我們提出一個在高階合成階段的設計流程來完成本計畫的目標(圖一)。將 Data-flow-graph(DFG)
與 Resource unit library利用 C language 轉換為整數線性規劃的算式，其中 Resource unit library
包含了多重時脈與高低電壓的資訊，以便在後端 scheduling時可利用。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖一 高階合成設計流程圖 
 
 我們利用整數線性規劃的來進行多重時脈運算元的 scheduling(圖二) 。因為在做 scheduling
時，並不是每一個運算元原本都是緊鄰運行，我們利用各運算元前後多餘的 step空間，檢查是否有
可延長 Delay的運算元，將其利用低時脈運算元進行操作，使其 Delay延長，讓各個運算元之間的關
係更緊鄰，並達到減少 power的目的。由圖二可以發現，Mul_1與 Mul_7經過排程移動，前後可以空
出多餘的 step。如此一來，就可以將 Mul_1與 Mul_7利用低時脈操作來執行。 
 
 
5 
 唯一限制式：每一個運算元必須要被指定到一種 Resource操作。 
 
      � � vi,j,kRmaxk=1
step
j=1 = 1   , 𝑣𝑣𝑖𝑖  ∈ 𝑉𝑉   
 
 資源唯一限制式：由於會有多個可執行相同運算的 Resource，利用此限制式讓一個運算元只能
被指派至其中一種 Resource。 
 
      � � vi,j,kRmaxk=1
step
j=1 = 1    , 𝑣𝑣𝑖𝑖  ∈ 𝑉𝑉 , Oi ∈ FUk   
 
 關係限制式：針對具有相依輸出輸入關係的運算元，其先後順序不可顛倒，輸出之運算必須要再
輸入運算之前，並且一定需要在規定的 Control step之內完成。 
 
      Ei <  Sl    ,∀   Oi  → Ol  , where  Ei =  � � (j + ft(k) − 1) ∗ vi,j,kRmaxk
step
j=1    
                    Sl =    � � j ∗ vi,j,kRmaxk=1
step
j=1   
      Ei  ≤ step , ∀ i ∈  N  
 
 數量限制式：根據每一個 Control step來看，計算在此 Control step理的運算元所分配到的
Resource數量，不能超出限制的最大量! 
  
      � � � vi,j,kSi +ftk−1≥j
Rmax
k
N
Oi∈FU k   ≤   Maxk  , k ∈ Rmax, j ∈ step  
 
 
 
 
 
 
 
 
 
 
 
 
 
7 
研究後續衍生 
 在 2D High-Level Synthesis 完成後，我們同樣利用整數線性規劃的方式，來進行 3D High-Level 
Synthesis。我們利用 2D High-Level Synthesis 的結果，取得 resource lower bound，接著我們再
依照各個 benchmark的複雜度，給定不同的 layer number與 footprint area限制，即可利用整數線
性規劃來進行 3D High-Level Synthesis。如圖三所示，利用整數線性規劃的方式將左邊的 2D 
High-Level Synthesis的結果進行架構轉換，可以合成出如圖三右邊的 3D IC 架構，藉以達到將 2D 
scheduling結果轉為 3D IC layer assignment。 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖三 2D scheduling to 3D resource binding and layer assignment 
 
 在將架構由 2D 轉 3D後，我們可以再更進一步減少 3D IC 架構下的 TSV數目，由於 TSＶ在 3D
架構下，會對後端的 placement與 routing造成阻礙，所以我們另外提出一種方法以達到在 3D IC
架構下，進行 TSV 數目的最小化，以利於後端的 placement與 routing進行，此方法我們將以論文
的方式呈現說明。 
 
附錄 
本人本年度共有一篇國際會議論文發表，一篇國內會議論文發表，茲列表如下 
 
國際會議論文 
[1]  Wei-Kai Cheng and Yi-Chun Yen, "A Resource Binding Technique for TSV Number Minimization in 
High-Level Synthesis of 3D ICs", International Symposium on Integrated Circuits, 2011. (EI) 
 
國內會議論文 
[1]  Yi-Chun Yen and Wei-Kai Cheng, "A Resource Duplication Technique for TSV Number Minimization 
in High-Level Synthesis of 3D ICs", the 22nd VLSI Design/CAD Symposium, 2011. 
  
9 
 
Figure 1: Scheduled DFG of the HAL example. 
 We use Fig. 2 to illustrate our motivation, and compare 
the result of resource binding and layer assignment in terms of 
whether the resource duplication technique is applied or not. 
Fig. 2(a) shows the optimal result of resource binding and layer 
assignment when the number of resources used is the same as 
that of the scheduling result in Fig. 1. In this case, operations 
{O2, O6, O8} were bound to multiplier M1, operations {O1, O3, 
O7} were bound to multiplier M2, operations {O4, O5} were 
bound to subtracter S1, operations {O9, O10} were bound to 
Adder A1, and operation {O11} was bound to comparator C1. 
Because of footprint area constraint, a multiplier could be 
assigned to a layer together with at most one non-multiplier 
function unit. Therefore, M2 and S1 were assigned to Layer1, 
M1 and A1 were assigned to Layer2, and C1 was assigned to 
Layer3. There exists a TSV in the direction from M1 to M2 
because of data dependence between operations O2→O3 and O6→
O7 inter Layer1 and Layer2. Occurrence of this TSV was 
inevitable because operations O1 and O2 were scheduled to the 
same control step such that they must be bound to different 
multipliers, and there existed data dependence both between O1
→O3 and O2→O3. Another TSV exists in the direction from A1 to 
C1 because of data dependence between operations O10→O11 
inter Layer2 and Layer3. Although we can assign both A1 and 
C1 to Layer3 to eliminate the TSV between them, it will 
introduce another TSV in the direction from M1 to A1 because 
of data dependence between operations O8→O9 inter Layer2 and 
Layer3. Therefore, the minimal number of TSVs required is 2 
when the resources used were constrained to the lower bound 
of the scheduled result. 
     
           (a)                         (b) 
Figure 2: (a) Binding and layer assignment with no duplication 
of resources. 
(b) Binding and layer assignment with duplication of        
resources to further minimize the TSV number. 
However, the TSV between A1 and C1 in Fig. 2(a) could 
actually be eliminated without introducing another TSV. In the 
third layer of Fig. 2(a), there still exists area space could be 
utilized because that only the comparator C1 was assigned to it. 
If we use additional one adder as shown in Fig. 2(b), operation 
{O9} was bound to adder A2 and assigned to Layer2, operation 
{O10} was bound to adder A1 and assigned to Layer3, other 
resource binding and layer assignment were the same with that 
in Fig. 2(a). Because the data dependence between operations 
O8→O9 was intra Layer2, and the data dependence between 
operations O10→O11 was intra Layer3, the second TSV in Fig. 
2(a) was no longer necessary in Fig. 2(b), and the number of 
TSVs required could be further reduced to 1. In this case, we 
successfully reduce the number of TSVs without increasing 
either the footprint area or the layer number, and hence no 
extra cost was introduced. 
Therefore, if the use of resources was not constrained to the 
lower bound obtained from the high-level synthesis of two 
dimensional integrated circuits, there will be much more 
opportunities to further reduce the TSV number in the 
high-level synthesis of 3D IC architecture by adding resources 
for binding and layer assignment properly. In this paper, we 
will propose a method to select and add resources 
automatically in order to get the minimal TSV number in the 
resource binding and layer assignment of 3D ICs design. 
III. RESOURCE BINDING AND LAYER ASSIGNMENT 
In this section, we will propose an ILP methodology to select 
and add resources for simultaneous resource duplication, 
resource binding and layer assignment in high-level synthesis 
of 3D ICs. Given a scheduled DFG, constraints on the number 
of layers, the footprint area, and the upper bound of resources 
available, our object is to minimize the number of TSVs. 
Detailed notations and ILP formulations are described as 
below. 
A. Notations 
• N: An integer constant that denotes the number of operations. 
• TS: An integer constant that denotes the number of control 
steps. 
• vi,k  : A binary variable that denotes the resource binding of 
operation. If operation i is bound to resource k, vi,k = 1; 
otherwise, vi, k = 0; 
• kx : Denotes the resource x. 
• Rmax: An integer constant that denotes the total number of 
resources. 
• viak1k2: An integer variable that denotes the number of 
TSVs between the resources k1 and k2. 
• Dk1k2: A binary variable that denotes the communication 
relation of resources. If the output of resource k1 is the input 
of the resource k2, Dk1,k2 = 1; otherwise, Dk1,k2 = 0. 
• rk,l: A binary variable that denotes the layer assignment of 
resource. If the resource k is assigned to layer l, rk,l = 1; 
otherwise, rk,l = 0. 
• Ak: An integer constant that denotes the area of resource k. 
• Amax : An integer constant that denotes the footprint area. 
• Nlayer : An integer constant that denotes the number of layers. 
11 
performance of our approach. Table 1 lists the characteristics 
of the five benchmark circuits. The columns “Steps” and “Total 
Operations” give the number of control step and operations. 
The column “Operation Type” lists the number for each 
operation type in the DFG. The column “Resource Lower 
Bound” gives the least number of resources required for each 
type of operations from the scheduling result. And we suppose 
the area ratio of each operation type is (*, +, -, <, mux) = (12, 4, 
4, 4, 2) for all the benchmarks  in Table 1. 
Table 1: Characteristics of the benchmarks 
Benchmark Steps 
Total 
Operations 
Operation Type 
(*, +, -, <, mux) 
Resource 
Lower Bound 
(*,+,-,<.mux) 
HAL 4 11 {6,2,2,1,0} {2,1,1,1,0} 
FIR 7 13 {7,6,0,0,0} {2,1,0,0,0} 
BF 10 29 {11,12,6,0,0,} {2,2,1,0,0} 
AR 10 28 {16,12,0,0,0} {2,2,0,0,0} 
G2 10 24 {9,9,0,3,3} {2,2,0,1,1} 
 
Table 2 shows the experimental results of our resource 
duplication approach for high-level synthesis of 3D ICs. The 
column “Layer” gives the layer number constraint. The column 
“Footprint Area” gives the footprint area constraint. The “No 
Resource Duplication” column lists the optimal result of TSV 
number minimization when the allocation resources are the 
same with the resource lower bound in Table 1. To test the 
effect of resource duplication, addition one resource to the 
lower bound is allocated for each type of operation. The 
column “Resource Duplication” lists the number of TSVs and 
resources used after resource binding and layer assignment. 
Experimental results show that our approach can effectively 
reduce the TSV number for all the benchmarks. 
Table 2: Comparisons on the effect of resource duplication 
in term of the TSV number 
Benchmark Layer 
Footprint 
Area 
No Resource 
Duplication 
Resource 
Duplication 
Resources TSV 
Resources 
Clone 
TSV 
HAL 
3 16 {2,1,1,1,0} 2 {2,2,1,1,0} 1 
4 12 {2,1,1,1,0} 3 {2,2,1,1,0} 3 
BF 
2 20 {2,2,1,0,0} 3 {2,2,2,0,0} 2 
3 16 {2,2,1,0,0} 6 {2,3,2,0,0} 5 
AR 
3 16 {2,2,0,0,0} 5 {3,2,0,0,0} 3 
4 12 {2,2,0,0,0} 8 {2,3,0,0,0} 6 
G2 
3 24 {2,2,0,1,1} 4 {2,3,0,1,1} 3 
4 16 {2,2,0,1,1} 7 {2,3,0,1,1} 6 
 
V. CONCLUSIONS 
In this paper, we present a resource duplication approach to 
minimize the number of TSVs in high-level synthesis of 3D 
ICs. We use ILP to formally draw up this optimization problem 
under the constraints of footprint area and layer number. 
Different from previous researches to use the lower bound of 
resources for binding and layer assignment, our ILP 
formulations can automatically select and add the binding 
resources to further minimize the TSV number. Experimental 
results show that our approach is effectively indeed for this 3D 
ICs synthesis problem. 
REFERENCES 
[1] T.-Y. Chiang, S. J. Souri, C. O. Chui, and K. C. Saraswat, 
“Thermal Analysis of Heterogeneous 3-D Ics with 
Various Integration Scenarios”, IEEE International 
Electron Devices Meeting, pp. 681-684, 2001. 
[2] D. H. Kim, S. Mukhopadhyay, and S. K. Lim, 
“Through-Silicon-Via Aware Interconnect Prediction and 
Optimization for 3D Stacked Ics”, Proc. of ACM/IEEE 
International Workshop on System Level Interconnect 
Prediction, pp. 85-92, 2009. 
[3] M. Mukherjee and  R. Vemuri, “Simultaneous 
Scheduling, Binding and Layer Assignment for Synthesis 
of Vertically Integrated 3S Systems”, Proc. of IEEE/ACM 
International Conference on Computer Design, pp. 
222-227, 2004. 
[4] M. Mukherjee and  R. Vemuri, “On Physical-Aware 
Synthesis of Vertically Integrated 3D Systems, “ Proc. of 
International Conference on VLSI Design, pp. 647-652,  
2005. 
[5] V. Krishnan and S. Katkoori, “A 3D-Layout Aware 
Binding Algorithm for High-Level Synthesis of 
Three-Dimensional Integrated Circuits”, Proc. of IEEE 
International Symposium on Quality Electronic Design, 
pp. 885-892, 2007. 
[6] C.-H. Lee, T.-Y. Huang, C.-H. Cheng, and S.-H. Huang, 
“A Post-Processing Approach to Minimize TSV Number 
for High-Level Synthesis of 3D ICs”, Proc. of IEEE 
International Symposium on Computer, Communication, 
Control and Automation, pp. 434-437, 2010. 
[7] C.-H. Lee, S.-H. Huang, and C. H. Cheng, “High-Level 
Synthesis of 3D IC Designs for TSV Number 
Minimization”,  Proc. of Synthesis And System 
Integration of Mixed Information technologies, pp. 
260-265, 2010. 
[8] S. Das, A. Chandrakasan, and R. Reif, 
“Three-Dimensional Integrated Circuits: Performance, 
Design Methodology, and CAD Tools”, Proc. of IEEE 
Computer Society Annual Symposium on VLSI, pp. 
13-18, 2003. 
[9] J. A. Davis, R. Venkatesan, A. Kaloyeros, M. Beylansky, 
S. J. Souri et al., “Interconnect Limits on Gigascale 
Integration in the 21st Century”, Proc. of the IEEE, vol. 89, 
no. 3, pp. 305-324,  March 2001. 
[10] J. W. Joyner, R. Venkatesan, P. Zarkesh-Ha, J. A. Davis, 
and J. D. Meindl, “Impact of Three-Dimensional 
Architectures on Interconnects in Gigascale Integration”, 
IEEE Transactions on VLSI Systems, vol. 9, no. 6, pp. 
922-928, Dec. 2001. 
[11] B. Black, M. M. Annavaram, E. Brekelbaum, J. DeVale, 
L. Jiang et al., “Die Stacking (3D) Microarchitecture”, 
Proc. of International Symposium on Microarchitecture, 
pp. 469-479, 2006.
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                    日期：100年 6 月17
                                 
 日 
  
計畫編號 NSC 99－2218－E－033－007－ 
計畫名稱 在管線架構高階合成中利用多重時脈設計與運算架構轉換方式之功率
最佳化方法與自動化工具開發 
出國人員
姓名 
鄭維凱 
服務機構
及職稱 
中原大學資訊工程系助理教授 
會議時間 
100年 6月 5日至 
100年 6月 10日 
會議地點 美國聖地牙哥 
會議名稱 
(中文) 設計自動化研討會 / 計算機器學會大學研究成果展示會 
(英文) Design Automation Conference / ACM SIGDA University Booth 
發表論文
題目 
(中文) 三維積體電路之設計分割 
(英文) Design Partitioning for 3D IC 
  
Design Partitioning for 3D IC 
Hua-Hsin Yeh, Wen-Pin Tu, Shih-Hsu Huang, and Wei-Kai Cheng 
Department of Electronic Engineering, Chung Yuan Christian University, Chung Li, Taiwan, R.O.C. 
 
ABSTRACT 
Three Dimensional Integrated Circuits (3D ICs) are designed in order to have better performance and 
yield. Through-Silicon-Vias (TSVs) are used to connect a signal that crosses adjacent layers. In this 
demonstration, we present a tool to partition an integrated circuit with the objective to minimize both the 
number of TSV and chip area. Experimental results show that our program can partition a circuit with small 
number of TSVs in a short time. For the case of the largest test circuit with 85013 cells, after partitioning 
into 5 layers, the number of TSVs is only 142 and the average percentage of area overhead is only 0.1%. 
Therefore, our tool does work well in practice. Besides, it should be mentioned that, our approach has been 
evaluated in the 2009 Taiwan IC/CAD contest (which is held by Ministry of Education, Taiwan). In the 
evaluation report of IC/CAD contest, our program receives the highest score among all the teams (note that 
the score is evaluated based on the combination of the number of TSVs, the chip area, the run time, and the 
memory usage).  
The introduction to our tool can be found through the video 
link: 
PROBLEM FORMULATION 
http://www.youtube.com/watch?v=e9Vr_JqJ9EM 
The problem of design partitioning for 3D IC is described as follows. We partition a given circuit into N 
sub-circuits that are going to be placed in N different layers. We should add TSVs to connect signals across 
different layers. For instance, if there exists an interconnect from layer 3 to layer 1 as shown in Figure 1, 
then two TSVs are added. In this paper, we adopt the assumptions of [6] and there exists three types of TSVs 
described below. 
1. TSV_CELL: it is used to connect signal nets between two internal neighboring layers. 
2. TSV_IO: it is used to connect the input/output ports to the package pins. The diameter of a TSV_IO is 
much larger than that of a TSV_CELL. Note that only the first layer (i.e., layer 1) contains the TSV_IO 
that can connect to the external package pins. 
3. TSV_LAND: in general, the lower layer of a connection needs a landing pad for contacting each TSV of 
the upper layer and the size of the landing pad must be larger than TSV_CELL for alignment by at least 2 
or 3 μm. 
Substrate
Heat Sink
Layer 1
Layer 2
Layer 3
Bump
TSV_IO
Device Layer
Metal Layer
Interlayer 
Dielectric
TSV_LAND
TSV_CELL
  
國科會補助計畫衍生研發成果推廣資料表
日期:2011/08/28
國科會補助計畫
計畫名稱: 在管線架構高階合成中利用多重時脈設計與運算架構轉換方式之功率最佳化
方法與自動化工具開發
計畫主持人: 鄭維凱
計畫編號: 99-2218-E-033-007- 學門領域: 積體電路及系統設計
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
參與計畫之碩士生參加教育部主辦之大專校院積體電路電腦輔助設計(CAD)軟
體製作競賽獲得決賽入圍 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
