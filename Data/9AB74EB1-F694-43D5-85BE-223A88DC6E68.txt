 一、研究計畫前言 
1.1  數位助聽器的原理及設計要點 
現今助聽器之發展幾乎已經全面數位化[3][10]，而數位化助聽器的處理核心多半是
以客製化晶片(ASIC)為主[5][9][13][14]；客製化晶片雖然有體積較小和良好的耗能表現，
但在信號處理應用的彈性上相對受限，以致於無法配合環境或個人聽覺狀況改變所產生的
動態需求。近年來通用性的 DSP 晶片發展迅速[16][22][26]，不僅尺寸小、運算更快，同
樣具備低電壓、低耗能的特色，並有更高的彈性可以在短時間內進行各種演算法開發，可
針對不同的補償策略進行演算法程式的撰寫，DSP 晶片廠商通常並提供相當充分完善的
應用資源以及開發工具，似乎可以符合數位助聽器的信號處理需求，成為下一代數位助聽
器之信號處理核心[4][6][17]。 
1.2 計劃研究動機：以 DSP 建立助聽器模擬體驗平台 
聽力損失的患者通常在醫院測量完純音聽力檢測，經由醫師評估後確定需要使用助
聽器來輔助時，再經由聽力師的輔助來進行助聽器的選配。助聽器的選配需要進行各種參
數之調整，才能獲致良好的聽力補償效果。但是現今助聽器的參數極為繁多，通常並沒有
開放給使用者進行調整，所以一般使用者並無法預知所選配助聽器是否真的適合自己使
用，加上若有不當的參數設定時，配戴者也無法馬上自行調整適合自己的參數，這樣的結
果往往容易造成使用者不滿意助聽器之選配，進而放棄助聽器所可能帶來之補償效益。 
    因此本實驗室針對助聽器補償策略，初步以電腦平台開發相關之演算法，透過個人電
腦使用 Labview 7.1 搭配 NI PXI-1031 在聽力室架設起助聽器模擬體驗平台，可以提供使
用者在佩戴助聽器之前，預先體驗助聽器可能之處理效益，同時可以調整不同的助聽器參
數，以選擇個人化之最佳參數組合。 
但是這樣一套在實驗室裡的助聽器模擬體驗平台並無完全重建配戴者所可能面臨之
真實生活情境，為了可以更進一步了解我們所開發的補償策略之適用性，我們需要設法讓
整個體驗平台功能可以移植到日常生活的環境下執行，因此我們擬透過 DSP 技術來開發
一個平台[8][19][20]，讓整個補償策略可以在真實的環境中供給使用者進行體驗，而能到
達到最貼近真實助聽器補償的效果，並擴大整個原始助聽器補償策略體驗平台的應用性。 
 
1.3  研究目的：驗證補償策略執行所需，以歸納助聽器處理晶片開發之參考架構 
近年來通用性 DSP 晶片發展迅速，不僅在計算效能與開發效能上保持原有之優勢
外，在耗能方面也大幅降低，具有取代 ASIC 作為助聽器處理核心的潛力。 
本計劃將使用 Texas Instrument TMS320C6713 DSK[16]初步建立一個助聽器信號處
理模擬平台，藉著相關演算法的改良，將以電腦開發的補償策略軟體移植到 DSP 硬體上
面執行，以探討其所需之訊號處理架構與設計，以及在硬體效能受限下所需要的取捨準
則。透過本計劃將可評估助聽器補償策略利用通用晶片或 DSP 為模擬平台開發之可行
性，可行性評估將著重在實踐補償策略功能之執行的即時性輸出要求，以及在整體系統的
運算量表現；未來在設計助聽器用之 DSP 時將可以透過此可行性評估所獲得的數據，進
行晶片最佳化之參數設定值，以提高整體信號補償策略設計與系統移植的效率。 
 2
 須盡快啟動壓縮處理，將增益降下來，使輸出音量的增加不至於太大。依照 ANSI 標準
設定，當聲音從 55 dB SPL 變為 90 dB SPL 時，壓縮進攻時間設定為當輸出音量降低趨近
至最終穩定音量之上 3 dB 音量的時間。相對的，壓縮釋放時間就是，當聲音由 90 dB SPL
降為 55 dB SPL 時，為了避免遮蔽後面小聲的聲音，助聽器會將增益加大，當輸出音量放
大趨近至最終穩定音量下 4 dB 音量之時間。進攻時間與釋放時間之定義顯示如圖 2.3 一
般[1][18]。 
 
圖 2.3 壓縮進攻時間及釋放時間[18] 
 
2.2 助聽器訊號處理演算法在 DSP 平台的實現 
2003 年 Roger D. Chamberlian 等人曾利用 TI DHP-100 （Texas Instrument）平台，
建構出助聽器的平台，其主要目的希望能夠取代過去傳統的客製化 IC 設計方法，透過時
間與能量的結果分析來提供相關研究的經驗[15]。該平台主要示意圖如圖 2.4。 
 
圖 2.4 Texas Instrument DHP-100 開發平台[15] 
DHP-100 開發平台主要由兩個麥克風將聲音輸入，透過 A/D 轉換，在核心 DSP 中運
算，之後經過 D/A 轉換，將放大後之訊號從兩個喇叭輸出。DSP 核心處理器是採用 Texas 
Instrument C54xx 系列高效能、定點運算，具有高度的邏輯運算彈性，可供程式設計人員
進行各種演算法之開之開發。 
DHP-100 開發平台所完成之多頻道助聽器信號處理流程如圖 2.5，輸入的語音信號以
16KHz 取樣，透過降取樣的低通濾波器、等化器，再經過頻寬為 1 octave 之帶通濾波器進
行分頻，後端則接上非線性放大器，最後在經過帶通濾波器將各頻道的輸出信號結合輸
出；這是個很典型的多通道信號處理流程。在非線性放大器的部份，其基本原理如圖 2.6，
其對將入聲壓信號的處理，不像圖中虛線所示之傳統線性放大，而是設定ㄧ個壓縮閾值
(compression threshold)，當輸入的聲壓未超過這個壓縮閾值，聲壓便以 1:1 放大任其通過；
 4
 0
5
10
15
20
25
30
35
Eq
-C
h5
Eq
-C
h4
Eq
-C
h3
BP
F1
-C
h5
BP
F2
-C
h5
BP
F1
-C
h4
BP
F2
-C
h4
BP
F1
-C
h3
BP
F2
-C
h3
BP
F1
-C
h2
BP
F2
-C
h2
BP
F1
-C
h1
BP
F2
-C
h1
NL
A-
Ch
5
NL
A-
Ch
4
NL
A-
Ch
3
NL
A-
Ch
2
NL
A-
Ch
1
LP
F-C
h5
/4
LP
F-C
h4
/3
LP
F-C
h3
/2
LP
F-C
h2
/1
LP
F-C
h4
/5
LP
F-C
h3
/4
LP
F-C
h2
/3
LP
F-C
h1
/2
Theoretical Measured
 
圖 2.7 運算時間的分析[15] 
 2.3 華語助聽器補償策略 
 
由於現今大部分助聽器補償策略是針對英語系語言所設計的，並不完全適於華語相
關之處理；2005 年本實驗室參考了國外常採用的補償策略，開發出華語專用之助聽器補
償策略（命名簡稱為 HSE 補償策略）[25]；該研究的目的是為了使華語助聽器配戴者能達
到最佳的語音理解度。知名之非線性補償策略 NAL-NL1 即是以最佳語音理解度為目的，
其設計的根本理論為『語音辨識度指標』(speech intelligibility index SII); 利用 SII 的設計
觀念，可以試圖計算出得到最高語音辨識度指標的助聽器增益值[2]。 
在 ANSI S3.5 規範中，SII 輸入參數有環境語音音量、噪音音量、各頻帶語音重要度、
助聽器增益、聽力損失程度，輸出則是使用者在如此環境下可以得到的語音辨識度指標。
參數的輸入用以模擬受測者所可能處在之環境(語音音量、噪音音量、各頻帶語音重要度、
聽力損失程度)，各參數若涉及頻率函數，是以 1/3 octave 頻率區隔輸入。每一頻率上助聽
器的增益可以由電腦自由窮舉，並計算所有窮舉組合下受測者所有可能的語音理解度指
標，以尋找最大語音理解度指標，在獲得最大語音理解度指標其助聽器增益將被建議為理
想之增益值。 
本研究室之前所開發的助聽器模擬體驗平台，其補償策略是使用 LabVIEW 7.0 
（National Instrument）加以設計，搭配 LabVIEW Sound and vibration toolkit，以及 PXI-4461
數位類比轉換輸出擷取卡，在標準聽力室內建構系統，以提供使用者進行華語語音理解度
實驗與測試。其系統架構簡示圖如圖 2.8 
 
 
 
 
 
 
輸入受測 
者資料 
利用ANSI規範
SII，搜尋最佳
訊號處理(分頻 
壓縮、結合) 
播音
測試 
 
 6
     先前我們根據華語補償策略所建置之助聽器模擬體驗平台，受限於其個人電腦之硬體
應用，目前只能在實驗室內進行助聽器參數選擇與體驗的各種實驗，與助聽器在真實世界
中所必須面臨各種環境背景的聲音有所不同；以軟體無法將環境背景影響之所有狀況全部
模擬出來。另外此平台是用預錄好的中文字詞來，加上預先處理再播放的方式，讓使用者
聆聽模擬助聽器處理過後的聲音，以致無法呈現系統即時處理訊號之特性；因此本研究擬
仿效 DHP-100 平台，建置一套以真實 DSP 為核心之助聽器模擬平台，以便在仿助聽器狀
態下，評估我們所設計之華語助聽器補償策略可否具體實踐。我們所使用的 TMS320C6713 
DSK 有更快的浮點運算 DSP 核心處理器。相較於 DHP-100 平台所採用的系統架構，我們
所採用之華語補償策略取樣頻率更高、頻帶切割更精細、壓縮的方式也更為複雜，其目的
是希望能夠達到最佳的助聽器補償效果。但這樣大幅提高訊號處理之複雜度下，演算軟體
馬上遭遇到無法即時處理語音輸出的問題。在有限的硬體資源下，我們必須要能夠改善此
類的問題，使 DSP 助聽器模擬體驗平台能夠在真實生活中執行，成功地達到助聽器補償
的效能，並且即時的將聲音輸出，以便擴大我們所設計之助聽器體驗平台的功用，讓華語
補償策略的相關研究能夠更趨完備。 
 
 8
 針對電腦平台決定需要改良的核心演算
確定 DSP 平台保留功能 
改寫原始補償策略演算法 
在 DSP 上面可以執行 
確認 DSP 執行功能正確性 
驗証 DSP 各模組 
1.切割頻帶 2.補償增益 3.語音壓縮 
語音即時輸出 
輸出信號不失真 
各模組運算量計算 
        運算時間的分析 
建立補償策略實現在硬體 
之可行性評估依據 
 
圖 3.1 研究流程圖 
 
 3.1.1 DSP 平台功能 
受限於軟硬體之資源，我們在 DSP 模擬體驗平台上所呈現的功能，相較於電腦模擬
體驗平台有相當幅度之縮減；例如電腦平台上之濾波器可以設計到 1024 階，但 DSP 平台
上面就無法做這樣高運算量的設計。所以實驗流程第一件事情就是必須先確定在 DSP 平
台上面要保留電腦模擬體驗平台哪些功能，以及這些功能在轉移到 DSP 之後有沒有哪些
 10
 5 356~449 400 14 2810~3540 3150 
6 445~561 500 15 3560~4490 4000 
7 561~707 630 16 4450~5610 5000 
8 713~898 800 17 5610~7070 6300 
9 891~1120 1000 18 7130~8980 8000 
 
表 3.1 1/3 octave 頻寬與中心頻率 
但是在DSP平台的設計下，考量其取樣頻率、各頻帶頻寬、濾波器階數、DSP運算量
等條件，發現在取樣頻率 32KHz時，低頻且頻寬較小的頻帶中，無法使用較低的濾波器
階數來達到我們所需要的濾波器頻率響應。根據FIR濾波器理論若N代表FIR濾波器階數，
k代表所使用視窗 (window)的常數，Hamming window(k=4)，ω1、ω2代表自然頻率，則。 ( 12/2 )ωωπ −⋅≥ kN                                    (3.1) 
從(3.1)得知，濾波器的階數與頻寬成反比；如果再加上取樣頻率的影響，取樣頻率越高，
頻寬以自然頻率表示會更小。所以在本研究中 18 個頻帶中低頻且頻寬小的部份，若取樣
頻率高，使用 FIR 帶通濾波器來進行分頻，則濾波器的階數必須要非常高。經過 MATLAB
軟體模擬頻帶 1，在取樣頻率 32000Hz 時，用 Equiripple FIR 帶通濾波器設計帶通 143Hz
到 180Hz，截止頻帶 100Hz 與及 200Hz 的濾波器，其頻率響應如圖 3.3。 
 
 
0.2 0.4 0.6 0.8 1 1.2
-40
-35
-30
-25
-20
-15
-10
-5
0
Frequency (kHz)
M
ag
ni
tu
de
 (d
B)
Magnitude Response (dB)
圖 3.3.MATLAB 模擬 143Hz~180Hz FIR 帶通濾波器頻率響應圖 
圖 3.3.MATLAB 模擬 143Hz~180Hz FIR 帶通濾波器頻率響應圖 
經過模擬顯示，這樣的濾波器需要 2029 階才能達到設計的需求。很明顯在終將會 DSP 佔
去大量的運算量，不符合本研究的需求。 
因此在節省運算量的考量下，我們改用無線脈衝響應(Infinite Impulse Response，IIR)
來建構濾波器，再加上希望通帶(passband)能夠維持水平的頻率響應，因此選擇利用 6 階
 12
  
圖 3.6 各頻帶補償增益(一) 
 
圖 3.7 各頻帶補償增益(二) 
 
3.1.4 語音壓縮模組:  
壓縮模組程式一開始需要進行初始化的程序。在初始化程序中要給予壓縮現時增益
(current gain)的初始值；隨後模組程式會部段計算一個區段內語音所含的能量，本研究採
用的音框(frame)大小為 320 個取樣點點，所以在初始化累積未達 320 點之前，系統之現時
增益會保持在初始化的設定，其增益值為 1.0。等到累積到 320 點之後，模組程式會開始
進入壓縮子程式，這時才開始以均方根值計算整個音框的能量大小，音框能量大小會與壓
縮曲線中兩個壓縮閾值做比較，來決定壓縮比率為多少。藉由壓縮比率可以求得壓縮之目
標增益(target gain)。由壓縮目標增益與現時增益之間的大小關係，可算出對現時增益的修
正，再將修正過後的現時增益處理輸入的信號，以獲得適當之輸出。如圖 3.8。 
 14
 1 320 321 
frame1 frame2 
1 320 321 
frame1 
1 2 320 321 
frame2 
 
圖 3.9 兩種音框設計示意圖 
 
    當 buffer 內已經到達 320 點之後，開始進入壓縮副程式，也就是壓縮核心的部分。如
圖 3.10 所示。th1、th2 分別代表 compression threshold1、compression threshold2，cg 代表
current gain，tg 代表 target gain，at 代表 attack time，rt 代表 release time。 
 
 16
 點時，每一取樣點進入更換時，程式計算 buffer 內累積的平方和時，只需減去最後一點的
平方值，再加上新進的平方值就完成計算整個 buffer 累積的平方和的計算，不需要每次都
重新計算 buffer 內所有點的平方和，進而計算其均方根植，這種設計可大量降低運算量與
運算時間。 
    計算完音框內均方根值之後，因壓縮副程式中均方根值是以所謂的 Q15 格式代表其
值，需經過正規化計算得到其聲壓(SPL)值，其能跟壓縮閾值(th1、th2)比較，再依照所設
計的壓縮比率(cr1、cr2)，利用數學式算出目標增益(tg)；之後進行現時增益(cg)與目標增
益的比較，現時增益的預設值等於 1，每一個點輸出之後，會產生一個新的現時增益，用
來當作下一個點進到壓縮程式的現時增益輸入，再與目標增益比較來進行壓縮增益之修
正。當現時增益較目標增益大時，代表聲音過大，需要進行壓縮增益降低之修正，此時須
依設定之攻時間(at)之內，在之後幾個音框內，將現時增益以非線性的方式減少到目標增
益；反之，則是聲音過小需要進行壓縮增益提升之修正，修正必須在釋放時間內完成，讓
現時增益增加到目標增益。決定好現時增益之後，便將現時增益與輸入的取樣點，也就是
buffer 中最新的那一點，兩者做相乘，最後輸出。 
在電腦模擬體驗平台之壓縮程式中，不管是輸入值、壓縮閾值等，基本上是以聲壓
dB (SPL) 為單位來進行壓縮，使得使用介面可以很方便操作，並且直覺地了解輸入多少
聲壓的聲音，經過壓縮之後，會輸出多少音壓的聲音。但在 DSP 處理程式上，同樣也可
以將 Q15 格式的值透過聲音輸入的正規化，轉換成聲壓的格式進行同樣的壓縮邏輯，最
後再從聲壓轉換回 Q15 格式再予輸出。這樣的設計方式中，在 DSP 的運算效能展現上表
現非常差，尤其是同樣的格式要多做一次轉換，且還需要在DSP程式中用到 log()與 power()
兩個數學函數；對 DSP 的運算量而言，這兩種函數演算將佔相當大比例的運算需求，加
上原本壓縮程式之其他數學函數如 sqrt()等，想要達到多頻道壓縮即時處理的需求，是相
當困難的。 
所以為了減少過多與不必要的運算，我們嘗試利用兩個方法來解決，一個方法是用
泰勒展開式來近似數學函數，簡單的加減乘除數學運算可以簡化繁複的數學函數，如 
( ) ( ) .................
!3
10ln
!2
10ln10ln110
32
++++= xxxx             (3.2) 
     ................1
3
11
2
11ln
32
+⎟⎠
⎞⎜⎝
⎛ −+⎟⎠
⎞⎜⎝
⎛ −+⎟⎠
⎞⎜⎝
⎛ −=
x
x
x
x
x
xx              (3.3) 
 泰勒展開式固然可以簡化許多數學函數，只要精確度的誤差在我們容忍的範圍內，
對於我們減少運算量的期待可以有部分滿足；但從(3.2)可以看到有些數學函數的泰勒展開
式卻需要另外一個數學函數來表示，這樣反而又更複雜，需要更多的運算量。 
第二個能減少運算量的解決方法則是使用查表的方式，我們先將壓縮程式所有的單
位都統一為 Q15 格式，不作轉換聲壓的處理；但事先計算好各 Q15 格式值的相對聲壓值，
DSP 直接以其 Q15 格式計算均方根值，再用查表的方式，查出其對應聲壓均方根值所對
應之壓縮值，以該值處理輸入之 Q15 格式值，壓縮後以 Q15 格式的值直接輸出，得到聲
壓之目標增益。 
經過次番轉換，我們可以發覺，原始以 SPL 為單位的演算法設計如(3.4)，而改良後之
演算法設計如(3.5)，是以輸入值之 rms 進行壓縮。兩者關係如圖 3.11。 
21.............................1)1(1 thSPLth
SPL
crthSPLthtg <<×−+=             (3.4) 
21...............................
10
1
1
log
1 VctrmsVct
rms
Vtg
cr
Vct
rms
th <<×=
⎥⎦
⎤⎢⎣
⎡ ×⎟⎠
⎞⎜⎝
⎛
            (3.5) 
 18
 3.2  助聽器補償 DSP 硬體實現平台 
3.2.1 DSP 的選用考量 
目前市面上已有不少通用型 DSP 晶片，如德州儀器公司 (Texas Instruments)的
TMSC5x、C6x 系列，Motorola 56xxx 系列，以及 Analog Device 等類似晶片系統。本研究
選用德州儀器生產 TMS320C6x 系列中的 6713DSP 來進行效能評估，主要原因如下：  
1. TMS320C6713 為同等級產品中運算速度較快的 DSP 晶片，最快每秒可運算達
1800MIPS (Million Instructions Per Second )，每個時脈週期只需 4.4ns。 
2.  TI 晶片系統提供功能強大的開發軟體，Code Composer Studio、RIDE、還有最新
LabVIEW 也有針對 6713 開發的 DSP module 圖控軟體，可以透過 PC 的介面去
監控 DSP 的運作情況。也就是除了組合語言、以及 C 語言之外，另外有更便於
撰寫程式的編譯器。 
3.  DSP 市場佔有率最高。價格合理，普遍被產業界所使用，因此研究評估的成果
更具備其應用性 
4 . 該系列持續有速度更快、效能更佳的產品推出，因此在未來擴大的研究可以在晶
片升級之後持續進行 
    
3.2.2 TMS320C6713 DSP 處理器的特色介紹 
TMS320C6713 DSP 晶片為德州儀器新一代 DSP 處理器，主要提供了能簡易支援音
訊應用的 I/O 界面，可輕鬆連接至典型音訊系統常見的匯流排標準，給需要浮點計算精準
度和動態範圍的高效能訊號處理應用，典型的音訊應用包括高速編碼、多通道廣播編碼、
數位混音和高品質音效產生，以及包括半導體製造設備、醫療或工業應用[22]。 
此 DSP 的 CPU 架構採用先進的 32 位元超長指令(Very Long Instruction Word, VLIW)
設計，具有 8 個獨立數學/邏輯單元(Arithmetic and Logic Unit，ALU)，兩個 ALU(Fixed 
point)，兩個 ALU(Floating-and Fixed-point)、兩個乘法器(Floating-and Fixed-point)。還有
其他相關特色如表 3.3 
 
Clock frequency 225MHz 
Instruction cycle time 4.4ns 
MIPS/MFLOPS 1800/1350 
External Memory Interface 32 bits 
MCBSP 2 
Function Units 8 
IO Supply 3.3 Volts 
Core supply 1.2 Volts 
表 3.3 TMS320C6713 特性表 
   3.2.3 TMS320C6713 DSK 發展板介紹[22] 
Texas Instrument TMS320C6713 DSK 是一款具有兩組輸入、輸出，包括麥克風輸入、
Line In、耳機輸出、Line Out。如圖 3.12、3.13 所示。DSK 並搭配 24-bit 立體聲的 AIC23 
Codec， 並且具有 8MB 的 SDRAM 與 512K 的 FLASH，可搭配發展版上標準的嵌入式
JTAG，透過 USB 燒入已編輯的程式碼，讓 DSK 可脫離 PC 獨立操作。 
 20
  
圖 3.14  AIC23Codec 與 McBSPs 訊號傳送及控制示意圖 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 22
 18 個濾波器匯總起來的頻率響應模擬結果如圖 4.2，匯總起來的結果就近似一個帶
通濾波器，截止頻率分別為 143Hz、8980Hz，從 143Hz 到 8980Hz 為一平坦的通帶。由於
我們使用 6 階的 Butterworth IIR 帶通濾波器，在通帶以外的頻率都衰減的很迅速，而且每
個頻帶在-3dB 截止頻率上面，都只有在截止頻率開始重疊，通帶並沒有重疊，所以可以
保持每個濾波器的通帶不會受到其他濾波器的影響，呈現各頻帶平坦通帶匯總的結果。 
 
圖 4.2  18 個頻帶匯總起來的頻率響應模擬圖 
圖 4.3 為 DSP 實際輸入 1.8Vpp 的白雜訊信號，利用示波器快速傅立葉轉換(FFT)功
能，可以觀察出輸出信號的頻譜響應;因為考量到輸入輸出皆為雜訊信號，會上下震盪呈
現不穩定的波形，因此為了改善波形會出現突波的問題，在這邊的輸出結果為同個輸出信
號取六次作平均的波形。比較圖 4.2 與圖 4.3，18 個濾波器匯總的模擬結果與 DSP 實際輸
出結果，DSP 實際輸出的頻譜同樣也是呈現一個近似帶通濾波器，截止頻率在 143Hz 與
9000Hz，143Hz 到 9000Hz 中間為通帶。在通帶中，許多頻率無法維持如模擬結果般非常
平坦，有可能是因為所取平均的樣本不夠多，另外就是在示波器做快速傅立葉轉換的點數
並不多，所以跟模擬結果有些差異，但功能大致上是相符合的。 
 
圖 4.3  DSP 輸出 18 個頻帶匯總之頻率響應圖 
 4.1.2 補償增益模組 
對於補償增益模組的驗證，我們以兩個單字詞語音”促ㄘㄨ "ˋ 與 ”詐ㄓㄚ ” ˋ 為輸入
進行測試。在電腦模擬平台上，我們先載入ㄧ個如圖 4.4 右圖所示之高頻聽力損失的聽力
圖，經過補償策略計算得到各頻帶的補償增益。以普通正規音量的補償曲線可以知道，此
 24
  
圖 4.6  ”促 ”之輸入信號原始快速傅立葉頻譜分析(FFT) 
 
 
圖 4.7  ”促 ” 經過補償增益放大信號之快速傅立葉頻譜分析(FFT) 
 
 
 
 
 26
  
圖 4.10  ”詐 ” 經過補償增益放大信號之快速傅立葉頻譜分析(FFT) 
   
圖 4.5～4.10 是補償增益模組功能驗證之結果；驗證所挑選的輸入語音字詞”促ㄘㄨ
”ˋ 與”詐ㄓㄚ "ˋ 都是含有清楚之聲母子音與韻母母音，從時間的波形可以很容易區分出
子音與母音，見圖 4.5 與圖 4.8 所示。 
”促ㄘㄨ ”ˋ 與”詐ㄓㄚ "ˋ 的聲母是屬於塞擦音， 從它們的短時間傅立葉轉換頻譜與
快速傅立葉轉換頻譜可以看出來，在未經過補償增益的信號處理前，其聲母也就是子音的
能量比較小，而且都屬於比較高頻的部份；相反的，其原始兩個語音之韻母，也就是母音
部份都有比較大的能量。經過如圖 4.4 的補償增益之後，兩個語音低頻的能量都沒有很明
顯的增加，但高頻的部份很清楚地被放大許多，尤其是在 3KHz 到 7KHz 間，是整個字詞
能量最大的部份，8KHz 之後就完全沒有增益；這與我們對補償增益模組所設之功能完全
符合，可以充分驗證補償增益功能是正確的。 
4.1.3 語音壓縮模組 
語音壓縮模組設定參數較多，我們先從進攻時間與釋放時間先驗證起。根據 ANSI 
S3.22-2003 的定義，若以聲音從 55dB 上升到 90dB 測試壓縮，壓縮模組之聲壓輸出變化
從最高點到最終穩定聲壓＋3dB 的時間定義為進攻時間；反之當聲音從 90dB 下降到
55dB，聲壓變化從最低點到最終穩定聲壓下 4dB 的時間稱為是放時間。在電腦模擬體驗
平台中，我們設定進攻時間為 10ms，釋放時間為 100ms，這也是市面上ㄧ般助聽器所設
計的預設值。由圖 4.11 可以發現，按照 ANSI 的定義，信號從 55dB 上升到 90dB，再從
90dB 下降到 55dB，實際的進攻時間只需要 9.12ms，釋放時間只需要 72.55ms，也就是說
在電腦模擬體驗平台上面，語音壓縮模組能分別在設定的時間內，完成將信號的音壓(SPL)
壓縮到設定的值，所以是符合我們的需求。 
 28
 帶。其他壓縮模組的參數如表 4.1。 
三通道壓縮參數 : 交越頻率 500Hz、2000Hz 
 壓縮比率 1 
(cr1) 
壓縮比率 2 
(cr2) 
壓縮閾值 1 
(th1) 
壓縮閾值 2 
(th2) 
進攻時間
(at) 
釋放時間
(rt) 
通道 1 0.3333 0.1 50dB 90dB 10ms 100ms 
通道 2 0.3333 0.1 50dB 90dB 10ms 100ms 
通道 3 0.3333 0.1 50dB 90dB 10ms 100ms 
表 4.1 壓縮程式各項參數設定值 
三個頻道的壓縮比率、壓縮閾值、進攻時間與釋放時間的參數設定都相同，由圖 4.14
到 4.17 可以看出放大過後的語音經過壓縮後，可將其整體的訊號能量都壓縮下來，顯示
語音壓縮模組能依相關設定正確執行壓縮訊號之功能。 
 
圖 4.14 ”促 ” 輸入波形、補償輸出波形，以及其短時間傅立葉轉換(STFT) 
 
 30
  
圖 4.17 “ 詐 ”壓縮輸出之快速傅立葉頻譜分析(FFT) 
 
接著我們更改三個通道的壓縮比率，如表 4.2，重新將補償過後的語音訊號”促 ”與
“詐”進行壓縮，壓縮模組的頻道參數設定為三，也就是將十八個濾波器輸出平均分成三個
頻道進行壓縮，每個頻道都包含六個頻帶。 
三通道壓縮參數 : 交越頻率 500Hz、2000Hz 
 壓縮比率 1 
(cr1) 
壓縮比率 2 
(cr2) 
壓縮閾值 1 
(th1) 
壓縮閾值 2 
(th2) 
進攻時間
(at) 
釋放時間
(rt) 
通道 1 1 1 50dB 90dB 10ms 100ms 
通道 2 0.5 0.5 50dB 90dB 10ms 100ms 
通道 3 0.3333 0.1 50dB 90dB 10ms 100ms 
表 4.2 壓縮程式各項參數設定值(2) 
圖 4.18 與圖 4.14 相比，可以發現在不同壓縮比率下，高頻的成分保留較多，由圖
4.19 傅立葉轉換可以得到相同的結果。 
 32
  
圖 4.20 “ 詐 ” 之輸入波形、補償輸出波形，以及其短時間傅立葉轉換(STFT) 
 
 
 
圖 4.21 “ 詐 ”壓縮輸出之快速傅立葉頻譜分析(FFT) 
 
4.2 整體系統運算量之分析 
 34
 結果顯示，若依原來在電腦上之運算設計，在 DSP 系統下要實現華語補償策略，
18 個頻帶分割與補償增益所需之運算量較小，但是壓縮所需的運算量高達 4664 時脈，
以致 DSP 平台只能完成一個通道之運算；整個程式花費了 5564 個時脈數，參考表 4.3
取樣頻率 32000Hz 對應的最大時脈數，整體運算之時脈數使用率(Utility rate)約等於
79.1%。這樣的運算設計已經無法再增加頻道數目，因為一個頻道壓縮所花費的時脈數
就超越了整個程式運算量的八成，換句話說，若不改變運算設計，我們所選用的 DSP
平台根本無法滿足現今多通道助聽器的設計需求。為了改善運算設計，我們特別針對
原始壓縮程式進行更進一步的分析，發現壓縮程式內部的各訊號所需之運算量統計的
結果如表 4.5。 
 
壓縮程式內部 運算時間 花費時脈數 佔總運算量比例 
計算 buffer 中 320 點
的均方根值 
8.07μs 1817 38.9% 
均方根值轉聲壓 4.64μs 1047 22.4% 
目標增益(tg)與現實
增益(cg)比較 
0.84μs 188 4% 
聲壓轉 Q15 增益 7.15μs 1612 34.5% 
總計 20.7μs 4664  
表 4.5 語音壓縮模組內各部分運算量、時脈數統計表 
    從表 4.5 可以知道，壓縮程式運算量過於龐大，主要因為其三個部份要應用到特別
之數學函數；其中計算均方根值需要使用 sqrt()的數學函數，均方根值轉聲壓需要使用
log10()的數學函數，聲壓轉 Q15 增益需要使用 pow()的數學函數，這三個數學函數在
DSP 程式裡面都需要花費超過 1000 個時脈數的運算量。 
  因此我們將壓縮程式中這三個數學函數改為查表方式進行，之後測 
  試其所需要之運算量，所得結果如表 4.6 統計表。 
 
模組 運算時間 花費時脈數 佔總運算量比例 
信號輸入 0.44μs 99 3.4% 
切割頻帶 2.68μs 604 20.8% 
補償增益 0.6μs 135 4.6% 
語音壓縮 8.9μs 2004 69% 
信號輸出 0.28μs 62 2.1% 
總計 12.9μs 2904  
表 4.6 以查表壓縮運算，DSP 各模組的運算量、時脈數統計表 
表 4.6 同樣顯示在取樣頻率為 32000Hz 下，切割 18 個頻帶，並且補償個別增益，
之後匯總在一個通道的壓縮設定下，各模組運算量之統計結果，相較於表 4.4 壓縮模組
的部份，大幅降低了其所需知時脈數，且整個系統在 DSP 的使用率(Utility rate)僅約為
41%。在這樣的情況下，壓縮處理的頻道數目還可以增加，表 4.7 就是在頻道數目增為
三之後，各模組運算量的統計結果。整個系統在 DSP 的使用率(Utility rate)變為 98%。 
模組 運算時間 花費時脈數 佔總運算量比例 
信號輸入 0.44μs 99 1.4% 
切割頻帶 2.68μs 604 8.7% 
補償增益 0.6μs 135 1.9% 
語音壓縮 26.7μs 6012 86.97% 
 36
 五、 討論 
本研究目的是希望透過市面上通用的 DSP，將華語補償策略從軟體開發轉移在硬體
的 DSP 系統上，建置一套以真實 DSP 為核心之助聽器模擬平台，以便在仿助聽器狀態下，
評估我們所設計之華語助聽器補償策略可否具體實踐。此 DSP 助聽器模擬平台目前已經
初步完成，具有基本的功能。利用此一模擬平台，我們獲得整個補償策略在硬體上面執行
的時候，各項基本功能模組的運算量需求；此一運算量統計的結果有許多值得深入討論之
處。 
5.1 系統功能結果與運算量討論 
首先，就目前在 DSP 助聽器模擬平台上面的功能，經過驗證確認的功能如表 5.1 所
附 
各項功能參數 最大設定值 
取樣頻率 32KHz 
音框 (frame size) 320(10ms) 
頻帶切割(band) 18 濾波器 
反應頻寬 143Hz~8980Hz 
濾波器 IIR Butterworth 帶通 
濾波器階數 6 階 
壓縮動態範圍 ＞50dB 
壓縮方式 兩段式 
 頻道數目(channel) 3 
表 5.1 DSP 平台各項參數設定值 
 
在與電腦化助聽器模擬體驗平台的預設值比較，DSP 系統取樣頻率稍微低一點，但
在語音上面影響不大；頻帶切割的頻帶數目與頻寬與電腦平台相同，只有濾波器的設計從
FIR 濾波器改為 IIR 濾波器，在初步的驗證上面，IIR 濾波器在頻域方面對各頻帶切割的的
表現也符合我們的需求，使得之後的補償增益也能呈現正確的補償效果。在壓縮的部份，
透過取音框方式與查表方式的修改，結果顯示也能達到預期的壓縮目標。相較於電腦體驗
平台的預設值，DSP 系統只有在頻道數目上尙無法達到四個以上頻道數目的預設要求。也
就是說，目前我們使用一般通用的 DSP 系統，已經可以完成陽春型的助聽器模擬體驗平
台，功能面比起電腦模擬之頂級助聽器得少很多，而且目前無法隨時進行參數的調整，然
後馬上進行試聽體驗，只能在使用此平台之前，先將所有參數設定好，再將程式燒在 DSP
系統上面，讓使用者可以將其個人在聽力室所調整好的參數，在真實日常生活中加以體驗。 
其次是整體系統運算量的分析，從結果可以知道，語音壓縮模組佔了整個系統最多
的運算能量，其次是頻帶切割的部份;補償增益模組跟信號輸入／輸出的運算量比較起來
相對非當低。這樣的結果主要是因為在壓縮程式中，雖然使用查表取代了 Q15 格式與聲
壓轉換所需的兩種數學函數，但是在緩衝器中累積各點能量的運算還是需要相當多數學運
算，其中包括一個 sqrt()開根號的數學函數；如果嘗試同樣用查表的方式來取代此函數，
 38
 六、結論與未來工作 
現今助聽器的參數繁多，目前尚未有很明確的研究指出各項參數對應人類感受的指
標，所以若能提供適當的助聽器模擬平台，將可以讓使用者在佩戴助聽器之前，先體驗助
聽器補償的聲音，並且進行參數調整，已獲取最佳化個人感受的參數，對於助聽器之選配
將會有很大的幫助。 
本研究基本上已經針對所設定的動機與目標，完成了一套 DSP 模擬助聽器體驗平
台。當受測者經過本實驗室之助聽器電腦模擬平台體驗後，將可得到其所需要的助聽器參
數設定，雖然以目前我們設計的 DSP 平台無法滿足助聽器功能直接移植的期待，但若這
些參數略加簡化，依然可以利用本研究之 DSP 模擬助聽器體驗平台體驗在真實生活中助
聽器的佩帶效益。此外，在不改變程式的條件下，若能更換 DSP 或是將某些模組使用硬
體來實現，相信也可以提升本研究平台的諸多效益。在未更換體驗平台之 DSP 核心或是
設計客製化的 DSP 前，我們還是可以利用這一平台，評估在特定助聽器參數設定下，需
要多少速度的 DSP 核心才可以完成，對於擬設計的系統效益，便能夠預先做出可行性的
評估分析。 
另外就是在未來如果有新開發的助聽器補償策略，本研究除了可以提供這些運算量
的分析之外，也可以針對整個軟體演算法要轉移到硬體上，所可能面對一些硬體上面的限
制，提供了許多參考的設計方法。未來在從事這方面相關的研究上面，或是不同的補償策
略演算法需要開發時，都可以考慮使用此平台來作為開發工具，或是可以先針對可行性來
進行評估，節省一些解決問題的時間，提高程式移植的效率 
 
通常做演算法的人在意的是某些問題形式 "是否可解"、 "解的複雜度"、以及其相關
證明。另外有些人則習慣把實際問題轉成某種形式的數學問題 (Modeling)，讓大家更容易
掌握它。模型的好壞就看實際用起來是否讓大家覺得沒什麼例外，或者它所預測的東西不
至於誤差大到無法接受。然而在嵌入式系統(embedded system)上做東西，遇到的問題通常
不是上面這兩種，它並不是要去找出如何計算，而是要在有限的資源內如何算出 "可以接
受" 的結果。換言之，通常我們都知道要去計算之問題的"答案"，但是那只是一個抽象的
數學式。如何用一個資源稀少又動作遲緩的計算系統，在有限的時間中算出近似解， 是
一個既有趣又充滿妥協的問題，這整個中間取捨的過程，是我們在本研究中得到最大的領
悟與收穫。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 40
