摘要 
本計畫藉巢狀卡氏網格計算含複雜邊界流場。流場藉由 Navier-Stokes 方程及連續方程求
解得之，解答邏輯過程採用分步法(Fractional Step Method)。流場中，含複雜邊界之障礙物
則以 J.F. Ravoux 等人發展的內嵌法 ( Embedding Method ) 處理之，並藉由本計畫發展之
多層網格法增加障礙物附近流場之解析度。應用流場包含流過具攻角之橢圓柱渦漩逸出流
場，以及流過含不同直徑兩圓柱渦漩逸出控制流場。本文數值模式於渦漩逸出流場之抑制
研究，經由控制圓柱之作用，主圓柱上卡門渦漩(Karmann vortex)幾達完全抑制之效果。 
關鍵字： 巢狀卡氏網格，分步法，內嵌法 
Abstract 
In this paper, the local grid refinement procedure is focused by using a nested Cartesian grid 
formulation. The method is developed for simulating unsteady viscous incompressible flows with 
complex immersed boundaries. A finite volume formulation, based on a second-order accurate 
central-difference scheme is adopted in conjunction with a two-step fractional-step procedure. 
The key aspects that needed to be considered in developing such a nested grid solver are 
imposition of interface conditions on the nested-block boundaries, and accurate discretization of 
the governing equations in cells that are with block-interface as a control surface. A new 
interpolation procedure has been adopted in our study, which allows systematic development of a 
discretization scheme that preserves spatial accuracy of the underlying solver. Through two 
experiments, the strength of the solver in accurately simulating various complex flows with 
different forms of immersed boundaries is extensively demonstrated, in which the nested grid 
method was efficiently combined with the fractional-step algorithm to speed up the solution 
procedure. 
Keywords: Nested Cartesian grid, Fractional-step method, Immersed boundary method. 
 
1. Introduction 
In numerical simulations of complex physical phenomena the crucial requirement is the 
predictability, that is, the simulated results should remain faithful to the actual physical processes. 
To this point, the generation/accumulation of numerical errors during the computation is of 
special concern, since it introduces distortions that fundamentally alter the fidelity of the 
simulations. Errors resulting from a lack of spatial resolution are particularly deleterious. On the 
other hand, over-resolving is computationally expensive. Therefore, how to efficiently/effectively 
solve the governing partial differential equations (PDEs), representing the mathematical model of 
the physical problem concerned, becomes a subject of active research in the numerical analysis 
(Chacon and Lapenta [1], Ding and Shu [2]). 
In the present paper, our focus is on developing a structured nested-block Cartesian grid 
method for effectively simulating unsteady viscous incompressible flows with complex immersed 
boundaries. The strongest point for the proposed structured nested grid refinement approach is 
that the resulting `uniform’ grid evolution equation is less stiff and very efficient in conjunction 
with line-SOR. Notably, the presently implemented alternating direction line-SOR method is one 
of the most widely used iterative methods for solving equations resulting from discretization on 
structured grids. The advantage of using the line-SOR, as a pre-conditioner, is that the procedure 
only requires the solution of tri-diagonal systems, and this can be accomplished with ease using 
the Thomas algorithm. 
 01 =⋅∫ + dSnUCS n vv .                                                           (5) 
This results to the following equation for pressure 
 ,)(1)( *1∫ ∫ ⋅Δ=⋅∇ +CS CSn dSnUtdSnp v
vv                                               (6) 
which is the integral form of the Poisson equation. Once the pressure is obtained by solving this 
equation, both the cell-center (cc) and face-center (fc) velocities are updated separately as,  
cc
nn ptuu )( 1*1 ++ ∇Δ−= vv , fcnn ptUU )( 1*1 ++ ∇Δ−=
vv
.                                  (7) 
W E
S
N
P
v
u U
V
e
n
s
w
NENW
SW SE
5-point stencil for regular cello :
p
 
Fig. 1. Schematic plot of the regular cell and arrangement of velocities. 
2.2. Nested Grid Methodology 
    In the present study, the local grid refinement technique is adopted through a nested-block 
method. For detail, the sketch of the flow domain, together with the inside coarse/fine grid area is 
plotted in Fig.2. For simplicity, we describe our nested-block technique for two-dimensional (2D) 
flows with a 2-block domain. However, the present nested-block technique can be extended for 
3D flows and with higher multi-block domains without much hindrance. The coarse and the fine 
grid domains in Fig.2 are denoted by D1 by D2, respectively. Again, for simplicity, the fine grid 
length is defined as half the coarse grid length. The approach adopted here is to solve the flow in 
both D1 and D2 domains simultaneously in combination with the fractional step procedure.  
P
3
2w
n
1
2
4
e
1w
E
DS
N NE
W
s
w
(a)
2W
1W
2
D1
(G)
(G)
(G)
(G)
1
P
S
E
D
U w
N
W
1 2
34
(1P)
(1E)
(1NE)
(1N)
(b)
2D
(G)
s
n
e
(G)
(G)
 
Fig. 2. Schematic plots of refinement cells. (a) Coarse cell. (b) Fine cell. 
2.3 Immersed Boundary method 
In this study, a simple concept of Immersed Boundary (IB) method is adopted for numerical 
The computational domain for the flow was a rectangle of xx LL 1025 × , where xL  is the 
length of the semi-major axis of the ellipse. Four different grids are used to compute the flows. 
Notably, B1G1 and B1G2 use uniform grids with xL.yx 10=Δ=Δ  and xL.yx 050=Δ=Δ , 
respectively, and for B2G2 the computational domain was divided into two blocks. In the outer 
block, G1 grids with xL.yx 10=Δ=Δ  are used, and in the inner block of xx L.L. 7214 × , G2 
grids with xL.yx 050=Δ=Δ  were used to compute the flow around the elliptical cylinder. For 
B3G2, the computational domain was divided into three blocks. In the outer block B1, as shown 
in Figure 13, G1 grids with xL.yx 10=Δ=Δ  were used to compute the outer flow. In the inner 
blocks, i.e., B2 and B3 (see Fig. 13) G2 grids with xL.yx 050=Δ=Δ  were used to compute the 
flow around the ellipse. The associated vortex shedding behaviour of the flow at Re*=163 is 
presented in Fig.13. 
In order to further exhibit the efficiency of such a nested block grid system, in Figs.15 we 
present the simulated vortex shedding behaviour for a higher aspect-ratio (thickness-ratio) 
cylinder with Γ =0.5, o45=α  and Re*=525, using the same grid distribution as in Fig.13. 
Interestingly, the vortex shedding pattern at Re*=525, as presented in Fig.15, clearly reveals 
encouraging smooth variations of local flows across different block interfaces.   
 
B1
B2
B3
Lx
3.7Lx
2.7Lx
3.4Lx
Lx
2.7Lx
2.7Lx
3.4Lx
3.7Lx
B1
B2
B3
 
Fig. 13. Flow configuration for flow past an ellipse with angle of attack, with Γ =0.2, o45=α  
at Re*=163. And Fig. 15. Flow configuration for flow past an ellipse with angle of attack, with 
Γ =0.5, o45=α  at Re*=525. 
 
3.2. Flow past two circular cylinders with different diameters 
    Flow past two cylinders in tandem or in side-by-side arrangement represents an important 
but remarkably complex flow configuration. Importantly, Strykowski and Sreenivasan [28] 
investigated the suppression of vortex shedding from a circular cylinder at relatively low 
Reynolds numbers by introducing another small neighbouring parallel cylinder. Following the 
experiment of Strykowski and Sreenivasan [8], many subsequent experimental and computational 
studies have been performed in order to control wake flows at various Reynolds numbers. 
Sakamoto et al. [9], and Sakamoto and Haniu [10] studied the suppression of the fluid forces 
acting on square and circular cylinders, respectively, in the subcritical regime. Important it may 
be to mention here that, in a similar investigation Dalton et al. [11] also report the suppression of 
lift force on a circular cylinder in presence of another neighboring small cylinder.  
In this study, flow past two circular cylinders of different diameters is investigated 
numerically, and the governing Navier-Stokes equations are solved using the present nested grid 
formulation and immersed boundary method. The aim here is to examine the ability/efficiency of 
(a)
(b)
 
Fig. 24. Computed iso-vorticity plots and grid systems of the flow past (a) a single cylinder at 
Re=80, (b) two cylinders with different diameters at Re=80 and o25=θ . 
 
4. Conclusions 
In the present study, a nested-block finite-volume based Cartesian grid method has been 
developed which allows us to effectively simulate the unsteady viscous incompressible flows. 
The underlying method is based on a colocated arrangement of variables, in which a second-order 
central difference scheme is used for spatial differencing. The solution is advanced in time using 
a two-step fractional-step scheme. The key aspects that needed careful consideration in 
developing such a nested-block solver are imposition of interface conditions on the nested-block 
boundaries and accurate discretization of the governing equation in cells that are with 
block-interface of a control surface. A new interpolation procedure has been adopted here, which 
allows systematic development of a spatial discretization scheme that preserves the second-order 
spatial accuracy of the underlying solver. As a result, high efficiency and accuracy nested-block 
method is developed.  
Herewith, two different complex numerical experiments have been conducted in order to 
extensively examine/demonstrate the performance of the present nested-block algorithm. For the 
flow past an inclined elliptic cylinder placed in a uniform stream, the validity/effectiveness of the 
present numerical method in the situation when more than two fine nested grid domains are 
present/overlap is confirmed.  
For the flow past two circular cylinders of different diameters (in tandem), the ability of the 
present numerical method in effectively predicting the suppression of the vortex shedding 
phenomenon, which has been reported to be difficult to reach by a Cartesian grid method, is 
widely demonstrated. In addition, our numerical experiments clearly indicate that even with 
considerably reduced grid size the present nested-block method can achieve a solution of 
comparable accuracy to that obtained by the traditional finite difference methods on a finest 
uniform grid, and the present method also helps to  significantly lower the CPU time 
requirement. Notably, in combination with the implemented immersed boundary method and the 
fractional step procedure the current nested-block solver is able to simulate the reported flows 
with ease, and thereby, demonstrate the clear superiority/efficiency of the present approach in 
solving various physically important complex problems. 
 
  
  
Abstract—In this paper, the local grid refinement is focused by 
using a nested grid technique. The Cartesian grid numerical method is 
developed for simulating unsteady, viscous, incompressible flows 
with complex immersed boundaries. A finite volume method is used in 
conjunction with a two-step fractional-step procedure. The key aspects 
that need to be considered in developing such a nested grid solver are 
imposition of interface conditions on the inter-block and accurate 
discretization of the governing equation in cells that are with the 
inter-block as a control surface. A new interpolation procedure is 
presented which allows systematic development of a spatial 
discretization scheme that preserves the spatial accuracy of the 
underlying solver. The present nested grid method has been tested by 
two numerical examples to examine its performance in the two 
dimensional problems. The numerical examples include flow past a 
circular cylinder symmetrically installed in a Channel and flow past 
two circular cylinders with different diameters. From the numerical 
experiments, the ability of the solver to simulate flows with 
complicated immersed boundaries is demonstrated and the nested grid 
approach can efficiently speed up the numerical solutions. 
 
Keywords—local grid refinement, Cartesian grid, nested grid, 
fractional-step method.  
I. INTRODUCTION 
In the numerical simulation of complex physical phenomena, 
the crucial requirement is predictability, i.e., that the simulation 
results remain faithful to the actual physical processes. Errors 
resulting from a lack of spatial resolution are particularly 
deleterious. However, over-resolving is computationally 
expensive. As a result, how to efficiently and effectively solve 
the partial differential equations which represent the 
mathematical model of physical problems concerned becomes 
a subject of active research in numerical analysis [1], [2]. 
In general, there are two approaches to obtain accurate 
solution of PDEs. One approach is to employ high-order 
numerical method [3], and the other is to improve the resolution 
through the computational grid. Mesh refinement is desirable to 
improve spatial resolution by using uniform or non-uniform 
grids. The uniform mesh refinement is that the resulting grid 
evolution equation is generally less nonlinear and less stiff 
which becomes very efficient in conjunction with the line 
successive-overrelaxation (SOR) solver. However, the uniform 
mesh refinement is not perfect for the applications, of which the 
solution may need different resolutions for different regions. 
In this paper, we develop a structured, nested Cartesian grid 
method for simulating unsteady, viscous, incompressible flows 
with complex immersed boundaries. One drawback of adopting 
 
Y. F. Peng is with the Department of Civil Engineering, National Chi-Nan 
University, Puli, Taiwan, 545, R. O. C. (Tel: 886-49-2910960 ext. 4960; e-mail: 
yfpeng@ncnu.edu.tw). 
nested grid method as the local refinement technique is that the 
resulting nested grids are uniform and the corresponding 
evolution equations is less stiff and very efficient in 
conjunction with line-SOR. For the numerical simulations of 
flow past bluff body problems in the present study, we used an 
Immersed Boundary (IB) method where the solid object is 
represented by a distributed body force in the Navier–Stokes 
equations [4].  
The current paper will focus on describing these and other 
salient features of the numerical methodology, validating the 
accuracy and fidelity of the approach and demonstrating the 
capabilities of the solver in some complex configurations. 
II. NUMERICAL METHODOLOGY 
A. Fractional-Step Method 
We first describe the underlying solver, the fractional-step 
method, for a Cartesian mesh [5]. The governing equation is the 
unsteady, viscous, incompressible Navier–Stokes equation 
written in terms of the primitive variables. This equation is 
discretized on a Cartesian mesh using a cell-centered colocated 
(non-staggered) arrangement of the primitive variables ( p,u ). 
The integral form of dimensionless governing equations is 
given by mass conservation  
0=⋅∫ dSnuCS ,                                                                                     (1) 
and momentum conservation 
dSnuudVu
t CSCV
)( ⋅+∂
∂ ∫∫ dSnudSnp CSCS ⋅∇+−= ∫∫ )(Re1  
(2) 
This is used as the starting point for deriving a second-order 
accurate finite-volume method. In the above equations CV and 
CS denote the control-volume and control-surface, respectively, 
and n  is a unit vector normal to the control-surface. A 
second-order accurate, two-step fractional step method is used 
for advancing the solution in time. In this time-stepping scheme, 
the solution is advanced from time level “n” to “n+1” through 
an intermediate advection-diffusion step where the momentum 
equations without the pressure gradient terms are first advanced 
in time. A second-order Adams–Bashforth scheme is employed 
for the convective terms and the diffusion terms are discretized 
using an implicit Crank–Nicolson scheme. This eliminates the 
viscous stability constraint which can be quite severe in 
simulation of viscous flows. At this stage, in addition to the 
cell-center velocities which are denoted by u , we also 
introduce face-center velocities U . In a manner similar to a 
fully staggered arrangement, only the component normal to the 
cell-face is computed and stored (see Fig.1). The face-center 
Study On a Nested Cartesian Grid Method 
Yih-Ferng Peng 
  
Cells without domain interface 
   For those control volumes without domain interface, Eq. 10 is 
exactly the same as Eq. 3 of a single block domain which has 
been outlined in the previous section. By using second order 
accurate center difference method for spatial terms, the 
cell-center velocities and gradient of these velocities at the 
cell-face are computed from those adjacent cell-center 
velocities, i.e., (equation of sv (Eq. 12) is not shown) 
,2/)( PEe uuu += ,2/)( PWw uuu +=  
,2/)( PNn uuu += ,2/)( PSs uuu +=                                                  
(11) 
And 
dx
uuu
x
u
x
u WPE
we
)2()()( +−=∂
∂−∂
∂ ,  
dy
uuu
y
u
y
u SPN
sn
)2()()( +−=∂
∂−∂
∂ .                                         
(13) 
D1 cells with domain interface 
For those D1 cells with domain interface as shown in Fig.2 
(a), since Eu  and Ev  are not defined in the computational 
domain, the cell-center velocities at the east surface can not be 
computed by using Eqs. 11~12 directly, we need to computed 
velocities at the ghost cell by introducing appropriated 
interpolations first. In this study, a simple way devoted to 
calculate these ghost velocities is using averaged velocity of the 
occupied D2 cells instead, i.e.,  
,4/)( 4321 uuuuuu GE +++==                                                      (14) 
where subscript G denotes the D1 ghost cell (for instant E=G, E 
denotes the eastern cell), as shown in Fig.2 (a), which control 
volume is occupied by those four 1, 2, 3, and 4 D2 cells. With 
the use of Eq. 14, the general form of the cell-surface velocities, 
Eq. 12 can be preserved. Most importantly, the second-order 
accurate of the present numerical method are also prevented. 
P
3
2w
n
1
2
4
e
1w
E
DS
N NE
W
s
w
(a)
2W
1W
2
D1
(G)
(G)
(G)
(G)
 
1
P
S
E
D
U w
N
W
1 2
34
(1P)
(1E)
(1NE)
(1N)
(b)
2D
(G)
s
n
e
(G)
(G)
 
Fig. 2 Schematic plots of refinement cells. (a) Coarse cell. (b) 
Fine cell. 
 
That is the domain-interface processing which plays the 
essential part of the present nested grid method. In the general 
advection-diffusion equation Eq. 10, except eu  and ev  which 
has been processed in the previous paragraph, there are some 
other terms such as eU , e)x/u( ∂∂  and e)x/v( ∂∂  located at the 
block interface. Where eU  and e)x/u( ∂∂  and e)x/v( ∂∂  are 
used for computing the volume flux and momentum flux, 
respectively, from D1 to D2 cells. Although there are varied 
interpolations available, we use the volume and momentum 
flux from D2 to D1 cells instead, i.e.,  
    22211 dyUdyUdyU wwe ×+×=× ,                   
(15) 
    
=×∂
∂+×∂
∂=×∂
∂
22211 )()()( dyx
udy
x
udy
x
u
wwe
2
2
22
2
2
11 dy
dx
uudy
dx
uu WW ×−+×−                                                       (16) 
where dy1 and dy2 denote the vertical lengths of D1 and D2 cells, 
respectively. It has to noted that the use of Eqs. 15~16 can make 
sure the mass and the momentum diffusion fluxes, respectively, 
through the D1 and D2 domain interface and vice versa are 
consistent. 
D2 cells with domain interface 
For the D2 cells with domain interface as shown in Fig.2 (b), 
since Wu , and Wv  are not defined in the computational domain, 
the general form of the cell-face velocities (Eq. 12) can not be 
applied directly, we need to compute these terms by 
introducing second order accurate interpolations. Similar to the 
processing of ghost D1 cells, these ghost velocities are obtained 
by using averaged value of those adjacent velocities, i.e.,  
,4/)( 4321 uuuuuu GW +++==                                                      (17) 
where Puu 11 = , 2/)( 112 EP uuu += , 
4/)( 11113 NNEEP uuuuu +++= ,  and 2/)( 114 NP uuu += , in 
which the subscript 1P, 1E, 1N, and 1NE denote those 
corresponding D1 cell, D1 eastern, northern, and north-east cells, 
respectively, as shown in Fig.2 (b). Here, NENEEE v,u,v,u 1111  
are not defined in our computational domains, these velocities 
are again obtained from Eq. 14. 
Computing *U  and *V  
  
C. Immersed Boundary Method 
In this study, a simple concept of Immersed Boundary 
method is adopted for numerical simulation of bluff body flows 
by using a distributed body force in the Navier-Stokes 
equations instead of the existence of solid body. The governing 
equations for fluid flow are solved everywhere, including cells 
which are occupied by the solid body. The distributed body 
force is determined at every time step of the iteration by 
requiring the value of the velocity in those cells to match the 
prescribed velocity of the solid body. Similar procession has 
been applied by Ravoux et al. (2003) and they referred it as 
Embedding method. 
III. NUMERICAL  RESULTS 
In this section, two examples are presented to examine the 
performance of the proposed nested grid refinement method. 
A. Flow past a Circular Cylinder in a Channel 
d h
parabolic
profile
fixed wall
fixed wall
3h
10.5h
 
Fig. 3 Computational domain of flow past a cylinder placed 
symmetrically in a planar channel. 
 
The first test case is to validate the solver in the finite 
Reynolds number regime by simulating unsteady flow past a 
circular cylinder of diameter d placed symmetrically in a planar 
channel of height h. Fig. 3 shows a schematic of the flow 
configuration that has been simulated in this study. Parabolic 
profile is specified at the channel inlet and the two main 
parameters in this flow are the blockage ratio h/d=β  and the 
Reynolds number defined as ν/QRe =  where Q denotes the 
inlet volume flux. A systematic numerical study of this flow 
configuration over a range of parameters has been conducted 
by Chen et al. (1995) [6] and results from this study are used to 
validate our simulations. This flow shares some features with 
the case of a cylinder immersed in a free stream. In particular, 
vortex shedding is observed in this flow beyond a critical 
Reynolds numbers. However, the critical Reynolds number is a 
strong function of the blockage ratio. Furthermore, the 
development of the vortices is also significantly affected by the 
boundary layers that develop on the channel walls. Thus, 
overall this is a more complicated flow and a good test case for 
our simulation methodology.  
We first conducted a resolution study by solving the 
vortex shedding flow at Re=500 for a blockage ratio of 0.2. A 
series of grid systems including 1block, 2block, and 3block are 
used for simulation this flow. The resolution study included 
two parts, local-refined-domain inference study and grid 
independence study, which are separately conducted and 
results are collected and listed in Table 1 and Table 2, 
respectively. In Table 1, numerical results including 
dimensionless dynamics forces acting on the circular cylinder, 
mean drag force coefficient dC  and lift force amplitude Cl, and 
dimensionless vortex shedding frequency, the Strouhal number, 
St, of uniform grid systems are listed. Where B1G1 denotes a 
one block coarse uniform grid system with h.yx 020=Δ=Δ , and 
B1G2 denotes a one block finer uniform grid system with 
h.yx 010=Δ=Δ . It is noted that the numerical results are 
strongly dependent on the resolutions. The difference of Cl 
obtained by B1G1 to that from B1G2 up to 34.4%, while 
differences of dC  and St between coarse (B1G1) and finer 
(B1G2) grids are 6.8% and 5.0%, respectively. Although the 
improve numerical results of B1G2 to B1G1 are significant, the 
B1G2 grid number are four times of B1G1 and the CPU time 
can be more than 6 times of that of B1G1, which means there is 
necessary of a local refinement. To explore the 
local-refinement-domain inference on the simulated results, we 
performed a series of numerical simulations by the 2block 
method arranging the refined area around the circular cylinder. 
Eight grid systems denoted by B2D1 to B2D8 are conducted, 
the refined area of each grid system can be seen in Fig. 4 and 
the grid numbers, including coarse (G1) and finer (G2) grid 
numbers, are listed on Table 1. From the numerical results 
listed on Table 1, it is noted that refined grids around cylinder 
improve the numerical simulation results significantly. For 
instant with extra 6,000 refined grids (B2D5 in Table 1), about 
20% of the G1 grid number, the present 2block method can 
predict a closely resembled results of B1G2. The differences of 
computed dC , Cl, and St values between B1G2 and B2D5 are 
all within 1.0%. This local-refined-domain inference study not 
even demonstrates efficiency of the present nested grid method, 
but also indicates the local-refinement necessary around the 
circular cylinder.  
From the image of the local-refined-domain inference 
study, we conducted a three block grid system B3G3 for 
simulating this vortex shedding flow with high resolutions. In 
B3G3 grid system, the computational domain are divided into 3 
blocks, which arranged uniformly distribution of coarse (G1), 
finer (G2), and finest (G3) Cartesian grids, respectively, where 
G1 denotes a uniform cell with h.yx 020=Δ=Δ , G2 denotes a 
uniform cell with h.yx 010=Δ=Δ , and G3 denotes a uniform 
cell with =Δ=Δ yx  h.0050 . Computational vorticity contours 
of B3G3 are simulated and plotted on Fig. 5, in Fig. 5 the 3 
blocks are also marked. It is seen from Fig. 5 that the vorticity 
contours are distributing around those block-interfaces 
smoothly, which shows that the present nested grid method 
works smoothly even across complex and reversed flow fields. 
Numerical results of dC , Cl, and St, grid numbers, and CPU 
time of B3G3 simulations are collected, these values are listed 
on Table 2 and compared to those results or values of B1G1, 
B1G2, and B2D5. All the computations are carried out on a 
personal computer with Pentium 4 (3.4G) and Fortran 90 
compiler. As shown on Table 2 that the computational results 
are greatly improved over those of B1G1, B1G2, and B2D5. It 
is expected that computational results are closed to the grid 
independent results, although further investigations are 
necessary. For instance, we found that the simulated Cl 
differences between B1G1, B1G2, and B2D5 to that of B3G3 
are up to 39%, 7.2% and 7.9%, respectively. While the present 
nested grid method improves the coarse single-block 
  
220 230 240 250 260 270 280
Re
-0.01
0.00
0.01
0.02
0.03
0.04
0.05
0.06
Cl
Am
p
Recr = 262.6Recr = 230.7 Recr = 234.2
2
: B1G1
: B1G2
: B3G3
 
Fig. 6 2Amp,lC  as functions of Re and critical Reynolds numbers 
Recr. 
 
B. Flow past two circular cylinders with different diameters 
The second test case is flow past two cylinders with different 
diameters. In 1990, Strykowski and Sreenivasan investigated 
the suppression of the vortex shedding from a circular cylinder 
by introducing a small circular cylinder at low Reynolds 
numbers [7]. Since the experiments of Strykowski and 
Sreenivasan [7], many experimental and computational studies 
have been performed in order to control wake flows at 
supercritical Reynolds numbers. Sakamoto et al. (1991) [8] and 
Sakamoto and Haniu (1994) [9] studied the suppression of the 
fluid force acting on a square cylinder and a circular cylinder, 
respectively, at high Reynolds number in subcritical regime. 
Dalton et al. (2001) also simulated the suppression of lift force 
on a circular cylinder by a small cylinder numerically [10].  
Recently, there were numerical studies directed towards 
the flow past two cylinders of different diameter (Zhao et al., 
2005 [11], Delaunay and Kaiktsis, 2001 [12], and Yang et al., 
2001 [13]). These numerical studies were either based on the 
finite element method or finite volume method with body fitted 
grids. In this study, flow past two circular cylinders of different 
diameters is investigated numerically. The Navier-Stokes 
equations are solved using present nested grid method. The aim 
of this study is to investigate the ability of the present numerical 
method by solving the suppression of the vortex shedding flow 
behind the two-cylinder system which was kind of difficult to 
reach by a Cartesian grid method. The two cylinders considered 
in this study are shown in Fig. 7. The diameter ratio between 
the small cylinder and the large cylinder is 0.2. The Reynolds 
number based on the diameter of the cylinders is 100(80) for 
the large cylinder and 20(16) for the small cylinder. The gap 
between the small cylinder and the large cylinder is 2.0 times 
the diameter of the large cylinder. The position angle of the 
small cylinder relative to the flow direction ranges from 20o to 
40o. In all computations, a rectangular computational domain is 
used. The large cylinder is located at 5D from the inflow 
boundary. The distance between the large cylinder and the 
outgoing boundary is 20D. The two lateral boundaries are 
located at 7D away from the large cylinder. The effects of the 
position angle of the small cylinder on drag and lift coefficients, 
pressure distributions around the cylinders, the vortex shedding 
frequencies from the two cylinders and flow characteristics are 
investigated. 
 
θ
2D G3
G2
G1
D
5D 15D
7D
 
Fig. 7 Configuration of flow past two circular cylinders with 
different diameters. 
 
To validate the numerical model, uniform flow past a 
singular cylinder for the Reynolds number ranging from 10 to 
200 is first simulated. The computational domain of 25D × 14D 
was divided into two blocks. In the outer block, G1 grids with 
D.yx 10=Δ=Δ  were used to compute the outer flow. In the 
inner block of DD 46 ×  (please see Fig. 9(a)), G2 grids with 
D.yx 050=Δ=Δ  were used to compute the flow around the 
cylinder. In Fig. 8, the computed time averaged drag 
coefficients for Reynolds number from 10 to 100 are compared 
with the finite difference results by Lei et al. [14] and the finite 
element results by Ghao et al. [11]. The difference between the 
numerical results in Fig. 8 is small. 
The numerical model is then applied to study the flow past 
two circular cylinders as shown in Fig. 9. Before we discuss the 
computational results of the suppression of vortex shedding 
flow, a typical computational mesh for the flow is shown in Fig. 
9(b), the computational domain of 25D × 14D is herein divided 
into three blocks. In the outer block, G1 grids with 
D.yx 10=Δ=Δ  were used to compute the flow. In the middle 
block of DD 46 × , G2 grids with D.yx 050=Δ=Δ  were used to 
compute the flow around the main cylinder. In the inner block 
of DD. 152 × , G3 grids with D.yx 0250=Δ=Δ  were used to 
compute the flow around the control cylinder. The total cell 
number is 45200.  
 
0 10 20 30 40 50 60 70 80 90 100 110 120
Re
1.5
2.0
2.5
3.0
3.5
4.0
C
d
 
  
[5] T. Ye, R. Mittal, H. S. Udaykumar, and W. Shyy, “An accurate Cartesian 
grid method for viscous incompressible flows with complex immersed 
boundaries,” J. Comput. Phys., vol. 156, pp 209-240, 1999. 
[6] J. H. Chen, W. G. Pritchard, and S. J. Tavener, “Bifurcation for flow past 
a cylinder between parallel planes,” J. Fluid Mech., vol. 284, pp 23-52, 
1995. 
[7] B. J. Strykowski, and K. R. Sreenivasan, “On the formation and 
suppression of vortex ‘shedding’ at low Reynolds numbers,” J. Fluid 
Mech., vol. 218, pp 71-107, 1990. 
[8] H. Sakamoto, K.  Tan, and H. Haniu, “An optimum suppression of fluid 
forces by controlling a shear layer separated from a square prism,” J. Fluid 
Eng., vol. 113, pp 183-189, 1991. 
[9] H. Sakamoto, and H. Haniu, “Optimum suppression of fluid forces acting 
on a circular cylinder,” J. Fluid Eng., vol. 116, pp 221-227, 1994. 
[10] C. Dalton, Y. Xu, and J. C. Owen, “The Suppression of lift on a circular 
cylinder due to vortex shedding at moderate Reynolds numbers,” J. Fluid 
Struct., vol. 15, pp 61-128, 2001. 
[11] M. Zhao, L. Cheng, B. Teng, and D. Liang, “Numerical simulation of 
viscous flow past two circular cylinders of different diameters,” Appl. 
Ocean Res., vol. 27, pp 39-55, 2005. 
[12] Y. Delaunay, and L. Kaiktsis, “Control of circular cylinder wakes using 
base mass transpiration,” Phys. Fluid, vol. 13, pp 3285-302, 2001. 
[13] D. L. Young, J. L. Huang, and T. I. Eldho, “Simulation of laminar vortex 
shedding flow past cylinders using a coupled BEM and FEM model,” 
Comput. Method Appl. Mech. Eng., vol. 190, pp 5975-5998, 2001. 
[14] C. Lei, L. Cheng, K. and Kavanagh, “A finite difference solution of the 
shear flow over a circular cylinder,” Ocean Eng, vol. 27, pp 271-90, 2000.  
  
  
Abstract—In this paper, the local grid refinement is focused by 
using a nested grid technique. The Cartesian grid numerical method is 
developed for simulating unsteady, viscous, incompressible flows 
with complex immersed boundaries. A finite volume method is used in 
conjunction with a two-step fractional-step procedure. The key aspects 
that need to be considered in developing such a nested grid solver are 
imposition of interface conditions on the inter-block and accurate 
discretization of the governing equation in cells that are with the 
inter-block as a control surface. A new interpolation procedure is 
presented which allows systematic development of a spatial 
discretization scheme that preserves the spatial accuracy of the 
underlying solver. The present nested grid method has been tested by 
two numerical examples to examine its performance in the two 
dimensional problems. The numerical examples include flow past a 
circular cylinder symmetrically installed in a Channel and flow past 
two circular cylinders with different diameters. From the numerical 
experiments, the ability of the solver to simulate flows with 
complicated immersed boundaries is demonstrated and the nested grid 
approach can efficiently speed up the numerical solutions. 
 
Keywords—local grid refinement, Cartesian grid, nested grid, 
fractional-step method.  
I. INTRODUCTION 
In the numerical simulation of complex physical phenomena, 
the crucial requirement is predictability, i.e., that the simulation 
results remain faithful to the actual physical processes. Errors 
resulting from a lack of spatial resolution are particularly 
deleterious. However, over-resolving is computationally 
expensive. As a result, how to efficiently and effectively solve 
the partial differential equations which represent the 
mathematical model of physical problems concerned becomes 
a subject of active research in numerical analysis [1], [2]. 
In general, there are two approaches to obtain accurate 
solution of PDEs. One approach is to employ high-order 
numerical method [3], and the other is to improve the resolution 
through the computational grid. Mesh refinement is desirable to 
improve spatial resolution by using uniform or non-uniform 
grids. The uniform mesh refinement is that the resulting grid 
evolution equation is generally less nonlinear and less stiff 
which becomes very efficient in conjunction with the line 
successive-overrelaxation (SOR) solver. However, the uniform 
mesh refinement is not perfect for the applications, of which the 
solution may need different resolutions for different regions. 
In this paper, we develop a structured, nested Cartesian grid 
method for simulating unsteady, viscous, incompressible flows 
with complex immersed boundaries. One drawback of adopting 
 
Y. F. Peng is with the Department of Civil Engineering, National Chi-Nan 
University, Puli, Taiwan, 545, R. O. C. (Tel: 886-49-2910960 ext. 4960; e-mail: 
yfpeng@ncnu.edu.tw). 
nested grid method as the local refinement technique is that the 
resulting nested grids are uniform and the corresponding 
evolution equations is less stiff and very efficient in 
conjunction with line-SOR. For the numerical simulations of 
flow past bluff body problems in the present study, we used an 
Immersed Boundary (IB) method where the solid object is 
represented by a distributed body force in the Navier–Stokes 
equations [4].  
The current paper will focus on describing these and other 
salient features of the numerical methodology, validating the 
accuracy and fidelity of the approach and demonstrating the 
capabilities of the solver in some complex configurations. 
II. NUMERICAL METHODOLOGY 
A. Fractional-Step Method 
We first describe the underlying solver, the fractional-step 
method, for a Cartesian mesh [5]. The governing equation is the 
unsteady, viscous, incompressible Navier–Stokes equation 
written in terms of the primitive variables. This equation is 
discretized on a Cartesian mesh using a cell-centered colocated 
(non-staggered) arrangement of the primitive variables ( p,u ). 
The integral form of dimensionless governing equations is 
given by mass conservation  
0=⋅∫ dSnuCS ,                                                                                     (1) 
and momentum conservation 
dSnuudVu
t CSCV
)( ⋅+∂
∂ ∫∫ dSnudSnp CSCS ⋅∇+−= ∫∫ )(Re1  
(2) 
This is used as the starting point for deriving a second-order 
accurate finite-volume method. In the above equations CV and 
CS denote the control-volume and control-surface, respectively, 
and n  is a unit vector normal to the control-surface. A 
second-order accurate, two-step fractional step method is used 
for advancing the solution in time. In this time-stepping scheme, 
the solution is advanced from time level “n” to “n+1” through 
an intermediate advection-diffusion step where the momentum 
equations without the pressure gradient terms are first advanced 
in time. A second-order Adams–Bashforth scheme is employed 
for the convective terms and the diffusion terms are discretized 
using an implicit Crank–Nicolson scheme. This eliminates the 
viscous stability constraint which can be quite severe in 
simulation of viscous flows. At this stage, in addition to the 
cell-center velocities which are denoted by u , we also 
introduce face-center velocities U . In a manner similar to a 
fully staggered arrangement, only the component normal to the 
cell-face is computed and stored (see Fig.1). The face-center 
Study On a Nested Cartesian Grid Method 
Yih-Ferng Peng 
  
Cells without domain interface 
   For those control volumes without domain interface, Eq. 10 is 
exactly the same as Eq. 3 of a single block domain which has 
been outlined in the previous section. By using second order 
accurate center difference method for spatial terms, the 
cell-center velocities and gradient of these velocities at the 
cell-face are computed from those adjacent cell-center 
velocities, i.e., (equation of sv (Eq. 12) is not shown) 
,2/)( PEe uuu += ,2/)( PWw uuu +=  
,2/)( PNn uuu += ,2/)( PSs uuu +=                                                  
(11) 
And 
dx
uuu
x
u
x
u WPE
we
)2()()( +−=∂
∂−∂
∂ ,  
dy
uuu
y
u
y
u SPN
sn
)2()()( +−=∂
∂−∂
∂ .                                         
(13) 
D1 cells with domain interface 
For those D1 cells with domain interface as shown in Fig.2 
(a), since Eu  and Ev  are not defined in the computational 
domain, the cell-center velocities at the east surface can not be 
computed by using Eqs. 11~12 directly, we need to computed 
velocities at the ghost cell by introducing appropriated 
interpolations first. In this study, a simple way devoted to 
calculate these ghost velocities is using averaged velocity of the 
occupied D2 cells instead, i.e.,  
,4/)( 4321 uuuuuu GE +++==                                                      (14) 
where subscript G denotes the D1 ghost cell (for instant E=G, E 
denotes the eastern cell), as shown in Fig.2 (a), which control 
volume is occupied by those four 1, 2, 3, and 4 D2 cells. With 
the use of Eq. 14, the general form of the cell-surface velocities, 
Eq. 12 can be preserved. Most importantly, the second-order 
accurate of the present numerical method are also prevented. 
P
3
2w
n
1
2
4
e
1w
E
DS
N NE
W
s
w
(a)
2W
1W
2
D1
(G)
(G)
(G)
(G)
 
1
P
S
E
D
U w
N
W
1 2
34
(1P)
(1E)
(1NE)
(1N)
(b)
2D
(G)
s
n
e
(G)
(G)
 
Fig. 2 Schematic plots of refinement cells. (a) Coarse cell. (b) 
Fine cell. 
 
That is the domain-interface processing which plays the 
essential part of the present nested grid method. In the general 
advection-diffusion equation Eq. 10, except eu  and ev  which 
has been processed in the previous paragraph, there are some 
other terms such as eU , e)x/u( ∂∂  and e)x/v( ∂∂  located at the 
block interface. Where eU  and e)x/u( ∂∂  and e)x/v( ∂∂  are 
used for computing the volume flux and momentum flux, 
respectively, from D1 to D2 cells. Although there are varied 
interpolations available, we use the volume and momentum 
flux from D2 to D1 cells instead, i.e.,  
    22211 dyUdyUdyU wwe ×+×=× ,                   
(15) 
    
=×∂
∂+×∂
∂=×∂
∂
22211 )()()( dyx
udy
x
udy
x
u
wwe
2
2
22
2
2
11 dy
dx
uudy
dx
uu WW ×−+×−                                                       (16) 
where dy1 and dy2 denote the vertical lengths of D1 and D2 cells, 
respectively. It has to noted that the use of Eqs. 15~16 can make 
sure the mass and the momentum diffusion fluxes, respectively, 
through the D1 and D2 domain interface and vice versa are 
consistent. 
D2 cells with domain interface 
For the D2 cells with domain interface as shown in Fig.2 (b), 
since Wu , and Wv  are not defined in the computational domain, 
the general form of the cell-face velocities (Eq. 12) can not be 
applied directly, we need to compute these terms by 
introducing second order accurate interpolations. Similar to the 
processing of ghost D1 cells, these ghost velocities are obtained 
by using averaged value of those adjacent velocities, i.e.,  
,4/)( 4321 uuuuuu GW +++==                                                      (17) 
where Puu 11 = , 2/)( 112 EP uuu += , 
4/)( 11113 NNEEP uuuuu +++= ,  and 2/)( 114 NP uuu += , in 
which the subscript 1P, 1E, 1N, and 1NE denote those 
corresponding D1 cell, D1 eastern, northern, and north-east cells, 
respectively, as shown in Fig.2 (b). Here, NENEEE v,u,v,u 1111  
are not defined in our computational domains, these velocities 
are again obtained from Eq. 14. 
Computing *U  and *V  
  
C. Immersed Boundary Method 
In this study, a simple concept of Immersed Boundary 
method is adopted for numerical simulation of bluff body flows 
by using a distributed body force in the Navier-Stokes 
equations instead of the existence of solid body. The governing 
equations for fluid flow are solved everywhere, including cells 
which are occupied by the solid body. The distributed body 
force is determined at every time step of the iteration by 
requiring the value of the velocity in those cells to match the 
prescribed velocity of the solid body. Similar procession has 
been applied by Ravoux et al. (2003) and they referred it as 
Embedding method. 
III. NUMERICAL  RESULTS 
In this section, two examples are presented to examine the 
performance of the proposed nested grid refinement method. 
A. Flow past a Circular Cylinder in a Channel 
d h
parabolic
profile
fixed wall
fixed wall
3h
10.5h
 
Fig. 3 Computational domain of flow past a cylinder placed 
symmetrically in a planar channel. 
 
The first test case is to validate the solver in the finite 
Reynolds number regime by simulating unsteady flow past a 
circular cylinder of diameter d placed symmetrically in a planar 
channel of height h. Fig. 3 shows a schematic of the flow 
configuration that has been simulated in this study. Parabolic 
profile is specified at the channel inlet and the two main 
parameters in this flow are the blockage ratio h/d=β  and the 
Reynolds number defined as ν/QRe =  where Q denotes the 
inlet volume flux. A systematic numerical study of this flow 
configuration over a range of parameters has been conducted 
by Chen et al. (1995) [6] and results from this study are used to 
validate our simulations. This flow shares some features with 
the case of a cylinder immersed in a free stream. In particular, 
vortex shedding is observed in this flow beyond a critical 
Reynolds numbers. However, the critical Reynolds number is a 
strong function of the blockage ratio. Furthermore, the 
development of the vortices is also significantly affected by the 
boundary layers that develop on the channel walls. Thus, 
overall this is a more complicated flow and a good test case for 
our simulation methodology.  
We first conducted a resolution study by solving the 
vortex shedding flow at Re=500 for a blockage ratio of 0.2. A 
series of grid systems including 1block, 2block, and 3block are 
used for simulation this flow. The resolution study included 
two parts, local-refined-domain inference study and grid 
independence study, which are separately conducted and 
results are collected and listed in Table 1 and Table 2, 
respectively. In Table 1, numerical results including 
dimensionless dynamics forces acting on the circular cylinder, 
mean drag force coefficient dC  and lift force amplitude Cl, and 
dimensionless vortex shedding frequency, the Strouhal number, 
St, of uniform grid systems are listed. Where B1G1 denotes a 
one block coarse uniform grid system with h.yx 020=Δ=Δ , and 
B1G2 denotes a one block finer uniform grid system with 
h.yx 010=Δ=Δ . It is noted that the numerical results are 
strongly dependent on the resolutions. The difference of Cl 
obtained by B1G1 to that from B1G2 up to 34.4%, while 
differences of dC  and St between coarse (B1G1) and finer 
(B1G2) grids are 6.8% and 5.0%, respectively. Although the 
improve numerical results of B1G2 to B1G1 are significant, the 
B1G2 grid number are four times of B1G1 and the CPU time 
can be more than 6 times of that of B1G1, which means there is 
necessary of a local refinement. To explore the 
local-refinement-domain inference on the simulated results, we 
performed a series of numerical simulations by the 2block 
method arranging the refined area around the circular cylinder. 
Eight grid systems denoted by B2D1 to B2D8 are conducted, 
the refined area of each grid system can be seen in Fig. 4 and 
the grid numbers, including coarse (G1) and finer (G2) grid 
numbers, are listed on Table 1. From the numerical results 
listed on Table 1, it is noted that refined grids around cylinder 
improve the numerical simulation results significantly. For 
instant with extra 6,000 refined grids (B2D5 in Table 1), about 
20% of the G1 grid number, the present 2block method can 
predict a closely resembled results of B1G2. The differences of 
computed dC , Cl, and St values between B1G2 and B2D5 are 
all within 1.0%. This local-refined-domain inference study not 
even demonstrates efficiency of the present nested grid method, 
but also indicates the local-refinement necessary around the 
circular cylinder.  
From the image of the local-refined-domain inference 
study, we conducted a three block grid system B3G3 for 
simulating this vortex shedding flow with high resolutions. In 
B3G3 grid system, the computational domain are divided into 3 
blocks, which arranged uniformly distribution of coarse (G1), 
finer (G2), and finest (G3) Cartesian grids, respectively, where 
G1 denotes a uniform cell with h.yx 020=Δ=Δ , G2 denotes a 
uniform cell with h.yx 010=Δ=Δ , and G3 denotes a uniform 
cell with =Δ=Δ yx  h.0050 . Computational vorticity contours 
of B3G3 are simulated and plotted on Fig. 5, in Fig. 5 the 3 
blocks are also marked. It is seen from Fig. 5 that the vorticity 
contours are distributing around those block-interfaces 
smoothly, which shows that the present nested grid method 
works smoothly even across complex and reversed flow fields. 
Numerical results of dC , Cl, and St, grid numbers, and CPU 
time of B3G3 simulations are collected, these values are listed 
on Table 2 and compared to those results or values of B1G1, 
B1G2, and B2D5. All the computations are carried out on a 
personal computer with Pentium 4 (3.4G) and Fortran 90 
compiler. As shown on Table 2 that the computational results 
are greatly improved over those of B1G1, B1G2, and B2D5. It 
is expected that computational results are closed to the grid 
independent results, although further investigations are 
necessary. For instance, we found that the simulated Cl 
differences between B1G1, B1G2, and B2D5 to that of B3G3 
are up to 39%, 7.2% and 7.9%, respectively. While the present 
nested grid method improves the coarse single-block 
  
220 230 240 250 260 270 280
Re
-0.01
0.00
0.01
0.02
0.03
0.04
0.05
0.06
Cl
Am
p
Recr = 262.6Recr = 230.7 Recr = 234.2
2
: B1G1
: B1G2
: B3G3
 
Fig. 6 2Amp,lC  as functions of Re and critical Reynolds numbers 
Recr. 
 
B. Flow past two circular cylinders with different diameters 
The second test case is flow past two cylinders with different 
diameters. In 1990, Strykowski and Sreenivasan investigated 
the suppression of the vortex shedding from a circular cylinder 
by introducing a small circular cylinder at low Reynolds 
numbers [7]. Since the experiments of Strykowski and 
Sreenivasan [7], many experimental and computational studies 
have been performed in order to control wake flows at 
supercritical Reynolds numbers. Sakamoto et al. (1991) [8] and 
Sakamoto and Haniu (1994) [9] studied the suppression of the 
fluid force acting on a square cylinder and a circular cylinder, 
respectively, at high Reynolds number in subcritical regime. 
Dalton et al. (2001) also simulated the suppression of lift force 
on a circular cylinder by a small cylinder numerically [10].  
Recently, there were numerical studies directed towards 
the flow past two cylinders of different diameter (Zhao et al., 
2005 [11], Delaunay and Kaiktsis, 2001 [12], and Yang et al., 
2001 [13]). These numerical studies were either based on the 
finite element method or finite volume method with body fitted 
grids. In this study, flow past two circular cylinders of different 
diameters is investigated numerically. The Navier-Stokes 
equations are solved using present nested grid method. The aim 
of this study is to investigate the ability of the present numerical 
method by solving the suppression of the vortex shedding flow 
behind the two-cylinder system which was kind of difficult to 
reach by a Cartesian grid method. The two cylinders considered 
in this study are shown in Fig. 7. The diameter ratio between 
the small cylinder and the large cylinder is 0.2. The Reynolds 
number based on the diameter of the cylinders is 100(80) for 
the large cylinder and 20(16) for the small cylinder. The gap 
between the small cylinder and the large cylinder is 2.0 times 
the diameter of the large cylinder. The position angle of the 
small cylinder relative to the flow direction ranges from 20o to 
40o. In all computations, a rectangular computational domain is 
used. The large cylinder is located at 5D from the inflow 
boundary. The distance between the large cylinder and the 
outgoing boundary is 20D. The two lateral boundaries are 
located at 7D away from the large cylinder. The effects of the 
position angle of the small cylinder on drag and lift coefficients, 
pressure distributions around the cylinders, the vortex shedding 
frequencies from the two cylinders and flow characteristics are 
investigated. 
 
θ
2D G3
G2
G1
D
5D 15D
7D
 
Fig. 7 Configuration of flow past two circular cylinders with 
different diameters. 
 
To validate the numerical model, uniform flow past a 
singular cylinder for the Reynolds number ranging from 10 to 
200 is first simulated. The computational domain of 25D × 14D 
was divided into two blocks. In the outer block, G1 grids with 
D.yx 10=Δ=Δ  were used to compute the outer flow. In the 
inner block of DD 46 ×  (please see Fig. 9(a)), G2 grids with 
D.yx 050=Δ=Δ  were used to compute the flow around the 
cylinder. In Fig. 8, the computed time averaged drag 
coefficients for Reynolds number from 10 to 100 are compared 
with the finite difference results by Lei et al. [14] and the finite 
element results by Ghao et al. [11]. The difference between the 
numerical results in Fig. 8 is small. 
The numerical model is then applied to study the flow past 
two circular cylinders as shown in Fig. 9. Before we discuss the 
computational results of the suppression of vortex shedding 
flow, a typical computational mesh for the flow is shown in Fig. 
9(b), the computational domain of 25D × 14D is herein divided 
into three blocks. In the outer block, G1 grids with 
D.yx 10=Δ=Δ  were used to compute the flow. In the middle 
block of DD 46 × , G2 grids with D.yx 050=Δ=Δ  were used to 
compute the flow around the main cylinder. In the inner block 
of DD. 152 × , G3 grids with D.yx 0250=Δ=Δ  were used to 
compute the flow around the control cylinder. The total cell 
number is 45200.  
 
0 10 20 30 40 50 60 70 80 90 100 110 120
Re
1.5
2.0
2.5
3.0
3.5
4.0
C
d
 
