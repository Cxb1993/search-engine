of G is therefore called the independent span-
ning trees problem of G. Till now, the ISTs
problem has been solved for several restricted
classes of interconnection networks, such as
product graphs [14], chordal rings [10,21], de-
Bruijn and Kautz graphs [7, 8], and hyper-
cubes [19, 22]. By providing the construction
scheme, the ISTs problem on recursive circu-
lant graphs is first considered in this project.
A circulant graph G(N, d), d > 2, is a sim-
ple graph (i.e., a graph without multiple edges
and self-loop) with N vertices labeled from
0 to N − 1 and two vertices x, y ∈ G(N, d)
are adjacent if and only if there is an in-
teger k with 0 6 k 6 dlogdNe − 1 such
that x ± dk ≡ y (mod N). In particular,
G(N, d) is called a recursive circulant graph
(or RC-graph for short) and possesses a re-
cursive structure when N = cdm, 1 6 c < d
and m > 1 [16, 17]. The existence of the pa-
rameter c enriches the class of RC-graphs to
be a wider class of graphs such that the num-
ber of vertices of an RC-graph need not be the
power of d. Note that G(cdm, d) can be par-
titioned into d disjoint subgraphs such that
each subgraph is isomorphic to G(cdm−1, d)
and contains exactly those vertices with the
same remainder of division by d. For exam-
ple, Figure 1 shows the graph G(16, 4). We
can easily check that the set of vertices with
the same remainder of division by 4 induces a
subgraph isomorphic to G(4, 4).
Due to the flexibility and extensibility of
RC-graphs, this family of graphs was first
introduced by Park and Chwa in [16] to
serve as a topology of interconnection net-
works. Based on their structure properties,
RC-graphs are suitable for developing algo-
rithms, such as routing algorithms [11, 17, 18]
and embedding schemes [12, 17, 18]. Besides,
RC-graphs are also easy for analyzing net-
work metrics, such as diameter [17], con-
nectivity [17] and hamiltonian-like properties
[1, 2, 4, 13,15,17,20].
As it is, G(cdm, d) is defined to be a Cayley
0
2
3
4
5
6
7
8
9
10
11
12
13
14
15 1
Figure 1: Example of recursive circulant
graph G(16, 4).
graph over the cyclic group ZN with gener-
ating set {d0, d1, . . . , ddlogdNe−1}, where dk is
called the kth jump. It is well-known that
every Cayley graph over a general group is
vertex-symmetric, and thus is regular. Let
δm denote the degree of vertices in G(cdm, d).
Then, δm = δm−1 + 2 for m > 1. In [17], the
closed form of δm is given as follows:
δm =

2m− 1, if c = 1 and d = 2;
2m, if c = 1 and d > 2;
2m+ 1, if c = 2;
2m+ 2, if c > 2.
We organize the remaining part of this pa-
per as follows. Section 2 introduces a use-
ful concept called path-decomposition Latin
square (PDLS) and gives some fundamental
properties which will facilitate our discussion.
Section 3 presents our algorithm that can con-
struct δm ISTs on G(cdm, d) with d > 3. In
Section 4, we show the correctness of our al-
gorithm. The last section contains our con-
cluding remarks.
2 Preliminaries
From now on, unless otherwise mentioned,
all arithmetics are taken modulo N(= cdm)
using the appropriate residues. We first give
2
01
2
34
5
6
78
9
10
11
12
13
14
15
0
2
3
4
5
6 7
8
9
1011
12
13
14
15
0
23
4
5
6
7
8
9
10
11
12
13
1415
0
1
2
3
4
5 6
7
89
10
11
1213
14
15
1 1
T−0 T
−
1 T
+
1 T
+
0
Figure 2: A set of independent spanning trees on G(16, 4).
I∗(Px). In particular, we denote by R =
[Px]j to mean a regular sequence R that con-
tains a specific jump j ∈ HPx as its last el-
ement. Moreover, an integer sequence S is
called an extended sequence of Px, denoted by
S = (α·j′)|[Px], if S is obtained from R = [Px]
by adding α repetitions of a jump j′ ∈ J in
the front of R.
Definition 4. Let A = a1, a2, . . . , at be a
sequence of integers. A prefix-sum of A is
defined to be a sum
∑k
i=1 ai for some k =
1, 2, . . . , t. In particular, a strict prefix-sum
is a prefix-sum satisfying k 6= t. Also, define
SA = {
∑k
i=1 ai : k = 1, 2, . . . , t−1} as the set
containing all strict prefix-sums of A.
Due to space limitations, we omit the
proofs in following propositions.
Proposition 1. For a shortest path Px, if R
and R′ are two distinct regular sequences of
Px, then SR ∩SR′ = ∅.
To demonstrate more properties related to
PDLS with respect to a shortest path Px, we
also define HPx = {j ∈ J : −j ∈ HPx}.
Proposition 2. Let x, y( 6= 0) ∈ G(cdm, d)
be two vertices such that y = x + α · j for
some jump j ∈ HPx ∩ HPy , where 1 6 α 6
d − n(Px,−j) − n(Py, j). If R = [Px] and
R′ = (α · j)|[Py]j, then SR ∩SR′ = ∅.
Proposition 3. Let x, y( 6= 0) ∈ G(cdm, d)
be two vertices such that y = x − j for some
jump j ∈ HPy \ (HPx ∪HPx). If R = [Px] and
R′ = (−j)|[Py]j, then SR ∩SR′ = ∅.
Proposition 4. Let x, y, z( 6= 0) ∈ G(cdm, d)
such that y = x+α·j and z = x+β ·j′ are two
distinct vertices for some jumps j ∈ HPy∩HP z
and j′ ∈ HPz , where 1 6 α 6 d− n(Pz,−j)−
n(Py, j) and β > 1. If R = (α · j)|[Py]j and
R′ = (β · j′)|[Pz]j′, then SR ∩SR′ = ∅.
Proposition 5. Let x, y, z( 6= 0) ∈ G(cdm, d)
such that y = x − j and z = x − j′ are two
distinct vertices for some jumps j ∈ HPy \
(HPz ∪HP z) and j′ ∈ HPz \ (HPy ∪HP y). If
R = (−j)|[Py]j and R′ = (−j′)|[Pz]j′, then
SR ∩SR′ = ∅.
Proposition 6. Let x, y, z( 6= 0) ∈ G(cdm, d)
such that y = x + α · j and z = x − j′
are two distinct vertices for some jumps j ∈
HPy ∩ HP z and j′ ∈ HPz , where 1 6 α 6
d − n(Pz,−j) − n(Py, j). If R = (α · j)|[Py]j
and R = (−j′)|[Pz]j′, then SR ∩SR′ = ∅.
3 Constructing ISTs on G(cdm, d)
with d > 3
In this section, we present our algorithm
for solving ISTs problem on RC-graphs with
d > 3. Let x be any vertex in G(cdm, d) and
suppose that x = (xmxm−1 · · ·x1x0)d is rep-
resented as an integer with base d. Then,
x = xmdm + xm−1dm−1 + · · ·+ x1d+ x0.
The following procedure called Shortest-
Path will be used to find a shortest path Px
(i.e., a shortest path between x and 0). As
a replacement for listing the vertices of Px,
4
Lemma 10. Let x(6= 0) be any vertex in
G(cdm, d) and suppose that j = sign(i) ×
dmin{i,δm−1−i} ∈ HPx and j′ = sign(i′) ×
dmin{i′,δm−1−i′} /∈ (HPx ∪ HPx) for some 0 6
i, i′ 6 δm − 1. If y = x+ α · j and z = x− j′
are two vertices in G(cdm, d), then j ∈ HP z
and α+ n(Pz,−j) + n(Py, j) = d.
The following lemma shows that every sub-
graph constructed in T is a spanning tree.
Lemma 11. For every integer i with 0 6 i 6
δm − 1, Ti is a spanning tree rooted at 0 in
G(cdm, d).
Proof. Let i′ = δm − 1− i and j = sign(i)×
dmin{i,i′}. It is obvious from Procedure Gen-
Parents that every vertex x( 6=0)∈G(cdm, d)
implies x ∈ Ti. Thus the resulting graph is a
spanning subgraph of G(cdm, d). To complete
the proof, we need to show that there exists a
unique path from every vertex x( 6= 0) to 0 in
Ti. In particular, the vertex −j is adjacent to
0 in Ti. Suppose that HPx = {j0, j1, . . . , js−1}
with |j0| < |j1| < · · · < |js−1|. Then, each
n(Px, jk), k = 0, 1, . . . , s − 1, in the short-
est path Px can be calculated by Procedure
Shortest-Path. According to j, we consider
the following cases:
Case 1: j ∈ HPx . Suppose j = jp for
some p = 0, 1, . . . , s − 1. Since jp+1 =
succ(I(Px), jp), x is adjacent to x + jp+1
in Ti by (2). Let y = x + n(Px, jp+1) ·
jp+1. Clearly, Py is a subpath of Px and
HPy = {j0, j1, . . . , jp, jp+2, . . . , js−1}. Thus,
n(Py, jk) = n(Px, jk) for every jk ∈ HPy .
Since jp ∈ HPy and jp+2 = succ(I(Py), jp), y
is adjacent to y+jp+2 in Ti by (2). Let z = y+
n(Py, jp+2) · jp+2. Clearly, Pz is a subpath of
Py and HPz = {j0, j1, . . . , jp, jp+3, . . . , js−1}.
Thus, n(Pz, jk) = n(Py, jk) for every jk ∈
HPz . Again by (2), z is adjacent to z + jp+3
in Ti. By this way, we can find the following
unique path connecting x and 0 in Ti:
Ti[x, 0] : x
jp+1=⇒
n(Px,jp+1)
(
x+ n(Px, jp+1) · jp+1
)
jp+2=⇒
n(Px,jp+2)
(
x+n(Px, jp+1)·jp+1+n(Px, jp+2)·jp+2
)
jp+3=⇒
n(Px,jp+3)
· · · · · ·
jp−1=⇒
n(Px,jp−1)
(
− n(Px, jp) · jp
)
jp=⇒
n(Px,jp)
0.
Case 2: j ∈ HPx . Suppose x has the rep-
resentation (xmxm−1 · · ·x1x0)d. By (2), x is
adjacent to x+ j in Ti. Let
α =
{
xi − bd2c if j < 0
bd2c+ 1− xi′ if j > 0
and let y = x + α · j. By Lemma 7, j ∈
HPy . Also, we have shown in Case 1 that there
exists a unique path Ti[y, 0] that connects y
and 0 in Ti. Therefore, x
j
=⇒
α y along with the
path Ti[y, 0] forms the unique path connecting
x and 0 in Ti.
Case 3: j ∈ J \ (HPx ∪HPx). By (2), x is
adjacent to x − j in Ti. Let y = x − j. By
Lemma 8, j ∈ HPy . Also, we have shown in
Case 1 that there exists a unique path Ti[y, 0]
that connects y and 0 in Ti. Therefore, x
−j−→
y along with the path Ti[y, 0] forms the unique
path connecting x and 0 in Ti. 
We now show the independence of ISTs in
T .
Lemma 12. For 0 6 i, i′ 6 δm−1 and i 6= i′,
Ti and Ti′ are ISTs rooted at 0 in G(cdm, d) .
Proof. Let x(6= 0) be any vertex in G(cdm, d)
and let j = sign(i) × dmin{i,δm−1−i} and j′ =
sign(i′)×dmin{i′,δm−1−i′}. We consider the fol-
lowing cases:
Case 1: j, j′ ∈ HPx . Ti[x, 0] ||Ti′ [x, 0] di-
rectly follows from Proposition 1.
Case 2: j ∈ HPx and j′ ∈ HPx . By
Lemma 11, Ti[x, 0] takes j as its last jump
and there is a vertex y = x + α · j′ such
that x
j′
=⇒
α y along with the path Ti′ [y, 0]
forms the unique path connecting x and 0 in
Ti′ . In particular, Ti′ [y, 0] takes j′ as its last
jump. By Lemma 7, we have j′ ∈ HPy and
α = d− n(Px,−j′)− n(Py, j′). Let R = [Px]j
and R′ = (α · j′)|[Py]j′ . Since j′ ∈ HPx ∩HPy ,
6
