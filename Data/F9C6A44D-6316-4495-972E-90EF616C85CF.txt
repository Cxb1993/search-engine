  2 
中   華   民   國  99  年  12  月 6   日 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
建構一個 SemPIF 語意式電腦規範互通的架構, 在這個 SemPIF 的規範架構平台，電腦的規範
可以運用語意式規範語言來加以表示。我們可以更進一步利用 meta-PIF 的概念（也就是規範
的規範）來提供規範之間整合時的管理與優先度的設定以便於規範之間衝突無法解決的窘境。
我們落實個人資料分享與保護及著作權數位內容保護可以利用這個 SemPIF 的規範架構平台
來實踐。 
 
我們已經將研究成果發表於 2 項知名的國際研討會，RuleML09 與 Web Intelligence (WI) 10
與一個和語意網有關的專書 Introduction to the Semantic Web: Concepts, Technologies and 
Applications 篇章。另有一篇論文已完成投稿的工作，而另外一篇論文則在修定並且準備再投
稿。 
 
附件二 
  4 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價值
（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以 500
字為限） 
 
本研究案的學術成果的意義與價值在於解決 Web(全球資訊網）資料流通、分享、與保護的
問題。並且能夠透過語意網的本體論和規則兩大知識系統表達與具體落實執行能力讓電腦
軟體可以正確解讀出具有語意式的 Web規範。利用標準的 Web語言如 OWL, RIF 等來表示隱
私權保護與著作權保護的規範可以讓規範所需要表達語意可以更明確以避免混淆不清的窘
境。除了可以提升原有 XML為基礎的權力表達語言如 ODRL, XrML, P3P, XACML 的缺失之外
也可以讓現有的規範語言如 Rein, KaOS 可以透過這個 SemPIF 互通語言的架構來達成互通
與規範整合的目的。 
 
語意式電腦規範的價值在於找出人類法治規範可以落實到 Web 環境中自動化執行的概念與
規則讓電腦系統可以有效且自動化的來解讀和執行以避免完全用人類手動式處理規範的困
境。除此之外可以達成資訊有效分享與保護的目的，系統可以在資料分享與保護時在事先
與進行中的程序來加以檢驗，避免事後的冗長訴訟程序與資料不當揭露與使用所產生的副
作用。 
 
本研究案的進一步發展可以將參照個人資料保護法與著作權保護法等法治規範將相對應的
語意式電腦規範運用到雲端運算的環境中，來解決雲端環境資料分享與保護的目的，讓雲
端中資料的個人資料保護與數位內容的著作權保護可以透過此電腦規範的表示與執行得到
適當的解決。 
 
 
 
 
 
 
 
 附件四 
  6 
二、與會心得 
對於本研討(IEEE/WIC/ACM Web 智慧與智慧型代理者技術國際研討會)會計畫主持人在過去幾年都
是這個研討會 Web Intelligence (WI)的論文評審委員(Program Committee)。這個研討會雖然在
語意網和智慧型代理者的知名度沒有 International Semantic Web Conference (ISWC), World 
Wide Web (WWW), 以及 Autonomous Agent and Multi-Agent System (AAMAS)來得大。但是根據
往年和今年的經驗總論文的投稿數量也都可以達到 300-400篇左右。主要的投稿來源還是來自於
大陸的學者以及分佈在世界各地大學與研究單位的大陸學者。這個國際研討會的論文有被收錄到
IEEE Explore的數位圖書資料庫，因此這也是吸引人投稿的因素之一。除此之外，本國際研討會
也能夠每年分別在世界的五大洲選定國家來舉辦。整體來說研討會的論文主要議題還是在 Web 
Intelligence (WI)的部分，因此對於 Intelligent Agent這一部份的學術成果發表顯得比較弱勢。
實際上論文審稿作業也是 Web Intelligence, Intelligent Agent 分開審稿的方式來進行。因此
其審稿委員的聘任和論文的挑選與評定也是分別去進行的。除此之外，在這個研討會發表的論文
如果有獲得前幾名的殊榮還有機會在修稿並延伸之後在 WIAT的期刊刊登。 
三、考察參觀活動(無是項活動者略) 
無。 
四、建議 
這幾年隨著大陸經濟起飛與學者國際化參與意願的提升，使得各項研討會都可以看到大陸學者的
大量參與並且發表論文。除了他們在過去幾年在海外求學之後定居於當地形成一個有利的學術網
絡之外，大陸的內陸學者只要有意願並且經費許可的情況之下都會主動的出國並且參加。除此之
外，世界知名的電腦科學研討會也陸陸續續在組織運作上佔有很重要的一席之地，這是我們台灣
學者必頇要體認的一項事實。 
五、攜回資料名稱及內容 
研討會論文議事錄一本與全論文集光碟片一張。 
六、其他 
 
 
 
Challenges for Rule Systems on the Web 5
competitions, only a minimum set of requirements was given for evaluating the
submitted demo systems. The criteria were that declarative rules should have
to play a central role in the application, and that the demo systems should
preferably be embedded into a Web-based or distributed environment, etc. The
Challenge winners were selected and 1st and 2nd places were awarded with pres-
tigious prizes.
The RuleML-2009 Challenge follows similar processes and the evaluation cri-
teria are the same as in the previous two events. But we consider inviting more
participants to submit their rule related systems in this year. In the RuleML-2009
Challenge, we organize events as two tracks, one is by invitation, to demonstrate
a commercial or open source environment for its rule systems, and the other is
open to general public for a real system competition. In addition to the demo
systems with reports submitted to the RuleML Challenge website2, it is also
possible to submit demo papers describing research and technical details, and
the selected papers will be published in additional special Challenge proceed-
ings, such as CEURS. A ﬁnal selection of revised papers from the Challenge
proceedings will be resubmitted to a special issue of a journal for publishing.
In this RuleML Challenge survey paper, we point out the possible research and
implementation challenges for rule systems on the Web that are related to the
Challenge competition events in the forthcoming years.
1.1 Challenges for Rule Systems
Rules as human understandable policies are everywhere in our daily life to im-
pose human behaviors. For example, before you take a ﬂight, you need to read
airline check-in and boarding time rules in the policy statement of your booking
itinerary receipt. If you violate any rule you might miss your plane. Related
situations in this scenario of using rules are early-bird conference registration,
special discount hotel reservation, payment and refund policies, etc. These rules
as policies are represented as human understandable natural language. However,
we still need to transform these natural language policies into computer pro-
gramming rules for computer system understanding and automatic execution.
Sometimes, not all of the rules imposed on a human are necessarily and possi-
bly represented as software programs to accomplish automatic execution in our
computer systems. Usually, these rules restrict only human behavior, without di-
rect connection with any software system. For example, we have law for privacy
protection and digital rights management but not all of privacy rights and dig-
ital rights for human are required to be represented and evaluated in computer
systems.
There are several challenges while implementing rule systems on the Web.
Rules should be allowed to cope with the data model, such as RDB/OO-DB, or
a knowledge base, such as an ontology, to permit query and modiﬁcation ser-
vices on the data models. Policies imposed on human behavior are declared in
some policy language by the combination of rules and an ontology (or database),
and these policies can be automatically interpreted and executed by a computer.
2 http://ruleml-challenge.cs.nccu.edu.tw
Challenges for Rule Systems on the Web 7
base. Without reactive rules, we cannot update a database or knowledge base
by using deductive rules only.
Reactive rules are further subdivided into event-condition-action (ECA) rules
and production rules. ECA rules are rules of the form ON Event IF Condition
DO Action, where Action should be executed if the Event occurs, provided that
the Condition holds. Production rules are rules of the form IF Condition DO
Action, where Condition queries the working memory containing the data on
which the rules operate. Action should be executed whenever a change to the
underlying database makes Condition true [2].
In reactive rules, we verify the satisfaction of conditions and also execute the
action whenever message arrival or timer event triggers the rule. Declarative
rules extend their executive power by the combination of rule semantics and
imperative programming in the action part.
2.2 Rules and Databases
As early as 1980, Ullman pointed out the principles of the integration of database
and knowledge base systems [3] [4]. The foundation of database is relation algebra
with SQL as a declarative database query language. However, ﬁrst order logic
(FOL) was also proposed as a way to represent “knowledge” and as a language
for expressing operations on relations. The roots of relational theory is logic, and
so we cannot deny that the foundation of relational DBMS is based on logic [5].
The simplest data model of FOL is “Datalog”, which was coined to suggest a
version of Prolog suitable for database systems where it does not allow function
symbols in Datalog’s predicate arguments. In the IDEA methodology, deductive
rules and reactive rules were built on top of the object-oriented (OO) database
as a way to express operations on the OO data model [6].
2.3 Rules and Ontologies
Concepts of the Semantic Web have been proposed by Tim Berners-Lee et al.
since 2001 [7]. Graph-based RDF(S), including RDF and RDF-schema were the
ﬁrst standardized ontology languages to represent an ontology’s schema and
instances. Then, standardized ontology languages based on Description Logic
(DL) [8], i.e., OWL-DL (later OWL 2), enhanced RDF(S) that plays the major
role of knowledge representation for the Semantic Web. However, the logic pro-
gram (LP) rule language was also introduced because of the limited expressive
power of a DL-based ontology language in some situations, such as property
chaining, and the manipulation of events, states, and actions.
Initially, the “rule” layer was laid on top of the “ontology” layer in the Seman-
tic Web layered architecture but it has undergone several revisions reﬂecting the
evolution of layers4. The most recent layered architecture of rule and ontology
layers is one where they sit side by side to reﬂect their equal status but with some
basic assumption diﬀerences between ontology and rule, such as the open world
4 http://www.w3.org/2007/03/layerCake.svg
Challenges for Rule Systems on the Web 9
Description Logic Program (DLP) [12] and SWRL are two well-known tightly
coupled integration models. In general, both DL and LP are subsets of FOL in
knowledge representation but each has its own part that cannot be expressed in
the other part. DLP only takes intersection of DL and LP so knowledge repre-
sentation in this model is limited. In SWRL, the major knowledge representation
is OWL-DL with additional Datalog rules from LP to enhance the lack of prop-
erty chaining in OWL-DL. In SWRL, DL-safe is the condition where variables
occurring in each rule’s head are also required to occur in its body to ensure
the decidable reasoning of the rule engine. The availability of SWRL rule and
ontology integration development in the popular Prote´ge´ environment8 makes
the SWRL model the most attractive one for people to use.
In the loosely coupled integration, DL-log [13], AL-log [14], and DL+Log [15]
are three well-known models. In these models, rules are extended to Horn rules.
Besides, not all of the terms in rules are required from ontology so rule module in
these models provides more powerful knowledge representation and rule reason-
ing than the ones in SWRL. However, none of loosely coupled integration models
provide standardized XML markup languages and a development environment,
as SWRL does in Prote´ge´. Obviously, this will be a challenge to represent and
execute rule systems for loosely coupled integration on the Web. Moreover, the
reactive rules [16] have not been seriously considered in all of the ontology and
rule integration models. This will be the biggest impediment to implement rule
and ontology systems for distributed applications on the Web.
3 Policy as Ontology and/or Rule
Since computers understand the data semantics in the Semantic Web, people
are much more satisﬁed with the search results when a semantic search engine is
fully developed. Policy-aware Web extends Semantic Web that provides comput-
erized policies, such as privacy protection or digital rights management policies
for computers to understand and execute automatically [17]. However, pure rule
and/or ontology languages are not explicit enough to represent policies that reg-
ulate human behavior in the real world. We need a well-deﬁned policy language
that describes the concepts of rights, obligation, conditions, resources, etc. be-
tween resource owner and user to represent and execute access control policies
of resources on the Web.
Following [18], policies are considered as knowledge bases, allowing deontic
classes, properties, and access control rules. This has the advantage that many
operations are automated, thereby reducing ad hoc program coding to a mini-
mum and enabling automated documentation. Regulations imposed on human
behavior and activity are simulated by computerized policies that are speciﬁed
by using policy languages, such as Rei or KAoS [19]. The semantics of these
policy languages is only DL-based, and needs to be further extended by using
LP-based semantics of rule languages, such as RuleML, RIF or Protune [20].
Recently, AIR (AMORD In RDF) is a policy language that considers using both
8 http://protege.stanford.edu/
Challenges for Rule Systems on the Web 11
contains reasoning functions, including task and inference, domain schema and
knowledge base. The controller module handles interactions with the user and
functions in the application model. The view module provides output for the
user. The Semantic Web system development framework usually includes two
development parts, one is for ontology and the other is for rule. For example,
Prote´ge´ has been successfully developed for ontology and rule, such as Jena11
and Jess12. The Jena rule engine was integrated in the Semantic Web system
development framework Prote´ge´ for having rule-based inference with the access
to knowledge base in the ontologies of RDF and OWL13. In addition, the sys-
tem for development of ontology and rule combination, such as SWRL is also
available in the Prote´ge´ with SWRLTab14.
4.2 Standalone Rule Systems
A number of standalone rule systems have been investigated by the RIF Working
Group15. A rule system is deﬁned as a piece of software that implements or
supports a rule language in some way (e.g., a rule engine or a rule editor). Among
the RIF list, some rule systems are developed for commercial usage but others
are for open source purposes. Based on the classiﬁcation of rule types, some rule
systems are developed for a deductive rule engine but others are implemented
for a reactive rule engine.
Commercial Rule Systems. IBM ILOG Business Rule Management Systems
(BRMS)16 provides a complete BRMS for analysts, architects and developers,
featuring tools of rule authoring and rule management besides its rule engine.
In fact, ILOG JRules is one of the best-known production rule systems. JBoss
Drools17 Enterprise BRMS is a well-known open source rule system which pro-
vides perfect integration with the service-oriented architecture (SOA) Web ser-
vice solutions. On the other hand, existing rule systems, such as Prova18 and
ruleCore19 are also available for ECA rules inference. For more details about
reactive rules on the Web please refer to [16].
Some commercial rule systems are developed from a matured prototype of
the Semantic Web middleware, such as OntoBroker20. Oracle Business Rules
integrates with the Business Process Execution Language (BPEL) and tries to
enrich decision making for processes in the SOA21. In general, commercial rule
11 http://jena.sourceforge.net/
12 http://www.jessrules.com/
13 http://protege.stanford.edu/plugins/owl/jena-integration.html
14 http://protege.cim3.net/cgi-bin/wiki.pl?SWRLTab
15 http://www.w3.org/2005/rules/wg/wiki/List of Rule Systems
16 http://ilog.com/products/businessrules/index.cfm
17 http://www.jboss.com
18 http://www.prova.ws
19 http://www.rulecore.com
20 http://www.ontoprise.de
21 http://www.oracle.com/technology/products/ias/business rules/index.html
Challenges for Rule Systems on the Web 13
system. However, when rules and facts are created in diﬀerent rule systems and
distributed on the Web, we need a rule standard exchange language for the inter-
change of heterogeneous rule formats. Otherwise, we cannot implement an appli-
cation, such as composite (semantic) web services that might require rules created
and distributed in the diﬀerent rule systems [21]. Therefore, a common rule for-
mat facilitates decisionmaking on the network environmentwithmultiple rule for-
mats. For example, the therapeutic guideline recommendation rules for diabetes
type 2 are constructed with the combination of clinical and therapeutic criteria as
the condition part and therapeutic options as the actions. When users or organi-
zations switch rules from one rule product to another, they can employ the rule
interchange technologies without re-developing their rules.
Proposed rule interchange languages include RuleML [1], REWERSE Rule
Markup Language (R2ML) [24], and W3C RIF26, where R2ML attempts at in-
tegrating aspects of RuleML, SWRL, and Object Constraint Language (OCL).
The most recent W3C RIF27 was proposed to achieve the objective of rules in-
terchange and interoperability for major rule systems. These rule interchange
languages provide XML schemata to guarantee the comparability of rule syntax
and semantics from source to target rule systems and vice versa. The other im-
portant rule language is Semantics of Business Vocabulary and Business Rules
(SBVR), submitted by Business Rule Group (BRG) to OMG on the standard-
ization of semantics for business vocabulary and rules28.
One of the challenges to apply rule systems on the Web is to ﬁnalize a rule
interchange language to provide a rule interchange framework and format of
rules for current major rule systems. When agents proceed towards a two way
rule interchange, a rule interchange language with the framework ensures the
compatibility of rules’ syntax and semantics between rule systems. The related
challenge is the requirement to have a software development system and a run-
time environment for people to build, design, and implement standardized rule
interchange formats to automatically extract and transform rules from diﬀerent
rule systems on the Web.
6 Use Cases with Rules
Rules are used to express computational or business logic in the information
systems which do not have explicit control ﬂow, so rules are more suitable for
execution in the dynamic situations for business collaborations. Along with the
rapid development of the Web, multiparty collaborations for carrying out busi-
ness services in this environment are more signiﬁcant than ever before. For ex-
ample, when a credit card transaction is requested from a merchant, a customer
needs a payment authorization from the merchant and the card issuer (the bank)
to accomplish a successful transaction service. In this case, both merchant and
bank have their own policies as rules to conduct their authorization processes.
26 http://www.w3.org/TR/rif-bld/
27 http://www.w3.org/2005/rules/wiki/RIF Working Group
28 http://www.businessrulesgroup.org/sbvr.shtml
Challenges for Rule Systems on the Web 15
Acknowledgements
This research was partially supported by the NSC Taiwan under Grant No. NSC
95-2221-E004-001-MY3 and NSC 98-2918-E-004-003.
References
1. Boley, H.: The ruleML family of web rule languages. In: Alferes, J.J., Bailey, J.,
May, W., Schwertel, U. (eds.) PPSWR 2006. LNCS, vol. 4187, pp. 1–17. Springer,
Heidelberg (2006)
2. Boley, H., Kifer, M., Pa˘traˆnjan, P.-L., Polleres, A.: Rule interchange on the web.
In: Antoniou, G., Aßmann, U., Baroglio, C., Decker, S., Henze, N., Patranjan, P.-
L., Tolksdorf, R. (eds.) Reasoning Web. LNCS, vol. 4636, pp. 269–309. Springer,
Heidelberg (2007)
3. Ullman, D.J.: Principles of Database and Knowledge-Base Systems Volume I. Com-
puter Science Press, Rockville (1988)
4. Ullman, D.J.: Principles of Database and Knowledge-Base Systems Volume II.
Computer Science Press, Rockville (1989)
5. Date, C.J.: Logic and Databases: The Roots of Relational Theory. Traﬀord Pub-
lishing (2007)
6. Ceri, S., Fraternali, P.: Designing Database Applications with Objects and Rules:
The IDEA Methodology. Addison-Wesley, Reading (1997)
7. Berners-Lee, T., et al.: The semantic web. Scientiﬁc American (2001)
8. Brachman, J.R., Levesque, H.J.: Knowledge Representation and Reasoning. Mor-
gan Kaufmann, San Francisco (2004)
9. Patel-Schneider, F.P., Horrocks, I.: A comparison of two modelling paradigms in
the semantic web. Journal of Web Semantics, 240–250 (2007)
10. Horrocks, I., et al.: SWRL: A semantic web rule language combining OWL and
RuleML (2004)
11. Maluszynski, J.: Hybrid integration of rules and DL-based ontologies. In: Maluszyn-
ski, J. (ed.) Combining Rules and Ontologies. A survey. EU FP6 Network of Ex-
cellence (NoE), pp. 55–72. REWERSE (2005)
12. Grosof, N.B., et al.: Description logic programs: Combining logic programs with
description logic. In: World Wide Web 2003, Budapest, Hungary, pp. 48–65 (2003)
13. Motik, B., Sattler, U., Studer, R.: Query answering for OWL-DL with rules. In:
McIlraith, S.A., Plexousakis, D., van Harmelen, F. (eds.) ISWC 2004. LNCS,
vol. 3298, pp. 549–563. Springer, Heidelberg (2004)
14. Donini, M.F., et al.: AL-log: Integrating datalog and description logics. Journal of
Intelligent Information Systems 10, 227–252 (1998)
15. Rosati, R.: DL+log: Tight integration of description logics and disjunctive dat-
alog. In: Proc. of the 10th International Conference on Principles of Knowledge
Representation and Reasoning, KR (2006)
16. Berstel, B., Bonnard, P., Bry, F., Eckert, M., Pa˘traˆnjan, P.-L.: Reactive rules on the
web. In: Antoniou, G., Aßmann, U., Baroglio, C., Decker, S., Henze, N., Patranjan,
P.-L., Tolksdorf, R. (eds.) Reasoning Web. LNCS, vol. 4636, pp. 183–239. Springer,
Heidelberg (2007)
17. Weitzner, D.J., et al.: Creating a policy-aware web: Discretionary, rule-based ac-
cess for the world wide web. In: Ferrari, E., Thuraisingham, B. (eds.) Web and
Information Security, pp. 1–31. Idea Group Inc., USA (2006)
SemPIF: A Semantic Meta-Policy Interchange
Format for Multiple Web Policies
Yuh-Jong Hu
Dept. of Computer Science
NCCU, Taipei, Taiwan
hu AT cs.nccu.edu.tw
Harold Boley
IIT – e-Business,
NRC-CNRC, Canada,
Harold.Boley AT nrc.gc.ca
Abstract—We propose a semantics-enabled layered policy
architecture for the exchange and management of multiple
policies created by different policy languages on the Web. This
architecture consists of four layers: Unifying Logic (UNL), Policy
Interchange Format (PIF), Privacy Protection/DRM (PPD), and
Domain Speciﬁc Applications (DSA). A meta-Policy Interchange
Format (meta-PIF) layer is also introduced, side by side with
the corresponding PIF layer, allowing agents in the facilitator
to provide uniform services of interchange, reconciliation, and
combination of policies. This SemPIF architecture extends W3C’s
Semantic Web architecture to permit the reuse of earlier work. A
scenario of agents in the facilitator employing SemPIF for Digital
Rights Management (DRM) and privacy protection policies on
digital library subscription services will be demonstrated.
Keywords-semantic web; ontology and rule; computer policy;
privacy protection; digital rights management
I. INTRODUCTION
In the Semantic Web, information is given well-deﬁned
meaning to better enable computers and people to work in
cooperation. The well-known Semantic Web layered archi-
tecture1 has undergone revisions reﬂecting the evolution of
layers such as the Description Logic (DL)-based ontology
language OWL [1], the Horn Logic (HL)-based rule language
RIF [2], and their relationship. On the other hand, policy
languages, such as Rei [3], KAoS [4], Protune [5], have also
been proposed – on the basis of DL and LP – to allow
agents understand policies and to enforce these policies as
intended by their semantics. However, the semantic bases of
policy languages vary considerably, ranging from DL to HL
to Logic Programming (LP), e.g. leading to different stances
w.r.t. the unique name assumption (UNA) and the closed world
assumption (CWA) [6]. This makes policies created in these
policy languages hard to interchange and combine with each
other.
Policies are formulated and treated as knowledge bases, i.e.
ontologies and rules (O +R). Many operations can be auto-
mated, thereby reducing ad-hoc program coding to a minimum
and enabling automated documentation [5]. Policy frameworks
also need to support interoperability. Moreover, the context of
a policy is itself described in a machine-understandable way.
1http://www.w3.org/2007/03/layerCake.svg
Therefore, we propose a semantics-enabled policy architecture
consisting of four layers: Unifying Logic (UNL), Policy/meta-
Policy Interchange Format (PIF/meta-PIF), Privacy Protec-
tion/DRM (PPD), and Domain Speciﬁc Applications (DSA).
Here UNL directly corresponds to the layer “Unifying Logic”
of the most recent version of the Semantic Web architecture.
We also introduce a meta-PIF layer, side by side with the
corresponding PIF layer, allowing software agents in the fa-
cilitator, to provide the management functions of interchange,
reconciliation, and combination of policies. The Policy Web
architecture can be viewed as an extension of the Semantic
Web architecture shown as Fig. 1.
Fig. 1. SemPIF: A semantics-enabled layered policy model centered on
semantic policy interchange format (PIF) and meta-PIF.
PIF is built on DL-based ontologies and LP-based rules,
i.e. O +R, that allow agents in the facilitator to support
interchange services of policies created from different policy
languages. In addition, we may use meta-PIF to specify meta-
policies for managing policies created from different policy
languages. A meta-policy is a policy about policies that
provides a set of rules for realizing services needed for the
management of policies. Moreover, a meta-policy consists of
a set of rules for setting up the priority of polices to coordinate,
2010 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology
978-0-7695-4191-4/10 $26.00 © 2010 IEEE
DOI 10.1109/WI-IAT.2010.238
302
B. Policy Interchange Format
The PIF layer consists of regular DL-based policy lan-
guages, such as Rei, KAoS; or Horn-based policy languages,
such as EPAL [15], and XML-syntax policy languages, such
as XACML [16]. P3P and EPAL were proposed as policy
languages for privacy protection in the corresponding client-
server and server-server models [17] [18]. As REL sublayer,
ODRL and XrML were proposed for designing DRM poli-
cies [19] [20]. DL-based or Horn-based logic can be used as
foundations to underpin these RELs with explicitly deﬁned
semantics for policy languages.
A policy’s explicit representation in terms of ontologies
or rules depends on what the underlying logic foundation of
your policy language is. If policies are created from a DL-
based policy language, such as Rei or KAoS, then ordinary
policies are shown as T Box ontology schemas and ABox
instances. Otherwise, with policies created from LP-based
policy languages, such as EPAL, ordinary policies are sets
of rules and facts using unary or binary predicates.
These policy languages in the PIF layer do not fully utilize
the syntax and semantics expressive power of OWL or RDF(S)
shown in the SWLA. Therefore, we do not expect these policy
languages to be able to leverage the power of existing ontology
or rule languages. Another restriction is policies created from
different policy languages might not be able to interchange or
negotiate with each other. This calls for the use of SemPIF to
achieve policy interchange, combination, reconciliation, and
negotiation.
C. Privacy Protection and DRM
Privacy protection and DRM are introduced as independent
but intertwined layers on top of PIF / meta-PIF and the
Trust layer (see Fig. 1). This relationship reﬂects that access
rights enforcements for these two domains are closely related
with each other. In [21], the authors proposed that a DRM
system should consider user-desirable privacy rights indicated
in the Fair Information Principles (FIP), such as data collec-
tion, retention, use, disclosure, and destruction, etc., when it
enforces privacy protection policies. Otherwise, user privacy
rights might be violated. A scenario will be demonstrated to
show how agents in the facilitator employ SemPIF to integrate
DRM and privacy protection policies (see section III).
III. A SCENARIO OF DIGITAL LIBRARY SUBSCRIPTION
Protection policies are created from various policy lan-
guages, such as ODRL, P3P, XACML, and EPAL, for enforc-
ing DRM and privacy protection. This access-control scenario
is extended from policy-aware access control for the open
Web environment [22]. Agents in the facilitator use PIF-based
policies to provide services of integrating semantics-enabled
protection policies between a client and a server. Moreover,
Agents use meta-PIF-based policies to manage policies, which
permits clients and a server to compromise on their respective
rights and obligations(see Fig. 3).
Fig. 3. Agents in the facilitator provide policy interchange services with PIF-
based policies and policy management services with meta-PIF-based policies
A. Web server’s policies
The NCCU university library has subscribed to IEEE,
ACM , and Springer digital library services, which provide
a set of eJournal article access rights for authorized students
and staff. There are two types of policy for an IEEE Web
server: one for DRM and the other for the declaration of
privacy statements.
1) Policies in the IEEE server: The IEEE publisher
has two PIF-based policies: policy(drm1− IEEE) for
DRM and policy(pp1− IEEE) for privacy declaration.
policy(drm1− IEEE) indicates that the policy’s name is
drm1-IEEE, which corresponds to a URI as a policy indicator
for agents to apply a meta-PIF policy to manage it. The pred-
icates of each RIF rule are speciﬁed in PIF-based ontologies
(see Fig. 4 and Fig. 5).
• policy(drm1− IEEE):
If a student owns a valid student ID issued by a
department of a university, e.g. a registrar, and its library
is one of the subscribers on the IEEE publisher’s list,
then the student is endowed with DRM usage rights
{download, view, print} for eJournals from a Web
server of the IEEE publisher’s delegation.
?st#Student∧?id#StudentID∧?st[own →?id]
∧?uni[nccuHasPartR →?rg]∧?st[enrolledAt →?uni]
∧?rg[issue →?id]∧?uni[nccuhasPartN →?lib]
∧?lib[subscribedTo → IEEE]
∧IEEE[hasPublished →?ejr]
∧IEEE[endowedWith →?rgt]∧?rgt[appliedTo →?ejr]
∧IEEE[delegate →?st] =⇒?st[endowedWith →?d]
∧?st[endowedWith →?v] ∧?st[endowedWith →?p]
∧?d#Download∧?d[appliedTo →?ejr]
∧?v#View∧?v[appliedTo →?ejr]
∧?p#Print∧?p[appliedTo →?ejr].
• policy(pp1− IEEE):
If a person is endowed with DRM usage rights from a
Web server of the IEEE’s publisher and this publisher
has the purpose of enforcing DRM control for collecting,
304
Fig. 5. A PIF-based ontology for DRM policies
PIF-based policies. The policy itself is introduced as a
resource with respective users, rights, and conditions, etc.
for agents to enforce its policy management services.
• Meta-PIF is a meta-policy language for PIF and only
provides management services for PIF-based policies.
If meta-PIF attempts to provide an interchange format
for different meta-policies in PIF, then we also have to
provide policy management interoperability services for
different policy languages. This requires further study.
B. Agents in the facilitator enable meta-PIF policies
We use P3P basic vocabularies to specify data owner (or
subject), user (or object), type, right, obligation as
ontology classes with associated properties to formalize the
semantics of privacy protection [10]. Furthermore, we also use
Datalog-based rules to decide whether a Web server is allowed
to collect, retain, or disclose a particular client’s proﬁles
and digital traces. Policies are deﬁned as a combination of
O +R. In order to unify policies from a client and a server,
we allow agents in the facilitator to collect client and server’s
ontologies, and to enable SemPIF policy transformation and
management services shown as follows:
1) Ontologies mapping and aligning
We map and align vocabularies from domain dependent
ontologies of DRM and privacy protection policies.
In Section III scenario, the vocabularies of class
”Student, Publisher” in policy(drm1− IEEE)
and policy(pp1− IEEE) correspond to
”WebClient, WebServer” vocabularies of class
in policy(pp3− John) to policy(pp4− John).
Furthermore, we align the ontology schemas constructed
with the vocabularies of class and property.
2) Semantics mediation and uniﬁcation
We mediate and unify the semantic differences of
vocabularies and schemas in the ontologies belong-
ing to different protection policies. For example, a
condition of Retain[hasDuration → =2Month] in the
policy(pp1− IEEE) corresponds to a condition of
”retention period less than fourteen days” in the
policy(pp4− John).
3) Conﬂicts resolving
Agents initiate the reconciliation processes between
conﬂicting policies using the meta-PIF framework.
In this example, IEEE declares its intention to
collect, retain, and disclose a Web user’s data in
the policy(pp1− IEEE) for two months. The data
include a Web user’s proﬁles and digital traces.
Web user John does not allow an IEEE Web
server to disclose his personal proﬁle to the other
partners. Thus, policies between policy(pp1− IEEE)
and policy(pp3− John), policy(pp4− John) are
inconsistent. Agents enable a policy priority-setting with
meta-PIF-based policies to avoid the policy conﬂicts.
In this example, an agent gives a higher priority to a
client’s policy(pp3− John) and policy(pp5− John)
than to a server’s policy(pp1− IEEE). The
defeasible logic of a meta-PIF’s expression,
Overrides(policy(?pid1), policy(?pid2)),
for resolving conﬂicts of policies is a possible
solution, where policy(?pid1) is bound to
policy(pp3− John) and policy(pp4− John);
policy(?pid2) is bound to policy(pp1− IEEE). This
negotiation protocol requires further study.
306
Unifying Semantic Privacy Protection Web Policies for
the Digital Rights Management (DRM) System
Yuh-Jong Hu
Dept. of Computer Science,
National Chengchi University, Taipei, Taiwan
hu@cs.nccu.edu.tw
Abstract
There are several right expression languages (RELs) for the information model of data or content
protection representation on the Web. For example, P3P/EPAL exists for privacy data protection
and ODRL/XrML is used for digital rights control in the digital rights management (DRM) system.
However, these XML-based RELs lack the ability to express the semantics of the web protection policies
unambiguously enough for as a software program to process them automatically. We need declarative
semantics-enabled policies formulated as knowledge bases, i.e., ontologies and/or rules to solve this
problem. Here, we consider employing a combination of ontologies and rules as a semantic model of
the REL so that the power of Description Logic (DL) for ontologies and Logic Program (LP) for rules
can be leveraged simultaneously. In fact, using different ontology and rule O +R combinations, such
as DLP, SWRL, and OWL 2 RL for the RELs implies variant semantic expressions that can be derived
from DL and LP. Certainly, a semantic model of the REL based on O +R will affect the robustness
of semantics fulfillment for a protection policy. We propose a semantics-enabled policy framework,
where privacy protection policies are unified with the digital rights policies in the DRM system. The
customizable privacy protection of the DRM system satisfies a server’s privacy protection promise to
its users.
1 Introduction
We envision a promising future for the use of standardized rights expression languages (RELs) for privacy
protection policy’s representations in the digital rights management (DRM) system. The objective of a
DRM system is to allow the legal sharing of digital content with a content owner’s consent. In addition,
we expect that this DRM system should also protect each content user’s privacy rights. It will be a grand
challenge to use RELs, such as XACML, for access control policies with an additional protection of a
user’s privacy in the DRM system . Moreover, we can enforce the web protection policies in a machine for
digital content and personal information access control without too much human intervention. Several
RELs, such as ODRL and P3P already have the capacity to represent digital content control policies in a
digital rights license agreement for a server and privacy protection policies for a client. More specifically,
ODRL and XrML have been proposed as RELs to express the digital content usage contracts in the
DRM system [ContentGuard, 2002] [Guth & Iannella, 2005b]. P3P and EPAL are other RELs used to
express privacy statements in protection policies, in order for a server to fulfil its privacy protection
promises to its users regarding information disclosure [Anto´n et al., 2007].
The goal of this chapter is to resolve the lack of the formal semantics problem in RELs in web
policies’ representation and enforcement as we design privacy protection policies in the DRM system.
Current de facto RELs, such as P3P, ODRL, XACML, etc usually exist semantic ambiguity in the
representation of license agreements and access control policies. Instead of using hard-coded computer
algorithms or natural language descriptions, we propose a unifying formal semantic model that can be
overlaid on the existing RELs to express and enforce the access control web policies. Under this unifying
formal semantic model, the semantics-enabled REL can be used to express license agreements based on
associated web policies to achieve rights protection when enforced by software programs without causing
ambiguity.
3 Taxonomy of policy languages
The term “policy” encompasses different notions and usages, including security policies, trust manage-
ment policies, business rules, etc. Computer policy is an executable and declarative rule that is created
from a specific policy language to regulate the behavior of entities on the web [Vimercati et al., 2007].
Requirements for designing policies from a policy language are declarative, and have well-defined seman-
tics, ontology support, rule support, and after-disclosure control, etc [Bonatti et al., 2006]. We select
several well-known declarative RELs and policy languages and categorize them as follows:
• XML-based RELs (not semantics-enabled): P3P [Cranor et al., 2002], ODRL, XrML
• XML-based policy language (not semantics-enabled): XACML [Anderson, 2006], WS-Policy
• Logic Program (LP)-based policy language (semantics-enabled): EPAL [Antoniou et al., 2007]
• Description Logic (DL)-based policy language (semantics-enabled): KAoS, Rei [Tonti et al., 2003]
• O +R-based policy language (semantics-enabled): Protune [Bonatti et al., 2006], AIR1
We will argue why we need a formal semantic model based on a combination of ontologies and rules
O +R but not on an ontology O or a rule R alone. Moreover, the important criteria that people use to
select a O +R for web policy’s semantics representation will also also be shown. We propose a unifying
formal semantic model based on a particular O +R with DL-based ontologies and LP-based datalog
rules. This semantics-enabled web policy provides clear and decidable semantic enforcement of access
control policies to ensure a user’s privacy rights or a server’s content digital rights.
4 REL, license agreement, policy, and rights protection
The UCONABC model provides a solution for the content usage right control in the DRM and other
similar problems, such as privacy protection, etc [Park & Sandhu, 2004]. This UCONABC access control
model uses Authorization(A), oBligations(B), and Conditions(C) as specifications for its access control
policy. In fact, usage control is a generalization of a regular access control that covers authorization,
obligations, conditions, continuity (ongoing controls), and mutability attributes. The UCONABC model
improves the original server-based access control approach, which cannot be used for usage and rights
protection on the web. The UCONABC model still cannot provide after-disclosure control because the
original data owner is hard-pressed to enforce its protection policies once the digital content or personal
information is disseminated on the web.
1AMORD In RDF (AIR), http://dig.csail.mit.edu/TAMI/2007/AIR/
Figure 1: A unifying semantic model of REL for describing license agreements and associated
access control policies for privacy protection in the DRM system
5.1 FOL as a formal semantic model
In [Halpern, 2008] [Pucella & Weissman, 2006], a formal FOL foundation was elaborated to find out
what are the tractable fragments for ODRL and XrML that provide the verification of access control
permission implied by a set of licenses and policies. This result has a strong impact on the revised new
version of ODRL and XrML information models [Guth & Iannella, 2005a] [Guth & Iannella, 2007].
However, the FOL-based formal semantic model is far from perfect because the tractable fragments
of FOL for REL do not allow the updating of a license agreement conditions with its policies. Moreover,
communication mechanisms between protection systems cannot be defined as a simple FOL-based REL.
Therefore, it is impossible to deploy a generic FOL-based formal semantic model on the web unless we
have web-enabled supporting markup languages, similar to RDF(S) and OWL ontology languages to
express its semantics.
5.2 DL as a formal semantic model
A DL-based formal semantic model of REL provides the taxonomy of digital asset and usage rights
as an ontology TBox for a DL-based reasoning engine, such as Racer or Pellet to decide the hierarchy
implicit relationships [Garcia et al., 2005]. We can further use the standardized ontology languages,
such as RDF(S) and OWL, to enforce the rights protection policies deployed on the web. Since DL is
a subset of FOL, the limitations of expressive power in DL is similar to that in FOL for the updating
of a license agreement and on the enabling of a message passing between the rights protection systems.
This prevents us from building a full scale rights protection system on the web [Hu, 2007].
5.3 LP as a formal semantic model
The representations of LP-based FAF semantics and relational semantics were shown previously in
the formal semantic models of EPAL and P3P [Antoniou et al., 2007] [Yu et al., 2004]. In order to
Figure 2: A unifying semantic model of REL from FOL, LP, RELs for license agreements
and access control policies
• To use an O +R combination which has a decidable computation fragment. Otherwise, we might
not be able to obtain an answer for every rights permission query.
• To decide what semantic expressions of REL are from ontologies and rules.
• To resolve the semantic assumption of difference between ontologies and rules. DL-based ontology
is an open world assumption (OWA) but an LP-based rule is a closed world assumption (CWA).
This difference has side effects on the decision of protection policy when enforced.
• To have a bi-directional or a uni-directional information flow from ontologies to rules. In a uni-
directional case, concepts and properties in the ontology are used to specify unary and binary
predicates in the rules. In a bi-directional case, reaction rules provide the updating of the facts,
e.g. ABo§ for the ontology.
There are two types of O +R combinations [Eiter & Ianni, 2008]: homogeneous (tight) integration
and heterogeneous (loose) integration. DLP [Grosof et al., 2003], SWRL [Horrocks et al., 2005], and
OWL 2 RL [Grau et al., 2008] are a type of tight O +R integration. DLP is too restricted to use for
ontology and in the license agreements and web policies. On the other hand, SWRL might have a
fragment of undecidable computation on the decision of rights permission unless we request that all
6.3 The compromise of rights protection
In the EPAL data model a 5-tuple, i.e., (user, data, purpose, right, obligation) is used as the set of
attributes for privacy protection policies [Karjoth & Schunter, 2002]. The use of a 5-tuple indicates that
a particular type of users ask for data achieving a purpose with a certain right(s) and obligation(s).
In a standalone semantics-enabled privacy protection system, web protection policies for privacy are en-
forced as verifying the satisfaction of constraints for data user, data type, purpose, rights, and obligation
in the ontologies and rules. When we consider enforcing privacy protection rights and content usage
rights in the DRM system, we do not directly combine the privacy protection system and the DRM
system because this would entail more research on the merging and aligning of ontologies and rules in
the heterogeneous systems.
The easiest way to resolve a rights protection dilemma for privacy and content usage is to incorporate
a user’s privacy rights in the DRM system (see Figure 3). In our unifying semantic model of REL, we
allow a content user to specify privacy protection rights unambiguously in the semantics-enabled privacy
protection web policies. A user’s privacy rights are ensured when the user asks for usage rights to digital
content because a user’s profile and digital trace usage permission are modeled as a pre-condition of the
rules, acting as an extra constraint of execution access control policies in the DRM system.
We extend our previous SWRL-based semantics-enabled DRM system to grant a content user pri-
vacy and fair use rights in the DRM system [Hu, 2007] [Hu et al., 2008]. We first request that the
content distributor fulfill fair use statutory rights of the copyright law, i.e., allowing a content user to
reuse his or her copyrighted digital contents in certain unrestricted ways for the purposes of teaching
and research. Then, we require the content distributor to abide by a content user’s opt-in and opt-out
privacy rights. The data usage policy forces the distributor to comply with privacy protection laws on
collecting, using, and disclosing of each user’s profile and digital trace.
7 A scenario of rights protection
A scenario of the rights protection use case is extended from [Hu, 2007], and shown as Figure 4, where
a license agreement for content usage is signed between a DRM server Charlie and two DRM clients,
Alice and Bob to facilitate the content usage rights for a server and privacy and fair use rights for each
client.
A license agreement in different expressions are shown as follows:
1. Natural Language (NL):
A DRM content distributor server, Charlie, makes a license agreement with two content con-
sumer clients, Alice and Bob. After each paying thirty dollars and receiving acknowledgement
from Charlie, Alice and Bob are each given personal usage rights and may display an eBook,
, TheSemanticWebPrimer, up to five times in each client’s side DRM controller box. They may
each print it only once. The total number of actions, either displays or prints, done by Alice and
Bob together, may be at most ten. The usage rights validity period is from 2008/05/07/00 : 00 to
2008/06/06/24 : 00.
However, if either Alice or Bob uses this eBook for teaching and research, then the usage rights
constraint may be relaxed for fair use to comply with the Copyright law. In this case, a maximum
of 25 consecutive pages of each eBook can be printed and an unrestricted number of pages can be
displayed for an unlimited number of times with unlimited validity period. Fair use is not allowed
if the usage purposes are not successfully verified. Furthermore, to protect the privacy rights of
Alice and Bob, we allow each one to specify usage options for respective profiles and digital traces
case FairUse{teaching,research}:
|==> forEachMember[{Alice,Bob}] ==> display
|==> forEachMember[{Alice,Bob};
not [and [printPage# > endPage#,
printPage# < startPage#]]
|==> forEachMember[{Alice,Bob};
printPageCount[25]]
|==> forEachMember[{Alice,Bob}] ==> print
Access control applied to a server for privacy protection in a client:
serverUsagePurpose:
case DRMControl{DRMControl}:
|==> forEachMember[{Alice, Bob},
clientAllowPurpose[DRMControl]]
|==> forEachMember[{Alice,Bob},
profileDiscloseAllowed[personalProfile]==> disclose]
|==> forEachMember[{Alice,Bob},
traceDiscloseAllowed[digitalTrace]==> disclose]
case Non-DRMControl{Marketing,Statistics}:
|==> forEachMember[{Bob},
clientAllowPurpose[Non-DRMControl]]
|==> forEachMember[{Bob},
profileDiscloseAllowed[personalProfile]==> disclose]
|==> forEachMember[{Bob},
traceDiscloseAllowed[digitalTrace]==> disclose]
3. First Order Logic (FOL):
• Access control applied to a client for DRM in a client:
∀x((x = Alice ∨ x = Bob)⇒
(∃t1∃t2(t1 < t2 ∧ Paid(30, t1) ∧Attributed(Charlie, t2))
⇒ ∃y((y = teaching ∨ y = research) ∧HasClientUsagePurpose(x, y))
⇒ Permitted(x, display, eBook))
⇒ ∀p∃sp∃ep
((hasPrintPage#(eBook, pg) ≥ startPage#(eBook, sp)
∧hasPrintPage#(eBook, pg) ≤ endPage#(eBook, ep)
⇒ hasPrintPageCount(eBook, sub(ep, sp)) ≤ 25
⇒ Permitted(x, display, eBook))
⇒ ∃y((y = personal) ∧ hasClientUsagePurpose(x, y))
⇒ ∀t(hasUsageDateT ime(t) ≥ 2008/05/07/00 : 00
∧ hasUsageDateT ime(t) ≤ 2008/06/06/24 : 00)
Figure 5: The data user ontology for the concepts of DRM client and DRM server taxonomy
Figure 6: The data usage purpose ontology for the concepts of client’s usage purposes and
server’s usage purposes taxonomy
(see Figure 6) is the exception, where the concepts for describing data usage to achieve the fair use and
privacy protection purposes are outside the DRM’s O +R representations (see Figure 3) 3.
7.2 Properties for data usage purposes
Properties in the data usage purpose ontology in Figure 6 for a DRM client’s to constraint the fair use
and privacy protection purposes are shown as follows:
• HasClientUsagePurpose v HasUsagePurpose
• HasServerUsagePurpose v HasUsagePurpose
• T v ∀ HasUsagePurpose.Data− User 4
• T v ∀ HasUsagePurpose−.Usage− Purpose 5
• T v ∀ HasClientUsagePurpose.DRM− Client
3The first capital character in the predicates is a marker to indicate that they are directly created in the datalog rule.
4The Data− User class is defined as the domain of property HasUsagePurpose, as are as the following specifications.
5The Usage− Purpose class is defined as the range of property HasUsagePurpose, as are the following specifications.
*Axioms in the ontology module for DRM:
hasDisplayRights v hasUsageRights
hasPrintRights v hasUsageRights
eBook v Digital− Content
DRM− Client v Data− User
DRM− Server v Data− User
Print− Count v Usage− Count
Display− Count v Usage− Count
hasDisplayRights v hasUsageRights
hasPrintRights v hasUsageRights
T v ∀ hasUsageCount.Data− User 6
T v ∀ hasUsageCount−.Digital− Content
T v ∀ hasDisplayCount.Data− User
T v ∀ hasDisplayCount−.Digital− Content
T v ∀ hasPrintCount.Data− User
T v ∀ hasPrintCount−.Digital− Content
T v ∀ hasUsageDateTime.Data− User
T v ∀ hasUsageDateTime−.Digital− Content
*Facts in the ontology module for DRM:
DRM− Client(Alice)
DRM− Client(Bob)
DRM− Server(Charlie),
Teacher(Alice)
Researcher(Bob)
eBook(TheSemanticWebPrimer)
hasDisplayRights(Alice, TheSemanticWebPrimer)
*Axioms in the ontology module for privacy protection:
Personal− Profile v Customer− Data
Digital− Trace v Customer− Data
DRM− Trace v Digital− Trace
Online− DRM− Trace v DRM− Trace
T v ∀ ClientAllowPurpose.DRM− Client
T v ∀ ClientAllowPurpose−.Server− Usage− Purpose
T v ∀ ServerRequestPurpose.DRM− Server
T v ∀ ServerRequestPurpose−.Server− Usage− Purpose
T v ∀ ProfileDiscloseAllowed.Personal− Profile
T v ∀ ProfileDiscloseAllowed−.Server− Usage− Purpose
6In OWL− DL, maxCardinalityQ is shown as 6n P.C, where n is an integer number, P is a property and C is a class. So
65 hasUsageCount.Usage− Count(?r, ?uc) indicates that a particular resource r, such as eBook is bound to a variable ?r,
and the current usage count uc is bound to a variable ?uc with maximum number 5.
are imported from DRM ontologies. More detailed descriptions can refer to [Hu, 2007]. Rules (c3)
and (c4) are privacy protection rules that satisfy the DL− Safe conditions, where all of the rule
variables occur at least in one of the datalog predicates in each rule’s body. When server Charlie
requests a DRM controller box in Alice’s site to enforce privacy protection policies for disclosing
Alice’s profile or a digital trace under the purpose of DRM control, it will be permitted, i.e., the
following facts will be derived by rules (c3) and (c4):
PermittedCharlie(Disclose, AliceProfile)
PermittedCharlie(Disclose, AliceDRMTrace)
Similarly, when server Charlie asks for disclosure of Bob’s profile or digital trace for DRM control
purpose, it is also permitted. However, when server Charlie asks for the disclosure of Alice’s
profile and digital trace for marketing purposes, it will not be permitted. In fact, we cannot ex-
plicitly obtain the following two facts from rules (c3) and (c4):
PermittedCharlie(Disclose, AliceProfile)
PermittedCharlie(disclose, AliceDRMTrace)
The fact is that Alice does not explicitly allow her profile and DRM digital trace to be shown as
facts for marketing purposes in the ontologies module. Therefore server Charlie cannot obtain a
positive permission from rules (c3) and (c4).
• At content consumer client Alice’s site:
– Γ = O, the ontology module at the Alice site:
Most of the axioms and facts for privacy protection in the ontology module in an Alice DRM
controller box are the same as the results we have shown at server Charlie’s site except for
fair use access control policies shown as the following:
*Facts in the ontology module for DRM:
Teacher(Alice), Researcher(Alice)
HasClientUsagePurpose(Alice, Teaching)
HasClientUsagePurpose(Alice, Research)
HasResourceFairUse(TheSemanticWebPrimer)
≥3 HasStartPage#(TheSemanticWebPrimer, 20)
≤24 HasEndPage#(TheSemanticWebPrimer, 20)
≤25 HasPrintPageCount(TheSemanticWebPrimer, 17)
– ∆ = R, rules in the rule module for DRM to enforce fair use right:
*Rules in the rule module for DRM to enforce fair use:
8 Conclusions
RELs, such as ODRL and P3P, provide an information model and vocabularies for designing a license
agreement through the integration of web protection policies from both client and server. However,
we sometimes face a semantic ambiguity problem when we use REL-based web protection policies to
represent and enforce the access rights of data use. In this chapter, we proposed a unifying semantic
model of REL to unambiguously express and enforce fair use and privacy protection rights for digital
content users. This formal semantic model of REL is based on the homogeneous (or tight) integration
of ontologies and rules, i.e., SWRL-based O +R from the semantic web. A real-life scenario was given
to demonstrate how to ensure the DRM server’s content usage rights and a DRM client’s fair use and
privacy protection rights. This rights protection scenario, we believe, cannot be easily achieved by other
semantic models, such as FOL, DL, and LP.
Appendix
This research was partially supported by the NSC of Taiwan under Grant No. NSC 98-2221-E-004-009.
References
[Anderson, 2006] Anderson, A. H. (2006). A comparison of two privacy policy languages: EPAL and XACML. In Pro-
ceedings of the 3rd ACM Workshop on Secure Web Services (SWS’06) (pp. 53–60).: ACM.
[Anto´n et al., 2007] Anto´n, I. A. et al. (2007). A roadmap for comprehensive online for privacy policy management. Comm.
of the ACM, 50(7), 109–116.
[Antoniou et al., 2007] Antoniou, G. et al. (2007). Rule-based policy specification. In T. Yu & S. Jajodia (Eds.), Secure
Data Management in Decentralized Systems (pp. 169–216). Springer.
[Arnab & Hutchison, 2005] Arnab, A. & Hutchison, A. (2005). Fair usage contracts for DRM. In DRM ’05: Proceedings
of the 5th ACM workshop on Digital rights management (pp. 1–7).: ACM.
[Berstel et al., 2007] Berstel, B. et al. (2007). Reactive rules on the web. In Reasoning Web 2007, Third International
Summer School, LNCS4636 Dresden, Germany: Springer.
[Boley et al., 2007] Boley, H. et al. (2007). Rule interchange on the web. In Reasoning Web 2007, Third International
Summer School, LNCS 4636 Dresden, Germany: Springer.
[Bonatti et al., 2006] Bonatti, A. P. et al. (2006). Semantic web policies - a discussion of requirements and research issues.
In 3rd Eurpoean Semantic Web Conference (ESWC 2006) Budva, Montenergro.
[Cohen, 2003] Cohen, E. J. (2003). DRM and privacy. Commun. ACM, 46(4), 47–49.
[ContentGuard, 2002] ContentGuard, I. (2002). XrML: The digital rights language for trusted content and services. Tech-
nical report, ContentGuard Inc. http://www.xrml.org/index.asp.
[Cranor et al., 2002] Cranor, L. et al. (2002). The platform for privacy preferences (P3P) 1.0 (p3p 1.0) specification.
http://www.w3.org/P3P/.
[Donini et al., 1998] Donini, M. F. et al. (1998). AL-log: Integrating datalog and description logics. Journal of Intelligent
Information Systems, 10(3), 227–252.
[Eiter & Ianni, 2008] Eiter, T. & Ianni, G. (2008). Rules and ontologies for the semantics web. In Reasoning Web 2008,
LNCS 5224 (pp. 1–53).: Springer.
[Erickson, 2003] Erickson, S. J. (2003). Fair use, DRM, and trusted computing. Commun. ACM, 46(4), 34–39.
[Feigenbaum et al., 2002] Feigenbaum, J. et al. (2002). Privacy engineering for digital rights management systems. In
Digital Rights Management (DRM) Workshop 2002, volume 2320 of LNCS 2320 (pp. 76–105).: Springer.
A Semantic Privacy-Preserving Model
for Data Sharing and Integration
Yuh-Jong Hu
ENT Lab., Dept. of CS
National Chengchi University
Taipei, Taiwan, 11605
hu@cs.nccu.edu.tw
Jiun-Jan Yang
ENT Lab., Dept. of CS
National Chengchi University
Taipei, Taiwan, 11605
98753036@nccu.edu.tw
ABSTRACT
In this paper, we encompass and extend previous ontology-
based data integration system. A semantic privacy-preserving
model provides authorized view-based query answering over
a widespread multiple servers for data sharing and integra-
tion. The combined semantics-enabled privacy protection
policies are used to empower the data integration and ac-
cess control services at the virtual platform (VP). The
ontology mapping and merging algorithm creates a global
ontology schema at the VP by integrating multiple local on-
tology schemas for data sharing. The perfect rules integra-
tion of datalog rules enforces the data query and protection
services. Semantics-enable policies are combined together
at the VP, but the access control criteria specified in each
server are still satisfied. The soundness and completeness
of data sharing and protection criteria are ensured to sup-
port the validity of policy combination. This guarantees the
trustworthiness of data sharing and protection services in
multiple servers.
Categories and Subject Descriptors
H.4 [Web Technologies]:
General Terms
Semantic Web
Keywords
data sharing and integration, semantics-enabled policy, pri-
vacy protection,query rewriting, ontology and rule
1. INTRODUCTION
Large enterprises spend a great deal of time and money on
data (or information) integration [3]. Data integration is
the problem of combining the data from autonomous and
heterogeneous sources, and providing users with a unified
view of these data through so called global (or mediated)
schema. The global schema, which is a reconciled view of the
information, that provides query services to end users. The
design of a data integration system is a very complex task,
which includes several different issues: heterogeneity of the
data sources, relation between the global schema and the
data sources, limitations on the mechanisms for accessing
the sources, and how to process queries expressed on the
global schema, etc [11].
Three approaches have been proposed to model a set of
source descriptions that specify the semantic mapping be-
tween the source schema and the global schema. The first
one, called global-as-view (GAV), requires that the each con-
cept in the global schema is expressed in terms of query over
the data sources. The GAV deals with the case when the
stable data source contains details not present in the global
schema so it is not used for dynamically adding or deleting
data sources.
The second one, called local-as-view (LAV), requires the
global schema to be specified independently from the sources,
and the source descriptions between the stable global schema,
such as ontology and the dynamic data sources are estab-
lished by defining each concept in the data sources as a view
over the global schema [10] [26]. LAV descriptions handle
the case in which the global schema contains details that are
not present in every data sources.
The third one, called global-local-as-view (GLAV), a source
description that combines the expressive power of both GAV
and LAV, allowing flexible schema definitions independent
of the particular details of the data sources [14]. The data
integration system uses these different source descriptions
to reformulate a user query into a query over the source
schemas. However, data sharing and integration are ham-
pered by legitimate and widespread privacy concerns so it
is critical to develop techniques that enables the integration
and sharing of data without losing a user’s privacy [12].
Privacy protection policies represent a long-term promise
made by an enterprise to its users and are determined by
business practice and legal concerns. It is undesirable to
change an enterprise’s promises to customers every time an
internal access control rule changes. If possible, we should
enable the integration of Platform for Privacy Preferences
(P3P) and Enterprise Privacy Authorization Language (EPAL)
policies to provide accountable and transparent information
processing for data owners to revise their data usage per-
missions [2].
Figure 1: A semantic privacy protection model extended from the integration of P3P and EPAL for data
sharing and protection in multiple servers
based policy language, such as Rein or KAoS, then ordinary
policies are shown as TBox schema and ABox instances.
Otherwise, policies created from LP-based policy language,
such as EPAL or Protune ordinary policies are a set of rules
with predicates of unary, binary, or ternary variables and
facts [5].
In the SemPIF framework [21], we define Policy Interchange
Format (PIF) to follows W3CO +R standards [6] and strives
to provide a mechanism for agents to preserve different pol-
icy syntax and semantics throughout its policy integration
and interchange. In addition, agents can use meta-PIF, pro-
viding further management and reconciliation services of
PIF-enabled multiple policies across various domains. In
this paper, we apply the SemPIF framework for the privacy-
preserving data integration through a combination of formal
policies.
A formal policy (FP) is a declarative expression correspond-
ing to a human legal norm that can be executed in a com-
puter system without causing any semantic ambiguity. An
FP is created from a policy language (PL), and this PL
is shown as a combination of ontology language and rule
language . Therefore, an FP is composed of ontologies O
and rules R, where ontologies are created from an ontology
language and rules are created from a rule language.
A formal protection policy (FPP) is an FP that aims at
representing and enforcing resource protection principles,
where the structure of resources is modelled as ontologies
O but the resources protection is shown as rules R.
A privacy protection policy shown as an FPP is a combina-
tion of ontologies and rules, e.g., O +R, where DL-based on-
tologies, such as OWL-DL ontologies provide a well-defined
structure data model for data sharing, while Logic Program
(LP)-based rules, such as datalog rules provide further ex-
pressive power for data query and protection. There are
numerous O +R combinations available for designing pri-
vacy protection policies, such as DLP [17], SWRL [20], and
OWL2 RL [16]. Each O +R combination implies what ex-
pressive power we can extract from ontologies for the rules
and vice versa.
The SWRL is one of the O +R semantic web languages
suitable for a policy representation in the privacy protection
model. But this is not an exclusive selection. Other O +R
combinations, such as CARIN, OWL2 RL are also possible
for modeling formal privacy protection policy when their un-
derlying theoretical foundations and development tools are
available. We fully utilize the SWRLTab development tools
and SQWRL OWL-DL query language [31] in the Prote´ge´ to
model and further enforce our semantic privacy protection
policies.
We face a research challenge of combining SWRL-based pri-
vacy protection policies from multiple servers to ensure the
soundness and completeness of data sharing and protection
criteria. Another challenge is to solve the policy’s syntax
and semantics incompatibility when we allow policy combi-
nation in multiple servers. SWRL is based on the classical
first order logic (FOL) semantics that mitigates a possible
semantic and syntax inconsistency when policies come from
different servers. But we still face a background policy in-
consistency problem when default policy assumptions vary
between different servers. For example, one server uses open
policy assumption, where no explicit option-out for data us-
age means option-in, but the other server uses closed pol-
icy assumption, where no explicit option-in for data usage
means option-out. We avoid this kind of policy inconsistency
by requesting all sites to use a uniform policy assumption,
and to collect option-in data usage choices from users when
multiple policies are integrated.
Previous studies for policy combination did not consider
solving the problem of merging multiple schemas and inte-
grating access control rules from multiple servers [4] [28]. In
this paper we propose a semantic privacy protection model
Figure 3: A virtual platform for ontology mapping, merging, and rule integration from multiple servers
3.1 FPP for Privacy Protection
A privacy protection policy is a type of FPP. We designed
an ontology that declares the FIPs’ attributes as classes in an
FPP (see Figure 4). The attributes, purpose, datauser, data,
obligation, and action that allow people to specify the
constraints of privacy protection policies using related prop-
erty chains.
Constraint properties is a type of owl : ObjectProperty that
specify what are the feasible domain and range classes of the
above attributes. For example, a property hasOptInPurpose
has its domain and range classes shown as follows:
T v ∀ hasOptInPurpose.Data,
T v ∀ hasOptInPurpose−.Purpose.
Then a datalog rule, in the SWRL-based policy representa-
tion, allows us to use a property chain to combine the two
feasible classes together:
hasOptInPurpose.Data(?data)
∧ hasOptInPurpose−.Purpose(?purpose)
−→ hasOptInPurpose(?data, ?purpose) ←− (1)
Similarly, a hasOptInDatauser property has its domain and
range classes shown as follows:
T v ∀ hasOptInDatauser.Data,
T v ∀ hasOptInDatauser−.Datauser.
Then another datalog rule allows us to use another property
chain to combine another two feasible classes together:
hasOptInDatauser.Data(?data)
∧ hasOptInDatauser−.Datauser(?datauser)
−→ hasOptInDatauser(?data, ?datauser) ←− (2)
Based on (1) and (2), we have a feasible set of ABox instances
with data, purpose, and datauser combinations of an at-
tribute set that was permitted from the original dataowner
to allow a particular type of datauser to ask for a data set
with a permissive purpose. When a server collects a cus-
tomer’s data, the promise of data usage will be ensured if a
data user’s identity and usage purpose are verified success-
fully. Otherwise, the data will be kept secret without a data
user’s awareness.
The specifications are easily extended to the other two at-
tributes, action and obligation, to complete the FIPs’ pri-
vacy protection criteria. An ordinary data user is allowed
to ask a query service with action = read at the VP. The
other actions, such as deletion or modify, are only allowed
for a system administrator in the middle layer when (s)he
asks to delete a user’s data to satisfy the obligation of data
retention period or for a data owner updates his or her own
profile data.
3.2 Data Request Services
A server declares its privacy policy in P3P before a data
owner’s data is collected. Once a user accepts a server’s pri-
vacy declaration policy, the data usage constraints are speci-
fied as Figure 5, where FIP’s five attributes (?d, ?p, ?du, ?a, ?o)
for data, purpose, datauser, action, and obligation, are
classes, and hasOptInDatauser, hasOptInPurpose, etc., are
properties proposed as chains of usage constraints for at-
tributes.
For each data request service, an initial feasible parameter
input set is FS = input(?du, ?r, ?p), where ?du ∈ Datauser,
?r = read ∈ Action, ?p ∈ Purpose and output dataset with
associated obligations is output(?d, ?o), where ?d ∈ Data,
?o ∈ Obligation. The feasible dataset shown as ABox in-
stances will be discovered by using SQWRL datalog rules.
Further permissible actions will be activated when the fol-
lowing data protection policies are satisfied.
4.1 Ontology Mapping and Alignment
A mapping can be shown as (uid, e1, e2, n, ρ), where uid is
a unique identity for the mapping, e1, e2 are entity names,
such as class or property, and in the vocabulary of O1, O2,
n is a numeric confidence measure between 0 and 1, and ρ
is a relation such as subsumption (v), equivalence (≡), or
disjointness (⊥) between e1 and e2 [23].
In this study, the entity names for describing the ontology’s
class and property, and the structure of using these entity
names in the root of the ontology schema for Oi to define
the FIPs’ privacy protection criteria (see Figure 5) that are
required to be the same. This is a strict constraint to achieve
a perfect ontology alignment of this study. Moreover, a per-
fect mapping languageML provides semantic mapping ser-
vices for each entity e ∈ GS at the VP to the corresponding
entities ei ∈ LSi.
A perfect ontology alignment obtained via a mapping
(uid, ei, ej , n, ρ) and merging between Ti in Oi and Tj in Oj
satisfies the following conditions:
• ei ∈ Ti and ej ∈ Tj entity names are either defined for
describing the root class names which corresponding to
the privacy protection concepts, such as purpose, action,
datauser, data, and obligation or property names,
such as hasOptInDatauser, hasOptInPurpose, etc; Fur-
thermore entity names below the root class and root
property are also defined for the descriptions of the
underlying subclass and subproperty names.
• A numeric confidence measure n is always equal 1.
• ρ is either equivalence (≡) or subsumption (v) between
entity names of Ti and Tj schemas. In an equivalent
(≡) case, we can find a pair of one-to-one correspond-
ing entity names for ei ∈ Ti and ej ∈ Tj in the same
layer of the respective ontology schema with n = 1;
In a subsumption (v) case, there are subclass or sub-
property entity names not in the same layer so ei ∈ Ti
and ei v ej ∈ Tj , and vice versa.
4.2 Query Rewriting Services
SWRL combines OWL-DL’s ontology language with an ad-
ditional datalog rule language, where a datalog rule language
is shown as an axiom of ontology, a little extension of the
OWL-DL language that overcomes the limitations of prop-
erty chaining in the OWL-DL language [20]. The computa-
tion complexity of answering SWRL-based policies might
be undecidable regarding the verification of rights access
permission unless these policies satisfy the DL− Safe con-
ditions [29].
SPARQL is a query language for the RDF(S)-based ontolo-
gies. OWL2 QL is another query language for the OWL2-
based ontologies. We did not use SPARQL query language
or OWL2 QL, since our current local and global ontologies
are modelled as the OWL-DL ontology language. In fact,
SPARQL might not be able to query the complete seman-
tics of the OWL-DL’s ontologies. The OWL-DL’s ontology
queries can be shown as the SQWRL datalog rules, where
the CQ conditions are shown as the rule’s body and the
query results, i.e., views are shown as the rule’s conclusion.
SQWRL uses SWRL’s strong FOL semantic foundation as
its formal semantics so this query language provides a small
but powerful array of operators that allows users to con-
struct queries over OWL-DL ontologies [31].
For each data request query service, a perfect mapping lan-
guageML should provide the semantically linking service of
an entity name e ∈ GS in the datalog rule at the VP to the
entity name ei ∈ LSi in the datalog rule at serveri, where
LSi is the TBox of Oi, and e is a class or a property name. If
there does not exist an ei ∈ TBoxi in a subtree of the LSi on
the same layer as e ∈ TBox in the global tree of GS, then we
can recursively find a superclass or superproperty of e′i with
e v e′i as the corresponding entity name, with a confidence
measure of n = 1.
To successfully fulfill the semantically linking service of any
entity name e ∈ GS via ML, an ontology schema designer
must follow the principles we propose using the specifica-
tions of concepts and relations for the FIPs on the root layer
of each ontology’s local schema’s LSi. But we still allow the
designer to use different entity name string, ei ∈ LSi below
the root layer of each local schema and to have an entirely
different underlying subtree structure. We use Prompt ontol-
ogy mapping algorithm first to synchronize the entity names
between LSi and further perform the ontology mappings
and aligning operations. Finally, we can perfectly merge
their schemas, even if the subtrees of the local schemas are
variant.
We use ML to map the name of a class entity c ∈ GS to
one of the equivalent local ontology schema’s class entity
name in a deeper subtree, say cj ∈ LSj , i.e., c! cj in the
datalog rule’s conditions of each data request service. When
the class semantics for c is c v ci in the LSi , i.e., we do
not have a corresponding class c′i ∈ LSi on the same lower
layer of a schema tree as c ∈ GS. All of the ABox instances
ai in the class name entity ci, i.e., ai ∈ ci are still feasibly
collected for this data request. Because class ci is a legal
domain class or range class for a particular property in the
datalog rule for enforcing its privacy protection.
Similarly, a property p ∈ GS is mapped to another equiva-
lent property pj ∈ LSj for the associated datalog rule’s body
conditions. Then property p! pj might be on a lower layer
in the schema tree when compared with property pi ∈ LSi.
We still regard property pi as feasible for its enforcement of
the datalog rule on data sharing and protection.
Finally, if we consider mappings for binding property and
class from the aligning ontology schema GS to LSi and LSj
for the respective datalog rules, then we have the following
semantically linking relationships by using ML’s mapping
services to align the class and property shown as follows:
Property p ∈ GS with its domain class dc and range class rc
that are mapped to property pi ∈ LSi with its domain class
dci and its range class rci. For each data request service
using a perfect mapping languageML, when p v pi, we use
property pi. Otherwise, when pi v p, we use property p for
the datalog rule ri. When dc v dci and rc v rci, we use
class dci and rci. Otherwise, when dci v dc and rci v rc,
we use class dc and rc for the datalog rule ri.
Figure 6: Partial ontology mapping for class alignment and ontology merging
The VP offers the following vocabularies:
Class: Patient, Hospital, Surgery, and HealthRecord
Property: beCured, hasHealthRecord, generate with their
respective domain and range class are shown as follows:
T v ∀ beCured.Patient, T v ∀ beCured−.Hospital
T v ∀ hasHealthRecord.Patient
T v ∀ hasHealthRecord−.HealthRecord
T v ∀ generate.Hospital
T v ∀ generate−.HealthRecord
Use LAV approach to define each class and property in these
two hospital local schemas as views in terms of the global
schema’s vocabularies shown as follows:
Views use at the VP created from the hospital A local schema’s
vocabularies are:
def(V1Clinic) = Hospital
def(V2HealthData) = HealthRecord
def(V3SuregeryData)
= HealthRecord ∧ ∀hasMedType.Surgery
def(V4HospitalizationData)
=HealthRecord ∧ ∀ hasMedType.Hospitalization
def(V5create) = generate
Views use at the VP created from the hospital B local schema’s
vocabularies are:
def(V6Person) = Patient
def(V7HealthCenter) = Hospital
def(V8PatientData) = HealthRecord
def(V9OutPatientData)
= HealthRecord ∧ ∀ hasMedType.OutPatient
def(V10beMedicated) = beCured
def(V11own) = hasHealthRecrod
A physician queries a patient’s surgery record at the VP by
using a merged global ontology schema based on LAV query
rewriting instead of directly requesting each hospital. An
original datalog-based SQWRL rule for a query q at the VP
is shown as:
Patient(?x) ∧ beCured(?x, ?y) ∧ hasHealthRecrod(?x, ?r)
∧ HealthRecord(?r) ∧ hasMedType(?r, Surgery)
∧ generate(?y, ?r) −→ sqwrl : select(?x, ?r)
Query rewriting of the q in terms of two CQs, e.g., qva and
qvb, uses views defined at the VP:
V6Person ∧ V10beMedicated ∧ V11own ∧ V9OutPatientData ∧ V5create
−→ sqwrl : select(?x, ?r) ←− (qva)
Above qva query is corresponding to a query as:
B : Person(?p) ∧ B : beMedicated(?p, ?c) ∧ B : own(?p, ?d)
∧ B : OutPatientData(?od) ∧ A : create(?h, ?hd)
−→ sqwrl : select(?p, ?od)
V6Person ∧ V10beMedicated ∧ V11own ∧ V3SuregeryData ∧ V5create
−→ sqwrl : select(?x, ?r) ←− (qvb)
Above qvb query is corresponding to a query as:
B : Person(?p) ∧ B : beMedicated(?p, ?c) ∧ B : own(?p, ?d)
∧ A : SuregeryData(?sd) ∧ A : create(?h, ?hd)
−→ sqwrl : select(?p, ?sd)
Proof. (Sketch) If q(x) is a query over 
i
Oi at the VP
and qvi(x) is a query over Oi in a serveri, then we need to
prove the statement ∀x q(x) ←− ⊔
i
qvi(x). This statement
is equivalent to the original argument: If ri ∈ Ri |= λj , then
r′i ∈ 
i
Ri |= λj . The CQ q(x) is a query containment of
datalog rule r′i and the CQ qvi(x) is a query containment of
datalog rule ri ∈ Ri. The statement ∀x q(x) ←− ⊔
i
qvi(x)
is true because based on a perfect rule integration and a
perfect ontology merging method, we ensure to avoid the
following condition: ∃ri |= λj ⇒ ∃r′i 2 λj .
7. RELATEDWORK
Data integration is a pervasive challenge faced in the ap-
plications that need to query across multiple autonomous
and heterogeneous data sources. This problem has been re-
ceived considerable attention from researchers in the fields
of Artificial Intelligence and Database System more than a
decade [18] [27]. A logic of the Description Logic family
is used to model the ontology managed by the integration
system, to formulate queries posed to the system, and to per-
form several types of automated reasoning supporting both
the modeling, and the query answering process [11]. The
ontology expresses the domain of interest of the information
system at a high level of abstraction, and the relationship
between data at the sources and instances of concepts and
roles in the ontology is expressed by means of mappings,
such as GLAV, GAV, LAV [7] [33].
Unfortunately, data integration and sharing are hampered
by legitimate and widespread privacy concerns so it is crit-
ical to develop a technique to enable the integration and
sharing of data without losing privacy. We face a chal-
lenge to develop a privacy framework for data integration
that is flexible and clear to the end users [12]. View-based
query answering over DL provides a framework to answer
a query under the assumption that the only accessible in-
formation consists of the precomputed answers to a set of
queries, called views. Privacy-aware access to data, each
user is associated with a set of views, called authorization
views, which specify the information that the user is allowed
to access [9].
We encompass and extend previous ontology-based data in-
tegration system. A semantic privacy-preserving model pro-
vides authorized view-based query answering over a widespread
multiple servers for data sharing and integration. The com-
bined semantics-enabled privacy protection policies are used
to empower the data integration and access control services
at the virtual platform.
The role-based access control (RBAC) model is used to en-
force the access control policies with a static role assign-
ment for a stand-alone system. It is therefore not useful for
solving the privacy protection problem. In fact, the RBAC
model did not consider the prime elements of the FIPs, so
it is not intended for a privacy protection problem. In [32],
the UCONABC might be useful for the privacy protection
problem, but it did not explicitly allow the data sharing and
protection in multiple sites.
The EFAF access control model is an extension of the FAF
that provided the solution for privacy protection [22] [24].
This is the closest method to our solution, but its privacy
protection control is more on the logic program and less on
the ontology schema for the structure data modelling. This
also prevents the data sharing and protection in multiple
sites. The other similar models for enforcing the enterprise
privacy protection go to the following EPAL [25] [37]. OA-
SIS XACML is a policy language for privacy and digital
rights protection. But it is an XML-based policy language
so the policies based on XACML possibly have ambiguous
semantics that prevent using a flexible policy combination
in multiple servers [1].
8. CONCLUSION
In this study, we propose a semantic privacy protection
model to solve the data sharing, integration and protec-
tion problem through a combination of ontology and rule
language, e.g. SWRL. The perfect ontology alignment and
merging algorithm creates a global ontology schema at the
VP by integrating multiple local ontology schemas in the
multiple servers. The perfect rule integration avoids the
possible conflicts between the datalog rules at the VP and
in the multiple servers when we use these rules to enable
data integration and protection. Semantics-enabled poli-
cies are combined together at the VP, so we simplify the
data sharing and protection processes, but the soundness
and completeness criteria specified in each data collection
server for access control are still satisfied. This supports the
trustworthiness of a policy combination in multiple servers.
Acknowledgements
This research was partially supported by the NSC Taiwan
under Grant No. NSC 99-2221-E-004-010.
9. REFERENCES
[1] A. H. Anderson. A comparison of two privacy policy
languages: EPAL and XACML. In Proceedings of the
3rd ACM Workshop on Secure Web Services
(SWS’06), pages 53–60. ACM, 2006.
[2] I. A. Anto´n et al. A roadmap for comprehensive online
for privacy policy management. Comm. of the ACM,
50(7):109–116, July 2007.
[3] A. P. Bernstein and L. M. Haas. Information
integration in the enterprise. Comm. of the ACM,
51(8):72–79, July 2008.
[4] A. P. Bonatti et al. An algebra for composing access
control policies. ACM Trans. on Information and
Systems Security, 5(1):1–35, February 2002.
[5] P. Bonatti and D. Olmedilla. Policy language
specification, enforcement, and integration. project
deliverable D2, working group I2. Technical report,
REWERSE, 2005.
[6] J. d. Bruijn. RIF RDF and OWL compatibility.
Technical report, W3C, Oct. 2009.
[7] D. Calvanese et al. Description logic framework for
information integration. In Proc. of the 6th Int. Conf.
on Principles of Knowledge Representation and
Reasoning, pages 2–13. Morgan Kaufmann, 1998.
[8] D. Calvanese et al. Data integration through
DL− LiteA ontologies. In 3rd Int. Workshop on
  5 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：99 年 12 月 07 日 
                                 
一、參加會議經過 
本研討會於 2010年 8月 31-9月 3日於加拿大多倫多市的 York大學舉行。York 大學位於多倫多市
近郊約 1個多小時車程的郊區，附近的大學則有位於多倫多市世界知名的多倫多大學。 
 
8月 31日的研討會首日進行的是 Workshop。9月 1日至 9月 3日則是正式的研討會。研討會分成
兩部分來進行：Web Intelligence, Intelligent Agent。在這個基礎上論文的發表大致上分成幾
個 track來進行論文的發表。Web Information Retrieval and Filtering, Web Mining, Semantics 
and Ontology Engineering, Social Network Analysis, Web Services, Distributed Problem 
Solving, etc。從這些 tracks 的觀察我們可以知道這個研討會涵蓋面非常的廣，但是主要著重的
還是 Web Mining以及 Web Information Retrieval。計畫主持人發表論文 SemPIF: A Semantic 
Meta-Policy Interchange Format for Multiple Web Policies 所排定的時段是在 9月 3日早上
的 Semantics and Ontology Engineering IV 的場次。我也順便主持了這個場次其他演講者的論
文發表。本場次的演講共有 5位的論文發表者，其中有一位大陸東北大學的研究學者並未出席，
另外德州大學的論文發表者則請人代打。另外則有京都大學、多倫多大學、及本人（代表政治大
學）。本研討會在 9月 2日晚上舉辦餐宴於多倫多港上的遊輪上，台灣也有不少的學者參與此盛會。 
計畫編號 
NSC 98－2221－E－004－009 
計畫名稱 
給隱私權保護與著作權管理使用的語意式 web規範互通語言 
出國人員
姓名 
胡毓忠 
服務機構
及職稱 
國立政治大學資訊科學系教授 
會議時間 
2010年 8月 31日至 
2010年 9月 3日 會議地點 
加拿大多倫多市 
會議名稱 
(中文)IEEE/WIC/ACM Web 智慧與智慧型代理者技術國際研討會 
 (英文) IEEE/WIC/ACM International Conference on Web Intelligence and 
Intelligent Agent Technology 
發表論文
題目 
(中文)提供多重 Web規範交換的語意式 meta規範格式 
(英文) SemPIF: A Semantic Meta-Policy Interchange Format for Multiple Web 
Policies 
SemPIF: A Semantic Meta-Policy Interchange
Format for Multiple Web Policies
Yuh-Jong Hu
Dept. of Computer Science
NCCU, Taipei, Taiwan
hu AT cs.nccu.edu.tw
Harold Boley
IIT – e-Business,
NRC-CNRC, Canada,
Harold.Boley AT nrc.gc.ca
Abstract—We propose a semantics-enabled layered policy
architecture for the exchange and management of multiple
policies created by different policy languages on the Web. This
architecture consists of four layers: Unifying Logic (UNL), Policy
Interchange Format (PIF), Privacy Protection/DRM (PPD), and
Domain Speciﬁc Applications (DSA). A meta-Policy Interchange
Format (meta-PIF) layer is also introduced, side by side with
the corresponding PIF layer, allowing agents in the facilitator
to provide uniform services of interchange, reconciliation, and
combination of policies. This SemPIF architecture extends W3C’s
Semantic Web architecture to permit the reuse of earlier work. A
scenario of agents in the facilitator employing SemPIF for Digital
Rights Management (DRM) and privacy protection policies on
digital library subscription services will be demonstrated.
Keywords-semantic web; ontology and rule; computer policy;
privacy protection; digital rights management
I. INTRODUCTION
In the Semantic Web, information is given well-deﬁned
meaning to better enable computers and people to work in
cooperation. The well-known Semantic Web layered archi-
tecture1 has undergone revisions reﬂecting the evolution of
layers such as the Description Logic (DL)-based ontology
language OWL [1], the Horn Logic (HL)-based rule language
RIF [2], and their relationship. On the other hand, policy
languages, such as Rei [3], KAoS [4], Protune [5], have also
been proposed – on the basis of DL and LP – to allow
agents understand policies and to enforce these policies as
intended by their semantics. However, the semantic bases of
policy languages vary considerably, ranging from DL to HL
to Logic Programming (LP), e.g. leading to different stances
w.r.t. the unique name assumption (UNA) and the closed world
assumption (CWA) [6]. This makes policies created in these
policy languages hard to interchange and combine with each
other.
Policies are formulated and treated as knowledge bases, i.e.
ontologies and rules (O +R). Many operations can be auto-
mated, thereby reducing ad-hoc program coding to a minimum
and enabling automated documentation [5]. Policy frameworks
also need to support interoperability. Moreover, the context of
a policy is itself described in a machine-understandable way.
1http://www.w3.org/2007/03/layerCake.svg
Therefore, we propose a semantics-enabled policy architecture
consisting of four layers: Unifying Logic (UNL), Policy/meta-
Policy Interchange Format (PIF/meta-PIF), Privacy Protec-
tion/DRM (PPD), and Domain Speciﬁc Applications (DSA).
Here UNL directly corresponds to the layer “Unifying Logic”
of the most recent version of the Semantic Web architecture.
We also introduce a meta-PIF layer, side by side with the
corresponding PIF layer, allowing software agents in the fa-
cilitator, to provide the management functions of interchange,
reconciliation, and combination of policies. The Policy Web
architecture can be viewed as an extension of the Semantic
Web architecture shown as Fig. 1.
Fig. 1. SemPIF: A semantics-enabled layered policy model centered on
semantic policy interchange format (PIF) and meta-PIF.
PIF is built on DL-based ontologies and LP-based rules,
i.e. O +R, that allow agents in the facilitator to support
interchange services of policies created from different policy
languages. In addition, we may use meta-PIF to specify meta-
policies for managing policies created from different policy
languages. A meta-policy is a policy about policies that
provides a set of rules for realizing services needed for the
management of policies. Moreover, a meta-policy consists of
a set of rules for setting up the priority of polices to coordinate,
2010 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology
978-0-7695-4191-4/10 $26.00 © 2010 IEEE
DOI 10.1109/WI-IAT.2010.238
302
B. Policy Interchange Format
The PIF layer consists of regular DL-based policy lan-
guages, such as Rei, KAoS; or Horn-based policy languages,
such as EPAL [15], and XML-syntax policy languages, such
as XACML [16]. P3P and EPAL were proposed as policy
languages for privacy protection in the corresponding client-
server and server-server models [17] [18]. As REL sublayer,
ODRL and XrML were proposed for designing DRM poli-
cies [19] [20]. DL-based or Horn-based logic can be used as
foundations to underpin these RELs with explicitly deﬁned
semantics for policy languages.
A policy’s explicit representation in terms of ontologies
or rules depends on what the underlying logic foundation of
your policy language is. If policies are created from a DL-
based policy language, such as Rei or KAoS, then ordinary
policies are shown as T Box ontology schemas and ABox
instances. Otherwise, with policies created from LP-based
policy languages, such as EPAL, ordinary policies are sets
of rules and facts using unary or binary predicates.
These policy languages in the PIF layer do not fully utilize
the syntax and semantics expressive power of OWL or RDF(S)
shown in the SWLA. Therefore, we do not expect these policy
languages to be able to leverage the power of existing ontology
or rule languages. Another restriction is policies created from
different policy languages might not be able to interchange or
negotiate with each other. This calls for the use of SemPIF to
achieve policy interchange, combination, reconciliation, and
negotiation.
C. Privacy Protection and DRM
Privacy protection and DRM are introduced as independent
but intertwined layers on top of PIF / meta-PIF and the
Trust layer (see Fig. 1). This relationship reﬂects that access
rights enforcements for these two domains are closely related
with each other. In [21], the authors proposed that a DRM
system should consider user-desirable privacy rights indicated
in the Fair Information Principles (FIP), such as data collec-
tion, retention, use, disclosure, and destruction, etc., when it
enforces privacy protection policies. Otherwise, user privacy
rights might be violated. A scenario will be demonstrated to
show how agents in the facilitator employ SemPIF to integrate
DRM and privacy protection policies (see section III).
III. A SCENARIO OF DIGITAL LIBRARY SUBSCRIPTION
Protection policies are created from various policy lan-
guages, such as ODRL, P3P, XACML, and EPAL, for enforc-
ing DRM and privacy protection. This access-control scenario
is extended from policy-aware access control for the open
Web environment [22]. Agents in the facilitator use PIF-based
policies to provide services of integrating semantics-enabled
protection policies between a client and a server. Moreover,
Agents use meta-PIF-based policies to manage policies, which
permits clients and a server to compromise on their respective
rights and obligations(see Fig. 3).
Fig. 3. Agents in the facilitator provide policy interchange services with PIF-
based policies and policy management services with meta-PIF-based policies
A. Web server’s policies
The NCCU university library has subscribed to IEEE,
ACM , and Springer digital library services, which provide
a set of eJournal article access rights for authorized students
and staff. There are two types of policy for an IEEE Web
server: one for DRM and the other for the declaration of
privacy statements.
1) Policies in the IEEE server: The IEEE publisher
has two PIF-based policies: policy(drm1− IEEE) for
DRM and policy(pp1− IEEE) for privacy declaration.
policy(drm1− IEEE) indicates that the policy’s name is
drm1-IEEE, which corresponds to a URI as a policy indicator
for agents to apply a meta-PIF policy to manage it. The pred-
icates of each RIF rule are speciﬁed in PIF-based ontologies
(see Fig. 4 and Fig. 5).
• policy(drm1− IEEE):
If a student owns a valid student ID issued by a
department of a university, e.g. a registrar, and its library
is one of the subscribers on the IEEE publisher’s list,
then the student is endowed with DRM usage rights
{download, view, print} for eJournals from a Web
server of the IEEE publisher’s delegation.
?st#Student∧?id#StudentID∧?st[own →?id]
∧?uni[nccuHasPartR →?rg]∧?st[enrolledAt →?uni]
∧?rg[issue →?id]∧?uni[nccuhasPartN →?lib]
∧?lib[subscribedTo → IEEE]
∧IEEE[hasPublished →?ejr]
∧IEEE[endowedWith →?rgt]∧?rgt[appliedTo →?ejr]
∧IEEE[delegate →?st] =⇒?st[endowedWith →?d]
∧?st[endowedWith →?v] ∧?st[endowedWith →?p]
∧?d#Download∧?d[appliedTo →?ejr]
∧?v#View∧?v[appliedTo →?ejr]
∧?p#Print∧?p[appliedTo →?ejr].
• policy(pp1− IEEE):
If a person is endowed with DRM usage rights from a
Web server of the IEEE’s publisher and this publisher
has the purpose of enforcing DRM control for collecting,
304
Fig. 5. A PIF-based ontology for DRM policies
PIF-based policies. The policy itself is introduced as a
resource with respective users, rights, and conditions, etc.
for agents to enforce its policy management services.
• Meta-PIF is a meta-policy language for PIF and only
provides management services for PIF-based policies.
If meta-PIF attempts to provide an interchange format
for different meta-policies in PIF, then we also have to
provide policy management interoperability services for
different policy languages. This requires further study.
B. Agents in the facilitator enable meta-PIF policies
We use P3P basic vocabularies to specify data owner (or
subject), user (or object), type, right, obligation as
ontology classes with associated properties to formalize the
semantics of privacy protection [10]. Furthermore, we also use
Datalog-based rules to decide whether a Web server is allowed
to collect, retain, or disclose a particular client’s proﬁles
and digital traces. Policies are deﬁned as a combination of
O +R. In order to unify policies from a client and a server,
we allow agents in the facilitator to collect client and server’s
ontologies, and to enable SemPIF policy transformation and
management services shown as follows:
1) Ontologies mapping and aligning
We map and align vocabularies from domain dependent
ontologies of DRM and privacy protection policies.
In Section III scenario, the vocabularies of class
”Student, Publisher” in policy(drm1− IEEE)
and policy(pp1− IEEE) correspond to
”WebClient, WebServer” vocabularies of class
in policy(pp3− John) to policy(pp4− John).
Furthermore, we align the ontology schemas constructed
with the vocabularies of class and property.
2) Semantics mediation and uniﬁcation
We mediate and unify the semantic differences of
vocabularies and schemas in the ontologies belong-
ing to different protection policies. For example, a
condition of Retain[hasDuration → =2Month] in the
policy(pp1− IEEE) corresponds to a condition of
”retention period less than fourteen days” in the
policy(pp4− John).
3) Conﬂicts resolving
Agents initiate the reconciliation processes between
conﬂicting policies using the meta-PIF framework.
In this example, IEEE declares its intention to
collect, retain, and disclose a Web user’s data in
the policy(pp1− IEEE) for two months. The data
include a Web user’s proﬁles and digital traces.
Web user John does not allow an IEEE Web
server to disclose his personal proﬁle to the other
partners. Thus, policies between policy(pp1− IEEE)
and policy(pp3− John), policy(pp4− John) are
inconsistent. Agents enable a policy priority-setting with
meta-PIF-based policies to avoid the policy conﬂicts.
In this example, an agent gives a higher priority to a
client’s policy(pp3− John) and policy(pp5− John)
than to a server’s policy(pp1− IEEE). The
defeasible logic of a meta-PIF’s expression,
Overrides(policy(?pid1), policy(?pid2)),
for resolving conﬂicts of policies is a possible
solution, where policy(?pid1) is bound to
policy(pp3− John) and policy(pp4− John);
policy(?pid2) is bound to policy(pp1− IEEE). This
negotiation protocol requires further study.
306
國科會補助計畫衍生研發成果推廣資料表
日期:2010/12/08
國科會補助計畫
計畫名稱: 給隱私權保護與著作權管理使用的語意式web規範互通語言
計畫主持人: 胡毓忠
計畫編號: 98-2221-E-004-009- 學門領域: WEB 技術
無研發成果推廣資料
碩士生 4 0 100% 郭弘毅、吳建輝、楊竣展、楊協達 
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計
畫人力 
（外國
籍） 
專任助理 0 0 100% 
人次
 
其他成果 
(無法以量
化表達之
成果如辦
理學術活
動、獲得獎
項、重要國
際合作、研
究成果國
際影響力
及其他協
助產業技
術發展之
具體效益
事項等，請
以文字敘
述填列。) 
辦理 RuleML-Challenge-2009 的國際研討會競賽，並且出版論文集於 CEUR,請參考： 
http://sunsite.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-549/ 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人
數 0 
 
