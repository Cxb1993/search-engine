II 
 
Abstract 
In this project, we aim to design the attack algorithms for simulation soccer team 
and real soccer robots. The first theme of this project is to improve the streategy of the 
simulation soccer team. And the second theme of this project is to improve the 
attacking algorithm of the soccer robots. Finally, we combine the result of two years 
to focus on passing, intercepting and shooting probability of simulation soccer team. 
The experiments show that the proposed algorithm of our team increases not only the 
winning percentage of games but also other performance factors. 
 
Keywords: simulation soccer, soccer robots, multi-agent system, Robocup, FIRA 
1 
 
  
第一年
成果報告
 
3 
 
 
圖1.1: RoboCup Simulation Monitor Client. 
 
RoboCup Simulator的環境架構就如圖1.1一樣.所有的Agent都是代表一個獨
立的球員.所有Agent會獨立跟Server做連線.Server則負責將這些指令模擬成一個
真實的環境,並且執行Agent所傳過來的指令 .然後將訊息回傳給每個Agent.Agent
收到訊息後,會進行策略的判斷與決策 .然後將動作的基本指令 ,傳送給Server.圖
1.2為Agent的系統架構圖.當每一個Agent從Simulator接收到訊息時(圖中1部份),
會進入每個Agent的決策流程.當每一個Agent決定好策略與個人技能時,就會把決
定好的技能,變成一個基本動作.利如射門(Shoot)的基本動作為踢球(kick),那麼
kick就會去決定踢球的力量 (power)與kick的方向(direction).最後,再將這個指令組
合成一個命令 (Command),如“kickpowerdirection”後透過UDP的方式傳送指令 (圖
中2部份). 
 
圖1.2: Agent 系統架構圖
5 
 
第三章 文獻探討 
 
3.1 相關研究論文 
在相關研究中,我們閱讀了數篇相關論文.第一篇文獻作者GuoYe-Jun,所發表
的”The Construction of MAS in RoboCup imulation”,浙江大學,2004年[14].在這篇
文獻中,作者主要提到方法為:(1)決策規劃.(2)如何決定Pass的對象(3)隊形.在決策
規劃中,作者先將所有場上球員分做控球者與非控球者.控球者就是在本隊中,可
以最快追到球的球員,或是已經持球的球員.至於其它球員,則為非控球者.如果自
己是非控球者,那就需要跑到相對應的位置上.例如Agent的屬性為後衛,就不要跑
到前鋒去.左翼的球員就不要跑到右翼去 .如果是控球球員.那只有一個動作,就是
向前去接球或搶球. 
對於決策規畫中所談的最快追到球的球員,就去追球.我們認為,離球最近的
球員,不一定是最快能追到球的球員.圖3.1說明,當敵人向球門的方向踢球,雖然球
員4號離球最近,但是以踢球的速度來看,當球員4號要跑到球移動的路徑上去追球,
可能已經來不及了.但是球員3號卻可以及時的截住足球.這個時候,就不在是以離
球最近的球員才去追球.而是要判斷球速與球員本身是否可以即時的跑到截球的
線上,將球截住. 
 
圖3.1: 離球最近的不一定追得到球 
 
第二篇文獻作者ChangdaWang在2004發表的一篇碩士論文 ”Design and 
Implementation of a General Decision-making Model in RoboCup Simulation”[21].
7 
 
 
圖3.3: 傳球示意圖 
 
第三篇文獻是GuoBo所發表的論文“Strategy of Pass in RoboCup Simulation” 
[22].裡面提到如圖3.3所示,當球員1站在A點,球員2站在B點.球員A將球向C點踢
出,球員2沿著BC方向去追球.最後球員2能在C點的位置將球接到.作者提出的方
式是利用餘弦定理先算出BC線段長度,並且作者假設球速每秒衰減1-d(d為固定)
值.假設經過T的時間,足球會到達C點.因此只要讓球員2在小於T這個時間點到達
C即可接到球.對於這個方法,我們看出了許多問題.首先,球員2必需計算出球將會
落在C點.假設,球員2並未看到或得知球員1要傳球,那麼當球被傳出去時,球肯定
會漏接.再者,如果球員的體力不夠 ,可能無法在時間內跑到C點.如此一來當球員1
將球踢出去,球員2就會因為無法準時到達C點而導致漏接的情況 .並且在真實的
足球場上,球員的行進路線,往往會有敵人在阻擋.只要敵人一阻擋到接球球員,接
球球員的前進速度就會降低 .此時,不確定的因素又會更多了.在觀看許多的比賽
中,我們發現這種方式的傳球,常常因為設計的不好,而讓球隊失去控球權. 
 
圖3.4: JunGuan在2004年論文中所提傳球示意圖 
 
第四篇文獻是作者Jun Guan[13]在2004年所提出的論文.文中指出要實現一
9 
 
第四章 研究方法 
4.1 策略 
動機:我們希望能讓球員與球員能有很好的默契,並且快速的將球帶往有利的位置,
直到可以執行Shoot得分.以取得勝利. 
我們的方法:足球基本策略有兩種 ,防守與進攻.在本計劃中,我們先不考慮防守的
部份.我們專注在進攻的部份.在進攻的部份中,拿到球的球員會計算出目前要執
行那種動作是最適合.其動作分為: 
•自己Shoot成功的機率. 
•Pass給隊友成功的機率*隊友Shoot成功的機率. 
•自己Dribble成功的機會. 
1.自己Dribble到指定位置的成功的機率*自己Shoot成功的機率. 
2.自己Dribble到指定位置成功的機率 *Pass給隊友成功的機率 *隊友Shoot成功
的機率 .在計算的最後 ,我們會挑選成功機率最大的動作去執行 (主程
式:Algorithm 4.1, Shoot成功的機率計算Algorithm 4.2 ,Pass成功的機率機算
Algorithm 4.3 ,Dribble成功的機率計算 Algorithm 4.4) 
11 
 
 
 
動機:想要提升球員 Shoot 成功的機率. 
問題:當守門員已經在球門阻擋,如果我們不算出最佳 Shoot 的角度,那球如果都往
球門中間踢.被截住的機會就很大.此時,會造成球落入敵方手中.我們的解決方法:
13 
 
 
圖4.3: 實際可以踢求的最大角度α3與可通過的距離d5 
 
當Shoot的最大角度計算出來後,因為角度是從 αmin到 αmax中取出一個最適合
的角度去執行 Shoot的動作.那這個 Shoot的動作也會依造距離球門的遠近而有機
率上的問題.距離越近,當球到達球門的誤差會越小.以表 4.1中所示,我們先用正弦
定理求出偏移的程度.如圖 4.4,當球員 7將球朝 A點踢出時,依據 d的距離遠近,再
配上相對應的角度,我們會發現當球到達時,並不會落在A點上面,而是落在B點上
面.因為當距離越來越遠 ,隨者球場的噪音或風力影響 ,當足球前進的力小於噪音
的影響力,此時,足球前進的角度將會有所影響 .這種影響的機率 ,我們做了許多次
的實驗.並且將數據記錄下來分析.數據中,在 5 公尺,偏移在±2◦內的機率為 1(圖
4.6).所以在 5公尺,Shoot 得分機率是最高的. 
 
圖4.4: 當球員7踢球時,角度與偏移程度示意圖 
 
 
 
15 
 
成功的機率可能很小,所以球員 7想要計算出讓球員 8執行 Shoot的動作成功的機
率.在這邊,我們就必需先求出球員 8 的最佳 Shoot 角度.其計算的方式如公式
4.4.|d4|與|d5|為長度.經過公式計算,我們可以先得到 α2 的角度.再來,利用先前介紹
的最佳 Shoot角度的計算,求得 α2出來.球員 8的最佳 Shoot角度求得後,我們即可
利用距離及偏移機率求出 Shoot 成功的機率. 
 
Example: 假設球員 7 與球員 8 距離球門 15 公尺.又依據 RoboCup 使用手冊
指出 kickable 的 margin 為 0.7m.根據最佳 Shoot 角度所計算出來的結果,假設
d3=2m(1m×2),圖 4.6 說明 Example:假設球員 7與球員 8 距離球門 15 公尺.又依據
RoboCup使用手冊指出 kickable的 margin 為 0.7m.根據最佳 Shoot角度所計算出
來的結果,假設 d3=2m(1m×2),圖 4.6說明 
 
圖4.6: 球往中間Shoot,左右可容許的距離 
 
 
表 4.2: 距離 15m 時,會偏移的機率 
17 
 
4.3 扇形密度的計算 
在扇形密度的計算中,我們只將起點PositionA(x1, y1),與終點PositionB(x2, y2),
將半徑d1給放入求取目標物密度演算法中去計算.如圖4.7,我們將要求出球員7至
球員8之間,這個扇形內是否有過多的敵人.因為球員7可能要傳球給球員8.所以如
果發現在這個扇形中,有過多的敵方球員,那帶球的這個動作可能會失敗.因為敵
人人數過多,會造成球被敵人搶走.所以這個時候,可以利用扇形求密度的方式,求
出球員7至球員8扇形內的敵人個數. 
 
 
圖4.7: 利用扇形形密度計算求出球員7傳球至球員8扇形內敵人或隊友個數 
 
假設球員7要傳球給球員8,此時,我們利用起點坐標(x1, y1)與終點坐標(x2, y2)
求出此段長度(公式4.6).接下來我們求出此條直線的直線方程式(公式4.7).有了這
個直線方程式,我們就可以求出這條線上任一點,假設我們將這個點設為(x2, y2),也
就是PositionB的坐標.我們在從這個坐標上找出垂直於這條線的直線的兩個點坐
標(x4, y4)(公式4.8).然後就可以給定我們的半徑d1.這時我們有了新的(x4, y4)坐標
後,我們再從起點坐標(x1, y1)找出到新的(x4, y4)的直線方程式.並且可以求出這兩
個直線的角度α.最後,我們只要將敵人對於我的相對角度與這個新的角度α做比較.
如果是小於這個角度α的,並且距離小於d3此段長度,則敵人密度個數加一. 
19 
 
 
圖4.9: 冰淇淋形的密度計算 
 
4.5 冰淇淋形密度計算 
在之前我們提到過圓形的密度計算與扇形的密度計算的方法.但是,這兩個求
得出來的範圍確不是很完美.我們希望能求出在圓柱形內所有的敵方球員,因為這
個會影響到傳球的成功率 .然後再求出接球的球員,他圓形的密度 .因為當接球的
球員接到球後,如果他週圍有很多敵方球員,那也會影響到接球球員他帶球進攻的
成功率 .所以,在這一章節,我們提出利用冰淇淋的形狀求出我們想要的密度 (圖
4.9).假設,球員7要將球傳給球員8.然後要由球員8進行帶球前進的動作.此時我們
利用圓柱形求出在圓柱形內有多少個敵人.然後,我們要確定當球傳到球員8的時
候,球員8以d為半徑的圓形內,要沒有敵人.此時,我們就要將圓形及圓柱形交集的
範圍給扣除掉.因為我們會重覆計算到Opp6的次數 .這個時候我們對圓形的演算
法做修改.我們修改成在圓形密度計算中,距離大於d3的,角度小於等於α.我們就確
定在半圓弧內.最後,我們只要將圓柱形所計算到的敵方球員個數加上圓弧密度上
所計算到的個數,就是我們最後想要的結果. 
 
4.6  Dribble成功的機率 
在前面我們探討了如果利用圓形密度的計算來了解球員周圍的狀況.現在,我
們將圓形密度的計算應用在帶球球員在前進中,是否球會被敵人給截走首先我們
21 
 
圓內的敵人編號.但是這個對我們來說不是最重要的 .重要的是,只要在這個圓內
我們發現有敵人已經進入了,我們帶球前進的成功機率就是為 0.反之,如果在這個
圓內,沒有敵人進入,則我們帶球前進成功的機會,就是 1.也就是 100%. 
 
4.7 全體策略說明 
我們想要設計全體策略的動機為 ,讓我們所有球員都能依照我們所設計的流
程執行動作,這樣即可設計出一支具有訓練的球隊出來.我們的方法: 
當離球最近的球員持球後,我們會讓球員有三種動作可以選擇.Shoot,Pass,Dribble.
然而這三種動作,會有各別的動作條件.我們將詳細介紹所有動作的條件設定.假
設球員持球後,只要依照這些規則判斷,即可決定所需要的動作.Shoot條件:我們要
決定這個Shoot的動作時,一定會讓他的規則成立 .規則成立後,我們即可利用成功
機率最高的球員,執行此動作.這個動作的目地,是希望接近敵方球門時,能有效的
提升Shoot次數.如此,當我們的Shoot動作越精確 ,得分的機會也越高.如此,將可把
對手打敗. 
我們的做法是,(1).當靠近球門區 20m 即優先考慮射門動作.(2).挑選機率最大
的角度射門.(3).如不能執行射門,而靠近敵方球門區.則利用短傳將球傳給其它球
員.Pass 條件:我們選擇這個動作的目的,一定是想要將球快速帶往敵方球門,或是
有敵人已經靠近我們的時後,才會選擇此動作.我們的做法為(1).利用 Circle 檢查
看有無敵人靠近我(截我球).(2).利用 Cone 檢查看 Pass 路徑上是否會被截走.(3).
球員與球員傳球的距離不能超過 20m.因為超過 20m,球員可能會因為距離過遠 ,
而造成足球前進的速度不足 ,而讓球被敵人給截走.(4)球員與球員傳球的角度不
能超過±30 度.會限制這個條件是因為,當如果持球球員背對者接球球員.當在 T+1
的週期,我們選擇要將足球傳給隊友,而指令已經在 T週期組合完成,然而,T週期中,
接球球員的角度,並不會與 T+1週期相同.所以當兩個球員面對面角度超過±30度,
就會造成誤傳.這個道理就如同背對者球員迴轉加上踢球,會讓球很容易踢偏的情
況是一樣.Dribble 條件:會選擇這個動作的目的為,當所有的動作我們都無法執行.
只要是 Shoot 就被守門員截走,或是 Pass 就被敵人截走.此時,只能利用 Dribble 的
動作,來看 Tn+1 週期是否有更好的動作可以選擇.以下是我們整個全體策略的策
略演算法流程圖,圖 4.10 所示,當我們接收到從 Server 所傳回來的訊息時,我們會
23 
 
 
圖4.10:策略演算法流程圖 
 
 
 
圖4.11:解決乒乓效應的方法 
 
25 
 
 
圖5.1:開球的隊形 
 
RoboCup Soccer Simulation Server有一個比較方便的使用法.當在設計球隊時,
我們只需將左邊當做是我方的防守區域.右邊當做是敵方的位置即可.所以當我們
看到goal l的時後,就知道我們目前正面對者我方的區域.如果看到是goal r的話,則
是面對敵人的區域.所以在程式設計上,可以很簡單的設計我們的程式.接者,我們
將採用343隊形進攻敵方球門.如圖5.2,靠近中線的球員2,球員3,球員5為我方的後
衛球員.他們的活動範圍我們設定為不能離開中線太遠 .以免回防不及 .中場的球
員為靠近上方的球員6,與靠近下方的球員7.中間由球員4,球員8守者.前鋒球員為
球員10,球員9,球員11三個球員進行進攻. 
 
27 
 
 
圖5.3:最近三十場Pass的比較. 
 
圖5.3:最近三十場Dribble的比較. 
 
Shoot成功率的提升 .在我們的設計中,我們希望利用 Pass將足球帶往敵方的
球門.如此,我們可以執行Shoot這個動作的機會,將會增加.如此,得分的機會也大大
增加.在我們將球帶往敵方球門後,球員會依判斷,假設球員正前方的敵人除了守
門員外,還有2個以上的敵人在阻檔.那射門成功的機會,將會大大的減少.甚至降為
0.這時,我們的球員就會選擇將足球傳給隊友.由隊友進行射門的動作. 
經過幾場的比賽下來,我們取出最近三十場的比賽結果進行分析.在三十場的
比賽下來,我們的總得分是44分.比原先的三十分高出許多.我們也放寬Shoot的條
29 
 
第六章 計畫成果自評 
最後,我們對本年度所提出的方法做一個結論與未來還需要改善的方向.首先,
我們提出的提升Shoot與Pass成功的機率,的確能有效的將足球帶往敵方禁區與將
得分提高.只是,在Pass過程中,我們還是會因為Pass誤差,導致球踢出場外或是被敵
人截走.這個部份,在中場發生的情況是比較高.因為中場要銜接後衛及前鋒.當面
向後衛準備接球時,是非常準確的.但接到球必須轉向一個很大的角度 ,才會看到
前鋒.此時,可能會因為所見到的訊息還是之前的資訊.所以當中場球員一執行Pass
時,球就踢偏了.這個部份,我們還需要改善.也就是在接到球後,我們並不用急者做
Pass動作.可以停下數個cycle來獲取最新的資訊.如此,將可以更準確的執行Pass動
作.至於停下幾個cycle做判斷.可能會因為停下來並做轉身的動作 ,而不將球Pass
給其它隊員,造成足球被敵人給近身截走.這個部份,是我們未來可以改善的地方 .
也就是接到球後,是否應該先自己帶球.無論周圍是否安全,先帶球到球員本身判
斷安全的地方後,再執行Pass.這個部份將是我們未來修改的重點. 
未來我們也預計加強Dribble的技能.我們準備加入球員Dribble的避障功能.
讓球員在Dribble前進時,看到敵方的球員能夠躲開,然後再將球帶往敵方球門後執
行Shoot的動作.在這個Dribble技能中,主要解決的就是如何判斷閃躲敵人的方向.
並且保證球不會因為閃避敵人而越帶越偏.直至看不到敵方球門或是出界.所以在
這部份也是我們未來主要規劃研究的方向之一. 
另外一個可以研究的方向就是為了解決乒乓效應所帶來的問題 ,我們利用個
人通訊系統中解決乒乓效應的方法,但是這個方法我們目前是將球場分成三等份,
每一條臨界線前後十公尺畫出虛擬的線出來.在未來,我們將會探討這些臨界線所
在的位置.因為如果臨界線太靠近我方球門區,可能會讓我方球員沒有時間去反應
而造成失分的可能性.離敵方球門區太近或是太遠,也可能造成進攻的不易 .所以
這部份也是我們未來研究的重點之一.附錄一 [24]為本計畫參與成員童國城的碩
士論文附錄二 [25]為會議投稿論文已發表至2007年的FIRA Robot World會議，且
為該會議所接受，將來會持續將成果發表至學術界並與之共享。 
31 
 
Implement A Cooperative Team”, National Laboratory of Industry Control 
Technology, Zhejiang University. 
[14] Guo Ye-Jun, “The Construction of MAS in RoboCup Simulation”, Zhejiang 
University, February 2004. 
[15] SONG Zhi-wei, CHEN Xiao-ping, “REINFORCEME NT LEARNIN G IN 
ROBOCUP SIMULATION”, ILIB.Cn, Dec.2003. 
[16] Azam Rabiee, Nasser Ghasem-Aghaee, “A Scoring Policy for Simulated Soccer 
Agents Using Reinforcement Learning”, 2nd International Conference on 
Autonomous Robots and Agents, 2004. 
[17] Mao Cheny, Klaus Dorer, “RoboCup Soccer Server for Soccer Server Version 
7.07 and later”, February 11, 2003.   
[18] Remco de Boer, Jelle Kok, “The Incremental Development of a Synthetic 
Multi-Agent System:THe UvA Trilearn 2001 Robotic Soccer Simulation Team”, 
February 28,2002.   
[19] LI Shi, Xu Xu-ming, “The Server Model of Robot Soccer SImulator 
Tournament”, ILIB.Cn, May 2000.   
[20] Luis Paulo Reis1 and Nuno Lau2, “FC Portugal Team Description:RoboCup 
2000 Simulation League Champion”, http://www.ieeta.pt/robocup/archive.htm   
[21] Changda Wang, Xianyi Chen, Xibin Zhao1 Shiguang Ju, “Design and 
Implementation of a General Decision-making Model in RoboCup Simulation”, 
DOCIS Documents in Computing and Information Science, 2004.   
[22] GUO Bo, “Strategy of Pass in RoboCup Simulation”, ILIB.Cn, Feb. 2006.   
[23] Guo Bo, “Strategy of Pass in RoboCup Simulation”, Computer Technology and 
Development, Vol. 2, Feb. 2006.   
[24] 童國城, “在機器人足球賽中研製一高成功率的射門與傳球策略 ”, 長庚大
學資訊工程研究所碩士論文,2007.   
[25] Shih-Lin Wu,Yi-Ren Liou, Wei-Hua Lin, Ming-Han Wu, “A Multi-agent 
Algorithm for Robot Soccer Games in Fira Simulation League”, FIRA Robot 
World Congress, San Francisco, U.S.A, 2007. 
 
 
33 
 
第一章 前言 
1.1 序論 
足球運動源自於古希臘，英倫等地，隨著時代的變化，目前已成為大家喜歡
看的足球比賽。在世界盃足球比賽裡，大家各自為支持的國家隊伍一路過關斬將
而加油。然而，拜科技進步之賜，現在我們也可以讓機器人去踢足球了。在國際
上有一些大型的世界性機器人足球比賽，例如RoboCup和FIRA都是。而本計畫
的所有研究成果也將會運用在我們實驗室的機器人上。在真實的足球比賽裡，教
練都會有所謂的進攻策略或是防守策略。當敵人帶球一路從半場到我方球門的這
一段時間裡，該怎麼去組織防守，該怎麼去阻擋敵方進攻，都相當的重要。進攻
固然是最好的防守，然而防守也可以說是變相進攻，擋掉了越多分就是最好的進
攻本錢。1.2系統架構介紹機器人為無線感測機器人(WirelessSensorRobots)，利用
攝影機的擷取，以及無線網路的發送訊息，讓WirelessSensorRobot可以和我們的
電腦做連繫。如下圖(1) 
 
(圖1) 機器人通訊系統 
35 
 
 
（圖4）機器人之身份定位選擇卡榫1-3:機器人ID卡榫4-7:接收之頻道訊號卡
榫8:on表示晶片代號為RF418   Off則表示RF433 
 
(圖5)WirelessSensorRobots 
 
無線感測機器人則利用接收到的訊號來控制馬達驅動左右輪，執行動作。 
 
（圖6）攝影機 
37 
 
 
（圖9）MatroxMeteor2影像擷取卡 
影像擷取卡（圖9）則是將收到影像訊號傳輸到電腦中給程式作分析動作。 
1.色彩擷取先將擷取出來的圖片色彩經過校正，場地變暗，周圍比較亮，有
助於色塊的抓取。（圖10） 
 
（圖10） 
2.擷取各機器人之顏色區別，讓軟體知道機器人顏色以區分ID（圖11） 
39 
 
第二章 研究目的 
2.1 動機  
本計劃欲將足球機器人隊伍的防守部分增強，因為在真實的足球比賽裡，教
練都會有所謂的進攻策略或是防守策略。當敵人帶球一路從半場到我方球門的這
一段時間裡，該怎麼去組織防守，該怎麼去阻擋敵方進攻，都相當的重要。進攻
固然是最好的防守，然而防守也可以說是變相進攻，擋掉了越多分就是最好的進
攻本錢，因此我們將在防守上進行演算法的研究與增強。 
2.2 研究目標  
一支優秀的足球機器人隊伍，必須要能快速且精準地依照我們所規劃好的進
攻/防守演算法執行動作。而如同先前所介紹的，系統主要是以影像識別的方式
來判斷機器人及足球的位置，因此現場的燈光條件、環境因素都會影響系統的判
定，而造成將球誤判成球員，將球員誤判為球的可能，因此本計劃希望可以除了
在防守的策略上加以改進增強之外，另外也將燈光條件的影響因素考慮進去，讓
系統能更有彈性且能有效判別球員與球的位置。在經過實際測試後，我們發現原
廠的影像辨識功能過於容易受到場地燈光改變而影響，進而造成敵我無法分辨，
或是將球員與球的位置誤判而導致錯誤的決策，因此我們會在影像辨識的演算法
進行加強與改進，使系統可以適應不同的燈光環境而不造成誤判。 
41 
 
 
(圖14) 
角度α為機器人和障礙物所相差的角度，指出了機器人和障礙物的相對夾角，並
有公式(一) 
……………式(一) 
此時α離碰撞障礙物的距離越近、角度越小則碰撞機率越高。這個觀念可以
用在進攻策略上，當邏輯中判斷出有了障礙物在附近，而且碰撞率極高時，則執
行處理球的動作，將球傳出或做閃避的動作。因此邏輯上來說分成下列幾個步驟： 
1. 持續搜尋向量 Ro (本機器人和障礙物的相對向量) 
2. 將α值計算出來 
3. 利用算出來的α值做執行動作的判斷 
[if(α<判斷值) 
 則表示碰撞率高，做閃避傳球動作; 
 else 
 持續將(球/機器人)往(球門/球)的方向前進，並加快速度。] 
43 
 
缺陷。如下圖(19)，兩隻機器人在最佳的防守位置下，幾乎可以把對方的進攻角
度給擋住而達到防守成功的效果。因此，兩隻機器人的站位就形成了關鍵。實驗
的結果，防守成功率是90%。但若是利用三隻機器人做防守時，或許可以達到95%
的防守成功率，但是相對的進攻的能力就會大大減弱。因此我採用的方法是利用
兩隻機器人來防守。當敵方帶球接近我方球門時，利用鄰近的機器人到守門員前
的位置做交叉防守。而守門員的搭配位置可以決定所能防守的區塊面積大小以及
對方進球的機率。如下圖(16)，若是按照圖(16)的防守策略，這樣的站位雖然看
似可以阻擋敵方進球，不過在把所有可能進球情形考慮進去之後，射門角度是
Θ，阻擋掉的角度是α，發現還是有相當高的機率Θ-α的角度可以進球。或許可以
考慮到守門員是可以移動的，但在極短範圍和時間內會使的守門員來不及把球擋
下或是破壞掉。 
 
（圖16）仍有很高的機會被得分 
若是像(圖17)的站位，5號守門員在上方，4號在左下方，則在畫出敵方可能
進球路徑的同時可以發現，進球的機率會降低很多，原因就是4號機器人可以擋
掉大部分Θ-α角度的進球機率。 
45 
 
 
（圖18）區域防守 
 
（圖19） 
我們歸納出了防守搭配位置的演算法，如下圖(圖20)，球場位置座標是固定
的，球的位置是動態，還有一條協防線在(Assist_X,Y)的位置。已知球點(Xb,Yb)，
球門點A(Xa_Goal,Ya_Goal)，可以算出一條線性方程式
代入協防線(Assist_X,Yd)，可以
得到(Assist_X, )，因為機器人本身
有寬度，所以再把此點的y座標加上Robot_Wide，就是4號協防機器人的中心座
標了。再來要算出守門員的最佳位置，剩下的區塊與5守門員會形成一個三角形，
此三角形的面積也是敵方所能進攻的區域面積，使得此三角形驗面積越小的同時
47 
 
 
（圖21） 
實際情形協防成功機率  
 
4.2 影像辨識  
在進行影像辨識演算法的改進介紹之前，需要先介紹兩個影像辨識重要的名
詞，YUV及色值檔：YUV:Y是表示亮度，UV是表示色差。YUV表示法的重要性
是亮度與色度是互相獨立的，與RGB表示法相比，多出了考慮亮度的條件，所以
我們的系統是採用YUV表示法。色值檔:儲存每個顏色的YUV範圍值，系統會依
據色值檔裡的數據來判別機器人ID。系統預設是採用單一色值檔（表2） 
（表 2） 
 
 
 
 
 
 
 
 Ymin Ymax Umin Umax Vmin Vmax 
BallColor(橘) 77 151 22 118 229 255 
TeamColor(藍) 60 161 174 248 34 114 
ID1Color(粉) 60 201 107 154 17 87 
ID2Color(綠) 149 255 40 169 198 254 
ID3Color(紫) 86 135 159 208 137 187 
ID4Color,(白)ID5Color 228 255 124 173 102 127 
49 
 
第五章 結果與討論 
5.1防守演算法改進成果測試 
敵方帶球往我方球門衝過來時，若在此時能設法把球破壞掉，則可以降低被
得分的機會。和一般真人比賽的情形很像，當有一方持球接近敵方球門的時候，
另一方的球員都會設法趕快把球抄走或是往其他方向把球踢開，為的就是不讓球
接進球門。第一步要可以截到球，要先知道對方大概會走什麼樣的路徑，所以要
做預測路徑以及攔截點。所謂的攔截點就是我方機器人會在敵人走的路徑上的某
一點把球截掉的那個瞬間。 
 
（圖 23） 
我方機器人在攔截點上實作方法是利用預測球路徑的方式，先判斷敵方機器
人的行走路線，再選定抄球機器人前往攔截點作攔截。最好的抄球時機就是當敵
方機器人帶球往我方球門衝過來的時候，我們可以在中場靠近我方的這半部預設
攔截點。當敵方帶球往其球門衝時，找出一台機器人可以在最短時間內去抄球，
選定的機器人有下列因素：1.到攔截點的距離短 2.到攔截點的時間短經過多次的
實驗結果，利用到達時間短會比機器人距離預定點短還來的精確很多，關鍵就在
於機器人本身有一些物理因素需要克服，例如與地板的摩擦力，輪軸間的協調
性，以及齒輪間的精準度都會影響機器人是否會遵照演算法的形式去跑，這個時
候討論最短路徑就是最快到達定點可能就不是那麼站的住腳。最短路徑還要加上
51 
 
情況二這是第二種情況(圖 25)，雖然 D1 會比 D2 小，但是由(圖 25)可以知
道，2號機器人到球後面的時間 T2，經過測試以後會比 T1小，因為 1號機器人
需要旋轉兩次才可以到達球的後方。 
 
（圖 26） 
情況三由上圖(圖 26)可以知道 2號機器人距離球 D2會比 1號機器人距離球
D1 來的近，但是由於一開始的機器人位置，1 號機器人可以馬上朝向球門並把
球直接踢進球門，反觀 2號機器人就必須要在經過旋轉才可以到達球的後方，時
間點上 T1絕對會比 T2來的小很多。 
 
（圖 27） 
情況四由上圖(圖 27)，2號機器人就在球的附近，D2 絕對比 D1小，但是仍
53 
 
 
（圖 30） 
 
根據實驗結果，球在經過碰撞後的行走路線會因帶球著所偏離的角度決定。
因為攔截者若是預先到達攔截點，則速度是為零，根據動量守恆定律，球的落點
會再帶球者的前方。如果兩隻機器人的角度呈一直線，則球最有可能的落點將會
卡在兩隻機器人的中間。若是帶球進攻的機器人並沒有與截球者呈一直線時，則
視當時進攻者的進攻角度而決定球的落點。 
 
（圖 31）實際情形 
55 
 
而判定機器人位置與 ID，進而發送命令。我們以每分鐘機器人的遺失次數換算
成遺失的改善率作為參考的依據。測試項目有二：1.一到三台機器人繞圈測試、
2.機器人繞場地邊界測試(皆以原始系統當作對照組)。(圖 34)是以改善後系統與
原始系統作比較，當只有一台機器人在場上繞圈測試時，可以改善 74%的機器人
遺失率。而當兩台或三台機器人在場上時，由於顏色數的增加，導致彼此間顏色
的混淆，因此改善遺失率會略微下降。 
機器人繞圈測試
60%
65%
70%
75%
1 2 3
機器人個數
改善遺失率
 
(圖 34) 改善後系統與原始系統的遺失率比較 
 
(圖 35) 改善後的機器人繞邊界遺失率 
(圖 35)為機器人繞場地邊界的測試，由於場地邊界的亮度較其他區域來的
低，若使用單一色值檔會產生較大的顏色誤差，系統不易判斷機器人位置與 ID，
以至於使用多個色值檔會對改善遺失率有較顯著的提升。 
57 
 
第七章 參考文獻 
[1] Peter James Thomas, B. Eng(Hons), “Evolutionary Learning of Control and 
Strategies in Robot Soccer,” 25th July 2003 .  
[2] J.C.Wolf1, J.D. Oliver2, P.Robinson1 and C.Diot3, “Multi-site development of a 
FIRA large league robot football system,” Proceedings of Third International 
Conference on Computational Intelligence, Roboticsand Autonomous Systems, 
Singapore (CIRAS) 2005, (ISSN:0219–6131).   
[3] Sebastien Ancenay1 and Frederic Maire, “A Time and Energy Optimal 
Controller for Mobile Robots,” Lecture Notes in Computer Science, 2004. 
[4] Liu, GuiquanChen, Xiaoping Wang, Xufa Zhang, “On Multi-Agent
 Collaborative Planning and Its Applicationin RoboCup,” Proceedings of the 3rd 
World Congress on Intelligent Control and Automation, 2000. 
[5] Norman Weiss, “A miniaturised Soccer Robot with local Vision Capabilities,” 
Third International Conference on Computational Intelligence, Robotics and 
Autonomous Systems, Singapore, 2005. 
[6] James Law, “Analysis of Multi-Robot Cooperationusing Voronoi Diagrams,” 3rd 
International Kemurdjian Workshop “Planetary rovers, space robotics and 
Earth-based robots-2005”, October 2005. 
[7] Uwe Egly, GregorNovak, Daniel Weber, “Decision Making for Mirosotsoccer 
Playing Robots,” 1st CLAWAR/EURON/IARP Workshop on Robots in 
Entertainment, Leisure and Hobby, 2005. 
[8] Han-Pang Huang, Chao-Chiun Liang, and Chun-Weilin, “Construction and 
Soccer Dynamics Analysis foran Integrated Multi-agent Soccer Robot System,” 
In Natl. Sci. Counc. ROC, 2001. 
[9] Albert SCHOUTE, Remco SEESINK, Werner DIERSSEN and Niek KOOIJ, 
59 
 
IEEE SICE-ICASE International Joint Conference, 2006.   
[18] LU Li, LIR Wan-chun, LIU Li, “Robust object recognition besed on color 
segmentation in robot soccer domain,” Computer Engineering and Design, 2004.  
[19] GUO Cheng-guo, XIONG Rong, CHU Jian, SHENG Yu, “Design of a Vision 
System for RoboCup Soccer Team under Varying Lighting Condition,” Robot, 
2006. 
61 
 
第一章 前言 
1.1 序論 
國際上最為有名的兩個機器人足球比賽組織分別為 Robot Soccer World Cup 
(RoboCup) 與  Federation of International Robot-soccer Association (FIRA)。
RoboCup 的大會目標是希望於 2050 年時，讓全部為真人大小的機器人足球隊
伍，能與該年世界盃足球賽冠軍隊伍比賽並獲勝。本論文將以 RoboCup 2D模擬
足球機器人作為研究的平台。這是因為在模擬比賽中，研究人員只需要將注意力
專精於策略的部份即可，而不需擔心機械構造的部分。 
在足球比賽的環境下，除了守門員之外，每個足球員都是運行相同程式碼的
相同程序(process)，但由於每位球員所獲得的均為部分資訊，且有伺服器 (server) 
產生的模擬雜訊干擾，使得球員間會有資訊不一致的情形，而導致判斷上的困
難；在比賽進行時戰況是瞬息萬變的，因此良好的足球員應該是被設計成可以快
速地作出決定且確實地達成目標。 
模擬比賽的系統可以視為以下三種要素： 
1. agent (足球員) 
2. server (伺服器) 
3. monitor client(監視軟體) 
 
而整體的系統運作則是球員觀察目前的狀態，做出相對應的動作後，傳送給
伺服器，伺服器再回傳新的狀態給球員，如此不間斷的傳送與接收，即可模擬連
續時間的比賽。 
63 
 
第二章 文獻探討 
在閱讀了相關論文後，我們發現相關的論文可以大致分為以下三類： 
1. 人工智慧 
2. 建模預測 
3. 系統架構及決策模式 
2.1 人工智慧 
在文獻[1]中，作者採用了模糊理論 (Fuzzy) 的概念，配合決策產生的架構，
使隊伍的決策較有彈性而不致於過於死板。但是由於若要使用到模糊理論的化，
就必須使用模糊集合中的歸屬函數，其設定方法以及為何將該函數訂定成該種特
別的映射關係，容易遭人質疑其合理性。因此除非使用人工智慧中的訓練方式，
為每個歸屬函數制定其映射關係，否則作者所自訂的歸屬函數設定方法將無法成
為有說服力的一種方法。 
2009 年發表的論文[16]，所使用的是混合式的架構。該作除了使用了 fuzzy
的概念來實作之外，還加上了基因演算法來幫個系統進行決策的判斷。而文獻[2, 
3]則是試著使用人工智慧中的學習方法：增強式學習法。增強式學習通常用於無
監督者的環境之下，監督者在此扮演的角色便是告訴學習代理人 (agent) 其所下
的決策是否為正確。因此在增強式的學習過程中，並不會有監督者告訴代理人其
所下的決策是否為正確，只能由代理人自行判斷。在第[2]篇之中，作者想要利
用增強式學習法使球員的防守能力增強，並設計了一套實驗，讓球員可以自行學
習如何防守敵人的進攻與射門。文獻[3]則是套用了 Keepaway的實驗環境，並利
用增強式學習法來使球員的持球時間提昇。前者除了使用增強式學習之外，還用
到了類神經網路 (Neuron Network) 作為輔助，而類神經網路最為人所垢病的便
是它訓練出來的結果，我們時常無法解釋其原因；且類神經網路只適合用於離線 
(off-line) 的訓練，不適合用於即時的比賽之中。另外由於在 RoboCup 模擬比賽
的環境中，許多的結果都是無法立刻取得的，也無法取得報酬值。因此除非有人
65 
 
在此方法底下的每位球員，在不同隊形下均有不同的戰略位置，而他們在球場上
的站位則取決於與球的距離。當球離他們越近的時候，球的吸引力就會越大，因
此球員便會移動位置去追球；反之當球離他們越遠的時候，此時的吸引力也會降
低甚至沒有，球員便會回到他們的戰略位置上。也因如此，若是陣型的設定不正
確，就很有可能造成球員站位的防守功效不大，而使敵人有機可乘的情況發生。 
[10]這篇論文主要想探討球員防守時的站位以及盯人的目標該如何決定，目
的就是希望一個守一個，不要讓對方有隙可乘。該篇論文使用到的是匈牙利演算
法 (Hungarian Algorithm) ，想要利用二分圖的方式解決防守的配對，讓需要被
防守的敵人不會被遺漏而造成失分。但是每位球員所擁有的資訊皆為不太相同
的，因此所作出的決定也勢必不盡相同，而此時要以誰的決定為主，之間又該如
何溝通協調，成了使用此演算法最大的盲點。[11]這篇碩士論文使用了帕累托最
佳化 (Pareto Optimality) 的方法，想要改善球員防守站位的結果。但是該篇論文
係實作於 TAO of Soccer [14]的系統環境之下，該環境之下可以取得無雜訊干擾
的全局資訊 (full information) 因此也無法使用於 RoboCup的系統中。 [13]則是
使用了MCDM (Multi-Criteria Decision-Making) 演算法，想要讓傳球成功的機率
提昇。欲傳球的球員會以隊友所在的位置為圓心，畫出一個圓之後，在圓內隨機
選出數個傳球點，並計算每個點的傳球成功機率，最後決定該傳球的方向以及力
道。 
本研究將沿用 UvA [8]該支隊伍的底層技巧，並改進高層的決策模式，以求
達到增強改進之目的。該隊伍係由荷蘭阿姆斯特丹大學所研發，由於該隊伍的底
層動作指令相當完整，因此相當適合我們使用來改進高層決策演算法之用。另外
我們也使用了WE2009 [17] 這隻隊伍來進行效能的比較，WE2009係由中國科學
技術大學的 Multi-Agent System Lab.所研發設計的隊伍，該隊伍近三年於
Robocup Simulation 2D的比賽成績均在前兩名之內，其中 2009年更奪下了該系
列比賽的第一名。該隊伍有相當完整的整體策略決策演算法，不論在帶球、踢球、
體力節省甚至在視覺方面的定位修正，都較其他比賽隊伍優秀許多。本研究最後
67 
 
第三章 研究方法 
UvA 將球員的指令層分為高  (high-level)、中  (intermediate-level)、低 
(low-level) 三種階層。高層主要在規範如：截球、帶球、傳球等需要那些中、低
階指令串連起來所完成的動作。中層則決定了如轉身、移動至定點、使用固定力
道踢球等指令所需低階指令。而低層則是最基本的動作如將足球員的身體與脖子
對齊、身體轉向定點、尋找球的位置等最低階的動作。而本論文主要的研究目標
是在高層技巧中，自行設計一套有效決策演算法，以增加並改進隊伍的進攻及得
分效率。 
我們將依球員角色不同，而有不同的決策流程如後衛以傳球與帶球為主，中
場傳、帶球與射門均重，前鋒則以射門與傳球給射門成功機率高的隊友為主要目
標。以下各節將說明我們所採用的傳球、截球及射門的決策演算法。 
3.1截球 
傳球能否成功受到幾點因素的影響：1.與目標點的距離 2.附近敵人的距離
3.踢球力道。因此在下一節將會對這些因素進行研究與分析。為了要增加傳球的
成功機率，我們想要觀察在與敵人不同的距離下，全力踢球時可以安全通過球員
防守範圍的傳球安全角度，藉此來觀察哪些是安全的傳球區域。 
我們欲使用三種不同的踢球力道，來觀察我方傳球球員與敵方球員在不同距
離下，傳球安全角度的變化為何。因此我們撰寫了一套模擬球員與球運動的程
式，藉由套入物理運動公式的方法，來觀察不同距離下傳球安全角度的變化。為
踢球力道為全力、三分之二及三分之一時，圖 3為距離與傳球安全角度的變化情
形。  
由圖 3可以觀察到我方球員與敵方球員距離越遠，傳球安全角度就會越大，會
造成這樣的原因係由於三種力道所造成的足球初速度不同，但是球員的移動速度
均為相等的。當力道為三分之一時，由於摩擦力的影響，球的移動速度與球員的
移動速度相差越來越小，因此角度必須增加的比另外兩種力道還要快，所以該力
69 
 
得到了各種力道與距離下的傳球安全角度之後，我們便可以使用這些數據來
加速球員的傳球判斷以及提昇成功率。 
當我方球員欲進行傳球時，會先從附近球員中，隨機各挑選 n個傳球點，再
將附近敵方球員的距離及其所在方位代入，若是所有傳球點均在可傳球角度所
囊括範圍之中，才會進行下一步─傳球成功率的計算。傳球成功率的計算主要是
代入隊友距離後，求得一個到達目標點的成功率最高且不會被敵人截走的傳球
點。 
3.2截球 
一般而言，球員在進行是否截球的判斷時，多是計算球員與足球在某個時間
兩者的位置是否重疊，若是重疊則有很大的機會可以進行截球，而經常被使用的
方法有兩種：一種是使用參數式配合聯立方程式求解，另一種則是啟發式演算法
(Heuristics)。 
參數式的計算方式係將球員以及足球的運動物理模型化，最後用聯立方程式
求解以計算何時兩者座標會重合。 
但是由於此物理運動方程式要使用參數式來解的話，僅能使用數值方法中的
尋根法一途，然而如此一來必須耗費大量的運算資源，來判斷何時才能截取到
球。所以為了增加計算的速度，我們並不採用參數式的方法解決這個問題。啟發
式演算法主要概念是計算在各個時間點之時，球員與足球的位置在何處，類似於
線性搜尋(linear search)。為了降低搜尋時間，我們提出了一個類似二分搜尋法的
演算法，並可以使運算時間降低為 O(log n)。而二分搜尋法必須訂立一個 Tmax以
供球員做為搜尋底線，若是球員無法於 Tmax截到球便會放棄本次的截球；在本研
究 Tmax被設定為 30個 cycle，原因是設定過長或是過短的 Tmax都沒有太大意義，
而經過我們測試的結果，將 Tmax定為 30可以對截球與控球比例上有一定的成效。 
3.3射門 
由於本研究使用的機率模型係改良 UvA 的方法，因此本章節將會先介紹
 
71 
 
 
 (3.3) 
 
P(out from left)與 P(out from left)為從左右門柱出界的機率；從式子 3.3可以
觀察出來 UvA 在計算射門成功率時，若是球員沒有正向面對球門，便會以兩個
機率分布函數來計算射門成功率。但是這樣的方式有一個問題：在某些較為極端
的例子時，最後計算出來的機率有可能會小於 0；原因是 P(out from left)與 P(out 
from right)這兩個機率函數並不是同一個函數，只要這兩個函數的總和大於 1
時，便有可能讓最後算出來的射門成功率小於零；而這對進行射門成功機率的運
算是相當不利的，因此我們便想出了一個新的方法來解決這個問題。 
由於比賽之中，最寶貴的資源便是運算時間，能在第一時間做出準確判斷並
確實執行的球員，一定能提高團隊的整體效率。因此，我們所使用的方法是利用
離線蒐集資料的方式來增加球員在線上比賽時計算的速度及準確度。 
我們使用的方法可以分為三個步驟： 
1. 離線蒐集 Record Table：首先，我們將足球場劃分成每個大小為 0.05× 0.05
公尺的 grid，並使用 Record Table來記錄各個 grid 被足球經過的次數。而我
們使用的模擬程式便是利用式 3.2的機率分布來模擬足球員踢球後，足球在
場上滾動的情形。因此在經過 1000次的踢球嘗試之後，Record Table中的數
值以 3D的方式顯示後便如圖 6所示：  
 
73 
 
1: for Xl=Xhead to Xl=Xtail-1{ 
2:  y=tanθ·Xl 
3:  yu=  
4:  xr=xl+1 
5:  if(tanθ·xr = yu) 
6:   print “ur” 
7:   移動至右上一格 
8:  end if 
9:  if(yd < tanθ·xr  < yu) 
10:  print “r” 
11:  移動至右邊一格 
12: end if 
13: while(Xl < yu/tanθ < Xr) 
14:  print “u” 
15:  移動至上方一格 
16: end while 
圖 8. Climbing Table 生成演算法 
a
 
圖 9. 球門傾斜角度為α時與 Climbing Table 轉換的示意圖 
 
以上圖的例子來看，當球門與球員正面呈現 α角時，程式便會產生對應的符
號列並記錄到 α角的 Climbing Table之中。因此在比賽進行時，只需定位好
起始的定位點並取得球門傾斜的角度以及距離，就可以使用 Climbing Table
來快速取得哪些 grid需要進行運算。 
3. 線上射門成功率判斷：當球員要進行射門成功率的運算時，首先會計算目前
位置與球門中心 Pc 連線的角度 α（與 y 軸的夾角）及距離 ds，由預先載入
的Climbing Table中提取出 grid的轉換方式後，再由 Psl點所對應到的 Record 
75 
 
3.4整體決策演算法 
A
B
 
圖 11. 整體演算法示意圖 
 
本研究主要是利用離線蒐集而來的經驗，配合機率學中獨立事件的乘法法則
特性，來增加進攻的整體效能。作法則是分別計算每個獨立事件如傳球與射門成
功的機率之後，將之相乘以計算本次傳球的射門成功率為何： 
當我方球員欲進行傳球時，會先挑選出安全的傳球角度，然後從中挑出隊友所在
的位置，並挑選出一個可安全傳球的傳球點。再計算該傳球點的射門成功率。如
圖 12 所示，帶球者會先計算傳到 A 點及 B 點的成功率，若各為 PSA及 PSB，再
計算從 A 點與 B 點的射門成功率，假設各為 PGA與 PGB，則踢往 A 點的射門成
功率即為 PSA*PGA，B 點為 PSB*PGB，我方帶球球員會從中挑選機率較高者進行
傳球。 
77 
 
Table 1. HSNL相較於 UvA所增加的效能 
項目 增加效能 
射門成功率 26.1％ 
傳球成功率 16.9％ 
截球成功率 3％ 
控球比例 A 5.6% 
控球比例 B 4.2% 
 
79 
 
第六章 參考文獻 
[1] V. Salmani, A.M. Fard, and M. Naghibzadeh, “A Fuzzy Two-Phase Decision 
Making Approach for Simulated Soccer Agent,” Engineering of Intelligent 
Systems, IEEE International Conference on , pp.1-6, 2006.  
[2] T. Gabel, M. Riedmiller, and F. Trost, “A Case Study on Improving Defense 
Behavior in Soccer Simulation 2D: The NeuroHassle Approach,” RoboCup 2008: 
Robot Soccer World Cup XII, 2008. 
[3] J. Tao , D. Li, “An Optimal Strategy Learning for RoboCup in Continuous State 
Space,” IEEE Mechatronics and Automation, pp. 301-305, 2006.  
[5] A. Bezek, M. Gams, and I. Bratko, “Multi-Agent Strategic Modelingin a Robotic 
Soccer Domain,” Proceedings of the fifth international joint conference on 
Autonomous agents and multiagent systems, Japan, pp. 457-464 , 2006.  
[6] F. Ramos and H. Ayanegui, “Discovering Behavioral Patterns in Multi-agent 
Teams,” Agent and Multi-Agent Systems: Technologies and Applications, Springer 
Berlin, pp.391-400, 2008. 
[7] T. Srinivasan, S. Harini, K. Kavitha, P. Sukumar, “SVMRobosoc : A Novel 
Approach Towards Planning Strategy for Robotic Soccer Using Hierarchical 
Intelligence Systems”, Intelligent Systems Design and Applications, 2007.  
[8] R. D. Boer and J. Kok, “The Incremental Development of a Synthetic Multi-Agent 
System: The UvA Trilearn 2001 Robotic Soccer Simulation Team”, Faculty of 
Science University of Amsterdam, Master's thesis, 2002. 
[9] M. Sharifi, H. Mousavian, A. Aavani, “Predicting the future state of the RoboCup 
simulation environment: heuristic and neural networks approaches,” IEEE 
International Conference on Systems, Man and Cybernetics, 2003.  
[15]L. P. Reis, N. Lau, “FC Portugal Team Description: RoboCup 2000 Simulation 
81 
 
誌謝 
本計畫經費由國科會 NSC96-2628-E-182-019-MY3 提供，特此致謝。 
 
A Multi-agent Algorithm for Robot Soccer Games
in Fira Simulation League
Shih-Lin Wu†,Yi-Ren Liou, Wei-Hua Lin, Ming-Han Wu
Department of Computer Science and Information Engineering
Chang Gung University, Kwei-Shan Tao-Yuan, Taiwan, R.O.C
†E-mail:slwu@mail.cgu.edu.tw
Abstract— In this paper, we demonstrate the design and
implementation of a multi-agent algorithm including a set of
strategies for robot soccer games in Fira [1] simulation league.
Soccer games are pseudo matches performed on a simulator for
testing real-timedecision-making schemes for cooperative multi-
agent systems. One of most important issues in the soccer game is
how to pass a ball among teammates. Many proposed strategies
[2][3], based on reinforcement learning methods [21] [22][23][24]
or heuristic schemes to infer the possible risks and costs, do
not consider ball passing as a multi-criteria optimum problem.
To determine whether passing the ball to a teammate in the
goal area, a multi-criteria decision-making strategy is proposed
by considering the multiple criteria, the angle of the ball to
the two goalposts, the distance between the ball and the goal,
and the position of the enemies. As to the formation of a team,
we introduce an idea, called virtual forces [18], to suggest the
optimum positions of team players. The optimum positions will
depend on the real-time conditions such as the ball position and
the positions of all enemy players. To evaluate the proposed
strategies, we take the team UvA-Trilearn[4], the world champion
in 2002, as an opponent. The results show that the proposed
strategies attain better performance than UvA-Trilearn.
I. INTRODUCTION
The development of robots not only provide a great deal of
business opportunities of technology industry, but also have
great impact on areas such as national defense, security, house-
living, medical treatment, rescue works, exploitation in deep
ocean, etc. According to different applications, robots can have
different contribution in different areas. One of the challenging
issues in robotic research is the cooperation, coordination, and
negotition among distributed agents in a multi-agent system.
To speed up the developement on this challenging issue, a
group of Korean researchers initiate a robotics soccer game
called Fira. Later the league becomes a well-known world
competition, called Federation of International Robot Associ-
ation(Fira). The simulation league in Fira is proposed for the
research in the domain of multi-agent system. The game is
performed on a program that we called Fira Simulation Server
which is run on a UNIX-based workstation with UDP/IP
protocol. Aother eleven independent client programs will be
executed on the server as the players of a team during a soccer
game. The server generates the soccer field and the physical
environment involved in the soccer game in the virtual world.
The clients have to take noisy information generated by the
server into account and return commands back to the server
in order to let players take actions on the field.
Perpendicular bisector:
Ball Passsing Path
T
1
2
3
4
Fig. 1. Duty area arrangement for four agents
In this paper, we will develop a set of distributed strategy
algorithms of robot soccer players on the simulator. The
motivation is to employ a ready-made simulator and to bring
out the way that each agent thinks independently under the
multi-agent system, and then make the agents capable of
cooperating as a team[5]. After researching lots of research
works of related area, we realized how to build a real-time
multi-agent system under Fira simulation [6], [7], [8] and its
vision model, moving method, skill, etc [9]. We will make
all agents run in server much more like a real man, and
be able to think, compute, and execute instructions in the
optimal way we endowed with. Here we include the concept of
decision-making model [10], and then predict the possibility
of a success kick by means of shoot-success model and
decision making model. Defender goal is to ensure that all
the robot soccer players map out their own path under the
cooperation and find out the specific time of when to offense
or defense[11], [12], [14], [17].
II. REVIEW
A. Duty Area
In the reference paper [13], it provides a definite way to
divide the soccer field into several areas, named duty areas,
and each duty area is assigned to a player for catching
or kicking the ball. The above way not only designates a
player as the nearest one to the ball for approaching and
catching/kicking the running ball but also prevents the farer
agents from consuming too much stamina to go to the position
of ball. In Fig. 1, three dotted lines from left to right represent
Opp Goal
ball
ball passing path
Perpendicular bisector
Opp
T
3
2
1
Fig. 2. Voronoi diagram
ball
ball passing path
Perpendicular bisector
3
2
1
Fig. 3. Duty area
3
4
5
6
7
8
9
10
2
1
11
Fig. 4. When VFA radius is five meter, the illustration of duty area
Fig. 5. The ball locates within defender goal area
according to the position of ball. If the ball locates within
defender goal area(Fig. 5), the formation use 4-3-3 defensive
formation (four backfielders, three midfields, three strikers)
no matter which players hold the ball. The major mission
at this time is that kick the ball out of defender goal area.
When the ball closes to the opponent goal area, the formation
exchanges to 3-3-4 attack formation (three backfielders, three
midfields, four strikers). In other word, the corresponding
formation will be formed according to the position of the ball.
This type of methods will cause a serious problem, called
ping-pong effect that players will keep changing formation
and consume their stamina if the ball move back and forth
between two areas. As for this problem, we will provide
buffer area [20] as a basis to exchange formation in section
3.
Keeping formation of a team at any time will have the
best chance for offense or defense. However, one of the team
players will go to catch the ball while they figure out they
are the fastest as well as the other players will run to their
tactic positions to get ready. It might bring about only one
player who close to the ball to get the ball, but other agents
would not support them effectively. Therefore, the formation
can not keep in the best condition and the ball would be hold
back as well. This problem occurs in many references [15]
[16]. For the purpose of keeping formation, we refer to the
idea of virtual force [18] used in sensor networks in order
to solve the problem. Making use of virtual force [18] to
keep formation, and consider positions that agents stand can
cover with each other or not. After we work out the virtual
force among agents, we can get relative position of agents, too.
We divide the field into three parts like Fig. 6 so as to
avoid separating too many areas. It might make agents keep
changing formation. Consequently, the field is divided into
defensive area (area A), attack area (area C) and middle area
(area B). Area B is for agents to kick-off and hold-ball attack.
In defensive area, we will adopt 7-3(Fig. 7 formation to defend
to the utmost and kick the ball out of area A. We utilize 2-
3-5(Fig. 9) formation in attack area. As for area B in the
TABLE I
DISTANCE BETWEEN BALL AND GOALLINE
Distance with distance with kick angle probability
goalline goalkeeper
20 10 5 0.86
20 10 10 0.85
20 10 15 0.88
25 10 5 0.68
25 15 10 0.54
25 15 15 0.17
30 15 5 0.32
30 15 10 0
30 15 15 0
IV. EXPERIMENT
In this section, we perform an experiment to learn the
probability of shoot-success with various angles and distances.
This may help us to design our algorithm. The experiment
environment is set up on server on Linux Fedora 5 and use
the program UvA-Trilearn [4] as the goalkeeper to defend the
shooting player which is designed by us (Fig. 10). Then we
make different experiments on shooting in front of goal, the
distance to the goalline are 20 meters, 25 meters, 30 meters.
Each time we pick 100 samples to analyze.
The statistics of experimental show that the probability
of shoot-success will higher when the distance less than 25
meters and the angle to the goalkeeper is over 10 degree. With
the distance of opp-goal become farer, the needs of angle will
broader. When the distance to the goalline increases to 30
meters, the probability of shoot-success will decrease while
shooting or the angle should be enlarged to 13 degree. Form
these statistics, we try to calculate whether the player has the
highest probability of shoot-success of all the players near him
or not. If it is, the players start to shoot. We assume that our
hold-ball players shoot directly, the soccer will possibly hold
back by the opponent goalkeeper. Then we use our method
to pass the ball to one of them (Player 1, Player2, Player
3) who has higher probability of shoot-success. Overall, the
probability of shoot-success will highly increase.
V. CONCLUSION
In the paper, we propose a method to promote the shooting
skills of players and utilize the way of Voronoi diagram to let
players can judge where their duty areas are. Thus, players
themselves and their teammates do not need to calculate
the distance from them to the ball. It can avoid wasting
periods during calculating. Players can calculate if they can
hold back the ball in a short time or not and judge that
whether the ball should be passed to themselves by teammates.
Furthermore, we make use of buffer area to decrease the
consuming stamina of team members while the formation of a
team changes frequently. Finally, we compare the possibility of
shoot-success and use the rule which the ball moving space is
faster than players moving to raise successful opportunities of
short-path passing. As to the future, we will put our emphasis
on the methods to pass the ball and promoting the success
possibility of shooting the ball.
REFERENCES
[1] Yujin Robotics Co., Ltd. Kasan-Dong, Keumcheon-Gu,Seoul. ”YSR-A
5vs5 System Manual: Soccer Robot Dept. of Kasan-Dong office SK
Twin-Tech Tower B-204, Korea”
[2] Georgy Voronoi. ”Nouvelles applications des parametres continus a la
theorie des formes quadratiques.” Journal fur die Reine und Angewandte
Mathematik, 133:97-178, 1907 .
[3] YSR-A 5vs5 System Manual Atsuyuki Okabe, Barry Boots, Kokichi
Sugihara Sung Nok Chiu. ”Spatial Tessellations - Concepts and Appli-
cations of Voronoi Diagrams. 2nd edition.” John Wiley, 2000, 671 pages
ISBN 0-471-98635-6.
[4] UvA-Trilearn 2002-Soccer Simulation Team,
http://staff.science.uva.nl/ jellekok/robocup/2002/index en.html
[5] Jun Guan, Dijun Luo and Daming Liang, ”The Architecture of Team
ZJUBase: Implement A Cooperative Team.”, In Proceedings of Chinese
Robot Soccer Competition, 2004.
[6] Kumiko Tanaka-Ishii, Ian Frank, ”Multi-Agent Explanation Strategies
in Real-Time Domains”, Annual Meeting of the ACL, 158-165, 2000.
[7] Tim Laue, Kai Spiess, and Thomas Rofer, ”SimRobot- A General
Physical Robot Simulator and its Application in RoboCup”, RoboCup
2005: Robot Soccer World Cup IX.
[8] Guan Jun, Jiang Hao, Tan Qifeng, ”Team Description of ZJUBase 2004
(3D)”, http://www.nlict.zju.edu.cn/nlictrobocup/robocup chinese.htm,
2004.
[9] Sergio A, Rojas, ”Evolving object oriented agent programs in RoboCup
Domain”, ACM Genetic And Evolutionary Computation Conference,
407-410, 2005.
[10] Changda Wang, Xianyi Chen, Xibin Zhao, Shiguang Ju, ”Design and
Implementation of a General Decision-making Model in RoboCup
Simulation”, RoboCup Simulation, 207-212, 2004.
[11] JUN AKIYAMA, ”Adapting the Multi Agent Planning System For
RoboCup Simulation League”, ITEE Innovation Expo, 2001.
[12] Ricky Yan CHEN1, Xiang-Zhen KONG2, Jun TIAN1, ”Fuzzy
logic based strategy for robot soccer”, Sciencepaper Online
,http://www.paper.edu.cn, 2006/10/27.
[13] Jiang Chen, ”Techs of Tsinghuaelus”, http://www1.cs.columbia.edu/∼
criver/robocup/
[14] Tingting Wang and Jiming Liu, ”The Minority Bame Strategy in Team
Competition : How and When?”, International Conference on Intelligent
Agent Technology, 2005.
[15] ZJUBase: Zhejiang University Base,
http://www.nlict.zju.edu.cn/nlictRoboCup/files/zju/gyjbylw.pdf
[16] Jun Guan, Dijun Luo and Daming Liang, ”The Architecture of Team
ZJUBase: Implement A Cooperative Team”, Chinese Robot Soccer
Competition, 2004.
[17] Jacky Baltes, ”Strategy Selection, Goal Generation, and Role Assign-
ment in a Robotic Soccer Team”, International Conference on Control,
Automation, Robotics, and Vision, ICARCV , 211-214, 2002.
[18] Yi Zou and Krishnendu Chakrabarty, ”Sensor Deployment and Target
Localization Based on Virtual Forces”, IEEE INFOCOM , 2003.
[19] Guo Ye-Jun, ”The Construction of MAS in RoboCup
Simulation”, ZJUBase: Zhejiang University Base,
http://www.nlict.zju.edu.cn/nlictrobocup/robocup chinese.htm
[20] Guangbin Fan1, Ivan Stojmenovic2, and Jingyuan Zhang1, ”A Triple
Layer Location Management Strategy for Wireless Cellular Networks”
, ICCCN. 2002.
[21] Leslie Pack Kaelbling, Michael L. Littman, Andrew W. Moore, ”Re-
inforcement Learning: A Survey”, Journal of Artificial Intelligence
Research 4, 1996, pp. 237-285.
[22] Jan Peters, Sethu Vijayakumar, Stefan Schaal, ”Reinforcement Learn-
ing for Humanoid Robotics”, IEEE-RAS International Conference on
Humanoid Robots, 2003.
[23] Richard S. Sutton, Andrew G. Barto, ”Reinforcement Learning”, MIT
Press, 1998, ISBN 0-262-19398-1 (full text online)
[24] Fu, W.-T., Anderson, J. R. ”Recurrent Choice to Skilled Learning Model.
Learning: A Reinforcement Learning Model. Learning: A Reinforcement
Learning Model”. Journal of Experimental Psychology, General, 135 (2),
184-206. 2006.
- 1 - 
室內環境下無線感測機器車自主性群聚行為 
吳世琳 
長庚大學資訊工程研究所 
slwu@mail.cgu.edu.tw 
 
許獻聰 
中央大學資訊工程研究所
sss@mail.ncu.edu.tw 
 
曾奎富 
長庚大學資訊工程研究所 
m9129006@mail.cgu.edu.tw 
摘要 
無線行動感測網路（Wireless Mobile 
Sensor Network ）是近年國內外廣為討論的熱
門議題，然而僅具感測資訊功能卻缺乏對未知
地理位置認知的能力，使得應用甚為有限。地
理位置認知分為室外定位及室內定位，室外定
位目前已有 GPS 系統能夠達到精確的定位；
而室內定位技術目前尚未成熟，因此我們設計
ㄧ套適用於室內無基礎架構式無線感測網路
環境下的相對定位演算法，藉由此定位演算法
協助認知在環境中的位置進而達成任務。這套
演算法所展現的實作是一群無線感測機器人
(Wireless Sensor Robot，WSR)放置到一未知環
境，而能夠排列成使用者所要求的圖形或是字
形。我們將探討 WSR 從未知環境下走到定位
所需要的演算法及會碰到的問題，共分為定位
方法、碰撞與路徑規畫、行走及訊息處理。  
關鍵詞：無線感測網路、室內定位、路徑
規畫。 
一、簡介 
無線行動感測網路的應用如災害現場協
助救災、自然生態資源探測、太空探勘等等，
均隨著今日硬體技術的進步而實現，因而促使
各界對相關研究的重視。無線感測機器人
(Wireless Sensor Robot，WSR)依應用需求搭載
各式感測器於未知環境內收集感測資訊，並將
此資訊藉由 WSR 所形成之無線感測網路傳至
Sink Node 資料彙集點供救災人員、科學家即
時資料匯整及解讀【1】。然而僅具感測資訊功
能卻缺乏對未知地理位置認知的能力，將使
WSR應用甚為有限。如 WSR在未知環境內利
用溫度感測器偵測出火源，卻無法得知火源所
在地及鄰近地形，貿然派遣消防人員進入的結
果，可能反增加人員傷亡；所以 WSR原本應
有感測功能外，我們更希望設計ㄧ適用於無基
礎架構式 Ad-Hoc 無線感測網路環境定位演
算法，藉由此定位演算法協助 WSR 認知在環
境中的位置進而達成任務。 
許多研究採全球定位系統 GPS（global 
position system，GPS）定位【1】，GPS利用三
顆以上人造衛星發射出的訊號，以空間為基準
配合無線電波發射及接收訊號時間差、衛星星
曆軌道資料，推算出使用者於地面上的三維座
標。早期 GPS 接收器價格昂貴，實驗掛載於
機器人研究成本過高而少採用，不過拜近年硬
體製程技術進步，小體積、低耗電量及生產價
格大眾化，促使學界及商業產品廣泛應用。儘
管 GPS 普及化，然而 GPS 須接收衛星電波訊
號才能運作，造成室內環境無法適用，加上
GPS 定位誤差達 3公尺以上，對於小範圍定位
誤差將會很大，因此僅適用室外環境定位。 
有基礎式架構無線網路環境的定位，諸如
AOA、TOA、TDOA 等【2】【3】，可藉由事
先安置已知絕對座標基地台於未知環境內輔
助 WSR 定位。但是這三種做法硬體成本過
高，AOA 須搭配特殊陣列天線，TOA、TDOA 
必須有精密測量儀器測量能力，並精算訊號傳
遞時間及時間差，除非搭配高成本原子鐘，否
則並不適用短距離量測；又因為在未知環境無
法預先架設已知座標的基地台，因此這個方法
並不可行。 
我們希望能做出一群車子在室內環境
中，能按照使用者所希望排出的隊形，像是以
英文字母為隊形的圖案。實現這套演算法共分
為許多部分，如硬體、韌體製作，網路層協定
設計、排列演算法及定位演算法等等，我們將
直接探討有關於定位演算法、路徑規畫及碰撞
處理、行走以及訊息處理幾個部份。演算法流
程為先定位每台 WSR 的位置，接著規劃行走
到目的地的路徑，再避免車子與車子行走間可
能會發生的碰撞狀況，最後到達定位。 
本文架構如下:第二節為相關研究，介紹
定位系統基本概念。第三節為本文所提的演算
法，包含定位、路徑規畫、行走與避免碰撞演
算法。第四節為以此演算法所做的實作與模
擬。第五節為結論與未來工作。 
 
- 3 - 
 
圖二、牛車定位法 
不過牛車定位法有下述缺點：1.負責進行
牛車定位法繞圈的定位 WSR 耗電會比其他
WSR來的快。當定位 WSR沒有電的時候，其
他 WSR 此後就不能再進行定位校正。2.負責
進行牛車定位法的定位 WSR 所繞行的範圍其
他 WSR 經過時，可能會產生碰撞而讓定位
WSR產生了偏移，並且移動中的 WSR所產生
的磁場會干擾到定位 WSR 上裝備的電子羅
盤，因此牛車定位法所繞行的圓圈範圍其他
WSR不能靠近，否則將導致定位不準。 
3.2  改良式牛車定位法 
因此我們結合訊號強度與距離的關係改
良了牛車定位法： 
初始環境中，全部的 WSR 都尚未被定
位；我們挑選其中一台，將其設定為”初始定
位”狀態，這台定位 WSR則進行牛車定位法繞
圓數圈即停止。在這台 WSR 定位繞數圈時，
配合電子羅盤，每當車頭朝向正北、正西、正
南、正東時，如圖二，就發出訊號強度，其他
WSR 只要接收到其中三個方位的訊號，就能
藉此完成定位；接著向周圍也發出本身的座標
以及訊號強度，因此若是某些 WSR 是在定位
WSR 進行牛車定位法所能定位的範圍之外，
都能夠因此有二度機會被定位。因此定位範圍
將不侷限在只有牛車定位法所及的圓圈範圍。 
除了這台任意挑選的 WSR 被設定成”起
始定位”狀態，其他 WSR則設定成”一般”的狀
態。WSR狀態共分為四種：起始定位、定位、
一般、碰撞。 
“起始定位”是上述最一開始所挑選出來
進行牛車定位法的 WSR，在繞行數圈後，則
將狀態改回為”定位”。 
“定位”狀態的車子在原地不動，負責發送
訊號給其他未定位的 WSR。 
“一般”狀態的 WSR 則是負責行走排列字
型。走到目的地後轉成”定位”狀態 
“碰撞”狀態的車子則是 WSR 之間在處理
碰撞時後的狀態。 
而”一般”狀態的 WSR 到位之後，可以轉
換成”定位”狀態，負責幫忙做定位校正。而最
一開始在”定位”狀態的車子將環境內的 WSR
都定位之後，也可以轉成”一般”狀態。如此的
作法就不會發生某一台 WSR 為了進行牛車定
位法繞圈，持續繞圈使得電力消耗過快。 
而 WSR無法擺放距離過近，原因如下： 
1.硬體限制：每台 WSR長約 15cm、寬約
10cm，因此在擺放時候的座標長寬必須有
15cm以上的限制。 
2.不易辨識是哪台定位 WSR 發送的訊號
強度資訊：如果兩台定位 WSR 擺放過近時，
處於較遠處的，如距離兩者的 190cm 處有一
台 WSR 需要定位，則處在 190cm 處的 WSR
收到來自這兩台相距只有 10cm 的定位 WSR
訊號，不僅訊號強度幾乎相同，也因為接收訊
號WSR跟定位WSR距離過遠，兩個定位WSR
的因為過近將被視為同一點，因此無法計算接
收訊號的 WSR的位置，如圖三。 
 
圖三、兩台定位 WSR位置過近所產生的問題 
    如果 WSR 的訊號強度能夠發射的範圍很
廣，能夠涵蓋整各實驗環境，那麼可以不用考
慮定位範圍的問題。但是我們實際的測試後，
訊號強度與距離能夠推算的有效距離僅約 1.6
米左右。因此，經過我們把演算法改良，將原
本只能夠如圖四所能夠定位的範圍，往外擴展
成只要任意三個已經定位的 WSR 就能幫助其
他的 WSR定位。 
 
圖四、用原本牛車定位法所能定位的範圍 
我們根據圖五的流程圖進行定位： 
- 5 - 
走了多遠的距離，並且行走之前已經有從電子
羅盤讀取 WSR 車頭的方向離正北的夾角為幾
度，因此可以計算 WSR 已經行走的距離。換
算成理論上行走的距離。 
4.根據前面所述有關 Dead Rockoning 的
相關研究，車子在行走一段距離後都會產生誤
差，為了避免這些誤差持續擴散，因此需要在
超過某一定值後進行定位校正。行走距離與相
對產生誤差的關係可自訂為最大容忍值(Max 
error length, Me)。因此可以設定 WSR在走了
一段距離或是一段時間 T 後，查詢目前共走了
多少距離，如果還在容忍範圍內，則可以繼續
行動。而當誤差 I 已經超過 Me 時，則要做定
位校正。 
5.定位校正方式跟”定位”一節所談的方式
一樣，WSR 收到三個不同來源訊號換算成現
在的位置。因為最一開始的定位 WSR 必須要
等到有另外三台以上的 WSR 都已經行走到位
時才有可能轉換狀態成”一般”，因此能夠定位
環境總是維持在起碼 160cm*160cm以上。 
6.而因為行動中的 WSR 的電流會影響到
電子羅盤的判讀，所以 WSR 要讀取電子羅盤
的資訊時必須停下來，才能夠進行定位校正。
而重新定位校正後的座標則被 WSR 當成成最
新座標，行走距離也會重新歸零計算，繼續行
走直到到目的地。 
7.當 WSR 到目的地時，則轉換自己的狀
態為”定位”，並且向初始定位 WSR 作回報。
之後如果周圍 WSR 有要求定位的話，可以發
送數個訊號強度資訊協助其他 WSR作定位。 
流程圖中有”碰撞偵測”這個流程，是因為
WSR 在走到目的地座標之前，很有可能會跟
其他 WSR發生碰撞。我們在此節先討論 WSR
如何從現在位置的座標到達目的地座標的方
法。”碰撞偵測”將在稍後做說明。 
而因為硬體設計架構，WSR 並無法原地
旋轉某個角度後，再朝向目的地方向前進。而
是必須先要轉彎到某個地方才能夠直線前
往，或是沿著弧線行走才能到達目的地。如果
是原地要轉換角度，也必須先往前(或往後)行
走一段距離後再沿著弧線到原地才能達到原
地轉換角度的目的。如圖八，假設目的地在
WSR右邊，儘管 WSR的輪子往右打到底往右
轉彎行走也無法到達目的地(硬體限制)。 
 
圖八、WSR 將右輪打到底直走也無法到
達目的地 
所以我們設計簡單又實用的演算法可讓
WSR到達目的地。方法為：因為 WSR輪子往
右跟往左打到底旋轉後會各產生一個圓，如果
目的地若在右圓內，代表往右旋轉走永遠無法
到達目的地。所以選擇左圓，則目的地變成圓
外一點，求出目的地到左圓的兩個切點，在不
分車頭車尾的前提，選擇 WSR 目前位置與最
近的切點位置。到達切點位置後，WSR 再直
線前往目的地，反之亦然。若目的地不在兩圓
內，則直接尋找左右圓哪個圓心離目的地最
近，及選擇該圓。圖九為示意圖： 
 
圖九、WSR到達目的地在迴轉圓內的方法 
因此假設WSR現在的座標為(x0,y0)，車輪
向右(或向左)打到底旋轉所產生的最小迴轉半
徑r 已知(可經由硬體實際量測得到)，則可以
推算左右兩圓的圓心座標 (xc,yc






+−
−−
==





θθ
θθ
cossin*)(
sin*cos*)(
_*
rx
yrx
leftcircleT
y
x
c
c
)為 
 
或是 






++
−+
==





θθ
θθ
cossin*)(
sin*cos*)(
_*
rx
yrx
rightcircleT
y
x
c
c  
兩者取與目的地最近一者。因此我們目前
的資訊有 :WSR 目前所在位置的 座標 :  
(x0,y0)，選定左圓或右圓的圓心座標: (xc,yc
( )( ) ( )( )( ) ( )( ) ( )( )
( )( )220
22
0
22
0
2
0000
*2
*4*2*2
rxx
ryyrxxyyxxyyxx
m
c
cccccc
−−
−−−−−−−±−−−
=
)
以及圓半徑: r。目的是要利用這些資訊求出切
點位置，代表車子行走到這個切點，即可再直
線前往目的地。因此我們可以求出切點到目的
地位置所形成的連線 
- 7 - 
 
圖十二、碰撞處理流程圖 
流程圖說明： 
1.預設每隔 Y 秒 WSR 就會向周圍發出廣
播訊息看看周圍是否有其他 WSR 在。Y 值需
根據 WSR 的移動速率以及訊號強度範圍、超
音波測距儀範圍而定。 
2.如果有其他 WSR 回覆，就交換彼此的
資訊。如果超音波偵測到前方有障礙物，但是
發出廣播訊息後對方並沒有回應，則等待一段
時間後(Collision Waiting Time，CWt)後，則判
斷對方可能是電力用磬的 WSR，或是超音波
測距儀所偵測到的障礙物可能是環境中的邊
緣牆壁。 
3.如果對方為 WSR，並且也回覆了資訊，
則開始進行碰撞處理。我們希望經過處理過
後，將因為碰撞處理所造成的定位誤差影響降
到最低。因此我們期望當兩台 WSR 快發生碰
撞的時候，只要移動一台車，並且只移動最小
距離即可解決碰撞的問題。這部份將在稍後做
更詳細的說明。 
4.確認兩台 WSR 彼此避開碰撞之後，重
新計算本身到目的地的路線，走到計算完後的
新切點，再往目的地前進，直到發生下一次的
碰撞。 
碰撞處理時 WSR 透過 802.15.4 發出碰撞
偵測訊息格式如下： 
switchboxNo. group_id 
and ID 
現在座標 目的地座標 
switchboxNo.：訊息傳遞類型編號。 
group_id and ID：傳送自己是屬於哪個
group 群，以及自己的編號。 
現在座標：傳送本身的座標給其他接收訊
息的 WSR。 
目的地座標：WSR 正在前往的目的地有
分為兩種，第一種是經過 WSR 本身計算過後
的切點位置，另一種是 WSR 真正要到達的目
的地位置。因此當 WSR 正在進行轉彎到切點
位置的狀態時，則傳送切點位置；如果已經到
達切點位置後，準備要走直線到上層分配的目
的地位置時，則回傳該目的地位置。 
周圍的 WSR 有收到這個訊息時，所要回
覆的訊息格式內容如下： 
switchboxNo. group_id 
and ID 
現在座標 交會座標 狀態 
switchboxNo.：訊息傳遞類型編號。 
group_id and ID：傳送自己是屬於哪個
group 群，以及自己的編號。 
現在座標：傳送現在的座標。當收到其他
WSR的碰撞偵測訊息時，目前 WSR可能還在
移動中。回傳本身的資料給原來發送要求訊息
的 WSR 後，如果沒有對方要求暫停動作或是
其他命令，仍然保持目前的運動。 
交會座標：回傳交會座標位置：根據發送
資訊裡面的資料，可以得到發送資訊的 WSR
的現在位置以及目的地位置兩個點的位置，轉
換成一線性方程式，再根據本身的現在位置及
目的地位置的資訊，可以算出兩條線性方程式
的交點，此即為交會座標。 
狀態欄位共有四種：0：表示為定位/到位
狀態，在環境中最一開始時只有三台車是在定
位狀態，其他 WSR都是一般狀態。1：表示為
一般狀態，也就是 WSR 在沒有發生碰撞狀況
下往目的地前進的狀態。2：WSR發生碰撞狀
態，彼此正在協調溝通該怎麼讓位行走。3：
忽略。 
經由計算出交會點，WSR 可以知道行徑
方向會離交會點遠離或是靠近；如果是靠近，
表示一段時間後將可能發生碰撞，因此把狀態
更改為”2：碰撞狀態”，並且增加超音波測距
儀的讀取頻率以及縮短廣播碰撞偵測的時
間。而如果超音波測距儀不再偵測到前方有障
礙物，碰撞偵測訊息也沒有回傳動線方程式上
有其他 WSR 的交會點時，則轉換狀態為”1：
一般狀態”。”一般狀態”與”碰撞狀態”兩者的
差異在於超音波測距儀讀取次數以及廣播訊
息次數的多寡，但是透過 802.15.4 發送訊息比
較耗電，因此我們藉由這樣狀態轉換的方式，
讓廣播次數降低來達到軟體省電；並且降低廣
播次數，也可以避免封包碰撞的發生率。 
而當計算過後，交會點不會在行徑方向
- 9 - 
switchboxNo.：訊息傳遞類型編號。收到
這個 switchboxNo就會在離交會點兩個車身長
的距離時停住。 
要求停止的 WSR 編號：WSR 停止後，
對要求停止的 WSR 增加詢問其位置的訊息，
只要 WSR 位置超過了離交會點兩個車身長距
離後，本身即可再度行動。 
被要求交換的 WSR的座標：本欄位是當”
是否交換座標”欄位為 1 時才會有值，預設為
0。 
是否交換座標：此欄為 0時為不需要交換
座標，為 1時表示需要交換座標。當欄位值為
1 時，接受到此訊息的 WSR 先檢查被要求交
換座標的 WSR編號是否為自己，如果是，跟”
要求停止的 WSR”交換彼此的座標。 
當發生”碰撞”狀態處理時，都必須將超音
波測距儀及發送碰撞偵測訊息的執行頻率加
倍；超音波測距儀若偵測到前方兩個車身長距
離前有其他 WSR或障礙，需馬上停下並發送
碰撞偵測訊息進行處理。 
    另外一種狀況如圖十一(c)，WSR 前往目
的地的動線中已經有其他到位的 WSR 在。這
種狀況的解決方式是，若發生這種狀況時，行
動中的 WSR 檢查到位 WSR 的周圍是否有足
夠的空間可穿越過去，穿越空間即是 WSR 所
要活動行走的空間，若兩台到位 WSR 之間的
距離大於兩台 WSR 的長度(15cm)，代表有足
夠的穿越空間，並且此兩台定位 WSR 的中點
座標設為暫時的目的地穿越點。因此會有兩個
以上的穿越點，如圖十六所示，有 path1 與
path2，選擇現在位置、穿越點、目的地路線
長總和最小的路徑 path1。 
 
圖十六、兩條穿越線，選擇路徑長最小的 
 
四、實作與模擬 
我們針對距離與訊號強度做一實驗，目的
是要找出尚能接受的衰變範圍。我們以兩台
Mini-Z車子以一公分為單位直線拉開距離，並
且在每次測量時都取其穩定平均值，得到圖十
七結果。當兩台 WSR 超過兩米之後，數據將
呈現劇烈的跳動，所以我們採用 0~160公分較
為穩定的數值進行分析。而如果將所有的數據
安裝到 Mini-Z 車子內，將會非常佔記憶體空
間，因此我們依此數據尋找適合的逼近法: 
二次逼近: 
y = 0.0881x2
三次逼近:  
 - 3.1046x + 32.169 
y = -0.0013x3 + 0.0834x2
四次逼近:  
 - 2.6491x + 33.538 
y=2*10-05x4 - 0.0012x3 + 0.0752x2
    最後取三次逼近法當作訊號強度與距離
的轉換函式。原因是四次逼近法需要儲存的係
數更多，但是精確度經計算後只有較三次逼近
法提高 0.01而已。 
 - 2.6797x + 
33.975 
 
圖十七、距離與訊號強度實測結果，x表示訊
號強度，求出值為距離。 
    由訊號強度與距離的實驗，訊號強度在某
個範圍的衰變情況還是能被採用。但是極容易
受到環境因素，諸如氣溫，地板牆壁材質等等
所影響，因此每個環境下，訊號強度與距離的
關係都必須另外量測分析。 
    圖十八是WSR與Sink node端連線時所展
現的基本功能，目前能透過無線網路讓 Mini-Z
接收發訊息，指定車輪角度及速度，即可按照
我們所設定的距離長度行走。並且能夠回傳車
頭角度、RSSI 值等等的資訊。 
 
 
目的地 
Path1 
Path2 
穿越點 
穿越點 
40cm 
30cm 
  
附
  錄
  三
 
  
本論文於第二章將介紹 RoboCup 2D 模
擬組的相關文獻，第三章的部份則是我們所提
出的演算法。第四章與第五章分別為模擬環境
的介紹與成果分析。 
2. Related works 
在閱讀了相關論文後，我們發現相關的論文可
以大致分為以下三類： 
1. 人工智慧 
2. 建模預測 
3. 系統架構及決策模式 
A. 人工智慧 
在文獻〔1〕中，作者採用了模糊理論 
(Fuzzy) 的概念，配合決策產生的架構，使隊
伍的決策較有彈性而不致於過於死板。但是由
於若要使用到模糊理論的化，就必須使用模糊
集合中的歸屬函數，其設定方法以及為何將該
函數訂定成該種特別的映射關係，容易遭人質
疑其合理性。因此除非使用人工智慧中的訓練
方式，為每個歸屬函數制定其映射關係，否則
作者所自訂的歸屬函數設定方法將無法成為
有說服力的一種方法。 
2009 年發表的論文〔16〕，所使用的是混
合式的架構。該作除了使用了 fuzzy 的概念來
實作之外，還加上了基因演算法來幫個系統進
行決策的判斷。而文獻〔2〕〔3〕則是試著使
用人工智慧中的學習方法：增強式學習法。增
強式學習通常用於無監督者的環境之下，監督
者在此扮演的角色便是告訴學習代理人 
(agent) 其所下的決策是否為正確。因此在增
強式的學習過程中，並不會有監督者告訴代理
人其所下的決策是否為正確，只能由代理人自
行判斷。在第〔2〕篇之中，作者想要利用增
強式學習法使球員的防守能力增強，並設計了
一套實驗，讓球員可以自行學習如何防守敵人
的進攻與射門。文獻〔3〕則是套用了 Keepaway
的實驗環境，並利用增強式學習法來使球員的
持球時間提昇。前者除了使用增強式學習之外，
還用到了類神經網路 (Neuron Network) 作為
輔助，而類神經網路最為人所垢病的便是它訓
練出來的結果，我們時常無法解釋其原因；且
類神經網路只適合用於離線 (off-line) 的訓練，
不適合用於即時的比賽之中。另外由於在
RoboCup 模擬比賽的環境中，許多的結果都是
無法立刻取得的，也無法取得報酬值。因此除
非有人為監督，當球員做了一個好的決定後，
便經由手動的方式給定一個正面的報酬 
(reward) ；因此我們認為在這樣的模擬環境之
下，增強式學習法是不適用的。 
B. 建模預測 
另一類的研究方向則是替敵方隊伍建立
模型，並由該模型來預測對手的下一步，較具
代表性的為文獻〔5〕〔6〕〔9〕，第〔5〕篇的
方法是將多場比賽的敵人的行進路線以點的
方式記錄下來，然後將一定距離內的點合併成
一個顏色較深的點，如此經常行走的路線便會
形成顏色較深的區塊，方便使用者觀察敵人的
進攻習性。然而這樣的方法依舊只適合用於離
線的觀察，對於比賽的途中並沒有太多的助益。
文獻〔6〕則是在探討如何由整理敵人的行為
模型來得到對手的慣用攻擊手法。而該文獻的
除了與前一篇文獻一樣的缺點之外，另外則有
著建模編碼時過於粗糙的問題，這將嚴重地影
響預測的準確度。第〔9〕篇論文則是使用了
啟發式以及類神經網路的架構，並使用此兩種
架構來預測敵人的行為。然而啟發式架構的缺
點則是彈性太小，無法視情況而動態調整預測
結果，只能以公式化的方式進行預測；類神經
網路的參數選擇也是一門重要的學問，但最大
的問題仍在於該方法所需要的訓練時間過久，
因此類神經網路無法使用於線上 (on-line) 的
即時比賽。 
C. 系統架構及決策模式 
最後則是最多論文所提及的部份：隊伍設計
概念，這類的論文包括了 
1.隊伍系統架構設計〔7〕〔8〕〔15〕， 
2.隊伍防守站位及默契協調〔10〕〔11〕〔12〕 
3.傳球決策〔13〕。 
第〔7〕〔8〕〔15〕篇文獻分別敘述了三隻不
同隊伍的系統架構，〔7〕使用了支持向量機 
(Support Vector Machine)來測量球與守門員的
動態。〔8〕則是利用機率建模的方式，來判斷
各點的射門成功機率。〔15〕則是 RoboCup 
2000 年模擬比賽的冠軍隊伍描述，裡面記載
了該隊伍的策略、戰術、隊形與球員型態的建
構方法，而其中最有名的便是他們使用了
SBSP (Situation Based Strategic Position ) 的設
計概念，在此方法底下的每位球員，在不同隊
形下均有不同的戰略位置，而他們在球場上的
站位則取決於與球的距離。當球離他們越近的
時候，球的吸引力就會越大，因此球員便會移
動位置去追球；反之當球離他們越遠的時候，
此時的吸引力也會降低甚至沒有，球員便會回
到他們的戰略位置上。也因如此，若是陣型的
設定不正確，就很有可能造成球員站位的防守
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
由於在比賽進行時，球的行進速度若是
過快，會有球員無法接應的情況發生。因此我
們做了一個簡單的實驗，實驗的目的是在觀察
球移動速度與球員接應成功率之間的關係，實
驗方法是設定好兩球員的距離以及力道後，每
種力道以及距離各踢 30 次，並記錄該種組合
下，接應球員是否可以成功地接應到球，當兩
球員距離很接近時，接應成功的機率會與距離
呈反比。而這個結果將可以讓我們用來作為傳
球成功機率判斷的依據。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
得到了各種力道與距離下的傳球安全角
度之後，我們便可以使用這些數據來加速球員
的傳球判斷以及提昇成功率。 
當我方球員欲進行傳球時，會先從附近
球員中，隨機各挑選 n 個傳球點，再將附近
敵方球員的距離及其所在方位代入，若是所
有傳球點均在可傳球角度所囊括範圍之中，
才會進行下一步─傳球成功率的計算。傳球成
功率的計算主要是代入隊友距離後，求得一
個到達目標點的成功率最高且不會被敵人截
走的傳球點。 
B.截球 
一般而言，球員在進行是否截球的判斷時，
多是計算球員與足球在某個時間兩者的位置
是否重疊，若是重疊則有很大的機會可以進行
截球，而經常被使用的方法有兩種：一種是使
用參數式配合聯立方程式求解，另一種則是啟
發式演算法(Heuristics)。 
參數式的計算方式係將球員以及足球的
運動物理模型化，最後用聯立方程式求解以計
算何時兩者座標會重合。 
但是由於此物理運動方程式要使用參數
式來解的話，僅能使用數值方法中的尋根法一
途，然而如此一來必須耗費大量的運算資源，
來判斷何時才能截取到球。所以為了增加計算
的速度，我們並不採用參數式的方法解決這個
問題。啟發式演算法主要概念是計算在各個時
間點之時，球員與足球的位置在何處，類似於
線性搜尋(linear search)。為了降低搜尋時間，
我們提出了一個類似二分搜尋法的演算法，並
可以使運算時間降低為 O(log n)。而二分搜尋
法必須訂立一個Tmax以供球員做為搜尋底線，
若是球員無法於 Tmax 截到球便會放棄本次的
截球；在本篇論文 Tmax被設定為 30 個 cycle，
原因是設定過長或是過短的 Tmax 都沒有太大
意義，而經過我們測試的結果，將 Tmax 定為
30 可以對截球與控球比例上有一定的成效。 
C.射門 
由於本論文使用的機率模型係改良 UvA
的方法，因此本章節將會先介紹 UvA 如何將
射門成功率的問題利用機率模型來解決。再來
討論由我們所提出的想法。 
UvA的將射門問題抽象化成機率的計算，
在此先將介紹該隊伍對於機率模型的定義。 
作者先假定當球員站在球門前時，並與球
門中心點的垂直距離為 d。接著作者假設進球
的機率是屬於高斯分佈 (式 3.1)，y 即為各點
所經過的機率值；但是若要使用高斯分佈來計
算進球的機率，則需要有標準差 σ，於是作者
便做了一連串實驗，式 3.2 便是作者所導出的
距離與標準差的關係。  
 
Figure 3.不同力道下踢球的距離與傳球安全
角度的關係圖 
40 
60 
80 
100 
120 
140 
160 
1 3 5 7 9 11 13 15 17 19
角
度
距離、力道與傳球安全角度的關係
全力 三分之二 三分之一
踢球力道 
40%
50%
60%
70%
80%
90%
100%
5 10 15 20 25 30
成
功
率
距離
距離與接球成功率
全力踢球 三分之二 三分之一
Figure 4.距離、踢球力道與接球成功率關係圖 
的球門應該如何累加，並且使用 r(右)、
l(左)、u(上)三種符號的組合來表示各種
角度所對應到的 grid 排列，Figure 7 標示
了符號序列的生成示意圖，生成方法如
Figure 8。 
1: for Xl=Xhead to Xl=Xtail-1{ 
2:  y=tanθ∙Xl 
3:  yu=    
4:  xr=xl+1 
5:  if(tanθ∙xr = yu) 
6:   print “ur” 
7:   移動至右上一格 
8:  end if 
9:  if(yd < tanθ∙xr  < yu) 
10:  print “r” 
11:  移動至右邊一格 
12: end if 
13: while(Xl < yu/tanθ < Xr) 
14:  print “u” 
15:  移動至上方一格 
16: end while 
Figure 8.Climbing Table 生成演算法 
 
 
 
 
 
 
 
 
 
Figure 9.球門傾斜角度為 α時與 Climbing 
Table 轉換的示意圖 
 
以上圖的例子來看，當球門與球員正面
呈現 α 角時，程式便會產生對應的符號
列並記錄到α角的Climbing Table之中。
因此在比賽進行時，只需定位好起始的
定位點並取得球門傾斜的角度以及距離，
就可以使用 Climbing Table 來快速取得
哪些 grid 需要進行運算。 
3. 線上射門成功率判斷：當球員要進行射
門成功率的運算時，首先會計算目前位
置與球門中心 Pc 連線的角度 α（與 y 軸
的夾角）及距離 ds，由預先載入的
Climbing Table中提取出 grid的轉換方式
後，再由 Psl點所對應到的 Record Table
開始累加至 Psr。計算完了 Record table
中 Psl 至 Psr 總和之後，接下來我們要計
算的就是落在球門內的範圍。Figure 10
為射門成功率的示意圖，而成功率決定
的方式則如 Figure 11。 
Figure 10.射門成功率判斷示意圖 
  
1:利用 ds計算出球到達 Pc所需要的時間 t 
2:計算敵方守門員 Pog在時間 t 之內，所能移動
的距離 dr，並以 dr為半徑繪製一個圓形。 
3:將我方射門球員 Pt 與敵方防守範圍製作切
線並投影至球門如點 Pgr。 
4:Pgl至 Pgr為落在球門區域內的起始及終點 
5 射門成功機率 P(GOAL) =  
                        
     
   
           
     
   
   
//其中函數 T[   α  ]可將距離以及角度轉換
成對應的 grid 序列。 
Figure 11.射門成功率計算 
 
D. 整體決策演算法 
 
 
 
 
 
 
 
 
 
 
 
Figure 12.整體演算法示意圖 
 
本論文主要是利用離線蒐集而來的經驗，
配合機率學中獨立事件的乘法法則特性，來增
加進攻的整體效能。作法則是分別計算每個獨
立事件如傳球與射門成功的機率之後，將之相
乘以計算本次傳球的射門成功率為何： 
當我方球員欲進行傳球時，會先挑選出安全的
a
A
B
Psl
PsrPc Pgr
ds
dr
Pgl
α
Pt
Pog
x
y
Simulation 2D: The NeuroHassle Approach” , 
RoboCup 2008: Robot Soccer World Cup XII, 
LNCS. Springer, (2008) 
[3] J. Tao , D. Li, “An Optimal Strategy Learning for 
RoboCup in Continuous State Space”, 
Proceedings of the 2006 IEEE International 
Conference on ,pp. 301-305, (2006)  
[5] A. Bezek, M. Gams, and I. Bratko, “Multi-Agent 
Strategic Modelingin a Robotic Soccer 
Domain” ,Proceedings of the fifth international 
joint conference on Autonomous agents and 
multiagent systems, Japan, pp. 457-464 ,(2006)  
[6] F. Ramos and H. Ayanegui,” Discovering 
Behavioral Patterns in Multi-agent Teams”, Agent 
and Multi-Agent Systems: Technologies and 
Applications, Springer Berlin,pp.391-400,(2008) 
[7] T. Srinivasan, S. Harini, K. Kavitha, P. 
Sukumar, ”SVMRobosoc : A Novel Approach 
Towards Planning Strategy for Robotic Soccer 
Using Hierarchical Intelligence Systems”, 
Intelligent Systems Design and Applications, 2007. 
Seventh International Conference on,pp. 
591-596 ,(2007)  
[8] R. D. Boer and J. Kok, ”The Incremental 
Development of a Synthetic Multi-Agent System: 
The UvA Trilearn 2001 Robotic Soccer 
Simulation Team”, Faculty of Science University 
of Amsterdam, Master's thesis ,(2002) 
[9] M. Sharifi, H. Mousavian, A. Aavani, , “Predicting 
the future state of the RoboCup simulation 
environment: heuristic and neural networks 
approaches”, Systems, Man and Cybernetics, 2003. 
IEEE International Conference on, vol.1,pp. 32-37 
(2003)  
[15]L. P. Reis, N. Lau, “FC Portugal Team 
Description: RoboCup 2000 Simulation League 
Champion”, Lecture Notes In Computer Science; 
RoboCup 2000: Robot Soccer World Cup IV, Vol. 
2019 ,pp. 29-40,(2001)  
[10] V. Kyrylov, E. Hou, “While the ball in the digital 
soccer is rolling, where the non-player characters 
should go in a defensive situation?”, Proceedings 
of the 2007 conference on Future 
Play ,pp.90-96,USA,(2007) 
[11] S. Razykov, “Optimal Offensive Player 
Positioning and Collaboration in a Digital Soccer 
Game”, Simon Fraser university, Master's thesis, 
(2006) 
[12]J. Certo, N. Lau, and P. L. Reis, “A generic 
multi-robot coordination strategic layer”, 
Proceedings of the 1st international conference on 
Robot communication and coordination, Article 
No. 11 ,(2007) 
 [13]V. Kyrylov , D. S. Bergman , and M. Greber, 
“Multi-criteria optimization of ball passing in 
simulated soccer”, Journal of Multi-Criteria 
Decision Analysis, pp. 103-113 ,(2005) 
[14] Y. Zang, , “Tao of Soccer Overview. Electronic 
resource.” http://e-graviton.com/ird/.(2005) 
[15] M. Chen, E. Foroughi, “Robocup Soccer Server 
manual 7.07”, August,60 -5 6. RoboCup 
Federation. available: 
http://sserver.sourceforge.net. (2002) 
[16] J. Kuo, and Y. C. Ou, , “An Evolutionary Fuzzy 
Behavior Controller Using Genetic Algorithm in 
RoboCup Soccer Game.”, In Proceedings of the 
2009 Ninth international Conference on Hybrid 
intelligent Systems, Volume 01, pp. 281-286, 
Washington, DC,  
[17] K. Shi, A. Bai, Y. Tai, Xiaoping 
Chen,”WrightEagle2009 2D Soccer Simulation 
Team Description Paper”, 
http://www.wrighteagle.org/en/robocup/2D/tdp/W
rightEagle2009_2D_Soccer_Simulation_Team_D
escription_Paper.pdf , (2009) 



Chapter 6
Autonomous Swarm-Bot
Systems for Wireless
Sensor Networks
Shiann-Tsong Sheu
6.1 Introduction
This chapter introduces a practical model, which is a distributed and
autonomous swarm-bot system, for wireless sensor networks. This work
is achieved with the cooperation of three universities, the National Cen-
tral University, the Chang Gung University, and the Tamkang Univer-
sity, and sponsored by National Science Council (NSC) inter-institutional
collaboration project, Taiwan.
Recent advances in electronics and wireless communications have
enabled the development of low cost, low power, and multifunctional sen-
sor nodes that are small in size and communicate with others in short
range. These tiny sensor nodes consisting of sensing, data processing, and
communicating components can be used to form wireless sensor networks
further. The sensor networks can be used for various application areas, e.g.,
health care, monitoring environment, military usage, and home security.
The application of wireless sensor networks needs to satisfy the constraints
introduced by factors such as fault tolerance, scalability, cost, hardware,
topology change, environment, and power consumption. Since the above
constraints are highly stringent and specific, new wireless ad hoc network-
ing techniques are required, e.g., the hardware and software architectures,
communication protocols, and application programs.
167
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  169
commands issued by the administrator. It can imitate the behaviors of other
sensor nodes to move or coordinate their actions by adopting a predesigned
algorithm to archive some missions.
The hardware platform shown in Figure 6.2 is based on the Atmega128L
microcontroller of Atmel Corporation and the cc2430 chip, which is the
real SoC ZigBee/IEEE 802.15.4 designed communication chip developed
by Chipcon company. Besides the central processing unit and communica-
tion component, the ant-bot comprising the mobile system and the power
system, and the block diagram of the system is also shown in Figure 6.3.
Power
regulator
MCU
section
JTAG
connector
Antenna
connector
LED1
CC2420 RF
section
LED1UART2
connector
UART1
connector
Magnetic
compass
sensor
Motor control
connector
Figure 6.2 The embedded wireless sensor module.
Mobilizer
ADC
Processing
Storage
Transceiver
Power unit
Sensor
board
Power
generator
Figure 6.3 The hardware structure block diagram.
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  171
Our localization scheme is based on the relative coordinate system, and
the reference point that is the start position of the selected coordinator of a
team. How to elect the coordinator is stated in the previous section. Owing
to the limited space, we only give an introduction to present the main idea
of our localization scheme. Our algorithm includes two main phrases: an
initial phrase and an iterative phrase. Following is an example combined
with a figure to illustrate our algorithm, as shown in Figure 6.4.
At the initial phrase, we let the selected coordinator move around the
circumference of a circle, and broadcast a sequence of beacons with its
maximum transmitted power. Each beacon contains the coordinate of the
selected coordinator, the coordinator’s identification, and the transmitted
power level. As shown in Figure 6.4, the coordinator (the ant-bot with
blue color) turns around along the circumference of blue dotted circle with
the radius of r0. Every other ant-bot within the transmission range can
determine its coordinate if it has received at least three different positions’
beacons transmitted from the coordinator. This is because the trilateration
scheme is employed in our localization algorithm. Figure 6.4 shows the
green ant-bots within the second outer circle from the center point, that
can determine their locations at the initial phrase.
As shown in Figure 6.4, a condition may exist in which, some red ant-
bots located in the two outermost circles cannot complete their localization
process because, they are located far from the coordinator due to the limited
transmission range. If this condition occurs, we perform the iterative phrase
of our algorithm. At the iterative phrase, each ant-bot that has a coordinate
r2
r0
r1
Figure 6.4 An illustration of the localization algorithm for our mobile sensor
robots.
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  173
coordinator must communicate with other ant-bot members within the
transmission scope of a sink node. Based on these requirements, we
present a method that elects a coordinator, being in the light of values
of RSSI. First, a sink node broadcasts a Coordinator Election message (see
Figure 6.5a). After the ant-bots receive a Coordinator Election message,
they back off for a short period based on the degree of RSSI (shorter the
back-off period, farther the distance from the sink node). They separately
broadcast a Coordinator Election message again when their back-off time
exhausts. The other ant-bots will then stop the present back-off counting
to execute the next back-off upon hearing another Coordinator Election
messages during the computing back-off period. The ant-bots that receive
more than two Coordinator Election messages, compute back-off period
based on RSSI first (larger the back-off period, nearer the distance from the
sender), as shown in Figure 6.5b. Then the ant-bot announces that it is the
elector of the group, by broadcasting Coordinator message when the back-
off period exhausts (see Figure 6.5c). The ant-bots that receive Coordinator
message send an ACK Coordinator Message, and broadcast Stop Electing AQ1
message. As soon as other ant-bots receive a Stop Electing message, they
stop the process of Coordinator Election. This is the way a coordinator of
an ant-bot group is elected, and located in the center of a group. Thus ori-
entations and communications can benefit from this method. Further, the
ID assignment for ant-bot is based on the MAC short address in each robot,
and in this manner, we can save memory spaces to avoid building table for
each ant-bot, so that the extra memory space is utilized effectively.
6.4.2 Position Measurement
The swarm-bot systems can be used to search for a target in an unknown
environment with many obstacles, and need a collision-free path planning
algorithm to reach the target. These mini ant-bots are equipped with several
sensors, and wireless communication equipment. The sensor ant-bots can
be equipped with the GPS. If there is no GPS (GPS-less), since all sensor
ant-bots are in indoors then they need indoor position estimation methods
to indicate the position. Most existing localization algorithms make use
of the trilateration or the multilateration, based on range measurements
obtained from the RSSI,3 time of arrival (ToA),26 time difference of arrival
(TDoA),23 and the angle of arrival (AoA).22 The RSSI technique is employed
to measure the power of the signal at the receiver. Because of its simplicity,
it has been considered in our work.
6.4.3 Direction Measurement
Each ant-bot is equipped with an electronic compass, which can support
a global direction of an ant-bot, to indicate its current direction.27 With the
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  175
electronic compass, the ant-bots can know which direction they are facing.
The direction of the ant-bot d is represented as an angular magnitude by
an electronic compass, and is denoted by ψ. The direction of the ant-bot
i is defined as di(ψ). The ant-bot can turn to any direction by giving an
angle ϑ plus; it can set its own direction di(ϑ).
All ant-bots have to determine how to plan a route to the target, if the
target’s coordinate is given. First, the coordinator has to determine which is
direction of the target. Assume that the coordinates of both the coordinator,
and the target are (xc, yc) and (xt , yt), respectively. We denote the vector
from the coordinator to the target by v, where
v = (xt − xc, yt − yc) (6.1)
The length of the vector v is defined as
|v| := √(xt − xc)2 + (yt − yc)2 (6.2)
According to the vector v, we can determine in which quadrant the target
is. The conditions are given as follows:
⎧
⎪⎪⎨
⎪⎪⎩
if xt − xc ≥ 0 and yt − yc ≥ 0, then target is in (I)
if xt − xc < 0 and yt − yc > 0, then target is in (II)
if xt − xc ≤ 0 and yt − yc ≤ 0, then target is in (III)
if xt − xc > 0 and yt − yc < 0, then target is in (IV)
(6.3)
Figure 6.6 shows the relationship between the current direction of a
coordinator dc(ψ), and the vector v of the coordinator to the target, where
the angle φ is defined as the angular magnitude of v, and the θ is defined
as the angular magnitude to the X-axis. θ can be obtained by using tangent
theory given by
θ = tan−1 ( yt − yc
xt − xc
)
(6.4)
According to (1.3) and (1.4), the turning angle γ is defined as the angular
magnitude, and the ant-bot has to turn to the target shown as below:
γ = φ − ψ (6.5)
where
φ =
⎧
⎪⎪⎨
⎪⎪⎩
π/2 − θ, when v ∈ (I)
π/2 + θ, when v ∈ (II)
3π/2 − θ, when v ∈ (III)
3π/2 + θ, when v ∈ (IV)
(6.6)
When γ > 0, it represents turning clockwise, and γ < 0 represents
turning counterclockwise.
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  177
6.4.4 Inter-Distance Maintenance
The inter-distance of ant-bots in a cluster should be maintained to avoid
collisions or wandering away. We consider a cluster consisting of n ant-
bots as R1, R2, . . . , Rn, and the Dij represents the distance between two
ant-bots,18 Ri and Rj . The ant-bot collision avoidance problem can be con-
sidered similar to the obstacle avoidance by using several techniques such
as infrared18 and ultrasound.21 These techniques are designed to overcome
the collision problems by maintaining their minimaps, but not wandering
away problem. We use the RSSI values η to estimate the distance between
two robots.17 The RSSI values can be obtained from the communication
packets received by the ant-bots. The estimated distance from a coordinator
Rc, and an ant-bot Ri is given by
Eci(η) = Dci + ni (6.7)
where the ni represents the distance measurement error, and is modeled
as zero-mean-independent white Gaussian processes with variance σ2n.
If the measured signal strength ηi from the received packets exceeds that
of an ant-bot Ri by a threshold h, we say that the ant-bot Ri is in the lower
boundary range. Otherwise, the ant-bot Ri wanders away from a coordi-
nator, and then it has to pulled back. To maintain the distances among
the coordinator and its members, the coordinator periodically broadcasts a
beacon B with its own coordinate to the members. To avoid the ping-pong
effect of using the threshold, we set two thresholds—the upper bound hu,
and the lower bound hl . Each ant-bot, after receiving that beacon, judges
the ηi , whether it is smaller than the hl or not. If the ηi < hl , the ant-bot
Ri will turn it direction through using (1.5) and (1.6) to set the dc(φ), and
go forward the coordinator until the ηi is larger than or equal to the hu.
6.5 Minimap Integration
We have known that the coordinator tries to collect the information about
the environments from its own members for maintaining the global map
information to carry out the path planning. So the members should period-
ically maintain the minimap in their memory for retaining the information
of the environments beside its own. Because the coordinator have to main-
tain the global map built up by the minimap, it should use more memory
than its members for holding the global map. If the coordinator runs out
of its energy or breaks, then the backup coordinator replaces the original
coordinator part to lead the cluster. Therefore, we should define the min-
imap held within the members, and know the packet format of the data
communications among the coordinator and the members. In this section,
we try to make the sensing data of environments a fixed packet format.
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  179
Source_ID_Num
Destination_ID_Num
X-Coordinate
Y-Coordinate
Environmental Data
4 bits
4 bits
10 bits
10 bits
Var bits
Columns Length
Source_ID_Num
Destination_ID_Num
4 bits
4 bits
Columns Length
Command_Type 2 bits
X-Coordinate
Y -Coordinate
10 bits
10 bits
Compass_Direction 9 bits
Reserve 1 bits
(a)
(b)
Figure 6.8 The two packet formats of the minimap sending from the members to
their coordinator and the request sending from the coordinator to its members.
(a) Packet format of the members. (b) Packet format of the coordinator.
 X-Coordinate. There are 10 bits in this column. This column records
its current coordinate of the x-axis.
 Y-Coordinate. There are 10 bits in this column. This column records
its current coordinate of the y-axis.
 Environmental Data. In this column there are variable bits decided
by the size of the minimap. This column records the information of
its minimap. Take the Figure 6.7 for example, there are 64 bits in
this column.
After defining the minimap model and packet formats in Figures 6.7
and 6.8, the ant-bots can easily send out the packets, and the coordinator
can correctly recognize its sensing information by the standardized packet
formats. Figure 6.9 is the sketch of the environmental shape integrated by
the coordinator in the path planning. The coordinator receives all stan-
dardized minimaps of its members which are interested in building the
partial view of the environment, and check all the space-free ways for
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  181
direction of its cluster. The last, the Command_Type= 11, is used
by the coordinator to gather the information on environments from
the specified ID ant-bots in the column of the Destination_ID_Num.
 X-Coordinate. There are 10 bits in this column. This column records
its current coordinate of the x-axis.
 Y-Coordinate. There are 10 bits in this column. This column records
its current coordinate of the y-axis.
 Compass_Direction. There are 9 bits in this column. This column
is used to contain the degrees of the coordinator’s angle by its
electronic compass.
 Reserve. There are 9 bits in this column. This column is reserved
for the future.
6.6 The Collaborative Path Planning Algorithm
By the integration of the minimaps, we can clearly construct the communi-
cation models between the coordinator and the members. Therefore, in this
section, we describe the proposed collaborative path planning algorithm
(CPPA) in detail. Consider Figure 6.9 for example; there are nine ant-bots
(n = 9) gathered as a cluster cooperating with one another to reach a given
target. First, the Rc receives the (xt , yt) of the target, and calculates the
angular magnitude of the target φ to turn its direction dc(φ) toward the tar-
get. The Rc then broadcasts a request message MR , with the packet format
of the coordinator including the target’s coordinate (xt , yt), its coordinate
(xc, yc), and the dc(φ) to request its members for collecting relative map
information. The member Ri , i ∈ {1, . . ., n − 1}, after receiving the MR , col-
lects the relative environments’ information, and delivers a message Mi
with the packet formats of the members, including the shapes of obstacles,
if any, its coordinate (xi , yi), and its current direction di(ψ) back to the Rc.
Using the information of the (xi , yi), and the Rc ’s direction dc(ψ), the
coordinator Rc can determine in which locality the Ri is (quadrant). The Rc
waits for a while to collect all the messages from its members, combines
various information from both its members, and the members’ correspond-
ing quadrants; and can build a temporary map as shown in Figure 6.9.
According to this global map, the Rc search as for the v and several possi-
ble space-free ways, and chooses the nearest space-free way for the target
to make a decision using the priority of avoiding the obstacle in coordinator.
The sketch of the priority in coordinator is shown in Figure 6.10. Assume
that the angular magnitude of the nearest possible way to the target is ϑ,
then the Rc selects the direction dc(ϑ) as the next direction of the cluster
of ant-bots, and broadcasts a direction message Md , including the selected
angle ϑ to its members for marking the target. All members, after receiving
the Md , set the same direction as the coordinator, by using an electronic
compass by the di(ϑ). On the other hand, if its members recognize that
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  183
N
R1
R2R6
R8
R4
R5
R3
Coordinator
R7 Clockwise region
Counterclockwise
region
Cluster radius
The moving direction of the
coordinator
Figure 6.11 The sketch of the clockwise and counterclockwise regions based on
the direction of the coordinator.
shown in Figure 6.10b. With this adjustment, we can make sure that the Ri
in the cluster does not disconnect with the Rc.
The direction of the cluster changes whenever the team meets an obsta-
cle on the way. Since the CPPA is based on cooperative fashion, the
members send the relative information to the coordinator when they meet
obstacles. Therefore, when the Ri runs into an obstacle in a straight direc-
tion di(ψ), it announces the information message Mi to the Rc for decision
making. When the Rc receives the address of an obstacle, it updates its
own map information, and determine whether they have to change a new
direction or not. If the Rc decides to make a change for a new direction, it
broadcasts this new information to its members with both the new direc-
tion dc(ψ +γ), and its current coordinate (xc, yc). Thus, the members
move forward along the new direction announced by the Rc when they
exceeded the (xc, yc). If the Rc does not broadcast a new direction, the
Ri avoids the obstacles, and get closer to the Rc when its new direction
di(ψ +γi) has no obstacles. The algorithms of the coordinator and the
members are shown in both Figures 6.12 and 6.13, respectively.
These processes proceed interactively until they reach the goal.
Figure 6.14 shows an execution of the swarm-bot systems for the
TGA game. This demonstration shows that these ant-bots autonomously
coordinate with each other for a given mission. To alleviate the energy con-
sumption, the direction to the target is only computed by the coordinator,
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  185
Fi
gu
re
6.
13
Th
e
al
go
ri
th
m
of
th
e
m
em
be
r
pr
oc
es
s.
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  187
Figure 6.14 (Continued)
and the members follow the direction reach the goal. They only need to
maintain its local information, and avoid the obstacles that meet on their
way. The communication overhead is also reduced, since the members
only communicate with the coordinator when they run into an obstacle in
their straight direction.
6.7 Conclusion
This chapter presents the autonomous swarm-bot system, integrated with
an IEEE 802.15.4 based wireless communication component and several
sensors, and its implementation in a very compact size. This investigation
brings innovative elements to collective and cooperative robotics, open-
ing new research directions in swarm robotics, collective robotics, and
distributed intelligence. Our innovation involves the integration of the
characteristics of sensory devices, wireless communication devices, and
mobility into a tiny ant-bot robot to create a fully distributed system. Par-
ticularly different is the mobility of each ant-bot module, and their high
autonomy from the point of view of the sensors, and the computational
power. Future work focuses on the research of the distributed intelligence
algorithm, and energy efficiency.
References
1. P. Bergamo et al., “Collaborative Sensor Networking Towards Real-Time AQ2
Acoustical Beamforming in Free-Space and Limited Reverberance,” IEEE
AQ3Trans. Mobile Computing, vol. 3, no. 3, pp. 211–224, Jul. 2004.
Autonomous Swarm-Bot Systems for Wireless Sensor Networks  189
18. V. Jungnickel, A. Forck, T. Haustein, U. Kruger, V. Pohl, and C. von Helmolt,
“Electronic Tracking for Wireless Infrared Communications,” IEEE Trans.
Wireless Commun., vol. 2, no. 5, pp. 989–999, Sept. 2003.
19. J.J. Kuffner, “Efficient Optimal Search of Uniform-cost Grids and Lattices,”
in IEEE IROS 2004, vol. 2, pp. 1946–1951, Sendai, Japen, Sept. 2004.
20. M.D. Marco, A. Garulli, A. Giannitrapani, and A. Vicino, “Simultaneous AQ4
Localization and Map Building for a Team of Cooperating Robots: a Set Mem-
bership Approach,” IEEE Trans. Robotics and Automation, vol. 19, no. 2, pp.
238–24, April 2003.
21. P.J. McKerrow and S. min Zhu, “Modelling Multiple Reflection Paths in Ultra-
sonic Sensing,” in Proc. IEEE/RSJ IROS-1996, vol. 1, pp. 284–291, Osaka,
Japan, Nov. 1996.
22. D. Niculescu and B. Nath, “Ad Hoc Positioning System (APS) using AoA,”
in Proc. IEEE INFOCOM 2003, vol. 22, no. 1, pp. 1734–1743, San Francisco,
CA, April 2003.
23. N.B. Priyantha, A. Chakraborty, and H. Padmanabhan, “The Cricket Locat-
ion Support System,” in Proc. ACM MobiCom 2000, pp. 32–43, Boston, MA,
Aug. 2000.
24. T.S. Rappaport, Wireless Communications: Principles and Practice, Prentice-
Hall PTR, Upper Saddle River, NJ, 1996.
25. E. Sack, “Path Planning for Planar Articulated Robots using Configuration
Spaces and Compliant Motion,” IEEE Trans. Robotics and Automation,
vol. 19, no. 3, pp. 381–390, June 2003.
26. A. Savvides, C.-C. Han, and M. Srivastava, “Dynamic Fine-Grained Local-
ization in Ad-hoc Networks of Sensors,” in Proc. ACM MobiCom 2001,
pp. 166-179, Rome, Italy, July 2001.
27. S. Suksakulchai, S. Thongchai, D.M. Wilkes, and K. Kawamura, “Mobile
Robot Localization Using an Electronic Compass for Corridor Environment,”
in Proc. IEEE Int. Conf. Systems, Man and Cybernetics, pp. 3354–3359,
Nashville, TN, Oct. 2000.
28. S.-J. Sun, D.-W. Lee, and K.-B. Sim, “Artificial Immune-based Swarm Behav-
iors of Distributed Autonomous Robotic Systems,” in Proc. IEEE ICRA 2001,
vol. 4, pp. 3993–3998, Seoul, Korea, May 2001.
29. M. Sveda and R. Vrba, “Integrated Smart Sensor Networking Framework for
Sensor-based Appliances,” IEEE Sensors Journal, vol. 3, no. 5, pp. 579–586,
Oct. 2003.
30. L.P. Tomas and A.W. Michael, “An Algorithm for Planning Collision-free Paths
Among Polyhedral Obstacles,” Commun. ACM, vol. 22, no. 10, Oct. 1979.
31. B. Tovar, S.M. LaValle, and R. Murrieta, “Optimal Navigation and Object
Finding without Geometric Maps or Localization,” in Proc. IEEE ICRA-2003,
vol. 1, pp. 464–470, Taipei, Taiwan, Sept. 2003.
32. A. Zhu and S.X. Yang, “Path Planning of Multi-robot Systems with Cooper-
ation,” in Proc. IEEE Int’l Symp. CIRA-2003, vol. 2, pp. 1028–1033, Kobe,
Japan, Jul. 2003.
96 年度專題研究計畫研究成果彙整表 
計畫主持人：吳世琳 計畫編號：96-2628-E-182-019-MY3 
計畫名稱：機器人足球比賽策略之設計與實作 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 1 1 100% 件  
件數 1 1 100% 件  
技術移轉 
權利金 3980 3980 100% 千元  
碩士生 3 3 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 1 1 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
