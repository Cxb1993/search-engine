2
 ttt TPCTWT
)Tu(P, t

Xip
)T,u(i tp
一個資料項集(itemset)，或稱為樣式(pattern)，是由 I 中一個或一個以上的資料項所
形成的集合。一個資料項集 P 內所包含的資料項個數稱為 P 的長度，以|P|來表示；而長
度為 l 資料項集，稱為一個 l-資料項集(l-itemset)。當一個資料項集 P 為某一筆交易 T 的
一個子集，則稱 T 包含 P。Occur(Ip, Tt)表示在時間 t 的交易資料中，Ip 這個資料項出現
的次數。S(Ip)表示資料項 Ip 每出現一次的重要程度值。Utility(Ip, Tt)=Occur(Ip,Tt)×S(Ip)
表示資料項 Ip 在時間點 t 的交易資料中之總重要程度值，而在時間 t 的交易資料中所有
資料項的重要程度值總合以下式表示:
Utility(X, Tt)= 。
一個資料項集 P 在 CTWt 中的重要程度值總合則以下式表示:
Utility (P)=
當 Utility (P)大於使用者設定值ε時即判定 P 為一個重要樣式。
上述評估資料項集重要性的函式使得常見資料項集的向下包含特性不再成立，無法
套用向下包含特性，將會使候選樣式的產生數量大增。故另外定義每一筆交易資料的重
要性(transaction utility) TUtility(Tt) 為 Tt 中所出現的所有資料項之權重與次數之乘積加
總值，而一個資料項集 P 的出現交易重要性值(transaction-weighted utilization) TWUtility
(P)則為包含 P 的資料交易之 TUtility(Tt)的加總。
根據出現交易重要性值的定義，若 Q 為 P 的一個子集，則 TWUtility (P)≦TWUtility
(Q)，因此若 TWUtility (P)＞ε，則 TWUtility (Q)＞ε，也就是以出現交易重要性值過濾樣
式就會滿足向下包含特性。由於 Utility(P)小於 TWUtility(P)，若 TWUtility(P)小於 ε，
Utility(P)必定小於ε，因此可根據出現交易重要性值先進行候選樣式的篩選。
2.1.3 擴展 FP-growth之探勘方法
我們採取 FP-tree 的資料結構來儲存交易資料，可以不用在探勘時重覆掃瞄交易資
料內容，節省探勘常見樣式的時間。但在本研究方法中使用的 FP-tree 是以資料項編號
排序，以避免在處理動態資料流的新進和過時資料時大幅調整樹的結構。此外，我們在
FP-tree 的節點資訊中，增加了一個欄位來記錄該對應樣式的累積出現交易重要性值。
本方法針對新增及過時交易，各採用兩階段的處理，第一階段以資料項的 TWUtility
值來砍除非候選常見樣式。首先從長度為 1 的資料項集開始進行探勘，若該資料項為次
數有增加的資料項且其 TWUtility 值高過門檻值，才產生該資料項集的 conditional
FP-tree，並以遞迴方式和 conditional FP-tree 中其它出現次數有增加的資料項組合成長度
2 的資料項集，一直重覆此動作直到產生所有次數增加的候選重要樣式為止。
第二階段則是從第一階段產生的所有候選常見樣式中，驗證樣式的出現交易重要性
值，刪除不符合門檻值的候選樣式。若樣式中所出現的資料項之重要程度值總和×樣式
出現次數超過設定的門檻值，則此樣式為一最近重要樣式。
刪除過時交易也是相同的作法：先從長度為 1 的資料項集開始，若資料項為次數有
減少的資料項且該資料項的 TWU 值高過門檻值，才產生該資料項集的 conditional
FP-tree，並以遞迴方式和 conditional FP-tree 中的其它過時的資料項組合成長度 2 的資料
項集，一直重覆此動作直到產生所有次數減少的候選重要樣式為止。
2.1.4 實驗評估
本實驗執行系統平台為 Microsoft Window XP SP2，使用 Visual C++ 6.0 撰寫程式碼。
硬體配備為 Pentium IV 3.4GHz CPU，具有 2GB 記憶體之個人電腦。實驗中採用的交易
資料由 IBM Data Generator 程式產生，其中資料項種類參數設為 100，交易資料的平均
長度設為 5。實驗中以 Two-Phase 法表示在每次滑動視窗移動後，皆由 FP-tree 中兩階段
的處理完整進行探勘。Two-Phase-C 法表示只針對有次數變動部分的資料項集進行探勘。
在第一個實驗中，我們觀察不同的交易資料量如何影響程式執行所需總時間。在此
實驗中所使用的交易資料數分別為 200、400、600、800、及 1000 筆資料。滑動視窗的
4是由一個數字編號 tid 及一組 I 中的資料項組成的集合 S 所構成，即 S 為 I 的一個非空
之子集合。若存在一個資料項集 P 為 S 的一個子集合，則稱交易 T 包含資料項集 P。統
計資料庫 DB 中包含資料項集 P 的交易筆數，稱為 P 在 DB 中的支持度計數值，以 SC(P)
表示。P 在資料庫 DB 的支持度，則是以 SC(P)除以 DB 中的總交易筆數得之，但本方法
考慮在資料流環境中，因此一個資料項集的支持度，是指該資料項集在滑動視窗中的出
現交易筆數，除以滑動視窗中的總交易筆數。若資料項集 P 在滑動視窗的支持度大於等
於系統中訂定的最小門檻支持度，則稱 P 為一個常見資料項集( Frequent Itemset )；否則
稱 P 為一個非常見資料項集( Infrequent Itemset )。
表 2.1 範例資料庫 TDB
若輸入資料中存在一些雜訊資料，則無法找出較大的常見資料項集。以表 2.1 為例，
表中的範例資料庫 TDB 共包含五筆交易資料。交易紀錄 T1 {B,D,E,F}表示由資料項 B、
D、E 及 F 所組成的資料項集，在此省略集合符號，簡化以 BDEF 表示。若將最小支持
度門檻值訂為 4，則 TDB 中符合的常見資料項集只有 E，而無法找出更長的常見資料項
集。但仔細觀察交易資料庫 TDB，可發現在交易 T1、T3 及 T5 中，均包含資料項 B、D、
E、F、及 G 這 5 個資料項的其中任 4 個。因此若比對包含資料項集時容忍誤差存在，
亦即 5 個資料項中只要包含任意 4 個，便可找出長度為 5 的近似常見資料項集( AFI )。
因此透過近似常見資料項集的觀念，可探勘出更一般化的常見資料項集之集合。
Liu 在 SDM’06的論文中，提出資料項集的誤差容忍值不再定為一個常數值，而是
給定兩個誤差參數值εr 與εc。對於一個資料項集 P，一筆交易 T 至少要包含 P 中|P|*( 1-εr）
個資料項才算容錯包含 P。而在有容錯包含 P 的交易所形成的集合 Ta(P)中，P 中每一筆
資料項至少要在其中的|Ta(P)| * ( 1 -εc)筆交易中出現。若|Ta(P)|/|DB|大於最小支持度門檻
值 min_sup，則 P 為一個近似常見資料項集。為了避免找出過多的近似常見資料項集，
其中多數因具有集合包含關係而造成資訊重覆，因此我們將目標設定為探勘出最大近似
常見資料項集。
2.2.3 從交易資料聚落探勘近似常見資料項集
首先，我們採用 Yun 所提出的交易資料聚落分析方法，利用資料項的 Small-Large
Ratios 將交易資料集做過初步分群及分群調整。接下來我們對每一個聚落進行分析，找
出每個聚落中所隱含的近似常見資料項集。
[定義 2-1] large 資料項、middle 資料項、small 資料項
在一個聚落 Ci 中，對每一個長度為 1 的資料項，計算出其在 Ci 中的支持度。根據給定
的兩個參數值: 最小支持度門檻值( Minimal Support，在此簡寫為 S )及最大限度值
( Maximal Ceiling，在此簡寫為 E )。一個資料項的支持度若大於等於 S，則該資料項稱
為一個 Large 資料項( large item )；若小於 S 但大於等於 E，則該資料項稱為一個 middle
資料項( middle Item )；若小於 E，則該資料項稱為一個 Small 資料項( small item )。而由
Large 資料項所形成的資料項集合稱為 Ci 的 large 資料項集；middle 資料項集及 small
資料項集亦同。
[定義 2-2]比對差異程度值
給定一個資料項集 P 和一筆交易資料 T，P 和 T 的比對差異程度值算法為 dis( P, T)＝1–
|PT| /|P|)。
在找尋每個聚落的近似常見資料項集時，我們利用該聚落所保存的 large 資料項集當
交易編號 交易資料項集
T1
T2
T3
T4
T5
BDEF
ACDE
BEFG
CFG
ABDEG
6用一種聚落間可以存在交集的分群法，或是對本方法找出來的近似常見資料項集進行整
合重組，並在計算候選樣式的容錯支持度時到對整個交易資料集做檢查。進一步提供可
有效率進行候選樣式的容錯支持度計算之資料結構，亦是我們未來再繼續探討的重點。
2.3最近常見樣式變動偵測
2.3.1 背景與研究動機
由於資料流中不斷的有新進的資料產生，若在每個時間點都對龐大的資料執行探勘
的工作，必須耗費相當大的工夫；尤其當資料項集變化不大時，在每個時間點所探勘出
來的資料項集會常類似。例如從網路事件所形成的資料流中，常見的資料項集多仍為常
見資料項集，非常見資料項集也多為非常見資料項集；較為值得注意的是當有非常見資
料項集變為常見資料項集，或有常見資料項集變為非常見資料項集時，表示可能有異常
的狀況發生。因此若能得知在一段期間內，常見資料項集是否有顯著的變化，便能依據
變化得知是否有任何異常狀況發生，以決定採取何種適當行為。
運用滑動視窗的概念，可以維護每一時間點新增及過時的交易集，並可以從目前視
窗中探勘出常見資料項集。但若要比較兩個不同期間內有哪些資料項集由常見變為非常
見，或由非常見變為常見，以往的做法必須在每一個時間點探勘出滑動視窗內所有的常
見資料項集，然後比較兩者所探勘出的常見資料項集，才能得知常見資料項集狀態的改
變。這個方法雖然簡單，但當資料樣式種類繁多時，要探勘出所有的常見資料項集不僅
需要相當大的記憶體空間，也需耗費大量的計算成本。因此本研究希望能提出一個更有
效率的方法，降低所需的記憶體與計算成本，並準確地偵測出常見資料項集的變化。
2.3.2 問題定義
此部份關於資料項集的定義、資料流的形態、以及目前交易視窗 CTWt(Current
Transaction Window)的定義皆與 2.1.2 相同，因此在此不再重複。若以時間點 t 做為觀察
交易改變的基準點，則 CTWt 稱為一個基準交易視窗，從 CTWt 中所探勘出來的常見樣
式稱為基準常見樣式，所形成的集合以 SFt 表示。隨著時間目前交易視窗的內容改變，
從中探勘出的常見樣式集合亦會改變，當時間進行至t’ (t’>t)時，從 CTWt’中所探勘出來
的常見樣式集合以 SFt 表示，如何有效率找出(SFt-SFt’)以及(SFt’-SFt) 中的樣式是本研究
的目的，也就是給定一個時間點 t，在任一時間點 t’輸出有哪些樣式從常見變為非常見，
又有哪些樣式從非常見變為常見。
2.3.3樣式狀態改變偵測方法
為避免在每一時間 t’需重新探勘常見樣式，我們令所有出現計數值有變動的樣式稱
為變動樣式，所形成的集合以Ct’表示。我們以 SFt 為基準，結合Ct’中樣式出現次數變
動的資訊，即可得知常見樣式變動的狀況。
若從時間點 t 開始做為觀察樣式狀態改變的基準點，因此 CTWt 為基準交易視窗。
讀入所有在 CTWt 的交易後，利用 fp-growth 演算法與使用者所定義的最小支持度門檻值
Smin 探勘出所有常見樣式，也就是基準常見樣式，並記錄其出現的次數。另外，若只保
留常見樣式之出現次數，後來某些樣式出現時，其在 CTWt 的出現次數未知，將無法判
斷是否可能從非常見變為常見。因此，我們設定一個ε值(0ε<min_sup)，當樣式在 CTWt
的支持度小於最小支持度門檻值 Smin，但大於等於ε值，仍將此樣式及其計數值紀錄下
來；因此在實際上，被記錄下來的樣式為支持度大於等於ε值的樣式。
接下來隨著時間的進行，我們以 fp-tree 的資料結構記錄隨著時間新增或過時的交
易，將資料樣式出現次數的變動資訊紀錄下來。在初始的狀態下，所有資料項集的變動
次數皆為 0。當記錄新增交易時，將此筆交易中所包含的資料項集新增至變動 fp-tree 中，
對應資料項集的次數加 1。當處理過時交易，則將該筆交易中所包含的資料項集同樣加
入變動 fp-tree 中，但將對應資料項集的次數減 1。
當時間繼續進行至t’ (t’>t)，將所有出現次數有變動的樣式稱為變動樣式，所形成的
82.4聚落轉變探勘
2.4.1研究背景與研究動機
資料聚落分析方法常用來對大量的資料進行分群，聚落分析將相近的資料分在同一
聚集，由聚落分群結果可以看出資料分佈狀況。資料流中的資料，其所形成的聚落會隨
著新資料的加入而產生不同變化，如聚落擴張、聚落緊縮、聚落被合併、聚落消失、新
聚落出現等。藉由保留先前的聚落資訊與目前聚落作比對，偵測出聚落的轉變情況為本
研究的重點。
本研究方法主要分成三部分，第一部分是屬於離線（off-line）作業，第二、第三部
分是屬於線上（on-line）處理。第一部份是利用 K-means 演算法，先對初始資料進行聚
落分析，並儲存聚落分析結果，用來隨後觀測聚落變化。由於每個聚落包含了多筆資料，
且每筆資料由多維屬性資訊所構成，因此將每筆資料的完整資訊均儲存下來是非常耗費
空間的，如何在不耗費太多空間的情況下儲存資料的資訊，並能保留聚落中資料點的特
性是很重要的。我們採用一個聚落特徵向量來儲存聚落中資料點資訊，特徵向量中的各
欄位分別儲存聚落中各個資料點在各維度的總和、各維度的平方總和、聚落標準差、時
間郵戳總和(Time stamp sum)、時間郵戳平方總和、聚落半徑等。第二部分是進行 on-line
的分群演算法，根據新進的資料，找適合的聚落加入，若不滿足聚落加入的條件則新增
聚落，並刪除一個聚落或合併兩中心距離最近的聚落。第三部分是聚落變化偵測的部
分，觀察聚落是否有出現外部變化及內部變化等不同聚落變化情形。偵測到聚落變化
時，將偵測到的變化以精簡語意表示，並將目前偵測到發生變化的時間點之聚落資訊儲
存起來，當作後續用來比對聚落變化的基準。
2.4.2問題定義與相關名詞定義
令資料流是由多維度資料的所形成的集合，每一單位的時間至多輸入一筆多維度資
料，每一筆資料 包含 K 個維度，加入聚落的時間為 Ti，以 表示。
令陣列 DS 儲存聚落中所有資料各個維度的總和(Data Sum)、陣列 DSS 儲存各個維
度的平方和(Data Square Sum )、SD 為聚落標準差(Standard Deviation)、TS 為時間郵戳總
和(Time Stamp Sum)、TSS 為時間郵戳平方和(Time Stamp Square Sum)、R 為聚落半徑，
則一個聚落特徵向量 CFV＝(DS, DSS, SD, TS, TSS, R)。每一個聚落特徵向量用鏈結串
列串接起來，新的資料加入只要更新該聚落特徵向量的各個欄位資訊即可，適合用來處
理資料流問題，並能保留聚落重要的資訊。
令 K 為資料維度個數， 為第 i 維度的資料平方和， 為第 i 維度的資料總和，n
為該聚落的資料筆數。則聚落標準差定義為每一個維度的資料平方和乘以聚落中的資
料數減資料總和的平方之加總，再除上資料筆數平方後開根號，數學式子為
。
令 DSi 為第 i 維度的屬性值總合，聚落的半徑為 r，聚落中的資料筆數為 n，則聚落
半徑定義為聚落中與聚落中心最遠的一筆資料距離:
。
聚落變化情況可分成以下幾種
(1) 聚落擴張變化:
隨著時間，資料慢慢加入聚落，聚落會發生擴張的情形。對於同一個聚落，令’為
該聚落目前的聚落標準差，為其在基準比對時間點的聚落標準差。給定一個聚落擴
張的門檻值 εe，當目前時間與基準比對時間的聚落標準差比值大於 εe 時，即
10
會先計算兩兩聚落中心的距離，儲存在二維陣列中。挑選進行合併的兩個聚落時是找聚
落中心最近的兩個聚落進行合併。聚落合併後，會將原先兩個聚落之聚落特徵向量的各
個欄位分別進行加總，形成另一個新聚落，給予一個新的聚落編號，被合併的兩個聚落
則刪除之。
2.4.4聚落變化偵測
聚落的變化可以分成外部變化及內部變化兩大類，外部變化包含：聚落消失、聚落
被合併、新聚落出現等。而內部變化有聚落擴張或聚落緊縮等。本節將分別說明如何偵
測外部變化與內部變化。
(一)外部改變
在偵測外部變化時，使用聚落編號陣列來儲存前一個時間點聚落特徵向量的聚落編
號，並用來與目前時間點的聚落情形作比對，進而偵測出聚落新增、聚落消失或聚落合
併等變化。聚落新增必有聚落刪除或聚落合併，因此在偵測聚落新增後，會根據前後時
間點聚落編號比對到的個數，來判別接下來進行聚落刪除偵測或是聚落合併偵測。當比
對到相同的編號個數為 K-1 時，則偵測到聚落消失變化。當比對到相同的編號個數為
K-2 時，則偵測到聚落合併變化。
<1> 偵測新聚落出現: 新增聚落為了減少插入時間，會儲存在聚落特徵向量的最前面，
當前一個時間點的聚落編號陣列與目前時間點的第一個編號比對不相同時，則目前時間
點的第一個聚落為新增聚落。
<2> 偵測聚落消失: 將前一個時間點及目前時間點的聚落編號陣列由小到大排序，在依
序作比對，當比對到與目前時間點的聚落編號不相同時，則前一個時間點沒比對到的聚
落編號為消失的聚落。
<3> 偵測聚落合併: 將前一個時間點及目前時間點的聚落編號陣列由小到大排序，在依
序作比對，比對不到的兩個聚落編號即為合併的兩個聚落，且此兩聚落點數和為另一個
新增聚落的點數。
(二)內部改變
在偵測內部變化時，會將上一次重大變化儲存的聚落資訊與目前時間點的聚落情形
作比對，若偵測到滿足內部變化的門檻值時，都會將目前的聚落情形儲存起來，當作下
一個時間點用來比對聚落變化的基準。
<1>偵測聚落擴張及緊縮: 首先，先找出仍存在的聚落，若目前聚落標準差與先前聚落
標準差的比值大於聚落擴張門檻值時，則偵測到聚落擴張。若比值小於聚落緊縮門檻值
時，則偵測到聚落緊縮。
<2> 偵測聚落中心移動: 在偵測聚落中心是否移動時，會計算目前的聚落中心與之前該
聚落中心的偏移距離，在與聚落的半徑比較，若中心偏移距離除以聚落半徑大於一個門
檻值時，則偵測到聚落中心移動，否則，則沒有偵測到聚落中心移動。
2.4.5實驗評估
本實驗採用 KDDCUP’99 當作實驗資料集，分別觀察聚落加入門檻值對偵測到聚落
變化個數及聚落變化門檻值對偵測到之變化個數的影響。首先以不同加入聚落的門檻值
來觀察對聚落變化的影響。可以觀察到當聚落加入門檻值低，加入已存在聚落的限制較
高，因此聚落新增、聚落刪除、及聚落合併的變化個數比較多（為了維持固定的聚落個
數，新增聚落時會先刪除或合併聚落，因此刪除聚落及合併聚落的變化也會一起提高），
而聚落擴張與緊縮的變化較少。當聚落加入門檻值提高時，較多資料可加入已存在聚
落，因此越可能發生聚落擴張或緊縮的變化。另一實驗觀察聚落緊縮門檻值至少設為 0.8
與聚落擴張設為 1.2，才觀察得到聚落擴張與緊縮變化發生。隨著門檻值增加，聚落擴
張與緊縮變化個數都有明顯增加，且呈現近似指數成長趨勢。
本研究方法透過聚落特徵向量來儲存在資料流環境下的聚落資訊，藉由漸進式聚落
分析方法，可有效偵測出資料流中聚落的新增、消失、合併、擴張及緊縮等變化。
???????????? 
 
                                                             
???? 96-2221-E-003-018-  
???? ?????????????????? 
?????? 
??????? 
  ??? ??? 
  ??????????? ??? 
??????  Osaka, Japan, May 20-23, 2008. 
???? The 12th Pacific-Asia Conference on Knowledge Discovery and Data Mining (PAKDD 2008) 
??????  Incrementally Mining Recently Repeating Patterns over Data Streams  
 
???????? 
??????????????(The Pacific-Asia Conference on Knowledge Discovery and 
Data Mining (PAKDD 2008))????????????????????????????
????????????????????????????????????????
???? 5? 20?? 23????? Hotel Seagull??? 
??????????????????????????????????????
????? 5? 17????????????????????????????????
????????????????????????????????????????
???????? 
?? PAKDD ??? workshop ????????????? workshop ???????
session ????????????????????????????????? : 
Incrementally Mining Recently Repeating Patterns over Data Streams??????” The First 
International Workshop on Algorithms for Large-Scale Information Processing in Knowledge 
Discovery (ALSIP 2008)????????? session???????? 5? 20??????
?????????????????????????????????????????
????????????????????????????????????????
???????????????????????????????????????
????????????????????????????????????????
????????????????????????????????????????
????????????????????????????????????????
???? PAKDD???????????????????? 28??? sections?114??
???????????????????, ????????????????????
???????????????????? 5? 22?????????? 
