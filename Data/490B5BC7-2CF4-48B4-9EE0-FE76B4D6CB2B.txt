1 
 
 
行政院國家科學委員會專題研究計畫成果報告 
計畫名稱：多處理機資料庫系統之即時查詢排程：理論與實作 
（Real-Time Query Scheduling for Multiprocessor Database Systems: Theories and Implementations） 
計畫編號：NSC 96-2221-E-251-001 
執行期限：計畫自民國96年08月01日起至民國97年07月31日止 
主持人： 吳卓俊       國立屏東商業技術學院資訊工程系 
協同主持人：郭大維    國立台灣大學資訊工程系 
計畫參與人員：徐琮發、蕭博元、蔡宜渼   
國立屏東商業技術學院資訊工程系 
 
一、摘要 
中文摘要： 
查詢執行計畫(query execution plan，
QEP)通常由資料庫系統的查詢最佳化模組
產生，由physical operators(例如join、sort、
table scan等)及其執行順序限制所組成。儘
管已有許多設計良好的查詢最佳化技術被
提出，但卻少有研究探討執行階段如何就
QEP進行排程。尤其在多處理器資料庫系統
上，此一研究議題更少有探討。本計畫主要
在多處理機資料庫架構下探討查詢執行計
畫的排程問題，透過所提出的近似演算法，
使得查詢的處理能獲致效能保證。 
Abstract： 
 A query execution plan (QEP) is usually 
generated by the query optimization module 
of a database system. It consists of a 
collection of physical operators (such as join, 
sort, and table scan, etc.) and a partial order 
among them. While excellent research results 
have been proposed for query optimization, 
little work has been done for the scheduling of 
query execution plans (QEPs) subject to their 
partial order constraints, especially for 
multiprocessor database systems. This project 
mainly focuses on the scheduling of QEPs in  
multiprocessor architectures. Approximation 
algorithms were proposed to provide 
performance guarantee for processing of 
QEPs.  
二、背景、目的與問題定義 
2.1 Background and Objective 
Research on query optimization has 
always been one of the most important 
research topics. Such a research direction has 
been going on for several decades, and many 
excellent works were proposed. Since the 
early 1970’s, researchers in the area of query 
optimization started exploring the derivation 
of optimal query execution plans (QEPs) 
[1,2,3,4]. Various excellent algorithms in the 
optimization of QEPs have been proposed [5, 
6, 7, 8, 9, 10]. While most work on QEPs is 
on the derivation of “optimal” query execution 
plans for queries, little work is done for the 
scheduling of QEPs subject to their partial 
order constraints with run-time resource (e.g., 
processor and/or I/O subsystem usages) 
considerations. In this research, we will 
address this challenging research issue and 
propose scheduling algorithms to provide 
performance guarantee of QEP processing in 
multiprocessor database systems. 
A QEP consists of a collection of 
3 
 
 
Table 1 Notations. 
execution time and the assigned processor of a 
physical operator in PO. Note that the 
execution of a physical operator and each data 
access are non-preemptible. A schedule is said 
being compatible with a QEP if the mappings 
of the schedule are consistent with the partial 
order of the QEP, and the mappings do not 
violate the constraints on the number of 
processors, i.e.,M, and the maximum number 
of data pages that could be simultaneously 
accessed in the I/O subsystem, i.e., D. 
Definition 1 (Schedule Length): The 
schedule length of a QEP under a given 
algorithm A is denoted as SLA 
=
popoi∈
max   {SCPU(poi) + ct(poi)}. 
Definition 2 (Multiprocessor Query 
Execution Plan Scheduling (MQEPS) 
Problem): Given a QEP (PO, ≺, DP, ct, tt, dd, 
M, D), the MQEPS problem is to find a 
compatible schedule such that the schedule 
length is minimized. 
三、文獻探討 
In this section, we summarize traditional 
multiprocessor job scheduling and MQEPS 
problems. 
3.1 Multiprocessor Precedence Constrained 
Scheduling 
For scheduling of general jobs on a 
multiprocessor system with m processors, the 
study to cope with the minimum schedule 
length for a set of independent jobs without 
communication delay began in early 60’s [13]. 
For homogeneous multiprocessor systems, a 
polynomial-time approximation scheme was 
proposed in [14]. As for heterogeneous 
multiprocessor systems, a 2-approximation 
algorithm was proposed in [15]. The QEP 
scheduling problem without the considerations 
of I/O access and real-time timely 
requirements is equivalent to the well-known 
multiprocessor precedence constrained 
scheduling (MPCS) problem, which is to 
schedule a collection of jobs J = {j1, j2,…,jn} 
over m processors with precedence constraints, 
i.e., a partial order on J. When a given partial 
order of jobs is a tree, Hu [16] proposed an 
optimal scheduling algorithm, called critical 
path first (CPF), that assigns the highest 
priority to the job that is at the head of the 
critical path (any tie-breaking is done 
arbitrarily), where the critical path is the 
longest path from a leaf node to the root. 
When a given partial order of jobs is a 
directed acyclic graph (DAG), the MPCS 
problem is strongly NP-hard [17]. 
The best result so far is an approximation 
algorithm, called LIST algorithm, proposed by 
Coffman and Graham [13, 18, 19]. Whenever 
a processor becomes available, the LIST 
5 
 
either lack for consideration on the 
communication delay or there is no partial 
order among physical operators.  
When the communication delay is taken 
into account, QEP scheduling problem 
becomes more difficult. Specifically, 
executing the physical operators concurrently 
could reduce the schedule length for a QEP. 
However, one could not fully utilize the 
processors due to the constraint of the partial 
order on the physical operators. Besides, the 
mapping of two physical operators onto 
different processors could not always derive a 
shorter schedule length due to the 
communication delay between them. Such a 
scheduling problem is shown to be intractable 
[24] for obtaining a schedule with minimized 
schedule length. Only few very restricted 
variants on the input of QEP have 
performance guarantees [11, 12, 25]. 
四、查詢執行計畫排程方法 
In this section, we propose scheduling 
algorithms for the MQEP problem under 
symmetric multiprocessor (SMP) database 
systems. 
For SMP database systems, a scheduling 
algorithm for the MQEP problem, called 
critical-path-based scheduling (CPS) 
algorithm was proposed. The rationale behind 
the design of the CPS algorithm is to overlap 
the I/O activities for data access and the 
executions of physical operators to reduce the 
schedule length. The CPS algorithm generates 
a reading sequence of data pages and a 
schedule for the executions of physical 
operators over multiple identical processors.  
We first assign a unique number to each 
physical operator and data page according to 
the well-known critical path (CP) rule [16]. 
The assigned number of a physical operator or 
a data page is called the ordered number, 
where the assignment of ordered numbers 
could be represented as a function ord : DP 
∪ PO → N. Algorithm 1 is defined for the 
assignments of ordered numbers as follows: 
 
Algorithm 1 Ordered Number Generator (OrdGen) 
 
The OrdGen algorithm first locates the 
physical operator which has the maximum 
height (any tie-breaking could be done 
arbitrary) and assigns a unique ordered 
number to every data page in its relevant set 
and itself in an increasing order. The 
algorithm then locates the physical operator 
with the next largest height. The algorithm 
repeats until every physical operator is 
assigned an ordered number. 
The complexity of the OrdGen algorithm 
is O(n2), where n = |PO| + |DP|. A more 
efficient implementation of the OrdGen 
algorithm could be done by building a heap 
structure according to the heights of physical 
operators and then performing a heapsort on 
the heap. The complexity would become O(n 
log n).  
After the ordered numbers of physical 
operators and data pages are assigned by the 
OrdGen algorithm, a priority driven QEP 
7 
 
DAG-like partial orders. We also show the 
maximum number of processors needed to 
have optimal solutions in processing QEPs. In 
particular, when each query execution plan 
has a tree or a directed acyclic graph structure, 
we show that the approximation ratio of our 
proposed algorithm are 2 and 3, respectively. 
When the proposed algorithm is adopted for 
on-line usages, the competitive ratio of the 
algorithm is proven being 3. 
We also develop some implementation 
for evaluation the performance of the 
proposed algorithm. It was shown that the 
proposed algorithm could even achieve better 
performance for realistic workloads.  
For future research, we will explore QEP 
scheduling with more sophisticated I/O 
activities, especially under the capacity 
constraint for the main memory. We shall also 
extend the results to database systems with 
multiple heterogeneous processors. 
六、計畫成果自評 
本計畫研究方向為查詢執行計畫(query 
execution plan，QEP)在多處理機資料庫系統
中的排程問題。研究內容與原計畫大致相符
(90%)，同時並達成原預期目標，包括近似
演算法之設計、理論之詮導、實驗原型及系
統之建立及人才之培育，並且已獲得具體結
果。本研究成果具學術參考價值，部份成果
已發表於2008 National System Science and 
Engineering Symposium並擬將完整研究成
果投稿於國際學術期刊。未來本專案計畫可
進一步朝其它多處理機架構的資料庫系統
進行排程問題的深入研究。 
 
七、參考文獻 
[1] R. Elmasri and S. B. Navathe. “Fundamentals of 
Database Systems”, Pearson AddisonWesley, 
fourth edition, July 2003. 
[2] H. Garcia-Molina, J. D. Ullman, and J. D.Widom. 
“Database Systems: The Complete Book”, Prentice 
Hall, October 2001.  
[3] M. T. Ozsu and P. Valduriez. “Principles of 
Distributed Database Systems”, Prentice Hall, 
second edition, January 1999. 
[4] A. Silberschatz, H. F. Korth, and S. Sudarshan. 
“Database Systems Concepts”, McGraw-Hill, 
fourth edition, October 2001. 
[5] F. N. Afrati, C. Li, and J. D. Ullman. “Pages 
generating efficient plans for queries using views”, 
In Proceedings of the 2001 ACM SIGMOD 
international conference on Management of data, 
pages 319-330, Santa Barbara, California, May 
2001. 
[6] N. Bruno and S. Chaudhuri. “Exploiting statistics 
on query expressions for optimization”, In 
Proceedings of the 2002 ACM SIGMOD 
international conference on Management of data, 
pages 263-274, June 2002. 
[7] S. Chatterji, S. S. K. Evani, S. Ganguly, and M. D. 
Yemmanuru.”On the complexity of approximate 
query optimization”, In Proceedings of the 
twenty-first ACM SIGMODSIGACT-SIGART 
Symposium on Principles of Database systems, 
pages 282-292, Madison, Wisconsin, 2002. 
[8] M. M. Astrahan, et al. “System R: A relational 
approach to data base management”, ACM 
Transactions on Database Systems (TODS), 
1(2):97-137, June 1976. 
[9] P. Selinger, et al. “Access path selection in a 
relational database management system”, In 
Proceeding of ACM SIGMOD International 
Conference on Management of Data, pages 23-34, 
Boston, MA, June 1979. 
[10] J. Smith and P. Chang. “Optimizing the 
performance of a relational algebra interface”, 
Communications of the ACM (CACM), 
18(10):568-579, October 1975. 
[11] J. Wu, J.-J. Chen, C.-W. Hsueh and T.-W. Kuo, 
“Scheduling of Query Execution plans in 
Symmetric Multiprocessor Database Systems”, the 
18th IEEE International Parallel and Distributed 
Processing Symposium (IPDPS), Santa Fe, New 
Mexico, USA, April 26-30, 2004. 
[12] Jun Wu, Jian-Jia Chen, Chih-Wen Hsueh and 
Tei-Wei Kuo, “Scheduling of Query Execution 
Plans in Distributed-Memory Multiprocessor 
Database Systems”, the 17th IASTED International 
Conference on Parallel and Distributed Computing 
and Systems (PDCS 2005) (EI), Phoenix, AZ, USA, 
November 14-16, 2005. 
[13] R. L. Graham, “Bounds for certain multiprocessing 
anomalies”, Bell System Technical Journal, Vol. 45, 
pp. 1563-1581, 1966. 
[14] D. S. Hochbaum and D. B. Shmoys, ”Using dual 
approximation algorithm for scheduling problems: 
Partical and theoretical results”, Journal of ACM, 
Vol. 34, No. 1, pp. 144-162, January 1987. 
出席國際學術會議心得報告 
                                                             
計畫編號 96-2221-E-251-001 
計畫名稱 多處理機資料庫系統之即時查詢排程:理論與實作 
出國人員姓名 
服務機關及職稱 
吳卓俊，國立屏東商業技術學院 資訊科技系 助理教授 
會議時間地點 2007年 8月 21日至 23日, Daegu Korea 
會議名稱 13th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications (IEEE RTCSA 2007) 
發表論文題目 Lightweight Distributed Topology Control Algorithms for Heterogeneous Wireless Sensor Networks 
 
一、參加會議經過 
本人於 2007/08/20日晚間 10時到達韓國大邱，並於隔日(8/21)上午 8:00抵達會議場
地 Hotel Inter-Burgo完成研討會註冊並領取研討會論文集與相關資料，隨後由大會主席
Naehyuck Chang教授於上午 8:30宣布展開議程。首先開始的是由本國籍著名學者劉炯朗
校長主講的 Keynote，其講題為 It is a Small, Flat World，其後隨即展開為期三天的會議。
與會首日除 Keynote 外，本人亦全程參加後續 Session 的論文發表，由於有同時舉辦的
Session，所以選擇參加了 Memory Management for Embedded Applications、Ubiquitous 
Wireless Networks與 Advanced Embedded System Design Frameworks等三個 Sessions，晚
上並參加大會於大邱鄉校(即孔廟)所舉辦的 Reception。會議第二天則參加Middleware for 
Ubiquitous Computing、Power-Aware Design Methodology與Wireless Sensor Network等三
個Session，以及 Invited Session，本人所發表的論文係在Wireless Sensor Network的Session
中發表，並參加晚間所舉辦的 Banquet及由 Samsung Electronics的 Digital Media Business
的副總裁 Jong-Deok Choi博士與 DGIST的總裁 Kyusuk Chung博士所給予的 Keynote，
主題為 Technology Trends in Consumer Electronics Software。第三日則參加 Uniprocessor 
Scheduling and Analysis與 Scheduling Analysis, and MISC。會議結束後，經由則前往首爾
轉機返回台灣，並攜回會議論文集與議程表一本。 
二、與會心得 
本人曾多次參加 IEEE RTCSA會議，今年度的會議配合相關領域的研究趨勢，將會
議共分為三個主要的 Track：Real-Time Systems、Embedded Systems 與 Ubiquitous 
Computing，顯示此一會議與相關研究社群都不斷地成長。此次會議有來自全球 24 個國
家/地區共計 146篇論文投稿，僅有其中的 42篇被接受為全文論文，另有 21篇被接受為
短篇論文。這些都顯示 RTCSA 不但已經成為亞洲區最重要的即時與嵌入式系統會議，
同時也逐步建立在全球研究社群間的重要性。此次感謝國科會輔助經費，使得論文得以
順利發表，也期望國科會能持續給予年輕學者機會，得以參加國際會議擴展國際視野。
此次與會除聽取寶貴的最新研究成果與產業動態外，更有幸與許多國外學者交流，習得
寶貴的經驗。此次會議對於韓國的研究社群近年的研究成果印象十分深刻，尤其他們在
Lightweight Distributed Topology Control Algorithms for Heterogeneous
Wireless Sensor Networks
Jun Wu
Department of Information Technology
National Pingtung Institute of Commerce
Pingtung, Taiwan 900, ROC
junwu@npic.edu.tw
Han-Chi Lin and Yung-Feng Lu
Dept. of Computer Sci. & Info. Eng.
National Taiwan University
Taipei, Taiwan 106, ROC
{p93001, d93023}@csie.ntu.edu.tw
Abstract
Energy efficiency remains a critical design issue for
wireless sensor networks. How to maintain the network
connectivity and, at the same time, to minimize the en-
ergy consumption is a very challenging problem. Different
from many previous excellent results, we explore the topol-
ogy control problem for heterogeneous wireless sensor net-
works. Our objective is to propose distributed topology con-
trol algorithms, where only local information is kept for all
of the nodes. The experimental results show the strengths of
the proposed algorithms in the average edge length and the
average link length.
1 Introduction
A wireless sensor network (WSN) consists of a poten-
tially large number of wireless sensor nodes. It is adopted
for various purposes, such as environmental measurements
(for the sampling of the humidity and temperature) and
object detection/monitoring in a field under surveillance.
Since most wireless sensor nodes are battery-driven, energy
efficiency becomes one of the most challenging issues in
system designs. Toward this direction, there are a number
of excellent designs and solutions being proposed in the past
decade, such as the minimization of the energy consumption
in network connectivity [2, 8, 11, 15] or data transmission
under different contexts/assumptions [4, 5, 13].
How to assign wireless sensor nodes proper power levels
in data transmissions has been an interesting problem, es-
pecially when the connectivity of nodes in a WSN must be
guaranteed. Such a problem is often referred to as the topol-
ogy control problem. Depending on different assumptions,
some excellent algorithms are proposed to minimize energy
consumption, provided that all of the nodes in the WSN are
directly or indirectly connected [9, 12, 14]. Wattenhofer
and Zollinger [15] proposed a distributed algorithm based
on ranking information between nodes. Santi et al. [12]
and Lloyd et al. [9] analyzed the connectivity problem of
a WSN by a probabilistic approach to derive the minimum
transmission power being used by all nodes. Borbash and
Jennings [1], Li and Hou [6, 7], and Jilei Liu and BaoChun
Li [10] proposed several topology control algorithms based
on graph theories. These work, except Li and Hou [6, 7],
are usually feasible only for homogeneous WSNs, and it
assume that the location information of all nodes is avail-
able. Song et al. [13] also explored the message minimiza-
tion problem for the construction of a WSN.
Previous work on topology control for WSNs can be
classified as either centralized or distributed algorithms.
Centralized algorithms [11] look for optimal solutions or
their approximate solutions are less adaptive to topology
changes. Distributed algorithms [7, 10, 15] are often bet-
ter and more practical in many WSN applications although
their corresponding topology control problems are much
more difficult, and optimal solutions are unlikely to exist
in most cases. Different from many past results in homo-
geneous WSNs, we are interested in the topology control
problem in a heterogeneous WSN. In this paper, where there
are two types of nodes: Sensor and anchor nodes. Sensor
nodes are assumed being less powerful, and anchor nodes
are the nodes with location information. Each node only has
the “local” knowledge of its neighboring nodes. With a set
of available power levels for nodes, our objective is to min-
imize the energy consumption while the entire network is
connected. In this paper, we will propose distributed topol-
ogy control algorithms to achieve the objective. The major
contributions of this work are two folds: (1) We explore the
topology control problem under a more realistic network
model, where a heterogeneous WSN without any direction
and location information of all nodes is considered. The
proposed algorithms can guarantee the network connectiv-
ity, and at the same time, reduce the energy consumption of
13th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications(RTCSA 2007)
0-7695-2975-5/07 $25.00  © 2007
aFigure 1. An anchor node a (labeled with )
and its neighboring sensor nodes (labeled
with ). During the beacon stage, anchor
node a broadcasts beacon messages by us-
ing power levels from low to high.
3.1.1 Beacon Stage
In the beacon stage, each anchor node starts to send beacon
messages to notify their neighboring nodes by using differ-
ent transmission power levels from low to high. The beacon
message includes the anchor id and power level. As shown
in Figure 1, an anchor node a sends beacon messages to its
neighboring sensor nodes by using different power levels
from low to high until reaching to its maximum transmis-
sion range. When a node received the beacon message from
the anchor node a, it then parses the beacon message to ob-
tain a’s information and estimates itself location [3]. Note
that a node could obtain several beacon messages from dif-
ferent anchor nodes. This is helpful for estimating the lo-
cation of node. Nodes will record the id of the nearest an-
chor node for using in the next stage. In this stage, edges
will constructed to connect the anchor node and the sensor
nodes that received the beacon message. When this phase
is finished, each anchor node and its neighboring nodes will
form a tree. Given a WSN V = A
⋃
S, our proposed algo-
rithm for anchor/sensor nodes in the beacon stage is shown
in Algorithm 1.
In Algorithm 1, each node sets its anchor and parent
fields to empty initially at line 2 to 5. Then each anchor
node broadcasts a beacon message with its id and power
level to its neighboring sensor nodes at line 8 to 14 by using
different power levels from lowest to its maximum power
level. When a node receives beacons from different an-
chors, it has the knowledge of different anchors including
anchor id and the power level of radio. If the node’s anchor
is empty or the weight to parent is larger then the weight
to the anchor of beacon, then the node saves the anchor and
power level from beacon message and changes the parent
field to the new anchor from beacon in lines 19- 23. The
time complexity of the Algorithm 1 for an anchor node is
O(1), because the complexity is dominated by the num-
ber of power levels which is a constant value. For a sen-
sor node, the time complexity of the proposed algorithm is
O(|A|), because the worst case is a sensor node received
beacon messages from all anchor nodes with every power
level. Thus, the totally time complexity of the proposed al-
gorithm is O(|S| · |A|). Where |A| and |S| are the number
of anchor nodes and sensor nodes in a given WSN, respec-
tively.
Algorithm 1: TOPOLOGY CONSTRUCTION ALGO-
RITHM (Beacon stage)
Initialization:1
for each node v ∈ V do2
v.anchor ← ø3
v.parent← ø4
end5
6
Anchor node: (For each anchor node a ∈ A)7
for each power level Pi ∈ P do8
create a new beacon message m.9
m.owner ← a10
m.anchor ← a11
m.anchor.powerlevel← Pi12
broadcasts the beacon message m by using Pi13
power level.
end14
15
Sensor node: (For each sensor node s ∈ S)16
When node s receives the beacon message m from an17
anchor node a,
begin18
if s.anchor = ø or19
W (es,m.anchor) < W (es,s.anchor) then
s.anchor ← m.anchor20
s.anchor.powerlevel←21
m.anchor.powerlevel
s.parent← m.owner22
end23
end24
3.1.2 Adjustment Stage
In the second stage (i.e., adjustment stage), the constructed
edges will be adjusted to reduce energy consumptions. The
edge will be replaced by another, if the new edge can
use lower power level to maintain the network connectiv-
ity. Sensor nodes broadcast an information message to its
neighboring nodes. The broadcasted information also con-
tains owner and anchor id. Once a node received the infor-
mation from its neighboring nodes, it executes the adjust-
13th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications(RTCSA 2007)
0-7695-2975-5/07 $25.00  © 2007
Algorithm 2: TOPOLOGY CONSTRUCTION ALGO-
RITHM (Adjustment stage )
Message Broadcasting:1
for each node s ∈ S do2
if s.anchor = ø then3
for each power level P si ∈ P s do4
create a new information message m.5
m.owner ← s6
m.anchor ← s.anchor7
m.anchor.powerlevel← P si8
broadcasts the message m by using P si9
power level.
10
Sensor node: for each sensor node u ∈ S11
case 1: When u receives the information message m12
from a node s ∈ S
begin13
if u.anchor = ∅ then14
u.anchor ← m.anchor15
u.parent← m.owner16
broadcasts an information message then17
return.
if u.anchor = m.anchor and18
W (eu,m.owner) < W (eu,u.parent) and
m.anchor.powerlevel <
u.anchor.powerlevel then
u.parent← m.owner.19
if u.anchor = m.anchor then20
m.anchor is a neighboring anchor of21
u.anchor, it also be saved as a part of
local topology.
end22
case 2: When u does not receives any information23
message
begin24
send local topology to its parent in a25
child-to-parent fashion until reach an anchor
node.
end26
27
sa
sb
s1 s2 ...
sm
sm-1
Figure 4. The anomaly for topology construc-
tion.
the original path (i.e., esa,sb ). This anomaly is possible for
a sparse WSN, but fortunately most WSN applications have
large amount of sensor nodes. Thus we do not consider this
anomaly in the paper.
3.2 Reconfiguration
Due to the limitation of battery energy for sensor nodes,
the constructed edges will not always available for transfer-
ring data or messages. In other words, the connectivity of
the entire network has highly unavailability. To maintain
the connectivity of the network, a reconfiguration algorithm
is proposed in Algorithm 3. The proposed algorithm is ex-
plained in the following two cases: nodes adding and nodes
removing.
When a new node u will be added into the network,
node u first broadcasts a message Join Message by call-
ing procedure REQUEST JOIN. When a node v received the
Join Message of the node u, node v will reply the infor-
mation (e.g. node id and anchor id) back to node u. Then
node u chooses a nearest node p as its parent and sends
a message Join To Parent Message to parent node p.
In procedure RECEIVE JOIN MESSAGE, the parent node p
adds node u as its child and does some feasible modifica-
tion about its local topology in procedure ADD NEWNODE.
When the adding of a new node is done, the parent node
p sends the modification to its parent to refresh the local
topology. So that the modification of the local topology be
synchronized parent-by-parent.
Once a node drained its battery energy, the topology
could be disconnected. The time to repair the broken link
of topology should be considered. Because the character-
istics of WSNs, it is not efficient and necessary to monitor
the connectivity of the topology all the time. The time can
be delayed till the routing phase. If a broken link is de-
tected by a node during the routing phase, then the node’s
anchor runs the beacon and adjustment algorithms again to
13th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications(RTCSA 2007)
0-7695-2975-5/07 $25.00  © 2007
NodeDegree. The NodeDegree for a node depends
on how many edges connect to this node. A node with
smaller node degree implies lower interference and awaken
times. The third performance metric is link length, re-
ferred to as LinkLength. The LinkLength means the
maximum power level used by a node to transmitting mes-
sages. The topology with smaller link length implies the
less power level used in average. The formal definition of
the LinkLength LLi of a node ni is defined as the max-
imum power leverl of the edges transmitted from ni, i.e.,
LLi = max∀ei,j∈E
{P (ei,j)}.
Table 1 shows the summary of our experimental results.
Our proposed algorithm outperform others, when there are
2 or 4 anchor nodes. Figure 5 and 6 show the performance
of our proposed algorithms, DRNG, when the number of
nodes in a WSN is 100 to 1000. The average edge length,
as shown in Figure 5(a), decreases as node density increases
by LDTC and DRNG. However, it is increasing dramati-
cally as node density increases by NONE. Further observa-
tion in average edge length, our proposed algorithms out-
performs both NONE and DRNG. In Figure 6(b), the av-
erage link length of LDTC also has the best performance
against DRNG and NONE. In Figure 5(b), the average node
degree of LDTC (2 or 4 anchor nodes) is about 2, while
DRNGs’ are more than 2.3. Moreover, both average max-
imum node degree and largest maximum node degree of
LDTC are also less then DRNG as shown in Figure 5(c).
6 Conclusion
In this paper, the topology control problem of hetero-
geneous wireless sensor networks (WSNs) has been ex-
plored. Lightweight distributed topology control algorithms
are proposed to maintain the network connectivity and, at
the same time, reduced the energy consumptions for hetero-
geneous WSNs. Our proposed algorithms only need local
information kept for all of the anchor/sensor nodes. Differ-
ent from the pervious work, we explore the topology control
problem under a more realistic network model, where a het-
erogeneous WSN without any direction and location infor-
mation of all nodes. Our proposed algorithms can guarantee
the network connectivity. The topology reconfiguration al-
gorithm of heterogeneous WSNs is also proposed, such that
the network topology can be reorganized when some nodes
failed. The experimental results show the strengths of the
proposed algorithms in the average edge length and the av-
erage link length.
References
[1] S. A. Borbash and E. H. Jennings. Distributed topology con-
trol algorithm for multihop wireless networks, 2002.
˅˃
˅ˈ
ˆ˃
ˆˈ
ˇ˃
ˇˈ
ˈ˃
ˈˈ
ˉ˃
˄˃˃ ˅˃˃ ˆ˃˃ ˇ˃˃ ˈ˃˃ ˉ˃˃ ˊ˃˃ ˋ˃˃ ˌ˃˃ ˄˃˃˃
˧̂̇˴˿ʳ́̈̀˵˸̅
˔
̉˸
̅˴
˺˸
ʳ˸
˷˺
˸ʳ
˿˸
́˺
̇˻
˗˥ˡ˚
˅ʳ˴́˶˻̂̅̆
ˇʳ˴́˶˻̂̅̆
(a) Average edge length
˄
˄ˁ˅
˄ˁˇ
˄ˁˉ
˄ˁˋ
˅
˅ˁ˅
˅ˁˇ
˅ˁˉ
˄˃˃ ˅˃˃ ˆ˃˃ ˇ˃˃ ˈ˃˃ ˉ˃˃ ˊ˃˃ ˋ˃˃ ˌ˃˃ ˄˃˃˃
˧̂̇˴˿ʳ́̈̀˵˸̅
˔
̉˸
̅˴
˺˸
ʳ́
̂˷
˸ʳ
˷˸
˺̅
˸˸
˗˥ˡ˚
˅ʳ˴́˶˻̂̅̆
ˇʳ˴́˶˻̂̅̆
(b) Average node degree
ˆˁˊ
ˆˁˊˈ
ˆˁˋ
ˆˁˋˈ
ˆˁˌ
ˆˁˌˈ
ˇ
ˇˁ˃ˈ
ˇˁ˄
ˇˁ˄ˈ
ˇˁ˅
˄˃˃ ˅˃˃ ˆ˃˃ ˇ˃˃ ˈ˃˃ ˉ˃˃ ˊ˃˃ ˋ˃˃ ˌ˃˃ ˄˃˃˃
˧̂̇˴˿ʳ́̈̀˵˸̅
˔
̉˸
̅˴
˺˸
ʳ̀
˴̋
˼̀
̈̀
ʳ́
̂˷
˸ʳ
˷˸
˺̅
˸˸
˗˥ˡ˚
˅ʳ˴́˶˻̂̅̆
ˇʳ˴́˶˻̂̅̆
(c) Average maximum node degree
Figure 5. The average edge length, node de-
gree and maximum node degree for LDTC (2
and 4 anchors) and DRNG.
13th IEEE International Conference on Embedded and Real-Time Computing Systems and Applications(RTCSA 2007)
0-7695-2975-5/07 $25.00  © 2007
