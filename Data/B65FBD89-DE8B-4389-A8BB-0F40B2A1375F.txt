 2
此外，我們也用與 Master 連線之 Slave 的數目多寡來評估 Throughput 的表
現。因為隨著與 Master 連線之 Slave 數目的增加，系統的負荷也將跟著增加。 為
求公平比較， LRR 、LWRR 及 CRR 中 Master 與 Slaves 封包交換的次數皆定為
3，而 LWRR 中所定義的權值則設定為 4，在 CRR 中限制 Master 與 Slave 間封包
交換次數而設定的 Threshold 值則設定為 10。這是因為根據[3]的研究結果顯示當
封包交換次數控制在 3-10 次會有較佳的效能表現，而若封包交換次數達 10 次以
上將導致封包傳送的 delay time 遽增，進而產生 Starvation 現象。此外，模擬所
採用的封包格式是依循 Bluetooth Specification 的定義，分別為 POLL，NULL，
DH1， DH3 及 DH5， 這些封包的負載長度(payload length)分別為 224, 1461 以
及 2712 bits。在此實驗中，每個 Slave 均與 Master 建立連線，封包的大小為 500 
bytes， ON 的時間(Burst time)為兩秒，而 OFF 的時間(Idle time)則隨著 ON/OFF 
ratio 來改變。例如 ON/OFF 比例為 1:2 表示 Burst time 為 2 秒，而 Idle time 為 4
秒，依此類推。模擬時間為兩分鐘。 
因為隨著 OFF 值的增加， 其 Idle time 會變長，Throughput 則會降低，不同
的 ON/OFF 比例在不同的 Polling scheme 作用之下表現亦不同。由圖 1-1 至圖 1-5
可知，當 ON/OFF 比例越懸殊時，CRR 的效能表現較其他 Polling scheme 穩定，
換言之，CRR 受 Idle time 的影響小於其他輪詢方法。這是因為 CRR 獎懲機制所
達到的效果。在獎賞 Slaves 時，持續地服務該 Slaves 的 Packet Bursts，在懲罰
Slaves 時，則盡量避開 POLL-NULL 封包。 
由圖 1-1~圖 1-5 可以看出，PRR 隨著 OFF 值的變大，其 throughput 受到 Idle 
time 的影響最大，LRR 次之，再來是 LWRR 及 ERR。而由圖 1-6~圖 1-14 可以看
出， Master 與 Slave 間封包交換的次數若越大，採用 CRR 時 Master 與 Slave 間
封包交換的次數會因為獎賞而持續增加，所以其受到 Idle time 的影響會較小。
LWRR 在懲罰機制的作用下，效能表現僅次於 ERR。然而因為 CRR 中採用了獎
懲機制使得 Master 與 Slave 之間封包交換的次數會隨著流量變化而變化，因此其
throughput 可以維持在穩定的狀態。於是，在各種 ON/OFF 比值下 CRR 的表現
最為優異。 
1 2 3 4 5 6 7
0.2
0.3
0.4
0.5
0.6
Th
ro
ug
hp
ut
 (M
bp
s)
No.of Slaves
 ON/OFF=1:2
 ON/OFF=1:3
 ON/OFF=1:4
 ON/OFF=1:5
 ON/OFF=1:6
 ON/OFF=1:7
 ON/OFF=1:8
 ON/OFF=1:9
 ON/OFF=1:10
1 2 3 4 5 6 7
0.2
0.3
0.4
0.5
0.6
Th
ro
ug
hp
ut
 (M
bp
s)
No.of Slaves
 ON/OFF=1:2
 ON/OFF=1:3
 ON/OFF=1:4
 ON/OFF=1:5
 ON/OFF=1:6
 ON/OFF=1:7
 ON/OFF=1:8
 ON/OFF=1:9
 ON/OFF=1:10
 
圖 1-1: PRR 之 ON/OFF 比例變化對 Throughput 的影響  圖 1-2: LRR 之 ON/OFF 比例變化對 Throughput 的
影響 
 4
1 2 3 4 5 6 7
0.2
0.3
0.4
0.5
0.6
Th
ro
ug
hp
ut
 (M
bp
s)
No.of Slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
      
1 2 3 4 5 6 7
0.15
0.20
0.25
0.30
0.35
0.40
0.45
0.50
0.55
Th
ro
ug
hp
ut
 (M
bp
s)
No.of Slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
 
圖 1-10: On/Off = 1:6，Slave連線數對Throughput的影響    圖 1-11: On/Off = 1:7，Slave連線數對Throughput
的影響 
1 2 3 4 5 6 7
0.2
0.3
0.4
0.5
Th
ro
ug
hp
ut
 (M
bp
s)
No.of Slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
      
1 2 3 4 5 6 7
0.2
0.3
0.4
Th
ro
ug
hp
ut
 (M
bp
s)
No.of Slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
 
圖 1-12: On/Off = 1:8，Slave連線數對Throughput的影響    圖 1-13: On/Off = 1:9，Slave連線數對Throughput
的影響 
1 2 3 4 5 6 7
0.2
0.3
0.4
Th
ro
ug
hp
ut
 (M
bp
s)
No.of Slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
 
圖 1-14: On/Off = 1:10，Slave 連線數對 Throughput 的影響      
 
 
 
 
 
 
 
 
 6
0 1 2 3 4 5 6
0.4
0.5
0.6
Th
ro
ug
hp
ut
 (M
bp
s)
No.of idle slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
        
0 1 2 3 4 5 6
0.3
0.4
0.5
Th
ro
ug
hp
ut
 (M
bp
s)
No.of idle slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
 
圖 2-3: On/Off = 1:4，Idle Slave 數對 Throughput 的影響   圖 2-4: On/Off = 1:5，Idle Slave 數對 Throughput
的影響 
 
0 1 2 3 4 5 6
0.2
0.3
0.4
0.5
Th
ro
ug
hp
ut
 (M
bp
s)
No.of idle slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
        
0 1 2 3 4 5 6
0.2
0.3
0.4
0.5
Th
ro
ug
hp
ut
 (M
bp
s)
No.of idle slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
 
圖 2-5: On/Off = 1:6，Idle Slave 數對 Throughput 的影響    圖 2-6: On/Off = 1:7，Idle Slave 數對 Throughput
的影響 
 
0 1 2 3 4 5 6
0.2
0.3
0.4
0.5
Th
ro
ug
hp
ut
 (M
bp
s)
No.of idle slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
         
0 1 2 3 4 5 6
0.2
0.3
0.4
Th
ro
ug
hp
ut
 (M
bp
s)
No.of idle slaves
 PRR
 LRR
 ERR
 LWRR
 CRR
 
圖 2-7: On/Off = 1:8，Idle Slave 數對 Throughput 的影響    圖 2-8: On/Off = 1:9，Idle Slave 數對 Throughput
的影響 
 
 8
0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
0.5
1.0
1.5
2.0
2.5
3.0
D
el
ay
 (S
ec
)
Load
 PRR
 LRR
 ERR
 LWRR
 CRR
 
圖 3： 平均 End-to-end Delay 
總結以上三個實驗模擬之結果，證明了 CRR 在不同的 Active slave 數及不同
的 idle slave 數之環境中均能減少不必要的 POLL/NULL 封包所佔用的頻寬，提
高資料封包的傳送及接收率、有效提升 throughput，並且降低封包傳送的點對點
延遲。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
