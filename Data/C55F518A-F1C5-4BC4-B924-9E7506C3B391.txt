 2
法有三種，包括過濾及次取樣法(filtering and subsampling) [7][9][10]、像素平均法(pixel 
averaging) [7]、高階 DCT 係數刪除法(high order DCT coefficients decimation)[7][8][11]。過
濾及次取樣法為一通用方法，通常利用一可在水平及垂直方向進行亮度信號與色彩信號的
濾波法進行處理，然後再對畫面影像進行水平及垂直方向的次取樣，使得畫面解析度變
小。而像素平均法則對每一大小為 m x m 個像素的方塊以一個像素為代表並以該方塊的平
均值做為該代表像素的值，這個方法的優點是很簡單但易造成影像模糊。高階 DCT 係數
刪除法係捨棄高頻的 DCT 係數，因此亦會造成影像的方塊現象，尤其是當大幅降低位元
率時此現象將更嚴重。 
另外，由於畫面解析度的降低，一個縮減後的巨方塊其資料來源與多個縮減前的巨方
塊有關，因此如何整合或運用這些巨方塊的資訊亦是此部份研究須加以解決的問題。其中
可分成移動向量的整合[7][10][12-16]與巨方塊編碼模式[8-9] [12][17]的設定兩方面。在移
動向量的整合方面，整合的方法有隨機(random)挑選法、中間值(mean)挑選法、加權平均
值(weighted average)挑選法、加權中間值(weighted mean)挑選法。在巨方塊編碼模式的設
定方面，一般做法為依據縮減前的巨方塊的編碼模式來決定，最簡單的方式為若縮減前相
關的巨方塊都是以 intra 模式編碼的話，則縮減後的巨方塊亦採 intra 模式編碼，否則便以
inter 模式編碼。 
z 減少每秒畫面數的轉換研究 
減少每秒畫面數的好處為可將節省下來的資料量用於改善或維持後續畫面的視訊品
質，此外，對於僅支援低畫面率(frame rate)的終端系統而言，前置的畫面率轉換處理亦是
必須的。單純每秒畫面數的變更可利用丟棄部份畫面的方式達成，但因為現有的視訊壓縮
標準幾乎都採用預測編碼做法，使得畫面之間的關係並非完全獨立，因此當中間的畫面資
料被丟棄時，會造成後面有參考到丟棄畫面的視訊品質受到影響，主要的問題為如何從被
丟棄畫面中的移動向量資料重建合適的移動向量結果供現有畫面使用。相關的研究有利用
雙線性內插法(bilinear interpolation)來估算移動向量[18]；或是將丟棄畫面內的巨方塊的移
動向量做累加計算，再與對應到現有畫面的巨方塊的移動向量結合而得到最終所使用的移
動向量[7]；也有利用統計巨方塊的活動性(activity)來決定移動向量的結果[19]。 
z 異質型轉換編碼的研究 
異質型視訊轉換編碼除了包含前述研究的議題外，最大的特色為須考慮不同視訊壓縮
標準的轉換問題，這裡面牽涉到位元串的語法與意義會有極大的差異與變化，造成異質型
視訊轉換編碼的複雜度比同質型視訊轉換編碼來得高。相關的研究有 MPEG-2 轉
H.263[19]、MPEG-2 轉 MPEG-4[20]、MPEG-1 轉 MPEG-4[21]等。 
 
三、 研究方法 
   所謂視訊轉換編碼（video transcoding）是指將視訊資料串(bitstream)從某種格式(format)
轉換為另一種格式。其中格式的種類包含位元率(bitrate)、時間解析度(temporal resolution)
或稱畫面更新速率(frame rate)、畫面解析度(spatial resolution)、編碼方法(coding algorithm)
等種類。一般視訊轉換編碼器的分類方式有好幾種，有依轉換編碼架構內是否使用一反饋
迴路而分成 open-loop 及 closed-loop 兩大類，有依轉換前與轉換後所採取的壓縮標準是否
相同而分成同質型(homogeneous)與異質型(heterogeneous)兩種，也有依轉換處理的信號領
 4
本計畫第一年的目的為設計一個高效率 MPEG-2 同質型視訊轉換編碼器，具備位元率
調整、畫面解析度調整、畫面更新速率調整等基本功能。所提方法以 DCT-domain 視訊轉
換編碼為主，圖 1 為所提 DCT-based 視訊轉換編碼器的系統架構圖，主要由三大部份組成，
分別為：DCT-domain partial decoder、DCT-based transcoding functions 及 DCT-domain 
re-encoder。其中 DCT-MC(DCT motion compensation)模組係利用原有輸入資料串所提供的
移動向量資訊及 DCT-domain 參考畫面，來進行 DCT-domain 的移動補償計算。另外，當
降低畫面解析度的設定被啟動時，MVCR(Motion Vector Composition and Refinement) 模組
會計算出畫面解析度縮減後最佳的移動向量，其目的是為了減輕漂移誤差的影響以改善視
訊品質。而當畫面更新速率的調整被啟動時，WDFS(Window-based Dynamic Frame Skipping)
模組會依據畫面活動性(activity)的高低來進行畫面的跳格處理，以符合畫面更新速率的要
求。AFRC(Activity-based Frame Rate Control)模組基於畫面活動性高低，並利用位元率-失
真模型來估算每個畫面最合適的位元數配置量。至於何種功能模組於何種狀況下需被啟
動，則由模式選擇(Mode Selection)模組來決定。接下來，將分別說明畫面解析度調降、畫
面更新速率調降轉換編碼所採取之做法。 
 
 
z 畫面解析度調降(Spatial Resolution Reduction)轉換編碼 
我們以 2:1為主要的畫面縮小比例，在此情形下，原有畫面內的 4個巨方塊(macroblock)
經由 DCT-domain 縮小模組 downsizer 處理後，會對應到縮小畫面的一個巨方塊，同時原
輸入資料串的移動向量相關資訊亦會再加以利用以產生縮減後的巨方塊的移動向量。因縮
小模組是於 DCT domain 進行處理，且移動向量係利用再生的方式產生，所提做法將使得
計算複雜度大幅降低。 
 
【圖 2】Motion vector composition and refinement 方法 (a)縮減前原始的 MB
及 MV 型態 (b)代表移動向量選取結果 (c)主移動向量計算結果 
 
 MVCR(Motion Vector Composition and refinement)模組 
由於巨方塊的編碼模式差異，原巨方塊內移動向量的個數可能為零也可能有好幾
個，如圖 2(a)所示。主移動向量計算的目的是將縮小前原巨方塊內的移動向量最後以
一個主移動向量來表示，如圖 2(d)所示。我們採取 Kim 等人所提做法[23]，對移動向
量進行 2 個步驟的處理，分別為代表移動向量選取、主移動向量計算。 
1. 代表移動向量選取 
代表移動向量的選取方式是先計算巨方塊與每一個候選移動向量所對應的參
考巨方塊的預測誤差，以預測誤差最小的候選移動向量做為該巨方塊的代表移動
向量。最小預測誤差的候選移動向量其計算公式如下： 
 6
【圖 3】WDFS 方法流程圖 
 
我們採用 WDFS 方法，其流程如圖 3 所示。將所有畫面分組成許多視窗，利用預
先算出的畫面活動性為每一視窗設定一臨界值 WT ， WT 的計算方式如下： { })(minarg kOT
ST
W TffT
Tk
−=
∈
 
其中 TS 代表所有後選臨界值， Tf 為目標畫面更新速率， )( kO Tf 表示當臨界值為 kT 時視
窗的目前的畫面更新速率。若一個畫面其累積的活動性小於 WT ，則該畫面將被跳過，
並將該畫面累積的活動性與下一畫面的活動性相加，否則，該畫面即會進行編碼處理。 
同時因為跳格的關係，可能使得原先的移動向量資訊變成無效，必須利用方法推
導出可用之移動向量資訊。可採取 Hwang 所提之雙線性內插法(bilinear interpolation) 
[18]進行預測，預測方式為從現在畫面至前一未跳格畫面間所有畫面的移動向量拿來計
算得到一內插的移動向量，然後再做修正。 
 
 AFRC(Activity-based Frame Rate Control) 模組 
在編碼位元數的配置上，以一個畫面為控制單位。在完成畫面跳格處理之後，非
跳過的畫面其初始的目標位元配置量將依畫面活動性的比例來計算，如下式： 
iN
j
j
iT
i B
X
XR ⋅=
∑−
=
1
0
 
其中 TiR 代表視窗內第 i 個非跳過畫面的目標位元配置量，N 表示視窗內的畫面數， iB
為已分配給視窗的目標位元配置量。同時為避免發生編解碼緩衝區的上溢及下溢的情
形，我們透過檢查編解碼緩衝區的使用狀況來限制目標位元配置量，計算公式如下： 
New window 
Frame 
acitivity 
Calculate Tw 
Accumulated 
activity > Tw 
Target 
frame 
rate 
Non-skipped 
frame 
Skipped 
frame
Yes 
Yes 
No 
No 
 8
Conf. Image Processing, vol. 1, 2000, pp. 972–975. 
[11] K.-H. Tan and M. Ganbari, “Layered image coding using the DCT pyramid,” IEEE Trans. 
Image Process., vol. 4, no. 4, pp. 512–516, Apr. 1995. 
[12] B. Shen, I. K. Sethi, and B. Vasudev, “Adaptive motion-vector resampling for compressed 
video down scaling,” IEEE Trans. Circuits Syst. Video Technol., vol. 9, no. 6, pp. 929–936, 
Sep. 1999. 
[13] G. Shen, B. Zeng, Y.-Q. Zhang, and M. L. Liou, “Transcoder with arbitrarily resizing 
capability,” in Proc. IEEE Int. Symp. Circuits and Systems (ISCAS) 2001, vol. 5, Sydney, 
NSW, Australia, May 2001, pp. 25–28. 
[14] J. Xin, M.-T. Sun, K. Chun, and B. S. Choi, “Motion re-estimation for HDTV to SDTV 
transcoding,” in Proc. IEEE Int. Symp. Circuits and Systems (ISCAS) 2002, vol. 4, Geneva, 
Switzerland, May 2002, pp. 715–718. 
[15] M.-J. Chen, M.-C. Chu, and C.-W. Pan, “Efficient motion-estimation algorithm for reduced 
frame-rate video transcoder,” IEEE Trans. Circuits Syst. Video Technol., vol. 12, no. 4, pp. 
269–275, Apr. 2002. 
[16] K. Takahashi, K. Satoh, T. Suzuki, and Y. Yagasaki, “Motion vector synthesis algorithm for 
MPEG2-to-MPEG4 transcoder,” in , Proc. SPIE—Visual Communications and Image 
Processing, vol. 4310, San Jose, CA, Jan. 2001, pp. 872–882. 
[17] N. Bjork and C. Christopoulos, “Transcoder architecture for video coding,” IEEE Trans. 
Consumer Electron., vol. 44, pp. 88–98, Feb. 1998. 
[18] J.-N. Hwang and T.-D. Wu, “Motion vector re-estimation and dynamic frame-skipping for 
video transcoding,” in Conf. Rec. 32nd Asilomar Conf. Signals, System & Computer, vol. 2, 
1998, pp. 1606–1610. 
[19] M.-J. Chen, M.-C. Chu, and C.-W. Pan, “Efficient motion-estimation algorithm for reduced 
frame-rate video transcoder,” IEEE Trans. Circuits Syst. Video Technol., vol. 12, no. 4, pp. 
269–275, Apr. 2002. 
[20] N. Feamster and S. Wee, “An MPEG-2 to H.263 transcoder,” in SPIE Int. Symp. Voice, 
Video, and Data Communications, Boston, MA, Sep. 1999. 
[21] X.Wang,W. Zheng, and I. Ahmad, “MPEG-2 to MPEG-4 transcoding,” in Proc. Workshop 
and Exhibition on MPEG-4, San Jose, CA, Jun. 18–20, 2001, pp. 83–86. 
[22] K. D. Seo and J. K. Kim, “Fast motion vector refinement for MPEG-1 toMPEG-4 
transcoding with spatial down-sampling in DCT domain,” IEEE Int. Conf. Image Processing, 
vol. 1, pp. 469-472, 2001. 
[23] J.-W. Kim, G.-R. Kwon, N.-H. Kim, and S.-J. Ko, “Efficient video transcoding techniques 
for QoS-based home gateway service,” IEEE Trans. Consumer Electron., vol. 52, pp. 
129–137, Feb. 2006. 
[24] ISO/IEC Draft International Standard 13818-2, Information Technology-Generic Coding of 
Moving Pictures and Associated Audio-Part 2: Video, 1994. 
[25] ISO/IEC-JTC1/SC29/WG11, “Test Model 5,” 1993. 
