 2 
結案報告大綱 
結案報告大綱 ..........................................................2 
摘要 ..................................................................3 
Abstract ..............................................................4 
第一章 第一期計畫目的與成果回顧 .......................................5 
1.1 計畫目的回顧 ..................................................5 
第二章 無繞路表之結構化疊層網路繞路協定 ............................7 
2.1 節點加入協定描述 (Join Protocol) ............................7 
2.2 檔案搜尋協定描述 (Search Protocol) .........................11 
2.3   節點離開協定描述 (Leave Protocol) ..........................16 
2.4   實驗環境 ...................................................23 
2.5   模擬結果 ...................................................23 
第三章 最佳化複份位置策略 .........................................25 
3.1   最佳化複份位置策略 .........................................25 
3.2   模擬結果 ...................................................29 
第四章    成果自評 ...................................................31 
 
 
 
 
 
 
 
 
 
 
 4 
Abstract 
  Peer-to-Peer (P2P) overlay networks has been maturely developed on wired 
networks, but implementing this on ad hoc network is a new issue. In this paper, we 
proposed a structured overlay network system for ad hoc networks. This system uses the 
concept of k-cube and collocates with the Optimized Link State Routing Protocol (OLSR) 
to provide table-less routing for achieving minimum flooding. We also proposed node 
join/leave protocol to make the overlay network system more reliable. Except a reliable 
overlay network protocol, the location of duplicates is also an important factor for system 
efficiency. So we designed the Integer Linear Programming mathematical model to 
obtain the optimal location where the duplicates should be set in the overlay. This allows 
all peer nodes in the P2P network to find needed duplicates through minimum hop count. 
Finally, we evaluate the system performance of our approach using the NS2 simulator. 
The experimental results show that the proposed table-less file searching protocol has less 
searching packets than flooding schemes. Moreover, through the optimized location of 
duplicates strategy, we can ensure that each peer node can access the needed duplicates 
via minimum hop count path.  
 
 
 
 
 
 
 
Keywords：P2P、Overlay Network、k-cube、Integer Linear Programming、OLSR、
Duplicate
 6 
而我們完成之第二年的工作項目為： 
z 於隨意網路建立以 user profile 為基礎之Content Distribution 與複份策略 
z 於隨意網路建立結構化疊層網路對於群播(multicast)之Forwarding演算法與 
理論分析 
z 於隨意網路建立電腦模擬平台(Event Driven Simulation)以驗證理論結果 
z 撰寫研究報告與資料整理 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 8 
告知超節點欲加入層疊網路系統，超節點會給這個新節點 101這組 binary 
id，這麼做只是為了分配 binary id的動作有規範可循，且盡量使得超節點之 binary 
id為 000。至於代管機制則會詳細描述在『節點離開協定』中，而分配 binary id
的作用將會在『檔案搜尋協定』中作詳細的介紹，接下來我們會舉一個例子來說
明，當一個實體網路節點 A要加入疊層網路時的流程。 
 
範例一 (疊層網路系統維度不需擴大)： 
 假設現在疊層網路架構已經有 6個節點，架構如圖 2- 1所示： 
 
圖 2- 1  6個節點的疊層網路系統 
 現在有一實體網路節點 A想要加入疊層網路系統，一開始 A會以 flooding的方
式發送 JRQ給超節點 S，如圖 2- 2所示。 
JRQ
JRQ
JRQ
JRQ
A
S
 
圖 2- 2  A發送 JRQ給超節點 S 
 10
範例二 (疊層網路系統維度需擴大)： 
 假設現在疊層網路架構已經有 8個節點，架構如圖 2- 5所示： 
 
圖 2- 5  8個節點的疊層網路系統 
 當底層網路有節點要加入疊層網路系統，並發送 JRQ給超節點 000後，超節點
發現疊層網路系統節點將超過 3維，需要增加維度來容納更多的節點，故超節點會
先回覆 JCF給新加入節點，再進行擴維的動作，而節點加入與回覆 JCF的動作前
面已經介紹過，現在要介紹超節點如何進行擴維。先以圖 2- 6介紹維度 4並且有
16個節點的疊層網路系統示意圖，而超節點回覆給新加入節點 JCF中包含著一組
binary id為 1000，讓節點加入後系統示意圖為圖 2- 7。 
 
圖 2- 6  維度 4疊層網路示意圖 
 
 12
輯連接之鄰居節點的 binary id只會相差 1個 bit的值，並且疊層網路節點也只能傳
送封包給自己的鄰居節點，除非有代管的機制存在，舉列來說，三維疊層網路節點
010的鄰居節點會有 000、011、110，而 011的鄰居節點則會是 010、001、111，透
過自己與鄰居節點的 binary id只能相差 1個 bit的方式，將可以不需要繞路表，亦
可不需浪費大量的廣播封包即可搜尋到目的端節點。至於新加入之節點要如何取得
binary id的動作說明在『節點加入協定』已經描述過了，接著我們會直接舉範例來
說明三維 cube的檔案搜尋協定，在檔案搜尋協定中每個節點都可以廣播搜尋封包，
並不像在有些結構化疊層網路的作法，還需要將詢問封包先繞送給超節點，再由超
節點作廣播的動作，如此可省下由來源節點(Source Node)繞送到超節點的封包與時
間。 
範例： 
 先使用三維 cube的架構來介紹如何發送檔案搜尋封包，假設 Source Node的
binary id為 011，且疊層網路的節點有 8個，如圖 2- 9所示： 
 
圖 2- 9  3維 cube的疊層網路系統 
 每個節點會有 3個鄰居(Neighbor)，其互相都只能差一個 bit，一開始 Source Node 
(011)會廣播給自己的 Neighbor，與 Source Node (011)相差一個 bit的三個鄰居節點
分別是 001、010、111，如圖 2- 10所示： 
 14
010
111
110
011
001 101
100000
Source
 
圖 2- 11 由節點 001與 111廣播給 000與 101、110 
   而000、101與110的節點收到來自001與111的封包後，繼續與Source Node的binary 
id 011作XOR運算，這邊要注意的是當節點收到廣播封包時，都是與最初的Source 
Node的binary id作XOR運算，而不是跟傳送過來的節點作XOR運算，而000、101與
110收到後的動作如下： 
011
           XOR） 101
110  
 可以發現只有101中最右邊沒有1，所以只有101會繼續做廣播的動作。因為1的
位置在第2位，因此101只會對binary id 10x的節點作廣播的動作，且只能對相差1bit
的鄰居節點作廣播，而101的鄰居有001、100和111，裡面只有100沒有收到過廣播封
包，且也符合10x的要求，所以101只對100作廣播動作。如圖 2- 12所示： 
 
圖 2- 12 由節點 101廣播給 100 
 16
 
圖 2- 14  100的 flooding tree 
透過 flooding tree我們可以更容易了解節點廣播的流程，同時也證明了本系統
在每一次檔案搜尋的動作中，每個節點只會收到一次廣播封包。而當疊層網路節點
變多時，維度相對的也會變大，此時也就需要較多的 bit 數來表示疊層網路節點的
binary id，但檔案搜尋的流程與方法都和三維的一樣，以此類推。 
 
2.3 節點離開協定描述 (Leave Protocol) 
 定義 A為要離開疊層網路系統的節點，節點離開協定過程包含下面二個階段： 
i. 向鄰居與超節點請求代管。首先 A會發送離開請求(Leave Request) LRQ給自
己的鄰居節點與超節點，在 LRQ裡會包含 A的代管請求，而代管請求則是
在告知 A的鄰居節點，在 A離開後要幫忙 A在 Flooding Tree裡所扮演的角
色與工作，在之後會舉例說明 Flooding Tree與代管的機制。 
ii. 鄰居節點接受代管，並更新自己的狀態表。而當自己的鄰居節點與超節點收
到 A所發的 LRQ後，會接受 A的代管請求，之後超節點將會回傳離開確認
(Leave Confirm)LCF給 A，而鄰居節點與超節點則是會更新自己的狀態表。 
iii. 『特例』：我們一般都會將超節點設定為最初的節點，以三維 cube架構來看
就是 000，常見的疊層網路系統都會假設超節點不會有離開的情況發生，這
是因為超節點該執行的動作與運算比一般節點要多，如果離開系統必然會衍
生出許多問題，但本系統中超節點也是有機會離開疊層網路系統，當超節點
 18
 
圖 2- 16 節點 100替 110代管示意圖 
我們可以從 100的 flooding tree看到， 100少了 110幫忙繞送廣播封包後，100就
必需幫 110代送封包給 111，這個代送的動作就是前面所提到的『代管』。如圖 2- 17
所示，100的狀態表也會改變：  
圖 
2- 17 節點 100的狀態表 
 同理可得鄰居節點 010、111的 flooding tree與狀態表，如圖 2- 18與圖 2- 19
所示： 
 20
路徑回傳 LCF給 A，並會如圖 2- 21所示，更新自己的狀態表，最後的系統架構會
變成如圖 2- 22所示。 
 
圖 2- 20 超節點 S回傳 LCF給 A 
 
圖 2- 21 超節點 000更新自己的狀態表 
 
圖 2- 22  110離開後的系統架構 
範例二： 
 當超節點 000要離開系統時，如圖 2- 23所示，超節點 000利用『檔案搜尋協
定』來廣播 LRQ，讓每個疊層網路節點知道該更新超節點的 binary id，比較不同的
是 000會先挑選鄰居節點的其中一個，來代替自己成為超節點，並繼承超節點該作
的事，現在 000挑選出 010成為超節點，故 000所發的 LRQ會包含要 010繼承超
節點的訊息，而其他節點收到 000所發的 LRQ後，則會更新自己的狀態表，將超
節點的部分由 000改為 010，如圖 2- 24所示， 010收到 LRQ後則會回傳 LCF給
 22
 
圖 2- 25  5個節點的疊層網路系統 
 縮維的動作就是將疊層網路系統的 binary id會從 3個 bits轉變成 2個 bits，這
個動作是由超節點利用檔案搜尋協定的方式來廣播封包，而在此封包中會包含著每
個節點新的 binary id，首先超節點 000會將自己的 binary id改成 00，再廣撥封包給
自己的鄰居節點 001與 010，分別給定他們新的 binary id為 01與 10， 
如圖 2- 26所示： 
 
圖 2- 26  超節點 000將改成 00並廣播封包給自己的鄰居節點 
 
 當 01與 10收到從超節點 00廣播的封包後，會先變更自己的 binary id，再與超
節點 00作 XOR的運算，一樣是判斷最右邊的 1在第幾個 bit後判斷是由誰繼續廣
播封包給下一個節點。 
 
圖 2- 27  由 10改變 011的 binary id成 11 
 最後由 10廣播封包給 011，將 011改成 11，縮維的動作也就完成了。 
 
 
 
 24
0
10
20
30
40
50
60
0 2 4 8 16 32
本系統封包量
flooding封包量
12.67倍 6.228倍
2.673倍
1.901倍
1.33倍
 
圖 3 - 1 本系統之繞路協定與 flooding之封包量比較圖 
 
2. 所需時間： 
 如圖 3- 2所示，本系統所需的時間會比 flooding平均多了 14.535ms，這是因為
flooding是以 Shortest path方式傳到 Destination，而本系統的繞路協定是將封包透過
疊層網路的鄰居節點往外傳送，雖然走的不是 Shortest path，卻能夠降低所需的封包
量。 
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
0 2 4 8 16 32
本系統所需時間
flooding所需時間
相差19.45ms 14.11ms
13.73ms
13.82ms
11.57ms
 
圖 3 - 2 本系統之繞路協定與 flooding之所需時間比較圖 
 
 
 
 
 26
 Notation: 
   dnR : =1, if node n needs duplication d; =0, otherwise. 
   N: set of nodes. 
   |N|: amount of nodes. 
   i,jH : routing hop counts between node i and node j by proposed  
      routing scheme in mac layer 
   D: set of duplications 
   nC : the cache of node n 
    
Decision variables: 
    dnY : =1, if node n is used to assign duplication d; =0, otherwise. 
Model:  
   
d d
i,j j i
i N d D j N
min   HC Y R
∈ ∈ ∈
∑∑∑  
    s.t.   
d
n n
d D
Y C     , n
∈
≤ ∀∑  
    
d
n
d n N
n
n N
R  
Y    , d
|N|
∈
∈
≥ ∀
∑∑  
    
d
nY 0/1  , d, n= ∀ ∀   
    
d d
n nR Y 0  , d, n<= ∀ ∀    
 
 接著介紹決定複份位置的已知條件參數： 
 dnR =1代表疊層網路節點 n需要複份 d; =0則代表節點 n不需要複份 d。例
 如節點 n1需要複份 d2，其表示式為 d2n1R =1，若
d2
n1R =0則代表節點 n1不需 要複
份 d2。 
 N代表所有節點的集合。 
 |N|代表節點的總數量。 
 ji,HC 代表節點 i到節點 j所需經過底層的 hop數 (這裡所謂底 層的 hop
 28
是整個網路的一小部分，而其中有 5個疊層網路節點，而中間有星形的三個疊層網
路節點都想下載同一個複份檔案，透過上面介紹的最佳化複份策略，可以推算出複
份要放在中間的疊層網路節點，對於欲下載此複份的節點來說，所需的 hop為最少，
如圖 3- 2所示，我們可算出這 3個節點到複份的 hop count總和為 11，而今天如果
將複份放在右邊的節點，如圖 3- 3所示，節點到複份的 hop count總和則增加為 18，
所以我們在下一章會進行複份位置的實驗，實驗的方式就如同上面提到的，以 hop 
count之總和來判斷最佳化複份策略與隨意擺放複份位置的效能。 
 
圖 3- 1 網路拓樸中有 5個疊層網路節點 
 30
個 node的 cache皆為 3)，由圖 3- 3可以發現，隨機擺放複份位置會比運用最佳化
複份策略所推算出來的位置，所需平均 hop count會是 1.369倍之多，因為最佳化
複份策略會透過運算每個疊層網路節點間的 hop數，來判斷哪個疊層網路節點是最
適當的擺放位置。 
0
1000
2000
3000
4000
5000
0 10 20 30 40 50
最佳複份位置
隨機複份位置
1.319倍
1.45倍
1.316倍
1.352倍
1.404倍
 
圖 3 - 3 複份位置所需 hop數之比較圖 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
RDT08 
  
 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                                97年 9月 1日 
  報    告    人 
  姓          名  
鄭志川  服 務 機 關 
 及   職  稱 
國立中正大學電機工程研
究所博士班 
           時  間  
  會   議 
           地  點   
8/25-8/27 
 
中國 杭州            
 本 會 核 定 
            
 補 助 文 號 
 
 
                    
會  議  名   稱 
(中文)  2008年第三屆通訊與網路國際研討會 
 
(英文) 2008 Third International Conference on Communications and 
Networking 
                    
 發 表 論 文 題 目 
(中文) 基於 LEACH的能量感知無線感測網路繞路協定 
                
(英文) An Improved LEACH-based Power Aware Routing Protocol in 
Wireless Sensor Networks 
RDT08 
  
 
 
 
 
