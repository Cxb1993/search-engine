行政院國家科學委員會專題研究計畫執行進度報告
在無線網路環境上的自我穩定演算法(3/3)
中文摘要：
無線網路自從 1970 年提出至今，在電腦
網路及各個相關領域上的應用已經越來越顯
得重要，實用性也越來越高。因此以無線網
路環境為基礎衍生出的各方面研究都不斷持
續的進行著。因為無線環境中各個裝置的可
移動性，使得網路的架構變得不確定。因此
許多傳統網路上沒有或者簡單的問題在無線
的環境中就變的重要或者困難了。
在這個計畫中，我們除了希望能解決無
線環境所帶來的問題之外，還希望能導入”自
我穩定系統”的概念來解決無線網路中部分
的問題。自我穩定系統是 Dijkstra 在 1974 年
提出的一個概念。自我穩定系統希望能解決
的問題是在一個分散式的環境中，不論任何
的起始狀態，只要經過一段足夠長的有限時
間，系統都能回覆到一個我們期望的穩定狀
態。自我穩定系統解決的問題是在分散式環
境中，而且能處理任何的初始狀態，這樣的
特性很適合無線網路的問題。
第三年的計畫中，我們延續第二年的研
究，針對無線網路中的覆蓋問題提出了一些
改進的方法並且在理論性的探討上，提出一
個在二分圖(bipartite graph)網路上對邊(edge)
著色的分散式演算法。這個討論是第一個具
有自我穩定能力的邊著色分散式演算法。
Abstract：
Sine their emergence in the 1970s, wireless
networks have become increasingly important.
There are many researches on wireless
networks now. For many problems, it is much
harder to solve on wireless networks than on
traditional networks. These problems are
resulted from the mobility of the mobile
devices. So we need to find some new solutions
to solve the new problems resulted from the
new environment.
This project will study the topics about how to
solve the problems resulted from the wireless
environment by using the self-stabilizing
concept. Self-stabilizing algorithm were
proposed by Dijkstra in 1974. These kinds of
algorithms are applied on distributed system.
The systems, within a period of finite time, can
reach the legitimate states by self-stabilizing
algorithms without any outside interfering after
facing any transient fault or starting from any
arbitrary initial state.
The characteristics of the self-stabilizing
algorithm are very suitable in solving the
problems resulted from the wireless
environment. The effect of moving of the
mobile devices can be treated as transient fault
on the system. After the transient fault, the
system can be just treated as being transferred
to another initial state. We believe that the
self-stabilizing concept is useful in solving the
problems we face in the wireless environment.
In the third year of this project, we improve the
results of the last year on sensor networks
coverage problem. We also proposed a
distributed edge-coloring protocol on bipartite
graph, which is the fist self-stabilizing edge-
coloring algorithm.
計畫的緣由及目的
無線網路自從 1970 年提出至今，在電腦
網路及各個相關領域上的應用已經越來越顯
得重要，實用性也越來越高。我們對於無線
網路上基本的一些問題相當感興趣。我們發
也是在模擬中可以探討的問題。我們新改寫
演算法如下：
Listen before timeout
listen(i)=listen(i).tlisten(i).t-1
random(i)=random(i).t + random(i).t-1
If (listen(i) = exist one j : cover.j)
listen(i)=NULL, sleep(i);
Else
If (listen(i) =NULL and random(i) >k) /**(i
not belong to any cover.j)**/
active(i); -- (R0)
Else
If (exist at least one j : listen(i) = [ b,c].j
and no any other [a,b])
active(i); -- (R1)
Else
If (exist at least one j and at least
two k,l: listen(i)=[a,b].j and
[b,c].k and [b,c].l)
active(i); -- (R2)
Else
If (exist three j,k,l:
listen(i)=[b,c].j and [a,b].k and [a,b].l)
active(i); -- (R3)
End else
End else
End else
End else
透過這樣的設計我們可以讓起始周圍的節點
有足夠的時間能向外擴張，也可以透過門檻
值的調整，來控制網路達到一維覆蓋的時
間。因此可以更進一步的降低醒著模式的節
點數。
自我穩定：
在自我穩定的部分，我們提出了第一個
具有自我穩定能力的邊著色分散式演算法。
在我們的演算法中，我們提出了將某一個路
徑(path)鎖住(lock)的概念。所謂邊著色的問
題就是，每個節點對於所連接的邊都不能有
相同的顏色，因此每個節點對自己連結的邊
都紀錄一個顏色，而一個邊連結了兩個節
點，當兩個節點對於相連結的邊所紀錄的顏
色相同時，這個邊就被著上了色。在傳統的
邊著色方法中，會先找出一個兩色相交錯的
路徑，稱為交替鏈結(alternative chain)，若這
個路徑沒有形成迴圈則可以將這兩色對換。
如此直到將所有的顏色著好為止。但是如何
在分散式的環境中，讓邊能夠著上正確的顏
色，是一個不容易的問題，因此我們考慮在
二分圖(bipartite graph)上來考慮我們的邊著
色問題。
Ex:一個交替鏈結(alternative chain)上，只有一
個未著色的邊
首 先 如 果 只 考 慮 在 一 個 交 替 鏈 結
(alternative chain)上，只有一個未著色的邊，
則這個邊將沿著這個交替鏈結傳遞到鏈結的
尾端，然後將顏色改成正確的值。演算法如
下：
S1: C(y).xC(x).y(T(y).x = T(x).y)
 T(y).x = T(x).y + 1 (mod 3);
S2: C(y).xC(x).y (T(x).y = T(y).x + 1
(mod 3))(z: C(z).x = C(x).y = C(x).z)
 Switch(C(z).x, C(y).x); T(z).x = T(x).z +
1 (mod 3);
S3: C(y).xC(x).y(z: C(z).x = C(x).y)
 C(y).x = C(x).y;
但是我們必須考慮在網路上可能同時
有好幾條這種交替鏈結的情形，在這樣的情
況下，兩條交替鏈結可能會互相干擾對方的
顏色修正，因此我們必須讓每條交替鏈結擁
有不同的優先權限(priority)，優先權高的鏈結
可以打破優先權低鏈結的鎖定模式，直到這
個鏈結修正成正確的著色為止。完整的演算
on principles of distributed computing, 2002,
pp. 290-297.
3. R. Cole, K. Ost, and S. Schirra, Edge-coloring
bipartite multigraphs in O(ElogD) time,
Combinatorica, Vol 21, No. 1, 2001, pp. 5-12.
4. E. W. Dijkstra, Self-stabilizing systems in spite
of distributed control, Communications of the
ACM, Vol. 17, 1974, pp. 643-644.
5. S. Dolev, Self-stabilization, MIT Press, 2000.
6. D. Durand, R. Jain, and D. Tseytlin, Parallel
I/O scheduling using randomized, distributed
edge coloring algorithms, Journal of parallel
and distributed computing, Vol. 63, 2003, pp.
611-618.
7. H. N. Gabow and O. Kariv, Algorithms for
edge coloring bipartite graphs, Conference of
the 10th annual ACM symposium on theory of
computing, 1978, pp. 184-192.
8. H. N. Gabow and O. Kariv, Algorithms for
edge coloring bipartite graphs and
multigraphs, SIAM J. Comput, Vol. 11, No. 1,
1982, pp. 117-129.
9. D. Grable and A. Panconesi, Nearly optimal
distributed edge-coloring in O(loglogn)
rounds, RSA, Vol.10, No. 3, 1997, pp.
385-405.
10. S. C. Hsu and S. T. Huang, A self-stabilizing
algorithm for maximal matching, Information
processing letters, Vol 24, 1992, pp. 77-81.
11. S. T. Huang, Leader Election in Uniform
Rings, ACM Trans. on programming language
and systems, Vol. 15, No. 3, 1993, pp.
563-573.
12. R. Jain and J. Werth, Analysis of approximate
algorithms for edge-coloring bipartite graphs,
Information processing letters, Vol. 54, No. 3,
1995, pp. 163-168.
13. M. H. Karaata and K. A. Saleh, A distributed
self-stabilizing algorithm for finding maximum
matching, Computer systems science and
engineering, Vol. 3, 2000, pp. 175-180.
14. D. König, Über graphen und ihre anwendung
auf determinententheorie und mengenlehre,
Math. Ann. Vol. 77, 1916, pp. 453-465.
15. R. Rizzi, Konig’s edge coloring theorem 
without augmenting paths, Journal of graph
theory, Vol. 29, 1998, pp. 87.
16. A. Panconesi and A. Srinivasan, Fast
randomized algorithms for distributed edge
coloring, SIAM J. Comput., Vol. 26, No. 2,
1992, pp. 350-368.
17. A. Schrijver, Bipartite edge coloring in O(m)
time, SIAM J. Comput, Vol 28, 1999, pp.
841-846.
18. Ian F. Akyildiz, Weilian Su, Yogesh
Sankarasubramaniam, and Erdal Cayirci, A
Survey on Sensor Networks, IEEE
Communications Magazine, pages 102-104,
2002
19. F. L. Lewis, Wireless Sensor Networks, Smart
Environments: Technologies, Protocols, and
Applications, 2004
20. Fan Ye, G. Zhong, J. Cheng, Songwu Lu and
Lixia Zhang, PEAS: A Robust Energy
Conserving Protocol for Long-lived Sensor
Networks, Proc. of International Conference
on Distributed Computing Systems, pages
28-37, May 2003
21. J. Carle and D. Simplot-Ryl, Energy-Efficient
Area Monitoring by Sensor Network, IEEE
Computer Magazine, pages 40-46, 2004
22. Himanshu Gupta, Samir R. Das, Quinyi Gu,
Connect Sensor Cover: Self-Organization of
Sensor Networks for Efficient Query Execution,
Proc. of ACM International Symposium on
Mobile Ad Hoc Networking and Computing,
pages 189-200, 2003
23. S. Meguerdichian., F. Koushanfar., M.
Potkonjak, Mani B. Srivastava, Coverage
Problems in Wireless Ad-hoc Sensor Networks,
