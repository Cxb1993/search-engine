 1
行政院國家科學委員會專題研究計畫成果報告 
高隱藏容量及隱藏效能之資料隱藏技術 
Data-hiding Schemes with High Embedding Capacity and Embedding 
Efficiency 
計畫編號：NSC － 98 － 2221 － E － 468 － 010 
執行期限：98 年 8 月 1 日至 99 年 7 月 31 日 
主持人：詹啟祥   
執行機構及單位名稱: 亞洲大學資訊多媒體應用系 
 
[註]:本計畫內容已發表於國際會議:Chi-Shiang Chan and Ching-Yun Chang," Hiding Secret in 
Parity Check Bits by Applying XOR Function," Proceedings of International Conference on 
Cognitive Informatics 2010 (ICCI 2010), pp. 835-839, July. 2010, Beijing, China. 
 
Abstract 
In this project, we propose a hybrid data 
hiding method to embed three secret bits to four 
cover pixels. In the proposed method, a 
Hamming code word consists of three parity 
check bits whose values are identical to three 
secret bits and four data bits whose values are 
derived by performing XOR Function on four 
cover pixels. In order to keep the Hamming code 
word satisfying the condition of (7, 4) Hamming 
Code, at most one cover pixel would be 
modified. If the modified bit is a data bit of the 
code word, it is directly modified, and three 
secret bits can be embedded to the cover pixels 
successfully. However, if the modified bit is a 
parity check bit, namely the secret bit, instead of 
modifying the parity check bit, two cover pixels 
are needed to be modified while the proposed 
method only requires one bit modification by 
adopting the XOR Function. Our hybrid method 
only need to modify one cover pixel by 
adding/subtracting its values to/from one, and 
two resultant bits of XOR Function are able to 
be adjusted to the desired bits. In this way, the 
number of modified pixels can be further 
reduced. The experimental results show that the 
number of pixels that undergo modification 
during the embedding phase is fewer by using 
the proposed method than using the other two 
related method in most cases. 
Keywords: Image hiding, LSB matching revisited, 
Hamming Code 
中文摘要 
在本計畫中，我們結合不同的方法，以
達到將三個位元的秘密資訊藏入四個偽裝的
像素的目的。在所提的方法中，我們先擷取兩
個部分的資料來組成(7,4)漢明碼。(7,4)漢明
碼的三個檢查位元(parity check bits)是由
秘密資訊的三個位元所組成，而(7,4)漢明碼
的資料位元，則是四個偽裝像素經由執行 
“互斥或＂ (XOR) 運算而得。而由兩部分資
料所組成的(7,4)漢明碼，有可能並不符合的
(7,4)漢明碼特性。為了要滿足(7,4)漢明碼的
特性，至少需要修改一個位元(可能是資料位
元或者是位元檢查碼)，才能達成目的。假如
欲修改的位元是資料位元，則我們可以直接修
改。如此，修改資料位元後，秘密資料就會藏
在資料位元內。然而，當需要修改的位元是檢
查位元(parity check bits)時，我們不能直
接修改檢查位元，因為檢查位元即為我們要藏
的秘密資料。因此，我們必須試著修改資料位
元來取代修改檢查位元，而為了滿足(7,4)漢
明碼的特性，則至少需要修改兩個資料位元。
在我們的所提的方法中，由於我們的方法是運
用了“互斥或＂ (XOR) 運算來得到資料位
元，所以我們可以只對其中一個像素做加一或
減一的運算，便可以同時更動到兩個資料位元
的值，如此便可以將秘密資料位元，藏到資料
位元內。由於我們所提方法的特性，在藏入相
同秘密資料位元的情況下，所提的方法可以達
到極少的像素修改量。 
 
關鍵字：秘密資料隱藏技術，最低位元比對重訪
法，漢明碼 
 
1. 計畫緣由及目的 
Digital Steganography is a technique to 
embed secret data into meaningful multimedia 
data, such as videos and images. The most 
P3 is the exclusive-OR (XOR) value of its 
related data bits d2, d3 and d4. 
 3
 
Fig. 1. The data bits and parity check bits 
 
Fig. 1 shows the relationship between four 
data bits and three parity check bits. In Chan and 
Chang’s method [3], the embedding procedure 
first generates three parity check bits according 
to four cover data bits. The generated parity 
check bits are then compared with the three 
secret bits. Fig. 2 shows the three cases that the 
parity check bit(s) is different to the secret bit(s). 
 
Fig. 2. Three different cases 
Fig. 3. An example of Case 1 
 
Chan’s method [2] 
Chan’s method used XOR Function to link 
all bits of cover pixels, and the modification 
only happened when the resultant bits of XOR 
Function are different from secret bits. The XOR 
Function is shown in Formula (1). 
 .
2
)( 1 iii yLSB
yLSByXF 

         (1) 
where yi represents the pixel value at the 
position i and yi-1 is the pixel value at the 
position i-1. The operator   is the exclusive 
OR operator. According to Formula (1), the 
value of XOR Function in each pixel can be 
calculated. By comparing the calculated XOR 
values of each cover pixel with the secret bits, 
those positions with different values can be 
located. After finding all the positions with 
different values, the procedures shown in Fig. 4 
are performed to modify the cover pixels. 
 
 
Fig. 4 The decision tree of the Chan’s method 
When handling Case 2 and Case 3, only one 
data bit has to be modified in order to satisfy the 
property of “Even Parity.” For example, as can 
be seen in Case 2, the parity check bits P1 and P2 
are different to the secret bits. Thus, the data bit 
d1 at the intersection of the two circles 
containing P1 and P2 has to be modified in order 
to keep all circles satisfying the property of 
“Even Parity” rule. After modifying, three secret 
bits are hidden in the parity check of the four 
data bits. For the Case 3, since the values of the 
secret bits are totally different to the generated 
parity check bits, the bit d4 at the intersection of 
the three circles should be modified. It is worth 
pointing out that in order to fix Case 1, d3 and d4 
should be modified instead of modifying P1 
which supposes to be the secret bit that we want 
to embed. An example of handling Case 1 is 
given in Fig. 3. 
 
In Fig.4, i is the first position with different 
values, yi is the original cover pixel value at position i, 
is the modified pixel at position i, and the symbol  iyˆ
)( iyLSB means the complement of the least-significant 
bit of yi. 
 
 
(a) Pepper (b) Lena 
 
 
(c) Plane  
Fig. 10. Three 512512-pixel cover images 
 5
 
The experimental results are shown in Table 1, 
Table 2 and Table 3.  The values in the tables are 
the total number of modified pixels after embedding 
the secret images in the cover images by using 
different methods. 
 
TABLE I.  THE NUMBER OF MODIFIED PIXELS FOR 
EMBEDDING THE SECRET IMAGE PEPPER 
Cover Images 
Method 
Pepper  Lena Plane 
LSB substitution 
method 96209 96443 96079 
Hiding data in 
PCB [3] 80073 79924 80201 
Mielkiainen’s 
method[7] 72066 72337 72198 
Chan’s Method 
in [2] 64279 64342 64064 
The Proposed 
Method 64119 64118 64038 
 
TABLE II.  THE NUMBER OF MODIFIED PIXELS FOR 
EMBEDDING THE SECRET IMAGE LENA 
Cover Images 
Method 
Pepper  Lena Plane 
LSB substitution 
method 96033 95889 96249  
Hiding data in 
PCB [3] 80263 79886 79709  
Mielkiainen’s 
method[7] 71851 72032 72266  
Chan’s Method 
in [2] 63811 64254 64372  
The Proposed 
Method 64119 63982 64058  
TABLE III.  THE NUMBER OF MODIFIED PIXELS FOR 
EMBEDDING THE SECRET IMAGE PLANE 
Cover Images 
Method 
Pepper  Lena Plane 
LSB 
substitution 
method 
95885 96039 95789  
Hiding data in 
PCB [3] 80583 80124 80070  
Mielkiainen’s 
method[7] 71975 72239 72224  
Chan’s 
Method in [2] 64261 63948 64292  
The Proposed 
Method 64061 64049 64121  
 
It is no surprise that the LSB substitution method 
must modify the most pixels in order to embed the 
secret data.  Therefore, the stego-images produced 
by hiding secret bits in the parity check bits of a 
Hamming code word are better than those produced 
by using the LSB substitution method.  
 Since Mielikainen’s method only needs to modify 
one cover pixel for embedding two secret bits to two 
cover pixels, the experimental results of 
Mielikainen’s method are superior to those produced 
by using LSB substitution and Hamming Code 
technique.  However, as described in Section 1 the 
drawback of Mielkiainen’s method is that it restricts 
an embedding unit to a pixel pair.  Chan’s method 
[2] breaks this constraint by using the XOR Function.  
According to the experimental results, Chan’s 
method is highly superior to Mielkiainen’s method.   
The experimental results derived by using our 
method show that the number of modified pixels is 
further reduced compared with the related methods in 
most cases.  Therefore, we conclude that the 
proposed method can produce the best stego image 
quality among the related methods in most cases. 
5. 討論 
In this project, we propose a hybrid data hiding 
method by applying XOR Function to the cover 
pixels and using Hamming Code to embed secret bits.  
The XOR Function values of four cover pixels are 
used to be the four data bits of a Hamming code word. 
Then the three parity check bits are compared with 
three secret bits, and the data bits are adjusted 
accordingly in order to satisfy the “Ever Parity” rule. 
When the bit that should be modified is a parity 
check bit of the code word, Chan and Chang’s 
method modifies two cover pixels to fix the case 
while our hybrid method only needs to manipulate 
one cover pixel, which is achieved by utilizing the 
XOR Function method proposed by Chan. This 
demonstrates the proposed method’s superior point 
on the reduction of total modified pixels.  The 
experimental results show that the number of 
modified pixels in the proposed method is fewer than 
those using the related methods in most cases. 
 
國科會補助專題研究計畫項下出席國際學術會議心
得報告 
                           
日期： 99年 9 月 14 日 
計畫編
號 
NSC   98-2221-E-468-010 
計畫名
稱 
高隱藏容量及隱藏效能之資料隱藏技術 
出國人
員姓名 詹啟祥 
服務機
構及職
稱 
亞洲大學 
資訊多媒體應用學系 
助理教授 
會議時
間 
99年7月7日
至99年7月9
日 
會議地
點 
大陸北京市清華大學 
會議名
稱 
(中文) 第九屆 IEEE 認知訊息學國際會議 
(英文) International Conference on the 9th IEEE 
International Conference on Cognitive Informatics 
發表論
文題目 
(中文)運用“互斥或”函式隱藏秘密資料於位元檢查碼 
(英文) Hiding Secret in Parity Check Bits by 
Applying XOR Function 
 
3. 神經信息學。 
 
而本會議可以說是一個非常盛大的國際學術研討會，會議日程從 2010 年 7
月 7 日至 7 月 9 日。參加會議的人數很多，他們來自各個不同的機構，有學術機
構、研究機構、產業機構、政府機構。從第一天開幕起就十分熱鬧，到最後一天
仍有不少人參與會議的研討，可以說是相當成功的一次國際學術會議。會議的論
文均被收錄在論文集中，而此論文集由 IEEE CS Press 所出版。 
本次會議本人所發表的論文為：Hiding Secret in Parity Check Bits by Applying 
XOR Function。在此論文中，我們結合不同的方法，以達到將三個位元的秘密資
訊藏入四個偽裝的像素的目的。在所提的方法中，我們先擷取兩個部分的資料來
組成(7,4)漢明碼。(7,4)漢明碼的三個檢查位元(parity check bits)是由秘密資訊的三
個位元所組成，而(7,4)漢明碼的資料位元，則是四個偽裝像素經由執行 “互斥
或＂ (XOR) 運算而得。而由兩部分資料所組成的(7,4)漢明碼，有可能並不符合
的(7,4)漢明碼特性。為了要滿足(7,4)漢明碼的特性，至少需要修改一個位元(可
能是資料位元或者是位元檢查碼)，才能達成目的。假如欲修改的位元是資料位
元，則我們可以直接修改。如此，修改資料位元後，秘密資料就會藏在資料位元
內。然而，當需要修改的位元是檢查位元(parity check bits)時，我們不能直接修
改檢查位元，因為檢查位元即為我們要藏的秘密資料。因此，我們必須試著修改
資料位元來取代修改檢查位元，而為了滿足(7,4)漢明碼的特性，則至少需要修改
兩個資料位元。在我們的所提的方法中，由於我們的方法是運用了“互斥或＂ 
(XOR) 運算來得到資料位元，所以我們可以只對其中一個像素做加一或減一的
運算，便可以同時更動到兩個資料位元的值，如此便可以將秘密資料位元，藏到
資料位元內。由於我們所提方法的特性，在藏入相同秘密資料位元的情況下，所
提的方法可以達到極少的像素修改量。 
 
 
三、與會心得 
    從本次的會議，我們可以發現相關領域仍存在許多有趣的研究問題，而這些
問題也將是未來熱門的研究重點。藉由本次會議的交流，我們可以和許多國家的
研究人員，做研究構想的溝通以及資訊的交流，是一個非常難得的經驗。 
 
 攜回資料： Proceedings of the 9th International Conference on the 9th IEEE 
International Conference on Cognitive Informatics (ICCI 2010) 論文集光碟片
一片。 
98年度專題研究計畫研究成果彙整表 
計畫主持人：詹啟祥 計畫編號：98-2221-E-468-010- 
計畫名稱：高隱藏容量及隱藏效能之資料隱藏技術 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 2 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
