行政院國家科學委員會補助專題研究計畫成果報告 
基於MPEG-4 AVC/H.264標準之多視角視訊編解碼 
計畫編號：NSC 95-2218-E-009-208 
執行期限：自2006年12月1日至 2007年7月31日止 
主持人：彭文孝 教授 國立交通大學資訊工程系所 
計畫參與人員：彭文孝 
國立交通大學資訊工程系所 
一、中文摘要 
關鍵詞： H264；MPEG-4 精進視訊壓縮；多視角視頻編解碼 (MVC) 
在本篇報告中，我們提出一個 macroblock-adaptive 的參照視角選擇方式(View Selection 
Scheme)以供 motion_skip_mode 進行不同視角間的動態資訊推導。同時，我們亦透過參考
不同視角之 mb_skip_flag 建立一個 slice-adaptive 的前後文參照模型(Context Template)
藉以改進 mb_skip_flag 之 CABAC 編碼效率。所提出的演算法分別需要在 macroblock 與
slice 層級引入額外的編碼語法(Syntax)。所提出之演算法分別透過 JMVM3.6 進行測試，
並輔以常見的測試條件加以驗證。此外，我們亦在報告中說明結合所提出演算法的效益。
具體而言，比起目前 JMVM 3.6 的方法，macroblock-adaptive 的參照視角選擇方式提供了
0.4~6.13%的編碼位元率改善。slice-adaptive 的前後文參照模型則顯示出 0~3.96%的改
善。結合兩者演算法更可提供 2.7~9.6%的改善。 
 
二、英文摘要 
Keywords：H.264, MPEG-4 AVC, Multi-view Video Coding 
 
In this report, a macroblock-adaptive view selection scheme is proposed to select one of the 
forward and backward reference views for the inference of motion information in the motion skip 
mode. In addition, a slice-adaptive context template is used to improve the CABAC coding of 
mb_skip_flag by constructing a context template across different views. The two schemes 
introduce one additional syntax at the macroblock and the slice levels, respectively. For the 
experiments, both schemes are implemented with JMVM3.6 and validated separately using the 
common testing conditions. In addition, the results of simultaneously combining the two schemes 
are also presented. As compared with JMVM 3.6, the macroblock-adaptive view selection is 
reportedly to have a bit rate saving of 0.4%~6.13% for those views in which the proposed scheme 
takes effect. Similarly, the slice-adaptive context template shows a bit rate saving of 0%~ 3.96%. 
Both schemes are found to have negligible changes in PSNR (<0.1dB) at all testing bit rates. 
Further, combining the two schemes can achieve a bit rate saving of 2.7% to 9.6%. 
 
三、研究成果 
 Fig. 2: Context template of mb_skip_flag. 
The mb_skip_flag indicates whether more syntax elements are presented in the bitstream 
for specifying the coding mode and the prediction residuals of a macroblock. At low bit rates, 
more than 50% of the macroblocks are coded with mb_skip_flag=1 due to superior temporal 
prediction and larger quantization step size. As a result, the mb_skip_flag may consume a 
considerable amount of compressed bits at low bit rates.  
For efficient coding of mb_skip_flag, in H.264/AVC the probability model of mb_skip_flag is 
selected by taking advantage of the spatial correlations in skip information. According to the 
status of mb_skip_flag of the macroblocks to the left and on the top of the current macroblock, 3 
different context probably models are adaptively selected for coding mb_skip_flag, as depicted in 
Fig. 2. Such context template provides excellent coding efficiency in smooth area. However, as 
illustrated by the rectangles marked with “(x)” symbols in Fig. 3, current context template may 
select an inappropriate probability model for the macroblocks in the vicinity of the edges or 
boundaries. Therefore, it may be inefficient for coding video frames with a considerable amount 
of edge/texture information.  
Similar to the idea of motion_skip_flag, one can construct a context template across different 
views to exploit the correlations of motion information in different views to improve the selection 
process of probability model and coding efficiency. In this proposal, a new context template for 
mb_skip_flag is proposed and an extra syntax is added accordingly at the slice header to 
adaptively enable the new context template for the coding of mb_skip_flags. The experimental 
results show that the slice-adaptive context template has an average bit rate saving of 1.07% 
over the current approach. Moreover, it can be implemented in combination with the 
macroblock-adaptive view selection scheme to provide a higher coding gain. More 
implementation details and simulation results are given in Sections 3.2 and 4. 
       (X) (X)  
      (X)   (X) 
  (X) (X)   (X)    
 (X)   (X) (X) (X)    
 (X)    (X) (X) (X)  (X) 
 (X)    (X) (X)   (X) 
 (X) (X)  (X)  (X) (X) (X) (X) 
  (X)  (X)      
 (X)   (X) (X)     
(X)     (X)     
Fig. 3: Inefficiency of the context template of mb_skip_flag. Each rectangle indicates the status of 
mb_skip_flag of a macroblock. The white rectangles denote the macroblocks having 
mb_skip_flag=1 while the gray rectangles stand for the ones with mb_skip_flag=0. The symbol 
“(X)” highlights the macroblocks for which at least one of its neighboring macroblocks has a 
A
B
C
2.2 Adaptive context template for mb_skip_flag 
To improve the selection process of probability model and coding efficiency, a context 
template across different views is proposed for the CABAC coding of mb_skip_flag in MVC. As 
depicted in Fig. 4, instead of referring to the mb_skip_flag of the neighboring macroblocks in the 
same picture, the proposed context template refers to the mb_skip_flag of the corresponding 
macroblocks A, B in the neighboring views. In particular, the proposed context template is only 
applicable for non-anchor pictures. Also, only the two reference views specified by  
non_anchor_ref_l0[current_view][0] and non_anchor_ref_l1[current_view][0] in the SPS are 
selected for reference. Similar to the motion_skip_flag, the locations of the macroblocks A, B in 
the neighboring views can be derived using the syntax elements global_disparity_mb_l0, 
global_disparity_mb_l1 at the slice header of anchor pictures [2]. 
 
Fig. 4: The proposed context template across different views for mb_skip_flag. 
In MVC, there are cases in which the non-anchor pictures of certain views may have only 
forward or backward reference views, i.e., one of the two syntax elements 
num_non_anchor_refs_l0 and num_non_anchor_refs_l0 in the SPS is zero. Thus, the context 
template shown in Fig. 4 needs to be revised so as to accommodate the proposed scheme to 
such a scenario. As presented in Fig. 5, in case that the current picture has only forward or 
backward reference views, the mb_skip_flags of the neighboring macroblocks in the same picture 
and the one of the corresponding macroblock in the view specified by 
non_anchor_ref_l1/l0[current_view][0] will be used for the derivation of ctxIdxInc. Again, the 
locations of the macroblocks A, B, and D in the neighboring views can be obtained using the 
syntax elements global_disparity_mb_l0, global_disparity_mb_l1 at the slice header of 
anchor pictures [2].  
 
 
 
Table 2 formulizes the proposed derivation of ctxIdxInc for mb_skip_flag. Note that only the 
major differences in contrast to H.264/AVC are highlighted. The other conditions are the same as 
in H.264/AVC. 
C
A
B
GDV_l0 
GDV_l1 
Current View
RefView_l0 
RefView_l1 
Table 3. Proposed syntax change at the slice level for adaptive context template 
slice_header_mvc_extension ( ) { C Descriptor 
 first_mb_in_slice 2 ue(v) 
 slice_type 2 ue(v) 
 if ( view_level != 0 && anchor_pic_flag ) {   
     mb_skip_inter_view_CABAC_flag 2 u(1) | ae(v) 
}   
 if ( view_level != 0 && anchor_pic_flag ) {   
 if( slice_type = = P | | slice_type = = B ) {   
  for( compIdx = 0; compIdx < 2; compIdx++ )   
  global_disparity_mb_l0[ compIdx ] 2 se(v) 
 }   
 if(( slice_type = = B ) {   
  for( compIdx = 0; compIdx < 2; compIdx++ )   
  global_disparity_mb_l1[ compIdx ] 2 Se(v) 
 }   
 pic_parameter_set_id 2 Ue(v) 
--- The remaining parts are identical to JMVM ---   
 
mb_skip_inter_view_CABAC_flag equals to 1 indicates that the syntax mb_skip_flag in the 
coded slice uses the proposed context template across different views. 
mb_skip_inter_view_CABAC_flag equals to 0 indicates that the syntax mb_skip_flag is coded 
using the context template in H.264/AVC.  
3 Simulation Results 
Both the proposed schemes are implemented with JMVM 3.6 [2] and validated separately 
using the same testing conditions. The results of combining the two schemes are also presented 
using the two testing sequences Akko&Kayo and Rena. Due to limited time, each testing 
sequence is encoded with only 100 pictures for each view.  
Table 4 ~ Table 10 compare the macroblock-adaptive view selection scheme with the 
approach in JMVM 3.6 in terms of the PSNR gain and bit rate saving. Specifically, the PSNR gain 
is defined as the PSNR of the proposed scheme minus the PSNR of JMVM 3.6, and the bit 
saving (%) is defined as 100% x (A - B)/B, where A is the bit rate of the proposed scheme and B is 
the bit rate of JMVM 3.6. Fig. 6 ~ Fig. 12 further compares the R-D curves of the two schemes. In 
particular, the proposed scheme only takes effect in those views that have both forward and 
backward reference views. For the other views, the performance remains the same as JMVM 3.6. 
Consequentially, we only show the comparisons of those views in which the proposed scheme is 
applied. For complete comparisons, one can look into the EXCEL sheets accompanied with this 
proposal. Similarly, Table 11 ~ Table 18 compare the slice-adaptive context template with the 
Table 4 Performance Evaluation of macroblock-adaptive view selection for “Akko&Kayo” sequence 
Avg. PSNR (dB) Avg. Bitrate (kbps) PSNR Gain Bit saving(%) Basic QP JMVM Prop. JMVM Prop. Prop. Prop. 
37 32.69 32.77 140.81 132.17 0.08 -6.13 
32 35.71 35.76 237.30 224.26 0.05 -5.49 
27 38.77 38.80 449.19 430.45 0.03 -4.17 
22 41.53 41.53 952.14 926.86 0.01 -2.65 
Akko&Kayo 640x480, 30Hz
32
33
34
35
36
37
38
39
40
41
42
0 100 200 300 400 500 600 700 800 900 1000
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM 3.6
JMVM3.6+ Proposed
 
Fig. 6 Rate-Distortion Curves of macroblock-adaptive view selection for “Akko&Kayo” 
 
 
 
 
Table 6 Performance Evaluation of macroblock-adaptive view selection for “Ballroom” sequence 
Avg. PSNR (dB) Avg. Bitrate (kbps) PSNR Gain Bit saving(%) Basic QP JMVM Prop. JMVM Prop. Prop. Prop. 
37 31.83 31.83 203.67 198.52 0.00 -2.53 
32 34.61 34.61 359.38 353.70 0.00 -1.58 
27 37.27 37.27 688.01 683.18 0.00 -0.70 
22 39.47 39.47 1398.52 1392.94 0.00 -0.40 
Ballroom 640x480, 25Hz
31
32
33
34
35
36
37
38
39
40
0 200 400 600 800 1000 1200 1400 1600
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM3.6 JMVM3.6+Proposed
 
Fig. 8 Rate-Distortion Curves of macroblock-adaptive view selection for “Ballroom” 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 8 Performance Evaluation of macroblock-adaptive view selection for “EXIT” sequence 
Avg. PSNR (dB) Avg. Bitrate (kbps) PSNR Gain Bit saving(%) Basic QP JMVM Prop. JMVM Prop. Prop. Prop. 
37 34.50 34.52 94.76 92.08 0.02 -2.84 
32 36.79 36.80 160.36 156.98 0.01 -2.11 
27 38.67 38.67 312.65 309.62 0.00 -0.97 
22 40.10 40.10 766.79 763.48 0.00 -0.43 
Exit 640x480, 25Hz
34
35
36
37
38
39
40
41
0 100 200 300 400 500 600 700 800 900
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM 3.6
JMVM3.6+ Proposed
 
Fig. 10 Rate-Distortion Curves of macroblock-adaptive view selection for “EXIT” 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 10 Performance Evaluation of macroblock-adaptive view selection for “Uli” sequence 
Avg. PSNR (dB) Avg. Bitrate (kbps) PSNR Gain Bit saving(%) Basic QP JMVM Prop. JMVM Prop. Prop. Prop. 
37 31.88 31.88 731.74 728.09 0.00 -0.50 
32 34.57 34.57 1315.13 1310.53 0.00 -0.35 
27 37.00 37.00 2391.49 2386.04 0.00 -0.23 
22 38.89 38.90 4609.94 4604.39 0.00 -0.12 
 
Uli 1024x768, 25Hz
31
32
33
34
35
36
37
38
39
40
700 1200 1700 2200 2700 3200 3700 4200 4700
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM3.6 JMVM3.6+Proposed
 
Fig. 12Rate-Distortion Curves of macroblock-adaptive view selection for “Uli” 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 12 Performance Evaluation of slice-adaptive context template for “Akko&kayo” sequence 
Avg. Bitrate (kbps) Bit saving (%) Basic 
QP 
Avg. PSNR 
(dB) 
 JMVM Prop. Prop. 
37 32.69  140.81 136.20 -3.27  
32 35.71  237.30 232.49 -2.03 
27 38.77  449.19 444.42 -1.06  
22 41.53  952.14  947.88 -0.45 
 
Akko&Kayo 640x480, 30Hz
32
33
34
35
36
37
38
39
40
41
42
0 100 200 300 400 500 600 700 800 900 1000
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM 3.6
JMVM3.6+ Proposed
 
Fig. 14 Rate-Distortion Curves of slice-adaptive context template for “Akko&kayo” 
 
 
 
 
 
 
 
 
 
 
 
 
Table 14 Performance Evaluation of slice-adaptive context template for “Race1” sequence 
Avg. Bitrate (kbps) Bit saving (%) Basic 
QP 
Avg. PSNR 
(dB) 
 JMVM Prop. Prop. 
37 32.05 186.66 184.89 -0.95 
32 34.92 317.73 316.06 -0.53 
27 37.76 636.63 635.06 -0.25 
22 40.45 1356.32 1354.65 -0.12 
Race1 640x480, 30Hz
32
33
34
35
36
37
38
39
40
41
100 200 300 400 500 600 700 800 900 1000 1100
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM3.6
JMVM3.6+Proposed
 
 
Fig. 16 Rate-Distortion Curves of slice-adaptive context template for “Race1” 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 16 Performance Evaluation of slice-adaptive context template for “Ballroom” sequence 
Avg. Bitrate (kbps) Bit saving (%) Basic 
QP 
Avg. PSNR 
(dB) 
 JMVM Prop. Prop. 
37 31.62 212.97 212.30 -0.32 
32 34.45 379.16 378.49 -0.18 
27 37.16 728.30 727.45 -0.12 
22 39.40 1471.14 1470.64 -0.03 
 
Ballroom 640x480, 25Hz
31
32
33
34
35
36
37
38
39
40
0 200 400 600 800 1000 1200 1400 1600
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM3.6 JMVM3.6+Proposed
 
Fig. 18 Rate-Distortion Curves of slice-adaptive context template for “Ballroom” 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 18 Performance Evaluation of slice-adaptive context template for “Uli” sequence 
Avg. Bitrate (kbps) Bit saving (%) Basic 
QP 
Avg. PSNR 
(dB) 
 JMVM Prop. Prop. 
37 31.88 731.74 731.64 -0.01 
32 34.57 1315.13 1315.03 -0.01 
27 37.00 2391.49 2391.39 0.00 
22 38.89 4609.94 4609.82 0.00 
 
Uli 1024x768, 25Hz
31
32
33
34
35
36
37
38
39
700 1200 1700 2200 2700 3200 3700 4200 4700
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM3.6 JMVM3.6+Proposed
 
Fig. 20 Rate-Distortion Curves of slice-adaptive context template for “Uli” 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 20 Performance Evaluation of combining the two schemes for “Rena” sequence 
Avg. PSNR (dB) Avg. Bitrate (kbps) PSNR Gain Bit saving(%) Basic QP JMVM Prop. JMVM Prop. Prop. Prop. 
37 35.63 35.67 82.25 79.47 0.04 -3.38 
32 38.63 38.66 139.08 133.30 0.03 -4.15 
27 41.78 41.81 270.88 260.86 0.03 -3.70 
22 44.65 44.66 578.11 562.51 0.01 -2.70 
 
Rena 640x480, 30Hz
35
36
37
38
39
40
41
42
43
44
45
0 100 200 300 400 500 600 700
avg-bitrate (kbps)
av
g-
P
S
N
R
-Y
 (d
B
)
JMVM 3.6 JMVM3.6+ Proposed
 
Fig. 22 Rate-Distortion Curves of combining the two schemes for “Rena ” 
ISO/IEC JTC1, JVT-W207, San Jose, USA, April 2007. 
 
[3] A. Vetro, P. Pandit, H. Kimata, A. Smolic, “Joint Draft 3.0 on Multiview Video Coding,” ITU-T 
and ISO/IEC JTC1, JVT-W209, San Jose, USA, April 2007. 
 
