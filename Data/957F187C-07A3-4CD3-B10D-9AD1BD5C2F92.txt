 1
行政院國家科學委員會專題研究計畫期末報告 
X架構中試誤型史坦那樹演算法及電子設計自動化的應用(3/3) 
(Part III：單層多對結點連結演算法的研究) 
計畫編號：95-2221-E-305-004-MY3   
執行期限： 97年 8月 1日 至 99年 1月 31日 
主持人：詹景裕 國立台北大學資訊工程系 
共同主持人： 黃元欣 國立台灣科技大學資訊工程系 
計畫參與人員： 李政宏 陳書毅 王建延 
中文摘要 
本計畫以各組線路之特徵排序
以及重新排序的機制提出單層多對
節 點 連 結 問 題 試 誤 型 演 算 法
(s ingle- layer  two-terminal  nets  heu-  
r is t ic  rout ing algori thm)，其所得的
誤差值分別為 0.56與 0.64單位長度
，且其時間複雜度為 O (pN )、空間
複雜度為 O (N )， p 為欲連結節點的
線路數目， N 為自由節點的總數。  
關鍵詞：單層多對節點連結 
ABSTRACT 
In this article, we applied the attributes 
of two-terminal nets and concept of 
reordering in the single-layer two-terminal 
nets routing algorithm to obtain a heuristic 
solution with reasonable sum of lengths of 
nets. The space and time complexities are 
O(N) and O(pN), respectively.  
Keywords：Single-layer two-terminal nets 
routing algorithm  
一、緒論 
雖然單層多對節點連結的問題
(s ingle- layer  two-terminal  nets  
rout ing problem)的概念比多層多對
節點連結的問題來要來的早，不過
這個問題依然還是非常不容易計算
的。在單層多對節點連結的問題中
，最基本的問題就是要能夠判斷出
是否有解。這個問題已經在 1984 年
由 Richards 證 明 出 來 是 屬 於
NP-complete 的問題 [8]，而單層多
對節點連結的問題多年以來都沒有
人 明 確 的 定 義 ， 直 到 1983 年 由
Marek-Sadowska 以及 Trang 兩人清
楚地將單層多對節點連結問題歸類
成六類 [7]。而我們所目前所針對的
問題是對無障礙物 3 的狀態中，對
每一個終端節點對做傳繞連結演算
法。  
關於多對節點連結問題有許多
演算法已被提出  [1]， [3]， [6]，不
過由於多對節點連結問題所牽連的
領域實在是太過於複雜，所以在實
際應用的範圍上，並不會和他們所
提出演算法的理想條件狀態下完全
相同。所以本章提出一個實際應用
並且試用於大部分狀況的演算法，
並且能在 polynomial  t ime 的時間內
迅速解決多對節點連結的問題。  
二、參數與變數表  
因為本計畫結構複雜，所使用之變數符號
之定義，就如表 1所示。 
 3
，將所有線路連結的優先順序排序
完成，然後執行連結演算法。假設
若無法完成線路集中所有線路的連
結，則進入重新排序的步驟。目前
本計畫所提供兩種重新排序的方案
，第一種方案是將本次失敗的線路
的優先權提升到最高，另一種方案
則是保留先前傳繞的進度，將本次
失敗的線路優先權提升到上次失敗
位置的後一格。詳細的演算法內容
如下：  
單層多對節點連結演算法  
Step 1  初始化  
S tep  1 .1  計算長度  
k 由 1 到 p 先將每一組線路
使用 Lee 的最短路徑演算
法計算出最短的路徑節點
紀錄在 v i , j，並將總長度紀
錄在 Len (k )上。  
S tep  1 .2  計算交錯點  
k 由 1 到 p，計算線路 k 與
其他線路的交錯點，並將最
後累積值記錄於 In t (k )。  
Step 1 .3  設定 Pri 值  
將 Pri (k )值設定為 LP，若存
在 某 些 必 須 先 做 連 結 的 線
路時，如 VDD、GND 等，
可將該線路的 Pri 值設為最
優先值 0。  
S tep  2  排序  
利用 radix  sor t 的觀念，依
序把 Len (k )、In t (k )、Pri (k )
當作個位、十位、百位作
排序，其值越小排在前面
。然後依 Quick sor t 求出其
先後順序寫入 Rank (k )值。  
Step 3  依序傳繞  
將 Rank (k )值由 1 到 p 的順
序，依序將順序在前面的
線路所連結的路徑視為障
礙物，做 Lee 的最短路徑
傳繞的演算法，假若線路 k
發生無法完成傳繞，則執
行 Step 4。反之演算法結束
。  
S tep  4  重新調整順序  
Step 4 .1 更新重試的次數  
t imes_retry  =  t imes_retry  +1  
S tep  4 .2  選擇方案  
Case (scheme_sel  =1) :  
Move to the Top 
Funct ion 1  
Case (scheme_sel  =2) :  
Force forward 
 Funct ion 2  
S tep  4 .3  執行 Step 3。  
演算法結束 {單層多對節點連結演
算法 }  
相關副函式描述如下  
Function 1：Move to the Top 
Step 1  若線路 k 傳繞失敗時，當
Pri (k )值不等於 LP 時，演
算法結束。  
S tep  2  將 Pri (k ) 值 減 去
t imes_retry，並將第 k 組
線路移到 ASP的第一個位
置。  
S tep  3  將更新的 ASP 從頭到尾，
重新依序產生 Rank 值。  
Function 2： Force forward 
Step 1  若線路 k 傳繞失敗時，當
Pri (k )值不等於 LP 時，演
 5
小 NN × 的產生時，根據p或 NN × 的密
集度將其分為四個區域，如表4所示。以
Np / 百分比在80%及電路佈局圖的大小為
N=10個做為分區的依據，將其分為區域A
、B、C、D。區域A內的樣本均為組對比
例及電路佈局圖均小的情況；而區域B則是
組對比例低，而電路佈局圖為大的情況； 
區域C則為組對比例高， 而電路佈局圖為
小情況；最後，於區域D中則為組對比例
及電路佈局圖均為大的情況。而後，依四
個區域分別產生隨機樣本以供驗證演算法
之效能。 
而因產生出來的樣本結果可分為三類
：第一類為確切型演算法路徑不存在，則
將該樣本丟棄，在實測的200個樣本中佔有
58個，為29%。第二類則為確切型演算法
路徑存在，但本演算法並無法找出任何一
組路徑，其所佔比例4%。最後一類為本演
算法可以求算法路徑比較，加以評估誤差
值。 
統計學上常用由目標群體(population)
中某個選定的樣本(sample)來做出對目標
群體的推論(esti- mation)，較常見的推論方
式有兩種，一個參數推論 (parameter 
estimation)以及(hypothesis esti- mation)。其
中參數推論係以給定樣本的某些參數，據 
 
表 4 測試總樣本數 
地圖大小  
4
×
4 
6 
× 
6 
8 
× 
8 
1
0 
× 
1
0 
1
2 
× 
1
2 
1
4 
× 
1
4 
組對數
Np /  
 
20% 3 5 3 3 5 3 
40% 5 
1
8 
5 5 
1
8 
5 
60% 3 5 3 3 5 3 
80% 3 5 3 3 5 3 
100% 5 
1
8 
5 5 
1
8 
5 
120% 3 5 3 3 5 3 
此參數的統計分析後，來對目標群體做出
推論。 根據所推論出之結果的不同，又有
兩 種 推 論 結 果 ， 其 為 點 推 論 (point 
estimation)及區間推論(interval estimation)
。其中點推論係指根據給定樣本的參數表
現，對群體行為做出某一固定值的推論，
如推論台灣地區男性平均壽命為72歲，此
即為點推論的結果。而區間推論則為根據
給定樣本的參數表現，對目標群體行為做
出某一固定區間的推論，如推論台灣地區
男性平均結婚為25-29歲，為區間推論。在
做統計學上的推論時，必須針對推論的正
確性提出推論的信心水準 (confidence 
level)，據此信心水準，才能讓觀看統計數
據的人可以了解，在統計時所採用的樣本
數及是否足以代表目標群體的行為表現，
並可了解做此推論時，其與目標群體的實
際表現的差距究竟有多大。因此在統計學
上常用信賴區間的方式，來對推論做出在
某一信心水準下，其與標準值的標準差究
竟有多大。信賴區間的計算方式係依以下
步驟進行。先計算每一個樣本差：
exactheuristici lengthlengthX −= 其中 ni <≤0 ，n為
總樣本數。而後再計算總樣本差為：
nXX
n
i
i∑
−
=
=
1
0
。最後，利用95％的信賴區間公
式： ( )nXCI ×±= 96.1 加以判斷樣本數是否
已進入所要的信賴區間。 
2. 模擬結果分析及說明 
如表5所示，電腦模擬結果在有效樣本134
個隨機產生的電路佈局圖下，其在95%的
信心水準下，其總樣本差分別為0.56與0.64
單 位 長 度 ， 即 信 賴 區 間 為 56.0± 。
025.00195.0 ≤=XCI 。即已電腦模擬進入95
％信賴區間。 
 而在個各種不同的情況下，重新調整
順序方案一與方案二的效果各有優缺。在
少數模擬的結果下，部份方案一繞不出結
果的案例，因為不斷將繞不到的線路，優
先權調升到最前面，造成出現無窮盡的重
新調整順序而未找出結果，使用方案二就
不會不斷重試。而方案二提早定下優先權
，固定的下來的線路就不再加以更新，部
份繞不出結果的案例就是因此而卡住無法
繞出。但最後的模擬結果顯示出，重新調 
 7
兩個範例來輔助說明整個演算法的
過程，讓讀者更清楚了解演算法的
內容。  
1 .單層多對節點演算法範例 (1 )如圖
1(a)所示，在 24×24 的二維矩陣上
面有 13 組線路必須要連結，在本例
中，LP 定義為 1000，重新調整順序
的方法採用方案一。  
表 2 單層多對節點連結演算法範例(1) 
(Move to the Top)中 
(a) ASP初始化後的內容 
Rank k(pair) Pri(k) 
(priority) 
Int(k)(inter- 
section) 
Len(k) 
(length) 
- a 1000 0 3  
- b 1000 0 5  
- c 1000 0 3  
- d 1000 1 13 
- e 1000 1 12 
- f 1000 0 14 
- g 1000 1 3  
- h 1000 1 3  
- i 1000 0 6  
- j 1000 0 11 
- k 1000 0 21 
- l 1000 1 21 
- m 1000 1 22 
(b)  ASP 排序後的內容  
Rank k(pair) Pri(k) 
(priority) 
Int(k)(inter- 
section) 
Len(k) 
(length) 
1  a  1000 0  3  
2  c  1000 0  3  
3  b  1000 0  5  
4  i  1000 0  6  
5  j  1000 0  11 
6  f  1000 0  14 
7  k  1000 0  21 
8  g  1000 1  3  
9  h  1000 1  3  
10 e  1000 1  12 
11 d  1000 1  13 
12 l  1000 1  21 
13 m 1000 1  22 
(c)  ASP 調整後的內容  
Rank k(pair) Pri(k) 
(priority) 
Int(k)(inter- 
section) 
Len(k) 
(length) 
1  d  999 1  13 
2  a  1000 0  3  
3  b  1000 0  5  
4  c  1000 0  3  
5  i  1000 0  6  
6  j  1000 0  11 
7  f  1000 0  14 
8  k  1000 0  21 
9  g  1000 1  3  
10 h  1000 1  3  
11 e  1000 1  12 
12 l  1000 1  21 
13 m 1000 1  22 
 
圖 2 重新調整順序方案一  
(Move to  the Top)示意圖，  將失敗
的線路 d 提至最前面  
 
在執行多對節點連結演算法的
Steps  1-2 之後，其初始化的結果如
圖 1(b)所示，此時 ASP 的內容就如
表 2(a)所示，這時利用 radix  sor t 的
概念將 ASP 重新排序產生 Rank 值
，如表 2(b)所示。根據 Rank 值依序
來作各線路的 Lee 傳繞演算法，當
傳繞演算法執行到線路 d 時發生無
法連結的問題，如圖 1(c)，演算法
將進入到重新調整順序的副函式。
這邊採用的方法是方案一，將失敗
線路的順序提高到最前面，如圖 2
所示。然後重新產生 Rank 值，如表
2(c)。根據重新調整後的順序，根
據新的 Rank 值依序作各線路的 Lee
傳繞演算法，直到所有線路傳繞成
功為止，如圖 1(e)，此時演算法結
束。  
2.單層多對節點演算法範例 (2)  
 9
表 3 單層多對節點連結演算法範例(2) 
(Force forward)中 
(a) 初始化後的 ASP內容 
Rank k(pair) Pri(k) 
(priority) 
Int(k)(inter- 
section) 
Len(k) 
(length) 
-  a  1000 0  2  
-  b  1000 0  3  
-  c  1000 0  9  
-  d  1000 1  9  
-  e  1000 1  11 
-  f  1000 1  8  
-  g  1000 1  10 
-  h  1000 1  15 
-  i  1000 1  18 
-  j  1000 1  2  
-  k  1000 0  10 
-  l  1000 2  4  
-  m 1000 1  2  
(b)  ASP 排序後產生的 Rank 表  
Rank k(pair) Pri(k) 
(priority) 
Int(k)(inter- 
section) 
Len(k) 
(length) 
1  a  1000 0  2  
2  b  1000 0  3  
3  c  1000 0  9  
4  k  1000 0  10 
5  j  1000 1  2  
6  m 1000 1  2  
7  f  1000 1  8  
8  d  1000 1  9  
9  g  1000 1  10 
10 e  1000 1  11 
11 h  1000 1  15 
12 i  1000 1  18 
13 l  1000 2  4  
(c)  第一次調整後的 ASP 表  
Rank k(pair) Pri(k) 
(priority) 
Int(k)(inter- 
section) 
Len(k) 
(length) 
1  e  1  1  11 
2  a  1  0  2  
3  b  1  0  3  
4  c  1  0  9  
5  k  1  0  10 
6  j  1  1  2  
7  m 1 1  2  
8  f  1  1  8  
9  d  1  1  9  
10 g  1  1  10 
11 h  1000 1  15 
12 i  1000 1  18 
13 l  1000 2  4  
(d)  第二次重新調整後的 ASP 表的
內容  
Rank k(pair) Pri(k) 
(priority) 
Int(k)(inter- 
section) 
Len(k) 
(length) 
1 e 1 1 11 
2 a 1 0 2  
3 b 1 0 3  
4 c 1 0 9  
5 k 1 0 10 
6 j 1 1 2  
7 m 1 1 2  
8 f 1 1 8  
9 d 1 1 9  
10 g 1 1 10 
11 i 2 1 18 
12 h 2 1 15 
13 l 1000 2 4  
 
二，以方便計算。在執行多組線路
連結演算法的 Steps  1-2 之後，其初
始化的結果如圖 3(b)所示，此時 ASP   
的內容就如表 3(a)所示，這時利用
radix  sor t的概念將 ASP重新排序產
生 Rank 值將進入到重新調整順序
的副函式，如表 3(b)所示。根據 Rank
值依序來作各線路的 Lee 傳繞演算
法，當傳繞演算法執行到線路 e 時
發生無法連結的問題，如圖 3(c)，
演算法這邊採用的方法是方案二，
將失敗線路的順序提高到上次失敗
的後面一個位置，因為是第一次失
敗，所以還是將線路 e 調整到第一
個位置，如圖 4(a)所示。然後重新
產生 Rank 值，如表 3(c)。產生重新
調整後的順序，根據新的 Rank 值依
序作各線路的 Lee 傳繞演算法。當
第 i 組線路發生傳繞失敗，如圖 3(d)
，演算法會重新進入到重新調整順
