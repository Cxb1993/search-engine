Intelligent Robot Design Based on Dynamical Optimal Training for
Multilayer Interval Type-2 Fuzzy Neural Network ( T2FNN )
多層第二型模糊類神經網路動態學習最佳化
應用於智慧型機器人設計
計畫編號:
執行期間：
計畫主持人：林宗志
計畫參與人員：逢甲大學電子系研究生 郭明仁
前言
近年來智慧性機器人之運動規劃的相關研究與理論，已經被全世
界許多的專家學者所共同研究與發展，機器人的相關成果可以廣泛的
應用在許多領域上。
本計劃提出第二型模糊類神經網路( type-2FNN )並搭配
最佳化的學習法則以處理機器人控制系統之不確定性，以此
網路實現第二型模糊推論系統並推廣至多層類神經網路架
構，其中第二型模糊類神經網路的前部與後部為第二型模糊
集合，並經由型態還原與解模糊化後得到的輸出。在網路分
析上，本計劃首先將第一型模糊類神經網路的特性，如模糊
推論引擎，廣泛的近似能力及參數收斂分析，推廣至多層第
二型模糊類神經網路，並應用於機器人控制系統。由模擬結
果可看出本計劃之效能展現。
Abstract
In recently years, many researches and theorems of motion
planning in autonomous mobile robot are developed, and robotic
systems are successfully applied in a wide variety of industrial
systems and consumer products.
This project proposes a multilayer interval type-2 fuzzy
neural network ( type-2 FNN ) with optimal learning algorithm
to handle the robotic system uncertainty. The type-2 FNN is
inherently a multilayered connection network for realizing
type-2 fuzzy inference using dynamic type-2 fuzzy rules. The
fuzzy neural network (T2FNN) - in which the antecedent or
consequent membership functions are type-2 fuzzy sets. The
conception of a T2FNN was presented by Zadeh as an extension
of the concept of the ordinary fuzzy set. Such sets are fuzzy sets
whose membership grades themselves are type-1 fuzzy sets;
they are very useful in situations where it is difficult to
determine an exact membership function for a fuzzy set. Hence,
they are useful for incorporating uncertainties. Model based
T2FNN represent a transparent fuzzy neural network, where
links and nodes in the network clearly interpret the fuzzy
relations. This project presents a systematic adaptive fuzzy
neural network for multi-input multi-output dynamic systems
modeling of a 3-DOF industrial robot arm based on input/output
measurement. Many researchers have proposed linear
mathematical models to be used as reference models. For
example, a linear second-order time invariant, differential
equation can be used as the reference model for each degree of
freedom of the robot arm. Defining the vector ( )y t to represent
the reference model response and the vector ( )x t to represent
the manipulator response, the joint i of the reference model can
be described by
'' '( ) ( ) ( ) ( )i i i i i ia y t b y t y t r t   (1)
A typical application of adaptive control was to calibrate a
system at startup. In this case, a T2FNN is also designed for a
specific class of dynamic systems. However, the parameters that
characterize the dynamic behavior of a particular system might
not be known in advance.
II. Proposed Type-2 Fuzzy Neural Network Approach
A better way to achieve the benefits of fuzzy logic and
neural network and solve robotic problems is to combine these
two techniques into an integrated system. In this section, an
effective position based approach for complex system control is
presented. This approach, illustrated in Fig. 1 is based on
T2FNN design and optimization methodology.
Then fuzzy rule bases generated to carry out the desired
input or output mapping and fuzzy reasoning is the process of
formatting the mapping from inputs to outputs by utilizing fuzzy
logic. Moreover, the type-reducer in layer III combines all these
output sets in some way and then performs a centroid
calculation on this type-2 fuzzy set.
The IF-THEN rule for T2FNN can be express as follows:
lR : IF 1x is
~
1
l
F and…, and px is
~ l
nF ,
THEN 1y is 1 1[ ]i il rw w , …, and zy is [ ]i ilz rzw w (2)
Where i=1, 2,… ,M is rule number, the
~ i
nF is type-2 fuzzy
sets of antecedent part, and [ ]i ilz rzw w is called weighting set. In
order to simplify this notation to type-1 fuzzy set, we use
center-of-sets type-reduction methods. Finally, the outputs of
the fuzzy neural network in layer IV are defuzzified to retrieve
crisp value for the robotic elements.
B. Optimal learning rate
As mentioned before, the network structure is mainly
defined in the stage of inductive learning. By using the back
propagation method, the error function between desired and
actual data should be minimized:
21 [ ( ) ]
2
pp pe y x d 

1,...,p P (3)
The Gaussian MFs can be stated as:
~
21( ) exp[ ( ) ]
2
i
k k
k iA
k
x m
u x 
  1 2[ , ]m m m (4)
To tune the mean ikm in the ith rule as:
( 1) ( )
p
i i
k k i
k p
e
m p m p
m
  

~
2
*
1
( )1
( ) ( ( ) )[ ( ) ( , ; ) /( ) ]
2
i
k
ipi p i i i ilr lr
k k k k k k kN
Fk
w y
m p y x d x m N m x
u
  

   


(5)
where 1 2[ , ]i i ik k km m m . Similarly, to tune standard deviation and
weighting set , we have
representing the friction term, and  is the input torque applied
to the links.
II.3 Robotic system
It is obvious that the fuzzy-neural approach for robotic
control performs is better than fuzzy control along. For this
reason, robotic manipulation, by definition, implies that parts
and tools will be moved around in space by some kind of
mechanism. This naturally leads to need for representing
positions and orientations of parts, of tools, and of the
mechanism for itself. In this section, we derive the general form
of the transformation that relates the frames attached to
neighboring links. In the Fig. 4, we then concatenate these
individual transformations to solve for the position and
orientation of link n relative to link 0.
Fig. 4 Manipulator kinematics
III Simulation example
The simulations are carried out on a thee-link (RPP) robot in
three dimensional space as shown in Fig. 5(a) and (b). Let 1I be
the moment of inertia of link 1 about axis z, 2m and 3m be
equivalent lumped masses of 2 and 3 respectively, iq be
rational and translational displacements of the links, it be the
external torque of link 1, 2f and 3f be the forces to drive link
2 and 3 respectively as indicated.
The robot parameters used for simulations are as follows:
the mass of links 1, 2 and 3 are respectively 10, 5 and 2 (Kg).
The length of link 1 is 0.5 (m). The performances of the
proposed approach are tested by tracking in task space desired
