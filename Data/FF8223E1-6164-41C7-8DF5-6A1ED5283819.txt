 1
 
一、中英文摘要 
中文摘要 
 為了避免檔案遭受未知電腦病毒的感染，許多藉由公正的編譯器製造者幫助的自動簽
章方法已經被提出[9, 21, 46]。在這些所提出的方法中，對於驗證者而言，編譯器代理者們
的公開金鑰必須被認證，而且驗證者必須將之記錄下來，這是一件麻煩的工作。如果驗證
者只需要紀錄編譯器製造者的公開金鑰，那將會變得非常方便。為此本計畫提出一個匿名
的代理自動簽章法。在新的方法中，因為編譯器的代理伺服器是匿名的，驗證者並不需儲
存任何代理伺服器的公開金鑰，就可以驗證自動代理簽章，並且驗證者事前不只能驗證執
行檔的來源，也可以偵測代理伺服器的不合法行為。我們所提出的方法可以採用於任何的
離散對數型的簽章法，並且提供完善的裁判機制來偵測病毒感染的來源。 
 
英文摘要 
Many (proxy) automatic signature schemes are proposed [9, 21, 46] to guard against the 
(unknown) virus infection with the help of honest compiler makers.  In these proposed schemes, 
the used compiler agents’ public keys should be certificated and maintained by verifiers.  If 
verifiers only keep the compiler makers’ public key, it is more convenient.  So this project 
proposes an anonymous proxy automatic signature scheme with compiler agents.  In the new 
scheme, the compiler agents are anonymous and verifiers do not need to store compiler agents’ 
public key to verify automatic proxy signatures.  Moreover, verifiers can authenticate the source 
of received executable problems and detect compiler agents’ deviation in advance.  Our schemes 
are suitable for adopting any discrete logarithm based signature schemes.  Our scheme has 
provides strong moderator’s judgment to detect of virus infection sources. 
 
關鍵字: Compilers, distributed system, computer virus, digital signature, proxy signature, 
automatic signature, anonymous. 
 
二、前言與研究目的 
在 Hwang 和 Li 的自動代理簽章法中[9]，消費者(或需求者)取得經過伺服器編譯的執
行檔後，消費者(或需求者)必須使用伺服器與編譯器製造者的公開金鑰，方能驗證執行檔的
自動代理簽章，以偵測執行檔是否被電腦病毒所感染修改。站在需求者(或消費者)的角度來
看，需求者(或消費者)本身就必須知道使用哪一家編譯器製造者的編譯器，進行程式原始碼
編譯成執行檔的動作；因此需求者(或消費者)知道編譯器製造者的身份是自然的，自然可以
取得編譯器製造者的公開金鑰，以對編譯器製造者的編譯器所產生的執行檔及自動代理簽
章，做驗證的動作。 
但是伺服器是受編譯器製造者的代理委託的，兩者之間的編譯器代理關係，可能隨代
理關係到期而改變，或是因為其它因素，編譯器製造者更動了伺服器。因此隨著時間演進，
同一個編譯器製造者就會有許多不同時期的代理伺服器，可能是極端複雜，而且知道最清
楚了，應該就是編譯器製造者本身了。反觀需求者與消費者就不甚清楚這些錯綜複雜的代
理關係了。需求者與消費者最確定是可就是誰是編譯器製造者了。因此要求需求者和消費
者必須也知道負責編譯原始碼的伺服器的公開金鑰，才能夠去做自動代理簽章的驗證，這
 3
(1) 驗證者計算 H=h(MW, y, h(bgb mod p)) 
(2) 驗證者用公開金鑰 yO，離散對數型的演算法及 H 去驗證簽章(r, s)的正確性，
若驗證通過則回傳 true, 否則回傳 false。 
演算法 IDAPDW(TTP, UO, yp, b', Proxy-Certificate) 
輸入: 公正的第三方 TTP，UO 的身份，經過認證的公開金鑰 yP，由 UO 提供的秘密值 b'和
Proxy-Certificate 
輸出: 布林數。如果證明代理秘密金鑰 x 和代理公開金鑰的對應關係只會被知道 xP的人所
產生則回傳 true，否則回傳 false。 
(1) TTP 利用函式 VerCertAPDW(UO, Proxy-Certificate)驗證 Proxy-Certificate，若通
過驗證則 TTP 確信代理公開金鑰被原始簽章者所認證。 
(2) TTP 計算 gb' mod p 和 y'= gb'yP mod p 並且檢查 h(gb' mod p)=h(gb mod p)和 y'=y
兩個等式是否都成立，如果等式皆成立則回傳 true，否則回傳 false。 
 在新的匿名代理簽章法中共分為四個階段: 系統初始階段，代理授權階段，代理簽章
的產生與驗證階段和代理簽章者的識別階段。 
[系統初始階段] 
系統的公開參數和函示如同上述，對於每一位使用者 Ui 都有一個身份 IDi，一把私密
金鑰 xi和對應的公開金鑰 yi=gxi。MW則代表授權的委任書。 
[代理授權階段] 
原始簽章者首先執行 AuthAPDW(UO, UP, MW, b, Proxy-Certificate)產生秘密值 b 和
Proxy-Certificate 並送給代理簽章者。代理簽章者收到秘密值 b 和 Proxy-Certificate 後利用函
式 VerAuthAPDW(UO, UP, b', Proxy-Certificate)來做驗證。如果 VerAuthAPDW(UO, UP, b', 
Proxy-Certificate)回傳 true則代理簽章者計算代理私密金鑰 x=xP+b mod q和對應的代理公開
金鑰 y=gx mod p=yPgb mod p。 
[代理簽章的產生與驗證階段] 
首先代理簽章者利用代理秘密金鑰 x 及離散對數型的簽章法 DLS(x, y)(h(m||r||s))對明文
m 產生代理簽章 (R, S)。當驗證者收到 (R, S)和 m 後利用 VerAuthAPDW(UO, UP, b', 
Proxy-Certificate)來驗證 Proxy-Certificate 和代理公開金鑰 y 是否為原始簽章者所合法授權
的，若正確則利用代理公開金鑰及 DLS 使用的簽章驗證演算法來驗證代理簽章(R, S)。 
[代理簽章者的識別階段] 
若匿名的代理簽章(R, S)有任何爭議，原始簽章者必須使用執行 IDAPDW(TTP, UO, yp, b', 
Proxy-Certificate)來揭發匿名代理簽章者的身份並使公正的第三方信任只有知道秘密金鑰
xP的人才可產生代理秘密金鑰 x。 
匿名代理簽章群的群體導向代理簽章法 
基於離散對數且利用委任書(warrant)方法的匿名代理簽章法描述如下: 
此方法一共有四種成員：原始簽章者 UO，一代理簽章群 GP (U1, U2, …, Un)，驗證者 V 和公
正的第三方 TTP。首先說明的是公開系統參數和函數部分。p 和 q 是兩個大質數必且符合
p=2q+1，g 是一個在 Zp*中且 order 為 q 的生成子，h()是一個賀序函數。每一個使用者 Ui
都有一個身份 IDi，一把私密金鑰 xi∈Zp*，合一把經過認證的公開金鑰 yi=gxi mod p。在代理
委任書裡面定義了原始簽章者 UO，原始簽章者經過認證的公開金鑰 yO，合法的授權期限和
必要的代理細節描述。 
 5
公正的第三方可以確認群代理公開金鑰 yGP和個別的代理公開金鑰 yGi是被原始簽
章者所認證。 
(2) 公正第三方計算每一個 yGi'=yig
bi' mod 和 yGP'=Πi=1 nyigΣi=1
n bi' mod 接著在檢查等式
h(bigbi mod p)= h(bi'gbi' mod p)和 yGi=yGi'對於每一個 i=1, 2, …, n，如果兩等式皆成立
則回傳 true，否則回傳 false。 
在新的匿名代理簽章群的群體導向代理簽章法中共分為四個階段: 系統初始階段，代
理授權階段，代理簽章的產生與驗證階段和代理簽章者的識別階段。 
[系統初始階段] 
 如同上述匿名代理簽章的代理簽章法。 
[代理授權階段] 
 原始簽章者 UO 先執行 AuthAMPDW(UO, GP, MW, {b1, b2, …, bn}, Proxy-Certificate)來授權
給一群代理簽章者。當代理簽章者收到Proxy-Certificate和秘密值bi則利用VerAuthAMPDW(UO, 
GP, {b1', b2', …, bn'}, Proxy-Certificate)來驗證 Proxy-Certificate 和秘密值 bi的正確性，若驗證
通過則信任代理簽章的授權並產生個別的代理秘密金鑰 xGi=xi+bi mod q 及對應的代理公開
金鑰 yGi= g
xGi mod p。群代理公開金鑰為 yGP=Πi=1 nyGimod p。 
[代理簽章的產生與驗證階段] 
 藉由在 GP 中所有代理簽章者 Ui 的合作，每個代理簽章者提供他們的代理秘密金鑰 xGi
和一個離散對數型的簽章法 (表示為 DLMS)，對於一個明文 m 產生一組簽章 (R, 
S)=DLMS(Σi=1 nxGi, Σi=1 nyGi)(h(m||r||s))。當驗證者收到對明文 m 的簽章(R, S)，首先利用
VerCertAMPDW(UO, Proxy-Certificate)驗證 Proxy-Certificate 的正確性，接著則利用對應的離散
對數驗證式(表示為 DLMV)和群代理公開金鑰 yGP驗證簽章的正確性 DLMVΠi=1 nyGi((R, S), 
h(m||t||s))。若量個驗證式皆通過則驗證者信任 Proxy-Certificate 及代理簽章(R, S)耶為合法且
為原始簽章者 UO所授權。 
[代理簽章者的識別階段] 
 若簽章(R, S)出現爭議時，原始簽章者必須執行 IDAMPDW(TTP, UO, {y1, y2, …, yn}, GP, 
MW, {b1, b2, …, bn}, Proxy-Certificate)證明代理群 GP就是使用者{U1, U2, …, Un}。 
 
四、研究方法 
本計畫預計採用 Hwang 和 Li [9]方法中的代理簽章法概念，從具有保護代理簽章者身
分的代理簽章法下手，開始設計適用於分散式編譯器的自動匿名代理簽章法。目前具有保
護代理簽章者身分的代理簽章法，計有 Chan [4]與 Shum 和 Wei [36] 兩個可以保護代理簽
章隱私的代理簽章法，因此將從這兩個方法開始進行研究，研究如何保護代理簽章者隱私，
進而設計分散式編譯器的自動匿名代理簽章法，尤其如何在能夠防止代理簽章者否認，又
可以保護代理簽章者身份之間，取得安全考量上的平衡。 
五、結果與討論 
適用於分散式編譯器的自動匿名代理簽章法的敘述 
本方法一共分為五個階段: 系統初始化階段、編譯器製造者-伺服器授權階段、伺服器-需求
者執行階段、消費者驗證階段與仲裁者仲裁階段。 
[系統初始化階段] 
一個具公信力的系統(TTP)建立者負責下列系統參數與函數。 
 7
的簽章(rSR, sSR)，若簽章正確則需求者 uR可以準備傳送執行檔給消費者 uC。 
(7) 需求者 uR對摘要 h((rSR, sSR), E, h(CR), h(P))產生簽章(rRC, sRC)。 
(8) 需求者 uR傳送(MW, h(CR), Y, h(bgb mod p), (rMS, sMS))和((rSR, sSR), (rRC, sRC), uR, E, 
h(P)) 給消費者 uC。 
[消費者驗證階段] 
(1) 當消費者 uC第一次收到執行檔首先先利用需求者的公開金鑰 yR驗證對摘要 h((rSR, 
sSR), E, h(CR), h(P))的簽章(rRC, sRC)。 
(2) 接著利用編譯器製造者 uM的公開金鑰 yM驗證代理憑證(MW, h(CR), Y, h(bgb mod p), 
(rMS, sMS))。 
(3) 利用代理公開金鑰 Y 驗證代理自動簽章(rSR, sSR)。 
當以上驗證通過後，則往後消費者要執行執行檔E前只需執行驗證代理自動簽章即可。 
[仲裁者仲裁階段] 
(1) 消費者 uC 傳送下列資料給仲裁者：代理憑證(MW, h(CR), Y, h(bgb mod p), (rMS, 
sMS))，代理自動簽章(rSR, sSR)，uR，E 和 h(P)。 
(2) 仲裁者首先利用簽章(rMS, sMS)和代理公開金鑰 Y 檢查代理憑證(MW, h(CR), Y, h(bgb 
mod p), (rMS, sMS))，並且利用代理公開金鑰 Y 驗證代理自動簽章(rSR, sSR)。若(rMS, 
sMS)和(rSR, sSR)兩個簽章皆正確，則仲裁者繼續下列步驟。 
(3) 仲裁者向伺服器 uS取得原始碼 P'和簽章(rRS, sRS)。仲裁者利用需求者的公開金鑰驗
證簽章(rRS, sRS)，若(rRS, sRS)通過驗證則可以證明原始碼 P’是由需求者 uR 所撰寫
的，否則仲裁者就執行 IDAPDW(TTP, uM, yS, b, proxy certificate)來撤銷伺服器 uS的匿
名能力並找出真正的伺服器 ID。 
(4) 仲裁者從編譯器製造者 uM取得原始授權的編譯器 CR'。 
(5) 仲裁者使用編譯器 CR'和原始碼 P'產生執行檔 E。 
(6) 仲裁者驗證下列不等式 h(P)≠ h(P')，h(CR)≠ h(CR')，和 h(E)≠ h(E')，其中若有任何
一個不等式成立，則仲裁者執行 IDAPDW(TTP, uM, yS, b, proxy certificate)來撤銷伺服
器 uS的匿名能力並找出伺服器的 ID。 
(7) 若 h(P')= h(P)，則仲裁者一行一行的檢查原始碼來確認需求者撰寫的原始碼中是否
藏有惡意的病毒指令。 
六、參考文獻 
[1] Agnew, G. B., Mullin, R. C. and Vanstone, “Improved Digital Signature Scheme Based on 
Discrete Exponentiation,” Electronics Letters, vol. 26, no. 14, pp. 1024-1025, 1990. 
[2] Boyd, C., “Digital Signature,” Proceedings of Conference on Coding and Cryptography, 
Cirencester, Dec. 1986, pp. 15-17. 
[3] Boyd, C., “Comment: New Digital Signature Scheme Based on Discrete Logarithm,” 
Electronics Letters, vol. 30, no. 6, pp. 480-480, 1994. 
[4] Chan, C.–C., Anonymous (Multi-)Proxy Signature Scheme with Undeniable Agent, Master. 
Thesis, Tamkang University, Taiwan, R.O.C., Jun. 2004. 
[5] ElGamal, T., “A public key cryptosystem and a signature scheme based on discrete 
logarithm,” IEEE Transactions on Information Theory, Vol. 31, No. 4, pp. 469-1985, 1985. 
[6] Harn, L., “New Digital Signature Scheme Based on Discrete Logarithm,” Electronics 
Letters, Vol. 30, No. 5, pp. 396-398, 1994. 
 9
signature-based on discrete logarithms,” Computers & Security, Vol. 22, No. 3, pp. 245-255, 
2003. 
[24] Lyuu, Y.-H. and Wu, M.-L., “Cryptanalysis of and Improvement of the Hwang-Chen 
Multi-Proxy Multi-Signature Schemes,” to appear in Applied Mathematics and 
Computation, 2004. 
[25] MAMBO, M., USUDA, K., and OKAMOTO, E., “Proxy signatures: delegation of the 
power to sign message,” IEICE Transactions Fundamentals, E79-A, No. 9, pp. 1338-1354, 
1996. 
[26] MAMBO, M., USUDA, K., and OKAMOTO, E., “Proxy Signatures for Delegation Signing 
Operation," Proc. 3rd ACM Conference on Computer and Communications Security, 1996, 
pp. 48-57. 
[27] Menezes, A. J., van Oorschot, P. C., and Vanstone, S. A., Handbook of Applied 
Cryptography, New York: CRC Press, 1997. 
[28] National Institute of Standards and Technology (NIST): "A Proposal Federal Information 
Processing Standard for Digital Signature Standard (DSS)," Federal Register, Vol. 56, No. 
169, Aug. 1991, pp. 42980-42982. 
[29] Nyberg, K., “Comment: New Digital Signature Scheme Based on Discrete Logarithm,” 
Electronics Letters, Vol. 30, No. 6, pp. 481-481, 1994. 
[30] Nyberg, K. and Rueppel, R. A., “Message recovery for signature scheme based on the 
discrete logarithm problem,” Design, Codes and Cryptography, Vol. 7, No. 1-2, pp.61-81, 
1996. 
[31] Okamoto, E., “Integrated security system and its application to anti-viral methods,” Proc. 
6th Virus and Security Conf., 1993. 
[32] Piveteau, J. M., “New Signature Scheme with Message Recovery,” Electronics Letters, Vol. 
29, No. 25, pp. 2185-2185, 1993. 
[33] Rabin, M.O., “Digitalized Signatures and Public Key Functions as Intractable as 
Factorization,” MIT/LCS/TR-212, 1979. 
[34] Rivest, R. L., Shamir, A. and Adleman, L., “A Method for Obtaining Digital Signatures and 
Public Key Cryptosystems,” Communications of ACM, Vol. 21, No. 2, pp. 120-126, 1978. 
[35] Schnorr, C. P., “Efficient identification and signatures for smart cards,“ Advances in 
Cryptology-CRYPTO,89, LNCS 435, New York: Springer-Verlag, 1990, pp.239-252. 
[36] Shum, K. and Wei, V. K., “A strong proxy signature scheme with proxy signer privacy 
protection,” Proceedings of the Eleventh IEEE International Workshops on Enabling 
Technologies: Infrastructure for Collaborative Enterprises 2002 (WETICE 02), Pittsburgh, 
PA, 2002, pp. 55–56. 
[37] Stinson, Douglas R., Cryptography: Theory and Practice, New York: CRC Press, 1995. 
[38] Sun, H. –M., “Design of Time-stamped Proxy Signatures with Traceable Receivers,” IEE 
Proceedings Computers and Digital Techniques, Vol.147, and Issue: 6, 2000, pp. 462-466. 
[39] Sun, Hung-Min, “Efficient nonrepudiable threshold proxy signature scheme with known 
signers,” Computer Communications, Vol. 22, No. 8, p 717-722, 1999. 
[40] Sun, Hung-Min, “On Proxy (Multi-) Signature Schemes”, 2000 International Computer 
