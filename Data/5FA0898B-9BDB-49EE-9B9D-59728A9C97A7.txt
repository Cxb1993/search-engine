2則被忽視，當這些排程衡量準則表現平平
時，可能不會對工廠產生影響，但是當其
表現極差時，可能影響極大。假設工廠考
慮之排程衡量準則是 Cmax，倘若排出 Cmax
最好的排程，而 Tmax 極差，顯示至少有一
個工件將嚴重延遲交貨將得罪客戶，它就
不是一個好排程，而傳統作法沒有顯明其
它衡量準則目標值之衝擊這一層面之問
題。
(2) 忽略目標值較差但具有極好之體質之
排程
在傳統排程作法中，無從發現目標值較
差但具有具有極好之體質之排程，而遭淘
汰，以致於在將來在工廠執行排程時，得
需付出較大的生產控制成本之代價。
(3) 缺乏排程在執行時生產控制上所需之
資訊
傳統對排程僅止於了解其目標值，然而
當排程進入生產階段時，生產控制需要許
多目標值以外之資訊，如強靭性(Solberg
1989, Leon, Wu and Storer 1994)、關鍵作業
(要嚴加控制不能有任何延遲)、各作業寬裕
度(允許延遲的最大值)、各作業外包有效
度、以及各作業壓縮加工時間之貢獻度等
等，都付之闕如，以致於工廠無從善用資
源，有效達成排程目標。
(4) 缺乏排程後處理資訊
所謂排程後處理乃是指排程經確定後
或排程作業在工廠執行過程中因故延遲
後，為得更好的排程或恢復原有的績效，
對排程所採取的任何作為稱之；傳統作法
對此排程後處理資訊也是付之闕如。
為解決上述問題，吾人乃有發展排程分
析診斷方法之必要，當吾人事先對排程作
分析診斷，不只可提供決策者決定是否採
用此排程，或決定作排程調整，以及將來
進入生產控制階段時面對可能發生各種狀
況之有效決策，這對將來細部排程在實務
上之成功應用，實有莫大助益。
本研究為三年計畫之第一年。完成排程
分析診斷共計下列三大項：
(1) 各種排程目標衡量準則之分析診斷。
(2) 排程強靭性(robustness)分析診斷
(3) 排程後處理-排程壓縮之分析診斷
三、本年度結果與討論
為說明本研究成果，吾人取材於 Pinedo
and Chao (1999)之三個機器三個工作簡單
排程為例。已知一排程問題如表一所示，
此排程問題已排出之排程如圖一。吾人為
此排程做一系列的分析診斷。
表一 排程例(Pinedo and Chao 1999)
Jobs ri di Machine
sequence
Pi,j,m
1 5 24 1, 2, 3 P1,1,1=5, P1,2,2=10, P1,3,3=4
2 0 28 3, 1, 2 P2,1,3=4, P2,2,1=5, P2,3,2=6
3 0 26 3, 2, 1 P3,1,3=5, P3,2,2=3, P3,3,1=7
O3,1,3 O2,1,3
O1,1,1 O2,2,1 O3,3,1
O3,2,2 O1,2,2
O1,3,3
O2,3,2
Machine1
Machine 2
Machine 3
0 5 10 15 20 25 30
圖一 排程例之排程結果(Pinedo and Chao 1999)
表二排程例之排程結果(Pinedo and Chao 1999)
Machine Sequence of operations
1 O1,1,1 (s1,1,1=5, e1,1,1=10), O2,2,1 (s2,2,1=10,
e2,2,1=15), O3,3,1 (s3,3,1=15, e3,3,1=22)
2 O3,2,2 (s3,2,2=5, e3,2,2=8), O1,2,2 (s1,2,2=10,
e1,2,2=20), O2,3,2 (s2,3,2=20, e2,3,2=26)
3 O3,1,3 (s3,1,3=0, e3,1,3=5), O2,1,3 (s2,1,3=5,
e2,1,3= 9), O1,3,3 (s1,3,3=20, e1,3,3=24)
4O1,3,3, -} = 0
5 O2,2,1 - O3,3,1,
O2,3,2
0, 5 Min {0, 5,
-} = 0
5 工
件
6 O1,1,1 - O2,2,1,
O1,2,2
0, 0 Min {0, 0,
-} = 0
0
7 O2,1,3 - O1,3,3,
O2,2,1
11, 1 Min {11, 1,
-} = 1
10 機
器
8 O3,2,2 - O1,2,2,
O3,3,1
2, 7 Min {2, 7,
-} = 2
5 工
件
9 O3,1,3 - O2,1,3,
O3,2,2
0, 0 Min {0, 0,
-} = 0
0
(4) 排程強靭性(robustness)分析診斷—各
作業之 effect value
首先得計算各作業之 effect matrix
EEVi,j,m 。各作業之effect matrix EEVi,j,m之
公式如下：
EEVi,j,m =












otherwise)(unchanged
0toequalareandbothif),,max(
0onlyif),max(
0onlyif),max(
'1''
'1
''
i,j,m
i,j,mi,j,m,mi,j,m,jii,j,m
i,j,m,mi,ji,j,m
i,j,m,m,jii,j,m
EEV
gjgmEEVEEVEEV
gjEEVEEV
gmEEVEEV
(5)
各作業之effect value則由effect matrix
EEVi,j,m計算而來，其公式如下：
evi,j,m = 

K
1
,
k
ki,j,meev (6)
計算各作業之effect matrix EEVi,j,m之
演算法如下(英文)：
Step 1: (Initialization) Assign [0,0, …, 
wkek,…, 0 ]1*K as initial effect matrix
to the protected operation k and
[0,0, …, 0,…, 0 ]1*K to any other
operation, where wk is the weight of
protected operation k and ek is the
binary value.
Step 2: Examine backward and select the
operation that has the latest end time
from among all untreated operations.
Find out its directly subsequent
operations and calculate the effect
matrix for the selected operation
from equation (5).
Step 3: If there is any operation left untreated,
go to step 2. Otherwise, go to the
next step.
Step 4: Calculate the effect value as shown in
equation (6) for each operation.
Step 5: Rank the operations according to
their effect values.
表六 排程例之 effect value
No. Oi,j,m Oi’,j’,m,
Oi,j+1,m’
gmi,j,m,,
gji,j,m
Effect matrix
(EEVi,j,m)
calculation
Effect
value
(evi,j,m)
1 O2,3,2 -, - -, - [0,2,0] 2
2 O1,3,3 -, - -, - [1,0,0] 1
3 O3,3,1 -, - -, - [0,0,2] 2
4 O1,2,2 O2,3,2,
O1,3,3
0, 0
Max([0,0,0],
[1,0,0], [0,2,0]) =
[1,2,0]
3
5 O2,2,1 O3,3,1,
O2,3,2
0, 5 Max([0,0,0],
[0,0,2]) =[0,0,2]
2
6 O1,1,1 O2,2,1,
O1,2,2
0, 0
Max([0,0,0],
[0,0,2], [1,2,0]) =
[1,2,2]
5
7 O2,1,3 O1,3,3,
O2,2,1
11, 1 [0,0,0] 0
8 O3,2,2 O1,2,2,
O3,3,1
2, 7 [0,0,0] 0
9 O3,1,3 O2,1,3,
O3,2,2
0, 0
Max([0,0,0],
[0,0,0], [0,0,0]) =
[0,0,0]
0
O3,1,3 O2,1,3
O1,1,1 O2,2,1 O3,3,1
O3,2,2 O1,2,2
O1,3,3
O2,3,2
[0,2,0]
[1,0,0]
[0,0,0] [1,2,0]
[0,0,0]
[1,2,2] [0,0,2][0,0,2]
[0,0,0]
Machine1
Machine 2
Machine 3
0 5 10 15 20 25 30
圖二 排程例之 effect matrix
因此各作業之重要性排序為：O1,1,1、
O1,2,2、O2,3,2、O3,3,1、O2,2,1、O1,3,3、O2,1,3、
6subgraph
圖四 排程壓縮例之 subgraph
步驟 3：列舉所有之 minimal cut sets
求出所有之 minimal cut sets，每一個 set
即為可能壓縮排程作業有效組合，結果如
下所示。
表九 各 minimal cut set 壓縮成本
Minimal cut set 壓縮成本
O1,1,1 2
O2,2,1, O1,2,2 1+6=7
O3,3,1, O1,2,2 5+6=11
O2,2,1, O2,3,2 , O1,3,3 1+5+7=13
步驟 4：決定最佳的 minimal cut set
壓縮成本最低的 minimal cut set 為
{ O1,1,1 }，其成本為 2。因此，此排程最適
壓縮作業為 O1,1,1，壓縮此作業，僅一次壓
縮各工件均可以提早一個時間單位完成。
四、結論及成果自評
細部排程理論已經在近三十年間發展得
相當成熟。然而，排程最終要付諸工廠實
行，因此使用再好的排程方法，排出再好
的排程，若最終在工廠不能照原所排定之
期待完成，也是功虧一簣；因此，事先對
排程作分析診斷，不只可提供決策者決定
是否採用此排程，或決定作排程調整，以
及將來進入生產控制階段時面對可能發生
各種狀況之有效決策，這對細部排程在實
務上之應用，實有莫大助益。本研究已完
成排程分析診斷三大項：(1)各種排程目標
衡量準則之分析診斷； (2)排程強靭性
(robustness)分析診斷；以及(3)排程後處理-
排程壓縮之分析診斷。本文乃以 Pinedo and
Chao (1999)之三個機器三個工作簡單排程
為例，根據已發展完成的三大項，為此排
程做一系列的分析診斷。
第二年的計畫不知何故未獲通過，吾人
甚感遺憾，期待下次再提報計畫時，能受
青睞，使得此三年的研究計畫能夠完整完
成。
計畫成果自評：本研究均照計畫進行完
成，達到預期之目標。此研究成果已寫成
學術論文四篇，兩篇投在著名學術期刊，
目前正審查中，兩篇刊登發表研討會論
文，如下：
1. Tien-Chun Hsu, An extension to the
protected operation-based approach,
submitted to International Journal of
Production Research.
2. Tien-Chun Hsu,排程數據之分析，
submitted to Journal of Data Analysis.
3. Tien-Chun Hsu，2007，Ranking critical
operations in a schedule，2007 資訊技術
與 產 業 應 用 研 討 會 (ITIA2007) ，
2007/6/8-2007/6/8
4. 許天淳，2007，排程作業之寬裕損失，
2007 資訊技術與產業應用研討會
(ITIA2007)，2007/6/8-2007/6/8
五、參考文獻
Baker, K., R., 1974, Introduction to
sequencing and scheduling, (New York:
John Wiley & Sons, Inc.).
French, S, 1982, Sequencing and Scheduling:
an Introduction to the Mathematics of the
Job-shop, (John Wiley & Sons, Inc., New
York.)
Leon, V. J., Wu, S. D. and Storer, R, H.,
1994, Robustness measures and robust
scheduling for job shops. IIE Transactions,
26(5), 32-43.
O3,3,1O2,2,1O1,1,1source
O1,2,2 O2,3,2
sink
O1,3,3
