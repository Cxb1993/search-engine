and security requirements of IoT. Future potential 
users may own different kinds of devices at the same 
time, and these devices are able to connect each 
other, calculate and transfer data. It will be 
inconvenient if users have to authenticate every 
single device when they access the resources in IoT 
environments. Thus, we come up with a new idea, 
Collaborative Authentication, based on the idea of 
information sharing among different devices. 
 
英文關鍵詞： Cooperative Network, Internet of Thing, IMS, 
Conference Key, Authentication 
 
II 
 
中文摘要 
在資訊科技日新月異之下，網路即是一個全球化的資訊平台，使用者能依靠各式各樣
的行動裝置，隨時隨地連上網路取得資訊。新世代的網路模式 IoT（Internet of Things），涵
蓋了實體、虛擬、數位化等不同的範疇，所有物品皆可連上網路，透過資訊行動裝置或感
測器進行訊息交換與通訊，實現人與物體以及物體與物體間的共同網路。而當網路存取越
方便、資料在個體間交換得越頻繁時，則隱私資訊遭竊取或者訊息被偽造及身份受到仿冒
的可能性也會跟著增大。故我們必須針對 IoT 環境做整體的考量，設計出適用的安全方案，
以防攻擊者進行惡意的攻擊，和使用者隱私資料遭受洩漏。 
本計畫將對於 IoT 的網路特性及安全需求進行分析與探討：首先我們將設計一套協同
身分認證機制(Collaborative Authentication)，針對使用者可能會擁有許多具有連線、計算及
資料傳遞等能力的晶片或行動設備，當使用者進入一個新環境中，通常要個別去認證使用
者身上的所有裝置時，如此一來，會耗費大量認證時間與造成使用者的不便。故在我們初
步的考量上，會利用裝置間資訊分享的概念，依靠使用者身上所有裝置當中硬體及具運算
能力較強大的裝置來協助其他處理能力較弱的裝。又在考量效率及穩定性的前提下，藉由
裝置之間協同合作的方式與伺服器端完成雙向認證。 
 
關鍵詞：協力網路，物聯網(IoT)，IMS，會議金鑰，身份認證 
 
IV 
 
目錄 
前言與背景 .................................................................................................................................................... 1 
研究目的 ........................................................................................................................................................ 1 
文獻探討 ........................................................................................................................................................ 1 
低運算量身分認證機制(一) - Bilinear Pairing 身分認證機制 ................................................................ 1 
低運算量身分認證機制(二)- -Rabin Cryptosystem 身分認證機制 ........................................................ 2 
低運算量身分認證機制(三) -One way hash function 身分認證機制 .................................................... 3 
研究方法 ........................................................................................................................................................ 3 
代理認證 .................................................................................................................................................... 3 
Rabin Cryptosystem ................................................................................................................................... 4 
Diffie-Hellman 金鑰交換 .......................................................................................................................... 5 
對稱式加解密系統 .................................................................................................................................... 6 
結果與討論 .................................................................................................................................................... 9 
協同認證與會議金鑰交換協定 ................................................................................................................ 9 
實作架構與方法 ...................................................................................................................................... 14 
整合議題 .................................................................................................................................................. 15 
結論 .............................................................................................................................................................. 16 
計畫成果自評 .............................................................................................................................................. 16 
參考文獻 ...................................................................................................................................................... 17 
 
2 
 
(4). Client 計算會議金鑰                    ，並計算
                     與               ，並將Ｖ傳給 Server。 
(5). Server 確認              是否等於      ，計算會議金鑰   
                 。 
以上方法雖然是以低運算量為目標進行設計，但論文中所採用的 Bilinear 
Pairing 的運算量太大，加上 Bilinear Pairing 在實作上較為複雜，恐怕較難
滿足跨平台的需求，因此不適合用在我們的機制上。 
 
3.2 低運算量身分認證機制(二) -Rabin Cryptosystem 身分認證機制
[2] 
(1). Client 計算               
      ，並將計算結果與   一起傳給 Server，
其中  為用 Server 密鑰要進行對稱式加密之密文，n 為 Server 之公鑰是由
兩個大質數   相乘的結果(兩個大質數為 Server 之私鑰)， 為 Client 所選
擇的隨機亂數。 
(2). Server 用公鑰對               
      進行解密，並用密鑰得知  之內容。 
(3). Server 檢查      、   、    是否正確，若正確則繼續執行(4).，否則將
終止認證，其中      、    可從  解密後得知，其中 Server 會存放一份
Table，Table 中記錄了   與    之間的對應關係。 
(4). Server 計算 ＝   以及         ，並將 和 傳給 Client，其中 為
Server 所選的隨機亂數。 
(5). Client 計算     ，並檢查         是否正確，若正確則繼續執行
(6).，否則將終止認證。 
(6). Client 計算            ，並將結果傳給 Server，其中   為使用者的
Password。 
(7). Server 確認            是否正確，Server 可從可從  解密後得知，若正
確則完成認證，否則將視為認證失敗。 
以上的方法雖然是用於 Smart Card 上的認證機制，但其中低運算量以及可
以防止 ID Table 遺失而造成機制瓦解等特性非常適合我們的需求，因此值
得我們參考，但我們仍發現一些可加強安全度的部分(防止生日攻擊)等部
分可以修改及加強。 
4 
 
機制，以提供低運算能力的設備進行認證。 
 
圖一 代理認證機制 
 
在 IoT-IMS 網路環境下，多元化的設備皆能上網，因此我們假設使用者身上會同
時有多個可上網的設備，其中智慧型手機的普及率日漸升高，而且智慧型手機的
運算能力已足夠執行中高安全度的安全機制，因此我們將我們機制的核心放在如
何利用使用者持有的高運算能力之設備完成代理認證，這就是提出代理認證的主
要動機。 
中高運算能力的行動設備可獨自與提供服務的 Server 進行安全度較高的認證，
而我們進一步的去思考，如何協助低運算量的設備也能同時進行高安全度的認證。
在實際的環境中，我們認為可以對Proxy與Client之間先進行一次較快速的認證，
由於 Proxy 會符合兩個特性，第一，Proxy 本身為使用者所擁有的，第二，Proxy
與 Client 在進行認證時所採用的傳輸方式多半是近距離的無線傳輸，因此我們在
此部分的認證可以強調低運算量以及快速，而在安全性上則會因為上述兩個特性
而讓他們的認證本身較不容易被破解，因此我們可以在這個部分進行較快速的認
證，往後再由 Proxy 協助其他已認證過的低運算能力設備進行其他的認證以及金
鑰交換。 
 
4.2 Rabin Cryptosystem 
Rabin Cryptosystem 可以當成簡單的公開金鑰系統，其中最大的特色為加密實只
要一次的模乘法的運算即可完成，會比 RSA 以及橢圓曲線等演算法來的快速，
因此非常適用於我們的協同認證機制。下列將簡要列出 Rabin Cryptosystem 的演
6 
 
 
圖二 Diffie-Hellman 金鑰交換 
 
1. 將大質數 與原根 g 公開 
2. Usera 選擇一個秘密整數 並計算         ，將 傳給 Userb。 
3. Userb 選擇一個秘密整數 並計算         ，將 傳給 Usera。 
4. Usera 計算    。 
5. Userb 計算    。 
 將可以作為 Usera 與 Userb之間的 Session Key。 
4.4 對稱式加解密系統： 
經由我們的會議金鑰交換協定所溝通出來的金鑰，根據使用者應用程式的需求，
此金鑰可用於串流加密或區塊加密演算法，在此我們將概略簡介區塊加密演算法
AES [11]。 
1. Advanced Encryption Standard (AES)： 
AES 是於 2001 年由 NIST 由許多加密演算法中選出，其特性是運算速度較快，
並且非常容易實作於硬體上，運算過程中所需求的記憶體也比較少，其提供128、
8 
 
 
圖五 MixColumns 
 
MixColumns 的運算則是將每一個 Column 與多項式 c(x) = 3x3 + x2 + x +2 乘。 
AddRoundKey的運算是將每個位置上的資料與相對應位置的Key作XOR運算，
bij = aij  kij。 
 
圖六 AddRoundKey 
 
10 
 
 
協同認證機制中的角色大致分為三種。第一種是提供服務的Server：運算能力最
強，負責提供服務給其它的設備；第二種是協助其他設備認證的Proxy：運算能
力次(約智慧型手機的運算能力)，也是一個需要跟Server進行認證並要求服務的
設備；第三種是能力較弱的設備Client：在架構中運算能力最弱(但還是必須要有
基本的運算能力)，它無法有效的進行安全認證，因此我們可以藉由Proxy的能力
來完成協同認證，圖八為簡單的角色判定流程，可以幫助我們了解如何決定設備
屬於哪一種角色以及該採用何種方式進行認證。 
 
圖八 設備角色判定流程圖 
 
其中，Server不屬於行動設備，因此不需要使用流程圖進行判斷，而其他的行動
設備我們則會依據它的能力來判斷是否能擔任Proxy的角色，之後再判斷周遭是
否有即將與同一個Server進行認證的設備，進而決定採用完整的協同認證機制或
是只使用部分的機制來完成認證。 
協同認證機制分為三個部份。首先第一個部分為Proxy-Client Authentication，這
個部分的認證的首要需求是快速以及低運算量；第二個部份為Proxy-Server 
Authentication，這個部分的認證會著重於安全性，並且要同時幫助Server認證
Client端；最後第三個部分為Server-Client Session Key Exchange，認證後的通訊
為了不再依賴Proxy，因此我們必須在認證結束後讓Server與Client之間有獨立的
會議金鑰來保護傳輸的資料。接下來我們會分別介紹協同認證機制的三個部分。 
 
Proxy-Client Authentication 
協同認證機制的第一個步驟是Proxy與Client之間的認證，這個部分的認證會以低
運算量為主要的考量，尤其是Client端運算量將會將到最低。 
12 
 
(3). Client端將自己的   與                  
      後的結果傳給Proxy( 
為Client端選的隨機亂數) 
(4). Proxy 先 將                     
      進 行 解 密 ( 利 用
Rabin Cryptosystem)，再將Bi利用AES解密並驗證    、      以及      
等參數是否正確，如果正確則繼續執行(5)，如果不正確則終止認證。 
(5). Proxy將Client在(3)所選的隨機亂數 與Proxy自己所選的隨機亂數 運算
     以及              後，將 以及 傳給Client（其中hash的部
分還要加入  ）。 
(6). Client利用從 解密得到 ，並利用 驗證 是否正確，如果正確則繼續執
行(7)，若不正確則終止認證。 
(7). Client對            作hash運算後傳給Proxy。 
(8). Proxy驗證             ，如果正確則完成Proxy-Client認證，如果不正
確則終止認證。 
完成上述步驟後將以         作為Proxy與Client之間的Session Key，這把
Session Key將會在Server-Client Session Key Exchange的會議金鑰交換的階段使
用。 
 
Proxy-Server Authentication 
協同認證機制的第二個步驟是Proxy與Server之間的認證，在完成Proxy與Client
的認證過後，將會進行Proxy與Server的認證，這個階段會比Proxy-Client 
Authentication還要更強調安全性。 
而以下就是我們Proxy-Server Authentication的流程，如圖十一： 
(1). Proxy建立一對RSA公鑰  以及私鑰  。 
(2). Server建立一對RSA公鑰  以及私鑰  。 
以上兩個步驟為註冊階段，(3)開始為認證階段。 
 
圖十一 Proxy-Server Authentication 
14 
 
(4). Proxy將          傳給Server。 
(5). Server從  算出  (利用Rabin cryptosystem)並產生一個隨機  ，計算
                        ，將  傳給Proxy。 
(6). Proxy將  傳給Clienti。 
(7). Clienti計算會議金鑰            ，完成Server-Client Session Key 
Exchange。 
這個部分傳輸的資訊可以用Proxy-Client以及Proxy-Server的會議金鑰加
密。 
 
5.2  實作架構與方法 
本年度計畫中，我們會將協同認證機制的三個部分個別實作並進行整合，而實作
的平台是利用ESXi來虛擬幾個裝置，圖十三為虛擬機架設情況(其中有兩台為
Client 、一台為 Proxy以及一台為 Server) ，並且在虛擬出來的裝置架設
OpenIMSCore，藉由OpenIMSCore我們可以模擬出IMS的網路環境，在這樣的平
台上實作有兩個好處，第一有利於我們了解我們的機制套用到IMS的網路環境的
狀況，第二可以利用這樣的平台來與子計畫一以及其他計畫進行整合。 
 
圖十三 ESXi平台以及虛擬裝置 
 
在Proxy-Client Authentication的實作部分，最大的重點是Rabin Cryptosystem，
Rabin Cryptosystem的加密部分可由RSA簡化而來，至於解密部分，由於
16 
 
6. 結論 
本年度的計畫中，我們分析了 IoT-IMS 網路環境中的安全問題，並了解到在 IoT
的環境中那些安全機制是適用於低運算量的裝置，因此我們設計了一套符合此環
境的安全機制。這套安全機制的核心是藉由代理認證的方式，以較強的裝置來輔
助較弱的裝置來達成認證，並且利用 OpenIMSCore 來模擬 IMS 的環境，並且在
OpenIMSCore 上實作出協同認證機制。本年度的計畫中也針對隱私保護的部分
設計了會議金鑰交換的機制，在我們設計的會議金鑰機制中可以藉由 Proxy 來幫
助 Server 與 Client 建立與交換會議金鑰，而且還可以同時避免 Proxy 直接知道會
議金鑰的內容，因此可以有效的達到隱私保護的效果。結合了代理認證以及會議
金鑰交換的協同認證機制可以在裝置運算能力有限的情況下達到安全性以及隱
私性的保護，以強化 IoT-IMS 網路環境下的安全。 
 
7. 計畫成果自評 
第一年 
第一階段： IoT-IMS 無網網路評估階段 
在此階段，我們已分析 IoT -IMS 感知與協力無線網路上的安全隱憂，並且分析
了 IoT 環境中使用者可能碰到的安全問題，針對裝置的運算能力以及需要達到的
安全需求做了完整的評估。 
 
第二階段：協同認證機制的研究與設計 
依據第一階段的評估，我們認為協同認證機制可以解決低運算能力裝置的安全以
及隱私問題。在第二階段我們開始分析在 IoT-IMS 網路環境下該如何設計有效率
的認證機制，其中最重要的考量為要能夠讓低運算量的裝置可以執行，因此我們
從許多 Smart Card 以及 Sensor Network 的相關作法來做研究，並且設計出了代理
認證的初步架構。 
 
第三階段：分析會議金鑰交換協定與 IoT-IMS 環境的整合議題 
在此階段，我們在協同認證機制中加入了會議金鑰交換協定，加入這個協定的主
要目的為隱私保護。對於整合的部份我們在 ESXi 架設了虛擬機器，並利用
OpenIMSCore 模擬出 IoT-IMS 的網路環境。 
 
第四階段：實作階段 
截至目前為止，我們已經完成進度約 50%的協定實作，並持續與子計畫溝通可能
的整合問題，著手進行最後整體系統整合的準備。 
 
執行進度 
第一年 
18 
 
[9]  Rabin, Michael. Digitalized Signatures and Public-Key Functions as Intractable 
as Factorization (in PDF). MIT Laboratory for Computer Science, January 1979. 
[10]  FIPS 180-2: Secure Hash Standard (SHS) – Current version of the Secure Hash 
Standard (SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512), 1 August 
2002, amended 25 February 2004 
[11]  Joan Daemen and Vincent Rijmen, "The Design of Rijndael: AES - The 
Advanced Encryption Standard." Springer-Verlag, 2002 
[12]  Salekul Islam , Jean-Charles Grégoire ,“Multi-domain authentication 
for IMS services,” Computer Networks, Vol. 55, Issue 12, 25 August 2011, 
pp.2689-2704 
[13]  "RC4-drop(nbytes)" in the "Standard Cryptographic Algorithm Naming" 
database 
[14]  Chou-Chen Yang, Ting-Yi Changa and Min-Shiang Hwang, “A new anonymous 
conference key distribution system based on the elliptic curve discrete logarithm 
problem,” Computer Standards & Interfaces, Vol. 25, Issue 2, May 2003, pp. 
141-145 
[15]  Sheng-Bo Xu and Tilborg, H., “A new identity-based conference key distribution 
scheme,” IEEE International Symposium on Information Theory, 2000. 
Proceedings 
100 年度專題研究計畫研究成果彙整表 
計畫主持人：范俊逸 計畫編號：100-2219-E-110-005- 
計畫名稱：未來網際網路 IoT-IMS 通訊平台研究計畫--子計畫三：未來網際網路 IoT-IMS 通訊平台之
協同認證與隱私保護機制研究(1/2) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 5 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 6 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 6 4 100%  
博士生 0 2 100%  
博士後研究員 1 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
