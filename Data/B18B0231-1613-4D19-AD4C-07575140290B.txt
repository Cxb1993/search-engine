 1 
行政院國家科學委員會補助專題研究計畫 
■ 成 果 報 告   
□期中進度報告 
 
具容錯及保密能力之網路儲存系統 
 
計畫類別：■ 個別型計畫  □ 整合型計畫 
計畫編號：NSC 99－2221－E－008－109－ 
執行期間： 99 年 8 月 1 日至 100 年 7 月 31 日 
 
計畫主持人：黃興燦 
共同主持人：江振瑞 
計畫參與人員：詹謨澤、賴勇良、鄭楷照、吳玠儀、楊家俊、周定緯 
 
成果報告類型(依經費核定清單規定繳交)：■精簡報告  □完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
■出席國際學術會議心得報告及發表之論文各一份 
■國際合作研究計畫國外研究報告書一份 
 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、列
管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年■二年後可公開查詢 
          
執行單位：國立中央大學資訊工程學系 
 
中   華   民   國  100  年  10  月   15  日 
 
  
 3 
一、前言 (Introduction) 
 
 近年來各種網路應用對於網路儲存(Networked Storage, NS)系統需求快速增加，可以說
幾乎所有的網路應用都必頇在網路上儲存資料，這也導致許多相關的研究和產業如雨後春筍
般的進行著。人們改變以往的習慣，將資料放在網路上，如此一來，使用者即可在任何時間、
任何地點，透過任何裝置存取他所要的資料，除了不必煩惱儲存設備的維護，又沒有資料同
步或版本管理的問題。更甚者，這些資料還能夠共享，讓朋友的電腦和自己的手機都能夠存
取這些資料。由於網路儲存對於人們是如此便利，而且能夠發展許多應用，因此國內外相關
的產值也不斷成長。從這些地方都能夠看得到 NS 有遠大的前景。 
  
 網路儲存系統可以採用集中式和分散式的架構來運作。除了集中式的中央伺服器採購、
維護、升級成本相當高之外，在集中式的架構中，所有的使用者皆向中央伺服器存取資料，
而中央伺服器所擁有的頻寬及計算能力都是固定的，可使用的資源有限，當使用者的存取量
超過伺服器所能負荷時，就會造成效能低落。另外，中央伺服器所在位置若遇到不可抗力因
素，如天災、斷電等，整個系統會失效而不能提供服務。分散式網路儲存系統不但成本相對
較低，因實體裝置分散各地，故即使發生意外也只會造成少部份系統失效，另外，當使用者
越來越多時，也比較容易隨時擴充設備，以提供更多的容量和頻寬。總而言之，分散式 NS優
於集中式的地方在於較低成本、避免單點錯誤、較高彈性。 
 
二、研究目的 (Research Goals) 
 
由於 NS是由許多散佈於各地的儲存裝置所構成，偶而會有小部份的裝置斷線或失效，要
如何設計才能讓所存放的資料不因裝置失效而無法存取，因此容錯能力是 NS 所必要思考的
重要課題。設計網路儲存系統的容錯機制目的在於提高資料的可用性，讓使用者能夠隨時隨
地存取所要的資料。 
 
三、文獻探討 (Related Work) 
 
 設計 NS容錯機制目的在於，當有少數設備因不可抗力因素而損壞時，所儲存的資料仍應
該要可供使用者存取。而 NS的環境又和磁碟陣列 (Redundant Array of Independent Disks, 
RAID) 有所不同，例如 NS 裝置之間的連接頻寬遠低於 RAID的、NS 裝置的誤失率遠高於 RAID
的、NS 裝置的數量遠高於 RAID 的，因此容錯機制也應該針對這些特性來設計。網路儲存系
統的容錯機制可以分成兩類:  
 
以複本為基礎(replication-based) [2,13,17,18,19,23] 的機制是將數份相同的資料複本，
同時存放於網路儲存系統，當其中一份資料損毀時，仍然有其它的複本可供使用。但是這種
機制會浪費大量的儲存空間，因為複本數的增加，會以倍數消耗可用的空間。 
以編碼為基礎(coding-based) [8,9,10,12,22,27] 的機制是將資料編碼後，拆解成數個資料
塊並存放於網路儲存系統，當其中一個資料塊損毀時，其它仍未損毀的資料塊可以復原整份
資料，使得原始資料仍然可以完整存取。 
 
在以編碼為基礎的文獻中，大致有兩類做法:  
 
錯誤更正碼(erasure code) [9,10] 是採用 Reed-Solomon 或是 Tornado 的編碼方法，將原
始資料編碼後切成資料塊並存入 NS，當其中一塊損毀時，其它資料塊還是可以復原整個原始
資料。 
 5 
表二 符號 
symbol description 
       
Content of the     piece  
  
  The     bit of the     block 
        To XOR from    to    , except    
    
        
 Concatenating from   
  to   
     
 
           The bit in k-dimension case with k indices 
 
儲存階段 
資料的擁有者利用下面步驟將資料存入 NS系統中: 第一步是設定參數。第二步是根據參
數將資料切割成區塊。第三步是針對每一塊產生修正錯誤用的冗餘碼(redundant bit)，並且
第四步利用一把金鑰將每一個資料區塊利用互斥或(XOR)運算處理。最後將所有的區塊轉換成
資料片段存入 NS系統中。以下是每一步驟的細節: 
 
第一步: 參數設定 
令即將要存入 NS系統的資料共有 N個位元(bit)。我們提出的方法是將此資料切成 k-維
的區塊，然後依序分別對每個區塊產生冗餘碼。一個區塊可以看成是一個 k-維的陣列，每一
維的長度有 S個位元，因此每個區塊共有  個位元。參數 S和 k會影響容錯的能力及佔用的
儲存空間，使用較高的維度能容許更多的節點損壞，但同時也佔用更多儲存空間。每個維度
也可採用不同的長度，但無助於提升容錯能力，因此我們在這裡只討論相同長度的維度。 
 
第二步: 資料切割 
當參數 S和 k已經決定之後，就可以將資料切成區塊。N個位元的資料要切成  -位元的
區塊，所有共有       個區塊。最後一個區塊若是沒有剛好填滿，則要填滿零。在一維的情
況下，每個區塊有    個位元，第   個位元用    表示，其中       。在二維的情況
下，每個區塊有    位元，第         個位元用        表示。在 k-維的情況下，每個區塊
有    個位元。因為每個維度就要用一個標號表示，越高的維度就要用越多的標號表示，例
如在第 k-維中的            表示是第                個位元。 
 
第三步: 產生冗餘碼 
當區塊準備好後，就可以對每一維的資料逐一產生冗餘碼。在這裡我們只討論單一個區
塊的產生方式，因為每個區塊的冗餘碼產生方式是一樣的。在一維的情況下，只要將所有資
料位元互斥或運算之後，即可得到一個位元的冗餘碼:          。因此，加了冗餘碼之後
整個區塊會變成     個位元。在二維的情況下，可以先產生第一個維度的冗餘碼 
                        然後再產生第二個維度的冗餘碼                        。例如，表三是
一個每一維為四個位元的區塊，可以按照下列順序產生冗餘碼:     ,     ,     ,     ,     , 
    ,     ,     ,     。因此，一個二維的區塊加入冗餘碼之後會變成      
  個位元。在
多維的情況下，也是逐一對每個維的資料位元產生冗餘碼。  
 
 
 
 
 
 7 
 
第二步，代理人要詴著逐一復原每個區塊中損壞的位元。只要在一個區塊中的某個位元
可以復原，就代表在其它區塊中的相對應位元也可以復原，因此我們在這裡只討論單一區塊
內的復原。代理人首先將所有損壞的位元列舉出來，再逐一復原每個損壞的位元。每個損壞
的位元都可以利用相同的行或列的其它未損壞位元復原，只要同一行或列中唯一只有一個位
元損壞，直接以互斥或運算同一行或列中其它的位元即可，可利用下列公式詴著找到同一行
或列中可復原的依據。不論復原是否成功，都要再復原下個損壞的位元，這個復原不成功的
位元還有機會在下個回合復原，直到所有位元都被復原。然而，若一整個回合都沒有任何位
元被復原，表示這個區塊無法完全復原，也表示這份資料也無法復原。另外，在第一個區塊
復原的同時，可以將復原的順序記下，後續的區塊復原時就可以不必再利用多重回合搜尋可
復原的位元。 
 
           
 
 
 
 
                                        
                                       
 
                                       
  
 
最後，移除冗餘碼和補在最後區塊上的零即可得到原始的資料。 
 
 
五、結果與討論 (Results and Discussions) 
 
這裡針對我們提出的方法進行計算量、儲存量和容錯能力結果分析。 
 
計算量. 編碼的計算量是固定的。一旦區塊的維度和長度決定之後，只有輸入的資料量會影
響做互斥或運算的次數。在一維的情況下，每個區塊需要     個互斥或運算。因此，每份
資料就需要耗用              次互斥或運算。在二維的情況下，每份資料需要
               次互斥或運算。在 k-維的情況下，每份資料則會耗用            
        次互次或運算。至於解碼/復原的計算量就隨著不同的資料損壞情況而定。  
 
儲存量. 在 k-維的情況下，每個區塊需要           個位元的冗餘碼。因此每份資料就
要                   個位元的冗餘碼。過高的維度會造成最後一個區塊浪費太多儲存
位元，較不適用大量小檔案的環境。下圖(a)顯示不同的維度資料量和耗用儲存量比值的變
化。 
 
 9 
Conference / Workshop Papers 
1. Jehn-Ruey Jiang, Chao-Wei Hung, and Jih-Wei Wu, "Bandwidth- and Latency-Aware 
Peer-to-Peer Friendcast for Online Social Networks," 4th International Workshop on 
Peer-to-Peer Networked Virtual Environment (P2PNVE 2010), 2010. 
2. Jehn-Ruey Jiang, Ching-Chuan Huang, and Chung-Hsien Tsai, "Avatar Path Clustering in 
Networked Virtual Environments," 4th International Workshop on Peer-to-Peer Networked 
Virtual Environment (P2PNVE 2010), 2010. 
3. Chi-Wen Fann, Jehn-Ruey Jiang, Jih-Wei Wu, "Peer-to-Peer Immersive Voice Communication 
for Massively Multiplayer Online Games," 5th International Workshop on Peer-to-Peer 
Networked Virtual Environment (P2PNVE 2011), 2011. 
4. Ta-Yu Huang, Chih-Ming Lin, Jehn-Ruey Jiang, Wei Tsang Ooi, Maha Abdallah, and Khaled 
Boussetta, "SYMA: A Synchronous Multihop Architecture for Wireless Ad Hoc Multiplayer 
Games," 5th International Workshop on Peer-to-Peer Networked Virtual Environment 
(P2PNVE 2011), 2011. 
七、參考文獻 (References) 
[1] S. Agarwala, A. Paul, U. Ramachandran, and K. Schwan. e-safe: An extensible, secure and fault 
tolerant storage system. In Proc. of First International Conference on Self-Adaptive and 
Self-Organizing Systems (SASO’07), pp. 257-268, July 2007. 
[2] Ranjita Bhagwan, David Moore, Stefan Savage, and Geoffrey M. Voelker. Replication strategies 
for highly available peer-to-peer storage. In Proc. of FUDICO: Future Directions In Distributed 
Computing, 2002. 
[3] D. Bindel, Y. Chen, P. Eaton, D. Geels, R. Gummadi, S. Rhea, H. Weatherspoon, W. Weimer, C. 
Wells, B. Zhao, and J. Kubiatowicz. Oceanstore: An extremely wide-area storage system. Technical 
report, University of California at Berkeley, CA, USA, 2002. 
[4] Johannes Blomer, Malik Kalfane, Richard Karp, Marek Karpinski, Michael Luby, and David 
Zuckerman. An XOR-based erasure-resilient coding scheme. Technical report, University of 
California at Berkeley, CA, USA, 1995. 
[5] Ann Chervenak, Ian Foster, Carl Kesselman, Charles Salisbury, and Steven Tuecke. The data 
grid: Towards an architecture for the distributed management and analysis of large scientific 
datasets. Journal of Network and Computer Applications, Vol. 23, No. 3, pp.187–200, 2000. 
[6] I. Clarke, O. Sandberg, B. Wiley, and T. W. Hong. Freenet: Distributed anonymous information 
storage and retrieval system. In Proc. of International workshop on Designing privacy enhancing 
technologies: design issues in anonymity and unobservability, Lecture Notes in Computer Science, 
pp. 46–66, 2001. 
[7] F. Dabek, M. F. Kasshoek, D. Karger, R. Morris, and I. Stoica. Wide-area cooparative storage 
with CFS. In Proc. of the 18th ACM Symposium on Operating Systems Principles, pp. 202–215, 
2001. 
[8] A.G. Dimakis, P.B. Godfrey, M.J. Wainwright, and K. Ramchandran. Network coding for 
distributed storage systems. In Prof. of INFOCOM 2007, pp. 2000–2008, May 2007. 
[9] A.G. Dimakis, V. Prabhakaran, and K. Ramchandran. Decentralized erasure codes for distributed 
networked storage. IEEE/ACM Transactions on Networking, Vol. 52, pp. 2809–2816, June 2006. 
[10] A.G. Dimakis, V. Prabhakaran, and K. Ramchandran. Distributed fountain codes for networked 
storage. In Proc. of Acoustics, Speech and Signal Processing. ICASSP’ 2006, Vol. 5, May 2006. 
[11] Ian Foster, Yong Zhao, Ioan Raicu, and Shiyong Lu. Cloud computing and grid computing 
360-degree compared, In Proc. of Grid Computing Environments (GCE08), pp. 1-10, November 
2008. 
[12] Y. Houri and T. Fuhrmann. Hybrid redundancy schemes with random linear coding for 
peer-to-peer storage systems. In Proc. of 19th International Conference on  Computer 
Communications and Networks (ICCCN), pp. 1 –6, Aug. 2010. 
參加 
2010 第十二屆海峽兩岸信息技術研討會 
報告 
報告人: 黃興燦 教授 
 
2010 第十二屆海峽兩岸訊息技術研討會在大陸南京舉行，會期自十
一月六日至七日共兩天。該研討會係由台灣中央大學及大陸東南大學
共同交替主辦，一年在台灣由台灣中央大學主辦，一年在大陸由大陸
東南大學主辦。本研討會除學術交流外，由於台灣中央大學及大陸
東南大學有同根的情誼 ，兩校學者相見也就格外親切，兩校校方也
特別支持。此次在大陸舉行，台灣的學者由台灣中央大學劉振榮副校
長領隊參加。 
 
報告人受邀發表論文“ Ming-Kuei Yeh, Shing-Tsaan Huang and 
Jehn-Ruey Jiang, "Parallel Splitting and Merging for RFID Tag 
Anti-collision," 2010 Cross-Strait Information Technology Conference 
(CSIT 2010)”。  
報告人一行於十一月五日由台北出發直飛南京機場。以往須繞行經香
港非常費時。 
 
	
 
       	 
          

 
 
 
 ! 
"#$%&' (()*
((

+,-./0,-1234 
56789:
	$ 
              	 
 
"#; (<) =>?@ABCD" 
(E<)FG/HIJ/KI,JLMI,NOMIP/K/IQ/MIRLK/N/--
S/JTMKU- 
VWX<YZ (<)RL[4\ ]^_`abcdefghVijkl 
(E<)m/nKL-JLQo/-MnKQ/4NNMQ,JLMITLJG3,JL-P,QJLMIPMK
RL[4\3/KpLQ/- 
qrs =>?tuvwxyX 

z{|}~5/,LN AB^ caroline@ncu.edu.tw
?


z{|}~5
u"#

FG/HIJ/KI,JLMI,NOMIP/K/IQ/MIRLK/N/--S/JTMKU- A
ABCD"1"#Y =>?tC¡V¢£¤"#¥¦§¨!©ª
RL[4\O/NNnN,KS/JTMKU-O,KKÜLI0[nNJLÛKMPLN/o/,NJL/FK,PPLQ X<Ãâ
ãRL[4\?tÍo/,NJL/OMIJKMNFK,PPLQ *Ã+',
bOMÞLI0 ÷i¬ÔÕÃC¡ -ÕÁ-*.k/01'(«
¬­OGnI0I,S,JLMI,N2ILp/K-LJÜn-/MI01ì,//MI1ëMK/,  ëÜnI0-nÛ
ëL àá
« 4Þ,ÛJLp/OMÞ/Þ[MÞnN,JLMI,IÞíMT/KOMIJKMNÚp/K
OM0ILJLp/o,ÞLMS/JTMKUPMKM3íKMpL-LMILI0 X<ÃâãZºOM0ILJLp/
o,ÞLMS/JTMKU C¡Î2Ã -C¡ÕÁ-3k/0iâã£¦
~¬4
À%4
X<YZm/nKL-JLQo/-MnKQ/4NNMQ,JLMITLJG
3,JL-P,QJLMIPMKRL[4\3/KpLQ/-«RL[4\?td5ab
cdef67~89:;jklvwxC¡4<=âã¨b>?
¬@ABCâã4!¾%&ø£
ÔgÙ-DC¡cäåEF4
0G89!þ4âã40G÷iÁEFòþYHIÌJ£
"#ÑÒÂÑÒÆ4C¡÷K LM-N«¬­Ý/K,I
2ILp/K-LJÜLIO,LKM1O,LKM1î0ÜÛJ  ñ,KnUO,0QL àáÃ
 .,KL,ßN/
o,I0/-3/QnKLJÜíKMJMQMNPMKRLK/N/--3/I-MKS/JTMKU-!¾-Pþ
YQRSTU=>?t89üýRSV8$8'(¬­
O,NLPMKIL,3J,J/2ILp/K-LJÜ+M-4I0/N/-1O,NLPMKIL,1234  [MJ,ß,o,WP,Kâ
ãò[MßLNLJÜ  Hîîî)( òÄXYZÆk/3[ÃC¡÷
i\]^_`Yk/abòC¡þY£
u;z{

"#X<


uÃÄ
=
  3. Only those authors whose papers have been accepted SUBJECT to 
     MANDATORY changes will receive the compiled referees' report 
     about THREE days after the date of this email - The referee 
     reports would be sent to such authors by track chairs who 
     arranged the evaluation of your paper or by the coordinator/staff 
     of the conference. Authors who do not receive an email within 
     the next THREE days, should assume that their papers have been 
     accepted without mandatory changes. 
 
For information regarding author instructions including: 
 
- Presentation Formats / Accepted Paper Categories 
- Typing Instructions 
- Deadline (registration and camera-ready papers due: May 12, 2011); 
  We strongly encourage authors to register as soon as possible. 
- Conference Registration 
- Hotel Reservation 
- Conference Program/Schedule 
Please visit: 
http://www.worldacademyofscience.org/worldcomp11/ws/authors 
 
For Submission of Final Camera-Ready Papers for Publication in the 
Conference Proceedings/book, please visit: 
http://www.ucmss.com/cr/main/papersNew/worldcomp11_first_html 
 
To Request Invitation Letters for US Visa Purposes, please visit: 
http://www.ucmss.com/cr/main/invitations/worldcomp_index_html 
 
General information can be found at: 
http://www.world-academy-of-science.org/ 
 
Congratulations, and thank you for your contribution to the 
Conference. We look forward to seeing you at the conference 
in July. 
 
Kind regards, 
Hamid 
ps. 
The 2011 International Conference on Wireless Networks 
 
Heuristic Resource Allocation with Satisfaction 
for WiMAX Services 
 
Yung-Liang Lai 
945402011@cc.ncu.edu.tw 
Jehn-Ruey Jiang 
jrjiang@csie.ncu.edu.tw 
 
Department of Computer Science and Information Engineering 
National Central University 
 
No.300, Jhongda Rd., Jhongli City, Taoyuan County 32001, Taiwan 
 
Abstract—The WiMAX technology offers a versatile mobile 
services platform, which enables operators to provide differential 
Quality of Service (QoS) for fulfilling subscribers’ various 
requirements. WiMAX operators need to allocate enough 
resources to make all subscribers satisfied to avoid “user churn” 
that subscribers will unsubscribe services due to dissatisfaction 
with allocated resources. This resources allocation in WiMAX 
can be modeled as a constrained nonlinear integer problem 
(Constrained NLIP), which is hard to solve for a large subscriber 
scale. This paper proposes a heuristic optimization algorithm to 
allocate available resources for maximizing the operator revenue 
under the subscribers’ satisfaction constrains for differential 
services. The efficiency of the proposed algorithm is also 
evaluated. 
Keywords-WiMAX, resource allocation, Quality of service, 
Constrained Nonliner Integer Problem, Genetic algorithm 
I.  INTRODUCTION  
WiMAX (Worldwide Interoperability for Microwave 
Access) [1] is a wireless broadband access technology that 
provides performance similar to IEEE 802.11 Wi-Fi networks 
with the coverage and QoS (quality of service) of cellular 
networks. It is initiated by WiMAX forum [2] and IEEE 
802.16d [3] and 802.16e [4] are two important standards in the 
WiMAX specifications. The former is to provide last-mile 
connectivity up to 50km for fixed stations. The latter is to 
enable convergence of mobile and fixed broadband networks 
through a common wireless-access technology; it provides 
connectivity up to 15 km for mobile stations. WiMAX 
subscribers have broadband network access anytime and 
anywhere, leading to a rich set of diverse services. Some of the 
services, such as Voice over IP (VoIP) telephony service and 
Multimedia Broadcast Multicast Service (MBMS), demand 
differential QoS requirements. WiMAX operators need to 
allocate resources to different services to satisfy their 
requirements. With QoS support [5], the operators can provide 
better experience for all subscribers in different service levels. 
Due to the scarceness of resources (e.g., spectrum) in the 
WiMAX network, the resources are usually costly. The 
operators have to invest a very large capital for acquiring the 
resources in order to provide enough allocation for subscribers, 
which may debase the revenue. However, if the subscribers are 
not satisfied with allocation of resources, they will unsubscribe 
the services and migrate to another service provider, leading to 
the user churn problem [6], which will also reduce the revenue. 
It is challenging to allocate available resources for maximizing 
the operator revenue under the subscribers’ satisfaction 
constrains. 
The IEEE 802.16e standard [4] defines the physical (PHY) 
layer and medium access control (MAC) layer for broadband 
wireless access systems. The OFDMA has been selected by the 
WiMAX forum [2] as the standard model in the PHY layer. 
The OFDMA is defined as a multiplexing technique for 
subdividing the wireless spectrum into a set of frequency 
resources, which are called subchannels. IEEE 802.16e 
provides a diversity classes for providing QoS services, which 
are unsolicited grant service (UGS) class, real-time-polling-
services (rtPS) class, non-real-time-polling services (nrtPS) 
class, and best effort (BE) class. The UGS class supports the 
reliable wireless access services, such as T1/E1 bandwidth in 
internet service provider. The rtPS class supports voice (or 
video) transmissions in real-time. The nrtPS class supports 
non-real time transmissions, such as file transformation. The 
BE service supports non-delay sensitive transmissions. Some 
schemes are proposed to manage the resources for the QoS 
services of the WiMAX. The authors in [7] proposed a pricing 
model for providing unsolicited grant services (UGS) and real 
time services (rtPS). The paper [8] proposed a variable pricing 
model for non-real-polling time service (rtPS). The authors in 
[9] proposed a mechanism to assign costs for services based on 
different bandwidth requirements. However, the problem of 
WiMAX wireless resources allocation with subscribers’ 
satisfaction constraints is not fully studied. 
In this paper, we study how to allocate the WiMAX 
resources in order to maximize the revenue for differential QoS 
levels under the subscribers’ satisfaction constrains. The 
resource allocation is modeled as a constrained nonlinear 
integer problem (Constrained NLIP) [10]. Due to the hardness 
of solving the Constrained NLIP problem, we develop a 
heuristic genetic optimization algorithm to find the solution. 
We also evaluate the effectiveness of the proposed algorithm. 
The rest of this paper is organized as follows. In Section II, 
some related work is described. A resource allocation with 
The 2011 International Conference on Wireless Networks 
 
function which defines the price per unit time for controlling 
subscribers’ transmission rates. The paper [8] proposed a 
variable pricing model for non-real-polling time service (rtPS). 
The paper [9] proposed a cost based admission mechanism by 
assigning costs for services based on different bandwidth 
requirements. However, the wireless resources allocation with 
subscribers’ satisfaction constraints problem is not fully studied.  
 
III. PROBLEM FORMULATION 
 
We formulate a resource allocation with satisfaction 
problem in this section. The main goal of the problem is to 
maximize the operator’s revenue under the subscriber’s 
satisfaction constraints.  
We assume an operator sells S services for subscribers. The 
operator allocates SRs resources for the service s, where s   
services set Ω. The subscribers need to pay the dynamic price 
Pdynamic for their dynamic usage of resources and the static price 
Pstatic for their subscribed services. The operator has the cost 
Cres for the resources. The subscribers demand DRs units 
resources for the service s; however, the resources consumed 
should not more than SRs. Moreover, The revenue (R) for an 
operator, which can be defined as:  
                                                                                                         
  ∑   *       +         
   
 ∑           
   
 ∑        
   
                                             ( ) 
             
The first constraint is that at least one resource should be 
allocated for each service: 
 
sΩ, SRs ≥ 1                               (3) 
 
We also have to enforce another constraint such that the total 
number of allocated resources is equal to the resource budget 
(B), thus every resource is utilized, i.e.: 
 
∑        = B             (4) 
 
Moreover, we have to ensure the service’s satisfaction is not 
less than the satisfaction level ( γs)., i.e.: 
 
sΩ, Ψ(Rs) ≥ γs                           (5) 
 
Based on above definitions, the problem can be expressed by 
the problem of finding a resource allocation set {SRs|sΩ} for 
maximizing the operator’s revenue, which is defined as 
following: 
 
Maximize R             (6) 
Subject to resource constraints (3), (4) and satisfaction 
constraint (5). 
 
IV. PROPOSED HEURISTIC ALLOCATION ALGORITHM 
 
Our algorithm based on the genetic algorithm (GA) 
approach, which can be used to heuristically find the solutions 
of combinatorial optimization problems. The GA approach is 
to mimic natural selection in the biology, where individuals 
with higher fitness can survive to next generation [12]. 
The population (a set of individuals) is randomly generated 
in the initial step. Then, the population will be evolved in the 
generation-loop for MAXIMUM_GENERATIONS times. In 
each generation, the steps to generate the next generation 
consisting of: Selection, Crossover, Mutation, and   Generate 
the good individuals into the next generation. When the 
generation-loop is terminated, the solution is made by 
decoding the best individuals in the Decode step. 
Based on the above steps, we design a heuristic resource 
allocation algorithm. The algorithm is presented as followings.  
 
Heuristic Resource Allocation Algorithm 
 
1. Init_population(); 
2. DO 
3.        Selection(); 
4.        Crossover(); 
5.        Mutation(); 
6.        Generate(); 
7. UNTIL (Terminate_Condition)   /*Condition is 
 repeated times reaches MAXIMUM_GENERATIONS */ 
8. Solution = Decode(); 
9. Return Solution 
 
 
 
The 2011 International Conference on Wireless Networks 
 
 
Figure 4.  Simulation results in Subscribers’ Satisfactions on the proposed 
algorithm 
 
VI. CONCLUSIONS 
 
WiMAX is a promising technology for wireless broadband 
Internet access. To successfully deploy a commercial WiMAX 
system, both revenue and subscribers’ satisfaction constraint 
must be taken into account. In this paper, we have formulated a 
Resources Allocation with Satisfaction Problem for properly 
allocating resources in WiMAX networks. We have proposed a 
heuristic genetic algorithm for solving the resources allocation 
with satisfaction problem. Simulation results demonstrate that 
the proposed algorithm is effective. Our future work will focus 
on using different user satisfaction models and different QoS 
models to formulate the resource allocation problem in 
WiMAX networks. 
 
REFERENCES 
 
[1] S. Ahmadi, “An overview of next-generation mobile WiMAX 
technology, ” IEEE Communications Magazine, vol. 47, no.6, pp.84-98, 
June 2009. 
[2] WiMAX Forum, 2011, URL: http://www.wimaxforum.org/ 
[3] IEEE 802.16-2004, IEEE Standard for local and metropolitan area 
networks, Air Interface for Fixed Broadband Wireless Access Systems, 
Oct 2004. 
[4] IEEE 802.16e, IEEE Standard for local and metropolitan area networks, 
Air Interface for Fixed Broadband Wireless Access Systems, 
Amendment 2: Physical and Medium Access Control Layers for 
Combined Fixed  and Mobile Operation in Licensed, 2005. 
[5] B. Li, Y. Qin, C. P. Low, and C. L. Gwee, “A survey on mobile wimax 
[wireless broadband access], ” IEEE Communications Magazine, vol. 45, 
pp. 70-75, 2007. 
[6] H. Lin, M. Chatterjee, S. K. Das, and K. Basu, “ARC: an integrated 
admission and rate control framework for CDMA data networks based 
on non-cooperative games, ” ACM Mobicom 2003, pp. 326-338. 
[7]  A. Belghith, L. Nuaymi, and P. Maille, “Pricing of Real-Time 
Applications in WiMAX Systems, ” IEEE 68th Vehicular Technology 
Conference, Calgary, Canada, 21-24 September 2008. 
[8] A. Belghith, L. Nuaymi, and P. Maille, “ Pricing of differentiated-QoS 
services WiMAX networks,” IEEE Global Communications Conference, 
New Orlean USA, 30 Novembre - 4 December 2008. 
[9] B.-J. Chang Y.-L. Chen, and C.-M. Chou, “Adaptive Hierarchical 
Polling and Cost-based Call Admission Control in IEEE 802.16 
WiMAX,” Wireless Communications and Networking Conference, 
2007, , pp. 1954 - 1958, Hong Kong, 11-15 March 2007 
[10] D. Li, X. Sun, Nonlinear Integer Programming, Springer, 2010. 
[11] 3GPP TR 23.836, “Quality of Service (QoS) and policy aspects of 3GPP 
– Wireless Local Area Network (WLAN) interworking”, December 
2005. 
[12] One-Way Transmission Time, ITU-T Recommendation G.114, Feb. 
1996. 
[13] D. E. Goldberg, Genetic Algorithms in Search, Optimization, and 
Machine Learning, Addison-Wesley, 1989. 
[14] Matlab, 2011, URL: http://www.matlab.com 
 
 
0.72
0.74
0.76
0.78
0.8
0.82
18 19 20 21 22 23 24
 
av
e
ra
ge
 o
f 
su
b
sc
ri
b
e
rs
’ 
sa
ti
sf
ca
ti
o
n
s 
No. of Resources 
Satisfaction
SYMA: A Synchronous Multihop Architecture 
 for Wireless Ad Hoc Multiplayer Games 
 
Ta-Yu Huang, Chih-Ming Lin, Jehn-Ruey Jiang  
Department of Computer Science and Information 
Engineering 
National Central University 
Jhongli, Taiwan 
jrjiang@cise.ncu.edu.tw 
Maha Abdallah 
LIP6-CNRS  
Pierre and Marie Curie University  
Paris, France 
Maha.Abdallah@lip6.fr 
Wei Tsang Ooi  
Department of Computer Science 
National University of Singapore  
Singapore, Singapore 
ooiwt@comp.nus.edu.sg 
 
Khaled Boussetta 
L2TI-Institut Galilee  
Paris 13 University 
Paris, France 
Khaled.Boussetta@univ-paris13.fr 
 
 
Abstract—In this paper, we propose a synchronous multihop 
architecture (SYMA) for wireless ad hoc multiplayer games. 
In SYMA, devices are assumed to have one-hop neighbor 
device information, as well as timers synchronized with good 
accuracy. A player, called game initiator, broadcasts an 
invitation message to invite other players to join a new game. 
A joining player issues a message along with its 
neighborhood information, including the expected 
transmission time (ETT) for each neighbor node, to reply to 
the invitation so that the initiator can derive the topology of 
the participating players. The initiator applies Floyd–
Warshall shortest path algorithm, taking the topology and 
ETT values as input to construct the shortest path spanning 
tree rooted at each player (or node). It then calculates the 
expected broadcast time (EBT) for each tree, which is useful 
to estimate the time for the root node of a tree to broadcast a 
game state to all tree nodes. Finally, the tree with the 
smallest EBT is selected as the communication tree and its 
root is designated as the coordinator, which collects 
timestamped actions of each player, executes the game logic, 
and then broadcasts the new game state. By exploiting 
synchronized timers, the game state consistency is 
guaranteed, and each node can be scheduled to send/receive 
game messages without causing collisions.  
Keywords-multihop games, multiplayer, ad hoc 
I.  INTRODUCTION 
The game industry has grown at an amazing rate in 
recent years. In particular, the ubiquity of wireless 
communication technologies on mobile devices has 
enabled the development of multiplayer games over ad hoc 
wireless connections through Wi-Fi or Bluetooth. A group 
of players can compete against, or collaborate with, each 
other in such games, as long as their devices are within the 
wireless range of each other.  A critical limitation of 
current multi-player games over ad hoc wireless 
connections is that they only support one-hop, direct 
connection, between the different mobile devices. A player 
must be within wireless communication range of every 
other player. 
In this paper, we extend existing one-hop ad hoc 
architecture for multi-player games to a multihop 
architecture. Using a multihop architecture, two players 
that are not directly connected can use another player as a 
relay to forward messages to destination.  Such 
architecture has two major advantages.  First, players that 
are not within direct wireless communication range can 
still play with each other, as long as there are other players 
within communication range to serve as relays. Second, it 
is now possible for devices to reduce their transmission 
power to save power, but still maintain connectivity 
among every other player.  
Running multiplayer games over a multihop wireless 
architecture raises, however, several challenges. An 
important issue that arises is the increase in end-to-end 
latency. Since messages now need to traverse multiple 
hops to reach other players, end-to-end latency increases. 
Message latency in games, especially in highly interactive 
games can lead to many problems, including inconsistent 
states, which affect game playability. This is even true for 
latencies as low as 100ms [1]. 
Another challenge that needs to be addressed is the 
interference caused by transmissions from two player 
devices within carrier-sensing range of each other.  While 
this challenge is intrinsic in any wireless network, the 
effects of interference and collision are particularly serious 
for multiplayer games over multihop wireless networks.  
First, retransmissions due to collision can further increase 
the end-to-end latency.  Second, a relay node in a multihop 
wireless network cannot receive and transmit at the same 
time (self-interference). 
In this paper, we address the latency issue by 
constructing the shortest spanning trees rooted at each 
phase, the coordinator gathers all players’ actions with 
timestamps, executes the game logic to have new game 
states, and then disseminates the new states to all players. 
The synchronized timers and the timestamps can guarantee 
game consistency among all players. 
 
Figure 1.  Three phases of SYMA 
IV. SYMA DESIGN DETAILS 
In this section, we show the design details of SYMA. 
A. Invitation phase design details 
In the invitation phase, the game initiator broadcasts an 
invitation message to invite other players to join a new 
game. The invitation message contains the identity of the 
game initiator, the hop count, the timestamp, the expiration 
time of the invitation message, and the game termination 
condition. The hop count of the message is initialized to a 
specific value MAX_HOP. The count is decreased by 1 
when the message traverses one link. The invitation 
message is rebroadcast by a node receiving it if the 
associated hop count is larger than 0. It is noted that the 
hop count set to MAX_HOP is used to control the scope of 
the invitation message dissemination.  
Upon receiving the invitation message, a player willing 
to join the game sends the game initiator a reply message, 
which contains the player’s ID, the player’s neighbor node 
list and the expected transmission time (ETT) value of 
every neighbor node, if the invitation message does not 
expire. Note that the ETT value can be used to estimate the 
link latency. After sending the reply message, the player 
waits for the start message to begin the gameplay. 
B. Construction phase design details 
In the construction phase, the game initiator first 
derives the topology of the ad hoc network of the 
participating players (or nodes) according to the players’ 
information gathered in the invitation phase. The topology 
is represented as an undirected topology graph G(V, E), 
where V={v1, v2, ...,vm} is the set of nodes joining the 
game, and E={e1, e2, ..., en} is the set of the symmetric 
communication links between all neighbor nodes. An 
example topology graph is shown in Fig. 2. The game 
initiator then builds a communication tree spanning all 
participating nodes on the basis of the topology graph. The 
root of the communication tree is designated as the 
coordinator that collects action reports from all players, 
executes the game logic and then announces game state 
updates to all players in the gameplay phase. By exploiting 
the fact that all node timers are synchronous, we can 
schedule time slots for each node to send/receive messages 
to eliminate possible collisions. Since there are two kinds 
of messages (i.e., action report messages and state update 
messages) traversing the communication tree, and the time 
slot schedule is affected significantly by the 
communication tree, it is critical to construct a tree to 
minimize the delay of both kinds of communications. 
1) Communication tree construction: We show the 
heuristic steps, which are executed by the game initiator, 
to construct the communication tree in this subsection. 
 
Figure 2.  An example of the topology graph 
(Step 1) Associate a length (or weight) to each edge: 
the length of an edge ei is calculated as the expected 
transmission time (ETT) for transmitting one action report 
message. Assume that e is the communication link 
between vi and vj, then the length of e is calculated as: 
      
1
       
 
  
   
,                                                            (1) 
where DA is the maximum size of the action report 
message, Bij is the average bandwidth between vi and vj, dij 
is the delivery ratio from vi to vj, and dji is the delivery 
ratio from vj to vi. Note that the parameters used in Eq. (1) 
can be measured explicitly by requesting every node to 
send several probing messages to its neighbor nodes, or 
can be measured implicitly by the invitation and the reply 
messages received in the invitation phase. 
(Step 2) Find the shortest path between every pair of 
nodes: the well-known Floyd–Warshall algorithm [4] is 
applied to obtain the shortest path between every pair of 
nodes based on the topology graph G(V, E), with each 
edge being associated with a length calculated by Eq. (1). 
(Step 3) Derive shortest path spanning trees: for each 
node vi, we construct the shortest path spanning tree T(vi) 
rooted at vi by integrating the shortest paths from vi to all 
other nodes obtained in step (2).  
(Step 4) Calculate EBT for each tree T(vi): EBT stands 
for the expected broadcast time for a message sent by the 
root node to reach every other node on the tree. It can be 
represented by the number of collision-free schedule time 
slots needed for the root node to disseminate a state update 
message to all other nodes. Ideally, the sibling nodes at the 
same tree level can issue the state update message 
simultaneously. However, collisions will occur if sibling 
nodes have common neighbor nodes. As shown in Fig. 3, 
for example, collision occurs at node v10 if both nodes v6 
and v7 deliver the state update message simultaneously. 
Therefore, the sibling nodes in this case should deliver the 
state update message in different time slots (i.e., extra time 
slots) to avoid collision. EBT is thus defined to be the tree 
height plus the estimated number of extra time slots. To 
calculate the estimated number of extra time slots, we 
define “fake parent nodes” as follows. A node vj is a fake 
parent (FP) node of node vi if vj is vis neighbor node and 
Invitation Phase: 
The initiator starts a new 
game and invites players 
to join the game  
Construction Phase: 
The initiator constructs a 
tree rooted at a node 
called the coordinator 
Gameplay Phase: 
The coordinator gathers 
player actions and 
controls the gameplay  
of game state update messages. Note that postponing the 
node having smaller EBT will not influence the global 
number of time slots needed for disseminating game 
update messages. Therefore, a node with larger EBT is 
scheduled earlier than the node with smaller EBT. After 
finishing the time slot assignment, the game initiator 
broadcasts to all joining players a game start message to 
announce the communication tree, the coordinator, the 
schedule, the gameplay start time, and the gameplay 
termination condition. On the gameplay start time, the 
coordinator takes over the control of the game execution. 
 
 
Figure 6.  An example of action report scheduling 
Algorithm StateUpdateScheduling 
Input: The communication tree T of height h rooted at r 
Output: The time slot scheduling of state updating for each node on T 
FOR each node v in T  //Every node sets each time slot as idle initially 
FOR x in 1..s  //s: the number of time slots 
//s should be large enough to accommodate all traffic 
v.slot[x] = IDLE;  //x: the index of time slots 
v.EBT = H(T(v))+                   
       
     
//T(v): the subtree of T rooted at v; H(T(v)): the height of T(v); 
//T(v, l): the set of all nodes at level l of the subtree rooted at v 
NSU =  
  
  
  //NSU: the number of slots used by state updating 
FOR x = 0..NSU1 //slot assignment for root node r and each of r’s child nodes 
r.slot[x] = TX; 
FOR each child node c of node r 
c.slot[x] = RX; 
FOR l = 2..h-1  //scheduling in a top-down manner 
FOR each node v in SortedEBT(l)  
//SortedEBT(l) returns the list of nodes in tree level l sorted decreasingly by EBT 
associated with the subtree rooted at each node 
p=parent(v);   //p is the parent node of node v 
sic = 1+ MaxSlotUsed(p); //sic: starting index of contiguous idle slots 
//sic is set to be one plus the maximum index of slots used by p 
cur = sic;  //cur: the index of the current slot for checking 
cont = 0;  //cont: the number of contiguous assignable slots 
WHILE cont < NSU  //find continuous assignable slots for state updating 
IF (uN(v): u.slot[cur]RX) and (uN(Child(v)): u.slot[cur]TX) 
//N(Child(v)) is the set of all neighbor nodes of v’s child nodes 
     cont ++;   
ELSE //collision may occur, current slot is not assignable  
sic = cur + 1;  //set sic to be one plus the current index 
cont = 0;  //reset the number of contiguous idle slots 
cur++; 
FOR x = sic.. sic+NSU1 //slot assignment for node v and each of v’s child nodes 
v.slot[x] = TX; 
FOR each child node c of node v 
c.slot[x] = RX; 
Figure 7.  Pseudo code of state update scheduling 
C. Gameplay phase design details 
In the gameplay phase, all player nodes transmit 
timestamped action report messages and state update 
messages for playing the game according to the 
communication tree and schedule constructed in the 
construction phase. As Fig. 8 shows, the coordinator 
controls the gameplay by (i) receiving action report 
messages from all other players, (ii) computing game logic 
to obtain the new game state, and (iii) sending state update 
message to all other nodes to announce the new game state. 
Each node sends game messages only in the time slots 
assigned by the collision-free schedule to eliminate 
collisions. Fig. 9 gives an example of using the schedules 
in Figs. 6 and 8 for game message exchange. Each action 
report message contains a time stamp, which records the 
value of the synchronized timers when the action occurs. 
The coordinator collects all action report messages in a 
round, sorts the actions by their time stamps, and then 
processes them, as shows in Fig. 10. If the synchronization 
error is smaller than the round length, the fairness and 
game state consistency can be guaranteed. 
 
Figure 8.  The illustration of game execution 
 
Figure 9.  An example of message exchange 
 
Figure 10.  An example of actions processing 
 
Action 
Report State Update 
Coordinator: 
to control gameplay 
D 
C 
A 
B 
E 
H 
G 
F 
I 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/21
國科會補助計畫
計畫名稱: 具容錯及保密能力之網路儲存系統
計畫主持人: 黃興燦
計畫編號: 99-2221-E-008-109- 學門領域: 平行與分散處理
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計畫共參與一個國際合作研究計畫，並發表四篇相關研討會論文，以下列表
是本計畫所發表論文的清單。我們認為本計畫的研究成果符合計畫之預期。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
