1 . Introduction
An easy way to represent combinatorial objects is the use of integer sequences encoding. To
generate objects efficiently, enumerating algorithms are postulated to run in O(1) time for each
generation and so that the number of changes between two consecutive sequences is bounded
by a constant. A recommendable choice to design enumerating algorithms uses the so-called
“loopless” technique (i.e., algorithms are implemented non-recursively by using, after the ini-
tialization of the first object, only assignment statements and “if-then-else” statements) [2, 10]
and such that the output sequences result in a Gray-code order [6].
Let F be a family of objects represented by integer sequences. The Gray-code graph of
F is a graph consisting of all sequences for objects in F as its vertices and two vertices are
connected by an edge if their corresponding sequences differ in exactly one position. A graph
is hamiltonian if it possesses a hamiltonian cycle. It is easy to see that enumerating Gray-
code (respectively, cyclic Gray-code) sequences for objects in F is equivalent to constructing
a Hamiltonian path (respectively, Hamiltonian cycle) in the Gray-code graph of F . Till now,
using diverse integer sequence representations, many researches have been devoted to the loopless
Gray-code enumeration of n-node binary trees and their generalization, i.e., k-ary trees for k > 2
(see, for example, [1, 4, 7–9, 12, 13]). By contrast, the study of enumerating cyclic Gray-code of
regular trees has received less attention except for [3,5]. In particular, it was mentioned in [5] that
the Gray-code graph of n-node binary trees has a less regular structure and a more complicated
induction is required to prove the existence of a Hamiltonian cycle.
A tree is said to be ordered if the relative order of the subtrees is fixed, and non-regular if the
degree (i.e., the number of subtrees) in internal nodes vary. Let S = (s1, s2, . . . , sn) be an integer
sequence where si > 2 for all i = 1, 2, . . . , n, and let T a non-regular ordered tree with n internal
nodes numbered from 1 to n in preorder list (i.e. visit the root and then recursively the subtrees
of T from left to right). S is called the branching sequence for T if the node with number i in
T has degree si, 1 6 i 6 n. For convenience, we say non-regular trees to mean the set of trees
having a given branching sequence. Recently, Wu et al. [11] defined a concise representation,
called right-distance sequences (abbreviated as RD-sequence), to describe non-regular trees, and
showed that the Gray-code graph of non-regular trees, represented by RD-sequences, contains
a Hamiltonian path. The proof is constructive and thus provides a Gray-code enumeration for
non-regular trees. In this note, we further extend the result and show that every Gray-code
graph of non-regular trees represented by RD-sequences is hamiltonian.
2
12
3
1
2 3
1
2
3
1
2
3
1
2
3
1
2
3
1
2
3
1
2
3
1
2
3
1
2 3
1
2 3
1
2
3
1
2
3
1
2
3
1
2
3
Figure 1: Non-regular trees with branching sequence (3, 4, 2).
(2) For every non-leaf node (i.e., a node not in the n-th level) with label ` in the newly created
level i, creates si + ` sons for it and label these sons by 0, 1, . . . , si + `−1 from left to right
in the (i + 1)-th level of TS .
Definition 3 Given a branching sequence S = (s1, s2, . . . , sn), the Gray-code graph of S, de-
noted as GS , is a graph whose vertices are the RD-sequences of non-regular trees with respect
to S, and two vertices are joined by an edge if and only if their RD-sequences differ in exactly
one position.
According to the above definition, the full labels along the path from the root to a leaf in
TS represent the RD-sequence of a non-regular tree. Figures 2(a) and 2(b) illustrate the coding
tree T(3,4,2) and the Gray-code graph G(3,4,2), respectively. The structure of GS is interesting
because the number of Hamiltonian paths in GS is at least 2n−1 [11]. In the rest, we will show
that GS is indeed Hamiltonian for any branching sequence S.
3 . Construction of Hamiltonian Cycles
To generate RD-sequences of non-regular tree of TS in Gray-code order (or equivalently,
constructing a Hamiltonian path in GS), the loopless algorithm proposed by Wu et al. [11] is
4
S′ = (s1, s2, . . . , sn−1). We shall present a way to construct a Hamiltonian cycle in GS . We first
observe that a set of vertices (d1, d2, . . . , dn−1, dn) with only the difference at dn forms a maximal
clique in GS and there exist m such maximal cliques. According to the flip-flap arrangement
of TS suggested by [11], we use K0,K1, . . . ,Km−1 to denote such maximal cliques from left to
right in the order. Since sn−1 > 2, each Kj contains at least two vertices. Let (i,Kj) stand for
the vertex (d1, d2, . . . , dn−1, i) if it belongs to the maximal clique Kj . Also, we define CKj as
the cycle (0,Kj)(1,Kj) · · · (|Kj | − 1,Kj)(0,Kj) in Kj . If |Kj | = 2, then CKj contains the two
edges ((0,Kj)(1,Kj)) and ((1,Kj)(0,Kj)) (Note that this case occurs only when sn−1 = 2). We
now combine such m cycles in the order to form a Hamiltonian cycle. For any two consecutive
cycles CKj and CKj+1 where j and j + 1 are taken modulo m, the concatenation is carried out
according to the following conditions.
Case 1: |Kj | = |Kj+1|.
Remove the edge ((|Kj |−1,Kj)(0,Kj)) in CKj and the edge ((|Kj |−1,Kj+1)(0,Kj+1)) in CKj+1 ,
respectively. And then, add the two edges ((|Kj |−1,Kj)(|Kj |−1,Kj+1)) and ((0,Kj)(0,Kj+1))
between Kj and Kj+1. Hence, CKj and CKj+1 are combined into a larger cycle.
Case 2: |Kj | 6= |Kj+1|.
Let t = min{|Kj |, |Kj+1|}. Remove the edge ((t − 2,Kj)(t − 1,Kj)) in CKj and the edge
((t− 2,Kj+1)(t− 1,Kj+1)) in CKj+1 , respectively. And then, add the two edges ((t− 2,Kj)(t−
2,Kj+1)) and ((t−1,Kj)(t−1,Kj+1)) between Kj and Kj+1. Similarly, a larger cycle containing
all vertices of CKj and CKj+1 is obtained.
In the above three cases, all adding edges are contained in GS because, for any two vertices
joining by such an edge, their labels differ in only one position. As a result, a Hamiltonian cycle
of GS can be constructed (see Figure 3(c) as an illustration). 
For S = (s1, s2, . . . , sn) with sn−1 > 3, there is another way to achieve a Hamiltonian cycle
in GS . We again use the arrangement of TS suggested by [11] to order the maximal cliques of
GS . Then, two vertices with the same last label dn in any two consecutive maximal cliques have
exactly one difference at the first n − 1 positions. Let P1 be the path passing through vertices
with labels (d1, d2, . . . , dn−1, 1) along the successive maximal cliques. Let P2 be the path passing
through the remaining vertices of GS under the following rules: (i) All vertices in a maximal
clique K consecutively occur in decreasing order (i.e., 0, |K| − 1, |K| − 2, . . . , 2) or increasing
order (i.e., 2, 3, . . . , |K| − 1, 0); (ii) The two types of orderings alternately appear in successive
maximal cliques; and (iii) For any two consecutive maximal cliques Ki and Ki+1, add edge
6
12
1 121 2 3 0 00
0
0
3 120 31 2 4 0 43 12 3 1251 2 43 0 004 31 23 12 51 2 43 00 05 124 30 6
4
3
1
2
3
2
4
3
1
2
3
1
2
4
3
1
2
5
4
3
1
2
3
1
2
4
3
1
2
4
3
1
2
5
0 0000 0 000
6
5
1
4
3
1
2
3
2
4
3
1
2
3
1
2
4
3
1
2
5
4
3
1
2
3
1
2
3
1
2
1
2
0 00 0 000
1
4 4
3
5
00
6
5
4
3
1
2
3
2
4
3
1
2
3
1
2
4
3
1
2
5
4
3
1
2
3
1
2
4
3
1
2
4
3
1
2
5
0 0000 0 000
6
5
1
Figure 3: (a) The coding tree T(3,2,4,3); (b) A Hamiltonian path in G(3,2,4,3); (c) A Hamiltonian
cycle in G(3,2,4,3) constructed by Theorem 1; (d) Another Hamiltonian cycle in G(3,2,4,3).
8
 2 
3/11下午 2:00既完成報到手續。 
 
3/12上午 10:00參加開幕演講。 
 
3/12下午認識與會之中國計量學院(浙江省杭州市下沙高教园区)副教授吳秀山。 
 
 
 4 
三、考察參觀活動(無是項活動者略) 
張教授和我參觀了 2010上海世博中國國家館及上海环球金融中心並合影留念，我們
對於上海市的進步與繁榮留下深刻的印象。 
 
 
 
 
 
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：吳若禹 計畫編號：99-2221-E-262-013- 
計畫名稱：指定分枝度的不規則樹格雷碼圖之漢米爾敦研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 3 3 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
