 2
 
Figure 1. System framework for radiation oncology knowledge sharing and e-learning  
 
 4
Digital 
microscope
Other medical 
modalities
RT 
Treatment 
planning
CT,MR, US, 
NM, CR, 
Angiography 
…
Browser (RID Display)
Easy for data viewing and manipulation 
Radiologist Pathologist Cardiologist Other UsersOncologist
RID 
Information 
Source
RID 
Information 
Source
RID 
Information 
Source
RID 
Information 
Source
RACS
server
Pathology
Report
RT 
Report
Report
Creator
HTTP protocol (Web services)
 
Figure 2.  IHE RID profile for accessing clinical documents. 
 
IHE RID profile contains two actors information source and display. Information source 
provides clinical exam results and display views all the results. RID utilizes http protocol 
for accessing clinical documents that stored in information sources. Clinical documents 
could be HTML, HL7 CDA, or PDF formats for presenting on browser. As demonstrated 
in figure 2, RID profile provided a simple mean for clinicians to access all the clinical 
exam data in a single interface (browser). RID like wed solution would be a proper 
architecture for next generation of medical information systems. Currently, many 
hospitals have following similar web architecture for accessing clinical documents. The 
only shortage is that web solution usually has limited functionalities comparing with 
conventional window applications. However, the shortage has gradually overcome by 
more powerful web technologies (RIA: Rich Internet Application). Browser with RIA 
web pages could be a powerful and unique user interface for handling sophisticated data 
and applications. It is worthy for investigating the RIA applications for healthcare.    
 
 6
[5]. In current WADO specification two MIME types, application/dicom and image/jpeg 
has been addressed. For providing powerful image viewing functionalities, most of web 
based PACS systems use application/dicom MIME type and provide plug-in components 
for handing DICOM objects that were loaded on browser. Although using plug-in 
components and handling DICOM objects on browser may have powerful image viewing 
functionalities, using plug-in components also cause lots of trouble in compatibility 
because we may use differ types and versions of browser.  
 
For compatible to different browsers, pure web solution that supports image/jpeg MIME 
type might be much more appropriate. And we will demo that the pure web solution with 
RIA technologies can also achieve powerful image viewing functionalities as that of 
window applications or plug-in web solutions. In our RIA solution, the DICOM objects 
would be loaded from PACS server to web interface system through DICOM 
query/retrieve protocols. And the DICOM objects will be dynamically turned to jpeg 
images according the parameters setting in HTTP request (example 3) in web server.     
 
http://140.129.64.226/WADORet/MR2S1IM4_R358_C358_WC500_WW1000.jpg?requestType=WADO&
StudyUID=1.2.840.113674.1118.54.200&SeriesUID=1.2.840.113674.1118.54.179.300&ObjectUID=1.2.84
0.113674.950809132638066.100&contentType=image/jpg&Rows=307&Columns=307&Region=0.2,0.2,0.
8,0.8&WindowCenter=500&WindowWidth=1000 
 
A HTTP requests with parameters for identifying the size and window level of specific 
image object.  
 
The format and parameters demonstrated in example 3 are following DICOM WADO 
specifications. The jpeg corresponding to specified image object will be generated 
according the image presentation parameters (Rows, Columns, Region, and 
WindowCenter\ WindowWidth) in a HTTP request. We can design RIA user interface to 
dynamically generate the HTTP request. When we adjust the image presentation 
parameters on browser, a JavaScript event function will dynamically initiate a HTTP 
request to web server. Web server will reconstruct jpeg image according parameters in the 
HTTP request. And server would response the jpeg image to browser. So, user can adjust 
the presentation of images on browser as that of conventional window application.  
 
 
 8
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 3b. The web interface shows a series of medical images that was selected when we 
click a button in the search results of figure 3a.     
 
 
As that demonstrated in figure 5b, we can view all the images on the webpage. We can 
also select a specific image for further editing, by clicking the 「Annotation」 button near 
by each image. Click the button will initiate an http request with image SOP instance 
UID to our RIA web server. The RIA server would response an image viewing and 
editing webpage that contains the selected image (Figure 4).   
 
 10
annotation results. The results must be saved on server when we click the save icon on 
menu bar. The second is that adjusting the window level and window width of a DICOM 
image. As that addressed in the method, each time when we set a new window 
width/level, a WADO http request with window width/level parameters would post back 
to web server. According the requested parameters, we server will regenerate a new jpg 
image and response the jpg image to browser. Consequently, window width/level is also 
adjustable in the web based image viewing solution. 
 
Viewing 3D RT images on web  
 
Not only 2D images, our web solution can also display 3D cross section images on web. 
A series of CT or MR cross section images can be piled up as a 3D voxel array in our 
web server.  Basing on the 3D array, 3 different axis views (transverse, coronal, sagittal) 
of 2D images can be reconstructed. And the results can also be presented on web 
(Figure7).    
 
 
Figure 5.  Left of the figure shows 3 axis views of a series of CT images. The locations 
of the cross section images can be adjusted by dragging the red lines on the RIA web 
page.  
 
 12
Discussion 
 
Pros and cons of web solutions for handling clinical contents 
Adopting web architecture for handling clinical contents has lots of benefits. It would be 
easy for integration. We can use HTTP protocols for integrating systems in heterogeneous 
and distributed healthcare environment. It may also have the potential for providing more 
powerful and convenience healthcare service through the integration of systems. And web 
solutions provide a well-known and unique user interface, the browser. We may change 
the interfaces layout by modifying HTML layout for domain specific requirements. 
Conventionally, web solution would be more difficult to implement and limited of 
functionalities comparing to window solution. However, the limitations have been 
overcome gradually (or rapidly) by RIA (Rich Internet Application) technologies. As the 
demonstrations in this paper, the RIA solutions can accomplish most of image viewing 
functionalities as that of conventional DICOM viewing systems. And we also have shown 
that using web technologies is more appropriate to handle huge size microscopic images 
than following current DICOM standards. The only drawback for using web architecture 
for handling medical images is that image processing and reconstruction must be 
accomplished in web servers.  Image processing would take lots of computation al effort. 
Traditionally, DICOM images are handled and processed in DICOM viewing systems. In 
RIA web solution, as shown in figure 8, DICOM images should be retrieved and handled 
in web server. And the web server must take lots of time in the jpeg image generation 
processes each time we want to view an image on browser. Not as conventional PACS 
viewing systems, server size (web server) take most of image processing effort in RIA 
solution. And this may constitute loading overhead when we put all the loading in a 
single web server. However, we may have many web servers to share the loading. If the 
clinical workflow requires lots of image processing efforts, such as image exam 
workflow in radiology department, we may even allocate web server in each image 
viewing workstation. So, DICOM images would be processed in the workstation as that 
traditional DICOM viewing system. This only different is that we view images using 
browser in the workstation. Other than radiology department, in most of clinical 
 14
data object is huge, it would take a lot of time for sending the whole data from server to 
client. So, real time response could not be accomplished by packaging the huge data as 
DICOM objects and using DICOM network protocols to transfer the data. Except for 
audio and video data, some medical images, such as digital microscope images, are very 
large. It is not suitable processed following DICOM standards also. As shown in our 
result, there already has web solution for handling the huge size image data. 
Consequently, web solutions may be used for handling lots of clinical data than 
conventional PACS. The architecture of web solutions for handling different kind of 
clinical contents may be as figure 6.   
 
 
Figure 6. Web solutions for accessing all medical contents. The medical contents may be 
stored in separate servers and processed in separate web systems. However, all the 
contents can be integrated and presented in a unique browser viewing interface.   
 
