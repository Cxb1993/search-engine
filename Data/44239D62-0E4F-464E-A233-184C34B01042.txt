to deploy energy-saving applications in large scale, 
price factor is not the major one. The changing 
application environment and design requirements also 
play a major role. How to adapt to the existing 
equipments with minimal modifications and integrate 
with new technology and low-cost equipments provides 
a big incentive for users. The large number of 
existing devices includes water meters, gas meters, 
actuators and other heat/cold source generators. 
These 
traditional devices are mostly of analog or 
mechanical type. This research provides an embedded 
software development framework that integrates the 
heterogeneous readers and sensors interfaces with an 
optimal energy control model to enhance the quality 
of digital home living environments. The framework 
allows rapid deployment of the supporting software 
for a suite of energy control and sensing devices 
aiming not only at energy saving but allowing 
individual residents to monitor their energy use at 
any time. This 
integration flow can also contribute to the carbon 
reduction goals of large energy-consuming units such 
as commercial buildings. Its economic benefits can be 
huge. 
 These classes are embedded with proper code 
segments. With suitable mapping, the control software 
is then generated to perform energy experiments. 
The experiments data shows consistent thermal 
performance between the original hand coded control 
software and the automatic generated software. The 
results prove that our framework has successfully 
integrated the requirement modeling tools with the 
energy saving patterns. The heterogeneous hardware 
interfaces library of Zigbee has been successfully 
integrated with the code generation modules to 
support cross compilation. 
英文關鍵詞： Energy saving pattern, automatic code generation, 
Zigbee interface generation, architecture mapping 
 
For this reason, it is necessary to develop a set of embedded 
software framework for meeting the different hardware 
requirements, system configuration and quick software turn 
around time.  This framework requires a lot of reusable 
components, system parameters setting that can be flexibly 
reset and adjustable functions that ensure a stable quality.  
This research integrates the embedded software framework 
(VERTAF & VMC)[13] and standard Zigbee component 
library under the Open Source Foundation of the National 
Science Council of Taiwan to construct an embedded 
software framework that is suitable for generating and 
configuring the Zigbee applications and can be repeated 
deployed in heterogeneous platforms.  In addition, the 
design accelerate the code generation with visual interface 
and pattern retrieval.  We, in this study, expect these 
features can provide a rapid prototype application 
development for Zigbee application designers. 
II.RELEVANT WORKS 
Table 1 describes the relevant framework researches 
and products internationally as well as its characteristics, 
and then compares with the work terms in this study one by 
one in order to understand the competitiveness of our 
techniques. 
Each product/technique has its own specialties. We 
compare their features using the indices such as pattern 
extraction, heterogeneous platform, power consideration 
and visual interface design and Zigbee standard compliance, 
etc.  The most similar product lines from this table are from 
eZeeNet and Arch. Rock.  eZeeNet is a powerful ZigBee 
software packages in accordance with IEEE 802.15.4 to 
allow the embedded wireless devices to have the self-
healing capabilities and self-organizing mesh network. It 
supports mesh and tree network topology and specifically 
develops a simple use of network sensing, control, 
monitoring and data access code. eZeeNet provides a 
friendly API adjuster for the wireless sensor network and 
smart power management, including data exchange, the 
network set up, node join, etc.  Arch Rock Corporation has 
proposed a new framework for running ZigBee application 
profiles such as Smart Energy and home automation over 
the industry-standard Internet Protocol (IP).  The Compact 
Application Protocol (CAP) expands the scope of the 
ZigBee applications to any IP-enabled device, regardless of 
the type of wireless or wired network, to which it is 
connected with IEEE 802.15.4 low-power radio, preserving 
the resource-efficiency and compactness critical to 
networked devices. 
By combining the pattern extraction of a Zigbee 
transformation engine, users are able to visualize the Zigbee 
application designs and modify the raw design to fit the 
customer demands.  The pattern provides a repository that 
take heterogeneous platform interface issues into raw model 
design.  These are all rare features amount many different 
relevant techniques. 
III.PATTERN BASED ZIGBEE SOFTWARE 
FRAMEWORK RESEARCH METHODS 
Our research methods integrate SysML, requirement 
modeling editor, Zigbee application design pattern, 
automatic code generation, and architecture model mapping, 
to aim at required tools for automated layout of Zigbee 
embedded software.  The integration process is as shown in 
Fig. 1.  The framework consists of two major modules, 
pattern extraction and code generation.  Pattern extraction 
and development are designed to provide Zigbee 
application model reuse and modification.  SysML serves 
as a medium between pattern development and code 
generation.  State diagrams and class diagrams help 
describes a specific application scenario.  These modeling 
mediums are then fed into the code generation engine of 
Quantum platform for code synthesis and generation.  
Zigbee application normally interfaces with different 
peripheral devices such as sensors and controllers.  Both 
automatic device API supports and library are integrated 
with the architecture mapping function of code gen. model.  
Now we introduce the content of each module and its role 
one by one.  After integration of the tool, we use the 
software tools to construct a smart shopping cart 
application for testing the integrity of the software 
framework tools. 
A.Pattern extraction/transformation 
Applying design patterns always makes the system easy to 
maintain, extend or resolve certain design issues [9], [10], 
[11].  Developers can apply a design pattern by a modeling 
tool to create the skeleton as represented in the brief 
structure of the pattern description instead of revising the 
original design.  The question is how do we confirm that the 
pattern is right and the usage is correct. If the developer 
does not understand the purpose or usage of a pattern 
clearly, it may cause design errors or inconsistency. 
In order to specify a pattern formally and apply a 
pattern by model transformation, we divide a pattern into 
six parts as presented in Fig. 2: 
The pattern transformation provides pattern designers to 
specify pattern refinement process in formal transformation 
language and revise a raw design to an enhanced design 
automatically. As a whole, system designers can pick up a pattern 
which is appropriate for improving a raw design from pattern 
repository, and the raw design conforms to the SF of the pattern.  
When developers select a pattern to apply, T is loaded in the 
transformation engine automatically. Based on T, a pattern is 
applied to the raw design which is converted to an enhanced 
design conforming to the SF automatically.  In general, the main 
components of a design pattern are intent and structure, and they 
should be consistent with each other as a well-designed pattern.  
The intent can be divided into functional requirement intent and 
non-functional requirement intent, we denote them by IF and IN, 
respectively. 
 
 
sending request signal to all the reference readers on the 
user’s body.  Given the hardware configuration in Fig. 4, a 
physical site to emulate the energy optimization scenario is 
setup as shown in Fig. 18.  This site features one air 
conditioner together with one ammeter connected to a 
Zigbee wireless transmitter, and a infrared emitter node also 
mounted on a standard Zigbee reader node.  Fig. 19 and 20 
are two enlarged figures of the ammeter and infrared nodes.   
Fig. 21 shows a visual display of the energy control in 
action of such site.  One Zigbee master node is serving as a 
communication platform between the Zigbee temperature 
sensors, while the other works as a current monitor for 
power consumption by the air conditioner.  The current 
consumption of both the air conditioner and the fan are 
constantly monitored.  Once user’s comfort level is low, the 
system can automatically issue the command to start the air 
conditioner.   The process is snap shot and shown in Fig. 21.   
The automatic code generation system is used to both 
generate the code and generate the makefile for compiling 
the executable to run on the Zigbee devices.  Given the 
system architecture and the interaction diagrams of Fig. 5, 6 
and 7, the participating class diagrams and sequence 
diagrams required for the system to run are drawn and 
modeled as shown in part in Fig. 8, 9, 10 and 11.  The code 
fragments appropriate for their roles are embedded with the 
modules using our tools.  The processes are illustrated in 
Fig. 12, 13, and 14.  After the system design, the code 
generator spits out the proper codes ready to be compiled.  
The processes are shown in Fig. 15, 16, and 17.  Fig. 15 
shows all the classes been generated from the tool.  Given 
these classes, the energy pattern can be built and stored for 
future uses. 
The proposed framework is used generate the code for 
serial of action and reaction between events such as 
temperature fluctuation and server broadcasting actuation 
command to start the air conditioner and fan for optimal 
comfort level.  The temperature and power consumption 
profiles as generated by both hand written code and model 
generated code are recorded as shown in Fig. 22 and 23.  
The closely similar pattern of both profiles indicate that our 
tool has successfully completed the goal in synthesizing the 
required component codes and function successfully in 
controlling the comfort level with minimum amount of 
energy consumption.  The stored energy efficient pattern 
can be reused at will for real world application of energy 
saving deployments.   
V.CONCLUSION 
This paper proposes and implements an automatic 
embedded software generation framework that can create 
and evolve a design pattern for Zigbee applications.  The 
design of such framework integrate SysML, requirement 
modeling editor, Zigbee application design pattern, 
automatic code generation, and architecture model mapping, 
to aim at required tools for automated layout of Zigbee 
embedded software.  The framework consists of two major 
modules, pattern extraction and code generation.  Pattern 
extraction and development are designed to provide Zigbee 
application model reuse and modification.  SysML serves 
as a medium between pattern development and code 
generation.  State diagrams, class diagrams and sequence 
diagram help describes a specific application scenario.  
These modeling mediums are then fed into the code 
generation engine of Quantum platform for code synthesis 
and generation.  An energy saving application has been 
implemented using the pattern based framework.  The 
closely similar pattern of power consumption profiles 
among hand written code and model derived code indicate 
that our tool has successfully completed the goal in 
synthesizing the required component codes and function 
successfully in controlling the comfort level with minimum 
amount of energy consumption.  The stored energy efficient 
pattern can be reused at will for real world application of 
energy saving deployments.  
 
This evidence proves the success of the framework 
development.  This example allows user to store the whole 
energy saving application scenario in the design pattern 
repository.  Further extension of this pattern can be done for 
other Zigbee applications such as patient health status 
monitoring in a hospital environment and item retrieval in 
large scale storage ware house, etc. 
ACKNOWLEDGMENTS 
Authors wishes to thank Dr. Chang of Hsiuping Institute of 
Technology for his help with requirement editing using 
Papyrus Framework.  The supports from National Science 
Council under grant number under NSC 99-2622-E-029 -
010 -CC3 are highly appreciated. 
 
Table 1. Relevant Zigbee frameworks 
  
V: With this function ；X: Without this function 
 Fig. 7 Sequence diagram of system operation scenario 
 
Fig. 8 State machine design process of the Ammeter board  
 
Fig. 9 State machine design process of the Zigbee master board 
 
Fig. 10 State machine design process of the energy monitoring 
devices consisting of ammeter node and Zigbee node  
 
Fig. 11 Energy optimization sequence diagram 
 
Fig. 12 Code insertion process within the Ammeter class 
 Fig. 19 Air conditioner ammeter device with Zigbee 
transmitter node 
 
Fig. 20 Infrared sensor node emitter 
 
 
 
 
 
Fig. 21  Zigbee master node at work collecting power 
consumption and temperature data from remote sensor 
nodes 
    
Fig. 22 Energy consumption profile of our integrated system 
controlled by the hand written code 
 
Fig. 23 Energy consumption profile of our integrated system 
controlled by the automatic generated code 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/12/29
國科會補助計畫
計畫名稱: 適用於居家節能之可重覆布設嵌入式軟體樣式
計畫主持人: 石志雄
計畫編號: 99-2622-E-029-010-CC3 學門領域: 資訊技術及系統整合
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
在諸多的節能減碳應用中，影響使用者大量採用節能設備之因素除價格因素之
外，多變的應用環境及設計需求也是主要因素。如何在盡量不更改既有設備情
況，整合新的低成本技術設備是一大誘因。這些既有大量設備如電表、水表、
瓦斯表，冷熱源產生器等。這些傳統設備多為類比式甚至為機械式，若能一方
面將這些能量讀值數位化及介面自動化，一方面以最佳化節能控制模型，發展
快速整合嵌入式軟體樣式(pattern)框架，對數位家庭生活之提昇有很大之助
益。不僅能讓個人居民對自己的能源使用隨時監控，調整用電用水習慣，對節
能減碳作出貢獻，對大公司或大耗能單位在對內部能源使用監控上更能發揮節
約能源費用之功效，其經濟效益可謂龐大。但要更換這些傳統設備，使之數位
化可謂耗費不低。同時如何讓這些讀值可以數位化，並且隨手取得，跟我們生
活中的常用裝置整合，如手機等嵌入式用品整合使用，皆需要大量的軟體撰寫
及測試。因此耗費大量人工及時間，且延誤 time to market 的耗費更可謂驚人，
往往損失更多的商機。802.15.4/ZigBee 是一種新的短距離無線通訊標準，具
有統一感測器、致動器、設備、資產追蹤設備的資料通訊方法的可能。它利用
電池供電設備的低資料率和低負載週期，提供構建可靠但成本可承受的網路。
若可研制出一套可針對傳統量表需要作系統組合，可快速布設及讀取耗能值並
通知使用者的嵌入式軟硬體架構，同時自行以最佳綜合性熱舒適度模型
(optimized Predicted Mean Vote Model)協調各能源致動器，如冷氣源、熱氣
源、風速計等，不僅可以節省人力也可偵測耗能點，進而達到節能減碳之目標。
此系統架構會研制 Zigbee 控制及傳輸介面一方面讀取傳統量表數據及控制能
源致動器，一方面修改相關能源控制模型抽及取軟體樣式進行資料庫建置，以
利後續使用者快速布設相關系統時之用。 
 本研究預計整合最佳舒適度模型及由國科會開發源碼計劃下的嵌入式軟體框
架(VERTAF&VMC)及標準 Zigbee 元件程式庫，建構一適用於 Zigbee 節能應用之
可重覆布設異質跨平台嵌入式軟體框架，以視覺化設計介面及節能 Pattern 的
淬取，以更一步加速節能設計速度，本研究預計綜整加入這些特色再與 Zigbee
標準 Zigbee 元件程式庫結合，提供 Zigbee 節能應用設計者一個快速節能應用
發展開發工具。 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
