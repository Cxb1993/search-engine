 2
中文摘要 
近年來，整合手機和手提式電腦的優點
而形成的智慧型手機已經變得越來越流行。
實際上，截至 2008 年底，手機惡意軟體已經
被偵測出超過 457 隻，以平均每月 6 隻的速
度增加，並透過各式各樣的方法迅速地傳
播。Cabir、Mabir 和 CommWarrior 等手機惡
意軟體已造成使用者隱私的洩漏、額外的服
務費用和電池耗盡等損害。手機惡意軟體的
出現已經造成行動設備資訊安全的威脅。因
此，行動安全已經成為資訊安全的重要議題。 
現階段行動平台上的安全議題大多著重
於防毒技術的開發，較缺乏全面性之考量。
目前相關研究針對手機病毒偵測技術的研
究，較少考量到病毒偵測技術對智慧型手先
天上硬體與效能不足的影響因素，如手機效
能、電量等。如何運用最少資源將防毒技術
應用於智慧型手機上並讓病毒偵測得到最大
發揮，是一項相當重要的課題。 
本研究欲利用行為分析、本體論、資料
探勘與模糊派翠網路等技術來克服上述的困
難，發展出在行動環境下兼具高效能與高偵
測率的惡意軟體偵測系統(mobile malware 
filter system, MMFS)。本研究以 Windows 
mobile 為平台，實作於 HTC HD2 手機平台
上，再透過實地實驗測試本系統的偵測能
力、系統效能及電池耗損率，經實驗測試，
本系統能克服行動環境的限制，偵測 85%以
上的手機惡意軟體，此實驗結果亦能供後續
研究手機惡意軟體偵測的參考。 
 
關鍵字：行動安全、智慧型手機、惡意軟體
偵測、本體論、模糊派翠網路 
Abstract 
Smartphones have recently become 
increasingly popular because they provide 
“all-in-one” convenience by integrating 
traditional mobile phones with handheld 
computing devices. In fact, hundreds of mobile 
malwares have emerged until 2008, which can 
quickly spread through various means such as 
SMS/MMS and Bluetooth. Mobile malwares 
like Cabir, Mabir and CommWarrior can cause 
the leakage of user privacy, extra service 
charges and depletion of battery power. Thus, 
mobile security had become an important issue. 
Presently, most of researches about malware 
are focus on detection techniques development. 
However, these studies ignore the limitations of 
the mobile devices (e.g. performance of CPU 
capability, memory size and battery capacity). 
In order to overcome those difficulties, the 
research develop a combinative high 
performance and detection of smartphone 
malware detection system under the mobile 
platform through utilizing behavioral analysis, 
ontology, data mining and fuzzy Petri net 
technology. The smartphone HTC HD2 with 
windows mobile 6.5 OS is an experimental 
environment. By experiment design, the 18 
mobile malware that propagate with MMS are 
used to test the detection capability and the 
resources and energy consumption in the 
detection process.  
Our experimental results give some 
practical and useful guidelines to mobile 
security researchers, so that they can acquire 
insight to develop more efficient detection 
techniques for mobile malware detection under 
the mobile environment. 
 
Keywords ： Mobile security, Smartphone, 
Malware detection, Ontology, Fuzzy Petri net  
 
1. Introduction  
Today, mobile devices have become 
convenient and often essential assistants in 
everyday life because they provide “all-in-one” 
convenience by integrating traditional mobile 
phones with handheld computing devices. As 
cell phones have evolved into smart phones and 
they become less expensive, more people are 
using devices which run sophisticated 
operating systems capable of downloading 
programs from the Internet, providing e-mail, 
instant messaging, worldwide short messaging 
service (SMS) and multimedia messaging 
service (MMS) communications, as well as 
containing flash-memory-card readers and 
short-range Bluetooth connections. 
Unfortunately, the increasing popularity of 
these devices and their features have attracted 
the attention of virus writers and provided 
 4
propagation pattern, and the change of a server 
into a client (Ellis et al., 2004). Khayam & 
Radha, 2005 developed a topologically-aware 
worm propagation model for stationary 
wireless sensor networks. MAC layer 
interference was incorporated into this model 
by specifying a constant infection rate when a 
worm spreads itself onto its neighbors. 
Mickens & Noble (2005) observed that 
traditional epidemic models fail to characterize 
worm propagation in mobile networks; 
therefore, traditional analytic models were 
modified to create a probabilistic queuing 
technique that accounted for movement and 
traffic patterns over various time durations. 
Zheng et al. (2004) focused on modeling 
population distribution density, Bluetooth 
radius, and node velocity.  Statistical 
Monitoring observes the logical ordering of an 
application’s actions over time. Cheng et al. 
(2007) introduced SmartSiren, a collaborative 
virus detection and alert system for smart 
phones. To detect viruses, SmartSiren collects 
the communication activity information from 
the smart phones and performs joint analysis to 
detect both single-device and system-wide 
abnormal behaviors. Taejoon & Shin (2005) 
proposed a filesystem (File system Monitoring) 
for checking file integrity, file attributes, or file 
access attempts. In monitoring file integrity, the 
agent yields message digests or cryptographic 
checksums for critical files, compares them 
against reference values, and verifies their 
differences. This system can be used for 
preventing the installation of malware, such as 
rootkits, Trojans, and other types of malicious 
codes. Energy is a critical resource for mobile 
devices. Similarly, energy usage of applications 
can be measured on a pocket PC running a Java 
virtual machine (Farkas et al., 2000). However, 
the limited battery-usage of mobile devices 
restricts their portability and applicability, a 
weakness which can be exacerbated by mobile 
malware’s targeting the depletion of battery 
energy. Power-monitoring malware-detection 
framework that monitors detects and analyzes 
previously unknown energy-depletion threats. 
For example, Kim et al. (2008) characterize 
power consumption patterns of events and 
designed two important system components to 
perform a comprehensive analysis of the 
detection accuracy for pinpointing the identify 
of events, as well as classifying them as 
malicious or normal. SMS/MMS and Bluetooth 
vulnerabilities analysis identified the 
vulnerabilities in Bluetooth and SMS/MMS 
messaging systems that may be exploited by 
future mobile malware and analyzed the 
existing mobile malwares to extract a set of 
their common behavior vector that can be used 
to develop mobile malware detection and 
containment algorithm. Investigating defenses 
to such malware is now gaining attention. Bose 
and Shin (2006) further model malware 
propagating through both MMS/SMS and 
Bluetooth vectors, parameterizing their analysis 
based upon real messaging workloads from a 
large mobile provider. Ruitenbeek et al. (2007) 
also investigate propagation of MMS/SMS 
malware and various responses, although 
within only a small user population with an 
unconstrained messaging server. Support 
Vector Machines (SVMs) support on-line 
reconstruction of potentially suspicious 
behavior from the run-time behavior of 
applications, so that the observed signatures 
can be matched against a database of normal 
and malicious signatures in order to detect 
malicious programs from their partial or 
incomplete behavior signatures. Bose et al. 
(2008) presented a behavioral detection 
framework for viruses, worms and Trojans that 
increasingly target mobile handsets and used 
SVM to train a classifier from normal and 
malicious data. Our evaluation of both 
emulated and real-world malware shows that 
behavioral detection not only results in high 
detection rates but also detects new malware 
which share certain behavioral patterns with 
existing patterns in database. Anomaly-based 
detection and monitoring is an approach how to 
monitor the state of the smart-phones to extract 
values that can be used for remote anomaly 
detection. The extracted features are sent as 
vector to a remote system, which can be used 
for artificial intelligence methods to detect 
abnormal behavior. Schmidt et al. (2009) 
demonstrate how to monitor a smart-phone 
running Symbian OS in order to extract 
features that describe the state of the device 
and can be used for anomaly detection methods 
that analyze the data for distinguishing between 
 6
line of tools developed at Stanford University 
for knowledge acquisition. Protégé 4.0 has 
thousands of users all over the world who use 
the system for projects ranging from modeling 
cancer-protocol guidelines to modeling 
nuclear-power stations. It helps knowledge 
engineers and domain experts to perform 
knowledge management tasks (Protégé 4.0, 
2009). We use Protégé 4.0 represent knowledge 
and try to map knowledge into a FPN reasoning 
model. 
 
3.2 Certainty Factor Theory 
This section introduces the basic principle of 
the certainty factory theory. It begins by 
defining the notation that we use and 
describing the terminology. A formal definition 
of the quantification function is then presented.  
The certainty-factor was introduced by 
Shortliffe and Buchanan as a method for the 
representation and manipulation of uncertain 
knowledge in the rule-based expert system 
MYCIN and later incorporated, in slightly 
modified form, in the prototypical rule-based 
expert-system shell EMYCIN (Shortliffe, 1976; 
Buchanan & Shortliffe, 1984). The basic idea 
underlying the method is that when 
representing knowledge as production rules of 
the form if e then hx, a measure of uncertainty x 
is associated with the hypothesis h, expressing 
the degree to which the observation of evidence 
e influences the confidence in h. In developing 
the certainty-factor model, Buchanan & 
Shortliffe have chosen two basic measures of 
uncertainty: the measure of belief MB[h, e] 
expressing the degree to which An observed 
piece of evidence e increases the belief in a 
hypothesis h, and the measure of disbelief 
MD[h, e], expressing the degree to which an 
observed piece of evidence e decreases the 
belief in a hypothesis h. Each of these measures 
lies in the closed interval [0, 1]. 
The measure of belief MB[h, e] and the 
measure of disbelief MD[h, e] are defined in 
terms of probability theory as relative changes 
with respect to the prior probability Pr(h), 
based on available evidence e. Note that since 
one piece of evidence cannot both favor and 
disfavor a single hypothesis, when MB[h, e] > 
0, MD[h, e] = 0, and when MD[h, e] > 0, MB[h, 
e] = 0. Furthermore, when P(h|e) = P(h), the 
evidence is independent of the hypothesis 
(neither confirms nor disconfirms) and MB[h, 
e], MD[h, e] = 0. These terms may be specified 
formally in follow: 
 
 
 




)(0,1max
)()(),|(max
1
],[
hP
hPhPehPehMB
 
otherwise
hPif 1)(   
(1)
 
 




)(0,1min
)()(),|(min
1
],[
hP
hPhPehPehMD
 
otherwise
hPif 0)(   
(2)
 
where P(h|e) and P(h) represent a conditional 
and a priori probabilities, respectively. 
In addition, we define a third measure, termed a 
certainty factor (CF), that combines the MB 
and MD in accordance with the following 
definition: 
 
],[],[],[ ehMDehMBehCF   (3)
 
For the manipulation of certainty factors, 
Buchanan and Shortliffe have defined a number 
of combination functions, expressed in terms of 
certainty factors. The combination functions for 
the propagation of uncertain evidence from the 
antecedent of a production rule to its 
consequences The function for combining two 
certainty factors CF(e1,e') and CF(e2,e') of two 
constituting pieces of evidence e1 and e2 to 
obtain a certainty factor for the conjunction e1 
and e2 of these pieces of evidence, as shown in 
the following: 
 
CF(e1 and e2 ,e') = in{CF(e1,e'),CF(e2,e')} (4)
 
For the disjunction of two pieces of evidence, 
we have the following formula: 
 
CF(e1 or e2 ,e') = ax{CF(e1,e'),CF(e2,e')} (5)
 
And, the combination function for combining 
two certainty factors CF(h, e'1) and CF(h, e'2) 
which have been derived from two 
co-concluding production rules is shown in the 
following: 
 8
in the form of a fuzzy IF-THEN rule in which 
both the antecedent and the consequent are 
fuzzy concepts denoted by fuzzy sets. To 
effectively represent both the fuzziness and the 
uncertainty in FPRs, several knowledge 
parameters such as certainty factor and 
threshold value have been incorporated into the 
FPRs (Chen et al., 1990). For example, one 
usually sees an FPR such as IF A AND B 
THEN C (CF) where A, B, and C are fuzzy sets 
and CF denotes the certainty factor. 
If the antecedent portion or consequence 
portion of a FPR contains "and" or "or" 
connectors, then it is called a composite fuzzy 
production rule. The composite FPR can be 
distinguished into the following rule-types 
(Chen et al., 1990; Looney & Alfize, 1987): 
Type 1: IF dj THEN dk (CF= μi). The fuzzy 
reasoning process of this type of rule can be 
represented by equation (7) 
     ijk PP  *  (7) 
 
Type 2: IF dj1 and dj2 and….and djn THEN dk 
(CF= μi ). The fuzzy reasoning process of this 
type of rule can be represented by equation (8) 
          ijnjjk PPPP  *,....,min 21  (8) 
 
Type 3: IF dj THEN dk1 and dk2 and….and dkn 
(CF= μi). The fuzzy reasoning process of this 
type of rule can be represented by equation (9) 
 
    ijk PP  *1  ,     ijk PP  *2  ,….     ijkn PP  *  (9) 
 
Type 4: IF dj1 or dj2 or….or djn THEN dk 
(CF= μi). The fuzzy reasoning process of this 
type of rule can be represented by equation (10)         ijnijijk PPPP  *,....*,*max 21 (10) 
Type 5: IF dj THEN dk1 or dk2 or….or dkn 
(CF= μi). The fuzzy reasoning process of this 
type of rule can be represented by equation (11) 
         ,.....*,* 2211 ijkijk PPPP  
    injkn PP  *.   (11) 
 
In addition, let ta be a transition, and pi, pj, 
and pk be three places. If pi ∈ I(ta) and pk ∈ 
O(ta), then pk is called immediately reachable 
from pi. If pk is immediately reachable from pi 
and pj is immediately reachable from pk, then pj 
is called reflexive transitive closure of the 
immediately reachable relationship. The set of 
places which is immediately reachable from a 
place pi is called the immediate reachability set 
of pi and is denoted by IRS(pi). The set of 
places which is reachable from a place pi is 
called the reachability set of pi and is denoted 
by RS(pi) (Chen et al., 1990). 
Using this simple mechanism, all the FPRs 
can be mathematically and graphically. By 
carefully connecting related place and 
assigning reasonable values of certainty factors 
to transitions, we can come up with an FPN 
that can make decision based on the expertise 
during its construction. 
 
4. An example of mobile malware reasoning 
In this section, we will adapt ontology to 
represent these behavioral patterns of these 
Smartphone viruses. A FPN model is 
constructed base on mobile malware behavior 
ontology. In order to describe the process of 
FPN, an example of mobile malware reasoning 
is included as an illustration. 
 
4.1 Data Set 
Since the arrival of the first mobile malware 
Cabir in June 2004, mobile malwares have 
been advancing steadily beyond their proof of 
concept probes and onwards to new goals. By 
July 2006 the mobile malware count had 
exceeded the three hundred mark and continues 
to rise in 2007. We analyzing the behaviors of 
35 kinds of major mobile malwares that various 
anti-virus firms described. There were no 
duplicate mobile malware in our data set and 
commercial virus scanner confirms every 
mobile malwares in the set. A full description 
of these behavior features can be found in (Shih 
et al., 2008). These behavioral descriptions of 
mobile malwares ontology involve many 
attributes and analytical characterization was 
performed in these malwares. Finally, we 
extracted a set of features to compose a feature 
vector from the mobile malwares behaviors as 
shown in Table 1. The entire mobile malware 
was discovered from 2004 to 2009 and 
investigated in F-secure security website. 
 10
 
Fig. 2. The ontology of mobile malware 
 
 
 
Fig. 3. The FPN model of mobile malwares 
 
4.3 An Example of Mobile Malwares 
Reasoning 
In order to apply the knowledge of ontology 
and FPN, we utilize the ability of reasoning in 
FPN. As illustrated in Fig. 3, our proposed FPN 
for mobile malwares reasoning has six inputs, 
seven middle states and one final state. The 
IRS and the RS for each place pi, pi ∈ P are 
shown in Table 2. The knowledge base of this 
rule-based system contains the following fuzzy 
production rules: 
 
R1: IF dl or d2 or d3 or d4THEN d8
R2: IF d4 or d5 or d7THEN d9 
R3: IF d4 THEN d10   
R4: IF d5 or d6 THEN d11  
R5: IF d6 or d7 THEN d12   
R6: IF d8 THEN d13 or d14 
R7 :IF d11 THEN d13 or d14
R8: IF d9 THEN d15  
R9: IF d10 THEN d15  
R10: IF d12 THEN d13 
R11: IF d13 THEN d15  
R12: IF d14 THEN d15 
 
 
Table 2. IRS and RS for Each Place in Fig. 3 
Place pi IRS(pi) RS(pi) 
p1 p2 p3 {p7} { p7 p12 p13 p14} 
p4 {p8 p10} {p8 p10 p12 p13 p14} 
p1 {p8} { p8 p14} 
p5 {p10 p11} {p10 p11 p12 p13 p14} 
p6 {p9 p10} {p9 p10 p12 p13 p14} 
p7 {p12 p13} {p12 p13 p14} 
p8 {p14} {p14} 
p9 {p14} {p14} 
p10 {p12 p13} {p12 p13 p14} 
p11 {p12} {p12 p14} 
p12 {p14} {p14} 
p13 {p14} {p14} 
p14   
 
All the mobile malware samples are encoded 
as binary code for the input of FPN. We can 
then obtain the malicious degree of mobile 
connection behaviors in smart phones by our 
reasoning process. For example, if mobile 
connection behaviors are encoded as [p1, 
p2…p14]  [1,0,0,0,0,0,1,0,0,0,0,1,1,1] where 
=1 is shown that the proposition is existence 
and =0 is inexistence. Let d1,…dl4 are the 
fourteen propositions of places p1, p2…p14, 
respectively. An example of mobile Malwares 
is shown in Fig. 4. In this example, β(p1) = d1, 
β(p2) = d2, β(p3) = d3 and β(p14) = d14, the 
places p1, p2, p3 and p14 are called the starting 
place and the goal place, respectively. The 
FPRs become active when their input places 
 12
Table 3. Testing results of new mobile malwares 
(“√”= detected) 
Malware Profile detected Malware Profile detected
WinCE.InfoJack.a √ SMS.WinCE.Redoc.g √ 
WinCE.InfoJack.b √ SMS.WinCE.Redoc.h √ 
WinCE.PMCryptic.a - SMS.WinCE.Redoc.i √ 
WinCE.InfoJack.c - SMS.WinCE.Redoc.j √ 
Virus.WinCE.Duts.a √ SMS.WinCE.Redoc.k √ 
WinCE.Brador.a √ SMS.WinCE.Redoc.l √ 
WinCE.Brador.b √ SMS.WinCE.Redoc.m √ 
SMS.WinCE.Redoc.f √ SMS.WinCE.Redoc.n √ 
 
5. Performance Evaluation 
In this study, we conduct a set of experiments 
to evaluate and analyze performance of our 
provider malware detection techniques in 
mobile environment. We design three kinds of 
experiments to evaluate detection capability, 
resources and energy consumption of our 
provider mobile malware filter system 
(MMFS).  
 
5.1 Evaluation of detection capability 
In the experiment, a mobile environment is 
built in our laboratory. The HTC HD2 
smartphone with windows mobile 6.5 operation 
system is adopted as the main test platform. We 
install and run our mobile malware filtering 
system (MMFS) on HTC HD2 smartphone. 
Then the other smartphones send files or 
messages to the HTC HD2 through MMS or 
SMS. The MMFS can automatic detection all 
files and message through extracting their 
behavioral characteristics. The system will 
determine whether the degree of dangerous of 
these behaviors. The experimental process is 
shown in Fig. 5(a), Fig. 5(b) and Fig. 5(c). In 
mobile environment, the other smartphones 
send messages to the HTC HD2. Then the 
MMFS started automatically detects the 
content and attachments of the MMS as shown 
in Fig. 5(a). When the system thinks that the 
MMS can be a malware, the warning message 
will remind users to pay attention to this MMS 
as shown in Fig. 5(b). If users confirmed that 
this message is dangerous, the system will 
refuse the MMS as shown in Fig. 5(c). 
 
 
Fig. 5(a). Another smartphones send messages 
to the HTC HD2. 
 
 
 
Fig. 5(b). The warning message remind users to 
pay attention to this MMS 
 
 
 
Fig. 5(c). The MMFS the refuse the MMS 
 
 14
Reference 
[1] A. Bernaras, I. Laresgoiti and J. Corera, 
“Building and reusing ontologies for 
electrical network applications”, Proc. 
European Conference on Artificial 
Intelligence (ECAI 96), pp. 298-302, 
Budapest, Hungary, 1996. 
[2] A. Bose and K. G. Shin. “On Mobile 
Viruses Exploiting Messaging and 
Bluetooth Services” Securecomm and 
Workshops, pp. 1-10, 2006. 
[3] A. Bose, X. Hu, K. G. Shin, and T. Park. 
“Behavioral Detection of Malware on 
Mobile Handsets” In Proc. of the 6th int’l 
conf. on Mobile systems, applications and 
services, pp.255-238, 2008. 
[4] B. G. Buchanan and E. H. Shortliffe, 
Rule-Based Expert Systems, the MYCIN 
Experiments of the Stanford Heuristic 
Programming Projects. Reading, MA: 
Addison-Wesley, 1984. 
[5] S. M. Chen, J. S. Ke, and J. F. Chang, 
“Knowledge representation using fuzzy 
Petri nets,” IEEE Trans. Knowledge Data 
Eng., vol. 2, pp. 311-319, Sept. 1990. 
[6] J. Cheng, S. Wong, H. Yang and S. Lu, 
“Smartsiren: virus detection and alert for 
smartphones,” In International conf. on 
mobile systems, applications, and services 
(Mobisys 2007), pp. 258-271, Jun. 2007. 
[7] Eric Chien, “Security responses: 
Backdoor.Brador.A, SymbOS.Skulls, and 
WinCE.Duts.A”, Symantec Corporation, 
2004. 
[8] O. Corcho, M. Fernández-López, and A. 
Gómez-Pérez, “Methodologies, tools and 
languages for building ontologies: Where is 
their meeting point?”, Data Knowledge 
Engineering, vol.46, no.1, pp.41-64, 2003. 
[9] Shane Coursen. “The future of mobile 
malware”. Network Security. Issue 8, pp. 
7-11, August 2007. 
[10] K., A., Dahlgren, "Linguistic ontology," 
International Journal of Human-Computer 
Studies 43, pp. 809-818, 1995. 
[11] D. R. Ellis, J. G. Aiken, K. S. Attwood, 
and S. D. Tenaglia. “A behavioral approach 
to worm detection”. In ACM Workshop on 
Rapid malcode (WORM), pp. 43-53, 2004. 
[12] K. Farkas, J. Flinn, G. Back, D. Grunwald, 
and J. Anderson. “Quantifying the energy 
consumption of a pocket computer and a 
java virtual machine”. SIGMETRICS: PER, 
vol.28, no.1, pp.252-263, June 2000. 
[13] P. Ferrie, P. Szor, R. Stanev, and R. 
Mouritzen. Security responses: 
Symbos.cabir. Symantec Corporation, 
2004. 
[14] A. Gostev. “Mobile Malware Evolution: 
An Overview”. Available: 
http://www.viruslist.com/en/analysis?pubid
=200119916. Kaspersky Lab’s Report on 
Mobile Viruses. September 2006. 
[15] M. Gruninger, and M.S. Fox, 
"Methodology for the design and evaluation 
of ontologies," in: Workshop on Basic 
Ontological Issues in Knowledge Sharing," 
Montreal, 1995. 
[16] Z. Kedad, and E., Metais, "Dealing with 
semantic heterogeneity during data 
integration. in: J. Akoka, M. Bouzeghoub, I. 
Comyn-Wattiau, E. Metais (Eds.)," 18th 
International Conference on Conceptual 
Modeling, Lecture Notes in Computer 
Science 1728, Springer, Paris, pp. 325-339, 
1999. 
[17] S.A. Khayam and H. Radha. “A 
topologically-aware worm propagation 
model for wireless senor networks”. In Proc. 
of the 2nd International Workshop on 
Security in Distributed Computing Systems 
(SDCS-2005), 2005. 
[18] H. Kim, Joshua Smith, Kang G. Shin. 
“Detecting Energy-Greedy Anomalies and 
Mobile Malware Variants”. 
[19] G. Lawton. “Is it finally time to worry 
about mobile malware?” Computer, vol.41, 
no.5, pp.12-14, May 2008.  
[20] D. B. Lenat, “CYC: a large-scale 
investment in knowledge infrastructure,” 
Communications of the ACM, vol.38, no.11, 
pp. 33-41, 1995. 
[21] D. B. Lenat and R.V. Guha, Building 
Large Knowledge-Based Systems: 
Representation and Inference in the Cyc 
Project, Addison-Wesley, Boston, 1990. 
[22] Xiaoou Li and Wen. Yu, Dynamic 
Knowledge Inference and Learning under 
Adaptive Fuzzy Petri Net Framework, 
IEEE Transactions on Systems, Man, and 
Cybernetics—PART C: Applications and 
Reviews, vol.30 no.4, pp.442-450, , 2000 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                            99 年 07 月 15 日 
報告人姓名 
 
姜琇森 
 
服務機構 
及職稱 
 
大葉大學 資訊管理學系 
助理教授 
     時間 
會議 
     地點 
2010/7/05~7/07 
The 2010 International 
Conference on Business and 
Information (BAI2010) 
Kitakyushu, Japan 
本會核定 
補助文號 
 
NSC 98 - 2218 - E - 212 - 002 - 
會議 
名稱 
 (中文) 商業與資訊國際研討會 
 (英文) International Conference on Business and Information 
發表 
論文 
題目 
 (中文) ECG 心律不整支援診斷技術評估之研究 
 (英文) A Comparative Study of Classification Techniques on Support 
Diagnosis of ECG Arrhythmia 
 
報告內容應包括下列各項： 
一、參加會議經過 
 
1. 7/04 與同事林清同博士及其博士生羅順年一起由桃園中正國際機場搭機前往日本，福
岡，於當天晚上9點入住於下榻飯店渡邊。 
2. 7/05 由日本，福岡搭車前往小倉，並入住麗嘉皇家飯店麗嘉皇家飯店(Rihga Royal Hotel)，
用過午餐之後，於當天下午至辦理報到與註冊等手續，領取BAI2010 Proceeding 與
Program，參加由研討會主辦之開幕相關活動，並與主辦單位台北大學商管學院研究生和
其他學者互動，其中與台北大學商學院院長方文昌博士、汪志堅博士等相談甚歡。 
 
 
 
參與BAI2010國際研討會並與方文昌教授合影 
 
 
附
件
三 
表 Y04 
 
各國學者論文發表 
 
4. 7/07 早上參與 8:20-10:00 (Session H4 Management Information Systems)的論文發表，
Session Chair 為 Gonzaga University 的 Ta-Tao Chuang 博士，由於部分學者未能及時前來參
與，因此，由 Ta-Tao Chuang 先行發表論文，A Web Analytics Tool Selection Method: An 
Analytical Hierarchy Process Benfit-Cost Analysis，其採用許多理論與資訊科技技術，找出資
訊管理層面與資訊科技層面的評估變數，再透過 AHP 法分析不同 Web Analytics Tool，已評
選出最適當的 Web Analytics Tool，幾位與會者給予建議與討論，自己本身覺得 Chuang 教授
尋找評估變數的過程非常嚴謹，引用著名期刊與重要理論，給我相當大的啟發，透過相同
的方法可以在軟體品質評估、社群網站評估等應用上，可以有進一步的評估研究。第二位
發表者為台南科大的 Chu-Ming Du 博士，發表 Study of Context-based Course Map 
Development Using Topic Maps，其透過課程內容與課綱分析來建立課程地圖的方法，非常
具有創意，也獲得熱烈的討論，如課程的階層、路徑與關係的建立等議題，皆是大家討論
的焦點。接著由於大葉大學任教的Hsiu-Sen Chiang博士，即是本人，發表A Comparative Study 
of Classification Techniques on Supporting Diagnosis of ECG Arrhythmia 此篇論文，同樣引起
熱烈的討論，其中對於 ECG 圖型資料的特徵擷取最是引起大家的興趣，無論是時間的切格，
特徵的決定等過程獲得相當大的回饋與建議，此外，ECG 樣本數量不足亦是大家討論的重
點，在此次的討論中，自己獲得相當多的寶貴建議，並和與會者討論熱烈，會後 Chu-Ming Du
博士更是對 ECG 支援診斷研究非常有興趣，相互討論並相約是否有合作研究的空間。Tea 
break 之後，參與(Session I4 Management Information Systems)的議程，對於 Mining Customer 
Behavior Change Model for Fuzzy Quantitative Sequential Patterns 此篇論文 Fuzzy Theory 的使
用頗感興趣，接著由於必頇飯店必頇 check out，提早離開此議程，打包行李交由旅行團，
準備離開小倉開車前往福岡。午餐過後，配合旅行團搭車前往福岡龜之和旅館，結束 BAI2010
研討會的參與。 
 
 
1 
 
A COMPARATIVE STUDY OF CLASSIFICATION TECHNIQUES ON 
SUPPORTING DIAGNOSIS OF ECG ARRHYTHMIA 
 
 Hsiu-Sen Chiang
1
, Chien-Yuan Lai
2
 Ching-Chiang Chen
2
 Dong-Her Shih
2
  
1
Department of Information Management, Da-Yeh University,  
168, university Rd., Dacun, Changhua, 51591, TAIWAN 
2
Department of Information Management, National Yunlin University of Science and Technology  
123, Section 3, University, Road, Dauliu, Yunlin, Taiwan 
chianghs@mail.dyu.edu.tw, {g9723802, g9723803, shihdh}@yuntech.edu.tw, 
 
 
ABSTRACT 
Electrocardiography is considered a representative signal of cardiac physiology, useful in 
diagnosing cardiac disorders. However, the most difficult problem faced by today’s automatic 
ECG analysis is the large variation in the morphologies of ECG waveforms, not only of different 
patients or patient groups but also within the same patient. Therefore, the ability to automatically 
identify arrhythmias from ECG recordings is important for clinical diagnosis and treatment. The 
goal of this paper is to examine the classification capabilities of various data mining and machine 
learning techniques and suggest which are most likely to be suitable for the clinical setting. Over 
the past years, many data mining and machine learning techniques have been applied to the 
classification accuracy of ECG signals for computationally efficient early diagnosis. These 
methods are chosen since each has a different physical basis and thus extracts and uses time 
series information in a different way. In this paper, we conduct two experiments to evaluate and 
analyze performance of those techniques. The ECG signals taken from MIT-BIH ECG database 
and various evaluation criteria, are used in evaluate performance of the techniques. Our 
experimental results give some practical and useful guidelines in the recognition and 
classification of different type heart beats. 
 
Key words: ECG Arrhythmia, Associative Petri Net, Data mining, Machine learning 
2 
 
2. BACKGROUND AND RELATED WORK 
An ECG is a graphic produced by an electrocardiograph, which records the electrical voltage in 
the heart in the form of a continuous strip graph. It is the prime tool in cardiac electrophysiology, 
and has a prime function in screening and diagnosis of cardiovascular diseases. A single normal 
cycle of the ECG represents the successive arterial depolarization and ventricular repolarization, 
which occurs with every heartbeat. These can be approximately associated with the peaks and 
other ECG waveforms, which labeled P, Q, R, S, and T (McSharry et al., 2003). Recently, 
different characteristic, such as P, T, U waves and PQ, QRS, ST segments, are also used for 
diagnostics (Singh & Tiwari, 2006). 
Automated classification of heartbeats has been previously reported by other investigators using 
a variety of features to represent the ECG and a number of classification methods. Features 
include RR-Interval features, heartbeat interval features and ECG morphology features (Philip et 
al., 2004), ST segment deviation, ST segment slope, ST segment area, T-normal amplitude 
(Exarchos et al., 2006), ST segment area (STA), R-S interval (RSI), ST-slope (STS), R-T interval 
(RTI), QRS area (QRSA), Q-T interval (QTI), R-wave amplitude (RWA), heart beat rate (HBR), 
statistical features QRS energy (QRSE), mean of the power spectral density (MPSD), 
auto-correlation coefficient (ACC), signal histogram (SH) (Hosseini et al., 2006), discrete 
Fourier transform coefficients (DFT) (Dokur & Ö lmez, 2001), statistical features of the QRS 
complexes (Osowski & Linh, 2001), Hermite coefficients (Linh et al., 2003), shift–invariant 
(Yeong et al., 2006), continuous wavelet transform coefficients (Andreao et al., 2006), QRS 
complex wave width (Zhou et al., 2005), amplitude value, DCT coefficients, DWT coefficients 
(Acir, 2006), and DWT coefficients (Engin, 2004; Inan and Ü beyl, 2005). 
In addition, the classification of heartbeats is an important step toward identifying an arrhythmia. 
Classification methods employed include linear discriminants (Osowski & Linh, 2001), 
association rules (Exarchos et al., 2006), neural network (Hosseini et al., 2006; Dokur & Ö lmez, 
2001; Inan and Ü beyl, 2005), fuzzy neural network (Osowski & Linh, 2001; Linh et al., 2003; 
Yeong et al., 2006; Engin, 2004), hidden Markov models (Andreao et al., 2006), mirrored Gauss 
model (Zhou et al., 2005), artificial immune recognition system (Polat et al., 2006) and support 
vector machine (Acir, 2006) have been previously reported, with the most common being the 
neural and the rule-based ones.  
 
3. MATERIALS AND METHODS 
In this section, we will describe the basic concepts of five types of methods are used to train and 
build classifiers model: Decision tree (DT), Support vector machines (SVM), and Associative 
Petri net (APN). Nevertheless, the MIT-BIH Arrhythmia Database is used for ECG Arrhythmia 
classification and it provides us to compare the performance of those methods. 
4 
 
1) Decision tree 
The decision tree has become a popular tool for several reasons (Rastogi & Shim, 1998): (a) 
compared to neural networks or a Bayesian based approach, it is more easily interpreted by 
humans; (b) it is more efficient for large training data than neural networks which would require 
a lot of time on thousands of iterations; (c) a decision tree algorithm does not require a domain 
knowledge or prior knowledge; and, (d) it displays good classification accuracy as compared to 
other techniques. A decision tree like C5.0 is a flow-chart-like tree structure, which is 
constructed by a recursive divide-and-conquer algorithm that generates a partition of the data. In 
a decision tree, each internal node denotes a test on an attribute, each branch represents an 
outcome of the test, and each leaf node is associated with a target class. The topmost node in a 
tree is called the root, and each path forming from the root to a leaf node represents a rule. 
Classifying an unknown example begins with the root node, and successive internal nodes are 
visited until this example has reached a leaf node. Then the class of this leaf node is assigned to 
this example as a prediction. The C5.0 decision tree deals with continuous independent variables 
without branch limitations and uses a boosting technique to generate and combine multiple 
classifiers and thus improve predictive accuracy (Quinlan, 1986). For our experiments, the C5.0 
of the algorithm yielded optimal result of classification.  
 
2) Support vector machines 
Support vector machines (SVM) are a relatively new machine learning algorithm introduced by 
Vapnik (Vapnik, 1995). They are based on the statistical learning theory of structural risk 
management, which aims to limit the empirical risk on the training data and on the capacity of 
the decision function. SVMs are built by mapping the training patterns into a higher dimensional 
feature space where the points can be separated using a hyper-plane. There are two kernels 
available: polynomial, and radial basis function (RBF). The RBF performed better on our data 
set. The RBF kernel is defined as:  
 
(1) 
Optimal values for the width of the RBF function,  and the cost parameter C, can be found by 
performing a grid search on the training data.  
 
3) Associative Petri Net (APN) 
In the recent years, fuzzy Petri nets have started to gain in importance in the areas of knowledge 
representation and expert systems. However, a generalized associative Petri net has been 
proposed to express the relationships between propositions more practically than fuzzy Petri net 
(Chen et al., 1990). The concept of APN is derived from FPN. FPNs have also an inherent 
6 
 
images while preserving edges, by means of a nonlinear combination of nearby image values 
(Elad, 2002). The definition of bilateral filter is defined below: 






w
wn
w
wn
nkW
nkXnkW
kX
),(
)(),(
)(ˆ
 
(2) 
where )(ˆ kX  is the original signal, )(ˆ kX  is the smoothed signal, w is the width of the filter W(k, 
n). W (k, n) is the kernel function of the bilateral filter, which is the product of two Gaussion 
smooth functions and can be expressed as: 
),(),(),( nkWnkWnkW RS   (3) 
where 









2
2
2
exp),(
S
S
n
nkW 
 
(4) 
is the Gaussion kernel in the spatial domain, and 
 





 

2
2
2
)()(
exp),(
R
R
nkXkX
nkW

 (5) 
is the Gaussion kernel in the intensity domains. 
The sampling size of our data set has been estimated by the population ratio (Mendenhall & 
Beaver, 1994): 
2
2
2/ )1(
e
PPz
n

   
Where n is the sampling size, P is the estimator, e is the sampling error, α is the confidence 
coefficient and z is the standard normal probability distribution. Since there is no further study in 
the estimation of an ECG beat will be the abnormal beat’s probability (P will never be known 
exactly). Therefore, we use non-constant number sampling to obtain the abnormal beat’s 
proportion of population in ten time’s trial, which is shown in Table 2. From Table 2 we can 
obtain an abnormal beat’s estimator (population proportion expected value)  
 
P=

10
1
*
i
ii PC
=0.0611844 
 
Substitute P value, with 0.95 confidence levels and 0.02 sampling error, the sampling beat’s size 
n would be 553. By sampling beat in different group, as shown in Table 3, we obtained 553 beat 
(with 120 normal and 433 abnormal) in our sampling data set. About two-thirds (67.5%) of the 
data set are training data that used to training knowledge model and one-third (32.5%) of the data 
set are used to evaluate the model. 
 
 
8 
 
 
Table 4. Features of heartbeat and its description 
Number Features Description 
1 RH R wave amplitude. 
2 PH P wave amplitude. 
3 QH Q wave amplitude. 
4 SH S wave amplitude. 
5 TH T wave amplitude. 
6 PR PR Interval. 
7 QS QRS wave duration. 
8 ST ST Interval. 
 
The selection of suitable features is important in enhancing the preferment of ECG automatic 
classification. Some researchers use different features in frequency domain and others calculate 
the features in the time domain. From our experiences, we found that the features listed in Table 
4 can presented a better performance in our prototyping. 
 
4.3 Transfer function building 
In APNs, all the propositions are represented by unique places, while the degree of truth of that 
particular proposition is represented by the truth value of the token. APRs can be mathematically 
and graphically. And, the relationships between different propositions can be expressed by a 
transition and its associated parameters. The consequence portion of an APR is affected by all of 
connected antecedent portion of an APR. Since original attributes can’t represent the degree of 
truth of that particular proposition perfectly, if the token enter the unique place, we give the 
degree of truth of each proposition through fuzzy membership functions. 
To subdivide our data set into membership functions, we determine a threshold line with entropy 
minimization screening method (Christensen, 1980), and then start the segmentation process. We 
can gain the degree of truth of each feature under some states through the fuzzy membership 
function (Ross, 2000). Each of the features is partitioned into three clusters, high, median, and 
low. The fuzzy membership functions of all features are shown in Appendix A. The truth of each 
feature of heartbeat is repressed by fuzzy membership functions through the training data. By 
Fuzzy cutting those features, we can obtain a set of the membership degrees and linguistic 
variables for the type of heartbeats reasoning.  
 
4.4 Beat classification 
In the classification stage, C5.0, SVM, and APN are used to classify the feature vectors into the 
following category pairs: normal/abnormal heart beat and 11 different types of heart beat. Two 
10 
 
5. EXPERIMENTAL RESULTS 
The MIT-BIH arrhythmia database was used for the evaluation of our presented method. This 
section describes two face classification experiments. In experiment 1, C5.0, SVM, and APN 
classify faces into the classification pair of normal heartbeat/abnormal heartbeat. In experiment 2, 
those methods are used to classify faces into the classification of Multi-cluster heartbeat types 
are shown Table 6 and are compared with several pioneering studies.  
In order to evaluate the performance of our proposed method, the measuring criterion is defined 
as follow:  
True Positives (TP): Number of correct beats classified as correct cluster.  
True Negatives (TN): Number of incorrect beats classified as incorrect cluster.  
False Positives (FP): Number of incorrect beats classified as correct cluster.  
False Negatives (FN): Number of correct beats classified as incorrect cluster.  
And, overall accuracy is defined with equation (TP +TN) / (TP +FP + FN + TN). 
In our evaluation, we use 368 cases in training three kinds of classification methods and 185 
cases for testing from sampled data set of Table 3.  
 
Experiment 1 
In experiment 1, C5.0, SVM, and APN are used to classify faces into two categories: normal 
cluster and abnormal cluster. The abnormal cluster consisted of all the clusters 2, 3…11 are 
shown in Table 1. Table 5 shows the results of the C5.0, SVM, and APN. The best Detection 
Rate (97.5%) is obtained using SVM. The C5.0 has the lowest False Positive Rate and better 
overall accuracy rate. In general, however, C5.0 has the best overall classification performance. 
 
Table 5. Comparative results of normal beat and abnormal beat recognition 
 TP TN FP FN Detection Rate False Positive Rate Overall Accuracy 
APN 
SVM 
C5.0 
38 
39 
32 
119 
120 
134 
26 
25 
11 
2 
1 
8 
95.00% 
97.50% 
80.00% 
17.93% 
17.24% 
7.59% 
84.86% 
85.95% 
89.73% 
 
Experiment 2 
Table 6 summarizes the comparative results of the accuracy of beat recognition with C5.0, SVM, 
and APN. Referring to Table 6, the best classification score of cluster 1 is 89.73% and cluster 2 is 
95.68%, using C5.0 and APN, respectively and so on. Comparing all clusters with SVM and 
APN, the C5.0 gains the better performance. Recall that C5.0 provided the best overall 
classification score in experiment 1 as well. C5.0, therefore, is probably the best selection for 
classifying ECG heartbeats. 
12 
 
ACKNOWLEDGEMENT:  
The author would like to give thanks to the National Science Council of Taiwan for grant 
NSC 98-2218-E-212-001 to part of this research 
 
REFERENCES 
[1]. K. Polat and S. Günes, Detection of ECG arrhythmia using a differential expert system 
approach based on principal component analysis and least square support vector machine, 
Applied Mathematics and Computation, pp. 898–906, 2007. 
[2]. R. Hoekema, G. J. H. Uijen, and A. v. Oosterom, “Geometrical aspects of the interindividual 
variability of multilead ECG recordings,” IEEE Trans. Biomed. Eng., vol. 48, no. 5, pp. 
551–559, May 2001. 
[3]. K. Minami, H. Nakajima, and T. Toyoshima, “Real-Time discrimination of ventricular 
tachyarrhythmia with Fourier-transform neural network,” IEEE Trans. Biomed. Eng., vol. 
46, no. 2, pp. 179–185, Feb. 1999. 
[4]. S.C. Saxena, V. Kumar, and S.T. Hamde, Feature extraction from ECG signals using wavelet 
transforms for disease diagnostics, Int. J. Syst. Sci. 33 (13), pp.1073–1085, 2002. 
[5]. J. Garcia, I. Martinez, L. Sornmo, S. Olmos, A. Mur, and P. Laguna, “Remote processing 
server for ECG-based clinical diagnosis support,” IEEE Trans. Inf. Technol. Biomed., vol. 6, 
no. 4, pp. 277–284, Dec. 2002. 
[6]. I. Güler, and E.D. Ü beyli, ECG beat classifier designed by combined neural network model, 
Pattern Recogn. 38 (2), pp.199–208, 2005. 
[7]. P. E. McSharry, G.D. Clifford, L. Terassenko and L.A. Smith, “A dynamical model for 
generating synthetic electrocardiogram signals,” IEEE Trans. Biomedical Engineering, Vol. 
50, Issue 3, pp.289–294, Mar. 2003. 
[8]. N. Singh and A. K. Tiwari, “Optimal selection of wavelet basis function applied to ECG 
signal denoising,” Digital Signal Processing, Volume: 16, Issue: 3, pp. 275-287, May 2006. 
[9]. C. Philip de, M. O'Dwyer and R.B. Reilly, “Automatic Classification of Heartbeats Using 
ECG Morphology and Heartbeat Interval Features,” IEEE Transactions on Biomedical 
Engineering, Vol. 51, Issue 7, pp.1196 – 1206, July 2004. 
[10]. T. P. Exarchos, C. Papaloukas, D. I. Fotiadis, and L. K. Michalis, “An Association Rule 
Mining based Methodology for Automated Detection of Ischemic ECG Beats,” IEEE 
Transactions on Biomedical Engineering, Vol. 53,  Issue 8, pp.1531 – 1540, Aug. 2006. 
[11]. H. G. Hosseini, D. Luo and K. J. Reynolds, “The comparison of different feed forward 
neural network architectures for ECG signal diagnosis,” Medical Engineering and Physics, 
14 
 
404-415, 1998. 
[25]. J. R. Quinlan, “Induction of decision trees,” Machine Learning, Vol. 1, No. 1, pp. 81-106, 
1986. 
[26]. V. Vapnik, “The Nature of Statistical Learning Theory,” Springer-Verlag, 1995. 
[27]. H. Shih, H. S. Chiang and B. Lin, “A Generalized Associative Petri Net for Reasoning,” 
IEEE Transactions on Knowledge and Data Engineering, Vol.19, No.9, pp1241-1251, 2007. 
[28]. S. M. Chen, J. S. Ke, and J. F. Chang, “Knowledge representation using fuzzy Petri nets,” 
IEEE Trans. Knowl. Data Eng., vol. 2, no. 3, pp. 311-319, Sep. 1990. 
[29]. R. Agrawal, T. Imielinski, and A. Swami, “Database Mining: A Performance Perspective,” 
IEEE Trans. Knowledge and Data Eng., vol. 5, no. 6, pp. 914-925, Dec. 1993. 
[30]. M. Elad, “On the Origin of the Bilateral Filter and Ways to Improve It,” IEEE Transactions 
on Image Processing, Vol. 11, No. 10, pp.1141-1151, 2002. 
[31]. W. Mendenhall and R. Beaver, Introduction to Probability and Statistics, Duxbury Press, 
USA, 1994. 
[32]. R. Christensen, Entropy Minimax Sourcebook, vol. 1–4, Lincoln, MA: Entropy Ltd. 1980. 
[33]. T. J. Ross, Fuzzy Logic with Engineering Applications, McGraw-Hill, USA, 2000. 
APPENDIX A: FUZZY MEMBERSHIP FUCTION OF FEATURES 
Index Term Membership function Index Term Membership function 
RH 
High 






7027.0
8311.2
1
)( xxH
  
4797.21284.2
1284.2


x
x
 
TH 
High 






3784.0
6284.1
1
)( xxH
  
4392.125.1
25.1


x
x
 
Median 











8784.0
7095.3
7027.0
)1284.2(
)(
x
x
xM
  
27005.38311.2
8311.24797.2


x
x  
Median 











1081.1
7365.2
3784.0
)25.1(
)(
x
x
xM
  
1824.26284.1
6284.14392.1


x
x  
Low 







1
8784.0
)8311.2(
)(
x
xL
  
7095.3
7095.327005.3


x
x
 
Low 







1
1081.1
)6284.1(
)(
x
xL
  
7365.2
7365.21824.2


x
x  
PH 
High 






1351.0
5.1
1
)( xxH
  
43245.13649.1
3649.1


x
x
 
PR 
High 





1106.0
1132.0
1
)( xxH
  
05789.00026.0
0026.0


x
x
 
Median 











277.0
777.1
1351.0
)5.1(
)(
x
x
xM
  
6385.15.1
5.143245.1


x
x  
Median 









0684.0
1816.0
1106.0
026.0
)(
x
x
xM
  
1474.01132.0
1132.005789.0


x
x
 
Low 







1
277.0
)777.1(
)(
x
xL
  
777.1
777.16385.1


x
x  
Low 



 

1
0684.0
1132.0
)(
x
xL
  
1816.0
1816.01474.0


x
x
 
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
研發成果擬繼續發展並尋求廠商合作 
研究結果已發表一篇研討會，正在撰寫成果，預計投稿國際期刊 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
