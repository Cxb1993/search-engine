I中文摘要
彈性零工式工廠 (Flexible job shop) 為一多階段 (multi-stage) 之製造系統，允許
每項產品有各自的製造流程，且每道製程 (operation) 有兩部以上的機台可供選
擇。彈性零工式工廠排程問題兼具路由 (routing) 和排序 (sequencing) 兩個子問
題，在學理上屬於 NP-hard 問題，而在實際應用上也符合多種製造業之模型，故
頗具研究價值。近年來多目標排程廣受排程領域研究者重視，相關研究也逐漸增
加。本計畫提出一個基於演化式演算法 (evolutionary algorithm) 的多目標排程方
法，本方法的特色在於設計簡單，和既有方法動輒 5~10 個參數相比，本方法僅
使用 2 個參數，免去使用者調校參數的負擔。在演化式演算法的設計上，維持物
種多樣性 (diversity) 是個重要課題。本方法使用適應性 (adaptive) 方式來產生初
始化族群以提供充足的物種多樣性，並以兼顧集中搜尋 (exploitation) 和分散搜尋
(exploration) 的機制來改善族群中相近的個體解。以 15 個經典測試問題作為測試
基準，和 7 個現行排程法的求解結果相比，本方法是唯一能求取 70% 以上非凌
越解 (non-dominated solution) 的排程法。
關鍵字： 彈性零工式工廠排程、多目標最佳化、演化式演算法
1一、 前言
生產排程是製造系統中相當重要的一個環節，良好的生產排程可以提高生產效率、縮短
生產週期、降低生產成本，以因應快速多變的市場需求，維持製造公司之競爭力。生產排程
問題可視為一種離散最佳化問題，其問題複雜度為 NP-hard (Garey et al. 1976; Mati and Xie
2004)。啟發式演算法 (metaheuristics) 為求解最佳化問題的一種常用解法，並在生產排程領
域有廣泛的應用。演化式演算法 (evolutionary algorithms) 為啟發式演算法中的一類方法，本
計畫主持人對於應用演化式演算法求解生產排程問題有濃厚興趣，過去曾成功應用於零工式
工廠 (job shop)、流線型工廠 (flow shop)、平行批次機台 (parallel batch machine) ) 等多種生
產系統之排程問題。在本計畫中，我們將求解零工式工廠之延伸模型 – 彈性零工式工廠
(flexible job shop) 的排程問題。
二、 研究目的
在零工式工廠中，每道製程僅有一部可用機台，因此排程時只需專注於為每部機台安排
製程的處理順序 (operation sequencing)，以滿足或最佳化效能指標（如總工時 makespan）。
為避免一部機台故障而導致全廠製程中斷，現今的零工式工廠多會為每道製程配置多部可用
機台，使得機台的選擇富有彈性，此類系統我們稱之為彈性零工式工廠。由於有多部機台可
供選擇，彈性零工式工廠排程除了原本的製程排程問題，還需要處理機台選擇或者路由
(routing) 問題。在路由的選擇上，一方面我們希望選擇高效率（加工時間短）的機台，以縮
短生產時間；另一方面我們也希望避免過度使用少數機台，而造成這些機台的故障率提高或
設備壽命減短。為了同時兼顧生產時間和工作量均衡的多重生產目標，傳統的單目標排程法
將不敷需求。在多目標最佳化領域中，演化式演算法已受到相當多研究者的肯定。本計畫的
研究目的便在提出一求解品質佳且使用簡單的演化式演算法來求解多目標彈性零工式工廠
排程問題。
三、 文獻探討
Brandimarte (1993) 的研究為早期彈性零工式工廠排程的代表文獻之一，他先以派工法則
求得一初始可行解，在固定路由決策的前提下，再施行禁忌搜尋法 (tabu search, TS) 來調整
製程排序，以最小化總工時。為了改善路由決策，他進而提出一個雙層式的禁忌搜尋法，外
層負責調整路由，內層則調整製程順序。由於這種雙層式架構將路由和排序兩種決策以階層
方法分別處理，常被稱為階層法 (hierarchical approach)。Xia 與 Wu (2005) 以粒子群搜尋法
(particle swarm optimization, PSO) 調整路由與模擬退火法 (simulated annealing, SA) 調整製
程順序；Zhang 等人 (2009) 結合粒子群搜尋法和禁忌搜尋法；Li 等人 (2010) 結合禁忌搜
尋法與登高法 (hill climbing)，這些研究都採用了階層法的概念。Hurink 等人 (1994) 和
Brandimarte (1993) 的方法相似，最大的不同處在於 Hurink 等人的鄰域函式 (neighborhood
function) 會同時調整路由和製程順序，這種方法則被稱為結合法 (integrated approach)。Ho
與 Tay (2004) 的文化演算法 (cultural algorithm)、Pezzella 等人 (2008) 的遺傳演算法
(genetic algorithm)、Xing 等人 (2010) 的蟻拓搜尋法 (ant colony optimization, ACO) 與
Bagheri 等人 (2010) 的人工免疫演算法 (artificial immune algorithm) 都屬於結合法。上述研
究皆專注於單目標 – 最小化總工時，研究主題多半為鄰域函式的設計和演算法架構。
3四、 研究方法
本計畫基於演化式演算法提出一個求解多目標彈性零工式工廠排程問題的方法。演化式
演算法為一種模仿自然界生物演化的近似最佳化演算法。使用此類演算法求解時，首先需定
義染色體編碼 (chromosome encoding) 機制，將欲求解問題的解以特定型式表示，我們通常
將編碼後的解稱為一個個體 (individual)。演化式演算法以一群初始個體 (initial population)
開始進行演化過程，每一個世代 (generation) 會對現有族群中的個體施以親代選擇 (mating
selection)、交配 (crossover)、突變 (mutation)、及環境選擇 (environmental selection)，以產生
下一個世代的族群個體。經過世代交替，個體會逐漸改善品質以趨向最佳解。以下便針對每
一個步驟加以說明。
(1) 染色體編碼與解碼
如前所述，彈性零工式工廠排程需解決兩個子問題，路由和製程排序。因此，我們在染
色體中需編入這兩個子問題的決策。我們採用三元組 (3-tuple) 的方式來編碼，三元組 (j, i, k)
中的 j、i、k 分別表示工件 (job)、製程和機台之編號。假設待排程的工件有兩個，分別需
進行三與四道製程，廠內有四部機台，每部機台皆有能力處理所有製程，則圖一表示一種可
行解。該解中 (2, 1, 2) 表示工件二的第一道製程 (O21) 將在第二部機台上處理。製程在染色
體中的順序表示製程的優先權。如 (2, 1, 2) 在 (1, 1, 2) 的左邊，意謂著 (O21) 和 (O11) 同
樣在第二部機台上處理，且當有資源競爭的情況時，O21 有較高的優先權。
(2, 1, 2) (1, 1, 2) (2, 2, 1) (2, 3, 3) (1, 2, 3) (2, 4, 4) (1, 3, 2)
圖一: 染色體編碼
編碼過後的染色體需經過反向的解碼動作以得到真正的排程解，接著計算目標函式值，
最後才能評估該個體的品質。我們採用 Giffler and Thompson (GT, 1960) 的演算法來進行解
碼。排程解一般可分為三類，半積極 (semi-active)、積極 (active) 和非延遲 (nondelay)，三
者由左至右有包含關係。已知最佳解2必定屬於積極排程解集合中，因此在半積極解集合中搜
尋會造成搜尋成本過高，而在非延遲解集合中搜尋則會有找不到最佳解的可能。我們使用
GT 演算法來確保產生的排程解皆為積極解，如此便可兼顧搜尋效率和最佳性。
(2) 初始群體之生成
初始群體的生成方法可分為兩類，一類完全隨機產生，一類使用待求解問題領域的經驗
法則來產生。前者可保持高物種多樣性，後者則著眼於產生品質優良的解，以輔助演化式演
算法從搜尋空間的特定區域開始搜尋。彈性零工式工廠排程的文獻幾乎全數使用經驗法則來
產生初始群體，常見的路由法為 Kacem 等人 (2002a) 的區域法 (Approach by Localization)，
常用的製程排序法則是 Pezzella 等人 (2008) 使用的派工法則。為求得良好且具多樣性初始
個體，研究者常混用多種區域法和派工法則，這也衍生出多個演算法的參數。例如 Pezzella 等
人設定初始族群中有 10% 和 90% 的個體分別使用兩種區域法的變形來決定路由，而有
20%、40%、40% 的個體分別使用三條派工法則來完成製程排序。由於初始群體的好壞與使
用各種經驗法的比例有關，因此如何決定適當的比例便成為使用者的工作與負擔。
2 這裡假設目標函式皆為 regular，即不會因為工件完成時間延後而改善。詳細定義請參考 Pinedo (2002)。
5五、 結果與討論
為了驗證所提出的多目標演化式演算法，我們以 Kacem 等人 (2002b) 的五個問題和
Brandimarte (1993) 的十個問題進行測試，這些測試問題為文獻中最常使用的問題，問題規
模從四個工件與五部機台到二十個工作與十五部機台。我們將所提出演算法的求解結果和七
個近三年內發表的排程方法比較。比較的方法分為多目標和單目標兩種，多目標的評估指標
為求取的非凌越解 (non-dominated solution) 個數；我們將文獻中所列出的解全數合併，並篩
選出非凌越解的淨集合 (net set)，接著計算各方法所求得的解和該淨集合交集後的大小。單
目標的部份，則以總工時為評估指標。參數設定的部份，由於本計畫所提出的方法以簡單易
用為主要原則，因此只含有兩個參數，即為族群大小 (P) 和演化代數 (G)。我們將兩個參數
值皆設為 200，對每個測試問題，我們執行所提之演算法十次，然後以十次所求得的所有解
中的非凌越解作為求解結果。其它七個現有演算法的執行規模與求解次數皆不小於我們的執
行規模。
表二列出十五個問題集的非凌越解淨集合大小以及八種受測排程法原始求得的解個數和
非凌越解個數。以 Xing 等人 (2009) 的方法為例，在 Kacem 等人的 88 問題中，原始求
得的解有四個，但其中有一個被其它方法所求得的解所凌越，因此實際求得的非凌越解個數
為三。從表二中，首先我們可看出總工時、機台最大工作量和機台總工作量之間確實存在取
捨關係，非凌越解的個數從兩個到上百個不等。即使是小規模的問題如 Mk01 問題，也可
能會有十個以上的非凌越解。如果要使用線性加權法來求得所有的非凌越解，將會十分困難
且耗時。
表二：本計畫所提出之方法和七個既有方法在十五個測試問題上的多目標效能比較
Problem
instance (nm)
#non-dom
inated
solution
(|PFi
*|)
Ho and
Tay
(2008)
Xing et
al. (2009)
Li et al.
(2010)
Bagheri
et al.
(2010)
Wang
et al.
(2010)
Li et al.
(2011a)
Li et al.
(2011b)
SEA
(Proposed)
Kacem 45 4  3 / 3 2 / 2  3 / 3 3 / 3 4 / 4 4 / 4
Kacem 88 5 4 / 4 3 / 4 2 / 2 1 / 1 3 / 3 3 / 3 4 / 4 4 / 4
Kacem 107 3  3 / 3 2 / 2   1 / 3 3 / 3 3 / 3
Kacem 1010 4 4 / 4 3 / 3 3 / 3 1 / 1 4 / 4 3 / 3 4 / 4 4 / 4
Kacem 1510 2 2 / 2 1 / 1 2 / 2 0 / 1 1 / 3 0 / 2 2 / 2 2 / 2
Mk01 (106) 11  0 / 1 1 / 1 0 / 1 3 / 4  3 / 7 11 / 11
Mk02 (106) 8  0 / 1 1 / 1 0 / 1 4 / 6  3 / 8 7 / 9
Mk03 (158) 24  0 / 1 0 / 1 0 / 1 7 / 10  1 / 7 17 / 17
Mk04 (158) 28  1 / 1 1 / 1 0 / 1 6 / 10   20 / 24
Mk05 (154) 11  0 / 1 1 / 1 0 / 1 5 / 5   10 / 10
Mk06 (1015) 111  0 / 1 0 / 1 1 / 1 7 / 10   103 / 110
Mk07 (205) 15  0 / 1 0 / 1 0 / 1 7 / 7   13 / 16
Mk08 (2010) 10  0 / 1 0 / 1 0 / 1 5 / 5  2 / 8 8 / 9
Mk09 (2010) 69  0 / 1 1 / 1 0 / 1 4 / 9   64 / 64
Mk10 (2015) 142  0 / 1 1 / 1 0 / 1 3 / 18   138 / 138
7六、 發表論文
本計畫之部份研究成果已在本年度於大陸河南鄭州舉行的 The 7th International
Conference on Intelligent Computing (ICIC 2011) 國際會議中發表，該會議之接受率低於
27%。正式版本將收錄在 Spinger-Verlag 出版社 Lecture Notes in Artificial Intelligence (LNAI)
系列之 6839 卷中。完整成果已整理投稿至 International Journal of Production Economics 審
查中。附件為會議論文版本。
參考文獻
Bagheri, A., Zandieh, M., Mahdavi, I., Yazdani, M., 2010. An artificial immune algorithm for the
flexible job-shop scheduling problem. Future Generation Computer Systems 26, 533–541.
Brandimarte, P., 1993. Routing and scheduling in a flexible job shop by tabu search. Annals of
Operations Research 41, 157–183.
Deb, K., Pratap, A., Agarwal, S., Meyarivan, T., 2002. A fast and elitist multiobjective genetic
algorithm: NSGA-II. IEEE Transactions on Evolutionary Computation 6, 182–197.
Gao, J., Gen, M., Sun, L., Zhao, X., 2007. Hybrid of genetic algorithm and bottleneck shifting for
multiobjective flexible job shop scheduling problems. Computers & Industrial Engineering 53,
149–162.
Gao, J., Sun, L., Gen, M., 2008. A hybrid genetic and variable neighborhood descent algorithm for
flexible job shop scheduling problems. Computers & Operations Research 35, 2892–2907.
Garey, M.R., Johnson, D.S., and Sethi, R., 1976. The complexity of flowshop and job shop
scheduling. Mathematics of Operations Research 1, 117–129.
Giffler, B., Thomspon, G.L., 1960. Algorithms for solving production-scheduling problems.
Operations Research 8, 487–503.
Ho, N.B., Tay, J.C., 2004. GENACE: An efficient cultural algorithm for solving the flexible
job-shop problem. In: Proceedings of the IEEE Congress on Evolutionary Computation,
1759–1766.
Ho, N.B., Tay, J.C., 2008. Solving multiple-objective flexible job shop problems using evolution
and local search. IEEE Transactions on Systems, Man, and Cybernetics –Part C 38(5),
674–685.
Hurink, J., Jurisch, B., Thole, M., 1994. Tabu search for the job-shop scheduling problem with
multi-purpose machines. OR Spektrum 15, 205–215.
Kacem, I., Hammadi, S., Borne, P., 2002a. Approach by localization and multiobjective
evolutionary optimization for flexible job-shop scheduling problem. IEEE Transactions on
Systems, Man, and Cybernetics–Part C 32, 1–13.
Kacem, I., Hammadi, S., Borne, P., 2002b. Pareto-optimality approach for flexible job-shop
scheduling problems: hybridization of evolutionary algorithms and fuzzy logic. Mathematics
and Computers in Simulation 60, 245–276.
Li, J.Q., Pan, Q.K., Liang, Y.C., 2010. An effective hybrid tabu search algorithm for
multi-objective flexible job-shop scheduling problems. Computers & Industrial Engineering 59,
647–662.
Li, J.Q., Pan, Q.K., Gao, K.Z., 2011a. Pareto-based discrete artificial bee colony algorithm for
multi-objective flexible job shop scheduling problems. International Journal of Advanced
Manufacturing Technology 55, 1159–1169.
Li, J.Q, Pan, Q.K., Chen, J., 2011b. A hybrid Pareto-based local search algorithm for
multi-objective flexible job shop scheduling problems. International Journal of Production
Research, to appear (DOI: 10.1080/00207543.2011.555427).
D.-S. Huang et al. (Eds.): ICIC 2011, LNAI 6839, pp. 49–56, 2011. 
© Springer-Verlag Berlin Heidelberg 2011 
Flexible Job Shop Scheduling Using a Multiobjective 
Memetic Algorithm 
Tsung-Che Chiang and Hsiao-Jou Lin 
Department of Computer Science and Information Engineering,  
National Taiwan Normal University, Taiwan, R.O.C. 
tcchiang@ieee.org, sirsene@gmail.com 
Abstract. This paper addresses the flexible job shop scheduling problem with 
minimization of the makespan, maximum machine workload, and total machine 
workload as the objectives. A multiobjective memetic algorithm is proposed. It 
belongs to the integrated approach, which deals with the routing and sequencing 
sub-problems together. Dominance-based and aggregation-based fitness 
assignment methods are used in the parts of genetic algorithm and local search, 
respectively. The local search procedure follows the framework of variable 
neighborhood descent algorithm. The proposed algorithm is compared with 
three benchmark algorithms using fifteen classic problem instances. Its 
performance is better in terms of the number and quality of the obtained 
solutions. 
Keywords: multiobjective, Pareto optimal, flexible job shop scheduling, 
memetic algorithm, variable neighborhood descent. 
1   Introduction 
The flexible job shop is an extension of the classical job shop. There are m machines 
in the shop, and n jobs are to be processed. Each job j consists of nj operations. Each 
operation oji of job j should be processed by one machine in the set of eligible 
machines Mji. The processing time of operation oji on a machine k ∈ Mji is a constant 
pjik. Each machine can process only one job at a time. Processing of operations should 
follow the precedence constraint. 
In this study, we consider three objective functions: makespan (CM), total workload 
(sum of workload of all machines, WT), and maximum workload (over all machines, 
WM). All objective functions are to be minimized. A solution x is said to dominate a 
solution y if and only if x is not worse than y in all objective functions and is better 
than y in at least one objective function. The solutions that are not dominated by any 
other solution are called Pareto optimal. Our goal is to find or approximate the set of 
Pareto optimal solutions. 
The rest of this paper is organized as follows. Section 2 gives a literature review on 
the flexible job shop scheduling problem (FJSP). Section 3 details the proposed 
multiobjective memetic algorithm (MA). Experiments and results are presented in 
section 4, and conclusions and future work are given in section 5. 
 Flexible Job Shop Scheduling Using a Multiobjective Memetic Algorithm 51 
also want to compare the performance of approaches based on aggregation functions 
and Pareto dominance. Moreover, benchmark solutions for the MOFJSP instances are 
eagerly required to encourage more research studies and facilitate performance 
validation. All of the above motivate this study. 
3   Proposed Multiobjective Memetic Algorithm 
3.1   Chromosome Encoding and Decoding  
Each chromosome is a permutation of 3-tuples (j, i, k), in which j, i, and k represent 
the indices of job, operation, and machine, respectively. A tuple (j, i, k) means that the 
operation oji will be processed in machine k. The position of each tuple determines the 
priority of the corresponding operation. The tuple positioned closer to the left end has 
a higher priority. 
 
(2, 1, 2) (1, 1, 2) (2, 2, 1) (2, 3, 3) (1, 2, 3) (1, 3, 2) 
Fig. 1. Chromosome encoding 
To decode a chromosome into a feasible schedule, firstly, the machines are 
assigned to operations according to the information encoded on the chromosome. 
Then, the Giffler and Thompson (GT) algorithm [20] is used to build the schedule. 
The permutation in the chromosome is re-ordered according to the order in which the 
operations are scheduled by the GT algorithm. After a schedule is obtained, the 
concerned objective values are calculated. 
3.2   Reproduction 
In this study we assign the fitness based on NSGA-II [21] and use 2-tournament for 
mating selection. The assignment crossover (ASX) exchanges the machines of four 
randomly selected operations. The Precedence Preserving Order-based Crossover 
(POX) [22] selects one job randomly and keeps positions of its operations unchanged 
in each of the parents. All the remaining operations on each parent are re-positioned 
in the order they appear in the other parent. When two parents do crossover, one of 
ASX and POX is randomly chosen to generate the offspring. Two heuristic mutations 
are used to adjust the machine assignment. (In fact, the operation sequence is also 
affected.) They identify the machine mmax with the maximum makespan (workload) 
and then select an operation oji on mmax randomly. The operation oji is assigned to the 
machine mmin with the minimum makespan (workload). If mmin is not eligible for 
processing oji, oji is assigned to a random machine in the eligible machines Mji. 
Offspring get mutated in probability pm. If there are more than two individuals having 
the same objective values, replace the duplicates by applying the makespan-based 
mutation five times. Environmental selection follows the (μ, λ) mechanism where  
μ = λ.  
 Flexible Job Shop Scheduling Using a Multiobjective Memetic Algorithm 53 
4   Experiments and Results 
4.1   Benchmark Problem Instances and Algorithms 
We tested the proposed algorithm on the sets of problem instances from Kacem et al. 
[24] and Brandimarte [1]. Kacem et al.’ data set contains five instances, whose scale 
(n × m, n: number of jobs, m: number of machines) ranges from 4×5 to 15×10. 
Brandimarte’s data set contains 15 instances, but only the first 10 instances (Mk01-
10) are considered here, as most existing studies also did experiments on these 
instances only. The problem scale ranges from 10×6 to 20×15. These two data sets are 
the most commonly adopted benchmark instances in the literature on FJSP. We 
compared our algorithm with three recent studies, Xing et al. in 2009 [18], Li et al. in 
2010 [17], and Moslehi and Mahnam in 2011 [19]. 
4.2   Parameter Setting and Problem Analysis 
We tested four combinations of population size (NPOP) and the interval of doing local 
search (TLS). The four variants (NPOP, TLS) are (50, 501), (200, 501), (400, 25), and 
(400, 1). The maximum number of generations (TGEN) was 500, and thus setting TLS 
by 501 means that no local search is conducted. Different values of TLS represent 
different levels of intensification. The mutation rate (pm, section 3.2), the number of 
individuals to do local search (NLS, section 3.4), times of shaking in local search (TSH, 
section 3.4) and the maximum number of consecutive equal-fitness moves in local 
search (nE, section 3.4), were set by 0.5, 10, 2, and 10, respectively based on some 
pilot runs considering solution quality and computation time. The number of 
evaluations is NPOP⋅TGEN + (TGEN/TLS)⋅NLS⋅TSH⋅Eval, where Eval is the average number 
of evaluations in one-time VND. 
We ran each variant to solve each problem instance for ten times. For each instance 
i, the non-dominated solutions among solutions obtained by all four variants over ten 
runs were collected as the reference set PFi*. Performance of each variant was 
measured by the number of non-dominated solutions in PFi* it found. We calculated 
the average number of non-dominated solutions found over ten runs and the number 
of non-dominated solutions found by all ten runs. These two measures stand for the 
average-case and best-case performance. Several observations are made as follows. 
First, the number of non-dominated solutions is varying between the problem 
instances. For some instances like Kacem 15×10, few non-dominated solutions are 
found, which implies that there is little conflict between the concerned objectives. For 
other instances like Mk06, the objectives are very conflicting and consequently a lot 
of non-dominated solutions are found. Even though the problem scale is similar 
(Mk08 and Mk09 have the same numbers of jobs and machines, and the numbers of 
operations are close.), the number of non-dominated solutions can be very different. 
More investigation on the relationship between the number of non-dominated 
solutions and the problem characteristics including degree of flexibility (number of 
eligible machines) and variation of processing times among eligible machines is an 
interesting topic for future work. 
Second, the problem difficulty and the required computational effort are also 
varying. Instances like Kacem 4×5 and Mk08 can be easily solved by the simplest 
 Flexible Job Shop Scheduling Using a Multiobjective Memetic Algorithm 55 
4.4   List of Non-dominated Solutions 
Due to the limitation of space, we provide the full-length manuscript and a complete 
list of non-dominated solutions on the first author’s website1. We make a further 
observation based on the non-dominated solutions of these instances. The makespan 
and maximum workload are positively correlated for most instances. For several 
instances, the makespan and maximum workload are even equal. It implies that 
minimizing the maximum workload is helpful to minimize the makespan. 
5   Conclusions and Future Work 
Most studies deal with the MOFJSP by the aggregation-based methods and seek for 
only a single optimal solution with respect to a certain function of objective values. In 
this study we proposed a multiobjective MA to solve the MOFJSP in a Pareto way. 
We aim at generating the set of Pareto optimal solutions so that decision makers do 
not need to define the aggregation function in advance and can select the favorite 
solution based on the trade-off between objective values. Comparing with three 
algorithms on 15 instances, our MA provides better results in terms of number and 
quality of solutions. Future work includes the investigation of problem characteristics, 
more comprehensive experiments on performance comparison, and neighborhood 
functions for minimizing the maximum workload. 
 
Acknowledgments. This research work is supported by the National Science Council 
of Republic of China (R.O.C.) under research grant No. NSC 99-2221-E-003-018. 
References 
1. Brandimarte, P.: Routing and Scheduling in a Flexible Job Shop by Tabu Search. Annals 
of Operations Research 41, 157–183 (1993) 
2. Hurink, J., Jurisch, B., Thole, M.: Tabu Search for the Job-Shop Scheduling Problem with 
Multi-purpose Machines. OR Spektrum 15, 205–215 (1994) 
3. Mastrolilli, M., Gambardella, L.M.: Effective Neighborhood Functions for the Flexible 
Job Shop Problem. Journal of Scheduling 3, 3–20 (2000) 
4. Bozejko, W., Uchronski, M., Wodecki, M.: Parallel Hybrid Metaheuristics for the Flexible 
Job Shop Problem. Computers & Industrial Engineering 59, 323–333 (2010) 
5. Ho, N.B., Tay, J.C.: GENACE: An Efficient Cultural Algorithm for Solving the Flexible 
Job-shop Problem. In: Proceedings of the IEEE Congress on Evolutionary Computation, 
pp. 1759–1766 (2004) 
6. Tay, J.C., Ho, N.B.: Evolving Dispatching Rules using Genetic Programming for Solving 
Multi-objective Flexible Job-shop Problems. Computers & Industrial Engineering 54, 
453–473 (2008) 
7. Pezzella, F., Morganti, G., Ciaschetti, G.: A Genetic Algorithm for the Flexible Job-shop 
Scheduling Problem. Computers & Operations Research 35, 3202–3212 (2008) 
                                                          
1
 http://web.ntnu.edu.tw/~tcchiang/publications/icic2011.htm 
1國科會補助專題研究計畫項下出席國際學術會議心得報告
日期：100 年 6 月 11 日
一、參加會議經過
IEEE Congress on Evolutionary Computation (CEC) 是國際學術組織 IEEE 人工智慧社群 (CIS)
在演化式計算領域舉辦的年會，每年總是吸引眾多專家學者前往發表研究成果，主題豐富多元，
是吸收新知與深度探索的最佳管道之一。本年度 CEC於美國路易斯安內州的紐奧良市舉行，會期
為六月五日至六月八日。在四天的會議裡（第一天為教學坊 tutorial）有約四百篇論文在此發表。
計畫主持人之研究主題為多目標演化式最佳化 (evolutionary multiobjective optimization, EMO)
與其應用，本次參與此會議，發表兩篇論文為：
T.C. Chiang and Y.P. Lai, “MOEA/D-AMS: Improving MOEA/D by an Adaptive Mating
Selection Mechanism,”於六月七日之 Multiobjective optimization I 場次口頭發表。
M.N. Hsieh, T.C. Chiang, and L.C. Fu, “A Hybrid Constraint Handling Mechanism with
Differential Evolution for Constrained Multiobjective Optimization,” 於六月七日之 poster
session 發表。
計畫編號 NSC99－2221－E－003－018－
計畫名稱 以混合式遺傳演算法求解彈性零工式工廠之多目標排程問題
出國人員
姓名
蔣宗哲
服務機構
及職稱
臺灣師範大學資訊工程學系
會議時間
100年 6月 5日至
100年 6月 8日
會議地點 美國紐奧良
會議名稱 IEEE Congress on Evolutionary Computation (CEC)
發表論文
題目
MOEA/D-AMS: Improving MOEA/D by an Adaptive Mating Selection
Mechanism
A Hybrid Constraint Handling Mechanism with Differential Evolution for
Constrained Multiobjective Optimization
附件四
3學術交流
本次與會，除了和過去已建立良好友誼的國內外學者朋友見面，也認識了許多新朋友，並和他
們學習。國內的學者如逢甲大學化工系的陳奇中教授 (Real-coded GA for process optimization)、清
華大學工工系的葉維彰教授 (PSO for image clustering)、南華大學電子商務系的陳世興教授 (GA for
single machine scheduling with setup)、亞東科技大學的謝昇達教授 (multiobjective PSO)；國外的學
者如來自紐西蘭的 Prof. Meng Jie Zhang (evolutionary computer vision) 與來自廣東的 Prof. Hai Lin
Liu (MOEA) 等。
另外，敝人也藉此次與會，邀請 IEEE人工智慧社群主席，Prof. Gary Yen至敝系演講，促進敝
系教師與國際學者交流，也讓敝系學生得以聆聽國際水準的精彩演講。
三、考察參觀活動(無)
四、建議(無)
五、攜回資料名稱及內容
IEEE CEC 2011 論文集光碟乙張
IEEE 近期人工智慧相關國際會議之徵求論文啟事與相關資訊
六、其他
(a) (b)
(a) 與 IEEE 2013 Symposium Series on Computational Intelligence (SSCI) 的大會主席 Prof. P. N.
Suganthan 合影留念
(b)與平行演化式演算法領域的知名學者 Prof. E. G. Talbi 合影留念
MOEA/D-AMS: Improving MOEA/D by an Adaptive 
Mating Selection Mechanism 
 
Tsung-Che Chiang 
Department of Computer Science and Information 
Engineering, National Taiwan Normal University 
Taipei, Taiwan, R.O.C. 
tcchiang@ieee.org 
Yung-Pin Lai 
Department of Computer Science and Information 
Engineering, National Taiwan Normal University 
Taipei, Taiwan, R.O.C. 
697470547@ntnu.edu.tw 
 
 
Abstract—In this paper we propose a multiobjective evolutionary 
algorithm based on MOEA/D [1] for solving multiobjective 
optimization problems. MOEA/D decomposes a multiobjective 
optimization problem into many single-objective subproblems. 
The objective of each subproblem is a weighted aggregation of 
the original objectives. Using evenly distributed weight vectors on 
subproblems, solutions to subproblems form a set of well-spread 
approximated Pareto optimal solutions to the original problem. 
In MOEA/D, each individual in the population represents the 
current best solution to one subproblem. Mating selection is 
carried out in a uniform and static manner. Each 
individual/subproblem is selected/solved once at each generation, 
and the mating pool of each individual is determined and fixed 
based on the distance between weight vectors on the objective 
space. We propose an adaptive mating selection mechanism for 
MOEA/D.  It classifies subproblems into solved ones and 
unsolved ones and selects only individuals of unsolved 
subproblems. Besides, it dynamically adjusts the mating pools of 
individuals according to their distance on the decision space. The 
proposed algorithm, MOEA/D-AMS, is compared with two 
versions of MOEA/D using nine continuous functions. The 
experimental results confirm the benefits of the adaptive mating 
selection mechanism. 
Keywords-multiobjective optimization; evolutionary algorithm; 
mating selection; mating pool; subproblem; scalarization 
I.  INTRODUCTION  
In our daily life, it is common for us to solve problems 
considering multiple objectives including time, cost, quantity, 
quality, etc. When we can define an aggregated value or a 
preference order for these objectives, the single-objective 
optimization algorithms can find the optimal solution for us. 
However, when we are not sure about the relationship or trade-
off between the objectives, we need an approach to provide the 
best candidate solutions and let us to choose the favorite one. 
Regarding m objective functions fi (i = 1, …, m) and two 
solutions x and y, we say F(x) = [f1(x), …, fm(x)] dominates F(y) 
= [f1(y), …, fm(y)] iff fi(x) ≤ fi(y) for all i = 1, …, m and F(x) ≠ 
F(y). Based on the definition of dominance, the best candidate 
solutions to a multiobjective optimization problem are those 
whose objective vectors are non-dominated by any other’s 
objective vector. We call these solutions Pareto optimal, and 
they form the Pareto optimal set. The set of objective vectors of 
all Pareto optimal solutions forms the Pareto front. The goal of 
a multiobjective optimization approach is to generate or 
approximate the Pareto optimal set or Pareto front. 
In the last decade, evolutionary algorithms have become 
one of the most popular approaches for solving multiobjective 
optimization problems. Evolutionary Multiobjective 
Optimization (EMO) has also been judged as one of the three 
fastest growing fields of research and application among all 
computational intelligence topics in the World Congress on 
Computational Intelligence (WCCI) in 2006. Many well-
known multiobjective evolutionary algorithms (MOEA) like 
NSGA-II [2], SPEA2 [3], and PESA-II [4] were proposed and 
had been applied in various kinds of applications like shop 
scheduling [5], vehicle routing [6], data mining [7], and so on.  
MOEA/D [1] is a recent breakthrough of design of MOEA. 
Its main ideas include problem decomposition, weighted 
aggregation of objectives, dedicated weight vectors to 
subproblems, and mating restriction. Mating selection in 
MOEA/D is carried out in a uniform and static manner. It is 
uniform since each individual/subproblem is selected/solved by 
the same times; it is static since the mating pool of each 
individual is determined before the evolution and fixed during 
the evolution. We observed the progress of MOEA/D on 
solving some problem instances and noticed that uniform 
mating selection could waste the computational effort and the 
mating pool determined based on the distance on the objective 
space is not always proper. In this paper we propose an 
adaptive mating selection mechanism for MOEA/D. It 
classifies subproblems into solved ones and unsolved ones and 
spends computational effort only on unsolved problems. 
Besides, it adjusts the mating pool of each individual 
dynamically according to the distance between individuals on 
the decision space.  
The rest of this paper is organized as follows. Section II 
provides a review of the literature on MOEAs. Section III 
presents MOEA/D, MOEA/D-DE, and two proposed 
mechanisms to achieve adaptive mating selection. Section IV 
describes the experiments and shows the results. We compare 
the proposed MOEA/D-AMS with two versions of MOEA/D, 
MOEA/D-DE [8] and MOEA/D-DRA [9] using nine functions 
proposed in [8] in terms of the inverted generational distance 
(IGD). Conclusions and future work are given in Section V. 
1473978-1-4244-7835-4/11/$26.00 ©2011 IEEE
99 年度專題研究計畫研究成果彙整表 
計畫主持人：蔣宗哲 計畫編號：99-2221-E-003-018- 
計畫名稱：以混合式遺傳演算法求解彈性零工式工廠之多目標排程問題 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
發表於第  7 屆
International 
Conference on 
Intelligent 
Computing (ICIC 
2011)，接受率小
於 27%。 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
已在本年度 8月於第 7屆 International Conference on Intelligent Computing (ICIC 
2011) 發表部份成果，該論文將收錄於 Lecture Notes in Artificial Intelligence (LNAI) 
vol. 6839。完整成果已投稿至 International Journal of Production Economics 審查中。
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
彈性零工式工廠 (Flexible job shop) 為一多階段 (multi-stage) 之製造系統，允許每
項產品有各自的製造流程，且每道製程 (operation) 有兩部以上的機台可供選擇。彈性
零工式工廠排程問題兼具路由 (routing) 和排序 (sequencing) 兩個子問題，在學理上
屬於 NP-hard 問題，而在實際應用上也符合多種製造業之模型，故頗具研究價值。 
 
近年來多目標排程廣受排程領域研究者重視，相關研究也逐漸增加。本計畫提出一個基於
演化式演算法 (evolutionary algorithm) 的多目標排程方法，本方法的特色在於設計簡
單，和既有方法動輒 5~10 個參數相比，本方法僅使用 2 個參數，免去使用者調校參數的
負擔。在演化式演算法的設計上，維持物種多樣性 (diversity) 是個重要課題。本方法
使用適應性 (adaptive) 方式來產生初始化族群以提供充足的物種多樣性，並以兼顧集中
搜尋 (exploitation) 和分散搜尋 (exploration) 的機制來改善族群中相近的個體解。
以 15 個經典測試問題作為測試基準，和 7 個現行排程法的求解結果相比，本方法是唯
一能求取 70% 以上非凌越解 (non-dominated solution) 的排程法。 
 
本研究成果的學術價值為適應性初始化族群產生機制和兼顧集中與分散搜尋的個體改善
機制；應用價值則為一簡單且有效的多目標排程方法。我們希望能參與國科會的「中小企
