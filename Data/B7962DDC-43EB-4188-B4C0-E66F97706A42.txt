1Չࡹଣ୯ৎࣽᏢہ঩཮ံշ஑ᚒࣴزीฝԋ݀ൔ֋!
ीฝӜᆀǺ൪ΕԄᆛၡ೯ૻး࿼ෳ၂ύЈǺБݤᆶπڀϐჴᡍ໒วᆶ
௢ቶ..ηीฝΟǺ൪ΕԄᆛၡ೯ૻး࿼.ᓯӸس಍ਏૈຑКמೌϷπڀ
ϐ೛ीᆶ໒ว!
ीฝጓဦǺOTD!:7.3329.F.11:.128!
୺Չයज़Ǻ3118019012!!3119018042!
Ь࡭ΓǺ஭ҥѳ!
ीฝୖᆶΓ঩Ǻ໳ί৥Ǵ໳γ৥Ǵ᝵࠽ӄǴ೾ଗ݇!
୯ҥҬ೯εᏢၗૻπำس
ᄔा
זଢ૶Ꮻᡏς࿶ԋࣁ൪ΕԄीᆉᕉნޑ
ЬࢬᓯӸ൞ᡏǶࡨ൪ΕԄೀ౛Ꮤਏૈߏى຾
؁ϐ፥Ǵೀ౛εໆၗ਑ς࿶όࢂਫ΢ࠠႝတ
܈ޣεࠠЬᐒޑ஑ճΑǶזଢ૶ᏫᡏҁيԖ
๱࣬྽ᐱ੝ޑނ౛੝܄ǴӢԜа۳೛ी๏ᅶ
ᅷޑᔞਢس಍٠όૈޔௗ٬Ҕӧזଢ૶Ꮻᡏ
΢ǶΨҗܭ೭ঁচӢǴჹаᅶᅷࣁ୷ᘵ܌೛
ीޑਏૈຑКᆶπڀǴ٠όૈϸࢀ΋ঁଞჹ
זଢ૶Ꮻᡏ೛ीޑᔞਢس಍ޑؼ಺ǶӢԜǴ
ҁࣴز๱౳ܭӵՖଞჹаזଢ૶Ꮻᡏࣁ୷ᘵ
ޑᔞਢس಍଺΋Ԗس಍ޑຑКෳ၂ǴҞޑࢂ
ࣁΑև౜а۳ෳ၂ຑКπڀ܌όૈᡉ౜ޑਏ
ૈৡຯǶ೭ኬޑ่݀ǴନΑёࡌ᝼٬Ҕޣӧ
ࢌ٤πբॄ಻Πᔈ၀Ҕব΋ᅿᔞਢس಍Ǵ׳
ख़ाޑࢂǴᗉխᒧ᏷ӧ၀πբॄ಻Πਏૈό
ᄆޑᔞਢس಍Ƕ࣬ᜢޑෳ၂ำׇаϷπڀǴ
߾ౢрࣁीฝԋ݀Ƕ
Key word: ᔞਢس಍ǴᓯӸس಍Ǵזଢ૶Ꮻ
ᡏǴਏૈຑК
Abstract 
Flash memory is widely deployed in 
embedded computing systems because of its 
non-volatility, shock-resistance, and power 
conservation. To test the performance of 
flash-memory-based storage systems, currently 
benchmark suites for disk-based storage 
systems are used. The ordinary benchmark 
suites may identify the commonly existing 
performance bottleneck, the source that causes 
the performance degradation is not easy to 
identify, though. That is because the physical 
characteristics and geometry of flash memory 
impose many constraints on its management. 
The objective of this research project is to 
design and implement the tools, procedures and 
methods of benchmark for flash-memory-based 
storage systems. Working items include the 
methods to capture and to analyze 
kernel/firmware events, design of test 
procedures and performance indexes,  and 
implementation of batch test tools.  
Key word: Filesystem Benchmark, 
embedded storage, flash memory, 
benchmark 
3کᕴໆǴаϷ޸຤ޑਔ໔Ǵ࿶த೏ٰ৾྽բ
ᔞਢس಍ޑຑКπڀϐ΋[22,23,24,25]Ƕനࡕ
IOzone ࢂёаౢғکໆෳ೚ӭᅿޑࡰз୏
բǴёаᢀჸӚᅿ୏բӧᔞਢس಍ύ޸຤ޑ
ਔ໔ǴКၨ๱ख़ܭᢀჸ I/Oޑਏૈ߄౜[25]Ƕ
AIM7 ཮ౢғ೚ӭѳՉ୺ՉޑำׇǴ؂΋ঁ
ำׇ೿୺Չ΋٤୏բکᒿᐒޑڥћϣࡌޑπ
բϣ৒Ǵх֖΋Πس಍ࡰз(ᅶᅷ᠐/ቪ)୏
բǴpipe I/OǴаϷ΋٤੃ᑃ cpuਔ໔ޑ଑୮
πբ)Ƕϐࡕीᆉр؂ϩដֹԋޑπբঁኧǴ
ӧ[25]ύ೏٬ҔࣁຑКπڀϐ΋Ƕ
ځдޑ Macro-Benchmark ޑෳໆπڀᗋ
Ԗ Netbench[29]ک Dbench [30]ǶNetBenchࢂ
΋ᅿໆෳᔞਢ՛ܺᏔޑຑКπڀǴЬाճҔ
ӭѠ PCsϐ໔ޑᆛၡೱௗǴٰኳᔕ٬Ҕޣӛ
՛ܺᏔፎ؃ᔞਢޑ I/Oޑा؃ǶDbenchࢂ΋
ঁբҔܭ LINUX΢ޑ open-sourceำԄǴک
NetBench ࣬ӕࢂຑෳᔞਢ՛ܺᏔޑπڀǴ
Dbench ܌ౢғޑπբໆ൩Ⴝࢂ NetBench բ
Ҕܭόሡाวрᆛၡፎ؃ޑ Samba server΢
΋ኬǶ೭ٿঁຑКᔞਢ՛ܺޑπڀӧ[35]ύ೏
٬ҔډǶ
Micro-benchmarks ύၨڀж߄܄ޑໆෳ
БԄ൩ࢂ Bonnie and Bonnie++[16]ǴЬाࢂ
ෳ၂ I/OᒡрޑౢૈǴ཮ᇙ೷΋٤ page cache
คݤֹӄ֎ԏޑεᔞਢٰໆෳᔞਢس಍ӧ
I/O߄౜΢ޑཱུज़ǴᅰёૈזೲӦѐ᠐ቪ೭٤
εᔞਢǶځдޑ Micro-benchmark БݤᗋԖ
Sprite LFS[31]ǴSprite LFSޑෳ၂БԄԖٿᅿ
Sprite LFS Large File Benchmark ک Sprite 
LFS Small File BenchmarkǶSprite LFS Large 
File Benchmark ೏٬Ҕܭ[32,33,34]բࣁෳ၂
ਏૈޑπڀǴЬाޑ؁ᡯҢჹܭ৒ໆࣁ
100MB ޑεᔞਢբൻׇکᒿᐒޑ᠐ቪၮᆉ
(᠐ڗکቪΕޑၗ਑ໆελ೿ࢂ 100MB)Ƕ
Sprite LFS Small File Benchmarkӧ[32,33,34]
೏٬ҔډǴЬाޑჴᡍ؁ᡯࢂӃࡌҥ 10000
ঁа΢ 1KBޑᔞਢǴӆճҔ flushቪӣ page 
cacheύኩӸޑၗ਑ࡕǴӆ຾Չ᠐ڗӄ೽ᔞਢ
ޑ୏բǴനࡕӆմନ܌ԖᔞਢǶ
Trace replays೭΋ᜪࠠޑෳໆБݤǴЬा
೿ࢂ٬ҔޣԾՉኗቪኳᔕำԄѐϩ݋کख़
౜ǴдॺԾρԏ໣ډޑइᒵᔞ(trace log)ǴԶ
೭٤ำԄΨ೿཮٩ྣ٬ҔޣԾρޑሡ؃کӚ
ԾइᒵޑइᒵᔞόӕԶԖόӕޑ೽ҽǶӵ[13]
ύբޣճҔԾՉኗቪޑำԄϩ݋ԏ໣ޑ trace 
logǶ
Iometer[26]όឦܭ΢ॊ 3 ᅿᜪࠠޑໆෳ
πڀǴёа೸ၸ٬Ҕޣ೛ۓԶኳᔕҺཀޑᅶ
ᅷکᆛၡ I/O୏բǴ܌а Iometerࡽёа྽բ
πբໆౢғᏔ(workload generator)ٰ٬ҔǴΨ
ёа྽ԋ΋ᅿໆෳޑπڀǶӧ[25]ύ೏բޣԾ
ुԋԾρޑໆෳπڀ pmeterǶ
ՠ΢य़ගډޑᔞਢس಍ෳໆБݤεӭኧ
ЬाᗋࢂҔܭෳໆᅶᅷࣁЬޑᔞਢس಍ǴԶ
ߚଞჹזଢ૶ᏫᡏѐໆيѺ೷ޑǶӧ൪ΕԄ
ᓯӸس಍΢ǴຑෳπڀߚதϿـǶ[8,9]ύբ
ޣගрໆෳຑໆ൪ΕԄس಍ύೀ౛Ꮤکזଢ
૶Ꮻᡏး࿼ޑঁձޑ઻ႝໆǴճҔ΋ঁ
macro-modelٰໆෳCRAMF,RamFS,JFFS2ޑ
઻ႝໆǴЪόሡाҺՖჴሞໆෳႝΚޑπڀ
[8,9]Ƕ
ௗΠٰךॺ཮Ӄϟಏזଢ૶Ꮻᡏᔞਢس
಍کᅶᅷᔞਢس಍όӕޑ൳ঁЬाޑ᝼ᚒǴ
٠௖૸ӧϐࡕޑໆෳБݤύᔈ၀ݙख़ޑ೽ҽ
ࣁՖǴаϷࣁϙሶाໆෳ೭٤ኧᏵǶ
3. Fundamental Management Issues 
of Flash-Memory Storage Systems  
3.1 Flash-Memory Physical Geometry 
NANDזଢ૶ᏫᡏҗܭߡەǴᡏᑈλǴ
઻ႝໆλǴаϷځё༴ऍฯᅷ৒ໆޑᓯӸޜ
໔ǴӢԜ೏ቶݱӦᔈҔӧӚԄதـޑ 3C୘ࠔ
΢բࣁЬाޑᓯӸޜ໔ǶӢԜҔܭᆅ౛
NAND זଢ૶Ꮻᡏ΢ޜ໔ᔈҔޑᔞਢس಍
Ψ໒ۈᡉள਱Ѧख़ाǶՠӢࣁ NAND זଢ૶
ᏫᡏᏱԖ೚ӭόӕܭ΋૓ᅶᅷޑ܄፦Ǵ٬ள
Ҟ߻ਫय़ࠠႝတ΢܌٬Ҕޑᔞਢس಍ό፾ӝ
ӧזଢ૶Ꮻᡏ΢ၮբǶԶזଢ૶ᏫᡏӅ೯ޑ
੝ձϐೀӧܭ 1.΋ԛቪΕ(Write-Once)Ǵ2.ε
ໆܓନ(Bulk erase)Ǵ3.Ԗज़ޑܓନԛኧ(limit 
erase cycles)Ƕ
5җܭזଢ૶Ꮻᡏ write-once ޑ੝܄کז
ଢ૶Ꮻᡏ ᔞਢس಍ύ௦Ҕ Out-place ޑБ
ԄǴԶ invalid (dirty) ୔༧Ѹ໪ᙖҗܓନ୏բ
ٰᗋচԋёҔޑޜ໔ǴځύҗܭܓନޑൂՏ
ک read/writeൂՏόӕǴ཮Ꮴठሡाܓନޑ୔
༧ύ཮Ԗ valid(clean) pageޑӸӧǴѸ໪ஒ೭
٤।य़ύԖҔޑ।य़ߥӸཚ౽ډځдޑ୔༧
΢ϐࡕǴӆ຾Չܓନ୔༧ޑ୏բǴԶ೭΋ೱ
Ս؁ᡯکᢀۺǴᆀϐࣁڱ֣ӣԏ (Garbage 
collectionǶ)
კ߄ 3. The Example of Garbage Collection 
ڱ֣ӣԏӧ΋૓זଢ૶Ꮻᡏᔞਢس಍΢
ޑೀ౛୏բǴεठ΢ޑ؁ᡯӵკ߄ 3 ޑጄٯ
߄ҢޑǶ२Ӄा೏ܓନޑ Erased block ΢ޑ
֖ԖԖਏၗ਑(valid data)ޑ।य़(page)΋ঁঁ
೿ࡲنډځдёҔ।य़(free pages)΢(კ߄ 3
ύޑ(1))Ƕӆஒ೏ࡲنၸޑ।य़೯೯኱૶ԋค
ਏ।य़(dirty page)( კ߄ 3ޑ(2))Ǵനࡕჹ೭
ঁӄࢂคਏ।य़(dirty page)ޑ୔༧຾Չܓ
ନǴֹԋӣԏ೭ঁ୔༧ޜ໔კ߄ 3ޑ(3))Ƕவ
კ 3.ޑጄٯё࣮рǴ೭ঁڱ֣ӣԏ୏բჴሞ
܌ӣԏޑёҔޜ໔ࢂ 4 ঁ।य़Ǵ܌аӣԏޑ
ਏ੻ࢂ 50%(ܓନ΋ঁх֖ 8ঁ।य़ޑ୔༧Ǵ
ՠჴሞѝӭளډ 4ঁёҔ।य़ޑޜ໔)Ƕ
3.5 Wear-Leveling  
җܭזଢ૶Ꮻᡏύ؂΋ঁ୔༧೿Ԗܓନ
ޑԛኧज़ڋǶऩࢌঁ୔༧ޑܓନޑԛኧຬၸ
ज़ڋǴ߾Ԝ୔༧߾཮኱Ңԋ bad blockǴ߄Ң
೭ঁ୔༧ςཞᚯЪόૈӆ٬ҔΑǶၸӭޑ bad 
block཮Ꮴठזଢ૶Ꮻᡏᔞਢس಍ၮբ֚
ᜤǴࣗԿΨёૈคݤӆ҅தၮՉǴ߄Ңٗ༧
זଢ૶Ꮻᡏคݤӆ٬ҔǶӢԜӵՖѐѳᑽӚ
ঁ୔༧ޑܓନԛኧǴၲډкϩޑճҔډ᏾ঁ
זଢ૶Ꮻᡏޜ໔ޑБݤکᢀۺǴᆀϐࣁѳ֡
ܓନ(Wear-leveling)Ƕ
җܭזଢ૶Ꮻᡏޑ୔༧೿ԖԖज़ޑ
erase cyclesज़ڋǶ΋૓ԶقǴ΋ঁ NANDז
ଢ૶Ꮻᡏޑ୔༧ޑ erase cycleऊӧ100KԛѰ
ѓ[2]Ǵ߄Ң྽୔༧೏ܓନຬၸ 100K ԛϐࡕ
ߡёૈ཮όૈӆ೏ܓନǴᏤठ୔༧คݤӆ೏
ڱ֣ӣԏӣԏ٬ҔǴ׎ԋ bad blockǶԶ྽΋
ঁזଢ૶Ꮻᡏύ bad blockຫӭǴ཮Ꮴठᔞਢ
س಍ύёҔޑ୔༧ຫϿǴӢԜёٮϩᏼӢHot 
Dataࢬᘺ೷ԋޑॄᏼޑ୔༧ຫϿǴ׳уೲΑ
ഭᎩ୔༧೏ܓନޑೲࡋǴനࡕ྽ bad blockޑ
ኧໆډၲ΋ۓޑำࡋϐࡕǴ཮٬ளᔞਢس಍
คݤӆ҅தၮբΠѐǴջ٬س಍ύᡉҢԖό
ϿёҔޜ໔Ƕ
4. Flash-Memory-Based File-System 
Benchmarks 
ӧϐࡕޑ೽ҽǴךॺ཮૸ፕךॺ܌ᢀჸ
ډޑ 3 ঁЬाޑזଢ૶Ꮻᡏᔞਢس಍
(JFFS2,YAFFS ک FAT32+NFTL)ၮբཷۺǴ
٠೴΋ှᇥдӧӚঁЬा᝼ᚒޑჴբБԄǴ
аϷᐱ੝ޑӦБǶךॺ཮Ӄଞჹ൳ঁຑໆޑ
ЬᚒբঁᇥܴکှញჴᡍޑᆒઓکҞޑǴନ
ΑЬाޑཷۺϐѦǴΨ཮ϩ݋Ӛᔞਢس಍ޑ
೛ीᓬલᗺکϐࡕᢀჸຑໆޑाᗺ໨Ҟ
(ӵǺਔ໔ǴܓନԛኧǴ૶Ꮻᡏ٬Ҕໆ฻)Ǵϐ
ࡕ཮ӆճҔ೭٤໨Ҟѐ೛ीჴᡍޑ๱ख़೽
ҽǶ
4.1 Flash-Space Utilization 
೭ᜐाӃుΕ௖૸ޑࢂޜ໔٬Ҕ౗
(space utilization)Ǵ೭΋೽ҽ૸ፕޑख़ᗺӧܭ
Flash ޑޜ໔ࢂցԖ೏ᔞਢس಍кϩޑճ
ҔǶඤقϐǴΨ൩ࢂ࣮Ӛᅿזଢ૶Ꮻᡏᔞਢ
س಍ճҔޜ໔ޑਏ੻ӵՖǴ੃຤ޣ(٬Ҕޣ)
ᜢ߯ޑୢᚒΨόѦЯࣁ”ӕኬޑ NAND זଢ
૶ᏫᡏёҔޜ໔ϐΠǴፔૈᓯӸޑ٬Ҕޣၗ
਑ໆനӭǻ”ǴᗋԖ”ᓯӸ࣬ӕޑᔞਢၗ਑Ǵ
বঁᔞਢس಍ന࿯࣪٬Ҕޜ໔?” аϷ”ࣁϙ
7ᆕךॺޑჴᡍ่݀Ǵӧ space utilizeationჴᡍ
ޑ߄౜ύёаளޕǴӧܭᓯӸε৒ໆᔞਢޑ
߄౜΢ YAFFS߄౜ޑനࣁрՅǴՠऩࢂس಍
ύӭኧޑᔞਢελλܭ΋ঁ page sizeޑ၉Ǵ
٬Ҕ JFFS2཮Кၨ࿯࣪ޜ໔Ƕ
5.2 RAM-space Requirements
5.2.1 Experimental Setup and 
Performance Metrics 
ჴᡍޑ؁ᡯεठ΢೿ࢂ୺Չෳ၂ޑำԄ
ࡕǴӆ೸ၸךॺуΕޑӧӚঁᔞਢس಍ӚԾ
ޑ૶Ꮻᡏϩଛໆीኧ (memory allocation 
count)ٰइᒵ logǴځдႽࢂ JFFS2ک FATԖ
٬Ҕ slabϩଛᏔǴ΋٤ሡा٬Ҕޑၗ਑่ᄬ
཮ӧس಍ύӃा؃૶Ꮻᡏӆϩപԋ฻ελޑ
ၗ਑่ᄬ฻ࡑ೏٬ҔǶीᆉ೭٤ӧس಍ύჴ
ሞ٬Ҕډޑ slab૶ᏫᡏǴёаҗ/proc/slabinfo
ளޕӚ slabޑελکϩଛޑঁኧǴϐࡕਥᏵ
೭٤ၗૻǴӆჴᡍޑ຾ՉၸำύǴךॺ཮؂
႖΋ࢤਔ໔ߡஒၗૻቪΕ log ύǴϐࡕӆਥ
Ᏽ log ᔞǴᢀჸჴᡍ຾Չޑၸำύ؂ൂՏਔ
໔૶Ꮻᡏ٬ҔໆޑᡂϯǶ
5.2.2 Test plans and Results 
ᜢܭ૶Ꮻᡏ٬Ҕໆ (RAM utilization)ჴᡍޑ೽
ҽǴךॺ٩ᙑЬाჄϩࣁ໵౯ηෳ၂کқ౯ηෳ၂ٿ
εᜪǶځύ೭္٬Ҕޑ໵౯ηෳ၂ࢂ௦ڗ PostmarkǴ
Զқ౯η߾ԖٿᅿჴᡍጄٯǶϩձࣁጄٯ΋ࣁ࿶த܄
׳ཥޑε৒ໆᔞਢ (Large file with frequency small 
update) کጄٯΒߚதӭޑλ৒ໆᔞਢȐMany Small 
Files should be written or readȑǶ
ᆕӝޑჴᡍ่݀ǴӧMemory utilization
ჴᡍޑ߄౜ύёаளޕǴᗨฅ JFFS2 ӧೀ౛
ᔞਢޑ୺Չ୏բ΢КၨِೲǴՠҗܭ٬Ҕٰ
բՏ֟ᙯඤޑၗ਑่ᄬϼӭǴᏤठ཮੃઻௞
εໆޑ૶Ꮻᡏޜ໔Ǵ੃઻ޑ૶Ꮻᡏޜ໔ޑε
λЬाࢂکᔞਢس಍ύᓯӸޑ raw nodeኧໆ
ԖᜢکᓯӸၗ਑ελคᜢǴٯӵǺճҔόӕ
ኧໆޑ raw nodeኧѐᓯӸӕኬޑၗ਑ϣ৒Ǵ
੃઻ޑ૶ᏫᡏΨ൩ᒿϐόӕǶ
YAFFSჹܭ૶Ꮻᡏޑ٬Ҕໆ΢࣬྽ޑ࿯
ڋǴӧ 3 ঁᔞਢس಍ύ߄౜Ңനߝ౳ޑǶ
YAFFS٬Ҕ૶Ꮻᡏ੃઻ޑำࡋکᔞਢس಍ύ
ޑᔞਢঁኧԋ҅࣬ᜢǴջᔞਢኧໆຫӭ੃઻
ޑ૶ᏫᡏຫӭǴόၸ٬Ҕޑ૶Ꮻᡏໆᗋࢂᇻ
ᇻޑϿܭ JFFS2ǶќѦᔞਢελΨ཮٤༾ޑ
ቚу YAFFS૶Ꮻᡏޑ٬ҔໆǴՠቹៜόεǴ
ѝाᔞਢελڰۓǴٗሶ੃઻૶Ꮻᡏ৒ໆࣁ
ۓॶǶ
Զ NFTL+FATޑಔӝǴᗨฅ NFTLҁي
ѝೀ౛ᡄᒠՏ֟کჴᡏՏ֟ޑᙯඤǴѝࡌᄬ
ΑٿঁЬाޑ߄਱Ǵՠҗܭ FAT32TޑಔӝǴ
ᗨฅ NFTL ҁيѝೀ౛ᡄᒠՏ֟کჴᡏՏ֟
ޑᙯඤǴѝࡌᄬΑٿঁЬाޑ߄਱Ǵՠҗܭ
ӧ FAT32ޑᔞਢس಍ΠǴࡌᄬ΋ঁᔞਢ൩ሡ
ा੃઻΋ঁ FAT_ENTRY (4Kbytes)Ǵ܌а૶
Ꮻᡏ੃઻ޑำࡋکᔞਢس಍ύޑᔞਢঁኧԖ
ᜢǴόڙᔞਢελቹៜǶ
5.3 Garbage Collection 
5.3.1 Experimental Setup and 
Performance Metrics
ჴᡍइᒵޑਔ໔ࢂճҔ Rdtsc.h ٰइᒵ
ٿঁ୔໔܌޸຤ޑ cpu cycleӆඤᆉԋჴሞਔ
໔ǴԶ᠐/ቪ/ܓନԛኧ೿ࢂӆ nandsimኳಔύ
ӼකΕךॺޑीኧୖኧٰीᆉޑǶךॺໆෳ
ޑਔ໔ࣁЬाޑ Application timeǵfilesystem 
timeǵGC timeаϷMTD device time(΢ॊ 4
ঁਔ໔ीᆉࢂؒԖ٬Ҕ nandsim delayǴ܌а
પᆐࢂीᆉрኳᔕ୏բਔ܌޸ޑ cpu cycleǴ
ځύMTD device timeࢂ File system+GC time
ޑ΋೽ϩǶԶനಖჴᡍኧᏵύޑ other 
time=Application time-(filesystem time+GC 
time))ǴനࡕᗋԖჴሞ޸຤ӧ nandsim ΢ޑ
NANDsim device timeǶ
ԶໆෳޑኧᏵନΑ΢ॊޑਔ໔ѦǴᗋԖ
ीኧჴᡍၸำ޸຤ޑ୷ҁޑ᠐/ቪ/ܓନޑԛ
ኧǶЬाޑ؁ᡯךॺ཮ճҔӼකӧᔞਢس಍
ύޑୖኧಕी޸຤ӧᔞਢس಍ҁيǴڱ֣ӣ
ԏ೽ҽаϷ઻ཞӧ MTD Device ቫޑਔ໔ک
ჴሞӧ nandsim ΢୺Չ୏բޑਔ໔Ǵीᆉр
ӧ؂΋ঁ໘ࢤ޸຤ޑਔ໔ǶࣁΑזೲ຾Չჴ
ᡍǴӧࡕය೽ҽךॺڗ੃ nandsim delay ਔ໔
ޑᐒڋǴճҔୖኧಕीٰளډ઻຤ޑਔ໔Ǵ
ځύऍύόىޑӦБǴࢂคݤϩձղձр޸
9ࢂ٬Ҕ Postmarkբࣁךॺ໵౯ηෳ၂πڀǴ
ӧқ౯ηޑ೽ҽ߾ࢂໆෳጄٯ΋ǺൻׇቪΕ
(Sequential Write)ǴکጄٯΒǺኳᔕזଢ૶Ꮻ
ᡏऊ 90ʘޑޜ໔ࢂӸܫᓉᄊၗ਑ǴѝԖഭᎩ
ऊ 10ʘޑޜ໔ёٮ٬Ҕޑ௃׎
(Static/Dynamic file ratio 90/10)Ƕ
ᆕӝךॺޑჴᡍ่݀Ǵӧѳ֡ᑃཞჴᡍ
ޑ߄౜ύёаளޕǴନΑ JFFS2٬Ҕ 99/1ޑ
ݤ߾ᒧ᏷ڱ֣ӣԏޑҞ኱୔༧ϐѦǴќѦٿ
ঁᔞਢس಍ѝ଺ Dynamic Wear - levelingǶऩ
ࢂᓯӸޑၗ਑ࣣࣁ୏ᄊǴᡂ୏܄ࡐεޑᔞਢ
ਔǴΟޣѳ֡ᑃཞਏ݀ؒԖϙሶϼεޑৡ
ձǶՠ྽س಍ύᓉᄊၗ਑ࣁεӭኧਔǴ
Dynamic Wear-leveling ό཮ѐ׳୏ډᓯӸᓉ
ᄊᔞਢޑ୔༧ޜ໔ǴᏤठᒧ᏷ٰբܓନޑҞ
኱୔༧཮໣ύӧٗ٤όᘐᡂ׳ᓯӸၗ਑ޑ୔
༧΢Ǵ܌аWear-levelingޑਏ݀όᄆǶJFFS2
җܭ 99/1ޑݤ߾Ǵਏ݀ΨࢂԖज़Ǵѝૈᆢ࡭
ܓନԛኧനεکനλޑКॶऊࣁ 9Ǻ1ރᄊǴ
Кځдٿᔞਢس಍ౣӳ΋٤Ƕ܌а᏾ᡏٰᇥ
3 ᅿᔞਢس಍ wear-leveling ޑਏ݀೿όᅰ౛
གྷǶ
6. Conclusion 
  
аזଢ૶Ꮻᡏࣁ୷ᘵޑᓯӸس಍Ҟ߻ς
࿶ࢂ൪ΕԄᓯӸس಍ޑЬࢬǶҁፕЎޑҞޑ
ࢂ೸ၸ೛ीཥޑਏૈຑКБԄǴٰෳ၂ँᡉ
Ӛঁזଢ૶Ꮻᡏᔞਢس಍೛ी΢ޑᓬ༈ᆶӍ
༈Ƕෳ၂ຑКჹຝࣁҞ߻ёϦ໒ڗளϐ
JFFS2, YAFFS, аϷ NFTLǶຑКჹຝх֖
זଢ૶Ꮻᡏচғᔞਢس಍аϷ୔༧း࿼ኳᔕ
س಍ǶԶຑКޑ໨ҞǴЬाаזଢ૶Ꮻᡏᆅ
౛᝼ᚒǴаϷ൪ΕԄس಍ޑ੝ቻࣁЬǶǶх
ࡴΑזଢ૶Ꮻᡏޜ໔ޑ٬Ҕ౗ǴRAMޜ໔ޑ
٬Ҕ౗Ǵڱ֣ӣԏޑਏૈǴаϷѳ֡ᑃཞޑ
ਏૈǶନΑ΋૓தҔڂࠠޑᔞਢس಍ຑКำ
ׇǴ΋٤೛ीٰኪ៛೛ीલഐޑෳ၂ำׇΨ
೏௦ҔǶ೸ၸཥޑຑКำׇǴךॺว౜Αࡽ
Ԗזଢ૶Ꮻᡏᔞਢس಍΋٤а۳٠ؒԖ೏ቶ
ࣁڬޕޑ೛ीલഐǶҁፕЎޑኧᏵ่݀Ǵࢂ
ନΑᡉ౜΋૓ڂࠠπբໆΠޑਏૈϐѦǴΨ
׆ఈૈ֋ນ᠐ޣӧবᅿπբໆΠᅰёૈޑᗉ
խ٬Ҕব٤ᔞਢس಍ǴаխഐΕԋਏόᄆЪ
ਏૈեပޑ௃׎Ƕ
Reference 
[1] G. Irlam, “Unix File Size Survey,” 1993. 
http://www.gordoni.com/ufs93.html
[2] A. Inoue and D. Wong, "NAND Flash Applications 
Design Guide" , April, 2003.
[3] Li-Pin Chang and Tei-Wei Kuo, "Efficient 
Management for Large-Scale Flash-Memory Storage 
Systems with Resource Conservation," ACM 
Transactions on Storage, Volume 1, Issue 4, 2005. 
[4] Intel Corporation, “Understanding the Flash 
Translation Layer (FTL) Specification". 
[5] SSFDC Forum, "SmartMediaTM Specification", 1999. 
[6] Compact Flash Association, “Compact FlashTM 1.4 
Specification," 1998. 
[7] Linux MTD project and M-System, “NAND Flash 
Memory Translation Layer (NFTL).” 
[8] Nitesh Goyal and Rabi N Mahapatra "Energy 
Characterization of CRAMFS for Embedded 
Systems", Proceedings of International Workshop on 
Software Support for Portable Storage (IWSSPS), 
March 2005.  
[9] Siddharth Choudhuri, Rabi Mahapatra, "Energy 
Characterization of Filesystems for Diskless 
Embedded Systems", Design Automation 
Conference (DAC), June 2004. 
[10] Aleph One Company, “Yet Another Flash Filing 
System (YAFFS) "' 
[11] L. P. Chang and T. W. Kuo, “An Adaptive Striping 
Architecture for Flash Memory Storage Systems of 
Embedded Systems,” 8th IEEE RTAS, September 
2002, pp. 187-196 
[12] Han-joon Kim and S. Lee, “A New Flash Memory 
Management for Flash Storage System.“,  In 
Proceedings of the 23rd Annual International 
Computer Software and Applications Conference, 
pages 284–289, 1999. 
[13] Ousterhout, J., Da Costa, H., Harrison, D., Kunze, J., 
Kupfer, M., and Thompson, J., A Trace- Driven 
Analysis of the UNIX 4.2 BSD File System, 
Proceedings of the Tenth Symposium on Operating 
Systems Principles, Orcas Island WA, December 
1985, pp. 15-24. 
[14] Atsuo Kawaguchi et al., “A Flash-Memory Based 
File System”, in USENIX Technical Conference, 
1995 
[15] Linux MTD Project, “Journaling Flash File System 
(JFFS), Journaling Flash File System 2 (JFFS2), and 
Journaling Flash File System 2 (JFFS3).” 
[16] Bray, T, ”The Bonnie home page.”,  
http://www.textuality.com/bonnie, 1996.  
[17] Katcher, J., “PostMark: A New Filesystem 
Benchmark. Tech. Rep. TR3022, Network 
Appliance.”, 
www.netapp.com/techlibrary/3022.html ,1997 
[18] William D. Norcott., Don Capps, “Iozone 
Filesystem Benchmark”, 
http://www.iozone.org/docs/IOzone_msword_98.pdf
[19] N. Joukov, A. Traeger, CP Wright, Zadok, 
“Benchmarking File System Benchmarks”, 
ETechnical Report FSL-05-04b, CS Department, 
