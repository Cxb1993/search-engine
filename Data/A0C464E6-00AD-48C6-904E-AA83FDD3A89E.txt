 1
（一） 計畫中文摘要 
關鍵詞：MPEG-2, AVC/H.264, 轉碼器, 錯誤分析 
本計劃為一年期計劃，進行「MPEG-2 至 AVC/H.264 轉碼器設計之誤差分析」之研究。
此研究係由以下兩個部分所構成： 
 
1. MPEG-2 至 AVC/H.264 轉碼器之誤差理論分析： 
根據 MPEG-2 及 AVC/H.264 壓縮步驟，及現有之 MPEG-2 至 AVC/H.264 轉碼方法，
分析誤差的成因並設計誤差分析模組 
2. MPEG-2 至 AVC/H.264 轉碼器之誤差分析實作與驗證： 
誤差分析模組實作及轉碼器之誤差驗證與比較，藉此瞭解各轉碼器之誤差成因，與此
分析模組之效能，進一步整合各轉碼器之優點以提供更好的轉碼品質 
 
（二） 計畫英文摘要 
Keyword：MPEG-2, AVC/H.264, Transcoder, Error Behavior Analysis 
In this project, “Error Behavior Analysis for MPEG-2-to-AVC/H.264 Transcoder”, it contains 
the following two parts: 
 
1. Error behavior analysis of MPEG-2-to-AVC/H.264 transcoder： 
According to the MPEG-2 and the AVC/H.264 specification，and the algorithm of the 
MPEG-2-to-AVC/H.264 transcoder in the literature，error behavior analysis method will be 
investigated and provided. 
2. Implementation and verification of error behavior analysis method： 
Based on the part1, we will implement the error behavior analysis method and verify the 
accuracy. Furthermore, we can integrate the advantages of different transcoder methods for 
providing better transcoding video quality. 
 
(三) 前言及研究目的 
由於MPEG-2的壓縮品質良好，DVD及各國極力推廣的數位電視/高畫質電視(DTV/HDTV) 
均採用 MPEG-2 作為壓縮的標準，然而，目前最先進的視訊壓縮標準則是由 ITU-T 及
ISO/IEC 所共同制訂的 AVC/H.264。因為 MPEG-2 與 AVC/H.264 各有擅長，使用者可能
想將 AVC/H.264 的影片轉成較廣泛流通的 MPEG-2 影片格式；也可能想將影片格式由
MPEG-2 轉成 AVC/H.264 以降低儲存空間，而 MPEG-2-to-AVC/H.264 轉碼器便是因應這
些需求而產生，因此，無論是學術界及產業界都有相當多的單位在進行
MPEG-2-to-AVC/H.264 快速轉換的研究，我們也在上期計畫提出以矩陣計算為基礎，針
對採用 MPEG-2 及 AVC/H.264 標準壓縮的影片進行轉換時必須進行之”不同大小”及”不同
離散餘弦轉換核心(DCT Transform Kernel)”交互轉換，在軟硬體實作上均極有效率的方
法，讓使用者可以輕易地進行 MPEG-2 與 AVC/H.264 之格式轉換，並維持較好的影像品
 3
1. 離散餘弦轉換核心及量化級距誤差分析模組 
AVC/H.264 的量化級距由 0 至 51，量化級距愈大，代表壓縮的效率愈高，但影像失真
也會愈大。在這一個分析模組，我們控制影片 A 及 B 的量化級距，並挑選其中的 Intra 
Frame，作為畫質比較的對象，這是因為 Intra Frame 的壓縮過程中，不需要參考其他的
畫面，因此可以充分比較重新壓縮方法與快速轉碼方法在離散餘弦轉換核心的表現與量
化級距的影響(當量化級距設定為 0 時，代表不經過量化處理，則可以完全觀察離散餘
弦轉換核心的效能)，又因為 AVC/H.264 以 4x4 的區塊作為壓縮的單位，因此我們也以
一個 4x4 的區塊作為比較的單位，比較不同量化級距所產生的差異。 
在此項分析中，我們根據不同量化級距(0~51)產生不同量化程度的檔案分別為 A0~A51
及 B0~B51，假設 a 為在 Ai中隨機取出之一個 4x4 壓縮區塊，則相對應 Bi及原圖的區塊
分別為 b 及 o，則 
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎣
⎡
=
33323130
23222120
13121110
03020100
aaaa
aaaa
aaaa
aaaa
a 、
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎣
⎡
=
33323130
23222120
13121110
03020100
bbbb
bbbb
bbbb
bbbb
b 及
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎣
⎡
=
33323130
23222120
13121110
03020100
oooo
oooo
oooo
oooo
o ， 
平均誤差的定義方式有以下兩種，為 
1. 累積誤差：
16
3
0
3
0
1
∑∑
= =
−
= i j
ijij
a
oa
E  及 
16
3
0
3
0
1
∑∑
= =
−
= i j
ijij
b
ob
E  
2. 絕對誤差：
16
3
0
3
0
2
∑∑
= =
−
= i j
ijij
a
oa
E  及 
16
3
0
3
0
2
∑∑
= =
−
= i j
ijij
b
ob
E  
當統計數量夠多時，累積誤差 E1a 及 E1b 可以表現出誤差正負相抵銷後的結果，而取絕
對值後的 E2a 及 E2b 則可以用來紀錄兩者間的絕對差距。 
2. 原始影像畫質對轉碼器效能的分析模組 
討論轉碼器的效能時，除了比較計算複雜度之外，另一個常用來作為比較的標準便是計
算與原圖的 PSNR，PSNR 值愈高代表與原圖愈相近，但事實上，轉碼方法的效能會受
到原圖畫質的影響，同樣的轉碼方法針對不同的影片進行格式轉換時，若原圖的畫質愈
高則轉換後的 PSNR 值也會比較高，這也表示只用 PSNR 來作為轉碼器效能的比較標準
可能不足以完全代表效能的高低，因此，我們認為應該針對同一份檔案在不同畫質下的
轉碼效果一起比較會更具代表性。根據在此模組中，我們針對 MPEG-2 壓縮標準規格書
中的定義，設定不同的量化係數 (Quantization Scalar, QS = 0~1)，我們可以得到不同的
量化表，並藉此調整 MPEG-2 影片的壓縮比率及畫質。 
3. 誤差累積分析模組 
影片壓縮的原理是藉由過去處理過的畫面計算現在畫面的移動向量，如此一來，只要針
對資訊量較小的移動補償進行離散餘弦核心轉換、量化及編碼的動作即可。所以，過去
資料的準確與否將會影響影片壓縮的效果，如果解碼時產生誤差，也會因此累積至其他
 5
低是因為誤差累積的結果，而 SNR 升高的原因是 P-frame 跨過中間的 B-frame，重新參
考更前面的 I-或 P-frame，使得誤差結果不會繼續下降。 
 (七) 成果自評 
若為了有效率地完成 MPEG-2 與 AVC/H.264 間的格式互換，而損失影像品質便失去了
當初發展 AVC/H.264 的意義，但是以目前廣泛使用的訊號雜訊比(PSNR，Peak Signal to 
Noise Ratio)比較方式往往無法讓人瞭解真正誤差發生的位置與造成的影響，因此，我們
相信提供一個具代表性的轉碼誤差分析方法，絕對是 MPEG-2 至 AVC/H.264 快速轉碼
器的研究中不可或缺的一部份。因此，我們提出系統性的 MPEG-2 至 AVC/H.264 轉碼
器誤差分析方法，並以成為轉碼器效率的比較標準之一為目標，未來也將延伸至其他格
式轉換的誤差分析，並根據此分析結果，設計誤差回復的機制，提供更良好的轉碼影像
品質。 
在原計畫所規劃之四項工作項目，均如期完成，包括： 
A. 收集影片，並根據不同參數(如量化係數、量化級距等)建立一系列之測試資料庫 
B. 撰寫文獻上重要的 MPEG-2 至 AVC/H.264 轉碼程式以作為誤差分析比較的基礎 
C. 實際進行誤差模組分析，進一步瞭解誤差模組的優缺點，加以調整使成具代表性之
轉碼器效能分析標準 
D. 實際進行誤差模組分析，進一步瞭解各轉碼器的優缺點，並整合各轉碼器之優點、
發展誤差回復機制以提高轉碼影像品質 
然而，受限於人力，因此實驗模擬結果及相關 MPEG-2 至 AVC/H.264 轉碼程式實作仍
有一些不足之處，這些部分未來仍將繼續加以完成。 
本計畫將部分成果投稿至 IEEE Transactions on Circuits and Systems for Video 
Technology 獲得接受，並刊登於 IEEE Transactions on Circuits and Systems for Video 
Technology, Vol.17, Issue 1, Jan. 2007 (論文最後版本如附件 1)，此外，根據誤差分析模
組所設計之量化表的修改方式也已申請到台灣專利，專利號碼為「發明第 I 280804 號」，
專利權期間自 2007 年 5 月 1 日至 2025 年 9 月 25 日止(專利證書如附件 2)。 
 
參考文獻 
CHEN00 Y.J. Chen, S. Oraintara, and T.Q. Nguyen, ”Video Compression Using Integer 
DCT,” IEEE International Conference on Image Processing, Vancouver, Sep. 
2000. 
CHEN02 Y.K. Chen, N. Yu, and B. Shah, ”Digital Signal Processing on MMX 
 7
DCT-domain," Signal Processing, Image Commun., vol.19, 2004. 
SONG00 Junehwa Song and Boon-Lock Yeo, ”A Fast Algorithm for DCT-domain 
Inverse Motion Compensation Based on Shared Information in a Macroblock,” 
IEEE Transactions on Circuits and Systems for Video Technology, vol.10, 
no.5, Oct. 2000. 
SU05b Y. Su, Jin Xin, Anthony Vetro, Huifang Sun, "Efficient MPEG-2 to 
H.264/AVC Intra Transcoding in Transform-domain", IEEE International 
Symposium on Circuits and Systems (ISCAS), May 2005 
TSAI05 Yuh-Chou Tsai, and Chia-Wen Lin, “H.264 Error Resilience Coding Based on 
Multihypothesis Motion Compensated Prediction”, IEEE International 
Conference on Multimedia and Expo, Jul., 2005. 
VETR02 Anthony Vetro, T.Hata, N. Kuwahara, H. Kalva, and S. Sekiguchi, 
Complexity–quality analysis of transcoding architectures for reduced spatial 
resolution, IEEE Transactions on Consumer Electronics, vol. 48, issue 3, Aug. 
2002, 
VETR03 Anthony Vetro, C. Christopoulos, and Huifang Sun, "Video transcoding 
architectures and techniques: An overview," IEEE Signal Process. Mag., 
Vol.20, No.2, Mar. 2003. 
WANG05 Haiying Wang, and Jing Lv, “A Novel Error Concealment Scheme for Intra 
Frames of H.264 Video,” IEEE Int. Workshop VLSI Design and Video Tech., 
Suzhou, China, May 2005. 
XIN04a Jun Xin, Anthony Vetro, and Huifang Sun, “Converting DCT Coefficients to 
H.264/AVC Transform Coefficients,” Proceedings of the IEEE Pacific-Rim 
Conference on Multimedia (PCM), Nov. 2004. 
XIN05 Jun Xin, C.W. Lin, and M.T. Sun, ”Digital Video Transcoding,” Proceedings 
of the IEEE, vol.93, no.1, Jan. 2005. 
YONE05 A. YONEYAMA, H. YANAGIHARA, Y. TAKISHIMA, and Y. NAKAJIMA, 
“Video Error Concealment by the combination of Spatio-temporal Recovery 
and Post-filter for H.264,” IEEE International Conference on Consumer 
Electronics, 2005. 
YU04 Hong-Bin Yu, Ci Wang and Songyu Yu, “A Novel Error Recovery Scheme for 
H.264 Video and Its Application in Conversational Services,” IEEE Trans. on 
Consumer Electronics, vol.50, no. 1, Feb. 2004. 
ZHAN04 Yong-dong Zhang, Feng Dai, Shou-xun Lin, “Fast 4×4 Intra-prediction Mode 
Selection for H.264,” IEEE 2004 International Conference on Multimedia and 
Expo, 2004 
ZHOU03 X. Zhou, E.Q. Li, and Y.K. Chen ”Implementation of H.264 Decoder on 
General-Purpose Processors with Media Instructions,” SPIE Conference on 
Image and Video Communications and Processing, Jan. 2003.  
120 IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS FOR VIDEO TECHNOLOGY, VOL. 17, NO. 1, JANUARY 2007
An Efficient Matrix-Based DCT Splitter/Merger for MPEG-2-to-AVC/H.264
Transform Kernel Conversion
Yuh-Jue Chuang, Member, IEEE, and Ja-Ling Wu, Senior Member, IEEE
Abstract—An efficient matrix-based discrete cosine transform
splitter/merger for realizing MPEG-2 to AVC/H.264 transform
kernel conversion is presented in this paper. Due to its ma-
trix-based nature, the proposed transform kernel converter can
be readily implemented by specific multimedia instruction set
available today. Both the computational complexity and numerical
error behavior of the proposed approach are shown to be supe-
rior to that of the straightforward (full decoding + reencoding)
one. In other words, the effectiveness of the proposed algorithm
can be justified by examining both the execution speed and the
reproduced image quality.
Index Terms—Discrete cosine transform (DCT), DCT splitter/
merger, MPEG-2-to-AVC/H.264 transform Kernel conversion.
I. INTRODUCTION
MULTIMEDIA signals, such as images and videos, are al-ways compressed to conserve valuable system resources
like storage space and network bandwidth [1]. The discrete
cosine transform (DCT) [2] has well-known energy packing
property and the 8 8 DCT has been adopted extensively by
the major coding standards, such as JPEG, MPEG-1/2/4, and
H.26x series. Currently, the latest AVC/H.264 [3] video coding
standard provides the capability to predict samples locally
down to 4 4 blocks before operating transform coding, an
impressive compression gain has been obtained. However,
due to wide spread DVDs and the trend of HDTV/DTV, most
existing video contents are still encoded in MPEG-2 form.
Therefore, the MPEG-2-to-AVC/H.264 transcoder [4]–[12]
or vice versa, is believed to be an indispensable functional
module of future video signal treatments. There are many
issues [4] in MPEG-2-to-AVC/H.264 transcoding including
motion vector compensation [6], [12], block size selection [7],
transform kernel conversion [8], and transform-domain intra
prediction [5]. In this work, we focus only on the transform
kernel conversion between the two standards.
Manuscript received August 25, 2005; revised March 17, 2006. This work
was supported in part by the National Science Council,R.O.C. under Contracts
NSC95-2221-E-182-001 and NSC95-2221-E-182-037. This paper was recom-
mended by Associate Editor J. F. Arnold.
Y.-J. Chuang is with the Communication and Multimedia Laboratory, De-
partment of Computer Science and Information Engineering, National Taiwan
University, Taipei, Taiwan 333, R.O.C. She is also with the Graduate Institute
of Health Care Management, Chang Gung University, Taoyuan, Taiwan 106,
R.O.C. (e-mail: chuangyj@cmlab.csie.ntu.edu.tw).
J.-L. Wu is with the Communication and Multimedia Laboratory, Depart-
ment of Computer Science and Information Engineering, National Taiwan Uni-
versity, Taipei, Taiwan 106, R.O.C. He is also with the Graduate Institute of
Networking and Multimedia, National Taiwan University, Taipei, Taiwan 106,
R.O.C. (e-mail: wjl@cmlab.csie.ntu.edu.tw).
Color versions of Figs. 1 and 2 are available online at http://ieeexplore.ieee.
org.
Digital Object Identifier 10.1109/TCSVT.2006.887077
The simplest way to develop a different size transform kernel
conversion for MPEG-2-to-AVC/H.264 transcoder is directly
cascading an 8 8 inverse DCT (IDCT) with four 4 4 DCTs.
Many fast algorithms have been proposed to efficiently split an
8 8 DCT into four adjacent 4 4 DCTs without performing
the 8 8 IDCT and the four 4 4 DCTs [8]–[11]. However,
such methods can not be directly applied to the MPEG-2-to-
AVC/H.264 transcoder. Problems come mainly from the fact
that the 4 4 DCT kernel used in AVC/H.264 has been modi-
fied for ease of implementation [3]. In this paper, we investigate
the relation between the modified 4 4 DCT kernel and the
conventional one, and then, show that with some simple post
processes, the existing DCT splitting algorithms still can be ap-
plied to complete the MPEG-2-to-AVC/H.264 conversion. Fur-
thermore, most of the modern processors have specific multi-
media instruction sets to facilitate multimedia applications, such
as the single-instruction-multiple-data (SIMD) execution model
which enables multiple arithmetic or logic operations to be exe-
cuted simultaneously, so as to improve the efficiency of the pro-
gram. It follows that matrix-based method is more suitable for
general-propose processors with SIMD instructions, and there-
fore, multiplication of matrices is chosen to be the vehicle for
developing the proposed DCT Splitter/Merger.
In this work, we will show that with some simple post pro-
cesses, the proposed DCT splitting algorithm can still be applied
to complete the transform kernel conversion from MPEG-2
to AVC/H.264. This paper is structured as follows. Section II
gives a short brief of the matrix-based DCT Splitter/Merger
[8]. Section III details how, with some simple post processes,
the proposed and other existing DCT splitting algorithms can
be applied to complete the transform kernel conversion from
MPEG-2 to AVC/H.264. Section IV concludes this write up.
II. MATRIX-BASED 2-D DCT SPLITTER AND MERGER
We confine our attention first to the 1-D case. The normalized
forward Type-II DCT (DCT-II) of a length- sequence , given
in [2], can be written in matrix form as
(1)
where , , for
and , for . is an matrix with ele-
ments , .
Assume that the DCT coefficients and of two consecu-
tive -point data sequences and are given. The problem to
be addressed is how to efficiently compute the -point DCT co-
efficients which stands for the DCT coefficients of .
Then, the problem can be rewritten as how to efficiently com-
pute where .
1051-8215/$25.00 © 2007 IEEE
122 IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS FOR VIDEO TECHNOLOGY, VOL. 17, NO. 1, JANUARY 2007
, at the position , , for the
transform coefficients inside the block are given by
when both and are odd
when both and are even
otherwise
(10)
and
when both and are odd
when both and are even
otherwise
(11)
with
and
(12)
B. Proposed Transform and Quantization Methods for
MPEG-2-to-AVC/H.264 Transform Kernel Conversion
According to (2) and (3), an 8 8 DCT-II block can be
split into four 4 4 DCT-II blocks , , and
and vice versa, where is the DCT Splitter and is equivalent
to . Since can not be directly ap-
plied to conduct MPEG-2-to-AVC/H.264 transform kernel con-
version, we readdress the problem as how to compute such
that
(13)
For reusing existing DCT Splitting algorithms, the relationship
between and plays the key role. Equation (13) can be
reformulated as where
(14)
The definition of is general enough for being applied to
all existing algorithms which split a length-8 DCT into two
length-4 DCTs. can also be seen as the postprocess for ad-
justing the outputs of .
Because can be calculated as
(15)
and from (14), the complexity of depends on the com-
plexity of the multiplication of , which can be rep-
resented as
(16)
After substituting the corresponding variables defined in (5)
and (6), and can be written as
and
, respectively. It is easy to verify that
Using trigonometric equalities, we have
(17)
and
(18)
Consequently
(19)
where
and
The computation of can also be eliminated by absorbing
it into the quantization stage. This implies that can be
simplified to , in which can be pre-
calculated and stored. Let and
124 IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS FOR VIDEO TECHNOLOGY, VOL. 17, NO. 1, JANUARY 2007
Fig. 1. Average difference between the original block and the reconstructed
ones produced by the straightforward and the proposed approaches. When the
AVC/H.264 quantization step becomes larger, the average difference increases.
conversion is our focus, instead of transcoder, only intra-coded
blocks are considered in the following analyses.
The analysis unit of the proposed error model is a 4 4
block. We have randomly chosen 10 4 4 blocks from 18
standard test images of size 512 512 as the testing bench-
mark and examined the error behavior of the straightforward
and the proposed approaches with different quantization steps
defined in AVC/H.264 on each coefficient in-
side the 4 4 block. For each block and each quantization step,
, we first calculated the differences between the original block
and the reconstructed ones produced by the straightforward and
the proposed approaches, and also recorded the absolute values
of them. Then, we computed the average of each of the differ-
ences from 1.8 10 blocks and conducted the corresponding
error behavior analyses.
Fig. 1 presents the average differences between the original
pixel values and the ones reconstructed by using the straightfor-
ward and the proposed approaches, where the and axes
are the position of a 4 4 block, AVC/H.264 quantization
step and the average difference from the original pixel value,
respectively. Note that the position represents the value
in the axis. Because the trend of the differences
of the coefficients for the same quantization step are similar, we
average the differences. Since the results shown in Fig. 1 for the
two approaches are too close to be discriminated, we subtract
the results of the proposed approach from that of the straight-
forward one and show their differences in Fig. 2. Except for the
quantization steps where , we
find that all the differences are positive, and this means that the
difference produced by the straightforward approach is always
larger than that of the proposed approach. According to the def-
inition of , and (10), quantization factor doubles with
increase of 6. Due to the specific design of the third row in the
quantization factor table and the dequantization factor table
for , the difference between our approach and the straight-
forward one are close to zero, as shown in Fig. 2, in those
positions.
Fig. 2. Subtracting the average difference of the proposed approach from that
of the straightforward one for observing the relation between the AVC/H.264
Quantization Step and the difference between the straightforward and the pro-
posed approaches. Most values are positive means that the difference produced
by the straightforward approach is larger than that of the proposed approach.
IV. CONCLUSION
The 8 8 DCT is adopted extensively by the major coding
standards, such as JPEG, MPEG-1/2/4, and H.26x series.
However, instead of using the popular 8 8 DCT, the latest
AVC/H.264 employs 4 4 DCT as the transform kernel and
has better quality v.s. bandwidth performance. This paper
focuses on the DCT kernel conversions of different sizes.
Many fast algorithms have been proposed to efficiently split
one DCT block into four DCT blocks
and vice versa. MPEG-2 to AVC/H.264 transcoder is believed
to be an important functional module for future video signal
treatments. When , our method can be applied to
conduct MPEG-2-to-AVC/H.264 transform kernel conversion.
However, the existing methods for splitting an 8 8 DCT block
into four 4 4 DCT blocks can not be directly used because
the 4 4 DCT kernel of AVC/H.264 has been modified. We
proposed an efficient postprocessing method which can be com-
bined with any existing splitting DCT approach in the literature
to achieve an efficient DCT splitting. Since most of the modern
processors enable multiple arithmetic or logic operations to be
executed at the same time for improving the speed performance
of multimedia applications, the proposed matrix-based DCT
Splitter (or Merger), which can split an DCT block
into four or two (or ) modified
DCT blocks (or merger small size blocks into a large size one),
is designed for more suitable being realized on processors with
SIMD instructions than the other approaches.
REFERENCES
[1] S. F. Chang and D. G. Messerschmitt, “Manipulation and compositing
of MC-DCT compressed video,” IEEE J. Sel. Areas Commun., vol. 13,
no. 1, pp. 1–11, Jan. 1995.
[2] K. R. Rao and P. Yip, Discrete Cosine Transform: Algorithms, Advan-
tages, and Applications. New York: Academic, 1990.
[3] ITU-T Rec. Final Draft Int. Standard of Joint Video Specification,
ITU-T Rec. H.264—ISO/IEC 11496-10, Advanced Video Coding,
2003.
