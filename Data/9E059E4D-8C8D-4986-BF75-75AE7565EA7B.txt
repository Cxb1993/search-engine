 2
行政院國家科學委員會補助專題研究計畫成果報告 
 
直交量子基因演算法之研發及其應用 
Orthogonal Quantum Genetic Algorithm and Its Applications 
 
計畫編號：NSC96-2221-E-153-002-MY2 
執行期限：自 96 年 8 月 1 日至 98 年 7 月 31 日止 
主持人：蔡進聰 助理教授 國立屏東教育大學資訊科學學系 
共同主持人：陳永松 教授 國立中山大學物理學系 
計畫參與人員：陳建志、吳承晉、李國銘 
中文摘要 
本計畫案之目的在於發展一種強健性
可解決最佳化設計問題的直交量子基因演
算法，並可廣泛應用於數學函數優化、混合
離散與連續值且多限制之非線性型工程設
計最佳化、與允差設計最佳化等問題。第一
年度以量子計算原理為基礎，結合基因演算
法與實驗設計法，來改良量子基因演算法，
使其成為一種具強健型的最佳智能演算法
，並以數學函數最佳化問題來驗證此演算法
之可行性、強健性、與性能。第二年度將調
整直交量子基因演算法，使其可適用於解決
多變數、多局部最佳值、與混合離散與連續
值且多限制之非線性型之最佳化問題，與允
差設計最佳化等問題，進一步建立可廣泛應
用於不同類型問題的直交量子基因演算法
。經由解決以上不同領域之不同問題，期能
證實直交量子基因演算法為解決最佳化設
計問題之最佳進化演算法。 
關鍵詞：量子計算理論、基因演算法、實驗
設計法、智慧型進化演算法 
Abstract 
The purpose of this project is to develop 
a robust intelligent evolutionary algorithm, 
called orthogonal quantum genetic algorithm 
(OQGA), which will be applied to solve 
several optimization design problems 
including optimization of mathematical 
functions, mixed-discrete and non-linear 
design, and tolerance design. First, the robust 
intelligent evolutionary algorithm combines 
the quantum computation theory, the genetic 
algorithm, with the experimental design 
method to improve the function of the 
quantum genetic algorithm. The OQGA solves 
the optimization of mathematical functions 
problems and shows its capability, feasibility, 
and robustness. Then, the OQGA will be 
further developed, in the second year, to solve 
the complex mixed-discrete and non-linear 
design engineering problems, and tolerance 
design problems, and to prove its abilities for 
the different optimization problems of the 
different fields. We expect that the proposed 
OQGA will be the best approach to solve the 
optimization design problems. 
Keywords: Quantum Computation Theory, 
Genetic Algorithms, Experimental Design 
Method, Intelligent Evolutionary Algorithms 
前  言 
近年來進化演算法在解決系統參數選
用與工程設計的最佳化問題上，扮演相當重
要的角色，並成功的應用於不同領域，如參
數設計最佳化（如：機械元件設計、控制器
設計、濾波器設計、電路設計、IC 設計、
光學設計、密碼設計、允差設計…等）、組
合與排程最佳化（如：加工製造排程規劃、
物流排程規劃、路徑規劃、裝載規劃…等）
、模式識別、機器學習、管理決策、數學函
數優化...等領域。傳統解決最佳化問題的進
化演算法有基因演算法（Genetic Algorithms
）、進化策略法（Evolutionary Strategies）
、進化規劃法（Evolutionary Programming）
、爬山法（Hillclimbing）、模擬退火法（
Simulated Annealing）、禁忌搜索法（Tabu 
Search or Taboo Search）、及混合最佳化法
（Hybrid Optimization）...等。然而，上述所
 4
含收斂速度慢與未成熟即收斂的現象。進化
演算法之所以能讓個體進化，首先是採用選
擇操作，盡量選出比較好的個體，保證下一
代的個體普遍比上一代好，使個體能趨於最
佳解，同時採用進化操作（如：交叉與突變
），利用它們的破壞性來產生新的個體，進
而生成更好的個體，更重要的是維持母群體
的多樣性。從進化演算法可看出，雖然在進
化過程中，盡量維持個體的多樣性和群體收
斂性之間的平衡，但若沒有利用進化中未成
熟優良子群體所提供的信息，仍會有收斂速
度太慢的問題。雖然已有很多演算法對它進
行改良，但仍需進一步的突破。 
傳統進化演算法並未利用進化中未成
熟之優良子群體所提供的信息，因此限制了
進化速度。事實證明在進化中引入好的引導
機制可以增強演算法的智能性，提高搜索效
率，可解決進化演算法中早熟與收斂速度的
問題。以往有許多研究者致力於此方面的改
善研究（Hesser and Manner, 1990; Arabs et 
al., 1994; Srinivas and Patnaik, 1994），主要是
利用特定問題的啟發式知識來引導進化，過
程比較複雜，而且在一定程度上減弱了適應
性與廣泛性的特點。應用一種更自然和通用
的機制，來反映進化過程的規律，如果能在
進化過程中引入記憶和學習的機制，增強演
算法的智能性，則可以大大提高搜索效率，
解決進化演算法中的早熟與收斂速度等問
題。 
物理學是現代科學技術的基礎，它的發
展使人類獲得了對自然界前所未有的深刻
理解。人類在發掘生物進化機制，進行模仿
生物研究的同時，也受到啟發與影響。二者
之間相互觀摩，截長補短產生許多可行與成
功的理念，如模擬退火法就是由物理學推動
發展，進而應用至生物進化的領域（Van 
Laarhoven, 1992）。量子力學是二十世紀物
理學最大的發現之一，以量子力學基本原理
為基礎的量子資訊學是物理學與資訊科學
交叉融合產生的新研究領域，相關研究涉及
物理、計算機、通訊、數學等多門學科，為
資訊科學在二十一世紀的發展提供了新的
原理和方法，並帶動相關科學的發展（
Narayanna and Moore, 1996）。 
基於以上的探討，量子計算理論所擁有
的疊加性、相干性、糾纏性、以及並行性，
與量子位元編碼的染色體，可維持個體的多
樣性，避免早熟的問題，且可加快搜尋能力
，若結合進化演算法與量子計算理論，成為
量子進化演算法，將有機會來改良進化演算
的缺陷。 
研究目的 
在解決最佳化問題中，當所遭遇的問題
具有很多變數與很多局部最佳值時，演算法
最大的挑戰為陷入局部最佳值，而無法自拔
。近年來，很多最佳化演算法被發展出來，
其中基因演算法可同時搜尋多變數與多模
態的空間，並成功的解決複雜與不連續的問
題 (Goldberg, 1989; Gen and Cheng, 1997)，
極受到各界的青睞。但基因演算法所遭遇的
困難如前所述，當遭遇的問題具有很多變數
與很多局部最佳值時，常陷入局部最佳值且
每次所搜尋的值可能都不一樣。最初的改善
方向為調整基因演算法中的主要參數 (如
：群體個數、交配率、與突變率等)，試圖
跳脫局部最佳值 (Grefenstette, 1986; Davis, 
1989)，所獲得之改善成效仍然有限。近幾
年來，Han（Han and Kim, 2000, 2002; Han et 
al., 2001）與 Narayanan（Narayanan and 
Moore, 1996; Narayanna, 1999）等研究者，
利用量子計算理論改良基因演算法，強調量
子計算之並行處理能力，來解決組合最佳化
問題，所得的結果顯示由 Han 與 Narayanan 
所發表的量子基因演算法在解決組合最佳
化問題上，比傳統的基因演算法來得好。 
然而，當使用量子基因演算法來解決連
續性函數最佳化問題時，特別是有多峰值之
連續性函數最佳化問題，仍有許多的缺點，
例如：如何決定旋轉量子門的結構表、需獲
得先前最佳解的知識、早熟的現象等…，因
此，需改良現有的量子基因演算法來解決連
續性函數最佳化問題，仍值得進一步的研究
，Zhang 等研究者改良量子基因演算法，來
解決連續性函數最佳化問題，並應用於數位
濾波器的設計，所得的結果比許多傳統的基
因演算法所設計的數位濾波器來的好（
Zhang et al., 2003a, 2003b, 2003c）。Yang 等
研究者，以改良型的量子基因演算法為基礎
建立盲目資源分離（Blind Source Separation
）演算法，以線性轉換的問題來測試此演算
法，所得的結果比傳統的基因演算法與量子
基因演算法更有效率（Yang et al., 2003a, 
 6
步驟 3：重複執行以上 2 個步驟 n 次，則可
產生一組量子染色體向量 (x1, x2, 
xi,…, xn)。 
步驟 4：重複執行 Ps次的步驟 1 至 3，則可
產生 Ps 個初始量子染色體群體。 
利用交叉方法產生多樣化的子代 
交叉是進化演算法中產生多樣化子代
的方法，通常被採用的交叉方法，此計畫中
提出的方法為結合單點交叉與凸集合理論
之線性內插法（Bazaraa et al., 1990; Gen and 
Cheng, 1997），也就是任意選擇一個交叉點
，互換交叉點右邊部分的兩個母代，同時以
線性內插法計算交叉點上的兩個基因值，其
中一個交叉點上的基因值為當時兩個交叉
點上基因值的內插值，另一個交叉點上的基
因值為該變數上下限的內插值，如此可解決
當被選擇用來交叉的染色體相同時，無法產
生新子代的問題。例如：分別兩個母代為 x = 
(x1, x2, …, xn) 與 y = (y1, y2, …, yn)，假設 k
點為任意選擇的交叉點，則交叉方法與新的
子代 x' 與 y' 如下所述： 
),...,,,,'...,,,('
),...,,,,'...,,,('
2121
2121
nkkk
nkkk
xxxyyyy
yyyxxxx
++
++
=
=
     
其 中 )(' kkkk xyxx −+= β ，
)(' kkkk luly −+= β ，lk 與 uk 是 yk的範圍，
與 β 是屬於 [0, 1] 的亂數值。以此混合式
的交叉方式與新的 x' 與 y' 的產生方式，
可產生多樣化的子代，避免早熟發生。 
突變方法 
突變是進化演算法中產生新子代的另
一種方法，本計畫中提出兩種突變方法來產
生新的子代。 
第一種突變方法的基本觀念亦來自凸
集合理論之線性內插法（Bazaraa et al., 1990; 
Gen and Cheng, 1997），也就是當某一個基因
被決定突變時，再考慮是往本身最大值的方
向突變或往本身的最小值方向突變，若決定
往本身最大值的方向突變，即將當時的基因
值與此變數的最大值進行線性內插，產生突
變後新的基因值，反之，則將當時的基因值
與此變數的最小值進行線性內插。 
第二種方法乃利用量子計算理論中，各
個狀態間的轉移是通過量子旋轉門的方法
來進行突變，量子旋轉門的定義如下： 
⎥⎦
⎤⎢⎣
⎡ −=
)(cos
)(sin
)(sin
)(cos
)( θ
θ
θ
θθU  
其中θ 代表量子旋轉變異的角度。當某一個
基因被決定突變時，將其量子位元的一對數
值α與β 乘以量子旋轉門 U(θ )，產生新的一
對數值α 與β ，再轉換成實際的基因值。 
系統化推理產生優良子代機制 
實驗設計法之直交表以最少的實驗次
數，來處理大量變數的參數設計，變數中的
最佳組合乃利用直交表與訊號對雜訊比 η 
來產生。若需了解較詳細的內容或更高水準
之直交表，請參閱 Phadke (1989)、Ross (1989)
、Montgomery (1991)、Park (1996)、Taguchi 
et al. (2000)、與 Wu (2000) 等資料。在此計
畫案中，二水準的直交表將被用來產生新的
子代；假若有 Q 個因子（變數），每個因子
有二個水準，則 Ln(2n-1) 之直交表將被用來
進行實驗，其中 n = 2k 表示列或實驗的次數
，k 是大於 1 的整數，2 表示參與實驗因子
的水準數，n−1 表示行或實驗因子的數目且
Q ≤ n−1。如果 Q < n−1，只有前面 Q 行被
使用，而其餘的 n−1−Q 行則被忽略。原訊
號對雜訊比是依據與目標值 0 之平均均方
偏差所推導，在此為因應目標值為負數的情
況且僅為利用其值的大小來做比較，所以望
大特性是 ηi = yi 或望小特性是 ηi = 1/yi，
其中 yi 表示實驗 i 的適應值且 i = 1, 2, …, n
，n 代表實驗次數。然而每個因子中哪個水
準的貢獻度較大可依據下式來決定： 
Efl = sum of ηi for factor f at level l,  
其中 i 是實驗次數的編號，f 是因子的代號
，以及 l 是水準數。 
在量子基因演算法的交叉運算後，利用
實驗設計法來進行組合運算，每次任意選擇
二組染色體當成每個因子有二個水準來進
行直交表實驗，目的在於決定哪個因子應選
擇哪個水準，主要的依據為找出每個因子中
貢獻度較大的水準。例如：Ef1 > Ef2，則因
子 f 的最佳水準為水準 1，也就是來自第一
組的染色體，如果 Ef1 < Ef2，則因子 f 的最
佳水準為水準 2。所有因子的最佳水準被選
定後，則產生一個新的子代。這個經由 n 次
實驗所產生的新子代擁有相當好的適應值
 8
其他領域。研究成果之投稿和發表情形如下
： 
1. J. T. Tsai, K, M. Lee, W. H. Ho, and J. H. 
Chou, “Mixed-Discrete-Continuous 
Design Optimization by Using An 
Improved Quantum Genetic Algorithm,” 
Submitted to IEEE Trans. on Evolutionary 
Computation, 2009. (SCI/EI) 
2. J. T. Tsai, “Robust and Optimal 
Parameters Design Approach for 
Tolerance Design Problems,” Submitted to 
Engineering Optimization, 2009. (SCI/EI) 
3. J. T. Tsai, W. H. Ho, and J. H. Chou, 
“Design of Two-Dimensional Recursive 
Filters by Using Taguchi-Based Immune 
Algorithm,” IET Signal Processing, Vol. 2, 
No. 2, pp. 110-117, 2008. (SCI/EI) 
4. J. T. Tsai, W. H. Ho, and J. H. Chou, 
“Optimal Design of Two-Dimensional IIR 
Filters by Using an Improved Genetic 
Algorithm,” Expert Systems With 
Applications, Vol. 36, No. 3, pp. 
6928-6934, 2009. (SCI/EI) 
5. W. H. Ho, J. T. Tsai, G. M. Hsu, and J. H. 
Chou, “Process Parameters Optimization: 
A Design Study for TiO2 Thin Film of 
Vacuum Sputtering Process,＂ IEEE 
Trans. on Automation Science and 
Engineering, 2009. (SCI/EI) (Accepted for 
publication)  
6. J. T. Tsai, W. H. Ho, G. M. Hsu, T. K. Liu, 
and J. H. Chou, “Optimal process design 
using soft computing approaches,” Proc. 
of the SICE 2008 Annual Conference, 
Tokyo, Japan, pp.344-347, August 2008. 
7. K. M. Lee, J. T. Tsai, W. H. Ho, T. K. Liu, 
and J. H. Chou, “Design Variables 
Optimization of Mechanical Problems,” 
Proc. of the 2008 IEEE International 
Conference on Innovative Computing, 
Information and Control (Paper Number: 
B14-03), Dalian, China, June 2008. 
8. J. T. Tsai, Y. M. Chen, W. H. Ho, G. C. 
Hong, and J. H. Chou, “Optimization of 
Drug Scheduling in Cancer Chemotherapy 
by Using Evolutionary Algorithm,” Proc. 
of the 12st
 
Conference on Artificial 
Intelligence and Applications, Yunlin, 
Taiwan, pp. 732-735, November 2007. (in 
Chinese) 
9. J. T. Tsai, W. H. Ho, J. H. Chou, and T. K. 
Liu, “Circuit Tolerance Design Using an 
Improved Immune Algorithm,” Proc. of 
the Second International Conference on 
Innovative Computing, Information and 
Control (ICICIC 2007), (Paper Number: 
ICICIC-2007-IS46-008), Kumamoto, 
Japan, Sept. 2007. 
 
參考文獻 
1. Abdesslem, L., M. Soham, and B. 
Mohamed, 2006, “Multiple Sequence 
Alignment by Quantum Genetic 
Algorithm,” 20th International Parallel 
and Distributed Processing Symposium, p. 
8. 
2. Arabs, J., Z. Michalewicz, and J. 
Mulawake, 1994, “GAVAPS – Genetic 
Algorithms with Varying Population 
Size,” The First IEEE Conference on 
Evolution Computation, Orlando, Florida, 
1994. 
3. Arora, J. S. and M. W. Huang, 1994, 
“Methods for Optimization of Nonlinear 
Problems with Discrete Variables: A 
Review,” Struct. Optim., Vol. 8, pp. 
69-85. 
4. Bazaraa, M., J. Jarvis, and H. Sherali, 
1990, Linear Programming and Network 
Flows, John Wiley and Sons, New York. 
5. Bhrman, H., R. Cleve, A.Wgderson, 1998, 
“Quantum vs. Classical Communication 
and Computation,” Proceedings of the 
30th Symposium on Theory of Computing, 
pp. 63-68. 
6. Bremicker, M., P. Y. Papalambros, and H. 
T. Loh, 1990, “Solution of Mixeddiscrete 
Structural Optimization Problems with A 
New Sequential Linearization Algorithm,” 
Comput. Struct., Vol. 37, pp. 451-461. 
7. Cai, J. and G. Thierauf, 1993, “Discrete 
Optimization of Structures Using An 
Improved Penalty Function Method,” Eng. 
Optimiz., Vol. 17, pp. 293-306. 
8. Davis, L., 1989, “Adapting Operator 
Probabilities in Genetic Algorithms,” Proc. 
of the International Conference on Genetic 
Algorithms ICGA 89, San Mateo, pp. 
61-69. 
9. Fox, D. B., 1981, “A Composite 
Algorithm for Mixed Integer Constrained 
Nonlinear Optimization,” Eng. Optimiz., 
Vol. 5, pp. 129-149. 
 10
32. Rao, S. S. and Y. Xiong, 2005, “A Hybrid 
Genetic Algorithm for Mixed-Discrete 
Design Optimization,” ASME J. Mech. 
Des., Vol. 127, pp. 1100-1112. 
33. Ross, P. J., 1989, Taguchi Techniques for 
Quality Engineering, McGraw-Hill, 
Singapore. 
34. Salajegheh, E. and G. N. Vanderplaats, 
1993, “Optimum Design of Trusses with 
Sizing and Shape Variables,” Struct. 
Optim., Vol. 6, pp. 79-85. 
35. Sandgren, E., 1990, “Nonlinear Integer 
and Discrete Programming in Mechanical 
Design Optimization,” ASME J. Mech. 
Des., Vol. 112, pp. 223-229. 
36. Shin, D. K., Z. Gurdal, and O. H. Jr. 
Griffin, 1990, “A Penalty Approach for 
Nonlinear Optimization with Discrete 
Design Variables,” Eng. Optimiz., Vol. 16, 
pp. 29-42. 
37. Shor, P. W., 1994, “Algorithms for 
Quantum Computation: Discrete 
Logarithms and Factoring,” Proceedings 
of the 35th Annual Symposium on 
Foundations of Computer Science, IEEE 
Press, pp. 124-134. 
38. Srinivas, M. and L. M. Patnaik, 1994, 
“Adaptive Probability of Crossover and 
Mutation,” IEEE Trans. on System Man 
and Cybernetics, Vol. 24, No. 4. 
39. Taguchi, G., S. Chowdhury, and S. 
Taguchi, 2000, Robust Engineering, 
McGraw-Hill, New York. 
40. Tsai, J. T., T. K. Liu, and J. H. Chou, 2004, 
“Hybrid Taguchi-Genetic Algorithm for 
Global Numerical Optimization,” IEEE 
Trans. on Evolutionary Computation, Vol. 
8, No. 4, pp. 365-377. 
41. Tsai, J. T., J. H. Chou, and T. K. Liu, 
2006a “Tuning the Structure and 
Parameters of a Neural Network by Using 
Hybrid Taguchi-Genetic Algorithm,” 
IEEE Trans. on Neural Networks, Vol. 17, 
No. 1, pp. 69-80. 
42. Tsai, J. T., J. H. Chou, and T. K. Liu, 
2006b “Optimal Design of Digital IIR 
Filters Using a Novel Genetic Algorithm,” 
IEEE Trans. on Industrial Electronics, Vol. 
53, No. 3, pp. 867-879. 
43. Tsai, J. T. and J. H. Chou, 2006c “Design 
of Optimal Digital IIR Filters by Using an 
Improved Immune Algorithm,” IEEE 
Trans. on Signal Processing, Vol. 54, No. 
12, pp. 4582-4596. 
44. Van Laarhoven, P. J. M., E. H. L. Aarts, 
and J. K. Lenstra, 1992, “Job Shop 
Scheduling by Simulated Annealing, ” 
Operations Research, pp. 113-126. 
45. Wu, Y., 2000, Taguchi Methods for 
Robust Design, The American Society of 
Mechanical Engineers, New York. 
46. Yang, J. A., B. Li, Z. Zhuang, 2003a, 
“Multi-universe Parallel Quantum Genetic 
Algorithm Its Application to Blind-Source 
Separation,” Proceedings of the 2003 
International Conference on Neural 
Networks and Signal Processing, Vol. 1, 
pp. 393-398. 
47. Yang, J. A., H. Peng, Z. Zhuang, 2003b, 
“Research of Nonlinear Blind Source 
Separation Algorithm Based on Quantum 
Evolutionary Neural Network,” 2003 
International Conference on Machine 
Learning and Cybernetics, Vol. 2, pp. 
835-840. 
48. Zhang, G., W. Jin, and L. Hu, 2003a, “A 
Novel Parallel Quantum Genetic 
Algorithm,” Proc. of the Fourth 
International Conference on Parallel and 
Distributed Computing, Applications and 
Technologies, pp. 693- 697. 
49. Zhang, G., Y. Gu, L. Hu, and W. Jin, 
2003b, “A Novel Genetic Algorithm and 
its Application to Digital Filter Design,” 
Proc. of the 2003 IEEE Intelligent 
Transportation Systems, pp.1600-1605. 
50. Zhang, G., W. Jin, and F. Jin, 2003c, 
“Multi-criterion Satisfactory Optimization 
Method for Designing IIR Digital Filters,” 
Proceeding of ICCT 2003, Beijing, pp. 
1484-1490. 
 
  2
Abstract 
An improved quantum genetic algorithm is proposed to solve the problems of 
mixed-discrete-continuous nonlinear design optimization. The presented algorithm is called 
the Latin-square quantum real-coded genetic algorithm (LSQRGA), which combines the 
Latin squares (LS), quantum computing, and real-coded genetic algorithms (RGA). In this 
algorithm, the quantum real-coded genetic algorithm (QRGA) is mainly used to explore the 
optimal feasible region in macro-space, and the Latin square is applied to exploit the 
optimum solution in micro-space. The LSQRGA, combining advantages of exploration and 
exploitation, can improve the computational efficiency and robustness compared with the 
QRGA and the RGA for global numerical optimization problems with continuous variables. 
The contribution for the performance of the proposed LSQRGA is to use the quantum 
computing, especially in the mechanism of the quantum rotation gate, and the systematic 
reasoning mechanism of the Latin square with the signal-to-noise ratio. In addition, the 
proposed LSQRGA approach is also effectively applied to solve the 
mixed-discrete-continuous nonlinear design optimization problems, which require 
considering the design variables as integer, discrete, and continuous values. The 
computational experiments show that the proposed LSQRGA approach can obtain better 
results than the existing methods reported in the literatures. 
 
Keywords: Mixed-discrete-continuous design, Latin square, Quantum computing, Real-coded 
genetic algorithm. 
 
 
  4
aforementioned methods has its own advantages. No one method shows its efficiency and 
robustness better than others in solving global optimal problems of the engineering design. 
Therefore, it is very necessary to seek an efficient and robust algorithm to deal with the 
mixed-discrete-continuous nonlinear design optimization problems in engineering design 
field. 
Quantum computing is a new field in computer science which has induced intensive 
investigations and researches during the last decade on quantum computing algorithms, such 
as the Shor’s factorizing algorithm (Shor, 1994) and Grover’s quantum search algorithm 
(Grover, 1996, 1997). Quantum computing relies on the principles of quantum mechanics like 
quantum-bit (qubit) representation and superposition of states, and is capable of processing 
huge numbers of quantum states simultaneously in parallel. In order to introduce the strong 
parallelism to evolutionary algorithm, Narayanan and Moore (1996), Narayanan (1999), Han 
et al. (2001), and Han and Kim (2000, 2002, 2004) proposed the quantum-inspired genetic 
algorithms (QGA) to solve combinatorial optimization problems and the results demonstrate 
that the QGA is superior to the conventional genetic algorithms. Malossini et al. (2008) have 
shown that the QGA can take advantage of quantum phenomena to efficiently speed up 
genetic procedures. In addition, some quantum-based genetic algorithms have been applied to 
solve optimization problems, such as calculation of the partition function (Grigorenko and 
Garcia, 2001), nonlinear blind source separation (Yang et al., 2003a, 2003b), filter design 
(Zhang et al., 2003a, 2003b, 2003c), numerical optimization (Hui et al., 2004; Wang et al., 
2005; Yang and Ding, 2007), hyperspectral anomaly detection (Li et al., 2005), multiple 
sequence alignment (Abdesslem et al., 2006), financial data analysis (Fan et al., 2008), and 
thermal process identification (Dong et al., 2008). However, as the QGA is used to solve 
continuous-function optimization problems, there are several shortcomings, such as 
non-determinability of lookup table of updating quantum gates, requiring prior knowledge of 
the best solution, and premature phenomenon. Therefore, some new quantum genetic 
  6
Then, we use the LSQRGA approach to solve the mixed-discrete-continuous nonlinear design 
problems in engineering design field and compare the results with the existing methods 
reported in the literatures. Finally, Section V offers some conclusions. 
 
 
 
  8
and  cX = [xnd+1, x nd+2, …, xn]T, 
where x1, x2, …, xnq are non-negative discrete variables with permissible values equally 
spaced; xnq+1, …, xnd are non-negative discrete variables with permissible values unequally 
spaced; xnd+1, xnd+2, …, xn are non-negative continuous variables. Many practical optimization 
problems in engineering design field have many constraints and require considering the 
different type design variables as shown in (2.2). These problems also have the 
high-dimensional, non-differentiable, and multi-modal properties. It is hard to solve 
optimally and efficiently unless a good algorithm is used. From the above statements, it can 
be seen that the problem in (2.1) is a special case of the problem in (2.2). 
For the mixed-discrete-continuous design problem in (2.2), the discrete variables with 
equal spacing (i.e., genes with arithmetical progression) are xi = Lix + (Ni − 1) Δxi, where i = 1, 
2, …, nq; Lix is the lower bound of xi; Ni is the natural number corresponding to xi; Δxi is the 
discrete increment of the ith discrete variable; nq is the number of discrete variables with 
equal spacing. Let 1,iMi ex = for the discrete variables with unequal spacing, where 
ndinq ≤< , Mi denotes the natural number corresponding to xi, Mi is generated from [1, wi], 
1,iMe  denotes the Mi-th element of the 1×iw vector Ei, Ei represents the 1×iw vector of 
values of discrete variables with unequal spacing, and wi is the maximum permissible amount 
of discrete values for the i-th discrete variable with unequal spacing.  
 
 
  10
floating-point numbers with the same length as the vector of decision variables. In the 
initialization procedure, ps chromosomes are produced, where ps denotes the population size, 
by the following algorithm. 
Algorithm 1: 
Step 1: Generate a uniformly distributed random value βi, where |βi|2 ∈[0, 1] and i = 1, 
2, …, n. 
Step 2: Let xi = |αi|2 Lix + |βi|2 Uix , where |αi|2 = 1 − |βi|2. Repeat n times and produce a 
vector [x1, x2, …, xi, …, xn], where xi denotes the ith element of the n×1 vector X 
in (2.2); Lix and 
U
ix are the lower and upper bounds of xi, respectively. If xi is a 
discrete variable with equal spacing, the value of xi is amended to the 
corresponding value of arithmetical progression of xi. If xi is a discrete variable 
with unequal spacing, the value of xi is amended to the corresponding assigned 
value of xi. 
Step 3: Repeat the above two steps ps times and produce ps initial feasible solutions. 
3) Crossover operation 
The crossover operators used here are the one-cut-point operator integrated with an 
arithmetical operator derived from convex set theory (Bazaraa et al., 1990; Gen and Cheng, 
1997), which randomly determines one cut-point, exchanges the cut-point right parts of the 
quantum bits of two parents, and calculates the linear combinations at the cut-point genes to 
generate new offspring. The one-cut-point crossover operator is used for quantum bits as 
shown in the following (3.3), if the ith position is selected as one cut-point. 
 
 
  12
1 − |βi|2. The gene is mutated in a specific range. This operator is regarded as uniform 
mutation. 
A non-uniform mutation (Gen and Cheng, 1997) is usually used for the mutation 
operation. It is designed for fine-tuning capabilities aimed at achieving high precision. For a 
given Θ = [x1, …, xi, …, xn] converted from quantum bits, if the elements xi is randomly 
selected for mutation, the resulting offspring is Θ' = [x1, …, x'i, …, xn], where x'i is randomly 
selected from following two possible choices: 
),(' i
U
iii xxtxx −Δ+=  or ),(' Liiii xxtxx −Δ−= .             (3.6) 
The function Δ(t, y) return a value in the range [0, y] such that the value of Δ(t, y) approaches 
0 as t increases (t is the generation number), and Lix and
U
ix are the lower and upper bounds 
of xi. The property causes the operator to search the space uniformly initially (when t is small) 
and very locally at later stages. The function Δ(t, y) is given as: 
Δ(t, y) = y × γ × (1 − 
T
t )b,                     (3.7) 
where γ is a uniformly distributed random number from [0, 1], T is the maximal generation 
number, and b is a parameter determining the degree of non-uniformity. If xi is a discrete 
variable with equal spacing, the value of x'i is amended to the corresponding value of 
arithmetical progression of xi. If xi is a discrete variable with unequal spacing, the value of x'i 
is amended to the corresponding assigned value of xi. 
5) Quantum rotation gate 
A rotation gate U(θ) is used to update a quantum-bit gene. The purpose of a rotation gate 
is to rotate the quantum bit toward the direction of corresponding quantum bit of the best 
solution to reach the optimal value. (αi, β i) of the ith quantum bit is update as following: 
⎥⎦
⎤⎢⎣
⎡⎥⎦
⎤⎢⎣
⎡ −=⎥⎦
⎤⎢⎣
⎡=⎥⎦
⎤⎢⎣
⎡
i
i
ii
ii
i
i
i
i
i U β
α
θθ
θθ
β
αθβ
α
cossin
sincos
)(
'
'
,                 (3.8) 
  14
7) Latin square 
The Latin square of the experimental design method is used to study a large number of 
decision variables with a small number of experiments and screens important factors that 
impact product performance. The design variables (parameters) are called factors, and 
parameter settings are called levels. The name Latin square originates from Leonhard Euler, 
who used Latin characters as symbols. The details regarding the experimental design method 
can be found in the books presented by Phadke (1989), Montgomery (1991), Park (1996). In 
conducting matrix experiments of an orthogonal array, two chromosomes are randomly 
chosen from the qubit population pool. Each factor of one qubit chromosome is regarded as 
level 1, and that of the other qubit one is regarded as level 2. Therefore, a two-level 
orthogonal array, Lm(2m−1), of Latin squares is used. There are Q factors, where Q is the 
number of design factors and each factor has two levels. To establish an orthogonal array of 
Q factors with two levels, let Lm(2m−1) represent m−1 columns and m individual experiments 
corresponding to the m rows, where m = 2k, k is a positive integer (k > 1), and Q ≤ m−1. If Q 
< m−1, only the first Q columns are used while the other m−1−Q columns are ignored. For 
example, there are six factors with two levels for each factor. We only need six columns to 
allocate these factors, and L8(27) is enough for this purpose because it has seven columns. 
In addition, the better combinations of decision variables are determined by integrating 
the orthogonal array of the Latin square and the signal-to-noise ratio of the Taguchi method. 
The Taguchi concept is based on maximizing performance measures called signal-to-noise 
ratio by running a partial set of experiments by using the orthogonal array. The 
signal-to-noise ratio (η) refers to the mean-square-deviation of the objective function. 
Taguchi defined η to be, for the cases of the larger-the-better characteristic and the 
smaller-the-better characteristic, respectively, )11(log10
1
2∑−= =
n
t tyn
η and 
),1(log10
1
2∑−=
=
n
t
tyn
η which is measured in decibels, where {y1, y2, …, yn} denotes a set of 
  16
The detailed steps for each matrix experiment are described as follows. 
Algorithm 2: 
Step 1: Set j = 1. Generate two sets U1 and U2, each of which has Q design factors 
(variables), and then take the first Q columns of the orthogonal array Lm(2m−1) to 
allocate the Q design factors, where m ≥ Q + 1. 
Step 2: Two sets U1 and U2 are regarded as level 1 and level 2, respectively, by assigning 
two qubit chromosomes which are chosen by using a uniformly distributed 
random method from the qubit population pool generated by the crossover 
operation. 
Step 3: Assign the values of level 1 coming from U1 and level 2 coming from U2 to level 
cells of the j experiment in the orthogonal array. 
Step 4: Calculate the fitness value and the signal-to-noise ratio for the new chromosome. 
Step 5: If j > m, then go to Step 6. Otherwise, j = j + 1, return to Step 3, and continue 
through Step 5. 
Step 6: Calculate the effects of the various factors (Ef1 and Ef2), where f =1, 2, …, Q. 
Step 7: The gene of locus f of the new qubit chromosome comes from U1, if Ef1 > Ef2. 
Otherwise, it comes from U2, where f =1, 2, …, Q. After the process for each 
gene at each locus is implemented, the new qubit chromosome is obtained. 
8) Steps of LSQRGA 
The LSQRGA approach is a method of integrating the Latin squares, quantum 
computing, and real-coded genetic algorithms. The penalty function is considered for a 
constrained problem, as the fitness value is calculated. The steps of the LSQRGA approach 
are described as follows.  
Step 1: Parameter setting. 
  18
depending on the rotation rate pr. After the quantum rotation gate operation, the 
program would automatically check each fitness value of new qubit 
chromosomes that have conducted the quantum rotation gate. If the new qubit 
chromosome has better fitness value than the original qubit chromosome that 
does not conduct the quantum rotation gate, the new offspring would be 
adopted. Otherwise, the original qubit chromosome would be left. The ps qubit 
chromosomes after the quantum rotation gate operation are employed as parents 
of the next generation. 
Step 12: Has the stopping criterion been met? If yes, then go to Step 13. Otherwise, 
return to Step 2 and continue through Step 12. 
Step 13: Display the best chromosome and fitness value. 
 
 
  20
experimental design method as the work of Chou et al. (1998) is used to adjust the 
evolutionary parameters. In the computational experiments for the LSQRGA, QRGA, and 
RGA approaches, the evolutionary environments are described as follows. For f1, f2, f3, and f4, 
the population size ps is 300, the crossover rate pc is 1, mutation rate pm is 0.1, rotation rate pr 
is 0.1. The stopping criterion for all methods and test functions is that the number of function 
evaluations equals 540000, except for f3 (easier to approach the optimal value), whose 
stopping criterion is set to be 300000. In addition, each test function is performed in 30 
independent runs and the following results are all recorded: 1) the best value, 2) the mean 
function value, and 3) the standard deviation of the function values. 
In these test functions as shown in Table 1, there are 13, 8, 7, or 10 variables (factors), so 
we need 13, 8, 7, or 10 columns, respectively, to allocate these factors as a Latin square used 
in the LSQRGA approach is selected to solve these problems. The Latin square L8(27) is used 
for 7 variables because it has 7 columns. The Latin square L16(215) is used for 13, 8, or 10 
variables because it has 15 columns. The first 13, 8, or 10 columns are used, while the other 2, 
7, or 5 columns, respectively, are ignored. The QRGA and RGA approaches are employed to 
solve the test functions, where the computational procedures of the QRGA and RGA 
approaches are the same as those of the LSQRGA approach under the same evolutionary 
environments, except that the Latin square is not used in the QRGA and RGA and that the 
quantum computing is not used in the RGA.  
Table 2 shows the comparison results between the LSQRGA, QRGA, and RGA 
approaches. From Table 2, the following can be observed. 
1) The proposed LSQRGA can find the optimal or close-to-optimal solutions.  
2) For all test functions, the proposed LSQRGA can give better and closer-to-optimal 
solutions than the QRGA and RGA. 
3) For all test functions, the proposed LSQRGA gives smaller standard deviations of 
function values than the QRGA and RGA, and hence, the proposed LSQRGA has a 
  22
environments.  
Example 1: Compression coil spring 
This example, as shown in Figure 1, deals with the design of a compression coil spring 
under the constant load for minimum volume of material. Three design variables are 
considered as X = [N, d, D]T = [x1, x2, x3]T, in which the number of coils of the spring, N, is 
treated as an integer; the wire diameter, d, according to the ASTM code, is considered as a 
discrete value; the winding diameter, D, is considered as a continuous variable.  
The objective and constraint equations as derived from Sandgren (1990) can be 
mathematically expressed in the following:  
Minimize 4/)2()( 1
2
23
2 += xxxXf π ,                   (4.1) 
subject to 
0)/(8)( 323max1 ≥−= xxPKSXg s π , 
0))2(05.1()( 21max2 ≥++−= xxlXg δ , 
0)( min23 ≥−= dxXg , 
0)( 3max4 ≥−= xDXg ,                       (4.2) 
03)(5 ≥−= CXg , 
0)(6 ≥−= δδ pmXg , 
0)2(05.1/)()( 21max7 ≥+−−−−= xxKPPlXg loadf δ , 
  and  0/)()( max8 ≥−−= wload KPPXg δ , 
where 
23 / xxC = ; 
CCCK s /615.0)44)(14( +−−= ; 
)/()8( 421
3
3max xGxxP=δ ; 
  24
material, forming and welding of the pressure vessel. The model of the problem is described 
as  
Minimize 3
2
14
2
1
2
32431 8621.191661.37781.16224.0)( xxxxxxxxxXf +++= ,  (4.3) 
subject to 
00193.0)( 311 ≥−= xxXg , 
000954.0)( 322 ≥−= xxXg , 
01728750
3
4)( 334
2
33 ≥×−+= ππ xxXg ,                 (4.4) 
0240)( 44 ≥−= xXg , 
01.1)( 15 ≥−= xXg , 
and  06.0)( 26 ≥−= xXg , 
where Ts and Th represent discrete values, integer multiples of 0.0625 inches, while R and L 
are continuous variables. 
In the computational experiments of the proposed LSQRGA approach, the following 
parameters are used: the population size ps is 300, the crossover rate pc is 0.9, the mutation 
rate pm is 0.3, the rotation rate pr is 0.3, and the generation number is 200. The design 
function was performed in 30 independent runs. The computational results obtained by using 
the proposed LSQRGA approach and the methods given by Sandgren (1990), Fu et al. (1991), 
Shih and Lai (1995), and Rao and Xiong (2005) are given in Table 5. It can be seen, from 
Table 5, that the proposed LSQRGA approach can give the better result than the methods 
given by Sandgren (1990), Fu et al. (1991), Shih and Lai (1995), and Rao and Xiong (2005). 
In addition, it is not necessary to use the starting points for the proposed LSQRGA approach, 
whereas the starting points were used in those methods given by Sandgren (1990), Fu et al. 
(1991), Shih and Lai (1995), and Rao and Xiong (2005). The LSQRGA approach by using 
arbitrary starting points shows its versatility and effectiveness. Furthermore, the robustness 
analysis for the LSQRGA is also shown in Table 6. The standard deviation in 30 independent 
  26
dX σσ ≤)(                              (4.7) 
with 
)/(6)( 212xxFLX =σ . 
(c) lower bound on the bulking load Pc(x) of the beam: 
FXPc ≥)(                              (4.8) 
with  
⎥⎦
⎤⎢⎣
⎡ −= α
α EI
L
x
L
EIXPc 2
1013.4)( 12 , 
12/321xxI = , 
and  3/321xGx=α . 
(d) upper bound on the end deflection DEL(x) of the beam: 
dXDEL δ≤)(                            (4.9) 
with 
)/(4)( 2
3
1
3 xExFLXDEL ≤ . 
Besides, the side constraints, in forms of x3 ≤ x2 and x3 ≥ 0.125, are considered along 
with the following numerical data(Rao and Xiong, 2005):  
,6000,14,283.017.0,283.037.0 21 ==×=×= FLcc   
.1012and,103,25.0,30000,13600 67 ×=×==== GEddd δστ  
The variables t and b are treated to be discrete variables (integer multiples of 0.5); h and l are 
considered as integers. 
In the computational experiments of the proposed LSQRGA approach, the following 
parameters are used: the population size ps is 10, the crossover rate pc is 0.9, the mutation rate 
pm is 0.3, the rotation rate pr is 0.3, and the generation number is 20. The design function was 
performed in 30 independent runs. The computational results obtained by using the proposed 
  28
where li denotes the length of the member i; ρ = 0.1lb/in3 is the weight density; δix, δiy, and δiz 
are the x, y, and z components of the deflections of node i (i = 1, 2); ω1 is the fundamental 
natural frequency of vibration. The constraints can be stated as 
( )
,)2,1and,25,,2,1()()(
,2,1and,25,,2,1)(
==≥
==≤
jiXBX
jiSX
iij
ij
L
L
σ
σ
          (4.11) 
and ,)8,,2,1( L=≤≤ ixxx uiili                           
where σij denotes the tension or compression stress in member i under the load condition j; 
the allowable stress S is taken as 40000 psi; lix and
u
ix are the lower and upper bounds of xi, 
which are set to be 0.1in2 and 5.0 in2, respectively; the Euler bulking stress Bi(X) in member i 
is given as 
,)25,,2,1(
8
01.100)( 2 L=
−= i
l
EAXB
i
i
i
π               (4.12) 
in which E is the Young’s modulus given as 7100.1 × psi.  
If each xi is considered as a discrete variable, the following expression is used: xi = 0.1 + 
0.1 k, where k = 0, 1, 2, ···, 49. The length of each bar is calculated from the coordinates of 
the nodes of the truss. The deflections (δix, δiy, and δiz) of node i, the fundamental natural 
frequency, ω1, of vibration, and the stress, σij, in member i under the load condition j can be 
obtained through the finite element analysis of the truss by using the ANSYS CAE Toolbox 
(ANSYS, 2005). 
The best continuous and discrete results are obtained and shown in Table 9 by using the 
proposed LSQRGA approach with the ANSYS CAE Toolbox. The best results given by Rao 
and Xiong (2005) with the ANSYS CAE Toolbox are also shown in Table 10. Compared to 
the results from Tables 9 and 10, it can be seen that the proposed LSQRGA approach can 
provide better results in each main objective function than the method given by Rao and 
Xiong (2005). Meanwhile, for each specified design objective function, the other two 
  30
capability to explore the optimal feasible region, with the Latin square, which can exploit the 
optimum offspring. We use the LSQRGA approach to solve the global numerical 
optimization problems with continuous variables. The computational experiments show that 
the presented LSQRGA approach can find optimal or close-to-optimal solutions, and it is 
more efficient than the QRGA and RGA approaches on the nonlinear programming 
optimization problems with continuous variables. In addition, the LSQRGA approach can 
improve the robustness compared with the QRGA and RGA approaches and possesses the 
merits of global exploration. Furthermore, we apply the introduced LSQRGA approach to 
solve the various kinds of mixed-discrete-continuous nonlinear design optimization problems. 
The computational experiments show that the proposed LSQRGA approach can obtain better 
results than the existing methods and demonstrates the robustness. Therefore, the proposed 
LSQRGA approach can be used as a global optimization method to solve the 
mixed-discrete-continuous nonlinear design problems with many complicated constraints. 
 
 
Acknowledgement 
This work was partially supported by the National Science Council, Taiwan, Republic of 
China, under grant numbers NSC96-2221-E153-002-MY2 and NSC96-2628-E327-004-MY3. 
  32
12. Cao, Y. J. and Q. H. Wu, 1997, “Mechanical Design Optimization by Mixed-Variable 
Evolutionary Programming,” Proc. of the 1997 IEEE Int’l Conf. on Evolutionary 
Computation, Indianapolis, USA, pp. 443-446. 
13. Cao, Y. J., L. Jiang, Q. H. Wu, 2000, “An Evolutionary Programming Approach to 
Mixed-Variable Optimization Problems,” Applied Mathematical Modeling, Vol. 24, pp. 
931-942. 
14. Chen, J. L. and Y. C. Tsao, 1993, “Optimal Design of Machine Element Using Genetic 
Algorithm,” J. of Chinese Society Mechanical Engineers, Vol. 14, pp. 193-199. 
15. Chou, J. H., W. H. Liao, and J. J. Li, 1998, “Application of Taguchi-Genetic Method to 
Design Optimal Grey-Fuzzy Controller of a Constant Turning Force System,” Proc. of 
the 15th CSME Annual Conference, Taiwan, pp. 31-38. 
16. Davis, L., 1989, “Adapting Operator Probabilities in Genetic Algorithms”, Proc. of the 
International Conference on Genetic Algorithms (ICGA 89), San Mateo, USA, pp. 
61-69. 
17. Dong, Z., Y. Huang, and P. Han, 2008, “Thermal Process Identification with Radial 
Basis Function Network Based on Quantum Genetic Algorithm,” Proc. of the Chinese 
Society of Electrical Engineering, Vol. 28, pp. 99-104. 
18. Fan, K., A. Brabazon, C. O’Sullivan, and M. O’Neil, 2008, “Quantum-Inspired 
Evolutionary Algorithms for Financial Data Analysis,” Lecture Notes in Computer 
Science, Vol. 4974, pp. 133-143. 
19. Floudas, C. A. and P. M. Pardalos, 1992, Recent Advances in Global Optimization, 
Princeton University Press, New Jersey. 
20. Fu, J. F., R. G. Fenton, and W. L. Cleghorn, 1991, “A Mixed Integer-Discrete 
Continuous Programming Method and Its application to Engineering Design 
Optimization,” Engineering Optimization, Vol. 17, pp. 263–280. 
21. Gen M. and R. Cheng, 1997, Genetic Algorithms and Engineering Design, John Wiley 
and Sons, New York. 
  34
Berlin.  
33. Hsieh, S. T., T. Y. Sun, C. L. Lin and C. C. Liu, 2008, “Effective Learning Rate 
Adjustment of Blind Source Separation Based on an Improved Particle Swarm 
Optimizer”, IEEE Trans. on Evolutionary Computation, Vol. 12, pp. 242-251. 
34. Hui, C., Z. Jiashu, Z. Chao, 2004, “Chaos Updating Rotated Gates Quantum-Inspired 
Genetic Algorithm,” Proc. of the 2004 International Conference on Communications, 
Circuits and Systems, Chengdu, China, pp. 1108-1112. 
35. Jonsson, O. and T. Larsson, 1990 “Lagrangean Relaxation and Sub-Gradient 
Optimization Applied to Optimal Design with Discrete Sizing,” Engineering 
Optimization, Vol. 16, pp. 221-233. 
36. Li, N., P. Du, and H. Zhao, 2005, “Independent Component Analysis Based on 
Improved Quantum Genetic Algorithm: Application in Hyperspectral Images,” Proc. of 
2005 IEEE International Geoscience and Remote Sensing Symposium, Seoul, Korea, pp. 
4323-4326. 
37. Lin, S. S., C. Zhang, and H. P. Wang, 1995, “On Mixed-Discrete Nonlinear 
Optimization Problems: A Comparative Study,” Engineering Optimization, Vol. 23, pp. 
287-300. 
38. Loh, H. T. and P. Y. Papalambros, 1991, “A Sequential Linearization Approach for 
Solving Mixed-Discrete Nonlinear Design Optimization Problems,” ASME J. of Mech. 
Design, Vol. 113, pp. 325-334. 
39. Malossini, A., E. Blanzieri, and T. Calarco, 2008, “Quantum Genetic Optimization,” 
IEEE Trans. on Evolutionary Computation, Vol. 12, pp. 231-241. 
40. Michalewicz, Z., 1996, Genetic Algorithms + Data Structures = Evolution Programs, 
Springer-Verlag, Berlin. 
41. Montgomery, D. C., 1991, Design and Analysis of Experiments, Wiley, New York. 
42. Narayanan, A., 1999, “Quantum Computing for Beginners,” Proc. of the 1999 Congress 
on Evolutional Evolution, Washington D.C., USA, pp. 2231-2238. 
  36
54. Tsai, J. T., T. K. Liu, and J. H. Chou, 2004, “Hybrid Taguchi-Genetic Algorithm for 
Global Numerical Optimization”, IEEE Trans. on Evolutionary Computation, Vol. 8, pp. 
365-377. 
55. Wang, L., F. Tang, and H. Wu, 2005, “Hybrid Genetic Algorithm Based on Quantum 
Computing for Numerical Optimization and Parameter Estimation,” Applied 
Mathematics and Computation, Vol. 171, pp. 1141-1156. 
56. Wu, S. J. and P.T. Chow, 1995a, “Steady-state Genetic Algorithms for Discrete 
Optimization of trusses,” Computers & Structures, Vol. 56, pp. 979-991. 
57. Wu, S. J. and P.T. Chow, 1995b, “The Applications of Genetic Algorithms to Discrete 
Optimization Problems,” J. of the Chinese Society of Mechanical Engineers, Vol. 16, pp. 
587-598. 
58. Yang, J. A., B. Li, Z. Zhuang, 2003a, “Multi-universe Parallel Quantum Genetic 
Algorithm Its Application to Blind-Source Separation,” Proc. of the 2003 International 
Conference on Neural Networks and Signal Processing, Nanjing, China, pp. 393-398. 
59. Yang, J. A., H. Peng, Z. Zhuang, 2003b, “Research of Nonlinear Blind Source 
Separation Algorithm Based on Quantum Evolutionary Neural Network,” Proc. of the 
2003 International Conference on Machine Learning and Cybernetics, Xian, China, pp. 
835-840. 
60. Yang, Q. and S. Ding, 2007, “Methodology and Case Study of Hybrid Quantum-Inspired 
Evolutionary Algorithm for Numerical Optimization,” Proc. of the 3rd International 
Conference on Natural Computation, Haikou, China, pp. 608-612. 
61. Zhang, C. and H. P. Wang, 1993, “Mixed-Discrete Nonlinear Optimization with 
Simulated Annealing,” Engineering Optimization, Vol. 21, pp. 277-291. 
62. Zhang, G., W. Jin, and F. Jin, 2003a, “Multi-criterion Satisfactory Optimization Method 
for Designing IIR Digital Filters,” Proc. of the International Conference on 
Communications Technology (ICCT 2003), Beijing, China, pp. 1484-1490. 
63. Zhang, G., W. Jin, and L. Hu, 2003b, “A Novel Parallel Quantum Genetic Algorithm,” 
  1
(Paper Code: GENO-2009-0095 Revised) 
Robust and Optimal Parameters Design Approach for Tolerance 
Design Problems 
 
 
 
 
 
 
Jinn-Tsong Tsai 
 
 
 
 
 
 
 Department of Computer Science, National Pingtung University of Education, 4-18 Ming 
Shen Road, Pingtung 900, Taiwan, R. O. C., E-Mail: jttsai@mail.npue.edu.tw, TEL: 
+886-8-7226141, FAX: +886-8-7215034. 
 
  3
 
Keywords: Robust and Optimal Parameter Design, Tolerance Design, Variability of Design 
Variable Specifications, Taguchi Method, Orthogonal Array. 
 
 
  5
method for several major industries to implement significant quality improvement in product 
and manufacturing process design. Taguchi recommended a two-step design process, robust 
design and tolerance design. The tolerance design is concerned with how much variation of 
the design and noise factors is permissible. The basic idea is to set tolerances around nominal 
settings identified by parameter design, not by convention. First one creates a design with 
design parameters, called by Taguchi the inner array. Then one creates the array of noise 
factors, called by Taguchi the outer array. Thus for each setting in the design matrix, one runs 
one run for each setting in the noise matrix. The measurements of the performance 
characteristic are then grouped to give the performance statistic for that run of the design 
matrix. The inner array is generally a nearly-saturated array, usually a fractional factorial or 
Plackett-Burman design. The same kinds of designs are used for the outer array. In practical 
applications, Taguchi's parameter design can get robust parameter values which are the best 
settings, but these setting values of parameters are not optimal in many cases, since the 
settings are sometimes rough in experimental design. The optimization design method uses 
the optimization technique (Goldberg, 1989; Michalewicz, 1996; Gen and Cheng, 1997; 
Leung and Wang, 2001; Wang, 2001; De Castro and Von Zuben, 2001; 2002; Tsai et al., 2004, 
2006; and references therein) to find the optimal design parameter values that are usually 
design nominal values for the best measures of the product/system performance, but does not 
consider the robustness of design parameters that maybe have fluctuations or tolerances. In 
this situation, the parameter values of components given only from the optimization design 
method are very sensitive to the system performance and design constraints, if the values of 
components are varied due to design and manufacturing variations, degradation over 
time/cycle, customer usage and duty cycle, and/or external operating environment. This 
implies that the designers must not only consider the effects of the component tolerances in 
design process, but they must also use quality control methods to make the product/system 
performance least sensitive to manufacturing defects, degradation over time/cycle, and/or 
  7
to evaluate the performance of the TGAOA approach. Finally, we offer in Section 5 a brief 
summary. 
 
 
2. Problem Definition 
We consider a following optimization and tolerance design problem: 
Minimize { g(x) | x ∈ [l, u] },                   
subject to the design constraints and the tolerance Δx of x,    (2.1) 
where g(x) is an objective function; x = (x1, x2 ..., xi, …, xn) ∈ ℜn is a vector of the design 
nominal values of n design variables; Δx is a tolerance of x; l = (l1, l2, ..., li, ..., ln) and u = (u1, 
u2, ..., ui, ..., un) define the feasible solution space. We denote the domain of xi as [li, ui] and 
the feasible solution space as [l, u] in a design process. 
In a practical design consideration, the design nominal value and the tolerance 
assignment of each component should be merged to the optimization aim. The equation (2.1), 
hence, can be reformulated as following: 
Minimize { μ(g(x±Δx)) and σ(g(x±Δx)) }, 
subject to the design constraints,                       (2.2) 
where μ(g(x±Δx)) is the average value of g(x±Δx) of an OA, and σ(g(x±Δx)) is the standard 
deviation of g(x±Δx) of an OA. 
In the optimization design problem under the variability of component specifications, 
the evolutionary algorithm uses the fitness value, not the objective function value, to evaluate 
solutions because the tolerance assignment of each component is participated. The objective 
function returns the objective value of g(x) and represents the system performance of g(x) 
under the situation of the design nominal value of components without including the effect of 
the tolerance Δx of x. However, the fitness function returns the fitness value and represents 
  9
the range [1, R], where R is the number of design constraints. The higher this index is, the 
larger the penalty should be. Thus, the penalty function P is defined as follows. 
∑ −+−=
=
R
j
jjUjjLp UywyLwwP
1
)()( ,                  (2.5) 
where yj is a calculated value depending on the constraint function; Uj and Lj are the upper 
and lower bounds, respectively, of the constraint function; wp is a value which is to 
distinguish between feasible and unfeasible individuals; wL and wU denote the weights; If yj < 
Lj, then wL = 1 and wU = 0; If yj > Uj, then wL = 0 and wU = 1; If Lj ≤ yj ≤ Uj, then wL = 0 and 
wU = 0. Generally speaking, Equation (2.5) states that each calculated value, yj, of the 
constraint function should be restricted between its upper bound (Uj) and lower bound (Lj). It 
would not be punished if it was located among the feasible region; otherwise it would be 
punished by multiplying a large number wp. 
The value of the penalty function needs to be equal to 0, as the optimization process is 
finished. This is to imply that the values of the design variables do not violate the design 
constraints. 
  11
Step 9: Select the better ps chromosomes as parents of the next generation. 
Step 10: Let the iteration index I = I + 1. If I > Ng, then go to Step 11. Otherwise, return 
to Step 3 and continue through Step 10. 
Step 11: Stop, and display the best chromosome and fitness value. 
 
3.2 Detailed procedures of the TGAOA 
 In what follows, we describe the detailed procedure of TGAOA in solving tolerance 
design problems. They are not shown in the HTGA (Tsai et al., 2004, 2006) and have been 
modified for TGAOA.  
(i) Generation of initial population and fitness value 
The real coding technique is applied in this study. In the real coding representation, each 
chromosome is encoded as a vector of floating-point numbers, with the same length as the 
vector of design variables. The real coding representation is accurate and efficient because it 
is closest to the real design space, and, moreover, the string length is the number of design 
variables. For convenience and simplicity, let us denote 
x = (x1, x2, …, xρ),                      (3.1) 
where ρ is the number of design parameters. 
Initialization procedure produces ps chromosomes, where ps denotes the population size, 
and the fitness values by the following explanations and algorithm. In the tolerance design 
problems under the variability of component specifications, we use the fitness function, as 
shown in (2.4), instead of the objective function, to evaluate solutions in the process of the 
evolutionary algorithm.  
In order to conduct experiments more efficiently, fractional factorial experiments may be 
employed which retain the desirable properties (for example, balance and orthogonality) of 
the full factorial, but reduce the size of the experiment. Furthermore, each design variable 
  13
tolerance assignment of each component and check the design constraints, and 
calculate the fitness value. 
Step 4: Repeat the above three steps ps times and produce ps initial feasible solutions. 
(ii) Mutation Operation 
The basic concept of the non-mutation operation is also derived from the convex set 
theory (Bazaraa et al., 1990; Gen and Cheng, 1997). Each gene, in a single chromosome, 
depending on the mutation rate pm, implements the mutation of the convex combination. For 
a given chromosome x = (x1, …, xi, …, xn), if the elements xi is selected for mutation, the 
resulting offspring is x' = (x1, …, x'i, …, xn) and x'i is randomly selected from following two 
possible choices. 
)(' i
U
iii xxxx −+= β , if a random digit is 0, 
or                                (3.2) 
)(' Liiii xxxx −−= β , if a random digit is 1, 
where Lix and 
U
ix are the lower and upper bounds of xi and β is a random value, in which β 
∈[0, 1]. This means the xi is randomly generated from the interval of [xi Uix ] or [ Lix  xi]. 
 
 
  15
sk
s
kksC dip ++=)( ,                        (4.1) 
where kp, ki, and kd are real positive parameters of the PID controller.  
Without the loss of generality, the plant uncertainty ΔP(s) is assumed to be bounded by a 
known stable transfer function matrix W1(s), that is, 
),0[)),(())(( 1 ∞∈∀≤Δ ωωσωσ jWjP ,               (4.2) 
where )(Aσ  denotes the maximum singular value of a matrix A. 
By applying the H∞ norm, the problem of both robust stability and disturbance 
attenuation for the control system in Figure 1 is to find a controller C(s) so that the 
closed-loop feedback system for the nominal plant P(s) is internally stable and the following 
balanced performance criterion (Kwakernaak, 1985; Francis, 1987; Stoorvogel, 1992): 
1))))()((()))()((((sup)( 22
2
1
),0[
<+=
∞∈∀
ωωσωωσωκ
ω
jSjWjTjW       (4.3) 
is satisfied, where W1(s) and W2(s) are the stable weighting function matrices which are very 
important in H∞ control and are specified by designer (Stoorvogel, 1992; Chen et al., 1995; 
Chen and Cheng, 1998), and S(s) and T(s) are the sensitivity function and the complementary 
sensitivity function, respectively, of the system with the following representations: 
1))()(()( −+= sCsPIsS ,                    (4.4) 
and                         1))()()(()()( −+= sCsPIsCsPsT .                (4.5) 
However, both robust stability and disturbance attenuation are often not enough in 
control design. The optimal tracking performance is also considered in many practical 
applications of the control engineering. Therefore, the mixed H2/H∞ PID controller design 
problem for the control system in Figure 1 is, under both the constraint (4.3) and the 
variability of PID components, how to find the controller parameters of the PID controller in 
(4.1) to make the nominal closed-loop system stable and to achieve the optimal tracking 
performance by minimizing the errors that persist for a long time. The integral of the 
  17
nominal values regarded as level 2; Δx1, Δx2, and Δx3 are the design tolerances of x1, x2, and 
x3, respectively. In the works of Grefenstette (1986) and Davis (1989), they proposed that the 
adaptation of the main parameters could improve the performance of the GA. In the work of 
Chou et al. (2000), Chou and his associates have shown that the Taguchi method was applied 
to find the optimal evolutionary parameters in the GA such that the performance of the GA 
can be improved. Therefore, in this study, we use the Taguchi method as the work of Chou et 
al. (2000) to adjust the parameters of evolutionary environments. In the computational 
experiments, the following evolutionary environments are used in this example: the 
population size is 150, the crossover rate is 0.9, the mutation rate is 0.33, the number of 
maximum generation is 100, and the weighting value w between μ(J(x±Δx)) and σ(J(x±Δx)) 
is 1. We hope each chromosome has a chance for mutation to enhance the diversity in the 
evolutionary algorithm. So the mutation rate is set to be 0.33 (i.e., about 1/3). The design 
function is performed in 30 independent runs by using these settings. The fitness function 
FTGAOA derived from (2.4) for the TGAOA approach, in this example, is defined as following: 
FTGAOA = μ(J(x±Δx)) + σ(J(x±Δx)),                   (4.12) 
where μ(J(x±Δx)) and σ(J(x±Δx)) are the mean and the standard deviation of the H2 
performance index J(x±Δx), respectively, whose values come from conducting the matrix 
experiment of the three-level OA L9(34), as shown in Table 4. However, the fitness function 
FTGA for the HTGA approach is defined in the following: 
FHTGA = J(x),                          (4.13) 
where J(x) is the H2 performance index. The objective is to minimize the fitness functions in 
(4.12) and (4.13), respectively. In this study, the chromosome would be discarded, if the κ(ω) 
value calculated by the chromosome violates the design constraint, as shown in (4.3). 
Therefore, the penalty function is not used in this example. 
The best fitness value, the average fitness value, and the standard deviation for 30 
independent runs by using the proposed TGAOA approach at the different tolerances and the 
  19
Example 2: Compression coil spring design problem 
This example, as shown in Figure 3, deals with the design of a compression coil spring 
under constant load for minimum volume of material. Three design variables are considered 
as x = [x1, x2, x3]T = [N, d, D]T with tolerances of ±0.1%, ±0.5%, ±1%, ±2%, ±2.1%, ±2.2%, 
and ±2.5% at each design variable, where N is the number of coils of the spring, d is the wire 
diameter, and D is the winding diameter. The solution accuracy of each design variable is set 
to be 0.0001. 
The objective and constraint equations derived from Sandgren (1990) can be 
mathematically expressed in the following:  
Minimize 4/)2()( 1
2
23
2 += xxxxJ π ,                      (4.14) 
subject to 
0)/(8)( 323max1 ≥−= xxPKSxf s π , 
0))2(05.1()( 21max2 ≥++−= xxlxf δ , 
0)( min23 ≥−= dxxf , 
0)( 3max4 ≥−= xDxf , 
03)(5 ≥−= Cxf , 
0)(6 ≥−= δδ pmxf , 
0)2(05.1/)()( 21max7 ≥+−−−−= xxKPPlxf loadf δ , 
and       0/)()( max8 ≥−−= wload KPPxf δ , 
where 
23 / xxC = , 
CCCK s /615.0)44)(14( +−−= , 
)/()8( 421
3
3max xGxxP=δ , 
  21
unfeasible individuals. The value of the penalty function is equal to 0, as the optimization 
process is finished. This is to imply that the values of the design variables satisfy the design 
constraints. 
The computational results obtained by using the TGAOA and HTGA approaches are 
given in Tables 7, 8, and 9. In Table 7, the robustness analysis in the TGAOA and HTGA 
approaches is shown; the standard deviation obtained by the TGAOA and HTGA approaches 
in 30 independent runs is very small. That is, both TGAOA and HTGA approaches are robust 
methods in designing the compression coil spring. The nominal values of design variables 
under the best fitness value at different tolerances between TGAOA and HTGA approaches 
are shown in Table 8. The number of violating constraints by using L9(34) experiments under 
the best fitness value at nominal values with different tolerances between TGAOA and HTGA 
approaches is described in Table 9. It can be seen that the number of violating constraints 
obtained from the proposed TGAOA approach with tolerances of ±0.1%, ±0.5%, ±1%, ±2%, 
and ±2.1% at each design variable is 0, since both tolerance and optimal designs are 
considered in the TGAOA algorithm. The number of violating constraints is 3 as the tolerance 
equal to ±2.2%. This means that the TGAOA approach cannot tackle the tolerance design 
problem, if the tolerance is more than a particular percent (value) which is more than ±2.1% 
in this case. The number of violating constraints given by the HTGA approach with the 
tolerance of 0% at each design variable is 0, since the design constraints are satisfied in the 
design process. However, the numbers of violating constraints are 4, 6, 7, 7, 7, 7, and 7 based 
on the nominal value obtained by the HTGA approach with tolerances of ±0.1%, ±0.5%, ±1%, 
±2%, ±2.1%, ±2.2%, and ±2.5% at each design variable, respectively, since only the nominal 
values of design variables with the tolerance of 0% is considered in the design process.  
 
 
  23
FHTGA = J(x) + P,                       (4.20) 
where J(x) is the objective value. The objective is to minimize the fitness functions in (4.19) 
and (4.20), respectively. The penalty function P is shown below: 
P = [ ( )∑ −
=
3
1
10)(
j
jp xfw , if fj(x) > 10] + [ ( )∑ −=
9
4
0)(
j
jp xfw , if fj(x) > 0],   (4.21) 
where wp is set to be 10000, the value of which is enough to distinguish between feasible and 
unfeasible individuals. The value of the penalty function is equal to 0, as the optimization 
process is finished. This is to imply that the values of the design variables satisfy the design 
constraints. 
The computational results obtained by using the TGAOA and HTGA approaches are 
given in Tables 10, 11, and 12. In Table 10, the robustness analysis in the TGAOA and HTGA 
approaches is shown; the standard deviation obtained by the TGAOA and HTGA approaches 
in 30 independent runs is very small. That is, both TGAOA and HTGA approaches are robust 
methods. The nominal values of design variables under the best fitness value at different 
tolerances between TGAOA and HTGA approaches are shown in Table 11. The number of 
violating constraints by using L27(313) experiments under the best fitness value at nominal 
values with different tolerances between TGAOA and HTGA approaches is described in 
Table 12. It can be seen that the number of violating constraints obtained from the proposed 
TGAOA approach with tolerances of ±0.1%, ±0.5%, ±1%, ±5%, and ±10% at each design 
variable is 0, since both tolerance and optimal designs are considered in the TGAOA 
algorithm. The number of violating constraints given by the HTGA approach with the 
tolerance of 0% at each design variable is 0, since the design constraints are satisfied in the 
design process. However, the number of violating constraints is 157 based on the nominal 
value obtained by the HTGA approach with tolerances of ±0.1%, ±0.5%, ±1%, ±5%, or 
±10% at each design variable, since only the nominal values of design variables with the 
tolerance of 0% is considered in the design process.  
  25
5. Conclusions  
In this study, the TGAOA approach is proposed to design the robust and optimal 
parameter in tolerance design problems. The TGAOA approach combines the merits of the 
GA, which exhibits powerful capabilities in global explorations, the Taguchi method, which 
exploits the generation of optimal offspring, and a three-level OA, which reduces the impact 
of variability of component specifications. The two main mathematical tools, the two-level 
and three-level OAs and the signal-to-noise ratio of the Taguchi method, are key factors for 
the TGAOA approach. This efficiency is inherited from the Taguchi method as a robust 
design and thus helps produce results that are indeed more robust. Therefore, the TGAOA 
approach demonstrates its capabilities of optimization and robustness. Furthermore, in the 
optimization tolerance design problems under the variability of component specification and 
design constraints, the fitness function instead of the objective function is employed to 
evaluate the system performance. The fitness function includes the average value and 
standard deviation derived from three-level OA experiments and the penalty function. We 
implement the TGAOA approach to solve the mixed H2/H∞ optimal PID controller design 
problem under the variability of PID component specifications, the plant uncertainty, and the 
external unknown disturbance. The computational experiment shows that the mixed H2/H∞ 
PID controller design obtained from the TGAOA approach outperforms that obtained from 
the HTGA method. In a compression coil spring design problem, the TGAOA approach can 
effectively control the impact of tolerances in a limited tolerance region (i.e., under ±2.1%), 
and so the number of violating constraints is 0. However, the HTGA approach can get the 
better fitness value, but the values of design parameters are so sensitive to the design 
constraints if the tolerance exists at each design variable, and, hence, the numbers of violating 
constraints are increasing in this study case. In the test function example, it has 13 design 
variables. The TGAOA also shows its prominent capability for the tolerance design. 
 
  27
References 
1. Bazaraa, M., J. Jarvis, and H. Sherali, 1990, Linear Programming and Network Flows, 
John Wiley and Sons, New York. 
2. Chen, B. S. and Y. M. Cheng, 1998, “A Structured-Specified H∞ Optimal Control Design 
for Practical Applications: A Genetic Approach,” IEEE Trans. Control Sys. Tech., Vol. 6, 
pp. 707-718. 
3. Chen, B. S., Y. M. Cheng, and C. H. Lee, 1995, “A Genetic Approach to Mixed H2/H∞ 
Optimal PID Control,” IEEE Control Syst. Mag., Vol. 15, pp. 51-60. 
4. Chou, J. H., S. H. Chen, and J. J. Li, 2000, “Application of Taguchi-Genetic Method to 
Design an Optimal Grey-Fuzzy Controller of a Constant Turning Force System,” J. of 
Materials Processing Technology, Vol. 105, pp. 333-343. 
5. Davis, L., 1989, “Adapting Operator Probabilities in Genetic Algorithms,” Proc. of the 
1989 International Conference on Genetic Algorithms, San Mateo, pp. 61-69. 
6. De Castro, L. N. and F. J. Von Zuben, 2001, “Learning and Optimization Using the 
Clonal Selection Principle,” IEEE Trans. on Evolutionary Computation, Special Issue on 
Artificial Immune Systems. 
7. De Castro, L. N. and F. J. Von Zuben, 2002, “Learning and Optimization Using the 
Clonal Selection Principle,” IEEE Trans. on Evolutionary Computation, Vol. 6, pp. 
239-251. 
8. Femia, N. and G. Spagnuolo, 2000, “True Worst-Case Circuit Tolerance Analysis Using 
Genetic Algorithms and Affine Arithmetic,” IEEE Trans. on Circuit and Syst., Vol. 47, 
pp. 1285-1296 
9. Femia, N. and G. Spagnuolo, 2002, “Tolerance Design of Closed-Loop Controllers for 
DC-DC Voltage Regulators: Genetic Algorithms & Vertex Analysis Based 
Optimization,” Proc. of 2002 IEEE ISIE, L’Aquila, pp. 94-99. 
10. Francis, B. A., 1987, A Course in H∞ Control Theory, Springer-Verlag, Berlin. 
11. Forouraghi, B., 2002, “Worst-Case Tolerance Design and Quality Assurance via Genetic 
Algorithms,” Journal of Optimization Theory and Applications, Volume 113, pp. 
251-268. 
12. Gen, M. and R. Cheng, 1997, Genetic Algorithms and Engineering Design, John Wiley 
and Sons, New York. 
  29
27. Tsai, J. T., T. K. Liu and J. H. Chou, 2004, “Hybrid Taguchi-Genetic Algorithm for 
Global Numerical Optimization,” IEEE Trans on Evolutionary Computation, Vol.8, 
pp.365-377. 
28. Vitelli, M., Spagnuolo, G., and Femia, N., 2002, “Tolerance Design of DC-DC Switching 
Regulators,” Proc. of 2002 IEEE International Symposium on Circuits and Systems, Vol. 
4, pp. 751-754. 
29. Wang, L., 2001, Intelligent Optimization Algorithms with Applications, Tsinghua 
University Press, Beijing. 
30. Wu, Y., 2000, Taguchi Methods for Robust Design, The American Society of Mechanical 
Engineers, New York. 
 2
混合式最佳化方法，來解決設計上所要求的參數最佳化問題，其演講內容提供我未來研究方
向上之參考。 
本人與何文獻、許恭銘、劉東官、以及周至宏等教授所共同合作完成的論文 “Optimal 
Process Design Using Soft Computing Approaches” 被安排在 Intelligent Computation and Control
場次中發表，會議中有多位學者提出問題和我們討論，並且彼此交換心得，使我們獲益良多。
此外，在會議期間我所參加的論文發表場次以人工智慧、最佳化方法、以及控制系統設計和
應用等課題為主，在會中聽取演講者報告並參與討論，使我獲益匪淺。 
 
二、與會心得 
各國的學者專家共聚一堂，彼此交換研究心得，發表新的研究成果，參與此次國際會議
以及所見所聞，收獲良多，且有下列幾點心得： 
1. SCIE 2008 之國際研討會所發表的主題廣度相當大，值得推薦給國內有意擴大研究領域的
學者，考慮參加的國際會議之一。 
2. 從日本的產品與產業應用，可發現台灣學者在實務研究與產學合作方面均有努力成長的空
間。 
3. 國內之學者、老師、與學生充分的參與研討會，不僅增加台灣在世界的知名度，且促進國
際合作並進行國民外交，希望國科會未來能多給予支持與鼓勵。 
 
三、建議事項 
1. 此次國內學者與研究生在論文發表量與出席人數方面，均相當踴躍，同時也建議國科會與
教育部未來能多提供博士生出席國際會議之名額與經費，培養本國博士生出國參加國際會
議的經驗與國際觀，如此可增加台灣人才在國際學術界的曝光度與增進我國的國際地位。
 
四、攜回資料名稱 
攜回 SCIE 2008 論文集之光碟片乙片，以及會議議程手冊乙本。 
 
 
 
   
and interacting with the adjacent atoms. The chemical 
bonds on the substrate surface are broken by those 
particles. 
3. Experiment of Taguchi Method 
The Taguchi method is used to study a large 
number of the designed variables with a small number 
of experiments. The better level combinations of the 
designed variables are decided by the orthogonal arrays 
and the signal-to-noise ratios. There are six factors, in 
this study, that are the voltage (defined to be variable A) 
and time (defined to be variable B) on the substrate 
during glow-discharge cleaning and rising temperature 
period; the target current (defined to be variable C), the 
oxygen flow rate (defined to be variable D), and the 
time (defined to be variable E) and voltage (defined to 
be variable F) on the substrate during thin-film 
deposition period. In order to consider the non-linear 
effect, each factor is divided into three levels as shown 
in Table 1. The orthogonal array L18(21×37), the degree 
of freedom of 17, is selected in the study, since the 
degree of freedom of six factors (each factor has three 
levels) is 12. In each experiment, we measure the water 
contact angles, shown in Figure 2, of two different 
positions, 1θ and 2θ .The smaller-the-better characteristic 
of the signal-to-noise ratio is selected, because the 
smaller water contact angle has better anti-pollution 
and self-cleaning functions. 
4. Training and Verification of Artificial 
Neural Network 
The data of 18 experiments are used as the inputs 
for training the model of the artificial neural network 
by using the back-propagation algorithms. The structure 
of three layers (input, hidden, and output layers) of the 
artificial neural network is used in this process. The 
details are described as follows. 
The designed artificial neural network has 7 inputs 
and 1 output. The inputs include the voltage (defined to 
be variable A) and time (defined to be variable B) on 
the substrate during glow-discharge cleaning and rising 
temperature period; the target current (defined to be 
variable C), the oxygen flow rate (defined to be 
variable D), and the time (defined to be variable E) and 
voltage (defined to be variable F) on the substrate 
during thin-film deposition period; the bias value (-1). 
The output is the water contact angle θˆ . The structure 
of the artificial neural network has three layers that are 
input, hidden, and output layers. The hidden layer is set 
to be 20 neurons that could have the better results 
proved by the trial-and-error process. The 18 training 
data were used to train the model of the artificial neural 
network. Learning rate is set to be 0.1. The training 
process of the artificial neural network would be 
stopped as soon as the sum of square error of the output 
is less than 0.001. 
5. Parameters Optimization for the Model 
of Artificial Neural Network Using 
Genetic Algorithms 
Genetic algorithms, powerful tools based on 
biological mechanisms and natural selection theory [9], 
have received considerable attention regarding its 
potential as an optimization technique for complex 
problems and have been successfully applied in various 
areas [10]. The detailed steps for solving optimization 
problems are described as follows. 
Step 1: Parameter setting. For example, population size, 
crossover rate, mutation rate, and number of 
generations. 
Step 2: Generation of Initial Population. 
Step 3: Selection operation using the roulette wheel 
approach. 
Step 4: Crossover operation. The probability of 
crossover is determined by crossover rate. 
Step 5: Mutation operation. The probability of mutation 
is determined by mutation rate. 
Step 6: Offspring population is generated. 
Step 7: Sort the fitness values in increasing order 
among parents and offspring populations. 
Step 8: Select the better chromosomes whose amounts 
are equal to the population size as parents of the 
next generation. 
Step 9: Has the stopping criterion been met? If yes, then 
go to Step 10. Otherwise, return to Step 3 and 
continue through Step 9. 
Step 10: Display the optimal chromosome and the 
optimal fitness value. 
6. Conclusions 
This paper presents an optimal process parameters 
design procedure by using soft computing approaches. 
The procedure combines the Taguchi method, the 
artificial neural network, and the genetic algorithm to 
search for the optimal process parameters for a TiO2 
thin film of the vacuum sputtering process. The 
orthogonal array L18(21×37) of the Taguchi method is 
used to collect experiment data representing the quality 
performance of a TiO2 thin film made by the vacuum 
sputtering process. In the stage, the 18 experimental 
data are collected as the inputs for training the model of 
the artificial neural network. The back-propagation 
algorithms are adopted to build the model of the 
artificial neural network for a TiO2 thin film of the 
   
Table 1. Control factors and levels. 
Levels 
Factor 
1 2 3 
A: voltage (volt) on the substrate 
during the glow-discharge 
cleaning and rising temperature 
period 
250 300 350
B: time (min) on the substrate 
during the glow-discharge 
cleaning and rising temperature 
period 
5 15 25
C: target current (Amp) during the 
thin-film deposition period 1.5 2 2.5
D: oxygen flow rate (sccm) during 
the thin-film deposition period  10 15 20
E: time (min) on the substrate 
during the thin-film deposition 
period 
60 90 120
F: voltage (volt) on the substrate 
during the thin-film deposition 
period 
30 40 50
 
 2
二、與會心得 
各國的學者專家共聚一堂，彼此交換研究心得，發表新的研究成果，參與此次國際會議
以及所見所聞，收獲良多，且有下列幾點心得： 
1. IEEE ICICIC 2008 國際研討會，協辦單位之一為國立高雄應用科技大學，該校之工作團隊
協助辦好此次的研討會與活動，促進國內學者互相認識與交流，值得肯定與鼓勵，且高雄
應用科技大學將於 2009 年在台灣承辦此研討會。 
2. IEEE ICICIC 2008 之國際研討會所發表的主題廣度相當大，值得推薦給國內有意擴大研究
領域的學者，考慮參加的國際會議之一。 
3. 台灣學者專家應加強與大陸學術界之研究交流、合作，以奠立華人在國際學術界之領導地
位。 
4. 國內學校之學者與學生充分的參與研討會並協助舉辦研討會，不僅增加台灣在世界的知名
度，且促進國際合作並進行國民外交，希望國科會未來能多給予支持與鼓勵。 
 
三、建議事項 
1. 此次舉辦單位中國大連大學所在地區較為偏僻，交通不便加上中國之廁所文化令人咋舌，
希望未來舉辦單位能選擇交通便利的地點與較佳的會議場所。 
2. 此次研討會國內老師參與相當踴躍，同時也建議國科會與教育部未來能多提供博士生出席
國際會議之名額與經費，培養本國博士生出國參加國際會議的經驗與國際觀，如此可增加
台灣人才在國際學術界的曝光度與增進我國的國際地位。 
 
四、攜回資料名稱 
攜回 IEEE ICICIC 2008 論文集之光碟片乙片，以及會議議程手冊乙本。 
 
 
 
 
 
 
 
           
[ ]
[ ]
[ ] ,,,,
,,,,,
,,
),,,2,1(
),,,2,1(0)(
),,2,1(0)(
)(
21
21
T
nndnd
c
T
ndnq
d
Tcd
u
ii
l
i
k
j
xxxXand
xxxxX
XXX
nixxx
skXh
pjXgtosubject
XfMinimize
L
LL
L
L
L
++=
=
=
=≤≤
==
=≤
      
     where x1, x2,…, xnq are non-negative discrete 
variables with permissible values equally spaced; xnq+1, 
xnq+2, …, xnd are non-negative discrete variables with 
permissible values unequally spaced; xnd+1, xnd+2, …, xn 
are non-negative continuous variables. 
 
3.  Improved Genetic Algorithm  
 
The IGA approach is a method of combining the 
traditional GA with the experimental design method. 
The experimental design method is inserted between 
crossover and mutation operations of the traditional 
GA. The detailed steps of the IGA approach is 
described as follows. 
Step 0: Parameter setting. 
Input: population size ps, crossover rate pc, 
mutation rate pm, and number of generations. 
Output: the optimal chromosome and the 
fitness value. 
Step 1: Initialization. Generate an initial population. 
The fitness values of the population are then 
calculated. 
Step 2: Selection operation using the roulette wheel 
approach [17]. 
Step 3: Crossover operation. 
Step 4: Select a suitable two-level orthogonal array 
for matrix experiments. 
Step 5: Choose randomly two chromosomes at a 
time to execute matrix experiments. 
Step 6: Calculate the fitness values and signal-to-
noise ratios of n experiments in the 
orthogonal array Ln(2n-1). 
Step 7: Calculate the effects of the various factors. 
Step 8: One optimal chromosome is generated 
based on the results from Step 7. 
Step 9: Repeat Steps 5 through 8 until the expected 
number has been met. 
Step 10: The population via the experimental 
design method is generated. 
Step 11: Mutation operation. After the mutation 
operation, the program would 
automatically check each fitness value of 
new chromosomes that have executed the 
mutation. If the new chromosome has 
better fitness value than the original 
chromosome that does not execute the 
mutation, the new offspring would be 
adopted. Otherwise, the original 
chromosome would be reserved. 
Step 12: New offspring population is generated. 
Step 13: Sort the fitness values in increasing order 
among parents and offspring populations. 
Step 14: Select the better ps chromosomes as 
parents of the next generation. 
Step 15: Has the stopping criterion been met? If yes, 
then go to Step 16.  Otherwise, return to 
Step 2 and continue through Step 15. 
Step 16: Display the optimal chromosome and the 
fitness value. 
 
4. Conclusions 
 
An improved GA approach has been presented in 
this paper to solve the MDCNLP problems. The 
proposed IGA approach, combining the traditional GA 
and the experimental design method, possesses the 
advantages of global exploration capability and 
exploiting the optimum offspring to improve the 
convergent speed and the computational efficiency.  
 
5. Acknowledgement 
 
This work is partially supported by MIRDC and 
the National Science Council, Taiwan, under the grant 
numbers NSC96-2221-E153-002-MY2 and NSC96-
2628-E327-004-MY3. 
 
6. References 
 
[1] J.S. Arora, “Computational design optimization: a review 
and future directions,” Struct. Safety Vol. 7, 1990, pp. 131-
148. 
[2] S. S. Rao and Y. Xiong, “A Hybrid Genetic Algorithm 
for Mixed-Discrete Design Optimization,” ASME Journal of 
Mechanical Design, Vol. 27, 2005, pp. 1100-1112.  
[3] Holland, J. H., Adaptation in Natural and Artificial 
Systems, University of Michigan, Ann Arbor, MI, 1975. 
[4] V. B. Gantovnik, Z. Gurdal, L. T. Watson, and C. M. 
Anderson-Cook, “Genetic algorithm for mixed integer 
nonlinear programming problems using separate constraint 
approximations,” AIAA Journal, Vol. 43, 2005, pp. 1844-
1849. 
[5]J. R. Feng, Z. H. Liu, Z. H. Liu, and C. S. Wang, “Hybrid 
global optimization algorithm for solving MINLP problems,” 
Journal of System Simulation, Vol. 17, 2005, pp. 1859-1863. 
[6] G. J. Zhang and T. H. Wu, “The global optimal algorithm 
design and implementation for three levels pump 
configuration problem,” Journal of Shanghai Jiaotong 
University, Vol. 39, 2005, pp. 1984-1987. 
(1)
 1
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
計畫編號 NSC96-2221-E-153-002-MY2 
計畫名稱 直交量子基因演算法之研發及其應用 
報告人姓名 蔡進聰 
服務機構 
及職稱 
國立屏東教育大學資訊科學
學系/助理教授 
會議時間地點 9/5/2007 - 9/7/2007 Kumamoto, Japan 
會議名稱 The Second International Conference on Innovative Computing, Information and 
Control (ICICIC 2007) 
發表論文題目 Circuit Tolerance Design Using an Improved Immune Algorithm 
一、參加會議經過 
第二屆 ICICIC 2007 國際創新計算、資訊、與控制研討會 (The Second International 
Conference on Innovative Computing, Information and Control, ICICIC 2007)，在日本九州的熊本
市 (Kumamoto) 舉行，自 2007 年 9 月 5 日至 9 月 7 日為期三天，由 IEEE 贊助，日本九州東
海大學  (Kyushu Tokai University) 與台灣國立高雄應用科技大學  (National Kaohsiung 
University of Applied Sciences) 聯合主辦。本人參與國立高雄應用科技大學所組成的團隊，於
2007 年 9 月 4 日搭乘長榮航空公司班機，由高雄小港國際機場飛抵日本九州福岡國際機場，
再乘車至熊本市國際中心參加會議。 
今年會議投稿論文超過 1000 篇，僅 642 篇論文被接受與發表，其中台灣參加研討會的學
者就有上百人。三天來共有 54 場研討會議以口頭方式進行發表論文，另有 16 場以海報方式
進行發表。會議研討主題相當廣泛，涵蓋信號與影像處理、語音與聲音信號處理、資訊檢索
與多媒體技術、數位浮水印與資訊安全技術、感測與神經網路系統、知識系統、資料探勘、
模糊系統與應用、智慧型控制系統與應用、人工智慧、最佳化演算法、智慧型系統、…等等。
除論文發表外，會議中亦有邀請演講，如來自美國喬治華盛頓大學 (George Washington 
University, USA) 的 Professor Harold Szu, PhD，其演講主題為居家照護的技術與器具，另外尚
有來自澳洲維多利亞大學 (Victoria University, Australia) 的 Professor Pieter Nagel, PhD，其演
講主題為後勤補給城市，演講內容皆非常精闢且有趣，可提供未來研究方向上的參考。 
本人與何文獻、劉東官、以及周至宏等教授所共同合作完成的論文 “Circuit Tolerance 
Design Using an Improved Immune Algorithm” 被安排在 9 月 7 日之 Evolutionary Optimization
的場次中發表，會議中有多位學者提出問題和我們討論，彼此交換心得，使我們獲益良多。
 Circuit Tolerance Design Using an Improved Immune Algorithm 
 
 
Jinn-Tsong Tsai                             Wen-Hsien Ho                         Jyh-Horng Chou and Tung-Kuan Liu 
Dept. of Computer Science       Dept. of Medical Information Management     Institute of System Information and Control 
Natl Pingtung Univ. of Education        Kaohsiung Medical University        Natl Kaohsiung First Univ. of Science and Technology 
Pingtung, Taiwan, R.O.C.                   Kaohsiung, Taiwan, R.O.C.                                 Kaohsiung, Taiwan, R.O.C. 
jttsai@mail.npue.edu.tw                            whho@kmu.edu.tw                                {choujh, tkliu}@ccms.nkfust.edu.tw 
 
Abstract 
In this paper, we apply an improved immune 
algorithm to solve a circuit tolerance design problem, 
which has many design parameters and constraints. 
The evolutionary design approach, called a Taguchi 
immune algorithm (TIA), with a penalty function is 
proposed for solving the constrained optimization 
problem. The proposed TIA approach with a penalty 
function is effectively applied to solve the circuit 
tolerance design problem.  
 
1. Introduction 
Electronic circuit tolerance design is generally 
very time-consuming because yield estimation and 
improvement require many circuit simulations. Circuit 
designers are required to find a point with the 
maximum tolerances in the parameter space that 
satisfies all design specifications and constraints to 
achieve a high yield at minimum cost [1]. The 
traditional method for yield estimation is to use Monte 
Carlo analysis [2]. As an alternative, it is possible to 
construct an approximation to the region of 
acceptability (RA) and apply some kind of polyhedral 
approximation [3], quadratic approximation [4], and 
ellipsoidal method [5]. However, when the ranges of 
input variables are large and the performance surfaces 
are strongly nonlinear, these approximation techniques 
and a low-order polynomial model may not be 
sufficient for the tolerance design [1]. Therefore, in 
recent years, some researchers [1], [6], [7] have 
proposed the genetic-algorithm-based (GA-based) 
approaches to solve the circuit tolerance design 
problem. In the constrained optimization problem of 
the circuit tolerance design, the particular challenge is 
that the GA-based methods may be trapped in the local 
optima of the objective function when the number of 
the design parameters, specifications, and design 
constraints is large and there are numerous local 
optima. Therefore, it is worthy of further developing an 
efficient evolutionary algorithm to solve the circuit 
tolerance design problem. 
We use the TIA approach with the penalty 
function for the solution of the circuit tolerance design 
problem. The penalty function is employed to convert 
the constrained optimization problem of the circuit 
tolerance design into an unconstrained one by means of 
a penalization of the unfeasible individuals. Once the 
evolutionary approach is established, the circuit 
tolerance design method can be used for the remaining 
design centering and tolerance assignment operations. 
In addition, vertex analysis [7], an easy-to-use tool, is 
used to verify the 100% feasibility of a candidate 
tolerance region. 
 
2. Problem definition 
Let it be given a circuit including N design 
parameters, characterized by a central value Ckp  and a 
relative tolerance tk, k =1, 2, …, N. Their allowable 
values define an N-dimensional sub-space of ℜN 
named space of parameters. A tolerance region (RT) is 
any hyper-rectangle included in the parameter space 
and defined by taking a bounded range of variation for 
each parameter: pk∈[ Lkp , Ukp ], with Ckp = 
( Lkp +
U
kp )/2 and tk=(
U
kp − Ckp )/ Ckp , k =1, 2, …, N. 
Thus, if each parameter is related to an axis of the 
parameter space, the RT is an N-dimensional axis-
aligned parallelepiped in the parameter space. Let it be 
also given R design constraints regarding as many 
functions of circuit parameters: gj(p1, p2, …, pN)∈[Lj, 
Uj], j =1, 2, …, R. Each one is expressed by means of 
lower and upper bounds, Lj and Uj, respectively, within 
which the performance function gj assumes acceptable 
values. All the sets of parameters (p1, p2, …, pN) that 
meet the design constraints lie within a region of the 
parameter space that is traditionally named region of 
acceptability (RA). The subset of RT given by the 
intersection between the RT and the RA, RT ∩ RA, is the 
feasibility region (RF). Each point in the RF 
corresponds to a feasible set of parameters. Given the 
design constraints (the RA) and designed the 
parameters’ tolerances (the RT), the yield is an 
 where N is the number of design parameters. Only four 
capacitances {C1, C3, C4, C5}, defined in Figure 1, 
have been designed, while the other parameters, also 
defined in Figure 1, has been fixed at their central 
values: R1=13.2kΩ, R2=10kΩ, R3=16.46Ω, R4=13.58Ω, 
L1=3.988H, L2=2.685H, C2=10.47nF. Then, for 
converting a constrained optimization problem into an 
unconstrained one, the fitness function F is defined as 
following: 
PtC
F += )(
1 ,                              (4.2) 
where C(t) is the objective function in (4.1) and P is 
the penalty function. The objective is to maximize the 
fitness value of (4.2). It can be seen from (4.2) that a 
larger fitness value implies a larger tolerance for each 
capacitance. 
The objective is to maximize the fitness function 
in (4.2). The parameter vector of the circuit tolerance 
design is described as 
θ8×1 = [ Cp1 , Cp2 , Cp3 , Cp4 , t1, t2, t3, t4]T,            (4.3) 
where Cp1 , 
Cp2 , 
Cp3 , and 
Cp4  denote the central values 
of C1, C3, C4, and C5, respectively; t1, t2, t3, and t4 
denote, respectively, tolerances of C1, C3, C4, and C5. 
The search space, in the practical application, has been 
chosen by considering for all the four capacitances the 
range [1, 100]nF with resolution of 1nF, while all the 
corresponding tolerances has been left to span the 
interval [0.1, 20.0]% with resolution of 0.1%. In this 
example, there are eight parameters and we need eight 
columns to allocate these factors when the orthogonal 
array is selected to solve the problem. The orthogonal 
array L16(215) is used for this purpose because it has 
fifteen columns.  
In the computational experiments of our proposed 
TIA approach, the following evolutionary 
environments are used: the antibody population size ps 
is 200, the replication rate pr is 0.8, the mutation rate 
pm is 0.1, the clonal selection rate pc is 0.06, the 
hypermutation rate ph is 0.8, and the execution of the 
TIA approach is stopped when the smallest objective 
function value of the antibody population cannot be 
further reduced in the successive 50 generations after 
200 generations. 
The values of the best, the average, and the 
standard deviation for 30 independent runs by using 
the TIA approach are shown in Table 1. The 
computational results obtained by using the TIA 
approach for the minimum cost and tolerances are 
shown in Table 2 and the results by using the previous 
method given in [7] are also given in Table 2. 
From Table 1, it can be seen that the proposed 
TIA approach gives a small standard deviation in 30 
independent runs, and thus it has a robust and stable 
solution quality. From the computational results in 
Table 2, it can be seen that the TIA approach can give 
smaller cost, due to having larger tolerance for most 
components, than the method given in [7]. 
 
5. Conclusions 
In this paper, the TIA approach with the penalty 
function has been used to solve the design problem of 
the circuit tolerance. The aforementioned 
hypermutation of convex combination together with 
the high hypermutation rate can give several antibody 
diversifications and is capable of preventing the 
premature convergence. The penalty function is 
employed to convert the constrained optimization 
problem of the circuit tolerance design into an 
unconstrained one by means of a penalization of the 
unfeasible individuals. The computational experiments 
show that the TIA approach can obtain better results 
than the method given in [7] and has a robust and 
stable solution quality.  This work is only a preliminary 
study on applying the TIA to solve a circuit tolerance 
design problem. A complete and detailed study on the 
aforementioned issue will be appeared in the journal. 
 
Acknowledgement 
This work was partially supported by the National 
Science Council, Taiwan, Republic of China, under 
grant numbers NSC95-2221-E327-032 and NSC95-
2221-E153-002. 
 
References 
[1] A. Wu, K. Y. Wu, R. M. M. Chen, and Y. Shen, 
“Parallel Optimal Statistical Design Method with 
response Surface Modelling Using Genetic 
Algorithms,” IEE Proc-Circuits Devices Syst., Vol. 
145, pp. 7-12, 1998. 
[2] M. H. Kalos and P. A. Whitlock, Monte Carlo 
methods, John Wiley and Sons, New Jersey, 1986. 
[3] K. Krishna and S. W. Director, “The Linearized 
Performance Penalty (LPP) Method for Optimization 
of Parametric Yield and its Reliability,” IEEE Trans. 
Computer-Aided Design, Vol. 14, pp. 1557-1568, 1995. 
[4] R. M. Biernacki, J. W. Bandler, J. Song, and Q. J. 
Zhang, “Efficient Quadratic Approximation for 
Statistical Design,” IEEE Trans. on Circuit and Syst., 
Vol. 36, pp. 1449-1454, 1989. 
[5] J. M. Wojciechowski and J. Vlach, “Ellipsoidal 
Method for Design Centering and Yield Estimation,” 
IEEE Trans. Computer-Aided Design, Vol. 12, pp. 
1570-1479, 1993. 
