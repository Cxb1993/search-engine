16 bytes
M
U
X
N-1 bytes
temp
M UX
0
1
1 bytes (x[ l ])
Data Expansion
Secret
Bit  Plane
Logical
Operation
(N bytes)
Swapping
Operation
(N bytes) 
x(0)
α1 ~ αN/8β1 ~ βN/8
M 
U  
X
Pseudo-
random 
Bit 
Generatorp1
F
1
0
2D Bit 
Circulation 
Operation
α1 ~ αN/8 
PR[ 0:258]
A B C
N -1 bytes
1st bytes× SwappingOperation
(16 bytes) 
Bit  Plane
Logical
Operation
(16 bytes)
2D Bit 
Circulation 
Operation
Pseudo-
random 
Bit 
Generatorp1 F
x(0)
M 
U  
X
1
0
β 1 ~ β N/8 
D E F
G H
PR[ 0:258]
HG
B C D E F
α1 ~ αN/8 
β 1 ~ β N/8 
α1 ~ αN/8β1 ~ βN/8
 
Fig. 1. The block diagram of MCS. 
Data Expansion in MCS 
Every N-1 bytes of input data are expanded to N bytes saw 
as a packet. For first packet on the input of swapping 
operation stage, the insertion byte is the parameter Secret. In 
the following packets, the appended one is randomly chose 
in the previous packet, decided by the corresponding bits of 
control sequence.   
Swapping Operation in MCS 
Definition 1: The operation Swap
w
(g(m), g(n)) is defined 
to swap g(m) and g(n) if w is equal to 1 or preserve their 
original positions if w is equal to 0. 
The swapping operation for a 16-byte packet g(n)s, 0 ≤ n ≤ 
15, contains four levels. They are defined as follows:  
#1) ][PR kSwap (g[i], g[j]) for (i, j, k) ∈ {(0, 8, 4), (1, 9, 5),  (2, 10, 
6), (3, 11, 7), (4, 12, 8), (5, 13, 9), (6, 14, 10), (7, 15, 11)}, 
#2) ][PR kSwap (g[i], g[j]) for (i, j, k) ∈ {(0, 4, 12), (1, 5, 13), (2, 6, 
14), (3, 7, 15), (8, 12, 16), (9, 13, 17), (10, 14, 18), (11, 15, 19)}, 
#3) ][PR kSwap (g[i], g[j]) for (i, j, k) ∈ {(0, 2, 20), (1, 3, 21), (4, 6, 
22), (5, 7, 23), (8, 10, 24), (9, 11, 25), (12, 14, 26), (13, 15, 27)}, 
#4) ][PR kSwap (g[i], g[j]) for (i, j, k) ∈ {(0, 1, 28), (2, 3,29), (4, 5, 
30), (6, 7, 31), (8, 9, 32), (10, 11, 33), (12, 13, 34), (14, 15, 35)}. 
Bit Plane Logical Operation in MCS 
Definition 2: The ith bit plane BPi, 0 ≤ i ≤ 7 of g(n)s, 0 ≤ n 
≤ 15 is defined to be the set of all the ith bits of g(n)s from 
least significant bit. 
The logical operation on the bit planes is defined as follows: 
FOR i = 0 TO 7 DO 
Switch ( 2×PR[36+2i] + PR[37+2i] ) 
Case 3:  BPi ⊕ D; 
Case 2:  BPi XNOR D; 
Case 1:  BPi ⊕ D; 
Case 0:  BPi XNOR E; 
End 
2D Bit Rotation Operation in MCS 
Let M be an 8×8 binary matrix. Two mappings are defined. 
Definition 3: The mapping MMRotateX ii rpi ′→  :,  is 
defined to rotate each bit in the ith row of M, 0 ≤ i ≤ 7 in the 
left direction ri bits if pi equals 1 or in the right direction ri 
bits if pi equals 0, where 0 ≤ r ≤ 7. 
Definition 4: The mapping MMRotateY jj sqj ′→  :,  is 
defined to rotate each bit in the jth column of M, 0 ≤ j ≤ 7 in 
the up direction sj bits if qj equals 1 or in the down direction 
sj bits if qj equals 0, where 0 ≤ s ≤ 7. 
Regarding the first eight bytes of the packet after the 
logical operation as the 8×8 binary matrix M1 and the second 
eight bytes as M2. The function block sequentially performs 
⎟⎟⎠
⎞
⎜⎜⎝
⎛•⎟⎟⎠
⎞
⎜⎜⎝
⎛ ∏∏
==
7
0
,
 
7
0
,
 
i
rp
i
j
sq
j
iijj RotateXRotateY (M1)    and 
⎟⎟⎠
⎞
⎜⎜⎝
⎛•⎟⎟⎠
⎞
⎜⎜⎝
⎛ ∏∏
==
7
0
,
 
7
0
,
 
i
rp
i
j
sq
j
iijj RotateXRotateY (M2). 
For 0 ≤ i, j ≤ 7 in M1, pi = PR(65+2i), qj = PR(81+2j), ri = α1 
+ β1×PR(66+2i), and sj = α1 + β1×PR(82+2j). For 0 ≤ i, j ≤ 7 
in M2, pi = PR(97+2i), qj = PR(113+2j), ri = α2 + 
β2×PR(98+2i), and sj = α2+ β2×PR(114+2j). 
Now, we consider the security problem. We regard MCS 
being a composite function MCS under the control of 
PR[0:258]. The MCS is composed of the following four 
cascaded operations: the data expansion operation (DE), 
swapping operation (SP), bit plane logical operation (BP), 
and 2D bit-rotation operation (BR). Hence, 
MCS = BR ₀ BP ₀ SP ₀ DE 
So, it belongs to the Shannon product cipher. The input data 
will be diffused and confused by the randomly cascaded 
operations under the control of PR[0:258]. Moreover, in the 
chaotic systems [12], it is well-known that i) it has sensitive 
dependence on initial conditions; ii) the trajectories are 
dense, bounded, but non-periodic in the state space; and iii) 
it has noise-like spectrum. Especially, Kocarev and 
Jakimoski have proved that the adopted PBG is 
cryptographically secure. 
To demonstrate the parameter sensitivity of MCS by 
MATLAB simulation, the root mean square difference (RMSD) 
is computed. Let Af ′ and Bf ′  be the encryption results of the 
image f of size L×P pixels under xA(0) and xB(0), 
respectively. The RMSD is defined as 
( ) 2
1
21
0 
1
0 
),(),(1 ⎟⎠
⎞⎜⎝
⎛ ′−′×≡ ∑ ∑−= −=Li Pj BA jifjifPLRMSD .  
Randomly generate x(0). Take the complement of the jth bit 
of x(0) and denote it as x[cj]; 0 ≤ j ≤ 258. After applying 
MCS to ”Cman” under x(0) and x[cj], the RMSDs between the 
results of x(0) and x[cj] and x[ci] and x[cj] for encryption are 
listed in Table 1 and Table 2, respectively. Moreover, 
according to [17], the computation of the fractal dimensions 
(fds) of encryption under x(0) and x[cj] is listed in Table 3. 
Tables 1 and Table 2 reveal that the encryption results are 
quite different under 1-bit or 2-bit variation. Table 3 shows 
the encryption results of MCS are completely disorderly. 
 1.4. HARDWARE DESIGN OF CMCS 
Architectures with low hardware cost, high throughput, 
high security, and high through and security corresponding to 
four configurations of CMCS algorithm for encryption are 
designed as Fig. 3 to Fig. 6. Depending on the requirement of 
application, the configured architecture can be constructed 
with the manners of pipeline and parallel-pipeline. The 
five-stage pipeline kernel in each architecture consists of data 
extension and multi-level data swapping for position 
permutation, and one-level XOR/XNOR operation and 2D 
circulation for bit-recirculation with random direction and 
random number of bits for value transformation, where for 
balancing the pipeline architecture, we further split the 2D 
circulation stage to two stages. 
 
Data 
Extension
((N-1) bytes 
→ N bytes)
Swapping
Operation
(N bytes) 
NB 
Bit Plane
Logical
Operation
(N bytes)
Pseudo-
Random 
Bit 
Generator
M
U  
X
F
1
8
~ Nα α
1
8
~ Nβ β
Secret
2D Bit
Operation
Rotation
(N bytes)
1
8
~ Nα α
NB NB 
1
8
~ Nβ β
H
I
A B C D E F
0
1
G
PR[0:258]
x_in
 
Fig. 3: Low hardware cost architecture 
 
NB 
F
1
8
~ Nα α
1
8
~ Nβ β
Secret
1
8
~ Nα α
NBNB 
1
8
~ Nβ β
H
A B C D E F
G
PR[0:258]
1
8
~ Nα α
1
8
~ Nβ β
NB NB NB 
Data
Extension
((N-1) bytes
N bytes)
Swapping  
Operation
(N bytes)
Bit Plane
Logical
Operation
(N bytes)
Bit Plane
Logical
Operation
(N bytes)
Swapping  
Operation
(N bytes)
2D Bit
Rotation
Operation
(N bytes)
2D Bit
Rotation
Operation
(N bytes)
F
H
I
G
PR[0:258]
RY
PR[0:258]
M
U
X
M
U
X
Pseudo-
Random
Bit
Generator
Pseudo-
Random
Bit
Generator
0
1
1
x(0)’
B C D E F
0
I
x_in
 
Fig. 4: High security architecture 
 
1
8
~ Nα α
1
8
~ Nβ β
Secret
1
8
~ Nα α
F
H
NB NB NB 
Swapping  
Operation
(N bytes)
Bit Plane
Logical
Operation
(N bytes)
2D Bit
Rotation
Operation
(N bytes)
Data
Extension
((N-1) bytes
-> N bytes)
1
8
~ Nβ β
A B C D E
G
PR[0:258]
M
U
X
Pseudo-
Random
Bit
Generator
0
1
1
8
~ Nα α
F
H
NB NB NB 
Swapping  
Operation
(N bytes)
Bit Plane
Logical
Operation
(N bytes)
2D Bit
Rotation
Operation
(N bytes)
Data
Extension
((N-1) bytes
-> N bytes)
1
8
~ Nβ β
A B C D E
G
PR[0:258]
M
U
X
Pseudo-
Random
Bit
Generator
0
1
DeMux Mux
F
F
I
I
x_in
 
Fig. 5: High throughput architecture 
 
NB 
F
1
8
~ Nα α
1
8
~ Nβ β
Secret
1
8
~ Nα α
NBNB 
1
8
~ Nβ β
H
A B C D E F
G
1
8
~ Nα α
1
8
~ Nβ β
NB NB NB 
Data
Extension
((N-1) bytes
N bytes)
Swapping  
Operation
(N bytes)
Bit Plane
Logical
Operation
(N bytes)
Bit Plane
Logical
Operation
(N bytes)
Swapping  
Operation
(N bytes)
2D Bit
Rotation
Operation
(N bytes)
2D Bit
Rotation
Operation
(N bytes)
F
H
I
G
PR[0:258]
Y
PR[0:258]
M
U
X
M
U
X
Pseudo-
Random
Bit
Generator
Pseudo-
Random
Bit
Generator
0
1
1
x(0)’
B C D E F
0
DeMux
NB 
F
1
8
~ Nα α
NBNB 
1
8
~ Nβ β
H
A B C D E F
G
1
8
~ Nα α
1
8
~ Nβ β
NB NB NB 
Data
Extension
((N-1) bytes
N bytes)
Swapping  
Operation
(N bytes)
Bit Plane
Logical
Operation
(N bytes)
Bit Plane
Logical
Operation
(N bytes)
Swapping  
Operation
(N bytes)
2D Bit
Rotation
Operation
(N bytes)
2D Bit
Rotation
Operation
(N bytes)
F
H
I
G
R
PR[0:258]
M
U
X
M
U
X
Pseudo-
Random
Bit
Generator
Pseudo-
Random
Bit
Generator
0
1
1
x(0)’
B C D E F
0
Mux
R
I
I
x_in
PR[0:258]
PR[0:258]
PR[0:258]
 
Fig. 6: High security and high throughput architecture 
Detail designs of the building blocks used in each 
configuration of the CMCS show in Fig. 7. The architecture 
of the PBG shows as Fig. 8 which used for the generation of 
chaos-based pseudorandom bit sequence; where 259-bit 
control signal is generated as the key of CMCS to randomly 
decide the operations in each pipeline stage. Observing the 
formulation of the chaos-based pseudorandom bit sequence 
generation, we concatenate the result of multiplication by the 
way of wiring rather than the complex operations of modular 
operation and truncation operation to minimize the hardware 
cost of PBG. 
For the clocking issue of the proposed design, since the 
computation time for generating the chaos-based 
pseudorandom bit sequence is much longer than that needed 
in encryption, we exploit the concept of multiple clock 
sources in the proposed design. That means we can use a 
slower clock source in the PBG design by dividing the 
original clock by a certain factor. The value of the dividing 
factor should be determined by the consumption rate of data 
processing stages. Regarding the issue of data, with the 
proposed algorithm, each packet of data for encryption is 
composed of 15 or 31 bytes and one Secret byte. Except the 
Secret, the rest of bytes are sampled serially, and 
concatenated with the secret at first stage such that a 16- or 
32- byte packet is issued to encrypt. Thus in this part of 
circuitry, also two clocks are needed. One is used for data 
sampling. The other is used as the pipeline clock. For 
maintaining the data flowing continuously in this system, the 
two clocks must be synchronized each other. Namely, the 
period of fifteen cycles for data sampling must be same as the 
period of 16 or 32 cycles for sending out the 16 or 32 
encrypted bytes. However, synchronization of the two clocks 
is not so easy. We adopt the manner of stalling to sample for 
one cycle every sixteen clock cycles.  
 
(a) 
 
In the following, we provide the performance evaluation 
of the proposed design and the other existing designs [4, 5, 6, 
9, 10]. In order to eliminate the factor of different fabrication 
technologies, we define an index of normalized area 
(denoted as NArea), which is the silicon area normalized to a 
0.35μm technology as shown as 
2)35.0/log( yTechno
AreaNArea =     (1) 
Besides, we also define an index of data rate per area 
(DRPA), i.e. Data rate/NArea, as shown in (2) to reflect the 
efficiency of the hardware design for data encryption and 
decryption. 
)( 2mm
Mbps
NArea
rateDataDRPA −=    (2) 
According to the two indices, we have summarized the 
comparison of the proposed designs and the existing ones 
[10-14] as Table 7. It reveals that the proposed design is 
better than the designs in providing higher data processing 
rate at lower hardware cost. Although the comparison cannot 
provide the absolute comparison in every aspect, including 
the efficiency as well as other factors like security and so on, 
it reflects the efficiency of the proposed design under the 
situation that the security of the proposed design and the 
existing ones [4, 5, 6, 9, 10] is good enough for applications.  
 
Table 7: Comparison of the proposed design with the existing designs [4, 5, 6, 9, 10]. 
Design Technology (um) 
Area 
(mm2) 
Data rate
(Mbits/s) 
Normalized 
area (NArea)
(mm2) 
Date-rate/ 
NArea (DRPA) 
(Mbps/mm2) 
Encryption 
algorithm 
Cipher block 
length / key 
length (bit) 
Design [9] 0.35 3.59 856 3.59 238.44 TDCEA 64/40 
Design [6] 1.2 107.8 177.8 9.17 19.39 IDEA 64 / 128 
Design [5] 0.35 13.69 1320 13.69 96.42 AES 128 / 128 
Design [4] 0.7 29 251.8 7.25 34.73 SAFER K-128 64 / 128 
Design [10] 0.35 3.63 500/519 3.63 137.7/143 SXRDEA 56/72 
Proposed (N = 16) 0.18 0.5357 1597 2.025 788.64 MCS 120/279 
Proposed (N = 32) 0.18 0.9293 1703 3.513 484.77 MCS 248/291 
 
1.6. CONCLUSIONS 
In this research, a configurable multimedia cryptographic 
system (CMCS), its IP core design and IP core generator 
have proposed. Four architectures corresponding to the 
CMCS algorithm are designed for low hardware cost, high 
throughput, high security, and high through and security, 
which consist of pipeline or parallel-pipeline architectures, 
and verified with 0.18 μm CMOS technology. With the 
verifications for all the configurations, we can see that the 
throughput can be ranged between 1.59 and 2.25 Gbps with 
the area of 0.54 and 3.92 mm2. Comparing with the existing 
designs, the performance of proposed designs is better than 
the others in terms of the evaluation index DRPA. With the 
provided high security, it reveals that the proposed high 
performance IP is easily integrated for most of the 
requirement in high quality real-time multimedia 
applications with acceptable hardware cost. 
 
Chapter 2 Reference 
 
[1]  “Data encryption standard,” FIPS PUB 46, National Bureau of 
Standards, Washington, D. C., Jan. 1997. 
[2]  J. Daemen and V. Rijmen, “AES Proposal: Rijndael, AES Algorithm 
submission,” Sep. 1999. 
[3]  X. Yi, C. H. Tan, C. K. Kheong, and M. R. Syed, “Fast Encryption 
for Multimedia,” IEEE Trans. on Consumer Electronics, Vol. 47, No. 
1, pp. 101-107, Feb. 2001. 
[4]  A. Schubert, V. Meyer, and W. Anheier, “Reusable cryptographic 
VLSI core based on the SAFER K-128 algorithm with 251.8 Mbit/s 
throughput,” Proc. 1998 IEEE Workshop on Signal Proc. Sys., pp. 
437-446, 1998. 
[5]  Y. Mitsuyama, etc., “VLSI implementation of high performance 
burst mode for 128-bit block ciphers,” Proc. ISCAS’2001, vol. 2, pp. 
344-347, 2002. 
[6]  A. Curiger, etc., “VINCI: VLSI implementation of the new 
secret-key block cipher IDEA,” Proc. IEEE 1993 Custom Integrated 
Circuits Conf., pp. 15.5.1~15.5.4, 1993. 
[7]  C. C. Lu etc., “Integrated design of AES Encrypter and Decrypter,” 
Proc. ASAP’2002, pp. 277-285, 2002. 
[8]  Michael Keating and Pierre Bricaud, “Reuse Methodology Manual,” 
3rd edition by Kluwer Academic Publishers, 2002. 
[9]  Sheng-Wei Lin, “The Design and Realization of the IP Core for Data 
Encryption in the Video Surveillance System,” Master Thesis, 
Computer Science and Information Engineering, National Chung 
Cheng University, 2003. 
[10]  H. C. Chen, et al., “On the parameterized IP core design of the new 
cryptographic system,” Proc. IEEE, ISPACS’2005, pp. 337-340, 
2005. 
[11]  L. Kocarev and G. Jakimoki, “Pseudorandom bits generated by 
chaotic maps,” IEEE Trans. On Circuits and Systems – Part I, vol. 
50, pp. 123-126, Jan. 2003. 
[12]  T. S. Parker and L. O. Chua, “Chaos - A tutorial for engineers,” Proc. 
IEEE, vol. 75, pp. 982-1008, 1987. 
[13]  C. C. Chen, etc., “Fractal feature analysis and classification in 
medical imaging,” IEEE Trans. on Medical Imaging, vol. 8, no. 2, pp. 
133-142, 1989. 
 
 
Chapter 3 Self-evaluation 
Because the study is in progress according to the 
content of the applied project, the research result is in 
accordance with the applied content. The achieving rate of 
the finished job to the overall applied content is about 98%. 
The related research result has been published in The 2007 
IEEE International Symposium of Consumer Electronics. 
The revised version will be submitted to journal for possible 
publication. It is obvious that the results of the project are 
valuable in the academic research 
