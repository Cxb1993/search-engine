National Science Council Research Grant
Final Report
Construction of Low-Density Parity-Check
Codes
Research grant no: NSC 95-2221-E-007-037-MY2
Research grant period: 08/01/2006 - 10/31/2008
Principal investigator: Chung-Chin Lu
Department Electrical Engineering
National Tsing Hua University
January 31, 2009
Contents
Abstract 1
Contents i
List of Figures ii
List of Tables iii
1 Introduction and Survey 1
2 Margulis Codes and Ramanujan-Margulis Codes 3
2.1 Introduction to Margulis Codes . . . . . . . . . . . . . . . . . . . . . . . . . 3
2.2 Introduction to Ramanujan-Margulis Codes . . . . . . . . . . . . . . . . . . 4
2.3 Modification to Margulis and Ramanujan-Margulis Codes . . . . . . . . . . . 6
2.4 Irregular Margulis Codes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6
2.4.1 Irregular Margulis-A . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
2.4.2 Irregular Margulis-B . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
2.4.3 Irregular Mar-Random Method . . . . . . . . . . . . . . . . . . . . . 8
2.5 Irregular Ramanujan-Margulis Codes . . . . . . . . . . . . . . . . . . . . . . 8
2.5.1 Irregular Raman-Random Method . . . . . . . . . . . . . . . . . . . . 8
i
List of Figures
3.1 Substitution of entries of the matrix in (a) with 2× 2 matrices. The resulted
matrix has cycles of length 4 in (b), length 8 in (c). . . . . . . . . . . . . . . 12
3.2 The generalized Kronecker product H ′ = H ⊗g P ′, where P ′ = [Is′(p′x,y)]. . . 12
3.3 Connected cycles on the weight matrix. Cycles c1 and c2 are of length 2l1
and 2l2, respectively, and the path connecting c1 and c2 are of length l. (a)
Clockwise traverse, (b) counterclockwise traverse. . . . . . . . . . . . . . . . 14
3.4 The path starting from u2. (a) the path ends on c1, (b) the path does not end
on c1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14
3.5 Index pairs belong to a components . . . . . . . . . . . . . . . . . . . . . . . 19
4.1 Error rates for (3,6) regular code with n = 672. (a) Frame error rate. (b) Bit
error rate. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
4.2 Error rates of irregular codes of length n = 672. (a) Frame error rate. (b) Bit
error rate. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
4.3 Average successful decoding number versus Eb/N0 of irregular codes with
Mackay-2A node distributions with n = 672. . . . . . . . . . . . . . . . . . . 26
4.4 Error rates of irregular codes with maximum-7 variable node distributions
with n = 672. (a) Frame error rate. (b) Bit error rate. . . . . . . . . . . . . 27
4.5 Error rate of regular codes and irregular codes with n = 672. (a) Frame error
rate. (b) Bit error rate. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28
iii
List of Tables
4.1 Local girth distribution for n = 672. . . . . . . . . . . . . . . . . . . . . . . . 23
4.2 Variable node and agent node degree distributions of the Mackay-2A code . . 24
4.3 Local girth distribution for irregular code of length 672. . . . . . . . . . . . . 25
4.4 Local girth distribution for regular codes with length 2640. . . . . . . . . . . 26
4.5 Local girth distribution for irregular codes of length 2640. . . . . . . . . . . . 27
4.6 Local girth distribution for regular codes of length 4368. . . . . . . . . . . . 31
4.7 Local girth for n = 4869. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
4.8 Properties of masked LU(m, q) codes. The first column indicate the code
masked, the second column indicate the initial weight matrix, the third column
shows the code length, the fourth column shows the low weight code words
found during decoding, the fifth column indicates the number of redundancy
in the parity check matrices. . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
v
it is hard to compute the girth of randomly constructed LDPC codes. Comparatively, we
can take advantage of the structure of combinatorial or algebraic constructed LDPC codes
to analyze the code properties. For example, Margulis codes are well-structured, the local
girth of a given Margulis code are all the same. Thus, even though we use a computer to
find the girth, we have only to check local girth of one node on its Tanner graph.
Margulis codes are defined by some properties of the special linear group SL2(Zq), their
girth g is lower bounded by 2 log1+
√
2(q/2) − 1. Thus, girth of this family can be arbitrary
large. Ramanujan graphs are known by their optimal expansion behavior, so it is expected
that an LDPC code constructed from a Ramanujan graph is better than constructed ran-
domly. In 1995, Lazebnik and Ustimenko gave a explicit construction of a family of D(m, q)
graphs with an arbitrary large girth in [15]. The D(m, q) graphs are bipartite, thus, can be
used to define LDPC codes. Kim et al. investigate the code properties of LU(m, q) codes
defined by the graph D(m, q), for m = 2 and 3 [16]. For other values of m and q, their
properties are unknown.
Among the class of structured LDPC codes, quasi-cyclic (QC)codes are popular since they
can be encoded efficiently by shift registers. In general, the parity check matrix defining a QC
LDPC code is a block matrix of circulant matrices. The girth bound depends not only the
circulant matrices, but also the structure of weight matrix (mother matrix) whose entries
indicate the weight of circulant matrices defining the code [20], [22], [23], and [24]. For
example, a QC LDPC code with an all-one weight matrix of size 3× 6 has girth at most 12
[20].
We have study Margulis codes and Ramanujan graphs; and have modified their construc-
tion to gain better girth property. We also apply generalized Kronecker product recursively
to construct QC LDPC codes with arbitrary large girth and investigate the connectivity of
their Tanner graphs. We found that the LU(m, q) codes can be categorized into this con-
struction. However LU(m, q) codes are low rate codes thus are not suitable for most of the
practical applications. We apply masking to them to produce half-rate codes. Performance
of codes constructed are demonstrated.
2
the set of columns of H. Let Rq be the set of rows of H. We set Rq = SL2(Zq) and Cq =
SL2(Zq)× {0, 1}. Let
B = {A2q, AqBqA−1q , Bq}. (2.3)
Then
B−1 = {A−2q , AqB−1q A−1q , B−1q }. (2.4)
We connect every agent node a ∈ Rq to the following six variable nodes,
(aA2q, 0), (aAqBqA
−1
q , 0),
(aBq, 0), (aA
−2
q , 1),
(aAqB
−1
q A
−1
q , 1), (aB
−1
q , 1).
Since there is no nontrivial multiplicative relation between A and B, we infer that there is
no nontrivial multiplicative relation between A2, ABA−1 and B, either. The girth of this
LDPC code also grows at the rate of log q. Note that this LDPC code is a (3, 6)-regular code.
2.2 Introduction to Ramanujan-Margulis Codes
We briefly introduce Ramanujan graphs and their properties reviewed in [37]. Then we
introduce an LDPC construction method from Ramanujan graphs introduced in [17].
Definition 2.2.1 Let A be the adjacency matrix of an undirected graph G, λ(G) be the
absolute value of the A’s eigenvalue having the largest absolute value among all non-trivial
eigenvalues. A Ramanujan graph G is a ρ-regular graph satisfying
λ(G) ≤ 2
√
ρ− 1. (2.5)
Based on Alon-Boppana Theorem, Ramanujan graphs make good expanders.
Let GL2(Zq) be the group of 2× 2 invertible matrices whose entries are in Zq. Consider
the diagonal subset
D =
{[
α 0
0 α
]∣∣∣∣α ∈ Z∗q
}
(2.6)
4
2.3 Modification to Margulis and Ramanujan-Margulis
Codes
We have performed modifications to Margulis codes as follows. By changing the generator
set B we wish to have better system performance. In [4], Margulis uses
B = {A2q, AqBqA−1q , Bq}. (2.9)
where Aq =
[
1 2
0 1
]
and Bq =
[
1 0
2 1
]
as the generator matrices and then constructs a
LDPC code. We name this LDPC code as a Mar-2 code. As an extension, we call the LDPC
code built in the similar way except Aq =
[
1 i
0 1
]
and Bq =
[
1 0
i 1
]
as a Mar-i code.
Note that the constructed LDPC codes are all (3, 6) regular LDPC codes and may have
different girths given a fixed q. Since the belief-propagation decoder performs better when
LDPC codes have larger girth, Mar-i for i ≥ 2 may have better performance than Mar-2.
Inspired by the possible bigger girth in Mar-i codes with different i, we have been able to
construct a Margulis code with even bigger girth by using a different generator set B. The
elements in this generator set are randomly generated and then we compute the girth of the
whole bipartite graph. For a generic bipartite graph, we must compute the local cycle for
every variable node in order to get the girth. But for a Margulis code, instead of computing
the local cycle for every variable node, we only need to compute that for just 1 variable
node. This is because the cycles for all variable node have the same length. Thus we reduce
the complexity for finding girth dramatically. We call those Margulis code with girth j as
Mar-girthj code.
2.4 Irregular Margulis Codes
When the parity-check matrix H is constructed by the Margulis method, the corresponding
LDPC code is regular. We can do some modifications to it and then obtain an irregular
LDPC code. Our first method is to eliminate some 1’s in H to try our best to satisfy the
density required for some variable nodes of specified degree. Note that by doing so, we get
a larger girth for this new irregular LDPC codes than the original regular Margulis codes.
6
2.4.3 Irregular Mar-Random Method
If the high degree of variable nodes is quite large, we can first use the methods in the last two
subsections to construct a graph with low weight variable nodes and then random construct
the other high weight variable nodes, which will result in a graph that we need. For example,
given the variable node distribution λ(x) = 0.25105x + 0.30938x2 + 0.00104x3 + 0.43853x9,
we first construct a (4, 8) regular Margulis code. Note that this Margulis code could be a
Mar-2 code, a Mar-i code or a Mar-girthj code. Then by assuming those degree-10 variable
nodes as degree-4 variable nodes temporarily, we eliminate some 1’s in H according to the
node distribution with Irregular Margulis-B algorithm. At the second stage, we use the
random method to add another 6 edges in those degree-10 variable node having only 4 edges
constructed in the first stage. We name this construction method as Irregular Mar-Random
method.
2.5 Irregular Ramanujan-Margulis Codes
2.5.1 Irregular Raman-Random Method
The construction of codes with this method is very similar to that with irregular Mar-Random
method. We first construct a regular Ramanujan-Margulis code. Then by eliminating some
1’s and using the random method to construct those variable nodes with high degree, we
obtain an irregular Ramanujan-Margulis code.
8
The J × L binary matrix W = [wjl] defined by
wj,l =
{
1, if pj,l 6=∞,
0, if pj,l =∞,
for 0 ≤ j ≤ J − 1 and 0 ≤ l ≤ L − 1, is called the weight matrix or mother matrix of H
since entries of W indicate the weight of a circulant permutation matrix. In this paper, we
restrict our discussions to type I codes.
Given an entry hx,y of H, let qs(x, y) = (⌊xs ⌋, ⌊ys⌋), hence qs(x, y) is the index of the
circulant permutation matrix to which hx,y belongs. A length 2i path in H is a sequence of
index pairs of elements of H,
(x0, y0), (x1, y0), . . . , (xi−1, yi−1), (xi, yi−1), (3.2)
where each (xm, yk) in Eq. (3.2) is such that hxm,yk = 1, and x0 6= x1 6= · · · 6= xi−1,
y0 6= y1 6= · · · 6= yi−1. The path in Eq. (3.2) can be represented by a sequence of index pairs
of circulant permutation submatrices of H
(j0, l0), (j1, l0), . . . , (ji−1, li−1), (ji, li−1), (3.3)
where (jm, lk) = qs(xm, yk), pjm,lk 6= ∞ for m = k, k + 1, and jm 6= jm+1 and lm 6= lm+1 for
k = 0, . . . , i− 1. Also, the following relations must be satisfied:
xi − x0 =
i−1∑
k=0
(pjk,lk − pjk+1,lk) (mod s). (3.4)
A length 2i cycle is a length 2i path such that x0 = xi. Setting x0 = xi in Eq. (3.4), we
have the following theorem which has been proved by Fossorier [20].
Theorem 3.1.1 [Fossorier [20]] A length 2i path
(x0, y0), (x1, y0), . . . , (xi−1, yi−1), (xi, yi−1),
in H is a cycle, i.e., x0 = xi if and only if j0 = ji and
i−1∑
k=0
(
pqs(xk,yk) − pqs(xk+1,yk)
)
=
i−1∑
k=0
(
pjk,lk − pjk+1,lk
)
= 0 mod s. (3.5)

10
11
1
1
(a)
0
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
(b)
0
1
1
0
0
1
1
0
0
1
1
0
1
0
0
1
(c)
Figure 3.1: Substitution of entries of the matrix in (a) with 2 × 2 matrices. The resulted
matrix has cycles of length 4 in (b), length 8 in (c).
Given a shortest cycle of length g in H, since the length g of the associated closed walk
in W must be no less than the girth of W , we have the following lemma.
Lemma 3.2.1 If H = W ⊗g P defines a (J, L, s) QC LDPC code, where W is the J × L
weight matrix ofH, P = [Is(pj,l)]J×L, and gH and gW are the girths ofH andW , respectively,
then gH ≥ gW . 
Is(pj0,l0)
Is(pj1,l0)
Is(pj1,l1)
Is(pj2,l1)
Is(pj2,l2)
Is(pj0,l2)
Is′ (p
′
x0,y0
)
⊗
Is′ (p
′
x1,y0
)⊗ Is′(p′x1,y1)⊗
Is′(p
′
x2,y1
)
⊗
Is′(p
′
x2,y2
)
⊗
Is′ (p
′
x0,y2
)
⊗
Figure 3.2: The generalized Kronecker product H ′ = H ⊗g P ′, where P ′ = [Is′(p′x,y)].
Lemma 3.2.1 guarantees that with generalized Kronecker product, the girth will not be
decreased, meanwhile, the example in Fig. 3.1 shows that this product could make cycles
12
For example, the length 12 cycle in [22] [20] satisfying
j0 = j3, j1 = j4, j2 = j5, l0 = l2 = l4, l1 = l3 = l5
and giving the girth bound of (J, L, s) LDPC codes for J ≥ 2, L ≥ 3 belongs to this class.
Myung et al. [23], O’Sullivan [47], and Kim et al. [48] analyzed cycles of this pattern:
Lemma 3.2.2 [Myung et al. [23]] If there are l overlapped edges between 2l1-cycle and
2l2-cycle in the weight matrix W , then there is a Class I cycle of length 2(2l1 + 2l2 − l) in
the parity-check matrix H.
Lemma 3.2.3 [O’Sullivan [47]] A Class I cycle in the parity-check matrix H corresponds
to a subgraph (of the Tanner graph) of the weight matrix W , in which the degree of each
vertex is at least 2, and at least one vertex has degree 3.
cycle c1
b
v1
path
cycle c2
v2
(a)
cycle c1
b
v1
path
cycle c2
v2
(b)
Figure 3.3: Connected cycles on the weight matrix. Cycles c1 and c2 are of length 2l1 and
2l2, respectively, and the path connecting c1 and c2 are of length l. (a) Clockwise traverse,
(b) counterclockwise traverse.
cycle c1
bu1
e1
u2
(a)
cycle c1
bu1
e1
u2
(b)
Figure 3.4: The path starting from u2. (a) the path ends on c1, (b) the path does not end
on c1.
Based on their works, class I cycles can be characterized by the following proposition:
Proposition 3.2.4 There is a class I cycle in the parity-check matrix H if and only if there
are two cycles c1 of length 2l1 and c2 of length 2l2 in the weight matrix W such that either
one of the following two cases occurs:
14
Lemma 3.2.5 If H = [Is(pj,l)] has girth 2g and H
′ = H⊗g [Is′(p′x,y)], then a length 2g cycle
in H ′ belongs to class II.
Let c be an expanded cycle in H ′ from a length 2g cycle (x0, y0), (x1, y0), . . . , (xg−1, yg−1),
(x0, yg−1) in H. The cycle discriminant D of the expanded cycle c is
D =
g−1∑
k=0
(
p′xk,yk − p′xk+1,yk
)
.
Since (x0, y0), (x1, y0), . . . , (xg, yg−1) are all distinct, D cannot be absolutely identical to
zero. Thus the expanded cycle c belongs to class II. 
3.2.2 The Construction
The main idea of our construction is as follows.
Theorem 3.2.6 Given a girth 2g (J, L, s) QC LDPC code defined by the parity-check ma-
trix H, there exists a QC LDPC code having no (class II) cycles of length 2g, defined by a
parity-check matrix by applying finite steps of generalized Kronecker product to H. 
We give a sketch of the proof here. Assume there are n length 2g class II cycles repre-
sentations in H. Let C1, C2, . . . , Cn be the corresponding sets of cycles. For C1, let
H(1) = [h
(1)
x′,y′ ] = H ⊗g P (1), and C(1)i be the set consisting of all the expanded paths of cycles
in Ci, where P
(1) = [Is′(p
(1)
x,y)] is of the form in Eq. (3.7). Then, there is no length 2g (class
II) cycles in C
(1)
1 , and all the expanded paths in C
(1)
i have the same shift-value sequence as
in Ci, for i = 2, . . . , n. Continuing this process, we end up with a parity-check matrix having
no length 2g (class II) cycles by applying at most n steps of generalized Kronecker product.

It can be seen that we can construct QC LDPC codes with arbitrarily large girth by
applying the above theorem recursively.
16
be the q-ary representations of i and j, respectively, The parity check matrix H(m, q) = [hij]
is defined as:
hij =
{
1, if [i1, i2, . . . , im]Im(j1, j2, . . . , jm),
0, otherwise.
According to the definition, it is clear that [i1, i2, . . . , im]Im(j1, j2, . . . , jm) if and only if
[i1, i2, . . . , im−1]Im−1(j1, j2, . . . , jm−1) and im− jm = r(i, j,m), where r(i, j,m) is the value on
the right hand side of the (m− 1)-th equation in Eq. (3.8), i.e.,
r(i, j,m) =


i1j1, if m = 2,
i2j1, if m = 3,
i1jm−2, if m > 3 and m = 0, 3 (mod 4),
im−2j1, if m > 3 and m = 1, 2 (mod 4).
Since incidence relation of [i1, . . . , im−1] and (j1, . . . , jm−1) defines H(m−1, q), and the linear
relation jm = im − r(i, j,m) defines the q × q circulant permutation whose (im, jm) entry is
one if and only if jm = im − r(i, j,m), we have
H(m, q) = H(m− 1, q)⊗g P,
with P = [Pij] a block matrix of circulant permutation matrices, Pij = Iq(−r(i, j,m)).
Therefore, the LU(m, q) code belongs to the class of codes constructed by generalized Kro-
necker product.
For q = pr, p is a prime, r > 1, if elements of GF(q) are ordered in the following manner:
0, 1, 1 + 1, . . . ,
p−1︷ ︸︸ ︷
1 + 1 + · · ·+ 1, a1, a1 + 1, . . . , a1 +
p−1︷ ︸︸ ︷
1 + 1 + · · ·+ 1,
. . . , apr−p, apr−p + 1, . . . , apr−p +
p−1︷ ︸︸ ︷
1 + 1 + · · ·+ 1;
where a1, . . . , apr−p are suitable elements of GF(q); then, the linear equation im − jm =
r(i, j,m) can be described by block matrices of p×p circulant permutation matrices. In this
cases, H(m, q) = H(m− 1)⊗g P , where P is a block matrix of block matrices consisting of
p× p circulant permutation matrices.
3.3 Other Properties of the Tanner Graphs
First, the upper bound for minimum distance are given.
18
then the number of components of T (H) is at most d′ = gcd(d, s). 
Without loss of generality, we may assume (j0, l0) = (0, 0), and p0,0 = 0. Eqs. (3.9) and
(3.4) imply that there exist a path passing index pairs, as illustrated in Fig. 3.5(a),
{(rd mod s, rd mod s), r = 0, ..., s
d′
} = {(rd′, rd′), r = 0, ..., s
d′
}.
As Fig. 3.5(b) shows, since T (W ) is connected, given arbitrary index of circulant per-
mutation matrix, (j¯, l¯) 6= (0, 0), there exists (x, y), q(x, y) = (j¯, l¯), such that
(0, 0), . . . , (x, y),
is a path on H. Therefore,
(d′, d′), . . . , (js+ (x+ d′ mod s), ls+ (y + d′ mod s))
is also a path. Hence (x, y) and (js+ (x+ d′ mod s), ls+ (y + d′ mod s)) are connected as
(x, y), . . . , (0, 0), . . . , (d′, d′), . . . , (js + (x + d′ mod s), ls + (y + d′ mod s)).
Clearly, all the index pairs connected by repeating the above process belong to the same
component. 
Corollary 3.3.4 Let H = W ⊗g [Is(pj,l)] and assume T (W ) be connected.
1. T (H) is connected if and only if there exist (j0, l0), (j1, l0), . . . , (ji−1, li−1), (ji, li−1),
ji = j0, such that
d =
i−1∑
k=0
(pjk,lk − pjk+1,lk) (mod s),
and gcd(d, s) = 1. Thus we can easily choose p′x,y in Section 3.2 to guarantee that the
Tanner graphs of the constructed codes are connected.
2. Components of T (H) are isomorphic. If T (H) has d′ components and let s′ = s/d′,
then
H =


H1 0 · · · 0
0 H1 · · · 0
... · · · . . . ...
0 0 0 H1

 ,
20
Chapter 4
Simulation Results
In this chapter, we report simulation results to compare the performance of different con-
struction methods. The channel we use to perform simulations is AWGN channel with binary
input ± 1. The decoder we use is belief-propagation decoder.
4.1 Margulis Codes
The parameter q for constructing Margulis codes is a prime number. We use q = 7, 11 and
13 and then compare the simulation results.
Performances are compared with PEG codes [28] and the following two Mackay’s codes
[11]:
1. Mackay-1A.
An r × n parity-check matrix H is created from left to right. First we randomly
create the first column with weight t (e.g., t = 3). Then the other columns are
iteratively constructed as follows. Create a weight t vector randomly for the ith column.
Meanwhile, two conditions should be satisfied:
(a) The overlap between ith column and jth column where j < i is no greater than
1.
(b) The weight per row should be made as uniform as possible.
22
1 1.5 2 2.5 3 3.5
10−6
10−5
10−4
10−3
10−2
10−1
100
Eb/N0(dB)
fra
m
e 
er
ro
r r
at
e(l
og
)
1A
Mar−2
PEG
Mar−girth10
(a)
1 1.5 2 2.5 3 3.5
10−8
10−7
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
bi
t e
rro
r r
at
e(l
og
)
1A
Mar−2
PEG
Mar−girth10
(b)
Figure 4.1: Error rates for (3,6) regular code with n = 672. (a) Frame error rate. (b) Bit
error rate.
agent node degree Mackay-2A
5 0.5
6 0.5
others 0
variable node degree Mackay-2A
2 0.25
3 0.75
others 0
Table 4.2: Variable node and agent node degree distributions of the Mackay-2A code
due to its poor average girth. Note that Mar-2 has codewords with weight 16. It is found
since the occurrence of undetected error during the simulation. As for others, no undetected
error has ever been found.
Irregular codes
1. Mackay-2A node distributions
By Mackay-2A construction method, we have variable node and agent node degree
distributions as in Table 4.2. With the same node degree distributions, we construct
irregular Margulis codes by Mar-2 codes, Mar-girth10 codes with irregular Margulis-A
algorithm and PEG codes. Table 4.3 shows local girth properties for these irregular
codes.
2. Maximum-7 variable node distribution
24
1 1.5 2 2.5 3 3.5 4
2
4
6
8
10
12
14
16
18
20
Eb/N0(dB)
a
ve
ra
ge
 s
uc
ce
ss
fu
l d
ec
od
in
g 
ite
ra
tio
n 
nu
m
be
r
2A
Irr−Mar−2
PEG
Irr−Mar−girth10
Figure 4.3: Average successful decoding number versus Eb/N0 of irregular codes with
Mackay-2A node distributions with n = 672.
local girth Mackay-1A Mar-2 PEG Mar-4 Mar-girth12
6 0.1691 0 0 0 0
8 0.7766 1 0 0 0
10 0.0543 0 1 1 0
12 0 0 0 0 1
average girth 7.7704 8 10 10 12
Table 4.4: Local girth distribution for regular codes with length 2640.
tion and PEG that fits to maximum-7 variable node distribution. The FER and BER for
them are shown in Fig. 4.5.
4.1.2 q=11
In this case, the code length is 2640. The maximum decoding iteration number is set to 256.
Regular code
We compare five different regular LDPC codes. They are Mackay-1A code, Mar-2 code,
PEG code, Mar-4 code and Mar-girth12 code. We list a table for comparing the local girth
distribution for the above codes in Table 4.4. Now we present simulation results for FER
and BER in Figs. 4.6. Although Margulis regular code has larger girths than Mackay-1A,
its performance is not better than that of Mackay-1A as we expect since the length of the
26
1 1.5 2 2.5 3 3.5 4
10−6
10−5
10−4
10−3
10−2
10−1
100
Eb/N0(dB)
fra
m
e 
er
ro
r r
at
e(l
og
)
Mar−girth10
Irr−Mar−girth10(2A)
Irr−Mar−girth10(maximum−7)
PEG(maximum−7)
(a)
1 1.5 2 2.5 3 3.5 4
10−8
10−7
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
bi
t e
rro
r r
at
e(l
og
)
Mar−girth10
Irr−Mar−girth10(2A)
Irr−Mar−girth10(maximum−7)
PEG(maximum−7)
(b)
Figure 4.5: Error rate of regular codes and irregular codes with n = 672. (a) Frame error
rate. (b) Bit error rate.
1 1.5 2
10−6
10−5
10−4
10−3
10−2
10−1
100
Eb/N0(dB)
Fr
am
e 
Er
ro
r R
at
e(l
og
)
1A
Mar−2
PEG
Mar−4
Mar−girth12
(a)
1 1.5 2
10−7
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
Bi
t E
rro
r R
at
e(l
og
)
1A
Mar−2
PEG
Mar−4
Mar−girth12
(b)
Figure 4.6: Error rates of (3,6) regular codes with n = 2640. (a) Frame error rate (b) Bit
error rate.
28
1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2 2.1
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
Bi
t E
rro
r R
at
e(l
og
)
Random
Irr−Mar−4(A algorithm)
Irr−Mar−4(B algorithm)
(a)
0.6 0.8 1 1.2 1.4 1.6 1.8 2
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
Bi
t E
rro
r R
at
e(l
og
)
Random
Irr−Mar−girth12
PEG
PEG−Random
(b)
Figure 4.8: Bit error rate of irregular codes of length n = 2640 with (a) maximum-4 variable
node distribution (b) maximum-11 variable node distribution.
0.6 0.8 1 1.2 1.4 1.6 1.8 2 2.2
10−7
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
Bi
t E
rro
r R
at
e(l
og
)
Mar−girth12
Irr−Mar−girth12(2A)
Irr−Mar−girth12(maximum−9)
Irr−Mar−girth12(maximum−11)
PEG(maximum−11)
Figure 4.9: Bit error rate of regular and irregular codes with n = 2640.
Comparison of regular and irregular codes
We compare Mar-girth12 code, Mar-girth12 that fits to Mackay-2A node distribution code,
Mar-girth12 that fits to maximum-9 and maximum-11 variable node degree distribution
codes and the PEG code that fit to maximum-11 variable node distribution. The simulation
results for their BERs are shown in Fig. 4.9
30
distribution. The simulation result for BERs are shown in Fig. 4.11.
0.6 0.7 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
Bi
t E
rro
r R
at
e(l
og
)
Random
Irr−Mar−girth12
PEG
Figure 4.11: Bit error rate of irregular codes with maximum-15 variable node distribution
with n = 4368.
4.2 Ramanujan-Margulis Code
The two parameters p and q for a Ramanujan-Margulis code should obey the following rule:
p and q are two unequal primes congruent to 1 modulo 4 and satisfy (p
q
) = −1. Since we
want to make this code with a bigger girth, smaller p is preferred. Now we use p = 5 and
q = 13, 17 to perform simulations and then compare the results. The maximum iteration
number is set to 256.
4.2.1 p=5, q=13
Regular codes
We compare Mackay-1A code and Ramanujan-Margulis code for n = 133 − 13 = 2184 and
rate 1/2. During our simulation, some undetected errors happen in decoding Ramanujan-
Margulis code. We find there are some codewords with weight 16. Since its poor minimum
distance property, the performance for this code are not good. The girth for Ramanujan-
Margulis code is 8. We present simulation results for FER and BER in Fig. 4.12.
32
1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9
10−6
10−5
10−4
10−3
10−2
10−1
100
Eb/N0(dB)
Fr
am
e 
Er
ro
r R
at
e(l
og
)
1A
Ram−q17
(a)
1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9
10−7
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
Bi
t E
rro
r R
at
e(l
og
)
1A
Ram−q17
(b)
Figure 4.13: Error rates of (3,6) regular codes with n = 4896. (a) Frame error rate. (b) Bit
error rate.
Irregular codes
We use the irregular Raman-Random method to construct an irregular code which fits to
maximum-15 variable node distribution. We compare it with random codes and PEG codes.
The simulation results for BERs are shown in Fig. 4.14. In this figure, Raman-Random code
is better than PEG code when BER is ≥ 2× 10−6.
0.6 0.7 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5
10−7
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0(dB)
Bi
t E
rro
r R
at
e(l
og
)
Random
Raman−Random
PEG
Figure 4.14: Bit error rate of irregular codes with maximum-15 variable node distribution
with n = 4896.
For regular codes, some Margulis LDPC codes we found have better performance than
randomly constructed LDPC codes when q = 5 and 7. They own larger girths than Mackay-
34
From Inti. W Code length Low weight. Redundancy
LU(4, 5) 3× 5 5 · 53 = 625 24 14
LU(5, 5) 3× 5 5 · 54 = 3125 24 74
LU(4, 7) 3× 6 6 · 73 = 2058 24 20
LU(5, 7) 3× 6 6 · 74 = 14406 24 152
LU(3, 11) 4× 8 8 · 112 = 968 no
LU(4, 11) 4× 8 8 · 113 = 10648 38, 40, 42 no
LU(3, 13) 6× 12 12 · 132 = 2028 no
LU(3, 23) 8× 16 16 · 232 = 8464 no
LU(3, 19) 9× 18 18 · 192 = 6498 no
Table 4.8: Properties of masked LU(m, q) codes. The first column indicate the code masked,
the second column indicate the initial weight matrix, the third column shows the code length,
the fourth column shows the low weight code words found during decoding, the fifth column
indicates the number of redundancy in the parity check matrices.
Performance of regular (3, 5) and (3, 6) codes from masked LU(m, q) codes are given.
Two cases of constructions are demonstrated.
1. The weight matrix is an all one matrix.
2. The weight matrix is not an all one matrix.
Some properties are listed in Table 4.8 and the performance are given in Figure 4.15 and
4.16.
From the simulation, we found Case 1 construction produces redundancy in the parity-
check matrix and low weight code words, thus the short codes perform very well while the
long codes have error floor below bit error rate 10−3. And the undectectd errors dominate
the performance at high SNR.
For codes from the Case 2 construction, except the code of length 10648 has few unde-
tected error due to low weight code words, the other code performance well.
36
0.5 1 1.5 2 2.5 3
10−8
10−7
10−6
10−5
10−4
10−3
10−2
10−1
100
Error Rates 2
BLER 968, LU3,11
BLER 2028, LU3,13
BLER 6498, LU3,19
BLER 8464, LU3,23
BLER 10648, LU4,11
BER 968, LU3,11
BER 2028, LU3,11
BER 6498, LU3,19
BER 8464, LU3,23
BER 10648,LU4,11
Figure 4.16: Performance of codes masked by a non-all-one weight matrix.
38
Acknowledgement
We are grateful to the National Center for High-performance Computing for computer time
and facilities.
40
[15] F. Lazebnik and V. Ustimenko, “Explicit construction of graphs with arbitrary large girth
and of large size,” Discrete Applied Mathematics, vol. 60, pp. 275–284, 1995.
[16] J.-L. Kim, U. N. Peled, I. Perepelitsa, and V. Pless, “Explicit construction of families of
ldpc codes with no 4-cycles,” IEEE Transactions on Information Theory, vol. 50, no. 10, pp.
2378–2388, Oct. 2004.
[17] J. Rosenthal and P. O. Vontobel, “Constructions of ldpc codes using ramanujan graphs and
ideas from margulis,” in Proceedings of the 38th Annual allerton Conference on Communica-
tion, Control, and Computing, 248-257 2000.
[18] A. Lubotzky, R. Phillips, and P. Sarnak, “Ramanujan graphs,” Combinatorica, vol. 9, pp.
261–277, 1988.
[19] D. J. Mackay and M. S. Postol, “Weakness of margulis and ramanujan-margulis low-density
parity-check codes,” Electronic Notes in Theoretical Science, vol. 74, 2003.
[20] M. Fossorier, “Quasi-cyclic low-density parity-check codes from circulant permutation matri-
ces,” IEEE Trans. Inform. Theory, vol. 50, no. 8, pp. 1788– 1793, Aug. 2004.
[21] R. Smarandache and P. O. Vontobel, “On regular quasi-cyclic LDPC codes from binomials,”
in International symposium of Information Theory. IEEE, 2004.
[22] R. M. Tanner, D. Sridhara, A. Sridharan, T. E. Fuja, and D. J. Costello, “LDPC block and
convolutional codes based on circulant matrices,” IEEE Trans. Inform. Theory, vol. 50, no. 12,
pp. 2966–2984, Dec. 2004.
[23] S. Myung, K. Yang, and J. Kim, “Quasi-cyclic LDPC codes for fast encoding,” IEEE Trans.
Inform. Theory, vol. 51, no. 8, pp. 2894–2900, Aug. 2005.
[24] S. Myung and K. Yang, “Extension of quasi-cyclic LDPC codes by lifting,” in proceedings of
ISIT2005. Austria: IEEE, Sept. 2005.
[25] F. Bien, ”Construction of telephone networks by group representations,” Notices of the Amer.
Math. Society, no. 1 pp. 5-22, 1989.
[26] P. Erdo˝s and H. Sachs. ”Regula¨re graphen gegebener taillenweite mit minimaler knotenzahl.”
Wiss. Z. Martin-Luther-Univ. Halle-Wittenberg Math.-Natur. Reihe, pp. 251-257, 1963.
[27] J. Friedman, ”On the second eigenvalue and random walks in random d-regular graphs,”
Combinatorica, vol. 11, pp. 331-362, 1991.
[28] X. Y. Hu, E. Eleftheriou, and D. M. Arnold, ”Regular and irregular progressive edge-growth
tanner graphs,” Submitted to IEEE. Trans. Inform. Theory.
[29] M. Luby, M. Mitzenmacher, A. Shokrollahi, D. Spielman, and V. Stemann, ”Practical loss-
resilient codes,” in Proc. 29th Annu. ACM Symp. Theory of Computing, 1997, pp. 150-159.
[30] M. Luby, M. Mitzenmacher, A. Shokrollahi, and D. Spielman, ”Analysis of low density codes
and improved designs using irregular graphs,” in Proc. 30th Annu. ACM Symp. Theory of
Computing, 1998, pp. 249-258.
[31] M. Luby, M. Mitzenmacher, A. Shokrollahi, D. Spielman, and V. Stemann, ”Practical loss-
resilient codes,” IEEE Trans. Inform. Theory, vol.47, pp. 569-584, Feb. 2001.
42
[49] F. Lazebnik and A. W. V. Ustimenko, “A new series of dense graphs of high girth,” Bulletin
of the American mathematical society, vol. 32, pp. 73–79, 1995.
[50] Z. Fu¨redi, F. Lazebnik, A´. Seress, V. A. Ustimenko, and A. J. Woldar, “Graphs of prescribed
girth and bi-degree,” Journal of Combinatorial Theory, Series B, vol. 64, no. 2, pp. 228–239,
1995.
[51] Z. Li, L. Chen, L. Zeng, and S. Lin, “Efficient encoding of quasi-cyclic low-density parity-check
codes,” IEEE Trans. Commun., vol. 53, no. 1, pp. 71–81, 2006.
44
