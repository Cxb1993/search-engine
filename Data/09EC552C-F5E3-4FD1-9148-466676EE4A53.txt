Merge Sorting (QMS)演算法。除此之外，
為了降低此量子排序演算法的執行時間，
此量子合併排序朝向可以平行運算為原
則。最後，再藉由此一可平行執行的量子
排序演算法，開發出可動態調整封包傳輸
埠之量子交換機，以降低整體量子交換機
的 implement 複雜度與執行時所需的延遲
時間。這將能大大地提升現今量子網路的
使用效能與普及率。 
 
圖一: Quantum circuit for quantum 
teleportation 
 
三、研究方法與結果 
我 們 所 提 出 的 quantum 
communication mechanism 利用了兩個重
要的機制，分別是 quantum relay 和
EPR-pair bridging。將在以下子章節中，分
別針對 quantum relay 和 EPR-pair bridging
的設計原理以及其量子電路分別介紹如
下。 
A. Quantum Relay Scheme 
Quantum relay 可以藉由不斷地重複
量子遙送機制來解決上述的問題。藉著使
用 quantum relay 機制，即使傳送端與接收
端之間不存在任何的 EPR 對，仍可達到量
子無線通訊的目的。儘管如此，由於欲傳
送的目標位元必須經過一個中間的橋接
點，這將使得這個作法將缺乏安全性與隱
私性。而且 quantum relay 機制所需的資料
傳輸時間與目標位元所經過的中間橋接點
的個數成正比。為了要改善上述的這些缺
點，我們開發了另外一套 EPR- pair 
bridging 的機制。  
B. EPR-Pair Bridging 
在 quantum relay 的機制中，每一個中
間點都跟上一個節點與下一個節點都共享
有 EPR 對。藉著此一特性，我們觀察到或
許這些中間節點可以扮演 EPR generator
的角色，負責在傳送端與接收端之間，建
立 EPR 對。這個觀察啟發了我們後來關於
EPR-pair bridging 的想法。 
事實上，用來在傳送端與接收端之間 
建立EPR對的量子電路，可以視為是量子
遙送電路的延伸。這是因為量子遙送可以
用來傳送處於量子糾纏態量子位元，並保
持其糾纏的特性。 
|y〉 
Source 
一旦這些中間節點，在傳送端與接收
端之間建立好 EPR 對之後，傳送端與接收
端就可以利用量子遙送的機制，來傳送量
子位元資訊了。 
 
C. Quantum Routing Mechanism 
Quantum routing mechanism 的作法結
合了上述的 quantum relay機制和EPR-pair 
bridging 的概念，因而具備了兩者的特
點。Quantum routing mechanism 的量子電
路圖則如圖二所示。一開始傳送端與接收
端之間沒有共享任何的 EPR 對。但是，在
傳送端與接收端之間，存在有另一個中間
節點凱蒂，她同時和傳送端與接收端皆共
享有 EPR 對。 
 
 
圖二: Quantum routing mechanism circuits 
 
首先，愛麗絲和凱蒂一起將他們的一
XOR XOR 
EPR
Pair
EPR
Pair
|y〉
Source Time evolution 
H
|y〉
Destination 
H
Intermediate 
X Z
Alice
Candy
Bob
H 
|y〉X Z
Time evolution
EPR 
Destination 
 2
圖五: Quantum Bitonic Merge 
 
Quantum bitonic merge 的概括性結構
如圖五所示。根據圖五，我們可以發現
quantum bitonic merge 可以概略地分成兩
個組成部分 : Reverse 運算以及 Bitonic 
Sorter。Reverse 邏輯運算主要負責將兩個
已排序的量子序列轉變成一個 quantum 
bitonic sequence 數列。而 Bitonic Sorter 則
設計用來排序任何的 quantum bitonic 
sequence。 
 
圖六: Quantum Bitonic-Sorter(n) 
 
Quantum bitonic sorter 被設計成可用來
排序任何 quantum bitonic sequences，其量
子電路簡圖則如圖六所示。由圖六可以發
現 quantum bitonic sorter 是由平行的執行
n/2 個 comparator 閘以及遞迴地執行
quantum bitonic sorter 所構成。 
Quantum bitonic sorter 的基本作法主要
是將原輸入的 bitonic sequence，分割成兩
個小的 bitonic sequences﹔再藉由平行的
遞迴呼叫 quantum bitonic sorter，來達成最
終排序的目的。更詳細地說，圖六的
quantum bitonic sorter 量子電路，一開始是
由平行地執行 n/2 個 comparator 閘所構成
(見圖七(a))。而這 n/2 個 comparator 閘主
要的功能，可以將原輸入的 quantum 
bitonic sorter，分割成兩個量子數列，並且
滿足: 
(1) 這兩個量子數列仍舊為 quantum 
bitonic sequences，且 
(2) 任何在第一個量子數列的數字，一定
小於或等於任何在第二列量子數列
的量子數字。 
圖七: The 1st step of quantum bitonic sorter 
 
在圖七(b)中，我們舉了一個簡單的例
子。假設我現在輸入一串有八個量子數字
的量子數列{|ψ1〉, |ψ3〉, |ψ6〉, |ψ8〉, |ψ9〉, |ψ7〉, 
|ψ5〉, |ψ2〉}。倘若此八個量子數字，定義在
comparison邏輯閘的大小關係滿足 |ψ1〉 ≤ 
|ψ2〉 ≤ |ψ3〉 ≤ |ψ4〉 ≤ |ψ5〉 ≤ |ψ6〉 ≤ |ψ7〉 ≤ 
|ψ8〉。則很明顯的，此輸入的量子數列為
一個quantum bitonic sequence。而當此
quantum bitonic sequence平行通過此四個
comparator閘時，我們將可得到兩組輸出
的量子序列{|ψ1〉, |ψ3〉, |ψ5〉, |ψ2〉} 和 {|ψ9〉, 
|ψ7〉, |ψ6〉, |ψ8〉}。很明顯的，這兩組量子數
列均為quantum bitonic sequences。且每個
在第一組量子數列的量子數皆小於在第二
個量子數列的量子數。因此，藉著重覆同
樣的流程，我們最終可以將原輸入的量子
數列完成排序的動作。換言之，藉著執行
圖七的量子電路，我們可以排序任何的
quantum bitonic sequences. 
此外，兩個已排序的量子數列，可以簡
單地藉由翻轉任一已排序的量子數列的順
序，來轉換成一bitonic sequence。更詳細
來說，假設 {|q1〉, |q2〉, …, |qm〉}和 {|r1〉, 
|r2〉, …, |rn〉}為兩個已排序之量子序列。假
如我們顛倒第二個量子數列的順序之後，
將可得到一組新產生的量子數列  {|q1〉, 
bitonic 
sequence sorted
Sorter(n/2) 
Bitonic-Sorter(n) 
Bitonic 
Sorter(n/2) 
Bitonic 
Bitonic-Merge(n) 
Sorter(n) 
Reverse 
sorted 
Bitonic 
sorted
sorted 
|ψ
bitonic
sequence
(b) 
1〉 
|ψ3〉 
|ψ6〉 
|
bitonic 
bitonic
≦ ψ8〉 
|ψ9〉 
|ψ7〉 
|ψ5〉 
|ψ2〉 
|ψ1〉
|ψ3〉
|ψ5〉
|ψ2〉
|ψ9〉
|ψ7〉
|ψ6〉
|ψ8〉
(a) 
 4
撥的服務。換句話說，每個輸入的量子封
包只被允許有一個目的埠。另一方面，倘
若有兩個或兩個以上的量子封包，在同一
時間有相同之目的埠的話，這將導致所謂
的輸出競爭(output contention)或輸出碰撞
(output collision)。因此，為了避免發生輸
出碰撞的情況，在同一個時間槽中，我們
只考慮每個輸入的量子封包與目的埠之間
有一對一對應的情況。 
圖十一: Quantum switching architecture 
 
圖十一是本量子交換機的系統架構的
概略圖。如同圖十一所示，本量子交換機
包含了兩個主要的區域:交換區(Switching 
Sector)和控制區(Control sector)。交換區主
要是負責將各個輸入的量子封包轉換到其
所對應的目的埠﹔而控制區主要是用來負
責控制交換區的運作，以確保交換區能正
確的將各個量子封包送達其目的埠。事實
上，在交換區內的封包交換是由控制暫存
器(control register)所控制的。更精確的
說，考慮目前有一個量子位元|qi〉，由輸入
埠Pi進入到此量子交換機，而欲轉換到輸
出埠Pj﹔則我們只需將所對應的控制暫存
器|Ci〉設成| j〉，即可正確地控制交換區完成
此一工作。 
如同先前所提到的，量子交換機其實可
以被視為是一種量子排序的演算法。它將
各個輸入的量子位元根據其所對應的控制
暫存器做排序。因此，藉著先前所介紹的
QMS 演算法，將可輕易的架構出量子交換
機的量子電路。 
 
Layer 1 2 3
圖十二: Quantum switching for 4 ports 
 
圖十二舉了一個的例子來說明如何建
構有四個輸入輸出埠的量子交換機。如同
之前所提到的，建構量子交換機的第一個
步驟是要在控制區域中先建立出QMS(4)
的量子電路。之後，對每個comparator閘
均附加一個controlled-swap閘作用在對應
的量子位元上。如此一來，藉著執行圖十
二(b)的量子電路，每個輸入的量子位元都
可被交換至其所對應的目的埠。 
 
四、計畫成果自評 
(1) 本 研 究 針 對 量 子 電 傳 (quantum 
teleportation)提出ㄧ個無線電傳的方
法。在文獻上的電傳方式，必須要求
sender 與 receiver 之間共享 EPR pair
方可電傳。如此在ㄧ個無線環境中，
若 sender 與 receiver 之間並沒有共享
EPR pair 時，便無法通訊。 
(2) 本研究打破傳統的限制，提出quantum 
relay與 quantum routing的新構想，可
以經由中間人的方式來進行無線電
傳。此為本研究創新與突破之處。 
(3) 本研究結合在無線與行動計算之研究
與量子隱形傳輸之技術，開發出一套
理論與技術雛形，可供量子通訊運用
到無線與行動通訊之領域。 
(4) 本研究成果乃是第一個將「無線與行
動計算」與「量子計算」相結合之代表作
Switching 
Control 
Sector 
… …
P1 
P2 
P3 
Pn 
P1 
input 
ports 
output 
ports input qubits output qubits
P2 
P3 
Pn 
|q1〉 
|q2〉 
|q3〉 
|qn〉 
|q2’〉
|q3’〉
|q1’〉
|qn’〉
control registers 
|C1〉 
|C2〉 
|C3〉 
|Cn〉 
|C1’〉
|C2’〉
|C3’〉
|Cn’〉
output registers
  
|C1
|C2
|C3
|C4
|q1〉 
|q2〉 
|q3〉 
|q4〉 
|q1〉
|q2〉
|q3〉
|q4〉
|C1
|C2
|C3
|C4
 QMS(4) (b) (a) I4 ⊗
 6
 8
 
行政院國家科學委員會補助專題研究計畫成果報告 
※※※※※※※※※※※※※※※※※※※※※※※※※※
※                        ※ 
※       量子通訊架構及計算理論之研究(3/3)        ※ 
※                                                 ※ 
※                        ※ 
※※※※※※※※※※※※※※※※※※※※※※※※※※ 
 
計畫類別：;個別型計畫  □整合型計畫 
計畫編號：NSC 95-2218-E-006 -011 
執行期間：96 年 8 月 1 日至 97 年 7 月 31 日 
 
計畫主持人：鄭憲宗   國立成功大學資訊工程系 
計畫參與人員：王竣彥 研究助理 
陶明宏 研究助理 
吳明儒 研究助理 
 
 
 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
 
 
執行單位：國立成功大學 資訊工程學系 
 
 
中 華 民 國  96 年 7 月 30 日 
 
目次 
一、目的 ..................................................... 3 
二、過程 ......................................................5 
三、心得 ......................................................6 
四、建議事項 ..................................................7 
五、附錄 ..................................................... 8 
2 
 e-Learning 
 
今年參加的與會者眾多，我也有機會認識在 Web and Internet Technologies 各
方面的專家。此外 social events 方面則介紹 Flamenco tablao(傳統的西班牙舞
蹈)，讓各國貴賓一賭西班牙熱情與豐富的文化內涵。Poster Sessions 提供給
大家互動參與的機會、實在是令人 enjoy 整個活動的進行。 
 
4 
 三、 心得 
我個人對於本次研習活動收穫良多，不僅與專家有直接的動態交流與學習的
機會，同時也讓與會者接觸與了解目前在 Web 與 Internet 方面最先進的技術與
發展。我個人聆聽來自各地學者專家發表與報告他們的論文，自是收穫良多。我
個人認為要網絡之技術，需與應用面的需求相結合。如此所發展的技術方可為人
所接受。而本人所發表的論文則專注在如何將 web 的技術應用到家庭網路與數
位生活當中，因此頗獲好評，這也是一個值得研究與探討的領域。 
從此次大會的進行，可以發現議程委員與工作人員都非常用心與投入。時間
的安排雖然稍嫌緊湊，在三天內必須進行所有的演講、學術論文報告、與學術交
流活動，以至於 sessions 的開始時間常常延遲，但是整體而言，大會可說是非常
成功。 
INSTICC 的成員以洋人居多，因此在此國際會議場合，見到不少國際人士。
交談以英語為主，進行的非常融洽。我個人也因此認識許多的學者，有助於開拓
視野，增加不少學術交流的機會。個人在參加此會議得以有機會認識各方面的專
家，映證學術與實際的關聯，應可說是我參加這次活動最大的收穫。 
6 
 五、 附錄 
1. 攜回資料名稱及內容 
攜回「Proceedings of the Third International Conference on Web Information 
Systems and Technologies」光碟片 CD 論文集一片，以供未來研讀參考。此外，
帶回幾個國際會議與期刊的 Call for paper 簡章，以供參考。 
2. 發表論文如附件 
 
8 
that was composed from the primitive devices. 
 
Figure 1: The concept of dynamic service composition. 
This paper is organized as follows. Sec. 2 
describes the DSC system. Sec. 3 describes the 
implementation techniques. Sec. 4 presents the 
demonstration of the proposed system. Conclusion 
remarks are drawn in Sec. 5. 
2 SYSTEM ARCHITECTURE 
Fig. 1 illustrates the concept of DSC. There are 
many independent devices, such as Microphone, 
Speaker, Media player, TV, Xbox, Camcorder, etc. 
Through DSC system, these useful services could 
cooperate with each other to create a virtual device 
or a novel application. 
2.1 Data Type Ontology Classification 
We extend the service description and add semantics 
information to define a service interface. The I/O 
variables are classified according to their data type 
and further classified according to semantics. 
UPnP CP retrieves device and service 
information with semantics to provide accessible 
services. If the data type ontology share and publish 
the same underlying ontology of the used terms, then 
CP can extract and aggregate the data type and 
semantic information to do service matching. The 
benefit of using data type ontology is that it is easy 
for developers to design service interfaces and is 
easy for users to understand. After defining the data 
type ontology, we use the data type and semantic 
information to describe the service interface. With 
interface matching method, we could know whether 
the service’s output can be fed into the next service’s 
input. Fig. 2 shows the ontology diagram of the 
variables for communication interface of home 
networked devices. 
2.2 Service Interface Matching 
 
Figure 2: Data type ontology for home-domain devices. 
A service interface specifies methods that can be 
performed on the service. Service’s interfaces are 
public for an external use. A service can hold two 
sorts of interfaces: input and output interfaces. 
Traditionally, UPnP service description only has 
data type and I/O information to describe a service 
interface, but it is not enough to perform DSC. 
With the support of data type ontology, 
semantics of a service can be freely defined, thus 
providing high extensibility. The matching of two 
services is using the information in the service 
interface. 
We use data type and semantic information to 
describe service interfaces. With interface matching 
method, we could know whether the service’s output 
can be fed into the next service’s input. 
2.3 Service Graph Construction 
Service graph (SG) is an intuitive way to represent 
composition concepts. Two types of nodes are 
defined in SG: DataSemanticNode (DSN) and 
ServiceInfoNode (SIN). The links between these 
nodes represents their associations. The SG clearly 
represents the composition information. The benefit 
of using SG for DSC is its understandability for 
users. Also, the SG is easy to maintain and handle 
for generator and designer. 
y DSN: Each DSN represents a pair of data type 
and semantic defined by the data type ontology to 
represents the service’s interface. We denote (Data 
Type, Semantic) as a DSN. 
y SIN: We take down the device and service 
information in the SIN, which has two kinds of 
information, the device name and the service name. 
We denote SIN as (Device name, Service name). 
 
