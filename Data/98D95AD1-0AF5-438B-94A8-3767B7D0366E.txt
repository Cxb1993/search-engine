 2 
行政院國家科學委員會專題研究計畫成果報告 
智慧型心電圖系統之建構及其於臨床環境之應用 
The construction of a smart electrocardiogram system and its application 
in clinical environment 
 
計畫編號：NSC 95-2221-E-216 -041 
執行期限：95 年 8 月 1 日至 96 年 7 月 31 日 
主持人：    曾文慶 中華大學生物資訊學系 
共同主持人：謝瑞建 元智大學資訊管理學系 
共同主持人：田慶誠 中華大學通訊工程學系 
共同主持人： 魏崢 財團法人振興復健醫學中心心臟醫學中
心                             
計畫參與人員：蔣家正 (交通大學 電機與控制工程學系)、鄭涵菁(交通大
學 資訊工程學系)  
 
 
一、中文摘要 
 
近年來本研究室於 12 導程心電圖
資料庫與分析系統之研究，已獲得多
項成果。本計劃以這些成果為基礎，
應用國人自行研發的輕便型心電儀，
與本校通訊工程系、台北振興復健醫
學中心及苗栗為恭醫院合作，發展一
套自動化之智慧型心電圖系統。系統
架構採用模組化設計，以心電圖管理
分析單元為核心，藉由網頁式介面之
閘道(gateway)整合心電儀、資料庫伺
服 器 及 醫 療 資 訊 系 統 (Hospital 
Information System, HIS)等單元，即可
執行 ECG 訊號之擷取、ECG 紀錄之存
取、ECG 資料庫管理及 ECG 訊號分析
等功能，提供臨床應用、健康照護應
用及生醫研究等服務。由於系統以獨
立模組之方式提供電子化心電圖服
務，既不會干擾醫院現行之資訊系
統，也具有易於維護與管理之特性。 
考量上述情形，為了能取得供研
究用的原始心電圖數據及推動開放式
的心電圖檔案格式，本研究設計了一
組網頁式心電圖訊號擷取分析系統。
本系統主要由兩個部分組成：硬體部
分包括個人電腦與數據擷取裝置；軟
體部分則包含網頁式心電訊號擷取介
面，儲存心電圖資料的關聯式資料
庫，管理整個系統的網頁式介面及一
組以 PHP 及 Matlab 開發的心電圖格式
轉換，數據分析與圖形顯示工具程式。 
本研究為利用小波轉換來進行各
種疾病的心電圖特徵點自動化萃取，
其中心電圖可分類為正常、急性心肌
梗塞(Acute Myocardial Infarction)、高
血鉀症(Hyperkalemia)與心跳每分鐘大
於 150 下。藉由不同尺度的小波係數，
套用自行開發的演算法來判別心電圖
的 P波、QRS波與T波。研究結果為:(1) 
R 波的 Sensitivity 帄均為 99% ，
Specificity 為 99.9%；(2) Q 點與 J 點
Sensitivity 帄均為 97%，Specificity 為
99.9%；(3) T 波的 Sensitivity 帄均為
95%，Specificity 為 99.9%；(4) P 波的
Sensitivity 帄均為 92.5%，Specificity
 4 
format, Signal acquisition, Wavelet 
packet analysis , Discrete wavelet 
transform, Hyperkalemia, Acute 
myocardial infarction, P wave, QRS 
complex, T wave, Neural network, 
K-means, Hidden Markov model  
 
二、緣由與目的 
 
近年來由於經濟發展及資訊普及
化，人們對於醫療照護及自我健康管
理之意識有逐年升高之趨勢。為了能
提供品質優良的醫療照護及自我健康
管理，生醫訊號量測設備是最前端的
必需工具之ㄧ。同時生醫訊號之擷
取、儲存、管理與分析也是生醫領域
病情診斷、病情監控及基礎醫學研究
中重要的一環。傳統上許多生醫訊號
量測儀器會因本身各裝置間連接線材
及原先設計軟硬體功能之限制，造成
醫療人員及病人極大的不便，使這些
設備不論就使用地點及應用價值而
言，都受到很大的限制。另一方面，
量測所得之數據往往只能以報表形式
輸出，既不利於電子化病歷之建立，
生醫研究人員也往往錯失許多寶貴的
研究資料。 
本有鑒於此，本計劃應用現今資
訊與通訊之科技，與振興醫院、為恭
醫院之醫師及資訊部門合作，將 ECG
訊號擷取設備予以自動化，並配合資
料庫與管理分析軟體，經由網頁式介
面之閘道(gateway)與醫療院所內的資
訊系統結合後，本智慧型心電圖系統
將可達到下述目標： 
1. 可直接將 ECG 訊號量測結果整合
入電子病歷，利於病患整體病例
之管理。 
2. 以本研究室先前開發之心電圖資
料庫結構為基礎，設計適應醫院
內應用環境之 ECG 訊號資料庫。 
3. 建立能搭配院內醫療資訊系統之
ECG 資料庫伺服器。此系統獨立
於醫療資訊系統之外，在不增加
醫療資訊系統負擔及干擾醫療資
訊系統運作之原則下，提升醫療
資訊系統協助臨床醫師診斷及協
助生醫相關研究之功能。 
4. 經由資料庫之儲存管理系統，醫
師可立即調閱相關之先前量測結
果。智慧型心電圖系統配合醫院
的醫療資訊系統及醫師之需求，
設計整合的介面，醫師使用時，
就如同其原有之作業環境，但增
加了瀏覽、搜尋、比對及分析這
些 ECG 檢測訊號之功能。 
5. 運用生物資訊技術，如類神經網
路 (Neural network)，K-mean，及
小波分析(wavelet analysis)等方
法，開發 ECG 訊號分析程式，探
討 ECG 訊號特徵與心臟疾病徵狀
之關連性。 
6. 存於資料庫之 ECG 數據，經判別
疾病之軟體分析之後，其報告將
有助於醫師對病情之診斷。 
 
三、研究方法 
 
網頁式心電圖訊號擷取分析系統
之架構如圖 1 所示。以心電圖資料庫
與心電訊號分析系統(ECG Database 
and Analysis System, ECGDAS)為核心
之架構，前端為心電訊號擷取裝置，
負責病人心電訊號之量測；資料庫伺
 6 
 
圖 4 三層式架構之心電圖資料庫 
 
 (三) 心電圖格式轉換 
本研究分析數種開放原始碼之心
電圖格式，以 PHP 及 Matlab 開發這些
格式之轉換工具程式，心電圖資料可
以 透 過 所 建 立 的 伺 服 器 轉 換 成
ASCII、XML、SVG、ecgML、PNG 和
DICOM 等格式。 
由心電訊號擷取裝置取得之資訊
(包括文字內容及心電訊號數據)先以
ASCII 碼儲存為文字檔，接著以 HL7
公佈之標準為依據，將這些資訊轉為
FDA_XML 及 ecgML 格式。至於擷取
裝置所得心電圖資訊之呈現，分別以
向量圖形及點陣式圖形兩種方式，產
生近似於臨床所用之標準 12 導程心電
圖報告。向量圖檔採用以 XML 為基礎
之二維圖形描述語言 SVG 撰寫，只要
支援 SVG 解讀功能之瀏覽器即可呈現
心電圖報告之內容，且可在不失真之
情況下，放大局部之內容。點陣式圖
檔則採用 PNG 與 DICOM 兩種格式。
PNG 檔案以 CSIRO 所開發的 SVG 工
具程式，直接將 SVG 檔案轉檔產生。
這些 PNG 圖檔加上原存於文字檔之資
訊，即可以 MatLab 程式碼再轉為
DICOM 檔案。 
 
(四) 心電訊號分析 
典型心電圖波形及特徵參數之定
義如圖 5 所示。要分析心電圖特徵，
就頇將這些特徵參數由心電訊號數據
中萃取出來。由於 R 波在心電圖波形
中通常最高且明顯，因此心電圖特徵
參數之萃取，可由 R 波之定位開始，
再由其左右找出其他之特徵參數。 
 
 
 
圖 5  心電圖波形及特徵參數示意圖 
 
心電圖特徵參數方面，本研究提
出一種新的複合式小波轉換法來定位
心電圖的 P 波、QRS 波與 T 波，其方
法之敘述與說明如本報告文末之附文
所示。至於資料探勘模組，本研究以
JAVA 語言開發類神經網路(Neural 
network)，K-means 與隱藏式馬可夫模
型(Hidden Markov model)等三組程
式，作為未來資料探勘之工具程式。 
 
三、結果與討論 
 
(一) 網頁式心電訊號擷取介面 
心電儀操作介面採網頁式設計，
由使用者觀點出發，畫面內容主要分
為兩大部分：一為操作參數輸入區；
ㄧ為心電訊號顯示區。如圖 6 所示心
電儀操作人員可輸入或設定之參數包
括病歷號碼 (Patient ID)、流水號碼
M y S Q L
D a t a b a s e
F i l e-
D i r e c t o r y
S y s t e m
Apache  
+PHPX M L ,  e c g M L, 
SVG, PNG
Matlab Analysis
DICOM, PACS
HIS, EPR
End-user
Web Browser
Upload
Clinical data  
First-tier
Database 
Server
Second-tier
Web and 
Application 
Server
Third-tier
End-user Client
 8 
 
本心電圖資料庫伺服器能提供有
效的心電圖訊息服務，來幫助臨床醫
生的診斷以及協助研究人員的心電圖
訊號處理。將來，我們的工作可以包
括其他醫學訊號，比如 24 小時心電圖
(Holter ECG)、運動心電圖，病患監視
器和心音圖等。 
 
 (三) 心電圖格式轉換 
圖 9 所示為經過轉換程式處理後
所得之 FDA_XML 文件，其原始碼可
用ㄧ般的網頁瀏覽器顯示。圖 10 所示
則是利用AMPS LLC website所取得之
FDA_XML viewer 所得到之結果，這與
臨床上醫師所習慣的 12 導程心電圖有
很大的不同。 
 
 
 
圖 9 網頁瀏覽器所呈現之 FDA_XML
文件原始碼 
 
 
 
圖10 FDA_XML viewer所得之12導程
心電圖 
 
為了能提供臨床醫師所熟悉的典
型 12 導程心電圖及未來能與醫院資訊
系統(Hospital information system, HIS)
相 容 ， 本 研 究 發 展 工 具 程 式 將
FDA_XML 內容以 SVG 語言描述，其
結果如圖 11 所示。為了進ㄧ步提高系
統於網路上之相容性及應用性，由
SVG 描繪之心電圖，可再轉為圖像相
同之 PNG 及 DICOM 格式。 
 
 
圖 11 SVG 文件在瀏覽器中以 Adobe 
SVG viewer 3.0 plug-in 所得之 12 導程
心電圖 
 
(四) 心電訊號分析 
心電圖特徵參數之萃取，本研究
 10 
Analyzing Medical Parameters for 
Solutions, AMPS LLC., 2005. website: 
http://www.amps-llc.com/ 
 
Baxt WG, Shofer FS, Sites FD, and 
Hollander JE. A neural network aid for 
the early diagnosis of cardiac ischemia 
in patients presenting to the emergency 
department with chest pain. Annals of 
Emergency Medicine. 2002; 
40(6):575-582. 
Chiang CC, Yang YC, Tzeng WC, 
Tseng WD, Hsieh JC, “An SCP 
Compatible 12-Lead Electrocardiogram 
Database for Signal Transmission, 
Storage and Analysis” Computers in 
Cardiology 2004;31:621-624. 
EUROPEAN COMMITTEE FOR 
STANDARDIZATION.  Standard 
Communications Protocol for 
Computer-Assisted Electrocardiography.  
prENV 1064:2000  2000. 
Everitt BS. Cluster Analysis. 4
th
 ed. 
Oxford University Press. 2001. 
Fischer R, and Zywietz C,  
HowToImplement SCP-ECG_Part I.  
http://www.openecg.net/SCP_howto/Ho
w_To_Implement_SCP.pdf  2003. 
Fischer R, and Zywietz C.  
HowToImplement SCP-ECG_Part II.  
http://www.openecg.net/SCP_howto_II/
HowToImplementSCP_PartII.pdf  
2003. 
Li C et al., Detection of ECG 
characteristic points using wavelet 
transforms. IEEE Trans. Biomed. Engng. 
1995;42:21-28. 
Li T., Li Q., Zhu S., and Ogihara M. A 
survey on wavelet applications in data 
mining. SIGKDD Explorations 
4(2):49-68, 2003. 
JC Hsieh, WC Tzeng, YC Yang, SM 
Shieh, “Detecting ECG Characteristic 
Points by Novel Hybrid Wavelet 
Transforms: An Evaluation of a Clinical 
SCP-ECG Database,” Computers in 
Cardiology, 2005:32:751-754 
Olmez T and Dokur Z. Classification of 
heart sounds using an artificial neural 
network. Pattern Recognition Letters. 
2003; 24: 617-629. 
Penny W and Frost D. Neural networks 
in clinical medicine. Med Decis Making. 
1996; 16(4):386-398. 
Porter RS,  Kaplan J,  Zhao N,  
Garavilla LDE,  Eynon CA,  Wenger 
FG, and Dalsey WC.  Prediction of 
hyperkalemia in dogs from 
electrocardiographic parameters using an 
artifificial neural network. Academic 
Emergency Medicine. 2001; 
8(6):599-603. 
Sahambi JS,  Tandon SN, and Bhatt 
RKP,  Using Wavelet Transforms for 
ECG Characterization (An On-Line 
 12 
以小波轉換為基礎之 12 導程心
電圖特徵點萃取 
Wavelet-Based 12 Lead ECG 
Characteristic Waves 
Extraction 
 
吳思謙 1、曾文慶 2 、謝瑞建 3 
1 中華大學資訊工程所 
2 中華大學生物資訊學系 
3 元智大學資訊管理學系 
 
 
摘要 
 
為了發展心臟疾病的電腦自動化分析，12
導程心電圖特徵點萃取是最關鍵的一部份。而
一般除了 HP、PHILIPS 等國外廠商的 12 導程
心電圖儀外，其他市場上的心電圖儀皆不具有
自動診斷分析的功能。有鑒於此，希望藉由心
電圖自動化萃取特徵點的開發，能為國人發展
一套具有自動化病徵分析的心電圖儀。 
    由於臨床的心電圖資料，圖形的變異度非
常的大，因此特徵點的判別變的非常具有挑戰
性。本研究為利用小波轉換來進行各種疾病的
心電圖特徵點自動化萃取，其中心電圖可分類
為正常、急性心肌梗塞 (Acute Myocardial 
Infarction)、高血鉀症(Hyperkalemia)與心跳每
分鐘大於 150 下。藉由不同尺度的小波係數，
套用自行開發的演算法來判別心電圖的 P
波、QRS 波與 T 波。研究結果為:(1) R 波的
Sensitivity 帄均為 99%，Specificity 為 99.9%；
(2) Q 點與 J 點 Sensitivity 帄均為 97%，
Specificity 為 99.9%；(3) T 波的 Sensitivity 帄
均為 95%，Specificity 為 99.9%；(4) P 波的
Sensitivity 帄均為 92.5%，Specificity 為 99.9%。 
 
關鍵字：心電圖、心電圖特徵點、12 導程心
電圖。 
 
Abstract 
In order to develop cardiac disease diagnosis 
by auto-computer analysis, the key part is 
12-lead ECG characteristic points extraction. But 
12-lead ECG instrument is not having diagnosis 
and analysis by auto-computer besides HP、
PHILIPS and so on. Therefore, rely on the 
development of 12-lead ECG characteristic point 
extraction, establish a instrument which has 
cardiac disease diagnosis by auto-computer 
analysis for Taiwan. 
   Because ECG clinical data is much 
variability, the characteristic points extraction is 
very challenge. Our research is ECG 
characteristic points extraction based wavelet 
transform for all kinds of cardiac diseases. The 
cardiac diseases in our research include Acute 
Myocardial Infarction、Hyperkalemia、Normal 
and heart rate more than 150. Depend on 
different scale wavelet coefficients, and 
implement the new algorithm to find the P 
wave、QRS complete and T wave. The result is 
follow:(1)the average Sensitivity of R wave is 
99%, the Specificity is 99.9%; (2) the average 
Sensitivity of Q and J wave is 97%, Specificity is 
99.9%; (3) the average Sensitivity of T wave is 
95%, Specificity is 99.9%; (4) the average 
Sensitivity of P wave is 92.5%, Specificity is 
99.9%. 
 
Keywords: ECG, Characteristic ,12-lead ECG 
Abbreviation: ECG. 
 
 
 
1. 前言 
 
心電圖是用來診斷心臟疾病主要的工具
之一。常見的心臟疾病如急性心肌梗塞(Acute 
Myocardial Infarction)、高血鉀症(Hyperkalemia)
與心律不整等。心電圖可以將這些疾病一一的
表現出來，其中特徵點的位置更是格外重要。
心電圖特徵點主要由 P 波、QRS 複合波、T
 14 
似小波圖形的位置。利用小波轉換的優點，能
夠應用在 ECG 訊號上，找出波形的走向與轉
折點，藉此已達成特徵點萃取。本研究中所用
的小波母函數為 bior5.5[4]，如圖 2-2 所示。 
 
圖 2-2 小波母函數 bior5.5 
 
2.3 開發波形及影像瀏覽器 
2.3.1  R 波偵測 
    在搜尋此 R 波前，先將 0.2 秒內的小波係
數(波峰點)收集貣來，形成一個待偵測的集
合。而又因為 R 波在第三階與第四階小波係
數通常能量特別大，尤其是在第四階的小波係
數;而第三階與第四階小波係數所相乘出來的
值又更加突顯 R 波的位置,所以要找出此集合
最大能量係數，也就是找出集合內小波係數最
大值。在找到最大能量的係數後,其最大係數
相對於原訊號之位置,並在原ECG訊號的此位
置向左 0.04 秒與向右 0.08 秒區間內搜尋最大
正向 peak 與最大負向 peak 的點,其正向、負向
波峰做一標誌(布林值),。假設找到最大正向波
峰與最大負向波峰，且其最大正向波峰在最大
負向波峰的左邊，再加上最大正向波峰的高度
與最大負向波峰的高度比例小於 0.035，則判
定最大負向波峰為 R 波；假設找到最大正向
波峰與最大負向波峰，且其最大正向波峰在最
大負向波峰的右邊，再加上最大正向波峰的高
度與最大負向波峰的高度比例小於 0.5，則判
定最大負向波峰為 R 波；假設只找到最大負
向波峰，則判定此波峰為 R 波；假設經過上
述三個判斷都沒找到 R 波，但是有找到最大
正向波峰，則此波峰為 R 波。若最大正向波
峰與最大負向波峰都沒找到，則進入下一組找
R 波。 
 
圖 2-3 R 波偵測 
 
2.3.2  Q 波、J 波偵測 
     在心電圖 Q 與 J 特徵點搜尋的部分，採
用小波第三階係數來做偵測的依據。首先由 R
特徵點向右 16ms 開始，找出第三個小波三階
轉折位置。由 R 點向右 16ms 開始的原因，是
為了避掉由 R 波產生的波峰。接著找出第三
個小波三階係數的波峰位置，並對此位置做判
斷，如果此位置距離 R 特徵點在 112ms 內，
則此位置即為 J 特徵點；若此位置距離 R 特徵
點在 112ms 之外，則由 R 特徵點向右 16ms
從新開始找出第一個過零點位置，此即為 J
特徵點。在 Q 特徵點的偵測，是由 R 特徵點
向左 16ms 開始，搜尋第一個小波三階係數正
向波峰的位置，此即為 Q 特徵點；若沒找到
正向波峰位置，則由 R 特徵點向左 16ms 開
始，搜尋第一個過零點的位置，此即為 Q 點。 
 
圖 2-4 Q 點與 J 點偵測 
 
2.3.3  T 波偵測 
  首先找出 R-S 區間所產生的小波四階
係數的轉折點，以 R 之後的第一、第二個小
波四階係數之轉折點為準。因為 S 波的轉折在
某些 ECG 的資料中會特別的大，因此小波四
階係數的能量在 S 波的附近也會明顯產生，對
T 波位置的辨認會照成錯誤，所以首先要找出
R 波之後第一、第二個小波四階係數之波峰的
J 點 
Q 點 
 16 
 
ECG Classification Sensitivity Specificity 
AMI 96% 100% 
Hyperkalemia 96% 99% 
Normal 98.9% 100% 
Heart rate more 
then 150 
96.5% 99% 
表 3-2 Q 波實驗偵測結果 
ECG Classification Sensitivity Specificity 
AMI 96.7% 100% 
Hyperkalemia 98% 100% 
Normal 96% 100% 
Heart rate more 
then 150 
98% 100% 
表 3-3 J 點實驗偵測結果 
 
3.3 T 波實驗結果 
    T 波偵測有三個部份，分別為 T on、T 
peak 、 T end 。其誤差範圍在 -0.024ms ～
+0.024ms 之間。而 Sensitivity 為所有 T on(T 
peak、T end)中有被正確偵測出的比例。
Specificity 為所有非 T on(T peak、T end)中沒
有被誤認為 T on(T peak、T end)的比例。其偵
測實驗結果如表 3-4 所示。 
 
ECG Classification Sensitivit
y 
Specificit
y 
AMI T on 92.6% 99% 
T 
peak 
91% 99% 
T end 91.8 99% 
Hyperkalemia T on 96% 99% 
T 
peak 
94% 99% 
T end 95% 99% 
Normal T on 98% 99% 
T 
peak 
97.5% 99% 
T end 96.7% 99% 
Heart rate more than 
150    
T on 97% 99% 
T 
peak 
94% 99% 
T end 93% 99% 
表 3-4 T 波實驗偵測結果 
 
3.4 P 波實驗結果 
    P 波偵測與 T 波偵測相同，分為三個部
份，分別為 P on、P peak、P end。其誤差範圍
在-0.020ms～+0.020ms 之間。而 Sensitivity 為
所有 P on(P peak、P end)中有被正確偵測出的
比例。Specificity 為所有非 P on(P peak、P end)
中沒有被誤認為 P on(P peak、P end)的比例。
其實偵測驗結果如表 3-5 所示。 
 
ECG Classification Sensitivit
y 
Specificit
y 
AMI P on 90.5% 99% 
P 
peak 
90.8% 99% 
P end 89% 99% 
Hyperkalemia P on 89.7% 99% 
P 
peak 
91.6% 99% 
P end 90% 99% 
Normal P on 93.3% 100% 
P 
peak 
94% 100% 
P end 93% 99% 
Heart rate more than 
150    
P on 96% 99% 
P 
peak 
96% 99% 
P end 96% 99% 
表 3-5 P 波實驗偵測結果 
 
3.5 研究結論 
本研究所使用的資料是以臨床的病例，所以心
 18 
 
11.  Coast D.A. , Stern R.M.; Cano G.G.; 
Briller S.A. : An approach to cardiac 
arrhythmia analysis using hidden Markov 
models. Biomedical Engineering, IEEE 
Transactions on Volume 37, Issue 9, Sept. 
1990 Page(s):826 - 836 
 20 
  */ 
 private double sigmoid(double in) 
 { 
  double ret = 
1.0/(1.0+Math.exp(-in)); 
  return ret; 
 } 
  
 /** 
  * Trains the neuron network with 
an example 
  *  
  * @param in the input of the 
example 
  * @param desired the desired 
output of the example 
  * @param maxError the 
maximum square mean error allowed 
  * @param learningRate the 
learning rate of the neuron network 
  * @return the error obtained after 
training the network. -1 if there was no 
  *  convergence. 
  */ 
  
 public double train(double[] in, 
double[] desired, double maxError, 
double learningRate) 
 { 
  while(true) 
  { 
   // runs the neuron 
network with the input 
   int iteration = 0; 
   execute(in); 
   iteration++; 
   double error = 
getError(desired,output); 
    
   // check if the error is 
with allowable range 
   if(error<maxError) 
    return 
(maxError-error); 
    
   // check if the NN has 
been run too many times 
   else if(iteration>maxIter) 
   { 
   
 System.err.println("WON'T 
CONVERGE!!"); 
    return -1; 
   } 
    
   /* stores the values such 
that the partial derivative of error with 
respect to the  
    * weight of edge from 
hidden neuron 'i' to output neuron 'j' can 
be found  
    * by adjOut[j]*hidden[i] 
    */  
   double adjOut[] = new 
double[output.length]; 
    
    
   /* stores the values such 
that the partial derivative of error with 
respect to the  
    * weight of edge from 
input neuron 'i' to hidden neuron 'j' can 
be found  
    * by adjHid[j]*input[i] 
    */  
   double adjHid[] = new 
 22 
    } 
   } 
    
  }  
 } 
   
  
 /** 
  * Calculate the square mean error 
of a set of datas 
  *  
  * @param desired the desired 
result 
  * @param obtained the obtained 
result 
  * @return the square mean error 
obtained 
  */ 
 private double getError(double[] 
desired, double[] obtained) 
 { 
  double ret = 0.0; 
  for(int i = 
0;i<desired.length;i++) 
  { 
   double diff = 
desired[i]-obtained[i]; 
   ret+=(diff*diff); 
  } 
  return ret; 
 } 
  
 /** 
  * Initialize the weights of the 
neuron network to some random 
numbers 
  */ 
 private void initialize() 
 { 
  Random rand = new 
Random(); 
  for(int i = 
0;i<wHidden.length;i++) 
  { 
   for(int j = 
0;j<wHidden[i].length;j++) 
   { 
    wHidden[i][j] = 
rand.nextDouble(); 
   } 
  } 
   
  for(int i = 
0;i<wOutput.length;i++) 
  { 
   for(int j = 
0;j<wOutput[i].length;j++) 
   { 
    wOutput[i][j] = 
rand.nextDouble(); 
   } 
  } 
 } 
  
 /** 
  * runs the neuron network with 
the input datas 
  *  
  * @param in the input data 
  * @return the output obtained 
  */ 
 public double[] execute(double[] 
in) 
 { 
  for(int i = 0;i<in.length;i++) 
  { 
 24 
} 
 26 
  
 /** 
  * Performs the K-mean analysis 
on the current set of data points. 
  * Will randomly pick the starting 
position for the centroids. 
  *  
  * Uses the cluster(int k, int[] start) 
method. 
  *  
  * @param k number of clusters 
desired 
  * @return An array of String 
specifying the coordinates of the  
  * centroids of each cluster. The 
order of the array is random  
  */ 
 public String[] cluster(int k) 
 { 
  int[] index = new int[k]; 
  Random rand = new 
Random(); 
  int i = 0; 
   
  // randomly generate k unique 
indices such that the data point 
associated 
  // with each index is unique. 
  while(i<k) 
  { 
   int temp = 
rand.nextInt(datas.size()); 
    
   // checking whether 
datas.get(temp) is unique 
   boolean canAdd = true; 
   Point next = 
datas.get(temp); 
   for(int j = 0;j<i;j++) 
   { 
    Point toComp = 
datas.get(index[j]); 
   
 if(next.equals(toComp)) 
    { 
     canAdd = false; 
     break; 
    } 
   } 
    
   // if datas.get(temp) is 
unique, update information 
   if(canAdd) 
   { 
    index[i] = temp; 
    i++; 
   } 
  } 
   
   
   
  return cluster(k,index); 
 } 
  
  
  
 /** 
  * Performs the K-mean analysis 
on the current set of data points. 
  * The starting position of the 
centroids will be the data point whose 
  * index is specified in the start 
array. It should not be chosen such that 
  * the starting locations of two 
centroids are equal. 
  *  
 28 
   { 
    // generate the next 
position for this centroid 
    Centroid next = 
centers[i].getNext(); 
     
    // if centroid moves 
a lot, then another iteration is required 
   
 if(next.distance(centers[i])>0.0000
001) 
     shouldContinue 
= true; 
     
    // updates the centers 
array 
    centers[i] = next; 
   } 
  } 
  while(shouldContinue); 
   
  if(!optimal()) 
   return cluster(k); 
   
  // parsing of the output 
  String[] ret = new 
String[centers.length]; 
  for(int i = 
0;i<centers.length;i++) 
  { 
   ret[i] = 
centers[i].toString(); 
  } 
  Arrays.sort(ret); 
   
  return ret; 
 } 
  
 /** 
  * Remove all data points stored. 
  */ 
 public void clearData() 
 { 
  datas.clear(); 
 } 
} 
  
 30 
  observationT = new 
double[states][observations]; 
  initial = new double[states]; 
  symbols = new 
TreeMap<Character,Integer>(); 
   
  // add the symbol set to the 
map 
  for(int i = 
0;i<symbolSet.length();i++) 
  { 
  
 symbols.put(symbolSet.charAt(i),i); 
  } 
   
   
  Random rand = new 
Random(); 
   
  // assigns random values to the 
state transition matrix 
  for(int i = 
0;i<stateT.length;i++) 
  { 
   double sum = 0.0; 
   for(int j = 
0;j<stateT[i].length;j++) 
   { 
    double temp = 
Math.min(0.999,rand.nextDouble()+0.00
1); 
    stateT[i][j] = temp; 
    sum+=temp; 
   } 
   // normalize the random 
values 
   for(int j = 
0;j<stateT[i].length;j++) 
   { 
    stateT[i][j]/=sum; 
   } 
  } 
   
  // assigns random values to the 
observation symbols probability 
  // distribution matrix 
  for(int i = 
0;i<observationT.length;i++) 
  { 
   double sum = 0.0; 
   for(int j = 
0;j<observationT[i].length;j++) 
   { 
    double temp = 
Math.min(0.999, 
rand.nextDouble()+0.001); 
    observationT[i][j] = 
temp; 
    sum+=temp; 
   } 
   // normalize the random 
values 
   for(int j = 
0;j<observationT[i].length;j++) 
   { 
    stateT[i][j]/=sum; 
   } 
  } 
   
  // assigns random values to the 
initial state distribution array 
  double sum = 0.0; 
  for(int i = 
0;i<initial.length;i++) 
  { 
   double temp = 
 32 
    } 
    alpha[i][j]*=sum; 
   } 
  } 
   
  // getting final result 
  for(int i = 
0;i<stateT.length;i++) 
  { 
   ret+=alpha[T-1][i]; 
  } 
   
   
  return ret; 
 } 
  
  
 /** 
  * Finds the hidden state sequence 
of the HMM model for 
  * the observation string passed in. 
  *  
  * @param observation the 
observation symbol sequence observed 
  * @return the optimal state 
sequence with maximum likelihood 
  */ 
 public int[] 
findHiddenSequence(String observation) 
 { 
  int[] obs = parse(observation); 
  int[] ret = new int[obs.length]; 
  int T  = obs.length; 
  int states = stateT.length; 
   
  double[][] delta = new 
double[T][states]; 
  int[][] psi  = new 
int[T][states]; 
   
  // initialization 
  for(int i = 0;i<states;i++) 
  { 
   delta[0][i] = 
initial[i]*observationT[i][obs[0]]; 
   psi[0][i] = 0; 
  } 
   
  //dp to get the delta and psi 
array 
  for(int i = 1;i<T;i++) 
  { 
   for(int j = 0;j<states;j++) 
   { 
    double max = 
delta[i-1][0]*stateT[0][j]; 
    int maxIndex = 0; 
    for(int k = 
1;k<states;k++) 
    { 
     double temp = 
delta[i-1][k]*stateT[k][j]; 
     if(temp>max) 
     { 
      max = 
temp; 
      maxIndex 
= k; 
     } 
    } 
    delta[i][j] = 
max*observationT[j][obs[i]]; 
    psi[i][j] = maxIndex; 
   } 
  } 
   
 34 
  double[][] alpha = new 
double[T][states]; 
  double[][] beta = new 
double[T][states]; 
  double[][] gamma = new 
double[T][states]; 
   
  while(true) 
  { 
   // initialization 
   for(int i = 0;i<states;i++) 
   { 
    alpha[0][i] = 
initial[i]*observationT[i][obs[0]]; 
    beta[T-1][i] = 1; 
   } 
    
   // dp to get the alpha and 
beta array 
   for(int i = 1;i<T;i++) 
   { 
    for(int j = 
0;j<states;j++) 
    { 
     alpha[i][j] = 
observationT[j][obs[i+1]]; 
     double sum = 
0.0; 
     for(int k = 
0;k<states;k++) 
     { 
     
 beta[T-i-1][j] 
+=(stateT[j][k]*observationT[k][obs[T-i
]]*beta[T-i][k]); 
     
 sum+=(alpha[i-1][k]*stateT[k][j]); 
     } 
    
 alpha[i][j]*=sum; 
    } 
   } 
    
   // the probabilities 
obtained in the current HMM 
   double curr = 0.0; 
   for(int i = 0;i<states;i++) 
   { 
    curr+=alpha[T-1][i]; 
   } 
    
   // if error small enough, 
the break out of loop and return the error 
   double temp = 
Math.abs(curr-desiredOut); 
   if(temp<maxError) 
    return temp; 
    
   // Reestimate the HMM 
    
   // generating the eta and 
gamma matrices 
   for(int i = 0;i<T;i++) 
   { 
    for(int j = 
0;j<states;j++) 
    { 
     gamma[i][j] = 
alpha[i][j]*beta[i][j]/curr; 
     for(int k = 
0;k<states;k++) 
     { 
      eta[i][j][k] 
= 
alpha[i][j]*stateT[j][k]*observationT[k]
[obs[i+1]]*beta[i+1][k]/curr; 
