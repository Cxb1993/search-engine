 2
弧線以測試集群的獨立性，直到無法改善目標值為
止。Vohra et al. (1990)以極小化機器間的移動次數為
目標，提出以最小割值(minimum cut)定理為基礎的
網路切割演算程序，他們先將機器和工件的關係以
網路圖加以描述，再將網路圖轉換為 Gomory and Hu 
(1961)的切割樹(cut tree)網路圖，最後根據割值由小
至大分割切割樹網路圖，分割出的每一個子圖形即
為一機器群組。Wu and Salvendy (1993)以極小化群
間移動次數為目標，考慮工件途程順序並發展具遞
移性質的網路切割程序，演算程序利用最小割值定
理連續切割網路圖，直到子圖形中的節點（機器）
數不違背單元機器數的限制為止。Wu (1998)考慮同
一機器型式具有多部相同平行機的環境，並延伸Wu 
and Salvendy 的方法同時安置平行機於不同機器群
組上。Kandiller (1998)則以 cut tree建構機器機間的
分枝樹(spanning tree)，並發展切割演算程序以集群
機器群。Lee and Chiang (2002)發展展開樹的定位定
理，並發展切割程序同時決定機器分群及其相對佈
置。Boulif and Atif (2006)在極小化群間移動次數目
標下，利用基因演算法搜尋機器網路圖中的機器群
組合。 
佈置規劃的問題定義及求解方法，已有許多的
文獻討論之（Kusiak and Heragu, 1987，Heragu, 
1992)，Heragu and Kusiak (1988)進一步指出，機器
（機器群）佈置型式的選取，主要決定於系統中所
使用的物料搬運系統種類。由於線性的佈置型式可
以適用於各種搬運設備的運作，因此成為實務界最
廣為使用的佈置型式。極小化移動次數的單元群組
並未考慮機器集群與佈置型式的關係，移動距離因
素並未在群組結果中顯現出來，因此極小化工件移
動次數並不代表移動成本也最小化。單元製造設計
應確保預期結果能與實際操作績效相近似，因此在
單元設計中考慮佈置型式因素，可以在單元集群中
兼顧佈置型式的特性，達到整合性的極小化移動成
本。Dahel (1995)認為從事單元製造系統設計時，應
該將物料搬運及佈置型式納為設計因子，才能正確
地估計單元群組間的移動成本。Vakharia and 
Wemmerlöv (1990) 以極大化機器利用率和提高機器
群獨立性為目標，提出經驗法則的啟發式程序求解
單元集群和單元內的機器佈置，單元內的機器佈置
型態假設為單向直線式。Irani et al. (1993)利用數學
規劃模式和圖形理論求解單元集群、單元群組內佈
置和單元群組間佈置，為了減少機器的重置數量和
提高機器利用率，將共用的機器獨立形成一個虛擬
機器群(virtual cell)，並將虛擬機器群安置於其他機
器群的鄰近位置，虛擬機器群內的機器則採用功能
式佈置。Liao (1994)在每一機器群內皆為直線型式佈
置的前提下，第一階段決定工件的途程計畫，第二
階段利用 ART1 類神經網路進行機器-工件的集群，
第三階段利用 STORM 進行每一機器群的直線佈
置。Arvindh and Irani (1994)強調單元集群、單元間
佈置和單元內佈置會相互影響單元集群結果，此研
究假設機器群間為直線式佈置，機器群內為 U 型佈
置，總移動成本為直角距離和流量乘積的總和。
Heragu and Kakuturi (1997)提出一個三階段的演算程
序進行單元設計與佈置設計，第一階段進行機器-工
件的集群作業，第二階段針對機器群內的機器進行
佈置，最後階段再決定機器群間的相對位置。Chiang 
and Lee (2004)為同時求解機器群組及其佈置，以 GA
搜尋可行解並利用動態規劃求解適合度函數值，因
而使 GA具有最佳化性質。將佈置型式納入單元系統
設計中，會使得系統設計變得更為複雜，所以這些
考慮佈置因素的文獻，都採用階段性的設計程序，
先進行單元集群設計再進行佈置設計。 
單元製造的文獻大都致力於使工件-機器矩陣的
集群更具結構化，因此以提高單元群組間的獨立性
(極小化工件在機器群間的移動次數)為設計目標，例
如 Tabucanon and Ojha (1987)， Vohra et al. (1990)，
Ribeiro and Pradin(1993)。然而隨多重途程、工件生
產途程、工件數量、平行機器及佈置等因素的導入，
單元設計問題更為複雜化，單元設計的目標也跟著
多元（準則）化，例如 Vakharia and Wemmerlöv (1990) 
以極大化機器利用率和提高機器群獨立性為目標。
Gupta et al. (1996)同時考慮極小化機器群間及群內
移動次數，Hsu and Su (1998)以極小化機器投資、移
動成本及極小化群內、群間機器負荷為目標。Kim et 
al.(2004)考慮多途程因素，而以極小化移動次數與
maxmin機器的負荷不平衡。Solimanpur(2004)則以多
目標基因演算法解，平行求解極大化工件相似度，
極小化加工成本、加工時間及投資成本四個目標的
最適解。Yasuda(2005)則考慮機器產能限制及生產數
量，同時極小化機器負荷與機器間移動次數。文獻
大多追求多目標的折衷解(compromise solution)，其
結果會受目標權數或單位成本的影響，再者文獻亦
未考慮佈置因素，成本目標的估計並非依據機器相
對位置（距離），所以無法反應真實際移動成本。 
本研究同時考慮單元設計與單元佈置的整合性
設計，並導入操作因素，以獲得較接近實際運作成
本的單元集群及其佈置。相對於文獻中的單元製造
設計，本研究具有下列獨特性(1)同步求解單元集群
與單元佈置的整合性設計，不同於文獻中的階段性
求解方式，無法掌握前、後設計階段的關連性。本
研究以移動成本為目標設計，所得結果較符合實際
的績效值。(2)本研究利用 GA 搜尋網路圖中可能的
機器群組合，再據以轉換為展開樹，以獲得直線佈
置上的相對位置，由於演算設計具最佳化特質，因
此可以避免因使用機率性演算所造成的隨機漫步現
象。(3)本研究加入產能限制及平行機台負荷平衡等
因素，因此單元設計結果兼顧現場控制需求，可使
設計績效趨近於實際運作績效。 
 
2. 問題定義 
機器（工件）集群雖然是建構單元製造系統的
首要工作，但是集群過程若沒有與佈置型式配合，
則集群結果亦未能與物料搬運系統相搭配。Heragu 
and Kusiak (1988)指出機器(群)佈置型式的選取，主
要決定於系統中所使用的物料搬運系統種類，因此
有必要在單元設計中同時納入佈置及搬運系統的特
性。直線佈置是實務界最常用的佈置型式，該佈置
適合 AGV、輸送帶採單向或雙向移動，因此本研究
假設所有機器單元安置於直線佈置上，物料搬運設
備選擇最短路徑且雙向運行於搬運路徑上，假設輸
 4
化設計的架構導入 GA演算程序內，加強機率性演算
程序搜尋整體最佳解的能力。 
 Generate an initial population of solution and 
estimate the evaluation function of each individual 
by the dynamic programming approach 
Evaluate the fitness of each solution with respect 
to the evaluation function 
Reproduce the next generation of population by 
selecting parent structure in proportion to their 
fitness 
Generate new solution (children) by applying the 
genetic operators, i.e., crossover and mutation 
Evaluate the evaluation function of each child 
solution by the graph partitioning approach 
Construct the new generation of population 
(solution) according to the replacement strategy 
Are termination criteria met? 
Stop 
No 
Yes 
 
圖一：GA結合圖形分割的最佳化求解程序 
 
3.1 可行解編碼與適合度函數 
可行解以二元編碼序列表示機器集群的結果，
序列上的數值對應G網路圖中任一弧線A={ag | g=1, 
2, …, N(G))，若 ag=1表示該弧線 ag為群組內的流量
關係，連結 ag的兩個節點集群於同一機器群組中，
反之若 ag=0則連結 ag的兩個節點不在同一機器群組
內。 
 
圖二：7部機器的 G(N, A) 
 
a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12
1 1 0 1 0 0 0 1 0 0 1 0
圖三：二元編碼序列 
 
圖二為七部機器的流量網路圖，圖三為二元編
碼的可行解，其中 a11=1表示節點 5, 7同在一個機器
群內，a1= a2= a8=1表示節點 1, 3, 4同在一個機器群
內。本研究的可行解表示方式有兩個特徵，(1)二元
編碼是電腦最基本的運算元，有助於增進運算效
率，(2)二元編碼序列易於瞭解機器分群狀態，進而
使用割值定理轉換機器群組的展開樹。二元編碼序
列顯示機器集群結果，每一個二元編碼序列還需要
藉由圖形分割程序，決定機器群的相對位置及移動
成本，分割程序於後續章節討論之。 
適合度函數作為產生下一代可行解的篩選準
則，透過可行解的移動成本重新制訂其對應的適合
度函數值，越高的適合度函數值表示越具有優質特
性，因此越是需要於演化過程中保留該可行解的特
性。由於本研究的目標值是極小化總移動成本，因
此需重新正規劃可行解的適合度函數值，使越小的
移動成本具有較高的適合度。令 TC(S)表示可行解 S
的移動成本，MINTC 表示所有可行解（母體）中最
小化的移動成本，則可行解 p 的適合度函數值為
TC′(S)=MINTC/TC(S)； TC′(S) 侷限於 [0, 1]。 
3.2運算元設計 
複製運算元藉由可行解的適合度函數值，進行
下一代可行解的複製程序。複製運算首先計算每一
可行解的期望值 e(p)=(TC′(S)/ ∑PS STC1 )(' )×PS ，
其中 PS表示母體中的可行解個數，再依序 e(p)值由
大至小，取 e(p)的整數值部分，為下一代可行解複製
個數的依據，取 e(p)的分數值部分，作為是否再追加
複製可行解的接受機率。複製程序持續至新一代的
可行解個數達到 PS為止。  
交配運算元用以交換兩個序列中的部分機器，
用以演化下一代機器序列，因此子代中的編碼序列
保有前一代可行解的優良特質。交配運算從序列中
隨機產生兩個不同位置點，兩位置點分別將 S1, S2區
分成前、中、後三段子序列，並隨機決定所要置換
的子序列段。S 1o(S 2o)的產生則是交換 S 1(S 2)中與 S 2 
(S 1)子序列段的二元編碼。突變方式是針對符合突變
條件的序列（可行解），置換兩隨機位置（r1, r2）上
的二元編碼。 
3.3置換策略與終止法則 
置換策略用以引進具優質特性的可行解，如果
子系可行解優於現行父系可行解，則將子系可行解
引入下一代母體中，否則有條件地接受子系可行
解，機受機率(AP)為 AP= exp{-(TC(Sc) -TC(Sp))}，其
中 TC (Sp) 表示現行父系可行解的移動成本，TC(Sc) 
表示子系可行解的移動成本。有條件地接受較差的
可行解，可避免遺傳演算過程太早陷入局部最佳求
解空間內。 
GA 持續使用複製、交配和突變運算子產生下
一代可行解，直到符合收斂條件為止，收斂母體中，
最佳適合度函數值所對應的組合即為收斂的最佳可
行解。本研究定義三種收斂條件，第一種為演化代
數，如果 GA程序連續演化至設定的最高代數限制，
則停止演算程序，；第二種為二元編碼序列的最好、
最壞的適合度函數值相同，此時交配運算子已無法
進一步演化新的下一代，則演算程序終止；第三種
為產生完全獨立的機器群組合，其對應可行解的移
動成本為 0（即 TC(S)=0），無須再進行任何改善，則
終止演算程序。 
 
4. 結果與自評 
單元集群是設計單元製造系統的首要步驟，一
般單元製造的研究以提高分群的獨立為目標，忽略
了系統操作時所面對的限制，本研究將操作因素納
入模式中一併進行整合設計。本研究發展以 GA-圖
