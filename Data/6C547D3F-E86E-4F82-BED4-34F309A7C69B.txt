中文摘要 
在波長分割多工(WDM)為基礎的光纖網路(optical networks)中，網路存活路
線問題是找出一個能使得邏輯拓樸(logical topology)具有路徑保護能力的高適存
(survivable)解決方案，以便用來對抗單一實體鏈結發生錯誤時所造成的傷害。之
前已存在以切集(Cut-Set)為基礎的高適存策略，但此方法除了有很大的時間複雜
度外，可能會產生某一鏈結有極大的負載(load)，如此每一實體鏈結將需更多的
波長而造成網路成本相對增加。本計畫提出以無交集迴圈為基礎(Disjoint-cycle)
和使用耳朵分解(Ear-decomposition)為基礎兩個新的策略，來設計具有保護能力
的邏輯拓樸。首先我們將這兩個策略以整數線性規劃的表示，然後用 CPLEX找
出適合的網路存活路線；當邏輯節點數很大時，兩個高適存策略所花的時間複雜
度還是遠比以切集為基礎的策略還要小，若採用耳朵分解為基礎的策略找到網路
存活路線的成功機率仍舊高達 98%~100%。此外，我們也考慮到每一實體鏈結的
平衡負載(load balance)來降低光纖網路架構成本。 
 
關鍵字詞：網路存活路線、波長分割多工、平衡負載。 
英文摘要 
In WDM-based optical networks, the survivable routing problem is to design a 
survivable logical topology to withstand any link failure from a given physical 
topology and to find a survivable and efficient routing algorithm on the built logical 
topology. The main drawbacks on the current Cut-Set based method not only require 
the exponential time to find the possible survivable routing path, but also may create 
large congestions on some physical links due to unbalanced routing traffic. In this 
project, we consider two survivable routing approaches, Disjoint-Cycle based and 
Ear-Decomposition based. We formulate them by Integer Linear Programming(ILP) 
models ,and solve them by CPLEX. The time complexity of our ILP models is smaller 
than that cut-based method when the number of logical topology's nodes is large. The 
successful probability of survivable routing by Ear-Decomposition based is still 98% 
~ 100%. We also investigate the load balance of each physical link on each of these 
two approaches to decrease the established cost of the WDM network. 
 
Index Terms: Survivable Routing,Wavelength-Division Multiplexing, Load Balance. 
∑
sd∈R
f sdij +
∑
sd∈R
f sdji ≤ 1, for ∀(i, j) ∈ EP
(c) condition constraints:
fij =
∑
sd∈EL
(f sdij + f
sd
ji ), for ∀(i, j) ∈ EP
fmax ≥ fij, for ∀(i, j) ∈ EP
We also adopt the Ear-Decomposition based Survivable Routing approach(the EDSR
approach) to solve the survivable RWA problem. The simple description of the EDSR method
includes two stages: divide the logical topology into ears P = {P0, P1, . . . , Pk} [3] and ﬁnd
protected routings of ears. If the routing paths for all lightpaths of each ear in the collection
P have been realized, then our approach successfully provides a survivable routing for this
logical topology. The diﬀerence between ILP formulations of EDSR survivable and ILP
formulations of DCSR survivable is that : Survivability constraint :
∑
<s,d>∈Pt(f
sd
ij + f
sd
ji ) ≤
1, ∀(i, j) ∈ EP ;Pt ∈ P.
2 Simulation
In our simulation, we use JAVA to implement three principles of partitioning the logical
topology, EDSR, DCSR and CSSR, and another two relaxed routing algorithms, SSP
and SLW; on the other hand, we ﬁnd solution of the ILP formulation by using the CPLEX
software package. We adopt the National Science Foundation Network (NSFNET) for the
physical topology. We create some regular logical topologies which have the diﬀerent number
of the nodes, changed from 6 to 14, and have degree-3,4, and 5. We also consider a general
logical topologies with random degree from 3 to 5.
We just show the result by the ILP model of three approaches, while Figure 1 shows the
case of the general topologies with random degrees from 3 to 5. As Figure 1, the DCSR
approach is not suitable for using on general physical topology. In contrast, the EDSR
approach ﬁnds a survivable routing for almost 100% of the given logical topologies. The
performance of the EDSR method’s ILP model is almost equal to the CSSR approach’s.
 
 
自我評估 
For this one-year research, we have investigated into following subjects: 
1. We have proved that two survivable routing methods, the Disjoint-Cycle 
based Survivable Routing approach (DCSR) and the Ear-Decomposition 
based Survivable Routing approach (EDSR) are correct. 
2. We have formulated the DCSR approach and the EDSR approach by integer 
linear programming models. 
3. Furthermore, we solve ILP models by CPLEX in Section3. The EDSR 
method still obtains a very high survivable successful rate that is almost 
100% as the degree of logical topology is over 4.  
4. We use the program language of JAVA to implement two relaxed routing 
algorithms, Shortest path routing and Least weight routing, for DCSR and 
EDSR approaches. 
5. Of course, we also compare the load balance of each link for our proposed 
approaches by the simulation. 
 
表 Y04 
二、 與會心得 
本人在此次會議中，發表一篇有關 Single-Hop  All-to-ALL Broadcast in Optical Star 
Networks with Breakdown or Power-Off Transceivers的研究論文。 
此次本人很榮幸的獲得行政院國家科學委員會的補助 (計畫編號
NSC95-2221-E-194-042)，來參加由本次由星加坡大學及 IFIP 下無線及光謙通訊相關技術
小組所舉行的國際無線及光籤通訊網路議。會中除了學習有關上列之行動通訊技術的新
方向與在光籤網路傳輸新研究成果，更幫助個人在光籤與無線行動網路之研究的提
昇，更期望自己能藉由此次的學習可在下年度的行政院國家科學委員會的計畫中提出
一個更新的研究計畫。最後作者在此深深的感謝行政院國家科學委員會對此次行程的
補助。 
 
三、 考察參觀活動(無是項活動者省略) 
 
四、 建議 
 
五、 攜回資料名稱及內容 
研討會議程與論文光碟一片。 
六、 其他 
發表之論文與報告投影片。 
ACL 2
Outline
 Introduction
 Problem definition
 Lower bounds
 Single-hop scheduling algorithms
 Conclusion
ACL 4
WDM optical  star networks
Star coupler
1 2
5 3
4
w1 w2
w3
w4
w5
w3 TX
RX
TX
RX
TX
RX
TX
RX
TX
RX
4
•Packet transmissions
•1→3
•1→4
Tuning latency δ
ACL 6
Problem Definition
Reconstructing
Star couple
6 8
9
7
2
4
5
10
0
1
3
11
G0
G1
G2
Star couple
6
7
2
4
5
0
1
3
G0
G1
G2
(a) the original network (b) the damaged network
ACL 8
Problem Definition
 WDM optical networks
N nodes and w wavelengths
B nodes breakdown
 Remain 
N-B nodes 
w wavelengths
 Minimize the schedule length
ACL 10
Lower bound
 All-to-all broadcast problem(not to 
themselves)
 }1),1(||max{max −−+−− BNwBNGi δ
ACL 12
Scheduling Algorithm(to themselves)
0
1
2
3
4
5
6
7
transmitters
0
1
3
7
2
4
5
6
receivers
Ψ
 
0
Ψ
 
1
Ψ
 
2
tuning tuning
ACL 14
0 0 1 3 7 2 4 5  6
1 0 1 3 7 2 4 5   6  
2 0 1 3 7 2 4 5 6
3 0 1 3 7 2 4 5 6
4  0 1 3 7 2 4 5
5  0 1 3 7 2 4 5
6   0 1 3 7
7    0 1 3 7
Correctness
 Two adjacent nodes do not use the  same 
transmitted wavelength
 | Ψ 0 |≥ | Ψ 1 |≥ | Ψ 2 |≥……
ACL 16
0 0 1 3 7 2 4 5  6
1 0 1 3 7 2 4 5   6  
2 0 1 3 7 2 4 5 6
3 0 1 3 7 2 4 5 6
4 6  0 1 3 7 2 4 5
5 6  0 1 3 7 2 4 5
6 2 4 5   0 1 3 7
7 2 4 5    6 0 1 3 7
Optimal Schedule
23853 =+×=−+ BNwδ
3284)(|| 0 =×=−×Ψ BN
}),(||max{max BNwBNiG −+− δ
N-B=8, w=3,δ=5
ACL 18
Scheduling Algorithm(not to themselves )
•Not an optimal schedule
•Scheduling Algorithm (to themselves)
0 1 3 7 2 4 5 6
1 0 3 7 2 4 5 6
2 0 1 3 7 4 5 6
3 0 1 7 2 4 5 6
4 0 1 3 7 2 5 6
5 0 1 3 7 2 4 6
6 0 1 3 7 2 4 5
7 0 1 3 2 4 5 6
ACL 20
Thanks
limitation when the number of wavelengths w is significantly
less than the number of transceivers N , and assumed that each
wavelength is exactly shared by N/w receivers for a uniform
loading of wavelengths. They established lower bounds on
the minimum scheduling length to exchange packets between
every node pair in a network with tunable transmitters and
fixed-tuned receivers. They showed that the lower bound for
the minimum scheduling length of all-to-all broadcast is at
least max{δ+ N2
w
, wδ+ N
2
w2
+N − N
w
}, and the upper bound
obtained in [6] is in fact a lower bound to the optimum sched-
ule length, i.e., the all-to-all transmission schedule presented
in [6] is an optimal schedule for the case of uniform loading of
wavelengths. In [8], they also consider the case when N is not
divisible by w. The wavelengths are loaded with fixed-tuned
receivers as uniformly as possible. They proposed optimal
scheduling algorithms for three different cases depending on
the range of tuning latency δ. Except for a very narrow range,
their algorithms perform within a factor 13/12 of the lower
bound.
If each node transmits packets to all nodes excepting itself,
the number of packets to be sent for the all-to-all broad-
cast is N(N − 1). In [9], Lee, Oh and Choi showed that
max{N(N−1)
k
, wδ + N − 1} is a lower bound for the cycle
lengths of schedules and proposed an algorithm for obtaining
a transmission schedule that meets this lower bound under
the assumption that N is divisible by w. In [10], Yeh, Wee
and Hong studied both kinds of all-to-all connection problems
depending on whether each node transmits packets to all nodes
including or excepting itself and proposed two lower bounds
for these two kinds of problems, max{dN
w
eN,wδ +N} and
max{dN
w
e(N − 1), wδ + N − 1}, respectively. They also
proposed scheduling algorithms to find the optimal scheduling
for arbitrary values of N , w, and δ.
Choi, Choi and Ni [11] studied a case when transmitters
may access to only a limited number of channels, i.e., the
number of channels to which a laser can tune may be much
smaller than the number of channels. They developed an
algorithm that provides an optimal for all-to-all broadcast with
limited tuning ranges. In [12], Lee, Oh and Choi considered
the problem as a virtual topology embedding problem. If each
node is equipped with α tunable transmitters and β fixed-tuned
receivers, they developed an optimal transmission schedule
with schedule length max{αβN(N − 1)/w, β(N − 1) +wδ}
such that each transmitter of each node transmits once to each
receiver of its neighboring nodes within this time period. In
[13], Li conducted probabilistic analysis of the average-case
performance of a packet transmission scheduling algorithm for
the cyclic all-to-all broadcast. Their result implies that by using
currently available tunable optical transceivers, it is possible
to build single-hop WDM networks that efficiently utilize all
the wavelengths.
In this paper, we consider the all-to-all broadcast problem in
WDM optical star network with some breakdown or power-off
transceivers. Each node in the network is assigned a tunable
transmitter and a fixed-tuned receiver. We identify the lower
bounds of the minimum scheduling length for the problem and
propose single-hop scheduling algorithms to find the optimal
solution in both terms of arbitrary number of wavelengths and
value of tuning latency.
II. PROBLEM DEFINITION
This paper considers all-to-all connection problem in WDM
optical passive star networks with N nodes and w wave-
lengths. We assume that each node is equipped with exactly
one tunable transmitter and one fixed receiver(TT-FR), and
each transmitter can tune to all available wavelengths with
the tuning latency δ which is expressed in units of packet
durations. A single-hop scheduling protocol is mandatory so
that each packet can directly be transmitted to its destination
node in a unit time slot. Our objective is to schedule the packet
transmissions for the all-to-all broadcast in order to minimize
the scheduling length.
Since the number of wavelengths is significantly less than
the number of nodes, whether N is divisible by w or not, we
focus on the case when some nodes crash and the received
wavelengths are not reassigned to all nodes in that they are
fixed. For example, a WDM network consisting of 12 nodes is
considered in Figure 1(a). When 4 nodes fail, the remaining 8
nodes is indicated in Figure 1(b) in which each group consists
of different number of nodes. The previous optimal scheduling
does not fit in with the remaining networks anymore and we
need to redesign the scheduling algorithms to minimize the
scheduling length.
We assume that there are B damaged nodes occurring
in the network in which the remaining N − B nodes are
represented by n0, n1, · · · , nN−B−1 with the same w available
wavelengths on each link represented by λ0, λ1, · · · , λw−1.
Let FR-group denote a group of the nodes using the same
received wavelength for transmissions, Gi denote an FR-
group, δ denote the non-negligible tuning time of each tuning
step, and λi denote the received wavelength used by each node
in Gi. Therefore, the remaining N −B nodes are partitioned
into w FR-groups represented by G0, G1, · · · , and Gw−1.
III. LOWER BOUNDS OF THE SCHEDULING LENGTH
In this section, we identify some lower bounds for both
kinds of all-to-all connection scheduling problems and show
that the scheduling length found by the algorithm we propose
meet these lower bounds. In all-to-all connection scheduling,
the packet transmissions is scheduled for each nodes-pair
so that all nodes transmit only once to each node within a
repeating cycle time as less as possible.
There are two different kinds of all-to-all connection prob-
lems depending on that the nodes send packets to all nodes
including or except itself.
In the case when each node sends packets to all nodes
including itself, there are (N − B)2 packet transmissions in
the scheduling. A theorem follows:
Theorem 3.1: The lower bound of the scheduling length of
any all-to-all connection scheduling is max{(max |Gi|)(N −
B), wδ + N − B}, where the nodes send the packets to all
nodes including themselves.
all-to-all connection problems. Algorithm1 shows the
transmission scheduling settling tuning delay and is lack of
the wavelengths. In Algorithm1, T (np, t) = nij is that the
node np transmits a packet to the j-th node of ψi at time
t. And the scheduling length of optimal scheduling Lopt is
defined by max{|ψ0|(N −B), wδ +N −B}.
Algorithm1
1: Sort FR-groups in the descending order of group sizes
and the sorted order is: ψ0, ψ1, · · · , and ψw−1, where
|ψi| ≥ |ψj | if j ≥ i, 0 ≤ i, j ≤ w − 1. Let nij be the
j-th node of ψi|, where 0 ≤ j ≤ |ψi| − 1.
2: For p = 0 to N −B − 1 do
3: t ← sp
4: For i = 0 to w − 1 do
5: For j = 0 to |ψi| − 1 do
6: T (np, t) ← nij
7: t← t+ 1
8: t← t+ δ
Figure 2 shows a timetable of transmission scheduling
constructed by Algorithm1 if N −B = 8, w = 3, and δ = 5.
The numbers on the leftmost column represent the nodes and
time goes on from left to right. In what follows, we will prove
that Algorithm1 can find a correct scheduling length for all-
to-all connection problems.
Lemma 4.1: No two nodes apply the same wavelength for
transmitting at the same time in the scheduling generated by
Algorithm1.
Proof: We only have to verify that the two nodes np
and np+1 do not use the same transmitting wavelength at
the same time. Let α be the time when the node np finishes
transmitting packets for the group ψi and β be the time
when node np+1 finishes tuning its transmitter to start the
packet transmitting using the received wavelength of group
ψi, α and β can be represented as follows: α = sp +
the number of packets transmitted + total tuning delay =
(|ψ0|p+ 1) + (
∑i
k=0 |ψk|) + iδ.
Similarly, β = (|ψ0|(p + 1) + 1) + (
∑i−1
k=0 |ψk|) + iδ. We
obtain that β − α = |ψ0| − |ψi|. Hence, |ψ0| ≥ |ψi|, 0 ≤ i ≤
w − 1, β ≥ α always holds for any value p.
Lemma 4.2: In the scheduling constructed by Algorithm1,
the time Lp for each node np to transmit all packets for the
all-to-all connection is equal to (w − 1)δ +N −B for any p
in 0 ≤ p ≤ N −B − 1.
Proof: From the above lemma, we assure that each node
does not have to wait for using a wavelength which is used by
another node. In other words, each node can start transmitting
packets as soon as tuning to the wavelength is completed. No
doubt, every node np transmits N − B − 1 packets in the
scheduling generated by Algorithm1. Clearly, each node np
will tune w− 1 times, so Lp = (w− 1)δ+N −B for any p.
The scheduling generated by Algorithm1 have the
characteristic that all Lp are identical for 0 ≤ p ≤ N −B−1,
so we denote LP simply as L. Now, we repeat the transmission
scheduling constructed by Algorithm1 until we obtain that
any time span of Lopt staring from any position of the
repeated scheduling is an optimal scheduling. Algorithm2
will find an optimal scheduling by repeating Algorithm1.
Algorithm2 differs from Algorithm1 in that the time t is
repeated by t− Lopt if t is greater than Lopt.
Algorithm2
1: Sort FR-groups in the descending order of group sizes
and the sorted order is: ψ0, ψ1, · · · , and ψw−1, where
|ψi| ≥ |ψj | if j ≥ i, 0 ≤ i, j ≤ w − 1. Let nij be the
j-th node of ψi|, where 0 ≤ j ≤ |ψi| − 1.
2: For p = 0 to N −B − 1 do
3: t ← sp
4: For i = 0 to w − 1 do
5: For j = 0 to |ψi| − 1 do
6: if (t > Lopt) then T (np, t− Lopt) ← nij
7: else T (np, t) ← nij
9: t← t+ 1
9: t← t+ δ
Figure 3 shows the repetitions of transmission scheduling
of Figure 2. Note that in Figure 3, Lopt = 32 is calculated
from N , B, w, and δ. If we take out any portion of Figure
3 and span 32 time units, an optimal scheduling is found as
indicated in Figure 4.
Theorem 4.3: For any values w and δ, the scheduling
constructed by Algorithm2 is an optimal scheduling.
Proof: Now, we must prove that Lopt−L is no less than
tuning latency δ in Algorithm2. From Lemma 4.2, L =
(w − 1)δ + N − B. If Lopt is equal to |ψ0|(N − B), then
|ψ0|(N −B) ≥ wδ +N −B ⇒ |ψ0|(N −B)− [(w − 1)δ +
N −B] ≥ δ ⇒ Lopt − L ≥ δ.
Otherwise, we choose that Lopt is equal to wδ+N −B, so
Lopt−L = wδ+N −B− [(w− 1)δ+N −B] = δ. Thus, no
matter Lopt is equal to either |ψ0|(N − B) or wδ +N − B,
we prove Lopt − L ≥ δ.
Figure 4 shows an optimal scheduling which is |ψ0|(N −
B) = 4×8. Clearly, the scheduling of Figure 4 is not affected
by the tuning latency δ = 5. Now, we give an example
N − B = 8, w = 3, and δ = 9, and the tuning latency
will determine the scheduling length by Algorithm2. Figure
5 shows the optimal scheduling in which the scheduling length
is wδ +N −B = 3× 9 + 8 = 35.
B. Optimal Scheduling Algorithm for Not Sending Packets to
Themselves
The other scheduling problem for scheduling all-to-all
broadcast is that every node can not send any packet to itself.
This case is more complicated than the above case. Some
notations is similar to the above definitions. The time s′p when
node np transmits the every first packet is set as follows:
s
′
p = |ψ0|p− |ψ0 ∩ {0, 1, 2, · · · , p− 1}|+ 1
In the following algorithms, let T (np, t) = nij denote that
node np transmits a packet to the j-th node of ψi at time
t. And the scheduling length of optimal scheduling Lopt is
changed to max{|ψ0|(N −B − 1), wδ +N −B − 1}.
0 0 1 3 7 2 4 5 6
1 0 1 3 7 2 4 5 6
2 0 1 3 7 2 4 5 6
3 6 0 1 3 7 2 4 5
4  6 0 1 3 7 2 4 5
5 5  6 0 1 3 7 2 4
6 2 4 5  6 0 1 3 7
7 2 4 5  6 0 1 3 7
time
Fig. 5. An Example of Optimal Scheuling for N −B = 8, w = 3, and δ = 9.
all-to-all connection is equal to (w−1)δ+N −B−1 for any
p in 0 ≤ p ≤ N −B − 1.
Proof: The proof is similar to Lemma 4.2.
The scheduling generated by Algorithm3 have the
characteristic that all Lp are identical for 0 ≤ p ≤ N −B−1,
so we denote LP simply as L. Now, we repeat the transmission
scheduling constructed by Algorithm3 until we obtain that
any time span of Lopt staring from any position of the
repeated scheduling is an optimal scheduling. Algorithm4
will find an optimal scheduling for repeating Algorithm3.
Algorithm4 differs from Algorithm3 in that time t is
repeated by t− Lopt times if t is greater than Lopt.
Algorithm4
1: Sort FR-groups in the descending order of group sizes
and the sorted order is: ψ0, ψ1, · · · , and ψw−1, where
|ψ0| > |ψi|, and |ψi| ≥ |ψj | if j ≥ i, 1 ≤ i, j ≤ w − 1.
And Let nij be the j-th node of ψi|, where 0 ≤ j ≤
|ψi| − 1.
2: For p = 0 to N −B − 1 do
3: t ← sp
4: For i = 0 to w − 1 do
5: For j = 0 to |ψi| do
6: if (np 6= nij)
7: if (t > Lopt) then T (np, t− Lopt) ← nij
8: else T (np, t) ← nij
9: t← t+ 1
10: t← t+ δ
Theorem 4.6: For any values w and δ, the scheduling
constructed by Algorithm4 is an optimal scheduling.
Proof: The proof is similar to Theorem 4.3.
V. CONCLUSION
In this paper, we consider B damaged nodes occurring in
an N -node WDM star network and the remaining N − B
nodes are partitioned into w FR-groups, i.e. G0, G1, · · · , and
Gw−1. This is a new direction that consider with damaged or
power-off nodes. We present optimal single-hop scheduling
algorithms for two different kinds of situations for all-to-
all broadcast with arbitrary number of wavelengths w and
tuning latency δ. For the case when the transceivers send
the packets to all nodes including themselves, the scheduling
length found by the scheduling algorithms we proposed meets
the lower bound, max{(max |Gi|)(N−B), wδ+NB}. For the
other case when the transceivers send the packets to all nodes
excepting themselves, we present scheduling algorithms to find
the optimal scheduling length that comes up with the lower
bound max{(max |Gi|)(N −B − 1), wδ +N −B − 1}.
REFERENCES
[1] K.M. Sivalingam and S. Subramaniam, ”Optical WDM Networks,
Principles and Practice” in Kluwer Academic, , 2000.
[2] B. Mukherjee, ”WDM-Based Local Lightwave Networks - Part I: Single-
Hop Systems”. IEEE Network, vol. 6, no. 3, pp. 12-27, May 1992.
[3] B. Mukherjee, ”WDM-Based Local Lightwave Networks - Part II:
Multihop Systems”. In IEEE Network, vol. 6, no. 4, pp. 20-32, Jul.
1992.
[4] G. N. Rouskas and V. Sivaraman, ”Packet scheduling in broadcast
WDM networks with arbitrary transceiver tuning latencies,” IEEE/ACM
Transactions on Networking, vol. 7, no. 3, 1997, pp. 359V370.
[5] T. Gonzalez and S. Sahni, ”Open shop scheduling to minimize finish
time,” Journal of the ACM , vol. 23, no. 4, 1976, pp. 665V679.
[6] G. R. Pieris and G. H. Sasaki, ”Scheduling transmissions in WDM
broadcast-and select networks,” IEEE/ACM Transactions on Networking,
Vol. 2, No.2, Apr. 1994, pp. 105-110.
[7] H. Choi, H.-A. Choi, and M. Azizog˜lu, ”Efficient Scheduling of Trans-
missions in Optical Broadcast Networks,” IEEE/ACM Transactions on
Networking, Vol. 4, No.6, Dec. 1996, pp. 913-920.
[8] H. Choi, H.-A. Choi, and M. Azizog˜lu, ”On the All-to-All Broadcast
Problem in Optical Networks,” Photonic Network Communications, Vol.
2, No. 3, Aug. 2000, pp. 227-246.
[9] S.-K. Lee, A. D. Oh, H. Choi, H.-A. Choi, ”Optimal Transmission
Schedules in TWDM Optical Passive Star Networks,” Discrete Applied
Mathematics, Vol. 75, No. 1, Jan. 1997, pp. 81-91.
[10] H. Yeh, K. Wee, and M. Hong, ”Optimal Scheduling Algorithms
in WDM Optical Passive Star Networks,” International Parallel and
Distributed Processing Symposium(IPDPS), 1999.
[11] H. Choi, H.-A. Choi and L. M. Ni, ”All-to-All Broadcast in Broadcast-
and-Select WDM Networks with Tunable Devices of Limited Tuning
Ranges,” IEICE TRANSACTIONS on Communications, Vol. E86-B,
No.9, Sep. 2003, pp.2575-2582.
[12] S.-K. Lee, A. D. Oh and H.-A. Choi, ”Optimal Transmission Schedule
in WDM Optical Networks with Multiple Transmitters and Receivers,”
Journal of High Speed Networks, Vol. 10, 2001, pp. 209V222.
[13] K. Li, ”Probabilistic Analysis of Cyclic Packet Transmission Scheduling
inWDM Optical Networks,” Telecommunication Systems, Vol. 25, No.1-
2, 2004, pp. 51V64.
表 Y04 
二、 與會心得 
本人在此次會議中，發表一篇有關 The Selection of Logical Rings for Packet 
Transmissions in WDM Optical Star Networks 的研究論文。 
此次本人很榮幸的獲得行政院國家科學委員會的補助 (計畫編號
NSC95-2221-E-194-042)，來參加由第二屆中國國際通訊及網路研討會 。會中除了學
習有關上列之行動通訊技術的新方向與在網繼網路新研究成果，更幫助個人在通訊與
無線行動網路之研究的提昇，更期望自己能藉由此次的學習可在下年度的行政院國家
科學委員會的計畫中提出一個更新的研究計畫。最後作者在此深深的感謝行政院國家
科學委員會對此次行程的補助。 
 
三、 考察參觀活動(無是項活動者省略) 
 
四、 建議 
 
五、 攜回資料名稱及內容 
研討會議程與論文光碟一片。 
六、 其他 
發表之論文與報告投影片。 
ChinaCom 2007 2
Outline
 Multi-hop scheduling algorithm for all-to-
all broadcast problem  
 Logical Rings Construction problem (LRC 
problem)
 Properties of the ρ-LRC problem
 LRC algorithms
 Conclusion
ChinaCom 2007 4
The ρ-LRC problem 
 N nodes
 Construct a set of logical rings 
R={r1,r2,…,rm}
 On rk, satisfy Dist(i, j) ≤ρ,  for each pair of 
nodes (i, j) 
 Minimize the number  m of logical 
topologies
 The lower bound: m=(N-1)/ ρ
ChinaCom 2007 6
Examples(2/3)
7 nodes, ρ =2
 Dist(i, j) ≤2
The lower bound=3
0
1
2
6
5
34
0
6
5
1
2
43
Dist(0, 3) ≤2,Dist(0, 4) ≤2?
0
3
4
0
4
3
3 logical rings ?
ChinaCom 2007 8
Problem
What kind logical topology
 Ring topology
 How many logical topologies
 N nodes
 (N-1)! logical rings for the ρ-LRC problem
 the number of selections: 1)!(N
mC
−
ChinaCom 2007 10
WDM optical star network 
 N nodes and N wavelengths
 One tunable transmitter and one fixed receiver
 Non-negligible Tuning latency
w4 
Star coupler 
1 2
5 3
4
w1 w2 
w3 
w5 
w3 TX 
RX 
TX 
RX 
TX 
RX 
TX 
RX 
TX 
RX 
Tuning latency 　
ChinaCom 2007 12
All-to-all broadcast problem 
 W =4, N =4, Tuning latency =1 time slot 
A B C D
A 1 1 1
B 1 1 1
C 1 1 1
1     2       3      4      5      6 
A
B
C
D
fixed receivers 
B
A
D
C
D
B
C
A tune
tune
tune
tune
A
C
D
B tune
tune
tune
tune
The schedule length = 3+3δ= 6 time slots
tune
tune
tune
tune
slot 
ChinaCom 2007 14
Multi-hop scheduling 
 Two stages: 
 Design logical rings (the ρ-LRC problem )
 Schedule packet transmissions
 Restrict the maximum hop distance ρ 　
 Decrease O/E/O
 N =5, W =5, 　ρ=2 w5
1
2
3
5
w1
w2
w3w44
star
ChinaCom 2007 16
Schedule packet 
transmissions (clockwise)
1
2
3
5 w 1
w 2
w 3
w 4w 54
1 2 3 4 5 
1
2
3
4
5
1
2
3
5 w 1
w 2
w 3
w 4w 54
1 time slot
2 time slots
Tuning operation
δ+3 time slots
ChinaCom 2007 18
Our objective 
 Minimize the number of logical rings
 Reduce the time of tuning latency
 Solve the ρ -LRC problem
 logical  rings at least⎥⎥
⎤⎢⎢
⎡ −
ρ
1N
ChinaCom 2007 20
Grouping 
 Divide N nodes to x = ⎡(N-1)/ ρ⎤
groups
 N =13, ρ =3 
 x = ⎡(13-1)/3⎤ =4 
 gi : reverse gi
 g1 = (2, 1, 0) 
0
1
2
39
6
4
5
11
10
8
7
|g1 | = 3
|g2 | = 3
|g3 | = 3
1 ≤
 
|g4 | ≤
 
3+1
12
ChinaCom 2007 22
Construct logical rings 
 Construct logical rings such that 
 each group g is in the front of all other 
group gj , where gi =  {g1, g2, …,gx }\g 
g1 
g2 
g3 gx-1 
gx
g1 
g2 
g3 gx-1 
gx
Ring 1 Ring 1 
ChinaCom 2007 24
A complete directed graph 
with groups 
 gi is in front of gj
 gi is adjacent to gj g1
g2
g3
g5
g4
ChinaCom 2007 26
g1
g2
g3
g5
g4
A complete directed graph 
with reversed groups 
 gi is in front of gj
 gi is adjacent to gj
ChinaCom 2007 28
Logical rings
 If x is odd
 2(x-1) directed Hamiltonian cycles
 logical rings
 If x is even
 2x-2 directed Hamiltonian cycles and 2
perfect matching 
 logical rings
1)
ρ
1N
2( −⎥⎥
⎤⎢⎢
⎡ −
⎥⎥
⎤⎢⎢
⎡ −
ρ
1N
2
ChinaCom 2007 30
Conclusion
 N nodes and w wavelengths
 Extend our multi-hop scheduling algorithm
 The lower bound of our method
 logical rings
 Not match for the case : x is even
 The future work
 Find other strategies to close to the optimal
 Prove that the ρ-LRC problem is NP-hard?
)11(2 −⎥⎥
⎤⎢⎢
⎡ −
ρ
N
The Selection of Logical Rings for Packet
Transmissions in WDM Optical Star Networks
JungChun Liu
Department of Computer Science and
Information Engineering
National Chung Cheng University
Chiayi 621, Taiwan
Email: jcliu@cs.ccu.edu.tw
Hann-Jang Ho
Department of Information Management
Department of Computer Science and
Information Engineering
Wufeng Institute of Technology
Chiayi 621, Taiwan
Email: hjho@cs.ccu.edu.tw
SingLing Lee
Department of Computer Science and
Information Engineering
National Chung Cheng University
Chiayi 621, Taiwan
Email: singling@ccu.edu.tw
Abstract— In this paper, we present a multi-hop scheduling
algorithm for the All-to-All Broadcast (AAB) problem in Wave-
length Division Multiplexed (WDM) optical star networks with N
nodes. To decrease the packet delay in packet transmissions, our
scheduling algorithm will limit the hop distance to a constant ρ.
We transfer the ρ-hop AAB problem to the Hamiltonian cycles
problem and then generate the logical rings for physical packet
transmissions. In order to minimize the scheduling length, the
problem of selection of logical rings is to minimize the number of
tuning operations to reduce the influence of tuning latency δ for
the AAB problem. We propose a 2-approximation algorithm that
needs only 2⌈(N−1)/ρ⌉ tuning operations in an AAB scheduling.
When ρ < δ+
√
δ2−8δ
2
, the schedule length of our algorithm will be
shorter than that of the optimal single-hop scheduling algorithm.
I. INTRODUCTION
In Wavelength Division Multiplexed (WDM) optical net-
works, the broadcast-star [1], in which each node is connected
to a passive star via bidirectional fibers, is a popular architec-
ture. The passive star coordinates all packet communications.
Firstly, it merges optically all packet transmissions on distinct
wavelength channels and forwards synchronously to their
destination nodes. In a WDM optical broadcast star network
with N nodes and w wavelengths, the scheduling problem
is to find an efficient scheduling algorithm to minimize the
schedule length for given traffic demands. The All-to-All
Broadcast(AAB) problem is a special case of the scheduling
problem in which each node sends exactly a packet to all other
nodes. There are two methods to solve the AAB problem.
The first method is the single-hop scheduling algorithm [6],
[7] in which each packet transmission is sent through only
one hop distance. In [6], [7], authors gave some single-
hop scheduling algorithms to obtain optimal schedules. They
also show that the schedule length of optimal schedules is
max{⌈N
w
⌉(N−1), wδ+N−1}, where δ is the tuning latency
for tuning from one wavelength to another. In the practical
condition, the tuning latency δ is much longer than packet
transmission time [17], and the optimal scheduling length is
seriously affected by the long tuning latency. In this case,
we need the second method which is called the multi-hop
scheduling algorithm [8], [9], [10], [18]. In the multi-hop
scheduling, packet transmissions can be sent indirectly to
destination nodes. In [10], Marsan et al. gave a multi-hop
scheduling algorithm to obtain a shorter scheduling length than
the results by single-hop scheduling algorithms, especially
with long tuning latency.
In this paper, we are also concern with the optical and
electronic transformation (O/E/O) bottleneck. Since the O/E/O
operation lead to many buffer overflows in the multi-hop
transmission and to decreasing the system performance sub-
stantially. Therefore, we will restrict the hop distance of packet
transmissions to a constant ρ. Our problem is to design a
multi-hop scheduling algorithm for the AAB problem with
maximum ρ hop distance (the ρ-AAB problem) in WDM
optical broadcast-star networks with N nodes and w wave-
lengths. Let each node be equipped with a Tunable Transmitter
and a Fixed Receiver(TT-FR) [2], [16]. Since the number of
wavelengths is often less than the number of nodes, we assume
that each wavelength is at most shared by ⌈N/w⌉ receivers for
an uniform loading of wavelengths. For simplify the ρ-AAB
problem, we will firstly consider the transmission scheduling
on the case of N = w, and then process the general case of
N ≥ w by a similar scheduling method with partitioning N
nodes into w groups. Assume each transmitter in the same
transmission group tunes its wavelength synchronously. In
order to minimize the scheduling length, we design logical
rings for a transmission group of w nodes to achieve ρ-hop
transmission and minimize the number of tuning operations in
scheduling to decrease the influence of tuning latency.
We consider the rho-hop AAB problem in a WDM
broadcast-star network with five nodes, where the received
wavelength of node i is fixed as wi, 1 ≤ i ≤ 5. Firstly, if
we solve the 1-AAB problem by using the optimal single-
hop scheduling algorithm in [6], [7], the optimal schedule
length is 4+5δ. Secondly, if we solve the 4-AAB problem
on a logical ring as Figure 1(a), we need only one tuning
operation of each transmitter, and then the schedule length
is 10+δ. Clearly, when δ ≥ 2, the schedule length of 4-
AAB problem is better than that of 1-AAB problem. Finally,
we solve the 2-AAB problem in two steps. In the first step,
each node i tune simultaneously its transmitted wavelength to
tuning
operation
0
1
2
6
5
34
0
3
6
4
1
25
0
4
1
3
6
52
0
6
5
1
2
43
tuning
operation
tuning
operation
tuning
operation
Fig. 2. Construct logical rings for the 2-AAB problem with seven nodes
(ik, ik−1, ..., i1) if gi = (i1, i2, ..., ik). Let |gi| be the number
of elements in gi and Gx denote the set of x groups, i.e.,
Gx={g0, g1, ..., gx−1}.
Lemma 3.1: For each group, the ρ-LRC problem with ρ or
ρ+ 1 nodes is solvable on two logical rings.
Proof: We only consider the ρ-LRC problem with ρ+1
nodes since it will also satisfy the problem with ρ nodes.
Assume that a group gi with ρ+ 1 nodes is (i1, i2, · · · , iρ+1)
and we construct two logical rings l1 and l2 by respectively
connecting nodes in gi and gi in clockwise order. On the
logical ring l1, node ij sends packets through k − j hop
distance to node ik, where 1 ≤ j < k ≤ ρ + 1. Clearly, ij
cannot transmit packets through maximum ρ hop distance to ik
on the logical ring l1, but it will transmit packets by j−k hop
distance to ik on the logical ring l2, where 1 ≤ k < j ≤ ρ+1.
Thus the ρ-LRC problem with ρ or ρ + 1 nodes can be
scheduled on two logical rings for each group.
By Lemma 3.1, we solve separately the ρ-LRC problem
on each group. Nevertheless, the ρ-LRC problem is required
to schedule not only for one group but also for all groups
each other. Next, we will consider the hop distance of adjacent
groups and reconstruct logical rings to satisfy that each node
in each group can transmit packets through at most ρ hop
distance to all nodes on these logical rings.
Lemma 3.2: We construct two logical rings l1 and l2, such
that gi is connected in front of gj on the logical ring l1, and gi
is also connected in front of gj on the logical ring l2. Packet
transmissions from nodes in gi to nodes in gj will be sent
through at most ρ hop distance on either l1 or l2.
Proof: Since the number of nodes in each group affects
packet transmissions whether can be transmitted by at most ρ
hop distance, we consider the following three cases for packet
scheduling:
1) |gi| = ρ and |gj | = ρ: Assume gi = (a1, a2, ..., aρ) and
gj = (b1, b2, ..., bρ), then gi = (aρ, aρ−1, ..., a1) and
gj = (bρ, bρ−1, ..., b1). On l1, as transmits packets to bt
as 1 ≤ t ≤ s ≤ ρ, but as cannot transmit packets to bt
on l1, 1 ≤ s ≤ t ≤ ρ. And the work, which as transmits
packets to bt, can be processed on l2, 1 ≤ s ≤ t ≤ ρ.
2) |gi| = (ρ + 1) and |gj| = ρ: Assume gi =
(a1, a2, ..., aρ+1) and gj = (b1, b2, ..., bρ), gi =
(aρ+1, aρ, ..., a1) and gj = (bρ, bρ−1, ..., b1). as can
transmit packets to bt on l1, 2 ≤ t + 1 ≤ s ≤ ρ + 1.
Although as cannot send packets to bt on l1, as can
transmit packets to bt on l2, 1 ≤ s ≤ t ≤ ρ.
3) |gi| = ρ and |gj | = (ρ+1): Let gi = (a1, a2, ..., aρ) and
gj = (b1, b2, ..., bρ+1), so gi = (aρ, aρ−1, ..., a1) and
gj = (bρ+1, bρ, ..., b1). On l1, as can transmit packets to
bt, 1 ≤ t ≤ s ≤ ρ. Clearly, which as transmits packets
to bt cannot be done on l1, but it can be executed on l2,
where 1 ≤ s ≤ t− 1 ≤ ρ.
Thus each node in gi can send packets through at most ρ
hop distance to nodes in gj for all cases.
In Lemma 3.2, we design two logical rings for at most ρ
hop transmissions between each pair of nodes in two groups.
These two logical rings also satisfy the condition of Lemma
3.1 for the ρ-LRC problem. Similarly, we will design 2(x−1)
logical rings for at most ρ hop transmissions between each pair
of nodes in x groups.
Lemma 3.3: To apply Lemma 3.2 for constructing logical
rings, any algorithm uses at least 2(x − 1) logical rings for
solving the ρ-LRC problem.
Proof: From Lemma 3.2, gi is connected in front of
gj on a logical ring. Each group will be connected with one
of other groups on x − 1 logical rings at least. On the other
hand, gj is also connected with each other on x − 1 logical
rings at least. Thus if any method creates logical rings from
the property of Lemma 3.2, it will construct at least 2(x− 1)
logical rings for solving the ρ-LRC problem.
IV. LOGICAL RING CONSTRUCTION
In this section, we will propose approximation algorithms
for the ρ-LRC problem. Our objective is minimize the number
of logical rings so that the schedule length of the ρ-AAB
problem is also minimized. First of all, we consider the
condition of adjacent groups in Lemma 3.2 and 3.3, in
which each group is connected in front of other groups on
some logical rings for satisfying the ρ-hop distance. For
optimizing the connection of groups, we transfer these groups
to a complete directed graph D as follows. Each group gi,
0 ≤ i ≤ x − 1 is represented as a vertex in D and gi is
adjacent to gj for 0 ≤ i, j ≤ x− 1 and i 6= j. We will try to
find directed Hamiltonian cycles (logical rings) on D to satisfy
the condition of that each group is adjacent in front of other
groups on some logical rings. Moreover, in order to satisfy
(a)  r
1
5
1
2
4
36
7
0
g0
g1
g2
g3
3
1
4
2
56
7
0
g0
g1
g2g3
(b)  r 
p
Fig. 5. Reverse all directions on logical rings in Figure 4
(a)  
4
0
3
5
27
6
1
g0
g1g3
2
0
5
3
47
6
1
g2g3
(b)  
g0
g2 g1
Fig. 6. Reverse the nodes’ ordering on each group in Figure 4
to create {ri}, where 1 ≤ i ≤ x−12 .
In the LRC-Odd algorithm, Step 2 and Step 3 create two
logical ring sets {ri} and {ri} which total number of logical
rings is x − 1. In Step 4, two logical rings created, {ri} and
{ri}, include other x−1 logical rings by replacing each group
with its reversed group. Therefore, the LRC-Odd algorithm
should construct 2(x−1) logical rings for the ρ-LRC problem.
LRC-Even Algorithm (x is even)
1. To create x2 − 1 Hamiltonian cycles and one perfect
matching p on the complete undirected graph G with
|Gx| vertices [13], we obtain the set {Hi} of all
Hamiltonian cycles, where 1 ≤ i ≤ x2 − 1.
2. Add the direction to all edges of all Hamiltonian cycles
in {Hi}, where 1 ≤ i ≤ x2 − 1, and of the perfect
matching p, we the logical ring set {ri} ∪ {rp} by
Definition 4.4.
3. To reverse the direction of edges on each logical
ring ri = (gi0 , gi1 , gi2 , gi3 , · · · , gi(x−2) , gi(x−1))
in {ri}, we obtain another logical ring ri =
(gi(x−1) , gi(x−2) , gi(x−3) , gi(x−4) , · · · , gi1 , gi0), where
1 ≤ i ≤ x2 − 1. For instance, reverse the direction of
the logical ring (g0, g1, g2, g3) as Figure 4(a) to create
another logical ring (g3, g2, g1, g0) as Figure 5(a)
shown. To reverse the direction of edges on the logical
ring rp = (gp0 , gp1 , gp2 , gp3 , · · · , gp(x−2) , gi(p−1)),
we produce another logical ring rp =
(gp(x−1) , gp(x−2) , gp(x−3) , gp(x−4) , · · · , gp1 , gp0). For
example, reverse the direction of the logical ring
(g0, g2, g1, g3) as Figure 4(b) to create another logical
ring (g3, g1, g2, g0) as Figure 5(b) shown. We create
another logical ring set {ri} ∪ {rp}.
4. Replace each group of each logical ring
ri = (gi0 , gi1 , gi2 , gi3 , · · · , gi(x−2) , gi(x−1)) in {ri}∪{rp}
with its reversed group to create another logical ring
(gi0 , gi1 , gi2 , gi3 , · · · , gi(x−2) , gi(x−1)) in {ri} ∪ {rp},
where 1 ≤ i ≤ x2 − 1. For instance, on the logical ring
(g0, g2, g1, g3) as Figure 4(b), we replace each group
with its reversed group to obtain another logical ring
(g0, g2, g1, g3) as Figure 6(b). Similarly, replace each
group of logical rings in {ri} ∪ {rp} with its reversed
group to create {ri} ∪ {rp}, where 1 ≤ i ≤ x2 − 1.
The main difference of the LRC-Even algorithm and the
LRC-Odd algorithm is that the LRC-Even algorithm creates
a perfect matching p except Hamiltonian cycles on G. Since
each Hamiltonian cycle or each perfect matching produces
a logical ring, Step 2 and Step 3 create x logical rings in
{ri} ∪ {rp} and {ri} ∪ {rp}. In Step 4, we produces two
logical ring sets, {ri} ∪ {rp} and {ri} ∪ {rp}, which have
other x logical rings by reversed group in the LRC-Even
algorithm. Hence, the LRC-Even algorithm should construct
2x logical rings for the ρ-LRC problem.
Since x = ⌈(N − 1)/ρ⌉ is the lower bound of the ρ-LRC
problem, the LRC algorithm is 2-approximation. And then its
schedule length is :
TSm = 2(⌈(N − 1)/ρ⌉)(ρ(ρ + 1)
2
+ δ).
From the expression of TSm, the larger ρ is, the smaller the
number of logical rings and the time of tuning operations
are. In other words, the time of tuning operations is also
determined by the value of hop distance ρ.
In the single-hop scheduling [6], [7], the optimal schedule
length is
TSos = Nδ +N − 1.
Clearly, the time of tuning operations of TSm in multi-hop
scheduling is reduce to about ρ2 times of TS
o
s . Furthermore, the
main purpose of our multi-scheduling algorithm is to obtain
that TSm < TSso, that is
2(⌈(N − 1)/ρ⌉)(ρ(ρ+ 1)
2
+ δ) < Nδ +N − 1.
To simplify the above expression, we achieve that
ρ <
δ +
√
δ2 − 8δ
2
.
Therefore, as long as the hop distance of packet transmissions
is about less than δ+
√
δ2−8δ
2 , the schedule length of our
multi-hop scheduling algorithm is less than optimal single-hop
scheduling algorithms’.
