                                                                              2 
行政院國家科學委員會專題研究計畫成果報告 
一個具效率且安全的三方金鑰交換協定機制 
計畫編號: NSC 99-2221-E-030-022 
執行期限: 99年08月01 日 至 100年07月31 日 
主持人: 李正吉 
E-mail: cclee@mail.fju.edu.tw 
執行機構及單位名稱: 輔仁大學 
  
摘要 
   隨著電腦通訊與網路技術的發展，三方
與多方通訊已逐漸成為網路安全上的重要
研究主題。三方金鑰交換協定的運作環境
是任意兩個使用者透過可信任且具認證能
力的伺服器能在不安全的網路上交換保密
且可認證的資訊。在一般的三方金鑰交換
協定裡，兩個使用者預先和可以信任的伺
服器分享他們自己的簡單容易記憶的密
碼。接著透過伺服器的協助能認證這兩位
使用者並且在認證之後建立一把會議金鑰
(session key)，只有合法的使用者可以去認
證並且建立這把會議金鑰。然而這種三方
金鑰交換協定容易受到通行碼猜測攻擊
(password guessing attack)。因為人類的記
憶力有限，使用者通常會選擇容易記憶的
字串來當作密碼，這代表著密碼的選擇空
間是相對小到駭客可以在很短的時間內就
全部搜過。從 1995 年到現在已有許多的三
方金鑰交換協定被提出來，這些已發表的
三方通行碼驗證金鑰交換協定(three-party 
protocol for password-based key 
exchange)，有些都是使用伺服器的公開金
鑰來加密密碼以防止通行碼猜測攻擊。雖
然使用公開金鑰加密系統可以簡化協定的
設計及方便協定的安全分析，然而卻也另
外增加了使用者驗證或儲存此公開金鑰的
負擔與不便。近年來，許多學者提出不需
使用伺服器公開金鑰的三方金鑰交換協
定，可是隨後被其他的學者發現這些不需
使用伺服器公開金鑰的三方金鑰交換協定
會遭受不可偵測的線上通行碼猜測攻擊
(undetectable on-line password guessing 
attacks)，所以要同時達到高效率且高安全
是很難實行的。因此，本研究提出一套新
的具有效率且安全的三方金鑰交換協定機
制，這個新的機制增加了三方金鑰交換的
安全性，效率性和實用性，以及節省資料
庫的儲存空間並且達到完美正向安全性。 
關鍵字：金鑰交換，公開金鑰密碼系統，
網路安全，密碼猜測攻擊，完美
正向安全性，認證。 
 
Abstract 
Follow with the computer communication 
and network technology development, 
three-party communication is gradually 
become very important issue in security 
networks. Three-party encrypted key 
exchange protocol allows two clients 
communicating over a public network to 
establish a common secret key with a trust 
server. In normal three-party encrypted key 
exchange protocol, clients share an 
easy-to-remember password with a trusted 
server in advance. However, Three-party 
encrypted key exchange protocols are easily 
infiltrated by password guessing attacks, 
because people often use simple or easy to 
remember passwords having low-entropy. 
Many three-party encrypted key exchange 
protocols have subsequently been proposed 
to make secure the authentication over 
insecure channels. In their schemes, the 
server’s public key is used to resist 
password guessing attacks. However, using 
the server’s public key wastes a great deal of 
computational resources. Then many 
three-party encrypted key exchange 
                                                                              4
Lin et al. [6] proposed an efficient 3PEKE 
(LSSH-3PEKE). The LSSH protocol not 
only resists both undetectable on-line 
password guessing attacks and off-line 
password guessing attacks, but also reduces 
much of the computational cost.  It 
accomplishes this by not using the server’s 
public keys. Later the LSSH protocol 
replaces public-key cryptosystems with a 
pseudo random function (PRF) operation.
  
Chang and Change [3] proposed an 
efficient three-party encrypted key exchange 
(ECC-3PEKE) protocol in 2004. The ECC 
protocol, not only uses less computation, but 
also increases efficiency, because it uses a 
super-poly-to-one trapdoor function (TDF) 
[5] produced one-way hash function known 
only by the S. It provides mutual 
authentication efficiently and practically. 
However, Chen et al. [3] and Yoon et al. [9] 
pointed out that the ECC-3PEKE protocol is 
vulnerable to undetectable on-line password 
guessing attack, and they proposed an 
improved protocol. They restructured the 
ECC protocol and claimed that their 
protocol could prevent undetectable on-line 
password guessing attacks. Unfortunately, 
we determined that their scheme has security 
problems in perfect forward secrecy; namely, 
that it reveals user passwords. Hence, we 
shall propose an improved protocol to 
strengthen their security. 
 
2. In perfect forward secrecy 
using password guessing 
attacks on Chen et al.’s and 
Yoon et al.’s protocols 
In this section, we will demonstrate that 
the Chen et al.’s and Yoon et al.’s protocols 
are not secure in perfect forward secrecy 
using password guessing attacks. Perfect 
forward secrecy guarantees that when a 
party’s long-term private key is 
compromised, it will never reveal any old 
short-term keys [10]. In next, we shall 
show that their protocols cannot achieve 
perfect forward secrecy. That is, an 
adversary who knows S’s trapdoor can 
derive a user’s password. If adversary C 
knows S’s trapdoor, C will obtain rA and rB 
from FS(rA) and FS(rB), respectively. Then 
adversary C utilizes rA/rB to obtain a user’s 
password by using off-line password guess 
attacks.    
2.1 Weakness of Chen et al.’s 
protocol 
In Chen et al.’s protocol, adversary C 
proceeds as follows: 
1. The adversary C collects A’s request {A, B, 
S, <RA⊕ rAA >
AP
, FS(rA), 
AS
kf (RA)} in 
Setp1 and guesses A’s password ~AP . 
2. Adversary C decrypts <RA⊕rAA >
AP
 with 
guessed password ~AP , we assume the 
password that people often use is short 
and simple to remember.   
3. Adversary C computes z⊕rAA  = 
~
AR  by 
known argument rA, where z is decrypted 
                                                                              6
function (TDF) only known by the S. (A→B: 
M) denotes a message M sent from A to B. 
The Steps of the improved protocol are 
as follows: 
 
Step 1. A→S: Request, A, B 
A generates a random number NA
 
and 
computes RA = g
NA 
mod p, then A 
sends {Request, A, B} to S. 
 
Step 2. S→A: PA ⊕ RS1   
S→B: PB ⊕ RS2 
When S receives these messages 
from A, S takes A’s password PA and 
B’s password PB from its database 
according the identity A and B. Then 
S generates two random numbers NS1,
 
NS2 and computes RS1 = g
NS1 mod p, 
RS2 = g
NS2 mod p. Next, S computes 
{PA ⊕ RS1, PB ⊕ RS2} and sends 
them to A and B simultaneously. 
Step 3. A→S: RA, 
AS
kf (RS1)   
B→S: RB, 
BS
kf (RS2) 
When A receives these messages 
from S, A obtains RS1 by computing 
PA ⊕  RS1 ⊕  PA  = RS1 and 
computes kA S= RS1 
NA mod p. Next, A 
further computes 
AS
kf (RS1). 
Similarly, when B receives these 
messages from S, B obtains RS2 by 
using his/her password and computes 
kBS = RS2
NB mod p. Next, B further 
computes 
BS
kf (RS2). Finally, A and B 
sends {RA, 
AS
kf (RS1)} and {RB, 
BS
kf (RS2)} to S respectively. 
Step 4. S→A: RB
 NS1NS2,
AS
kf (A, B, RB
 NS1NS2)   
S→B: RA
NS1NS2, 
BS
kf (A, B, RA
NS1NS2) 
When S receives these messages 
from A, S computes kA S= RA
 NS1 mod p 
by using received message RA and 
NS1. Next, S computes 
AS
kf (RS1) and 
compares it with the received 
message 
AS
kf (RS1). If it holds, S 
authenticates A successfully. 
Similarly, when S receives these 
messages from B, S obtains kBS = 
RS2
NB mod p and verifies B by the 
same way. Finally, S computes        
{RB
 NS1NS2,
AS
kf (A, B, RB
 NS1NS2)} and 
{RA
NS1NS2, 
BS
kf (A, B, RA
NS1NS2)} and 
sends them to A, B simultaneously. 
Step 5. A→B: fK(A, K) 
      When A receives these messages 
from S, A computes 
AS
kf (A, B, RB
 
NS1NS2) by using kAS and the 
received message RB
NS1NS2 and 
compares it with the received 
                                                                              8
  
4.2 Mutual authentication 
Mutual authentication means that the 
client authenticates S and vice versa. In Step 
3 S authenticates A and B by comparing 
AS
kf (RS1) and 
BS
kf (RS2). In Step 4 A 
authenticates S by comparing 
AS
kf (A, B, RB
 
NS1NS2) and B authenticates S by comparing 
BS
kf (A, B, RA
NS1NS2). Only A and B can 
compute the session key K = (RB
 NS1NS2)
 NA 
(mod p) = g 
N
A‧NB‧NS1‧NS2 = (RA
NS1NS2)
 NB 
(mod p). In Step 5 B authenticates A by 
comparing fK(A, K). In Step 6 A 
authenticates B by comparing fK(B, K). 
Mutual authentication between A/B and S is 
done. Therefore, our improved protocol can 
achieve mutual authentication. 
 
4.3 Three possible password guessing 
attacks 
In this subsection, we demonstrate that 
our improved protocol can prevent against 
some password guessing attacks. This 
includes three possible kinds of attacks: 
detectable online password guessing attacks, 
detectable off-line password guessing 
attacks, and undetectable online password 
guessing attacks. 
If the adversary C wants to perform the 
following processes to mount an 
undetectable online password guessing 
attack, it is unachievable because S can 
authenticate the user’s password in Step 3. 
We assume that the adversary C is a legal 
user but illegal in fact. He/She can send the 
messages {Request, C, B} to S, S will 
respond with {PC ⊕ RS1} to the adversary 
C. Then the adversary C can intercept {PB 
⊕ RS2} in Step 2 and compute PB ⊕ RS2 
⊕ P’B= R’S2 with a guessed password, P’B. 
Next, S can authenticate C and B in Step 3 
and respond to them in Step 4. C can 
intercept B’s messages {RB, 
BS
kf (RS2)}. 
Without NB, C cannot compute kB S  and 
BS
kf (R’S2). Then, C wants to verify 
BS
kf (R’S2) with the intercepted 
BS
kf (RS2). It 
is obvious that C must guess PB and NB 
simultaneously. Unfortunately, this is a very 
difficult proposition. Therefore, our 
improved protocol can protect against 
undetectable online password guessing 
attacks. 
If the adversary C wants to mount a 
detectable online password guessing attack.  
He/She forges A and sends the messages 
{Request, A, B} to S. S will respond with the 
message {PA ⊕ RS1} to the adversary C. 
Then he/she can obtain R’S1  = PA ⊕ RS1 ⊕ 
P’A with a guessed password P’A. Next, 
he/she computes R’A = g
N’A 
mod p and 
computes k’A S= R’S1 
N’A mod p, and then 
sends the message {R’A, 
AS
kf ' (R’S1)} to S, 
where N’A is a random number generated by 
the adversary C. S will compute kA S = R’A
 
NS1 mod p and 
AS
kf (RS1) and check with the 
                                                                              10 
secure than CC’s, Chen et al.’s, and Yoon et 
al.’s protocols, plus our protocol does not 
incur additional computational cost. Our 
protocol adds only two modular 
exponentials and one round, but the TDF 
function and symmetric 
encryption/decryption is zero. Therefore, our 
improved protocol not only preserves the 
advantages of their protocols, but also 
enhances their security. 
 
6. Conclusion 
In this paper, we have pointed out that Chen 
et al.’s and Yoon et al.’s protocols are not 
secure against password guessing attacks in 
perfect forward secrecy. Our improved 
protocol does not use a TDF function and 
symmetric encryption/decryption and can 
prevent against some possible password 
guessing attacks. In conclusion, our 
proposed protocol not only retains their 
advantages but also strengthens their 
security. 
References 
[1] S. M. Bellovin, and M. Merrit, 
Encrypted key exchange: 
password-based protocols secure against 
dictionary attacks, IEEE Computer 
Society Symposium on Research in 
Security and Privacy, Oakland, 
California, May, pp. 72-84, 1992. 
[2] H. B. Chen, T. H. Chen, W. B. Lee, and 
C. C. Chang, Security enhancement for a 
three-party encrypted key exchange 
protocol against undetectable on-line 
password guessing attacks, Computer 
Standards & Interfaces, vol. 30, no. 1-2, 
pp. 95-99, Jan. 2008. 
[3] C. C. Chang, and Y. F. Chang, A novel 
three-party encrypted key exchange 
protocol, Computer Standards & 
Interfaces, vol. 26, no. 5, pp. 471-476, 
2004. 
[4] Y. Ding, and P. Horster, Undetectable 
on-line password guessing attacks, ACM 
SIGOPS Operating Systems Review, vol. 
29, no. 4, pp. 77-86, Oct. 1995.  
[5] O. Goldreich, and L. Levin, A hard-core 
predicate for all one-way functions, 
Proceedings of the 21st ACM 
Symposium on the Theory of Computing, 
Seattle Washington, pp. 44-61, May, 
1989. 
[6] C. L. Lin, H. M. Sun, and T. Hwang, 
Three-party encrypted key exchange: 
attacks and a solution, ACM SIGOPS 
Operating Systems Review, vol. 34, no. 
4, pp. 12-20, 2000. 
[7] H. M. Sun, B. C. Chen, and T. Hwang, 
Secure key agreement protocols for 
three-party against guessing attacks, The 
Journal of Systems and Software, vol. 75, 
no. 1-2, pp. 63-68, 2005. 
[8] M. Steiner, G. Tsudik, and M. Waidner, 
Refinement and extension of encrypted 
key exchange, ACM Operating Systems 
Review, vol. 29 no. 3, pp. 22– 30, 1995. 
[9] E. J. Yoon, and K. Y. Yoo, Improving the 
novel three-party encrypted key 
exchange protocol, Computer Standards 
& Interfaces, vol. 30, no. 5, pp.  
309-314, July. 2008. 
[10] A. J. Menezes, P. C. van Oorschot, S. A. 
Vanstone, Handbook of Applied 
Cryptography, CRC Press, Boca Raton, 
1997. 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：李正吉 計畫編號：99-2221-E-030-022- 
計畫名稱：一個具效率且安全的三方金鑰交換協定機制 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 1 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 9 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 6 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
本計畫之成果已發表在 SCI 等級之期刊上，除此之外，在此計畫補助下，99 學年度共發
表了 6 篇 SCI 期刊, 1 篇 EI 期刊, 2 篇國際期刊, 及 6 篇國際會議論文，也有數篇論
文投稿 
至優良國際期刊。 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
隨著電腦通訊與網路技術的發展，三方與多方通訊已逐漸成為網路安全上的重要研究主
題。三方金鑰交換協定的運作環境是任意兩個使用者透過可信任且具認證能力的伺服器能
在不安全的網路上交換保密且可認證的資訊。在一般的三方金鑰交換協定裡，兩個使用者
預先和可以信任的伺服器分享他們自己的簡單容易記憶的密碼。接著透過伺服器的協助能
認證這兩位使用者並且在認證之後建立一把會議金鑰(session key)，只有合法的使用者
可以去認證並且建立這把會議金鑰。然而這種三方金鑰交換協定容易受到通行碼猜測攻擊
(password guessing attack)。因為人類的記憶力有限，使用者通常會選擇容易記憶的字
串來當作密碼，這代表著密碼的選擇空間是相對小到駭客可以在很短的時間內就全部搜
過。從 1995 年到現在已有許多的三方金鑰交換協定被提出來，這些已發表的三方通行碼
驗證金鑰交換協定(three-party protocol for password-based key exchange)，有些都
是使用伺服器的公開金鑰來加密密碼以防止通行碼猜測攻擊。雖然使用公開金鑰加密系統
可以簡化協定的設計及方便協定的安全分析，然而卻也另外增加了使用者驗證或儲存此公
開金鑰的負擔與不便。近年來，許多學者提出不需使用伺服器公開金鑰的三方金鑰交換協
定，可是隨後被其他的學者發現這些不需使用伺服器公開金鑰的三方金鑰交換協定會遭受
不可偵測的線上通行碼猜測攻擊(undetectable on-line password guessing attacks)，
