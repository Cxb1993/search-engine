 1 
行政院國家科學委員會補助專題研究計劃 
下一代多層級多媒體應用服務匯流網路-總計畫：下一代多層級多媒體應用服務
匯流網路(3/3) 
Next Generation Multi-layer Multimedia Service Convergence Network 
 
計畫編號：NSC 96-2221-E-002-158 
執行期限：96年8月1日至97年10月31日 
計畫主持人：國立臺灣大學電信工程研究所 蔡志宏 教授 
共同主持人：國立臺灣大學電信工程研究所 張時中 教授 
國立臺灣大學電信工程研究所 林宗男 副教授 
國立臺灣大學資訊管理學系 孫雅麗 教授 
 
一、中英文摘要 
隨著資訊科技的進展，網際網路傳輸
的內容早已由文字進展至多媒體，並包含
語音及視訊，多媒體應用與通訊服務的整
合需求已成為未來科技的研發指標。可是
現有網際網路及未來無線網際網路在速
度、品質及安全上仍有很大改善空間，支
援 QoS 服務仍是一大挑戰。 
本計畫所提之研究題目，〝下一代多
層級多媒體服務匯流網路〞乃針對多重服
務下 QoS 保障及資源管理的挑戰而訂，
以應付未來無線/有線寬頻網路，快速進
展的串流多媒體，以及固定/行動服務匯
流趨勢。 
雖然議題眾多，我們仍選擇幾項重點
基礎技術項目投入，為解決無線網狀網路
的 QoS 需求，我們研究其多媒體服務之
移動及資源管理；為使內容傳遞之疊加網
路有效運用資源，我們投入研究其關鍵先
進技術；有效率共享頻率及共享骨幹寬
頻，我們建議採用可重組及支援 QoS 之
服務匯流網路架構；最後我們將整合服務
及計算資源之分散式視訊偵搜網路訂為
應用層之典型應用加入研究。 
關鍵詞：無線網狀網路、多媒體服務、 
資源分配、疊加網 
 
Abstract: 
As the rapid development of 
information technologies, the transmission 
contents over the Internet change from pure 
text to multimedia data, including VoIP and 
video. The integrating need of multimedia 
application and network communication 
services has become the guide of the future 
technology developments. However, the 
existing Internet architecture and the 
emerging wireless Internet still has some 
improvement space considering the 
transmitting speed, quality of service, and 
security. Supporting Quality-of-Service 
(QoS) in the Internet remains a very 
challenging task. 
The proposed research topic, the Next 
  3 
2.1.2.1 The k=1 Model 
A number of studies on wired networks 
[2][3][4] address the TCP performance 
problem caused by network asymmetry. In 
wireless mesh networks, if the data and 
ACK flows take the same route, the 
asymmetric bandwidth requirements of TCP 
data and ACK packets must be considered. 
If the bandwidth is not properly allocated 
between the data and ACK packets, ACK 
clocking and data packet flow could easily 
be disrupted. 
We use a normalized bandwidth ratio, 
k, with a delay-ack factor d1 to model the 
bandwidth requirements of TCP data and 
ACK flows [4][5]: 
 dL
L
C
Ck
data
ACK
ACK
data 1××=
          (1) 
where Ci and Li are the bandwidth 
allocation and the length of type i packets, 
respectively. The value of k is important in 
ensuring that TCP self-ticking is not 
blocked. For example, in a 10 Mbps 
forward channel carrying 1000-byte data 
packets and a 100 kbps reverse channel 
carrying 40-byte ACKs, assuming d=1, k’s 
value will be 4. In other words, if there is 
more than one ACK for every four data 
packets, a slower reverse channel for ACKs 
will become saturated before the forward 
(data) channel does. As a result, the sender 
would clock out data at a slower rate 
thereby slowing down the growth of the 
congestion window. This, in turn, would 
reduce the throughput of the TCP data flow. 
                                                 
1
 One ACK is sent for every d data packet received. 
In addition, the corresponding buffer of the 
reverse link will quickly fill up with ACK 
packets and a buffer overflow may cause 
serious ACK drops. TCP behaves normally 
when k is less than or equal to one. For k < 
1, TCP ACK flow is allocated more 
bandwidth than it needs;, thus, the 
bandwidth is not fully utilized. To 
summarize,  
 k > 1: fast data, but slow ACK; 
 k < 1: slow data and slow ACK; 
 k = 1 (the best allocation) 
We apply the k=1 requirement for 
scheduling and time slot allocation to each 
directional wireless link in order to achieve 
the sleek flow of data and ACK packets on 
a TCP connection. 
 
2.1.2.2 Channel Access Scheduling and 
Time Slot Assignment 
To construct a sleek delivery environment 
for TCP, we also consider the number and 
type of the TCP flows on each directional 
wireless link during channel access 
scheduling and time slot assignment.  
Assume that an N-hop wireless chain 
network is a directed graph ),( EVG = , 
where in which each node has one radio 
interface with identical settings. There are 
N persistent TCP NewReno connections, 
where the ith TCP flow if   starts from the 
ith sending node and ends at the (N+1)th 
receiving node. The size of the data and 
ACK packets size of each TCP flow are 
identical. Assume Let the transmission and 
interference ranges be one hop and two 
hops away from a node, respectively. Then, 
  5 
non-conflicting constraint. Once the set of 
the non-interfering scheduling groups is 
obtained, slots are assigned to each group in 
a random order. After the assignment, each 
directional wireless link marks the time 
slots allocated for its transmission in a 
frame. 
 
2.1.2.4 Link Layer Retransmission 
Spatial TDMA scheduling eliminates the 
performance degradation caused bydue to 
the channel access contention and 
interference problems. However, wireless 
networks are error-prone. In this work, we 
employ a link-layer retransmission scheme 
to recover packets lost due to a transmission 
bit error on a wireless link. A link-layer 
acknowledgement is sent after each 
transmission of TCP data or an ACK packet. 
A lost packet is retransmitted until a 
link-layer acknowledgement is received or 
the retry attempts exceed the maximum 
limit, which is set to eight in the 
simulations. 
 
2.1.3 結果與討論 
We now evaluate the performance of the 
proposed TCP-sleek spatial TDMA 
scheduling scheme via simulations using 
QualNet. Both long-lived and short-lived 
TCP flows are considered. The simulation 
environment is a six-hop wireless 
network.  For long-lived TCP flows (e.g., 
file transfers), a TCP connection is initiated 
at each wireless router and ends at the 
rightmost node. For short-lived TCP flows 
(e.g., web browsing), we consider data 
transfer with a maximum of nine segments, 
i.e., 13.5 KB, for a maximum transfer unit 
(MTU) of 1.5 KB [6]. Multiple TCP flows 
are generated continuously and traverse 
different numbers of hops. The throughput 
performance metric used for short-lived 
flows is the number of successfully 
completed TCP connections per second. 
 
2.1.3.1 TCP-sleek Spatial TDMA 
Scheduling 
We compare the proposed TCP-sleek spatial 
TDMA scheduling scheme with the k=1 
/* Algorithm: construct non-conflicting scheduling groups of directional wireless 
links */ 
V’ = the set of vertices of weighted contention graph G’ 
g = 0; /* initial group number index */ 
while V’ is not empty { 
    select the vertex with the largest weight v’ from V’; 
    g++; Sg = Sg + {v’};  V’ = V’\{v’}; 
    U’ = V’; 
    while U’ is not empty { //perform “piggybacking” 
        if vertex u’ with the largest weight in U’ 
         does not conflict with any vertex in Sg  
          Sg = Sg + {u’}; V’ = V’\{u’};  
       U’ = U’\{u’}; 
     } 
} 
Fig. 1. The algorithm for partitioning weighted directional wireless links into non-conflicting 
scheduling groups  
 
  7 
In contrast, with link-layer retransmission, 
the TCP performance only degrades slightly 
when the packet loss rate increases. We also 
consider the problem of severe unfairness 
between long-hop and short-hop TCP flows 
in terms of sharing bandwidth. Although the 
overall throughput with link-layer 
retransmission is less than that without 
link-layer retransmission when the packet 
loss rate is less than 0.05, the unfairness 
between long- and short-hop TCP flows is 
reduced substantially. 
(a) Throughput
(b) Sequence Number for Six-hop Flow
Fig. 3. The performances of long-lived TCP flows 
with and without link-layer retransmission for 
p=0.05 
w/o Link-layer Retransmission
with Link-layer Retransmission
Fig. 4. The overall throughput performances under 
different packet loss rates 
2.1.3.3 Conclusions 
We have studied the problem of severe 
unfairness between long-hop and short-hop 
TCP flows in terms of bandwidth sharing in 
wireless mesh networks. To address this 
problem, we propose a TCP-sleek spatial 
TDMA scheduling scheme based on the k=1 
model, which ensures the sleek end-to-end 
flow of data and ACK packets for each TCP 
connection along a wireless path,. The 
scheme also considers the number and type 
of TCP flows on each directional wireless 
link during channel access scheduling and 
time slot assignment. We show that the 
proposed scheme combined with link-layer 
retransmission can effectively hide local 
transmission errors from the end-to-end 
TCP congestion control mechanisms. The 
simulation results demonstrate that our 
scheme substantially reduces the negative 
effect of multi-hop wireless transmission on 
TCP, and achieves high overall and 
individual TCP throughput performances. 
 
2.2 子計畫二：下一代多層級多媒體服務
匯流網路之疊加層網路關鍵技術 
2.2.1 研究目標 
In summary, our objectives are stated as 
follows: 
 Survey and study the related papers 
about network topology and random 
graph. 
 Extend the random graph model to 
calculate the number of vertices at any 
distance. 
 Use the resulting model to evaluate the 
performance of the existing search 
algorithms. 
 
2.2.2 研究方法與步驟 
 
2.2.2.1 Related Works 
Previous works about search algorithms 
  9 
based on some performance metrics, 
including the guaranteed search time, query 
hits, query messages, success rate, and 
search efficiency. 
Let G0(x) be the generating function for 
the distribution of the vertex degree k. G0(x) 
can be represented as 
( ) ∑
=
=
m
1  k
k
k0 xp  xG  (5) 
where pk is the probability that a random 
chosen vertex in the graph is k, and m is the 
maximum degree. For a power-law random 
graph with the degree exponent τ, pk is 
proportional to k-τ [21]. That is, 
τ-
k k  p ∝ . (6) 
Based on the generating function, the 
average degree of a randomly chosen vertex 
is given by 
( )1G'  kp  k  z 0
m
1  k
k1 ==><= ∑
=
. (7) 
   Now we analyze the degree distribution 
of the vertex when we randomly follow an 
edge. A random edge arrives at a vertex 
with probability proportional to the degree 
of that vertex [22], i.e., 
kk kp  q ∝ . (8) 
The normalized distribution that a random 
edge arrives at a vertex is given by 
( )
( )1G'
xG'
x  
kp
xkp
0
0
k k
k
k
k
=
∑
∑
 (9) 
    When we want to count the number of 
outgoing edges from the vertex we arrive at, 
the edge that we just come on should not be 
included and we need to divide it by one 
power of x. Hence the number of new 
neighbors encountered on each step of a 
random walk is given by the generation 
function 
( ) ( )( )1G'
xG'
  xG
0
0
1 =  (10) 
where ( )1G'0  is the average degree of a 
randomly chosen vertex as mentioned 
above. 
    The generating function for probability 
distribution of the number of second-nearest 
neighbors of the original vertex can be 
written as G0(G1(x)) in the limit of large N 
(N is the network size). Hence, the average 
number z2 of second neighbors is 
( )( ) ( ) ( )1G 1G  xG G 
dx
d
  z '1
'
0
1  x
102 =





=
=
 (11) 
where ( )1G'1  is the average outgoing degree 
of vertices arrived by a randomly chosen 
edge. According to [22], the following 
approximations are obtained. 
( ) ( )τ
τ
 - 2'
0 m - 1 2 - 
1
  1G ≅  (12) 
and 
( ) ( ) τ
τ
 - 3
m
 
1G
1
  1G
 - 3
'
0
'
1 ≅  (13) 
assuming 2 < τ < 3. 
 
2.2.2.3 Performance Metrics 
 Success Rate (SR) 
Success rate is the probability that the query 
is success, i.e., there is at least one query hit. 
Assume that the queried resources are 
uniformly distributed in the network with 
replication ratio R, and then SR can be 
calculated as 
( )CR - 1 - 1  SR =  (14) 
where R is the replication ratio and C is the 
coverage. This formula shows that the SR 
highly depends on the coverage of the 
search algorithms. Following we use 
  11 
MBFS. In this case the GST would be the 
shortest. However, it would generate a huge 
amount of query messages. The tradeoff 
between the search performance and the 
cost should be taken into consideration. In 
the following paragraphs, we further 
analyze the number of query hits and the 
number of query messages, and further 
combine these metrics into a unified metric, 
search efficiency. 
 Query Hits (QH) 
The number of query hits highly depends on 
the coverage, i.e., the number of total 
visited nodes. Assume that the queried 
resources are uniformly distributed with 
replication ratio R in the network, and the 
coverage is C; hence the number of query 
hits is RC. The coverage C can be regarded 
as the summation of the coverage at each 
hop. Therefore, we first analyze the 
coverage Ch at the hth hop. Let Vh be the 
event that a vertex is visited at the hth hop.  
Suppose the probability that the vertex i is 
visited at the hth hop is Pi(Vh). When the 
hop count h = 1, Ch is the expectation of the 
vertices that are visited at the first hop.  
When the hop count h is larger than 1, the 
calculation of Ch should preclude the event 
that the vertex has been visited in the 
previous hop. Therefore, the coverage Ch at 
the hth hop can be written as 
( )
( )[ ] ( )







≥⋅
=
=
∑∏
∑
= =
=
2  h for ,VP  VP - 1
1  h for ,VP
  C N
1  i
1 - h
1 j 
hiji
N
1  i
hi
h  (23) 
where N is the total number of vertices in 
the network. 
    Following we analyze the visiting 
probability Pi(Vh) for flooding, MBFS, RW, 
and DS, respectively.  First we consider 
the flooding and MBFS case. The visiting 
probability Pi(Vh) of flooding or MBFS is 
( ) ( )( )[ ]



≥⋅⋅
=⋅⋅
=
2  h for ,1G  p  p - 1 - 1
1  h for ,1G  p  p
  VP
1 - hC'
1i
'
0i
hi  (24) 
where pi is the probability that vertex i is to 
be reached by certain edge. [23] shows that 
pi can be written as 
∑
=
=
N
1  i
1
1
i
im
im
  p
τ
τ
 (25) 
where τ is the power-law exponent and m is 
the maximum degree. 
    When considering RW, we first 
calculate the probability that a vertex i is the 
candidate of RW. 
( ) ( )( )[ ]



≥⋅
=⋅
=
2  h for ,1G  p - 1 - 1
1  h for ,1G  p
  RP
1 - hC'
1i
'
0i
hi  (26) 
Then, the average number of candidates of 
RW at hop h is 
( )∑
=
=
N
1  i hih
RP  r  (27) 
Hence, the probability that vertex i is visited 
at hop h for RW is 
( ) ( )














⋅=
k
h
hihi r
1
 - 1 - 1  RP  VP  (28) 
where k is the number of walkers. 
    The calculation of visiting probability 
Pi(Vh) for DS depends on the relation 
between h and n. When h ≦ n, Pi(Vh) is 
given by equation (). When h ＞  n, 
equation () to () are used to get Pi(Vh), 
where the k in () is set as Cn, i.e., the 
coverage at the nth hop. Therefore, the 
visiting probability Pi(Vh) of DS is given by 
  13
This is because that the cost grows 
exponentially with the path length between 
the query source and the target. On the 
contrary, the SE of RW is better than that of 
flooding when the hop is 5 to 7. When n is 
set as 2, DS gets the best SE for almost all 
hop counts. This figure shows that the 
choice of parameter n can help DS to takes 
advantage of different contexts under which 
each search algorithm performs well. 
In order to obtain the best (n, p) 
combination, we illustrate the (n, p, SE) 
results in Fig. 6. When p is large (0.7 ~ 1), 
set n = 2 would get the best SE. Moreover, 
the best n value increases as the p decreases.  
For example, when p is set as 0.2, the best n 
would be 5. This is because that when p is 
small, n should be increased to expand the 
coverage. On contrary, when p is large, n 
should be decreased to limit the growth of 
query messages. Therefore, the parameters 
n and p provide the tradeoff between the 
search performance and the cost. This 
figure shows that the best SE is obtained 
when (n, p) is set as (2, 1). 
We show the numerical results of GST 
in Fig. 7. Replication ratio R is set as 0.01 
in this case. Similar results can be obtained 
when R is set as other values.  The number 
of walkers k for RW are set as 1 and 32. 
The decision thresholds n are set as 2, 3 and 
7, and p is set as 1. TTL is set as 7 in this 
case, thus the DS with n = 7 is equal to 
flooding. From this figure DS with large n 
always gets the short GST because it always 
covers more vertices. On the contrary, RW 
with k = 1 always gets the longest GST 
since its coverage is only incremental by 
one at each hop. When k is set as 32, its 
coverage is enlarged and the GST can be 
improved. However, DS still performs 
better than RW with 32 walkers even when 
n is set as only 2. Note that when n is set as 
3, DS performs as well as that with n = 7, 
i.e., flooding, while does not generate so 
many query messages. 
In summary, DS with n = 2 and p = 1 
would get the best SE and significantly 
improve the GST. While increasing n to 3, 
although SE is a little degraded, the shortest 
GST is obtained. 
 
Fig. 5. SE vs. hop count when p is set as 1 and n is 
changed from 1 to 7. When n is set as 2, DS gets the 
best SE for almost all hop counts. 
 
Fig. 6. The effects of the parameters (n, p) on the SE.  
The best SE is obtained when (n, p) is set as (2, 1). 
  15
In the project, we propose a new load 
index which takes into account of the defer 
time during the contention and the average 
transmission overhead evaluated via a 
probabilistic model. STAs are allowed to 
associate with an AP dynamically and the 
distributed load-balancing algorithm can be 
executed by all APs to reach better load 
balancing in a large and congested Wireless 
Local Area Network (WLAN) environment. 
 
2.3.2 研究方法與步驟 
In this section, we propose a generic 
model for multiple MVNOs to share the 
bandwidth of a single provider. In addition, 
we also derive the formulas of the dynamic 
programming algorithm for the bandwidth 
provider to maximize its total revenue. 
 
2.3.2.1 System Architecture 
The assumed system architecture is as 
shown in Fig. 8. There are three basic 
components in our wireless network, 
namely STAs, APs, and routers. A subnet 
consists of a router and APs connected with 
this router. Alternatively, we can combine 
the function of AP and router to form an 
AP-Router, or replace the AP by a wireless 
switch, and they are also functional in our 
model. Each STA can associate with one AP 
at one time. The circle centered by an AP is 
the coverage of the AP. In order to simplify 
our model, we assume the transmission 
power and the coverage of all APs are the 
same. Each AP would be connected with a 
router by wired line. The wired network can 
be 10/100 Mbps Ethernet or others, and we 
assume that the bottleneck of this network 
is located in wireless. In Fig. 1, routers 
connect to a gateway router in order to 
access the Internet. 
We assume each STA is equipped with 
an agent that scans all channels actively by 
its Network Interface Card (NIC) and 
periodically sends the Association 
Information to AP which it associated with 
at present. We call the AP as the serving_AP 
and an example of Association Information 
is shown in Table 2. All APs have the same 
capacity and are operating in infrastructure 
mode. By the reason of simplification, we 
assume that all the channels of APs are 
non-overlapped and independent, e.q. 
channel 1, 6, 11 in 802.11b or 12 channels 
in 802.11a. 
SSID RSSI Channel BSSID (AP MAC address) 
Lab554 70% 6 00:05:5d:da:ac:a8 
ntu 33% 1 00:30:65:15:46:38 
CSIE 20% 11 00:30:65:05:55:98 
Table 2. An Example of the Association Information. 
The function of a router is shown as Fig. 
9. Routers would collect the traffic load of 
each STA and send the load index 
periodically to the AP which this STA is 
associated with in its subnet. Because of 
distributed property of our architecture, if 
the AP receives the traffic load of each STA, 
it will compare the new load level with old 
one and determine whether it has to forward 
to neighbor APs if some data is changed. 
This information will be used for load 
balancing. 
  17
when Ai has occurred. We can illustrate the 
corresponding state transition as in Fig. 11. 
Where SD1 is initial state of transmission, 
and Success or Fail denotes as successful 
transmission state or failure transmission 
state respectively, and they are absorption 
states of transmission. And we denote the 
Data Error Rate and the ACK Error Rate as 
DER and AER respectively. Furthermore, 
we could compute the actual transmission 
time which excludes back-off and spacing 
time in IEEE 802.11 standard, for a DATA 
packet, TD. 
Fig. 11. State Transitions within a Transmission 
Cycle. 
According to Fig. 11, we could 
compute a transmission cycle time, denoted 
as T, via a probabilistic model. The notation 
P(E) is probability of the event E such as Di 
or Ai. From definition of Di, D1 is the initial 
event and P(D1) equals 1 apparently. And 
the expected transmission cycle time, E(T), 
can be compute via the following equations. 
1( ) 1P A D E R= −  
1 1
1 1
( ) ( 1 )* ( )
              ( 1 | )* ( )   i {2,3,4}
i  i i
 i i
P D P i  th ACK iserror | A P A
P i  th DATA iserror D P D
− −
− −
= −
+ − ∈
 
( ) ( | )* ( )   i {2,3,4}i i iP A P  i th DATA is correct D P D= ∈  
[ ]41
2
( ) * ( ) * ( ) * ( )D A D i A i
i
E T T T P A T P D T P A
=
= + + +∑  
where P( i-1 th ACK is error | Ai-1) is the 
conditional probability if (i-1)-th ACK is 
error when the (i-1)-th ACK has been 
transmitted in a transmission cycle and the 
probability is equal to AER, P(Error | Di-1) 
is equal to DER ,and similarly P(Correct | 
Di-1) is equal to 1-DER . 
Using the equations mentioned above, 
we can analyze the expected transmission 
cycle time E(T) of each DATA from every 
STA if p and Rate are known. In our model, 
we assume p and Rate are fixed and known. 
Therefore we define the load index for each 
STA is the ∑Ej(T) when there are j 
transmissions in a load balance period. 
Because the loading of an AP can be 
approximately a function of the total 
transmitted data sizes and the numbers of 
active STA in its subnet, we cannot just 
analyze AP’s loading by summing up the 
transmitted bits of STAs. We use the 
Network Simulation version 2 (NS2), a 
network simulator tool, to help us determine 
the defer time overhead of AP. 
 
2.3.3 結果與討論 
We introduce a simulation model to be 
implemented via the C language and use 
simulation to validate the performance of 
the proposed algorithm. 
 
2.3.3.1 Simulation Model 
RSSI is a measurement of the power 
present in a received radio signal. It is 
treated as the association criterion in 
  19
in the room randomly with uniform 
distribution. And the STAs would choose 
the AP to associate with, using the 
maximum RSSI criterion at the beginning. 
There is at least one AP which can be 
associated for each STA. All APs have their 
own application and all traffic would pass 
through the 4 APs by the pure IEEE 
802.11b. 
 
2.3.3.3 Scenario for Web Traffic and VoIP 
Traffic with Random Waypoint Model [30] 
In this section, we combine the Web and 
VoIP traffic into our simulation and verify 
the performance the DAWLOB when there 
are two types of different traffics. In 
addition, we also add a mobility model into 
VoIP traffic to better fit the practical 
situation. 
As shown as Fig. 13, we illustrate the 
number of on-going calls if DAWLOB is 
not used. From Fig. 13, we can find out the 
number of calls are totally unbalanced 
during the simulation. Comparing Fig. 14, 
the numbers of on-going calls with 
DAWLOB, the number of average on-going 
calls is almost maintained at the value of 
about 5 calls. The small fluctuation in Fig. 
14 represent the load-balancing algorithm is 
work in every Load Balance Period. 
 
Fig. 13. No. of On-going Calls v.s. Simulation Time 
for 4 APs and the network when DAWLOB is 
inactivated in VoIP .Simulation. 
 
Fig. 14. No. of On-going Calls v.s. Simulation Time 
for 4 APs and the network when DAWLOB is 
activated in VoIP Simulation. 
 
2.3.3.4 Comparisons with the User-based 
Load Index Algorithm 
In this section, we would compare the 
system performance under two algorithms: 
DAWLOB and the user-based load index 
algorithm. The user-based load index is a 
common load indicator of an AP, and it 
employs the number of users as the load 
index of an AP. There are 40 web users and 
  21
the sake of simplification, we assume all 
frequencies and channels are different. The 
unlicensed ISM band defined by ITU-R has 
only provides a few independent channels 
for wireless LAN usage. If many APs are 
deployed in a large place using 2.4 GHz 
WLAN, we have to consider the 
interference generated from all APs. How to 
control the transmission power of each AP 
to maximize coverage and minimize 
interference is a trade-off problem. In the 
proposed DAWLOB or reverse 
load-balancing algorithm, frequency band 
planning is also an open issue. 
In addition, the proposed DAWLOB is 
designed from the administrator’s viewpoint. 
How to provide individual user the 
incentive to follow the association guidance 
should be an interesting topic for further 
study. 
Last but not least, to adapt in different 
wireless environments, such as the WiMAX, 
the bandwidth estimation methods should 
be improved. 
 
2.4 子計畫四：分散式視訊偵搜所需整合
性網路與計算服務之研究 
2.4.1 研究目標 
The goal of the 3rd year research aims 
at designing the methodology and the 
associated system to command the peers of 
a mobile video surveillance network to 
establish a connection covering the target, 
static or moving, with minimum moving 
energy consumption that provides and 
maintains streaming video of the target 
from the image taking peer  to the 
requesting peer. 
 
2.4.2 研究方法與步驟 
2.4.2.1ICCP and TSSA 
To command peers moving and sense the 
target movements, we add two new function 
modules to the application layer: command 
block and surveillance block to plan a path 
to cover the target and to assign the 
coverage and relay mission to proper peers 
by moving peers or handoff to peers based 
on the movement information of the target. 
To model the problem of path planning for 
establishing video surveillance coverage 
and connection, we first formulate a 
mathematical model of the Initial Coverage 
and Connection Problem (ICCP). The 
model takes communication coverage and 
the constraints of moving path into 
consideration to minimize moving energy 
consumption. There are three decision 
variables:  (1) numbers of active peers, (2) 
desired locations of peers and (3) pair 
variables. We propose a two-stage solution 
algorithm (TSSA) to solve ICCP. Stage 1 
decides numbers of active peers and stage 2 
determines the desired locations of the 
active peers and peer-location assignment. 
To address the problem about how to 
maintain a video connection as the target 
moves, we propose a mechanism which 
includes information exchange, mission 
handoff and Dynamic Adjustment Peers 
Location Algorithm (DAPLA). The main 
concepts of the algorithm are repetitively 
predicting target’s next location, refreshing 
neighborhood information to do the mission 
handoff and solving ICCP by TSSA.  
 
  23
 
Fig. 24 動態調整節點位置演算法邏輯流程圖 
 
三、參考文獻 
[1] L.-P. Tung, T.-C. Cho, Y. S. Sun, M. C. Chen, 
and W. Shih, “TCP throughput enhancement 
over wireless mesh networks,” IEEE 
Communications Magazine, vol. 45, no. 11, Nov. 
2007, pp. 64-70. 
[2] H. Balakrishnan, V. N. Padmanabhan, and R. H. 
Katz,“The effects of asymmetry on TCP 
performance,” Proc. ACM/IEEE MobiCom 1997, 
Budapest, Hungary, Sept. 1997, pp. 77-89. 
[3] S. Varma, “Performance and buffering 
requirements of TCP applications in asymmetric 
networks,” Proc. IEEE INFOCOM 1999, New 
York, NY, USA, March 1999, pp. 1548-1555. 
[4] T. V. Lakshman, U. Madhow, and B. Suter, 
“Window-based error recovery and flow control 
with a slow acknowledgement channel: a study 
of TCP/IP performance,” Proc. IEEE 
INCOFOM 1997, Kobe, Japan, April 1997, pp. 
1199-1209. 
[5] W. Liao, “The behavior of TCP over 
DOCSIS-based CATV networks,” IEEE Trans. 
on Communications, vol. 54, no. 9, Sept. 2006, 
pp. 1633-1642. 
[6] M. Melia, I. Stoica, and H. Zhang, “TCP model 
for short mived flows,“ IEEE Communications 
Letters, vol. 6, no. 2, Feb. 2002, pp. 85-87. 
[7] K. Sripanidkulchai, “The popularity of Gnutella 
Queries and its Implications on Scalability,” 
white paper, Carnegie Mellon Univ. Pittsburgh, 
Feb. 2001. 
[8] M. Jovanovic, F.Annexstein, and K. Berman, 
“Scalability Issues in Large Peer-to-Peer 
Networks: A Case Study of Gnutella,” Tech. 
Report. Univ. of Cincinnati, Lab. For Networks 
and Applied Graph Theory, 2001. 
[9] B. Yang and H. Garcia-Molina, “Improving 
search in peer-to-peer networks,” in 
Proceedings of the 22nd International 
Conference on Distributed Computing Systems 
(ICDCS’02). Vienna, Austria: IEEE Computer 
Society, pp. 5–14, July 2002. 
[10] G. Kan, “Gnutella,” Peer-to-Peer Harnessing 
the Power of Disruptive Technologies, O’Reilly, 
pp.94-122, 2001. 
[11] C. Gkantsidis, M. Mihail, A. Saberi, “Random 
Walks in Peer-to-Peer Networks,” in 
Proceedings of IEEE INFOCOM, pp. 120-130, 
2004. 
[12] V. Kalogeraki, D. Gunopulos, and D. 
Zeinalipour-Yazti, “A local search mechanism 
for peer-to-peer networks,” in Proceedings of 
the 2002 ACM CIKM International Conference 
on Information and Knowledge Management, 
McLean, Virginia, USA, pp. 300–307, 
November 2002. 
[13] Z. Zhuang, Y. Liu, L. Xiao, and L. M. Ni, 
“Hybrid periodical flooding in unstructured 
peer-to-peer networks,” in Proceedings of the 
32nd International Conference on Parallel 
Processing (ICPP’03). Kaohsiung, Taiwan: 
IEEE Computer Society, pp. 171–178, October 
