 2
要關鍵，Myrinet 已是相當成熟的產品，其成
本合理，傳輸效能高，可提供一個效能極佳的
網路環境。此外叢集電腦建立的平行分散式系
統其計算的能力已能逼近甚至超越超級電
腦，使得叢集電腦將是發展平行計算環境的重
要方向之一。特別在高效能與花費的考量下，
叢集電腦將是最佳的選擇。 
Shu[7]隨著個人電腦產業的成熟、高速網
路的發展，個人電腦叢集已漸被利用來處理需
大量計算之工作。光跡追蹤成像法即屬於這種
需要大量計算工作，雖其可以描繪出相當真實
的三為影像，但也由於需做各光線與全部物體
的交差判定及找出最靠近視點的交點，會耗費
大量計算時間。故藉由多台電腦所組成的電腦
叢集共同工作，能更進一步達到加速處理的目
的。 
 
三、平行化三維體積描繪方法 
 
我們的研究，是利用四台個人電腦在 Myrinet
通訊架構的環境下，透過 WMPI 來做為平行處
理的資料傳遞介面，加速讀取並處理體積資
料，並將圖片顯示出來。其中分析使用單機處
理、二台及四台平行處理的過程，比較各部份
處理的時間關係。本研究中，電腦讀取三維體
積資料後，處理的過程主要分為四個部份，資
料分割、三維資料前置處理、光跡追蹤、資料
的合併，最後產生影像。系統架構如圖一所示。 
系統第一個步驟是讀取 DEN 檔案資料。
DEN 檔案是由許多二維平面圖所堆疊而成，每
張平面圖是經過正規化之後的斷層掃描片。接
著進行資料分割的部份。 
在資料分割部分，首先是建立 K-D 樹。
因為我們採用平行處理來加快處理時間，而執
行平行處理需要將原始體積資料分割成許多
部分體積資料，再將這些部分體積資料送至各
台電腦做處理。使各台電腦處理的工作量相
同，在平行處理的環境下同步作業，可節省整
體處理的時間。使用 K-D 樹分割法必須符合
n2 次方，例如將 DEN 檔利用二台電腦來做處
理，需要分割一次、四台電腦則要分割二次、
八台電腦則要分割三次、以此類推。分割時，
第一次分割 X 軸，第二次分割 Y 軸，第三次分
割 Z 軸，依照此順序往下分割並傳送至每台電
腦。圖二是以八台電腦為例的 K-D 樹分割法。
接著便是將分割後的資料傳送至各電腦。之後
的處理，分為三維資料前置處理和光跡追蹤兩
大部份。 
 
 
圖一 系統架構圖 
 
 
圖二 K-D 樹分割法 
 
在三維資料前置處理部分，首先是做光源
的初值設定和計算光源單位向量。人類觀察物
體的影像，必須要有光照到物體，將物體的影
像反射回眼睛。在電腦中也是一樣，必須在三
維立體空間內，設定光源座標，計算光源的單
位向量，才能做物體的描繪、表面效果、陰影
等等的處理。當光源照射到物體表面時，會出
現三種情形。首先，光可以透過物體表面向空
間反射，產生反射光。其次，對於透明物體，
光可以穿透該物體並從另一端射出，產生透射
光。最後，一部分光被物體表面吸收。物體表
面的反射光和透射光，決定了物體所呈現的顏
色。簡單來說，反射光和透射光的強弱決定了
 4
'
'
'
0 0 0
0 0 0
0 0 0
0 0 0 1 11
x
y
z
S xx
S yy
S zz
⎡ ⎤ ⎡ ⎤ ⎡ ⎤⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎢ ⎥ ⎢ ⎥ ⎢ ⎥=⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎢ ⎥ ⎣ ⎦ ⎣ ⎦⎣ ⎦
        (3) 
 
其中 xS 、 yS 、 zS 分別是沿著 X、Y、Z 軸方向
放大縮小的比例。 
最後是旋轉(Rotation)的部份。旋轉分為繞
著 X 軸、Y 軸、Z 軸旋轉，是將座標系的矩陣
乘上公式(4)的矩陣公式。其中 θ 為繞著軸旋轉
的角度大小。 
 
1 0 0 0
0 cos sin 0
0 sin cos 0
0 0 0 1
cos 0 sin 0
0 1 0 0
sin 0 cos 0
0 0 0 1
cos sin 0 0
sin cos 0 0
0 0 1 0
0 0 0 1
x
y
z
R
R
R
θ θ
θ θ
θ θ
θ θ
θ θ
θ θ
⎧ ⎡ ⎤⎪ ⎢ ⎥−⎪ ⎢ ⎥=⎪ ⎢ ⎥⎪ ⎢ ⎥⎣ ⎦⎪⎪ −⎡ ⎤⎪ ⎢ ⎥⎪⎪ ⎢ ⎥=⎨ ⎢ ⎥⎪ ⎢ ⎥⎪ ⎣ ⎦⎪ −⎪ ⎡ ⎤⎪ ⎢ ⎥⎪ ⎢ ⎥=⎪ ⎢ ⎥⎪ ⎢ ⎥⎪ ⎣ ⎦⎩
        (4) 
 
接著是立方體標記法。由於光跡追踨法會
由觀測平面發射一條射線作追蹤。當射線在逆
向追踨時，便是以立方體標記法判斷所追踨到
的點是否為三維體積資料本身的點抑或是體
積資料之外的點。在程式中我們以一個點為核
心，四周八個點所圍成的立方體，當射線所追
踨到的點的透明度大於零，就給這個立方體標
記為 1，代表這個立方體是體積資料本身的
點，如果透明度小於零，就給這個立方體標記
為 0，而這些所標記的點會在後面計算光跡追
踨時用到。 
接著是計算光線索引。當光跡追踨的射線
從物體的起點追踨到終點時，所追踨到的每個
點，稱之為樣本點，每個樣本點皆由 x、y、z
三個分量所組成。我們在這裡記錄每條光跡追
踨所追踨到的點 x、y、z 分量以便進行下個步
驟。 
完成上列光跡追蹤法前置處理後，接著是
計算光跡追蹤。光跡追蹤法是透過光的可逆
性，由觀測平面上的點，模擬光的行為發出一
條計算的射線，此射線會經由三維物體的平面
向內追蹤，決定是否來自另一個平面，或是另
一個點光源，並且收集所得到的能量，以表示
由觀測點所看到場景中的物體投射到觀測平
面上每一點的顏色資訊。光跡追蹤的光線不能
無止盡地追蹤下去，當追蹤的光線射出畫面，
或追蹤深度達到指定的層次時，就會停止追
蹤。要得到最後的顯像結果，必須追蹤觀測平
面上的每一個像素。光跡追蹤的公式如公式(5)
所示。 
 
Cout=Cin(1-α)+Cα             (5) 
 
各個電腦處理完之後，將一開始分散至各
部份的體積資料，產生出各部份的圖像。預備
在下一步驟中做合併。 
系統的第四部份是資料的合併。由於使用
平行處理來加快執行的速度，我們使用 K-D 
樹將原始體積資料分割並傳送至各電腦做處
理，經過光跡追踨法的計算把三維體積資料轉
成二維的圖片，此時產生的圖片是不完整的，
我們採用二元交換法將其組合成完整的圖
片。如圖四所示，以四台處理器為例，主要分
成兩個步驟，步驟一，將處理器 P0、P1 的 A1
合併到 A0變成 A0+A1、B0 併到 B1 變成 B0+B1；
處理器 P2、P3的 A3合併到 A2變成 A2+A3、B2
合併到 B3變成 B2+B3；步驟二，再將 L2合併到
L0變成 L0+L2、R0合併到 R2變成 R0+R2；L3合
併到 L1變成 L1+L3、R1合併到 R3變成 R1+R3；
步驟一步驟二組合完，此時會產生各 4 分之一
(C0、C1、C2、C3)的圖片，組合起來就變成一
張完整的圖片。 
完成以上系統流程之後，最後便產生三維
影像的結果並且將其呈現出來。 
 
Step 1
Step 2
0P 1P 2P 3P
0A 1A 2A 3A
0B 1B 2B 3B
10 AA + 10 BB + 32 AA + 32 BB +
0L
1L
2L
3L
0R
1R
2R
3R
20 LL + 31 LL +
20 RR + 31 RR +0C 1C
2C 3C
0C 1C
2C 3C  
圖四 二元交換法 
 6
縮圖產生。 
(2)Show 功能按鍵：當按下此按鍵，本系統便
會開始處理所要觀看的 DEN 檔案，並且會一
張張以尺寸大小為 128 × 128 的縮圖，按照排
列順序顯示在 2D 的視窗上。舉例說明，當開
啟一個大小為 256 × 256 × 128 的 DEN 檔時，
表示該檔案大小為 256 × 256，一共有 128 張
圖。當系統在執行時，一方面會展示出該二維
影像全部的縮圖，另一方面在視窗上方以及配
置在旁邊的欄位也會同步顯示該檔案共有幾
張影像圖，其顯示方法如圖三所示。然後，當
我們點選其中一張縮圖時，便會在旁邊的
Picture 視窗上顯示其放大圖，以便於觀察。 
(3)Continuous：此功能鍵是三維資料視覺化系
統為了讓使用者能夠連續觀看所有的縮圖所
配置的功能，透過這個功能，產生類似動畫播
放的效果，讓使用者能除了單張看二維影像，
也能選擇經由這個功能來觀看二維影像動畫
播放的展示成果。 
(4)End 功能按鍵：此功能鍵與 Open File 功能
按鍵是 2D 和 3D 介面共用的配置按鍵。按下
此鍵則結束三維資料視覺化系統。二維影像展
示成果如圖三所示。 
 
 
圖八 三維資料視覺化系統之 2D 介面 
 
在三維資料視覺化系統的 3D 介面部分，
我們提供四大功能，讓使用者便於使用三維資
料視覺化系統。以下依據不同功能做簡述。 
(1)Rotate：可在移動滑動軸選擇想要旋轉的
X、Y、Z 軸各個角度值(−180 到+180)。 
(2)Scale：可以鍵入各軸方向的參數值，縮放 X
軸方向、Y 軸方向、Z 軸方向的縮放比例(0.1
到 2.0)。 
(3)Light：可以自行調整打光的角度(−2.0 到
+2.0)，當全部的參數值皆為 0 時，則 3D 介面
則產生全暗並且只會顯示物體本身的邊框輪
廓。 
(4)Opacity：分別輸入 MIN 和 MAX 的參數值
(0.0 到 1.0)，藉以改變原始三維影像的透明度。 
當各功能的參數值都經更改後，按下Rendering
按鍵，三維資料視覺化系統會開始做運算處
理，而後將處理完畢的三維影像輸出。透過圖
九，可以清楚了解本系統介面的配置。 
 
 
圖九 三維資料視覺化系統之 3D 介面 
 
 
圖十 3D 介面 Rotate 功能展示 
 
以圖十為例，是已經過旋轉參數值改變後
計算所得的三維影像旋轉圖，其中在右邊的功
能 鍵 裡 的 X-Continuous 功 能 按 鍵 、
Y-Continuous 功能按鍵、Z-Continuous 功能按
鍵也是如同二維影像展示成果一樣，分別以
X、Y、Z 為軸心，每十度作旋轉，最後產生出
連續播放的效果。 
 
圖十一 3D 介面 Scale 功能展示 
 
 8
 
0
0.5
1
1.5
2
2.5
3
3.5
1 2 4P=
Speedup
 
圖十六 512×512×512 平行處理效能之比較 
 
根據圖十九的圓餅圖以及圖十六的效能
比較圖，我們得知，分成越多台平行處理，在
資料分割以及資料合併的部份將會花費越多
的時間。在三維資料的處理和光跡追蹤的部
份，由於體積資料龐大，所花費的時間比例更
多。但是我們可以更加明顯地發現。由於這兩
部分分割給各機平行處理，整體處理的時間明
顯變得更短。效能提升的效果更加明顯。所以
我們可以證明，在處理越大型的的體積資料
時，將三維體積資料描繪加以平行處理，確實
可以有效地縮短整體處理的時間，而且效果將
會更明顯。另一點分析的結果就如前面所提，
在每台個人電腦配備相同的情況下，單機處理
實際上是無法運算 512×512×512 體積資料
的。我們雖然提升了單機處理時的電腦配置記
憶體，以求出數據方便做比較，但從這邊我們
也得知，二台主機以上的平行處理可以解決單
機無法運算的大型體積資料問題。 
 
五、結論 
 
本篇報告提出的平行化三維體積描繪法，分別
在單機、二台、四台個人電腦叢集下處理三種
不同大小的體積資料。根據上列分析我們得到
下列三個重要的結論。 
(1) 小型的體積資料，使用單機處理即可。由
分析 128×128×128 位元組體積資料的數據
得知，二台和四台平行處理在分割及合併
資料的地方花費太多時間。小型的體積資
料單機已經可以處理，使用平行處理反而
多此一舉，增加了處理時間降低效能。 
(2) 將三維體積資料描繪加以平行處理，確實
可以有效地縮短整體處理的時間。由分析
256×256×256、512×512×512 的體積資料得
知，利用平行處理的方式將中型或大型的
體積資料交給各機平行運算，明顯地降低
整體運算時間。而且處理越龐大的體積資
料，平行處理提升效能的效果將會越明顯。 
(3) 平行處理可以解決單機無法運算的大型體
積資料。由單機處理 512×512×512 的體積
資料所發生的硬體問題，我們得知，在相
同的硬體配備架構下，多機平行處理可以
解決單機無法處理的大型體積資料。 
以上三點結論，證明了平行處理在處理中
大型體積資料上，能夠確實提升處理效能，並
且可以解決大型體積資料在單機無法運算的
問題。而小型體積資料只要由單機處理即可。 
我們的研究是建立在微軟的 Windows 
2000 作業系統環境之下，未來希望能利用微軟
Windows 作業系統十分普遍的特性，推廣到其
他方面如醫學或者工業設計應用等等。同時我
們也期望將來把本研究方法，發展成在不同作
業系統下仍然可以溝通做平行處理。目前目標
則是希望將本研究的程式碼包裝起來，整合
成.NET 環境的函式庫，讓以後有需要的研究
者直接呼叫使用。配合微軟 Windows 作業系統
環境，使這方面的研究能夠更加深入推廣，發
展出更多方面的應用。 
 
七、參考文獻 
 
[1] 鄭思堂著, "3D 程式設計基本心法," 金禾
資訊, 2005. 
[2] 石南, "三度空間電腦繪圖基礎," 儒林圖書
公司, 1990, pp. 181-211. 
[3] 唐榮錫, "計算機圖學," 網奕資訊, 2005. 
[4] J. Gao, J. Huang, C.R. Johnson, and S. 
Atchley, "Distributed Data Management for 
Large Volume 三維資料視覺化 ualization," 
IEEE 三維資料視覺化 ualization 2005, 
2005, pp. 183-189. 
[5] Jen-Chih Yu, "Efficient Compositing 
Methods for the Sort-Last-Sparse Parallel 
Volume Rendering System on Distributed 
Memory Multicomputers," 碩士論文, 逢甲
大學資訊工程學系, 2001. 
[6] Shuen-Tai Wang, "A Study of 
Communication Mechanisms for System 
Area Network on PC Cluster," 碩士論文, 
逢甲大學資訊工程學系, 2002. 
[7] 許勝涵, "個人電腦叢集中光跡追蹤成像法
之平行化研究," 碩士論文, 長庚大學資訊
管理學系, 2001. 
[8] Don-Lin Yang, Jen-Chih Yu, and Yeh-Ching 
Chung, "Efficient Compositing Methods for 
the Sort-Last-Sparse Parallel Volume 
Rendering System on Distributed Memory 
Multicomputers," Proceedings of IEEE 
International Conference on Parallel 
