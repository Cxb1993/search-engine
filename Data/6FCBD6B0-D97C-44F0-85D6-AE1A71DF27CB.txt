testing tool, the difficulties of developing and 
executing test cases for Android applications can be 
greatly eased and the testing time and efforts can be 
significantly reduced. 
英文關鍵詞： Android, software testing, GUI testing, 
Capture/Replay testing tool 
 
 1 
報告內容 
 
一、 前言 
 
隨著Android[1]手機與平板電腦廣受市場的歡迎，Android應用程式的開發最近
幾年受到廣大的重視，2012年 9月 Google Play(前身為 Android Market)[2]已有近 70
萬支應用程式，累計有 250 億次的下載數。在 Android 作業系統的影響力日益增加
的情況下，預期 Android 應用程式的數目在未來還會大幅成長。然而，目前支援
Android 應用程式的測試工具仍不多，雖然開發人員可以利用單元測試工具，例如
JUnit，來協助單元測試，但是圖形使用者介面測試(GUI testing)或功能性的測試
(Functional testing)大都仍需依賴手動方式進行，使得測試 Android 應用程式的成本
與時間無法降低，並嚴重影響 Android 應用程式的品質。 
一般而言，圖形使用者介面與功能性測試大都利用錄製與重播(Capture/Replay)
測試工具來進行。錄製與重播測試工具允許測試人員將手動測試應用程式的操作過
程錄製下來，並轉換成測試腳本(Test script)，透過重播這些測試腳本，可以自動執
行測試，並節省手動測試的時間。特別是當應用程式修改後需要重新測試或是需要
驗證不同的測試資料時，測試人員可以藉由編輯測試腳本、更改測試資料，並自動
重播測試，以達到測試自動化的目的，大幅減少測試的時間。 
相對於傳統應用程式大都透過鍵盤和滑鼠操作，Android 應用程式的操作則是
以觸控方式進行，並支援所謂的多點觸控、重力感測器 (G-sensor)、陀螺儀
(Gyrometer)等的應用，再加上 Android 獨特的架構平台亦不同於傳統手持裝置應用
程式的設計，使得既有的錄製與重播工具無法適用，因此有必要針對 Android 平台
與其應用程式操作的特性，發展錄製與重播的測試工具。 
為支援 Android 應用程式測試的自動化，本計畫實作出一個 Android 錄製與重
播的測試方法與依此方法實作出的測試工具─ACRT(Android Capture and Replay 
testing Tool)。 ACRT 是一個 Eclipse[3]的 plugin 工具，主要是利用穿插
(Instrumentation) Android應用程式原始碼的方法捕捉應用程式其UI元件的資訊，及
攔截其使用者事件，以錄製測試操作的行為(亦即使用者一連串的 UI 操作事件與相
關的輸入資料)，並將測試操作行為轉換成對應的測試腳本程式。 
 
二、 研究目的 
 
Android 手機/平板的市佔率提升與 Android 應用程式數量的急遽增加，使得自
動化測試 Android 應用程式的需求亦隨之成長，因此本計畫實作出一 Android 錄製
重播測試工具-ACRT，可以錄製和播放使用者與 Android 應用程式的互動行為，以
自動化 Android 應用程式的測試。 
本研究計畫主要目的如下： 
 開發ACRT以協助測試人員進行錄製使用者與Android應用程式的互動行
為，並產生測試腳本(Test Script)。 
 利用 ACRT 協助測試人員進行測試腳本的管理，提供修改和複製的功能以
編輯測試案例。 
 3 
了各工具功能與相關資訊的比較，其簡要說明如下： 
QTP(Quick Test Professional)[11]是 HP 公司開發的一種自動測試工具，目的在於
執行重複的手動測試，主要用於回歸測試及測試同一軟體的新版本。而對於 Android
測試上只要安裝插件至 QTP 主程式即可支援，它可以進行錄製產生測試腳本，並可
在測試腳本中插入檢查點，檢驗 UI元件的屬性或數值資料是否為預期，可進行重播
腳本產生測試結果，並整合至其他 QTP 測試結果中，操作簡單，屬於企業級的付費
軟體。 
AndroidTestCase[12]為 Google 替 Android 系統所設計出的測試框架，此測試框
架以 JUnit 為基礎並擴展而得，用於 Android 應用程式的白箱測試，可以測試應用程
式之內部功能、元件屬性及內容，或是測試 Android 的服務應用程式，屬於免費的
測試框架，並已經包含於 Android SDK中。  
Robotium[13]提供一個測試框架，利用簡單的程式碼來針對個別的程式做黑箱
測試，是基於 AndroidTestCase 測試架構抽象化出的函式庫，在 Eclipse IDE 上結合
JUnit 的方式進行重播測試，不能進行錄製動作，測試腳本需由開發人員撰寫。但由
於 Robotium 提供的 API(應用程式標準介面)相當明確又容易理解，故現在有許多開
發人員使用它進行重播測試。 
FAST(Framework for Automated Software Testing)[14]為Wind River公司開發的
一種自動測試工具，支援 Android 系統，除了可進行錄製、重播測試腳本與顯示測
試結果的功能外，最大的特色是此工具的操作都在網頁上進行，所有的測試腳本與
測試結果皆存於伺服器中的資料庫，也就是可以在任何有網路連接的地點進行測
試，屬於企業級的付費軟體。 
MonkeyTalk[15]為 Gorilla Logic公司所開發的手持設備測試工具，同時支援 iOS
和 Android 平台。該工具結合 Eclipse IDE介面，方便使用者進行測試腳本的建立和
管理，並可以在測試腳本中插入已錄製好的腳本動作，但可錄製使用者事件僅限於
待測應用程式，且測試時必須擁有待測應用程式開發專案。 
  
表一 Android 測試工具列表與比較 
工具名稱 開源 付費 錄製 重播 需要 App 原始碼 
QTP      
AndroidTestCase      
Robotium      
FAST      
MonkeyTalk      
 
四、 研究方法 
 
為確保本計畫可在預期時間內完成 ACRT 之功能，本計畫採用 Capability 
Maturity Model Integration (CMMI)[16]軟體流程(software process)，以確保程式與文
件的一致性(Consistency)和可再使用性(Reuse)。因此，將整個專案分為三個階段，
第一階段以系統規畫為主，將整個系統的功能需求、溝通介面、效能分析、以及運
行平台所需的軟體、硬體進行詳盡的規劃，並且撰寫專案執行規劃(Project Execution 
Plan)。第二階段以設計為主，依據系統功能需求，針對系統架構、使用者介面、以
 5 
與執行的工作。 
 工具管理子系統(Tool Management Subsystem,TMS) 
    負責編譯測試腳本為測試應用程式並將其上傳到 Android OS 執行、執行
期間的溝通與目標端與本地端的資料傳輸。 
 
2. 錄製使用者事件: 
 
本計畫是以 AndroidTestCase 測試框架加上事件錄製模組進行錄製使用者事件。
AndroidTestCase 是 Android SDK 提供用於測試應用程式之框架，由 JUnit 測試框架
的擴展而成，提供測試 Android 應用程式時所需的函式。 
View在 Android 系統中是負責 UI建立的元件，它會佔據螢幕上的空間並畫出 UI
元件圖形與處理使用者事件，而 ViewGroup則是系統中多個 View的集合。 
Android 系統中傳遞使用者事件的方法是透過 View的樹狀結構進行，從樹狀結構
的根部發出事件，傳遞給結構中的每個節點。當有使用者對手機或模擬器有操作動
作時，Android 系統會將使用者事件由根部的 View 發出，傳遞給各應用程式由多個
View 所組成的子樹。當使用者事件到達應用程式最上層的 View(FrameLayout)時就
會進行使用者事件的比對，如果是此應用程式的使用者事件，View 就會讓該事件通
過並傳遞給應用程式更下層的 View。當使用者事件到達目標的 View 時，該 View便
會接收此事件並產生相對應的行為。 
藉由 AndroidTestCase 中透過測試應用程式來取得待測應用程式中的 View。基於
前述 Android 系統使用者事件傳遞的特性，我們可以在待測應用程式啟動時插入我
們自製的 View 於應用程式的最上層的 View 之下，使其監聽任何進入此應用程式的
使用者事件並擷取使用者事件的資訊。如圖二中，MyFrameLayout 即為我們錄製使
用者事件時插入待測應用程式中所使用的 View，藉此記錄下 Android 系統傳遞給待
測應用程式的使用者事件。 
 
 
圖二 攔截使用者事件動作示意圖 
 7 
 
5. 重播使用者事件: 
 
在重播使用者事件方面，由於本計畫使用 AndroidTestCase測試框架來取得使用
者觸發的事件以錄製測試腳本，而 Robotium 也是使用了該測試框架進行重播的功
能，因此我們將兩者結合以提供測試腳本重播的功能。 
Robotium 是一個基於 AndroidTestCase測試框架之上的函式庫，免費且開放原始
碼。它藉由整理數個 AndroidTestCase裡的函式，成為一個可讀性高的函式供使用者
使用。例如按下手機畫面中的按鈕這動作，需經由 AndroidTestCase 中的函式取得當
前應用程式、搜尋此 UI元件並取得參照、執行該元件按下之函式三個動作組合而成，
而 Robotium 就將其抽象化成一個函式就叫做 clickOnButton()。其他更複雜的動作如
選取 List 中的物件、選取日期時間等都已支援，但由於 Robotium 所提供之函式有些
並不十分易懂，故我們使用 Robotium 既有的函式並再擴充了一些常用且名稱直觀的
函式。 
執行重播的流程是使用AndroidTestCase測試框架編譯後產生測試應用程式安裝
檔，並透過 Android SDK 中的 Android Debug Bridge(ADB)[17]工具上傳至手機上安
裝後執行測試。ADB 為主機端與 Android 手機的溝通工具，可以觀測手機系統的狀
態，因此測試過程中的任何程式例外與斷言的結果都經由 ADB傳回 Eclipse 的 JUnit
進行顯示。 
 
6. 測試工具使用流程: 
 
初次使用本工具 ACRT 之前必須先將 Android 待測程式的 Eclipse 專案(原始碼)
匯入 ACRT 的專案管理視窗中，並對此待測程式建立新的 ACRT 測試專案(test 
project)，之後開發人員便可開始進行 Android 錄製重播測試。 
圖五為利用 ACRT 進行錄製與重播動作的流程，在選擇待測的 ACRT 測試專案
後，使用者可以點選 ACRT工具列上的功能鍵執行動作，分別說明如下 : 
 按下錄製專案腳本功能鍵後，ACRT 開始尋找可連接的 Android 設備並連線，連
線成功之後測試人員即可操作 Android 畫面，同時回傳使用者事件給 ACRT並產
生腳本，在錄製過程中可以在任何時間插入斷言，驗證元件的數值或狀態是否符
合預期。 
 錄製所產生的腳本會顯示於 ACRT測試專案的目錄下，開發人員可以至編輯視窗
自行修改或編輯腳本，然後藉由本工具的測試腳本重播功能執行測試，節省手動
測試的時間。特別是當應用程式修改後需要重新測試或是需要驗證不同的測試資
料時，測試人員可以藉由編輯測試腳本、更改測試資料，重播測試腳本，以達到
測試自動化的目的，大幅減少測試的時間。 
 按下重播專案腳本功能鍵後，ACRT開始編譯測試腳本為測試應用程式，並上傳
至已連線的 Android 設備，自動重播測試，執行之後回傳測試結果於 ACRT，將
測試的結果顯示於測試結果視窗。 
 
 9 
 
圖七 測試專案建立介面 
 
 
圖八 測試腳本呈現介面 
 
 
圖九 測試腳本重播設定介面 
11 
參考文獻 
 
[1] Android 官方網站, http://www.android.com/ 
[2] Google Play Wiki, http://zh.wikipedia.org/wiki/Google_Play 
[3] Eclipse, http://en.wikipedia.org/wiki/Eclipse_%28software%29 
[4] Martin Kropp and Pamela Morales, “Automated GUI Testing on the Android Platform,” 
IMVS Fokus Report ISSN 1662-2014, pp. 33-36, 2010. 
[5] Cuixiong Hu and Iulian Neamtiu, “Automating GUI Testing for Android Applications,” 
Proceedings of the 6th International Workshop on Automation of Software Test, May 2011. 
[6] Domenico Amalfitano, Anna Rita Fasolino, and  Porfirio Tramontana, “A GUI 
Crawling-based technique for Android Mobile Application Testing,” 2011 IEEE Fourth 
International Conference on ICSTW, pp. 252-261, March 2011. 
[7] Tommi Takala , Mika Katara, and Julian Harty, “Experiences of System-Level Model-Based 
GUI Testing of an Android Application,” 2011 Fourth IEEE International Conference on 
Software Testing, Verification and Validation(ICST), pp. 377-386, March 21-25, 2011. 
[8] Woei-Kae Chen, Tung-Hung Tsai, and Hung-Hsing Chao, “Integration of Specification 
-Based and CR-Based Approaches for GUI Testing,” Proceedings of the 19th International 
Conference on Advanced Information Networking and Applications (AINA'05) Vol. 1, 
pp.967-972, 2005. 
[9] Mark Grechanik, Qing Xie, and Chen Fu, “Maintaining and evolving GUI-directed test 
scripts,” Proceedings of the IEEE 31st International Conference on Software Engineering, 
pp.408-418, 2009. 
[10] Mark Grechanik, Qing Xie, and Chen Fu, “Creating GUI Testing Tools Using Accessibility 
Technologies,” Proceedings of the IEEE International Conference on Software Testing, 
Verification, and Validation Workshops, pp.243-250, 2009. 
[11] QTP, http://www.advancedqtp.com/ 
[12] Testing and Instrumentation, 
http://developer.android.com/tools/testing/testing_android.html 
[13] Robotium 官方網站, http://code.google.com/p/robotium/ 
[14] Framework for Automated Software Testing, http://www.windriver.com/announces/fast/ 
[15] MonkeyTalk, http://www.gorillalogic.com/testing-tools/monkeytalk 
[16] 洪肇奎, 郭耀煌, 李允中, “Light-Weight Capability Maturity Model Integration (CMMI) 
for National Science Council (NSC) Open Source Project,” CSIE Program, Department of 
Engineering and Applied Science, NSC, 2004. 
[17] Android Debug Bridge, http://developer.android.com/tools/help/adb.html 
[18] 劉建宏, 郭柏廷, 張雄展, 杜國正, 黃冠智, 呂浩沅,  “Android 錄製重播測試工具,” 
2012 Taiwan Conference on Software Engineering, pp. 136-141, 2012. 
13 
國科會補助計畫衍生研發成果推廣資料表 
                                     日期：101年 10月 10日 
國科會補助計畫 
計畫名稱：Android 錄製重播測試工具 
計畫主持人：劉建宏        
計畫編號：NSC 100-2218-E-027-006   領域：軟體工程 
研發成果名稱 
（中文）Android 錄製重播測試工具 
（英文）A Capture and Replay Testing Tool for Android Applications 
成果歸屬機構 臺北科技大學 
發明人 
(創作人) 
劉建宏 
技術說明 
（中文） 
本計畫研發一個 Android 應用程式的錄製重播測試工具，稱為
ACRT。ACRT 可將使用者與 Android 應用程式之圖形操作介面
(GUI)的互動行為錄製下來，將其轉換成測試腳本(test script)，並
可透過執行測試腳本，重播所錄製的使用者事件，以自動化測試
Android 應用程式。 
（英文） 
In this project, an Android Capture/Replay testing tool, called ACRT, 
has developed. The ACRT can capture the interactions between the 
users and the GUI of the Android applications and convert the 
recorded user GUI events into test scripts. The test scripts then can be 
executed to replay the user interactions for automatically testing the 
Android applications.  
產業別 手機、平板電腦、App軟體開發 
技術/產品應用範圍 
ACRT可針對 Android 應用程式進行測試腳本的錄製，並可於錄製
過程中插入驗證點驗證其 GUI 元件狀態，錄製下的測試腳本可於
編輯介面中進行編修儲存，並可重播測試腳本並檢視測試結果，
有助於改善 Android 應用程式測試的自動化，提升測試效率和降低
測試成本。 
技術移轉可行性及預期
效益 
ACRT以自由軟體方式進行開發與推廣，可提供給業界或學術界作
為開發 Android 應用程式測試工具，使用者可直接使用或依照需求
修改原始碼。 
     註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
Android 錄製重播測試工具 
A Capture and Replay Tool for Testing Android-based Applications 
 
劉建宏、郭柏廷、張雄展、杜國正、黃冠智、呂浩沅 
國立台北科技大學 資訊工程系 
{cliu, t100598010, t100598047, t100598026, t100598027, t100598051}@ntut.edu.tw 
 
摘要 
 
隨著Android手機廣受市場的歡迎，Android應
用程式的開發在最近幾年受到廣大的重視，然而由
於缺乏足夠的測試工具，造成Android應用程式測
試的困難。本論文提出一個Android應用程式的錄
製與重播(Capture/Replay)測試方法，並實作出一
Android應用程式測試工具-ACRT，協助自動化
Android應用程式的圖形使用者介面測試 (GUI 
testing)與功能性測試(Functional testing)。透過對待
測Android應用程式的GUI插入使用者事件錄製模
組，進行對使用者操作事件的接收，藉此達到錄製
測試腳本的目的；進而使用Robotium測試框架作為
重播操作事件的核心，並可從測試結果得知應用程
式的功能與行為是否符合預期。藉由此錄製與重播
的測試工具，我們可以降低撰寫與執行Android應
用程式測試案例的困難，並能有效減少人工測試所
需的成本。 
 
關鍵詞：Android、Robotium、GUI testing。 
 
一、 簡介 
隨著 Android[1]手機與平板電腦廣受市場的
歡迎，Android 應用程式的開發最近幾年受到廣大
的重視，2012 年 3 月 Google Play(前身為 Android 
Market)[2]已有超過 45 萬支應用程式，累計有 100 
億次的下載數。在 Android 作業系統的影響力日益
增加的情況下，預期 Android 應用程式的數目在未
來還會大幅成長。然而，目前支援 Android 應用程
式的測試工具仍不多，雖然開發人員可以利用單元
測試工具，例如 JUnit，來協助單元測試，但是圖
形使用者介面測試(GUI testing)或功能性的測試
(Functional testing)大都仍需依賴手動方式進行，使
得測試 Android 應用程式的成本與時間無法降低，
並嚴重影響 Android 應用程式的品質。 
一般而言，圖形使用者介面與功能性測試大
都利用錄製與重播(Capture/Replay)測試工具來進
行。錄製與重播測試工具允許測試人員將手動測試
應用程式的操作過程錄製下來，並轉換成測試腳本
(Test script)，透過重播這些測試腳本，可以自動執
行測試，並節省手動測試的時間。特別是當應用程
式修改後需要重新測試或是需要驗證不同的測試
資料時，測試人員可以藉由編輯測試腳本、更改測
試資料，並自動重播測試，以達到測試自動化的目
的，大幅減少測試的時間。 
相對於傳統應用程式大都透過鍵盤和滑鼠操
作，Android 應用程式的操作則是以觸控方式進行，
並支援所謂的多點觸控、重力感測器(G-sensor)、
陀螺儀(Gyrometer)等的應用，再加上 Android 獨特
的架構平台亦不同於傳統手持裝置應用程式的設
計，使得既有的錄製與重播工具無法適用，因此有
必要針對 Android 平台與其應用程式操作的特性，
發展錄製與重播的測試工具。 
為支援 Android 應用程式測試的自動化，本論
文提出一個Android錄製與重播的測試方法與依此
方法實作出的測試工具─ACRT(Android Capture 
and Replay testing Tool)。ACRT 是一個 Eclipse[3]
的 plugin 工具，主要是利用穿插(Instrumentation) 
Android 應用程式原始碼的方法捕捉應用程式其
UI 元件的資訊，及攔截其使用者事件，以錄製測
試操作的行為(亦即使用者一連串的 UI 操作事件
與相關的輸入資料)，並將測試操作行為轉換成對
應的測試腳本程式。 
此外，ACRT 並採用開放源碼的測試框架
Robotium[4]作為重播腳本程式的核心，同時利用
Android SDK(軟體開發套件)中的 Android Debug 
Bridge[5]為 Robotium 測試腳本程式上傳至手機或
平板電腦、執行重播動作、以及取回測試結果的溝
通媒介。另外，ACRT 並整合 JUnit 來檢查錄製過
程中插入的斷言(Assertion)，以驗證重播時執行的
結果是否與預期相符。ACRT 可以協助測試人員錄
製、重播、編輯和管理 Android 應用程式的測試案
例，自動化 Android 應用程式的圖形使用者介面與
功能性測試，有效降低測試時間與成本。本論文的
組織如下 : 第二節說明研究的相關文獻與其他學
者相關的研究，並比較現有的 Android 測試工具。
第三節說明本論文在Android平台上進行錄製重播
的方法。第四節則是實作工具 ACRT 的相關介紹。
第五節為結論與未來研究方向。 
 
二、 文獻探討 
雖然關於使用者介面測試或功能性測試的文
獻相當多，但由於 Android 仍處於萌芽階段，因此
目前關於測試Android應用程式的相關文獻仍然不
多，以下僅就與本論文較相關之文獻，以及 Android
相關測試工具作簡要的回顧。 
 
2.1 相關論文研究 
 Kropp 等人[6]提出在 Android 上兩種的測試
Android 應用程式的方法，一是 Android 架構中的
 
* 本研究接受國科會編號：NSC100-2218-E-027-006 研究計畫
經費補助 
Proceedings of the Eighth Taiwan Conference on Software Engineering, Taipei, Taiwan, July 6-7, 2012
119
開放手機聯盟（Open Handset Alliance）開發。
Android 系統架構主要分為五個部分，由上而下依
序是應用程式 (Applications) 、應用程式框架
(Application Framework) 、函式庫 (Libraries) 、
Android 執行環境(Android Runtime)與 Linux 系統
核心(Linux Kernel)，各層內容如下。 
 應用程式層提供 Android 手機的核心應用程式，
包含電子郵件程式、簡訊程式、日曆、地圖、瀏
覽器、聯絡人與其它應用程式，也就是 Android
手機所提供的基本功能。 
 應用程式架構層定義了能讓開發者可以完整使
用與核心應用程式相同的應用程式介面(API)，
可以發佈功能並被其它應用程式所使用，但相對
於會受限於應用程式架構的安全限制。使用者也
可以用同樣的機制來新增、置換應用程式架構裡
的元件。 
 函式庫層是由一些 C/C++的函式庫所組成，是
Android 應用程式的框架，開發人員可利用這些
函數庫開發 Android 系統上的應用程式。 
 Android 執行環境分成二個重要的元件，分別為
Core Libraries (核心函式庫)以及 Dalvik Virtual 
Machine (Dalvik 虛擬機器)。其中 Core Libraries
裡頭已經包含了絕大多數 Java 應用程式所需調
用的函式。Dalvik 虛擬機器是一種暫存器型態的
虛擬機器，在設計 Dalvik 時就已經設想以最少
的記憶體資源來執行程式，並可於 Android 系統
上同時執行多個 Dalvik 個體，讓系統在執行程
式可以最佳化的方式來執行，節省更多的資源。 
 Linux 核心層為 Android 系統運作之核心，包含
了 Linux系統核心本體以及手機裝置的硬體驅動
程式，並負責上層應用程式與硬體之間的溝通。 
 
3.2 AndroidTestCase 介紹 
本論文是以 AndroidTestCase 測試框架加上事
件錄製模組進行錄製使用者事件。AndroidTestCase
是 Android SDK 提供用於測試應用程式之框架，由
JUnit 測試框架的擴展而成，提供測試 Android 應
用程式時所需的函式，AndroidTestCase 的測試框
架如圖 1。 
 
 
圖 1  AndroidTestCase 測試框架圖 
在 AndroidTestCase 框架中，每個應用程式
(Application package)都會有與其對應的測試應用
程式(Test package)來進行測試，測試應用程式透過
使用 Android 提供的 Instrumentation 類別產生並與
應用程式建立連接。測試應用程式可以透過
Android 作業系統裡的 InstrumentationTestRunner
使應用程式與測試應用程式跑在同一個 Process 
裡，也就是同一個 Dalvik 虛擬機器中，便能取得
應用程式裡任何錄製測試腳本所需的 UI 元件資訊，
如當時應用程式中有哪些 UI 元件、UI 元件的屬性
與數值等等。 
 
3.3 擷取使用者事件資訊 
View 在 Android 系統中是負責 UI 建立的元
件，它會佔據螢幕上的空間並畫出 UI 元件圖形與
處理使用者事件，而 ViewGroup 則是系統中多個
View 的集合。 
Android 系統中傳遞使用者事件的方法是透
過 View 的樹狀結構進行，從樹狀結構的根部發出
事件，傳遞給結構中的每個節點。當有使用者對手
機或模擬器有操作動作時，Android 系統會將使用
者事件由根部的 View 發出，傳遞給各應用程式由
多個 View 所組成的子樹。當使用者事件到達應用
程式最上層的 View(FrameLayout)時就會進行使用
者事件的比對，如果是此應用程式的使用者事件，
View 就會讓該事件通過並傳遞給應用程式更下層
的 View。當使用者事件到達目標的 View 時，該
View 便會接收此事件並產生相對應的行為。 
藉由 AndroidTestCase 中透過測試應用程式來
取得待測應用程式中的 View。基於前述 Android
系統使用者事件傳遞的特性，我們可以在待測應用
程式啟動時插入我們自製的 View 於應用程式的最
上層的 View 之下，使其監聽任何進入此應用程式
的使用者事件並擷取使用者事件的資訊。如圖 2
中，MyFrameLayout 即為我們錄製使用者事件時插
入待測應用程式中所使用的 View，藉此記錄下
Android 系統傳遞給待測應用程式的使用者事件。 
 
 
圖 2  攔截使用者事件動作示意圖 
Proceedings of the Eighth Taiwan Conference on Software Engineering, Taipei, Taiwan, July 6-7, 2012
121
 
圖 5  ACRT 整合至 Eclipse 介面 
 
四、 錄製重播工具實作 
 
4.1 工具架構 
 ACRT 工具透過 Eclipse Workbench 的擴展點
(Extension point)，讓 ACRT 的使用者介面可以和
Eclipse 結合，產生所需要的視窗(Views)，例如呼
叫 JUnit 視窗顯示測試結果。透過 Workspace 的擴
展點則可以取得待測程式專案、ACRT 測試專案、
ACRT 測試腳本和檔案的資源，藉由這些擴展點，
ACRT便可以擷取專案本身和ACRT執行測試過程
的相關資料，如測試編譯時間、測試執行時間。 
 圖 6 為本工具 ACRT 的系統架構圖，說明
ACRT 所包含的五個子系統，以及各子系統之間或
子系統與外部系統之間的關聯性。各子系統的主要
功能說明如下 :  
 使用者介面子系統(UIS)負責與 Eclipse 溝通，呈
現 ACRT 的使用者介面，也提供測試專案與測試
腳本的呈現、系統的運行狀態的表示。 
 測試腳本錄製子系統(TSCS)負責從 TPMS 接收
要錄製的測試腳本，產生所需的錄製應用程式交
給TMS上傳至Android進行使用者事件的錄製，
並在錄製結束後傳輸測試腳本給 TPMS 進行儲
存。 
 測試腳本執行子系統(TSES)負責從 TPMS 接收
要執行的測試腳本，產生所需的測試腳本執行應
用程式交給 TMS 上傳至 Android 進行使用者事
件的重播，執行結束交給 UIS 顯示測試結果。 
 測試專案管理子系統(TPMS)負責測試專案、測
試腳本與測試結果的管理和儲存。 
 工具管理子系統(TMS)負責編譯測試腳本為測試
應用程式並將其上傳到 Android 執行，並負責執
行期間目標端與本地端的溝通。 
 
4.2 實例演練 
 開發人員在安裝 ACRT plug-in 並打開 ACRT  
 
 
圖 6  ACRT 系統架構圖 
 
Perspective 後，與 Eclipse 平台整合的畫面如圖 5
所示。視窗介面根據編號依序為專案管理視窗、測
試腳本編輯視窗、測試結果視窗與系統執行狀態視
窗，而功能按鈕則整合至 Eclipse 工具列中。 
 初次使用本工具之前必須先擁有 Android 開
發專案作為待測程式並匯入專案管理視窗中。之後
對此待測程式建立新的 ACRT 測試專案，開發人員
便可開始進行 Android 錄製重播測試。首先選擇要
進行測試的 ACRT 測試專案之後點選 ACRT 工具
列上的功能鍵執行動作，大略可分成兩個部分 :  
 按下錄製專案腳本功能鍵後，ACRT 開始尋找可
連接的 Android 設備並連線，連線成功之後測試
人員即可操作 Android 畫面，同時回傳使用者事
件給 ACRT 並產生腳本，在錄製過程中可以在任
何時間插入斷言，驗證元件的數值或狀態是否符
合預期，插入斷言的畫面如圖 7 所示。錄製所產
生的腳本會顯示於 ACRT 測試專案的目錄下，開
發人員可以自行修改或編輯腳本，並轉換成測試
腳本，可以藉由本工具的測試腳本重播功能執行
測試，節省手動測試的時間。特別是當應用程式
修改後需要重新測試或是需要驗證不同的測試
資料時，測試人員可以藉由編輯測試腳本、更改
測試資料，重播測試腳本，以達到測試自動化的
Proceedings of the Eighth Taiwan Conference on Software Engineering, Taipei, Taiwan, July 6-7, 2012
123
 國科會補助專題研究計畫出席國際學術會議心得報告 
                                     日期：101年 10月 18日 
                                 
一、參加會議經過 
The 2012 International Conference on Genetic and Evolutionary Computing (ICGEC 2012)研
討會由日本早稻田大學(Waseda University)主辦，於 8月 25日至 8月 28 日在日本九州北九州
市(Kitakyushu City)國際會議廳舉行，會中有來自不同國家的學者參與，並發表人工智慧、多
媒體、行動服務、雲端運算與資安等不同研究主題之論文。此次會議大會共舉辦 3場 Keynote 
Speech，分別由 International Journal of Advanced Intelligence Paradigms (IJAIP)的 Chief Editor 
Valentina Emilia Balas 教授、國立宜蘭大學校長暨 IET Fellow的 Han-Chieh Chao 教授、以及
IEEE CIS Vice-President for Technical Activities 的 Hisao Ishibuchi 教授擔任演講者，介紹目前
智慧運算方法與應用、Internet of Things (IOT)、及多目標最佳化演算等相關技術研究的挑戰
與趨勢，內容相當精采。 
8月 27日晚間為大會的 Banquet，大會特地安排北九州市國際會議廳鄰近的 Rihga Royal 
Hotel 舉行，藉此機會與會學者可以在輕鬆的氣氛下彼此交流。此外，大會中個別 Session有
不同主題的論文發表與討論，本人的研究論文於 8月 27日上午 10:30~12:20的 Session發表，
此 Session 中有 5位研究學者發表論文，以及其他對此 Session 有興趣的相關研究學者參與，
並彼此討論和交流研究心得。Session 結束後，本人並利用空檔與幾位參與學者交換意見，
而此次 ICGEC會議亦在 28日下午圓滿結束。 
二、與會心得 
ICGEC 為包含 IEEE 在內許多組織單位所贊助之國際會議，此次會議雖然在日本舉行，
仍有不少與會學者來至台灣與歐美，因此參加此次研討會除了可與其他國家的學者專家分享
研究經驗，有助於個人對理論與實務的提升外，亦可認識一些國外學者，彼此交流學術經驗。
此外，參與此研討會的學者專家來自於不同的研究領域，包含人工智慧、行動服務與系統工
程等，而本人此次發表之論文主要為探討嵌入式軟體測試方法的研究，與行動服務和系統應
用軟體相當密切，在會議中與其他學者就嵌入式軟體的開發和測試技術進行討論，讓本人獲
得不少寶貴的建議與未來可再深入研究探討的方向。另外，透過與不同研究領域學者的交流，
計畫編號 NSC 100-2218-E-027-006 
計畫名稱 Android 錄製重播測試工具 
出國人員
姓名 
劉建宏 
服務機構
及職稱 
台北科技大學資工系/助理教授 
會議時間 
101年 8月 25日至 
101年 8月 28日 
會議地點 Kitakyushu, Japan 
會議名稱 
The Sixth International Conference on Genetic and Evolutionary 
Computing (ICGEC 2012) 
發表題目 A Model-Based Testing Tool for Embedded Software 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/29
國科會補助計畫
計畫名稱: Android軟體錄製與播放測試工具之研發
計畫主持人: 劉建宏
計畫編號: 100-2218-E-027-006- 學門領域: 推動計畫-開放軟體
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
