build a probability point analysis tool, which can enhance the 
accuracy of pointer analysis and performance. 
 
With the tools provided by this project, we can lower the threshold 
of training the designer in the multi-core processor design and 
related software industry, and increase the international 
competitiveness of system design industry in Taiwan. 
 
We are accepted on plenty of international conferences or journals, 
and the publications are the following:2010 The Workshop on 
Compilers for Parallel Computing（CPC2010）、2011 
International Workshop on Embedded Multicore Systems ( ICPP-
EMS 2011 )、2011 IEEE Symposium on Embedded Systems for 
Real-time Multimedia ( ESTIMedia 2011 )、 2011 Workshop on 
Embedded Systems Education  ( WESE 2011 ) 、2011 Open64 
Developers Forum、2011 Concurrency and Computation: Practice 
and Experience（CCPE 2011）、2011Journal of 
Supercomputing 。 
 
 
Multimedia( ESTIMedia 2011 )[19][20]、2011 Workshop on Embedded Systems 
Education  ( WESE 2011 ) [21]、2011 Open64 Developers Forum[22]、2011 
Concurrency and Computation: Practice and Experience（CCPE 2011） [23]、
2011Journal of Supercomputing [24]。 
。 
 
 
 
 
關鍵詞： 
嵌入式系統、多核心平台、模型驅動系統、串流程式語言、偵錯器、具機率的指
標分析 
  
目錄 
中文摘要 ................................................................. I 
Abstract ............................................................... III 
目錄 .................................................................... IV 
報告內容 ................................................................. 1 
前言 ................................................................... 1 
研究目的 ............................................................... 1 
文獻探討 ............................................................... 2 
研究方法 ............................................................... 2 
結果與討論 ............................................................ 12 
研究成果自評 .......................................................... 15 
參考文獻 .............................................................. 16
藉由此三個子項目的整合，我們將能夠提供良好的多核心程式開發環境供使
用者快速發展軟體、強大的追蹤偵錯系統來增加軟體的正確性和可靠度以及精準
的指標分析來增強系統的效能。而經由這些工具的整合，相信能夠在開發多核心
系統軟體時提供相當大的幫助，進而達到降低多核心系統開發的成本、縮短開發
時程並且增加系統可靠度的目的，對於台灣多核心嵌入式平台產業的發展必能夠
有相當的助益。 
 
文獻探討 
針對上述的異質多核心環境之特點，傳統的程式語言如C、C++等，由於缺乏許
多相關的機制如type system、streaming、parallelization、reusable 等在designpattern 
上的支援，因此引發學術界發展許多基於這些傳統語言的擴充，如MIT的Cilk（R. 
D. Blumofe, C. F. Joerg, B.Kuszmaul, C. E. Leiserson, K. H. Randall, and 
Y. Zhou, "Cilk: An Efficient Multithreaded Runtime System," PPOPP, 1995）、
StreamIt語言（W. Thies, M. Karczmarek, and S. Amarasinghe, "StreamIt: ALanguage 
for Streaming Applications," LNCS, 2002）、UC Berkeley的nesC語言（D. 
Gay, P. Levis, R. v. Behren, M. Welsh, E. Brewer, and D. Culler, "The nesCLanguage: 
A Holistic Approach to Networked Embedded Systems," PLDI, 2003）、Stanford的
Brook語言（I. Buck, T. Foley, D. Horn, J. Sugerman, K. Fatahalian, M.Houston, and 
P. Hanrahan, "Brook for GPUs: Stream Computing on GraphicsHardware," ACM 
Transactions on Graphics, 2004）、TU Delft 的SP@CE語言（A. L.Varbanescu, M. 
Nijhuis, A. Gonzalez-Escribano, H. J. Sips, H. Bos, and H. A. Bal,"SP@CE - An 
SP-based programming model for consumer electronics streamingapplications," 
LCPC, 2006）、國內也有中正大學所開發的CCC語言（N. W. Lin,"Design and 
Implementation of the Parallel Programming Language CCC," ICS, 2004）等。在多
核心系統內，核心間傳輸資料會非常頻繁，資料傳輸/溝通模組即成為非常重要
的一環，在flow type system中資料在系統元件中皆仰賴此溝通模組協助，對軟體
開發模型影響甚鉅。 
 
研究方法 
1. Multi-core Communication Module 
由於多核心架構上之記憶體存取不如一般單一處理器上之單純，不同處理器
之間的資料傳輸通常隱含著複雜的溝通機制。本模組利用串流機制，提供一
套可在多核心系統上的各核心間快速的資料傳輸機制。藉由本多核心串流呼
叫函式庫的研發，程式開發人員將可在嵌入式環境中利用有限的硬體資源，
發展高效能之多核心應用程式[1][2][9][13][18][19]。其架構如圖一所示。 
 
計算結果經由 ostrm 被傳輸回 SRPC++的委託端。現今多核心伺服端已經支援
SRPC++呼叫，istrm 和 ostrm 已經拓展為 stream 的陣列並能用下標符號取得
資料，就像 istrm[0]可以得到關於第一個遠端伺服的輸入資料。程式設計師可
以安排 stream 間的替換來平衡遠端伺服的工作負載量。而為了促進資料傳輸，
輸出輸入運算元，<<和>>，已經被重載為從通訊管道擷取和輸入資料的慣例
程序。 
此外，雖然固有的 SIMD 函式用來撰寫程式已經很有效率且具備執行效能，
但在程式碼的部分較為低階使得程式設計師在閱讀程式碼時顯得較為艱澀，
而程式的可攜性也是一項挑戰，為了解決這些問題，本計畫開發出了 PAC C++
編譯器[24]，目的是使用 C++的類別來封裝 SIMD 較低階的細節，隱藏對程
式設計師而言較為艱澀的部分，使資料能抽象化，如下圖三。經由提供多載
向量容器使資料抽象化更能加強程式設計開發模型、或是對特定的應用建立
軟體設計模組。而下圖四為 SIMD 實作於 PACDSP 處理器的向量容器和運用
在上面的運算[17][18][19][23]。 
 
 
圖三 C++ class and operator overloading 
 
 
圖四 Vector Types and Operations 
 
 
 
 
 
 
給功能單元的開發和單元間的通訊，讓我們能在其上執行多種裝置的模擬器。
除此之外，本系統發展一個新的模擬平台元件：Trace Unit，此元件與 ESL
模擬平台上的各個元件相接，負責監控並儲存元件的狀態與行為至外部資料
庫當中。 
 
 
圖六 Software Trace Architecture 
 
當程式於模擬平台執行完畢後，外部資料庫即存有執行期間整個系統平台的
執行狀態。因此我們可以利用資料庫中的系統狀態資料，將多核心系統平台
回復到任何一個系統執行的週期。搭配增加追蹤功能的除錯器[11][17]來進行
偵錯，如圖七，可以讓系統平台不斷的回復到任意的週期當中觀察其執行狀
態，以節省在偵錯的過程當中，需要不斷的執行程式來確認錯誤發生點所耗
費的時間。 
 
 
圖七 Debug tool 
 
  
圖九 Power profiling algorithm 
 
 
  
 圖十 SSA example 
 
 
 
圖十一 Probabilistic Pointer Analysisflow 
 
圖十一為 PPA 的流程圖，首先經過 Open64 的前端(Front-End)產生 Intermediate 
SSA form CFG
PRG
Source   
Program
Source   
Program
Static assign execution frequency
Edge profiling  execution frequency
Demand-Driven
PPA in SSA
WHIRL
Open64
Backtrace
Algorithm
Reduced PRG
PPA results
Reducegraph
Algorithm
Normalized as 5 kinds of pointer usages
Encounter 5 situations
A directed weighted cyclic graph
Analysis target and locations only
WOPT phase
Make the PRG more compact
Intermediate 
representation
Explicit use-def chains
 圖十五 BacktraceCalleralgorithm 
 
圖十六 BacktraceMualgorithm 
 
 
結果與討論 
1. Multi-core Communication Module 
經由 C++的幫助與包裝，使得攥寫程式更為簡潔易讀，資料表現方式也比較
清楚明瞭，下圖十七可以明顯看出本計畫的成果對於程師設計師的效益。在效能
方面亦和固有的函式相近，見下圖十八。 
 
圖十七 Convolution Kernels with SIMD Intrinsics and SIMD Vectors. 
3. Probabilistic Pointer Analysis for Embedded System Optimizations 
利用 PPA 的資訊可以讓編譯器做更積極的優化，如: 幫助編譯器或程式設計
者在多核心的嵌入是系統中更容易做資料上的分配，預期可以帶來更好的效
能、耗電比；將資訊使用在 Transactional memory 的結構上，可以利用該結
構的 recovery 的機制，做 pointer-induced loop carried dependence 的迴圈平行
化的優化。 
 
整個分析的資料結構會如圖二十所示，(a)為原始程式碼，經過 open64 會產
生 CFG 如(b)所示，在 CFG 上面透過 Backtrace algorithm 會依照(b)的虛線的
樣子去行走並蒐集指標的資訊，然後連結成一個 PRG 如圖(c)所示，由於圖(c)
並不容易被看懂因此透過一個 Reducegraph 的 algorithm 將(c)轉換成(d)，而(d)
就是一個 probabilistic points-to information. 
 
 
 
圖二十 Reduce algorithm flow 
 
 
而利用我們計畫開發出演算法的程式大小、執行時間以及精確度皆整理成下表一。
精確度的測量部分，使用指標相關的測試軟體 Olden 和 CHJL。Olden 用 C 寫成
並動態配置 list 容器或是樹(tree)資料結構。CHJL 更是包含許多測試軟體的核心
部分。表一分析資料為指標提取，意即使用載入或儲存操作來存取指標指向的資
料，分析被提取指標間的指向關係可以幫助編譯器做更有效率的優化，結果顯示
參考文獻 
[1]  K. Y. Hsieh, Y. C. Liu, and J. K. Lee, “The Support of Software Design Patterns 
for Streaming RPC on Embedded Multi-core Processors,” IEEE Workshop on 
Signal Processing Systems, 2008. 
[2]  W. S. Lai, K. Y. Hsieh, and J. K. Lee, “Stream Programming on Embedded 
Dual-core Processors,” Workshop on Compiler Techniques for 
High-Performance and Embedded Computing 2009 
[3]  H. Agrawal, R. A. Demillo, E. H. Spafford, and E. H. S. Ord, “An execution 
backtracking approach to program debugging,” EEE Software, vol. 8, pp. 
283–299, 1991. 
[4]  D. Brolley, "[patch] reverse execution in sid, reverse debugging with gdb and 
sid," 2006, 
http://sourceware.org/ml/sid/2006-q3/msg00047.html. 
[5]  P. Brook and D. Jacobowitz, "Reversible debugging," codesourcery, Tech. Rep., 
2007. 
[6]  Peng-Sheng Chen, Ming-Yu Hung, Yuan-Shin Hwang, Roy Dz-ChingJu, 
JenqKuen Lee, “Compiler Support for Speculative Multithreading Architecture 
with Probabilistic Points-To Analysis,” ACM SIGPLAN NOTICES, Vol 38, 
Issue 10, Oct. 2003. 
[7]  Peng-Sheng Chen, Yuan-Shin Hwang, Dz-ChingJu, JenqKuen Lee, 
“Interprocedural Probabilistic Pointer Analysis,”  IEEE Transactions on 
Parallel and Distributed Systems, Volume 15, Issue 10, pp. 893-907, Oct. 2004. 
[8]  Chung-Wen Huang, Shu-Cheng Chi, Shih-Han Lin, Jenq-Kuen Lee, “Enable 
Time-Reversible Execution on Processor-based System Level Modeling.” 
VLSICAD 2009. 
[9]  C. C. Yang, Chung-Kai Chen, Yu-Hao Chang, JenqKuen Lee, “Software 
Architecture Design for Streaming Java RMI,” accepted, Science of Computer 
Programming 
[10]  S-W Chang, K-Y Hsieh, and JenqKuen Lee, “PTest: An Adaptive Testing Tool 
for Concurrent Software on Embedded Multicore Processors,” Date 2009, 
France, April 2009. 
[11]  Chung-Ju Wu, Chia Han Lu, and Jenq-Kuen Lee, “Expression Rematerialization 
for VLIW DSP Processors with Distributed Register File,” CPC 2009, Zurich, 
Jan. 2009. 
[12]  Chi-Hua Lai, Kun-Yuan Hsieh, Shang-Hong Lai, JenqKuen Lee, 
“Parallelization of Belief Propagation Method on Embedded Multicore 
Processors for Stereo Vision,” ESTIMedia 2008 (Embedded Systems Week 
2008), Atlanta, Oct. 19-24, 2008. 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/11/01
國科會補助計畫
計畫名稱: 子計畫一:多核心嵌入式之軟體開發模型(2/2)
計畫主持人: 李政崑
計畫編號: 99-2220-E-007-014- 學門領域: 自由軟體暨嵌入式系統
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
