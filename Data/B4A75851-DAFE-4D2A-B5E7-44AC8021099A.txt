 1 
行政院國家科學委員會補助專題研究計畫 
■成果報告   
□期中進度報告 
 
結合雲端運算之創新車載資通訊系統與應用服務平台 
之研發與實作 
The Development and Implementation of an Innovative 
Telematics and Application Service Platform Combined with 
Cloud Computing 
計畫類別：□個別型計畫   ■整合型計畫 
計畫編號：NSC 99－2220－E－366－005 
執行期間：  99 年 8 月 1 日至 100 年 7 月 31 日 
 
執行機構及系所：樹德科技大學 資訊工程系(所) 
 
計畫主持人：張晉源 副教授 
共同主持人：陳璽煌 副教授、陳毓璋 副教授、林峻立 助理教授 
計畫參與人員：朱鈺霖、柯伯諭、曾坤福、黃泰豪 
 
成果報告類型(依經費核定清單規定繳交)：■精簡報告  □完整報告 
 
本計畫除繳交成果報告外，另頇繳交以下出國心得報告： 
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
■出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，□一年■二年後可公開查詢 
 
中   華   民   國   100  年  9  月  20  日 
 3 
 
圖 1 平台架構圖 
 
技術介紹 
本節將介紹主要用於本計畫的三項軟體： 
 
 Hadoop 
 Thrift 
 HBase 
Hadoop： 
雲端運算關鍵技術是 MapReduce，最早由 Google 提
出，後來也運用在 open source的 Hadoop雲端技術中。和
傳統開發模式相比，開發人員需要先分析問題的解決流
程，找出可以利用平行運算來處理資料的部分，也就是那
些能夠被切成小段分開來處理的資料，再針對可以採用平
行處理的部分寫成 Map 程式。有了 Map 程式之後，就可以
使用大量機器用執行 Map 程式，分別同步處理分析每一段
資料，再將每一個  Map 程式分析出來的結果，透
過 Reduce 程式進行合併，最後則彙整出完整的結果。 
 
 
圖 2 MapReducer程式流程 
 
Hadoop Distributed File System (HDFS) 將分散的儲存
資源整合成一個具容錯能力、高效率且超大容量的儲存環
境，在 Hadoop系統中大量的資料和運算時產生的暫存檔
案，都是存放在這個分散式的檔案系統上。 
HDFS是 master/slave架構，由兩種角色組成，Name 
node及 data nodes，Name node負責檔案系統中各個檔案屬
性權限等資訊 (metadata, namespace) 的管理及儲存；而 data 
node通常由數以百計的節點擔任，一個資料檔會被切割成
數個較小的區塊 (block) 儲存在不同的 data node上，每一
個區塊還會有數份副本 (replica) 存放在不同節點，這樣當
其中一個節點損壞時，檔案系統中的資料還能保存無缺，
因此 name node還需要紀錄每一份檔案存放的位置，當有存
取檔案的需求時，協調 data node負責回應；而有節點損壞
時，name node也會自動進行資料的搬遷和複製。 
 
Thirft： 
由Facebook所研發Thrift是可跨語言 (C++、 Java、
Python、PHP、Ruby、Erlang、Perl、 Haskell、C#、Cocoa、
Smalltalk and OCaml.)銜接的軟體框架。 
 
 
圖 3 Thrift架構[2] 
 
如：圖 3所示，堆疊圖的最上層(Your Code)是從自行
定義的 Thrift定義檔案產生程式碼。在 Thrift堆疊圖中的棕
色部份FooService.Client和FooService.Processor主要是產生
終端和處理器程式碼。 Thrift 堆疊圖中的紅色部份
Foo.write( )/read( )和 Foo. read( )/write( )表示被發送的資料
結構（除了內建的形態之外）也會產生程式碼的結果。
protocol和 transport是 Thrift runtime函式庫的一部分，因此
使用者可以定義服務，而且自由的改變 protocol和 transport
而不用重新產生程式碼；Client端在 Thrift描述檔案中描述
自己的服務，這些服務經過編譯後會生成相對應語言的程
 5 
 
 
圖 6、7 Hadoop建置並啟動成功畫面 
 
 
V. 結論與未來發展 
本計畫順利完成第一年所需完成的 Hadoop 平台建置
子系統(HPS)，使用雲端平台讓多人連線時處理速度不會因
而讓電腦效能降低讓使用者使用速度不會因而變慢。測試
結果顯示使用雲端平台之運算效能較一般電腦效能高也較
快。在未來裡如此計畫繼續完成，相信此方式可以解決車
載端硬體與效能的不足，讓車載平台可以不再是封閉式平
台。 
References 
[1] Hbase, http://hbase.apache.org/ 
[2] Thrift, http://incubator.apache.org/thrift/ 
[3] Hadoop, http://hadoop.apache.org/ 
[4] Mark Slee, Aditya Agarwal and MarcKwiatkowski 
“Thrift: Scalable Cross-Language Services 
Implementation” 
[5] Chongxin Li, “Transforming Relational Database into 
HBase: A Case Study” ,IEEE, 2010 
[6] D. Carstoiu, A. Cernian, A. Olteanu,“Hadoop 
Hbase-0.20.2 performance evaluation”, IEEE, 2010 
[7] Jianling Sun; Qiang Jin,“Scalable RDF store based on 
HBase and MapReduce”, IEEE, 2010 
[8] Q. An, T. Dandan, S. Chengchun, G. Chang, “XConveryer: 
Guarantee Hadoop Throughput via Lightweight OS-level 
Virtualization,” Proc. IEEE Conf. Grid and Cooperative 
Computing (GCC 09), IEEE Press, Aug. 2009, pp. 
299-304, doi: 10.1109/GCC.2009.62.  
  7 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價值（簡要敘
述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適合在學術期刊發表或申請
專利、主要發現或其他有關價值等，作一綜合評估。 
 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
   ■  達成目標 
□ 未達成目標（請說明，以 100字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
[1] Yu-Lin Chu,Po-Yu Ke,Kun-Fu Tseng,Sing-Mei Lin,Sing-Mei Lin,Chin-Yuan Chang,” An Integrated Java 
Platform For Telematics Services”, The Fourth International Conference on Genetic and Evolutionary 
Computing (ICGEC 2010) 
[2] 朱鈺霖,林品豪,盛貫銘,侯信仲,張晉源,” 雲端運算結合行車紀錄器之肇事現場還原之應用與實作”, 2011 
IETAC, 樹德科技大學 
[3] 林品豪,朱鈺霖,張晉源,”雲端異質服務之整合與實作” 2011網路智能與應用研討會,樹德科技大學 
[4] 柯伯諭,曾坤福,張晉源,” MySQL語法轉換為HBase語法之中介機制探討”, 第十屆離島資訊技術與應用
研討會 (ITAOI 2011), 樹德科技大學 
專利：□已獲得 ■申請中 □無 
技轉：□已技轉 ■洽談中 □無 
其他：（以 100字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價值（簡要敘述
成果所代表之意義、價值、影響或進一步發展之可能性）（以 500字為限） 
 
車用資訊系統與車用電子產業已成為台灣資訊電子業未來發展的重點項目之一，不過由於目前每個廠商的車
載平台的不一致導致其他開發者無法順利開發和銜接。本計畫可提供車載平台統一性，讓開發者不用在因系
統跟平台不同而需學習不同的語言和系統。 
 
 
 
 
  9 
 
Figure 2. Cargle system architecture 
services can be updated anytime. 
A. Yunfeng et al. [10] proposed a telematics 
platform to base on OSGi that achieved emergency 
call, diagnostic services, navigation services and 
entertainment services. These are helpful for drivers 
to experience more safety and convenience during 
their trip. 
In telematics, the communications application is one 
of major researches, for examples: CAN (Controller 
Area Network), V2R (Vehicle to Roadside), V2V 
(Vehicle to Vehicle), V2I (Vehicle to Infrastructure), 
and V2P (Vehicle to Person) [8]. These telematics 
researches described above allow drivers and 
passengers to have better experience by providing 
completed services on telematics system. 
III. TELEMATICS SERVICES FRAMEWORK ON 
CARGLE CLOUD COMPUTING PLATFORM 
A. System Architecture 
Among the architecture of heterogeneous 
programming languages from several developers, 
likes Java, C, C++, PHP or HTML, could be joined 
one another easily on Cargle cloud computing 
platform to build integrated telematics services. This 
platform not only increases flexibility of developing 
applications but also reduces cost of ones‟ 
deployment. 
In Fig. 2, the telematics services built on varied Java 
platforms are dispatched for individual process, and 
there is no common address space within them to 
communicate with one another. By invoking JNI 
(Java Native Interface), a key method on Cargle, the 
telematics services built from heterogeneous 
programming languages are integrated. All services 
on Cargle could invoke the underlying C libraries or 
other APIs to retrieve other services supported from 
varied service providers. The telematic services 
developed on varied Java platforms could be 
standing alone or be cooperated with other services 
tightly. 
Moreover, the scalability of service applications on 
Cargle could be enhanced greatly. A variety of 
resources and capabilities supported by several 
programming languages could make perfect 
inter-operatability on Cargle platform. Service 
developers with varied backgrounds of technologies 
could also work as a team to build complex 
applications. 
For example, suppose a music player on Cargle 
platform developed by service provider A, the basic 
playable functions such as playback, stop and fast 
forward are formed as several methods. Another 
service provider B also develops a method with 
function to play as a video decoder on Cargle 
platform. Now, there is a service provider C would 
like develop a video player on Cargle, and the only 
thing the service provider C has to do is to extend 
the methods supported from service provider A and 
B respectively. Therefore, the integratability and 
reuseability of Cargle platform could shorten the 
time required for service development effectively. 
As a cloud computing platform, the performance of 
file system would be an important issue to support 
comprehensive telematics services. On Cargle 
platform, Hadoop distributed file system is 
integrated to deal with a large amounts of data store 
  11 
also generate an agent bundle for it. The main 
function of program executed on client side is 
responsible for communicating with Cargle cloud 
computing platform to retrieve telematics services. 
When registered users download the telematics 
services form Cargel, the service applications 
companying with agent bundle will be installed on 
telematics platform of client side at the same time. 
When the application services of server side are 
invoked by client side, the agent bundle will be 
notified to request resources from Cargle platform 
through the Method Agent Invocation Mechanism. 
Furthermore, as the version of an application service 
is updated, the Application Service Management 
Mechanism would be requested to notify agent 
bundle, which is a service program controlling 
application‟s life cycle, to execute update operation 
and restart the service. 
C. Telematics Based On Java Infrastructure 
Table I shows the comparisons of system features 
between current telematics systems and Cargle. In 
general, most of current telematics systems are 
isolated from networks, then these systems are 
usually operated individually, and no extra services 
could be installed respectively to promote the 
quality of service. 
TABLE I.  COMPARISONS OF TELEMATICS SYSTEMS 
 
System Features 
System 
Loading 
Service 
Resource 
Design 
Cost 
Update 
Rate 
Coding 
Speed 
Cargle low high high high high 
Others high 
mediu
m 
mediu
m 
low 
mediu
m 
 
Furthermore, the proposed Cargle cloud computing 
platform in this paper, which is integrated a variety 
of Java-based technologies, not only reveals some 
other better features such as saving design cost and 
coding time, but also supports a very mature 
object-oriented development environment. 
Especially, the advantages of relying on the support 
for multiple programming languages would be 
attractive to service providers to join development 
for telemtics applications. Therefore, the users on 
Cargle platform would get more comprehensive 
services on telematics, and build a seamless living 
network associated with home and office. 
IV. CONCLUSION 
This paper outlined a Cargle cloud computing 
platform to solve the problems of telematics 
platform in nowadays. In Cargle platform, a variety 
of Java-based platform technologies are integrated to 
establish an OSGi-oriented environment as a service 
management bridge that to connect between service 
providers and service consumers. Therefore, the 
comprehensive services of telemtics could be 
developed and delivered easily and consistently. 
Moreover, this solution could also reduce the effort 
for both server and client to process applications of 
telematics. All of the heavy computation is 
processed on Cargle cloud computing platform, and 
only user interaction and vehicle data gathering are 
processed at client. Then, the seamless connectivity 
among the vehicle, home and office could be 
achieved by way of the using of Cargle platform. 
REFERENCES 
[1] Q. An, T. Dandan, S. Chengchun, G. Chang, “XConveryer: Guarantee 
Hadoop Throughput via Lightweight OS-level Virtualization,” Proc. 
IEEE Conf. Grid and Cooperative Computing (GCC 09), IEEE Press, 
Aug. 2009, pp. 299-304, doi: 10.1109/GCC.2009.62. 
[2] B. Nicolae, D. Moise, G. Antoniu, L. Bouge, M. Dorier, “BlobSeer: 
Bringing High Throughput under Heavy Concurrency to Hadoop 
Map-Reduce Applications,” Proc. IEEE Symp. Parallel & Distributed 
Processing (IPDPS 10), IEEE Press, April. 2010, pp. 1-11, doi: 10.1109/ 
IPDPS.2010.5470433. 
[3] X. Jiong, Y. Shu, R. Xiaojun, D. Zhiyang, T. Yun, M. James, A. 
Manzanares, Q. Xiao, “Improving MapReduce Performance through 
Data Placement in Heterogeneous Hadoop Clusters,” Proc. IEEE Symp. 
Parallel & Distributed Processing (IPDPSW 10), IEEE Press, April. 2010, 
pp. 1-9, doi: 10.1109/ IPDPSW.2010.5470880. 
[4] L. Ralf, “ Google‟s MapReduce programming model—Revisited,” 
Science, vol. 70, Jan. 2008, pp. 1-30, doi:10.1016/j.scico.2007.07.001. 
[5] G. Sanjay, G. Howard, L. Shun-Tak, “The Google file system,” Proc. 
Proceedings of the nineteenth ACM symposium on Operating systems 
principles, vol. 37, issue 5, Oct. 2003, pp. 29-43, doi: 
10.1145/SOSP.1165389.945450. 
  13 
  
 An Integrated Java Platform for Telematics Services 
 
Abstract—Telematics systems are becoming important digital 
products in near future. However, the most of current telematics 
systems are isolated from the networks. All of the services are 
embedded on one single system that has caused lack of diverse 
information services, and want a more powerful embedded system 
to support. 
 In this paper, an architecture of cloud computing platform 
served telematics services is presented. This architecture 
integrates varied Java-related platform technologies, including 
Android, OSGi and LAMP, etc. It is not only to support multiple 
developing environments, but also to comprehensive telematics 
services. Moreover, it can reduce the requirement of computing 
power in telematics systems and allows vehicles to connect home 
or office with seamless connectivity. Consequently, it promotes 
information services with intelligence and convenience. 
Keywords- Java; Android; OSGi; LAMP 
I. INTRODUCTION 
Since home and office play as two major living 
spaces, our living quality has been improved by 
applying information technology through varied 
networks.  On the other hand, the linkage of these 
two spaces, as a transporting vehicle, are also 
expected to serve high quality information services, 
playing a role to integrate two living spaces, 
consequently telematics is called as a key product 
for digital industry in near future. 
 Most of current telematics systems are formed as 
closed embedded system. Because its processing 
speed is slower than home computer, in which 
service providers cannot build a comprehensive 
information service to satisfy users’ needs.  
Moreover, within above telematics system, 
telematics platform to set an environment for the 
developer, likewise service provider’s development 
is limited at Telematics services. And, among a wide 
range of the development of technical language 
market, it is also doubted whether varied services 
can be cross-platforms used. 
This paper proposes cloud computing platform 
architecture, as called ―Cargle‖, shown as in Fig. 1, 
to enrich telematics service as well as to reduce 
burden of telematics system. This architecture assists 
the service providers to establish a service platform 
to 
include varied developing technologies. In addition, 
it also presents the integration of heterogeneous 
Cargle cloud computing platform compilers 
technology to reduce the providers’ cross-platform 
cost. 
At following chapters, the advantages of Cargle, a 
cloud computing architecture, are discussed. In 
Chapter II, the differences between current 
telematics systems and Cargle are presented. Then, 
Cargle Cloud Platform solving current problems of 
in-vehicle platforms can be seen in Chapter III. 
II. LITERATURE REVIEW 
L. Yuantao et al. [9] proposed a telematics platform 
which is based on OSGi, and has reached two goals. 
First of all, to communicate with other devices, 
those are not belonged to the Home LAN, through 
the gateway by using the telematics platform. 
Second,services are provided and relied on Service 
Provider. Because of these two are reached, the 
services can be updated anytime. 
Figure 1. Telematics services deployed from Cargle cloud computing platform 
 Figure 3. Services invocation on Cargle platform 
 
Figure 4. Senario of system operations 
MapReduce is a key technology of Gargle cloud 
computing platform, and constituted by two phases - 
the Map phase and Reduce phase. When users 
submit service requests to Cargle cloud computing 
platform, all of the matched resources stored in the 
distributed file system would be searched during the 
Map phase. Then, the Reduce phase recomposes the 
distributed resources searched during the Map phase. 
Consequently, it is efficiency that Cargle cloud 
computing platform handles the requests of users to 
search resources in distributed file system through 
the process of MapReduce. 
In this paper, we propose a mechanism of the service 
management. The details as follows: 
1) Service Agent Registration Mechanism: In this paper, 
the communication between the  vehicle platform and the 
cloud platform is dependent on OSGi framework. To consider 
the service provider is from a variety of development 
languages, this paper is developed in this part of the Service 
Agent Registration Mechanism is responsible for integrating 
applications in various languages. Shown in Fig. 3, when the 
service provider after the upload application that will produce a 
Bundle by Bundle Extend, and responsible for service provider 
link to upload applications. 
2) Method Agent Invoke Mechanism: When the demand for 
Route Bundle services from users, and then through the 
Service Agent Registration Mechanism of Bundle to notify 
Method Invoke call specified applications. Through the 
Method Agent Invoke Mechanism integration  multilingual 
applications that let telematics platform to use the service more 
simple. 
3) Application Service Management Mechanism: Cloud 
platform and the user side OSGi Framework are with Version 
Control service, Version Control service is responsible for 
record version of each application service program. When the 
service provider to inform Cargle cloud computing platform 
has applications to update, and then Cargle cloud computing 
platform will inform the user update. When the user delete 
application services, Application Service Management 
Mechanism will lists the related services program, and after the 
user click to delete , all programs associated with be deleted. 
B. System Operation Senario 
On Cargle platform, services developed by 
third-party vendors could be deployed easily. In Fig. 
4, a telematics service example which collects the 
traffic throughput in real-time as driving on road is 
shown to describe the process of system operations 
for services deploying. 
Suppose a GPS service developed by one service 
provider on Cargle platform, it is allowed to extend 
the methods developed by third-party service 
providers directly. When the development of GPS 
service is complete, two programs, one for server 
and the other for client, would be created and 
uploaded to Cargle platform as well. One program 
executed on server side is responsible for connecting 
the methods developed by third-party service 
providers and Hadoop, and Application Service 
Management Mechanism on Cargle platform will 
also generate an agent bundle for it. The main 
function of program executed on client side is 
responsible for communicating with Cargle cloud 
computing platform to retrieve telematics services. 
When registered users download the telematics 
參與國際研討會心得報告 
本次承蒙國科會補助參加 The Fourth International Conference on Genetic and 
Evolutionary Computing 國際研討會。此一國際研討會已有多年的舉辦歷史，每
年都在亞洲不同的國家舉行。本次研討會的主題主要含括????，並希望能藉由此
一研討會齊聚學界與業界的人員，共同研討新運算科技的發展趨勢。 
本次國際研討會邀請國際知名學者進行四場的 Keynote Speeches。包括： 
 Professor Ajith Abraham(印度籍)，演講主題為 Nature Inspired Heuristics: Quo 
Vadis。 
 Professor Wen-Lian Hsu(中華民國籍)，演講主題為 Capturing Semantics: 
Knowledge-Based or Machine Learning Approach。 
 Professor Jianrong Tan(中國籍)，演講主題為 Technology and Application of 
Product Evolutionary Design。 
 Professor David Powers (澳洲籍)，演講主題為 Evolution of an Intelligent 
Agent。 
此次會議的榮譽主席包括中國哈爾濱理工學院的 Shuguo Wang、深圳大學的
Weixin Xie、澳大利亞南澳大學的 Lakhmi C. Jain 與中華民國逢甲大學的
Chin-Chen Chang所擔任。代表各地區的議程召集人則包括中國、日本等國之學
者。參與發表的國家超過十國以上，論文高達 200多篇以上。本次研討會中優秀
的論文將推薦至 The Journal of Information Hiding and Multimedia Signal 
Processing (JIHMSP)中進行審查，並有機會刊載於特別議題的期刊當中。 
本次研討會的舉行時間為 2010年 12 月 13至 15日。舉行的地點位於中國廣東省
深圳市大學城中的哈爾濱理工學院校區。本此會議舉行的地點距離深圳市區最繁
榮的華強北路還有一段距離，交通上有些不便，每日的通勤經常會有一些小問題
發生。研討會的地點是哈爾濱理工學院校區的會議中心。該中心的主要的功能除
舉辦會議之用外，也提供研究生的教學與研討使用。中心裡各項會議的空間設計
依據會議的類型而有多種的選擇。會議室中所配置的設備與服務尚稱符合需求。 
本次參與研討會是以整個計畫為主體，向大會申請 Invited Session。Session 的編
號為 ICGEC-2010-IS13，名稱為Systems and Algorithms for Telematics Applications 
(SATA)。 
本次會議發表的論文題目為「An Integrated Java Platform for Telematics Services」，
並安排於第一天的上午進行論文簡報。當晚並在會議所舉行的飯店設歡迎晚宴。
宴會上，大會主席介紹此次大會的主辦單位相關人員、評審，並頒發本次論文研
討會中最佳論文獎，其中不乏各國優秀的研究學者。 
學生參與國際研討會心得報告 
 
這次出國報告論文，心情很開心又很緊張，因為是第一次離開台灣。深圳很先進
和想像中的不一樣，很像台灣的建國路，但規模是建國路的五、六倍。電器設備
樣式多而且價格都很便宜，並且幫研究室買了一些實驗用的設備以供研究用。報
告當天很緊張，第一次用英文演講，因為是早上的第一輪的第一位報告，底下坐
了中國、香港、台灣及新加坡的教授。剛開始報告時有一點不順，後面講的越來
越順，後來其中一個教授有提問，好險有順利的回答。會後有去參觀哈爾濱工業
大學的內部環境，有許多的東西是我們值得學習的，其中一個就是中國的學生積
極度很高，台灣過去的教授他們的學生一律是緊追著問問題。這次的會議收穫很
多，也讓學生警惕了許多，回台灣後能夠更加積極許多。  -朱鈺霖(研究生)
An Architecture Based on Android Platform for Telematics System 
 
Lu-Wei Ko,Pin-Hao Lin, I-Chin Chiu, Chin-Yuan Chang
* 
Department of Computer Science & Information Engineering, Shu-Te University, 
#59, Hengshan Rd., Yanchao Township, Kaohsiung County 824, Taiwan (R.O.C.)* 
Corresponding Author:@stu.edu.tw 
 
ABSTRACT 
This paper present a telematics system constructed by Android systemdeveloped by 
Google, and it combines the communication technology of wireless network and the 
system of cloud service to improve the problems of closed architecture and lack of 
services. The system architecture designed in the concepts of ―Thin-Client‖ and 
―Cloud Service‖, and the complexity of computing the services required are addressed 
by the cloud server and management the services of telematics dynamically by OSGi.  
 
Keyword:Telematics, Android, Cloud Service, Thin-Client, OSGi 
 
1. Introduction 
The Android operating system which is developed by Google Inc. has become a 
popular Cell phone operating systems nowadays. Android operating system provides a 
cross-platform environment that makes application programs able to run in different 
platforms such as handheld electronic devices and PDAs. (For examples, cell phones 
products like HTC Desire, Motorola Milestone, Samsung Galaxy and so forth. 
Another examples for PDA products are Axim x51v and Sharp Zaurus. Asus’ 
netbooks EeePC 701 is also available.) 
 
Android is based upon a modified version of the GNU/Linux kernel. It integrates the 
library of system and provides the Java-based APIs and the component frameworks, 
thereby solving the following two problems to provide developers a better 
environment: The problem of traditional embedded Linux system based on GNU C 
Library and the problem of library dependencies. Choosing Android as the platform of 
telematics system not only solves the library dependencies problem but also provides 
the frameworks to increase the efficiency of the service application development. To 
makes OSGI having more functions. Making cars as a connection of office and home. 
 
Most of the Telematics Systems can be divided into two main categories: The first 
category is the systems that are invented by the car companies themselves like Lexus 
G-Book, GM OnStar, Luxgen Think+ and so forth. The second category is the GPS 
that is sold by the car shop like TomTom GO and MiTac Mio. Even the categories 
navigation, but also provide to connection with care remotely, and they will provide 
other Internet Service in the feature. 
 
Figure 2AutoLinQ 
 
3. Technology analyze 
This paper presents the Android system as the structure for the telematics platform, 
and uses the concept of thin-client as the vehicle service environment. The telematics 
connect to the remote servers (such as: cloud servers) through the wireless network 
(such as: 3G, WiMAX, Wi-Fi), and complex or large data processing address by the 
cloud servers (Shown in figure 3). 
 
Figure 3 System Environment 
 
In order to maintain the thin-client structure for telematics, this paper presents the 
execution environment with OSGi Framework for the telematics system. The service 
will be downloaded in OSGi Bundle format via internet and install in the telematics. 
The OSGi Bundle will be exported as Android Package (APK) automatically and 
installed in Android system (Shown in figure 4) 
 Layer 1: Linux kernel and Drivers 
The major components of layer 1 are composed of standard Linux 
kernel, Android system core driver and Android device driver. It 
includes Binder IPC, display drivers, audio drivers, camera drivers, 
input device drivers, Wi-Fi drivers, Bluetooth drivers, power managers.  
 Layer 2: Libraries and Android run-time environment 
Android libraries providers C/C++ libraries, includes system C 
libraries, media libraries, surface manager, LibWebCore, SGL, 3D 
libraries and free type. The major components of Android run-time are 
composed of core libraries and Dalvik virtual machine. The core 
libraries provides most functions of Java core libraries, and the Dalvik 
virtual machine is improved over Java virtual machine, and Dalvik 
virtual machine can only execute Dalvik executable files(e.g., 
classes.dex). 
 Layer 3: Application framework 
This layer provides the Android application APIs and abstract layer to 
accesses system resources and user interface. 
 Layer 4: Application  
Android applications are all uses Java program language and based on 
Android APIs. 
 
3.2 Open Service Gateway initiative (OSGi) platform 
OSGi defined the open service platform and allows the service provider to provide the 
service applications. And it can follow the user’s requirements to download the 
service on the gateway to install and executes automatically. The OSGi are composed 
of Framework, Bundle and Services (Shown as figure 6): 
 
 Framework:  
The OSGi Framework is a module system and service platform for the Java 
programming language that implements a complete and dynamic 
component model. 
 Bundle:  
Bundles are normal jar components with extra manifest headers. 
 Service:  
The services layer connects bundles in a dynamic way by offering a 
publish-find-bind model for plain old Java objects (POJO). 
 After the conversion is complete, we have to execute the command of Dalvik virtual 
machine. The format of command shown as follow: 
 
Figure 9The command format of start OSGi Framework 
 
After the command s complete, the OSGi framework executed on the Android system. 
 
4.System Design and Implement 
4.1 System Design 
This paper proposes a telematics interoperability platform built by Android System, 
and using OSGi as core architecture for providing telematics services(Shown as figure 
10). For the purpose of using OSGi as an Android Service to reside in the Android 
System, we decide to create a Linux batch filecontent with OSGi ―START‖ command 
and add the batch file name into the ―init.rc‖ in the Android System (Shown as figure 
11). 
 
Figure 10 Software stacks of this paper 
 
Figure 11The command in init.rc file 
 AO Bridge including 3 main functions(Shown in figure 15): 
1. To create an Android Package corresponding to export bundle and install in 
the Android System. 
2. To retrieve the Android Package START command exported by OSGi. 
3. Service Bundle become available in Android System   
 
Figure 15The AO-Bridge architecture 
 
AO-Bridge content 3 functionalities: 
 Service Manager 
 APK Wrapper 
 OSGi Service Listener 
 
Service Manager: 
Service Manager will be the Service Bundle when the OSGi is started. Its 
main function is to monitor OSGi Registry and get the ServiceReference. 
When a new service bundle is installed and register in the OSGi Service 
Registry, service Manager will get the Bundle’s service information and 
write into a XML file. While the APK Wrapper retrieves the XML file, the 
APK Wrapper will create an Android Package (APK) file and install it in 
Android System. Another functionality of Service Manager is to retrieve 
information from OSGi Service Listener and the Service Bundle in OSGi. 
APG Wrapper: 
 Figure 17 Apache Felix OSGi Framework On Android 
 
To execute the Android Application that is implemented by this project on the 
Android platform, and the OSGi service is started by using AO-Bridge (Shown in 
figure 19). 
 
Figure 18Android application screenshot 
 
5. Conclusion 
This paper proposed the architecture of telematics platform which is built by 
Thin-Client. When a service requires a huge and complex computing, the installed 
services of telematics platform will transmit necessary data to the Could Platform via 
Wireless Network, and responses the result back to telematics platform and display 
when the request computation is completed. 
 
This architecture is based a stable network connection. If the telematics platform has 
no ability of network, it becomes our future work of keep providing services during 
the time of no network service. 
 
REFERENCES 
[1] Teng-Wen Chang, Android/OSGi-based vehicular network management system, 
Advanced Communication Technology (ICACT), 2010 The 12th International 
參加國際研討會議心得報告 
本次承蒙國科會補助參加由 Knowledge Association of Taiwan 與 International 
Business Academics Consortium (IBAC)於日本東京所舉辦的 2011 International 
Conference on e-Commerce, e-Administration, e-Society, e-Education, and 
e-Technology (e-CASE & e-Tech 2011)國際研討會。此一國際研討會已有多年的舉
辦歷史，每年都在亞洲不同的國家舉行。此研討會的主題主要含括 e-Commerce, 
e-Administration, e-Society, e-Education, and e-Technology，並希望能藉由此一研討
會齊聚學界與業界的人員，共同研討 e化的新科技與發展趨勢。 
此次會議的主席是由 Purdue University的 Kwei Tang所擔任。亞洲各地區的共同
召集人則包括日本、中華民國、泰國、中國、德國和新加坡等之學者。參與發表
的論文高達200多篇以上。此外本次研討會議中最佳論文獎設有US$500的獎金。
優秀的論文將推薦至 International Journal of Business and Information (IJBI) 或 
International Journal of Cyber Society and Education (IJCSE)中進行審查，有機會刊
載於特別議題的期刊當中。 
本次研討會的舉行時間為 1月 18至 20日。舉行的地點為日本東京 Toshi Center 
Hotel。舉行的地點位於東京市區，距離日本皇宮僅數百公尺，是日本東京很有
特色的文教區域。研討會的地點就是一個以會議中心為主體的複合式飯店。飯店
中提供各種會議所需的空間與設備，且提供會議進行中所有需要的服務。會議進
行中的議程控制與服務，都有水準以上的呈現。 
本次參與研討會是以「An Architecture Based on Android Platform for Telematics 
System」為題目，並安排與最後一天的上午進行論文簡報。研討會舉行的第一天
主要為簽到與大會活動。下午開始相關參與人員開始進行簽到並領取會議論文手
冊。當晚並在會議所舉行的飯店設歡迎晚宴。宴會上，大會主席介紹此次大會的
主辦單位相關人員、評審，並頒發本次論文研討會中最佳論文獎，其中不乏各國
優秀的研究學者。 
本次參與研討會的人員除了本人以外，還帶領四位學生一同出席體驗國際會議論
文發表實境。為培養學生具有在國際研討會中發表論文的能力，本人指派此次主
要發表論文的學生柯祿韋進行英文口頭簡報。為完成此次論文的發表工作，本人
事先安排學生進行約四週的英文口語演說課程，協助柯同學規劃英文簡報的內容
與演說的能力。最後，於論文發表的前一天，再進行最後的確認，務必使學生心
理的恐懼與負擔降至最低。期望有水準的表現。 
會議進行的第三天上午，我們一行人約九點就抵達會場聆聽相關的論文發表。在
我們發表之前的場次中，舉辦單位臨時通知希望由我擔任下一場的主持人，因為
學生參與國際研討會心得報告 
此次參加的論文研討會為 e-CASE & e-Tech 2011 並於日本東京舉行，主要為國際
性論文研討會議，主投稿主題包含：e-Commerce、e-Administration、e-Education、
e-Society和 e-Technology。議程中有許多來自世界各國的研究學者投遞此次論文
研討會，而本次主要以「An Architecture Based on Android Platform for Telematics 
System」投稿 e-Technology主題。研討會第一天主要為簽到日，從下午開始進行
簽到並領取會議論文手冊，並於晚上舉行餐會。在餐會上，主要介紹此次大會的
主辦單位相關人員、主席與評審，並頒發本次論文研討會中最佳論文獎，其中不
乏各國優秀的研究學者，見識到許多不同領域的研究主題。 
由於此次的論文會議是個人首度第一次參加國際性論文研討會，並以英文報
告本次的會議論文，與以往所參與的國內論文研討會不同的是在於中文投影片與
英文投影片所呈現與排版的方式大相徑庭，在投影片的製作與報告流程頇花費一
番時間與心力準備。在報告過程中，主要是採用英文口述方式進行論文發表，由
於是第一次透過英文發表論文，在報告期間心裡非常緊張，常會忘記一些英文單
字，即便如此仍是頇克服內心的緊張感完成論文的報告。雖然個人認為本次的論
文發表並非順利，但仍是一次重要的經驗，經過此次的論文發表，深知英文的重
要性，頇加強英文能力以增直自己。 
此次的論文發表，除了在學術上見識到各國的研究，同時也了解日本的風土
民情與台灣的差異。大部分的日本人在日常生活上的言行舉止相當禮貌，在搭乘
電車時相當安靜不干擾他人。而日本的環境也維持的相當整潔與乾淨，地上幾乎
不見垃圾紙屑；而在用餐時，服務人員也通常具備多語能力，除了英文外也同時
具備中文溝通能力，見識到日本東京國際化都市的一面，是值得我們學習借鏡的
典範。 
 
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：張晉源 計畫編號：99-2220-E-366-005- 
計畫名稱：結合雲端運算之創新車載資通訊系統與應用服務平台之研發與實做--總計畫 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 1 1 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
