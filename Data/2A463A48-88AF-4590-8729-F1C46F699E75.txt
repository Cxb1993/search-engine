 2
目錄 
壹、  中文摘要及關鍵詞.............................................................................................................................. 3 
貳、  英文摘要及關鍵詞.............................................................................................................................. 4 
參、  報告內容.............................................................................................................................................. 5 
一、  前言.............................................................................................................................................. 5 
二、  研究目的...................................................................................................................................... 5 
三、  文獻探討...................................................................................................................................... 6 
(一)、  技術分析理論...................................................................................................................... 6 
(二)、  系統開發模型...................................................................................................................... 7 
四、  研究方法.................................................................................................................................... 13 
五、  結果與討論(含結論與建議) ..................................................................................................... 15 
肆、  參考文獻............................................................................................................................................ 22 
伍、  國科會補助專題研究計畫成果報告自評表.................................................................................... 24 
陸、  國科會補助計畫衍生研發成果推廣資料表.................................................................................... 25 
 
 
 4
貳、 英文摘要及關鍵詞 
 
As with any software system development project, trading strategy generated by technical analysis, has its 
life cycle. Some only last for a few months, or even only a few days or hours. The trading strategy becomes 
ineffective after then. This study attempts to provide a visual based tool that allows traders using simple Drag 
& Draw method to convert the idea of trading strategy to the program that is ready for execution. At the end 
of the life cycle of trading strategies, they can be modified, updated or deleted easily. This will make the 
trading strategies adapt to the fast changing market and let the traders generate more profit.  
 
Keywords-algorithmic trading; visual programming 
 6
這種情況下，交易系統應作相應的修改。 
 
交易系統的優化和演算法策略的修改都需要 IT 人員的參與。然而，大多數的 IT 工程師不具
備財務背景，也不知道專業交易員或基金經理們的策略規則，這需要專業交易員或基金經理們擬
好策略規則後再移交給 IT 人員進行系統或策略的優化。問題是之間的溝通需要相當的時間。該
系統修改可能無法及時完成以因應市場高頻率的變化。 
 
另一種方法是使用交易平台中內置的 Script 語言。雖然 Script 語言的語法比傳統程式設計語
言更容易，但大部分的使用者沒有 IT 背景，編寫程式和 Script 語言可能也太難為各基金經理們，
所以我們要採取不同的方法。提供了一個視覺化的開發工具，使交易者可以簡單地將交易策略畫
在屏幕上(Plaisant 2004)。開發工具可以自動的把圖形轉換成的交易策略並執行程序，且準備進一
步的嚴格回溯測試。如果測試結果呈陽性，演算法策略便可以及時的投入生產。 
 
三、 文獻探討  
 
(一)、 技術分析理論 
技術分析則偏重於股票價格的研究，即就實際的動態市場，以各種線圖來預測股價未來可能
變動的狀況。所使用資料， 以成交價和成交量或成交值為主。 
 
1. 基本概念： 
所謂技術分析，是指研究股市或個別股價未來變動的方向或程的各種分析法。使用各種技術
分析前，須先了解技術分析的假設。根據技術分析專家愛得華（Robert D. Edwards）和梅紀（John 
Magee）的看法，技術分析的主要假設如下： 
(1)股價係由供需的交互關係所決定 。 
(2)影響供需因素，主要有理性的和非理性的因素 。 
(3)雖股市時有小幅波動，但股價仍常於某一期間中，以一特定 趨勢移動。 
(4)股價趨勢的變動，係因供需關係改變所致，其趨勢的變動，可從劃線圖型中偵查出來。可
知技術分析的基本目的，在從過去的歷史資料，找出股市或股價行為的型態。 
 
 
 8
和 VanCampenhout，1992 年），甚至連需求分析與規劃都不需要，他們並提出了此種模型。 
 
該模型步驟如下：(1)決定系統需求 (2)使用 VPLs，實做系統，來滿足這些要求，並建立原型
(3)模擬運行這個原型，並確定需求還沒有得到充分的執行，例如，性能和其他非功能要求（即使
這是自相矛盾這些原則的原型）(4)評估模擬的結果，並修改 VPLs，更準確以反映的要求且隨時
返回到步驟 3; (5)執行系統，並維護。 
該模型完全忽略了系統是需要規範和設計的。，只用一個臨時添加的實作去取代之(因為視覺
化程式並沒有一個正式的規範和設計)。它甚至不為漸進的發展模式提供一個支援，連改善視覺化
程式都放在臨時添加的實作，視覺化程式的實作是隨意的(因為沒有規範)，很少使用 library 的轉
變(VPLs 在開發上沒有 library 可以使用)，library 也不存在。該模型允許很小很小的階段生命週期
迭代，需求改變時無法支援（儘管這可能是隱含在模型），前兩個階段的發展是完全孤立的，其
中一個最主要的批評是它是個'瀑布'模型 
但以目前來說，則出現另一個問題。在目前，物件化導向設計謂為主流.但如 Llewellyn[1]、
Orfali[2]等人所言,用物件化導向方法來設計視覺化程式是不足的,因為視覺化程式是以事件發動
來進行活動,而物件化導向方法並不能顯示出此點[4,5,6]。後來，程裕繁先生[3]提出了 VMVP 架構,
企圖從原有的傳統模式化工具、整合出一套方法,以切合視覺化程式設計的策略. 
VMVP 的特點;其一是在開發過程使用三層次的 DFD 來描述整個系統.因為 DFD 能很清楚的
 10
4.  XML(eXtensible Markup Language)： 
隨著電腦的普及，許多企業或組織內部均以電腦來儲存、處理資料，然而，由於不同組織使
用的應用系統不一， 所產生的資料格式並不相同，當不同組織因業務需要必須進行資料交換時，
通常還需要經過人工作業重複鍵入資料， 轉至於己方的系統中，形成作業流程中的一大滯礙。
實施電腦化最早的美國發現此一瓶頸，為了解決這個問題， 於是便有部分企業與其交易往來之
對象約定，以特定的標準格式傳送表單，可視為 EDI 應用觀念的起源。 
 
兩個系統只要透過專線，形成加值網路(VAN)，就可以透過雙方定義的 EDI 進行資料交換。
因為 EDI 需要使用專門的軟體，來翻譯與解釋 EDI，且把商業文件翻譯為 EDI，也是複雜且費時，
再者 VAN 網路也非常昂貴。當 Internet 興起後，使用免費的 Internet 與開放性格式的 XML 也越
來越多，漸漸的取代了 EDI。 
 
XML 「可擴展標示語言」(eXtensible Markup Language) 是用於標示具有結構性資訊的電子
文件的標示語言。規格是由「全球資訊網標準制定組織」（W3C）制定，並於 1998 年 2 月成為
推薦規格。它最早是基於一個國際標準 -- Standard Generalized Markup Language (SGML) -- 
International Organization for Standardization (ISO) ISO 8879:1986 所簡化而成的。XML 的格式類
似 HTML，但是它不提供已經制定好的標籤及文件結構，而是讓使用者自行定義，其重點在於還
可攜帶資料。  
 
XML 被提出的主要原因就是它可以攜帶資訊，這是 HTML 所無法辦到的。而且因此能自訂
格式，所以在傳統的文件上因為格式上的不一致造成資訊難以傳遞與交換，以致於同樣的資料無
法共用，在 XML 上獲得解決。例如台灣 ebXML 推廣中心就負責台灣 ebXML 標準的制定。XML
就像是 SGML 的一個子集合，去除 SGML 中較為複雜與不常使用到的部分，讓使用者能更容易
與輕易的定義出自己特定的文件型態（DTD）。它擷取了 SGML 的優點，並且補足 HTML 在網
路程式發展上不具彈性的缺點，而讓人能在網路上傳輸與處理各種複雜的文件與資訊，越來越多
的技術使用 XML 在傳遞資料，例如 IBM 的 BizTalk，例如現在所流行的 WebService、SOAP。 
 
5.  UML 
UML(Unified Modeling Language)是由 Booch, Rumbaugh(OMT)以及 Jacobson 所發展的為物件
導向分析與設計(OOA & OOD)的表達方式，目前已被企業界與學術界廣泛的採用。它是一種新的
 12
 
圖 2-8 類別圖 
（III）循序圖（Sequence Diagram）：循序圖包含的元件有類別角色、生命線、活動與訊息，
類別角色為互動關係中的物件，生命線則是物件存活的時間，活動為物件執行所經過的時間，訊
息則是物件間的溝通，它顯示了類別角在互動的過程中交換訊息的行為，其循序圖的組成如下圖：  
 
圖 2-9 循序圖 
UML 並非針對任何一個特定的問題的解決策略。相反的，它非常具有彈性，可適用於任何的
策略。它具有下列幾項特性： (1)將問題詳細說明、具體化、瞭解、並製作說明文件-取得、傳遞
及運用在解決問題所需的知識。(2)將解決方法詳細敘述、具體化、建構、並製作說明文件。所以
本研究將利用 UML 這樣的特性，來解說其系統的操作流程、結構與功能。 
 
 14
 
圖 4 平台畫面 
 
在策略元件區有多個策略元件,其介紹如下： 
Start 元件：為每個交易策略流程的起點,一個流程只能有一個 Start. 
Condition 條件式元件：使用者可撰寫交易策略條件式,根據條件式,如果不符合條件式,流程有不同的走
向. 
Buy 元件：當流程跑到此步驟時, 交易策略就進行買入. 
Sell 元件：當流程跑到此步驟時, 交易策略就進行賣出. 
End 元件：為流程的終點, 可以有多個終點. 
 
該系統操作流程如下： 
先把 Start 元件拖曳到交易策略流程顯示區. 
平台會記錄 Start 元件的位置、元件名稱、後一個元件的資訊…etc,並組成 XML,存入 Component DB. 
可拖曳多個 Condition 條件式元件,程式會自動產生帶箭頭的線條,表示其執行流程. 使用者按下滑鼠右
鍵,可設定判斷條件,如下圖： 
 
圖 5 Condition 條件式元件設定 Windows 畫面 
 
平台會把每個 Condition 條件式元件設定的條件存入 Condition DB.並把各個 Condition 條件式元件的位
置、元件名稱、前後一個元件的資訊存以 XML 的形式存入 Component DB. 
使用者可根據所需, 拖曳買賣元件,讓策略符合其條件時,程式就能自動進行買賣 Component DB. 
其買賣元件相關資料也會存入 Component DB. 
 16
Visual Development Platform for White-Box Algorithmic Trading 
 
INTRODUCTION 
According to Greenwich Associates, Inc., more than three-quarter of U.S. institutions and 95% of large 
institutional traders implement their trading strategies with algorithmic trading technology [1]. However, as 
Kim mentioned [2], heuristic algorithm need to react faster than ever before. Kumiega & Van Vliet [3] 
proposed using Excel and VBA as the case tool to develop programs for trading strategies. It is a relatively 
simple and fast comparing to traditional sequential coding method. Although VBA is relatively simple, but still 
need someone to write the code. For IT programmers, this is not a drawback. However, for most of the traders 
who are not professionally trained for coding, there are still some degrees of difficulty to write a working 
program quickly. 
This paper proposes a set of tools to implement trading strategies using visual programming methodology. 
Not only can it shortens the strategy development time, but also allows the users free from the trouble of 
writing programs. In other words, traders who do not understand the programming languages can concentrate 
on the design of strategies without worrying about the coding trouble. 
 
ALGORITHMIC TRADING LIFE SPAN 
Algorithmic trading refers to the trading technology that enables the traders to convert indicators of 
fundamental analysis, technical analysis as well as quantitative formula into computer program using 
programming language.  Such program is capable of generating buy/sell signals when predefined criteria were 
satisfied. Traders who follow the computer generated signal to execute buy/sell orders can avoid irrational “buy 
high and sell low” orders. Not only can algorithmic trading avoid the trader’s emotional response, but also 
reduce the trading cost and risk by disciplined trading mechanism. 
Similar to any other software system, the algorithmic trading system has certain life span. System 
modification is inevitable when the program specification no longer meets the user requirement. Even 
completely redesign a whole new system to replace the old one is possible [4]. The same principle is also 
suitable for algorithmic trading [5]. Some people argue that a stable system does not need modification. Instead, 
it should automatically be suitable for all market situations whether it is bull market, bear market or non-trend 
market. People who support this argument believe that a stable system should be profitable continuously in 
these three different markets. 
However, according to market experience, a well developed trading system, even through rigorous testing, 
can only last for certain time span. The trading system should be re-examined after then to determine whether it 
sustains the steady profitable capability. If the examination result does not meet the expectation, system 
modification or redesign is should be considered. 
As Pardo suggested [5], if a well designed trading system optimized with one year historical data, the life 
span of such a system should last for three to six months. The longer time period for historical back testing, the 
longer time span of the trading system does, resulting less chance to go through necessary optimization process. 
On the other hand, if the historical data for back testing is shorter, the chance of doing required optimization is 
much higher. Even though a good trading system functioned perfectly in the bull market may fail suddenly if 
the market trend becomes bearish. In this case, the trading system should be changed accordingly. 
 18
A visualized program is composed of multiple windows. Each window owns multiple components. Each 
component has its own function. The component list can be used to elaborate the attributes of the components. 
TABLE II shows the columns of component list. 
TABLE II.  COLUMNS OF COMPONENT LIST 
Component Type Purpose Memo 
 
Each component triggers an event. The relation of the component and the event can be represented by event 
handler list, as shown in TABLE III. 
TABLE III.  COLUMNS OF EVENT HANDLER LIST 
Component Event Process Purpose Memo
 
The procedure specification is represented by flow chart, which is similar to that of structured analysis. It 
describes the processing logic of specific procedure. Every event handler in the event handler list should have a 
procedure specification as shown in Figure 1. 
 
 
Figure 1.  The event handler processing logic. 
We develop a visualized algorithmic trading development system based on the visualization design models 
as mentioned in this section. 
 
System Architecture 
Our system can be partitioned into two parts: (1) the visualized operation front-end, (2) the back-end control 
engine. The system architecture is shown in Figure 2. 
 
 20
 User drags a start component to the trading strategy area. 
 User can drag multiple condition components to the trading strategy area. Clicking right mouse button 
will bring up the settings window. User can set up some conditions there. Pressing the Save button can 
store the condition for future reference. The settings  of condition  window  is showed in Figure 4: 
 
Figure 4.  The settings  condition  window. 
 If user feels that the basic index provided by the system is not enough, he or she can also customize the 
function. In the main window, user is allowed to select the “create function” sub-item, which is in 
custom menu.  System can jump out the window of customized function. It allows user to customize 
their functions. The window of  customized function is showed in Figure 5: 
 
Figure 5.  The window of  customized function. 
 User clicks the Save button, the function will be added to the settings condition window for users 
automatically. 
 User can drag Buy, Sell or End components to the trading strategy area. Figure 6 shows an example of a 
complete trading strategy, Pressing the Save button can store the strategy for future reference. 
 
 22
肆、 參考文獻 
 
[1]  APAMA, "MANAGING RISK ACROSS THE TRADING LIFECYCLE," PROGRESS APAMA WHITE PAPER, 
2009. 
[2] K. KIM, ELECTRONIC AND ALGORITHMIC TRADING TECHNOLOGY: THE COMPLETE GUIDE: ELSEVIER, 
2007. 
[3] KUMEIGA AND V. VLIET, "A SOFTWARE DEVELOPMENT METHODOLOGY FOR RESEARCH AND 
PROTOTYPING IN FINANCIAL MARKETS," QUALITY FINANCIAL MANAGEMENT, ELSEVIER, 2006. 
[4] N. NURMULIANI, ET AL., "ANALYSIS OF REQUIREMENTS VOLATILITY DURING SOFTWARE 
DEVELOPMENT LIFE CYCLE," PRESENTED AT THE PROCEEDINGS OF THE 2004 AUSTRALIAN SOFTWARE 
ENGINEERING CONFERENCE, 2004. 
[5] R. PARDO, THE EVALUATION AND OPTIMIZATION OF TRADING STRATEGIES, 2 ED.: WILEY, 2008. 
[6] B. SHNEIDERMAN AND C. PLAISANT, DESIGNING THE USER INTERFACE: STRATEGIES FOR EFFECTIVE 
HUMAN-COMPUTER INTERACTION, 4 ED.: ADDISON WESLEY, 2004. 
[7] M. G. HINCHEY, "VISUAL METHODS IN REAL-TIME PROGRAMMING," CONTROL ENGINEERING 
PRACTICE, VOL. 3, PP. 837-842, JUNE 1995. 
[8] T. R. G. GREEN AND M. PETRE, "USABILITY ANALYSIS OF VISUAL PROGRAMMING ENVIRONMENTS: A 
‘COGNITIVE DIMENSIONS’ FRAMEWORK," JOURNAL OF VISUAL LANGUAGES & COMPUTING, VOL. 7, 
PP. 131-174, JUNE 1996. 
[9] E. LLEWELLYN, ET AL., "NINE-STEP APPROACH TO DESIGNING SUCCESSFUL VISUAL PROGRAMMING 
APPLICATIONS," COMPUTING & CONTROL ENGINEERING JOURNAL, VOL. 13, PP. 82-86, APRIL 2002. 
[10] R. ORFALI, ET AL., ESSENTIAL CLIENT/SERVER SURVIVAL GUIDE, 2 ED.: WILEY, 1997. 
[11] J. M. DUKOVIC AND D. T. JOYCE, "AN EVALUATION OF OBJECT-BASED PROGRAMMING WITH VISUAL 
BASIC," PROCEEDINGS OF THE IEEE 14TH ANNUAL INTERNATIONALPHOENIX CONFERENCE, PP. 
346-351, 1995. 
[12] M. MAXIM, "MICROSOFT WINDOWS PROGRAMMING STRATEGIES," CROSSROAD, VOL. 6, PP. 19-21, 
2000. 
[13] Y.-F. CHENG, ET AL., "A RESEARCH OF SOFTWARE MODELING TECHNOLOGY SUITABLE FOR VISUAL 
DEVELOPMENT," 2006. 
[14]   HTTP://WWW.PROGRAMTRADING.TW/VIEWTOPIC.PHP?F=2&T=82 
[15] Burnett, M. M., “ Visual Programming”, John Wiley & Sons Inc., 1999 
  
[16] Hinchey, M. G., “Visual methods in real-time programming”, 1995. 
 24
伍、 國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
 
技術分析所形成的交易策略,如同任何一個系統專案一樣,也有其生命週
期.有些只有幾個月,甚至只有幾天或幾小時的生命,該交易策略就失效了.本研
究期望提供一個視覺化的工具,讓使用者能透過所謂 Drag & Draw 的動作讓他
們能簡單的建立交易策略,並執行之,當生命週期結束時,也能輕易的修改或刪
除.使交易策略迎合順息萬變的市場,並獲利. 
 
 1 
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期： 99 年 10 月 31 日 
                                 
一、參加會議經過 
本人於2009年10月3日至5日出席在瑞士蘇梨士(Zurich, Switzerland)所舉行第43屆IEEE 
國際卡拉漢資訊技術研討會(IEEE International Carnahan Conference on Security 
Technology)。此一國際會議今年議程包括: (I) 通訊(Communication), (II) 資訊系統
(Computer Systems), (III) 監視與管控(Monitoring and Control), (IV) 其他相關題目 
(Other Related Topics)。 
二、與會心得 
在會議中，與會學者專家齊聚一堂，在短時間內能認識很多相關領域的專家，是一次難
計畫編號 NSC 98－2221－E－034 －012 － 
計畫名稱 事件導向低延遲策略交易及模擬系統 
出國人員
姓名 
張耀鴻 
服務機構
及職稱 
中國文化大學/助理教授 
會議時間 
98 年 10 月 05 日
至 
98 年 10 月 08 日 
會議地點 
Zürich, Switzerland (瑞士) 
會議名稱 
(中文)IEEE 國際卡拉漢資訊技術研討會 
(英文) IEEE International Carnahan Conference on Security Technology  
 
發表論文
題目 
(中文)運用無線射頻驗證機制之改善 
(英文)An Improved Certificated Mechanism for Transactions using Radio 
Frequency Identification Enabled Mobile Phone 
附件四 
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本研究提供一個視覺化的程式交易設計平台,以解決使用者難以自行撰寫交易
策略程式的問題.該平台以一個視覺化的開發平台,透過 拖曳元件,使用者能撰
寫複雜的 event 事件,甚至還可以引入別人寫好的元件來使用. 
 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
