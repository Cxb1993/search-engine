 1
 
第一子題(第一年)：以周期操作數據為基礎的疊代式學習控制設計 
 
Abstract 
In this paper, adaptive iterative learning control based on the measured input-output data is proposed to solve 
the traditional iterative learning control problem in the batch process. It produces a control law with 
self-tuning capability by combining a batch-to-batch model estimation procedure with the control design 
technique. In order to build the unknown batch operation system, the finite impulse response (FIR) model 
with the lifted system is constructed for easy construction of a recursive least squares algorithm.  It can 
identify the pattern of the current operation batch. The proposed model reference control method is applied to 
feedback control of the lifted system.  It finds an appropriate control input so that the desired performance of 
the batch output can track the prescribed finite-time trajectory by iterative trails. It is proven that the tracking 
system based on the proposed learning controller would asymptotically converge when the iteration goes to 
infinity. Furthermore, on-line tracking control is developed to explore the possible adjustments of the future 
input trajectories within a batch.  It can remove the disturbances in the current batch rather than the next 
batch trail and keep the product specifications consistent at the end of each batch. To validate the theoretical 
findings of the proposed strategies, two simulation problems are investigated.  
 
Keywords: Batch process; Iterative learning control; Model reference control  
Running Title: Iterative Learning Control for Batch Processes 
 
1. Introduction 
Iterative learning control (ILC) is known to be one of the most effective control strategies dealing with 
repetitive tracking control or disturbance rejection in dynamic systems. In general, the ILC system improves 
its control performance by a self-tuning process without an accurate system model [1-3], because it adjusts the 
recipe that contains the setpoints of these inputs.  It is also believed to be able to produce proper outputs and 
reduce variability in final products. The ILC design is a two-dimensional control problem. A repetitive 
tracking task is given for a finite time interval in the time domain and infinite repetitions along the iteration 
domain. By means of tracking errors between the plant and the desired output, the control action generated 
from the iterative learning controller is adjusted so that the tracking performance can be improved in the next 
trails.  
Phan and Longman (1988) used the lifted system description to represent an ILC system as a special type 
of feedback control loop [4]. Once ILC has been established as a feedback loop, many well-understood 
feedback design techniques in the past could be applied. However, most of the previous research discussed 
analysis of learning convergence [5,6]. There has not been much work on the ILC design on the basis of the 
lifted system representation. The control signals combining system identification and ILC have been refined 
The remaining paper is structured as follows: The lifted system that represents an ILC system as a 
feedback control loop between batches is derived in Section 2. Based on this ILC framework, conventional 
feedback control with proper modification can be applied. Therefore, in Section 3, a controller synthesis 
technique that formulates model reference control is developed. It can track the setpoints and compensate for 
model uncertainty. In Section 4, on-line WB control is developed to eliminate the disturbances at the current 
batch, keeping product specifications consistent at the end of each batch. In Section 5, the effectiveness of the 
proposed method and its potential applications are demonstrated through two computer simulation problems. 
Finally, concluding remarks are made. 
 
2. Lift System Description for Operation between Batches 
A batch process considered in this study can be mathematically formulated as, 
 
 3
K1 , 0k k k
T
k k k
u k
y w
+ = + ≤
= +
x Ax b
c x
≤
 (1) 
 
where ,  and c  are time-varying matrices.  ,  and A b x u y  are unmeasured state variable, input and 
output respectively.  is the unmeasured disturbance. kw K  is the duration of each batch run. The mapping 
the continuous time input ( ) to the output ( ) over a the whole batch run can be represented by a finite 
impulse response (FIR) model, 
u y
 
iii wHuy +=  (2) 
 
where  denotes the unmeasured disturbance sequence. The input ( ) and the output ( ) sequences at the 
interval of 
iw iu iy
K  samples are measured, 
 
[ ]Tiiii Kuuu )1()1()0( −= Lu  
[ ]Tiiii Kyyy )()2()1( L=y  (3) 
 
and  is a lower triangular matrix whose elements are the Markov parameters of the plant consisting of the 
impulse response coefficients, 
H
 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎢
⎣
⎡
=
−
−
−
ffff
L
f
L
f
L
fff
ff
f
f
gggg
g
g
ggg
gg
g
0121
1
1
012
01
0
00
0
0
0
0
00
LL
OOOOOOM
MOOOOO
MOOOOOO
MOOOOOOM
MOOO
MOOOO
LLLLL
G  (7) 
 
whose elements are from the polynomials of ( )1−qGc  and ( )1−qGf  in the shift operator in the time domain, 
respectively, 
 
( ) ∑
=
−−−− =+++=
L
l
lc
l
Lc
L
cc
c qgqgqggqG
0
1
10
1 L  (8) 
( ) ∑
=
−−−− =+++=
L
l
lf
l
Lf
L
ff
f qgqgqggqG
0
1
10
1 L  (9) 
 
After introducing the trial delay operator, , the previous batch input (1−z 1i−u ) becomes , where 
, the discrete delay operator in the batch trial domain, represents the operation with the fixed time point 
from batch to batch  It is contrary to conventional feedback control operating with the fixed batch from 
time-step to time-step in the time domain. Thus, the ILC control algorithm in Eq. (5) can be represented by, 
ii z uu
1
1
−
− =
1−z
 
( )ispifci HuyGMGu −=  (10) 
 
 5
where ⎟⎟⎠
⎞
⎜⎜⎝
⎛
−−= −
−
−
−
1
1
1
1
11 z
z
z
zdiag LM  is a memory block which can retain values of the past batch runs. Fig. 
1 shows the relationship between the inputs and the outputs of the closed-loop system from one batch run to 
the next one.  It consists of the model of the open-loop plant, the feedback and the feedforward controllers. 
The control structure is similar to the conventional feedback control loop. It differs in the forms of the data. 
Information from each batch run is grouped into an augmented vector which will represent the measurement 
at a single time point in conventional feedback control.  In Fig. 1, the system is a mapping from an input 
vector to an output vector. The error vector is the difference between the current batch output vector and the 
desired batch reference. Then this information is used to make the adjustment of the input vector. The memory 
loop can store the input vector of the previous trails for input calculation of the next trial and reduce the error 
in the next run. The equation of the closed-loop batch-to-batch system becomes 
[ ] 1i −= +y W SMH SMHr
H
 (16) 
 
The controller matrices,  and S , can be specified directly for the desired performance (Eq. (12)), W
 
1− = +G W SM  (17) 
 
where the inverse of  is given by, G
 
1
2 1
1
1 2
1 1
0 0
0
0K K
K K
d
d d
d d
d d d
−
− −
−
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥≡ ⎢ ⎥⎢ ⎥⎢ ⎥⎣ ⎦
G
L L
M M O M
L O
L L
 (18) 
 
As a result, the equation of the closed-loop system becomes, 
 
i =y GCr  (19) 
 
where . Consequently, the design goal is complete with a choice of,  1−= −C G W
  
1
f
−=G C  (20) 
 
With the given desired matrix , and a set of input-output data , an appropriate pair,  and G H cG fG , is 
computed using Eqs. (13) and (20) so that Eq. (12) can be satisfied.  
 
By packing S = SM ,  
 
 7
adapt the controllers to accommodate changes in the process. It makes the controllers maintain the required 
level of performance in spite of any noise or fluctuation in the process. Figure 2 represents the structure of a 
self-tuning regulator, which constitutes the way of adjusting the controllers. It is composed of two loops. The 
inner loop acts as the original ILC controller for the system with changing behavior during each trial. In the 
outer loop, the parameters of the ILC controller are adjusted to perform the recursive model estimator 
mechanism. The ILC controller is similar to feedforward compensation. It is, therefore, desirable to make a 
suitable formation of the model updating algorithm in order to provide efficient control procedures.  
 
At Batch , the system of Eq. (2) can be conveniently arranged into another matrix form, i
 
iiii whUy +=  (27) 
 
where 
 
( )
( ) ( )
( ) ( )
( ) ( ) ( ) ( )
0 0 0
1 0 0 0
2 3 0
1 2 1 0
i
i i
i
i i
i i i i
u
u u
u K u K
u K u K u u
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥= ⎢ ⎥− −⎢ ⎥⎢ ⎥− −⎣ ⎦
U
L L
L
M M O O M
L O
L
 (28) 
[ ]TKi hhh L21=h  (29) 
 
With all the available batch data, the impulse coefficients  can be computed  ih
 
1 T
i i
−=h F U y  (30) 
 
where  
 
1
2
i
⎡ ⎤⎢ ⎥⎢ ⎥= ⎢ ⎥⎢ ⎥⎣ ⎦
U
U
U
U
M , , 
T
i =F U U
1
2
i
⎡ ⎤⎢ ⎥⎢ ⎥= ⎢ ⎥⎢ ⎥⎣ ⎦
y
y
y
y
M  (31) 
 
 9
 11
k( ) ( ) ( ) ( )k k k= +y U h w  (35) 
where 
 
( )
( ) ( )
( ) ( )
( ) ( ) ( ) ( )
0 0 0
1 0 0 0
( )
2 3 0
1 2 1 0
k k
u
u u
k
u k u k
u k u k u u ×
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥= ⎢ ⎥− −⎢ ⎥⎢ ⎥− −⎣ ⎦
U
L L
L
M M O O M
L O
L
 (36) 
[ ]1 2( ) Tkk h h h=h L  (37) 
[ ]( ) (1) (2) ( ) Tk y y y k=y L  (38) 
 
Although  can be directly estimated by Eq. (35), it may suffer larger fluctuation since the 
measurement might be contaminated by noise. Here the data of the previous batch run is provided to enhance 
the robustness of the parameters and get the best fit by making use of more measurements. Now Eq. (35) 
consists of the previous and the current batch measurements.  and  can be redefined as, 
( )kh
( )kU ( )ky
   
( )
( ) ( )
( ) ( )
( ) ( ) ( ) ( )
( )
( ) ( )
( ) ( )
( ) ( ) ( ) ( )
1
1 1
1 1
1 1 1 1
( ) (
0 0 0
1 0 0 0
2 3 0
1 2 1 0
( )
0 0 0
1 0 0 0
2 3 0
1 2 1 0
i
i i
i i
i i i i
i
i i
i i
i i i i K k K
u
u u
u K u K
u K u K u u
k
u
u u
u k u k
u k u k u u
−
− −
− −
− − − −
+ × +
⎡ ⎤⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥− −⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥− −⎣ ⎦⎢ ⎥= ⎢ ⎥⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥− −⎢ ⎥⎢ ⎥⎢ ⎥− −⎢ ⎥⎣ ⎦⎣ ⎦
U
L L
L
M M O O M
L O
L
L L
L
M M O O M
L O
L
)k
 
(39) 
[ ][1 1 1( ) (1) (2) ( ) (1) (2) ( ) Ti i i i i ik y y y K y y y k− − −⎡ ⎤= ⎣ ⎦y L ]L  (40) 
 
The derivation of this recursive formula is straightforward.  Readers are referred to adaptive control and 
system identification literature [13,14]. Thus, only the results are given here without proof, 
 13
0
O M
M
]i
k
k
1
2 1
2 1
1 3 2
2 4 3
1 1
1
2 1
2 1
1 3 2
2 4 3
0 0 1 0
0 1
0 0
0 0 1
0 0 0
0
0
0 0 0
( )
0 0 1 0 0
0 1
0 0
0 0 1
0 0 0
0
0
L
L
L
K K L K L i
L
L
L
k k
h
h h
h h h
h h h
h h h
h h h
k
h
h h
h h h
h h h
h h h
h h
+
+
− + − −
+
+
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎣ ⎦=A
L L
O M O M
M O O M O O
L L
L L
L O
M L M M M O O
L L
L L
O M O M
M O O M O O
L L
L L
L O O
M L M M M O O
L 1 0 0 0L k L ih− + −
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎣ ⎦⎣ ⎦L
 
(45) 
[ ] [1 2 1 1 2 11( ) TK kik d d d d d d− −−⎡ ⎤= ⎣ ⎦d L L  (46) 
 
To avoid the sharp change of the control parameters, the previous batch model is also embedded to Eq. (43). 
After the generalized inversion of , the vector , which contains the coefficients,  and 
, , is obtained by the formula, 
( )kA ( )kx is
iw 1, 2,i = L
 
1( ) ( ) ( ) ( )Tk k k−=x P A d  (47) 
 
where . At the next time point (( ) ( ) ( )Tk k=P A A 1k + ), the recursive computation of the controller 
parameters in real time applications can also be derived, 
 
( )1( 1) ( ) ( 1) ( 1) ( 1) ( 1) ( )Tk k k k d k k−+ = + + + + − +x x P a a x k  (48) 
1 1
1 1
1
( ) ( 1) ( 1) ( )( 1) ( )
1 ( 1) ( ) ( 1)
T
T
k k k kk k
k k k
− −
− −
−
+ ++ = − + + +
P a a PP P
a P a
 (49) 
 
where  
 
suggested in the discrete transfer function of the plant for calculating the Markov parameters of the plant ( H ). 
Unfortunately, the nominal model always suffers uncertainty. It is assumed that the plant changes to, 
 
1.8( )
( 1)( 2)( 9.5)p
G s
s s s
+ Δ= + + +  (54) 
 
where the gain error .  When the model is not updated, a set of the learning control actions which is 
designed based on Eqs.(13) and (20) is implemented on the linear plant. In Fig. 3, the output of the first batch 
is still far away from the design setpoint.  After several batch runs, the controlled outputs are plotted densely 
near the thick line.  They are getting closer and closer to the design setpoint.      
1.0Δ =
  
With the available operation batch data, the model for the operating plant is updated. Figs. 4 and 5 show 
the evolution of the controlled outputs for the control strategies based on the two updating techniques. They 
indicate that the updated model of BtB control can improve the control performance. BtB control is expected 
to correct the poor performance in the next batch runs. The controlled output approaches the setpoint after ten 
batch trials. Furthermore, instead of using the fixed control variables, the updated model of WB control can 
quickly change the designed control variables after four batch runs and track the reference setpoint. The 
effectiveness of the proposed learning control method is clearly illustrated in Fig. 6, in which the tracking 
error is the mean squared error (MSE) between the controlled and the reference outputs for each batch trial, 
( )2
1
1 ( ) ( )
N
sp
i
k
iMSE y k y kN =
= −∑ .  When the trials end, all the reference tracking is handled by the proposed 
learning control method for controller synthesis. Because of the plant-model errors and difficulty in control, 
the convergence of the controlled output can be significantly improved by both BtB and WB iterative control 
with the updating strategies. 
   
Example 2: Batch reactor 
A reactant is fed into the batch reactor. Assume it is blended well in the reactor and the liquid density is kept 
constant during the operation. The consecutive reaction takes place in the reactor, 
 
CBA kk ⎯→⎯⎯→⎯ 21  (55) 
 
where  has the second-order kinetics and has the first-order kinetics. It is noted that the 
energy dissipation induced by the shaft work and the heat loss to the surroundings are ignored. According to 
the above assumptions, the dynamics of the batch reactor can be formulated as follows: 
BA → CB →
 
 15
speed, 
 
( ) ( )2
1
0.5 1
mG s
s
= +  (60) 
 
To test the performance for such a control law, the heat transfer term ( jU ) is changed to, 
 
100( ) 1.16
i
jU i e
−
=  (61) 
 
where the heat transfer would be gradually decayed after each batch run ( i ). The convergence of the tracking 
error along the iteration domain is shown in Fig. 7. At the 30th iteration, perfect tracking is achieved. Of 
course, the performance can be improved when BtB and WB control with the updated models are applied. By 
observing the responses of the control performance, faster response can be achieved especially when WB 
control is conducted. Thus, ILC based on the on-line updated model is crucial to improvement of 
performance.  
 
6. Conclusions 
ILC is operated along a certain trajectory during one trial to improve the performance when the system is 
operated along the same trajectory at the next trial. A data-based controller synthesis of ILC batch systems has 
been presented. The major advantages of the proposed method are  
(1) Based on the dynamics of ILC from trial to trail, ILC can be systematically and naturally represented by a 
feedback system in the trial domain. This setting allows simple and easy design of the batch system in the 
trail domain based on the rich and well-understood feedback techniques, resulting in good performance 
with minimal effort.  
(2) The model reference adaptive technique is developed for ILC of batch processes. It can be regarded as an 
adaptive servo system whose desired batch performance is expressed in terms of a reference model.  It 
gives the desired response to a batch setpoint output.  
(3) Because the convergence performance of ILC is sensitive to model errors, the model quality strongly 
influences the behavior of ILC. The proposed ILC combining the updated model and the model reference 
adaptive technique is considered. The desired performance of ILC can be achieved even though the 
controlled unit is not known a priori. Moreover, the MIMO recursive least squares algorithm, which uses 
the posterior prediction error, has been utilized to update of the model. 
(4) The convergence of the proposed method shows that the asymptotic behavior can achieve zero offset 
 17
ie
cGfG
iyiu
spy
iy
−+
 
 
Fig. 1. ILC closed loop structure used for the trial invariant trajectory 
 
ie
cGfG
iyiu
G
−+
iy
 
 
Fig. 2. ILC with a model reference 
 
 
 
 
 19
 0 10 20 30 40 50 60 70 80 90 100
-2.5
-2
-1.5
-1
-0.5
0
0.5
1
1.5
2
2.5
Time
O
ut
pu
t R
es
po
ns
e
 
Fig. 5. Performance of each batch controlled output for tracking the setpoint marked in a thick line when WB 
updating model is applied. Each thin line represents the control output of its batch run. 
 
0 5 10 15 20 25 30 35
0
0.2
0.4
0.6
0.8
1
1.2
1.4
Batch
M
S
E
 
 
BtB ILC
BtB ILC (updating model)
WB ILC
 
Fig. 6. Comparison of the proposed ILC convergence histories for the three control strategies in Example 1: 
fixed model (line with circle); BtB updating model (line with square); WB updating model (line with 
triangle). 
 
 21
 1
第二子題(第二年)：以操作變數發展 IOHMM 之周期操作程序的診斷技術 
 
Abstract 
 
Online monitoring of the batch process is extremely important to the health assessment of the batch operation; 
it ensures making products of consistent high quality.  In this paper, an integrated framework called 
IOHMM-MPLS is proposed to monitor the performance of a batch process.  It consists of the input-output 
hidden Markov model (IOHMM) and multi-way partial least squares (MPLS)  The sequence of the process 
variables and the product quality variables are decomposed into linear outer relations, which can be handled 
by MPLS, and simple inner dynamic sequence relations, which can be coped with by a set of 
single-input-single-output IOHMM models.  MPLS is used to solve the problem of high dimensionality and 
collinearity while IOHMM is used to capture the transition probability of the dynamic information. The 
combined IOHMM-MPLS method requires smaller computational load, converges faster and encounters 
lesser occurrences of false detection. It utilizes output quality variables and within batch process variables to 
find the most likely state evolution.  After extracting the essential features of the past operating information, 
subsequently, two simple monitoring charts are presented to track the progress of each batch run and monitor 
the occurrence of the observable upsets. The proposed model is successfully applied to two simulated 
problems.     
 
Keywords: batch processes, fermentation, hidden Markov model, multi-way partial least squares, process 
monitoring 
 
1. Introduction 
When compared to traditional processes, batch and semi-batch processes have been receiving increasing 
attention in most industrial sectors for more than two decades now, because they are simpler, easier to set up 
and operate. Moreover with little or no hardware modification, they can produce several types of high 
value-added products such as products in pharmaceutical, semiconductor, polymer, biochemical and many 
other industries. Thus, batch operation is usually more efficient than continuous operation when effecting 
frequent product change. However, unlike the continuous process which operates under steady-state 
conditions, most batch processes are always transient in nature so that the operating conditions can have 
significant effects on the product characteristics. The batch process usually exhibits some batch-to-batch 
variations even if the operation is under its specified trajectories. These variations often mislead monitoring of 
operations particularly detecting the occurrence of faults. Therefore, in order to have safe operation and 
consistent good quality products, on-line process monitoring is imperative. 
 
Process monitoring plays an increasingly important role in the modern technology because a fault in a 
in many science and technology fields, such as speech utterances, temperature variations, biological 
sequences and other sequential data16,17-19, the applications to process monitoring of chemical engineering 
have been relatively meager. 
 
In the standard HMM, the model parameters are fixed and HMM is used for output sequences only. In 
the batch process operation, the sequence dynamics of process variable measurements throughout the duration 
of the batch can be taken as input variables and  measurements on the product quality variables taken at the 
end of each batch are taken as output variables. If the variables of the product quality are used when the 
sequence of process variables is given, the approach follows that of an input-output hidden Markov model 
(IOHMM) and this approach is more discriminating than the standard HMM in fault detection. In this paper, 
dynamic mapping between product qualities and process variables of the batch process is developed by 
IOHMM. Our approach is inspired by the IOHMM framework proposed by Bengio and Frasconi20. With the 
trained IOHMM, the IOHMM model can be integrated into the existing SPC methods to enhance the 
capability of the statistical process monitoring. Thus, MSPC control charts under IOHMM are developed in 
this research. This approach can not only analyze the sequential measurements but also capture the statistical 
characteristics of the practical data. 
 
This paper is organized into six sections. After the introduction, the end point quality of batch monitoring 
problems is defined in Section 2. In the third section, the conventional chain structure of IOHMM for 
multivariate sequential data is briefly reviewed. Then, in Section 4, an IOHMM-MPLS model with the 
required monitoring statistics for on-line monitoring is developed. Illustrative examples are given in Section 5 
to present the performance of the proposed method through two sets of benchmark data from the simulation 
problems. A comparison of the proposed method with the conventional MPLS and IOHMM is shown. In the 
last section, conclusions are made. 
 
2. Batch Process Monitoring 
 3
)
In each batch run, the designed profiles of the manipulated variables ( ) are implemented in order to match 
the final product qualities ( ) with the desired qualities when the batch is finished. The dynamic batch 
can be mathematically formulated as 
cx
(t K=y
 
( , , ), 0
( , , )
m
u m c
u
u m c
t K
⎡ ⎤ = ≤ ≤⎢ ⎥⎣ ⎦
=
x
g x x x
x
y h x x x
&
&  (1) 
 
K  is the duration of each batch run. During this batch run,  process variables, including manipulated J
where the length of the input sequence matches the length of the output sequence. However, in our batch 
application problem, the method for modeling sequential data is the chain structure that captures interactions 
between a sequence of inputs, { }1 2, , , K=x x x xL , and the output vector, K=y y . The length of the input and 
output sequences may not be equal because the output is only available at the end of time point K . Due to the 
lack of on-line sensors for tracking these variables, upon completion of the batch, off-line quality 
measurements are usually made in the laboratory. Thus, the number of sampling units in process variable 
trajectory measurements ( ) is x K ; only one sampling point at the end of the batch is for quality 
measurements ( ). This IOHMM model as shown in Figure 2 is an asynchronous IOHMM. y
 
The asynchronous IOHMM is trained to fit the conditional distribution probability (P y x)  of the output 
y  given the input sequence . In Figure 2, there is a set of hidden variables, x { }1, , Ks s=s L , and a fixed 
possible number of states. The conditional probability (P y x)  can be written as a sum of terms ( , )P sy x  
over all the possible state sequences, 
 
11
( ) ( , )
( , ) ( ,
s
K
)K K k kks
P P s
P s P s s −=
=
= Π
∑
∑
y x y x
ky x x
 (2) 
 
IOHMM has three sets of parameters: 
 
z The initial state parameters, 1τ : It controls the prior distribution of the hidden state at the step 1k = , 
1( )P s m= x . 
z The transition distribution, 1( , )ks − x : It determines the probability of transitioning to state k kP s 1ks j=  
given 1 2ks j− = . It has been implemented as a multilayer perceptron with a single hidden layer and a 
sigmoidal activation function. Here is the transition distribution parameterized by the softmax function.22  
 
{ }1 21 1 2( , ) exp Tk k k j jP s j s j−= = ∝ ⋅x λ xk  (3) 
 
The parameters of the transition distribution are 
1 2j j
λ . 
z The emission distribution, ( , )K Kx : The form of the emission distribution depends on the 
observation as well as the model assumptions. The distribution model is often characterized by a mixture 
of conditional linear Gaussians with separate parameter conditions on each setting of the hidden state21. 
P sy
 5
of optimizing the parameters is iterative and it may take some time to converge. For detailed description of the 
IOHMM learning algorithm, please see Bengio & Frasconi’s work20.   
 
4. IOHMM-MPLS On-line Batch Monitoring 
Although the IOHMM model approach performs a lot in different fields, it still has problems in the case of 
correlation inputs or limited data. Particularly in the case of limited data, the number of parameters could be 
larger than the number of observations. Therefore, some of the parameters cannot be uniquely determined 
from the observed data. In this paper, the integration of MPLS regression and IOHMM is proposed to 
formulate the probability model that can handle correlated inputs and limited observations.  MPLS is applied 
to decomposing the variables into the lower dimensional ones in the orthonormal space. Then IOHMM is used 
to obtain information about the variability among batches for batch monitoring.   
 
4.1 Multiway Partial Least Squares 
In the batch operation, when there are more than one process variable ( ) and quality variable (1J > 1>M ), a 
set of I  number of historical batch data over K  time intervals can be constructed into a three-way array 
and a two-way array shown in Figure 3. The two-way data matrix, )( MI ×Y , is defined. The three-way data 
matrix is ( )I J K× ×X . Before performing MPLS, the data matrix ( )I J K× ×X  should be unfolded to a 
two-dimensional matrix. Figure 3 shows schematic diagram of two unfolding structure used. Structure I 
allows one to analyze the variability among the batches by summarizing the information in the data with 
respect to both the measured variables and their time variation. It cannot focus on the local behavior of the 
batch process. On the other hand, Structure II can obtain information on the variability among the batch 
variables. It cannot take into account the time dependency and the correlation. To solve both structure 
drawbacks, in this research work. First, the data matrix ( )I J K× ×X  is unfolded to the two-dimensional 
matrix ( ) ( Structure I of Figure 3). Structure I is used to scale data and keep the important variables 
of small magnitudes from being taken over by less important but larger magnitude variables. Then each row 
of the data matrix for all the process variables at one batch is rearranged to form a two-dimensional matrix 
with time×variables . Each block matrix 
KJI × X
( )i K J×X ( )i K J×X  is arranged from the top to the bottom, 
starting with the block corresponding to the first batch run. The resulting two-dimensional matrix has 
dimensions ( )IK J×X  ( X Structure II of Figure 3). Structure II is used for variability among the batch 
variables at each local time point. Likewise, the quality variable is scaled in the same manner ( Y  Structure I 
of Figure 3). In order to implement MPLS computation, the quality variables of each batch run are duplicated 
by K  times to form ( )IK M×Y
)
 ( Y Structure II of Figure 3) to make a consistent size with the number of 
rows of (IK J×X . This structure illustrates that the quality variables at the end of the batch run are accepted 
if the process operation up to the current time point is normal. Note that MPLS just extract the 
cross-correlation among batch relationships in the low dimensional space. The temporal behavior of the 
 7
generalized to nonlinear systems using nonlinear PLS, i.e. ( )ˆ r r rf=u t , where  represents the 
relationship between the response score vector  and the predictor score vector . Quadratic PLS is 
commonly used23. The nonlinearities can also be based on the sigmoidal function as used in the artificial 
neural network24. However, such a deterministic model depicts only those characteristics of the domain model 
of the system response; therefore, many effects are knowingly left unmodeled, particularly the disturbances 
which we can neither control nor model deterministically. In this research paper, an IOHMM probability 
model is developed and applied to the inner relation, i.e. 
( )rf •
ru rt
( )r rIOHMM=u tr . 
 
4.2 IOHMM-MPLS Learning Algorithm 
IOHMM-MPLS is a projection-based probability method that can be estimated in a sequential, stepwise 
manner. IOHMM-MPLS is different from the direct IOHMM modeling approach because the data are not 
used directly to train the IOHMM model.  It is preprocessed by the MPLS outer transform. The MPLS outer 
projection is used as a dimensional reduction tool to remove collinearity. The coupling effect in the 
input-output system can be decomposed into several pairs of inputs and outputs, so the number of pairs can be 
selected based on the variation captured by each pair. This will simplify the IOHMM model. Now the input 
and output variables are transformed to feature space variables, and then the probability model for 
transformed sequential data set is constructed. 
 
In the decomposition procedures shown in Figure 4, each component in the batch matrix  is extracted 
over all the batches to form a component matrix 
iT
)( IKr ×T , 
 
[ ] RrIrrrr ,,2,1,21 LL == tttT  (10) 
 
In Eq.(9),  represents the output scores corresponding to each batch run. However, the final 
qualities at the end of each batch run should not depend upon the separative  at each time point; 
they should be settled together by the overall process operation scores with the single score. Thus, the average 
score 
( )i K R×U
( )i K R×U
, (1 )avg i R×u , revealing the pivotal information at the end of the batch run can be utilized as the 
modeling output steadily obtained by simply averaging all ( )i K R×U  within the batch run . i
   
, , ,
1 ,1
1 1
1 K Ki avg i avg i avg i i
R k
k k
u u u u
K = =
,k R
⎡ ⎤⎡ ⎤= = ⎢ ⎥⎣ ⎦ ⎣ ⎦∑ ∑u L L  (11) 
 
The pair of the score vectors (  and ) is used to build up the inner IOHMM probability model ,i avgru
i
rt
 9
,1
max log ( , )
I
i avg i
r r
i
P u
=
∑ t θ  (16) 
 
The parameter estimation of IOHMM can be successfully solved by mean of the iterative MLE 
algorithm.  
 
7. Calculate X  and Y  loadings 
 
1
T T T
r r r r−=p t X t tr  (17) 
( ) ( )1T TT avg avg ar r r r r−=q u Y u u vg
T
 (18) 
  
where  and 1, , ,
TT Tavg avg i avg I avg
r r r r
⎡ ⎤⎡ ⎤ ⎡ ⎤ ⎡ ⎤= ⎣ ⎦ ⎣ ⎦ ⎣ ⎦⎢ ⎥⎣ ⎦u u u uL L
, , , Ti avg i avg i avg
r r ru u⎡ ⎤= ⎣ ⎦u L  
8. Calculate the residuals for component r  
z in matrix X  
 
1
T
r r r−= −X X t pr
r
 (19) 
 
z in matrix Y  
 
1
avg T
r r r−= −Y Y u q  (20) 
 
9. Let 1r r= + , return to Step 4 until all the principal components are calculated. The number of principal 
components is determined by the cross-validation using the prediction residual sum of square (PRESS). 
The order of the components is set to be the order at minimum PRESS25. 
 
4.4 On-Line Batch Monitoring Scheme 
After modeling of IOHMM-MPLS, the model becomes 
 
{ {
explained unexplained
T= +X TP Ε  (21) 
{ {
unexplainedexplained
T= +Y UQ F   
 
For on-line monitoring of the measurement variables, the control limits should be built up at each sampling 
 11
corresponding to 95% of the confidence level ( , ,( ( ))
avg th
k r k r kP u k P>t ) is taken to get the confidence bounds. 
 
The squared prediction error ( ) is statistically defined as ( )xQ k
 
  2( )x kQ k = e  (27) 
 
The confidence limits of  cannot be determined directly from a particular distribution. The kernel 
density estimation27 is used to determine the confidence limits ( ). 
( )xQ k
th
kQ
 
The above developed statistic measures (  and P xQ ) are applied to a practical problem. Non-smooth 
responses may happen due to the measurement noise at each instant time point. These non-smooth response 
problems are a fact of life in complex chemical processes. In order to avoid the fluctuation of the calculated 
statistic measures and pay attention to the deterministic fault, a class of moving average that reduces the 
variation is added to the control limits, 
 
1
ˆ ˆ (1 )th th thk k kQ Q Qγ γ−= + −
k
  (28) 
1
ˆ ˆ (1 )th th thk kP P Pγ γ−= + −  (29) 
 
where γ  is the momentum coefficient between 0 and 1. In the same manner, the calculated statistic measures 
for the momentum modification are obtained 
 
, , 1
ˆ ˆ( ) (1 ) ,x k x k x kQ k Q Qγ γ−= + −   (30) 
, , , , , ,
ˆ ˆ( ) ( )  (1- ) ( )tavg avg avgk r k r k r k r k r k rP u P u P uγ γ= +t t 1, 2, ,r R, L  (31) =
 
5. Illustration Example 
In order to prove the detectability of the proposed model, a problem of the fed-batch penicillin production is 
given here8. This example is a challenging testbed for process monitoring and detection. The duration of each 
batch is 400hrs, comprising a pre-culture stage of about 45hrs and a fed-batch stage of about 355hrs. The 
sampling interval is 46.8 minutes. In the normal operating condition, small variations are added to the 
simulation input data to mimic process variation under the normal operating condition. Also, measurement 
noise is added to each of the monitoring variables. The simulation condition and the relevant parameters are 
the same as those of Cinar et al.8. 
  
 13
 15
likelihood-based confidence limit after 75 hours of the batch run. By comparing the number of training 
parameters between IOHMM-MPLS and IOHMM, IOHMM-MPLS has 42 parameters while IOHMM has 
276. The former has significantly less parameters than the later.  The smaller the number of parameters is 
fitted, the less risk of overfitting the training data has; accordingly, fewer occurrences of false alarms would 
be detected. The time for fault detected by IOHMM is a little behind that by IOHMM-MPLS, probably 
because the training model is not good at handling the large number of parameters. Also, the benefits of 
incorporating MPLS into IOHMM can be easily seen by the modeling training. Figure 12 shows the 
comparison made between IOHMM and IOHMM-MPLS in terms of the EM training result of the two model 
likelihoods with respect to the iteration number for the training set. The proposed model enables the model 
training to converge faster and have higher probabilities. Thus, the proposed IOHMM-MPLS has the ability to 
capture the actual process relationship between the variables under the noise environment.   
 
6. Conclusion 
Batch process monitoring has been evolving rapidly in academic research and industrial applications over the 
past decade. Multivariable statistical methods, such as MPCA and MPLS, have been widely used in modeling 
multivariate batch processes. The entire batch data is taken as a single object to monitor the batch at the end of 
the process. Those methods are not useful if they are only able to monitor the outcome of batch process 
because batch and semi-batch processes with operations of different phases typically exhibit significant 
behaviors with transient states. Moreover, when the control limits of MPCA and MPLS are under 
development, the fundamental assumption is restricted to a simple Gaussian distribution, which may not be a 
valid approximation for the data collected from the complex batch operations. This may cause false detection 
since the serial correlations between the multivariable behaviors and the proper probability distribution that 
characterizes the system are not considered. In this paper, the IOHMM-MPLS model, which combines the 
MPLS empirical model and the IOHMM stochastic model, is proposed to efficiently monitor the problem of 
the on-line batch process. First, the complicated three-dimensional batch data is unfolded into the 
two-dimensional data, and then the original data space is projected onto mutually independent subspaces. The 
strongest relation of the input-output scores of each subspace is found and the original multi-variable system 
is translated into a single variable system of each subspace. A function of single variable conditional 
probability density is constructed through training and the IOHMM parameters are updated to describe the 
actual input-output data distribution. The advantages of the IOHMM-MPLS model include simplification of 
the parameters and the transition matrix of the IOHMM model, acceleration of the training convergence, 
decrease of the over-fitting situation, and enhancement of the applicability and accuracy of the IOHMM 
probability model. It is a low hanging fruit for engineers to combine MPLS and IOHMM together and to 
assess the current operation using the proposed framework. 
 
In view of on-line monitoring methods, the input and the output variables are first projected down onto a 
 17
(11) Flores-Cerrillo, J.; MacGregor, J. F., Iterative Learning Control for Final Batch Product Quality Using 
Partial Least Squares Models, Ind. Eng. Chem. Res. 2005, 44, 9146. 
(12) Flores-Cerrillo, J.; MacGregor, J. F., Control of Batch Product Quality by Trajectory Manipulation Using 
Latent Variable Models, J. of Proc. Cont. 2004,14, 539. 
(13) Choi, S. W.; Morris, J.; Lee, I.-B., Dynamic Model-Based Batch Process Monitoring, Chem. Eng. 
Sci.2008, 63, 622.  
(14) Ramaker, H. J.; van Sprang, E. N. M.; Gurden, S. P.; Westerhuis, J. A.; Smilde, A. K., Improved 
Monitoring of Batch Processes by Incorporating External Information.” J. of Proc. Cont. 2002, 12, 569. 
(15) Rabiner, L., A Tutorial on Hidden Markov Models and Selected Applications in Speech Recognition, 
Proc. IEEE, 1989, 76, 257. 
(16) Ross, S. M., Introduction to Probability Models, 5th, New York: Academic, 1993. 
(17) Ge, M.; Du, R.; Xu, Y., Hidden Markov Model Based Fault Diagnosis for Stamping Processes, 
Mechanical Systems and Signal Processing, 2004, 18, 391. 
(18) Baldi, P. and Brunak, S. Bioninformatics, the Machine Learning Approach, MIT Press, 1998. 
(19) Schenkel, M.; Guyon, I.; Henderson, D., On-line Cursive Script Recognition Using Time Delay Neural 
Networks and Hidden Markov Models, Mach. Vision Appl. 1995, 215. 
(20) Bengio, Y.; Frasconi, P. Input/Output HMM’s for Sequence Processing, IEEE Trans. Neural Networks. 
1996, 3, 1231. 
(21) Bengio, Y.; Lauzon, V.-P.; Ducharme, R. Experiments on the Application of IOHMMs to Model 
Financial Returns Series, IEEE Trans. Neural Networks. 2001, 12, 113. 
(22) Wold, S.; Kettaneh-Wold, N.; Skagerberg, B., Nonlinear PLS Modeling, Chemom. Intell. Lab. Syst. 1989, 
7, 53. 
(23) Holcomb, T.; Morari, M., PLS/Neural Network, Comp. Chem. Eng. 1992, 16, 393. 
(24) Zwick, W. R.; Velicer, W. F., Comparison of Five Rules for Determining the Number of Components to 
Retain, Psychol. Bull. 1986, 99, 432. 
(25) Efron, B.; Tibshirani, R. J. An introduction to the bootstrap, Chapman & Hall. 1993 
(26) Bishop, C. M. Neural Networks for Pattern Recognition, London, U.K.: Oxford Univ. Press., 1995. 
(27) Qin, S. J.; Li, W., Detection and Identification of Faulty Sensors in Dynamic Processes, AIChE J.  2001, 
47, 1581. 
 
 
 
 
 
 
 
(a) 
Ky
Ks
1y
1s
2y
2s
1K −y
1Ks −
 
(b) 
Kx
Ks
Ky
1x
1s
2x
2s
1K−x
1Ks −
1K−y2y1y
 
Figure 1. Graphical model for (a) HMM and (b) synchronous IOHMM in the sequential variables. 
 
 
 
Kx
Ks
y
1x
1s
2x
2s
1K−x
1Ks −
 
 
Figure 2. Graphical model for asynchronous IOHMM in the sequential variables. 
 
 19
  
 
J
K
K2
IK
1X
R
K
K2
IK
2X
IX
2T
IT
1T
I
K
RT
I
K
M
K
K2
IK
1Y
R
K
K2
IK
1T
1U
1=r Rr =
rT
I
K
r
r
I I1=r Rr =Ir
2Y
IY
2U
IU
,
1
i avgu
,i avg
ru ,i avg
Ru
 
Figure 4. New approach of IOHMM-MPLS modeling for batch processes. 
 
 21
 (a) (b) 
0 50 100 150 200 250 300
39.99
39.995
40
40.005
40.01
40.015
k
N
eg
at
iv
e 
Lo
g 
Li
ke
lih
oo
d 
of
 C
om
po
ne
nt
 1
0 50 100 150 200 250 300
59.55
59.555
59.56
59.565
59.57
59.575
59.58
59.585
k
N
eg
at
iv
e 
Lo
g 
Li
ke
lih
oo
d 
of
 C
om
po
ne
nt
 2
(c) (d) 
0 50 100 150 200 250 300
70.715
70.72
70.725
70.73
70.735
70.74
70.745
k
N
eg
at
iv
e 
Lo
g 
Li
ke
lih
oo
d 
of
 C
om
po
ne
nt
 3
0 50 100 150 200 250 300
0
5
10
15
20
25
30
35
40
45
50
k
Q
x
 
Figure 6. Control charts for on-line monitoring in the illustration example using IOHMM-MPLS: (a)-(c) 
IOHMM control chart of each score and (d)  chart. Each chart contains 95% (solid lines) of the control 
limit. The solid line with star signs represents the normal batch. 
Q
 
 23
 (a) (b) 
0 2 4 6 8 10 12 14 16 18 20
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t1
-2 -1 0 1 2 3 4 5 6
0.001
0.003
0.01 
0.02 
0.05 
0.10 
0.25 
0.50 
0.75 
0.90 
0.95 
0.98 
0.99 
0.997
0.999
score t1  
0 2 4 6 8 10 12 14 16 18 20
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t2
-3 -2 -1 0 1 2 3 4 5 6
0.001
0.003
0.01 
0.02 
0.05 
0.10 
0.25 
0.50 
0.75 
0.90 
0.95 
0.98 
0.99 
0.997
0.999
score t2  
0 2 4 6 8 10 12 14 16 18 20
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
t3
-2 -1.5 -1 -0.5 0 0.5 1 1.5
0.001
0.003
0.01 
0.02 
0.05 
0.10 
0.25 
0.50 
0.75 
0.90 
0.95 
0.98 
0.99 
0.997
0.999
score t3  
 
Figure 8. (a) The autocorrelation plot, and (b) the normal probability plot of the score variables. 
 25
  
0 50 100 150 200 250 300
0
10
20
30
T2
0 50 100 150 200 250 300
0
10
20
30
Q
x
 
Figure 10. Control charts for on-line monitoring in the illustration example using MPLS. Each chart contains 
95% (solid lines) of the control limit. The solid line with star signs represents the abnormal batch. 
 
 27
(a) 
5 10 15 20 25
-4930
-4920
-4910
-4900
-4890
-4880
-4870
-4860
-4850
-4840
-4830
iteration times
Lo
g 
Li
ke
lih
oo
d 
of
 IO
H
M
M
 
(b) 
1 2 3 4 5 6
-2180
-2160
-2140
-2120
-2100
-2080
-2060
-2040
-2020
-2000
iteration times
Lo
g 
Li
ke
lih
oo
d 
of
 IO
H
M
-M
P
LS
 
 
Component 1
Component 2
Component 3
 
Figure 12. (a) IOHMM and (b) IOHMM-MPLS model likelihoods concerning the EM iterative number in the 
illustration example, in which three IOHMM-MPLS probability models are used for each input-output score.   
 29
 2
review of the use of multivariate statistical methods in process monitoring has appeared in several references 
(Cinar et al., 2003; Qin, 2003). These methods build multivariable control charts that are based on a reference 
database comprised of the past successful batch runs under normal operating conditions. As such, they can 
only monitor the current process variables to see if they are still normal. They cannot tell if the operation is at 
its best condition and whether the loop performance can be improved significantly by re-tuning the existing 
controllers. 
The performance assessment of the control loop based on the minimum variance (MV) was first 
presented by Harris (1989). Several techniques using the minimum variance have been proven useful in 
prioritizing the activities of process engineers, including monitoring and assessing the controller performance 
(Desborough & Harris 1993; Huang et al., 2000). The assessment methods were also extended to 
multivariable controllers (Harris et al., 1996; Huang et al., 1997). The univariate time delay needs to be 
generalized to a time delay matrix (defined as the interactor matrix), but the interactor matrix cannot be 
directly constructed from knowledge of the individual time delays and would require additional process 
knowledge. The scalar indices which were computed from the traces of the multivariate covariance matrices 
were used as measures of the multivariate control performance assessment. Because of interaction among the 
variables that cause cross-correlation and collinearity, the past performance measure cannot help one to unveil 
hidden relation that resides in the process output variables and to reach correct conclusions about the current 
performance. Furthermore, the controller performance is evaluated based on the output variance of the 
stochastic performance from the unmeasured disturbance only. However, the controlled outputs of the batch 
operation are influenced not only by the unmeasured disturbance but also by the deterministic regulation 
which is defined by set-point changes. There are only a few papers written about performance assessment of 
the batch control system.  
On the basis of the operating data from the repeated tracking task run at a finite time interval in the time 
domain, our previous work (Chen and Kong, 2009) constructed the performance bounds at each time point 
which could be used to assess the performance of set-point tracking and disturbance rejection. But the 
performance bounds were applicable only for a single-input single-output (SISO) batch operation system. In 
this paper, the same performance bounds are further extended for multi-input multi-output (MIMO) batch 
operation systems. Just like in SISO, the MV performance bounds are developed for batch operation systems. 
The controlled output variance in a batch system can be classified into two variance effects: one arising from 
set-point changes and the other from unmeasured disturbance. The effect of disturbance on variance can be 
further divided into the controller invariant term and the controller dependent term. Using both variance terms, 
the MPCA based performance bound at each operating time point can be subsequently constructed for the 
performance assessment of the batch system control loop.  Theoretically, there are advantages in using MV, 
however, in practice, the performance of the controller designed based on the MV criterion can not meet the 
theoretical variance benchmark as processes usually contain non-stationary disturbance. The achievable 
minimum variance performance bound, a controller-specific performance bound, is developed when the 
1 1 1 1
Setpoint Disturbance( , ) ( ( , ), ( , )) ( ( , ), ( , ))
T
c r c r
k
J E i k J q k q k J q k q k− − − −⎡ ⎤= = +⎢ ⎥⎣ ⎦∑ e G G G G
 
(3) 
 
where ,  is computed using Eq. (2),  and  is the duration of each batch run. 
In the above definition, the expected performance bound of 
( , ) ( ) ( , )spi k k i k= −e y y ( , )i ky T
( , )
k
i k∑ e  is computed based on all the batches. 
Apparently, the variance of ( , )
k
i k∑ e  depends on all the system controller functions,  and 
. The performance is consisted of two parts: the stochastic effect ( ) from the unmeasured 
disturbance in the feedback loop and the deterministic effect ( ) from the desired setpoint trajectory in 
the feedforward loop. To achieve the minimum bound, Eq. (3) will be minimized 
1( ,c q k
−G )
)1( ,r q k
−G DisturbanceJ
SetpointJ
 
* *
Disturbance Setpoint, ,
min min ( , )
c r c r
T
k
J E i k J J⎡ ⎤= =⎢ ⎥⎣ ⎦∑G G G G e +  (4) 
 
where  
 
*
Disturbance Disturbance,
min
c r
J J=
G G
  (5) 
 
and 
*
Setpoint Setpoint,
min
c r
J J=
G G
 (6) 
 
In this paper, the performance bound based on both controllers is developed. Once the benchmark is 
established, it can be viewed as an indicator that determines if the current designed controllers are healthy and 
the control tasks are accomplished. 
 
3. MPCA based control performance monitoring scheme 
3.1. Minimum variance controlled output 
 
First, the filter  removes infinite zeros from the process transfer function matrix and the ( )dz q− D
 4
 6
⎤⎦
d w d
where and the minimum output error covariance matrix is 1 2( , ) ( , ) ( , ) ( , )
Tmv mv mv mv
Ji k e i k e i k e i k⎡= ⎣e L
 
( )( ) 0 0 1 1 1 1( )mv mv T T Tk w wVar k − −= = + + +eΣ e H Σ H H Σ H H Σ HL  (11) 
 
3.2.Minimum variance controller assessment in the MPCA framework 
In the past, most control performance assessment techniques derived scalar indices from the traces of 
multivariate covariance matrices (Eq. (11)). Because the variances of variables are different and different 
interaction levels of variables exist, monitoring by the traces of the covariance matrix may not be right. Since 
some elements in  are strongly correlated to each other, the combination of the variables should be used 
to define the control performance for the minimum variance operation. In batch processes, the collected data 
have a three-dimensional structure shown in Fig. 2. The dimensions in batch data are batch runs (
( )ke
I ), variables 
( M ) and time ( K ). To analyze the variability among batches, this three-way array is unfolded. The slices are 
taken off the side and placed down on the time axis, forming a ( I MK× ) two-dimensional matrix. After 
mean-centering and scaling the unfolded matrix, the minimum variance output matrix  is, mvE
 
1 1 1
1 1 1
1 1
(1,:) ; ( ,:) ; ( ,:)
(1,1) (1,1) (1,2) (1,2) (1, ) (1, )
( ,1) ( ,1) ( , 2) ( , 2) ( , ) ( , )
( ,1) ( ,1) ( ,2)
mv mv T mv T mv T
mv mv mv mv mv mv
M M
mv mv mv mv mv mv
M M
mv mv mv
M M
i I
e e e e e K e
e i e i e i e i e i K e i K
e I e I e I e
⎡ ⎤= =⎣ ⎦E e e eL L
L L L L
M M M M M
L L L L
M M M M M M M
L L 1( , 2) ( , ) ( , )mv mv mvM
M
M
K
M
I e I K e I K
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎢ ⎥⎣ ⎦L L
 (12) 
  
where  is the observation of 1 1( ,:) ( ,1) ( ,1) ( , ) ( , )
Tmv mv mv mv mv
Mi e i e i e i K e i K⎡ ⎤= ⎣ ⎦e L L L M M  variables 
from the initial time  to the final time 1k = k K=  in batch run i . Note that  in Eq. (12), a column 
vector of dimension 
( ,:)mv ie
 x 1KM , is different from  in Eq. (10). MPCA is applied to extracting variation 
of the measured variables from their average trajectories. It can decompose  into 
( , )mv i ke
mvE R  linear principal 
components with R KM≤  if there are multivariate outputs with collinearities, 
 
1 1 2 2
ˆmv mv T mv T mv T mv T mv
R R= + + + + = + = +E t p t p t p E T P Q EL Q  (13) 
 
where  and  represent the directions of the principal component lines and the projection  onto 
these directions respectively. , an error matrix, captures the variations in the error space spanned by the 
loading vectors associated with the 
P mvT mvE
Q
M R−  smallest singular values. The subspace spanned by  and Q  ˆ mvE
all the measurements until  are denoted as the past part of ; i.e.  are available as 
shown in Fig. 3. In order to project this particular batch on  to obtain the needed scores, the dimensions of 
 must match the dimension of matrix. Thus, the future part of  from  to 
1k − ( ,:)ie ( ,1: )i kMe
P
( ,:)ie ( ,:)ie 1kM + KM  must be 
estimated. Here the average values obtained from the previous runs are chosen to fill in the future part of 
 (Nomikos and MacGregor, 1994). Once  ( ,:)ie ( ,:)k ie
 
1 1?( ,:) (1,1); (1, ); (1, 1); (1, )k J
past estimated
i e e k e k e K
⎡ ⎤⎢ ⎥= +⎢ ⎥⎣ ⎦
e L L44424443 4444244443J  (16) 
 
is known for each time interval, the matrix is projected on the model using the loading  to obtain the 
necessary scores  and residuals . 
P
( ,:)Tk k i=t P e ( , ( 1) 1: ) (:, ( 1) 1: )Tk k ki M k Mk M k Mk= − + − − +q e t P
The outline of the MPCA based monitoring performance for the MV controllers can be described in Fig. 
4. Fig. 4(a) show the I  bath runs of the process output errors under minimum variance control are computed 
based on Eq.(10) and collected for building the  MPCA model. The detailed scheme for constructing control 
limits (  and ) are shown in Fig. 4(b). When the limits are broken in one of the control charts, it 
indicates that the batch is statistically out of control. Note that the on-line assessment charts are much more 
sensitive than the post-batch versions.  
kQ
2
kT
 
3.3. Achievable Minimum Variance Controller Design in MPCA Framework  
For practical consideration, the performance bound benchmark based on minimum variance control may 
not be realistic for general applications, because it considers only the absolute lower performance bound. 
Eriksson and Isaksson (1994) pointed out that MVC usually led to large input actions and lacked robustness in 
control. Furthermore, the MVC benchmark bound can only indicate if the current performance is close to the 
MVC benchmark. It can not tell if the improvement can be made from re-tuning of the controller. Using Eq. 
(2), the controlled error from the current controller parameters (  and ) can be calculated cG rG
 
( )1 20 1 2( , ) ( )i k z z k− −= + + +e E E E wL  (17) 
 
which corresponds to the closed-loop output covariance matrix 
 
( )( ) 0 0 1 1( ) T Te k w wVar k= = +Σ e H Σ H H Σ H L+  (18) 
 
 8
models are then used to estimate the performance bounds for the current control performance assessment of 
the given controllers. The identification procedures are briefly explained here. An in-depth description of the 
identification algorithms are given in the references (Van Den Hof and Schrama, 1993). 
 10
)
I
When the process is excited by the external setpoints, the model ( ) can be estimated from the 
process outputs and the external setpoints for all the batch runs (
1( ,s q k
−G
1, ,i = L ) by the least-squares method, 
because  and  are uncorrelated signals in Eq.(2). It can be any statistical model, like the finite 
impulse response model, the output error model and so forth. Then the process model ( ) can be 
estimated from the known controllers (  and ) and . 
( , )i ky ( )kw
1( ,p q k
−G )
)cG rG
1( ,s q k
−G
With the given controller and the identified process transfer function, Eq. (2) is rearranged into a function 
of the disturbance only 
 
1( , ) ( , ) ( )f wi k q k k
−=y G w  (21) 
 
where 1( , ) ( ) ( ) ( , ) ( , ) ( ) ( ) ( )spf p c p c ri k k k i k q k k k k
−⎡ ⎤⎡ ⎤≡ + −⎣ ⎦ ⎣ ⎦y I G G y G G G y . In order to construct the 
unmeasured disturbance model, the classical ARMA approach is adopted here. In order to avoid 
over-parameterization and identifiability problems, the structure of the ARMA model needs to be properly 
specified.   
 
4. Illustration Example 
The proposed performance assessment bounds are used to evaluate a batch controller for an exothermic 
semi-batch reactor where a series-parallel first order reaction takes place: 
A B C
B C D
+ →
+ →  
 
In these reactions, reactants A and B produce intermediate C, which is the desired product and whose yield is 
to be maintained at 21 mole per batch. C reacts with B to form D, a product of no consequence. In the batch 
process, a fixed amount of component A is charged initially into the reactor, then component B is continuously 
fed with varying flow rate ( ). During each batch run, a two-stage temperature control system is 
implemented. At the first (start-up) stage, the steam in the jacket initially heats up the reactor content until 
sufficient exothermic heat of reaction is generated. At the second (maintenance) stage, excess exothermic heat 
of reaction is removed by the cooling water in the jacket. The reaction system composed of the batch reactor 
and instrumentation is similar to the one used in Chin et al. (2000). The detailed differential equations 
describing the dynamics of the system as well as the physical parameters needed to define the system can be 
found in the reference paper. 
BF
Fig. 10 that most of the  control points stay within the limit while  control points exceed the control 
limit persistently over the period of time. It is, therefore, concluded that performance of the control system in 
Fig. 6 is not good for the minimum variance condition. 
Q 2T
Minimum variance control is difficult to implement using actual controllers. However, the settings of 
actual controllers can be adjusted to approximate minimum variance control. Using the estimated disturbance 
model and assuming that the structure of feedback and feedforward controllers (  and ) to be as 
follows, 
cG rG
 
1
2
0
( )
0
c
c
c
G
k
G
⎡ ⎤= ⎢ ⎥⎣ ⎦
G  and 
1
1 2
1
( ) ( )
1 0.1
i i
i
c
a k a k zG
z
−
−
+= +  (22) 
11 12
21 22( )
r r
r
r r
G G
k
G G
⎡ ⎤= ⎢ ⎥⎣ ⎦
G  and 
1
1 2
1
3
( ) ( )
1 ( )
ij ij
ij
r ij
b k b k zG
b k z
−
−
+= +   
 
the values of parameters  and  of feedback controllers and  and of feedforward controllers are 
optimized to yield the achievable minimum variance (AMV) outputs. The process output using the optimized 
controller settings is compared with the process output using the original controller settings in Fig. 7, and the 
results are shown in Fig. 11. It is found that the output using the AMV controller settings lies closer to the 
set-point trajectory curve than the output using the original controller settings. Thus, the AMV controller 
settings yields better set-point tracking and disturbance rejection abilities than the original controller settings. 
This is further confirmed by comparing the output variances of the process outputs between the two controller 
settings. The output variances (  and 
1
ia 2
ia 1
ijb 2
ijb
( )1var 1.0839amvE e⎡ ⎤ =⎣ ⎦ ( )2var 0.0229amvE e⎡ ⎤ =⎣ ⎦ ) of the AMV controller 
settings are much less than the output variances ( ( )1var 8.9244E e⎡ ⎤ =⎣ ⎦  and ( )2var 0.1107E e⎡ ⎤ =⎣ ⎦ ) of the 
original controller settings. Data from a total of 100 batch runs are collected to build the control limits of 
MPCA based AMV control charts. The control charts are used to analyze the outputs obtained from Fig. 7, 
and the results are shown in Fig. 12. Under the confidence limits of 95%, it is found that 33 out of the total 
100 data points still fall out of the performance bounds, and there is a strong evidence that the current control 
performance is still not optimal. The controller settings need to be adjusted to the values required to achieve 
the AMV outputs. Note that there is no change in the controller settings when the variations of the 
disturbances are changed, but the limits of the control charts should be readjusted.    
 
5. Conclusions 
 12
Conventional MPCA is a popular multivariate statistical data analysis technique used for on-line 
monitoring of batch and semi-batch processes. The method establishes control charts based on data sets from 
batch runs in the normal condition; thus it can only detect abnormalities in the current process operation 
against the pre-established normal condition. It can not be used to detect if the process is running at its best 
Control,” Can. J. Chem. Eng., 71, 605 (1993). 
Eriksson, P.-G. and A.J. Isaksson, “Some Aspects of Control Loop Performance Monitoring,” in: Proceedings 
of the Third IEEE Conference on Control Applications, Glasgow UK, 1029 (1994). 
Harris, T. J., “Assessment of Control Loop Performance,” Can. J. Chem. Eng., 67, 856 (1989).  
Harris, T. J., F. Boudreau and J. F. MacGregor, “Performance Assessment of Multivariable Feedback 
Controllers,” Automatica, 32, 1505 (1996). 
Huang, B., S. L. Shah and E. K. Kwok, “Good, Bad or Optimal? Performance Assessment of Multivariable 
Processes,” Automatica, 33, 1175 (1997). 
Huang, B., S. L. Shah, and R. Miller, “Feedforward Plus Feedback Controller Performance Assessment of 
MIMO Systems,” IEEE T..Contr. Syst. T., 8, 580 (2000).  
Ku, W., R.H. Storer and C. Georgakis, “Disturbance Detection and Isolation by Dynamic Principal 
Component Analysis,” Chemometr. Intell. Lab., 30, 179 (1995). 
Nomikos, P. and J. F. MacGregor, “Monitoring Batch Processes Using Multiway Principal Component 
Analysis,” AIChE J., 40, 1361 (1994). 
Qin, S. J., “Statistical Process Monitoring: Basics and Beyond,” J. Chemometrics, 17, 480 (2003). 
Van Den Hof, P. M. J. and R. J. P. Schrama, “An Indirect Method for Transfer Function Estimation from 
Closed Loop Data,” Automatica, 29, 1523 (1993). 
Wan, S. and B. Huang, “Robust Performance Assessment of Feedback Control Systems,” Automatica, 38, 33 
(2002). 
 
( ),i ky
( )kw
( )sp ky
1( , )w q k
−G
1( , )P q k
−G1( , )C q k
−G1( , )r q k
−G
( ),i ku
 
Fig. 1. Block diagram of feedback control for a batch operation system 
 
 
 
 14
 (a) 
++
-
MVC
wG
pG
MPCA 
Modeling
( 1, )i k=y
( )kw
( )sp ky
++
-
wG
pG
( , )i I k=y
( )kw
( 1, )mv i k=e
( , )mv i I k=e
MVC
2
kT
kQ
 
(b) 
( , )i ky
( )kw
2 2
kT Tα>
kQ Qα>
kt (:, ( 1) 1: )M k Mk− +P
( )sp ky
( , )mv i ke
kq
2
kT kQ
cG
(:, ( 1) 1: )k M k Mk− +e
 
 
Fig. 4 (Con’t.) Schematic diagram of the MPCA based performance assessment for the batch control system: 
(a) modeling, and (b) on-line performance assessment. 
 16
  
Steam
Cooling water inlet
Cooling 
water
outlet
Trap
Condensate Products 
withdrawn finally
Temperature 
controller
Set point 
generator
T
AC
BC
MT
JT
sx
wx
Flow rate
controller
BF
CC
DC
Set point 
generator
MQ
JQ
CT
TT
 
Fig. 6: The control scheme diagram of the batch reactor. 
 
 
 18
0 10 20 30 40 50 60 70 80 90 100
0
0.5
1
1.5
2
2.5
3
3.5
Time
Q
 
(b) 
0 10 20 30 40 50 60 70 80 90 100
0
0.5
1
1.5
2
2.5
3
3.5
4
Time
T2
 
Fig. 8: Q control chart and T2 control chart for on-line assessment based on MPCA. Both charts contain 95% 
(dash line) and 99% (dotted line) control limits. The solid bold line with star represents the initial batch run. 
 
 
 
 
 
 
 
 20
(a) 
0 10 20 30 40 50 60 70 80 90 100
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Time
Q
 
(b) 
0 10 20 30 40 50 60 70 80 90 100
0
0.5
1
1.5
2
2.5
3
3.5
4
Time
T2
 
Fig. 10: The Q control chart and the T2 control chart for on-line assessment based on MPCA based MV 
controller design. Both charts contain 95% (dashed line) and 99% (dotted line) control limits. The solid bold 
line with star represents the initial batch run. 
 
 
 
 
 
 22
 
(a) 
0 10 20 30 40 50 60 70 80 90 100
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
Time
Q
 
(b) 
0 10 20 30 40 50 60 70 80 90 100
0
0.5
1
1.5
2
2.5
3
3.5
4
Time
T2
 
Fig. 12: Q control chart and T2 control chart for on-line assessment using MPCA based AMV controller 
design. Both charts contain 95% (dashed line) and 99% (dotted line) control limits. The solid bold line with 
star represent the initial control design. 
 
 24
 2
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：5 已發表 □未發表之文稿 5 撰寫中 □無 
專利：□ 已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
 
共計論文發表 16 篇 
z J. Chen and Y.-C. Jiang (2011) “Hidden Semi-Markov Probability Models for Monitoring 
Two-Dimensional Batch Operation,” Ind. Eng. Chem. Res. 50(6) 3345-3355. 
z J. Chen and Y.-C. Jiang  (2011) “Development of Hidden Semi-Markov Models for Diagnosis 
of Multiphase Batch Operation,” Chem. Eng. Sci., 66, 1087-1099. 
z J. Chen and W.-Y. Wang (2010) “PCA-ARMA Based Control Charts for Performance 
Monitoring of Multivariable Feedback Control,” Ind. Eng. Chem. Res., 49(5) 2228-2241. 
z J. Chen and W.-Y. Wang (2010) “Performance Monitoring of MPCA Based Control for 
Multivariable Batch Control Processes,” J. Taiwan Inst. Chem. Eng., 41, 465-474. 
z J. Chen, C.-M. Song and T.-Y. Hsu (2010) “On-Line Monitoring of Batch Processes Using 
IOHMM Based MPLS,” Ind. Eng. Chem. Res., 49(6) 2800-2811. 
z J. Chen, M.-H. Chen and L. L. T. Chan (2010) “Iterative Learning Parameter Estimation and 
Design of SMB Processes,” Chemical Engineering Journal, 161, 223-233. 
z J. Chen, K.-T. Hsieh and L. L. T. Chan (2010) “Wave Propagation Velocities in Integrated PLS 
Based Control of a Simulated Moving Bed Process,” Chem. Eng. Sci., 56 2990-3000. 
z J. Chen, K.-Y. Liu and J. Munoz, (2010) “Context-KSVM Based Run-to-Run Control for 
Nonlinear Processes,” Korean J. Chem. Eng., 27(5), 1366-1371. 
z J. Chen, C.-J. Hsu and C.-C. Chen (2009) “A Self-Growing Hidden Markov Tree for Wafer 
Map Inspection,” J. Process Contr., 19(2), 261-271. 
z J. Chen and C.-K. Kong (2009) “Performance Assessment for Iterative Learning Control of 
Batch Units,” J. Process Contr., 19, 1043-1053. 
z J. Chen and K.-T. Chou (2009) “Iterative Learning Controller Synthesis Using FIR Models for 
Batch Processes,” Korean J. Chem. Eng., 26(6) 1512-1518. 
z J. Zhang, C.-C. Chu, J. Munoz and J. Chen (2009), “Minimum Entropy Based Run-to-Run 
Control for Semiconductor Processes with Uncertain Metrology Delay,” J. Process Contr., 19, 
1688-1697. 
z J. Chen and R.-K. Tsai (2009) “Development of MBPLS Based Control for Serial Operation 
Processes,” Korean J. Chem. Eng., 26 (4) 935-945. 
z J. Chen, K.-T. Hsieh and L. L. T. Chan (2009) “PLS Data-Driven Based Approach to Design 
of a Simulated Moving Bed Process,” Sep. Purif. Technol., 65, 173-183. 
z J. Chen and K.-C. Lin (2008) “Integrated Batch-to-Batch Control and within-Batch On-Line 
Control for Batch Processes Using Two-Step MPLS-Based Model Structures,” Ind. Eng. Chem. 
Res., 47 (22) 8693-8703. 
z J. Chen and K.-C. Lin (2008) “Batch-to-Batch Iterative Learning Control and within-Batch 
On-Line Control for End-Point Qualities Using MPLS Based dEWMA,” Chem. Eng. Sci., 63, 
977-990. 
 國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                日期：100 年 3 月 20 日 
           
一、 參加會議經過 
IMECS 2011 (The International MultiConference of Engineers and Computer Scientists 2011) 
國際學術研討會是由國際工程師協會（簡稱 IAENG）所主辦，該協會是由一群工程師與電
算機科學家所組成，成員跨越三十個以上不同的國家，包括研究中心首長、學院院長、系
主任、教授、研究學者、工程師、有經驗的軟體開發主管與工程師、大學博士後研究員以
及大學生等等。協會的目的是提倡各領域專業人之間的合作，以及營造進階的技術發展，
包含：增進工程師之間的交流、提升學院至工業界之工程應用技術、協助工程師與科學家
之間的資訊與想法自由交換。該研討會著重在理論與應用工程中的先進主題以及電算機科
學的議題，提供會員與整個工程業界交流的平台，協會的委是選自超過一百六十個研討會
的主持人與主要研究中心首長、學院院長、系主任、教授、研究學者，來自二十個國家以
上。 
 
本人於 3 月 15 日傍晚啟程，由台北飛往香港，而後在香港搭地鐵前往金沙咀的大會會場。  
本年度的論文總投稿數：836 篇，總合格接受數：454 篇（接受率：54.31%）。本年度的研
討會於 2011 年 3 月 16 日至 18 日舉行，共有 13 個 Conference，分在 68 場的 sections 進
行。本次大會作者於 ICCA (International Conference on Control and Automation) I Session 宣
讀我們的研究成果與經驗，在此 session，有五篇論文宣讀： 
 
1. Real-Time Implementation of Reduced Order Compensators on a Cantilever Beam  
計畫編號 NSC 97-2221-E-033 -022 -MY3 
計畫名稱 發展重覆性學習控制、監控、與效能評估技術於周期性操作的程
序 
出國人員
姓名 陳榮輝 
服務機構
及職稱 
中原大學化學工程學系 
教授 
會議時間 
100 年 3 月 16 日
至 
100 年 3 月 18 日 
會議地點 
Hong-Kong 
會議名稱 
(中文) 
(英文) International MultiConference of Engineers and Computer 
Scientists 2011 
發表論文
題目 
(中文) 利用二維隱藏 Semi-Markov 模式於批次程序的監控 
(英文) Batch Process Monitoring Using Two-Dimensional Hidden 
Semi-Markov Models 
附件四 
 2
反映他們對學術活動的積極性與研究工作的日益進展，這都有待我們努力，才能提昇台
灣的研究能力人才實在是學術研究最重要的基石。 
 
三、 攜回資料名稱及內容 
IMECS 2011 International MultiConference of Engineers and Computer Scientists 2009 
Proceedings (Volume 1) 
 
四、 發表論文 
 
 
 
 
repeatedly. The same time varying trajectories are used batch 
after batch. Batch process operations are by nature much 
more dynamic and they involve several transitions that cover 
large operating envelopes of phase durations. This means that 
the multiplicity of the operation phases is an inherent nature 
of many batch processes and each phase exhibits 
significantly different underlying behaviors. 
 
 
1 ... 1q
y + +
1h
1S 2S 1qS
1y 2y 1qy
1h
π
1 2h h
a
1L Lh h
a −
Lh
1 ... 1q
S + + KS
Ky
1 ... 2q
S + +
1 ... 2q
y + +1 1qy +
2h
1 1q
S + 1 2q qS +
1 2q q
y +
1 2q
S +
1 2q
y +
 
Fig. 1. The structure of hidden semi-Markov models 
 
A. Hidden Semi-Markov Model (HSMM) 
HSMM is modified from HMM, allowing arbitrary 
state-durations to be used here [9]. The basic structure of 
HSMM is illustrated in Fig. 1. At the bottom of Fig. 1, it 
consists of a pair of discrete-time stochastic processes { }ks  
and { }ky , { }1k ∈ L K . For simple explanation and 
convenience of notation reasons, the observation process 
{ }ky  is assumed to be a single variable in the above 
expression. The extension to the multivariable case will be 
treated later. The observed process { }ky  is linked to the 
hidden, i.e. non-observed state process { }ks  by the 
conditional distribution ( )
ks k
b y  depending on the state 
process,  
 
( ) ( )
ks k k
b y P y s= k  and  ( ) 1k
k
s k ky
b y dy =∫ (1)
 
which implies the fact that the output process at time k  
depends only on the state of the underlying semi-Markov 
chain at time k . Due to the sojourn in each of the state, the 
entire sequence of states { }1 2, , , Ks s sL  can be reduced into the 
sequences of state { }1 2, , , Lh h hL  which have been visited 
 
{ }
{ }
{ }
1
1 1 1 2
1 1 1 1
1 1 2
2 1 2
1 2
, , ,
, , ,
, , ,
L L
q
q q q q
L q q q q K
h s s s
h s s s
h s s s− −
+ + +
+ + + + + + −
≡
≡
≡ L L
L
L
M
L
1
1
( ) ( , , 0,1, , 2
                   , )
l l lh l k q l k q p l l
k l k l
p q P s h s h p q
s h s h
+ + + −
+
= ≠ = =
= ≠
L −
(3)
 
where τ  is the maximum duration with the state . For a 
fixed macro-state sequence, the observation probability of a 
batch run given the model 
lh
λ  can be written  
 
1 1 1 11 1
2 1
( , ) ( ) ( ) ( )
l l l k
L K
K L
h h h h h l s k
l k
P y h p q a p q b yλ π −= == ∏ ∏  (4)
 
where { }1 1 1K Ky y y y= L  and { }1 1 2L Lh h h h= L  are 
the observed as well as the state sequences of a batch duration. 
The parameters of the HSMM model λ  include the initial 
state { }1hπ π= , the state transition probability { }1l lh hA a −= , the 
observation probability { }ksB b=  and the state duration 
probability { }( )lh lD p q= . In this study, the state output is a 
mixture of Gaussian distribution characterized by the mean 
,lh v
μ , the variance ,lh vΣ  and the mixing weight  for each 
node ( ), and the duration distribution is a single Gaussian 
distribution characterized by the mean  and the variance 
,lh v
c
v
lh
m
lh
σ  
 
( )
( )
, ,
1
( ) ; ,
( ) ; ,
k l l
l l l
V
,ls k h v k h v h v
v
h l l h h
b y c N y
p q N q m
μ
σ
=
= Σ
=
∑
 (5)
 
To estimate the model λ , the expectation-maximization (EM) 
algorithm for HSMM can be formulated as 
 
1arg max ( )
KP y
λ
λ λ=  (6)
 
This probability ( 1( KP y )λ ) is the summation of the 
probability over all the possible state sequences 
( { }1 1 2K Ks s s s= L ).  
 
1
1 1
 
( ) ( ,
K
K K
all s
P y P y s1 )
Kλ λ= ∑  (7)
 
The join probability of 1Ky  and 1Ks , i.e. the probability that 
1
Ky  and 1Ks will occur simultaneously, is the product of 
1 1( ,
K KP y s
1
L
 (2)
)λ  and 1( KP s )λ . The training consists of two steps: 
finding the HSMM parameters λ  that maximize the 
probability and computing the joint probability. It is a 
recursive algorithm. Each iteration of the EM algorithm 
increases 1( KP y
 
where the state ,  is macro-states shown in Fig. 
1. Each macro-state consists of several single states, which 
are called micro-states (
lh 1,2, ,l = L
{ }1 1 11 2, , ,l l l lq q q qs s s− − −+ + +L ). Thus, 
HSMM is like an HMM except that each state can emit a 
sequence of observations. Note the sojourn time  is a 
discrete non-negative random variable with a occupancy 
distribution . The sojourn of the unobserved process 
of the time length  in the state is denoted by a 
distribution 
lq
( )
lh l
p q
min( , )lq τ∈
)λ  and generally, the sequence of the 
re-estimated parameters λ  converges to a local maximum of 
1( )
KP y λ . 
 
k
 
 
 
 
combinations of the original ones are uncorrelated with each 
other. The above procedure enables us to easily model 
HSMM because it is only necessary to perform the diagonal 
covariance matrices ( ) in Eq. (5), in contrast to the 
standard ones. Furthermore, instead of building HSMM upon 
the training data of one batch set only, data tying across all 
simultaneous batch sets are applied to training the HSMM 
model in the reduced space. Tying increases the amount of 
training data to avoid over-fitting the HSMM model and 
achieve the robust training result.  
,lh v
Σ
III. MONITORING CONTROL CHART BASED ON 
MPCA-HSMM 
Once the HSMM model is trained, the most likely state 
sequence for an observed sequence could be found. Each 
observed sequence infers a corresponding hidden state path. 
However, there are potentially many state paths that can 
generate the same sequence. For the description of the 
process operation, the best state path of HSMM for each 
batch should be found in the trained model. The best state 
path should also be able to maximize the path probability for 
a given observation. The optimal state sequence is used 
instead of all the possible state sequences for more efficient 
classification. For a given model and an observation score 
sequence { }1 21KD D D K⎡ ⎤ =⎣ ⎦T t t tL D , the most likely 
underlying state sequence ( ( ) { }* * * *1 1 2L Lh h h h= L ) can be 
found. 
 
( ) { }
1
* * * *
1 1 2 11
arg max ( , )
L
KL D
L
h
h h h h P hL λ⎡ ⎤= = ⎣ ⎦TL  (14)
 
A recursive Viterbi algorithm with dynamic programming 
can be used to find out the most likely state sequence [10]. 
Repeat the same procedure for all the collected sets to 
compute the most likely state sequences for each set. Not all 
the sets follow the same best path. Different selected states 
for different sets account for the fact that the observed values 
of the process variables do not perfectly conform to the 
deterministic model. This variability is resulted from the 
uncertain variations and disturbances among the hidden 
variables that affect the system. Fig. 3 shows a pictorial 
display of the output score distribution ( ( ), 1 1( D K Kl kP s s , )λt ) 
based on the selected optimal state path at each time point for 
all the batches. The distribution can help assess what the 
status of the current operating batch is and if the operation 
batch is in control.  
With the developed probability distribution that reflects 
the normal operation, the control limit for the selected state at 
each time point is required to detect any departure of the 
process from its standard behavior 
 
  ( )( )*1 *1( ( )| , ) ( ) ( ( ) | , ) 0.95
1,2, ,
D L th
c
D L
c kP k h P k
P k h d
k K
λ λ> ≤
=
∫ t t t
L
 
(15)
 
The score matrix by projecting the data ( ) mentioned 
above onto the loading matrix ( P ) can be computed:  
( )Dc kx
 
  ( ) ( )D Dc ck k=t x P
k
(16)
1( ) ( ) ( ) ( )
D
c c d c d ck k k− − +⎡ ⎤= ⎣ ⎦x x x xL  (17)
,1 ,2 ,( )
c c c
c k k k Jk x x x⎡ ⎤= ⎣ ⎦x L 1,2, ,c I d= −K,  (18)
 
 
0
100
200
300
400
500
0
5
10
15
0
0.1
0.2
0.3
0.4
Time
P(tk|S1
k)
D
is
tri
bu
tio
n
 
Fig. 3. The output distribution based on the selected optimal state path at 
each time point 
 
The data corresponding to 95% of the confidence limit is 
taken to get a likelihood threshold ( ) at time point . ( )thP k k
The corresponding unexplained part can be gotten by 
applying DMPCA 
 
 1 ,( ) ( ) ( ) ( ) ( )D D Dc c d c d c c c kk k k k k− − +⎡ ⎤= =⎣ ⎦e e e e x tL T− P (19)
 
The  statistics for the deviations from the model 
behavior (residuals) of the process variation at sample k is 
defined 
SPE
 
  ( ) ( ) ( )Tc cSPE k k k= e e (20)
 
Note that the row vector  represents the residuals at time 
point  of the current batch. The confidence limits of 
 cannot be determined directly from a particular 
distribution. The kernel density estimation is used to 
determine the confidence limits [11]. 
( )c ke
k
( )SPE k
 
IV. EXAMPLES 
A benchmark simulation of fed-batch penicillin 
production is used here to demonstrate the application of the 
proposed method. The system has nonlinear dynamics and 
multi-phase characteristics. During the initial pre-culture 
phase, the necessary cell mass is generated. Then penicillin 
starts to be generated at the exponential growth rate and 
continues to be produced until the stationary phase. The 
simulation condition and the relevant parameters are referred 
to Birol, et al. [12]. The system switching itself from batch 
modes to the fed-batch modes of operation depends on 
whether glucose concentration reaches its threshold value 
( 0.4 g L ). Due to input variations, the batch/fed-batch switch 
times are quite different for different batch runs. In the 
 
 
 
 
 
 
(a) 
0 50 100 150 200 250 300 350 400
0
50
100
Time (hr)
S
P
E
0 50 100 150 200 250 300 350 400
0
5
10
Time (hr)
T2
 
(b) 
0 50 100 150 200 250 300 350 400
0
10
20
30
40
50
Time (hr)
S
P
E
0 50 100 150 200 250 300 350 400
0
50
100
Time (hr)
| l
og
-li
kl
ih
oo
d 
|
 
Fig. 6.  Control charts for on-line monitoring of the normal batch in the 
example: (a) 2DPCA, and (b) DMPCA-HSMM. Each chart contains 95% 
(solid line) control limits. The dashed line represents the abnormal batch. 
 
For the first abnormal batch, the monitoring outcomes of 
three models are shown in Fig. 6. The initial time of the fault 
is induced at the 60th hour and until the end of cultivation. 
The decrease in the feed rate results in a reduction of 
penicillin production. As shown in Fig. 6 (a), the  or T  
monitoring charts of 2DPCA cannot detect this fault in the 
whole operating duration. Moreover, there are false 
detections of 2DPCA around time point 40. The detection 
abilities of DMPCA-HSMM have been significantly 
improved and the fault is able to be detected earlier after 
applying DMPCA-MSMM to characterizing the temporal 
dynamics between batches. In Fig. 6(b), after the 150th hour 
 has increased remarkably and fallen outside of the 95% 
confidence limit and 
SPE 2
SPE
log ( | , )k kP s λt  also fallen outside of the 
95% confidence limit after the 220th hour. 
V. CONCLUSION 
On-line process monitoring has been attracting increasing 
interest in the field of process safety and quality control. In 
the past research, most of the tools used for the detection of 
disturbance assumed that the process data follow a Gaussian 
distribution. The assumption is not necessarily satisfied in 
batch operation processes with complex and dynamic 
characteristics.  
In this research, the conventional multivariate SPC based 
on MPCA are extended by incorporating the HSMM 
structure to solve the detection problem for the 
two-dimensional batch operation. At the first stage, the 
current and the past batch measurements are stacked together 
to take into account the batch-to-batch serial correlations. In 
this stage, the temporal evolution of the two-dimensional 
batch operation behavior can be tracked. At the extracting 
feature stage, the MPCA scheme is used to determine the 
correlation between the measurements within the adjacent 
batch runs as well as among other non-adjacent batch runs. 
The objective of the feature extraction stage is to increase the 
robustness of the two-dimensional pattern by reducing the 
dimensionality of the data and retains most of the essential 
features. In order to quantitatively discriminate the 
probability distribution of multiphase operations, HSMM is 
applied at the modeling probability distribution stage. The 
two-dimensional patterns can be trained. In comparison with 
conventional 2DPCA model, the proposed MPCA-HSMM 
model shows negligible erroneous judgment on the normal 
operation condition and efficient monitoring capability to 
detect the time of occurrence of the process fault. 
 
REFERENCES 
[1] P. Nomikos and J. F. MacGregor, “Monitoring Batch Processes Using 
Multiway Principal Component Analysis,” AIChE Journal., 40, pp. 
1361, 1994. 
[2] J. Chen and K.-C. Liu, „On-Line Batch Process Monitoring Using 
Dynamic PCA and Dynamic PLS Models,” Chemical Engineering 
Science, 57, pp. 63, 2002. 
[3] B.Lennox, H.G. Hiden, G.A. Montague, G. Kornfeld, P.R. Goulding, 
Process Monitoring of an Industrial Fed-Batch Fermentation, 
Biotechnology and Bioengineering, 74, pp. 125, 2001.  
[4] J. Flores-Cerrillo and J. F. MacGregor, “Multivariate Monitoring of 
Batch Processes Using Batch-to-Batch Information,” AIChE J., 50, pp. 
1219, 2004.  
[5] N. Lu, Y. Yao, F. Gao, and F. Wang, “Two-dimensional Dynamic PCA 
for Batch Process Monitoring,” AIChE J., 51, pp. 3300, 2005. 
[6] L. R. Rabiner, “A Tutorial on Hidden Markov Models and Selected 
Applications in Speech Recognition,” Proc. IEEE., 76, pp. 257, 1989. 
[7] Y. Guédon, “Estimating Hidden Semi-Markov Chains from Discrete 
Sequences,” Journal of Computational and Graphical Statistics, 12, pp. 
604, 2003. 
[8] M. Dong and D. He, “Hidden Semi-Markov Models for Machinery 
Health Diagnosis and Prognosis,” Trans NAMRI/SMEXXXII., 32, pp. 
199, 2004. 
[9] J. D. Ferguson, “Variable Duration Models For Speech,” in Symp. on 
the Application of Hidden Markov Models to Text and Speech, 
Princeton, NJ, pp. 143–179, 1980. 
[10] M. D. Moore, “Most Likely State Sequence Speech Reconstruction 
Using a Generalized Hidden Semi-Markov Model with Two Distinct 
Regeneration Times Applied to English,” Ph.D. Dissertation, 
Rensselear Polytechnic Institute, 2004. 
[11] C.M. Bishop, Neural Networks for Pattern Recognition, Clarendon 
Press: New York, 1995. 
[12] G. Birol,; C.Ündey, , and  A. Cinar, “A Modular Simulation Package 
for Fed-Batch Fermentation: Penicillin Production,” Computers and 
Chemical Engineering, 26, pp. 1553, 2002. 
 
 國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                日期：100 年 5 月 30 日 
           
一、 參加會議經過 
此次 Advanced Control of Industrial Processes (ADCON2P)為第四屆，由 IEEE Canada 以及浙
江大學共同主辦。過去的三屆分別在日本、韓國與加拿大。本次會議從 5/23~5/26 於 New 
Century Resort, Thousand Island, Hangzhou, China。此會議的目的在集合學術以及工業的研
究人員與從業工程師討論目前的先進控制理論和工業上的應用。 
 
由於班機時間，訂不到直航至杭州的時間，所以本人於 5/23 日上午搭乘國泰航班經由香港，
再由香港轉班機至杭州，而後下午搭乘 Bus 至 Thousand Island，於晚上 9:00 左右至會議的
旅館，並於隔日進行報到，而會議結束後 5/26 因無相應的班機，故被迫延後一天回台。 
 
本次會議共有 151 篇文章投稿，其中 115 篇接受（包括 91 的 regular papers 和 24 的 invited 
papers），會議包括 8 個 regular session、4 個 invited session、1 個 poster session、1 個 panel 
discussion、6 個 keynote sessions、3 個 plenary session，據大會報告共計 175 人參與此次會
議。 
 
本次我們在 Poster & Interactive Session 展出我們的研究成果與經驗，研究報告為我們提出
計畫編號 NSC 97-2221-E-033 -022 -MY3 
計畫名稱 發展重覆性學習控制、監控、與效能評估技術於周期性操作的程
序 
出國人員
姓名 陳榮輝 
服務機構
及職稱 
中原大學化學工程學系 
教授 
會議時間 
100 年 5 月 23 日
至 
100 年 5 月 27 日 
會議地點 
中國 杭州 
會議名稱 
(中文) 
(英文)2011 International Symposium on Advanced Control of 
Industrial Processes 
發表論文
題目 
(中文) 類神經 PID 控制於通訊網路 
(英文) Neural Based PID Control for Communication Network 
附件四 
  
  
Abstract—A neural based PID feedback control method for 
networked process control systems is presented. As there are 
some uncertain factors such as external disturbance, randomly 
delayed measurements or control demands in real networked 
process control systems, the proposed PID controller is 
implemented by backpropagation neural networks whose 
weights are updated via minimizing tracking error entropy of 
closed loop systems. To demonstrate the potential applications 
of the proposed strategy, an example of a simulated batch 
reactor is provided. The proposed design method is shown to be 
useful and effective in dealing with network process control 
systems. 
 
I. INTRODUCTION 
ITH more and more large and complex plants in 
chemical industries, conventional control approaches 
have become expensive and difficult to implement [1]. 
Network standards such as Hartbus, Fieldbus, industrial 
Ethernet and wireless networks have been widely used in 
various industrial sectors so as to achieve reliable 
measurements and effective distributed control structures. 
Thus, chemical plant operation should substantially benefit 
from the integration of the operation process and the network 
information.  
With networked control systems (NCS), it is convenient to 
control large distributed systems, but process control, which 
integrates the controlled process and the communication 
network of computational devices, sensor, and actuators, 
cannot be directly used in the conventional way. Since NCS 
operates over a network, data transfers between the controller 
and the remote system will inevitably introduce network 
delays, the controller-to-actuator delay and the 
sensor-to-controller delay, in addition to the controlled 
processing delay. This means that the process control systems 
in the communication environment are stochastic in nature 
due to random time delays or packet loss caused by the 
communications on the employed networks. 
Considerable effort has been made to incorporate the 
network into process control systems in literature. In 
Srinivasagupta et al. work [2], the model predictive control 
algorithm was extended to processes with random delays by 
 
J. Chen is with Department of Chemical Engineering, Chung-Yuan 
Christian University, Chung-Li, Taiwan 320, Republic of China (fax: 
886-3-265-4199; e-mail: jason@ wavenet.cycu.edu.tw).  
N. Cheng is with Department of Chemical Engineering, Chung-Yuan 
Christian University, Chung-Li, Taiwan 320, Republic of China.  
J. Zhang is with the National Institute of Standards and Technology, 
Boulder, CO Beijing Key Laboratory of Industrial Process Measurement & 
Control New Technology and System,North China Electric Power University, 
Beijing 102206, China 
using a communication delay model, along with 
time-stamping and buffering techniques. An output feedback 
controller for nonlinear systems subject to sensor data losses 
was proposed by combining a Lyapunov-based controller 
with a high-gain observer [3]. However, at present, research 
has been seldom carried out on the design of networked 
process controllers under the stochastic control frame. Indeed, 
for networked process control systems, it is the random time 
delays and packet loss that lead to stochastic tracking errors 
for closed loop systems besides random disturbances. 
In the past, neural networks constituted a very large 
research interest. They have great capability of solving 
complex mathematical problems since they have been proven 
to be able to approximate any continuous function as 
accurately as possible [4]. Hence, it has received considerable 
attention in the field of chemical process control and has been 
applied to system identification and controller design. All of 
these works show that the neural network can capture the 
characteristics of system patterns and performance function 
approximation for nonlinear systems [5]. Thus, it is 
effectively used in control regions for modeling nonlinear 
processes, especially in model-based control [6] [7]. 
Although the control performances of the above methods are 
satisfactory, those methods may not be applied to the process 
control problem over the communication network. The main 
objective of this work is to propose a PID-like neural network 
adaptive controller for networked process control systems. In 
industrial applications, the PID controller is popular. It is 
estimated that more than 95% of the control loops based on 
PID controllers are still being used in the majority of 
industrial processes. In this research, the tracking error 
entropy of closed-loop control systems is utilized to construct 
the performance index so as to update the weights of the 
neural PID controller. The rest of this paper is organized as 
follows. Section II investigates the stochastic characteristics 
of networked process control systems, formulates the control 
problem and objective. Section III presents the neural PID 
control law for process control systems with network-induced 
time delays and packet dropout, and then, the mean square 
sense convergent condition of the proposed controller is 
presented and proven. Section IV shows the application of the 
proposed controller to a networked chemical process control 
system, and Section V concludes this paper. 
II. STOCHASTIC CHARACTERISTICS OF NSC IN CHEMICAL 
OPERATION PROCESSES 
In Fig. 1, a continuous operation process plant is controlled 
by a remote controller. The controlled process is any 
Neural Based PID Control for Networked Processes  
J. Chen, N. Cheng and J. Zhang 
W 
  
accumulated abundant past experience and knowledge on the 
controlled system and knows how to make the adjustment, the 
neural network can store such information and digest it for 
final adjustment because neural networks have the abilities of 
function approximation  and learning.  They are so versatile 
that they can adapt to unknown environments. Thus, the 
operator’s experience and knowledge can be included into a 
neural network and the network is trained based on the past 
data history. Final, the trained neural network could be used 
to tune PID controller parameters on-line. 
 
 
+
Network
Actuator Process Sensor
PID
Controller
( )u k ( )y k
( )y k( )u k
( )r k
caτ scτ
( )e k
Neural
Networks
, ,P I DK K K
 
Fig. 2.  Neural network based PID controller over communication network 
 
 
PK
IK
DK
kr
ke
caτ
scτ
1  
 
Fig. 3.  Structure of neural network based PID controller 
 
 
Using a three-layered neural network shown in Fig 3, the 
learning rule to find the suitable PID parameters is realized. 
Thus, in the present neural network values of the setpoint 
( )r k , the current error ( )e k ,  the induced delay between the 
controller and the actuator caτ  and the induced delay between 
the sensor and the controller scτ , are the inputs on the input 
layer.  The inputs are denoted by (1)1O , 
(1)
2O  
(1)
3O  and 
(1)
4O .  
  
(1)
0 1O =   
(1)
1 kO r=   
(1)
2 kO e=  (5)
 
(1)
3 caO τ=   
(1)
4 scO τ=   
 
The input and the output of the single hidden layer are 
 
4
(2) (2) (1)
0
( ) ( )
Q
p pq q
q
net k w O k
=
=
= ∑   1, 2...p P=  (6)
(2) (2)( ) ( ( ))p pO k f net k=    1, 2...p P=  (7)
(2)
0 ( ) 1O k =   
 
The input and the output of the output layer can be computed 
 
(3) (3) (2)
0
( ) ( )
P
l lp p
p
net k w O k
=
= ∑ 1,2,3l =  (8)
(3) (3)( ) ( ( ))l lO k g net k=    1,2,3l =  (9)
 
where pqw  and lpw  are weights trained in the neural 
networks, ( )
x x
x x
e ef x
e e
−
−
−= +  and ( )
x
x x
eg x
e e−
= + . With the 
input and one hidden layer, bias is introduced into the first 
node. The outputs at the output layer are PK , IK  and DK , 
which are denoted by (3)1O , 
(3)
2O  and 
(3)
3O .  
 
(3)
1 ( ) PO k K=   
(3)
2 ( ) IO k K=  (10)
(3)
3 ( ) DO k K=   
 
In order to derive the self-tuning algorithm of the PID 
controller, the cost function defined as Eq.(4) should be 
minimized. Based on the steepest descent approach, at the 
output layer 
 
( ) ( ) ( 1)
[ ( ( ))]           
lp lp lp
lp
w k w k w k
V e k
w
η
Δ = − −
∂= ∂
 
 
(11)
 
where η  is a learning factor. 
  
first-order kinetics. The manipulated variable u  is a ratio 
control variable in charge of flow and pressure control 
functions. It lies in the region between 0 and 1. When 0u = , 
it represents the maximum cooling and minimum heating; on 
the other hand, when 1u = , it represents the minimum 
cooling and maximum heating. Hence, the input constraint 
( 0 1u≤ ≤ ) of this case needs to be considered during control. 
The controlled variable is the reactor temperature T , and the 
process measured T  with noise (0,1.0)N  is presented. The 
differential equations and the simulation condition describing 
the reaction process are given by [10]. 
In this case, the control objective is to maximize the yield of 
component B by keeping the operation under the following 
optimal temperature trajectory [11]: 
 
( ) ( )354 71exp 2.5 10dT t t−= + − ×  
 
Because of the intrinsically dynamic operations of batch 
processes, it is more difficult to apply the conventional 
approach of the controller design to network control. To 
demonstrate the power of our proposed method in handling 
non-Gaussian network delays, it is assumed in our case study 
that the batch process is affected by a non-Gaussian 
stochastic delay scτ , which follows the β -distribution. PDF 
of scτ  can be represented as  
 
0.75(2 ) , (0,2)
( )
0,sc
x x x
x
otherwiseτ
γ − ∈⎧= ⎨⎩  
 
The PDF of the stochastic delay caτ  is represented as 
 
2 (3 ) , (0,3)
( ) 9
0,
ca
x x x
x
otherwise
τγ
⎧ − ∈⎪= ⎨⎪⎩
 
 
The PDF of the tracking error can be directly estimated using 
the Parzen window based numerical method in practical 
NCSs. The self-tuning control method can be applied to the 
trajectory tracking of the batch case. Fig. 4 demonstrates the 
tracking ability of the algorithms. The control output can 
follow the setpoint. The variances of PID parameters tuned by 
BP neural networks are illustrated in Fig. 5. The large, 
high-frequency variation exists in the control parameters 
because of the noise measurement and uncertainity network 
lags to a large extent even if the output temperature is around 
the desired setpoint. The control action may be improved if 
the oscillations from the control parameters could be 
smoothed out. The momentum filter, like the first-order filter 
that reduces the variations, can be applied to the control 
parameter changes. In Fig. 6, PDF of the tracking error for the 
first 50 time points and the last time points are separately 
given, where initially the mean of the error PDF becomes 
positive and significantly larger. And then it decreases in the 
last batches and it eventually approaches zero. When the 
dispersions of the first and last runs of PDF reploted in Fig. 6 
are checked, PDF obtained from the last time points is much 
narrower and sharper than that obtained from the first time 
points. Decrease in the dispersion of the error PDF together 
with an increase in error amplitude is consistent with the 
decrease in entropy. 
 
 
 (a) 
0 50 100 150 200 250
50
60
70
80
90
100
110
120
130
time point
T
 
(b) 
0 50 100 150 200 250
0
0.5
1
1.5
2
2.5
time point
in
pu
t
 
Fig. 4.  Neural network PID in tracking trajectory results in the batch reactor 
process: (a) T (dashed line) and setpoint (solid line); (b) ( )u k . 
 
ֲཚ: Tue, 30 Nov 2010 23:07:40 UT 
ബٙृ: Biao.Huang@UAlberta.CA
گٙृ: jason@wavenet.cycu.edu.tw 
׌ڱ: Decision on ADCONIP 2011 submission 26 
Message from PaperCept Conference Management System  
Message originated by Biao Huang  
To: Prof. Junghui Chen  
From: Prof. Biao Huang  
Re: (26) Neural Based PID Control for Communication Network  
Processes  
Presentation format: Poster  
Dear Colleague:  
It is our pleasure to inform you that the paper referenced  
above, for which you are listed as the corresponding  
author, has been accepted for poster presentation at the  
4th Conference on Advanced Control of Industrial Processes,  
Adconip-2011 to be held in Hangzhou, Zhejiang, P.R. China,  
May 23-26, 2011.  
We received more than 150 submissions for review and  
evaluation, and it is commendable that your work was  
selected for publication. The advance program for the  
conference will be available by late February at:  
http://www.adconip2011.org/
The registration site will be open for uploading the final  
version of your paper in late December. At that time you  
will also be able to register for the conference. It is  
expected that the conference registration fees will include
all meals and one banquet.  
*******************************************************  
Authors who need letters to obtain *VISAS* to travel to  
China          to attend this meeting are advised to write to  
 adconip2011@csc.zju.edu.cn with the subject heading:  
'Request for a Visa Letter'. Please include in this letter:  
1) Your full name; 2)Your address; 3) the title of your  
paper and 4) the dates of your visit.  
*******************************************************  
Please note that reviewers' comments and associate editor's  
summary can be accessed by logging into your account and  
following the link for reviews for this paper. It is  
important that any critical comments therein are adequately  
addressed before the final paper is uploaded.  
Acceptance of your paper is made with the understanding  
that at least one author will attend the conference to  
present the paper. If a paper is not presented during the  
designated poster session, it causes severe disruption to  
the session and may be recorded in a "no-show" list.  
Therefore, in the unfortunate event that you or a co-author  
cannot attend the conference, I would greatly appreciate if  
you could inform me of this, and withdraw your paper as  
soon as possible.  
Page 1 of 3ᄅॾܚ: 6 ৞ॾʳآᦰʳ- jason@wavenet.cycu.edu.tw - 09/10/2011 02:17:56 pm +0800 - bi...
2011/9/10http://wavenet.cycu.edu.tw/cgi-bin/openwebmail/openwebmail-read.pl?sessionid=jason*w...
97 年度專題研究計畫研究成果彙整表 
計畫主持人：陳榮輝 計畫編號：97-2221-E-033-022-MY3 
計畫名稱：發展重覆性學習控制、監控、與效能評估技術於周期性操作的程序 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 3 3 100%  
研討會論文 3 3 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 6 6 100%  
博士生 3 3 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 16 9 100%  
研究報告/技術報告 0 0 100%  
研討會論文 7 3 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
