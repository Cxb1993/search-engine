 效果自評  
研究內容與原計畫相符程度 相符 
達成預期目標情形 已達成 
研究成果之學術或應用價值 EMC式產品上市的重要依據之ㄧ。目前
plateform-bored design methodology 之EMC
行為主要控制於軟體行為上。本研究利用量
測與模擬以建立軟體的EMC行為，我們針對
PIC12F629的微控器設計出ISS模擬器，可模
仿微控器之行為，並搭配我們經量測逼近所
得到的各個指令電流源，建立成ICDB資料
庫，可供ISS來模擬在不同程式下時，所造
成時域上的EMI情形。目前仍為學術上之討
論，已發表三篇國際會議論文，一篇國內會
議論文，二篇國內期刊，並且已送審三篇國
際期刊。 
是否適合在學術期刊發表或申請專利 是，已發表下列論文： 
1. Shih-Yi Yuan, Jia-Wen Luo, Ming-Yuh 
Lin, Shry-Sann Liao, "Microcontroller 
instruction set simulator for EMI 
prediction", International Workshop on 
EMC of IC, Torino, Italy.(附件二) 
2. Shih-Yi Yuan, Huai-En Chung, Chiu-Kuo 
Chen, Shry-Sann Liao, "Irregular and 
long time current waveform handling 
improvement for EMC simulation," EMC 
Europe 2008, Hamburg, German, Aug. 
2008. (附件五) 
3. Shih-Yi Yuan, Huai-En Chung, 
Chiu-Kuo Chen, Shry-Sann Liao, "Time 
varying instruction current EMC 
simulation improvement," IEEE 
International Symposium on EMC, 
Detroit, USA, Aug. 2008. (附件六) 
4. 袁世一、鍾懷恩、羅嘉文、羅浩文, “應
用於EMC之電流源EMI模型 , ＂2007 
全國電磁相容技術與實務研討會, 逢甲
大學, July. 2007.(附件七) 
5. 袁世一, 林銘昱, “應用於EMC之程式
EMI模型 ,＂電子檢測與品管季刊，
附件一 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 96-2221-E-035 -104 
計畫名稱 微控器指令之電磁相容性模型研究(I) 
出國人員姓名 
服務機關及職稱 
袁世一 
逢甲大學通訊工程系助理教授 
會議時間地點 2007 年 11 月 28 日─2007 年 11 月 30 日、義大利都靈 
會議名稱 6th International Workshop on Electromagnetic Compatibility of Integrated Circuits (EMC Compo 2007) 
發表論文題目 Microcontroller Instruction Set Simulator for EMI Prediction 
一、參加會議經過 
本人於 11 月 27 日於桃園中正國際機場前往當地，當地時間 11 月 27 日抵達，翌日
參加會議。會議技術研討開場演說在 11 月 27 日早上舉行。總計有來自 20 個國家的 57
篇論文發表。本次研討會繼承歷年傳統，以 IC 電磁相容技術為探討核心。 
二、與會心得 
一、技術會議成員：本人亦為此次技術會議（Technical Program Committee）成員之一（見
附件中Call for paper宣傳資料），此次到會，對各個成員均交換名片與進行對談，希
望能夠促成資訊交流與爾後互動機會。 
二、論文發表：本人此次論文發表於11月30日上午EMC Issue in SoC design (II) session，
聽眾約四十位，發表過程非常順利，約歷時二十分鐘。這次發表主要傳達的研究成
果以及訴求明確，因為過程緊湊，只允許一個問題，會後仍有許多人對此表示興趣。
此領域中的許多重要教授均表示與本實驗是合作研究想法，例如日本WADA教授、
巴西VARGAS教授、法國SICARD教授。 
三、結語： EMC Compo為世界少數專門研究IC電磁相容專門技術的研討會，在發表後
對面對本研究的評語大部分均為正面的，增加了許多研究信心。 
四、感謝：這次計劃能出席，除感謝國科會計畫贊助，也感謝逢甲校方的支持，個人覺
得在研究方向與研究人脈的建立均助益良多。 
五、攜回資料：會議論文集CD一片、除交由ICEMC中心在版權限制下備份，以供有興趣
的老師參考。 
本心得報告書另檢附：發表論文乙篇、預定報告程序(附件三)、技術會議成員證明(附件四)。
This paper is organized as following: section 2 briefly 
describes the Instruction current model (ICM) and 
Instruction set simulator (ISS). Section 3 proposes the 
instruction set simulator adapted for EMI prediction for 
different program behavior. Experimental results are 
described in section 4 and followed by a conclusion. 
2.  ICM AND ISS 
The instruction current model (ICM) [1] is based on
the ICEM model [13] (Fig. 1). ICEM model has been 
successfully used to model the parasitic emission for 
many microcontrollers, ASICs, and programmable 
devices, within the range 1MHz-2GHz. 
ICM models include the entire ICEM model concept 
with one focus: the current source(s). ICEM model 
consists of core activity current source(s) to translate IC 
actives to EMC prediction parameter while ICM use 
large amount of current sources activated in different 
time to resemble each individual instruction. We 
carefully calibrate each machine code peak current 
behaviors by a group of current sources and use these 
information to predicted several different simple program 
EMI behavior very accurately [1]. 
ICM will use other parameters of ICEM in the same 
way. These parameters include lumped components 
(R/L/C) networks under different frequency and 
temperature to represent packages, probes, or test boards. 
These parameters can be provided by 
1. Chip suppliers: pin distribution/assignment, VLSI
processing technologies (to some extent), package 
parameters, IO pad parameters, supply/ground 
parameters in die, etc., 
2. IBIS model [14]: condensed package parameters 
of different conditions – either from the original
chip/package suppliers or from other companies 
dedicated for IBIS model building, 
3. Circuit board manufactures, 
4. Chip testing industries, or 
5. Measured and calibrated by the system designers. 
ICM is provided for estimating different machine 
instructions current behavior which, in term, will estimate 
the EMI time domain behavior of a microcontroller.
Fig. 1. ICEM (adapted from [13]).
An Instruction Set Simulator (ISS) is a simulation 
model, which mimics the behavior of microprocessor by 
"reading" instructions and maintaining internal variables 
which represent the processor's registers. Instruction 
simulation provides the opportunity to detect errors 
before execution. 
The basic instruction simulation steps are – first,
execute the monitoring program padding the name of the 
target program as an additional input parameter. The 
target program is then loaded into memory, but control is 
never passed to the code. A set of pseudo registers are set 
to what they would be if the program is given control 
directly. It may be necessary to amend some of these ISS 
models to point to other pseudo “control blocks”
depending on the hardware and operating system. 
3. ICM AND ICDB BUILDING AND ISS 
MODIFICATION 
3.1 ICM and ICDB Building 
The measurement setups (Fig. 2), target design (Fig. 3), 
code for testing (Fig. 4(a)) and ICM model (Fig. 4(b)) are 
similar to [1]. 
Fig. 2. Measurement setups and testing board design. 
Fig. 3. PIC16F84A testing board (top and bottom view). 
The testing board use PIC® PIC16F84A [15], which is
massively used in automotive, industrial, low power
remote sensors, electronic locks and security applications. 
The external oscillator is limited to 10MHz and is 4 MHz 
for general usage. All the design rules and design guides 
from IEC [12] were followed. 
Each machine code’s EMI waveform is recorded by an
oscilloscope (Fig. 2) and an approximated ICM behavior 
is built as [1] described. For example: GOTO, NOP, 
ADD, etc. First, a single “GOTO” ICM was built; then
“NOP + GOTO” behavior is obtained and modeled (Fig.
4). By the use of SPICE and ICEM concept, we can build 
single “NOP” ICM. Other target instruction is inserted in
the middle of pure NOP sequence (Fig. 5) to rule out the 
pipeline effect. The total ICM building flow is shown in 
Fig. 6. The pipeline effect will be further considered and 
added by a modified ISS. If the target instruction has 
more than one behavior (for example, a conditional jump), 
more ICMs are built for that target instruction. 
Fig. 9. The modified ISS architecture. 
3.2.2 PIC ISS Design For SID 
To simulate the behavior of a PIC system on SID, there 
are many components needed. All the components 
described here are related to software simulation 
functionalities to mimic the physical hardware. The
major simulation components of the modified ISS are
shown in Fig. 10. The most important component is the 
PIC ISS microcontroller component. We have created 
PIC-component by ourselves, while other components are 
from SID public domain. We will focus on the PIC ISS 
design only. 
Fig. 10. Major components for the modified ISS simulation. 
PIC ISS component design is shown in Fig. 11. Step 
subroutine functions as an active part to call other 
subroutines of the component. Step subroutine is driven 
by an external clock component which in turn is driven 
by SID simulation engine. Physical PIC microcontroller 
can accept clock signals externally or internally (by 
program). For SID simulation scenario, the external clock 
component can represent both external and internal 
physical clock. 
Fig. 11. Program structure of PIC-component. 
As step subroutine is driven by clock component, it
will call fetch subroutine to fetch the next instruction 
code from bus component. The bus component (accepting 
the fetch subroutine calls) will decode the address of the 
target (in this case, the memory), then toggle the memory 
component’s step subroutine which will find the
instruction stored in memory component at specific 
location and return to bus component and return back to 
PIC-component. This completes the first pipeline stage 
(stage 1) behavior. In the mean time, the second pipeline 
stage (stage 2) calls decode subroutine, which will be 
detailed in the following, to decode the previous 
instruction already fetched. 
When stage 2 is triggered, PIC ISS simulates the 
execution of the fetched machine instruction and calls the 
instruction-decoding subroutines which will change 
internal registers, access memory, do 
mathematical/logical operation, or any other behaviors to 
change the external/internal status of this microcontroller 
according to the exact machine instruction timing and 
functional behavior. 
These 2 stages mimic the physical PIC 
microcontroller’s 2-stage pipeline hardware architecture. 
Stage 1 will take 4 instruction cycles to fetch next 
instruction code from memory while stage 2 also handles 
one instruction code within the same 4 instruction cycles. 
Stage 1 will also takes care of external interrupt and reset 
functionalities according to PIC instruction cycle timing 
diagram [15]. 
After these 2 stages complete, PIC ISS component is
ready for next fetching-decoding-executing cycle and the 
iteration begins. 
3.2.3 Machine Instruction Codes Preparation 
When an assembly program or a C program is written,
a software tool (assembler or compiler) will translate this 
program to machine code. Or one can write the 
hexadecimal machine code directly but this situation is 
rare. Machine instruction codes reside in memory and 
functions as a guideline for microcontroller behavior. 
Simulator must have the same functionalities and 
generate the same output as the physical counterpart 
execution.
Our machine code preparation is done by assembler 
(MPLAB [17]) and compiler (HI-TECH PICC Lite[18]). 
These tools are freely distributed on internet. Programs 
(for example, Fig. 4(a)) are translated by MPLAB. 
Another tool is hex2bin, it translates hexadecimal file to 
memory image. MPLAB IDE is a software development 
platform of PIC microcontroller. To compile C language, 
MPLAB needs to cooperate with PICC [17]. PICC 
supports Microchip PICmicro 10/12/14/16/17 serial 
microcontrollers. It is a high performance C compiler, 
completely ISO/ANSI compatible and supporting all 
24/32 bit IEEE floating point standards. 
We use these tools and many testing programs as Fig. 4 
to obtain ICDB and final simulation and prediction 
results. We further write a more complex code (Fig. 12), 
to verify the correctness of the PIC ISS component.
3.2.4 ISS Modification for EMI Prediction 
As the PIC ISS component can function correctly, we
modified it to incorporate with ICDB to output the 
instruction current waveform. The ISS modification 
architecture is already illustrated in Fig. 9. 
The obtained current waveform is illustrated in Fig. 13.
The horizontal axis is time. The first instruction MOVLW 
occupies two time slices which is cycle 0 and cycle 1 
Fig. 16. Curve fitting and MSE calculation (mix instructions). 
4.4 ISS Prediction for complex program 
When the PIC ISS behavior model is verified by 
subsection 4.2 and the time domain EMI estimation result 
of some combination of instructions is approximated by 
subsection 4.3, we can use the modified PIC ISS to 
generate massive instruction current waveform and 
further use the instruction current waveform in 
WINSPICE to generate the EMI prediction of the target 
system. 
A fraction of the predicted instruction current 
waveform of the more complex program (Fig. 12) is 
shown in Fig. 17. After the waveform is generated, the 
waveform will feed into SPICE to generate final 
prediction result (Fig. 18). 
Fig. 17. EMI model of program 
Fig. 18. Final prediction result. 
5. CONCLUSION 
This paper discusses the prediction of complex 
program effect on EMI time-domain behaviors on a 
simple microcontroller. Using ICM concept and 
instruction set simulator, this work can predict, in time 
domain, accurate EMI behavior of the conduct emission. 
Simulation results show that every individual prediction 
is all in certain statistical range. The modified ISS can 
use ICDB to dynamically generate instruction current 
waveform and predict the target machine’s any program 
EMI behavior. The observation and primary prediction 
techniques are proposed in the hope that this work will 
propose another dimension of techniques for embedded-
system software design, software design methodology, 
and driver code optimization. 
6. REFERENCES
[1] Shih-Yi Yuan, Chi-Feng Yang, Eitenne Sicard, Chiu-kuo 
Chen, and Shry-Sann Liao, ”EMI Prediction Under a
Different Program Behavior”, IEEE EMC 2007 Hawaii, 
2007.
[2] ITRS information can be downloaded from
http://itrs.public.org 
[3] Shuo Wang, Fred C. Lee and Jacobus Daniel van Wyk. 
“Design of Inductor Winding Capacitance cancellation for 
EMI suppression, ” IEEE transactions on Power 
Electronics, Vol. 21, No. 6, 2006, pp. 1825-1832. 
[4] Jaejin Park, Ruifeng Sun, L. Richard Carley, and C. 
Patrick Yue, “A 10-Gbps, 8-PAM Parallel Interface with
Crosstalk Cancellation for Future Hard Disk Drive 
Channel IC’s, ” ISCAS 2005, Vol. 2, pp. 1162-1165. 
[5] David G. Wang, James L. Knighten, and P. Keith Muller 
“An Integrated Vent, Heatsink and EMI Shield, ” 8th IEEE 
symposium on Semiconductor Thermal Measurement an 
Management, 2002, pp. 125 – 131.
[6] C. Wang, J. L. Drewniak, J. L. Knighten, D. Wang, R. 
Alexander and D.M. Hockansink, “Grounding of
heatpipe/heatspreader and heatsink structures for EMI 
mitigation, ” IEEE International Symposium on 
Electromahnetic Compatibility Vol. 2, 2001, pp. 916 – 920.
[7] Alexandru Andrei, Petru Eles, Zebo Peng, Marcus Schmitz 
and Bashir M. Al-Hashimi “Energy Optimization of
Multiprocessor Systems on Chip by Voltage Selection.”
IEEE Transactions on VLSI, Vol. 15, Issue 3, 2007, pp. 
262 – 275.
[8] Etienne Sicard and Gilles Peres, “A Novel Software
Environment for Predicting the parasitic Emission of 
Integrated Circuits, ” EMC 2005, Vol. 3, pp. vii-xix. 
[9] David Brooks and Margaret Martonosi, “Value-based clock
gating and operation packing: dynamic strategies for 
improving processor power and performance, ” ACM
Transactions on Computer Systems, Vol. 18, Issue 2, 2000, 
pp. 89 – 126.
[10] Chinhung Chan, Yucheng Chang, Hsichi Ho and Herming 
Chiueh, “A thermal-awre power management soft-IP for
platform-base Soc designs, ” IEEE International 
Symposium on System-on-Chip 2004, pp. 181 – 184.
[11] Enzo Baccarelli, Mauro Biagi, Cristian Pelizzoni and 
Nicola Cordeschi, Fabio Garzia, “A power Allocation
Algorithm for Throughput Maximization in Mobile 
Networks, ” 6th
 IEEE International Symposium on 
WoWMoM 2005, pp. 437-445.
[12] IEC 61967 information can be founded from 
http://www.iec.ch/index.htnl l 
[13] Sonia Ben Dhia, Mohamed Ramdani, Etienne Sicard, 
“Electromagnetic compatibility of Integrated circuit, ”
2006, Springer Inc. 
[14] Syed B. Huq, “Ease System Simulation With IBIS Device
Models” Electronic Design, 1996, National Semiconductor 
Corporation. 
[15] PIC12F629 DATA sheet, 1998, Microchip Technology Inc. 
[16] SID can be downloaded from http://sourceware.org/sid/
[17] MPLAB IDE User’s guide, 2005, Microchip Technology 
inc.
[18] HI-TECH PICC can be downloaded from 
http://www.htsoft.com/ 
	 
. &  "     
    
1/*  1%	  &	*  2/

5%	 
!&2 7	+	

 '  (  
 1( &,
0 2 !0 5&<, , ,
.8 &       	
  	

   
/	  	  %!&
 ; 5:	    0 & 5&, 	+
Poster session 1
	 
; 
          
93 93 32%!
   	   	$ '    ) * '   + , 
  , 

/= 7		 ,	
	 % *
 	
    -( 
 $ $ , (  ./0 1
/!		 )%0 ,>*	
0 2 !0
  $  & )  
  #% 	
 $  , 
 
&	 2*	

"  	
3   *  ' 	   
5%	  2/
 %2
. ' 
  	
 ' &  4 ' ,1&  $
5%	  7,*	* & %2
 ) ) , 
   '    & 	
 $
	$  -
 ( 5	
      5%     
5% 9,0 9	$ 93 32%!
	

 &    
) 6 93*	
( !0 21
'' 
:     
+$  	
  $

99	*0 &2!
 2& % *
' 	 $  
+$ & 
+ $
9 *è &%
	
3	0$ - 7* 5%2! &,2%
 
Poster session 2
	 
' &  
+$     	

9 *è &%
	
3	0$ - 7* 5%2! &,2%
' $  * ,   	 $ '  ! 	
	
71*+ >
 9*C*	 452 ,   !**
. '        
>&	A+ /	* 
 >266*6 27* /&	6	 %55&
"" ) * $ 
 7  	  ' 	  8 '
	 
%2/** %/	((	* 72!!%
".    # 	 #  & &
% && %,     !
"; (* &  &  
%9	0 36 ( !0 21
"  $ '  ) *  	:
%%	*  /= 5%	 	 % *
. 
 + (     	 

%7* @ 7	  (  &	0 90  	*0(
..             
   !	
' 
= ?0*	 = 2: /	*	 %	 -
 ( (	 	 	 
6th International Workshop on Electromagnetic 
Compatibility of Integrated Circuits
EMC COMPO 2007 
November 28-30, 2007, Torino, Italy 
www.emccompo07.polito.it 
 CALL FOR PAPERS 
The achievements in terms of operating frequency and integration of semiconductor 
technology constantly bring about new EMC challenges, which need necessarily to be 
addressed at the integrated circuit level. Being up-to-date is of paramount importance to be 
successful in this field. The EMC Compo 2007 symposium is intended to be a place for 
exchange of the latest research achievements and experiences in IC-level EMC and it is 
addressed to researchers both from industry and from academia. 
The workshop is focused on emission and susceptibility issues of digital, analog and mixed-
signal integrated circuits, with a particular attention to smart power technologies and System 
on a Chip (SoC) solutions. The most recent advances in measurement techniques, models, 
standards, tools and design methodologies will be discussed. We are looking forward to see 
you in Torino! 
Main Topics 
Paper Submission 
Complete papers should be written in English and submitted in PDF, Postscript or MS Word 
A4 format (max. 6 pages including title, 100-word abstract, illustrations and references). The 
contributions should be submitted electronically through the website: 
www.emccompo07.polito.it, where further information on paper preparation is available. 
The deadline for paper submission is May 30th 2007. Notification of acceptance will be 
given on June 30th, 2007. 
Workshop Venue 
Torino, in the north-west of Italy, has become world-famous as the 2006 Winter Olympic 
Games host city. It has a rich historical and cultural background and offers many recreation 
facilities which can be enjoyed by the participants during their stay. Torino can be easily 
reached by plane (international airport of Torino Caselle), by car and by train. 
Contacts and Information 
More details about the location and the organization can be found in the workshop website: 
www.emccompo07.polito.it. For further information do not hesitate to contact the organizing 
committee secretariat@emccompo07.polito.it, ph.:+39-011-564.5103, fax:+39-011-564.5199 
 STMicroelectronics MicroelectronicsEMC
       Group
• Measurement of IC susceptibility to EMI    • EMC issues in smart power ICs
• Measurement of IC EM emission • Tools to handle EMC at IC level
• IC modelling for EMC • EMC Issues in next generation ICs
• IC design for EMC compliance • Packaging
• EMC issues in System on Chip design • Signal integrity
• Substrate Coupling • Design of ESD protection for EMI
• Smart sensors susceptibility to EMI • EMC issues in ICs for wireless comms. 
• IC level EMC Education and e-learning • EMC issues in Multi Chip Modules (MCM)
	
	
		
Franco Fiori, Politecnico di Torino

	
Vincenzo Pozzolo, Polit. di Torino

Paolo S. Crovetti, Polit. di Torino 
Mauro Merlo, STMicroelectronics
Francesco Musolino, Polit. di Torino
Giusy Spinasanta, COREP 
		

	
Sonia Ben Dhia, INSA de Toulouse
Ross Carlton, Freescale 
Herman Casier, AMI
Mart Coenen, Philips
Bernd Deutschmann, Infineon
Franco Fiori, Politecnico di Torino
Todd Hubing,  Clemson University
Elya B. Joffe, KTM Proj. Eng.
Werner John, Fraunhofer IZM
Uwe Keller, Zuken
Frank Klotz, Infineon
Heiko Koehne, Qimonda
Frederic Lafon, VALEO
Jean-Luc Levant, Atmel Nantes
Christian Marot, Siemens VDO
Olivier Maurice, EADS
Mauro Merlo, STMicroelectronics
Davide Pandini, STMicroelectronics
Richard Perdriau, ESEO
Mohamed Ramdani, ESEO
Miquel Roca, Univ. de les Balears
Bob Ross, Teraspeed Consulting
Goeran Schubert, Temic
Etienne Sicard, INSA de Toulouse 
Kevin Slattery, Intel
Thomas Steinecke, Infineon
Igor Stievano, Politecnico di Torino
Boris Traa, Philips
Osami Wada, Kyoto University
Wolfgang Wilkening, Bosch 
Shih-Yi Yuan, Feng-Chia University 
附件四
use ICDB to simulate the program-related LTVD current 
waveform [2]. 
The brief derivation procedure of LTVD current 
waveform is described in the following and the details 
can be found in [2]. The procedure is divided into three 
major steps: 
Step 1: Instruction current characterization and ICDB 
building. 
Step 2: ISS simulation to generate LTVD current 
waveform using ICDB. 
Step 3: EMC estimation by ICEM using LTVD 
current waveform as current source(s). 
Step 2 generates a LTVD current waveform as a 
current source which is implemented by a PWL file 
description for SPICE input format. 
Since the PWL waveform from step 2 is not 
periodical, one can expect that different time interval may 
have different frequency responses. These frequency 
responses can be simulated according to step 3 by 
Furious transformation. For example, assuming the 
system is executing 2 applications in a time-sharing 
operating system, the frequency responses of different 
time interval can be estimated by sorting out these 
frequency responses and arranges them in time-lined 
sequence. 
The concept is trivial. However, the size of PWL 
waveform file from the above scenario is large even for 
small fraction of a program and is too large for SPICE to 
completely simulate a simple program. For example, in 
our simulation, the file size of a simple bubble sort 
program implemented on PIC microcontroller will be 
10~100 MB depending on the sorting data size. 
III. METHODOLOGY PROPOSED 
The simplest way to get the final system-level 
simulation result is proposed by ICEM: using ICEMC 
tool set (Figure 1). However, the large PWL file size is a 
problem. The major reason that SPICE cannot handle 
LTVD is simulation that it needs to uptake the total PWL 
file before simulation. The whole PWL loading will take 
almost all SPICE running time to do the Input/Output 
access and the net result is the intolerable long waiting 
for file reading.  
 
It seems easy to improve it by cutting the LTVD 
waveform into pieces and simulating these pieces one by 
one then merge the simulation results by some method 
into one whole large simulation result. However, the 
simulation result is “unstable” – the frequency response 
(Fourier transform of the time-domain simulation result) 
is quite different depending on the piece size, the 
combination algorithm, or the merge window size. Thus, 
the naive way is not feasible.  
Instead of cutting the LTVD waveform into pieces, 
the proposed method buffers the LTVD waveform and 
send to SPICE though a time-lined queue during SPICE 
running. SLPS [7] is a SPICE “component” developed by 
Cadence and Cybernet. This component can make PSpice 
and Simulink [8] to simulate system-level circuits.  
The proposed method can cumulatively simulate 
according to the interval set by users. Thus, only near-
future LTVD waveform has to be buffered and handled 
during the simulation. We propose this buffered-file-
handling-SPICE component architecture and implement 
it by Simulink. 
Figure 2(a) shows the file buffer-handling algorithm 
and Figure 2(b) shows the architecture of the proposed 
method. Thus, the proposed simulation architecture is: 
1. Build an ICEM model on PSpice. 
2. Save the circuit of PSpice into Simulink by the 
Simulink Block provide by SLPS. 
3. Acquire the LTVD waveform according to [2]. 
4. Use Figure 2(a) to handle the LTVD waveform 
from step 3 and feed into SLPS module. 
5. Start to simulation, according to Figure 2(b). 
 
 
IV. EXPERIMENTAL RESULT 
The simulation is done by personal computer (PC). 
The PC includes AMD Opteron 144 CPU, 2GB RAM, 
and 250GB hard disk. Related software is described in 
previous sections. LTVD current waveform is acquired 
 
Figure 1. Instantaneous Current Model of IC-EMC tool 
 
Figure 2(b). buffered-file-handling-SPICE architecture 
 
Figure 2(a). buffered-LTVD-file-handling with SPICE architecture 
  
Because of the large file processing capability, the 
proposed methodology can predict the time-lined 
frequency responses without any problem. Figure 5(a) 
shows the frequency responses of Figure 3(c) sorted by 
time sequence. The x-axis is the log-frequency, the y-axis 
is the sorted time-line, and the z-axis is the frequency 
response. Figure 5(b) shows different time interval 
frequency responses chosen from Figure 5(a) and the 
difference between them— the differences may be as 
large as 25 dBuV at different frequencies and some peaks 
even shift a little bit.  
 
 
 
The large EMI variations among different frequencies 
of Figure 5(a) and Figure 5(b) mean that the EMI 
behaviors are time-varying during application execution. 
These figures also show that the proposed methodology 
and concept can find a way to estimate the phenomena.  
V. CONCLUSION 
Although the EMC tests at presents only deal with 
infinite loop testing program running on such system to 
simplify the test, papers are suggested that application 
programs running on the system do have their impacts on 
EMC test. For estimating such kind of EMC behavior, a 
LTVD (long-term time-varying dynamic) instruction 
current waveform simulation is proposed.  
This paper proposes an efficient and flexible method 
(BHSP method) to get LTVD EMI behavior under 
complex program execution conditions. The proposed 
methods can handle much longer system-running-time 
simulation and are with comparable simulation quality 
and simulation speed. The experiment results show that 
these methods can handle much larger LTVD waveform 
with good simulation quality. The proposed method can 
be used and get almost identical simulation result of 
SPICE (less than 2E-27 MSE).  
The proposed methodology can handle much longer 
simulation time due to the ability of buffered file 
handling capability and can be implemented in any kind 
of languages (C/C++/VB/…) or systems (compiled or 
interpreted). At present, this method is implemented by 
Simulink for concept demonstration and can not do a fair 
efficiency comparison. Nevertheless, the primary 
comparisons are made and the experimental results show 
that in LTVD instruction current waveform simulation, 
BHSP beats SPICE if system running time is longer than 
200 us. And at least 3 ms system running time can be 
simulated under present software and hardware 
environment. 
By using BHSP proposed, system time-varying EMI 
behavior phenomena under complex applications 
execution condition can be estimated. 
40 
30
50 
60 
70 
80 
90 
100
20
dB
uV
1M 10M2M 3M 4M 5M 20M 40M50M30M
0
10
20
30
40
50
60
70
80
Frequency(Hz)
dB
uV
 
 
Difference
 
Figure 5(b). Two time interval frequency responses 
seslected from Figure 6(a). 
 
Figure 5(a). Time-lined frequency responses of Figure 3(c) 
 
Figure 4. SPICE and BHSP for long-time simulation 
TABLE 2. SIMULATION TIME COMPARISON 
System  
running time SPICE BHSP 
10us >1.00 3.34  
25us 3.00  6.15  
50us 8.00  13.99 
75us 16.00  24.72 
100us 27.00  37.38 
200us N/A 52.21 
 
Time varying instruction current EMC simulation 
improvement 
Shih-Yi Yuan 
IC-EMC center, 
Feng Chia University, 
Taichung, Taiwan 
Huai-En Chung  
Communications 
Engineering Dept., 
Feng Chia University, 
Taichung, Taiwan 
Chiu-Kuo Chen 
Bureau of Standards, 
Metrology and 
Inspection, 
M.O.E.A, 
Taipei, Taiwan 
Shry-Sann Liao  
IC-EMC center, 
Feng Chia University, 
Taichung, Taiwan 
 
Abstract—Other papers have suggested that different application 
programs running on a digital system have their own EMC effects. 
This paper proposes two efficient and flexible techniques to 
improve the simulation efficiency of techniques instruction current 
waveform proposed by our laboratory. Experimental results show 
the efficiency is improved while the simulation quality remains the 
same. 
Keywords—ICEM; Instruction Current Model; SW EMI effect; 
EMI simulation 
I. INTRODUCTION 
ICEM [1] is a standard model for the EMC behavior of IC. 
The standard model uses internal current source(s) to represent an 
IC internal gross current behavior and use the current source(s) to 
estimate the EMC of the target IC. The waveform of the current 
source is obtained from real measurement and approximated by 
periodical triangular or trapezoidal waveform. 
Software may change the total digital system behavior from 
time to time [2]. Our laboratory has proposed a concept [3], 
which is based on ICEM, to describe and estimate time-varying 
dynamic EMI behaviors using ICEMC tool [5]. The main 
concept is trying to derive a high order approximation 
instantaneous “instruction-current” [3] waveform of the target 
IC’s machine codes and feed the information into ICEMC tool 
and, then, get high order EMI behavior approximation result. 
ICEMC tool set uses SPICE engine to get the time-domain 
current behavior and from which it transforms the simulated 
result into frequency-domain EMC behavior. SPICE is “de facto” 
industrial time-domain simulator, all other circuit simulation 
results are compared to the result of SPICE. In the scenario of the 
software-related time-varying dynamic EMI behavior estimation, 
we have proposed a methodology [3] which can derive the long 
term time-varying dynamic current source (LTVDCS) waveform 
of the instruction current from other sources. The LTVDCS 
waveform can be represented by a piecewise-linear (PWL) 
waveform and feed into SPICE to acquire the final estimation of 
EMI behavior of a specific board or system.  
However, the size of LTVDCS waveform file represented by 
PWL derived from the above scenario is large even for small 
fraction of a program and is too large for SPICE to completely 
simulate a simple program. For example, in our simulation, the 
file size of a simple bubble sort program implemented on 
Microchip PIC® microcontroller will generate 10~100 MB PWL 
waveform file depending on the sorting data size. 
The main contribution of this paper is to extend the research 
[6] and to propose two more efficient and flexible methods under 
different constrains to solve the problem instead of SPICE. These 
methods are all compared the simulation time and quality with 
ICEMC. The experimental results show that the proposed 
methods can handle much larger LTVDCS waveform in 
comparable simulation time (or even faster) with the same 
simulation quality. 
The paper is organized as following. Section 2 briefly 
explains the instruction current [3] concept and the LTVDCS 
derivation procedure. Section 3 describes the simulation 
methodologies once we obtain the LTVDCS. The first proposed 
method is also detailed in this section. Section 4 describes the 
second improvement which will increase both the simulation 
time on the first improvement. Section 5 is the experimental 
results. And finally, Section 6 gives the conclusions.  
II. INSTRUCTION CURRENT[3] AND LTVDCS(LONG TERM 
TIME-VARYING DYNAMIC CURRENT SOURCE) DERIVATION 
Instruction current is the concept previously proposed by our 
laboratory. The concept is used to derive each Machine-Code 
instantaneous current source waveform. Each machine code 
instantaneous current waveform is characterized through IEC 
61967 [4] measurement standard and put into an Instruction 
Current database (ICDB). A modified instruction set simulator 
(ISS) can use ICDB to simulate the program-related LTVDCS 
waveform [6]. 
The brief derivation procedure of LTVDCS waveform is 
described in the following and the details can be found in [6]. 
The procedure is divided into 3 major steps: 
1: Instruction current characterization and ICDB building. 
2: ISS simulation to generate LTVDCS waveform using 
ICDB. 
3: EMC estimation by ICEM using LTVDCS waveform as 
current source(s). 
附件六
 Figure 2 shows an example to represent an ICEM concept 
that includes a passive netlist structure and an active current 
source. The S-function is divided into two parts, one is the active 
current source part and another is the DC voltage part. We set the 
active current source to read the LTVDCS waveform as input. 
Since ICEM often deal with high frequency behavior, the DC 
behavior of the transfer function is simply ignored. Presently, the 
proposed method is also implemented by Simulink (Figure 3). 
V. EXPERIMENTAL RESULT 
The simulation is done by personal computer (PC). The PC 
includes AMD Opteron 144 CPU, 2GB RAM, and 250GB hard 
disk. Related software is described in previous sections. 
LTVDCS waveform is acquired from another simulation 
procedure [6]. Here, BHSP is an abbreviation for buffered-file-
handling-SPICE component methodology and BHSF is for 
buffered-file-handling-S-function component methodology. 
First, short time-varying dynamic current waveform file is 
generated to make sure the simulation quality. By comparing the 
two proposed method with ICEMC tool, the simulation of these 
three methods (SPICE, BHSP, BHSF) are under the same 
simulation environment with the same time-varying dynamic 
input. Figure 4(a) shows the simulation result within 2us. The 
signal measured under these three methods is almost identical. 
The simulation quality should be further analyzed and the mean 
square error (MSE) between ICEMC tool set is calculated in 
table 1. Table 1 shows the comparisons to SPICE simulation 
result.  
 
 
 
 
 
Figure 3. S-function for an ICEM of microcontroller system  
 
Figure 4(c). simulation result of signal within 100us 
 
Figure 4(a). simulation result of signal within 2us 
 
Figure 4(b). simulation result of signal within 10us 
TABLE 1. MSE COMPARING TO ICEMC 
System 
running time BHSP BHSF 
10us 1.75598E-029  2.92436E-006  
25us 1.56247E-028 2.97267E-006  
50us 6.35835E-028 2.98494E-006  
75us 1.25912E-027 2.98298E-006  
100us 1.93011E-027  2.97726E-006  
 
 
Figure 2. buffered-file-handling-S-function architecture  
these methods are implemented by Simulink for concept 
demonstration and can not do a fair efficiency comparison to the 
SPICE. Nevertheless, the primary efficiency comparisons are 
made and the experimental results show that in LTVDCS 
waveform simulation, BHSP beats SPICE if system running time 
is longer than 75 us. If it exists an S-parameterized transfer 
function built for the simulation box, the BHSF simulation 
efficiency further improves the BHSP by 20%.  
REFERENCES 
[1] T. Steinecke, D. Hesidenz and E. Miersch, “EMI Modeling and Simulation 
in the IC Design Process,” 17th International Zurich Symposium on 
Electromagnetic Compatibility, Feb. 2006, Singapore. 
[2] Martin O’Hara, "The EMC Impact of Embedded Software", Conformity, 
Sep. 2007, pp. 36 – 45 
[3] S. Y. Yuan, C. F. Yang, E. Sicard, C. K. Chen, and S. S. Liao, “EMI 
Prediction Under Different Program Behavior,”2007 IEEE EMC 
Symposium, Jul. 2007, Honolulu, USA. 
[4] IEC 61967 information can be founded from http://www.iec.ch/index.htnl 
[5] IC-EMC can be downloaded from http://www.ic-emc.org/ 
[6] S. Y. Yuan, J. W. Luo, M. Y. Lin, and S. S. Liao, “Microcontroller 
instruction set simulator for EMI prediction,” 2007 EMC Compo, Nov. 
2007, Torino, Italy. 
[7] Simulink information can be found from http://www.mathworks.com/ 
[8] PSpice/Pspice SLPS Interface can be found from 
http://www.cybernet.co.jp/orcad/product/slps/ 
[9] Samuel Jefferson Mason, “Feedback theory—Some properties of signal 
flowgraphs,” Proc. IRE, vol. 64, pp. 1144–1156,  Sept. 1953. 
 
十六進位格式，尚須以 Hex2Bin.exe 加以轉成二進
位記憶體影像檔。 
2.2.3. PSpice SLPS 
PSpice SLPS 為 Cadence 和 Cybernet 協同開發
的 Pspice 元件，套過此元件將可讓 PSpice 與
MATLAB 模擬電氣機械和系統級方塊電路，以及
在 PSpice 電路方塊中的電壓、電流及功率可傳達到
MATLAB/Simulink 中進行模擬等功能。 
3. 研究成果 
以下研究成果部分將首先介紹實作架構，IC 巨
觀 EMC 模型之建立、指令集電流源資料庫、指令
集模擬器、程式電流源 EMI 模型等五部分，加以介
紹說明。 
3.1. 實作架構 
圖 1 展示整個架構，右邊有一個指令集模擬器
(工廠小圖示)，作業於 Linux 的 SID 模擬引擎之上，
接受指令電流源模型、程式碼兩項輸入來源，執行
後將產生時脈週期之預估功率消耗數據，將所產生
資料輸入代入 IC 巨觀 EMC 模型之中，便可得到此
程式對於 EMI 所造成的影響。 
 
圖 1   本研究整體實作架構 
3.2. IC 巨觀 EMC 模型 
指令電流源模型即指令消耗功率，本小節探討
指令消耗功率的量測及模擬，首先必須將待測之 IC
路置於一塊設計符合量測法規的電路板上，再以示
波器量測 IC VDD 腳位上的電壓波形。得到量測數
據後再利用法國 INSA 中心所開發的 IC-EMC[8]軟
體猜測 IC 巨觀 EMC 模型中內部電路參數與 PIC 各
指令的電流源模型。最後對指令模型加以驗證，改
以示波器量測 Vss 腳位上的電壓波形，與模擬比較。 
如前所述，首先依據 IEC61967-4[9]量測法規設
計電路板，因當電路在作高態與低態(即 1 與 0)變化
時，會產生暫態電流而使電源 VDD 產生高頻漣波，
高頻漣波是一種雜訊，所以必須在電路板 IC 的
VDD 與 GND 之間[5]跨接一個 20pF 的陶瓷電容
器，以消除 VDD 上所產生的高頻漣波。另外，在
IC  VDD 接腳將串接一個１Ω電阻到電源，以及一
個 49Ω電阻做阻抗批配到示波器。 
將待測微控器燒錄一組反覆執行同一指令之
程式加以量測其用示波器抓 VDD 腳位上的週期電
壓波形(圖 2)。根據文獻[12][14]將整體電路繪製成
IC 巨觀 EMC 模型(圖 3)，由右而左說明，電流源
I1~I8 表示 IC 之瞬時電流，為程式電流源的時變模
型；C1 為 IC 內部電源層與地層間之去耦合電容；
R1、R2、R3、R8、R9、L1、L2、L3、L4、C1、
C2 為 IC 內巨觀統計之被動元件，其估計值依文獻
[15]可大約依製程技術加以推估。V2、R4、R5、R6、
R7、C3、C5 則為外部電路，其中 R7 50Ω闡釋示波
器輸入組抗。調整 I1~I8 參數作 Spice 電路模擬，直
到模擬出的時域波形與前面示波器量測到的時頻
域訊號吻合(圖 4)。至此，目標 ICEM 模型與程式電
流源模型已取得。 
 
圖 2   示波器量測 VDD腳位電壓 
圖 3   IC 巨觀 EMC 模型 
 
圖 4   時域訊號比較圖(虛線：量測、實線：模擬) 
3.3. 指令集電流源資料庫 
再重新燒錄一組中間穿插目標指令之程式加
[1] MPLAB IDE 使用手冊. 
[2] 吳一農, PIC16F84 單晶片微電腦入門實務. 民
88: 全華. 
[3] 鍾富昭, PIC16C84 單晶片微電腦 民 84: 全華. 
[4] 經濟部標準檢檢局. http://www.bsmi.gov.tw/.  
[5] 蔡朝洋, 單晶片微電腦 8051/8951 原理與應用. 
六版 ed. 2003[民 92] 全華. 
[6] 林漢年. 數位與通信的電磁環境效應. - EMC 與
SAR 分析.  2005  
http://www.ce.fcu.edu.tw/news/EMC 簡介.pdf  
[7] 唐永奇. EMC 的量測技術與標準發展.  2006 
http://www.dyuee.net/EMC_tang.ppt. 
[8] ic-emc tool. http://www.ic-emc.org/. 
[9] iec.  http://www.iec.ch/. 
[10] microchip.  http://www.microchip.com/. 
[11] HI-TECH PICC. v8.05PL2 
http://soft.winzheng.com/Default.htm. 
[12] Ben Dhia, S., et al. Characterisation of 
micro-controller electromagnetic emission: 
models for an international standard. 2002. 
[13] HI-TECH PICC. http://www.htsoft.com/. 
[14] Crovetti, F.F.a.P., EME FILTERING EFFECT IN 
A MICROCONTROLLER POWER 
DISTRIBUTION NETWORK, in emc europe. 
2006: barcelona. 
[15] S. Ben Dhia, M.R.E.S., EMC of ICs: Techniques 
for low emission and susceptibility: Springer.
 
10A 100A
2
1.1 IC
IC
(Computer aided design, CAD)
(Optimization target)
( p e r f o r m a n c e ) ( p o w e r
consumption) (area)
3
4
IC
5
5
452 0 0 8  A p r i l  N o . 7 4
1
2 IC
3
4
  
 
  	
 
 
 
    
  
	

 
 
      
     	

  
 
     
  
     
    	
 
 
 
 
 
 
   
  
  
   

 
   	

 

  
     
   
     
  
   
     
   
     
  
   
   
    
     
     
   
   
     
    
   
  
  
!   
"! 
	
    
 
    !
   
    
  	  
  !
   
     

  !
     
   
   
   
    
      
     
  
 !  
    
 
 
 
 
 
 
 
 
  
   
 
  
  
  
  
  
 
  
 
  
  
  
  
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 
 
 
 
 
 
 
 
	# 
#
  
  !   
    
 
   
   
  
  
  
  
  
!   
   
 
 #  
 
 	   
  
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
	
 
  
  
 
 
  
 
 
	 
 $	#
 "
%#
 
  & 
  
'  	#

 	#	
 
	# 
 
    
     
    
 	
     

   
 
 
 
 	#
  !	# 
    
    
     	
 
  
 
  
   
    	

  

 
 
 
 
 
  
   
    
 
  	

 

 
  
  ! 
 	
  

 
  
   !
  
     
 	#   !  
 # 
	   
   
 ( 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  	
 
 
  
 
  	



  	
 
 
  
     
  
 
    
 	  	#
 	# 	#  
 	# )  
   
  	#   
*  
 
 (





 


  
   
     
    
     	



   
     
    
     
    
     
  
    
 
 
 	
 

 
 
 
 	

 

 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
     
  !   
      
      
      
      
      
      
      
      
    
  
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #
   
   
  
 ! 
    
   
	 
   
   

  
 !   
   
    
  
  	   
 
  	#  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #  
   
   
  
  
 
  
  
  
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	#  
#
  
 
  
  !   
   
    
  
 	   
 #  
 
 	  
 #   
  
  
   
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
   
 
     

	  
   
   
    
  
     

	 
  
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
$  
!   
   
  !  
    
  !   
   
   !  
    
   !  
    
   
 ! 
   
  !   
    
    !  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 	

 

 
 
  	 	
 
 
  
    
   
 
   
   
  
  
   
   
  
  
 	#  
 	#   
	#   
    
 	

 

 
  
  
   	
 
 
 
     
      
    
      
     
      
    
     
      
      
     
  
    
   
 
 
 
 
 
 
 
 
 # 
  
   
 
   
    
 
    
  
   
   
 
  
 
  
  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
  
  
  
  
  
 
  
 
  
 !   
   
    
  
    

 	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
61967-1 8 IEC 61967-4 9
IEC 61967-4
1
1
1 5 0
IC 150 50
1.4 EMC
1.3
EMC
IC IC
IC
1.SPICE Simulation Program
with Integrated Circuit Emphasis
2.Seamless Co-Verification Environ-
ment  (CVE) (Mentor
Graphics)
/
(embedded system)
(SoC)
( v i r t u a l
prototype)
Seamless 
(coherent  memory
server)
Seamless 
3.SystemC OSCI (Open SystemC
Initiative)
C + +
C++ SystemC
(class) C++ C++
C + +
SystemC
C + +
SystemC
SystemC UTF
472 0 0 8  A p r i l  N o . 7 4
8 IEC-61967-1 layout
9 IEC-61967-4
  
 
  	
 
 
 
    
  
	

 
 
      
     	

  
 
     
  
     
    	
 
 
 
 
 
 
   
  
  
   

 
   	

 

  
     
   
     
  
   
     
   
     
  
   
   
    
     
     
   
   
     
    
   
  
  
!   
"! 
	
    
 
    !
   
    
  	  
  !
   
     

  !
     
   
   
   
    
      
     
  
 !  
    
 
 
 
 
 
 
 
 
  
   
 
  
  
  
  
  
 
  
 
  
  
  
  
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 
 
 
 
 
 
 
 
	# 
#
  
  !   
    
 
   
   
  
  
  
  
  
!   
   
 
 #  
 
 	   
  
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
	
 
  
  
 
 
  
 
 
	 
 $	#
 "
%#
 
  & 
  
'  	#

 	#	
 
	# 
 
    
     
    
 	
     

   
 
 
 
 	#
  !	# 
    
    
     	
 
  
 
  
   
    	

  

 
 
 
 
 
  
   
    
 
  	

 

 
  
  ! 
 	
  

 
  
   !
  
     
 	#   !  
 # 
	   
   
 ( 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  	
 
 
  
 
  	



  	
 
 
  
     
  
 
    
 	  	#
 	# 	#  
 	# )  
   
  	#   
*  
 
 (





 


  
   
     
    
     	



   
     
    
     
    
     
  
    
 
 
 	
 

 
 
 
 	

 

 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
     
  !   
      
      
      
      
      
      
      
      
    
  
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #
   
   
  
 ! 
    
   
	 
   
   

  
 !   
   
    
  
  	   
 
  	#  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #  
   
   
  
  
 
  
  
  
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	#  
#
  
 
  
  !   
   
    
  
 	   
 #  
 
 	  
 #   
  
  
   
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
   
 
     

	  
   
   
    
  
     

	 
  
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
$  
!   
   
  !  
    
  !   
   
   !  
    
   !  
    
   
 ! 
   
  !   
    
    !  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 	

 

 
 
  	 	
 
 
  
    
   
 
   
   
  
  
   
   
  
  
 	#  
 	#   
	#   
    
 	

 

 
  
  
   	
 
 
 
     
      
    
      
     
      
    
     
      
      
     
  
    
   
 
 
 
 
 
 
 
 
 # 
  
   
 
   
    
 
    
  
   
   
 
  
 
  
  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
   
   
 
   
   
  
    
   
  
  
  
  
   
    
    
    
    
 
 
 
 
 
 
 
 
 
 
 
 
492 0 0 8  A p r i l  N o . 7 4
1.8 
11
( I n t e r n a t i o n a l
Electrotechnical Commission, IEC) IEC
61967-1 IEC61967-4
IC-EMC Tool
WinSpice
(Integrated Circui t  Electromagnet ic
Compatibility Model, IC-EMC Model)
(Instruction
Current Model, ICM)
(Instruction Set Simulation, ISS)
2.1 
12
13
R/L/C
2.2 
2.2.1 
1411
12 Schematic
13
14
  
 
  	
 
 
 
    
  
	

 
 
      
     	

  
 
     
  
     
    	
 
 
 
 
 
 
   
  
  
   

 
   	

 

  
     
   
     
  
   
     
   
     
  
   
   
    
     
     
   
   
     
    
   
  
  
!   
"! 
	
    
 
    !
   
    
  	  
  !
   
     

  !
     
   
   
   
    
      
     
  
 !  
    
 
 
 
 
 
 
 
 
  
   
 
  
  
  
  
  
 
  
 
  
  
  
  
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 
 
 
 
 
 
 
 
	# 
#
  
  !   
    
 
   
   
  
  
  
  
  
!   
   
 
 #  
 
 	   
  
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
	
 
  
  
 
 
  
 
 
	 
 $	#
 "
%#
 
  & 
  
'  	#

 	#	
 
	# 
 
    
     
    
 	
     

   
 
 
 
 	#
  !	# 
    
    
     	
 
  
 
  
   
    	

  

 
 
 
 
 
  
   
    
 
  	

 

 
  
  ! 
 	
  

 
  
   !
  
     
 	#   !  
 # 
	   
   
 ( 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  	
 
 
  
 
  	



  	
 
 
  
     
  
 
    
 	  	#
 	# 	#  
 	# )  
   
  	#   
*  
 
 (





 


  
   
     
    
     	



   
     
    
     
    
     
  
    
 
 
 	
 

 
 
 
 	

 

 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
     
  !   
      
      
      
      
      
      
      
      
    
  
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #
   
   
  
 ! 
    
   
	 
   
   

  
 !   
   
    
  
  	   
 
  	#  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #  
   
   
  
  
 
  
  
  
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
#
   
  
  
! 
    
   
	 
   
   

  
 !   
   
    
  
 	   

  	#  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
$  
!   
   
  !  
    
  !   
   
   !  
    
   !  
    
   
 ! 
   
  !   
    
    !  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 	

 

 
 
  	 	
 
 
  
    
   
 
   
   
  
  
   
   
  
  
 	#  
 	#   
	#   
    
 	

 

 
  
  
   	
 
 
 
     
      
    
      
     
      
    
     
      
      
     
  
    
   
 
 
 
 
 
 
 
 
 # 
  
   
 
   
    
 
    
  
   
   
 
  
 
  
  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
   
 
     

	  
   
   
    
  
     

	 
  
    
 
 
 
 
 
 
 
 
 
 
 
 
512 0 0 8  A p r i l  N o . 7 4
4 M H z 2 0
EMC
IC EMI
EMI
SID PIC12F629
Spice
ICM
ICM
EMI
EMI
EMI
[1] Shih-Yi Yuan, Chi-Feng Yang, Eitenne
Sicard, Chiu-kuo Chen, and Shry-Sann
Liao, “EMI Prediction Under a Different
Program Behavior”, IEEE EMC 2007
Hawaii, 2007.
[2] ITRS information can be downloaded
from http://itrs.public.org
[3] Shuo Wang, Fred C. Lee and Jacobus
Daniel van Wyk. “Design of Inductor
Winding Capacitance cancellation for
EMI suppression,” IEEE transactions on
Power Electronics, Vol. 21, No. 6, 2006,
17
18
19
  
 
  	
 
 
 
    
  
	

 
 
      
     	

  
 
     
  
     
    	
 
 
 
 
 
 
   
  
  
   

 
   	

 

  
     
   
     
  
   
     
   
     
  
   
   
    
     
     
   
   
     
    
   
  
  
!   
"! 
	
    
 
    !
   
    
  	  
  !
   
     

  !
     
   
   
   
    
      
     
  
 !  
    
 
 
 
 
 
 
 
 
  
   
 
  
  
  
  
  
 
  
 
  
  
  
  
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 
 
 
 
 
 
 
 
	# 
#
  
  !   
    
 
   
   
  
  
  
  
  
!   
   
 
 #  
 
 	   
  
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
	
 
  
  
 
 
  
 
 
	 
 $	#
 "
%#
 
  & 
  
'  	#

 	#	
 
	# 
 
    
     
    
 	
     

   
 
 
 
 	#
  !	# 
    
    
     	
 
  
 
  
   
    	

  

 
 
 
 
 
  
   
    
 
  	

 

 
  
  ! 
 	
  

 
  
   !
  
     
 	#   !  
 # 
	   
   
 ( 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  	
 
 
  
 
  	



  	
 
 
  
     
  
 
    
 	  	#
 	# 	#  
 	# )  
   
  	#   
*  
 
 (





 


  
   
     
    
     	



   
     
    
     
    
     
  
    
 
 
 	
 

 
 
 
 	

 

 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
     
  !   
      
      
      
      
      
      
      
      
    
  
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #
   
   
  
 ! 
    
   
	 
   
   

  
 !   
   
    
  
  	   
 
  	#  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #  
   
   
  
  
 
  
  
  
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
#
   
  
  
! 
    
   
	 
   
   

  
 !   
   
    
  
 	   

  	#  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
$  
!   
   
  !  
    
  !   
   
   !  
    
   !  
    
   
 ! 
   
  !   
    
    !  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 	

 

 
 
  	 	
 
 
  
    
   
 
   
   
  
  
   
   
  
  
 	#  
 	#   
	#   
    
 	

 

 
  
  
   	
 
 
 
     
      
    
      
     
      
    
     
      
      
     
  
    
   
 
 
 
 
 
 
 
 
 
  
  
  
  
  
  
 
  
 
  
 !   
   
    
  
     
 
 	 
   
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #  
   
   
  
  
 
  
  
  
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
2005
[25] 8051/8951
2003
[26] 8051
2002
[27] seamless 
[28] 
Emc sar
h t t p : / / w w w. c e . f c u . e d u . t w /
news/EMC .pdf 
[29] EMC
2006 http://www.dyuee.net/
EMC_tang.ppt
532 0 0 8  A p r i l  N o . 7 4
1
addwf 0.000255 bcf 0.001612
andwf 0.000256 bsf 0.001176
clrf 0.000372 btfsz not jump 0.001068
clrw 0.00025 btfsc 0.000645
comf 0.000558 btfss 0.000354
decf 0.000384 btfss 0.000519
Decfsz not jump 0.001446 addlw 0.001141
decfsz 0.000883 andlw 0.00019
incf 0.000407 call 0.000553
Incfsz not jump 0.001135 clrwdt 0.001328
incfsz 0.001591 goto 0.000411
iorwf 0.001596 iorlw 0.000381
movf 0.000502 movlw 0.000909
movwf 0.000738 retfie 0.000543
nop 0.000193 retlw 0.000544
rlf 0.001064 return 0.000889
rrf 0.001546 sublw 0.001348
subwf 0.00187 xorlw 0.001483
swapf 0.001151 xorwf 0.001517
  
 
  	
 
 
 
    
  
	

 
 
      
     	

  
 
     
  
     
    	
 
 
 
 
 
 
   
  
  
   

 
   	

 

  
     
   
     
  
   
     
   
     
  
   
   
    
     
     
   
   
     
    
   
  
  
!   
"! 
	
    
 
    !
   
    
  	  
  !
   
     

  !
     
   
   
   
    
      
     
  
 !  
    
 
 
 
 
 
 
 
 
  
   
 
  
  
  
  
  
 
  
 
  
  
  
  
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 
 
 
 
 
 
 
 
	# 
#
  
  !   
    
 
   
   
  
  
  
  
  
!   
   
 
 #  
 
 	   
  
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 
	
 
  
  
 
 
  
 
 
	 
 $	#
 "
%#
 
  & 
  
'  	#

 	#	
 
	# 
 
    
     
    
 	
     

   
 
 
 
 	#
  !	# 
    
    
     	
 
  
 
  
   
    	

  

 
 
 
 
 
  
   
    
 
  	

 

 
  
  ! 
 	
  

 
  
   !
  
     
 	#   !  
 # 
	   
   
 ( 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  	
 
 
  
 
  	



  	
 
 
  
     
  
 
    
 	  	#
 	# 	#  
 	# )  
   
  	#   
*  
 
 (





 


  
   
     
    
     	



   
     
    
     
    
     
  
    
 
 
 	
 

 
 
 
 	

 

 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
     
  !   
      
      
      
      
      
      
      
      
    
  
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #
   
   
  
 ! 
    
   
	 
   
   

  
 !   
   
    
  
  	   
 
  	#  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
   
  
  
   
  
   
  
   
   
  
   
   
  
   
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	#  
#
  
  
  
   !   
    
    
  
 	   
 #  
 
 	  
 #   
  
   
    
   
   
    
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
    
  
   ! 
  
    

	 
  

  
! 
    
 !   
     
   
 
    

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
 #  
   
   
  
  
 
  
  
  
  
  
 
  
  
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
  
   
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
#
   
  
  
! 
    
   
	 
   
   

  
 !   
   
    
  
 	   

  	#  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
	# 
#  
!  
    
 !   
     
     
     
     
     
     
     
     
   
 
     

	 
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
$  
!   
   
  !  
    
  !   
   
   !  
    
   !  
    
   
 ! 
   
  !   
    
    !  
   
 
 
 
 
 
 
 
 
 
 
 
 

  
!   
   

  
!   
  
 !    
    
  !   
    
 !    
    
    
   
  
   
   
  
 	

 

 
 
  	 	
 
 
  
    
   
 
   
   
  
  
   
   
  
  
 	#  
 	#   
	#   
    
 	

 

 
  
  
   	
 
 
 
     
      
    
      
     
      
    
     
      
      
     
  
    
   
 
 
 
 
 
 
 
 
 
  
  
  
  
  
  
 
  
 
  
 !   
   
    
  
     
 
 	 
   
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 	# 
#
   
  
  
! 
    
   
	 
   
   

  
 !   
   
    
  
 	   

  	#  
 
  
 
 
 
 
 
 
 
 
 
 
 
 
本文將對這些標準作基本介紹，同時亦參考其方法量測 IC 層級的頻域及時
域特性，並依此建立其電磁干擾模型，接著，進一步分析及比對量測與模型模
擬的結果，俾利建立一較精確的 IC-EMC 模型，以便掌握 IC 的 EMC 特性。 
本文架構共分成 6 個章節，第 1 章介紹研究背景與目的。第 2 章積體電路
電磁干擾量測的介紹第 3 章積體電路之電磁干擾模型的介紹，第 4 章國際間發
展的現況。第 5 章標準檢驗局積體電路電磁相容實驗室基礎建設的規劃。第 6
章結論 
 
2. 積體電路電磁干擾的量測 [2][3][4][5][6][7] 
建立 IC 電磁干擾量測標準 IEC 61967 之目的，是為了建立統一的 IC 電
磁干擾量測環境，以量測來自 IC 的 RF 擾動，使量測結果可以在同一個參考
條件下，作比較或作為建立行為模型之使用，每一種量測方法各有其特色與
限制，使用者將依自己的需求選擇適合的測試方法。 
 
2.1 TEM Cell 量測法 
 2.1.1 量測系統的建立 
        TEM Cell 量測系統之建置(setup)如圖 2.1 所示，應用上，可以先
使用 TEM Cell 法，挑出幾個電磁干擾較大的頻率點，然後配合 IEC 61967-3
表面電場與磁場掃描，找出 IC 電路內的干擾源電路，針對那部份的電路，
重新設計或是重新佈線(Planning and Routing)，最後再以 TEM Cell 量測
法來驗證待測 IC，確認其電場與磁場干擾是否已經有改善，符合規範的規
定。 
    量測系統的架構，如圖 2.1 所示。由下面幾個部份所組成： 
 1GHz TEM Cell： 
 頻譜分析儀(spectrum analyzer)： 
 前置放大器(preamplifier)： 
 針對待測 IC 所設計之測試電路板： 
 終端電阻 50 歐姆   
 
 
 
 
 
圖 2.1 為 TEM Cell 量測系統 
(1)量測時，將待測電路板安裝在定位移動平台上，待測 IC 將操作在所
想要的測試模式下 
(2)將頻譜分析儀依次設定在所想要的頻率點上。 
(3)每一次的量測，將使用程式來驅動定位移動平台，使得近場探針可
以在 IC 的封裝或是晶片(die)正上方約 1mm-2mm 處作表面的掃描，
探針移到每一個位置，去探測最大值，然後再移到下一個位置，一
直到掃完所有 IC 平面為止。 
(4)從近場探針所量到的 IC 或晶片(Die)表面電場或磁場資料，將經前
置放大器放大後，送到頻譜分析儀，經使用 Labview 語言書寫量測
程式，可以將所量得的頻率大小，配合該定位平台的相對座標位置，
在電腦畫出電場或磁場分佈圖。其中定位平台的定位命令是使用
Labview 程式，經過 GPIP 接面，將定位的位置命令下達至定位移動
平台。 
【注意】當使用磁電磁場探針，須作 2個序列的表面掃描，首先，探測
器的迴圈(probe loop)的方向，沿著 IC 表面的一個(X)軸的方向掃完
全部得到 X方向的磁場分佈，接著，將探測器的迴圈(probe loop)的
方向沿著 Y軸掃完全部得到 Y方向的磁場分佈，然後更換磁電磁場探
針，以 Hz-probe(磁電磁場探針) 沿著 X 或 Y 軸掃完全部得到 Z 方向
的磁場分佈。 
 
2.3 直接耦合 1歐姆/150 歐姆量測法 
2.3.1 量測系統的建立 
IEC 61967-4 是使用 1 歐姆 RF 電流探針與 150 歐姆耦合網路法來量測
IC 的傳導干擾。 
IC 電磁干擾發生的原因，是因為 IC 內部產生很快速的電壓、電流變化
率，而產生 RF 電流，這些 RF 電流經由 IC 的 pin 腳流出，經電路板的信號線、
電欖或排線(cable)流到週邊，再經有週邊的接地回到電路板的接地平面及
RF 隔離的地，然後，再經由回到 IC 的接地腳，形成一個迴圈，這迴圈可以
看成是一個環形天線(loop antenna)，所形成的 RF 雜訊電流的迴圈越大，所
產生的電磁干擾越低，雖然 IC 內部結構所形成的電流迴圈與外面所形成的電
流迴圈相較，小很多，但是那 IC 的 RF 電流雜訊，卻是外面電路電磁干擾的
來源與重要能量，外面的 RF 電流迴圈好像電磁干擾放大器一樣，我們要降低
電磁干擾，一種是把 RF 電流迴圈變小，或是阻斷干擾源與受害者(victims)
的傳導或是幅射路徑，或是直接減少 RF 電流雜訊的大小。 
在測試電路板上，任何的 RF 電流有它自己的迴圈回到 IC，大部份都是
經由接地或是電源線回到 IC 本身，如圖 2.3 所示，迴圈 1代表電源線，迴圈
2 代表輸出信號的迴圈，這兩個 RF 電路迴圈都是經過共同的 RF 隔離地與週
邊地，回到 IC 地，因此，在 RF 隔離地與週邊地與 IC 地之間是最好的量測位
2.4.1 量測系統的建立 
      工作平台法拉第箱體量測法的量測架構，是從 IEC 61000-4-6 的量測
方法(如圖 2.6)推導過來的，主要是用來量測 IC 的共模雜訊，RF 雜訊可以
把他分成差模雜訊與共模雜訊，一般而言，共模雜訊對 EMI 的影響比差模
雜訊較大，。 
    量測系統的架構，由下面幾個部份所組成：(如圖 2.7) 
 工作平台法拉第箱體(如圖 2.8) 
 頻譜分析儀(spectrum analyzer)： 
 直流電源供應器： 
 針對待測 IC 所設計之測試電路板： 
 示波器 
 終端電路 50 歐姆   
 
 
 
 
 
 
 
 圖 2.6 為 IEC 61000-4-6 量測系統    圖 2.7 工作平台法拉第箱體量測系統 
 
 
 
 
 
 
 
圖 2.8 為工作平台法拉第箱體實體圖 
2.5 磁場探針量測法 
2.5.1 量測系統的建立 
      磁場探針量測法是使用非接觸式的方法來量測 IC 電源與 I/O 腳的 RF
電流，PCB 電路板上的幅射電磁干擾的形成是由於電路板上的 IC 所產生的
RF 電流，經由電源或是 I/O 信號腳，流到電路板上的信號線，經排線或電
纜線到週邊，再由週邊的地回到電路板的地，再回到 IC 的地，IC 所產生的
IC 電磁干擾之電源線等效模型如圖 3.1 所示，等效電路所使用之參數，其
定義說明如下所示： 
- Ib：RF 雜訊電流。  
-  LpackVdd：Vdd 電壓接腳至 bonding 間之等效電感。 
- LpackVss： Vss 接地接腳至 bonding 間之等效電感。 
- RpackVdd： Vdd 電壓接腳至 bonding 間之等效電阻。 
- RpackVss： Vss 接地接腳至 bonding 間之等效電阻。 
- Cd：Vdd 電壓接腳與 Vss 接地接腳間之等效寄生電容(parasitic 
capacitor)。  
- Rvdd：Vdd bonding 與 die 間之等效電阻。 
- Rvss： Vss bonding 與 die 間之等效電阻。 
- Lvdd：Vdd bonding 與 die 間之等效電感。 
- Lvss：Vss bonding 與 die 間之等效電感。 
- Cb： 內部 die 之等效電容。 
 
 
 
 
 
 
圖 3.1 IC 電磁干擾之電源線等效模型 
 
3.2等效模型參數之建立 
3.2.1 RF雜訊電流Ib之建立 
(1)內定值估計法 
一般而言，Ib之大小為數個mA至1A，持續0.5 至 5ns，週期為500ps 至 
50ns，通常，同時動作之Cell數約佔整體die Cell數約10%左右，我們可以
利用查表法來計算RF雜訊電流產生器Ib之大小，計算方法說明如下： 
(a)假設我們有一顆ASIC die 晶片，採用0.18μ m製程技術，其die面積為
2x2=4 mm²。我們由表3.1可知，0.18μ m製程技術，其Cell密度為22000，
可能的動作（switch）之Cell的數目即約為22000X4=88000，一般而言，
同時動作之Cell數約佔整體die Cell數約10%左右，因此，每一次clock
觸發後該die產生之RF雜訊電流Ib約等於22000X4x10% gate 
x0.3mA/gate=2640mA。 
(b)假設我們有一顆32bits RISC micro-controller，採用0.18μ m製程技
術。經查表3.2，我們可以知道其約有40000gates，因此，每一次clock
觸發後該CPU die產生之RF雜訊電流Ib約等於40000 x 10%gates 
x0.3mA/gate=1200mA (如圖3.2所示) 
I b
R v d d
V D D  o f  th e  IC
V S S  o f  t h e  IC
C d
L v d d
R v s s L v s s
C b
R  P a c k V d d
R  P a c k V s s L  P a c k V s s
L  P a c k V d d
  
圖3.3 示波器量測IC電源Vdd波形  
 
圖3.4 示波器量測IC電源Vss波形   
 
3.2.2 Passive elements extraction 
  這節將說明，IC-EME電源等效模型中R ,L, M, C參數建立之方法，說明如下： 
（1） 內定值估計法 
（a） 串連之電阻、電感與互感值（LpackVdd、LpackVss、RpackVdd、    
RpackVss、Rvdd、Rvss、Lvdd、Lvss）： 
Vdd電壓接腳至bonding間之等效電感與 互感值LpackVdd、Vss接地
接腳至bonding間之等效電感LpackVss 、Vdd電壓接腳至bonding
間之等效電阻RpackVdd、Vss接地接腳至bonding間之等效電阻
RpackVss、Vdd bonding 與die間之等效電阻Rvdd、Vss bonding 與
die間之等效電阻Rvss、Vdd bonding 與die間之等效電感Lvdd、Vss 
bonding 與die間之等效電感Lvss，可使用下面表3.3，約略估計出
來。表3.3 IC被動元件值範圍表 
元件 最小值 最大值 
LpackVdd, LpackVss 1nH 10nH 
互感M 0 10nH 
RVdd,RVss 0.1 Ohm 10 Ohm 
LVdd, LVss 1nH 20nH 
Zsub DC value 0 100 Ohm 
Volt 
Sec 
Sec 
Volt 
知，一般而言，Cd為10pf至100pf，遠小於Cb(為440pf至1000pf等級)，因此為
簡化計算模型，我們忽略Cd，在串聯諧振發生時，電路為純電阻性，且阻抗為
最小值，因此，我們看圖3.7，可由得到量測曲線最低點之阻抗值R tatal ，即
R tatal =R1+R2，由電路學原理我們知道，低於串聯諧振頻率為電容性阻抗，我們
取低於10倍諧振頻率所對應到之阻抗為Z C ，即 
C tatal =
cfZΠ2
1 ，其中 =Π 3.14，f：取低於10倍諧振頻率，Z C ：取低於10倍諧
振頻率所對應到之阻抗。C=C tatal ，同理，由電路學原理我們知道，高於串聯諧
振頻率為電感性阻抗，我們取高於10倍諧振頻率所對應到之阻抗為Z L ，即 
L tatal = f
Z L
Π2 ，其中 =Π 3.14，f：取高於10倍諧振頻率，Z L ：取高於10倍諧
振頻率所對應到之阻抗。L tatal =L1+L2，我們假設VDD 與 VSS 間之等效阻抗模
型為對稱的，也就是L1=L2，因此，我們可以將電感值以2，利用上述量測與使
用電路原理，經數學運算後所建立之IC-EME電源等效模型如圖3.7所示。 
 
 
V D D
V S SP a c k a g e
D ie
V e c to r
N e tw o rk
A n a ly z e r
p c
V D D
V S SP a c k a g e
S o ld ie r in g  to  
G N D  p la n e
P C B
S M A  c o n n e c to r
 
 
圖3.5被動參數抽取量測接線圖 
 
 
圖 3.8 模擬產生的阻抗量測結果 
 
圖 3.9 模擬產生的阻抗量測結果 
4.積體電路電磁相容國際目前發展近況 
有鑑於積體電路電磁相容的重要性及為建立一套標準化的量測及模型建立
的程序與方法，國際電工委員會(International Electrotechnical Commission)(簡稱
IEC)進行一系列有關積體電路電磁相容量測及模型的標準的製訂工作，其目前
的標準的編號、名稱及出版的狀態如表 4.1-表 4.7 所示[1]，目前除了積體電路
電磁干擾的量測大部份已出版，積體電路電磁耐受出版 3 份標準，大部份的標
準都尚在草案階段或尚未提出。 
表 4.1 積體電路電磁干擾量測標準 
標準編號 標準名稱 出版的狀態 
IEC 61967-1 Integrated circuits - Measurement of 
electromagnetic emissions, 150 kHz to 1 
GHz - Part 1: General conditions and 
definitions 
2002-03 出版 
IEC/TS 61967-3 Integrated circuits - Measurement of 
electromagnetic emissions, 150 KHz to 1 
GHz - Part 3: Measurement of radiated 
2005-06 出版 
IEC 62132-2 Integrated Circuits - Measurement of 
Electromagnetic Immunity, 150 kHz to 1 
GHz - Part 2: Measurement of Radiated 
Immunity - Tem-Cell and Wideband 
Tem-Cell Method 
未出版(A2CD) 
IEC 62132-3 Integrated circuits - Measurement of 
electromagnetic immunity, 150 kHz to 1 GHz 
- Part 3: Bulk Current Injection (BCI) method
未出版(ADIS) 
IEC 62132-4 Integrated circuits - Measurement of 
electromagnetic immunity 150 kHz to 1 GHz 
- Part 4: Direct RF power injection method 
2006-02 出版 
IEC 62132-5 Integrated circuits - Measurement of 
electromagnetic immunity, 150 kHz to 1 GHz 
- Part 5: Workbench Faraday cage method 
2005-10 出版 
IEC 62132-6 Integrated circuits-stirred chamber 未出版(NP) 
 
表 4.3 積體電路暫態電磁耐受測試 
IEC 62215-1 General and definitions 計畫中尚未提出
IEC 62215-2 Integrated circuits - Measurement of impulse 
immunity - Part 2: Synchronous transient 
injection method 
未出版(CDTS) 
IEC 62215-3 Integrated circuits –Part 3:Random Transient 
injection 
未出版(NP) 
 
表 4.4 積體電路電磁干擾評估 
標準編號 標準名稱 出版的狀態 
IEC 62228 Integrated circuits - EMC evaluation of CAN 
transceivers 
未出版(BPUB) 
 
表4.5積體電路I/O模型 
標準編號 標準名稱 出版的狀態 
IEC 62404 Logic digital integrated circuits - 
Specification for I/O Interface Model for 
Integrated Circuit (IMIC version 1.3) 
未出版(BPUB) 
此外，日本 Voluntary Control Council for Interference by Information 
Technology Equipment(VCCI)，在 2005 年 4 月 1 日開始推動模組 EMC 認證，採
用的量測方法目前是採用 NEC 公司發展磁場探針量測法(Magnetic Probe 
method)。 
   VCCI 目前擬定六個等級的干擾限制值(如表 4.8-4.9)，以區別模組的干擾現
象，並標示於模組上面，以便使買賣雙方彼此了解產品的 EMI 特性, VCCI 針對
模組的標示如圖 4.1 所示。 
表 4.8模組干擾限制值 
擾動位準 限制值(dBuA) 
 10MHz 100MHz 1000MHz 
擾動位準 A 115 95 75 
擾動位準 B 110 80 60 
擾動位準 C 85 65 45 
擾動位準 D 70 50 30 
擾動位準 E 55 35 15 
擾動位準 F 40 20 0 
表 4.9 六個模組干擾限制值等級及符號 
編號 擾動位準 符號 
1 A KA 
2 B KB 
3 C KC 
4 D KD 
5 E KE 
6 F KF 
  
 
圖4.1 VCCI針對模組的標示  
一些國際大廠目前賣出的 IC 都會標示 IC 的電磁干擾及電磁耐受特性給客戶參
考，圖 4.4 為 Infineon 的 IC 資料說明書。 
 
 
 
 
圖 4.2 為 Infineon 的 IC 資料說明書。 
Faraday Cage method 
[7] IEC 61967-6,Integrated circuits - Measurement of electromagnetic emissions, 150 
kHz to 1 GHz - Part 6: Measurement of conducted emissions - Magnetic probe 
method 
[8] IEC/TR 62014-3 ,Electronic design automation libraries - Part 3: Models of 
integrated circuits for EMI behavioural simulation. 
[9] Initiation of VCCI Kit Module Program , http://www.vcci.or.jp 
Microcontroller instruction set simulator for EMI 
prediction
Shih-Yi Yuan*, Jia-Wen Luo, Ming-Yuh Lin, Shry-Sann Liao 
Communications Engineering Department Feng Chia University
E-mail: *syyuan@fcu.edu.tw
Abstract  —  This paper predicts the EMI time-domain 
behavior when applying different program on a simple 
microcontroller. Using instruction current [1] concept and 
an instruction set simulator (ISS), this work can predict, in 
time domain, accurate EMI behavior of conduct emission 
behavior up to 20X clock frequency. 
1. INTRODUCTION 
Microcontrollers are widely used in products such as 
consumer electronics and automotive electronics. These 
devices and products demand severe electromagnetic 
compatibility (EMC) constraints. Technology and market 
trends lead to smaller electronic devices and demand 
much more functions in these products. ITRS roadmap [2] 
predicts, by the year of 2010, 18nm CMOS process will 
be made available and the operating frequency will be 
near 15GHz in an EMC-confirmed system. 
It is well known that dynamic switching currents of 
supply lines on the silicon die are the main sources for 
conducted electromagnetic emission (EM). It is also 
trivial that the conducted EMI from chips cause the 
system application board to radiate parasitic emission. In 
high performance microcontrollers, clock rates are 
steadily increasing, forcing rise and fall times to decrease. 
Data transmissions are made strongly synchronous all 
over the chip. Besides the clock frequency, high-driving-
capacity and high-frequency output pins, clock-gating 
structures for power saving, functional block power 
supply controls, among other issues all play important 
roles on the VDD dynamic currents considerations. 
Several EM reduction techniques have been proposed, 
for example, the inductor cancellation [3], data encoding 
for cross-take suppression [4], shielding [5][6], dynamic 
voltage scaling [7] and core supply reduction. Although 
the reduction of core supply voltage can reduce emission, 
the benefit is compensated by a drastically increased 
number of simultaneously switching transistors per die 
and faster rising/falling edges due to increasing clock 
rates. The peak transient currents for current chips may 
be as high as 100A [8]. 
Generally, a digital system needs certain components 
to complete specific functionalities. These components 
include microcontroller(s), memories, I/O channels and 
external/internal crystal. 
Traditional EMI measurement requires long time to do 
a detail analysis on a simple-testing-code-loop basis. 
However, in the modern world, varieties of applications 
are usually implemented by the same kind of hardware 
only with different software(s). It is obvious that software 
will change the total digital circuit EMI behavior due to 
techniques such as: output signal switching frequencies 
of different applications; different programmable I/O 
driving capacities; programmable clock rate control by 
clock-gating schemes [9]; programmable crystal input 
driving capacity for jitter reduction; PLL controlling 
schemes; different component power-line controls [10] 
and various power saving strategies [11]. Thus, it is clear 
that, by adapting different techniques mentioned above, 
the EMI behavior will change even in the same hardware 
with different software running on it. 
If a system platform is designed for multi-purpose, 
which is common at present, the software applications 
running on it may switching from one another in a matter 
of milliseconds or even faster. It means the EMI 
behaviors are heavily dependent on the combination and 
execution sequence of a group of applications on the 
system. 
It also means that the current EMI behavior analysis 
standards should conduct numerous application 
combinations and sequences (IEC 61967 [12]). Even 
these analyses are theoretically doable, they will be 
highly impractical. The analysis results would not be 
accurate if the application combinations or execution 
sequences are not similar. To make things worse, the 
trend of hardware reusing is increasing, from 34% (year 
2006), 50% (year 2010), to 90% (year 2020), according 
to ITRS, which means the accurate EMI behavior 
prediction will be more dependent on software behavior 
pattern as time goes by. To make things even worst, by 
the invention of time-sharing operating system (OS), the 
EMI behavior of the total system can be very tricky for 
estimation not to mention how to do an EMI 
modelization. 
In this paper, EMI behaviors of different instructions 
were measured and logged into an instruction current 
database (ICDB). We will use a modified ISS to simulate 
EMI behavior of a system. This modified ISS can use 
ICDB to predict EMI behavior of an embedded system 
which includes microprocessor, memory, interrupt 
controller, simple peripherals and very complex program 
running on it. This work can be extended to practically 
more complex program EMI prediction (ex. OS kernel) 
on any digital or mix-mode system. 
Based on this work, some software design approaches 
overcoming or at least partially compensating the 
parasitic emission noise effects caused by fast 
simultaneous switching can be principally estimated. To 
the best of our knowledge, this work is the first 
observation and prediction of EMI behavior for a 
complex program behavior on embedded system. 
Fig. 4(a). “NOP+GOTO” ICM testing program. 
Fig. 4(b). ICM of 4(a). 
Fig. 4. ICM model of PIC code “NOP+GOTO” building 
setups.
Fig. 5. Target instruction code testing. 
Fig. 6. ICM building flow. 
Steps 3 and 4 of the ICM building flow are done by a 
curve fitting algorithm between what is measured and 
simulated. 
As we estimated the ICM of each instruction, we found 
each of the instruction current behavior is accurate 
enough if using 8 triangle-shaped periodical current 
waveforms with different amplitude and durations (Fig. 
8). We build each ICM according to the information of 
every current source and named it by the target 
instruction name. All of this information is put into an 
instruction current database (ICDB) for a modified ISS. 
This modified ISS will be detailed in following section. 
Fig. 7. A curve fitting MSE calculation (MOVF, single 
instruction).
Fig. 8. ICM modeling for PIC MOVF instruction.
3.2 ISS Simulation Preparation For PIC System 
SID [16] is an open source ISS engine including a 
script language, which can configure target machine very 
conveniently. SID is a system-level simulator. The 
system can include microcontroller, memory, monitor, 
disk, and other “virtual hardware”. Every “virtual 
hardware” is a hardware behavior description coded by 
C++ and is defined as a “component” by SID. All of 
these SID components are in public domain and are 
freely distributed for academic usages.
3.2.1 ISS Architecture 
Fig. 9 shows the modified SID ISS architecture. There 
is an instruction set simulator engine at bottom. It accepts 
three input sources: PIC ICDB, program code and HW 
configuration. The program code is written by PIC C and 
PIC assembly. All program codes are compiled and 
assembled by industrial compiler and assembler; then, 
transform to binary image. The image is loaded into the 
memory component for SID simulation. 
During the execution, SID simulation engine produces 
a sequence of dynamically generated clock-based 
waveform according to: 
1. What is the target instruction drawn form memory 
component, 
2.What is the target instruction’s ICM drawn from ICDB, 
and
3. What is the pipeline sequence effect according to PIC 
timing specification. 
0. ICM for specific. 
1. Adjust for ICM. 
3. Match with MSE
analyzer program. 
2. Measurement. 
4. MSE
threshold? 
Yes
No
For another Instruction’s 
(each cycle takes 2 clock periods). After searching ICDB, 
PIC ISS will fill each cycle by fetching the proper ICM. 
Using the same procedure, the modified ISS fills 
MOVWF, MOVLW, ADDWF and GOTO instructions in 
the same way. Each cycle’s current waveform is then 
summed up and outputted by cycle. 
Fig. 12. A more complex code for EMI estimation. 
Fig. 13. To compute instruction current during each cycle.
4. EXPERIMENT RESULTS 
4.1 Single Instruction ICM Approximation 
We design each of the instruction current model (ICM) 
based on the ICEM model according to Fig. 6. One of the 
instructions ICM (ADDWF, one of the PIC machine 
instruction) is shown in Fig. 14. 
MSE of all instructions are show in Table 1. All of the 
MSE between measurement and simulation are close to 
the same range (0.19% ~ 0.03%) and justifies the 
prediction to a certain range. 
TIME
Fig. 14. Single instruction ICM for PIC instruction ADDWF. 
Table 1 
MSE of each instruction 
Instruction MSE Instruction MSE 
addwf 0.000255 bcf 0.001612
andwf 0.00019 bsf 0.001176
clrf 0.000372 btfsz no jump 0.001068
clrw 0.00025 btfsc 0.000645
comf 0.000558 btfss 0.000354
decf 0.000384 btfss 0.000519
decfsz no jump 0.001446 addlw 0.001141
decfsz 0.000883 andlw 0.00019 
incf 0.000407 call 0.000553
incfsz no jump 0.001135 clrwdt 0.001328
incfsz 0.001591 goto 0.000411
iorwf 0.001596 iorlw 0.000381
movf 0.000502 movlw 0.000909
nop 0.000193 retfie 0.000543
rlf 0.001064 retlw 0.000544
rrf 0.001546 return 0.000889
subwf 0.00187 sublw 0.001348
swapf 0.001151 xorlw 0.001483
xorwf 0.001517  
4.2 ISS Correctness 
The correctness of PIC ISS is exam by running the ISS 
to see the simulation result and check the input/output 
responses are what we have designed. The simulation of 
Fig. 12 is shown in Fig. 15. The simulation result is 100% 
functionally exact as the physical PIC counterpart, at 
about 100X slower, which is normal or better than 
general functional simulation cases. The reasons may be 
the simplicity of PIC hardware architecture, the 
efficiency code design, or the SID engine optimization. 
Fig. 15. Predicted Output response of Fig. 12 combined with 
other virtual components.
4.3 ISS EMI Correctness 
The modified PIC ISS produces the instruction current 
waveform which is immediately put into WINSPICE 
simulation to find the target system EMI responses. The 
simple loop program timing responses comparison 
between simulation and measurement is shown in Fig. 16. 
The MSE is (0.08%) which is within the MSE range as 
Table 1. However, the frequency responses are not so 
good at high frequency (over estimated). This may be the 
high-order high-frequency response which is not 
considered in ICM and should conduct deeper study into 
the problem. 
		

	
		

	


	


Preliminary Program
Nov. 28, 2007 Paper ID
8.00 10.00 Registration
10.00 10.10 Welcome note
Franco Fiori  Politecnico di Torino
10.10 10.40 I_1 Invited talk
Chip level EMC: the role of silicon makers
Ing. M.Monti STMicroelectronics
10.40 11.00 Coffee break
11.00 13.00 IC Modeling for EMC
I_2 Invited Talk
Prof. Tod Hubing  Clemson University
05 Estimation of the conducted emissions of high side switches
by using behavior models
B.Deutschmann, F.Camarero, M.Guersoy
Infineon Technologies AG
42 Efficient substrate coupling analysis in smart power
integrated circuits
P.S.Crovetti, F.Fiori  Politecnico di Torino
37 Determination of effective parasitic capacitors around IC
package for EMC modeling
K.Iokibe, A.Takahashi, U.Paoloetti, O.Wada Okayama
University
04 Modelling of a direct injection aggression on a 16 bit
microcontroller input buffer
A. Boyer, E.Sicard INSA
52 High accuracy emission simulation models for VLSI chips
T.Steinecke, M.Goekcen, D.Hesidenz, A.Gstoettner
Infineon Technologies AG
13.00 14.00 Lunch
14.00 15.30 Poster session 1
15.30 17.30 EMC Issues in SoC design (I)
03 Estimation of current profiles for large digital VLSI modules
in early design phases
A. Gstottner, M.Huemer University of Erlangen
36 Characterization and suppression of simultaneous switching
output noise for high speed single ended signaling
J.Lee, J.Lee, J.kang, K.Park Hynix Semiconductor
19 Binary inter chip communication based on the transmission
of electric charge pulses
F.Fiori  Politecnico di Torino
Nov. 29, 2007 Paper
ID
8.30 9.00 I_3 Invited Talk
Kevin Slattery  Intel
9.00 10.40 EMC Measurements
06 IC stripline: a new proposal for susceptibility and emission
testing of ICs
B.Koerber, M.Trebeck, F.Klotz
Zwickau University of Applied Sciences
53 New test method for the pulse immunity of microcontrollers
T.Su, M.Unger, T.Steinecke, R.Weigel
Infineon Technologies AG
01 On choosing the right immunity test for IC's applied as modules
F.Vanhee, J.Catrysse KHBO
20 From IC characterization to system simulation
F.Lafon, D.De Daran VALEO
43 Pulse length and power dependency of the failure threshold of a
low noise amplifier
R.Jonsson, M.Hoijer Swedish defence research agency, FOI
10.40 11.00 Coffee break
11.00 12.40 EMC Measurements
27 An application of frequency domain probe calibration and
compensation procedures in near field measurements over an
integrated circuit
H. Weng, J.Shi, D.G.Beetner, R.E.DuBroff
University of Missouri Rolla
51 Using electric and magnetic moments to characterize
IC coupling to cables and enclosures
T.Hubing, S.Deng, D.Beetner
Clemson University
23 EFT immunity characterization of ICs
F.Musolino  Politecnico di Torino
24 Novel measurement method to analyse susceptibility of VLSI's if
DUT gets injected with sinusoidal/EFT signals
G. Auderer Freescale
21 ESD Analysis methodology From IC behavior to PCB prediction
F.Lafon, F.de Daran, S.Lecointre
VALEO
13.00 14.00 Lunch
14.00 15.30 Poster session 2
15.30 18.00 IC design for EMC Compliance
35 Design of an on chip EMI suppressing regulator for automotive
electronics applications
J.Zhou, W.Dehaene ESAT MICAS, Katholieke Universiteit Leuven
26 IC charge pump effect on conducted and radiated emissions in
automotive application
F.Galtie, C.Marot SIEMENS VDO
39 Design guidelines for improvement of EME of Switching circuits,
like charge pump
M.Amighini, V.Poletto STMicroelectronics
46 Power multichip module design regarding EMC
S.Mandray, J.M.Guichon, J.L.Schanen, J.,Roudet G2ELab
Nov. 30, 2007 Paper ID
8.30 10.10 EMC Issue in SoC design (II)
17 Towards an EMC roadmap for Integrated Circuit
E. Sicard, S. Ben Dhia, M. Ramdani INSA
28 System on chip signal integrity enhancement to power
supply disturbances
J.Semiao,M.Rodriguez Irago,M.Moraes,
F.Vargas,M.B.Santos,I.C.Teixeira, J.J. Rodriguea Andina,
J.P.Teixeira
Catholic University PUCRS
48 Microcontroller instruction set simulator for EMI prediction
S.Yuan, J.Luo,M.Lin Feng Chia University
09 Susceptibility to EMI of Sigma Delta Converters
D. Musumeci, P.S.Crovetti, F.Fiori  Politecnico di Torino
59 Chip package circuit co modeling for analysis of digital
power and ground noise coupling effect on CMOS negative
feedback amplifier
Y.Shim, J.Park, J.Kim KAIST
10.10 10.30 Coffee break
10.30 11.50 Tools to handle EMC at IC and PCB level
54 Evaluation of different steady state simulation methods for
EMI analyses of ICs
U.Sturmer,G.Thomas, S.Ritzmann, O.Jovic, W.Wilkening,
W.John
Fraunhofer IZM Berlin / Paderborn ASE
13 Full wave analysis of a large IC package using parallel
computing
E.Gjonaj, T.Weiland, I. Munteanu, P.Thoma
Technische Universitaet Darmstadt
02 A methodology for predicting by near field chip to chip
coupling
A.Boyer, A.Boulingui, E.Sicard, S.Ben Dhia, S.Baffreau
INSA
32 Early prediction of immunity problems in integrated circuit
susceptibility testing
J.Loeckx, G.Gielen
11.50  12.30 Best paper awards & conclusions
