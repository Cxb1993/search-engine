is used to integrate the front-end applications or 
users such as sleep healthy community, smart phone, 
doctor and hospital to access the patient’s sleep 
information immediately. Finally, the system is also 
provided a reasoning and ontologies mechanism to 
facilitate the sleep services discovery, selection, 
composition, and delivery. 
英文關鍵詞： OSGi, MultiAgents Architecture； Service-Oriented 
Architecture； Sleep Disorder Middleware 
 
摘要 
本計畫的目的是希望建立一個符合遠距健康與睡眠照護之多代理人服務導向系統的中
介層平台，其目的在提供完整的平台服務與所處環境的透通性，同時需要能容易的感知目
前系統/裝置所處環境，提供連線裝置所需服務。中介層不但要能支援軟體可以在複雜的計
算環境中的執行，而且它必頇能讓設計師可以容易的開發各種不同的應用程式。 
本年度我們於Android上實作一個OSGi平台應用程式，將Jade的行動代理人平台執行於
此OSGi平台上，前端透過Jade代理人於Android手機端執行代理人的使用者介面，負責處理
使用者的要求並且顯示結果；  中間層透過Jade的行動代理人平台建置工作代理人(task 
agents)以及裝置代理人(device agents)的溝通機制。工作代理人負責工作流程(workflow)的處
理，以行動代理人的機制達到減少網路溝通負荷的功能。另外，我們將後端的網路服務包
成OSGi的bundle，讓裝置代理人與後端的bundle結合，提供動態的執行環境進行資訊擷取；
裝置層則透過網路服務(web services)來整合各種後端的裝置資訊，提供彈性的整合服務。 
最後，根據目前的成果，我們實作一個居家健康照護的雛形來驗證。透過OSGi的架構，
居家使用者可以透過血氧、血壓器將相關的健康資訊藉由service bundle提供給中間層的代
理人存取，行動裝置使用者可以藉由Android手機動態及時的觀看居家使用者的相關健康資
訊。 
 
關鍵詞：多代理人架構、網路服務、OSGi平台
表 Y04 
OSGi為一主動 (initiative)且詴圖以 Java程式來建立標準，具有高階特性 (highly 
specific)、透過分享Java classes，目標為一個服務平台規範(services platform paradigm)。因
此，為達成符合使用者的工作，需要設備與應用程式來偵測使用者的存在。這類系統提供
普適運算(pervasive computing)一個可以”隨時隨地”運算的解決方案。採用符合OSGi標
準的架構後，我們必頇要面對許多挑戰，最顯著的就是”如何建立用於架構中許多元件的
代理人、與OSGi的共容性及如何使用OSGi在分散式架構中”。除此之外，代理人之間的
差異性可以極大，所以我們必頇確認每一個代理人可以互相配合，以及與正規的OSGi服
務包之間的配合。 
 
二、目的 
本計畫的目的是希望能夠建立一個符合遠距健康與睡眠照護之多代理人服務導向系
統的中介層平台，其目的在提供完整的後端服務與所處環境的透通性，同時需要能容易
的感知目前系統/裝置所處環境，提供連線裝置所需服務。中介層不但要能支援軟體可以
在複雜的計算環境中的執行，而且它必頇能讓設計師可以容易的開發各種不同的應用程
式。進而整合起遠距健康與睡眠照護系統各部元件，提供使用者在任何地點、任何時間
能夠使用網路資源的運算環境，使用生理訊號監測裝置量測體重、體溫、血壓、血糖等
生理訊號，經由讓遠距健康與睡眠照護系統能夠透過隨意網路以安全的方式傳送到醫療
資訊中心，並儲存於資料庫當中提供醫療人員以及患者參考，便於掌握使用者的健康狀
況。在這個系統中，我們以服務導向的技術透過 OSGi(Open Service Gateway initiative)提
供整合各式有線無線感應器(Sensors)的資料存取，並透過服務應用程式介面(Service level 
interface)，提供上層應用軟體之整合；同時利用多代理架構(Multiagents architecture)提供
睡眠醫療社群、智慧手機、醫生與照護人員以及醫院等後端使用者的病人即時與統計資
料的呈現與應用整合服務，並實作代理人服務層的應用程式介面。本計畫(子計畫 3)為一
整合型計畫之子計畫，本子計畫與其他子計畫的關係如圖 2.1 所示。 
表 Y04 
Bundle)，提供彈性、可擴充的睡眠診療與照護服務；(3)透過多代理人架構提供服務發現
(discovery)、擷取(selection)、整合(composition)與遞送(delivery)的功能；(4)透過推理機制
與本體論的建置，提供智慧型睡眠診療以及照護推理的功能。以下分別說明計畫中這幾
個模組的功能。99 年度為第一年度，在此年度中，我們主要完成的部分為建構以一個多
代理架構為基礎的應用合作層，以提供睡眠醫療社群、智慧手機、醫生與照護人員以及
醫院等後端使用者的病人即時與統計資料的呈現與應用整合服務，並實作代理人服務層
的應用程式介面。 
 
三、結果與討論 
本計畫主要是將多代理人與Web服務結合成一種居家睡眠照顧系統，處於遠端的手機
可介於多代理人系統在不同情境中，利用代理人與代理人之間的溝通，取得家中病患或老
人的資訊，且透過本系統、使用者將可以以更經濟的方式來找尋及使用家中所有的Web服
務。本計畫所建置的系統是將每個代理人所要處理的工作盡可能簡單化，避免像Goichi I 
TABASHI提出的排班代理人發生「單一代理人工作太吃重的問題」；以及精簡的將代理
人做分類，避免像Jiang Tian提出的電子化醫療系統因代理人分類太細使得產出降低的缺
點；因此，系統主要參考Juan A. Fraile提出的AMADE系統裡「即時反應」和「判斷優先
權」的代理人；目的是在加速系統反應時間。另外依據V.G Koutkias的慢性病老人照顧系
統，以嚴謹的判斷步驟，增進判斷準確率。在計畫中只探討代理人的架構以及Web服務的
整合，在病患或老人的資料整理並沒有使用資料探勘或資料推測。以下針對已完成的模組
如下所示。 
表 Y04 
(2) 多代理人架構平台(MultiAgents Platform) 
 
圖 2.3 睡眠診療與照護多代理人架構平台模組 
在此模組裡，我們採用 JADE  進行多代理人程式的開發。JADE 是由 TILAB(Telecom 
Italia Lab)以及 University of Parma 所發展出來並為目前較常被使用的開放式程式碼多代
理人開發平台，提供點對點的分散式架構，同時適用於發展有線以及無線網路環境的多
代理人應用程式。此外，JADE 也提供 FIPA 相容(FIPA-compliant)的代理人互動協定，因
此，提供一個彈性的多代理人 interoperability 的機制，只要是基於 FIPA 的互動協定，JADE
可以與其他的代理人程式(例如 JACK，Aglets 等)互相合作與溝通。同時，JADE 提供了
開放式與一致性的應用軟體開發介面，同時適用於 J2EE，J2SE，以及 J2ME 的開發平台，
可以提供我們的多代理人架構較為彈性的發展，對於未來延伸本計畫於結合行動代理人
(mobile agents)與行動網路服務(mobile web services)的技術具有較佳的解決方案。除了上
述平台，我們同時透過 Android-Leap 提供 Android 行動平台的 JADE 代理人系統。
JADE-LEAP(圖 2.4)支援 Android 平台的 Dalvik 虛擬機器，因此，可以讓 JADE 系統與
Android 行動平台介接。 
表 Y04 
 
圖 2.5 代理人與網路服務整合交換閘道 
 
代理人內部架構(internal architecture)如圖 2.6 以及圖 2.7 所示（此部份的代理人內部
架構是延續主持人於 96 年度國科會計畫的成果(NSC 95-2221-E-030-024)，將之應用於睡
眠診療與照護應用領域）。 
 
圖 2.6:使用者介面代理人之內部架構 
 
圖 2.7:工作代理人之內部架構 
 
表 Y04 
圖 2.8 是我們所建構之睡眠診療與照護多代理人 OSGi 平台模組。在此模組中主要有
三個部份，分別是服務包儲存庫、OSGi 服務執行平台、以及各式 OSGi 服務包。OSGi
服務包儲存庫放置各式服務包，這些服務包可以是提供一般的服務、資料或使用者介面
服務包，也可以與睡眠生醫感測網際網路服務結合，提供動態的睡眠診療與照護服務。
一個睡眠診療與照護服務包可以是單一的生醫感測服務(如血氧感測服務)，也可以是整合
多項感測服務的診療服務包(例如判斷睡眠呼吸中止服務包會整合腦波、攝影機影像、血
氧等相關感測服務)。 
OSGi 的 服務包(Service Bundle)，除了可控制家電產品與提供居家保全服務外，我
們還可提供遠距居家照護的服務。現代人生活節奏快速，工作繁忙，常無力於家中老人
的照料。在這種情況下，我們也可為 OSG 載入遠距居家照護的 Bundle。這遠距居家照
護的 Bundle 還需要硬體來配合。我們可將生理監測機（血壓計，心電圖機…等）等硬
體，製造成穿戴式的小型儀器，並提供它無線網路（WLAN、Bluetooth … 等）的功能。
將此生理監測機穿戴在病人或老人身上，並透過其上的無線網路功能，定期送出儀器所
偵測到的數值到家中的 OSGi 上。外地的使用者就能透過 PDA 與家中 OSGi 連結，遠
端監控家中病人或老人的生理狀況。 
 
四、計劃結果自評 
在本年度計劃中，我們透過代理人技術與服務導向計算的結合，提供一個研究多代理
人與服務導向技術結合軟體工程的發展方法。由於代理人具備許多特性是傳統軟體所沒有
的，而這些特性對於未來智慧型軟體具有相當的應用潛力。因此，如何設計一個系統化的
軟體工程方法，結合傳統軟體功能、服務導向架構以及多代理人技術，將視未來軟體發展
方法論一個重要的課題與挑戰。本計畫同時以居家睡眠照護為例子，設計一個結合代理人
技術以及網際服務架構之睡眠照護基礎平台，因此，可以藉由此系統所提供的平台，進行
後續相關睡眠醫療照護實務的資料收集與分析。記化所產出的原始程式碼皆放於
Openfoundry中提供自由軟體下載服務。 
本計畫的執行過程中，除了原本的計畫目標之外，我們也衍生兩個研究的成果，第一
表 Y04 
AI, Vol.890. Springer-Verlay Press, 1995, pp.307-323. 
[15] Hein, A., Eichelberg, M., Nee, O., Schulz, A., Helmer, A., and Lipprandt, M.: A Service 
Oriented Platform for Health Services and Ambient Assisted Living, International Conference 
on Advanced Information Networking and Applications Workshops, 2009. 
[16] Hutchison, A., Kaiserswerth, M., Moser, M., and Schade, A.: Electronic data interchange for 
health care. Communications Magazine, IEEE 34: 28–34, 1996. 
[17] Kim, N.-H., Jeong, Y.-S., Ryu, S.-H., Shin, D.-R.: Mobile Healthcare System based on 
Collaboration between JADE and OSGi for Scalability, MUE '07, pp.126-129, April 2007. 
[18] Kim, N.-H., Jeong, Y.-S., Song, S.-J., and Shin, D.-R.: Middleware Interoperability based 
Mobile Healthcare System, ICACT 07, Vol. 01, pp.209-213, Feb. 2007. 
[19] Kirn, S., Heine, C., Herrler, R., and Krempels, K.-H.: Agent.Hospital - agent-based open 
framework for clinical applications. In International Workshops on Enabling Technologies: 
Infrastructure for Collaborative Enterprises, Jun. 2003. 
[20] Lee, R.G., Chen, K.C., Hsiao, C.C., and Tseng, C.L.: A mobile care system with alert 
mechanism, IEEE Trans. Inform. Technol. Biomed., Vol. 11, No. 5, pp. 507-517, 2007. 
[21] Lind, J.: Patterns in Agent-Oriented Software Engineering. Lecture Notes in Computer Science, 
Volume 2585 / 2003, pp. 47-58, 2003. 
[22] 
[23] 
OSGi Service Platform, Mobile Specification, Release 4, Version 4, OSGi Alliance., 2007, pp. 
426, ISBN 9789079350032. 
[24] OSGi Service Platform, Service Compendium, Release 4, Version 4.1, OSGi Alliance., 2007, pp. 
594, ISBN 9789079350025. 
[25] The OSGi Alliance, OSGi Service Platform, Release 3, IOS Press, pp. 604, ISBN 1586033115. 
2003 
[26] Wooldridge, M., Jennings, N. R., and Kinny, D.: A Methodology for Agent-Oriented Analysis 
and Design. In O. Etzioni, J. P. Muller, and J. Bradshaw, editors: Agents'99: Proceedings of the 
Third International Conference on Autonomous Agents, Seattle, WA, May 1998. 
[27] Wu, C.L., Liao, C.F., and Fu, L.C.: Service-Oriented Smart Home Architecture based on OSGi 
and Mobile Agent Technology, IEEE Transactions on Systems, Man and Cybernetics - Part C, 
Special Issue on Networking, Sensing, and Control, vol.37, no.2, 2007. 
表 Y04 
The objective of our research is to provide a one-stepped, automatic approach for service composition in design time. 
Dynamic workflow and transactional requirement (reliability) will be thoroughly considered in order to mitigate the 
workload and burden from manually designing a CWS. The problem modeled by us is a NP-hard problem. Therefore, it 
would not suitable to solve it via regular methods such as AI-planning or brute force since the searching space faced by the 
problem has very high dimensions and the space will enlarge quickly when more services available are in repository. For that 
reason, the core of our approach adopts genetic algorithm (GA) as its power in searching answer for problems with enormous 
solution space. 
Our contribution is proposing an approach based on genetic algorithm to completely cope with tasks faced by designer and 
occurring in the design time of service composition. The approach will select and compose reasonable component services as 
a functional- and behavioral-correct, executable CWS. The process of composition does not need any human effort and 
intervention, indeed, it is automation. It guarantees that each selected component service of a CWS corresponding to user’s 
requirements is globally fulfilling the functional and behavioral requests from user, and it also does not ask for pre-defined 
workflow template and acceptable termination states. The composed CWS can be viewed as an undividable working unit to 
ensure the consistence of states of its component services.  
The rest of this paper is organized as follow. Section 2 discusses related work and the process about how 
to use our approach is in section 3. Section 4 is the definition of specification. Section 5 introduces how 
to synthesize component services as a CWS. The detail of genetic algorithm is described in section 6. 
Section 7 presents and discusses the results of experiments. Finally section 8 is conclusion. 
2  Related Work 
The approaches with dynamic workflow mean that it does not ask for a pre-defined workflow before the 
approach works. On the other words, the workflow is created by the approach.  Aversano et al. [2] use 
genetic algorithm to combine services, and it is QoS-aware. However, the QoS types that are considered 
within this approach are degree of matchmaking between two services (a service’s output and 
subsequent service’s input). Silva et al. [3] proposed an architecture to support all of requirements that is 
required when a user composes a CWS, and most importantly a graph-based algorithm used for creating 
workflow. The algorithm requests that all material services are placed into a CLM (Causal Link Matrix) 
appropriately. Lécué and Léger [4] relied on an backward style algorithm to connect services. Fujii et al. 
[5], [6] exhibit a three layered architecture that helps user to compose web services as application 
depend on their semantic, and it also allows the requirement describe in nature language. Otherwise, 
Fujii et al. [6] analyzed the difference between methods that are able to build template (aka workflow) 
or not. Lajmi et al. [7] and Soufiene et al. [8] proposed exploiting CBR (Case-Base Reasoning) to 
address service combination problem.  
Bhiri et al. [9] come up with the concept of transaction pattern to help designer designing flexible and 
reliable CWS. Bhiri et al. [10] had a method to verify that whether a CWS satisfies the requested 
atomicity, and it will suggest how to revise if there has any fault within CWS. Li et al. [11] proposed the 
concept of safe connection point to inspect that whether the two services is able to view as a working 
unit. Portilla et al. [12] exploited contract, which is separated with business process, to assure that 
transaction property is achieved. Montagut et al. [13] had a iterative service assignment procedure to 
choose service according to the requested transaction property. In particular, Hadad et al. [14] proposed 
an algorithm which integrates QoS- and Transaction-aware service selection simultaneously. Table 1 
shows the comparison of the related work. 
 
Table 1. A comparison table for previous works. 
Author Approach Workflow Transaction-aware 
L. Aversano et al. [2] Genetic algorithm Produce by algorithm No 
表 Y04 
information from user to construct a CWS. Before executing the core genetic algorithm, it matches with 
every single service in the services repository to confirm whether a single service (composite or 
component service) is able to satisfy the user’s demand existing. If a service in the repository matched 
with the user’s demand is found, then the approach simply returns the result and saves a lot of times. 
However, if there is no any single service which meets the user’s requirements, the point of process 
walks into the evolution of GA. The user will receive a CWS when the GA is completely finished. 
Afterward he/she decides whether accepting the CWS or not. If the user does not accept the CWS, 
he/she can drop and exit the approach process or redefine a specification of requirements. The user 
probably relaxes the original requirements since the original is hard to solve, even there is no solution 
existing. Finally the approach puts CWS into service repository as a component service.   
4   Specification  
This section defines the assumptions, notations, and symbols used by proposed approach. Section 4.1 defines the tuple of a 
service, which are the expression formula of a service. Section 4.2 introduces three kinds of service and explains their usage. 
How to model a CWS, including its order logic and structures of component services, is presented in section 4.3. Next, 
section 4.4 states the recognized three transactional properties (TPs) and their possible combination.  
4.1   Tuple  
Any type of service is uniformly represented by six tuple. These tuple ID, I, O, P, E, B semantically 
depicts the features of a service from diverse aspects. ID is the name or identity of a service. IOPE 
describe the functionality of a service. Input and Pre-condition (I and P) are material that a service 
needed. Output and Effect (O and E) represent the product of service. B assigns the transactional 
behavior (properties) of a service.  
It is an assumption of our approach, an object described by Input and Output can be consumed only once, 
but a condition described by Pre-condition and Effect can be used infinitely. Different to other 
approaches, the process of service execution is stateful in our approach that means the product of a 
service can be viewed by not only immediate successor but also services following the producer.  
4.2   Service Types 
There are three types of service in our approach. Tuple with suffix “required” is the description of user’s requirements; tuple 
with suffix “provided” is the answer built by our approach according to user’s requirements; tuple with suffix “component” 
present an available component service in services repository, which is a storage storing all available resources. Below is the 
definition and usage of those three service types. 
 
 ID, I, O, P, E, Brequired: It is used for a user to describe the specification of service that he/she wanted. O, E is the 
product that the user expected. I, P is the material that the user is able to provide. B presents the transaction 
properties asked by the user.     
 ID, I, O, P, E, Bcomponent: It is an available resource service stored in services repository. Our approach exploits those 
resources to make a CWS for satisfying user requirement. The services contained in the services repository are real web 
services available on network or CWSs composed of component services. 
 ID, I, O, P, E, Bprovided: Theses tuples together represent an executable, realistic CWS, which is 
composed of component services and created by our approach for the corresponding user’s 
requirement. O, E is the product that the CWS create. I, P is the material that the user of CWS 
must enter. B is the transaction properties of this CWS.  
表 Y04 
 
Fig. 2. The synthesis for functionality 
5.2   Synthesis to Transactional Property 
A CWS has one or two of the four composite service transactional properties (CTPs), where CTPs was 
decided by its component services TPs [14]. The CTPs adopted by our approach and how to synthesize 
CTPs under different structure activities are defined in [14]. The considered CTPs are atomic ( ), 
non-atomic ( ), compensatable (c), and retriable (r). A CWS with atomic is able to rollback when it 
encounters fault during its execution, but a CWS with non-atomic is unable to do so. CWS with 
compensatable is able to recover its effect even if its execution is over. Retriable ensures a CWS will 
execute repeatedly until it is success.  A CWS may have two CTPs and all possible combination are, 
atomic ( ), non-atomic ( ), compensatable (c), compensatable-retriable (cr), atomic-retriable ( ). In 
[14], it define an automation to aid inferring the CTPs of a CWS under Sequence and Flow structures. 
But we further define the synthesis under While and If structures. The synthesis for While structure is 
identical with Sequence structure [11]. But synthesis for If structure is stricter, all of services under If 
must have same TPs, otherwise the If is with non-atomic. 
6   Genetic Algorithm 
This section exhausts the core of proposed approach, a genetic algorithm. Section 6.1 introduces GA and 
its process. Section 6.2 talks about the configuration of core GA including how to initiate first generation, 
constraints, and operators. Section 6.3 is formal definition to most crucial part in GA, the fitness 
functions.   
6.1   Introduction to Genetic Algorithm 
Genetic algorithm is originally proposed by John H. Holland in 1975 [2]. It is most popular approach in 
evolutionary computation, and usually it is used for problems having enormous searching space to look 
for an optimal or near-optimal solution. It applies the notion from biology principle to simulate the 
process of evolution in nature, namely, “survival of the fittest”, or from another point of view, “the 
natural selection”. Fig. 3 is a graphical illustration for genetic algorithm and detailed textual description 
can be found in [2].  
 
 
表 Y04 
according to the crossover probability. If the two parents do not copulate decided by the crossover 
probability, the parents directly stream to next step. To do the crossover, the crossover operator 
randomly determine a node (may be a basic or structure activity) at level two of the parent trees, and 
then exchange the nodes. Fig. 4 is an illustration for crossover operators. The reason about why the 
chosen node is at level two is to prevent that the depth of tree deeper than four. Each chromosome from 
the result of crossover stage must consider about whether is needed to do mutate or not depend on the 
mutation probability. Commonly the crossover probability is much higher than the mutation probability. 
To do the mutation, the mutation operator determines a node at level two of tree and changes it as 
another activity randomly. There are four kind of possible mutating pattern: (1) a service to another 
service; (2) a service become a structure with services; (3) a structure to another structure; and (4) a 
service or structure disappears. Fig. 5 is an illustration to mutation operators. 
 
 
 
Fig. 4. The crossover operators 
 
Fig. 5. The mutation operators 
6.3   Fitness Functions 
In general, fitness function is most crucial element in GA. it greatly affects the performance of GA, even 
it is success or not. The difference between traditional and our GA is that there exist three fitness 
functions for evaluating chromosome. Each fitness value from one of the fitness functions assesses a 
chromosome from different facets and represents different meaning. Due to the heterogeneity between 
these fitness values, they do not be normalized as sole one but have priority order for them. The priority 
order is F1 > F2 > F3 when the selection operator work. However, we will make an experiment, in which 
the fitness value is a summation of values from F1 and F2 and F3, to confirm that the assumption of 
having priority order is correct.   
 
Fitness Function 1 (F1): The value from this fitness function represents the similarity between the 
functionality of the solution ID, I, O, P, Eprovided and ID, I, O, P, Erequired. Furthermore, the function 
assesses two factors: (1) the coverage about O, Eprovided to O, Erequired, and (2) the usage about I, 
Pprovided to I, Prequired. Because a CWS is consisted of component services, they must be synthesized as 
single specification before the fitness function work. The manner to synthesis is already mentioned in 
section 5.1.  
 
 
where 
 is the set of required inputs from user, 
 is the number of elements of ,  
, 
表 Y04 
 
where 
 is Transactional Properties at level 2 of CWS tree,  
 
, and  
 
 
7   Experiments and Discussion 
In order to evaluate the viability of our approach, experiments are conducted by implementing the 
program code of our approach on a PC Core 2 2.39 GHz with 0.98 GB RAM, Windows XP, and Java SE 
6.0 platform. An primary API from one of Java API for XML Processing (JAXP) is Document Object 
Model (DOM) because it is able to bidirectional transforms XML document as in-memory tree structure 
(and vice versa). A set of services having 72 services is used in service repository, which totally has six 
kinds of functionalities listing in Table 3.  
 
Table 3. Functionalities list of service repository. 
 
Each kind of functionality has four TPs combination (p, c, pr, cr). Thus, the number of services in 
repository is 6 x 4 = 24. The experiments are driven by several requirements. One of the requirements 
and the parameters and its corresponding answer CWS are shown in the follows. The user’s requirement 
is {requirement1}, {O1, O3}, {O12}, {C1}, {C2}, {atomic}required. The amount of chromosomes is 500 
and the number of generations is 350. The crossover and mutation probability are 0.91 and 0.085 
respectively. Following is a corresponding solution CWS found in generation 46 for the requirement.  
 
 
 
<Process F1="0" F2="0" F3="0"> 
 <flow> 
   <invoke service="S1_pivot"/> 
  </flow> 
 <flow> 
   <sequence> 
    <invoke service="S2_pivot_retriable"/> 
    <invoke service="S4_pivot_retriable"/> 
    <invoke service="S6_pivot_retriable"/> 
   </sequence> 
  </flow> 
 S1  S2  S3  S4  S5  S6  
I  O1  O2, O3  O5  O4  O6  O9  
O  O2  O4  O6  O8, O9  O9, O10  O12  
P  C1  C1  C1  C1, C2  C1  C1  
E  C2       
表 Y04 
and handle the monotonous things by the proposed approach rather than by human designer. 
Consequently, the problem which is faced by our approach is a multi-dimension problem having a huge 
searching space. We exploit genetic algorithm as core of the approach to do non-linear, jumping search 
in the vast space. In proposed GA, it has three fitness functions to score chromosomes from diverse 
aspects, and each fitness function has a priority order. The experiments driven by user’s requirements 
indicate that the workability of proposed approach, also make sure the priority order and independence 
for fitness functions is vital. We also define the specification for represent service from different sides.  
 
Acknowledgments. This research is partially sponsored by National Science Council (Taiwan) under the grant 
NSC99-2220-E-030-004 and by Fu Jen Catholic University (Taiwan) under the grant FJU 409931044037. 
References 
1. Gaaloul, W., Bhiri, S., Rouached, M.: Event-Based Design and Runtime Verification of Composite Service Transactional Behavior. 
IEEE Transactions on Services Computing 3, 32-45 (2010) 
2. Aversano, L., Penta, M.D., Taneja, K.: A Genetic Programming Approach to Support the Design of Service Compositions. International 
Journal of Computer Systems Science & Engineering 21, 247-254 (2006) 
3. Silva, E., Ferreira Pires, L., Sinderen van, M.: Supporting Dynamic Service Composition at Runtime Based on End-User Requirements. 
In: Dustdar, S., Hauswirth, M., Hierro, J.J., Soriano, J., Urmetzer, F., Möller, K., Rivera, I. (eds.) 1st International Workshop on 
User-Generated Services, UGS 2009, located at the 7th International Conference on Service Oriented Computing, ICSOC 2009. CEUR 
Workshop Proceedings, Stockholm, Sweden (2009) 
4. Lécué, F., Léger A.: A Formal Model for Web Service Composition. In: Proceeding of the 2006 conference on Leading the Web in 
Concurrent Engineering: Next Generation Concurrent Engineering, pp. 37-46. IOS Press (2006) 
5. Fujii, K., Suda, T.: Semantics-Based Context-Aware Dynamic Service Composition. ACM Transactions on Autonomous and Adaptive 
Systems 4, 1-31 (2009) 
6. Fujii, K., Suda, T.: Semantics-Based Dynamic Web Service Composition. International Journal of Cooperative Information Systems 293 
- 324 (2006) 
7. Lajmi, S., Ghedira, C., Ghedira, K.: CBR Method for Web Service Composition. In: Damiani, E., Yetongnon, K., Chbeir, R., Dipanda, 
A. (eds.) Advanced Internet Based Systems and Applications, vol. 4879, pp. 314-326. Springer Berlin / Heidelberg (2009) 
8. Soufiene, L., Chirine, G., Khaled, V., Djamal, B.: WeSCo_CBR: How to Compose Web Services via Case Based Reasoning. In: 
Proceedings of IEEE International Conference on e-Business Engineering (ICEBE'06), pp. 618-622 (2006) 
9. Bhiri, S., Perrin, O., Godart, C.: Extending Workflow Patterns with Transactional Dependencies to Define Reliable Composite Web 
Services. In: Proceedings of the Advanced International Conference on Telecommunications and International Conference on Internet 
and Web Applications and Services, pp. 145. IEEE Computer Society (2006) 
10. Bhiri, S., Perrin, O., Godart, C.: Ensuring Required Failure Atomicity of Composite Web Services. In: Proceedings of the 14th 
international conference on World Wide Web, pp. 138-147. ACM, Chiba, Japan (2005) 
11. Li, L., Chengfei, L., Junhu, W.: Deriving Transactional Properties of CompositeWeb Services. In: Proceedings of the Conference 
Deriving Transactional Properties of CompositeWeb Services, pp. 631-638. (2007) 
12. Portilla, A., Vargas-Solar, G., Collet, C., Zechinelli-Martini, J.-L., García-Bañuelos, L.: Contract Based Behavior Model for Services 
Coordination. In: Filipe, J., Cordeiro, J. (eds.) Web Information Systems and Technologies, vol. 8, pp. 109-123. Springer Berlin 
Heidelberg (2008) 
13. Montagut, F., Molva, R., Golega, S.T.: Automating the Composition of Transactional Web Services. International Journal of Web 
Services Research (IJWSR) 5(1), pp. 24-41 (2008) 
14. Hadad E.J., Manouvrier, M., Rukoz, M.: TQoS: Transactional and QoS-Aware Selection Algorithm for Automatic Web Service 
Composition. IEEE Transactions on Services Computing 3, 73-85 (2010 ) 
15. Alves, A.: OASIS Web Services Business Process Execution Language (WSBPEL) v2.0. OASIS Standard (2007) 
16. Menascé, D.A., Casalicchio, E., Dubey, V.: A Heuristic Approach to Optimal Service Selection in Service Oriented Architectures. In: 
Proceedings of the 7th international workshop on Software and performance, pp. 13-24. ACM, Princeton, NJ, USA (2008) 
17.Menascé, D.A., Casalicchio, E., Dubey, V.: On Optimal Service Selection in Service Oriented Architectures. Performance Evaluation 67, 
pp. 659-675 (2010) 
18. Blake, M.B., Cummings, D.J.: Workflow Composition of Service Level Agreements. In: Proceedings of the IEEE International 
Conference on Services Computing, pp. 138-145.  (2007) 
 
 
 
表 Y04 
 
Fig.1 Traditional home automation 
 
Fig.2 是結合 Social emotional 的例子，這種
控制與以前的控制意義是有非常大的不同，家電控
制要更貼近人們，必需更貼近人們的習慣，或是融
入人們的生活習慣之中，讓控制在無意識下完成，
這就是我們所要追求的目標，這個例子我們是使用
PC 或是 smart phone 上使用 plurk 來控制家電，中
控台(6410L) home system center platform，會負責
以 service 的方式偵測我們在其他位置所發出的需
求，如：點播音樂、人在外面、早安與晚安，home 
system center platform 便會偵測到，此時就會依照
在 plurk 上的需求進行家電控制行為。 
 
Fig.2 Social emotional home automation 
 
Social network近年的發展已經與已前已經大
不相同，以前的 Social network 並不是貼近於每個
人，但是隨著 Facebook、Plurk 與 Twitter 的流行，
現在的 Social network 己經與每個人的生活緊緊結
合在一起，現在人們會把自身的行為，位置告訴
Social network 上，這已經證明了現在 Social 
network 已經是與我們的生活是緊密的，我們要利
用這份關係用於家電控制上，讓家電控制與人們的
生活緊密的結合在一起。 
隨著近年來 Android 系統的出現，在手機系
統開發上已經與以前大不相同，Android 系統的應
用程式開發是非常簡單，而以入門相當容易的，所
以這就是我們選擇 Android 上開發系統的原因，智
慧性手機用來控制系統是一件非常方便的事情，例
如我們是在別墅的四樓，但是我們要控制一樓的電
氣，這時候我們可以透過四樓的 Arduino 傳達訊息
給 中控台中 控台 (6410L) home system center 
platform ，再傳達給一樓的 Arduino 做操作，當然
該裝置如果是在我們的面前，我們理所當然可以直
接操作，而且不限制裝置的種類，不需要 TV 一個
控制器，燈光也一個控制器，我只要一隻智慧型手
機就足夠了。 
 
Fig.3 Mobile home automation 
 
 
三、系統架構 
我們系統架構主要分為二個部分，(1) CHSCP 
(2)Arduino，CHSCP 是一個很重要的家庭中控平
台，他負責許多重要的功能，他必需記錄使用者資
訊與家電的資訊，而且還有它還負責一個很重要的
功能，就是將一個新的家電加入家庭自動化控制系
統裡， Arduino 部分只需要負責接收訊號，將訊號
轉交給電氣用品，達到控制家電的目地。 
我 們 將 系 統 架 構 ， 分 為 四 層 (Fig. 4) ，
Hardware 、 User data 、 Framework 、 message ，
Hardware 是負責各種 sensor 在 CHSCP 上的連
接，我們使用的 sensor 有 WIFI：負責使 CHSCP
與 Inter 連接，Bluetooth、Zigbee 與 RS232 則負責
近端網路的資料傳送，其中 Bluetooth 與 Zigbee 主
要是負責連接 Arduino 的 sensor，在 User data 層
裡，主要是存放著二種資料，一種是使用者的資
料，使用者設定檔與使用設備的資料，這些是必需
被記錄下來的，另一種是 sensor 的資料，sensor 加
入有家庭自動化控制系統時，必需先丟出 sensor
的詳細資料，這份資料必需要被儲存的，接下來
sensor 目前的狀態也是被必需保留下來。舉個例
子，電視機關掉之前是在 35 頻道，那再度開啟電
視機時，電視機是必需停留在 35 頻道，而不是其
他頻道。Framework 是 application 的 library，這個
Framework 必需要對新加入的設備有著對應的函
式。Framework 也扮演著將 User data 層的資料傳
達到 Application 的角色，Application 層主要有三
個重要的模塊，分別是 state message 、 user 
message、sensor message。Application 層是負責對
使用者顯示家中家電所有的電氣狀態，讓使用者知
道系統整個狀態，這是一件很重要的事情，state 
message 是讓使用者知道系統目前設定值，user 
message 是將使用者設定值設定於機器上，sensor 
message 是告知使用者目前有幾個 sensor 與各
sensor 的狀態是如何，當然這個 application 適用於
表 Y04 
 
 
 
Fig. 7 Twitter 、Arduino and Android 
 
 
Fig. 8 Twitter and sensor 
 
各個家電控制除了簡單的裝置以外，其他的裝
置因該要有對應的獨特 UI 與特別的控制方法，該
裝置應用程式只需直接安裝即可應用，分辦出裝置
是屬於何種裝置，則是使用擴增實境(AR)來分辦出
該裝置種類、UI 與操作方法，如 Fig. 9，手機相機
放置於 AR code 上，即系統可分辦出此裝置所對應
的 UI，進而一步可以得知此裝置的操作方法，這
與萬用遙控器是不同的，萬用搖控器是使用單一的
操作介面操作所有的裝置，但是在這邊的意是不同
的裝置因該對應出不同的 UI 與操作方式。 
 
 
Fig. 9 AR corresponding control 
 
五、相關研究 
這篇 [7] ，他們使 用一個廉 價的 Home 
gateway，來做為家電自動化的中心單位，該 Home 
gateway是將網頁上的各種控制用 Zigbee傳輸於各
個設備中，所以 Home gateway 上是使用 wifi 與
zigbee 這二個模組功能，來控制各種家電設備。 
近年來社群網站越來越盛行，使用社群網站
來與家電控制結合，這是一個相當方便的控制，因
為現在社群網站與以前已經大不相同了，大部分的
社群網站已經與人們形影不離，在[8]把家電控制
變成一個社群專頁，這是有許多優點的，例如：這
是一個學校的共用空間，那麼控制的權限因該要在
於老師與管理人員身上，而普通的學生與其他人，
可以方便的得知該空間是否正在使用，用這種方式
可以完美把社群網站與家電控制的需求表現出來。 
家電控制的控制主要分為二種類型[4]，分別
是 Social Network Overlay 與 App-specific socio 
pervasive Network，Social Network Overlay 是一種
以社群網路做為開發基準點出發的方向，利用社群
網路做為安置各種感測器的手段，App-specific 
socio pervasive Network 則是強調用感測器形成一
個無所不在的感測網路，使用此方式來得知此環境
的各個元素，方便查詢環境的狀態，我們在此會使
用幾個家電作為感測的對象，如電視機，遙控電視
機時應該除了基本的操作功能，必需要還有記錄目
前頻道，通過多樣性的感測器，來得到這些資訊。 
[9]使用了 Arduino 來控制家電，一般的
gateway 只會負責轉達控制的訊號，並不會直接控
制電氣產品，因為那是一種高成本的選擇，所以必
需使用單晶片來代替 gateway 控制，這才是正確的
做法，Arduino 本身也可以掛上許多模組，如 wifi
模組、Ethernet 模組、Bluetooth 模組，簡易的控制
方式，多樣性的模組，是我們主要選擇它的理由。
Amarino 是讓 Android 與 Arduino 方便結合的
tools，他們釋出了許多 API，使得 Android 與
Arduino 可以用較為方便的函式進行，而且提供了
許多範例可供使用，其中提供二個重要的範例，使
用 Android 控制三色 LED 燈：MultiColorLamp 與
手 機 可 觀 看 Arduino 上 的 sensor 圖 表 ：
SensorGraph，介由這二個範例可將成功的將手機
的多樣式的應用擴充出來，當然，他們也有是提供
了一個可以除錯 Bluetooth 訊號的程式：Amarino，
可以得知問題是出在哪個方面，這對 除錯是有一
定程度的幫助。 
Amarion tools 在[10]有著盡細的介紹，他包含
了許多應用介紹，他們也展示一種小型的
Arduino：LilyPad，LilyPad 可以縫於衣物上，再利
用金屬紡織線： Conductive Thread，將 LilyPad 與
各個 sensor 連接在一起，它們將 Lilypad 應用於衣
服上，有二個主要的項目，一是可以將衣物上面使
用 LED 燈，該 LED 燈會將 e-mail 的狀態表達出
來，第二個是將 Lilypad 縫在手臂上，用來感測手
 1 
國科會補助專題研究計畫項下出席國際學術會議心得報告  
                                   日期： 100  年 7 月 21 日 
                                 
一、參加會議經過 
The 2011 International Conference on Machine Learning and Cybernetics (ICMLC 2011)是
機器學習領域重要的國際研討會，今年度的會議於 2010年 7月 10至 13日於中國廣西壯族
自治區桂林市喜來登酒店舉行，會中有來自多國的與會學者共同參與交流，發表模糊理論、
類神經網路、智慧型代理人、商業智慧、資料探勘、資訊檢索等各研究領域之論文。 
在七月十二日大會舉辦了一場Keynote Speech，是由Shyi-Ming Chen教授主講的「Fuzzy 
Forecasting Based on High-Order Fuzzy Time Series and Genetic Algorithms」，以及一場 Panel 
Discussion，由 Daniel Yeung、Tin Kam Ho、Hong Yan、Witold Pedrycz 與 Vladimír Mařík
等學者參與討論。其中 Panel Discussion的探討主題是「The Genesis of an Innovative Research 
Topic」，主要內容是與參與人員分享並討論對於一位研究者，如何挑選合適的研究題目，
以及如何建立創新的研究方向，會中各學者的建議讓本人獲益良多，也得到許多研究上的
啟發，此外，本人也於討論終結識多位同領域與不同領域的專家學者，對於未來的互相合
作有很大的機會。七月十二日晚間大會舉辦一個歡迎晚宴，今年適逢 ICMLC 會議邁入十
週年，大會舉辦了較大的慶祝儀式，同時在晚宴中也頒發了本年度的「Lotfi Zadeh Best Paper 
Award」。 
計畫編號 
NSC99-2220-E-030-004 
計畫名稱 整合 OSGi與多代理人架構之服務導向睡眠照護中介平台之設計(II) 
出國人員
姓名 
范姜永益 
服務機構
及職稱 
輔仁大學資訊工程學系 
助理教授 
會議時間 
100年 7月 10日至 
100年 7月 13日 
會議地點 
中國廣西壯族自治區桂林市 
會議名稱 
(中文) 2011年國際機器學習與控制研討會 
(英文) International Conference on Machine Learning and Cybernetics 
(ICMLC 2011) 
發表論文
題目 
(中文) 無 
(英文)  An Automated Workflow Composition to Semantic Web Services 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/12/17
國科會補助計畫
計畫名稱: 子計畫三:整合OSGi與多代理人架構之服務導向睡眠照護中介平台之設計
計畫主持人: 范姜永益
計畫編號: 99-2220-E-030-004- 學門領域: 自由軟體暨嵌入式系統
無研發成果推廣資料
性需求（例如價
格、效率等），透
過此機制，可協助
使用者在實際商
務應用中，組合到
符合使用者需求
之服務元件。 
研討會論文 2 0 100%  
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
1. 舉辦 2011 台灣軟體工程暨物件導向技術與應用研討會。 
2. 帶領多位學生參加全性軟體開發競賽，其中 2組分別進入全國大專院校網路
與通訊應用大賽以及 App Atar 高手爭霸戰的決賽。 
3. 協助兩家育成中心的廠商進行軟體技術研發。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
