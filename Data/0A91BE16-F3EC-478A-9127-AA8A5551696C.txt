半色調數位影像之可見浮水印技術 
 
Visible Watermarking for Digital Halftone Images 
 
計畫主持人：高雄應用科技大學    潘正祥教授(電子系主任) 
共同主持人：高雄應用科技大學    謝欽旭助理教授(電子系)  
正修科技大學        朱淑娟助理教授(資訊管理系) 
國科會編號: NSC 96-2221-E-151-015 
 
 
摘要： 
本計劃的主要針對半色調影像可見浮水印這個方向，做深入的研究並且實現
了ㄧ半色調數位影像之可見浮水印技術，主要用數位半色調過程中嵌入可見浮水
印及直接在數位式半色調影像上嵌入可見浮水印兩種不同之方式，增加浮水印之
強健度及提高浮水印嵌入之速度。 
一般來說，可見浮水印相比不可見浮水印更容易引起人們的注意，從而更容
易遭受有意或無意的攻擊。因此，強健性是可見浮水印最重要的性能評價指標。
由於本計畫所提出的可見浮水印技術是建立在數位半色調過程中的，並且最終的
可見浮水印是顯示在半色調影像上，因此，攻擊常規的連續色調影像可見浮水印
的方法大多不再適用。 
 
關鍵詞：半色調影像, 數位浮水印, 可見水印, 半色調浮水印 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(四) 研究方法 
本計畫主要完成以下兩種半色調影像可見浮水印技術: 
第一種：在數位半色調過程中嵌入可見浮水印之技術 
 
現今所使用的數位半色調技術主要分為點陣調色法和誤差擴散法兩類
[9-10]。本計畫所使用的可見浮水印技術分別植基於這兩類數位半色調的架構之
上。 
點陣調色法： 
我們主要在點陣調色法半色調過程中嵌入可見浮水印，並且根據輸入連續色
調影像的內容和浮水印影像產生自動調整、修正之可變適應性門檻值矩陣，並利
用修改後的門檻值矩陣對該連續色調影像的區塊進行遮罩處理。 
運算步驟如下： 
第一步：影像分塊。 
將輸入連續色調影像分別切割成互不重合的兩組像素區塊，每區塊的大小與
門檻值矩陣 S 的大小相同，均為 m×n。 
第二步：估計影像區塊平均亮度。 
在嵌入浮水印之前，檢測連續色調影像 I 的某一個區塊 ( )。根據用
公式(1)估計該區塊的平均亮度值。 
ji kj ≤≤1
1 1
( , )
m n
j
x y
j
i x y
AI
m n
= == ×
∑∑
                              (1) 
其中1 ,x y n≤ ≤ ，且平均亮度值AIj必定落在[0,255]之範圍內。 
第三步：調整門檻值矩陣。 
檢測連續色調影像的區塊及其對應的浮水印影像區塊。通常我們希望浮水印
資訊變得較暗，這樣才能顯著地與其鄰近區域的載體影像區分開來。因此較多的
連續色調影像像素半色調為黑色。反之，在一個較暗的區塊中嵌入可見浮水印，
我們希望浮水印資訊變得較亮，因此較多的連續色調影像像素半色調為白色。 
第四步：點陣調色半色調處理。 
通過第三步可以得到了修改後的門檻值矩陣 S ′。浮水印嵌入就轉換為使用
對連續色調影像按照傳統的方法進行半色調處理。 S ′
第五步：含水印的區塊重組。 
對所有影像區塊，重複第二步至第四步的操作即可得到對應的含水印的區
塊。重組這些含水印的區塊即可得到含可見浮水印的半色調影像。 
 
誤差擴散法： 
藉由修改傳統誤差擴散法之半色調處理過程，本計畫使用了三種可將可見浮
水印嵌入的方法。 
 
方法一： 
圖 1 為方法一在誤差擴散數位過網過程中嵌入可見浮水印的方塊圖。虛線框
以內為浮水印嵌入模組，w(i,j)和 k 分別為浮水印信號和嵌入強度。 為更新後
之 。其中 k 為常數。 
,i ju′
,i ju
圖 3 結合浮水印嵌入和邊緣增強誤差擴散法之方塊圖 
 
第一種：直接在數位式半色調影像上嵌入可見浮水印的技術 
 
直接在半色調影像上嵌入可見浮水印的技術顯得較為複雜，演算法步驟如
下： 
Step 1：將原始影像 I 和浮水印 W 各自分成 n 個 4×4 的區塊。 
Step 2：將 I 和 W 分別進行人眼視覺系統濾波。 
Step 3：如公式(2)將 和ji

jw 按照所給定之比重加權混合，其中　和　為加權
係數。 
 j jt i wjα β= +                           (2) 
Step 4：一個 4×4 的二值區塊共有 216個不同的模式 。我們將這些
模式轉換成一個二值序列，將可得到 2
161 2 2
, ,...c c c
16個在[0, 216-1]範圍內的整數，稱為碼字的
索引p。按公式(3)將 與f做褶積運算，其中m=1,2,…,2161 2 2, ,...c c c
16。 
m mc c f= ∗                            (3) 
Step 5：在碼簿C 中搜索與 jt 最相似的碼字，用歐幾里得距離作為相似度判
別依據，如公式(4)所示。與 jt 距離最小的碼字選作為與 jt 最相似的碼字。 
                      (4) 
8 8
2
1 1
[ ( , ) ( , )]j m
x y
d t x y c x
= =
= −∑∑   y
Step 6：將 Step 5 得到的相似碼字在 Step 4 中分別回溯其原始的 4×4 的二值
區塊，並將這些二值區塊作為含浮水印的區塊鑲嵌在原始影像原來的位置上，得
到新的影像即為含浮水印的影像。 
 
(五) 結果與討論 
本計畫所提出之半色調影像可見浮水印技術，在浮水印強健性方面，由於在
加權合成和碼字替換過程是一個資訊有損的過程，而且損失的資訊無法用常規的
方法預估，因此攻擊者無法用攻擊連續色調影像可見浮水印的方法對本方法嵌入
的可見浮水印進行攻擊。 
 
在處理速度方面，由於本方法需要進行碼字搜索，因此處理速度較慢。但是
鑒於現今快速碼字搜索的演算法很多，因此本計畫進一步結合快速碼字搜索演算
法提高浮水印嵌入的處理速度。 
 
在現有文獻中僅有較少類似的研究成果[11-12]。因此本計畫的研究成果具有
相當的前瞻性，特別是具有相當的實用性，對於未來將本項技術融合於不同的硬
體輸出設備提供了技術儲備。 
 
(六) 計畫成果自評 
本計劃實現了ㄧ半色調數位影像之可見浮水印技術，並且使用數位半色調過
程中嵌入可見浮水印及直接在數位式半色調影像上嵌入可見浮水印兩種不同之
IEICE TRANS. INF. & SYST., VOL.E90–D, NO.7 JULY 2007
1113
LETTER
Content Adaptive Visible Watermarking during Ordered Dithering
Hao LUO†a), Nonmember, Jeng-Shyang PAN††, Member, and Zhe-Ming LU†, Nonmember
SUMMARY This letter presents an improved visible watermarking
scheme for halftone images. It incorporates watermark embedding into
ordered dither halftoning by threshold modulation. The input images in-
clude a continuous-tone host image (e.g. an 8-bit gray level image) and a
binary watermark image, and the output is a halftone image with a visible
watermark. Our method is content adaptive because it takes local intensity
information of the host image into account. Experimental results demon-
strate eﬀectiveness of the proposed technique. It can be used in practical
applications for halftone images, such as commercial advertisement, con-
tent annotation, copyright announcement, etc.
key words: content adaptive, visible watermarking, ordered dithering,
halftone image
1. Introduction
Halftone images are the products of digital halftoning. Dig-
ital halftoning is a process to transform continuous-tone im-
ages into two-tone images [1], e.g. from 8-bit gray level im-
ages to 1-bit binary images. When viewed from a distance,
halftone images can resemble the host versions by the low-
pass filtering of the human eyes. With the wide proliferation
of halftone images in books, magazines, printer outputs and
fax documents, it is desirable to embed data in this kind of
images for copyright protection, content authentication and
tamper detection. This has received wide interest among re-
searchers using digital watermarking techniques.
Almost all of the existing halftone image watermark-
ing methods have focused on invisibly embedding [2], [3].
However, as a technique to embed a perceivable pattern in
a host image, visible watermarking for halftone images also
has many applications such as commercial advertisement,
content annotation, copyright announcement, and so on.
Popular halftoning techniques can be classified into
three categories: ordered dithering, error diﬀusion, and iter-
ative methods. Among them, ordered dithering is extremely
simple and can generate halftone images with moderate vi-
sual quality. This letter proposes a visible watermarking
scheme with cooperating ordered dithering. Its principle is
to modify the halftone screen adaptively according to the
binary watermark and content of the host gray level image.
Our goal is to make the watermark visible, and meanwhile
Manuscript received October 6, 2006.
†The authors are with the Department of Automatic Test and
Control, Harbin Institute of Technology, Harbin, China.
††The author is with the the Department of Electronic Engineer-
ing, National Kaohsiung University of Applied Sciences, Kaohsi-
ung, Taiwan.
a) E-mail: luohao723@126.com
DOI: 10.1093/ietisy/e90–d.7.1113
details of the host image must not be seriously obscured.
2. Previous Work
In ordered dither halftoning, the input host image is com-
pared with a periodic threshold matrix, which is also called
halftone screen. For example, a dispersed-dot dithering
halftone screen is shown in Fig. 1. Suppose S denotes the
halftone screen. First we partition the host image into a set
of nonoverlapping blocks with each block is of the same size
as S . Then we compare pixel values in a block i with S as
h(x, y) =
{
255 if i(x, y) > S (x, y)
0 if i(x, y) ≤ S (x, y) (1)
where (x, y) is the pixel’s coordinates, h is the output block,
and “255” and “0” denote a white pixel and a black pixel
respectively.
Wang et al. [4] developed a visible watermarking
method with cooperating ordered dithering. Its key idea is
to modify the halftone screen according to the watermark
information. In particular, in a halftone screen, some thresh-
old values within a specified area and a specified range are
changed to a constant value, i.e. a new threshold value. Then
the watermark pattern will visually appear in the specified
area of the output image.
Wang’s method can produce a halftone image with a
visible watermark. Nevertheless, it has a main disadvantage
of not taking in account content of the input host image.
To modify the halftone screen, it is insuﬃcient only in ref-
erence of the watermark. Suppose the meaningful pattern
Fig. 1 A dispersed-dot dithering halftone screen.
Copyright c© 2007 The Institute of Electronics, Information and Communication Engineers
LETTER
1115
Fig. 3 Experimental results, (a) the input host image, (b) the watermark image, (c) the watermarked
halftone image obtained by Wang’s method, (d) the watermarked image halftone obtained by our
method.
inal host image. The watermark image is of the same size
as the host image. Both of them are shown in Fig. 3 (a) and
Fig. 3 (b). We apply the screen shown in Fig. 1 to visibly
embed two sets of letters “IEICE” in the host image. The
watermarked halftone images obtained by Wang’s method
and our scheme are shown in Fig. 3 (c) and Fig. 3 (d) respec-
tively. Parameters are set as T = 20, R1 = 76.5, R2 = 153.
From the experimental results shown in Fig. 3, we can
easily find that in Wang’s method, the “IEICE” falling into
the dark area cannot be clearly distinguished from the back-
ground. While in our method, both “IEICE” are well recog-
nized. In a word, the watermarked halftone images obtained
by our scheme contain recognizable but unobtrusive water-
mark information, and the details of the host image still well
maintained.
5. Conclusions
An improved visible watermarking scheme with cooperat-
ing ordered dither halftoning is proposed. It is content adap-
tive. In other words, not only the watermark pattern, but
also the host continuous-tone image content is taken into
account to modify the halftone screen. The watermarked
halftone image can be obtained by halftoning the host im-
age using the modified screen. Our scheme is simple and
eﬀective. It is a practical technique for it could be integrated
into printers. As outputs of the printing process, halftone
images with visible watermarks can be produced for diﬀer-
ent applications.



Copyright Protection and Annotation with Reversible Data 
Hiding and Adaptive Visible Watermarking 
Hsiang-Cheh HuangA, Tai-Wan ChenB, Jeng-Shyang PanB, Jiun-Huei HoC
ANational University of Kaohsiung, Taiwan, R.O.C. 
BNational Kaohsiung University of Applied Sciences, Taiwan, R.O.C. 
CCheng Shiu University, Taiwan, R.O.C. 
Abstract
We propose a copyright annotation scheme with both the visible 
watermarking and reversible data hiding algorithms in this 
paper. It is commonly encountered that visible watermarks are 
embedded on purpose in one corner of an image or video clips 
to annotate the copyright owner of such a medium. It is usually 
asked by the buyer to remove the visible watermark to return to 
its original form who obtains such an image or video. In this 
paper, we propose a method to combine both the visible 
watermarking algorithm for copyright annotation, and 
reversible data hiding for recovering the original. Simulation 
results demonstrate the effectiveness and feasibility of our 
algorithm.
1. Introduction
In recent years, digital multimedia such as images, audio and 
video clips are easily acquired from the Internet in our daily life. 
Consequently, besides the efficient compression and effective 
transmission of such media, the ownership, copyright protection, 
and copyright annotation of these original contents, relating to 
the digital rights management (DRM) field, has become one 
important issue in both academic research and industrial 
application [1][2]. Digital watermarking is one of the effective 
methods to conquer this problem. 
Digital watermarking can be roughly classified into two 
categories, one is visible watermarking, and the other is invisible 
watermarking. For visible watermarking, the owner of the media, 
an image for example, often puts a mark into one of the corners 
in the original. The mark is easily seen by the viewers, and it’s 
the main purpose of ownership annotation for visible 
watermarking. This is commonly seen in TV programs with the 
logo of the TV station in the upper-left or upper-right corner of 
the screen today. Due to its simplicity, only a few portion of 
watermarking researches focus on visible watermarking [3][4].
On the other hand, watermarking researches mainly rely on the 
invisible category for copyright protection. Among the existing 
algorithms in literature, one of the recently developed is called 
reversible data hiding [5][6][7][8]. The main characteristic of 
reversible data hiding is that once the embedded watermark is 
extracted or removed, the original can be exactly recovered from 
its watermarked version.
We can imagine a scenario like this: One watermarked image, 
containing both the visible and invisible watermarks, is obtained 
by a buyer. The buyer may want to remove the visible watermark 
due to the fact that it degrades the visual quality. After removing 
the visible watermark, he or she may also want to get the original, 
which is exactly the same as the original owned by the previous 
buyer. Under this scenario, in this paper, we combine both the 
adaptive visible watermarking and reversible data hiding 
altogether, and make use of the advantages between the two. 
This paper is organized as follows. In Section 2 we discuss both 
the adaptive visible watermarking and reversible data hiding 
algorithms. In Section 3 we then describe our algorithm by 
combining the two schemes, and show the applicability of the 
proposed algorithm. Simulation results are demonstrated in 
Section 4. Finally, we give the conclusion of this paper in 
Section 5. 
2. The watermark embedding and extraction 
algorithms
We employ two schemes in our algorithm, that is, copyright 
annotation with visible watermarking, and data recovery with 
reversible data hiding. They are described in the following 
sections.
2.1 Copyright annotation with adaptive visible 
watermarking
Visible watermarking is one of the commonly used schemes for 
copyright protection and annotation. However, it is generally 
criticized that the embedded watermark will greatly degrade or 
destroy the perceptual quality of its original counterpart. In this 
paper, we cope with this viewpoint by employing adaptive 
visible watermarking for mark embedding, and by reversible data 
hiding to remove the embedded watermark and recover the 
original content. 
Visible watermarking is done in the spatial domain. We modify 
the selected pixels, the upper-left corner for example, in the 
original image with Eq. (1): 
 > @ 25511  c i,ji,ji,ji,j WC-ĮCĮC (1)
where the subscript  i,j   means the coordinate of the pixel, ,ijC
ijC c  denote the pixel of original image and the pixel after 
watermark embedding,  is the value of watermark bit, and 
ijW D
means the embedding strength of the watermark, > @10,Į .
With Eq. (1), we can adaptively embed the watermark bits into 
the original pixels by considering the characteristics of the 
original image. To alleviate the impact of visible watermark that 
degrades the visual quality of the watermarked image, we put the 
visible watermark into the upper-left corner of the original image 
0-7695-2882-1/07 $25.00 ©2007 IEEE
Authorized licensed use limited to: National Kaohsiung University of Applied Sciences. Downloaded on November 18, 2008 at 22:52 from IEEE Xplore.  Restrictions apply.
Step 2. Obtaining selected range with secret keys. The 
luminance values between the max and min points are 
compared. 
Step 3. Extracting the watermark relating to the original.
Every pixel in the watermarked image is scanned and 
examined sequentially to extract the watermark bits. 
¾ For the case that the luminance value of the max point is 
smaller than that of the min point, when the luminance 
of one pixel is exactly larger than that of the “max” 
points by 1, output bit ‘1’ as extracted watermark bit, 
and decrease its luminance value by 1 simultaneously. 
On the contrary, when the luminance of one pixel is 
exactly smaller than that of the “max” points by 1, 
output bit ‘0’ as extracted watermark bit, and increase its 
luminance value by 1. 
¾ In contrast, if the luminance value of the max point is 
smaller than that of the min point, the reverse process of 
the previous item is performed. 
Step 4. Re-generating the original data from watermark. The 
extracted watermark bits in Step 3 are gathered, and every 
consecutive 8-bit is transformed into decimal form. The 
extracted watermark can be changed to the original content 
in the upper-left corner. In addition, the rest of the image 
other than the visibly watermarked region can be transformed 
back to its original with Step 3.
Step 5. Obtaining the original image. By putting the data from 
Step 4 into the upper-left corner, the original content is 
obtained again.
3. Proposed algorithm 
3.1 Combination of reversible data hiding and 
visible watermarking 
We have described the visible watermarking scheme in Sec. 2.1,
and reversible data hiding in Sec. 2.2 and Sec. 2.3, respectively. 
We propose an algorithm by combining the adaptive visible 
watermarking and reversible data hiding. The goal of the 
proposed algorithm is that once the image is sold to a buyer, we 
need to remove the embedded visible watermark, and to perfectly 
recover the watermarked image into its original. 
In visible watermarking, we choose a logo for representing the 
current ownership of the original image, such as the logo of a 
company. We choose to adaptively embed the visible watermark 
into the upper-left corner of the original image with Eq. (1), 
where 64 or 128 are tested. The embedding 
strength
 dd k, ki, j1
D  is set to 0.8. Note that the embedding of visible 
watermark is a non-reversible process. For recovering the 
original image, we need to employ reversible data hiding in 
advance. Before embedding the visible watermark, the luminance 
values in the original image is firstly embedded into the rest of 
the region, other than the portion containing the visible 
watermark, with reversible data hiding algorithm. With the 
inference in Sec. 2.2, the PSNR value after data hiding should be 
larger than 48.13 dB, which is supposed to be imperceptible to 
the viewer. 
With the scenario in Sec. 1, after the watermarked image is sold 
to a buyer, the visible watermark should be erased, and the 
original should be recovered. Therefore, we erase the portion 
containing the visible watermark, and then employ the method 
described in Sec. 2.3 to recover the luminance values that are 
supposed to occupy the visible watermark region. 
3.2 Improvements in combined algorithm 
It is sometimes encountered that for specific images, there is no 
“zero point” in the histogram, only the “min point” exists, which 
leads to the reduction in the hidden capacity. The main reason is 
that the positions having the luminance value of the min point 
should be recorded as a key for data recovery. These keys for 
data recovery, together with keys for recording the luminance of 
min and max points, will become the overhead in data hiding, 
which leads to the reduction in capacity. To alleviate this 
problem, we divide the original image into smaller blocks, and 
the combined algorithm in Sec. 3.1 is performed on every block. 
By doing so, the data capacity can be increased; however, 
overhead is also induced. Numerical results in data capacity and 
overhead will be depicted in Sec. 4.1.
4. Experimental results 
4.1 Improvements in embedding capacity 
We choose three test image, Lena, airplane, and baboon,
with the picture sizes of . For increasing the data 
embedding capacity, we divide the image into blocks with sizes 
512512u
22u , 44u , 88u , 1616u , , , 3232u 6464u 128128u ,
256256u , and 512512u . The numerical results of hidden 
capacity and overhead (represented by bits) and the resulting 
image quality (represented by PSNR) are demonstrated in Table 
I for Lena image, and Figure 3 for the capacities in three test 
images. 
Figure 3. Comparisons of hidden capacity under 
different block sizes among three test images. 
With the simulation data depicted, we can easily see that the 
capacity increases dramatically with the reduction in block size. 
When the block size becomes smaller,  for example, only a 
few kinds of luminance values (at most 16 here) can exist out of 
the total of 256 values, and zero point must be easily found. 
That’s the main reason of the increase in capacity. The PSNR 
tends to increase also, with the price of increase of key length in 
secret keys. However, one block needs to be associated with a 
16-bit secret key for presenting the “max” and “min” points, and 
it is regarded as an overhead for transmission. We can observe  
44u
Authorized licensed use limited to: National Kaohsiung University of Applied Sciences. Downloaded on November 18, 2008 at 22:52 from IEEE Xplore.  Restrictions apply.
A Novel Optimization Approach: Bacterial-GA Foraging 
Tai-Chen Chen, Pei-Wei Tsai, Shu-Chuan Chu*, and Jeng-Shyang Pan 
National Kaohsiung University of Applied Sciences, Taiwan 
Cheng Shiu University, Taiwan* 
pwtsai@bit.kuas.edu.tw, scchu@csu.edu.tw, jspan@cc.kuas.edu.tw 
Abstract
In this paper, we proposed a novel optimization 
model, which combines Bacterial Foraging with 
Genetic Algorithm. Though these two well-known 
optimization algorithms have their own good points, 
they also have their own drawbacks respectively. In 
our work, a combined evolutional model, Bacterial-GA 
Foraging, is proposed. Via applying this new model, 
experimental results indicate that the new combined 
model performs much better performance than 
applying any of these two algorithms singly. 
1. Introduction 
Both Bacterial Foraging (BF) [1,4-5] and Genetic 
Algorithm (GA) [2,3] are well-known popular 
algorithms for solving optimization problems. BF 
simulated the life cycles and the foraging behaviors of 
bacterial, which are called E. coli, to solve the 
optimization problems, and GA uses chromosomes to 
represent the solution sets in the algorithm. However, 
these algorithms still have their own weaknesses on 
finding the solutions due to the characteristics of their 
own evolutional models. 
In 2000, Kevin M. Passino proposed the idea of BF 
[1] for solving optimization problems. The framework 
of BF was based on parroting the behaviors of 
bacterium, i.e., the way they search nutrients, evade 
noxious environments, and the moving circumstance. 
By way of imitating the existence of the bacterium, the 
optimization problem can be solved. 
When analyzing an optimization algorithm, the 
searching ability can be roughly separated into two 
types, namely, the global search ability and the local 
search ability. Through observing the processes of BF 
and GA, we noticed that BF emphasizes the local 
search ability, but GA performs high searching ability 
on global search. In addition, the solution sets of these 
two algorithms function in different ways. The solution 
set in BF is a single bacterium, and it basically finds 
optimal solutions on its own. On the contrary, the 
solution set in GA is a chromosome, which carries the 
solution as genes, but it searches the optimal solutions 
by exchanging the information with others. In other 
words, the bacterial in BF work along, but the 
chromosomes in GA somehow whack the solutions 
they have. Eventually, by the phenomena we inspected, 
the idea of combining BF with GA was generated. 
2. Bacterial Foraging 
Assume that we are going to find the minimum of a 
fitness function. In equation (1), Ӱ˼̆ʳ˴ʳ˶̂̂̅˷˼́˴̇˸ʳ˼́ʳ̇˻˸ʳ
̆̂˿̈̇˼̂́ʳ ̆̃˴˶˸ʿʳ ˴́˷ʳ  TJ ʳ˼̆ʳ ˴́ʳ ˴̇̇̅˴˶̇˴́̇ˀ̅˸̃˸˿˿˴́̇ʳ ̃̅̂˹˼˿˸ʿʳ
̊˻˼˶˻ʳ̅˸̃̅˸̆˸́̇̆ʳ̊˻˸̅˸ʳ́̈̇̅˼˸́̇̆ʳ˴́˷ʳ́̂̋˼̂̈̆ʳ ̆̈˵̆̇˴́˶˸̆ʳ
˴̅˸ʳ˿̂˶˴̇˸˷ˁʳ
  pJ TT   ,                            (1) 
   ^ `SilkjlkjP i ,...,2,1,,,,   T                (2) 
Equation (2) denotes the positions of each 
bacterium in the population. For the ith bacteria, it 
represents the bacteria at the jth chemo-tactic step, kth
reproduction step, and the lth elimination-dispersal 
event.
When evaluating the fitness value of each bacterial, 
the users can choose whether to consider the cell-to-
cell signaling via attractant and repellent coefficients. 
And these coefficients are calculated by equation (3), 
and then combined with the fitness value in equation 
(4), where  represents the combined cell-to-cell 
attraction and repelling effects, and .
The d, h andʳ ̊ʳ ˴̅˸ʳ ˴˿˿ʳ ̇˻˸ʳ ˴̇̇̅˴˶̇˴́̇ʳ ˴́˷ʳ ̅˸̃˸˿˿˸́̇ʳ
˶̂˸˹˹˼˶˼˸́̇̆ʿʳ̊˻˼˶˻ʳ̊˸ʳ̀˸́̇˼̂́˸˷ʳ˴˵̂̉˸ˁʳ
ccJ
> @TPTTTT ,...,, 21 
The movement of each bacterium in BF is applied 
after the evaluation process. Every bacterial in the 
population will tumble once, and the bacterial, which 
have better fitness values after the tumble, will go on 
the swim step under the swim length limit Ns. The 
movement can be described as equation (5), and  iC
denotes the step size, and  jI  is a random variable 
in > @1,0 .    jiC I  is the moving length that the ith
bacterium takes. 
0-7695-2882-1/07 $25.00 ©2007 IEEE
Authorized licensed use limited to: National Kaohsiung University of Applied Sciences. Downloaded on November 18, 2008 at 22:53 from IEEE Xplore.  Restrictions apply.
Figure 1. The flowchart of Bacterial-GA Foraging 
As shown in Figure 1, the courses of tumbling, 
swimming, reproduction are exactly the same as how 
they work in BF, and the courses of crossover and 
mutation are the same as they work in GA. The 
evaluation course here we used takes as the model of 
BF without considering the cell-to-cell attraction and 
repelling effects. 
However, the selection process in Bacterial-GA 
Foraging selects the individuals according to their 
swim lengths, which were summed up in the 
swimming process, not the fitness values. Furthermore, 
the elimination course is also a bit different from the 
process in BF. In Bacterial-GA Foraging, when an 
individual is eliminated, the course does not generate 
another one via the initialization process, but it 
generates a new individual via mutating all the 
dimensions from the eliminated one. 
No
Swim? 
Start
Initialization 
Evaluation 
Tumbling 
Swimming 
Yes
Selection
Crossover
Mutation 
Yes
No
Reproduction
Exceed in Reproduction 
Times? 
Yes
No
No
Exceed in Life Time? 
Elimination 
Exceed in
Elimination Times? 
Yes
End
By way of experiments, we find that Bacterial-GA 
Foraging performs better searching results, and the 
convergence is also good. 
5. Experiments and Conclusions 
During the experiments, we applied BF, GA and 
Bacterial-GA Foraging into four test functions for 
examining the searching abilities of these algorithms.  
The test functions are listed as follows. And the 
initial constrain of each dimension of the solutions are 
listed in Table 1. The parameter setting for BF and GA 
is listed in Table 2. Since Bacterial-GA Foraging 
follows all the parameter setting in BF and GA, we do 
not need to list them additionally. 
In addition, when applying BF in the experiments, 
we consider about the cell-to-cell attraction and 
repelling effects. 
     > @    > @
   > @    > @
   > @    > @
   > @    > @
   > @    > @21202120
2
1
2
0
2
1
2
0
2
1
2
0
2
1
2
0
2
1
2
0
2
1
2
0
2
1
2
0
2
1
2
0
1451.016251.0
25211.02581.0
5151.01051.0
10101.010251.0
15201.020151.0
1
22           
22           
42           
23           
25









 
xxxx
xxxx
xxxx
xxxx
xxxx
ee
ee
ee
ee
eexf
(6)
     > @¦
 
  
1
1
222
12 1100
n
i
iii xxxxf (7)
   > @¦
 
 
n
i
ii xxxf
1
22
3 102cos10 S (8)
  1cos
400
1
11
2
4 ¸
¹
·¨
©
§ ¦
  
n
i
i
n
i
i i
xxxf (9)
The population sizes and the dimension of solution 
spaces for BF, GA and Bacterial-GA Foraging are all 
the same. For the first test function, the population size 
is set to 50, and the dimension of solution space is set 
to 2; for the rest of the test functions, the population 
sizes are set to 160, and the dimension of solution 
spaces are set to 30.For Bacterial-GA Foraging, we 
still use essential selection and one-site crossover to 
handle the related courses. 
Table 1. The Limitation ranges for test functions 
Authorized licensed use limited to: National Kaohsiung University of Applied Sciences. Downloaded on November 18, 2008 at 22:53 from IEEE Xplore.  Restrictions apply.
Parity Modulation Based Watermarking Resisting to Cropping 
Chuang Lin a , Jeng-Shyang Pan b Member, IEEE, Bin-Yih Liao c
a Department of Automatic Test and Control, Harbin Institute of Technology, Harbin, China,
Email: linchuang_78@sina.com 
bDepartment of Electronic Engineering, National Kaohsiung University of Applied Sciences, 
Kaohsiung, Taiwan 
Email: jspan@cc.kuas.edu.tw 
c Department of Electronic Engineering, National Kaohsiung University of Applied Sciences, 
Kaohsiung, Taiwan
Email: byliao@cc.kuas.edu.tw 
Abstract
In this paper, we proposed a parity modulation 
based digital image watermarking scheme in DWT 
domain, focusing on resisting cropping attack. The 
watermark is embedded in the  subband 
coefficients of DWT by the parity modulation method.  
Experimental results show that the proposed 
watermarking method  can resist not only cropping 
attack, but also some common signal processing 
attacks, such as JPEG compression, Gaussian noise, 
and filtering etc.
3LL
1. Introduction 
Digital watermarking technique is one way to 
embed certain secret information into the digital media 
for the purpose of copyright protection, facticity and 
integrality‘s authentication, access control, tracing, 
covert communication etc [1]. Traditionally, the 
watermark is embedded in the spatial domain or the 
transformed domains such as DCT and DWT. From the 
aspect of application, the watermarking technique can 
be separated into two classes, the fragile watermarking 
technique and the robust watermarking technique. The 
former is mainly used in facticity and integrality‘s 
authentication, the later is mainly used in copyright 
protection etc. The robust watermark should resist not 
only common signal processing attacks, but also some 
uncommon attacks, such as geometrical attack, sticking 
attack etc. In general, the geometrical attack contains 
cropping, rotation, enlarging and shrinking etc.  
In this paper, we proposed a parity modulation 
based digital image watermarking scheme in DWT 
domain, focusing on resisting cropping attack. 
Generally, in order to resist the geometrical attack, the 
synchronizing template is needed [2-4]. The former 
schemes which can resist to geometrical attack are 
mainly in DFT domain, which have lower robustness 
to other attacks. In reference [5], the authors proposed 
a CDMA based watermarking scheme to resist the 
cropping attack, it also needs a synchronizing template. 
While our method can resist the cropping attack with 
no aid of the synchronizing template. If with the aid of 
synchronizing template, our scheme will resist other 
geometrical attacks, such as rotation, enlarging and 
shrinking. In this paper, a comparison between the 
special and the transformation domain based 
watermarking method is carried out. From the 
experimental results, we can see that, with the same 
embedding and extracting method, the spacial domain 
based method has better robustness to geometrical 
attacks, but very vulnerable to JPEG compression, 
Gaussian noise and filtering. While the transformation 
domain based method are very robust to cropping, 
JPEG compression , Gaussian noise and filtering, but if 
with no aid of the synchronizing template, it is 
vulnerable to rotation, enlarging and shrinking attacks. 
The rest of the paper is organized as follows, in 
section 2, the detailed procedure of the proposed 
algorithm is given. In section 3, the experimental 
results are presented. We conclude the paper in section 
4.
2. Proposed watermarking scheme 
     In this paper, the watermark is embedded in the 
 subband coefficients of DWT by the parity 
modulation method, the detailed embedding and 
extracting steps can be described as follows. 
3LL
0-7695-2882-1/07 $25.00 ©2007 IEEE
Authorized licensed use limited to: National Kaohsiung University of Applied Sciences. Downloaded on November 18, 2008 at 22:54 from IEEE Xplore.  Restrictions apply.
(a1) (b1)
(a2) (b2)
(c1) (d1)
(c2) (d2)
Figure2. Experimental results under 
cropping attack. 
(a) QF=100  BCR=1 (b) QF=90  BCR =1 
(c) QF=80   BCR =1 (d) QF=70   BCR =1 
(e) QF=60   BCR =1 (f) QF=50   BCR =1 
(g) QF=40   BCR =1 (h) QF=30   BCR = 0.9998
(i) QF=20   BCR = 0.8132 (j) QF=10   BCR = 0.4919
Figure3. Experimental results under JPEG 
compression attack with different quality 
factor.
(a) Gaussian white noise 
of mean 0 and variance 
0.001, BCR= 0.9602 
(b) Gaussian white noise 
of mean 0 and variance 
0.002, BCR= 0.8667 
(c) Gaussian white noise 
mean 0 and variance 
0.003, BCR= 0.7810 
(d)Salt and Pepper noise 
with noise density 0.002, 
BCR= 0.9529 
(e) Average filter 
BCR=0.9458 
(f) Median filter 
BCR=0.9958 
(g) Gaussian low pass 
filter
BCR=0.9829 
Figure4. Experimental results under noise 
attack and filter attack. 
(a1) (b1)
(a2) (b2)
Authorized licensed use limited to: National Kaohsiung University of Applied Sciences. Downloaded on November 18, 2008 at 22:54 from IEEE Xplore.  Restrictions apply.
