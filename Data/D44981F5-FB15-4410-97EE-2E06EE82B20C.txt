  i
行政院國家科學委員會專題研究計劃成果報告 
以 Memetic 演算法規劃機械手臂最佳路徑 
計劃編號：NSC 95－2221－E－366 －010 － 
執行期限：95 年 08 月 01 日至 96 年 07 月 31 日 
主持人：林建州   樹德科技大學資訊工程系 
摘要 
中文摘要： 
本研究提出一個階層式的路徑規劃演算法，來規劃出一序列性的機械手臂移動軌跡。
所提出的階層式路徑規劃演算法先以空間切割方式找出機械手臂的移動軌跡，再以瀰集進
化演算法為基礎作為機械手臂移動規劃之全域搜尋方法，搜尋出區域的最佳化機械手臂組
態，且採用簡易位能場模型作為區域搜尋方法，細部調整手臂姿態，來加速機械手臂最佳
組態的演化，以達到完全避碰效果。不同以往的路徑規劃演算法需要大量的計算來建構組
態空間，本研究所提出的演算法直接使用工作空間的場景資訊，並且搜尋的效率也較以往
的路徑規劃演算法更能適用於高自由度的機械手臂。由實驗證明，本研究所提出的方法能
在短時間內將高自由度的機械手臂路徑規劃出來，且路徑具有高安全性。 
 
關鍵詞：機械手臂、彌集進化演算法、路徑規劃、避碰、最佳化 
 
英文摘要： 
In this research, a hierarchical algorithm is proposed for path planning of manipulators. The 
proposed algorithm consists of a global planner and a local planner. The cell-decomposition 
approach is adopted as the former to plan a trajectory for robot end-effector. The Memetic 
algorithm with local search is adopted to plan the local motion of the manipulator. The local 
search procedure reduces the search space and speedups the evolution significantly. In this thesis, 
the local research is implemented by a potential minimization algorithm. The algorithm locally 
adjusts the robot configuration to search for minimum potential configurations using the 
repulsive force between manipulator and obstacles. Simulation results show that the proposed 
algorithm works well, in terms of collision avoidance and computation efficiency. 
 
Keyword：manipulator, Memetic algorithm, path planning, collision avoidance, optimization 
 
  2
基台上，不會有位移，且關節的連結機制是屬於序列
式（Serial）的多節(Redundant)機械手臂，這類型機械
手臂的自由度恰好等於手臂關節的數目，也等於手臂
的節數。 
本研究的目的期望能提出一套具高效率的運算
且適應於高自由度的多節物體路徑規劃演算法，並且
以創新的方式為多節物體規劃出一系列無碰撞的移動
組態軌跡，除了可以解決各物體移動時可能發生的避
碰問題，甚至可以在即時運算條件下回應，以便更廣
泛的應用到實務領域。故本研究擬對二維機械手臂
（planar manipulator）在已知環境中路徑規劃的問
題，採用彌集進化演算法(Memetic algorithm，MA)，
來規劃整體路徑，達成完全（complete）的要求。利
用彌集進化演算法中的區域搜尋可有效減少搜尋空
間，因此我們將利用牛頓位能場模型作為區域搜尋的
基礎，將機械手臂移動到位能較低的組態，優化基因，
增速演化。為了方便計算位能，我們將用多邊形或線
段（line segment）來描述物體以及障礙物，並假設已
知工作空間的所有幾何資訊，且包括其電荷分布的狀
態。因此，路徑規劃可分成兩部分：(i)Memetic 演算
法的整體規劃；(ii)降低位能演算法的區域規劃，由於
整體規劃與區域規劃分離可避免位能場路徑規劃常出
現的陷入區域最小值，並可有效率的搜尋整體路徑。 
3. 文獻探討 
機械手臂路徑規劃的相關研究，在近幾年被廣泛
的探討且有相當多的研究成果。這些研究大致可分為
兩種作法：一類是將路徑規劃問題轉換到組態空間的
以組態空間為基礎演算法及直接在工作空間進行路徑
規劃的以工作空間為基礎演算法。我們將根據機械手
臂路徑規劃的方法，將其分為三大類加以討論與說
明：組態空間（Configuration Space）、工作空間
（Workspace）與其他相關研究，將其相關文獻整理並
說明如下。 
3.1. 組態空間的作法 
組態空間又稱為 C-space，在 1979 年時，
Lozano-Perez 和 Wesley 在[4]裡提出一個完全演算法
（Complete Algorithm），其作法在於建構一個禁止區
的網路圖，該圖中的點是由多邊形或多面體的障礙物
做空間轉換而來的，而機械手臂的路徑規劃即在於避
開這些點，而在圖中找尋一條安全的路徑，這個方式
被認為是 C-space 的前身。直到 1983 年，Lozano-Perez
和 Wesley 在[5]裡創新的引進了機械人的組態空間的
觀念，進而影響了後來這領域的研究方向。在 C-space
裡，機械手臂的組態被表示成一個點（一個點即是一
個機械手臂組態，該點的所在空間的維度由手臂關節
的數目所決定），因此機械人的自由度即為 C-space
的維度。如此，機械人碰撞障礙物的組態集合，即表
示成組態空間裡的禁止區域 (forbidden region)，而禁
止區以外的自由空間（Free Space）則對應機械人所有
安全的動作組態集合。因此整個機械手臂路徑避碰問
題的核心被簡化成－『在自由空間裡，找尋一條連接
初始點和終點的路徑。』，如圖 4 所示。 
 
圖 4 工作空間轉換組態空間 
 
也因為組態空間描述了所有組態，解決了
Redundant Solution 的問題（因為它幾乎把所有節都算
了出來），所以建置所有機械手臂的組態必定將會花
費很多時間與資源，這樣的前置工作代價太大，尤其
是對高自由度的機械手臂而言。在 80 年代，微分幾何
也被應用到組態空間，不少方法研究 C-space 裡的
Manifold 結構，伴隨著是更豐富的拓樸、幾何、代數
的特性。最廣為引用的作法為機率式路線圖法
（probability roadmap, PRM），將於下做詳細介紹。 
 
在 1996 年 Kavraki 等人[6]提出了 Probabilistic 
Roadmap（PRM），很成功的把其應用範圍提高至高
自由度的機械手臂，此演算法利用亂數在 C-space 裡
灑下一定數目的點（點即是一個機械手臂的動作組
態），然後區域性地把一些沒有碰到障礙物的點連接
起來，成為一個圖（Graph），而之後在這圖裡找到ㄧ
條連接起點和終點的路徑，來描述機械手臂的整個運
  4
維度的工作空間或組態空間較不適用。 
Ahmad 等人[16]提出以位能場的方法找出正朝向
障礙物運行的目標物。其中運用了時間相依的位能場
來產生一線性相關的波形函數。Lin 等人於 [17-22]建
立三維的人工位能場來避碰處理。 
如圖五所示，為位能場的三種使用方式。左圖為
目標物周圍分布吸引的力場吸引機械手臂系統前往目
標物；中間的圖為將障礙物四周圍分布排斥力的力
場，使機械手臂系統避免與障礙物發生碰撞的情形；
右圖為混合吸引力與排斥力這兩種力場，將吸引力場
分布於目標物周圍，排斥力場分布於障礙物周圍，藉
此使機械手臂系統能順利的前往目標物且避免與障礙
物發生碰撞，但是此種方式最容易發生 local minima
的問題。 
 
圖 5 位能場三種使用方式 
3.2.2. 細胞切割方法 
Cell decomposition 的方式，是先將自由空間分成
小區域(cell)，接著在彼此相鄰的小區域找到通道並連
結起來，組成類似 graph 的結構，然後在上面搜尋路
徑，如圖 6 所示，為細胞切割規劃法示意圖，如上述
之將整個場景作等比例的切割分成小區域，如圖 6(a)
為例，所切割而成的小區域可以分為三種區域類型： 
i. Empty Cell：此區域完全無與障礙物本體
覆蓋，意指機械手臂可通過的區域，又稱
為自由空間。 
ii. Mix Cell：此區域部分與障礙務本體覆蓋
一起，意指有可能存在可通過路徑。 
iii. Full Cell：此區域完全與障礙物本體覆蓋
一起，意指機械手臂系統無法通過此區域。 
因此我們可以說細胞切割規劃法於在 Empty 
Cell與Mix Cell區域之間尋找一條路徑出來；如圖 6(b)
為例，切割的區域過大則會發生解析度的問題，導致
找不到路徑的情況發生。 
在 1983 年時，由 Brooks and Lozano-Perez [23]
所提出路徑規劃演算法，是把安全空間（Free Space）
以不同大小的細格切割，用切割出來的格子組成一條
安全的路徑，而格子的大小是決定結果的關鍵。在
1996 年時，由 Maron and Lozano-Perez [24]利用視覺
化的分解法，在擁有大量障礙物的規劃環境下，即時
地計算出無碰撞的移動路徑。此方法將規劃空間分解
成數個區域性的視覺化圖形，以保證所有的作業都在
區域中進行。由於搜尋的子空間的個數少，所以可使
搜尋空間最小化。 
 
圖 6 Cell Decomposition 示意圖 
3.3. 其他相關做法 
上述兩類型的演算法存在的問題是缺乏靈活
性，或者某些演算法易陷入局部極小值（ local 
minimum）。因此，有些研究就以基因演算法來規劃
機 械 手 臂 的 路 徑 [25-29] 。 基 因 演 算 法 (Genetic 
Algorithms，GA)是近年來非常熱門的一種最佳化方
法，它利用自然界基因演化的機制，來進行最佳化的
演算；在使用時先將機械手臂組態做一編碼方式，例
如各關節的角度 X = (θ1，θ2，θ3…θn)，然後再經由選
擇、複製、交配以及突變等演化方式，產生數代之後，
即可得到最佳化之結果，由於它是屬於全域搜尋
(global search)的方法，因此可以避免局部最佳化的困
擾，而且它在進行搜尋當中，不需給定搜尋方向，因
此也就不需如一般最佳化方法般計算梯度，可減少計
算上的負擔。然而，影響基因演算法中計算時間的主
要是編碼長度和搜索空間，太長的編碼長度和太大的
搜索空間都會使計算時間迅速增長。 
Pires and Machado[25]提出基因演算法產生機械
人路徑規劃的控制器。其目標為最小化機械人位置與
速度所產生的波動。此外，在不碰撞規劃空間中的障
礙條件下，此控制器亦可達到事先預定之目標。Pires 
and Machado 將候選的路徑每一組態當作基因，每一
候選路徑即為一染色體，之後，再進行演化，找出最
  6
障礙物頂點連接出一連接線（Links），將連接線依下
列規則選取，刪除不符合規定的連接線，所剩的連接
線稱為自由鏈（Free Links），如圖 8 中的 Ei, i>0，
所有的自由鏈將空間切割成數個自由空間（Free 
space），如圖 8 中的 Vi, i>0。 
 
圖 8 Free Space 建構圖 
 
自由鏈會影響自由空間的形成，越多的自由空間
會使得路徑規劃變得複雜，因此，在建立 Free Link
使用下列規則選取自由鏈： 
a. 若無相鄰頂點可以連接時，則會與工作空間邊
界做水平或垂直連接。 
b. 障礙物的每一頂點最少會有兩條 Free Link，用
此當作建立所有 Free Link 的終止條件。 
c. 合適的 Free Link 不會與工作空間中的障礙物相
交在一起，或是與其他 Free Link 相交一起。 
d. 合適的 Free space 是由每一條 Free Link 所相互
連接構成的。 
此外，在建立合適的 Free space 之前，必需將不
合適的 Free Link 加以刪除，刪除不合適的 Free space
條件，將於下圖 9(a)與圖 9(b)加以說明： 
 
(a) (b)  
圖 9 建立 Free Link 連結示意圖 
 
如圖 9(a)所示，為合適的 Free Link 連接的情況
圖，假設兩相鄰的障礙物，左右兩障礙物各有四個頂
點，各有機會與相鄰的障礙物頂點連接成 Free Link，
但是避免會與不合適的頂點連接一起，建構出非最佳
化的 Free space，因此我們將用 ABC 這三頂點來說
明，此時右障礙物上的一頂點皆有可能會與左邊障礙
物上的 ABC 這三頂點連接成 Free Link，並且不會有
相交的情況發生，但是唯有 B 頂點所連接而成的 Free 
Link，無論是 θ11或是 θ12皆小於 180 度，因此我們可
以說 L2是此頂點的最佳 Free Link；如圖 9(b) 所示，
為標準 Free Link 連接情況，如上述敘述的每一障礙物
頂點最少會有兩條的 Free Link 連接至相鄰障礙物頂
點。 
建構 Free Link 步驟起先會從工作空間中找出所
有障礙物，依照各障礙物的頂點連接至另一障礙物的
頂點。若是某一障礙物頂點找不到合適的頂點可做連
接，此時會與工作空間邊界做水平連接或是垂直連
接。之後，會依照每一條連接線的長度由短到長排序；
從經排序過後的第一條連接線，判斷是否與障礙物的
任何一邊有相交，如有相交的話，則將此連接線刪除，
反覆進行下一連接線的相交判斷，直到所有連接線皆
無相交為止。然後再檢查每一障礙物頂點與連接線所
產生的兩外部角度，如果此兩角度皆小於或是等於
180o的話，此連接線就是一條 Free Link；反之，如果
兩個外部角度有某一個大於 180o的話，則會與已決定
是此頂點 Free Link 做兩線段夾角判斷，倘若還是大於
180o 的話，則此連接線將會刪除，如此藉由上述步驟
刪除多餘的 Free Link，留下合適的 Free Link。 
ii. 將 Free space 轉換成圖形搜尋，找尋出最安全
航行路徑： 
將由自由鏈所切割工作空間的自由空間，以
Free Link 當作邊（edges），自由空間當作端點(node)，
建構出一自由空間連接的無向圖，如圖 10 所示，將
Free space 拓展為圖形路徑搜尋，V1~V11代表為所切
割凸多邊形的Free space，E1~E13代表為每一Free Link
的長度成反比亦為圖形上每一邊的權重值，然後採用
A*路徑搜尋法，假設當我們機械手臂的基點(Base 
Point)落在 V2，目的點(Goal Point)落在 V9，再利用
A*演算法搜尋出一條無避碰且安全性航行路徑。在
  8
到預設值後，計算每一子代之適應度做篩選。在每世
代演算截止前，檢驗新母體是否收歛，一般判斷收斂
的方式為連續數代未改善或是母體中絕大部分的個體
皆相同，若收歛則排除母體中最好個體外的所有個體
皆需進行突變，其後對每一突變之個體以區域搜尋改
善，MA 之突變不同於 GA 在於其目的在於大幅度地
改變母體中之結構，甚至允許重新產生新母體。本研
究所採用的瀰集演算法作為區域路徑規劃法可以分為
兩個部份，分別為全域搜尋法與區域搜尋法兩大部
分，我們將會在下列兩小節中詳細說明。 
4.2.1. 全域搜尋法（Global Search Method） 
在全域搜尋法中，我們將應用彌集進化演算法來
解決最佳化問題需要重新定義： (1) 編碼方式
（encoding）：將所要搜尋的所以參數編碼成為合適
的染色體（chromosome）結構；(2)適應函數（fitness 
function）：擬定一個評估函數判斷經過演化的染色體
是否適合解決問題，並給予一個適應值。 
 
圖 13 瀰集進化演算法流程圖 
在編碼方式方面，本研究的染色體結構部份是依
機械手臂各節與水平座標軸的夾角作為其基因值。如
圖 14 所示，為四節機械手臂結構圖，θn （n=1...4）
分別表示其各節與水平軸之夾角角度。 
 
 
圖 14 4-DOF 機械手臂結構圖 
 
因此，在演化族群中的每一染色體結構可以定義
為（θ1, θ2,…, θn），如圖 15 所示，為一個四節機械手
臂，其染色體就會包含四個基因，分別隨機給予整數
代表每一 Link 所旋轉的角度，其範圍為 0° ~ 360°，水
平為 0°，依逆時針方向增加。 
 
圖 15 染色體結構圖 
故本研究所採用的瀰集進化演算法包含下列幾
種步驟，各步驟說明如下： 
Step 1 初始化階段（Initialization）：在此階段
基因演算法會將初始化人口數與演化迭代
數，而人口中的每一條染色體由亂數函數
產生一群問題的可能解。初始母體數也就
是演算法中的人口，母體數與演算法求解
效能有直接的影響，母體數若太少，則容
易提早收歛，使其容易陷入局部最佳解
中；母體數若過多，所得到的解，雖然會
較接近最佳解，但運算時間過長，反而失
去使用演算法快速搜尋的意義，由於 MA
會對個體進行區域搜尋，但為了演算效
率，MA 的母體數不宜過大。 
 演化母體人口數(Number of Population)：演化
母體意指存在問題可能解的集合，而設定演化
母體人口數目的為允許限制演化母體中問題可
能解的個數，倘若所設定的演化人口數目過
高，會導致運算時間過於冗長，反之，所設定
的演化人口數目過低，可能會導致無法得到問
題最佳化解。 
 演化迭代數(Number of Generation)：設定演化
迭代數的意思為允許經過幾代演化過程，倘若
設定的演化迭代數過高，會導致運算時間冗
長，反之，設定的演化迭代數過低，可能導致
無法得到問題最佳化解。 
 
  10
末端操作點與目的點之間的距離當作主要適應函數評
估每一染色體適應值的重要參數，並且判斷該染色體
是否與工作空間中的某障礙物發生碰撞，則 
⎩⎨
⎧ −=
onif collisi, V
collisionif no, DThreshold
V
s
f
min
     (2) 
Vf 為染色體適應值；如本組態之機械手臂與障
礙物無發生碰撞時，其值為一 Threshold 減去 Ds，Ds
為末端操作點（Px, Py）與目的點（Gx, Gy）的距離，
可表示為下式： 
22 )()( yyxxs PGPGD −+−=       (3) 
其中末端操作點的座標可由下式計算得知： 
∑
∑
=
=
×+=
×+=
dof
i
iiiy
dof
i
iiix
LyP
LxP
0
0
sin
cos
θ
θ
        (4) 
Li代表為第 i 節的長度。如發生碰撞時，則 Vf 為
一極小值 Vmin。則此一染色體會在選擇時，自然被淘
汰。 
4.2.2. 區域搜尋法（Local Search Method） 
經傳統基因演算法所規劃出的機械手臂路徑，常
會發生太過於靠近障礙物的情況，光是單倚靠傳統基
因演算法所規劃出的機械手臂路徑非安全或最短最佳
化，故本篇提出區域搜尋解決上述問題。區域搜尋是
MA 的一大特色，本研究發展出位能減弱法（potential 
minimization）作為區域搜尋方式，並應用於每一個
體，來進一步細部微調機械手臂各節手臂關節角度使
其處於最低位能狀態。 
 
圖 18 機械手臂與障礙物邊的位能模型 
如圖 18 所示，本研究的機械手臂是以線段來描
述，障礙物是以多邊型來描述，且均分布相同電荷，
牛頓位能函數（Newtonian potential function）Φ便可
定義為： 
∑
=
=Φ
m
j jr1
1           (5) 
其中，rj 為第 j 個障礙物線段到機械手臂的第 i
節中心點的距離。位能場的負梯度（gradient）是機械
手臂和障礙物之間的斥力，我們利用斥力來決定區域
搜尋的方向。我們只考慮力的方向，而不考慮力的大
小，所以由障礙物所作用於機械手臂的第 i 節（Linki）
中心點的合力可表示為： 
y
y
x
x
yxyxF ii
vvrv
∂
Φ∂+∂
Φ∂=Φ∇= ),(),(       (6) 
將靠近基點的端點視為轉軸，則作用於 Linki中心
點的合力，會使 Linki 做順時針或逆時針轉動。藉此
調整 Linki的姿態，降低位能。 
 
 
圖 19 區域搜尋法示意圖 
如圖 19 所示，Fi為作用在第 3 關節(Link3)中心的
所受來自障礙物推斥的合力，Fi_n為 Fi在 Link3法線上
的投影，當 Fi_n為正 Link3便逆時針轉動調整組態來降
低位能。 
我們假設手臂的關節可以自由的轉動，沒有機械
性的摩擦和轉動角度限制，當它處於位能場的最低點
時，手臂關節上所受力的總合必沒有作用，即處於靜
力平衡的狀態。如圖 19 中的 Fi為作用在第 3 節(Link3)
中心的所受來自障礙物推斥的合力，Fi_n為 Fi在 Link3
法線上的投影，當 Fi_n為正 Link3便逆時針轉動調整組
態來降低位能，反之亦然。所以，此組態的染色體 （θ1, 
θ2,…, θk）中的 θ3 便會增加。如此，每一組態便可優
化成區域的最佳解。 
5. 結果與結論 
5.1. 實驗結果 
在本章節裡，我們將以參考文獻中[32-35]，挑選
出四個模擬場景進行模擬並分析觀察結果。本研究的
實驗環境架構於 Windows XP 之上，並以 Java SDK 1.6
結合 JGAP API 建構出模擬環境，本研究假設所探討
的機械手臂路徑規劃問題是建構於二維環境裡，因此
障礙物與物體的描述是以多邊形或是線段方式，並且
  12
 
圖 22 階層式路徑規劃結果於場景三 
 
 
圖 23 階層式路徑規劃結果於場景四 
 演化收斂速率比較： 
我們嘗試分別以傳統基因演算法與瀰集進化演
算法各執行 500 次於相同的場景且機械手臂的基台位
置(Base Position)與目的點(Target)皆相同的情況下，進
行模擬求解並分析。表 1 為根據四個場景各執行 500
次後，所歸納出的各場景所需的平均演化迭代數，可
以清楚看出本研究所提出的 MA 確實比 GA 需要更少
的演化迭代數，同理，所花費的運算時間也將會比 GA
更短，另外，我們又嘗試保留上一演化結果百分之十，
當作下一演化的演化人口，結果顯示保留百分之十方
法與完全保留方法，MA 所需演化迭代數更少於
MA(10%)。 
 
表 1 MA 與 GA 平均演化次數 
 
Case 
1 
Case 2 Case 3 Case 4
MA 平均演化迭
代數 1.25 3.183 1.975 5.619 
MA(10%)平均
演化迭代數 3.983 7.877 4.990 8.840 
GA 平均演化迭
代數 23.29 172.197 39.275 116.380
 
如表 2 所示，為各執行 400 次後的數據分析，歸
納出的 MA 與 GA 於每四個場景失敗率，此判定為失
敗的情況為機械手臂的末端操作點未抵達目的點。由
表 2 可以清楚看出本研究所提出的 MA 於四個場景的
最終機械手臂組態皆可以順利抵達目的點，而 GA 於
第二個場景時，發生演化失敗的程度更高。 
 
表 2 MA 與 GA 演化失敗率比較 
 Case 1 Case 2 Case 3 Case 4
MA 失敗率 0％ 0％ 0％ 0％ 
GA 失敗率 0％ 29％ 0％ 6.75％
 
圖 24 所示，為各方法所需演化迭代數之比較。
相同上述，我們分別以 MA、MA(10%)、MA+LSS 與
GA 執行 500 次於場景四，且限制最高演化迭代數為
600 迭代與演化人口為 100 的情況下進行模擬動作並
分析結果。結果顯示 MA 與 MA(10%)的作法優於
  14
所規劃出的整體移動軌跡無平順化，而 MA 所規劃出
的整體移動軌跡較 GA 更有平順化表現，因 MA 與 GA
最主要不同為會將每一次演化後的人口保存下來，並
當做下一次演化的人口，所以 MA 的作法僅會在第一
次演化階段會花費較多的代數；(3) 經 GA 所規劃出
的機械手臂組態會與障礙物過於接近，而 MA 所規劃
出的機械手臂組態較 GA 更遠離障礙物主體，處於最
安全的情況下。未來我們嘗試將工作場景轉換至三維
空間下進行研究，並且加強改善 MA 區域搜尋法，使
整體機械手臂移動軌跡能適用真實環境。 
6. 計劃結果自評 
本計劃之研究內容，與原計劃書之內容相符。預
期目標，也有相當程度的的達成率。目前已有一篇研
究成果於 10th International Conference on Climbing 
and Walking Robots and the Supporting Technologies 
for Mobile Machines 國際會議及 2007 資通技術管理
與應用會議做學術發表，目前更進一步，整理為期刊
論文投稿。在人才培養上，亦有三位研究生以此為研
究基礎。同時，本計劃為國內在機器手臂路徑規劃研
發領域，是相當前驅的研究經驗，很適合作為該領域
的先進學者參考。 
參考文獻 
[1] ABB Website, http://www.abb.com.tw/. 
[2] Intuitive Surgical, Inc, 
http://www.intuitivesurgical.com/index.aspx. 
[3] J. H. Reif, "Complexity of the mover's problem 
and generalizations", Proceedings of foundations 
of Computer Science, pp. 421-427, 1979. 
[4] T. Lozano-Perez and M. A. Wesley, “An 
Algorithm for planning collision-Free paths 
among polyhedral obstacles,” Communications of 
the ACM, vol. 22, pp. 560-570, 1979. 
[5] T. Loza no-Perez, “Spatial Planning : a 
configuration space approach,” IEEE 
Transactions on Computers, vol. C-32, pp. 
108-120, 1983. 
[6] L. E. Kavraki, P. Svestka, J. C. Latombe, and M. 
H. Overmars, “Probabilistic Roadmap for path 
planning in high-dimensional configuration 
spaces,” IEEE Transactions on Robotics & 
Automation, vol. 12, no. 4, pp. 566-580, 1996. 
[7] T. Lozano-Perez, “A simple motion-planning 
algorithm for general robot manipulator,” IEEE 
Journal of Robotics and Automation, vol.3, no.3, 
pp.224-238, 1987. 
[8] S. M. LaValle, “Rapidly-exploring random tree: 
A new tool for path planning,” Technology 
Report, no. 98-11, 1998. 
[9] J. J. Kuffner and S. M. LaValle, “RRT-connect: 
An efficient approach to single-query path 
planning,” Proceedings of. IEEE International 
Conference on Robotics and Automation, pp. 
995-1001, 2000. 
[10] T. Laliberte and C. Gosselin, “Efficient 
algorithms for the trajectory planning for 
redundant manipulators with obstacle avoidance,” 
Proceedings of IEEE International Conference 
on Robotics and Automation, vol. 3, 
pp.2044-2049, 1994. 
[11] E. Ralli and G. Hirzinger, “Fast path planning for 
robot manipulators using numerical potential 
fields in the configuration space,” Proceedings of 
the IEEE/RSJ/GI Intl. Conf. on Intelligent Robots 
and Systems, Advanced Robotic System and the 
Real World, vol. 3, pp. 1922-1929, 1994. 
[12] J. Barraquand and J. C. Lotombe, “Robot motion 
planning: a distributed representation approach,” 
International Journal of Robotics Research, vol. 
10, no. 6, pp. 628-649, 1991. 
[13] O. Khatib, “Real-time obstacle avoidance for 
manipulators and mobile robots,” International 
Journal of Robotics Research, vol. 5, no. 1, pp. 
90-98, 1986. 
[14] J. C. Latombe, “Motion planning : A journey of 
robots, molecules, digital actors, and other 
artifacts,” International Journal of Robotics 
Research, vol. 18, no. 11, pp. 1119-1128, 1999. 
[15] J. Barraquand, B. Langois, and J. C. Latombe, 
“Numerical potential field techniques for robot 
path planning,” IEEE Transactions on Robotics 
and Automation, vol. 22, pp. 224-241, 1992. 
[16] A. A. Masoud, M. M. Bayoumi, “Intercepting a 
maneuvering target in a multidimensional 
stationary environment using a ware equation 
potential field strategy”, IEEE International 
Symposium on Intelligent Control, pp. 243-248, 
1994. 
[17] Jen-Hui Chuang, Chien-Chou Lin and 
Cheng-Tieng Hsieh, "A Potential-Based Path 
Planning of Articulated Robots with 2-DOF 
joints", Proceedings of the IEEE International 
Conference on Robotics and Automation, pp. 
1827-1832, 2005. 
[18] Chien-Chou Lin, Chi-Chun Pan and Jen-Hui 
Chuang, "A Novel Potential-Based Path Planning 
of 3-D Articulated Robots with Moving Bases", 
Robotica, vol. 22, no. 4, pp. 359-367, 2004. 
[19] Jen-Hui Chuang, Chien-Chou Lin and Lo-Wei 
Kuo, "Potential-Based Path Planning for Robot 
Manipulators", Proceeding of IEEE International 
Conference on Method and Models in 
Automation and Robotics, pp. 1031-1036, 2002. 
  16
可供推廣之研發成果資料表 
□ 可申請專利  ◎ 可技術移轉                             日期：九十六年八月三十一日 
國科會補助計劃 
計劃名稱：以 Memetic 演算法規劃機械手臂最佳路徑 
計劃主持人：林建州 助理教授 
計劃編號：NSC 95－2221－E－366 －010 － 
學門領域：人工智慧 
技術/創作名稱 機械手臂安全路徑規劃 
發明人/創作人 林建州 
中文：利用一個階層式的路徑規劃演算法來規劃出一序列性的機械
手臂移動軌跡。所提出的階層式路徑規劃演算法先以空間切割方式
找出機械手臂的移動軌跡，再以瀰集進化演算法為基礎作為機械手
臂移動規劃之全域搜尋方法，搜尋出區域的最佳化機械手臂組態，
且採用簡易位能場模型作為區域搜尋方法，細部調整手臂姿態，來
加速機械手臂最佳組態的演化，以達到完全避碰效果，本方法能在
短時間內將高自由度的機械手臂路徑規劃出來，且路徑具有高安全
性。 
技術說明 
英文：In this research, a hierarchical algorithm is proposed for path 
planning of manipulators. The proposed algorithm consists of a global 
planner and a local planner. The cell-decomposition approach is 
adopted as the former to plan a trajectory for robot end-effector. The 
Memetic algorithm with local search is adopted to plan the local 
motion of the manipulator. The local search procedure reduces the 
search space and speedups the evolution significantly. In this thesis, the 
local research is implemented by a potential minimization algorithm. 
The algorithm locally adjusts the robot configuration to search for 
minimum potential configurations using the repulsive force between 
manipulator and obstacles. Simulation results show that the proposed 
algorithm works well, in terms of collision avoidance and computation 
efficiency. 
可利用之產業 
及 
可開發之產品 
汽車工業 自動化生產線 
技術特點 機械手臂路徑具有高度安全性 
推廣及運用的價值  
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 95－2221－E－366 －010 
計畫名稱 以 Memetic 演算法規劃機械手臂最佳路徑 
出國人員姓名 
服務機關及職稱 
樹德科技大學資訊工程系助理教授 林建州 
會議時間地點 新加坡 
會議名稱 10th International Conference on Climbing and Walking Robots and the Supporting Technologies for Mobile Machines 
發表論文題目 A Concurrent Planning Algorithm for Dual-Arm Systems 
 
一、參加會議經過 
本人於 96 年七月十六日搭機前往新加坡參加 10th International Conference on Climbing 
and Walking Robots and the Supporting Technologies for Mobile Machines 研討會，因為，無班
機由高雄直飛新加坡，所以，由高雄（6：30）搭乘中華航空班機經台北（9：00）轉機前往
新加坡。 
十六日上午抵達新加坡，先住進 Royal @ Queen 旅館，中午至會議地點 Furama Riverfront 
Hotel 報到領資料，本次大會共有來自 22 個國家三百多人參加，是中型的國際會議。隨即
參加 Panel Talk，Keynote Speaker是來自MIT的 Steven Dubowsky教授，講題是 『A Road from 
Walking Machines to Surgical Robots: Digital Mechatronics』，主要談及如何應用行走
機器人的技術而開發醫療機器人。 隨後參加 Session M21：Supporting Technologies，與
我的研究相關的有 『PARALLEL PARTICLE SWARM OPTIMIZATION FOR NETWORKED CLAWAR SYSTEM 
COOPERATION』，Swarm robot 的研究近來相當受到重視，這也是我將來的研究方向。晚上到
附近的巴剎吃晚餐，晚上回到旅館，再修改報告用投影片，演練明日的報告。 
十七日早上前往會議地點，參加會議，中午於會場用餐遇見南洋理工大學機械與航太系
鍾兆偉教授，交換名片後，交談得知本次會議僅有我一位是從台灣來，有可能國內學者對此
研討會不熟悉。中午於會場用餐，午餐用畢，便到session 的會議室（Venus 3），參加會議。
主席是德國的 Prof. Heinz Woern，大約有五十幾位聽眾。我的報告排在最後一位，前面有
一位里茲大學 Gurvinder S. Virk 教授的報告是提出有關 robot 的新標準及未來發展方向，
頗具啟發性。另有一位學者報告的是『REAL-TIME COMPUTATIONAL COMPLEXITY OF THE 
ALGORITHMS FOR A SINGLE LINK MANIPULATOR SYSTEM』，有關單一機器手臂移動的分析，其
成果主要在於可即時，但似乎和我所知的現有技術還不佳，我也提了一個問題。我的報告還
算順利，有三位提出問題，都是有關演算法方面的問題，在應用上我們的演算法可延伸多節，
不限節數。晚上有晚宴於同一家旅館舉行，席中尚有大陸學者及一位德國學著。 
十八日早上前往會議地點，參加會議，下午結束會議後，逛了新加坡河畔。由於當日已
無班機回台灣，而多留一日做參訪。十八日早上參觀亞洲文明博物館，於中午搭華航班機返
台，至台北轉機回高雄，抵達高雄已是晚上了。 
 
1 
A CONCURRENT PLANNING ALGORITHM FOR DUAL-ARM 
SYSTEMS * 
JEN-HUI CHUANG AND TING-WEI CHAN 
Depart. of Computer Science, National Chiao Tung University 
1001 Ta Hsueh Road, Hsinchu, Taiwan 30010, R.O.C. 
CHIEN-CHOU LIN† 
Depart. of Computer Science and Information Engineering, Shu-Te University 
No. 59, Hunshan Rd., Yenchau, Kaohsiung, Taiwan 824, R.O.C. 
An algorithm for path planning of object held by multiple manipulators is presented in 
this paper. The proposed path planning algorithm is composed with two planners: path 
planner of the object and motion planner of manipulators. Both planners use a 
generalized potential model to evaluate the repulsion between object/manipulators and 
obstacles, so as to avoid collision. By adding virtual obstacle planes to roughly divide the 
workspace into several subspaces, a concurrent approach of path planning is also 
proposed. With each subspace designated to a manipulator, collisions between 
manipulators can be avoided. Therefore, paths of all manipulators can be planned at the 
same time. 
1.   Introduction 
While using only one robot in a workspace limits the classes of tasks that 
can be performed, more and more multi-robot systems have been considered in 
recent decades [1..6]. For many applications, manipulators are holding an object 
and, together, form a closed linkage, named closed kinematic chains. When 
planning the manipulator motion and the object path, the manipulators should be 
connected to the object so that the closure constraint is satisfied. Thus, the 
complexity of motion and path planning for multi-manipulator systems 
increases significantly from single manipulator systems.  In [1], the motion and 
path planning algorithms of closed kinematic chain manipulator systems are 
divided into three basic approaches: exact motion planning [1, 2], probabilistic 
motion planning [3, 4] and mechanism singularity analysis.  
 This paper proposes a concurrent planning algorithm for chain robot 
systems. The proposed algorithm is composed of two stages of path planning 
                                                          
* This work is supported by National Science Council of Taiwan under grant no. NSC 94-2213-E-
366-011 & NSC 95-2221-E-366 -010. 
† Corresponding author, email: jacoblin@mail.stu.edu.tw.  
 3 
and xi is measured along edge i of the polygon, respectively, and α is a constant. 
The discussion for repulsive torque is similar and is omitted for brevity. 
2.1.   Global Path planning 
For a rough description of the object path, the proposed approach uses one 
or more guide planes (GPs) [8] as final or intermediate goals in the 3-D 
workspace. Similar to the approaches in [8], the GPs provide the object a 
general direction to move forward. A collision-free traversal of a given 
sequence of GPs by the object is regarded as a global solution of the path 
planning problem of cooperative manipulators. In this paper, it is assumed the 
sequence of GPs is given in advance.  
Assuming that a guide plane GPi is given as an intermediate goal, the basic 
path planning procedure for moving the object onto GPi is described below: 
Algorithm of Global Path Planning 
Step 1 Translate the object with distance δi along the direction of attraction of 
the GPi. Find the smallest  such that  corresponds to a feasible and 
collision-free translation. If the object can’t move anymore, go to Step 
5; otherwise, add an intermediate guild plane perpendicular to the 
direction of attraction.  
Step 2 Slide the object without changing its orientation on the GP to minimize 
the potential. Considering the forces exerted on the object, let F be the 
repulsive force exerted on the object due to the repulsion between the 
object and the obstacles. To determine the direction in which the 
object should slide on GP, and thus to reduce the repulsive potential, 
the projection of the resultant force exerted on the object is calculated. 
Step 3 Adjust the object orientation for the minimum potential configuration 
with the fixed position. In Step 3, the object is adjusted in orientation 
while fixed in position. The direction in which the object should rotate 
is determined by the repulsive torque experienced by the object with 
respect to its centroid.  
Step 4 If the object reaches GPi, the planning is completed. Otherwise, go to 
Step 1. 
Step 5 Exit and report that goal is unreachable. 
For path planning involving multiple GPs, the above algorithm will be 
executed for each of them sequentially. It is assumed that the planning for a GP 
starts as the planning of the previous GP is accomplished. The path planning 
ends as the object reach the goal, which is usually a (goal) GP in the path 
planning problems. 
2.2.   Motion Planning Algorithm of Manipulators 
The planning of manipulators can simply be regarded as to finding the 
safest configuration for each robot with fixed-position end-effector and base. 
The proposed concurrently planning algorithm cuts a chain manipulator into two 
 5 
2.4.   Configuration Optimization 
As shown in Fig. 2, the direction to which the distal link should rotate is 
determined by the total repulsive torque experienced by the distal link with 
pivot p. Let f2 be the repulsive force from obstacles exerted on Jn-1 (n=3 in Fig. 
2). The resultant torque experienced by lnkn with respect to p is equal to  
nLn lf ⋅+= 2* ττ     (3) 
where ln is the length of lnkn and f2L is the projection of f2 onto a plane 
perpendicular to lnkn. To find the minimum potential orientation of lnkn, binary 
searches are performed using the projection of τ*n along three orthogonal axes 
of rotation, one axis at a time. After the optimal orientation of lnkn is found, the 
orientations of the rest links are adjusted recursively for connectivity and for 
minimum potential using τ*n-1, τ*n-2...., etc. 
3.   Simulation Results 
In this section, we will carry out computer simulation of path planning 
algorithms regarding multiple robot arms holding an object. The simulating 
platform is based on Windows XP running on a Pentium4 2.8Ghz, 512MB 
RAM PC.   
 In this example we place a narrow passage between two closed spaces. The 
object is in the right space initially. We hope to move it to the left space by two 
five-link manipulators, as shown in Fig. 3(a). Two GPs (bot1 and bot2) are used 
in this example. We first use bot1 to guide the object and the robot arms go 
through the narrow passage, then use bot2 to pull them to the goal position. Fig. 
3(b) and Fig. 3(c) show the partial trajectories of the dual-arm systems. 
 
 
Fig. 3 An example within the narrow passage. (a) Initial configuration. (b) The trajectory of 
robots from start to bot1. (c) The trajectory of robots from bot1 to bot2. 
4.   Conclusions 
The main purpose of this paper is to route the path for multiple robot arms 
holding an object in a three dimensional workspace. The proposed algorithm is 
based upon the generalized potential field model which produces repulsive force 
between obstacles and the robot arms along with the object, assuring that the 
arms and the object will not collide with the obstacles when moving along the 
