 II
摘要 
平行式 GEGA 是結合 GE 和平行的 GA 所建構而成，目的是為了改善應用遙測影像進
行水庫水質的監測。翡翠水庫是台北主要供給水來源，我們沿著翡翠水庫縱向航行，並進
行 Chl-a 濃度之地面真值採樣。經驗式方程式的建構是來自多光譜的 Landsat 7 ETM+之資
料。GE 是一個自動進化演算程式，它會在 Chl-a 觀測數據與影像數據之間自動找到複雜非
線性的關係式。在搭配使用 GA 和 GE 之後，可找到最佳的合適方程式類型，而多個平行
式 GA 在最佳化程序期間可以增進蒐尋的效率，經由 GEGA 和 LMR 之比較，可以發現前
者為較好的模式且估算誤差值較低。 
 
關鍵詞：進化式語法、平行遺傳演算法、水質監測、葉綠素 a、遙測影像 
 
Abstract 
Parallel GEGA was constructed by incorporating grammatical evolution (GE) into the 
parallel genetic algorithm (GA) to improve reservoir water quality monitoring based on remote 
sensing images. A cruise was conducted to ground-truth chlorophyll-a (Chl-a) concentration 
longitudinally along the Feitsui Reservoir, the primary water supply for Taipei City in Taiwan. 
Empirical functions with multiple spectral parameters from the Landsat 7 Enhanced Thematic 
Mapper (ETM+) data were constructed. The GE, an evolutionary automatic programming type 
system, automatically discovers complex nonlinear mathematical relationships among observed 
Chl-a concentrations and remot sensed imageries. A GA was used afterward with GE to optimize 
the appropriate function type. Various parallel subpopulations were processed to enhance search 
efficiency during the optimization procedure with GA. Compared with a traditional linear 
multiple regression (LMR), the performance of parallel GEGA was found to be better than that of 
the traditional LMR model with lower estimating errors. 
 
Keywords：Grammatical evolution, Parallel genetic algorithm, Water quality monitoring, 
Chlorophyll-a, Remote-sensed imagery. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 2
models (Allee & Johnson, 1999). However, nonlinear transfer functions are often found when 
relate water quality variables to the satellite imagery observations (Zhang et al., 2003). Generally, 
sophisticated regression models must go through time-consuming trail and error procedures thus 
the correct regression type can be obtained. Evolutionary algorithms, such as genetic 
programming (GP), have been used with much success for the automatic generation of programs 
or equations between the inputs and outputs. It has an advantage over traditional statistical 
methods because it is distribution free, i.e., no prior knowledge is needed about the statistical 
distribution of the data like the back-propagation network (BPN) (Kishore et al., 2000). 
Nevertheless, it is well known that the BPN is considered as a non-linear black-box model, and it 
is not unusual for it to be criticized as not enhancing our understanding of the physical 
mechanisms because of its complex weighting coefficients and numerous other parameters. 
Chen (2003) pointed out that constructing the data structure of dynamic tree of the genetic 
programming (GP) could be a difficult task while applying GP to estimate the reservoir trophic 
state using remote sensed data. For example, it is hard to choose the proper size of a tree which 
can express a meaningful equation in advance. On the other hand, the newly developed 
grammatical evolution (GE) performs the evolutionary process on a variable-length binary string 
which is more flexible than a dynamic tree structure. A mapping process is employed to generate 
programs in any language by using the binary strings to select production rules (O’Neill & Ryan, 
2001). 
 
4. 研究方法 
4.1 GA 
Genetic algorithms (GAs) originated in the mid 1970s (Holland, 1975) have been developed 
into powerful optimization approach. A principle difference between optimization using a GA 
versus more traditional methods is that the decision space is searched from an entire population 
of potential designs. According to a couple of our previous works, real-coded GAs have 
advantages over binary coded GAs (Chang and Chen, 1998; Chang et al., 2005). Hence, in this 
study, we only considered real-coded GAs. 
 
4.1.1 GA with parallel structure 
The conventional GA is likely to be trapped in a region that does not contain the global 
optimum. This problem, called premature convergence, has been recognized as a serious failure 
mode for GAs (Eshelman & Schaffer, 1991). A multi-population GA divides a single population 
into smaller subpopulations. Each subpopulation evolves by genetic operations in parallel with 
the other, while maintaining a limited but powerful interaction between all subpopulations. The 
most important advantage of subpopulations is the enhanced diversity among the subpopulations 
(Herrera and Lozano, 2000). 
 
4.1.2 Topology of the parallel GA 
A hypercube topology distributed GA, called HDGA, with three dimensions was presented 
in Chen and Chang (2006), as shown in Fig. 1. Each subpopulation uses three genetic operators 
including linear ranking selection, blend crossover and Gaussian mutation. The topology includes 
two important different sides. The front side is devoted to exploration. There are four 
subpopulations E1,…, E4, to which exploratory crossover operators are applied. The exploratory 
degree increases clockwise, starting at the lowest E1, and ending at the highest E4. The other side 
(the rear side) is for exploitation. There are four subpopulations e1,…, e4, and exploitative 
crossover operators are used. The exploitation degree increases clockwise, starting at the lowest 
e1, and finishing at the highest e4. With this structure, a parallel multi-resolution is obtained by 
using the crossover operation, which allows a diversified search (reliability) and an effective local 
tuning (accuracy) to be achieved simultaneously (Fig. 1a). 
 
4.1.3 Refinement and expansion 
In order to improve the reliability and accuracy, two effects are introduced. The first effect is 
“refinement” (Fig. 1b), which makes migrations form an exploratory subpopulation toward 
               | Cos …………………………….……rule 1 
               | Log …………………………….……rule 2 
（4）<var> :: = X  ……………………………….…….rule 0 
            | 1.0 ………………………………………rule 1 
 
4.2.1 Mapping Process(映射處理) 
The genotype is used to map the start symbol onto terminals by reading codons of 8 bits to 
generate a corresponding integer value from which an appropriate production rule is selected by 
using the following mapping function: 
Rule = (codon integer value) MOD (number of rules for the current nonterminal)          (1) 
Considering the following rule, i.e., given the nonterminal op, there are four production rules to 
select from: 
<op> :: = +   ………………………… rule 0 
        | -  ………………………… rule 1 
        | /  ………………………… rule 2 
        |*  ………………………… rule 3 
If we assume the codon being read produces the integer 6, then 
6 MOD 4 = 2 
would select <op> as rule 2:  /. Each time a production rule has to be selected to map from 
a nonterminal, another codon is read. In this way, the system traverses the genome. 
For example, consider the individual in Table 1. There are fourteen 8-bit binary condons in 
one string. The decoding process is described as follows. 
 4
0
(1) First, concentrating on the start symbol <expr>, we can see that there are four productions to 
choose from. To make this choice, we read the first codon from the chromosome “11001000” and 
use it to generate a number “200”. Because the standard decode of the binary 11001000 is  , 
which equals to 200. This number 
will then be used to decide which production rule to use according to Eq. (1) in BNF. Thus, we 
have 200 MOD 4 = 0, meaning we must take the zeroth production, rule (0), so that <expr> is 
now replace with 
7 6 5 4 3 2 11 2 1 2 0 2 0 2 1 2 0 2 0 2 0 2× + × + × + × + × + × + × + ×
<expr><op><expr>. 
(2)Continuing with the first <expr>, i.e., always starting from the leftmost nonterminal, a similar 
choice must be made by reading the next codon value 160 and again using the given formula we 
get 160 MOD 4 = 0 ， i.e., rule 0. The leftmost <expr> will now be replaced with 
<expr><op><expr> to give  
<expr><op><expr><op><expr> 
(3)Again, we have the same choice for the first <expr> by reading the next codon value 206, the 
result being the application of rule 2 to give 
    <pre-op>(<expr>)<op><expr><op><expr>. 
(4)Now, the leftmost <pre-op> will be determined by the codon value 96 that gives us rule 0, 
which is <pre-op> becomes Sin. We have the following:  
    Sin(<expr>)<op><expr><op><expr> 
. 
of the reservoir. 
The Landsat 7 ETM+ image was acquired from the USGS National Center for Earth 
Resources Observation and Science (EROS). Due to an instrument malfunction occurred onboard 
Landsat 7, all image data acquired by the Landsat 7 ETM+ from July 14, 2003 has been collected 
in Scan Line Corrector turned off (SLC-off) mode  (USGS, 2007). We acquired the image in 
level 1G SLC-off mode, that is radiometrically corrected, USGS systematically replace the 
duplicated image data caused by the SLC failure. The Feitsui Reservoir was located in the center 
of the scene that SLC-off had very little affect to the image quality since the SLC-off effects are 
most pronounced along the edge of the scene and gradually diminish toward the center (USGS, 
2007). Since analysis was made for a single image with a quite small angular range, the 
atmospheric correction has little effect on correlation analysis (Zhang et al., 2003). Thus, the 
atmospheric correction was ignored for this clear image. The image was geometrically rectified to 
the TM2 coordinate system with ortho-rectified air photos.  In order to extract the TM data at 
the water sampling locations, the mean value in a 3 by 3 window of the image was used to 
represent the ground point. 
Landsat 7 ETM+ bands 1, 2, 3, 4, 5, 7 are optical bands, recording electro-magnetic 
radiation from 0.45 to 2.35 micrometers, providing visible, near infrared, to mid-infrared 
responses of the land surface. The properties of these six bands were shown in Table 2.  Landsat 
7 ETM+ band 6 is unique among the various bands in that it shows the emitted radiation from a 
surface in the thermal region of the spectrum, it is not suitable to perform classification with other 
bands. Allee and Johnson (1999) used band 1 to 5 and 7 of Landsat 7 ETM+ to estimate surface 
chlorophyll a for each sampling site in Bull Shoals Reservoir, USA, which is also classified as an 
oligo-mesotrophic level of productivity. Those are the same input bands used in this study based 
on similar trophic states on both reservoirs. Besides, the correlation coefficient, R, between the 
different ETM+ bands and water quality parameters of Chl-a ranged from 0.487 to 0.740 are all 
obviously significant, especially for band 4 and 7. Therefore, all these six bands 1~5 and 7 except 
band 6 were used as input variables to estimate Chl-a. 
The image classification was performed by the unsupervised classification algorithm named 
Iterative Self-Organizing Data Analysis Technique (ISODATA) using software ERDAS Image 
v8.6. The classification result classified the Chl-a of water body as six levels in this reservoir was 
shown in Fig. 5. Most of these pixels were classified into the sixth level (the highest Chl-a values) 
located on the middle areas of reservoir. 
 
5.4 Estimation the chlorophyll-a of reservoir 
5.4.1 Using Linear Multi-regression Method 
To map the spatial variation of water quality parameters in the reservoir with remotely 
sensed images, empirical relationship between digital numbers of the preprocessed image bands 
and Chl-a was established using the simplest type of linear multi-regression (LR) method 
initially. 
This model utilized ETM+ bands 1 to 5, and 7 was given by: 
 
)7(235.0)5(108.0)4(13.0)3(041.0)2(031.0)1(022.0483.4 BBBBBBaChl −+−−++=−               (2)  
 
Then, the result of using ETM+ bands through logarithmic transformation was also 
presented as follows: 
 
17.239 2.593 ( 1) 0.111 ( 2) 0.191ln( 3) 0.961 ( 4) 0.347 ( 5) 1.473 ( 7)LNChl a LN B LN B B LN B LN B LN B− = − + + − + −   (3) 
 
The correlation coefficients, R, of Equ. (2) and Equ. (3) are 0.823 and 0.765 respectively. 
The other statistical parameters including the sum of square errors (SSE), and root mean square 
errors (RMSE) of the above two equations are shown in Table 3. Obviously, the transformation 
did not improve the retrieval accuracy than that of simple regression analysis significantly. Since 
nonlinear relationships may exist between the inputs and outputs, it is necessary to use a more 
advanced automatic programming and optimization model, such as GEGA to fit the complex 
 6
 8
by both methods. Besides, the tendency of distributions of Chl-a were coincident with the 
classification imagery (Fig.5) described in section 4.3. However, the maximum and minimum 
values of Chl-a generated by the parallel GEGA are closer to the ground observations than those 
of the LMR. The statistical properties of the 6677 estimated Chl-a values by these two methods 
are shown in Table 5. The trophic state of the water body in reservoir had a wider representation 
by the parallel GEGA than LMR. 
 
6. 結論與建議 
The main contribution of this paper is to provide a new parallel GEGA algorithm, which 
creates potentials to monitor chlorophyll-a level in specific time frame and reservoir. It can deal 
easily with nonlinear transfer problems between remote sensed imagery and water quality in 
reservoir and is shown to be very efficient and robust optimization tool. However, variability in 
species structure of phytoplankton assemblage may generate different optical spectrum, even in 
Feitsui Reservoir, there are slight seasonal changes in phytoplankton community. Therefore, 
through all the procedures described above in the text including the field data collection and 
remote sensed imagery process, this newly developed method is flexibly applied to other 
reservoirs. 
 
7. 參考文獻 
1. Allee, R.J. and Johnson, J.E. (1999) Use of satellite imagery to estimate surface chlorophyll 
a and secchi disc depth of bull shoals reservoir, Arkansas, USA. International Journal of 
Remote Sensing 20 (6), 1057-1072. 
2. APHA (American Public Health Association) (1992) Standard methods for the examination 
of water and wastewater. 16th edition (Washington, DC: American Public Health 
Association). 
3. Carlson, R.E. (1977) A trophic state index for lakes. Limnology and Oceanography 22 (2), 
361-369. 
4. Chang, F.J. and Chen, L. (1998) Real-coded genetic algorithm for rule-based flood control 
reservoir management. Water Resource Management 12, 185-198.  
5. Chang, F.J. Chen, L. and Chang, L.C. (2005) Optimizing the reservoir operation rule curves 
by genetic algorithms. Hydrological Processes 18, 2277-2289.  
6. Chen, L. (2003) A study of applying genetic programming to reservoir trophic state 
evaluation using remote sensor data. International Journal of Remote Sensing 24 (11), 
2265-2275. 
7. Chen, L. and Chang, F.J. (2006) Applying real-coded multi-population genetic algorithm to 
multi-reservoir operation. Hydrological Processes 21, 688-698. 
8. Dekker, A.G. Vos, R.J. and Peters, S.W.M. (2002) Analytical algorithms for lake water TSM 
estimation for retrospective analyses of TM and SPOT sensor data. International Journal of 
Remote Sensing 23, 15-35. 
9. Elseth, G.D. and Baumgardner, K.D. (1995) Principles of Modern Genetics. St. Paul, MN: 
West. 
10. Eshelman, L.J. and Schaffer, J.D. (1991) Preventing premature convergence in genetic 
algorithms by preventing incest. in proc 4th International Conference Genetic Algorithms. R. 
Belew and L. B. Booker. Fads. San Marco, CA, Morgan Kaufmann.115-122. 
11. Harrington, J.A. Schifebe, F.R. and Nix, W.E. (1992) Determination of phytoplankton 
chlorophyll concentrations in the Chesapeake Bay with aircraft remote sensing. Remote 
Sensing of Environment 40, 79-100. 
12. Herrera, F. and Lozano, M. (2000) Gradual distributed real-coded genetic algorithms. IEEE 
Transactions on Evolutionary Computation 4 (1), 43-63. 
13. Holland, J.H. (1975) Adaptation in natural and artificial systems, Ann Arbor, MI, The 
University of Michigan Press. 
14. Kishore, J.K. Patnaik, L.M. Mani, V. and Agrawal, V.K. (2000) Application of genetic 
programming for multicategory pattern classification. IEEE Transactions on Evolutionary 
Computation 4 (3), 242-257. 
  10
e4 e1 
E4 E1
e2 e3 
E2E3 
e4 e1 
E4 E1
e2 e3 
E2E3 
Rear Side (Exploitation) 
 e4 e1 
 
E4 E1
e2 e3 
E2E3 
＜ 
＞ + - 
＞+ - 
 
 
 
 
 
 
 ＜
 
 
 
 Front Side （Exploration） 
 
 
(a) Basic topology 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(b) Refinement 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                         (c) Expansion 
 
Fig. 1. Structure of an HDGA: (a) basic topology; (b) refinement; (c) expansion. 
 
308000 310000 312000 314000 316000 318000 320000
TM2 Easting (m)
2754000
2756000
2758000
2760000
TM
2 
N
or
th
in
g 
(m
)
0.4
0.6
0.8
1.0
1.2
1.4
1.6
1.8
2.0
2.2
2.4
2.6
2.8
3.0
3.2
3.4
3.6
3.8
4.0
4.2
4.4
 
 
Fig. 6. Chlorophyll-a concentration 
distribution of the reservoir by LMR (Equ.(2)) 
 Fig. 3. The flowchart of GE combined with 
GA 
308000 310000 312000 314000 316000 318000 320000
TM2 Easting (m)
2754000
2756000
2758000
2760000
TM
2 
N
or
th
in
g 
(m
)
0.4
0.6
0.8
1.0
1.2
1.4
1.6
1.8
2.0
2.2
2.4
2.6
2.8
3.0
3.2
3.4
3.6
3.8
4.0
4.2
4.4
 
 
 
Fig. 4. The 24 sampling sites of Feitsui 
Reservoir in Taiwan 
Fig. 7. Chlorophyll-a concentration 
distribution of the reservoir by parallel GEGA 
(Equ.(5))  
308000 310000 312000 314000 316000 318000 320000
TM2 Easting (m)
2754000
2756000
2758000
2760000
TM
2 
N
or
th
in
g 
(m
)
0
1
1
2
2
3
level 6
level 5
level 4
level 3
level 2
level 1
 
Fig. 5. Six levels of chlorophyll-a 
concentration by ISODATA classification 
 
Table1. Example of each codon converted into corresponding BNF grammar 
No. 8-bit binary codon Integer value Mapping function BNF grammars
1 11001000 200 200 MOD 4 = 0 <expr><op><expr>
2 10100000 160 160 MOD 4 = 0 <expr><op><expr><op><expr>
3 11001110 206 206 MOD 4 = 2 <pre-op>(<expr>)<op><expr><op><expr>
4 01100000 96   96 MOD 3 = 0 Sin(<expr>)<op><expr><op><expr>
5 00011011 27   27 MOD 4 = 3 Sin(<var>)<op><expr><op><expr>
6 01001000 72   72 MOD 2 = 0 Sin(X)<op><expr><op><expr>
7 01101011 107 107 MOD 4 = 3 Sin(X)*<expr><op><expr>
8 00111110 62   62 MOD 4 = 2 Sin(X)*<pre-op>(<expr>)<op><expr>
9 00010110 22   22 MOD 3 = 1 Sin(X)*Cos(<expr>)<op><expr>
10 00110111 55   55 MOD 4 = 3 Sin(X)*Cos(<var>)<op><expr>
11 01011000 88   88 MOD 2 = 0 Sin(X)*Cos(X)<op><expr>
12 01100100 100 100 MOD 4 = 0 Sin(X)*Cos(X)+<expr>
13 11001011 203 203 MOD 4 = 3 Sin(X)*Cos(X)+<var>
14 00101001 41   41 MOD 2 = 1 Sin(X)*Cos(X)+1.0  
 12
