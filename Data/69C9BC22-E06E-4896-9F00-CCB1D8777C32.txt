scale applications that require more computing and 
storage resources. In order to facilitate users to 
easily manipulate data stored in Cloud, how to design 
and implement a file management system for Cloud 
computing becomes a crucial issue. 
In this project, we attempt to develop a file and 
storage management system for cloud computing, in the 
development of the file management system, we will 
face the heterogeneity, reliability and performance 
problems. In last year, we have developed a prototype 
of the distributed file management system. We will 
continue improving the functionalities of the file 
and storage management system. There are three major 
components provided in this system: (1) Distributed 
File Management System: manages distributed storage 
resources to provide a uniform interface to access 
data stored in Cloud so that users or applications 
can exploit the system as the same as using local 
file system； (2) Distributed Storage Management 
System: manages storage resources distributed 
geographically to become a virtualized, reliable and 
large storage space； and (3) Distributed File 
Management Service: encapsulates underlying file and 
storage management functions as software services 
through which external software components can 
manipulate data stored in the system. In addition, we 
also consider the non-functional requirements of the 
file management in Cloud, including high-throughput 
data transfer, virtual file system interface, replica 
management, fault tolerance, data protection and QoS, 
so as to make users use our system with efficient, 
reliable and qualified support. 
英文關鍵詞： Cloud computing, distributed file management, 
distributed storage management, high-throughput data 
transfer, fault tolerance, data protection, and 
quality of service 
 
  II
中 文 摘 要  
近 年 來 著 名 資 訊 大 廠 紛 紛 採 用 雲 端 運 算 的 概 念 ， 提 供 從 底 層 基 礎 設 施 到 上 層 應
用 程 式 服 務 的 技 術 與 平 台 ， 使 用 者 除 了 可 以 使 用 平 台 所 提 供 的 網 際 網 路 應 用 程 式 服
務 外 ， 還 可 以 利 用 平 台 所 提 供 的 強 大 資 源 執 行 需 要 大 量 運 算 與 儲 存 資 源 的 應 用 程
式 。 為 了 讓 使 用 者 能 夠 在 雲 端 運 算 平 台 上 存 取 大 量 的 資 料 ， 分 散 式 檔 案 管 理 系 統 扮
演 非 常 重 要 的 角 色 。  
本 計 畫 將 針 對 雲 端 運 算 平 台 發 展 其 上 的 檔 案 資 料 管 理 系 統 ， 因 為 儲 存 資 源 是 由
不 同 地 區 的 教 育 與 研 究 單 位 所 管 理 ， 因 此 在 開 發 檔 案 儲 存 管 理 系 統 時 ， 將 面 臨 到 資
源 異 質 性 、 跨 越 叢 集 電 腦 界 限 以 及 資 源 可 靠 度 等 問 題 。 此 外 由 於 實 體 資 源 在 雲 端 上
都 被 虛 擬 化 成 虛 擬 的 資 源 ， 雲 端 運 算 平 台 底 層 實 體 的 資 訊 也 因 為 虛 擬 化 的 關 係 無 法
利 用 現 有 的 工 具 做 準 確 的 量 測 ， 進 而 增 加 最 佳 化 的 困 難 度 。 本 系 統 主 要 包 含 三 個 模
組 ： (1)分 散 式 檔 案 管 理 系 統 ： 管 理 分 散 在 各 地 的 儲 存 系 統 ， 提 供 一 個 一 致 的 檔 案
管 理 介 面 ， 讓 使 用 者 或 應 用 程 式 在 使 用 此 系 統 時 就 如 同 使 用 本 地 端 電 腦 的 檔 案 系 統
一 般 ； (2)分 散 式 儲 存 管 理 系 統 ： 管 理 分 散 各 地 的 儲 存 裝 置 以 提 供 一 個 虛 擬 化 的 、
可 靠 的 、 可 以 儲 存 大 量 資 料 的 儲 存 空 間 ； (3)分 散 式 檔 案 管 理 服 務 ： 將 底 層 檔 案 管
理 與 儲 存 管 理 的 功 能 包 裝 成 標 準 的 軟 體 服 務 ， 讓 其 他 外 部 的 軟 體 元 件 可 以 透 過 標 準
的 介 面 與 協 定 使 用 本 計 畫 所 提 供 的 檔 案 管 理 與 儲 存 管 理 服 務 。 本 計 畫 還 將 針 對 檔 案
儲 存 管 理 非 功 能 性 的 需 求 ， 例 如 高 效 能 傳 輸 、 系 統 容 錯 、 資 料 保 密 以 及 服 務 品 質 等
需 求 進 行 研 發 ， 以 提 升 使 用 者 對 雲 端 運 算 檔 案 管 理 系 統 的 滿 意 度 。  
基 於 前 期 的 研 發 成 果 ， 本 期 除 了 強 化 前 期 所 建 置 的 分 散 式 檔 案 系 統 ， 還 將 研 發
下 列 系 統 與 方 法 ： 將 檔 案 與 儲 存 管 理 功 能 服 務 化 、 實 作 虛 擬 檔 案 系 統 (Virtual File 
System, VFS)介 面 、 高 通 量 (high-throughput)檔 案 區 塊 傳 輸 機 制 、 檔 案 區 塊 推 進
(staging)機 制 、 具 QoS 保 證 的 檔 案 區 塊 傳 輸 機 制 、 損 壞 偵 測 與 修 復 機 制 等 ， 以 提 升
系 統 效 能 與 可 靠 性 。  
 
關 鍵 詞 ： 雲 端 運 算 、 分 散 式 檔 案 管 理 、 分 散 式 儲 存 管 理 、 高 通 量 資 料 傳 輸 、 系 統 容  
錯 、 資 料 保 密 、 服 務 品 質  
  1
一 、 前 言  
  隨 著 資 訊 與 應 用 領 域 對 電 腦 運 算 能 力 和 資 料 儲 存 空 間 的 需 求 與 日 俱 增 ， 近 年 來
著 名 資 訊 大 廠 如 Google、 Amazon、 Yahoo、 Microsoft、 IBM、 Sun 與 HP 等 紛 紛 採
用 雲 端 運 算 (Cloud Computing)的 概 念 ， 提 供 從 底 層 基 礎 設 施 到 上 層 應 用 程 式 服 務 的
技 術 與 平 台 。 雲 端 運 算 利 用 網 路 將 分 散 各 地 的 計 算 與 儲 存 資 源 整 合 成 虛 擬 化 的 超 級
運 算 平 台 ， 使 用 者 除 了 可 以 使 用 平 台 所 提 供 的 網 際 網 路 應 用 程 式 服 務 之 外 ， 還 可 以
利 用 平 台 所 提 供 的 強 大 資 源 執 行 需 要 大 量 運 算 與 儲 存 資 源 的 應 用 程 式 。 為 了 讓 使 用
者 存 取 雲 端 運 算 平 台 上 的 檔 案 資 料 ， 分 散 式 檔 案 管 理 (Distributed File Management 
System)扮 演 非 常 重 要 的 角 色 。 分 散 式 檔 案 管 理 對 上 提 供 使 用 者 透 通 的 (transparent)
操 作 介 面 ， 以 存 取 與 管 理 使 用 者 的 資 料 ， 使 用 者 不 需 了 解 底 層 實 體 儲 存 設 備 的 配
置 ； 對 下 整 合 分 散 的 儲 存 資 源 提 供 一 個 虛 擬 化 如 同 本 地 端 硬 碟 的 檔 案 管 理 系 統 。  
  由 於 網 路 速 度 與 穩 定 度 的 提 升 以 及 日 益 便 宜 的 硬 碟 價 格 ， 許 多 線 上 檔 案 儲 存
(online file storage) 服 務 相 繼 出 現 ， 如 Microsoft SkyDrive[2] 、 ADrive[3] 與
SugarSync[4]等 。 線 上 檔 案 儲 存 服 務 帶 來 的 優 點 是 不 管 使 用 者 在 何 處 都 可 以 透 過 瀏
覽 器 管 理 存 放 在 線 上 儲 存 空 間 裡 的 檔 案 資 料 ， 不 須 帶 著 電 腦 到 處 跑 。 儘 管 目 前 線 上
檔 案 儲 存 服 務 有 上 述 的 優 點 ， 然 而 當 使 用 線 上 儲 存 服 務 的 應 用 領 域 轉 移 到 需 要 大 量
運 算 與 大 量 儲 存 空 間 的 應 用 程 式 時 ， 現 有 大 部 分 的 線 上 儲 存 服 務 仍 不 符 需 求 ， 其 主
要 的 原 因 是 大 部 分 的 線 上 檔 案 儲 存 服 務 所 提 供 的 儲 存 空 間 仍 有 限 ， 對 於 一 般 使 用 者
來 說 或 許 已 經 足 夠 ， 然 而 對 於 企 業 或 科 學 層 級 的 應 用 仍 顯 不 足 。 大 部 分 的 線 上 檔 案
儲 存 服 務 也 缺 乏 與 應 用 程 式 整 合 的 介 面 ， 僅 提 供 網 際 網 路 介 面 讓 使 用 者 透 過 瀏 覽 器
存 取 檔 案 資 料 ， 然 而 當 企 業 或 科 學 層 級 的 應 用 程 式 部 屬 到 雲 端 時 ， 線 上 檔 案 儲 存 服
務 必 須 提 供 更 完 善 的 應 用 程 式 介 面 給 雲 端 上 的 應 用 程 式 使 用 。 此 外 由 於 大 部 分 線 上
檔 案 儲 存 服 務 的 使 用 對 象 是 一 般 使 用 者 ， 對 於 檔 案 資 料 存 取 的 效 能 需 求 比 較 不 嚴
格 ， 然 而 當 服 務 的 對 象 轉 換 成 雲 端 上 的 企 業 或 科 學 應 用 程 式 時 ， 檔 案 資 料 的 存 取 效
能 、 可 靠 度 與 服 務 品 質 將 對 應 用 程 式 整 體 的 執 行 效 率 有 重 要 的 影 響 。  
  另 一 方 面 ， 不 同 於 現 有 大 部 分 雲 端 運 算 平 台 部 屬 在 集 中 式 的 資 料 中 心 ， 例 如
Google Apps Engine[5]、 Amazon Elastic Compute Cloud(EC2)[6]與 Microsoft Azure[7]
等 ， 本 計 畫 的 發 展 目 標 為 整 合 分 散 在 台 灣 各 地 的 教 育 與 研 究 單 位 的 計 算 與 儲 存 資
源 ， 成 為 一 個 分 散 式 的 雲 端 運 算 平 台 ， 讓 有 意 從 事 雲 端 運 算 技 術 相 關 研 究 及 應 用 的
單 位 ， 有 一 個 雲 端 運 算 實 驗 平 台 ， 執 行 需 要 大 量 計 算 與 儲 存 資 源 的 應 用 程 式 與 研 究
實 驗 。 然 而 也 因 為 分 散 的 關 係 ， 計 算 與 儲 存 資 源 是 由 不 同 地 區 的 教 育 與 研 究 單 位 所
管 理 ， 因 此 在 開 發 檔 案 儲 存 管 理 服 務 時 ， 將 面 臨 到 資 源 異 質 性 、 跨 越 叢 集 電 腦 界 限
以 及 資 源 可 靠 度 等 問 題 。 此 外 由 於 實 體 資 源 在 雲 端 上 都 被 虛 擬 化 成 虛 擬 的 資 源 ， 雲
端 運 算 平 台 底 層 實 體 的 資 訊 也 因 為 虛 擬 化 的 關 係 無 法 利 用 現 有 的 工 具 做 準 確 的 量
測 ， 進 而 增 加 最 佳 化 的 困 難 度 。 因 此 當 我 們 在 設 計 與 發 展 檔 案 管 理 服 務 中 的 資 料 傳
輸 、 複 本 管 理 、 系 統 容 錯 、 資 料 保 密 以 及 服 務 品 質 等 機 制 時 ， 相 較 於 集 中 式 雲 端 運
算 平 台 ， 必 須 考 慮 更 多 因 素 也 更 為 複 雜 。  
  3
二 、 研 究 目 的  
  我 們 將 針 對 雲 端 運 算 平 台 發 展 其 上 的 檔 案 資 料 管 理 服 務 ， 為 了 能 夠 提 供 雲 端 運
算 所 需 的 檔 案 管 理 服 務 ， 我 們 將 發 展 分 散 式 的 檔 案 管 理 系 統 (Distributed File 
Management)、 分 散 式 儲 存 管 理 系 統 (Distributed Storage Management)與 分 散 式 檔 案
管 理 服 務 (Distributed File Management Services)。 分 散 式 檔 案 管 理 系 統 主 要 的 工 作 是
管 理 分 散 在 各 地 的 儲 存 系 統 ， 提 供 一 個 一 致 的 檔 案 管 理 介 面 ， 讓 使 用 者 或 應 用 程 式
在 使 用 此 系 統 時 就 如 同 使 用 本 地 端 電 腦 的 檔 案 系 統 一 般 。 同 時 ， 我 們 還 將 開 發 分 散
式 儲 存 管 理 系 統 ， 其 主 要 的 功 能 是 管 理 分 散 各 地 的 儲 存 裝 置 以 提 供 一 個 虛 擬 化 的 、
可 靠 的 、 可 以 儲 存 大 量 資 料 的 儲 存 空 間 。 此 外 本 計 畫 還 將 開 發 分 散 式 檔 案 管 理 服
務 ， 將 底 層 檔 案 管 理 與 儲 存 管 理 的 功 能 包 裝 成 標 準 的 軟 體 服 務 ， 讓 其 他 外 部 的 軟 體
元 件 可 以 透 過 標 準 的 介 面 與 協 定 使 用 本 計 畫 所 提 供 的 檔 案 管 理 與 儲 存 管 理 服 務 。  
  除 了 提 供 功 能 性 的 服 務 外 ， 本 計 畫 還 將 針 對 檔 案 儲 存 管 理 非 功 能 性 的 需 求 ， 例
如 高 效 能 資 料 傳 輸 [8, 9, 10]、 複 本 管 理 [11, 12, 13]、 系 統 容 錯 [14, 15, 16]、 資 料 保 密
[17]、 資 料 存 取 之 服 務 品 質 等 需 求 進 行 研 發 ， 以 提 升 使 用 者 對 雲 端 運 算 檔 案 管 理 系
統 的 滿 意 度 。 本 計 畫 將 依 自 由 軟 體 授 權 精 神 公 開 原 始 碼 ， 並 採 用 軟 體 工 程 中
light-weight CMMI 的 精 神 來 進 行 計 畫 流 程 與 品 質 管 理 ， 以 便 整 合 運 用 研 究 成 果 ，
並 提 升 軟 體 的 品 質 。  
  5
檔 案 主 要 存 放 在 遠 端 的 檔 案 伺 服 器 ， 使 用 者 在 管 理 檔 案 時 ， 不 需 要 知 道 檔
案 真 實 的 存 放 機 器 與 位 置 。 主 從 式 檔 案 系 統 的 優 點 是 實 作 簡 單 與 安 全 。 由
於 所 有 檔 案 都 存 放 在 檔 案 伺 服 器 裡 ， 為 了 能 夠 提 升 檔 案 的 存 取 效 率 與 可 靠
度 ， 檔 案 伺 服 器 通 常 被 規 劃 成 叢 集 電 腦 的 模 式 ， 並 將 單 一 檔 案 分 散 在 多 個
伺 服 器 中 存 放 。 然 而 主 從 式 檔 案 管 理 系 統 仍 有 先 天 上 的 限 制 ， 由 於 所 有 的
檔 案 是 存 放 在 檔 案 伺 服 器 裡 ， 意 味 著 當 使 用 需 求 不 斷 的 成 長 時 ， 檔 案 伺 服
器 的 網 路 頻 寬 、 儲 存 空 間 與 處 理 能 力 ， 將 成 為 系 統 的 效 能 瓶 頸 。 此 外 檔 案
伺 服 器 以 集 中 式 的 管 理 容 易 產 生 單 一 點 損 壞 (Singlg point of failure)的 問
題 ， 雖 然 為 了 提 升 檔 案 伺 服 器 的 可 靠 度 可 以 採 用 檔 案 伺 服 器 複 製 (server 
replication)的 技 術 ， 然 而 會 增 加 管 理 的 成 本 與 複 雜 度 。  
l 點 對 點 檔 案 儲 存 系 統 ： 點 對 點 (peer to peer)技 術 的 出 現 ， 例 如 Chord、
Gnutella、 Freenet 與 Pastry 等 ， 使 得 資 源 可 以 直 接 的 點 對 點 分 享 ， 不 需 透
過 中 央 伺 服 器 的 控 制 ， 在 這 樣 的 架 構 下 所 有 加 入 的 成 員 都 是 平 等 的 。 點 對
點 架 構 的 主 要 優 點 讓 所 有 的 用 戶 端 都 能 提 供 資 源 ， 包 括 頻 寬 ， 存 儲 空 間 和
計 算 能 力 。 因 此 當 有 節 點 加 入 且 對 系 統 請 求 增 多 ， 整 個 系 統 的 容 量 也 增
大 ， 這 是 傳 統 的 主 從 式 架 構 所 不 能 達 到 的 。 目 前 常 見 利 用 點 對 點 技 術 所 開
發 的 分 散 式 檔 案 儲 存 管 理 系 統 有 CFS、 Ivy、 PAST 與 OceanStore 等 。 CFS
與 Ivy 是 利 用 Chord 的 技 術 將 一 個 單 一 檔 案 切 割 成 多 個 小 區 塊 ， 再 將 分 個
的 區 塊 分 散 到 不 同 的 存 儲 節 點 存 放 。 PAST 採 用 Pastry 提 供 檔 案 儲 存 管
理 ， 當 新 檔 案 加 入 時 ， 該 檔 案 會 被 重 製 成 多 份 複 本 存 放 到 不 同 的 存 儲 節 點
上 ， 而 不 被 切 割 。 OceanStore 採 用 的 點 對 點 技 術 為 Tapestry， Tapestry 基
本 上 的 運 作 與 Pastry 類 似 。 OceanStore 利 用 erasure coding 的 方 法 將 檔 案
資 料 區 塊 進 行 編 碼 ， 並 散 佈 到 分 散 的 存 儲 節 點 上 。 儘 管 點 對 點 檔 案 儲 存 系
統 有 著 可 靠 、 具 備 規 模 可 變 性 (scalable)以 及 自 我 修 復 等 優 點 ， 然 而 此 類 型
的 系 統 大 都 架 構 在 實 體 儲 存 資 源 上 ， 當 分 散 式 計 算 平 台 轉 換 到 雲 端 上 時 ，
由 於 所 有 的 資 源 都 經 過 虛 擬 化 ， 使 得 現 有 的 點 對 點 檔 案 儲 存 管 理 技 術 必 須
針 對 這 樣 的 改 變 做 重 新 的 調 整 與 設 計 。  
l 雲 端 檔 案 儲 存 管 理 系 統 ： 近 年 來 隨 著 雲 端 運 算 的 崛 起 ， 有 許 多 支 援 雲 端 運
算 的 檔 案 儲 存 管 理 系 統 相 繼 被 提 出 。 Hadoop 為 Apache 針 對 Google 檔 案
系 統 的 Java 版 本 實 作 ， 用 以 支 援 雲 端 運 算 的 檔 案 儲 存 管 理 系 統 ， 可 以 讓
使 用 者 很 容 易 地 開 發 和 處 理 大 量 資 料 的 應 用 程 式 。 在 Hadoop 中 有 一 個 主
節 點 和 多 個 資 料 節 點 ， 使 用 者 在 執 行 檔 案 管 理 的 操 作 ， 先 需 與 主 節 點 溝
通 ， 獲 得 檔 案 操 作 的 資 訊 ， 然 後 與 資 料 節 點 互 動 ， 進 行 實 際 資 料 的 傳 輸 。
而 CloudStore 是 Kosmix 針 對 Google 檔 案 系 統 的 實 作 ， 提 供 與 Hadoop 類
似 的 檔 案 管 理 功 能 ， 不 同 於 Hadoop 的 是 CloudStore 採 用 C++程 式 開 發 語
言 。 Hadoop 與 CloudStore 的 限 制 是 只 支 援 叢 集 電 腦 範 圍 內 的 操 作 ， 即 限
制 在 區 域 網 路 內 運 作 ， 無 法 提 供 跨 越 多 個 叢 集 電 腦 界 限 的 檔 案 管 理 功 能 ，
此 外 由 於 所 有 檔 案 的 metadata 存 放 在 主 節 點 上 ， 當 主 節 點 損 壞 整 個 系 統
  7
四 、 研 究 方 法  
  在 本 計 畫 中 ， 我 們 將 以 點 對 點 (Peer-to-Peer)的 方 式 建 構 分 散 式 檔 案 系 統 ， 整 體
架 構 如 圖 一 所 示 。 本 系 統 分 成 三 大 部 分 ， 分 別 是 Core、 Service 和 Client。 Client 提
供 本 系 統 所 實 做 的 使 用 者 介 面 ， 使 用 者 可 以 將 基 本 檔 案 系 統 的 操 作 輸 入 在 此 使 用 者
介 面 ， 並 由 Client 送 至 本 系 統 的 Core 進 行 處 理 Core 則 是 負 責 接 收 Client 送 過 來 的
命 令 (Command)， 並 將 此 命 令 透 過 Overlay network 送 至 相 對 應 的 Service 做 處 理 。
其 中 Core 的 部 分 又 分 為 Node、 Peer 和 Initiator。 Node 是 負 責 本 系 統 routing 的 機
制 ， 將 Peer 的 請 求 (request)傳 到 適 當 的 主 機 (host)， 在 本 計 畫 中 我 們 使 用 FreePastry
當 作 我 們 點 對 點 (Peer-to-Peer)的 網 路 架 構 。 而 Peer 是 負 責 溝 通 Initiator 和 Client 的
要 件 ， 負 責 接 收 Initiator 傳 送 過 來 的 命 令 ， 並 將 此 命 令 傳 送 至 本 機 服 務 端 相 對 應 的
服 務 (Service)上 ， 並 且 傳 送 與 接 收 命 令 到 遠 地 的 服 務 端 (Remote Service)。 Initiator
主 要 負 責 傳 送 訊 息 (Message)給 服 務 端 (Service)， 他 會 詢 問 Peer， 本 地 的 服 務 端 所 使
用 的 Port 是 多 少 ， 並 使 用 此 Port 去 與 本 地 的 服 務 端 進 行 連 線 。 Service 是 主 要 提 供
本 系 統 的 功 能 性 ， 在 本 系 統 我 們 依 功 能 性 的 區 別 實 作 出 四 種 不 同 的 服 務 (service)，
分 別 是 metadata service、 data service、 account service 和 group service。 每 一 個 service
都 有 自 己 獨 立 運 作 的 程 序 (process)， 因 此 ， 當 一 個 服 務 需 要 升 級 或 是 毀 損 時 ， 並 不
會 影 響 其 他 服 務 的 運 作 ， 並 且 在 日 後 ， 若 本 系 統 需 要 增 加 其 他 類 型 的 服 務 ， 也 不 需
要 關 閉 整 個 系 統 ， 就 可 直 接 增 加 ， 這 樣 可 以 增 加 本 系 統 的 獨 立 性 (Isolation)、 彈 性
(Flexibility)和 可 擴 增 性 (Extensibility)。  
 
圖 一 ： 分 散 式 檔 案 管 理 系 統 架 構 圖  
l 檔 案 複 製 (Replication)技 術 :在 系 統 的 設 計 上 ， 我 們 使 用 檔 案 複 製 (Replication)
的 技 術 ， 將 每 份 檔 案 資 料 ， 除 了 放 在 本 地 端 外 ， 還 複 製 在 其 他 台 機 器 中 ， 以 滿
足 當 本 機 端 毀 損 時 ， 仍 可 到 其 他 機 器 上 存 取 相 關 的 檔 案 資 料 ， 以 滿 足 系 統 的 可
靠 度 (Reliability)和 錯 誤 容 忍 (Fault Tolerance)。  
l 高 效 能 資 料 傳 輸 技 術 :在 分 散 式 的 檔 案 系 統 中 ， 檔 案 傳 輸 的 效 能 是 需 要 被 重 視
  9
五 、  結 果 與 討 論  
  在 本 計 畫 中 ， 我 們 設 計 並 開 發 了 一 個 分 散 式 檔 案 系 統 ， 以 滿 足 大 量 計 算 資 源 的
需 求 。 透 過 點 對 點 (Peer-to-Peer)和 檔 案 複 製 (Replication)的 方 式 ， 本 系 統 達 到 許 多 分
散 式 檔 案 系 統 的 目 標 ， 例 如 ： 規 模 可 變 性 (Scalability)、 系 統 可 靠 度 (Reliability)、 資
料 可 利 用 性 (Availability)， 以 下 將 說 明 我 們 的 實 驗 數 據 ， 來 驗 證 我 們 研 究 的 目 標 。  
  為 得 知 本 系 統 在 metadata service 的 規 模 可 變 性 ， 我 們 測 量 在 不 同 metadata 
service 數 量 中 ， 建 立 (create)一 個 目 錄 所 需 的 時 間 ， 如 圖 二 所 示 。 從 圖 二 中 我 們 發
現 ， 當 metadata service 的 數 量 增 加 時 ， 建 立 一 個 目 錄 所 花 的 時 間 仍 維 持 一 定 ， 代
表 我 們 的 系 統 滿 足 規 模 可 變 性 。  
 
 
圖 二 ： metadata service 數 量 的 影 響  
 
  另 外 我 們 測 量 本 系 統 在 不 同 目 錄 深 度 中 ， 建 立 一 個 目 錄 所 花 費 的 時 間 ， 如 圖 三
所 示 。 從 此 實 驗 中 我 們 發 現 當 目 錄 深 度 增 加 時 ， 不 會 影 響 建 立 一 個 目 錄 的 時 間 ， 所
以 從 這 裡 可 以 驗 證 本 系 統 在 目 錄 深 度 規 模 可 變 性 。  
 
  11 
統 具 備 在 目 錄 數 量 的 規 模 可 規 模 性 (Scalability)。  
 
 
圖 五 ： 目 錄 數 量 對 列 表 操 作 的 影 響 (無 快 取 ) 
 
 
圖 六 ： 目 錄 數 量 對 列 表 操 作 的 影 響 (有 快 取 ) 
  13
參 考 文 獻  
[1] Brian Hayes, “  Cloud Computing,”  Communications of the ACM, Vol. 51, No. 7, 
July 2008.1. 
[2] SkyDrive, http://skydrive.live.com/.  
[3] ADrive, http://www.adrive.com/. 
[4] SugarSyn, https://www.sugarsync.com/. 
[5] Google Apps Engine, http://code.google.com/intl/zh-TW/appengine/. 
[6] Amazon EC2, http://aws.amazon.com/ec2/. 
[7] Windows Azure Platform, http://www.microsoft.com/windowsazure/products/. 
[8] J. H. Howard, M. L. Kazar, S. G. Menees, D. A. Nichols, M. Satyanarayanan, R. N. 
Sidebotham and M. J.West, “  Scale and performance in a distributed file 
system,”  ACM Transactions on Computer Systems, Vol. 6, No.1 , 1988. 
[9] P. H. Carns , W. B. Ligon III , R. B. Ross and R. Thakur, “  PVFS: A Parallel File 
System for Linux Clusters,”  In Proceedings of the 4th Annual Linux Showcase and 
Conference, 2000. 
[10] S. A. Weil , S. A. Brandt , E. L. Miller , D. D. E. Long and C. Maltzahn, “  Ceph: A 
scalable, high-performance distributed file system,”  In Proceedings of the 7th 
Symposium on Operating Systems Design and Implementation, 2006. 
[11] U. C. Frank, B. Chun, F. Dabek, A. Haeberlen, E. Sit, H. Weatherspoon, M. F. 
Kaashoek, J. Kubiatowicz and R. Morris, “  Efficient replica maintenance for 
distributed storage systems,”  in Proceedings of the 3rd conference on Networked 
Systems Design & Implementation, 2006. 
[12] A. Duminuco, E. Biersack and T. En-Najjary, “  Proactive replication in distributed 
storage systems using machine availability estimation,”  in Proceedings of the 2007 
ACM International Conference On Emerging Networking Experiments And 
Technologies, 2007.  
[13] A. Chervenak, E. Deelman, M. Livny, M.-H. Su, R. Schuler, S. Bharathi, G. Mehta 
and K. Vahi, “  Data placement for scientific applications in distributed 
environments,”  in Proceedings of the 8th IEEE/ACM International Conference on 
Grid Computing, 2007.  
[14] Flavin Cristian, “  Understanding fault-tolerant distributed systems,”  
Communications of the ACM, Vol. 34, No. 2,1991. 
[15] J. J. Wylie, M. W. Bigrigg, J. D. Strunk, G. R. Ganger, H. Kiliççöte, and P. K. 
Khosla. “  Survivable information storage systems.”  IEEE Computer, Vol. 33 No. 8, 
2000. 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/31
國科會補助計畫
計畫名稱: 分散式檔案管理系統 (雲端計算及雲端資安技術研發)
計畫主持人: 王建民
計畫編號: 100-2218-E-001-006- 學門領域: 推動計畫-資安
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
