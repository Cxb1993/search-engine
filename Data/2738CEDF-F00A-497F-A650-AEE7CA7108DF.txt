1 
 
報告內容 
一、前言 
隨著資訊科技不斷進步，在這個資訊爆炸的時代，企業資訊安全的議題逐漸
被重視，因此，企業必頇更著重在企業內部控制的建置，以防止內部控制的缺失
或漏洞產生，而隨著企業的 E 化愈來愈普遍，導入資訊系統已經是不可或缺的
競爭條件，而資訊系統使用者在使用資訊系統時，是否有按照原始系統提供的標
準流程進行操作，也是內部控制必頇知曉的資訊，因此，透過資訊應用系統的稽
核檔(Event Log)，可以了解使用者操作資訊系統時的一些行為(例如登入、登出、
使用者電腦名稱、IP 等)，卻無法看出使用者操作資訊系統時的流程，這些流程
資訊，會被記錄在資料庫 log，因此本研究將探討如何透過資料庫記錄的 Log 進
行分析，得到使用者操作資訊系統的流程，進而與原始系統提供的標準流程進行
差異分析，提供稽核人員了解使用者操作資訊系統時的情況。 
 
二、研究目的 
本研究之目的為擷取資料庫 log 並且分析資料庫 log，找出 log 的特性，了解
log 記錄資料之間的關聯性，進而找出使用者在操作資訊系統時的各個流程，將
其圖形化後並執行流程的差異分析，本研究透過流程的差異分析，找出差異的行
為流程，因此，本研究的目的可以歸納為下列幾點： 
 探討資訊使用者使用資訊系統的行為，是否符合標準流程。 
 針對擷取出之不當操作行為，檢討企業內部控制設計時的漏洞。 
 做為企業流程再造時的參考。 
 提供企業流程再造的機會。 
三、文獻探討 
Petri Net 
Petri Net 理論在1962年由Carl Adam Petri於1962年所提出，而Petri Net是一
種具有數學性質與圖形特性的系統建構工具，可以塑模與分析各種系統。而隨著
各個學者的相關研究，Petri Net 開始出現許多新興的應用，像是Time Petri Net、
Coloured Petri Net、Predicate Transition Petri Net等…(W. M. P. van der Aalst et al , 
1996)。傳統Petri Net的工具則會包含下列的元素如表1所示。 
 
  
3 
 
四、研究方法 
系統開發說明 
經過系統分析與設計產生的原始系統開發文件，為了要統一使用單一一種塑
模方法，在此會將原始系統開發文件流程，轉換為 Petri Net。本系統可分為三大
區塊；1.Log 資料擷取與分析區塊，2.透過 α 演算法分析區塊，3.流程差異分析
區塊，如圖 1。 
Fw 集合
 
DataBase Log 擷取
Fw 集合
執行
差集運算
原始系統
開發文件
應用系統
使用者操作行為
α 演算法
Petri Net
Petri Net
1
2
3
系統分析與設計
遵循文件
開發
開發文件
圖形重新
繪製
流程圖形
轉換成
集合表示
擷取使用者
操作行為
定義
行為=>事件
透過演算法
轉換成圖形
圖形轉換成
集合
 
圖 1：系統架構圖 
3.1 Log 資料擷取與分析 
在資料庫 log 中，會包含 Log ID，Begin Time，Operation，Table，End Time
等資訊，Log ID 代表每一筆資料的次序，而 Begin Time 代表該筆資料的開始時
間，Operation 則代表進行何種操作行為，Table 代表針對資料庫的某張表格進行
異動，End Time 則代表該筆資料結束的時間，資訊系統使用者行為的 log，如表
2 所示。 
  
5 
 
表3：資訊使用者行為稽核記錄檔欄位結構
 
3.2 透過 α演算法分析 
而將資料庫每一個行為視為一個事件(event)，將繁瑣的 Insert Table、Update 
Table 等行為，定義成如表 4 中所表示： 
表4：事件定義 
 
由 log 檔資訊，本研究將每一個操作的部份，視為個別的事件，以符合 α 演
算法的條件，方可利用演算法轉換成圖形化流程。透過 α 演算法的概念，將每一
個事件(行為)的集合視為 Transition 的集合 Tw，而在 Tw 的集合裡，第一個行為
的操作(Log ID = 1)，則視為第一個 Transition Ti，相反的，Log Id = Last 時，則
7 
 
 
 在不同 Table 之下，Table 1_ PK -> Table 2_ PK(FK) 
像公司員工的表格，老師的身份同時為老師以及員工，因此，此鍵結方
式本身就是主鍵與外來鍵，然而在此範例裡我們並沒有利用到此種關聯方式。
如圖 5。 
PK PK2(FK)
Table 1 Table 2
 
圖 5：第四種關聯方式 
從上面四種關聯方式，並且根據表 3.2，3.3 與圖 3.1 的說明，以 Log ID = 1
時的行為 Insert T1 舉例，它的 PK 值即為它本身，而且它本身並不需要任何的外
來鍵，而 Log ID = 4 的行為(Update T1)，此種鍵結方式為上面描述的第一種方式
（Insert T1 => Update T1），因此可以得出第一種關聯，而 Insert T2 它的 FK 則
為 T1 的主鍵（Update T1 -> Insert T2）因此，又會產生第二種關聯方式，藉由這
兩種關聯方式，可以將此範例的關聯都串連起來，根據範例，Insert T1 為起始事
件，因此可以確定某個流程的起始事件會為事件 A，當然，可能會有其它的事件
為其它流程的起始事件，像 Log ID = 6 時，其行為為 Insert T3 而它的 FK 必頇為
T2(PK)，而 Log ID = 1~5 時並沒有 Update T2 這個行為，因此可以知道此時的
Insert T3，沒有與其它的流程有相關聯，所以可以知道它為某一個流程的起始流
程，因此，在步驟二的起始事件   裡，    *   +。 
步驟 3：     {     │           ( )} 
確認最後一個事件，由步驟二的描述可以發現每一個流程關聯，最後的事件
皆為 Update T4(事件 H)，因此    * + 
步驟 4：     {
(   )│            
                        
      
         
      
} 
將每一個事件內，擁有關聯性的事件取出，根據步驟二的描述，像事件
A(Insert T1)與事件 B(Update T1)之間有關聯產生，因此(A,B)則有關聯性，事件
B(Update T1)與事件 C(Insert T2)同理，會產生(B,C)的關聯，因此，利用主鍵及外
來鍵的關係，可以詳細的表示事件彼此之間的關聯，並且根據兩種關聯方式的聯
結( Table_1(PK) => Table_ 1(PK)、Table_1(PK) -> Table_2(FK))可以將流程擷取出
來，所以，所有的關聯關係，則會如下所表示： 
  
9 
 
 
利用集合   、   、   表示其先後順序，會如下所示： 
     *(   ) (   ) (   ) (   )(   ) (   ) (   )+。 
     *(   ) (   )+ 
     *(   ) (   ) (   ) (   ) (   )+ 
步驟 5：    { (  )│    }  *     + 
Pw 集合表示為   *                 +，由於這些 Place 本身的編號並沒有
太大的意義，在此只是表示其放置的位置與事件的相對位置，也因為這些 Place
必頇被放置在適當的位置，一般而言，要加入 Place 至 Transition，通常會有三種
加入的方式： 
一、 在起始事件前加入 Place，以      *(   ) (   )+事件為例。 
     *           (   ) (   )+ 
 
二、  在結束事件後加入 Place ，以       *(   ) (   )+事件為例。    
      *(   ) (   )              + 
 
三、 與前兩種加入方式不同，第三種加入方式是在流程裡具有關聯關係的事件
裡加入 Place，以      *(   ) (   )+事件為例：           
      *(         ) (       )+ 
 
根據上述所描述的三種加入 Place 的方式，結合  的三種關聯關係流程後，
可以得到加入 Place 後的下列集合。 
      * (   ) (   ) (   ) (   )(   ) (   ) (   ) + 
      * (   ) (   ) + 
      * (   ) (   ) (   ) (   ) (   ) + 
Place = 1-9 分別被放置在上述所描述的三種狀況下，可以看出 Place 與
Transition 之間的相對位置，而根據下一個步驟的做法，則會將整個事件流程加
入箭號(Arc)，會使流程表現更為完善。 
步驟 6：   {(   (  ))│(   )        }  {( (  )  )│(   )     
   }  {(    )│    }  {(    )│    } 
將Place 與 Transition之間加入 arc(箭號)，用來表示使用者行為的流程方向。
根據步驟 5 的描述，會擷取出三個流程加入箭號，因此會得到下列加入箭號在
Place與Transition之間的關聯流程，圖6為   加入Arc之後的圖形，圖7為   加
入 Arc 之後的圖形，圖 8 為   加入 Arc 之後的圖形，而在圖 9 中，則將三個流
程繪製成一張圖形。 
1.     *(   )(   ) (   ) (   ) (   ) (   ) (   ) (   )(   ) 
 (   ) (   ) (   ) (   ) (   ) (   ) (   )+。 
11 
 
的子流程，利用簡單的流程做為範例，如下列圖示表示。 
原始流程： 
請購 詢價 議價 採購 報帳
 
原始流程的子流程包含了(請購,採購)，(採購,報帳)，(請購,詢價)，(詢價,議價)，
(議價,採購)。 
使用者流程 A： 
請購 採購 報帳
 
使用者流程 A 的子流程則包含了(請購,採購)，(採購,報帳)。 
使用者流程 C： 
請購採購 報帳
 
使用者流程 C 的子流程則包含了(採購,請購)，(請購,報帳)。 
透過上面三種不同的流程範例，可以發現使用者操作流程 A 的子流程是被
包含在原始流程裡，因此會判斷為正確的操作流程，而使用者操作流程 C 與原
始流程的子流程相比較之下，會發現使用者操作流程 C 的流程是不被包含在原
始流程裡，因此我們會判定說，使用者操作流程 C 是不當的流程。 
根據上一小段所闡述，我們將原始流程設定為標準流程(SOP)，而這個標準
流程則是會將事件 A-H 執行過一遍，並且包含一些常見的特殊流程(例如，緊急
採購)因此，原始流程的關係事件集合，則會如下列集合以及圖 11 表示： 
  原始  *(   ) (   ) (   ) (   ) (   ) (   ) (   ) (   )+ 
1 2 3 4
5 6 7 8 9
A B C D
E F G H
 
圖 11：原始流程圖 
知道原始流程的關係事件順序之後，藉由資料庫的差集(difference)語法，將
兩組資料庫的集合做一個差集計算，而經由差集的計算之後，可以找出使用者操
作採購系統的行為流程與標準流程之間不一樣的流程部分，進而可以探討得到的
流程，是否擁有其它的含義，提供給企業更多資訊。 
我們從   、   與  原始的差集運算中，得到的差異流程如下。 
    *(   ) (   )+    
13 
 
五、結論 
近年來使用系統的公司不勝枚舉，許多企業在 e 化之後往往忽略使用者操作
系統時， 透過過去文獻的參考，本研究利用 W.M.P. van der Aalst 學者所提出的
α 演算法，以該演算法進行轉換資料庫的 log 資訊，並且參考流程塑模的相關文
獻，將其轉換成可以用人工觀察之流程，進而協助稽核人員瀏覽以及操作。 
本研究利用資料庫 Log，將使用者進行資料異動的行為記錄，並且透過演算
法轉換成圖形後，可以帶來一些效益，舉凡如下： 
 稽核人員易於操作 
從使用資料庫軟體工具開始，按照步驟的轉換過程相當容易，不會因為稽核
人員不同而有太大差異。 
 稽核人員易於觀察 
利用 Petri Net 的圖形化塑模概念，可以清楚的看出流程現況，更易於觀察。 
由於本研究利用圖形呈現的方式，即可以知道一些相關的資訊，也因為大都
是圖形化或是畫面的呈現，因此本研究相較於其它關於流程類的文獻，更為清楚
明白。 
本研究對於組織或企業的貢獻，可以從稽核面探討，由於使用者對資料庫進
行異動的操作行為被紀錄下來，因此可知道使用者做了哪些動作，又可以根據這
些動作，將資訊提供給更高階的主管，做進一步的判斷，可以節省企業的人力浪
費、簡化企業的流程，並且降低企業發生內部控制缺失的機會，更甚者，提供企
業流程再造的機會。 
 
參考文獻 
A.J.M.M.(2003) Weijters, and W.M.P. van der Aalst, “Rediscovering Workflow 
Models from Event-Based Data using Little Thumb”, Integrated Computer-Aided 
Engineering, Vol.10, pp.151-162 
A Rozinat, and WMP van der Aalst, (2006) “Conformance Testing: Measuring the Fit 
and Appropriateness of Event Logs and Process Models”,Business Process 
Management 
I. Choi, C. Park, and C. Lee, (2002) “A transactional workflow model for 
engineering/manufacturing processes”, International Journal of Computer  
T.Weijters, and W.M.P. van der Aalst. (2001) “Process Mining: Discovering 
Workflow Models from Event-Based Data”. In Kröse, B. et. al, (eds.): Proceedings 
13th Belgium-Netherlands Conference on Artificial Intelligence (BNAIC’01), 25-26 
October, Amsterdam, The Netherlands, pp. 283-290. 
Wil van der Aalst, Ton Weijters, and Laura Maruster, (2003) “Workflow Mining: 
Discovering Process Models from Event Logs”, IEEE TRANSACTIONS ON 
KNOWLEDGE AND DATA ENGINEERING, VOL. 16, NO. 9, SEPTEMBER 2004 
W.M.P. van der Aalst,(1999) “Formalization and Verification of Even-driven Process 
Chains”, Information and Software Technology, Vol. 41, pp.639-650. 
 
機會，此外，在會議期間也認識一些國內外(包含大陸地區)的專家學者，並利用會議的休息時間向
他們請益。 
 
三、考察參觀活動(無是項活動者略) 
  無 
四、建議 
  感謝國科會給予我的補助，讓我能夠順利成行。在此致上最誠摯的謝意！ 
 
五、攜回資料名稱及內容 
  研討會論文集、光碟片 
 
六、其他 
 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：李興漢 計畫編號：98-2221-E-036-029- 
計畫名稱：智慧型資訊科技稽核架構之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
