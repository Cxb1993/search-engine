2可供推廣之研發成果資料表
□ 可申請專利 ■ 可技術移轉 日期：2007 年 9 月 25 日
國科會補助計畫
計畫名稱：工業設計理路研究與應用
計畫主持人：王鴻祥
計畫編號：NSC 96-2221-E-027-071- 學門領域：人因工程
技術/創作名稱 一套可分析有關產品創意概念發展過程的工業設計理路之操作方
法
發明人/創作人 王鴻祥
中文： 應用概念知識理論分析工業設計師的產品概念發展過程，
將過程中的文本與脈絡區分為概念、知識與環境三個空間，繪製概
念知識分析圖，再轉譯成 CLIPS 專家系統發展工具之程式碼，加
以檢測。
技術說明
英文： The method includes the application of Concept-Knowledge
Theory (C-K) to the analysis of product concept development in
industrial design domain, and the testing using CLIPS, an expert
system development tool. The rationale of industrial design is
described in C-K schema, and then coded in CLIPS to examine its
logical consistence codes
可利用之產業及
可開發之產品
設計實務與設計專業教育的系統化創意設計方法。
技術特點
本方法以操作型定義將工業設計的理路區分為尚無邏輯值的概念
與具有邏輯值的知識，以及情境或環境空間。並可以程式碼加以模
擬，檢驗更多的可能解釋與更有效累積設計知識。
推廣及運用的價值
可用以提高設計師的創造力和建立設計理論體系。
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位研發成果推廣單位（如
技術移轉中心）。
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。
※ 3.本表若不敷使用，請自行影印使用。
4來考慮且滿足和概念相關的屬性。
3. 設計為一個過程，經由K→C析取(disjunctions)來產生概念，由C→K合取(conjunctions)中分割或包含來擴展。
4. 概念空間為樹狀結構，為擴張的分割：概念空間為樹狀結構，而其操作僅為分割(partitions)與包含(inclusions)與原本的析
取(disjunctions)，其分割(partitions)包含兩種：A.限制性分割（restrictive partition）：若將已知知識屬性新增至概念，當作
概念其中之屬性作分割發展，則為限制性分割。B.擴展性分割（expansive partition)：若將尚未得知的知識屬性，當作概念
定義中之屬性作分割發展，則為擴展性分割。
5. 創意導因於概念的擴張分割：在概念空間中概念可自由擴展，其所有促使分割的屬性皆來自知識。
(4) 創意類型
Hatchuel(2004)進一步將設計狀況分成科技為基礎產品(SBP)與創意為基礎產品(CBP)兩種：以科技為基礎的產品需要主要概念
的擴展和主要知識擴展 ，即前述所提及的c-K擴展型。然而在創意為基礎的產品(CBP；或稱概念創新型，conceptual innovations)
則需要主要概念擴展和少量(近乎零)知識擴展(δK)，即前述所提及的C-k擴展型。工業設計多半屬於後者，亦即在概念空間
中需要大量概念(C)的擴展，而知識(K)使用則並非龐雜的科學知識系統。C-K理論對此解釋為，知識能幫助概念作擴展，而
知識沒有概念則無設計價值。
2.2. C-K理論重整
概念–知識理論（C–K Theory）在設計上提供一個新的設計過程解釋版本，讓概念與知識間具有能同時的發展(co-expansion)
的可能。C-K理論雖可以解釋設計過程中知識與概念互動的情形，但概念缺乏邏輯情況，多定義於實體，容易造成不精確的
定義，或者設計者對於概念和知識之間常無法作區別，讓C-K理論有很大的進步空間。在C-K理論相關研究中，學者對於C-K
理論提出幾點疑慮：
1. 最初始的知識究竟從何而來?
Kazakçi&Tsoukias(2005)提出在C-K理論中任何概念是由知識擴展而來，那麼對於知識空間(K)中一開始的知識是從何而來?是
否包含別的空間存在?
2. C-K理論邏輯性不足
Filippo(2005) 認為C-K理論雖稱為具「邏輯性的(logical)」理論，但卻為非「正式的」邏輯理解，除了在性質方面的描
述外，它未遵守正式的邏輯規則。若將需求視為概念結構，則應該得知一些需求的邏輯狀態，但從概念中我們無法得知。然
而其他需求視為概念至知識的過程，我們不能創造設計而不知其需求。
3. 設計由C→K開始，還是K→C開始
在C-K理論中將設計定義為，設計是經由K→C析取(disjunctions)來產生概念，再經過C→K合取(conjunctions)來擴展作分
割或包含的過程。Filippo(2005) 則認為在C-K理論裡概念(C)不具有邏輯狀態，我們無法得知概念為真或為假，但一旦概念邏
輯狀態清楚，則概念透過一些認知過程轉變成知識，那麼設計應該為一個從概念開始發展最後轉變成知識的過程。
4. K→C與 C→C合併
Filippo(2005)認為若將概念定義為具有暫時性的邏輯狀態，則K→C與C→C並無特別區別。透過K→C讓設計產生替選方
案，則析取其屬性透過C→C來充實概念。
5. C→K→E，環境空間E(environment space)的存在
Kazakçi&Tsoukias(2005)對於C-K理論中初始知識從何而來產生疑惑，因而提出環境空間E(environment space)的存在(C\K\E
理論)。Kazakçi&Tsoukias(2005)的修正建議包括:
 C-K-E 區別(C-K-E distinction)：概念(C)、知識(K)與環境(E)應被區別，各自獨立。
概念-擴展(C-expansiveness)：輔助工具必須用知識空間中新的且獨特的屬性來擴展概念空間，接著，引擎能建議設計者概
念使用於環境上或是繼續發展直到概念能被知識證實。(藉由輔助工具)
知識-擴展(K-expansiveness)：輔助工具必須能修正和擴展知識空間，包括狹義的從新概念中學習或是廣義的擴展到學習
與更新各種形式的知識，像從概念的方法、分析、綜合和評估。
環境-回應(E-responsiveness)：輔助工具能感應環境的改變。當設計者對於設計描述作更改時，它也能隨時作更改，重釋情
境和隨之啟動。
6. C1-->K→C2
陳玫伶(2007)認為概念可能經由聯想或類比至知識 (weak methods)，再引用知識推演出新概念 (strong methods)，為一個
概念與知識的循環過程。
7. C→K為設計再利用(reuse)
Alaeddine&Michel&Habib&Aref(2007)認為先前設計產品描述研究中產品知識的聚集，即設計再利用(reuse)或沿用(carry
over)，即在設計知識庫中知識的擴展(知識空間)可藉由其他產品的擴展(概念空間)。概念分割(C→C)：以C-K理論之定義來看，
任何概念來自於知識析取，因此，必須先產生概念再進行概念分割，但理論中C-K圖實際操作上並未如此。概念合取(C→K)：
就定義來看此為概念的評估或證實，當概念轉化為知識時，此知識應為設計者所採用的一個有效的問題解決方案。但理論中
C-K圖實際操作上，卻視為概念引發知識的描述，可能是使用經驗或情境描述(而此描述應屬於K→K知識之推演)
2.3小結
若要設計出好的產品，不能否認的，必須對於好的產品設計能有所了解。對於產品設計過程的描述與解釋，若能找到更
好的方法，將過程中知識運用或是設計的方法與原理..等，能給與更清楚的闡述，則對於設計在學習與分享上大有助益。在
設計上，知識為「所有可用於產生設計產品的知識」。而對於創意設計上知識扮演重要的角色，而為了對設計過程與解釋有
所了解，設計知識應包含一般描述性的知識與程序上的知識，進而能了解知識運用的關係。本研究將C-K理論給予修正，並
採用Kazakçi&Tsoukias(2005)提出之C/K/E理論、設計推理並與Filippo(2005)之概念，作C-K理論重整。其整理如表2.1。
6(C→C-negation) 、基本知識 - 概念擴展(K→C-Expansion) 、知識 - 概念 - 類比 (K→C-Analogy) 、知識 - 概念 - 溯因
(K→C-Abduction) 、 概 念 至 知 識 空 間 的 擴 展 (C→K-Expansion) 、 概 念 證 實 (C→E-Validation) 、 概 念 建 構
(C→K→E-Modeling-case)、環境啟動知識(E→K-Action)、知識擴展(K→K-Deduction)、案例建立(C→K→E-Modeling-case)
共11項。
3. 知識與創意表現：知識使用量愈多不代表創造力表現愈佳，然而知識過少，則創造力表現會較差(陳玫伶,2007)。根據
Hatchuel & Weil（2003）在 C-K 理論中談論創意設計所提出的「C-k 擴展」和「c-K 擴展」作探討，是否透過設計理路的
描述，能提升創意或知識的層面?故依據概念(C)與知識(K)的使用量將創意與知識兩構面作為產品分類的模式可分為四類：
大創意與小知識型(Ck): 較多的概念而較少的知識。代表產品複雜度較低、技術層面較低且構件少，故知識使用少；此類
的產品可能較強調產品外觀或創意性。如:傢俱設計..等，為 Hatchuel(2004)中所提及的創意為基礎產品(CBP)。
大知識與小創意型(Kc): 概念較少而知識較多。此類的產品可能複雜度較高、技術層面高，重視其實用的功能，故使用知
識較多。如：軍事武器、核能設備..等。為Hatchuel(2004)中所提及的科技為基礎產品(SBP)。
大創意與大知識型(CK): 概念與知識都很多。指產品複雜度高、細節多、組成構件多且技術層面較高，使用較多的知識，
但在創意上也具有創新概念，造型美觀、功能獨特等，如:3C產品、汽車..等。
小知識與小創意型(kc): 使用概念與知識都少。指產品結構簡單、技術層面等都低，故知識量低；而僅需少量概念，可能使
用以便利為主。如：簡單的生活用品(牙刷、水杯…)…等。
(5) 設計創作分析
作品選用以情境察覺的創意設計反思消費文化為題，的作品-楚門的廣場。藉由專家評論設計創作作品，將其評論整理後，
找出作品之問題點；透過C-K理論重整之定義闡述設計創作概念與知識的推演，分析此作品設計理路發展，並試圖從中針對
評論之問題點給予合理之解釋。
第四章 案例研究
4.1 案例一、Nail Holder
案例一(Nail Holder)為C-K理論實踐(C-K Theory in Practice)的案例，在文中Nail Holder為創意設計基礎的產品，其概念推
演至最後得出一個設計解決方案，取名為” Smart tools ”，以此案例來呈現C-K理論。
(1) Nail Holder 鐵釘輔助器
鐵釘輔助器以在敲打時避免傷到手為設計概念發展，由於這突如其來的概念帶來商業上成功。也由於它的成功，公司想
要將新產品設計其創意的階段作維持。其產品，如圖4-1:
圖4-1、Avanti nail holder 圖4-2、鐵釘輔助器之C-K圖 圖4-3、Nail Holder之C\K\E圖
(Armand,Pascal,Benoit,2004) (Hatchuel, 2004)
開始著手鐵釘輔助器設計時，腦中出現大量的替選方案，需要作嘗試與測試來讓設計過程更有效率。因此，C-K理論能
幫助建構這範圍的概念，與組織現有知識。但在此案例卻反常的僅需要些許的知識。在C-K理論中對於此案例的描繪(如圖
4-2)。在C-K理論中，假設在一開始從概念C0=｛safe knocking a nail｝，即給定題目「安全地敲鐵釘」來發展。而此概念引發
了一個「敲鐵釘情況描述」的知識(C→K)，將知識作拆解(K→K)，分別為「避免使用鐵鎚與否」或是「找尋其他解決方法讓
左手仍握著鐵釘」，並將此屬性新增至概念空間(K→C)。此時，從(C0 + With a hammer + Left had holds the nail)中，提出傳統
敲打的意外作「安全」知識經驗的描述(C→K)，並作安全經驗描述的拆解(K→K)，將拆解後的知識屬性增至概念空間。
(2) Nail Holder之C\K\E圖
根據對於C-K理論作詳細定義後，將操作空間分為概念(C)、知識(K)與環境(E)三個空間與11個概念與知識之操作，而箭
頭表示操作知識發展；由於原C-K圖作描繪時，知識至概念(K→C)所產生的為舊概念分割(C→C)，但知識至概念應為析取知
識之屬性而引發概念產生新概念，而以此概念再作分割(為在概念區域中灰色箭頭與概念)，故將其圖修正且重新作描繪(如圖
4-3)。從環境中感知「安全(E0)」與「敲鐵釘(E1)」兩種資訊(E→K)，此兩種知識結合成新概念「安全地敲鐵釘 C0(Ke0+Ke1)」
(K→C)，而知識析取的動作引發概念產生分割為安全(C0-1)與敲鐵釘(C0-2)(C→C)；知識空間持續作知識項目的推演(K→K)，
而「敲鐵釘」經驗的描述(ke1-1)再引發概念作限制性否定-分割，分為「拿鐵鎚(C1-1)」與「不拿鐵槌(C1-2)」；至此，作概
念評估(C→E)，評估概念應選用(C0-2+C1-1)或(C0-2+C1-2)；經評估後，選擇前項(C0-2+C1-1)繼續作發展:此時，知識又引發
概念作限制性否定 -分割為「左手拿鐵釘 (C2-1)」與「左手不拿鐵釘 (C2-2)」(C→C)，而同樣需要作概念評估，選用
8如將它描述為產品正確使用或錯用。(P.Lloyd&D.Snelders,2003) 史塔克說到:「有一次到餐廳，突然有個魷魚像檸檬的影像顯
示於腦中，便開始畫草圖...。」而這檸檬榨汁機就這樣誕生了，如今成為大家書房或客廳的裝飾品，檸檬榨汁機雖名為榨汁
機，但實際上卻不實用，史塔克也此將產品解釋為一個能開啟大家討論的產品，讓產品不具焦於功能面，而是產品附加的情
感面。此產品的設計也與史塔克生長的環境有關，對於父親從事於飛機設計、當時對於飛行的流行與科學小說的盛行都有影
響。對於普通的檸檬榨汁機，史塔克突發奇想的想為它加上腳，而這腳可能為剛剛餐廳看到的魷魚或是科學小說中的外星生
物，也可能為飛行物-火箭的腳，而史塔克決定設計為較輕的且為三隻腳的形式作呈現。對於此設計，也有人將三隻腳解釋為
「不穩的(instability)」，因當時蘇聯解體(1991年)，是呈現政治社會上的不安；也有人將他解釋為「性感的(sexiness)」，比喻
為女人的腿，抬腳的樣子如跳康康舞，且由於當時社會呈現保守風氣，因此，當檸檬汁從榨汁機流下，讓人聯想到小便，又
想到為何不在廚房做愛?..等，嚮往開放社會的心態。
(2) Juicy Salif 之C\K\E圖
從環境中得知檸檬榨汁機基本構造(E→K)，並析取「榨汁頭(ke0-1)」與「過濾盤(ke0-2)」為概念(C0)作發展(K→C)，並
引發概念分割(C→C)；此時，於環境中得取「榨汁頭」之造型與材質資料(E→K)，知識引發概念(C1)產生，而新概念(C1)牽
涉到知識排列組合。由概念所引發「排列組合」的新知識(K4) (C→K)，在知識中作排列與篩選，並產生新概念(C2)；知識的
析取又產生概念分割與評估、概念確認；此時，設計者從環境中突發奇想，想將「腳」與榨汁機結合，因此從環境中引發「腳
(Ke5)」的相關經驗描述，知識的產生又引發新概念產生。之後為類似的操作手法，設計者採用許多「排列組合」的設計策略
為概念發展，最後導出“Juicy Salif”檸檬榨汁機的產生。(如圖4-8)
圖4-8、Juicy Salif 之C\K\E圖
4.4 分析結果
(1) 知識量計算
根據C\K\E圖(如圖3-6)，以CLIPS程式撰寫作知識量計算。程式撰寫的內容包括基本的C「概念空間」(Concepts space)、
K「知識空間」(Knowledge space)與環境空間E(environment space)，和C/K/E操作類型，計算其總合。而其中環境空間視為知
識空間中知識項目的來源與知識推演或新概念引發知識發展之過程的儲存空間。定義事實與規則與程式撰寫完畢後，將檔案
載入CLIPS6.24中，在Facts會建立程式中概念與知識的事實；在Globals計算其操作次數。當推論引擎執行(Run)時，將資料與
規則庫與事實庫中的事實作配對，在Dialog Window中會記錄案例設計理路推演過程與最後計算的結果。將所有知識項目編
碼輸入至事實庫(以Nail Holder為例)，作為知識檢視；而在定義規則時，使用者所輸入知識項目之編碼，而非知識項目內容
(如:knocking-a-nail)，其原因為編碼較容易為程式之運算且使用上較便易；接著，依照C\K\E圖中的知識案例儲存操作，撰寫
為程式規則；最後，程式輸出使用者所想要之其它相關知識項目。
(2) 知識類型分析
知識量計算方式根據先前文獻C-K理論的整合，將設計案例設計過程描述繪製成「概念\知識\環境 (C\K\E) 圖」，並參
照預設的編碼原則判別知識空間裡的「知識」類型，包括經驗知識(Ke)、領域內基本知識(Kb)、設計知識(Kd)和操作型知識
(Ko)，分別計算其使用數量；且利用CLIPS計算概念空間(C)、知識空間(K)、環境空間(E)與操作型知識之使用數量，最後得
出該概念設計四種知識的使用量與程序性知識操作的細節。其中案例釘輔助器設計(Nail Holder) 、Isao Hosoe的HERON桌燈
以及Philippe Starck的Juicy Salif 檸檬榨汁機，分別以P1、P2、P3
表示。下圖顯示各案例知識使用比例：
10
圖4-14、概念與知識量圖 圖4-15、知識與創意表示圖
4.3 結論
從四個案例在作設計理路推演中可以發現一些規則:
(1) 設計開始於(E→K)→( K→C):即設計從環境而開始，環境引發一些知識項目的產生，而具創意的概念則是由這些知識項
目所結合而成。(如圖4-16)
(2)(K→C)→(C1)→(C1→c1-1 & c1-2):即當知識至概念(K→C)時，應會先產生新概念後(C1)，再作概念分割(C1→c1-1 &
c1-2)。(如圖4-17)
(3)(K→C)→(C1)→(C1→c1-1(C1) & c1-2(~C1))→(C-E):同樣的，知識至概念(K→C)後產生新概念(C1)，並作否定限制性分割
(C1→c1-1(C1) & c1-2(~C1))，而此分割通常會引發概念評估的產生(C-E)。(如圖4-18)
圖4-16、設計開始之C\K\E圖 圖4-17、概念產生之C\K\E圖 圖4-18、概念評估之C\K\E圖
從案例分析中發現，Juicy Salif 搾汁機，就一般觀點來看應偏向高創意+低知識的產品(複雜度低、高價位、創意高、實
用功能低..)，在圖中(圖4-15)卻顯示Juicy Salif 搾汁機知識量較其它案例為多。如從一般所認為的知識層面來看，通常指產品
指複雜度高，其所需要的技術、組件..等，而就這些知識類型來看則偏向於領域內的基本知識(Kb)。而在創意設計中所指的
知識還包含經驗知識(Ke)、設計知識(Kd)與操作知識(Ko)，因此，也可以說透過C-K理論的操作與描述，能增加產品知識層面。
在創意設計下的知識，除了操作型知識外還包含經驗知識與設計知識，而透過設計理路推演，能增加產品之合理性與周延性。
概念與知識本是相輔相成的，在創意設計下產品一般會較像Juicy Salif 搾汁機般，較注重於創意與感性層面，而知識層面就
會顯得薄弱，若透過設計理路推演能夠增加知識層面，也就是說可以為產品在知識之不足點尋求其它解釋，使產品能夠增加
合理性。
第五章 設計創作分析
5.1 楚門廣場設計過程
本研究以作者的「楚門廣場」設計作品之「STREET WRITER」子系統為創作案例分析。其概念發想來自塗鴉。此系統
應用L. A. S. E. R. Tag系統技術與RFID技術，用雷射在廣告刊版上作畫，並用RFID感應使用者資訊。主要的產品-雷射噴罐，
是結合雷射與街頭塗鴉常用的噴罐，讓民眾能在廣場任何地方作畫，並利用RFID功能，作感應與儲值。如同悠遊卡般，儲值
後能在公司提供的電子畫板上作畫，具儲存和下載等功能 (如圖5-1) 。 在廣場上，民眾表達對廣告的看法與情緒的宣洩，
看似民眾操控了這廣場；但系統會將作畫的民眾當作免費廣告顯示在螢幕上，或是透過RFID感應將相關資訊販賣給廣告商，
至此，看似系統又操控了民眾。民眾想要藉由此廣場，讓別人知道我是誰?系統滿足他的需求，但卻竊取著資訊如圖5-2；草
圖設計如圖5-3。在模型製作的過程中，為了凸顯出廣場上LED地板的光亮，所以在其餘材質的配色上，多以黑白無色系為主，
讓整體模型在成品上更有一致性。所使用的材料共有：雙面模型紙板、壓克力片、LED燈泡、立體小模型、飛機木、透明塑
12
類別使用比例來看，或許就如Hatchuel(2004)所說創意設計產品僅需少量知識作發展，而其中少量知識中可能又代表某種知識
類型的缺少，就案例(P4)與其它案例相比較，案例(P4)在各類別知識使用量較平均，偏向科技層面產品(SBP)；而其它案例則
會偏向某種知識的使用，則偏向創意層面產品(CBP)。若從四個案例在各知識類型使用量來看則Ko>Ke>Kb>Kd，可以看出設
計知識使用量最少，而其中案例(P1)和案例(P2)特別少，可能為案例(P1)為初始概念發展，還尚未進入真正設計階段，而案例
(P2)則使用較少設計知識，多為經驗知識的使用；而我們也可以看出除了操作型知識外，創意設計的產品在經驗知識上使用
較多。
圖5-28、操作型知識子項目圖 圖5-29、概念與知識數量圖
(6)創意與知識
從本案例(P4)在操作型知識項目來看(如圖5-28)，「知識至概念(K→C-expansion)」與「知識至知識(K→K-deduction)」幾
乎為其它操作數量的兩倍，可以說明本案例(P4)在設計發展過程中使用較多知識推演與沿用知識屬性至概念發展，較注重於
技術層面，知識量所使用的也較其它案例為多，特別在領域內基本知識上(Kb)，較偏向科技性產品(SBP)；從整體比較來看，
除了在知識至概念擴展(K→C-expansion)量較其他案例為多外，其餘表現則趨於一般，本案例(P4)就如同前述知識類型呈現，
操作知識也偏向平均發展。從四個案例整體在操作型知識上看來，知識至概念擴展(K→C-expansion)使用較多，且每個案例
在知識至概念使用上，案例(P1)和案例(P4)在擴展上使用較多；案例(P2)使用平均且在類比上較其它案例為多；案例(P3)在擴
展和溯因較多。從概念與知識量來看(如圖5-29)，案例(P4)在概念量略多於其它案例，在知識量多於案例P1與P2。在下圖(圖
5-30)中，紫色三角型代表領域內基本知識(Kb)、黃色三角型代表知識空間內所有知識(K)，虛線為從一般角度(Kb)到創意設計
角度(K)之產品位移。案例(P4)在一開始概念設計時，就牽涉較多層面，包括反思、情境察覺、消費文化，且以前瞻性的創意
設計為前提之下，在概念發展時就較一般產品複雜度高，故發展概念較多；且案例(P4)為一個系統設計，較接近於C-K理論
中的科技性產品(SBP)，則需要較多的知識來解釋複雜的技術層面，故領域內基本知識使用量較多。因此，案例(P4)較偏向高
創意+高知識(大C+大K)的產品。
圖5-30、知識與創意表示圖
5.2.5小結
就本案原本所給予的題目，可拆解為「消費文化」＋「反思」＋「情境察覺」＋「前瞻性創意設計」，作設計時必須從
各層面作探討，並且從中找出一個設計的觀點，且此觀點必須能符合這些設計需求且不衝突，故設計本身複雜度就很高，若
是不能拿捏恰當便會造成設計上的偏差，而偏差若是不能夠再給予合理解釋，就容易造成別人對此產品的誤解或設計失敗等
問題。「Street Writer」，在知識使用量中，以知識類型使用量來看，在設計知識、領域內基本知識與經驗知識的使用量較平
均，而其中領域內基本知識較其它案例為多；而在操作知識使用量上，「知識至概念(K→C)」使用較多，而就整體看來操作
14
S. P. Besemer and K. O’Quin ,”Confirming the three-factor product-analysis matrix: Model in an American sample.” Creativity 
Research Journal, 12( 4),1999,pp.287-296.
T. Christiaans, ”Types of balanced growth.” Econ Let 82(2), 2004,p. 253–258.
D.M. Lee, D.C. Son, and H.S. Seong, “Queuing priority channel assignment scheme for handoff in CDMA celular system,” in Proc. 
IEEE ICICS, vol. 3, 1997, pp. 1766-1770.
M. J. Earl and I. A.Scot, “What is a Chief Knowledge Office? ” Sloan Management Review, Winter, 1999,pp.29-37.
S. A. Filippo, "Representing CK Theory With An Action Logic."International Conference On Engineering Design, 2005.
A . Hatchuel and B. Weil, “C-K theory in practice: lessons from industrial Applications,” Paper presentedin the Proceedings of the
International conference DESIGN 2004; Dubrovnik, May 18–21, 2004.
A. Hatchuel and B. Weil,”A new approach of innovative design: an introduction to C-Ktheory,” Paper presented in the Proceedings of 
theICED’03, August 2003, Stockholm,Sweden, 2003 ,pp.14.
S. A.Herbert, Models of Bounded Rationality, Cambridge, MA: MIT Press.,1982 John Durkin, “Expert System-Design and
Development,” Macmilian Publishing Company, 1994.
F. Ken,” Theory construction in design research: criteria: approaches, and methods.” ,2003.
J. Lee,” Design Rationale Systems: Understanding the Issues.”, IEEE Expert, May/June,1997, pp.78-85.
R. E. Mayer,”The promise of educational psychology: learning in the content areas.” Upper Saddle River. NJ: Merrill/Prentice
Hall,1999.
I. Nonaka,”A Dynamic Theory of Organizational Knowledge Creation.”Organization Science，Vo1.5，No.1，Februar,1994.
I. Nonaka and T. Hirotaka , “The Knowledge-Creating Company.“Oxford University Press, New York, 1995.
H. A. Simon , The Sciences of the Artificial, 2nd ed., MIT Press, Cambridge, MA ,1981.
T. Tetsuo , T. Hideaki , Y. Masaharu and S. Yoshi, "Abduction for Creative Design.", 2002.
J.E. Van Aken, “The Field-tested and Grounded Technological Rule as Product of Mode 2 Management Research, British Journal of
Management.”1619-36.,2005.
G.Wallas, The Art of Thought. New York: Harcourt Brace,1926.
An Analysis of Design Rationale and
Its Application to Industrial Design
Hung-Hsiang Wang
*Graduate Institute of Innovation Design, National Taipei University of Technology
e-mail: wanghh@ntut.edu.tw
Abstract
This study aims to apply C/K/E theory, an extended version of C-K theory by adding the Environment
Space, to the analysis of design rationale in the domain of industrial design. The analysis, consisting of
eleven operators, is conducted to explain three rationale of creative design cases. Furthermore, CLIPS is
used to coding design rationale for seeking more logical reasoning explanations. The results indicate that
the environment can explain from which concepts and knowledge come up.
18th InteriorLifestyle Tokyo 
 
 
The C-K Theory Revisited  
 
Hung-Hsiang Wang 
Department of Industrial Design, National Taipei University of Technology 
1, Sec. 3, Chung-Hsiao E. Rd. Taipei 106,Taiwan 
wanghh@ntut.edu.tw 
 
 
ABSTRACT 
 
C-K theory is a unified theory of design reasoning based on the distinction between 
two expandable spaces: the space C of concepts and the space K of knowledge. It is 
claimed that the theory is a generalization of all usual design theories, and 
applications to innovative designs have been made. This paper reviews C-K theory to 
provide some more operative definitions of the notions, and the relationships between 
knowledge and creative design. 
 
Keywords: C-K design theory, design rationale, industrial design 
 
 
 
I. INTRODUCTION 
 
C-K theory (Concept-Knowledge Design theory) is a unified theory of reasoning in design. It was 
originally proposed by Armand Hatchuel (1996), and further developed by Hatchuel and Benoît Weil 
(1999, 2002, 2003). It is based on the formal distinction between a space of concepts, C, and a space of 
knowledge, K, to give a consistent account of how concepts are formed, analyzed, and expanded or 
retracted within a design process. The objective of the theory is to offer a precise domain-independent 
definition of design by linking to well recognized issues in logic, and include creative thinking as a part of 
the central core of design theory. The process of design is defined as the co-evolution of C and K through 
four types of operators: C→K, K→C, K→K and C→C. It is claimed that the theory is a generalization of 
all usual design theories, and applications to innovative designs have been made. However, some notions 
used in C-K theory are not defined in a formal way. In addition, as C-K theory is based on propositional 
logic, it inherits the limitations of propositional logic. Thus, this paper reviews some notions in C-K 
theory, and introduces a formal version of the operators of to provide more operative definitions. 
 
II. A BRIEF REVIEW OF C-K DESIGN THEORY 
 
The following summarizes the notions and principle of C-K design theory. 
 
Proposition: A proposition is a statement. 
 
Logical status: The logical status of a proposition is an attribute that defines the degree of confidence 
that a designer or a group of designers assign to the proposition.  In classical logic, propositions are 
either true (T) or false (F), while in other logics, propositions may be multi-valued, or have a fuzzy value. 
For simplicity reasons the logical status in C-K theory is T or F, but not both, though a designer may use 
several logics.   
 
Knowledge space: A piece of knowledge, k, is a proposition that has a logical status or truth value for a 
designer or a group of designers. The space of knowledge, K, is the set of knowledge within a design 
 2
chosen to add into C0 to create a new concept C1 ={desktop for reading and writing, with 10° angle}}.  
The partition of C1, {{desktop for reading and writing},{desktop with 10° angle},{desktop for reading 
and writing, with 10° angle}}, is a restricting partition. 
 
(2) Expansive partitions: If the property that is added to a concept is not known in the space K as a 
property of one of the entities involved in the concept definition, the partition of the obtained concept is 
called an expansive partition.  It is noticed that the all the terms of this property must belong to the 
propositions in K, and the property must not have a logical status.  Otherwise, the property would be 
knowledge in K.  Expansive partitions play a role of the trigger of creativity in the design.  Take the 
above exmaple.  The designer is not sure if the desktop can be divided into two angle-adjustable pieces 
(one for writing and the other for reading), and decides to add this property to obtain a new concept C2 = 
{desktop for reading and writing, with 10° angle, twin angle-adjustable desktops}.  The partition of C2 is 
{{desktop for reading and writing},{desktop with 10° angle},{twin angle-adjustable desktops },{desktop 
for reading and writing, with 10° angle},{desktop for reading and writing, twin angle-adjustable 
desktops},{desktop with 10° angle, twin angle-adjustable desktops},{desktop for reading and writing, 
with 10° angle, twin angle-adjustable desktops}}.  This is a kind of expansive partition. 
 
Inclusion: In Set theory, the set A is included or contained in the set B, denoted by A ⊆ B, if every 
element of A is also an element of B.  If a property is subtracted from a concept set C0 to formulate a 
new concept set C1, then C1 would be included in C0.  For example, if the number 3 is subtracted from 
the set C0 = {1,2,3}, then the new set C1 = {1,2} ⊆ C0. In C-K theory a concept is included in another 
concept by subtracting properties.  Take the above exmaple, again.  If property “desktop with 10° 
angle” in C2 is subtracted, the concept C2 is included in the new obtained concept C3 ={a desktop for 
reading and writing, twin angle-adjustable desktops}. Concepts can only be partitioned by adding 
properties, or included by subtracting properties, not searched or explored in already-made solutions as 
claimed in many design theories (e.g., Herbert Simon’s problem solving model).  A space of concepts is 
necessarily tree structured as the only operations allowed are partitions and inclusions, while the structure 
in K could be completely different. 
 
Disjunction: The operation using restricting partitions by adding properties that are already known in the 
space K, or using inclusions by subtracting properties, to transform propositions into concepts is called a 
generation of the semantic disjunction (or for brief, disjunction).  This operation generates a disjunction 
if all the terms of the statement thus created belong to K but their conjunction does not have a logical 
status in K.  Disjunction expands the space C with elements from K, and each concept has its own initial 
disjunctions.  In C-K theory concepts are not equivalent to design alternatives, but potential seeds for 
alternatives, though the generation of disjunction may correspond to the generation of alternatives. 
 
Conjunction: The operation seeking for properties in K that could be added or subtracted to transform 
concepts into knowledge is called the generation of a semantic conjunction (or for brief, conjunction).  
In C-K theory conjunction corresponds to validation or justification, such as testing concepts by drawing, 
mock-up, prototyping, simulation, or experiments. 
 
K-relativity: The K-relativity of a design process refers to the feature that there is no concept itself but 
relatively to K. Because all concepts are candidates to be transformed into knowledge, but are not 
themselves elements of K, there is no design if there is no concept. When a design task is given to create 
“Some entity having the properties P”, the proposition “Some entity having the properties P” is supposed 
to have no logical status in K. If this proposition is known to be true (i.e., it already exists in K), or false 
(there is already some knowledge in K to declare that the required properties of this entity is impossible), 
then it is obviously a piece of knowledge. In such a case, design would instantaneously terminate. The 
notion of K-relativity is useful for distinguishing between a concept and knowledge, as well as 
determining the creativity of design. For example, “a bean-bag chair” is a concept only for those who 
never heard about it, but it is not a concept relatively to the K accessible to almost everybody. 
Furthermore, “a bean-bag lamp” is a concept for the designers who never knew about that several types of 
bean-bag lamps (e.g., Lightsack) were available in marketplace, though they learn that an Italian team 
 4
 
Creativity: The dual C-K expansion process can be used to classify creativity into two major types, C-k 
expansions and c-K expansions, as follows. 
 
C-k expansions: If a case of creativity involves a large number of successive partitions in C with the 
knowledge K that is very common to many people, it is called C-k (large C-small k) expansions, or 
conceptual innovation. Hatchuel et al. (2004) demonstrated how C-k expansions happened in a 
creativity-based product (CBP), Avanti nail holder. CBP requires rather major concept expansions, and 
minor or even no knowledge expansions. Additionally, in CBP the heap of creative ideas can be 
structured in a depth-first strategy. 
 
c-K expansions: If a case of creativity involves sophisticated knowledge with a limited partitions in C, it 
is called c-K (small c-large K) expansions, or applied science. Hatchuel et al. (2004) analyzed a 
science-based product (SBP), which is an Mg-CO2 combustion for Mars missions, to show how c-K 
expansions worked. The result reveals that SBP requires major concept expansions and major knowledge 
expansions. In SBP a bread-first strategy is usually used in targeting expansive partitions in upstream 
phrases.   
 
 
III. SOME MISUSES OF LOGICS 
 
Armand Hatchuel uses propositional logic to introduce of C-K theory for the sake of simplicity. 
Nevertheless, the usage of the terminology does not strictly follow the conventions of propositional logic, 
and thus are vague. First of all, let’s examine the definition of “concept” in C-K theory- a proposition or a 
group of propositions that consist of the terms (or entities) come from K (consisting of propositions of 
which each  has logical status), and has no logical status in K. This definition assumes that propositions 
can be sentences that have no logical statuses, and terms are elements of propositions. In logic, 
propositions are used to refer to either the content or meaning of an assertion or the string of symbols 
marks that make up a declarative sentence. In either usage, propositions are meant to be the truth-bearers. 
That is to say, a proposition is a declarative sentence that has a logical status (i.e., either true or false, but 
not both). Propositions are often related to closed sentences, to distinguish them from what is expressed 
by an open sentence, or predicate. Therefore, it is “meaningless” in terms of propositional logic when we 
assert a proposition that has no logical status.  
 
For example, the sentence “A chair is a piece of furniture for sitting” is a declarative sentence and its truth 
value can be evaluated. If a sentence has no logical status, it will not be a declarative sentence. Thus, 
imperative sentences (e.g., “Just do it.”), interrogative sentences (e.g., “Is Marcel Breuer a designer?”), or 
exclamatory sentences (“e.g., What a great design!”) are not propositions, because they themselves have 
no logical status. In C-K theory a concept is, by definition, a well-formed formula containing free 
variables, since this formula cannot be evaluated, and thus has no logical status. A more precise definition 
of a concept in first-order logic (FOL) will be given later. 
 
Furthermore, the use of “term” in the definition of a concept is quite unclear. The notion of terms is 
well-defined in FOL, but out of the definition of propositional logic. Therefore, as the notion of terms is 
required to define a concept, FOL is useful. The definition of terms will be given later. Finally, if a 
concept is a formula containing free variables, the axiom of choice is needed if and only if the number of 
the elements of a concepts is infinite and for each two elements we cannot distinguish them. The axiom of 
choice is independent of the other axioms of Zermelo–Fraenkel (ZF) set theory, i.e., it cannot be proven 
right or wrong based on the other axioms. Hence, ZF set theory is enough for defining concepts, but 
Zermelo–Fraenkel with AC (ZFC) is not applicable for concepts. 
 
 
IV. KNOWLEDGE AND DESIGN 
 
 6
transform from tacit knowledge to explicit knowledge. The knowledge in C-K theory involves the tacit 
dimension, though it is explicitly expressed in propositions. 
 
Strategic vs. substantive 
 
Strategic knowledge, or control knowledge, is the knowledge used by an agent to decide what actions to 
perform next, where actions have consequences external to the agent (Gruber, 1989). Strategic knowledge 
is essential to tasks in which the management of problem solving processes depends upon the choice of 
actions to take, and this choice is problematic and heuristic. Solving ill-structured problems heavily 
depends on such knowledge. Strategic knowledge sometimes refers to weak methods as opposed to strong 
methods, such as the use of algorithms. Hence, strategic knowledge is a basis for expertise. Such 
knowledge is distinguished from substantive knowledge (or essential knowledge), which is knowledge 
about what is believed to be true in the world. In general, substantive knowledge is used to identify 
relevant states of the world, and strategic knowledge is used to evaluate the utility of possible actions 
given a state. Both substantive and strategic knowledge underlies expertise in design domains. For 
example, a designer uses substantive knowledge to identify the relevant features of products and strategic 
knowledge to decide which features to adapt in earlier conceptual phases. 
 
In C-K theory the knowledge definitely refers to substantive knowledge, but the process using C-K 
operators to generate co-expansion of the spaces of C and K is outside of the spaces of K. Such a process 
needs strategic knowledge that helps the designer choose the appropriate C-K operators to apply under a 
given context. The strategic knowledge is kept separately from the spaces of K. The structure of 
rule-based expert systems is a good metaphor to illustrate the separation of substantive and strategic 
knowledge. A rule-based expert system consists of a knowledge base, an inference engine, a working 
memory, and a user interface. 
 
First, a knowledge base contains the domain knowledge needed to solve problems coded in the form of 
rules. Note that all facts can also be represented in the form of rules, in which the antecedents is assumed 
to be true. An alternative view is that a fact is a special type of a rule, which has no antecedents. The 
space K containing substantive knowledge can be thus analogous to a knowledge base. Second, an 
inference engine makes inferences by deciding which rules are satisfied by facts, prioritizes the satisfied 
rules, and executes the rule with the highest priority (Giarratano and Riley, 1993). Therefore, the set of 
strategic knowledge can be thought of as an inference engine, which is not contained in spaces K. Third, 
working memory is a database of facts used by the rules, in which all facts have logical statuses. Although 
the concepts in space C are propositions without logical status, they are used as a seed for pursuing 
solutions.  That is to say, the concepts are “pseudo-substantive knowledge”, and would become 
substantive knowledge in the pace K as soon as they are justified or experimented to be true. Hence, the 
space C can be analogous to a partial working memory. 
 
Domain-specific vs. Domain-independent 
 
The distinction between domain-specific and domain-independent knowledge is made in many studies on 
creativity; e.g., Larkin et al. (1980), Chi et al.(1981), de Jong and Ferguson-Hessler (1986), Cooper and 
Sweller (1987), Sweller (1989), Venselaar et al. (1987), and Ericsson and Smith (1991). This distinction is 
useful to differentiate between experts (or experienced problem-solvers) with novices. Domain-specific 
knowledge refers to the knowledge in a particular domain of expertise. Reymen et al. (2006) define three 
criteria for design knowledge to be domain-independent: (1) it should be based on the study of several 
design disciplines, (2) it may not contain domain-specific aspects, and (3) it should be useful for 
supporting several design disciplines and multidisciplinary teams. Knowledge based on a single discipline 
can be domain independent when it meets the second and third criteria and when it is recognized as 
general knowledge by many design disciplines in the field. 
 
Weisberg (1999) argues that a large amount of domain-specific knowledge is the prerequisite of creative 
performances. Popovic (2003, 2004) also claim that domain-specific knowledge plays a significant role in 
 8
