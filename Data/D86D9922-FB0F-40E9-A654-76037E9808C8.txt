 2
器、記憶體及其他的周邊設備。各個計算節點間通常透過連結網路(Interconnection Network)來連接。多
電腦系統的效能主要取決於訊息繞路演算法(Message Routing Algorithm)，因此在多電腦系統中來源節點
和目的節點之間如何透過有效率的繞路演算法來做訊息傳遞也就變得非常重要。 
多點傳輸(Multicast)是一種聚集通訊(Collective Communication)機制，即某一來源節點要將訊息傳送
到多個目的節點。假設多點傳輸以(s, K)表示，其中 s為來源節點，而 K = {u0, u1, … , uk}為目的節點集合。
如果目的節點集合僅包含一個節點，多點傳輸就會變為單播(Unicast)。如果目的節點集合包含所有的節
點，則多點傳輸就會變為廣播(Broadcast)。從這個觀點來說多點傳輸可以說是最一般化的通訊操作。 
在[6]中，Dally及 Seitz所提出的蟲洞繞路(Wormhole Routing)策略，由於它具有較低的通訊等待時間
的優點，因此成為了新一代連結網路架構中的一個重要的通訊交換機制。在蟲洞繞路連結網路中，資料
在傳送前會先把訊息切割為許多小單元，這些小單元藉由管線(Pipeline)的方式在網路中傳送。因此蟲洞
繞路具有距離不敏感(Distance-Insensitivity)之特性。然而當訊息標頭發生阻塞時，在傳輸路徑中的剩餘
訊息會阻塞在緩衝器(Routers)中而造成死結(Deadlock)。死結是一種訊息永遠阻塞的狀態，也就是某設備
持有一些資源並且等待其他設備所持有的資源[10]。如何避免死結的發生是設計蟲洞繞路演算法的基本
問題。 
多目的節點訊息(Multidestination Message)傳送機制或以路徑為基礎的設備(Path-Based Facility)[7]，
已經被證明可以有效率的來做多點傳輸。一個多目的節點訊息可以分為三個部分：標頭、資料及尾部。
標頭包含所有目的節點的資訊，當它傳送到下一個目的節點時，它允許將目前的訊息複製到下一個目的
節點。多目的節點訊息僅需一個啟動時間就可以將訊息傳送到多個目的節點。 
在 [10]中，Lin 及 Ni 針對直接網路 (Direct Network)提出一個具無死結特性之以路徑為基礎
(Deadlock-Free Path-Based)的多點傳輸演算法。作者使用以漢米爾頓路徑為基礎(Hamiltonian-Path-Based)
的繞路函數(Routing Function)來防止循環相依性(Cycle Dependence)。在此方法中，訊息在傳送時總是依
循節點在漢米爾頓路徑(Hamiltonian Path)中的次序來取得通道，如此可以避免死結(Deadlock)現象的產
生。以漢米爾頓路徑為基礎的多點傳輸演算法在各種連結網路中已經引發許多以路徑為基礎的多點傳輸
演算法[4, 5, 9, 13, 14, 15]。對稱式網路(Symmetric Network)是直接網路的一個特例，具有從網路中之任
何節點觀看網路狀態皆相同之特性[8]。基於此種特性可以使資料在傳輸時之擁塞(Congestion)現象減到
最少。在資料傳輸時我們可以將節點均勻的分散來傳輸以降低網路負載。但是當在對稱式網路中採用以
漢米爾頓路徑為基礎的多點傳輸演算法，它便不能利用對稱式網路的對稱特性來均勻的利用通道。 
接著我們使用由 6個節點所形成環狀網路(Ring Network)(也稱為 1×6網格(Mesh)網路，或者 3維星
狀圖(Star Graph)網路)來說明我們的構想。在圖一中使用以漢米爾頓路徑為基礎的多點傳輸法[10]，首先
在網路中建構一條漢米爾頓路徑，接著根據節點在漢米爾頓路徑中的次序給定每一個節點一個標號。然
後網路會被區分為二個子網路，分別為高通道網路和低通道網路。假設一多點傳輸為(s, K) = (0, {1, 4})，
標號 0的來源節點想要將訊息傳送到標號 1和標號 4的目的節點，此繞路可沿著漢米爾頓路徑來傳輸。
在此繞路方法中，無法利用標號 0的節點到標號 5的節點間之邊界鏈結(Boundary Link)來做資料傳輸。
雖然如此做距離較短，但可能會造成死結。 
 4
設為連線的，而圖中 E的每個邊界包含有二個相反方向的實際通訊鏈結。我們使用標記 pch(u,v)表示從
節點 u到節點 v的實際通道。(Physical Channel)也就是說，每一個在 G中無向邊 e(u, v) ∈ E，u, v ∈ V，
包含二個相反的實際通道 pch(u, v)和 pch(v, u)。 
漢米爾頓循環(Hamiltonian Cycle)係指在圖中存在一條路徑，其開始節點與結束節點為同一節點，而
且恰好經過每個節點一次。在此計畫中，我們主要的焦點是放在直接網路(Direct Network)中其拓樸具有
漢米爾頓循環者。在漢米爾頓循環模式中，第一步驟為找出在圖中的一個漢米爾頓循環。要在任何給定
的圖中找到一個漢米爾頓循環是個 NP-Complete的問題，但是已經有許多的論文提出在不同網路中嵌入
漢米爾頓路徑的策略，例如環繞網狀(Torus)及星狀圖(Star Graph)[3, 5, 9]。我們給定一圖 G = (V, E)，|V| = 
n。假設φ = [v0 , v1 , … , vn-1 , vn , v0]為圖 G中之一漢米爾頓循環，根據在漢米爾頓循環φ中節點的順序，我
們可以針對圖中的每個節點給定一個標號，節點 vi 的標號以 )( ivl 表示。也就是說，漢米爾頓循環起始
節點標號為 0，接續的節點分別標號為 1, 2, ... , n – 1，然後回到標號為 0的節點。 
針對每一節點給定一個標號之後，我們可以將網路中的每個實際通訊鏈結區分為二種：邊界鏈結
(Boundary Link)及一般鏈結(Common Link)。在網路的每個實際通訊鏈結中，如果|L(u) - L(v)| > ⎡n/2⎤，此
鏈結為邊界鏈結，否則為共通連結。在圖二中，我們顯示具漢米爾頓循環(Hamiltonian Cycle)環狀網路
(Ring Network)之邊界鏈結(Boundary Link)及一般鏈結(Common Link)。在圖三中，我們顯示具虛擬通道
(Virtual Channel)環狀網路(Ring Network)之通道網路。 
1 2 k-1k-2
common linkboundary link
0
. . .
. . .
 
圖二：在環狀網路(Ring Network)中之漢米爾頓循環(Hamiltonian Cycle)。 
1 2 k-1k-20
. . .
. . .
ph
kkc 1,2 −−
qh
kkc 1,2 −−
qh
kc 0,1−
ph
kkc 2,3 −−
qh
kkc 2,3 −−
phc 1,0
phc 2,1
phc 3,2
qhc 1,0
qhc 2,1
qhc 3,2
(a)
1 2 k-1k-20
. . .
. . .
pl
kkc 2,1 −−
ql
kkc 2,1 −−
ql
kc 1,0 −
pl
kkc 3,2 −−
ql
kkc 3,2 −−
plc 0,1
plc 1,2
plc 2,3
qlc 0,1
qlc 1,2
qlc 2,3
(b)
common channelboundary channel
common channelboundary channel
 
 6
座標所組成，σn-1(u), σn-2(u), … , σ0(u)，其中 0 ≤ σi(u) ≤ k i – 1，0 ≤ i ≤ n – 1。節點 u和節點 v為二個位在
環繞網狀(Torus)中的鄰近節點，若且為若有 n-1個 i，σi(u) = σi(v)，0 ≤ i ≤ n – 1，但有一個 i，σi(u) ± 1 = 
σi(v) mod ki。若 k i = k j，0 ≤ i, j ≤ n – 1，則環繞網狀(Torus)是一種正規圖(Regular Graph)。 
一個二維環繞網狀(Torus)包含許多漢米爾頓循環(Hamiltonian Cycle)。繞路函數的效能取決於漢米爾
頓循環函數的選擇[9]。我們以[10]中的節點標號函數來建構二維環繞網狀(Torus)中的漢米爾頓循環，此
節點標號函數將給定每一個節點一個唯一的數字。二維 m×n環繞網狀(Torus)之漢米爾頓循環的節點標號
由 0開始，之後節點標號依序為 1、2、…，直到節點標號為 mn - 1，然後回到節點標號 0。因此漢米爾
頓循環模式於節點標號 0開始與結束。為了在二維 m×n環繞網狀(Torus)上建構漢米爾頓循環模式，我們
假設 m為偶數。 
以下我們給定在二維 m×n 環繞網狀(Torus)之節點標號函數 )(ul ，我們假設 m 是偶數，u 是環繞網
狀(Torus)中的節點，其中 u的坐標為(x, y)、 10 −≤≤ mx 及 10 −≤≤ ny 。節點標號函數 )(ul 公式如
下。 
⎩⎨
⎧
+×
+×=
odd is  if ,1--
even is  if         ,
)(
yxnny
yxny
ul  
在環繞網狀(Torus)中給定每一個節點一個標號以後，環繞網狀(Torus)中的所有實體通訊鏈結可被分
為二類：邊界鏈結和共用鏈結。在這個節點標號策略中，所有在維度 0 的環繞鏈結(Wrap-Around Link)
為邊界鏈結(Boundary Link)，其他實體鏈結為共用鏈結。由於這 2×k環繞網狀(Torus)邊界和共用鏈結的
定義並不適用。這是因為 2×k環繞網狀(Torus)為多圖(Multi-Graph)。但是把上面所述節點標號函數用於
2×k 環繞網狀(Torus)，我們可以定義邊界鏈結(Boundary Link)為在維度 0 的環繞鏈結(Wrap-Around 
Link)，其他實體鏈結為共用鏈結。 
然後我們可以把網路切割為二個子網路，分別為高通道網路和低通道網路。為了防止環繞網狀(Torus)
中高通道和低通道子網路產生死結，我們在每一個子網路中使用二個虛擬通道。在每一個子網路中，每
一共同鏈結可以被多工為 p-通道及 q-通道，但是邊界鏈結不可被多工為二個虛擬通道，在邊界鏈結中只
使用 q-通道。在圖四中介紹具虛擬通道之二維 4×4環繞網狀(Torus)網路的通道網路。 
15
(b)(a)
0,3 1,3
0,2
3,32,3
1,2 2,2
1,10,1
3,2
3,12,1
3,02,01,00,0
14 13 12
8 9 10 11
7 6 5 4
0 1 2 3
p-channel
q-channel
15
0,3 1,3
0,2
3,32,3
1,2 2,2
1,10,1
3,2
3,12,1
3,02,01,00,0
14 13 12
8 9 10 11
7 6 5 4
0 1 2 3
 
圖四：具虛擬通道之二維 4×4環繞網狀(Torus)網路的通道網路: (a)高通道網路；(b)低通道網路。 
 8
如果使用傳統的雙路徑多點傳輸繞路法(Dual-Path Multicast Routing)，最長之路徑長度為 max(4, 9) = 
9。所以在二維 4×4環繞網狀(Torus)網路中，使用所提出的均勻多點傳輸繞路法(Uniform Multicast Routing)
及固定多點傳輸繞路法(Fixed Multicast Routing)較使用傳統的雙路徑多點傳輸法有效率。 
3.2將漢米爾頓循環模式(Hamiltonian Cycle Model)對映到星狀圖(Star Graph)網路 
星狀圖(Star Graph) [1, 2]是由 Akers、Harel及 Krishnamurthy所提出之多電腦(Multicomputers)系統架
構。一個 n維星狀圖(Star Graph) Sn = (Pn, En)是由節點集合 Pn及邊線集合 En二個集合所組合成的連結網
路架構。其中 
Pn={(p1, p2, …, pn) | pi, pj ∈ {1, 2, …, n}, pi≠pj, for i≠j}， 
En={(v1, v2) | v1, v2 ∈ Pn, v1≠v2, such that v1=gi(v2) for 2≤i≤n}。 
我們可以得知，一個 n維星狀圖是一種正規圖(Regular Graph)。n維星狀圖之分支度(Degree)為 n-1，
具有 n!個節點與 ( ) !n n−1
2
條邊線，直徑(Diameter)為 3 1
2
( )n −⎢
⎣⎢
⎥
⎦⎥
。星狀圖已經被證明具有較好的特性[2]，例
如分支度低，直徑小和具對稱性。我們接著定義子星狀圖(Substar Graph)。k維子星狀圖是原 n維星狀圖
的一個子圖(Subgraph)，其中 k≤n。子星狀圖的節點是原星狀圖節點的子集合，子星狀圖的邊線為原星狀
圖邊線的子集合，並為連接這些子星狀圖節點的邊線。k維子星狀圖與 k維星狀圖為同構(Isomorphism)。 
我們先舉一個例子來說明星狀圖與子星狀圖以及他們的一些特性。首先我們來看一個三維的星狀圖
S3 = (P3, E3)。其中節點集合 P3與邊線集合 E3定義如下： 
P3 = {123, 213, 312, 132, 231, 321} 
E3 = {(123, 213), (213, 312), (312, 132), (132, 231), (231, 321), (321, 123)} 
在圖七中顯示一個三維及一個四維的星狀圖。另外我們定義四個三維的子星狀圖分別表示如下: 
***4，***3，***2，***1 
其中*表示不包括已出現符號之所有符號。我們可以驗證圖七(b)中之四個三維的子星狀圖與圖七(a)
的三維的星狀圖互為同構。 
123
132
213321
312231
1234
1324
4231
4321
3412 2413
21433142
21343214
31242314 3421
2431
2341
3241
1432
41321342
4312 4213
1243 4123
1423
a
b
b
a
d
c
d
c
(b)(a)  
 10
12340
13243
423123
432120
341212 241311
21438314215
2134132145
3124223144 342119
243118
234121
324122
143217
413216134214
431213 42136
12437 41239
142310
a
b
b
a
d
c
d
c
12340
13243
423123
432120
341212 241311
21438314215
2134132145
3124223144 342119
243118
234121
324122
143217
413216134214
431213 42136
12437 41239
142310
a
b
b
a
d
c
d
c
source node
destination node
routing channel
(a) (b)  
圖九：四維星狀圖(Star Graph)網路中使用均勻多點傳輸繞路(Uniform Multicast Routing)之多點傳輸的例
子：(a)多點傳輸使用高通道網路；(b)多點傳輸使用低通道網路。 
(2) 在星狀圖(Star Graph)網路中之固定多點傳輸演算法 
在圖十中我們使用相同的多點傳輸範例來說明固定多點傳輸繞路演算法，來源節點 143217傳送 Mh
和 Ml二個訊息，其中 Mh的標頭包含目的節點 342119、234121、324122、21341、31242及 23144，Ml的標
頭包含目的節點 341212、41239及 12437。Mh沿著高通道網路來繞路，並且路徑長度為 11，Mh穿越邊界
後，將會使用 q-通道來繞路。Ml 沿著低通道網路來繞路，其路徑長度為 6。因此，最長之路徑長度為
max(11, 6) = 11。 
12340
13243
423123
432120
341212 241311
21438314215
2134132145
3124223144 342119
243118
234121
324122
143217
413216134214
431213 42136
12437 41239
142310
a
b
b
a
d
c
d
c
12340
13243
423123
432120
341212 241311
21438314215
2134132145
3124223144 342119
243118
234121
324122
143217
413216134214
431213 42136
12437 41239
142310
a
b
b
a
d
c
d
c
source node
destination node
routing channel
(a) (b)  
圖十：四維星狀圖(Star Graph)網路中使用固定多點傳輸繞路(Fixed Multicast Routing)之多點傳輸的例
子：(a)多點傳輸使用高通道網路；(b)多點傳輸使用低通道網路。 
如果使用傳統的雙路徑多點傳輸繞路法(Dual-Path Multicast Routing)，最長之路徑長度為max(6, 12) = 
12。所以在四維星狀圖(Star Graph)網路中，使用所提出的均勻多點傳輸繞路法(Uniform Multicast Routing)
及固定多點傳輸繞路法(Fixed Multicast Routing)較使用傳統的雙路徑多點傳輸法有效率。 
 
 
 12
4.2星狀圖(Star Graph)網路之多點傳輸效能分析 
六維星狀圖(Star Graph)網路之多點傳輸效能分析請參閱圖十三。由圖十三可知均勻多點傳輸繞路
(Uniform Multicast Routing)及固定多點傳輸繞路(Fixed Multicast Routing)之效能優於雙路徑多點傳輸繞
路(Dual-Path Multicast Routing)之效能。 
0
5
10
15
20
25
30
35
0 120 240 360 480 600 720
Multicat Size
M
ul
tic
as
t l
at
en
cy
 (i
n 
m
ic
ro
se
co
nd
s)
Dual-Path Multicast
Uniform Multicast
Fixed Multicast
 
圖十三：六維星狀圖(Star Graph)網路之多點傳輸效能。 
 
五、結論 
我們在對稱式網路使用蟲洞繞路的方式提出二個多點傳輸演算法：均勻多點傳輸演算法(Uniform 
Multicast Routing Algorithm)及固定多點傳輸演算法(Fixed Multicast Routing Algorithm)。所提出的多點傳
輸演算法利用均勻的通道以減少訊息之路徑長度，使得多點傳輸演算法在對稱式網路方面更有效率。我
們舉二個對稱式網路：環狀(Torus)和星狀圖(Star Graph)網路，來證實所提方法的優越性。實驗結果顯示，
我們所提出的方法確實優於之前所提出的方法。 
 
六、參考文獻 
[1] S. B. Akers, D. Harel and B. Krishnamurthy , “The star graph: an attractive alternative to the n-cube,” 
Proceedings of 1987 International Conference on Parallel Processing, pp. 393-400, August 1987. 
[2] S. B. Akers and B. Krishnamurthy, “A Group-Theoretic Model for Symmetric Interconnection Networks,” 
IEEE transactions on Computers, Vol. 38, No. 4, pp. 555-566. April 1989. 
[3] W. C. Athas and C. L. Seitz, “Multicomputers: Message-Passing Concurrent Computers,” Computer, Vol. 
21, No. 8, pp. 9-24, August 1988. 
[4] T.-S. Chen, C.-Y. Chang, and J.-P. Sheu, “Efficient Multicast Communication in Multidestination 
Wormhole-Routed Mesh Networks,” Proceedings of International Conference on Parallel and Distributed 
Processing Techniques and Applications (PDPTA’98), Vol. II, pp. 674-681, July 1998. 
