行政院國家科學委員會專題研究計畫成果報告 
間歇連接式資料庫並行控制之研究   
Concurrency Control for Intermittently Connected Databases   
 計畫編號：NSC 95-2221-E-006-277        
執行期限：95 年 08 月 01 日至 96 年 10 月 31 日 
主持人：徐立群    國立成功大學會計學系 
          
shulc@mail.ncku.edu.tw 
 
一、中文摘要 
 
 在間歇連接式資料庫環境下，與伺服
器離線之客戶機，各自使用整體資料庫之
一部分資料，以非同步方式運作。這些客
戶機通常只在需要下載或更新資料時，才
與伺服器連接。因為客戶機在離線時可能
會修改共享資料，系統必須要有某種同步
機制才能確保資料之一致性。本研究藉由
兩項重要的觀察，大大簡化我們為間歇連
接式資料庫設計的兩個並行控制協定。雖
然兩個協定皆採用樂觀式同步策略並且保
證可序列性，它們卻有許多不同的特性，
使它們適用於不同的應用。 
 
關鍵詞：資訊存取無所不在、資料複製、
並行控制、可序列化、調解。 
 
Abstract 
 
An intermittently connected database 
(ICDB) environment is one in which a 
number of clients work asynchronously 
while disconnected from the server, each 
operating on a part of the entire database. 
The clients are only connected to the server 
when they need to download or update data. 
Because clients may update shared data 
while disconnected, certain synchronization 
mechanisms must be in place to ensure data 
consistency. In this study, we made a couple 
important observations which greatly 
simplify our design and analysis of two 
concurrency control protocols for ICDB 
systems. While both protocols use an 
optimistic strategy and guarantee serializable 
executions, their characteristics are different 
in some other respects, thus making them 
appropriate for different applications. 
 
Keywords: Ubiquitous information access, 
data replication, concurrency control, 
serializability, reconciliation. 
 
二、緣由與目的 
 
As the price/performance ratio of 
mobile devices continues to improve steadily 
in recent years, it is now common for people 
to 
cache data on their mobile appliances and 
work on local data copy while they are away 
from home or office. Such a working 
environment has been termed intermittently 
connected database (ICDB) system [1].  In 
an ICDB system, a number of clients work 
asynchronously while disconnected from the 
server, each operating on a part of the 
database. The clients are only connected to 
the server when they need to download or 
update data. Many emerging applications 
have ICDB characteristics, e.g., sales force 
automation, insurance claim processing, 
hospital work coordination, etc. 
When clients are allowed to modify replicated 
data, maintaining consistency of data copies across 
various locations becomes an important issue. Our 
approach to this problem is to model concurrent client 
activities as transactions. For the ICDB model we are 
 2
serialization graph will not lead to a cycle. 
Note that larger write blocks may mean more 
conflicts among transactions, which can in 
turn lead to cycles in the graph. 
As for MAG, instead of requiring all 
downloaded data of a committing transaction 
to have the same values, we can determine 
the subset of the read set of the committing 
transaction whose values remain the same at 
commit time. We then determine the subset 
of the write set of the committing transaction 
that depends on the unchanged read subset. It 
is not hard to see that we can still propagate 
this write subset without sacrificing 
serializability. 
Replica control strategies can be 
categorized as either pessimistic or optimistic. 
The two protocols we propose belong to the 
optimistic camp. The pessimistic approach 
does not allow two disconnected clients to 
perform conflicting operations at the same 
time. The optimistic approach, on the other 
hand, permits reads and writes everywhere, 
hence must detect and resolve conflicts after 
their occurrences. A good overview of 
existing replication solutions in traditional 
distributed databases can be found in [2]. 
In the mobile data management domain, 
the optimistic approach is generally 
preferable to the pessimistic one because by 
using pessimistic schemes data needed by a 
client may be held by another disconnected 
client for an extended period of time. The 
optimistic approach, however, will incur 
abortion and redo overheads when conflicts 
can not be resolved. On the other hand, 
deadlock is a potential problem when locking 
is used to enforce the pessimistic strategy. 
An analytic study of conflict detection and 
resolution for the optimistic approach and 
deadlock detection and resolution for the 
pessimistic approach can be found in [3]. 
Pitoura and Bhargava [4] proposed a 
replication model which takes varying 
connectivity conditions among 
communicating nodes into consideration. 
Nodes are divided into clusters where 
strongly connected sites belong to the same 
cluster. Copies within the same cluster are 
required to be consistent. Inter-cluster data 
inconsistency is made to be bounded. Two 
types of transactions are identified: weak and 
strict transactions. Weak transactions access 
local, potentially inconsistent copies and 
perform tentative updates. Strict transactions 
access consistent data and perform 
permanent updates. When disconnected, a 
client can still operate by employing weak 
transactions. To determine correct concurrent 
execution of weak and strict transactions, the 
proposed scheme uses intracluster and 
intercluster serialization graphs. The 
intercluster serialization graph is maintained 
at run time, which is analogous to our 
graph-based scheduler. 
Commercial database products have 
also included support for maintaining data 
consistency in the ICDB environments. For 
example, Sybase SQL Anywhere provides a 
reconciliation scheme in its MobiLink server 
synchronization technology [5], which is 
analogous to our match-and-go protocol. 
Unlike our approach, Sybase's scheme relies 
on the server to detect and resolve conflicts, 
thereby limiting its scalability. We have seen 
variants of our match-and-go protocol in the 
literature, e.g., [6]. To our knowledge, none 
had formally reasoned about the correctness 
of such protocols as we do. 
 
四、計畫成果自評 
 
In this study, we have proposed two 
concurrency control protocols for 
intermittently connected client-server 
databases. The protocol rules determine 
whether updates done by a committing client 
can be reflected back to the server. We make 
two important observations which greatly 
simplify the design and analysis of our 
protocols. In particular, we argue that one 
can adopt serializability, rather than 
one-copy serializability, as the underlying 
correctness criterion. In addition, the 
activities done by each committing client can 
be modelled by a single transaction, rather 
than one or more local transactions. The two 
protocols produce schedules that belong to 
different classes of serializability: view* 
serializability by the match-and-go protocol 
(MAG) and conflict serializability by the 
graph-based scheduler (GBS). When 
 4
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 95-2221-E-006 -277 
計畫名稱 間歇連接式資料庫並行控制之研究 
出國人員姓名 
服務機關及職稱
徐立群 
國立成功大學會計學系 
會議時間地點 
2007 年 6 月 28 日至 2007 年 6 月 29 日 
中國上海 
會議名稱 第 9 屆國際視覺資訊系統會議 
發表論文題目 The Influence of Perceived Quality by Adjusting Frames Per Second and Bits Per Frame under the Limited Bandwidth 
 
 
一、參加會議經過 
國際視覺資訊系統會議提供資訊科學各相關領域研究人員與業者一個交流
新想法之場合，相關領域包含電腦視覺、資料庫、人機互動、影像處理、資訊視
覽、知識與資訊管理等。此會議過去已經舉辦八屆，1996 年在墨爾本、1997 年
在聖地牙哥、1999 年在阿姆斯特丹、2000 年在里昂、2002 年在臺灣、2003 年在
邁阿密、2004 年在舊金山、2005 年在阿姆斯特丹，2007 年在上海復旦大學舉辦。
這個會議投稿的接受率都維持在 50%上下，並具有獨立審查制度確保其論文品
質， 
個人參加此會議主要是發表近期所作有關網路頻寬有限環境下，多媒體視訊
撥放品質之實證研究成果之論文⎯“The Influence of Perceived Quality by 
Adjusting Frames Per Second and Bits Per Frame under the Limited Bandwidth＂，得
到一些同行之精闢建議。另外，當然也聆聽其他作者之大作，藉以了解最新的研
究趨勢。 
除了多媒體資料處理，個人另一主要研究興趣為資料流處理 (data stream 
processing)。個人藉由網路與在上海東華大學計算機科學與技術系服務之王洪亞
老師進行跨校合作已有一年半之時間。我們藉由觀察到 stream data 有不同特性，
