 2 
行政院國家科學委員會專題研究計畫成果報告 
嵌入式多核心處理器系統軟體開發 
計畫編號：NSC 96-2218-E-006-285 
執行期限：2007/08/01 ~ 2008/10/31   
主持人： 
黃悅民 教授  國立成功大學工程科學系 
共同主持人： 
鄭憲宗 教授 國立成功大學資訊工程學系 
楊竹星 教授 國立成功大學電機工程學系 
楊中平 助理教授 國立成功大學資訊工程學系 
張大緯 助理教授 國立成功大學 資訊工程學系 
陳敬 助理教授 國立成功大學 電腦與通信工程研究所 
侯廷偉 副教授 國立成功大學工程科學系 
陳中和  教授 國立成功大學 電腦與通信工程研究所 
 
一、中文摘要 
 
隨著多核心處理器技術的持續發展，
多核心平台架構下之系統軟體與硬體的有
效整合，儼然已成為目前以及未來重要的
一項研究與發展議題。本計畫擬以多核心
處理器為平台，研究、發展與建置有效整
合底層硬體平台、系統軟體、以及上層應
用之整體系統，並將研究成果以自由軟體
方式提供台灣學術界與產業界相關領域作
進一步之發展與應用。 
本計畫為跨校計畫，整合本校八位教
授成立多核心平台研究團隊。計畫內容包
含了五大部分，由底層至上層分別簡述如
後。第一部分，為多核心處理器晶片軟體
測試程式之研發，利用前瞻性之軟體式自
我測試技術(SBST)，開發嵌入式測試程
式，解決多核心處理器晶片對於高效能測
試技術之需求問題。由於作業系統扮演硬
體與軟體間重要的居中角色，且在多核心
系統中所須處理之問題更形複雜與重要，
本計畫中接下來的三個部分將針對多核心
平台作業系統相關議題進行研究開發。首
先第二部分將開發一套多核心異質性嵌入
式作業系統環境，使得系統擁有不同核心
可以執行不同作業系統之能力，以符合各
核心不同之應用需求，並亦進一步達成兼
顧即時與非即時系統之作業能力。第三部
分則將以同質性作業系統為方向，研究移
植合適版本之現行Linux作業系統於計畫
所選定之多核心平台，並開發多核心系統
上相關裝置之驅動程式。接下來，架構在
作業系統之上的第四部份乃將建置多核心
系統之Java Virtual Machine以提供Java執
行環境，研究Java與多核心平台之相關執行
溝通介面設計。第五部份為有關嵌入式多
核心系統裝置結合Web Service相關應用之
Middleware與標準介面設計，提供透過
XML-based Ontology語意為基礎之網路服
 4 
及目前所獲得之成果。 
  3.1 Software-based Self-testing 
本子計劃的目的是開發多核心處理器
的自我測試軟體在 DM270 上所使用的
ARM7TDMI，其主要架構圖如圖二所示: 
Register
Control & Steering Logic
Computation Logic
 
圖一、ARM7TDMI 的功能方塊圖 
因應不同類別元件的功能，我們將處理器
分為三大類別來進行： (1) Register (2) 
Computation logic (3) Control & Steering 
logic。 
接下來我們分項來討論這三個類別的特
性，測試方法。 
 
3.1.1 Register 
A) Register File包含了 37個 32為元的暫存
器，其中 30 個為一般暫存器，6 個處理器
狀態暫存器，與另外一個程式計數器
(Program Counter)。一般暫存器可利用一般
的運算指令進行測試向量的測試，狀態暫
存器則可透過處理器模式的切換及狀態改
變進行測試，程式計數器須透過控制程式
的執行流程來進行測試。 
B) Address Register 儲存了要去存取指令的
位址，其內容與程式計數器相關，同樣透
過控制程式流程來進行測試。 
C) Write Data Register和 Instruction & Read 
Data Register 可透過適當的記憶體存取指
令來進行測試。 
 
3.1.2 Computation 
A) Address Incrementer 與程式計數器和
Address Register 一樣，必須透過控制程式
流程來進行測試。 
B) Multiplier、Barrel Shifter 和 32-bit ALU
為透過對應的指令和運算元來進行測試。 
 
3.1.3 Control & Steering Logic 
Instruction Decoder & Control Logic 透過規
格書上所定義的指令集和處理器功能如：
管線狀態、資料危棧處理方式、中斷處理
方式、記憶體存取模式、處理器模式等特
定功能來進行測試。 
 
目前已完成 ARM7TDMI 的自我測試程
式。並可透過 DM270 平台及其中的
ARM7TDMI 進行驗證。可並分為可獨立運
作的版本可與作業系統溝通的版本。 
 
3.2 Heterogeneous operating system based 
on multi-core architecture 
 
 本子計劃的目的是開發多核心溝通的
機制，在 ARM 端我們架設 uCLinux 的作
業系統；在 DSP 端我們架設 uC/OS-II 的即
時作業系統。而我們同時設計了兩個
Device Driver 分別放在 ARM 和 DSP 
端，作為資料及指令的傳送使用。 
 
 
 
3.2.1 有關上層( high-level )的設計及機制 
  
 傳統系統設計中 DSP Processor 受到
Master CPU 所支配，負責協助大量的編碼
/解碼運算，有了OS後DSP除了接收命令
外，透過底層的Driver為仲介，還可主動向
Master CPU 提出要求，甚至直接存取週邊
裝置。例如將DSP運算結果直接透過Master   
 6 
備以網路服務的型態提供給網際網路上的
使用者。 
 
3.5.2 DPWS Client 
這部份主要用來尋找並訂閱網際網路上的
DPWS 服務，並提供控制介面方便使用者
對於各設備或各服務的操控與監視。 
 
四、計畫成果自評 
 
本計劃於第一年完成大致架構的雛
形，及平台的基本測試與驗證。接下來的
三年計畫，將會在不同的平台上，繼續研
究多核心嵌入式平台的軟體開發，相信這
邊的努力對於將來有很好的參考與基礎。 
 ㄧ開始對於效能的部份沒有很準確的
評估，先以系統的功能性為主，之後可持
續針對效能來做調校，以及功能的擴充。 
 
五、參考文獻 
 
 Microprocessor Software-Based  
Self-Testing Subsystem (MSSS) 
 
[1] N. Kranitis, A. Paschalis, D. Gizopoulos, and G. Xenoulis, 
“Softwarebased self-testing of embedded processor,” IEEE Trans. 
Comput., vol.54, no. 4, pp. 461–475, Apr. 2005. 
[2] F. Corno, M. Reorda, G. Squillero, and M. Violante, “On the 
test of microprocessor IP cores,” in Proc. Design Autom. Test Eur., 
2001, pp. 209–213. 
[3] F. Corno, G. Cumani, M. Reorda, and G. Squillero, “Fully 
automatic test program generation for microprocessor cores,” in 
Proc. Design Autom. Test Eur., 2003, pp. 1006–1011. 
[4] K. Batcher and C. Papachristou, “Instruction randomization self 
test for processor cores,” in Proc. 17th IEEE VLSI Test Symp., 1999, 
pp.34–40. 
[5] L. Chen and S. Dey, “Software-based self-testing methodology 
for processor cores,” IEEE Trans. Comput.-Aided Design Integr. 
Circuits Syst., vol. 20, no. 3, pp. 369–380, Mar. 2001. 
[6] N. Kranitis, A. Paschalis, D. Gizopoulos, and Y. Zorian, 
“Effective software self-test methodology for processor cores,” in 
Proc. Design Autom. Test Eur., 2002, pp. 592–597. 
[7] L. Chen, S. Ravi, A. Raghunathan, and S. Dey, “A scalable 
software-based self-test methodology for programmable 
processors,” in Proc. 40th Design Autom. Conf., 2003, pp. 
548–553. 
[8] C. H.-P. Wen, L.-C. Wang, K.-T. Cheng, W.-T. Liu, and J.-J. 
Chen, “Simulation-based target test generation techniques for 
improving the robustness of a software-based-self-test 
methodology,” in Proc. IEEE Int. Test Conf. (ITC), 2005, pp. 
936–945. 
[9] C.-H. Chen, C.-K. Wei, T.-H. Lu, and H.-W. Gao, 
“Software-Based Self-Testing With Multiple-Level Abstractions for 
Soft Processor Cores,” in IEEE Trans. VLSI., vol.15, no. 5, pp. 
505–517, May 2007. 
[10] A. Paschalis, D. Gizopoulos, N. Kranitis, M. Psarakis, and Y. 
Zorian, “Deterministic software-based self-testing of embedded 
processor cores,” in Proc. Design Autom. Test Eur., 2001, pp. 
92–96. 
[11] A. Paschalis and D. Gizopoulos, “Effective software-based 
self-test strategies for on-line periodic testing of embedded 
processors,” IEEE Trans. Comput.-Aided Design Integr. Circuits 
Syst., vol. 24, no. 1, pp. 88–99, Jan. 2005. 
[12] P. Parvathala, K. Maneparambil, and W. Lindsay, “FRITS-A 
microprocessor functional BIST method,” in Proc. Int. Test Conf., 
2002, pp. 590–598. 
[13] A. Burdass, G. Campbell, and R. Grisenthwaite et al., 
“Embedded test and debug of full custom and synthesisable 
microprocessor cores,” in Proc. IEEE Eur. Test Workshop, 2000, 
pp. 17–22. 
[14] R. S. Tupuri and J. A. Abraham, “A novel functional test 
generation method for processors using commercial ATPG,” in 
Proc. Int. Test Conf., 1997, pp. 743–752. 
[15] R. S. Tupuri, A. Krishnamachary, and J. A. Abraham, “Test 
generation for gigahertz processors using an automatic functional 
constraint extractor,” in Proc. Design Autom. Conf., 1999, pp. 
647–652. 
[16] C. H.-P. Wen, L.-C. Wang, K.-T. Cheng, K. Yang, W.-T. Liu, 
and J.-J. Chen, “On a software-based self-test methodology and its 
application,” in Proc. 23rd IEEE VLSI Test Symp., 2005, pp. 
107–113. 
[17] T. J. Foster, D. L. Lastor, P. Singh, “First Silicon Functional 
Validation and Debug of Multicore Microprocessors,” in IEEE 
 8 
[15] Embedded System: definition, 
URL:http://www.ksu.edu/year2000/workshop/techiy2k/tsld025.htm 
[16] Karim Yaghmour,“Building Embedded Linux 
Systems,”O’Reilly, 2003 
[17] Robert Love, "Linux Kernel Development 2ed", Novell Press, 
2005. 
[18] John L. Hennessy & David A. Patterson, “Computer 
Architectures Third Edition“, CA, USA: Morgan Kaufmann 
Publishers, 2003 
 
 JVM Porting Subsystem (JVMPS) 
 
[1] Squawk JVM 
research.sun.com/projects/squawk/squawk-rjvm.html 
[2] JamVM http://jamvm.sourceforge.net/ 
[3] GNU Classpath http://www.gnu.org/software/classpath/ 
[4] M. Anton Ertl “Stack caching for interpreters, ” Proceedings of 
the ACM SIGPLAN 1995 conference on Programming language 
design and implementation, 1995 
 
 Middleware Support  
for Digital Life Subsystem (MSDLS) 
 
[1] Microsoft Corp., Universal Plug and Play Device 
Architecture, v.1.0, June 2000, 
http://www.upnp.org/download/UPNP_UnderstandingUPN
P.doc 
[2] D. Marples and P. Kriens, “The Open Services Gateway 
Initiative: An Introductory Overview,” IEEE 
Communications Magazine, December 2001 
[3] DLNA, “DLNA Networked Device Interoperability 
Guidelines,” Digital Living Network Alliance, March 2006 
[4] HAVi, “HAVi, the A/V digital network revolution,” White 
Paper 1999, http://www.havi.org/pdf/white.pdf 
[5] F. Curbera, Y. Goland, J. Klein, F. Leymann, D. Roller, S. 
Thatte, and S. Weerawarana. “Business Process Execution 
Language for Web Services,”  
http://www-106.ibm.com/developerworks/webservices/li
brary/ws-bpel/. July 2001 
[6] K. Fujii, and T. Suda “Dynamic Service Composition Using 
Semantic Information,” International Conference On 
Service Oriented Computing, November 2004 
[7] F. Casati, S. Ilnicki, L. Jin, V. Krishnamoorthy1, M.-C. Shan, 
“Adaptive and dynamic service composition in eFlow,” 
Conference on Advanced Information Systems Engineering 
(CAiSE), March 2000 
[8] William K. Cheung, Jiming Liu, Kevin H. Tsang, Raymond 
K. Wong, “Dynamic Resource Selection For Service 
Composition in The Grid”, Proceedings of the 
IEEE/WIC/ACM International Conference on Web 
Intelligence, 2004 
[9] Xiaohui Gu, Klara Nahrstedt, “Dynamic QoS-Aware 
Multimedia Service Configuration in Ubiquitous Computing 
Environments”, Proceedings of the 22nd International 
Conference on Distributed Computing Systems (ICDCS’02) 
[10] Cyberlink for Java 
http://www.cybergarage.org/net/upnp/java/ 
[11] UPnP Forum, http://www.upnp.org/ 
[12] ITEA SODA project, 
http://www.soda-itea.org/Home/default.html
國科會補助出席國際學術會議及參訪報告 
97年6月4日 
報告人: 黃悅民教授 
國立成功大學 工程科學系 
計畫編號  
會議及參訪時間：97年5月18日- 25日  
會議及參訪地點：美國華盛頓州西雅圖市 
 
 
會議及參訪摘要 
 
    本人此次參加於美國華盛頓州 西雅圖市(Seattle, Washington, USA)舉行之
2008 IEEE國際電路與系統研討會(2008 IEEE International Symposium on Circuits 
and Systems 簡稱 ISCAS 2008)及訪問微軟(Microsoft)及華盛頓大學(University 
of Washington)，出國工作項目如下：  
     1) 主持一場議程； 
     2) 宣傳由成大主辦之2009 IEEE國際電路與系統研討會與PCM2009； 
     3) 參加多媒體應用與系統技術委員會(Multimedia Systems & Applications 
Technical Committee)會議； 
     4) 參加視訊訊號處理與通訊技術委員會 (Visual Signal Processing & 
Communications TC)會議； 
     5) 參訪微軟(Microsoft)  
     6) 參訪華盛頓大學(University of Washington) 
 
 
一、會議大要 
  「二OO八IEEE國際電路暨系統學術研討會」係國際電子電機工程師學會
電路暨系統學術會(IEEE Circuits and Systems Society)主辦之全球年會，本年在
美國華盛頓州西雅圖市會議中心舉行，參與人數超過1200人以上。本會議分 
類比信號處理(Analog Signal Processing) 
生醫電路與系統(Biomedical Circuits and Systems) 
盲信號處理(Blind Signal Processing) 
蜂巢類神經網路與陣列計算(Cellular Neural Networks and Array Computing) 
通訊電路與系統 (Circuits & Systems for Communications) 
電腦輔助網路設計(Computer-Aided Network Design) 
消費者技術與應用(Consumer Technologies & Applications) 
數位信號處理(Digital Signal Processing) 
圖形理論與計算(Graph Theory and Computing) 
生活科學與應用(Life-Science Systems and Applications) 
多媒體系統與應用(Multimedia Systems and Applications) 
奈米電子技術與系統(Nanoelectronics and Gigascale Systems) 
神經系統與應用(Neural Systems and Applications) 
非線性電路與系統(Nonlinear Circuits and Systems) 
電力系統與電力電子電路(Power Systems and Power Electronic Circuits) 
 3 
3. 擔任議程主持人：C4LK- Multimedia Understanding and Recognition 
(Lecture) 
4. 參加晚上大會再見酒會(Farewell Party)。 
 
05月22日：參訪微軟 
由台灣微軟安排參訪了微軟最新的數位生活體驗屋及最新技術、產品的體
驗與報告，了解有關科專計畫目前業界最新的研發訊息，實對未來執行「人本
智慧生活科技整合中心」相關技術的研究與發展，有非常大的助益。 
05月23日：參訪華盛頓大會電機學院， 
參訪數個實驗室，了解目前學界在人機與數位生活上的應用與研究，並與
數位前端科技的教授做研究交流，交換「人本智慧生活科技整合中心」計畫相
關技術之心得。 
 
05月24-25日：回程 
參訪完華盛頓大學後，隨即前往機場，搭乘24日淩晨的飛機回台灣，於25
日早上回到台南。 
 
三、攜回資料 
1. 2008 ISCAS之論文集光碟一片及大會手冊各乙份。 
 
四、心得 
1. 此次會議議題相當廣泛，大家參與會議時討論亦非常熱烈，大會安排多場
海報式發表，使得大家可以針對自己興趣之主題充分與發表者深入討論，
因此收獲相當多。 
2. 宣傳由本人承辦之PCM2008 穫得熱烈回應。 
3. 經由這次會議的參與，不但得以認識一些相關領域之學者，互相交換研究
心得，而且可吸收最新資訊，對日後計劃之執行將有所助益。 
4. 協助成大宣傳ISCAS 2009在台舉辦，收穫很多，也替國家爭取學術地位。 
5. 參觀華盛頓大學實驗室與黃正能教授、孫明庭教授討論多媒體前膽技術並
參觀 Voice-joystick 及相關影音實驗室，建立合作關係。 
6. 參加 Intel 在華盛頓大學之實驗室，此實驗室主要研究 Sensor Network，包
括麥克風及 IP Camera陣列，可應用在 Ubiquitous 人機界面。 
 
 
