中文摘要 
 
 
宅經濟興起，孕育著無限商機。兼具學習性與娛樂性的棋藝活動，成為許多
棋類遊戲愛好者的休閒樂趣，同時增進注意力、思考能力以及專注能力。隨著資
訊科技的進步，網際網路將人工智慧領域之電腦對局成果帶入一般家庭，無論是
象棋、圍棋、西洋棋等，棋友們可以透過上網彼此對奕，進而設計棋力更為高段
的電腦奕棋對局程式，或從事棋類遊戲的創新與發明，身份由數位內容的使用
者，轉換為數位內容的開發者。 
 
對於新發明或較冷門的棋類遊戲，往往需要特別為該遊戲開發並架設網站，
方有利於推廣。而電腦中局搜尋引擎的改良與進步，亦有賴於大量對局測試結果
的分析與研究。因此，本計畫預定設計並製作一個棋類遊戲的測試通用平台，除
了提供對局程式全自動化的棋力測試環境與結果分析資訊之外，棋類遊戲的創新
發明，亦可透過通用平台的一致性地架構，快速完成該種遊戲的網路平台之建置
工作。對於提昇國內電腦奕棋軟體的棋力程度，與新棋類遊戲的創新發明，提供
一個良好且完善的開發環境。 
 
 
關鍵詞：電腦奕棋、網路平台、數位內容 
一、前言 
 
目前市面上有許多有關下棋的網路平台，像是 LGS、娛樂玩子、CYC 遊戲
大聯盟等【4】。LGS 是個以 Client-Server 架構為基礎，專門下圍棋的平台，使
用者下載並安裝連線主程式之後，再利用該客戶端連到伺服器對奕。此外，娛樂
玩子平台則是提供象棋，但也是需要先下載主程式安裝後才能進行遊戲。 
 
1994 年，交通大學吳毅成教授即針對 Play-On-Table Games 建立模型並架設
系統【5】。1996 年，A. Shaikh et al. 建立 on-demand 計算模型，在避免投入大量
伺服器資源的情況下，提供多人對奕的功能【1】。1996 年，李崇榮和陳柏翰共
同以 Client-Server 架構，設計並製作主從式架構電腦象棋整合環境，初步實現了
電腦象棋網路對奕功能【11】【14】。1999 年，徐健智和陳凌彬設計以 Java 為基
礎的網際網路遊戲發展平台【12】【17】。2006 年，東華大學顏士淨教授針對圍
棋設計了線上評分機制【9】。 
 
然而這些平台大多無法直接在網頁上對奕，必須透過客戶端程式的下載及安
裝，而在安裝的過程使用者可能會遇到一些問題。此外，部分平台的功能，只侷
限於特定棋類遊戲，如圍棋、象棋，缺乏對其他棋類遊戲的支援，這表示該平台
架構並無法應用到大部分的棋類，若能以整合的方式，使得大部分共同的功能（免
下載、棋局存檔、線上觀看棋局、使用者設計的中局對奕程式可以連接到此平台
上對奕…等等），可以應用至大部份的棋類，使用者只需要熟悉此平台的操作，
不需要為了玩一種棋而去找另外一個平台【11】【14】。 
 
部分平台會有已經內建好的棋類遊戲中局對局程式，可供和玩家對奕，然
而，倘若一直是同一個程式並沒有進步，抑或是玩家的棋力超越此對局程式，則
該程式對於此名使用者，就變得沒有用處了。因此，倘若遊戲平台具備讓使用者
自行設計的中局對局程式可以連接到此平台上，除了實現人機對奕之外，系統更
能自動協助使用者找出錯誤或是不完美的地方加以分析改進，可以改善其他平台
內建棋類遊戲對局程式之棋力停滯不前的問題。 
2.3 棋類中局對局程式網路棋力測試平台 
 
人機對奕平台進一步提供程式設計人員測試自行設計之對奕程式的棋力，也
可以省去手動操作的麻煩。由於中局搜尋引擎採用的演算法與審局函數決定棋力
的高低，但是在調整演算法之後，程式設計師往往難以判斷棋力是否有所進步，
或是有沒有程式臭蟲（bug）存在。因此，本系統提供的平台與對局程式整合機
制，遊戲平台全自動地提供大量對局測試的統計資訊。這些資訊來自多個不同中
局程式的彼此對戰、新版與舊版中局程式的對戰（self play），足以讓程式設計人
員可以分析程式的優缺點，並加以改善、測試，這對建構國內的電腦對局程式設
計環境有莫大助益。 
 
 
2.4 開局庫輔助之對局程式網路測試平台 
 
電腦棋類程式通常分為開局、中局、殘局。開局大多是讀棋譜，照著現有的
開局庫進行，但到了中局則是雙方廝殺的階段。對於普遍的棋類遊戲（例如：象
棋、圍棋、西洋棋）而言，存在量多質優的開局棋譜；但對於新發明或較少棋友
遊戲的棋類（例如：六子棋，九路圍棋）而言，就可藉由本計畫所設計的人機對
奕平台，由棋友間與不同對局程式之間的對局記錄建立開局知識庫，提供使用者
存放棋局紀錄，和上傳棋局的等功能，使得使用者可以在一個熟悉的環境下，把
所有棋局放在同一個地方觀賞並分析。 
 
進而運用開局知識庫來指定多個起始盤面給程式設計人員的對局程式，達成自
己和自己對下（selfplay），亦或是和別人的程式對奕的功能，而大量對局的結果
可用於分析改進對局演算法。因此，這個功能將有助於開發棋類遊戲的程式設計
人員，以更便利的方式驗證程式的中局棋力。 
 
 
2.5 新遊戲通用設計平台指南 
 
本計畫建立各種棋類遊戲的通用設計平台，以「六子棋」為出發點，採取公版
的模式，先開發出一個穩定且可以多人對奕之通用平台，然後可以快速微調而適
用於其他棋類遊戲（例如，象棋、九路圍棋）和 non-deterministic games【2】【13】
【18】，並完成上述延伸功能。此平台將可以適用於新發明之棋類遊戲的開發。 
 
3.3 六子棋規則【7】 
 
六子棋從剛開始發展，便有著公平，玩法簡單的說法，所以其規則也非常簡
單，六子棋和傳統五子棋非常類似，且只有以下三項規則： 
 
z 二名玩家，各持黑子或白子，且黑方先下。 
z 由持黑子的人先下，之後雙方各互下二子，直的橫的斜的先連成六子以
上算獲勝。若是棋盤下滿但是未達連六子以上，則為和局。 
z 沒有禁手的限制，且長連（連超過六子）算獲勝。 
 
六子棋的棋盤和傳統五子棋、圍棋一樣，採 19 路，但是由於公平性並不是
問題，所以理論上棋盤可以無限延伸。 
 
 
3.4 未來延伸棋規 
 
對一般的棋士來說，以上三點規則就已經足夠，但是經過許多高段棋士的對
弈，提出若干問題： 
 
(a) 目前高段棋士皆以 19 路棋盤為主，雖然目前和局次數不多，但是高段棋士
認為六子棋很有可能是和局的遊戲，若是有太多的和局出現，則此遊戲也比
較無趣，雖然目前看起來和局數並不多，但是以後發展較完全後，可能會是
一個問題。 
 
(b) 當雙方對下一百多步之後，若沒有找到很明確的必勝下法，則很可能此局會
造成和局，且六子棋規定必須等到整盤都下完才算結束，但是若有一方堅持
一直下，可能會有困擾產生。 
 
(c) 以現在的情況來說，高段棋士比較喜歡持白，所以造成高段棋士只研究白棋
的下法，這會造成六子棋發展的阻礙。 
 
(d) 由於六子棋很有可能是和局的遊戲，所以現在也有許多人提出不同的規則，
像是如果下滿棋盤可以由誰最多連五獲勝或是有一方下一手 pass 之後下滿
整個盤面還沒有連六出現，則第一個喊 pass 的獲勝，雖然目前有人提出這樣
的規則，但是目前還沒正式採用。 
 
 
 
四、研究方法 
 
4.1  開發環境簡介 
 
此系統平台建立在微軟的.Net 平台下，此平台包含建置網站的 ASP.NET 以
及應用程式的開發，這對本系統的建置有良好的結合力。 
 
在.NET 平台中，我們開發程式都根據.NET Framework 來做整個系統的開
發，以下為.NET Framework 概觀簡介： 
 
z 提供一致的物件導向程式設計環境，不論目的碼（Object Code）是在本
機中儲存及執行、在本機執行但分散至網際網路或在遠端執行。 
z 提供可減少軟體部署和版本控制衝突的程式碼執行環境。 
z 提供加強程式碼安全執行的程式碼執行環境，包括未知或非完全信任之
協力廠商所建立的程式碼。 
z 提供可消除編寫指令碼或解譯環境效能問題的程式碼執行環境。 
z 讓開發人員在使用各式各樣的應用程式時仍能體驗一致性，例如 
Windows 架構的應用程式和 Web 架構的應用程式。 
z 根據業界標準建置所有通訊，確保以.NET Framework 為基礎的程式碼
能夠與其他程式碼整合。 
 
以上幾點為.Net Framework 的特色，根據這些特性，我們將系統建置在.Net
平台上。 
 
 
4.2  系統架構 
 
本計畫之系統架構，如圖一所示。 
4.4  系統模組 
 
我們將此系統建立在.Net 平台之上，並且建置入口網站，透過該網站來進行
此平台上的所有功能，我們將功能大致分為六個模組，於下列各小節說明。 
 
 
4.4.1  網站 Website 
 
此網站是使用 ASP.NET 開發，其中包含使用者註冊、登入、對弈、打譜、
觀看棋局的入口，以及結合微軟的 Silverlight、些許 Flash 來當成網頁的元素。 
 
整體網頁架構我們利用 ASP.NET 並結合資料庫製作基本的會員系統，也將
對奕、打譜之實際上會使用到的功能，實作在網頁上，讓此網站變成一個入口網
站，在此網站上可以讓使用者隨心所欲的使用各項功能，我們也預留了一些空
間，供後續的新增及發展，在實作上由於是一般的網頁設計並加入 Silverlight、
Flash 元素，所以在網站部分皆按照原先的規劃順利進行。 
 
 
4.4.2  遊戲介面 
 
遊戲介面的設計，本計畫同時兼顧使用者和程式設計師的觀點。 
 
(1) 以使用者的觀點；在對弈介面中，我們設計出簡潔且易懂、容易上手並
具親和力的友善介面，提供給使用者使用，讓每個初次使用此介面的使用者，都
能在最短時間內上手，在此介面中包含出手點的標示、選取方框的提示、簡易的
計時器、聊天、棋步資訊的記錄、以及手數的標示、棋局回顧之多樣化功能供使
用者使用。 
 
(2) 以程式設計師的觀點:在以往開發專案時，常會有開發及維護上的問題，
舉例來說，在開發上，由於每位程式設計師的設計模式可能都有相當大的差異性
存在，例如程式碼的編排，變數的使用、程式碼風格都可能因程式設計師而異，
在以往常常會發生 A 開發六子棋，B 開發象棋，結果因為二個人設計的方式不
一樣，而導致無法湊在同一個平台之下，在維護方面，因為六子棋和象棋分別為
A 和 B 所設計，所以當 C 要維護此系統時，必須先將 A 的程式碼完整閱讀一次，
也要把 B 程式碼完整閱讀一次才有辦法維護 A 與 B 的程式，且在 debug 上也需
要二倍的功夫，因為需要負責對二份程式碼除錯，有鑑於上述這種情形，我們在
此對弈介面的背後程式碼，設計出一份棋類通用的程式碼，藉由此份通用的程式
碼，可以讓程式設計師在開發各種棋類時有一套相同的標準可遵循，只要依據我
點、比賽日期、原始勝負之可做為參考的資訊，有鑑於此，我們在設計此系統時，
不僅僅是將所得到的棋局檔轉成自定義的棋局格式存入資料庫之外，我們也提供
了使用者在線上修改這些資訊的權力，這將會使得整個棋局檔的資訊趨近於完
整，也對於許多愛好下棋的人士，不在只局限在單機版的棋局檔，藉由網路的流
傳，而造成資訊錯誤或是不全的情況發生，這將是線上棋局庫系統的一大發展優
勢。 
 
 
4.4.5  打譜系統 
 
此打譜系統目前是根據棋局庫中所收集的棋局來做打譜的功能，在此打譜系
統的設計上，使用者可以對於系統所儲存的棋局庫，利用我們所設計的打譜介
面，加以打變化譜，並且在每一步都可以加入自己的注解及評論，同時也可以看
到別人的注解以及別人所打的變化譜，在此系統中，不僅僅是可以對原始棋步做
打變化譜的動作，甚至是其他使用者打的變化譜，你可以在變化譜中在加入變化
譜，這將讓一個棋局檔中，可以有更多的變化可以觀賞，以及觀看更多人對於此
棋步或是此棋局的評價或評論，這可以使得使用者在不僅在棋局庫上，可以看到
名手的對局，對於此對局更可以加入自己的看法、以及參考他人的看法，藉此使
用者可以綜合此棋局所有使用者所加入的資訊，做出最適當的走步，這對於使用
者的棋力來說，可能會有某種程度的提升。 
 
由於棋局庫系統相較於對弈，並非常要求即時性，所以我們利用 Silverlight
配合 Web Service 來做為開發棋局庫系統，在實作上，我們利用 Silverlight 來當
作操作界面，並實作打譜、棋局播放器、注解、訂正棋局資訊功能，在配合 Web 
Service 從伺服器端下載棋局庫的資料，並在存檔時利用 Web Service 來做存入資
料庫的動作，在打譜功能上，我們將一場對局做成樹狀結構並存入資料庫，在打
譜界面上，我們可以對任意一步打變化譜，並對每一步皆可加上注解，不僅能讓
不同使用者互相觀看其他使用者所打的變化譜，並分辯出優劣，也可以讓不同使
用者互相觀看其注解，另外，在此系統中，我們不僅實作出打譜之外，也可以讓
使用者修改該局的資訊，例如：紅方姓名、黑方姓名、比賽時間之對局資訊，在
資料庫中，為了避免使用者的修改而混淆了原先的資料，所以我們將使用者修改
過後的記錄，另外存放在一張資料表中，而原始檔案存放在不同的表中，如此一
來，就不會因為使用者所修正的資訊不正確而把整個資料庫都弄亂，此外，此打
譜系統不僅能讓各使用者能在打譜上有個人思考的空間，也能透過觀看此棋局來
提升自己的棋力。 
 
 
 
好處就是可以隨時帶在身邊，如此一來，即可達成隨時隨地可下棋的功能，而不
將下棋局限在個人電腦前，這不僅對於此平台來說是一個相當具有前瞻性的功
能，也對於愛好下棋的使用者是一大福音。 
 
在手機平台中，我們利用 HTC 的 HERO With Android 1.5 做為測試環境，在
手機平台上使用 JAVA 程式語言來開發程式，藉此測試不同平台及不同語言間的
相容性。在手機上，我們成功實作出對奕系統以及觀看棋局的系統至手機上，首
先，對奕系統按照當初所設計的 TCP/IP 通訊協定來和 Server 交換資料，並且我
們將 Silverlight 上的對弈界面實作至手機上，使得在手機上可以和不論是玩家或
是 AI 下棋，在觀看棋局方面，我們設計成隨選棋局的方式，由伺服器隨機挑選
棋局庫內的棋局，並透過 TCP/IP 通訊協定的方式傳送棋局資料至手機上，並在
由手機上的棋局播放器來呈現給使用者，在手機的實作上我們可以驗證將手機連
接至網路奕棋通用平台上的可行性，同時也讓網路奕棋通用平台收到了原本預期
的成效。除了可以實作出 DLL 連接到此平台之外，我們也可以將最新的智慧型
手機系統，連接到此平台上，這不僅驗證了此系統有著跨平台、跨語言的能力，
同時也吸引了更多下棋的愛好者，透過各種多元的方式來存取我們的服務。 
 
 
4.4.8  平台測試器 
 
此平台測試器是為了測試 Server 程式的正確性所發展出來的子系統。在此
測試器中，我們利用 C/C++實作出一套可以模擬 Client 連上 Server 去做整套的對
奕測試流程。在此測試器中，我們利用 Multi-Thread Programming 的方式來達到
模擬多個使用者，從登入、開局、加入、對弈、結束之所有功能，並照著我們當
初所設計的流程來整個模擬若干次並可設定模擬的使用者數量，此外此測試器不
僅可以在一台電腦上執行模擬，也可以多台電腦同時執行模擬對奕，這將可以測
試伺服器的負載能力，在模擬的過程中我們記錄過程中是否有錯誤產生，例如封
包傳輸是否正確、同步區域是否處理適當、儲存的記錄是否正確之可能產生的問
題，在此平台測試器中，最大的好處就是若 Server 上設計有缺失，我們可以利
用這個程式來抓出 Server 中的一些問題，當然，此測試器除了測試缺陷之外，
若是 Server 加入了新功能，我們也可以將新功能加入至測試器內一併整合測試，
如此不僅可以縮短測試時間，也可以在第一時間發現 Server 中是否存在嚴重 bug
等錯誤，對於平台的未來發展，有著相當大的助益。 
(1) 棋局庫 
 
 
(2) 討論區 
 
 
(3) 對弈 
 
 
(4) 觀賞棋局 
 
 
(5) 教學 
 
 
(6) 登入 
 
 
 
 
 
5.2 對弈系統 
 
5.2.1  對弈流程 
 
對奕流程步驟，如圖三～圖七所示。 
 
(3) 在圖四的畫面設定遊戲參數，並按下確定後，開啟房間後如圖五。剛開局時，
由於尚未有玩家 2 加入，所以等待使用者加入的字樣會一直閃爍，並且畫面
呈現半透明的狀態，等到系統判斷有使用者加入後，便會移除等待使用者的
字樣並且取消半透明，且載入使用者資訊至右方並開始遊戲。 
 
 
圖五 
 
(4) 當開啟新局時，遊戲大廳便會出現等待中，以及已開始的房間，如果想要加
入某房間，只需點選加入的按鈕便會加入該局。如圖六所示。 
 
5.2.2  遊戲介面功能說明 
 
    遊戲介面分為四區，如圖八所示。 
 
 
圖八 
 
 
(1) 落子區 
此為落子區，當輪到落子方，可在區域 1 內落子，由於此範例為六子棋，所
以除了第一手之外，其餘一次下二顆子，在玩家落子後，可以在畫面上看到玩家
落了哪些子，並且用紅色的點標示出來。 
 
(2) 計分板 
此計分板分為二部分，第一部分為紅色的 Player1 及 Player2 字樣，當輪到
玩家 1 或者是玩家 2 走子時，該紅色字樣會不停閃爍，提示使用者換誰落子，
第二部分為玩家暱稱和積分以及剩餘出手秒數，在出手秒數的地方為開局之設定
的秒數，並且開始倒數，在此我們必須討論有關計時器的設計，由於我們是在網
路上下棋，難免會因為網路速度影響到計時器的秒數，所以計時器基本上僅供玩
 
圖十  覆盤 
 
 
5.2.3  觀戰 
 
圖十一是觀戰時的畫面，在畫面上可以看到有三個棋盤，分別是玩家 1、玩
家 2 以及觀戰者。 
 
圖十一  觀戰 
5.4 通用程式碼之設計 
 
 在設計通用程式碼的過程中，由於每種棋類都有些許的差異性，所以我們將
這些差異的地方挑出來，並製作成獨立的Function，以供開發人員可以清楚的了
解需要修改的地方，在通用程式碼的設計過程中，事實上介面及定時器，以及一
些遊戲上的流程，在每種棋類遊戲其實都大致相同，所以如果要開發另一種棋類
遊戲，可以直接複製現有的程式碼，而不用在重新開發一次，這將節省時間及
Bug的產生，在程式碼的部分，可以通用的地方我們盡量製作成API，例如貼圖
或是判斷超時以及初始設定，這將有助於開發者的使用，而我們將棋類有較大差
異性的地方，譬如判斷剩負，走子的方式以及棋盤大小、間距，分別獨立出來，
這將有利於開發者清楚的了解如果是勝負或是走子的地方要修改的話，需要修改
些部分。 
 
 
5.5 範例：依通用程式碼架構建立象棋環境 
 
當我們建構完成六子棋網路環境之後，由於採用通用程式碼架構，在此架構
下建構或轉換為象棋網路環境就相當容易。步驟如下： 
 
(1) 將六子棋的程式碼複製一份至象棋的資料夾 
(2) 準備好象棋的圖片並加入至專案中 
(3) 修改棋盤格距及棋子大小、棋盤大小、貼圖座標之初始參數 
(4) 修改開局參數的處理 
(5) 替換判斷勝負的審局函數（此部分我們在設計中，負責撰寫勝負函式的
程式設計師，只需要最後是回傳0、1、2即可，至於內部如何判斷對通
用程式碼來說並不重要） 
(6) 替換Move的Function 
(7) 替換右邊棋步資訊內所要顯示的字 
(8) 編譯 
 
根據此通用程式碼的實驗，我們先製作出六子棋，接著再利用上述步驟，順
利的快速修改出象棋、九路圍棋、十九路圍棋等程式碼，這對於這份通用程式碼
的設計，截至目前為止是非常成功的。 
 
 
 
 
 
 
圖十三 
 
功能介紹 
 
(1) 在區域1中，有該棋局的基本資訊，可供使用者參考。 
(2) 在區域2中，為一個樹狀結構，並可讓使用者除了打變化譜外，也可以打變
化譜的變化譜，並在此區域中完整呈現，使用者可以透過選擇欲看之棋步，
並會在左方棋譜區顯示該盤面，使用者也可以透過滑鼠滾輪來達到走子的目
的。 
(3) 此區域為棋譜的播放器，並記錄主要棋步的資訊，在其下方共分為： 
(a) <<：向前四步 
(b) < ：向前一步 
(c) 自動撥放鍵：點選此鈕即自動播放 
區域 1：提供使用者訂正此棋局的資訊，藉由使用者的訂正或是補齊，可以使得
所有使用者有著更好的使用環境，在此部分我們採用原始資料為一張資
料表，後來使用者訂正的資訊為另一張資料表，在棋局讀取出來時，將
二張資料表做比對的動作，如果在使用者訂正的資料表中為空，則使用
原始資料表的資料，如果使用者有訂正過其中的資訊，則優先使用使用
者訂正後的資訊，這樣的設計目的為防止使用者亂訂正，而影響到原始
資料的正確性及完整性，如果分二張表存放，在發生使用者訂正錯誤時，
我們只需要刪除該訂正錯誤的部分，就可以快速回復正確的資訊，且一
旦發生使用者亂修改，我們將取消棋訂正的權限，藉此防止資料庫混亂
的情形發生。如圖十五所示。 
區域2：此區域會排列出所打的棋步資訊 
區域3：此區域為功能鍵，上一步為回到上一步的盤面，清除為整個清除重新打
譜，存檔為將所打的譜儲存至伺服器。 
 
 
圖十五  取消權限的畫面 
在資料庫的儲存方面，由於考慮除了主要棋步外尚有變化棋步，所以我們設
計了樹狀結構的方式，儲存在資料庫中。由於考慮到同一份棋局，可能會有多位
使用者同時按下存檔的可能性，在存檔的同時，照道理說如果是打相同的棋步，
便只需存一次即可，但是因為考慮到多人同時存檔的問題，如果在存檔的同時，
去判斷此棋步是否已經儲存過，這將會可能需要鎖定資料表，我們考慮很多人一
起操作同一局的狀況下，可能會造成等待過久發生超時的問題，或者是資料會被
覆蓋或是錯亂的問題，所以我們在設計時，在資料庫結構上，設計成每個人所儲
存的棋步並不會互相干涉，且在按下存檔時，並不做任何判斷是否是打了和資料
庫內有重複的棋串，而是等到使用者開啟棋局要觀看時，利用Web Service將伺服
器上的棋步全部先下載下來，在Client端在做棋步重複的處理動作，在此設計下，
將可避免多人同時存檔使得發生不可預期的情況產生。 
 
 
5.7 DLL 實做之探討 
 
在此DLL中我們考慮許多棋類遊戲中局對奕程式都是使用C/C++所撰寫而
成，所以我們以C/C++為主要考量，並且將其包裝成DLL的方式，以利使用者呼
叫及使用。在此DLL當中，我們必須先利用Socket實做所有對弈的功能，例如從
開局、加入之所有對弈功能，並設計一套介面提供使用者使用。此DLL可以達到
減化使用者操作的困擾，因此大致上只提供二個函式：Move( )和GetMove( )。在
Move方面則當使用者的AI程式落子或走子後，呼叫DLL內的Move的函式，該
Move函式則會將所移動的棋步利用TCP/IP的通訊協定傳送到Server端；在
GetMove方面，利用函式指標的方式，使用者在初始化此DLL時變將其接收棋步
的函式先利用指標函式傳送到DLL內，這樣以利在DLL接收到棋步資訊時，可以
主動呼叫該AI程式，並傳遞正確的參數給使用者的AI程式。 
 
透過上述設計方式，使用者可以任意設計其AI程式，對於DLL套件，只關心
AI程式所傳過來的棋步是否有送到Server上，或是說是否有接收到伺服器傳過來
的棋步，這將讓使用此DLL的使用者，不必為了要使用此DLL而大幅修改程式
碼，只需要利用LoadLibrary( )載入DLL後，並利用GetProcAddr( )取得Move的函
式位址，並且建立一個等待接收棋步的Function，並且傳送至DLL內，即可完成
連線到伺服器上對弈的功能，這樣簡單易用的設計，相信對於需要用到此技術的
程式設計師，是一大優勢，透過此DLL的使用，我們也計算勝負次數，來讓新舊
程式對下可以藉由輸贏的比率來判定程式棋力是否有更向上提升。 
 
 
 
 
 
圖十七  六子棋AI介面圖 
 
(b) 手動落子的範例（如圖十八所示） 
 
 
圖十八  手動落子 
5.10  手機連接至平台對奕，和手機對奕系統實作之探討 
 
為了驗證本系統在跨平台下的穩定性，我們實作了以手機連接至平台對奕的
版本。圖二十一為實體機操作畫面，圖二十二～圖二十五以下程式截圖方式呈現。 
 
 
 
圖二十一 
 
圖二十二  輸入帳號密碼登入之畫面 
 
 
 
圖二十三 登入後的功能選項 
 
 
 
 
 
圖二十四  對奕中的狀況 
 
5.11  手機隨選棋譜觀賞，和隨選棋譜探討 
 
圖二十六為點選隨選棋局按鈕之後，會隨機從棋局庫選擇棋局下來播放。使
用者可以一手一手播放並會顯示玩家1和玩家2的姓名，若不想觀看則可點選Exit
按鈕回到主選單。 
 
圖二十六 
 
 由於手機上的作業系統和Windows本身即有差異，不論是提供的物件或是操
作模式甚至是運算效能，手機在目前都還遜色於個人電腦，所以目前僅將播放器
實作至手機上，希望在未來可以加入更多的功能至智慧型手機中。 
 
 
5.12  手機平台探討 
 
由於智慧型手機使用者日益漸增，所以我們希望讓廣大的智慧型手機使用者
也可以在智慧型手機上享受到此網路奕棋通用平台所提供的服務。在手機實作上
由於先天上硬體的限制以及作業系統的種類不同，所以在手機上必須思考不一樣
的使用者介面，並提供簡單、容易上手使用的介面。而在手機設備上，我們也透
過TCP/IP做為我們的通訊協定，並利用Socket來和Server端交換資料，而我們透
過將資料和介面分開的方式，即利用Socket接收資料後才反應至介面上，透過這
種設計方式，就可以成功的將平台上的服務移植至智慧型手機上，相信在不久的
將來，利用智慧型手機結合網路弈棋通用平台上的服務將會蓬勃發展。 
 
 
六、結論 
 
6.1 本計畫完成之工作項目及具體成果 
 
本計畫完成建置一個穩定的網路通用平台。此平台除了提供快速開發出新發
明或較冷門的棋類遊戲的網路平台之外，更可以成為程式設計人員開發電腦對局
中局程式的測試與除錯平台，大幅提昇遊戲軟體的開發效率。完成之成品計有11
項： 
 
z 客戶端網頁，包含使用者註冊、登入、和開局及棋局庫的顯示介面 
z Silverlight 網路對奕整合環境 
z Silverlight 棋局播放器 
z 伺服端後台系統 
z 相關WebService、TCP/IP的開發 
z 資料庫之建置與資料表單之設計 
z 棋局庫管理系統之建置 
z 測試棋局之整理與蒐集機制 
z 中局對局程式與通用平台連接套件 
z 人機對奕平台的架設 
z 中局對局程式棋力測試與與分析系統 
 
 
6.2 成果自我評估 
 
 總結這整個平台的設計與開發，到目前為止，百分之百達成預期的成果，在
通用程式碼的設計上，更是已經從六子棋、象棋、九路圍棋、十九路圍棋上收到
良好的成果，也證明了通用程式碼的可行性，且也證明了在對弈的部分，採用
TCP/IP的通訊協定方式，遠優於使用Web Service，這也讓我們克服了即時性的困
難，且藉由設計成TCP/IP的模式，我們可以在任何只要有TCP/IP通訊協定的機器
上，即可經由TCP/IP通訊協定連接到此平台上，這是我們長遠的目標。 
 
在Server中利用分散式的服務方式，有效的降低伺服器方面的負擔，而使得
可以容納更多使用者，讓所有使用者都可以在一個穩定且順暢的伺服器上使用所
有功能。 
 
在打譜及棋局庫中，我們開放給使用者修正資訊，讓棋局庫更加完善，也藉
由使用者打的變化譜中，可以做更充分的交流及分享彼此的見解。 
參考文獻 
 
【1】 A. Shaikh, S. Sahu, M.-C. Rosu, M. Shea, D. Saha (1996), “On Demand 
Platform for Online Games”, IBM Systems Journal, Vol. 45, Issue 1. 
【2】 Berliner H. J. (1980), “Computer Backgammon＂, Scientific American, Vol. 
242, No. 6, pp. 64-72. 
【3】 Chang-Ming Xu, Z. M. Ma, and Xin-He Xu (2009), “A method to construct 
knowledge table-base in k-in-a row games”, Proceedings of the 2009 ACM 
symposium on Applied Computing, pp. 929-933. 
【4】 I-Chen Wu and Cheng-Da Shen (1998), “CYC: A Generic Game Server 
over Internet＂, The International Symposium on Internet Technology 
(ISIT’98), pp 223-226, April 1998. 
【5】 I-Chen Wu and C.-C. Hsu (2004), "The Model and Systems for Play-on-table 
Games", IEICE Trans. INF. & SYST. (SCI), VOL. E87-D, No. 11, November 
2004. 
【6】 I-Chen Wu, and Dei-Yen Huang (2005), "A New Family of k-in-a-row 
Games", the 11th Advances in Computer Games Conference (ACG'11), Taipei, 
Taiwan, September 2005. 
【7】 I-Chen Wu, Dei-Yen Huang and Hsiu-Chen Chang (2005), "Connect6", ICGA 
Journal (SCI), Vol. 28, No. 4, pp. 234-241, December 2005. 
【8】 I-Chen Wu and Shi-Jim, Yen (2006), "NCTU6 Wins Connect6 Tournament", 
ICGA Journal (SCI), September 2006. 
【9】 Shi-Jim Yen, Tai-Ning Yang, Wen-Pin Chen (2006), “Novel On-line Game 
Rating System of Go," Journal of Internet Technology, Vol. 7(2006), No. 1, 
pp. 77-83, ISSN 1607-9264. 
【10】 Yi-Hsien Wang and I-Chen Wu (2008), "Evaluating Java AWT for 
Cross-Platform Java Game Development", International Computer 
Symposium (ICS2008), Taipei, Taiwan, November 2008. 
【11】 李崇榮（1996）。“主從式架構電腦象棋整合環境—伺服器之設計與製作
＂。台灣大學資訊 工程研究所，碩士論文。 
【12】 徐健智（1998），“網際網路上桌上型遊戲之發展平台＂。交通大學資訊
工程研究所，碩士論文。 
【13】 莊凱閔, 陳玥汝, 林順喜（2007）,“電腦麻將演算法及相關議題之研究＂, 
第十二屆人工智慧與應用研討會，國立雲林科技大學，台灣。 
【14】 陳柏翰（1996）。“主從式架構電腦象棋整合環境—客戶端之設計與製作
＂。台灣大學資訊工程研究所，碩士論文。 
國科會補助計畫衍生研發成果推廣資料表
日期 2010年08月17日
國科會補助計畫
研發成果名稱
發明人
(創作人)
技術說明
技術移轉可行性及
預期效益
技術/產品應用範圍
產業別
計畫名稱:
計畫主持人:
計畫編號: 學門領域:
(中文)
(英文)
成果歸屬機構
(中文)
(英文)
電腦奕棋網路測試通用平台系統
陳志昌
98 -2622-E -033 -010 -CC3 人工智慧
電腦奕棋網路測試通用平台系統
The Common Platform of Network Test Systems in Computer Chess Games
中原大學 陳志昌
宅經濟興起，孕育著無限商機。兼具學習性與娛樂性的棋藝活動，成為許多棋
類遊戲愛好者的休閒樂趣，同時增進注意力、思考能力以及專注能力。隨著資
訊科技的進步，網際網路將人工智慧領域之電腦對局成果帶入一般家庭，無論
是象棋、圍棋、西洋棋等，棋友們可以透過上網彼此對奕，進而設計棋力更為
高段的電腦奕棋對局程式，或從事棋類遊戲的創新與發明，身份由數位內容的
使用者，轉換為數位內容的開發者。
對於新發明或較冷門的棋類遊戲，往往需要特別為該遊戲開發並架設網站，方
有利於推廣。而電腦中局搜尋引擎的改良與進步，亦有賴於大量對局測試結果
的分析與研究。因此，本計畫完成設計並製作一個棋類遊戲的測試通用平台，
除了提供對局程式全自動化的棋力測試環境與結果分析資訊之外，棋類遊戲的
創新發明，亦可透過通用平台的一致性地架構，快速完成該種遊戲的網路平台
之建置工作。對於提昇國內電腦奕棋軟體的棋力程度，與新棋類遊戲的創新發
明，提供一個良好且完善的開發環境。
For chess games that are new invented or less popular, it is
necessary to develop and build a website just for that game in order
to popularize it. The refinement and advancement of computer chess
search engines need the help of the test and analysis from a lot of
game playing. Therefore, this project has designed and implemented a
common platform of network test systems for all kinds of chess games.
The platform not only offers a test environment for chess programs to
play with each other automatically and to analyze the results, but
also is used as the structure of the new-invented chess game platform
and the work of constructing the platform will be finished quickly
accordingly. So, the common platform is a perfect environment for the
promotion of the strength of computer chess programs, and for the資訊服務業
遊戲程式設計與製作、資料庫之設計與製作、網路平台之設計與製作
電腦奕棋網路通用平台可用以快速開發各種棋類遊戲，預期可協助遊戲公司大幅增進
開發棋類遊戲軟體的效率，並增進軟體的效能與穩定性。
註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。
