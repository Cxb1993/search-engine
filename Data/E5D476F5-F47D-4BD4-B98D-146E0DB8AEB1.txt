 2
行政院國家科學委員會專題研究計畫成果報告 
限制與廣播支配問題之研究 
A Study of Restrained and Broadcast Domination Problems 
計畫編號：NSC 97-2221-E-259-017 
執行期限：97 年 08 月 01 日至 98 年 07 月 31 日 
主持人：彭勝龍 (Sheng-Lung Peng) 
計畫參與人員：蔡郁偉、張睿元、陳俊銘、林建邦、康淳政、王偉信 
執行單位： 國立東華大學資訊工程系 
 
中文摘要 
令 G=(V, E)為一個有限、簡單的無向
圖，其中 V 和 E 分別為 G 的點集和邊
集。點集合 D 稱為圖形 G 的支配集假如所
有在 V\D 的點都有一個在 D 中的鄰點。如
果在 V\D 的點也都有一個在 V\D 的鄰點，
那麼 D 就稱為 G 的限制支配集。若再進一
步限制 D 中的點也必須要有一個在 D 中的
鄰點，則 D 稱為全限制支配集，(全)限制
支配問題就是在 G 中找出一個最小的(全)
限制支配集。廣播支配集是支配集的另一
種變形，將支配集中的點視為廣播電台，
每一個點可以指定一個功率 k，表示廣播訊
號可以傳送到所有距離在 k 以內的點，廣
播支配問題是找出一個廣播支配集使得它
的功率總合是最小的。本計劃在研究一些
圖形上的(全)限制和廣播支配問題，我們
證明(全)限制支配問題在分裂圖(split 
graphs)上為 NP-complete，並在樹(trees)和
區塊圖(block graphs)上提出了多項式時間
的演算法。在廣播支配問題方面，我們在
區間圖(interval graphs)上提出了一個線性
時間的演算法，此結果改良了一個之前
O(n3)時間的演算法。 
關鍵詞：圖形演算法、限制支配問題、廣
播支配問題、分裂圖、區間圖 
Abstract 
Let G=(V, E) be a finite, simple, and 
undirected graph where V and E denote the 
vertex and edge sets of G, respectively. A 
vertex set D of G is a dominating set if every 
vertex in V\D has a neighbor in D. D is a 
restrained dominating set if D is a 
dominating set and every vertex in V\D has a 
neighbor in V\D. If every vertex in D has also 
a neighbor in D, then D is a total restrained 
dominating set of G. The (total) restrained 
domination problem of G is to find a 
minimum (total) restrained dominating set of 
G. Broadcast domination problem is another 
variant of the classic domination problem. By 
considering the vertices of D as radio stations, 
each station admits a positive integer k, the 
power of the station. Vertices in distance no 
more than k from the station can hear (be 
dominated) the station. The broadcast 
domination problem on G is to find a 
dominating set D of G such that the 
summation of the powers of vertices of D is 
the minimum. In this project, we show that 
the (total) restrained domination problem is 
NP-complete on split graphs and we propose 
polynomial-time algorithms on trees and 
block graphs. For broadcast domination 
problem, we propose a linear-time algorithm 
on interval graphs which improves a previous 
O(n3)-time algorithm. 
Keywords: graph algorithms, (Total) 
restrained domination problem, broadcast 
domination problem, split graphs, interval 
graphs 
一、簡介 
Let G = (V, E) be a finite, simple, and 
undirected graph where V and E denote the 
vertex and edge sets of G, respectively. For 
convenience, we denote an edge as (x, y) and 
say that x and y adjacent to each other in G. 
For a vertex v, we define its open neighbor 
N(v)={x | (v, x) ∈ E}. Vertices in N(v) are 
called the neighbors of v. The close neighbor 
 4
weight. 
Since the introduction of this problem, 
its computational complexity has been open 
[7, 13]. Since most of the interesting 
domination problems are NP-hard on general 
graphs, this gave some indication that 
broadcast domination problem might also be 
NP-hard for general graphs. Following this, 
in 2003 Blair et al. gave polynomial-time 
algorithms for computing broadcast 
domination of trees, interval graphs, and 
series–parallel graphs [3]. Recently, 
Heggernes and Lokshtanov proved that the 
broadcast domination problem can be solved 
in polynomial time [12]. However, its 
running time is in O(n6) where n is the 
number of vertices of the input graph. 
In this project, we study the (total) 
restrained domination problem on trees, 
block graphs, and split graphs. We show that 
these two problems are NP-complete on split 
graphs. Further, we propose polynomial-time 
algorithms for these two problems on trees 
and block graphs. For the broadcast 
domination problem, we propose a 
linear-time algorithm on interval graphs. This 
result improves a previous O(n3)-time 
algorithm. For graph classes that are not 
defined here, we refer to [4]. 
二、結果與討論 
In this project, we obtain fruitful results. 
For convenience, we summarize our results 
as follows. 
We first show that both restrained and 
total restrained domination problems are 
NP-complete on split graphs. Our reductions 
are from the fact that the domination problem 
is NP-complete on split graphs. These results 
sharpen previous NP-completeness results on 
chordal graphs where for the restrained 
domination problem it is shown in  [5] and 
for the total restrained domination problem it 
is shown in [15]. Besides, we propose 
linear-time algorithms for both problems on 
trees and block graphs. Our algorithms use 
the technique of dynamic programming on 
the tree structures of these graphs. Then 
algorithms work on a bottom-up direction 
with some constraints on vertices. Finally, we 
obtain linear-time algorithms. We omit the 
detail (it can be found in our manuscript). 
These results are collected in the following 
paper. 
[a] Chih-Shan Liu, Sheng-Lung Peng, and 
Chuan Yi Tang, Restrained and total 
restrained domination problems on some 
classes of graphs. Some ideas of this 
paper are presented in “The First Asian 
Association for Algorithms and 
Computation Annual Meeting (AAAC08), 
Hong Kong, April 26-27, 2008.” 
For the broadcast domination problem, we 
propose a linear-time algorithm on interval 
graphs. Our algorithm is based on a greedy 
approach on a left to right ordering of 
vertices. In particular, we maintain a property 
that there is always an “efficient” solution for 
broadcast domination on graphs. The result 
improves a previous O(n3)-time algorithm. 
Our preliminary version is prepared in the 
following paper. 
[b] Sheng-Lung Peng and Ruei-Yuan Chang, 
A linear-time algorithm for broadcast 
domination problem on interval graphs.  
三、計劃成果自評 
由上一節的討論，我們一共有二個主
要的成果，[a]篇論文的部分結果已經在香
港主辦的第一屆 AAAC08 會議裡報告過，並
獲得一些回響，透過這些意見，目前已經在
積極撰寫中，有很大的機率可以發表於 SCI
雜誌上。[b]篇論文原本有一個複雜的線性
時間演算法，預計投稿於今年的 NCS 會
議，然而在投稿前夕，我們發現有一個更
簡單的演算法，因次放棄投稿，目前準備
直接投稿雜誌，我們的方法簡單，但並不
直接，在區段圖上也許是一個賣點，直覺
上，它也可以 extend 到 AT-free graphs 上，
我們相信這是一個很有趣的結果，未來將
會受到肯定的。整體而言，我們認為這個
計劃有一個 happy ending，我們感謝國科會
的支持，使得基礎研究仍能持續推動，我
們深信透過持續的支持，我們的理論研究
可以站穩國際舞台。 
除以上結果外，本計畫並培養學生探
討問題的特性，進而學習如何設計適當的
演算法。 
