cryptanalysts will have a better idea how well 
certain cryptanalytic attacks work on real hardware, 
giving them better ideas how secure certain 
cryptosystems are.  As a proof of concept, we 
implement QUAD, a provably secure stream cipher, 
whose security is based on the hardness assumption of 
solving multivariate quadratic polynomial systems 
over a finite field, a well-known NP-complete 
problem.  However, such provable security comes at a 
price, and QUAD is slower than most other stream 
ciphers that do not have security proofs.  In this 
report, we discuss two efficient parallelization 
techniques for evaluating multivariate quadratic 
polynomial systems on GPU, which can effectively 
accelerate the QUAD stream cipher.  The first 
approach focuses on formula of summations in 
quadratics, while the second approach uses parallel 
reduction to summations. Our approaches can be easily 
generalized and applied to other multivariate 
cryptosystems. 
英文關鍵詞： Cryptography GPGPU QUAD 
 
I 
	 	
目        錄 
 
 
中文摘要……………………………………………………………………...II 
英文摘要……………………………………………………………………..III 
一、 前言……………………………………………………………………………1 
二、 研究目的………………………………………………………………………2 
三、 文獻探討………………………………………………………………………3 
四、 研究方法………………………………………………………………………5 
五、 結果與討論……………………………………………………………………7 
六、 參考文獻………………………………………………………………………8 
附件二：國科會補助專題研究計畫成果報告自評表………………………………9 
附件四：國科會補助專題研究計畫項下出席國際學術會議心得報告…………..10 
  
III 
	 	
英文摘要 
 
In the age of mobile cloud computing, the importance of information security can not 
be overemphasized.  Cryptography is the foundation of information security.  In this 
project, we aim to build a set of high-performance cryptographic software libraries for 
mobile cloud computing applications.  Such a set of libraries can be of essential 
importance to application programmers.  In the meantime, in order to carry out the 
complex cryptographic computations on the often CPU-power-hungry mobile 
platforms, we will utilize the industry OpenCL standard to migrate a large portion of 
the parallelizable cryptographic computations onto those coprocessors with higher 
computational power like GPU.  With help from such tools, cryptologists will be able 
to check more closely the security of many existing and new cryptographic primitives 
with much less effort.  Cryptographers will be able to quickly develop prototypes of 
new cryptosystems, getting a quick feedback whether these systems will have enough 
performance for practical deployment, whereas cryptanalysts will have a better idea 
how well certain cryptanalytic attacks work on real hardware, giving them better ideas 
how secure certain cryptosystems are.  As a proof of concept, we implement QUAD, a 
provably secure stream cipher, whose security is based on the hardness assumption of 
solving multivariate quadratic polynomial systems over a finite field, a well-known 
NP-complete problem.  However, such provable security comes at a price, and QUAD 
is slower than most other stream ciphers that do not have security proofs.  In this 
report, we discuss two efficient parallelization techniques for evaluating multivariate 
quadratic polynomial systems on GPU, which can effectively accelerate the QUAD 
stream cipher.  The first approach focuses on formula of summations in quadratics, 
while the second approach uses parallel reduction to summations. Our approaches can 
be easily generalized and applied to other multivariate cryptosystems. 
 
Keyword: Cryptography, GPGPU, QUAD 
2 
	 	
二、 研究目的 
QUAD 是一個可證明安全的串流式密碼系統，其安全性是根基於在有限體
上解多元二次多項式方程式的困難度，這是一個眾所周知的 NP-complete 問題。
然而，『可證明安全』是有代價的， 比起其他大多數不具備安全證明的串流式
密碼系統， QUAD 的速度非常慢，以致於在現實中，QUAD 的應用非常有限。 
在本計畫中，我們提出兩種在 GPU 上有效率實作多元二次多項式系統代入
的平行化技術，經實驗證明它們可以有效地加快 QUAD。第一種方法著重在二
次多項式求和公式，而第二種方法使用平行化減少求和的計算。這兩種方法可
以很容易地推廣應用到其他多元密碼系統。 
多元密碼系統使用多元多項式系統作為公鑰。多元密碼系統的安全性，一
般奠基於在有限體上解多元二次多項式方程式的困難度。多元密碼系統被認為
具有光明的前途，是因為它往往涉及較小的代數結構上的運算，與傳統如 RSA
公鑰密碼系統相比，它的執行速度不但較快，同時也可抵禦量子電腦的攻擊。 
多元多項式系統也可以用來建構對稱式密碼系統，例如本計畫所實作的
QUAD 密碼系統。如前所述，QUAD 雖有安全性證明，但其主要的缺點就是速
度較慢，所以如果能夠加快 QUAD，那就能夠結合來自兩個世界的優勢，相信
這樣的工作在將來必然有著極大地影響。 
Berbain 等人提出了幾種有效的多元密碼系統實現技術。在本計畫中，我們
將重新考慮 QAUD 在 GPU 上的實作。我們的主要貢獻是加快二次多項式的代
入，在 QUAD 的加密演算法中，這是瓶頸的計算。即使最後 GPU 無法將
QUAD 瓶頸計算加速非常多，有一個 GPU 實作仍然是有用的，因為我們將能夠
將密碼計算自繁忙的伺服器從 CPU 卸載到 GPU。 
 
  
4 
	 	
GPU 屬於 SIMD（single instruction multiple data）架構，所以最好能
夠同時處理多個簡單的任務。另一方面，單一 GPU 核心的性能並不比
CPU 更高，因此，如果我們必須設法平行化我們的演算法，這是
GPGPU 核心的挑戰 。 
CUDA 是 NVIDIA GPU 上的一套基於 C 語言的開發環境。在 CUDA
之前存在的各種 GPGPU 工具，但往往需要鑽進 OpenGL 或 DirectX 的細
節，利用一些特殊的語法，使得 GPU 能夠進行特定的計算，因此程式開
發具有相當高的挑戰性。CUDA 技術可以讓熟悉 C 語言的開發者，更有
效地利用 GPGPU，以開發程式。 
我們使用 NVIDIA 的 GeForce GTX 580 顯示卡來進行我們的實驗，
這是一款 NVIDIA 在 2010 年 11 月所發布的高階顯示卡。 GTX 580 屬於
Fermi 家庭，這是第二代能夠支援 CUDA 的 NVIDIA GPU 架構。 GTX 
580 擁有 16 多處理器（streaming multiprocessor, or SM），每個 SM 由 32
個 CUDA 核心所組成。 
 
  
6 
	 	
由於每個 SM 一次處理 32 個線程，所以總線程的數目應該是 32 的整數倍。我
們應該以同樣的方式，確保該算法可平行處理 16 個 SM。所以，線程總數應該
是 32×16=512 的整數倍。 
在平行化策略一中，我們可以計算在多項式作為矩陣的行的多個合作求和
的總和。一個 n 個未知數的二次多項式有 n(n+1)/2 個項，所以我們可以從 n 維
三角矩陣重塑長邊的長方形矩陣 n 或 n+1 個元素。雖然可以在一個過程計算一
個長邊的元素的數量，這樣做的 overhead 是相當大的。因此，我們假設 n=31k，
其中 k 是一個自然數。如下圖所示，我們可以重組出一個 16×31 的矩形矩陣 。 
 
 
 
因此，我們可以平行矩陣計算，每個 SM 的 32 個 CUDA 核心皆可滿載，
不會有閑置的單元。 
在平行化策略二中，我們可以估計出平行的核心，可以有效共享數據傳輸
的總和。在 CUDA 中，每個 thread block 可以共享一個記憶體中的數據。我們
假設 n=32k，其中 k 是一個自然數。總的來說，迭代的平行化減少時間是
k(32k+1)/2。 
為了進一步優化，以提高效率，我們需要將整個系統分解成一小塊一小塊
的計算，並且平行處理類似的計算。此外，為了讓 GPU 可以有效地處理條件分
支，所以我們需要不同的處理條件分支的方法。在這種情況下，我們使用一個
不同的內核處理每個非零的不同數量。然而，如果要處理所有的可能，我們會
需要的內核數量將會異常的龐大。因此，我們限定祇處理 k 的每一個數字。例
如，對於 QUAD(2, 512, 512)，k 最大是 17，所以我們只需要 17 個內核。 
這種技術可用於由 CPU 執行，以及 GPU 輔助的即時實作。 由於 GPU 上的
平行化，我們可以以平行與優化方法計算矩形矩陣，預先算出有哪些元素是 k
維的子矩陣。由於 NVIDIA 的 GeForce GTX 580 擁有 16×32 個內核，每個子矩
陣可以在每個 CUDA 核心平行計算。 k 維矩陣求和的計算時間是 O(k2) 的增加。
因此，我們可以計算一次行合作求和，行合作求和計算成本是如何增加。當多
項式≤1024 條的時候，我們可以一次計算求出所有多項式求和的結果。最後，
我們計算一排總和合作求和的結果。 
  
8 
	 	
六、 參考文獻 
[1] Bard, G. V.: Algebraic Cryptranalysis. Springer 2009. (2009) 
[2] Berbain, C., Billet, O., Gilbert H.: Efficient Implementations of Multivariate 
Quadratic Systems. In: The 13th Annual Workshop on Selected Areas in 
Cryptography. LNCS, vol. 4004, pp. 174-187. Springer-Verlag (2006) 
[3] Berbain, C., Gilbert, H., Patarin, P.: QUAD: a Practical Stream Cipher with 
Provable Security. In: EUROCRYPT 2006. LNCS, vol. 4004, pp. 109-128. 
Springer-Verlag (2006) 
[4] Bonenberger, D., Krone, M.: Factorization of RSA-170, 
http://public.rz.fhwolfenbuettel.de/ kronema/pdf/rsa170.pdf 
[5] Chen, M.-S., Chen, T.-R., Cheng, C.-M., Hsiao, C.-H., Niederhagen R., Yang, 
B.-Y.: What price a provably secure stream cipher? In: Fast Software 
Encryption, 2010, Rump session. (2010) 
[6] Liu, F.-H., Lu, C.-J., Yang, B.-Y.: Secure PRNGs from Specialized 
Polynomial Maps over Any Fq In: Post-Quantum Cryptography 2008. LCNS, 
vol.5299, pp. 181-202. Springer-Verlag (2008) 
[7] Manavski, S.: CUDA compatible GPU as an efficient hardware accelerator for 
AES cryptography. In: 2007 IEEE International Conference on Signal 
Processing and Communications. pp. 65-68, (2007) 
[8] NVIDIA CUDA, http://developer.NVIDIA.com/object/CUDA.html 
[9] Osvik, D. A., Bos, J. W., Stefan, D., Canright, D.: Fast Software AES 
Encryption. In: The 17 the International Workshop on Fast Software 
Encryption. LNCS, vol. 6147, pp. 75-93. Springer, Verlag (2010) 
[10] Patarin, J., Goubin, L.: Asymmetric cryptography with s-boxes. In: 
Information and Communication Security, First International Conference. pp. 
369-380, (1997). 
[11] Yang, B.-Y., Chen, O. C.-H., Bernstein, D. J., Chen, J.-M.: Analysis of 
QUAD. In: Fast Software Encryption 2007. LNCS, vol. 4593, pp. 290-308. 
Springer-Verlag (2007).
10 
	 	
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                   日期： 2012 年 5 月 20 日 
 
1、 參加會議過程 
CCGrid 會議是叢集和網格計算研究領域每年發表最新研究成果和展示最新技
術發展的主要國際會議。CCGrid 的重點在各式科學計算、工業和商業應用的叢集
和網格計算系統。CCGrid 會議鼓勵來自學術界、工業界、實驗室、以及電子商務
的研究者、開發者、和使用者的參與，驅動叢集和網格計算研究領域未來的研究
和應用。近年來由於雲端計算的興起，CCGrid 也將範圍擴張至雲端計算，更名為
叢集、雲端、與網格計算會議，每年約在五月份舉行，由 IEEE 及 ACM 共同贊助。 
今年 CCGrid 在加拿大渥太華舉行，大會主席是當地的 Shikharesh Majumdar
教授，議程主席則是 Pavan Balaji 教授與 Rajkumar Buyya 教授。今年共收到了 302
篇文章，錄取了其中 83 篇，錄取率為 27.5%，可說是競爭相當激烈，水準相當不
錯的會議。 
計畫編號 NSC 100－2219－E－002－031－ 
計畫名稱 安全無縫之虛擬化行動雲端運算—子計畫五：行動雲端運算之高效能密碼程式庫與開發工具(I) 
出國人員
姓名 鄭振牟 
服務機構
及職稱 
國立台灣大學電機工程學系 
助理教授 
會議時間 
2012 年 5 月 13 日至 
2012 年 5 月 16 日 
會議地點 Ottawa, Canada 
會議名稱 
(中文)第十二屆 IEEE/ACM 國際叢集、雲端、及網格計算會議 
(英文) The 12th IEEE/ACM International Symposium on Cluster, Cloud, and 
Grid Computing 
發表論文
題目 
(中文) 
(英文)COCA: Computation offload to clouds using AOP 
附件四	
國科會補助計畫衍生研發成果推廣資料表
日期:2012/08/04
國科會補助計畫
計畫名稱: 子計畫五：行動雲端運算之高效能密碼程式庫與開發工具(I)
計畫主持人: 鄭振牟
計畫編號: 100-2219-E-002-031- 學門領域: 嵌入式軟體(網通國家型)
無研發成果推廣資料
博士生 0 0 100%  
博士後研究員 0 0 100%  
（外國籍） 
專任助理 0 0 100%  
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
