一、中文摘要 
模運算在電腦數值運算中總是扮演著十分重要的角色，因為實際的計算機系統所有的數值
都是以特定長度的儲存空間來儲存與處理。如果運算的資料長度比較短，則計算的時間就
比較少而有效率，而餘數系統正可以帶來這樣的計算上的好處，況且也可以抑止計算機溢
位的情況發生。除此之外，在計算機通訊與儲存的領域，也有所謂的頻寬限制。最近更由
於近代密碼學的加解密使用了大量的模指數等運算，使得模運算更形重要。如此基於 RSA 
scheme [2] 或 ElGamal scheme [5]所發展出來的密碼系統，在這些系統中模指數運算是被用
來加密以及解密的。所以模運算在現今的計算機界已成了一個重要的研究主題，大家所想
完成的就是如何加速模指數運算的速度。 
本年度計畫，我們著重於發展快速模指數運算的方法，模指數運算是求 M = Bx mod N。
我們針對了底數 B 與指數 x 進行分析，終於找出一個加速方法，以得到更好的加速效果。
首先我們觀察到底數為二次剩餘數時，我們得到一個同時計算模平方與模乘法的運算式，
針對底數非為二次剩餘數時的狀況，我們由深入的研究亦已獲得良好的結果；此外，針對
指數部分，我們已推導出一種很好的轉換方式，將原來的指數變成數個小的數字。而以每
個小的數字為指數算出模運算所需的partial result，如此一來，運算的速度便可加快了。最
後，我們更將這兩個成果結合成一個更有效率的模指數運算。 
 
關鍵詞：餘數系統，模指數運算，模除法運算 
 
二、英文摘要(Abstract) 
Modular operations always play an important role in computer arithmetic for their characteristic 
of confining the operand scalar within certain bit lengths. The computing performance is 
therefore speeded up. Besides, the computing overflow problem is also eliminated. As known, the 
data transmitted and stored within computers are always in fixed bit lengths due to the limited 
bandwidth of data bus. Another reason for modular operations to be so important is that they are 
massively used in cryptosystems. In cryptosystems, such as those cryptosystems based on the 
RSA scheme or the ElGamal scheme, the modular exponentiation operations are performed for 
encrypting and decrypting secret message. As a result, the efficiency of the operations is the 
focus of research. So far, there have been many accelerating techniques dedicated to the 
enhancement of the efficiency, both in hardware and software designs. 
In the past year, we have focused on introducing a faster method for the computation of the 
modular operation, M = Bx mod N.  
We have proposed efficient methods in software approaches via analyzing the base B and 
the exponent x. If the base is the Quadratic Residue number to the modulus N, we derive an 
efficient way to compute the operation performing modular square-and-multiply together. To the 
exponent part, we find a way for transforming the exponent to several partial numbers. Each 
partial number stands for a partial result for the modular exponentiation operation. Finally, these 
two software approaches can be combined to obtain a more efficient way for accelerating 
modular exponentiation operations. 
找出基底具有某種特性時，將會帶來較有效率的計算方式，進而使系統管理者能使用這樣
的基底來加速運算。此外我們亦針對指數部分進行探討，嘗試將指數轉為餘數系統，以達
到加速運算的目的。 
我們以計算模指數運算 Bx mod N 為例，基底B對於模數N是一個二次剩餘數，所以B1/2 
mod N 是存在的，因此，我們可以利用這樣的特性推導出同時進行模乘法與模平方的運算，
因 (T+ B1/2)2 mod N 等於T2+2TB1/2+B mod N，所以我們可以得到模平方乘法 (Modular 
square-and-multiply Operations) 為計算(((T+B1/2)2 - T2 - B)*2-1)2 mod N，此等式的推導如下： 
因 (T + B1/2)2 = T2 + B + 2 TB1/2 ，我們可以得到 2 TB1/2 ≡ (T +B1/2)2 - T2- B (mod N)。所以TB1/2 
≡ ((T + B1/2)2 - T2 - B)2-1 (mod N)，且 T2B ≡ (((T + B1/2)2 - T2 -B)2-1)2 (mod N)。 
另外，我們亦分析了模指數運算的指數部分，將指數部分轉化成 RNS 的表示式，這
RNS 對應的模數為固定整數，這些整數可以置於指數部分與原來的底數行模指數運算，其
結果可為將來求模指數的 Partial Results，當有不同的指數輸入時，只需針對指數進行 RNS 
的轉換，即可以重複的利用這些 Partial Results。 
除了常見的RNS (Residue Number System)之外，我們亦探討了MRS (Mixed Radius 
System)，這種餘數系統與整數系統的轉換法如下： 
設模數為 q1, q2, …, qm ，一整數 x 可被轉換成 (a1, a2, …, am) ，而 x 等於a1 + a2 × q1 + … 
+ am × q1 × q2 × …× qm-1 且 0 ≤ ai < mi，對於 i = 1, 2, …, m。 
在餘數系統下，由於其具有無進位(Carry-free)的特性，故在餘數系統下無法比較數的
大小；然而，在設計除法演算法中，比較大小是一定會面對到的問題，因此我們設計出一
個在餘數系統下快速求出數的最高次方的方法，同時配合我們設計的演算法順利地解決了
比較數大小的問題 [11]。 
 
七、結果與討論 
網路的蓬勃發展與計算機應用的範圍日漸廣泛，使得國家資訊化的腳步不曾停歇，然
資訊的保存與安全考量更是因而日益重要，也帶動了近代密碼系統的快速發展。在近代密
碼系統中大量使用了模指數運算，所以有效率的模指數運算成了近代密碼系統運作的重要
關鍵，本年度計畫之執行，我們成功地發展出利用二次剩餘定理與餘數系統進行模指數運
算，設計出更快捷的運算技術。此有效率的模運算技術將可應用於現行使用模指數的密碼
系統，因此對於國家的資訊科技升級、政府的資訊電子化推動、與行政效率之提升將有著
莫大的幫助。 
此外，經本年度計畫執行，參與計畫之成員對於模指數運算之加密技術有了深
入的瞭解，同時在收集相關文獻資料之蒐集訓練亦有相當大之收獲。 
 
參考文獻: 
[1] G. R. Blakley, “A computer algorithm for calculating the product AB modulo M,” IEEE 
Transactions on Computers, vol. C-32, no. 5, pp. 497-500, 1983. 
[2] T. Elgamal, “A public-key cryptosystem and a signature scheme based on discrete 
logarithms,” IEEE Transactions on Information Theory, vol. IT-31, no. 4, pp. 469-472, 
1985. 
[3] M. Joye and S. M. Yen, “Optimal left-to-right binary signed-digit recoding,” IEEE 
Transaction on Computers, vol. 49, no. 7, pp.740-748, 2000. 
