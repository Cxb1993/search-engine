 1 
 
 
行政院國家科學委員會專題研究計畫期未報告 
 
 
異質無線網路之高品質視訊傳輸技術與服務--子計畫二: 
異質無線網路中視訊之空域及時域轉換編碼研究 
期末報告 
 
計畫類別： 整合型 
計畫編號： 99-2221-E-008-010- 
執行期間： 99 年 08 月 01 日至 100 年 07 月 31 日 
執行單位： 國立中央大學通訊工程系 
 
計畫主持人： 林銀議   教授 
 
 
 
 
 
中 華 民 國  100 年 9 月 19 日
  
 
 
 3 
 
三、前言及研究目的 
要降低已編碼之視訊串流的位元率，最簡單
的作法就是將原始視訊串流解碼後，再進行完整的
編碼，此種轉換編碼流程，稱為複雜型像素域轉換
編碼 (comple cascade pixel domain transcoding, 
CCPDT)。複雜型像素域轉換編碼雖然可以達到最
佳的編碼效能 (coding performance) ，但由於
H.264/AVC 採用了許多新技術，導致再編碼時的複
雜度過高，所耗費的時間過多。因此如何有效地利
用原始視訊串流中的編碼資訊，在維持一定的編碼
效能為前提下，以降低轉換編碼的運算成本是很重
要的。 
四、研究方法 
4.1 畫面間轉換編碼之快速模式決策演算法 
過去有許多針對影像降解析度轉換編碼的研
究，其中大多數的議題也集中在如何降低編碼端的
運算複雜度。[1]雖不是架構在降解析度轉換編碼
系統，但利用編碼區塊樣式(coded block pattern, 
CBP)提出的區塊模式決策，有效簡化需執行的區
塊模式(mode)，平均節省 57%的編碼時間，同時維
持很小的影像品質失真。[2]考慮到原始已編碼視
訊的絕對殘餘值與再編碼後 16×16 區塊模式之碼
率失真成本的線性組合，若是符合條件，七種模式
將不需全部執行，因此需執行的區塊模式減少，可
降低再編碼的運算複雜度。[3]則利用原始已編碼
之視訊串流的影像資訊(side information)，提出簡
單區塊模式對應法(simple mode mapping, SMM)，
做法為將降解析度後的巨區塊切割成 8×8 大小，對
應原始的四個巨區塊，根據模式資訊來決定要執行
的模式，因多數區塊直接執行二分之一對應模式，
使得編碼時間大幅下降，但在低位元率的編碼效能
表現卻難以維持一定品質。[4]提出高品質模式決
策演算法(high quality mode decision, HQMD)，將降
解析度後區塊依照對應的原始四個巨區塊的模式
分為三種不同類型，再根據統計特性執行區塊模
式，有效利用原始影像編碼資訊，使得再編碼效能
失真量幾乎可忽略，同時也降低了運算複雜度。[7]
提出利用編碼區塊樣式提出兩種方式來平均移動
向量，分別為趨向最佳權重(ABW)與趨向最差權重
(AWW)，於本計畫中將之利用來判斷區塊動量是
否一致，幫助模式決策演算法的提出。 
4.1.1 基於原始巨區塊特性之模式決策 
在提出快速模式決策演算法時，為了維持與
複雜型轉換編碼(CCPDT)貼近的編碼效能，需有效
利用原始解碼端的影像編碼資訊，圖一為原始區塊
與降二分之一解析度的區塊模式對應。本節依據原
始區塊與降解析度區塊特性，提出提前終止計算的
條件，也就是由對應的統計數據上觀察，若符合提
前終止條件將不作後續模式決策複雜的運算，達到
降低演算複雜度的目的。 
 
 
【圖 1】原始區塊模式與降解析度對應區塊模式示
意圖 
若是原始區塊中一部分區域的區塊為同質或
是靜止不動，我們預測降二分之一解析度對應區域
的區塊也會是同質或靜止不動，尤其是在 SKIP 與
L1 的大區塊模式。如【表 1】，原始四塊為 SKIP
模式，降解析度後再編碼後，平均約有 96%亦為
SKIP 模式，因此演算流程中若符合原始四塊為
SKIP 模式的條件，我們於重新編碼時直接決策執
行 SKIP 模式，不需傳送殘餘係數值。 
接著我們考慮原始四個區塊移動向量資訊皆
相同時，經過降二分之一解析度，對應區塊的移動
 5 
 
化需執行的區塊模式，如【表 4】，可歸納出下列
決策方式： 
(1) 當巨區塊中四塊皆為 8×8 零區塊，執行 SKIP    
與 16×16 模式約占了 85%的機率，其他情形相
對可忽略。因此當零區塊數量為 4，只執行
SKIP 與 16×16 模式。 
(2) 當巨區塊中有三塊為 8×8 零區塊，執行 SKIP
與 16×16 模式約占了 78%的機率，而 16×8 與
8×16 模式的分佈並未相差很多，此時我們利
用 16×8與 8×16分別所覆蓋之兩個 8×8零區塊
的絕對誤差和，來決定該執行哪個區塊模式，
而將絕對誤差和較大的區塊模式忽略。因此當
8×8 零區塊數量為 3 時，只執行 SKIP、16×16、
16×8 或 8×16 模式。 
(3) 當巨區塊中有兩塊為 8×8 零區塊，執行 SKIP
與 16×16 模式約占了 66%的機率，但此時根據
巨區塊中零區塊位置的不同，需執行的模式也
會不同，因此當零區塊數量為 2，若零區塊排
列為水平，執行 SKIP、16×16、16×8 模式；若
零區塊排列為垂直，執行 SKIP、16×16、8×16
模式；若零區塊排列為對角，執行 SKIP、
16×16、P8×8 模式。 
(4) 當巨區塊中只有一塊或沒有 8×8 零區塊，執行
SKIP、16×16 與 P8×8 模式的機率，約有 80%，
此時雖然 16×8與 8×16模式也有不可忽略的機
率，但因 16×16、16×8 和 8×16 區塊模式所得
到的碼率失真成本幾乎相同，為了節省運算複
雜度，在犧牲一些影像品質下，捨棄執行這兩
個模式。因此當零區塊數量為 1 或 0，只執行
SKIP、16×16 與 P8×8 模式。 
4.1.3 增強型區塊模式演算法(EZBMDCBP) 
接下來我們從編碼區塊樣式與移動向量的關
係來著手，如圖三原始以 8×8 為單位的編碼樣式資
訊，降解析度後直接對應為 4×4 為單位的資訊；圖
四為原始以 4×4 為單位的移動向量資訊，降解析度
後經過合成，亦是以 4×4 為單位的移動向量資訊。
若是巨區塊中移動向量的指向都相同，代表此區域
畫面穩定，可利用編碼區塊樣式來預測絕對殘餘值
經轉換量換後是否為零區塊，另外所對應的編碼區
塊樣式的值也多為 0，因此可直接使用編碼區塊樣
式資訊取代計算 8×8 零區塊的過程，降低運算複雜
度；但若此區域移動向量指向皆不相同，以編碼區
塊樣式來決策零區塊將不準確，此時欲判斷此 8×8
區塊是否為零區塊，必須計算其 8×8 絕對誤差合是
否符合 9.17Qstep 的門檻值。 
我們利用趨向最佳權重之預測移動向量
(ABW)與趨向最差權重之預測移動向量(AWW)[7]
的絕對誤差值(|ABW-AAW|)，來決定此區塊之移動
向量指向是否相同：當差值大於 1 的區塊，代表移
動向量指向皆不相同，需執行判斷 8×8 零區塊的運
算，反之，當差值小於 1，代表可看出移動向量指
向的規律，可直接使用編碼區塊樣式決定 8×8 零區
塊。 
 
 
【圖 3】原始區塊模式與降解析度對應編碼區塊樣
式示意圖 
 
 
【圖 4】原始區塊模式與降解析度移動向量示意圖 
 7 
 
可節省最多運算複雜度(84%)，而 EZBMDCBP可節
省 60%至 80%的編碼時間，大幅優於 HQMD 的
11%至 55%。總結以上的效能比較，本章提出的
EZBMDCBP，在低量化參數也就是高位元率的情況
下，可節省 50%以上的編碼時間，而影像品質的失
真可忽略，隨著量化參數提高，失真量也跟著增
加，但編碼時間節省可達到 80%左右，平均來說，
有著不錯的編碼時間節省，同時也維持一定的編碼
效能。 
【表 6】快速模式決策演算法的 BD 效能比較 
(A)BDPSNR 
  SMM HQMD EZBMDCBP SMM HQMD EZBMDCBP SMM HQMD EZBMDCBP
mobile -0.617 -0.011 -0.154 -0.591 -0.052 -0.244 -0.631 -0.105 -0.319
container -0.468 -0.028 -0.146 -0.377 -0.032 -0.180 -0.434 -0.072 -0.256
foreman -0.818 -0.046 -0.222 -0.933 -0.174 -0.521 -1.379 -0.309 -0.879
paris -0.567 -0.043 -0.158 -0.642 -0.145 -0.310 -0.756 -0.217 -0.430
salesman -0.487 0.009 -0.104 -0.573 -0.060 -0.206 -0.605 -0.101 -0.221
stefan -0.633 -0.034 -0.188 -0.764 -0.080 -0.343 -0.874 -0.126 -0.448
-0.598 -0.025 -0.162 -0.647 -0.091 -0.301 -0.780 -0.155 -0.426
city -0.735 -0.010 -0.163 -0.721 -0.136 -0.440 -0.774 -0.305 -0.723
crew -0.720 -0.004 -0.183 -0.888 -0.043 -0.323 -1.492 -0.091 -0.698
harbour -0.934 -0.002 -0.121 -0.819 -0.017 -0.139 -0.747 -0.053 -0.220
ice -0.701 -0.074 -0.396 -1.145 -0.224 -0.912 -1.775 -0.390 -1.633
soccer -0.854 -0.122 -0.271 -0.899 -0.129 -0.397 -1.059 -0.228 -0.951
-0.789 -0.042 -0.227 -0.895 -0.110 -0.442 -1.169 -0.213 -0.845
QP=28,32,36,40QP=20,24,28,32
Avg.
4CIF
Avg.
BDPSNR (dB) QP=12,16,20,24
Sequence
CIF
 
 (B)BDBR 
 
SMM HQMD EZBMDCBP SMM HQMD EZBMDCBP SMM HQMD EZBMDCBP
mobile 4.71 0.09 1.16 7.76 0.67 3.06 16.07 2.63 8.01
container 9.49 0.54 2.80 11.03 0.88 5.02 12.51 1.97 7.28
foreman 13.35 0.74 3.49 22.22 3.78 11.40 35.25 7.27 21.78
paris 7.05 0.53 1.93 10.18 2.26 4.85 17.80 5.09 10.14
salesman 9.36 -0.12 1.99 13.08 1.33 4.56 18.10 3.03 6.41
stefan 6.20 0.32 1.83 10.50 1.04 4.61 20.74 2.76 10.44
8.36 0.35 2.20 12.46 1.66 5.58 20.08 3.79 10.68
city 10.54 0.15 2.34 18.85 3.21 10.53 31.44 12.01 27.01
crew 12.98 0.08 3.21 24.08 1.07 8.17 50.07 2.77 20.89
harbour 9.48 0.02 1.20 14.77 0.29 2.42 25.22 1.65 6.85
ice 17.96 1.77 9.58 25.22 4.63 19.16 38.31 7.64 33.49
soccer 13.30 1.88 4.16 21.21 2.87 8.85 40.21 7.93 29.96
12.85 0.78 4.10 20.83 2.41 9.83 37.05 6.40 23.64
BDBR (%) QP=12,16,20,24
Sequence
CIF
Avg.
4CIF
Avg.
QP=20,24,28,32 QP=28,32,36,40
 
(C)Time-saving 
  SMM HQMD EZBMDCBP SMM HQMD EZBMDCBP SMM HQMD EZBMDCBP
mobile -80.86 -3.98 -52.59 -81.98 -9.26 -57.29 -83.92 -27.97 -69.32
container -83.58 -27.86 -67.39 -84.49 -57.71 -83.09 -83.88 -76.57 -91.98
foreman -82.25 -12.01 -52.44 -84.08 -30.42 -65.71 -85.01 -51.00 -77.20
paris -83.62 -34.17 -64.95 -84.99 -51.11 -73.97 -85.21 -64.34 -82.50
salesman -84.55 -17.63 -71.43 -85.91 -51.78 -83.83 -84.15 -78.46 -91.72
stefan -82.51 -9.37 -53.71 -82.87 -20.45 -59.95 -84.09 -36.36 -69.56
-82.89 -17.50 -60.42 -84.05 -36.79 -70.64 -84.38 -55.78 -80.38
city -83.02 -5.64 -57.43 -84.28 -29.04 -67.78 -84.67 -57.01 -80.03
crew -91.54 -3.94 -63.06 -88.65 -20.40 -64.61 -87.48 -43.66 -74.88
harbour -82.92 -1.94 -52.00 -83.14 -10.17 -58.22 -84.26 -35.88 -69.94
ice -82.64 -37.70 -61.51 -81.23 -56.02 -73.83 -82.01 -65.20 -79.73
soccer -87.28 -5.94 -61.97 -86.16 -27.98 -67.22 -85.24 -49.94 -76.99
-85.48 -11.03 -59.19 -84.69 -28.72 -66.33 -84.73 -50.34 -76.31Avg.
QP=20,24,28,32 QP=28,32,36,40
Sequence
CIF
Avg.
4CIF
Time saving (%) QP=12,16,20,24
 
 
4.2 畫面間轉換編碼之移動再估測演算法 
    除了快速區塊模式決策演算法的研究，本計畫
亦針對移動估測提出快速移動再估測演算法。我們
從原始移動向量與重新編碼相對的移動向量觀察
它們存在何種關聯性。【表 7】，最左行是原始移動
向量的大小，橫列為重新編碼的移動向量大小，移
動向量大小定義為【式 2.9】，其中 x，y 為移動向
量坐標， MV 為移動向量的大小，假設移動向量
為(4,2)，移動向量大小為 4。 
|)y||,xmax(|MV  【式 2.9】 
 
【表 7】原始移動向量與重新編碼對應移動向量統
計分佈情形(QP=28) 
QP28
|MVorig.| 0 1 2 3 4 5 6 sum
0 65.77% 2.28% 0.88% 0.48% 0.27% 0.18% 0.11% 69.98%
1 10.69% 1.47% 0.34% 0.17% 0.09% 0.07% 0.04% 12.86%
2 2.00% 1.13% 0.20% 0.07% 0.04% 0.02% 0.01% 3.47%
3 1.12% 0.90% 0.34% 0.07% 0.03% 0.02% 0.01% 2.49%
4 0.82% 0.34% 1.00% 0.08% 0.04% 0.03% 0.02% 2.33%
5 0.54% 0.13% 0.57% 0.13% 0.06% 0.03% 0.02% 1.48%
6 0.36% 0.07% 0.13% 0.23% 0.06% 0.04% 0.01% 0.90%
sum 81.30% 6.31% 3.47% 1.23% 0.61% 0.37% 0.22% 93.51%
|MVRe-encode |
 
從【表 7】，我們可觀察三項特點：第一，原
始移動向量與重新編碼移動向量很高機率集中在
(0,0)，是因為大多區塊決策到 SKIP 模式。第二，
若原始移動向量大小為 4，二分之一降解析度後大
小為 2，在去除 0 不看的情況下，可發現附近的兩
點 1 與 3 機率也相對比其他點高，原始移動向量大
小為 6 的情形也類似，說明以預測移動向量為中心
搜尋時，大部分情況在正負一點即可搜尋到最佳匹
配區塊，因此在做移動估測時，我們可設定搜尋範
圍(search range)為±1 像素點，在不影響正確率的條
件下，可比執行全搜尋(full search)的±16 像素點大
幅降低運算時間。第三，在第二項特點已看出，原
始移動向量經過降解析度後，絕大多數大小會變為
二分之一大小附近，舉例來說，當原始移動向量大
小為 3，二分之一降解析度後再編碼，去除 0 的情
況不看，發現移動向量大小落在 1-2 點之間機率較
其他的高；進一步再觀察原始移動向量大小為 5，
大小超過 3 後明顯的機率愈來愈小，證明影像經過
降解析度後，動量已趨於緩慢，移動向量已不用像
原來指向那麼遠才能找到最佳匹配，因為高頻被濾
除的畫面，細膩部份被模糊化後，前後兩張的差異
也變得更小，這是降解析度在時間上的影響。而其
他量化參數下的結果，也與上述三項特性相符合。 
 
4.2.1 強化型區域搜尋法(EPZS) 
    本節利用原始移動向量資訊及區塊編碼樣
樣，提出三種不同的預測移動向量，並以這三種不
同的預測移動向量為搜尋中心做移動再做測。而預
測移動向量分別為趨向最佳權重之預測移動向量
(ABW)、與趨向最差權重之預測移動向量(AWW)
 9 
 
張，重新編碼的最佳參考畫面為第 N 張，如【式 1】，
EPZSMRFPMV  為強化區域式搜尋法針對多幅參考
畫面得到的新預測移動向量， 由【式 2】而得，
而 EPZSPMV 為經過強化區域式搜尋而得的預測移
動向量。 
 EPZSEPZSMRF PMVαPMV   【式 1】                               
 
1
1


M
Nα  【式 2】 
【表 8】快速移動再估測演算法的 BD 效能比較 
(A)BDPSNR 
EPZS MRF-EPZS EPZS MRF-EPZS EPZS MRF-EPZS
mobile 0.011 0.015 0.001 0.006 -0.031 -0.013
container -0.020 -0.022 -0.034 -0.031 -0.054 -0.041
foreman 0.021 0.027 -0.012 0.003 -0.121 -0.099
paris 0.006 0.018 -0.031 -0.025 -0.083 -0.057
salesman 0.012 0.022 0.002 0.010 -0.020 0.002
stefan -0.065 -0.023 -0.128 -0.037 -0.188 -0.075
city -0.075 -0.013 -0.187 -0.065 -0.270 -0.138
crew -0.008 -0.006 -0.042 -0.032 -0.109 -0.079
harbour 0.026 0.026 0.009 0.011 -0.023 -0.021
ice -0.090 -0.057 -0.159 -0.100 -0.263 -0.188
soccer -0.148 -0.100 -0.159 -0.081 -0.209 -0.147
-0.030 -0.010 -0.067 -0.031 -0.125 -0.078
4CIF
Avg.
QP=12,16,20,24BDPSNR (dB)
Sequence
CIF
QP=20,24,28,32 QP=28,32,36,40
 
 (B)BDBR 
EPZS MRF-EPZS EPZS MRF-EPZS EPZS MRF-EPZS
mobile -0.08 -0.11 0.00 -0.06 0.72 0.33
container 0.35 0.40 0.94 0.86 1.49 1.12
foreman -0.33 -0.43 0.25 -0.08 2.76 2.24
paris -0.06 -0.20 0.47 0.46 1.86 1.29
salesman -0.21 -0.39 -0.02 -0.19 0.63 0.02
stefan 0.63 0.22 1.71 0.51 4.13 1.60
city 1.05 0.18 4.58 1.59 10.26 5.03
crew 0.15 0.11 1.04 0.81 3.27 2.36
harbour -0.26 -0.26 -0.16 -0.19 0.75 0.70
ice 2.16 1.36 3.29 2.07 5.08 3.60
soccer 2.24 1.53 3.58 1.82 7.42 5.17
0.51 0.22 1.43 0.69 3.49 2.13Avg.
BDBR (%)
Sequence
QP=12,16,20,24
CIF
4CIF
QP=20,24,28,32 QP=28,32,36,40
 
(C)Time-saving 
EPZS MRF-EPZS EPZS MRF-EPZS EPZS MRF-EPZS
mobile -83.13 -82.79 -83.27 -82.92 -82.52 -82.07
container -80.53 -80.04 -77.25 -76.69 -73.49 -72.85
foreman -81.99 -81.57 -80.59 -80.04 -78.08 -77.43
paris -78.36 -77.77 -77.31 -76.70 -75.98 -75.32
salesman -77.52 -76.96 -75.97 -75.38 -74.37 -73.76
stefan -82.54 -82.35 -82.36 -82.15 -81.82 -81.54
city -83.05 -82.96 -82.58 -82.43 -80.68 -80.35
crew -84.79 -84.52 -83.69 -83.33 -80.88 -80.43
harbour -83.01 -82.66 -82.74 -82.36 -80.57 -80.13
ice -78.99 -78.69 -75.68 -75.32 -73.13 -72.65
soccer -85.00 -84.86 -84.27 -84.02 -81.37 -81.01
-81.72 -81.38 -80.52 -80.12 -78.45 -77.96Avg.
Time saving (%)
Sequence
4CIF
CIF
QP=12,16,20,24 QP=20,24,28,32 QP=28,32,36,40
 
4.2.2 強化型區域搜尋法之效能分析 
我們同樣以六個CIF與 5個 4CIF解析度的視
訊樣本，在 JM 軟體模擬上述演算法的再編碼效
能，量化參數有 12、16、20、24、28、32、36、
40，環境參數設定如【表 5】，針對多幅參考畫面
的強化區域式搜尋法(MRF-EPZS or MEPZS)和原
始強化區域式搜尋法(EPZS)皆與複雜型轉換編碼
(CCPDT)、做效能比較，其中 MRF-EPZS 與 EPZS
決定預測移動向量後，皆以之為中心搜尋±1 點，
比對最佳匹配區塊，不用搜尋±16 點全搜尋是因為
【表 7】的統計結果，大多數區塊降解析度後在對
應參考畫面的鄰近±1 點即可找到最佳匹配。 
由【表 8】的 BD 效能，MRF-EPZS 在低量化
參數時影像品質平均失真 0.01dB，隨著量化參數
提高下降到 0.078dB，相較於 EPZS 平均約好
0.02-0.05dB；再來為 BDBR，MRF-EPZS 在低量化
參數時平均上升 0.22%，隨著量化參數提高上升到
2.13%，相較於 EPZS 平均約好 0.3%-1.3%；最後
是編碼時間兩個演算法平均節省大約為 80%，相差
不到 1%，幾乎降低一樣多的複雜度。 
由此效能表現可說明，預測移動向量未做內
插的 EPZS 可達到平均 80%的時間節省，同時維持
很好的效能，但我們提出的 MRF-EPZS 不但也節
省 80%的運算時間，編碼效能更較 EPZS 提升，更
加貼近複雜型轉換編碼。再相較 4.1 節，直接使用
原始移動向量資訊不做搜尋的簡易型轉換編碼，效
能更是大幅提升，說明有效利用了原始影像的編碼
資訊，對於應用在即時轉換編碼上，是相當大的進
步。 
五、實驗結果 
前一節，我們針對移動估測中不同的議題做
探討，包括了區塊模式決策、移動再估測，每一種
演算法都可達到降低原始複雜型轉換編碼(CCPDT)
過程複雜的目的，同時維持一定的編碼效能與影像
品質。最後，將合併的演算法實際在 JM 軟體中模
擬編碼效能，模擬的量化參數有 12、16、20、24、
28、32、36、40，環境參數如【表 5】。 
【圖 9】為位元率失真曲線，比較 12 至 40
不同量化參數下，區塊模式演算法與多幅參考畫面
之強化區域式搜尋法(MEPZS)合併之效能，其中橫
軸代表位元率，左圖縱軸代表影像品質(以 dB 表
示)，右圖縱軸代表轉換再編碼時間(以秒表示)。右
圖中 SMM+MEPZS 可節省最多時間，但可發現左
圖的影像品值約有 1-2dB 的落差，HQMD+MEPZS
  參加2010年國際會議(TENCON)心得 
2010年國際會議 (IEEE TENCON) 由IEEE協會舉辦，於11月21至11月24日
在日本福岡Fukuoka International Congress Center會議中心舉行，本次會議共有來
自全球許多國家，超過400篇論文在三天裡共76節次發表。本次會議所發表之論
文大部分都是近一年來世界各地最近有關於影像及訊號處理之研究成果。 
參加此次會議獲益良多，除了口頭發表論文 (發表題目為 “Efficient mode 
decision for H.264/AVC frame-skipping transcoding”) 將最近之成果以口頭報告和
海報發表論文（發表題目為 “Advanced zero-block mode decision algorithm for 
H.264/AVC video coding”）外，也聆聽許多相關影像編碼之最新研究成果，對於
未來之研究提供了一個研究方向。尤其是對國科會研究計劃之規劃，有很大之助
益，也對未來計劃之研究內容有更進一步之了解。尤其是 Image Coding and 
Processing…等節次中有許多相關影像編碼發表之論文印象特別深刻，論文所發
表的成果跟進行中之國科會計劃息息相關，也為未來年度國科會計劃提供一個不
錯的研究方向。 
 
encoding the incoming video stream. Many efforts have
been made to explore the fast intra mode decision algorithm
for MPEG-2 and H.263 to H.264/AVC intra frame trans-
codings to reduce computational complexity [1–8]. Some
techniques attempt to employ the DC or AC components of
MPEG-2 DCT coefficients to select a set of candidate
modes for RDO decision [3, 4], while another technique
tries to use directional features to choose candidate modes
for RDO decision [5].
In [9] we have presented an enhanced SATD-based intra
mode decision algorithm which uses low-frequency AC
components of DCT coefficients to reduce computation cost
to a great extent. The experimental results reveal that the
enhanced algorithm outperforms other efficient intra mode
decision algorithms such as IST [10] and DED [11]. The
algorithm has been applied to MPEG-2 to H.264/AVC intra
frame transcoding [12], and the results demonstrate its
superiority to other two distinct algorithms in [3] and [4] in
all three respects (PSNR, bit rate as well as computation time).
In this paper, we extend our previous work in [12] and
propose a general architecture for MPEG-2/H.263/H.264/
AVC to H.264/AVC intra frame transcoding, which can
reduce computational burden greatly while still preserving
high-coding efficiency. The proposed transcoding architec-
ture incorporates low-frequency AC components of DCT
coefficients and SATD coefficients into the RDO mode
selection to skip improbable intra modes for RDO
calculation in the H.264/AVC re-encoding. The low-
frequency AC coefficients are employed to select intra 4×
4 mode or 16×16 mode for prediction, while the SATD
coefficients, including SATD values and their variance
information, are then used to select candidate modes in
I4MB or I16MB for RDO mode decision. In addition,
coded mode information in both H.263 and H.264/AVC is
utilized to further reduce computation cost.
The rest of the paper is organized as follows. Section 2
gives a brief introduction to intra mode prediction and
decision in MPEG-2, H.263 and H.264/AVC. Section 3
describes information existing in these video streams. The
general architecture for MPEG-2/H.263/H.264/AVC to
H.264/AVC intra frame transcoding is discussed in Section 4.
The experimental results are presented in Section 5. Section 6
gives the conclusion.
2 Intra Mode Prediction and Decision
in MPEG-2/H.263/H.264/AVC
Table 1 summarizes specifications of MPEG-2, H.263 and
H.264/AVC encoders. As shown, the MPEG-2 encoder
possesses the simplest intra mode prediction in which the
difference of spatial pixel values with a constant is trans-
formed with 8×8 discrete cosine transform (DCT) and
quantized before the entropy coder. The H.263 encoder
provides three prediction modes, including DC mode,
horizontal mode and vertical mode. Unlike MPEG-2 and
H.264/AVC with prediction conducted in spatial domain, the
intra prediction for H.263 is performed in transform domain.
The H.264/AVC encoder holds the most complicated
intra mode prediction which supports two intra mode
predictions in the luma components: intra 4×4 prediction
mode (denoted as I4MB), and intra 16×16 prediction mode
(denoted as I16MB). For I4MB prediction, each 4×4 luma
block selects one of nine prediction modes, including DC
Transcoder
Standard1 Standard2
Encoder_1 Encoder_2Decoder_1 Decoder_2
Figure 1 Video transcoding.
Characteristic MPEG-2 H.263 H.264
Inter prediction 16×16 AnnexF(16×16,8×8) 16×16,16×8,8×16,8×8,8×4,4×8,4×4
Intra prediction 1 modes(DC) AnnexI(3 modes) I16×16 (4 modes),I4×4 (9 modes)
Transform 8x8 DCT 8x8 DCT 4×4 integer transform
Pixel accuracy 1/2 accuracy 1/2 accuracy 1/4 accuracy
Reference picture 1 1 16
Deblocking filter no no yes
Complexity Medium Medium High
Table 1 Specifications of
MPEG-2, H.263 AND
H.264/AVC.
J Sign Process Syst
average execution time using SATD and constant parameter
P in (2), instead of SSD and real coding rate, is only 6–10%
of that using the RDO technique in (1) that involves
transform, quantization, and entropy coding leading to high
computational complexity, but the RD performance
becomes poor, particularly for high bit rate applications.
3 Information in MPEG-2/H.263/H.264/AVC Coded
Video Streams
The H.264/AVC encoder performs both I4MB and I16MB
mode predictions in luma components to find the best mode.
In most video sequences a lot of homogeneous areas exist,
and the MB in these areas ends up with being determined as
I16MB mode after the computationally expensive rate
distortion optimization. In the video sequence related to
non-homogeneous or high detail areas, I4MB mode usually
gives the best coding efficiency. The homogeneous charac-
teristics of a video sequence can be described by its DCT
coefficients, in which flat areas usually possess small low-
frequency components of the DCT block while high detail
areas with large low-frequency components.
In the previous work [12], we use low-frequency AC
components of 8×8 DCT coefficients in MPEG-2 coded
video stream to select I4MB prediction or 16MB prediction
for a MB in the H.264/AVC re-encoding process, and the
use of 8×8 DCT coefficients can be extended to H.263 to
H.264/AVC transcoding. This is however not suitable for
H.264/AVC to H.264/AVC transcoding, because the H.264/
AVC encoder uses 4×4 integer transform (IT) and the
experiment shows that 4×4 IT blocks (16 blocks) cannot
give satisfactory result in describing characteristics of a
MB. As a result, for H.264/AVC to H.264/AVC transcoding
16×16 DCT coefficients of a MB should be obtained from
the 16 H.264/AVC 4×4 IT blocks, but it would enfold with
the computation of 4×4 inverse integer transform (IIT) of
the given blocks, and spatially combine outcoming blocks
to create a 16×16 block, and at the end employ 16×16
DCT on resulting 16×16 block.
As shown in Table 1, for intra frame coding MPEG-2
contains only one coded mode (i.e., DC) while H.263 and
H.264/AVC include the coded macroblock type (CMT)
with 3 and 13 modes respectively. There is very strong
correlation between the original coded mode and the re-
encoding mode. Based on coded mode information existing
in H.263 and H.264/AVC, mode refinement schemes are
proposed to eliminate unlikely modes during intra frame
transcoding. Table 3 summarizes the information in the
original MPEG-2, H.263 and H.264/AVC coded video
streams, which is utilized in the proposed transcoding
architecture to improve the computational complexity of the
transcoder.
4 General Architecture for Intra Frame Transcoding
and Performance of each Component
In this section, we extend our previous work [12] and propose
a general architecture for MPEG-2/H.263/H.264/AVC to
Table 2 PSNR Loss, bit rate increment and time saving for QP=28.
H.264 to H.264 PSNR comparison (dB,Δ (dB)) Bit rate comparison (bps,Δ(%)) Encoding Time (ms,Δ(%))
QP=28 Sequence CCPDTINFC CCPDTI CCPDTINFC CCPDTI CCPDTINFC CCPDTI
CIF Stefan 37.499 0.004 4616403 0.11% 306805 −70.69%
Paris 37.411 0.001 4289787 0.16% 310652 −70.77%
mobile 36.769 −0.007 6868203 0.09% 359981 −71.18%
Container 37.590 0.000 2767493 0.17% 270316 −70.67%
salesman 37.018 −0.002 2649823 0.22% 277725 −70.72%
QCIF Football 35.531 0.000 1520424 0.06% 84457 −70.19%
Foreman 37.180 0.004 784212 0.12% 67211 −69.64%
Carphone 38.772 −0.002 616466 0.07% 62385 −69.44%
Claire 41.245 0.000 397054 0.16% 53511 −69.10%
Grandma 37.630 0.000 653750 0.16% 62368 −69.94%
Avg 0.000 0.13% −70.23%
Table 3 Information used in re-encoding.
Intra H.264 MPEG-2 H.263
Block type •
Prediction mode • •
8x8 DCT coefficients • •
CBP • • •
J Sign Process Syst
MPEG-2 and H.263 DCT blocks to feature the flatness of a
MB, which is given by
AC low8x8 ¼
X1
j¼0
X1
i¼0
X7
u¼1
jX ij8x8ðu; 0Þj þ
X7
v¼1
jX ij8x8ð0; vÞj
( )
ð7Þ
AC_low8x8 can be procured from MPEG-2 DCT coef-
ficients without any 8×8 IDCT and 16×16 DCT computa-
tions. The differences between AC_low16x16 and AC_low8x8
are illustrated in Fig. 4.
To reduce the computational complexity associated
with intra mode decision, a binary hypothesis testing
is accordingly engaged to encode a MB, based on
AC_low16x16 or AC_low8x8 values. If AC_low16x16 or
AC_low8x8 is less than a threshold η, it is encoded with
I16MB mode. Otherwise, it is encoded with I4MB mode.
In the previous work [9], an intensive experiment has
been conducted on many CIF and QCIF video sequences
to evaluate the optimal threshold ηopt for various QPs,
given as
hopt ¼ m16 þ 16ðm4  m16Þ exp½ðQP  40Þ=12 ð8Þ
which is a function of means and quantization parameter
QP. The optimal threshold ηopt in (8) is employed in the
experiment.
An experiment is conducted using JM12.2 reference
software, that the fast C8MB mode decision is employed,
to evaluate the performance. Each sequence is coded
with all I frames (in experiment 100 I frames for each
sequence are tested which demonstrate reasonable
results). The simulation conditions are summarized in
Table 4, where the data rates of original MPEG-2/H.263/
H.264/MPEG-AVC-coded videos are 2.5Mbps and
10Mbps for many video sequences with QCIF and CIF
formats respectively, from low motion to high motion
activities (see Table 5). In experiment we employ
AClow,16x16(AClow,8x8) and ηopt to encode a MB, in which
ηopt is calculated using means μ16 and μ4, that dynami-
cally computed using moving average. The experimental
result demonstrates that average 90% of MBs is hypoth-
esized correctly, and a reduction of average 20% of total
re-encoding time can be accomplished, while still pre-
serving good video quality. The experimental result also
reveals that the binary hypothesis testing using AClow,8x8
Figure 4 AC_low16x16 and AC_low8x8.
Table 4 Simulation conditions for MPEG-2, H.263 AND H.264/AVC.
MPEG-2
Profile main
Total frame 100
GOP 1
I/P distance 1
Frame rate 30
Bitrate 2.5 M(QCIF),10 M(CIF)
Structure ALL I
Progressive sequence 1
Progressive frame 1
Coder version MPEG2 V1.2
H.263
Total frame 100
Frame rate 30
Bitrate 2.5 M(QCIF),10 M(CIF)
Structure ALL I
Annex I on
Annex F on
Coder version tmn 3.2
H.264/AVC
Profile Baseline
Total frame 100
Number of reference frames 5
Entropy coding CAVLC
Structure ALL I
Frame rate 30
Bitrate 2.5 M(QCIF),10 M(CIF)
RDO on
Hadamard on
Resolution 1/4 pixel
Search range ±16
Coder version JM12.2
Video Resolution Sequence
QCIF (176x144) Carphone
Claire
Football
Foreman
Grandma
CIF(352x288) Container
Paris
Mobile
Salesman
Stefan
Table 5 Test video sequences.
J Sign Process Syst
coded streams are summarized in Table 6, which displays
the candidate modes performed for each original mode
during transcoding. Note that all nine modes are checked
when the original encoded mode is a DC prediction mode,
and all I16MB are carried out for all original DC/VERT/
HORI modes in H.263 and I4MB modes in H.264/AVC.
We use the same experimental settings described
previously to evaluate the performance of proposed mode
refinement schemes. The results for QP=20 is displayed in
Table 7, in which the original CCPDT with fast C8MB
mode decision is denoted as CCPDTI and the CCPDT
considering both fast C8MB mode decision and mode
refinement scheme is denoted as MRCPDT. As shown,
reduction of average 14% and 32% of re-encoding time can
be accomplished for H.263 and H.264/AVC to H.264/AVC
transcoding, while still preserving good video quality (with
only 0.027 dB and 0.062 dB PSNR loss, and 0.90% and
0.30% bit-rate increment, respectively).
4.3 I4MB Mode Prediction Using a New Rate Distortion
Cost Function
The RDO calculation using (1) involves computing SSD
and the real encoding rate by performing transform/
quantization, entropy coding and inverse transform/inverse
quantization and the computational load of the H.264/AVC
encoder is excessively high. Instead of SSD and real
encoding rate, the low complexity cost function in (2) uses
SATD and 4P to select the best intra mode, and the
execution time is only 6-10% of that using the RDO
technique in (1), but the RD performance becomes highly
critical, particularly for high bit-rate applications.
We have noticed that the modes with high SATD can be
ignored in RDO mode selection without corrupting too
much video quality because of strong correlation between
SSD in (1) and SATD. In addition, the real encoding rate
can be estimated using the variance of the SATD
coefficients [14]. To lessen the computational complexity,
in this section we suggest a new cost function for I4MBmode
decision, in which the transform coefficient statistics of
prediction modes, including SATD itself and its standard
deviation σ, are brought together to consider candidate modes
for RDO calculation. The new cost function is given as
Js ¼ SATDþ l  Rs
with
Rs ¼ 4P þ blog2s ð9Þ
where σ is the standard deviation of SATD coefficients and
β is a constant between 0.5 and 2. Experimental results
60%
70%
80%
90%
100%
0.5 1 1.5 2 2.5 3 3.5
α
Pe
rc
en
ta
ge
H.264 Mpeg2 H.263
Figure 5 Cumulative distribution function (CDF) versus threshold α.
J = SATD+λ (4P+log2σ)
60%
70%
80%
90%
100%
0 1 2 3 4 5 6 7 98 10
Order of J
H.264 Mpeg2 H.263
Pe
rc
en
ta
ge
Figure 6 Cumulative distribution function (CDF) versus cost order.
Start
I4MB
Calculate J=SATD+λ(4P+log2σ)
Choose the best three
modes m0,m1,m2(J
m0≤Jm1≤Jm2)
J
m1>1.5xJm0?
J
m2>1.5xJm0?
Choose
m0
Choose
m0,m1
Choose
m0,m1,m2
End
Yes No
Yes
No
Figure 7 I4MB mode decision.
J Sign Process Syst
T
ab
le
9
O
ve
ra
ll
P
S
N
R
lo
ss
,
bi
t
ra
te
in
cr
em
en
t
an
d
tim
e
sa
vi
ng
.
(a
)
M
P
E
G
-2
T
O
H
.2
64
/A
V
C
tr
an
sc
od
in
g
M
P
E
G
-2
to
H
.2
64
P
S
N
R
co
m
pa
ri
so
n
(d
B
,Δ
(d
B
))
B
it
ra
te
co
m
pa
ri
so
n
(b
ps
,Δ
(%
))
E
nc
od
in
g
tim
e
(m
s,
Δ(
%
))
Q
P
=
20
S
eq
ue
nc
e
C
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
E
M
R
C
P
D
T
C
IF
S
te
fa
n
44
.0
18
−0
.1
23
82
75
16
2
0.
26
%
10
92
49
−5
7.
92
%
pa
ri
s
43
.9
27
−0
.1
03
79
82
45
3
0.
38
%
11
07
91
−5
9.
22
%
M
ob
ile
43
.6
51
−0
.1
64
11
76
65
35
0.
15
%
12
53
65
−5
6.
89
%
C
on
ta
in
er
43
.4
43
−0
.0
65
59
92
39
9
1.
13
%
10
13
91
−5
9.
70
%
sa
le
sm
an
43
.0
13
−0
.1
16
65
13
81
1
−0
.0
8%
10
62
22
−5
7.
66
%
Q
C
IF
F
oo
tb
al
l
43
.3
09
−0
.1
98
28
67
20
3
0.
18
%
31
89
0
−5
7.
10
%
F
or
em
an
43
.2
72
−0
.0
97
17
30
64
7
−0
.1
9%
25
94
2
−5
7.
42
%
C
ar
ph
on
e
44
.2
80
−0
.0
66
12
88
23
4
0.
89
%
23
49
2
−5
8.
85
%
C
la
ir
e
46
.6
85
−0
.1
08
82
35
00
0.
32
%
19
54
5
−5
8.
41
%
G
ra
nd
m
a
44
.0
42
−0
.1
41
15
07
34
2
−0
.2
7%
23
82
6
−5
5.
22
%
A
vg
−0
.1
18
0.
28
%
−5
7.
84
%
M
P
E
G
-2
to
H
.2
64
P
S
N
R
co
m
pa
ri
so
n
(d
B
,Δ
(d
B
))
B
ig
ra
te
co
m
pa
ri
so
n
(b
ps
,Δ
(%
))
E
nc
od
in
g
T
im
e
(m
s,
Δ(
%
))
Q
P
=
28
S
eq
ue
nc
e
C
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
E
M
R
C
P
D
T
C
IF
S
te
fa
n
37
.2
90
−0
.1
16
46
10
95
9
−0
.0
9%
90
04
6
−5
5.
49
%
pa
ri
s
37
.1
78
−0
.0
78
43
02
66
5
0.
17
%
90
76
3
−5
7.
19
%
M
ob
ile
36
.1
57
−0
.1
18
68
97
03
1
0.
00
%
10
39
97
−5
5.
40
%
C
on
ta
in
er
37
.2
55
−0
.0
65
27
99
16
6
0.
40
%
79
73
2
−5
6.
25
%
S
al
es
m
an
36
.6
89
−0
.0
69
26
71
99
7
0.
03
%
81
35
1
−5
5.
07
%
Q
C
IF
F
oo
tb
al
l
35
.2
48
−0
.1
04
15
31
39
2
−0
.0
8%
25
26
9
−5
5.
68
%
F
or
em
an
36
.8
62
−0
.0
50
79
04
88
−0
.1
1%
20
59
4
−5
6.
00
%
C
ar
ph
on
e
38
.4
24
−0
.0
50
62
32
01
0.
32
%
19
09
7
−5
6.
66
%
C
la
ir
e
41
.0
05
−0
.1
03
40
50
00
0.
69
%
16
47
3
−5
5.
41
%
G
ra
nd
m
a
37
.3
05
−0
.0
63
65
93
40
−0
.4
1%
18
84
3
−5
2.
97
%
A
vg
−0
.0
82
0.
09
%
−5
5.
61
%
M
P
E
G
-2
to
H
.2
64
P
S
N
R
co
m
pa
ri
so
n
(d
B
,Δ
(d
B
))
B
ig
ra
te
co
m
pa
ri
so
n(
bp
s,
Δ(
%
))
E
nc
od
in
g
T
im
e
(m
s,
Δ(
%
))
Q
P
=
36
S
eq
ue
nc
e
C
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
E
M
R
C
P
D
T
C
IF
S
te
fa
n
30
.5
02
−0
.1
49
22
02
09
9
−0
.3
9%
74
48
8
−5
3.
53
%
pa
ri
s
30
.7
78
−0
.1
01
20
29
12
1
0.
31
%
73
47
0
−5
5.
32
%
M
ob
ile
28
.9
89
−0
.1
11
33
80
64
5
−0
.0
9%
82
04
0
−5
3.
65
%
C
on
ta
in
er
31
.9
66
−0
.1
04
11
45
96
6
0.
59
%
63
77
2
−5
3.
86
%
sa
le
sm
an
31
.4
72
−0
.1
25
10
90
33
0
1.
75
%
65
91
0
−5
3.
51
%
Q
C
IF
F
oo
tb
al
l
28
.8
75
−0
.0
87
60
75
58
−0
.3
0%
18
80
0
−5
5.
19
%
F
or
em
an
31
.2
01
−0
.0
92
33
67
58
0.
86
%
16
50
8
−5
3.
13
%
C
ar
ph
on
e
32
.7
61
−0
.0
97
29
19
29
0.
70
%
16
06
7
−5
3.
98
%
J Sign Process Syst
C
ar
ph
on
e
33
.3
36
−0
.1
03
27
59
50
5.
41
%
15
86
9
−5
5.
16
%
C
la
ir
e
36
.0
40
−0
.4
29
17
68
90
7.
21
%
14
30
7
−5
4.
99
%
G
ra
nd
m
a
33
.1
70
−0
.1
61
23
89
15
3.
62
%
14
99
4
−5
3.
11
%
A
vg
−0
.1
62
3.
25
%
−5
4.
76
%
(c
)
H
.2
64
/A
V
C
T
O
H
.2
64
/A
V
C
tr
an
sc
od
in
g
H
.2
64
to
H
.2
64
P
S
N
R
co
m
pa
ri
so
n
(d
B
,Δ
(d
B
))
B
it
ra
te
co
m
pa
ri
so
n
(b
ps
,Δ
(%
))
E
nc
od
in
g
T
im
e
(m
s,
Δ(
%
))
Q
P
=
20
S
eq
ue
nc
e
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
IF
S
te
fa
n
45
.2
59
−0
.3
75
−0
.1
81
82
39
78
1
1.
99
%
0.
42
%
10
79
01
−7
0.
46
%
−5
9.
56
%
pa
ri
s
44
.8
05
−0
.2
58
−0
.1
47
78
67
84
3
2.
08
%
1.
11
%
10
96
80
−7
1.
10
%
−6
1.
89
%
M
ob
ile
45
.5
15
−0
.2
84
−0
.2
11
11
03
27
71
0.
98
%
0.
29
%
12
04
59
−7
1.
64
%
−5
9.
24
%
C
on
ta
in
er
43
.9
61
−0
.3
95
−0
.0
29
57
44
92
6
4.
54
%
2.
61
%
99
34
0
−7
0.
02
%
−6
2.
55
%
S
al
es
m
an
43
.2
21
−0
.3
55
−0
.1
04
61
62
31
0
3.
38
%
1.
66
%
10
40
78
−7
1.
28
%
−6
1.
76
%
Q
C
IF
F
oo
tb
al
l
44
.9
01
−0
.2
65
−0
.2
98
27
03
21
1
1.
14
%
0.
27
%
30
68
2
−7
2.
97
%
−6
0.
78
%
F
or
em
an
43
.8
79
−0
.2
86
−0
.1
21
16
72
90
6
3.
01
%
0.
12
%
25
64
3
−7
1.
40
%
−5
9.
97
%
C
ar
ph
on
e
44
.8
44
−0
.2
92
−0
.0
93
12
27
79
0
5.
27
%
1.
49
%
23
11
7
−7
0.
29
%
−6
0.
59
%
C
la
ir
e
46
.9
95
−0
.4
79
−0
.1
54
78
71
33
12
.4
1%
1.
65
%
19
36
0
−6
7.
68
%
−5
9.
72
%
G
ra
nd
m
a
44
.3
66
−0
.4
61
−0
.1
57
14
34
97
0
4.
63
%
0.
12
%
23
52
5
−7
0.
06
%
−5
7.
62
%
A
vg
−0
.3
45
−0
.1
49
3.
94
%
0.
97
%
−7
0.
69
%
−6
0.
37
%
H
.2
64
to
H
.2
64
P
S
N
R
co
m
pa
ri
so
n
(d
B
, Δ
(d
B
))
B
it
ra
te
co
m
pa
ri
so
n
(b
ps
,Δ
(%
))
E
nc
od
in
g
T
im
e
(m
s,
Δ(
%
))
Q
P
=
28
S
eq
ue
nc
e
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
IF
S
te
fa
n
37
.5
03
−0
.3
73
−0
.1
23
46
21
66
3
4.
69
%
0.
40
%
89
92
1
−6
9.
03
%
−5
7.
01
%
pa
ri
s
37
.4
12
−0
.2
43
−0
.0
74
42
96
82
6
4.
98
%
0.
89
%
90
80
9
−6
9.
47
%
−5
9.
56
%
M
ob
ile
36
.7
62
−0
.3
99
−0
.1
56
68
74
44
0
2.
41
%
0.
28
%
10
37
55
−7
0.
50
%
−5
7.
32
%
C
on
ta
in
er
37
.5
9
−0
.2
88
−0
.0
36
27
72
25
7
12
.4
2%
1.
35
%
79
27
1
−6
7.
41
%
−5
8.
65
%
sa
le
sm
an
37
.0
16
−0
.2
28
−0
.0
51
26
55
68
4
9.
34
%
2.
35
%
81
32
0
−6
8.
31
%
−5
8.
54
%
Q
C
IF
F
oo
tb
al
l
35
.5
31
−0
.3
77
−0
.0
9
15
21
27
6
3.
61
%
0.
79
%
25
17
3
−7
1.
30
%
−5
8.
85
%
F
or
em
an
37
.1
84
−0
.2
18
−0
.0
67
78
51
91
7.
49
%
0.
39
%
20
40
6
−6
9.
03
%
−5
8.
00
%
C
ar
ph
on
e
38
.7
7
−0
.2
65
−0
.0
64
61
68
91
10
.4
7%
1.
04
%
19
06
4
−6
7.
85
%
−5
8.
03
%
C
la
ir
e
41
.2
45
−0
.5
39
−0
.1
29
39
76
82
25
.9
6%
1.
88
%
16
53
4
−6
5.
30
%
−5
7.
75
%
G
ra
nd
m
a
37
.6
3
−0
.3
1
−0
.0
93
65
47
92
11
.5
9%
0.
43
%
18
74
9
−6
7.
04
%
−5
4.
82
%
A
vg
−0
.3
24
−0
.0
88
9.
30
%
0.
98
%
−6
8.
52
%
−5
7.
85
%
H
.2
64
to
H
.2
64
P
S
N
R
co
m
pa
ri
so
n
(d
B
, Δ
(d
B
))
B
it
ra
te
co
m
pa
ri
so
n
(b
ps
,Δ
(%
))
E
nc
od
in
g
T
im
e
(m
s,
Δ(
%
))
Q
P
=
36
S
eq
ue
nc
e
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
C
P
D
T
I
S
C
P
D
T
I
E
M
R
C
P
D
T
C
IF
S
te
fa
n
30
.5
46
−0
.4
66
−0
.1
68
22
21
17
6
10
.2
1%
0.
37
%
74
50
6
−6
6.
96
%
−5
5.
42
%
pa
ri
s
30
.8
18
−0
.3
4
−0
.1
14
20
49
68
9
12
.2
9%
0.
82
%
73
91
2
−6
6.
99
%
−5
7.
43
%
M
ob
ile
29
.1
12
−0
.3
36
−0
.1
27
34
25
67
1
6.
42
%
0.
55
%
82
38
6
−6
8.
26
%
−5
5.
81
%
C
on
ta
in
er
32
.1
01
−0
.5
26
−0
.1
13
11
50
04
4
36
.1
1%
1.
22
%
63
75
6
−6
8.
26
%
−5
5.
20
%
T
ab
le
9
(c
on
tin
ue
d)
J Sign Process Syst
considering fast C8MB mode decision approximate 88% of
computation time on average (corresponding to a speed up
factor of 8) can be saved.
For H.264/AVC to H.264/AVC intra frame transcoding,
coded mode information in the original incoming video stream
can be totally reused, and the computation cost can be
dramatically diminished. This algorithm is referred to as simple
cascaded pixel domain transcoding (SCPDTI) algorithm.
However, this could lead to a severe degradation in coding
performance due to mismatched problems. The performance of
SCPDTI is also summarized in Table 9 for comparison for
H.264/AVC to H.264/AVC intra frame transcoding. The
computation savings in the proposed algorithm is slightly
less than SCPDT (with average 71% reduction), while the
improvement in coding performance is remarkable.
To obtain further insight, Fig. 8 compares rate distortion
performance and time saving of the proposed transcoder
(EMRCPDT) with CCPDTI and CCPDTINFC (without
considering fast C8MBmode decision), conducted on foreman
video sequence, for various QPs. As shown, the rate distortion
curve is very close to that of CCPDT, and the improvement in
computation time is quite significant. We also see that the
improvement in rate distortion performance is momentous,
with slightly higher computation, compared to SCPDTI.
6 Conclusion
This paper suggests a general architecture for MPEG-2/
H.263/H.264/AVC to H.264/AVC intra frame transcoding.
The proposed algorithm is accomplished in three stages. In
the first stage, the low-frequency AC components of DCT
coefficients are used to select I4MB prediction or I16MB
prediction for a MB. In the second stage, a mode
refinement scheme is utilized to eliminate unlikely modes
during intra frame transcoding for H.263 and H.264/AVC
coded video streams, based on coded mode information.
Finally, a new cost function, employing SATD value and its
standard deviation, is used to select a set of candidate
modes for I4MB mode prediction instead of SSD value and
the real encoding rate. The results in all intra frame
experiments reveal that average 59% of computation time
27
29
31
33
35
37
39
41
43
45
47
0 400 800 1200 1600 2000
Bit rate (kbps)
0 400 800 1200 1600 2000
Bit rate (kbps)
0 400 800 1200 1600 2000
Bit rate (kbps)
0 400 800 1200 1600 2000
Bit rate (kbps)
PS
N
R 
(dB
)
CCPDTINFC CCPDTI EMRCPDT CCPDTINFC CCPDTI EMRCPDT
CCPDTINFC CCPDTI EMRCPDT CCPDTINFC CCPDTI EMRCPDT
CCPDTINFC CCPDTI EMRCPDT CCPDTINFC CCPDTI EMRCPDT
0
10
20
30
40
50
60
70
80
90
Ti
m
e 
(s)
27
29
31
33
35
37
39
41
43
45
47
0 400 800 1200 1600
Bit rate (kbps)
0 400 800 1200 1600
Bit rate (kbps)
PS
N
R 
(dB
)
0
10
20
30
40
50
60
70
80
90
Ti
m
e 
(s)
27
29
31
33
35
37
39
41
43
45
47
PS
N
R 
(dB
)
0
10
20
30
40
50
60
70
80
90
Ti
m
e 
(s)
(a) MPEG-2 to H.264/AVC intra frame transcoding  
(b) H.263 to H.264/AVC intra frame transcoding
(c) H.264/AVC to H.264/AVC intra frame transcoding
Figure 8 Overall rate distortion
performance and time saving.
a MPEG-2 to H.264/AVC intra
frame transcoding, b H.263
to H.264/AVC intra frame
transcoding, c H.264/AVC to
H.264/AVC intra frame
transcoding.
J Sign Process Syst
IEEE Transactions on Consumer Electronics, Vol. 55, No. 4, NOVEMBER 2009 
Contributed Paper 
Manuscript received September 11, 2009                                     0098 3063/09/$20.00 © 2009 IEEE 
2172 
Cascaded Mode Decision for MPEG-2  
to H.264/AVC Intra Frame Transcoding 
Yinyi Lin, Member, IEEE and Jyun-De Wu 
 
Abstract — The newest international video-coding 
standard H.264/AVC significantly achieves better coding 
performance compared to prior video coding standards 
such as MPEG-2, which has been widely used in today’s 
digital video applications. To provide the interoperability 
between MPEG-2 and H.264/AVC, in this paper we 
propose an efficient cascaded mode decision for MPEG-2 
to H.264/AVC intra frame transcoding, which is 
accomplished in two stages. In the first stage, the low-
frequency AC components of discrete cosine transform 
(DCT) block of a MB is used to select I4MB or I16MB 
mode prediction; while in the second stage sum of 
absolute Hadamard transform differences (SATD) 
coefficients, including SATD value and its variance, is 
used to skip improper modes for rate distortion 
optimization (RDO) mode decision. The experimental 
results, conducted on JM12.2 with fast C8MB mode 
decision, reveal that over 49% of computation time on 
average can be saved, while preserving good coding 
performance when compared with complex cascaded pixel 
domain transcoding (CCPDT); or 85% (a speed up factor 
of 7) when compared with CCPDT without considering 
fast C8MB. The coding performance is also compared 
with two other distinct algorithms [3], [4], and the results 
demonstrate that the proposed algorithm momentously 
outperforms these two algorithms in all three respects 
(PSNR, bit rate as well as computation time1. 
 
Index Terms — H.264/AVC, intra mode decision, rate-
distortion cost function, rate distortion optimization (RDO), ρ -
domain model. 
I. INTRODUCTION 
The newest international video-coding standard, referred to 
as H.264/AVC, has been approved by ITU-T as 
recommendation H.264 and by ISO/IEC as the MPEG-4 part 
10 advanced video coding (AVC) international standard [1]. 
The emerging H.264/AVC momentously achieves better 
performance in both PSNR and visual quality at the same bit 
rate compared with prior video coding standards such as 
MPEG-2 [2]. Because of its superior performance, 
H.264/AVC has been used for a wide range of applications 
such as broadcasting, mobile handsets and storage etc.  
 
1 The authors are with the Department of Communication Engineering 
Department, National Central University, Chung Li, Taiwan 32054, R.O.C.(e-
mail: yilin@ce.ncu.edu.tw). This work was supported by the National Science 
Council, Taiwan, R.O.C. under Grant Number NSC 98-2221-E-008-062. 
 
To whatever extent, the MPEG-2 video has been 
widely used in today’s digital video applications such as 
DVD and HTDV. The transcoding that converts a video in 
the MPEG-2 format to H.264/AVC format becomes a key 
technology to provide such interoperability between 
different systems and devices. In this paper, we focus on 
the MPEG-2 to H.264/AVC transcoding of intra-coded 
video. The most straightforward way to succeed this 
transcoding process is to decode the video stream with 
MPEG-2 and re-encode the reconstructed video sequence 
with H.264/AVC. The fully decoding and re-encoding 
process, referred to as complex cascaded pixel domain 
transcoding (CCPDT), is quite involved and time 
consuming. Reusing information enclosing in the original 
incoming video stream can apparently reduce the 
computational complexity.  
The computation cost can be reduced when the 
information is reused to re-encode the incoming video 
stream. Many efforts have been made to explore the fast 
intra mode decision algorithm for MPEG-2 to H.264/AVC 
transcoding to reduce the computational complexity [3]-[7]. 
There are generally two transcoding architectures to 
accelerate the intra frame mode decision: one is the 
cascaded pixel domain transcoding (CPDT) and the other 
one is the cascaded transform domain transcoding (CTDT). 
To accelerate the transcoding process, most of the CTDT 
techniques attempt to employ the DC or AC components of 
MPEG-2 DCT coefficients to select a set of candidate 
modes for RDO calculations. The degradation in coding 
performance, in whatever manner, becomes strict because 
unlike MPEG-2 standard where intra prediction is carried 
out in the transform domain, the intra prediction of 
H.264/AVC is fully accomplished in the time domain by 
referring to its neighboring pixels. The edge angle or 
direction cannot be predicted accurately using only DC or 
AC components of MPEG-2 DCT coefficients, and the 
CTDT techniques could lead to highly critical performance 
degradation. 
In [8] we have presented a SATD-based intra mode 
decision algorithm for H.264/AVC to reduce the 
computational complexity, based upon SATD coefficients. 
In [9] we proposed an enhanced SATD-based intra mode 
decision, which utilized low-frequency AC components of 
DCT coefficients to improve the computation cost to a great 
extent. The experimental results revealed that the enhanced 
algorithm outperforms other efficient intra mode decision 
algorithms such as IST [10] and DED [11]. In this paper, 
based on the enhanced SATD-based algorithm we propose 
a cascaded CTDT/CPDT architecture for MPEG-2 to 
Authorized licensed use limited to: National Central University. Downloaded on June 07,2010 at 07:52:10 UTC from IEEE Xplore.  Restrictions apply. 
IEEE Transactions on Consumer Electronics, Vol. 55, No. 4, NOVEMBER 2009 2174 
 
2σ
 
 
Fig. 2 Cascaded TDT/PDT architecture for MPEG-2 to H.264/AVC intra frame transcoding 
 
I. MPEG-2 TO H.264/AVC TRANSCODIG USING 
CASCADED TDT/PDT ARCHTECTURE  
 In this section, we propose a cascaded transform-
domain/pixel-domain transcoding architecture for MPEG-2 
to H.264/AVC transcoding to reduce its computation cost. In 
the proposed algorithm, we employ low-frequency 
components of MPEG-2 DCT coefficients to select I4MB or 
I16MB for intra mode prediction. Soon afterward we use 
SATD information derived from I4MB or I16MB mode 
prediction to eliminate unlikely intra modes for RDO 
calculation. The proposed algorithm is illustrated in Fig. 2. 
The AC coefficients of DCT blocks are capable of 
describing the homogeneous characteristic of a MB, and 
they are efficient enough to select either I4MB or I16MB for 
mode prediction. After a mode (I4MB or I16MB) is 
preferred, only some of candidate modes within I4MB or 
I16MB are selected for RDO computation based on SATD 
values and their variance information. 
 
A. I4MB/I16MB Mode Selection using MPEG-2 DCT 
Coefficients 
The H.264/AVC encoder executes both I4MB and I16MB 
mode predictions in luma components to find the best mode. 
In most video sequences a lot of homogeneous areas exist, and 
the MB in these areas ends up with being determined as 
I16MB mode after the computationally expensive rate 
distortion optimization. In the video sequence related to non-
homogeneous or high detail areas, to whatever extent, I4MB 
mode usually brings out the best coding efficiency. The 
homogeneous characteristics of a video sequence can be 
described by its DCT coefficients, in which flat areas usually 
possess small low-frequency components of the DCT block 
while high detail areas with large low-frequency components. 
In this section, we employ the low-frequency components of 
DCT coefficients of a MB to designate a MB as a 
homogeneous or non-homogeneous area. 
 The 1616×  DCT coefficients of a MB is given by 
 
 
32
)12(cos
32
)12(cos),()()(
8
1),(
15
0
15
0
1616
ππ vkulklxvCuCvuX
l k
x
+∑ ∑ +=
= =
    
  
(3) 
where 2/1)()( == vCuC  for 0== vu  and 1)()( == vCuC  
for other u  and v . The low-frequency components 
)0,(1616 uX x  and ),0(1616 vX x  can be expressed as 
  
 
∑ ∑ +=
= =
15
0
15
0
1616 32
)12(cos),(
28
1)0,(
l k
x
ulklxuX π        (4) 
 ∑ ∑ +=
= =
15
0
15
0
1616 32
)12(cos),(
28
1),0(
k l
x
vkklxvX π       (5)  
The sum of absolute low-frequency components |)0,(| 1616 uX x  
and |),0(| 1616 vX x  in some degree can characterize the flatness 
of a MB, which is given by 
 |),0(||)0,(|
15
1
1616
15
1
16161616, ∑=
∑
=
+=
v
x
u
xxlow vXuXAC   (6) 
The 1616× DCT coefficients of a MB can be procured from 
the four MPEG-2 88×  DCT blocks, but it would enfold with 
the computation of 88×  IDCT of the given blocks, and 
spatially combine outcoming blocks to create a 1616×  block, 
and at the end employ 1616×  DCT on resulting 1616×  block. 
The 1616× DCT computation in (3) can be expressed as 
  
 T
x
x
x
xx
xx
T
x
x
xx CC
C
XX
XX
C
C
CX 1616
88
88
11
88
10
88
01
88
00
88
88
88
16161616 0
0
0
0 ⎥⎦
⎤⎢⎣
⎡
⎥⎥⎦
⎤
⎢⎢⎣
⎡
⎥⎦
⎤⎢⎣
⎡=  (7) 
 
that can be simplified as 
 T x
xx
xx
xx XX
XXX 161611
88
10
88
01
88
00
88
16161616 Ψ⎥⎥⎦
⎤
⎢⎢⎣
⎡Ψ=     (8) 
where 
 
T
x
x
xx C
C
C ⎥⎦
⎤⎢⎣
⎡=Ψ
88
88
16161616 0
0        (9) 
 
Although the computation in (7) can be simplified using (9), it 
is still tangled and time consuming. To save the computation, 
instead of 1616, xlowAC in (6) we employ the low-frequency 
components 88, xlowAC of MPEG-2 DCT blocks to feature the 
flatness of a MB, which is given by 
 
 ∑
=
∑
=
∑
=
∑
= ⎭⎬
⎫
⎩⎨
⎧ += 1
0
1
0
7
1 88
7
1 88
88, |),0(||)0,(|
j i v
ij
xu
ij
xxlow vXuXAC  (10) 
 
Authorized licensed use limited to: National Central University. Downloaded on June 07,2010 at 07:52:10 UTC from IEEE Xplore.  Restrictions apply. 
IEEE Transactions on Consumer Electronics, Vol. 55, No. 4, NOVEMBER 2009 2176 
indicates that 92% of RDO-optimal modes can be identified 
when 3.1=φ . Accordingly, 3.1=φ  is assumed in the proposed 
algorithm for I4MB and I16MB mode predictions.  
 We also see that the rank order by reordering the SATD 
values, according to their magnitude, could be used to early 
terminate the RDO calculation. We conclude that skipping 
those modes outside the rank (7, 3) for I4MB and I16MB 
respectively does not incur a weighty PSNR distortion.  
 
Mode Prediction using Variance 2σ of SATD 
To estimate the real coded rate in (1) with more 
accuracy, we suggested a novel estimation method based on 
the standard deviation of SATD coefficients in [8], which is 
given as 
σβσ 2log4, += PRe         (13) 
where σ  is the standard deviation of the SATD coefficients. 
Since the real encoded rate is proportional to the term σ
2
log , 
we also bring the variance 2σ  of transform coefficients into 
the SATD-based mode decision, to filter out more candidate 
modes for RDO calculation. The candidate modes selected 
from SATD decision are determined again 
using 2σ coefficient. Since SATD values is strong relative to 
the variance of transform coefficients, only the rank order of 
2σ  is considered. Experiment shows that the degradation is 
negligible when discarding those modes outside the rank (6, 
2) for I4MB and I16MB respectively. 
 
 
TABLE II PSNR LOSS, BIT-RATE INCREMENT AND TIMING 
SAVING 
 
Tang et al. Kato et al. Proposed Tang et al. Kato et al. Proposed Tang et al. Kato et al. Proposed
Tempete -0.07 -0.14 -0.14 0.90 1.09 -0.01 -37.34 -42.49 -51.48
Flower -0.11 -0.18 -0.15 0.96 0.91 0.15 -40.19 -43.78 -48.92
Football -0.10 -0.20 -0.16 0.86 1.00 0.00 -37.93 -44.29 -49.62
Bus -0.05 -0.12 -0.11 2.24 1.29 0.10 -36.98 -42.80 -54.15
Stefan -0.05 -0.12 -0.12 1.65 1.05 0.19 -38.29 -43.65 -54.14
Foreman -0.05 -0.08 -0.11 1.44 1.82 -0.27 -36.92 -39.93 -53.58
Mobile -0.09 -0.18 -0.15 0.84 1.00 0.08 -36.98 -42.97 -48.73
Grandma -0.07 -0.14 -0.14 1.22 1.30 -0.22 -38.15 -41.27 -50.17
Mthr_dotr -0.06 -0.11 -0.13 2.10 1.48 -0.14 -39.72 -40.68 -51.99
Salesman -0.06 -0.14 -0.13 1.48 1.15 -0.13 -36.83 -43.28 -51.76
-0.07 -0.14 -0.14 1.37 1.21 -0.03 -37.93 -42.51 -51.45
Sequence
CIF
QCIF
Avg.
△ PSNR(dB) △ Bitrate(%) △ Time(%)QP=20
 
 
 
Tang et al. Kato et al. Proposed Tang et al. Kato et al. Proposed Tang et al. Kato et al. Proposed
Tempete -0.06 -0.13 -0.11 1.41 1.60 -0.05 -37.03 -40.02 -49.99
Flower -0.09 -0.18 -0.13 1.47 1.20 0.13 -39.75 -42.85 -47.85
Football -0.07 -0.15 -0.09 1.34 1.35 -0.14 -37.44 -41.56 -48.72
Bus -0.04 -0.10 -0.08 3.32 1.88 0.23 -36.75 -41.32 -52.12
Stefan -0.05 -0.13 -0.11 3.14 1.50 -0.01 -38.31 -41.95 -51.88
Foreman -0.03 -0.05 -0.05 2.89 3.91 0.12 -34.07 -35.67 -51.62
Mobile -0.06 -0.14 -0.12 1.16 1.27 -0.04 -36.15 -40.24 -47.76
Grandma -0.05 -0.09 -0.06 2.16 2.33 -0.07 -37.91 -38.32 -46.54
Mthr_dotr -0.04 -0.08 -0.06 3.58 2.90 0.05 -38.04 -36.96 -47.86
Salesman -0.03 -0.10 -0.08 2.55 1.95 -0.23 -36.17 -38.67 -49.36
-0.05 -0.12 -0.09 2.30 1.99 0.00 -37.16 -39.76 -49.37
Sequence
CIF
QCIF
Avg.
QP=28 △ PSNR(dB) △ Bitrate(%) △ Time(%)
 
 
 
Tang et al. Kato et al. Proposed Tang et al. Kato et al. Proposed Tang et al. Kato et al. Proposed
Tempete -0.05 -0.10 -0.05 2.78 3.36 0.51 -36.73 -37.40 -46.56
Flower -0.09 -0.17 -0.10 2.27 1.63 0.02 -39.95 -42.46 -45.60
Football -0.09 -0.07 -0.09 4.08 3.35 0.71 -36.86 -41.12 -45.78
Bus -0.04 -0.07 -0.05 6.34 3.24 1.15 -37.94 -41.39 -48.81
Stefan -0.06 -0.16 -0.09 5.67 2.59 0.09 -39.04 -39.97 -48.38
Foreman -0.03 -0.09 0.04 6.73 8.97 3.15 -35.54 -31.88 -47.20
Mobile -0.06 -0.12 -0.07 1.93 2.23 0.04 -35.23 -36.35 -45.73
Grandma -0.06 0.00 -0.01 6.99 5.45 5.26 -36.91 -40.55 -41.80
Mthr_dotr -0.02 -0.06 0.01 7.91 6.09 3.05 -37.71 -36.70 -45.31
Salesman -0.05 -0.06 -0.03 5.84 4.60 2.02 -36.16 -36.13 -45.12
-0.06 -0.09 -0.04 5.05 4.15 1.60 -37.21 -38.39 -46.03
Sequence
CIF
QCIF
Avg.
QP=36 △ PSNR(dB) △ Bitrate(%) △ Time(%)
 
IV. EXPERIMENTAL RESULTS  
 
Several fast and effective algorithms for MPEG-2 to 
H.264/AVC intra frame transcoding have been investigated 
recently. Two individual techniques [3], [4], which completely 
employ MPEG-2 DCT information in the transform domain 
for mode decision, are used for comparison. These algorithms 
are implemented into the JM12.2 encoder to evaluate the 
performance.  
The experimental results for QP=20, 28 and 36 are 
summarized in TABLE II, which display the performance in 
terms of PSNR loss, bit-rate increment as well as time saving. 
As displayed, the degradation in PSNR and bit-rate increment 
in the proposed cascaded algorithm is very small (0.09 dB 
PSNR loss and 0.43% bit-rate increment), compared to the 
original CCPDT algorithm; while the algorithms in [3] and [4] 
respectively run into average 2.45% and 2.9% bit-rate 
increment. The proposed algorithm, to whatever extent, 
accomplishes a reduction of average 49% of total transcoding 
time, 21% from I4MB/I16MB mode selection and 28% from 
I4MB/I16MB mode prediction. The proposed algorithm 
achieves 9% and 12% of time saving more than the algorithms 
in [3] and [4] (with an average 40% reduction and 37% 
reduction for both algorithms).  
When compared with the original CCPDT algorithm that 
does not take into account the fast C8MB mode decision, our 
proposed algorithm can achieve a reduction of 85% of 
computation time, or corresponding to a speed-up factor of 7. 
To see more insight, the rate distortion curve as well as total 
transcoding time for stefan and mobile video sequences are also 
compared in Figs. 4 and 5 for comparison for various QPs. As 
can be seen, the computation reduction is momentous compared 
to other two transcoding algorithms. In addition, the rate-
distortion performance is also better than other two algorithms. 
27
30
33
36
39
42
45
1400 2600 3800 5000 6200 7400 8600
PS
N
R(
dB
)
Bitrate(kbps)
CPDT Tang et al. Kato et al. Proposed
 
35
50
65
80
95
110
1400 2600 3800 5000 6200 7400 8600
Tim
e(
s)
Bitrate(kbps)
CPDT Tang et al. Kato et al. Proposed
 
Fig. 4 Rate distortion curve and transcoding time for stefan sequence 
Authorized licensed use limited to: National Central University. Downloaded on June 07,2010 at 07:52:10 UTC from IEEE Xplore.  Restrictions apply. 
Advanced Zero-block Mode Decision Algorithm for 
H.264/AVC Video Coding 
 
 
Wei-Yao Chiu, Yu-Ming Lee and Yinyi Lin 
Department of Communication Engineering 
National Central University 
Taiwan 32054, R.O.C. 
yilin@ce.ncu.edu.tw 
 
 
Abstract—This paper proposes an advanced zero-block inter 
mode decision algorithm for H.264/AVC inter frame coding, to 
improve computation efficiency of the previous algorithms [1], 
[2]. Although the previous zero-block decision algorithm in [1] 
achieves significant computation improvement, computation 
performance is still limited for high bit-rate coding. To obtain 
better computation efficiency at high bit-rate, another work in [2] 
suggests another zero-block decision algorithm, using zero-blocks 
of both 8×8 and 4×4 DCT coefficients to describe video sequences 
in detail, including global and local stationary characteristics. 
The experimental results reveal significant computation 
improvement for high bit-rate coding, but computation 
performance at low-bit rate is slightly worse than the previous 
algorithm [1]. This study proposes an advanced decision 
algorithm which accounts for advantages of both algorithms to 
greatly improve computation. Improved computation reduction 
is very momentous for all bit-rates while still preserving high 
coding efficiency. 
Keywords-H.264/AVC; variable block-size mode; zero-block 
decision; early zero-block detection 
I.  INTRODUCTION 
The newest international video coding standard 
H.264/AVC has been approved by ITU-T as recommendation 
H.264 and by ISO/IEC as the MPEG-4 part 10 advanced video 
coding (AVC) international standard. H.264/AVC achieves 
momentously better rate distortion performance compared with 
prior video coding standards. This is due to a number of new 
techniques in motion estimation (ME), such as variable block 
sizes and multiple reference frames as well as quarter-pixel 
resolution, employed in H.264/AVC, in addition to intra mode 
prediction and the Lagrangian rate distortion optimization 
(RDO) techniques. However, the computational complexity of 
H.264/AVC is dramatically increased due to optimization 
techniques, in which the ME at quarter-pixel accuracy with 
variable block sizes and multiple reference frames dwells in the 
most computationally intensive part of the encoder. 
Numerous methods have been investigated to reduce ME 
computation cost by making the inter mode and intra mode 
decision easier. For inter mode decision, many schemes 
compose MV candidates for different block-size modes to 
reduce computation using bottom-up merging and top-down 
splitting algorithms [3], [4]. Other schemes attempt to reduce 
computation by excluding less likely modes in the mode-mode 
decision process [5], [6]. Some other schemes use temporal 
and/or spatial correlations to classify a video sequence into 
stationary (as well as homogeneous) or non-stationary (non-
homogeneous) areas [7], [8]. The sum of absolute differences 
(SAD) between the current macroblock (MB) and the co-
located MB in the reference frame is ordinarily used to check 
whether the current MB is temporally stationary by comparing 
the SAD with a threshold. 
In [7], [8], computation cost is reduced by using temporal 
and/or spatial correlation to place a video sequence into 
stationary or non-stationary areas. In these researches the SAD, 
denoted as SAD16×16, between the current MB and the co-
located MB in the reference frame (i.e., with zero MV), is 
usually employed to check if a MB is temporally stationary. 
The sum of absolute differences (SAD16×16) is given by 
 ∑ ∑ −=
= =
×
15
0
15
0
1616 ),(),(
i j
rc jiMBjiMBSAD  (1) 
where ),( jiMBc  and ),( jiMBr represent pixel intensities in 
the current MB and the previous co-located MB, respectively. 
SAD16×16 can be rewritten as 
 
∑ ∑=∑ ∑=∑ ∑ ⎭⎬
⎫
⎩⎨
⎧∑ ∑=
∑ ∑ −=
= =
×
= == = = =
= =
×
3
0
3
0
,
44
3
0
3
0
,3
0
3
0
3
0
3
0
,
15
0
15
0
1616
),(               
),(),(
l k
kl
l k
kl
l k i j
kl
i j
rc
SADXjix
jiMBjiMBSAD
 
or 
 
∑ ∑=∑ ∑=
∑ ∑ ⎭⎬
⎫
⎩⎨
⎧∑ ∑=∑ ∑ ⎭⎬
⎫
⎩⎨
⎧∑ ∑=
= =
×
= =
= = = == = = =
×
1
0
1
0
,
88
1
0
1
0
,
1
0
1
0
7
0
7
0
,1
0
1
0
1
0
1
0
,
1616
               
),(),(
l k
kl
l k
kl
l k i j
kl
l k i j
kl
SADZ
jizjiXSAD
 (2) 
 
 
978-1-4244-6888-1/10/$26.00 ©2010 IEEE TENCON 2010
 
 687
values of SAD16×8 and SAD8×16 on these three 8×8 ZBS. If 
SAD16×8 ≥ SAD8×16, then carry out the mode 8×16 for the 8×16 
non-zero-block (including a 8×8 ZB and a 8×8 non ZB), and 
vice versa. On the other hand, this investigation does not 
perform motion estimation for the other 8×16 zero-block (with 
two 8×8 ZBs) to lessen computation. Instead, the current study 
assumes median prediction MV, MPpreMV _ , as the optimal 
MV without introducing too much prediction error. Similarly, 
only the mode 16×8 and mode 8×16 are performed for 16×8 
and 8×16 non-zero-blocks in C8_3 and C8_4 respectively. 
For MBs with ZB patterns C8_5, C8_6 and C8_7, 
belonging to global non-stationary regions, findings show these 
MBs are more likely to be determined as L2 modes. When 
encoded with L1 modes, they have similar RD cost function, 
and the mode 16×16 usually gives the best RD cost function 
compared to the other two modes (16×8 and 8×16). 
Subsequently, among L1 modes, only the mode 16×16 is 
performed, without too much coding performance degradation. 
In addition to performing mode 16×16, this study also 
carries out L2 modes for MBs with patterns C8_5, C8_6 and 
C8_7 as follows. As shown in Fig. 1, the MBs with C8_5, 
C8_6 and C8_7 possess two, one or none 8×8 ZBs and they 
belong to global non-stationary areas. The 8×8 ZBs could be 
considered as a local stationary region, and this algorithm deals 
with the 8×8 mode as the best choice for these 8×8 ZBs, and 
none of the L2 modes need to be performed. 
For local non-stationary 8×8 blocks (i.e., non-zero-blocks), 
similar to separation of a 16×16 MB, the algorithm divides 
these 8×8 blocks into five distinct areas based on the number of 
4×4 ZBs (denoted as Nb) and the associated ZB patterns 
(denoted as C4_x), as Fig. 1 illustrates. The L2-level mode 
predictions for these local stationary or non-stationary areas are 
similar to the L1-level mode prediction. 
III. ADVANCED ZERO-BLOCK INTER MODE DECISION 
ALGORITHM 
Experimental results reveal that at high bit-rates, the 
proposed algorithm [2] using both 8×8 and 4×4 ZBs  (denoted 
as 44,88 ××ZBD  ) is superior to the previous algorithm [1] that 
uses only 4×4 ZBs  (denoted as 44×ZBD ) to describe a video 
sequence. This is because the new algorithm characterizes 
video sequences in more details (including global and local 
characteristics) at high bit-rate coding, and an average of two 
of L1 modes (16×8 as well as 8×16) are not performed at high 
bit-rates. However, the advantage disappears at low bit-rates, 
particularly for slow motion videos, in which most MBs have 
numerous 4×4 ZBs. In this case, 4×4 ZBs thoroughly 
distinguish video sequences, and the previous algorithm [1] 
using only 4×4 ZBs becomes more computationally effective. 
We statistically analyze the average modes carried out in both 
algorithms for different QPs or bit-rates, and the results are 
compared in TABLE II for claire, foreman and football 
sequences. The simulation conditions are given in TABLE I. 
As demonstrated, the proposed algorithm [2] using both 8×8 
and 4×4 ZBs is definitely appropriate for high bit-rate coding, 
while the previous algorithm [1] is more suitable at low bit-
rates. 
TABLE I.  SIMULATION CONDITION 
Profile Baseline GOP structure IPPP…
Encoding frames 100 Entropy coding CAVLC
# of reference frames 5 Search range ±16
Frame rate 30 OS Windows XP
RDO on CPU Core 2 Duo
Hadamard on RAM 2048 MB
Resolution 1/2, 1/4 pixel Coding version JM 12.2  
TABLE II.  AVERAGE MODES PERFORMED FOR DIFFERENT QPS 
Sequence
QP ZBD4x4 ZBD8x8/4x4 △(mode) ZBD4x4 ZBD8x8/4x4 △(mode) ZBD4x4 ZBD8x8/4x4 △(mode)
16 2.15 2.79 0.64 6.71 4.83 -1.88 7.00 5.00 -2.00
20 1.41 1.91 0.50 5.97 4.55 -1.42 7.00 4.99 -2.00
24 1.15 1.43 0.28 4.50 4.08 -0.42 6.91 4.95 -1.95
28 0.89 1.28 0.38 3.32 3.54 0.22 6.54 4.83 -1.71
32 0.60 1.01 0.41 2.41 2.94 0.54 5.44 4.49 -0.95
36 0.38 0.70 0.32 1.68 2.33 0.65 3.61 3.76 0.15
40 0.25 0.45 0.20 1.19 1.71 0.52 2.52 2.80 0.28
Avg. 0.39 -0.26 -1.17
claire foreman football
 
 
Figure 2.  Advanced zero-block decision algorithm 
This section suggests an advanced zero-block decision 
algorithm for inter mode prediction, accounting for advantages 
of both algorithms. In this hybrid algorithm, we use 4×4 ZBs to 
separate video sequences into three categories 
( 16 and  ,155  ,40 =≤≤≤≤ NbNbNb ). For the case with 
16=Nb , representing global and local stationary areas, we 
perform the skip mode and choose the skip mode as the best 
mode. For the case with 155 ≤≤ Nb , we carry out L1 modes 
decision as described in Section II.B. For the category with 
40 ≤≤ Nb , representing global and local non-stationary areas, 
we only perform the 16×16 mode in L1 level and carry out L2 
modes prediction (P8×8 procedure), as described previously. 
Fig. 2 gives the detailed illustration for the advanced algorithm. 
IV. EXPERIMENTAL RESULTS 
Coding performance of the advanced zero-block inter mode 
decision algorithm and previous algorithms are displayed in 
TABLE III for comparison. Note that instead of zero MV this 
work uses the median prediction MV, MPpreMV _ , to compute 
the number of ZBs, and the early zero-block detection 
technique is employed. The median prediction MV is defined 
 689
Efficient Mode Decision for H.264/AVC Frame-
skipping transcoding 
 
 
Jhong-Hau Jiang and Yinyi Lin 
Department of Communication Engineering 
National Central University 
Taiwan 32054, R.O.C. 
yilin@ce.ncu.edu.tw
 
 
Abstract—This paper proposes an efficient inter/intra mode 
decision for H.264/AVC frame-skipping transcoding. In 
the proposed algorithm, all information including mode, 
motion vector etc. are reused when the selected best frame 
is not skipped; while an efficient mode decision is 
employed when the best frame is dropped. The 
experimental results reveal that average 70% of 
computation time can be saved for the proposed H.264 
frame-skipping transcoding algorithm, when compared 
with fully decoding/encoding procedure. The degradation 
in the rate-distortion performance is fairly small. 
Keywords-H.264/AVC; mode decision; frame-skipping 
transcoding; rate distortion optimization (RDO) 
I.  INTRODUCTION 
The latest H.264/AVC achieves better coding performance 
compared with prior video coding standards, due to many 
advanced technologies employed such as Lagrangian rate-
distortion optimization (RDO) technique, variable block sizes 
mode decision and multiple reference frames motion 
estimation. Applications of H.264/AVC become popular and 
important in multimedia content transfer between networks and 
devices. However, because different networks might have 
different limitations of channel bandwidth, the coded video bit 
stream has to be converted to different formats to fit channel 
requirements. 
Video transcoding is one key technology to provide such 
interoperability between different systems and devices, to 
reduce the bit-rate of the coded video bit stream. In video 
transcoding, there are several schemes such as requantization 
[1], frame-skipping and spatial resolution reduction, to reduce 
overall bit-rates. This research focuses on reducing bit-rate to 
meet an available channel capacity through frame-skipping 
process. The most straightforward method for frame-skipping 
transcoding is to decode the video stream and re-encode the 
reconstructed video sequences after frame-skipping. However, 
the computational complexity of the fully decoding and re-
encoding process, referred to as complex cascaded pixel 
domain transcoding (CCPDT), is extremely high. Reusing 
information existing in the original video stream apparently 
reduces computational burden. The computation cost can be 
dramatically reduced when the original mode as well as motion 
information in the skipped frame is reused to encode the non-
skipped frame. This algorithm is referred to as simple cascaded 
pixel domain transcoding (SCPDT) algorithm. However, this 
could lead to a severe degradation in coding performance due 
to mode and motion vector mis-matched problems. 
To reduce performance degradation in SCPDT, many 
efficient motion vector refinement algorithms, based on 
original motion vector information, have been recently 
proposed for frame-skipping transcoding [2]-[4]. This paper 
suggests an efficient inter/intra mode decision algorithm for 
H.264/AVC frame-skipping transcoding, to reduce 
computation cost while maintaining high coding performance. 
1616x
816x
168x
P8x8
88x
48x
84x
44x
framesReference
 
 
 
Figure 1.  Mode prediction in H.264/AVC encoder 
 
 
978-1-4244-6888-1/10/$26.00 ©2010 IEEE TENCON 2010
 
 2062
as shown in Fig. 3, reveals that the computation time of 
SCPDT which reuses mode in skipped frame is only 10% of 
that using CCPDT, but with an average of 2 dB loss in PSNR. 
The performance degradation is due to mode mis-matches in 
the re-encoding when the original mode is reused. 
TABLE I.  CONDITIONAL DISTRIBUTION OF PREDICTION MODE IN RE-
ENCODING 
          Re.
 Orig. m0 m1 m2 m3 m4 m5 m6 m7 m9 m10
m0 81.46% 10.39% 2.59% 2.63% 1.67% 0.34% 0.37% 0.08% 0.00% 0.48%
m1 13.70% 56.36% 10.07% 9.75% 6.14% 1.48% 1.56% 0.40% 0.24% 0.31%
m2 4.91% 22.43% 46.44% 6.23% 13.28% 2.87% 2.67% 0.59% 0.40% 0.18%
m3 4.88% 21.42% 5.89% 47.84% 13.28% 2.38% 2.89% 0.67% 0.61% 0.13%
m4 1.22% 9.10% 9.81% 10.08% 53.72% 6.35% 7.23% 1.67% 0.78% 0.04%
m5 0.78% 7.92% 7.86% 7.34% 22.45% 40.92% 6.24% 5.31% 1.16% 0.02%
m6 0.86% 7.31% 7.21% 8.20% 21.88% 5.78% 42.67% 4.92% 1.18% 0.01%
m7 0.26% 5.71% 5.97% 6.06% 18.47% 15.31% 18.17% 28.95% 1.07% 0.02%
m9 0.30% 0.60% 0.90% 0.00% 0.15% 0.15% 0.00% 0.00% 94.93% 2.99%
m10 35.57% 5.97% 0.75% 0.50% 0.12% 0.12% 0.00% 0.00% 0.75% 56.22%  
TABLE I documents the average conditional distribution of 
mode finally determined by RDO technique in the re-encoding 
for given an original mode in skipped frame. The experiment 
was conducted on many video sequences, including 4 QCIF 
video sequences (foreman, carphone, claire and news) and 4 
CIF video sequences (container, paris, tempete and moblie), 
where the original video bit stream is encoded with QP=28. 
As demonstrated, for inter mode prediction only half of 
MBs are eventually encoded with same mode in the skipped 
frame. But the other half of MBs are finally determined with 
different modes, resulting in coding performance degradation 
(causing 2 dB PSNR losses). It is observed that these different 
modes have similar block sizes as that of the mode in the 
skipped frame. For example, consider an original skip mode, as 
high as 92% of MBs are finally encoded with skip and 16×16 
modes in re-encoding process; while for original 16×16 mode, 
approximately 90% of MBs end up determined as skip, 16×16, 
16×8 and 8×16 modes. A similar finding is also applied to 
other inter modes. 
The observation indicates that performing all inter modes in 
re-encoding is not required. Instead, to reduce computation cost 
while still maintaining high coding performance this study only 
performs those candidate modes with block size similar to the 
original mode in skipped frames. Based on the block size 
similarity, we form an inter mode prediction structure for 
efficient mode decision, as depicted in Fig. 4. For a given 
original mode only its neighboring modes are performed in the 
re-encoding process. TABLE II summarizes candidate modes 
to be performed in the re-encoding process for each original 
mode, and the corresponding conditional distribution of MBs 
finally encoded with candidate modes for each given original 
mode for QP=28. 
The results, shown in TABLE II, reveals that average 80% 
of best modes can be found in candidate modes. The 
H.264/AVC encoder also provided intra mode prediction in P 
frame. As shown in TABLE I, for intra mode prediction about 
95% of MBs with original I4MB mode are finally predicted 
using the same mode; while 92% of MBs with original I16MB 
mode are predicted using skip mode or I16MB mode. To 
reduce the computation time, only I4MB mode is performed 
for original I4MB mode, while both skip and I16MB modes 
performed for original I16MB mode. In these cases the coding 
performance can still be maintained. 
Based on above analysis, we propose an efficient mode 
decision algorithm for H.264/AVC frame-skipping transcoding, 
which is summarized as follows. 
1. If the reference frame is not skipped, then all information in 
original video bit stream, including mode type and motion 
vector etc., is reused and the re-encoding is avoided. 
2. If the reference frame is a skipped frame, then 
(i) Perform candidate modes for each original inter mode, 
based on mode decision structure in Fig. 4 and TABLE 
II. 
(ii) Perform I4MB mode prediction for the original I4MB 
mode, and perform skip and I16MB modes for the 
original I16MB mode. 
 
Figure 4.  Mode prediction structure 
TABLE II.  CANDIDATE MODES 
                 Re-enc
Orig. mode candidate Prob.
m0 m0 , m1 91.84%
m1 m0 , m1 , m2 , m3 89.87%
m2 m1 , m2 , m4 82.15%
m3 m1 , m3 , m4 82.54%
m4 m2 , m3, m4 , m5 , m6 87.19%
m5 m4 , m5 , m7 68.68%
m6 m4 , m6 , m7 69.46%
m7 m5 , m6 , m7 62.44%  
IV. EXPERIMENTAL RESULTS 
An experiment was conducted with the JM12.2 encoder to 
evaluate the performance of the proposed mode decision 
algorithm. Eight previously mentioned video sequences are 
used in our simulations, covering a wide range of motion 
contents and various formats (QCIF and CIF). The 
experimental setting is tabulated in Table III, where the original 
H.264/AVC coded video sequence has the first 300 frames in 
simulations. Each sequence is coded using IPP… structure, i.e., 
the first frame is coded as I frame, all the remaining frames are 
coded as P frames. The frame rate is 30 frames per second 
(fps). The motion estimation is performed within a square 
window size of ]16,16[ +− around the current block position. 
The number of reference frames is 5. The new frame rate is 15 
fps and the even frames are skipped in the frame-skipping 
transcoding. 
 2064
MOTION RE-ESTIMATION FOR H.264/AVC VIDEO DOWNSCALING TRANSCODING 
USING EPZS ALGORITHM 
 
Chia-Tien Lin and Yinyi Lin 
Department of Communication Engineering 
National Central University, Taiwan 32054, R.O.C. 
 
ABSTRACT 
 
This paper proposes an efficient motion re-estimation using 
enhanced predictive zonal search (EPZS) algorithm for 
H.264/AVC video downscaling transcoding to reduce 
computation cost while maintaining high coding 
performance. Three prediction motion vectors (PMV) using 
AAW, ABW and AWW approaches are defined based on 
CBP and MV information in original H.264/AVC coded 
videos. The proposed EPZS takes into account four MV 
predictors (including AAW, ABW and AWW predictors as 
well as median predictor defined in H.264/AVC). The 
experimental result reveals that the proposed EPZS 
algorithm achieves a significant reduction of 66% 
computation time while maintaining coding efficiency as 
good as fully decoding and re-encoding. The result also 
shows that the proposed algorithm outperforms the AWVM 
algorithm in all respects, including PSNR, bit-rate 
increment as well as computation saving. 
Index Terms—Downscaling transcoding, motion 
estimation, H.264/AVC, EPZS. 
 
1. INTRODUCTION 
 
As different networks and devices might have varieties of 
channel bandwidths and display resolutions, the 
H.264/AVC coded video bit stream has to be converted to 
different bit rates or formats to meet requirements, and this 
is referred to as video transcoding. In this paper we focus on 
video spatially downscaling techniques and we propose a 
motion re-estimation technique which uses enhanced 
predictive zonal search (EPZS) algorithm to reduce the 
computational complexity of downscaling transcoding. The 
dyadic downscaling transcoding, i.e., from NM   video 
downscaled to 2/2/ NM   video, is considered.  
To reduce computation cost, many fast mode 
decision and/or motion re-estimation algorithms for 
downscaling transcoding have been proposed [1]-[5], with 
the use of original coded video information such as motion 
vector (MV) and coded mode type (CMT). In [1], an 
adaptive motion vector resampling (AMVR) approach is 
suggested in which based on the original motion vector 
information, three approaches including align-to-average 
weighting (AAW), align-to-best weighting (ABW) and 
align-to-worst weighting (AWW) are investigated. 
Experimental results demonstrate that the AWW scheme 
achieves the best coding performance. Another approach 
attempts to use area-weighted vector median (AWVM) filter 
to predict MV for motion estimation in downscaled 
H.264/AVC videos with arbitrary downscaling ratios [2]. 
The AWVM method achieves better coding performance, as 
compared to the area-weighted AAW approach, but with 
higher computation cost due to its complexity in median 
motion vector computation. Another efficient motion re-
estimation algorithm, based on a multiple linear regression 
model, is proposed in [3] to reduce the transcoding 
complexity while maintaining a comparable rate distortion 
performance. To whatever extent, this technique requires an 
off-line training process to obtain model parameters.  
In [4], a fast downscaling transcoding scheme is 
developed in which a new rate distortion optimization mode 
decision with motion refinement is used to significantly 
reduce computation burden. When compared with fully 
decoding and re-encoding (denoted as complex cascaded 
pixel domain transcoding, CCPDT), a speed-up factor of 15 
is achieved, but with up to 1 dB PSNR loss. An open loop 
downscaling transcoding is examined in [5], resulting in 
very low computational complexity, but with considerable 
performance degradation. In this paper, we propose a novel 
motion re-estimation technique for H.264/AVC video 
downscaling transcoding, using EPZS algorithm to reduce 
computation cost while keeping good visual quality. 
 
2. RELATED WORK 
 
When a video sequence is downscaled with an anti-aliasing 
low pass filter, the motion activity in each downscaled 
macroblock (MB) would become slow due to elimination of 
high frequency components by the filter. As a result, the 
optimal MV in downscaled MBs would be very close to the 
halved original MVs. To reduce computation cost in the re-
encoding process, Shen et al. [1] propose the AMVR 
method for MPEG-2 coded videos with prediction motion 
vector (PMV) in downscaled (by a factor of 2) MBs given 
by 





4
1
4
1
2
1
i
i
i
ii
AMVR
A
mvA
pmv
  (1) 
2011 18th IEEE International Conference on Image Processing978-1-4577-1302-6/11/$26.00 ©2011 IEEE 2153
 
TABLE I PREDICTION ACCURACY FOR QP=24 
 
QP24
SearchRange(SR) SR＝0 SR≦1 SR≦2 SR≦3 SR≦4 SR≦5
AWW 86.51% 93.65% 96.09% 97.24% 97.96% 98.36%
ABW 78.84% 88.35% 93.08% 95.40% 96.78% 97.85%
AAW 89.54% 95.08% 96.79% 97.67% 98.18% 98.45%
Average 84.96% 92.36% 95.32% 96.77% 97.64% 98.22%
CDF
 
 
The accuracies of the predictors using the three 
approaches (AAW, ABW and AWW) are summarized in 
TABLE I for quantization parameter QP=24, in terms of 
cumulative distribution function (CDF) of search range. As 
shown, up to 90% and 95% of optimal MVs are found at 
PMVs and within 1-pixel distance around the PMVs 
respectively; while as high as 97% of optimal MVs are 
discovered within 2-pixel distance. The AAW approach 
gives the best estimation accuracy for QP=24 and this is 
because that the CBP information ijC only provides a very 
rough activity measurement. The AWW achieves the best 
accuracy for small QP since most of 8x8 blocks are coded 
with 1ijC ; while the ABW is the best choice for larger 
QP with many 0ijC . The results shown in this table 
reveal that the search range of 1  pixel is good enough in 
the motion re-estimation process. 
Figure 3 compares average SPNR of the three 
approaches with 1  pixel refinement, on a frame-by-frame 
basis for paris sequence at a constant bit rate. Results from 
other sequences are omitted because of space limitations. In 
addition, the median predictor derived from MVs of 
spatially neighboring MBs (as defined in H.264/AVC, and 
denoted as the default predictor) is also investigated, and the 
performance with 1  pixel refinement is also demonstrated 
for comparison. As shown, none of the predictors achieves 
the best coding efficiency for all frames, and as high as 2 dB 
in PSNR differences is found between four predictors. 
 
34.0
34.5
35.0
35.5
36.0
36.5
37.0
37.5
38.0
38.5
39.0
39.5
40.0
40.5
41.0
41.5
42.0
42.5
43.0
0 10 20 30 40 50 60 70 80 90 100
Frame number
PS
N
R
(d
B
)
AWW_SR=1 AAW_SR=1 ABW_SR=1 264default_SR=1
 
Fig. 3 Average PSNR for paris sequence 
 
The results shown in Fig. 3 indicate that the video 
quality can be improved by using the zonal search (ZS) 
motion re-estimation with union of the four 33 sub-search 
areas, as shown in Fig. 4. Experimental results show that the 
coding performance using ZS algorithm is very close to that 
of CCPDT with 16 pixel full search, but at most 36 search 
points are required, much less than CCPDT.  
 To further reduce computation cost while still 
keeping good video quality, we suggest using the enhanced 
predictive zonal search (EPZS) algorithm by taking all four 
mentioned predictors into account in motion re-estimation 
for downscaled videos and the best predictor (i.e., with 
minimal rate distortion cost function) is used as the initial 
search center. A search range of 1  pixel around the best 
predictor is then used for refinement. As a result only 12 
search points at most are performed in motion re-estimation. 
Figure 4 also illustrates the proposed EPZS algorithm which 
assumes AWW predictor has best cost function. 
 
 
        
 
 
Fig. 4 Proposed ZS AND EPZS with 1  pixel refinement 
 
4. EXPERIMENTAL RESULTS 
 
An experiment is conducted with the JM12.2 reference 
software to evaluate the performance of the proposed EPZS 
algorithm for downscaled transcoding, and the performance 
is compared with CCPDT with full search range of 16  
pixels. In addition, the approach with area-weighted vector 
median (AWVM) filter proposed in [2] is also implemented 
in JM12.2 for comparison with PMV, which is given as  
 
21
minarg
2
1  

K
i
ij
Vmv
AWVM mvmvpmv
j
  (3) 
 
Where imv  and jmv  represent all possible MVs in 
associated MBs in the original video. Both EPZS and 
AWVM algorithms are refined with a search range of 1  
pixel.  
Six commonly used video sequences with CIF format 
(stefan, paris, mobile, container, salesman and foreman) are 
tested in our simulations, covering a wide range of motion 
contents. Each sequence has the first 200 frames in 
simulations. Each sequence is coded using IPP… structure, 
i.e., the first frame is coded as I frame, all the remaining 
frames are coded as P frames. The frame rate is 30 frames 
per second. The number of reference frames is 1, and the 
number of block types is 7. 
TABLE II summarizes experimental results for 
QP=12, 24 and 36, demonstrating their performance in 
terms of PSNR loss, bit-rate increment (or decrement) and 
2011 18th IEEE International Conference on Image Processing2155
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/21
國科會補助計畫
計畫名稱: 子計畫二：異質無線網路中視訊之空域及時域轉換編碼研究(I)
計畫主持人: 林銀議
計畫編號: 99-2221-E-008-010- 學門領域: 訊號處理
無研發成果推廣資料
其他成果 
(無法以量化表達之
成果如辦理學術活
動、獲得獎項、重要
國際合作、研究成果
國際影響力及其他協
助產業技術發展之具
體效益事項等，請以
文字敘述填列。) 
舉辦 Workshop on Multimedia and Wireless Communication 2011 並分享計畫
研究成果於該研討會。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
