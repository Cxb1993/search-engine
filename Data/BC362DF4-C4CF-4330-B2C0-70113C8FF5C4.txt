 II
摘要 
本計畫延續本實驗室近年來一系列電子商務研究計畫成果，以 XML 為基礎，發展
網路交易服務之自動化分析切割、動態組合與分散式交易處理技術，作為跨企業電子商
務之基石，並進一步規劃下一代行動商務服務之藍圖。我們採用具備完整結構與豐富語
意特性的可延伸式標示語言(XML)作為新一代網際網路與電子商務標準語言，大幅提高
了文件和資料的互通性。透過網路服務(Web Services)使異質系統之間可達到程序與服務
的互通性(interoperability)，網路服務組合(Web Services Composition)提供了自動化整合
服務的機制，動態組合更增加彈性與便利，將有助於開啟下一代行動服務之紀元，對於
行動商務將是不可或缺的利器。 
在第一年的研究中，我們提出了一個完全基於開放式網路服務的系統架構，運用了
XML 制定的工作流程語言—活動控制圖(AC Diagram)，將跨企業商務程序化為網路服務
的組合，達到自動化與分散式的執行目的。為了因應複雜且龐大的商業流程，我們設計
了流程切割的演算法將原本複雜的流程切割成許多較簡單的子流程來處理。切割演算法
透過對活動控制圖的正規語意分析，儘可能保留原流程之最大可平行性。為了達到流程
執行時各個系統間的負載平衡與最低通訊花費，我們將流程切割演算法所切割出的子流
程與相互關係轉化為圖形切割(graph partitioning)的問題，並利用圖形理論來解決這個問
題。最後，我們利用分散式的架構，來處理流程的執行、錯誤回復與後交易回復，以確
保整個流程執行的交易性。 
第二年計劃承續上年度在網路服務工作流分析切割與分散式執行成果，進一步提出
以服務關聯性(service dependencies)為導向之服務品質計算機制，作為在商務交易網路服
務組合與執行時，動態選擇網路服務的依據。首先我們使用圖形理論來表述與分析服務
之間的關聯性，並以極大獨立集合成功的解決服務關聯性所造成的衝突問題。針對選擇
最適當的網路服務部分，我們設計了最多關聯性、最大覆蓋、最多折扣及最大服務品質
改善等關聯性選擇策略，同時考量工作流互斥與可平行執行部分對於服務組合所造成的
影響。在互斥執行部分，我們設計權重計算方式來評估各元件被執行之可能性以輔助服
務品質計算；在可平行執行部分，採用漸進最佳化的方法來改善服務品質。 
實驗顯示，我們所提出的流程切割與分散式執行技術，以及考量服務關聯性的品質
計算與動態組合機制，可以更精準挑選出適合的網路服務，作更好的資源分配，以及更
有效的分散式交易執行，對於以網路服務為主之跨企業電子商務系統，特別是變化頻仍
的行動商務環境，提供更堅實的理論基礎與實務應用價值。  
關鍵詞：網路服務、網路服務組合、服務關聯性、服務品質、工作流、交易性質、可延
伸式標記語言、電子商務 
 IV
目錄 
摘要 ........................................................................................................................................... II 
Abstract .................................................................................................................................... III 
目錄 .......................................................................................................................................... IV 
成果報告 .....................................................................................................................................I 
1 前言 ............................................................................................................................ 1 
2 相關研究 .................................................................................................................... 2 
3 活動控制圖(AC-Diagram) ........................................................................................ 4 
4 網路服務工作流分析切割與分散式執行 ................................................................ 5 
5 活動控制圖與網路服務組合塑模 .......................................................................... 13 
6 服務關聯性模型 ...................................................................................................... 17 
7 網路服務的選擇 ...................................................................................................... 22 
8 系統實作與效能分析 .............................................................................................. 25 
9 結論與未來展望 ...................................................................................................... 32 
參考文獻 .................................................................................................................................. 33 
計畫成果自評 .......................................................................................................................... 35 
出席國際研討會心得報告(一) ............................................................................................... 36 
出席國際研討會心得報告(二) ............................................................................................... 38 
 2
完整而堅實的基礎。詳見論文發表[28] 。 
在九十二年度第二階段的計畫中，我們進一步成功的設計能夠自動化分析AC 
Diagram所代表的商務程序和工作流，並轉換為分散式交易的演算法。設計與實做以動
態代理人(Dynamic Agents)為基礎的跨企業XML分散式交易處理架構，讓商務程序和工
作流執行管理進一步提升自動化與專業化程度。詳見論文發表[1] [2] 。 
在九十三年度，我們將之前的成果，轉化為網路服務(Web services)架構，促使整個
研發成果可以更開放和普及。 
本計劃在九十四年度第一期的研究中，我們針對使用者利用AC Diagram與workflow 
patterns所設計的複雜網路服務商務流程(Web service flow)進行自動化分析切割，讓原本
複雜流程，可以更精確地分割以利於分散到各機器執行，並達到最大平行化與最小通訊
溝通相依性的目標，同時利用圖形切割理論，來達到負載平衡，以妥善使用執行環境資
源。 
九十五年度第二期的研究，我們將靜態的服務平台轉移到動態環境中，發展動態服
務組合方法，引入QoS概念，可以因時、因地、依執行條件的不同，選擇最佳化的網路
服務組合，來完成交易，主要目的在於建構出一個完善的跨企業電子商務服務環境，以
達到服務無所不在(Services Everywhere)之終極目標。此外，我們更深入探討服務與服務
之間的關聯性，剖析因工作流特性所造成的影響，並以活動控制圖(AC Diagram)作為網
路服務組合的塑模工具，透過活動控制圖的語意特性分析，以計算網路服務組合裡各元
件在服務品質上的權重，用以評估每個網路服務被執行的可能性。進一步建立服務品質
模型，明確定義關聯性服務品質計算方法，同時考量因服務關聯性所可能產生的衝突，
設計四種關聯服務挑選策略。最後以漸進式最佳化的方式，針對工作流的平行執行特
性，達到全域最佳化的目標。 
綜合而言，本系列計劃五年來成果豐碩，本文將針對九十四及九十五年度研究成果
作完整報告，架構如下：第二節介紹所用到的技術，最新的研究和相關系統。為了報告
的完整性和後續說明的方便性，我們在第三節簡介本實驗室所發展的活動控制圖(AC 
Diagram)。第四節詳細說明依活動控制圖所建構之網路服務工作流自動化分析切割與分
散式交易執行方法。第五節探討網路服務組合之塑模。第六節說明服務關聯性模型。第
七節提出關聯性網路服務組合挑選方式。第八節說明及展示系統實作成果，分析與評估
各項技術的效能。第九節對整個研究做結論，並探討未來目標及進一步的研究方向。 
2 相關研究 
網路服務(Web Services)的應用對於以網際網路為基礎的電子商務系統已經是一門
成熟的技術，當單一的網路服務無法滿足複雜的資訊系統需求時，組合現有的網路服務
成為一個全新且功能更強的組合稱為網路服務組合(Web services composition) [4] [6] [7]  
[12] [14] [17] [22] 。網路服務組合的出現為企業的電子商務帶來了新的應用思維，現階
段的研究採用了工作流(workflow) 來表示網路服務組合的流程，並利用服務品質(QoS, 
Quality of Service)計算[29] ，經由評量挑選出最適合的網路服務。對於變化頻仍的行動
商務環境，能夠動態的選擇適切的網路服務組合更為重要。 
 4
探討活動控制圖各種元件的語意特性，然後設計出權重計算方式，同時定義了一個完整
的服務品質模型來探討關聯性服務與工作流執行特性對於網路服務組合所帶來的影響。 
3 活動控制圖(AC-Diagram) 
完整的活動控制圖是一個 bipartite graph 包含一組活動圖件、一組控制圖件和一組
關係來表示活動與控制之間的流程與相互關係。現存的流程描述工具只有通用的活動圖
示，而未提供類似活動圖件的機制。活動控制圖在工作流的設計上可以明確訂出活動的
類別、語意性質，特別是資訊傳輸流向，有助於使用者的商務流程模式化過程及系統的
自動化分析和處理。 
活動圖件如圖 2 所示，用來描述商務活動。舉例而言，Retrieval 和 Information 為單
向資訊傳輸，Exchange 為雙向資訊交流，Integration 為資訊整合，Transformation 則是資
訊轉換。 
 
圖 2、活動圖件 
 
圖 3 為控制圖件，用來描述各種流程定義中所需要用到的控制結構，完整的表達了
商務活動之間的複雜關係。在完成商務程序之活動控制圖設計後，商務模式化系統可以
依據正規語意，自動的將活動控制圖轉換成 XML 工作流交易 (XML workflow 
transaction)，成為跨企業交易系統之輸入。交易系統的任務，則是將此一商務流程在網
際網路上順利執行，同時保證流程執行的交易特性。 
 
 6
子流程皆可以分配給一個交易執行服務，分散式執行。然而在有限資源之下，我們必須
考慮執行資源分配與負載平衡問題。我們採用的方法是將所有的子流程和彼此之間的關
係，轉化為圖形問題。子流程為節點(nodes)，彼此間的同步關係為邊(edges)。然後依據
目前可用的執行資源，利用graph partitioning algorithm將子流程整併劃分成所需的幾個
部份，每一個部份交由一個交易執行服務來執行。整併的原則是找出最小同步通訊花
費，且能夠達成負載平衡的最佳劃分。完成劃分之後，交易執行系統就可以順利透過流
程執行演算法與錯誤回復演算法來嘗試各種可能成功的執行路徑。最後則透過了後交易
回復演算法來保留最後成功的路徑，並將不屬於成功路徑的部份做回復，以維護整個流
程執行的交易性質。完整的流程分析與交易式服務執行系統架構如圖5所示。 
 
 
圖 4、流程切割與負載平衡策略流程圖 
 
 8
 
 
圖 6、商務旅行規劃流程範例 
 
 
圖 7、商務旅行規劃流程之分析與切割結果 
 
 10
為了有效執行上述切割與劃分所得之子流程集合，我們設計了一個如圖10所示流程
執行引擎，並實作交易執行演算法、錯誤回復演算法、以及後交易回復演算法等，來確
保流程執行交易的ACID性質。以此引擎與演算法為基礎，我們完成了「跨企業電子商
務流程規劃、分析與交易式服務執行系統」雛型的設計與實作，圖11是系統介面與流程
執行狀況。 
 
 
圖 10、流程執行引擎架構圖 
 
 12
 
 
圖 13、各種負載平衡策略與運算單元數量執行時間關係圖 
 
 
圖 14、各種負載平衡策略與運算單元數量加速比率圖 
 
 14
 
我們將活動控制圖裡的活動圖件跟控制圖件分為三大類型來說明，並列出其權重的
計算方式，其中 c代表圖件本身： 
 循序(Sequence)類型： 
此類型包含了 SEQUENCE、LOOP 及所有的活動圖件，特徵是只有一個輸入及一
個輸出連結，其中 i代表 c的輸入連結，o 代表 c的輸出連結。 
對 SEQUENCE 圖件及其他的活動圖件來說，因為沒有分支也沒有結合，所以我們
定義這類型圖件輸出連結之權重及圖件本身之權重都等於輸入連結之權重： 
( ) ( )c ew c w i= ， 
( ) ( )e ew o w i= 。 
對 LOOP 圖件而言，因為所包含的模組圖件可能會被執行多次，所以我們根據過去
執行經驗來得出平均執行其模組圖件的次數，我們為其記錄一個表格 NT ，格式為
,number times< >，number 代表曾經發生過的連續執行模組次數，times 為連續執行 number 次
模組之次數，換句話說， 1 2{ 1, , 2, ,..., , }nNT times times n times= < > < > < > ， n為目前為止發生過的
最多連續執行模組次數，相關權重計算方式如下： 
1
1
( ) ( )
n
i
i
c en
i
i
i times
w c w i
times
=
=
∗
= ∗
∑
∑ ， 
( ) ( )e ew o w i= 。 
我們得出平均模組被執行之次數後再乘上輸入連結之權重來做為這個 LOOP 元件
之權重，輸出連結之權重則跟輸入連結之權重一樣。LOOP 元件本身的權重是所有權重
計算中唯一有可能超過 1 的元件。 
 分支(Split)類型： 
此類型包含了 AND、OR、XOR、CHOICE 、CONDITION、COUNT 及 PRIORITY
等控制圖件，其中 i為 c的輸入連結， 1 2{ , ,..., }nO o o o= 為 c所有輸出連結之集合。 
對 AND 圖件而言，會對所有的分支平等對待且平行地執行，所其權重設定為： 
( ) ( )c ew c w i= ， 
( ) ( ),e ew o w i o O= ∀ ∈ 。 
每個輸出分支之權重都等於輸入連結之權重，代表所有的分支均會被執行。 
對 OR 及 XOR 圖件而言，這兩個圖件都會選擇任一分支往下執行，若所選擇的分
支執行失敗，OR 會嘗試執行其他分支，但是 XOR 則不會。對這兩個圖件的權重設定為： 
( ) ( )c ew c w i= ， 
 16
( ) ( )c ew c w i= ， 
( ) ( ) ,e e ew o w i p o O= ∗ ∀ ∈ 。 
如同 CHOICE 一樣，用機率的方式來判斷我們該如何切割權重。   
 結合(Join)類型： 
此類型包含了 AND_JOIN、OR_JOIN、COUT_JOIN、PRIORITY_JOIN 等控制圖件，
其中 1 2{ , ,..., }nI i i i= 為 c所有輸入連結之集合， o 為 c的輸出連結。 
對 AND_JOIN 圖件而言，此圖件必需等到所有的輸入連結都到達才可以繼續往下
執行，其權重的設定為： 
1 2( ) min( ( ), ( ),..., ( ))c e nw c w i we i we i= ， 
 1 2( ) min( ( ), ( ),..., ( ))e e nw o w i we i we i= 。 
對所有權重取最小值是因為 AND_JOIN 這個圖件包含了必須等待所有輸入完成的語
意，所以我們找出所有輸入連結權重的最小值，作為 AND_JOIN 的權重以符合圖件的
語意。 
對 OR_JOIN 圖件而言，此圖件只要有任一輸入完成，即可繼續往下執行，其權重
的設定為： 
1 2( ) max( ( ), ( ),..., ( ))c e nw c w i we i we i= ， 
1 2( ) max( ( ), ( ),..., ( ))e e nw o w i we i we i= 。 
對所有權重取最大值是因為 OR_JOIN 只要有任一輸入完成即可往下執行，所以我們取
最大權重以符合這個圖件的語意。 
對 COUNT_JOIN 圖件而言，此圖件必需等待至少指定數目之輸入完成才能繼續往
下執行，相當於是 AND_JOIN 跟 OR_JOIN 的結合，假設 COUNT_JOIN 至少要完成的
輸入之數目為m 的話，那麼會有 nmC 種組合情況讓 COUNT_JOIN 判斷執行，對這 nmC 種情
況單獨分開來看的話，相當於是必須等待m個輸入的 AND_JOIN，再將這 nmC 種情況結合
起來的話，相當於是一個有 nmC 個輸入的 OR_JOIN，根據上面我們為 AND_JOIN 跟
OR_JOIN 所定義的權重設定，推出對 COUNT_JOIN 的權重設定應該是先對 nmC 種情況各
自取最小值之後再取其中之最大值，式子可化簡為： 
1 2( ) the m largest of ( ( ), ( ),..., ( ))c e e e nw c w i w i w i=   
1 2( ) the m largest of ( ( ), ( ),..., ( ))e e e e nw o w i w i w i=   
或是 
1 2( ) the (n-m+1) smallest of ( ( ), ( ),..., ( ))c e e e nw c w i w i w i=   
1 2( ) the (n-m+1) smallest of ( ( ), ( ),..., ( ))e e e e nw o w i w i w i=   
因為 nmC 種情況都要取最小值，這時所有權重中比第m個大的權重都會被忽略掉，而 nmC 種
情況裡的最小值之中最大的剛好就是第m大的權重，所以再取最大值的時候就可找出第
m大的權重。 
 18
設定分數的範圍從 0 到 10，最高分數是 10 分，最低是 0 分。網路服務 s 的可靠性
分數計算方式定義為： 
( )( ) 10crscore N sq s
k
= ∗ ， 
其中 cN 為目前為止網路服務 s 被呼叫過且成功的次數， k 表示目前為止被呼叫過的總次
數。 
 可得性分數： 
設定分數的範圍從 0 到 10，最高分數是 10 分，最低分數是 0 分。網路服務 s的可
得性分數計算方式定義為： 
( )( ) 10aascore T sq s θ= ∗ ， 
其中 aT 為最近θ 秒內網路服務 s正常回應秒數。θ 的設定可以隨著網路服務類型的不同以
及對服務要求的不同來調整，例如當網路服務具迅速變動的特性時，θ 可設為小一點的
值，如即時的查詢服務。 
根據上面對所有品質條件的定義，對每個網路服務 s 及所要呼叫的功能 op 而言，
會有一個服務品質的向量，此向量為 q(s,op)，其定義如下： 
( , ) ( ( , ), ( , ), ( ), ( ), ( ))price duration reputation rscore ascoreq s op q s op q s op q s q s q s=  
(二) 組合網路服務之品質標準     
網路服務組合在本文中是以工作流表示，其服務品質計算方式則是針對網路服務組
合的執行計劃，在此先假設 p為網路服務組合wsc的執行計劃: 
1 2{ , , , ,... , }n n n np t s t s t s= < > < > < >  
相同於基本網路服務之服務品質條件，在網路服務組合中亦區分為執行價格、執行
時間、使用者評價、可靠性分數及可得性分數等五項條件[29] ： 
 執行價格： 
定義 ( )priceq p 為執行計劃 p的執行價格，其計算方式如下： 
1
( ) ( , ( )) ( )
n
i
price price i i c iq p q s op t w t
=
= ∗∑  
其中 ( )iop t 為任務 it 所呼叫之功能，算出每個網路服務各自的價格乘上各自的權重並加總
之後來成為此執行計劃之價格。 
 執行時間： 
定義 ( )durationq p 為執行計劃 p的執行時間，因為執行時間的評估需要考量到工作流的
特性，所以用傳送時間的方式來評估執行時間。從 START 元件開始，根據不同的元件
來傳送時間給下一個連接的元件直到到達 END 為止，在此定義 ( )cptimeq c 為元件 c上的傳
送時間、 ( )eptimeq e 為連結 e往下傳送的時間。我們根據不同元件的特色來改變時間傳送的
方式，例如 AND_JOIN 需要等待所有的輸入都完成，所以傳送給下一個元件的時間即
 20
當商品發生關聯性時，所有的商品都會根據相同的折扣率打折，例如商品 A 跟商品 B
有關聯性，同時購買符合這個關聯性之時，兩種商品都會有九折的優惠。 
 相異折扣率： 
當商品發生關聯性時，不同的商品有不同的折扣率，例如商品 A 跟商品 B 有關聯性，
但是商品 A 的折扣率是九折，商品 B 則是八折，兩種商品的折扣率不同。 
 根據使用次數的不同折扣率： 
當某消費者對同一種關聯性使用次數累加到一種程度之後，折扣率會改變，例如一開
始的折扣率為九折，但是只要同一位消費者使用關聯性次數超過三次以上之後，從下
次開始折扣將會變成八折。 
 指定價格： 
當商品發生關聯性時，商品的價格總和會被指定為一個較便宜之價格，例如商品 A 的
單價為一百元，商品 B 的單價為兩百元，兩個一起購買只需兩百五十元。 
 額外附贈： 
當滿足關聯性之時，會直接贈送其他商品或是給予某種滿足關聯性的證明，下次即可
使用此證明來得到某種優惠，例如同時購買商品 A 及商品 B，可以得到商品 C 的八折
優待卷，下次購物時便可直接使用。也有其他不同情況的例子，例如商品 D 可以買二
送一等。 
其他還有許多不同之關聯性，而且不止侷限在價格方面的影響，例如兩個不同的服
務是同一家公司所提供，那麼一起使用便可節省網路上傳遞的時間，這就是執行時間方
面的關聯性。但是在本文中，現階段只考慮最常見的價格影響，其他服務品質方面的影
響則不列入考慮。 
上面雖然列舉了不同影響價格方式的關聯性，不過在本文中只考量相同折扣率以及
指定價格，而且只考量整體性的關聯性，並不考量部分性質的關聯性，也就是假設所有
的關聯性都會要求指定的網路服務全部都要符合才行。在此定義UD 代表相同折扣率，
FP 代表指定價格，接著定義 { , }D UD FP= 為這兩種關聯性之集合，然後定義服務關聯性
sd ： 
, ,sd S dt d=< > ，  
1, 1 2, 2{ , ,..., , }n nS s op s op s op= < > < > < > 。 
為發生關聯性 sd 所必需包含的所有網路服務及對應的功能之集合，dt 為關聯性的種類且
dt D∈ ， d 為關聯性相關的變數，如果 dt UD= 的話便代表折扣率， dt AP= 的話便代表指
定價格。定成關聯性定義之後，得重新定義具關聯性之價格品質條件的計算方式，當一
個關聯性 , ,sd S dt d=< > 且 1, 1 2, 2{ , ,..., , }n nS s op s op s op= < > < > < > 發生的條件成立時，定義
( , )dpriceq s op 為網路服務 s 上的功能 op 在發生關聯性情況下之價格，其中當 dt = UD 時：
( , ) ( , )* , ,dprice priceq s op q s op d s op S= ∀ < >∈ ，當 dt = FP 時： ( , ) / , ,dpriceq s op d n s op S= ∀ < >∈ 。 
藉著重新定義價格品質條件的計算方式，可以明確地知道當發生關聯性時這些服務
 22
7 網路服務的選擇 
(一) 設計目標與相關假設 
我們的方法特色在於提供處理服務關聯性的機制，考量網路服務組合裡各自網路服
務的權重而且兼顧全域最佳化的議題。以下列出設計目標及使用的方法： 
 針對各服務被執行之不等機率而評估出對整體網路服務組合影響之權重。 
透過對活動控制圖的分析與權重計算，每當有使用者要求使用網路服務組合時，便即
時地算出各元件該佔有之權重，再將權重列入服務品質計算的考量之中。 
 能夠處理服務關聯性。 
為了能夠處理服務關聯性，除了分析及了解關聯性之間是否會產生衝突之外，另外
也設計了四種關聯性的挑選策略，讓使用者能夠根據自己的喜好來決定關聯性挑選的方
式。 
 考量全域最佳化的概念。 
提出漸進最佳化的想法，分析有可能產生全域最佳化的平行執行工作流，並找出可
改善服務品質之網路服務來替換。 
此外定義一些研究假設，以釐清問題的範圍，以下列出相關的假設： 
假設 1、語意相符之網路服務： 
假設已經建立了完善的網路服務註冊機制，能夠準確查詢出所有網路服務組合裡各
任務所對應語意相符之網路服務，供我們的演算法來從中挑選，不會發生任何語意不符
合的情況。 
假設 2、服務關聯性的註冊機制 
假設已經建立良好之服務關聯性的註冊機制，為網路服務組合挑出一群候選的網路
服務時，能夠同時查詢到這些對應至不同任務的網路服務之間，哪些是有服務關聯性存
在及相關的特性或資料等。   
(二) 區域最佳化     
    區域最佳化顧名思義即是針對各自的任務挑出一個網路服務，最後整合成網路服務
組合，在挑選的過程中不會考量到其他任務的網路服務；至於如何從眾多網路服務中挑
選出最適合使用者喜好的網路服務，就要靠服務品質分數之計算。 
我們為每個網路服務計算出一個服務品質的總分，最後挑選出分數最高的網路服
務。本文使用之前介紹的服務品質模型並假設 1 2{ , ,..., }nS s s s= 為候選的網路服務集合， iq 為
網路服務 is 的服務品質向量，將所有網路服務的服務品質向量建立成一個二維的矩陣Q
且 ,( ;1 ,1 5)i jQ Q i n j= ≤ ≤ ≤ ≤ ，第 i 列為網路服務 is 的服務品質向量，因為只有五個服務品質
條件，所以 j 必須大於等於 1，小於等於 5。並不是每種服務品質條件都是越大越好或是
越小越好，而且不同的服務品質條件的數字範圍又不相同，所以我們必須對Q 做轉向及
一般化的動作，使得所有的值都能介於 0 到 1 之間，且值越大代表越好。 
 24
            M  Å { }M S∪  
      else for each vertex i I∈  
         S  Å I   // S  is a set of vertex 
         for each [ ]u Adj i∈  
            do S  Å { }S u−  
         S  Å { }S v∪  
         M  Å { }M S∪  
return M  
 
(四) 關聯性挑選策略   
解決關聯性衝突的問題後，接著便要決定關聯性挑選的方式，考量執行的效率，我
們直接從所有關聯性極大獨立集合中挑選其一，並全部將關聯性代入網路服務組合裡
面。在此設計了四種挑選策略，分別介紹如下： 
 最多關聯性策略(Maximal Dependency) 
從所有極大獨立集合當中，挑選出內含數量最多的項目，亦即關聯性最多的項目，
代表在網路服務組合之中可能地使用最多的關聯性。 
 最大覆蓋策略 (Maximal Coverage) 
從所有極大獨立集合當中，挑選出所有關聯性能夠處理最多網路服務組合裡的任務
之項目，如果能夠處理的任務數量一樣多的話，我們則會選擇關聯性數量的項目，意即
完成最多任務中使用最少關聯性的項目。 
 最多折扣策略 (Maximal Discount) 
從所有極大獨立集合當中，挑選出所有關聯性都使用的情況之下，能節省最多價格
之項目。作法是將所有極大獨立集合裡的關聯性都套用的情況之下，找出所有關聯性裡
的網路服務各自節省下的價格乘上其對應的任務之權重後並加總。 
 最大改善服務品質策略 (Maximal Improvement) 
在所有極大獨立集合當中，挑選出所有關聯性都使用的情況之下，能夠改善區域最
佳化最多服務品質之項目，做法是針對每個極大獨立集合中所有的關聯性都使用的情況
之下，求出其改善區域服務品質乘上相對應的任務之權重並加總，跟最大節省策略的作
法幾乎一樣，只是從價格上的考量變為所有服務品質的考量。 
當使用關聯性挑選策略選擇出服務關聯性並對應至網路服務組合後，可能無法兼顧
到所有的任務，因為一個網路服務組合裡所有的任務不太可能完全被包含在所有的關聯
性之下，也就是說扣掉使用關聯性決定的網路服務，還會有許多任務尚未被決定對應的
網路服務，因此採用區域最佳化來處裡這些尚待挑選的任務，以找出區域內最適當的網
路服務。 
(五) 全域最佳化改善服務品質 
當使用關聯性選擇策略挑選出所要使用之關聯性後，用區域最佳化來補上其他空著
的任務所對應之網路服務後，還可以再針對 Zeng[29] 所提出因為工作流平行執行而使
 26
QoS Comparison
0.65
0.7
0.75
0.8
0.85
0.9
5 10 15 20 25 30 35 40 45 50
Service per Task
Qo
S S
co
re
Local Optimization
Max Dependency
Max Coverage
Max Discount
Max Improvement
ILP
 
圖 18、QoS 分數比較圖 1 
 
圖 19 為所有的關聯性加上了區域最佳化過瀘的動作所得出的結果，本來三種策略
到後期會表現得比整數線性規劃還差，但是加上過瀘的動作之後，到後期仍然能跟整數
線性規劃表現得差不多，而最大改善策略則是一直表現的很好，過瀘動作似乎對此策略
沒什麼太大的改善。 
QoS Comparison
0.65
0.7
0.75
0.8
0.85
0.9
5 10 15 20 25 30 35 40 45 50
Service per Task
Qo
S S
co
re
Local Optimization
Max Dependency
Max Coverage
Max Discount
Max Improvement
ILP
 
圖 19、QoS 分數比較圖 2 
 
 28
Performance
0
100000
200000
300000
400000
500000
600000
700000
800000
900000
1000000
12 18 24 30 36 42 48 54 60
Service per Task
Ex
ec
uti
on
 T
im
e(n
an
o s
ec
on
d)
ILP
Local Optimization
Max Dependency
Max Coverage
Max Discount
Max Improvement
Max Dependency + Filter
Max Coverage + Filter
Max Discount + Filter
Max Improvement + Filter
 
圖 21、演算法效能比較圖 2 
 
(四) 關聯性挑選策略分析比較   
在此針對本研究所提出的四種關聯性挑選策略，用實驗的方式來找出不同的影響之
下，何種策略表現較佳，以及各種參數對關聯性的影響。首先我們先設計了三個實驗，
利用這三個實驗來分析出各策略的特性。 
實驗一：在這個實驗中設定小型的服務關聯性在價格上之折扣會比大型的服務關聯
性來得高，亦即關聯性所包含之網路服務越多折扣率越差。所有的服務關聯性會在區域
最佳化排名過後之前 75%的地方發生，用意是在模擬現實世界中有關聯性的情況大部分
都會比沒關聯性來得好。 
圖 22 顯示最多關聯性及最多折扣表現的比最大覆蓋要來得好，服務品質的分數都
比最大覆蓋來得高，由此可知在小型關聯性折扣較佳以及大部分關聯性都能比單獨服務
好的情境之下，最多關聯性及最多折扣找出的關聯性會比最大覆蓋好，而最大改善服務
品質之策略永遠都會比其他三個策略來得好。 
 30
實驗三：在此實驗中，固定每個任務對應到的網路服務各為 100 個且所有的關聯性
無論包含多少網路服務，折扣率都差不多。但是關聯性發生的範圍會改變，先用區域最
佳化排名之後，從原先的 100%一直拉大到前 20%，讓發生關聯性的服務從可能大部分
會比單獨服務差到最後可能大部分的關聯性會比單獨的服務來的來。 
圖 24 顯示，一開始關聯性較差的時候，最大折扣策略表現得比較差，當隨著關聯
性可能會越來越好的時候，最多折扣的表現跟最多關聯以及最大覆蓋互有輸贏，由此實
驗可知當不能確定關聯是否保證一定會有優勢的時候，最大折扣策略並不適用。 
關聯挑選策略比較
0.6
0.65
0.7
0.75
0.8
0.85
0.9
0.95
100% 92% 84% 76% 68% 60% 52% 44% 36% 28% 20%
Occurred Scope of Dependency
Qo
S S
co
re Max Dependency
Max Coverage
Max Discount
Max Improvement
 
圖 24、關聯性挑選策略比較圖 3 
 
(五) 最佳化之正確性測試與效能評估 
在此將針對漸進式最佳化做測試，為了能夠更明確地看出漸進式最佳化的效果，在
這個實驗之中不考慮服務關聯性，只針對區域最佳解的結果做漸進式最佳化，然後跟區
域最佳解以及全域最佳解的結果來做比較。因為漸進式最佳化是屬於啟發式的演算法，
並不保證一定會是最佳解，所以我們預測漸進式最佳化所求出之服務品質的分數應該大
於等於區域最佳解，以及小於等於全域最佳解。 
圖 25 全域最佳化 QoS 比較圖是服務品質方面的實驗結果，可以看到大部分的情況
漸近式最佳化都能找出跟全域最佳化同樣的結果，而且範圍也在我們預測的界於區域最
佳化以及全域最佳化的中間，證明漸進最佳化理論是正確的。 
圖 26 為全域最佳化效能比較圖，因為我們所使用的 AMPL 版本有變數數量上的限
制，無法處理超過 300 個變數，所以差不多只能測到每個任務各 60 個左右的網路服務，
而且 AMPL 只能測量到千分之一秒的單位，在時間測量上不是很準確，所以測試出來的
 32
9 結論與未來展望 
本研究之目標在於網路服務工作流交易之分析切割、動態組合與分散式執行，同時
深入探討服務關聯性所引起之服務品質的改變，並利用服務關聯性帶來的好處，來幫助
挑選適當的網路服務，組合現有的網路服務成為全新且功能更強的網路服務組合。除此
之外，還要能夠兼顧網路服務組合裡的網路服務，因為被執行的可能性不相同會對服務
品質造成不同的影響程度。我們利用圖形理論解決關聯性衝突問題，提出四種關聯性挑
選策略使得網路服務組合的服務品質能夠更好。針對工作流互斥執行的可能性，分析了
活動控制圖的語意特性，使用權重的概念來評估所有基本網路服務對整體服務品質的影
響程度，解決了之前相關研究在這方面的缺失。在全域最佳化方面，我們也分析了活動
控制圖的特性，找出可能造成全域最佳化比區域最佳化更好的情況，並使用漸進最佳化
的方法來改善服務品質，使其能夠有效率地逼近全域最佳化的結果，不使用的暴力法或
是效率不佳的整數線性規劃。 
未來研究議題包括，定義更完整的關聯性類型，找尋各種服務品質相關的關聯性，
提出套裝網路服務概念，設計更有效率的組合挑選方法，並針對特定結構之工作流進行
更有效率之網路服務挑選及建構完善之網路服務架構。 
 
 34
Workflows Using a Semantic Agent”, In Proceedings of IEEE/WIC International 
Conference on Web Intelligence, 2003. WI 2003. 13-17 Oct. 2003. 
[18]  Jaeger, M.C.; Rojec-Goldmann, G.; Muhl, G.; “QoS Aggregation for Web Service 
Composition using Workflow Patterns”, In Proceedings of Eighth IEEE International 
Conference on Enterprise Distributed Object Computing, 2004. EDOC 2004. 2004. 
[19]  Limthanmaphon, B., Zhang, Y., “Web Service Composition Transaction Management”, 
In Proceedings of Fifteenth Australasian Database Conference(ADC2004), 2004 
[20]  Little, M., “Transactions and Web Services”, Communication of the ACM, Vol. 46, No. 
10 Oct. 2003. 
[21]  Liu, Yutu, Anne H. Ngu and Liang Z. Zeng, “QoS Computation and Policing in 
Dynamic Web Service Selection.” Proceedings of the 13th International World Wide 
Web Conference on Alternate track papers & posters, pp. 66-73, May 2004.  
[22]  Medjahed, B., Bouguettaya, A., Elmagarmid, A.K., “Composing Web Services on the 
Semantic Web”, The VLDB J., vol. 12, no. 4, pp. 333-351, 2003. 
[23]  OWL-S Specifications, Available online at : http://www.daml.org/services/. 
[24]  Patel, C.; Supekar, K.; Yugyung Lee; “Provisioning Resilient, Adaptive Web 
Services-based Workflow: A Semantic Modeling Approach”, In Proceedings of IEEE 
International Conference on Web Services, 6-9 July 2004. 
[25]  Sato, N., Saito, S. Mitsui, K.;”Optimizing Composite Web Services Through 
Paralleization of Service Invocations”, In Proceedings of Sixth International Enterprise 
Distributed Object Computing Conference, 2002.EDOC’02., 17-20 Sept.2002 
[26]  Tang, Y.; Luo Chen; Kai-Tao He; Ning Jing; “SRN: An Extended Petri-Net-Based 
Workflow Model for Web Service Composition”, In Proceedings of IEEE International 
Conference on Web Services, 2004. 6-9 July 2004. 
[27]  WfMC(Workflow Management Coalition). http://www.wfmc.org/. 
[28]  Wu, Shiow-yang and Kuo-Chang Lin. “Cross Enterprise Business Modeling with AC 
Diagrams and Workflow Patterns”. IEEE CEC 2005: 7th International IEEE 
Conference on E-Commerce Technology, pages 110-117, Munich, Germany, July 
19-22, 2005. 
[29]  Zeng, Liangzhao, Boualem Benatallah, Anne H.H. Ngu, Marlon Dumas, Jayant 
Kalagnanam and Henry Chang, “QoS-Aware Middleware for Web Services 
Composition.” IEEE Transactions on Software Engineering, 30(5):311-327, May 
2004. 
 
 36
出席國際研討會心得報告(一) 
□ 赴國外出差或研習 
□ 赴大陸地區出差或研習 
■ 出席國際學術會議 
□ 國際合作研究計畫出國 
 
心得報告 
 
計畫名稱 
XML行動商務交易網路服
務之分析切割、動態組
合、與分散式執行(1/2) 
計畫編號 
 
94-2213-E-259-032 
報告人姓名 吳秀陽 服務機構及職稱 
國立東華大學資訊工程
學系副教授 
會議/訪問
時間地點 June 5-7, 2006 Taichung, Taiwan 
會議名稱 The IEEE International Conference on Sensor Networks, Ubiquitous, 
and Trustworthy Computing (SUTC2006) 
發表論文題
目 
Self-organization Strategies for Dynamic Context Coverage in 
Capability-Constrained Mobile Sensor Networks 
一、主要任務摘要（五十字以內） 
發表研究成果，出席相關領域議程，與各國專家學者進行討論交流並分享
研究經驗。 
 
二、對計畫之效益（一百字以內） 
本研究成果為新領域的試探性研究，主要目的是探討方興未艾的感測器網
路技術，並了解其對電子商務的應用潛力。結果發現，其中的資料管理技
術，對於RFID電子商務應用有非常多類似之處。因此打算在本計劃結束之
後續計畫中，提出相關想法。 
 
三、經過 
因為突發性事故與行程衝突，改由學生代為出席。學生出席後表示，同一
時段論文發表，皆是感測器網路領域相當著名的教授或其學生，備感壓力。
但是因為我們所提方法相當新穎，研究成果亦佳，獲得與會人士相當正面
的回饋。 
 
四、心得 
很多領域表面上看似差異很大，細究其內容，發現學問是可以互通的，經
常還會引發具有創意的聯想。就以本次試探性研究為例，果真發現感測器
網路、行動計算、RFID、甚至P2P網路等各領域，在動態資料管理的需求
 38
出席國際研討會心得報告(二) 
□ 赴國外出差或研習 
□ 赴大陸地區出差或研習 
■ 出席國際學術會議 
□ 國際合作研究計畫出國 
 
心得報告 
 
計畫名稱 
XML行動商務交易網路服
務之分析切割、動態組
合、與分散式執行(2/2) 
計畫編號 
 
95-2221-E-259-032 
報告人姓名 吳秀陽 服務機構及職稱 
國立東華大學資訊工程
學系副教授 
會議/訪問
時間地點 June 10th, 2007, Beijing, China 
會議名稱 Sixth International ACM Workshop on Data Engineering for Wireless 
and Mobile Access (MobiDE2007) 
發表論文題
目 Headlight Prefetching for Mobile Media Streaming 
七、主要任務摘要（五十字以內） 
發表研究成果，出席相關領域議程，與各國專家學者進行討論交流並分享
研究經驗。 
 
八、對計畫之效益（一百字以內） 
本研究成果為針對行動媒體串流服務，提出頗具創意的 headlight 
prefetching 技術，對於行動電子商務或更為廣泛的行動資訊服務應用，提
供更為方便有效的串流媒體管理。 
 
九、經過 
因為我們所提方法相當新穎，研究成果亦佳，獲得與會人士相當正面的回
饋。 
 
十、心得 
行動串流媒體服務被視為是行動資訊服務的最可能殺手級應用(killer 
applications)。我們率先提出新的方法與技術，並與世界各地的研究者交
流，收穫可謂相當豐富。 
 
十一、 建議與結語 
相較於我國學界讀尊SCI期刊論文，出席國際會議發表論文在先進國家所受
□ 赴國外出差或研習 
□ 赴大陸地區出差或研習 
■ 出席國際學術會議 
□ 國際合作研究計畫出國 
 
心得報告 
 
計畫名稱 
XML行動商務交易網路服
務之分析切割、動態組
合、與分散式執行(1/2) 
計畫編號 
 
94-2213-E-259-014 
報告人姓名 吳秀陽 服務機構及職稱 
國立東華大學資訊工程
學系副教授 
會議/訪問
時間地點 June 5-7, 2006 Taichung, Taiwan 
會議名稱 The IEEE International Conference on Sensor Networks, Ubiquitous, and Trustworthy Computing (SUTC2006) 
發表論文題
目 
Self-organization Strategies for Dynamic Context Coverage in 
Capability-Constrained Mobile Sensor Networks 
一、主要任務摘要（五十字以內） 
發表研究成果，出席相關領域議程，與各國專家學者進行討論交流並分享
研究經驗。 
 
二、對計畫之效益（一百字以內） 
本研究成果為新領域的試探性研究，主要目的是探討方興未艾的感測器網
路技術，並了解其對電子商務的應用潛力。結果發現，其中的資料管理技
術，對於RFID電子商務應用有非常多類似之處。因此打算在本計劃結束之
後續計畫中，提出相關想法。 
 
三、經過 
因為突發性事故與行程衝突，改由學生代為出席。學生出席後表示，同一
時段論文發表，皆是感測器網路領域相當著名的教授或其學生，備感壓力。
但是因為我們所提方法相當新穎，研究成果亦佳，獲得與會人士相當正面
的回饋。 
 
四、心得 
很多領域表面上看似差異很大，細究其內容，發現學問是可以互通的，經
常還會引發具有創意的聯想。就以本次試探性研究為例，果真發現感測器
網路、行動計算、RFID、甚至P2P網路等各領域，在動態資料管理的需求
和議題上，有非常大的相似性。就連會議的另一個主題─遍在式計算
(ubiquitous computing)，也是未來行動電子商務的必然平台。所以此次參加
會議的收穫，可謂相當豐富。 
 
Self-organization Strategies for Dynamic Context Coverage in
Capability-Constrained Mobile Sensor Networks
Shiow-yang Wu, Chao-Hong Liu, Chen-Kuang Tzeng
Department of Computer Science and Information Engineering
National Dong Hwa University
Hualien, Taiwan, R. O. C.
showyang@mail.ndhu.edu.tw
Tel: +886-3-8634020 Fax: +886-3-8634010
Abstract
We propose and formally characterize a new problem
named the dynamic context coverage problem in capability-
constrained mobile sensor network environments. The goal
is to move and adjust a network of mobile sensors with lim-
ited sensing capabilities to quickly achieve good coverage
of dynamic changing contexts and continuously maintain
the level of coverage. We propose several self-organization
strategies and algorithms to solve the problem. Simulation
results demonstrate that our techniques are highly effective
in terms of dynamic context coverage, moving distance and
self-organized deployment patterns.
Keywords: mobile sensor networks, heterogeneous sen-
sors, dynamic context coverage, self-organization
1. Introduction
The advances in wireless communication and microelec-
tronic technologies have made feasible a new promising
area of research on wireless sensor networks [1, 2]. The
coverage problem has been identiﬁed as one of the most
important issue [8, 9, 10]. However, most existing works
focus on static ﬁeld, uniform context, homogeneous sensors
and area-based coverage. For the purposes of our target ap-
plications such as environment monitoring, ecological pro-
tection, especially disaster search and rescue, we propose
and formally characterize a new problem named dynamic
context coverage problem in capability-constrained mobile
sensor networks. The main goal is to quickly react to con-
text intensity and environment changes, and automatically
redeploy capability-constrained mobile sensors to continu-
ously maintain maximal coverage. The problem is unique
in several respects. First of all, the sensors are capability-
constrained and therefore can only provide partial coverage
limited by its sensing capability, not just sensing area [8, 13].
The same area may need more than one sensors to cover.
Secondly, the context is non-uniform such that the intensity
may vary in different areas. High intensity areas need more
sensors to cover. Some areas may need no sensor at all if
the intensity is too low to be considered signiﬁcant. Most
importantly, the contexts can change. Therefore the key
issue is to cope with dynamism and continuously maintain
coverage, rather than just the initial deployment or one time
relocation [3, 11, 14, 16].
Our goals are as follows: (1) Based on local information,
sensors can self-organize to cover the contexts as much
as possible under capability constraints. (2) On detecting
changes, leaks or failures, sensors can quickly self-adjust to
respond to the dynamics. (3) When the contexts stay un-
changed, sensors should stabilize with the best topology that
consumes minimal energy to maintain longest lifetime. (4)
The sensors should strike for the optimal balance onmultiple
context coverage. (5) Always operate with energy efﬁciency
in mind. Only completely self-organized solutions are con-
sidered valid. Any reliance on global information such as
the total number of sensors [13] is not allowed. Cluster-
based or grid-based methods [4, 14, 16] are not appropriate
either since the contexts can change rapidly.
We formally characterize the problem in Section 3, then
propose three self-organization strategies and ﬁve algo-
rithms accordingly in Section 4. Implementation and sim-
ulation results in Section 5 demonstrate that our techniques
are highly effective in terms of dynamic context coverage,
moving distance and sensor deployment patterns. Section 6
concludes the paper.
2. Related Work
The research on sensor networks have been growing in
a very fast pace [1, 2]. Coverage problem has been attract-
ing much attention [8, 9, 10]. In [5], a greedy algorithm
is proposed to select connected sensors that fully cover the
self-organize into a connected sensor network and contin-
uously maintain the coverage. When all contexts remain
unchanged, the sensors must stabilize themselves for energy
efﬁciency. Theoretically, we want to determine the optimal
coverage a set of sensor nodes can achieve, or the minimal
number of nodes to reach a desired level of coverage. We
also want to prove that, given a protocol, whether it will
eventually stabilize if the contexts remain unchanged. For
algorithm comparison, we want to know which one is more
competitive in terms of context coverage, responsiveness,
energy consumption and sensor topology. In this paper, we
discuss our strategies and algorithms to quickly form a con-
nected sensor network, achieve the desired level of coverage
and continuously maintain the coverage.
4. Strategies and Algorithms
We devise three self-organization strategies and design
several algorithms accordingly. We then build a simulation
system which plot the sensor movement such that the net-
work could be visualized. We present the strategies and
algorithms in this section.
4.1. Algorithms based on Randomization
In randomization based strategy, sensor nodes move
in random with context-sensitive control. The algorithm
context-sensitive random walk method (CSRWM) is pre-
sented in Algorithm 1. Each node randomly choose the
direction and speed of movement based on limited infor-
mation from neighbors and the context reading. This is the
simplest algorithm used as the base line for comparison.
Algorithm 1: Context-Sensitive Random Walk Method
(CSRWM)
Data: N is the sensor node in question.
Result: The new location of N .
if (there is any neighbor lies within the sensing radiuses of
N ) ∨ (N has no reading) then
e⇐ a random number within 0 and 1
V ⇐ a random unit vector
N .x⇐ N .x+ e×N .d× V
end
The algorithm simulated annealing method (SAM) pre-
sented inAlgorithm 2 is CSRWMaugmentedwith a context-
sensitive temperature to speedup or slow down the random
walk. The higher the temperature, the more active the sen-
sor nodes which are more likely to spread toward uncovered
areas but less likely to stabilize. Theoretically, if we start
with a high temperature and gradually decrease it in a slow
enough pace, then the sensor network will eventually reach
an optimal stable state if all contexts remain unchanged.
Algorithm 2: Simulated Annealing Method (SAM)
Data: N is the sensor node in question.
B = b1, b2, . . . , bn are neighbors of N .
e is the ratio of annealing effect.
Result: The new location of N .
A ⇐∑ni=1 bi.s+N .s
K ⇐∑ni=1 bi.c+N .c
V ⇐ a random unit vector
if N .s has changed since the last round then
f ⇐ |N .c|−|N .s||N .c|
g ⇐ |K|−|A||K|
/* Update the temperature. */
t⇐ fg − 1 if g 6= 0, otherwise t⇐ f
if t > 1 then
t = 1
else if t < 0 then
t = 0
else
t⇐ (previous value of t) ×e
N .x⇐ N .x+ t×N .d× V
4.2. Algorithms based on Virtual Forces
In virtual forces based strategy, we model either the con-
text readings or the variations with respect to neighboring
nodes as virtual forces. By combining all the forces af-
fecting a sensor node, we can obtain a net force to drive
the sensor node toward its ideal location. Theoretically,
if the contexts remain unchange, the sensor network will
eventually stabilize. Algorithms based on virtual forces are
naturally self-organized. We have designed two algorithms
based on virtual forces: the subjection method (SM) and the
collision/diffusion method (CDM).
SM is based on distance function (geographical distance,
context distance, etc.) to determine the force. Attraction
force is useful in healing the uncovered breaches while re-
pulsion force is good for expanding the coverage to pre-
viously unattended area. Two forces can be combined to
deﬁne a function of subjection force against virtual distance
as the example in Figure 1. The circles denote the sensing ra-
diuses. The difference in context readings (dcontext) is used
to determine inter-subjection. (b) demonstrates the state of
zero subjection. The subjection can become negative for re-
pulsion force as in (c). It is permissible for different sensor
nodes to use different distance functions. Details of the SM
is presented in Algorithm 3.
CDM is to simulate the interaction among particles. Each
sensor node is treated as a particle with its context readings
as its size. Figure 2(a) and (b) demonstrate the collision
effect. We introduce a friction effect to eventually stabilize
the sensors, as shown in (c), which is also used to model the
diminishing effect of diffusion. Algorithm 4 describes the
procedure CDM.
3
Figure 3. Example of spatial relationship mea-
sure in trenching method.
Figure 4. The trenching method.
Algorithm 5: Trenching Method (TM)
Data: N is the sensor node
B = b1, b2, . . . , bn are neighbors of N .
Result: The new location of N .
I ⇐ O ⇐ a zero vector
Preferred_Distance(N )
foreach bi in B do
/* Compute the best trench between N and bi. */
Preferred_Distance(bi)
p⇐ N .p+ bi.p
V ⇐ bi.x−N .x
if |V| 6= 0 then
U ⇐ V|V| × (|V| − p)
if |V| < p then
I ⇐ I + U
else
O ⇐ O + U × ( p|U| )2
end
if |I| 6= 0 then O ⇐ I
if |O| > N .d then O ⇐ O|O| ×N .d
N .x⇐ N .x+O
5. Performance Evaluation
We develop a Java based simulation environment as de-
picted in Figure 5 and Figure 6. We use a 300 by 300 context
ﬁeld, 200 sensor nodes and single context with 800 context
nodes randomly distributed across the ﬁeld. Initially, all
sensor nodes are placed in the circle of initial placement
Figure 5. The simulation environment.
Figure 6. A screen shot of the simulation envi-
ronment and a simulation in progress.
at the center. The context ﬁeld object is responsible for
providing all contextual information and keeping track of
global statistics such as the coverage level. Sensor param-
eters and settings are: speed(1)maximum moving length
per step; capability(4); sensing radius(12); communica-
tion radius(36); accumulated moving distance; delaying
factor(1)number of steps between movement decisions;
strategyCSRWM, SAM, SM, CDM, or TM. Both the cov-
erage and the speed of achieving it are evaluated. Moving
distance is an indication of energy consumption. Coverage
pattern demonstrates how well a method covers the ﬁeld.
Figure 7 shows the results on CSRWM. Randomization
effect is evident by the variation of coverage. It takes about
1000 rounds to reach 30% on the average. CSRWM can not
maintain the coverage, and the network is neither stable nor
organized. SAM is similar to CSRWMas shown in Figure 8.
5
Figure 12. Moving Distance of SM
Figure 13. Moving Distance of CDM
Figure 14. Moving Distance of TM
and lowest variation.
Figure 19 demonstrates the simulation of context change
at every 100 rounds interval. CDM, SM and TM all respond
quickly within about 20 to 50 rounds.
CDM outperforms the others because it always considers
its nearest neighbors to avoid unnecessary movement that
may be introduced by considering more neighbors. It also
reaches the highest coverage by responding to the nearest
neighbors immediately, rather than averaged by the inﬂu-
ence of other neighbors. TM outperforms SM in moving
Figure 15. Comparison of Coverage Adaption
Figure 16. Range of Coverage
Figure 17. Comparison of Moving Distance
distance because TM directly calculates a destination. TM
and SM are comparable in coverage because they both take
all neighbors into account, and therefore unlikely to respond
to the urgent need of nearest neighbors.
6. Conclusions and Future Work
We have identiﬁed and formulated the problem of dy-
namic context coverage in capability-constrained mobile
7
□ 赴國外出差或研習 
□ 赴大陸地區出差或研習 
■ 出席國際學術會議 
□ 國際合作研究計畫出國 
 
心得報告 
 
計畫名稱 
XML行動商務交易網路服
務之分析切割、動態組
合、與分散式執行(2/2) 
計畫編號 
 
95-2221-E-259-032 
報告人姓名 吳秀陽 服務機構及職稱 
國立東華大學資訊工程
學系副教授 
會議/訪問
時間地點 June 10th, 2007, Beijing, China 
會議名稱 Sixth International ACM Workshop on Data Engineering for Wireless 
and Mobile Access (MobiDE2007) 
發表論文題
目 Headlight Prefetching for Mobile Media Streaming 
一、主要任務摘要（五十字以內） 
發表研究成果，出席相關領域議程，與各國專家學者進行討論交流並分享
研究經驗。 
 
二、對計畫之效益（一百字以內） 
本研究成果為針對行動媒體串流服務，提出頗具創意的 headlight 
prefetching 技術，對於行動電子商務或更為廣泛的行動資訊服務應用，提
供更為方便有效的串流媒體管理。 
 
三、經過 
因為我們所提方法相當新穎，研究成果亦佳，獲得與會人士相當正面的回
饋。 
 
四、心得 
行動串流媒體服務被視為是行動資訊服務的最可能殺手級應用 (killer 
applications)。我們率先提出新的方法與技術，並與世界各地的研究者交
流，收穫可謂相當豐富。 
 
五、建議與結語 
相較於我國學界讀尊SCI期刊論文，出席國際會議發表論文在先進國家所受
到的重視程度遠高於台灣，這是因為國際會議論文才是即時和最新的研
究，又可以和全世界相關領域的學者討論交流，現在已經有很多重要國際
Headlight Prefetching for Mobile Media Streaming
Shiow-yang Wu
Dept of Computer Science
and Information Engineering
National Dong Hwa Univ
Hualien, Taiwan, ROC
showyang@mail.ndhu.edu.tw
Jungchu Hsu
E-TEN Information Systems
Co., Ltd
No.256, Yangguang Street,
Neihu Chiu
Taipei, Taiwan, ROC
jungchu.hsu@etencorp.com
Chieh-Ming Chen
Microelectronics Technology
Inc.
1, Innovation Road II, Hsinchu
Science-based Industrial Park
Hsinchu, Taiwan, ROC
chen chieh-ming@mti.com.tw
ABSTRACT
Multimedia information services in mobile environments are be-
coming more and more important with the proliferation of 3G tech-
nologies. Media streaming, in particular, is a promising technol-
ogy for providing services such as news clips, live sports, and hot
movies on the fly. To avoid service interruption when the users keep
moving, proper data management strategies must be employed. We
propose a new headlight prefetching technique for the streaming
access points to deal with the uncertainty of client movement and
the requirement of seamless service hand-off. For each mobile
client, we maintain a virtual fan-shaped prefetching zone along the
direction of movement similar to the headlight of a moving vehi-
cle. The overlapping area and the accumulated virtual illuminance
of the headlight zone on a particular cell determines the degree and
volume of prefetching to be made by the streaming access point
of that cell. Headlight prefetching solves the issues of identify-
ing the streaming access points responsible for prefetching, the
timing and the amount of data to prefetch in a single mechanism
which is simple and effective. Simulation results demonstrate that
our techniques can significantly decrease streaming disruptions, re-
duce bandwidth consumption, increase cache utilization and im-
prove service response time.
Categories and Subject Descriptors
H.3.4 [Systems and Software]: Information networks; H.3.5
[Online Information Services]: Data sharing; C.2.4 [Distributed
Systems]: Distributed applications
General Terms
Algorithms, Design, Performance
Keywords
Media streaming, prefetching, mobile data management
1. INTRODUCTION
Media streaming is a promising technology for providing mul-
timedia information services such as news clips, live sports, and
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that copies
bear this notice and the full citation on the first page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior specific
permission and/or a fee.
MobiDE’07, June 10, 2007, Beijing, China.
Copyright 2007 ACM 978-1-59593-765-0/07/0006 ...$5.00.
hot movies in mobile environments. Effective data management
for media streaming is naturally the key to the successfulness of
such services. Since many users may request the same media (hot
media), traditional client-server model can easily result in server
bottleneck, bandwidth waste, poor cache utilization and longer de-
lay. Furthermore, the mobility of mobile users raise the issue of
seamless service hand-off. To avoid service interruption, proper
data management strategies must be employed. In this paper, we
propose a new technique named headlight prefetching for media
streaming in mobile environments. The technique is designed for
the streaming access points to deal with the uncertainty of client
movement, the unpredictability of request pattern and the require-
ment of seamless service hand-off. For each mobile client, we
maintain a virtual fan-shaped prefetching zone along the direction
of movement similar to the headlight of a moving vehicle. The
overlapping area and the accumulated virtual illuminance of the
headlight zone on a particular cell determines the degree and vol-
ume of prefetching to be made by the streaming access point of
that cell. When a mobile user makes an unexpected sharp turn,
the headlight shifting technique is used such that all the previously
prefetched media segments can be easily shifted to accommodate
the new direction of movement. For users requesting the same me-
dia at around the same time, the headlight sharing technique is de-
veloped for sharing the headlight zones to avoid repeated prefetch-
ing. The set of techniques solve the issues of identifying the stream-
ing access points responsible for prefetching, the timing and the
amount of data to prefetch in a single mechanism which is simple,
intuitively appealing and effective.
To evaluate the effectiveness of our techniques, we construct a
Java-based simulation environment and compare the performance
of different combinations of our schemes with on-demand tech-
niques. Simulation results demonstrate that, for streaming media
services in mobile environments, headlight prefetching, shifting
and sharing are simple and effective techniques which can signifi-
cantly decrease streaming disruptions, reduce bandwidth consump-
tion, increase cache utilization and improve service response time.
The rest of the paper is organized as follows. Section 2 provides
a survey of related issues and research work. Section 3 presents the
media streaming system infrastructure we assume and characterize
the challenges of dynamic data management in such environments.
Section 4 introduces the idea of headlight prefetching and the as-
sociated data management techniques. In Section 5, we outline
the simulation environment for experimenting with our ideas and
present the results of performance evaluation on different aspects
of the prefetching techniques. Section 6 concludes the paper.
2. RELATED WORK
With the proliferation of 3G technologies, the integration of cel-
larger central angle and smaller radius allow more neighbor-
ing SAPs to be prepared for serving the clients.
• Should a mobile user make an unexpected sharp turn, we pro-
vide the headlight shifting technique such that all the previ-
ously prefetched segments can be easily shifted to the SAPs
along the new direction.
• To efficiently reuse prefetched segments, the headlight shar-
ing technique is developed to coordinate neighboring SAPs
on media services and to avoid repeated segment prefetching.
As a summary, streaming media services in mobile environments
entail significant challenges on highly dynamic and efficient data
management. The mobile and streaming characteristics of the ser-
vices also provide a window of opportunity for information system
designers. We take on this opportunity to provide simple and effec-
tive dynamic data management techniques that adhere closely to
the movement patterns of mobile users. It turns out that high qual-
ity streaming media services in mobile environments can indeed be
achieved with proper coordinations of SAPs and right strategies for
data management.
4. HEADLIGHT PREFETCHING
As stated earlier, an important characteristic of streaming media
is the continuous playing requirement. Once a media is started, the
requesting user expects a smooth and seamless viewing experience.
Fetching a segment upon its request is not likely to catch up with
the playing speed. Prefetching and buffering are almost a must in
such case. Traditional prefetching is simply done by maintaining
a sliding window immediately ahead of the current segment by the
SAP in charge of the media service. This is only satisfactory when
the user is moving in a straight ahead pattern. For irregular moving
patterns, the traditional approach may fail miserably. The prob-
lem is that if the user changes direction and moves toward a new
SAP, the later may not have anything prepared for the user. The un-
certainty of user movement can easily result in frequent disruption
and unpleasant viewing experience. To have all surrounding SAPs
prefetch the needed segments for the user is clearly not cost effec-
tive. We therefore need a good mechanism to continuously identify
the proper set of prefetching SAPs for a moving client. Those SAPs
that are more likely to be visited next should be selected with higher
probability. Even if the set of prefetching SAPs is successfully
identified, we still have another important problem of determining
the right media segments for each SAP to prefetch. The simplest
approach of having all selected SAPs prefetch the same set of me-
dia segments is certainly not satisfactory. To save processing and
communication costs, the ideal case is to prefetch just the segments
needed to keep the media viewing smooth. Similar to the previous
issue, we need to cope with the uncertainty of user’s moving speed
and pattern by dynamically determining the prefetching segments
assignment. Those SAPs that are more likely to be visited next
should be assigned more segments to prefetch. In addition to the
prefetching SAPs identification and segment assignment problems,
we also need to determine the right timing for the SAPs to start
or stop prefetching. Otherwise the prefetched segments may either
arrive too early or too late.
The idea of headlight prefetching is to have a simple and unified
mechanism for solving the issues discussed above. A headlight
prefetching zone as depicted in Figure 2 is a virtual fan-shaped area
along the direction of user movement similar to the headlight of
a moving vehicle. All SAPs of the cells touched by the headlight
zone are selected as the prefetching SAPs for the user. The over-
lapping area and the accumulated virtual illuminance of the head-
Figure 2: The headlight prefetching zone.
Figure 3: The headlight model.
light zone on a particular cell determines the degree and volume of
prefetching to be made by the SAP of the cell. Headlight prefetch-
ing solves the issues of prefetching SAPs identification, segment
assignment and the prefetch timing in a single mechanism which is
simple and intuitive appealing.
The headlight prefetching zone is modeled by two parameters as
illustrated in Figure 3. The radius r determines the extent of look
ahead for prefetching. The angle θ is used to control the span of
coverage. Both are dynamically adjustable. In general, faster mov-
ing users need longer radiuses. Users that tend to wonder around
need larger θs to have more SAPs ready to carry on the services
when a user changes direction unexpectedly. The headlight zone
serves as a prediction of possible future interaction of the user with
neighboring cells. By using such a simple and intuitive appeal-
ing metaphor, we can easily identify the set of SAPs that need to
prefetch media segments for the user.
Once the prefetching SAPs identification problem is solved, we
still need to take on the segment assignment problem. The head-
light metaphor gives us yet another simple way to handle this prob-
lem. A basic characteristic of a vehicle headlight is that the farther
away from the vehicle the lower the illuminance. The area immedi-
ately in front of the vehicle has the highest brightness. This charac-
teristic matches exactly the requirement of the segment assignment
problem. Since a user can change direction at any time, the me-
dia segments prefetched by the SAPs farther away from the user
are less likely to be actually used. They should be assigned fewer
segments to save the cost. On the other hand, the SAPs closer to
the user are more likely to be responsible for providing the me-
dia services. They should be allocated more segments to prevent
undesirable disruption. Due to such a close resemblance, we use
the accumulated virtual illuminance of the cell area covered by the
headlight zone as the weight for segment assignment. In this way,
we solve both problems in a unified framework.
Figure 6: Direct mapping for headlight shifting.
two problems:
• Since the same media segment may be available on more
than one SAPs, how to choose or map the shifting source
and target?
• Different SAPs may have different number of prefetched seg-
ments available for shifting, how do we distribute and bal-
ance the shifting load?
We propose three strategies for headlight shifting. The simplest
and most intuitive way is to map the grids of the new zone to corre-
sponding grids of the old zone with possible offset based on user’s
current position. This is called direct mapping and is illustrated
in Figure 6. More specifically, let the old and new grids be Gi,j
and G′i,j respectively. Also assume that the position where the user
makes the turn is in grid Gx,y . Then we simply map G′i,j to Gi+x,j .
In other words, the SAP whose cell covers G′i,j can simply request
the media segments to be directly shifted from the SAP whose cell
covers Gi+x,j .
Direct mapping works fine if the user is at a position close to the
entrance of a grid since most of the segments are not yet played and
therefore the mapping is useful and efficient. However, the problem
with direct mapping is that if the user is at a position about to leave
a grid then the mapping is likely to be off by one grid since most of
the segments have already been played. The problem can be easily
solved by the second strategy named overlapped mapping. Instead
of mapping the grids one-to-one, we extend the mapping into a
one-to-many overlapped mapping as illustrated in Figure 7. More
specifically, a parameter called overlapped length(OL) is defined
to denote the degree of overlapping. Now the new grid G′i,j is
mapped to the old grids from Gi+x,j to Gi+x+OL,j . The example
has OL = 1. The strategy reduces to direct mapping if OL = 0.
The most distinctive benefit of both direct and overlapped map-
ping strategies is that all shifting sources and targets can be easily
computed without any search. However, the resulting mapping may
not be optimal in terms of shifting cost since the same segment may
be available on more than one SAP. The lowest cost shifting source
may not be the one that is mapped directly. We therefore propose
the third strategy named the shortest distance mapping strategy.
After determining the segment assignment for the new zone, the
distances between a new SAP in the zone and the SAPs in the old
zone with the assigned segments can be computed. We can there-
fore map the new SAP to the nearest neighbor in the old zone with
the required segment. If there are more than one qualified neigh-
boring SAPs available to choose from, we follow the lowest shifted
volume first strategy to balance the load.
Figure 7: The overlapped mapping strategy.
4.3 Headlight Sharing
Headlight shifting only takes the headlight zone of one user into
consideration. Segments not yet prefetched by any SAP of the old
zone can only be retrieved from the remote source. Since the same
media may be viewed by more than one user at the same time,
especially for hot medias, the headlight zones of different users
may have many segments in common. If they overlap with each
others, then it is very likely that we can find the needed segments
from other zones with or without shifting. We call this idea head-
light sharing since segments prefetched for a zone by an SAP are
shared with neighboring SAPs with overlapping headlight zones.
Once a requested segment is located in the neighborhood, the cost
of prefetching from the remote server can also be saved.
To facilitate headlight sharing, a distributed index structure is
constructed on each SAP for maintaining the availability of media
segments on other SAPs. For ease of presentation, we assume that
the set of all medias beM and the set of all segments of media i be
Gi. A separate index table Ti = {Si,M} is maintained for each
neighboring SAP from which an index message is received. Si is
the id of the SAP. M = {(mj , sk, t)|mj ∈ M, sk ∈ Gmj} is the
partial set of media and segments available on that SAP. Each seg-
ment has an expiration time t to indicate the period of validity. An
SAP index keeps track of all the available index tables while a seg-
ment index maintains, for each segment, a list of SAPs from which
the segment can be found. The information is obtained from the
index exchange between SAPs. To avoid additional communica-
tion overhead, the index messages are piggybacked with the head-
light prefetching messages. With the index ready, the segments
prefetched by an SAP can be easily shared with other SAPs to fa-
cilitate headlight sharing. A sample index is illustrated in Figure 8.
The problem now comes to the efficient maintenance of the dis-
tributed index. To keep a complete index of all medias and seg-
ments on each SAP is clearly cost prohibitive. Therefore only se-
lected information is exchanged based on the following strategies:
• Random: Randomly select part of the available segments to
exchange index.
• Local popularity: Select those segments that are locally pop-
ular based on the rationale that they may be popular on other
SAPs as well.
• SAP-specific popularity: Segments that are popular among
the users coming from the same SAP are selected to send
the index to that particular SAP. This is to satisfy different
request patterns of users from different cells.
1.95
2
2.05
2.1
2.15
2.2
2.25
2.3
2.35
A
ve
ra
ge
 D
ow
nl
oa
d 
Ti
m
e(
s/
se
g)
Hea
dlig
ht P
refe
tch
ing
Sha
ring
(ran
dom
)
Sha
ring
(loc
al p
opu
lari
ty)
Sha
ring
(cit
e-sp
ecif
ic p
opu
lari
ty)
Sha
ring
(cit
e-sp
ecif
ic r
are
nes
s)
Shi
ftin
g(d
irec
t)
Shi
ftin
g(o
ver
lap
ped
)
Shi
ftin
g(sh
orte
st d
ista
nce
)
Shi
ftin
g+S
har
ing
Comparison of different strategies on download time
Zipf-1.5
Random
Figure 11: Comparison of different headlight prefetching
strategies on average segment download time.
10
12
14
16
18
20
22
24
26
28
10 20 30 40 50
Number of Medias
Prefetch
Sharing
Shifting
Sharing +
Shifting
To
ta
l I
nt
er
ru
pt
io
n
Figure 12: Play interruption with various numbers of medias.
2
2.05
2.1
2.15
2.2
2.25
2.3
2.35
10 20 30 40 50
Number of Medias
Av
er
ag
e D
ow
nl
oa
d 
Ti
m
e(
s/s
eg
)
Prefetch
Sharing
Shifting
Shifting +
Sharing
Figure 13: Average segment download time with various num-
bers of medias.
download time. Figure 12 and Figure 13 demonstrate that the in-
crease in play interruption and download time are both limited. The
combination of shifting and sharing, again leads to best result.
Traveling speed is an important factor in mobile environments
since the faster the average speed, the less time we have to prepare
media segments for users. Figure 14 and Figure 15 show that there
is a critical point on the service performance. When the average
speed is below 40, both play interruption and average download
time are relative independent of the variation in speed. When the
average speed is too fast such that the prefetching can no longer
catch up with the mobile users, we observe a significant increase in
both play interruption and download time, especially the later.
0
10
20
30
40
50
60
10 20 30 40 50
Average Speed(m/s)
Prefetch
Shifting
Sharing
Shifting +
Sharing
To
ta
l I
nt
er
ru
pt
io
n
Figure 14: Play interruption with various speed levels.
2
2.1
2.2
2.3
2.4
2.5
2.6
2.7
2.8
2.9
3
10 20 30 40 50
Average Speed(m/s)
A
ve
ra
ge
 D
ow
nl
oa
d 
Ti
m
e(
s/s
eg
)
Prefetch
Shifting
Sharing
Shifting +
Sharing
Figure 15: Average segment download time with various speed
levels.
10
11
12
13
14
15
16
17
18
19
0.2 0.4 0.6 0.8 1
Cache Size
Prefetch
Sharing
Shifting
Shifting +
SharingT
ot
al
In
te
rr
up
tio
n
Figure 16: Play interruption with various cache sizes.
The size of client cache also has significant impact on system
performance since the larger the cache, the more we can share
with others. Figure 16 and Figure 17 demonstrate the performance
of headlight prefetching on different cache sizes where the size is
measured as the portion of an average media size. Both figures indi-
cate that our system can take advantages of larger cache to provide
better services. We note that a cache size 1 does not necessarily
imply zero interruption since a media is started after 2% buffering.
As discussed in Section 4.3, headlight sharing has the benefit
of reducing the cost of remote access. Figure 18 demonstrates the
effect by comparing the number of messages that need to be sent
between headlight prefetching and headlight sharing. The saving is
especially evident when the number of total medias is small since
the chance of successful sharing increase.
As a summary, the set of headlight prefetching techniques are
