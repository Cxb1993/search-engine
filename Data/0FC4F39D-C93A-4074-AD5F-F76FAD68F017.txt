silicons of today’s ICs usually fail or suffer an unacceptable low 
yield. Based on the collected responses of failed chips, the failure 
analysis is applied to identify the root causes of the failure, which 
are then used to correct the design, improve the process, or enhance 
the yield for the next silicon. However, the nonstop increase of 
today’s design complexity and process complexity has made the 
failure analysis more and more difficult and time-consuming. 
Therefore, the time, cost, and effectiveness of the failure analysis 
significantly affects IC’s time-to-market and total cost. 
In this project, we propose a diagnosis framework targeting multiple 
stuck-at faults. This framework consists of two main components, 
the faulty-region identification followed by the fault-candidate 
ranking. In the faulty-region identification, we utilize the X-
simulation technique and the bit-flipping technique to gradually 
shrink the suspect region covering all real faults based on both 
failing and passing patterns. Unlike the region-based methods, our 
framework requires no assumption for the radius of the suspect 
region and hence is more flexible. In the fault-candidate ranking, we 
classify and rank the fault candidates based on the information 
collected from the faulty-region identification. The experimental 
results show that the proposed diagnosis framework can efficiently 
and effectively minimize the suspect region and sieve out the real 
faults from the region even when the failing-pattern percentage and 
the number of SLAT patterns are both low for the circuits under 
diagnosis (CUDs). Those are the difficult cases to be diagnosed by 
the traditional SLAT-based and region-based methods. 
Another part of this project is to define the diagnosibility for silicon 
debug and to maximum the diagnosibility of designs by the signals 
which are selected from visibility planning. In the failure analysis, a 
process called fault diagnosis is used to find out the possible 
candidates of real defects represented by a given fault model. Based 
on the reported fault candidates, the designers could infer the 
locations of real defects and then physically examine those possibly 
defective locations through the focused-ion-beam (FIB) techniques. 
Besides, the overall area and performance of the IC remain the 
same. 
 
 
後次微米時代新興電子設計自動化技術之研究 – 子計畫三： 
角落錯誤之矽除錯(3/3) 
Emerging EDA Technologies beyond DSM Era – Sub-Project 3： 
Silicon Debug for Hard-Corner Design Errors 
計畫編號: NSC99-2220-E-009-034 
執行期間: 97 年 8 月 1 日 至 100 年 7 月 31 日 
主持人: 周景揚 交通大學電子工程系教授 
共同主持人: 趙家佐 交通大學電子工程系副教授 
 
一、 中文摘要 
由於越來越高的晶片複雜度、製程的不穩定性以及先進製成技術的不完整特
徵曲線，在今日的晶片設計中第一次製作的晶片經常都是失敗或是因為太低的良
率而無法被接受。根據從失敗的晶片中蒐集錯誤的訊息，錯誤分析被使用以找出
錯誤的原因所在，稍後可被使用以更正設計、改進製成或是增進下次量產晶片時
的良率。但是，由於今日設計以及製程複雜度不停地增加，使得錯誤分析越來越
困難並且需要更多的時間來達成。因此，時間、成本以及錯誤分析的效率很明顯
地影響晶片設計的時程以及成本。 
在這個子計畫中，我們對於多重 stuck-at 錯誤提出了一個錯誤診斷架構。這
個架構包括了兩個主要部分：錯誤區域辨識以及錯誤候選邏輯閘排序。在錯誤區
域辨識中，我們使用了錯誤以及通過的測試向量，並使用 X 模擬技術以及位元
翻轉技術藉以迅速的縮小包括了所有錯誤的區域。與其他區域基礎的方法不同，
我們的架構並不需要對於錯誤區域做出半徑假設，因此是更具有彈性的。在錯誤
候選邏輯閘排序中，我們辨認以及排序這些錯誤候選邏輯閘根據之前錯誤區域辨
認時所蒐集之資訊。實驗數據說明了我們提出的診斷架構，在即使 SLAT 測試向
量的數目以及錯誤向量所佔的百分比率都很低的情況之下，仍然可以有效率並迅
速地縮小錯誤區域並且從錯誤區域中找出真實的錯誤位置。這部分對於傳統的以
SLAT 為基礎或是區域基礎的方法仍然是非常困難的部分。 
本子計畫的另一部分是要定一設計在矽除錯時的可偵錯度，並利用可見度計
畫來選取在矽除錯中可被觀察之訊號，以最大化此設計之可偵錯度。在錯誤分析
identification followed by the fault-candidate ranking. In the faulty-region 
identification, we utilize the X-simulation technique and the bit-flipping technique to 
gradually shrink the suspect region covering all real faults based on both failing and 
passing patterns. Unlike the region-based methods, our framework requires no 
assumption for the radius of the suspect region and hence is more flexible. In the 
fault-candidate ranking, we classify and rank the fault candidates based on the 
information collected from the faulty-region identification. The experimental results 
show that the proposed diagnosis framework can efficiently and effectively minimize 
the suspect region and sieve out the real faults from the region even when the 
failing-pattern percentage and the number of SLAT patterns are both low for the 
circuits under diagnosis (CUDs). Those are the difficult cases to be diagnosed by the 
traditional SLAT-based and region-based methods. 
Another part of this project is to define the diagnosibility for silicon debug and to 
maximum the diagnosibility of designs by the signals which are selected from 
visibility planning. In the failure analysis, a process called fault diagnosis is used to 
find out the possible candidates of real defects represented by a given fault model. 
Based on the reported fault candidates, the designers could infer the locations of real 
defects and then physically examine those possibly defective locations through the 
focused-ion-beam (FIB) techniques. Those physical-examination techniques are still 
slow and expensive in current industry. Thus, a robust fault-diagnosis framework with 
high accuracy and efficiency is highly desired to speedup and cost down the entire 
process of the failure analysis. However, due to the advanced fabrication technology, 
only a few signals can be observed by the FIB technique in the fault-diagnosis process. 
Hence we propose a design-for-debug framework to adjust layout after placement and 
routing so that more signals can be observed or even repaired by the FIB technique. In 
90nm process, experimental results show that our proposed method can effectively 
the observation rate and repair rate by the FIB technique. Besides, the overall area and 
test responses obtained before the FIB repair, the repaired fault candidate is a real 
fault. Then we rerun the faulty-region identification and fault-candidate ranking based 
on the new obtained responses. Otherwise, the repaired fault candidate is not a real 
fault. Then we use the FIB technique to physically repair the next ranked fault 
candidate until a real fault is detected. 
 
Key concepts： 
In this subsection, we describe three key concepts used in our diagnosis 
framework: X-region, not-stuck-at-0 (or not-stuck-at-1) signals, and value-flipping 
technique. 
1) X-region:  
An X-region is a set of connected gates, whose logic values are set 
to unknown. When simulating failing patterns along with the unknown 
values in the X-region, we can determine whether the X-region covers all 
the real faults by comparing the simulated value on each failing output 
with the collected erroneous response. If the simulated value on any 
failing output is opposite to the value of its erroneous response, it means 
that the value on the failing output cannot be corrected no matter how the 
unknown values in the X-region are assigned. In such a case, this failing 
output must result from a fault outside the X-region and hence such an 
X-region does not cover all the real faults. 
2) Not-stuck-at-0 & not-stuck-at-1 (NSA0 & NSA1):  
Unlike other dictionary-based or region-based diagnosis methods, 
which attempt to identify a modeled fault or region matching the actual 
faulty syndrome, our diagnosis framework attempts to identify the 
signals which cannot be a fault, i.e., to identify the not-stuck-at-0 or 
not-stuck-at-1 signals. If a candidate signal can be proved that its value 
 Figure 2 shows the X-region shrinking’s algorithm, and the algorithm attempts to 
identify the NSAv signals based on both passing and failing patterns. For each pattern, 
we first run good-circuit simulation to obtain the simulated good-circuit value for 
each signal (Line2). Second, we replace the value of signals within the X-region with 
the unknown value (Line3-6). Then, the sub-procedure IGV utilizes the value-flipping 
technique to check whether each signal on X-region’s boundary is NSAv0 if the 
simulated good-circuit value of the signal is v (Line9). During IGV, some boundary 
signals are identified to have the good value. Next, the sub-procedure IUI performs 
the backward and forward implication based on the new identified good values to 
further derive more good values on the boundary (Line11). We repeatedly perform 
IGV and IUI until no more good value can be found for the given pattern. The 
procedure IGV and procedure IUI are explain in the following. 
 
 
 
 
 
 
 
 
 
The detail steps of the sub-procedure IGV are listed in Figure 3. For each signal 
on X-region’s boundary with the unknown value, we first assign the signal’s value 
opposite to its simulated good-circuit value v (Line2), and then obtain the 
value-flipping value for each output through the 3-value simulation (Line3). Next, if 
there exists a simulated value-flipping value on any output different from its response 
 
Fig. 3. Identify good values using gate values 
 
can propagate to the signal. If the simulated good-circuit value of any its fanin is the 
controlling value, then the target signal has the good value if any of its controlling 
fanin has the good value (Line4-8). Otherwise, the target signal has the good value if 
all of its non-controlling fanins have the good value (Line10-16). 
 
 
Fault candidate ranking： 
 
 
 
 
 
 
Figure 5 summarizes our fault candidate ranking method. A fault c with at least 
one full-matched pattern is more likely to be a real fault than a fault without any 
full-matched pattern even if the fault c has less Match Sum(c). Therefore, our ranking 
method generally ranks the faults with a full-matched pattern higher than the faults 
without a full-matched pattern. We further divide the full-matching faults into three 
types, (1) the faults on the X-region’s boundary and the fault site is identified as a 
NSA0 or NSA1 signal during the X-region shrinking, (2) the faults inside the 
X-region, and (3) the faults on the X-region’s boundary and the fault site cannot be 
identified as a NSA0 or NSA1 signal during the X-region shrinking. A 1st-type fault 
ranks higher than the other two types because (i) a NSAv signal shows the possibility 
of generating a mismatch output from the fault site, and (ii) the existence of the 
1st-type fault may be the reason why this fault site cannot be proved NSAv0. A 
3rd-type fault ranks lower than the other two types because if the 3rd-type fault is the 
real fault 
 
Fig. 5. Illustration of the ranking ordering. 
 
  
As the result shows, the average shrinking percentage and minimal 
fault-to-boundary distance achieved by the X-region shrinking are 47.81% and 0.89, 
respectively. This result first demonstrates that the X-region shrinking can effectively 
eliminate the false candidate signals and minimize the suspect region such that the 
resulting X-region’s boundary is very close to real faults. Once the X-region’s 
boundary is reaching the real faults, it is difficult to further move the X-region’s 
boundary inward and the fan-in cones connecting to the real faults still remain in the 
X-region. Also, this result shows the efficiency of the X-region shrinking. The longest 
runtime among all benchmark circuits is 79.58 seconds (including the runtime of 
fault-candidate ranking).  
 
 
 
 
 
 
 
 
 
Table II shows the results of the fault-candidate ranking. Column 2, 3, and 4 list the 
number of repair trails required until the first, second, and third successful repair 
occurs, respectively. After a real fault is detected, we run the X-region shrinking again 
based on the new CUD, which removes the detected fault already. The runtime 
reported in the Column 5 is the sum of the runtime of each individual X-region 
shrinking and fault-candidate ranking. As the result shows, it requires in average 5.11, 
 
Table II. The number of repair trails required until the 
first, second, and third successful repair occurs for 
3-stuck-at-fault CUDs. 
backward implications to find where the conflict values located from the limited 
signals we obtained. Thus, the diagnosibility in the silicon debug is defined by the 
number of the gates in the intersection between forward and backward implications. 
The more signals in the intersection, we have more chance to find the conflict values. 
For example, in figure 4, the signals obtained from forward implication are in pink 
region and the signals obtained from the backward implication are in blue region. 
Although there are more signals from forward and backward implications in figure 4 
(a), there is no intersection of these two implications and we cannot obtain any 
conflict value. On the other hand, if there is any error, we could get the conflict values 
from the intersection of forward and backward implications of figure 6(b) and the 
diagnosibility of figure 6(b) is higher than figure 6(a). 
 
 
 
 
 
 
    Figure 7 shows the flow about computing the design diagnosibilty for silicon 
debug. First, given the netlsit without errors, we calculate the signal probability, P0 
(P1), of the signal to be 0 (1). Then, with the signal correlations between flip-flops, we 
can calculate the expected values of regions for forward and backward implications. 
Further, the expected values of the possible conflict region can be obtained from the 
intersection of the two regions for the design diagnosibility. 
    To calculate the possible implication region more accurate, the correlation of 
signals has to be concerned. The correlation between signals may suffer from the 
reconvergent fanouts or the same fanin cones of signals. Actually, the correlation 
exists in many signals in the same time and it is impossible to record all the 
Calculate Signal 
Probability
Calculate 
Expectation Value 
of  Possible 
Conflict Region
Netlist
Observable signals
 and 
Unobservable signals
Design 
Diagnosibility
Signal probability
and
Signal correlation 
between flip-flops
Fig. 7. The flow for calculating the design diagnosibility 
signal lines of a and b, the correlations of a, b, c, and d will be updated to the 
correlations of e, c, and d, as shown in the blue line of figure 8(b). Similarly, when the 
P0 and P1 for signal f have been calculated from signal lines e and c, the correlation of 
these signals will be updated to the correlation of f and d, as shown in the blue line in 
figure 8(c). Using the approximation of correlation for signal pairs, the signal 
probabilities of all signals are available for design diagnosibility. 
Experiments： 
    We test our method on some ISCAS89 circuits and one result of s15850 is shown 
as following: 
 
 
 
 
 
    For first experiment as shown in table III, we set the probabilities, P0 and P1, of 
each input to be both 0.5 and we calculate the probability from the inputs to the 
outputs and treat the circuit as a combinational circuit. After the calculation, we got 
the probability of P0 for this test circuit. Once we have the probability of P0, the 
probability of P1 can be calculated easily. We show probability difference between the 
calculation of our method and the results from simulation. In the first column, the 
Dffs mean the difference between filp-flops and the Outs means the difference 
between primary outputs. In the second column, the Max means the maximum 
difference among all Dffs or Outs. The third column, Min, means the minimum 
difference, and the last column, average, mean the average difference of all Dffs or 
Outs. From the experimental results, the Min differences are only from 1.1% to 1.2% 
and the average differences are from 2.1% to 3.6%, these results mean we can 
estimate the probability of P0 of each gate accurately. 
S15850 Max Min Average 
Dffs 5.4% 1.1% 3.6% 
Outs 3.9% 1.2% 2.1% 
Table III. The experiment results for S15850, we calculate the probabilities of all 
filp-flops and primary outputs from inputs to outputs one time and treat it as a 
combinational circuit. 
probing. We adjust the circuit layout to maximize the probability that a signal can be 
observed by FIB probing. The layout adjustment is done through a few pre-defined 
actions, which moves a small portion of the existing metal lines to different metal 
layers with new vias, instead of performing a complete rerouting. Therefore, the 
proposed DFD framework can be applied in conjunction with any APR tool and its 
impact on the timing of critical paths is limited. Also, the proposed DFD framework 
can restrict the layout adjustment on only the non-timing-critical paths if modifying 
certain critical paths may violate their timing constraint. 
For FIB probing, the location to be probed corresponds to a net in the design 
netlist, which can be reported from a diagnosis tool and its observed value is used to 
confirm the assumption of an error candidate. A net in the design netlist corresponds 
to several metal lines across different metal layers and connected with vias. In our 
framework, a net is FIB observable if any of its metal line can satisfy all of the 
following conditions: (1) an FIB hole can be dug with a given edge slope and reach 
the surface of the line, (2) no other metal lines originally locate in the dug hole, (3) 
the target line lays in the middle of the hole’s baseline window, and (4) the overlap 
between the target line and the hole’s baseline window exceeds the given minimal 
sufficient width. 
In the proposed framework, we adjust the layout based on only two basic 
operations, named move-up and move-down. Each operation is performed on a metal 
line of a net. As its name, a move-up operation will move a portion of the target metal 
line to a higher layer with extra vias. The function of this move-up operation is to 
create a long-enough metal line at a higher layer to successfully land an FIB hole on it 
when the original target line at a lower layer is blocked by other metal lines on top. As 
a result, the moved-up portion of a line must be longer than the minimal sufficient 
width of a baseline window. 
originally unobservable due to line a and c blocking the space above b as shown in 
Figure 9(a). After applying a move-down operation to a, line b becomes observable as 
shown in Figure 9(b). 
The move-up and move-down operations need not necessarily be applied 
individually. They can be applied together to make an unobservable line observable as 
illustrated in Figure 10, where line c is originally unobservable in Figure 10(a). After 
applying move-down operation to b and move-up operation to c, line c becomes 
observable in Figure 10(b). 
Note that the move-up and move-down operations move the metal line only 
vertically, and hence the total metal length of the layout is almost the same, except 
that an extra length of a via needs to be added to connect the new via if only a portion 
of the line is moved. Also, all made move-up or move-down operations must be 
feasible, i.e., following the design rules, such as the spacing between the moved metal 
line and its new neighbors. In addition, some process technologies do not allow 
stacked vias, meaning that a via can pass through only a certain number of metal 
layers (3 in the UMC 90nm technology used in our experiments), which is another 
constraint of using a move-up or move-down operation. 
The objective of this framework is to maximize the FIB observable rate without 
 
Fig. 10. Using both moving-up and moving-down operations. 
timing-violated nets and the critical paths (if setup-time violated). In practice, timing 
violations rarely occur after our layout adjustment. 
 
Experiments: 
Table V reports the FIB observable rate based on a 1000nm minimum sufficient 
width of the baseline window and a 1-to-10 edge slope of an FIB hole. The 
cell-utilization rate is set to 80% to generate the initial layout with SoC Encounter. 
Also, dynamic ranking is used in MFOB to determine the order of nets for layout 
adjustment. In Table V, Column 1 and 2 list the circuit name and its total number of 
nets, respectively. Column 3 and 4 list the FIB observable rate before and after 
applying our proposed framework MFOB, respectively. Their difference is listed on 
Column 5. As the result shows, our proposed framework MFOB can successfully 
increase the FIB observable rate from 29.50% to 61.67% in average by properly 
adjusting the initial layout. The improvement in FIB observable rate ranges from 
28.85% to 36.34% for different circuits. Column 6 of Table V lists the upper bound of 
the observable rate by using MFOB, which is actually the percentage of potentially 
observable nets estimated based on the initial layout. This upper bound can only be 
achieved when the layout adjustment for all the potentially observable nets will not 
 
Table V. Results of applying MFOB 
Even though a move-up or move-down operation may add extra vias to a net, 
which increases its resistance, the circuit’s timing after applying our proposed 
framework usually becomes faster than its initial layout. Figure VII lists the longest 
path delay before and after applying MFOB, which is reported by a commercial 
timing analysis tool with the result of layout RC extraction. As the result shows, the 
timing after applying MFOB can indeed become faster than the timing of its initial 
layout for every benchmark circuit. Also, every modified layout passes the connection 
checking and equivalence checking. 
 
四、 結論與討論 
We proposed a diagnosis framework targeting multiple stuck-at faults. This 
framework utilizes the faulty-region identification to obtain a minimal suspect region 
covering all real faults, and the proposed ranking method ranks the fault candidates 
within the suspect region using the information obtained during the faulty-region 
identification. The experimental results demonstrate that the proposed diagnosis 
framework can effectively minimize the suspect region and its runtime is scalable to 
the circuit and the number of existing faults. In addition, the proposed framework 
requires no assumption on the number of existing faults as well as the size of the 
possible faulty region, which greatly increases the flexibility of its application. 
 
Table VII. The longest-path delay before and after applying MFOB 
on Computer-Aided Design of Integrated Circuits and Systems, vol. 18, no. 3, pp. 
346–356, 1999. 
[6] B. Arslan and A. Orailoglu, “Fault Dictionary Size Reduction Through Test 
Response Superposition,” International Conference on Computer Design, pp. 
480–485, 2002. 
[7] W. Zou, W.-T. Cheng, S. Reddy, and H. Tang, “Speeding Up Effect-Cause Defect 
Diagnosis Using a Small Dictionary,” VLSI Test Symposium, pp. 225–230, 2007. 
[8] Z. Wang, K.-H. Tsai, M. Marek-Sadowska, and J. Rajski, “An Efﬁcient and 
Effective Methodology on The Multiple Fault Diagnosis,” International Test 
Conference, vol. 1, pp. 329–338, 2003. 
[9] V. Boppana, R. Mukherjee, J. Jain, M. Fujita, and P. Bollineni, “Multiple Error 
Diagnosis Based on XLISTs,” Design Automation Conference, pp. 660–665, 1999. 
[10] A. L. D’Souza and M. S. Hsiao, “Error Diagnosis of Sequential Circuits Using 
Region-Based Model,” Journal of Electronic Testing, vol. 21, no. 2, pp. 115–126, 
2005. 
[11] Yu-Chin Hsu; Furshing Tsai; Wells Jong; Ying-Tsai Chang, "Visibility 
enhancement for silicon debug," Design Automation Conference, pp. 13-18, July 
2006. 
[12] Desineni, R.; Blanton, R.D., "Diagnosis of arbitrary defects using neighborhood 
function extraction," VLSI Test Symposium, pp. 366-373, May 2005. 
[13] Savir, J; Ditlow, G S; Bardell, P H, “Random Pattern Testability,” IEEE TRANS. 
COMP. Vol. C-33, no. 1, pp. 79-90. 1984. 
[14] Goldstein, L.H.; Thigpen, E.L., "SCOAP: Sandia Controllability/Observability 
Analysis Program," Design Automation Conference, pp. 190-196, June 1980. 
[15] Reddy, P.V.C.V., "Testability measure and analysis," ASIC Conference and 
Exhibit, 1992., Proceedings of Fifth Annual IEEE International, pp.129-138, Sep 
1992. 
[16] M. Abramovici, P. Bradley, K. Dwarakanath, P. Levin, G. Memmi, and D. 
Miller, ”A Reconfigurable Design-for-Debug Infrastructure for SoCs”, Design 
Automation Conference, pp. 7-12, 2006. 
[17] R. Goering, ”Post-Silicon Debugging Worth a Second Look”, EETimes, Feb. 05, 
2007. 
[18] M. L. Bushnell and V. D. Agrawal, Essentials of Electronic Testing, Kluwer, 
 六、 計畫成果自評 
These years, we have developed: 
1) A new diagnosis algorithm based on faulty-region identification for silicon debug 
2) A new ranking method for our diagnosis algorithm 
3) A new flow to calculate the signal probability with signal correlations 
4) An estimation method for approximated calculation about signal probability 
5) A new layout-adjustment method to maximize the observation rate for FIB probing 
6) A new ranking method for movable nets in our layout-adjustment method 
Our works have been published on international journals and conferences, and the 
paper is listed as follows: 
Megn-Jia Tsai, Mango C.-T. Chao, Jing-Yang Jou, Meng-Chen Wu “Multiple-Fault 
Diagnosis Using Faulty-Region Identification,” VLSI Test Symposium, pp. 123–128, 
2009. 
Kuo-An Chen, Tsung-Wei Chang, Meng-Chen Wu, Mango Chia-Tso Chao, Jing-Yang 
Jou, and Sonair Chen, “Design-for-Debug Layout Adjustment for FIB Probing and 
Circuit Editing”, accepted, International Test Conference, Sep. 2011. 
Meng-Chen Wu, Hung-Ming Chen, and Jing-Yang Jou, “Mixed Non-Rectangular 
Block Packing for Non-Manhattan Layout Architectures,” International Symposium 
on Quality Electronic Design (ISQED), pp. 257-262, Mar. 2011. 
Meng-Chen Wu, Ming-Ching Lu, Hung-Ming Chen, and Jing-Yang Jou, 
“Performance-constrained Voltage Assignment in Multiple Supply Voltage SoC 
Floorplanning,” ACM Transactions on Design Automation of Electronic Systems 
(TODAES), vol. 15, no. 1, Dec. 2009. 
 
 
 
 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/28
國科會補助計畫
計畫名稱: 子計畫三：角落錯誤之矽除錯(3/3)
計畫主持人: 周景揚
計畫編號: 99-2220-E-009-010- 學門領域: 晶片科技計畫--整合型學術研究
計畫
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
