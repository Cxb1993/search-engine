 I
中文摘要 
在現今半導體製程技術已經可以將許多的電晶體置入同一個晶片內，而將這些系統整
合於同一顆晶片的單晶片系統(system on chip, SoC)將會面臨許多的挑戰，如矽智產
IP(intellectual property)的設計與使用、系統開發的環境、系統晶片元件之間溝通與協調等問
題。本整合型計畫，主要是研究與發展適用於分散式多核心處理器嵌入式系統相關的軟體
及硬體模擬平台。其中，本子計畫主要負責多核心處理器連結網路(multi-core networking)
的設計與實驗，並且已協助總計畫完成整個平台的硬體規劃與實作。 
因為現今製程微縮與晶片內元件數目快速增加，使得傳統以匯流排來做為晶片內部通
訊的方式受到極大的挑戰，除了元件所產生的寄生電阻、寄生電容影響匯流排的效能，匯
流排同一時間所能進行存取的master也有限制，這些原因都使得在晶片內元件快速增加的情
形下匯流排將會成為晶片內部效能的瓶頸之一，為了解決晶片內部可能面臨的通訊問題，
愈來愈多的專家研究使用以網路為中心的通訊方式來連結SoC中的各個IP，這種方式即為晶
片網路(Network on Chip, NoC)。本子計畫也採用這種方式來解決多核心處理器之間的通訊
問題，讓系統中的多個處理器能平行地運作。 
計畫已經實現一個可以連結多核心處理器的網路硬體電路，並且將其於總計畫的平臺
上做驗證。目前已經完成計畫第三年(98/8~99/7)。 
 
 
 
 
 
 
 
 
 
關鍵字 
系統單晶片(system on chip)、多核心處理器連結網路(multi-core networking) 
 
 
 
 
 
 
 
 
 
 
 
 
 III
目     錄 
中文摘要 ............................................................................................................................................. I 
英文摘要 ............................................................................................................................................ II 
前言 ................................................................................................................................................... 1 
研究目的 ............................................................................................................................................ 1 
研究方法 ............................................................................................................................................ 1 
(A) 網路拓樸(NETWORK TOPOLOGY) .................................................................................................... 1 
(1)Ring 拓樸：................................................................................................................................ 2 
(2)Mesh 拓樸： .............................................................................................................................. 2 
(3)Tree 拓樸： ................................................................................................................................ 2 
(B) 交換技術(SWITCHING TECHNIQUE) ................................................................................................... 3 
(1)Circuit Switching： .................................................................................................................. 4 
(2)Packet Switching： ................................................................................................................. 4 
(3)Virtual Cut-through： .............................................................................................................. 4 
(4)Wormhole Switching： ............................................................................................................ 4 
(C) 路徑安排(ROUTING) ...................................................................................................................... 5 
(D) 交換器(SWITCH) ............................................................................................................................ 6 
(E) 網路介面設計(NETWORK INTERFACE) ............................................................................................... 7 
結果與討論 ........................................................................................................................................ 7 
參考文獻 .......................................................................................................................................... 11 
成果自評 .......................................................................................................................................... 11 
 
 2
(1)Ring拓樸： 
如圖 3.A2 所示即為六個 core 的拓樸方式，這種拓樸方式的每一個交換器都會與其二邊的
交換器互相連接，在資料傳送時，會固定以順時針或是逆時針的方向來做傳遞。 
 
圖 3.A2：ring 拓樸 
 
(2)Mesh拓樸： 
如圖 3.A3 所示為一個 3×3 的 mesh 拓樸方式，每一個交換器皆會與其周圍的交換器互
相連接，這種拓樸方式具有排列方式規律與資料繞送演算法設計較為簡單的優點，不過這
種拓樸方式為每一個元件都需要搭配一個交換器，因此交換器數目與元件數目成正比。 
 
 
圖 3.A3：mesh 拓樸 
(3)Tree拓樸： 
如圖 3.A4 所示為一個 tree 拓樸，是一種階層式的拓樸連接方式，交換器之間會以階層
的方式互相連接，只有特定的交換器會與元件做連接，例如在這個範例裡最底層的交換器
會與需要網路功能的元件做連接。 
 
 4
(1)Circuit Switching： 
這種交換技術是在連線時於二端建立一條專屬的通道，通道上的頻寬都會保留給這二
個端點做資料傳輸，因此可以保證資料傳輸的品質，不過這樣的方式卻會造成其它需要經
過此路徑傳輸資料的端點延遲增加，並且若資料傳輸時佔有此線路的使用者閒置則會造成
頻寬的浪費。 
 
(2)Packet Switching： 
Packet Switching是把要傳輸的資料切割為一個個的封包，每個交換器內都需要有足夠的
緩衝空間以儲存完整的封包，當資料進行傳輸時，交換器會接收完整的封包之後再將封包
往下一級傳送。 
 
(3)Virtual Cut‐through： 
Virtual Cut-through與Packet Switching類似，不過當資料進行傳輸時，交換器在接收到封包
時會詢問下一級交換器是否有足夠空間可以儲存封包，如果有則會將封包直接往下一級傳送，
如果沒有則會等有足夠緩衝空間再往下一級傳送，因此會比Packet Switching有效率。 
(4)Wormhole Switching： 
Wormhole Switching如圖3.B1將原本的封包大小再進一步切割為Flit，交換器內部的緩
衝空間只需要能儲存Flit大小的資料，因此所需的緩衝器成本會較Packet Switching與Virtual 
Cut-through少，而起始的Flit則為Header Flit，只有在Header Flit會儲存有資料的傳送資訊，
因此其餘的Flit都會跟隨著Header Flit的傳送路徑做繞送。 
在這個計畫裡我們為了減少網路交換器內緩衝器的成本，因此選擇Wormhole Switching
的方式。 
 
圖3.B1：Wormhole Switching 
 
Wormhole Switching雖然保留了Circuit Switching與Packet Switching的優點並且改善了它
們的缺點，但是由於Flit是沿著Header Flit的路徑做傳送，因此也產生了另外的問題，如圖3.B2
所示在資料的傳送路徑上若有被阻擋(block)的情形時，則會造成這條資料傳送路徑被佔用，為
了解決這個問題，交換器內需要加入Virtual Channel[6][7]，如圖3.B3所示Virtual Channel將原本
一個緩衝器對應一個實體通道改為多個緩衝器對應一個實體通道，藉由加入Virtual Channel的概
念，即可解決圖3.B2資料被阻擋而使得網路頻寬浪費的情形，如圖3.B4此時藉由將通道使用權
切換給另一個緩衝器，即可有效的使用網路的頻寬。 
 
 6
徑，因此為了減少所需的硬體成本與功率消耗，在計畫的NoC系統我們將會採用決定性的
路徑方法。 
 
(D)  交換器(Switch) 
本整合型計畫的多核心處理器嵌入平台的硬體架構如下圖3.D1所示，而本子計劃會負
責2個主要硬體元件的設計：(1)交換器(Switch)，(2)網路介面(Network Interface, NI)。 
 
圖3.D1：總計劃硬體架構 
 
我們的交換器將會搭配所選擇的網路拓樸、交換技術與路徑決定演算法來做最佳化
[8]，並且為了在計畫所使用的FPGA平臺做實際的驗證，因此我們的交換器在設計時也具
有可重複利用與彈性等特點以方便在虛擬平臺與實際平臺之間做驗證。 
如圖3.D2為我們的交換器電路架構，總共可以分為3個功能模組， 
(1) 路由器(Router)：資料經由輸入端進入此模組之後，會藉由路徑決定演算法決定輸
出端，當決定輸出端之後，就會將資料送往對應的虛擬通道控制器。 
(2) 虛擬通道控制器(Virtual Channel Controller)：這個電路模組當有資料輸入時會控制
資料是否取得緩衝器的使用權限，若資料取得緩衝器的使用權限就會將資料往輸出
控制器傳送，否則資料會暫時被阻擋。 
(3) 輸出控制器(Output Controller)：在有多個虛擬通道緩衝器需要輸出資料時，這個功
能模組會控制實體通道的使用權限，將取得權限的緩衝器資料輸出到下一級交換器
或是目的端網路介面。 
...
...
...
...
... ... ...
 
圖3.D2：交換器電路 
 8
電路的整合與除錯，這個階段我們使用ModelSim來做為硬體電路整合的模擬環境，在這個
模擬環境裡我們整合CPU與NoC的RTL版本硬體電路，雖然其模擬的速度相較於虛擬平臺
極為緩慢，不過卻可以真實的產生不同子計劃硬體整合的電路互動以輔助整合時的電路除
錯，如圖4.2即為子計畫一與子計劃二以RTL電路在ModelSim的模擬情形。 
在虛擬平臺與ModelSim上經過一系列程式的測試與驗證之後，我們也規劃在FPGA驗
證我們的電路，如圖4.3所示即為計畫規劃用來驗證電路的FPGA平臺，在此FPGA平臺上共
可分為S系列與C系列二種FPGA晶片，如圖4.4所示在S系列的FPGA會放置一個節點，包含
子計畫一所開發的CPU為系統的處理器、區域匯流排與我們所開發的網路介面，而C系列則
是用來放置交換器電路，在每一個節點裡處理器可以透過匯流排來控制網路介面以傳輸與
接收資料，而網路介面與交換器則直接透過實體線路做連接與進行資料傳輸，由於我們的
交換器可以連接多個節點，因此只有在部份的C系列有放置交換器，而其它則只做為普通
的繞線。 
因為FPGA晶片之間的連線數有限，因此需要設計一個wrapper以提供資料線寬的轉
換，在FPGA之間以較少的資料寬度經由多次傳輸將資料做交換，並在接收完一次資料傳輸
之後再經由wrapper將資料做還原，以符合實際FPGA平臺的限制，不過這個限制在實際的
晶片裡並不會遇到，因此不會影響我們系統的整體架構，如圖4.5與圖4.6即為多核心處理器
透過網路連結於FPGA進行驗證，S系列的FPGA皆為一個node，而C系列的FPGA則放置交
換器電路，node之間的資料可以透過交換器來互相傳送。 
在規劃好電路如何在FPGA擺放以進行驗證之後，我們也撰寫測試程式在FPGA平臺實
際驗證我們的電路功能，而且我們在此一平臺上也可以進行多個節點之間的資料傳輸。 
  
 
圖 4.1：RTL 8-cores simulation (Platform Architecture) 
 10
圖 4.4：節點元件 
C1
S0
CPU
NI
SDRAM
S1
CPU
NI
SDRAM
C0
Switch FF
C0
S0
CPU
NI
SDRAM
FF
I/O I/O I/O
Board 0 Board 1
 Wrapper
 Wrapper  Wrapper  Wrapper
 
圖 4.5：FPGA 3-nodes 網路連結示意圖 
 
圖 4.6：FPGA 3-nodes 實測 
 
 
 
 
 12
Circuits & Syst., Part I, May, 2009 
3. Pei-Yin Chen, Chih-Yuan Lien, and Chi-Pin Lu, “VLSI Implementation of an 
Edge-Oriented Image Scaling Processor,” IEEE Trans. Very Large Scale Integration 
Systems, vol. 17, no. 9, pp. 1275-1284, Sept. 2009. 
4. Pei-Yin Chen and Chih-Yuan Lien, “An Efficient Edge-Preserving Algorithm for Removal 
of Salt-and-Pepper Noise,” IEEE Signal Processing Letters, vol. 15, pp. 833-836, Dec. 2008. 
5. Pei-Yin Chen, Yi-Ming Lin, and Min-Yi Cho, “An Efficient Design of Variable Length 
Decoder for MPEG-1/2/4,” IEEE Trans. Multimedia, vol. 10, no. 7, pp. 1307-1315, Nov. 
2008.
 2
英文： 
    With the evolution of process technology, more and more 
transistors can be put into a single chip. Multi-core is the primary 
direction for the advance of the technology. However, the baud rate of 
the bus system is not fast enough for the communication and 
connection between multi-cores. With the rapid baud rate for the 
network system, the project uses it to take the place of the bus system. 
Generally speaking, topology is the important factor of influencing 
the transmission speed of the internet network, if the transmission 
means of network topology are too complicated or apt to cause the 
data to be transmitted too long. Those will influence the speed of 
treatment of the processor and lose the advantage of the network 
transmission. So, for accurate transmission, we have made use of 
topology of tree to carry out. The design of tree topology is simple 
and it’s delay time is shorter than others topology. However, we use 
the Wormhole Switching on the Switching Technique. The technique 
will cut a package data into flits of several smaller units, and has put 
into the route of conveying in the first flit, and pass it to the 
destination, but the way of making pipeline of route that other flit 
leaves according to the first flit is conveyed. This will reduce the 
shortcoming of Packet Switching for using large number of buffer, 
and improve the Circuit Switching for occupying the bandwidth and 
cause delay of transmission data. In those present researches, 
network topology and switching technique are designed and optimized 
separately. Here, we hope to consider them together. The project is 
mainly targeted on the design of network, which could achieve 
high-speed transfer rate and accuracy in this network.  
可利用之產業 
及 
可開發之產品 
應用於晶片中的多核心溝通網路 
技術特點 擁有高速的傳輸能力 
推廣及運用的價值 可加快資料傳輸的速度，提高處理器的使用效率 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴
單位研發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
 
等皆為電路與系統設計領域裡面相當重要或是嶄新的議題。會中除了有
相關的論文發表外，更邀請了幾位優異的專家學者進行精闢的專題演
講。由於參加會議的人數相當多，實為非常難得的會議。 
 
二、與會心得 
此次會議議題相當廣泛，大家參與會議時的討論亦非常熱烈，讓個
人有相當多的收穫。其中有一些關於晶片設計的技術與應用之議題，是
個人最感興趣的。此外，會中亦有許多關於低功耗電路設計的技術與成
果被發表討論，更令人獲益匪淺。 
此次個人有一篇oral paper與一篇poster paper發表，經由這次會議的
實際參與，不但得以認識一些相關領域之學者專家，互相交換研究心
得，更吸收到許多關於晶片與系統設計的相關最新技術與資訊，對日後
的學術研究，大有助益。個人非常感謝國科會的補助，才能夠出席此次
ISCAS 2010國際會議。 
 
三、建議 
無 
 
四、攜回資料名稱及內容 
研討會論文集、摘要論文集。 
96年度專題研究計畫研究成果彙整表 
計畫主持人：陳培殷 計畫編號：96-2221-E-006-027-MY3 
計畫名稱：分散式多核心嵌入式原型系統--子計畫二：多核心處理器連結網路之設計與實現 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
