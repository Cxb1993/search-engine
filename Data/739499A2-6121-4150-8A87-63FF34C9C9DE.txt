二、研究目的 
有鑒於網際服務有許多不同的測試問題和考量，例如網際服務本身的功能是否正
確、網際服務間SOAP訊息及參數資料的傳遞是否正確、應用程式與網際服務間是否能
正確地繫結、商業流程的定義是否正確、網際服務的組合互動是否與商業流程定義一
致，以及網際服務組合的效能是否合乎需求等。本研究主要著重於測試網路服務組合的
功能是否合乎預期，驗證BPEL 敘述與網際服務間互動的行為是否一致，同時支援單一
網路服務的測試和網路服務效能的監督。 
本研究的主要目的如下： 
z 探討網路服務組合的相關測試議題與技術。 
z 建置網路服務組合測試的工具。 
z 對網際服務的 WSDL 敘述建立測試模型，找出推導測試案例的方法。 
z 建立 BPEL 流程的控制流程圖以驗證 BPEL 的流程與邏輯結構是否正確。 
三、文獻探討 
近幾年有許多文獻探討網際服務與 BPEL 流程測試的相關議題，以下對與本文相關
的文獻做一簡要的回顧： 
Yu[8]等人提出一個能夠彈性定義流程的開發與測試環境，使得組合網際服務能夠
以十分方便的方式進行。並且提出 Virtual Partner 與 Inspector 兩個機制來協助開發人員
檢驗流程的正確與否。Yu 指出，由於 BPEL 執行環境並沒有定義標準的界面供外部取
得相關的資訊，如網際服務用以交換資料的變數內容等，因此在一個流程的執行過程當
中必須要透過一個稱為 Inspector 的網際服務來探測執行過程中發生的變化，藉由將 
Inspector 插入到流程的各個部份，以取得流程運作中的動態資訊，使得測試工作得以
進行。 
Offutt和Xu[9]提出利用資料擾亂(Data Perturbation)的方式產生不同的SOAP參數資
料，並分析其回應的訊息以驗證單一(peer-to-peer)網際服務的正確性。Offutt 和 Xu 共提
出三種資料擾亂的方法： Data Value Perturbation(DVP) 、 RPC Communication 
Perturbation(RCP)和 Data Communication Perturbation(DCP)。其中 DVP 主要是根據 
WSDL 所定義的參數資料格式，如字串或數值，透過 Boundary Value Analysis 的方法來
產生不同的參數資料。RCP 則是透過某些 mutation operators 對參數進行運算以產生不
同的參數資料。而 DCP 則是針對使用 XML Messages 傳送資料的網際服務進行測試。
Offutt 和 Xu 透過一些規則修改 SOAP 訊息中 XML Messages 的內容，並藉由這些 XML 
Messages 來測試網際服務其資料庫的存取是否正確。 
Tsai[10]等人提出 WSTF(Web Services Testing Framework)的測試框架。以 agent 技術
為基礎，可運用於 SOA 架構系統。由於 WSDL 僅描述了呼叫界面的規格，對於測試來
說，不管是測試案例的推導或呼叫流程的檢驗，WSDL 所提供的資訊都有所不足，Tsai 
提出包括 I/O Dependency 與 Invocation Sequences 等四項 WSDL 的延伸規格，並且使用
(2) BPEL 結構測試： 
分析 BPEL 流程定義，建立 BPEL 流程的測試模型[7]，協助測試人員了解 BPEL
流程的結構以及可能的執行路徑。此外，亦可計算出流程中可能的獨立路徑與執行
該路徑的限制。透過這些資訊，測試人員可以根據每條路徑中所包含的呼叫(invoke)
活動、接收(receive)活動及分支條件，有系統地找出適當的觸發事件和輸入參數，
設計測試案例，以觸發該執行路徑，並觀察與該路徑有關之網際服務的執行結果，
以驗證 BPEL 流程的路徑、分支等結構的正確性。 
 
針對上述兩種不同的測試策略，本研究計劃提出一個基於 BPEL 規範的網際服務組
合測試工具 WSCT。此工具可讓使用者針對個別的網際服務進行測試，並提供測試案例
編輯及測試資料管理的功能，以協助彙整、分析測試結果，以提升測試的效率。同時，
此工具亦可分析 BPEL 流程的定義，建立 BPEL 流程的控制流程圖(BPEL Control Flow 
Graph；BCFG)[7]，協助使用者瞭解流程定義，並計算該流程定義可能的獨立路徑
(independent path)與執行該路徑的一些限制(path condition)，以設計測試案例來驗證
BPEL 的流程與邏輯結構是否正確。 
WSCT 的系統設計架構，依據專案的需求與功能，分為五個子系統，圖一為 WSCT 
之系統架構圖，分別為測試模型子系統(Test Model Subsystem)、測試案例管理子系統
(Test Case Management Subsystem) 、測試執行子系統(Test Execution Subsystem) 、測試
分析與報表子系統(Test Analyzer and Report Subsystem)及資料管理與操作子系統(Data 
Storage and Manipulation Subsystem)等，各子系統描述如下： 
z 測試模型子系統 
此子系統主要負責分析 WSDL 敘述與 BPEL 流程定義，建立 BPEL 的測試模
型，並計算 BPEL 流程的獨立路徑與路徑條件等資訊。協助測試人員分析和設計測
試案例。 
z 測試案例管理子系統 
此子系統主要負責測試案例的編輯與測試套件的管理。測試案例將以 XML 的
格式儲存與管理。 
z 測試執行子系統 
此子系統主要負責驅動網際服務及 BPEL 流程，以執行測試。此子系統將驅動 
BPM 引擎建立流程實體，並負責產生測試案例對應的 SOAP 封包，將其傳送給 BPM
引擎或網際服務，並紀錄執行結果供分析與產生測試報告之用。 
z 測試分析與報表子系統 
此子系統負責取得測試案例執行結果，並加以分析，產生測試報告供使用者瀏
覽檢視。測試報告的資訊包含：哪些測試案例通過、哪些測試案例失敗、失敗是由
哪一個活動或服務所引起、詳細的錯誤訊息與 SOAP 封包、測試案例的通過率與覆
蓋率等。除此之外，此子系統也提供分析結果與測試報告的匯入、匯出功能。 
z 資料管理與操作子系統 
此子系統負責測試資料儲存與管理。除了測試案例之外，測試資料對於測試工
參考文獻 
 
[1] Business Process Execution Language for Web Services Specification, version 1.1. 
http://www-128.ibm.com/developerworks/library/specification/ws-bpel/ 
[2] Simple Object Access Protocol, version 1.2, http://www.w3.org/TR/soap 
[3] Web Service Description Language, version 1.1, http://www.w3.org/TR/wsdl 
[4] StylusStudio, http://www.stylusstudio.com/ 
[5] SOAPSonar, Crosscheck Network co, ltd. http://www.crosschecknet.com/ 
[6] ActiveBPEL, http://www.activebpel.org/ 
[7] C.-H. Liu, H.-S. Lin and S.-L. Chen, “A BPEL Test Model for Testing Web Services 
Composition,” In Proceedings of Taiwan Conference on Software Engineering, June 
2006, pp. 242-248. 
[8] Xiulan Yu, Long Zhang, Ying Li, and Ying Chen, “WSCE: A Flexible Web Service 
Composition Enviorment,” In Proceedings of the IEEE International Conference on 
Web Services (ICWS'04), July 2004, pp. 428-435. 
[9] Jeff Offutt and Wuzhi Xu, “Generating Test Cases for Web Services Using Data 
Perturbation,” ACM SIGSOFT Software Engineering Notes, Vol. 29, No. 5, 
September 2004, pp. 1-10. 
[10] X. Bai and W. T. Tsai et al, “Scenario-Based Modeling and Its Applications,” In 
Proceedings of the Seventh International Workshop on Object-Oriented Real-Time 
Dependable Systems (WORDS 2002), May 2002, pp.253-260. 
[11] W. T. Tsai, Ray Paul, Lian Yu, Akihiro Saimi, and Zhibin Cao, “Scenario-Based Web 
Service Testing with Distributed Agents,” IEICE Transaction on Information and 
System, 2003, Vol. E86-D, No. 10, January 2002, pp. 2130-2144. 
[12] N. Looker and J. Xu, “Assessing the Dependability of SOAP RPC-Based Web 
Services by Fault Injection,” In Presentation at Leeds University, 31th July 2003, 
February 2004, pp. 163-170. 
[13] Z. Li, W. Sun, Z.-B. Jiang, and X. Zhang, “BPEL4WS Unit Testing: Framework and 
Implementation,” In Proceedings of the IEEE International Conference on Web 
Services (ICWS'05), 2005, pp. 103-110.  
[14] J. Yan, Z. Li, Y. Yuan, W. Sun, and J. Zhang, “BPEL4WS Unit Testing: Test Case 
Generation Using a Concurrent Path Analysis Approach,” In Proceedings of the 17th 
International Symposium on Software Reliability Engineering (ISSRE '06), 2006, 
pp.75-84. 
[15] Web Service Business Process Execution Language Committee Specification, version 
2.0, http://docs.oasis-open.org/wsbpel/2.0/CS01/ 
可供推廣之研發成果資料表 
□ 可申請專利  ■ 可技術移轉                                   日期：96 年 10 月 5 日 
國科會補助計畫 
計畫名稱：基於商務流程執行語言之網際服務組合測試方法的研究
計畫主持人：劉建宏 
計畫編號：NSC 95-2221-E-027-092 
技術/創作名稱 網際服務組合測試工具 WSCT 
發明人/創作人 劉建宏 
中文： WSCT 為一個針對 BPEL 1.0 版規範所設計的網際服務組合
測試工具。此工具能分析網際服務的 WSDL 敘述，協助使用者設
計與執行網際服務的測試案例，以及管理測試結果。此外，此工具
可分析 BPEL 流程定義，建立流程之控制流程圖，以協助 BPEL 流
程測試案例的設計，來驗證流程與邏輯結構是否正確。 
技術說明 英文：WSCT is a Web service composition testing tool based on BPEL 
1.0 specification. The tool can analyze the WSDL descriptions of Web 
services and can assist testers to design and execute test cases for 
testing Web services and manage the corresponding test results. 
Furthermore, this tool can analyze the definition of a BPEL process and 
construct a BPEL control flow graph (BCFG). The BCFG can be used 
to derive the test cases to verify the correctness of flow logic for the 
BPEL process.  
可利用之產業 
及 
可開發之產品 
本工具提供 BPEL 結構與流程的測試模型，並可分析個別網際服務
的 WSDL 敘述，提供單一網際服務測試案例的編輯、實施與管理，
適合做為網際服務測試與分析工具，可運用於協助軟體產業改善開
發網際服務的品質。 
技術特點 
本工具可分析 BPEL 流程的定義，建立 BPEL 流程的控制流程圖，
協助使用者瞭解流程定義，並計算該流程定義可能的獨立路徑與執
行該路徑的一些限制，以協助設計測試案例來驗證 BPEL 的流程與
邏輯結構是否正確。 
推廣及運用的價值 
本工具以 Java 程式語言設計，擁有跨平台的特性。且本工具可分
析 BPEL 流程定義，建立測試模型，協助測試人員了解 BPEL 的活
動與流程，並提供單一網際服務測試案例的編輯、執行與管理，有
助於測試網際服務組合的正確性。 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單
位研發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
3.本表若不敷使用，請自行影印。 
一個基於 BPEL 之網際服務組合測試工具 
A BPEL-Based Web Service Composition Testing Tool 
 
劉建宏* 林修儀* 李學遠* 陳淑玲** 
國立台北科技大學資訊工程系*  南台科技大學管理與資訊系** 
Email: {cliu, s3598011, t5598003}@ntut.edu.tw* slchen@mail.stut.edu.tw**
 
摘要 
隨著服務導向平台的逐漸普及，以商業流程執
行語言為基礎的流程管理解決方案逐漸受到企業
重視，使得流程導向(process-oriented)應用系統的
品質逐漸引起重視。對流程導向系統進行軟體測
試，不僅需要測試個別相關的網際服務，還需驗證
系統內流程的結構，以確保網際服務組合
(composition)的正確性。然而，大量 XML 標籤使
得網際服務與商業流程的定義相當複雜難懂，也造
成測試案例設計的困難。本論文提出一個網際服務
組合的測試工具，可分析網際服務的 WSDL 敘
述，協助使用者設計、管理網際服務的測試案例群
組與測試結果。此外，此工具可分析 BPEL 流程
定義，建立流程之控制流程圖，以協助 BPEL 流
程測試案例的設計，來驗證流程與邏輯結構是否正
確。 
 
關鍵詞：Web Services、BPEL、SOA、WSDL、軟
體測試 
 
1. 前言 
近幾年由於網際服務(Web Service)與服務導
向架構 (Services Oriented Architecture；SOA)架構
的 普 及 ， 商 業 流 程 管 理 (Business Process 
Management ； BPM) 與 商 業 流 程 管 理 系 統 
(Business Process Management Systems；BPMS)逐
漸成為企業間的新興議題。基本上，BPM 或 BPMS
的目標是希望藉由明確的流程定義將耦合鬆散的
一群獨立服務以 Web Service 的方式串聯成新的商
業流程，並讓不同的 BPMS 能相互溝通與執行企
業流程。因此，標準流程定義(process definition)
扮演著 BPMS 技術中的核心角色。目前有許多相
關的標準，其中又以 Microsoft、IBM 共推的網路
服務商業流程執行語言(Business Process Execution 
Language for Web Service ； BPEL4WS ，簡稱 
BPEL)[1] 最廣為企業界所採用。 
BPEL 在執行時必須要將 BPEL 的流程定義
佈署到 BPM 的執行引擎上，由 BPM 引擎解讀
其內容，進而產生 BPEL 的執行實體(instance)。
而在流程的執行過程中，由 client 端程式透過 
SOAP [2]協定送出需求給 BPEL 實體，逐一執行
流程定義裡的活動，並透過 SOAP 訊息與相關的 
網際服務進行互動，使得獨立且分散的服務可以組
合成適當的商業流程，以滿足 client 的要求。 
如同傳統的軟體一般，BPEL 流程定義亦需
進行嚴謹的測試，以確保網際服務的組合能滿足商
業流程的需求。然而 BPEL 流程定義文件本身不易
瞭解，且許多企業流程本身的邏輯就相當複雜，並
可能包含了平行與非同步行為，這使得流程的測試
工作成為一項艱鉅的挑戰。此外，一個 BPEL 流程
定義是否正確，亦跟其所組合之網際服務正確與否
有關。然而，網際服務是一跨系統的標準，僅能透
過網際服務描述語言(WSDL)文件[3]取得其界面
及參數等資訊，無法取得其原始碼進行分析，使得
BPEL 流程定義的測試更為複雜。 
目前已有一些關於網際服務的測試工具
[4][5]，這些工具能針對單一網際服務進行測試，
使用者能夠瀏覽 WSDL 內容等資訊，擷取 SOAP
封包，並且以視覺化的方式建立及編輯測試案例。
然而此類工具對需要組合多個網際服務之 BPEL
流程測試無法提供有效的協助。另外，有些 BPM 
解決方案的開發廠商，在其流程設計工具中附加了
若干測試功能[6]，例如：模擬執行一個設計中的 
BPEL 流程，以協助驗證流程的邏輯是否正確。不
過，驗證的結果僅能說明其流程設計是否正確，並
不代表網際服務組合的實做(implementation) 是否
正確。因此，網際服務組合的測試仍有其需要。 
有鑑於此，我們提出一個基於 BPEL 規範的
網際服務組合測試工具 WSCT。此工具可讓使用
者針對個別的網際服務進行測試，並提供測試案例
編輯及測試資料管理的功能，以協助彙整、分析測
試結果，以提升測試的效率。同時，此工具亦可分
析 BPEL 流程的定義，建立 BPEL 流程的控制流
程圖(BPEL Control Flow Graph；BCFG)[7]，協助
使用者瞭解流程定義，並計算該流程定義可能的獨
立路徑(independent path)與執行該路徑的一些限
制(path condition)，以設計測試案例來驗證 BPEL
的流程與邏輯結構是否正確。 
本論文組織結構如下：第二節對目前相關研究
做一簡要的回顧，第三節說明 WSCT 採用的測試
策略，第四節說明 WSCT 所建立的 BPEL 測試模
型，第五節介紹 WSCT 的系統架構，第六節為 
WSCT 的工具說明與使用範例，第七節則為本論
文之結語與未來研究的方向。 
 
2. 相關研究 
近幾年有許多文獻探討網際服務與 BPEL 流
程測試的相關議題，以下對與本文相關的文獻做一
簡要的回顧： 
Yu[8] 等人提出一個能夠彈性定義流程的開
* 本研究接受國科會編號：NSC95-2221-E-027-092 研究計畫
經費補助 
該路徑有關之網際服務的執行結果，以驗證 BPEL 
流程的路徑、分支等結構的正確性。 
 
4. BPEL 流程測試模型 
一個 BPEL 流程定義是一份 XML 文件，由於
BPEL 流程定義會使用到與其互動之網際服務的
WSDL 敘述，大量的標籤與服務宣告定義使得
BPEL 流程定義難以閱讀和瞭解，為協助測試人員
瞭解 BPEL 流程的定義，以利測試的進行，我們提
出一個 BPEL 的測試模型[7]。此模型包含物件模
型(Object Model)及結構模型(Structural Model)兩
個部份。其中物件模型主要描述流程中活動
(activity)的靜態結構，結構模型則描述流程的執行
路徑與邏輯。這個測試模型可以幫助測試人員更能
瞭解流程的結構及可能的執行路徑等資訊，協助其
推導測試案例。 
由於本文主要在說明 WSCT 網際服務組合工
具，在此我們僅對 BPEL 結構模型做一簡略的描
述，以便說明 BPEL 測試案例的推導，關於測試模
型詳細的內容可參考[7]。基本上，一個 BPEL 的
流程定義包含許多活動，這些活動可以區分為基本
活 動 (Basic Activity) 與 結 構 化 活 動 (Structural 
Activity)。為了建構 BPEL 的控制流程圖以及推導
測試案例，我們考慮 BPEL 的語法(syntax)與語意
(semantics)兩個部分。在語法方面，我們對不同的
結構化活動如：<sequence>、<while>及<flow>等，
找出其對應的流程結構，如圖 1 所示，用以建構
BPEL 的控制流程圖(BCFG)。 
 
 
圖 1、結構化活動與對應的控制流程圖[7] 
 
此外，BPEL 的<flow>活動允許利用其<target>
和 <source> 屬 性 之 link 的 值 來 進 行 平 行
(concurrence)活動間的同步動作，在建構 BCFG 時
亦須一併考慮。圖 2 為一簡單的 BPEL 流程定義，
為了簡化起見，我們將服務連結及變數區段這兩個
部份省略，此兩部分所包含的資訊乃屬宣告性質的
內容，對控制流程並不會有所影響。圖 3 為其對應
的控制流程圖。此圖顯示活動 X 與 Y 能同時執行，
並且當所有來源端的活動(X 與 Y)執行完畢後，目
的端的活動 Z 才會被執行。此外，若此平行活動
造成例外，流程控制將會轉交給 fault handler 處理。 
 
圖 2、link.bpel 檔案內容[7] 
 
 
圖 3、 link.bpel 的控制流程圖[7] 
 
另外，在利用 BPEL 控制流程圖推導測試路徑
時，亦須考量 BPEL 語意的部分。BPEL 在<flow>
中，若有多個平行活動需要同步時，系統將依照活
動之<source>屬性的 transitionCondition 和<target>
屬性的 joinCondition 條件判斷是否可以進行同步
結合，若這些條件的值為偽(false)，將導致無法完
成同步結合，系統將產生一個標準的結合失敗
(joinFailure)例外，造成執行路徑的改變。此外，
<while> 
..
<pick> 
scope 
<scope><flow> 
.
<switch><sequence> 
18~
21 
Start
Exit
12~
14 
15~
17 
T 
01
03~
05 
FE 
07~
11 
X Y 
Z
01 <process> 
02   <faultHandlers> 
03    <catch faultName=”bpws:joinFailure”> 
04       <reply name=”error” /> 
05     </catch> 
06   </faultHandlers> 
07   <flow supressJoinFailure=”no”> 
08     <links> 
09       <link name=”XtoZ” /> 
10       <link name=”YtoZ” /> 
11     </links> 
12     <sequence name=”X”> 
13       <source linkName=”XtoZ” /> 
14     </sequence name> 
15     <sequence name=”Y”> 
16       <source linkName=”YtoZ” /> 
17     </sequence name> 
18     <sequence name=”Z”> 
19       <target linkName=”XtoZ” /> 
20       <target linkName=”YtoZ” /> 
21     </sequence name> 
22   </flow> 
23 </process> 
4. 使用者可根據不同的網際服務，分別建立
多個測試專案及測試套件。 
5. 能夠紀錄(log)呼叫網際服務所發出的請
求訊息及收到的回應。 
6. 可對 網際服務的 SOAP 訊息進行攔截。 
 
圖 5 為 WSCT 網際服務測試專案的畫面，畫
面的最左邊的視窗為專案區，顯示目前開啟的專案
名稱，及網際服務操作函數介面的資訊。使用者若
移動滑鼠至該操作函數，相關的參數格式會顯現。
上面的視窗則為此專案內含的測試套件，使用者可
點選個別測試案例查看其內容，或是編輯新的測試
案例以及測試套件，如圖 6 所示。該視窗的中間區
塊則紀錄(log)已執行測試案例的歷史資料，包含測
試的起訖時間，以及測試通過與否等。 
 
 
圖 5  WSCT 測試專案畫面 
 
 
圖 6  測試案例編輯畫面 
 
圖 7 為 WSCT 捕捉 SOAP 傳送與回應訊息的
畫面。透過擷取網際服務 SOAP 封包的內容，可
協助測試人員仔細分析測試案例失敗可能的原
因。在圖 7 右上方區塊可以看到 WSCT 正在監控
的 Socket 位置。中間的兩個區塊則分別顯示所點
選之網際服務其 Request 及 Response 的 SOAP
封包內容。 
此外，對於 BPEL 流程結構的測試，WSCT 
亦提供了以下支援： 
1. 建立並以圖形方式顯示 BPEL 流程定義
的測試模型，包含物件模型與結構模型。 
2. 計算 BCFG 的獨立路徑。 
3. 擷取每條獨立路徑的分支條件。 
 
 
圖 7  SOAP 訊息攔截畫面 
 
圖 8 即為測試 BPEL 結構模型的畫面。左邊
區塊顯示 BPEL 的原始碼，中間區塊則顯示由
BPEL 原始碼建構出的控制流程圖。而右上區塊則
為路徑列表，表中的每一個項目均代表一條由控制
流程圖所推導出來的獨立路徑。使用者點選路徑列
表中的某個項目，就會在路徑列表的下方區塊顯示
該條路徑所經過的所有分支條件。倘若使用者選擇
的基本路徑沒有經過任何的分支活動則該列表顯
示空白。且當使用者點選了路徑列表中某一項目的
同時，控制流程圖將以紅色節點代表該路徑所經過
的節點；藍色節點則表示路徑未經過的節點，讓使
用者能輕易地瞭解 BPEL 流程可能的執行路徑。 
 
 
圖 8  BPEL 結構模型畫面 
 
7. 結論與未來研究方向 
在這篇論文中，我們描述一個基於 BPEL 規
範的網際服務組合測試工具 WSCT。此工具能提
供網際服務的測試及支援測試 BPEL 流程結構的
功能，以達到網際服務組合測試的目的。WSCT
除了能提供 WSDL 操作函數介面與參數格式等資
訊外，亦提供測試案例的編輯及執行，以及測試結
果的彙整與分析，簡化網際服務的工作。此外，在 
網際服務組合測試方面，WSCT 支援 BPEL 測試模
型的建立。根據這個測試模型，使用者能夠清楚地
