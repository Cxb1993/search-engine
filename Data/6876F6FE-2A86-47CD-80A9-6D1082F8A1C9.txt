1行政院國家科學委員會專題研究計畫成果報告
三自由度機器人之工作空間以及最佳設計之研究
計畫編號 : NSC 97-2221-E-011-051-
執行期限 : 97 年 8 月 1 日至 98 年 7 月 31 日
主持人 : 蔡高岳 國立台灣科技大學
共同主持人 :
計畫參與人員 : 李庭官、陳俊宏、黃亭淵
國立台灣科技大學
中文摘要
操控性與工作空間為設計機器人時之兩個
重要參考指標。此計劃利用三次多項式之
解析解提出數個方法求得具有不同操控性
指數之操控性曲面。由這些曲面之分布情
形及其所包含區域之體積之大小可用來評
估一機器人之整體操控性以及操控性之變
化率，而軸位移空間之一曲面可用來求得
工作空間內之一封閉邊界曲面並使曲面內
任一點之操控性指數值均大於某一特定值
。所提出之方法可應用於設計具有最佳操
控性或最大(操控性指數值均大於某一特
定值之)無奇異點工作空間之三自由度機
器人或四自由度多餘軸機器人。
關鍵詞:等向性，操控性，工作空間，奇異
點，最佳設計，三自由度機器人
ABSTRACT
Dexterity and workspace are two of the most
important design criteria in developing
manipulators. This work employs the
analytical solutions of the cubic to present
algorithms for developing contour surfaces
with specified dexterities. The obtained
results can be utilized to evaluate the
dexterity, rate of change of dexterity, or
homogeneity in the distribution of the
contour curves or surfaces. Any closed curve
or surface can be employed to determine the
singularity-free workspace of a manipulator
with dexterity better than a specified value.
The proposed algorithms can be utilized to
develop 3-DOF manipulators or 4-DOF
redundant serial manipulators with optimum
dexterity or singularity-free workspace.
Keywords: isotropy, dexterity, workspace,
singularity, optimal design, 3-DOF
manipulator.
1. Introduction
Except for manipulators used in some special
applications, dexterity is a very desirable
property for almost any type of manipulators.
Dexterity can be evaluated by several
measures [1] in which the condition number
is the most commonly used mathematical
tool to evaluate local dexterity of a
manipulator. If the condition number (or the
reciprocal of the condition number) of a
related matrix reaches the optimum value of
unity, then a manipulator is at an isotropic
configuration where the manipulator can be
controlled equally well in all directions, and
sensitivity in velocity and force analysis is at
a minimum. The dexterity of a manipulator,
in general, is evaluated by
1
w
w
dW
dW

 
 
 


,
where  is the condition number at a
particular point in workspace, and the
denominator is the volume of the workspace
[2-4]. It measures the average performance of
a manipulator. This approach, however,
cannot determine which region or which
branch of kinematic solutions has better
dexterity or evaluate the rate of change of
dexterity. Thus, local dexterity still might
change significantly even for manipulators
with good dexterity. For lower
3point of a real number r. Suppose that
B A  , n = 20, and h = 2. Then two points
1P and 2P with 1P = ( ( ) 1) / 20Bg   and 2P =
( ) / 20Bg  can be obtained. For example, if
B = 0.21 and A = 0.12, then 1P = 0.15 and
2P
 = 0.2 can be developed by the bisection
method. First, points A and B are utilized to
develop point 1P with 1P A . Then 2P is
developed from 1P and B. The searching
process can be significantly improved if a
larger step is chosen in the grid-scanning
method, but some desired points might not be
obtained when two points with A ≅ B
are used in the bisection method. In this case,
the obtained results may not be closed curves
or surfaces.
The dexterity for a particular group of
contour surfaces is easier to evaluate using
spherical coordinates. With the point with
local optimum  (denoted by max ) as the
origin, the joint displacements can be defined
by
*
1 1
*
2 2
*
3 3
sin cos
sin sin
cos
q q
q q
q q
  
  
 
 
 
 
(8)
where 0    , 0 2   , and *q
* * *
1 2 3( , , )q q q denotes the point with max . With
parameters φ and θ given, the points with
desired dexterities on the straight line
through the origin with  as the free
parameter can be developed without using a
grid-scanning approach. If a point on the
straight line with 1
n
  is obtained, then
points on the line with 2 3, ,....., k
n n n
  can
be developed using the bisection method
with the origin and the point with 1
n
  as
two starting points, where k is the maximum
integer satisfying max .
k
n
 Therefore, a
particular group of contour surfaces with
different dexterities can be developed using a
2-dimensional grid-scanning method through
parameters φ and θ.
The area of the ith grid on the surface with
a specified  can be approximated by Agi =
2
i i i    , where i is the distance from
the origin to the center of the grid. The area
of the surface can be estimated by gi
1
A
n
i

with n represents the number of grids. If each
grid uses the same  and  , then the
area is proportional to 2
1
.
n
i
i


 Let  =  .
Then the volume of the region enclosed by
the surface can be estimated by
3 2
i
1 1
1 ( )
3
n n
i
i i
 
 
    , where i is the
volume of a pyramid with the ith grid as the
base and the origin as the vertex. Therefore,
the volume is proportional to 3
1
.
n
i
i


 All the
points in the region has dexterity better then
the specified  . Either 2
1
n
i
i


 or 3
1
n
i
i


 can
be employed to evaluate which group of
contour surfaces or which branch of
kinematic solutions has better dexterity. For
manipulators with joint limits, the 2i and
3
i are excluded from the summations if any
joint displacement exceeds its limits.
Let jV denote the volume of a region with
j .
n
  Then the volume of a region with
1 2j j
n n
  equals to
1 2j j
V V . In theory, the
difference in volume can be used to estimate
the average rate of change of dexterity for the
points in the region. However, the relative
positions of the two surfaces with  = 1j n
and  = 2j n , respectively, cannot be
determined by this approach. The distance
from a point Pi with  = 2
j
n to an
5+ iy1
ix
-t
t
 
  
 
is employed to develop Pi if the
point cannot be obtained by Eq. (11). A
closed curve can be obtained if the path
returns to the starting point. The area of the
region enclosed by the sequence of points
1 2( , )i iq q for i = 1, 2, …, n on the boundary
can be determined by
11 12 13 1( 1) 1 11
21 22 23 2( 1) 2 21
n n
n n
q q q q q q
q q q q q q


 A 
1
2
11 22 12 23 1( 1) 2 1 21
12 21 13 22 1 2( 1) 11 2
1
2 n n n
n n n
q q q q q q q q
q q q q q q q q


    
   


(12)
3. Algorithms
This section employs the equations presented
in the preceding section to propose
algorithms for developing contour surfaces
with different dexterities. The first algorithm
uses a grid-scanning approach to obtain
contour surfaces in joint space and evaluate
the volume of the region with  larger or
equal to a specified value of s . Figure 2
shows a cross-section of a contour surface
with  = s . The straight line specified by
iq = c (on the i jq q plane) intersects the curve
at points 2 3 4Q ,Q ,Q and Q5. Points Q1 = jminq
and Q6 = jmaxq . The line segments in the
region with  > s are 1 2Q -Q , 3 4Q -Q and
5 6Q -Q . Let Q1 = jminq and Q୫ భ= qjmax. Then
the desired segments can be determined by
the following rules:
1. Segment 1 2Q -Q is included if  at
1Q is larger than s .
2. Segment
1 1m -1 m
Q - Q is included if 
at Q୫ భ is larger than s .
3. A segment is included if  at the
middle point of the segment is larger
than s .
In the grid-scanning process, number m1 and
related data of points
11 2 m
Q ,Q ,...,Q are
recorded. If m1 = 2 or m1 = 3 (where the
straight line just touches the curve at one
point), then the whole segment from jminq to
jmaxq is included in the region if  at 1Q
is larger than s . Otherwise, the whole
segment is excluded. For other cases (m1 
2 or m1  3), the legitimate line segments
are determined using the three proposed rules.
The area dAi of the region from iq to
i iq q can be approximated by the
multiplication of iq with the summation
of lengths of the line segments, the area of
the region at a cross-section specified by kq
can be determined by the summation of all
dAi , and the summation of the multiplication
of kq with the area of a cross-section
yields the volume of the region with   s
in 3D space. The steps can be summarized as
follows:
1. Input joint ranges and increments,
s , the number m of the desired
points to be determined between
two starting points in the bisection
method, and number n to obtain
surfaces with specified dexterities
2. From the starting point Po, let A =
Po and B = A + q .
3. Evaluate λ୅ , λ୆ , and function
h(λ୅ , λ୆) in Eq. (7).
4. Repeat letting q = 2 q if h =
0, or q = 1
2
q if h > m, and
reevaluating B and h until
condition 0 < h m is satisfied.
5. Employ the bisection method to
develop m desired points.
6. Save related data for points with
 = s and use them to compute
dAi
7. Let A = B, B = A + q , and repeat
steps 3-6 until the scanning
process is completed.
8. Output the volume of the region
with   s
7distance between two neighboring surfaces is
not considered in this case. The number of
points that can reach λ =
j nൗ is saved in
count[j], and 3R [j] records ( 3 3j j+1  ) for j
= k, k+1,…., m with ρ୫ ାଵ= 0. The volume
of the region with λ ≥
j nൗ is proportional to
m
3
j=i
R [i] for manipulators with joint limits.
The algorithm can be employed to develop
contour surfaces in joint space or task space.
The vector of joint displacements q can be
computed by Eq. (8) or by solving inverse
kinematics (for contour surfaces in task
space).
The third algorithm also studies a
particular group of contour surfaces. More
accurate results can be obtained by the
algorithm. The algorithm needs an initial
point to start with. The point can be any point
that belongs to a particular branch of
kinematic solution or the point can be used to
indicate the region where contour surfaces
want to be developed. With the initial point,
the first closed curve with k
n
  on a
cross-section can be developed using the
points shown in Fig. 1. The coordinates and
the number of points obtained are recorded
for computing the length of the boundary
curve and the area of the enclosed region.
The approach in the second algorithm can be
employed (with spherical coordinates
replaced by polar coordinates) to develop the
rest of contour curves inside the region, but
developing the local optimum of λat each
cross-section is a rather time-consuming task.
In this work, a point near the center point of
the enclosed region is utilized to find the
starting point for developing the curve with
k+1.
n
  Let N[1], N[2], ….,N[m] denote
the points on the curve with k
n
  . Then the
middle point on the curve is N[s] with s
=[ଵା୫
ଶ
െ ቀ
ଵା୫
ଶ
ǡͳቁሿ. If λ at the middle
point of N[1] and N[s] is larger than k+1
n
,
then use the point and N[1] to develop the
starting point for the curve with k+1.
n
 
Otherwise, compute λ at other middle points
of (N[1],N[2]), (N[1],N[3]), …, and
(N[1],N[m]) to find the point with optimum λ 
and use it to develop the starting point for the
next curve. Compute the length of the
boundary curve and the area of the enclosed
region if the number of points obtained m ≧
3. The steps to develop contour surfaces are
summarized below:
1. Input the initial point A0 =(qଵ଴ǡqଶ଴, qଷ଴), and numbers n and k*
for developing the outmost surface
with λ = ୩∗
୬
. qଷ∗ = qଷ଴. k = k*. S =
0. Develop the first point P with
λ = ୩
୬
.
2. Use point P to develop the close
curve with λ = ୩
୬
. Record the
related data. Go to Step 4 If m < 3.
3. Compute the length of the boundary
curve and the area of the enclosed
region. k = k + 1. Find a point
inside the current closed curve with
k
n
  . Go to Step 5 if the point
cannot be obtained. Use the point
and point N[1] (of the current curve)
to find a point with k
n
  . Let the
point obtained as point P. Go to Step
2.
4. Go to Step 6 if λ = ୩∗
୬
.
5. qଷ = qଷ + Δqଷ . k = k*. Develop the
first point P with λ = ୩
୬
on the
cross-section at q3. Go to Step 2.
6. Exit if S = 1. Δqଷ = −Δqଷ .qଷ = qଷ∗ + Δqଷ . S = S+1. k = k*.
Develop the first point P with λ = ୩
୬
on the cross-section at q3. Go to Step
2.
9limited joint ranges 6 6oi i oi      for
i = 1, 2, …, 6, where i and oi denote,
respectively, the ith limb length and the ith
limb length at the initial assembly
configuration. The orientation space is
specified by Z-Y-Z Euler angles. With the
origin of the coordinate frame at the tool
center point P, n = 10 and 6o     , the
results are listed in Table 2. The orientation
workspace is proportional to the total number
of points that can be reached, so the design
with P = 6 (which can reach 93 points) has
the largest orientation workspace at the initial
assembly configuration. The tool center point
of the design is inside the manipulator. If the
tool center point must be outside a
manipulator, then the design with P = 11 is a
better choice. The dexterity can be compared
by the volumes of the regions with k10 
for k = 9, 8, …, 5. The design with P = 5 (or
the tool center point is near the geometric
center of the manipulator) has the best
dexterity despite the fact that it can only
reach the points with λ ≧ 0.7. The design
with P = 11 is the best choice if the tool
center point must be outside of a
manipulator.
5. Conclusion
The analytical solutions of the cubic and the
bisection method have been employed to
develop algorithms for evaluating the
dexterity of manipulators. The algorithms
can be employed to develop all contour
surfaces or a particular group of contour
surfaces with specified dexterities. The
dexterity can be evaluated by the volume
enclosed by a closed surface with specified
dexterity, and the rate of change of dexterity
can be determined by the related positions of
the contour surfaces. The methods are
applicable to special, general, or redundant
manipulators with or without joint limits. The
proposed algorithms have been employed to
study the dexterity of 4-DOF redundant serial
manipulators and the dexterity and
orientation workspace of a group of 6-DOF
isotropic parallel manipulators. With some
modifications, the algorithms can be
extended to evaluate the dexterity of 6-DOF
manipulators because the local dexterity at a
given configuration can also be evaluated by
the solutions of the cubic.
Acknowledgments
Support from the National Science Council
of the Republic of China under grant
NSC97-2212-E011-051 is gratefully
acknowledged.
References
[1] C. A. Klein and B. E. Blaho, “Dexterity
measures for the design and control of
kinematically redundant manipulators,” Int. J.
Robot. Res. 6(2), 72-83 (1987).
[2] C. Gosselin and J. Angeles, “A global
performance index for the kinematic
optimization of robotic manipulators,” ASME
J. Mech Des, 113(3), 220-226 (1991)
[3] D. Chablat, Ph. Wenger, F. Majou, and J.
P. Merlet, “An interval analysis based study
for the design and the comparison of
three-degree-of-freedom parallel kinematic
machines,” Int. J. Robot. Res. 23(6), 615-624
(2004).
[4] J. P. Merlet, “Jacobian, manipulability,
condition number, and accuracy of parallel
robots,” ASME J. Mech Des, 128(1),
199-208 (2006)
[5] X.-J. Liu, Z.-L. Jin, and F. Gao,
“Optimum design of 3-DOF spherical
parallel manipulators with respect to the
conditioning and stiffness indices,” Mech.
Mach. Theory, 35(9), 1257-1267 (2000).
[6] X.-J Liu, J. Wang, and H.-J Zheng,
“Optimum design of the 5R symmetrical
parallel manipulator with a surrounded and
good-condition workspace,” Robot. Auton.
Syst., 54(3), 221-233 (2006)
[7] K. Y. Tsai and S. R. Zhou, “The optimum
design of 6-DOF isotropic parallel
manipulators,” J. Robot. Syst, 22(6), 333-340
(2005)
[8] K. Y. Tsai, P. Y. Lin, and T. K. Lee, 2008,
“4R spatial and 5R parallel manipulators
that can reach maximum number of isotropic
positions” Mech. Mach. Theory, 43(1),
68-79 (2008).。
11
Table I Parameters of symmetric generators for 10h 
P R r 1 2
3 23.1759 11.9086 89.8116° 30.1884°
4 23.3348 11.7109 31.7976° 88.2024°
5 23.4837 11.5243 86.5247° 33.4753°
6 11.7109 23.3348 31.7977° 88.2023°
7 11.9085 23.1760 30.1892° 89.8108°
8 12.1172 23.0070 28.6476° 91.3524°
9 12.3375 22.8273 92.8282° 27.1718°
10 12.5692 22.6367 25.7663° 94.2337°
11 12.8101 22.4368 24.4195° 95.5805°
12 13.0634 22.2249 96.8592° 23.1408°
13 13.3284 22.0010 21.9280° 98.0720°
14 13.6054 21.7648 20.7801° 99.2199°
15 13.8946 21.5155 19.6968° 100.3032°
Table II Related data for orientation workspace and dexterity
P
V
0.4 0.5 0.6 0.7 0.8 0.9 0.9 0.8 0.7 0.6 0.5 0.4
3 5 7 7 7 9 25 0.4656 0.6765 0.8800 1.1867 1.6385 2.1508
4 nil nil nil 7 19 31 1.4755 2.1690 2.5305 nil nil nil
5 nil nil nil 11 31 31 1.2900 2.5776 3.1447 nil nil nil
6 nil 9 10 18 25 31 0.8333 1.3970 1.8574 2.1225 2.4895 nil
7 nil 9 11 13 23 27 0.1501 0.5812 0.8761 1.2385 1.6789 nil
8 nil 8 11 11 25 31 0.2275 0.8711 1.1053 1.5553 2.0520 nil
9 nil 4 11 12 29 31 0.1717 0.9024 1.1953 1.6818 2.0277 nil
10 nil 5 8 13 29 29 0.1300 0.7847 1.2177 1.6946 2.2911 nil
11 nil 2 8 22 29 31 0.1448 0.7544 1.6756 2.1730 2.3599 nil
12 nil nil 6 21 31 31 0.1337 0.6873 1.4391 1.7864 nil nil
13 nil nil 4 23 31 31 0.1519 0.7838 1.6798 1.9632 nil nil
14 nil nil 2 16 31 31 0.1540 0.8428 1.4414 1.5762 nil nil
15 nil nil 2 14 29 31 0.1525 0.7813 1.2787 1.4343 nil nil
number of points reached
13
Fig. 3. Procedure for developing contour surfaces with specified dexterities.
15
Input n , k* , point A0(q10,q20,q30)
Use P0 to developN[2],N[3],…,N[m]
m ≥ 3?
Compute dA and dVAR ← AR+dA
V ← V+dV
k ← k+1
Compute λ at the N(s)
n ≥ 3?
q3*=q30 , k=k* , S=0
Set AR and V to 0n*k=λ
q30 ← (q30+Δq3)
k ← k*
n ≥ 3?n*k=λ
S=1?
End
Δq3 ← -Δq3q30 ← (q3*+Δq3)
S ← S+1
k ← k*
Yes No
Yes
No
Yes No
Yes No
Yes No
Find λmax form therest of middle points
nk>λ
λmax > df ?nk
Develop point P0(=N[1]) with sfcfvnk=λ
Fig. 5. Procedure for developing a group of continuous contour surfaces.
17
r
R
h
P
2A
3A
1A
4A 5A
6A
1B2B
3B
4B 5B
6B
2
2

1
2
 1
2

2
2

Fig. 8. Parameters for developing symmetric isotropic generators.
此次參加的會議為 ReMAR2009 於英國倫敦舉行。個人口頭發表
的時間為2009年6月22日上午11點至12點，於6月20日即由台北出發經
香港轉機至英國倫敦抵達。隔日(6月21日)下午1點至7點為研討會報
到時間，晚餐時間至大會所提供的休息會場與國內外參與會議的人員
交換名片與心得，會後返回飯店稍作休息，接著前往倫敦幾個著名的
景點參觀，直到下午7點飯店，並於晚間準備隔天的口頭報告。 
6月22日上午11點至12點即為此次參與之會議場次，我為第三個
口頭報告者，同場研討會的參與人員皆來自於中國大陸。我報告完後
回答問題並與同場參與人員交換名片，隨即參加有ㄧ場由J. Michael 
McCarthy and Daniel Martines 教授所主持的研討會，會議的主題
為 Reconfiguration Principles and Reviews，會中 Hong-Sen Yan 
教授亦有報告，故在場聆聽，會後至大會所提供的休息會場與國內外
參與會議的人員交換名片與心得，隨後另有ㄧ場研討會即將開始，主
題為Kinematic Analysis of Reconfigurable Mechanisms。由於該
會所報告的文章內容與我的論文相近，於是在場聆聽。該場次的研討
會於下午3點40分結束，會後返回飯店稍作休息，接著前往倫敦幾個
著名的景點參觀，直到下午7點飯店。 
