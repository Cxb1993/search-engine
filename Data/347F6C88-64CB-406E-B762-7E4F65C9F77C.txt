  1
一、中、英文摘要及關鍵詞： 
 
中文摘要： 
在本論文中，基於內插濾波的概念，我們將提出一個可應用於準靜態通道的低複雜度濾
波渦輪等化器。在傳統濾波渦輪等化器中，最佳濾波器係數運算與等化濾波運算的計算量
相當的大。我們以理論證明，不同的最佳濾波器是可以被內插的。我們僅需事先計算好少
數的最佳濾波器係數，之後便可以內插的方式來快速計算出最佳濾波器係數。因此，複雜
度便可大幅度的降低。所提的方法可在不影響性能的表現前提下達到近乎傳統濾波渦輪等
化器十分之一的複雜度。 
 
關鍵詞—渦輪等化、低複雜度、準靜態、符際干擾。 
 
 
英文摘要： 
In this paper, we propose a low-complexity scheme to avoid the matrix inversion 
operation in the filter-based turbo equalizer for quasi-static channels. Our idea is to pre-calculate 
a set of reference optimal filters for corresponding average reliability values, and conduct 
interpolation for the optimal filter. Simulation results show that the computational complexity 
can be reduced dramatically, the performance of the proposed algorithm is almost not affected. 
For a channel with tens of taps, the complexity of the proposed turbo equalizer can be an order 
of magnitude less than the conventional filter-based turbo equalizer. 
 
Keywords—Turbo equalization, low-complexity, quasi-static, ISI. 
 
 
二、報告內容： 
 
A Low-Complexity Filter-Based Turbo Equalizer
for Quasi-Static Channels
Shou-Sheu Lin*
*Department of Computer and Communication Engineering
National Kaohsiung First University of Science and Technology
Kaohsiung, Taiwan, ROC, 81164
Email: ssl@ccms.nkfust.edu.tw
Wen-Rong Wu
Department of Communication Engineering
National Chiao-Tung University
Hsinchu, Taiwan, ROC, 30050
Email: wrwu@faculty.nctu.edu.tw
Abstract— In this paper, we propose a low-complexity scheme
to avoid the matrix inversion operation in the filter-based turbo
equalizer for quasi-static channels. Our idea is to pre-calculate
a set of reference optimal filters for corresponding average
reliability values, and conduct interpolation for the optimal filter.
Simulation results show that the computational complexity can be
reduced dramatically, the performance of the proposed algorithm
is almost not affected. For a channel with tens of taps, the
complexity of the proposed turbo equalizer can be an order of
magnitude less than the conventional filter-based turbo equalizer.
I. INTRODUCTION
Turbo equalization, combining equalization and decoding in
a synergistical way, was shown to be a promising technique
approaching Shannon’s capacity in a time-dispersive channel.
It enhances the equalization performance iteratively by ex-
changing the soft extrinsic information between a soft-in/soft-
out (SISO) equalizer and a SISO decoder. Due to complexity
issues, it is difficult to apply the high performance turbo
equalizer [1] in many applications even the channel length is
only in the order of tens of taps. In high-speed quasi-static
channels such as fixed wireless access, a high transmitted
symbol rate usually results in long intersymbol interference.
This will significantly increase the computational complexity
of a turbo equalizer and precludes its applicability. How to
reduce its complexity becomes an important topic and inspires
many researches works [2]–[7].
It is well-known that the convolutional encoder and the
channel can be described by trellis diagrams. With the max-
imum a posteriori probability (MAP) criterion, the optimal
trellis-based turbo equalizer, employing the BCJR algorithm,
has been proposed. Though the performance is excellent,
the computational complexity increases exponentially with
the constraint length of the encoder, the size of the signal
constellation, and the channel length. This motivated the
development of suboptimal turbo equalizers. Based on the
minimum-mean-squared-errors (MMSE) criterion, Reynolds
et al. proposed a filter-based turbo equalizer [3], where the
equalization with the BCJR algorithm was replaced by linear
filtering. Unfortunately, the optimal filter coefficients are time-
variant even the channel is time-invariant. Since the optimal
This work was supported by the National Science Council, Taiwan, R.O.C.,
under Grant NSC 96-2221-E-327-004.
filter has to be calculated for each symbol and each iteration,
the computational complexity of the approach is still high.
Later, Tu¨chler et al. [6] proposed a filter-based turbo equal-
izer with much lower complexity. Averaging the reliability (an
correctness indicator of input soft-bit value) information within
a received data block which consists of many symbols, they
proposed a block-invariant turbo equalizer, hereafter named as
Tu¨chler’s turbo equalizer. Since only one optimal filter has to
be calculated in one data block, the computational complexity
is reduced significantly. However, calculation of optimal linear
filter involves undesirable matrix inversions. Based on [6],
two lower complexity of turbo equalizers were further pro-
posed [8] but the performance and the convergence behavior
are degraded. Other alternatives are frequency-domain turbo
equalizers [7] and their complexity are usually less than time-
domain turbo equalizers, however, the applicability is strongly
dependent on the modulation scheme. It is out of our scope.
In this paper, we will focus on the complexity reduction of
time-domain turbo equalizer for conventional single carrier
modulation.
Comparing to other low-complexity approaches [2]–[5],
Tu¨chler’s turbo equalizer achieves the best compromise be-
tween the performance and complexity. In this paper, we de-
velop a scheme further reducing the computational complexity
of Tu¨chler’s turbo equalizer for quasi-static channels. Analyz-
ing the time-variant characteristics of the optimal filter, we
found that the optimal filter is a function of average reliability.
The main idea is to pre-calculate a set of reference optimal-
filters for a set of average reliability values, and conduct
interpolation for the optimal filter in each data block. In run
time, all we have to do is to estimate the average reliability in
the data block and select two reference filters. As a result,
the computational complexity can be reduced dramatically.
Note that the reference filters can be built and stored at the
beginning. Simulation results show that the performance of
the proposed algorithm is almost not affected.
In Section II, the system model and the filter-based turbo
equalizer are briefly reviewed. In Section III, the proposed
turbo equalizer is derived, and the issue of computational
complexity is also discussed. In Section IV, simulation results
are reported and compared. Finally, conclusions are drawn in
Section V.
978-1-4244-1870-1/08/$25.00 c©2008 IEEE
10−4
10−2
100
−10
−5
0
5
−0.2
0
0.2
0.4
0.6
0.8
Average Reliabilityn−th Tap Weight
M
ag
ni
tu
de
 o
f F
ilte
r R
es
po
ns
es
Fig. 3. Optimal filter responses vs. average reliability (Channel: Proakis B
channel with BPSK at SNR=5.0 dB).
where S1
∆= σ2nIN + ss
T , S2
∆= HHT - ssT , and S3
∆= s. If
the channel and the noise variance are given, the optimal filter
becomes a function of average reliability only. Here, we use
ζ(·) to denote a function. Note that this is a generic result and
it is independent of the iteration and the data-block number.
Define the j-th tap weight of f as fj . From (7), we see
that fj is a scalar function of v¯, i.e., fj(v¯). From the well-
known Weierstrass’ approximation theorem [10], we know that
if a function is continuous in a closed interval, there exists a
polynomial so that we can approximate the function in that
interval with infinitesimal error. In other words, if the first
order derivative f ′j(v¯) exists in [0, 1], fj(v¯) is interpolatable
with any infinitesimal error. In the next paragraph, we will
prove that fj(v¯) is continuous.
From the theory of linear algebra, we can see that the
inversion for a given square matrix A can be calculated with
the following general formulae,
A−1 =
adj(A)
det(A)
, (8)
where adj(A) is the adjoint matrix and det(A) is the determi-
nant of A, respectively. Define Mmn as the determinant of the
submatrix after deleting the m-th row and the n-th column,
the (n,m)-th element of the adjoint matrix can be expressed
as
[adj(A)]nm = (−1)(m+n)Mmn. (9)
Expanding f in terms of v¯ by (8), we can express the j-th tap
weight as
fj(v¯) =
N−1∑
n=0
qn,j v¯
n
N∑
n=0
pn,j v¯n
∆=
q(v¯)
p(v¯)
, (10)
where v¯ ∈ [0, 1], pn,j and qn,j are constants, respectively. Note
that fj(v¯) is a rational function with a numerator polynomial
of degree N − 1 and a denominator polynomial of degree
N . The denominator cannot be zero; otherwise, the optimal
solution will not exist. Thus, the first order derivative f ′j(v¯)
can be expressed as
f ′j(v¯) =
q′(v¯)p(v¯)− q(v¯)p′(v¯)
[p(v¯)]2
=
2(N−1)∑
n=0
sn,j v¯
n
2N∑
n=0
rn,j v¯n
, (11)
where sn,j and rn,j are constants. Again, it is a continuous
rational function. The continuous property enables us to inter-
polate the optimal filters with desired accuracy.
For simplicity, we apply the piecewise linear Lagrange inter-
polation [10] scheme. Assume that (v¯1, f(v¯1)) and (v¯2, f(v¯2))
are known as a priori pre-calulated by (7) and v¯1 < v¯ < v¯2.
For a single tap weight, we can have the linear interpolation
as
fj(v¯) = wf(v¯1) + (1− w)f(v¯2), (12)
where w is a weighting factor and is defined as
w =
v¯ − v¯2
v¯1 − v¯2 . (13)
We can then partition the full range of average reliability [0, 1]
into a number of adjoined intervals and approximate fj(v¯) in
each interval with a piecewise linear function. Similarly, the
optimal filter can be approximated as follows:
fi ≈ f˜i = wf1 + (1− w)f2, (14)
where fi is the optimal filter, f˜i is the interpolated filter, and
f1 and f2 are two pre-calculated reference filters.
Define the normalized interpolated error (NIE) as
NIE ∆=
∥∥∥f˜i − fi∥∥∥2
‖fi‖2
. (15)
If v¯1, v¯2 are close enough, the interpolated optimal filter f˜i
will be close to the optimal filter fi.
From (7), f is usually not a linear function of v¯. Uni-
formly partitioned average reliability will not give uniformly
distributed reference-filters. Heuristically, we use an partition
resulting in exponential intervals shown as follows:
v¯j =
{
e−(
λ
M−1 )·j j = {0, 1, · · · ,M − 1}
0 j =M
, (16)
where (M + 1) is the number of reference filters, λ is a
constant decaying factor for controlling the distribution of
partition values, the zero value is considered for the perfect
a priori case. All the reference average reliability values and
corresponding reference filters have to be pre-calculated and
stored as a table. The larger the entries are, the smaller the
interpolated error is (but the larger the table will be). There is
a tradeoff between interpolated performance and table size.
From (16), the decaying factor also determined the mini-
mum (except zero) average reliability value namely v¯M−1 =
e−λ. The minimum average reliability value is crucial to
both NIE and BER performance, since the optimal filter
system with a half-rate non-systematic convolutional (NSC)
code G = [5 7], an S-random [12] bit interleaver (S = 34)
with block length of 4096, and BSPK modulation. The table
size for the proposed turbo equalizer is 16. Similar to [6], a
mild and severe ISI are considered, named as Proakis B and
Proakis C, respectively. For Proakis B channel, h = [0.407,
0.815, 0.407]T , the filter length is set as N1 = 6 and N2 = 5.
For Proakis C channel, h = [0.227, 0.460, 0.688, 0.460,
0.227]T , the filter length is set as N1 = 15 and N2 = 15.
The BER performance of the proposed and Tu¨chler’s turbo
equalizers are shown in Fig. 6 and in Fig. 7, respectively.
Obviously, the performance and the convergence behavior of
the proposed turbo equalizer are nearly the same as those of
Tu¨chler’s turbo equalizer. Only in the high SNR and high
iteration region, some performance discrepancies are observed.
Because the proposed turbo equalizer is an approximation of
Tu¨chler’s turbo equalizer, it is expected that the performance
of the proposed turbo equalizer shall not be better than
Tu¨chler’s turbo equalizer. Conversely, the proposed equalizer
is better (though it is minor from 2nd to 4rd iteration) than
Tu¨chler’s turbo equalizer for Proakis C channel shown in Fig.
7. Such interesting results can be explained as follows. All
the filter-based turbo equalizers are approximation of trellis-
based BCJR turbo equalizer, thus, it is difficult to compare
which one approximates better in all cases. In other words,
the proposed turbo equalizer may outperform Tu¨chler’s turbo
equalizer is possible in some cases.
0 1 2 3 4 5 6 7 8
10−6
10−5
10−4
10−3
10−2
10−1
100
BE
R
SNR (dB)
0th
1st
2nd
3rd
4th
 
 
Proposed
Tuchler
Fig. 6. BER comparison for the proposed turbo equalizer (solid) and
Tu¨chler’s turbo equalizer (dashed) over Proakis B channel.
V. CONCLUSION
Turbo equalizer is a promising technique in the modern
transceiver design. In spit of its excellent performance, the
complexity is still an unsolved problem for many long delay
spread of channels. In this paper, an order of magnitude less
than the conventional filter-based turbo equalizer was proposed
for quasi-static channels. Exploring the quasi-static property of
a channel, the high complexity of matrix inversion operation
0 2 4 6 8 10 12 14
10−6
10−5
10−4
10−3
10−2
10−1
100
BE
R
SNR (dB)
0th
1st
2nd
3rd
4th
 
 
Proposed
Tuchler
Fig. 7. BER comparison for the proposed turbo equalizer (solid) and
Tu¨chler’s turbo equalizer (dashed) over Proakis C channel.
can be approximated by low complexity of interpolation. A
theoretical derivation is provided to support the feasibility
of the proposed algorithm. Simulation results show that the
computational complexity can be reduced dramatically while
the performance of the proposed algorithm is comparable to
the best of filter-based turbo equalizer. The key contribution
of our scheme is to extend the applicability of the filter-based
turbo equalizer to those channels with much longer length.
REFERENCES
[1] C. Douillard, M. Je´ze´quel, A. P. C. Berrou, P. Didier, and A. Glavieux,
“Iterative correction of intersymbol interference: Turbo-equalization,”
European Trans. Telecommun., vol. 6, no. 5, pp. 507–511, Sep.-Oct.
1995.
[2] C. Laot, A. Glavieux, and J. Labat, “Turbo-equalization: Adaptive
equalization and channel decoding jointly optimized,” IEEE J. Select.
Areas Commun., vol. 19, no. 9, pp. 1744–1752, Sep. 2001.
[3] D. Reynolds and X. Wang, “Low complexity turbo-equalization for
diversity channels,” Signal Processing, vol. 81, no. 5, pp. 989–995, May
2001.
[4] D. Raphaeli and A. Saguy, “Reduced complexity APP for turbo equal-
ization,” in Proc. IEEE Int. Conf. Commun. ICC’02, vol. 3, New York,
NY, 28 Apr.-2 May 2002, pp. 1940–1943.
[5] R. Le Bidan, “Turbo-equalization for bandwidth-efficient digital com-
munications over frequency-selective channels,” PhD. dissertation, Univ.
de Rennes I, Rennes, France, Nov. 2003.
[6] M. Tu¨chler, A. Singer, and R. Koetter, “Minimum mean squared error
MMSE equalization using priors,” IEEE Trans. Signal Processing,
vol. 50, no. 3, pp. 673–683, Mar. 2002.
[7] B. Ng, C.-T. Lam, and D. Falconer, “Turbo frequency domain equal-
ization for single-carrier broadband wireless systems,” IEEE Trans.
Wireless Commun., vol. 6, no. 2, pp. 759–767, Feb. 2007.
[8] M. Tu¨chler, R. Koetter, and A. Singer, “Turbo equalization: Principles
and new results,” IEEE Trans. Commun., vol. 50, no. 5, pp. 754–767,
May 2002.
[9] J. G. Proakis, Digital Communications, 3rd ed. New York, NY:
McGraw-Hill, 1995.
[10] R. L. Burden and J. D. Faires, Numerical Analysis, 7th ed. Pacific
Grove, CA: Brooks/Cole, 2001.
[11] G. Caire, G. Taricco, and E. Biglieri, “Bit-interleaved coded modula-
tion,” IEEE Trans. Inform. Theory, vol. 44, no. 3, pp. 927–946, May
1998.
[12] S. Dolinar and D. Divsalar, “Weight distribution for turbo codes us-
ing random and nonrandom permutations,” Jet Propulsion Laboratory,
Pasadena, CA, TDA Progress Rep. 42-122, Aug. 1995.
