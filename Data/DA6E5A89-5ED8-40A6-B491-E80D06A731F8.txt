1 
 
 
中文摘要 
 
近年來模指數運算廣泛應用於資訊安全與網路安全等特定領域，除了這些特定有限場
(Finite Field)或數場(Number Field)外，其他科學計算亦有機會在不同數場進行模指數運算。
然而，現有模指數演算法，其焦點不外乎指數(Exponent)或基底(Base)形式的考量與重構、
或者運用事先計算等技巧，最新文獻的計算複雜度亦顯示改進空間日益縮小，可見在相似
研究方向的技術上已不易有突破性進展。有鑒於此，本研究計畫從模數與基底的關係這個
角度研究與改進模指數演算法，並從一些現象觀察到如何改良演算法，在特定數場下大大
降低計算複雜度。 
 
關鍵詞：計算數論、模指數演算法、公鑰密碼系統。 
 
 
Abstract 
 
The computation of modular exponentiation has been wildly applied for some specific 
applications like information security and network security recently. Beside special finite field or 
number field, however, other scientific computation also has the chance to compute modular 
exponentiation where the base and modulus are composite number.  Review all the existences of 
modular exponentiation algorithms, their techniques are focus on reconsider or reconstruct the 
exponent or modulus. It shows that the improvement space of computational complexity has 
become very small in newly method under the same research direction. Hence, this project aims 
at improving the modular exponentiation algorithm by studying the relationship of base and 
modulus. From the result of advance research, our proposal indeed has the merit for reducing the 
computational complexity obviously.  
 
Keywords： Computational Number Theory, Modular Exponentiation, Public-Key 
Cryptosystems. 
 
 
3 
 
6, 7, 19, 20, 21, 22, 23, 24, 25]。這些已發表的演算法可歸為兩個研究方向：(1) 重編
碼策略(Recoding Strategy)：也就是將二進位符號表示法的權重(Weight)重新編碼
過，進而找出比較低的平均聯合加權(Average Joint Hamming Distance)。這類演算
法包括 Dimitrov[7]提出的 8 項法則、以及 Solinas[16]提出的聯合稀鬆表示法(Joint 
Sparse Form)。由於這類演算法的記憶體需求較少，適合應用於記憶體受限的裝置。
(2)事前計算策略(Pre-computing Strategy)：也就是將常用的數值事前先行計算並儲
存其值，關鍵在於如何運用少量的記憶體來減少計算複雜度。這類演算法包括滑動
視窗法(Sliding Window Methods) [2, 6]、Brickelland [17]演算法、以及 Lim-Lee [18]
演算法。由於這類演算法有較大量的記憶體需求，較適合應用於記憶體充足的裝
置。另外，事前計算策略也可搭配重編碼策略來改進效能。 
綜觀上述兩類模指數演算法，無論是單一模指數運算或者是多重模指數運算，其焦點
不外乎指數(Exponent)或基底(Base)形式的考量與重構、或者運用事先計算等技巧，最新文
獻的計算複雜度亦顯示改進空間日益縮小，可見在相似研究方向的技術上已不易有突破性
進展。有鑒於此，本研究計畫從另一個角度研究與改進模指數演算法--也就是模數(Modulus)
在演算法中的影響，在這個假想條件下，我們觀察到如何精進演算法：當模數為複合數
(Composite Number)時，有些基底的模指數運算僅需 1 個平方運算，相較於一般(例如：從
右到左二進位指數方法)模指數運算平均需 t 個平方運算加 0.5t 個乘法運算，其降低的計算
複雜度空間非常大；另外有些基底的模指數運算僅需少量平方與乘法運算，其節省的計算
量也相當可觀。 
 
 
4. 研究方法 
 
由於現有理論方法有一定的價值與貢獻，在此基礎下尋求一個更佳的替代演算法較不
會偏離研究方向與目的，同時研究進度較容易掌握，最後設定的預期目標也較容易評估與
達成。因此，本研究計畫先探討與比較現有的模指數演算法，接著分析在這些架構下，不
同複合數與不同基底會對演算法造成甚麼衝擊？能否精簡計算過程或複雜度？進而歸納或
推導其中存在的數學理論，最後再嘗試套用或推廣至其他不同的演算法類別上。 
首先，本研究計畫先對某些特殊複合數進行簡單的模指數運算觀察，在計算過程中發
現所採用的演算法並不需要走完正規的計算步驟即可完成運算。為了方便說明，我們將指
數形式表示成 
      t
ti
i eee
t
i
ee ggggg )()()( 222
0
2 1
1
0
0


 mod  N 
以從右到左二進位指數(Right-to-left Binary Exponentiation)方法為例，這個模指數運算平均
需 t 個平方運算加 0.5t 個乘法運算。假設 N=8190, g=91，則 
     91)()()(
222 10 
t
ggg   mod  8190 
也就是說只需計算 1 個平方運算後，即可得知後面的平方運算不必再計算(因值相同)，且乘
法運算亦可直接省略(因 91×91=91 mod 8190)。若 N=8190, g=47，則 
5 
 
[3] Ç. K. Koç, “High-speed RSA implementations,” RSA Laboratories, Technique Notes TR201, 
Available from URL: http://www.rsasecurity.com/ rsalabs/, pp. 9–32, Nov. 1994. 
[4] D. M. Gordon, “A survey of fast exponentiation methods,” Journal of Algorithms, vol. 27, pp. 
129–146, 1998. 
[5] S. M. Yen, C. S. Laih, and A. K. Lenstra, “Multi-exponentiation,” IEE Proceedings, 
Computers and Digital Techniques, vol. 141, no. 6, pp. 325–326, 1994. 
[6] B. Möller, “Algorithms for multi-exponentiations,” 8th Annual Workshop on Selected Areas 
in Cryptography -SAC 2001, LNCS 2259, Springer-Verlag, pp. 165–180, 2001. 
[7] V. S. Dimitrov, G. A. Jullien, and W. C. Miller, “Complexity and fast algorithms for 
multi-exponentiation,” IEEE Transactions on Computers, vol. 49, no. 2, pp. 141–147, Feb. 
2000. 
[8] W. Stallings, “Cryptography and Network Security–Principle and Practice” (Prentice-Hall, 
1999)  
[9] R. L. Rivest, A. Shamir, and L. Adelman, “A Method for Obtaining Digital Signatures and 
Public-Key Cryptosystem”, Commun. of ACM, vol. 21, no. 2, pp. 120-126, 1978. 
[10] K. Ireland and M. Rosen, A Classical Introduction to Modern Number Theory, 
Springer-Verlag, 1990.  
[11] B. Schneier, Applied Cryptography, John Wiley & Sons, New York, USA, 1996.  
[12] A. J. Menezes, P. C. Oorschot, and S. A. Vanstone, Handbook of Applied Cryptography, 
CRC Press, 1997.  
[13] E. BACH AND J. SHALLIT, Algorithmic Number Theory, Volume I: Efficient Algorithms, 
MIT Press, Cambridge, Massachusetts, 1996. 
[14] H. COHEN, A Course in Computational Algebraic Number Theory, Springer-Verlag, Berlin, 
1993. 
[15] J.-J. QUISQUATER AND C. COUVREUR, “Fast decipherment algorithmfor 
RSApublickey cryptosystem”, Electronics Letters, 18 (October 14, 1982), 905–907. 
[16] J. A. Solinas, “Low-weight Binary Representations for Pairs of Integers,” available fron 
URL: http://www.cacr.math.uwaterloo.ca/techreports/2001/ coor2001-41.ps, 2001. 
[17] E. F. Brickelland, D. M. Gordon, K. S. McCurley, and D. Wilson, “Fast exponentiation with 
precomputation,” Advances in Cryptology–Eurocrypt’92, LNCS 658, Springer-Verlag, pp. 
200–207, 1992. 
[18] C. H. Lim and P. J. Lee, “More flexible exponentiation with precomputation,” Advances in 
Cryptology-Crypto'94, LNCS 839, Springer-Verlag, pp. 95–107, 1994. 
[19] W. C. Yang, D. J. Guan, and C. S. Laih, “A New Binary Algorithm of 2-dimension 
Multi-exponentiation,” 2003 International Conference on Informatics, Cybernetics, and 
Systems (ICICS 2003), pp.391-395, Dec. 2003. 
[20] W. C. Yang, D. J. Guan, and C. S. Laih, “Algorithm of Asynchronous Binary Signed-Digit 
Recoding on Fast Multi-exponentiation,” Applied Mathematics and Computation, vol. 167, 
issue. 1, pp. 108-117, Aug. 2005. 
[21] W. C. Yang, D. J. Guan, and C. S. Laih, “Fast multi-computations with integer similarity 
strategy,” in International Workshop on Practice and Theory in Public key 
Cryptography-PKC 2005, LNCS 3386. Springer-Verlag, pp. 139–153, Jan. 2005. 
[22] M. Joye and S. M. Yen, “Optimal left-to-right binary signed-digit recoding,” IEEE 
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
