1 
 
行政院國家科學委員會專題研究計畫成果報告 
總計畫：多核心嵌入式軟體之模型驅動整合開發環境(II) 
總計畫主持人：朱正忠 
子計畫一：多核心嵌入式軟體之模型驅動整合開發環境-VMC--子計畫一:以 SysML為基礎之多核心嵌
入式系統需求塑模環境(II) 
A SysML-based Requirement Modeling Environment for Multicore Embedded System(II) 
計畫編號：NSC 98-2220-E-164-001、 NSC 99-2220-E-164-001 
執行年度：98年 8月 1日至 100年 7月 31日 
主持人：張志宏 
執行機構：修平科技大學資訊管理 
 
摘要 
需求工程在系統開發的生命週期中扮演著重
要的角色，在進行系統開發時，系統需求的撰寫
經常是透過自然語言來描述，但是由於自然語言
通常會有人為的不確定性，加上需求工程師對於
該問題領域相關知識與經驗的缺乏，往往造成系
統需求規格的模稜兩可與錯誤的需求分析。為了
避免使用者發生傳統系統開發因為需求不確實導
致專案進行困難的現象，適當的需求塑模工具可
提供工程師適當的機制來瞭解客戶想要些什麼、
分析需求、評估可行性、協商合理的解決方案、
清楚地指明解決方案、確認規格，藉此來降低專
案失敗的可能性。由於系統牽涉硬軟體規格，在
嵌入式系統開發時，需求工程的重要性，不下於
傳統軟體開發，因此一個符合嵌入式系統的需求
塑模環境更有其重要性。 
OMG 系統塑模語言(SysML)是一種利用一般
性圖形塑模語言用來分析、設計和驗證系統設計
規格，其中包括軟、硬體、資訊、人員以及設備
之大型複雜系統。SysML提供了圖形化的表示方
式來塑模系統需求、行為、結構和參數，使它可
以用來與其他工程模型分析結合；在本研究中我
們應用 SysML，並透過 OCL與 Profile加入嵌入式
系統開發限制特性，建立一個支援多核心嵌入式
系統的需求塑模環境。 
1. 前言 
嵌入式系統的歷史已經存在了 20 多年了，進
入後 PC時代後更是百花齊放，被譽為最有潛力的
兆元產業，根據 Gartner 統計數據顯示，2005 年
全球 32 位元及 64 位元的嵌入式產品，市場產值
近 80億美元，但是 2012年產值將可過 120億美
元，年複合成長率（CAGR）達 7％。 
據英國電機工程師協會的定義，「嵌入式系統
為控制、監視或輔助設備、機器或甚至工廠運作
的裝置」。由此定義可以看出過去嵌入式系統濃
厚的儀器控制特性，也因此發展速度緩慢，產品
生命週期長，不過在嵌入式系統大舉進入消費性
電子等領域後，產品更新速度加快，因此軟硬體
設計也面臨前所未有的挑戰。 
嵌入式系統為一種電腦軟體與硬體的綜合
體，特別強調「量身定做」的原則，基於某一種
特殊用途上，針對這項用途開發出獨特性的整合
系統，即客制化 (Customized)系統。根據統計，
大部分的嵌入式系統應用在通訊、工業、醫療、
軍工航太與其他(消費性電子、車用)等領域。 
雖然客製化的需求讓嵌入式系統的終端千變
萬化，但是一些基本的嵌入式系統特性一直沒有
改變，即系統資源有限且省電、因此與之配合的
嵌入式作業系統必須佔用系統資源少、即時回應
要求嚴格、可靠性要求高、與具有可配置性等，
但是嵌入式系統的成長力道，由過去的工業控制
逐漸轉向消費性電子與車用電子等領域後， 嵌入
式系統也必須能夠運作複雜的演算法，對應越來
越複雜的使用者介面、系統越來越強調即時性，
甚至強化多工性能、製造成本更要低，甚至還必
須越來越省電，更進一步將邁入多核心。 
在嵌入式硬體快速發展及應用多樣化的趨勢
 3 
這些文件間又存在著參照、衍生等關係，為能達
到提升文件整合及管理，甚至軟體開發整體效益
有效地提昇，陸陸續續有多種標準化的模型與技
術被提出以解決各階段的問題，例如，物件導向
分析與設計觀念之於新軟體架構分析與規劃的改
變；標準化模型語言(UML)[1][2][3]之於系統整體
架構、設計、狀態控制、與測試分析；設計樣板
(Design Patterns)[4]之於問題定位與有效設計模式
的導入；元件再使用(Component Reuse)之於回收
應用高效益高認同之軟件與資料模組或片段等
等。企業對於這些標準及技術片段的使用，對於
軟體開發流程定義片段的設計規格，未考量軟體
設計各個階段的連貫性與追蹤機制，大多必須以
人工方式檢視並協調來自不同工作小組的規劃與
設計的片段，而類似的問題，將進一步導致當處
理跨越階段與階段時，因不同設計之間的統合、
細部分工等作業程序採用異質模型與規範而衍生
的對應(mapping)與連結(linking)的相關問題，使得
軟體開發與研究者無法以一個一致性、協同性的
開發方式進行軟體系統的開發作業，這將使得整
個軟體開發成本居高不下，而這個模組/元件間缺
乏共通聯繫與互動追蹤機制的問題，於該系統未
來進行維護(maintenance)、演進(evolution)、與再
生工程 (re-engineering) 等必要作業時，更將益發
地增添問題的困難度與複雜度。 
在軟體開發流程(Software Process)的每一個階
段(Phase)，從需求(Requirement)、設計(Design)、
流程(Process)、實作(Implementation)一直到測試
(Testing)、維護(Maintenance)，都有其適用的Model
及技術，例如模型驅動架構 (Model-Driven 
Architecture，MDA)、敏捷軟體開發(Agile)、等等
有效率及可執行的方法。在需求擷取方面，雖然
也有需求工程(Requirement Engineering)來幫助工
程師獲得客戶要求 (Customer Needs)的相關資
訊，再經由人工作業，來轉換整理成顧客的需求
(Customer Requirements)，然後得到最終的軟體需
求 規 格 (SRS ， Software Requirement 
Specification)。但是由於將顧客要求轉換成顧客需
求必須建立在經驗的基礎上，也就是說如果工程
師缺乏相關的經驗，在將要求轉成需求的過程當
中，有可能會遺漏相關的資訊或是必要之功能。 
在開發流程之需求階段時，及時地規劃出使
用者需求的系統流程以及動態，而後開發者得以
從介面延伸出類別、方法以及類別圖。而其他的
需求，尤其在Non-Functional的方面的需求，如
Security、Performance、Reliability，則需要開發者
在設計階段訂定。近年來嵌入式軟體不論從絕對
數量或複雜度而言都是處於蓬勃發展階段，需要
開發的軟體越來越多樣化，包括手機、PDA、GPS
或是嵌入式伺服器(Embedded Server)都是全球廠
商非常看好的一塊市場。同時，在嵌入式系統中，
透過軟體實現的功能有日益增加的趨勢。傳統的
先硬體後軟體的設計方法對這種複雜的嵌入式系
統開發已不再適用。因為無論從品質或是從生產
力的角度來看，軟體和硬體都必須同時開發和驗
證。因此在需求分析階段取得精確、完整的需求
將會是降低軟體開發成本的關鍵，其重要性也是
顯而易見。 
本計畫兩年期間藉由所開發之需求塑模環
境，提供使用者方便建立完整且量化之需求、提
高嵌入式軟體需求的重用性與可靠度，並且建立
需求之間的雙向追溯，節省系統開發的成本，並
能應變市場環境以及多樣客製化等因素，成為針
對多核心嵌入式軟體一套完整的輔助開發環境。 
 
3. 文獻探討 
3.1 需求塑模 
OMG (Object Management Group)組織提出的
UML (Unified Modeling Language) 規範了標準的
模型符號(Model Notations) 來做為系統開發人員
對系統的描述。以圖形塑模語言來塑模系統，除
了因為有共同的溝通符號能減少溝通時的誤會
外，也能以系統模型的資訊來驗證設計是否符合
系統需求。 
OMG 在2001 年又提出MDA(Model Driven 
Architecture)[5]的軟體發展概念。在MDA 的架構
中，包含三種重要的模型層次，分別是： CIM 
(Computational Independent Model)、PIM (Platform 
Independent Model)、以及PSM (Platform Specific 
Model)。而其基本精神在於先不考慮任何資訊技
術，根據需求建構CIM 級的需求模型。至於PIM 
級與PSM 級的模型，則可以彼此間根據MDA 制
 5 
我們設計一個系統模式的畫面呈現給需求建立
者，包括利用模板來編輯需求，以及匯入匯出等
功能。接著，藉由專家樣板的引導，讓需求建立
者能夠清楚瞭解需要輸入什麼資訊以達到需求的
重用性。 
為 了 提 高 嵌 入 式 軟 體 元 件 的 重 用 性
(Reusability)與元件之間的關聯性，我們提出以
XML為基礎的專家樣板(expert template)，並開發
了XML為基底並結合參考硬體限制的重用嵌入式
軟體需求資料庫。 
當需求輸入完畢後，會將資訊輸出成 XML檔
案存入需求庫，成為經驗樣版的儲存體，以利日
後的使用者重用，若未來需求的內容有所改變，
也可以經由此系統模式更新需求，並以版本控制
作為解決需求重複或不一致的情況產生。使用者
並不瞭解自己真正需求的元件時，就可以依照一
套標準的專家樣板來引導使用者篩選出需要的元
件類型，將自己所需要的元件一一的選取。 
 
4.1 模型導向需求塑模 
在系統開發的第一個步驟是需求文件撰寫，需
求文件的品質將影響專案流程的進度，我們希望
使用者在需求圖形的塑模過程中，能夠讓每個需
求模型都附帶完整需求資訊，圖 4 為基於 MDA
架構的需求資訊建立流程，在 CIM階段，使用者
在需求訪談之後，套用我們所制定的需求樣版，
將所得到的需求資訊輸入需求樣版，產出初步的
SysML需求圖，並且透過需求樣版所得到的資訊
來繪製使用案例圖，這個階段為需求的雛型
(Prototype)，接下來 PIM階段，建立 SysML狀態
圖(State Diagram)與區塊定義圖(Block Definition 
diagram)以及其所對應的需求樣版內容，透過狀態
圖與區塊定義圖的分析內容可以分別得到系統靜
態 (Static)與動態 (Dynamic)的需求，最後回到
Prototype，與原始 SysML需求圖所提供的資訊整
合之後，形成一份完整的 SysML 需求圖
(Requirement Diagram)。 
 
Requirement
Diagram
Requirement 
Elicitation
Requirement 
Prototype
XML output
Static 
Modeling
Dynamic 
Modeling
CIM
PIM
 
圖 4. 需求資訊建立流程圖 
 
需求擷取與分析的推導流程，如圖 5所示經由
一連串的需求擷取分析與 SysML的塑模方式，從
使用者需求推導到系統需求。 
Stakeholder
Requirement Diagram、
Block Definition Diagram、
State Machine Diagram 
Use Case Scenario Test Case
Software 
Specification
Requirement Elicitation & Analysis
Requirement 
Analyst
User 
Requirement
Domain 
Knowledge
圖 5. 需求擷取分析流程 
SysML的需求圖有助於組織使用者的需求，
並且能夠有效地表現出不同需求間的關係。需求
圖 可 以 顯 現 出 需 求 與 需 求 之 間 的 階 層
(hierarchy)，讓系統設計師清楚地看出需求階層關
係與系統架構；還有數種表示方法來找出需求間
的關係，包括 derive (衍生)、copy(複製)、satisfy(滿
足)、verify(驗證)、refine(提煉)、trace(追蹤)等，
通 常 應 用 於 比 較 大 型 且 複 雜 系 統 方 面
[11][12][13]。 
SysML 可以應用於表示各種領域的模型元
素，靠著需求圖與視覺化的關係。事實上，SysML
的需求圖為 UML類別圖(class diagram)的擴充原
型(stereotype)，如圖 6所示: 
 
<<Metaclass>>
UML4SysML::Class
<<Stereotype>>
Requirement
-Text : String
-Id : String
 
圖 6. 需求圖擴充原型 
如圖 7 為需求推導流程，由使用者需求到系
統需求的推導。與專案關係人的需求訪談以及系
統分析師的知識領域分析，來產生使用者需求。
接下來由 SysML的塑模，來產生需求圖，此需求
圖為初階的需求圖圖形。然後由分析使用者需求
來產生 Use Case與 Scenario，Use Case與需求之
間會有 refine 關係產生。可以從 Scenario 的細部
 7 
供相對應的服務。 
相關性區塊 
RecordedVideoListManager  
VideoStreamingManager 
… … 
 
+waitForConnection()
+parseCommand()
+sigchld_handler()
+get_in_addr()
connectionServer
 
圖 9. Connection Server Block Definition 
Diagram 
 
在分析狀態圖以及子系統內每個元件所屬的
區塊，瞭解子系統內一群物件的互動情形之後，
分析師將完整的區塊定義圖繪製出來，分析師在
CIM 階段取得系統環境以及初步的需求內容，經
過分析之後，於 PIM階段將系統內部細節結構化
並且產出 SysML圖形，經過擷取系統的靜態以及
動態需求的過程，就能得到繪制出完整的 SysML
需求圖所需要的需求資訊，而分析與整合這些需
求資訊之後所得到的需求圖，是經由原始的使用
者需求不斷的被延伸(derive)、細分(refine)、滿足
(Satisfy)、 驗證(verify)、追蹤(trace)之後，方能完
成一個表現出需求之間關連性的 SysML需求圖。 
 
4.1.3 需求追蹤 
需求圖的追蹤(Traceability)是系統設計中很重
要的一部分。在需求工程中，需求追蹤是極具重
要性的一環，在某些需求改變之後，必須經由需
求追蹤以便找出需求與需求之間關係的變動與關
聯，以及該次變動是否對系統整體造成影響，一
般而言，需求建立過程中會使用需求表
(requirement table)來做需求追蹤。 
SysML需求表分為階層需求表與需求關係表
兩種格式，階層需求表可以表示需求間的階層關
係，而需求關係表則用來表示需求與需求之間的
關聯性，表 4與表 5分別為上述的兩種範例表格: 
表 4. SysML階層需求表 
Id Name Type 
需求代號 需求名稱 需求類別 
 
表 5. SysML需求關係表 
Id 
Nam
e 
Relate
s To 
Relate
s How 
Type 
需求 
代號 
需求
名稱 
相關 
需求 
關聯
性 
需求類
別 
 
在開發大型與複雜的系統的過程中，系統需
求通常可以被細分為多個子需求，叫做群集需求
(grouping requirement)，在 SysML 中的 User 
requirement 可 被 編 成 SysML requirement 
sub-package，如圖 10所示，一個需求(Requirement 
A)可再被細分、延伸為數個子需求，子需求彼此
之間具有前面我們所提到的衍生、提煉等關聯性
類型。 
 
<<Requirement A>>
<<Requirement A2>><<Requirement A1>> <<Requirement A3>>
 
圖 10. SysML群集需求圖 
 
為了避免因為人為的疏忽，例如工程師的資
歷深淺不一，而導致需求不完整等問題發生，我
們在這裡定義了一個需求問題模組樣版，需求樣
版(Requirement Template)的好處就是可以導引使
用者依循制定的需求欄位來描述需求，避免因為
前面所陳述因為需求的模稜兩可與不完整而造成
需求品質的下降，提供系統分析師來進行使用者
或是客戶的初步需求擷取，定義出一系列的需求
欄位，以擷取精確以及量化的需求為目標，來定
義每個選項，以及進而對使用者在編輯需求的同
時對系統需求做出完整的需求導引，並且找出軟
體的主要需求、功能性與非功能性需求，提供 CIM
以及 PIM階段所需的基本需求資料，勾勒出系統
的主要架構。 
 
4.1.4 OCL條件限制 
我們利用OCL來規範使用者在輸入 Profile時
的敘述方式，這樣可以藉由驗證使用者所輸入的
需求內容是否符合該欄位所制定的 OCL條件，避
免使用者輸入不當的數據或是需求文件內容，如
表 6是我們應用 OCL做出條件限制的範例之一。 
表 6. OCL條件限制 
樣版 
內容 
資料 
型態 
條件 
限制 
OCL定義 
客戶端 整數 數值不 Self.CleintNum>0 
 9 
我們採用「需求模板(Requirement Template)」
(如圖 13)來協助使用者思考所需要的各類需求。
此模板是基於功能及操作面去制定的，並透過系
統內部的資料結構來補足必要的硬體資訊或參數
資訊。 
«metaclass» 
UML4SysML::Class
+internetConnection : string
+systemConnection : string
+fileStoring : string
+fileDownloading : string
+fileEncoding_Decoding : string
+dataRTtransfering : string
+userRecognition : string
+pwUserManagement : string
+fileInfoDisplay : string
+cpuInfoDisplay : string
+memInfoDisplay : string
+powerInfoDisplay : string
+platformInfoDisplay : string
+taskScheduling : string
+taskTimeLimiting : string
+functionAtomDefinition : string
+preCondtionDefinition : string
+postCondtionDefinition : string
+mathFunctionExecution : string
+codeOutput : string
+chartOutput : string
+performanceReq : object
+testReq : object
+acceptanceReq : object
+safetyReq : object
+reliabilityReq : object
+maintainanceReq : object
<<stereo type>> 
reqUserTemplate
 
圖 13. 需求模板 
以下是 VMC-REM系統操作畫面截圖。首先
使用者透過圖 14畫面，將訪談到的使用者需求，
輸入到 VMC-REM。 
 
圖 14. 新增基本需求 
 
填寫完成後，按下 OK，產生 需求列表(圖 15) 
 
圖 15.系統需求列表 
按下另存新檔，選擇塑模資訊放置位置(圖
16) 
 
圖 16. 塑模資訊存檔 
 
若需要勾選要刪除的項目，刪除需求(圖 17) 
 11 
 
圖 23. 對應產生 SysML需求圖 
使用者也可以產生輸入測試需求接受條件，
提供給子計畫七產生自動測試使用(圖 24)。 
 
圖 24. 測試需求產生 
 
圖 25. 測試需求接受條件輸出 
按下輸出 XML，產生 XML檔案，位於 eclipse
根目錄下。 
 
圖 26. XML文件轉換 
 
5. 結果與討論 
在這計畫中，我們分析了以模型導向架構為
基礎之多核心嵌入式系統設計需求分析流程，透
過這一個流程，需求分析師可以逐步建立相關的
嵌入式系統需求條件，減少因為需求分析師經驗
不足造成需求訪談不確實引發需求分析不正確的
機會。 
此外我們也建立了一套SysML多核心嵌入式
系統需求塑模環境 VMC-REM雛型，透過這套環
境，使用者可以在其中輸入系統需求相關資訊，
並將相關可再用需求儲存/擷取，同時可以轉換/
繪製 SysML相關塑模圖形的，提供一套視覺化的
需求塑模環境，相關需求分析資訊也可以輸出成
XML格式提供給其他子計畫/工具，做後續設計、
程式碼產生、最佳化與測試使用。 
此外，系統也可以將需求間的關係自動建立
對應需求追蹤矩陣，幫助專案需求管理。 
目前關於需求塑模分析的研究，多著重於需
求擷取與管理，對於需求塑模分析仍相當缺乏，
總結本計劃執行三年下來，初步達成本計畫當初
設定之目標，完成需求擷取與圖形化塑模環境的
建立。 
在成果國際合作方面，目前已與 Dakota State 
University 的 Dianxiang Xu 教授達成合作協議，
希望進一步將其 ISTA (Integration and System Test 
Automation)程式碼自動產生工具 (關於徐教授
ISTA 教授 ISTA，曾發表於 PETRI NETS 2011, 
LNCS 6709, pp. 308–317, 2011，目前此工具已被
三星電子應用於部分電子與數位媒體產品測
試)，與本計畫的 SysML-based 需求塑模環境整
合，達成自動化測試目標。 
 
6. 參考文獻 
[1] OMG. The Unified Modeling Language (UML). 
http://www.uml.org. 
[2] Rambaugh, J.R., Blaha, M.R., Premerlani, W., 
Eddy, F., and Lorensen, W. Object Oriented 
Modeling and Design, Prentice-Hall. 1990. 
[3] Kruchten, P. “Architectural Blueprints-The 
“4+1” View Model of Software Architecture “. 
 13 
蹤性之探討 ," Proceedings of the 2010 the 
E-Learning and Information Technology 
Symposium, 31 (2010.03). 
10. Chang, C.H.; Lu, C.W.; Chu, C.W.; Shih, C.H.; 
Hsiung, P.A.; Yang, C.T.; Hsueh, N.L.; and 
Koong, C.S.;" SysML-based Requirement 
Modeling Environment for Multicore 
Embedded System," Proceedings of the 25th 
Annual ACM Symposium on Applied 
Computing (SAC'10), Volume III, pp. 
2224-2228, 22-26 (2010.03). (EI) 
(NSC97-2218-E-164-001, 
NSC98-2220-E-164-001, 
NSC98-2220-E-029-001, and 
NSC98-2221-E-164-012) 
11. Chang, C.H.; Chen, Y.W.; Chen, J.J.; Chu, C.W.; 
Lu, C.W.; and Chao, T.Y., “SysML-based 
Modeling Environment for Multicore 
Embedded System," Proceedings of the 20th 
Workshop on Object-Oriented Technology and 
Applications, pp. 76-84, 20 (2009.11). (NSC 
97-2218-E-164-001, NSC98-2220-E-164-001) 
12. Tung, H.Y.; Chang, C.H.; and Chu, C.W., 
“Using UML to Implement Application on 
Different Embedded System," Proceedings of 
the 20th Workshop on Object-Oriented 
Technology and Applications, pp. 1-6, 20 
(2009.11). (NSC98-2220-E-029- 002) 
13. Chang, C.H.; Liao, W.B.; Chu, C.W.; Xu, C.Q.; 
and Tong, C.Q., “XML-based Embedded 
Software Reusable Component Library 
System," Proceedings of the 20th Workshop on 
Object-Oriented Technology and Applications, 
pp. 115-121, 20 (2009.11). 
14. Chang, C.H.; Lu, C.W.; Chu, C.W.; Chen, Y.W.; 
and Ger, R.E., “A SysML-based System 
Requirement Modeling Process," Proceedings 
of the 3rd Information Education and 
Technological Application Conference 
(IETAC2009), 6 (2009.11). (NSC 
97-2218-E-164-001, NSC97-2218-E-035-003, 
NSC98-2220-E-164-001, 
NSC98-2220-E-029-001) 
15. Shih, C.H.; Wu, C.T.; Lin, C.Y.; Hsiung, P.A.; 
Hsueh, N.L.; Chang, C.H.; Koong, C.S.; and 
Chu, C.W., “A Model-Driven Multicore 
Software Development Environment for 
Embedded System," Proceedings of the 33rd 
Annual IEEE International Computer Software 
and Applications Conference, vol. 2, 
pp.261-268, 20-24 (2009.07). (EI) 
(NSC97-2218-E-035-003) 
16. Chen, Y.W.; Chen, J.J.; Chang, C.H.; and Chu, 
C.W., “User Requirement Modeling Process 
using SysML," Proceedings of the Fifth Taiwan 
Conference on Software Engineering, pp. 15-21, 
19-20 (2009.06). (NSC97-2218-E-164-001) 
17. Chen, H.H.; Chao. T.Y; Chang, C.H.; and Chu, 
C.W., “Prototyping Software Development with 
UI Modeling Adaption," Proceedings of the 
Fifth Taiwan Conference on Software 
Engineering, pp. 258 – 266, 19-20 (2009.06). 
18. Hsiung, P.A.; Lin, S.W.; Chen, Y.R.; Hsueh, 
N.L.; Chang, C.H.; Shih, C.H.; Koong, C.S.; 
Lin, C.S.; Lu, C.H.; Tong, S.Y.; and Su, W.T., 
“Model-Driven Development of Multi-Core 
Embedded Software," Proceedings of the 
Second International Workshop on Multicore 
Software Engineering (IWMSE09), 18 
(2009.05). (NSC97-2218-E-035-003) 
19. Chang, C.H.; Lu, C.W.; and Chu, C.W., “Using 
SysML and MORE to Support Software 
Maintenance and Integration," Proceedings of 
the APSEC2008 ATGSE Workshop, pp. 23-24, 2 
(2008.12). (NSC97-2218-E-164-001, 
NSC97-2221-E-164-006) 
 
 
 
 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/05
國科會補助計畫
計畫名稱: 子計畫一:以SysML為基礎之多核心嵌入式系統需求塑模環境(2/2)
計畫主持人: 張志宏
計畫編號: 99-2220-E-164-001- 學門領域: 自由軟體暨嵌入式系統
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
辦理 ACM SAC 2011 國際研討會(2011/3/21~3/24) 
在成果國際合作方面，目前已與 Dakota State University 的 Dianxiang Xu
教授達成合作協議，希望進一步將其 ISTA (Integration and System Test 
Automation)程式碼自動產生工具(關於徐教授 ISTA 教授 ISTA，曾發表於 PETRI 
NETS 2011, LNCS 6709, pp. 308–317, 2011，目前此工具已被三星電子應用
於部分電子與數位媒體產品測試)，與本計畫的 SysML-based 需求塑模環境整
合，達成自動化測試目標。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
