  
tested by integrating the reader, the savant, the ONS 
server, and the database server into RFID network using 
TCP/IP protocol.  
The organization of this project is described as 
follows. Section I introduce the motivation and key is-
sues in this study. The RFID system and network archi-
tecture is then introduced and interpreted in Section II. 
Section III clarifies the middleware design of Savant. 
The system platform prototype of RFID network is 
proposed and implemented by ARM-based embedded 
system t in Section IV. The feasibility evaluation of 
system platform is demonstrated by integrating the RFID 
network using Ethernet protocol. The testing results are 
also presented and discussed. Finally, the conclusion is 
given in Section V. 
II. RFID SYSTEM AND NETWORK 
A. Introduction to RFID System 
A basic RFID system consists of the tags, the 
readers, the computer host, and the applications. The tag 
data electronically programmed with unique information 
such as EPC. The antenna of readers emits the ra-
dio-frequency signals to activate the tag and read/write 
data to it. Therefore, the antenna acts as a conduit be-
tween the tag and the readers, which controls the sys-
tem's data acquisition and communication. Through the 
contact-less technologies of radio-frequency sensing, the 
readers of RFID systems may take the multiple data of 
electronic tags at the same time, hence the performance 
of identification systems have greatly updated such as 
the reading velocity, capability, and distance. The elec-
tronic tags may store the bulk data and possess the long 
lifetime for using. The tolerance of tags and the identi-
fication ability of readers for the harsh environments are 
very superior. 
RFID system possesses the networking interrela-
tionship among the hardware, the software and some data 
interfaces. The electronic product code (EPC) stored in 
tags may provide the precise identification for the ob-
ject-tracking and inventory management by the internet 
network to increase the transmission efficiency of 
products. In order to construct the RFID information 
system, the networking architecture is composed of these 
three executing activities depicted as Figure 1 [5][6]. The 
EPC Global proposes the specific standards to support 
the operating principles in the different layer. 
 
  
 
  
 
 
 
 
Fig. 1. Three executing activities of RFID system [5]. 
i. EPC Physical Object Exchange Standard 
Users may exchange the physical objects with EPC 
tags. The physical objects represent the transmitted 
goods or the tracked persons. This standard defines the 
tracking capability of RFID system while the tagged 
object performs the mobile behavior and is used to im-
plement the RFID-based platform prototype for object 
surveillance in this study. 
ii. EPC Data Exchange Standard 
Via the networking interconnection, the users may 
exchange the tag data to monitor the whereabouts of 
physical objects. This standard will allow the data-shared 
service between the users to increase the convenience of 
data management and searching by the RFID network. 
iii. EPC Infrastructure Standard 
In order to share the EPC data, the data format of 
tags should be defined and unified on RFID network. 
The EPC data are collected and recorded in the system 
database for the specific applications. Therefore, this 
standard defines the interfacing protocol for the trans-
formation of EPC data so that the data format of tags is 
the same in the RFID network. 
The institutions of protocol specifications will pro-
vide the exchange standard of object information among 
users and play a key role for data communication. Fur-
thermore, these standards also provide the architectural 
guidance to end users and commercial vendors seeking 
the proper solution to implement RFID system. Table 1 
describes the overall architecture of the EPCglobal 
framework, showing how the different components fit 
together to form a cohesive whole. 
Item Specifications 
EPC Data Exchange 
Standard 
EPC Information Service (EPCIS) Data 
Format 
EPC Information Service Search Interface
Object Name Server (ONS) 
EPC Infrastructure 
Standard 
EPC Tag Data Format 
Reader Protocol 
Reader Manage 
Tag Data Render 
EPCIS Collect Interface 
EPC Information Service Data Format 
EPC Physical Object 
Exchange Standard 
UHF Class0 Gen1 Tag Protocol 
UHF Class1 Gen1 Tag Protocol 
UHF Class1 Gen2 Tag Protocol 
EPC Tag Data Format 
Table 1. Standard specifications of RFID architecture 
framework [5]. 
B. Networking Architecture of RFID System 
The networking architecture of RFID system based 
on EPC standards consists of the readers, Savant, PML 
Server and ONS Server depicted as Figure 2. Via the 
transmission protocol of radio-frequency technology, the 
readers receive continuously the tag data in the front-end 
of RFID networking system. The received data are 
transfer to the savant computers. Since the bulk of tag 
data may contain the duplicated or invalid data, the Sa-
vant host plays a role of data filter to catch the significant 
information. By the extraction of savant computer, the 
data quantity is decreased in the back-end of network and 
the system performance is further increased [5][6]. 
Object Name Services (ONS) Server is used to look 
for the vendor information of products corresponding to 
  
protocol in the internet. The core of TCP/IP protocol is 
based on the internet layer and the transport layer. The 
Internet Protocol (IP) is the transmission approach of 
TCP/IP and responsible for processing the data packet 
and deciding the transmitting path of the packet. The 
TCP protocol is responsible for the message division and 
provides the internet linkage for the data transmission. In 
this project, to keep the data flowing of the communica-
tion channel and increase the reliability of data trans-
mission, the TCP/IP protocol is used to integrate the 
network interfaces of RFID system into a system plat-
form prototype.  
Via the internet, the linkage between the embedded 
system and PC servers is implemented by the program-
ming interface of networking sockets. The socket inter-
face is one of the Application Programming Interfaces 
(API) which is the media between the application pro-
gram and the transmission protocol in the internet. In the 
application of embedded systems, the built-in function 
“socket()” is used to create the new port of the commu-
nication socket in the operating system of computers. 
The master-slave relationship is one important consid-
eration of TCP/IP communication. The reader waiting 
for the commands from the Savant acts as the Server 
terminal and the Savant then plays the role of Client in 
the tag interface. In the ONS interface, ONS always re-
ceives the queries from Savant. Therefore, the Savant is 
also the Client and ONS is the Server side. Similarly, the 
remote database is, in general, passive and waiting for 
data input from the Savant in the database interface. In 
this case, the Savant also acts as the Client role and the 
database become the Server terminal. After the socket 
has been created, the port number of the TCP layer is 
established to complete the communication channel of 
data transmission. Figure 4 depicts the executing pro-
cedures of data transmission among the different inter-
faces in the TCP/IP-based RFID network. 
 
Fig. 4. Executing procedures of data transmission among 
the different interfaces in TCP/IP-based RFID network. 
D. ONS Interface 
While the reader receives the tag data, the vendor 
ID in the EPC may translate the physical IP address by 
way of the ONS interface of the Savant. The command 
format of the ONS search adopts the URL standard. The 
standard definition of URL is 
“Object.Manager.Type.id.onsepc.com” where Object 
represents the EPC Object Number, Manage is the EPC 
ode Manage Number, and Type shows the Header code 
of EPC data, respectively [7][8]. 
The procedures of the ONS queries from the Client 
side are listed step by step as follows. 
i. The Savant interprets the received EPC data into the 
data format of standard network, such as 
“urn:epc:id:type:0614141.0000024.400.” 
ii. To execute the ONS queries, the network format is 
transformed into the Domain Name format. 
1. Removing the “urn:epc:” part, such as 
“id:sgtin:0614141.0000024.400.” 
2. Removing the Serial Number, such as 
“id:sgtin:0614141.0000024.” 
3. Replacing the symbol ‘:’ by ‘.’, such as  
“id.sgtin.0614141.0000024.” 
4. Reversing the order of previous step, such as 
“0000024.0614141.sgtin.id.” 
5. Appending the string “onsepc.com” to the last 
and then completing the standard ONS query, 
such as “0000024.0614141.sgtin.id.onsepc.com.” 
iii. Finally, through the Savant interface, the standard 
ONS query is sent to ONS server and exchange the 
corresponding IP address of the remote database. 
After the address transformation, the valid EPC data 
will be transmitted to and write into the remote database 
(EPDIS or PML server) by way of the Ethernet network. 
E. Database Interface 
Via the database interface of the Savant, the tag data 
is sent to the remote database by the text format of XML. 
Extensible Markup Language (XML) is a simple, very 
flexible text format derived from SGML and also playing 
an increasingly important role in the exchange of a wide 
variety of data on the Web and elsewhere [7]. 
Figure 5 shows the text format of XML. The UID 
and EPC codes of tag are supposed as “E0 04 A4 D8 19 
01” and “00 09 5E FD 00 18 00 01”. The database in-
terface is responsible for transforming the EPC data into 
XML format. Here, the definitions of XML fields are 
given as follows. “Version” field represents the EPC type, 
“Manage” is the vendor code, “Object” is the product 
code, “Serial” shows the serial number of product, 
“UID” expresses the tag UID, and “Reader” is the reader 
ID, respectively. The whole XML record is used to the 
data source of the system database. 
 
Fig. 5. XML text format. 
IV. IMPLEMENTATION OF SYSTEM PLATFORM 
PROTOTYPE 
A. Development and Simulation of Savant Middleware 
In this project, the integrated functions of Savant 
middleware are implemented by the Samsung S3C4510B 
embedded system developed by Microtime company, 
depicted in Figure 6. Embedded System is regarded as 
  
data, then the data is transformed to the URL and XML 
format. Next, the URL data is translated the IP address of 
remote database by way of the query of ONS such that 
the XML data is successfully transmitted to the remote 
database through the Ethernet network. So the Savant 
plays a very important role in the RFID network, like as 
the pivot or engine of the overall system. The system 
integration and testing are discussed in the following. 
Fig. 10. System architecture of RFID network proposed. 
The AWID reader only possesses the basic capa-
bility of reading and writing the tag data. The intelligent 
reader consists of the AWID reader and the embedded 
system which implements the Savant middleware 
through the Ethernet connection. The Savant middleware 
plays the key role of data transformation and network 
routing in the infrastructure of RFID systems and also 
acts as the data filter to extract the significant informa-
tion. After Savant is started, the system looks automati-
cally for the default reader and creates the interconnec-
tion by way of Ethernet network. The hardware specifi-
cations of the reader are then sent back to the Savant and 
to the system console. The messages of Savant connected 
with the reader are depicted in Figure 11. The LCD dis-
play appears the received massages of Savant while the 
connection is built to the reader. 
 
Fig. 11. Messages of Savant connected with the reader. 
As depicted in Figure 12, the Savant gets the 
command from system console and analyzes the com-
mand type and implication to display the message on the 
LCD panel. The Savant is also responsible for control-
ling the reader operations. While the command is suc-
cessfully executed, the reader transmits the related data 
to Savant which performs the corresponding data process 
for the command. If the previous command from the 
console is the system command type, then the Savant 
transmits the received data back to the console. There are 
two kinds of the messages for LCD display. One ex-
presses the Savant has received the console command 
and exhibits the command type as showed in Figure 13. 
 
Fig. 12. System console of Savant. 
 
Fig. 13. LCD messages of the console command  
on Savant. 
The other indicates the Savant is successfully re-
ceived the tag data from the reader and return back to the 
system console. If the original console command is the 
tag type, then the Savant will convert the received data to 
the URL or XML format. First the console sends the 
tag-read command to the Savant and the Savant controls 
the reader to get the UID code of tag. The UID code read 
from the reader is sent to the console by way of the Sa-
vant. Next, the Savant will try to read the EPC data of tag.  
From the EPC data received, the Savant extracts the 
version, vendor, product code and transform into the 
URL format for ONS query. Next, the UID code com-
bined with EPC data is converted into the XML format 
for the internet transmission. Figure 14 displays the 
transformed URL format on LCD panel of Savant. 
 
Fig. 14. LCD displays for URL format on Savant. 
While the Savant finishes the URL transformation, 
the URL data is transmitted to the ONS for searching the 
