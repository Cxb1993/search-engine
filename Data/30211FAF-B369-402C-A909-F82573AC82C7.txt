在體感互動環境中最佳化角色反應動作之研究 
The Research on Developing an Optimal Responsive Control for 
Character Animation in a Motion Sensing Environment 
 
盧天麒 
國立嘉義大學資訊工程學系 
60004 嘉義市鹿寮里學府路 300 號 
TEL: +886-5-2717730 
tclu@mail.ncyu.edu.tw 
摘要 
         
虛擬角色動作的製作，傳統上是利用美術設計人員手動
設計角色動作，假如美術設計人員不具備物理相關知識時，
所製作之角色動作即無法具有自然之物理作用。本計畫利用
PD 控制器加上物理引擎模擬虛擬角色動作。首先從來源檔案
中擷取虛擬角色骨架與動作資訊，接著建立虛擬環境與虛擬
角色骨架，然後計算虛擬角色動作，之後利用 PD 控制器，
將角色當前所模擬的動作與角色的來源動作作為參數，與比
例及導數的增益係數做調整，計算角色追蹤來源動作之力矩，
施加力矩至虛擬角色以追蹤來源動作。最後將施加追蹤力矩
之後的角色動作，經物理引擎之正向運動學方法模擬動作。
此外，虛擬角色可接受外力並利用平衡機制試圖維持身體平
衡，角色在模擬反應動作時持續追蹤來源動作，藉此回復為
來源動作。附加物理屬性的虛擬角色可模擬出自然的動作，
並可將模擬角色動作儲存，應用於電腦動畫或遊戲中使用。 
關鍵詞 
電腦動畫、正向運動學、動作追蹤、PD控制器、反應動作 
 
1. 簡介 
 
伴隨著電腦動畫與遊戲產業的迅速發展，使用者們對於
虛擬角色擬真程度的要求也跟著提高。在最近的電腦遊戲中，
都強調玩家的角色是模擬真實情境，像是許多動作或是射擊
遊戲，除了以高度運算表現畫面，還會使用物理引擎為場景
模擬運算，例如物件的爆炸或是碎裂效果，以達到自然擬真
的效果。而在遊戲與電腦動畫當中，使用者們最常接觸到的
部分的就是虛擬角色與虛擬環境的互動，所以使用者們所要
求的就是虛擬角色與虛擬環境互動所表現的自然角色動作。
以電影變形金剛或是遊戲戰爭機器三為例，虛擬角色在虛擬
環境當中會有許多互動，而使用者對於虛擬角色有高度的擬
真要求。 
虛擬角色在虛擬環境之中會受到許多的外力作用，例如
彈力、摩擦力、重力等，而傳統製作虛擬角色動畫的方式是
利用美術設計人員手動地製作虛擬角色動作。而在製作受物
理作用的虛擬角色動作的方式，也是利用美術設計人員手動
製作受物理作用的虛擬角色動畫。如此製作角色動畫的原因，
有一部分是因為早期電腦的計算能力不足，無法承受計算受
物理屬性作用的虛擬角色動畫的負載，以花費動畫設計人員
的成本換取電腦計算的成本。儘管如此，動畫設計人員卻可
能因為缺乏相關的物理理論知識，製作出違反物理屬性的虛
擬角色動畫。隨著時代的演進，目前電腦的計算量已增加到
足以承擔大量的計算負載，並可以計算符合物理屬性的角色
動畫。在現今的電腦圖學研究之中，如何應用電腦計算符合
物理屬性的虛擬角色動畫已經成為一個熱門的研究議題。 
        在本計畫中，我們將記錄在標準檔案中的虛擬角色檔案，
將虛擬角色讀入至虛擬環境之中，接著為虛擬角色附加物理
屬性，使虛擬角色受力作用時同時符合物理屬性的作用，接
著利用 PD 控制器(Proportional-Derivative controller)追蹤虛擬
角色來源動作，最後則是應用正向動力學方法在虛擬環境中
模擬虛擬角色動作。 
本計畫的目的為產生自然受力的虛擬角色動畫，因此本
計畫將角色來源動作加入物理屬性模擬。系統範圍包含建置
虛擬角色與虛擬環境，並建立自訂動作格式，接著在系統模
擬時，角色將追蹤來源動作，此時角色受重力與接觸力的作
用。如果角色受到小幅度的外力作用，角色將進行反應動作，
並以平衡機制使角色維持平衡，接著追蹤來源動作回復來源
動作模擬。 
為了達成本計畫的目標，本計畫使用了數個方法完成系
統，在這邊逐一介紹。首先讀取角色資訊，為角色設定物理
參數，例如質量等。接著計算虛擬角色動作，使用來源檔案
的動作資訊建立動作格式，然後利用物理引擎建立虛擬環境，
最後在模擬動作的流程中，利用 PD 控制器 (Proportional-
Derivative controller)追蹤方法，以目前模擬的關節角度與關
節速度、預期的來源動作關節角度及關節速度作為參數，計
算出所需的力矩，使模擬的角色動作修正，以追蹤來源動作。
最後則是將虛擬角色受到追蹤力矩之後的角色動作，利用物
理引擎中的正向運動學方法模擬，計算出下一時步後的虛擬
角色狀態。 
在論文的章節安排上，首先在第二章介紹與本論文相關
之研究；在第三章說明本計畫所提出的主要方法，從來源檔
案擷取資訊、建立虛擬角色及虛擬環境、虛擬角色動作追蹤
方法以及角色動作模擬；在第四章中描述本計畫之實驗結果；
在第五章則是討論本計畫之結論與未來工作。. 
 
且因為對於硬體要求較高，其穩定度與應用性會受到限制，
因此本計畫採用 ODE作為模擬角色的物理引擎。 
 
2.2.2 反應動作 (Responsive Motion) 
 
        利用讀取動作擷取器所得到的資料，進一步生成反應動
作是許多學者研究的方向。而由於反應動作的計算需要大量
計算其物理限制，所以在反應動作的研究中[15]，有一部分是
簡化來源角色的物理屬性以達到接近即時性計算結果。  
Yuting Ye and C. Karen Liu 在 2008年的研究中，利用物理引
擎模擬反應動作，論文主要研究就是在小幅度的環境變化或
是外力生成反應動作。研究主要使用混合方法模擬反應動作，
對於虛擬角色的上半身是利用主成分分析方法以自由度
(Degrees of Freedom，DOFs)作為特徵，將虛擬角色分為可以
驅動及不可驅動的部分。藉由此方式簡化虛擬角色的物理屬
性以降低計算反應動作的計算量。不可驅動的部分受到外力
時會依照外力作出相對的反應，而可驅動的部分則是試圖維
持輸入動作。利用這種特性將不可驅動的部分取出作為虛擬
角色的反應動作。虛擬角色的上半身屬於不可驅動的部分，
故會對外力作用產生反應，而虛擬角色的下半身則屬於不可
驅動部分，因此虛擬角色的下半身受到外力作用時會維持來
源動作，維持穩定的行走動作。 
        在另一部分反應動作的研究中[16][17]，為了得到擬真的
反應動作，模擬反應動作時並不是在模擬流程全程計算反應
動作，而是在虛擬角色受力之後先計算受力反應，並且從動
作資料庫中找尋最適合的反應動作進行串接，以模擬完整受
力之後的反應動作。Victor B. Zordan 等人在 2005年的研究當
中，計算虛擬角色對於其他虛擬角色所產生的衝擊所產生符
合物理屬性的反應，最後串接到適合的反應動作，如圖 2.5
所示。Victor B. Zordan 等人的研究當中，把物理模擬與反應
動作進一步的結合，虛擬角色將依照環境的影響程度，生成
適合的反應動作。研究主要利用支持向量機(Support Vector 
Machine，SVM)訓練角色選出最適合的反應，目的是阻止或
是閃避威脅，如果威脅無法避免，則與反應動作結合，串接
至威脅的反應動作。而支持向量機在訓練的時候則是經由讀
入所有給定的情境，依照計算出的傷害，得到情境最適合的
預期動作。 
        By Bing Tang等人在 2006年的研究當中，施予虛擬角色
一個不受預期的力，產生模擬角色跌倒的動作，在此研究中
加入了生物學的概念，像是人跌倒的時候會擺動雙手，目的
為改變整體的重心以達到平衡，接著以平行模擬的方式同時
模擬角色跌倒的軌跡及結合物理屬性尋找適當的回復動作，
產生出合理逼真的動作。 
 
2.3 動力學方法(Dynamics) 
 
動力學方法是模擬虛擬角色動作的方法，動力學所考慮
的是物體經由力的作用所產生的運動方式。虛擬角色在虛擬
環境之中會受到許多的作用力作用，例如外力、摩擦力、重
力等，動力學方法就是利用這些作用力，與虛擬角色本身的
物理屬性，像是質量、物體的慣性等，計算虛擬角色因為力
所產生的運動。動力學方法主要分為兩種，正向動力學與反
向動力學，正向動力學是計算虛擬角色受到力的作用所產生
的反應，計算虛擬角色關節在受力作用之後的關節速度與關
節加速度，而反向動力學則是從目前虛擬角色的關節加速度
以及關節速度計算所受到的力。 
         在動力學方法中，Featherstone與 Orin 在 2000年的論文
中 [18]整理了數個對於虛擬角色模擬動作的方法，像是
Recursive Newton-Euler Algorithm 、 Composite-Rigid-Body 
Algorithm、Articulated-Body Algorithm等。 
Recursive Newton-Euler Algorithm是反向運動學的一種方法，
在計算時先計算從根節點向末端節點藉由角速度計算各個節
點的線性速度及加速度，而外力的計算則是由末端節點往回
推到根節點。 
Composite-Rigid-Body Algorithm 方法中主要研究的是利用關
節空間所表示的慣性矩陣，將慣性矩陣以關節空間表示可以
較為有效率計算施力結果。在計算時是將物件以群組的方式
做計算，將物件所連接的子物件作為一個群體。經由以關節
空間表示的慣性矩陣可以直接計算在每個關節上施力的傳遞。
Articulated-Body Algorithm方法是正向動力學的方法，在施力
的計算中，力與物體的加速度可以利用牛頓第二定律將兩項
做整合，而在計算中，如果以知物件所受的施力，即可運用
關係式將物件的加速度求出，再將物件的加速度轉到關節座
標中，即可得到最後關節的加速度。在演算法中是由末端節
點推回至根節點做關節加速度的運算。 
  
3. 虛擬角色模擬動作 (Character Motion 
Simulation) 
 
3.1 研究架構 
圖 3.1 系統流程圖 
 
        本計畫的目的為使用物理屬性模擬虛擬角色動畫，使虛
擬角色動作能夠更真實。而本系統的流程圖如圖 3.1 所示，
首先系統將讀取虛擬角色的資訊，包含骨架的長度、方向、
位置、旋轉等，以及虛擬角色關節的型別分類及關節角度限
制，將虛擬角色在虛擬環境當中建立骨架，接著則是經由輸
在虛擬角色的設定中，骨架與骨架之間需要以關節作為連接，
關節的設定是限制骨架之間相對的位置，以及骨架之間相對
的轉動。在建立虛擬角色時，虛擬角色的關節設定是很重要
的，現實世界中的生物，其關節的自由度也不是每個關節都
相同，關節的分類有以下幾種： 
1.球狀關節 (ball and socket joint) ：球狀關節的自由度為三，
代表其關節可以依照三個方向旋轉，而球狀關節的設定代表
關節只有固定骨架相對位置的作用。在骨架定義中使用球狀
關節的部分在骨盆與軀幹連接的關節。 
2.萬向接頭 (universal joint) ：而萬向接頭則是自由度為二的關
節，代表的意思是其旋轉方向只有兩個互相垂直的方向。骨
架中使用萬向接頭的部分在於肩關節、骨盆與雙腿連接的關
節以及踝關節。 
3.鉸鏈關節 (hinge joint) ：鉸鏈關節是自由度為一的關節，其
運動方向只能以單一軸旋轉。使用鉸鏈關節的部分在手肘、
膝蓋關節。 
除了關節的種類之外，還需要為各個關節做旋轉角度的限制，
讓角色骨架的旋轉可以符合實際的生物屬性。 
 
3.3 計算角色動作 
 
        為了模擬虛擬角色動作，我們必須先擷取來源檔案中動
作的格式，並且將虛擬角色動作儲存，以便在不同時間中套
入動作至虛擬角色上，以模擬虛擬角色動作。 
而虛擬角色動作的定義，本計畫參考[19]的公式定義關節速度
以及關節加速度，作為來源虛擬角色動作。關節速度與的定
義如式 3.2所示： 
 
 ̇  
  
    
   
  
                             式 3.2 
 
        其中 ̇代表的是關節速度，  
 代表的是第 j 個關節點在第
N 個影格中的關節角度值，而  
   代表的是第 j 個關節點在
第 N-1 個影格中的關節角度值，  代表的是間隔時間。接著
計算的是關節加速度，如式 3.x所示： 
 
 ̈  
 
   
    
 
   
   
 
   
                         式 3.3 
 
        其中 ̈代表的是關節加速度，  
   代表的是第 j 個關節點
在第 N+1 個影格中的關節角度值，  
 代表的是第 j 個關節點
在第 N 個影格中的關節角度值，而  
   代表的是第 j 個關節
點在第 N-1個影格中的關節角度值，  代表的是間隔時間。 
 
3.4 虛擬環境設定 
 
        在模擬虛擬角色的動作時，虛擬角色所在的模擬環境也
必須做設定，在系統中是利用設定物理引擎參數設定虛擬環
境的內容，包含虛擬環境重力、碰撞空間設定以及模擬的時
步設定，接下來將個別介紹。 
重力：在真實世界中，所有物體皆會受到重力影響，在虛擬
環境中也相同。受到重力影響的物體將會向引力方向運動。 
碰撞設定：在真實世界的物體運動中，物體之間會產生碰撞。
利用物理引擎模擬動態環境時，必須設定碰撞的偵測與反應。
在虛擬環境中，所有物件在進行模擬時皆會產生碰撞物件，
碰撞物件是將物件簡化為幾種幾何物件以簡化計算，包含立
方體(box)、平面(plane)、圓球(sphere)、膠囊型(capsule)、圓
柱(cylinder)的形狀。碰撞偵測是偵測虛擬環境是否產生碰撞，
計算所有物件之間的距離，當兩個物件的距離小於物件的寬
度代表物件之間產生碰撞。而在碰撞產生之後進行碰撞反應，
使兩個碰撞的物件分離。 
時步函式：利用物理引擎模擬動態環境的時候，會依照現實
世界中依照時間連續的運動。將虛擬環境模擬時間分成極小
的時段，模擬出虛擬環境在極小段時間後物體的運動。虛擬
環境在進行模擬時，其依照時步推進模擬時間的關係式如式
3.4。 
 
             (            )                  式 3.4 
 
        其中   代表的是在時間 t1 時虛擬環境中所有物件的物
理狀態，例如物體速度、角速度、位置以及旋轉等。而   是
   虛擬環境在經過 stepsize 時間之後模擬的虛擬環境中所有
物件的物理狀態。時間 t2是 t1經過 stepsize之後的時間。 
 
3.5 使用 PD控制器進行動作追蹤 
 
        在建立虛擬角色之後，接下來的步驟就是將虛擬角色依
照不同時間的骨架速度值套用角色動作，以進行虛擬角色動
作的模擬。將虛擬角色套用角色動作的步驟即為動作追蹤方
法，本論文中使用 PD 控制器計算應施加在關節上的力矩以
追蹤虛擬角色動作。PD控制器的計算如式 3.5所示： 
 
    (    )    ( ̇   ̇)                  式 3.5 
 
         為施加在關節上的力矩， ̇ 與  分別為預期達到的關節
速度及預期的關節角度， ̇與 是目前模擬的關節速度及目前
的關節角度，  則是對角度差值進行控制的比例係數，  則
是對速度差值進行控制的導數系數，  與  必須針對每個關
節各自設定。在使用 PD 控制器計算模擬動作時，需要事先
計算所有關節目前模擬以及預期達到的角度與速度值，其計
算方式如下述說明。 
        在 PD 控制器中，為了使骨架追蹤較為準確，在設計虛
擬角色預期關節角度時，我們將前後兩個影格的關節角度值
切成數個區間，以內差的方式計算其中的關節角度，讓動作
追蹤可以較為準確。接著系統將計算預計關節角度。系統將
關節角度以四元數(Quaternion)的方式表示，不過在動作格式
中儲存旋轉的方式是利用 XYZ 的歐拉角角度值格式儲存，故
在此需要轉換，將原本動作儲存的格式轉換成 PD 控制器所
需之形式，以計算模擬動作的力矩。首先將 XYZ 歐拉角的角
度值計算骨架的旋轉矩陣，計算方式如式 3.6。 
 
本計畫的實驗結果將由數個部分討論，首先是虛擬角色的設
定，接著是物理引擎的設定。最後的結果則是分為兩個部分，
分別是虛擬角色不受外力模擬來源動作以及虛擬角色受到外
力之後，從施力反應追蹤來源動作。 
 
4.1 角色與虛擬環境設定 
        模擬受物理屬性的虛擬角色需要設定的部分包含骨架質
量、骨架的寬度、關節的型別與角度限制以及各個關節在利
用 PD 控制器模擬時所使用的權重值  與  。以下將設定在
實驗時所使用的虛擬角色參數。 
        虛擬角色主要參考 70KG 的成年人。由於各個骨架的質
量並不相同，所以需要個別骨架分配質量。其骨架的質量分
配如表 4.1所示。 
 
表 4.1. 質量分配表 
Bone Mass(kg) Length(cm) 
hip 4.3 8.1102375 
upper leg 6.6 38.1594525 
lower leg 3.2 39.596445 
foot 1.0 12.5 
Hip_to_torso 4.3 12.5 
Torso 15 34.99999 
Neck 2.5 5 
Hand 5.2 20 
shoulder 2.5 17.16535 
upper arm 2.2 30.53149 
lower arm 1.7 25.75788 
 
        在虛擬環境的設定之中，系統設定包含環境重力、時步
函數以及碰撞設定。而關於摩擦力的設定是包含在碰撞設定
當中。系統對於虛擬環境設定如表 4.2。 
 
表 4.2. 關節設定表 
Parameter Value 
Gravity -9.8 m/s2 
Step size 0.01 s 
Friction dInfinity 
 
        在物理引擎設定中，系統設定重力為 y 方向向下，摩擦
係數是利用在角色與地面的接觸。Step size 代表的是物理引
擎模擬下一個時步的時間長度，指的是虛擬環境從目前的狀
態經由時步函數的計算，結果為計算 Step size 秒後虛擬環境
的物理狀態。 
而各個關節的設定如表 4.3，關節設定包含關節自由度、  與
  係數及關節角度限制，其中角度限制從-π到 π之間。 
表 4.3. 關節設定表 
 
4.2 模擬角色動作 
        在模擬角色動作部分，本論文的來源動作使用一段虛擬
角色走路的動作，動畫長度為 28 個影格，動作模擬結果如圖
4.1。由圖 4.1 呈現虛擬角色利用 PD 控制器追蹤角色來源動
作，並可在模擬環境中模擬走路動作，而虛擬環境之作用力
包含環境重力與地面的接觸力作用。 
本系統在模擬角色動作可呈現自然的角色動作，並且在模擬
角色動作時可以受重力及地面接觸力作用。地面接觸力是利
用物理引擎的碰撞偵測功能，計算虛擬角色與地面的接觸，
進而計算接觸力使角色可站立在地面上。 
 
圖 4.1 追蹤虛擬角色來源動作之走路動作模擬 
 
4.3 角色受力之後追蹤來源動作 
 
        在虛擬環境中模擬角色動畫時，系統可以對角色施加外
力，使虛擬角色模擬反應動作，並在角色產生反應動作之後
追蹤來源動作，使虛擬角色回復來源動作。其成果如圖 4.2
所示。 
 
圖 4.2 虛擬角色在受力之後追蹤來源動作 
Joint DOFs Kp Kd 
Joint angle limit 
x y z 
hip 3 4000 300 
-1.3 to 
1.9 
-1 to 
1 
-1 to 
0.25 
knee 1 6000 450 
0 to 
2.5 
  
ankle 1 600 45 
-0.75 
to 
0.75 
  
Hip_to 
Torso 
3 4000 300 
-0.6 to 
0.6 
-0.6 
to 0.6 
-0.6 to 
0.6 
Neck 3 1000 75 
-0.6 to 
0.6 
-0.6 
to 0.6 
-0.6 to 
0.6 
Hand 3 1000 75 
-0.6 to 
0.6 
-0.6 
to 0.6 
-0.6 to 
0.6 
should
er 
3 600 45 
-1.7 to 
1.7 
-1.5 
to 1.5 
-1.5 to 
1.5 
elbow 1 100 15 
-2.7 to 
0 
  
and Virtual Worlds - CASA 2006, vol. 17, pp. 271-279, 
2006. 
[16] K. W. Sok, M. Kim, and J. Lee, "Simulating biped 
behaviors from human motion data," ACM 
Transactions on Graphics (TOG) - Proceedings of 
ACM SIGGRAPH 2007, vol. 26, 2007. 
[17] K. Yin, K. Loken, and M. v. d. Panne, "SIMBICON: 
simple biped locomotion control," ACM Transactions 
on Graphics (TOG) - Proceedings of ACM 
SIGGRAPH 2007, vol. 26, 2007. 
[18] R. Featherstone and D. Orin, "Robot Dynamics: 
Equations and Algorithms," IEEE Int. Conf. Robotics 
and Automation, pp. 826-834, 2000. 
[19] S. JAIN, Y. YE, and C. K. LIU, "Optimization-Based 
Interactive Motion Synthesis," ACM Transactions on 
Graphics, vol. 28, 2009. 
[20] A. Witkin  and  D. Baraff (2012, 7/1). Physically 
Based Modeling: Principles and Practice Available: 
http://www.cs.cmu.edu/~baraff/sigcourse/ 
[21] Autodesk, Inc. (2012, 6/8). Autodesk FBX Available: 
http://usa.autodesk.com/fbx/ 
 
計畫成果自評 
本計畫部分成果已發表論文列表如下： 
1. ChochihLin, Minchih Tsai, Tainchi Lu, and 
Bashu Tsai, "The Design of Forward Dynamics 
Simulator for Animating 3D Articulated 
Characters," In Proceedings of the 2012 Computer 
Graphics Workshop, July 12-13, 2012, Taiwan. 
2. ChinhungKo, Zongyou He, and Tainchi Lu, 
"Kinematic Locomotion Simulation for 
Quadrupedal Characters, " In Proceedings of the 
2012 Computer Graphics Workshop, July 12-13, 
2012, Taiwan. 
3. ZongyouHe, Bashu Tsai, Jinhung Ke, and Tainchi 
Lu, "Adopting Procedural Animation Technology 
to Generate Locomotion of Virtual Characters in 
Dynamic Environments," In Proceedings of the 
2012 International Conference on Computer 
Science and Information Engineering, pp. 1127-
1132, May 29-30, 2012, Tokyo, Japan. 
4. Tainchi Luand Yitung Lin, "The Research of 
Calculating Momentum for 3D Virtual Characters 
in Dynamic Environments," In Proceedings of the 
2011 Conference on Digital Contents, Dec. 27-28, 
2011, Taiwan. 
5. Tainchi Luand Chochih Lin, "The Development 
of Skeleton and Motion Loader for 3D Virtual 
Characters," In Proceedings of the 2011 
Conference on Digital Contents, Dec. 27-28, 2011, 
Taiwan 
6. KuanwenLin, Zongyou He, and Tainchi Lu, 
"Synthesis of Reactive Motions Using 
Momentum-based Inverse Kinematics," In 
Proceedings of the 2011 National Computer 
Symposium, Dec. 2-3, 2011, Chiayi, Taiwan. 
7. JinhungKe, Bashu Tsai, and Tainchi Lu, 
"Simulating Adaptive Locomotion for Quadrupeds 
in a Dynamic Environment: Taking a Leopard as 
an Example," In Proceedings of the 2011 National 
Computer Symposium, Dec. 2-3, 2011, Chiayi, 
Taiwan. 
 
四、攜回資料名稱及內容 
 大會手冊一本 
 大會議程一紙 
 口頭報告證明書一份 
 論文集一本(含光碟)
  
Abstract—A procedural-animation-based approach which rapidly synthesize the adaptive locomotion for quadruped characters that they can 
walk or run in any directions on an uneven terrain within a dynamic environment was proposed. We devise practical motion models of the 
quadruped animals for adapting to a varied terrain in a real-time manner. While synthesizing locomotion, we choose the corresponding motion 
models by means of the footstep prediction of the current state in the dynamic environment, adjust the key-frames of the motion models relying 
on the terrain’s attributes, calculate the collision-free legs’ trajectories, and interpolate the key-frames according to the legs’ trajectories. Finally, 
we apply dynamic time warping to each part of motion for seamlessly concatenating all desired transition motions to complete the whole 
locomotion. We reduce the time cost of producing the locomotion and takes virtual characters to fit in with dynamic environments no matter 
when the environments are changed by users. 
 
Keywords—Dynamic environment, motion synthesis, procedural animation, quadruped locomotion. 
 
I. INTRODUCTION 
N the past few years, people have been familiar with high diversities of 3D animated characters because of 
the enormous strides of computer games and entertaining animations. In particular, walking or running on 
an uneven 3D terrain plays an important part in dynamic environments. In this paper, we propose a 
procedural animation technology [1] that it can generate locomotion of the virtual quadruped characters for 
the purpose of adopting the locomotion of the characters to adapt to the varied dynamic environments. 
Concerning a basic walking motion, the proposed technology analyzes motions to obtain the important 
parameters, such as the step length, motion cycle, and stance time, for accomplishing the procedural 
animation in a dynamic environment. When a user changes the environment dynamically, the current state 
of the environment will be sensed immediately, and the next footsteps of a character will be predicted in 
advance. Once the footsteps have been decided, the procedural animation generator selects the most suitable 
motion model for the character to meet the confronted terrain. After the motion model has been determined, 
the modified motion parameters which based on the terrain are being substituted for the original one, and the 
generator calculates the legs’ trajectories by means of the Bezier curve. Eventually, the generator makes use 
of the inverse kinematics to adjust the undesirable motion to satisfy the physical constraints. The proposed 
system will generate the smooth motion adapting to the dynamic environments automatically even though 
users alter the environments. 
The development of the animation technology can be roughly classified into two parts, real-time interactive 
animation and realistic simulated animation. We focus on the interaction between the virtual character and 
the environment. In this paper, we construct the dynamic environment with the unit cubes. The unit cubes 
can be placed arbitrarily in the dynamic environment. Therefore, the most effective factor is the way of 
constructing the dynamic environment. The unit cubes which we proposed can be placed, aligned, and 
stacked in the dynamic environment for constructing the desired terrain. However, we cannot expect how 
the user places these unit cubes. We consider the possible problem of suddenly events. The user may 
Adopting Procedural Animation Technology to 
Generate Locomotion of Quadruped Characters 
in Dynamic Environments 
Zongyou He, Bashu Tsai, Chinhung Ko, and Tainchi Lu* 
I 
dynamic environment. After the user placed an obstacle into the dynamic environment, the route of the dynamic environment and 
contact detection will be calculated as soon as possible. If the obstacles that the user has been placed will not influence on the 
progressing path of the virtual character, the current motion model does not change. Suppose that the placed obstacles block the 
walking path and form a contact area, we analyze the contact area and make a decision whether the character changes the path 
according to the new route. Therefore, the virtual character can obtain the right situation of the next motion which fits in with 
constrains of the dynamic environment. Moreover, the footstep prediction will be carried out when the path is decided. The 
footstep prediction decides to pick up either a new motion model or the origin one. Finally, we exploit the pre-defined motion 
model and leg trajectory to interpolate the required motion that adapts to the dynamic environment.  
 
A. Environment Construction 
We exploit the unit cube to construct the dynamic environment. The user can add the unit cube any time 
after setting up the terminate points for the virtual character. Each unit cube can be placed, aligned, and 
stacked in the dynamic environment for constructing the desired terrain. Note that there are three constrains 
when placing the unit cubes. The unit cube is not allowed to overlap the virtual character. That is, the unit 
cube cannot be placed on the current location of the virtual character. We define that aligning the unit cube 
is placing in a line with the unit cube on the x-z plane. Similarly, stacking the unit cube is placing a line with 
the unit cube along the y-axis. As shown in Fig. 2, no matter how the user places the unit cubes, a pair of 
adjacent cubes is full connected with one surface. 
 
 
Fig. 2 Unit cubes can be placed, aligned, stacked arbitrarily, but full connected for a pair of adjacent cubes 
 
B. Path Planning 
At first, there is no unit cube placed in the dynamic environment. The user can set up the starting point and 
ending point as the two terminate points for the virtual character. Once the terminate points are decided, we 
exploit the A* search algorithm, as (1), to calculate the initial path p(n) from the starting point to the ending 
point. The path p(n) is the sum of the movement cost g(n) from the starting point to the current point 
through the path, and the heuristic cost h(n), which is an estimated cost from the current point to the end 
point. 
 
( ) ( ) ( )p n g n h n          (1) 
 
As soon as the user adds the unit cube to the dynamic environment, we vary the weight w of the position of 
the unit cube, so that the cost c(n) changed with the weight, as (2). 
 
( ) ' ( )c n c n w          (2) 
point, midpoint, and third quartile point to be the control points. If the l(t) collides with the terrain, we revise 
the value t for avoiding the collision. 
 
 
Fig. 3 We choose 5 control points to calculate the Bezier curve for the leg trajectory 
 
We adopt the spinal and quadruped skeleton in this research, as shown in Fig. 4. Note that the spine 
consists of the bones between the root and the reference point, which can form a straight line or a curve. If 
the skeleton the user loaded contains the other parts, like the tails, horns, wings, etc., it will not be 
considered for the procedural animations. Motions of these unique parts will be reserved and added to the 
procedural animation after synthesized. For a quadruped animal, like the bear, dog, or cat, there are four 
motions using in their daily life: walking, climbing, turning right or left, and turning back. According to the 
research of the Bionics, most of the quadruped animals follow the two gaits, the symmetrical gaits and 
diagonal gaits. Suppose that the quadruped animals start from the right foreleg when waking, the sequence 
of the symmetrical gaits is right foreleg, right rear leg, left foreleg, and left rear leg. As the same situation, 
the sequence of the diagonal gaits is right foreleg, left rear leg, left foreleg, right rear leg. In this work, we 
adopt the symmetrical gaits as the basic gaits. To build up a walking motion model, first we have to 
construct the motion cycle. As shown in Fig. 5, the motion cycle consists of four concentric cycles, each of 
cycle stands for one leg. 
 
 
Fig. 4 A spinal and quadruped skeleton must contain the root, reference point, spine, four knees, and four ankles 
 
  
Fig. 7 The key-frames of the climbing motion model 
 
For the beginning, the quadruped animals bend their spine for creating moving space with the same 
method of walking motion model (Fig. 7(a)). After obtaining enough moving space, we set the root as a 
fixed point and rotate the spine with an angle Θ along the y-axis. Since we rotate the spine, the two forelegs 
will be lifted up deservedly. Then we gradual change the spine from high- curvature curve to low-curvature 
curve and place the two forelegs (including the knees of forelegs) onto the unit cube (Fig. 7(b)). After that, 
we move the rear legs forward for closing the unit cube. At the same time, we fix the foot of forelegs, lift up 
the knee of forelegs, and change the spine into a straight line (Fig. 7(c)). So far, the quadruped animal is 
almost upping the unit cube. At last, we modify the step height of the rear legs to fit the height of unit cube 
(Fig. 7(d) and (e)), and let the quadruped animal walk on the unit cube with the walking motion (Fig. 
7(f)).When the quadruped animal turns right or left, they will move the foot of the turning side first. That is, 
the quadruped animal will move right foreleg first when they turning right. Fig. 8 shows the key-frames of 
turning right. First, the foreleg L1 of the desired direction moves to the desired direction side (Fig. 8(a)). 
Second, we bend the spine along the opposite direction of the desired direction, move the other foreleg L2 
across the foreleg L1 from the outer side, and rotate the ankle toward the desired direction (Fig. 8(b)). After 
that, we move the foreleg L1 to the appropriate position and adjust to the nature pose of two forelegs (Fig. 
8(c)). Note that we change the spine from the curve to the straight line when moving the foreleg L1 (Fig. 
8(d)).At last, we rotate the root to the desired direction, move the outer rear leg for reverting the original 
stance pose (Fig. 8(e)), and rotate ankle of the inner rear leg toward the desired direction (Fig. 8(f)). 
 
 
Fig. 10 The right part of this figure is the parameter setting interface, and left part shows the whole view. 
 
We demonstrate the four types of locomotion proposed in this paper. Fig. 11 shows the walking motion on an obstacle-free 
terrain. Users can adjust step length and step height before simulation starts. 
 
 
Fig. 11 Walking motion displays in an obstacle-free envirionment. 
 
In Fig. 12 and Fig. 13, we demonstrate the climbing up and down motion with a single obstacle. In our system, the climbing 
motion will be performed when the quadruped character meet obstacles and movement cost is under the threshold. 
 
 
Fig. 12 Climbing motion displays with an obstacle. In this figure, the leopard climbs an obstacle. 
 
International Conference on Very Large Data Bases, pp. 406-417, 2002. 
[6] Rachel Heck, Lucas Kovar, and Michael Gleicher, “Splicing Upper-Body Actions with Locomotion,” ACM SIGGRAPH 
posters, 2007. 
[7] Sang Il Park, Hyun Joon Shin, and Sung Yong Shin, “On-line locomotion generation based on motion blending,” Proceedings 
of the 2002 ACM SIGGRAPH/Eurographics symposium on Computer animation, pp. 105-111, 2002. 
[8] Min Gyu Choi, Jehee Lee and Sung Yong Shin, “Planning biped locomotion using motion capture data and probabilistic 
roadmaps,” ACM Transactions on Graphics (TOG), Vol. 22, Issue 2, pp. 182-203, 2003. 
[9] Jaroslav Semancik, Josef Pelikan, and Jiff Zara, “Interactive synthesis of constrained motion from example movements.” 
Proceedings of the 4th IASTED International Conference on Visualization, Imaging, and Image, pp. 878-883, 2004. 
[10] Stelian Coros, Andrej Karpathy, Ben Jones, Lionel Reveret, and Michael van de Panne, “Locomotion skills for simulated 
Quadrupeds,” ACM Transactions on Graphics (TOG), Vol. 30, Issue 4, 2011. 
 
ACKNOWLEDGMENT 
 This work is supported in part by the National Science Council at Taiwan, R.O.C., under the project 
grant number NSC100-2221-E-415-019. 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：盧天麒 計畫編號：100-2221-E-415-019- 
計畫名稱：在體感互動環境中最佳化角色反應動作之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 6 6 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 2 2 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
