 1
行政院國家科學委員會專題研究計畫成果報告 
 
計畫名稱: 次世代輪型雙手臂行動服務機器人之智慧控制、學習與任務執
行－子計畫二: 使用平行混合Meta-Heuristic方法之智慧運動控 
制與路徑規劃(I) 
計畫編號：NSC 100-2221-E-197-032 
執行期限：100 年 8 月 1 日至 101 年 7 月 31 日 
主持人：黃旭志   國立宜蘭大學電機工程學系 
 
 
一、中文摘要 
 
本研究計畫的目的在於發展使用平行
混合超啟發式(mata-heuristic)方法之智慧
運動控制與路徑規劃，並應用在嵌入式四
輪全方位移動機器人中。以系統可程式化
晶片(system-on-a-programmable-chip，SoPC)
設計平行混合超啟發式演算法，提出以平
行混合螞蟻群-粒子群演算法(parallel ant 
colony optimization algorithm-particle 
swarm optimization algorithm, PACOPSO)
系統晶片設計四輪全方位移動平台最佳運
動控制器和路徑規劃器。相較於傳統個人
電腦或工作站的軟體演算法實現方式，這
種 SoPC 平行混合超啟發式演算法系統晶
片有著高效能和成本便宜的優點。本研究
計畫提供平行混合超啟發式智慧運動控制
與 路 徑 規 劃 的 FPGA 
(field-programmable-gate-arrays) 整 合 方
案。最後，四輪全方位機器人之實驗數據
也將用以證實本研究計畫所提出的方法。 
 
關鍵詞：平行演算法、路徑規劃、全方位
移動機器人 
 
Abstract 
 
This project aims to develop intelligent 
motion control and path planning for 
four-wheeled omnidirectional mobile robots 
using SoPC-basd parallel hybrid 
meta-heuristic approaches. The SoPC-based 
PACOPSO) is proposed to design the 
optimal motion controller and path planner of 
a four-wheeled omnidirectional mobile 
platform. This approach takes the advantages 
of high performance (FPGA-based) and cost 
down (embedded system) than the 
conventional software-based meta-heuristic 
approaches in personal computer or 
workstation do. Experimental results are 
conducted to show the merit of the proposed 
intelligent motion control and path planning 
for dual-armed four-wheeled omnidirectional 
mobile robots using SoPC-based parallel 
hybrid meta-heuristic approaches.  
 
Keywords: Parallel, path planning, 
omnidirectional mobile robot. 
 
二、緣由與目的 
 
近年來，仿生物智慧啟發式演算法正
逐漸在各個領域展露它雄厚的潛能，求解
各種最佳化問題。不同於傳統人工智慧技
術使用人類演繹和邏輯推論的方式來解決
問題，仿生物演算法模仿大自然解決問題
的方法來解決科學或技術的問題，這個努
力在近年來獲得了重大的進展，各種仿生
物智慧型技術紛紛在不同應用領域取得豐
碩成果。例如模仿大腦學習機制的類神經
網路(neural network)、模仿生物演化程序的
基因演算法(genetic algorithm, GA)、模仿人
類語言對不確定性資訊處理的模糊邏輯
(fuzzy logic)，模仿社會性昆蟲的群體行為
的 螞 蟻 群 最 佳 化 演 算 法 (ant colony 
optimization algorithm, ACO)及模仿鳥類群
體覓食行為的粒子群最佳化演算(particle 
swarm optimization algorithm, PSO )等都是
相當受重視的仿生物智慧型技術。 
 3
到節點 i 的所有可能點的集合 (set of 
feasible node)  和  是正常數 (positive 
constant)，用來放大費洛蒙濃度的影響。值
得注意的是，啟發資訊(heuristic information) 
ij 是一個依照不同最佳化問題，需要被最
小化的函數  
 1ij
ijd
                (2)                                     
其中 ijd 是節點 i 和 j 之間的適應值。   
費洛蒙更新規則(pheromone update rule)
由下面的方程式決定: 
 
( 1) (1 ) ( ) ( )ij ij ijt t t           (3)                           
其中  
1
( ) ( )
m
k
ij ij
k
t t 

           (4)                                    
( )k ij t 是第 k隻螞蟻在時間 t，連接線 ( , )i j 所
留下的費洛蒙。 m 代表螞蟻的數目，而 
0 1   是 費 洛 蒙 的 衰 減 參 數 (decay 
parameter)，也就是說， (1 ) 代表費洛蒙
的蒸發率(evaporation rate)。 ( )k ij t  則由
下列方程式決定:  
,  if  ant uses edge( , ) in its tour
( )
 0 ,  otherwise                                       
th
k
kij
Q k i j
Lt
  
 
其中，Q 是一個正常數而 kL 是第 k 隻螞蟻
所完成的路徑適應值(tour cost)。 全域的費
洛蒙濃度資訊也因此被更新了。這個演算
法將在二種情況下終止，一種是演化的次
數已經達到，另一種則是已經搜尋到可以
接受的最佳解。 
(b)粒子群最佳化演算法 
粒子群最佳化演算法的運作過程如圖
1所示，演算法一開始粒子群中每個粒子之
初始速度及初始位置都以隨機值表示，並
以均勻分佈(uniform distribution)方式產生
初始粒子群，每個粒子都是最佳化問題的
候選解，隨後再經由每次調整粒子本身的
速度及位置來尋求最佳解。接著計算各粒
子所得的適應值進行演化，適應值通常是
依照最佳化問題適應值函數來訂定，針對
不同的最佳化問題，定義相對的適應值函
數。粒子在每一次疊代中，每個粒子將經
由追隨兩個最佳解來調整自己下一次速度
及位置。第一個最佳解為每個粒子本身所
 
(a)                   (b) 
圖 1 粒子群最佳化演算法。(a)粒子初始位
置。 (b)粒子移動後。 
 
獲得之最佳解，即每個粒子自己本身目前
所擁有最佳參數的記憶，在此稱為 bestp ；
而另一個最佳解為目前於粒子群中具有最
佳解之粒子，稱為 bestg 。慣性權重法的粒
子更新法則表示如下: 
1 1 2 2( ) ( 1) ( ( 1)) ( ( 1))
( ) ( 1) ( )
i i best i best i
i i i
v t wv t c p x t c g x t
x t x t v t
        
  
           
(5) 
其中 1,2,..., ,i N 而 N 為粒子群粒子之數
量。w稱之為慣性權重(inertia weight)，可
為正的常數或與時間有關之正的線性或非
線性函數。向量 iv 表示第 i個粒子速度。 1c  
及 2c  為兩個正的常數(positive constant)，
分別稱為自我認知與社會參數。 1 及 2  分
別為兩個介於0~1之間的均勻隨機值，向量
( )ix t 為粒子之座標位置。 
粒子群演算法求解最佳化問題可分為
以下幾個步驟完成: 
Step 1: 設定粒子個數、運算次數，搜尋範
圍和學習常數 
Step 2: 隨機產生粒子位置和速度 
Step 3: 計算每個粒子的適應值 
Step 4: 更新每個粒子的速度和位置 
Step 5: 判斷演算法是否結束，若是，演算
法結束，輸出演算法搜尋到的最佳解，若
否，則回到Step 3。 
(c) 平行化混合 ACO-PSO 演算法 
本次研究計畫提出 coarse-grain模型的
PACOPSO 演算法求解最佳化問題，如圖 2
所示，有二個 ACO 處理器和一個 PSO 處
理器同時運行搜尋最佳解。這三個處理器
以不同參數不同演化過程，同時執行各自
的演算法，而 migration 模組主要負責收集
這 三 個 處 理 器 產 生 的 最 佳 抗 體 群
, 1,2,3ibest ip  ，在經過一定的 isolation time
時間後，在三個處理器各別得到的最佳解
 5


1T
2T
3T
4T
X
Y
mx
my
 
圖 4 四輪全方位移動機器人平台。 
 
1 1
2 2
3 3
4 4
( ) ( )
( )
( ) ( )
( ) ( ( )) ( )
( ) ( )
( )
( ) ( )
t r t
x t
t r t
t P t y t
t r t
t
t r t
 
     
                              



  (6)                           
其中  
sin( ) cos( )
cos( ) sin( )
( ( ))
sin( ) cos( )
cos( ) sin( )
L
L
P t
L
L
   
       
   
               
   (7)                            
( ), 1,2,3,4i t i  表示每個輪子的角速度; r 表
示全方位輪的半徑; L 表示從全方位移動
平台中心到全方位輪中心的距離。值得注
意的是 ( ( ))P t 對於任意的 而言是奇異的
(singular)，但是它的左反矩陣(left inverse 
matrix)可以被求得, # ( ( )) ( ( ))P t P t I   單位
矩陣，並且表示如下: 
#
sin( ) cos( ) sin( ) cos( )
2 2 2 2
cos( ) sin( ) cos( ) sin( )( ( ))
2 2 2 2
1 1 1 1
4 4 4 4
P t
L L L L
       
       
                   
(8)                     
 
(b) 四輪全方位移動機器人控制器設計 
(b.1) 點對點穩定 (Point stabilization) 
對於點對點穩定而言，控制的目的在
於 找 到 被 控 制 的 角 速 度 向 量
 1 2 3 4( ) ( ) ( ) ( ) Tt t t t    來驅動全方位移動平
台從任意起始位置  0 0 0 Tx y  到任意的目
標位置  Td d dx y  。而全方位移動機器人平
台的現在位置以  ( ) ( ) ( ) Tx t y t t 表示。為了設
計這個點對點穩定控制器，我們先定義位
置誤差如下所示:  
( ) ( )
( ) ( )
( ) ( )
e d
e d
e d
x t x t x
y t y t y
t t  
                          
         (9)                                   
取其微分可以得到以下的方程式 
1
2#
3
4
( )
( ) ( )
( )
( ) ( ) ( ( ))
( )
( ) ( )
( )
e
e
e
r t
x t x t
r t
y t y t P t
r t
t t
r t

   
                           
 
 
 
   (10)            
為了使系統漸近穩定，提出以下的控
制法則:  
1 0
2
0
3
4 0
( )( )
( )
( ) 1 ( ( )) ( ) ( )
( )
( )
( ) ( )
t
e
e
t
p e I e
te
e
x dt
x t
t
P t K y t K y d
t r
t
t d
 
       
                                  



(11)            
值得注意的是，在這個控制法則中， PK 和
IK 這二個矩陣是對稱且正定的，也就是說 
0,   0T TP P I IK K K K    。 
將(11) 帶入(10)，閉迴路誤差系統的
動態方程式如下所示: 
0
0
0
( )
( ) ( )
( ) ( ) ( )
( ) ( )
( )
t
e
e e
t
e p e I e
te e
e
x d
x t x t
y t K y t K y d
t t
d
 
 
    
                            






   (12)          
為了證明這個閉迴路誤差系統的穩定
度，Lyapunov 函數可選擇如下: 
 1
0
0 0 0 0
0
( )
1( ) ( ) ( ) ( ) ( )
2
( )
( )
1 ( ) ( ) ( ) ( )
2
( )
e
e e e e
e
t
e
t t t t
e e e I e
t
e
x t
V t x t y t t y t
t
x d
x d y d d K y d
d


 
        
  
      
            

   

         
(13) 
將 1( )V t 取微分可以得到以下的方程式: 
1( ) ( ) ( ) ( ) 0
e
e e p ee
e
x
V t x t y t t K y

         
      (14) 
因為V 是半負定，由 Barbalat’s lemma 可以
得 到     ( ) ( ) ( ) 0 0 0T Te e ex t y t t  , 當 
t  。更進一步的，可以證明在原點
 0 0 0 T 是全域漸近穩定的，也就是說，
當時間趨近無窮大時，四輪全方位移動機
器人平台的位置誤差和移動角度誤差將會
漸近趨於 0。  
(b.2)軌跡追跡(Trajectory tracking)  
對 於 一 個 平 滑 可 微 分 的 軌 跡 ， 
  1( ) ( ) ( ) Td d dx t y t t C  ，定義下面的追踨誤
差向量: 
 7
CPU
On-chip
RAM
On-chip
ROM
UART
PIO
Timer
SPI
QEP
Decoder
Digital 
Filter
PACOPSO
Algorithm
Nios II Embedded Processor
Embedded Optimal Controller
/
+
/
/
/
D/A
Converter/ /
Trajectory
Command
4
4
4
/
4
4 4
4
4
Output to the
Platform
Signals from
Rotary Encoders
+
_
lwIP
PACOPSO-based Platform Controller IC based on  Altera FPGA 
Data from/to PC
User IP core library
A
valon B
us
A
valon B
us
/
 
圖 6 四輪全方位移動機器人平台的嵌入式
PACOPSO 最佳控制器。 
 
(c.2.2) 適應函數的定義: 在 PSO 演算法
中，針對不同的最佳化問題，需要定義不
同的適應值函數。以最佳控制參數為例，
在產生粒子群後，立刻評估這些粒子的適
應值。針對這種最佳化問題，適應函數還
是絕對誤差總和(ISE)表示，也就是說，在
產生粒子後，立刻經由粒子群演算法計算
出適應值。 
(c.3) 嵌入式最佳控制器設計  
          在經由PACOPSO演算法得到最佳控
制參數 1 2 3 1 2 3, , , , ,p p p i i ik k k k k k 後，可完成最
佳控制器設計。全方位移動機器人嵌入式
最佳控制器設計如圖6所示，首先由FPGA 
晶片的PACOPSO演算法得到控制器的最
佳控制參數，這組最佳控制 PK 和 IK 將傳
送到嵌入式運動控制器。運動控制器的設
計是以C/C++撰寫控制法則(17)，並由晶片
內的嵌入式處理器Nios II 來執行，另外， 
Nios II C-to-hardware (C2H)編譯器也被用
來加速執行速度。由QEP解碼電路算出機
器人的位置和速度，並藉由PACOPSO演算
法所得到的最佳參數，完成最佳運動控制
器設計。 
 
3.3 應用 SoPC-Based PACOPSO 演算法求解
全域路徑規劃 
全域路徑規劃問題如圖 7 所示，將環
境地圖分為許多方格，也就是 grid-based
的環境，灰色的方格代表障礙物的位置，
這個最佳化問題為在已知靜態障礙物的情
況下，規劃出從起點到終點距離最小、而
且避開靜態障礙物的路徑，順利的到達終
 
圖7 Grid-based的環境地圖表示法 
 
點。藉由重新設計圖3 FPGA-based PACOPSO
系統晶片內的模組即可求解最佳路徑規劃
問題。 
(a)螞蟻群的移動: 螞蟻群從地圖起點開始
移動，藉由偵測路徑上費洛蒙的濃度，決
定螞蟻移動的下一步。 
(b)粒子群的產生:在 PACOPSO 演算法中，
可以將一條路徑上的所有節點集合視為一
個粒子。演算法一開始先以隨機均勻的方
式產生這些粒子群，經由粒子群間的合
作，搜尋到最佳路徑。 
(c)適應值的定義: 在 PACOPSO 演算求解全
域路徑規劃問題上，適應值的定義為路徑
的距離，也就是路徑節點中，從起點到終
點路徑的總長度。 
綜合以上所述，應用PACOPSO演算法求
解最佳路徑規劃可分成以下幾個步驟: 
Step 1: 建立Grid-based的環境模型，包
括起點、終點和靜態障礙物。 
Step 2: 設定PACOPSO演算法的執行參數。 
Step 3: 執行ACO和PSO處理器的初始化，
也就是產生最佳路徑的候選解。 
Step 4: 計算每個候選解的適應值。 
Step 5: 更新候選解。並在isolation time
後，由migration模組將最佳的粒
子群送至所有的子處理器。 
Step 6: 判斷結束條件是否成立，若成立
則輸出得到的最佳解，否則，繼續
下一次疊代，回到Step 4。 
 
四、結果與討論 
 
  本研究計畫的目的在於發展植基於
SoPC 平行化螞蟻群粒子群最佳演算法及
 9
on Intelligent Control and Automation, pp. 
5121-5124, 2010. 
[11] X. Song, Y. Cao, and C. Chang, “A hybrid 
algorithm of PSO and SA for solving JSP,” IEEE 
5th International Conference on Fuzzy Systems and 
Knowledge Discovery, vol. 1, pp. 111-115, 2008. 
[12] M. Pan and G. He, “The analysis of convergence 
of hybrid algorithm based on neural network and 
genetic algorithm,” IEEE International Conference 
on Neural Networks and Brain, vol. 1, pp. 232-235, 
2005. 
[13] A. E. Calaor, A. Y. Hermosilla and B. O. Corpus, 
“Parallel hybrid adventures with simulated 
annealing and genetic algorithms,” IEEE 
International Symposium on Parallel Architectures, 
Algorithms and Networks, pp. 33-38, 2002. 
[14] S. L. Hung and H. Adeli, “A parallel 
genetic/neural network learning algorithm for 
MIMD shared memory machines,” IEEE 
Transactions on Neural Networks, vol. 5, no. 6, pp. 
900-909, 1994. 
[15] A. An, X. Hao. G. Yuan, C. Zhao and H. Su, 
“Parallel adaptive hybrid genetic optimization 
algorithm and its application,” IEEE Asia-Pacific 
Conference on Computational Intelligence and 
Industrial Applications, vol. 1, pp. 471-475, 2009. 
[16] Y. Wu, “Parallel hybrid evolutionary algorithm 
based on chaos-GA-PSO for SPICE model 
parameter extraction,” IEEE International 
Conference on Intelligent Computing and 
Intelligent Systems, vol. 1, pp. 688-692, 2009. 
[17] C. H. Lee, K. H. Park and J. H. Kim, “Hybrid 
parallel, evolutionary algorithms for constrained 
optimization utilizing PC clustering,” IEEE 
Congress on Evolutionary Computation, vol. 2, pp. 
1436-1441, 2001.
 2
四、建議 
 
五、攜回資料名稱及內容 
大會手冊及論文集隨身碟 
六、其他 
  
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：黃旭志 計畫編號：100-2221-E-197-032- 
計畫名稱：次世代輪型雙手臂行動服務機器人之智慧控制、學習與任務執行--子計畫二: 使用平行混
合 Meta-Heuristic 方法之智慧運動控制與路徑規劃(I) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 6 6 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 5 5 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
