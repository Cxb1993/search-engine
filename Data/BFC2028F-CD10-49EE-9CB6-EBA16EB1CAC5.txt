 2 
加密式協議問題在行動隨意式網路架構下的突破性解法 
 
計畫主持人：嚴國慶 
共同主持人：王淑卿 
計畫參與人員：陳祥慈、邱曉涵、王朝宏 
 
 
Abstract 
Wireless networks have become ubiquitous. This has also created combined wired/wireless 
network being in vogue. Therefore, the Consensus problem in combined wired/wireless network has 
become an important topic. Over the past few years, a considerable number of studies have been 
made on pure wired networks. However, no studies have ever tried to solve the Consensus problem 
in combined wired/wireless networks. In this project, we will investigate the Consensus problem in 
combined wired/wireless network to enhance the fault-tolerance and reliability. 
Keywords -- Consensus, fault-tolerance, dormant fault, malicious fault, combined wired/wireless 
network, secure communication. 
1. Introduction 
For a system to be reliable, it must have a mechanism that allows a set of processors to agree 
on a common value. With this agreement, several important distributed services can be achieved, 
such as atomic broadcast, atomic commitment and group membership [2][6][14].  
The Byzantine Agreement (BA) [8][9][15][18] and Consensus [1][7][10][13][16][18] are two 
closely related fundamental problems in agreement on a common value in distributed system. The 
BA problem was first described and solved by Lamport, Shostak, and Pease [9]. In the BA problem, 
there are n (n≥4) processors in the network, where one processor is designated as the general who 
holds an initial value vs. The general first sends the initial value vs to all other processors. On receipt 
of the value vs, each processor (without the general) exchanges the received value with other 
processors. In addition, there is an adversary that controls up to pm (n ≥ 3pm + 1) of the processors 
and can arbitrarily deviate from the designated protocol specification. After (n-1)/3+1 rounds of 
messages-exchanges a common value can be obtained. More precisely, the BA problem is defined 
by the two properties: (1) Agreement: All fault-free processors agree on a common value. (2) 
Validity: If the source (general) processor is fault-free, then all fault-free processors agree on the 
initial value that the source processor sends.  
 4 
introduces the transmission protocol SRFC. Section 4 introduces the Consensus protocol CCP. 
Section 5 gives an example of reaching Consensus. Section 6 gives the correctness and complexity 
of proposed protocols. Section 7 gives the conclusion. 
 
2. The Conditions for Consensus 
To design a Consensus protocol certain conditions must be taken into account. There are the 
symptoms of the faulty components, the system model, properties of the Consensus problem and the 
constraint of allowable faulty consensus-servers.  
2.1 The Symptoms of Faulty Components 
Consensus may not take place for two reasons. First, the processors themselves may be fault, 
resulting in unpredictable behavior. Second, the communication link may be faulty, resulting in lost 
or garbled messages [12]. 
The symptoms of a faulty component (processor or communication link) may be crash, 
omission and Byzantine. (1) Crash failure: a faulty component stops executing prematurely and does 
nothing after that. (2) Omission failure: a faulty component omits to send or receive messages. (3) 
Byzantine failure: a faulty component can exhibit any behavior whatsoever. (e.g., can suffer benign 
failures, can send bogus values in messages, can send messages at the wrong time, can send 
different messages to different processors and can work in coordination with other faulty processors 
to prevent fault-free processors from reaching a common value). We may divide the above faulty 
component symptoms into two categories. They are dormant fault (crash failure and omission 
failure) and malicious fault (Byzantine failure). 
2.2 The System Model 
In recent years, the bandwidth and quality of wireless networks has drastically improved. 
Therefore, wireless network has been more and more popular. It also causes the nowadays network 
change into combined wired/wireless network.  
We know that the communication overhead of the Consensus protocol is inherently large [5]. 
Previous Consensus protocols were designed for flat networks. In a flat network, all processors 
carry the same responsibility and all messages must propagate globally throughout the network. This 
makes the previous Consensus protocols inefficient. We use a hierarchical concept to reduce the 
communication overhead. 
 6 
• Let N be the set of all processors in the network and |N|= n, where n is the number of 
processors in the underlying network. 
• Let ZN be the set of all consensus-servers in the network and |ZN|= zn, where zn is the 
number of consensus-servers in the underlying network and zn ≥4. 
• The underlying network is unreliable: messages may be dropped, reordered, inserted or 
duplicated by faulty components. 
• Each processor in the network can be identified uniquely. 
• Let pm be the maximum number of malicious faulty processors allowed. 
• Let pd be the maximum number of dormant faulty processors allowed. 
• Let zm be the maximum number of malicious faulty consensus-servers allowed. 
• Let zd be the maximum number of dormant faulty consensus-servers allowed. 
• Let cm be the maximum number of malicious faulty communication links allowed in higher 
network level. 
• Let cd be the maximum number of dormant faulty communication links allowed in higher 
network level. 
• The connectivity cp of Zonep must be larger than the number of malicious faulty 
components (processors and communication links) plus the number of dormant faulty 
components in Zonep, where 1≤p≤zn. 
• A processor does not know the faulty status of other components in the underlying 
network. 
2.3 Properties of Consensus Problem 
Using the hierarchical concept, each processor in the zone is managed by its consensus-server. 
Hence, two properties of the Consensus problem in two-level combined wired/wireless network are 
modified as follows:  
Consensus: All fault-free processors managed by fault-free consensus-server agree on a 
common value. 
Validity: If the initial value of all consensus-server is vi, then all fault-free processors 
managed by fault-free consensus-server shall agree on vi. 
 8 
3.1.3 Interlock Protocol 
Man-In-The-Middle attack (MITM) [11] is an attack in which an attacker is able to modify, 
insert and read at will, messages between two processors without either processor knowing that the 
link between them has been compromised. The attacker must be able to observe and intercept 
messages going between the two victims. Figure 3 shows the MITM attack procedure. Such MITM 
problem can be solved by interlock protocol [11]. Figure 4 shows the Interlock protocol procedure.  
3.1.4 Advanced Encryption Standard - Symmetric Cryptographic Algorithm 
In a symmetric cryptographic system, the communication parties share a key in advance. They 
encrypt and decrypt delivered messages by the shared key. The security basis is on the shared key. If 
adversaries reveal the shared key, the symmetric cryptographic system is crash. Advanced 
Encryption Standard (AES) also known as Rijndael [3] is a block cipher adopted as an encryption 
standard by the US government, is expected to be used worldwide, and analyses extensively as was 
the case with its predecessor the Data Encryption Standard (DES) [11].  
3.1.5 Threshold Signature 
In threshold signature scheme, the secret s is divided into k shares and is set a threshold value h 
(h ≤ k). When collecting to h above shares, we can reconstruct original secret s. The threshold 
signature is based on following equation: )(mod...)( 12211 psxaxaxaxf hhhh ++++= −−−−  
(p, g, gu mod p)
(gV mod p)
Secret key = guv mod p 
A
A chooses u
A computes 
(gv mod p)u = guv mod p
B
B chooses v
B computes 
(gu mod p)v = guv mod p
 
Figure 2. Diffie-Hellman key exchange 
 
 
 
 
 10 
 
Figure 5. Secure Relay Fault-tolerance Channel (SRFC)  
 
Meyer and Pradhan [7] used a time-out mechanism to detect a dormant faulty component. 
However, the time-out mechanism cannot detect a malicious faulty intermediate component. To 
avoid the majority value being dominated by malicious faulty intermediate components, the 
connectivity constraint in the network by Meyer and Pradhan [7] is c’ (c’>2cm+cd+2zm+zd).  
In SRFC, the network connectivity constraint is improved. For higher network level, the 
connectivity of each consensus-server is c (c>cm+cd+zm+zd). For the zone level, the connectivity cp 
of Zonep must be larger than the number of malicious faulty components (processors and 
communication links) plus the number of dormant faulty components in Zonep, where 1≤p≤zn. 
Because a symmetric key is used, the receiver processor can detect a message that is influenced by 
dormant and malicious faulty intermediate components.  
We classify the fault (or attack) that may take place in a transmission process into four cases:  
1. Sender with dormant fault or intermediate component with dormant fault 
2. Intermediate component with malicious fault 
 12 
That is, SRFC can remove the influence from dormant/malicious faulty intermediate 
components and the influence from dormant faulty sender. SRFC is an efficient transmission 
protocol which reduces the computation time and power consumption to provide a secure 
communication channel. 
 
4. Consensus Protocol: Client-initiated Consensus Protocol (CCP) 
In this section, we would like to focus attention on the proposed Consensus protocol 
“Client-initiated Consensus Protocol” (CCP). To meet the characteristics of Consensus problem in 
combined wired/wireless network, most of the communications and computation overhead must be 
fulfilled within by the consensus-servers. Therefore, only consensus-servers need to exchange 
messages and compute the common value in protocol CCP. Furthermore, all messages in CCP are 
transmitted by SRFC. There are two stages in CCP, they are Client-initiated Stage and Consensus 
Stage. The Consensus protocol CCP is shown in Figure 7.  
4.1 Client-initiated Stage 
The purpose of the Client-initiated Stage is to collect the initial value from each client and 
compute the pre-consensus value for each consensus-server. Any client may initiate Consensus in 
the network. When a client pi wants to initiate a Consensus, it transmits the “initiate consensus” 
message to its consensus-server CSj. (Client pi is managed by CSj, where 1≤i≤ the number of 
processor in CSj's zone, 1≤j≤zn.) The consensus-server CSj then informs other consensus-servers to 
gather the initial value from each client in its zone. Each consensus-server can obtain the 
pre-consensus value by threshold signature if consensus-server collects to more than half of the 
same value in its zone.  
 14 
4.2 Consensus Stage 
The purpose of the Consensus Stage is to compute a common value. There are three phases in 
the Consensus stage; they are Message Exchanging Phase, Decision Making Phase and Consensus 
Distributing Phase. In the Message Exchanging Phase, we compute the number of rounds required 
at first.  
4.2.1 The Number of Required Rounds in Message Exchanging Phase 
In the Consensus protocol, we use term “round” to compute the amount of messages exchange. 
A round is defined as follows: (1) Sends messages to any set of processors (2) Receives messages 
from this round (3) Does local processing [5][9].  
Fischer and Lynch [5] indicated that t+1 (t=(n-1)/3) rounds are the minimum amount of 
rounds required to get enough messages to achieve Consensus. The network architecture in Fischer 
and Lynch [5] is flat architecture, but the network architecture in our system is a two-level 
architecture. In our protocol, only consensus-servers need to exchange the messages in the Message 
Exchanging Phase. The number of required rounds in the Message Exchanging Phase is zm+1 
(zm=(zn-1)/3). That is, CCP can reduce the entire network transmission consumption.  
4.2.2 Message Exchanging Phase 
In the first round of the Message Exchanging Phase, each consensus-server transmits its 
pre-consensus value to all other consensus-servers. Each consensus-server then stores the values 
from the other consensus-servers in level 1 of its mg-tree. If the received value is λ0, value 0 is 
substituted for value λ0.  
In the γ≠1 round of Message Exchanging Phase, each consensus-server transmits the values at 
level γ-1 round in its mg-tree to all other consensus-servers.  
4.2.3 Decision Making Phase 
After Message Exchanging Phase, each consensus-server deletes vertices with repeated names 
of mg-tree to avoid the repeated influence from faulty consensus-servers. Then, each 
consensus-server uses the VOTEmix function on its mg-tree from leaf to root to obtain the common 
value. The VOTEmix function is shown in Figure 8. Conditions 1, 4 and 5 are similar to convention 
majority vote [9]. Condition 2 is used to deal with dual failure mode (both dormant fault and 
malicious fault are existed). Condition 3 is used to describe the existence of an absentee.  
 
 16 
consensus-servers to gather the initial value from each client in its zone. The initial value of each 
client is shown as follows. 
 
Client ID: A1 A2 A3 B1 B2 C1 C2 C3 C4 D1 D2 D3 E1 F1 F2 
Initial value: 0 1 0 λ0 1 1 1 1 1 1 0 1 0 0 0 
 
Each consensus-server then obtains the pre-consensus value using the threshold signature. For 
example, there are two processors in ZoneB, one is B1 which is a dormant faulty processor, and 
another is B2 which is a fault-free processor. Hence, CSB can detect that the message from B1 is 
influenced by a dormant faulty component. After B1 and B2 sign its initial value to CSB, CSB can 
obtain the pre-consensus value 1 (the number of value 1 is greater than or equal to half of the 
number of processor in ZoneB, λ0 is ignore). The pre-consensus value of each consensus-server is 
shown as follows. 
 
Consensus-Server ID: CSA CSB CSC CSD CSE CSF 
Pre-consensus value: 0 1 1 1 0 0 
 
5.2 Consensus Stage 
In the Message Exchanging Phase we first compute the number of rounds required γ=2 
(γ=(6-1)/3+1). In the first round of the Message Exchanging Phase, each consensus-server 
transmits its pre-consensus value to all other consensus-servers by SRFC. Each consensus-server 
then stores the values from other consensus-servers in the level 1 of its mg-tree. Since CSA is a 
malicious faulty processor, CSA may transmit different messages to different consensus-server to 
prevent fault-free consensus-server from reaching a common value. The messages transmitted by 
CSA in the first round of Message Exchanging Phase are shown in Figure 9. An mg-tree of CSB after 
first round of Message Exchanging Phase is shown in Figure 10. 
 
 
 18 
 
Figure 11. An mg-tree of CSB after second round of 
Message Exchanging Phase 
Figure 12. An mg-tree of CSB without 
repeated name vertices 
 
In the Decision Making Phase, the vertices with repeated names of mg-tree are deleted by each 
consensus-serer. An mg-tree of CSB without repeated name vertices is shown in Figure 12. Each 
consensus-server then uses the VOTEmix function on its mg-tree (from leaf to root) to compute the 
common value. For example, CSB can obtain the common value 1 by VOTEmix. VOTE(R) = 
((0,0,1,1,1), (0,1,1,1,1), (0,1,1,1,1), (1,1,1,1,1), (1,0,0,0,0), (0,0,0,0,0)) = (1,1,1,1,0,0) = 1. 
 
 
 
 20 
(Consensus’): Root value is common. By Theorem 1, (Consensus’) is satisfied 
(Validity’):  VOTE(α) = v for all fault-free consensus-servers, if the initial value of all 
consensus-server is vs say v = vs. 
Most consensus-servers are fault-free. The value of the correct vertices for all of the fault-free 
consensus-servers’ mg-trees is v. Therefore, each correct vertex of the mg-tree is common (Lemma 
1), and its true value is v. Using Theorem 1, this root is common. The computed value VOTE(α) = v 
is stored in the root for all the fault-free consensus-server. Therefore, (Validity’) is satisfied.  
 
Theorem 3: CCP requires zm+1 rounds in the Message Exchanging Phase to solve the 
Consensus problem in a two-level combined wired/wireless network, and zm+1 (zm=(zn-1)/3)) 
is the minimum number of rounds in the “Message Exchanging Phase”.  
Proof: The “Message Exchanging Phase” is a time consuming phase. Fischer and Lynch [5] 
indicated that t+1 (t=(n-1)/3) rounds are the minimum number of rounds required to get enough 
messages to achieve Consensus. The network architecture of Fischer and Lynch [5] is flat 
architecture, but the network architecture of our system is two-level architecture. In our protocol, 
only consensus-servers need to exchange the messages in the Message Exchanging Phase, so the 
number of required rounds of message-exchanges is zm+1 (zm=(zn-1)/3). Thus, CCP requires zm+1 
rounds, and this number is the minimum. 
 
Theorem 4: The connectivity of each consensus-server in the two-level combined 
wired/wireless network is c (c>cm+cd+zm+zd). For the zone level, the connectivity cp of Zonep 
must be larger than the number of malicious faulty components (processors and 
communication links) plus the number of dormant faulty components in Zonep, where 1≤p≤zn. 
Proof: Meyer and Pradhan [7] used a time-out mechanism to detect a dormant faulty component. 
However, the time-out mechanism cannot detect a malicious faulty intermediate component. To 
avoid the majority value being dominated by malicious faulty intermediate components, the 
connectivity constraint in the network by Meyer and Pradhan [7] is c’ (c’>2cm+cd+2zm+zd). In SRFC, 
the network connectivity constraint is improved. For higher network level, the connectivity of each 
consensus-server is c (c>cm+cd+zm+zd). For the zone level, the connectivity cp of Zonep must be 
larger than the number of malicious faulty components plus the number of dormant faulty 
components in Zonep, where 1≤p≤zn. Because a symmetric key is used, the receiver processor can 
detect a message that is influenced by dormant and malicious faulty intermediate components.  
 22 
 
Table 1.  The constraints of various Consensus protocol for different network structures 
 Network Structures Constraint 1 Constraint 2 
Yan et al. [18] Fully Connected 
Network 
n >3pm c =n-1 
Meyer et al. [7] General Network n >3pm+pd c >2(pm+ cm)+pd+cd 
Siu et al. [13] General Network n >(n-1)/3+2pm+pd c >2(pm+ cm)+pd+cd 
CCP Two-level Combined 
Wired/Wireless Network 
zn >(zn-1)/3+2zm+zd c> zm+cm+zd+cd 
 
Table 2. Some instances of the number of rounds required for various Consensus protocols 
The number of rounds required in Message Exchanging Phase  
 n=128, zn=32 n=128, zn=16 n=128, zn=8 
Yan et al. [18] t+1, t=(n-1)/3 43 43 43 
Meyer et al. [7] t+1, t=(n-1)/3 43 43 43 
Siu et al. [13] t+1, t=(n-1)/3 43 43 43 
CCP zm+1, zm=( zn-1)/3 11 6 3 
 
Reference 
[1] O. Babaoglu, and R. Drummond, “Streets of Byzantium: Network Architectures for Fast 
Reliable Broadcasts,” IEEE Transaction on Software Engineering, Vol. 11, No. 6, 1985, pp. 
546-554.  
[2] T. Chandra and S. Toueg, “Unreliable Failure Detectors for Reliable Distributed Systems,” 
Journal of the ACM, Vol. 43, No. 4, 1996, pp. 225-267. 
[3] J. Daemen, V. Rijmen, “The Rijndael Block Cipher,” AES Document Version2. 
 24 
[18] K.Q. Yan, Y.H. Chin and S.C. Wang, “Optimal Agreement Protocol in Malicious Faulty 
Processors and Faulty Links,” IEEE Transaction on Knowledge and Data Engineering, Vol. 
4, No. 3, 1992, pp. 266-280. 
[19] S. Yi, R. Kravets, “Key Management for Heterogeneous Ad Hoc Wireless Networks,” 
Proceedings of the 10th IEEE International Conference on Network Protocols, 2002, pp. 
202-203. 
 
 
 
 
 26 
[13] K.Q. Yan and S.C. Wang, “Visiting Byzantine Agreement underlying Ad Hoc 
Environment,” in Journal of Computer and System Sciences International, Vol. 46, No. 1, 
January 2007, pp. 129-135. [SCI]  (字數：5569) 
 
(二)《期刊論文》--國內期刊論文 
[1] 王淑卿, 嚴國慶, 王順生, 董育萍, “以負載平衡為基礎的階層式無線感測網路分群機制,” 
in CY Journal, Vol. 14, ISSN 1026-244X, Sep. 2009..   . (校內 B 級) 
[2] 嚴國慶, 王淑卿, 王順生, 陳秀芳, “在階層式點對點網路拓樸下以負載平衡為導向之排
程機制,” in CY Journal, Vol. 14, ISSN 1026-244X, Sep. 2009..   . (校內 B 級) 
[3] S.C. Wang, S.S. Wang, and K.Q. Yan, “Optimal Agreement in a Generalized Scale Free 
Network,”in CY Journal, Vol. 13, ISSN 1026-244X, Sep. 2008, pp. 519-544. (校內 B 級) 
[4] K.Q. Yan, S.S. Wang, S.C. Wang, and T.S. Chen, “The Anatomy Study of Resource 
Management in Grid Computing,”in CY Journal, Vol. 13, ISSN 1026-244X, Sep. 2008, pp. 
87-106. (校內 B 級) 
[5] 嚴國慶,王淑卿, 陳秀芳,王順生, “以兩階段排程演算法提昇動態階層式點對點網路拓樸
之負載平衡,”International Journal of Advanced Information Technologies (IJAIT), Vol. 1, 
June. 2008, pp. 30-46. (校內 B 級) 
[6] 王淑卿, 蕭正三, 嚴國慶,王順生,“以動態調整穩定路徑繞徑協定改善動態無線感測網路
之穩定性,”International Journal of Advanced Information Technologies (IJAIT), Vol. 1, June. 
2008, pp. 47-61. 
[7] 嚴國慶,王順生,王淑卿,王朝宏, “建置以頻道分配機制為基礎的 WiMax 無線寬頻網路,”朝
陽商管評論,第 7 卷，第 2 期, April 2008, pp. 27-44. (校內 B 級) 
[8] 嚴國慶 ,王淑卿 , 董育萍 , “無線感測網路中以負載平衡為考量的群組拓撲建置機
制,”International Journal of Advanced Information Technologies (IJAIT), Vol. 1, Oct. 2007, pp. 
2-20. (校內 B 級) 
[9] 王淑卿, 潘信宏, 嚴國慶,羅有隆,”隨意式無線網路中階層式穩定分群及管理者選派方法,” 
International Journal of Advanced Information Technologies (IJAIT),Vol. 1, Oct. 2007, pp. 
40-55. (校內 B 級) 
[10] S. C. Wang, K. Q. Yan, and G.Y. Zheng, “Byzantine Agreement with Dual Failure Mode for 
Virtual Subnet of Mobile Ad-hoc Network,”in CY Journal, Vol. 11, ISSN 1026-244X, Sep. 
2007, pp. 375-394. (校內 B 級) 
[11] 嚴國慶,王淑卿,黃禹翔,“以穩定拓樸修正演算法 提昇隨意式網路拓樸之穩定性,”in CY 
Journal, Vol. 11, ISSN 1026-244X, Sep. 2007, pp. 145-172. (校內 B 級) 
 
(三)《會議論文》--國際會議論文 
[1] S.C. Wang, T.C. Chung and K.Q. Yan, “A Smart MVC-iTV Framework for Interactive 
TV,” The 2009 International Symposium on Applied Computing and Computational 
Sciences (ACCS 2009), Sanya, Hainan Island, China, April 24-26, 2009.   (EI) 
[2] K.Q. Yan, S.C. Wang and Chia-Wei Liu, “A Hybrid Intrusion Detection System of 
Cluster-based Wireless Sensor Networks,” The International MultiConference of Engineers 
and Computer Scientists 2009 (IMECS 2009), Hong Kong, 18-20 March, 2009, pp.411-416 . 
[3] S.C. Wang, X.H. Liang and K.Q. Yan, “Capability Based Clustering Mechanism in 
WiMAX,” The International MultiConference of Engineers and Computer Scientists 2009 
(IMECS 2009), Hong Kong, 18-20 March, 2009, pp. 417-422. 
[4] S.C. Wang, K.Q. Yan and C.H. Wang, “A Channel Allocation based WiMax Topology,” 
The International MultiConference of Engineers and Computer Scientists 2009 (IMECS 
2009), Hong Kong, 18-20 March, 2009, pp. 299-304. 
 28 
[3] 王淑卿、呂彗君、嚴國慶, “在資料網格環境下以分群機制提升資料儲存的效能,” 2009
第三屆管理學術與實務研討會，僑光技術學院，April 24, 2009,  
[4] K.Q. Yan, S.S. Wang, S.C. Wang and C.P. Huang, “The Study of Consensus with Fallible 
Communication of Cloud Computing,” 2009 年資訊科技國際研討會，朝陽科技大學，
April 24, 2009. 
[5] 王淑卿、呂彗君、嚴國慶, “在資料網格環境下以服務導向架構提升資料儲存的效能,” 
2009 年資訊科技國際研討會，朝陽科技大學，April 24, 2009. 
[6] S.C. Wang, K.Q. Yan, S.S. Wang and C.P. Huang, “Consensus under Cloud Computing 
Environment within Malicious Faulty Transmission Media,” 2009 第四屆數位教學暨資訊
實務研討會(2009EITS), 南台科技大學，April 1, 2009, pp. 27. 
[7] S.C. Wang, K.Q. Yan, S.S. Wang and C.P. Huang, “Achieving Consensus in a Dual 
Fallible Cloud Computing Environment，” 2009 電子商務與數位生活研討會，實踐大學，
March 14, 2009, pp. 775-788. 
[8] 王淑卿、嚴國慶、王順生、賴怡君，“使用串流控制通訊協定提昇行動多媒體服務品
質之研究，”2008 數位內容學術研討會，元智大學，Dec. 26, 2008 
[9] K.Q. Yan, S.C. Wang and C.W. Liu, “Hybrid Intrusion Detection System in Cluster-based 
Wireless Sensor Networks,” 2008 民生電子研討會，景文科技大學，Dec. 5, 2008, 
pp.172-179. 
[10] 王淑卿、梁席華、嚴國慶，“以分群機制提昇 WiMAX 網路傳輸的穩定性,” 2008 民生
電子研討會，景文科技大學，Dec. 5, 2008, pp. 597-604. 
[11] 王淑卿、嚴國慶、王朝宏，“Using Collision Avoidance and Priority-based Scheduler to 
Improve the Bandwidth Utilization of WiMax，” 2008 年資訊管理及應用國際研討會，育
達商業技術學院，June 6, 2008. 
[12] 嚴國慶、王淑卿、賴怡君，“Using Examine of Packet Loss and Disperse Degree of Packet 
Loss to Promote the QoS of Multimedia，” 2008 年資訊管理及應用國際研討會，育達商
業技術學院，June 6, 2008. 
[13] 王淑卿、梁席華、王順生、嚴國慶，“以叢集立方體建置階層式 WiMAX 網路拓樸架
構，”第三屆智慧生活科技研討會，國立勤益科技大學，June 6, 2008. 
[14] 嚴國慶、王順生、王淑卿、王朝宏，“結合頻道分配與碰撞排除機制提升 WiMax 之
頻寬使用率，”第三屆智慧生活科技研討會，國立勤益科技大學，June 6, 2008. 
[15] 王淑卿、梁席華、嚴國慶、王順生，“以節點能力為基礎建立叢集式 WiMAX 網路拓
樸，”第 19 屆國際資訊管理學術研討會，國立暨南國際大學，May 16~17, 2008. 
[16] 嚴國慶、王順生、王淑卿、劉佳瑋，“叢集式無線感測網路下入侵偵測之研究，” 第
19 屆國際資訊管理學術研討會，國立暨南國際大學，May 16~17, 2008. 
[17] 王淑卿、嚴國慶、王朝宏、陳昱東，“以頻道分配機制提昇 WiMax 無線寬頻網路的
效能，”第九屆管理學域學術研討會，朝陽科技大學，May 6, 2008, pp. A-53-A-68.  (校
內 B 級) 
[18] 王淑卿、嚴國慶、王順生、劉佳瑋，“階層式無線感測網路下混合式入侵偵測系統之
研究，”第九屆管理學域學術研討會，朝陽科技大學，May 6, 2008, A-25-A-39.  (校內
B 級) 
[19] 嚴國慶、王淑卿、宋淑瑛、陳昱東，“以動態需求屋進行企業資源配置最佳化之研究，”
第九屆管理學域學術研討會，朝陽科技大學，May 6, 2008, pp. A-1-A-10. 
[20] 王順生、王淑卿、嚴國慶、賴怡君，“以 SCTP 提昇行動多媒體服務品質之研究，”
第九屆管理學域學術研討會，朝陽科技大學，May 6, 2008, B-15-B-28. 
 30 
[39] K.Q. Yan, S. C. Wang, and Y.P. Lin, “Agreement under Wormhole Network within 
Arbitrary Faulty Buffer,” 第十三屆行動計算研討會暨國科會行動計算研究計畫研究成
果發表會，大葉大學，April 20, 2007. 
[40] 嚴國慶、王淑卿、陳秀芳，“以混合式排程法提供多階層式點對點網路拓樸之負載平
衡,” 2007 國際學術研討會，銘傳大學，March 23, 2007. 
[41] 王淑卿、蕭正三、嚴國慶，“以動態調整機率模型提供穩定之無線感測網路拓樸,” 2007
國際學術研討會，銘傳大學，March 23, 2007. 
[42] 王淑卿、嚴國慶、董育萍，“階層式無線感測網路中群組管理者選派及分群機制之建
立,” 2007 國際學術研討會，銘傳大學，March 23, 2007. 
[43] 王淑卿、蕭正三、嚴國慶，“支援無線感測網路穩定通訊的拓樸協定,” 2007 電子商務
與數位生活（ECDL2007）研討會, March 17, 2007, 實踐大學. 
[44] 王淑卿、嚴國慶、董育萍，“無線感測網路中群組管理者選派及分群機制之建立,” 2007
電子商務與數位生活（ECDL2007）研討會, March 17, 2007, 實踐大學. 
[45] 嚴國慶、王淑卿、陳秀芳，“結合重心及能力函數分群法提供多階層點對點系統穩定
之服務,” 2007 電子商務與數位生活（ECDL2007）研討會, March 17, 2007, 實踐大學. 
1 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC95-2221-E-324-019-MY3 
計畫名稱 加密式協議問題在行動隨意式網路架構下的突破性解法 
出國人員姓名 
服務機關及職稱 
朝陽科技大學企業管理系教授 嚴國慶 
會議時間地點 98.4.24~98.4.26, Sanya, Hainan Island, China 
會議名稱 2009 International Symposium on Applied Computing and Computational Sciences (ACCS 2009) 
發表論文題目 A Smart MVC-iTV Framework for Interactive TV 
 
 
一、 參加會議經過 
近年來，複雜系統的建模、先進的科學與工程計算、複雜的演算法以及多學科解決問題的環
境對於傳統學科的發展帶來了越來越多的挑戰。由於解決一些大規模的複雜問題往往涉及到緊迫
的時間問題，這就需要人們去探索強大的演算法與計算技術。在這樣的背景下，一個新興的交叉
學科---計算科學與應用計算，涉及到科學、工程、藝術與人文學科，就這樣產生了。為了促進這
門新興的交叉學科的發展，第一屆國際應用計算與計算科學會議(ACCS 2008)於 2008年 8月 1-3
日在香港成功舉辦，來自 21個國家的代表參加了此次會議。 
為了進一步推動這個學科的發展與交流，第二屆國際應用計算與計算科學大會(ACCS 2009)
於 2009年 4月 24-26日在中國海南三亞舉行。本次大會將為在應用計算與計算科學領域的科學
家、學者、企業人士提供一個三天的交流論壇。本次會議的主題是“應用計算與計算科學的最新進
展”。本次會議的主要目的是通過相互交流與討論，各國專家學者以及業界人士來分享在應用計算
與計算科學領域的最新成果，提出在應用計算與計算科學領域內的熱點問題和探索應用計算與計
算科學領域的最新計算技術。同時，本次會議也將為在應用計算與計算科學領域的參會人員提供
一些新的研究方向以及一些創新的應用。 
由於計算科學與應用計算是近年來形成的一個新興的交叉學科，涉及到科學、工程、藝術與
人文學科。本次會議旨在為各國的電腦科學家、應用數學家、計算工程師以及不同學科與領域的
專家學者提供一個交流思想與展示最新成果的平台，以促進計算科學與應用計算技術的發展。因
此，此次會議主要的議題包括: 
3 
 Computational Chemistry (計算化學)  
 Computational Biology (計算生物)  
 Computational Electromagnetics (計算電磁學)  
 Computational Graphics (計算圖形學)  
 Granular/Soft Computing (軟計算)  
 Intelligent, Bio-inspired and  Autonomic Computing (智慧計算)  
 Internet/Web Computing (互聯網路計算)  
 Mobile Computing (移動計算)  
 Grid/Clustering Computing (格點/集群計算)  
 Agent-based Computing (代理計算)  
 Data Mining/KDD (數據挖掘)  
 Informational Retrieval (資訊提取)  
 Signal/Image Processing (圖像與信號處理)  
 Dynamic Systems (動力系統)  
 Applications related to Economics\ Finance\Engineering (與經濟、金融、工程、社會相關的
計算應用) 
 
在此次的會議中共安排了七場的 Keynote Speech，包括： 
一、 來自日本Osaka University, Division of Electrical, Electronic and Information Engineering
的 Prof. Tetsuzo Tanino，主講的題目為“Multiobjective Optimization Approach to 
Multiclass Support Vector Machines”。 
二、 來自西班牙 Autonomous University of Barcelona, Department of Economics and 
Economic History 的 Prof. Juan Enrique Martínez-Legaz，主講的題目為“Monotone 
Operators: Convex Representations, Surjectivity Theorems and Extensions”。 
5 
牌間的遙控器能互通使用。再者，因為電視遙控器是專屬於不同機型的電視輸入裝置，其中多
數是不可改變操作介面的硬體裝置，加上遙控器裝置與電視設備是一種硬體間一對一協同運作
的關係，使用者們在一起觀賞電視時大多也只能有一人能操作遙控器，這使得使用者必須習慣
這種不可改變的固定式一對一架構去使用目前的電視服務。 
雖然目前有些新型遙控器透過顯示裝置提供可變式介面，但還是多侷限於與被遙控設備間的
硬體協同關係，充其量只是整合了多種不同設備的遙控功能於同一裝置，雖然可以改變搖控器
的操作介面，卻是服務於不同設備，無法有效配合電視播出內容即時提供使用者不同的操作介
面與節目互動，因此，這類可變式介面的新型遙控器還是無法改善使用者必須被動式吸收的傳
統電視服務。 
使用者已經習慣既有的被動式電視服務，也接受了一對一的操作模式，多數人們更沒想過可
變式的遙控器操作介面可以帶來什麼好處，這些都是傳統電視服務所造成的不良影響，因此，
必須逐一打破這些傳統所造成的限制，才能有效發揮下一代聯網電視設備所能帶來的進步。 
數位電視服務在全球各地已逐漸取代傳統的類比電視，因應這種數位化的資訊發展並針對
不同的使用趨勢，網路電視與互動電視服務已成為未來的發展重點。以目前來說，大都以遙
控器做為電視的輸入裝置，而傳統的定型式遙控器是否適用於未來的數位電視服務也逐漸被
專家學者所討論。因此，本研究針對此一需求進行研究，從定型式電視遙控器的發展到數位
化電視服務的型態深入了解，並討論傳統定型式遙控器對數位化電視服務可能帶來的限制，
進而提出裝置通訊的架構。本研究所提出的裝置通訊之架構，除可有效使用於數位電視服務
的全新遙控服務，並可提供使用者與數位節目進行互動的平台。 
“應變式電視遙控機制與多人互動數位電視架構”是一種基於數位電視與聯網環境，進而提供
使用者享受更好的整合性電視服務。最大特點在於改進了傳統電視設備與遙控裝置的硬體限
制，提供使用者一種可隨電視節目內容而變化操作介面的遙控器，讓節目內容的設計能提供更
多互動給使用者；此外，進行傳統電視服務時，大多數電視設備同一時間只接受一個遙控裝置
的輸入，這是種一對一的使用限制，而“應變式電視遙控機制與多人互動數位電視架構”更打破這
種硬體裝置間的一對一關係，讓多個使用者能利用自有的手持裝置，在本架構中變成個人專用
的電視遙控器，同時在同一電視設備的播出節目中共同參與互動，這些都是目前的電視服務環
境無法提供的。 
在這篇論文中我們有很好的研究成果，也深得與會學者的肯定，對於筆者未來的研究具有
7 
 
 
 
會場照片
 
 
 
圖左為杭州電子科技大學楊甦宏教授
 
 
 
9 
 
 
 
 
 
 
11 
 
 
 
 
 
 
13 
more devices, with the result that are less convenient to be applied in a normal home information system. 
Hence, this study proposes a framework with the “virtual room” concept and let audiences use handheld 
devices to interact with iTV services and family, especially in an easy and convenient way. 
2. Previous work 
According to Petri Lankoski, and Inger Ekman, one important issue in producing content for digital 
television is what kind of content viewers want and how they want to interact with the content. They 
considered iTV program should provide interesting game like interaction and integrate a game with a 
conventional television series so that the game has effect on series [2]. Jens F. Jensen also considered 
iTV services with more interactive shows will provide users to participate in group while viewing, that 
is surely a thing people will be seeing in the future [3]. The scholars used an underlying model for 
structured multimedia descriptions and annotations, and allowed the establishment of spatial, temporal, 
and inking relationships.  
For iTV program design, scholars also proposed the frameworks for iTV services. Most of the iTV 
programs are usually delivered in broadcasting, and interactions within them are provided by the server 
services. For more interactions, different architectures of iTV services are sometimes necessary. Borko 
Furht et al. presented the framework of iTV services and that was based on the TV set-top box (STB). It 
is a kind of local connections between STB and other devices, such as game controller, VCR, and TV [4]. 
This is a more common method to communicate iTV services and other devices in a local-connect way 
because people are habitual that. In fact, that is usually limited in different manufacturing technology or 
provider. 
Jehan et al. considered the bad interface design and terrible interaction function that the industry is 
currently on its way to make, so they proposed MiTV application for iTV services [5]. They had already 
implemented MiTV application using their distributed architecture that integrates TV appliance and 
Tablet PC. On the Tablet PC, MiTV application provided convenient interfaces for audiences to interact 
with the iTV programs. The interfaces on Tablet PC are changed in coordination with the programs on 
TV. 
MiTV application possesses the characteristics of variable interfaces for people input. It 
communicates with the TV tuner, cable, or satellite box locally. The input interfaces shown on Tablet PC 
are friendly and artistic. However, Tablet PC is usually bigger than handheld device in the dimensions 
and less mobile. This study considers that are against the habit of people using TV remote controllers 
with “handheld”. 
15 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Each handheld device first open the Start Page to wait for uni-roomid inputted. After audiences 
complete to input the uni-roomid, each Handheld Client would connect to the video service indirectly 
via another XML-command with the same uni-roomid. After the connection with some Handheld Client 
was established, the Application Server would return an XML-command “ready” with relative 
uni-roomid to the Show Client via XML Socket Server. The Show Client accepted the XML-command 
with the same uni-roomid and then took off the menu to ready status. 
 
 
 
 
 
Figure 1. The MVC-iTV framework architecture 
17 
3. Conventional remote controller usually has a fixed appearance after manufactured. Its interface 
of input is inflexible. This is a serious limit for the development of iTV services. However, the 
virtual interfaces in Handheld Clients are built with software technology, downloaded for Main 
Servers immediately, and the functions of button pushed can be change on demand.  
5. Conclusion 
The MVC-iTV framework is based on distributed computing to integrate with the characteristics of 
previous researches. This is a special method to integrate different devices for iTV services with 
distributed computing, and that is different from the most distributed computing systems to work in 
coordination for total performance of processing. MVC-iTV framework is mainly aimed at the 
multi-user interaction in a family, and it extends the functions of different devices to provide more 
conveniences to people, via system software. Moreover, the mobile of people is also the emphasis in 
MVC-iTV framework. Different from the traditional local-connection mode, people can use their own 
handheld devices in any virtual room of MVC-iTV. That is a better way to retain the mobile for people. 
Acknowledgments: This work was supported in part by the Taiwan National Science Council under 
Grants NSC95-2221-E-324-019-MY3 and NSC96-2221-E-324-021. 
References 
[1] M. Sohn and G. Lee, “SonarPen: An ultrasonic pointing device for an interactive TV”, IEEE 
Transactions on Consumer Electronics, Vol.50, No.2, 2004, pp. 413-419. 
[2] J. Zaletelj, J. Perhavc and J.F. Tasic, “Vision based human-computer interface using hand 
gestures”, Eighth International Workshop on Image Analysis for Multimedia Interactive 
Services, Santorini, Greece, 16 October 2007, pp. 41-41. 
[3] P. Lankoski and I. Ekman, “Integrating a multi-user game with dramatic narrative for 
interactive television”, European Conference on Interactive Television, Brighton UK, 2-4 
April 2003, pp. 2-4. 
[4] J.F. Jensen, “Interactive television: new genres, new format, new content”, Proceedings of the 
Second Australasian Conference on Interactive Entertainment, Sydney, Australia, 23-25 
November 2005, pp. 89-96. 
[5] B. Furht, D. Kalra, F.L. Kitson, A.A. Rodriguez and W.E. Wall, “Design issues for interactive 
television systems”, IEEE Computer, Vol.28, No.5, 1995, pp. 25-39. 
