行政院國家科學委員會專題研究計畫期末進度報告 
異質網路中提供具情境知覺之視訊串流服務—子計劃一:具情境知覺之點對
點視訊串流服務及異質網路之資源與移動管理 
 
Context-aware P2P Video Streaming and Mobility Management over 
Heterogeneous Networks 
 
計畫編號：NSC 97-2221-E-194-012-MY3 
執行期限：97 年 8月 01 日至 100 年 07 月 31 日 
主持人：黃仁竑教授  國立中正大學資訊工程研究所  
Email: rhhwang@cs.ccu.edu.tw 
一、 中文摘要 
隨著網際網路技術的快速發展，以及無線網
路技術的普及，隨時隨地收看視訊串流服務已不
再是個遙不可及的夢想。由於未來的網路環境將
會是不同型態的無線網路銜接固有有線網路所形
成的異質網路，使得如何在異質網路下提供流暢
且穩定的視訊串流服務已經成為一項非常重要的
研究主題。因此，本計畫的主要目的是在探討異
質網路之下跨階層資源、群播管理機制，並整合
相關情境資訊、移動管理演算法及點對點(P2P)技
術來達到高效率的跨網路可調式(SVC)視訊串流
服務。為達成此目標，本計畫以三年時間從三個
研究議題進行，其中包括資源管理、行動管理、
以及點對點視訊串流。在資源管理部分，我們研
發了(1)WiFi/Fixed WiMAX 異質網路下跨網路資
源保留機制、(2) WiFi 網路下可適性群播頻寬配置
機制、(3) WiMAX 網路下最佳化群播資源配置機
制。在行動管理部分，我們研發了(1)WiFi/Fixed 
WiMAX 異質網路下跨網路行動管理機制、(2)多
重網址設備之容錯與負載平衡、(3)WiFi/Mobile 
WiMAX/3G 異質網路下行動管理機制。在點對點
視訊串流部分，我們研發了(1)點對點隨選視訊系
統、(2)點對點可調適視訊串流系統、(3)基於小世
界特性與效應之點對點視訊串流網路分析、(4)基
於自相似圖形之超級點網路建構機制、(5)點對點
可調適視訊串流之同步機制。為了驗證我們設計
的機制，我們設計了一系列的模擬實驗與實例推
演來展示其效能。 
 
關鍵字：視訊串流服務、情境知覺、資源管理、
行動管理、點對點計算、異質網路 
 
Abstract 
Rapid development of Internet technologies 
and wireless network technologies makes that 
watching video streaming service every time 
everywhere become possible. In the future, network 
environment will be heterogeneous networks which 
integrate heterogeneous wireless networks with 
high-speed wire network. Due to complexity of 
heterogeneous networks, how to provide high 
quality and high reliability for video streaming 
service over heterogeneous networks has become a 
challenge. Therefore, in this three-year project, there 
are three major issues, (1) resource management (2) 
mobility management and (3) peer-to-peer (P2P) 
video streaming. For resource management issues, 
we designed (1) a resource reservation mechanism 
in WiFi/Fixed WiMAX network, (2) an adaptive 
bandwidth allocation mechanism for layered video 
multicasting in WiFi Network, and (3) an optimal 
resource allocation for layered video multicasting in 
WiMAX Network. For mobility management issues, 
we proposed (1) a context-aware handoff decision 
mechanism for WiFi/Fixed WiMAX network, (2) a 
fault-tolerant and load balancing mechanisms for 
multi-homing devices, and (3) a context-aware 
handoff decision mechanism for out-door 
heterogeneous networks. For P2P video streaming 
issues, we presented (1) a proxy-assisted P2P video 
on demand system based on NuWeb, (2) a P2P 
SVC-encoded video streaming system based on 
network coding, (3) an analysis on P2P topology 
from the view of small world network, (4) a 
(2) 針對 IEEE 802.11e 網路中 EDCA 與 HCCA 特
性，設計 QoS 保證機制： 
在傳統 IEEE 802.11 網路之中，不論 Ad hoc
或者 Infrastructure 模式，都採用 DCF 模式傳送資
料，但在 IEEE 802.11e 網路之中，DCF 以及 PCF
被加以改良來提供 QoS 服務，稱為 Enhanced DCA 
(EDCA) 及 HCF Controlled Channel Access 
(HCCA)，其中 EDCA 提供分散式媒體存取，而
HCCA 提供類似集中式媒體存取介面。為提供子
計畫二以及真實網路情況解決方案，本子計畫將
分別根據 EDCA 與 HCCA 特性設計 QoS 保證機
制。 
 
2. WiFi 網路下可適性群播頻寬配置機制 
在 WiFi 無線網路環境中，點對點傳輸並不適
合用來傳輸視訊串流，因此我們針對 WiFi 無線網
路傳輸的部份提出一個解決方案，讓視訊串流系
統也能良好運作。我們假設影音資訊可以正常地
傳送到無線網路橋接器(Access Point，AP)，再經
由 AP 進行群播傳送到行動裝置(Mobile Station，
MS)。本研究著重的部份是在如何依據群播群組
中行動裝置的接收狀況來調整 FEC code rate 與頻
寬，讓群組中的行動裝置都能夠正確地收到影音
資訊，還可使整個系統獲得的收益最大化。 
 
3. WiMAX 網路下最佳化群播資源配置機制 
雖然使用SVC編碼技術能滿足各種異質性設
備的需求，但在 WiMAX 無線網路環境下傳送
SVC 視訊串流仍然有許多的問題需要被解決。由
於使用者可能在 BS 範圍內的任何一處，甚至可能
正在移動，而我們知道在無線網路環境下的封包
丟失率與傳輸距離是正相關，也就是說使用者接
收影音資料的封包丟失率會隨著傳輸距離增加而
增加，使得 SVC 視訊資料能夠被使用者成功解碼
並接收的機率大幅下降。 
因此，本研究目的是在 WiMAX 網路下設計
最佳化群播資源配置機制。我們將利用 WiMAX
所支援的 MBS(Multicast and Broadcast Service)來
進行 SVC 視訊串流的群播，並於 MBS OFDMA 
zone 中進行最佳化資源配置。本研究的最佳化資
源配置是指各層影片應該選用何種調變方式
(Modulation and Coding Scheme, MCS)以及應用
層應該給予多少錯誤更正碼(Error correction code)
的冗餘量(Overhead)來進行傳送。 
 
B. 行動管理 
1. WiFi/Fixed WiMAX 異質網路下行動管理機
制 
為了維護使用者在異質網路中移動時的服務
品質，有效率且準確的換手決策機制是一項重要
的議題。傳統基地台的換手決策只依據基地台當
時的訊號強度來決定是否該進行換手，並根據當
時所處的環境來選擇候選基地台，這種方式產生
的決策容易造成特定基地台的高負載率，降低行
動裝置的傳輸效能，有時也會造成在數個 AP 間
不斷換手的乒乓效應(Ping Pong Effect)問題。 
在瀰漫式環境(Ubiquitous Environment)中，使
用各式各樣的情境資訊來提供使用者適時適地適
情境的智慧型應用是本研究的重點。本研究目的
在於透過設計以下的機制，使換手時對視訊串流
服務品質的影響降到最小: 
(1) 建立情境資訊模型: 
讓使用者在換手時能有系統地取得所需的情
境資訊。 
(2) 設計 context-aware 換手機制: 
幫助使用者做出快速準確的換手決策，讓行
動設備預先知道要候選基地台的 SSID、channel
等資訊，以減少與 AP 重新建立 association 時的
channel scan 等 signaling overhead，也同時減少換
手時所造成的延遲時間。 
 
2. 多重網址設備之容錯與負載平衡機制 
本研究目的是以 Mobile IPv6 網路為基礎，提
出一個新的網路架構，使網路設備能透過多重網
址的特性，確保現有的連線不會因網路錯誤而中
斷，提供上層的視訊串流服務一個更穩定的網路
環境。我們預期新的網路架構只需對少部份的網
路區域作出變動即可實現，且擁有易於擴充的特
性。此外，我們也探討建立多重網路時與多重網
路啟用後對於網際網路效能所帶來的影響。 
 
3. WiFi/Mobile WiMAX/3G 異質網路下行動管
理機制 
為了維護使用者在異質網路中移動時的服務
品質，有效率且準確的換手決策機制是一項重要
的議題。過去研究所提出的換手機制大多數是
computer-centric，並沒有將各種網路環境及情境
資訊納入考量，所以無法實現 Mark Weiser 提出
詢，與混合式架構能有一般化查詢訊息及對 churn
容忍度較高的優點，設計出一個針對超大型 P2P
應用 super node 層的拓樸，達到有效降低查詢訊
息重複的問題，及在很短的時間及經過很少數量
的節點就將所有的查詢訊息傳送給所有的節點。 
我們預期以混合式P2P系統拓樸來設計 super 
node 架構，使得 super node 的 overlay 較為平衡且
低直徑(low diameter)。換句話說，super node 架
構上的任兩點之間只需要經過極少數的節點就可
以到達對方，使得查詢可以非常有效率，依循這
個 overlay 發送的查詢能有效降低整個系統間重
複的廣播訊息。另外，這個拓樸還要能夠有效的
克服超節點離開(single point failure)的情況發生，
以及在超大規模 P2P 系統上有不錯的延展性
(scalability)。 
 
5. 點對點可調適視訊串流之同步機制 
各種的 P2P Streaming 系統已經被發展出來，
不過在這些系統上我們發現即使在同一頻道的使
用者，雖然同時在觀看影片，但是所觀看的影片
片段卻因為加入的時間不同、網路頻寬的差異而
大有不同，例如在線上視訊會議中，由於 P2P 網
路的特性而導致影片傳輸至不同使用者的過程中
存在極不同的延遲時間，這樣時間延遲的差異會
使得線上會議的進行將無法同步討論。因此，這
個視訊不同步的問題是急需被解決的。 
為了達到同步播放的效果，我們預期利用
NTP(Network Time Protocol)提供所有使用者一個
統一的時間，接著針對每一個影片片段去計算它
們的下載時間，如此一來就可以推測出每一個使
用者開始播放影片的時間，而這個時間即為同步
的時間點。另外，每個使用者將能夠根據目前所
播放的影片片段來排程下一個下載片段，以維持
同步播放的效果。 
 
四、 文獻探討 
A. 資源管理 
1. WiFi/Fixed WiMAX 異質網路中跨網路資源
保留機制 
現今兩大熱門的無線網路當推 WiMAX 以及
WiFi 網路，而針對資源保留的研究可分為 IEEE 
802.11e QoS 連線品質保證機制[4][5][6][7]、IEEE 
802.16d QoS 連線品質保證機制[8][9]以及跨異質
無線網路(Heterogeneous WiFi/WiMAX networks) 
QoS 連線品質保證機制[10][11][12]。相關文獻分
別整理如下： 
壹、改善 IEEE 802.11e QoS 連線品質保證機制  
在 802.11e 的 WLAN 環境中，[4]針對聲音及
影像連線提出了一個兩階段的保護及保證機制。
在第一階段的保護機制，保護已存在的聲音及影
像串流免於受到新進來的串流影響，主要以
802.11e 為 基 礎 所 改 良 的 分 散 式 允 入 控 制
(Distributed Admission control, DAC)，對於 EDCA
不同的服務(services)，在每次 beacon 區間會規劃
媒介的使用，budget 代表著此 AC 可以傳送的時
間。每個 QSTA 各自會對每種 AC，根據上次
beacon 區間及 QAP 所宣佈的 budget，計算內部的
傳送時間限度(transmission limit)。每個 beacon 區
間其 transmission time不能超過 transmission limit。
當某個 AC 的 transmission budget 用盡時，新的
flow 便不能再獲得 transmission time 以保護目前
現存 flows 的 QoS 保證。除了以上第一階段的基
本機制外，作者另外提出了兩種加強允入控制的
方法：Enhancement with Required Throughputs 
and/or Delay (ETD) 及 Enhancement with a 
Non-Zero Budget Value (ENB)。ETD 採取所謂的
tried-and-known 方法：QAP 會先假設接受一個新
的影像或聲音串流，然後計算網路在數個 beacon
區間內的生產量及延遲程度。若平均生產量及延
遲程度沒辦法滿足 flows 的需求，則會決定不能接
受此 flow。ENB 使用 early-protection 策略，當
budget 低於某個門檻值時，不允許新的 flow 進入
系統，並且說明剩餘的頻寬仍可以讓 best effort
使用，並不會造成資源的浪費。第二階段的保護
機制，主要目的是為了保護影像或聲音串流不被
best-effort 的資料連線影響。主要考量到若有多個
data traffic 傳送失敗時，嘗試重傳的過程中，將可
能會大幅地降低系統效能。而與第一階段不同的
是，因為 data traffic 沒有嚴謹的 flow 概念，沒辦
法用TxLimit[0]管控AC0。作者在模擬的過程中，
發現最有效控制data transmission的方法是減少其
碰撞的機率。所以根據 data traffic 的負載量來動
態調整 data traffic 的參數，例：AIFS[0]、CWmin[0]
及 CWmax[0]。使用 window-increasing factor σ 
(也就是 persistent factor)調整 contention window。
每次發生碰撞時，乘上此係數改變 contention 
window 的大小。以及採取 Fast-Backoff (BF)，讓
容許重試次數多的 traffic 其 contention window 放
的架構，如此一來，WiFi 網路即有類似 WiMAX
系統一般的方式來支援連線導向的傳輸及 QoS，
進而大幅降低 delay、提升系統效能。並且提出一
個 Two-tier Hierarchical Bandwidth Allocation 
(THBA)機制來管理 DownLink 及 UpLink 傳輸，
來確保 QoS 的持續性及整個網路具有一致的頻寬
管理。最後數據結果使用 Qualnet 模擬器來確認所
提的架構效能提升。數據顯示了所提的整合架構
確實可在 WiMAX 及 WiFi 中提供不同類型的
services，同時大幅降低高優先權 end-to-end 間的
delay。 
[12]提出在 BS 的協助下，在 CPE (Customer 
Premises Equipment)上執行排程，使得在 polling
機制並且在 admission control 管控下，以提供 real 
time traffic的 delay bound及 non-real-time的 buffer 
bound 達到 QoS 保證。在這個整合架構下，作者
善用 11e 及 16d 兩個網路的 MAC layer 有相似的
QoS 特性，在 CPE 中加入 IME (Integration 
Management Entity)這個元件，來對應兩種網路中
的不同 traffic 類型。在不同網路下連線建立時，
這些對應除了 CPE 以外的元件都是通透的，說明
了他們整合 802.11e 及 802.16d 的 MAC 在 CPE 上
是不會增加 mobile node 的負擔。 
 
2. WiFi 網路下可適性群播頻寬配置機制 
Basalamah et al. [13]提出了一個具可適性與
可靠性的群播協定，此協定利用 RTS/CTS 以及
NACK 等技術來改善群播的效能。而 Choi et al. 
[14]提出的機制是從群播成員中挑選出領導者，代
替 整 個 群 組 來 進 行 回 應 動 作 ， 使 得
acknowledgements implosion 問題可以被避免。無
論如何上述的解決方案與標準的 802.11 群播不相
容，並且必要時須進行重傳，增加傳輸視訊串流
的延遲。 
Villalon et al. [15]提出了一個自動選擇群播
速率機制，此機制是利用行動裝置回報實體層通
道狀況的資訊來選擇最合適該群播群組的傳輸速
率。然而為了能準確的找出領導者，預設會使用
最低的速率來傳送 MP 訊框，讓所有使用者皆能
收到。而訊號最差的領導者也會使用最低速率來
傳送 MR 訊框，造成在這兩段時間內的網路資源
無法有效的利用。 
Das et al. [16] 提出了接收者導向(Receiver 
Driven Scheme)以及集中式(Centralized Scheme)可
適性群播機制。在接收者導向機制中，每一個使
用者可以快速地找到最適合的群播群組，並且可
以隨著通道狀況不同快速的調整，但是無法因應
行動裝置的通道狀況來動態調整群播群組數量，
若有群組無人訂閱則會浪費網路資源。而在集中
式機制中，AP 可以有效的掌控每一個接收者的狀
況，還可以在頻寬不足的情況下關閉某些群播群
組，因此集中式傳輸機制方案會比接收者導向機
制更能夠控制整個群播系統。 
Alay et al. [17] 提出一個 cross-layer 架構，該
架構能從 MAC、Transport 以及 Application layer
取得的資訊來分析最佳的群播速率及 FEC code 
rate 該如何進行選擇。透過不同群播速率以及冗
餘封包數量的實驗結果顯示出使用較高的群播速
率搭配較為強健的 FEC Code Rate 將會是比較有
效率的傳輸方案。 
 
3. WiMAX 網路下最佳化群播資源配置機制 
文獻[18]和[19]針對 baseline MBS system 的
缺點提出一個新的群播架構。與 baseline MBS 
system 最大的差異點在於加入了一個名叫
MBS-enhanced transport sublayer 的元件。此元件
包含了錯誤保護機制(Reed-Solomon Code)與封包
排程機制，使得群播效能可以被大幅提升。 
在 OFDMA 的資源配置議題上，數個研究如
[20][21]主要是探討如何在OFDMA資源與接收影
像品質的權衡之間取平衡點。在[20]中，作者以使
用者的角度來切入資源配置的問題，每當一位使
用者加入系統時，取其每單位資源所能增加的視
訊品質之最大值的配置方法，來進行資源的配置。
而[21]的作者依照各使用者的 SINR (Signal to 
Interference plus Noise Ratio)來選擇適當的 MCS，
並以 PSNR 值來做為接收的影像品質依據，最後
利用自己提出的演算法來求最佳的 data rate組合，
使得大多的使用者都能擁有很高的 PSNR 值。無
論如何，上述研究皆沒有考慮到在無線網路的環
境中，擁有高度封包丟失率的問題，只單純就接
收訊號的強度直接與 MCS 作對應。 
在[22]中，作者們希望藉由機會式群播[23]的
觀念，找到最適合該BS範圍下所有使用者的MCS
以及前向錯誤更正碼(FEC)的 code rate。在此一研
究中，indicator function 用來表示各個使用者接收
到的資料的機會。然而，indicator function 的值只
有 0 與 1 兩種狀態。事實上，這對使用者來說並
(1) Host Identity Protocol(HIP) [35][36] 
如圖 2 所示，在網路層與傳輸層之間加入 Host 
Identity layer，提供 identifier 和 locator 之間的對
應與轉換，並確保安全性，而不需變更上層協定，
僅需修改連線兩端的節點的網路層，網路協定堆
疊的變動則是藉由新增 IPv6 的延伸標頭完成。 
 
圖 2: HIP 
(2) Site Multihoming by IPv6 
Intermediation(SHIM6) [37]  
此架構在網路層與傳輸層之間加入 SHIM 
Layer(如圖 3 所示)，優點在於若節點未使用多重
網路，僅使用單一 IP 位址，並不會造成任何的負
擔，也不需變更上層協定，網路協定堆疊的變動
則是藉由新增 IPv6 的延伸標頭完成。 
 
圖 3: SHIM6 
(3) Location Independent Addressing for 
IPv6(LIN6) [38][39] 
此架構需設置一個 Mapping Agent(MA)，當兩節
點欲建立連線時，需先藉由查詢 DNS 伺服器以取
得 MA 位址，再查詢目標節點此時的位址。LIN6
將 IPv6 位址的 128 個位元拆成兩個部份，前 64
個位元為 locator，後 64 個位元則為 identifier。 
(4) GSE - An Alternate Addressing Architecture for 
IPv6 [40] 
此架構將 IPv6 位址的 128 個位元拆成前 64 個位
元為 locator，後 64 個位元則為 identifier，GSE 需
要上層協定僅以後 64 個位元所形成的 identifier
作為認證用，會有安全上的疑慮，GSE 以其他方
面加以輔助。 
參、Network and Routing-related solutions 
此類型的架構主要是藉由修改網路路由機制，
僅限於路由器，使得連線兩端的節點對多重網路
架構毫無查覺，此類型的作法有： 
(1) Multi Homing Aliasing Protocol(MHAP) [41]  
此架構將 IP 位址分為兩類：identifier space 和
locator space，並藉由數種特別的路由器來協助達
成多重網路，分別稱為 client 、 endpoint 和
rendezvous point(RP)，其中 client 和 endpoint 功能
相同，僅用以區分連線最初是由哪方所要求。 
 
3. WiFi/Mobile WiMAX/3G 異質網路下行動管
理機制 
在異質無線網路環境中，換手決策問題已經
被廣泛討論。然而過去大部分的換手策略
[42][43][44][45]都僅參考 AP/BS 有限的參數進行
決策，例如基地台當時的訊號強度，這種方式產
生的決策容易造成特定基地台的高負載率，降低
行動裝置的傳輸效能，有時也會造成在數個 AP
間不斷換手的乒乓效應(Ping Pong Effect)問題。因
此，換手決策需要考量更多的參數來因應異質網
路中多變的網路特性。  
近年來，情境感知換手決策也開始被討論
[46][47][48][49][50][51][52][53]，這也是較接近本
研究議題的相關文獻。在這些研究中，更多決策
參數加入討論，例如：服務類別、頻寬、電力、
成本、產能、以及延遲等都被加入評量網路是否
適合進行換手的依據。另外，QoS 也被列入考量
用來避免乒乓效應(Ping Pong Effect)問題。但是使
用者特性、喜好也左右選擇網路的適合度，因此
在我們第一年的研究[54]中，也特別將使用者特性、
喜好列入考量參數，但是前一篇研究只有針對無
線區域網路環境。 
進行決策方式對於本研究議題非常重要。有
文獻[46][55][56]利用成本函數(cost function)量測
可供選擇的網路成本(cost)，成本最低獲選為最適
合換手的網路。在[49]中，作者利用理想解類似度
 
圖 6: GridCast 網路示意圖 
 
圖 7: P2Proxy 運作示意圖 
 
圖 8: 包含 Batching 與 Patching 機制的 VOD 架構 
NUWeb(Net User＇s Web)[66]為中正大學吳
昇教授的團隊所研發新一代的個人網頁分享平台
及網路架構。NUWeb 包含了 NUWeb PP(Personal 
Portal)、NUWeb CC(Cyber Center)兩個部份。
NUWeb PP 提供了使用者輕鬆架設自己的網站、
建置個人部落格的功能。NUWeb CC 則包含網頁
快取、搜尋引擎、社群入口網站等功能。在 NuWeb 
PP上，每個使用者的電腦就是一個網頁分享平台，
使用者擁有控制自己分享內容的自主權，表現
NuWeb的精神「for the user, by the user, of the user」。
在 NUWeb 的架構上(如圖 9 所示)，NUWeb Cyber 
Center 擁有類似區域性代理伺服器(proxy server)
的角色，其服務的對象，通常為地理位置上相近
的節點且具有特殊性質，因此，使用同一台代理
伺服器的節點，通常為實體拓樸上相近的節點。
我 們 希 望 利 用 此 NUWeb 的 基 礎 建 設
(infrastructure)，設計一個具有代理伺服器支援的
點對點架構，支援所有使用者自主性(Autonomy)
的影片分享、及點對點的影音串流服務。 
 
圖 9: NUWeb 架構示意圖 
 
2. 點對點可調適視訊串流系統 
P2P 視訊串流研究以架構來區分可分為三大
類：Tree-based、Mesh-based以及Hybrid。Tree-based
的方法[67][68]傳輸資料的方式都以 Push-based 
mechanism 的為主，能達到低傳輸延遲的視訊串
流品質。但是 Tree-based 的方法在 Churn effect 嚴
重時，需要耗費大量成本去維護樹狀結構的完整
性。修補樹狀結構的同時，視訊串流的傳輸效能
下降的十分快速，甚至是中斷連線。而 Mesh-based
的方法，如: CoolStreaming [69]則是藉由節點定期
交換的 buffer map，向其他節點要求(Pull-base 
mechanism)所缺乏的視訊串流。Mesh-based 的方
法相較於 Tree-based 的方法有較佳的彈性與強韌
性[70]。目前已上線的 P2P 視訊串流系統，如: 
PPLive[71]、PPStream[72]以及 SopCast[73]都是
Mesh-based 。 因 此 ， 現 今 的 研 究 趨 勢 是 以
Mesh-based 為主流。另外，也有研究[74]利用節
點的特性提出 Hybrid 架構，它將穩定的節點建構
成一個 Tree 的架構，其餘的節點則維持成 Mesh
架構，使得 Tree-based 與 Mesh-based 的優勢能並
存。 
除此之外，有研究[75][76]使用 NC 來提升視
訊串流的傳輸效率。在 [75]中，作者植基於
Randomized network coding，在 Mesh-based 的架
構上提出了 Pull-based 的排程機制來提升傳輸效
率。而在[76]中，作者在 Mesh-based 的架構上提
出了Random push的排程機制降低Buffering delay、
Server 的頻寬負擔、以及 Churn effect。無論如何，
上述的研究都沒有將 SVC 納入設計考量。在[77]
中，基於 SVC 的特性，作者提出了 Peer selection、
Data flow model、Buffer management 和 Scheduling 
mechanism 等機制，讓用戶端能流暢地播放 SVC
視訊串流。 
 
把檔案抓完，而這個過程一般而言會是數個小時，
約有 40%的 Guntella 使用者、55%的 Kad 使用者
和60% BitTorrent使用者會抓一個檔案超過5個小
時，也就是說上線時間超過 5 個小時，而這些使
用者都是一些 long-live 的節點，而下線時間通常
不會太長，這點和視訊串流有著很大的不同。 
 我們知道視訊串流裡面，使用者加入一個網
路，接收資料觀看影片直到下線，這段時間通常
約是 1~2 個小時，而且相較於檔案傳輸，觀看影
片可能只看了片段就離開了，或者是看完整部影
片後就離線，在視訊串流的使用者行為就跟在檔
案傳輸裡有著莫大的不同。根據文獻[82]整理出表
1，針對點對點的檔案傳輸和視訊串流有完整比較。
我們不難發現視訊串流不用搜尋時間和下載時間，
而對檔案傳輸而言快速找到所需要的檔案和愈短
的下載時間都是重要的，再來延遲時間和品質對
於二者的考量也大不相同，檔案傳輸較不具有即
時性也沒有品質上的考量，只要檔案是完整的就
好，但視訊串流量裡面，即時性占很重要的地位，
無論點播還是即時，使用者都希望能迅速的看到
畫面，而影像的品質也是使用者追求的，而對於
二者來說，輸出效能(throughput)都是重要的。 
表 1: 檔案分享與影音串流之比較 
 
 
4. 基於自相似圖形之超級點網路建構機制 
近年來關於混合式架構的研究越來越多，有
別於結構化及非結構化 P2P 網路，混合式架構的
彈性化擴展(Scalability)尤其在大型 P2P 系統上更
有優勢，也更能根據節點的能力給予更適合的角
色。例如 Gnutella 的協定及 KaZaA 的系統內都將
節點依據能力分成高能力的點(super node)及一般
點(ordinary node)。一般點會群聚的串接到特定的
高能力的節點上，搜尋資訊時則只透過高能力節
點間的拓樸來傳送訊息，能提供較好的拓樸擴增
彈性及提高搜尋效率。但是廣播式查詢仍可能在
高能力節點間製造過多重複的查詢訊息，且高能
力點失效同時也會影響到下面一群一般點造成搜
尋失敗，稱之為單一點失效(single point failure)的
問題。 
有研究[83][84]將低能力節點串接到許多不
同的超節點，來加速將查詢訊息散布到整個拓樸
間的速度，並且降低超節點失效造成的影響。另
外，有研究[85]則利用調適性的方法來串接一般節
點到適當的超節點，且在搜尋時將查詢訊息轉發
到適當的超節點，然而這個方法同樣也有搜尋失
敗的問題。而[86]則是以選擇能力強及停留時間長
的點為超節點，並調整超節點層與一般節點的數
量比，期望能夠最小化維持拓樸及查詢訊息的傳
輸量，如果超節點太多則會將之降為一般節點，
但這個研究並沒有詳細說明超節點層的拓樸樣
式。 
在[87]中，作者以提高查詢速度降低重複的查
詢訊息為目的，提出了一個以 Perfect Difference 
Graph (PDG)為基礎來建構超節點層拓樸的方法。
無論如何，使用 PDG 圖形可能面臨的缺點包括拓
樸擴張縮小時必須傳送大量的訊息，且需重新串
接拓樸，使得拓樸變得不穩定。另外，拓樸的控
制都均是透過 bootstrap 伺服器，所以也很有可能
有單一點失效的問題。當節點數量相當多時，節
點的連接數也會相對隨之上升且沒有上限，而每
個節點的連接數量是有限的，尤其超大規模 P2P
應用的節點數量動輒上百萬個，supernode 的節點
連接數並沒有到達這麼多的時候，這個拓樸就沒
辦法再有效的擴張。 
 
5. 點對點可調適視訊串流之同步機制 
新 式 的 Coolstreaming 系 統 [88] 使 用 了
pull-push 的傳輸模式，系統會將影片切分成數個
substreams，依照時序來將分割出來的影片都給予
sequence number。當使用者向鄰居要求某一個
substream 的某一個影片片段時，被要求的鄰居會
自動的把該 substream 剩餘的影片都傳到發出要
求的使用者端。與傳統的 pull-based 相比，這樣設
計的好處是可以有效地降低要求視訊片段所產生
的延遲，進而達到更好的視訊品質。在研究[74]
中也認為 pull-push 的做法可以在網狀架構下得到
較佳的效能表現。 
iGridMedia[89]是一個以互動性為主要需求
的視訊串流系統。系統裡會有一個報告者
(presenter)與數個觀看者(viewers)。為了即時地將
 
圖 12: Proposed Protocol stack 
如圖 13 所示，MN 透過 P2P 機制加入 P2P 網
路，並在 P2P GW 上搜尋到所需要的視訊片段，
此時，MN 會向 GW 請求下載視訊片段。GW 接
收到請求後進行 Sender-initiated signaling 程序，
在程序中，GW 會先以 GIST Handshake 建立與 BS
之間的 NSIS 連線，當連線建立後，GW 會發出
NSLP QUERY 信令給 BS 詢問該 BS 管理的範圍
內所剩餘的網路資源是否可以支援這次連線的請
求，當 BS 收到 QUERY 後，會查詢剩餘資源並根
據信令內 MN 的位置資訊找尋最接近的 SS 並將
QUERY 訊息轉送至適當的 SS，而當 SS 收到
QUERY訊息後會進一步找尋MN 所在的 WiFi AP
並將信令轉送至 MN。MN 收到信令後，此時，
NSIS 連線已經建立完成，GW 與 MN 之間可以使
用這條路徑傳送 NSIS 相關信令。 
當 NSIS 連線建立後，MN 可以透過 AP 送出
Reserve 信令去要求建立具 QoS 保證的連線，當
SS 收到 Reserve 信令後，會轉送至 BS 進行請求，
此時，BS 會將 Reserve 信令轉送至 RMF 進行解
析並將解析結果送至 AC 中進行決策，AC 收到請
求內容後，會查詢整體網路剩餘資源，假設剩餘
資源足夠支援新連線所要求的資源，則 BS 會將進
一步回應 Reserve＇信令給 SS 用以告知可以建立
WiFi 端的 QoS 連線，並等待一段 T28 時間。在
Reserve＇信令中包含建立該連線所需資訊，例如：
CID，以及WiMAX QoS參數對應至WiFi的參數，
詳細細節將在後續說明。而 SS 收到 Reserve＇信
令後，則會另透過 HCC 元件發送原 WiFi 特有的
ADDTS信令去AP去建立WiFi網路的QoS連線，
並等待另一時間 T29。假若在 T29 時間內收到 AP
回應設定完成的信令，SS 會立即回應給 BS 得知
設定完成。此時，BS 會進行建立 BS 與 GW 之間
的 QoS 連線設定，並將連線建立完成信令回傳給
MN，完成全部的 QoS 連線建立機制。 
在這連線建立機制之中，若連線無法在預設
的時間(T28 及 T29)內完成，則 BS 會立即回應給
MN 無法完成連線，並中斷 Transaction，而假若
MN 所請求的資源無法在 WiFi 中順利保留下來，
則 BS 也會主動中斷 Transaction。 
 
圖 13: Message flow 
貳、Signaling Format 
本研究詳細定義 QoS NSLP 所使用的各種
NSLP 訊息格式，包括 QUERY、RESERVE 及
RESPONSE，而相對應的 Message Type 值分別為
1、2 和 3。QUERY 的格式如圖 14 所示，必須攜
帶 QSPEC，且在我們情境中設定 Message Flags
中 RESERVE-INIT (R) bit 為 1 代表由資料收方主
動要求資源保留(即由收方發送RESERVE訊息)。
此種訊息主要用來搜集 data path 上的資訊以及建
立 RESERVE 訊息返回時的路徑(reverse path)，當
BS 收到 QUERY，會根據 QoS model 所定義，依
據網路情況修改 QSPEC，並夾帶修改過後的
QSPEC 另外發送 QUERY 至 SS，最終 MN 收到
QUERY 後發送 RESERVE 作資源保留。 
 
圖 14: QoS NSLP 格式 
每個 QoS NSLP 訊息皆具有 Message Flags 描
述此類訊息特別持有的屬性。如圖 15 所示，
Generic Flags定義了此訊息所使用的SCOPE (S)；
我們使用預設值 0 代表所走訪的 path 是完整的
data path，而不是只走至下一個 hop；PROXY (P)：
使用預設值 0，與 SCOPE 不同的是定義訊息不僅
僅是走至 proxy QoS NSIS 節點，而是走訪完整的
path；ACK-REQ (A)：使用預設值 0，代表不必要
求收到訊息的 NSIS node 回報確認訊息；BREAK 
(B)：設定為 0 代表中間的 routers 皆可支援 QoS。 
 
圖 15: QoS NSLP 的 Generic Flags 
 
圖 19: WiMAX SF 與 WiFi TS 參數的對應 
 
表 2: WiMAX 與 WiFi 服務類別的對應 
802.16 802.11e Example 
UGS AC_VO VoIP without silence suppression 
ertPS AC_VI SVC,MPEG, and VoIP with silence 
suppression rtPS AC_VI 
nrtPS AC_BE FTP 
BE AC_BE FTP 
BE AB_BE HTTP 
 
參、針對 EDCA 之改良機制 
在 IEEE 802.11e draft提出針對提供QoS保證
機制的改良機制，分別是 EDCA 以及 HCCA。而
在 EDCA 中，透過新設計的 Arbitration Inter-Frame 
Space (AIFS)提供需要更高 QoS 保證服務的存取
類別(access category; AC)可以在更短的時間內取
的媒體的使用權。而在相同的 AC 中則使用 binary 
exponential backoff 機制公平競爭媒體使用權。
EDCA 雖被提出解決 QoS 難以在傳統無線區域網
路 (WLAN、WiFi)被保證的問題，但卻無法真正
解決原有問題，因為每一個 MN 在某種程度上還
是在使用競爭，假若某一個 MN 其封包的存活時
間(Life time)已即將要結束，但根據 EDCA 機制，
MN 將會有可能無法即時將封包傳送出去，而造
成封包必須丟棄(Dropping)。 
針 對 EDCA 模 式 的 缺 失 ， [94] 提 出
Age-Dependent Backaff AIgorithm(ADB)，並嘗試
透過量測每個 TC 中的 packet life time 去調整
contention window (CW)值，使得 packet life time
越小的的 TC 可以擁有越高的優先權，在實驗結
果分析中，ADB 的確可以支援較低的傳送延遲
(Transmission delay)以及較低的 jitter。其他新研究
進一步改良 ADB 演算法，作者認為單純直接減少
CW 值會造成具有相同優先權的 TC 發生碰撞
(Collision)的機率增加，應增加考慮當時網路狀況
來決定所減的 CW，而這考量的因素稱之為碰撞
頻率。隨然上述兩篇研究皆希望能提供有效的
QoS 保證，但採用競爭的方式依舊無法達到期望
的效能表現。 
針對這議題，本研究提出採用 cross-layer 
design 方式透過 NSIS 信令通知 MN 所使用的 TC
應使用的 age 值，稱之為 A cross-layer design 
NSIS-based algorithm for ADB (NADB)，這演算法
是改良 ADB 演算法，並且是類似集中式管理，age
值的給定由 BS 負責，BS 會根據當時網路情況決
定，例如有多少 MN 使用相同 TC 且某一 MN 的
traffic 所需要的延遲時間，邏輯上，除了每個 TC
會有不同的優先權，在同一 TC 內也會細分不同
的子優先權，並期望每個 traffic 都可以分配至一
個子優先權。這麼做的好處是不需要大幅更動
EDCA 機制，且保留競爭功能以讓沒有支援 NSIS
的 MN 可以順利存取媒介。另外，沒有支援 NSIS
的 MN 也不會直接搶到媒介。 
 
2. WiFi 網路下可適性群播頻寬配置機制 
壹、系統架構 
圖20為我們的系統架構圖，包含視訊伺服器、
Access Point 以及行動裝置(Mobile Station , MS)，
行動裝置向視訊伺服器訂閱影片並加入該影片的
multicast 群組，視訊伺服器將視訊串流資料透過
AP 進行 multicast，讓訂閱同一影片的行動裝置來
接收視訊串流資料。 
ܴ݁ݏ݋ݑݎܿ݁௟௔௬௘௥ሺ݊, ݇, ܶܺݎܽݐ݁ሻ ൌ
௕௜௧௥௔௧௘೗ೌ೤೐ೝכቀ
೙
ೖ
ቁ
்௑௥௔௧௘
  (6) 
貳、最佳化演算法 
(1) 基因演算法 
圖 21 為我們所設計的二維染色體，染色體中
的基因主要由兩部份組成：傳送速率(TXrate)及
FEC 碼率(Code Rate , CR)，TXrate 及 CR 分別由
表格 2 及表格 3 的 mode 欄位來表示，共有八種傳
輸速率搭配六種 CR 再加上不進行傳輸共有 49 種
組合。視訊串流的 Layer 數量多寡即為染色體的
基因數量，每一個基因代表傳輸不同 Video 的
Layer 的視訊資料所需要的 FEC 編碼層級以及
multicast 傳送的速率，以下介紹根據我們的問題
所提出的初始族群、適應函數值、複製及演化。 
 
 
圖 21: 二維染色體示意圖 
 產生初始族群：利用隨機的方式產生染色體
並檢查其合法性質，由於視訊資料經過 SVC
編碼，不同 Layer 之間會有相依性，即使 MS
接收到較高 Layer 的資料，如果缺少較低
Layer 的資料將會使得教高 Layer 的資料無法
進行解碼播放，因此我們會逐一檢視各個基
因的 TXrate 欄位，當有一 layer A 所屬的基
因的 TXrate 欄位為 0 時，我們將高於 layer A
的所有 layer 所屬的基因欄位設為 0。 
 計算適應函數值：當系統中的 MS 接收到視
訊資料且能正確解碼播放，則該 MS 需要付
出相對應的報酬給系統，我們以公式(7)計算
我們的適應函數，根據染色體的基因計算每
一個行動裝置可以正常解碼播放的 Layer 數
量並以此統計系統能收取的報酬總和，當作
該染色體的適應函數值。 
 複製：經由演化流程產生與母代相同數量的
子代之後，保留族群中適應程度較好的染色
體當作下一個母代族群，並從中利用競爭式
方法(Tournament Selection)挑選用來進行下
一次演化流程的染色體。 
 演化：從族群中挑選兩個染色體來進行均勻
交配(Uniform Crossover)，互相交換 TXrate
或是 FEC Code rate 來產生新的個體。基因突
變機率為 1%。 
(2) Reward-Based Maximum Reward Policy 
Iteration (RBMR) 
在 RBMR 演算法中，我們針對不同 Video 尚未獲
得資源分配的 Layer 進行資源分配以及進行調整，
在此我們同樣必須注意 Layer 相依性所引發的相
關問題，被測試的 Layer 可藉由獲得的網路資源
來進行調整 TXrate 及 FEC Code Rate，並計算出
該 Layer 在系統資源剩餘資源限制之下所能獲得
的最高報酬以及所需消耗的網路資源。經過測試
之後我們挑選能獲得最多報酬的Video Layer進行
資源分配，扣除該 Layer 消耗的網路資源之後再
將剩餘的網路資源進行下一輪的測試，直到系統
剩餘的資源無法獲得更多的報酬或者已達到系統
報酬最大值。圖 22 為 RBMR 演算法的 Pseudo 
Code。 
 
  
 
圖 23: RBUMR 的 Pseudo Code 
(4) Exhausted Search (ES) 
在 ES 演算法中，我們使用所有的傳輸組合設定所
有的 Video Layer，設定完成後計算系統所能獲得
的報酬，找出擁有最高系統報酬的設定當成最佳
解。為加快運算速度，當有一 Layer 的傳送速度
為 0 時，我們將不繼續遞迴運算下一個 layer，藉
此消除掉不合理的傳輸設定。圖 24 為 ES 演算法
的 Pseudo Code。 
ri 第 i 位使用者應付給系統的報酬 
P(i , l) 第 i 位使用者接收到完整第 l 層影像的機率
v(l) 接收到完整第 l 層影像時所該付出的報酬 
PLoss(d , m) 
當 SS 與 BS 的距離為 d 時，使用 m 的 MCS
的封包丟失率 
Prover( l ) 傳送第 l 層影像的冗餘封包比率，l = 0 ~ Ne
NT( l ) 傳送第 l 層影像的封包總數，l = 0 ~ Ne 
Norig(l) 
傳送第 l層影像的原始封包數 (不含冗餘封
包) 
X 
LT code 解碼器能成功解回時，至少需收到
的封包數量 
C(m) 
當使用 m 為 MCS 時，一個 time slot 可攜的
bits 數 
Nsubchpsl 一個 time slot 中有多少個 subchannels 
Nsypsl 一個 time slot 中有多少個 symbols 
Nbpsym(m) 
當使用 m 為 MCS 時，一個 symbol 可攜的
bits 數 
rPHY(m) WiMAX PHY 所使用的 FEC code rate 
S(l) 
BS 每次群播第 l 層影像的資料量 (單位：
bits) 
Sr(l) 第 l 層影像的 streaming rate (單位：kbps) 
t 一次傳送出去的影片長度 (單位：秒) 
B 該頻道的資源總花費 (單位：time slot) 
Ne 該頻道影片 layer 的總數 (不含 base layer) 
(1) Reward 的計算 
Reward 值代表系統可以收到的報酬，而這些報酬
都是由系統中該頻道的使用者所支付的，如果系
統中使用者的總人數為 N，我們可以將系統的總
報酬表示為: 
∑
=
=
N
i
irR
1
, Useri∈           (7) 
ri 代表各個使用者支付給系統的報酬，我們將其
表示為 
           ∑
=
=
Ne
l
i lvliPGr
0
)(*)),((         (8) 
)(1
1)( baxe
xG +−+=             (9) 
 
v(l)為第 l 層影片被完整接收時，系統可得到的報
酬，在之後模擬的部分，我們將會對 v(l)這個常數
的設置作一些探討。然而，並不是所有的使用者
都必須支付報酬給系統，原因是如果使用者能播
放該層影像的機率不大，那要求使用者支付該層
的所有報酬豈不是不合常理。我們以函式 G(x)來
model 使用者的付費方式，其中 x 為使用者收到視
訊封包的機率，G(x)定義於數學式(3)中，藉由調
整 G(x)的 a 與 b 參數，我們可以 model 各種付費
的可能性。利用此方式，將使用者 i 能播放第 l
層影像的機率代入 G(x)中所轉換出來的值，便代
表使用者 i 需要支付多少%的報酬。另一方面，由
於P(i, l) 代表第 i位使用者能使用播放第 l層影像
的機率，因此 P(i , l) 的值會介於 0 與 1 之間。然
而，當第 l 層的影像被完整接收到的機率低於門
檻值 δ 時，我們便認為第 l 層的影像無法被使用
者 i 所使用，那麼之後的 layer 能被使用者 i 使用
的機率便將為 0，我們將其以數學式表示如(10)： 
 ⎩⎨
⎧
=+≤
≤≤∀≤≤
 0)1,(   ,  ),(  
0  ,  1),(0 
liPthenliPif
NelliP
δ    (10) 
由(7) - (10)，我們將問題描述如下： 
 0)1,(   ,  ),(      
     
0  ,  1),(0     
     
1
1)(     
..
)(*)),((
)(
1 0
=+≤
≤≤∀≤≤
+=
=
+−
= =
∑∑
liPthenliPif
NelliP
e
xG
ts
lvliPGR
bax
N
i
Ne
l
δ
 
 
 其中，P(i, l) 與錯誤更正碼的技術有很大的
此變好，因此先行扣除 resource 的最大得分 1-β，
使得在這個範圍內所求得的眾多MCS組合之中，
絕對不會遺失掉最佳解。最後，將符合條件的各
組 MCS 一一進行封包冗餘比率的調整，藉此找出
系統的最佳解。然而，此作法計算的時間複雜度
相當高，約為 O(ML + k*hL)，因此無法應用在實際
的系統中。 
(2) 基因演算法 
由於我們調整的變數主要是 MCS 與封包冗餘比
率，因此我們將這兩項變數進行 GA 的編碼，編
碼方式如圖 26，可以看到我們的編碼是以各層影
像為單位，每 10 個 bits 代表一個 layer，前 10 個
bits 為基礎層，再後面的 10 個 bits 為第一個增強
層，依此類推。在本文中，我們採用 QPSK 1/2、
QPSK 3/4、16QAM 1/2、16QAM 3/4、64QAM 1/2、
64QAM2/3 以及 64QAM 3/4 等 7 種 MCS，如果再
加上不傳送該層影像的狀況，便有8種傳送方式，
因此在一個 layer 中。我們用前 3 個 bits 來表示
MCS，當不傳送該層影像時，MCS 的編碼以 000
表示。後面的 7 個 bits 代表封包冗餘比率，當該
層影像不使用噴泉碼進行傳送時，封包冗餘比率
的編碼表示方式為 0000000，最大到 100%。 
 
 
圖 26: 基因演算法編碼方式 
 
(3) Layered Policy Iteration (LPI) 
就如之前所提到的，由於 exhausted search 的做法
雖然可以找到最佳解，但計算時的時間複雜度卻
相當的高；而GA雖然計算所需的時間會少一點，
但是最後得到的只是一個相當靠近最佳解的解，
而不是真正的最佳解。因此，我們提出 Layered 
Policy Iteration (LPI)這個演算法，藉此大幅減少計
算時的時間複雜度，同時也能找出的最佳解，其
演算法如圖 27，其時間複雜度約為 O(M*h*L)，
而圖 28 則為 RRAM 的 pseudo code。 
 
圖 27: LPI 的 pseudo code 
 
圖 28: RRAM 的 pseudo code 
由圖 27 中得知我們的 LPI 其實是一種
iterative algorithm，由於各層影像之間擁有相依性，
因此我們必須從基礎層開始做資源上的配置，並
且逐漸加入次層的影像，藉此找出所有影像的最
佳資源配置方式。首先，我們先將變數初始化，
將各層影像所使用的 MCS index 都設為傳送速率
最高的 MCS；接著將 Layer 設為 0，表示從 base 
layer 開始做資源配置；而一開始的總資源 Btotal
為 BS 所有的 bandwidth。由於各層影像之間擁有
相依性，我們必須從 base layer 依序配置起，因此
我們可以知道每一個頻道已經配置到哪一個影像
層。除此之外，各層影像的傳送基本上是獨立而
互不相關的，因此我們可以將各層影像分層依序
參、設定權重 
在瀰漫式環境中，不同使用者或應用程式會
有不同的需求，因此各情境資訊權重會依使用者、
應用程式而異。在本文使用高頻寬訊流應用情境
中，我們定義權重 W=(WMB, WRSSI, WOu, WDir)，
且所有參數權重總和為 1。將所定義的權重乘上
正規化後的矩陣，如(23)式所示。 
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
=−
NnormDirNnormOuNnormRSSINnormMB
normDirnormOunormRSSInormMB
normDirnormOunormRSSInormMB
normw
)Dirw)Ouw)RSSIw)(MB*w
)Dirw)Ouw)RSSIw)(MB*w
)Dirw)Ouw)RSSIw)(MB*w
AP
(*(*(*
....
....
(*(*(*
(*(*(*
2222
1111
 (23) 
肆、計算正負理想解及距離 
接下來依據理想解類似度順序偏好法操作，
定出各屬性的最佳值及最差值，各屬性的最佳值
(或是最差值)可能會是最大值或是最小值，以 MB
為例之最佳值及最差值如(24)式，再以歐幾里得幾
何距離公式求得每個評估方案離正、負理想解的
距離，由(25)式子可得到每個方案離正、負理想解
分別為 及 。求得每個方案的 pi 值，如(26)式，
取 pi 值最高者為最佳解，在這裡就是指最佳換手
AP。 
( ) ( )( ) ( ) },...,2,1|'|)(,|)({ },...,2,1|'|)(,|)({ niJjMBMaxJjMBMinMB niJjMBMinJjMBMaxMB inormWiinormWiWorst
inormWiinormWiBest
=∈∈=
=∈∈=
−−
−−  (24) 
22
22
22
22
))(())((
))(())((
))(())((
))(())((
WorstinormwWorstinormw
WorstinormwWorstinormw
Worsti
BestinormwBestinormw
BestinormwBestinormw
Besti
DirDirOuOu
RSSIRSSIMBMB
S
DirDirOuOu
RSSIRSSIMBMB
S
−+−
+−+−=
−+−
+−+−=
−−
−−
−
−−
−−
−  (25) 
WorstiBesti
Worsti
i SS
Sp
−−
−
+=          (26) 
以本文應用情境，若使用者在中正大學工學
院一館在行進間使用需高頻寬之視訊串流服務，
所有 AP 情境資訊如表 7 所示。在此情境中，使
用者需要選擇能提供高頻寬及減少換手次數造成
延遲的 AP，而移動間選擇的 AP 若剛好在移動方
向上便可減少換手，因此對於參數權重考量，加
重頻寬及移動方向的權重，權重參數定義為
WMB=0.3, WRSSI=0.2, WOu=0.2, WDir=0.3。將原始資
訊經正規化程序並乘上加權權重之後得到的結果
如表 8 所示，參數權數是先以自行假設，未來的
研究會再加入這部份的數學模型。接下來以歐幾
里得幾何距離公式求得每個評估方案離正、負理
想解的距離如表 9 所示。以 1F-AP1、2F-AP1 及
2F-AP2 三個 AP 來做決策，可以求得 2F-AP2 之
pi值最高，可知在此範例中 2F-AP2 為最佳解，列
為優先建議換手 AP。 
伍、決策方式 
以本文應用情境為例，我們提出兩種決策方
式，由於在路徑預先規劃好且利用 SCM 模型使得
情境伺服器可預先取得所有空間中 AP 資訊的前
提下，我們提出兩種不同的決策方式，第一種為
隨著使用者移動到有 AP 重疊的區塊及進行單一
AP 決策，如果區塊 AP 重疊的情況很多，則伺服
器必須重複多次決策。第二種針對移動路徑上所
有可能 AP 換手組合進行決策，將 AP 組合中各
AP 的同一屬性合併成一個值，一組 AP 同樣可以
得到一組屬性值，與單點決策不同的是伺服器只
需計算一次即可，但是如何合併成一個值，如何
重新定義將會影響決策結果。另外關於單點決策
或組合決策之使用時機必須視情境資訊收集狀況，
若考量的所有情境資訊可以事先收集到情境伺服
器，則利用組合式決策可以減少運算負載及運算
時間。然而若決策用到的情境參數跟使用者所在
區塊有關，必須等到行動裝置到達所在區塊 AP
旁才有辦法取得，則較適合單點決策方法。 
表 7: AP 情境資訊原始資料 
 
MB(Mb/s) RSSI(dbm) 
Ou 
(人數) Dir 
1F-AP1 54 45 3 7 
1F-AP2 54 55 5 7 
2F-AP1 54 80 3 10 
2F-AP2 11 73 2 10 
 
表 8: 經加權及正規化後 AP 情境資訊 
 
MB(Mb/s) RSSI(dbm) 
Ou 
(人數) Dir 
1F-AP1 0.209965 0.10635066 0.162221 0.149241
2F-AP1 0.209965 0.125118424 0.097333 0.213201
2F-AP2 0.042771 0.114170562 0.064889 0.149241
 
表 9: 正負理想解 
 
MB(Mb/s) RSSI(dbm) 
Ou 
(人數) Dir 
Best 0.209965 0.125118424 0.064889 0.213201
Worst 0.042771 0.10635066 0.162221 0.149241
Address，所以必定會經過 Home Agent B。 
Step 2(a). 假設Node B已完成Home Registration，
則當HoTI與CoTI訊息路由至Home Agent B時，
就可以順利地繼續傳至 Node B，之後流程將可以
無誤地進行。 
Step 2(b). 若 Node B 未完成 Home Registration，
則 Node A 所發出的 HoTI 與 CoTI 訊息將會經由
Home Agent B 傳至已失效的 IP 位址而遺失。 
Step 3. 再 Node A 所發出的 HoTI 與 CoTI 訊息遺
失之後，Node B 終將完成它的 Home Registration
並 試 著 進 行 與 Node A 的 Correspondent 
Registration，當 Node B 送出 HoTI 與 CoTI 時，
因為 Step 1.中已確定 Home Agent A 已取得 Node 
A 的新 CoA，所以當 Node B 所送出的 HoTI 與
CoTI 訊息路由至 Home Agent A 時，訊息將不會
再遺失，必然可以順利地完成之後的流程。 
 
圖 33: Simultaneous failure in MH-MIPv6(a) 
 
圖 34: Simultaneous failure in MH-MIPv6(b) 
貳、Multihoming based on Network Mobility 
(MH-NEMO) 
 我們可以將多重網路的架構與NEMO的架構
稍作對比(如圖 35 所示)，即可發現一塊小區域的
自治系統(Autonomous System，AS)的邊界路由器
(Edge Router)與 Mobile Router 所扮演的角色極為
相似，以此想法為出發點，我們可以利用 IPv6 
NEMO 的功能以改善 MH-MIPv6 架構中的問題。 
 
圖 35: NEMO 與 Multihoming 
概念將如圖 36 所示，我們同樣需要 Home 
Agent，而 Edge Router 則需要支援 IPv6 NEMO，
當故障發生時， Edge Router 透過 IPv6 NEMO 的
協助從仍可正常運作的 ISP取得新的 IP位址(如圖
36中的 ISP B)，並將它視為CoA，再向Home Agent
完成 Home Registration 動作，此多重網路中的所
有封包將經由 Edge Router 與 Home Agent 的雙向
隧道建立機制(Bidirectional Tunneling) 由 IP in IP
的方式往返於兩者之間，連線兩端仍然以相同的
IP 位址進行連線，確保傳輸層可以不受影響。 
 
圖 36: Multihoming with NEMO 
詳細流程將如圖 37 所示，我們將此架構稱為
MH-NEMO，並擁有「訊息減量」及「易於擴充」
等優勢。有別於 MH-MIPv6 架構，MH-NEMO 架
構並不會面臨 Simultaneous failure 問題，因為連
線的兩端都僅需要對自己的 Home Agent 完成
Home Registration 即可。 
 
圖 37: MH-NEMO 流程圖 
M-Router 將 設 定 有 MH-flag 的 封 包 送 往
Correspond Node ， 然 而 此 封 包 將 不 會 由
Correspond Node 處理，而是其邊界路由器，本文
接下來的部份將 Correspond Node 的邊界路由器
稱為 C-Router。 
 C-Router 必須檢查所有延伸標頭為 Mobility 
Header 的封包，若滿足下列的兩個條件便表示需
要由 C-Router 代為回應(如圖 41 所示)： 
(1) 該封包是要進入此 C-Router 所負責的 AS。 
(2) 該封包帶有 MH-flag。 
 
圖 41: C-Router 的額外操作 
 在 C-Router 回應此封包後，M-Router 與
C-Router 便可以取得對方的 IP 位址(如圖 42 所示)，
並在彼此之間建立一個 Tunnel。 
 
圖 42: Address of C-Router 
針對安全性的考量，我們採用 Mobile IPv6 所
用的策略的運作流程如下(如圖 43 所示)： 
(1) 移動節點發出兩種 Test Init Message，分別是
以 Home Address 藉由 Home Agent 轉送的
Home Test Init Message，與以 CoA 直接傳遞
至 Correspond Node 的 Care-of Test Init 
Message。 
(2) Correspond Node 在接收到兩種 Test Init 
Message 後，會分別以 Home Address 與 CoA
的不同回應 Home Test Message 以及 Care-of 
Test Message。 
(3) 移動節點在接收到兩種 Test Message 時，表
示 CoA 是可以正常運作的(Routability)；而後
移動節點會發出 Binding Update Message。 
(4) 至 Correspond Node 回應位址更新確認訊息
(Binding Acknowledge Message)後，即完成位
址更新的流程。 
 
圖 43: Registration 流程 
 將上述的方式套用至 MH-NEMO 之上，
M-Router同樣以Home Address、CoA發出Test Init 
Message ， Correspond Node 也同樣回以 Test 
Message，藉由Home Agent的介入以確保安全性，
不同 Mobile IPv6 之處在於 Binding Update 
Message 所註冊是 Subnet Prefix，非是單一 IP 位
址。 
 將 MH-flag 與 Test Init/Test Message 的步驟加
入MH-NEMO之中便是我們最後提出的多重網路
架構(MH-NEMO with Route Optimization)，詳細
步驟如下： 
(1) M-Router 取 得 CoA ， 並 完 成 Home 
Registration。 
(2) 節點在不受任何影響下繼續藉由M-Router傳
遞封包，而 M-Router 可以取得 Correspond 
Node 的 IP 位址。此處 M-Router 需要紀錄
Correspond Node 的網路位址前綴(Network 
Prefix)，避免送出重複的要求。我們的想法
是在位置更新訊息表單明細(Binding Update 
List)中新增一個欄位：MH-Binding，並將
MH-Binding 設為「未完成」。 
(3) M-Router 送出目的地為 Correspond Node 且
帶有 MH-flag 的 Home Test Init Message 和
Care-of Test Init Message，兩種 Test Init 
Message 將以不同的來源 IP 位址路由至
C-Router(如圖 44 所示)。 
 
3. WiFi/Mobile WiMAX/3G 異質網路下行動管
理機制 
本研究利用 SCM 模型來表示現實環境中的
情境及地圖資訊，以道路、交叉路口、重要的地
標將地圖作區塊切割。我們將以圖 49 為例，圖
50 為圖 49 的 SCM 示意圖。 
 
圖 49:中正大學校園平面圖 
  
圖 50:以中正大學校園平面圖為範例的 SCM 示意
圖 
利用 SCM 定義出地圖資訊之後，利用收集到
的情境資訊以及 SCM 模型所定義的特徵矩陣(如
圖 51 所示)來設計換手規劃機制。SCM 的特徵矩
陣中存放相鄰兩地標間的移動方向、每個區塊上
的地標等資訊。在 SCM 中，利用特徵函數 Co 來
描述其屬性。例如： [α19, α19]放了相關的地標
O3的特徵函數Co(O3)及關於這個 block的特徵函
數 Co(α19)。而 AP、WiMax_BS、3G_BS 的資訊
則以 Co(APi)、 Co(WiMax_BSi) and Co(3G_BSi)
來表示。以α19 為例，在範圍內有兩台 AP、兩
台 WiMax BS 及 3G 網路可以使用，Co(α19)可以
表示成 c1={AP4, AP5, WiMax_BS1, WiMax_BS2, 
3G_BS}。而各個網路的狀態會用以下參數來表示
coverage area (c(1))、  received signal strength 
indicator (c(2)) bandwidth (c(3))、delay (c(4))、
response time (c(5))、jitter (c(6))、loss rate (c(7))、
security (c(8)) and access cost (c(9)) ， 以
WiMax_BS1 的特徵函數為例，Co(WiMax_BS1) = 
{ c1=12, c2=3, c3=30Mbps, c4=30ms, c5=25ms, 
c6=10ms, c7=0.03, c8=1, c9=0}。 
 
圖 51:SCM 特徵矩陣 
在假設移動路徑已經決定的前提下，利用層級分
析法(AHP)及理想解類似度順序偏好法(TOPSIS)
來進行最合適的網路換手規劃。首先以 AHP 訂定
不同情境資訊參數的權重，再以 TOPSIS 作排序
運算決策。 
AHP 的運算流程如下，首先將要解決的問題
建立層級架構，接著建立兩兩成對比較的矩陣，
並計算此矩陣得到特徵向量作為每個層級的權重，
最後整合各層級的權重得到整體的權重。 
壹、建立層級架構 
將要解決的問題建構出階層式的架構，在這邊是
指選擇最合適的換手網路。由於所選用的情境資
訊很多，因此將情境資訊分解到多個階層中。圖
52 為本方法選擇合適換手網路的層級架構圖。各
情境資訊的縮寫及量化列在表 10 中。 
 
圖 52:網路換手選擇的階層架構 
表 10:情境資訊縮寫及量化 
Appropriate
network
Availability
Reliability
(Packet Loss)
Timeliness
Bandwidth
Cost
Security
Coverage
Area
RSSI
Delay
Jitter
Response
Time
來計算為權重，且所有參數權重總和為 1 如式(30)。
最後將所定義的權重乘上正規化矩陣，得到加權
正規化矩陣。 
1=++++++++= CSecLJRTDBRSSICA WWWWWWWWWW  (30) 
陸、計算正負理想解及距離 
接下來以(31)定出各屬性的最佳值及最差值，
並以歐幾里得幾何距離公式求得每個評估方案離
正、負理想解的距離。各屬性的最佳值(或是最差
值)為屬性中的最大值或是最小值，覆蓋範圍、訊
號強度、頻寬、安全性的數值越大越佳，而延遲
時間、回應時間、延遲變異、封包丟失率及花費
的數值則是越小越佳。Si-Best 及 Si-Worst (32)分別表
示評估方案離正、負理想解的距離。 
( ) ( )( ) ( ) },...,2,1|'|)(max,|)(min{ },...,2,1|'|)(min,|)(max{ niJjAttributeJjAttributeAttribute niJjAttributeJjAttributeAttribute inormWiinormWiWorst
inormWiinormWiBest
=∈∈=
=∈∈=
−−
−−
(31) 
22222
2222
22222
2222
))(())(())(())(())((
))(())(())(())((
))(())(())(())(())((
))(())(())(())((
WorstinormwWorstinormwWorstinormwWorstinormwWorstinormw
WorstinormwWorstinormwWorstinormwWorstinormw
Worsti
BestinormwBestinormwBestinormwBestinormwBestinormw
BestinormwBestinormwBestinormwBestinormw
Besti
CCSecSecLLJJRTRT
DDBBRSSIRSSICACA
S
CCSecSecLLJJRTRT
DDBBRSSIRSSICACA
S
−+−+−+−+−
+−+−+−+−=
−+−+−+−+−
+−+−+−+−=
−−−−−
−−−−
−
−−−−−
−−−−
−
 
(32) 
柒、換手決策 
最後的步驟要依據計算出來的結果選擇合適
的換手網路。以(33)式求得各方案的 pi值， pi值
表示與最佳解及最差解的關係，pi值最高的評估
方案表示離最佳解最近並且離最差解最遠，也就
是最佳的換手網路。 
i-Worsti-Best
i-Worst
i SS
Sp +=           (33) 
 
C. 點對點視訊串流 
1. 點對點隨選視訊系統 
壹、協定概觀 (Protocol Overview) 
(1) Peer-to-Proxy Operation 
在 NUWeb 的環境下，使用者可以將欲分享
的影片檔案放置到公開資料夾下。公開檔案後，
這位使用者擁有此影片的訊息，便會藉由公佈
(publish)的動作，傳遞到使用者隸屬的區域性代理
伺服器(regional center)，以下我們稱代理伺服器
(Proxy)。代理伺服器會針對環境下使用者所分享
的每個影片，建立此份影片的串流資料表格(VOD 
table)，此表格將會記錄的資訊為：原始公佈者 IP
位址(original server IP address)、需求者 IP 資訊
(requester IP address)、使用者加入時間(Join time)、
開始片段(start segment)、是否可存取(is locked)、
影片結束時間(expiration time)。 
在預設情形下，代理伺服器的負載不高，即
可用頻寬在預設的門檻(threshold)之下，代理伺服
器會透過拉取(Pull)的方式，向公開影片的使用者
要求影片內容，儲存到代理伺服器；若代理伺服
器可用頻寬高於預設的門檻，則僅對原始影片發
佈者下載的前 n 個區段，以保證至少能提供子節
點最前面 n 個區段，做前綴快取(prefix cache)。系
統中的每個節點會同時由多個父節點接收不同的
區段，已接收的片段也可以傳送給需要的子節點，
每個節點依照播放進度前後關係，形成一個網狀
(mesh-based)架構。 
(2) Proxy-to-Proxy Operation 
在 代 理 伺 服 器 之 間 ， 我 們 採 用 DHT 
(Distributed Hash Table)來定位哪些代理伺服器該
記錄哪些檔案，影片名稱可以根據赫序函式產生
一個 ID，此 ID 與代理伺服器的 ID 為同一個
naming space 依照這個 ID 與代理伺服器 ID 的相
近程度，決定最接近的代理伺服器來存放這個值，
影片資訊即會傳送到負責代理伺服器的索引表格
中，由於代理伺服器是屬於較穩定的節點，因此
可以有效率之搜尋。 
需要進行影音串流的使用者，首先會先詢問
其隸屬的代理伺服器是否擁有此檔，若本地代理
伺服器擁有檔案，表示同一檔案環境中已有其他
人曾發佈了，即進行單一代理伺服器下的點對點
片段傳輸；若本地代理伺服器無此檔案，則會將
此影片檔名進行赫序運算得出 ID 值，並得知索引
伺服器的位址，向索引伺服器詢問有哪些代理伺
服器能提供這份影片檔。熱門的影片將不會只存
在單一伺服器中，每一台代理伺服器的儲存空間
若太少，也會運行取代機制(replacement policy)，
自行統計各個影片的存取次數，依照影片的熱門
程度區分，被存取次數越少的優先被取代。 
貳、運作流程 (Operation Procedures) 
(1) Client Buffer 
在本系統中，我們把每部影片分割成許多區
段(segments)，每個區段我們又將之分割為 P 個片
段(pieces)，並以片段作為每次傳輸的最小單位。
正在觀看影片的使用者，需要維持一段先進先出
的緩衝區(FIFO Buffer) ，如圖 54 所示。 
., (0,1)n check n start
avg
SRT T
D
α α− −= + × ∈
。 
其中，α 為我們定義的檢查時間變數，當 α 為 0，
表示在區段開始抓取時檢查；當 α 為 1，表示過
了 .avg
SR
D  才檢查。在 checknT −  時，已抓取的片段為
finishN  ，因此，我們需要在 checknT − 檢查此式子是
否 成 立 ：
.
((1 ) ) ( 1)finish
avg
SRP N S n CPS
PD
α β+ − ≤ − − +
，其中， 
為 β 將需求轉換到代理伺服器所需的緩衝時間。
若成立表示可以順利抓完，若不成立則移除目前
的父節點，從 PCList 中找尋下一個父節點來抓取
未完成的片段。若無法找到能提供區段的父節點，
則向代理伺服器要求片段。 
(2) PCList update 
每個節點在進行標準模式時，如父節點隨機
跳躍到某個定點、父節點下線、網路狀況等導致
無法在期限之前抓完片段。若發覺某一父節點已
失效，或是接收到父節點主動通知失效，則必須
從 PCList 中取得下一個父節點。每個節點會透過
流言傳播(gossip)的方式定期與 PCList 內的節點
交換訊息，以便得知 PCList 中節點目前的播放進
度、可用頻寬與服務區間，定期重算灰關聯分數，
並移除無效的節點。 
 
2. 點對點可調適視訊串流系統 
節點的系統架構如圖 55 所示，主要有三大模
組: (1) Membership Manager 負責管理其他節點的
資訊；(2)Scheduler 負責排程 SVC 視訊串流的傳
輸；(3)Network Coding Encoder/Decoder 負責編碼
傳輸前的 SVC 視訊串流以及解碼接收到的 SVC
視訊串流。當一個節點加入系統時，會先跟
Boot-strap node 要求一份隨機產生的節點清單。根
據節點清單，新加入的節點與其他節點開始定期
性地交換 Buffer map，接收到的 Buffer map 會儲
存在Cache裡。藉由儲存在Cache裡的Buffer map，
新加入節點開始以 Pull-based 的方式向其他節點
要求視訊串流，接收到視訊串流會先經過 NC 解
碼後儲存在 Buffer 裡。最後播放器會將 Buffer 裡
的視訊串流解碼後播放給使用者觀看。 
 
圖 55: Node 的系統架構圖 
壹、SVC-NC  
為了讓SVC視訊串流除了能滿足異質性設備的需
求，還可以具備高傳輸效率、抗干擾等特性，我
們提出了一個新的 NC 方法，SVC-NC。如圖 56
所示，我們根據SVC視訊串流中解碼的時間關係，
將每個 Group Of Picture(GOP)區分為數個 Layer。
每個 Layer 的 Frames(包含 Spatial 與 Quality 維度)
分別使用 Randomized Network Coding 編碼成相
對應的 Code word。因此在整個系統中的 Code 
word 會依據 SVC 的 Layer 分為數種，如圖 53 中
一個 GOP 有四個 Layer，那整個系統中就會有四
種的 Codeword。 
 
圖 56: SVC-NC 編碼示意圖 
根據 SVC-NC 的設計，節點上 Buffer 的設計如圖
57 所示。Current Play Location(CPL)為目前播放的
時間點，在 CPL 位置前我們保留了一段已觀看過
的視訊資料，提供給其他節點下載。此外，我們
使用 Sliding window 來做為排程的範圍限制，每
下載完一個 GOP 或是當 CPL 到達 Sliding window
的起始點，Sliding window 就會向後滑一個 GOP。
一個 GOP 對應到 n 個 Segments，一個 Segment
對應到一個 SVC-NC 的 Layer，一個 Block 對應到
一個 SVC-NC 的 Layer 的 Codeword。在播放時，
一個 GOP 中，Base layer (Layer 0) 的 Codeword
必需要能被成功的解碼還原才能順利的播放，而
更多 Layer 的 Codeword 被解回來時，就可以結合
Base layer 的資料產生品質更好的視訊，反之若
Base layer 的資料無法被解回來時，就算其他非
 
圖 59: Priority Response Scheduling 示意圖 
這個機制可以讓 Priority 高的請求有較高優
先權被處理。對應於可調性視訊編碼特性，Base 
layer 的資料是最重要的，而且可以直接播放，所
以需要有較高優先權的處理。而 SR 的 Request 是
希望不在忙碌中或頻寬足夠的節點才回覆這個請
求，所以使用隨機的方式放置在 Queue 中，這樣
的好處是有一定的機率讓目前是不忙碌的節點才
能即時的處理這個請求，又能防止 SR 的 Request
不會在所有節點都在忙碌的情況下發生Starvation，
使得新節點在找其他節點時能夠做到負載平衡。 
 
3. 基於小世界特性與效應之點對點視訊串流網
路分析 
壹、基本環境架構 
 在我們所觀察的系統模型屬於 hybrid-base 架
構，此系統中觀察單一視訊串流頻道，其中有包
含了一個視訊來源(video source)和一個 bootstrap
節點，主要用來取得其他節點資訊，影片串流的
大小為 384kbps，我們還假設有 buffer map 的初始
時間，如果剛加入此網路的節點，還在初始時間，
就不能傳遞串流片段給其他節點，也就是說不能
被選為父節點，能接多少子節點會受限於各個節
點的上傳能力，上傳頻寬高的節點可以提供數個
節點完整的影片串流，上傳頻寬低的則連 384kbps
都不到。由圖 60 我們可以清楚的看見整體的網路
環境，當一個新的節點進入頻道中會基本上會做
出 3 個動作。(1)跟 Bootstrap 要求此頻道中的其他
節點資訊；(2)回傳適合的節點清單給新進入的節
點；(3)跟頻道中的其他節點做連線。 
 
圖 60: 模擬網路環境 
(1) 節點能力 
根據[95]的研究，對於Microsoft的MSN video 
service 連續九個月的觀察，作者展示出此期間使
用者的頻寬分佈情形，有絕大部份的人是寬頻用
戶，約有 37%的使用者可以提供一個節點以上的
完整視訊串流，另外會有約 7%的人下載頻寬不足，
無法接收到完整的視訊串流，詳細的數據如表 7，
我們將網路的節點分為這七種種類，其中視訊串
流伺服器(source node)因不需下載，所以未定義，
此節點也是唯一。從上傳頻寬來看，只有 Ethernet
的使用者和 Source 才有能力提供超過二個完整的
視訊串流頻寬，我們把這二類的節點看作是高能
力節點，其他的 Cable、DSL2、DSL1、ISDN 和
Modem 這種只能提供二個或以下的串流頻寬，都
是屬於低能力節點。 
表 13:各種類節點的上/下傳頻寬與分配比重一覽
表 
 
貳、節點選擇 
 在節點加入系統時會跟 bootstrap 要求其他伙
伴(partner)的資訊，bootstrap 會依照不用的策略來
傳回一份清單，節點選擇的策略包含了隨機選擇 
(random)、最小延遲與穩定度選擇  (minimum 
delay – stable)、能力選擇 (capacity)、能力與穩
定度選擇 (capacity – stable)，將以上四種做為
節點選擇的方法，以下介紹各種節點選擇的差
異。 
(1) 隨機 
 圖 61:一個 4x4 填滿狀態的 SNG 拓樸 
(1) 加入順序 
我們希望這個拓樸會是強韌且有效率的，因此我
們會希望在 Peer 加入 SNG 中最好能先滿足節點
數量邊長最小的 SNG 為前提，在 SNG 內會有一
個管理點，也就是圖 62 中的(1,1)，這個點為一個
SNG 成長的起始點，也是為 Bootstrap 伺服器與
SNG 溝通的管道，填入 SNG 的順序是根據 SNG
內的座標透過計算與管理點的距離遠近來推算順
序，距離較小的應該最先被填入，以一個尚未填
滿的2x2的SNG為例，點(2,1)及(2,2)目前是空的，
當有 Peer 要加入時我們可以計算出位置(2,1)與
(2,2)距離管理點(1,1)的位置分別為 1 與√2，距離
小的先填入，所以 (2,1)應該最先被填入這個 2x2
的 SNG 內部，再來是(2,2)被填入，這樣即可填滿
一個2x2的SNG。而當有距離一樣的情況的時候，
我們希望先由水平方向先填入，如此即可得圖 62
的順序。 
 
圖 62: Peer 加入 SNG4x4 位置的順序 
(2) 管理點 
以(1,1)的點當成 bootstrap server 的備份點，該點
會儲存整個 SNG 的資訊，當 SNG 內部有任何變
動時，除了 bootstrap server 會被知會，管理點同
樣也會得知這些資訊。 
(3) 虛擬點 
我們希望這個拓樸永選是填滿的 SNG 的狀態以
維持強韌性及傳送的有效性，所以我們會在尚未
補滿的 SNG 內的點或者點突然離開的狀態以虛
擬點表示，虛擬點會由管理點在相同水平方向且
與虛擬點垂直的實際存在的點所扮演，如圖 63 所
示，點(1,2)同時會扮演(4,2)虛擬點的角色，而(1,4)
則必須同時扮演(2,4)、(3,4)、(4,4)的虛擬點角色。
而當有點離開時該點也會以虛擬點暫時存在，等
待其他點來遞補這個位置。而萬一當(1,X)離開的
時候我們希望能由(1,1)來暫時充當虛擬點。然而
當(1,1)節點失效時，因為該 SNG 已經失去管理點
則不會使用虛擬點，所以會從順序最低的點來做
遞補的動作，bootstrap server 會通知順序最低的點
以取代管理點(1,1)的角色。 
 
圖 63: SNG4x4 只填入 10 個點，其他點則為虛擬
點 
(4) SNG 視野 
我們希望在一個 SNG 內部的點彼此都能夠知道
整個 SNG 的點的資訊，我們稱為內部 SNG 視野
(Intra-SNG View)，以便在有點突然失效的時候，
能夠馬上由 SNG 內部順序低的點來遞補，這時候
如果遞補的點有預遞補點的鄰居的資訊則可以馬
上建立起連線，為了能保有 SNG View，在點一開
始加入這個 SNG 後會發送一個 JOIN_HELO 訊息，
向 SNG 所有點的點通知有新的點加入，所以 SNG
內的點就在可以在 SNG View 內將新的點的資訊
加上去，而收到訊息的點，也會同時回覆
JOIN_HELO_REPLY 訊息，以便讓新加入的點也
知道整個 SNG View。另外 Bootstrap 伺服器也會
有這個 SNG View。  
(5) 拓樸的維持 
管 理 點 (1,1) 會 定 時 透 過 發 送 一 個
HELO_HEARTBEAT 的查詢訊息來確認所有的點
是 否 還 存 活 ， 如 圖 64 所 示 ， 當 要 將
HELO_HEARTBEAT 訊息轉送的點(4,2)已經不存
在時，發送的點(1,2)會將不存在的那個位置直接
回報給 Bootstrap 伺服器，這時候伺服器會從 SNG
順序表內取出順序最低值的點(4,4)來取代不存在
的點，Bootstrap 伺服器會發送一個 REPLCAE(4,2)
數(degree)是有限制的，故 SNG 不能在邊長上無
限擴張，當系統中點的個數超過一定數量的時候，
我們希望能往另外一個維度發展這個拓樸。 
圖 68 是一個兩層 SNG3x3 的 SSNG 拓樸，中
間的 L1 SNG 是之前提到的 SNG 的部份，我們在
前面提到 Bootstrap 伺服器及一個 SNG 的建構關
係，我們希望將這個關係套用到第一層 SNG 的所
有點上，意即讓 SNG 的第一層的每個點也扮演
Bootstrap 伺服器的角色(這邊我們稱這個點為下
一層 SNG 的 INIT_PEER)，使的第一層的每個點
也會發展出第二層的 SNG3x3，意即一個第一層
SNG3x3可以拓展出第二層也是 3x3個的 SNG3x3。
從另一層面意義來看，我們可以把一個 SNG 當成
一個點，這樣第一層與第二層的關係即是我們之
前提到的 Bootstrap 伺服器與 SNG 的關係，第一
層的 SNG 扮演著 Bootstrap 的角色，第二層的每
個 SNG 扮演著之前中 SNG 的每個點的角色。第
二層中 SNG 管理點的角色的位置選擇則是會參
考自身的 SNG 是由第一層哪一個 SNG 的點所發
展出來，如圖 68 中 L2(3.1) SNG 即圖中最左下角
的 SNG 內管理點的選擇則是依據 L1(3,1)的點位
置來選擇，經由這個關係我們可以知道第二層的
SNG 應該是如何被架構成長的，而當 Peer 數量成
長夠多可以填滿這第一層與第二層時，我們可以
以類似的關係往第三層發展下去，甚至是更多層
的迭代關係發展。 
 
圖 68: 兩層的 SNG3x3 組成的 SSNG 
(1) 座標系統 
在 SSNG 的座標系統中，我們需要由最上層的
SNG 來開始定位每個點，如圖 68 中，第二層中
L2 (3,1) SNG 中最左下角的點，我們定義成
L1(3,1), L2(3,3)，意即這個點是位於 L1 SNG 的點
(3,1) 所衍生出來的 SNG 中的(3,3)的位置，另外
一個例子為圖 65 說明指標指的點 L1(2,2)，L2(1,3)，
則是代表由 L1 的 SNG 中的點(2,2)所以發展出來
第二層的 SNG 其中的點(1,3)，這個座標表示法為
前面多項的(x,y) 的部份為指名由哪層 SNG 的點
衍生的 SNG，而最後一個座標表示該 SNG 的點，
因此 L1(1,2), L2(3,4), L3(4,5)代表的點為，由第一
層(1,2)衍生得第二層 SNG 中的點(3,4)，再由第二
層點(3,4)衍生出的第三層 SNG 中的點(4,5) 即為
點「L1(1,2),L2(3.4),L3(4,5)」。 
(2) Inter-SNG View 
前面提到我們可以將第二層的每個 SNG 視為單
一的點，亦即這些單一點也架構出一個 SNG，我
們稱這些點之間為 Inter SNG，以這個觀點來看我
們希望這些點之間也是同樣有SNG的連線特性，
也就是說第二層以上的點除了會維持一個內部
SNG 的視野(Intra-SNG View)，也會維持一個外部
SNG 視野(Inter-SNG VIEW)，當然如果有第三層
以上的話，該點也要維持一個下一層的 SNG 視野
(DOWN Layer SNG View) 。第二層 Inter SNG 的
連線關係如圖 69 與圖 70。圖 69 中 L1(1,1)的點擁
有 四 條 INTRA_DIRECT_HOP 及 一 條
DOWN_LAYER_HOP，而點 L1(1,1), L2(1,1)則擁
有 四 條 INTRA_DIRECT_HOP 及 四 條
INTER_DIRECT_HOP及一條UP_LAYER_HOP。
圖70則是另一個由點L1(2,2),L2(2,2)來看的圖例。
我們可以看出這樣的意義即為由各個管理點位於
Inter SNG 內的相對位置來架構出 Inter SNG 間的
連線。 
 
肆、SSNG 查詢機制 
 當有點在 SSNG 內部發出查詢時，以圖 70 的
L1(2,2),(2,2) 為 例 ， 該 點 會 發 出
INTER_SNG_QUERY、INTRA_SNG_ QUERY、
CROSS_LAYER_QUERY 
(DOWN_LAYER_QUERY、UP_LAYER_ QUERY)
這三種 QUERY，這三種 QUERY 分別的作用(如
圖 73 所示)為： 
(1) INTER_SNG_QUERY 
是作為 SSNG第二層以上彼此 SNG之間散播查詢
訊息的方法，方式也是先往 INTER_DIRECT_HOP 
傳送給垂直方向與水平方向的點，再由水方向的
點由 INTER_FORWARD_HOP 轉送給剩餘的點，
當 INTER_SNG_QUERY 訊息到 SNG 內部後會轉
為 INTRA_SNG_QUERY。 
(2) INTRA_SNG_QUERY 
這邊的運作方式則與 SNG 的方式相同，目的是在
SNG 內部轉送查詢訊息。 
(3) CROSS_LAYER_QUERY 
CROSS_LAYER_QUERY 又 可 以 分 為
UP_LAYER_QUERY及DOWN_LAYER _QUERY。
在收到 DOWN_LAYER_ QUERY 的該層 SSNG
的會轉為 INTER_SNG_QUERY 並同時在每個有
下 層 SSNG 的 點 再 度 觸 發 DOWN 
_LAYER_QUERY 以便往更下層 SSNG 傳播，而
收到 UP_LAYER_QUERY 的點則比較不同，除了
馬上產生一個UP_LAYER_QUERY除了收到的點
的 SNG 不會額外產生 DOWN_LAYER_QUERY
外會在該層 SSNG 產生 INTER_SNG_QUERY 並
同時產生 DOWN_LAYER_QUERY，以便訊息在
向上傳送時會往下傳送。 
 
圖 73:各種 QUERY 訊息 
伍、SSNG 的 Fail Recovery 機制 
 在 SSNG 中第一層的一個點會衍生出第二層
的 SNG，這個點是作為往下層溝通的管道，也是
第二層 SNG 中的 INIT_PEER(類似 SNG 中
Bootstrap 伺服器的作用)，萬一當這個點失效的時
候，影響的情況可想而之將是該點之下所管理的
SNG 內的點，為了避免這個點失效造成的嚴重影
響，我們會在 SNG 管理點中也紀錄 INIT_PEER
的鄰居的資訊，當 INIT_PEER 失效時，管理點因
為會定時發送 HELO_HEARTBEAT 訊息，所以會
馬上知道 INIT_PEER 失效，我們可以馬上從自身
SNG 中尋找加入順序最低的點，將之提昇為
INIT_PEER 也就是上層的 SNG 內的一個點。 
 
5. 點對點可調適視訊串流之同步機制 
壹、系統簡介 (Protocol Overview) 
(1) Client and Server Buffer 
如圖 74 所示，Client Buffer 由多個 Group of 
Picture(GoP)組合而成，每一個 GoP 依時序都會被
指定一個序號且被編碼成多層的格式，在圖 74 中
的 layer 數即為 5 層，第一層即為 base layer，每
一個 GoP 如有 base layer 即可播放最低品質的影
片，當一個 GoP 擁有愈多 layer 的影片，結合低
layer 後影像品質將會愈清晰。但如果只有高 layer
的影片卻缺乏低 layer 的影像資料，仍然無法將影
片成功解回。 
在 Buffer 裡由 Sliding Window 來當作為影片
要求的區間，Sliding Window 會隨著影片抓取完
畢或隨著播放時間而向右移動。在 Buffer 中，我
們定義了 Current Play Point(CPP)來代表目前系統
正在播放的點，在系統中的每一個點為了要達到
同步，每一個使用者的 CPP 應該都需要指向同一
序號的影片片段，在以下的章節中，我們將會介
紹如何計算目前系統正在播放的 CPP。 
 
圖 74: Clinet Buffer 示意圖 
如圖 75 所示，串流伺服器同樣有 CPP 指向
系統目前所播放的影片序號。伺服器在抓取到影
片資訊後，會先 cache 在 Buffer 中一段時間，作
為系統內的尚未播放的未來影片，即系統播放影
片的時間點 CPP 會較影片實際產生的時間還慢。
(2) GRC-Based 父節點選擇機制 
在節點由 BootStrap Node 取得節點清單之後，為
了能夠在最短的時間可以與其它節點同步播放影
片，我們必須評估每一個父節點的能力，找出最
佳的 n 個父節點來進行影像傳輸。在此，我們使
用灰階理論，針對三種不同的因素來對父節點評
分： 
 延遲時間(Delay)：我們利用延遲時間(Round 
Trip Time, RTT)來判斷點與點的距離，節點與
節點之間的延遲時間愈短，即表示彼此之間
的距離較短，此值應愈小愈好。 
 可使用影片區間(Available Buffer Size)：取得
節點清單之後，鄰居之間便開始交換 Buffer 
Map，新節點在收到 Buffer Map 後即可知道
鄰居的 Buffer 內容，再利用 S-packet 計算出
目前正在播放的影片序號，鄰居的 Buffer 中
大於系統播放的影片序號皆為可使用影片，
因此可以計算出每一個父節點能夠提供的影
片數量為何，而可使用的影片數量應愈多愈
好。 
 可用剩餘頻寬(Available Bandwidth)：我們在
選擇節點時，同時希望選擇到擁有較大上傳
頻寬的父節點，以期達到較好的下載效率，
此值也應愈大愈好。可用剩餘頻寬的計算如
下：父節點的上傳頻寬為 BWupload ，在
pull-push 的環境中共有 K 個人向此父節點訂
閱子視訊串流，又令每一個子視訊串流的 bit 
rate 為 N bits/sec，則 BWavailable = BWupload – 
K*N。  
由於有以上三種變因，我們利用灰色理論來計算
出每一個父節點的綜合分數，分數愈高者，即為
較優良的父節點，也作為我們選擇傳輸影片的優
先選擇，由於每一種變因的單位皆不相同，以下
我們介紹灰階理論如何計算出每一個父節點的分
數。 
(3) 同步時間計算 
在這個章節我們希望每一個節點加入系統之後，
能夠在最短的時間之內，向鄰居要求 Sliding 
window 大小的影片，而為了能夠縮短影片起始等
待時間，我們讓節點開始時，只抓取影片 base layer
的部份。在同步的系統中，每一個序號的影片都
有其播放的時間，如何找到一個最小的起始序號，
使得在播放時能滿足 Sliding window 裡皆有 base 
layer 可以連續播放即是我們要解決的問題。在此
我們定義了一些變數如表 13，我們將會介紹如何
利用已知的變數使用這些變數來計算最短的下載
時間。 
表 14: 符號表 
symbol Description 
K 串流伺服器的 Buffer 大小 
S Client Buffer 的 sliding window 大小 
௚ܶ௢௣ 一個 GoP 的時間長度 
௦ܶ௧௔௥௧ 系統開始播放影片的起始時間 
V 節點的鄰居集合 
ܤ௝,௜ 鄰居 j 到 node i 的可用頻寬 
஽ܶ௅ 節點下載 Sliding window 大小 base layer 的時間
௖ܶ௨௥ 節點計算下載時間的時間點 
௡ܶ 序號 n 播放的時間 
L 影片的 layer 數 
ܰ௠௔௫ 串流伺服器 Buffer 中最大的 GoP 序號 
ܤ஽௅ 節點的下載頻寬 
ܤ௎௅ 節點的上傳頻寬 
Dev. 計算 ஽ܶ௅時所使用到的誤差值 
(4) 最短下載時間計算 
我們令所找到的最小影片序號為 n，其在系統的
播放時間為 ௡ܶ，目前系統的時間為 ௖ܶ௨௥，我們定義
由現在到序號 n 影片的播放時間差為∆t： 
    ∆ݐ ൌ ௡ܶ െ ௖ܶ௨௥          (35) 
其中 ௡ܶ可由加入系統時，BootStrap Node 所提供的
S-packet 裡的資訊算出。 
              ௡ܶ ൌ ௦ܶ௧௔௥௧ ൅ ݊ כ ௚ܶ௢௣      (36) 
我們設定下載 Sliding Window裡的 base layer共需
要花費 ஽ܶ௅的時間。 ஽ܶ௅的時間必須小於∆t，即
஽ܶ௅ ൏ ∆ݐ，使得一經過 ஽ܶ௅的時間後，可以開始播
放序號 n 的影片片段。我們利用以下的演算法根
據鄰居的上傳頻寬來算出 ஽ܶ௅的時間為何，如圖 79。 
hybrid Pull-Push 的方式，使用者會向鄰居訂閱子
視訊串流，收到鄰居訂閱請求的節點會將影片資
料用 push 的方式自動傳送出去。除此之外，Sliding 
window 也隨著播放的時間進行向後移動，為的是
向鄰居來要求將要播放卻因 packet lost 等等原因
而未存在的影片。因為可調性視訊編碼需要收到
較底層的資料，高 layer 的影片才能被解碼回來，
所以在節點發出影片請求的時候，會優先發出
base layer 的請求，若較低 layer 的影片接收到了，
才會再對較高的 layer 發出請求。在此我們讓每一
個 GoP 的資料都完整收到作為 Sliding window 移
動的依據，直到 Sliding window 裡的影片序號應
該要被播放時，Sliding window 會向後移動一個
GoP，繼續要求後續的影片。 如圖 82 所示，當
CPP 已經移動到 sliding window 裡時，即表示目前
應播放此 GoP 影片，故 Sliding window 向後移動
不再向鄰居要求此 GoP 的影片資料。 
 
圖 82: 發出影片請求示意圖 
 Request Response Schedule 
節點在系統中除了會收到影片資料之外，同時也
會收到別人對影片的要求，其中包含了節點起始
的影片要求(Start-up Request, SR)、一般的影片要
求(Normal Request, NR)兩種，若有其它鄰居對節
點訂閱子視訊串流，此節點仍需自動 push 子視訊
串流影片(Push Packet, PP)給訂閱者，這個節點便
會有三種型態的影片資料需要傳送。因此我們設
計了影片傳送端的 scheduling，對於三種型態的影
片資料來做排程，以滿足不同的影片需求。 
¾ 可調性視訊編碼需要有低 layer 影片才能解
回高 layer 的影片，所以我們將優先傳送所有
base layer 的影片，接著才依次傳送更高 layer
的影片資料。 
¾ 同時有 SR、NR 和 PP 的 packet 同時需要傳
送的時候，我們優先處理 SR 的影片請求，使
得每一個使用者在加進系統後，能以更準確
的時間開始同步播放影片。而也因為每一個
影片序都都有其在系統的播放時間，所以 NR、
PP 的影片請求將以在系統播放的時間順序
(Earliest Deadline First，EDF)回應。 
¾ 在回應每一個影片請求的時候，我們利用節
點之間的延遲時間來計算每一個影片在傳送
之後是否能及時播放，若影片播放的時間小
於接收端收到影片的時間，即使影片能夠順
利傳送出去，但是收到影片的鄰居卻會因系
統播放時間已過，仍不會播放此影片，而造
成冗餘資料，故應該將之遺棄(discard)。故我
們在傳送前會做計算來決定影片是否要傳送
出去。 
 
六、 結果與討論 
A. 資源管理 
1. WiFi/Fixed WiMAX 異質網路中跨網路資源
保留機制 
由於 interworking for WiMAX/WiFi using 
NSIS 的相關模擬尚在進行中，因此本研究只針對
EDCA 機制改良部分的結果進行討論。為了要評
估我們所提出的方法，我們採用 Network 
Simulation 2 來做為網路模擬分析的主要工具。在
原始的 NS2-allinone-3.31 版本中，802.11 無線區
域網路的MAC Layer只有支援DCF的運作機制，
並無提供 EDCA 的方法，為此我們加裝了 TKN
所釋出的 802.11e EDCA在NS2上的附加模組[99]，
以符合我們模擬情境的需求。 
在此模擬情境中，每一個節點的角色只會為
傳送者或接收者其中的一個，編號為 I (I 為偶數)
的節點會傳送 Voice 或 Video 的 traffic 給編號為
I+1 的節點，從節點 0 開始，traffic 的種類依序為
Voice、Video 循環著下去。Voice 與 Video Traffic
所設定之 flow parameter 如表 15 所示。 
表 15: Flow parameter 
         種類 
  參數 
Voice 
高優先權 
Video 
中優先權 
Packet Size 
(Byte) 
160 800 
Sending Rate 
(Kbps) 
64 128 
在模擬過程中，網路節點的數量由四個逐漸地增
加至二十四個，來增加網路的負載情況，我們將
觀察 0 號節點送給 1 號節點的 traffic 在不同方法
下的 delay、jitter 以及 throughput 的情形，圖 83
為模擬情境之示意圖，以及表 16 是模擬過程所使
用 MAC 層的參數。  
 圖 86: 節點 0 送給節點 1 的 packets 平均的
throughput 
 
2. WiFi 網路下可適性群播頻寬配置機制 
壹、模擬環境 
我們假設系統中總共有ܯ個視訊影片，而每
一個視訊影片經過 SVC 編碼成ܮ௠ 個 layer，ܯܵ௠
為訂閱不同影片 m 的行動裝置數量，在此我們設
定 每 一 個 視 訊 影 片 都 有 不 同 人 數 訂 閱 ，
MSሺܰ௠ , SNR୫  ሻ代表一個行動裝置，ܰ௠代表行動
裝置訂閱視訊影片 m 的 layer 數量，ܴܵܰ௠為訂閱
視訊影片m的行動裝置所偵測到AP的訊號強度，
我們預設每一個行動裝置皆訂閱ܮ௠ 個 layer 且行
動裝置均勻分佈在 AP 周圍。表 17 是模擬實驗所
使用的參數。 
表 17: 模擬參數表 
參數 設定值 
Number of Video Layers 5 
Base Layer Streaming Rate 50 kbps 
Enhancement Layer  
Streaming Rate 
200 kbps 
Reward case 1 Reward={2,2,2,2,2} 
Reward case 2 Reward={4,2,2,1,1} 
MS(5 , SNRm) All mobile station 
subscribe 5 layers 
Video Session Session1： 5 users 
Session2：20 users 
Session3：40 users 
Session4：60 users 
我們的基因演算法初始族群數量 ௣ܰ௢௣௨௟௔௧௜௢௡
設定為 200，ߣ௠௨௧௔௧௜௢௡為基因演算法中的突變機率，
我們設定為 1%，若突變的位置為 TXrate，我們隨
機給值 rand(0~8)，若為 FEC Code Rate 則隨機給
值 rand(0~5)。我們使用競爭式方法挑選出適應值
較好的染色體放進交配池中進行交配出新的染色
體並使用隨機交配(Uniform Crossover)的方式，
產生一個與染色體長度相同內容為 0/1 的遮罩，
交換兩個染色體遮罩數值為 1的位置，重複一樣
的流程直到產生出與母代數量相同的染色體數量，
再從2 כ ௣ܰ௢௣௨௟௔௧௜௢௡個染色體中挑選出 ௣ܰ௢௣௨௟௔௧௜௢௡
個適應值較好染色體當作下一個母代族群。我們
以公式(7)計算基因演算法的適應性數值，藉此在
有限的系統資源中找出系統報酬最大的染色體當
作最佳解。除此之外我們還會將 RBMR 以及 RBMUR
產生的解加入基因演算法的初始族群，藉此加速
基因演算法收斂的速度，並期望可以找出更佳的
傳輸方案。 
 
貳、模擬結果與討論 
我們將群播系統設定調整為三個視訊影片，
每一個視訊影片皆有兩個 Layer，藉此設定觀察四
種調整機制在小規模的系統中的表現。圖 87 與圖
88 顯示出在 Reward Case 1 的設定下系統所獲得
的報酬以及消耗的網路資源，可以看到將 RBMR
與 RBMUR 產生的解加入 GA 運算之後系統獲得
的報酬及資源消耗與最佳解 ES 的表現相同，透過
RBMR 與 RBMUR 的運算結果確實可以加速 GA
的收斂以及獲得更好的傳輸方案。圖 89 與圖 90
顯示出 Reward Case 2 的設定下，同樣也有良好的
效果，不會因為設定不同而有不同的表現。 
 我們比較RBMR與RBMUR的運算結果可以
觀察到 RBMUR 的調整策略可以有效運用每一分
網路資源，在每一次的資源分配中皆能獲得最多
的報酬。而 RBMR 在進行資源配置時只會選擇能
獲得最多報酬的 Layer 進行資源分配，並沒有有
效利用每一分的網路資源，因此會發生資源用罄
而所獲得的報酬卻比 RBMUR 來的低的情形。 
48
50
52
54
56
58
60
4 8 12 16 20 24
Th
ro
ug
hp
ut
 (k
bp
s)
Number of nodes
Throughput of voice flow from node 0 to node 1
ADB voice flow
NADB voice flow
 
圖 94: Reward Case 2 資源消耗總和 
 
3. WiMAX 網路下最佳化群播資源配置機制 
壹、模擬環境 
我們使用 MATLAB 來進行模擬實驗，利用
MATLAB強大的數學運算能力來實現我們的演算
法，並將 RRAM 的方法套入各個演算法中，藉此
找到我們的最佳解。由於視訊串流系統是在
WiMAX 環境中運行，因此我們必須先設定
WiMAX 的環境參數，其參數如表 18。我們
WiMAX 的傳輸模式使用 TDD ，而 channel 
bandwidth為 10 MHz，在這樣的設定下，BS的 time 
slot 總數約為 660 個，由於是群播視訊串流的服務，
我們必須給予 downlink 大部分的頻寬，因此將
downlink 的頻寬上限設為 600 個 time slots，提供
視訊群播使用。 
表 18: WiMAX 環境參數表 
環境參數 設定值 
Channel Bandwidth 10 MHz 
Downlink Bandwidth 600 slots/frame 
Number of subchannels per slot 24 
Number of symbols per slot 2 
Frame Duration 5 ms 
Coverage Range 1.4 km 
設定完 WiMAX 的環境參數後，我們可以開
始著手設定我們的系統參數，我們的系統參數主
要有影像分層的數量、各層影像的 streaming rate、
影像區塊(block)的大小、錯誤更正碼的封包冗餘
比率範圍以及計算 utility 所使用的權重值β，詳
情如表 19。 
表 19: 系統參數表 
系統參數 設定值 
Number of Video Layers 5 
Streaming Rate (Base Layer) 150 kbps 
Steaming Rate (Enhancement Layers) 250 kbps 
Video Block Size 2 kb 
Overhead Bound 0% ~ 100% 
Utility Weight β 90% 
 
為了取得較合理的權重值，我們做了一個實
驗來比較當設定不同的β值會有何差別，比較圖
如圖 95。由圖 95 我們可以看出當β值越低時，
utility 會隨之降低，而每一個 time slot 所能獲得的
reward 則會隨之變大。這原因是因為β值越大，
代表考量 reward 的比例越多，而考量 resource 的
比例就越低。以β值為 1 當例子，表示 utility 的
計算完全不考慮 resource 的花費，系統為了使能
得到的 reward 最大化，resource 的花費自然也就
相當的大。從圖中我們可以看到當β=1 時，每 slot
所能獲得的 reward 值是相當低的，一旦我們不將
β值設為 1，每 slot 所能得到的 reward 便會大幅
提高，大概在 12 ~ 14 之間。然而，當β值下降時，
utility 也會隨之下滑，而 utility 是我們方法的主要
核心，因此我們希望 utility 越高越好。所以在之
後的模擬中，我們將β值設為 0.9。 
 
圖 95: 權重值β比較圖 
我們的模擬實驗一共使用了七種調變方式，
分別為 QPSK 1/2、QPSK 3/4、16QAM 1/2、16QAM 
3/4、64QAM 1/2、64QAM 2/3 以及 64QAM 3/4。
希望各層影像能從這些MCS與0% ~ 100%封包冗
餘比率中取得最佳的組合，使得大部分的使用者
皆能有效的接收到影像，且系統的花費不會太
高。 
除了設定這些系統參數外，為了能準確的算
0%
5%
10%
15%
20%
25%
30%
35%
40%
45%
50%
55%
10% 15% 20% 25% 30% 35% 40% 45% 50%
M
ul
ti
ca
st
 R
es
ou
rc
e 
Co
ns
um
ed
Resource Constrain
RBMR
RBMUR
GA
0
5
10
15
1 0.9 0.8 0.7 0.6 0.5
R
ew
ar
d
 p
er
 s
lo
t
β
來處理較小的封包丟失率。然而，當距離到達 900
公尺以後，FEC 的效果便會急遽下降，這是由於
當 FEC 使用 code rate 為 1/2 時的封包冗餘比率為
100%，使用 code rate 為 2/3 時是 50%，隨著封包
丟失率越大，FEC 卻只能選用 100%或是 50%的
封包冗餘率來保護資料，而 Fountain Code 卻能在
20% ~ 100%之間隨意調整，因此 Fountain Code
的效果當然會比 FEC 要來的好很多。在之後的模
擬，我們將一致使用 Fountain Code 來做為我們的
錯誤更正碼。 
(2) 有無使用錯誤更正碼的效果 
瞭解了使用噴泉碼對於我們的系統有比較好
的效果之後，我們再來看看究竟有沒有使用錯誤
更正碼，對於我們的系統有什麼差別。由於我們
的使用者具有移動能力，因此在這個實驗中，BS
將每 10 秒偵測一次各個使用者的距離，並根據這
些距離試圖找出最符合目前現況的最佳解。實驗
中我們的錯誤更正碼為噴泉碼，模擬時間為 1 分
鐘，其模擬結果如圖 99 與圖 100。 
由圖中我們可以很明顯地看到有無使用噴泉
碼無論是在 utility 方面，還是 system reward 方面
的差別都是相當大的，使用噴泉碼比沒使用噴泉
碼在 utility 上平均多了 0.42 左右，而 reward 值則
平均成長了 89%左右。這模擬說明了，若是要在
WiMAX 環境上作視訊群播服務，在應用層使用
錯誤更正碼的技術是不可或缺的。 
 
圖 99: 有無使用錯誤更正碼的Utility時間關係圖 
 
圖 100: 有無使用錯誤更正碼 – Reward 與時間
變化圖 
(3) 最佳化演算法的比較 
在我們瞭解使用噴泉碼對於 WiMAX 視訊群
播服務有多麼重要之後，我們便可以來看所提出
的 Layered Policy Iteration，是否可以準確地找出
系統資源配置的最佳解。在這個實驗中，我們使
用單一頻道、相同的使用者人數與距離來進行模
擬，並且使用了三種最佳化演算法，分別為
Exhausted Search、Genetic Algorithm 以及 Layered 
Policy Iteration，而在這三種演算法中，我們均使
用噴泉碼來做為我們的錯誤更正碼、模擬時間為
1 分鐘，其結果如圖 101。 
 
圖 101: 最佳化演算法的比較 
由圖 101 我們可以明顯地看出這三種演算法
所求得的最佳解，其 Utility 高低為 Exhausted 
Search ＝ Policy Iteration ＞ Genetic Algorithm。
由於 Exhausted Search 為暴力演算法，幾乎將所有
可能性都跑過一遍，執行時間約為 2~3 天，因此
該演算法所求得的解必然最佳。GA 則是經由演化
使得解慢慢趨近最佳，然而卻不一定會找到最佳
解，我們由圖 101 看到其最佳解的 Utility 與
Exhausted Search 幾乎相差不到 0.01，其原因是因
為GA的配置方法，往往會多花費不必要的資源，
其執行時間為 1~2 天左右。 
雖然說 Exhausted Search 所求得的解必定是
最佳解，但是其時間複雜度實在太高，因此並不
適合在實際系統上運作，而我們所提出的 Policy 
Iteration，它除了所求得的最佳解完全與 Exhausted 
Search 相同之外，其所需的時間複雜度也相對地
減少許多，其執行時間約為 10~15 分鐘，因此可
以藉此證明我們的 Layered Policy Iteration 確實是
一個不錯的解法。除此之外，我們也與文獻[22] 所
提的 OLM 方法做比較(如圖 102)，我們可以發現
使用 OLM 所做的資源配置，其效果並沒有我們的
方法來得好。 
0
0.2
0.4
0.6
0.8
1
1.2
0 10 20 30 40 50 60
U
ti
li
ty
Time (sec)
Error Correction No Error Correction
0
200
400
600
800
1000
1200
0 10 20 30 40 50 60
R
ew
ar
d
 
Time (sec)
Error Correction No Error Correction
0.93
0.94
0.95
0.96
0 10 20 30 40 50 60
U
ti
li
ty
Time (sec)
ES GA LPI
2 > Session 1，其主要原因是因為系統想要獲取最
多的 Reward，而使用者人數越多，所能獲得的
Reward 也越高，由此可知各個 Session 的人數多
寡是影響分配資源多寡的主要因素。 
 若我們不用 LPI 的資源配置方式，而是先配
置完各個 session 的某一個 layer，才會再配置各
session 的下一個 video layer (我們稱之為 Case2)。
舉例來說，系統必須先配置完 3 個 session 的 base 
layer，接下來才會再來配置 3 個 session 的
enhancement layer；而不會在同一 session 中配置 2
個以上的 video layer，才配置下一個 session。其
模擬結果如圖 106，與 LPI 的 system reward 比較
結果如圖 107。由結果可以明顯看出 LPI 的配置
方式比 Case2 所取得的 system reward 值要來的多，
可以使 system reward 大約增加了 2%。 
 
圖 107: 多頻道在資源限制下所得之系統總報酬 
(6) 針對各層影像的 Reward 進行調整 
最後一個實驗是針對各層影像的 Reward 進
行調整，在這個實驗中，我們總共設計了三種 Case：
Case1 的 Reward 依照 layer 的順序分別為 20、20、
20、20、20，也就是各層影像平均分配的模式；
Case2 為 40、20、20、10、10，此模式 base layer
所占的 Reward 最高，接著依序慢慢遞減；Case3
則為 80、5、5、5、5，這個模式除了 base layer
的 Reward 高居第一之外，其餘的 layer 則平均分
得小小的 Reward。本實驗共有兩個頻道，頻道中
的人數皆為 20 人，Session 1 的 SSs 與 BS 的距離
為 100 ~ 800 公尺以亂數設定，Session 2 則為 800 
~ 1400 公尺以亂數設定，資源限制為 100 個 time 
slots。我們利用上述的三種 Case 來觀察此兩頻道
在獲得 system reward 上有何變化，其模擬結果如
圖 108。 
 
圖 108: 各層影像在不同Reward的分配下之資源
配置情形 
由圖 108，我們可以觀察出 Session 1 在這三
種 case 下所能獲得的 reward 幾乎都維持在 2000
左右 (幾乎滿分)，其主要原因是 Session 1 的使用
者們距離 BS 較近，因此比較容易先搶得資源而將
Session 1 先配置完成；而 Session 2 的使用者們由
於距離 BS 較遠，因此只能看還剩下多少資源可以
配置。除此之外，我們也可以看出當頻道中使用
者的平均距離較遠時，若於較低的 video layer 使
用較高的 reward 比率可以使系統獲得更多的
reward 值，如圖中 Case 2 就比 Case 1 好，而 Case 
3 又比 Case 2 好。 
 
B. 行動管理 
1. WiFi/Fixed WiMAX 異質網路下行動管理機
制 
本研究依據應用情境，將提出的方法所規劃
的 AP 換手順序決策，與最佳解進行比較，討論
其準確率。使用者移動路徑如圖 29 為示，依序為
α1→α2→α3→α4→α5→α6→α7→α8，其
中 AP 之情境資訊如表 3 所示。依據使用者的需
求是高頻寬、符合移動方向，權重依序定義為
WMB=0.3, WRSSI=0.2, WOu=0.2, WDir=0.3。 
本研究將分別以實例驗證單點決策與組合式
決策的運作模式。單點決策是隨著使用者移動過
程中遇到有兩個以上（含）AP 訊號重疊的區塊都
會產生一次換手決策。而在組合式決策的部分，
假設事先可以得到所有 AP 組合的資訊，所以對
於一條路徑，伺服器端只需要做一次決策。 
壹、單點決策實例 
單點決策過程在使用者移動過程中，只要遇
到有兩個（含）以上 AP 涵蓋的區塊即利用理想
解類似度順序偏好法進行決策，每次決定下一次
要換手的 AP 為何，一直重複此步驟到達目的地
6500
7000
7500
8000
8500
9000
130 140 150 160 170
R
ew
ar
d
Resource Upper Bound (time slot)
Case 1 Case 2
0
500
1000
1500
2000
2500
3000
3500
4000
4500
Case 1 Case 2 Case 3
Sy
st
em
R
ew
ar
d
Reward Case
Session 2
Session 1
量作為額外負擔的兩種指標。 
貳、Throughput 
當連線設為 UDP 連線且邊界路由器對外的
兩條連線能力相同時。如圖 109 所示，藉由我們
所提出的架構發揮作用後，當多重網路架構遇到
網路錯誤時，Average throughput 都可以回復到原
來的水平。 
 
圖 109: Throughput 
參、Delay 
如圖110所示，當多重網路架構遇到網路錯誤時，
會呈現一段空窗時間，造成T1到T2之間的斜線，
而後 Average delay 則會呈平緩的曲線，和網路錯
誤發生前雷同。 
 
圖 110: Average Delay 
MH-MIPv6 與 MH-NEMO with Route 
Optimization 的曲線因路由最佳化的影響和與
MH-NEMO 有所差異，在網路回復後的初期(如圖
110 中 T2 到 T3 之間)，MH-NEMO with Route 
Optimization 是藉由 Home Agent 轉送，故延遲時
間 會 較 長 ， 在 完 成 邊 界 路 由 器 之 間 的
Correspondent Registration 後，MH-NEMO with 
Route Optimization 也如同 MH-MIPv6 一般，延遲
明顯較低。 
我們所設定的網路拓樸如圖 111 所示，當
Router A 發生網路錯誤時，將連線轉由更接近
Border Router 的 Router B 繼續進行，所以當網路
回復後，若是經由最佳化的路徑，則 Average delay
會較原先更低。 
  
圖 111: 模擬環境 
肆、Overhead 
首先是計算整個模擬的網路環境中不同架構
的 Control Messages 數量，簡單的暫定 Control 
Messages 數量越少則對整體網路效能影響較小。
如圖 112 所示，可以看出隨著連線數量的增加，
MH-MIPv6 架構的每一條連線，都有相對應的
Control Messages，故 Control Messages 的數量會
呈現線性成長；而 MH-NEMO 只需與 Home Agent
之間維持 Control Messages 的交換，額外負擔最小；
MH-NEMO with Route Optimization 的 Control 
Messages 除了往返於邊界路由器與 Home Agent
外，還存在於各個連線之間的 AS 中，而此架構
的 Control Messages 在曲線後半段呈現平緩，明顯
可以看出此架構的 Control Messages 數量受整個
模擬環境的 AS 數量所限制，所以此架構所造成
的額外負擔必定會小於 MH-MIPv6。 
 
圖 112: Control Messages 
MH-NEMO藉由在邊界路由器與Home Agent
之間建立雙向隧道以維持所有連線的正常運作，
所有的封包都必須路由經 Home Agent，意即越多
的封包路由至 Home Agent 是在造成 Home Agent
的負擔，此處視為負面影響。如圖 113 所示，我
們計算出在各種不同的連線數量時，路由至 Home 
Agent 的封包比例。可以看出來 MH-MIPv6 與
MH-NEMO with Route Optimization都大量地減少
了 Home Agent 的負擔，處理 IPv6 延伸標頭的負
0
100
200
300
400
500
600
40 45 50 55 60 65 70 75 80 85 90
Th
ro
ug
hp
ut
(k
bp
s)
Time(sec)
Throughput
MH‐MIPv6
MH‐NEMO
MH‐NEMO with Route 
Optimization
0
0.5
1
1.5
2
2.5
30 40 50 60 70 80 90 100 110
D
el
ay
 (s
ec
)
Time (sec)
Average Delay
MH‐MIPv6
MH‐NEMO
MH‐NEMO with Route 
Optimization
T1
T2 T3
0
1000
2000
3000
4000
0 10 20 30 40 50
N
um
be
r o
f P
ac
ke
ts
Number of Connections
Overhead (Control Messages)
MH‐MIPv6
MH‐NEMO
MH‐NEMO with Route 
Optimization
  
使用檔案傳輸服務的換手決策如圖 116，而
檔案傳輸服務需要較高的頻寬及較低的延遲時間。
根據表 24 所列的 QoS 表現，在各情況中有較高
頻寬及較低延遲時間的網路會被選為服務的網路。
因此，使用檔案傳輸服務時所選用的網路為
WiMax_BS3->3GBS->WLAN_AP1->WLAN_AP2
-> WiMax_BS3-> WLAN_AP3。 
 
 
圖 115: 使用語音服務的網路換手情形 
 
 
圖 116: 使用檔案傳輸服務的網路換手情形 
 
C. 點對點視訊串流 
1. 點對點隨選視訊系統 
我們比較兩種情形的連續性指標，其一為我
們提出的構想，即架構中有代理伺服器協助進行
修補模式；另一者為無代理伺服器的協助，即代
理伺服器只負責協助節點進入系統(bootstrap)，而
無額外的修補模式。如圖 117 與圖 118 所示，不
管在 100 個點或 400 個點的環境，我們的構想都
有著良好的效率，因為即使父節點服務區間或上
傳頻寬不夠，皆可向代理伺服器進行錯誤回復。 
 
 
圖 117:100 個節點在有無代理伺服器環境中的 CI 
 
 
圖 118: 400 個節點在有無代理伺服器環境中的
CI 
在我們的環境中，會進行修補模式的時機有二，
其一為節點剛進入系統時，另一個時機為傳輸的
父節點發生錯誤，進行錯誤回復時。由圖 119 可
見到，隨著環境中參與節點數目越多， 比例越小，
顯示節點數越多，須進行錯誤回復的片段比例越
小，而趨於平緩。 
  
圖 119:  與節點數的變化量 (修補模式的區段需
0.00%
20.00%
40.00%
60.00%
80.00%
100.00%
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
CD
F 
(%
)
Continuity Index
with proxy without proxy
0.00%
20.00%
40.00%
60.00%
80.00%
100.00%
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
CD
F 
(%
)
Continuity Index
with proxy without proxy
0
0.05
0.1
0.15
0.2
0 100 200 300 400 500
Sp
/S
n
Number of peers
低的節點主要為本身下載頻寬極低的點，如撥接
上網的節點。大部分的片段都無法在期限之前抓
完，因此不管向哪些父節點索取片段，效果都不
佳，因此在曲線一開始時，兩者是近乎重疊的。
而頻寬稍大的節點即可看出效果，若父節點無經
由 GRA 評估而盲目選擇，會造成傳輸效率的下
降。 
 
圖 124: GRA 為基準的節點選擇機制與隨機選擇
父節點對連續性指標的影響 
 
2. 點對點可調適視訊串流系統 
壹、模擬環境  
我們使用Event-driven Packet-level的模擬器，
底層的網路拓樸使用 GT-ITM 來動態產生，有
2500 個 Node，以及定義好了每個 Node 之間的延
遲。此外，任二點之間的 Packet loss rate 為隨機產
生小於 10%的數值。在可調式視訊串流的設定，
如圖 125 所示，這個可調性視訊編碼視訊分為 10
個 Layer。如表 25 所示，參與節點有 4 類(不包含
Source node)，對應的比例為 1%、15%、39%以及
45%。使用者的 Buffer 存放二分鐘的視訊資料，
Sliding window 的大小為 10 秒，若 Buffer 已滿，
看過的視訊將保留 20 秒。 
 
圖 125: SVC 視訊串流的各項參數 
 
表 25: 節點種類分配表 
 
貳、Continue Index 
首先，我們透過 Continue Index 來驗證影片播
放的流暢性，Continue Index 值介於 0~1 之間，越
接近 1 表示使用者在觀看上比較不會有停頓的情
況，計算的方式採用在一段時間內，應該要播放
的 GOP 數量除以可以播放的 GOP 數量。從圖 126
來看，我們的方法，因為較重要的 Layer 都有被
優先處理，並且 Base layer 的數量比較少，所以可
以很迅速的被排程機制處理完，讓使用者能夠順
利的播放。而 Pure SVC 的情況約有 60%的使用者
他的Continue Index都在0.9以下，從數據中顯示，
大都為 Type3 和 Type4 的使用者，但以 Type3 和
Type4 使用者的頻寬設定來看，應該是足夠下載這
個視訊，會造成播放不連續的原因主要是因為在
判定自己所需要的片段要和哪一個使用者索取時，
會因為 Buffer Map 的交換延遲，使得資料不夠急
時，或是傳輸過程中因為封包遺失導致要重新排
程等待，所以從圖中我們可以發現，採用 NC 真
的能有效的改善以上的情況。而圖 127 表示整個
模擬時間內，所有使用者的平均 Continue Index，
在第一分鐘時，二組實驗數據都有不錯的表示，
這是因為在實驗設定中，設定為前 10 秒的視訊要
全部抓完才能開始播放，或是當使用者加入後 10
秒後也會直接開始播放，避免使用者 buffer 過久
導致跟不上整體視訊的播放。 
 
圖 126: Continue Index CDF 圖 
 
0.00%
20.00%
40.00%
60.00%
80.00%
100.00%
0 0.2 0.4 0.6 0.8 1
CD
F 
(%
)
Continuity Index
GRA‐based Random
0
0.2
0.4
0.6
0.8
1
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Pe
er
 C
D
F
Continue Index
Continue Index CDF
SVC
SVC w/ NC
Redundancy 來驗證我們的方法是否會產生明顯的
Overhead。如圖 131 所示，對於整體的 Packet 
redundancy overhead 只有在 Packet loss rate 大於
25%時產生比較明顯的差異。當 Packet loss rate 小
於 20%時，我們的方法將不會對系統帶來額外的
Packet redundancy。 
 
圖 131: Packet Redundancy 比較圖 
 
3. 基於小世界特性與效應之點對點視訊串流網
路分析 
壹、模擬環境與參數設定 
 此模擬是採用 c 語言所寫的一個事件驅動
(event-driven)的程式，此種驅動即是在特定的事件
發生時才執行相對應的動作，以我們的模擬中是
以節點的加入和離開作為驅動的事件，節點的加
入時間採用 Poisson 分佈，節點的離開時間是採用
Pareto 分佈，在初始時，也因為節點會不斷的加
入和離開而不穩定，我們依照公式 
N ൌ Eሾtሿ כ  λ 
，N 是穩定人數、E[t]是平均停留時間、λ是進入
的速率，我們依此將網路環境的大小設定成穩定
狀態會約有 10000 個節點。我們將節點加入的平
均速率設為 60，表示單位時間內會有 60 個節點
加入，節點的離開時間是 Pareto 分佈，參數 Xm
為 60、α為 1.5，依照 Pareto 分佈的平均公式 
α X୫
α െ 1    for α ൐ 1 
，可得到節點的平均停留時間約為180單位時間，
在高能力節點與低能力節點的平均停留時間是一
樣的，整個模擬時間設定為 2000 個單位時間。 
貳、效能量測項目 
 在此小節中，我們將擬定數個實驗的議題來
對幾種建構出不同網路拓樸的方式做效能上的分
析，在此先將所要探討的議題舉出來，並且將說
明這些議題所觀察的重點。 
(1) 小世界網路指標 
我們知道要描述一個小世界網路有二個重要
的參考指標，一個是平均任意二點的路徑長度 
(在點對點視訊串流裡我們考量的會是任一節點
到來源端的距離)，另一個則是叢聚性，依照這二
種指標把特定的網路拓樸和隨機網路來做比較，
看特定的網路拓樸是否具有小世界的特性。 
另外在網路拓樸圖形上，常會依照節點分支
度的分佈情況來觀察某網路的結構是否屬於某種
的網路結構，例如隨機網路的節點分支度分佈會
是 poisson 分佈，而 scale-free 網路的節點分支度
則是呈現 power law 的分佈，然而依據[101]，節
點分支度是 power law 的網路是具有象徵小世界
網路，所以我們研究中也把節點分支度視為一個
重要的指標。 
在這個議題中，我們將四種節點選擇的方式 
(random, minimum delay - stable, capacity and 
capacity - stable) 和以 Duncan J. Watts and Steven 
H. Strogatz 所提出的小世界網路模型建立出的隨
機拓樸做比較，此模此建出來的隨機拓樸往後會
稱為 pure-random，之後我們將以表格方式對此五
種拓樸對於路徑長度和叢聚性做比較，另外再觀
察各種拓樸的節點分支節分佈狀況。 
(2) 最短路徑長度 
我們知道在點對點視訊串流裡面，若使用者
端距離來源端(source)愈遠則愈有可能接收不到
完整的視訊串流，或者是造成的延遲愈大，而且
也表示中間經過的節點數愈多，而遇到使用者離
開造成的效能降低的機率也愈大，所以在一個頻
道中，離來源端愈近是愈有利的。在這個議題裡
面，我們計算路徑長度是以網路上的節點來計算，
不是以實際底層的路由器或交換器的數量來統
計。 
(3) 最小延遲時間 
在網路的環境中，延遲時間是最容易被關注
的議題，愈短的延遲時間代表使用者愈快的接收
到資料，而基本上影響的主要因素就是節點與節
點之間的延遲，另一個就是節點與來源端的距離
長短，因為來源端必定有完整的視訊串流，基本
上我們會希望愈靠近來源端愈好，延遲也愈小愈
好，愈小的延遲可減少從來源端到使用者端畫面
的不同步情況。在網狀的拓樸底下，資料的傳遞
都是片段的，它不是具有特定的影音串流路徑，
0.00%
2.00%
4.00%
6.00%
8.00%
10.00%
5% 10% 15% 20% 25% 30%
Packet Redundant
With Schedule No Schedule
Packet Loss Rate
使得叢聚度較高，但前者的叢聚度又比後者高出
一點，主要因為後者在節點選擇時，雖然高能力
節點會群聚在一起，但比較選不到低能力節點，
所以低能力的節點相互連接的機會低，所以造成
叢聚度的降低。 
表 26: 小世界網路指標之比較 
 
如圖 38 所示，首先可以看到在 pure random 的分
佈是呈現 Poisson 的分佈，其他四種策略皆為 fat 
tail (power law)分佈，這也代表這四種策略有小世
界網路效應(small world effect)，也就是低路徑長
和高叢聚度，而 fat tail 分佈也是具有象徵小世界
網路的現象。我們依照小世界網路的性質，低路
徑長與高叢聚度來看，再觀察節點分支度，從這
二種的結果得知，在視訊串流網路裡面，這四種
策略都會讓整個網路具有小世界網路的特性。 
 
圖 132: 不同策略下的節點分支度 
肆、最短路徑長度 
 這邊的最短路徑是指任一節點到來源端的最
短路徑，然而在點對點視訊串流裡面，到來源端
所經過的節點數愈少愈好，換另一方面來說，路
徑愈長代表發生問題的機率也愈大。由圖 133 中
我們可以得知 random 和 min delay – stable 差不
多，而 capacity 與 capacity – stable 這二種方法
也差不多，這四種方法都可以在 6 個 hop 數以內
就可到達來源端，在 hop count 只有 2 時約只有
10%~25%，之後開始劇烈增長，前二種策略在 3
個 hop 數時就佔了 96%了，而後二種策略稍低，
約在 75%，而全部策略在 4 個 hop 數以內的節點
就有 99%以上，平均數也約略只有 3 上下，這是
一個很短的距離，這也代表 mesh 的產生的網路拓
樸距離來源端都很接近。 
 
圖 133: 最短路徑長度 
伍、最小延遲時間 
 在這個議題探討中，我們要觀察的是不同的
節點選擇策略底下，何種方法在延遲時間上有著
良好的表現。從圖 134 觀察中我們可以發現，
random、capacity 和 capacity – stable 這三種方
式的延遲都較大，約略全部的節點延遲都大於 40，
然而這四種策略的走勢是差不多的，一開始都是
呈線線成長，而超過 120 後會較為平緩，但在 min 
delay – stable 中，約從 80 後就趨近平緩，也就
是說，此策略有 90%的人在 80 以下，而其他方法
是 90%的人在 120 以下。在此議題中以 min 
delay – stable 表現最好，整體而言皆比其他三
種方法來得好，末端的成長較為緩慢，雖然此種
方式會造成路徑長度增長，但在延遲時間的表現
上還是比其他三種較為優異。 
 
圖 134: 最小延遲時間 
陸、Influence of service 
 在本議題中，我們將探討在 churn 的情況下，
占率是相同的，在發送的 overhead 上表現也是如
此。在接收的 overhead 上面，四種策略表現各不
相同，在 random 裡，接收的 overhead 跟上傳頻寬
成正比，而在 min delay – stable 裡，高能力節
的 overhead 會被其他種類的節點分掉，代表其他
種類的節點更有機會被當成父節點。在 capacity
方面，全部的 overhead 都集中在高能力節點上，
但我們可以發現若加入 stable 的考量則可平緩一
下高能力節點的負擔。 
 
圖 137: 不同策略的各類節點 overhead (未設ρ) 
我們調整高能力節點的離開比率，得出的結
果顯示在圖 138 裡，基本上各類節點的 overhead
趨勢跟 Influence of service 是相同的，隨著高能力
節點離開率升高，overhead 也跟著增加。在 random
與 min delay – stable 中明顯可以得知在高能力
節點離開比率較低的情況下，雖然整體的
overhead 有下降，但幅度並不大，而在二種
capacity 策略考量下，下降幅度均有明顯的降低。 
 
圖 138:不同策略的 overhead (ρ=5~25%) 
8. 平均重接次數 
在這個模擬中，我們觀察整個模擬時間內，在一
個節點的 session time中需要重新找尋多少次父節
點，另外我們將假設高能力節點與低能力節點的
session time 不一樣，之後我們定義η。 
η ൌ high capacity duration
low capacity duration
 
實驗結果中的橫軸為高能力節點與低能力節點平
均停留時間的比例，η的值愈高代表高能力節點
的停留時間愈長，縱軸代表每段 session time 中平
均重接次數。從圖 139 中，我們主要可以得知二
點，第一，高能力節點停留時間愈長，對這二種
策略愈為穩定；第二，我們多加入 stable 的考量，
也可以減少節點重接次數。 
  
圖 139:不同策略下平均重連次數 
 
4. 基於自相似圖形之超級點網路建構機制 
壹、效能指標與特性比較 
針對 P2P 查詢應用的系統我們將會針對節點
連線數、拓樸直徑、查詢訊息數量、延遲時間這
幾項來作分析比較，這邊均只針對 supernode 層
的 overlay 作比較，表 27 是 SNG 與其它拓樸的特
性比較，以下先說明這幾項特性的意義： 
(1) 節點連線數(Degree) 
節點連線數這邊指的是 supernode 與其他
supernode 連線的數量，我們知道這個特性間接影
響到將查詢訊息散播到拓樸的速度，當連線越多
表示越可以馬上把訊息傳送到更多點，但是每個
節點都有可以連接數量的上限。supernode 通常比
ordinary node 有更高節點連線數。 
(2) 拓樸直徑(Diameter) 
如果在拓樸內任取兩點，從一個點到另外一
個點所需要經過 Hop 數的最大值即為這個拓樸的
直徑。這個數值為影響查詢訊息傳播速度的關鍵
因素。代表的意義是查詢路經最多需要經過幾個
Hop 的延遲。 
  
圖 142: 查詢訊息數量比較圖 
(4) 延遲(Delay) 
前面提到SNG與PDG的Diameter均是為2，
所以有一部分的查詢訊息只透過一個 hop 轉送查
詢到節點，而剩下的節點則是透過先接收的節點
轉發訊息。PDG 的 delay 為 2δ/(δ＋1)，而 SNG
的 delay 則為(2k2-2k)/k2。SNG 有 2(k-1)個訊息只
需經過一個 hop，(k-1)(k-1)個訊息經過 2 個 hop，
因此 delay為 2(k-1)+2(k-1)(k-1)除以全部的節點個
數 k2，即為(2k2-2k)/k2。我們拿δ＝16 與 k=16 時
來比較，此時節點數量為 273 與 256，也是約略
相等，PDG 的 delay 約為 1.88235，而 SNG 約為
1.875，圖 49 上兩者的 delay 也是約略相等。 
 
圖 143:  Delay 比較圖 
(5) 比較 
表 28 彙整了上述 SNG 和 PDG 的效能比較。
由以上數據可得知，SNG 與 PDG 在 supernode 節
點約在 256 及 273 左右的時候(k=16, δ=16)，有
相當一致的效能表現。PDG 有 Bootstrap 伺服器
單一點失效、節點擾動造成拓樸擴張縮減的
overhead、節點連線數上線限制等 3 個缺點，造成
PDG在面對節點數增減時，有相當大的overhead。
但 SNG 的拓撲建構有相當大的彈性，讓 SNG 可
以避免這些缺點。 
表 28: PDG & SNG 效能比較表 
 
 Bootstrap 單一點失效(Single Point Failure) 
在 PDG 內，Bootstrap 伺服器來負責維持整
個 supernode 層的拓樸，包括重新計算節點在 PDG
裡面的 ID、給予新的鄰居節點的資訊等，所以當
Bootstrap 失效時，整個拓樸在擴張縮小上亦會相
對失效。但 SNG 的 Bootstrap 伺服器只負責給予
新的鄰居點資訊，SNG 節點間會有管理點可以協
調新的點加入需要被安置到什麼位置，因此
Bootstrap 的負載量就相對的較輕，而當 Bootstrap
伺服器失效時且管理點尚存在，一個新加入的點
只要能找到 SNG 其中的一點，便有辦法透過管理
點得知需要加入到 SNG 的什麼位置，因此在
bootstrap 伺服器失效的時候也有辦法維持拓樸的
成長或者縮減。 
 擴張縮減重建拓樸的 overhead  
當 PDG 中節點個數超過或少於該 PDG 的閾
值(threshold)則會重新調整該拓樸的大小，透過
Bootstrap 給予新的新的 ID 值及新的鄰邊節點資
訊，這種情況下基本拓樸的連結都需要打掉重新
建立，當節點增多時，這樣的 overhead 必相當的
大。當需要擴展到下個序列的 PDG 時，每個點都
需要重新連接新的鄰邊節點，而鄰邊節點的數量
為 2δ，整體的節點數量為δ2+δ+1，因此整體重
新連結的複雜度約為 2δ(δ2+δ+1)/2，約Ｏ(δ3)。 
然而 P2P 應用的情況下，節點的變動性較大，可
能造成拓樸一直處於重建連線的狀態。而 SNG 因
為拓樸是規律的往水平及垂直方向成長均勻成長，
且拓樸要擴增縮減只需從最外層來增加及刪減，
可避免影響原本已經存在的連線，來降低擴張拓
樸及重建的 overhead。SNG 並沒有 PDG 有層級上
(δ)的分別，節點加入是依序的擺入 SNG 外圍來
逐漸擴張，同樣比較擴張一個層級的情況，在邊
長為 k 成長到 k+1 時，新加入的節點數為 2k+1
個，每個點需要在水平方向及垂直方向與其他點
連接，而連接的節點數量為約為 2k，因此需要增
長的情況是從上層，一直傳遞到最底層，試想如
果發送查詢在中間某一層，訊息傳遞到第一層與
最下層只需經過小於直徑的 hop 數就可以到達，
因此從第一層的 INTRA SNG 內節點到最下層的
INTRA SNG 內部的節點是距離最長的，即為拓樸
的直徑。以 SSNG 三層的情況來假設，例如當第
一層的 L1(1,1)要傳送到 L1(3,3)L2(2,2)L3(3,3)，則
第一層往下傳只需經過 1 個 hop，進到第二層後
需要經過 INTER SNG 的 2 個 hop 及 INTRA SNG
的 2 個 hop 才能到達第二層所有的節點，但當經
過 INTER SN G 時即可以往下一層傳送，因此在
跨層往下層傳需要經過中間層數 1 個 hop 的傳送
與 INTER SNG 的 2 個 hop，以在三層的情況下只
經過需要中間層轉送，因此在一般情況下跨多層
的傳送為 3(L-2)，而到達最後一層的所有節點還
需要經過 1 個 hop 的跨層及 2 個 hop 的 INTER 
SNG hop 與 2 個 hop 的 INTRA SNG hop，因此整
體直徑為 3(l-2)+5。在 L=3 的情況下，Diameter
也僅為 8。 
(4) 廣播訊息數量(number of flooding messages) 
在 SSNG 的拓樸下，每個節點均可被保證最
多只會收到一個訊息，因此整體的傳播訊息的量
依然維持是節點總個數減一，為∑ ሺkଶሻ୪L୪＝ଵ െ 1 。 
(5) 延遲(Delay) 
 在 SSNG 的拓樸因為是多層次的成長，我們
估算在 k=16 的情況下，整個網路的拓樸在成長到
第三層全滿時，已經可以支援一千萬個以上的
supernode 節點，因此我們將以 k=16, L=3 的情況
來分析。我們先考量 worst case(upper bound)的狀
況，以三層的 SSNG 來看，如果由第一層發出查
詢訊息的狀況來看是會經過整個拓樸 diameter 的
情況。參考圖 146 的樹狀分析方法每個節點有三
個樹狀分支，左邊的分支指的是為目前傳到這個
SNG 內部的節點，hop 數為從上層節點承接的 hop
數，中間的樹狀分支指的是此 SNG 中收到節點接
收後經過一個 hop relay的節點，數量為 2(k-1)個，
右邊的分支指的是經過兩個 hop realy 的節點，數
量為 (k-1)2。同樣的第二層的 SSNG 亦是成長出
k2 個 SNG，我們可用同樣分析 SNG 的方式來看
SSNG，從 SNG 到 SSNG 因為有跨層，但因為
SSNG 底下實際是由 SNG 組成，因此 SSNG 節點
下面還需要串接著 SNG，但 SNG 的數量上則以
SSNG 分析的節點數量乘與該 SNG 的數量，多層
SSNG 的數量會根據該樹的上層節點的數量乘與
該分支的數量來計算。 
我們分別去計算不同層的 delay，有 L2 時的
此時的 diameter 為 5 ， delay 為  [5(k-1)4 ＋
16(k-1)3+18(k-1)2+10(k-1)+1] /(k2+k4) ， 所 以 當
k=16 時，delay 約為 4.732，k=14 時，delay 約為
4.718。當 L3 時此時拓樸的 diameter 為 8，delay 為
[8(k-1)6＋42(k-1)5+95(k-1)4+116(k-1)3+ 96(k-1)2＋
28(k-1)+3] /(k2+k4+k6) ，所以當 k=16 時，delay
約為 7.613，當 k=14 時，delay 約為 7.545。我們
可以看出來當 k 值較小時 delay 較小，原因是因為
當 k 值較小時，2(k-1)/(k-1)2的比值較大，也就是
在這些許多 SNG 內部只經過 1 hop 就會到達的節
點佔的比例較高。 
 
圖 146: 三層的 SSNG delay 分析 
最後我們考量平均 delay 的情況，如圖 147
所示，可以明顯地發現由第二層的節點發送的查
詢訊息所得到的平均delay較小。如圖以k=16時，
計算出來的 delay 約為 6.6137，k=14 時，delay 約
為 6.5465。這時候發生率約為 k4 /(k2+k4+k6)。 
貳、模擬結果與討論 
(1) Gap 
圖 148為CoolStreaming與我們所提的方法達
到同步播放的效能表現。我們定義系統不同步差
距(Gap)為系統中播放最快者及播放最慢者兩者
之間的影片序號差距，Gap 值以 block 為單位。我
們可以發現原始的 CoolStreaming 因為沒有實作
同步的機制，使用者在加入系統之後，必須根據
鄰居的 Buffer 來決定第一個要下載的影片資料，
而且必須等到下載量達 Buffer 的一半才可播放，
故每個人所播放的影片序號各有不同，即會產生
如圖中的差距。另外，因為使用者持續的加入到
系統裡觀看影片，在影片持續播放當中，後面加
入系統的使用者所找到的鄰居已與系統有差距，
再加上本身抓取影片資料的時間後，使得各個節
點的播放時間差距更大。而由圖148亦可以得知，
我們的方法可以讓使用者準確的算出系統中正在
播放的影片序號，並依照其頻寬來下載適當的影
片序號。故每一個人開始播放的時間點，即會是
系統中每一位使用者的同步點，即可達到同步的
效果。 
 
圖 148: Gap 比較圖 
另我們利用 CoolStreaming 來傳送可調性視
訊編碼的影片，並且以我們所提出的方法來作比
較。如圖 149 所示，我們可以發現因為
CoolStreaming並未針對可調性視訊編碼的每一層
影片做排程，即較重要的影片並無法較快傳送出
去，使得接收者即使收到較高層的影片資料仍會
因為沒有基底層的資料而無法播放影片，因而無
法快速地滿足 CoolStreaming 必須要收到一半的
緩衝區影片才可播放影片的要求，進而使得隨著
節點的加入，系統中的 Gap 會愈來愈大。亦如圖
149 所示，我們所提出的方法可以讓每一個節點
的 Gap 差距為 0。 
 
圖 149: SVC 影片傳輸 Gap 比較圖 
(2) Continue Index 
接著我們比較原始 CoolStreaming 的系統以
及我們所提的方法CI值分別為何。如圖 150所示，
我們可以發現 CoolStreaming 與同步機制都會因
為節點陸續加入，而導致 CI 出現震盪的現象。而
在模擬後期，我們亦可發現同步機制的平均 CI 值
會略高於原本的CoolStreaming，但是差距並不大，
而且兩者的平均 CI 值皆可達到 0.98 以上。 
 
圖 150: Continue Index 比較圖 
接著我們觀測以可調性視訊編碼作為影片格
式之後，CoolStreaming與我們所提的方法的差別。
如圖 151 所示，我們可以發現 CoolStreaming 的
CI 值隨著時間逐漸下降。其原因是因為
CoolStreaming 在節點陸續加入之後，因為進來的
使用者隨機的找尋使用者來要求影片片段，並未
考慮使用者的可用頻寬或是延遲時間，造成接收
影片的效率降低亦或是接收影片時間慢於實際上
的播放時間，進而讓整體平均的播放連續程度跟
著下降。除此之外，CoolStreaming 在傳送可調性
視訊編碼的影片時，也並未對於每一個階層的影
片作排程，亦造成影片雖然收到其它較高層的資
料，而因為沒有基底層而無法播放的情況，這也
反映在平均的 CI 中，使其逐漸下降。而我們所提
出的方法中，我們設定系統延遲時間為 5 秒鐘，
時間計算的 Deviation 值為 500 毫秒。 
由圖 151可以發現我們的方法所呈現的CI值
人數，在相同的系統延遲時間下，CI 值的變化。
由圖 154 中我們可以發現在系統延遲時間為 4 秒
時，即可支援 200 個使用者同步播放影片。因此
我們觀測系統延遲時間為 4 秒時，更多人數的 CI
值變化。由圖 154 所示，我們可以發現我們將人
數由 200 人增加至 1000 人時，CI 值的表現在節
點加入時，都會產生一些震盪的現象，而人數愈
多時，CI 值震盪的幅度也愈大，如 800 人與 1000
人的表現即較不好，CI 值在模擬的過程中會掉至
0.9 以下。然而我們亦發現，當節點都陸續加入之
後 CI 值會漸漸的穩定，並都能達到 0.95 以上的
表現，其原因是因為系統使用了 Hybrid Pull-Push
的方式，當節點剛加入時，是使用 Pull 的方式來
向人要求影片，但是在鄰居訂閱子視訊串流後，
Push 的方法便提升了影片傳輸的效能，雖然人數
增加使 CI 值會有些許下降，但是最後都能穩定下
來。 
 
圖 154: 不同使用者數 CI 比較圖 
 
七、 參考文獻 
[1] M. Weiser, “The Computer for the Twenty-First Century,” 
Scientific American, vol. 265, no. 3, pp. 94-104, 1991. 
[2] J.H. Lu, C.Y. Wang, and R.H. Hwang, “An Open Framework 
for Distributed Context Management in Ubiquitous 
Environments,” International Symposium on UbiCom Frontiers 
- Innovative Research, Systems and Technologies (Ufirst-09), 
July 2009. 
[3] C.Y. Wang and R.H. Hwang, “Context-aware Path Planning in 
Ubiquitous Network,” the 6th International Conference on 
Ubiquitous Intelligence and Computing (UIC), vol. 5585, pp. 
54-67, July 2009. 
[4] Y. Xiao, H. Li, and S. Choi, “Protection and guarantee for voice 
and video traffic in IEEE 802.11eWireless LANs,” in Proc. 
IEEE Information Communications, pp. 2153–2163, Hong 
Kong, 2004. 
[5] P. Ansel, Q. Ni, and T. Turletti, "FHCF: A Fair Scheduling 
Scheme for 802.11e WLAN," INRIA, July 2003. 
[6] I. Inan, F. Keceli, and E. Ayanoglu, “An adaptive multimedia 
QoS scheduler for 802.11e wireless LANs,” in Proc. IEEE 
International Conference on Communications, June 2006. 
[7] A. Grilo, M. Macedo, and M. Nunes, “A Scheduling Algorithm 
for QoS Support in IEEE 802.11e Networks,” IEEE Wireless 
Communications, vol. 10, no. 3, pp. 36–43, June 2003. 
[8] C. Cicconetti, L. Lenzini, E. Mingozzi, and C. Eklund, “Quality 
of Service Support in IEEE 802.16 Networks,” IEEE Network, 
vol. 20, no. 2, pp.50-55, 2006 
[9] J. Chen, W. Jiao and H. Wang, “A Service Flow Management 
Strategy for IEEE 802.16 Broadband Wireless Access Systems 
in TDD Mode,” in Proc. of the IEEE International Conference 
on Communications, vol. 5, pp. 3422-3426, May 2005. 
[10] J-J. Juliet Roy, J. Juliet, V. Vaidehi, and S. Srikanth, “Always 
Best-Connected QoS integration model for the WLAN, 
WiMAX Heterogeneous Network,” in Proc. Industrial and 
Information Systems, pp. 361–366, Aug. 2006. 
[11] H. Lin, Y. Lin, W. Chang, and R. Cheng, “An Integrated 
WiMAX/WiFi Architecture with QoS Consistency over 
Broadband Wireless Networks,” in Proc. IEEE Consumer 
Communications and Networking Conference, pp. 1-7, 2009. 
[12] G. Prasath, K. Raghu, and M. Ma, “Integration of WLAN and 
WiMAX with Base Station Assisted QoS,” in Proc. Wireless 
and Optical Communications Networks, pp. 1-5, 2008. 
[13] A. Basalamah, H. Sugimoto and T. Sato, “Rate adaptive reliable 
multicast MAC protocol for WLANs,” in Proceedings of IEEE 
VTC, 2006. 
[14] S. Choi, N. Choi, Y. Seok, T. Kwon, and Y. Choi, 
“Leader-Based Rate Adaptive Multicasting for Wireless LANs,” 
GLOBECOM 07. 
[15] J. Villalon, P. Cuenca, L. Orozco-Barbosa, Y. Seok, and T. 
Turletti, “ARSM: a cross-layer auto rate selection multicast 
mechanism for multirate wireless LANs,” Communications, 
IET, Oct. 2007. 
[16] S. Das, D. Raychaudhuri, K. Ramaswamy, and C. Wang, 
“Adaptive video multicast over wireless LANs,” Wireless 
Communications and Networking Conference, 2006. WCNC 
2006. IEEE, pp. 934–939, 2006. 
[17] O. Alay, T. Korakis, Y. Wang and S. Panwar, “Is physical layer 
error correction sufficient for video multicast over IEEE 
802.11g networks?”, in Proceedings of IEEE CCNC, Las Vegas, 
Communication Magazine, vol. 34, no. 3, pp. 82-90, March 
1996. 
[43] N. Zhang and J.M. Holtzman, “Analysis of handoff algorithms 
using both absolute and relative measurements,” IEEE 
Transactions on Vehicular Technology, vol. 45, no. 1, pp. 
174-179, February 1996. 
[44] P. Marichamy, S. Chakrabarti, and S. L. Maskara, “Performance 
evaluation of handoff detection schemes,” IEEE Conference on 
Convergent Technologies for the Asia-Pacific 2003, vol. 2, pp. 
643-646, October 2003. 
[45] K. Pahlavan, P. Krishnamurthy, A. Hatami, M. Ylianttila, J. P. 
Makela, R. Pichna, and J. Vallstron, “Handoff in hybrid mobile 
data networks,” IEEE Pers. Commun., vol. 7, no. 2, pp. 34-47, 
April 2000. 
[46] H. Wang, R. Katz and J. Giese, “Policy-Enabled Handoffs 
Across Heterogeneous Wireless Networks,” Workshop on 
Mobile Computing Systems and Applications (WMCSA), 
pp.51-60, 1999. 
[47] Dong Ma, Maode Ma, “A QoS-Based Vertical Handoff Scheme 
for Interworking of WLAN and WiMAX,” IEEE Global 
Communications Conference (GLOBECOM), pp.1-6, 
December 2009. 
[48] J. Dhar, S.R. Kiran, and K.Y. Reddy, “Network Selection in 
Heterogeneous Wireless Environment: A Ranking Algorithm,” 
Third International Conference on Wireless Communication 
and Sensor Networks (WCSN '07), pp. 41-44, December 2007.  
[49] F. Bari and V. Leung, “Automated Network Selection in A 
Heterogeneous Wireless Network Environment”, IEEE 
Network, vol. 21, pp. 34-40, January 2007.  
[50] T. Ahmed, K. Kyamakya and M. Ludwig, “A Context-Aware 
Vertical Handover Decision Algorithm for Multimode Mobile 
Terminals and Its Performance,” IEEE/ACM Euro American 
Conference on Telematics and Information Systems (EATIS 
2006), pp. 19-28, 2006. 
[51] Q. Song and A. Jamalipour, “Network Selection in an 
Integrated Wireless LAN and UMTS Environment Using 
Mathematical Modeling and Computing Techniques,” IEEE 
Wireless Communications Magazine, vol. 12, pp. 42-49, 2005. 
[52] Q. Song and A. Jamalipour, “An adaptive quality-of-service 
network selection mechanism for heterogeneous mobile 
networks,” Wireless Communications and Mobile Computing, 
vol. 5, pp. 697-708, 2005. 
[53] S. Balasubramaniam and J. Indulska, “Handovers between 
heterogeneous networks in pervasive systems. International 
Conference on Communications Technology,” ICCT 2003, pp. 
1056-1059, April 2003. 
[54] H. Y. Huang, C.Y. Wang, R.H. Hwang, “Context-awareness 
Handoff Planning in Ubiquitous Network,” The 1st 
International Symposium on Cyber-Physical Intelligence 
(CPI-09), vol. 5585, pp. 54-67, July 2009.  
[55] J. McNair and F. Zhu, “Vertical Handoffs in Fourth Generation 
(4G) Multi-network Environments,” IEEE Wireless 
Communications Magazine, vol. 11, no. 3, pp. 8-15, June 2004.  
[56] F. Zhu and J. MacNair, “Optimizations for Vertical Handoff 
Decision Algorithms,” Proc. of IEEE WCNC’04, March 2004. 
[57] C.L. Hwang, K. Yoon, Multiple Attribute Decision Making: 
Methods and Applications. Berlin：Springer, 1981. 
[58] T.L. Saaty, “How to make a decision: The analytic hierarchy 
process,” European Journal of Operational Research, vol. 48, 
pp. 9-26, 1990. 
[59] Y. Guo, K. Suh, J. Kurose and D. Towsley, “P2Cast: 
peer-to-peer patching scheme for VoD service,” in Proc. of the 
12th international conference on World Wide Web, 2003. 
[60] Tai T.Do, Kien A. Hua, Mounir A. Tantaoui, “P2VoD: 
Providing Fault Tolerant Video-on-Demand Streaming in 
Peer-to-Peer Environment,” IEEE International Conference on 
Communications, 2004  
[61] A. Vlavianos, M. Iliofotou and M. Faloutsos, “BiToS: 
Enhancing BitTorrent for Supporting Streaming Applications,” 
INFOCOM, 2006. 
[62] ”BitTorrent project,” http://www.bittorrent.com/ 
[63] X. F. Liao, H. Jin, “OCTOPUS:A hybrid Scheduling Strategy 
for P2P VoD services,” Sixth International Conference on Grid 
and Cooperative Computing, 2007. 
[64] G. J. Lee, C. K. Choi, C. Y. Choi, H. K. Choi, “P2Proxy: 
Peer-to-peer Proxy Caching Scheme for VOD service,” 
Computational Intelligence and Multimedia Applications, 2005. 
[65] Y. He, Y. H. Liu, “Supporting VCR in Peer-to-Peer 
Video-On-Demand,” IEEE ICNP, 2007 
[66] “NUWeb project,” http://www.nuweb.cc/tw/ 
[67] M. Castro, P. Druschel, A. M. Kermarrec, A. Nandi, A. 
Rowstron, and A. Singh, “SplitStream: High-Bandwidth 
Multicast in Cooperative Environments,” Proc. of the 19th 
ACM Symposium on Operating Systems Principles (SOSP’03), 
pp. 298-313, October 2003. 
[68] V. Venkataraman, P. Francis, and J. Calandrino, “Chunkyspread: 
Multi-tree Unstructured Peer-to-Peer Multicast,” Proc. of the 
5th International Workshop on Peer-to-Peer Systems, pp. 2-11, 
[95] C. Huang, J. Li, and K. W. Ross, “Can Internet 
Video-on-Demand be Profitable,” In Proceedings of ACM 
SIGCOMM’07, August 2007. 
[96] Kunwadee Sripanidkulchai, Bruce Maggs and Hui Zhang, “An 
Analysis of Live Streaming Workloads on the Internet,” in 
Internet Measurement Conference, 2004. 
[97] Eveline Veloso, Virg´ılio Almeida, Wagner Meira, Azer 
Bestavros and Shudong Jin, “A Hierarchical Characterization of 
a Live Streaming Media Workload,” in IMW, 2002. 
[98] “Meridian node to node latency matrix (2500x2500),” meridian 
project, 2005. 
http://www.cs.cornell.edu/People/egs/meridian/data.php 
[99] TKN module,  
http://www.tkn.tu-berlin.de/research/802.11e_ns2/ 
[100] T. Ernst, “MobiWan: ns-2 Extensions to Study Mobility in 
Wide-Area IPv6 Networks,”  
http://www.inrialpes.fr/planete/mobiwan/, 2002. 
[101] Albert-László Barabási & Zoltán N. Oltvai, “Network biology: 
understanding the cell's functional organization,” Nature 
Reviews Genetics 5, 101-113 (February 2004). 
 
八、 計畫成果自評 
在第三年中，我們已完成第二年期中報告所
規畫的研究工作，主要針對資源管理與 P2P 視訊
串流兩項議題，提出三項研究成果。研究內容與
原計畫相符、達成預期目標。 
我們將已完成的成果綜合如下: 
A. 完成 WiFi 網路下可適性群播頻寬配置機制
之設計。 
B. 完成 WiMAX 網路下最佳化群播資源配置機
制之設計。 
C. 完成點對點可調適視訊串流之同步機制之設
計。 
本子計畫第三年成果投稿於國際 SCI 期刊與
國際會議。目前已被接受的有一篇 IEEE ICPADS 
2011 國際會議論文。統計這 3 年期計畫總計完成
的論文成果如下所列： 
 第一年 第二年 第三年 
SCI 期刊論文  4  
國際會議論文 3 2 1 
技術報告 4 4 3 
 
 
表 Y04 
第七屆無所不在智慧與計算國際會議 
(UIC 2010) 
October 26-29, 2010, Xi-an, China 
 
黃仁竑 
國立中正大學資訊工程系 
 
一、參加會議經過與心得 
 
Ubiquitous Intelligence and Computing (UIC)是無所不在計算相當重要的國
際會議之一，從 2004 年開起舉辦，今年已是第七屆。今年共有來自 30 個國家
128 篇論文投稿，被接受的論文有 36 篇，接受率約為 28%，由 IEEE technical 
support，論文編輯成 Lecture Notes in Computer Science (LNCS, vol. 6406)。此次
UIC 是與 Autonomic and Trusted Computing(ATC)會議一同舉辦，該會議約有 22
篇論文。而且除 UIC、ATC 兩個主會議外，另有 11 個 workshops 同時舉辦，包
括 EMNS、SSDU、HiCEC、UMCC、ANSR、USST、PerMedia、MobiCPS、USST、
IWDTN、SoTrust 等。此次會議是於 2010 年 10 月 26 日至 29 日假中國大陸西安
的假日酒店舉行。筆者在 UIC 主會議中發表一篇論文。此外，筆者也擔任大會
的 panel discussion 的 co-chair。會議中，筆者也參 10 月 25 日的工作籌備會議及
晚宴。筆者於 10 月 25 日早上起啟飛往西安，10 月 26 日至 29 日全程參加會議，
於 29 日晚上飛回台灣。 
筆者 10月 26日主要的行程是受邀至主辦單位(西北工業大學)的計算機學院
參訪 2 個實驗室，分別是老人智能輔助科技實驗室及無線感測網路實驗室。在
老人智能輔助科技實驗室中，他們佈建了一個仿真的住宅，包括客廰、臥室、
書房及廚房，並在這些房間佈建了各式的感測器，發展老人照護的相關應用，
像是用藥提醒、起床氣象預報及讀報服務、遠距視訊、服務機器人、書櫃找書
等應用。此實驗室於 2008 年開始建置，為中國第一個老人居家照護的仿真實驗
室，目前研究尚在起步，但經費充足，未來的研究可在一較真實的環境中進行，
能發展較實際的應用。無線感測網路實驗室以發展與農業相關的應用為主，包
括利用自製的室外用無線感測器、大規模佈建於農田、感測資訊整合系統等。
此實驗室的發展與我國無線感測器建置計畫發展類似，但規模與研究深度尚不
如我國之發展。 
大會於 10月 27日至 29日共安排了五場 keynote speech、1個 panel discussion 
session、1 個 invited session、1 個 video demo session、8 個 UIC technical sessions
及 4 個 ATC technical sessions。大會安排的 8 個 UIC technical sessions 分別為 S1: 
Activity, Localization, and User Identification; S2: Pervasive Social Computing, S3: 
Ubiquitous Services and Applications, S4: Sensor Networks, S5: Infrastructure, 
Middleware and Context-Awareness, S6: Distributed Systems and Services, S7: 
Wireless and Mobile Ad hoc Networks, S8: Ubiquitous Intelligence and Services。 
 
表 Y04 
invited sessions。第一個 keynote 是由日本 Nagoya 大學的 Kenji Mase 教授介紹他
們所倡導的 ubiquitous experience media (UEM)，主要其實是利用影像視訊技術於
ubiquitous 環境中。他強調 UEM 包括了 Ubi-sensing, annotation, applied experience 
sharing 等三個步驟。他們主要發展了 wearable lifelog, robotic conference, narrative 
in medicine 及 multiview video。這些應用主要的技術仍在於使用適當的設備收集
視訊資料，分析解讀後，對 data 做了合適的 annotation，便可利用在各樣的應用
上了。利如 robotic conference 是讓使用者派遣機器人代替去遠端開會，利用使
用者與 robot 連結，使得在遠端的機器人可以將所看到的視訊傳回，使用者的動
作，如轉頭，也可反應於遠端的 robot 的動作上。第二個 keynote 是大陸國防科
技大學的 Huaimin Wang 教授談 trustworthy software 的發展。主要的想法是以往
發展 trustworthy software或是驗證 software的 trustworthiness是用 formal approach 
(軟體程序證明)或是 engineering approach (軟體工程開發)，長期下來發現仍有相
當大的困難。反觀 open source 的發展卻常有成功的大軟體專案，所以他建議採
open source 的思維來發展 trustworthy software，也就是仿 open source 的開發過
程，提供各式的工具來讓使用者發表、討論、維護所開發的軟體。下午的 invited 
session 共有四篇論文。第一篇是大會主席，法國 Institut TELECOM SudParis 的
Daqing Zhang 所發表的 Extracting Social and Community Intelligence from Digital 
Footprints: An Emerging Research Area，他主要的論點是以往的社群應用都是單
一種 sensor 的資料，且從 Web 發展到 mobile device 再到與 sensor 的結合，他認
為未來的 social community intelligence 將是結合 web space, mobile devices 及
sensors 的應用，這與 nokia 劉震院長的看法相似，也與目前 Cyber-Physical System 
(CPS)的發展不謀而合。第二篇是日本學者發表的 intrusion tolerance 概念的論
文。以往研究者都是談 intrusion detection 或是 protection。但他們覺得應該往另
一個方向想，就是增加系統的可靠度，讓它可以是容忍 intrusion。他們用
semi-markov model 來 model 一個系統的可靠轉換情形，並研究何時該從自動入
侵偵測轉換到手動入侵偵測，來讓系統在不可靠時，由手動入侵偵測提供較嚴
謹的管控。筆者認為數學 model 已太複雜，對實際系統的入侵防護並不實際。
第 3 篇是新加坡的南洋理工大學的 Ah-Hwee Tan 教授談在目前研究的趨勢是結
合 real world 與 cyberspace，所以他們做了一些有真人的 avatar 及虛擬的 avatar
的 3-D 虛擬世界。他的主要研究是虛擬的 avatar 需要有自我學習的能力，所以
如何利用一些 machine learning 的技術來讓 avatar 學習。他所強調的是他的研究
可以很自然地結合 unsupervised learning, supervised learning 及 re-enforcement 
learning 三種技術。最後一篇是由台灣中華大學許慶賢教授所發表的利用質數來
分配傳輸時槽以避免多個 RFID readers同時要去讀一個RFID tag時的碰撞問題。 
第三天筆者聆聽了一個 keynote speech、主持一個 panel discussion、並在下
午 的 一 個 technical session 中 以 ”Context-Awareness Handoff Planning in 
Heterogeneous Wireless Networks”發表一篇論文。這一天的 keynote 是由德國
Mannheim 大學的 Christian Becker 教授以過去開發 ubiquitous 應用與系統的經驗
談開發這樣的系統時的挑戰，他認為我們應該有一個具有 adaptation 及 
self-organization 能力的底層的 OS。筆者也與 Christian Becker 教授共同規劃以” 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/31
國科會補助計畫
計畫名稱: 子計畫一:具情境知覺之點對點視訊串流服務及異質網路之資源與移動管理
計畫主持人: 黃仁竑
計畫編號: 97-2221-E-194-012-MY3 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
擔任 UIC2010 panel chair, UIC2011 vice program chair. 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
