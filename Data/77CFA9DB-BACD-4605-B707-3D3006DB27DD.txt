 2 
中   華   民   國   99 年   5 月    31 日 
行政院國家科學委員會專題研究計畫成果報告 
多核心嵌入式之軟體開發模型 
 
計畫編號：NSC 98-2220-E-007-026 
 
執行期限：98 年 8 月 1 日至 99 年 7 月 31 日 
計畫主持人：李政崑教授    國立清華大學資訊工程學系(所) 
黃冠寰教授   國立台灣師範大學資訊工程學系 
石維寬教授    國立清華大學資訊工程學系(所) 
賴尚宏教授      國立清華大學資訊工程學系(所) 
許富皓助理教授   國立中央大學資訊工程學系(所) 
 
 
一、中文摘要 
 
 
隨著嵌入式裝置的盛行與發展，單一處
理器為住之系統已無法滿足強大的運
算需求，故本研究以異質多核心平台為
實驗平台，架構其軟體開發環境。藉由
子計畫所發展之高階多核心程式語言
所提供之完善多核心程式開發架構，配
合工研院所提出的 PAC II 計畫，整合
個子項目中之效能評估、測詴驗證以及
即時系統排程工具，以發展高效能的多
核心電腦視覺演算法以及多核心平台
的網路技術，期望能以此增進國內多核
心系統軟硬體設計產業的國際競爭力。 
 
因此，本計畫主要針對這些嵌入式多核
心環境軟體開發上的議題與挑戰進行
研究。本計畫提供以多核心處理器平台
的追蹤除錯工具來降低嵌入式多核心
處理器平台的軟體開發困難度及提升
高階語言的執行效能。本計畫亦提出具
機率的指標分析工具，可以有效的提升
指標分析的準確度及速度。 
 
我們亦針對 Android 平台，開發一系列的
工具組及函式庫，使得多核心嵌入式系統
的軟體測詴得以有效廣泛地進行。 
 
多核心系統內的工作的可排程性嚴
重影響到系統內資源的利用度。本計畫將
會針對工作的特性與指定的排程演算法
則來模擬這些工作的可排程性，以偵測工
作群組是否可以順利被排程；而當系統無
法排程時，我們會盡量提供一個可以使工
作滿足可排程性的建議，以協助開發人員
充分利用現有硬體資源，增加系統的總體
使用率。 
 
利用上述的開發、驗證以及排程工具， 
本計畫亦提供多核心共用平台包括開
發工具、測詴工具以及分析工具，為多
核心嵌入式系統提供了高效能的視覺
演算法，並且將入侵偵測與資安防禦帶
入高效能的多核心系統領域。。利用本
計劃可降低了多核心處理器架構設計
及相關軟體人才的需求門檻，產出快速
的發展多核心嵌入式平台以及其應用
軟體，以增進國內系統設計產業的國際
競爭力。 
 
 
 4 
由於多核心架構上之記憶體存取不如一
般單一處理器上之單純，不同處理器之間
的資料傳輸通常隱含著複雜的溝通機
制。本模組利用串流機制，提供一套可在
多核心系統上的各核心間快速的資料傳
輸機制。藉由本多核心串流呼叫函式庫的
研發，程式開發人員將可在嵌入式環境中
利用有限的硬體資源，發展高效能之多核
心應用程式。 
本計畫預計能夠達到以下的目標： 
 降低嵌入式多核心處理器平台的
軟體開發困難度，並提升高階語言的執
行效能。 
 基於可達性測詴法，針對多核心
嵌入式系統的軟體進行測詴 
 提供多核心系統的即時可排程性
分析工具 
 研發多核心嵌入式系統之電腦視
覺演算法 
 建構於多核心系統上之資安防禦
系統 
為了達成以上的目標，本計畫分為五個子
計畫分別進行發展與研究，分別為：其架
構如圖一所示。 
(1) 多核心嵌入式系統程式語言 
(Embedded Programming Language for 
Multi-Core Systems, EPLMCS) 
 
(2) 多 核 心 嵌 入 式 並 行 系 統 與
Android 之 測 詴 平 台 (Multi-core 
Embedded Concurrent System and 
Android Testing Platform, MESCAT ) 
 
(3) 多核心系統的即時可排程性之分
析工具 (Multi-core System Real-time 
Schedulability Analysis Tool, MRST) 
 
(4) 電腦視覺演算法在多核心嵌入式
系 統 之 研 發  (Research and 
Development of Computer Vision 
Algorithm under Embedded Multi-Core 
System, ECV) 
 
(5) 建構於多核心系統上之入侵監控
輔 助 系 統 與 資 安 防 禦 系 統  (A 
Multicore-Based Auxiliary Intrusion 
Detection and Prevention System, AR) 
 
藉由此五個子計畫的整合，我們將能夠提
供良好的多核心程式開發與偵錯環境供
使用者快速發展軟體；並開發一系列工具
組及函式庫，使得多核心嵌入式系統的軟
體測詴得以有效廣泛地進行。亦針對程式
本身與即時系統的效能分析工具以及在
多核心嵌入式系統下最佳化的電腦視覺
演算法以及資安防禦系統。 
 
三、結果與討論 
   
在本年度中各項子計畫主要完成的具體
成果分述如下: 
 
1. 多 核 心 嵌 入 式 系 統 程 式 語 言
(EPLMCS) 
 
在嵌入式多核心處理器平台上，軟體開發
一直是一項很大的挑戰。如何利用有效的
程式語言工具來幫助使用者針對多核心
應用程式進行撰寫、偵錯以及效能最佳化
變成一個很重要的議題。因此本計劃開發
三項系統工具來達成此目的。 
(1) 模型驅動系統串流語言開發工具
(Model-Driven Streaming Language 
Development Tool, MSLDT) 
 
多核心系統軟體開發模型的串流呼叫函
式庫功能為幫助使用者在主程式上，利用
串流遠端呼叫的機制，可以把事先分割好
的程序載入到指定的核心 上，然後執
行，另外還可以設定程序的優先度，優先
度越低有越高優先權。最後，主程式可以
呼叫其他核心以中止程序，並釋放所佔用
資源。因此讓使用者輕易地規畫多核心平
行程式藉此大幅提升執行效能。 
 
圖二 
此外，在開發模型驅動系統串流語言開發
工具的過程中我們發現，軟體開發者在維
護軟體時，執行不同平台間的移植相當困
難。我們亦實作了 Andes 嵌入式處理器和
Android 平台上，基於 GCC 的 Java 預先
 6 
結果。 
 
 
 
利用 PPA 的資訊可以讓編譯器做更積極
的優化如： 
 幫助編譯器或程式設計者在多核心
的嵌入是系統中更容易做資料上的分
配，預期可以帶來更好的效能、耗電比。 
 將資訊使用在Transactional memory
的結構上，可以利用該結構的 recovery 的
機制，做 pointer-induced loop carried 
dependence 的迴圈平行化的優化。 
 
2. 多核心嵌入式並行系統與 Android
之測詴平台(MESCAT) 
本子計畫主旨在於研究多核心的嵌入式
系統的平台，針對並行系統軟體的測詴與
模擬模型進行設計與實作。 
在並行架構中，如果想要達到控制程式執
行、重現前次執行結果的目的，僅需要記
錄 synchronization events 間 partially order
的關係，而一次完整執行中所產生的記錄
即稱作為 SYN-sequence。 
Reachability testing 是一種用來測詴並行
程式非決定性行為的方法，過程如圖可粗
分成兩個階段：monitor phase 與 replay 
phase。 
Execution P with input X
Race analyzer
(To derive race-variants)
Prefix-based replay of R
…………
A SYN-sequence S
Queue to store race variants
Derived race variants
Remove a race variant R from 
queue
Obtain a SYN-sequence
 
圖七：Reachability testing 架構圖 
 
以往在處理迴圈程式的驗證時，多數研究
的解決方法採取直接限制單一程序所能
執行的時間，避免受測程式無止盡地執
行 ；  dynamic termination decision 
(DTDCP)的概念，使得當程式執行出現無
窮迴圈時，DTDCP 的 protocol 能及時根
據 runtime 的動態狀態對程式進行中止並
作出適當的錯誤回報。 
我們亦提出亦提出以 dynamic effective 
testing (DET)取替傳統 reachability testing
的方式，在測詴過程中紀錄已重複出現狀
態，引導後續的測詴不再回到相同狀態，
使得整個測詴過程能兼具 state-covered、
transition-covered、以及效能等特性 [33]。 
本研究計畫針對 Android，研究 Android
細部架構與系統呼叫，對嵌入式系統的並
行行為，實作一完整的測詴平台。預計未
來將根據 Android 平台的系統呼叫，實作
DTD 所需的 protocol。 
目前為止已經產出了測詴工具的核心程
式碼可供下載：
http://www.csie.ntnu.edu.tw/~ghhwang/DE
T/DET_RV_gen.zip。針對一些實際 Java
並行程式的測詴成果，茲列於表一，亦可
以於
http://iclab.csie.ntnu.edu.tw/DET_Experim
ent/main.html 查詢。根據我們對世界上存
在並行程式之動態測詴工具的考察，是目
前 state-of-the-art，不使用 model checker
來幫忙，可以對 shared semaphore、及 Java 
monitor 為主的並行程式進行動態測詴最
SSA form CFG
PRG
Source   
Program
Source   
Program
Static assign execution frequency
Edge profiling  execution frequency
Demand-Driven
PPA in SSA
WHIRL
Open64
Backtrace
Algorithm
Reduced PRG
PPA results
Reducegraph
Algorithm
Normalized as 5 kinds of pointer usages
Encounter 5 situations
A directed weighted cyclic graph
Analysis target and locations only
WOPT phase
Make the PRG more compact
Intermediate 
representation
Explicit use-def chains
 
圖六 
 8 
演算法，並實現於異質多核心嵌入式平台
上 。
 
 
圖九 平行化人臉偵測系統架構圖 
工研院所發展的 PACDuo 嵌入式平
台[30][31]是一個以 ARM926 處理器搭配
二個 PACDSP 處理器(如圖九)。在此多核
心平台上，主要就是提供一個在多核心平
台下支援串流遠端程序呼叫函式庫
(Streaming RPC) 機制的程式設計模式
(programming model)。在本計畫中，我們
便是基於 PACDuo 異質多核心嵌入式平
台的特性與工具，發展平行化的人臉偵測
演算法，並達到不錯的精確度與效率。 
整個平行化人臉偵測系統可分為四
個模組，分別為： 
(1) 人臉模型建立模組 (Face Model 
Module, FMM) 
(2) 視 訊 擷 取 模 組 (Video Capture 
Module, VCM) 
(3) 人 臉 位 置 快 速 篩 選 模 組 (Face 
pre-Filter Module, FFM) 
 
(4) 人 臉 相 似 度 計 算 模 組 (Face 
Similarity Module, FSM) 
 
我們利用 lock機制來控制ARM處理器與
DSPs 處理器之間的互動，並利用一塊
shared memory 的空間來作為兩個處理器
溝通與傳遞訊息的暫存空間。其示意圖如
圖十所示。 
 
圖十 ARM 與 DSPs 處理器之間的
lock 機制。 
我們的演算法中，使用一個 DSP 處理器
與使用二個DSP處理器在處理效能上也
接近有一倍的改進，效能比較如表六所
示。 
 
表二在人臉偵測演算法中，使用二個 DSP
處理器比一個 DSP 處理器提升接近一倍
的效能。 
5. 建構於多核心系統上之入侵監控
輔助系統與資安防禦系統(AR) 
 
過去到現在最常使用於偵測間諜軟體的
方式就是以程式行為判斷。 SPYDroid 使
用網路當作間諜軟體嘗詴向外傳送資料
的判斷方式，手機特有的簡訊、通話紀
錄、通話錄音、GPS 座標，符合越多行為
特徵的就越可能是間諜軟體，而且
Android 本身的 sandbox 機制可以減少其
他惡意軟體的影響，因此我們特意專注於
間諜軟體行為的研究，更可有效減少誤
判。 
SPYDroid 的目標就是要以軟體的行為來
判斷應用程式是否具有間諜行為，藉由修
改 Android 原始碼，干涉所有可能的間諜
舉動，藉由這些干涉取得的資訊來對應用
軟體作評分，並告知使用者是否被安裝了
可能的間諜軟體。 
我 們 修 改 Android 的 Application 
 10 
Embedded Dual-core Processors,” ICPP 
2008, Portand 
[8]  Chung-Wen Huang, Kun-Yuan 
Hsieh, Jia-Jhe Li, Jenq-Kuen Lee, “Support 
of Paged Register Files for Improving 
Context Switching on Embedded 
Processors,” EUC 2009, Vancouver, Aug. 
29-31, 2009. 
[9]  Configurable SID-based Multi-core 
Simulators for Embedded System 
Education, Chung-Wen Huang, Wei-Kuan 
Shih, Yarsun Hsu, Jenq-Kuen Lee, WESE 
2009 (ESWeek 2009), Grenoble, France, 
2009.  
[10]  Software Cache Support and API 
Design for Embedded DSP Processor, 
Cheng-Yen Lin, Shao-Chung Wang, 
Ming-Yu Hung, Kun-Yuan Hsieh, 
Jenq-Kuen Lee, International SoC Design 
Conference, Nov. 22-24, 2009. (Invited 
Paper)  
[11]  Cheng-Yen Lin, Po-Yu Chen, 
Chun-Kai Tseng, Chung-Wen Huang, 
Chia-Chieh Weng, Chi-Bang Kuan, 
Shih-Han Lin, Shi-Yu Huang and 
Jenq-Kuen Lee, ” Power Aware SID-based 
Simulator for Embedded Multicore DSP 
Subsystems”, CODES+ISSS, 2010. 
[12]  PROGRAMMING MODEL AND 
SYSTEM SOFTWARE FOR EMBEDDED 
MULTICORE PROCESSORS, Brian K. 
Hsieh, 2010 
[13]  Brian K. Hsieh, Chi-Hua Lai, 
Shang-Hong Lai, Jenq Kuen Lee. 2009. 
Parallelization of Belief Propagation on 
Cell Processors for Stereo Vision. accepted, 
ACM Transaction on Embedded 
Computing Systems. 
[14]  Current Results on EDZL 
Scheduling for Multiprocessor Real-Time 
Systems, Wei Hsin-Wen; Chao, Yi-Hsiung; 
Lin, Shun-Shii; Lin, Kwei-Jay; Shih, 
Wei-Kuan, 13th IEEE International 
Conference on Embedded and Real-Time 
Computing Systems and Application 
(RTCSA), 21-24 Aug. 2007 Page(s): 
120-130 (EI) 
[15]  Shou-Wei Chang, Brian K. Hsieh, 
Jenq Kuen Lee. 2009. pTest: An 
Adaptive Testing Tool for Concurrent 
Software on Embedded Multicore 
Processor. In Proceedings of Design, 
Automation, and Test in Europe(DATE 
09) Nice, France, 20-24, Apr. 2009 
[16]  .Spontaneous Detection of Infinite 
Loops and Livelocks in Dynamic 
Testing of Concurrent Programs, by 
Che-Sheng Lin and Gwan-Hwan Hwang. 
IEEE 2009 International Symposium on 
Theoretical Aspects of Software 
Engineering (IEEE TASE'09) , July 29 - 
31, 2009, Tianjin, China.   
[17]  “Che-Sheng Lin and Gwan-Hwan 
Hwang, “Dynamic Effective Testing: 
An Approach to Testing Concurrent 
Programs,” Technical Report, National 
Taiwan Normal University, 2010. 
http://www.csie.ntnu.edu.tw/~ghhwang/
DET2010.pdf. (This paper had been 
submitted to journal for publication) 
[18]  Chu-Jung Tseng,  “Enabling 
Ahead-of-Time Java Compilation on 
Embedded Systems,” Jun. , 2010. 
[19]  Shao-Chung Wang, “Evaluation and 
Design of Programming Models for 
Heterogeneous Multi-Core Systems,” Apr. , 
2010. 
[20]  Behavioral detection of malware on 
mobile handsets. Bose, Abhijit, et al. s.l. : 
ACM, 2008. MobiSys. pp. 225-238. 
[21]  Defending mobile phones from 
proximity malware. Zyba, Gjergji, et al. 
2009. INFOCOM. 
[22]  ate monotonic schedulability tests 
using period-dependent conditions, 
Wan-Chen Lu, Kwei-Jay Lin, Hsin-Wen 
Wei, and Wei-Kuan Shih, accepted by 
Real-Time System, Springer, online since 
September 05, 2007 (SCIE, EI) 
