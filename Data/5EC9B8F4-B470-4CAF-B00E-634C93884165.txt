行政院國家科學委員會專題研究計畫成果報告 
線上/離線混合式檢查點技術   
Online/Offline Hybrid Checkpointing   
 計畫編號：NSC 96-2221-E-006-063        
執行期限：96 年 08 月 01 日至 97 年 10 月 31 日 
主持人：徐立群    國立成功大學會計學系 
          
shulc@mail.ncku.edu.tw 
 
一、中文摘要 
 
為了容錯的目的，系統可以採用檢查
點式復原協定。在正常執行時，檢查點式
復原協定除了需要設立檢查點以外，一般
尚須付出額外程序間協調工作的代價，才
能保證在故障發生時系統可回復至一致性
的狀態。最近，有研究嘗試藉由靜態分析
分散式原始程式，並根據分析結果在原始
碼中適當位置加入檢查點指令，目標在完
全消除程序間的協調工作成本。這個方向
立意雖佳，然而其實際應用範圍有所限
制，實證案例研究尚待探討。 
本計畫提出一個混合式檢查點技術，
目的在結合靜態程式分析與線上檢查點兩
者的優點。我們儘量利用靜態分析以決定
加入程式碼中之檢查點指令是否安全 (能
確保故障時一致性的狀態可被復原)，針對
無法應用靜態分析確定安全的情況再搭配
使用線上檢查點協定。為了使混合式檢查
點技術真正有效，諸多具挑戰性的問題需
要被解決。首先，我們必須找出靜態分析
對哪些程序互動型態是有用的。接下來，
我們將根據這個結果找出如何將程式碼切
割成多個區域，使得不需要線上檢查點協
定來確保安全性之區域數目最多。對於需
要線上檢查點協定之區域，我們需要探討
靜態程式分析應該如何與現有之檢查點式
復原協定結合才能讓線上協調成本最小。
最後，我們藉由廣泛的實驗，明確得知靜
態分析對降低程序間線上協調成本有多大
的影響。 
 
關鍵詞：可靠度，容錯，檢查點式返回復原
法、靜態程式分析、控制流圖。 
 
Abstract 
 
Checkpoint-based rollback-recovery 
protocols typically incur failure-free 
coordination overhead, besides taking 
checkpoints, in order to ensure that 
consistent global states can be recovered 
when failures occur. Recently, there has been 
an attempt to eliminate such overhead by 
analyzing distributed programs and statically 
inserting checkpoint statements at the proper 
places in the source code. While this 
approach seems attractive, its scope of 
applicability could be limited and results 
from empirical case study remain to be seen. 
We propose a hybrid checkpointing approach 
which aims to leverage the advantages of 
both static code analysis and online 
checkpointing. Our hybrid approach applies 
static analysis as much as possible to a given 
 2
動態checkpointing 的方法去確保
checkpointing 之正確性。 
 
三、結果與討論 
 
為使hybrid checkpointing 變為實際可用，
我們解決了以下幾個重要的問題： 
1. 我們清楚歸納出由靜態分析決定加入程
式中的checkpointing statements ，在那
些情況下是無需online coordination 
的，亦即所產生的cut of checkpoints 會
形成 recovery line.  
2. 我們探討了靜態分析如何與主要的
online checkpointing protocols 相結合， 
如coordinated checkpointing、
communication-induced checkpointing 
等？ 
3. 我們藉由實際系統實作來瞭解static 
analysis 究竟可減少多少的runtime 
overhead. 我們探討了上述第一點歸納
出的情況對常見的concurrent 
programming 問題或應用之適用性。換
句話說，我們探討了常見的concurrent 
programming 應用(如Jacobi iteration, 
matrix multiplication, FFT 等)之code 
structure 是否與歸納出的情況符合。 
4. 我們針對目前實際線上使用的
distributed applications，瞭解static code 
analysis 在checkpointing 上之適用性。 
 
四、計畫成果自評 
 
我們已經歸納出加入程式中的
checkpointing statements ，在那些情況下藉
由static code analysis即可決定recovery 
line，亦即無需online coordination 。同時
亦針對Greg Andrews 所提出之 paradigms 
for process interaction [4] ， 探討常見的 
process-interaction patterns，如
producer/consumer，client/server，interacting 
peers 等。考量這些patterns 在加入
checkpointing statements以後，extended 
control flow graph在何種條件下就無需再 
用到online checkpointing protocol，亦即
static analysis就可以決定 recovery line。 
Checkpointing 與rollback recovery 對
distributed applications，特別是long-running 
applications，提供之容錯能力可說相當cost 
effective；因為它不像其他的容錯方法，如
replication，需要較高的cost。目前有許多
的checkpoint-based protocols，其設計目標
通常包括(1)降低online overhead 
(2)rollback 時能從最近的consistent cut of 
checkpoints 
恢復執行。這些protocols 在嘗試降低online 
overhead 時，通常不是毫無代價的，例如
可能會影響recovery 時的效率或需要其他
的系統支援。Static code analysis 是一個企
圖完全免除checkpoint coordination 
overhead 之方法，且沒有其他的代價，然
而我們已經指明這個方法並非適用所有的
process interaction patterns。Static code 
analysis 與checkpoint-based protocols 相結
合的hybrid checkpointing 應是一個較 
廣泛可行的方向。 
另外，近年來Grid Computing 正蓬勃
發展，許多分散各處的電腦藉由網路(通常
是Internet)相連成Grids，用來解決許多大尺
度計算問題。因為Internet 上之
communication cost 比區域網路大的多，減
低甚至完全免除因checkpointing 所需之
coordination overhead 對Grid Computing 
而言更為重要，我們也預期 hybrid 
checkpointing 的研究成果未來能使Grid 
Computing 在容忍transient failure 上有多
一項可行的方 案。目前亟待解決的問題是
如何partition 一個distributed program，目
標是無需online coordination 的partitions 
之數目愈多愈好，或是無需online 
coordination 的partition 之size 愈大愈好。 
 
五、參考文獻 
[1] E.N. Elnozahy, L. Alvisi, Y.-M. Wang 
and D.B. Johnson. “A Survey of 
Rollback-Recovery Protocols in 
Message-Passing System,＂ACM 
Computing Surveys, 34(3): 375-408, Sept. 
2002. 
[2] A. Agbaria, A. Freund, and R. Friedman. 
“Evaluating Distributed Checkpointing 
Protocols,” in  Proceedings of the 23rd 
International Conference on Distributed 
Computing Systems, 2003. 
 4
赴大陸地區研究心得報告 
                                                             
計畫編號 NSC 96－2221－E－006－063 
計畫名稱 線上/離線混合式檢查點技術 
出國人員姓名 
服務機關及職稱 
徐立群/國立成功大學會計學系/教授 
出國時間地點 2008/7/18 ~ 2008/8/3 
大陸地區 
研究機構 
武漢華中科技大學計算機科學與技術學院 
 
工作記要： 
摘要 
本次出國主要是與武漢華中科技大學計算機科學與技術學院李國輝教授的研究團隊共同
推動兩項跨校合作計畫 --- 「非搶占式即時系統中節省能耗之動態電壓調節演算法」與「針
對線上資料流在滑動視窗內探勘頻繁模型之研究」。之前，本人與李教授研究團隊已藉由網路
會議推動此兩項計畫近一年，此次經過兩個多禮拜的面對面討論，我們將兩項計畫許多的問
題加以釐清，其中第一項計畫已獲致重要的理論與實驗結果，我們擬儘快將剩餘問題解決然
後撰寫論文將成果發表。第二項計畫已獲致初步但重要的理論成果，我們擬繼續推動此計畫。
 
一、目的 
 
本人自 2003 年即與武漢華中科技大學計算機科學與技術學院李國徽教授開始合作研究，
當時主要方向為「新一代電腦容錯技術」。我們合作的成果撰寫為以下論文: 
 
   "A Low-Latency Checkpointing Scheme for Mobile Computing Systems" 
 
並發表於 29th IEEE Annual International Computer Software and Applications Conference 
(COMPSAC 2005), Edinburgh, Scotland (此會議為 IEEE signature conference on Software 
Technology and Applications, 請見 http://conferences.computer.org/compsac/2008/). 該次會議共
有 278 篇論文投稿，接受 72 篇至會議發表，接受率為 25.90%. 我們的論文獲選為六篇最佳論
文之一，並受邀將完整版投稿至 Computer Journal. 這六篇論文再經過兩輪之評審，最後接受
其中四篇為期刊論文，我與李教授之論文為其中之一： 
 
Guohui Li and LihChyun Shu. "Design and Evaluation of a Low-Latency Checkpointing 
Scheme for Mobile Computing Systems," The Computer Journal, 49(5):527-540, 
September 2006 (corresponding author; SCI; appeared as part of a special issue on high 
assurance software systems). 
任務之負載過於保守之估算 (2) 驗證我們所提出更精確之估算方法之正確性，並證明了數個
重要的定理。另外，過去在即時系統節能排程演算法上，當遇到任務被阻滯時，就會立即提
高處理器的速度，以便讓被阻滯的任務在截止時間以前執行完畢。雖然這樣作可以確保任務
之時效要求，但可能不是最佳的節能策略。在此次訪問過程中，我們針對此問題討論出一個
實例，該實例顯示立即提速並非最佳的節能策略。我們對此結果感覺很興奮，立即著手探討
「條件式」提速的方法，目前已經有初步的成果，接下來有幾個定理需要證明，同時亦需要
作許多模擬實驗，俾了解「條件式」提速在那些情況下會有利。 
對於另一項計畫「針對線上資料流在滑動視窗內探勘頻繁模型之研究」，我們證明了兩個
重要定理：(1) 衰減因子在何種條件下，coverage 可以達到 100％(2) 衰減因子在何種條件下，
precision 可以達到 100％。接下來我們需要設計適合衰減模式的樹狀資料結構，以便作最佳
的資料流探勘。 
 
三、心得 
本次個人赴武漢推動跨校合作計畫，雖然只有兩週多一點的時間，然而進度卻相當令人
滿意，可見在跨校合作研究上，藉由網路的討論不能完全取代面對面的討論。這一點華中科
技大學計算機科學與技術學院李國徽教授也相當認同，他甚至希望我與他每年皆能互訪一個
月，相信對研究計畫的推動會有很大的助益。 
 
四、建議 
 
個人三年前曾經訪問過華中科技大學計算機科學與技術學院，當時他們學院對師生研究
成果之發表，只要求是 SCI 期刊即可。然而此次聽李教授說到該院選出計算機科學領域 40
個頂級會議，鼓勵老師全力將研究成果推上這 40 個頂級會議，如獲錄用該院就全額補助師生
參加會議，同時在申請國家自然科學基金會研究項目時也有決定性的影響(大陸 NSF 研究計
畫通過率大約僅 15％，與美國相當)。這樣的研究要求已經與歐美相近，僅管該院目前投上
所謂 top 40 會議的論文尚屬少數，但是未來的後勢可期，臺灣學術界必須加緊努力以確保優
勢。 
 
 
 
    
經過過去五年多的合作，個人與李教授已經建立良好的研究默契。過去一年多我們著手推
動下列兩項研究計畫，藉由此次親赴武漢華中科技大學，個人得以與李教授及其博士班學生
加速推動此兩項研究究計畫: 
 
 
1. 非搶占式即時系統中節省能耗之動態電壓調節演算法(An energy-efficient dynamic 
voltage scaling algorithm for non-preemptive real-time systems) 
 
動態電壓調節(Dynamic Voltage Scaling,簡稱DVS)已被證明是一種有效的降低能
耗技術，在即時領域得到了廣泛研究。以往針對即時動態電壓調節技術(簡稱RT-DVS)
的研究大都以可搶佔式排程(preemptive scheduling)為前提，然而受到資源特性的限
制，在某些情況下，可搶佔式排程代價太大甚至於不可行，此時就需要考慮非搶佔排
程情況下的節能策略。現有針對非搶佔式即時系統中節省能耗排程演算法的研究，是
基於考慮存在任務阻塞下的可搶佔任務集的充分可排程分析，這些方法沒有抓住非搶
佔式排程的特性，在計算任務減速因子時會過於保守，以致不能有效節省能耗。本研
究將充分考慮非搶佔式排程的特性，在任務的各個排程點上分析來自高優先順序任務
的具體搶佔次數，擬提出改進的減速因子計算方法，以求得更低的減速因子，俾節省
能耗。藉由求得的減速因子，我們將設計動態電壓調節演算法，它必須保證任務集在
使用減速因子後的可排程性，同時擬由廣泛之模擬實驗跟現有演算法在節省能耗上做
比較。 
 
2. 針對線上資料流在滑動視窗內探勘頻繁模型之研究(Mining frequent patterns in arbitrary 
sliding windows over online data stream。) 
 
   資料以如水流般不斷且高速之型式湧至，正出現在許多環境下，這些資料可能來自
感測網路數據的收集、即時財務資料之提供、即時交通網路數據之傳送、線上電話撥
打數據之分析等。當吾人欲探勘此類資料流內的頻繁模型(frequent patterns)時，在許多
情形下，新的資料對於決定一個模型是否為頻繁時，較舊的資料更有影響力。本研究
提出一時間衰減模式(time decay model)，藉由衰減因子與衰減公式，我們可以分別新
舊資料在任選滑動視窗內之影響，同時計算不同衰減因子對探勘績效之影響。我們將
探討如何設計樹狀結構來記錄模型之出現頻率，目標是隨時反映最新模型，並以低代
價移除已離開滑動視窗的模型，俾使整體探勘效果最佳化。 
 
二、過程 
 
此次經由金廈小三通赴武漢，過程相當順利。七月十八日抵達武漢當晚，由李教授設宴，
邀請本人與華中科技大學計算機科學與技術學院領導李軍、副院長劉教授、博士後楊兵博士，
及該校國際交流處港澳台事務辦公室胡瑞敏老師，作了相當好的交流，並藉機介紹成功大學
給他們。本校過去在李強教授擔任校長時，於 2004 年即與華中科技大學結為姐妹校，此次交
流他們亟盼未來與本校能建立更實質的合作關係。 
自七月十九日開始，個人即在李教授實驗室與李教授及其兩位博士班學生李劍軍與陳輝
開始密集討論。首先解決「非搶占式即時系統中節省能耗之動態電壓調節演算法」研究計畫
中的兩項主要的問題： (1) 找出清楚實例，俾解釋過去研究對非搶占式排程中針對高優先權
