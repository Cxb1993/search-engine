 1
一、中英文摘要 
中文摘要：可否認的驗證協定必須滿足指定收方與可否認兩項特性。近來具有送方保護的
可否認的驗證協定被提出以保護送方權益，換句話說，送方可以證明自己的確是真實的送
方，以防止收方的陷害。即使有送方保護，誠實的收方還是會受到送方事後否認的陷害風
險；也具是送方曾送過可否認的訊息，事後卻否認，然而收方沒有證據可以證明該份訊息
確實為送方所送，釐清自己是被陷害的。為了公平保護收送雙方，一個新的對收送雙方具
有匿名與公平保護的可否認的驗證協定被提出來。 
 
英文摘要：Intended receiver and deniability properties are two basic properties satisfied by 
deniable authentication protocols.  Recently, a deniable authentication protocol with sender 
protection is proposed to protect the right of the real sender.  In other words, the sender can 
prove that he/she really sent the message to guard against circumvention by some receivers.  
However, the honest receiver still suffers the circumventing risk due to the senders’ deniability.  
If the sender sent a deniable authenticated message to the innocent receiver and claimed that the 
message was generated by receivers.  Then the receiver has nothing to convince the others that 
he/she is innocent.  To provide fair protection and anonymity both for senders and receivers, a 
new deniable authentication protocol with anonymous fair protection is proposed. 
關鍵字: Deniable authentication protocols, digital signatures, promise of digital signatures, 
anonymity, privacy. 
 
二、前言與研究目的 
In some scenario, the sender prefers to designate someone to validate the source of the data.  
Moreover, the designated one cannot prove to the others who the source of the data is.  For 
example, the government plans to build a community, and calls for bid.  Suppose that two 
bidders, C and D, are interesting to build the community.  The bid information given by C 
should be verified only by the government, and the government cannot prove to any other bidders 
that C provides the bid information.  If not only the government but also the bidder D 
authenticates the bid information, bidder D may adjust its bid price after the bidder C delivered 
his/her bid information first.  This bid is not fair for C. 
Since digital signature schemes provide not only data integrity but also source authentication, 
anyone can figure out the data source.  The digital signature scheme is not appropriate for the 
bid scenario mentioned above.  Symmetric cryptosystems may be a choice after sharing the 
secret session key between the sender and receiver.  But not all the bidders share session keys 
with the government, the negotiation of secret session keys between bidders and the government 
is required.  Due to the additional cost to negotiate session keys is huge, the symmetric 
cryptosystem is not an appropriate solution.  To satisfy the properties mentioned above, the 
deniable authentication protocol is proposed. 
Deniable authentication protocols involve two basic participants and satisfy two basic 
properties.  The two basic participants are the sender and the intended receiver while the two 
basic properties are the intended receiver and deniability properties.  Intended receiver property 
means only the receiver intended by the sender can verify the message source.  Deniability 
 3
and not fabricated due to the deniability.  If some bidder rejects to help this proof, the 
government suffers another falsely incriminated attack by some dishonest bidders.  So the 
government also needs evidences to clarify himself/herself. 
Therefore, the first deniable authentication protocol with anonymous fair protection is 
proposed to protect the rights both of the sender and the receiver in this project.  Moreover, the 
identities anonymity of the sender and the receiver is also provided. 
 
三、文獻探討 
Schnorr Signature Scheme and Its Promise 
Three stages are involved in Schnorr signature scheme [19]: System setup, signature 
generation, and signature verification.  Public functions and values are generated in the system 
setup stage.  H(.) is a public one-way hash function which maps values from {0, 1}* to Zq*.  
Primes p and q are public such that q|(p-1), and g is an element in Zp* with order q.  There exists 
public/private key pairs (yi, xi) for every user i, where xi is randomly chosen from Zq* and yi= gxi 
mod p. 
In signature generation stage, Signer A, who is going to sign on the message m, performs 
these steps below. 
Step 1: Pick up a random integer k in Zq*. 
Step 2: Compute the digest c= H(gk mod p||m). 
Step 3: Find s satisfying s≡ k+cxA (mod q). 
Finally, the signature signed on message m is the pair (c, s). 
In the signature verification stage, suppose that someone wants to verify whether or not (c, s) 
is the signature of the message m.  The verifier has to obtain signer A’s public key yA first, and 
he/she would be convinced that the message m was really signed by the signer A when c= 
H(gsyA-c mod p||m). 
The promise of Schnorr signature scheme is only described the differences between the 
promise of Schnorr signature scheme and the Schnorr signature scheme.  In the signature 
generation stage, signer A computes S= gs mod p after deciding the value of s, and the promise of 
Schnorr signature on the message m is (c, S).  To validates the promise (c, S), the verification 
equation c= H(SyA-c mod p||m) is used. 
The promise of Schnorr signature scheme [16] provides deniability since the promise of the 
message m could be generated by not only the real signer A, but also the other users.  In other 
words, any user i can pretend as A to generate the promise.  The procedure that a user i forges 
the promise on the message m' is stated below. 
Step 1: Pick up an integer k' in Zq*. 
Step 2: Compute the digest c'= H(gk' mod p||m') and S'= gk'yAc' mod p. 
Then (c', S') is the promise of Schnorr signature on the message m' because the c'= H(S'yA-c' mod 
p||m') holds. 
 Undeniable Signature Scheme 
In the undeniable signature scheme [4], undeniable signatures are verified by verifiers only 
with the help of the real signer.  Four phases are contained in the scheme: Setup phase, signing 
 5
occurs, in clarification phase, the receiver protects himself/herself by finger out the real sender 
with the help of the trusted third party.  On the other hand, the sender is able to prove that he/she 
is the real sender by providing evidence.  In the following, the new deniable authentication 
protocol with anonymous fair protection is described phase by phase. 
Setting Phase 
Public parameters p and q are two large primes with p= 2q+1 while g is a public element in 
Zp* with order q.  Each user i owns a public/private key pair (yi, xi), where the private key xi is 
randomly chosen from Zq* and yi= gxi mod p is computed as the public key.  The public function 
H(.) is a hash function whose image is Zq*. 
Promising Phase 
Suppose Sender A wants to send an intended receiver B one message m and the 
corresponding promise in deniable and authenticated way.  Sender A generates and sends the 
promise by the following steps. 
Step 1: Select two random integers k and x in Zq*. 
Step 2: Calculate c= H(gk mod p||m) and y= gx mod p. 
Step 3: Calculate s= k+cxA mod q. 
Step 4: Calculate ŝ= (gsyBx mod p)⊕yAB, where yAB= yBxA mod p. 
Step 5: Calculate ĵ= ms mod p. 
Then Sender A transmits (ŝ, c, y, ĵ) to the receiver B as the promise on the message m. 
Confirmation Phase 
To check whether or not Sender A really sends the promise of the message m, B has to make 
sure that ŝ and ĵ involved in the promise have the same exponent s.  Since s= k+cxA mod q, the 
value of s is computed only by the person who knows the random value k and the private key xA.  
In other words, if Receiver B confirms that the exponent s really both involved in ŝ and ĵ, then 
he/she makes sure that (ŝ, c, y, ĵ), the promise of the message m, is really from the sender A.  
The exponent confirmation is stated below. 
Step 0: B computes š= (ŝ⊕yAB)y-xB mod p and validates (š, c) by c= H(šyA-c mod p||m). 
Step 1: B selects two random integers a and b from Zq*. 
Step 2: B computes and sends the challenge e= ĵašb mod p to the sender A. 
Step 3: A computes and returns d1= es
-1
 mod p to B. 
Step 4: B checks whether or not ŝ and ĵ have the same exponent s by checking d1≡ d2 (mod p) 
after computing d2= magb mod p.  If d1≡ d2 (mod p), then B confirms that both ŝ and ĵ 
have the same exponent s. 
When d1≡ d2 (mod p), the receiver B holds the evidence that the user A is the real sender of 
the promise on the message m.  Otherwise, B refuses to accept the promise of the message m. 
Clarification Phase 
If A sends a promise on message m to the receiver B, but declares that the sent promise on 
message m is generated by B, then B can protect himself/herself by the help of the trusted third 
party T.  The receiver B computes š= (ŝ⊕yAB)y-xB mod p and sends (š, c, ĵ) to T.  Then T and A 
performs the following steps to confirm whether or not the promise is sent from A. 
Step 0: T validates the promise (š, c) by using c= H(šyA-c mod p||m). 
 7
result in [1].  The cost of exclusive-or operation is omitted since the cost is much slighter than 
the cost of modular exponential operation. 
The performance analysis of our protocol is given below.  In our protocol, the sender takes 
3 modular exponential operations, 1 consecutive modular exponential operation, and 1 hash 
operation to generate message promises.  The sender also takes 1 modular exponential operation 
to provide the receiver protection.  Therefore, the sender totally spends a hash operation and 
5.16 modular exponential operations, where 1 consecutive modular exponential operation is 
about 1.16 modular exponential operations.  Similarly, the receiver’s total cost is about 1 hash 
operation and 4.32 modular exponential operations.  To check the validity of the sender’s 
promise, 1 hash operation and 2 modular exponential operations are needed.  In order to protect 
the receiver, another 2 consecutive modular exponential operations are paid.  Then the total 
computation cost of our protocol is 2TH+9.48TE, since a sender takes TH+5.16TE and a receiver 
takes TH+4.32TE. 
The computation comparison among Hwang and Ma’s DAP-ASP, Hwang and Chao’s 
DAP-ASP, and our protocol is given here.  The total computation costs of Hwang and Ma’s 
DAP-ASP, Hwang and Chao’s DAP-ASP, and our protocol are 5TH+5.41TE, 2TH+4.32TE, and 
2TH+9.48TE, respectively.  Among these three protocols, the sender’s computation cost in our 
protocol is more than the ones in other two protocols.  The receiver’s computation cost in our 
protocol is also more than the ones in the other two protocols. 
Consider the comparison of communication costs among these three protocols. The 
communication cost of our protocol is 5|p|+|q| while the communication costs of Hwang and 
Ma’s DAP-ASP and Hwang and Chao’s DAP-ASP are |p|+3|q| and 2|p|+|q|, respectively.  Our 
protocol takes more communication cost than the costs of the other two protocols. 
However, our protocol provides the evidence for receivers while the other two do not.  
Therefore, the additional computation cost and communication cost is paid for the receiver’s 
evidence.  Therefore, the additional cost is necessary to provide fair protection while the other 
two protocols provide only sender protection.  The performance comparison among these three 
protocols is stated in Table 2. 
Table 2: Performance Comparison among Hwang and Ma’s Protocol, Hwang and Chao’s Protocol, 
and Our Protocol. 
 
Hwang and Ma’s
DAP-ASP 
Hwang and Chao’s
DAP-ASP 
Our Protocol 
Computation 
Cost 
Sender 3TH + 3.16TE TH + 3.16TE TH + 5.16TE 
Receiver 2TH + 2.25TE TH + 1.16TE TH + 4.32TE 
Total 5TH + 5.41TE 2TH + 4.32TE 2TH + 9.48TE 
Communication 
Cost 
Sender |p| + 3|q| 2|p| + |q| 4|p| + |q| 
Receiver None None |p| 
Total |p| + 3|q| 2|p| + |q| 5|p| + |q| 
Here is the computation cost of our clarification phase.  Since the situation of sender A sets 
receiver B up doesn’t mention in both of Hwang and Ma’s DAP-ASP and Hwang and Chao’s 
 9
based on ElGamal Crpytography,” Computer Standards & Interfaces, Vol. 27, pp. 401-405, 
2005. 
[15] R. Lu and Z. Cao, “Non-Interactive Deniable Authentication Protocol based on Factoring,” 
Computer Standards and Interfaces, Vol. 27, Issue 4, pp. 401-405, 2005. 
[16] K. Nguyen, “Asymmetric Concurrent Signatures,” Proceedings of Information and 
Communications Security Conference (ICICS 2005), LNCS 3783, New York: Springer 
Verlag, 2005, pp. 181-193. 
[17] D. Pointcheval and J. Stern, “Security Arguments for Digital Signatures and Blind 
Signatures,” Journal of Cryptology, Vol. 13, No. 3, New York: Springer Verlag, pp. 361-396, 
2000. 
[18] M. O. Rabin, “Digitalized Signatures and Public-Key Functions as Intractable as 
Factorization,” TR-212, MIT Laboratory for Computer Science, 1979. 
[19] C. P. Schnorr, “Efficient Identification and Signatures for Smart Cards,” Advances in 
Cryptology: Proceedings of CRYPTO’ 89, LNCS 435, G. Brassard, Ed., New York: Springer 
Verlag, 1990, pp. 239-252. 
[20] J. Shao, Z. Cao, and R. Lu, “An Improved Deniable Authentication Protocol,” Networks, Vol. 
48, pp. 179-181, 2006. 
[21] Z. Shao, “Efficient deniable authentication protocol based on generalized ElGamal signature 
scheme,” Computer Standards and Interfaces, Vol. 26, 2004, pp. 449-454. 
[22] Y. Wang, J. Li, and L. Tie, “A Simple Protocol for Deniable Authentication Protocol base on 
ElGamal Cryptography,” Networks, Vol. 45, pp. 193-194, 2005. 
[23] E. J. Yoon and K. Y. Yoo, “Secure Deniable Authentication Protocol based on ElGamal 
Cryptography,” Networks, Vol. 45, pp. 193-194, 2005. 
 
七、計畫成果自評 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
