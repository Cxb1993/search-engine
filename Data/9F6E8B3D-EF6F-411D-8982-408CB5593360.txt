2region where the object function resides and
the profile of sinc basis functions' locations
and shapes.
In the previous paper [1], we had
demonstrated good examples by simply
choosing an appropriate expected support
domain of the object function and allocating
the same-shaped sinc basis functions with a
uniform interval. Intuitively, this could be the
best way for reconstructing an unknown
object function. However, if considering the
imaging applications in which the object
functions have similar profiled features, such
as diagnosis medical imaging. With a chosen
template model function, one can perform a
search for the parameterization setup that
optimizes the final estimate. And the result
from this search can be delivered for the use
in future.
To seek the optimal parameterization
setup, we particularly resort to a stochastic
search method, the genetic algorithm (GA)
[2]. The genetic-algorithm optimizers are
well-known robust modeled on the principles
of natural selection and evolution, and
particularly effective at solving complex and
combinatorial problems [3,4,5,6,7]. The
convergence rate of the GA is typically
unfavorable, while our very goal is to find the
best solution, at the cost of only one
implementation.
3. THE IMAGE RECONSTRUCTION
ALGORITHM
For mathematical explanation, let the
object function being reconstructed be f and
its limited Fourier transform values F be
sampled at N different frequencies n, for
n=1, 2,…,N. The image reconstruction
algorithm we developed is written as [1]
1
(ˆ ) sinc[ ( )] ,
N
n n
n
f x a x x

  (1)
where sinc(t) is defined as sin(t)/t. In
equation (1), sinc basis functions of
bandlimitation degree  and of central
position xn are weighted by the coefficient an
in the superposition model. The coefficients
an, for n=1,2,…,N, can be determined by
1
( ) for 1,2, ,
N
m n mn
n
F a A m N

   (2)
with
sinc[ ( )]exp( ) .mn n mA x x jx dx


 

   (3)
In principle, the reconstructed image
quality is essentially dependent upon the
parametric values of , , x1, x2,…,xN.
Typically, the task of searching for an
optimal one set is rather difficult, and we
resort to the GA.
4. THE IMPLEMENTATION OF GENETIC
ALGORITHM INTO THE IMAGE
RECONSTRUCTION ALGORITHM
The GAs are basically composed of three
operations; reproduction, crossover, and
mutation. A block diagram of a simple
genetic-algorithm optimizer is shown in Fig.
1. During the optimization process in the GA,
a set of trial solutions is chosen initially, and
then evolve toward an optimal solution under
the selective pressure of the GAs' operations.
The GAs do not operate directly on the
parameters, but on a concatenation of
parameters' symbolic representations, known
as a chromosome. An appropriate coding
method should be used to transform
parameters into genes in the chromosome.
For our proposed image reconstruction
algorithm, the binary coding method is used
as a mapping from the parameter space to the
chromosome space. All the values of
parameters, ,, x1, x2,…,xN, are encoded as
a sequence of binary bits in each
chromosome. The operator of reproduction
calculates a survival probability by using the
roulette-wheel method for each chromosome
in the next generation, and selects better
chromosomes according to the probability.
The single-point crossover operator swaps
parts of one chromosome with those of
another chromosome. For the operation of
mutation, parts in all new chromosomes are
subject to change according to mutation
probability. Starting from a randomly-chosen
initial population of chromosomes, three
operations (reproduction, crossover, and
41
(ˆ ) sinc[ ( )] .
N
n n n
n
f x a x x

  (5)
The determination of mnA is then replaced
by
sinc[ ( )]exp( ) .mn n n mA x x jx dx


 

   (6)
For two-dimensional imaging problem,
we can simply decompose it into two
one-dimensional models in the sense of
variable separation, and thus the one for each
dimension takes the same manner as
described in previous section. For
mathematical explanation, let the object
function being reconstructed be f and its
limited Fourier transform values F be
sampled at N different frequencies (n, n),
for n=1, 2,…,N. Additionally, let the
bandlimitation degree and central position for
each two-dimensional basis function be (n,
n) and (xn, yn), respectively. If the expected
support domain is defined as -xand -
y , then the two-dimensional algorithm
is represented as
1
(ˆ , ) sinc[ ( )] sinc[ ( )]
N
n n n n n
n
f x y a x x y y 

   (7)
with
1
( ) for 1,2, , .
N
m n mn mn
n
F a A B m N

   (8)
In the summation of equation (8), the
determination of mnA is exactly equal to that
of equation (6), and the case for mnB takes
the similar sense,
sinc[ ( )]exp( ) .mn n n mB y y jy dx


 

   (9)
6. SIMULATIONS
To test our findings under more realistic
condition, we applied our developed
technique to computed Fourier transform
data, where the data samples were taken at
frequencies accessible with low-pass filtering,
for one-dimensional and two-dimensional
examples. The investigation was acquired for
test purposes only, while it virtually presents
its applicability to the implementation of GA
into our newly-developed algorithm.
Fig. 3: (a) The discrete Fourier transform (DFT)
estimate, (b) the estimate by equation (1) in the
conventional sense of choosing a tight expected
support domain [-,] = [-0.82, 0.82], taking the
largest value of |n| for, and positioning x1, x2,…,xN
at a uniform interval over the range [-,], (c) the
estimate by equation (5) with an optimal set of
parametric values from the implementation of the GA.
For the one-dimensional simulation, 15
low-pass filtering data, {n | for n=1, 2,…,
N}={-7,…, 0,…, 7}, were sampled to
reconstruct the object function, as shown in
Fig. 3 (solid line). By conventionally
applying the algorithm of equation (1) in the
sense of choosing a tight expected support
domain [-,] = [-0.82, 0.82], taking the
largest value of |n| for, and positioning x1,
x2,…,xN at a uniform interval over the range
[-, ], the resultant estimate in Fig. 3(b)
gives a better resolution than the discrete
Fourier transform (DFT) estimate in Fig. 3(a).
If implementing the GA into the algorithm of
equation (5), the estimate in Fig. 3(c) earns a
further improvement as compared with the
result in Fig. 3(b).
-3 -2 -1 0 1 2 3
0
0.5
1
1.5
-3 -2 -1 0 1 2 3
0
0.5
1
1.5
-3 -2 -1 0 1 2 3
0
0.5
1
1.5
(a)
(b)
(c)
