 
2
Implementing the biological behaviors on multi-
robots is a kind of artificial intelligence. The 
robots with the biological behaviors are called 
bio-mimetic robots, “bio-robot” for short in the 
following discussion. 
In recent years, a bio-robots system has a 
broad range of engineering applications. For 
example, military reconnaissance, surveillance, 
planetary exploration, and geophysical mapping 
are typical applications of bio-robot system [3]. 
The objective of the research focuses on 
exploration or foraging and concentration and 
the wireless communication implementation of 
these algorithms. In the exploration task the 
robot must spread in the environment in order to 
collect as much information as possible about 
the exploratory area. In the concentration task 
robots must move to the same place for 
retrieving the exploratory robots or transporting 
the target.  Putting out a fire source or planetary 
exploration are attractive applications. 
In the cooperation of multi bio-robots the 
communication is important. Bio-robots can 
exchange the information with each other and 
gather the collected information by 
communication. So the communication 
architecture is necessary in the multi bio-robots 
system [9].  The communication information is 
used as an input to the development of a 
dispersion algorithm for exploration or foraging 
and concentration algorithm for concentration. 
The performance evaluation of wireless 
communication module is on a system-on-chip 
circuit which consists of one computational 
device, 8051 CPU, and one communication 
module. Two types of communication modules 
are tested: One is a RF chip at the frequency 868 
MHz and the other is the 2.4-GHz Zigbee on top 
of IEEE 802.15.4. The performance evaluation is 
based on the estimation of the relative distance 
between any pair of nodes. Two methods are 
used: One is based on the traveling time of 
signal over the wireless communication channel 
and the other is based on the estimation of the 
signal strength. The results show that it is better 
to use traveling time to estimate the relative 
distance. 
 
II. Research Contents  
 Figure 1 is the main concept of the 
algorithm. Each robot has its sensing range and 
communication range. There are many formation 
moving algorithm are developed by the 
information of sensor. For example, CCD 
camera sensor, odor sensor, and infrared sensor 
are very common sensor. When the target or 
robots are not in the sensing range of a robot, the 
robot would move randomly to sensing the target 
or robots. But the communication range of a 
robot is much larger than the sensing range. So if 
the robot can fully utilize the information which 
is transferred by communication, the searching 
process could be simplified.  
The main objective of this research is that 
how to develop a moving algorithm only by the 
information of communication. However, the 
robots are not required to increase sensors for 
localization. For example, global positioning 
system (GPS) is a precise location sensor. The 
moving algorithm only utilizes common 
communication information to build. First one is 
communication link density. It is the number of 
neighbors. This information can tell the master 
robot the number of robots in the little region is 
large or small. Second one is the intensity of 
communication signal. This information can tell 
the robot the distance between any two robots. 
Because the intensity of communication signal 
can’t be measured very precise, only the 
approximate distance between two robots can be 
obtained. These two kinds of information are not 
only easy to get but also doesn’t need to intend 
any location sensor. So they are not very suitable 
for the development of the moving algorithm. 
 
Figure 1: Relations between communication range and 
sensing range 
 
 
4
  802.15.4 Bluetooth CC1010 
Frequency 2.4GHz 2.4GHz 868MHz 
Maximum 
range 
100m 100m 64m 
Neighbors 
Network 
coordinate 
255 
65535 
7 broadcast 
Batteries life 100-1000d 1-7d   
Calculating 
capability of 
Controller 
8051 ARM7 up 8051 
Data rate 250 Kbps 1 Mbps  76.8 Kbps 
Product 
location 
Wireless 
monitoring 
and control 
Replace the 
wire 
  
 
 
A. Zigbee based on IEEE 802.15.4. 
 
Zigbee is an open technique for short length 
wireless communications. The main members of 
zigbee are Invensys, Mistbishi Electric, 
Motorola, Philips Semiconductor and so on. 
Zigbee is a superset of IEEE 802.15.4 
specification at control, monitor and sensor 
application. IEEE 802.15.4 defines the physical 
and MAC layers. Above this, Zigbee defines the 
application and security layers. We can use 
Zigbee to do the applications in different 
products and manufactures [1]. Zigbee has 
follow characteristics: Low power consumption, 
2.4GHz and 16 different channels, Operate in 
heavily congested radio environments and tree 
topologies. In a wireless ad hoc network, the 
broadcasted algorithm should be robust. How to 
introduce redundant transmissions to some 
extent to achieve this object for a Zigbee 
network is proposed in [2]. 
 
B. The distance estimation 
 
Based on the analysis of received signal, the 
goal is to transform this formation into distance 
data. Finally, the distance between two nodes 
according to their received signal strength can be 
obtained. 
Five methods can be used to obtain the 
distance information using wireless 
communication data. The methods are time-of-
arrival (ToA), time-difference-of-arrival, signal -
strength ranging, near-filed EM ranging and 
single of arrival. In the study, time-of-arrival and 
signal-strength ranging are applicable.  
The first step is to collect a lot of data of 
received signal strength using Chipcon CC2430 
board by RS232. At the second step, a porgram 
is coded in PC to record the data from RS232 to 
establish a table. CC2430 uses IAR workbench 
to be its compiler. Differenced to CC1010 
compiler, the structure of IAR workbench has 
much variety with CC1010 compiler. It is 
difficult and cost much time to adapt IAR 
workbench.  TOA technique needs high 
accuracy hardware to implement it. Current 
solution is to increase the times of round of 
signal transmission. 
 
 
C. Hardware and software 
 
The hardware platforms of robot wireless 
communication system chosen for the 
implementation are the Chipcon CC1010 and 
Chipcon CC2430. CC1010 was used at the early 
stage of this project, but the communication 
quality is hard to increase and still stay at a low 
successful transmitting rate. In order to obtain 
more dependable wireless communication 
information, CC2430 is used. Table 2 is the 
overview of the hardware specifications of 
CC1010 and CC2430. It will be described in 
detail in the following. Considering the moving 
performance of robots, smaller and lighter 
characteristics of components are needed. Figure 
5 shows the appearance compare of CC1010 and 
CC2430 EM. The CC2430 EM is by far better 
than the CC1010 EM in this aspect.  
“CC1010 is a true single-chip UHF 
transceiver with an integrated high performance 
8051 microcontroller with 32 kB of Flash 
program memory” [11]. The working frequency 
band is 868 MHz and the data rate is 76.8 kbps. 
Figure 2 is the appearance of CC1010 
Evaluation Board (EB) with CC1010 Evaluation 
Module (EM) plugged in and the brief 
introduction of some onboard functions. 
“CC2430 is a true System-on-Chip (SoC) 
solution specifically tailored for IEEE 802.15.4 
and ZigbeeTM applications” [12]. CC2430 works 
at 2.4 GHz and owns 8051 MCU with 128 kB of 
Flash program memory, and has less small 
volume and weight than CC1010. The data rate 
is 250 kbps. Figure 3 is the appearance of 
CC2430 EB and EM. 
 
 
6
 
Figure 7: the scene of RSS measuring 
 
E. Experimental Result 
 
Table 3 shows the average and standard 
deviation of the data in Figure 8. Each distance 
has about 100 packets. From these data, the 
relation from RSS to distance is appeared. More 
far to the distance, weaker RSS would be 
recorded. In addition, comparing each different 
distance data of RSS, we can find that the larger 
scale distance has less accuracy, not only the 
converted accuracy, but also the sensitivity. 
Finally, we can get the trend chart between the 
distance and RSS in Figure 10. It is a Box Plot, 
which shows the illustration of average and 
standard deviation of data. And Figure 8 is the 
experiment result chart of CC1010. It recorded 
four experiment values of distant. Each value of 
distance presented the maximum communication 
range of different transmitting signal strength. 
These strengths are 4 dBm, -4 dBm, -12 dbm, 
and -20 dBm respectively. Notice that, the data 
of CC1010 is transmit signal strength (TSS), and 
the data of CC2430 is received signal strength. 
Because of the path losing, at the same distance 
the value of transmit signal strength would 
bigger than the value of received signal strength. 
Comparing the experiment result between 
CC1010 and CC2430, the curve trend of two 
Charts is matched. They both are exponential 
curves. 
 
0 10 20 30 40 50 60 70 80 90 100
-100
-80
-60
-40
-20
0
distance = 2m
packet
R
S
S
 (d
B
m
)
 
0 10 20 30 40 50 60 70 80 90 100
-100
-80
-60
-40
-20
0
distance = 4m
packet
R
S
S
 (d
B
m
)
 
0 10 20 30 40 50 60 70 80 90 100
-100
-80
-60
-40
-20
0
distance = 6m
packet
R
S
S
 (d
B
m
)
 
0 10 20 30 40 50 60 70 80 90 100
-100
-80
-60
-40
-20
0
distance = 8m
packet
R
S
S
 (d
B
m
)
 
Figure 8: The data of RSS measurement at different 
distances 
 
Table 3 
The average and standard deviation of RSS data  
(Each distance has 100 values) 
Distance (m) Average (dBm) Standard deviation
2 -54.85 1.1404 
4 -69.80 2.0744 
6 -74.99 1.3158 
8 -83.31 2.2042 
 
 
0 10 20 30 40 50 60
-20
-15
-10
-5
0
5
The experiment result of CC1010
distance (m)
TS
S
 (d
B
m
)
 
Figure 9: The experiment result of CC1010 
 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
95 年 7 月 28 日 
報 告 人 
姓 名 
連豊力 服務機構
及 職 稱
台灣大學電機系 
助理教授 
會 議 時間 地點 
95 年 7 月 18 日至 7 月 21 日 
印尼峇里島 
本會核定
補助文號
NSC 94-2213-E-002-022- 
會 議 名 稱 (中文) 2006 亞洲控制會議 (英文) 2006 Asian Control Conference 
發表論文題
目 
一、(中文) 利用能量場設計多群組機器人系統之分散式隊形控制 
(英文 ) Analysis of Distributed Formation Control of Multi-Robot 
Systems Using Potential Field Methods 
二、(中文) 基於多重向量場設計網路傳輸控制協定 
(英文) A Design of Transmission Control Protocol Based on Multiple 
Vector Fields Method 
三、(中文) 使用頻寬估測法設計網路傳輸控制協定 
(英文) A Design of Transmission Control Protocol Based on Bandwidth 
Estimation 
報告內容應包括下列各項： 
 
一、參加會議經過 
 
二、與會心得 
 
三、考察參觀活動（無是項活動者省略） 
 
四、建議 
 
五、攜回資料名稱及內容 
 
六、其他 
 
 
 
 
 
第二天早上的兩場專題演講，大會亦邀請了兩位國際學者，分別為：Professor Bijoy 
K. Ghosh (Washington University, USA)，演講的課題為 Signal Processing and Control in 
Biological Systems，以及 Professor K. Jacobs (Griffith University, Australia)，演講的課題
為 Feedback Control in Quantum Systems。 
 
接著，本人參與了第四階段的第四場的會議，主題為：Hybrid Systems I。午餐之後，
本人接著參與了第五階段的第五場次的論文討論：主題是有關 Predictive Control。由於
本次國際會議的晚宴需移地於南部的文化園區舉行，因此，第二天的議程僅安排兩個梯
次，所有參與人員於下午 3 點半左右，即搭車前往晚宴場地。大會於晚宴安排了各項學
術獎項的頒發，例如：由傅立成教授所主編的亞洲控制學刊，則頒發兩年一次的最佳論
文獎，除此之外，在晚宴中，大會並且安排了許多當地的傳統民俗舞蹈，表演者並且適
時與參與之人員互動，大家都留下深刻的印象。 
 
第三天早上的兩場專題演講，大會邀請了兩位國際學者，分別為：Professor M. Esashi 
(Tohoku University, Japan)，演講的課題為 Nano-Micro Electromechanical Systems and 
Their Control 以及 Professor Graham C. Goodwin (University of Newcastle, Australia)，演講
的課題為 Networked Control，但是，由於 Professor Goodwin 因為有事，無法親臨現場，
因此，大會是以播放他事先錄製的錄影帶，然而，事後仍有需多學者提出相關的論點討
論。在結束之前 IFAC 的主席花了十分簡介一下 2008 IFAC World Congress 在韓國漢城
舉辦的情形，誠摯地邀請與會學者參與此盛會。 
 
接著，本人參與了第六階段的第一場的論文討論，主題為：Robotics and Motion 
Control VI。午餐之後，個人的另兩篇論文於第七，與第八階段的第二場次的論文討論，
主題是有關 Networked Control，論文發表主要是由這兩篇的另一位共同作者：李後燦博
士報告。會場約十餘位學者參與聆聽，報告完後並有多位學者提出問題討論，感受受益
良多。 
 
 
二、與會心得 
 
在此次的參與活動中，除了能夠同時聆聽相關研究課題的研究論文之外，同時，難
得有機會與亞洲地區，甚至國際間重要地區的控制學界的友人，交換第一手的的研究資
料，並且一起討論相關可行的研究方向與研究心得等活動，此項交流乃對於我國學術的
成長與發展有著良性的助力。同時，與國際間重要學者的意見交流亦會強化我國在此項
研究領域的學術地位，讓國際間瞭解我國的學術研究成果與進展。 
 
 
  
  
Abstract 
 
In this paper, the trajectory planning for the formation of a 
set of robots is focused. The formation of the multi-robot 
system is defined firstly for the formation control problem. 
Secondly, the potential field method and the artificial inverse 
power force are used to generate certain specified 
equilibrium formations. The stability condition of all 
possible equilibrium formations is then formally 
characterized. A case study of a three-robot system is also 
analyzed mathematically. The convergence of these three 
robots is analyzed by the Lyapunov method. The relationship 
between the stability of the formation of these robots and the 
coefficients of the artificial inverse power force is analyzed 
by the linearization method. The analysis result acts as a 
design criterion when using an inverse power force in a 
multi-robot system. 
 
Index Terms—Formation control, potential field, inverse 
power force, Lyapunov’s method, linearization method.  
 
1. Introduction 
1.1 Motivation 
The research topics of multi-robot systems have received 
significant attention during the last decade. Due to the 
mechanism of cooperation and coordination, multiple robots 
can be used to perform difficult tasks than a single robot can 
do. In previous work, multiple cooperative robots have been 
used successfully in applications such as localization and 
exploration, search and rescue, object manipulation and 
transportation [10: Kloder et al. 2004], [13: Lawton et al. 
2000]. However, in the navigation of multiple robots, 
formation control is an interesting and challenge problem. 
Many difficult tasks can be performed more efficiently if 
these robots are in a specific formation. For the purpose of 
controlling these robots to form a specific formation, a 
suitable interaction among robots is necessary. Therefore, 
 
Corresponding Author: Feng-Li Lian, Department of Electrical 
Engineering, National Taiwan University, Taipei, 10617, Taiwan. This 
research was supported in part by the National Science Council, Taiwan, 
ROC, under the grant NSC 94-2213-E-002-022 and NSC 
94-2218-E-002-075. 
the methodology of designing a proper controller to generate 
a desired formation by these robots is widely discussed. In 
addition to the researches in engineering, there are many 
researches focusing on the biological behaviors of a 
multi-robot system, for example, the aggregated behavior or 
foraging in [4: Flieral et al. 1999] and [15: Mogilner et al. 
2003]. 
In engineering and biology, the potential field methods are 
widely used to solve the navigation problem of mobile robots 
and model the biological behavior, respectively. Among 
different potential field methods, the artificial inverse power 
forces are widely used to control a multi-robot system as 
discussed in [3: Dudenhoeffer and Jones 2000], [15: 
Mogilner et al. 2003], and [18: Reif and Wang 1999]. 
However, in the previous work on the artificial inverse 
power forces, the coefficients of the artificial inverse power 
forces are designed intuitively that probably lacks the 
stability analysis of the whole multi-robot system. Therefore, 
in this paper, methods are proposed to analyze the 
formations formed by a set of robots using artificial inverse 
power forces and the relationship between the coefficients of 
the artificial inverse power forces and the stability of the 
multi-robot system, mathematically. 
In order to analyze the multi-robot systems, the dynamics of 
the studied multi-robot systems are modeled firstly. 
Secondly, based on the concepts of dynamical system 
analysis, the formation and its stability of a multi-robot 
system are defined referring  to the definition of equilibrium 
points and the stability of the equilibrium points, including 
the formation graphs, the equilibrium formations, and the 
stability of equilibrium formations. Thirdly, the potential 
field method and the artificial inverse power force are 
defined. Therefore, the studied multi-robot systems can be 
analyzed mathematically according to the formation 
definition and the potential field method. 
1.2 Literature survey of related researches 
The topics on multi-robot systems are widely researched in 
the past decades. In [2: Cao et al. 1997] and [12: Kube and 
Zhang 1997], the authors classified the tasks performed by a 
set of cooperative multiple robots. Examples of cooperation 
include collective foraging, box pushing, searching, and 
Analysis of Distributed Formation Control of Multi-Robot 
Systems Using Potential Field Methods 
Yung-Lun Lin and Feng-Li Lian 
Electrical Engineering Department 
National Taiwan University 
Taipei, Taiwan 
The 6th Asian Control
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 914 © 2006 ASCC
  
controlled. In other words, the kinematic model of robots is 
only considered in this paper. Moreover, the orientation of 
robots is ignored. 
2.1 Formation graph 
The configuration space and formation graph of these robots 
are defined as follows. 
Definition 1 (Configuration Space) [16: Muhammad and 
Egerstedt 2004]. The configuration space 2( )MC R  of the 
robot formation is made up of all ordered -M tuples in 2R , 
with the property that no two robots coincide. Formally, 
( ) ( )2 2 2 2M = × × − ΔLC R R R R , 
where 
( ){ }
1 2
, , , , for some
M i jR R R R R
X X X X X i jΔ = = ≠K . 
■ 
Definition 2 (Connectivity Graph of a Formation) [17: 
Olfati-Saber and Murray 2002]. The -thk formation graph 
of M  robots in 2R  is a planar graph denoted as 
( )k k= G V D,  that consists of a set of vertices V  with 
elements 
m
v , 1, 2, ,m M= K  and a distance matrix 
M M
k
×
∈RD , 1, 2, 3, ,k = K . k G  denotes the -thk formation 
graph of these M  robots. Moreover, the - thji element of 
kD   is i jR Rd , , 1, 2, ,i j M∀ = K , where 
i j j i i jR R R R R R
d d X X= −  is the relative distance between 
iR  and jR and u  is the Euclidian norm defined by 
T
u u u= . ■ 
In [16: Muhammad and Egerstedt 2004] and [17: 
Olfati-Saber and Murray 2002], the authors defined the 
connectivity graph of a formation by V , D ,  and C , where 
C  is the connectivity matrix whose -ji th element is used to 
describe whether iR  and jR  are sensing each other. In the 
studied multi-robot system, each robot is assumed to be able 
to sense and communicate with all other robots. Therefore, 
the connectivity graph of one formation is defined without 
the connectivity matrix C . 
Using the concept of permutation-invariant formation in [10: 
Kloder et al. 2004], the formation graph is defined using the 
distance matrix D . Relabeling robots does not affect the 
formation graph. Therefore, the definition of identical 
formation graph is as follows. 
Definition 3 (Identical Formation Graph). The - thk  
formation graph of M  robots in 2R  is a planar graph 
denoted as ( )k k= G V D,  which is defined in Definition 2. 
Define a relative distance set of this formation is  
{ }k , 1, 2, , ,  i jR Rd i j M i j= ∀ = ≠KRD . Two formation 
graphs of M  robots in 2R  are identical if the relative 
distance sets are equivalent. ■ 
Therefore, according to Definition 2 and Definition 3, if two 
formations are identical, the eigenvalues of the distance 
matrices of these two formations are the same. For example, 
there are two identical formations except the relabeling of 
robots as shown in Figure 2. According to Definition 2, the 
connectivity graph of these two formations are specified as 
1G  and 2G . Therefore, the distance matrix of 1G  and 2G  are 
as follows. 
0
0
0
a b
a c
b c
=
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥⎣ ⎦
1D   and 
0
0
0
b c
b a
c a
=
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥⎣ ⎦
2D  , 
respectively, where , ,a b c +∈R . According to Definition 3, 
the relative distance sets of these two formations are 1
RD  
and 2
RD , where { }1 2 , ,a b c= =R RD D . Therefore, these two 
formations are identical according to Definition 3. The 
characteristic equation of 1D  and 2D  are 
( )3 2 2 2 2 0a b c abcλ λ− + + − = . 
Thus, the eigenvalues of 1D  and 2D  are the same. 
 
a
c
b a
b
c
1G 2G
 
Figure 2: Permutation-Invariant Formations. 
 
2.2 Equilibrium formation 
The formation graph is defined by using V  and kD . 
Therefore, the definition of equilibrium points and their 
stability in [9: Khalil 2002] can be used to define the 
equilibrium formation and its stability similarly as follows. 
Definition 4 (Equilibrium Formation). The - thk  graph of 
formation is defined by V  and kD . A formation of M  
robots in 2R  whose formation graph is 
∗
G  and distance 
matrix is 
∗
D  is said to be an equilibrium formation if it has 
the property that whenever the distance matrix of these M  
robots is 
∗
D , it will remain be 
∗
D  for all future time. 
Moreover, 
∗
D  is said the equilibrium distance matrix. ■ 
The 6th Asian Control
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 916 © 2006 ASCC
  
there are M  robots, , 1, 2, ,
m
R m M= K , in 2R . 
m
RX ∈
2R  are the position of 
m
R . The potential function 
between a pair of robots is defined as ( )
i jRobot R R
P d , where 
, 1, 2, ,i j M= K , 
i j j i i jR R R R R R
d d X X= −  is the distance 
between iR  and jR , and ( )RobotP   is + →R R . Therefore, 
the dynamic potential function DynamicP  of iR  is defined in the 
following. 
1,
( ) ( )
i i j
M
Dynamic R Robot R R
j j i
P X P d
= ≠
= ∑ . ■ 
For example, suppose that there are two robots 1R  and 2R  in 
2R  and 
i jR R
d  is the distance between 1R  and 2R . Figure 4 is 
an example of the dynamic potential field of 1R , 
1
( )Dynamic RP X . Actually, since there are only two robots in this 
space, 
1 2
( ) ( )Dynamic R Dynamic RP X P X=  in this case. 
 
0 1 2 3 4 5 6 7 8 9 10
-260
-240
-220
-200
-180
-160
Dynamic Potential Field
d12
P D
1
 
Figure 4: Dynamic potential field. 
 
2.3.3 Social potential field: A social potential field is 
defined using a function SocialP . The social potential field is 
the combination of the static and dynamic potential fields. 
Definition 8 (Social Potential Field). Suppose that there are 
M  robots, , 1, 2, ,
m
R m M= K , S  obstacles, 
, 1, 2, ,
s
O s S= K , and one goal, G  in 2R . 
m
RX , 
s
OX  and 
GX  ∈  
2R  are the positions of 
m
R , 
s
O  and G , respectively. 
The social potential function SocialP  of mR  is defined as 
follows 
( ) ( ) ( ),
m m m
Social R Static R Dynamic RP X P X P X= +  
where StaticP  and DynamicP  are defined in Definition 5 and 
Definition 6. ■ 
Suppose that there are many robots, several obstacles and 
one goal in the 2R  space. Each robot depending on SocialP  
can maintain some social relations among other robots and 
react to the environment. Therefore, SocialP  is called the 
social potential field. 
 
3 Analysis result of a three-robot system 
 
In this section, mathematical analysis methods are used to 
analyze the equilibrium formations of a three-robot system 
using the social potential field method and artificial inverse 
power force. The stability of these formations is analyzed 
mathematically. 
3.1 A three-robot system in  2R  
In this section, a three-robot system without any goal and 
obstacles in 2R  is considered. The Lyapunov method is used 
to analyze the convergence of these three robots globally. 
Furthermore, the linearization method is used to analyze the 
equilibrium formations and the stability of the equilibrium 
formations of these three robots locally. 
In 2R , there are three robots, 1R , 2R , and 3R  whose 
positions are 
1R
X , 
2R
X , and 
3R
X . Use the social potential 
field method and apply the artificial forces to these robots. 
Without any obstacles and goal, each of these three robots is 
only affected by the other two robots. Therefore, the artificial 
force of each robot, AritificialF , is the summation of robotF  
related to the other two robots. The scenario is shown in 
Figure 5. 
Note that the numbering assignment of these three robots is 
for analysis convenience only. Actually, each robot does not 
know the number of robots because the multi-robot system 
studied is in a distributed architecture manner. The 
high-level controller of each robot is identical. 
2R
1R
1 3
( )
robot R RF X X−
2R
1 2
( )
robot R RF X X−
2 1
( )
robot R RF X X−
2 3
( )
robot R RF X X−
3 2
( )
robot R RF X X− 3 1
( )
robot R RF X X−
1 2 2 1R R R R
d d=
1 3 3 1R R R R
d d=
2 3 3 2R R R R
d d=
1
( )RartificialF X
2
( )RartificialF X
3
( )RartificialF X
3R
 
Figure 5: The artificial forces of three robots. 
 
The 6th Asian Control
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 918 © 2006 ASCC
  
 
( ) ( )RiRj
RiRj
d d
U d
d t
= .                                              (4) 
Lemma 3 (Equilibrium Formations of Three Robots). 
Suppose that there are three robots, , 1, 2, 3
m
R m = , in 2R . 
m
RX  ∈  
2R  are the positions of 
m
R . The group dynamics of 
these three robots are given by Eq. (4). Then, there are four 
equilibrium distance matrices 1D , 2D , 3D  and 4D  whose 
 - thji element are 
_ 1i jR R
d , 
_ 2i jR R
d , 
_ 3i jR R
d  and 
_ 4i jR R
d , 
respectively, , 1, 2, 3i j = . These elements are  
( )
1 2 1 3 2 3
1
_ 1 _ 1 _ 1
r a
R R R R R R
R
d d d
A
−
= = =
⎛ ⎞⎜ ⎟⎝ ⎠  of 1D , 
( ) ( )
1 2 2 3 1 3
1 1
_ 2 _ 2 _ 2
2 2
, 2
2 2
r a r a
r r
R R R R R R
a a
R R
R R
d d d
A A
A A
− −
+ +
= = =
+ +
⎛ ⎞ ⎛ ⎞⎜ ⎟ ⎜ ⎟⎜ ⎟ ⎜ ⎟⎜ ⎟ ⎜ ⎟⎝ ⎠ ⎝ ⎠
 of 2D , 
( ) ( )
1 2 1 3 2 3
1 1
_ 3 _ 3 _ 3
2 2
, 2
2 2
r a r a
r r
R R R R R R
a a
R R
R R
d d d
A A
A A
− −
+ +
= = =
+ +
⎛ ⎞ ⎛ ⎞⎜ ⎟ ⎜ ⎟⎜ ⎟ ⎜ ⎟⎜ ⎟ ⎜ ⎟⎝ ⎠ ⎝ ⎠
 of 3D , 
( ) ( )
1 3 2 3 1 2
1 1
_ 4 _ 4 _ 4
2 2
, 2
2 2
r a r a
r r
R R R R R R
a a
R R
R R
d d d
A A
A A
− −
+ +
= = =
+ +
⎛ ⎞ ⎛ ⎞⎜ ⎟ ⎜ ⎟⎜ ⎟ ⎜ ⎟⎜ ⎟ ⎜ ⎟⎝ ⎠ ⎝ ⎠
 of 4D . 
Moreover, the corresponding formation graphs are 1G , 2G , 
3G  and 4G . Geometrically, 1G  is a regular triangle and 2G , 
3G  and 4G  are a straight line as illustrated in Figure 7. ■ 
 
2v 3v1v
( )=2 2G V D,
1
2
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠
1
2
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠
1
22
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠
2v 3v1v
( )=3 3G V D,
1
2
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠
1
2
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠
1
22
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠
2v3v1v
( )=4 4G V D,
1
2
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠
1
2
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠
1
22
2
r a
r
a
RR
AA
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞
+⎜ ⎟⎜ ⎟⎜ ⎟+⎝ ⎠2v 3v
1v
1
r aR
A
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞⎜ ⎟⎝ ⎠
1
r aR
A
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞⎜ ⎟⎝ ⎠
1
r aR
A
⎛ ⎞⎜ ⎟
−⎝ ⎠⎛ ⎞⎜ ⎟⎝ ⎠
( )=1 1G V D,
 
Figure 7: Four equilibrium formations. 
 
In Lemma 3, the equilibrium formations of these three robots 
whose group dynamics are Eq. (4) are analyzed. The graphs 
of the equilibrium formations are a regular triangle and a 
straight line. The stability of these equilibrium formations 
will be analyzed in Lemma 4 and Lemma 5. 
Lemma 4 (Stability of Equilibrium Formation _ Regular 
Triangle). Suppose that there are three robots, 
, 1, 2, 3
m
R m = , in 2R . 
m
RX  ∈  
2R  are the positions of 
m
R . 
The group dynamics of these three robots are given by Eq. 
(4). Therefore, if r a> , the equilibrium formation with 
equilibrium distance matrix 1D  is stable, and, if r a< , the 
equilibrium formation with equilibrium distance matrix 1D  
is unstable, where the equilibrium distance matrix, 1D , is 
described in Lemma 3. ■ 
Lemma 5 (Stability of Equilibrium Formations _ 
Straight Line). Suppose that there are three robots, 
, 1, 2, 3
m
R m = , in 2R . 
m
RX  ∈  
2R  are the positions of 
m
R . 
The group dynamics of these three robots are given by Eq. 
(4). The equilibrium formations with equilibrium distance 
matrices 2D , 3D , and 4D  are unstable, , , , 0A R a r∀ > , 
where equilibrium distance matrices, 2D , 3D  and 4D , are 
described in Lemma 3. ■ 
According to Lemma 5, the stability of the equilibrium 
formations with equilibrium distance matrices 2D , 3D  and 
4D  does not depend on the coefficients A , R , a , and r . 
Moreover, the equilibrium formations wtih equilibrium 
distance matrices 2D , 3D  and 4D  are unstable regardless of 
any coefficients. 
Lemmas 4 and 5 are arranged in Table 1 which shows the 
relationship between stability of formations and the power 
coefficients a  and r . The stability of the equilibrium 
formation with equilibrium distance matrix 1D  depends on 
the power coefficients a , and r . However, the equilibrium 
formation with equilibrium distance matrix 2D  is unstable 
for all a , and r . 
In this section, the convergence, the equilibrium formations, 
and the stability of equilibrium formations of these three 
robots whose group dynamics are Eq. (2) are analyzed. 
According to Lemma 2, these three robots move toward the 
center if a r< . As t → ∞ , the three robots converge to a 
circle defined in Lemma 2 wherever the initial positions of 
robots if a r< . Moreover, according to Lemma 4, the 
equilibrium formation with distance matrix 1D  is stable. 
Therefore, these three robots form a regular triangle if a r<  
wherever the initial positions of robots. 
 
 
 
 
The 6th Asian Control
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 920 © 2006 ASCC
  
W. Kowalczyk, “Multi-Robot Coordination,” in 
proceedings of the Second International Workshop on 
Robot Motion and Control, pp. 219-223, Bukowy 
Dworek, Poland, October 2001. 
[12: Kube and Zhang 1997] 
C. R. Kube and H. Zhang, “Task Modelling in 
Collective Robotics,” Autonomous Robots, Vol. 4, No. 
1, pp. 53-72, March 1997. 
[13: Lawton et al. 2000] 
J. R. Lawton, B. J. Young, and R. W. Beard, “A 
Decentralized Approach to Elementary Formation 
Maneuvers,” in proceedings of the 2000 IEEE 
International Conference on Robotics and Automation, 
Vol. 3, pp. 2728-2733, San Francisco, CA, USA, April 
2000. 
[14: Masoud and Masoud 2000] 
S. A. Masoud and A. A. Masoud, “Constrained Motion 
Control Using Vector Potential Fields,” IEEE 
Transactions on System, Man, and Cybernetics-Part A: 
Systems and Human, Vol. 30, No. 3, pp. 251-212, May 
2000. 
[15: Mogilner et al. 2003] 
A. Mogilner, L. Edelstein-Keshet, L. Bent, and A. 
Spiros, “Mutual Interactions, Potentials, and Individual 
Distance in a Social Aggregation,” Journal of 
Mathematical Biology, Vol. 47, No. 4, pp. 353-389, 
May 2003. 
[16: Muhammad and Egerstedt 2004] 
A. Muhammad and M. Egerstedt, “Decentralized 
Coordination with Local Interactions: Some New 
Directions,” Lecture Notes in Control and Information 
Sciences, Vol. 309, pp.153-170, July 2004. 
[17: Olfati-Saber and Murray 2002]  
R. Olfati-Saber and R.Murray, “Distributed 
Cooperative Control of Multiple Vehicle Formations 
Using Structural Potential Functions,” in proceedings of 
the 15th World Congress of International Federation of 
Automatic Control, pp. 213-218, Barcelona, Spain, July 
2002. 
[18: Reif and Wang 1999] 
J. H. Reif and H. Wang, “Social Potential field: A 
Distributed Behavioral Control for Autonomous 
Robots,” Robotics and Autonomous Systems, Vol. 27, 
No. 3, pp. 171-194, May 1999. 
[19: Rimon and Koditschek 1992] 
E. Rimon and D. E. Koditschek, “Exact Robot 
Navigation Using Artificial Potential Functions,” IEEE 
Transactions on Robotics and Automation, Vol. 8, No. 5, 
pp. 501-518, October 1992. 
[20: Yasunori et al. 2001] 
Y. Nagasaka, K. Murakami, T. Naruse, T. Takahashi, 
and Y. Mori, “Potential Field Approach to Short Term 
Action Planning in RoboCup F180 League,” in 
proceedings of the RoboCup 2001 International 
Symposium, pp. 345-350, Melbourne, Australia, August 
2001. 
 
The 6th Asian Control
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 922 © 2006 ASCC
 losses than TCP-Reno. These modifications are summarized as 
follows [4]:  
1. New Retransmission Mechanism—Use more accurate RTT 
estimation to decide to retransmit a dropped segment. 
 
 
2. Congestion Avoidance Mechanism—Give an idea to 
measure and control the amount of extra data this connection 
has in transit, then adjust its transmission rate accordingly. 
3. Modified Slow-Start Mechanism—Modify TCP’s slow-start 
to avoid packet losses while trying to find the available 
bandwidth during the initial use of slow-start. 
Besides investigating the congestion control on senders, 
choosing a proper queueing method for routers is also an open 
issue. The methods have been proposed, which can be 
classified in two aspects: queue scheduling and queue 
management.  
Queue scheduling determines the packet which should be 
sent to the output link next. FIFO (First-In First-Out) is the 
most wildly used one which means the packet come into the 
router first will be served and sent first as well. The queue 
management manages the queue length by dropping packets 
under a certain situation. In this regard, the Drop-Tail 
mechanism which drops the incoming packet only when buffer 
is full is used in the past but has been proven the lack of 
efficiency. Because the Drop-Tail mechanism is too passive, it 
cannot prevent the traffic from congestion but only reduces the 
congestion degree after a packet loss occurs. Therefore, a 
method be proposed : A mechanism should be designed to drop 
the packet in advance such that forcing the sender to decrease 
its sending rate to avoid the further congestion. This active 
method is called AQM (Active Queue Management).  
Recent years many researches on TCP/AQM have been 
discussed to either analyze the performance or propose a new 
algorithm based on some well-known TCP protocols, e.g., 
Reno or Vegas. Low et al. described an optimization-based 
framework that provides an interpretation of various flow 
control mechanisms, in particular, the utility being optimized 
by the protocol’s equilibrium structure [1]. Misra et al. 
exploited the fluid modeling to present a general methodology 
for the analysis of a network of routers supporting active queue 
management with TCP flows [6]. They used a Poisson-driven 
stochastic differential equation to model the data traffic and 
also derived a set of differential equations that describe the 
AQM policy.  
For stability analysis, Ohsaki et al. formed a mathematical 
model of TCP-Vegas in nonlinear difference equation and also 
found the equilibrium points and a stability condition [7]. 
Hollot and Chait used a nonlinear stability analysis for a class 
of TCP/AQM networks to claim that the system is 
asymptotically stable when using TCP-Reno with AQM which 
the marking probability is proportional to the instantaneous 
queue length in a case of delay-free marking [8]. In the more 
realistic case of delayed feedback, they also established a local 
asymptotic stability and quantify a region of attraction. Fan et al. 
designed an adaptive controller to achieve asymptotic 
convergence to a desired equilibrium point, and they proved 
their results through Lyapunov stability analysis[9]. 
On designing new algorithms, Hasegawa et al. proposed 
TCP-Vegas+ to tackle the unfairness issue in TCP-Vegas [10]. 
It has two modes. One is called moderate mode which uses 
TCP-Vegas as usual and the other one is called the aggressive 
mode, which behaves identically to TCP-Reno when it detects 
the presence of competing TCP-Reno traffic. Differing from 
other modifications by giving the window-based threshold, 
Chen et al. proposed another idea that uses the measured RTT 
directly to control the window size adjustment.  In [11][12] and 
[13], the design objective is to dynamically adjust the 
predefined values α and β, and then make TCP-Vegas be more 
adaptive. The former, called AdaVegas, makes the parameters 
be history dependent, while the latter, called TCP Vegas-A, 
uses the throughput variation to give a change. For example, 
the window size stops changing in TCP-Vegas when 
deltaα β< < , where delta is the performance index. 
However, as long as the current throughput is higher than 
before, it implies the network has not been fully utilized, so 
TCP Vegas-A still increases window size, and the thresholds α 
and β are also increased by one accordingly. 
 
3. PROBLEM  FORMULATION 
   TCP-Vegas shows its benefits in the previous section. 
However, some problems inherently exist in TCP-Vegas that 
makes itself could not become the most popular TCP protocols. 
The unfairness of TCP-Vegas is that the route keeps unchanged 
once it has been established, so the issue about rerouting is not 
discussed here. In TCP-Vegas, the increment of window size is 
one of the alternatives, 1, 0, and -1. When applying this 
protocol to the different network scenarios, only three fixed 
increments are too weak to make the window size approach a 
steady-state value efficiently all the time. That is, under 
different situations, using this kind of strategy may cause a 
conservative or aggressive behavior. 
An extended phase portrait of TCP-Vegas is shown in Figure 
2, where TCP-Vegas uses three switching dynamics (1, 0, 1)−  
with two switching points ( , )α β . The horizontal axis is the 
 
Figure 1: Illustrative example of window size 
The 6th Asian Control
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 1068 © 2006 ASCC
 slot k, and rmin is the minimum of all measured round-trip-times 
(RTT). 
 One alternative of Type I uses five switching dynamics 
with four switching points to construct the complete vector 
field, and the maximum increment of window size is one. 
Under this setting, the algorithm takes the form: 
 
1
1 2
2 2
2 1
1
( ) 1, ( ) ,
( ) 0.5, ( ) ,
( 1) ( ), ( ) ,
( ) 0.5, ( ) ,
( ) 1, ( ) .
n n
n n
n n n
n n
n n
w k d k
w k d k
w k w k d k
w k d k
w k d k
α
α α
α β
β β
β
+ <
+ ≤ <
+ = ≤ <
− ≤ <
− ≥

 (3) 
For convenience, Equation (3) is set as the default form that 
stands for Type I in all the subsequent discussions. 
In contrast to TCP-Vegas, Type II keeps three switching 
dynamics but the statement in each dynamics is different. When 
an ACK is received by the sender, it uses present RTT to 
calculate the difference between threshold values and ( )nd k , 
and then multiply it by two certain values, δ or κ, which are 
included into the algorithm as different feedback gains. Note 
that δ should be larger than κ. It is because when ( )nd k  is in 
the tuning zone, i.e., ( )nd k  is less than α or larger than β, the 
network is under either a smooth or heavy status such that the 
sender should make the window size change more aggressively. 
On the other hand, besides tuning zone, another region is called 
target zone if ( )nd k  is in the range between α and β. It implies 
that the transmission is going to arrive at a steady state. 
Therefore, too much variation to the window size should not be 
given. Obviously, the source stops changing its window size 
only when ( )nd k  equals (α + β)/2. 
The mathematical model of Type II is given as follows 
( ) ( ( )), ( ) ,
( 1) ( ) ( ( )), ( ) ,
2
( ) ( ( )), ( ) ,
n n n
n n n n
n n n
w k d k when d k
w k w k d k when d k
w k d k when d k
δ α α
α βκ α β
δ β β
+ − <
++ = + − ≤ ≤
+ − >

 (4) 
where min
min
( ) ( )
( )
( )
n n
n
w k w k
d k r
r r k
= −     is the performance 
index of the n-th sender at slot k, wn(k) is the TCP window size 
of the n-th sender at slot k, r(k) is the recorded round trip time at 
slot k, rmin is the minimum of all measured round-trip-times, α, 
β, δ and κ are all positive constants. 
According to Equation (3), the shape of extended phase 
portrait of window size may like Figure 4. This figure shows 
the trajectory of Vegas circle around the equilibrium point with 
a larger radius than Type I, that is to say, Vegas works more 
inefficiently. 
 
Figure 4: Extended Phase Portrait of Type I 
 
Since the design concept of Type II is to make the window 
size increment be proportional to the difference between dn(k) 
and threshold values. As the degree of network congestion 
varies, Type II should response a proper behavior accordingly. 
In the same way as Type I, from Equation (4), the extended 
phase portrait of window size is drawn in Figure 5. Here the 
shape is like a spiral, which implies Type II can work more 
efficiently than Type I and TCP-Vegas because the radius of 
the trajectory circles around the target becomes smaller and 
smaller. 
 
 
 
 
 
 
 
 
 
1
-1
0.5
-0.5
w 
1 
dw 
Table 1: Relationship between each switching point and 
switching  dynamics 
 
Condition Dynamics 
                ( 1) / 2( )n Fd k α −<  ( 1) / 2Fv −  
   1( )i n id kα α +≤ <  1, 1, 2, 1
2i
F
v i
−= −"  
 1 1( )nd kα β≤ <  0v  
   1( )i n id kβ β +≤ <  
1
, 1, 2, 1
2i
F
v i
−= − − − +"
 
( )d kβ ≤ v
The 6th Asian Control
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 1070 © 2006 ASCC
 ACM SIGCOMM, Vol. 30, No. 4, pp. 151-160, Stockholm, 
Sweden, Sep. 2000 
7. H. Ohsaki, M. Murata, T. Ushio, and H. Miyahara, 
“Stability Analysis of Window-Based Flow Control 
Mechanism in TCP/IP Networks,” in Proceedings of the 
1999 IEEE International Conference on Control 
Application, Vol. 2, pp. 1603-1606, Hawaii, USA, Aug. 
1999 
8. C. V. Hollot and Y. Chait, “Nonlinear Stability Analysis 
for a Class of TCP/AQM Networks,” IEEE Conference on 
Decision and Control, Vol.3, pp. 2309-2314, Orlando, FL, 
USA, Dec. 2001 
9. Y. Fan, Z. P. Jiang, and S. S. Panwar, “An Adaptive 
Control Scheme for Stabilizing TCP,” in Proceedings of 
5th World Congress on Intelligent Control and Automation, 
Vol. 2, pp. 1410-1414, Hangzhou, P. R. China, Jun. 2004 
10.  G. Hasegawa, K. Kurata, and M. Murata, “Analysis and 
Improvement of Fairness between TCP TCP-Reno and 
Vegas for Deployment of TCP Vegas to the Internet,” in 
Proceedings of the 2000 IEEE International Conference 
on Network Protocols, pp.177-186, Osaka, Japan, Nov. 
2000 
11. J. R. Chen, Y. C. Chen, and C. L. Lee, “An End-to-End 
Flow Control Approach Based on Round Trip Time,”
Computer Communications, Vol. 23, No. 16, pp. 
1537-1547, Sep. 2000 
12. A. Maor and Y. Mansour, “AdaVegas: Adaptive Control 
for TCP Vegas,”in Proceedings of the IEEE 
GLOBECOM'03, Vol. 7, pp. 3647-3651, San Francisco, 
CA, USA, Dec. 2003 
13. K. N. Srijith, L. Jacob, and A. L. Ananda, “TCP Vegas-A: 
Improving the Performance of TCP Vegas,”Computer 
Communications, Vol. 28, No. 4, pp. 429-440, Mar. 2005 
 
The 6th Asian Control
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 1072 © 2006 ASCC
 2. TCP-VEGAS 
The flow control in TCP is window-based, where a 
destination sends acknowledgments for packets that are 
correctly received. A source keeps a variable called window 
size that determines the maximum number of outstanding 
packets that have been transmitted but not yet acknowledged. 
When the window size is exhausted, the source must wait for an 
acknowledgment before sending a new packet [1: Low et al. 
2002]. Therefore, the “window size” is an important feature 
that is always considered when designing a TCP algorithm. 
Figure 1 is an illustration of the so-called window size. In 
this figure, the sender sends four packets without any 
acknowledgements received until the fifth transmission, so, at 
this time, the current window size is determined to be four, i.e., 
the number of outstanding packets in the network that have 
been transmitted but have not been acknowledged 
Tahoe, Reno, and Vegas are the most three significant 
versions in the TCP design evolution. Both TCP-Tahoe and 
TCP-Reno change the adjustment of their window size by 
self-generated congestion. TCP-Vegas uses the round-trip-time 
(RTT) information to vary the adjustment. The following 
subsections provide a quick overview of these three TCPs. 
TCP-Vegas employs three techniques to produce a higher 
throughput but lower losses than TCP-Reno. These 
modifications are summarized as follows [4: Brakmo & 
Peterson 1995]:  
1. New Retransmission Mechanism—Use more accurate RTT 
estimation to decide to retransmit a dropped segment. 
2. Congestion Avoidance Mechanism—Give an idea to 
measure and control the amount of extra data this connection 
has in transit, then adjust its transmission rate accordingly. 
3. Modified Slow-Start Mechanism—Modify TCP’s slow-start 
to avoid packet losses while trying to find the available 
bandwidth during the initial use of slow-start. 
The algorithm of TCP-Vegas is shown in Figure 2. Instead 
of self-generated congestion in TCP-Reno, TCP-Vegas uses a 
more clever way in window size adjustment to prevent packet 
losses. Once the first acknowledgment is received, the sender 
calculates the RTT and takes this value as a reference value, 
called RTTmin. Henceforward, every RTT is compared with it 
and then get a performance index, called delta. When the delta 
is less than a predefined value alpha, it implies the network is 
so smooth that the measured RTT is close to the RTTmin, so the 
sender can increase the window size by one in a RTT; on the 
contrary, the sender decreases the window size by one when the 
delta is larger than another constant value beta. If the delta is 
between the alpha and beta, Vegas considers that the current 
state is good enough to stay in, therefore freezes the window 
size. 
 
 
Figure 2: Algorithm of TCP-Vegas [4: Brakmo & Peterson] 
3. PROBLEM FORMULATION 
TCP-Vegas has shown its benefits over TCP-Reno. However, 
some problems inherently exist in TCP-Vegas that makes itself 
could not become the most popular TCP protocols. In 
TCP-Vegas, the increment of window size is one of the 
alternatives, 1, 0, and -1. When applying this protocol to the 
different network scenarios, only three fixed increments is too 
weak to make the window size get a steady-state value 
efficiently all the time. That is, under different situations, using 
this kind of strategy may cause a too conservative or aggressive 
behavior.  The objective in this paper is to design a TCP 
protocol that can achieve the following two aspects: 
1. Improve the convergence efficiency. Once a TCP algorithm 
is designed, no doubt the mechanism can be written as a state 
space form. By means of these state equations, the equilibrium 
point of each state variable is found afterwards. Note that the 
equilibrium point of window size implies that no matter how 
the state trajectory changes in the transient state, the window 
size still converges to a point or a space at last. Therefore, the 
first objective in this paper is to lower the unnecessary 
variations for the window size as much as possible. Make a 
more flexible behavior than TCP-Vegas such that the increment 
of window size could depend on the degree of network 
congestion, not only just 1,-1, and 0. The flexible behavior is 
expected to reduce the cost of convergence then improve the 
convergence efficiency. Furthermore, if an equilibrium point of 
Slow-start 
W_init Å 1;       
delta Å (W/RTTmin-W/RTT)*RTTmin; 
for each ack 
if (delta < gamma) then  
W Å W+1;    
else   
enter Congestion Avoidance   
end if 
Congestion Avoidance 
delta Å (W/RTTmin-W/RTT)*RTTmin; 
for each ack 
if (delta < alpha) then  
W Å W+1/W; 
else if (delta > beta) then  
W Å W-1; (only execute once in a RTT) 
else 
   W Å W; 
end if        
Fast Retransmit 
if (dup_ACKs) 
        retransmit the lost packet  
W Å W/2;      
enter Congestion Avoidance 
end if 
 
Figure 1: Illustrative example of window size 
The 6th Asian Control Conference
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 745 © 2006 ASCC
  
Figure 4: The algorithm of the bandwidth-based TCP 
 
To give a complete model for stability analysis, three 
assumptions are given. 
1. Ignoring the mapping from price to marking probability p is 
acceptable. Hence price is the state variable which stands for 
the marking probability. 
2. Assume that a steady-state value of ε must exist after some 
drops experienced by the sender, namely, the exponential 
growing only causes a transient behavior. 
3. The router processes the incoming packet fairly. Thus the 
sender measures its available bandwidth precisely and can be 
equivalent to B/N. 
Replacing ˆ ( )B k  with B/N, the equilibrium is rewritten and 
solved 
 * *2 * * min
* *2 * *
1 ˆ( ( ) )
2
1 1
 ( ( )) 0,
2
( 1) ( ) 0,  
p
p w w B k r
B
p w w T
N B
w k w k
ε
ε
+ − +
= + − + + =
+ − =
⇒   
 * *2 * *
11
( ) 0.
2
pBTp w w
N
ε +⇒ + − + =  (4) 
Besides, a third-order equation is given below 
 
2
2
3 2 2
11
( ) 0
1
( ) 0
p* * *
*
p* * * *
BT
w w ,
N
BT
w w ,
N
εε
ε ε
++ − + =
+⇒ − − − =
 
 *3 *2 *2 0.
2
Buf
 w
N
ε ε⇒ − − =  (5) 
The analysis of bandwidth-based TCP be omitted here. 
Whereas the defects of TCP-Vegas have been identified, the 
proposed algorithms which try to rectify these problems is 
presented in this section. Next, the simulations under different 
network scenarios are demonstrated to show the performance 
comparisons. 
5. SIMULATION RESULTS 
After presenting the design in Section 4, simulations via 
NS-2 (The Network Simulator – Version 2) are demonstrated in 
this section, where three performance indexes are given as the 
criteria to judge the quality of a TCP protocol.  
First, an observation on the time response of proposed 
bandwidth-based TCP is taken. A simple one-connection 
 
 
 
figuration which is shown in Figure 5 is used with the settings 
that both the sender-router and router-receiver are 8 Mbps with 
1-ms propagation delay, and the bottleneck router-router uses a 
100-packet buffer space with 800 Kbps and 5-ms delay. To 
demonstrate the analytical result, Figure 6 shows the 
trajectories of all the state variables defined in Section 4, viz. w, 
q, ε, and p. For each row in the figure, the x-axis shows the time 
in seconds, and the y-axis shows the window size in packets 
except the bottom row, where the y-axis shows the marking 
probability of state p instead. Since there is only one user 
occupying the link, the sender itself can predict the equilibrium 
points by precisely measuring the bandwidth without error. 
 
 
Under the same environment, Figure 7 shows a window size 
comparison among TCP-Vegas, the bandwidth-based TCP, and 
the previous version of bandwidth-based TCP without adaptive 
modification included, where the x-axis shows the time in 
seconds, the y-axis shows the window size in packets, response 
Slow-start 
W_init Å 1; 
ε_init Å 2; 
for each ack 
if (RTT==RTTmin) then  
W Å W+1; 
ε Åε;   
        else   
       enter Congestion Avoidance   
     end if 
Congestion Avoidance 
for each ack 
estimate the bandwidth B 
if (!drop_flag) then 
ε=ε*2^(0.5-queueing delay);   
else   
      ε Åε+1; 
W Å (ε+B* RTTmin -W )/W; 
     end if 
Fast Retransmit 
  if (dup_ACKs) then  
     retransmit the lost packet 
W Å W/2; 
ε Åε/2; 
enter Congestion Avoidance 
end if 
Figure 6: State variation versus time in Bandwidth-based 
Figure 5: A one Sender Configuration
The 6th Asian Control Conference
July 18-21, 2006
Bali, Indonesia
ISBN 979-15017-0 747 © 2006 ASCC
