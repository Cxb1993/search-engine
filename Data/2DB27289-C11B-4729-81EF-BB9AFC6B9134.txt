 2
行政院國家科學委員會專題研究計畫成果報告 
競爭式演化演算法於多目標動態彈性流線型生產排程問題
之研究 
A Competitive Evolution Strategy Memetic Algorithm for 
Multi-Objectives Dynamic Flexible Flow Shop Problem 
計 畫 編 號：NSC 98-2221-E-155-039 
執 行 期 限：98 年 08 月 01  日至 99  年 07 月  31 日 
主 持 人：徐旭昇   元智大學工業工程與管理系 
計畫參與人員：張煒嵩、陳芝傑   元智大學工業工程與管理系 
 
摘要 
本研究提出競爭式演化演算法
(CESMA)求解多目標動態彈性流線型生
產排程問題(MO-DFFS)，其演算法架構為
一個正常演化母體(GP)與兩個外在保存母
體SEA、IEA所組成，兩外在保存母體分
別為保存較佳與較差之解。演化過程中，
兩外在保存母體互相競爭以爭取該成員於
下一代演化母體所存在之數量。SEA在競
爭後以分支式路徑連結法(BPR)，尋較多
品質與分散性佳之解。本研究所提出之演
算法(CESMA)將與非支配排序基因演算
法 (NSGAII) 以及柏拉圖強度演化演算
法 (SPEA2) 等著名演化式演算法作比較
與分析。本研究根據文獻方法自行產生測
試 題 ， 並 以 Proximity measures – 
generational distance (GD)、 Purity以及
Diversity measure – Spread等指標為標準
來分析與討論演算法之表現效果。最後實
驗結果顯示競爭式演化演算法(CESMA)
在大部分測試題中表現卓越。 
 
關鍵字：多目標動態彈性流線型排程、競
爭式演化演算法、分支式路徑連結法、演
算法效果量測。 
 
ABSTRACT 
This research proposes a competitive 
evolution strategy memetic algorithm 
(CESMA) to solve the dynamic flexible 
flow shop problem with three minimization 
objectives subject to job sequence- and 
machine-dependent setup times. The 
competitive evolution strategy maintains one 
generational population (GP) and two 
external archives at each generation, one 
preserving efficient solutions (SEA) and the 
other preserving inefficient solutions (IEA). 
At each generation, two procedures, EAMA 
(efficient archive memetic algorithm) and 
IAMA (inefficient archive memetic 
algorithm), are applied to compete for 
producing the next generation offspring. 
Furthermore, BPR algorithm is applied to 
obtain more efficient solutions form SEA 
when the competition procedure is done at 
each generation. An experiment is 
conducted to compare the performance of 
the CESMA against two well-known 
evolutionary algorithms (NSGA II and 
SPEA2). The experimental results show that 
 4
演化演法 (competitive evolution strategy 
memetic algorithm, CESMA) 以 求 解
MO-DFFS 問題，並同時與非支配排序基
因演算法 (non-dominated sorting genetic 
algorithm, NSGAII) [25]，柏拉圖強度演化
演 算 法  (strength pareto evolutionary 
algorithm, SPEA2) [26]等演算法做比較。
其中同時考慮最小化最大完工時間
(makespan)、最大延遲時間 (maximum 
tardiness)以及總完工時間(total completion 
time)等三個目標以及工件動態到達時間
(release time)、工件相依設置時間 (job 
sequence and  machine depend setup time)
等環境因素。後續章節 2為問題描述，章
節 3為研究方法，章節 4為實驗分析，章
節 5為結論。 
 
2. 問題描述 
本研究所探討之多目標動態彈性流線
型生產排程問題(MO-DFFS)其問題特徵敘
述如下: 
(1) 總製程包括 G階段，g代表階段編號，  
1,...,g G ，至少一個階段g有多台機器。 
(2) 工件總數為 J，工件編號 Jj ,...,1 。 
(3) 工件 j 所需製程階段集合為 jU ，為
{1,..., }G 之順序子集合，但部分工件並不
一定須經過所有製程(特殊製程要求)。 
(4) 製程階段 g有 gM 台機台， 1...,g gm M   
(5) 工件處理時間 gjmp ，表示工件 j在階段 g
使用機台 m之加工時間， /g g gjm j mp p v ，
其中 gjp 為工件 j在階段g之基本加工時
間， gmv 為階段 g 之機台 m 可使用之資
源量。 
(6) 工件設置時間 gijs ，表示工件 j加工後，
隨之接續加工 i在階段 g之置時間。 
(7) 工件到達時間 gjr ，表示工件 j在階段 g
使用之到達時間。 
(8) 每個工件有其交期(due date) jd 。 
(9) 一個作業只能被一個機台加工。 
(10)  同一時間一個機台只能加工一個作
業。 
(11)  作業的加工過程皆不允許中斷。 
(12)  等候線無容量限制， 
(13)  三個同時最小化目標為：(a) 1f -大完
工時間(makespan)，(b) 2f -最大延遲時
間(maximum tardiness)，(c) 3f -總完工時
間(total completion time) ；數學方式表
示如下: 
 1 2 3 ,  ,  Min f f f f ： 
1 2 3 1
, , Jmax max jjf C f T f C    (1) 
，其中 { }max jC Max C ， Jj ,...,1 ，為最
大完工時間， jC 為工件 j 之完工時
間； {0,  }max j jT Max C d  ，為最大權延遲
時間 
 
3. 研究方法 
本研究求解 MO-DFFS 問題以演化式
演算法為主體，其中包括本研究所發展之
CESMA 演算法以及其他著名演算
法:NSGAII與 SPEA2等。除此之外，分支
式路徑連結法(branch-based path-relinking, 
BPR)與特殊編解碼法則，也亦為本研究另
一發展重點。 
 
3.1 編碼與解碼 
本研究編碼解碼方式採用多組態資源
限制專案排程問題 (multi-mode resource 
constrained project scheduling problem, 
MRCPSP)之 single pass 方式進行，此解碼
方式為當有一群候選工件可選擇進入組態
(機台)服務時，其工件優先順序決定方式
為根據單一指派規則進行 [27]。 
本研究將此類型編解碼方式修改後應
用於 DFFS 問題，當等候線上已有多個工
件在等候，其等候工件集合 {2,3,5,1}Q  ，
其工件 2目前為第一優先順序處理，但當
另一個工件 4也到同時達此等候線且工件
2 尚未進入機台加工，仍在此等候線，此
 6
子代與 IAMA (inferior archive memetic 
algorithm)之 ),( 11  tt IEAGPCrossover 所產
生之 )1( tsize RP  個子代所組成，其中 tr為
競爭參數，當 tr 越高，代表 tGP中品質較
佳解所佔之比率越高，反之，品質較差解
所佔之比率越高。在每一世代中 tr 均會改
變， tr可以定義為公式(5): 
1 1 1
1
1
( ( , ))
( )
t t
t
t
F Crossover GP SEA
r
F GP 
 
    (5) 
，其中 1( )tF GP 為母體 tGP中第一層級解(前
緣解)之個數，  值為收斂參數， 值越
大，代表 tGP中品質較差解所佔之比率越
高，則可以避免演算法過快收斂。此外，
在每一世代中 SEA 將使用分支式路徑連
結法 (BPR)，尋較多品質與分散性佳之
解。當外部母體解數量超過設定值
HL(hard limit)時，則使用 Fuzzy C-mean 
Clustering [28]維持 SEA與 IEA中解為一
定數量 HL。 CESMA 之虛擬碼，如圖 1
所示。 
 
 
圖 1 CESMA虛擬碼 
 
3.3 分支式路徑連結法(BPR) 
分支式路徑連結法(BPR)，必須先決定
路徑連結點數 N、展開支點數 B以及向下
伸展層級深度 L。其基本作法為從外在母
體(archive)目標空間內選擇距離最長之兩
解 a與 b (如圖 2)，隨機選擇其中一點 a為
起始點，b 為終端點，使用路徑連結法搜
尋最佳兩點以做進一步改善。如圖 2，從
起始點 a出發，採與終端點 b相同度 1/5、
2/5、3/5、4/5 逐步增加等 4 個點(N=4)，
終究與終端點 b相同。從此四解選擇在目
標空間 Reference(a, b) 點距離最短之三
點:c 、d與 f點(B=3)，到目前為止層級深
度 L=1；再以(c, d, f)與(a, b) 進行路徑連結
法，挑選距離最遠之兩點為起始與終點，
(c, a), (d, b), (f, b)，此三組分別產生 4個解
(N=4)，並分別以各組之 Reference(c, a)、
Reference(d, b)與 Reference(f, b)參考點為
主各自挑選離參考點較近之 3 個點(B=3)
當作下一層級之展開支點數，圖 4為(f, b)
之圖解，此時層級深度 L=2，此步驟重複
進行到設定之層級深度為止，再將所有產
生的解與外在保存母體比較，較好的解將
其保留。 
 
3.4 其他演化式演算法 
本研究使用 NSGAII [25]以及 SPEA2 
[26]演化演算法求解MO-DFFS問題，以下
為個演算法之特點說明。 
NSGAII在每世代中，母體與子代母體
結合再排序所有個體之非支配解等級，然
後依序取相同數量之母體。若數量切至某
等級有超額之個體時，則使用 crowding 
distance 來決定取捨。SPEA2 演算法使用
一個外在母體(external population)專門保
存目前最佳非支配解 (non-dominated 
solutions)，演化母體與外在母體同時給予
適應度值，扮演演化與改變外在母體之角
色，過程採用 k-th nearest neighbor演算法
改善外在母體之分配狀況。 
 
圖 2 目標空間內分支式路徑連結法當L=1
敘述圖 
 8
工件 j在階段 g之基本加工時間 gjp 為均勻
分配 U[10,100]之間所產生，設置時間 gijs 為
U[10,20]之間，工件到達時間系統時間 0jr
為 U[0, 0jp ]之間，每個階段 s之總機台數
為 U[2, 8]之間所產生，且每台機台可用資
源數 gmv 為 U[2,4] 之間，工件略過部分階段
製程之機率為 U[0.1, 0.3]之間。工件交期
jd 為公式(9)所示: 
1
G g
j j jg
d r p  + total of mean setup time 
of a job on all stage + (J-1)*mean 
processing time of a job on one machine*C
 (9) 
，其中 C 為 tardiness factor，其值越小，
工件越容易延遲，本研究設定 C=0.1。 
本研究依據上述之參數設定產生
50x8 (工件 x階段)、100x10各三題，並依
序編號為 M01~M03 (50x8)，L01~L03 
(100x10)。 
 
4.2 實驗數據 
本研究使用五種編解碼方式於所有測
試題上進行求解，其結果如表 1, 2 所示，
從表中可以得知MERD與ATCS編解碼方
式在所有測試例題上表現最佳，其前緣排
序(rank)均為第 1排序，因此本研究式使用
ADR 編解碼方式給予 MERD 與 ATCS 相
同權重(0.5, 0.5)將兩種編解碼特性結合為
一，在後續的演化演算法之編解碼方式均
使用 ADR。 
表 3, 4為各演算法於測試題上之效果
表現，在指標 Purity與 GD上，CESEA(未
使用 BPR)與 CESEA_BPR 有不錯的表
現，尤其 CESEA_BPR優於其他演算法(除
M01 之外)。在 Spread 指標上，整體而言
NSGAII與 SPEA2效果險勝 GESMA以及
CESEA_BPR。 
GESMA 與 CESEA_BPR 演算法在
GD、Purity 表現較佳可以歸納為以下因
素： 
(1) Fuzzy C-Mean 演算法進行產生分散性
較佳之初始解，使 Fuzzy C-Mean演算
法可以擴充求解空間之廣度(exploits)。 
(2) 競爭動態參數 tr ，使得 tSEA與 tIEA 互相
競爭其子代在演化母體 1tP 之比例(圖
5)，以及 BPR演算法之輔助，大大增擴
搜尋空間，使得演算法可以跳脫區域最
佳解以及避免提早收斂之情況。  
本研究所發展之 GESMA_BPR 雖
優越於其他演算法，但是在相同參數設
定以及求解數目下，GESMA 演算時間
相較於其他演算法高(表 5, 表 6)。 
 
5. 結論 
本研究發展CESMA與CESMA_BPR
演算法並使用 ADR 編解碼方式求解
MO-DFSS問題，其演算法特色在於 tr競爭
動態參數以及 BPR演算法，使得演算法可
以跳脫區域最佳解以及避免提早收斂之情
況， 
本研究之實驗結果顯示出CESMA與
CESMA_BPR在所有測試題中在 GD以及
Purity 指標上優越於 NSGAII 以及 SPEA2
等演算法，但其解算時間較其他演算法長。 
 
 
 
 
 
 
 
 10
 
圖 5 CESMA演算法之 tr 趨勢圖 
參考文獻 
1. Pinedo, M., Scheduling theory, algorithms, and 
systems, New York: Prentice- Hall (1995). 
2. Agnetis, A., A.  Pacifici,  F. Rossi, M. Lucertini, 
S. Nicoletti, F. Nicolò,  G. Oriolo,  D. 
Pacciarelli, and E .Pesaro, “Scheduling of 
flexible flow lines in an automobile assembly 
plant,” European Journal of Operational 
Research, 97 (2), 348–362 (1997). 
3. Piramuthu, S., N. Raman, and M.J. Shaw, 
“Learning-based scheduling in a flexible 
manufacturing flow line,” IEEE Transactions on 
Engineering Management, 41 (2), 172–182 
(1994). 
4. Jungwattanakit, J., M. Reodecha, P. 
Chaovalitwongse, and F. Werner, “A 
comparison of scheduling algorithms for flexible 
flow shop problems with unrelated parallel 
machines, setup times, and dual 
criteria,” Computers and Operations Research, 
36, 358-378 (2009). 
5. Arthanari, T.S. and K.G. Ramamurthy, “An 
extension of two machines sequencing 
problem.,” Opsearch, 8:10–22.(1971) 
6. Salvador, M.S. A solution to a special case of 
flow shop scheduling problems, in Symposium of 
the Theory of Scheduling and Applications, In: 
S.E. Elmaghraby (Ed.), New York: Springer 
(1973). 
7. Kurz, M.E. and R.G Askin, “Scheduling flexible 
flow lines with sequence-dependent setup time,” 
European Journal of Operational Research, 159 
(1), 66-82 (2004). 
8. Brah, S.A. and J.L. Hunsucker, “Branch and 
bound algorithm for the flow shop with multiple 
processors,” European Journal of Operational 
Research, 51, 88–99 (1991). 
9. Portmann, M.C., A. Vignier, D. Dardihac and D. 
Dezalay, “Branch and bound crossed with GA to 
solve hybrid flowshops,” European Journal of 
Operational Research, 107 (2), 389–400 (1998) 
10. Rajendran, C. and D. Chaudhuri, “A multi-stage 
parallel-processor flow shop problem with 
minimum flow time,” European Journal of 
Operational Research, 57, 111–122 (1992a) 
11. Rajendran, C. and D. Chaudhuri, “Scheduling in 
n-job, m-stage flow shop with parallel processors 
to minimize makespan,” International Journal of 
Production Economics, 27, 137–143. (1992b). 
12. SAWIK, T. “Mixed integer programming for 
scheduling flexible flow lines with limited 
intermediate buffers,” Mathematical and 
Computer Modeling, 31 (13), 39–52 (2000). 
13. SAWIK, T., “An exact approach for batch 
scheduling in flexible flow lines with limited 
intermediate buffers,” Mathematical and 
Computer Modeling, 36 (4–5), 46–471 (2002). 
14. Gupta, J.N.D. and E.A. Tunc, “Schedules for a 
two-stage hybrid flow shop with parallel 
machines at the second stage,” International 
Journal of Production Research, 29 (7), 
1489–1502 (1991). 
15. Gupta, J.N.D., A.M.A. Hariri and C.N. Potts. 
“Scheduling a two-stage hybrid flow shop with 
parallel machines at the first stage”. Annals of 
Operations Research, 69, 171–19 1(1997). 
16. Gupta, J.N.D. and E.A. Tunc, “Scheduling a 
two-stage hybrid flowshop with separable setup 
and removal times,” European Journal of 
Operational Research, 77, 415–428 (1994). 
17. Gupta, J.N.D., k. Krüger, V. Lauff, F. Werner 
and Y.N. Sotskov, “Heuristics for hybrid flow 
shops with controllable processing times and 
assignable due dates,” Computers and 
Operations Research, 29 (10), 1417–1439 
(2002). 
18. Lee, I., Sikora R. and Shaw, M.J. (1997). A 
genetic algorithm based approach to flexible 
flow-line scheduling with variable lot sizes. 
IEEE Transactions on Systems, Man and 
Cybernetics, 27(1):36–54. 
19. Wang, L. and D., Li., “A scheduling algorithm 
for flexible flow shop problem,” Proceedings of 
the 4th World Congress on Intelligent Control 
and Automation, New York: IEEE, 4, 
3106–3108. (2002) 
20. Nowicki, E. and C. Smutnicki, “The flow shop 
with parallel machines: a tabu search approach,” 
European Journal of Operational Research, 106 
(2–3): 226–253 (1998). 
21. Marimuthu, S., S.G. Ponnambalam and N. 
Jawahar, “Evolutionary algorithms for 
scheduling m-machine flow shop with lot 
streaming,” Robotics and Computer-Integrated 
Manufacturing, 24 (1), 125-139 (2008). 
22. Kia, H.R., H. Davoudpour and M. Zandieh, 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                      2010 年 8 月 5 日 
報告人姓名 徐旭昇 服務機構
及職稱 
元智大學工業工程與管理研究所
副教授 
     時間 
會議 
     地點 
7 月 25 – 28 日 
Awaji Island, Japan 
本會核定
補助文號
 NSC 98-2221-E-155-039 
會議 
名稱 
 (中文) 電腦與工業工程國際研討會 (第 40 屆) 
 (英文) CIE40 – 40th International Conference on Computers and Industrial 
Engineering 
發表 
論文 
題目 
 (中文) 
 (英文) A Competitive Evolution Strategy Memetic Algorithm for 
Unrelated Parallel Machine Scheduling to Minimize Total Weighted 
Tardiness and Flow Time 
報告內容應包括下列各項： 
一、參加會議經過. 
7/25 – 下午報到並參與茶會，與數位學者交談 
7/26 – 早上 9.00-10.50 出席開幕大會並聆聽 Keynote Talk 與 Plenary Talk 
11.00 – 12.20 主持 MA-Ea (Applied Operations Research) Session，同時口頭報告
發表論文  
13.20 – 14.40 出席 MP-Eb Session 
14.40 – 16.00 出席 MP-Ec Session 
7/27 – 下午參與數個本系研究生之論文發表，晚上參加 Banquet 
 
二、與會心得 
主題與內容對工業工程與管理未來發表很有幫助，提供許多研究方向；同時會議地
點很好，風景甚佳， 
 
三、考察參觀活動(無是項活動者省略) 
 
四、建議 
 
 
五、攜回資料名稱及內容 
Proceeding 論文 CD 
 
六、其他 
 
 
 
 
 
附
件
三
 
The paper is organized as follows. Section 2 describes the 
problem. Section 3 illustrates the solution methods. Section 4 
presents the numerical results. Section 5 concludes the paper. 
II. PROBLEM DESCRIPTION  
The BIO-UPMSP under study has the following features: 
(1) the problem contains M unrelated parallel machines and J 
jobs; (2) each job has its own due date, and may also have a 
different processing time depending on the machine assigned; 
(3) each machine is allowed to process one job at a time, where 
the processing is non-preemptive; (4) setup times are job 
sequence- and machine-dependent; (5) two objectives are 
considered: minimizing total weighted flow time and total 
weighted tardiness. The following are notations and 
mathematical model for the BIO-UPMSP. 
 
• Notations: 
m:  machine index, m = 1,…, M 
j:  job index, j = 1,…, J 
M:  total number of available machines 
J: total number of jobs 
pjm:  processing time of job j performed by machine m 
sijm: setup time of job j following job i on machine m 
dj: due date of job j 
μj: weight assigned to completion time of job j 
νj: weight assigned to tardiness of job j 
 
• Decision variables: 
xijm = 1 if both jobs i and j are processed on machine m, and        
job i immediately precedes job j; otherwise, xijm = 0. 
Cj = completion time of job j 
Tj = tardiness of job j; Tj = max{0, Cj – dj} 
 
• Mathematical Model: 
⎟⎟⎠
⎞
⎜⎜⎝
⎛
⋅⋅= ∑ ∑
= =
J
j
J
j
jjjj TCffMinimize
1 1
21 ,),( νμ   (1) 
s.t. 
01 ≥−⋅+++− )x(M)spC(C ijmbigijmimij       
      M,...,m,ji,J,...,j,i 11 =≠=     (2) 
0≥−≥ jjjj T;dCT    J,...,j 1=  (3)   
In the model, equation (1) shows the two objectives 
considered in the problem. Constraint set (2) specifies the 
relationships between finish and start times of jobs processed 
on the same machine; the inequality is invalid if job i and job j 
are not processed on the same machine and/or job i does not 
immediately precede job j. Constraint set (3) defines the 
tardiness of job j.  
The problem to be tackled is NP-hard in the strong sense. 
Pinedo [12] indicates that the single machine problem, 
∑ ⋅ jj T|| ν1 , is NP-hard in the strong sense and 
∑ ⋅ jjm C||Q μ  is also NP-hard. This implies that the problem, 
)T,C(|s|R jjjjijmm ∑∑ ⋅⋅ νμ , is strongly NP-hard, where 
Rm represents unrelated parallel machines and Qm uniform 
parallel machine. 
III. PROBLEM SOLVING APPROACH 
A. Normalization of objective functions 
The problem includes two interrelated parts: partitioning 
jobs into groups, and optimizing the assignment between job 
groups and machines under each partition. Let gk be the kth job 
group, {gk} = (g1,…, gM), and Ω = {{gk} | ∪ gk = J, gi ∩ gn = 
φ} be the set of all possible partitions. The two objectives 
),( ∑∑ ⋅⋅ jjjj TC νμ  can be calculated when each gk is 
assigned to a specific machine with a job processing sequence. 
For a partition {gk} = (g1,…,gM), there exists a number of 
potential efficient (or non-dominated) solutions, some of 
which may be eliminated by better quality potential efficient 
solutions found in other partitions. 
Based on the aforementioned arguments and given an 
assigned weighted vector (w, 1-w) for the two objectives, we 
define the weighted sum of the two objectives for gk processed 
on machine m as follows.  
∑∑
∈∈
⋅⋅−+⋅⋅=
kk gj
m
jj
gj
m
jjk TwCwwmgh
δδ νμδ ,, )1(),,,( ,  
where δ represents job sequence, δ,mjC the completion time of 
job j, and δ,mjT  the tardiness of job j on machine m, 
respectively. 
The two objectives, total weighted completion time and 
total weighted tardiness, are not evaluated on a 
commensurable basis. Generally, the former is much larger 
than the latter. In order to make the objective weighted vector 
meaningful and effective in solution search, we define the 
normalization factors on the two objectives as follows: 
)( ,1
m
WSPTkgF δ = total weighted flow time of processing 
group k on machine m using the weighted shortest processing 
time rule. Likewise, )( ,1
m
WLPTkgF δ  is obtained by applying 
weighted longest processing time rule. A normalization factor 
of the first objective takes the average of the two values above. 
The first normalized objective is ),,(1 δmgf k   
))}()(/(),,(,1{ ,1,11
m
WLPTk
m
WSPTkk gFgFmgFMin δδδ += .       
Similarly, the second normalized objective uses the 
average value of weighted earliest due date rule (WEDD) and 
weighted latest due date rule (WLDD) as the normalization 
factor: 
D. Genetic operator 
Fig. 2 illustrates an example of crossover operation with 6 
jobs and 2 machines. In the crossover, the key number of a job 
in one parent will be exchanged with its counterpart only if the 
sum of their decimal values is greater than 1. In the example, 
since the sum of the two decimal values of the first genes is 
0.54+0.78 >1, the child will inherit the gene value from parent 
1; on the other hand, the child will inherit its second gene from 
parent 2, since the sum is 0.59+0.23<1. Such a crossover is an 
effective diversification mechanism, and will generally 
produce a pair of offspring with structures that are very 
different from their parents. Thus mutation operator is not 
deemed necessary in the proposed evolutionary algorithms. 
E. Multi-objective evolutionary algorithms 
This research develops a hybrid evolutionary algorithm, 
namely, Competitive Evolution Strategy Memetic Algorithm 
(CESMA), to solve the BIO-UPMSP. The CESMA is 
compared with two well known multi-objective evolutionary 
algorithms termed Non-dominated Sorting Genetic Algorithm 
(NSGAII, Deb et al. 2000) and Strength Pareto Evolutionary 
Algorithm (SPEA2, Zitzler et al., 2001) in several 
performance metrics. 
 
Figure 2. An example of crossover operation 
1) CESMA 
This CESMA extends the algorithmic concept of SPEA2. 
In addition to maintaining one elite archive (EAt) at each 
generation t that assists in the algorithm convergence, the 
CESMA uses an inefficient archive (IAt) to prevent early 
convergence of the evolutionary process, and enable the 
memetic algorithm to search for solutions in a more extensive 
space. At each generation, two parallel memetic procedures 
that share the total number of crossover operations are used, 
one is SPEA2 with WBM and the other is WPEA (Weakness 
Pareto Evolutionary Algorithm) with WBM. WPEA is similar 
to SPEA2, but assigns fitness in a converse manner. In WPEA, 
the more dominated solutions are given better fitness values. 
We shall term the SPEA2 + WBM as EAMA (efficient 
archive memetic algorithm), and the WPEA + WBA as IAMA. 
The competitive scheme for the number of crossovers 
assigned to SPEA2 and WPEA is described as follows: 
Let Pt denote the generational population at generation t, 
and F1(Pt) the efficient front of Pt. We define nt as the number 
of solutions in F1(Pt) produced by applying EAMA, i.e., a 
result of using Pt and EAt. Further, we define an adaptive 
factor rt = (nt + ρ) / (|F1(Pt)| + ρ), which will allocate the 
number of crossover operations to EAMA for the next 
generation. The parameter ρ > 0 can avoid the possibility of rt 
= 0, as well as an early convergence. A large value of ρ will 
enhance the diversification search effect. The ratio rt will 
change with each generation. The population Pt+1 will contain 
tt rP ⋅||  individuals produced by EAMA and )1(|| tt rP −⋅  
individuals by IAMA. N  
The update procedure for EAt in each generation follows 
the EAMA. A fixed size N  is determined for EAt before the 
algorithm begins. At any generation step, the first front of Pt 
will enter EAt to compete for occupancy. Any dominated 
solutions will be removed from EAt during the competition. If 
the resulting archive size is more than N , then the clustering 
algorithm used in SPEA2 is applied to trim some potential 
efficient solutions in order to maintain the EAt size at N . 
On the other hand, to update IAt for each generation, the 
last front of the generational population is introduced to IAt , 
and most dominated solutions will be kept. Likewise, when 
the resulting IAt contains more than N  solutions, the 
clustering algorithm is employed to cut the population to the 
required limit. 
2) Other MOHEAs 
The main framework of NSGAII generally follows [9]. 
NSGAII-FW and NSGAII-RW differ in the amount of time 
which weighted vector selection is used. When solving a 
problem instance, the NSGAII-FW executes seven population 
evolution runs, each of which uses one of the aforementioned 
seven weight vectors. On the other hand, the NSGAII-RW 
generates a random weighted vector for each generation, while 
the algorithm also implements seven population evolution 
runs. In NSGAII, all individuals of population Pt are sorted 
into four ranks based on their domination levels. 
The framework of SPEA2 in general follows [10]. Unlike 
NSGAII, which does not use extra space to store efficient 
solutions as the population evolves, SPEA2 creates an 
efficient archive EAt which will be updated at each generation. 
In the SPEA2, both RW and FW search strategies are applied 
with the aim of covering the whole possible Pareto optimal 
front. 
In both NSGAII and SPEA2, WBM is used in the 
decoding method as well. 
IV. SIMULATION RESULTS 
An experiment was conducted to investigate the 
performance of the proposed algorithms. All algorithms were 
coded in Visual Studio C++.NET, and implemented on a 
computer with Intel core dual 1.8GHz and 2 GB DDRII 566. 
 
A. Generating test instances  
Three instances of the same problem size, 200 (jobs) x 10 
(machines), were generated according to [13]. The processing 
time of each job is a random number from the interval [50, 
150]. The due date of a job is generated using two factors, τ 
and R. Here, τ is the tardiness factor, and the higher the τ 
V. CONCLUSIONS 
Over the years, researchers have focused on the machine 
scheduling problem with a single objective. However, in 
practice, the goal of management is frequently multi-fold, and 
prefers a set of quality alternatives for decision making. This 
research studies the unrelated parallel machine scheduling 
problem considering job sequence dependent setup times with 
two objectives: minimizing total weighted flow time and total 
weighted tardiness. 
In this study, we propose matching-improvement 
evolutionary algorithms using the framework of NSGA-II, 
SPEA2 and self-developed CESMA to seek efficient solutions 
for the BIO-UPMSP. Our computation results indicate that the 
algorithms utilizing WBA perform considerably better than 
those not. However, the former requires much more 
computation efforts than the latter. On the other hand, 
algorithms with RW outperform those using FW in terms of 
spread index. In particular, the proposed CESMA is superior 
to the others in various test instances with respect to two 
proximity measures: GD and purity, and pairwise comparison 
measure: PDC. CESMA uses two dissimilar-featured archives 
and exploits the competitive co-evolutions, which yield a 
bigger fluctuation during the solution searching process and 
have a better chance of finding quality solutions. 
ACKNOWLEDGMENT  
This research was supported by the National Science 
Council in Taiwan under grant NSC98 - 2221- E - 155 - 039. 
REFERENCES 
 
[1] C. Silva and J.M. Magalhaes, “Heuristic lot size scheduling on unrelated 
parallel machines with applications in the textile industry”, Comput Ind 
Eng, Vol. 50, pp 76-89, 2006. 
[2] L. Yu,  H.M. Shih,  M. Pfund, W.M. Carlyle, and J.W. Fowler, 
“Scheduling of unrelated parallel machines- An application to PWB 
manufacturing”, IIE Tran, Vol. 34, No. 11, pp 921-931,2004. 
[3] Y. Wu and P. Ji, “A scheduling problem for PCB assembly-A case with 
multiple lines”, Int J Adv Manuf Tech, Vol. 43, pp 1189-1201, 2009 
[4] D. Yang, “An evolutionary simulation-optimization approach in solving 
parallel-machine scheduling problem – A case study”, Comput Ind Eng, 
Vol. 56, pp 1126-1136, 2009. 
[5] R. Logendran, B. McDonell and B. Smucker, “Scheduling unrelated 
parallel machines with sequence-dependent setups”, Comput Oper Res, 
Vol.34, No. 11, pp 3420-3438, 2007. 
[6] A. Allahverdi, C.T. Ng., T.C.E. Ceng and M.Y. Kovalyov, “A survey of 
scheduling problems with setup times or costs”, Eur J Oper Res, Vol. 
187, pp 985-1032, 2008. 
[7] V. D Suresh, “Chaudhuri Bicriteria scheduling problem for unrelated 
parallel-machines”, Comput Ind Eng, Vol. 30, 77-82, 1996. 
[8] K. Jansen, and L. Porkolab, “Improved approximation schemes for 
scheduling unrelated parallel-machines”, ACM Symposium on Theory 
of Computing, pp 408-417, 1999. 
[9] K. Deb, A. Pratap, S. Agarwal and T. Meyarivan, “A fast and elitist 
multi-objective genetic algorithm: NSGA-II”. IEEE T Evolut Comput, 
Vol. 6, pp 182–197, 2002. 
[10] E. Zitzler, M. Laumanns and L., Thiele, “SPEA2: Improving the 
strength pareto evolutionary algorithm”, Comput. Eng. Netw. Lab. 
(TIK), Swiss Federal Institute of Technology (ETH), Zurich, 
Switzerland, Tech. Rep.103, 2001. 
[11] H. W. Kuhn,  "The Hungarian Method for the assignment problem", Nav 
Res Logist Q, Vol. 2, pp 83–97, 1955. 
[12] M. Pinedo, “Scheduling Theory, Algorithms and Systems (2nd edition)”, 
Prentice-Hall, Inc., A Simon & Schuster Company Englewood Cliffs, 
New Jersey, 2008. 
[13] Y. H. Lee and M., Pinedo, “Scheduling jobs on parallel machines with 
sequence-dependent setup times”, Eur J Oper Res, Vol. 100, pp 464-474, 
1997. 
[14] S. Bandyopadhyay, S. K. Pal and B. Aruna, “Multi-objective GAs 
quantitative indices and pattern classification”, IEEE T Syst Man Cyb – 
part B, Vol. 34, No. 5, pp 2088-2099, 2004. 
[15] K. Deb, (2001). Multi-Objective Optimization using Evolutionary 
Algorithm. Wiley, Chichester. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：徐旭昇 計畫編號：98-2221-E-155-039- 
計畫名稱：多目標啟發最佳化演算法於兩目標一般性彈性流線型生產排程問題解算效果之探討與分析
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 0 100% 
篇 
CIE40 – 40th 
International 
Conference on 
Computers and 
Industrial 
Engineering 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
