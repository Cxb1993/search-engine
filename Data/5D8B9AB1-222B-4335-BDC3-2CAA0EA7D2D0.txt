 1
一、中文摘要 
本文是全程計畫的第一階段研究，旨在仿生物免
疫系統對抗多種入侵抗原的免疫行為模式，以結合輕
鏈與重鏈比例突變運算及 B 細胞群體的群集化方
法，建立可求解多極值的免疫最佳化演算法。除了奠
定基礎仿生免疫最佳化理論及技術外，本文特別改良
一般動態式極值點集演算方法，以有限的搜尋點求解
具有多個極值點的題目，得到優於文獻所列的結果，
證明本文所發展的免疫演算法具有更穩健的多極值
最佳化求解性能。預定將以本研究之成果，繼續發展
全面仿生免疫最佳化的其他演算模型與工程應用。 
關鍵詞：免疫演算法，進化式計算，全域最佳化，多
極值最佳化，工程最佳化 
 
Abstract 
The main purpose of this project is to develop a 
non-gradient based optimization algorithm by utilizing 
the immune theory solving multiple optimum points 
including global and local search in feasible domain. 
The somatic hyper mutation and recombination are 
simulated in evolutionary development for creating 
diversifying off springs.  This evolution technique is 
fundamental for constructing the effective and robust 
optimization searching algorithm. Another critical 
investigation focuses on the method of locating both 
global and local optimums.  In the report, a parallel 
clustering concept combines regeneration that yields to 
the most probable potential local optimal points. A 
variety functions are examined for further verified and 
improving the algorithm.  Five design parameters are 
required to setup for solving the problem. The turning 
strategy of selecting those parameters is under 
investigation. 
Keywords: Immune system algorithm, evolutionary 
computation, global optimization, multi-modal 
optimization, engineering optimization 
 
二、緣由與目的 
免疫演算法(Immune Algorithm, IA)是以生物免
疫原理為基礎，發展類似免疫細胞的辨識、增殖、突
變與比對等作用，以群體(population)同步處理可行解
搜尋。de Castro及Timmis於2002年提出類免疫演算法
(artificial IA)[6]用於求解多極值問題，此方法具有進
化式演算法(Evolutionary Algorithm)快速且有效的全
域極值搜尋能力，也有可平行處理多個搜尋點及保存
區域極值的特點，適合多極值問題的求解。 
在數值最佳化的求解上，多極值的數值問題一
直是較困難的。經由文獻調查得知，可有效求解多極
值問題最佳化的人工智慧方法，有遺傳演算法
(Genetic Algorithm, GA[1])、Tabu搜尋法(Tabu Search, 
TS[2][3])及IA [6][7][8])。這些演算法對於全域極值的
搜尋效率與穩健性，都具有良好的貢獻。但僅文獻[3]
與[8]提出對局部極值的求解方法。文獻[3]為Tabu搜
尋與模擬退火(Simulated Annealing, SA)的混合式演
算法，研究得知仍無法一次求解大量極值問題的全部
極值。以具有760個極值點的Shubert function為例，
其全域極值高達18個，一次求解全部的全域極值是困
難的，僅有40%至70%的成功率(Appendix A[3])。文
獻[8]的免疫演算法為求解全部多極值的免疫演算
法，但僅對2維題目求解，不適合求解多變數問題。 
本文首先敘述免疫系統對抗疾病的原理及方法，模仿
其快速且精確的免疫能力，接著建構穩健有效的仿生
免疫演算模型，再結合最佳化理論發展免疫系統演化
法最佳化設計及解題流程，用於求解具有多極值的數
學應用題，驗證所發展的 IA 具有穩健有效的多極值
解題能力。 
 
三. 類免疫系統原理 
當生物體受到外來細菌、病毒及黴菌等的微生
物入侵時，生物體內的對抗機制稱為免疫系統
(immune system)。外來微生物引發免疫反應的因子，
稱之為抗原(antigen)。免疫系統針對不同抗原所產生
具有專一性對抗武器稱之為抗體(antibody)。免疫系
統產生此專一性對抗武器為淋巴球，主要區分為B淋
巴球及T淋巴球(或稱之為B細胞及T細胞)。在N. K. 
Jerne[4]的免疫系統理論，說明抗體決定位(paratope)
的構造。抗體決定位為B細胞或T細胞的表面受體上
具有與抗原決定位(pitope)結合的結構，一旦paratope
與epitope於結構外形達到互補，即產生辨識關係(抗
原－抗體關係)。上述關係使免疫系統將外形與抗原
相似度高的B細胞給予增殖訊號，相似度低的B細胞
則給予抑制訊號。經由不斷演化則B細胞群體具有整
體合作辨識與撲殺抗原的能力，仿其辨識、演化及撲
殺抗原的流程繪於圖 1。設計變數 xi 可表示為
epitope，成功演化所得之B細胞將吻合抗原的
epitope，稱之為抗體。 
 
 
 
圖1 免疫系統辨識、演化及撲殺抗原流程圖 
 
B細胞受體在構造上具有二條相同的重鏈(heavy 
chain)及二條相同的輕鏈(light chain)所組成的Y型結
構，每條鏈結上都具有一個不同基因排序的變異區
(variable region)及一個較穩定的固定區 (constant 
region)。變異區產生大量基因突變，是結合抗原的主
要區域。重鏈的變異區可分為： Variable(V)、
Diversity(D)及Joining(J) 三段，而輕鏈只有Variable(V)
 3
進行演化，分別為生殖區 (Production)、演化區
(Evolution)及記憶區(Memory)。如圖4所示，生殖區
產生B細胞使演化區保持一定數量的B細胞群體，演
化區為進行突變、比對與選擇的區域，此區內多個B
細胞同步辨識抗原。若有B細胞可辨識抗原，則將其
移入記憶區保存，由生殖區再生新的搜尋點補足演化
區中因收斂或抑制的極值點。演化區中的搜尋點為固
定的數目N，但整體演算法為動態的極值點搜尋法，
改善一般進化式演算法使用固定的群體大小，造成無
法搜尋到全部極值點的缺點。 
 
 
 
圖4 免疫演算分區處理流程圖 
 
上述改良式動態極值點集免疫演算的求解步驟
扼要敘述如下： 
1. 於變數上下限間平均分佈方式產生 N 個初始假設
極值點，設定最大迭代次數 T，增殖倍數 M。 
2. 計算假設極值點的目標函數值f(Xi)並排序 
3. 增殖 
4. 判定變數的突變方式(基因重組及點細胞高度突
變) 
5. 計算突變比例參數、設定突變量及辨識搜尋區域 
計算所有複製增殖後搜尋點 jiX , 的目標函數值
f(Xi,j)，並將 f(Xi,j)值轉換為正常化(Normalized)，寫成 
∈−
−=
1N
1ji
ji
)(X
ff
ff
f~ ,, [0,1]   (3)  
6. 採用輕鏈與重鏈突變運算，輕鏈突變範圍 
( 200 ji .f
~
, ≤≤ )，重鏈突變範圍( 170 ji ≤< ,f~. )，合併重
鏈輕鏈突變範圍( 7020 ji .f
~. , ≤< )。 
7. 辨識與去除內極值點集 
經過增殖與突變後的搜尋點，保留目標函數值最小的
搜尋點，其餘搜尋點抑制並移出極值點集。 
8. 比對演化區與記憶區內極值點集 
演化區內若有任一假設極值點與記憶區內極值點距
離小於群集半徑 R，則判定屬於同一極值點集內，抑
制演化區的假設極值點。 
9. 重整演化區內極值點集 
將上一步驟演化區內抑制的假設極值點以變數上下
限間平均分佈方式重新產生，使演化區中保持 N 個
假設極值點。 
10. 若收斂，記憶區中的極值點即為全部極值，停止
演算並輸出結果。設定世代數 t=t+1 並回到步驟 2。 
 
六. 多極值例題求解 
6.1 de Castro and Timmis function 
 
Minimize 144)(F 22111 −++−= )sin()sin( πππ XXXXX  
21j22 j ,, =≤≤− X     (4) 
本例題取自 de Castro 等提出的 An Artificial 
Immune Network for Multimodal Function 
Optimization 和 Meng 等學者提出的 A Novel Clonal 
Selection for Multimodal Function Optimization 論文
中，為具有 4 個全域極值的多極值問題，詳細極值點
分佈情況如圖 5 所示。本例題原為最大化目標函數型
式，本文為符合解題流程設計，改為最小化型式。使
用本文之改良式動態極值點集免疫解題流程求解，參
數設定為假設極值點數目 100，最大迭代次數 5000，
增殖倍數 50，抑制半徑 0.01。經過 586 次迭代後收
斂，共得到 100 個極值點，其中包含 4 個全域極值點
(表 1)與 96 個區域極值點。將所得極值點繪於求解平
面上，如圖 6 所得極值點分佈圖。與文獻[8]結果比
較(圖 7)，文獻[8]結果有少數未求得的極值點，其結
果證明本文發展的免疫演算法有更佳的極值搜尋能
力。 
 
 
 
圖 5 )(F1 X 函數極值點於求解空間分佈圖 
 
 5
次求得全部的全域極值點，其搜尋的穩健性受到大量
區域極值的影響。圖 12 展示，本題有大量的區域極
值，其全域極值無法一次求解，需多次迭代方可得
到，但其全域極值與區域極值(如圖 13 所示)的搜尋
具有快速收斂的特性。本文所使用的多極值最佳化演
算法不僅可穩健得到 18 個目標函數相同但點不同的
全域極值點，同時可找到其他 742 個區域極值點，證
明本文所發展的多極值免疫演算法具有精確性與穩
健性，適合於大量極值問題的求解。 
 
 
 
圖 10 )(F2 X 函數極值點於求解空間分佈圖 
 
 
 
 
圖 11 本文求解 )(F2 X 極值點分佈圖 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 12 )(F2 X =-186.73 的全域極值收斂圖(共 18 點) 
 
 
 
 
圖 13 )(F2 X =-7.72 最末組區域極值收斂圖(共 48 點) 
 
 
表 2 )(F2 X 函數搜尋結果(前 18 個極值點) 
 
 
 
 
極值 X1 X2 F2(X) 收斂世代
1 -7.0835 4.8581 -186.7309 288 
2 -7.7083 -7.0835 -186.7309 642 
3 5.4829 -1.4251 -186.7309 1189 
4 -0.8003 -1.4251 -186.7309 478 
5 4.8581 5.4829 -186.7309 948 
6 4.8581 -7.0835 -186.7309 876 
7 -7.7083 5.4829 -186.7309 267 
8 -0.8003 -7.7083 -186.7309 878 
9 -1.4251 5.4828 -186.7309 1154 
10 5.4829 4.8581 -186.7309 994 
11 -7.0835 -1.4252 -186.7309 291 
12 4.8580 -0.8003 -186.7309 168 
13 5.4829 -7.7084 -186.7309 255 
14 -1.4251 -0.8003 -186.7309 248 
15 -7.0835 -7.7082 -186.7309 332 
16 -7.7082 -0.8003 -186.7309 108 
17 -1.4250 -7.0835 -186.7309 1248 
18 -0.8003 4.8582 -186.7308 359 
X2 
X1 
f(X) 
Generation 
)( X1F
Generation 
  行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
 
                                                      97 年  9  月 19  日 
 
  報    告    人 
  姓          名  
史  建   中  服 務 機 關 
 及  職  稱  
淡江大學機械與機電工
程學系  專任教授 
           時  間 
  會   議 
           地  點   
自 97 年 9  月 2 日 
至 97 年 9  月 5 日 
Athens, Greece 
 本 會 核 定 
            
 補 助 文 號 
 
NSC 97-2221-E032-007 
                    
會  議  名   稱 
  (中文) 第九屆國際計算結構科技及第六屆國際工程計算科技研討會
議 
  (英文) The Ninth International Conference on Computational Structures 
Technology and The Sixth International Conference on 
Engineering Computational Technology 
                    
 發 表 論 文 題 目
  (中文) 單切策略的回應表面結構最佳化於模糊限制題目 
  (英文) Response Surface Based Structural Optimization with Single-Cut 
Strategy for Fuzzy Limit Problems 
 報告內容應包括下列各項： 
 
 一、參加會議經過   
 
二、與會心得 
 
三、考察參觀活動(無是項活動者省略) 
 
四、建議 
 
五、攜回資料名稱及內容 
 
六、其他 
 
 
 
 
 
 
Acoustics and Vibration。  該結構動態系統及其振動分析，是筆者未來計畫中的最佳化設
計方向，在此研討會議中，得到了一些啟發。 在同一時段，我趕場至 Room Lambda 會場
的 Evolutionary and Non-Deterministic Methods in Structural Optimization。 這個會場的主題
正與筆者目前研究中的進化式最佳化方法出自同源，是仿生方法技術的延伸。 接著在
Room Lambda 會場的 16.00-18.00，筆者全程參與 Structural Optimization 及 Shape and 
Topology Optimization，主席是 Professor G. Venter，為筆者在美國博士班同校同所的學弟，
目前服務於南非共和國。 我發表的論文編號是 CST 170，題目是 ” Response Surface Based 
Structural Optimization with Single-Cut Strategy for Fuzzy Limit Problems”，發表時段為
16:00-16:15，那時場中約有三十位的與會者，在場中有三個提問。  
同時進行論文發表的 parallel sessions 最多時達到九個主題場所。 筆者參與了幾個其
餘 Sessions 的會議如下： 九月四日在 Room Ypsilon 3 (09:00- 10:30)，Stochastic 
Optimization Methods in Structural Analysis and Optimal Design。  在 VIP Lounge (11:00- 
12:30)，Genetic Algorithm and Neural Networks in Engineering。 在 Room Ypsilon 1 (09:00- 
10:30)，Automotive Engineering 及接著的 (11:00-12:30) Application of Finite Element 
Methods for the Analysis and Design of Steel and Concrete Structures。 全部議程於該日結束。 
以下是筆者與會時所配掛之胸牌掃瞄圖： 
 
                  
 
 
二、與會心得 
 
     本次會議以發行的期刊及出版商（Saxe-Coburg Publications）與當地大學資源結合所
(Extended Abstracts), Edited by B. H. V. Topping and M. Papadrakakis, Civil-Comp Press, 
ISBN 978-1-905088-21-8. 
3. Proceedings of the Sixth International Conference on Engineering Computational Technology 
(Extended Abstracts), Edited by M. Papadrakakis and B. H. V. Topping, Civil-Comp Press, 
ISBN 978-1-905088-21-9. 
4. Trends in Computational Structures Technology, Edited by B. H. V. Topping and M. 
Papadrakakis, Saxe-Coburg Publications, ISBN 978-1-874672-35-7. 
5. Trends in Engineering Computational Technology, Edited by M. Papadrakakis and B. H. V. 
Topping, Saxe-Coburg Publications, ISBN 978-1-874672-35-4. 
 
 
Two CD-ROM: 
1. Proceedings of the Ninth International Conference on Computational Structures Technology, 
Edited by B. H. V. Topping and M. Papadrakakis, Civil-Comp Press, ISBN 978-1-905088-22-5 . 
2. Proceedings of the Sixth International Conference on Engineering Computational Technology, 
Edited by M. Papadrakakis and B. H. V. Topping, Civil-Comp Press, ISBN 978-1-905088-25-6. 
 
 
2 
where a large amount design variables and constraints requires lots of computational 
work using the finite element analysis (FEA).  Thus, when one examines the nature 
of problems, a question arises: a certain structural optimization problem contains 
allowable fuzzy limits where some functions are implicitly computed by FEA 
software package so that the sensitivity analysis is difficult or not available to 
obtain.  How can one handle this type of problem especially in the case of a very 
large-scale engineering environment?  This paper simply reports an applicable 
algorithm in the design process to overcome such a specific challenge.  In this paper, 
the response surface (RS) based fuzzy design optimization (FDO) also has been 
extensively studied to overcome the difficult treatment of implicit function as well 
as the large-scale engineering environment.  An appropriate algorithm for yielding 
to the optimum also is under development in conjunction with the single-cut strategy 
to obtain a uniquely optimum and balance design. 
 
The published literatures [6, 7] for FNLP indicate that the level-cuts method is 
generally acceptable as the common approach for FDO problems.  The preferred 
design is obtained by predetermining a design level α .  However, such a crisp level 
is actually difficult to predetermine.  In this paper, we apply the single-cut strategy 
[8] that yields to a unique balanced design.  For combining the RSM in FNLP, there 
are several critical techniques, such as the design of experiment (DOE), the suitable 
mathematical model, the sequential optimum search process and the algorithm of 
computational method and process are required a further investigation.  In the 
original single-cut strategy for a FNLP problem with explicit function, the feasible 
value of minimum and maximum objective function are required to solve before the 
execution of the computational optimization.  However, they are impossible to 
obtain before the computation in the FNLP problems with implicit functions.  
Therefore, this paper presents an integrating algorithm that can parallel deal with 
design objective function and two extreme objective values simultaneously.  
Structural problems containing 10-bar planar truss, 72-bar, 216-bar and 360-bar 
space truss of large-scale problems are under studied to demonstrate the presented 
multidisciplinary design optimization (MDO) method.  This presented MDO process 
is a successive solution searching algorithm integrating with fuzzy theory, FEM, 
RSM and numerical optimization of sequential quadratic programming (SQP). 
 
 
2  Response Surface based Design Optimization 
 
There are four developments of improving the accuracy and efficiency of the RS for 
the FDO in this study.  They are the selection of suitable RS function, the 
investigation of design of experiment (DOE), the improvement of response quality, 
and the treatment of design space.  Due to the strategy of successive reducing the 
moving sub-region, the linear approximation model is adopted in this study.  During 
the computational process, the coefficient of the multiple determination is computed 
to evaluate the quality of approximation and then by the technique of reciprocal 
variables to promote the accuracy.  The experimental sampling technique and the 
solution search by the successive RSM are described as following. 
4 
bound and upper bound, Lix  and 
U
ix , respectively.  In general, the mathematical 
form of ( )Xf  and each )(Xjg  are in nonlinear nature, particularly, in certain cases 
they appear in the implicit form.  The RSM thus can be applied for building up the 
explicit approximate mathematical form providing to the numerical optimization. 
 
                    
 
Table 1 Sampling points of DOE used for 10 variables 
 
    A sequential RS approximation technique with a successive reducing design 
region is introduced herein.  First of all, a reducing sub-region strategy is presented 
6 
2. Once the resulting point from the optimization by the RS function locates inside 
the sub-region domain, reduce the sub-region to 50% of the previous sub-region, 
such as the region ABCD to EFGH shown in Figure 2(a).  If the resulting point 
locates on the boundary of sub-region, the reduction only occurs at the reverse 
direction, as shown in Figure 2(b) indicates the sub-region EFGH. 
3. In case of the resulting point locates at the outer region boundary at the first time; 
the strategy is demonstrated in Figure 2(c) with the movement of sub-region IJKL.  
In case of the resulting point locates at the outer region boundary at the second time; 
the strategy is demonstrated in Figure 2(d) with the movement of sub-region MNOP. 
4. In case of the resulting point locates at the outer region boundary more than two 
variables; the strategy is demonstrated in Figure 2(e) with the movement of sub-
region STUV. 
 
It is noted that the smaller of a sub-region, a more effective of searching 
operation.  In this work, the smallest default value of sub-region range is 0.1.  The 
stopping search criterion depends on the successive relative movement goes to 
vanish. 
 
2.3   Response Surface based Design Optimization 
 
A brief algorithm of successive RS based design optimization is presented as 
follows.  Some design examples are combined in the later FDO demonstrative 
examples. 
1. Using presented sampling points in DOE to build up the linear RS approximate 
functions of Eq. (1) and (2).  So that ( )Xf  and )(Xjg  are transformed to ( )XF  
and )(XjG , respectively. 
2. To make the RS in reality, technically, we apply ANSYS through command: Prob 
Design →  Response Surf →  Fit Resp Surf; that results in a coefficient of the 
multiple determinations.  A necessary modification is performed whenever the 
correction is required to improve the quality of the approximate function. 
3. Apply SQP to solve the RS based optimization problem to obtain an optimum.  
4. Examine the convergence by the general stopping criterion described in formal 
mathematical engineering optimization method. 
5. Apply the presenting technique of successive reducing design region to modify 
the next sub-region. 
6. Use the current optimal point as the new initial design and go to step 1.  Thus, this 
process is repeated until meet the convergence. 
 
 
 
3  Single-Cut Strategy in Allowable Fuzzy Limit Problem 
 
The basic concepts and procedures of conventional linear programming with fuzzy 
constraints (FLP) [9] can be applied to FNLP containing the allowable fuzzy limit.  
The general model of a FDO problem with allowable fuzzy limits is stated as: 
8 
4 Implementation of Response Surface into Fuzzy Limit 
Optimization Problem 
 
The model of a FDO problem now is to solve Eq. (4) containing the allowable fuzzy 
limit under some implicit constrained functions and/or the implicit objective 
function.  One can think of that both RSM based design optimization and the single-
cut strategy in dealing with such fuzzy environment should be merged in a solution 
algorithm.  The consequent section will introduce the implementation of RS into the 
solution search methodology with the single-cut strategy for allowable fuzzy limit 
problems.  
 
1. Using presented sampling points in DOE to build up the linear RS approximate 
functions of Eq. (1) and (4).  So that ( )Xf  and )(Xjg  are transformed to ( )XF  
and )(XjG , respectively.   
2. Using ANSYS through command: Prob Design→  Response Surf →  Fit Resp 
Surf, that results in a coefficient of the multiple determinations.  A modification is 
performed whenever the correction is required to improve the quality of approximate 
function. 
3. Apply SQP to solve the optimization problem containing some RS objective and 
constrained functions, i.e. Eq. (1, 7, 3).  In this step, the maxf  and minf can be 
obtained by the parameter α  equal to a constant value 1 and zero, respectively. 
4. Apply SQP to solve the optimization problem containing some RS objective and 
constrained functions, i.e. Eq. (1, 6, 7, 3), so that a temporary intermediate optimum 
*X  can be obtained. 
5. Examine the convergence by standard stopping criterion in formal mathematical 
optimization algorithm. 
6. Apply the presenting technique of successive reducing design region to obtain the 
further sub-region for the next step search. 
7. Use the updated optimal point *X  as the new initial design and goes to step 1.  
Repeat such the process until meet the convergence. 
Some demonstrative examples for this section and the previous section are presented 
in the following structural design optimization problems where the finite element 
method is applied for the stress and displacement analysis. 
 
5  Demonstrative Examples 
 
5.1 10-bar Planar Truss Design 
 
A ten-bar truss problem is shown in Figure 3(a) [11].  The material properties 
710=E  psi and 3/1.0 inlb=ρ .  The objective is to minimize the total structural 
weight.  The design variables are the cross-sectional areas of 10 members.  The 
constraints are the members’ stress computed by finite element analysis (FEA) 
10 
using FEA based fuzzy optimization, where 1329.18 and 1593.18 represent minf  
and maxf , obtained by α  equals to zero and one, respectively.  The iteration history 
shown in Figure 4 reflects the simultaneous evolution of )(Xf , maxf  and minf  
appeared in Table 2. 
 
 
Iteration )(X∗f  ∗α value )(maxIf  )(minIf  Deviation % Compare FE% 
1 1656.736 0.5241 1770.790 1553.185  13.81 
2 1514.737 0.5255 1657.507 1385.846 8.56 4.05 
3 1489.545 0.5121 1624.594 1360.869 1.65 2.34 
4 1459.258 0.5117 1599.846 1325.103 2.01 0.27 
5 1457.528 0.5152 1593.718 1323.775 0.12 0.16 
 
Table 2 Iteration record for 10-bar truss design 
 
 
 
                        
 
      Figure 4: Iterative history of )(Xf , maxf  and minf  in Table 2 for 10-bar. 
 
 
Table 3 shows a comparison of crisp design in [11], FEA based optimization in 
[10] and RSM based FDO in this paper.  The result in [11] means the crisp design 
that reasonably shows a larger )(X∗f  than that contained by the allowable fuzzy 
limit problem.  The unique )(X∗f  with corresponding ∗α value are 1455.168 and 
0.5228 [10], respectively.  The )(X∗f  is 1457.528 by RS based optimization has a 
good conformity from that obtained in [10].  The required numbers of computing 
FEA is about 50% of directly connecting to FEA program. 
12 
01)1(2.0
25.0
)()( , ≤−−− α
Δ
x
I
ij X
 (inch), j=1,…,4   i=1,2                    (13) 
 
01)1(2.0
25.0
)()( , ≤−−− α
Δ
y
I
ij X
 (inch), j=1,…,4  i=1,2                     (14) 
 
01)1(2.0
25.0
)()( , ≤−−− α
Δ
z
I
ij X
 (inch), j=1,…,4  i=1,2                     (15) 
 
where ∈α [0, 1] and 21.0 ≤≤ ix  in2, i=1,2,…,16.  This problem contains 17 
variables, 168 inequality constraints plus one equality constraint of Eq. (9).  
The problem was solved by the RSM base algorithm and the complete iteration 
record shown in Table 4.  The values of )8(minf  and 
)8(
maxf  are 313.301 and 
372.497, respectively; are very closed to that using FEA based fuzzy 
optimization, where 319.688 and 379.616 represent minf and maxf , 
respectively.  The iteration history shown in Figure 5 reflects the simultaneous 
evolution of )(Xf , maxf  and minf  appeared in Table 4. 
 
 
Iteration )(X∗f  ∗α value )(maxIf  )(minIf  Deviation % Compare FE % 
1 435.225 0.520 444.673 426.544  25.00 
2 315.356 0.501 335.212 295.575 27.59 9.48 
3 294.347 0.529 319.756 271.723 6.66 15.51 
4 295.792 0.461 307.484 282.113 0.34 15.22 
5 308.970 0.561 336.550 287.373 4.41 11.49 
6 331.808 0.530 362.316 304.715 7.47 4.89 
7 347.195 0.528 372.236 310.123 2.41 0.31 
8 349.642 0.504 372.497 313.301 0.72 0.39 
 
Table 4 Iteration record for 72-bar truss design 
 
 
Table 5 shows a comparison of crisp design in [12], FEA based optimization in 
[10] and RSM based FDO in this paper.  The result in [12] indicates the crisp design 
that reasonably appear a larger )(X∗f  than that obtained by the allowable fuzzy 
limit problem.  The unique )(X∗f  with corresponding ∗α value are 348.278 and 
0.5229 [10], respectively.  The )(X∗f  is 349.642 by RS based FDO results in a 
good conformity from that obtained in [10].  The required number of FEA is about 
the 30% of directly connecting to FEA program. 
14 
5.3 216-bar Space Truss Design 
 
      
                  (a)                                                     (b) 
 
Figure 6: (a) 216-bar and (b) 360-bar space truss with loadings 
 
A 216-bar truss is shown in Figure 6(a) in which the material properties 710=E psi 
and 3/1.0 inlb=ρ .  This problem is the extension of 72-bar with a three times 
height.  It also requires support two load conditions [12] as the same in 72-bar 
problem.  This structure has 12 levels.  Each level contains 4 independent variables 
so that there are 48 design variables in total.  The crisp allowable stress of each 
16 
Table 7 shows a comparison has been studied in this work where the crisp design 
using SQP, FEA based and proposed RSM based FDO in this paper.  The result of 
the crisp design reasonably shows a larger )(X∗f  than that of the constrained fuzzy 
limit problem.  The unique )(X∗f  with corresponding ∗α  value in FEA based 
design are 8930.473 and 0.5353, respectively.  However, )(X∗f  is 8908.265 by RS 
based FDO that has a good conformity from that obtained in FEA based 
optimization.  The required computation number by FEA is about 40% of directly 
connecting to FEA program. 
 
 
 
 
 
 
 
 
Crisp optimization using SQP： )(X∗f = 9711.169.  Computing FEA= 1340 times 
X*=[1.00035, 3.18043, 2.20150, 3.08747, 2.79998, 2.80097, 1.00052, 1.00084, 
6.79968, 2.73835, 1.00000, 1.00313, 10.4869, 2.92952, 1.00000, 1.00000, 
13.9669, 2.79905, 1.00000, 1.00000, 16.7999, 2.97019, 1.00000, 1.00000, 
18.8000, 2.79949, 1.00000, 1.00000, 21.8000, 2.92661, 1.00000, 1.00000, 
22.2868, 2.98283, 1.00000, 1.00000, 27.8000, 2.62077, 1.00000, 1.00000, 
31.7468, 2.59256, 1.00000, 1.00000, 31.8000, 2.69597, 1.00000, 1.00000] 
Fuzzy optimization using FEA： )(X∗f = 8930.473.  Computing FEA= 2786 times 
X*=[1.00000, 2.66498, 2.14383, 2.95934, 2.63955, 2.35849, 1.00000, 1.00000, 
6.62646, 2.22527, 1.00000, 1.00000, 10.3662, 2.38393, 1.00000, 1.00000, 
13.8306, 2.14116, 1.00000, 1.00000, 16.6645, 2.34091, 1.00000, 1.00000, 
18.6791, 2.18472, 1.00000, 1.00000, 21.6775, 2.30213, 1.00000, 1.00000, 
22.1797, 2.36020, 1.00000, 1.00000, 27.6791, 2.04643, 1.00000, 1.00000, 
31.6222, 2.02858, 1.00000, 1.00000, 31.6883, 2.11378, 1.00000, 1.00000] 
α=0.5353 
RSM based fuzzy optimization： )(X∗f = 8908.265.  Computing FEA= 1107 
times 
X*=[1.00000, 2.60000, 1.90000, 2.90000, 2.10000, 2.38081, 1.00000, 1.00000, 
6.11545, 2.76315, 1.00000, 1.00000, 9.40000, 2.56341, 1.00000, 1.00000, 
11.4000, 2.32454, 1.00000, 1.00000, 15.5216, 2.32189, 1.00000, 1.00000, 
18.6815, 2.61838, 1.00000, 1.00000, 20.4000, 2.39839, 1.00000, 1.00000, 
24.7613, 2.28670, 1.00000, 1.00000, 25.4000, 2.24690, 1.00000, 1.00000, 
28.6001, 2.43618, 1.00000, 1.00000, 30.4000, 2.56246, 1.00000, 1.00000] 
α=0.5453 
 
 
Table 7 Comparison for 216-bar truss design 
18 
solved by the RSM base FDO and the iteration record is shown in Table 8.  Because 
this problem has many design variables and constraints that result in the FEA based 
SQP optimization met difficulty in the computation.  However, the RSM bases FDO 
works well, the values of )10(minf  and 
)10(
maxf  are 23893.35 and 32742.01, respectively.  
They are confidently sure of closing to that using FEA based optimization.  The 
iteration history in Figure 7 reflects the simultaneous evolution of )(Xf , maxf  and 
minf  appeared in Table 8. 
 
Iteration )(X∗f  ∗α value )(maxIf  )(minIf  Deviation % 
1 52410.11 0.5225 53474.10 51437.58  
2 7777.964 0.5000 8018.821 7537.112 85.16 
3 16582.01 0.5001 17724.72 15439.86 113.19 
4 20803.34 0.5222 26272.21 15799.36 25.46 
5 23050.36 0.5479 28769.36 18330.41 10.80 
6 26263.62 0.3189 29038.93 20336.38 13.94 
7 27759.78 0.4154 32223.80 21476.91 5.70 
8 28047.46 0.4927 33086.84 22858.04 1.04 
9 27978.90 0.5406 32712.41 23956.42 0.25 
10 27948.11 0.5418 32742.01 23893.35 0.11 
 
Table 8 Iteration record for 360-bar truss design 
 
 
 
 
Figure 8: Iterative history of )(Xf , maxf  and minf  in Table 8 for 360-bar. 
 
Table 9 shows the optimum result by RSM base FDO for 360-bar design in this 
work.  The required numbers of FEA computation increases about 68% that is 
