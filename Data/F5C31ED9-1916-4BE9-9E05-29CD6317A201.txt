j 中，所有移除後可讓節點負載變輕的虛擬伺
服器 i 的集合，形成 jS 。在 jS 那些虛擬伺服
器要移除是由下列步驟來決定，首先將集合
中的虛擬伺服器，按照負載遞減排列，接著
再依續將最大負載的虛擬伺服器從 jS 移除並
放入 S，直到節點 j 負載變輕。 j
j H
S S


 第一階段:首先讓 S 中的虛擬伺服器依照負載
遞減排列，再利用 best-fit 策略將虛擬伺服器
i 從 S 中移除並分配給具有最適合剩餘空間
j jU W 的 light 節點 j，假設 S 中所有的虛擬
伺服器都被成功的分配，那麼演算法結束。
要是沒有一個 light 節點擁有多餘空間來容納
S中負載最大的虛擬伺服器，我們會在下一
個階段中，嘗試在一個 light 節點產生更多的
多餘空間來改善此情況。
 第二階段：藉著將在 S 上負載最重的虛擬伺
服器，與某負載較輕節點的虛擬伺服器做交
換，使負載較輕的節點能產生更多的剩餘空
間。這個演算法會在所有負載較輕節點中，
找出位於節點 j 中的負載最輕的虛擬伺服器
i，在不超出節點 j 負載能力下，與在 S 上負
載最重的虛擬伺服器 i 做交換，亦即 i il l 且
j i i jW l l U   。 如果不能找出這樣的虛擬
伺服器，這個演算法會以無法找出可能解而
結束。否則，演算法會重新回到第一階段。
圖 4：M2M 演算法
M2M 可以將多個虛擬伺服器做搬移，因此較 k-choices
可獲得較高的成功率，但 M2M 演算法在很多情況下
其成功率是不佳的，我們舉一個很簡單的例子。如圖
2 所示，系統有四個節點，同時每一個節點的容量只
有兩個可能（5 或 10）。在負載平衡之前，節點 A 是
唯一的負載較重節點，擁有兩個相同工作負載的虛擬
伺服器（VS1 和 VS2）。初始化時 M2M 先將超載節
點上之虛擬伺服器搬移至一個 S 集合，直到超載節點
不再超載為止。此例中，S={VS1}。M2M 演算法的第
一階段找不出有任何一個節點有多餘的空間可以容納
虛擬伺服器 VS1 的移轉。在第二階段，演算法找不到
任何一個虛擬伺服器，它的負載較 VS1 輕，並且在與
VS1 互換後不會超過原來負責節點的容量。因此，在
沒有可能的解的情況下，M2M 演算法將會終止。
v2
v1
Node a
v4
v3
Node b
v5
Node c
v6
Node d
v1
Size of loads 7
v2
7
v3
4
v4
4
v5
1
v6
1
Size of capacities
Node a
10
Node b
10
Node c
5
Node d
5
圖 1：M2M 演算法的問題圖示
文獻中 Migration-based 負載平衡演算法的第二缺失為
使用太多的虛擬伺服器。如 M2M 及 k-choice，都會因
為網路上的節虛擬伺服器點數量眾多，而產生出大量
的系統維護成本(overhead)[9,11]，同時、也都會在節
點要尋訪一個 key 時，產生較高的 Hop 數才能找到的
缺點。我們透過實驗，來了解 M2M 和 k-choices 兩個
負載平衡演算法中都會造成虛擬伺服器數量的增加的
情況。如圖 1 顯示 M2M 和 k-choices 隨著時間的增加
虛擬伺服器數量的增加情況。在(a)圖中，當工作量很
少時，在 k-choices 演算法造成 VS 的數量不斷的增
加。而對 M2M 而言，VS 的數量雖然是在一個範圍內
波動，但從圖中可知，其值介於 12 ~ 14 之間，VS 量
亦是相當多，將付出大量的系統維護成本及平均尋訪
的 hop 數增加的缺點。
0
5
10
15
20
25
30
35
TIME(S)
N
um
be
ro
fV
S
pe
rN
od
e
M2M KC
0
2
4
6
8
10
12
14
16
TIME(S)
N
um
be
ro
sV
S
pe
rN
od
e
M2M KC
圖 2 (a) 當系統負載較輕時 (b) 當系統負載較重時
原M2M演算法中，以4096個節點來說，每個節點所擁有
的VS數量平均約為12~14個，因此整個系統中有大約5
萬個左右的虛擬伺服器。因為虛擬伺服器數量眾多，
因此系統的維護成本自然就相當的大，同時每個節點
的尋訪成功時，所需的Hop數便會高出許多，這是
Migration-based負載平衡演算法的缺點。
3. 研究成果
針對文獻中 Migration-based 負載平衡演算法的第一個
缺失，我們提出一個改進的方法 M2M*，其精神大致
如下。以圖 2 例子說明，如果在虛擬伺服器交換時，
允許一個較大虛擬伺服器的與多個較小的虛擬伺服器
交換時，則合法的解就會被找到。因此若 S 集合中之
VS1 被允許與 節點 B 上之 VS3 及 VS4 交換時，節點
020
40
60
80
100
120
1 10 20 30 40
Query per node
N
um
be
ro
fV
S
pe
rn
od
e
VSM_CSD M2M K-C VSM_ED
圖7： Average number of resulting VS
我們在[4]中亦針對各種其他實驗情況，有深入之討
論。
1. M. Castro, P. Druschel, A-M. Kermarrec and A.
Rowstron, "SCRIBE: A large-scale and
decentralised application-level multicast
infrastructure", IEEE Journal on Selected Areas in
Communication (JSAC), Vol. 20, No, 8, October
2002
2. Chyouhwa Chen and Kuen-tseng Tsai, “The Server
Reassignment Problem for Load Balancing in
Structured P2P Systems,” IEEE Transactions on 
Parallel and Distributed Systems, VOL. 19, NO. 2,
FEBRUARY 2008
3. Chyouhwa Chen and Kuen-tseng Tsai, “Effect of
Heterogeneity on Static Load Balance Algorithm
Performance in DHT Systems,” Journal of the 
Chinese Institute of Engineers, 2008
4. Chyouhwa Chen, Ching-Bang Yao, So-Ming Liang,
“Towards Practical Virtual Server-based Load
Balancing for Distributed Hash Tables,”IEEE
International Symposium on Parallel and Distributed
Processing with Applications (ISPA-08), 2008
5. Brighten Godfrey, Karthik Lakshminarayanan,
Sonesh Surana, Richard Karp, Ion Stoica, Load
Balancing in Dynamic Structured P2P Systems
INFOCOM 04, also in Performance Evaluation:
Special Issue on Performance Modeling and
Evaluation of Peer-to-Peer Computing Systems,
2005.
6. P. Brighten Godfrey and Ion Stoica. Heterogeneity
and Load Balance in Distributed Hash Tables,
INFOCOM'05
7. K. Hildrum, J. Kubiatowicz, S. Rao, and B. Zhao.
Distributed Object Location in a Dynamic Network.
In ACM Symposium on Parallel Algorithms and
Architectures, Winnipeg, MB, Canada, August 2002
8. S. Iyer, A. Rowstron and P. Druschel, "SQUIRREL:
A decentralized, peer-to-peer web cache", 12th
ACM Symposium on Principles of Distributed
Computing (PODC 2002), Monterey, California,
USA, July 2002
9. Gerald Kunzmann, Andreas Binzenhöfer, Robert
Henjes, Analyzing and Modifying Chord's
Stabilization Algorithm to Handle High Churn Rates,
6th Malaysia International Conference on
Communications (MICC), 2005
10. Jonathan Ledlie and Margo Seltzer, Distributed,
Secure Load Balancing with Skew, heterogeneity,
and Churn, In Proceedings of IEEE INFOCOM
2005, March 2005
11. Jinyang Li, Jeremy Stribling, Robert Morris, M.
Frans Kaashoek and Thomer M. Gil. A Performance
vs. Cost Framework for Evaluating DHT Design
Tradeoffs under Churn. In Proceedings of the 24th
IEEE Infocom Mar 2005
12. G. R. Raidl and H. Feltl,“An improved hybrid
genetic algorithm for the generalized assignment
problem,” Proceedings of the 2004 ACM
symposium on Applied computing, pp. 990–995,
March 2004.
13. Venugopalan Ramasubramanian and Emin Gun Sirer.
Beehive: O(1) Lookup Performance for Power-Law
Query Distributions in Peer-to-Peer Overlays. In
Proceedings of Networked System Design and
Implementation (NSDI), San Francisco, California,
March 2004
14. Sean Rhea, Patrick Eaton, Dennis Geels, Hakim
Weatherspoon, Ben Zhao, and John Kubiatowicz.
Pond: the OceanStore Prototype, Appears in
Proceedings of the 2nd USENIX Conference on File
and Storage Technologies (FAST '03), March 2003
15. A. Rowstron and P. Druschel, "Storage management
and caching in PAST, a large-scale, persistent peer-
to-peer storage utility", ACM Symposium on
Operating Systems Principles (SOSP'01), Banff,
Canada, October 2001.
16. I. Stoica, R. Morris, D. Karger, F. Kaashoek, and H.
Balakrishnan. Chord: A scalable Peer-To-Peer
lookup service for internet applications. In
Proceedings of the 2001 ACM SIGCOMM
Conference, pages 149–160, 2001.
17. K.T. Tsai, and Chyouhwa Chen, A Server
Reassignment Algorithm for DHT Load Balance and
the Effect of Heterogeneity, IEEE GLOBECOM
Conference, San Francisco, November 2006
18. X. Wang and D. Loguinov, "Load-Balancing
Performance of Consistent Hashing: Asymptotic
Analysis of Random Node Join," IEEE/ACM
Transactions on Networking, vol. 15, no. 5, October
2007
19. Di Wu, Ye Tian, Kam-Wing Ng, On the
Effectiveness of Migration-based Load Balancing
Strategies in DHT Systems, Proceedings.15th
International Conference on Computer
Communications and Networks, ICCCN 2006.
20. p2psim: a simulator for peer-to-peer (p2p) protocols:
http://pdos.csail.mit.edu/p2psim/
二、 與會心得
由於這是我第一次參加國際會議，因此心裡很緊張。但是到了真正上台時，
結果過程很流暢，一些同領域的外國學生問了幾個問題，我都答的出來，也
因此讓我對於我未來的論文方向有更進一步的了解。
此外，我還參加了其他論文發表，由於我對Grid computing及
Publish-Subscribe Services較有興趣，因此對以下論文較有印象：
 Grid Computing
1. An Innovative Replica Consistency Model in Data Grids,
Jih-Sheng Chang and Ruay-Shiung Chang
2. An effective approach for consistency management of replicas in
Data Grid, Ghalem Belalem, Cherif Haddad and Yahya Slimani
3. A Utility-based Double Auction Mechanism for Efficient Grid
Resource Allocation, Chainan Satayapiwat, Ryusuke Egawa,
Hiroyuki Takizawa and Hiroaki Kobayashi
 Publish-Subscribe Services
1. Authorization Using the Publish-Subscribe Model, Qiang Wei,
Matei Ripeanu and Konstantin Beznosov
2. A Novel QoS-Enable Real-Time Publish- Xinjie Lv, Xin Li,
Yongyan Wang, Wei Liu and Hongan Wang
參加這場國際學術研討會，是一個很不錯的經驗，一方面可以跟不同的領域
的人互動，知道研究領域的最新動態。另一方面也可接觸不同國家的人，學
習他們的思維模式，提升自己的世界觀。
但在到處觀摩他人海報及口頭報告的時候，有時仍無法一眼看出他人研究的
重點所在，只能盡量累積經驗。並發現此次發表論文的作者，有些人在台上
吞吞吐吐，有些人則能夠非常清楚的將自己的研究向聽眾分享。對我來說，
以英文和外國學者交換心得是很新鮮的體驗，回國後必須要好好的加強英
文。
三、 建議事項
本人十分感謝國科會能提供補助，並且希望國科會能夠提供更多支持學者參
與學術活動的機會，提高國內的研究水平。
四、 攜回資料
參加本次會議一共攜回下列資料：
