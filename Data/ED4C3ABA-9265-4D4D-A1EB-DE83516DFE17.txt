ii 
中文摘要 
自從 Shannon 的通道編碼理論在 1948 年發表，證明了在最大可能性解碼
(maximum likelihood decoding, MLD)下，一個隨機選擇的碼可以提供達到通道容
量(capacity-achieving)的效能。此後，許多的研究陸續被發表，提供了有架構且
易於實現其解碼演算法的碼，是通道編碼中重要的一環。其中最早被發現可以達
到 Shannon Limit 的架構碼：渦輪碼(Turbo codes)在 1993 年被提出。 
低密度同位檢測碼(Low-Density Parity-Check codes, LDPC 碼)是一種線性區
塊碼（linear block codes）。最早是由 Dr. Gallager 在 1963 年的博士論文中所發表。
直到 1981 年，Tanner 將 LDPC 碼廣義化並且提出了其圖解的表示法，稱之為
Tanner graphs。LDPC 碼被證實在可加性白色高斯雜訊通道 (additive white 
Gaussian noise channel, AWGN)下，利用遞迴解碼(iterative decoding)可以達到和
Shannon Limit 相近的效能。因此，在各類通訊系統或資料儲存系統之高可靠度
的要求下，LDPC 碼變成是渦輪碼(Turbo code)的另一個強力競爭者。目前，LDPC
碼被廣泛使用在各種通訊系統上，例如： 802.11n、802.16e 等。 
在此報告中，我們提出一個接近通道容量且易於編碼的串接累加碼(serial 
concatenated accumulate codes)的架構。其中的元件碼(component codes)，擁有一
個簡單的2-狀態籬狀結構(2-state trellis structure)。因為此結構的特性，所以一個
非常低複雜度的軟性輸入輸出(soft-in/soft-out)解碼演算法因而產生。根據模擬，
和傳統的LDPC架構碼並使用BP演算法解碼的效能比較，可以提供更快的收斂速
度。 
iv 
目錄 
第一章 簡介.................................................................................................................. 1 
1.1 研究動機.......................................................................................................... 1 
1.2 報告之架構...................................................................................................... 2 
第二章 低密度同位檢測(LDPC)碼和重複累加碼(RA)碼 ........................................ 3 
2.1 Low-Density Parity-Check codes 介紹 ........................................................... 3 
2.1.1 LDPC 碼簡介及其表示法 ................................................................... 3 
2.1.2 遞迴解碼演算法.................................................................................. 5 
2.2 重複累加碼(Repeat Accumulate codes)介紹 ............................................... 15 
第三章 串接累加碼的架構及其遞迴解碼演算法.................................................... 18 
3.1 串接累加碼的架構........................................................................................ 18 
3.2 與重複累加(RA)碼的關連 ........................................................................... 21 
3.3 基於 2-state 的簡化版解碼演算法 ............................................................... 22 
第四章 輸入-輸出權重列舉(IOWE)及漸近效能(Asymptotic Performance) .......... 26 
4.1 輸入-輸出權重列舉 ...................................................................................... 26 
4.2 Simple Bound................................................................................................. 30 
第五章 模擬結果與效能比較.................................................................................... 33 
第六章 結論與未來發展............................................................................................ 41 
參考文獻...................................................................................................................... 42 
 
1 
第一章 簡介 
 
1.1 研究動機 
在 1948 年，Shannon 發表了一篇論文[18]，證明了在最大可能性解碼
(maximum likelihood decoding, MLD)下，一個隨機選擇的碼可以提供達到通道容
量(capacity-achieving)的效能。此後，大量研究如何建構擁有良好錯誤更正能力
的特定碼，陸續被發表，其中最早被發現可以達到 Shannon Limit 的架構碼：渦
輪碼(Turbo codes)在 1993 年被提出[2]。 
渦輪碼是由兩個或更多個迴旋碼，再加上許多交錯器(interleavers)所組成，
經由遞迴解碼(iterative decoding)，可達到極佳的效能。其編碼器的特徵是利用交
錯器產生類似隨機的碼字 (codeword)。解碼器的特徵是使用軟性輸入輸出
(soft-input soft-output)解碼，並將軟性訊息在不同解碼器間傳遞。此後，許多研
究證明了渦輪碼的效能，可以達到 Shannon Limit。 
在渦輪碼之後，學者重新研究低密度同位檢測碼(Low-Density Parity-Check 
codes, LDPC 碼)。它是一種線性區塊碼（linear block codes），最早是由 Dr. Gallager
在 1963 年的博士論文中所發表[6]。直到 1981 年，Tanner 將 LDPC 碼廣義化並
且提出了其圖解的表示法[20]，稱之為 Tanner graphs。之後，到了 1996 年，Wiberg
在博士論文[22]中將遞迴解碼(iterative decoding)以及圖論解碼廣義化之後，LDPC
碼終於開始嶄露頭角。 
而在經過許多模擬研究之後，LDPC 碼被證實在可加性白色高斯雜訊下
(Additional White Gaussian Noise, AWGN)利用遞迴解碼(iterative decoding)可以達
到和 Shannon Limit 相近的效能[11] [12] [13]，因此，這也是為什麼 LDPC 碼會這
麼廣受歡迎的原因之一。目前，LDPC 碼也陸陸續續地被廣泛使用並加以發揚，
並被應用在各種通訊系統上，例如：在 4G、802.11n、802.16e、MIMO-OFDM 上,…
3 
第二章 低密度同位檢測(LDPC)碼和重複累加碼(RA)
碼  
 
 在這個章節裡，我們將簡單介紹 LDPC 碼和重複累加碼(repeat accumulate 
code)。在渦輪(Turbo)碼之後，LDPC 碼被視為可以達到通道容量的另一種架構。
而 RA 碼則是被視為一個串接的類似渦輪(Turbo-like)碼，或者是 LDPC 的一個分
支。我們將在此介紹這兩種碼的架構。 
2.1 Low-Density Parity-Check codes 介紹 
透過許多 LDPC 碼的研究，我們知道 LDPC 碼在資料傳輸的過程中，可以
提供絕佳的錯誤更正能力。透過遞迴解碼演算法，這些碼可以達到和 Shannon 
Limit 相近的效能。在這個章節裡，我們首先將簡介 LDPC，並且介紹其表示方
法，包含矩陣表示法以及圖像表示法，一般稱為 Tanner graph[20]。章節的最後，
我們將介紹 LDPC 碼的遞迴解法演算法(Iterative Decoding Algorithms)。 
2.1.1 LDPC 碼簡介及其表示法 
LDPC是一種線性區塊碼（linear block codes），定義為一個二位元同位檢測
矩陣H 的零空間(null space)。根據LDPC碼原始的定義，同位檢測矩陣H 每行有
cw 個1，每列有 rw 個1，而 cw 及 rw 分別稱為行權重(column weight)與列權重(row 
weight)，且相對於碼的長度n 是非常小的。根據以上之定義，這類的碼稱為規則
型LDPC碼（regular LDPC code）。但如果H 每行1的個數不相同，或每列1的個
數不相同，則我們稱其為非規則型LDPC碼 (irregular LDPC code)。 
首先我們介紹矩陣表示法，因為LDPC碼是一種線性區塊碼，所以對於一個 ( , )n k
的LDPC碼，則可用一個向量空間 2nF 中的 k -維的子空間C 來表示。因此，我們可
5 
5 10
1 1 1 1 0 0 0 0 0 0
1 0 0 0 1 1 1 0 0 0
0 1 0 0 1 0 0 1 1 0
0 0 1 0 0 1 0 1 0 1
0 0 0 1 0 0 1 0 1 1
H

         
 
 
 
圖 2.1  (10,5) LDPC 碼及其相對應的 Tanner graphs 
 
2.1.2 遞迴解碼演算法 
Gallager 在 1963 年提出 LDPC 碼的同時也提出一個解碼演算法。這演算法
現在通常稱之為信息傳遞演算法（message passing algorithm），以下簡稱 MPA。
其非常相似於用在 Trellis code 中的最佳 symbol by symbol 解碼方式(maximum 
a posteriori, MAP)。假設給定一個接收到的訊息  0 1 1... ny y y y  ，考慮其後
置機率(a posteriori probability, APP)的運算。為了不失去通用原則，我們針對第 ic
位元的解碼，因此我們所專注的是計算 APP，  Pr 1|ic y 或者是 APP ratio（又
稱為相近似比率、likelihood ratio、LR）， 
    
Pr 0 |
Pr 1|
i
i
i
c y
l c
c y

   
之後為了數值運算的方便，我們對 APP ratio 取自然對數又稱為 log-likelihood 
ratio （LLR）： 
7 
0Pr(check equation  is satisfied | input message), {0,1}f b 的機率比或對數機率比有
關。值得注意一下，它和先前的例子一樣，也只有外來的訊息可以被傳送到 v
節點 4c ，且這樣外來的訊息 ijm 可在每次的遞迴中，藉由每一個連接 c 節點/v 節
點對 /i jf c 運算而得到的。 
 
圖 2.3  由 c 節點 0f 下傳到 v 節點 4c 的訊息 04m  
 
而當達到停止運算條件(stop criterion)或是所設定的最大運算次數(maximum 
iteration)時，解碼器會計算出 APP、LR、LLR 的值來決定 ic 位元之最後結果。其
中，停止運算條件為 ˆ 0TcH  。而 cˆ是中途經由 APP、LR 或 LLR 所得到的 ic 位
元的可能值。 
 而在 LDPC 碼眾多的解碼演算法中，例如機率域 SPA、機率域 Viterbi 與 BCJR
演算法，都有一個共同的問題存在，那就是在實際電路上設計中，運用了太多的
乘法器。一般而言，加法器成本比乘法器低且也比較容易實現，因此如果能用加
法器來取代乘法器的運算，那將可以降低製作上的複雜度。還有就是，太多的乘
法器相乘會使得數值變得比較不穩定，所以對數域-和積演算法(log-domain SPA)
可以用來解決此問題。以下我們就介紹機率愈以及對數域的和積演算法
(log-domain SPA)。 
首先介紹一下符號的意義： 
 jV ={v 節點連接到 c 節點 jf } 
9 
 
圖 2.4  在訊息傳遞的前半段遞迴，計算出 ( )ijq b 之值 
 
接下來推導 ( )jir b 時，我們需要下面的結果： 
結果 1：(Gallager[6]) 
      考慮一個序列，有 M 個獨立的位元 ia ，且Pr( 1)i ia p  ，則此 1{ }Mi ia  序列
包含偶數個 1 的機率為 
1 1 (1 2 )
2 2
M
i
l i
p

                           (2.3) 
 
由上式結果可知 (1)i ijp q 時，則(見圖 2.5) 
'
' \
1 1(0) (1 2 (1))
2 2
j
M
ji i j
i V i
r q

                     (2.4) 
因為當 0ic  時，為了滿足檢查方程(check equation) jf ，所以此位元 '{ : ' \ }i jc i V i
必須要包含偶數個 1。 
清楚地可知 
   (1) 1 (0)ji jir r                          (2.5) 
11 
(0) (1 ) (0)
i
i i i ji
j C
Q K P r

                          (2.6) 
        與           (1) (1)
i
i i i ji
j C
Q K P r

                             (2.7) 
        這裡 iK 是為了確保 (0) (1) 1i iQ Q  。 
步驟 5：對於 0,1,..., 1i n  ，令 
   
^ 1      if (1) > (0)
0      else
i i
i
Q Q
c
    
  
        遞迴的停止條件有二個：第一是在當 ^ Tc H 0時；第二是在當遞迴次數
達到最大遞迴限制(maximum iteration)時，則停止；否則，跳回步驟 2 繼續執行。 
整個遞迴解碼演算法的流程圖如下所示： 
 
圖 2.6  機率域-和積演算法的流程圖 
 
 接下來我們介紹對數域-和積演算法( Log-domain SPA decoder)，首先，我們
先定義一下 LLRs： 
13 
' '
' \ ' \
1 1tanh ( ) tanh
2 2
j j
ji i j i j
i V i i V i
L r  
 
             
所以我們可推得 
1
' '
' \ ' \
1 1
' '
' \ ' \
1 1
' '
' \' \
1( ) 2 tanh tanh
2
1         2 tanh log log tanh
2
1         2 tanh log log tanh
2
   
j j
j j
jj
ji i j i j
i V i i V i
i j i j
i V i i V i
i j i j
i V ii V i
L r  
 
 

 
 
 
 

         
         
        
 
 

' '
' \' \
      ( )
jj
i j i j
i V ii V i
   

      
        (2.10) 
這裡已經定義 
  1( ) log[tanh / 2 log
1
x
x
ex x
e
         
當 0x  ， 1( ) ( )x x   ，此函數圖顯示在圖 2.7，所以可用 look-up table 來完成。 
 
由步驟 2，我們利用(2.2)式來分解(2.1)式，再兩邊各取對數，則可得知 
'
' \
( ) ( ) ( )
i
ij i j i
j C j
L q L c L r

                          (2.11) 
由步驟 3，相同地可知 
( ) ( ) ( )
i
i i ji
j C
L Q L c L r

                           (2.12) 
15 
 
圖 2.8  對數域-和積演算法的流程圖 
 
2.2 重複累加碼(Repeat Accumulate codes)介紹 
在這個章節我們將介紹重複累加(repeat accumulate ,RA)碼，它在[27]中被提
出。此種碼為串接碼的一種，通常其碼率為1/ 2 或更低，它擁有一個非常簡單的
編碼器，並且是線性時間可編碼和解碼(linear time encodable and decodable)，在
遞迴解碼下，它可以達到接近通道容量(channel-capacity)的效能。其建構方式如
圖 2.9。首先我們將長度 N 的資料位元重複q次後，再使用長度qN 的隨機交錯器
(interleaver)攪亂(scramble)，最後，再使用碼率-1 的累加器(accumulator)編碼。 
 
17 
 
圖 2.10  重複累加碼的 Tanner graph 
 
以上就是我們對於重複累加碼的簡略介紹，在下一章節裡，我們會討論本報
告所提出的串接累加碼，和重複累加碼的關係。 
19 
傳遞效率，因此提供了比傳統 BP 演算法更快速的收斂速度。此外，有別於傳統
的 Bahl, Cocke, Jelinek, and Raviv(BCJR)籬狀解碼演算法[1]，我們提出一個基於
2-狀態籬狀的簡化式解碼演算法，可以減少記憶體的儲存需求，並且減低運算複
雜度。 
 
基於 SPC 碼的傳統信息傳遞(message-passing)演算法，雖然可以達到接近-
通道容量(capacity)的效能[3]，但相對的也必須付出成千上百個遞迴數量，原因
是各個 SPC 碼的解碼器之間，其信息交換沒有效率，特別是在 Tanner graphs 中
包含長循環(cycle)的檢查節點(check nodes)，透過適當規劃(scheduling)的信息跟
新，可以增進信息傳遞的效率。 
在此報告中，我們所研究的新架構，經由遞迴籬狀解碼演算法，比起傳統架
構使用標準 BP 演算法，可以得到更好的效能(performance)以及更快速的收斂速
度(convergence rate)。 
以下是我們的初步架構，這個架構碼是由M 個元件碼(component codes)所構
成，分別表示為 1 2, , , MC C C ，並且用序列的方式將其串接，如圖 3.1 所示。其
中還有 1M  個交錯器(interleavers)被使用在元件碼的編碼器(encoders)之間，分別
表示為 1 2 1, , , M    ，而每一個元件碼皆為迴旋碼(convolutional code)，經由以
下產生矩陣 (generator matrix)表示的碼率 -1/2(rate-1/2)的迴旋碼，所穿刺
(puncturing)而來。 
( ) [1,1/(1 )].g D D   
我們使用規律的方法來穿刺出第 i個元件碼的同位序列。換言之，對於每 it 個
消息位元(information bits)，只有一個同位位元(parity bit)被傳送，所以第 i個元件
碼，其碼率為 /( 1)i i iR t t  ，其中 it 為整數。所以這樣的架構下，所造成的整體
碼率(overall code rate)為 
1 1
M
i
i i
tR
t
   
21 
同位位元的位置就使用籬狀型態 II，此外，除了初使狀態和最後狀態，皆使用籬
狀型態 I。 
 
 
圖 3.2  元件碼的 2-state 籬狀 
 
3.2 與重複累加(RA)碼的關連 
 為了更加了解串接累加碼的架構，我們將其和 RA 碼作分析。首先我們只考
慮單一元件碼。在第二章所提到的重複累加碼，其編碼示意圖，先將資料位元重
複q次，而我們串接累加碼的單一元件碼，則是不做重複的動作，並且將其中的
亂數交錯器換成 SPC 編碼器，整體的編碼示意圖如圖 3.3 所示。 
 
圖 3.3  單一元件碼的編碼架構 
 
 上述編碼架構的好處在於，在解碼的部份，我們可以得到一個基於 2-state
的簡化版解碼演算法，我們將在下一節作介紹。另外，上述的編碼示意圖，將會
在我們第四章分析串接累加碼的 IOWE 時，成為一個重要的分析流程依據。 
 
23 
 
 令 1 2[ , , , ]nc c cc  為傳輸的碼字(codeword)，而 1 2[ , , , ]ny y yy  為接收訊
號。對一個無記憶性通道(memoryless channel)，在通道輸出的第 k 個位元，其
log-likelihood ratio(LLR)被定義如下 
{ 0 | }log
{ 1| }
k k
k
k k
P c y
P c y
                           (3.2) 
從位元節點 k 到檢查節點 i的信息傳遞，表示為 ki ，從檢查節點 i到位元節點 k 的
的信息傳遞，表示為 ikw 。則從位元節點到檢查節點的信息可表示為 
'
' ( )\
ki k i k
i N k i
w 

                            (3.3) 
其中 ( )N k 表示為位元節點 k 的鄰近(neighboring)節點集合。而信息 ki 是第 i個元
件碼的解碼器的輸入，解碼器則從檢查節點(元件碼的解碼器)輸出外來訊息
(extrinsic information)到位元節點，其外來訊息表示式如下。 
DEC ({ } )
iik i ki k S
w                         (3.4) 
其中 iS 是第 i個元件碼的碼位元位置的集合，而 DECi 表示第 i個元件碼的解碼方
程式。最後，每一個位元其軟性(soft)的解碼結果，表示如下 
( )
k k ik
i N k
Q w

                             (3.5) 
kQ 項在下一個遞迴迴圈，可被使用來作為碼位元(code bits)的決定(decision)。 
 接下來所提出的初步研究，是我們的簡化版 BCJR 演算法。因為在元件碼的
籬狀中只有兩個狀態(state)，所以基於 log-likelihood ratios 的 BCJR 演算法[1]可
以被簡化。又因為每個子編碼器具有相同的籬狀結構，為了簡化，我們忽略上標
索引(superscript index)。令 1 2( , )kc s s 為狀態 1s 和 2s 之間的分支標示(label)。在 BCJR
演算法裡，向前(forward)和向後的(backward)的遞迴式(recursions)可以被表示如
下 
1 1
1 10,1
(0) (0, ) (1) (1, )( )     for 1, ,
(0) (0, ) (1) (1, )
k k k k
k
k k k ks
s ss k n
s s
       
 
 
         (3.6) 
25 
+1
+1 +1 +1 +1
+1 +1 +1 +1
+1 +1 +1
+1 +1 +1
+1 +1
+1 +1
(0) (0) (0,0) (1) (0,1)  =  log   =  log
(1) (0) (1,0) (1) (1,1)
(0) (0,0) (0,1).
(1) (1,0) (1,0)=  log (0) (1,1)
(1) (1,0)
.=  log
k k
k k k k k
k
k k k k k
k k k
k k k
k k
k k
e e 
         
  
  
 
 




+1
+1 +1
+1 +1
1
=  
k k
k k
e e 
 


(
          (3.11) 
同理，我們可推導出以下式子 
1 2 1 2
1 2 1 2
1 1 2, : ( , ) 0
1 1 2, : ( , ) 1
1 1
1 1
1
( ) ( )
[ ]   =  log
( ) ( )
(0) (0) (1) (1)=  log
(1) (0) (0) (1)
=  
k
k
k ks s c s s
e k
k ks s c s s
k k k k
k k k k
k k
s s
s s
   
   
   
 


 
 





(
               (3.12) 
對於圖 3.2 的籬狀型態 I，總結如下 
1k k k   (   +1 +1k k k   (   1[ ]e k k k   (          (3.13) 
而初始情況為 0  和 n  。同樣地，對於圖 3.2 的籬狀型態 II，我們可得到
以下遞迴式和外來 LLR 
1k k k      +1 +1k k k      1[ ]e k k k             (3.14) 
 觀察以上遞迴式，基於 2-state 的簡化版解碼演算法，和傳統的 BCJR 籬狀解
碼演算法比較，減少了記憶體儲存需求和計算複雜度至少 2 的因子(factor)。 
 
27 
 為了將圖 4.1 的編碼方式簡化，我們提出其等效的編碼序列簡易示意圖，如
圖 4.2 所示。 
 
 
圖 4.2  與原始編碼方式等效的編碼，其編碼序列簡易示意圖 
 
 在圖 4.2 中，在信息位元 ix 和 ( ) [1,1/(1 )].g D D  所產生的同位位元之間，加
上了一個 SPC 碼編碼器。SPC 編碼器將每 it 個信息位元作 SPC 編碼，得到 ks ，
之後再串接 ( ) [1,1/(1 )].g D D  編碼器，得到同位位元 jp ，放置於每 it 個信息位
元之後(如圖 4.2 中所示的 Parity bits 位置)，得到最後的碼字(codeword)。 
 由圖 4.1 和圖 4.2 比較得知，兩者編碼方式雖然稍微不同，不過得到的結果
卻完全相同。事實上，兩者是完全等效的編碼方式。由於原始的編碼方式不易分
析，所以之後我們將對元件碼等效的編碼方式，所得到的碼字(codeword)進行輸
入-輸出權重列舉函數 (input-output weight enumerating, IOWEF)的推導。 
 一個 ( , )n k 的線性區塊碼C ，其 IOWE 定義如下  
,
0 0
( , )
k n
C C w h
w h
w h
A x y A x y
 
                        (4.1) 
其中 ,Cw hA 所代表的是，在C 中，信息輸入權重為w，輸出權重為h的碼字(codeword)
數量。另外，我們定義了一個函數 ( , )a pA W Z ，稱為輸入-冗位權重函數
(input-redundancy weight enumerating function, IRWEF)。這函數描述了輸入信號
( )a x 和冗位信號 ( )p x 的漢明權重關係，表示為 
Information bits : 
Parity bits : 
SPC encoder : 
29 
1
1
1
1/(1 )
,_ _1/(1 ) _
, ,
0 0 0
1
_ _1/(1 )
,
0 0
( , )
Dk P P
z zIRWE SPC D IRWE SPC w z
w z w z
w z z
k P
IRWE SPC D w z
w z
w z
A
A W Z A W Z
P
z
A W Z


  

 
                  

 

              (4.6) 
其中 P 是輸入至累加器的序列長度。 
  得到串接累加碼的 IRWEF 後，依據 IOWEF 和 IREF 的關係式如下 
                   ( , ) ( , )IOWE IRWEA x y A xy y                         (4.7) 
我們可以進而得到單一元件碼的 IOWEF 
1
1
1
_ _1/(1 ) _ _1/(1 )
,
0 0
1/(1 )
,_
,
0 0 0
1
( , )
k n
IOWE SPC D IRWE SPC D w h
w z h w
w h
Dk n P
z h wIRWE SPC w h
w z
w h z
A W H A W H
A
A W H
P
z
 
 
 


  

                  

 
      (4.8) 
最後我們依照串接累加碼的架構，將每個元件碼使用亂數交錯器(Uniform 
interleaver, URI)串接。根據 Benedetto and Montorsi[28]所提出的分析，其中有個
重要的性質，在串接的編碼系統中使用亂數交錯器，輸出序列的分布(distribution)
可以視為輸入權重分布的函數。更仔細來說，給定 URI 的輸入權重為w，所有
輸出權重為w的序列，將視為等機率，其餘權重的序列機率則為 0。 
  考慮一個預先透過 URI 編碼的 ( , )n k 區塊編碼器，假設其 IOWE 為 ,w hA ，在
輸入序列權重w轉換為輸出序列權重 h的連接系統中，其機率Pr( )w h 可以由
下式表示： 
,Pr( )
def
w hAw h
k
w
     
 
  如此一來，我們現在可以考慮一個串接系統中的 ( , )n k 區塊碼。首先，我們
31 
命名。此界線十分緊貼(tight)，因為它工作在非常接近 Shannon limit 的 SNR 下，
基於 ML 通道容量(capacity)的非隨機(non-random)碼，可以作為一個緊貼(tight)
的上界線。 
 接下來我們總結[5]中，Divsalar 所提到的位元錯誤機率的界限。假設先給定
了碼的輸入輸出權重列舉(IOWE) ,Cw hA ，我們可以定義碼的頻譜形狀(spectral 
shape)，如下式： 
,1
ln{ }
( ) , 0 1
k C
w h nw
b
w A
k
n
         ， 其中 n是碼的長度 
接下來定義 0/bc RE N ，其中 R 是碼率。而位元的錯誤機率可被以下的上界
限限制住： 
                          ( , ) ,bnE cb h
h
P e                      (4.11) 
其中， 
2 ( )1( , ) ( ) ln[ (1 ) ] ,
2 1 (1 )
b
b bE c e c
                 
2
2
2 ( )
1 2 1 1(1 ) 1 (1 ),
1 b
c c c
e  
     
                 
而， 
2 ( )( [ (1 ) ]) .bH eh e
       
 其中我們可以注意到，當 1  時，簡易界限(simple bound)就變成了聯合界
限(union bound)。簡易界限中另一個重要的應用是計算最小的訊雜比(SNR)，使
得界限的指數，對於所有的 h，都將是正數(postive)，如此一來，當n趨近於無
窮大時，位元錯誤率也將趨近於 0。這就被稱為最小訊雜比的臨界值(threshold)。
臨界值 0c 可以被計算如下： 
                       2 ( )0
0 (1 )
1 1sup (1 ).
2
b
R
c e
R
 




  
                 (4.12) 
其中 0c 表示最小的 0bE N 臨界值。 
33 
第五章 模擬結果與效能比較 
 
 在此章節中，我們分成以下四個部份來做分析：A. 不同碼率及長度、 B.  
LDPC 碼與串接累加碼的效能比較、 C. 不同元件碼數量的效能比較、 D. 漸近
效能與長碼的模擬。 
 首先，在圖 5.1 中，我們分析 A. 不同碼率以及長度 的模擬結果，並且在
ML 解碼下，將相對應的上界限畫出，以供兩者做比較。如圖所示，我們的模擬
結果使用了 30 次的遞迴解碼運算，收斂的速度十分快速。而簡易界限(simple 
bound)也準確地預測了我們的模擬效能，甚至是錯誤底層(error floor)的預測也十
分準確。在圖 5.1 中，如我們所期待，可以觀察到錯誤底層隨著碼長遞減。 
 接下來我們分析 B. LDPC 碼與串接累加碼的效能比較。在圖 5.2 中，我們考
慮碼率1/ 2，長度-4000 的規則型 LDPC 碼，其行權重為 3cw  、列權重為 6rw  ，
並且使用傳統的 SPA 遞迴解碼演算法。而串接累加碼也使用同樣的長度和碼率。
兩者的遞迴解碼次數也設為相同的 30 次。結果顯示出本報告提出的碼，在位元
錯誤率為 510 時，大約比規則型的 LDPC 碼增進了 0.15dB。 
 另外，我們將 LDPC 碼和串接累加碼的模擬條件皆設定在訊雜比 1.6dB，並
且在不同的遞迴次數下，觀察其位元錯誤率。我們可以從圖 5.3 中看出，串接累
加碼的收斂速度明顯地優於傳統 LDPC 碼。 
接下來我們分析 C. 不同元件碼數量的效能比較，如圖 5.4 所示，我們考慮
碼率1/ 2 、長度-4000 的串接累加碼，分別針對 2、3、4 三種數量的元件碼，進
行在 ML 解碼下的上界限比較。在圖 5.4 中我們可以看出元件碼數量的增加，效
能也跟著增進。不過，在圖 5.2 的模擬分析中，我們卻看到了相反的結果，4 個
元件碼造成的串接累加碼，其效能並未如我們所想像，反而比 LDPC 碼的效能要
差。這是因為本報告提出的遞迴解碼演算法，並非是最佳化的 ML 解碼，所以在
35 
 
圖 5.1  模擬結果比較以及位元錯誤率的簡易界限 
37 
 
圖 5.3  LDPC 碼與串接累加碼的收斂速度比較 
39 
 
圖 5.5  不同碼率在 64000k  時的效能比較 
41 
第六章 結論與未來發展 
在本報告中，我們提出了一個新的錯誤更正碼：基於 2-state 迴旋碼的串接
累加碼。由上述之模擬結果可知，我們可以得到接近通道容量的效能，並且擁有
收斂速度快且低複雜度的解碼演算法。 
    未來，我們將對串接累加碼做理論上的檢查與分析，分析方法可分為二種：
一為 Exit chart 分析，將外來訊息的傳遞進行 Mutual information 的計算，進而得
到其 EXIT Chart 特性圖來做初步分析。然後觀察遞迴解碼下的收斂行為，並利
用分析和模擬結果，來預測建構碼的最佳化階層分佈多項式（degree distribution 
polynomial），進行理論和模擬結果的驗證。 
二為 Density Evolution，使用 Density Evolutiom 做數值化的最佳化，來做更
精確的分析。並驗證我們所設計架構下的模擬結果，進而計算 convergence 
threshold 及遞迴解碼下的通道容量。透過這些分析的結果將引導我們如何來改善
此串接累加碼的效能。 
 
43 
[11] D. MAcKay and R. Neal, “Cood codes based on very sparse matrices,” in 
Cryptography and Coding, 5th IMA Conf. C. Boyd, Ed., Lecture Notes in  
Computer Science, pp. 100-111, Berlin, Germany Springer, 1995. 
[12] D. J. C. MacKay, “Gallager codes that are better than turbo codes,” in Proc. 36th 
Allerton Conf. Communication, Control, and Computing, Monticello, IL, Sept. 
1998. 
[13] D. MacKay, “Good error correcting codes based on very sparse matrices,” IEEE 
Trans. Inform. Theory, vol. 45, pp. 399–431, March 1999. 
[14] M. M. Mansour and N. R. Shanbhag, “Turbo decoder architechtures for 
low-density parity-check codes,” Proc. 2002 IEEE Global Telecommun. Conf., 
pp. 1383–1388, Nov. 2002. 
[15] J. Pearl, Probabilistic Reasoning in Intelligent Systems: Networks of Plausible 
Inference. San Mateo, CA: Kaufmann, 1988. 
[16] G. Poltyrev, “Bounds on the decoding error probability of binary linear codes via 
their spectra,” IEEE Trans. Inform. Theory, vol. 40, pp. 1284–1292, July 1994. 
[17] E. Yeo, P. Pakzad, B. Nikolic and V. Anantharam, “High throughput  
low-density parity-check decoder architectures,” Proc. 2001 IEEE Global 
Telecommun. Conf., pp. 3019–3024, Nov. 2001. 
[18] C. E. Shannon, “A Mathematical Theory of Communication,” Bell Syst. Tech.J., 
27:379-423, July 1948 
[19] E. Sharon, S. Litsyn and J. Goldberger, “An Efficient message-passing schedule 
for LDPC decoding,” Proc. Electrical and Electronics Engineers in  
Israel, pp. 223-226, Sept. 2004. 
[20] R. M. Tanner, “A recursive approach to low complexity codes,” IEEE Trans. 
Inform. Theory, vol. 27, pp. 533–547, Sept. 1981. 
[21] A. J. Viterbi and A. M. Viterbi, “An improved union bound for binary input 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
報 告 人 
 
姓   名 
 
邱茂清 
 
服務機構
及 職 稱
國立中正大學 電機工程學系 
副教授 
      時間 
會議 
      地點 
自 98 年 11 月 30 日至 98 年
12 月 4 日 
夏威夷, 美國 
本會核定
 
補助文號
 
 
會 議 名 稱 
 (中文) 2009 年 IEEE 全球通訊研討會 
 
 (英文) 2009 IEEE Global Communication Conference  (GLOBECOM 2009) 
發表論文題目 
 (中文) 非二位元 LDPC 與 IRA 調變碼之設計與分析 
 (英文) Design and Analysis of Non‐binary LDPC and IRA Modulation Codes 
 
一、前言 
 
此次參加之 IEEE  所舉辦的 IEEE Global Communication Conference (GLOBECOM) 已有數十年
歷史。此會議為國際通訊理論界重要和知名的國際會議，集合了全世界各國學者發表最近一年的研
究成果。台灣學術界一直非常重視此會議。今年的 GLOBECOM 於 2009 年 11 月 30 日至 12 月 4
日在美國夏威夷舉行，會中發表超過 400 篇的論文。論文的內容包羅萬象，本人較有興趣如 Codes 
on Graphs, Turbo Codes, LDPC Codes, Space-Time Codes, Space-Frequency Codes, Iterative 
Decoding. 
 
二、參加會議經過 
 
本人於當地時間 11 月 29 日晚上約 10:30 時抵達夏威夷，於隔天早上 9:30 報到註冊並參加
reception。會中與他國學者進行交談，交換研究心得。隨後幾天每天參加一場一個半小時的Keynote 
Speaker。大會邀請很多通訊產業界重量級的執行長發表演說，演說中討論各種通訊技術在未來的
可能應用。這些重量級的執行長以他們橫跨產業及學界的經驗，預估未來通訊技術發展的趨勢，內
容相當實用。 
 
 
論文發表會是從12月 1日至12月 4日每天早上九時五十分開始舉行。本人根據自己的專長及興趣，
到各個不同的場次聽論文發表，或與相識的國內外教授學者相互交談、交換意見。會中最主要是聽
取有關 LDPC Codes,Coding Theory, Space-Time Codes, Space-Frequency Code,等相關之論文發
表，其中有一些學者發表了相當先進的研究成果。本人的論文被安排在 12 月 2 日下午發表，發表
後有多位學者提出熱烈的討論，主席建議因時間的關係，可於會後繼續討論。12 月 4 日下午結束
所有議程，於 12 月 6 日上午 5:40 點返抵台灣。 
 
三、與會心得 
 
參與本次 GLOBECOM 2009 會議對本人未來之研究具有相當大的助益，不但可得知目前各學術單
位及個人研究方向，並對未來之研究具有相當之啟發。會議中所發表的論文涵蓋通訊理論與編碼理
國科會補助計畫衍生研發成果推廣資料表
日期:2010/12/08
國科會補助計畫
計畫名稱: 串接累加碼之研究 
計畫主持人: 邱茂清 
計畫編號: 97-2628-E-194-001-MY2 學門領域: 通訊
無研發成果推廣資料
研討會論文 2 2 100% 
Mao-Ching Chiu, ＇Design and 
Analysis of Non-binary LDPC 
and IRA Modulation Codes,＇ 
to be appeared on Proc. of 
2009 IEEE Global 
Telecommunications 
Conference. 
 
Mao-Ching 
Chiu,＇Bandwidth-efficient 
modulation codes based on 
nonbinary irregular repeat 
accumulate codes,＇ Proc. of 
2008 IEEE Global 
Telecommunications 
Conference, New Orleans, LA, 
USA. 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 5 5 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次
 
其他成果 
(無法以量化表達
之成果如辦理學術
活動、獲得獎項、
重要國際合作、研
究成果國際影響力
及其他協助產業技
術發展之具體效益
事項等，請以文字
敘述填列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
科 
教 
處 
計 
畫 
加 
填 研討會/工作坊 0  
 
