 2
成複雜的運算需求，這也造成個人使用電腦設備的型態由定點固定 IP 集中處理逐漸
趨向隨時隨地機動 IP 分散處理，運算裝置由桌上型個人電腦移轉到各個行動裝置。
在這股潮流下，行動裝置提供了使用者在任何時間、任何地點可以存取資訊的主要
介面[27][28]。如果能夠利用使用者所處情境的資訊，讓系統自動解析這些資料，進
而協助使用者完成特定工作，並且減少對使用者的干擾，將會使得行動運算更加普
及，這也是「普及運算」(Pervasive Computing)[23]所提供的願景。 
 
在利用行動裝置存取網際網路資源時，我們通常會面臨下列幾個問題：(1) 運
算裝置的記憶體、電池、螢幕等配備與 CPU 運算能力不同造成部分文件內容無法順
利展示：例如：一台 PDA 可以顯示的色深 (color depth)從 WBMP 的黑白(1-bit)到 
JPEG 的全彩(24-bit)都有可能，螢幕的大小也從 80x24 個字元到數百萬個像素(pixels)
都有。一張 640x480(pixels)的 JPEG 圖檔在 PC 上可以很漂亮的顯示出來，可是在一
般 WAP 手機卻無法顯示。(2)頻寬的不確定：行動裝置所架使用的網路架構，像
GPRS、PHS、WLAN、藍芽等，速度各異，針對速度不快的 GPRS 或 PHS，傳送一
般的文字檔還可以，如果要傳多媒體的訊息，像是影片、聲音、圖片等就顯的力不
從心。(3)使用者的喜好不同，甲喜歡的文件展示格式乙不見得喜歡。上述的問題造
成我們在使用行動裝置時許多應用上的困難，例如，要找出目前所在位置最近的餐
廳，在桌上型電腦用地圖且把餐廳位置標出來遠比用文字陳述來的明確直觀，但是
對頻寬有限的使用者來說，文字式的路線指引比較適合，對於正在開車的使用者來
說，最好將這些文字以聲音呈現。上面所提的尋找餐廳應用讓我們了解到在行動運
算的環境中，例如配備、頻寬、喜好、地點、使用時機等相關情境資訊都會影響應
該如何將文件呈現給使用者。 
 
網路服務(Web Services) 以「服務導向」(Service-Oriented Architecture, SOA)的架
構，規範分散式平台下應用程式的作業方式，是繼 Web 之後最重要的資訊科技革命
之一。這個架構包含服務提供者、服務需求者及兩者間的仲介者(或稱為註冊中心)
等三種角色，定義它們之間分別進行發佈(Publish)、發現與呼叫(Find and Call)及鏈結
(Bind) 的互動關係，提供分散式環境下互通的運算環境。Web Service 提供下列優點：
(1)透過一個代理伺服器居間整合各種網頁內容調適的服務，再將結果傳回給各個行
動裝置，將運用邏輯與使用者介面之 API 抽離。 (2)利用以 HTTP 為基底的服務型
態來對遠端要求/取得服務，任何語言所寫的程式可以存取其他語言所提供的 Web 
Service，程式語言獨立於服務之外，這讓相關服務更容易推廣。 
 
本研究利用網路服務技術作為訊息傳遞基礎，設計與建置一個提供單一網頁設
計版本、多個動態網頁展現版本服務的網頁內容調適系統，可以依據情境資訊動態
調整文件格式及展示方式給不同的運算裝置，並利用網路服務的特性，讓負擔極重
的網頁調適功能可以分散處理，並且在服務導向的架構(Service-Oriented Architecture, 
SOA)下，讓網頁內容調適中介軟體將調整網頁內容的工作委派給合適的節點，降低
 4
式上較為簡單的撰寫方式，幫助使用者撰寫改編樣式表。 
 
Lemluma 及  Layyaida 利用開放軟體  ImageMagick 可作多媒體格式的轉換
[21]，ImageMagick 是ㄧ個強大的工具集及函式庫，可以針對各種圖形格式做處理、
讀取和寫入的動作，其支援的格式包含 JPEG、PNG、TIFF 和 GIF 等，並可以將之
轉換為 PDF 檔，做為情境改編的支援工具實在是適合不過。 
 
綜合以上研究可以發現，內容改編技術雖然已頗具規模，但是缺乏一個整合性、
一般性的改編引擎，大多數的研究仍著重在某特定檔案格式，並且仍停留在理論階
段，缺乏實做。本研究的目的就是整合各改編技術作一統整的工作，不但相關文件
格式依照情境資訊加以動態調整，對於其展現方式也會依照瀏覽工具之標記語言適
當調整，以期所有的行動裝置在現在熱門的行動商務可以發揮最大的威力。 
 
四、 系統架構 
4.1. 系統需求 
 
實作一套具可用性的內容調適系統之前，我們先規劃預計支援之文件格式。由
於瀏覽器支援的文件格式繁多，有些如 JPEG 影像格式可直接內嵌於網頁中展示，
有些如 PDF 則需呼叫作業系統已安裝之外部程式，想要由文件中萃取資訊，以製作
一個調適所有文件格式的系統，的確困難。因此，我們提出一個架構，將文件格式
分類，並明確定義各分類中本系統可以支援的文件格式，至於其他文件格式可以依
照系統需要，另行製作相關模組，動態新增至此架構。 
 
依據目前最常使用之瀏覽器介面所支援之文件格式，我們將文件分為以下四類： 
 
(1) 標記語言文件 (Markup Language Document)：泛指所有使用標記語言所撰寫
而成的文件，其文件格式包括：HTML、CHTML、WML、VoiceML 以及符
合 XML DTD 或 Schema 的 XML 文件等等。這類文件的特點就是可以利用
DOM[3] 或是 SAX[4] 文件模型，抽離文件內容和格式，將文件內容剖析成
「文件樹」(Document Tree)，也可利用 XPATH[10]、XQuery[8]等技術，查詢
文件特定位置之內容。不同瀏覽器可支援之標記語言也不同，標記語言文件
可說是瀏覽器最重要的可支援文件類型，本系統也將以此類文件作為網頁內
容調適的基礎，將各種文件調整後的結果整合於各行動裝置可支援之標記語
言中。 
(2) 多媒體內容 (Multimedia Content)：多媒體內容指不能顯示純文字、但是可以
內嵌於網頁中的檔案格式，例如圖檔(JPEG、PNG、BMP)、聲音(WMV、MP3、
WAV)、影像(AVI、MPEG)等皆是。這類資料可以提供使用者極佳的瀏覽經
 6
息繞送的方式、處理訊息內容的綱要位址以及需要處理該訊息的節點等資
訊。透過這些標頭定義可以產生出比傳統的「請求/回應」模式更為複雜的訊
息傳遞動作，有助於設計出更具協同分工、分散處理特性的應用程式。 
(3) 服務描述：當客戶端提出服務請求時，Web Service 架構設計時的一大重點為
如何兼顧自動化、容錯以及低藕合性，自動捨棄已經失效的服務或不適合的
服務，並找到合適的服務送出請求。Web Service 架構最高階的功能為服務之
註冊，以提供服務的描述以及查詢。Web Service 架構利用符合 XML 規範
的 WSDL 文件來描述服務並且透過 UDDI 的註冊來查詢目前現存的服務，以
整合大型分散式環境所有服務。透過 UDDI 以及 WSDL，客戶端可以選擇最
合適的服務並且提出請求。 
 
Web Service 由於擁有上述特性，非常適合作為中介處理的代理伺服器。因為網頁內
容調適系統的負擔極重並且又講求快速回應，一台主機電腦不足以應付如此龐大需
求，通常需要分散處理，Web Service 很適合作為網頁內容調適系統的底層架構。而
且網頁文件格式與內容龐雜，相關調適工作各自獨立且吃重，也需要像 Web Service
這樣能夠動態部署且分散配置的分散環境來達成這個需求。 
 
4.3. 系統架構與訊息傳遞方式 
圖一說明本系統架構以及訊息傳遞模式。本系統為了增加客戶端與調適服務的
通透性，以代理伺服器的方式設計，用戶端只要指定代理伺服器就可以取得調適過
後的網頁內容，與一般使用瀏覽器瀏覽網頁的使用經驗相同，上手容易，但可得到
符合客戶端裝置特性、客製化後的網頁內容。每一次的客戶端服務請求議程可以大
致分為四次訊息傳遞：首先，在訊息(1)中，客戶端向代理伺服器發出 HTTP 的服務
請求；代理伺服器收到 HTTP 服務請求後，剖析請求內容，並將 HTTP 請求於訊息(2)
轉送給網際網路上對應的網頁伺服器，藉此取得客戶端所需的網頁內容；收到網頁
內容的代理伺服器分析並抓取網頁內容相關特性，將網頁內容依據 SOAP 封裝成 Web 
Service 標準的訊息傳遞格式，並依據該網頁內容 MIME 格式，於訊息(3)向對應的
Web Service 傳送以 SOAP 封裝成的網頁內容調適服務之請求；收到調適服務請求的
Web Service 節點會剖析該 SOAP 訊息並且取得內嵌之網頁內容並給予對應處理。處
理完成後，該 Web Service 節點會將處理完成的網頁內容再封裝成為 SOAP 格式並傳
送回網頁內容調適代理伺服器，網頁內容調適代理伺服器此時可以將已經調適完成
的網頁內容從 SOAP 訊息中取出並且封裝成為 HTTP 標準的回應格式，於訊息(4)傳
送回客戶端，完成一次的請求／回應議程。 
 8
10-Profile-Diff-1: <?xml version=”1.0”><rdf:RDF xmlns:rdf=”http://www.w3.org/1999/02/22-rdf-syntax-ns#” 
xmlns:prf=”http://www.wapforum.org/profiles/UAPROF/ccppschema-20010430#”><rdf::Description 
rdf:ID=”NOKIA6230”><prf:component><rdf:Description rdf:ID=”HardwarePlatform”><rdf:type 
rdf:resource=”http://www.wapforum.org/profiles/UAPROF/ccppschema-20010430#HardwarePlatform” 
/><prf:SoundOutputCapable>No</prf:SoundOutputCapable></rdf:Description></rdf:RDF> 
 
在此夾帶裝置資訊的 HTTP 請求中，標頭 Man 指定了夾帶裝置資訊的裝置基本模型
檔案所在位置，「ns=10」表示使用的命名空間編號為 10，此數值為隨機產生，可作
為後續裝置資訊的命名空間識別以及剖析之用。每一筆裝置資訊的描述格式為： 
 
命名空間編號-Profile: 裝置資訊所對應到的 URL, 裝置資訊差異檔摘要 1, 裝置資訊差異檔摘要 2, … 
 
為了避免傳輸大量的裝置資訊佔用過大頻寬，靜態不常變動的裝置資訊，如：硬體
規格、內建軟體的支援等可以放在「裝置資訊儲藏庫」(Device Profile Repository)中，
客戶端裝置在傳送裝置資訊時，只要傳送指到該儲藏庫所對應裝置資訊描述檔之
URL 即可，上例的「http://mis.im.tku.edu.tw/~tas/paper/nokia6230.rdf」即表示靜態的
裝置資訊所在位置。至於動態、依據使用者所在環境有所不同的情境，如：使用者
偏好、位置、新增軟硬體等少量資訊，可以利用「裝置資訊差異檔」(Device Profile Diff)
的方式傳送。「裝置資訊差異摘要」即為這些動態的裝置資訊的 MD5 摘要(MD5 
Digest)，以確保裝置資訊差異檔的正確性。上述範例的「10-Profile-Diff-1」標頭即為
一筆裝置資訊差異檔的實體，紀錄片段的裝置資訊；前置的字元「10」表示該標頭
在表示命名空間識別為「10」的裝置資訊差異檔。每一個裝置資訊都可以有好幾個
裝置資訊差異檔，所以該標頭最後的「1」表示該裝置資訊差異檔是命名空間識別號
碼為「10」的裝置資訊內編號為「1」的裝置資訊差異檔。當代理伺服器收到裝置資
訊以及裝置資訊差異檔時，會將他們依據命名空間以及編號進行合併及解析(Merge 
and Resolution)的動作，整合成一份完整的裝置資訊，作為進行網頁內容調適之裝置
資訊來源。 
 
代理伺服器收到情境資訊時，可以依據 CC/PP 所提供的內容將之轉換為「屬性
-值」的配對(Key-Value Pair)，每一個「屬性-值」的配對都表示裝置的某個特性及相
對的數值，表一即為某台 PDA 之部份特性表示。 
 
表一、描述裝置特性的「屬性-值」配對 
描述裝置名稱：PDA 
屬性 值 
螢幕高度 640 
螢幕寬度 480 
支援色深 65536 
 10
內並非單純的整數、字串、浮點數等 XML Schema 原生資料型別，因此我們必須自
行撰寫 XML Schema 讓各節點能夠有一個剖析傳送訊息的準則，圖二為本系統使用
之訊息傳遞模型，方形表示一個 XML 節點，整份 XML 訊息依據節點間之巢狀關係
為一樹狀架構。依據 SOAP 架構，此模型必須包覆在 SOAP 封套內的 Body 元素內，
並且必須有一個根節點以符合 XML 規範。若為請求訊息，根節點名稱應與所呼叫的
網路服務名稱相同；若是回應訊息，則根節點名稱可為任意自訂字串，惟須符合 XML
規範。每個根節點下都有兩個子元素，分別是 Parameters 以及 Content。Parameters
表呼叫調適 Web Service 的相關參數，將作為調適網頁內容之參考。這些調適參數是
代理伺服器收到情境資訊後依據情境資訊所產生的「屬性-值」配對。關於參數的產
生方式請參考第五章系統實作內的敘述。每一個 Parameters 節點內具有一個以上的
Statement 子節點，每個 Statement 節點表示一個裝置的「屬性-值」配對，具有 Subject、
Object 以及 Predicate 三個子元素。Subject 表示所要描述裝置的名稱，例如
「PDA001」；Predicate 表示要描述的屬性，例如「螢幕寬度」；Object 表示所對應屬
性的數值，比方說「480」。Content 表示要傳送的網頁內容檔案，為一個二進位檔，
為了傳送方便，我們會將檔案編碼為 Base64 格式來傳送。 
 
五、 系統實作 
這一章主要說明我們如何實作一個以 Web Service 為基礎的內容調適代理伺服
器系統，介紹各個元件的開發細節以及相關技術的使用。為了增加相容性及跨平台
支援，我們使用 Java 作為系統開發的主要語言，使用版本為 J2SDK 1.5.0，代理伺服
器的作業系統為 Windows XP。在 Web Service 的實作上，我們使用最新版的開放程
式碼，Apache 所開發的 Axis2，作為撰寫 Web Service 的套件。Axis2 為 Apache Software 
Foundation 所開發最新 Web Service 實作，因為使用簡單並且使用極具彈性，受過許
多程式開發人員的驗證，所以我們使用 Axis2 作為本系統在 Web Service 上的基底架
構。本系統將 Web Service 的仲介者直接設定在 web server 所在機器，未來實際應
用時可以彈性變動。本章將說明系統內兩大元件：網頁內容調適代理伺服器以及內
容調適 Web Service 的實作細節及功能。 
 
5.1. 代理伺服器設計 
    圖三為代理伺服器設計以及處理的細部流程圖。服務請求接收元件是系統內常
駐的服務傾聽執行緒，負責接收客戶端的服務請求。當收到客戶端的服務請求時，
服務請求接收元件會產生一個「HTTP 請求剖析元件」並將所收到的 HTTP 請求傳送
給「HTTP 請求剖析元件」。「HTTP 請求剖析元件」分析並且取得該 HTTP 請求所需
要的資訊，將之封裝成一個 HTTP 請求的抽象化物件，再傳送給「網頁內容擷取元
件」。「網頁內容擷取元件」負責向網際網路上的 HTTP 伺服器進行網頁內容的擷取，
並且存入系統快取內，以方便「調適參數產生元件」產生調適參數。調適參數的產
生乃依據 HTTP 請求物件內關於裝置屬性以及使用者偏好的情境資訊以及網頁內容
 12
表二、支援圖片的改編參數範例 
 
 
5.1.1 內容調適參數分派器 
透過「調適參數產生元件」，我們可以取得執行網頁內容改編所需所有參數。不
過「調適參數產生元件」產生的結果為任意排列的參數集合，然而改編動作的進行
需要有一定的順序。例如對於 HTML 檔的相關改編參數裡，擷取表格內容的動作所
需參數需排於轉換 HTML 檔為純文字檔所需參數之前；否則，轉換成純文字檔的網
頁已經無法再執行擷取表格內容的動作。本節我們解釋分派器如何確保沒有這種次
序顛倒的改編路徑發生。在介紹解決方法前，我們先歸納出改編系統的兩項特徵：(1) 
在本系統中，各項參數都有其相對應處理的網路服務。例如，HTML 文件檔改編參
數「移除節點」(RemoveNode)由 Java 的 DOM Tree 類別來處理，在 Java DOM Tree
類別下也包含如修改節點屬性等改編模組。(2) 可能發生改編路徑次序錯亂的主要原
因是因為檔案格式的轉換沒有按照由繁而簡的順序執行。總結以上兩點，在不考慮
改編成本的情況下，我們依照下列三個原則設計改編模組的分派演算法： 
 
(1) 將處理相同 MIME 類別的改編模組集合在一起，成為一個改編模組集合，減
少類別轉換所造成的效能負擔。 
(2) 網頁內容型別隨著處理類別轉換，首先要處理的必定是原始網頁內容 MIME
型別的改編模組集合。最後一個要處理的改編模組集合必須在 CC/PP 之定義
字彙，即各個行動裝置的 CcppAccept 集合中，若找不到，代表改編失敗。 
(3) 可以查詢所有表二將圖片轉換為特定格式的「TransformTo 文件格式參數改
編模組」，以第一個網頁內容型別為基礎向下推至最後一個。 
 
基於這些原則，我們的分派演算法設計如圖四所示。以「?」開頭的表示變數，
所有的集合都是由「屬性-值」配對(Key-Value Pair)所構成。以「//」開頭的為註解。
分派器的輸入為「調適參數產生元件」的改編參數以及裝置屬性，這兩者皆以「屬
性-值」配對(Key-Value Pair)實作；輸出為一個以字串表示、經過排序的「屬性-值」
配對集合。分派程序一開始，輸出之集合為空。接著使用網頁內容一開始的 MIME
                                                 
1 使用 Greg Faron 所寫的 GIF 編碼程式，網址：http://www.unisys.com 
參數名稱 功能描述 
ScaleImageByWidth 圖片依照裝置的螢幕寬度作等比例縮放 
ScaleImageByHeight 圖片依照裝置的螢幕高度作等比例縮放 
ReduceColorDepth 圖片依照裝置螢幕支援色深抽離圖片色深 
TransformTo 將圖片轉換為特定格式，目前支援的格式為 JPEG、GIF1、
PNG、HTML、Plain Text 
 14
 
5.2. 網頁內容調適 Web Service 設計 
圖五為文件調適系統的詳細運作過程：首先，Web Service 將服務所回傳的 SOAP
訊息傳給文件調適系統，文件調適系統將 SOAP 封套 (SOAP Envelop)和文件內容抽
離出來，並將文件內容依據其文件格式做分類。例如一份 SOAP 訊息可能包含一個
HTML 檔和一張 JPEG 圖檔和一張 PNG 圖檔，此階段的過程就是將這三項訊息抽離
出來，分別交給調適引擎處理。調適引擎會依據使用者偏好、裝置特性、情境資訊
等來調適檔案格式，依據情境的不同，調適出來的檔案也會有相當大的差異，HTML
檔可能被調適成 WML 檔案，JPEG 和 PNG 檔可能會被調適成 WBMP 檔，以符合客
戶端裝置和情境的需求，最後再用 SOAP 封套將這些結果封裝完畢，送給呼叫這個
Web Service 的 Proxy Server 或是其他程序作進一步的處理。這樣的整合，可以讓網
頁開發人員可以不用煩惱使用者的設備可以接受的呈現格式，因為只要加入了情境
資訊，內容調適系統就會自動交涉出最佳的檔案呈現格式，可以有效降低 Web Service
運用在手持或嵌入式裝置的複雜度，減少程式開發人員的工作。 
 
 
圖五  文件調適系統詳細運作過程 
 16
PDF 文件(Printable Document Format)與圖片(JPG)等文件格式來展現，壓縮檔文件則
依各行動裝置是否安裝解壓縮程式來判斷是否保留。互動內容則讓使用者可以針對
個別主題，發表其意見，與其它使用者互相討論及分享對教材內容的評論與心得。 
 
 
 
 
 
 
 
 
 
圖六  電子課本版面架構 
 
受限於行動裝置的能力，很多桌上型裝置能夠讀取的檔案格式，轉移到行動裝置
上往往無法正常地顯示。以下分別闡述行動裝置的內容讀取的限制： 
(1) 螢幕大小：在讀取解析度較大的畫面，使用者須要拉動捲軸，才能瀏覽完全
部畫面。 
(2) 檔案格式：行動裝置的瀏覽器，因為硬體上的不足，例如較低頻的中央處理
機與較少容量的記憶體，使得無法讀取 HTML 與圖檔以外的格式。因為 PDF
文件的易攜帶、格式保存容易等優點，使得它經常做為輸出的檔案格式。但
是在行動裝置上 PDF 格式常會不能讀取，即使可讀取，也要耗費大量的記
憶體。 
(3) 硬體功能：如同 2G 手機等部份行動裝置，其硬體甚至不允許有效地讀取圖
片。 
 
有鑑於以上的缺點，我們設計了「電子課本」系統，目的在使任何行動裝置，都
能有效的閱讀教材內容。為了改善以上三點行動裝置的缺失，我們的「電子課本」
有以下特色： 
 
(1) 版面調適：能夠動態地調整教材內容版面，以期能使干擾使用者程度降到最
低。例如不必使用捲軸即能瀏覽整個版面。 
(2) 內容屬性調適：能自動調整圖片的大小與其品質，以期能讓行動裝置快速讀
取。 
(3) 檔案格式轉換：有些內容以非 HTML 格式提供，這將造成老舊機種無法讀取
的情況，例如無法讀取 PDF。我們的「電子課本」能自動將 PDF 轉成圖檔(JPG)
與純文字，並自動判別該行動裝置機種的能力，而選擇性地提供任一種版本
教材內容區 
互動留言區 
 18
  
圖八  轉換成圖片後在 iPAQ 上的執行結果      圖九  轉換成文字後在 iPAQ 上執行結果 
 
 
圖十一  轉換成圖片後在 Symbian S80 上的執行結果 
 20
 
圖十三  表單網頁在 Symbian S80 展示之結果 
 
 
圖十四  表單網頁在 iPAQ 之展示結果 
 
六、 結論 
本研究利用網路服務機制(Web Service)實作了一套簡單的互動式情境感知內容
調適電子課本系統，可在數位化教材可以正確且沒有資訊遺失的前提下，讓靜態教
材與動態留言在學生的電子課本中都可以依照下載時情境自動調適、正確的呈現。
基本上，透過 Web Service 的方式帶來了彈性、可擴充性以及負載平衡的好處，透過
我們的系統設計，可以讓整個網頁內容調適系統享受到以 Web Service 為基礎之設計
帶來的好處。也是本系統較其他系統更能符合實際應用需求的地方。最後，我們列
出本系統未來可以持續改進的方向，希望日後我們可以有更大的突破： 
 
(1) 考慮更多裝置屬性參數：本系統只採用了幾個簡單的裝置屬性進行產生調適
參數的判斷，因此產生出來參數的結果可能存在盲點。在未來，調適參數產
