validity of bidding information and also verify the 
correctness of identity. In addition, we implement a 
web security defense system based on proxy server. 
All HTTP requests and responses are analyzed by a 
number of detection modules. In case a malicious 
action is detected, our system will block the action 
to protect the user. Additionally, our system 
provides the advantages of being cross-platform, 
lightweight and high performance. 
英文關鍵詞： Sealed-bid auction, authenticated encryption, Web 
Security, Defense System 
 
2 
內容 
中文摘要 ................................................................................................................................. 3 
英文摘要 ................................................................................................................................. 3 
關鍵詞 (keywords) ................................................................................................................. 3 
前言 ......................................................................................................................................... 4 
研究目的 ................................................................................................................................. 5 
文獻探討 ................................................................................................................................. 6 
研究方法 ................................................................................................................................. 9 
結果與討論 ........................................................................................................................... 19 
計畫成果自評 ....................................................................................................................... 27 
參考文獻 ............................................................................................................................... 28 
 
  
4 
前言 
隨著行動數位資訊科技與無線網路高度的發展與應用，使用者所使用的終端設備已不再僅限於傳
統的個人電腦，利用「行動裝置」(mobile device)或無線網路(wireless network)進行資料交換、分享、
傳播，逐漸建構一個無所不在(ubiquitous)社會生活型態。，如何在計算能力、記憶體空間、電池電量
有限制的行動裝置中，提供使用者保護個人隱私與資訊安全需求的安全可靠應用環境，是當前重要的
研究議題。近年來，網際網路的蓬勃發展使得網路交易急劇地成長，透過網際網路上的電子交易，消
費者和拍賣者可以迅速地完成許多商業行為，這不僅能節省雙方時間，也能免去一些不必要的手續來
降低成本。有鑑於此，本計畫設計一鑑別與隱私保護機制，採用自我驗證鑑別加密的技術，將之應用
於輕量化密封式競標系統，使其適用於行動裝置，並針對密封式競標目前使用之密碼機制，探討其安
全議題與效率問題，並提出改善的方法。 
在傳統的競標方式中，競標者必須要親自到競標會場進行競標，因為時間與空間的因素，導致有
許多人無法參與競標，因而限制了市場規模。因此，電子競標慢慢的興起，可有效地解決傳統競標因
時因地所造成之不便；但因所有競標資訊經由公開網路傳送，因此也存在許多資訊安全疑慮，如竄改、
偽造、複製等。電子競標通常可分成以下兩種，一種是開放式競標，另一種是密封式競標。在開放方
式競標中，又可分成兩種，一種為英式拍賣機制，由每位競標者不停的喊價，當沒有人出價時，便以
出價最高的競標者獲得物品，像是著名的奇摩拍賣便是此種方式。另一種為荷式拍賣機制，由拍賣者
先宣告一個價格，然後逐步降價，一直到有人接受所宣告的價格為止。接受宣告價格的競標者就是贏
家，必須支付宣告的價格。此種競標競方式可進行多次，又稱為多次競標行的競標方式。而在密封式
競標中，也可分成兩種，一種為第一高價，也就是競標者透過送出一密封標單，待競標時間終止，招
標商便進行開標作業，以競標價值較佳者為得標者，在許多大型工程發包與政府採購皆採取此種方式；
另一種則為第二高價，基本上與第一高價拍賣相同，只有在最後以第二高的出價作為購買物品的價格。
此兩種競標方式，競標者皆只能進行單次競標，因此又稱單次競標方式。此兩種電子競標皆有其實務
可行性，本計畫將只針對密封式競標進行探討。 
而近年來，有許多學者分別提出不同的保護機制來保護。最早在 1996 由 Franklin 與 Reiter [FR96]
率先提出基於秘密分享(secret sharing)的密封式競標機制，使用分散式招標商的方式去找出其競標價格，
使在整個競標活動上，能夠避免招標商欺騙之行為，但由於一旦得標者確定之後，會將標單洩漏給所
有招標商知道，因此無法達到標單隱私保護的功能。而在 1998 年 Kudo[Kud98]則提出使用時間伺服器
的密封式競標機制，將密封式競標加入時間的概念並利用公開金鑰密碼系統與時間金鑰憑證(time-key 
certificate)的概念來滿足時間相關的需求，然而由於招標商只會公佈其得標價格讓其他競標者去驗證，
因此得標者並未持有得標證據。1999 年 Cachin[Cac99]提出基於同位加密(homomorphic encryption)與模
糊第三方之密封式競標機制，2002 年 Suzuki 等人[SKM02]提出使用雜湊鏈(hash chain)的密封式競標機
制且 Omote 與 Miyaji[OM02]也提出使用雙管理者與電子佈告欄系統的電子競標機制與簡易的撤銷機
制，然而若當管理者遭受共謀攻擊時，則在宣佈得標者階段時，招標商將無法有效識別其管理者身分，
因此 2003 年 Chang 與 Chang[CC03] 提出任意且匿名競標之電子競標機制，並宣稱能夠有效確保競標
者的匿名性與完整性，但後人指出[CC03]易遭受中間人攻擊。2005 年 Juang 等人[JLLL05]基於[CC03]
所提出的方法來提出不需要相互信任的公正第三方的協助之下，使用門檻式加密機制來達到競標者之
間的公平性。2006 年 Chang 與 Chang [CC06]改進 Chang 與 Chang 的機制[CC03]並提出改良且強調具
匿名性的競標機制。之後也有許多不同的變化，包括在 2007 年 Zheng 等人[ZMM07]提出不需有招標商
之第一高價密封式競標機制，在 2008 年 Islam 與 Rahman[IR08]提出一種新的拍賣機制隱私標準，能夠
6 
義務； 
– 不可偽造性(unforgeability)：得標者與得標價格必須正確，招標商無法偽造假的得標者與得標價
來謀取利益； 
– 不可竄改性(non-malleability)：在競標與開標過程中，標單內容皆無法被竄改，此外競標者也不
能在競標價格送交給招標商後進行更改、撤回； 
– 可驗證性(verifiability)：開標後所有人皆可驗證標單來源的正確性及標單內容的完整性； 
– 抵抗重送攻擊(against replay attack)：惡意攻擊者無法藉由重複傳遞相同的競標資訊來假冒競標
者進行競標； 
– 抵抗中間人攻擊(against man-in-the-middle attack)：惡意攻擊者無法假冒成競標者傳送竊取或經
竄改的資料傳送給招標商； 
– 雙向鑑別(mutual authentication)：競標者、招標商與競標管理者任意的雙方皆能正確的鑑別對方
身分。 
 操作需求(operational requirement) 
– 可追蹤性(traceability)：競標者對競標後產生的標單都握有證據，當開標時，得標者可憑此證據
證明自己得標，而招標商也能輕易追蹤找出其得標者； 
– 時效性(time restriction)：標單必須要在競標截止時間之前送達，過期標單則都視為無效標單； 
– 單次註冊(one-time registration)：任何競標者，只要註冊過一次，之後就不用重新註冊，便可直
接參與競標； 
– 單次競標(one-time bidding)：任何競標者，在同一次的競標活動中只能進行一次的競標，不能反
悔或者重複進行競標動作。 
除了滿足上述的需求外，本計畫將提出新的匿名保護機制，在競標與開標階段，競標管理者與招
標商皆無法得知其競標者的身分，直到選出最高價標單之後，所有人皆可驗證其標單的合法性，而招
標商則會要求得知其確實身分，並驗證其身分是否正確。因此本計畫提出的方法具有以下特點：(1)競
標者達到匿名性；(2)所有訊息皆可自我驗證其正確性與有效性；(3)所有參與競標活動之競標者皆可公
開驗證得標者標單之合法性與有效性；(4)招標商有效確認得標者身分；(5)當競標者發生競標糾紛時能
有效處理。 
此外，本計畫為了加強適用於行動應用系統之鑑別與隱私保護機制，因而實作一基於代理伺服器
之輕量化網頁安全防禦雛型系統。以密封式競標系統為例，目前網際網路存在數十萬個惡意網站，在
惡意網站大量繁殖的時代，若沒有一個有效的防禦機制，只要有新型態的攻擊出現，使用者將無法防
禦，於競標的過程中而危及隱私。而在知識傳遞發達以及攻擊技術門檻降低的情況下，惡意攻擊的數
量只會日益增加而不會減少。若沒有可以即時阻擋及防禦的解決方案，受害者將落為駭客眼中的肥羊。
惡意網站攻擊的途徑很多種類，目前大多數新型態的攻擊都是使用 JavaScript，包括攻擊瀏覽器、Adobe 
Reader、惡意程式下載等。為了能夠直接取得、檢查使用者所連線的網站，本計畫實作一代理伺服器，
將使用者連線的網站經過各種靜態、動態模組過濾，並將可疑的連線阻擋，以確保使用者接收到的頁
面是正常無虞的，提昇競標交易的安全性。 
文獻探討 
本章節將分別介紹本計畫所採用的相關技術與參考文獻，包含雙線性配對函數、鑑別式金鑰交換
機制、基於身分之鑑別式金鑰交換機制、鑑別式加密機制、使用自我驗證公開金鑰系統之鑑別式加密
8 
傳的訊息中，很難可以去求得其對應的交易金鑰。但此方法卻有缺點，包括沒有鑑別使用者身分的能
力，因此無法有效抵擋中間人的攻擊，對任何一個攻擊者而言，皆可以假冒合法的成員，與其他成員
進行通訊，但其他成員卻會誤信自己正與合法的成員進行秘密通訊而不自知。在 Diffie 與 Hellman[DH76]
提出金鑰交換研究議題後，便也帶動許多學者投入此研究議題中，而在設計金鑰交換機制上，通常包
括以下三種設計方式，包括傳統公開金鑰密碼系統、基於身分為驗證基礎的身分密碼系統與無驗證公
開金鑰密碼系統。 
在 2000 年，Joux[Jou00]以傳統公開金鑰密碼系統為基礎，首次應用雙線性配對函數(bilinear pairing)
運算，提出一套僅需一次訊息交換即能完成三方使用者建立共享交談金鑰的金鑰協議協定。此協定不
僅是第一個漂亮地將雙線性配對運用於密碼技術上，也是第一個僅需一次通訊量即能完成共享交談金
鑰建立的三方式金鑰協議協定。但 Joux 所提出之方法同樣也不具有身分鑑別的能力，因此無法有效抵
禦中間人攻擊。在 2003 年，針對 Joux 金鑰協議協定的缺點，Al-Riyami 與 Paterson[AP03]提出具有身
分鑑別能力的三方式金鑰協議協定，以解決 Joux 所面臨的中間人攻擊問題，但在計算時間與儲存上比
較沒效率。 
為了解決金鑰交換協定不具有鑑別的能力，鑑別式金鑰交換協定進而被提出，在鑑別式金鑰交換
協定中，必須確保另一方能夠擁有正確的金鑰，並且確保無他人能夠知道特定私密金鑰的值，以取得
交易金鑰。在 2002 年 Smart[Sma02]第一個使用雙線性配對函數提出兩方式基於身分基礎的鑑別式金鑰
協議協定，後續分別有許多學者提出不同的協定，在 2012 年，Holbl 等人[HWB12]提出基於 Hess[Hes03]
所提出的簽章機制去改良，提出新的雙方式基於身分基礎的鑑別式金鑰協議協定。在本計畫所提出的
方法中，將利用此金鑰協議機制作為競標者與招標商向競標管理者註冊的方式，因此接著介紹 Holbl
等人[HWB12]所提出的方法。此協定角色包括金鑰中心(key center，簡稱 KC)、使用者 A 與使用者 B，
其中 KC 將建立系統參數與公開參數，而使用者 A 與使用者 B 向 KC 註冊並利用所簽署的訊息進行金
鑰交換。 
Girault[Gir91]在 1991 年提出具自我驗證公開金鑰系統，其設計概念為公鑰是由使用者與金鑰中心
(KC)所共同建立，且 KC 的認證是內嵌於公鑰中，其餘使用者可以容易的驗證該使用者公鑰的正確性，
而由於私鑰是由使用者所自行建立，因此保證 KC 無法得知。此種方法所產生之公鑰具一般公鑰憑證
的使用效力，當使用者得到 KC 所產生之公鑰則可利用自己的私鑰驗證該公鑰的正確性，若公鑰驗證
正確，則可以使用自己的私鑰與通訊方的公鑰進行金鑰協議。 
與基於身分的密碼系統相比，自我驗證公開金鑰系統則可避免金鑰託管(key escrow)的問題，在
2007 年 Shao 使用橢圓曲線上雙線性配對的特性提出具自我驗證簽章機制(self-certified signature，簡稱
SCS)，在本計畫所提出的方法中，將利用此自我驗證簽章機制發展適用於密封式競標之鑑別加密機制，
因此接著介紹 Shao[Sha07]所提出的方法。此協定角色包括 KC、簽章者 A 與驗證者 B，其中 KC 將建
立系統參數與公開參數，各個使用者將會自行產生部份私密金鑰與部份公開金鑰，並傳送 ID 與部份公
開金鑰讓 KC 可計算出用於自我驗證之私密金鑰。 
代理伺服器 (Proxy Server) 的作用是用來當客戶端與伺服器之間的代理人。當客戶端發出請求時，
將先向代理伺服器查詢，代理伺服器根據本身的設定，將客戶端的請求向伺服器發送。伺服器的回應
代理伺服器收到後，將回傳給客戶端。使用者在上網時透過代理伺服器，代理伺服器查詢本身的快取
是否有此網頁，如有的話則直接回傳網頁給使用者，不用再次向站台抓取。但若無快取，則代理伺服
器代為向網站抓取網頁，存入快取，並將網頁內容直接回傳給使用者。 
因代理伺服器在使用者與網站之間，可以取得所有來自客戶端的請求，以及所有來自網站的回應。
在這其中若需要做任何的處理，例如針對客戶請求的頁面做快取加速，或者伺服器回傳的頁面進行安
全檢測等，都十分方便。 
10 
本研究所提出的系統角色，包括金鑰中心(key center，簡稱 KC)、競標管理者(auction manager，簡
稱 AM)、競標者(bidder，簡稱 BD)與招標商(auctioneer，簡稱 AU)，以下將細部介紹其功能與定義。 
系統角色:系統角色包括金鑰中心(KC)、競標管理者(AM)、競標者(BD)與招標商(AU)。以下說明
各角色在系統中的功能。 
金鑰中心(KC) :金鑰中心主要功能為簽發競標者、招標商與競標管理者金鑰對，申請者可利用申
請的金鑰對，證明自己身分合法性，每個申請者僅有唯一一組公私鑰對。簽發過程中金鑰中
心會先核對申請者身分，接著金鑰中心利用自己的私鑰簽署申請者傳來的訊息，計算出申請
者的公開金鑰與公開金鑰驗證值，再將此兩份訊息傳給使用者，使用者即可透過獲得的公開
金鑰驗證值產生出個人私鑰，並利用此私鑰自行驗證公開金鑰的正確性。金鑰中心僅參與金
鑰對的簽發，並不參與其他階段。 
競標管理者(AM):主持拍賣活動的公正第三方，當競標階段結束時，招標商向競標管理者提出開
標要求，競標管理者便負責進行開標動作，找出最高價之標單，並驗證最高價標單之正確性
與有效性，以維持競標活動之公平性，若發現競標管理者有舞弊現象將予以懲處。 
競標者(BD):為欲參與競標者，在一個競標活動可能有許多競標者，當競標者欲進行競標活動時，
則必須先跟金鑰中心申請金鑰對並跟競標管理者進行競標註冊，才可進行競標活動，在進行
競標活動時，競標者利用鑑別加密機制，將競標資訊含在裡面，只有正確的招標商才能得到
競標者之競標資訊，以確保資訊並未外洩。而當競標者最後得標時，則必須將其身分識別符
提供給招標商，讓招標商能確實知道其身分並公佈，若在開標時，競標者對競標管理者所公
佈最高價之標單有疑問時，則可要求進行標單比對，以確保競標者的權益。 
招標商(AU):提供商品或服務，讓競標者進行競標，當招標商收到競標者競標之標單資訊時，則
只能確認其標單資訊的正確性與有效性，且不能得知其標單價格，當確認完畢之後則會將所
有競標者之標單放置電子佈告欄，並予以加密，只有當開標時間，競標管理者才有權限去進
行開標動作，解開標單之競標價格，並選出最高價之標單，當確認最高價格之標單後，招標
商便會向得標者要求得知其真實身分並公佈。 
整個系統架構包含以下七個階段:(1)金鑰中心系統建置階段：金鑰中心建立系統參數並公開資訊；
(2)金鑰對申請階段：競標管理者、競標者與招標商分別利用其身分識別符向金鑰中心申請其金鑰對；
(3)競標註冊階段：招標商與競標者分別向競標管理者申請註冊，以取得其競標金鑰，參與競標活動；
(4)競標階段：當招標商提供商品或服務進行競標，競標者使用其個人私鑰與競標金鑰進行競標；(5)開
標階段：當競標時間終止，招標商要求競標管理者解開所有標單資訊並找出最高競標價格的標單；(6)
得標者身分確認階段：當開標終止，招標商根據其所公佈之競標收據資訊，找出其得標者，並要求確
認得標者真實身分且公開；(7)競標糾紛處理階段：當面臨一些競標糾紛，包括競標價格一樣時，或競
標者發現所公佈之得標價格比自己的競標價格還低時的處理方式。  
本系統所使用之符號與系統角色符號定義如下： 
q 大質數(長度＞160 位元)  
P 在橢圓曲線上的基點(Base Point)  
G1 加法循環群  
G2 乘法循環群  
BBSAM 競標管理者所維護之電子佈告欄系統，用以公告標單資訊  
(PKC, sKC) 金鑰中心之公私鑰對，其中 PKC＝sKC
 
P  
(Qx, Sx) 個體 x 之公私鑰對，其中 Qx=H1(PKC, IDx, Yx)、Sx=sKCQx，Yx 為 x 所產生之自我驗證
公鑰的允諾值  
12 
 步驟 2.3 選擇一亂數 r1 ∈Zq*，並計算以下點 
  U1=r1P (3.4.3) 
  V1＝SBDi+r1YBDi   (3.4.4) 
 步驟 2.4 公開 QBDi，YBDi  
 步驟 2.5 將{U1,V1}傳送給 BDi 
步驟 3 BDi 由 KC 傳送的公開金鑰對驗證值計算出私鑰，並以此私鑰驗證公開金鑰的正確
性。若公開金鑰正確，則金鑰對申請成功。詳細步驟如下： 
 步驟 3.1 BDi 藉由 KC 傳來的公開金鑰驗證值{U1,V1}產生私鑰 
  SBDi＝V1- xBDiU1 (3.4.5) 
 步驟 3.2 由私鑰計算公鑰並驗證是否與 KC 產生的公鑰相等於，若相等則公鑰驗
證正確，金鑰對申請完成 
  e(SBDi , P)=e(QBDi , PKC)     (3.4.6) 
【招標商之金鑰對申請階段】 
步驟 1 AUj 選擇一亂數作為機密值，並以此機密值產生橢圓曲線上的點。完成後將自己的 ID
與此點一起傳送給 KC 申請金鑰對。詳細步驟如下： 
 步驟 1.1 使用亂數產生器產生一隨機亂數 xAUj ∈Zq*作為機密值，並計算      
  YAUj＝x AUj P  
 步驟 1.2 將{Y AUj ,ID AUj}傳送給 KC。 
步驟 2 KC 將利用 AUj 所傳送之資訊進行金鑰對計算，產生 AUj 的公開金鑰自我驗證資訊與
公開金鑰。詳細步驟如下： 
 步驟 2.1 計算公鑰  
  QAUj =H1(PKC, IDAUj, YAUj) ∈G1* 
 步驟 2.2 計算私鑰 
  SAUj =sKCQAUj (3.4.7) 
 步驟 2.3 選擇一亂數 r2 ∈Zq*，並計算以下點 
  U2=r2P (3.4.8) 
  V2＝SAUj +r2YAUj (3.4.9) 
 步驟 2.4 公開 QAUj，YAUj  
 步驟 2.5 將{U2, V2}傳送給 AUj 
步驟 3 AUj 由 KC 傳送的公開金鑰對驗證值計算出私鑰，並以此私鑰驗證公開金鑰的正確
性。若公開金鑰正確，則金鑰對申請成功。詳細步驟如下： 
 步驟 3.1 AUj 藉由 KC 傳來的公開金鑰驗證值{U2, V2}產生私鑰 
  SAUj＝V2- xAUjU2 (3.4.10) 
 步驟 3.2 由私鑰計算公鑰並驗證是否與 KC 產生的公鑰相等，若相等則公鑰驗證
正確，金鑰對申請完成 
  e(SAUj, P)=e(QAUj, PKC) (3.4.11) 
 
【競標管理者之金鑰對申請階段】 
步驟 1 AM 選擇一亂數作為機密值，並以此機密值產生橢圓曲線上的點。完成後將自己的 ID 與
14 
 步驟 2.3 使用亂數產生器產生一隨機亂數 aAM ∈Zq*作為機密值，計算 NAM=aAMP 
 步驟 2.4 使用其 AM 本身之私密參數 xAM 計算以下資訊並建立競標金鑰： 
  RAM=e(SAM, P)
x
AM
  
  tAM=H2(RAM)  
  FAM=tAM SAM+ xAM SAM  (3.5.1) 
  KBDi= aAM YBDi= aAM xBDiP  
 步驟 2.5 將{tAM, FAM, NAM}傳送給 BDi 
步驟 3 BDi 收到{tAM , FAM, NAM}後，驗證 AM 所傳送之資訊的正確性，並計算自己的競標金鑰 
 步驟 3.1 利用所接收之資訊，計算以下： 
  R A´M =e(FAM, P)e(QAM, -PKC) 
t
AM
  (3.5.2) 
 步驟 3.2 確認回覆資訊之完整性與 AM 身分的合法性；反之，BDi 拒絶 AM 的回覆資訊
並停止執行以下步驟。 
  tAM =?H2(R A´M)  
 步驟 3.2 與 AM 共同建立一把競標金鑰： 
  KBDi 
= xBD
i
 NAM= xBD
i
 aAM P  
【招標商註冊階段】 
步驟 1 AUj 產生註冊資訊{tAUj , FAUj}，並傳送給 AM。詳細步驟如下： 
 步驟 1.1 使用 AUj 本身之私密參數 xAUj 計算以下：  
  
RAUj=e(SAUj, P)
x
AUj  
  tAUj=H2(RAUj)  
  FAUj=tAUjSAUj+ xAUj SAUj   
 步驟 1.2 將{tAUj , FAUj}傳送給 AM。 
步驟 2 AM 收到註冊資訊{tAUj , FAUj}，驗證 AUj 資訊的正確性，並計算回覆資訊{tAM , FAM, HAM}，
說明如下： 
 步驟 2.1 利用所接收之資訊，計算以下： 
  
R A´Uj=e(FAUj, P)e(QAUj, -PKC)
tAUj 
 
 步驟 2.2 確認註冊資訊之完整性與 AUj 身分的合法性；反之，AM 拒絶 AUj 的註冊，並
停止執行以下步驟 
  tAUj =?H2(R A´Uj)  
 步驟 2.3 使用亂數產生器產生一隨機亂數 bAM ∈Zq*作為機密值，計算 HAM=bAM P 
 步驟 2.4 使用其 AM 本身之私密參數 xAM 計算以下資訊並建立競標金鑰： 
  RAM=e(SAM, P)
x
AM
  
  tAM=H2(RAM)  
  FAM=tAM SAM+ xAMSAM  
  KAUj= bAM YAUj= bAM xAUj P  
 步驟 2.5 將{tAM , FAM, HAM}傳送給 AUj 
步驟 3 AUj 收到{tAM , FAM, HAM}後，驗證 AM 所傳送之資訊的正確性，並計算自己的競標金鑰 
 步驟 3.1 利用所接收之資訊，計算以下： 
  R A´M =e(FAM, P)e(QAM, -PKC) 
tAM
  
16 
  H2(e(αi ,βi))=?H2(e(P, P) 
H3(bidi)e(PKC,QAU)) (3.6.5) 
開標階段 
當競標時間終止，AU 要求 AM 解開所有標單資訊並找出最高競標價格的標單。 
步驟 1 AU 要求 AM 進行開標，執行下列動作。詳細步驟如下： 
 步驟 1.1 使用亂數產生器產生一隨機亂數 k2∈Zq*作為機密值，並利用其私密金鑰 SAU
與開標時間 TAU計算以下資訊，計算如下： 
  nAU=TAU⊕H2(e(k2QAM, SAU))       
 步驟 1.2 將{nAU,k2QAU}傳送給 AM 
步驟 2 收到開標要求{nAU,k2QAU}後，AM 將執行以下步驟進行開標，說明如下： 
 步驟 2.1 利用其所接收之 nAU與自己本身的私密金鑰 SAM，求得開標時間，計算以下： 
  TAU= nAU⊕H2(e(k2QAU ,SAM))  
 步驟 2.2 利用式子(3.7.2)所求得之開標時間求得電子佈告欄上的加密訊息，並利用其與
AUj 所共同建立之競標金鑰予以解密，以求得標單內容，計算如下： 
  EKAU(bidi ∥´H2(e(αi, βi))∥H2(e(Bi,P))) =mi⊕TAU  
  DKAU (EKAU(bidi ∥´H2(e(αi , βi))∥H2(e(Bi, P)))) 
 步驟 2.3 利用與 BDi 共同建立之競標金鑰將其標單內容予以解密，以得知其競標價
格，並進行比較，並找出其最高競標價格之標單，計算如下： 
  DKBDi (EKBDi (bi∥Pricei))  
 步驟 2.4 選出最高競標價格的標單 bidj，則會根據下列驗證式驗證標單資訊是否為有
效，若其標單資訊有效，則公開最高競標價格的標單資訊{bidj, H2(e(Bj, P)), 
H2(e(αj, βj)), Pricej}；反之，從其他標單中重新選擇最高競標價格的標單，並
重複以下步驟的驗證式，驗證式如下：。 
  H2(e(Bj, P))=?H2(e(YBDj+hjPKC, QBDj)) (3.7.1) 
得標者身分確認階段 
當開標終止，AU 根據其所公佈之競標收據資訊，找出其得標者，並要求確認得標者真實身分且公
開。 
步驟 1 AU 向 BDj 要求驗證其身分，步驟說明如下： 
 步驟 1.1 使用亂數產生器產生一隨機亂數 k3∈Zq*作為機密值，並利用其私密金鑰 SAU
與所公告之得標者之競標收據計算以下資訊，計算如下： 
  cAU=H2(e(k3QBDj, SAU))H2(e(αj, βj))   
 步驟 1.2 將{k3QAU, cAU}傳送給 BDj 
步驟 2 收到後{k3QAU, cAU}，BDj 鑑別 AU 身分，並回傳身分相關資訊，說明如下： 
 步驟 2.1 利用其所接收之 k3QAU、自己本身的私密金鑰 SBDj 與所擁有的競標收據，計算
以下資訊，並跟所接收到資訊進行驗證，若驗證式成立，則 BDj 回傳回傳身
分相關資訊；反之，BDj 停止執行下列步驟  
  c A´U =H2(e(k3QAU, SBDj))H2(e(αj, βj))  
  c A´U=? cAU
 
 
 步驟 2.2 使用亂數產生器產生一隨機亂數 k4∈Zq*作為機密值，並利用其私密金鑰 SBDj
將其身分資訊計算以下資訊，計算如下： 
  δj=IDBDj⊕H2(e(k4QAU, SBDj))   
 步驟 2.3 將{δj, k4QBDj}傳送給 AU 
18 
用  “Detection of JavaScript based Heapspray Attacks” [Hsu11] 中的偵測，能有效防止 
JavaScript 堆積擴展填充攻擊。使用者在瀏覽網路時，先經過安全防禦代理伺服器。代理伺服器會先
檢測此存取的網站是否在黑名單之中，若不是則向網站抓取網頁。網頁抓取回來之後，將網頁傳至防
禦模組中進行檢測，若檢測結果為安全網頁，才傳給使用者顯示網頁內容。使用者除了需要指定瀏覽
器的代理伺服器之外，並不需要任何其他複雜的設定，使用上非常方便。因此一般使用者也可以直接
使用。 
在通訊架構方面，客戶端在使用本系統時，先將代理伺服器設定至本系統。在連線網路時，將直
接對代理伺服器做 Three-Way Handshake，並傳送 HTTP Request。代理伺服器則代替客戶端向網站伺
服器做 Handshake，並轉送其 HTTP Request，將接收回來的 HTTP Response 轉送回客戶端。若使用
者連線時，被檢測模組偵測到連線至已知惡意網站，將直接終止對惡意網站的連線，減少頻寬及連線
時間的浪費。並且回報使用者連線的站台為惡意網站，避免遭到惡意網站的攻擊。例如使用者直接連
線至 http://malicious.com/attack.htm，系統檢測到 malicious.com 是已知惡意網站，將直接終止
連線。若是正常的網站，但是網站被惡意插入攻擊程式碼，無法被已知的惡意網站資料庫檢測出來。
Proxy Server 依舊會對惡意網站做請求，並取得網站回應抓下內容。經過動態檢測模組偵測，若找到
疑似惡意攻擊，將會停止轉送網頁內容給使用者，並回報偵測到惡意網頁。例如使用者連線至 http:// 
server.com，但該網站被攻擊者惡意攻擊，插入 <script src=”http://malicious.com/attack.js”> 
</script> ，使用者將無法單從網站得知是否為惡意網站，只能利用模組動態判斷。 
本研究之系統使用流程為使用者透過本系統上網時，系統取出使用者的連線網址，判斷該網站是
否存在惡意網站黑名單資料庫之中，若有則是已知惡意網站，直接顯示惡意網頁警告，不再下載網頁。
若無則下載網頁，判斷是否含有惡意 JavaScript 攻擊代碼或惡意網頁內容，若無則傳送網頁給使用
者。 
由於是小型代理伺服器，並不同於一般網路系統使用的代理伺服器如 “Squid” [Squ11] 。一般
的代理伺服器雖然效能較高，功能強大，但相較之下較為龐大，不易一般使用者使用，也難在一般個
人電腦直接使用。本系統使用 “Python” [py11] 編寫一小型代理伺服器，只要電腦中有 Python 環
境，就可以直接使用。此外系統直接在本機執行，可以免除連線至遠端代理伺服器所浪費的頻寬及時
間。 
Python 是一個靈活的程式語言。除了有極佳的程式可讀性之外，其物件導向的設計讓模組套件的
擴充度十分高，效率在同類語言中也是佼佼者，在常見的作業系統上也都有 Python 的環境，因此本
研究採用 Python 實作。 
在 Python 的架構下，為了快速開發我們所需要的代理伺服器，本研究選擇了 “The Twisted 
Network Framework” [Twi11] 。Twisted 是一個 Python 的 Network Framework，根據不同的網路
事件 (包括客戶端以及伺服器端) 來撰寫不同的處理。網路的安全分析通常都很依賴事件的處理，例
如針對某些特定的 GET 請求進行處理。Twisted 的出現讓開發網路應用程式非常簡單。舉例來說，若
要撰寫一個 TCP Server，只需數行程式碼即可做到。本研究需要的是客戶端與伺服器端中間的代理人，
因此若使用 Twisted 實作一代理伺服器，我們可以使用其中的 Proxy Module，載入 proxy 模組之後，
可以直接使用 proxy.Proxy 作為通訊協定，不用自行撰寫。 
針對我們模組的需求，我們需要得知客戶端請求的 URL、伺服器的網域名稱 (Domain Name)、伺
服器端回傳的網頁內容以及 JavaScript 內容。以下將會用三個不同的模組對客戶端所存取的頁面進
行檢查。 
 
  
20 
立時，則針對本研究所提出之方法探討是否有達成前述之安全需求與操作需求。接下來將分析所提出
方法之執行效率，包括計算複雜度分析與傳輸成本分析與儲存成本分析。 
本方法安全性基於單向雜湊函數(OWHF)、離散對數難題(DLP) 、橢圓曲線離散對數問題(ECDLP)、
Diffie-Hellman 問題(DHP) 與雙線性 Diffie-Hellman 問題(BDHP)五項密碼假設，將達到安全需求：出價
私密性、匿名性、不可否認性、不可偽造性、不可竄改性、可驗證性、抵抗重送攻擊與中間人攻擊、
雙向鑑別等安全需求與操作需求：可追蹤性、時效性、單次註冊與單次競標等操作需求，以下說明本
計畫所提出的方法如何達到這些安全需求與操作需求。 
關於安全需求方面，分析結果如下: 
(1) 出價私密性(secret bidding prices)：在本機制中，競標者使用競標金鑰加密競標價格 hi=E KBDi 
(bi∥Pricei)，因此除了競標管理者之外，其他競標者與招標商皆無法得知其競標者的出價價錢，
達到出價私密性。若攻擊者欲從 NAM 與 YBDi 獲得競標金鑰 KBDi，進而得知其競標價格，攻擊者將
面臨 DHP 難題。 
(2) 匿名性(anonymity)：由於標單資訊中沒有包含 IDBDi，所有人皆無法得知竸標者身分。若攻擊者經
由公鑰推導競標者身分，由於其金鑰對是利用單向雜湊函數所運算，因此基於單向函數不可逆的
特性，攻擊者將無法反推得知其身分，因此可以達到匿名性。 
(3) 不可否認性(non-repudiation)：當得標者否認其得標，由於每個競標者必須對加密後之競標價格進
行簽署產生 Bi，因此得標者便無法否認曾經參與競標。 
(4) 不可偽造性(unforgeability)：若攻擊者欲偽造合法標單資訊，然而攻擊者必須先持有合法的私鑰。
若攻擊者嘗試從 Ui 與 Vi 推導私鑰，必須先獲得 ri 或 xBDi，則將面臨 ECDLP 難題。 
(5) 不可竄改性(non-malleability)：由於在競標過程中，標單的傳輸是透過鑑別加密機制方式傳遞，因
此只有指定的招標商能確實解開其標單內容，因此攻擊者無法取得其標單資料並且竄改。若有攻
擊者攔截到所傳送的資訊{ri,Bi}，欲竄改其標單資訊，將面臨 ECDLP 與 BDHP 難題。此外當招
標商接收到競標者的標單時，招標商將標單資訊 mi=EKAU(bidi ∥´H2(e(αi, βi))∥H2(e(Bi, P)))⊕TAU
加密放置電子佈告欄上，競標者將無法更改或撤回該競標價格。若攻擊者欲竄改其競標價格，則
需要獲得加密金鑰 KAU。若攻擊者欲從 NAM與 YAU推導獲得 KAU，攻擊者將面臨 DHP 難題。 
(6) 可驗證性(verifiability)：當開標時，競標管理者會公開最高競標價格與招標商所給予的競標收據，
讓所有人皆可驗證標單之正確性與標單資訊的完整性。 
(7) 可抵擋重送攻擊(against replay attack)：在傳送的加密訊息中皆加入時間戳記，若接收方收到重送
攻擊的訊息，可直接判斷此訊息不為合理時間內所送出。 
(8) 可抵擋中間人攻擊(against man-in-the-middle attack)：在進行競標過程傳送的訊息皆透過鑑別加密
機制加密，當攻擊者欲藉由傳送所攔截的資訊成功假冒合法競標者或招標商，然而攻擊者沒有 BDi 
之私鑰 sBDi 或 AU 的私鑰 SAU，因此將無法成功攻擊。 
(9) 雙向鑑別(mutual authentication)：在競標階段，競標者與招標商透過傳送的標單資訊與收據，驗證
彼此的身分，以達到雙向鑑別。   
關於操作需求方面，分析結果如下: 
(1) 可追蹤性(traceability)：當招標商皆收到競標者所競標之資訊時，驗證其合法性之後，則會回傳其
符記(token)告知其競標者已正確接收到競標資訊，而當開標時，競標管理者則會藉由其符記追蹤
出其得標者，讓招標商自行與得標者驗證其真實身分。 
(2) 時效性(time restriction)：在本機制中設有時戳(timestamp)，當競標者在競標時，會產生一時戳傳
送給招標商，招標商會先驗證其時戳是否在截止時間之前送達，如此一來便可避免非法的競標者
22 
+2Te+TXOR +2Te+TXOR   
總合 TE+5TA 
+9TM+11Te 
+7TH+2TXOR 
TE+4TA 
+11TM+12Te 
+10TH+4TXOR 
2TD+4TA 
+11TM+10Te 
+6TH+2TXOR 
10TM+3TA+3TH 
   
傳輸成本分析針對金鑰對申請階段、競標註冊階段、競標階段、開標階段與得標者身分確認階段
分析競標者、招標商、競標管理者與金鑰中心在各階段的傳輸成本。表 2 列出各階段傳輸的訊息，表
3 列出各階段傳輸資訊的長度與總合。 
表 2 各階段傳輸成本示意圖 
參與實體 
競標者 招標商 競標管理者 金鑰中心 
金鑰對申請 YBDi ,IDBDi YAUj ,IDAUj YAM ,IDAM 
U1,V1 
(U2,V2)      
(U3,V3) 
競標註冊  tBDi, FBDi  tAUj, FAUj tAM, FAM, NAM, HAM - 
競標與開標 ri , Bi H2(e(αi , βi)) 
nAU, k2QAU 
- 
 
- 
 
得標者身分確認 δj, k4QBDj k3QAU, cAU - - 
 
表 3 各階段傳輸成本分析表 
參與實體 
競標者 招標商 競標管理者 金鑰中心 
金鑰對申請 |ID|+|P| |ID|+|P| |ID|+|P| 2|P| 
競標註冊 |V|+2P| |V|+|P| |V|+3|P| - 
競標與開標  |V|+|P| 2|h|+|P| - - 
得標者身分確認 |V|+|P| |P|+|h| - - 
總和 |ID|+4|P|+3|V| |ID|+4|P|+|V|+3|h| |ID|+4|P|+|V| 2|P| 
 
24 
(3)公開驗證得標者標單之合法性與有效性：當競標管理者完成開標動作時，則會公開其得標之標單
資訊與標單價格，讓所有參與競標之競標者與招標商皆能公開驗證，以確實達到公平性； 
(4)有效確認得標者身分：當開標動作完成，競標管理者公佈得標標單資訊時，招標商能依據競標時
所簽署之符記資訊，找出得標者，並要求得知其真實身分，招標商與得標者之間會相互鑑別，並
驗證其真實身分之正確性，最後公開得標者的身分； 
(5)有效處理競標糾紛：當面臨一些競標糾紛，包括當競標價格一樣或競標者發現其所公佈之得標價
格比自己的投標價格低時，皆能有效之處理。 
此外在安全性上除了可以達到出價私密性、匿名性、不可強迫性、不可否認性、不可刪除性、不
可偽造性、不可竄改性、可驗證性、可抵擋重送攻擊、可抵擋中間人攻擊及雙向鑑別等安全需求，亦
可以達到可追蹤性、時效性、單次註冊及單次競標等操作需求；在效率性上，因採用自我驗證鑑別加
密機制與雙線性配對機制，除了能有效節省溝通與計算成本外，也可避免被攻擊，因此與其他密封式
競標機制相比，本研究更具有實務可行性。 
 
 輕量化網頁安全防禦雛型系統之實作 
 
本章節針對我們所設計的系統進行結果分析及效能評估。首先進行效能評估，比較本研究之安全
防禦系統及其他代理伺服器效能比較。其次將測試本系統對惡意網頁的偵測率及誤判率，最後將測試
結果進行分析討論。 
【效能分析】 
為了測試透過本系統瀏覽網路時的效能，我們使用 Google Chrome 瀏覽器的「開發人員工具」進
行效能測試，此工具可以提供列出瀏覽網頁時所有存取的頁面以及連線時間。 
在效能分析方面，本研究比較三個連線數據，包括直接連線網路、使用本系統、以及 Burp Suite 
[PBS11]。Burp Suite 是一套使用 Java 撰寫的網路安全測試軟體，同樣使用代理伺服器的概念，可以
對中間代理的請求、回應進行修改。測試的項目包括發出的請求數量、傳輸的大小以及完整載入整個
頁面的總時間。測試結果請參見表 6。 
表 6 效能測試 
站台 
請求
數量 
傳輸大小 
載入時間 
未使用 本系統 Burp Suite 
Google 12 183.96 KB 777 ms 4670 ms 5030 ms 
Yahoo 70 438.45 KB 2630 ms 11270 ms 12020 ms 
Microsoft 88 739.37 KB 19320 ms 22410 ms 21590 ms 
Facebook 11 238.74 KB 641 ms 11390 ms 1390 ms 
Twitter 20 535.22 KB 4800 ms 16870 ms 10390 ms 
Mobile01 84 585.03 KB 9450 ms 10710 ms 17500 ms 
博客來 95 1270.00 KB 1450 ms 21010 ms 9730 ms 
備註：測試環境：Microsoft Windows 7 64bit、Google Chrome 18、Burp Suite 1.4、Intel Pentium E2180、
4GB Ram 
由此測試可以得知，透過本系統瀏覽網站，與其他方案相比功能正常，使用者可以正常的存取網
站的各項功能。效能方面因為每個請求都必須經過三個模組檢測，因此當網頁中的元件數量稍多，或
者是有較大的 JavaScript 檔案時，速度會拖慢較多，但與 Burp Suite 相比，速度差異不大。 
26 
表 8 惡意網站範例 
惡意程式下載 http://www.wsdhealthy.com/userfiles/file/Applet19.exe 
JavaScript 攻擊 http://thecheapseoservices.com/js.js 
惡意導向 http://modernmodelshansen.com/xxx/xxx.php 
 
測試結果請參見表 9： 
表 9 系統偵測率測試結果 
 
由此表可以得知，網站黑名單的過濾效果相當顯著，作為第一層偵測模組可以阻擋 86% 的惡意
網站。第二層動態偵測 JavaScript 則可以過濾 9.6% 個黑名單之外的惡意網站，最後一層模組進行惡
意網頁字串檢測可以找到 0.6% 惡意網站。在正常網站的部分，部分正常網站由於之前被列入惡意網
站，但是尚未從黑名單中去除，因此誤判為惡意網站，為 5% 數量的誤判。在 JavaScript 偵測的部份
無誤判。而網頁內容檢測的部份，由於字串比對較易誤判，有 0.6% 的網站遭到誤判。 
各模組的偵測率另外測試如下。黑名單機制採用 “Malware Database (AMaDa)” [MDA11] 中的
黑名單進行測試。為了實驗測試而未將本黑名單引入模組中，測試完畢之後可再引入，增加黑名單模
組的準確率。取 100 個惡意站台進行測試，測試數據請參見表 10。在 100 個惡意網站中，黑名單模
組可以偵測到 89 個，11 個未偵測到，偵測率為 89%。若黑名單模組可以引入更多黑名單資訊來源，
例如配合 Google Safe Browsing API [GSB11] 等，可以更準確的進行過濾。透過第一層黑名單先行過濾，
也可以減少後面兩個模組偵測的負擔及增加速率。 
表 10 黑名單模組測試結果 
 惡意網站數量 偵測到惡意網站 未偵測到 
黑名單模組 100 89 11 
 
JavaScript 模組偵測的部份，根據 “Detection of JavaScript based Heapspray Attacks” [Hsu11] 中
的測試，使用 “Metasploit Framework” [MF11] 配合 JavaScript 混淆器，產生 100 組惡意 JavaScript 
樣本進行測試。測試結果請參見表 11。 
表 11 JavaScript 模組測試結果 
 惡意網站數量 偵測到惡意網站 未偵測到 
JavaScript 模組 100 100 0 
透過 JavaScript 模組的偵測，惡意網頁所使用的 Heapspray 攻擊技術，可以準確的被 JavaScript 
引擎所偵測而阻擋，不會因為 JavaScript 混淆器的混淆而無法偵測。 
經過以上的測試，本研究所實作的網頁安全防禦系統可以成功的阻擋 9 成以上的惡意網頁，若引
入更多有效的黑名單，例如 “Google Safe Browsing API” [GSB11] ，將可以提昇其準確率。若網站為
28 
前重要的研究議題。本計畫以三年時間進行適用於行動應用系統之鑑別與隱私保護機制之設計與其應
用系統的實作。在第一年的計畫中，我們已完成通行碼基礎之低運算量的身分鑑別與金鑰交換機制的
設計，本機制達到雙向鑑別、前推安全、金鑰安全並且能抵抗通行碼猜測攻擊與重送攻擊等安全目標；
再者，為確保行動應用的內部隱私，我們亦研究與探討在行動電話作業系統(WinCE 平台)相關的安全
缺失與提出改進方案；除此之外，本計畫已將相關研究成果共有 3 篇論文投稿至 SCI、EI 等國際期刊
以及國際會議被接受發表[HWT10, TWT09, TWT10]以及 2 篇論文投稿到第 20 屆全國資訊安全會議中
[TW10, TWHM10]，以期能將我們所提出之研發成果與國際密碼研究社群分享。其中，[HWT10]論文
被 2010 e-CASE & e-Tech International Conference 選為最佳論文。 
本計畫在第二年中，完成一個具隱私保護之通行碼基礎身分鑑別機制的設計，同時實作行動電話
作業系統(WinCE 平台)隱私保護機制；並將相關研究成果共有 8 篇論文投稿至 SCI、EI 等國際期刊以
及國際會議被接受發表[CLLW10, CW10, CWHL10, CWHT11, CYW10, HCW11, LWH11, YLW10 ]以及2
篇論文投稿到第 21 屆全國資訊安全會議中[王潘吳蔡 11, LWT11]，其中[CYW10]論文被 Joint Workshop 
on Information Security 選為最佳論文。本計畫第三年中，延續前兩年的成果，設計一鑑別與隱私保護
機制，並將之應用於輕量化密封式競標系統，使其適用於行動裝置，同時為了加強保護隱私，因而實
作一基於代理伺服器之輕量化網頁安全防禦雛型系統；並將相關研究成果投稿至 SCI 國際期刊被接受
發表[YLW11]與第 22 屆全國資安會議中[吳卓蔡 12]。 
本計畫所培育兼具資通安全理論研究與實務應用之人才，未來將可以投入我國通訊、消費性及網
際網路等相關科技產業，提昇我國科技產業之理論研究與實作技術的能量。本計畫進行行動應用之鑑
別與隱私保護機制之設計與其應用系統的實作，可以提昇行動應用系統的效率及安全性，進而提昇我
國產業行動應用服務之設計與開發的意願。此外，本計畫之研究成果加強於行動裝置(包括智慧型行動
電話、PDA、NB 等)之應用的效率及安全性，將提昇其行動應用之加值服務，進而促進數位內容產業、
行動裝置、晶片設計、行動應用軟體開發等相關產業之發展，開創台灣資訊產業之新頁。 
 
參考文獻 
[AP03] S.S. Al-Riyami and K.G. Paterson. “Tripartite Authenticated Key Agreement Protocols from 
Pairings,” Proceeding of IMA Conference of Cryptography and Coding, pp. 332-359, 2003. 
[Ale11] Alexa, “Alexa Top Sites,” http://www.alexa.com/topsites, 2011. 
[AUI99] S. Araki, S. Uehara and K. Imamura, “The limited verifier signature and its application,” 
IEICE Transactions on Fundamentals, pp. 63-68, 1999. 
[BDZ03] F. Bao, R. Deng and H. Zhu, “Variantions of Diffie –Hellman problem,” Proceeding of 
ICICS, pp. 301-312, 2003. 
[BF01] D. Boneh and M. Franklin, “Identity-based encryption from the Weil pairing,” Proceeding in 
Cryptology, pp. 213-229, 2001.   
[Cac99] C. Cachin, “Efficient private bidding and auctions with an oblivious third party,” Proceeding 
of the ACM Conference on Computer and Communication Security, pp.120-127, 1999.  
[CC03] C.C. Chang and Y.F. Chang, “Efficient anonymous auction protocols with freewheeling 
bids,” Computer & Security, Vol. 22, No. 8, pp. 728-734, 2003. 
30 
Control, Vol. 7, No. 1, pp. 1087-1095, 2011. (SCI, EI) 
[HCY96] S.J. Hwang, C.C. Chang and W.P. Yang, “Authenticated encryption schemes with message 
linkage,” Information Processing Letters, Vol. 58, No. 4, pp. 189-194, 1996. 
[Hes03] F. Hess, “Efficient identity-based signature schemes based on parings” Computer Science, 
Vol. 2595, pp. 310-324, 2003. 
[HMP94] P. Horster, M. Michels and H. Petersen, “Authenticated encryption schemes with low 
communication costs,” Electronics Letters, pp. 1212-1213, 1994.   
[Hsu11] C.Y Hsu, “Detection of JavaScript based Heapspray Attacks,” 2011. 
[HW98] C.L. Hsu and T.C. Wu, “Authenticated encryption scheme with (t, n) shared verification” 
Computer and Digital Techniques, Vol. 145, pp. 117-120, 1998. 
[HWB12] M. Holbl, T. Welzer, B. Brumen, “An improved two-party identity-based authenticated key 
agreement protocol using pairings,” Journal of Computer and System Sciences, Vol. 78, pp. 
142-150, 2012. 
[HWT10] C.L. Hsu, T.C. Wu, and K.Y. Tsai, “Certificateless authenticated key distribution and 
conference key distribution schemes,” Proceedings of 2010 e-CASE & e-Tech International 
Conference, Grand Lisboa, Macau, 2010, pp. 2532-2548. (Distinguished Paper) 
[IEI04] SkyLined, “Internet Explorer IFRAME src&name parameter BoF remote compromise,” 
http://skypher.com/wiki/index.php/Www.edup.tudelft.nl/~bjwever/advisory_iframe.html.php, 
2004. 
[IHF08] A. Ikinci, T. Holz, and F. Freiling, “MonkeySpider: Detecting Malicious Websites with 
LowInteraction Honeyclients,” Proceedings of Sicherheit 2008, 2008. 
[IR08] M.N. Islam and M.Z. Rahman, “Secure online sealed bid auction,” Proceeding of 11
th
 the 
International Conference on Computer and Information Technology (ICCIT 2008), pp. 
25-27, 2008. 
[JLL05] W.S. Juang, H.T. Liaw, P.C. Lin and C.K. Lin, “The design of a secure and fair sealed-bid 
auction service,” Mathematical and Computer, Vol. 41, pp. 973-985, 2005. 
[Jou00] A. Joux, “A one round protocol for tripartite Diffie-Hellman,” Proceeding of Algorithmic 
Number Theory symposium, Vol. 1838, pp. 385-394, 2000. 
[KKVJ06] E. Kirda, C. Kruegel, G. Vigna, and N. Jovanovic, “Noxes: A client-side solution for 
mitigating cross-site scripting attacks.” In 21st ACM Symposium on Applied Computing 
(SAC), 2006. 
[Kud98] M. Kudo, “Secure electronic sealed-bid auction protocol with public key cryptography,” 
IEICE Trans Fundamental, Vol. E81-A, pp. 20-27, 1998. 
[LC95] W.B. Lee and C.C. Chang, “Authenticated encryption schemes without using a one way 
function,” Electronics Letters, Vol. 31, No. 19, pp. 1656-1657, 1995. 
[LJT11] M.J. Li, J.S.T. Juan and J.H.C. Tsai, “Practical electronic auction scheme with strong 
anonymity and bidding privacy,” Information Sciences, Vol. 181, pp. 2576-2586, 2011.   
[LK02] B. Lee and K. Kim, “Self-certified signatures,” Proceedings of Cryptology-INDOCRYPT and 
Lecture Notes in Computer Sciences, pp.199-214, 2002. 
32 
[PBS11] PortSwigger, “Burp Suite,” http://portswigger.net/burp/, 2011. 
[Py11] Python Programming Language http://python.org/, 2011. 
[Rai11] RainbowCrack Project, http://project-rainbowcrack.com/, 2011. 
[RLZ09] P. Ratanaworabhan, B. Livshits, and B. Zorn, “NOZZLE: A defense against heap-spraying 
code injection attacks,” Proceedings of the 18th USENIX Security Symposium, Augest 2009. 
[SB09] Simon Berry-Byrne, “Mozilla Firefox 3.5 (Font tags) Remote Buffer Overflow Exploit,” 
http://www.exploit-db.com/exploits/9137/, 2009. 
[Sha07] Z. Shao, “Self-certified signature scheme from pairings,” The journal of systems and 
software, No. 80, pp. 388-395, 2007. 
[Sha84] A. Shamir, “Identity-based cryptosystems and signature Schemes,” Proceeding in Advance in 
Cryptology, pp. 47-53, 1984. 
[Shim03] K. Shim, “Efficient ID-based authenticated key agreement protocol based on the Weil 
pairing,” Electronics letters, Vol. 39, No. 8, pp. 653-654, 2003.   
[SKM02] K. Suzuki, K. Kobayashi and H. Morita, “Efficient sealed-bid auction using hash chain,” 
Proceeding of International Conference Information Security and Cryptography Conference, 
pp. 183-191, 2002. 
[Sma02] N.P. Smart, “An identity based authenticated key agreement protocol based on the Weil 
pairing,” Electronic letters, Vol. 38, No. 13, pp. 630-632, 2002. 
[Sno11] Snort, The open source network intrusion detection system, http://www.snort.org/, 2011. 
[Sot07] A. Sotirov, “Heap feng shui in JavaScript,” Proceedings of Blackhat Europe, 2007. 
[Squ11] Squid: Optimising Web Delivery, http://www.squid-cache.org/ , 2011. 
[TH04] S.F. Tzeng and M.S. Hwang, “Digital signature with message recovery and its variants based 
on elliptic curve discrete logarithm problem,” Computer Standards and Interfaces, Vol. 26, 
No. 2, pp. 61-71, 2004. 
[TJC03] Y.M. Tseng, J.K. Jan and H.Y. Chien, “Digital signature with message recovery using 
self-certified public keys and its variants,” Applied Mathematics and Computation, Vol. 136, 
pp. 203-214, 2003. 
[TLH05] C.S. Tsai, S.C. Lin and M.S. Hwang, “Cryptanalysis of an authenticated encryption scheme 
using self-certified public keys,” Applied Mathematics and Computation, Vol. 166, pp. 
118-122, 2005. 
[TW10] J.L. Tsai and T.C. Wu, “Efficient convertible multi-authenticated encryption scheme for 
group communications,” Cryptology and Information Security Conference 2010, Hsinchu, 
Taiwan, May 27-28, 2010, accepted. 
[TWHM10] K.Y. Tsai, T.C. Wu, C.L. Hsu, and K. Martin, “Provably Secure Concurrent Multisignature 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/07/31
國科會補助計畫
計畫名稱: 適用於行動應用之鑑別與隱私保護機制
計畫主持人: 吳宗成
計畫編號: 98-2221-E-011-073-MY3 學門領域: 資訊安全
無研發成果推廣資料
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
