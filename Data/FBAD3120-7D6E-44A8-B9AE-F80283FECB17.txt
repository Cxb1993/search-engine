 2
目錄 
一、中文摘要                                         1 
二、英文摘要                                         1 
三、報告內容                                         2 
四、計畫成果自評                                     14
To appear in IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS—II 
 
 2
Low Area/Power Synthesis Using Hybrid Pass Transistor/CMOS Logic 
Cells in Standard Cell­Based Design Environment 
Abstract—We present a logic synthesis flow that depends on the popular Synopsys Design Compiler (DC) to perform logic 
translation and minimization based on the standard cell library with both pass transistor logic (PTL) and CMOS logic cells. The 
hybrid PTL/CMOS logic synthesis can generate appropriate circuits considering various design constraints. The proposed multi-level 
PTL logic cells are automatically constructed from only few basic cells. Post-layout simulations with UMC 90nm technology are 
presented based on the standard cell library with pure PTL, pure CMOS, or hybrid PTL/CMOS cells. Experimental results show that 
in most cases pure PTL circuits have smaller area and power while CMOS circuits in general have smaller delay. 
Index Terms—LEAP, pass transistor logic, logic synthesis, cell-based design, standard cell library. 
INTRODUCTION 
any pass transistor logic (PTL) circuits have been proposed and claimed to have better performance 
compared with traditional CMOS logic for some arithmetic unit designs [1-9]. For example, CPL [1] 
and DPL [2] have been used to implement adders and multipliers. A comprehensive survey and comparison 
of different PTL and CMOS logic designs were given in [10]. Several PTL synthesis methods have also 
been developed to facilitate the design of large circuits [3-6][11]. The pioneer work is the LEAP design 
with a proprietary synthesis tool called “circuit inventor” [11].  Most PTL synthesis methods are based on 
binary decision diagram (BDD) representations and in general cannot be easily integrated in the cell-based 
design flow with the popular Synopsys logic synthesis tool, Design Compiler (DC).  
PTL outperforms CMOS for some particular circuits that extensively use the exclusive OR (XOR) 
function. Fig. 1 shows PTL designs of XOR with two inputs (XOR2) and three inputs (XOR3) that will be 
discussed shortly in Sec. II. TABLE I compares four basic logic circuits designed using CMOS and PTL 
under two process technologies: TSMC 130 nm and UMC 90nm. PTL-based XOR2 and XOR3 have 
smaller power (including dynamic power and static leakage power) and smaller area cost with comparable 
delay. As power becomes one of the major design concerns, PTL, although not as robust as CMOS, still has 
its advantages over CMOS for some XOR-rich applications, even under nano-scale process technologies 
(such as UMC 90nm) where leakage power takes a significant portion of total power. 
        
(a)XOR2                                  (b) XOR3 
Fig. 1.  (a) XOR2 and (b) XOR3 circuits designed using PTL.  
TABLE I. Power and delay of four circuits using PTL and CMOS. 
Shen-Fu Hsiao, Member, IEEE, Ming-Yu Tsai, and Chia-Sheng Wen 
M 
To appear in IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS—II 
 
 4
 
Fig. 2. Proposed PTL/CMOS synthesis flow. 
Basic PTL Physical Cells 
In our proposed PTL synthesis, there are only three types of basic PTL cells: 2-to-1 multiplexer (MUX), 
regular inverter (INV), and level-restoring p-latched inverter (PINV), as shown in Fig. 3. The MUX is 
composed of two nMOS pass transistors in parallel plus a regular CMOS inverter. The PINV consists of a 
regular CMOS inverter (INV) with a weak feedback pMOS to avoid the voltage drop problem at the input 
of the inverter.  
   All PTL logic cells can be constructed from these three basic physical cells. If more driving strengths 
are required, we only need to add additional PTL basic cells of proper widths. Thus, it is easy for 
technology migration. Since the focus of this paper is to develop a feasible PTL design methodology that 
can be embedded in the standard cell-based design flow, for simplicity we will consider single driving 
strength for each basic physical cell in most synthesis experiments.    
 
           
(a) MUX              (b) INV                (c) PINV 
Fig. 3. (a) 2-to-1 multiplexer (denoted as MUX); (b) regular CMOS inverter (denoted as INV); (c) 
level-restoring inverter (denoted as PINV). 
One-level PTL Logic Cells 
Fig. 4 (a) shows a generic one-level PTL logic cell where the input-to-output path goes through only 
one pass transistor (i.e., one MUX) plus the output driver PINV. This generic one-level PTL logic cell has 
three primary input ports: A, In1, In2, and a primary output: Out. By assigning different signals (VDD, 
GND, and a variable) to the two input ports (In1 and In2), we can derive PTL logic cells with 9 logic 
functions, as summarized in Table II.  
To appear in IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS—II 
 
 6
of GND, VDD, or a variable, 8134   logic functions are derived. If we remove redundant functions, it can 
be shown that there are in total 55 primitive two-level PTL logic cells. We have developed a multi-level 
PTL logic cell generator to automatically create logic cells. Regarding the design of PTL XOR3, there are 
two different implementations (XOR3_1 and XOR3_2) as shown in Fig. 6. XOR3_1 is constructed from 
two XOR2 cells with the intermediate PINV removed. XOR3_2 is another implementation with three 
MUXs and two inverters. TABLE III compares these two XOR3 circuits. Since XOR3_1 has smaller area 
cost while XOR3_2 has smaller delay and power, we include both circuits in the PTL logic cell library. 
         
(a) XOR3_1                       (b) XOR3_2 
Fig. 6. Two PTL realizations of three-input XOR3.  
 
TABLE III. Comparison of two PTL XOR3 circuits.  
TSMC 130n 
(Vdd=1.2V) 
UMC 90n (Vdd=1.0V) 
 
A D P α A D P α 
XOR3_1 30.6 0.84 0.95 24 15.7 0.53 0.39 3.2 
XOR3_2 35.6 0.61 0.78 17 17.2 0.50 0.30 2.6 
 A: area (µm2);  D: delay (ns);  P: total power@100MHz (µW); α=A*D*P; 
 
A similar approach can be employed to design PTL logic cells of higher levels. Fig. 7 shows a generic 
structure of n-level PTL logic cells. Each input at the bottom level can be from the signal set of {VDD, 
GND, variable}. Without any simplification, 8132 n  logic cells can be derived. After applying 
simplification, our multi-level logic cell generator produces 4014 different logic functions for three-level 
PTL logic cells. We observe that most multi-level logic cells have unbalanced tree structure, as shown in 
Fig. 8 for two 3-level PTL logic functions. Note that all these multi-level logic cells are composed of the 
basic PTL cells in Fig. 3. 
To appear in IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS—II 
 
 8
         
                       (a)                                         (b)                                         (c) 
Fig. 9. (a) New PTL basic cell (NPMUX) when one drain input is VDD; (b)(c) inverter reduction using 
the inverted selection signal in the MUX.  
 
Another improvement is to utilize the inverted selection signal available in the MUX cell of Fig. 3(a) for 
signal inversion, as shown in Fig. 9(b)(c). If the inversion of the selection signal in one MUX is also 
needed for the drain input of another MUX, we can remove the highlighted inverter in Fig. 9(b) by 
connecting the signal to the inverted selection port of the MUX, as shown in Fig. 9(c), as long as the 
fan-out load is under a specific level.  TABLE IV shows the number of inverters and the inverter 
reduction rate before and after applying the above technique to ISCAS’85 benchmark circuits. 
TABLE IV. Number of INV cells before and after inverter reduction.  
ISCAS’85 Before After 
C432 47  38 (19%)
C499 14  12 (14%)
C880 42  33 (21%)
C1355 29  13 (55%)
C1908 36  30 (16%)
C2670 79  72 (8%) 
C3540 186 153 (17%)
C5315 179 153 (14%)
C6288 202 175 (13%)
C7552 305 214 (29%)
PTL Cell Characterization and experiments 
After introducing the PTL basic cells and multi-level logic cells, we need to create the Synopsys 
models so that they can be used by Synopsys DC. Since the accuracy of cell characterization directly 
affects the synthesis efficiency, current commercial standard cell libraries have complicate characterization 
for each cell. For example, the delay and power information are table-based, which requires a lot of 
To appear in IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS—II 
 
 10
Berkeley[4] Shelar[3] Ours ISCAS’ 
85 MD Tx MD Tx MD Tx 
C1355 34 1969 21 1037 19 1482  
C1908 39 2116 32 1145 33 1510  
C2670 28 3198 33 2876 25 2248  
C499 26 1947 21 998 19 1482  
C432 47 979 25 1110 32 854  
C6288 459 10787 153 7794 160 10446 
C7552 38 13268 54 5347 26 6346  
C5315 47 8277 43 8221 26 4784  
C880 32 1622 31 1467 26 1732  
C3540 52 4997 41 4757 39 4164  
Σ 502 49160 454 34752 405 35048 
MD: multiplexor depth;   Tx: number of transistors. 
We also create a CMOS cell library where each cell circuit is designed using CMOS logic. In addition 
to the regular inverter (INV), the CMOS cell library contains cells of NAND, NOR, XOR, AOI 
(And-Or-Inverter) where all nMOS transistors have the same width as the nMOS pass transistors in the 
PTL MUX while the ratio of pMOS vs. nMOS is 2.5/1. TABLE VI compares the post-layout area, delay 
and power of both area-optimized (AO) and delay-optimized (DO) synthesis results based on three 
different types of cell library: pure CMOS, pure PTL, and hybrid PTL/CMOS using UMC 90nm 
technology. The power includes both dynamic power and static leakage power measured from post-layout 
simulations.  
We observe that although CMOS-based designs in general have smaller delay, PTL circuits have less 
area and power due to partial voltage swings and smaller parasitic capacitance. In terms of 
area-power-delay product, pure PTL results are always better than pure CMOS or hybrid CMOS/PTL in 
the AO and DO synthesis constraints. Since PTL and CMOS have their respective advantages in 
area/power and delay, hybrid CMOS/PTL always leads to best results with respect to the individual goal of 
area or delay in the AO or DO synthesis. Similar outcomes are observed using other process technologies, 
such as TSMC 0.13um. 
TABLE VII shows the utilization rates (in unit of %) of total logic cells for hybrid PTL/CMOS 
synthesis with AO and DO constraints in TABLE VI. For example, in the AO synthesis, circuits C499, 
C1355, and C1908 require many XOR operations and more than 80% of total cells are PTL cells. Take as 
another example, C6288, a 16 bit multiplier. The high PTL utilization rate of 87% reveals that PTL is a 
favorable design in this arithmetic circuit although the XOR cells takes only 3% of total cells. We also 
observe from TABLE VII that in the AO synthesis, the utilization rates of all the PTL logic cells of up to 
three levels (including XOR cells) are more than 50% (range from 52% to 92%) for all the benchmark 
circuits. On the other hand, in the DO synthesis, more than 50% logic cells are from the CMOS library, 
which is consistent with our anticipation. 
Since the focus of this paper is to develop a feasible PTL design methodology for standard cell-based 
design flow, for simplicity, all the results in TABLE VI are based on cell library with only single driving 
strength. Thus, it is impossible to relax the timing for the area-optimized CMOS synthesis results in 
TABLE VI because all the CMOS cells are of minimum driving strength. However, it might be interesting 
if we can compare the area and power of pure CMOS and pure PTL synthesis under the same timing goal. 
Thus, we add CMOS and PTL cells with smaller driving strength so that each cell in the cell library has 
two driving strengths and perform another synthesis with the same delay constraint. The results are shown 
in TABLE VIII.  We found that pure PTL in general has smaller area and power compared with pure 
To appear in IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS—II 
 
 12
TABLE VI. Comparison of area, delay, and power for logic synthesis using three different types of cell 
library.  
Area (µm2) Delay (ns) Power @ 100MHz (µW) Area x Delay x Power (104) Synthesis 
constraint 
ISCAS
’ 
85 CMOS PTL Hybrid CMOS PTL
Hybri
d CMOS PTL Hybrid CMOS PTL
Hybri
d 
C432 853 783 732 1.02 1.69 1.57 47.11 30.52 30.28 4 4 3 
C499 2202 1371 1340 0.80 0.93 0.97 105.30 57.04 55.78 19 7 7 
C880 1733 1469 1321 0.82 1.10 1.21 85.01 58.87 57.84 12 10 9 
C1355 2195 1387 1358 0.84 0.96 0.95 103.08 67.96 66.51 19 9 9 
C1908 2124 1400 1380 1.09 1.13 1.14 108.86 57.11 56.81 25 9 9 
C2670 2881 2267 2042 0.98 1.21 1.3 172.67 103.18 115.48 49 28 31 
C3540 4918 4020 3564 1.22 1.85 1.43 282.73 190.55 189.65 170 142 97 
C5315 6741 5347 4841 1.25 1.45 1.33 444.75 245.19 268.88 375 190 173 
C6288 13218 10439 10378 3.52 4.91 5.07 
1525.0
6 
1141.0
4 
1237.5
3 7096 
5848 6511 
C7552 8843 6523 6221 1.58 1.31 1.49 786.46 381.07 391.33 1099 326 363 
Area 
Optimized 
(AO)  
 
Σ 45708 35006 33177 13.12
16.5
4 16.46
3661.0
3 
2332.5
3 
2470.0
9 8868 
6573 7212 
C432 1404 1392 1311 0.70 1.12 0.71 59.44 44.40 53.74 6 7 5 
C499 3043 2191 2067 0.52 0.73 0.50 134.07 86.30 68.15 21 14 7 
C880 2823 2630 2780 0.46 1.01 0.48 122.55 87.40 95.89 16 23 13 
C1355 3861 2873 2374 0.73 0.78 0.70 173.78 128.61 96.24 49 29 16 
C1908 3163 2030 2379 0.82 1.03 0.79 142.87 73.12 85.73 37 15 16 
C2670 3722 3013 3683 0.61 0.64 0.59 173.58 104.48 129.46 39 20 28 
C3540 7499 6033 5618 1.01 1.56 0.92 391.73 266.38 272.1 297 251 141 
C5315 8878 5343 6368 0.93 1.33 0.87 543.1 283.50 324.54 448 201 180 
C6288 21913 
1644
9 21062 2.76 3.76 2.62 
1636.6
6 
1028.05 1438.03 
9899 
6358 7935 
C7552 13209 8675 9044 0.83 1.08 0.79 831.85 443.25 500.15 912 415 357 
Delay 
Optimized 
(DO) 
Σ 69515 5062
9 
56686 9.37 
13.0
4 
8.97 
4209.6
3 
2545.49 3064.03 
11724
7333 8698 
 
To appear in IEEE TRANSACTIONS ON CIRCUITS AND SYSTEMS—II 
 
 14
Conclusion 
This paper presents a hybrid PTL/CMOS synthesis methodology that can be easily embedded in 
the standard cell-based design flow with Synopsys Design Compiler as the logic synthesis tool. 
According to the experiments based on UMC 90nm technology, we found that that PTL 
outperforms CMOS in power, area and area-delay-power product while hybrid CMOS/PTL leads to 
best results in area-optimized or delay-optimized synthesis. 
REFERENCES 
[1] K. Yano, et al., “A 3.8-ns CMOS 16x16-b Multiplier Using Complementary Pass-Transistor 
Logic,” IEEE Journal of Solid-state Circuits, Vol. 25, No. 2, pp. 388-395, April 1990. 
[2] M. Suzuki, et al., ”A 1.5 ns 32 b CMOS ALU in Double Pass-Transistor Logic,” IEEE Journal 
of Solid-State Circuits, Vol. 28, No.11, pp.1145-1150, Nov. 1993. 
[3] R. S. Shelar and S. S. Sapatnekar, “BDD Decomposition for Delay Oriented Pass Transistor 
Logic Synthesis,” IEEE Trans. VLSI Systems, Vol. 13, No. 8, pp. 957-970, Aug. 2005. 
[4] P. Buch, A. Narayan, A.R. Newton, and A.L., Sangiovanni-Vincentelli. “Logic synthesis for 
large pass transistor circuits,” Proc. Intl Conf. on CAD (ICCAD), pp. 663–670, 1997. 
[5] C. Scholl and B. Becker, “On the generation of multiplexer circuits for pass transistor logic,” 
Proc. Design, Automation and Test (DATE) in Europe Conference and Exhibition, pp. 372 – 
378, 2000. 
[6] G. R. Cho and T. Chen, “Synthesis of Single/Dual-Rail Mixed PTL/Static Logic for Low-Power 
Applications,” IEEE Transactions on Computer-Aided Design of Integrated Circuits and 
Systems, Vol. 23, no. 2, pp. 229-242, Feb. 2004 
[7] S. Goel, A. Kumar, and M. A. Bayoumi, ”Design of Robust, Energy-Efficient Full Adders for 
Deep-Submicrometer Design Using Hybrid-CMOS Logic Style,” IEEE Trans. VLSI Systems, 
Vol. 14, No. 12, pp. 1309-1321, Dec. 2006. 
[8] S. Agarwal, V.K. Pavankumar, and R. Yokesh, “Energy-Efficient, High Performance Circuits 
for Arithmetic Units,” Proc. Intl. Conf. on VLSI Design, pp. 371-376, 2008. 
[9] J. F. Lin, Y. T. Hwang, M. H. Sheu and C. C. Ho, “A Novel High-Speed and Energy Efficient 
10-Transistor Full Adder Design,” IEEE Trans. Circuits and Systems I, Vol. 54, no. 5, 
pp.1050-1059, May 2007 
[10] R. Zimmermann and W. Fichtner, “Low Power Logic Styles: CMOS versus Pass-transistor 
Logic,” IEEE Journal of Solid-State Circuits, vol. 32, no. 7, pp. 1079-1089, 1997. 
[11] K. Yano, Y. Sasaki, K. Rikino, and K. Seki, “Top-down Pass-Transistor Logic Design,” IEEE 
Journal of Solid-State Circuits, vol.31, no. 6, pp.792-803, June 1996. 
[12] S.-F. Hsiao, M.-Y. Tsai, and C.-S. Wen, “Area-Oriented Pass-Transistor Logic Synthesis 
Using Buffer Elimination and Layout Compaction”, Proc. Intl. Symp. Circuits and Systems 
(ISCAS), pp. 2022-2025, May 2008.
