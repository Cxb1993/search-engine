U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
30 In this paper, two optimal dynamic trajectory planning problems associated with the task space redundant
31 DOF of fully parallel LAPs are investigated. The ﬁrst problem is to synthesize the optimal point-to-point rota-
32 tional trajectory of the moving platform about the spindle axis such that the cutting force is maximized along
33 the speciﬁed machining contour. The second problem involves synthesizing the optimal rotary trajectory of the
34 moving platform about the spindle axis to not only give the maximum constant cutting force but also optimize
35 the distribution of the actuator forces to avoid structural damage due to sudden jumps of the control forces.
36 Optimal dynamic trajectory planning problems for serial manipulators have been extensively studied by
37 many researchers. The problem of synthesizing time-optimal point-to-point robot motions was ﬁrst investi-
38 gated by Kahn and Roth [1]. Later, Bobrow et al. [2] and Shin and McKey [3] independently developed
39 phase-plane switching point techniques to solve the minimum-time robot control problem with geometric path
40 and actuator constraints. This method has been subsequently improved by Shiller and Lu [4] and Shiller [5] to
41 handle dynamic singularities. A method for computing the time-optimal motions of non-redundant serial
42 manipulators in the presence of obstacles has also been presented by Shiller and Dubowsky [6]. Although
43 the basic concept behind these methods may be extended to parallel robots as well as systems of multiple coop-
44 erating manipulators without much diﬃculty [7,8], the application is nevertheless limited to minimum-time
45 trajectory planning problems and is not suitable for implementation in the forenamed maximum-force prob-
46 lems, for in which the proﬁles of the linear velocity and acceleration of the tool tip are also speciﬁed along the
47 given motion contour and hence the execution time can not be altered. In addition, no consideration has been
48 addressed to the issue of redundant DOF in these methods.
49 On the other hand, most of the works developed for trajectory planning problems of redundant serial
50 manipulators were concentrated on the use of the extra joint space DOF to synthesize feasible trajectories
51 for the purpose of, for example, Cartesian space obstacle avoidance [9], conﬁguration singularity eliminations
52 [10], or to compensate for joint and torque limitations [11]. More recently, a genetic algorithm based approach
53 for synthesizing point-to-point motion trajectory to minimize vibration and execution time of ﬂexible redun-
54 dant robots has also been reported [12]. However, these methods are also not suitable for handling the prob-
55 lems investigated in this paper. Not only because they are restricted to the simple open-loop kinematic
56 structure of serial robots, but also because the redundant DOF of the moving platform is speciﬁed in the task
57 (Cartesian) space rather than in the joint space.
58 The method presented in this paper for solving the two forenamed trajectory planning problems of the
59 LAPs takes into account the non-linear force–speed characteristics of the actuators and the kinematic con-
60 straints of the mechanism such as link interferences, actuator stroke limitations, and the passive joint bounds
61 as inequality constraints. In addition, the dynamic equations of the robot together with that of the tool spindle
62 are formulated as time varying equality constraints. Due to the highly non-linear nature of the constraints, the
63 optimal solutions to these problems can not be obtained analytically and numerical optimization techniques
64 must be adopted. The solution procedures developed here are based on the method of approximate program-
65 ming [13], which is frequently used to solve non-linear programming problems and has been successfully
66 implemented by Wang and Ravani for synthesizing the point-to-point load-optimal trajectory of serial manip-
67 ulators [14].
68 It should be pointed out that several methods for formulating the dynamic equations of parallel manipu-
69 lators have been developed in the past, based on the Newton–Euler formulation, the Lagrangian equations,
70 and the generalized D’Alembert’s principle [15]. However, the generalized coordinates used in these formula-
71 tions are either the Cartesian coordinates of the individual links or the joint variables which describe the rel-
72 ative motions between the links. Both require elaborate numerical coordinate partitioning algorithms to
73 separate the independent and the dependent generalized coordinates [16,17]. In addition, it is diﬃcult to rep-
74 resent the given task space trajectory of the tool bit in terms of the independent generalized coordinates used
75 in these formulations. The dynamic formulation presented in this paper is novel in the sense that it not only
76 takes the multiple closed kinematic loops of the robot into account, but also uses the six Cartesian coordinates
77 of the moving platform as the independent generalized coordinates of the system. With this approach, the
78 kinematically admissible virtual displacements and rotations of the individual links and the driving joints
79 can all be easily transformed into the task space by means of transformation Jacobian matrices, and hence
80 a concise parametric form of the dynamic equations in terms of the task space redundant DOF can be
81 obtained in a more straightforward manner.
2 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
104 where q is the distance between the two mass centers and w is a unit vector which denotes the positive direction
105 of the W axis. Consequently, the virtual displacement of the center of mass of the spindle and its virtual rota-
106 tion can be, respectively, written as
107
dPs ¼ dPþ dW qw ð3Þ109
110 and
111
dWs ¼ dW; ð4Þ113
114 where dP is the virtual displacement of the mass center of the moving platform, and dW is a 3 · 1 vector rep-
115 resenting the virtual rotation of the moving platform [20]. Eqs. (3) and (4) can be combined together and writ-
116 ten into matrix notation as
dbXs ¼ ½JsdbX; ð5Þ118
119 where dbXs ¼ ½dPTs dWTs T and dbX ¼ ½dPT dWTT, and the superscript T denotes the transpose of a vector or a
120 matrix; [Js] is a 6 · 6 transformation Jacobian matrix given by
;
122
123 in which [I3] and [03], respectively, denote the 3 · 3 identity matrix and the null matrix, and ½~w is a 3 · 3 skew
124 symmetric matrix in the form of [21]
½~w ¼
0 wz wy
wz 0 wx
wy wx 0
264
375;
126
127 where wx, wy, and wz are the components of w, expressed with respect to the ﬁxed X–Y–Z frame. Accordingly,
128 the total virtual work done by the inertia and gravity forces and the inertia moment of the spindle can be writ-
129 ten as
V
U
W
ρ
P
X
Y
Z
O
sP
S
P
sφ
Fig. 2. Deﬁnition of coordinate systems.
4 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
184
dbXT ½JsTbFs þ bFp þX12
i¼1
½JiTbFi þ ½JpTsþ bFf
( )
¼ 0: ð15Þ
186
187 Since dbX contains only the kinematically admissible virtual displacement of the mass center and the virtual
188 rotation of the moving platform, which can be arbitrarily assigned for a six DOF LAP, therefore, Eq. (15)
189 can be satisﬁed if and only if
½JsTbFs þ bFp þX12
i¼1
½JiTbFi þ ½JpTsþ bFf ¼ 0;
191
192 or
193
s ¼ ½J1p T bFp þ ½JsTbFs þX12
i¼1
½JiTbFi þ bFf
 !
: ð16Þ
195
196 Eq. (16) is the basic form of the governor dynamic equation of the system, which is expressed in the task space
197 in terms of the Cartesian coordinates of the moving platform. If the system is used to perform a ﬁve-axis
198 machining task along a speciﬁed Cartesian contour, then the position and the linear velocity and acceleration
199 of the mass center of the moving platform are known, and can be expressed as functions of the execution time.
200 In addition, the orientation and the angular velocity and acceleration of the moving platform at any time in-
201 stance can be, respectively, written as
202
½Rpð/Þ ¼ ½Rðw;/Þ½R0p; ð17Þ
xp ¼ x0p þ _/w; ð18Þ
ap ¼ a0p þ x0p  _/wþ €/w; ð19Þ204
205 where [R(w,/)] is a 3 · 3 spatial rotation matrix [20], in which / is the rotation angle of the moving platform
206 about the w axis, and ½R0p ¼ ½u j v j w is a 3 · 3 orthogonal matrix which represents the given orientation of
207 the moving platform. x0p and a
0
p are, respectively, the speciﬁed angular velocity and acceleration of the moving
208 platform, and _/ and €/ are, respectively, the angular speed and angular acceleration of the moving platform
209 about the W axis.
U
V
ntt r uw −t
P
W
tfu
W
orkpiece
tr
Feed
nrfk u
f
Fig. 3. Vector representation of the cutting force.
6 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
255
256 In addition to the governing dynamic equations, it should be noted that both of the forenamed opti-
257 mization problems are also subjected to the limitations of the driving force and the rotational angle given
258 by
259
slðq; _qÞ 6 s 6 suðq; _qÞ ð26Þ261
262 and
263
/l 6 / 6 /u; ð27Þ265
266 where suðq; _qÞ and slðq; _qÞ are the upper and lower bounds of the driving force, which are in general non-linear
267 functions speciﬁed by the force–speed characteristics of the linear actuators. /u and /l are, respectively, the
268 upper and lower bounds of the rotation angle, which are dependent on the kinematic conditions of link inter-
269 ferences, passive joint constraints and the stroke limitations of the linear actuators [24,25].
270 4. Linearization of the parametric dynamic equation
271 The solution procedures developed in this paper for solving the two optimal control problems formulated
272 in the last section are based on the method of approximate programming (MAP) [13]. It involves ﬁrst con-
273 structing an initial discretized trajectory of the rotation angle and then linearizing the dynamic equation about
274 each of the discrete points, such that the original non-linear programming problem can be replaced by a sim-
275 pliﬁed linear or quadratic programming problem. The discretized trajectory is then updated iteratively based
276 on the solution to these simpliﬁed problems until the approximation error of the linearization converges to a
277 speciﬁed degree of precision.
278 By using the ﬁrst-order approximation, the discretized form of the motion trajectory of the rotation angle /
279 at the k + 1th iteration can be written as
280
/kþ1j ¼ /kþ1j1 þ h _/kþ1j1 ; for j ¼ 2 to mþ 1 ð28Þ
_/kþ1j ¼ _/kþ1j1 þ h€/kþ1j1 ; for j ¼ 2 to m ð29Þ282
283 where m is the total number of the discretized time segments, and h denotes the time interval of each segment.
284 By repeatedly substituting the diﬀerence equations of the succeeding segments into the preceding ones and not-
285 ing that /1 ¼ _/1 ¼ 0, Eqs. (28) and (29) can be written into the expanded form as286
/kþ1j ¼ h2
Xj2
i¼1
ðj i 1Þ€/kþ1i ; ð30Þ
_/kþ1j ¼ h
Xj1
i¼1
€/kþ1i : ð31Þ
288
289 At each set point of the discretized trajectory, expanding Eq. (25) into Taylor series with respect to the points
290 of the previous (kth) trajectory and neglecting higher order terms yields
291
skþ1j ¼ Bj€/kþ1j þ Cj _/kþ1j þDj/kþ1j þ Ejf kþ1j þ Kj ð32Þ293
294 for j = 1 to m + 1, where
Bj ¼ os
o€/
¼ A4ð/kj Þ;
Cj ¼ os
o _/
¼ 2A3ð/kj Þ _/kj þ A2ð/kj Þ;
Dj ¼ oso/ ;
Ej ¼ osof ¼ A1ð/
k
j Þ296
8 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
344 where
Tl ¼
sl1ðqk1; _qk1Þ
sl2ðqk2; _qk2Þ
..
.
slmþ1ðqkmþ1; _qkmþ1Þ
2666664
3777775 Th and Tu ¼
su1ðqk1; _qk1Þ
su2ðqk2; _qk2Þ
..
.
sumþ1ðqkmþ1; _qkmþ1Þ
2666664
3777775 Th:
346
347 On the other hand, the side constraints imposed on the rotation angle (Eq. (27)) at each set point of the
348 discretized trajectory can be written as
349
/lj 6 /j 6 /
u
j ð39Þ351
352 for j = 3 to m + 1, where /uj and /
l
j are, respectively, the upper and lower bounds of the rotation angle at the
353 jth set point, and which can be explicitly evaluated in advance based on the kinematic constraints [23]. Substi-
354 tuting Eq. (30) into Eq. (39) and written into matrix form gives
355
Ul 6 ½M3X1 6 Uu; ð40Þ357
358 where
Ul ¼ 1
h2
/l3 /
l
4    /lmþ1
 T
;
Uu ¼ 1
h2
/u3 /
u
4    /umþ1
 T
360
361 and
½M3 ¼
1 0 0    0 0
2 1 0    0 0
3 2 1    0 0
..
. ..
. ..
. ..
. ..
. ..
.
m 1 m 2 m 3    1 0
26666664
37777775:
363
364 5. Computational algorithm for problem P1
365 Based on the trajectory discretization and noting that the magnitude of the cutting force should always be a
366 non-negative value at each of the set points, the objective function of problem P1 presented in Section 3 for
367 each iteration of the MAP can be formulated as to maximize
JP1 ¼
Xmþ1
j¼1
fj; ð41Þ
369
370 subjected to the inequality constraints (38) and (40), and fjP 0 for j = 1 to m + 1. As the objective function
371 and all the constraint equations are linear, this problem can be solved by using standard linear programming
372 algorithms such as the simplex method [26]. Consequently, the solution to the original non-linear optimization
373 problem can be obtained by using the following iterative algorithm:
374 Algorithm 1.
375 Step 1. Initialize the trajectory of / as a fourth-order polynomial by using the method presented in Appendix
376 B. Select a moderate number m and discretize the trajectory into m equally spaced segments, and then
377 evaluate the bounds Uland Uu. Specify a convergence criterion e 1 and initialize the iteration coun-
378 ter k = 1, and then go to the next step.
379 Step 2. Compute the coefﬁcients matrices [M1], [M2], [M3] and vectors T
h, Tl, Tu of the constraint equations
380 (38) and (40).
10 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
434 Step 6. If s > 1 and jfs  fs1j 6 e, then the outer loop is converged, terminate the iteration, and then output
435 the result; otherwise if s = 1 then set f = f + Df, else set s = s + 1 and f = f + (1/2)sDf and then go to
436 step 2.
437 Step 7. Set s = s + 1 and f = f  (1/2)sDf, and then go to step 2.
438
Table 1
Dimension parameters of the Stewart platform
Limb number i Bi (cm)
UVWri (cm)
X Y Z U V W
1 1.743 19.923 0.000 8.191 5.735 0.000
2 1.743 19.923 0.000 8.191 5.735 0.000
3 18.126 8.452 0.000 9.063 4.226 0.000
4 16.383 11.471 0.000 0.871 9.961 0.000
5 16.383 11.471 0.000 0.871 9.961 0.000
6 18.126 8.452 0.000 9.063 4.226 0.000
Table 2
Dimension parameters of the Hexaglide
Limb number i B0i ðcmÞ UVWri (cm) ‘i (cm) qdi ðcmÞ
X Y Z U V W
1 0.000 15.000 0.000 6.428 7.660 0.000 60.0 60.605
2 0.000 15.000 0.000 9.397 3.420 0.000 60.0 60.797
3 0.000 0.000 0.000 9.848 1.736 0.000 40.0 36.915
4 0.000 15.000 0.000 1.736 9.848 0.000 60.0 49.498
5 0.000 15.000 0.000 3.420 9.397 0.000 60.0 58.004
6 0.000 0.000 0.000 7.660 6.428 0.000 40.0 40.267
Y
X
Z
W
V
U
k
(0,0,15cm)
10 cm
O
P
)(tφ)(tθ
P
Fig. 4. Deﬁnition of the desired machining contour.
12 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
443 total execution time of the trajectory is speciﬁed to 10 s, and the orientation matrix and the angular velocity
444 and acceleration of the moving platform are, respectively, speciﬁed by
½R0p ¼ ½Rðk; hðtÞÞ
0:832 0 0:555
0:0 1 0:0
0:555 0 0:832
264
375;
x0pðtÞ ¼ _hðtÞk446
447 and
0 2 4 6 8 10
-250
-200
-150
-100
-50
0
50
100
150
200
250
Time (Sec.)
D
riv
in
g 
Fo
rc
e 
(N
.
)
Upper Bound
Lower Bound
1τ 3τ2τ
0 2 4 6 8 10
-250
-200
-150
-100
-50
0
50
100
150
200
250
Time (Sec.)
D
riv
in
g 
Fo
rc
e 
(N
.
)
Upper Bound
Lower Bound
4τ 6τ5τ
Fig. 7. Optimized control force proﬁles—Stewart platform (problem P1).
14 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
456 i = 1–6), and that of the Hexaglide are 400 10 _qi 6 si 6 400 10 _qi (for i = 1–6). The convergence criterion
457 for the algorithms is speciﬁed as e = 104.
458 For problem P1, Algorithm 1 converged after 6 and 10 iterations, respectively, for the Stewart Platform and
459 the Hexaglide. The computational results are shown in Figs. 5–10. Figs. 5 and 6 are the optimal trajectory of /
460 of the two robots, and Figs. 7 and 8 are the plots of the corresponding proﬁles of the control forces. The initial
461 and the optimized distributions of the cutting force with respect to the speciﬁed machining contour are plotted
462 in Figs. 9 and 10. It can be seen that the optimization algorithm successfully increased the minimum value of
463 the cutting force of the Stewart platform from 153 N to 165 N and that of the Hexaglide from 30 N to 48 N.
0 2 4 6 8 10
150
160
170
180
190
200
210
220
230
240
Time (Sec.)
Cu
tti
ng
 F
or
ce
 (N
.
)
Optimum
Initial
*
*
165
153
Fig. 9. Comparison of the initial and the optimized cutting force distributions of the Stewart platform.
0 2 4 6 8 10
0
50
100
150
200
250
300
350
400
450
Time (Sec.)
Cu
tti
ng
 F
or
ce
 (N
.
)
Optimum
Initial *
*
30
48
Fig. 10. Comparison of the initial and the optimized cutting force distributions of the Hexaglide.
16 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
467 Figs. 13 and 14, by comparing to Figs. 7 and 8, it can be seen that the bang–bang eﬀect has been eﬀectively
468 eliminated.
469 Since the problems dealt with in this paper have not been investigated previously and currently no hardware
470 facilities are available in the authors’ institution, therefore it is diﬃcult to obtain experimental data to compare
471 with the computational results. Nevertheless, the accuracy of the presented dynamic model and the optimiza-
472 tion algorithms can be justiﬁed based on the principle of work and energy. For the closed circular trajectory
473 speciﬁed in the examples, the total change of the potential energy and that of the kinetic energy of the system is
474 zero, as the initial and the ﬁnal states are the same, therefore the sum of the work done by the actuator forces
475 and that done by the cutting force should be zero. Fig. 15 shows the total work evaluated with respect to the
476 optimal constant cutting force trajectories of the two robots synthesized on the basis of diﬀerent number of
477 time segments. It can be seen that the inaccuracy of the algorithm is primarily due to the discretization error
3τ2τ1τ
0 2 4 6 8 10
-250
-200
-150
-100
-50
0
50
100
150
200
250
Time (Sec.)
0 2 4 6 8 10
Time (Sec.)
Lower Bound
Lower Bound
Upper Bound
Upper Bound
D
riv
in
g 
Fo
rc
e 
(N
.
)
-250
-200
-150
-100
-50
0
50
100
150
200
250
D
riv
in
g 
Fo
rc
e 
(N
.
)
4τ 6τ5τ
Fig. 13. Optimized control force proﬁle—Stewart platform (problem P2).
18 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
488 It should also be pointed out that the dynamic model of the system established in this study is based on the
489 assumptions of rigid links and perfect joints. In real applications, the response of the system will be aﬀected by
490 link ﬂexibilities and joint backlashes. In addition, due to the iterative nature of the computational algorithms,
491 the computing time is dependent not only on the CPU speed but also on the number of iterations, and which
492 in turn is dependent on the geometric complexity of the speciﬁed motion contour. Therefore the presented
493 methods may not suitable for real-time applications, yet the optimal driving forces evaluated oﬀ-line can be
494 served as feed-forward terms in an appropriate on-line control strategy.
495 8. Conclusions
496 In this paper, a systematic approach for formulating the dynamic equations of fully parallel, linear actuated
497 platform type manipulators is presented. The generalized coordinates used in this approach are the Cartesian
498 coordinates of the moving platform, and hence the resulting equations of motion can be easily transformed
499 into a parametric form in terms of the task space redundant DOF of the robot.
500 Based on this formulation, two optimal dynamic trajectory planning problems associated with the task
501 space redundant DOF have been studied. The ﬁrst problem is of theoretical interest as it would provide
502 knowledge of the optimal distribution of the cutting force along any speciﬁed machining contour. The solution
503 to the second problem is useful in a practical sense, as it would not only maintain a maximum constant cutting
504 force for the entire machining process but would also eliminate possible discontinuities and sudden jumps of
505 control forces to avoid structural damage.
506 The numerical algorithms developed for solving these problems are based on the method of approximate
507 programming, and taking into account the non-linear bounds imposed on the control forces and the rotation
508 angle of the moving platform. The eﬀectiveness of these algorithms is demonstrated by two numerical
509 examples.
510 Acknowledgement
511 The ﬁnancial support of this work by the National Science Council of the Republic of China under Grant
512 94-2212-E-011-007 is gratefully acknowledged.
0 50 100 150 200 250 300 350
0
2
4
6
8
10
12
Number of Time Segment
To
ta
l W
or
k 
(J.
)
Stewart
Hexaglide
Fig. 15. Comparison of computational accuracy versus sampling rate.
20 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
U
N
C
O
R
R
E
C
T
E
D
P
R
O
O
F
Pi ¼ Bi þ qili; ðA:4Þ532
533 in which Bi is a constant vector representing the absolute position of the universal joint bi attached to the ﬁxed
534 link, therefore the virtual displacement of Pi can also be written as535
dPi ¼ dqili þ dWi  qili: ðA:5Þ537
538 Taking the cross-product of both sides of Eq. (A.5) with li and noting that dWi should be perpendicular to li in
539 order to be kinematically admissible, yields
540
dWi ¼ li  dPi=qi: ðA:6Þ542
543 Substituting Eqs. (A.3) and (A.6) into Eqs. (A.1) and (A.2), the relationship between the virtual displacement
544 and rotation of links and that of the moving platform can be combined together and written into matrix form
545 as
546
dbXi ¼ ½JidbX; ðA:7Þ548
549 where
dbX i ¼ ½dPT1idWTi T for the first link½dPT2idWTi T for the second link
(
551
552 and the transformation Jacobian matrix is given by
:
554
555 Similarly, according to the geometric property of the vectors shown in Fig. 16(b), the relationship between
556 the virtual displacement and rotation of the two links of each limb of the Hexaglide and that of the moving
557 platform can also be derived into the general form of Eq. (A.7), and the corresponding transformation Jaco-
558 bian matrices of the links in each limb are given by
:
560
561 Appendix B
562 The purpose of this appendix is to present a simple method for constructing the initial feasible trajectory of
563 the rotation angle / for use in the computational algorithms. By denoting the initial trajectory as / = /(f),
564 where f 2 [0, 1] is a normalized parameter of the execution time, the boundary conditions imposed on the
565 two end points of the trajectory can be written as
566
/ð0Þ ¼ _/ð0Þ ¼ 0; ðB:1Þ568
569 and
570
_/ð1Þ ¼ €/ð1Þ ¼ 0: ðB:2Þ572
22 K.-T. Oen, Li-Chun T. Wang / Mechanism and Machine Theory xxx (2006) xxx–xxx
MAMT 1224 No. of Pages 24, Model 3+
1 July 2006 Disk Used
ARTICLE IN PRESS
