 II
improper clustering fuzzy controller (IPFC). Consider two kinds of factors, 
modeling error and insufficient training data, under the same control design, compare 
the difference of its control performance. It proves that PFC is superior to IPFC. 
 2
achieve the performance in real applications. In 
our primitive study [15,16], a compensated law is 
proposed to reduce the effect of modeling errors. 
There are no papers that present the analysis of 
effects of designing controllers directly for the 
models obtained from those modeling techniques. 
It is our attempt in this study to analyze such 
effects to see whether different fuzzy modeling 
approaches may result in different control 
performance under the same controller design 
approach. 
 
2. Literary Reviews 
Consider a nonlinear dynamic system 
( ) ( ) ( )x f x g x u t= +           (1) 
where , : n nf g R R→  are smooth functions on 
the state space nR , 1( )u t R∈  is the system input. 
The ith rule of a TSK fuzzy model for a 
continuous system is described as: 
1 1 1
0 1 1 2 2 1
 :  IF ( )  ( ) and  and ( )  ( ) 
        THEN ( ) ( ) ( ) ( ) ( )
i i i i i
n n n
i i i i i
n n n
R x t is x t is
x t a a x t a x t a x t b u t
μ θ μ θ
= + + + + +
G G"
 "
(2) 
for i=1,2,…,C, where C is the number of rules, 
1( )( ) jj
dx t
x t
dt
−= , for 2, ,j n= " , and 0 1,  ,  ,  i i ina a a"  
and ib  are parameters in describing the input 
and output relationships in the ith fuzzy rule. 
( )i ij jμ θ
G
 is the fuzzy set of the i-th rule for jx  
with the parameter set ijθ
G
, for j=1,2,…,n , n is 
the number of variables in the premise. 
The function in the consequence part in Eq. 
(1) can be rewritten as iii dtuBtxAtx ++= )()()( , 
where [ ]1 2( ) ( ), ( ), , ( ) Tnx t x t x t x t= "  is the state 
vector, 
1 2 3
0 1 0 0
0 0 1 0
0 0 0 1
i
i i i i
n
A
a a a a
⎡ ⎤⎢ ⎥⎢ ⎥⎢ ⎥= ⎢ ⎥⎢ ⎥⎢ ⎥⎣ ⎦
"
"
# # # % #
"
"
, [0,0, , ]i i TB b= " , 
and 0[0,0, , ]
i i Td a= " . Then the approximation 
system can be expressed as:          
1 1 1
ˆ( ) ( ) ( )
ˆ ˆ( ) ( ) ( )
C C C
i i i
i i i
i i i
x t k A x t k B u t k d
f x g x u t
= = =
= + +
= +
∑ ∑ ∑  (3) 
where ( )
1,...,
1
,  min ;
i
i i i
i j j jC j ni
i
kk k x
k
μ θ=
=
= =
∑
G
is the ith 
rule’s firing strength and 
1 1 1
ˆ ˆ( ) ( ) ,  ( )
C C C
i i i
i i i
i i i
f x k A x t k d g x w B
= = =
= + =∑ ∑ ∑ . To 
construct a TSK fuzzy model from input-output 
training data, we denote ny x=   as the output 
data and 1(1, , , , )u nX x x u=
K "  as the input data 
vector. The consequent part in Eq.(2) is  
( );i ii u b
i T i i T
b u
y q X a
a X b u a X
=
= + =
K G
K KG G         (4) 
where 0( ,..., , )
i i i i
b na a a b=G  is the parameter 
set in the consequent part , 0( ,..., )
i i i
na a a=G  is 
parameter of affine state vector and 
1(1, , , )nX x x=
K "  is affine state vector. In Eq.(2), 
both the parameters of the premise parts (i.e., ijθ
G
) 
and of consequent parts (i.e., iba
G ) are required to 
be identified. The considered problem is to obtain 
a model qˆ  from a set of observations, 
( ( ),  )u mX m y
K
, where 
 4
optimal control or other design techniques in 
designing controllers for the nominal model. 
The generated fuzzy controller of previously 
section that can be guaranteed the stability and 
desired performance for the fuzzy model in 
Eq.(3). In the real world, there exist modeling 
error between the real model and the fuzzy model. 
A problem arises: how much modeling error can 
the designed fuzzy controller tolerate? The 
nonlinear system (1) can be rewritten as 
( ) ( ) ( )
ˆ ˆ( ) ( ) ( ) ( , )
x f x g x u t
f x g x u t e x t
= +
= + +

     (7) 
where e(x,t) is the modeling error. Assume that 
2 2
( , ) ( )e x t x tξ≤  for all 0t ≥  and 0ξ > .  
Theorem 1: The nonlinear system in Eq.(1) is 
approximated by the TSK fuzzy model in Eq.(3) 
under the training scheme. When the so-called 
state to modeling error rate (SER) in Eq. (8) is 
less than the bound min
max
( )
2 ( )
Q
P
λ
λ , then, the 
closed-loop system for Eq. (1) driven by the 
control law (6) is stable. 
Proof: 
Applying the designed feedback input as 
Eq.(6) to Eq. (7). By using the Lyapunov function, 
we have 
2
2 2
min max2 2
( ) ( ) ( ) ( , ) ( ) ( ) ( , )
( ) ( ) 2 ( ) ( )
( ) ( ) 2 ( ) ( )
T T T
T T
V x x t Qx t e x t Px t x t Pe x t
x t Qx t x t x t P
Q x t P x t
ξ
λ ξλ
= − + +
≤ − +
≤ − +

 
where ( )λ ⋅  denotes the eigenvalue of a matrix, 
2
⋅  denotes the 2-norm of a vector. Hence, the 
system is globally stable if min
max
( )
2 ( )
Q
P
λξ λ< . This 
bound depends on the choice of Q. We define a 
state to modeling error rate  
2
2
( , )
( )
e x t
SER
x t
=            (8) 
and SER ξ≤ . From above discussion, it 
concludes the theorem. 
                           Q.E.D. 
The modeling error always exists after the 
training process. It may due to uncertainties, 
noise, outliers or lack of training data.. 
Corollary 1: The nonlinear system in Eq.(1) is 
approximated by the TSK fuzzy model in Eq.(3). 
if  
min
max
( )
2 ( )
QSER
P
λ
λ>               (9) 
Then, the closed-loop system for Eq.(1) driven by 
the control law (6) is unstable. 
The above Corollary gives a checking 
criterion for the controller. If the designed 
controller is surely invalid by the Corollary 1, 
then, the fine-tuning process can be adopted. The 
fine-tuning can be the traditional backpropagation 
algorithm or a robust learning algorithm such as 
ARBP [17].  
To reject the modeling error for achieving the 
specified performance, the adaptive law must be 
introduced. Here, the gradient decent algorithm is 
adopted as the update law for the parameters in 
consequent parts. Then  
( )ib i ua t k XζεΔ = KG           (10) 
where ζ  is the learning constant. 
Theorem 2 : For a nonlinear system in Eq.(7) 
subject to any bounded input u(t), there exists a 
fuzzy model in Eq. (3) with the update law as 
Eq.(10) such that 
ˆlim ( ) ( ) 0
t
y t y t
→∞
− =  
where y(t) is the desired output and ˆ( )y t  is the 
 6
In our implementation, applying the 
following force to the cart generates 500 training 
data-pairs. 
( ) 0  ,                           0 4
2sin(5 ) ,              4 6.4
5sin(2.5 ),            6.4 10
u t t
t t
t t
π
π
= < ≤
= < ≤
= < ≤
 
Sampling time is 0.02sec and when the angle 
exceeds the 95o  (left or right), the angle is 
randomly assigned in [ 50 ,50 ]o o− . The training 
data-pair is polluted by  gross error model. The 
gross error model is defined as 
( )1F G Hε ε= − +  
where F is the added noise distribution and G and 
H are probability distributions that occur with 
probability ε−1  and ε , respectively. The 
values used in the gross error model are 05.0=ε , 
~ (0,0.2)G N  and ~ (0,5)H N . The design 
specification: the poles assigned to [-2,-2]. Define 
1 0
0 1
Q ⎡ ⎤= ⎢ ⎥⎣ ⎦ . Therefore, 
1.1250 0.1250
0.1250 0.1562
P ⎡ ⎤= ⎢ ⎥⎣ ⎦  
and then the bound in Theorem 2, 
min
max
( )
2 ( )
Q
P
λ
λ =0.4383 for this specification. In all 
figures, C.M. denoted the fuzzy controller 
obtained from the coarse model, F.M. denoted the 
controller obtained from the fine-tuning model 
(lasting 1000 epochs) and A.L. denoted the 
controller obtained with the adaptive law in 
Eq.(10). By using those two algorithms, the 
parameters in premises and consequents of those 
constructed TSK fuzzy models are obtained. Then 
the HCC’s fuzzy controllers can be directly 
generated, simultaneously. The fuzzy 
membership functions of each rule for those 
fuzzy approaches are showed in Fig.1 - Fig.2. 
Clearly, the RPSFR construct a PFC, and the 
other is IPFC. The values of SER are also 
calculated after each kind of training, and 
presented in Table I. When the adaptive law 
applying to those fuzzy controllers, the tested best 
values of the constant ζ  are also listed in this 
table. Those fuzzy controllers are applying to the 
cart according to the specification. The simulation 
results with the initial condition 
1 2( , ) (60 ,0 / )x x s= D D  for various controllers from 
FCRM and RPSFR algorithms are showed in 
Fig.3 - Fig.4, respectively. In Fig.3, even though 
the SERs are less than 0.4383, the controllers still 
cannot stabilize the system for the FCRM coarse 
model and for the fine-tuning model. It may be 
because of the effect of the outliers. By applying 
the adaptive law, the system is stable, but has 
steady-state errors. The controller from RPSFR 
fuzzy model is a PFC, it can stabilize the system. 
When applying adaptive law, its response is very 
close to the desired curve. Fig.4 shows the results. 
For an unknown system, the TSK fuzzy model 
can be obtained by training networks through 
input-output data. In this project, we present our 
work of designing proper clustering structure 
fuzzy controllers (PFC) from input-output 
training data of the considered system. The 
obtained training data may contain outliers. 
Moreover, a modeling-error instability sufficient 
condition and an adaptive law to tune the 
parameters of consequent parts are also derived. It 
also is a methodology of designing controllers for 
affine TSK fuzzy models directly from training 
data with outliers [18]. From our simulation 
results, we can conclude that the proper clustering 
structure is more important than the modeling 
error in the fuzzy control application. 
Consequently, the proper clustering structure 
fuzzy model is mostly suitable to describe a 
dynamic system. Fuzzy predictive control has 
 8
[9] C. T. Lin and C. S. G. Lee, Neural Fuzzy 
Systems: A Neural Fuzzy Synergism to 
Intelligent Systems. Englewood Cliffs, NJ: 
Prentice-Hall, 1996.  
[10] F. Zheng, Q. G. Wang and T. H. Lee, 
“Adaptive and robust controller design for 
uncertain nonlinear systems via fuzzy 
modeling approach,” IEEE Trans. Syst., 
Man, Cybern. -Part B, vol.34, no.1, 
pp.166-178, 2004. 
[11] C. C. Chuang, S. F. Su, and S. S. Chen, 
“Robust TSK fuzzy modeling for function 
approximation with outliers,” IEEE Tran. 
Fuzzy Syst., vol. 9, pp. 810-821,2001. 
[12] C. C. Chuang, C. C. Hsiao and J. T. Jeng, “A 
novel approach for TSK fuzzy modeling 
with outliers,” IEEE, International 
Conference on Machine Learning and 
Cybernetics (ICMLC'2003), vol.1, pp. 
2158-2163, 2003 
[13] C. C. Hsiao, S. F. Su and C. C. Chuang, 
“Robust Proper Clustering Structure Fuzzy 
Modeling for Function Approximation,” The 
12th International Conference on Neural 
Information Processing (ICONIP 2005), 
pp.229-234,Oct., 2005.  
[14] C. C. Hsiao, S. F. Su and C. C. Chuang, 
“Hybrid compensation control for affine 
TSK fuzzy control systems,” accepted by 
IEEE Trans. Syst., Man, Cybern. -Part B, 
vol. 34, no. 4, pp. 1865-1873, 2004. 
[15] C. C. Hsiao, S. F. Su and C. C. Chuang, ”A 
Sliding manner Compensation Control for 
Affine TSK Fuzzy Control Systems,” IEEE, 
International Conference on Machine 
Learning and Cybernetics (ICMLC'2004), 
pp. 4374-4379, Aug., 2004. 
[16] C. C. Hsiao, S. F. Su,  J. T. Jeng and H. L. 
Lee, “Adaptive Hybrid Compensation 
Control for TSK Fuzzy Control Systems,” 
2004 The Twelfth National Conference on 
Fuzzy Theory and Its Applications, c2321, 
Nov. ,2004. 
[17] C. C. Chuang, S. F. Su and C. C. Hsiao, 
“The annealing robust backpropagation 
(ARBP) learning algorithm,” IEEE Tran. 
Neural Networks, vol. 11, pp. 1067-1077, 
2000. 
[18] C. C. Hsiao, C. C. Chuang, “A Designing 
Method for Fuzzy Controller from Training 
Data”, 2006 CACS Automatic Control 
Conference, Oct., 2006.(NSC 
95-2221-E-244 -004） 
[19] C. C. Hsiao, Shun-Feng Su, “An On-Line 
Fuzzy Predictor from real-time Data”, 2007 
IEEE International Conference on Fuzzy 
Systems, July., 2007. (NSC 95-2221-E-244 
-004)  
 
 
 
 
Table I. The values of SER and learning constant  
ζ  (best value) 
 FCRM RPSFR 
SER 0.2782 0.1938 Coarse 
M
odel ζ  0.00005 0.000001
SER 0.2086 -- Fine-tuni
ng M
odel ζ  0.00005 -- 
 
 
 
 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 95-2221-E-244 -004 - 
計畫名稱 由訓練資料建構適當聚集模糊控制器之設計、分析與比較 
出國人員姓名 
服務機關及職稱 
蕭志清 
高苑科技大學 電機系 副教授 
會議時間地點 2007,7/23～7/26, Imperial College, London, UK（英國倫敦） 
會議名稱 IEEE International Conference on Fuzzy Systems 
發表論文題目 An On-Line Fuzzy Predictor from Real-Time Data 
 
一、參加會議經過 
今（2007）年 IEEE 模糊系統國際研討會（IEEE International Conference on Fuzzy 
Systems 2007），係於 2007 年 7 月 23 日至 7月 26 日在英國倫敦(London., U.K.)舉行，
本次會議主辦單位及會議地點為帝國學院(Imperial College)，該校為英國首屈一指的大
學。在本次會議中，國內有北科大蘇順豐教授組織 Advances in Fuzzy Modelling、Advances 
in Fuzzy Control 等兩個 Special Session，本人所投稿之論文亦包含在此 Special Session
中。此次同行出席會議，除了上述兩個 Special Session 中的報告者外，還有來自中興、
淡江及大同大學之教授，一行十四人於 7 月 20 日搭乘長榮航空，經過約 18 小時之長途
飛行抵達英國倫敦。四天的會議中，每天選擇幾場與個人研究領域相近或有興趣之
Session 參與，簡述如下 
第一天（7/23）： 大會安排有 7 場的教學演示課程，本人上午參加了由 Gary Feng
教授所主講的 “Model based Fuzzy Logic Control: Overview and Perspectives” ，而下
午則聆聽由 Hamid Berenji 教授所主講的 “Fuzzy Reinforcement Learning” . 
第二天（7/24）：大會的開幕式，並由今天起有多場論文發表會、論文海報展示及「大
會專家論譠」(Plenary Lecture)。上午參加了一場 Plenary Talk，由 Rudolf Kruse 主講，
講述題目為 “The Role of Soft Computing in Intelligent Data Analysis＂； 下午則出席
兩場 Special Session，分別是由韓國 Tan Woei Wan 教授所主持的 “Type-2 Fuzzy 
Systems for Decision Making” 與  Bogdan Gabrys 教授所主持的 “Advances in 
Conservatism＂及日本 Tsukuba 大學的 Genta Inoue 同學報告 “An Intelligent MIMO 
Control for Two-Wheeled Vehicle＂。 
 
二、與會心得 
今（2007）年IEEE 模糊系統國際研討會，根據大會統計，本年度投稿論文共有來自世
界64個不同國家，534篇論文，經過審查通過在會議中發表之論文共有285篇論文；海報論
文有65篇；論文全文收錄於大會發行之論文集光碟。 
本次研討會的特色之一就是除了論文發表及海報展示外，大會在第一天全部安排7場的
教學演示課程，由模糊系統之知名學者如 Dr. Gary Feng …等，發表其最新研究成果。並
於每天也都安排了一場「大會專家論譠」(Plenary Lecture)，邀請來自不同國家之模糊系
統專家如 Dr. Lotfi Zadeh…，分別針對特定主題進行演講。對本人的研究方向，有很大的
啟示。 
在7月24-26日的3天議程期間，所發表之論文及專題演講共有涵蓋模糊理論
（Mathematical Foundations、Type-2 Fuzzy Logic Theory、Mining Fuzzy Rules）、應用
（Bioinformatics、Control、Robotics、Image Processing、Information access on the Web、
Applications in Medicine、System identification、Systems Modelling）、混合系統（Hybrid 
Systems、Genetic Fuzzy Systems 、Rough and Fuzzy Methods）、學習與推論（Inference and 
Reasoning 、 Machine Learning 、 Incremental Learning 、 Qualitative Reasoning ）、決策
（Decision-Making）、分類（Clustering、Fuzzy Similarity、Fuzzy Aggregation）、排程（Fuzzy 
Scheduling）、資料分析（Data Analysis）及最佳化（Fuzzy Optimization）等，總數近百個
不同主題的研討會議程進行，來自各國之學者專家及研究生發表其近期之研究成果，這是
本人首次參加國際研討會，增廣不少國際視野，亦是難得之經驗。 
本人於會議第四天（7/26）以英文發表論文 ＂ An On-Line Fuzzy Predictor from 
Real-Time Data＂，並與與會學者做問題之交流，獲得很多寶貴之意見；並同時聽取來自
不同國家之學者，在Fuzzy Systems 之不同之應用與研究方向，令人獲益良多。 
另外，除各大學教授以外，亦有許多研究生參與，甚至是碩士班研究生，如日本Tsukuba
大學的Genta Inoue同學報告 “雙輪車之多輸入/輸出之智慧型控制＂，其以實作應用為
An On-Line Fuzzy Predictor from Real-Time Data
Chih-Ching Hsiao and Shun-Feng Su, Member, IEEE
Abstract-The algorithm of on-line predictor from
input-output data pairs will be proposed. In this paper, it
proposed an approach to generate fuzzy rules of predictor from
real-time input-output data by means ofARMA model concept
for unknown system. It includes two phase: (1). Generating
fuzzy rules phase, (2). On-Line Learning phase; If the error
between the real output and the predictor's output is larger than
the desired error, it means that the lack of the fuzzy rules. Thus,
it will generate some new fuzzy rules for the fuzzy predictor or
adding an output term in the premise part of fuzzy rules. From
the generating fuzzy rules phase, it can on-line generate the
fuzzy predictor. In another word, some redundant rules may be
generated from bad information after learning. They may be
incoming data include outliers, noises or uncertainties. Such bad
rules will be discarded by a usage degree constant. To achieve
good performance for this fuzzy predictor, the parameters of
each fuzzy rule may be adjusted by on-line learning, when the
prediction error into a pre-defined bound. In the simulation
example, a nonlinear time-varying process operating in open
loop is illustrated. Simulations and real-time results show the
advantages of the proposed method.
I. INTRODUCTION
Model-based predictive controller (MBPC) has received
increased attention in both the control engineering and
industry communities [1-2], and much effort has been made
to extend MBPC from linear system to nonlinear systems [8].
The fuzzy control has been proved to be a good choice of
controlling complex dynamic systems [9-10]. Fuzzy models
are able to provide the required nonlinear mapping and also
provide, under suitable constraints, a linguistic interpretation
for the relevant dynamic behavior of the plant [1 1-13]. The
predictive fuzzy control has also been successes in an ATO
application [14]. Recently, nonlinear plant descriptions have
been introduced in this class of fuzzy predictive control
strategy. For instance, nonlinear auto-regression with
eXogenous inputs models [ 15], artificial neural networks [ 16],
and fuzzy models [17-18] have been exploited. A comparison
of those fuzzy model-based adaptive-predictive control
strategies have been provided in [19]. In [35] proposed a
fuzzy predictive filter for obtaining at each time instance a
suitable set of control actions. The actions are based on the
available control space and on simple fuzzy criteria regarding
the current and predicted error. Also, in [20] that proposed a
hierarchical intelligent controller for an unknown low-level
system. The high-level controller consists oftwo parts; one is
Chih-Ching Hsiao is with the Department of Electrical Engineering, Kao
Yuan University, Kaohsiung ,Taiwan, ROC (email: cchsiao Occ.kyu.edu.tw).
Shun-Feng Su is with Department of Electrical Engineering, National
Taipei University of Technology, Taipei, Taiwan, ROC (email: sfsu 7,
ntut.edu.tw).
a fuzzy predictor and the other is a fuzzy controller. The
fuzzy predictor is used predict the system output and then
modify the control signal so that the undesirable effects of
system time delay can be eliminated.
Traditional, the methods for learning fuzzy models from
data are based on the idea of consecutive structure and
parameter identification. Traditional learning algorithms
[21-28] for this kind of approaches are to tune system
parameters according to modeling error, and without
considering the training data with outlier. They may try to fit
those improper data in the training process and thus, the
learned systems are corrupted. In other words, if there exist
outliers and the training process lasts long enough, the
obtained systems may have overfitting phenomena. In [29-3 1]
also proposed the algorithms for TSK fuzzy modeling with
outlier. However, most above approaches their cost function
is only based on modeling error through learning algorithm.
The approach termed as RPSFR (Robust Proper Structure
Fuzzy Regression Algorithm) is proposed in [3-5] which is
iterative between these two agglomeration algorithms. Hence,
it can not only simultaneously identify fuzzy subspaces and
the functions in consequent parts without knowing the cluster
number but also can have robust learning effects against
outliers and with a proper clustering structure. These methods
however, suppose that all the data is available at the start of
the process of training. Therefore, they are appropriate for
off-line applications only. Their use in on-line algorithms is
only possible the price of re-training the parameters with
iterative and time-consuming procedure. For on-line learning
of the fuzzy model, it develops the algorithm of on-line
clustering and recursive parameter estimation [32-33].
Another way is to generate fuzzy rules from numerical
data pairs, collect these fuzzy rules into a common rule base
[34]. It is a one-pass build-up procedure that does not require
time-consuming training. The disadvantage for this approach
is the fuzzy rules may be increase growing to extra numbers,
especially; the data pairs contain noise or outlier. In [20]
modify the approach in [34] to generate fuzzy rule of
predictor from numerical data. Those approaches need some
priori-knowledge of the model, not suitable for unknown
system. In this paper, we also modify this approach to
generate fuzzy rules of predictor from real-time input-output
data by means of ARMA model concept. It includes two
phase: (1). Generating fuzzy rules phase, (2). On-Line
Learning phase; If the error between the real output and the
predictor's output is larger than the desired error, it means
that the lack of the fuzzy rules. Thus, it will generate some
new fuzzy rules for the fuzzy predictor. From the generating
fuzzy rules phase, it can on-line generate the fuzzy predictor.
To achieve good performance for this fuzzy predictor, the
1-4244-1210-2/07/$25.00 C 2007 IEEE.
If the error between the actual output and predict output is
greater than the desired error, it means that the lack of the
fuzzy rules. Thus, it will generate some new fuzzy rules for
the fuzzy predictor. First, determine the degree of each
variable in difference region. Second, assign a Confidence
Degree (CD) for each possible new rule. The CD of each rule
is defined as
p+q
CDj mi (6)
i=1
where mJ denote the membership degree of each variable in
premise part for the j rule. It represents our belief of its
usefulness. A new rule generates only its CD bigger than a
prescribed threshold degree (confidence constant). Thus,
IF CDj > d THEN "Generate this new rule"
From above five steps procedure, it can on-line generate
the fuzzy predictor. To achieve good performance for this
fuzzy predictor, the parameters of each fuzzy rule may be
adjusted by on-line learning, when the prediction error into a
pre-defined bound.
IF error > $ THEN "Gernate Fuzzy Rule"
ELSE " On-Line Learing"
; is a pre-defined error bound. Thus the parameters of
premise parts are updated as
1Oli = Sko (x[k] - x[k])
ymi
j=l
(9)
where Sk is the adaptive learning constant for premise parts.
where d is a user defined confidence constant. It is probable
that there will be some conflicting rules, i.e., rules that have
the same IF part but a different THEN part. To resolve this
conflict is to combine those rules by CD for the consequent
part. For fuzzy singleton type in Equ.(4)
yJ
YCDJ eyJ
, CDj
i = 1, , n is conflicting rules.
In summarizing the above discussion, the algorithm of
on-line fuzzy predictor is described as follow:
[Step. 1] Initialize. Define the domain intervals of input
and output. Divide their spaces into fuzzy
region and selecting thep and q.
[Step.2] Generate the rules of fuzzy predictor from
on-line data pairs sequence.
[Step.3] Discard the redundant fuzzy rules by UD.
[Step.4] Check the error, if bigger than an error bound
then goto Step.2
[Step.5] Apply the on-line adaptive learning law.
Step 5). Reduce the redundant fuzzy rules
It is probable that there will be some redundant rules
may be generated from bad information after long term
learning. They may be incoming data include outliers, noises
or uncertainties. Thus, it will generate some unnecessary
fuzzy rules, we call it is outlier rule. For those rules, the
probability of firing is very low for each fuzzy inference
process. Thus, we assign a Usage Degree (UD) for each
generated rule. For the reason, the more recent rule more
important. The UD of each rule is defined as
(8)UDj kg+fn
k
where k is current time, kg is the generated time for this rule
and f, is firing counter. Thus,
IF UDj < q THEN " Discard this rule "
where q is an user-defined usage constant.
(2). On-Line Learning phase.
Based on the above procedures, that can build the fuzzy
predictor from real-time input/output data. Since the
Gaussian membership functions are used in the premise parts,
its characteristic is that all rules are firing, when there are too
many rules in fuzzy predictor, seem inefficient. So in the
actual inference, we can utilize Confidence Degree (CD) as
threshold value, when it greater than the preserving value,
this rule is firing. It can reduce the complexity of the
inference.
III. SIMULATION EXAMPLE
In this section, a nonlinear time-varying process
operating in open loop [17] is illustrated. The process is
x(k + 1) = O.lx(k)e (-025u' (k)) + 0.5u(k) + a(k)x(k) (10)
where a(k) =0.5 sin(k 100),u(k)= 5sin(k 20). The fuzzy
rule is singleton type such as Equ.(4). The actual process
output and the on-line one-step ahead predict output is shown
together in Fig. 1. We can find that the outlier effect will be
reduced after long term learning. The generated rules and
firing rules number for each sample are shown in Fig.2. Also,
