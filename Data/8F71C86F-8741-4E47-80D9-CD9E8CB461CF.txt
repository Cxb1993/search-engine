and current sensor: achieve low complexity to make 
TED and DCO sense thermal and current. Then an MIMO 
SDPLL can sense thermal and current without hardware 
overhead. (3) Dynamic allocation of MIMO-PLL 
processing in Cloudlet server on chip: use the 
software management to locate different MIMO-PLL 
processing in different cores dynamically to enhance 
core utilization and to improve power efficiency. 
英文關鍵詞： MIMO, SDPLL, TED, DCO 
 
2 
 
中   華   民   國    一百零一年    二月    二十九日 
4 
 
 
一、 中、英文摘要 
 中文摘要 
本計畫欲支援多核心系統之偵測與控制管理硬體架構，此子計畫的主軸在於結合 
嵌入式多核心系統設計實現軟體定義多輸出入鎖相迴路 ( s o f t w a r e - d e f i n e d 
multi-input multi-output phase-locked loop; MIMO SDPLL) 設計，並實現可支援 
Cloudlet server on chip 之相關偵測與控制管理所需硬體，例如：溫度偵測、電流 
偵測、快速時脈調整及電壓開關，以提供不同 virtual machine (VM)對性能需求與 
省電目標。本子計畫在技術上主要分為三個方面研究議題著手，其中包含全數位 
溫度偵測器(all-digital thermal sensor)、全數位電流偵測器(all-digital current sensor) 
與軟體定義多輸出入鎖相技術(MIMO-PLL)。此架構特色在 (1) 軟體定義多輸出 
入鎖相迴路(MIMO SDPLL): 將多個全數位偵測器(TED)和全數位震盪器(DCO) 
結合中央處理器以形成軟體定義多輸出入鎖相迴路軟體，此鎖相迴路不需使用其 
他運算單元，以降低實際 PLL 硬體的套數。 (2) Shared All-Digital Thermal and 
Current Sensor: 開發可同時支援 SDPLL 所需時脈輸出、相位偵測和時間偵測， 
並具備溫度和電流偵測功能之矽智產(silicon IP)以提供管理軟體使用。  (3)利用 
分享 Cloudlet server on chip 的處理核心同時處理多個 MIMO-PLL 運算，並分配 
其他不同核心所需之不同時脈的控制，藉由管理軟體的動態分配 MIMO-PLL 運算可進
一步提高多時脈輸出入的運作效率。 
 
關鍵字: 軟體定義多輸出入鎖向迴路, 全數位偵測器, 全數位震盪器 
 
 
 英文摘要 
This project mainly focuses on software -defined multi -input multi -output 
phase-locked loop (MIMO SDPLL) to support all-digital sensing and multi-rate 
clocking techniques and hardware implementations for GreenArmy-Cloudlet server 
on chip, such as thermal detection, current detection and fast-adjust clocking, to 
ensure different virtual machines (VM) balancing power and performance. There are 
three research topics to proceed, which are all-digital thermal sensor, all-digital 
current sensor and fast adjustable multi-rate clocks. Our features are (1) MIMO 
SDPLL: integrate several timing error detectors (TED) and the all-digital oscillators 
(DCO) with the embedded processor to support multi-clock operations. By using 
software flexibility, this kind of PLL methodology can reduce the actual copies of 
PLLs in multi-rate clocking. (2) Shared all-digital thermal and current sensor: achieve 
low complexity to make TED and DCO sense thermal and current. Then an MIMO 
SDPLL can sense thermal and current without hardware overhead. (3) Dynamic 
allocation of MIMO-PLL processing in Cloudlet server on chip: use the software 
management to locate different MIMO-PLL processing in different cores dynamically to 
enhance core utilization and to improve power efficiency. 
 
Keyword: MIMO, SDPLL, TED, DCO 
6 
 
design. 
 
However, this bottleneck of dealing with power consumption will occur, the new approaches 
and concepts will be proposed and invented revolutionary on management of power 
consumption. On the other hand, the multi-core (or many-core) processor will not be in peak 
operation stage. Therefore, we can allow the processor elements (PEs) dynamically to 
configure the working voltages and working frequency. When the workloads of PEs are very 
heavy, they need the higher working voltages and frequency. In the contrast, the workloads 
(of PEs) are lower than usual operation; we could reduce the working voltages and 
frequency. This mechanism is usually called the Dynamic Voltage and Frequency Scaling 
(DVFS). 
 
The key plan of this project is considered the three aspects of DVFS mechanism: layout, 
efficiency of controlling voltages and frequency, and quality of output signals and frequency. 
These will accomplish the hardware of sensing and controlling management for Cloudlet 
server on chip. For example, thermal sensing, power sensing, and configurable frequency 
provide the desires of performance and power-saving on different virtual machine (VM). 
 
The goal of this project can provide thermal sensor, power sensor, and multi-input 
multi-output software-defined phase-locked-loop (MIMO-SDPLL). The techniques mainly 
divide three aspects to study these issues, include the all-digital thermal sensor, all-digital 
current sensor, and MIMO-SDPLL. 
 
8 
 
 
四、 研究方法 
In this project we are according to plans of GreenArmy proposal, and we are responsible to 
provide the circuit design of sensing and frequency generator module. We divide into 
following aspects to study and accomplish the project. 
 
1. Thermal and Current Sensor 
For reducing the complexity of design and cost of manufacturing, this circuit of thermal 
sensor utilizes the linear relations between signaling delay and thermal differences of 
inverter that composed by COMS. We use the even numbers of inverters to cascade one 
delay line, which signaling delay is proportional to the differences of temperature. 
Therefore, we can generate the pulse that width is linearly proportional to the thermal 
differences. This pulse is further fed to time-to-digital converter (TDC) module, and it 
will be quantized to digital numbers. This quantized information will provide the 
standard of current reference temperature. The Fig. 4.1 is shown this mechanism. This 
circuit is all implemented by digital component, it do not need the analog thermal 
sensing module constructed by analog to digital converter (ADC) and bipolar junction 
transistor (BJT). For the reasonable and acceptable errors, we can utilize this approach to 
achieve this design. Furthermore, we can save the total cost of design. 
 
 
Fig. 4.1 The pulse convert to digital number via TDC module 
 
   Furthermore, for the resistance in circuit, the difference of voltage is proportional to 
current passed through this circuit. The signaling delay of logic gates is also affected by 
different input working voltages. Therefore, we can utilize this characteristic to design the 
circuit that can measure current passed through this circuit. The Fig. 4.2 is current/voltage 
sensor design block diagram. We can use the ring-oscillator module that is consisting of odd 
numbers of inverters. This module will be according to different input working voltages to 
generate the different frequency. If we provide an interval clock period for TDC, then the 
counter will produce the relatively digital numbers. This information will be the 
current/voltages reference of circuit operation. 
 
10 
 
 
Fig. 4.3 The working flow of PLL 
 
3. Software-Defined PLL HW 
 OpenRISC Model 
The selection of CPU is OpenRISC or1200. Or1200 support cache, MMU and basic DSP 
capabilities. The above function only instruction cache has been implemented in this 
project. Because the support of instruction cache can enhance the efficiency when 
execute the redundant instruction. It will take 3 system cycles when the bus access. In 
addition, the divided operation is simulation by multiplier with the help of compiler. It 
needs implementation because the software is compiled without standard library. At 
TSMC 65nm process, the total gate counts are 10k and have maximum frequency up to 
250MHz. The detail configuration of the processor is showed in Table 4.1. 
 
Table 4.1 Configuration of the processor 
Item Description 
1-way direct-mapped 8KB data cache Disable 
1-way direct-mapped 8KB instruction cache Enable, 1KB 
Instruction MMU  Disable 
Data MMU Disable 
Hardware multiplication/division Enable 
Wishbone bus bursting Enable 
 
 WISHBONE Bus Protocol 
In order to CPU compatibility and IP cores connection, the WISHBONE [8] bus is 
chosen. WISHBONE has two type of interface: MASTER or SLAVE. MASTER can 
request transaction to SLAVE. The CPU is a MASTER. SLAVE can reply transaction 
request from MASTER. All IP cores are SLAVE beside CPU in this work. The required 
system cycles of the bus protocol is showed in Table 4.2. It costs one cycle to read the 
error value and error signal from error detector. And it also costs one cycle to set the 
control word to DCO after CPU execution. However, the above actions both need to bus 
access. If the instruction cache hits, it only needs one extra cycle to access the bus. In the 
12 
 
The software programming environment lists in Table 4.4. This work uses the C 
language to develop the tracking algorithm and the cross compiler which gcc 3.4.4 for 
OpenRISC 32 bit architecture. 
 
Table 4.4 Software environment 
Item Description 
Development language C  
Cross compiler gcc 3.4.4 for OpenRISC 32 bit architecture 
Host 
CentOS release 5.2  
Kernel version: 2.6.18-92.1.17.el5 
 
 
 Software Development Flow 
In this project, the hardware simulation needs to a binary code which can be loaded into 
flash memory model. So the C program can be compiled by or32-uclinux-gcc cross compiler 
and the assembler and linker converts the assembly programs to binary code. Finally, the 
binary code will be loaded into flash memory model and the tracking algorithm will be 
operated in the SDPLL platform. In Fig.4.5, it shows the software development flow. 
Obviously, if the tracking algorithm is too complicated, the redundancy cycles will increase 
quickly. So it has to avoid using the jump instructions as soon as possible for reducing the 
actions of stack pointers. 
 
 
Fig 4.5 The software development flow 
 
 
14 
 
setting lists in table 5.1. The simulation waveform is presented at Fig. 5.2, and the divided 
clock convergence at 140th reference clock. Furthermore, the phase error between divided 
clock and reference clock achieve at 8.36ps. 
 
Table 5.1 Hardware specification of SDPLL 
 
Item Description 
Process TSMC 65nm TCBN65GP Process 
CPU 
OpenRISC or1200  
Maximum clock frequency: 250MHz 
Gate count: 150k  
Bus 
WISHBONE bus  
Architecture: shared bus 
Maximum clock frequency: 250MHz 
Error 
detector [4] 
PFD 
Minimum error pulse: 200ps 
Minimum detectable clock 
difference: 1 ps 
Gate count: 107 
TDC 
Resolution: 10ps 
Gate count: 6k 
Divider N Range: 1~1023 
Loop filter Moving average of 8 tap 
DCO [3] 
Frequency range: 660KHz~833MHz 
Resolution: 40fs 
Reference clock 
Frequency range: 660k/N~833M/N 
Hz 
SACA [5] 
103~1231MHz of 64 stage 
Each stage: 140ps 
Memory 
On FPGA board memory 
Address space: 8MB 
Flash 
On FPGA board flash 
Address space: 8MB 
 
 
 
 
 
(a) 
16 
 
 
Fig.5.2 The waveform of simulation results 
(a) The full view of waveform. (b) The zoom version of coarse tracking. (c) The zoom 
version of fine tracking. (d) The zoom version of the phase error 
 
From performance comparison with other works in Table 5.2, the performance of this work 
in lock-in time and resolution is much better than the other work which also using software 
control strategy. Furthermore, it will have more flexibility to design the tracking algorithm 
for different applications in SDPLL. 
Table 5.2 Comparison with other works 
 
 
100 年度專題研究計畫研究成果彙整表 
計畫主持人：許騰尹 計畫編號：100-2220-E-009-040- 
計畫名稱：GreenArmy：綠色微雲伺服系統晶片平台技術--子計畫六：綠色微雲伺服系統晶片上全數位
功率及熱能偵測與管理之硬體設計(1/3) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 1 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 2 2 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 1 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
