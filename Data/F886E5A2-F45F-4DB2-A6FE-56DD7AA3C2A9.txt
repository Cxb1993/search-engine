than these four mixed integer programming solvers. 
英文關鍵詞： combinatorial optimization, combinatorial analysis, 
evolutionary computations, global optimization 
 
2 
三、計畫中獲補助國外差旅費，出國進行移地研究、出席國際學術會議或因執行國際合作研究
計畫至國外機構執行合作研究者，每次均須依規定分別撰寫出國心得報告（其中，出席國
際學術會議者須另附發表之論文全文或摘要，但受邀專題演講或擔任會議主持人者不在此
限），並至本會網站線上繳交電子檔，出國心得報告格式如附件四、五、六。 
四、報告編排注意事項 
(一)版面設定：A4紙，即長 29.7公分，寬 21公分。 
(二)格式：中文打字規格為每行繕打（行間不另留間距），英文打字規格為 Single Space。 
(三)字體：以中英文撰寫均可。英文使用 Times New Roman Font，中文使用標楷體，字體
大小以 12號為主。 
I 
中文摘要 
本計畫主要以開發一個可以解決廣泛的混合整數規劃的演算法為主，只要混和整數規劃的目標函
數及限制式為連續函數都可以適用。這一個演算法主要的貢獻為提出一個容易理解及寫成程式碼的方
法去將混和整數規劃問題改寫成一個相等的非線性規劃問題。改寫後，就可以利用較成熟的非線性規
畫求解的技術去尋找問題的最佳解。因為非線性規畫為在連續空間上求解，且連續空間上每一個點都
有較多的訊息(例如：方向導數)，所以，可以期待化成一個非線性規劃問題後，求解的速度會加快且可
以得到較佳的結果。最後，這一個演算法將會用一些著名的混和整數規劃問題來做測試，並與現有文
獻裡著名的混合整數規劃問題的結果來做比較。這個演算法的流程，已編寫一個 R的程式碼供其他人
使用。 
關鍵詞：混合整數規劃、最佳化演算法、軟性計算。 
 
English abstract 
This paper proposes a generalized algorithm to solve mixed integer programming problems with continuous 
objective functions and continuous constraints. The proposed algorithm firstly converts a mixed integer 
programming problem into an equivalent nonlinear programming problem with constraints only on the 
variable boundaries. Although there are many nonlinear programming solutions, the algorithm approaches the 
optimal solution of the nonlinear programming problem using evolutionary computations, which are ideal for 
global optimization if the objective function is highly nonlinear. The algorithm has an advantage over directly 
using evolutionary computations to solve the original mixed integer programming problem because 
evolutionary computation methods for nonlinear programming problems (e.g., the differential evolution 
algorithm) are simpler, more accurate, and more efficient than those for mixed integer programming problems 
(e.g., the genetic algorithm). The evolutionary computation solution also comes closer to the optimal using the 
derivative of the objective function of the nonlinear programming problem. This study simultaneously 
implements the proposed algorithm and four other mixed integer programming problem solvers in a typical 
mechanical design problem. Results show that the proposed algorithm provides a better solution than these 
four mixed integer programming solvers. 
Keywords: combinatorial optimization, combinatorial analysis, evolutionary computations, global 
optimization. 
 
 
 
 
 
 
 
 
 
 
 
 
1 
一、 前言 
混合整數規劃問題(Mixed integer programming, MIP)是整數變量和連續變量的優化問題。大多數
MIP問題是NP hard問題，而且是一個非常困難求得最佳解的問題。許多現實世界的問題都是MIP問題，
例如排程問題、車輛路線問題和網路設計問題。然而，只有少數的MIP問題有自己的演算法以近似最
佳解[2, 3, 4]。在電腦發達的時代，為方便搜尋MIP問題的解，許多研究都會使用模仿自然界適者生存
的演化機制的 evolutionary algorithms。但是，MIP的解空間是一個離散空間，在離散空間去進行 
evolutionary algorithms 的演化是一件困難的事情 (例如：基因演算法的交配過程[5])。因此，本研究最
重要的是要開發一個方法將MIP問題轉換成一個較簡化的非線性規劃問題(nonlinear programming, 
NLP)。 
二、 文獻探討 
進化演算法是目前國際上最流行且MIP問題的通用解決方法，基於自然界適者生存的機制，隨機
發展一個可行解決方案的子集以近似最佳解。最近的一些學術研究[6, 7, 8]嘗試使用Differential 
evolutionary (DE) 演算法去求取MIP問題的最佳解，結果都比直接求解MIP來的好。DE演算法是一個解
NLP問題的evolutionary algorithm，這代表轉換MIP問題成簡單的NLP問題是一個可以提高求解速度及
品質的可行方向。 
Lin, Y. C. [7]和Ponsich and Coello [8] 開發變形的DE演算法尋找MIP問題的最佳解。這個變形的DE
演算法將原有的MIP問題化成數個NLP問題來求解，而非一個相等的NLP問題，這將有可能降低求解的
速度及品質。Hong, C. C. 和Song, M. [6] 提出了一個較Boros and Hammer[9] 簡單的方法去轉換MIP問
題成一個相等的NLP問題，且Hong, C. C. 和Song, M. [6]的研究結果大大的提升了求解MIP問題的速
度。然而 Hong, C. C. 和Song, M. [6] 只針對整數變數的解空間只能有0及1的MIP問題，且是沒有限制
式的MIP問題。若我們能延續 Hong, C. C. 和Song, M. [6] 中的方法，並將其擴展成適用於一般的MIP
問題，對未來提升解決 MIP 問題的速度及品質將會有幫助。 
三、 研究方法 
我們將延續Hong, C. C. 和Song, M. [6] 中的方法，並將其擴展成適用於目標式及限制式為多項式
的MIP問題。根據 Stone-Weierstrass theorem [10]，任意連續函數在緊緻區間中可以找到一個多項式逼
近它。所以，只要可以將目標式及限制式為多項式的MIP問題轉換成NLP問題，我們一樣能將目標式及
限制式為連續函數的MIP問題(其解空間為有上下界的情況下)轉換成相等的NLP問題。 
3 
我們的結果比之前提出的幾個方法，IDCNLP[12]、SA[13]、MVEP[14] 和MIHDE-AMM[6]都來的
好，結果如下表： 
Methods IDCNLP SA MVEP MIHDE-AMM MIPCA 
1x  18 18 16 15 12 
2x  10 10 10 8 6 
1y  48.3807 58.2900 51.1958 48.5765 37.70197 
2y  111.7449 43.6930 90.7821 110.0559 240 
1g  -0.1913 -0.0250 -0.0119 0.0000 -0.0224 
2g  -0.1643 -0.0689 -0.1366 -0.0366 -0.01532 
3g  -75.8750 -6.5496 -13584.5631 0.0000 -207.6480 
4g  -128.2551 -196.3070 -149.2179 -129.9441 0.0000 
( ),f x y  8048.6190 7197.7 7108.6160 6370.7035 6019.771 
 
五、 討論及未來工作 
這一個研究中我們提出了一個MIPCA的演算法，這一個MIPCA演算法是一個廣義的演算法，可
以用來求解目標式及限制式為連續函數的 MIP 問題。這一個 MIPCA 演算法已寫成一個可以執行的程
式。這一個程式已經使用在解決實際的油槽設計問題，並得到不錯的結果。事實上，MIPCA演算法用
來轉換MIP問題成 NLP問題的這一段，可以當成 NLP問題解法與MIP問題的橋梁，搭了這一座橋梁
後，許多 NLP 問題的解法都可以拿來試著去解決 MIP 問題，讓原本一些不容易解決的 MIP 問題，有
更多不一樣的方法來討論它，且用來尋找它的解。接下來我們將把MIPCA演算法中的 DE演算法用不
同解決 NLP問題的 evolutionary algorithms 來測試，例如，tropic cyclone-based method (Fang, 2012)，並
探討如何搭配這些不同的 evolutionary algorithms會最有效。 
 
 
 
 
 
 
A-1 
Appendix A – MIPCA演算法技術報告 
目錄 
目錄 ·························································································································· A-1 
1. Introduction ············································································································ A-2 
2. Terminology ············································································································ A-2 
3. The MIPCA algorithm ······························································································· A-3 
4. Implementation ········································································································ A-7 
4.1 An example to show the converting processes in the MIPCA algorithm ······························ A-7 
4.2 The Mechanical design problem ··············································································· A-8 
5. Conclusion and Further Work ······················································································ A-9 
REFERENCES ·········································································································· A-10 
A-3 
11 2
( , , , )nx x x…  where 1, 1, , ,ix i n= …  are integer variables. Let y  denote vector 21 2( , , , )ny y y…  where 
2, 1, , ,jy j n= …  are continuous variables. A polynomial, ( , )P x y , is a multi-linear polynomial (MLP) if the 
power of each integer variable 2, 1, ,ix i n= … , in each term of ( , )P x y  is either 0  or 1. In this study, an 
MIP problem with both its objective function and constraints being continuous (polynomials/ multi-linear 
polynomials) is called an MIP.C (MIP.P/ MIP.MLP) problem. Moreover, if all the integer variables of an 
MIP.C (MIP.P/ MIP.MLP) problem are binary variables, this MIP.C (MIP.P/ MIP.MLP) problem is called a 
01MIP.C (01MIP.P/ 01MIP.MLP) problem. 
Let f , 1, 1, , ,ig i m= …  and 2, 1, , ,jh j m= …  be functions of x  and y . The following problem 
(MIP1) is the generalized mathematical formulation of MIP problems, 
1
2
1
2
;
( ) 0, 1,..., ;
( ) 0, 1,..., ;
0 , 1,..., ;
0 , 1,..., ,
h
k
i i
j j
g h m
h k m
x a i n
y b j n
≤ =
= =
≤ ≤ =
≤ ≤ =
x,y
(MIP1) min f(x,y)
subject to : x,y
x,y  
where 1, 1, , ,ix i n= …  are integer variables of problem (MIP1) with lower bound 0  and upper bound ia  
while 2, 1, , ,jy j n= …  are continuous variables with lower bound 0  and upper bound jb . Adding real slack 
variables into inequalities 1, 1,..., ,hg h m=  of problem (MIP1) converts these inequality constraints into 
equalities. Problem (MIP1) then becomes problem (MIP2) shown as below, 
1
2
;
( , ) 0, 1,..., ;
0 , 1,..., ;
0 , 1,..., ,
k
i i
j j
h x y k m
x a i n
y b j n
= =
≤ ≤ =
≤ ≤ =
x,y
(MIP2) min f(x,y)
subject to :  
Problem (MIP2) serves as the mathematical formulation of MIP problems in the remainder of this paper. Note 
that if f  and , 1, , ,kh k m= …  in problem (MIP2) are continuous (polynomials/ multi-linear polynomials), 
problem (MIP2) is a MIP.C (MIP.P/ MIP.MLP) problem. Finally, we call an MIP problem without constraints 
if it only has constraints on the variable boundaries. 
3. The MIPCA algorithm 
This section introduces the MIPCA algorithm, which can be used to solve an MIP.P problem directly. 
However, according to the Stone-Weierstrass theorem (Bishop, 1961), a continuous function on a compact 
interval can be approximated by a polynomial. This means that MIP.C problems can also be solved using the 
MIPCA algorithm after converting these continuous functions of MIP.C problems into their corresponding 
approximating polynomials. The following five steps of the MIPCA algorithm approach the optimal solution 
A-5 
the upper bound of ˆ jy  by ˆjb . Let fˆ  be the objective function of the 01MIP.P problem and let 
ˆ ˆ, 1, , ,kh k m= …  be the constraints. This step uses the processes above to convert problem (MIP2) into an 
equivalent 01MIP.P problem, problem (01MIP.P), shown as below: 
ˆ ˆ
1
2
ˆ ˆ ˆ ;
ˆ ˆ ˆ ˆ( ) 0, 1,..., ;
ˆ ˆ ˆ(1 ) 0 , 1,..., ;
ˆˆ ˆ0 , 1,..., .
k
i i
j j
h k m
x x i n
y b j n
= =
− = =
≤ ≤ =
x,y
(01MIP.P) min f(x,y)
subject to : x,y  
Step2. Convert a 01MIP.P problem into an equivalent 01MIP.MLP problem. 
This step requires the following lemma. 
Lemma 3.1.  Let x  be a binary variable. Then, rx x=  for any non-zero value r . 
According to Lemma 3.1, the value of a binary variable with any non-zero power is the same as the value 
of itself. The power of each integer variable in each term of the objective function or the constraints of 
problem (01MIP.P) can be reduced to 1 from a positive number because all its integer variables are binary 
variables. Thus, problem (01MIP.P) can be rewritten as a 01MIP.MLP problem. After reducing the powers of 
binary variables, 1ˆ ˆ, 1, , ,ix i n= …  in the objective function and the constraints of problem (01MIP.P) to 1 
from positive numbers,  fˆ  and ˆ , 1, , ,kh k m= …  become MLPs f  and ˆ, 1, ,kh k m= … , respectively. Thus, 
this step converts problem (01MIP.P) into an equivalent 01MIP.MLP problem, problem (01MIP.MLP), shown 
as below: 
ˆ ˆ
1
2
ˆ ˆ ;
ˆ ˆ ˆ( ) 0, 1,..., ;
ˆ ˆ ˆ(1 ) 0 , 1,..., ;
ˆˆ ˆ0 , 1,..., .
k
i i
j j
h k m
x x i n
y b j n
= =
− = =
≤ ≤ =
x,y
(01MIP.MLP) min f(x,y)
subject to : x, y


 
Step3. Convert a 01MIP.MLP problem into an equivalent 01MIP.MLP problem without constraints. 
Using the Lagrange multiplier method, a constraint can be ignored by adding proper penalty values to the 
objective function for possible solutions that violate this constraint. In this case, assign large positive values to 
multipliers ˆ, 1, ,k k mλ = … , and add 
ˆ
2
1
ˆ ˆ( )
m
k k
k
hλ
=
∑ x, y  to the objective function to remove these equality 
constraints of problem (01MIP.MLP). Then, the objective function of problem (01MIP.MLP) becomes 
2
ˆ
1
ˆ ˆ ˆ ˆ( ) ( ).k
m
k
k
f hλ
=
+ ∑x,y x,y   (4) 
Since each integer variable in Eq.(4) is a binary variable, Eq.(4) can be rewritten as an MLP by following 
the same process in Step 2. Let ˆ ˆ( )θ x, y  denote the MLP from Eq.(4). Thus, this step converts problem 
(01MIP.MLP) into an equivalent 01MIP.MLP problem without constraints, problem (01MIP.MLP-NC), 
shown as below: 
A-7 
algorithm (Storn and Price, 1995; Lampinen and Zelinka, 1999) can approach the global minimum. Finally, 
starting from the result of the DE algorithm, the derivative of the objective function can be used to reach 
minimums. 
This study uses the DE algorithm to approximate the global minimum of a highly nonlinear objective 
function. The DE algorithm is an evolutionary optimization method that first generates an initial population of 
feasible solutions, typically 2 to 50 times of the variables (Storn and Price, 1995). Each individual in the 
population either remains unchanged or mutates to a new feasible solution in each iteration. The occurrence of 
a mutation depends on a trial vector and a probability ρ . The trial vector combines three other individuals, 
randomly chosen from the population. If the trial vector is a feasible solution and improves the value of the 
objective function, then the individual mutates to the trial vector with probability ρ . Because the evolution 
of an individual is independent of others, evolutions of individuals can progress simultaneously, and hence 
can be performed in parallel. 
4. Implementation 
In this section we use an example to show the converting processes of the MIPCA algorithm and a 
practical problem to show the performance of this algorithm. Section 4.1. gives a MIP.P problem and then 
show how we convert it into a NLP problem through step 1 to step 4 of the MIPCA algorithm. Then, we apply 
the MIPCA to a practical mechanical design problem and compare the result with those coming from four 
other MIP problem solvers in section 4.2. 
4.1 An example to show the converting processes in the MIPCA algorithm 
We have a MIP.P problem as below, 
2 2
1 2 1 2 1 3 1 2 3 1 1 1
1
2
3
1
min . ;
: {0,1};
{0,1};
{0,1,2,3};
0 1.
x x x x x x x x x x y y
subject to x
x
x
y
− + + − + −
∈
∈
∈
≤ ≤
 
In step1, we can express 3x by three binary variables, 31 32 33, ,x x x , as below, 
0 1 2
3 31 32 332 2 2x x x x= + + . 
In step2, since 1x  and 2x  are binary variables, all the powers of these two variables in the objective function 
can be replaced by 1. Therefore, the problem becomes a 01MIP.MLP problem shown as below, 
0 1 2 0 1 2
1 2 1 2 1 31 32 33 1 2 31 32 33 1 1 1min . (2 2 2 ) (2 2 2 ) ,x x x x x x x x x x x x x x y y− + + + + − + + + −  
with 1x , 2x , 31x , 32x  and 33x  are binary variables and 1y  is a continuous variable between 0 and 1. In 
addition, as the coefficients of the terms with 2x  in the objective function are always negative, the optimal 
A-9 
Table 1: The solutions for the mechanical design problem from five algorithms, IDCNLP, SA, MVEP, 
MIHDE-AMM and MIPCA. 
Methods IDCNLP SA MVEP 
MIHDE-A
MM 
MIPCA 
1x  18 18 16 15 12 
2x  10 10 10 8 6 
3x  48.3807 58.2900 51.1958 48.5765 37.70197 
4x  111.7449 43.6930 90.7821 110.0559 240 
1g  -0.1913 -0.0250 -0.0119 0.0000 -0.0224 
2g  -0.1643 -0.0689 -0.1366 -0.0366 -0.01532 
3g  -75.8750 -6.5496 -13584.5631 0.0000 -207.6480 
4g  -128.2551 -196.3070 -149.2179 -129.9441 0.0000 
( ),f x y  8048.6190 7197.7 7108.6160 6370.7035 6019.771 
 
5. Conclusion and Further Work 
This paper proposes a simple method to convert a mixed integer programming problem, whose objective 
function and constraints are polynomials, to an equivalent nonlinear programming problem. The MIPCA 
algorithm, which combines the converting method and the differential evolutionary algorithm, is a generalized 
algorithm to approximate the optimal solutions of mixed integer programming problems whose objective 
functions and constraints are polynomials. The MIPCA algorithm also works for mixed integer programming 
problems with continuous objective functions and constraints. In addition to combining with the differential 
evolutionary algorithm, the converting method of MIPCA algorithm builds a bridge to connect mixed integer 
programming and nonlinear programming solvers, e.g., the tropical cyclone-based method (Chao et al., 2012). 
Then, one has more tools to study a complicated mixed integer programming problem. This paper also 
describes the advantages of solving a mixed integer programming problem with an equivalent nonlinear 
programming problem. The result of implementing the MIPCA algorithm in a typical mechanical design 
problem show that the MIPCA solution is better than the solutions of four other mixed integer programming 
solvers. We will post the source code of the MIPCA algorithm on the internet, and expect that this algorithm 
can be used to solve more real world problems. 
A-11 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
□ˇ達成目標 
□ 未達成目標（請說明，以 100字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：□ˇ已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100字為限） 
本論文正 under review 
 
 
附件二 
A-13 
 
國科會補助計畫衍生研發成果推廣資料表 
日期：   年  月  日 
國科會補助計畫 
計畫名稱： 
計畫主持人：         
計畫編號：             領域： 
研發成果名稱 
（中文） 
（英文） 
成果歸屬機構 
 發明人 
(創作人) 
 
技術說明 
（中文） 
 
 
 
（200-500字） 
（英文） 
產業別 
 
技術/產品應用範圍 
 
技術移轉可行性及預期
效益 
 
     註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
 
 
 
附件三 
A-15 
 
國科會補助專題研究計畫出席國際學術會議心得報告 
                                     日期：   年   月   日 
                                 
一、參加會議經過 
二、與會心得 
三、發表論文全文或摘要 
四、建議 
五、攜回資料名稱及內容 
六、其他 
 
 
 
 
 
 
 
計畫編號 NSC  －    －  －    －    － 
計畫名稱  
出國人員
姓名  
服務機構
及職稱 
 
會議時間 
 年 月 日至 
 年 月 日 會議地點 
 
會議名稱 
(中文) 
(英文) 
發表題目 
(中文) 
(英文) 
附件五 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/11/20
國科會補助計畫
計畫名稱: 求解廣泛混合整數規劃問題 - 經由連續空間搜尋最佳解的演算方法
計畫主持人: 洪宗乾
計畫編號: 100-2218-E-020-005- 學門領域: 作業研究
無研發成果推廣資料
年 7 月的年會，至
2012 年 4 月收
到＇＇因投稿件
數太多，沒辦法排
進 適 當 的 議
程＇＇的回覆。 
 
之後要再投稿適
合的 2012 暑期研
討會似乎已經太
晚，故無法於計畫
結束前於研討會
發表論文。 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
11/02,2011 於高雄大學數學系對此研究初步成果進行演講，主題為＇＇An 
algorithm to solve mixed integer programming in continuous areas＇＇。
該研究成果的演算法已經用 R 程式語言寫軟體，並用於一個實際的工程設計問
題(最小化壓力艙的成本)，求得的解比其他之前的混和整數規劃都來的好。 
另外該研究的演算方法，讓許多非線性規劃解法可以用來解決混和整數規劃問
題，者使得在求解複雜的實際混和整數規劃問題時有更多的工具可以使用。 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
