1 
 
行政院國家科學委員會補助專題研究計畫成果報告 
應用學習演算法於時滯網格型類神經網路的模板參數設計與 FPGA 實現 
計畫編號: NSC97-2221-E-168-025- 
執行期間:97 年8 月1 日至98 年7 月31 日 
計畫主持人: 鄭朝榮 崑山科技大學資訊工程系 
 
一、中英文摘要 
     
    網格型類神經網路(Cellular Neural Networks, CNNs)是由許多陣列排列的神經 
元所組成，每個神經元內含非線性動態行為，適當地調整網格型類神經網路的參數，可 
使網格型類神經網路呈現多樣的動態特性，一般運用穩定充分條件做為其學習是否能收 
斂之判斷依據，當C N N s  參數無法滿足一些穩定性的充分條件時，雖無法判別 
系統是否穩定，但若適當的選擇CNNs 參數，在有限時間和空間範圍內，透過計算系統 
的李亞普諾夫指數(Lyapunov Exponent)有一個正值的特性，能夠判斷是否具混沌行為。 
本計畫研究基於遺傳演算法、模擬退火演算法和T-S (Takagi-Sugeno)模糊系統之時滯網 
格型類神經網路的模板參數設計問題，並進一步將這些結果應用於邊緣偵測、雜訊濾除 
和 Lorenz 系統、Rossler 系統辨識等，最後以 FPGA 實現各個功能之網格型類神經網路。 
關鍵字：網格型類神經網路、基因演算法、模擬退火演算法、主動控制、現場可程式化閘
陣列 
 
    Cellular Neural Networks (CNNs) are large arrays of dynamic cells which are composed of linear 
and nonlinear circuit elements. Any cell in the CNNs is connected only to its neighbor cells. If 
the system’s parameters as well as the delay parameter are suitably chosen, the CNNs will 
display some kinds of stable or chaotic behaviors. To research the templates design and dynamics 
of Cellular Neural Networks (CNNs) with time delays can provide a tool for image processing and 
nonlinear system identification. In this project, the main effort is to design the templates of Cellular 
Neural Networks (CNNs) with time delays using genetic algorithm, simulated annealing algorithm and 
T-S Fuzzy System. The results will be verified by image processing problems such as edge 
detection and noise removal. Furthermore, the system identification problems of Lorenz system and 
Rossler system using CNNs with time delays are investigated. Finally, FPGA implementation for 
CNNs with different applications are proposed. 
Keywords：Cellular Neural Networks、Genetic Algorithm、Simulated Annealing Algorithm、 
Active Control、FPGA 
 
二、計畫緣由與目的 
網格型類神經網路(Cellular Neural Networks, CNNs)是一種局部互聯(Local 
Connectivity)的類神經網路，Chua 和 Yang [1]於西元 1988 年首先提出其最簡單的型式，
用以解決影像處理問題，CNNs 可視為一種能夠處理即時訊號的大型(Large-Scale)非線性
類比電路，由一群細胞（Cell）有秩序的放置和連接而成，而 Cell 則是由電阻、電容和可
變電壓控制的電流源等線性電路元件所組成。每個 Cell 本身只和最靠近的 Cell 們相連
接，並且透過可調整的權重（Weight）或模板（Template）參數來互相影響。CNNs 已經廣
3 
 
另一方面，由於 CNNs 具有簡單以至非常複雜之多樣化動態特性，若適當地調整模板
（Template）參數，在有限時間和空間範圍內，透過計算系統的李亞普諾夫指數(Lyapunov 
Exponent)有一個正值的特性，能夠使 CNNs 具有混沌的（Chaotic）動態行為。混沌乃指在
一個決定性(deterministic)系統中，一種無週期或是週期極長，長到超出想像範圍的動態
行為。關於混沌現象的研究源自於 Lorenz 方程式[10]，Lorenz 吸子是現代非線性動力學
的典型象徵。Lorenz 方程式對於初始條件（Initial conditions）非常敏感，只要起始條
件不同，便會隨著時間的演進而指數地放大，這就是混沌系統中不能預期的特性，但混沌
系統具有整體性的複雜變化，而且系統可以持續維持其不規律性，看似局部混亂但整體是
在某一個範圍的，亦即局部不穩定卻又全域有界（Global Bounded），研究發現物理、化
學、生態、經濟等領域中都有混沌現象，包括 Chua’s 系統、Duffing 系統、Rossler 系統
和離散 Ikeda 系統等。利用 Pecora 和 Carroll 提出的 drive-response 耦合系統混沌同
步控制，具混沌動態的 CNNs 也可應用於通訊安全系統之設計[11-12]，然而假設響應系統
(Drive System)和驅動系統(Response System)均屬同一類型的混沌系統在應用上或有其限
制。本研究使用不同的驅動系統和響應系統，透過主動控制(Active Control)[13]，使響
應系統之狀態變數和驅動系統之狀態變數達成同步狀態，學習演算法則可找出最佳 CNNs 模
板參數以節省控制輸入之能量。在實作部份，以現場可程式化閘陣列(Filed Programmable 
Gate Array, FPGA)做驗證。 
 
三、研究方法及成果 
學習演算法使 CNNs 模板參數設計更系統化和最佳化，本研究探討遺傳演算法、模擬退
火演算法在時滯 CNNs 模板參數設計的應用。遺傳演算法是進化演算法的一種[8]，如圖 1
所示，借用了進化生物學中的一些現象而發展起來的，這些現象包括遺傳、突變、自然選
擇以及交配等，對於一個最優化問題，遺傳演算法意指一定數量的候選解（個體）的抽象
表示（染色體）種群欲向更好的解進化。傳統上，用二進位表示每個解，但也可以用其他
表示方法，進化從完全隨機個體的種群開始，之後一代一代發生，在每一代中，整個種群
的適應度被評價，從當前種群中基於它們的適應度隨機地選擇多個個體，通過自然選擇和
突變產生新的生命種群，該種群在演算法的下一次迭代中成為當前種群。跟傳統的梯度演
算法相比，遺傳演算法能夠跳出局部最優而找到全局最優點，而且允許使用非常複雜的適
應度函數，並可以對變數的變化範圍加以限制。 
模擬退火演算法[9]是一種機率攀登搜尋演算法（Probability Hill-Climbing Search 
Algorithms），如圖 2 所示，源自金屬退火的概念，結合了梯度搜尋法（Gradient 
Search）與隨機過程，先以搜尋空間內一個任意解開始，利用目標函數（Objective 
Function）評估其值，期望它往目標值最佳的狀態移動，每一步先選擇一個鄰近解，然後
再計算從現有位置到達鄰近解的機率。但同時也允許產生的新解能在某些機率條件下，可
以有機會往目標值較差的地方移動，此種機率條件搜尋乃提供模擬退火法具有跳脫局部最
佳值的能力，進而可以進行全域最佳化搜尋。 
主動控制(Active Control)不限制響應系統和驅動系統為同一類型的系統，使響應系
統之狀態變數和驅動系統之狀態變數達成同步狀態，可以將 CNNs 或 Lorenz 系統設計為驅
動系統、響應系統，基因演算法則可找出最佳 CNNs 模板參數以節省控制輸入之能量。 
 
5 
 
[7] D. Balya, B. Roska, T. Roska, and F. Werblin, “A CNN Framework for Modeling Parallel 
Processing in a Mammalian Retina,” International Journal of Circuit Theory and 
Applications, vol. 30, pp. 363-393, 2002. 
[8] J. H. Holland, “Adaptation in Natural and Artificial Systems,” Ann Arbor: The University of 
Michigan Press, 1975. 
[9] S. Kirkpatrick, C. D. Gelatt Jr., and M. P. Vecchi, “Optimization by Simulated Annealing,” 
Science, vol. 220, no. 4598, pp. 671-680, 1983. 
[10] B. Eckhardt and G. Ott, “Periodic Orbit Analysis of the Lorenz Attractor,” European 
Physical Journal B, vol. 93, pp. 259-266, 1994. 
[11] S. Sundar and A. A. Minai, “Synchronization of Randomly Multiplexed Chaotic Systems 
with Application to Communication,” Physics Review Letters, vol. 85, pp. 5456-5459, 
2000. 
[12] M. Feki, “An Adaptive Chaos Synchronization Scheme Applied to Secure Communication,” 
Chaos, Solitons & Fractals, vol. 18, pp. 141-148, 2003. 
[13] M. C. Ho and Y. C. Hung, “Synchronization of two Different Systems by Using Generalized 
Active Control ,” Physics Letters A, vol. 301, pp. 424-428, 2002. 
 
 
 
圖 1 遺傳演算法的步驟 
7 
 
圖3 系統之狀態變數達成同步狀態 
 
 
 
圖 4 邏輯合成圖 
 
 
圖 5 數位訊號輸出 
  
 
 STABILIZATION OF UNCERTAIN HOPFIELD NEURAL NETWORKS 
WITH DEAD-ZONE AND DISTURBANCE INPUT 
 
Chao-Jung Cheng                                             Chi-Bin Cheng 
Department of Information Engineering                        Department of Information Management 
Kun Shan University                                          Tamkang University 
Tainan 71003                                               Tamsui 25137 
Taiwan, R.O.C.                                             Taiwan, R.O.C. 
 E-mail: cjcheng@mail.ksu.edu.tw                              e-mail:cbcheng@mail.tku.edu.tw 
 
 
ABSTRACT 
This paper investigates the stabilization problem of 
uncertain Hopfield neural networks (HNNs) subject to 
dead-zone and disturbance input. Based on Lyapunov 
stability theory, a memoryless decentralized feedback 
controller is derived for guaranteeing global exponential 
stability of the system. The main results illustrate the 
derived control law does not impose restriction on the 
derivative of the time-varying delays of the uncertain 
HNNs with dead-zone and Gaussian noise input. A 
numerical example is given to justify the validity of the 
proposed control scheme. 
 
KEY WORDS 
Hopfield neural networks, Decentralize feedback control, 
Gaussian noise, Image processing  
 
1.  Introduction 
 
Hopfield neural networks (HNNs) have become a field 
of active research for their applications in modeling 
complex dynamics, image processing and nonlinear 
programming problems [1-2]. In order to obtain useful 
processed results, the network must reach a steady state 
which represents the processed array of data. Thus, the 
stability and existence of unique equilibrium point are 
prerequisite when HNNs are applied to image processing, 
signal processing, or nonlinear equations solution. 
However, chaotic behaviors sometimes produced by this 
kind of neural networks [3-4]. It has been known that a 
chaotic system is a nonlinear deterministic system with 
complex and unpredictable behavior. 
Based on Razumikhin techniques, the Lyapunov 
functionals and linear matrix inequality (LMI) 
formulation [5-8], several delay-independent and 
delay-dependent stability criteria for delayed neural 
networks have been proposed over the past years. HNNs 
are composed of many interconnected neurons, in which 
the weight coefficients can be implemented by resistance 
and capacitance elements which are likely subject to 
uncertainties. If the network’s parameters and time 
delays are not appropriately chosen [9], the bounded 
effect of deviation of network parameters and 
perturbations in HNNs can decline system performance. 
Previous control methods of uncertain nonlinear delayed 
systems mainly include linear matrix inequality (LMI) 
technique, Lyapunov functional, adaptive backstepping 
method [10] and adaptive control [11]. Among these 
controllers, adaptive backstepping controllers are 
relatively difficult to implement since it becomes 
complicated as system order increases. On the other hand, 
LMI-based centralized feedback controllers are only 
feasible if the coupling-states information is available. 
From the perspective of practical implementation, 
decentralized controllers are more useful since it uses 
only the local state rather than coupling-states 
information. 
In addition to dead-zone nonlinearity [12-13] 
happened in the input, the control input of practical 
system subject to disturbance may also degrade system 
performance. To facilitate the applications of HNNs, this 
study attempts to develop a decentralized feedback 
controller for stabilizing uncertain HNNs subject to 
dead-zone and disturbance input. Section 2 defines the 
problem of uncertain HNNs subject to dead-zone and 
disturbance input. In Section 3, a memoryless 
decentralized controller is designed to facilitate the 
hardware implementation. In Section 4, a numerical 
example is provided to demonstrate the validity of the 
proposed control scheme. Finally, a brief conclusion is 
given in Section 5.  
 
2.  Problem Formulation 
 
The uncertain delayed HNNs considered in this study 
can be described by the following differential equations: 








+−−−−= ∑∑
==
i
n
j
jjjij
n
j
jjijiii Jttxfbtxfatxctx
11
)))(((~))((~)(~)( τ&  
ni ,,1K=  (1)  
where 
ijijij aaa ∆+=~ , ijijij bbb ∆+=
~
 and iii ccc ∆+=~  
indicate the uncertainties among the neurons. The 
function )tanh()( xxf i =  describes the manner in which 
the neurons respond to each other for Hopfield neural 
networks. Assume that model (1) has an equilibrium 
point T
nxxx ][ **1* KK= . Let us define the control state as 
*)()( iii xtxtz −=  and the control state vector )(tZ  is of 
the form [ ]Tni tztztztztZ )(,),(,),(),()( 21 LL= . For physical 
limitations, a controller ))((~ tuiiφ  subject to dead-zone 
))(( tuiiφ and input disturbance iα∆  is designed to make 
model (1) globally exponential stable.  Therefore, Model (1) can be transformed into the compact form:  
  
 
( )
∑∑ ∑ ∑
∑
∑∑ ∑ ∑
∑∑ ∑ ∑
== = =
=
== = =
== = =
−







+++−≤
∆−
−







++−=
−







++−≤
n
i
ii
i
i
n
i
i
n
j
n
j
ijiiijiii
i
n
i i
i
n
i
ii
i
i
n
i
n
j
n
j
ijiiijiii
n
i
ii
i
i
n
i
n
j
n
j
ijiiijiii
tu
tz
tz
tzbLtzaL
tz
tz
tu
tz
tz
tzbLtzaL
tu
tz
tz
tzbLtzaLtV
11 1 1
max
**
1
11 1 1
max
**
11 1 1
max
**
))(()(
)()()()(
)(
)(
))(()(
)()()()(
))((~)(
)()()()(
φαδ
α
φδ
φδ&
                                             
                                             
(14) 
Let   
i
n
j
n
j
ijiiijiii tzbLtzaL αη ++= ∑ ∑
= =1 1
max
** )()(         (15)  
If the control input )(tui  is suitably designed as (6) with 
*
1
i
i βγ >
. When 0>iz , from Eqs. (3), (4) and (6), it is 
shown that 
+> ,ii uu  and 
( )2*2
,,
)())(()(
)())(()( iiiiiiii
i
i
iiiiii tutz
tz
tuuu ηγβηγβφηγφ ≥≥=− ++  
(16)   
Furthermore, when 0<iz , it is shown that +−< ,ii uu  and 
( )2*2
,,
)())(()(
)())(()( iiiiiiii
i
i
iiiiii tutz
tz
tuuu ηγβηγβφηγφ ≥≥=+
−+
  
(17)    
Eqs. (16) and (17) indicate that no matter what iz  is 
positive or negative: 








++=≥ ∑ ∑
= =
n
j
i
n
j
ijiiijiiiiiiiii
i
i tzbLtzaLtu
tz
tz
1 1
max
**** )()( ))(()(
)(
αγβηγβφ
 
 (18) 
Substituting (18) into (14) yields: 
( )
)()()(min)(
)()()1()(
111
1 1 1
max
***
1
tVtztz
tzbLtzaLtztV
n
i
ii
ni
n
i
ii
n
i
n
j
i
n
j
ijiiijiiii
n
i
ii
λδδ
αγβδ
−=





−≤−≤








++−−−≤
∑∑
∑ ∑ ∑∑
=
≤≤
=
= = ==
&
                                          (19) 
where ( ) 0min
1
>=
≤≤ ini
δλ . According to Lyapunov theory, the 
last inequality ( )  )(tVtV λ−≤&  indicates )(tV  converges 
to zero exponentially and we can conclude that )(tzi  
globally converges to zero with an exponential 
convergence rate λ  [14], i.e.  t
i
s
i sztz
λ
τ
ρ −
≤≤−
≤ exp)(max)(
0*
 
is satisfied for all 0≥t . This completes the proof. 
Remark 1: The controller in (6) applies a discontinuous 
control law and hence chattering is unavoidable. To 
eliminate this chattering, the controller can be modified 
by a sufficiently small positive constant. From the 
previous study [14], the solution of system (2) can be 
made arbitrarily close to the solution of system (2) with 
(6) by adding a sufficiently small value ε  in the 
denominator of (6). 
 
4.  Numerical Example 
 
Consider the uncertain HNNs with time varying delay as 
follows:  
 
∑∑
==
−++−=
2
1
2
1
)))(((~))((~)(~)(
j
jjjij
j
jjijiii ttxfbtxfatxctx τ&
 
2,1=i   (20) 
where 1~ == ii cc , ( ) 222 sin04.08.11.0
208.1)~( ItaA ij +





== ×
, 
( ) 222 sin04.04.11.0
1.04.1)~( ItbB ij +





−
−
== ×
 and 
2I  is a 22 ×  
identity matrix such that 
ija , ijb  and ija , ijb  can be 
determined based on assumption (A1). )tanh()( xxf i =  
satisfies assumption (A3) with 121 == LL . The delays 
t
ett −−== 1)()( 21 ττ  are time-varying and 
satisfy *1)(0 jj t ττ =≤≤ , *1)(0 jj rt =≤≤ τ& , 2,1=j . Fig. 2 
shows the 
21 xx −  graph with the initial condition 
[ ]T1.01.0 . System (20) is chaotic and the criterion 
derived from LMI method in [15] cannot be directly 
applied. Thus the control scheme proposed in the paper 
is employed. Assume the control input with dead-zone is 
defined as: 






−=−<−+
=≤≤−=−
=>+−
=
−−
+−
++
5.0))),(cos(1.05.0)((
4.05.0,0
4.0))),(sin(2.07.0)((
)(
,,
,,
,,
iiiii
iii
iiiii
ii
uutuuu
uuu
uutuuu
uφ
 (21) 
with 2,1=i . From Eqs. (5) and (7), 5.0
,2,1 == ++ ββ , 
4.0
,2,1 == −− ββ  and 4.0),min( ,,* == −+ iii βββ , 2,1=i  can 
be obtained. In addition, assume )(3.021 tG=∆=∆ αα . 
)(tG  is a Gaussian random input noise with mean zero 
and variance 1 as shown in Fig. 3. From Eq. (5), 
1α  and 
2α  are assumed as 1. According to Theorem 1, if the 
control function (21) is applied to stabilize system (20), 
the controller can be designed as: 
 








<−
+







++
=
>+
+







++
=
−
= =
+
= =
∑ ∑
∑ ∑
0,)(
)()()(
0,0
0,)(
)()()(
)(
1,1
1
1
2
1
1
2
1
max1
*
111
*
111
1
1,1
1
1
2
1
1
2
1
max1
*
111
*
111
1
zu
tz
tz
tzbLtzaL
z
zu
tz
tz
tzbLtzaL
tu
j j
jj
j j
jj
ε
αγ
ε
αγ
                                                            
(22) 
  








<−
+







++
=
>+
+







++
=
−
= =
+
= =
∑ ∑
∑ ∑
0,)(
)()()(
0,0
0,)(
)()()(
)(
2,2
2
2
2
1
2
2
1
max2
*
222
*
222
2
2,2
2
2
2
1
2
2
1
max2
*
222
*
222
2
zu
tz
tz
tzbLtzaL
z
zu
tz
tz
tzbLtzaL
tu
j j
jj
j j
jj
ε
αγ
ε
αγ
    
(23) 
where 5.21
*
1
1 =≥ βγ
 and 5.21
*
2
2 =≥ βγ
 by choosing 
5.221 == γγ . Using MATLAB software and the 
fourth-order Runge-Kutta method with a fixed step 0.001, 
Fig. 4 illustrates the corresponding trajectories of the 
control states, and Fig. 5 shows the continuous control 
inputs )(1 tu  and )(2 tu , respectively.  
 
5.  Conclusion 
 
The study has developed a memoryless decentralized 
  
 
0 0.5 1 1.5 2 2.5 3
-0.5
0
0.5
1
1.5
Time(sec)
z
1(t
)
0 0.5 1 1.5 2 2.5 3
-0.2
0
0.2
0.4
0.6
Time(sec)
z
2(t
)
 
Fig. 4. The trajectories of the control states 
1z  and 2z . 
0 0.5 1 1.5 2 2.5 3
-5
0
5
10
15
Time(sec)
u
1(t
)
0 0.5 1 1.5 2 2.5 3
-10
0
10
20
30
Time(sec)
u
2(t
)
 
Fig. 5. Time responses of the control inputs 
1u  and 2u . 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
