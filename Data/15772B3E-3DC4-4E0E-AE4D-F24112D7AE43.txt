I摘要
近年來，利用網際網路來傳送資訊的遠程操作系統應用逐漸增加。相對於專屬線路，網際
網路連線可以有效降低設置成本，並可提供彈性且大幅度的遙控距離。同時由於操作者和
機器人之間不再由專屬線路連結，因此兩者之間由一對一的對應關係轉變為更富彈性的多
對多。然而網際網路的變動傳輸延遲造成即時遠程操作系統必須面對不同性質且不同延遲
資訊的同步與顯示問題。另一方面，分散式虛擬環境由於其系統架構及目的，因此同樣面
對變動傳輸延遲之即時同步顯示問題。由於分散式虛擬環境領域已提出數個較成熟的方
法，本計畫擬修改現有之分散式虛擬環境同步機制以套用於即時遠程操作系統，預計將可
大幅改進即時遠程操作系統在網路傳輸議題上的成熟度。本計劃的主要貢獻將在於各種同
步機制的併用與修改後的同步機制如何以預測顯示技術回饋給操作者等議題上。
本計畫成功實作local lag, PHBDR與delay decorator三項技術，並實際應用於網路遙控機器
人系統上。文獻提及之local lag為處理各自獨立之事件所開發出來的技術，然而由於各種感
測器的回饋資訊為連續的資料流，因此我們自行開發出計算平均延遲的方式來實作。
Abstract
It ‘s been observed that teleoperation systems have started to switch their proprietary
communication channel to local network or Internet in recent years. Internet provides low cost,
flexible and long-range communication, yet the property of network also changes the relationship
between operator site and teleoperator site from one-to-one mapping to much flexible
more-to-more mapping. However, network jitter also changes traditional fixed transmission delay
unto intractable variant time delay. Since there are usually more than one kind of feedback
information in teleoperation, we need to synchronize all kind of information to provide a
consistent interface, with which the time delay becomes larger even in real-time teleoperation
systems. On the other hand, distributed virtual environment systems already faced similar
problem since they are born, and several sophisticated approaches could be found in literature to
compensate the problem of variant time delay. In this proposal we plan to modify current
synchronization mechanisms of distributed virtual environment field and apply them to real-time
teleoperation systems. It ‘s been expected that much matured network transmission technologies
would be developed for real-time teleoperation systems. The main contribution of this proposal
would be on the issues of how to combining several synchronization and how to present synthetic
feedback with predictive display technology.
中文關鍵詞: 行動機器人、遠端遙控、預測顯示、人機介面
Keyword: mobile robot, teleoperation, PHBDR, local lag, delay decorator, predictive display
21.3.2 Local Lag
傳統分散式同步架構的事件訊息處理方式是當目的端接收到事件訊息時，就馬上執行
該事件[4]。由於各參與者的事件訊息的網路傳遞延遲各自不同，所以事件在各參與者
電腦上被執行的時間也各不相同，在這種狀況下而產生的時間差很容易造成資料的衝
突與狀態的不一致。local lag[5]方法是改變傳統的事件訊息處理方式，當目的端接收到
事件訊息時，並不馬上執行該事件，反而將事件被執行的時間再往後延遲一段時間，
儘量讓該事件在所有參與者電腦上執行的時間相同。這個方法的流程以下圖例：
圖一 本地端延遲運作示意圖
其中，工作環境中的三個參與者分別為參與者0、1、2。Oa 為參與者1 所觸發的事件。
T1 表示 Oa 發生的時間，T0 表示參與者0 收到事件訊息的時間，T2 表示參與者2 收
到事件訊息的時間。Ts 表示 Oa 在各參與者電腦被執行的時間。
1.3.3 Dead Reckoning
Dead reckoning 技術是分散式虛擬環境中維持參與者彼此狀態同步的一個關鍵方法。
其原理為紀錄每個其它參與者與物體的現有狀態，並在新的狀態更新封包未到達前利
用其現有狀態預測其他參與者與物體的動向。更進一步則當每個參與者的行為模式並
沒有大幅變更前(亦即誤差未超過門檻值)，本地主機並不需要將更新封包傳送給其他
主機，如此在大人數的系統中可以有效降低網路的流量。Dead reckoning 基本上用於
虛擬環境內其他參與者模型(avator)與物體運動的方向與軌跡的預測，其過程可分成預
測(prediction)與收斂(Convergence) 兩個部分，且各自有一次及二次預測的多項式。而
PHBDR 僅根據最近數個更新封包所在的位置來預測物體的下一個可能位置，同時基
於物件的移動行為，使用不同的預測演算法(Tracking Algorithm)來預測物件的移動軌
跡，並計算最近收到的三個位置更新所形成的角度，稱為 Angle of Embrace，且由角
度的大小來決定使用哪一個預測演算法。
1.3.4 Delay decorator
由於網路的速度再快，網路傳遞延遲還是不可避免的。若反向思考，既然不能避免，
那不如就把網路延遲突顯出來，讓參與者藉由了解目前網路的狀況，進而判斷目前工
作環境的狀態，減少因為網路延遲作出錯誤的判斷。這個方法稱為delay decorator，使
用隱喻(metaphor)提示參與者目前的網路的狀態。
4Canon VC-C4 PTZ 攝影機下旋轉到哪個角度的動作，而 server 端也會回傳目前
Canon VC-C4 PTZ 攝影機所在位置的封包資訊給 client 端。
1.4.2. 軟體
發展目標在整合 Activmedia Pioneer 3 以及 Canon VC-C4 PTZ 攝影機的控制介
面，而影像部分則是利用 Microsoft 內建的 NetMeeting 作傳輸的功能，讓操作者
可經由 NetMeeting 的影像，並利用我們建置的軟體做操控 Activmedia Pioneer 3 以
及 Canon VC-C4 PTZ 攝影機的動作。
1.4.2.1. 已建置內容
在 Activmedia Pioneer 3 的操控部份，我們利用鍵盤來做控制，採用 Microsoft
DirectInput 的技術，Microsoft DirectInput 是一個輸入設備的 API，其中就包括了滑
鼠、鍵盤以及搖桿等設備。而在 Canon VC-C4 PTZ 攝影機的操控部分，則是讓操
作者直接利用滑鼠在我們設計的 GUI 上面做 Click 的動作，讓 Canon VC-C4 PTZ
攝影機轉向。
1.4.2.2. 如何建置
DirectX 是 Microsoft 在 Windows 平台上提供發展高性能圖形、聲音、輸入、輸出
以及網路遊戲的一套 API，透過 DirectX API 所提供的介面，開發人員可以盡情地
使用硬體可能帶來的高性能，而無需關心硬體的實際執行細節。此外， DirectX 採
用了 COM（Component Object Model）標準，使得開發 DirectX 的程式就如同開發
軟體 IC 般具有動態替換程式模組元件的能力，同時用戶端程式與 COM 元件之間
的溝通也能遵循共同的合作標準。
本系統 Activmedia Pioneer 3 的操作部份主要採用 Microsoft 的 DirectInput 技
術，DirectInput 為 DirectX 下專為 Windows 平台上專為搖桿、頭盔、多鍵鼠標以
及力回饋設備等各種輸入設備提供了最先進的接口，除了支持 Microsoft Win32 API
不支援的設備服務外，且通過直接與設備驅動程序配合，DirectInput 繞過了
Windows 消息系統，提供了最佳性能。
在 Activmedia Pioneer 3 方面，我們利用 DirectInput 的技術，設定幾個鍵去控制
Activmedia Pioneer 3 的前後左右等動作，在速度設定方面，前進以及後退的速度皆
設為 50 deg/sec，而左右轉的速度設為 35 deg/sec，控制部份我們有多增設了滑鼠控
制以及搖桿控制，但基本上是利用鍵盤做操控。
我們另外增加了原本就安裝在 Activmedia Pioneer 3 上面的聲納功能(16 個)，利用數
字及圖形的顯示，能夠讓操作者了解到目前 Activmedia Pioneer 3 的行車狀況，也
就是說是否太接近障礙物等，聲納的跳動值是從 0至 3000，而值越小代表越靠近障
礙物。而在 Canon VC-C4 PTZ 攝影機操控方面，我們建置了 server 端以及 client
端，其中 server 端建置在跟 Canon VC-C4 PTZ 攝影機連接的 Asus S200N
notebook 上，為負責接收 client 端傳過來的封包，而解譯了此封包後，知道操作
者需要 Canon VC-C4 PTZ 攝影機轉到哪個角度，再傳送命令給 Canon VC-C4 PTZ
攝影機，server 端的另一個工作則是去跟 Canon VC-C4 PTZ 攝影機要其目前鏡頭
位置，再傳送封包給 client 端，而 client 端的工作即是把操作者在 GUI 上控制鏡
6表二 影像實驗數值
次數 時間差(ms)
1 1368
2 1569
3 1429
4 1329
5 1388
而最後的封包傳遞部份，利用 GetTickCount 函式去計算所需時間，總共測試了 25
次，平均為 667ms。
表三 封包實驗數值
回合 1 2 3 4 5 小計
R1 711 651 721 681 641 681
R2 621 681 690 631 711 667
R3 691 621 711 651 651 665
R4 721 611 620 671 611 647
R5 620 711 621 701 711 673
經由上面的幾個實驗，可得到以下的資訊：
表四 各類實驗數值平均
種類 時間(ms)
聲納 141
影像 1417
封包 667
所以我們延後聲納更新值的時間，延後 1276(1417-141)ms，而封包傳遞部分延後
750(1417-667)ms，以達到三種回饋訊號的同步。
由於機器人本身在執行操作者指令時必定會產生 motion lag，而感測器回饋透過機
器人傳回時也會有指令處理時間，因此無法產生連續性的回饋。我們擬透過 PHBDR
方法將 motion lag 連同網路延遲的時間一同補償，並將預測路徑以高更新率來達到
平順的回饋。所以在實作 PHBDR 部分，顯示在我們設計的 GUI 上會有兩種顏色
的點，白點表示目前 Canon VC-C4 PTZ 攝影機的位置，紅點表示經由 PHBDR 所
預測出來 Canon VC-C4 PTZ 攝影機的軌跡，在預測軌跡實作部分參考了 Singhal
於 1994 年提出了以歷史位置為基礎的推測方法(暫譯，Position History-Based Dead
Reckoning，PHBDR)[6]。
網路的速度再快，網路傳遞延遲還是不可避免的。若反向思考，既然不能避免，那
不如就把網路延遲突顯出來，讓參與者藉由了解目前網路的狀況，進而判斷目前工
作環境的狀態，減少因為網路延遲作出錯誤的判斷。這個方法稱為 delay decorator，
使用隱喻(metaphor)提示參與者目前的網路狀態，實作部份，我們設置了一個門檻
8and Automation, 1990.
[3]W. C. Teng, D. Sekiguchi, Y. Yanagida, N. Kawagami, and S. Tachi, "Development of
R-Cubed Manipulation Language (11th report) - Implementation of Predictive Display
Function -," Proceeding of the Virtual Reality Society of Japan 6th Annual Conference, Jun.
2001.
[4]L. Lamport, “Time, clocks, and the ordering of events in a distributed system,”
Communications of the ACM, 21(7), 1978.
[5]M. Mauve, “Consistency in Replicated Continuous Interactive Media,”ACM CSCW,
pp.181-190, Dec. 2000.
[6]S. Singhal, D. Cheriton, “Using a Position History-Based Protocol for Distributed Object
Visualization”, Technical Report, Stanford University, Department of Computer Science,
CS-TR-94-1505, Feb 1994.
3. 計畫成果自評
本計畫成功實作 local lag, PHBDR 與 delay decorator 三項技術，並實際應用於網路
遙控機器人系統上。文獻提及之 local lag 為處理各自獨立之事件所開發出來的技術，
然而由於各種感測器的回饋資訊為連續的資料流，因此我們自行開發出計算平均延
遲的方式來實作。
由於本計劃執行期限僅一年，因此在系統完成之際，尚未能蒐集足夠的實驗數據來
發表論文，是應檢討之處。然而，就目前的實驗數據顯示，開啟 local lag 及 delay
decorator 均可以有效縮短操作時間，PHBDR 則因人而異，部分受測者完全不理會該
技術的輔助輸出，因此對這部份的受測者沒有任何效果。其他受測者則略為縮短操
作時間。有關詳細的實驗過程與數據分析，擬待之後整理論文時詳述之。
2班機緣故，16 日才搭機回國。
表一 會議程序表
二、與會心得
以下從報告人參加的 session 中，擇其重要及報告人感興趣的論文簡要報告發表內
容如下。
1. Harmony Search Algorithm for Solving Sudoku (from session GT08:
Miscellaneous Intelligent Algorithm)
自從 Zong Woo Geem 教授於 2001 年提出 Harmony Search algorithm (簡稱 HS)後，
他不斷開發這種新的求最佳解演算法在各種應用上。這次的論文則把 HS 用在近年風
行的數獨遊戲上。比起其他已提出的解數獨演算法，HS 在相對短的時間即可解盤。
然而，雖然 HS 號稱比起其他演化演算法(evolutionary algorithm)更不容易陷在區
域最佳解(local optima)，但是當數獨盤上的數字僅剩 26個(最少的可解盤是 17個)
時，HS 仍然發生陷入區域最佳解而無法解盤的情形。作者認為這是因為 penalty
function 等條件式並未完美搭配數獨定義所致，因此後續改進空間仍然存在。
A Gait Based Approach to Detect Directional Bias of
Four-Legged Robots' Direct Walking Utilizing
Acceleration Sensors
Ding-Jie Huang, Wei-Chung Teng
National Taiwan University of Science and Technology,
43 Keelung Rd. Sec. 4, Taipei 10607, Taiwan
{M9315048, weichung}@mail.ntust.edu.tw
Abstract. In this paper, we propose an effective approach to detect the
directional bias of walking four-legged robots. We found that light weight
four-legged robots tend to have unstable directional bias even when walking on
flat ground, thus this approach is designed to be able to dynamically and
continuously detect the directional bias. By observing and analyzing data from
acceleration sensors of AIBO robots, we found the relational model between the
acceleration data and the walking gaits by which we may utilize to develop an
ideal gait based approach to detect directional bias. In order to make sure the
correctness of our approach, several experiments were designed and executed.
As a result, we can correctly detect the direction of bias within five gaits, and
the correct rate of single gait can be up to 90%.
Keywords: four-legged robot, gait, directional bias, accelerometer
1 Introduction
In recent years we found more and more robots designed to be sold as household
products. One famous example is AIBO robot. The AIBO robot is designed to be light
weighted and to be soled plastic hemisphere on its feet such that it doesn’t scratch the
walking plane. However, this design also makes the robot not able to step firmly, and
thus produces directional bias even when walking straight on flat ground. Since the
directional bias of some robots is obvious, and the directional bias accumulates as
long as the robot is walking, we started trying to develop an algorithm to
automatically detect and correct the walking directional bias.
The observed directional bias during walking varies for each step, and
the ranges of bias may be quite different between two AIBO robots,
thus the detection algorithm should be based on sensor’s feedback, and
be able to dynamically detect the directional bias. The most popular
sensors used to detect the heading direction are video camera,
A Gait Based Approach to Detect Directional Bias of Four-Legged Robots' Direct Walking
Utilizing Acceleration Sensors 6
6
100,000 CMOS image sensor
1.2 Related Works
H. Liu and G. Pang had proposed that the position of the robot can be detected by
using acceleration sensors [7]. So if the position is known, then the direction bias is
easy to be computed. D. Vail and M. Veloso have used acceleration data from AIBO
to identify the surface under the robot as it walks[3]. In addition, they also used the
acceleration data to predict gait velocity by using a k-nearest neighbor approach. In
order to find out the directional bias, walking distance is a good starting point. Seong
Yun Cho et al [10] described how to use low-cost acceleration sensors to measure the
system of walking distance. Some previous research showed that the acceleration
sensors were very shaky, so it is too hard to calculate the speed or traveled distance of
the dog [12]. Fortunately, it is practicable to determent the relation between actual
walking and acceleration by analyzing and observing the walking robot, because
acceleration has some particular characteristics which would be affected by walking
condition.
2 The Algorithm to Detect Directional Bias
As has been noted above, the integrated data are different from the real distance.
Maybe the original data is the critical issue. Consider the characteristic of each
acceleration sensor data, a series of study was designed to check the validity of the
data. So, the flowchart of the main research method appears in Fig.1. For the first
step, we want to confirm the reliability of three-axial acceleration sensors by using
Matlab software package, so a simple test was designed. Then we analyze each axis
acceleration data and find out the relation between them. Finally we summarize the
result and propose our method to detect directional bias.
A Gait Based Approach to Detect Directional Bias of Four-Legged Robots' Direct Walking
Utilizing Acceleration Sensors 8
8
(a)
(b) (c)
Fig. 2. Each axis acceleration data during 5 gait cycles measured 20 times: (a) X-axis (b)
Y-axis (c) Z-axis
2.1 The Characteristics of Acceleration Sensor
After confirmed the reliability of three-axial acceleration sensor on AIBO, we started
to analyze each axis. For the first step, we analyze Y-axis acceleration data by
integrating the acceleration twice directly. As mentioned above, the integrated data
are far from the real distance measured manually. So we consider that there must be
some kinds of factors that affect the Y-axis acceleration data. So far we can not
compute the distance directly by using acceleration data, but the real distance has
particular relation with the acceleration data. As the result of observation, we think
that the vibration and the axial bias may be the main factors that cause the difference
between integrated data and the real distance. It seems that the factors appear when
AIBO change its own gait. It is because AIBO is on unstable state when it change
gait. For example, the vibration occurs in the moment that the left front leg is raising
up and the left back leg is putting down. The vibration causes the axial bias and a
A Gait Based Approach to Detect Directional Bias of Four-Legged Robots' Direct Walking
Utilizing Acceleration Sensors 10
10
Fig. 3. Z-axis acceleration data during 5 gait cycles compare with each leg phases
Besides, from Fig.3 we can figure out that AIBO starts its gait in the
order of right front, left back, left front and right back. This gait [8][9]
is shown in Fig.4 and is the same with the notion that Hirose and
Kunieda proposed [6]. Via observing walking AIBO, we find that its
walking direction is straight when it raising right front leg. When it is
putting right front leg down and raising left back leg up, it gets the most
right position during a single gait. Then it raises left front leg and its
walking direction is left forward. Eventually when it is putting left front
leg down and raising right back leg up, it gets the most left position
during a single gait.
Fig. 4. Start gait order of the robot with direction
In the third part, we want to know at what frame the vibrations start.
We start to analyze X-axis acceleration comparing with the trajectory of
AIBO. As Fig.5 shown, the gap between dotted lines is the distance
during one single gait cycle. The arrows point out the most right
positions or the most left positions. We assume the velocity is 0 when
AIBO reach the most right positions or the most left positions. It is
because that the instant velocity should be 0 at the point when the robot
changes its direction. So we can integrate data from the next arrow
partially.
2.2 Bias Detection Algorithm
As has been discussed, it seems reasonable to believe the acceleration sensors on
AIBO are useful in some degree of accuracy. But we find that AIBO vibrate largely at
some fixed time point, so it is important to take out the acceleration data while left leg
or right leg in the swing phase individually. As Fig.6 has shown, by observing the
phase of each leg we decided to collect data from 23th frame to 63th frame which
represented the acceleration data that the right front leg in the swing phases. In
A Gait Based Approach to Detect Directional Bias of Four-Legged Robots' Direct Walking
Utilizing Acceleration Sensors 12
12
exp8 -0.5 0.4 -0.05 6.40316 -0.49071 -2.24087
exp9 -0.3 0.2 -0.05 17.49574 -0.83063 -1.24536
exp10 -1.2 0.6 -0.3 9.290792 -1.34884 -4.4749
4 Conclusion
We have proposed an effective approach to detect the directional bias of walking
four-legged robots by using acceleration data. It is because that sensor on AIBO has
poor precision, so during the process of acceleration analysis we must compare the
actual walking gait with acceleration data. We adjust our algorithm by the
try-and-error method continuously, and with lots of attempts the relation between
them had been found out. Besides, the maximum bias relative to center position of
AIBO in one gait cycle is ±0.6cm, but the factor error is up to ±5.443cm so that we
can not precisely get the actual bias. Although there are many possible factors to the
directional bias, such as material and gradient of ground, lack of calibration, hardware
malfunction, etc…, but the proposed algorithm is considered effective to all kinds of
situation as long as the accelerometers function correctly.
Acknowledgements. This work is supported by the National Science Council of the
Republic of China, under the grant NSC 95-2221-E-011-127.
References
1. Anton Wijbenga ,Mart van de Sanden ,“How To Make AIBO Do Tricks”, University of
Groningen,Netherlands,2004.
2. Bernhard Hengst,Darren Ibbotson,Son Bao Pham,Claude Sammut “The UNSW United
2000 Sony Legged Robot Software System” , University of New South Wales，
Australia,2000
3. Douglas Vail ,Manuela Veloso, “Learning from Accelerometer Data on a Legged Robot”, 
Computer Science Department,Carnegie Mellon University,2004.
4. Franois Serra, Jean-Christophe Bailie,“Aibo programming Using OPEN-R SDK. Tutorial",
ENSTA, France ,2003.
5. Francisco Martín Rico, Rafaela González-Careaga, Jose María Canas Plaza,Vicente Matellán
Olivera,“Programming Model Based on Concurent Objects for the AIBO Robot”, 
Universidad Rey Juan Carlos, 2004.
6.George A. Bekey, “Autonomous Robots From Biological Inspiration fo Implementation and
Control”,The MIT Press , Cambridge, Massachusets, London, England,2005.
7. H. Liu, G. Pang, “Accelerometer for Mobile Robot Positioning,” Proc. Of the 1999 IEEE
Industry Applications Society Conference, Oct 3~7, 1999.
8.J. P. Schmiedeler, K. J. Waldron, “The Mechanics of Quadrupedal Galoping and the Future 
of Legged Vehicles”, The International Journal of Robotics Research, Dec 1999, ,Vol.18, 
No.12 pp.1224-1234
