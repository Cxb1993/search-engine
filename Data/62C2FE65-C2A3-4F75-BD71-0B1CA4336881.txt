 I
 
摘  要 
 
本計畫提出一個基於色彩理論並可用於戶外之行動無線感測網路定位技術(CDL) [1]，
以改進現有定位方法。之後我們進一步將定位方法與路由方法(CEER)（原子計畫二主題）做
整合[14]。由於廣播技術影響定位及路由之效能至鉅，我們也提出了一個有效的廣播技術
(ABB)[13]。CDL以RGB色彩值作為指紋資料，這是一個創新的方法。此簡化的指紋資料可提
高定位的精確度，並節省定位計算所需的能源消耗。每個基地台有獨一的RGB值，而任一節
點可匯整多個基地台之RGB資料，以訂出自己的RGB值，並將之送至定位資料庫比對，以產生
此節點的位置資訊。模擬評估結果顯示，本計劃與另一動態定位技術MCL[21]相較，以感測
距離半徑R為單位，本技術之誤差率較MCL減少0.2至0.3R，尤其是在參考點不足的情況下，
本技術更是勝於MCL。再進一步考量到感測節點的能源是有限的，我們於是提出一個基於能
源節約的有效叢集式路由方法(CEER)[14]來延長感測節點的使用壽命。CEER是以CDL為基
礎，所以能讓路由方法與定位方法做有效的整合。CEER每個錨節點會廣播自己的RGB值及位
置資訊到每個感測節點，包括叢集頭。每個感測節點會週期性的把感測資料(如果有的話)及
其RGB值資訊傳送到對應的叢集頭。接下來叢集頭會比較叢集成員中的RGB值以選擇一些更接
近錨節點的感測節點當作下一個可能的跳躍點。本方法的獨特性在於藉由比較鄰近節點對應
的RGB資訊，可以找到一條考量到能源的有效路由。模擬的結果顯示，與另一個的路由方法
ESDSR[2]相比，CEER的平均能源節約比ESDSR好約50-60%。另外，CEER的平均封包傳送時間
比ESDSR少約50%。另外，相較於CDL是集中式的定位方法，本計畫亦研發了一個分散式之定
位方法(DRL) [12]。DRL將DV-hop定位法做改良，使得定位更精準且更加省電。DRL將定位資
訊之氾濫量加以限制，以降低廣播氾濫所造成的網路與能源負荷，且同時維持良好之定位準
確度。除此之外，DRL能因應局部節點分佈狀況來做定位，使定位更加精準。最後，在廣播
技 術 的 改 進 方 面 ， 我 們 提 出 ABB 方 法 [13] ， 可 節 省 重 複 廣 播 以 及 改 進 抵 達 率
(reachability)。  
 
關鍵詞：基於色彩理論的動態定位技術，叢集，行動無線感測網路，路由方法，廣播技術。 
 
 III
目  錄 
摘  要 ......................................................... I 
Abstract ...................................................... II 
目  錄 ....................................................... III 
報告內容 ....................................................... 1 
一、 前言與目的 .................................................... 1 
二、 文獻探討 ...................................................... 1 
三、 研究方法 ...................................................... 3 
四、 討論與結論 .................................................... 7 
參考文獻 ....................................................... 9 
圖表 .......................................................... 12 
計畫成果自評 .................................................. 20 
可供推廣之研發成果資料表 I..................................... 22 
供推廣之研發成果資料表 II...................................... 24 
供推廣之研發成果資料表 III..................................... 26 
供推廣之研發成果資料表 IV...................................... 29 
附件 .......................................................... 32 
 2
本計畫對於集中式與分散式定位系統，皆分別加以研發。由於社區照護系統本身需要中
控，以便掌握所有受照護者（節點）之生理資訊，因此我們以集中式定位系統之探討研發為
主，並且成功地與路由技術整合。至於集中式定位系統，我們是利用指紋技術與 range-
free 觀念，設計一個可以用於室外動態環境下之定位系統[1]。而在所提分散式定位系統
[12]中，不需要集中的伺服器，且我們改進了一般 range-free 方法中常伴隨的資訊氾濫問
題，以避免造成網路負荷及能源耗損。最後，在一個無線網路環境中，我們需考慮與定位準
確性相關的幾個重要參數，包括 seed placement、seed density 及 node density 等；與
路由相關的，包括能源消耗率、封包傳送時間及節點存活數。本計畫經由模擬得到顯著的定
位精確度與能源節省率之改善。 
 
乙、整合路由技術 
 
感測節點將感應到週遭環境的資訊傳送回伺服器。而傳送感測資料的路由方法，對於每
個感測節點的能源消耗有很大的影響，因此能源節省率是路由技術的一個重要課題。使用在
無線感測網路上的路由有一些挑戰。第一，因為它無法建立整體網路的路由，所以很難為每
一個節點制定一個固定的路由路徑。第二，由於感測節點本身資源包括記憶體、處理器計算
能力、儲存能力這些方面的限制，我們需要用比較有效的方法去增長整體無線感測網路的壽
命。 
使用在無線感測網路下的路由演算法由於不同的特性可以區分為平面式路由方法、階層
路由方法、地域型路由方法及根源路由方法。平面式路由方法是當一個節點在自己的通訊範
圍之內發出資料需求的時候，有這個資料的鄰節點就會把檔案傳給有需求的節點，例如
[4]。階層路由方法是在地區上建立一個階層式拓撲。為了減少傳輸資訊到基地台，各個叢
集頭會收集資料並且把資料壓縮再傳送出去，例如[5]。地域型路由方法是利用鄰節點的位
置當作判斷下一個傳輸的節點，並循環這個動作直到終點，例如[6]。根源路由方法顧名思
義就是由根節點決定路由的路徑，每個路由的跳點(next hop)都是由根節點決定，例如
[2]、[7]。 
由於社區照護系統本身需要中控所有受照護者之節點資訊，而每個節點都需要定位與路
由資訊，因此這兩部分可加以有效的整合。基於本計畫之定位系統，再選取路由時，可以採
地域型路由的方式，並利用節點的位置資訊，以期得到一個可以連通至錨節點而又省電的路
徑。 
 
丙、廣播技術之改良 
 
不論是定位或決定路由，廣播是一個必要的功能，然而傳統的氾濫(flooding)方式會造
成多餘的重複傳輸(redundant retransmissions)、競爭(contention)及碰撞(collision)等
浪費。可行的作法是每個節點接到一個廣播封包時，它先判斷是否要繼續廣播出去，而非只
要接到廣播就得接著廣播出去。常見的作法是，節點之間的距離會換算為 Directional 
Assessment Delay (DAD)，DAD 與距離成反比關係。當一個節點收到一個廣播封包，它會等
待一段長度為 DAD 的延遲時間，在這段時間中以有效機制決定是否取消廣播，若超過了這時
 4
的 one-hop 平均長度更加精確，因此定位可以更精確。如圖（二），灰色的區域是位於圓中
心之感測點選擇其 next hop 最好的落點區域。一般來說，此感測點會選擇大於二分之一感
測距離半徑(r) 作為其 next hop 的選擇，如圖（二）(a)。如果第一次 next hop 的選擇小
於 1/2 r，那麼再下一次 next hop 所選擇的感測點要大於 1/2 r，如圖（二） (b)，否則
就會像圖（二） (c)一樣。因此我們可以算出從圓中心到灰色區域的距離期望值為(7/9)r，
也就是說以期望值的觀點來看，平均 one-hop (相鄰的兩個節點間)的距離為感測距離半徑
的九分之七。詳細推導過程如下： 
P{x = points in gray area} 
 = 
2
4
3
2
r
x
π
π  =
23
8
r
x , rxr ≤≤5.0  
E[x]= ∫ ⋅=⋅r 0.5 area}gray in  points  P{r dxxx  = r97  
 
乙、基於色彩理論與能源節約的叢集式路由方法(CEER: Color-theory-based Energy 
Efficient Routing Algorithm) [14][23] 
 
我們提出一個基於 CDL 的路由方法，藉以達到省電效果: 
z 藉由比較鄰近節點對應的 RGB 值資訊，可以找到一條考量到能源的路由。 
z 由於傳輸的次數減少，能減少感測點的能源消耗，而增長其運作時間。 
這個演算法共分為三個階段，第一個階段為準備階段，第二個階段為資料傳輸階段及第三階
段為改進階段。在第一階段：第一、我們使用感測節點的傳輸半徑當作每個格子的邊長，所
有在那個格子裡面的節點都會處於該叢集頭的傳輸半徑內。第二、每個錨節點傳輸自己的
RGB 值資訊和平均跳點距離給這個地區上面的每個感測節點，使每個節點可以藉由這些資訊
計算出自己本身的 RGB 值。當伺服器接收到每個感測節點的 RGB 值資訊後，藉由搜尋位置資
料庫可以找到每個感測節點的位置。伺服器再把最接近每個格子中心點的感測節點作為那個
格子一開始的叢集頭。最後，伺服器使用最接近各個叢集頭的錨節點傳送資訊給感測節點，
使感測節點了解自己是叢集頭。 
 第二階段，當有資料要傳輸的時候，感測節點會把資料傳送到自己相對應的叢集頭。此
時叢集頭設定一個時間等待別的感測節點傳送來的資料。這樣的好處是可以減少傳輸的量。
當叢集頭要把資料傳送給伺服器的時候，叢集頭會利用兩個步驟經由錨節點傳送到伺服器。
步驟一是它會比較叢集成員中的 RGB 值，以選擇一些更接近錨節點的感測節點當作下一個可
能的跳躍點。步驟二是叢集頭會在那些被選中的叢集成員中找尋具最大能源的感測節點當作
下一個跳躍點。 
 第三階段則是考量到系統修正的部分。有很多種情況會讓叢集頭無法傳送或接收資料，
例如叢集頭移動到別的位置使得相對應的感測節點無法傳送資料到叢集頭，或者是叢集頭的
能源不足，以至於無法傳送資料。這時候我們就必須要讓別的感測節點當叢集頭。可是如果
太常改變叢集頭也會使得能源消耗的情形變的很嚴重。由於伺服器了解地區上的每一個感測
節點的位置、能源及速度等資訊，我們使用伺服器去決定哪個感測節點要當作新的叢集頭。 
 6
rebroadcast range，只有在 Ds 範圍以內的節點才取消廣播，Ds 範圍以外的節點就會等待
DAD。因為當廣播的取消過多時，會造成抵達率不足的問題，所以需保護一部份的節點不會
被輕易取消廣播。如圖（五），若一個節點(節點 12)距上一個節點(節點 3)的距離小於 DS，
則節點 12 就不用繼續廣播；但是大於 DS時，如節點 9，就會繼續廣播。在此圖中可見，節
點 10、11、12 的廣播就被節省下來了。相較於圖（一）會有部分節點被遺漏，而圖（五）
中廣播可覆蓋到全部的節點。而稠密模式需要一參數 Dd作為 rebroadcast range，在 Dd範圍
以外的節點才需要等待 DAD，否則即取消廣播。因為當節點夠稠密時，我們比較不用擔心抵
達率不足的問題，所以只要由通訊範圍較外圍的節點做廣播即可。如圖（六），節點 2、
3、4 與其上一個節點，節點 1，的距離大於 Dd，則會繼續廣播，而節點 5 可取消廣播。在
ABB 中，每個節點本身的 Ds與 Dd，其值會動態地以該節點的鄰近節點數量 n 來決定，即 Ds(n)
與 Dd(n)。n 的值可藉由每個節點都送一個 hello 訊息給相鄰的節點來求得。最後，ABB 以下
列程序整合稀疏與稠密這兩個模式： 
1. 當一節點收到一廣播封包 P 時，若距上一個節點距離小於 Dd(n)，就取消廣播，否則設
一 DAD 延遲時間，進入等待。 
2. 在等待 DAD 延遲終了期間，若又收到封包 P，就結束等待並跳到步驟 4.。 
3. 當 DAD 時間終了，即表示不取消廣播，故本節點把 P 繼續廣播出去。本程序即終止於
此。 
4. 若本節點距上一個節點距離小於 Ds(n)，就跳到步驟 5.，否則繼續等待到 DAD 結束。 
5. DAD 等待直接終止，亦即取消廣播。 
 
Ds(n)與 Dd(n)定義如下： 
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
>
≤≤×⎥⎦
⎤⎢⎣
⎡
−
−×
=
1
1
1
,
1,
1
)1(1
)(
nnR
nnR
n
n
nDs
)1(  
 
( )
⎪⎪
⎪⎪
⎩
⎪⎪
⎪⎪
⎨
⎧
>
≤≤×−
−
<
=
2
21
12
1
1
,max
,max
,0
)(
nnD
nnnD
nn
nn
nn
nD
d
dd
)2(  
其中， n1與 n2的值可在模擬時求得。 
 
 
 8
採用ESDSR短。因為我們決定下一個跳躍節點是根據及鄰近節點的RGB值及所剩能源，而
ESDSR則是找尋擁有最大能源的路徑，所以延遲時間上會比我們的更多。圖（十五）是我們
不使用叢集頭的方法去跟ESDSR作比較，因為我們採用的是動態路由的方式傳遞資料，路徑
上比ESDSR更加的短，而且經過的感測節點比較少，整體而言省的能源也比較多。圖（十
六）則是在使用ESDSR的環境下，針對節點的存活數目作比較，在區域比較小的地方我們的
方法比ESDSR有較多的能源耗盡的感測節點，因為區域小時，我們會有傳送資料到叢集頭這
個多餘的路徑，而到區域比較大的地方我們的方法就比ESDSR好很多。 
本方法（CEER）的主要觀念是藉由比較鄰近節點對應的RGB值，可以找到一條考量到能
源的路由，模擬的結果顯示，與另一個在行動無線感測網路下的路由方法ESDSR相比，CEER
的平均能源節約比ESDSR好約50-60%。另外，CEER的平均封包傳送時間比ESDSR少約50%。最
後，有一個問題是值得進一步探討的，即設定每個感測節點更新自己位置的時間。我們知道
叢集頭是由伺服器決定的，如果更新位置的時間過於短，則能源消耗的情況會很嚴重，並且
每個感測節點需要持續尋找新的叢集頭；如果更新位置的時間太長，每個叢集頭會因為移動
的關係，遠離原本應該負責的區域，在這個情況下資料也會無法傳送到伺服器。 
 
3. 分散式高效率定位技術(DRL)[12] 
 
我們以模擬來驗證及比較DRL與MCL，如圖（十七）～圖（二十），DRL總是比MCL的定位
準確度高。因為MCL只能參考鄰近兩個hops以內的seeds資訊，但DRL可動態的決定參考範
圍。在圖（十七）中顯示了DRL跟MCL的定位準確度，平均來說DRL比MCL的準確度高出26%。
圖（十八）為節點在不同的移動速度下，對定位準確度的影響。當速度越快，導致在傳送了
定位資訊後要計算座標時，節點位置偏離的程度越高。但是不管以任何速度移動，DRL仍會
比MCL的定位準確。圖（十九）為seeds參考點密度對定位準確度的影響，在密度低於0.8
時，DRL的定位準確度明顯高於MCL，因為此時seeds很稀疏，MCL無法取得足夠的資訊來定
位，但是DRL不論在參考點密度低或高的情況下，都能保持穩定的定位準確度，因為它能動
態的調整參考點氾濫的範圍，使行動節點能取得足夠的定位資訊。圖（二十）為節點密度對
定位準確度的影響，當節點密度越高，節點間的距離差異較小，因此定位會更準確。 
 
4. 廣播技術之改良(調節式邊緣認知廣播策略，ABB)[13] 
 
在模擬環境中，我們是以100個節點，分別觀察在不同的網路範圍下，其廣播節省率
(SRB) 、抵達率(RE) 、與平均延遲時間(average latency)。圖（二十一）中，長條圖是廣
播節省率，折線圖是抵達率。在抵達率方面，ABB跟ACB相當，而略高於ACB；ABB分別比BB和
DFCN高出9%和33%。在廣播節省率方面，ABB比ACB高出16%，但分別比BB和DFCN低14%和35%。
雖然BB跟DFCN可維持較高的廣播節省率，但BB跟DFCN的抵達率會在網路節點稀疏時銳減，故
BB跟DFCN只適用在網路節點較稠密的情況。我們針對稠密網路來比較ABB、BB跟DFCN，ABB的
廣播節省率比BB和DFCN分別平均高出29%和4%。圖（二十二）是比較平均延遲時間。ABB比
ACB的表現好，因為ABB所用的DAD是根據實際距離，所以較能因應網路的實際狀況。而DFCN
普遍比其他的方法都耗時，因為他還要對封包header做處理的工作，唯有在網路較稀疏時，
 10
[5]. F. Ye et al., “A Two-Tier Data Dissemination Model for Large-Scale Wireless Sensor Networks,” in Proc. 
ACM/IEEE MOBICOM, pp. 148-159, 2002. 
[6]. Y.Yu, D. Estrin, and R.Govindan, “Geographical and Energy-Aware Routing: A Recursive Data Dissemination 
Protocol for Wireless Sensor Networks,” UCLA Comp. Sci. Dept. Tech. Rep.,UCLA-CSD TR-010023, May 2001. 
[7]. J. Borch, D. B. Johnson, and D. A. Maltz, “The Dynamic Source Routing Protocol for Mobile Ad Hoc Networks”, 
IETF Internet_Draft, draft-ietf-manet-dsr-00.txt, March 1998. 
[8]. J. Yoon, M. Liu, B. Noble,  “Random waypoint considered harmful,”. Twenty-Second Annual Joint Conference of 
the IEEE Computer and Communications Societies. IEEE INFOCOM. pp. 1312-1321. April 2003. 
[9]. Hongyi Wu, Chong Wang, and Nian-Feng Tzeng, “Novel Self-Configurable Positioning Technique for Multihop 
Wireless Networks,” IEEE/ACM Transaction on Networking, Vol 13, No. 3, pp. 609-621, June 2005. 
[10]. Sooyeon Kim, Sang H. Son, John A. Stankovic, and Yanghee Choi, “Data Dissemination Over Wireless Sensor 
Networks,” IEEE Communication Letters, pp. 561-563, Sept. 2004. 
[11]. C. Intanagonwiwat, R. Govindan, and D. Estrin, “Direct Diffusion: a Scalable and Robust Communication 
Paradigm for Sensor Networks,” in Proc. ACM MobiCom,  pp. 56-67. 2000. 
[12]. Yi-Ling Hsieh and Kuochen.Wang, “Efficient Localization in Mobile Wireless Sensor Networks,” in Proc. of the 
IEEE International Conference on Sensor Networks, Ubiquitous, and Trustworthy Computing (SUTC 2006), June 
2006. 
[13]. Chih-Hua Lin,Kuochen Wang, and Yi-Ling Hsieh, “An Adaptive Border-aware Broadcast in Mobile Ad Hoc 
Network,” in Proceedings of the 4th IEEE VTS Asia Pacific Wireless Communications Symposium, Aug. 2007. 
[14]. Tai-Jung Chang, Kuochen Wang, Yi-Ling Hsieh, “A Color-theory-based Energy Efficient Routing Algorithm for 
Mobile Wireless Sensor Networks”, Computer Networks (accepted for publication), 2007. (SCI, EI) 
[15]. Y.C. Tseng, S.Y. Ni, Y.S. Chen, and J.P. Sheu, “The broadcast storm problem in a mobile ad hoc network,” 
Wireless Networks, vol. 8, nos. 2-3, pp. 153-167, Mar.-May 2002.  
[16]. C. Zhu, M.J. Lee and T. Saadawi, “A border-aware broadcast scheme for wireless ad hoc network,” in Proc. IEEE 
Consumer Communications and Networking Conference, Jan. 2004, pp. 134-139. 
[17]. Y.C. Tseng, S.Y. Ni, and E.Y. Shih, “Adaptive approaches to relieving broadcast storms in a  wireless multihop 
mobile ad hoc network,” IEEE Transactions on Computers, vol. 52, no. 5, pp. 545-557, May 2003. 
[18]. L. Hogie, M. Seredynski, F. Guinand, and P. Bouvry, “A bandwidth-efficient broadcasting protocol for mobile 
multi-hop ad hoc networks,” in Proc. International Conference on Networking,, pp. 71-71, April 2006. 
[19]. A. Durresi, V. Paruchuri, S. S. Iyengar, and R. Kannan, “Optimized broadcast protocol for sensor networks, IEEE 
Transactions on Computers, pp. 1013-1024, Aug. 2005. 
[20]. P. Bergamo and G. Mazzini, “Localization in sensor networks with fading and mobility,” in Proc 13th IEEE 
 12
圖表 
 
 
圖（一）：抵達率問題。 
 
 
 
圖（二）：灰色的區域是位於圓中心之感測點選擇其next hop 最好的落點區域。 
 
 
 14
 
 
圖（四）：強韌的三角定位法之智慧型支援（當部分節點無參考點資訊可用時）。 
 
 
圖（五）：ABB 之稀疏模式。 
 
 
 16
 
圖（九）：參考點密度對定位準確度之影響。 
 
 
圖（十）：在MICAz Mote平台上實作之量測結果。 
 
0
0.5
1
1.5
2
1 2 3 4 5 6 7 8 9 10
Time
Lo
ca
tio
n e
rro
r (
r)
CDL E-CDL MCL
 
圖（十一）：E-CDL 與 MCL 之定位準確度比較。 
 
0
0.2
0.4
0.6
0.8
1
2 4 6 8 10 12 14 16 18 20
Node Density
Lo
ca
tio
n e
rro
r (
r)
MCL CDL E-CDL
 
圖（十二）：在不同節點密度下，E-CDL 與 MCL 之定位準確度比較。 
 
 18
 
圖（十七）：DRL 與 MCL 之定位準確度比較。 
 
 
圖（十八）：在不同的節點移動速度下，DRL 與 MCL 之定位準確度比較。 
 
 
圖（十九）：在不同的參考點密度下，DRL 與 MCL 之定位準確度比較。 
 
 20
計畫成果自評 
 
一、研究內容與原計畫相符程度 
 
原計畫重點及研究成果相符程度如下： 
z 成功地模擬及實驗所提網路架構 
z 基於色彩理論之定位方法具有原創性，其定位精確度有實用性（定位誤差在 0.2R
以內，R為感測節點通訊半徑） 
z 本集中式的定位技術適用於社區照護系統 
z 本定位技術成功地與原子計畫二之路由技術整合 
 
二、達成預期目標情況 
 
以下是原預計進度與達成情況: 
 
  原預計進度 達成情況 
第一年 
相關文獻探討，並提出有效
之動態定位方法，模擬及評
估其優缺點 
我們成功研發出基於色彩理論的定
位技術，模擬結果顯示本定位技術
(CDL)準確度平均誤差率較MCL減少
0.2至0.3 R，R為感測節點之訊號
半徑，尤其是在參考點不足的情況
下，CDL的表現更好。 
實作所提出之定位演算法，
並進行實際位置相關訊號量
測，建立量測資料庫以供比
對 
我們以基於色彩理論的定位技術，
加上 hop distance 之精確考量，
最後實作在 MICAz 與 TinyOS 平台
上，實驗結果顯示本定位技術具有
實用性（其定位誤差在 0.2R 以
內，R為感測節點通訊半徑） 
第二年 
並與其他子計畫作初步整
合、測試及試用於社區照護
系統。 
則與其他子計畫做完整的整
合與測試， 
與原子計畫二之路由技術已成功整
合 
第三年 並進一步評估所提出之定位
方法應用於社區照護系統之
成效。 
本計畫經過現場實驗，驗證在戶外
之定位精確度，並與原子計畫二之
路由技術作有效整合。所提定位技
術可應用於配戴在人體上的無線感
測器，可達到社區照護系統所需之
功能 
 22
 
可供推廣之研發成果資料表 I 
 
□ 可申請專利  ▓ 可技術移轉                                      日期：96 年 10 月 30 日 
國科會補助計畫 
計畫名稱：無線感測網路之動態定位技術 
計畫主持人：王國禎 
計畫編號：NSC 93-2213-E-009-124   學門領域：EA 資訊學門一
技術/創作名稱 以色彩理論為基礎之戶外行動無線感測網路定位技術 
發明人/創作人 施勝海,張子建,王國禎 
中文： 
我們改進了指紋資料庫比對定位方法需要訊號量測設備的問題，
提出一個可用於戶外之行動無線感測網路定位技術。本方法以
RGB 色彩值作為指紋資料，此簡化的指紋資料可節省定位計算所
需的能源消耗。每個基地台有獨一的 RGB 值，而任一節點可匯整
多個基地台之資訊，以提升定位精確度。一般的指紋比對定位技
術多用於戶內，而本計畫所提出的技術是一項突破性的技術，可
運用於戶外。至於相關的考量，例如節點的移動，節點的分布等
問題，本技術整合了 range-free 原理，以降低距離量測誤差所造
成的困難。 
 
技術說明 
英文： 
This project proposes a mobile wireless sensor network localization 
technique, called color-theory-based dynamic localization (CDL) for 
outdoor environments, which is an improvement from the fingerprint 
method that requires actual signal measurement equipment. Our 
approach uses RGB values as fingerprint data. Such a simple way of 
data representation benefits energy saving in location calculation. Each 
base station has a random unique RGB value, and a node can integrate 
several referenced base stations’ RGB values so as to improve 
localization accuracy. Our approach is a breakthrough from general 
fingerprint approaches originally suited for indoors only. As to related 
considerations such as nodes mobility, topology etc., our approach 
integrates the range-free concept to reduce the difficulties caused by 
distance measurements and their variations. 
 
可利用之產業 
及 
可開發之產品 
社區照護系統、電子地圖及需監控(monitor)使用者位置之應用產
業或產品。 
 24
供推廣之研發成果資料表 II 
 
□ 可申請專利  ▓ 可技術移轉                                      日期：96 年 10 月 30 日 
國科會補助計畫 
計畫名稱：無線感測網路之動態定位技術 
計畫主持人：王國禎 
計畫編號：NSC 94-2213-E-009-043   學門領域：EA 資訊學門一
技術/創作名稱 行動無線感測網路下基於能源節約的叢集試路由方法 
發明人/創作人 張泰榕,王國禎  
技術說明 
中文： 
由於感測節點的能源是有限的，我們於是提出一個基於能源節約
的有效叢集式路由方法(CEER)來延長感測節點的使用壽命。CEER
是以 CDL 為基礎，所以能讓路由方法與定位方法做有效的整合。
CEER 每個錨節點會廣播自己的 RGB 值及位置資訊到每個感測節
點，包括叢集頭。每個感測節點會週期性的把感測資料(如果有的
話)及其 RGB 值資訊傳送到對應的叢集頭。接下來叢集頭會比較叢
集成員中的 RGB 值以選擇一些更接近錨節點的感測節點當作下一
個可能的跳躍點。本方法的獨特性在於藉由比較鄰近節點對應的
RGB 資訊，可以找到一條考量到能源的有效路由。模擬的結果顯
示，與另一個的路由方法 ESDSR 相比，CEER 的平均能源節約比
ESDSR 好約 50-60%。另外，CEER 的平均封包傳送時間比 ESDSR 少
約 50%。 
 
 26
供推廣之研發成果資料表 III 
 
□ 可申請專利  ▓ 可技術移轉                                      日期：96 年 10 月 30 日 
國科會補助計畫 
計畫名稱：無線感測網路之動態定位技術 
計畫主持人：王國禎 
計畫編號：NSC 93-2213-E-009-124   學門領域：EA 資訊學門一
技術/創作名稱 行動無線感測網路之高效率動態參考定位技術 
發明人/創作人 謝宜玲,王國禎 
技術說明 
中文： 
我們提出一個高效率定位技術，名為「動態參考定位技術」
(DRL)。DRL 是一個分散式的定位方法。為了節省定位時所耗的通
訊成本，DRL 藉由動態地改變參考點廣播時所用的參數，來將參
考點氾濫限制於局部區域，以降低節點之間資訊的氾濫。如此也
使得行動節點只使用附近的參考點所提供的資訊，而非需要使用
網路中所有的參考點，因此可提高定位正確性。此外，DRL 是
range-free 的定位方法；因此它不需要特殊的硬體支援，例如訊
號強度測量、超音波量距或是具方向性的天線。DRL 也允許所有
的節點都可以自由移動，其中只有少數的節點具有自我定位的能
力(稱之為參考點)。此外，DRL 也能夠適應節點密度高或低的問
題，它採用動態參考點氾濫以及強韌的三角定位法。動態參考點
氾濫會根據參考點周圍的節點密度來改變它的氾濫涵蓋範圍。而
強韌的三角定位法允許參考節點不足的情況。與我們的研究相
較，MCL 是唯一具有相同硬體與行動模式的 range-free 行動定位
方法。我們評估了 DRL 與 MCL，模擬結果顯示 DRL 的定位準確度
比 MCL 高出 26%，尤其是在低密度參考點的情況下，DRL 更顯得優
異。藉由行動定位，DRL 適用於電子地圖導航系統以及社區健康
照護系統。 
 
 28
需能源，以延長節點之存活時間，提升使用者的便利性，尤其在
社區照護系統中，必須確保使用者不會因能源被耗盡而導致失
聯，而延誤意外發生的處理時機。 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位研
發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
 
 30
英文： 
In mobile ad hoc networks (MANETs, including wireless sensor 
networks), broadcast is an essential function for many applications, 
such as route discovery and address resolution. Since conventional 
broadcast in MANETs wastes a lot of resources due to redundant 
rebroadcasts, contention and collision, several existing broadcast 
protocols were proposed to resolve these problems. However, few of 
them are suitable for sparse networks as well as dense networks. 
Therefore, we propose an Adaptive Border-aware Broadcast (ABB) 
that requires only 1-hop neighbor information so as to reduce control 
overhead. Two enhancements have been proposed. The first 
enhancement, called sparse mode enhancement, can increase the 
reachability by decreasing the “cancellation range” in sparse networks. 
The second enhancement, called dense mode enhancement, can reduce 
the number of rebroadcast nodes in order to have high saved 
rebroadcast by decreasing the “rebroadcast range” in dense networks. 
Simulation results show that the proposed ABB can achieve high 
reachability in all network environments. Therefore, our ABB is 
suitable for both dense and sparse MANETs. Averagely, ABB is 
comparable to ACB and is 33% better than DFCN in terms of 
reachability. For average latency, ABB is 33% better than ACB and 
7% better than DFCN. In addition, for saved rebroadcast, ABB is 16% 
better than ACB but 35% worse than DFCN. However, DFCN has poor 
reachability, which is a more important metric for evaluating broadcast 
schemes. 
 
可利用之產業 
及 
可開發之產品 
廣播為任何網路常用之功能，而本方法可用於需要定位及路由資
訊之行動隨意網路（含無線感測網路）。例如可應用在社區照護
系統、電子地圖及需監控(monitor)使用者位置及需要路由資訊之
產業或產品。 
技術特點 
1. 本方法中，各節點只需要 1-hop 節點的資訊，因此可以減少控
制訊息過載。 
2. 本方法在稀疏式和密集式網路皆適用。在節點較稀疏之應用環
境中，本方法對於到達率(reachability)有增益的效果；在節
點較密集之應用環境中，本方法可獲得較高的重覆廣播節省
率。 
推廣及運用的價值 
隨著無線隨意網路科技的日新月異，生活中有越來越多的應用，
其中許多應用會需要大量的廣播訊息，尤其是集中式的網路應用
環境，像是社區照護系統需進行中控，以掌握所有節點。而對於
使用者的便利性是越來越被重視的網路技術改進方向，包括延長
使用時間(節約能源相關)、覆蓋度(到達率相關)、速度(封包傳送
延遲時間相關)等，以確保網路的可用性以及其通暢度，這些重點
在本方法中皆加以考量並達到良好效果。例如在社區照護系統
中，任何使用者當遇到緊急情況時，其生理資訊皆能快速地送至
伺服器，轉交由醫生處理；另外需留意能源節約，以延長節點之
存活時間，以確保使用者不會因能源被耗盡而導致失聯，以致延
誤意外發生的處理時機。 
 32
附件 
發表之期刊論文及學術會議論文 
 
[1] Tai-Jung Chang, Kuochen Wang, Yi-Ling Hsieh, “A Color-theory-based Energy Efficient 
Routing Algorithm for Mobile Wireless Sensor Networks,” Computer Networks (accepted for 
publication), 2007. (SCI, EI) 
[2] Yi-Ling Hsieh and Kuochen.Wang, “Efficient Localization in Mobile Wireless Sensor 
Networks,” in Proc. of the IEEE International Conference on Sensor Networks, Ubiquitous, 
and Trustworthy Computing (SUTC 2006), June 2006. 
[3] Tzu-Chien Chang, Kuochen Wang and Yi-Ling Hsieh, 2007, 03, “Enhanced Color-theory-
based Dynamic Localization in Mobile Wireless Sensor Networks,” in Proceedings of the 
IEEE Wireless Communications and Networking Conference, pp. 3064-3069. 
[4] Chih-Hua Lin,Kuochen Wang, and Yi-Ling Hsieh, “An Adaptive Border-aware Broadcast in 
Mobile Ad Hoc Network,” in Proceedings of the 4th IEEE VTS Asia Pacific Wireless 
Communications Symposium, Aug. 2007. 
[5] Tai-Jung Chang, Kuochen Wang and Yi-Ling Hsieh, 2006, 08, “A Color-theory-based Energy 
Efficient Routing Algorithm for Wireless Sensor Networks,” in Proceedings of Workshop on 
Wireless, Ad Hoc, Sensor Networks. 
[6] Shen-Hai Shee, Kuochen Wang, and I.L. Hsieh “Color-theory-based Dynamic Localization in 
Mobile Wireless Sensor Networks,” in Proceedings of Workshop on Wireless, Ad Hoc, Sensor 
Networks, Aug. 2005. 
 
 
 2
1 Introduction 
 
With the advance of recent wireless and VLSI technologies, small and low-cost sensor 
nodes have become feasible in our daily life. These sensor nodes sense data in the 
environment surrounding them and transmit the sensed data to the sink (or the server). The 
way to transmit sensed data to the server affects the power usage of each node deeply. 
Typically, wireless sensor networks (WSNs) contain hundreds or thousands of sensor nodes 
and these sensor nodes have the ability to communicate with either one another or directly to 
the destination node (sink). Using a larger number of sensor nodes allows for sensing over 
wider geographical regions with greater accuracy. Sensor nodes may use up their energy so 
that they become unavailable in a WSN during communications or measurements. With more 
and more sensor nodes becoming unavailable, the WSN may be separated into several 
sub-networks or become sparse, which is not desirable. Therefore, energy saving is an 
important issues in the WSN. 
It is a great challenge for routing in a WSN due to the following reasons. First, since it is 
not easy to grasp the whole network topology, it is hard to find a routing path. Secondly, 
sensor nodes are tightly constrained in terms of energy, processing, and storage capacities. 
Thus, they require effective resource management policies, especially efficient energy 
management, to increase the overall lifetime of a WSN. 
The proposed clustered-based Color-theory-based Energy Efficient Routing (CEER) 
algorithm is based on a range-free color-theory-based dynamic localization algorithm, CDL 
[1], in which the location of a sensor node is represented as a set of RGB values. With known 
RGB values for each sensor node, we can find out the most possible position of a node by 
looking up the location database in the server. To keep track of a sensor node’s location, 
frequently updating the RGB values of each sensor node and delivering the update to the 
server is necessary. However, if battery-powered nodes frequently update and report their 
 4
RGB values to the server so that the server can find its most probable location by looking up 
the location database. 
2.1 The Information Delivery of Anchors [1] 
 
In this section, we introduce some notations that are defined in CDL: 
¾ avgD  is the average hop distance, which is based on the DV-Hop [3]. 
¾ ijh  is the hop count between nodes i and j. 
¾ ikD  represents the hop distance from anchor k to node i : ikavgik hDD ×=  
¾ Each node i maintains an entry of ),,( ikikik BGR  and ikD , where k represents the kth 
anchor. 
¾ ),,( ikikik VSH  is a set of HSV values of anchor k, converted from ),,( ikikik BGR by the ith 
node. 
¾ Range represents the maximum distance that a color can propagate. 
¾ ),,( kkk BGR  is a set of RGB values of anchor k. 
 
The RGB values of anchors are first assigned randomly from 0 to 1. After a sensor node i 
obtains each anchor k’s RGB values and hop count ( ikh ), the RGB values are then converted 
to HSV values by equation (1): 
),,( kkk VSH  = RGBtoHSV ),,( kkk BGR                                   (1) 
With ikh , ikD  can be computed. The updated HSV values corresponding to node i of anchor 
k are calculated by equation (2). 
kik HH = ,   kik SS = ,  kikik VRange
DV ×−= )1(                          (2) 
The RGB values of node i corresponding to anchor k are then calculated: 
 6
localization approach is a kind of localization fingerprinting approaches [18]. Based on the 
similar steps of how a sensor node obtains its RGB values, as described in section 2.1, one 
can create a location database. The only difference is Euclidean distance instead of hop-count 
distance is used. Firstly, the Euclidean distance between each location i and anchor k is 
derived: 
ikd = ( ) 22 )( kiki yyxx −+−                                     (5) 
where ),( ii yx  is the coordinate of location i, and ),( kk yx  is the location of anchor k. First 
of all, we have to calculate the HSV values of each location i corresponding to anchor k: 
),,( kkk VSH  = RGBtoHSV ),,( kkk BGR                                    (6) 
kik HH = , kik SS =  , kikik VRange
dV •−= )1(                   (7) 
The RGB values of location i corresponding to anchor k can be derived by equation (8): 
),,( ikikik BGR  = HSVtoRGB ),,( ikikik VSH                                  (8) 
Then the RGB values of location i can be calculated by averaging all RGB values of location i 
corresponding to N anchors. 
∑
=
×=
N
k
ikikikiii BGRN
BGR
1
),,(1),,(                                        (9) 
where N is the number of anchors.  
In this way, the location for each sensor node can be constructed in the location database 
by maintaining the coordinate ),( ii yx and the RGB values ),,( iii BGR  at each location i. 
Then, the location of a sensor node can be acquired by looking up the location database based 
on the derived RGB values. 
2.3 Mobility [1] 
 
When a mobile node arrives at a new location, it sends an anchor information request to 
 8
protocols include DSR [7] and MSR [15]. In the following, we review a classical routing 
protocol from each category. 
3.1.1 Flat routing – Sensor Protocols for Information via Negotiation (SPIN) [4] 
SPIN disseminates all the information at each node to neighbor nodes in the network. A 
source node first advertises its data to neighbor nodes. If a node within the radio range wants 
the data advertised by the source node, it sends a reply packet to the source node. The source 
node will send data to the request node which queried for the data. This is illustrated in Figure 
2. The disadvantage of SPIN is that it can’t guarantee the delivery of interested data. If a node 
is interested in the data that is far away from the source node and nodes between source and 
destination nodes are not interested in that data, data will not be delivered to the destination 
node at all. 
 
Figure 2: Flat routing – SPIN. Node A starts by advertising its data to node B (a). Node B 
responds by sending a request to node A (b). After receiving the requested data (c), node B 
then sends out advertisements to its neighbors (d), who in turn send requests back to B (e, f) 
[4]. 
 
B B
REQ
B 
A
B
ADATA
ADV
ADV
ADV
ADV
ADV
B 
A
B
A
DATA
DATA
DATA
REQ
REQ
REQ
(a) (b)
(c) (d)
(e) (f)
AADV
A
 10
Node 
Data packet
forwarding packets towards the target region and forwarding packets within the region. In the 
first phase, when receiving a packet, a node checks its neighbors to see if one neighbor node 
is closer to the target region than itself. In the second phase, if the packet reaches the target 
region, it can be diffused in that region by using recursive geographic forwarding or restricted 
flooding. 
 
Figure 4: Location based routing – GEAR. Recursive geographic forwarding: data 
disseminate to four sub-regions recursively until regions with only one node are left [6]. 
 
3.1.4 Source Routing – Dynamic Source Routing (DSR) [7] and ESDSR [2] 
The DSR routing [7] is based on the source routing. It uses each node’s cache to store 
information about the routing path which will be maintained by each sensor node if the 
routing path is broken or not. Two operations are used to build a routing path, route discovery 
and routing maintenance. Route discovery is the mechanism by which a source node finds a 
route to the destination. When a source wants to send information to the destination, it 
searches its own cache to find a routing path. If the source node can not find a routing path to 
the destination, it starts to perform route discovery. First of all, the source node initiates a 
local broadcast to start the routing. If the node which receives the packet is the route 
destination, it will route back to the source node. If it is not the destination, it also broadcasts 
a packet to its neighbors until reaching the destination. The source will choose the shortest 
path — the smallest hop count path — to route to the destination. 
The route maintenance operation is the mechanism which a node is able to detect any 
Target region 
 12
Approach Energy cost Mobility Position awareness 
(e.g., using GPS) 
Localization 
SPIN[4] Mid N/A No No 
TTDD[5] Mid Low Yes No 
GEAR[6] Mid Low Yes No 
DSR[7] Mid Mid No No 
ESDSR[2] Low Mid No No 
CEER (proposed) Low Mid No Yes 
 
Table 1. Comparison of six routing protocols, including the proposed CEER protocol. 
 
4 Color-theory-based Energy Efficient Routing Algorithm 
 
In this section, we propose a color-theory-based energy efficient routing (CEER) 
algorithm for WSNs, which is based on the CDL [1]. The network model is first described. 
The routing process can be organized into three phases: setup phase, data dissemination phase, 
and refinement phase, which will be described next. 
4.1 Network Model 
 
The network model for our routing protocol is described as follows: 
¾ A server is used for building a location database, localization, and collecting sensed data. 
¾ The area is divided into clusters and a cluster head for each cluster is selected by the 
server. 
¾ There are four anchors, which are placed in the four corners of the area [9]. Anchors 
collect aggregate data received from cluster heads. 
¾ All sensor nodes have a uniform energy at the beginning. 
¾ Each node wakes up at a fixed rate to check if its RGB values have changed. 
 14
    
Figure 6: Setup step 2: The server uses the closest anchors to send information to the selected 
sensor nodes to let them know that they are cluster heads. 
 
4.3 Data Dissemination Phase 
 
After the setup phase, each cluster head will receive its cluster member’s information. If 
a sensor node’s position changes, its hop counts to the anchors may also change. The node 
then updates its RGB values and transmits the RGB values as well as collected data (if 
available) to its cluster head. When a cluster head receives information from its cluster 
member, it will setup a timer and wait for other possible information from other members 
until the timer expires. The advantage of setting up a timer is that we can wait for other 
cluster members to see if they have data to send. In this way, communication cost can be 
reduced. 
When a cluster head wants to forward the aggregate data toward the server, two steps are 
performed in CEER. In the first step, it selects its one hop neighbors that are closer to a 
nearby anchor than itself as the next possible hop by comparing their respective RGB values, 
as shown in Figure 7. In the second step, among those selected cluster members, the sensor 
node with the highest energy level is selected as the next hop, as shown in Figure 8. The 
selected node will receive aggregated data and again follows these two steps to transmit the 
data to its next hop until reaching the server via the anchor. 
Anchor
Cluster head 
 16
even if node 3 is geographically closer to the anchor. This is because if a node with a color 
closer to the color of the destination, it also implies the node has a smaller hop-count distance 
to the destination based on color theory. Since each sensor node can receive the hop count 
information from adjacent sensor nodes, we can always find a sensor node with RGB values 
closer to that of the anchor. Therefore, the CEER will not encounter the topology hole 
problem when routing data to the anchor. 
 
Figure 9: Topology hole problem. 
 
4.4 Refinement Phase 
 
There are several situations that a cluster head may fail to do its job. For example, if a 
cluster head has low power, it may not live long enough to be a cluster head. On the other 
hand, if a cluster head moves away from the grid, it may lose contact with some cluster 
members. In these situations, it is necessary to choose another sensor node to become a new 
cluster head so that the collected information can still be forwarded to the server. In our 
approach, the server is responsible to choose cluster heads because the server knows the speed, 
position, and energy level of each node. However, if we change cluster heads too often, it will 
waste energy and induce extra communication cost to switch the cluster head’s job from one 
sensor node to another. To save energy, under the following two conditions, the role of a 
cluster head will not be replaced: 
¾ A cluster head with an energy level higher than half of the original battery capacity. 
 18
data-packet of size D bytes over a given link can be modeled as 
E(D, Pt) = K1PtD + K2 
where Pt is the minimum transmit power required for successful reception, and the typical 
values of constant K1 and K2 in IEEE 802.11 MAC environment at 2 Mbps are 4 μs per byte 
and 42 μJ, respectively. 
The two performance parameters are defined as follows: 
¾ Total energy consumption (mJ): summary of all sensor nodes’ energy consumption after 
50 time slots (time units). 
¾ Latency per packet (sec): average time spent to send a packet with aggregate data, such 
as RGB values and collected data, from a sensor node to the server. 
 
Parameter Value 
Area size 500500×  2m  
Node speed 
Randomly choose from 
[Vmin,Vmax] 
Node transmission range (R) 50 m 
Pause time 0  
Measurement period 50 ut  
Update interval 5 ut  
Time slot length (time unit) ut  
 
Table 2. Simulation parameters. 
 
In [9], it has shown that the location estimated error is minimized when anchors are 
placed at the corners. So we put four anchors (A1 ~ A4) at the four corner of the area, as shown 
in Figure 10, where S represents a sensor, a solid line represents a direct link with one hop, 
and a dotted line represents an indirect link with more than one hop. In addition, Figure 11 
shows the impact of seed (anchor) density on location estimated error [1]. Note that anchor 
density is the average number of anchors in one hop transmission range [1]. This figure shows 
 20
5.2 Comparison with ESDSR [2] 
Kim et. al [10] mentioned that a well dissemination routing protocol should have three 
characteristics: energy efficiency, self-configuration, and scalability. By simulations, we have 
shown that our algorithm is better than ESDSR in terms of energy efficiency. Our algorithm 
has the characteristic of self-configuration in terms of cluster head selection, as described in 
section 4.4. As to the scalability, our algorithm is more scalable than ESDSR when the area is 
bigger, which will be described at the end of this section. 
0
5
10
15
20
25
30
35
40
45
200 300 400 500
Number of nodes
To
tal
 en
erg
y c
on
su
mp
tio
n CEER
ESDSR
 
Figure 12: Total energy consumption vs. number of nodes (with cluster heads). 
 
As shown in Figure 12, our approach (CEER) saves more energy than the ESDSR when 
the number of nodes increases. This is because the CEER uses a cluster head to aggregate 
data and adopts dynamic path finding to find a neighbor node with maximum energy to route 
data to a nearby anchor. The ESDSR uses local broadcast to find a path and chooses the best 
route with the maximum expected life, but the source node doesn’t aggregate data of its 
neighbor nodes to send data to the destination. 
 22
saves more energy than the ESDSR. 
We also used the same network model as that of ESDSR [2] to validate the correct 
implementation of the ESDSR and CEER. Forty sensor nodes were randomly placed in an 
area sized from 200 m × 200 m, 300 m × 300 m, 400 m × 400 m, to 500 m × 500 m, 
respectively, while keeping the number of sensor nodes (40) and connection (20) constants. 
Figure 15 shows that, in a small area, our approach did not perform well compared to the 
ESDSR in terms of number of dead nodes at the end of the simulation. This is because we 
used a cluster head to forward collected data, even if a node is within the transmission range 
of an anchor. When the area grows bigger, the routing path is long enough so that the 
overhead of routing packets to the cluster head can be reduced. Therefore, the CEER is more 
scalable than the ESDSR when the area grows bigger, as illustrated in Figure 15. 
0
2
4
6
8
10
12
40 90 160 250
Area (1000 m2 )
N
um
be
r o
f d
ea
d 
no
de
s
CEER
ESDSR
 
Figure 15. Number of dead nodes at the end of the simulation. 
 
6 Conclusion 
 
In this paper, we have presented an efficient color-theory-based energy efficient routing 
(CEER) algorithm based on a color-theory-based dynamic localization (CDL) algorithm. The 
key idea of the CEER is that it selects those cluster members that are closer to the anchor than 
itself as next possible hops by comparing their RGB values. Among the selected cluster 
members, the sensor node with the highest energy level is chosen as the next hop. Simulation 
 24
[14] B. Chen et al., “SPAN: an Energy-efficient Coordination Algorithm for Topology 
Maintenance in Ad Hoc Wireless Networks,” Wireless Networks, vol. 8, no. 5, pp.481-494, 
Sept. 2002. 
[15] L. Wang et al.,, “Adaptive Multipath Source Routing in Ad Hoc Networks,” in Proc. 
IEEE Int’l Conf. Computer Communications, pp. 867-871, 2001. 
[16] E. Vishnevsky, “RGB to HSV & HSV to RGB” [Online] Available: 
http://www.cs.rit.edu/~ncs/color/t_convert.html 
[17] DevX.com, “Color Models” [Online] Available:    
http://www.devx.com/projectcool/Article/19954/0/page/7. 
[18] A. Taheri, A. Singh, and A. Emmanuel, “Location fingerprinting on infrastructure 
802.11 wireless local area networks (WLANs) using Locus,” in Proc. the 29th Annual 
IEEE International Conference on Local Computer Networks, pp. 676-683, Nov. 2004.  
. 
for radio signal measurement. The proposed DRL is a 
range-free mobile localization approach for outdoor 
environments. In the following, we introduce some 
related work.
[6] is a range-based approach for mobile WSNs 
which uses only local information. It uses range 
measurements between nodes to build a network 
coordinate system. It has shown that despite possible 
range measurement errors and motion of the nodes, the 
algorithm provides enough stability and location 
accuracy. However, the amount of information 
exchange as well as graph calculation is quite huge, 
and it needs hardware capable of supporting the TOA 
to obtain the range between two mobile nodes. 
DV-Hop [2] is used in static wireless networks, 
which makes use of multi-hop information. It is a 
range-free approach. An anchor floods its location to 
the whole network with a packet containing the 
anchor’s position. With hop-count from that anchor, 
and average hop-distance, this node can derive its own 
position by triangulation. In the triangulation, the 
distance between a node and an anchor is estimated as 
the multiplication of hop-count and hop-distance. 
MCL [4] is a range-free approach for mobile WSNs. 
MCL periodically updates its samples, which are 
node's probabilistic distribution of locations, by 
repeating the prediction and filtering process. It 
predicts samples’ next time step distribution with node 
velocity, and filters out impossible samples with new 
observations. Observations includes the conditions that 
the node hears a seed directly (i.e. they are one-hop 
away), or some of the node’s neighbors are one-hop 
away from certain seeds (i.e. such seeds are two-hop 
away from the node). However, if a node has no seed 
within two-hop away from it, it can not locate itself. 
Also, the prediction and filtering process may consume 
lots of iterations if it keeps failure of guessing a 
possible position. Moreover, this repeating failure 
condition may be an infinite loop if none of the 
samples can be filtered successfully. MCL has no 
solution to this. 
3. Dynamic reference localization 
The proposed Dynamic Reference Localization
(DRL) mainly consists of two phases: 
(1) Robust triangulation: Every mobile node locates 
itself not only by regular triangulation, but also making 
use of other reference information it obtains. 
(2) Seeds update: Each of the seeds has its own 
parameters used to provide information for localization 
of other nodes. The parameters have to be dynamically 
updated according to the current surrounding 
conditions of a seed, such as node density. 
The process of seeds update is independent of 
robust triangulation, and it should be executed less 
frequent than the localization (robust triangulation) 
phase, in order not to increase network load.
3.1. Robust triangulation 
A mobile node has to get three reference nodes, 
usually seeds, to do triangulation. However, it is not 
always that a node can get enough seeds information, 
especially when DRL limits the seed flooding scope to 
reduce network load. Therefore, according to the 
number of seeds information it gets, there are four 
cases described as follows.  
For three seeds case, this is a normal triangulation 
situation (Figure 1(a)). For two seeds case, we can do 
triangulation with two seed circles and a velocity circle, 
as shown in Figure 1(b). A velocity circle is a circle, 
whose center is the previous estimated position of the 
target mobile node and its radius is the maximum 
distance a node can move in a time unit (i.e. maximum 
velocity that a mobile node can achieve, which is a 
given constant). For one seed case, we can estimate the 
position of the mobile node by averaging “the center of 
the intersection area” and “the current predicted 
position”. The former can be estimated as the average 
of the two intersection points by the seed circle and 
velocity circle. And the latter can be derived by the 
most recent two estimate positions, supposing the 
mobile node is moving straight with the same speed, as 
illustrated on the dotted arrow in Figure 1 (c). 
For no seed case, we propose a solution called 
intelligent backup. As illustrated in Figure 2, the 
flooding of each seed would cover a certain area. 
However, there may be some nodes not covered by any 
seeds (i.e. the nodes collect no seed information). Such 
nodes can ask their neighbors, who have already been 
covered by seed flooding, to pass seed information to 
them. If these neighbors are not covered by any seed, 
they simply ask their next neighbors for help in the 
same way. Therefore, the inquiry will continue until it 
finds a node with seed information. 
3.2. Seed update 
Each seed in DRL has its own values of hd (hop-
distance) and fh (flooding-hop) to reflect the current 
conditions around the seed. DRL has to update seeds 
dynamically to maintain its location correctness. When 
nodes are irregularly distributed, such dynamic seed 
information is beneficial to location accuracy. 
Proceedings of the IEEE International Conference on Sensor Networks, Ubiquitous, and Trustworthy Computing (SUTC’06) 
0-7695-2553-9/06 $20.00 © 2006 IEEE 
settings. We represent the velocity by a fraction of the 
radio transmission range (r) per time unit. The node 
speed for all of the seeds and other mobile nodes were 
all chosen randomly in the range of (vmin, vmax], and we 
increased vmax by 0.2 from 0.2 to 2.0 in each iteration. 
The maximum speed of nodes is vmax, and the 
minimum speed of nodes is vmin. The maximum speed 
of seeds is smax. Under any node speed setting, DRL 
still outperforms MCL.  
In Figure 3(c), we compared DRL and MCL for the 
impact of seed density to location accuracy. We 
evaluated DRL and MCL under different seed density 
settings, and we increased seed density by 0.2 from 0.2 
to 2.0, and we set nd = 10. We can see that DRL allows 
low seed density and has good location accuracy. For 
both DRL and MCL, location accuracy increases as 
seed density grows, and DRL outperforms MCL 
greatly for seed density Љ 0.8. It has also shown that 
DRL performs well under any seed density, but MCL 
needs seed density higher than 0.1 to perform well. 
This is because that in DRL the seeds’ information 
flooding can achieve sufficient coverage by 
dynamically adjusting the number of hops in flooding 
it allows, but MCL can only refer to two-hop-away 
seeds. Under low seed density, MCL would encounter 
that there is almost no seed for filtering. We can 
conclude that DRL is robust under the impact of seed 
density. When seed density is high, DRL would 
decrease the flooding amount and reduce 
communication cost. When seed density is low, DRL 
would raise flooding amount to maintain enough 
coverage. 
As shown is Figure 3(d), we evaluated DRL for the 
impact of node density to location accuracy. With seed 
density of 1.0, we keep other parameters constant. We 
can see that location accuracy would increase as node 
density increases. 
5. Conclusions 
We have presented an efficient localization scheme, 
called DRL, that is suitable to be used in outdoor 
mobile WSNs. DRL can dynamically update and make 
use of reference information for cost-efficiency, and 
has feasible solutions for nodes with insufficient seeds 
information. DRL is quite steady in location accuracy, 
under the variance of node speed, seed density, and 
node density. We have shown that DRL outperforms 
MCL by 26%, under the same hardware and mobility 
assumptions. In addition, DRL allows mobile nodes 
moving freely, and it does not need any special 
hardware for signal strength measurement, ultra-sound 
ranging, or directional antennas. DRL only needs a few 
GSP-installed seeds, and is very feasible for 
applications, such as navigation systems using e-map 
and community health-care systems. 
   
sd = 0.1, vmax = smax = r        sd = 1, smax = vmax
(a) Accuracy comparison   (b) Impact of node speed 
vmax = smax = r           vmax = smax = r
(c) Impact of seed density    (d) Impact of node density 
Figure 3. Simulation results 
6. References 
[1] R. Nagpal, “Organizing a global coordinate system from 
local information on an amorphous computer”, A.I. Memo 
1666, MIT, August 1999. 
[2] D. Niculescu and B. Nath, “DV based positioning in ad 
hoc networks”, in Kluwer Journal of Telecommunication 
Systems, 2003, pp. 267 - 280. 
[3] C. Savarese, J. Rabay, K. Langendoen, “Robust 
positioning algorithms for distributed ad-hoc wireless sensor 
networks”, in USENIX Technical Annual Conference, June 
2002, pp. 317 - 327. 
[4] Lingxuan Hu and David Evans, “Localization for mobile 
sensor networks”, in Proc. of the Tenth Annual International 
Conference on Mobile Computing and Networking
(MobiCom 2004), pp. 45 - 47. 
[5] J. Yoon, M. Liu and B. Noble, “Random waypoint 
considered harmful”, in Proc. of IEEE INFOCOM, Volume 2, 
April 2003, pp. 1312 - 1321. 
[6] S. Capkun, M. Hamdi and J. P. Hubaux, “GPS-free 
positioning in mobile ad-hoc networks”, In Proc. of HICSS,
Hawaii, Jan. 2001, pp. 9008. 
[7] David Moore, John Leonard, Daniela Rus, and Seth 
Teller, “Robust distributed network localization with noisy 
range measurements”, in Proc. of the Second ACM 
Conference on Embedded Networked Sensor Systems
(SenSys '04), Nov. 2004, pp. 50–61. 
[8] D. Niculescu and B. Nath, “Ad hoc positioning system 
(APS) using AoA”, in Proc. of IEEE INFOCOM, San 
Francisco, CA, 2003, pp. 1734 - 1743. 
[9] P. Bahl and V. N. Padmanabhan, “Radar: An in-building 
RF-based user location and tracking system”, in Proc. of the 
IEEE INFOCOM, vol. 2, Mar. 2000, pp. 775 – 784. 
Proceedings of the IEEE International Conference on Sensor Networks, Ubiquitous, and Trustworthy Computing (SUTC’06) 
0-7695-2553-9/06 $20.00 © 2006 IEEE 
  
Abstract—There are few localization schemes targeted at 
mobile wireless sensor networks. In this paper, we propose an 
Enhanced Color-theory-based Dynamic Localization (E-CDL) 
which is based on the CDL algorithm [1]. However, the location 
accuracy of this algorithm depends on the accuracy of the 
average hop distance derivation. Therefore, we present two novel 
schemes to estimate the average hop distance. We analyzed the 
behavior of sensor nodes communication, and computed the 
expected value of the average hop distance, which is 7r/9, where r 
is the radio range. In addition, since CDL is based on the DV-hop 
scheme, the derived shortest path length is usually larger than 
the corresponding Euclidean distance. With this observation, the 
derived shortest path length can be adjusted by the ratio of the 
Euclidean distance and the shortest path distance to further 
enhance the location accuracy. Finally, in mobile wireless sensor 
networks, sensor nodes may become isolated. By employing 
mobile anchor nodes, the isolation problem can be relieved and 
hence the location accuracy can be improved. Simulation results 
have shown that the location accuracy of E-CDL is 50% - 55% 
better than that of CDL, and 75% - 80% better than that of MCL 
(Monte Carlo Localization) [2]. In addition, we have 
implemented and verified our algorithm on the MICAz Mote 
Developer’s Kit [3]. 
I. INTRODUCTION 
 wireless sensor network (WSN) consists of a collection 
of wireless sensor nodes operating in an ad hoc manner 
within a particular area. Due to the properties of low overhead, 
small size, and low power consumption, WSNs can be applied 
to areas such as military, monitoring, health-care systems and 
smart home. However, localization in WSNs is a critical issue 
for these applications. By exploiting location information, 
routing protocols can function more efficiently. In order to 
obtain location information, nodes may be equipped with a 
GPS device; however, it is expensive and not feasible for 
sensor nodes due to its high power consumption. 
 
1 This work was supported by the National Science Council under Grant 
NSC95-2221-E-009-022 and the NCTU EECS-MediaTek Research Center 
under Grant Q583. 
II. RELATED WORK 
In this section, we first review two existing most related 
localization methods for mobile wireless sensor networks. 
Then different localization approaches are compared. 
A. MCL  
The key idea of MCL is to represent the posterior 
distribution of possible locations using a set of weighted 
samples. Each step is divided into a prediction phase and 
filtering phase. In the prediction phase, the sensor node makes 
a movement and the uncertainty of its position increases. In 
the filtering phase, new measurements (such as observations 
of new landmarks) are incorporated to filter and update data. 
The process repeats and the sensor node continually updates 
its predicted location [2]. Initially, a sensor node unknown of 
its location generates certain amount of samples in the 
prediction phase. Then, anchor nodes observe new samples 
and filter out impossible samples. In order to maintain enough 
samples, this sensor node must resample new predictive sensor 
nodes. Finally, the other anchor nodes observe new samples 
and filter out impossible samples. Over and over again, a 
sensor node can compute its location by these samples. 
B. CDL 
The CDL algorithm [1] is a centralized localization 
algorithm that is based on the color theory to perform 
positioning in mobile WSNs. It builds a location database in 
the server, which maps a set of RGB values to a geographic 
position. And the distance measurements by sensor nodes are 
based on the DV-Hop [8]. When a sensor node receives 
anchors’ RGB values, it calculates its own RGB values. The 
node then sends its RGB values to the server so that the server 
can find the most possible location by looking up in the 
location database. 
1) The Information Delivery of Anchors [1]: In this section, 
we introduce some notations that are defined in CDL: 
¾ Each sensor i maintains an entry of ),,( ikikik BGR  and 
ikD , where k represents the kth anchor. 
Enhanced Color-theory-based 
 Dynamic Localization in  
Mobile Wireless Sensor Networks1  
Tzu-Chien Chang, Kuochen Wang and Yi-Ling Hsieh
Department of Computer Science 
National Chiao Tung University 
Hsinchu, Taiwan 300 
kwang@cs.nctu.edu.tw 
A 
 
1525-3511/07/$25.00 ©2007 IEEE 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
3066
  
Table 1. Comparison of different localization approaches. 
Approach 
centralized 
or 
distributed 
Mobility 
Number 
of reference 
nodes 
(anchors) 
Mobile 
anchors 
AhLOS [4] distributed low medium no 
APS [5] distributed low medium no 
Centroid [6] distributed no high no 
HiLoc [6] distributed no low no 
LPS [7] distributed low low no 
MCL [2] distributed medium high yes 
MoAP [9] distributed no low yes 
CDL [1] centralized medium low no 
E-CDL 
(proposed) centralized medium low yes 
 
A. Average Hop Distance Estimation 
The first scheme is described below. We propose two 
simple and quick schemes to enhance the average hop distance 
estimate. When a sensor node intends to route data to some 
destination, it would select a nearby node that is close to the 
destination. According to this characteristic, we analyzed the 
behavior of sensors and discovered that they would select the 
next hop located between 0.5r and r (r is the radio range). As 
shown in Figure 1(a), sensor node S should choose a neighbor 
node 1 which is located larger than half of the radio range, as 
the next hop. However, in Figure 1 (b), if sensor node S 
choose a neighbor node 1, which is located less than half of 
the radio range, as its next hop, the following hop (node 2) 
must be larger than half of the radio range; otherwise it will 
result in the situation of Figure 1(c), where nodes 1 and 2 both 
are within the radio range. So it is expected that the candidate 
of the next hop should be located within the gray area in 
Figure 1. We assume sensor nodes are uniformly distributed in 
the area. We compute the expected value of the next hop 
distance as follows: 
P{x = points in gray area} = 
2
4
3
2
r
x
π
π  =
23
8
r
x , rxr ≤≤5.0  
E[x] = ∫ ⋅=⋅r 0.5 area}gray in  points  P{r dxxx = r97  
 
The advantage of this enhancement is that it is simple and 
quick for estimating the average hop distance. Unlike the DV-
Hop scheme, it must wait until the convergence of the 
topology to obtain a better average hop distance estimate. 
We now present our second scheme to further enhance the 
average hop distance estimate. In Figure 2, it is obvious that 
the shortest path length (S→1→2→3→4→D) is larger than 
the Euclidean distance, SD , especially when the node density 
is low [11]. Apparently if the node density is large enough, the 
shortest path length will be close to the Euclidean distance. 
We have verified this observation via simulation. The average 
hop distance will be adjusted based on the ratio of the 
Euclidean distance to the shortest path length. We will derive 
such a ratio via simulation offline. 
 
 
 
Figure 2. S→1→2→3→4→D is the shortest path from S to D. The straight 
line, SD , is apparently shorter than the shortest path. 
 
B. Mobility 
In order to further improve the location accuracy, we let 
anchor nodes as well as regular sensor nodes mobile in order 
to reduce possible isolations of sensor nodes in the multihop 
environment. As shown in Figure 3, sensor node movements 
can help reduce possible isolations of sensor nodes in the 
multihop environment. We put anchor nodes in the four 
corners of the square. And anchor nodes will move a radio 
range (r) along the square in every time slot. Some sensors 
may decrease their hop counts to anchor nodes, but others may 
increase. By employing mobile anchor nodes, we can reduce 
possible disconnections and the isolation problem of sensor 
nodes can be relieved. Therefore, the location accuracy can be 
improved. 
IV. SIMULATION RESULTS AND DISCUSSIONS 
In this section, we evaluate the proposed E-CDL algorithm. 
Besides, we have also implemented CDL [1] and MCL [2] for 
comparison. 
(a)         (b)        (c) 
S 
1 2 
r 
S 
1 
r 
2 2 
r: radio range 
S: sensor node 
1, 2: next two hops 
Figure 1. (a) Sensor node S chooses node 1, which is located within the 
gray area, as the next hop; (b) Sensor node S chooses node 1, which is 
located less than half of the radio range, as the next hop; (c) Sensor node 
S chooses nodes 1 and 2 as its next two hops. 
S 
1 
r 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
3068
 0
0.1
0.2
0.3
5 10 15 20 25 30 35 40 45 50
Time
Lo
ca
tio
n e
rro
r (
r)
CDL CDL2
 
Figure 5. Location errors of CDL2 via simulations ( rvsd == max,10 ). 
 
0
0.1
0.2
0.3
5 10 15 20 25 30 35 40 45 50
Time
Lo
ca
tio
n e
rro
r (
r)
CDL CDL3
 
Figure 6. Location errors of CDL3 via simulations ( rvsd == max,10 ). 
 
0
0.5
1
1.5
2
5 10 15 20 25 30 35 40 45 50
Time
Lo
ca
tio
n e
rro
r (
r)
CDL E-CDL MCL
 
Figure 7. Location accuracy comparison via simulations ( rvsd == max,10 ). 
 
In Figure 8, we can see that sensor density is a significant 
parameter in localization and the location accuracy increases 
as the sensor density increases. But if the sensor density is 
low, sensor nodes might not be uniformly distributed in the 
local area and the average hop distance would be inaccurate. 
Hence, when the sensor density is below 8, the location 
accuracy of E-CDL is close to CDL. 
We also evaluated the impact of anchor density on the 
location error of E-CDL. From simulation results, the location 
error of E-CDL with four anchor nodes in the corners is about 
0.1r. If we place more anchor nodes ( 5.0=dA ), the location 
error stays within 0.09r. Therefore, we only placed four 
anchor nodes in the corners for localization. 
 
0
0.2
0.4
0.6
0.8
1
2 4 6 8 10 12 14 16 18 20
Sensor Density
Lo
ca
tio
n e
rro
r (
r)
MCL CDL E-CDL
 
Figure 8. Impact of sensor density on location errors via simulations 
( rv =max ). 
 
V. EXPERIMENTS 
A. Experimental setup  
We have implemented and evaluated E-CDL on the MICAz 
Mote Development Kit [2]. The MICAz is a 2.4GHz, Zigbee 
compliant Mote module used for enabling low-power, wireless 
sensor networks [2]. The MICAz uses the nesC language [12] 
on the TinyOS platform. It can be used for residential or 
building monitoring and security, and hospital health-care 
systems. We can easily construct a localization system with 
this kit. We conducted several experiments in a 20 m × 20 m 
area with seven motes. And, we chose three motes as anchor 
nodes and four as sensor nodes. Sensor nodes were randomly 
deployed in the area; however, there are two ways to deploy 
anchor nodes: (1) anchor nodes deployed randomly and (2) 
anchor nodes deployed in the corners. We will compare these 
two schemes in section 5.B.  
B. Experimental results 
1) Anchor nodes deployed randomly: In this experiment, we 
first implemented the CDL algorithm with sensor and anchor 
nodes randomly deployed. In Figure 9, the location error of 
CDL is about 4.76 m. To enhance the localization accuracy, 
we computed the hop distance adjusting ratio (R) offline for 
different distribution of source and destination pairs. The ratio 
(R) we used is 0.88. We used this ratio to adjust the average 
hop distance. In Figure 10, the location error of CDL2 is about 
3.17 m which is better than that of CDL (4.76 m). 
2) Anchor nodes deployed in the corners: In this 
experiment, we placed anchor nodes in the corners [11]. In 
Figure 11, the location error of CDL is about 2.38 m. Again, 
we used the ratio, 88.0=R , to adjust the average hop 
distance. In Figure 12, the location error of CDL2 is about 
1.87 m. This demonstrated that the location error of CDL has 
been reduced from 4.76 m to 2.38 m and that of CDL2 has 
been reduced from 3.17 m to 1.87 m by placing the anchor 
nodes in the corners. Therefore putting anchor nodes in the 
corners can improve the location accuracy. 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
3070
An Adaptive Border-aware Broadcast in Mobile Ad 
Hoc Networks 
Chih-Hua Lin, Kuochen Wang and Yi-Ling Hsieh 
Department of Computer Science 
National Chiao Tung University 
Hsinchu 300, Taiwan 
kwang@cs.nctu.edu.tw 
 
 
Abstract—In mobile ad hoc networks (MANETs), broadcast is an 
essential function for many applications, such as route discovery 
and address resolution. In this paper, we propose an Adaptive 
Border-aware Broadcast (ABB) that requires only 1-hop neighbor 
information so as to reduce control overhead. Two enhancements 
are proposed. The first enhancement, called sparse mode 
enhancement, can increase the reachability by decreasing the 
“cancellation range” in sparse networks. The second 
enhancement, called dense mode enhancement, can reduce the 
rebroadcast times in order to have high saved rebroadcast by 
decreasing the “rebroadcast range” in dense networks. 
Simulation results have shown that the proposed ABB can 
achieve high reachability in all network environments. That is, 
our ABB is suitable for both dense and sparse MANETs. 
Averagely, ABB is comparable to ACB, 9% better than BB and 
33% better than DFCN in terms of reachability. For average 
latency, ABB is 33% better than ACB and 7% better than DFCN 
but 13% worse than BB. In addition, for saved rebroadcast, ABB 
is 16% better than ACB but 14% worse than BB and 35% worse 
than DFCN. However, both BB and DFCN have poor 
reachability, which is a more important metric for evaluating 
broadcast schemes. 
Keywords - broadcast; broadcast storm; mobile ad hoc network 
I.  INTRODUCTION 
A Mobile Ad Hoc Network (MANET) comprises a set of 
wireless mobile nodes without any infrastructure support. The 
wireless mobile nodes are autonomous. No centralized 
management is required. The topology of a MANET is 
dynamically changed because mobile nodes can move freely. A 
mobile node can communicate with other mobile nodes in 
single-hop or multi-hop fashion. The MANET can be applied 
to areas where fixed network infrastructures are difficult or 
unavailable to setup (e.g., battlefield or disaster relief), or to 
areas for convenience consideration (e.g., interactive 
conferencing or home networking). 
In the MANET, broadcast is an essential function and is 
frequently used. Some applications, such as route discovery, 
sending an alarm signal or address resolution, in MANETs 
require broadcast to disseminate messages to each node. 
Flooding is a conventional broadcast protocol that each node 
will rebroadcast the broadcast packet when it receives a 
broadcast packet for the first time. Flooding is very expensive 
due to redundant retransmissions, contention and collision, 
which is termed as the broadcast storm problem [1].  
Several broadcast protocols were proposed to resolve this 
problem. The broadcast protocols can be divided into three 
categories according to the required information: local 
knowledge-based broadcast [1][2], neighbor-based broadcast 
[3][4] and location-based broadcast [5]. In the local 
knowledge-based broadcast protocols, no neighbor information 
and location information will be maintained. Thus the local 
knowledge-based broadcast protocols have low control 
overhead and require less information. However, a 
disadvantage of local knowledge-based broadcast protocols is 
that the reachability will degrade sharply in sparse networks. 
The neighbor-based broadcast protocols have high control 
overhead because each node needs to periodically send 
HELLO messages in order to maintain neighbor information. 
The location-based broadcast protocols need GPS equipment or 
some localization techniques to get location information. 
Therefore, the location-based broadcast protocols are very 
costly.  
In this paper, we propose a neighbor-based knowledge-
based broadcast approach, called Adaptive Border-aware 
Broadcast (ABB). The basic idea is that for a node in a sparse 
(dense) network, the sparse (dense) mode enhancement is 
enabled to have high reachability (saved rebroadcast). The 
sparse mode enhancement and dense mode enhancement will 
be described in Section III. Each node switching to either 
sparse mode or dense mode is based on its number of 
neighbors. 
II. RELATED WORK 
Most broadcast protocols require nodes to wait for a 
random time interval for collecting more information in order 
to determine whether to rebroadcast the broadcast packet. That 
random time interval is termed Random Assessment Delay 
(RAD) [6]. In this section, we review some existing broadcast 
protocols: 
Counter-based broadcast (CB) [1]: When a node receives a 
broadcast packet for the first time, it will initial a counter with 
one and wait for a RAD. During the RAD, if the node receives 
a redundant broadcast packet, the counter will increase by one. 
If the counter is equal to a counter threshold C, this node will 
cancel the rebroadcast of this broadcast packet. Otherwise, 
after the RAD expires, this node will rebroadcast the broadcast 
packet.  
1 This work was supported by the National Science Council under Grant 
NSC95-2221-E-009-022 
B. Dense Mode Enhancement 
In dense networks, because the number of nodes is enough, 
the reachability problem is not the main issue. Therefore, our 
dense mode enhancement will focus on reducing the 
rebroadcast times by decreasing the “rebroadcast range.” When 
nodes receive a broadcast packet for the first time, only nodes 
within the “rebroadcast range” will wait for a DAD to 
rebroadcast the broadcast packet whereas nodes not in the 
“rebroadcast range” cancel their rebroadcast of the broadcast 
packet. As shown in Fig. 3, the “rebroadcast range” of node 1 
is decreased from the transmission range of node 1 (a circle) to 
the ring filled with oblique lines. When node 1 sends a 
broadcast packet, the nodes in the node 1’s transmission range 
will receive the broadcast packet for the first time. Nodes 
within the dotted circle will cancel their rebroadcast. Since 
nodes 2, 3 and 4 locate within the “rebroadcast range” and they 
are the outmost nodes from the sender node 1, they wait for a 
shorter DAD. That is, they rebroadcast the broadcast packet 
earlier. Other nodes in the “rebroadcast range” will cancel their 
rebroadcast because they receive a redundant broadcast packet. 
As a result, only nodes 2, 3 and 4 rebroadcast the broadcast 
packet. Note that in the BB, nodes 2, 3, 4 and 5 will all 
rebroadcast the broadcast packet, whereas in our dense mode 
enhancement, only nodes 2, 3 and 4 will rebroadcast the 
broadcast packet. Our dense mode enhancement can help 
decrease the rebroadcast times.  
 
Fig. 3. The dense mode enhancement. 
To implement our dense mode enhancement, we set a 
distance threshold, Dd. However, Dd can not be equal to R. We 
observed that if Dd is set to R, then no node locates within the 
“rebroadcast range,” and no node will rebroadcast the 
broadcast packet. For this reason, Dd has an upper bound, 
termed as maxDd. The maxDd is smaller than R. Dd can be set 
between 0 to maxDd. The maxDd will be derived via simulation. 
Each node will run the following procedure (S1 through S4): 
S1. On receiving a broadcast packet P for the first time, if 
the distance from the sender < Dd, exit the procedure. 
Otherwise, the node sets a DAD.  
S2. Wait for the DAD to expire. During the waiting, if the 
broadcast packet P is received again, interrupt the 
waiting and go to S4. 
S3. Rebroadcast the broadcast packet P. Exit the procedure. 
S4. Cancel the rebroadcast of P. The node is inhibited from 
rebroadcast P in the future. Then, exit the procedure. 
C. Adaptive Border-aware Broadcast (ABB) 
The proposed sparse mode enhancement and dense mode 
enhancement can only work well in sparse networks and dense 
networks, respectively. In addition, both enhancements use 
fixed thresholds Ds and Dd, regardless of sparse and dense 
degrees. For better performance, when a node is in a sparser 
network, Ds should be lower. When a node is in a denser 
network, Dd should be higher. To work well in all network 
environments, we propose an adaptive border-aware broadcast 
(ABB) in which each node will dynamically adjust the 
thresholds, Ds and Dd based on its number of neighbors. We 
extend fixed distance thresholds Ds and Dd into function Ds(n) 
and function Dd(n), where n is the number of neighbors. For 
estimating n, each node can send a HELLO message 
periodically. Each node can calculate n based on the received 
HELLO message. Each node will run the following procedure 
(S1 through S5), where the two enhancements are integrated:  
S1. On receiving a broadcast packet P for the first time, if 
the distance from the sender < Dd(n), exit the procedure. 
Otherwise, the node sets a DAD.  
S2. Wait for the DAD to expire. During the waiting, if the 
broadcast packet P is received again, interrupt the 
waiting and go to S4. 
S3. Rebroadcast the broadcast packet P. Exit the procedure. 
S4. If the distance from the sender < Ds(n), proceed to S5. 
Otherwise resume the interrupted waiting in S2. 
S5. Cancel the rebroadcast of P. The node is inhibited from 
rebroadcast P in the future. Then, exit the procedure. 
We define the functions of Ds(n) and Dd(n) as follows: 
⎪⎪⎩
⎪⎪⎨
⎧
>
≤≤×⎥⎦
⎤⎢⎣
⎡
−
−×
=
1
1
1
,
1,
1
)1(1
)(
nnR
nnR
n
n
nDs
)1(  
( )
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
>
≤≤×−
−
<
=
2
21
12
1
1
,
,
,0
)(
nnDmax
nnnDmax
nn
nn
nn
nD
d
dd
)2(  
We will derive the values of n1 and n2 via simulation [3]. 
IV. SIMULATION RESULTS AND DISCUSSION 
To evaluate our proposed approach, ABB, three 
performance metrics are observed: REachability (RE), 
ReBroadcast (SRB) and average latency. RE indicates the ratio 
of the number of nodes that receive the broadcast packet to the 
number of nodes that are reachable, directly or indirectly from 
the source node in the network. SRB is computed as (r - t)/r, 
where r is the number of nodes receiving the broadcast packet, 
0%
10%
20%
30%
40%
50%
60%
70%
80%
90%
100%
1×1 3×3 5×5 7×7 9×9 11×11
Network size
(SRB)
40%
45%
50%
55%
60%
65%
70%
75%
80%
85%
90%
95%
100%
(RE)
DFCN BB ACB ABB
DFCN BB ACB ABB
 
Fig. 7. Comparison of ABB, ACB and DFCN for SRB (shown in bars) and 
RE (shown in lines) under different network sizes. 
Fig. 8 compares the average latency of BB, ACB, DFCN 
and the proposed ABB. Because our ABB uses DAD instead of 
RAD, the node which is farther from its sender rebroadcasts 
the broadcast packet faster. As a result, the average latency of 
our ABB is shorter than ACB, but longer than BB in sparse 
networks because our ABB increases the number of nodes for 
rebroadcasting the broadcast packet in order to resolve the 
reachability problem. The average latency of DFCN is longer 
than that of BB, ACB and ABB in dense networks because the 
transmission time of DFCN is prolonged due to its 
piggybacking of 1-hop neighbors’ IDs in the broadcast packet.  
However, we found that DFCN has shorter average latency 
than BB, ACB and our ABB in sparse networks. This is 
because DFCN has a lower RE in sparse networks; thus the 
number of nodes which receive the broadcast packet is lower. 
As a result, the number of nodes which rebroadcast the 
broadcast packet is also lower. Therefore, the average latency 
is lower as well. Nevertheless, our proposed ABB is 33% better 
than ACB and 7% better than DFCN but 13% worse than BB 
in terms of average latency for both sparse and dense networks 
as a whole. 
V. CONCLUSION 
In this paper, we have presented a neighbor-based 
broadcast approach, called Adaptive Border-aware Broadcast 
(ABB). The basic idea of our approach is that for a node in a 
sparse (dense) network, the sparse (dense) mode enhancement 
is enabled. The simulation results reveal that our ABB can 
achieve higher RE in all network environments and has higher 
SRB in dense networks. This implies that our ABB is suitable 
for both dense and sparse MANETs. In summary, the propose 
ABB is comparable to ACB [4], 9% better than BB [2] and 
33% better than DFCN [13] in terms of reachability. For 
average latency, ABB is 33% better than ACB and 7% better 
than DFCN but 13% worse than BB. In addition, for saved 
rebroadcast, ABB is 16% better than ACB but 14% worse than 
BB and 35% worse than DFCN. Note that BB and DFCN have 
poor reachability, which is a more important metric for 
evaluating broadcast schemes. 
0
0.02
0.04
0.06
0.08
0.1
0.12
0.14
1×1 3×3 5×5 7×7 9×9 11×11
Network size
Av
era
ge
 la
ten
cy
 (s
)
DFCN BB ACB ABB
 
Fig. 8. Comparison of the ABB, ACB and DFCN for average latency (in 
seconds) under different network sizes. 
REFERENCES 
[1] Y.C. Tseng, S.Y. Ni, Y.S. Chen, and J.P. Sheu, “The broadcast storm 
problem in a mobile ad hoc network,” Wireless Networks, vol. 8, nos. 2-
3, pp. 153-167, Mar.-May 2002.  
[2] C. Zhu, M.J. Lee and T. Saadawi, “A border-aware broadcast scheme for 
wireless ad hoc network,” in Proc. IEEE Consumer Communications 
and Networking Conference, Jan. 2004, pp. 134-139. 
[3] Y.C. Tseng, S.Y. Ni, and E.Y. Shih, “Adaptive approaches to relieving 
broadcast storms in a  wireless multihop mobile ad hoc network,” IEEE 
Transactions on Computers, vol. 52, no. 5, pp. 545-557, May 2003. 
[4] L. Hogie, M. Seredynski, F. Guinand, and P. Bouvry, “A bandwidth-
efficient broadcasting protocol for mobile multi-hop ad hoc networks,” 
in Proc. International Conference on Networking,, pp. 71-71, April 2006. 
[5] A. Durresi, V. Paruchuri, S. S. Iyengar, and R. Kannan, “Optimized 
broadcast protocol for sensor networks, IEEE Transactions on 
Computers, pp. 1013-1024, Aug. 2005. 
[6] B. Williams and T. Camp, “Comparison of broadcasting techniques for 
mobile ad hoc networks,” in Proc. 3rd ACM International Symposium 
on Mobile Ad Hoc Networking and Computing, 2002, pp. 914-205. 
[7] X. Zeng, R. Bagrodia, and M. Gerla, “GloMoSim: a library for parallel 
simulation of large-scale wireless networks,” in Proc. 1998 12th 
Workshop on Parallel and Distributed Simulations, May 1998, pp. 154-
161. 
[8] C. Bettstetter, G. Resta, and P. Santi, “The node distribution of the 
random waypoint mobility model for wireless ad hoc networks,” IEEE 
Transactions on Mobile Computing, vol. 2, no.3, pp. 257-269, July-Sept. 
2003. 
 
energy efficient routing algorithm are described in 
Section 4 in detail. Section 5 evaluates and compares our 
approach with some classical approaches. Simulation 
results demonstrate the merits of our routing algorithm. 
Finally, concluding remarks are given in Section 6. 
 
2. Preliminary of CDL 
 
In this section, we introduce the color-theory-based 
dynamic localization, the CDL algorithm [1]. This 
centralized localization algorithm is based on the color 
theory to perform positioning in mobile WSNs. It builds 
a location database in the server, which maps a set of 
RGB values to a geographic position. And the distance 
measurements by sensor nodes are based on the DV-Hop 
[3]. When a sensor node receives anchors’ RGB values, 
it calculates its own RGB values. The node then sends its 
RGB values to the server so that the server can find the 
most probable location by looking up a location 
database. 
 
2.1 The Information Delivery of Anchors [1] 
 
In this section, we introduce some notations that are 
defined in CDL: 
 
¾ Each node i maintains an entry of (Rik,Gik,Bik) and 
Dik, where k represents the kth anchor. 
¾ Davg is the average hop distance, which is based on 
DV-Hop [3]. 
¾ hijis the hop distance between nodes i and j. 
¾ Dij represents the hop distance from anchor k to 
node i : Dik = Davg×hij  
¾ Range represents the maximum distance that a 
color can propagate. 
¾ (Rik, Gik, Bik) are the RGB values of anchor k. 
¾ (Hik, Sik, Vik) are the HSV values of anchor k 
received by the ith node. 
 
The RGB values of anchors are assigned randomly from 
0 to 1. After a sensor node i obtains each anchor k’s 
RGB values and hop distance (hik), the RGB values are 
first converted to HSV values by equation (1): 
 
(Hik, Sik, Vik)= RGBtoHSV (Rk, Gk, Bk)            (1) 
 
With hik, Dik can be computed. The updated HSV values 
corresponding to node i of anchor k are calculated by 
equation (2) 
Hik = Hk , Sik = Sk , kVRange
ikD
ikV ×−= )1(         (2) 
The RGB values of node i corresponding to anchor k are 
then calculated: 
 
(Rik, Gik, Bik) = HSVtoRGB (Hik, Sik, Vik)          (3) 
 
The RGB values of node i are the mean of the RGB 
values corresponding to all anchors, and are computed as 
follows: 
∑=×=
n
k ik
BikGikRni
BiGiR 1
),,(
1
),,(             (4) 
where n is the number of anchors that node i received 
their RGB values. 
 
2.2 Establishment of a Location Database [1] 
 
A location database is established when the server 
obtains the RGB values and locations of all anchors. The 
mechanism is based on the theorem of the mixture of 
different colors. With the RGB values of all anchors, the 
RGB values of all locations can be computed by 
exploiting the ideas of color propagation and the mixture 
of different colors. First, the distance between each 
location i and anchor k is obtained: 
dik = ( ) 2)(2 kyiykxix −+−              (5) 
where (Xi, Yi) is the coordinate of location i, and (Xk ,Yk) 
is the location of anchor k. Next, we have to calculate the 
HSV values of each location i corresponding to anchor k: 
 
(Hk, Sk, Vk) = RGBtoHSV(Rk, Gk, Bk)              (6) 
(Hk, Sk, Vk) , Sik = Sk , kVRange
ikd
ikV •−= )1(       (7) 
The RGB values of location i corresponding to anchor k 
can be derived by equation (8): 
 
(Rik, Gik, Bik) = HSVtoRGB(Hik, Sik, Vik)           (8) 
 
Then the RGB values of location i can be calculated by 
averaging all RGB values of location i corresponding to 
N anchors. 
∑=×=
N
k ik
BikGikRNi
BiGiR 1
),,(
1
),,(           (9) 
where N is the number of anchors.  
In this way, the location for each sensor node can be 
constructed in the location database by maintaining the 
coordinate (Xi, Yi) and the RGB value (Rk, Gk, Bk) at 
each location i. Then, the location of a sensor node can 
be acquired by looking up the location database based on 
the derived RGB values. 
 
2.3 Mobility [1] 
 
When a mobile node arrives at a new location, it 
sends an anchor information request to neighboring 
nodes. If a neighboring node has the anchors’ RGB 
values, it transmits a packet that includes the RGB 
values of each anchor and the hop count from the anchor 
to the node. After receiving the packets from neighbors, 
node i compares and calculates the Dik to the kth anchor 
and gets the smallest Dik. With the RGB values and Dik 
to all anchors, node i can update its RGB values using 
equations (1), (2), (3), and (4). The new RGB values are 
then transmitted to the server and the position of node i 
will be updated by looking up the location database. 
 
 
aggregate data received from cluster heads. 
¾ All sensor nodes have a uniform energy at the 
beginning. 
¾ Each node wakes up at a fixed rate to check if its 
RGB values have changed. 
¾ All sensor nodes are mobile. 
¾ CSMA/CA is used to avoid collision of packets. 
 
4.2 Setup Phase 
 
In this phase, we need to choose a sensor node to be 
the cluster head in a cluster.. First, we define a grid size 
as RR× , where R is a sensor node’s radio range. All 
sensor nodes in a cluster (grid) are within their cluster 
head’s radio range. Secondly, each anchor floods its 
RGB values and average hop distance to each sensor 
node so that each sensor node can calculate its hop count 
to the anchor and adjust its RGB values based on the hop 
count. Then, the server will receive the RGB values from 
each sensor node. By looking up the location database, 
the server can calculate each sensor node’s location and 
choose a cluster head which is close to the center of the 
grid, as shown in Figure 1. 
 
 
 
Figure 1. Setup phase 1: Choose a cluster head which is close to the 
center of the grid. 
 
Finally, the server uses the closest anchors to send 
information to the selected sensor nodes to let them 
know that they are cluster heads, as shown in Figure 2. 
 
 
 
Figure 2. Setup phase 2: Server uses the closest anchors to send 
information to the selected sensor nodes to let them know that they are 
cluster heads. 
 
4.3 Data Dissemination Phase 
 
After the setup phase, each cluster head will receive 
its cluster member’s information. If a sensor node’s 
position changes, its hop counts to the anchors may also 
change. The node then updates its RGB values and 
transmits them to its cluster head. When a cluster head 
receives information from its cluster member, it will 
setup a timer and wait for other possible information 
from other members until the timer expires. The 
advantage of setting up a timer is that we can wait for 
other cluster members to see if they have data to send. In 
this way, communication cost can be reduced. 
When a cluster head wants to forward the aggregate 
data toward the server, two steps are performed in CEER. 
In the first step, it selects its one hop neighbors that are 
closer to a nearby anchor than itself as the next probable 
hop by comparing their respective RGB values, as 
shown in Figure 3. In the second step, among those 
selected cluster members, the sensor node with the 
highest energy level is selected as the next hop, as shown 
in Figure 4. The selected node will receive the 
aggregated data and again follows these two steps to 
transmit the data to its next hop until reaching the server 
via a nearby anchor. 
Our algorithm does not have the topology hole 
problem. We use the RGB values of each sensor node to 
route data to the destination. Each sensor node calculates 
the RGB values based on the HSV values and the hop 
count of each anchor. Because we use the hop distance 
to calculate the V value in HSV values, each 
corresponding RGB values will decrease from the 
corresponding anchor to each sensor node. Since each 
sensor node can receive the hop counts from other sensor 
nodes, we can always find a sensor node with its RGB 
values closer to that of the anchor. So we will not 
encounter the topology hole problem when routing data 
to the anchor. 
 
 
 
Figure 3. Data dissemination step 1: Select one hop neighboring nodes 
closer to the anchor. 
 
4.4 Refinement Phase 
 
There are several situations that a cluster head may 
fail to do its job. For example, if a cluster head has low 
power, it may not live long enough to be a cluster head. 
On the other hand, if a cluster head moves away from the 
grid, it may lose contact with some cluster members. In 
these situations, it is necessary to choose another sensor 
node to become a new cluster head so that the aggregate 
data can still be forwarded. 
However, if we change cluster heads too often, it will 
waste too much energy and communication cost to 
switch the cluster head’s job from one sensor node to 
another. Our approach uses the server to choose cluster 
Anchor 
Cluster head 
Selected sensor 
Unselected sensor 
Anchor 
Cluster head
Anchor 
Cluster head
Sensor 
the highest energy levels of neighboring nodes, which is 
more efficient than ESDSR. 
 
0
1
2
3
4
5
200 300 400 500
Number of nodes
La
ten
cy
 pe
r p
ac
ke
t(s
ec
) CEER
ESDSR
 Figure 6. Latency per packet vs. number of nodes. 
 
0
10
20
30
40
50
200 300 400 500
Number of nodes
To
tal
 en
erg
y c
on
su
mp
tio
n
CEER
ESDSR
Figure 7. Energy consumption vs. number of nodes (without cluster 
heads) 
 
In Figure 7, we simulated our routing algorithm 
without cluster heads to verify that our routing algorithm 
without clustering also worked well. We only used two 
steps in section 4.3 such that each node will route its data 
to the nearest anchor by itself. The figure shows that our 
algorithm still works well without cluster heads and 
saves more energy than ESDSR 
We also used the same network model as that of 
ESDSR [2] to validate the correct implementation of the 
ESDSR and CEER. Forty sensor nodes were randomly 
placed in an area sized from 200 m × 200 m, 300 m × 
300 m, 400 m × 400 m, to 500 m × 500 m, respectively, 
while keeping the same numbers of mobile nodes (40) 
and connections (20). Figure 8 shows that, in a small 
area, our algorithm did not perform well compared to 
ESDSR. This is because we used a cluster head to 
forward transmissions, even if a node is within the 
transmission range of an anchor. When the area grows 
bigger, the routing path is long enough so that the 
overhead of routing packets to the cluster head can be 
reduced. Therefore, CEER is more scalable than ESDSR 
when the area is growing bigger. 
 
6. Conclusion 
 
In this paper, we have presented a color-theory-based 
energy efficient routing algorithm (CEER) based on a 
color-theory-based dynamic localization algorithm 
(CDL). The basic idea of CEER is based on comparing 
the RGB values of neighboring nodes and those 
neighboring nodes that are closer to a nearby anchor are 
selected. Among these selected neighboring nodes, a 
sensor node with the highest energy level is chosen to be 
the next hop node toward the server via the anchor. 
Simulation results have shown that our routing algorithm 
can save 50% - 60% energy compared to ESDSR in 
mobile wireless sensor networks. In addition, the latency 
per packet of CEER is 50% less than that of ESDSR. 
 
0
2
4
6
8
10
12
40 90 160 250
Area (1000      )
N
um
be
r o
f d
ea
d 
no
de
s
CEER
ESDSR
Figure 8. Number of dead nodes at the end of simulation. 
 
7. References 
 
[1] Shen-Hai Shee, Kuochen Wang, and Yi-Ling Hsieh 
“Color-theory-based Dynamic Localization in Mobile Wireless 
Sensor Networks,” in Proc. of Workshop on Wireless, Ad Hoc, 
Sensor Networks, pp. 73-78, Aug. 2005. 
 
[2] Mohammed Tarique, Kemal E. Tepe, and Mohammad 
Naserian, ”Energy Saving Dynamic Source Routing for Ad 
Hoc Wireless Networks,” in Proc. of Modeling and 
Optimization in Mobile, Ad Hoc, and Wireless Networks, pp. 
305-310. April 2005. 
 
[3] J.G. Lin and S.V. Rao, “Mobility-enhanced Positioning in 
Ad Hoc Networks,” in Proc. IEEE Wireless Communications 
and Networks Conference, vol.3, pp. 1832-1837, Mar. 2003. 
 
[4] W. Heinzelman, J. Kulic and H. Balakrishnan,” Adaptive 
Protocols for Information Dissemination in Wireless Sensor 
Networks,” in Proc. ACM/IEEE MobiCom, pp. 174-85, Aug. 
1999. 
 
[5] F. Ye et al., “A Two-Tier Data Dissemination Model for 
Large-Scale Wireless Sensor Networks,” in Proc. ACM/IEEE 
MobiCom, pp. 148-159, 2002. 
 
[6] Y.Yu, D. Estrin, and R.Govindan, “Geographical and 
Energy-Aware Routing: A Recursive Data Dissemination 
Protocol for Wireless Sensor Networks,” UCLA Comp. Sci. 
Dept. Tech. Rep., UCLA-CSD TR-010023, May 2001. 
 
[7] J. Borch, D. B. Johnson, and D. A. Maltz, “The Dynamic 
Source Routing Protocol for Mobile Ad Hoc Networks,” IETF 
Internet_Draft, draft-ietf-manet-dsr-00.txt, March 1998. 
 
[8] J. Yoon, M. Liu, B. Noble, “Random waypoint considered 
harmful,” in Proc. IEEE INFOCOM. pp. 1312-1321. April 
2003. 
 
[9] Hongyi Wu, Chong Wang, and Nian-Feng Tzeng, “Novel 
Self-Configurable Positioning Technique for Multihop 
Wireless Networks,” IEEE/ACM Transaction on Networking, 
Vol. 13, No. 3, pp. 609-621, June 2005. 
 
[10] Sooyeon Kim, Sang H. Son, John A. Stankovic, and 
Yanghee Choi, “Data Dissemination Over Wireless Sensor 
Color-theory-based Dynamic Localization in  
Mobile Wireless Sensor Networks 
 
Shen-Hai Shee and Kuochen Wang  
Department of Computer and Information Science 
National Chiao Tung University 
Hsinchu, Taiwan 300 
 
 
Abstract 
 
Location information is critical to wireless 
sensor network (WSN) applications. With the help 
of location information, for example, routing can 
be performed more efficiently. Since the GPS 
receiver is expensive, existing localization 
approaches use a small number of seed nodes that 
are aware of their locations to help estimate the 
locations of other sensor nodes in fixed WSNs. 
However, there is few schemes involved mobility of 
sensor nodes. In this paper, we propose a novel 
localization approach, Color-theory based 
Dynamic Localization (CDL), which is based on 
color theory to exploit mobile positioning in 
mobile WSNs. CDL makes use of the broadcast 
information from all seed nodes, such as their 
locations and RGB values to help the server to 
create a location database and assist each sensor 
node to compute its RGB values. Then, the RGB 
values of all sensor nodes are sent to the server for 
localization of the sensor nodes. CDL is easy to 
implement and is a centralized approach; thus it is 
very suitable for applications that need a 
centralized server to collect user data and monitor 
user activities, such as community health-care 
systems and hospital monitor systems. Simulation 
results show that in the MSNs, the location 
accuracy of CDL is 40% - 50% better than MCL 
[9]. 
 
 
1  Introduction 
 
A wireless sensor network (MSN) consists of a 
collection of wireless sensor nodes within a 
particular area. For WSNs, localization is a critical 
issue. By exploiting location information, routing 
protocols can operate more efficiently. To obtain 
locations, nodes may be equipped with a GPS 
receiver, which is considered accurate and reliable; 
nevertheless, it is expensive and not feasible for 
sensor nodes due to the power constraint.   
Existing localization approaches can be divided 
into two categories roughly: range-based and 
range-free. In range-based approaches, certain 
ranging technologies are employed by sensor 
nodes to measure the distances between nodes. 
With the knowledge of distances to at least three 
location-aware nodes or seeds, nodes are able to 
calculate their locations by performing 
triangulation. In range-free approaches, 
localization is performed without the need of 
ranging hardware; thus they are more 
cost-efficient and consume less energy. But as it 
should be, they are coarser in terms of location 
accuracy. 
For the design of localization approaches for 
mobile MSNs, mobility presents a critical issue. 
Lots of localization approaches are presented [1] 
[2][6][8]. However, few of them deal with mobile 
localization for mobile WSNs. 
The paper is organized as follows. In section 2, 
the related work of localization is reviewed. In 
section 3, the design approach is proposed. 
Simulation of the design approach is performed 
and discussed in section 4. Finally, concluding 
remarks are given in section 5. 
 
 
2  Related Work 
 
In this section, existing localization approaches 
are classified and reviewed. Because of the diverse 
properties of environments and signals used, 
existing localization methods are classified into 
indoor and outdoor localization systems. 
 
2.1  Indoor localization systems 
 
The design and deployment of indoor 
localization systems are challenge tasks due to 
indoor characteristics. With the existence of metal 
and reflective materials that influence the 
propagation of signals and cause multipath effects 
and interference, the way of designing indoor 
localization systems is completely different from 
that of outdoor localization systems. However, on 
the other point of view, the in-building localization 
system can exploit the spatial properties of the 
region to promote efficiency and accuracy. 
topology of all seeds is obtained as well. A 
location database is constructed by the server. In 
the fourth phase, the RGB values of sensor nodes 
are transmitted to the server, which will calculate 
the current location of each sensor node. The 
detail of the proposed algorithm is described as 
follows. 
 
3.2   The Information Delivery of Seeds 
 
In this section, we first define some notations 
for CDL and describe the first phase of the 
proposed approach, namely, the distribution of the 
RGB values of seeds to whole sensor nodes. First 
of all, some notations need to be defined: 
¾ Each node i maintains a table of      
),,( ikikik BGR  and ikD , where k represents 
the kth seed.  
¾ avgD is the average hop distance. 
¾ ijh  is the hops between nodes i and j. 
¾ ikD  represents the hop distance from seed 
k to node i : ikavgik hDD ×=  
¾ Range represents the maximum distance that 
a color can propagate. 
¾ ),,( kkk BGR  is the RGB value of seed k. 
¾ ),,( ikikik VSH  is the HSV values of seed k 
received by the ith node. 
The RGB values of seeds are assigned 
randomly from 0 to 1. After a sensor node obtains 
each seed’s RGB values and the average distance 
and hop counts to other seeds, the RGB values are 
first converted to HSV values by equation (1). 
),,( kkk VSH  = RGBtoHSV ),,( kkk BGR   (1) 
The updated HSV values corresponding to node i 
of seed k are calculated by equation (2).  
kik HH = ,   kik SS = , 
k
ik
ik VRange
DV •−= )1(                (2)
            
                                                                         
The RGB values of node i corresponding seed k 
are then calculated: 
),,( ikikik BGR  = HSVtoRGB ),,( ikikik VSH  (3) 
 
The RGB values of node i are the mean of the 
RGB values of all seeds. 
∑
=
×=
n
k
ikikikiii BGRn
BGR
1
),,(1),,(    (4) 
 
where n is the number of seeds that node i 
received. 
Each seed will broadcast its RGB values and 
location. With the knowledge of the RGB values 
and locations of all seeds, the server can construct 
a location database. 
 
3.3  The Establishment of Location Database 
 
The establishment of a location database is 
performed when the server obtains the RGB 
values and coordinates (locations) of all seeds. 
The mechanism is based on the theory of the 
mixture of different colors. With the RGB values 
of all seeds, the RGB values of all locations can be 
computed by exploiting the ideas of color 
propagation and the mixture of different colors. In 
the first place, the distance between every location 
i and seed k is obtained: 
 
ikd = ( ) 22 )( kiki yyxx −+− (5)
               
where ),( ii yx  is the coordinate of location i, 
and ),( kk yx  is the location of seed k. First of 
all, we have to calculate the HSV of every location 
i corresponding to seed k. 
),,( kkk VSH  = RGBtoHSV ),,( kkk BGR (6)  
          
kik HH = , kik SS =  ,
k
ik
ik VRange
dV •−= )1(        (7) 
                  
),,( ikikik BGR  = HSVtoRGB ),,( ikikik VSH (8)   
The RGB values of location i: 
∑
=
×=
N
k
ikikikiii BGRN
BGR
1
),,(1),,(  (9) 
where N is the number of seeds.  
 
In this way, the location for each sensor node 
can be constructed in the location database by 
maintaining the coordinate ),( ii yx and the 
RGB values ),,( iii BGR  at each location i. The 
location of a sensor node can be acquired by 
looking up the location database. 
 
3.4  Mobility 
 
In [13] it showed mobile nodes can bridge gaps 
between nodes where the accurate location 
information cannot be obtained. In addition, it also 
showed that mobility is helpful for the 
improvement of localization accuracy. When a 
mobile node arrives at a new location, it sends a 
Fig. 3 shows the accuracy of MCL and CDL 
improve with the increasing of the seed density, 
with Vmax = R and nd = 10.  MCL performs 
localization by collecting information from seeds 
or sensor nodes which is one hop away from seeds. 
As a result, the seed density is a critical factor for 
MCL. The location accuracy improves 
significantly as the seed density soars. For CDL, 
its location accuracy does not rely on sufficient 
numbers of seed nodes, because CDL collects 
location information from all seeds. It performs 
good with few seeds compared to MCL. 
 
Fig. 3.  Impact of seed density. 
 
 
5 Conclusions  
 
We have proposed an efficient Color-theory 
based Dynamic Localization (CDL) for mobile 
wireless sensor networks. The basic idea of CDL 
is based on color theory, which exploits the 
changes of colors with distances to localize sensor 
nodes. CDL is suitable in the scenarios that need a 
centralized server to collect and monitor all users, 
such as in health-care systems and hospital 
monitor systems. Our simulation results reveal 
that the location estimate error can be reduced up 
to 0.2 R when the seed density = 0.8, and node 
density = 0.5. In addition, the location accuracy of 
CDL is 40% - 50% better than that of MCL.  
 
 
6 Acknowledgement 
 
This work was supported by the National Science 
Council under Grant NSC 93-2213-E-009-124. 
 
 
References 
 
[1] F. Mondinelli and Z. M. Kovacs-Vajna, 
“Self-localizing sensor network 
architectures,” in IEEE Transactions on 
Instrumentation and Measurement  vol. 53, 
pp. 277-283, Apr. 2004. 
[2] Y. Shang, J. Meng and H. Shi, “A new 
algorithm for relative localization in wireless 
sensor networks,” in Proc. Parallel and 
Distributed Processing Symposium, p. 24a, 
Apr. 2004. 
[3]  P. Bahl and V. N. Padmanabhan., “RADAR: 
an in-building RF-based user                
location and tracking system,” in Proc. the 
13th IEEE International Symposium on 
Personal, Indoor and Mobile Radio 
Communications, vol. 2, pp. 750-754, Sept. 
2002. 
[4] K. Kaemarungsi and P. Krishnamurthy, 
“Properties of indoor received signal strength 
for WLAN location fingerprinting,” in Proc. 
MOBIQUITOUS, pp. 14-23, Aug. 2004. 
 
[5]  N. B. Priyantha, A. Chakraborty and H. 
Balakrishnan, “The cricket location-support 
system,” in Proc. MOBICOM, pp. 32-43, Aug. 
2000. 
[6]  D. Niculescu and B. Nath, “Ad hoc 
positioning system (APS),” in IEEE  
GLOBECOM, vol. 5, pp. 2926-2931, Nov. 
2001. 
[7]  N. Bulusu , J. Heidemann and D. Estrin, 
“GPS-less low-cost outdoor localization for 
very small devices,” in IEEE Personal 
Communications, vol. 7, pp. 28-34, Oct. 2000. 
[8]  T. Kitasuka , T. Nakanishi and A. Fukuda, 
“Location estimation system using wireless 
ad-hoc network,” in Proc. Wireless Personal 
Multimedia Communications, vol. 1, pp. 305 
-309, Oct. 2002. 
[9]  M. L. Sichitiu and V. Ramadurai, 
“Localization of wireless sensor networks 
with a mobile beacon,” in Proc. IEEE 
International Conference on Mobile Ad-hoc 
and Sensor Systems, pp. 174-183, Oct. 2004. 
[10]  L. Hu and D. Evans, “Localization for 
mobile sensor networks,” in Proc. 10th 
Annual International Conference on Mobile 
Computing and Networking, Sep. 2004. 
[11]  P. Zelanski and M. P. Fisher, “The camera” 
[Online] Available: 
http://www.cse.fau.edu/~maria/COURSES/C
OP4930-GS/color2notes.htm. 
[12] E. Vishnevsky, “RGB to HSV & HSV to 
RGB” [Online] Available: 
http://www.cs.rit.edu/~ncs/color/t_convert.ht
ml. 
[13] J. G. Lim and SV Rao, “Mobility-enhanced 
positioning in ad hoc networks,” in Proc. 
Wireless Communications and Networking, 
Mar. 2003. 
 Abstract — In the paper, we propose a novel scheduling 
mechanism without modifying the existing IEEE 802.11 MAC, 
called wireless Radio-Matching Protocol (RMP). It takes account of 
interferences in wireless mesh networks to achieve maximum 
spatial reuse by using pre-specified radio transmissions. In contrast 
with existing random access methods, The RMP adopts 
decentralized controlled access to avoid nodes from unintentional 
packet collisions. The RMP adopts a chain topology of bidirectional 
transmissions, where nodes are spaced so that radios of 
non-neighboring nodes do not interference with each other. 
Simulation results indicate that the throughput of RMP is about 
30% better than that of Ripple [7] and almost 200% better than 
that of the IEEE 802.11 DCF. Although RMP achieves higher 
throughput than Ripple, it still maintains the same delay time and 
transmission quality, as verified by our simulation results. The 
RMP achieved a stable throughput and a low end-to-end 
transmission delay in both CBR and FTP traffic compared to the 
IEEE 802.11 DCF. In addition, the RMP is simple, easy to 
implement, and it eliminates the back-off inefficiencies and the 
collision problem in IEEE 802.11 wireless environments.  
 
Index Terms — chain topology, interference, multi-hop, 
multi-radio, spatial reuse, wireless mesh network 
 
I. INTRODUCTION 
 
ireless mesh networks (WMNs) have emerged as a key 
technology and started an upsurge in the wireless research 
over the past few years [1]. Increasingly, WMNs are widely to 
provide connectivity to devices in the environments where wired 
network infrastructures do not exist or are expensive to deploy. 
Unlike mobile ad hoc networks (MANETs), where 
communications occur between any pair of nodes through 
mobile relaying nodes, WMNs provide a wireless backbone 
formed by non-mobile relaying nodes for nomadic users to 
access the wired Internet [7]. Instead of being another type of 
MANETs, WMNs diversify the capabilities of MANETs. This 
feature brings many advantages to WMNs, such as good 
reliability, high coverage, low upfront cost, and easy network 
maintenance. 
 WMNs are characterized by multi-hop radio broadcast 
environments, and spatial reuse can be used to increase the 
capacity of the networks. The medium sharing and the weakness 
of Carrier Sensing Multiple Access with Collision Avoidance 
(CSMA/CA) make the IEEE 802.11 Medium Access Control 
 
1 This work was supported by the NCTU EECS-MediaTek Research Center 
under Grant Q583 and the National Science Council under Grant 
NSC94-2213-E-009-043. 
(MAC) not fit the requirements of backhaul networking in 
WMNs [2]. The CSMA/CA mechanism for distributed access to 
the shared channel is extremely restrictive and prohibits any 
concurrent transmission or reception activities in the vicinity of 
either an active sender or receiver [6]. Therefore, in multi-hop 
environments, the interference problem causes long 
transmission delay and low throughput. Spatial reuse in a 
wireless network allows multiple communications to proceed 
simultaneously; hence observably improves the overall network 
throughput. The idea of spatial reuse is that several nodes, which 
are far enough in space, can make transmissions simultaneously 
in the same channel without a collision [3]. However, achieving 
maximum spatial reuse would require an ideal MAC protocol 
that schedules communications to maintain the optimal 
transmitter separation distance while minimizing interference. 
The performance of spatial reuse depends on various 
characteristics of the network, including the type of radio, 
network topology, channel quality requirements and signal 
propagation environment, etc. To increase the network 
performance, each backhaul router also needs to have its own 
scheduling module for sharing the transmission resources 
efficiently [2]. 
 In this paper, we propose a novel scheduling mechanism 
without modifying the existing 802.11 MAC, termed as wireless 
Radio-Matching Protocol (RMP), to maximize the spatial reuse 
in WMNs and thus achieve better overall network throughput 
and higher spectral efficiency. The RMP uses pre-planning 
multi-radio mesh routers to form a chain and each radio is 
assigned a specific channel for transmitting or receiving only. 
With this deployment, the RMP has high spatial reuse by 
properly scheduling multiple transmissions in parallel to 
compose an efficient wireless backbone in WMNs. 
 The remainder of this paper is organized as follows. Section 2 
discusses the related spatial reuse researches in WMNs. Section 
3 presents the background of interference problems and the 
operations of RMP. The simulation results are shown in Section 
4. Finally, Section 5 gives concluding remarks. 
II. RELATED WORK 
We first review existing MAC protocols that aimed to 
maximize spatial reuse in WMNs. The performance of IEEE 
802.11 MAC protocol is not satisfactory in wireless multi-hop 
environments [2]. Without pre-planning, nodes in a wireless 
ad-hoc network rely on detect-and-transmit schemes to discover 
(re)usable channels [14]. The CSMA/CA algorithm is the basis 
of the Distributed Coordination Function (DCF) in the IEEE 
802.11 [13]. A node attempting channel access defers for a 
Efficient Spatial Reuse in Multi-Radio, 
Multi-Hop Wireless Mesh Networks1  
Da-Ren Guo, Kuochen Wang and Lung-Sheng Lee
Department of Computer Science 
Nation Chiao Tung University  
Hsinchu, 300, Taiwan 
kwang@cs.nctu.edu.tw 
W 
1550-2252/$25.00 ©2007 IEEE  1076
  However, we should consider a real situation: the situation 
becomes worse if one assumes that radios will interfere with 
each other beyond the range where they can communicate 
successfully. For example, in ns-2, it assumes that 802.11 nodes 
can correctly receive packets from nodes at 250 meters, but can 
interfere with nodes 550 meters away. Hence, in Fig. 1, packet 
transmissions of node 4 will interfere with RTS packets sent 
from node 1 to node 2. This prevents node 2 from correctly 
receiving node 1’s RTS transmission or sending the 
corresponding CTS. This is the main problem we intend to solve 
in this paper. 
B. The Operation of the Proposed RMP 
 We propose a novel scheduling mechanism without 
modifying the existing IEEE 802.11 MAC protocol. This 
mechanism is applicable to chain-based and multi-radio WMNs. 
By means of matching radios between mesh routers, we name 
our pre-planning deployment and scheduling mechanism as a 
Radio-Matching Protocol (RMP), which can achieve the 
maximal spatial reuse. In the RMP, mesh routers are equally 
spaced to form a chain topology, where mesh routers that are not 
neighbors do not interfere with each other. Every mesh router is 
equipped with two wireless radio interfaces; one for transmitting 
and the other for receiving. In the RMP, there are two types of 
mesh routers:  
1) T-R mesh router: For T-R mesh routers, the first channel is 
only for transmitting packets, and the second channel is only for 
receiving packets. 
2) R-T mesh router: Similarly, for R-T mesh routers, the first 
channel is only for receiving packets, and the second channel is 
only for transmitting packets.  
A chain is formed by assigning these two types of mesh 
routers alternately. That is, the neighbors of a T-R mesh router 
are R-T mesh routers. Similarly, the neighbors of an R-T mesh 
router are T-R mesh routers, as shown in Fig. 2 (a). That is, T-R 
mesh routers and R-T mesh routers are equally spaced such that 
the same types of mesh routers will not be neighbors. The 
transmission directions of each mesh router are also shown in 
Fig. 2. (a). The commonly used values for the transmission range 
and the interference range (250 m and 550 m) are adopted in 
both T-R and R-T mesh routers. In the following, we use mesh 
routers and nodes interchangeably. Fig. 3 shows the finite state 
machine of a mesh router using RMP. In the RMP, each node 
should be in one of three states:  
z ACTIVE: A node enters this state when its counter 
counts to 2 or 1, and it can transmit and receive packets 
without interferences in this state. 
z LISTEN: A node enters this state when the counter of 
this node counts to 0. Nodes in this state must keep 
silence for a period of time. 
z IDLE: This state is used for initialization and error 
handling. When an error occurs during ACTIVE or 
LISTEN state, the node moves to this state to restart. 
Each node using RMP may transmit and receive packets for 
two time slots (in ACTIVE1 and ACTIVE2 states) and is then 
forced to suspend the transmission for one time slot (in IDLE 
state). Each node in this chain contains a simple counter, which 
counts 2, 1, 0, iteratively. That is, this simple counter counts 
from 2 to 1, 1 to 0, and 0 to 2 again. A node is allowed to transmit 
or receive a packet only if its counter counts to 2 or 1. 
Specifically, when a counter counts to 2, the corresponding node 
can transmit packets to and receive packets from the preceding 
node in the chain. When counting to 1, the corresponding node 
can transmit packets to and receive packets from the subsequent 
node in the chain. After having the medium for a specified 
amount of time, the counter counts to 0. During this period, the 
node does nothing but listens. 
(b) The communication process of RMP in three consecutive time intervals. 
Radio 1
Radio 2
N+6 N N+5 N+4 N+3 N+2 N+1 N+7 
T = t 
N N+6 N+5 N+4 N+3 N+2 N+1 N+7 
T = t + 2 
N N+6 N+5 N+4 N+3 N+2 N+1 N+7 
T = t + 1 
T-R mesh router
R-T mesh router
LISTEN state
N N+6 N+5N+4N+3N+2 N+1 N+7
(a) The deployment of mesh routers and associated transmission directions. 
1 
1 
1 
1 
1 
1 
1 
1 
2 
2 
2 
2 
2 
2 
2 2 
0 
0 
0 
0 
0 
0 
0 
0 
2 Counter 
Fig. 2: A chain topology consists of two kinds of mesh routers that use the RMP scheduling to achieve 
the maximum spatial reuse. 
 1078
