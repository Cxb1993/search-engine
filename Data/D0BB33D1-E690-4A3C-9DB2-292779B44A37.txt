1. 中文摘要 
本計劃的主要目的是發展一個以多重描述以及階層式編碼法則為基礎的視訊串流系統，
並在 Peer-to-Peer (P2P) 的網路環境中使用該系統。P2P 系統由於要求每一個成員同時擔任資
料提供者以及接受者，因此與傳統的 Client-Server Model 比較之，P2P 系統擁有較低的
Infrastructure Cost 以及較高的容量。然而在應用於視訊串流時，P2P 系統可能有下列兩項主要
缺點。第一，由於每一個 P2P 成員可以自由離開系統，因此在突然離開時可能會對正在獲得
該成員服務之接受端造成影響甚至斷訊，進而形成視訊品質的不穩定。第二，若有成員處於非
對稱網路環境(例如使用 ADSL)，則該成員 Uplink 的頻寬可能很小。由於視訊資料需要較大的
頻寬來傳送，這些在非對稱網路的成員提供視訊資料的能力可能就十分有限，因此會降低整體
P2P 系統的容量。為了解決上述的問題，本計劃擬完成下列的工作項目： 
(1) 提出一個適用於 P2P 環境的視訊編碼串流法則， 
(2) 修正 P2P 通訊協定使之合適於視訊串流， 
(3) 架構 P2P 系統模擬環境。 
在發展視訊編碼法則方面，本計畫擬提出階層式多重描述編碼法來執行 P2P 視訊串流。
在修正 P2P 通訊協定方面，本計劃擬新增功能以允許傳送端追蹤並更正獲得其服務之成員名
單。在架構模擬環境方面，本計劃擬研發可模擬龐大 P2P 系統的軟體以準確評估 P2P 視訊串
流系統的效能。此模擬軟體允許我們描述及修改所使用的通訊協定，並且可以觀察系統在
Packet Level 的行為，因此透過此模擬軟體能有效檢視不同的通訊協定以及視訊編碼法則對
P2P 系統的影響。 
 
2. ABSTRACT 
The objective of this project is to develop a novel layered multiple description video streaming 
system well suited for peer-to-peer (P2P) networks. In a P2P system, each peer node can be both the 
information provider and receiver. Therefore, as compared with the basic client-server model for 
video streaming, the P2P systems have the advantages of lower infrastructure cost and higher 
capacity. However, the quality of the reconstructed video sequences may become unstable by a direct 
utilization of P2P network for video streaming. This is because any peer node is allowed to freely 
leave/enter the system. Therefore, it may be possible to have an abrupt input sources interruption for 
the nodes receiving video bitstreams from the leaving peers. Another disadvantage of the P2P system 
is that many peers may be located in the asymmetric network environments such as ADSL. Since the 
uplink bandwidth for these peers is usually limited, it may be difficult for them to provide high 
quality video streaming services. To eliminate the drawbacks stated above, three topics are 
investigated in this projects: 
(1) Video encoding/streaming algorithm well-suited for P2P network, 
(2) P2P protocol best matched for video streaming, 
(3) Network simulation tool for evaluating the performance of the proposed algorithm. 
To design the video coding schemes for P2P networks, layered multiple- description coding 
technique is adopted. The P2P network protocol should also be revised to accommodate the 
時提供視訊串流的能力便十分有限，進而影響整體 P2P 系統上的視訊串流效能。綜合言之，
在 P2P 系統上執行視訊串流可能會遭遇到由於網路頻寬變化或者是使用者隨時加入或離開所
造成的視訊品質不穩定，以及因為非對稱網路環境造成使用者提供串流能力受限等問題。 
本計劃的主要目的即是提出一個以 P2P 網路架構為基礎的階層式多重描述編碼[3]視訊串
流系統，其除了具有高容量、低 Infrastructure Cost 和避免 Single Point Failure 等優點外，並且
可以有效的維持視訊串流品質的穩定，以及擴展在非對稱網路環境下執行串流的能力。 
 
4. 方法 
本計劃第一個目的為發展階層式多重描述編碼，該法則合適於執行 P2P 視訊串流。在這
種編碼方式中，影像先分成若干個群組，接下來每個群組再執行階層式編碼。此傳送系統的優
點是接收端不需要完整接收至少一個群組的資料才能還原影像，接收端可以任選一個群組，並
從該群組之底層開始抓取資料至任意一個階層便可還原影像，此種編碼方式可以有效擴展 P2P
視訊串流之彈性。 
此傳送系統的作法是將原始影像序列分解成兩個或兩個以上的子影像序列，而每個子影像
序列則作為原始影像序列的一個群組。接收端抓取任一個群組的位元流便可將原始的影像序列
予以還原。若我們讓群組之間不重疊，則抓取全部群組還原之後的品質為最佳。然而由於群組
之間不重疊，若群組數目眾多，則每一個群組所含有的資訊就十分有限，因此若接收端僅抓取
單一群組則還原後的品質可能不佳。為了改進此一問題，我們允許群組之間存在有重疊的部
份。然而若接收端獲得多個傳送端的服務，重疊的部份可能會增加頻寬的浪費進而影響還原影
像的品質。本計劃提出一個新的方法來避免頻寬浪費及維持還原影像品質。此方法主要讓所有
的群組共享有相同的重疊部分，且該重疊部分可以從原始影像序列中攫取出來。我們稱該重疊
部分為基本影像序列(Fundamental Sequence)。每個群組去除基本影像序列後，可組成一個補充
序列(Supplemental Sequence)。在設計階層式多重描述編碼系統時，基本影像序列可作為每一
個群組的 Base Layer，而補充序列可作為每個群組的 Enhancement Layers。 
本計畫擬使用小波轉換來將原始影像序列分解成為若干個群組，並獲得相關的
Fundamental Sequence 以及 Supplemental Sequence，圖 1 顯示一個典型的分解方式，為了方便
起見我們只考慮四個群組的情況。如圖所示，原始的影像序列的每一個畫面先由小波轉換分解
成 Spatial Domain 上的分頻，且低通分頻由兩個群組所共享，而每個高通分頻之係數則分為不
重疊的四個集合 Bi ,i=1,2,3,4,並分別分配給群組 i, i=1,2,3,4。因此我們可將每個畫面的低通分
頻組合成 Fundamental Sequence，並直接利用 JPEG2000 編碼[4]來獲得 Base Layer 的位元流。 
讓 E 代表 Fundamental Sequence 中畫面在編碼及還原後的誤差，我們也可以將 E 分為不
重疊的四個集合 Ei ,i=1,2,3,4。如圖 1 所示，Ei及 Bi可以分別組成群組 i 的 Supplemental Sequence
畫面的低通以及高通的小波係數，因此這些係數經由反小波轉換便可獲得群組 i 的 
Supplemental Sequence。此種方式的特點是不同群組的 Supplemental Sequence 並不重疊，也不
與 Fundamental Sequence 重疊，因此可以降低編碼的 Overhead。 
在本計畫中我們使用 JPEG2000 法則來執行 Supplemental Sequence 的階層式編碼。無論是
達成 Temporal Scalability、Spatial Scalability 或者是 SNR Scalability 的方式皆可以使用來壓縮
Supplemental Sequence。由於這些以 JPEG2000 為基礎的階層式編碼法則具有不會產生 Drifting
的優點，因此在應用於 Supplemental Sequence 編碼時，無論接收端僅抓取 Supplemental 
Sequence 部分階層或者是獲得全部階層的資料，還原的品質皆可以維持穩定。 
以滿足 File-Sharing 相關應用之需求。然而在執行視訊串流時，除了建立連線以及檔案搜尋外，
也應提供其他的機制以方便傳送端調整其服務品質，以及允許接收端得知目前傳送端的服務品
質。因此，在執行視訊串流時，Gnutella 應該要新增下列三項功能：(1)由於傳送端會利用階層
式多重描述編碼法則，依照要求其服務之 Node 數目動態調整視訊品質，因此我們希望修正
Gnutella 以讓接收端獲得最新視訊品質之資訊。(2)傳送端會突然離開 P2P 系統，因此 Gnutella
也必須要協助接收端偵測傳送端是否仍在系統上。(3)除了傳送端之外，接收端也會離開系統
或停止接受服務，因此 Gnutella 也需要協助傳送端偵測接收端之狀態。 
新增上述三項功能最簡單的方式是定義三個新的指令，每個指令完成一項新的功能，然而
此會增加通訊協定之複雜度。我們擬延伸 Query 以及 Query Hit 指令之功能以滿足上述三項需
求。我們的主要作法是要求接收端在視訊串流期間定期須向傳送端發出 Query 的指令查詢目前
所供應的頻寬大小，而傳送端在接到 Query 後，應以 Query Hit 告知目前該接收端所收到的頻
寬。此種方式可以讓接收端了解接收品質變化的情形。不僅如此，若一個接收端在連續發出若
干個 Query 後，仍未收到傳送端回應之 Query Hit 訊息，代表傳送端可能已離開系統。無論是
傳送端已離開或是接收端不滿意目前傳送端的所提供之服務品質，接收端皆可以用 Query 的方
式尋求其他傳送端更佳的服務。 
定期 Query 不僅可以讓接收端獲德傳送端的狀態，傳送端也可以根據是否定期收到接收端
的 Query 來決定接收端是否仍接受其服務。在視訊串流的過程中，若未再獲得某一接收端之
Query，則傳送端可以中止傳送位元流至該接收端，並動態提升分配給其餘之接收端傳送的頻
寬。對傳送端而言，雖然接收端所發送的 Query 訊息有兩個不同的涵義：查詢影音檔以及查詢
傳送頻寬，但這兩者不會混淆。若傳送端目前尚未提供某一接收端串流服務，而該接收端卻送
來 Query 訊息，則該 Query 代表一般檔案查詢。若在提供串流服務給此接收端時，仍舊獲得此
接收端之 Query 訊息，則該 Query 代表頻寬之查詢。 
本計劃第三個目的為建構 P2P 網路模擬環境，並使用來驗證前兩個目的所發展之串流法
則以及通訊協定的有效性。本計畫採用 NS2 作為整個架構於 Packet Level 的模擬工具。為了要
在 NS2 中描述 P2P 通訊協定，我們使用了 GnutellaSim 系統[6]，其主要功能是將 P2P 系統中
每一個 Peer 的行為轉換為實際上的網路封包。經過這樣的一個轉換過程後，我們可將這些封
包放入 NS2 網路模擬器中進行模擬，如此便可得到一個 P2P 系統的模擬環境。 
在 GnutellaSim 的架構中，每個 Peer Node 之中可以分為三層式的結構，由上而下分別為
PeerApp、PeerAgent 以及 Network Simulator。對於 P2P 系統的使用者來說，PeerApp 是使用者
最直接所面對的介面，它所代表的是各種使用者的操作行為。PeerAgent 層代表的則是各種不
同的 P2P 協定，雖然 GnutellaSim 在此層中是使用 Gnutella Protocol 來實作，但由於 Protocol
獨立為一層，因此我們也可使用其他具有不同特性的 P2P Protocol 來模擬，比如說結構式的
Protocol，如 Chord 或是 Pastry 等。Network Simulator 的主要功能，是將 PeerAgent 所傳遞的
Protocol Message 轉換為實體上的封包，並交給模擬器去模擬封包的傳送。在 GnutellaSim 的實
作中，為了能夠達到 Portable，在這一層中設計了 Socket-Based 的介面，提供了一些必要的
Socket 動作：Bind, Listen, Connect, Send, Recv, 以及 Poll 等。PeerAgent 在模擬過程中會將
Protocol 的 Message 轉換成各種 Socket 的操作，並利用這一層所提供的 Socket 指令封包進行
模擬。 
  
 
圖 2 Request Time 及 Transfer Time 之範圍定義圖 
 
 
表 1 使用階層式傳輸的 Request Time 與 Transfer Time 
 
在表 1 中我們可以看到使用階層式傳輸的 Transfer Time 上升相當緩慢，這是因為上傳資
料量均能維持在一定程度，不會將上傳頻寬使用殆盡，所以當 Client 數目到達 8 時，Transfer 
Time仍舊與Client數目為 5的時間十分接近。在非使用階層式傳輸的部分，我們可以看到Client
數目為 1 及 2 的 Transfer Time 與使用階層式傳輸之時間幾乎相同，但在 Client 數目變為 3 時，
Transfer Time 是持續的上升，整個成長曲線大於使用階層式傳輸的系統。這是由於當 Client
數目超過 2 個時，上傳頻寬被視訊串流封包所使用完畢，來不及送出的資料均送至 Queue 中
等待發送，因此 Transfer Time 會隨著 Client 的數目增加而越來越大。 
在串流系統中，最重要的還是服務使用者實際上所感受到的視訊品質。所以在本實驗中，
