 2
行政院國家科學委員會專題研究計畫成果報告 
多指標之績效排名-基礎研析與實務上之應用 
Performance ranking with multiple attributes-fundamental studies and industrial applications 
計畫編號：96-2221-E-009-164-  
執行期限：96 年 8 月 1 日至 97 年 12 月 31 日 
主持人：劉復華   國立交通大學工業工程與管理學系 
計畫參與人員：彭浩軒 蔡姈娟等  
國立交通大學工業工程與管理學系 
 
 4
judgments are aggregated into a single judgment or decision. Take Olympics as an 
example, we present a method for ranking the participating nations according to their 
total numbers of gold medals, sliver medals and bronze medals. Every four year, an 
enormous amount of attention is focused on the Olympic Games. Many leaders do the 
best to predict the outcomes with respect to many sporting events or the overall 
performance of nations competing at the Olympics. They encourage their athletes to 
obtain the pride. In order to encourage the athletes, many countries have used the same 
program to excite player's latent energy strive for honor their country. So, we add the 
ratio of weights constraint to non-increase that present disparate difficulty in getting the 
gold medals, silver medals and bronze medals. Our approach is in spirit of CK’s initial 
idea which is now combined with the idea of the conditions of decreasing sequence of 
weights (the difference of weights and the ration of weights are both non-increasing) and 
the concept of common weights. We apply to the problem of evaluating the level of 
athletics of Nations in Olympic Games. 
Determine weights for ordinal information 
Voting is an important issue, which its applications stretched deep in to different 
fields. .Unfortunately, there isn’t a method which can evaluate problems objectively 
under different circumstances. Therefore, this research is proposed to let decision making 
groups (DMG) evaluate candidates fairly and precisely under different circumstances. 
This model is based on linear programming (LP) with unique constraints, thus we may 
calculate every candidate’s performance score and analyzing the appropriate common 
weights in different situations. 
 
Topic 7: Restricting virtual weights in common weight analysis。Common weight 
analysis (CWA) is one methodology to assess the unit of assessments (UOAs) for the 
relative controller in view of maximizing the group efficiency. In order to help controller 
easily and intuitively emphasize his preference on the performance indices, this paper 
propose using virtual weight restrictions on the virtual input/output, the product of the 
input/output level and optimal weight for that input/output, to realize the scenario of 
controller’s preference in the assessment. Finally, we apply the improved methodology in 
the assessment of retails’ branches while the general manager wants to emphasize his 
preference business strategy on this assessment. 
Topic 9: A DEA model for analyzing simulation output of material handling systems。
This paper addresses a Data Envelopment Analysis (DEA) scenario whose inputs and 
outputs data set can include bounded, integer and general values. To support the analysis 
of simulation results to be more useful and practical, several virtual weights restrictions 
are supplemented to the DEA model. The simulation experiments were an unmanned 
multi-loaded guided vehicles system transport within many job-shop manufacturing 
centers. Using the new developed DEA model to achieve most efficient, find the 
appreciate rule with lower capacity and complexity, and provide a suitable information 
for the total system. 
Topic 11: Selecting Material Handling System Designs by DEA-SBM Model with 
Interval Data 
This paper introduces a Data Envelopment Analysis (DEA) model to analyze simulation 
outputs of an unmanned job shop with an automated guided vehicles system to transport a 
finite set of job mix. The system simulation experiments were completed with the 
combinations of two design parameters: variable buffer capacity for the incoming and 
outgoing jobs at each processing machine, and the three vehicle control strategies. Five 
 6
[1]  A systematic procedure to obtain a preferable and robust ranking of units. Computers 
and Operations Research 36, pp. 1012-1025, 2009. Coauthored with Peng, HH.  
[2]  Ranking of units on the DEA frontier with common weights. Computers and 
Operations Research, 35, 1624-1637, 2008. Coauthored with Peng, HH.  
 
[3]  A data envelopment analysis model to select time-cost trade-offs in project 
management. Submitted to European Journal of Operational Research, 
EJOR-D-07-00764. Coauthored with Jen-Shou Chang. 
[4]  A Data Envelopment Analysis model for selecting material handling system designs. 
Communications in Computer and Information Science , Vol. 5, Park, Jin Woo; Kim, 
Tag-Gon; Kim, Yun-Bae (Eds.) 2007, XIII, 404 p ISBN: 978- 3-540- 77599-7. 
Coauthored with Wan-Ting Kuo. 
[5]  Preference voting theories with arithmetic progression and discriminate efficient 
candidates models. Coauthored with Ling-Chuan Tsai.  
 
 
五、參考文獻 
 
See the reference in the papers listed [1]~[5]. 
 
Appendix 1 
Ranking of units on the DEA frontier with common weights 
 
Fuh-Hwa Franklin Liu * , Hao Hsuan Peng 
 
Department of Industrial Engineering & Management  
National Chiao Tung University 
 
Correspondence author: 1001 Ta Shueh Road, Hsin Chu 300, Taiwan, Republic of China. 
Tel/Fax: +886-3-573-1739 
 
E-mail: fliu@mail.nctu.edu.tw (Fuh-Hwa Franklin Liu) 
Abstract 
Conventional Data Envelopment Analysis (DEA) assists decision makers in 
distinguishing between efficient and inefficient decision-making units (DMUs) in a 
 8
common weights for all the units, by maximizing the sum of efficiency ratios of all the 
units, in order to rank each unit. They suggest the potential use of the common weights 
for ranking DMUs. Sinuany–Stern et al. [13] used linear discriminant analysis in order to 
find a score function which ranks DMUs, given the DEA division into efficient and 
inefficient sets. Sinuany–Stern et al. [14] developed DR/DEA to provide for given inputs 
and outputs the best common weights in order to rank all the units on the same scale. 
In this paper we aim to search one common set of weights to create the best 
efficiency score of one group composed of efficient DMUs. Then, we use this common 
set of weights to evaluate the absolute efficiency of each efficient DMUs in order to rank 
them. The ranking that adopts the common set of weights generated from our 
methodology makes sense because a decision maker objectively chooses the common 
weights for the purpose of maximizing the group efficiency. For instance, the general 
manager of a bank desires to measure the performance of DEA efficient branches of the 
bank. He would determine one common set of weights base upon the group performance 
of the DEA efficient branches. In section 2, we review the concept of DEA framework. In 
section 3, we introduce a two-stage algorithm. The first stage is a linear programming 
model to search one common set of weights for all efficient DMUs. The second stage is 
to select an optimal solution while the first stage generates alternative solutions. In 
section 4, we take two virtual examples to trial our methodology. The expansion of 
ranking object from efficient DMUs to all DMUs is completely discussed in section 5. 
Finally, section 6 gives our conclusions. 
. 
2. DEA framework 
DEA was initially developed as one methodology for assessing the comparative 
efficiencies of organizational units. The initial problem is usually expressed as: n DMUs 
to be assessed with m inputs and s outputs indices. For each DMU, say DMUj, the given 
values of indices are denoted as (x1j, x2j, …, xmj) and (y1j, y2j, …, ysj), respectively. Given 
the data, DEA measures the best practice comparative efficiency of each DMU once and 
hence needs n optimizations, one for each DMUj to be evaluated. Let the DMUj being 
evaluated on any trial be designated as DMUo where o ranges over 1, 2, …, n. We can 
solve the following fractional programming problem (P1) or linear programming (P2) to 
obtain objective value (relative efficiency θo*) and one comparative set of weights of 
inputs (vio, i = 1, 2, …, m) and outputs (uro, r = 1, 2, …, s). The symbol ε is a positive 
Archimedean infinitesimal constant, which is used in order to avoid the appearance of 
zero weights. This zero case in weights would result in the meaningless of certain indices 
used in DEA. 
(P1) DEA-FP 
 10
outputs) and virtual input (weighted sum of m inputs), respectively. By the definition of 
the efficiency score, the common benchmark level is one straight line that passes through 
the origin, with slope 1.0 in the coordinate. Ur (r = 1, 2, …, s) and Vi (i = 1, 2, …, m) in 
the weighted sum denote the decision variables of the common weights for the rth output 
and ith input index, respectively. The notation of a decision variable with superscript 
symbols “ ′ ” represents an arbitrary assigned value. For any two DMUs, DMUM and 
DMUN, if given one set of weights rU ′  ( r = 1, 2, …, s) and iV ′  (i = 1, 2, …, m), then 
the coordinate of points M′ and N′ in Figure 1 are ( ∑∑
==
′′
s
r
rrM
m
i
iiM Uy  ,Vx
11
) and 
( ∑∑
==
′′
s
r
rrN 
m
i
iiN Uy  ,Vx
11
). The virtual gaps, between points M′ and M′ P on the horizontal axes 
and vertical axes, are denoted as 
′ΔIM  and 
′ΔOM , respectively. Similarly, for points N′ 
and N′ P, the gaps are ′ΔIN  and 
′ΔON . Therefore, in view of points M′ and N′, we observe 
that there exists a total virtual gap 
′
+
′ O
M
I
M €€ +
′Δ+′Δ ON
I
N  to the benchmark line. Let the 
notation of a decision variable with superscript “ * “ represent the optimal value of the 
variable. We want to determine an optimal set of weights U*r (r = 1, 2, …, s) and V*i, (i 
= 1, 2, …, m), such that both points M * and N * below the benchmark line could be as 
close to their projection points, M * P and N * P on the benchmark line, as possible. In other 
words, by adopting the optimal weights, the total virtual gap *€ IM + 
*O
MΔ +
*I
NΔ +
*O
NΔ  to 
the benchmark line is the shortest to both DMUs.  
The following numerical example simulates the above scenario. Table 1 depicts the 
values of DMUA, DMUB, DMUC, and DMUD on the two input and two output indices. 
Given an arbitrary weights, rU ′ = ( 1U ′ , 2U ′ ) = (1, 2) and iV ′ = ( 1V ′ , 2V ′ ) = (25, 1), the 
weighted sum of inputs, weighted sum of outputs, and virtual gap ′Δ+′Δ Oj
I
j  for every 
DMU are recorded. In Figure 2, points A′, B′, C′ and D′ are weighted by arbitrary weights 
rU ′  and iV ′ , while A′
 P, B′ P, C′ P and D′ P are their projection points on the benchmark 
line. There is a total virtual gap of 150 from the four DMUs to the benchmark line. 
Our methodology, presented in the following subsection, generates one optimal set 
of weights, *U = ( *U1 ,
*U 2 ) = (1, 3.33) and 
*V = ( *V1 , *V2 ) = (20.33, 1). In Figure 3, A*, 
 12
( )
( )
.,,1,0
,,,1,0
,,0,
,,0..
min
11
miV
srU
Ej
EjVxUyts
   
i
r
I
j
O
j
I
j
O
j
m
i
iij
s
r
rrj
Ej
I
j
O
j
K
K
=>≥
=>≥
∈≥ΔΔ
∈=Δ+Δ+−
Δ+Δ=Δ
∑∑
∑
==
∈
∗
ε
ε
 
Then, if we let IjΔ ＋ OjΔ  be jΔ , (P4) is then simplified to the following linear 
programming (P5). 
(P5) CWA-LP 2 
.,0
,,,1,0
,,,1,0
,,0..
min
11
Ej
miV
srU
EjVxUyts
   
j
i
r
j
m
i
iij
s
r
rrj
Ej
j
∈≥Δ
=>≥
=>≥
∈=Δ+−
Δ=Δ
∑∑
∑
==
∈
∗
K
K
ε
ε  
(P5) could be rewritten to the equivalent linear programming (P6) by taking out the slack 
variable jΔ  and aggregating ry  and ix  to be rY  and iX  respectively where 
∑
∈
=
Ej
rjr yY  and ∑
∈
=
Ej
iji xX . 
(P6) CWA-LP 3 
.,,1,0
,,,1,0
,,0..
max
11
1 1
miV
srU
EjVxUyts
VXUY   -
i
r
m
i
iij
s
r
rrj
s
r
m
i
iirr
K
K
=>≥
=>≥
∈≤−
−=Δ
∑∑
∑ ∑
==
= =
∗
ε
ε
 
An implicit constraint 0
1 1
≤−∑ ∑
= =
s
r
m
i
iirr VXUY  could exist in (P6). This constraint is 
redundant since it is a linear combination of the first set of constraints. We regard Xi (i = 
1, 2, …, m) and Yr (r = 1, 2, …, s) in (P6) as the input and output indices of one 
aggregated DMU or group. The goal of (P6) is to maximize the efficiency of the 
aggregated DMU, under the constraints that the efficiency score of each DMU in set E 
 14
.,,1,0
,,,1,0
,,0
,,,1,
,,,1,
..
max
11
miQ
srP
Ej
miXQx
srYPy
ts
QP
i
r
j
ii
Ej
jij
rr
Ej
jrj
m
i
i
s
r
r
L
L
L
L
=≥
=≥
∈≥
==+
==−
⎟⎠
⎞⎜⎝
⎛
+
∑
∑
∑∑
∈
∈
==
π
π
π
ε
 
Similarly, (P7) can be used to compare with the Phase II extension of a traditional CCR 
model (max-slack model) while the parameter θo* is equal to 1.0, as the depicted (P8). 
The major difference between (P7) and (P8) is that Pr and Qi are respectively the total 
shortfalls and excesses of all efficient DMUs relative to the benchmark line, 
corresponding to the output index r and input index i. 
 
(P8) Phase II extension of CCR model  
.,,1,0
,,,1,0
,,0
,,,1,
,,,1,
..
max
11
mis
srs
Ej
mixsx
srysy
ts
ss
-
i
r
j
oi
_
i
Ej
jij
orr
Ej
jrj
m
i
-
i
s
r
r
K
K
K
K
=≥
=≥
∈≥
==+
==−
⎟⎠
⎞⎜⎝
⎛
+
+
∈
+
∈
==
+
∑
∑
∑∑
λ
λ
λ
ε
 
The variable value π j* in (P7) is the shadow price of the linear programming (P6). Then, 
the variations of criterion Eq. (1) will result in the variation of constraint Eq. (2). That is, 
if the right-hand side of the jth constraint increases 1 unit, then the criterion Equ. (2) will 
get the variation π j*. 
10
11
+≤−∑∑
==
m
i
iij
s
r
rrj VxUy  (1) 
( )10*
1 1
++⎟⎟⎠
⎞
⎜⎜⎝
⎛
⎟⎟⎠
⎞
⎜⎜⎝
⎛
−⎟⎟⎠
⎞
⎜⎜⎝
⎛∑ ∑ ∑∑
= = ∈∈
j
s
r
m
i
i
Ej
ijr
Ej
rj VxUy π  (2) 
 16
There is at least one DMU that joins the assessment located on the benchmark line. 
Proof. We will use the proof of contradiction to explain the existence of above theorem. 
Assume that there is no DMU on benchmark, so we can obtain the optimal criterion and 
the corresponding optimal value Ur*, Vi* and Δj* where Δj* > 0 in P(4) for all j ∈ E 
(formulated in Eq. (4)). That is, each DMU’s efficiency is less than 1 (formulated in Eq. 
(5)). 
Ej
Vx
Uy
m
i
iij
j
s
r
rrj
∈=
Δ+
∑
∑
=
∗
∗
=
∗
,1
1
1  (4) 
Ej
Vx
Uy
m
i
iij
s
r
rrj
∈<
∑
∑
=
∗
=
∗
,1
1
1  (5) 
( )
Ej
Vx
Uyk
m
i
iij
s
r
rrjj
∈=
∑
∑
=
∗
=
∗
,1
1
1  (6) 
We can set the constant kj (kj > 1) such that the efficiency is equal to 1 for every j ∈ E 
(formulated in Eq. (6)). Let K be the minimum of set {kj , for j ∈ E}, then we can obtain 
another feasible common set of weights KUr* and Vi* accompanies the smaller Δj* (at 
least one equals to 0) for all j ∈ E in (P5). The case will result in smaller criterion and 
contradicts the fact that the current criterion has been minimized. Hence, there is at least 
one DMU locates on benchmark line. ▓ 
 
3.3. Virtual gap analysis 
The virtual gaps between virtual input and output indices for each CWA-inefficient 
DMU could be further decomposed into the real gap of each performance index. We can 
further analyse this by translating the model (P6) to the equivalent model (P9). As (P9) 
showed, Pr and Qi can be partitioned as Pr =∑
∈Ej
rjp  and Qi =∑
∈Ej
ijq and prj and qij are the 
shortfall at the output index r and excess at input index i of DMUj, respectively, to the 
benchmark. So prj = Prλj and qij = Qiλj with convex combinations of multipliers λj ≥ 0 ( j 
∈ E ) and ∑
∈Ej
jλ  =1. 
(P9) CWA-DLP 2 
 18
Since the lower bound of Ur* and Vi* is ε, according to Complementary Slackness 
Theorem, the following relationship holds.  
∗
=
∗
=
∗
=
∗∗
=
∗∗ Δ=⎟⎠
⎞⎜⎝
⎛
+=+ ∑∑∑∑ m
i
i
s
r
r
m
i
ii
s
r
rr QP VQUP
1111
ε  (12) 
Therefore, the formula inside the parenthesis in Eq. (11) could be substituted by the 
right-hand-side in Eq. (12). Obviously, Eq. (11) easily translates to Eq. (13). 
∗
=
∗
=
∗ Δ+−∑∑ jm
i
iij
s
r
rrj VxUy
11
 (13) 
Eq. (13) is equal to zero by the fulfillment of constraints in (P5). Hence, Eq. (8) comes 
into existence and the theorem is proved. ▓ 
 
3.4. Selection of the alternative optimal common sets of weights 
It is worth noting that (P5) sometimes encounters the existence of alternative 
weights; moreover, different weights can result in different rankings of efficient DMUs. 
It is necessary for the decision maker to select the applicable one from these efficient 
DMUs. We propose one approach to assist decision makers in dealing with the issue of 
alternative rankings. Lets it is observed that one set of output indices with two sets of 
different index value has the same weighted sum. While the same weighted sum exists 
for both sets of different index value by adopting different sets of weights, Obata et al. 
[15] propose that it is preferable for output indices to adopt the smaller range of weight. 
In other words, a larger range of output index values is desirable to the decision maker. 
He explains that the benefit of the weighted sum is from the indices value itself, rather 
than from the individual weights. Similarly, it is preferable to use the larger range of 
weights for input indices. That is, a smaller range of input index values is desirable to the 
decision maker. The following procedure is suggested as a way to search the appropriate 
range of the existing alternative set of weights, using the L1-norm. 
 
Stage 1 
Solve (P5) and obtain the optimal value Δ*. 
Stage 2 
Solve the following linear programming (P10) to obtain one optimal common set of 
weights. 
(P10) Optimal weight analysis 
 20
 
4.2. Data with large number of indices 
DEA models usually have no more than n/2 indices when assessing n DMUs. 
Otherwise, the number of efficient DMUs becomes unreasonably large. It means 
that the discriminating power of DEA is reduced. The example uses seven DMUs, 
with three inputs and three outputs. The last column in Table 4 shows that 
the seven DMUs are efficient by radial efficiency 1 obtained by 
CCR-Input-oriented model. 
Table 5 gives the detailed ranking information assessed by adopting CWA. We still 
find that there are five DMUs still on benchmark line. If we release the upper bound of 
the efficiency score 1.0 for these DMUs, then πj* leads to a reduction in scale in the total 
virtual gap towards the benchmark line. Obviously, a CWA-efficient DMU with a larger 
πj
* is the better one. The total virtual gap can be reduced to a maximum 3.225, compared 
to the other DMUs on the benchmark line ,while we release the upper bound of efficiency 
score to over 1.0. Therefore, after comparing with πj*, we are able to determine the final 
ranking of CWA-efficient DMUs to be DMUD3, DMUD6, DMUD1, DMUD4, DMUD5, 
DMUD7, and DMUD2. 
 
5. Expansion and discussion 
In this section, we extend the object of CWA ranking from DMUs in set E to E ∪ 
EC in (P3) where EC represents the set of inefficient DMUs. It is unfortunate that a 
paradoxical case exists, that some DMUs in EC are better than DMUs in E. However, the 
phenomenon is acceptable and explainable without violating the original concept of DEA. 
In fact, each DMU in EC would have a particular reference set that is composed of parts 
of DMUs in E. One should not assume that one certain DMU in E is better than all 
DMUs in EC.  
We verify the inference mentioned above by practicing one complete example 
including DMUs in set E ∪ EC. As listed in Table 6, Example 2 with 7 DMUs in set E is 
extended to Example 3 with 11 DMUs in set E ∪ EC. Using DEA model (P2) and CWA 
methodology, models (P5) and (P10), the results are depicted in Table 7. In view of CWA, 
we observe DMUD2 of set E is ranked 11, and is worse than DMUD8, DMUD9, DMUD10, 
and DMUD11 of set EC. Although DMUD2 belongs to set E, it is not an element of the 
reference set to any DMUD8, DMUD9, DMUD10, and DMUD11. In other words, individual 
DMUD8, DMUD9, DMUD10, and DMUD11 really are not dominated by DMUD2. Therefore, 
in view of DEA, one should not conclude that DMUD2 in set E is better than DMUD8, 
DMUD9, DMUD10, and DMUD11 in set EC. In addition, using DEA model (P2) to measure 
the relative efficiency of only these 5 DMUs, at this time one would observe that they 
belong to the equivalent set E, just depicted in Table 8. Therefore, the CWA ranking 
 22
Research 1997; 99(1): 72-88. 
 [7] Doyle JR, Green RH. Efficiency and cross-efficiency in DEA: derivatives, 
meanings and uses. Journal of the Operational Research Society 1994; 
45: 567-578. 
 [8] Cook W, Roll Y, Kazakov A. A DEA model for measuring the relative 
efficiencies of highway maintenance patrols. INFOR 1990; 28(2): 
113-124. 
 [9] Roll Y, Cook W, Golany B. Controlling factor weights in data envelopment 
analysis. IIE Transactions 1991; 24:1-9. 
[10] Cook WD, Kress M. Data envelopment model for aggregating preference 
ranking. Management Science 1990; 36(11): 1302-1310. 
[11] Cook WD, Kress M. A multiple criteria decision model with ordinal 
preference data. European Journal of Operational Research 1991; 54: 
191-198. 
[12] Ganley JA, Cubbin JS. Public Sector Efficiency Measurement: 
Applications of Data Envelopment Analysis. Amsterdam: North-Holland, 
1992. 
[13] Sinuany-Stern Z, Mehrez A, Barboy A. Academic department’s efficiency 
in DEA. Computers & Operations Research 1994; 21(5): 543-556. 
[14] Sinuany-Stern Z, Friedman L. DEA and the discriminant analysis of ratios 
for ranking units. European Journal of Operational Research 1998; 111: 
470-478. 
[15] Obata T, Ishii H. A method of discriminating efficient candidates with 
ranked voting data. European Journal of Operational Research 2003; 151: 
233-237. 
Figures 
 24
( )32453245 ., .C P*
jj y.y 21 333+
jj xx. 213320 +
( )29812981 ., .B P*
( )965965 ., .AA *P* ≡
( )962962 ., .DD *P* ≡
( )97436646 ., .C*
( )26783284 ., .B*
 
Fig. 3. Coordinates of DMUs weighted by optimal common set of weights 
 26
C5 40 0.967 5 40 7.8 
C6 5000 0.959 6 5000 9.6 
C7 60000 0.951 7 60000 11.3 
 
Table 4 
Example 2 with the number of indices is much larger than DMUs 
DMU x1j x2 j x3 j y1 j y2 j y3 j Efficiency (θ j*) 
D1 1621 436 205 174 497 22 1 
D2 2718 314 221 172 497 22 1 
D3 1523 345 215 160 443 22 1 
D4 5514 1314 553 487 1925 63 1 
D5 1941 507 309 220 521 36 1 
D6 1496 321 339 109 699 38 1 
D7 932 158 200 37 431 19 1 
 
 
Table 5 
Corresponding outcomes of example 2 assessed by CWA 
DMU Δ j* π j* ζ j* Rank 
D3 0 3.225 1.000 1 
D6 0 1.772 1.000 2 
D1 0 1.118 1.000 3 
D4 0 0.922 1.000 4 
D5 0 0.028 1.000 5 
D7 304.864 0.000 0.847 6 
D2 925.362 0.000 0.778 7 
 
Table 6 
Example 3 including the initial DMUs in example 2 
DMU x1j x2 j x3 j y1 j y2 j y3 j 
D1 1621 436 205 174 497 22 
D2 2718 314 221 172 497 22 
D3 1523 345 215 160 443 22 
D4 5514 1314 553 487 1925 63 
D5 1941 507 309 220 521 36 
D6 1496 321 339 109 699 38 
D7 932 158 200 37 431 19 
D8 2013 1037 412 198 471 32 
D9 1891 976 399 191 491 22 
D10 2277 891 418 241 379 28 
D11 1995 693 349 167 412 31 
 
Table 7 
The reference set, DEA and CWA efficiency score of 11 DMUs in example 3 
 28
Appendix 2 
A systematic procedure to obtain a preferable and robust ranking of units 
 
Fuh-Hwa Franklin Liu * , Hao Hsuan Peng 
 
Department of Industrial Engineering & Management 
National Chiao Tung University 
 
Correspondence author: 1001 Ta Shueh Road, Hsin Chu 300, Taiwan, Republic of China. 
Tel/Fax: +886-3-573-1739 
 
E-mail: fliu@mail.nctu.edu.tw (Fuh-Hwa Franklin Liu) 
Abstract 
This paper introduces one systematic procedure for the manager of an organization 
to assess units under its governance using multiple performance indices. The goal of this 
systematic procedure is to assist the manager in obtaining a preferable and robust ranking 
result for units. In this procedure, for all units, one common set of weights attached to the 
performance indices is determined in order to maximize the group’s comprehensive score. 
Then, using the common set of weights, each unit’s comprehensive score is evaluated and 
compared for ranking. In order to obtain the preferable ranking, the manager’s subjective 
preference is considered and formulated by the virtual weights restrictions while 
determining the common weights in the procedure. The procedure is applied in order to 
obtain a robust ranking by modifying the boundary of the feasible region of virtual 
weights restrictions in each assessment. The final statistical ranking of all assessments 
provides the manager with one robust ranking, which is invariant in different feasible 
regions of virtual weights restrictions in the numerical example. 
 
Keywords: ranking, comprehensive score, common set of weights, virtual weights 
restrictions. 
 30
weights restrictions, Estellita Lins et al. [9] proposed the existence theorem, which 
establishes feasibility conditions for DEA with multiple weights restrictions. 
As for the other approaches for ranking in DEA, a review of several ranking 
methods was proposed by Alder et al. [10]. An interesting approach for us to obtain the 
ranking of units in the DEA structure is to apply the common weights to all DMUs. The 
use of common weights in DEA was first proposed by Cook et al. [11] and Roll et al. [12] 
in the context of applying DEA to evaluate highway maintenance units. Cook et al. [13, 
14] gave a subjective ordinal preference ranking by developing common weights through 
a series of bounded DEA runs, closing the gap between the upper and lower limits of the 
weights. 
Ganley et al. [15] considered the common weights for all the DMUs by maximizing 
the sum of efficiency ratios of all the DMUs, in order to rank each DMU. They suggested 
the potential use of common weights for the ranking of DMUs. Sinuany–Stern et al. [16] 
used the approach of linear discriminant analysis to find a score function which ranks 
DMUs, given the DEA efficient and inefficient sets. Sinuany-Stern et al. [17] developed 
DR/DEA to provide the best common weights attached to the input indices and output 
indices to rank all the DMUs on the same scale. Liu et al. [18] introduced common 
weight analysis (CWA) to determine the single most favorable common set of weights 
for DMUs on the DEA frontier in view of maximizing the group’s efficiency score. 
The assessment that proceeded based on the original DEA models shows that each 
DMU determines the efficiency score under its most favorable weights attached to its 
input indices and output indices. The model used in the current procedure was proposed 
by Liu et al. [18], different to the original DEA, and shows that the manager chooses the 
most favorable weights for the group that compromises all DMUs under the manager’s 
governance. In other words, one set of weights that maximizes the group’s 
comprehensive score is used as the common set of weights for all the units to obtain each 
individual’s comprehensive score. 
The paper is structured as follows. In section 2, we review the literature on virtual 
weights restrictions and common weight analysis (CWA). Section 3 introduces our 
developed systematic procedure to determine the common weights in obtaining 
preferable and robust ranking by adopting the virtual weights restrictions. In section 4, 
we take two numerical examples to illustrate our procedure. The first one shows the 
procedure is workable in terms of the values of the units’ performance indices across 
large scale ranges. The second one shows the realistic assessment for a retail manager 
governing eight branches. Finally, section 5 gives our conclusions, including the notice of 
application and future research suggestions. 
 
2. Literature review 
 32
attached to the input/output measure, and the latter further expresses the known 
relationship between any two indices, even among more indices. In this subsection, we 
give a brief review of virtual assurance regions and proportional virtual weight 
restrictions. 
 
2.2.1 Virtual assurance regions 
Sarrico et al. [7] proposed that all the virtual weights restrictions can be described 
by the general set of restrictions expressed by Eq. (1). 
,,,1,,,1,
11
nj   WwkUyVx wrrj
s
r
rwiij
m
i
iw KK ==≥+∑∑
==
βα  (1) 
where xij = amount of input i to DMUj, yrj = amount of output r to DMUj, Vi = the weight 
given to input i, Ur = the weight given to output r, m = the number of inputs, s = the 
number of outputs, W = the number of virtual weights restrictions, n = the umber of 
DMUs, ∑
=
m
i
iijVx
1
= the virtual input given to DMUj, ∑
=
s
r
rrjUy
1
= the virtual output given to 
DMUj, αiw = the preference of virtual input to restriction w, βrw = the preference of virtual 
output to restriction w, and kw = the intercept of line restriction w. 
While we set αiw = 0 (for all i) or βrw = 0 (for all r) with kw =0, Eq. (1) translates an 
ordering of preference in outputs or inputs, as expressed in Eq. (2) and Eq. (3). 
,,,1,,,1,0
1
nj   WwUy rrj
s
r
rw KK ==≥∑
=
α  (2) 
,,,1,,,1,0
1
nj   WwVx iij
m
i
iw KK ==≥∑
=
β  (3) 
These kinds of restrictions mentioned above in Eq. (2) and Eq. (3) are useful while 
managers concentrate the preferences on indices of the same measure. 
Besides, if there is at least one αiw ≠ 0 (for all i) and one βrw ≠ 0 (for all r) with kw 
=0, Eq. (1) can be translated as an ordering of preference in input-output, as expressed in 
Eq. (4). 
,,,1,,,1,0
11
nj   WwUyVx rrj
s
r
rwiij
m
i
iw KK ==≥+∑∑
==
βα  (4) 
Eq. (4) is used to express a known relationship between a pair of inputs and outputs. For 
instance, to produce one unit of output, one needs to consume at least a certain level of an 
input. 
 
2.2.2 The proportional virtual weights restrictions 
Wong et al. [6] proposed the use of virtual weights restrictions, and in particular, 
proportional virtual weights restrictions, which were intended to make it easier for 
managers to quantify value judgments in terms of contribution percentage in the same 
 34
O
jP1  and 
O
jP2  to satisfy these proportional virtual weights restrictions in the output 
measure. The current paper introduces one method to set initial feasible bounds on the 
virtual weights to avoid the possible infeasibility in the virtual weights restrictions 
mentioned above. 
 
3. Our procedure 
This section introduces one procedure to use the virtual weights restrictions in the 
CWA model for the purpose of obtaining one preferable and robust ranking in the 
assessment results. For the proportional virtual weights restrictions, the infeasibility 
which occurs in the setting of the lower and upper bound is discussed and solved in the 
current procedure. In order to express the scenario of units under the manager’s 
governance, referred to by Sarrico et al. [7], we call the unit a unit of assessment (UOA) 
in this paper in order to discriminate it from the DMU in the DEA model. Besides, in 
order to unify the terms in the context of the following sections, we regard the 
to-be-minimized and to-be-maximized indices in our initial problem as input and output 
indices, respectively. 
 
3.1 The new setting of bounds in proportional virtual weights restrictions 
In order to solve the potential infeasibility issue that occurs in the proportional 
virtual weights restrictions, the current paper proposes one systematic setting in the lower 
and upper bounds of the proportional virtual inputs and outputs to ensure the feasibility of 
proportional virtual weights restrictions. Besides solving the infeasibility problems, we 
use the systematic setting to analyze the relationship between ranking and proportional 
virtual weights restrictions in section 4. 
Exploring the reasoning of infeasibility in proportional virtual weights restrictions, 
under the same measure, the sum of the upper bound to all outputs (∑
=
s
r
rb
1
) cannot reach 
1.0 or the sum of the lower bound to all outputs (∑
=
s
r
ra
1
) exceeds 1.0. In order to avoid 
this problem, we rewrite Eq. (7) and Eq. (8) to Eq. (9) and Eq. (10) respectively by 
formulating the lower bound and upper bound of input and output with the function of 
parameters -iτ , 
+
iτ , 
-
rδ , and +rδ . For the purposes of ensuring the proportion is 
between 0 and 1.0, we give the following range 0 ≦ -iτ ≦ 1, 0 ≦ +iτ ≦ m-1, 0 ≦ -rδ ≦ 1 
and 0 ≦ +rδ ≦ s-1. 
 36
,,,1,,,1
1
,,,1,,,10
sz   sr         
zr   -B
zr      B
sz   mi                           
OU
z
OU
z
rw
iw
KK
KK
==
⎩⎨
⎧
=
≠
=
===
,
,
,
β
α
 (14) 
Similarly, while Eq. (12) is divided into two parts, ILi
I
ij BP ≥  and 
IU
i
I
ij BP ≤ , they can be 
rewritten as Eq. (4) with the setting of parameters iwα  and rwβ  shown in Eq. (15) and 
Eq. (16), respectively. 
,,,1,,,10
,,,1,,,1
1
mz   sr                          
mz   mi       
zi   B-
zi     B-
rw
IL
z
IL
z
iw
KK
KK
===
==
⎩⎨
⎧
=
≠
=
,
,
,
β
α
 (15) 
,,,1,,,10
,,,1,,,1
1
mz   sr                          
mz   mi      
zi   -B
zi      B
rw
IU
z
IU
z
iw
KK
KK
===
==
⎩⎨
⎧
=
≠
=
,
,
,
β
α
 (16) 
As for the amount of restrictions, if there exist m inputs and s outputs, the proportional 
virtual weights restrictions, both Eq. (11) and Eq. (12), can be written as 2s+2m 
restrictions of Eq. (4) with W = 2s+2m. 
The advantage of bound setting in the proportional virtual weights restrictions 
mentioned above is that the manager can systematically choose the different -iτ , 
+
iτ , 
-
rδ  
and +rδ  to analyze the relationship between ranking and the interval, which is composed 
of the lower and upper bound. For instance, the manager can start the analysis from the 
unconstrained case, -iτ =1, 
+
iτ = m-1, 
-
rδ =1, and +rδ = s-1, with the interval [ OLrB , OUrB ] 
= [0%, 100%] and [ ILiB , 
IU
iB ] = [0%, 100%] to 
O
rjP  and 
I
jiP , and step by step shorten 
the interval to the extreme cases, -iτ =0, 
+
iτ = 0, 
-
rδ =0 and +rδ = 0, where each input or 
output index has equal proportion determined separately. 
 
3.2 CWA with virtual weights restrictions (VWR-CWA) 
Because the proportional weights restrictions are one case of the virtual assurance 
regions, we add the general form of virtual weights restriction Eq. (1) into the constraints 
of CWA fractional programming (P1). Then, (P1) can be translated into (P2): 
(P2) VWR-CWA-FP 
 
 38
Property 2 
If ζ j* = ζ i* < 1.0, then the performance of UOAj is better than UOAi if Δj* < Δi*. 
 
Property 3 
If ζ j*= ζ i*= 1.0, then the performance of UOAj is better than UOAi if πj* > πi*. 
 
4. Numerical example 
In this section, there are two numerical examples to be discussed. We first give a 
test example to demonstrate the discrimination power of the proposed approach in the 
current paper. The example with the characteristic of a large scale range in the values of 
performance indices across UOAs could appeal to the intuitive ranking of UOAs by 
merely observing the value in the performance indices. Then, it showed that VWR-CWA 
obtained the consistent ranking with the intuitive ranking. Secondly, one illustrative 
example shows how the manager of a retailer could obtain preferable and robust ranking 
results for all branches. 
 
4.1 Test example 
Table 1 gives the simulated data set proposed by Liu et al. [18], with two inputs and 
output for seven UOAs. The test example possesses the characteristic of a large scale 
range in the value across UOAs, such that UOA1, UOA2, UOA3, UOA5, UOA6 and UOA7 
are shown to be many times larger than UOA4. These UOAs are ranked intuitively as 
UOA1, UOA2, UOA3, UOA4, UOA5, UOA6, UOA7 by comparing the value of input index 
jx1 . The rankings assessed in CWA, as shown in Table 2, are consistent with intuitive 
ranking. By observing the proportion in input measure, jx2  plays a more important role 
than jx1  for all UOAs (
I
j
I
j PP 21 < ) according to the assessment results of CWA. We try 
to add the preference of the performance indices to understand whether VWR-CWA 
works to obtain the consistent ranking with intuitive ranking. 
The general form of virtual assurance region Eq. (4) can be rewritten as Eq. (20) for 
the test example with two input indices and one output index. 
,7,,1,0111222111  jUyVxVx jjj K=≥++ βαα  (20) 
If we have the preference that the proportion of jx1  is larger than twice of jx2 , then the 
parameters ( 1α , 2α , 1β , 2β ) are substituted by (1, -2, 0, 0). Eq. (20) is further 
rewritten as Eq. (21) for all UOAj: 
 40
branches. The comparison between VWR-DEA and VWR-CWA, as depicted in column 
(2) of Tables 4 and 5, would have similar results. These results imply that the proportion 
allocation obtained, whether in the DEA or VWR-DEA models of all branches, cannot 
reflect the manager’s preference altogether. 
CWA provided the assessment results in column (1) of Table 5. They show that 
branch A and B are the best and worst, respectively. Following these common weights 
( *V1 , 
*V2 , 
*U1 , 
*U 2 ) = (1.00, 1.27, 1.00, 1.00) used in CWA, as depicted in column (1) 
of Table 5, the manager would observe a large difference in relative proportion, whether 
between the virtual inputs ( IjP1 ,
I
jP2 ) or outputs (
O
jP1 ,
O
jP2 ); for instance, in the row of 
branch A, Employee (0.02%) vs. Cost (99.8%) and Turnover (95.0%) vs. Profit (5.0%). 
From a managerial perspective, it reveals that the input index Cost and output index 
Turnover take a considerably large proportion of branch A’s rating. The other branches 
appear to be in a similar situation. This kind of extreme disproportion may not be 
accepted under specific practical exercises, even though the manager expects quick 
business development. In fact, in any case, Profit still plays an important role in rating. 
The virtual assurance region can assist the manager in easily adding his preference in 
Profit. 
The manager reassesses these branches using the VWR-CWA model. The 
assessment results of VWR-CWA are arranged in column (2) of Table 5 by using the 
other common weights ( *V1 , 
*V2 , 
*U1 , 
*U 2 ) = (94.25, 1.92, 1.00, 13.3). Focusing on 
the row of branch A in Table 5, the proportion of Turnover ( OjP1 )
 vs. Profit ( OjP2 ) changes 
from the CWA disproportion 95.0% vs. 5.0% to the 58.7% vs. 41.3% in VWR-CWA. 
Similar changes also can be seen in other branches. The rankings of the eight branches 
under CWA and VWR-CWA are completely different. However, the ranking obtained 
from VWR-CWA is more preferable and reliable to the manager because its preference is 
considered. 
Obviously, the virtual restriction Eq. (23) has an influence upon the final ranking of 
the branches. In the above case, Eq. (23) is one of general form Eq. (4) with the 
parameter W = 1. In order to strengthen the preference for the manager, they can add 
more restrictions to obtain its most preferable ranking for all branches in VWR-CWA. 
 
4.2.2 Robust ranking 
Column (2) of Table 5 shows the single preference that the manager assigned. It is 
common that there exists a situation in which the manager has no preference about the 
 42
,,,,08020 2211 H Aj Uy.Uy.- jj K=≥+  (25) 
,,,,01090 2211 H Aj     Vx.-Vx.  jj K=≥  (26) 
,,,,09010 2211 H Aj    Vx.Vx.- jj K=≥+  (27) 
As Table 7 depicted, the ranking is inconsistent between the two combinations C12 and 
C22. For managers, it is expected that more ranking outcomes form all kinds of 
combinations that can help them make more accurate and robust judgments in the ranking 
of branches. 
While compiling statistics from 25 combinations, we obtained the percentage of 
occurrence frequency in each ranking, as depicted in Table 8. It is not hard to observe 
that except for branch G, the high occurrence frequency centralizes in a few rankings for 
each branch. For instance, branch H is only ranked 1st and 2nd. For branch E, the ranking 
of 7th and 8th occurs in all combinations. Undoubtedly, branch H is always better than 
branch E. If managers choose the highest occurrence frequency as the representative 
branch of each ranking level, the ranking list for 1st to 8th is H, A, C, F, D, B, E and G. 
Under the above ranking rule, the ranking of branch G is debatable due to its 
average occurrence in multiple ranking levels. In other words, branch G’s ranking varies 
largely under different combinations. We further trace the ranking status of branch G in 
all combinations, as depicted in Table 9. While fixing the interval [ OLrB , 
OU
rB ] with [0%, 
100%] or [10%, 90%] for OrGP , branch G is ranked the last of all branches, whatever the 
interval for IiGP . On the contrary, while we shorten the interval [
OL
rB , 
OU
rB ] step by step 
from [0%, 100%] to [40%, 60%] for OrGP , fixing the interval [
IL
iB , 
IU
iB ] at [0%, 100%] 
for IiGP , branch G can reach the best form of all branches.  
Following the above observation, we observe that the ranking of branch G is deeply 
affected by the variation of interval [ OLrB , 
OU
rB ]. If the manager is asked to only select 
some combinations as the reference of assessment, they should concentrate more 
attention in determining the appropriate interval [ OLrB , 
OU
rB ]. Branch G will obtain a 
different ranking while the manager determines a different interval [ OLrB , 
OU
rB ]. As for 
the determination of interval [ ILiB , 
IU
iB ], in this case it is not necessary for the manager 
to cost more effort because these combinations show the same ranking while the interval 
[ ILiB , 
IU
iB ] varies. 
 44
different values of lower and upper bounds. 
There are some suggestions to be noted in the application of the current procedure. 
In carrying out the assessment, if the manager categorizes the performance indices as 
input indices and output indices according to its subject or intuitive judgment, including 
the casual relationship among the performance indices, it is easy to confuse input indices 
and to-be-minimized indices, or output indices and to-be-maximized indices. For instance, 
the lower defective rate of a product is superior and desirable for a manager of factories. 
The manager may think the defective rate of the product is the output indices in assessing 
the production efficiency of factories with input resources. However, based on the current 
procedure, the defective rate of a product is a to-be-minimized index. This is a possible 
conflict in the category of performance index in two systems. Therefore, the category of 
performance indices is suggested first by the idea of to-be-maximized/to-be-minimized 
indices, and then they are transferred to the output/input indices used in the model. 
Besides, for the assessment without a to-be-minimized index (input index), an artificial 
input index is added for all units with value 1.0. It is similar to the assessment without a 
to-be-maximized index (output index). 
As for the future development of the current procedure, we offer the following 
directions. The application of the procedure proposed in this paper is simplified in order 
to set the same interval in input measure and output measure, for the convenience of 
observing the interaction between the ranking and boundary of the feasible region. In 
reality, the application can be expanded to the case that sets different intervals for variant 
indices in the same measure, even in different measures. Besides, one appropriate size of 
combinations is a point of further analysis in the approach. The influence on the size of 
combinations plays an important role in the robustness of the ranking. 
 46
DEA. Computers & Operations Research 1994;21(5):543-556. 
[17] Sinuany-Stern Z, Friedman L. DEA and the discriminant analysis of ratios for 
ranking units. European Journal of Operational Research 1998;111:470-478. 
[18] Liu FHF, Peng HH. Ranking of DMUs on the DEA frontier with common 
weights. Accepted by Computers & Operations Research 2006. 
 48
ch j 
I
jP1 , 
*
jv1  
I
jP2 , 
*
jv2  
O
jP1 , 
*
ju1
O
jP2 , 
*
ju2
I
jP1 , 
*
jv1
I
jP2 , 
*
jv2  
O
jP1 ,
*
ju1
O
jP2 , 
*
ju2
A 35.2%, 17.58 
64.8%, 
0.10 
95.1%, 
0.12
4.9%, 
0.12
13.0%, 
06.49
87.0%, 
0.13 
58.7%, 
0.07 
41.3%, 
0.92
B 45.8%, 21.82 
54.2%, 
0.07 
82.6%, 
0.09
17.4%, 
0.40
100.0%, 
47.62
0.0%, 
0.00 
60.8%, 
0.06 
39.2%, 
0.86
C 65.4%, 36.33 
34.6%, 
0.05 
78.1%, 
0.10
21.9%, 
0.61
100.0%, 
55.56
0.0%, 
0.00 
62.6%, 
0.08 
37.4%, 
1.01
D 34.1%, 14.21 
65.9%, 
0.08 
96.5%, 
0.10
3.5%, 
0.09
100.0%, 
41.67
0.0%, 
0.00 
66.6%, 
0.06 
33.4%, 
0.76
E 0.0%, 00.00 
100.0%, 
0.12 
100.0%, 
0.10
0.0%, 
0.00
0.0%, 
00.00
100.0%, 
0.15 
63.9%, 
0.07 
36.1%, 
0.88
F 46.0%, 19.98 
54.0% ,0.
06 
81.2%, 
0.08
18.8%, 
0.37
11.7%, 
06.44
88.3%, 
0.13 
58.4%, 
0.07 
41.6%, 
0.93
G 10.1%, 03.49 
89.9%, 
0.13 
72.4%, 
0.09
27.6%, 
0.44
30.1%, 
10.38
69.9%, 
0.10 
0.0%, 
0.00 
100.0%, 
1.61
H  7.5%, 02.90 
92.5%, 
0.11 
73.9%, 
0.08
26.1%, 
0.37
100.0%, 
38.46
0.0%, 
0.00 
0.0%, 
0.00 
100.0%, 
1.42
 
Table 5 
The assessment results of CWA and VWR-CWA in illustrative example 
 
(1) CWA (2) VWR-CWA with Eq. (23) 
( *V1 ,
*V2 ,
*U1 ,
*U 2 ) = (1.00, 1.27, 1.00, 
1.00) 
( *V1 ,
*V2 ,
*U1 ,
*U 2 ) = (94.25, 1.92, 1.00, 
13.30) 
Branc
h j 
Scor
e 
Rankin
g 
I
jP1  
I
jP2
O
jP1
O
jP2
Scor
e 
Rankin
g 
I
jP1  
I
jP2  
O
jP1  
O
jP2
A 1.000 
1 0.02
% 
99.8
% 
95.0
%
5.0
% 
1.00
0 1 
13.0
% 
87.0
% 
58.7
% 
41.3
% 
B 0.902 
8 0.02
% 
99.8
% 
95.4
%
4.6
% 
0.93
5 6 
11.8
% 
88.2
% 
60.9
% 
39.1
% 
C 0.947 
4 0.02
% 
99.8
% 
95.7
%
4.3
% 
0.99
6 3 
11.2
% 
88.8
% 
62.6
% 
37.4
% 
D 0.984 
2 0.02
% 
99.8
% 
96.4
%
3.6
% 
0.96
4 5 
12.5
% 
87.5
% 
66.6
% 
33.4
% 
E 0.934 
6 0.03
% 
99.7
% 
95.9
%
4.1
% 
0.87
8 7 
13.8
% 
86.2
% 
63.9
% 
36.1
% 
F 0.931 
7 0.02
% 
99.8
% 
95.0
%
5.0
% 
0.97
5 4 
11.9
% 
88.1
% 
58.5
% 
41.5
% 
G 0.956 
3 0.03
% 
99.7
% 
92.7
%
7.3
% 
0.87
5 8 
16.9
% 
83.1
% 
48.8
% 
51.2
% 
H 0.945 
5 0.02
% 
99.8
% 
93.2
%
7.8
% 
0.99
8 2 
12.8
% 
87.2
% 
50.8
% 
49.2
% 
 
Table 6 
The 25 combinations of interval limitation for OrjP  and 
I
ijP  
Combination [ IUi
IL
i B ,B ] 
 50
Total 25 
2
5
2
5
2
5
2
5
2
5 
2
5
2
5
Robust Ranking H A C F D B E G
 
Table 9 
The ranking of G in the 25 ranking results with the C1 to C25 restrictions 
Ranking of Branch 
G 
[ IUi
IL
i B ,B ] 
[0%, 
100%] 
[10%
, 90%] 
[20%
, 80%] 
[30%
, 70%]  
[40%
, 60%] 
[
OU
r
OL
r B ,B ] 
[0%, 
100%]  
8th 8th 8th 8th 8th 
[10%, 
90%]  
8th 8th 8th 8th 8th 
[20%, 
80%] 
6th 6th 6th 6th 7th 
[30%, 
70%]  
2nd 2nd 2nd 3rd 5th 
[40%, 
60%] 
1st 1st 2nd 2nd 3rd 
 
Table 10 
The proportion variations of indices of branch G while varying [ ILiB , 
IU
iB ] 
Combin
ation 
Ran
king 
[
IU
i
IL
i B ,B ] 
I
GP1
 
IP2
 
[
OU
r
OL
r B ,B ] 
O
GP1
 
P2
 
C1 8th [0%, 100%] 
5
4% 
4
6% 
[0%, 
100%] 
7
4% 
2
6% 
C2 8th [10%, 90%] 
5
4% 
4
6% 
[0%, 
100%] 
7
4% 
2
6% 
C3 8th [20%, 80%] 
5
4% 
4
6% 
[0%, 
100%] 
7
4% 
2
6% 
C4 8th [30%, 70%]  
5
4% 
4
6% 
[0%, 
100%] 
7
4% 
2
6% 
C5 8th [40%, 60%] 
5
4% 
4
6% 
[0%, 
100%] 
7
4% 
2
6% 
 
Table 11 
The proportion variations of indices of branch G while varying [ OLrB , 
OU
rB ] 
Combin
ation 
Ran
king 
[
IU
i
IL
i B ,B ] 
I
GP1
 
IP2
 
[
OU
r
OL
r B ,B ] 
O
GP1
 
P2
 
C1 8th [0%, 100%] 
5
4% 
4
6% 
[0%, 
100%] 
7
4% 
2
6% 
C6 8th [0%, 100%] 
5
4% 
4
6% 
[10%, 
90%] 
7
4% 
2
6% 
C11 6th [0%, 100%] 
4
2% 
5
8% 
[20%, 
80%] 
6
6% 
3
4% 
C16 2nd [0%, 2 7 [30%, 5 4
 52
Appendix 3 
A data envelopment analysis model to select time-cost trade-offs in project 
management 
Fuh-Hwa F. Liu* & Jen-Shou Chang 
Department of Industrial Engineering & Management 
National Chiao Tung University, Hsin Chu City, Taiwan 
Corresponding author: fliu@mail.nctu.edu.tw 
 
Abstract 
 The literature on project management mainly deals with either project scheduling or 
project monitoring/controlling. The relationships between these two issues, however, are 
rarely studied. In this study, we first generate all the possible time-cost trade-off 
alternatives and obtain their critical paths. Then for each alternative, we collect the values 
of the six indices: network sensitivity, project duration, project total cost, critical path 
value ratio, net present value, and slack time value. These six values reveal the property 
of the alternative in scheduling and the managerial tasks such as monitoring and 
controlling. The aim of this research is to assess those alternatives with the six indices. In 
order to deal with some of the indices that have integer values, a data envelopment 
analysis (DEA) model is developed. The model is a slack-based measure with some side 
constraints for the virtual weights of the indices.  
 
1. Introduction 
Project management involves project scheduling, monitoring, and controlling. Many 
popular network models are useful in formulating a wide variety of project planning and 
scheduling problems. The critical path method (CPM) is a fundamental technique 
developed for project management (Hillier and Lieberman, 2001). Using CPM, project 
managers would define the activity specification, precedence relationship of all activities, 
determinate of quality of activity, and the estimate of resources required. CPM helps 
managers know the early and late times of activity, the slack times, the project duration, 
and the critical path.  
Project compression is often necessary when the project duration needs to be reduced 
to a predetermined day or when it would be more beneficial if the project duration were 
shorter. Most of the studies in the field focus on improving the efficiency of the 
 54
between these two issues, however, are rarely studied. In this research, we first generate 
all the possible time-cost trade-off alternatives and obtain their critical paths. Then for 
each alternative, we collect the values of the six indices: network sensitivity, project 
duration, project total cost, critical path value ratio, net present value, and slack time 
value. These six values reveal the property of the alternative in scheduling and the 
managerial tasks such as monitoring and controlling.  
The aim of this study was to assess those alternatives with the six indices. In order to 
deal with some of the indices that have integer values, we developed a DEA model. This 
model is a slack-based measure with some side constraints for the virtual weights of the 
indices.  
The next section presents the literature review. In Section 3, we introduce the 
performance indices of the CPM network associated with project monitoring and 
controlling. We also introduce a method of integrating the six indices into a single 
performance index. Section 4 presents the DEA model we developed. In Section 5, we 
present an illustrative example. Finally, in Section 6, we give our conclusion and 
implications for future research.  
 
2. Literature review 
2.1 Time-cost optimization 
Time and cost are the two important indices of a contract for construction projects. In 
general, the more cost assigned to the activities of a project network, the less time to 
complete it. The problem definition was that given a complete CPM network and all 
relationships of the time and cost in each node, all combinations by each node would 
result in a minimal total project cost for several specified project completion times. 
Hence, given a feasible completion time, one is able to find the critical path of the project 
network and the total cost. Therefore, all the possible combinations (alternatives) of 
completion times and their respective total cost will form a time-cost trade-off curve 
(Ragsdale, 2004).  
Mathematical programming (Scott et al., 1996) and heuristic algorithm 
(Demeulemeester et al., 1996; Demeulemeester et al., 1998) are the two major 
project-crashing solution methods. Mathematical programming requires more 
computation time to obtain an optimal solution than does heuristic algorithm. A 
comprehensive review of solution approaches can be found in the work of De et al. 
(1995), Ahuja and Thiruvengadam (2004).  
 56
project network, whereas the second constraint grants that the project would be 
completed in no more than jD days.  
 
2.2 Literature on DEA 
The DEA was originally proposed by Charnes et al. (1978). Its major idea is the 
performance evaluation of multi-criteria decision-making. In relation to his, Tone (2001) 
proposed a slacks-based measurement model for evaluation. Furthermore, Sebastian and 
Gabriel (2006) showed a mixed integer program model to deal with some of the integer 
data.  
The DEA was invented to assess decision-making units (DMUs) posterior to 
evaluation techniques. Each unit evaluated can find the best performance by itself. If the 
performance of some units is not in the efficiency frontier, the model can tell this unit 
how to improve its performance.  
As indicated by Sarrico and Dyson (2004), the expressions “DMU” and “decision 
maker” might be misleading. In fact, the project manager as the decision maker does the 
evaluation at a higher level. In the current paper, each project schedule alternative is 
denoted as a unit of assessment (UOA). In this case, the DEA assessment becomes the 
project manager. A decision maker would impose his/her preferred structure on the most 
favorable measurement for a UOA versus the other UOAs. Sarrico and Dyson (2004) 
proposed a virtual assurance region method so that by measuring the relative performance 
of a UOA versus the other UOAs and finding the most favorable scenario, the manager 
could incorporate his/her value judgments to the DEA model 
 
2.2.1 The original CCR model 
Charnes et al. (1978) originally proposed the DEA model as a method for evaluating 
the relative efficiency of decision-making units (DMUs), which differ in the quantities of 
inputs that they consume and in the outputs that they produce. It provides a “measure of 
efficiency” for each DMU. This is accomplished by relying on a technique based on 
Linear Programming (LP). In general, the aim of DEA is not to select one DMU but 
rather to separate the efficient from the inefficient DMUs and to indicate the “efficient 
peers” for each inefficient DMU. The DEA approach seems to be advantageous to users, 
as it requires less information from decision makers (DM) and analysts. Assuming there 
are n  DMUs, the performance of each DMU, say DMUj, is characterized by a 
 58
.,...,1    ,0
,,...,1   ,0
,,...,1,0
,1..
11
1
1
miv
sru
njvxuy
vxts
uyMax
i
r
m
i
iij
s
r
rrj
m
i
iio
s
r
rro
=>≥
=>≥
=≤−
=
∑∑
∑
∑
==
=
=
ε
ε
 (4) 
In turn, Model (4) can be transformed into a dual form as shown in Model (5).  
.,...,1,0;,...,1,0;,...,1,0
,,...,1,
,,...,1,0..
1
1
11
srsmisnj
srysy
misxxts
ssaxM
rij
ror
n
j
jrj
ioio
n
j
jij
s
r
r
m
i
io
=≥=≥=≥
==−
==+−
⎟⎠
⎞⎜⎝
⎛
+−
+−
+
=
−
=
=
+
=
−
∑
∑
∑∑
λ
λ
θλ
εθ
 (5) 
The constraints of Model (5) mean that the DMUo must be enveloped in the 
production possibility set of all DMUs. jλ  is the reference weight assigned to DMUj. If 
the optimal value, efficiency score 1* ≤oθ , it indicates that DMUo is an inefficient unit 
and that DMUj is a unit on the efficient frontier that acts as one of DMUo’s reference 
(benchmark) units for improving its efficiency score. The value of each input index i, xio 
should be reduced to xio *oθ . The radial efficiency score does not include the slacks and 
overestimates the efficiency of DMUo. 
 
2.2.2 The slacks-based measure model 
Tone (2001) proposed a slacks-based measure model (SBM) that would not violate 
the important properties in DEA such as unit invariant, monotone, and translation 
invariant. The SBM measures the input excess and the output shortfall, which is different 
from the radial efficiency of Model (5). 
 60
.0,,...,10
,
,,...,11
,,...,1
,1
..
11
11
s1,...,rumiv
s1,...,r    ,
sy
u
mi    ,
mx
v
nj    0,yuxv
yuxv
ts
Max
ri
ro
r
io
i
s
r
rjr
m
i
iji
s
r
ior
m
i
ioi
=≥=≥
=≥
=≥
=≤+−
=−+
∑∑
∑∑
==
==
ξ
ξ
ξ
 (9) 
Variables mivi ,...,1, =  and srur ,...,1, =  are the weights for the (m + s) indices. 
Then the SBM efficiency score would not be greater than the radial efficiency score. 
 
2.2.3 Virtual assurance region  
The concept of virtual weight restrictions (i.e., the product of the input/output factor 
by its multiplier) was first proposed by Wong and Beasley (1990). Sarrico and Dyson 
(2004) proposed a general form of virtual weights assurance region restrictions, as 
inequality constraints (10).  
.,...,1,
1 1
njW,1,...,w kuybvxa
m
i
s
r
wrrjrwiijiw ==≥+∑ ∑
= =
 (10) 
The general form could be further classified into three types: simple, type I, and type 
II virtual assurance regions. 
 
2.2.4 Integer DEA model 
The legacy of DEA models was the assumption that the values of the indices are 
continuous. An inefficient DMU would project to an improved target on the efficient 
frontier with continuous values. In some real cases, like the number of employees, the 
index must be an integer. The improved target (a continuous improved value) the 
manager would get is, however, meaningless and infeasible. In relation to this, Sebastian 
and Gabriel (2006) proposed an integer DEA model for solving the index values that are 
integers.  
 62
This study defined six indices to measure the relative efficiency of each PSAj:  
jx1  denotes the network sensitivity of PSAj and is equal to rj. Assume that each node 
on the critical path has delay possibility, p. The delay possibility of PSAj, P, is equal to 
1-(1-p)
rj. The larger the rj value is, the higher the P value will be. Despite all the other 
five indices, a smaller jx1  is preferred. For instance, managing three activities is easier 
than managing seven activities. jx1 should be an integer value. 
jx2  denotes the project duration of PSAj. Despite all other five indices, a shorter 
project duration is preferred. jx2 should be an integer value. The duration of PSAj is 
computed as  
time
KjKjj NTx +=
*
2 . (13)  
 jx3  denotes the project total cost of PSAj. Despite all other five indices, less total 
cost is preferred. The total cost of PSAj is computed as  
∑
=
=
K
k
t
kjj Nx
1
cos
3 . (14) 
jx4  denotes the net present value of PSAj. Elmaghraby and Herroelen (1990) and 
Grinold (1972) discussed the net present value in project scheduling problem. In this 
study, we assumed that the project manager is from the borrower’s point of view. Each 
cost of the activity is borrowed from the lender when the activity is just starting. Despite 
all other five indices, a smaller net present value is preferred. The net present value of 
PSAj is computed as 
∑
=
∗=
K
k
Ttcos
kjj
*
kNx
1
4 β , βζ =+ )1(
1   (15) 
β  is the discount factor, ζ is the interest rate. 
jy1  denotes the critical path value ratio of PSAj, or the ratio of the total time-cost 
of the nodes on the critical path to the total cost of the whole nodes on the network. 
∑∑
=∈
=
K
k
t
kj
time
kj
Rk
t
kj
time
kjj NNNNy
1
coscos
1
j
.  (16) 
 For instance, a car company designs a new type of car for sale. The prototype of 
the car needs to be approved by the government. The activity may not be expensive, but 
it takes a considerably long time to be completed. The activity is on the critical path and 
 64
with the DEA terms Unit of Assessment (UOA) and decision making unit (DMU). The 
smaller the values x1j, x2j, x3j, and x4j in the denominator, the greater the performance 
score is. These to-be-minimized indices are equivalent to the DEA term input indices. 
Meanwhile, the larger the values y1j and y2j in the numerator, the greater the performance 
score is. These to-be-maximized indices are equivalent to the DEA term output indices. 
The input and output terms do not indicate the cause and effect relationship.  
 
4. Methodology  
As indicated in the above section, Network sensitivity jx1  (rj) is an integer value. We 
also assumed that project duration jx2 is an integer value. To evaluate the performance 
of PSAj, we combined the concept of Models (9), (10), and (11) and derived the 
following model.   
The SMB-Virtual AR-Integer model was formulated as follows. First, we added the 
virtual weight constraints (10) into Model (9). 
.,...,10,,...,10
,,...,1  ,,...,1   ,
,,...,1    ,
,,...,1    ,1
,,...,1    0,
,1
..
1 1
11
11
srumiv
njWwkuybvxa
sr
sy
u
mi
mx
v
njyuxv
yuxv
ts
Max
ri
m
i
s
r
wrrjrwiijiw
ro
r
io
i
s
r
ijr
m
i
iji
s
r
ior
m
i
ioi
=≥=≥
==≥+
=≥
=≥
=≤+−
=−+
∑ ∑
∑∑
∑∑
= =
==
==
ξ
ξ
ξ
 (19) 
 Let intΩ  represent the set of integer input indices, and intΨ  represent the set of 
integer output indices. Then we derived the dual form of Model (19) and added the 
integer conditions.  
 66
activities will get the latest project completion time of 46 days. The way to find the 
time-cost trade-off curve is to resolve Model (1) at all possible times. 
Employing Model (1) for 19 times as Dj is replaced by 28, 29, …, and 46, 
respectively. Table 2 depicts these 19 possible PSAs. 
 
Table 2: The 19 possible project schedule alternatives   
Table 3 depicts the data of PSA19. The values of x1,19, x2,19, and x3,19 can be read 
directly from Table 3, 8, 46, and 98500, respectively. The computations for the values of 
the remaining indices are shown in the following equations. Table 4 listed the values of 
indices for all PSAs. 
 
x4,19 = 5000+12000* ( ) 31 −+ ζ +23000* ( ) 71 −+ ζ +22500* ( ) 171 −+ ζ +5000* ( ) 251 −+ ζ
+12000* 
( ) 331 −+ ζ +9000* ( ) 381 −+ ζ +10000* ( ) 421 −+ ζ . 
y1,19 = (3*5000+4*12000+10*20000+10*20000+8*8000+8*5000+5*8000+4*7000 
+4*10000)/(3*5000+4*12000+3*3000+10*12000+8*8000+4*11000+6*3500+ 
8*5000+5*8000+5*4000+4*7000+2*2000+4*10000) = 0.829. 
y2,19 = (3000/3*15+11000/4*4+3500/6*2+4000/5*2+2000/2*2)=30766.6. 
 
Table 3: The detail data of PSA19 
Table 4: The indices data of each PSAj (assume ζ = 0.0274) 
 
This paper study also proposed one friendly setting in the lower and upper bounds of 
the proportional virtual input/output. As Equation (21) and Equation (22) illustrate, we 
desired to limit to average the proportion of virtual input/output. For giving the flexible 
region to the virtual input/output, we added the parameters lrδ  and urδ  to be 0 ≦ lrδ ≦ 
1 and 0 ≦ urδ ≦ s-1 to control the proportion to be positive. The flexible region was also 
present when we adjusted the parameters liδ  and uiδ , where 0 ≦ liδ ≦ 1 and 0 ≦ uiδ ≦ 
 68
int*
11
~ xx j = ,  (24) 
∑∑
= =
−
−−=
n
j
W
w
wjjwjj xasxx
1 1
*
22
*
222
~ η ,   (25) 
int*
22
~ xx j = , (26) 
∑∑
= =
+ ++=
n
j
W
w
wjjwjj ybsyy
1 1
*
11
*
111
~ η ,  (27) 
∑∑
= =
+ ++=
n
j
W
w
wjjwjj ybsyy
1 1
*
22
*
222
~ η . (28) 
The projected data of the 19 PSAs are arranged in the following table. 
 
Table 6: The projected data of the 19 PSAs 
In the last column of Table 5, PSA17 has *oΦ  which is equal to one. Its performance 
is not dominated by the others. However, if the virtual weight conditions, such as 
Equations (21) and (22), are modified, one can have different results. Sometimes, this 
would make more than one of the PSAs’ efficiencies equal to one. An approach that 
could choose the best PSA may allow further comparisons among these alternatives. 
 
6. Conclusion and discussion 
A number of research issues remain to be addressed in the future. We used six indices 
to select all the possible project schedule alternatives. The number and context of indices 
were not limited. Other interesting indices may be identified subject to the characteristics 
of individual projects. For a specific project and certain practical managerial 
considerations, one may add more virtual assurance region restrictions to the DEA model 
we proposed. In addition, ranking in DEA is an interesting topic. The more altogether 
different methods we use to conform to the problem, the more information we can 
discover (Angulo-Meza and Lins, 2002). In the case of times of activities on a project 
network that are uncertain such as the problems under Program Evaluation and Review 
Technique (PERT), more evaluation indices and other DEA models are required to select 
the possible project schedule alternatives. 
 
References 
Ahuja, V., Thiruvengadam V., 2004. Project scheduling and monitoring current research 
 70
of Construction Research 3(1), 55-66. 
Lozano, S., Villa, G., 2006. Data envelopment analysis of integer-value inputs and 
outputs. Computers & Operations Research 33, 3004-3014. 
Nicholas, J.M., 2001. Project Management for Business and Technology. Ohio: Prentice 
Hall. 
Ragsdale, T.C., 2004. Spreadsheet Modeling & Decision Analysis. Ohio: THOMSON. 
Sarrico, C.S., Dyson, R.G., 2004. Restricting virtual weights in data envelopment 
analysis. European Journal of Operational Research 159, 17-34. 
Tone, K., 2001. A slacks-based measure of efficiency in data envelopment analysis. 
European Journal of Operational Research 130, 498-509. 
Wong, Y.-H.B., Beasley, J.E., 1990. Restricting weight flexibility in data envelopment 
analysis. Journal of the Operational Research Society 41(9), 829–835. 
http://portal.isiknowledge.com 
 
Table 1: The virtual project data 
Node Data 
kN  
Normal 
Time 
nt
kN  
Normal 
Cost 
nc
kN  
Crash 
Time 
ct
kN  
Crash 
Cost 
cc
kN  
Allowable
Crash 
nt
kN -
ct
kN
Crash 
Cost/day 
cs
kN  
Successor
( )kS  
N1 3 $5,000 2 $6,000 1 $1,000 N2
N2 4 $12,000 3 $15,000 1 $3,000 N3 N4
N3 3 $3,000 2 $3,500 1 $500 N8
N4 10 $20,000 6 $25,000 4 $1,250 N5 N6 N7
N5 8 $8,000 5 $10,000 3 $667 N8
N6 4 $11,000 3 $12,000 1 $1,000 N8
N7 6 $3,500 4 $4,500 2 $500 N8
N8 8 $5,000 5 $6,500 3 $500 N9 N10
N9 5 $8,000 3 $9,500 2 $750 N11
N10 5 $4,000 2 $5,500 3 $500 N12
N11 4 $7,000 2 $8,500 2 $750 N13
N12 2 $2,000 1 $2,500 1 $500 N13
N13 4 $10,000 2 $12,000 2 $1,000  
 
Table 2: The 19 possible project schedule alternatives   
PSAj Time Cost Critical Paths Critical Nodes 
PSA1 28 117500 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N13 
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
PSA2 29 114500 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
 72
N13 
PSA16 43 100000 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1, N2, N4, N5, N8, N9, N11, N13 
PSA17 44 99500 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1, N2, N4, N5, N8, N9, N11, N13 
PSA18 45 99000 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1, N2, N4, N5, N8, N9, N11, N13 
PSA19 46 98500 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1, N2, N4, N5, N8, N9, N11, N13 
 
Table 3: The detail data of PSA19 
Node Time Cost EST EFT LST LFT Slack Critical
N1 3 5000 0 3 0 3 0 Yes
N2 4 12000 3 7 3 7 0 Yes
N3 3 3000 7 10 22 25 15 No
N4 10 20000 7 17 7 17 0 Yes
N5 8 8000 17 25 17 25 0 Yes
N6 4 11000 17 21 21 25 4 No
N7 6 3500 17 23 19 25 2 No
N8 8 5000 25 33 25 33 0 Yes
N9 5 8000 33 38 33 38 0 Yes
N10 5 4000 33 38 35 40 2 No
N11 4 7000 38 42 38 42 0 Yes
N12 2 2000 38 40 40 42 2 No
N13 4 10000 42 46 42 46 0 Yes
 
Table 4: The indices data of each PSAj (assume ζ = 0.0274) 
PSAj Index PSAj Index 
 jx1  jx2  jx3  jx4  jy1 jy2  jx1 jx2 jx3  jx4  jy1  jy2
1 11 28 117500 117111 0.883 10750 11 11 38 103833 103336 0.902 18500
2 11 29 114500 114086 0.884 10750 12 11 39 102833 102346 0.903 18500
3 11 30 113250 112821 0.887 11750 13 9 40 102083 101600 0.861 20300
4 11 31 112000 111574 0.890 11750 14 9 41 101333 100854 0.862 22100
5 11 32 110750 110324 0.891 11750 15 8 42 100666 100180 0.826 26433 
6 11 33 109500 109058 0.894 12750 16 8 43 100000 99506 0.827 30766 
7 11 34 108250 107792 0.896 13750 17 8 44 99500 99001 0.828 30766 
8 11 35 107000 106527 0.898 14750 18 8 45 99000 98496 0.829 30766 
9 11 36 105833 105354 0.900 18500 19 8 46 98500 97991 0.829 30766 
10 11 37 104833 104363 0.901 18500       
 
Table 5: The solutions of Model (19) for each PSAj )( *** twjwj ρη =  
PSA Variable
*
9λ *10λ *12λ *16λ *17λ * 19,2η *,14η *,196η *,128η *,198η *,29η *s −1 *s −3 *s −4 *1+s *2+s
*
oΦ
1 0 0.0
5 
0.1
3 
0.4
3 
0 0.34 0 0.27 0 0.2
7 
0.1
3 
0 0 0 0 1618
3 
0.57
1 
 74
Table 1: The virtual project data 
Node Data 
kN  
Normal 
Time 
nt
kN  
Normal 
Cost 
nc
kN  
Crash 
Time 
ct
kN  
Crash 
Cost 
cc
kN  
Allowable
Crash 
nt
kN -
ct
kN
Crash 
Cost/day 
cs
kN  
Successor
( )kS  
N1 3 $5,000 2 $6,000 1 $1,000 N2
N2 4 $12,000 3 $15,000 1 $3,000 N3 N4
N3 3 $3,000 2 $3,500 1 $500 N8
N4 10 $20,000 6 $25,000 4 $1,250 N5 N6 N7
N5 8 $8,000 5 $10,000 3 $667 N8
N6 4 $11,000 3 $12,000 1 $1,000 N8
N7 6 $3,500 4 $4,500 2 $500 N8
N8 8 $5,000 5 $6,500 3 $500 N9 N10
N9 5 $8,000 3 $9,500 2 $750 N11
N10 5 $4,000 2 $5,500 3 $500 N12
N11 4 $7,000 2 $8,500 2 $750 N13
N12 2 $2,000 1 $2,500 1 $500 N13
N13 4 $10,000 2 $12,000 2 $1,000  
 
Table 2: The 19 possible project schedule alternatives   
PSAj Time Cost Critical Paths Critical Nodes 
PSA1 28 117500 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N13 
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
PSA2 29 114500 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N13 
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
PSA3 30 113250 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N13 
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
PSA4 31 112000 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N13 
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
PSA5 32 110750 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N13 
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
PSA6 33 109500 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N13 
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
PSA7 34 108250 
N1-N2-N4-N5-N8-N9-N11-
N13 
N1-N2-N4-N7-N8-N10-N12-
N13 
N1, N2, N4, N5, N7, N8, N9, N10, N11, 
N12, N13 
 76
N11 4 7000 38 42 38 42 0 Yes
N12 2 2000 38 40 40 42 2 No
N13 4 10000 42 46 42 46 0 Yes
 
Table 4: The indices data of each PSAj (assume ζ = 0.0274) 
PSAj Index PSAj Index 
 jx1  jx2  jx3  jx4  jy1 jy2  jx1 jx2 jx3  jx4  jy1  jy2
1 11 28 117500 117111 0.883 10750 11 11 38 103833 103336 0.902 18500
2 11 29 114500 114086 0.884 10750 12 11 39 102833 102346 0.903 18500
3 11 30 113250 112821 0.887 11750 13 9 40 102083 101600 0.861 20300
4 11 31 112000 111574 0.890 11750 14 9 41 101333 100854 0.862 22100
5 11 32 110750 110324 0.891 11750 15 8 42 100666 100180 0.826 26433 
6 11 33 109500 109058 0.894 12750 16 8 43 100000 99506 0.827 30766 
7 11 34 108250 107792 0.896 13750 17 8 44 99500 99001 0.828 30766 
8 11 35 107000 106527 0.898 14750 18 8 45 99000 98496 0.829 30766 
9 11 36 105833 105354 0.900 18500 19 8 46 98500 97991 0.829 30766 
10 11 37 104833 104363 0.901 18500       
 
Table 5: The solutions of Model (19) for each PSAj )( *** twjwj ρη =  
PSA Variable
*
9λ *10λ *12λ *16λ *17λ * 19,2η *,14η *,196η *,128η *,198η *,29η *s −1 *s −3 *s −4 *1+s *2+s
*
oΦ
1 0 0.0
5 
0.1
3 
0.4
3 
0 0.34 0 0.27 0 0.2
7 
0.1
3 
0 0 0 0 1618
3 
0.57
1 
2 0 0.0
7 
0.1
1 
0.4
4 
0 0.33 0 0.24 0 0.2
4 
0.1
4 
0 0 0 0 1602
5 
0.57
3 
4 0.0
8 
0.0
2 
0 0.5
1 
0 0.35 0 0.23 0 0.2
3 
0.1
6 
0 0 0 0 1646
8 
0.58
8 
5 0.0
9 
0.0
1 
0 0.5
1 
0 0.33 0 0.21 0 0.2
1 
0.1
6 
0 0 0 0 1660
8 
0.58
6 
6 0.1
0 
0 0 0.5
1 
0 0.32 0 0.18 0 0.1
9 
0.1
6 
0 698.8 0 0 1669
1
0.58
4 
7 0 0 0 0.5
0 
0.1
3 
0.40 0 0 0 0.1
5 
0.5
1 
0 3188
6 
9728 0 1284
2 
0.60
2 
8 0 0 0.2
2 
0.2
6 
0.2
5 
0.31 0 0.18 0 0.1
8 
0.1
7 
0 0 0 0 1325
5 
0.67
5 
9 0.0
9 
0.0
4 
0 0.6
1 
0 0.37 0 0 0 0 0.5
7 
0 2203
8 
2197
6 
0 9308 0.68
2 
10 0.1
0 
0.1
0 
0 0.6
5 
0 0.34 0 0.14 0 0.1
4 
0.1
7 
0 0.00 0 0 9783 0.79
1 
11 0.1
1 
0.0
9 
0 0.6
6 
0 0.32 0 0.11 0 0.1
1 
0.1
6 
0 0.00 0 0 9990 0.78
7 
12 0.1
0 
0.1
0 
0 0.6
5 
0 0.30 0 0.08 0 0.0
8 
0.1
4 
0 0.00 0 0 1020
6 
0.78
4 
13 0.1
0 
0.1
0 
0 0.6
5 
0 0.28 0 0.06 0 0.0
6 
0.1
3 
0 0 0 0 1041
8 
0.78
0 
 78
Appendix 4 
 80
which are as follows: 
PI1: the average riding time (seconds) of one job on the vehicle per trip 
PI2: the frequency of machine blockage occurring 
PI3: the average duration (seconds) of each machine blockage event 
PI4: the shop throughput 
PI5: the average machine utilization 
Various related literature states that the average value of each index is used for output 
analysis. However, it would not preserve the dynamic properties of the system. In this 
present endeavor, we develop a data envelopment analysis (DEA) model to assess the 
performance of the 180 design alternatives with multiple indices that are interval data. 
The three-way factorial experiment analysis for the assessment results indicates the 
buffer capacity factor and the interaction of job arrival rate and buffer capacity, which 
affects the performance significantly. As such, the Fisher Least Significant Difference 
(LSD) Test shows that designs with a single buffer space are not suggested. This paper 
thus introduces an unprecedented approach for simulation output analysis to select 
material handling system designs. 
Section 2 of this paper contains the literature review of simulation output analysis on 
material handling system design and DEA models. Section 3 describes the material 
handling system under design. The collected simulation output of a design alternative is 
also depicted. In the fourth section, we introduce the assessment DEA model that we 
developed. Likewise, we depict the assessment results for the 180 design alternatives, and 
show the statistical hypothesis tests for the assessment results. Finally, the paper’s 
conclusions are listed in the last section. 
2 Literature Review 
The three categories literatures related to this research are reviewed here. 
2.1 Simulation Outputs Analysis of Material Handling Systems 
Liu and Hung (2001) proposed three deadlock-free control strategies for a single 
multi-load automated guided vehicle. The results of performance indices were expressed 
through its mean values. The superior strategy can be found by comparing the values of 
the performance indices. If the performance value of the strategy outperforms the others, 
then it can be interpreted to mean that the strategy dominates the other strategies. In 
addition, each strategy was discussed individually in each condition. Based on the 
simulation experiments, it seemed that we could not find the standard to evaluate the 
strategies. 
 82
rjp  denote the weights assigned to the intervals of input index i and output index r, 
respectively. 
[P1] Imprecise-CCR (multiplier form) 
s
r
r 1
Maximize       [ ( )]L U Lo ro ro ro roh u y p y y
=
= + −∑  (1) 
1
subject to    [ ( )] 1;
m
L U L
i io io io io
i
v x q x x
=
+ − =∑  (2) 
1 1
[ ( )] [ ( )] 0, 1,2, ,
s m
L U L L U L
r rj rj rj rj i ij ij ij ij
r i
u y p y y v x q x x j n
= =
+ − − + − ≤ =∑ ∑ K
 
(3) 
0, 0, 1,2, ,   , 1,2, ,  , 1,2, , ;rj r ij ip u q v i m r s j n− ≤ − ≤ = = =K K K  (4) 
, , , ;  0, 0, , , .r i rj iju v r i p q r i jε≥ ∀ ≥ ≥ ∀  (5) 
3 Automated-guided Vehicle Material Handling System with Deadlock-free 
Control 
Liu and Hung (2001) studied a deadlock-free control strategy for a single multi-load 
vehicle on a job shop with finite queuing size. This is depicted in the following Figure 1. 
Some assumptions are as follows: (1) the vehicle traverses bi-directionally on the 
single-loop guide-path; (2) Ii and Oi respectively represent the input queue and output 
queue at processing machine Mi. For the sake of simplicity, the entrance/exit centre is 
denoted as machine M0, and (3) when one new task is assigned the vehicle takes the 
shortest path from its current location to its destination. 
There are four factors considered in designing the material handling system: (1) P/T ratio, 
which is the ratio of the total scheduled processing time to the total essential minimum 
transferring time and is used as an index to represent the criticality of processing capacity, 
(2) mean job arrival rate γ units/per hour, (3) local input/output queue capacities C, and (4) 
vehicle control strategies S. The authors described a hypothetical example and designed a 
set of simulation experiments to investigate the effectiveness of the proposed vehicle 
control strategies. The paper does not provide a systematic approach to assess which is 
the best of the following three vehicle control strategies: (1) the proposed strategy, (2) 
the strategy with limited shop WIP level, and (3) the strategy with a central buffer. The 
proposed control strategy uses global shop real-time information to achieve the objectives 
as well as to avoid shop deadlocks caused by inappropriate job movement. Moreover, this 
satisfies the system transport requirement. 
 84
As indicated by Sarrico and Dyson (2004), the expressions DMU and decision maker 
could be misleading. The material handling system designer as the decision maker is, in 
fact, at a different level doing the evaluation. In this case, the DEA assessment becomes 
the designer as well as the higher level decision maker, imposing his/her preference 
structure to have the most favorable measurement for a design alternative, called the unit 
of assessment (UOA), against the other design alternatives. 
The 15 simulation runs are recorded in the following rows of Table 2. Each row is a UOA 
in the DEA models that will be presented in the succeeding section of this paper. Indices 
X4 and X5 are non-discretionary indices (Banker and Morey, 1986) in our DEA model. 
These two indices are not included in our assessment model. Instead, we will examine the 
assessment results to see the effects of the control strategies S and buffer capacity C to 
the aggregate performance of the UOAs. 
 86
alternatives were simulated. 
θj = (y1ju1+y2ju2) / (x1jv1+x2jv2+x3jv3+x4jv4+x5jv5) (6) 
The lower value in the denominator, x1j, x2j, and x3j, and the higher value in the numerator, 
y1j and y2j, would cause a higher θj value. In DEA literature, the indices in the 
denominator and numerator are called input and output indices. A production system with 
a low input but generates a high output is desired. The problem at hand is to determine 
the weights of v1, v2, v3, v4, u1, and u2. We employ the concept of data envelopment 
analysis (DEA) to assess each UOAj at its most favorable weights to obtain the maximum 
score. To deal with the interval data, we develop a new DEA model with slack-based 
measurement. 
4 DEA-SBM Model with Imprecise Data 
We transform [P1] to its dual form [P2]. The multiplier λj is the weight assigned to UOAj 
in assessing the object UOAo; j is ranged from 1 to n. For each UOAj, αrj and βij are the 
dual prices of the difference prj-ur and qij-vi, respectively. is− and rs+  respectively denote 
the slack variables of ith input and rth output. The radial efficiency score of UOAo, θo, 
which could be determined as the second portion of the objective function, slack 
variables, is excluded. As the optimal value θo* replaces the decision variable θo, the 
second phase is to calculate the maximum of the second portion and total slack values 
without introducing the positive non-Archimedean infinitesimal ε. 
4.1 Imprecise-CCR (Dual Model) 
[P2] 
1 1
Minimize ( )
s m
o r i
r i
s sθ ε ε+ −
= =
− +∑ ∑  (7) 
1 1
subject to  , 1, 2, , ;
n n
L L
io o i ij j ij
j j
x s x i mθ λ β−
= =
− = + =∑ ∑ K  (8) 
1 1
, 1, 2, , ;
n n
L L
rj j rj r ro
j j
y s y r sλ α +
= =
− − = =∑ ∑ K  (9) 
1
( ) ( ), 1,2, ,  , 1, 2, ;
n
U L U L
rj rj j rj ro ro
j
y y y y r s j nλ α
=
− + ≥ − = =∑ K K  (10) 
1
( ) ( ) 0, 1, 2, ,  , 1, 2, ;
n
U L U L
ij ij j io io o ij
j
x x x x i m j nλ θ β
=
− − + − + ≥ = =∑ K K  (11) 
 88
the rth output and its interval range. Hence, 1 11( ) ( )
s nL L
ro r rj ror jy s ys α
+
= =
+ +∑ ∑ is the mean 
expansion rate of outputs and its interval range or output inefficiency. Thus, SBM ρo can 
be interpreted as the product of input and output inefficiency. [P3] can be transformed 
into a linear program using the Charnes-Cooper transformation in a similar way as the 
CCR model (Charnes et al., 1978). 
First, let us multiply a scalar variable t (>0) for both the denominator and the numerator 
in the objective function of [P3]. This causes no change in ρo. Second, we adjust t so that 
the denominator becomes 1. Then this term is moved to constraints.  The objective is to 
minimize the numerator. Third, because the present model is a nonlinear programming 
problem ( rts+ ), we transform it into a linear program as follows. Let us define ,i iS ts− −=  
,r rS ts
+ +
=  ,j jtλΛ =  ,rj rjA tα=  ij ijB tβ= , then [P4] becomes the following linear program in 
t, iS − , rS + , jΛ , Arj, and Bij. 
[P4] 
1
1
1Minimize
n
i ijm
j
L
i io
S B
t
m x
τ
−
=
=
+
= −
∑
∑  
(20) 
1
1
1subject to  1;
n
r rjs
j
L
r ro
S A
t
s y
+
=
=
+
+ =
∑
∑  
(21) 
1 1
, 1, 2, ,
n n
L L
io ij j ij i
j j
tx x B S i m−
= =
= Λ + + =∑ ∑ K ; (22) 
1 1
, 1,2, , ;
m n
L L
ro rj j rj r
j j
ty y A S r s+
= =
− = − Λ + + =∑ ∑ K  (23) 
1
( ) ( ), 1, 2, , ; 1, 2, , ;
n
U L U L
rj rj j rj ro ro
j
y y A t y y r s j n
=
− Λ + ≥ − = =∑ K K  (24) 
1
( ) ( ) 0, 1, 2, , ; 1,2, , ;
n
U L U L
ij ij j ij io io
j
x x B t x x i m j n
=
− − Λ + + − ≥ = =∑ K K  (25) 
0,  ; 0, ; 0, ;  0, , ;  0, , ; 0.i r j rj ijS i S r j A r j B i j t
− +≥ ∀ ≥ ∀ Λ ≥ ∀ ≥ ∀ ∀ ≥ ∀ ∀ >  (26) 
 90
1 1 1 1
Maximize  ( ) ( )
s s m m
L U L L U L
ro r ro ro rj io i io io ij
r r i i
y u y y p x v x x q
= = = =
+ − − − −∑ ∑ ∑ ∑  (35) 
1 1 1 1
subject to   ( ) ( ) 0, 1,2, , ;
m s s m
L L U L U L
ij i rj r rj rj rj ij ij ij
i r r i
x v y u y y p x x q j n
= = = =
− + + − − − ≤ =∑ ∑ ∑ ∑ K  (36) 
1 [1 ], 1, 2, , , 1, 2, , ;Li ij iov q x i m j nm
− ≥ = =K K  (37) 
1 1 1 1
1 ( ) ( )
[1 ],
m s s m
U L U L U L
io i ro r ro ro rj io io ij
Li r r i
r rj ro
x v y u y y p x x q
u p y
s
= = = =
− + + − − −
− ≥
∑ ∑ ∑ ∑
 
1,2, , , 1,2, , ;r s j n= =K K  
(38) 
0, 0 , , .rj ijp q r i j≥ ≥ ∀  (39) 
The dual variables iv  and ru  can be interpreted as the virtual cost and price of the i
th 
input and the rth output, respectively. For UOAj, the dual variables qij and prj are 
interpreted as the virtual costs iv  multiplied by the weights of input interval and prices 
ru , then multiplied by the weights of output interval, respectively. The goal of this dual 
model is to find the optimal virtual costs and prices for UOAo so that the profit 
1 1 1 1( ) ( )
s s m mL U L L U L
rj r rj rj rj ij i ij ij ijr r i iy u y y p x v x x q= = = =+ − − − −∑ ∑ ∑ ∑ does not exceed zero for any UOA 
and maximizes the profit 
1 1 1( )
s s mL U L L
ro r ro ro rj io ir r iy u y y p x v= = =+ − −∑ ∑ ∑  1( )m U Lio io iji x x q=− −∑  for 
UOAo. Obviously, the optimal profit is at best zero and hence oδ  =1 for the SBM 
efficient UOAs. 
4.4 The Simulation Output Analysis 
Using the 15 simulation outputs depicted in Table 2, UOAj (or denoted as UOAq,k, q=1, 
2, …, 15 and k=1) and the other 165 simulation outputs (UOAq,k, q=1, 2, …, 15, and k=2, 
3,…,12) that are not shown here, we model [P4] to assess the aggregated performance of 
UOAo where o is ranged as 1, 2, …, 180. These data were divided by the optimal value 
*t  to return to the optimal solutions of [P3]. For the case in which Liox  is zero in the 
above table, the term Lioi xs
−  is removed from the objective function of [P4]. That is, the 
slack −is  =0 is neglected and m is replaced by (m-1). Their optimum objective function 
values, *oρ , are listed in the most right-hand column of Table 3. For instance, where k=1, 
 92
Combinations No. 2 and No. 6 has a higher mean efficiency than Combination No. 1, but 
they do not differ significantly from each another. The third group contains Combinations 
No. 3, No. 4, and No. 11, and the remaining combinations belong to the fourth group. 
The third group has a higher mean efficiency than the second group, and the forth group 
has a higher mean efficiency than the third group. However, it does not differ 
significantly within groups. 
The simulation output analysis results show that setting the buffer capacity for the 
incoming and outgoing job at 5 outperforms the others. All in all, the higher the buffer 
capacity C, the higher the performance value. The control strategy S and mean job arrival 
rate γ are not the factors of change in the DEA performance measure *oρ . 
Table 4. Univariate result for each decision variable. 
General 
Effect
Sigma-restricted parameterization, effective hypothesis 
decomposition 
Deg. of 
Freedom 
Sum of 
Square 
Mean of 
Square F-test p 
Intercept 1 115.7197 115.7191 2722.328 0.000000 
γ  3 0.0163 0.0054 0.128 0.943210 
C 4 6.4015 1.6004 37.650 0.000000 
S 2 0.2080 0.1040 2.446 0.090942 
γ * C 12 0.1418 0.0118 0.278 0.991728 
γ * S 6 0.1244 0.0207 0.488 0.816365 
C *S 8 2.6400 0.3300 7.763 0.000000 
γ * C * S 24 0.6035 0.0251 0.592 0.931469 
Error 120 5.1009 0.0425   
Total 179 15.2364    
Table 5. Fisher Least Significant Difference Test for the cell of C. 
Level of C 
C; Least Significant Means
Current effect: F(4, 120)=37.650, p=0.00000 
Effective hypothesis decomposition
C Mean Std. Err. -95.00% +95.00% N 
1 1 0.4600860.0343620.3920520.528121 36 
2 2 0.7438860.0343620.6758510.811921 36 
3 3 0.9151550.0343620.8471210.983190 36 
4 4 0.9009350.0343620.8329000.968970 36 
5 5 0.9889390.0343620.9209041.056974 36 
 
Table 6. Fisher Least Significant Difference Test for the cells of C *S. 
Combination C *S; Least Significant Means 
 94
7 References 
Banker, R.D. and Morey, R.C., Efficiency analysis for exogenously fixed inputs and 
outputs. Operations Research, vol. 34(4) (1986) 513--521. 
Charnes, A. and Cooper, W.W. and Rhodes, E., Measuring efficiency of decision making 
units. European Journal of Operational Research, 1 (1978) 429--444. 
Cooper, W.W. and Park, K.S. and Yu, G., IDEA and AR-IDEA: Models for dealing with 
imprecise data in DEA. Management Science, 45 (1999) 597--607. 
Halme, M. and Joro, T. and Korhonen, P. and Salo, S. and Wallenius, J.: A value 
efficiency approach to incorporating preference information in data envelopment 
analysis. Management Science, 45 (1999) 103--115. 
Jablonsky, J. and Fiala, P. and Smirlis, Y. and Despotis, D.K.: DEA with interval data: 
An illustration using the evaluation of branches of a Czech bank. Central European 
Journal of Operational Research, 12 (2004) 323--337. 
Liu, F.H. and Hung, P.C.: Real time deadlock-free control strategy for single multi-load 
automated guided vehicle on a job shop manufacturing system. International Journal 
of Production Research, 39 (2001) 1323--1342. 
Lin, J.T. and Wang, F.K. and Yang, C.J.: The performance of the number of vehicles in a 
dynamic connecting transport AMHS. International Journal of Production Research, 
43 (2005) 2263--2276. 
Montgomery, D. C.: Design and Analysis of Experiments 4th edition, John Wiley & 
Sons: New York (1997). 
Sarrico, C.S. and Dyson, R.G.: Restricting virtual weights in data envelopment analysis. 
European Journal of Operational Research, 159 (2004) 17--34. 
Tone, K.: A slacks-based measure of efficiency in data envelopment analysis. European 
Journal of Operational Research, 130 (2001) 498--509. 
 
 
 96
1. Introduction 
Since the 6th century BC, voting system has been used as an essential feature of 
democracy. It pertains to democratic procedures according to which a social will is 
extracted out of individual wills. Voting theory became an object of academic study 
around the time of the French Revolution. Different voting systems have different forms 
for allowing the individual to express his or her vote. Based on the type of ballot, the 
voting systems can be classified. The well-known of single vote methods are the 
majority voting and the plurality voting. The voting system, by which that alternative 
wins, which in a single act of voting gets more votes than any other alternative, is called 
the plurality voting. This is a natural consequence of the fact that this rule only cares 
about the best alternative in individual preference. However, the majority voting is 
choosing the winning whose number of votes is greater than half the votes. In plurality 
voting, voters select only one option, while in approval voting, they can select as many 
as they want. Most elections in the early history of democracy were held using the 
plurality voting or some variant. 
In preferential voting systems, such as the Borda count, or the Condorcet method, 
voters order the list of options from most to least preferred. The Borda count is a 
positional voting system that voters rank candidates in order of preference. The 
Condorect method is a pair-wise method. This is the candidate whom voters prefer to 
each other candidate, when compared to them one at a time. In a sense, the Condorcet 
method yields the "best compromise" candidate, the one that the largest majority will 
find to be least disagreeable, even if not their favorite. 
The range voting system is also called the score system or point system. In range 
voting systems, voters rate each option separately on a scale, such as 0 to 99 or 1 to 5. 
The summary of scores for each candidate, the winner is with the highest scores. The 
approval voting is a kind of range voting system with only two levels. Each voter may 
"approve" or "disapprove" each option by voting or not voting for it, and it's also 
equivalent to voting 1 or 0 in a range voting system. 
Each voting system is a particular method that is to aggregate profiles of 
individual preferences into a social preference or to arrive at a choice based on such 
profiles. The voting systems employed by a society reflect the democratic content of 
that society. Nowadays, the voting systems are widely used in the generic voting 
problem of selecting, such as social choice, decision making, and performance 
evaluation.  
An important area of research in the field of decision science is the way in which 
expert judgments are aggregated into a single judgment or decision. For instance, a 
group of decision-maker of a company is to select several suppliers for their supply 
chain system. They set up a set of criteria to evaluate the m solicitors (candidates) such 
 98
undiscriminating. Llamazares and Peña [7] reviewed several methods proposed in the 
literature to discriminate efficient candidates and showed some drawbacks of these 
methods. They mentioned that none of the proposed procedures is fully convincing. In 
our research, we propose a new procedure to deal with the undiscriminating candidates 
by loosening the restrictions of the weights. We could obtain a new common set of 
weights that the superior position of votes is more important for choosing the most 
efficient candidate when the aggregate scores are the same. The result is appropriate for 
the rule of lexicographic order. 
Using our methods can solve a lot of decision problems. The methods are not only 
used voting for one criterion, but also for many criteria. Even hierarchical problem can 
be applied. In the foregoing problem of selecting suppliers, we can criticize the 
importance of the criteria (such as flexibility, quality, cost, and delivery) in the first 
instance. The group of decision makers can assess the importance of the criteria 
according their preferences, and find the weights of the criteria by voting system. This is 
the full ranking case, k = m. Then, we can find the aggregate scores of candidates for 
each criterion. For each candidate, the weighted sum of all the aggregate scores in the 
criteria is computing by the weights of the criteria before. The total aggregate scores are 
figured out. The decision makers can use the total aggregate scores to make some 
performance management or decision chooses. The procedure can be extensible to the 
hierarchical problem, such as the traditional AHP (Analytic Hierarchy Process, Saaty 
[8]) problems. 
Section 2 of this paper is the literature review. In section 3, we propose a model to 
deal with undiscriminating of candidates in CK’s. In section 4, we introduce the 
frameworks to rank candidates by a group of voters, AP. We also deal with the problem 
of candidates in the same aggregate scores. The paper ends with a summary and 
conclusions in section 5. 
2. Literature review 
In this section, we overview the past researches about the Borda count, the 
modeling voting systems, and the discrimination of the most efficient between the same 
aggregate scores. 
2.1. The Borda count 
Jean-Charles de Borda proposed the Borda’s rule (Borda count) in 1700 as a 
method for electing members to the French Academy of Sciences (Borda, [9]). Borda 
count asks voters to rank all the candidates (alternatives) which are then weighted 
before aggregation. It is the most representative system of positional voting systems, 
which assign points to the candidates according to their position in the preference 
 100
Further CK introduced the following model (43) to obtain a set of common set of 
weights in evaluating m candidates. The objective function aims to the large possible 
value of ε, ε*. It is true that the larger the value chosen for ε, the more constrained the 
feasible region becomes, and the fewer the number of candidates would have achieving 
aggregate scores equal 1. In other words, in the first set of constraints, fewer constraints 
would be binding as the optimal solution reached. 
[CK] 
.
,1,...,1,
,,,1,1..
max
1
1
*
ε
ε
εε
≥
−=≥−
=≤
=
+
=
∑
k
jj
k
j
ijj
w
kjww
mivwts K
 (43)
As the optimal solution obtained at ε*, one or more than one winning candidate 
would have achieving aggregate scores equal 1, 1
1
*
=∑
=
k
j
ijjvw  for candidate i who 
dominates all other candidates in that they possess the highest level of robustness in 
terms of the range of ε. In CK’s model, when maximum discrimination between the 
candidates is sought, in which case the weights used to evaluate and rank the candidates 
are as if imposed externally at the outset. 
Cook and Kress [2, 3] and Cook et al. [13,14] gave a subjective ordinal preference 
ranking according to DEA models. They developed a common set of weights through a 
series of bounded DEA runs by closing the gap between the upper and lower limits of the 
weights. The upper and lower bounds are determined subjectively in those models. 
Green et al. [15] proposed cross-evaluation method to have the summary of a self- 
and peer-rating process in which the candidates seek to interpret the voters’ preferences 
as favorably for themselves, relative to the other candidates, as possible. For each 
candidate, Green et al. used a weighted average of all the candidates’ rating of that 
candidate, where the weights themselves are in proportion to each candidate’s overall 
rating. 
Hashimoto [5] considered a ranked voting system using a DEA/AR exclusion 
model. As the model depicted in the following, four sets of constraints are used to 
determine the set of most favorable weights for achieving the object candidate io’s 
possible highest aggregate scores. The additional third set of constraints ensures the 
differences of weights are non-increasing. The fourth constraint enforces wk no less than 
the non-Archimedean infinitesimal positive constant ε. The m candidates take turns as io 
and may have different sets of weights. 
 102
individual’s preferences on a set of candidates i (i = 1,…, m) is an important issue in the 
field of decision-making science. With [CK] model, one can find a common set of 
weights to obtain the aggregate scores Z1, Z2,…, Zn, and then rank the candidates 
according to those scores. It is frequently failed to rank the candidates in tie with 
aggregate scores. The existing methods for solving the problem are not fully convincing. 
We propose a two-phase procedure to discriminate the set of candidates in tie, 
denoted as set D. In phase 1, model [CKD-1] is employing model [CK] to discriminate 
the candidates in set D only. The obtained maximum value *1ε  may not discriminate all 
candidates with the difference between the every pair of places, j and j + 1 where j could 
be 1, 2,…, k – 1 . Model [CKD-1] is depicted as following: 
Phase-1:[CKD-1] 
)(.
)(,1,...,1,
,,1..
max
1
11
1
1
*
1
bw
akjww
ivwts
k
jj
k
j
ijj
ε
ε
εε
≥′
−=≥′−′
∈≤′
=
+
=
∑ D  (45)
(6a) and (6b) are substituted by (7a) and (7b) for discriminating the candidates in 
set D. Compare (6a) and (7a), the weight differences are increased with p for j = 1, 2,…, 
k – 1. On the other hand, in (6b) and (7b), the weight of the last place k is reduced by q.  
)(,
)(,1,...,1,
*
1
*
11
bqw
akjpww
k
jj
−≥′′
−=+≥′′−′′ +
ε
ε
 (46)
Let p+= *12 εε , (46a) and (7b) are replaced by (8a) and (8b), respectively, where h = (p 
+ q) > 0. In other word, h is the possible range for the weight adjustment. Since
qqpph −=+−+=− *1
*
12 )()( εεε , hence
*
12 εε ≤− h . 
)(,
)(,
)(,1,...,1,
*
12
2
21
ch
bhw
akjww
k
jj
εε
ε
ε
≤−
−≥′′
−=≥′′−′′ +
 (47)
*
1ε  is no less than the obtained maximum value ε
* as obtained by model [CK].Where and 
ε2 ≥ ε1. The immediate model for phase-2 is summarized as following.  
Phase-2i: [CKD-2 i] 
)(.
)(,
)(,1,...,1,
,,1..
max
*
12
2
21
1
2
*
2
ch
bhw
akjww
ivwts
k
jj
k
j
ijj
εε
ε
ε
εε
≤−
−≥′′
−=≥′′−′′
∈≤′
=
+
=
∑ D
 (48)
Through our numerical examples, we found that model (48) have resulted 
 104
rewritten as kw ′′  ≥ ε2 – ε1
*. Clearly, we can obtain that jw ′′  = (k – j + 1) kw ′′  + (k – j)ε1
*, 
j = 1,…, k – 1. □ 
Based on the property 1 and property 2, we conclude that the difference of 
weights ( jw ′′  – 1+′′jw ) (j = 1, …, k – 1) can be lengthened by (k – j)ε1
* in [CKD-2]. So we 
can discriminate the candidates with the same aggregate score in [CK]. The procedure is 
appropriate for the rule of lexicographic order. It is reasonable that the superior position 
of votes is more important for choosing the most efficient candidate when the aggregate 
scores are the same. 
We modify CK’s numeral example [1] as Table 7. We add the candidate D in 
original data set where aggregate score is 0.95 as same as B. In [CK], B and D are 
undiscriminating when (w1, w2) = (0.1, 0.05) and ε* = 0.05 (Table 8). 
Table 7 The modified CK’s example 
  votes  [CK] Our two-phase model 
  1st 2nd  Score Rank Score Rank 
A  6 8  1 1 – 1 
B  4 11  0.95 2 0.9474 3 
C  8 2  0.9 4 – 4 
D  5 9  0.95 2 1 2 
E  3 0  0.3 5 – 5 
Now, set D = {B, D} and apply [CKD-1], the phase 1 model is depicted as (50). 
.
,
,128
,1114..
max
11
121
21
21
1
*
1
ε
ε
εε
≥′
≥′−′
≤′+′
≤′+′
=
w
ww
ww
wwts
 (50)
The optimal solution is ( )*1*2*1 ,, εww ′′  = (0.1053, 0.0526, 0.0526). Apply [CKD-2] 
for phase 2, the model is depicted as (51). 
.0.0526
,
,
,128
,1114..
max
22
221
21
21
2
*
2
≤
−≥′′
≥′′−′′
≤′′+′′
≤′′+′′
=
h
hw
ww
ww
wwts
ε
ε
εε
 (51)
The optimal solution is ( )*2*2*1 ,, εww ′′′′  = (0.1302, 0.0388, 0.0914). The aggregate 
score for B and D are ZB = 0.9474 and ZD = 1, respectively. The last two column of Table 
 106
.
,2,...,1,
,1,...,1,
,,...,1,1..
max
211
1
1
*
)AP(
ε
ε
εε
≥
−=−≥−
−=≥−
=≤
=
+++
+
=
∑
k
jjjj
jj
k
j
ijj
w
kjwwww
kjww
mivwts
 (52)
The obtained optimal solution values ( )**2*1 ,...,, kwww  are normalized by dividing 
the smallest value, *kw . The normalized common set of weights is (k, k – 1,…, 1). 
( )**2*1 ,...,, kwww  = hα(k, k – 1,…, 1) where h = )...1(1 k++ and α is a constant that 
depends on the data set vij, i = 1,…, m, and j = 1,…, k. 
4. 2. The deal with undiscriminating candidate 
To distinguish the undiscriminating candidates in [AP], the following modified 
model is represented as CK’s model. We denote set D with undiscriminating candidates 
and loosen their restrictions of the weights in [AP]. The phase 1 discriminating model can 
be rewritten as following: 
[APD-1] 
.
,2,...,1,
,1,...,1,
,,1..
max
1
211
11
1
1
*
1
ε
ε
εε
≥′
−=′−′≥′−′
−=≥′−′
∈≤
=
+++
+
=
∑
k
jjjj
jj
k
j
ijj
w
kjwwww
kjww
ivwts D
 (53)
Then, we use *1ε  with set D in [AP] and modify the Phase 2 model, [APD-2]. 
[APD-2] 
.
,
,2,...,1,
,1,...,1,
,,1..
max
*
1
2
211
21
1
)(AP
*
2 D
ε
ε
ε
εε
≤
−≥′′
−=′′−′′≥′′−′′
−=≥′′−′′
∈≤′′
=
+++
+
=
∑
h
hw
kjwwww
kjww
iwvts
k
jjjj
jj
k
j
jij D
 (54)
In Table 9, there are 8 candidates with three places of votes. In [AP], {A, B} and 
 108
all other candidates in that they possess the highest level of robustness in terms of the 
rang of ε. Having derived the first place candidate q, the qth constraint in the model (52) 
can now be eliminated and resolved. We can get the second order candidate, and the 
process is repeated. 
Using this technique, we not only can get the ranking order, but also several 
different sets of weights. When we evaluate the preference of the candidates, the 
members of candidate in the evaluation will actually affect the final result. Furthermore, 
when the winner candidate which adapted this mode is being released in a proper order, 
the weights are changed. In other words, it is not going to affect the result of other 
candidates. Considering the following numerical example of 3 places in Table 11, we 
used the peeling technique in model (52) and eliminated the winner nation(s) at one time. 
Table 11 The numerical example of 3 places 
 1st 2nd 3rd 
A 51 21 28 
B 36 38 36 
C 23 21 28 
D 19 13 15 
E 16 10 15 
F 14 15 17 
G 13 10 8 
H 9 6 10 
I 8 10 10 
J 7 16 17 
The results are showed in Table 12. We can figure out the aggregate scores and 
ranking order every time. Because the space of a printed page, we show the result of the 
first to sixth calculating. Here, the normalized common set of weights is (3, 2, 1), h
( ) 613211 =++=  and αp is constants, p is the pth order of peeling. 
Table 12 The result of Table 11 
The order of 
peeling 
AP 
w1 w2 w3 h αp 
1 3hα1 2hα1 1hα1 1/6 0.0269 
2 3hα2 2hα2 1hα2 1/6 0.0273 
3 3hα3 2hα3 1hα3 1/6 0.0432 
4 3hα4 2hα4 1hα4 1/6 0.0612 
5 3hα5 2hα5 1hα5 1/6 0.0674 
 110
Table 15 The numerical example of 5 places 
 1st 2nd 3rd 4th 5th 
A 7 12 15 16 14 
B 24 28 24 26 29 
C 34 23 18 14 14 
D 12 24 18 25 13 
E 23 15 14 13 18 
F 13 14 23 18 12 
G 12 14 13 13 22 
H 17 18 14 15 16 
I 15 13 16 11 18 
J 8 13 11 18 16 
K 17 11 12 17 17 
L 18 15 22 14 11 
By using peeling technique, the outcome is revealed in Table 16. We also 
observed that the results of weights are the same property with the foregoing examples. 
Table 16 The results of Table 15 
The order of 
peeling 
AP 
w1 w2 w3 w4 w5 h αp 
1 5hα1 4hα1 3hα1 2hα1 1hα1 1/15 0.0390 
2 5hα2 4hα2 3hα2 2hα2 1hα2 1/15 0.0419 
3 5hα3 4hα3 3hα3 2hα3 1hα3 1/15 0.0549 
4 5hα4 4hα4 3hα4 2hα4 1hα4 1/15 0.0575 
5 5hα5 4hα5 3hα5 2hα5 1hα5 1/15 0.0588 
6 5hα6 4hα6 3hα6 2hα6 1hα6 1/15 0.0612 
7 5hα7 4hα7 3hα7 2hα7 1hα7 1/15 0.0630 
8 5hα8 4hα8 3hα8 2hα8 1hα8 1/15 0.0694 
9 5hα9 4hα9 3hα9 2hα9 1hα9 1/15 0.0698 
10 5hα10 4hα10 3hα10 2hα10 1hα10 1/15 0.0739 
11 5hα11 4hα11 3hα11 2hα11 1hα11 1/15 0.0847 
12 5hα12 4hα12 3hα12 2hα12 1hα12 1/15 0.0862 
By using the constrains of weights, the normalized weights of the optimal solution 
( )**2*1 ,...,, kwww  in the k places voting systems are (k, k – 1,…, 1). In other words, 
 112
preferences of candidates are summarizing all the aggregate scores of criteria. The 
hierarchical problems are also can be applied. 
6. References 
1. Cook WD, Kress M. A data envelopment model for aggregating preference rankings. 
Management Science. 1990; 36: 1302-1310. 
2. Cook WD, Kress M. A multiple criteria decision model with ordinal preference data. 
European Journal of Operational Research. 1991; 54: 191-198. 
3. Cook WD, Kress M. A multiple-criteria composite index model for quantitative and 
qualitative data. European Journal of Operational Research. 1994; 78: 367-379. 
4. Liu FHF, Hai HL. The voting analytic hierarchy process method for selecting 
supplier. International Journal of Production Economics. 2005; 97: 308-317. 
5. Hashimoto A. A ranked voting system using a DEA/AR exclusion model: A note. 
European Journal of Operational Research. 1997; 97: 308-317. 
6. Nurmi H, Meskanen T. Voting paradoxes and MCDM. Group Decision and 
Negotiation. 2000; 9: 297-313. 
7. Llamazares B, Peña T. Preference aggregation and DEA: An analysis of the methods 
proposed to discriminate efficient candidates. European Journal of Operational 
Research. 2009; 197: 714-721. 
8. Saaty TL. The Analytic Hierarchy Process: Planning, Priority Setting, Resource 
Allocation. New York: McGraw-Hill; 1980. 
9. Borda JC. Mémoire sur les élections au scrutin. Histoire de l’Académie Royale des 
Sciences. Paris; 1781. 
10. Black D. The Theory of Committees and Elections. Cambridge: Cambridge University 
Press; 1958. 
11. Charnes A, Cooper WW, Rhodes E. Measuring the efficiency of decision making 
units. European Journal of Operational Research. 1978; 2: 429-444. 
12. Cooper WW, Seiford LM, Tone K. Data Envelopment Analysis: A Comprehensive 
Text with Models, Applications, References and DEA-Solver Software. 2nd edition ed. 
Boston: Springer; 2006. 
13. Cook WD, Kress M, Seiford LM. On the use of ordinal data in data envelopment 
analysis. The Journal of the Operational Research Society. 1993; 44: 133-140. 
14. Cook WD, Kress M, Seiford LM. Data envelopment analysis in the presence of both 
quantitative and qualitative factors. The Journal of the Operational Research Society. 
1996; 47: 945-953. 
15. Green RH, Doyle JR, Cook WD. Preference voting and project ranking using DEA 
and cross-evaluation. European Journal of Operational Research. 1996; 90: 461-472.
16. Cook WD, Zhu J. Rank order data in DEA: A general framework. European Journal 
of Operational Research. 2006; 174: 1021-1038. 
17. Amin GR, Toloo M. Finding the most efficient DMUs in DEA: An improved 
integrated model. Computers & Industrial Engineering. 2007; 52: 71-77. 
18. Noguchi H, Ogawa M, Ishii H. The appropriate total ranking method using DEA for 
multiple categorized purposes. Journal of Computational and Applied Mathematics. 
2002; 146: 155-166. 
19. Obata T, Ishii H. A method for discriminating efficient candidates with ranked voting 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                          97 年 2 月 1 日 
報告人姓名 劉復華 
 
服務機構
及職稱 
交通大學工業工程與管理學系 
教授 
 
     時間 
會議 
     地點 
2007, 10, 9-15 
首爾，韓國 
本會核定
補助文號
NSC95-2221-E-009-142 
會議 
名稱 
 (中文) 2007 亞洲模擬學研討會 
 (英文) 2007 Asia Simulation Conference 
發表 
論文 
題目 
 (中文)以 DEA 評析工廠物流系統之電腦模擬結果 
(英文) A Data Envelopment Analysis model for selecting material handling system 
designs 
十月九日上完課後搭機直飛韓國首府首爾，進駐於首爾大學之招待所，該館舍乃三星創辦
人捐贈。當日晚間有簡單的歡迎酒會，各國來的學者專家約有七十多位，仍以韓國人為大多數。，
於十月十、十一、十二日連續兩天半為論文研討的時間，十二日下午為三星研發總部的參觀旅
行。我發表論文一篇，與與會人士交換心得與意見，獲益良多，並與昔日留美之韓國同窗敘舊。
十日傍晚為參觀首爾大學，建設林立，設備完善，為韓國首學實至名歸。十一日夜為歡迎酒會，
古樂演奏，頗為正式。十月十三與十四兩天私人行程參觀和成周邊名勝。十五日搭機直飛桃園
返校。本次之研討會精挑論文數十篇收錄於 Springer 發行之Communications in Computer and 
Information Science , Vol. 5, Park, Jin Woo; Kim, Tag-Gon; Kim, Yun-Bae (Eds.) 2007, XIII, 404 p 
ISBN: 978- 3-540- 77599-7. 我發表一篇論文於 115~128 頁。該次研討會訊息可於下列網址得之
http://society.kisti.re.kr/~simul/asc2007/asc2007_general_information.htm 
一張照片為歡迎酒會時所攝。 
 
