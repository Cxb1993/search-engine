2網路的中間節點並不需要做任何資料數據處理。在許多
實際應用中，為了資料數據分析，資料數據安全以及交
換的目的，總是要在中間節點進行某種形式的資料數據
處理，不過普遍認為，中間節點所進行的資料數據處理
對資料數據傳輸過程本身並不會帶來任何好處。然而，
網路編碼理論提出檔案傳輸前先切成多個小區塊，並且
用線性編碼的方式編碼後傳送，所有在傳輸網路中的節
點皆可產生與傳送線性編碼的區塊，而此線性編碼過程
會產生大量編碼組合的區塊，由於此種方式具有”多餘
性”，即使用者不必指定一定要收哪一個區塊，當使用
者收到編碼後的區塊數目至少等於原始檔案切割的區塊
數目後，便能將資料解開還原。因為編碼後的區塊數量
會比原始未編碼的區塊數量大的多，並且不用管編碼後
區塊的順序問題，如此可以消除原先檔案未編碼區塊傳
輸的排程順序問題，進而增加可得性與加速下載速度。
2相關研究
2.1點對點網路傳(P2P Network)
由於個人電腦運算能力的提高與網際網路的快速發
長，使得如何分享以及運用網際網路上成千成萬個人電
腦的運算能力、儲存空間以及檔案分享等等，成為近年
來熱門研究的話題。點對點網路技術(Peer-to-peer)是藉
由使用者直接連接其他使用者的電腦，進行文件的交換
與共用，讓個人電腦同時具備伺服器與使用者的功能，
各個使用者間能夠彼此分享電腦中的運算，記憶體以及
檔案等共享資源。
如何找到所要的資源位置，是點對點傳輸網路中最
重要的問題之一，而一般可區分成以下三類：
1.集中式(Centralized)
在集中式的架構下，所有的路由要求由集中式的伺
服器來做回應，並且維護整個網路的拓撲及紀錄所有使
用者所擁有的資源。例如 Napster[1]。
2. 無結構化非集中式(Unstructured Decentralized)
在此架構下的點對點傳輸系統中，各個節點與資料
間並沒有特定的關係存在，也就是沒有特別的網路拓撲
存在。例如 Gnutella[2][3]與 Freenet[4]。
3. 結構化非集中式(Structured Decentralized)
圖 1：(a)Topology, (b)使用 Unicast, (c)IP Multicast,
(d)Application-Level Multicas
2.1點對點網路傳(P2P Network)
在此架構下，沒有集中的節點存在，所有的節點可
依照自身的建構方法組織成一個邏輯性的架構。檔案位
置的搜尋依據邏輯性的架構設計，利用不同的演算法來
進行。由於檔案搜尋不需透過特定的目錄伺服器，或者
以廣播方式詢問，因此較前兩者擁有較佳的延展性。利
用分散式雜湊表(Distributed Hash Table；DHT)[5]的方式，
將所有的路由資訊分散到各個不同層次的節點，每個節
點只擁有部分的路由資訊。其他實例如 Chord [6]、
Pastry[7]、CAN[8]、Tapestry [9] 以及 YAPPERS [10]。
2.2 應用層群播網路 (Application Level Multicast)
應用層群播是用來佈置類似 IP 群播(IP Multicast)
技術的一種。群播在邏輯上是屬於一對多(One-to-Many)
的傳輸方式，由一個來源把一份相同的資料傳送給許多
有需要的使用者。如圖 1(b)所示，A 要將資料傳送給 B、
C、D。最原始的就是使用三個 Unicast分別傳送。而圖
1(c)就是以 IP層群播的技術(IP Multicast)將資料封包在
路由器的地方(router)複製，並協助傳送給 B、C、D。而
圖 1(d) 為使用應用層群播的方式，在圖 1(d)中資料封包
也以 Unicast的方式在傳送，但是較(a)有效率的就是，D
接收的資料封包是在 C的地方複製一份在傳輸給 D，由
於由 C到 D的 cost小於由 A到 D的 cost，可以減少傳
輸的 cost。
應用層群播與 IP 層群播的差異在於，IP層群播在
路由器的地方複製，然後由路由器傳送給使用者，而應
用層群播則是在終端使用者(end host)的地方複製，再由
終端使用者彼此根據某些考量(cost or function)來傳送。
而這些終端使用者在邏輯上會形成重疊式網路(overlay
network)，因此應用層群播也稱為終端使用者群播(End
system multicast)和重疊式群播(overlay multicast)。應用
層群播的主要問題也就在於依照不同的需求，來建立一
個相對於需求而言有效率的重疊式網路(overlay
multicast)來做資料傳輸。
圖 2：Fast Broadcasting 播放方式。
2.3熱門影片廣播法 (Hot-Video Broadcasting)
根據統計，80% 的影片存取集中於 10~20 部影片，
因此若能有效的播放此類熱門影片，則可以滿足大部份
使用者的需求，於是有許多針對熱門影片播放的研究，
其中包含熱門影片廣播法，例如：Fast Broadcasting
[11,12]，Harmonic Broadcasting [13]，Staircase
Broadcasting[14]。此播放方式為將影片切分為固定大小
之區段，並且將各個區段用多個頻道同時廣播。使用者
觀賞每部影片所需之最長等待時間為一個區段之長度，
且不論多少使用者點播，所需頻寬均相等。
圖 2為 Fast Broadcasting 的播放示意圖，將一部影
片切成 15 個區段，分成四個頻道做週期性的廣播。過
去對於熱門影片廣播法之研究皆著重於如何增加影片切
4大規模的 CDN網路中節省資源的花費。
iMac
iMac
iMac
iM ac
iMac
iM ac
圖 4混合樹狀與網狀傳輸結構的 P2P網路
一般來說有兩種方法來優化重疊視訊串流：樹狀及
網狀兩種傳輸型態。樹狀傳輸是一種有效的方式。但是
他有三種缺點：(1)因為高度動態的環境使得架構較為脆
弱。(2)內容遞送到各節點的速度限制於上游節點的最小
串流量。(3) 樹狀末端的使用者上傳頻寬無法被使用等
問題。網狀傳輸架構較可靠且穩固，但是有下列缺點：
(1)因為隨機選擇鄰居的演算法，因此可能會造成傳輸的
延遲過長或是斷線。(2)因為即時串流而產生了大量的控
制訊息。因此，考慮這些因素，對於大規模 P2P網路的
應用，混合重疊型的網路是必須的。圖 4說明了混合樹
狀與網狀的重疊網路拓墣。相鄰的節點當作同一個群組，
且彼此之間以網狀的方式連接，而群組與群組之間則以
樹狀的方式連接；換言之，群組與群組之間是以樹狀的
方式遞送資料，而同一群組內的節點則以網狀的方式傳
遞資料。在樹狀的結構中，將兩個群組當成一個樹狀節
點，而每個群組間有著許多超級結點(super peer cache)，
扮演從父節點得到資料及遞送到其子節點的角色。這種
混合型的 P2P網路拓樸比樹狀或是網狀傳的的網路較為
有效與健全，且更能應用在大型視訊串流網路中。
本研究使用地標點為基礎的兩階段伺服器選擇方式：
第一階段，終端使用者透過前端內容遞送網路找到近端
內容快取伺服器；第二階段則是由內容快取伺服器查詢
提供近端使用者快取服務。在此架構下，由於終端使用
者必須經由內容提供者指派內容遞送網路才可得到內容
下載服務，不管是經由內容快取伺服器或是使用者快取；
因此內容提供者權益得以保障。最後，在兩階段的近端
伺服器選擇法中，能夠找到最靠近使用者端的伺服器提
供服務。
3.3近端伺服器選擇法
網域名稱伺服器(DNS)在內容遞送網路架構裡扮
演著非常重要的角色。網域名稱伺服器必須經過合法的
註冊才可以使用，因此任何內容遞送服務都必須先經由
內容提供者指派，才能連線找到內容遞送網路服務業者，
請求服務。利用使用者透過名稱伺服器查尋所要連結的
下載服務網站，找出最接近終端使用者的內容快取伺服
器，提供給合法使用者。本研究利用網域名稱伺服器設
置成地標(landmarks)的方式，假設有 n台網域名稱伺服
器當作地標點，將 n個地標點依序編號。而內容快取伺
服器位置配置方式，則利用內容快取伺服器與 n個地標
點的往返時間由小到大的排序關係，將服務區域劃分成
n!個區域。
圖 5內容快取伺服器配置圖
3.3近端伺服器選擇法
如圖 5所示：L1、L2以及 L3分別為三台當作地標
的 CDN-DNS，假設將服務區域對於地標量測依照由小
到大的結果排序分成 A：L2L1L3、B：L1L2L3、C：L1L3L2、
D：L2L3L1、E：L3L2L1以及 F：L3L1L2等六個區域。
R1、R2、R3以及 R4為四台內容快取伺服器。當 R1加入
內容遞送網路服務時，會對所有地標點進行往返時間
(RTT)測量，其結果分別為 RTT(R1 , L1)：70ms，RTT(R1 ,
L2)：210ms，RTT(R1 , L3)：127ms，因此 R1對於各個
地標點相對距離關係的由小到大排序為 L1L3L2。同理，
R2對於地標點往返時間值的排序為 L2L1L3，R3為
L3L2L1，以及 R4為 L3L1L2。
在使用地標排序當作判斷是否為近端伺服器的依
據中，主要是假設當兩節點對於所有的地標進行往返時
間測量，如果與各地標之間的距離大小擁有相同或者相
似的排序，則將兩節點之間的距離視為具有某種程度上
的相近。
圖 6為CDN-DNS取得終端使用者之本地網域名稱
伺服器對地標往返時間排序的訊息傳遞過程。本地網域
名稱伺服器先詢問地標 1的 CDN-DNS，地標 1會根據
與該網域名稱伺服器往返時間的測量結果加入到原本的
詢問的網域名稱(即利用 CNAME方式)當中，回覆給本
地網域名稱伺服器。接著本地網域名稱伺服器會將剛才
得到的結果詢問地標 2，以此類推直到詢問至地標 N。
地標 N的 CDN-DNS此時便會依照本地網域名稱伺服器
的詢問內容(此時的詢問內容已經包含了對所有地標的
往返時間測量訊息)，找到與地標 1至地標 N距離排序
相同或者相似的內容快取伺服器，將其 IP位址回傳給本
地網域名稱伺服器。以圖 5為例，假設現在有一終端使
用者透過本地網域名稱伺服器詢問 CDN-DNS，經過測
量後得到該本地網域稱伺服器屬於區域 A，即對於地標
的距離排序為 L2L1L3，因此 CDN-DNS便將內容快取伺
服器 R2的 IP位址回覆給本地網域名稱伺服器。倘若本
地網域名稱伺服器與地標測量的結果屬於區域 B，即
L1L2L3，CDN-DNS查詢後發現並沒有屬於 L1L2L3的內
6數間以及各節點連接數的變化，影響近端伺服器選擇的
情況。
本研究使用 GTI-TM工具來建立 Transit-Stub拓撲
模型。假設只改變過境區域(transit domain)的個數大小，
其他參數不變。每個過境區域中，包含 5個過境節點
(node)，並設定每個節點之間的延遲時間為 20ms，而每
個過境區域間的延遲時間設定為 100ms。在每個過境節
點下則連接 4個斷株區域(stub domain)，而過境區域與
斷株區域之間的延遲時間設定 5ms。
圖 9：一層地標點比較
首先比較地標(landmark)數目的多寡，對伺服器選
擇的影響。圖 9顯示當地標數目越多的時候，往返時間
值會越逼近最佳情形。
圖 10：地標數目與 RTT變化
圖 10則顯示當地標增加到一定數量之後對於伺服
器選擇的效用便不在明顯增加。圖中地標點由 5個增加
到 6個的時候，RTT值可以減少 38%，但之後的減少率
便隨著地標點數目的增加而減少。這表示無謂的增加地
標的個數，並不會對整體伺服器選擇有太大改進空間。
由圖 11結果得知，利用歐幾里德距離來改善在分
箱法(Binning heme)上需要多個地標點才能得到的效果，
在利用網域名稱伺服器作伺服器選擇查圖 12：兩層式選
擇與分箱法比較。ML3SL3表示M：加入判斷式(1)，L3：
第一層使用 3個地標點，SL3：第二層使用 3個地標點。
由圖中可發現在ML3SL3能夠找到與 L8效果相近的近
端伺服器，而ML4SL4在 2025/225的拓撲環境下，對於
近端伺服器的往返時間平均小於 40ms，優於分箱法在
L8的情形。
3.7將網路編碼應用於版權保護機制
在網路編碼上，中間節點在封包層具有使用有效線
性編碼的額外編碼與解碼能力。首先，資料內容會被切
割成 N 個片段，每個片段大小為固定常數 K Bytes。針
對要傳送給副本快取伺服器的 N 個片段 [s1, s2,…,
sn]，原始發布的伺服器隨機且獨立的在 GF(28) 中選擇
一組編碼係數[ ଵܿ
௣, ଶܿ
௣, …, ௡ܿ
௣]，並且產生 N-1 組 K
Bytes 的編碼片段݁௣ = ∑ ௜ܿ௣ כ ௜ܾ௡௜ୀଵ 。用來將原始片段
編碼成݁௣的編碼係數會被嵌入在編碼片段݁௣的標頭，
接著原始發佈的伺服器會將這些 N-1 個編碼片段推向
給內容快取伺服器。由於有 N個線性獨立的編碼片段必
須解碼還原成原始的 N個片段，所以 CDN服務提供者
將無法在尚未取得原始發佈者同意的情況下販售資料內
容。
圖 11加入歐幾里德距離之 RTT比較
圖 12兩層式選擇與分箱法比較
3.7將網路編碼應用於版權保護機制
圖 13展示了利用網路編碼技術完成版權保護的情
況。資料內容被原始發佈者分成了三個片段，並且原始
發佈者將兩個編碼過的片段推向了 CDN 服務提供者的
鬧容快取伺服器。其中有三個 Peer 各自從內容快取伺
服器方接收了一段編碼片段。Peer X 更進一步的自
Peer Y 和 Peer Z 方接收了兩段編碼片段。本研究能發
現 Peer X 將無法使用 Gauss-Jordan 計算解碼並還原
這三個片段，因為這三個編碼片段是來自兩個線性獨立
的片段。因此，假如 Peer X 想要成功的將這三個片段
解碼並回復，他必須要聯絡原始的發佈者，付費並且正
確的取得認證回條，如此才能下載第三個線性獨立的編
碼片段。由於這個原因，本研究能將網路編碼技術應用
在資料內容的遞送，達到原始內容發佈者的版權保護。
圖 13：將網路編碼技術應用於版權保護的情況。
式，圖中將一個資料的區段，細分成六個區塊
頻寬的供應點開始傳送三個編碼過的區塊
是給區塊 1~6來使用，提供 b/3頻寬的供應點傳兩個區
塊也是給區塊 1~6來使用，最後 b/6頻寬傳送一個區塊
也是給區塊 1~6來使用，當需求端收到
是屬於編碼區塊 1~6裡，則他可以還原這
且可以開始播放媒體資料。此時，本研究
時間會變長，有 6個區塊的播放時間，
個資料區段切成 8個區塊，提供 b/2的頻寬的供應點傳
送 4個區塊，這四個區塊是給區塊 1~8
頻寬的供應點傳送 3個區塊，這三個區塊是給區塊
來使用，最後 b/6頻寬傳送 1個區塊也是給區塊
使用，需求端只要收到 8個資料區塊是屬於區塊
就可以開始播放媒體資料，此時等待時間會變成九個區
塊的播放時間，本研究可以發現當資料區段切成不同數
量的區塊，等待時間也會跟著改變，也是說當資料區段
切成愈多段，等待時間也會愈長，一般來說
路編碼技術，等待時間會比沒有使用網路編碼傳輸的等
待時間還要長。
(a) 一個資料區段更進一步細分成
(b) 一個資料區段更進一步細分成
圖 18：應用網路編碼技術的影音串流資料
此外，就算沒有任何節點離開，網路編碼傳輸技術
沒有去避免區塊可能遺失的狀況，如圖
頻寬的供應點點傳送 4個編碼過的區塊
區塊 9~16來使用，提供 b/3頻寬的供應點傳送
過的區塊，此 3個區塊是給區塊 9~16
頻寬的供應點傳送 1個編碼過的區塊，
9~16來使用，當需求端收到 8個編碼過的區塊
區塊是屬於在區塊 9~16裡，此時可以開始播放媒體資
料。但是錯過時間區塊時間 9的播放的時間
所有的區塊 9~16是在區塊時間 9的時間點
一個區塊的時間，需求端沒辦法播放媒體
根據前面的敘述觀察到兩點：(1)用網路編碼傳輸
將資料區段細分成多個區塊，會比沒有用網路編碼作傳
輸的等待時間還要長。(2)用網路編碼傳輸
細分成多個區塊，就算沒有任何節點離開
區段失誤的問題，本研究想在編碼區塊大小上作調整
於是提出適性網路編碼(Adaptive Network Coding
8
，提供 b/2
，這三個區塊
6個區塊，而且
6個區塊資料
可以發現等待
圖 18(b)顯示將一
來使用，提供 b/3
1~8
1~8來
1~8，
，當使用網
6個區塊
8個區塊
22(b)，提供 b/2
，此四個區塊給
3個編碼
來使用，提供 b/6
此區塊是給區塊
，此 8個
，在下載完
，因此會有
。
，
，將資料區段
，還是會遇到
，
scheme, ANC)，給多個節點作排班
塊的編碼會基於節點的頻寬及區塊播放的期限去避免區
段的失誤且有較短的等待時間
圖 23中，上傳點的頻寬分別是
以得知沒有網路編碼技術下，
時間。如果想讓使用網路編碼技術有相等的最小等待時
間，必須設一個期限為三個區塊時間
現在期限之前可以傳遞兩個區塊數量
供應點皆可以傳遞一個編碼區塊
個編碼區塊的期限，在圖 19(b)
可以播放兩個區塊的時間，接著可以設定期限為三加二
為五。因此，可以發現 b/2頻寬的供應點可以在期限前
傳遞一個編碼區塊，所以 b/2頻寬的供應點可以傳輸一
個編碼區塊給第三個區塊使用
下一個編碼區塊的期限。本研究
的期限加一也就是六。因此，
的區塊數為三，分別由 b/2、b/3
一個編碼區塊。所以，三個供應點可以傳遞三個編碼區
塊給區塊 4~6來使用。圖 19(c)
個排程。
(a)期限之前能傳送
(b)期限之前能傳送
(C)完整傳送完
圖 19：利用 ANC方法排程的範例
在串流時期，點的加入和離開的動作是很頻繁的
這邊說明 ANC如何適應這樣的環境
放四個區塊時間後，供應 b/3頻寬的點離開
區塊的編碼將會遺失。這個時候
供應點和 b/6頻寬的供應點來傳送兩個編碼區塊給
區塊使用。所以必須分配給 4~6
點有較高的頻寬 b/2。要求點在八個區塊播放後可以接
收三個編碼區塊給 4~6區塊使用
區塊且開始播放。但完成下載
播放了 4到 5個區塊時間。所以
，在 ANC方法下，區
。
b/2、b/3、b/6，可
最小等待時間是三個區塊
。在圖 19(a)可以發
，b/2和 b/3頻寬的
。本研究可以預測下一
中，接收兩個區塊後，它
。依照圖 19(c)，可以預測
設定下一個期限是先前
可以發現在期限之前傳遞
、b/6頻寬的供應點傳遞
表示傳遞十二個區塊的整
2個區塊
1個區塊
12個區塊
(一)
，
。圖 20(a)中，在播
，而 4~6的
，可以利用 b/2頻寬的
4~6
區塊使用的另一個供應
，要求點可以修復 4~6
4~6全部的編碼區塊已經
，可以用三倍的速度播
