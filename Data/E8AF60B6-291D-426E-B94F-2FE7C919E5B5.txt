行政院國家科學委員會專題研究計畫期中進度報告 
無線感測網路安全密鑰配置與管理機制研發及實際系統實現 
A Study on Key Pre-Distribution and Management in Wireless Sensor Networks and 
Its Realization 
計畫編號：NSC  95-2221-E-011-093-MY3 
執行期限：95 年 8 月 1 日至 98 年 10 月 31 日 
主持人：邱舉明 國立台灣科技大學資訊工程系 教授 
Email：chiu@mail.ntust.edu.tw 
計畫參與人員 : 楊政儒、楊凱婷、王志傑、黃俊凱、張舒怡 
 
一、摘要： 
本計畫為三年期的計畫，此為本計畫三年
執行結束之結案報告。本計畫的目的是針對
無線感測網路安全密鑰的配置問題，做一總
體、深入的研究，進而研發有效率的密鑰配
置與管理機制，並進行效能與成本評比；此
外，除了理論的研究，亦配合設置於本校之
資通安全研究與教育中心(TWISC)的資源，實
際建構一個無線感測網路的實驗平台，並在
其上實作網路攻擊與防禦機制。 
在第一年度的計畫裡，我們完成了針對無
線感測網路的特性、其運作模式、以及通訊
安全方面的議題深入的了解，也對於共享式
密鑰池的加密方式，研發出一套密鑰的配置
機制，使保證任意兩個節點所配置的密鑰，
至少能共有k把相同的密鑰。 
第二年度的計畫，建基於第一年度對於對
對式密鑰的研究，我們以提升感測網路安全
性與resilience能力為考量，將密鑰配置方法加
以改良，結合了Blom的觀念，發展出以法團
(Quorum)為基礎的密鑰預先配置機制，在有
限記憶體下達到較好的安全通訊，提高破解
網路安全所需compromised的節點數目來提
升resilience能力。 
最後一年的研究工作，則配合TWISC之資
源，於本校國際大樓建構一無線感測網路的
實驗平台－SuperTed。除了硬體的平台架設，
我們也實作出多種感測網路中的攻擊，並加
以抵擋防禦。防禦的機制，以對對式密鑰為
基礎，佐以GUI呈現攻防的過程。最後，提出
benchmark的概念，蒐集網路中的資訊，加以
分析，做為網路安全等級的初步評估標準。 
關鍵詞：循環式區塊設計，密鑰管理，密鑰
配置，網路安全，無線感測網路，實驗平台。 
 
Abstract: 
The objective of this project is to address 
the key pre-distribution issues for wireless 
sensor networks. We are to design efficient key 
pre-distribution schemes that are based on the 
notions of shared keys and pair-wise keys. We 
will then realize our mechanisms on physical 
sensor devices and finally deploy a small-sized 
sensor network. The entire project is divided 
into three phases and will be completed in a 
span of three years. This report summarizes our 
work in whole three years of the project. 
During the first period of the project, we 
have already investigated in depth the 
characteristics of a wireless sensor network, 
operating modes of sensor devices, and 
security-related issues. We have completed the 
design of a key pre-distribution scheme that is 
based on the notion of a shared key pool, which 
guarantees that any two nodes share, at the least, 
k common keys from the pool. Our approach is 
based on the concept of cyclic block design in 
which a sophisticated  
In the second period of the project, we have 
extended, on the basis of the previous research 
outcome, our technique to offer a key 
pre-distribution scheme that is based on the 
distribution of keying information, rather than 
the secret keys. Our approach is also based on 
the cyclic block design-like technique. In 
addition, we have studied the hardware/software 
operation of physical sensor devices at this 
stage of the project.  
In the last year of the project, we have built 
a sensor network testbed, named SuperTed, 
with collaboration of TWISC center at NTUST. 
We have already implemented some attacks and 
defenses on the testebed, and also developed 
GUI to present the process and behavior of 
sensors and attackers. Moreover, we bring up 
the benchmark issue of wireless sensor 
networks and try to do it on the testbed by 
collecting data during the transmission among 
RSA。非對稱性演算法雖然加強了對稱性演
算法的安全問題，但需要耗費大量的計算，
速度慢，除了保存自己的密鑰外，還需藉保
存或藉由通訊交換取得他人的金鑰，因此，
所花費的成本較高。 
由於感測節點本身的資源有限，而非對稱
性演算法又比對稱性演算法需耗費更多的資
源[13]，尤其是能量消耗方面，故一般在無線
感測網路的安全機制設計中，多採用對稱性
加密演算法。可行的方法是密鑰採取預先配
置 (key pre-distribution)在節點中，待感測節
點佈署完畢後，若需要進行祕密通訊，則直
接使用節點本身所擁有的密鑰來加密；或者，
以其所保有的密鑰資訊經計算，找到通訊所
需的共同密鑰。在此，我們面對的挑戰就是
要研發有效率的密鑰配置及管理、運作機制，
以較低的成本，達成安全通訊的目的。 
 
三、研究目的 
由上述可知，由於先天資源上的限制，無
線感測網路的安全議題研究與以往有線網路
有很大的不同，又由於感測網路的特殊與應
用多元，使得這些研究顯得益發迫切。而本
計畫的目的就是針對無線感測網路安全密鑰
的配置問題，做一總體、深入的研究，進而
研發有效率的密鑰配置與管理機制，並做詳
細的效能與成本評比；最後，配合設置於本
校之資通安全研究與教育中心(TWISC)的資
源，實際建置一無線感測網路實驗平台，實
地進行可行性的評估。 
計畫前兩年的執行，主要是對於無線感測
網路有初步的認識與理解；並在其上提出以
法團為基礎的對對式密鑰預先配置系統，使
其可以確保任兩節點間可以有共享的 key 
space，且同時具有” λ-secure”特性。最後一年
度的計畫，則是基於前兩年度的研究基礎之
上，配合 TWISC 提供的支援，進一步將其實
作成一小型無線感測網路，並於其上實際進
行網路攻擊與防禦的多種測詴。 
計畫中，密鑰配置機制的建立則以達成下
列之特性為主要考量重點： 
1. 善用無線感測元件有限的記憶體容量； 
2. 減少建立共同通訊密鑰時的通訊量； 
3. 降低建立共同通訊密鑰時的計算量； 
4. 減少節點被 compromised 所帶來的影
響。 
 
四、文獻探討 
我們首先針對無線感測網路的密鑰配置
系統議題，做一完整描述。最後，再介紹幾
種無線感測網路中常見的攻擊方式。 
由前面的敘述我們可以知道，在無線感測
網路的安全議題中，要確保安全的溝通環境，
密鑰的配置與管理問題是其核心關鍵。而這
些密鑰配置機制依不同的面向可以有不同的
分類方式；在本計畫中，我們則依據無線感
測節點配置密鑰的形式將既有的方法分為下
列兩類－(1)共享式密鑰(shared key)方式；(2)
對對式密鑰(pairwise key)方式。所謂共享式密
鑰，是指配置在各感測節點上的密鑰是由同
一密鑰池(key pool)取出，且同一把密鑰可能
配置於多個節點上面，被用於不同的節點對
之間的通訊。而對對式密鑰是指，密鑰在預
先配置時，只有兩個節點才有可能擁有或以
密鑰資訊計算出同一把密鑰，不像前者密鑰
一律由密鑰池取出。 
基本上，在共享式密鑰的方法中，感測節
點在密鑰預先配置的階段，各別由共享的密
鑰池中取得一定數量的共享式密鑰；接著，
在網路佈署之後，再和其他感測節點進行共
同密鑰探索(shared-key discovery)動作，藉以
得知與其他感測節點之間共有的密鑰；而往
後的通訊，就使用這些共同密鑰做為通訊密
鑰，達到通訊加密的目的。而在對對式密鑰
的方法中，於密鑰預先配置的階段，感測節
點必頇事先配置對對式密鑰，或是儲存足夠
的資訊，幫助往後建立對對式密鑰之用。接
著，待網路佈署之後，即可使用事先配置好
的配對密鑰，當作共同通訊密鑰，或是利用
事先儲存的資訊來產生和其他感測節點通訊
用的對對式密鑰。不同的配置方式在建立共
同通訊密鑰時，就會需要不同的成本，也產
生不同的效能。這包括存放密鑰所需的記憶
體空間、建立通訊密鑰的通訊成本與計算需
求量、還有網路的resilience能力。以下，我們
就依據密鑰型式，將目前已提出的重要研究
方法，做相關的評述。 
我們首先介紹共享式密鑰配置的相關研
究。在共享式密鑰方法部份，最簡單且直覺
的作法，就是大家都共同擁有一把密鑰，稱
為單一主密鑰(single-master key)，此把密鑰就
當作網路中各個感測節點之間的共同通訊密
鑰。這個方法的優點為所花費的記憶體空間
最小，也不需要做共同密鑰探索的動作，不
需任何的計算耗損。然而，只要有任何一個
感測節點被compromised，那麼整個感測網路
上所有的通訊將會處於不安全的狀態。當然，
這方法並沒有被使用在現有的感測網路中。 
較早被提出的共享式密鑰配置當屬
Eschenauer及Gligor所提出的機制[13]。該方法
的精神主要是基於隨機式(random)的密鑰配
置方式，再藉由這些密鑰的共享所形成的隨
機網路圖(random graph)[12]，建立各節點對之
間互相溝通的安全管道(secure channel)。此機
值，密鑰池(以S代表)就不能太大；相對的，S
若太小，一旦遭遇節點被compromised的情形
時，resilience會受到較大的影響，因此S是個
很關鍵的參數；相較於[13]，在較少節點被
compromised的情況下，提供了較大的安全性。
然而，一旦被compromised的感測節點較多時，
resilience相對於[13]的方法則較差。此外，作
者也提出多重路徑密鑰加強 (multipath key 
reinforcement)的機制，透過多條安全通訊管
道，共同更新密鑰(key-update)，來加強原先
建立的路徑密鑰。例如，節點A和節點B之間
若有J條安全通訊管道，節點A隨機產生J把隨
機密鑰v1,v2,…,vJ，透過這些多重安全通訊管
道，送給節點B，經某些運算，計算出兩者之
間的共同通訊密鑰。因此，若要得知這把密
鑰，必頇完全蒐集J條路徑所產生的密鑰才行。
此一方法相對於 [13]，雖然加強了網路的
resilience能力，但是也需要較多的記憶體空間、
計算量以及通訊量來達成。 
在Du et al. [11]中，作者所提出的方法主要
是利用Blom[2]的概念，以達成對對式密鑰的
型式，並根據類似[13]的隨機方法，增加感測
網路的resilience能力。概念上，在密鑰的預先
配置階段，感測節點存有部分矩陣的資訊，
在網路佈署之後，欲溝通的節點間，透過交
換這些事先配置的資訊，各自產生一把共同
通訊密鑰。其做法描述如下：假設無線感測
網路是由N個感測節點所組成，那麼使用一個
(λ+1) × N的矩陣G，和一個隨機產生的(λ+1) × 
(λ+1)對稱矩陣D，其中兩者皆屬於有限體
(finite field) GF(q)，矩陣G是公開的，而矩陣
D必頇是私密的。此時，取一個矩陣A = (D〃
G) 
T，使其滿足A〃G = (A〃G)T，亦即A〃G
為一對稱矩陣，令K = A〃G，則會具有Kij = Kji
的性質；透過計算產生Kij = A(rowi) × G(columnj) 
= A(rowj) × G(columni) = Kji，Kij與Kji值就可用做
共同通訊密鑰。該矩陣方法還有λ-secure的良
好性質，此性質是指在沒有超過λ個感測節點
被 compromised 的 情 況 下 ， 無 法 透 過 被
compromised的感測節點，計算出其他感測節
點溝通時使用的共同通訊密鑰。此外，文中
更加入隨機密鑰的概念，提出了multiple-space
的想法，用以提升感測網路的resilience能力。 
Liu et al. [23]中的方法是根據[3]中的觀念
加以改善。概念上，每個感測節點將會分配
到一個共享多項式(polynomial share)，在網路
佈署之後，兩兩感測節點間，就可以利用所
取得的共享多項式，運算出一把共同的對對
式密鑰，以進行溝通。其中，所謂的共享多
項式，是一個主多項式的部份運算結果，並
且具有t-collusion resistant的性質(此性質類似
[11]中提出的λ-secure的性質)，亦即除非多於t
個感測節點被compromised，否則無法透過被
compromised的感測節點，得知其他感測節點
溝通時使用的共同通訊密鑰。其方法中，根
據上述多項式的特性，加上考慮到網路上的
任兩個感測節點間，不一定會需要建立一把
共同通訊密鑰的特性，因此綜合了隨機密鑰
的概念，提出了多項式池(polynomial pool)觀
念，在密鑰預先配置的階段，節點由多項式
池中，隨機抓取一個集合的共享多項式(各屬
於不同的主多項式產生的)，待網路佈署之後，
若與附近的感測節點擁有由相同的主多項式
產生的共享多項式，則可以溝通，否則必頇
透過其他節點來達到共同通訊密鑰的建立；
在此方法中，並不能保證所有的感測網路中
的節點皆能相互安全的溝通，因此，文中另
外提出了一個Grid-based的方法，需要安排感
測節點取得在相同維度上由相同主多項式產
生的共享多項式，若是在n維的架構之下，每
個節點需儲存n個共享多項式，藉此，則網路
中各個節點對皆能夠相互溝通。以二維的架
構為例，擁有相同x座標的節點，可以相互透
過共享多項式所產生的共同溝通密鑰溝通，
同樣的，擁有相同y座標上的節點亦然；因此，
感測網路中任兩個節點A、B必定能找到一個
中間節點C，分別能與A和B產生共同通訊密
鑰，透過C節點，就能建立A與B間的共同通
訊密鑰。共享多項式的概念，加上隨機式的
想法，在精神上與上述的對稱矩陣概念非常
類似，可以藉由多個共享多項式的使用，增
加網路的resilience能力，不過在此方法中，節
點間是否能溝通需依賴機率值而定；因此又
加入Grid架構的概念，以保證網路中任兩點節
點必定可以溝通，但是相較於隨機共享多項
式的方法，在尋找中間節點的過程中，會花
費較多通訊量；在多項式的方法下，整體而
言，有著計算量相較於其他方法負擔較大的
問題存在。 
除了上述基本的對對式密鑰機制，在Lai et 
al. [20]中，提出了一個有趣的概念，名為重疊
共享密鑰(overlap-key-sharing, OKS)。在重疊
共享密鑰的方法中，在密鑰預先配置的階段，
會先產生出一個密鑰字串池(key-string pool)，
節點則從密鑰字串池隨機的取出字串中的某
一個片段字串(sub-string)，儲存在其記憶體中。
每個感測節點都會存有一組片段字串的資訊，
若是想與節點互相溝通時，則交換彼此索引
(index)，藉以得知需要溝通的感測節點之間互
相交集的部份，並用此交集的部份，產生共
同通訊密鑰，產生的方式可以是透過一個雜
湊函數或是其他方法；當然，這把透過彼此
的資訊所產生出的共同通訊密鑰，同時也會
是一把對對式密鑰。此法雖然具有低記憶體
G1={1, 4, 6, 0}， G2={2, 5, 7, 1}， 
G3={3, 6, 8, 2}， G4={4, 7, 9, 3}， 
G5={5, 8, 10, 4}， G6={6, 9, 11, 5}， 
G7={7, 0, 12, 6}， G8={8, 11, 0, 7}， 
G9={9, 12, 1, 8}， G10={10, 0, 2, 9}， 
G11={11, 1, 3, 10}，G12={0, 2, 4, 11}。 
 在上述集合中，我們任取兩個集合，可
以發現任兩個集合 Gi與 Gj，i≠j，i, j = 1, 2, 
3, ….12，必定交集一個元素，並且恰好一個，
因此稱上述作法為一循環式區塊設計。 
 事實上，此集合屬於(n2+n+1, n+1, 1)的設
計，其中 n 為一個 prime power(質數或質數的
次方)，在前述的例子中 n=3；而在文獻探討
中，我們介紹過在[7]中使用了這種設計的概
念，加以應用在感測網路的密鑰預先配置問
題上。 
 
5.1.2 讀寫法團(Read-Write Quorum) 
 在分散式系統中，為了提昇效能以及容
錯能力，相同的資料往往會複製儲存在許多
地方，故資料的同步成了一個重要的議題。
針對一個資料，我們可能會對它執行 read 或
是 write 的動作，但在分散式系統中，read 或
write 的動作可能會在同一時間內執行，因此
若發生 write與 read 或是 write與 write的動作
同時執行的話，勢必會產生衝突(conflict)，因
此必頇有前後順序之分。為了達到分散式系
統中，read 與 write 在多重複製情形下，仍能
正常運作，故發展出了 read write quorum 的概
念。而 read write quorum 主要的性質為： 
 對於任兩個 write quorums，必定交集至
少一個或一個以上的元素； 
 任一 read quorum 和任一 write quorum 必
定交集至少一元素； 
 但是，任兩個 read quorums，則不一定有
交集。 
 值得注意的是，上述條件只要求至少交
集一元素，而非剛好一元素。在[21]中，作者
提出了一套能針對任意的集合 v，產生有效率
的 read write quorum 的循環式設計方法。由
於我們的方法是基於此一方法之上，因此以
下就將此一方法做一概述。在此我們分
成”write quorum”、”read quorum”以及”m 值的
分析”三大部分來簡介： 
 Write Quorum： 
 Write quorum 的性質： 
根據循環式設計所產生任兩個 write quorum 
間，必定交集至少 1 個的元素。 
 Write quorum 的產生方法： 
就一正整數 m 而言，write quorum 的產生集合
為： 
Wg = {0, 1, 2, …, m-1, w1, w2, …wk-1}, 
m-1 < w1 ≤ 2m-1, and wk-1 ≥ (N-1) / 2 
0 < wi+1 – wi ≤ m, for all 1 ≤ i ≤ k-2 
其中，write quorum 的大小為 
𝑆𝑤 = 𝑚 +  
𝑁−1
2𝑚
 − 1。 
根據上述方式產生的集合，我們以 N=19, m = 
2 為例，如【圖一】所示，取產生集合 G = {0, 
1, 3, 5, 7, 9}；我們可以利用兩個角度來觀察
write quorum 的現象： 
(1.) 幾何學的角度： 
 觀察 G 中 1 ~ 
𝑁−1
2
 的連續 m 個元素，我
們稱之為”密部”，其餘稱為”疏部”，必定會分
別與產生集合 G1~G (N-1)/2 中密部交集，由於
定義中疏部為介於 1 ~ m-1 的大小；而當 G 
(N-1)/2 之後的集合，由於循環的關係，尾部的
元素會再將掉入 G 中的密部。在本例中，我
們可以觀察到，G∩G1 = {1}、G∩G2 = {3, 5, 7, 
9}、G∩G3 = {3}…等，一直到 G∩G9 = {9}，
都是由於 G 的疏部最少分別與 G1~G9的密部
交集，相反來說，G 與 G10~G18 中，則是由於
G 的密部分別最少與他們的疏部交集。 
(2.) 由循環式差集合的定義： 
 在[21]中根據循環式差集合的定義，加以
證明，詳細證明請參閱原論文。當然，相較
於循環式差集合，產生集合元素個數會稍微
大於循環式差集合的元素個數，但皆屬於
O( N)的級數中。如例中， 
I. Difference 1 ~ m-1： 
 2 可以提供 1(由 2-1)的差。 
II. Difference m ~ (N-1)/2： 
 3 可以提供 2(由 3-1), 3(由 3-0)的差， 
 5 可以提供 4(由 5-1), 5(由 5-0)的差， 
 7 可以提供 6(由 7-1), 7(由 7-0)的差， 
 9 可以提供 8(由 9-1), 9(由 9-0)的差。 
III. Difference (N-1)/2 ~ N-1： 
 有 1 ~ 9 的差後，分別取-1 ~ -9 mod 19 得
 到 18 ~ 10 的差。 
由上述討論可知，此 write quorum 可以產生
1~18 的差至少一次，因此擁有循環式差集合
的性質。 
 Read Quorum： 
 Read quorum 的性質： 
根據 [21]中的循環式設計所產生的任一對
read quorum 與 write quorum 間，必定交集至
少 1 個以上的元素。 
 Read quorum 的產生方法： 
其中，read quorum 配合前述之 write quorum
1. 
1 ( 1)
2
M
N K m
S km
m
   
   
 
。 
2. k-WQ 的大小最小值發生在 am m   或
am m   ，其中
1
2
a
N
m
k

 ，由此可知
記憶體大小 SM 和密鑰池的關係為
( )MS O kN 。 
3. 令 l am m    , h am m   ，Sl與 Sh 為 SM 在
ml及 mh 之值，由 2 可知最小的 k-WQ 大
小為min( , )l hS S ，而
1 1
S
2 2
l l
l
N k
km
m
  
   
 
、
h
1 1
S
2 2
h
h
N k
km
m
  
   
 
，比較 Sl 和 Sh
兩者可知道 l hS S k  ，所以
min( , )l h hS S S k  ；有了這樣的關係，
就可中找出 Sh 的範圍，當 ma 是整數時，
為
1
2 +
2
h l a
k
S S km
 
   
 
；當 ma 不是整
數時，範圍為
2
h
1 1
 S 2
1 2 2
( 1)
a
a a
a
a
km k k
km km
m
k m
 
     


 
最佳密鑰池 N 的求法： 
令
24 1
( )
2( 1)
a a a
a
a
km km m k
p m
m
   


， 因 此
m i n ( S , S ) ( )l h p m k  ，假設記憶體大小為 SM，
我們可以透過最小的 k-WQ 必定大於 p(m)-k
的關係，求解 m 值，並找出對應的 N，而此
N 必定大於實際上符合的最大 N 值，但相距
不遠，接著透過此 N 往下逼近，找到能符合
的最大值 N，使得密鑰鏈大小為 SM，即為最
佳的密鑰池大小 N。以 k=2，SM=500 為例，
當 N=62874 的時候， h MS S 500  ，則此 N
即為最佳的密鑰池大小。  
 
5.1.6 網路 resilience 能力分析 
 透過上述方式，我們可以在固定記憶體
大小 SM 之下，求最佳的密鑰池大小 N，使得
網路的 resilience 能力，在 k-WQ 的設計下可
以達到最佳化。所謂的 resilience 最佳化，是
指當有某些節點被 compromised 的時候，網
路還能保有 resilience 的能力；其定義如下：
對於網路中未被 compromised 的任意兩節點
NA 以及 NB，當目前網路中有 x 個節點被
compromised 時， linkAB 會被影響 (意即被
compromised)的機率，若此數值越小，表示網
路 resilience 能力越佳，反之越大則越差。 
 簡單來說，當節點逐漸被 compromised
時，敵方所蒐集的密鑰資訊也會越來越多。
因此，如何降低敵方所含有的密鑰資訊，成
為本機制中最關鍵的地方。本小節中，說明
了如何在有限的記憶體 SM 下，找到ㄧ個最大
的 N 使得 
SM
N
 最小，透過此 N 的最佳化，則
能使得網路的 resilience 能力達到最佳，也代
表了定義中，當任一個節點被 compromised
時，透漏的密鑰資訊，佔整體密鑰池的總密
鑰資訊若能最少，linkAB 受到影響被的機率也
能最小。 
 由於依照不同密鑰池 N 所產生出來的
k-WQ 特質不盡相同，擁有非常多組合且無規
律，無法簡化到容易計算的方式，因此較難
精確計算此系統下的 resilience 能力，故在此
我們以機率分析的方式，搭配 resilience 的定
義，求出其近似值如下： 
  1 −  1 −
SM
N
 
𝑥
 
qSM
q=𝑘
p q ， 
其中 
SM
N
 為取到某把密鑰的機率， 1 −
SM
N
 
𝑥
為被破解的 x 個節點皆沒有取到該把密鑰的
機率，p(q)為交集 q 把密鑰所佔的比例，由此
方式，可以求出 q 把共同的密鑰皆被得知的
機率，即為網路 resilience 能力的分析結果。
當記憶體大小為 SM，所能得到最佳的密鑰池 
設計 N，求出 SM 和 N 的關係式，以及透過分
析得到兩個節點交集 k 把密鑰的機率佔所有
的比例 p(q)；有了這些資訊，就可將之導入前
式中進行分析。 
 
5.1.7 效能分析結果 
 在【圖五】與【圖六】中，我們呈現不
同的記憶體大小下所帶來的結果，其中，密
鑰的大小假設為 16 bytes。圖中以*代表 k=1、
+ 代表 k=2 、 o 代表 k=3 以及 X 代表
combinatorial design。由分析的結果所示，在
記憶體較大的時候對此機制的運作較為有利，
雖然目前感測節點的記憶體空間有限，使得
k-WQ 的機制在記憶體極小的情況下，相對於
combinatorial design 機制優點有限，但是隨著
密鑰長度且 q > N 節點數)，接著產生(λ+1) × 
N = G’的矩陣。令 G’(j)代表矩陣 G’的第 j 欄，
此一步驟的目的，就是要提供 G’(j)給第 j 節
點 Nodej。雖然 G’(j)包含λ+1 個元素，但每
一感測節點只要儲存一個”seed”元素即可重
建 G’(j)，且”seed”是唯一的，因此可以用來當
作節點的 ID。 
 Step2. 產生 ω 個 key spaces 集合 
隨機產生ω個(λ+1)×(λ+1)的對稱矩陣D1,…, 
Dω，並輔以 write quorum 的概念，產生 ω 個
key spaces 集合，稱之為 KSG。若 ω = n，則
每一個 KSG 所含元素個數約為 O( n )，以
SIZEKSG 表示之。舉例而言，【表一】中，以 ω 
= 13，SIZEKSG = 4，產生了 13 個 key spaces
集合(KSG0 ~ KSG12)。 
 Step3. 配置相對應的 KSG 給各節點： 
每個感測節點，依據其 ID，配置相對應的 KSG，
每一個節點再根據所持有的 KSG 資訊，分別
計算 Ai = (Di〃G’)
T，接著將 Ai 之第 j 列資訊
儲存在節點身上。 
 Step4. 對對式密鑰的產生 
 如【圖九】、【圖十】所示，當 ω = 13 時，
我們便產生一個包含 KSG0~KSG12 的 key 
space pool，Node2 即是分配到 KSG2 mod 13 = 
KSG2 這個 key space 子集合，也就是說 Node2
必需儲存 A2(2)、A5(2)、A7(2)及 A1(2)這些資
訊。一旦他想和 NodeID mod ω = 1 的節點通訊
的話，（如圖中的 Node1及 Node14這兩個節點），
Node2 可以自行得知，KSG2 和 KSG1 所交集的
key space 為 D1，即可以透過 A1(2)搭配 Blom‟s 
scheme 和 Node1 或者 Node14 直接計算並建立
一把通訊密鑰。 
利用上述方法，節點間只需要知道 ID，即
可由 ID 簡單地推導計算出共同擁有的密鑰，
使用這些密鑰來建立安全的通訊，且保證任
兩節點間必存在有共同交集的 key space Di。  
 
5.2.3 記憶體使用量分析 
由於感測節點的儲存空間很有限，故針對
所研發的機制分析記憶體使用量，可以得知
方法的優劣。我們首先定義記憶體的單位為
一把密鑰的大小，在 Blom‟s scheme 中，因為
Ai 是一個(λ+1) × N 大小的矩陣，所以 Ai(j)包
含(λ+1)個元素，所以若要儲存一個滿足”λ
-secure”特性的 keyspace，感測節點就必頇耗
費 λ+1 個記憶體單位容量。而在我們的機制
中，因使用 Blom‟s scheme 來產生通訊密鑰，
且每一顆感測節點大概配置到 SIZEKSG 個
keyspace ， 因 此 每 一 個 節 點 需 要 儲 存
(λ+1)×SIZEKSG 個元素在記憶體中，並且每個
元素的大小差不多等於一把密鑰的大小，所
以每個感測節點的記憶體總需求量大概為
(λ+1)×SIZEKSG 再乘上”一把密鑰的大小”(在此
不計算用來重建 G(j)的 seed 元素，因為這個
值也可以用來當作節點 ID 使用，不然應該要
存(λ+2)×SIZEKSG 個)。 
 
5.2.4 網路 Resilience 能力最佳化 
當任意感測節點被 compromised 時，所洩
漏出的密鑰資訊，若佔整體密鑰池的比例能
最少的話，意即代表某個 link 受到影響的機
率也會最小，也就是具備了所謂的「最佳化
的 resilience 能力」。因此，研究的另一項重要
目的就是欲使每個節點所配置到的密鑰資訊
能愈少愈好，也就是 SIZEKSG (write quorum 
size)能愈小愈好。 
就此，給定 x 個節點被 compromised 的情
形下（以 Cx 表示之），任意一條 link c 會被
compromised 的機率即為： 
1Pr(  is broken | ) Pr(  is compromised | )x xc C D C
   
在以下計算中，為求簡化，我們以「剛好
交集一個 key space」作為分析情況，僅求出
1(  is compromised | )r xP D C 的近似值。假設網
路上共有 N 個感測節點，此時共產生 ω 個 key 
spaces，每個節點被配置 SIZEKSG 個 key spaces；
在我們的機制中，每一個 key space 約被配置
了 KSG
SIZE
KS N

 
  
 
次，即整個網路中約有
KS 個節點被配置到同一個 key space。根據” 
λ-secure”特性，D1 這個 key space 若要被
compromised 的話，至少要有”λ+1”個持有此
key space 的節點被 compromised 才有可能發
生。所以給定 x 個節點被 compromised 的情形
下，我們可以得到： 
1
1
(  is compromised | )
KS
r x
i
KS N KS
i x i
P D C
N
x
 
  
  
  
 
 
 

  
根據以上推導出來，我們將效能分析結果呈
現於【圖十一】。 
為 1000 個，取 R = 0.1，意思就是使用 0.1×1000 
= 100 個 SensorRWQ 及(1-0.1)×1000 = 900 個
SensorRQ佈署於整體感測網路中，即可確保在
佈署完所有的節點之後，對於任意兩個感測
節點之間，如果是 SensorRWQ和 SensorRWQ要
通訊或者是SensorRWQ和SensorRQ要通訊的話，
他們彼此之間至少共享一個以上相同的
keyspace，可以用於直接建立一把通訊密鑰；
若是 SensorRQ 和 SensorRQ 要通訊的話，他們
會有 PRQ 的機率共享一個以上相同的
keyspace，用於直接建立通訊密鑰。倘若沒有
共同的 keyspace，則會有網路的整體連接性議
題產生，此問題牽扯到 RatioRWQ 的選擇，底
下我們將會加以討論。 
 
5.2.6 以 Read/Write Quorum 為基礎的對對
式密鑰配置機制 
加上 read quorum 的密鑰配置機制，是以
前述 write quorum 的機制改良而成，故建構方
法很類似，不再多加詳細說明，在此我們僅
介紹其異同處。 
第一階段是密鑰預先配置，依然分成三大
步驟： 
 Step1. 產生矩陣 G’，建構方式同上。 
 Step2. 產生 ω 個 keyspace 集合： 
隨機產生 ω 個(λ+1) × (λ+1)的對稱矩陣
D1,…,Dω，並輔以 read/write quorum 的概念，
我們主要產生了底下兩種 keyspace 集合，分
別為 KSGRWQ 及 KSGRQ。在前面的敘述中有
討論過，調整 m 值的大小會影響到所產生
keyspaces 集合的大小，也就是 SIZEKSG_RWQ
和 SIZEKSG_RQ 之間的大小關系會隨著 m 值而
改變，此值也間接影響我們機制的 resilience
能力，後面的部分會作探討(SIZEKSG_RWQ 必定
大於 SIZEKSG_RQ)。底下以ω = 10、m = 5為例，
分別產生 10 個 SIZEKSG_RWQ = 7 的 KSGRWQ 集
合 (KSGRWQ0~KSGRWQ9)及 10 個 SIZEKSG_RQ = 
2 的 KSGRQ集合 (KSGRQ0~KSGRQ9 )，如【表
二】所示。 
 Step3. 配置相對應的 KSG 給每個節點： 
針對每一個感測節點而言，依據其節點
ID，我們分別給予相對應的 KSG，其方式如
下： 
for ID = 0,…,N : 
switch (Node_Type) 
case SensorRWQ：將 KSGRWQ(ID mod ω)的資訊
配置給 NodeID 
case SensorRQ：將 KSGRQ(ID mod ω)的資訊配
置給 NodeID 
end 
每一個節點再根據所持有的 KSG 資訊，分別
計算 Ai = (Di〃G‟)
T，令 Ai(j)代表矩陣 Ai 的第
j 列，接著將 Ai(j)儲存在這個節點身上。 
 Step4. 產生對對式密鑰 
這一階段與前述方法的差異在於，當兩節
點要溝通以計算與對方共用的密鑰前，溝通
封包內除了要包含”節點本身的 ID”之外，尚
需告知對方”本身為 SensorRWQ或是 SensorRQ”
的資訊，如此才能計算出和對方所共享的
keyspaces 為何。除此之外，比較特別的是，
使用此一機制的 SensorRWQ 節點，在協助
SensorRQ 間建立完通訊密鑰並且與鄰居節點
產生完爾後通訊時要用的密鑰之後，便可丟
棄 write quorum 部分的密鑰資訊，然後只攜帶
少量的 read quorum 部分密鑰資訊即可。舉例
來說，原先屬於 SensorRWQ的 Node0 一開始被
配置了 KSG RWQ0：{D0, D1, D2, D3, D4, D5, D9}
的密鑰資訊，在完成上述工作之後，便只留
下 KSG RQ0：{D0, D5}這部份，嚴然轉換成
SensorRQ的角色了，隨之而來的影響便是在面
臨節點被 compromised 時，只會洩漏出相當
少量的密鑰資訊，而且空出更多可用的記憶
體空間，可支援其他用途。 
 
5.2.7 加入 Read Quorum 的對對式密鑰配置
機制記憶體使用分析 
在此機制中，若要儲存滿足”λ-secure“特
性的 keyspace，則 SensorRQ 所需使用的記憶
體空間是 memoryRQ = (λ+1) × SIZEKSG_RQ，而
SensorRWQ所需要的記憶體大小為 memoryRWQ 
= (λ+1) × SIZEKSG_RWQ，所以大約是 SensorRQ
所需的 k = SIZEKSG_RWQ / SIZEKSG_RQ 倍大小，
實際上就是指 SensorRWQ 此種感測節點所被
配置到的 keyspaces 數會比較多，但是此類節
點只占我們整個網路中的少部分。藉由
read/write quorum 機制的彈性，我們可以隨意
地調整 SIZEKSG_RWQ 和 SIZEKSG_RQ 的比例，且
亦可滿足原本具有的性質，因此藉由調整
read/write quorum 機制中的 m 值，便會間接影
響 k 值的變化，也就是記憶體需求量會隨 m
值而變動。此外，在前述有提到，此一機制
中每個節點與鄰居建立完通訊密鑰之後，即
21 2
0
20
( )
20
[2cos ( ) 1 ( )1
2 2
0
(2) ( ) (2, )
2
         [1 (1)] [1 ( )]
2
         [1 (1)] [1 (1 ) ]
         [1 (1)] 2 [1 (1 ) ]
Overlap
r
r
r Num x
n y y
y
Pr f x Pr x dx
x
Pr P x dx
r
x
Pr R dx
r
Pr y R dy
  
 
    
     
     




 至於 Pr(3)的分析方式，也是類似於 Pr(2)，
差別就在於，此時必頇求出存在某對節點，
並且此對節點要分別是 Nodei和 Nodej的鄰居，
同時此對節點也要能夠直接建立安全通訊，
並且協助 Nodei和 Nodej建立通訊密鑰的機率
值，前提要滿足(1.) Nodei 和 Nodej 並無法「直
接」建立通訊密鑰，而且(2.) 也無法透過任何
一個中間節點的協助而達成目的。首先，假
設此四個節點分別為 Nodei、Nodej、Nodem
及 Noden，由於要求出 Pr(3)的精確值相當的
複雜且困難，因此我們以較簡易且直觀的分
析方法，求解其近似值，方法如下：針對所
有 Nodei 的鄰居節點 Nodem，我們找出所有可
能的 Noden，滿足 Nodei 和 Nodej 可以透過此
對節點的協助而成功建立通訊密鑰。所以根
據上述分析方法，也就是想在給定某個可以
和 Nodei 建立通訊密鑰的 Nodem 情況底下，詴
圖找出此時 Nodem 和 Nodej 的交集區域中，見
【圖十三】，存在能協助他們建立安全通訊的
節點 Noden 的機率值有多少；此值愈高，便意
謂著 Nodei和 Nodej能夠透過這條路徑成功地
建立通訊密鑰的機率就愈高。因此，若 Nodei
要透過 3-Hops 和 Nodej 建立通訊密鑰的話，
如【圖十三】，其所有可能的四種情況如【表
三】所示。和上述 Pr(2)的分析同理，若第 1.
種情形發生的話，那麼 Nodei和 Nodej便可「直
接」建立通訊密鑰了，所以也不列入考量範
圍，所以(Nodem, Noden)的所有可能組合只剩
下 2.、3.、4.此三類情形。如【圖十三】所示，
若給定 Nodei 及 Nodej 的距離為 x 的話，那麼
所有可能的(Nodem, Noden)節點對組合之總數
便如下： 
2
2
3 20 0
( ) ( ) ( )
r
Overlap
n
Num x y Area z dyd
r



   
(其中‟y‟為圖中 Nodei 及 Nodem 之距離，‟Θ ‟
為其夾角，‟z‟為 Nodej 及 Nodem 之距離；由於
此值的求法是參考[11]文中所提及的，在此便
不加詳述)。 
 接著我們假設 EX 代表可以透過一對中間
節點的協助而成功建立通訊密鑰的事件，EY
表示無法「直接」同時也無法透過恰好一個
中間節點而建立密鑰的事件，所以在兩點距
離為‟x‟的情形下(x = 0 ~ r)，可以得到底下的
關係式： 
3
(3, )  ( , )
             ( ) ( | , )
             [1 (1) (2)] ( | , )
(3, ) [1 (1) (2)] [1 ( )]
X Y
Y X Y
X Y
Pr x Pr E E x
Pr E Pr E E x
Pr Pr Pr E E x
Pr x Pr Pr P x

 
   
     
上面的 1-P3(x)就是指，當兩點距離為‟x‟，且
無法透過一個以內的鄰居節點協助而建立通
訊密鑰的前提下，至少存在一對節點(Nodem, 
Noden)可以在滿足上述 2.、3.、4.此三種可能
情形下，協助他們建立通訊密鑰的機率值。
假設 EZ 代表所有滿足 2.、3.、4.此三種情形，
並且能成功協助建立密鑰的事件，由於 P3(x)
的估算相當的複雜，所以我們僅求得其近似
值如下： 
3Num (x)
3( ) [1 ( | )]Z YP x Pr E E   
因為 EY和 EZ 此兩事件互為獨立事件，所以： 
3
3
3
Num (x)
3
Num (x)
3'
Num (x)
3 3'
( ) [1 ( )]
1 1
{1 [ (1 ) (1 ) ]}
1 1
Let 1 [ (1 ) (1 ) ]
( )
____
ZP x Pr E
R R R R R R
m m
P R R R R R R
m m
P x P
 
          
          
 
最後，根據 x 值的分佈：0~r，我們求解出 Pr(3)
近似值如下： 
3
0
320
Num (x)
3'
0
(3) ( ) (3, )
2
         [1 (1) (2)] [1 ( )]
         [1 (1) (2)] 2
r
r
r
Pr f x Pr x dx
x
Pr Pr P x dx
r
Pr Pr x P dx
 
     
    



我們根據上述分析所推導出的 Pr(k)值，畫出
【圖十四】。由此可知在我們的機制中，當
SensorRQ 間發生無法直接建立通訊密鑰的情
形時，若 RatioRWQ取得愈大，至多透過 2-Hops
就可以成功建立的機率趨近於 1，但是相對地
使用較多 SensorRWQ 意謂著必需花費較高的
成本，所以這些因素之間可依據所要的應用
不同而有所取捨。 
 
5.2.9 效能評估與分析結果 
 針對改良過後的密鑰配置機制，同樣的
但仍缺少一安全評估軟體，故我們亦開發了
一套 benchmark 系統，以衡量協定的安全等
級。 
 
5.3.1 系統介紹 
近年來由於無線感測網路的發展越來越
廣泛，各大知名學府爭相建立起自己的實驗
平台 (testbed)，如加州大學柏克萊分校的
Omega、Motescope 和哈佛的 motelab。而在
實際應用方面，柏克萊分校更將無線感測網
路運用在生醫感測、地理位置定位、氣候預
測和醫療照顧等等領域之上。但受限於感測
元件有限的計算量與硬體限制，這些實驗平
台目前都沒有考慮到安全的問題；然而，隨
著無線感測網路的發展，安全的議題也受到
更多重視，相關攻擊與防禦的機制也紛紛被
提出。 
有鑑於安全性的重要，且為了實際驗證我
們所提出的方法，我們配合了本校資通安全
研究與教育中心(TWISC)的資源，實地建置了
一 個 安 全 實 驗 平 台 － SecUre Protocol 
vERification TestbED (以下簡稱 SuperTed)。架
設過程，我們首先參考柏克萊 David E. Culler
教授的實驗室所架設之三種無線感測網路實
驗平台：Omega testbed、 sMote testbed、
Motescope。以下分別簡述： 
 第一代 Omega testbed 的架構是 Telos B 
mote 由 USB 線連接置放在天花板上，
藉 USB 來提供節點電力，節點之間利用
無線訊號溝通。 
 第二代 sMote testbed，是將 MICA2 感測
元件(如【圖十七】所示)利用 Ethernet 網
路線連接(Power Over Ethernet，POE)，
但僅藉此提供電源及控制元件，感測元
件之間仍透過無線溝通。sMote testbed
比起 Omega 穩定許多，在電力支援與維
護上也十分方便，缺點為裝置設備成本
極高。 
 第三代 Motescope testbed，是將 sMote 的
感測元件 MICA2，取代成為 MICAZ。
Motescope 的長程目標為將具有 IP 的
Telos 元件合併至其中，使其可以具有 IP，
與網路結合。 
參考過以上三個實驗平台，並考量經費及
實際需求後，我們決定以第一代 Omega 
testbed 為硬體基礎，使用 USB 供電的方式，
在台灣重建整個實驗平台。平台的硬體部份
大致相同，軟體部份，則由於開發此實驗平
台的主要目的為探討無線感測網路的安全議
題，故我們在平台中加入了安全協定，藉以
將理論的研究應用在實際感測網路中。 
本系統的突破點為實作出多種感測網路
上的攻擊，如 Sybil attack、replication attack
和black hole attack。由於在無線感測網路中，
Sybil attack 的發動十分簡單，卻會對網路造
成嚴重的問題，且許多的攻擊方法都是由
Sybil attack 延伸出來的，故 SuperTed 以 Sybil 
attack 為例，實作了多種防範 Sybil attack 的方
法。此外，我們也開發了一套 GUI (graphical 
user interface)，以清楚呈現整體攻防的過程；
最後，我們亦將系統資料加以搜集統計，提
供一適用於感測網路的安全評估軟體，稱為
SuperBen (SecUre Protocol vERification 
BENchmark)。 
 
5.3.2 系統架構 
由於 SuperTed 包含硬體的設備系統，以及
軟體核心部份的演算法，故我們將 SuperTed
分做兩部份說明介紹： 
(1) 系統部份： 
SuperTed 硬體的部份，主要是使用 40 顆
Taroko sensor mote (相容於 Telos B) (mote 如
【圖十八】所示)和一台 PC，並將 40 顆 mote
使用 USB 線連接到 PC 上。各個 mote 上擁有
8 MHz 的 MSP430 處理器、10KB 的記憶體、
48KB的 Flash 和相容於 IEEE 802.15.4 的無線
射頻收發器，而 PC 的主要功用是提供程式開
發的伺服器以及蒐集資料的中心，系統架構
圖如【圖十九】所示。此外，為了方便整個
團隊共同開發程式，我們使用的作業系統為
Ubuntu 7.04 ，並且利用加州大學柏克萊分校
發展的 TinyOS 加快程式開發的速度。 
(2) 攻擊防禦部份： 
我們在 SuperTed 上已實作出一些攻擊程
式和防禦機制，其中，最值得深入探討的攻
擊非 Sybil attack 莫屬。根據相關研究指出，
在無線感測網路中，Sybil attack 是極為嚴重
的攻擊，一個惡意節點可以輕易偽造多重虛
假的身份來混淆網路中的其他節點，傳送大
量的假封包。最嚴重的情況，是 Sybil node
假扮根(root)節點，誘使節點將蒐集到的資料
傳送給它。若沒有適當的防禦機制，無線感
的應用程式比較，當做改善程式安全等級的
參考。 
藉由以上兩個研究，可以了解實驗平台的
重要性，有了實驗平台，我們可以更具體的
觀察到節點們運作情況，大大提升研究機制
的可行性。 
 
六、結果與討論 
前兩年的研究進度，我們以循環式區塊設
計為基礎，提出對對式密鑰配置機制，並加
以改良使其更適於無線感測網路之使用。由
分析及模擬結果顯示，所提出的機制皆有不
錯的網路resilience能力，且不會有太高的記憶
體使用量。 
而第三年的研究，偏向於實際硬體面，我
們以Omega testbed為基礎，在台灣重建了實
驗平台，並於其上實作了感測網路的攻擊與
防禦機制，佐以GUI呈現節點之間的運作情況。
更進一步，我們提出了初步的benchmark評斷
標準，可做為網路安全評估參考。後續的研
究，可以朝更多不同的攻擊與防禦機制方向
著手，不僅是理論面，亦可於平台上將其實
作。也可以將實驗平台應用在多種不同的環
境之下，探討外在環境對平台安全性的影響，
以研發更多有效率且有用的機制。 
 
七、參考文獻： 
[1] I.F. Akyildiz, W. Su, Y. Sankarasubramaniam, E. 
Cayirci, “A Survey on Sensor Networks,” IEEE 
Communications Magazine, vol. 40, pp. 102-114, 
2002. 
[2] R. Blom, “An Optimal Class of Symmetric Key 
Generation Systems,” Proc. Eurocrypt, pp. 335-338 
1984. 
[3] C. Blundo, A. Santis, A. Herzberg, S. Kutten, U. 
Vaccaro, and M. Yung, “Perfectly-secure Key 
Distribution for Dynamic Conferences,” Lecture 
Notes in Computer Science, pp. 1-23,1993. 
[4] M. Cardei, and J. Wu, “Coverage in Wireless 
Sensor Networks,” Handbook of Sensor Networks. 
CRC Press, 2004. 
[5] H. Chan, A. Perrig, and D. Song, “Random Key 
Predistribution Schemes for Sensor Networks,” Proc. 
IEEE Security and Privacy Symposim, 
pp.197-213 ,2003. 
[6] H. Chan, and A. Perrig, “PIKE: Peer 
Intermediaries for Key Establishment,” Proc. IEEE 
INFOCOM, vol. 1, pp.524-535, Mar. 2005. 
[7] S. Camtepe, and B. Yener, “Combinatorial 
Design of Key Distribution Mechanisms for 
Wireless Sensor Networks,” Proc. 9th European 
Symposium On Research in Computer Security, pp. 
293-308, 2004. 
[8] S. Ç amtepe, and B. Yener, "Key Distribution 
Mechanisms for Wireless Sensor Networks: a 
Survey," Rensselaer Polytechnic Institute, Computer 
Science Department, TR-05-07, Mar. 2005. 
[9] W. Diffie, and M. E. Hellman, “New Directions 
in Cryptography,” Trans. Information Theory, vol. 
22, pp.644-654, Nov. 1976. 
[10] W. Du, J. Deng, Y. Han, S Chen, and P. 
Varshney, “A Key Management Scheme for Wireless 
Sensor Networks Using Deployment Knowledge,” 
Proc. IEEE INFOCOM, vol.1 , pp. 586-597, Mar. 
2004. 
[11] W. Du, J. Deng, Y. Han, P. Varshney, J. Katz, 
and A. Khalili “A Pairwise Key Pre-distribution 
Scheme for Wireless Sensor Networks,” Trans. 
Information and System Security, vol. 8, pp. 
228-258, 2005. 
[12] P. Erdös, and A. Rényi, “On Random Graphs,” 
Publicationes Mathematicae, vol. 6, pp. 290-297, 
1959. 
[13] L. Eschenauer, and V.D. Gligor, “A 
Key-management Scheme for Distributed Sensor 
Networks,” Proc. 9th ACM conference on Computer 
and Communications Security, pp. 41-47, 2002. 
[14] Huirong Fu, S. Kawamura, Ming Zhang, and 
Liren Zhang, “Replication Attack on Random Key 
Pre-distribution Schemes for Wireless Sensor 
Networks,” Proceedings from the Sixth Annual IEEE 
Information Assurance Workshop 2005 (IAW '05), 
pp. 134-141, 15-17 Jun. 2005. 
[15] M. Hall, Combinatorial Theory, 
Wiley-Interscience in Discrete Mathematics,1986. 
[16] D. Huang, M. Mehta, D. Medhi, and L. Harn, 
“Location-aware Key Management Scheme for 
Wireless Sensor Networks,” Proc. 2nd ACM 
workshop on Security of Ad Hoc and Sensor 
Networks, pp. 29-42, Oct. 2004. 
[17] C. Intanagonwiwat, R Govindan, D Estrin, J.S. 
Heidemann, and F. Silva, “Directed Diffusion for 
Wireless Sensor Networking,” IEEE/ACM 
Transactions on Networking, vol. 11, pp. 2-16, 2003. 
[18] Q. Jiang, and D. Manivannan, “Routing 
Protocols for Sensor Networks,” Proc. IEEE CCNC, 
pp. 93-98, 2004. 
[19] M. Kochhal, L. Schwiebert, and S. Gupta, 
“Role-Based Hierarchical Self-Organization for 
Wireless Ad hoc Sensor Networks,” Proc. Second 
ACM International Workshop on Wireless Sensor 
Networks and Applications, pp. 98-107, 2003. 
[20] B. Lai, D. Hwang, S. Kim, and I. Verbauwhede, 
“Reducing Radio Energy Consumption of Key 
Management Protocols for Wireless Sensor 
Networks,” Proc. IEEE/ACM ISLPED, pp. 351-356, 
2004. 
[21] C.M. Lin, G.M. Chiu, “A New Quorum-Based 
Scheme for Managing Replicated Data in 
Distributed Systems,” IEEE TRANSACTIONS ON 
COMPUTERS, vol.. 51, no. 12, Dec 2002. 
[22] D. Liu, P. Ning and W. Du, “Group-Based Key 
Pre-Distribution in Wireless Sensor Networks,” Proc. 
ACM Workshop on Wireless Security, pp. 11-20, 
【圖一】 Write quorum with N = 19，m = 2 
 
 
【圖二】 Read quorum with N = 19，m = 2 
 
 
【圖三】 k-WQ with N = 19，m = 2，k = 2 
 
 【圖七】 在 Blom‟s Scheme 中產生 Pairwise Key 
 
 
【圖八】 矩陣 G 的一個例子 
 
 
【表一】ω = 13，SIZEKSG = 4，產生的 13 個 key space 集合(KSG0 ~ KSG12) 
 
 
KSG0 = {D0,D3,D5,D12}  Generation Set 
KSG1 = {D1,D4,D6,D0} KSG5 = {D5,D8_,D10,D14} KSG9_ = {D9_,D12,D1,D8_} 
KSG2 = {D2,D5,D7,D1} KSG6 = {D6,D9_,D11,D5_} KSG10 = {D10,D0_,D2,D9_} 
KSG3 = {D3,D6,D8,D2} KSG7 = {D7,D10,D12,D6_} KSG11 = {D11,D1_,D3,D10} 
KSG4 = {D4,D7,D9,D3} KSG8 = {D8,D11,D0_,D7_} KSG12 = {D0_,D2_,D4,D11} 
Seed 
 【表二】ω = 10，m = 5，KSGRWQ集合 (KSGRWQ0~KSGRWQ9)、KSGRQ集合 (KSGRQ0~KSGRQ9 ) 
 
KSG RWQ0 = {D0,D1,D2,D3,D4,D5,D9}  Read+Write Quorum Generation Set 
KSG RWQ1  
= {D1,D2,D3,D4,D5,D6,D0} 
KSG RWQ4  
= {D4,D5,D6,D7,D8,D9,D3} 
KSG RWQ7_  
= {D7,D8,D9,D0,D1,D2,D6} 
KSG RWQ2  
= {D2,D3,D4,D5,D6,D7,D1} 
KSG RWQ5  
= {D5,D6,D7,D8,D9,D0,D4} 
KSG RWQ8  
= {D8,D9,D0,D1,D2,D3,D7} 
KSG RWQ3  
= {D3,D4,D5,D6,D7,D8,D2} 
KSG RWQ6  
= {D6,D7,D8,D9,D0,D1,D5} 
KSG RWQ9  
= {D9,D0,D1,D2,D3,D4,D8} 
 
KSG RQ0 = {D0, D5}  Read Quorum Generation Set 
KSG RQ1 = {D1, D6} KSG RQ4 = {D4, D9} KSG RQ7 = {D7, D2} 
KSG RQ2 = {D2, D7} KSG RQ5 = {D5, D0} KSG RQ8 = {D8, D3} 
KSG RQ3 = {D3, D8} KSG RQ6 = {D6, D1} KSG RQ9 = {D9, D4} 
 
 
 
 
 
 
 
【圖十二】 „r‟為感測節點的 transmission range，„x‟為兩節點間的距離， 
中間交集區域為 Node i 和 Node j 的共同通訊範圍 
 
 【圖十五】 在不同參數底下，我們的機制(m=400)與 Du(m=200)的比較 
 
 
 
 
【圖十六】 在不同參數底下，我們的機制(m=400)與 Du(m=200)的比較 
 
 
0 100 200 300 400 500 600 700 800
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Number of nodes compromised
F
ra
c
ti
o
n
 o
f 
c
o
m
m
u
n
ic
a
ti
o
n
s
 c
o
m
p
ro
m
is
e
d
Our: ω=49, S
RQ
=1, S
RWQ
=50
Our: ω=29, S
RQ
=1, S
RWQ
=30
Our: ω=  9, S
RQ
=1, S
RWQ
=10
Du:   ω = 7, τ = 2
0 100 200 300 400 500 600 700 800
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
Number of nodes compromised
F
ra
c
ti
o
n
 o
f 
c
o
m
m
u
n
ic
a
ti
o
n
s
 c
o
m
p
ro
m
is
e
d
Our: ω=49, S
RQ
=1, S
RWQ
=50
Our: ω=29, S
RQ
=1, S
RWQ
=30
Our: ω=  9, S
RQ
=1, S
RWQ
=10
Du:   ω = 7, τ = 2
【圖十九】 SuperTed 硬體架構 
 
 
【圖二十】 SuperTed 認證機制 
 
a. 遭受 Sybil attack                   b. 防禦 Sybil attack 
【圖二十三】 Sybil attack 攻擊與防禦畫面 
 
 
【圖二十四】 SuperBen GUI 統計畫面 
 
 
 
Base station 
Unidentified 
nodes 
Detected Sybil node 
Validated normal nodes 
Enhanced  
Base station 
最後接受的論文數為 30 篇，接受率約為 10.6%。論文涵蓋範圍廣泛，包括
許多重要且符合時代發展的議題，如 Dynamic Spectrum Access, Sensor 
Networks, Mobile Systems and Security 等。而 Poster 與 Demo 的內容則更多
元，除了上述，還包涵了 Cognitive Radio, Cooperation and Coding, Location 
Related Technique, Mesh Networks, Network Optimization, Physical Layer, 
Vehicular Networks 及 WLANS 等與無線行動系統相關的種種研究。 
 
三、 行程之內容重點摘述 
 為期六天的會議，本人參加了多場 session，如與目前研究有所相關的
Spectrum Access/Usage, Communication Efficiency, Sensor Networks, Mobile 
Systems 及 Wireless Network Potpourri 等行動運算相關的 session。其中，令人印
象深刻的論文有以下幾篇： 
 由 Justin Manweiler 等人提出的” Order Matters: Transmission Reordering in 
Wireless Networks”。其主要探討使用 Message in Message (MIM)接收方式的無線
裝置，訊息的傳遞順序會對接收端產生影響。所謂的 MIM 接收方式，是指在
physical layer，可以允許接收端，從一持續的接受訊息中脫離，轉而接收另一個
訊號(SINR)較強且有興趣的訊息(signal of interest)。從前會造成 collision 的情況，
在 MIM 環境中，可以成為同時傳送的兩個訊息。MIM 的實作方式，是容許 MIM
接受器，可以在接收一訊息的時候，同時搜尋新的訊息標頭(preamble)，若有更
強的有興趣的訊息到來，則從原來的訊息中脫離，接收新訊息，舊訊息在此時就
變成干擾。依照這種方式，訊息傳遞的先後順序就很重要。這篇論文便是在無線
環境中，探討多種訊息之間該如何依序傳遞。基本的精神，是較弱的訊息需早於
強的訊息傳輸；若是較強的訊息先傳輸，使得後到的有興趣卻較弱的訊息無法傳
到接收方，則形成 collision。然而在一大型網路中，訊息種類繁多，且訊息各自
有不同的強弱，會互相成為 collision domain。作者證明了此 MIM-aware 的排程是
一 NP-hard 的問題，並推導出一 upper bond，最後建置一 MIM-aware 系統，將其
實作。傳統無線網路的排程，通常是為了達到最大的流量，此時再加上 MIM 接
收端的考量，使得排程問題更富挑戰，亦可為日後研究一方向。 
 其次，由 Qingsi Wang 等人提出的” Mobility Increases the Connectivity of K-hop 
Clustered Wireless Networks”亦相當有趣。無線感測網路中，為了訊息傳遞及網路
的連結性，常形成以 cluster head 為中心的網路模式；而所謂 k-hop clustered 是
指所有 cluster member最多經過 k步就可以到達 cluster head。作者研究了以 k-hop 
cluster 為系統的感測網路中，節點若是採取 random walk mobility 的模式移動，
且移動速度滿足 Θ(1)，則節點的移動反而會增加感測網路的連接度。這樣的研究
結果，給予我們跟以往相當不同的觀點，節點的移動對網路的影響不再是負面的，
反而因為提高了連結度，可以降低傳輸時能量的耗損與改善在能量與延遲方面的
取捨。 
