 1
中文摘要 
隨著科技快速的進步發展，多樣資訊不斷在網際網路上產生與累積，因此資訊過量已成為使
用者主要負擔。要如何從各種形式且大量的資料中，精確且有效率地推薦有用的資訊給使用
者，成為極具價值的研究課題。本研究計畫從下世代合作式推薦系統的角度切入，發展對應
領先技術涵蓋下述兩大範疇：『參考者搜尋技術』及『個人化推薦篩選』。在此三年期計畫執
行過程中，我們已完成相關論文共九篇，其中五篇論文已公開發表或被接受於國際知名會議，
參與計畫之學生得以參加會議報告研究成果，與國際知名學者交流，對於其研究能量累積有
莫大幫助，至於其餘四篇論文亦已投稿靜待審查，本期末報告將完整詳述所有研究成果。 
Abstract 
With rapid growth of the Internet technology, the information lacking has no longer been a problem. 
Instead, the information overloading starts to be a challenge. Therefore, an efficient and effective 
approach to assist users to precisely get the useful information from the massive dataset is needed. 
Among the existing solutions, the collaborative recommendation mechanism is a popular one to 
solve this problem. This project is based on the view point of the cooperative recommendation 
system, which mainly covers two issues: 1) Relevant User Selection and 2) Personalized 
Recommendation. In the past three years, our research results have been published in some 
international conferences; each of the results will be detailed in this report. 
一、前言 
伴隨著資訊科技與網際網路的快速發展，文件、音樂、書籍、影片、照片與部落格等各
種形式的物件在網際網路上快速且大量累積，在如此資訊豐富的環境內，資訊過量(information 
overloading)已成為使用者沉重的負擔。因此，在龐大且雜亂的資料中，如何精確且有效率地
取得或推薦有用且使用者感興趣的資訊給使用者，即成為一個極具挑戰性的研究課題。 
針對解決資訊過量所帶來的問題，目前以選擇式搜尋(selection based retrieval)技術最為人
所熟知。其主要是系統透過使用者下達感興趣之物件的部分資訊，例如關鍵字，尋找並回覆
包含該部分資訊之物件作為答案。然而，在某些應用中，要求使用者精確地描述其心中的喜
好往往不是一件容易的事情；此外，選擇式搜尋技術更往往囿於使用者所提供的描述，限制
了系統提供使用者其他有趣物件的可能。有鑑於此，本研究計畫以下世代合作式推薦系統的
角度切入，發展領先技術涵蓋下述兩大範疇：『參考者搜尋技術』及『個人化推薦篩選』。 
一、 參考者搜尋技術 
合作式推薦的概念在於當某一目標使用者需要推薦服務時，系統將參考其他使用者的資訊
來進行推薦。因此，因應各種環境差異，提供不同的參考者選拔面向與選拔方式，將有助於
滿足各種層面的服務需求。本計畫的在此一研究主軸探討議題包含：以內涵資料為基礎之參
考者搜尋與以鏈結資料為基礎之參考者搜尋。 
二、 個人化推薦篩選 
建構在參考者選拔的機制下，當參考者選拔出後，系統將根據參考者來進行推薦。如何
妥善地應用選拔出的參考者，進一步地篩選可推薦物件，是推薦系統發展的關鍵與未來趨勢。
 3
餘使用者的影響力，因此其執行效能仍不盡理想。[LK07]亦採用貪婪演算法解決該問題，不
同的是在每一回合中先將所有使用者依據影響力大小進行排序，且由影響力最大的使用者優
先考慮，以有效節省那些不可能成為領導者的使用者的計算時間。 
[CW10]以期望影響範圍的觀念，重新定義使用者所涵蓋使用者族群的範圍。每個使用者存在
一個介於 0 到 1 之間的活躍機率(activation probability)，用來代表這個使用者會受到其朋友至
少一人影響的機率，當值越大，代表這個使用者會受影響的機率也越高。根據活躍機率，可
以定義每個使用者的影響範圍，稱為增值影響力(incremental influence)。假設當某個使用者的
活躍機率從現有的值直接提升至 1 時，這個增加的幅度會影響其周圍使用者的活躍機率提升
的數值總和，即為增值影響力。[CW10]利用建立索引(index)的方式，紀錄每個使用者影響範
圍內的所有使用者。因此，在每一回合選擇領導者之後，只須更新那些受影響的使用者即可。
雖然[CW10]的方法較原先的貪婪演算法[KK03]有效率，但是仍必須花費相當多的時間在索引
建立上。 
具不確定資料環境之子空間天際線查詢處理 
在 2001 年，[BK01]提出天際線運算(skyline operation)，將資料根據多個挑選準則
(multi-criteria)，作適當的篩選，其廣泛應用於推薦式系統內。然而，天際線運算必須花費龐
大的執行時間及記憶體空間，因此，許多改進計算天際線的相關研究也接踵而來，有些利用
建立索引(index)加快速度，如：[KRR02]、[LZ07]，或是利用非索引(non-index)，將資料先做
簡單計算，儲存在資料結構中，以利計算，如：[CG03]、[GS05]。亦有些研究是針對在子空
間中處理天際線查詢[PF07]、[PJE05]、[TX06]，依據使用者所挑選出來的屬性，進行天際線
的計算。 
在一些實際應用中，如：無線網路感測器或是物件式的資料型態，資料本身是具有不確
定性的性質。由於資料本身是不確定性，舊有的天際線方法無法明確地判斷該類型的資料是
否屬於天際線，因此[PJL07]針對不確定性的物件，定義不確定物件彼此之間支配的關係，及
每個不確定物件成為天際線機率的數值，所有天際線機率值大於使用者給定的門檻值的不確
定物件即為機率天際線。然而，在實際應用中，使用者通常對於資料本身沒有預先的知識，
故不容易設定一適當的門檻值。 
具不確定性的串流資料中機率天際線的連續查詢處理 
大部份天際線運算的研究仍侷限於靜態(static)的資料，在即時應用環境中，資料隨著時
間不斷地進入系統，處理天際線查詢的問題就面臨如何在動態資料改變下，能有效率地回答
天際線的考驗。在[LY05]和[TP06]研究中，為了減少針對串流資料去處理天際線查詢的計算
成本，利用緩衝儲存器(buffer)來儲存確定是或有機會是天際線的資料，將不可能為答案的資
料捨棄。然而這些研究方法都是針對確定性的資料(certain data)進行天際線運算。 
[LS08]和[ZL09]是針對在不確定的串流資料下，提出處理機率天際線查詢的方法，而此
二研究中所定義的不確定資料是資料本身存在一個機率值。然而，在某些應用環境中，如：
在物件式的資料型態，一個物件是由至少一個實例(instance)所構成，當該類型的資料隨著時
間不間斷地進入系統，如何快速地處理機率天際線的查詢是一極大挑戰。 
考慮動態天際線之範圍查詢處理 
天際線查詢[BK01]的結果包含至少在一屬性中其值相對於其他物件而言是最佳值的那些
 5
距離，則 p 可被此圓圈 C 包含，且圓圈 C 的半徑改設為 b 與 p 的距離。如果 p 對每個圓圈 C
都找不到相同類別，或 p 對找到的相同類別圓圈 C 的中心點 b 的距離大於此中心點到不同類
別但最近物件 nb 的距離的話，則建立一個以 p 為中心點的圓圈，半徑為 0，並計算 p 與最近
但不同類別的物件 nb 的距離，將此距離紀錄起來。當每個物件都能被一個圓圈所包含，則完
成受限制的庫倫能量網路的建構。 
我們發現在建構受限制的庫倫能量網路的過程中，必須對每一物件找到與它屬於不同類
別但為最近的物件，其是最花時間的工作，所以我們採用多個參考點方法([BF96]、[BS97]、
[YO01])的觀念，提出一索引方法，以快速地找出查詢點的最近物件。一開始取出多個參考點，
對每個參考點建立 B+-tree。若資料點 p 越接近查詢點 q，則資料點 p 與參考點 r 的距離跟查
詢點 q 與參考點 r 的距離越相近，故我們選擇查詢點 q 在每個 B+-tree 的鄰近葉節點(leaf node)
的資料點當作候選的最接近最近鄰居(candidate approximate nearest neighbors)，一直循環的對
每個 B+-樹取出資料點，直到取出的資料點滿足使用者給定一個門檻值 λ。在這 λ 個資料點
中，找出距離最接近查詢點 q 的資料點 a 當作最接近最近鄰居。利用此資料點 a 與查詢點 q
的距離，快速的刪除不可能是最近鄰居的資料點。 
另外，為了更進一步地降低建構受限制的庫倫能量網路所需花費的處理時間，若資料點
p 與查詢點 q 在前 k 個維度的平方和大於或等於最接近鄰居 a 與查詢點 q 的距離平方，則此
資料點 p 不可能是最近鄰居的資料點。而維度計算的先後次序，是以每個維度的變異數
(variance)來當作依據，變異數越大的維度優先計算。 
實驗結果 
我們所提出的方法(RE algorithm)與一支撐向量分類器演算法(LIBSVM)及兩個受限制的
庫倫網路演算法(Mu’s algorithm[MA03]、Rajan’s algorithm[RY98])做比較。實驗使用合成資料
和真實資料來比較各個演算法的訓練時間和精準度。 
 使用合成資料(synthetic data)的實驗 
合成資料的產生是先隨機對每個類別產生圓圈的中心點，然後對每個中心點計算與其他
中心點最近的距離，換句話說，計算與最近的不同類別中心點的距離，然後以此距離的 0.49
倍當作半徑，在這個半徑範圍內產生資料點。實驗所使用的參數及描述如表 1 所示。 
當我們固定 D 與 C，而對 N 作變化，即增加資料量，實驗結果如圖一所示。我們可以看
到除了 Mu 演算法之外，其他三個演算法的效能都跟資料量成線性成長，而我們的演算法(RE)
效能最好。 
 使用真實資料(real data)的實驗 
使用四個真實資料庫來比較各個演算法的訓練時間和精準度，表 2 為各資料庫的相關設
定。 
由表 3 得知，三個受限制的庫倫網路建構演算法的精準度均比支持向量分類器好。另外，
由於 Mu 跟 Rajan 演算法所使用的圓圈數量較多，因此其精準度均比 RE 演算法好，但其差距
約在 3%以內。另外，由表 4 得知，RE 演算法比其他演算法的訓練時間少得多。 
整體而言，RE 演算法在精準度及訓練時間皆比 SVM 來的好，而與同為受限制的庫倫網
路分類器的兩種演算法(Mu 和 Rajan)作比較，RE 演算法在精準度上與 Mu 和 Rajan 差距約在
3%以內，但訓練時間卻遠小於 Mu 和 Rajan，最大差距甚至達到 78.24 倍。 
表 1、參數設定 
 7
假設系統想推薦給使用者一間房子，他們會考慮房子附近的公共設施，而公共設施有好
有壞，有些是好的公共設施，像是學校和圖書館，甚至是工作場所。而有些是不好的設施，
像是舞廳和垃圾場。如何讓系統能夠在一些房子當中找到遠離不好的設施又靠近許多好的設
施是本項目的研究目的。 
問題：一般而言，若是有若干間想買的房子，而且都想靠近好的設施且遠離不好的設施
的前提下，本篇研究用距離最近不好的設施的距離當作衡量標準，其意義是代表其他不好的
設施都在這個範圍以外。另一方面，這邊會找最遠的好的設施，其意義也是相反，代表其他
的好的設施都在這個範圍以內。再用天際線查詢，以這兩種距離維度當作衡量標準，回報天
際線查詢給使用者。 
研究方法 
方法主要是提出變形的 Quad-tree，稱為 Grid Quad-tree，能夠利用同一種資料結構找出最
近和最遠鄰居。而我們也利用將每個格子編號，再提出一個方法能夠讓我們知道附近格子的
編號，進一步去搜尋附近格子中的點。在最近鄰居的方法中我們利用上述的方法，在查詢點
附近搜尋點，一步一步縮小範圍，最後得知最近鄰居的距離。接著我們在尋找最遠鄰居時，
我們提出兩個 Lemma 能夠利用天際線的性質，讓我們能夠利用上述的特性找出最遠鄰居，同
樣的，我們在最遠鄰居當中也是慢慢搜尋有可能的格子而找出最遠鄰居的距離。最後，我們
提出 EFFN 演算法，在尋找天際線過程中，先刪除一些不可能成為天際線的查詢點，最後回
傳天際線查詢給使用者。 
實驗結果 
在執行時間上優於對手，如圖二與圖三實驗數據圖。接著在未來，我們希望能夠讓使用
者能夠選擇自己喜愛的公共設施，甚至能夠給一些權重，讓這個應用能夠更貼近使用者需求。 
 
圖二 
 
圖三 
0
0.01
0.02
0.03
0.04
0.05
0.06
100 200 300 400 500 1k 2k
tim
es
(se
c)
# query points
Independent
EFFN
R-tree
0
0.02
0.04
0.06
0.08
4k 6k 8k 10k20k30k40k
tim
es
(se
c)
# each of bad and good points
Independent
EFFN
R-tree
 9
實驗結果 
我們使用 Enron 郵件資料庫，在 Enron 資料庫內，有 151 員工互通電子郵件的資訊。我
們將 151 員工當作社會網絡中的實體，且員工如果曾經互相傳送電子郵件的話，則相對應的
節點會用一條鍊結(link)相互連接，因而產生一個 0/1 的圖形(graph)。 
在圖四中，我們所提出的二個演算法均比 CLGA 演算法所得到的分群結果佳，其中，
G-LPC 演算法可得到最佳的分群結果。由圖五得知，KM-LPC 演算法所需要的處理時間遠比
其他二個演算法少得多。最後，由圖六得知，G-LPC 演算法與 KM-LPC 演算法所需要的記憶
體空間遠比 CLGA 演算法來得少。總體而言，雖然 G-LPC 演算法需要花費最多的執行時間，
但其所得到的分群結果卻是最好的。另外，不論是在分群結果、執行時間或記憶體要求，
KM-LPC 演算法都比 CLGA 演算法佳。 
 
圖四、不同的社群個數對分群結果的影響 
 
圖五、不同的社群個數對處理時間的影響 
 
圖六、不同社群個數對記憶體要求的影響 
4、以鏈結資料為基礎之參考者搜尋：尋找影響力最大化的領導者 
1400
1500
1600
1700
1800
1900
2000
2100
2200
6 12 18 24 K
V
al
u
e 
o
f t
he
 
o
bje
ct
iv
e 
fu
n
ct
io
n
G-LPC
KM-LPC
CLGA
0
100
200
300
400
500
6 12 18 24 K
Ti
m
e(s
)
G-LPC
KM-LPC
CLGA
150
230
310
390
470
550
630
6 12 18 24 K
M
em
o
ry
(K
B
s) G-LPC
KM-LPC
CLGA
 11 
作為本研究的比較對象。 
在本實驗中，領導者集合的大小設定為 10，而每條路徑(path)最低機率的門檻值設定為
0.1。由圖七得知，該四種演算法所找出來的領導者集合之影響範圍是不相上下的，其表示該
四種演算法尋找領導者的能力是相同的。 
 
圖七、領導者集合的影響範圍 
 
圖八、各演算法的執行時間 
 
圖九、各演算法找出一個領導者的平均時間 
在圖八中，以橘色呈現的初始時間(initial time)表示建立索引所需花費的時間。從圖八得
知，該四種演算法在執行時間上呈現了三種不同的等級，PMIA 演算法僅僅用了 Greedy 演算
法一半的時間，但是其必須花費許多時間在建立索引上；CELF 演算法與 ECE 演算法相較之
下又比 PMIA 演算法更加快速。在找尋每個領導者所耗費的平均時間亦呈現相同的三種不同
等級，其結果如圖九所示。 
在我們所提出的 ECE 演算法中，經由削減策略過濾後，可將 NetHEPT 內原有的 15,233
位作者刪除至只剩下 15 個可能成為答案的作者，其削減比例(pruning rate)為 99.90%。此外，
在計算削減策略所需要的資訊所額外付出的時間只佔總執行時間的 1%。因此，根據實驗顯示，
我們所提出來的方法僅需額外耗費非常少的時間，卻能大幅增進整體貪婪演算法的效能。 
0
100
200
300
1 2 3 4 5 6 7 8 9 10
In
fl
u
e
n
ce
 s
p
re
a
d
Seed set size
NetHEPT
Greedy/CELF/ECE PMIA
 
 
0
200
400
600
800
1000
Gre
edy PM
IA
CE
LF EC
E
R
u
n
n
in
g
 t
im
e
 (
se
c)
10
9
8
7
6
5
4
3
2
1
Initial
 
168.97
12.26
0.45 1.1
0
50
100
150
200
Greedy PMIA CELF ECE
S
e
c/
le
a
d
e
r
 13
實驗結果 
以 NBA 球員的數據統計資料為資料庫，經過篩選之後，共有 9,963 筆資料，每筆資料有
12 個屬性。相關參數初始設定為：屬性為 6 個，k 值為 10。由圖十可以看出當同時運用 WorstSky
與 BestSky 策略來刪除物件和找出更佳的天際線機率上限值是表現最佳，而採用隨機挑選第 k
個天際線機率上限值，其效果最差。由圖十一得知，隨著屬性個數的增加，處理時間也會隨
之增加，同時運用 WorstSky 與 BestSky 策略仍可獲得最佳的效能，而 DBS+sort 和 BS 隨著屬
性個數的增加，處理時間是不穩定成長，其原因為刪除能力是根據一直不斷地計算不確定物
件的天際線機率而變動的關係。由圖十二得知隨著 k 值的增加，計算時間也隨之增加，效果
仍是同時運用 WorstSky 與 BestSky 策略最佳。 
 
圖十、動態上限值策略的比較 
 
圖十一、屬性個數對處理時間的影響 
 
圖十二、k 值的挑選對處理時間的影響 
2、具不確定性的串流資料中機率天際線的連續查詢處理 
研究目的 
 15
 
圖十三、不同的資料筆數對處理時間的影響 
 
圖十四、滑動視窗長度對處理時間的影響 
 
圖十五、物件屬性的個數對處理時間的影響 
3、考慮動態天際線之範圍查詢處理 
研究目的 
[BK01]提出天際線查詢的觀念，天際線是由至少在一屬性中其值是最佳值的物件所組成；
然而，[PT05]認為在真實應用中，使用者希望能以自身的需求當作查詢的條件，且回傳的答
案必須盡可能接近該需求，因而提出一動態天際線查詢(dynamic skyline query)的觀念。 
針對動態天際線的查詢，有些研究提出一些有效率的方法以縮減動態天際線查詢的處理
時間。然而，那些研究均侷限於使用者自身的需求必須是精確的，但是在實際生活中，使用
者通常不會很精確地知道自己的需求，而是希望給定一個具範圍的查詢(range query)。因此，
我們的研究著重於設計一有效率演算法，根據使用者給定的一具範圍的查詢，在無須轉換每
一物件與查詢本身的關係之情況下，能夠快速地回傳推薦物件給使用者。 
研究方法 
當使用者給定一具範圍的查詢時，為了快速地回傳推薦物件給使用者，我們利用格子索
引(grid index)及多方向的 Z 順序曲線(multidirectional Z-order curve)的特性，建立一資料結構，
以有效地判別哪些物件絕對不屬於動態天際線且刪除該些物件，以節省更多不必要的計算，
進而加快回傳動態天際線的處理時間。 
物件的每一屬性可以當作一座標軸，而我們可依據物件本身的屬性值，將其視為在空間
中的一點(point)。接著，我們將空間切割成數個沒有重疊的格子(cells)。當使用者給定一具範
 17
因此較不會因物件個數的多寡而影響處理時間。從圖十八可以發現，當物件本身是呈現相依
性資料分佈時，我們的方法與 SFS 演算法均會因物件個數的多寡而對動態天際線的處理時間
有顯著的影響。不過，我們的方法仍比 SFS 演算法有效率。 
 
圖十八、相依性資料分佈 
4、考量反向式天際線之 Top-k 查詢處理 
研究目的 
[PT05]提出動態天際線查詢(dynamic skyline query)的觀念，考慮單一使用者，動態天際線
是由至少在一屬性中其值是最符合此使用者需求的產品所組成；然而，[LC08]站在公司角度
考慮，公司更希望能夠知道在動態天際線的觀念下回傳有哪些使用者把指定產品當作動態天
際線，因而提出一反向式天際線查詢(reverse skyline query)的觀念。並且提出一演算法在不需
要計算出每個單一使用者的動態天際線有哪些產品的情況下仍然可以找到正確的答案。 
我們的推薦系統站在公司的角度去考慮，我們不但希望可以找出有哪些使用者視產品為
動態天際線，我們更希望能夠找出前 top-k 個產品具有最多使用者把此產品視為天際線的性質，
我們希望推薦這 k 個產品使我們有最好的銷售率。[WT09]的 BRS 演算法除了利用[LC08]的演
算法且更進一步利用 R-tree 的索引結構增加判斷的策略減少了計算反向式天際線的處理時間。
然而，對於我們想找出前 k 個有最多人視產品為動態天際線的目的之下，BRS 必須針對每個
產品套用 BRS 取得所有產品的相對應的反向式天際線。因此，我們的研究著重於設計一有效
率演算法使我們更快的找出此 k 個產品，我們利用了 R-tree 的結構使我們得以判斷一群點的
反向式天際線個數之上限，使我們可以依此上限盡量避免去計算每個產品的反式天際線。最
終，我們仍然可以得到正確的前 k 個最受歡迎產品。 
研究方法 
先將使用者及產品分別用 R-tree 做索引，以方便之後利用兩個 R-tree 中的 MBR 來取得
反向式天際線(reverse skyline)數量的上下限估計值。 
在考慮和其他產品競爭下的產品 R-tree 中的一個 MBR，排除不可能將此產品的 MBR 底
下產品視為動態天際線查詢(dynamic skyline query)的使用者後，可以算出一個 MBR 的上限值，
此上限值表示在此產品的 MBR 中的任一產品都不可能超過此反向式天際線數量。之後利用
產品 MBR 的反向式天際線上限值作為判斷我們要推薦產品答案在哪一個產品 MBR 底下。 
從產品 R-tree 的根部(root)開始尋找，每次都優先選擇擁有最高的反向式天際線上限值的
MBR 尋找，直至找到前 k 個具有最高反向式天際線數量的產品才完成動作。除此之外，我們
在方法中利用[WT09]的引理，雖然犧牲上限值的準確度但提昇了計算的速度，更運用已計算
的資訊去加快執行的時間。 
 19
[CC] D. Y. Chiu, and A. L. P. Chen, "An Online Classifier for Enhancing the Accuracy of 
Multimedia Data Retrieval," Submitted for publication. 
[HC] M. W. Huang, D. Y. Chiu, and A. L. P. Chen, "Efficient Computation of Subspace Top-K 
Probabilistic Skylines on Uncertain Data," Submitted for publication. 
[LC] Y. W. Lin and A. L. P. Chen, "Skyline Query Processing Considering Nearest and Farthest 
Neighbors," Submitted for publication. 
[WC] P. H. Wu and A. L. P. Chen "Top-k Query Processing Considering Reverse Skyline 
Retrieval," Submitted for publication. 
 
參考文獻 
[B98] C. J. C. Burges, “A Tutorial on Support Vector Machines for Pattern Recognition,” Data Mining and Knowledge 
Discovery, 1998. 
[BF96] J. Barros, J. French, W. Martin, P. Kelly, and M. Cannon, “Using the Triangle Inequality to Reduce the Number 
of Comparisons Required for Similarity-based Retrieval,” International Conference on Storage and Retrieval for Image 
and Video Databases, 1996. 
[BK01] S. Börzsönyi, D. Kossmann, and K. Stocker, “The skyline operator,” International Conference on Data 
Engineering, 2001. 
[BS97] A. Berman and L. Shapiro, “Efficient Image Retrieval with Multiple Distance Measures,” Interna-tional 
Conference on Storage and Retrieval for Image and Video Databases, 1997. 
[CG03] J. Chomicki, P. Godfrey, J. Gryz, and D. Liang, “Skyline with presorting,” International Conference on Data 
Engineering, 2003. 
[CL08] L. Chen and X. Lian, “Dynamic Skyline Que-ries in Metric Spaces,” Advances in Database Tech-nology, 2008. 
[CS93] P. K. Chan, M. D. F. Schlag, and J. Y. Zien, “Spectral K-Way Ratio-Cut Partitioning and Cluster-ing,” Design 
Automation Conference, 1993. 
[CV95] C. Cortes and V. Vapnik, “Support-Vector Networks,” Machine Learning, 20(3), 1995. 
[CW10] W. Chen, C. Wang, and Y. Wang, “Scalable Influence Maximization for Prevalent Viral Marketing in 
Large-Scale Social Networks,” the 16th ACM SIGKDD Conference on Knowledge Discovery and Data Mining, 2010. 
[DH01] C. H. Q. Ding, X. He, H. Zha, M. Gu, and H. D. Simon, “A Min-Max Cut Algorithm for Graph Parti-tioning 
and Data Clustering,” International Conference on Data Mining, 2001. 
[DS93] A. Drug, W.V. Stoecker, J.P. Cookson, S.E. Umbaugh, and R.H. Moss, “Identification of Variegat-ed Coloring in 
Skin Tumors: Neural Network vs. Rule-based Induction Methods,” IEEE Engineering in Medicine and Biology 
Magazine, 1993. 
[FL00] G. Flake, S. Lawrence, and C. Giles, “Efficient Identification of Web Communities,” International Conference 
on Knowledge Discovery and Data Mining , 2000. 
[GS05] P. Godfrey, R. Shipley, and J. Gryz, “Maximal Vector Computation in Large Data Sets,” International 
Conference on Very Large Data Bases, 2005. 
[IK05] H. Ino, M. Kudo, and A. Nakamura, “Partition-ing of Web Graphs by Community Topology,” Interna-tional 
Conference on World Wide Web, 2005. 
[KK03] D. Kempe, J. Kleinberg and É. Tardos, “ Maximizing the Spread of Influence through a Social Network,” the 
 21
2006. 
[TP06] Y. Tao and D. Papadias, “Maintaining Sliding Window Skylines on Data Streams,” IEEE Transac-tions on 
Knowledge and Data Engineering, 2006. 
[TX06] Y. Tao, X. Xiao, and J. Pei. “SUBSKY: Efficient Computation of Skylines in Subspaces,” International 
Conference on Data Engineering, 2006. 
[WI01] B. M. Wilamowski, S. Iplikci, O. Kaynak, and M. Onder Efe, “An Algorithm for Fast Convergence in Training 
Neural,” INNS-IEEE international Joint Con-ference on Neural Networks, 2001. 
[WT09] X. Wu, Y. Tao, R. C. W. Wong, L. Ding and J. X. Yu. Finding the influence set through skylines. In Proceedings 
of the 12nd International Conference on Extending Database Technology, EDBT2009, Saint Petersburg, Russia, pp. 
1030-1041. 
[YO01] C. Yu, B. C. Ooi, K. L. Tan, and H. V. Jagadish, “Indexing the Distance: An Efficient Method to KNN 
Processing,” International Conf. on Very Large Data Bases, 2001. 
[ZL09] W. Zhang, X. Lin, Y. Zhang, W. Wang, and J. X. Yu. “Probabilistic Skyline Operator over Sliding Windows” 
International Conference on Data Engi-neering, 2009. 
University，提出先處理subexpression的最小子集以避免重複計算的想法。第二篇論
文Vectorwise: a Vectorized Analytical DBMS為學界研究推廣為商品的一例，其
performance比現今產品都要好，引起來自Microsoft、IBM、HP等業界研究員的多方質
詢。第三篇論文Scalable and Numerically Stable Descriptive Statistics in 
SystemML來自IBM，著眼於數值計算中小誤差的不能忽視及其作法。 
午餐時安排的座談會為Funders Session，由National Science Foundation的Le 
Gruenwald、Department of Energy的Ceren Sust、及National Institutes of Health
的Olga Brazhnik報告其單位在資料工程方面的研究經費機會；其中最好的消息應該是
NSF剛由白宮通過一個Big Data的新研究議題。雖然對美國學界來講此座談會堪稱重
要，但由聽眾稀少的情形看來，參加會議的應該大部分來自美國境外或者是美國的業
界(大會統計，此次會議論文被接受最多的三大單位為Hong Kong、Singapore、及
Microsoft)。 
下午參加了Top-K Processing以及poster sessions。這個會議延續去年方式，所有的
論文作者都要再以poster來說明他們的論文內涵，這樣的作法可讓與會者對所有有興
趣的論文與其作者討論。晚上參加cruise與晚宴。由於4/6有事必須回到台灣，我搭乘
4/4的航班，於4/5晚回到台灣，結束此行。以下附上會議時的一些觀察與心得： 
- Met senior database researchers Erich Neuhold, David Lomet, Mike Stonebraker, Philip 
Berstein, Umesh Dayal, Paul Larson, David Maier, Masaru Kitsuregawa, and Guy 
Lohman 
 They persistently attended ICDE 
 Interesting to see a gap between senior and young researchers 
 The age of the attendees ranges from 20+ to 70+ 
- Talked to Lei Chen (for a visit), Hong Cheng, Reynold Cheng, Xueming Lin, Li-Zhu 
Zhou, Kyuseok Shim, Wei-Shinn Ku (about jobs in Taiwan), Yu Zheng (about internship 
and collaboration at MSRA) 
- Collaboration becomes popular (from 千人計畫, MSRA internship, etc.) 
- Talked to Mi-Yen about AS; can freely leave for visit for some period of time (visited 
MSRA for three months, and will visit Jian Pei for two months) 
- Chaired industrial session; Paul, Guy, Masaru, Xiaofang, Qiming, Kyu-Young were all 
there 
- Talked to Eric Lo (now at The Hong Kong Polytechnic University) 
- Talked to Elisa Bertino; lots of activities and travels for the data security research 
- Talked to Umesh long about current database research activities at HP Labs 
- Talked to Sean; 千青計畫 (under 35 years old) 
- Talked to Kyuseok about SNU and KAIST 
此次會議從台灣來參加的另有中研院資訊所兩位成員。 
攜回大會論文集。 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：陳良弼 計畫編號：98-2221-E-004-005-MY3 
計畫名稱：合作式個人化推薦系統之進階技術研究及其應用 
量化 
成果項目 
實際已
達成數
（被接
受或已
發表） 
預期總達
成數(含實
際已達成
數) 
本計
畫實
際貢
獻百
分比
單
位
備註（質化說明：如數個計畫共同
成果、成果列為該期刊之封面故
事...等） 
期刊論文 0 0 100%  
研究報告 /技術
報告 0 0 100%  
研討會論文 0 0 100% 
篇
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 7 7 100%  
博士生 2 2 100%  
博士後研究員 1 1 100%  
國
內 
參與計畫人
力 
（本國籍） 
專任助理 0 0 100% 
人
次
 
國
外 論文著作 期刊論文 5 5 100% 篇 [LKA10] C. Y. Lin, J. L. Koh, and A. 
L. P. Chen, ＇＇＇＇＇＇＇＇A 
Better Strategy of Discovering 
Link-Pattern Based Communities by 
Classical Clustering 
Methods,＇＇＇＇＇＇＇＇ the 14th 
Pacific-Asia Conference on 
Knowledge Discovery and Data Mining 
(PAKDD2010) 
[SWC10] H. Z. Su, E. T. Wang, and A. 
L. P. 
Chen, ＇＇＇＇＇＇＇＇Continuous 
Probabilistic Skyline Queries over 
Uncertain Data 
Streams,＇＇＇＇＇＇＇＇ the 21st 
已獲得件數 0 0 100%  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人
力 
（外國籍） 
專任助理 0 0 100% 
人
次
 
其他成果 
(無法以量化表
達之成果如辦理
學術活動、獲得
獎項、重要國際
合作、研究成果
國際影響力及其
他協助產業技術
發展之具體效益
事項等，請以文
字敘述填列。) 
范耀中同學榮獲台灣電機電子工程學會（TIEEE）最佳博士論文優等獎（指導教授：
陳良弼教授) 
蘇映晨同學榮獲中國電機工程學會 99 青年論文獎第三名（指導教授：陳良弼教授)
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人
數 0 
 
 
