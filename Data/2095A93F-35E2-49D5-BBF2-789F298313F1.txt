2. 第 2 個問題中，將相衝突的設計目標對應至 39
個 TRIZ 工程設計參數時，主觀因素的判斷造成
難以系統化、規則化地教導使用者去做歸類的動
作，所以本研究計劃將透過群集分析與決策樹的
手法，發展一套有系統化、規則化的系統，導引
使用者做正確工程參數的歸類抉擇。 
1.4 研究範圍與限制 
由於 TRIZ 理論中的方法有很多種，本文的研究
範圍侷限以衝突矩陣表之手法為基礎，進行步驟流程
的研究，主要是在探討由發現主問題進行到衝突矩陣
表使用之間，至於如何由矩陣表中所得的法則，進而
轉換到各自的解決手法則不在本研究範圍內；本研究
之方法流程主要在針對較難歸類的複雜設計參數而
言，至於其他一些可以輕易經由設計工程師直接判斷
的設計參數，可以不必經由本研究流程得之。 
貳、文獻探討 
2.1 TRIZ 理論方法 
2.1.1 TRIZ 之演進 
TRIZ 的主要意思為解決問題的創新理論，產生距
今已超過五十年之久，是由一個前蘇聯的發明家
Genrich Altshuller 分析超過二十萬個專利其如何解決
創新的問題，根據其中四萬份比較明顯的創新方法，
於 1946 年所提出的 TRIZ 解決創新問題基本概念，現
在世界上從事 TRIZ 研究的相關團體，正不斷地加強
其解決問題過程的完整性（Terninko, 1998； I.R.G, 
1999；Altshuller, 2000）。 
在蘇聯解體之前，關於 TRIZ 方面的研究一直被
蘇聯作為國家機密而隱藏著，所以西方國家知道的人
並不多；隨著時代的演進，蘇聯的解體，許多關於 TRIZ
方面的研究員移居至美國等西方國家，也順便將 TRIZ
之知識引進西方世界，導致 TRIZ 之方法理論的研究
及應用得以迅速蔓延（I.R.G, 1999；Altshuller, 2000）。 
2.1.2 TRIZ 方法論之內涵 
TRIZ 理論的方法工具包含有：衝突矩陣表
(Contradiction Matrix)、四十個創新法則(40 Inventive 
Principles)、物質一場(Substance-Field)方法、有效功能
分 析 (Functional Analysis) 、 分 割 法 則 (Separation 
Principles)、理想化 (Ideal Result)方法、科學效應
(Effects) 、還有 TRIZ 的演算法則 (Algorithm of 
Inventive Problem Solving, ARIZ)等。 
Altshuller 在專利的研究超過 40 年發現到： 
1. 所有工程系統的發展跟屬於那個領域沒有關係。 
2. 工程系統透過消除各種的衝突以發展。 
3. 找到創新問題的解決方法就像消除需求與參數間
的衝突（Altshuller, 2000；王仁慶，2002）。 
2.1.3 TRIZ 之基本步驟 
TRIZ 所提到的方法有很多種，但重要的是它如何
利用其系統化方法幫助設計者從解決工程問題到開發
產品的創新問題的解決方法，結合各方法之步驟而歸
納出 TRIZ 之基本步驟如下（見圖 2.1）（Domb, 1998；
Mazur, 1995； 王仁慶，2002；劉志成，2003）： 
1. 問題描述（Identifying the Problem） 
將開始的主問題拆解成數個可以控制的次問題。 
2. 重新規劃問題（Formulate the Problem） 
重新一項項地敘述矛盾，有可能改善其中一項之
技術參數後，反而造成另一項參數惡化發生。 
3. 衝突矩陣表（Contradiction Matrix） 
Altshuller 分析超過一百五十萬個專利經常遇到
技術衝突的系統特徵（工程設計參數）歸納共有
39 個，將其對應解決的法則整理成 39×39 的方陣
的格式，共有 1263 個元素，藉由衝突矩陣表的查
詢可以幫助找到解決技術矛盾的法則。系統衝突
的問題，即改善系統的某一工程特性時，卻造成
系統另一工程特性的惡化，這裡的步驟流程即是
將技術層面所造成兩者的衝突，且決定在此何者
為改善以及何者為惡化，並分別將其對應至衝突
矩陣表中的改善與惡化工程設計參數，以利矩陣
表之使用。 
4. 找尋類似方法以解決原本問題 
根據衝突矩陣表中所對應的 40 個創新法則，進而
朝法則之建議找尋適當之解決方法。 
所以 TRIZ 的使用必須對於其方法運用抉擇的判
斷特別注意，尤其是對於如何完成目標以及方法工具
的選擇方面。 
2.1.4 衝突矩陣表方法 
本文所研究的即為 TRIZ 眾多方法之一的衝突矩
陣表方法。矛盾與衝突一直是人類長期以來的困擾，
但是它卻是一切創新和發明的泉源；Altshuller 認為解
決衝突就是創新發明的機會，而這也就是 TRIZ 的基
本概念－解決衝突，他分析各種專利所面臨到的問題
與解決問題的手法，發展出由 39 個工程設計參數與
40 個創新法則所構成的解決衝突方法（Mazur, 1995；
王仁慶，2002；劉志成，2003）。 
2.1.4.1  39 個工程設計參數 
TRIZ 衝突矩陣表的使用，主要是透過行列對應的
查詢，找出表中所建議的法則。矩陣表中的行與列分
別由 39 個 TRIZ 參數所組成，代表不同的類別，所有
參數及其解釋分別列之如下：（其中 moving object 是
自行改變位置或受到外力的結果；non-moving object
不會自行或受到外力而改變位置）（Clarke, 1997；王
仁慶，2002；劉志成，2003）： 
1. 移動物體的重量(Weight of moving object)：移動
物體的質量，在萬有引力場是指重量。  
2. 靜止物體的重量(Weight of non-moving object)：
不移動物體的質量，在萬有引力場是指重量。  
3. 移動物體的長度(Length of moving object)：是指
移動物體的一維量測量，如長、寬、高等。  
4. 靜止物體的長度(Length of non-moving object)：
是指不移動物體的一維量測量，如長、寬、高等。 
5. 移動物體的面積(Area of moving object)：是指移
動物體的二維量測量，如面積。  
6. 靜止物體的面積(Area of non-moving object)：是
指不移動物體的二維量測量，如面積。  
7. 移動物體的體積(Volume of moving object)：是指
 2
 29.用氣動或水利的構造   35.物理及化學狀態變換 
  30.彈性膜或薄膜         36.相的轉變 
  31.用多孔材料貴持久     37.熱膨脹 
 32.變顏色               38.加速氧 
 33.同質性               39.隔絕環境 
 34.拋棄及再生零件       40.複合材料 
通常發生衝突是在對系統作工程特性改善時才會
出現，本研究將結合 QFD 以找出設計的改善與惡化。 
2.2 品質機能展開（QFD, Quality Function  
Deployment） 
QFD就是將顧客的輸入情報，轉換為特定的產品
特性和規格，起初主要是用來減少啟動成本(start-up 
cost)，但往後被企業應用在縮短產品開發時間上
(Besterfield, D. H., etal.,1999)。首先將顧客之品質需求
轉換為品質設計要素，接著再被依照品質目的與手段
之步驟個別的細部展開，進而完成品質保證系統，以
確保顧客的需求得到滿足。為達成這個需求，QFD利
用一簡單之表格為主要工具，稱之為品質屋(the House 
of Quality, HOQ)(赤尾洋二，1991；劉錦輝，2002)。 
2.2.1 品質屋之展開 
應用在QFD之工具為品質屋，其架構陳述如下，
可依圖2.2 所示（Besterfield, D. H., etal.,1999；黃玉
青，2002）。 
第一部份為顧客品質需求。將顧客對產品的期望需
求條列出來。 
第二部份為顧客需求給予一優先順序；包括顧客重
要度、目標值。 
第三部份為品質設計要素。包括設計特性、設計限
制以及參數值。 
第四部份為品質設計要素之間的相關性。考量設計
特性間的相似之處或相衝突之處。 
第五部份為顧客需求與品質設計要素之關係矩陣。
可採用符號表示強弱關係。 
第六部份為設計特性給予一優先順序。設計特性的
困難程度、目標值等。 
QFD 是透過「品質屋」來展開顧客對於產品品質
的要求，它是以機能為出發點，將顧客真正要求的品
質藉語言文字的表達予以具體化，並透過顧客的需求
轉換為設計領域的參數以提供設計工程師使用。最主
要的就是『品質要求對設計參數的品質屋』，包含顧
客對於產品的品質要求，以及技術觀點的產品整體系
統規格，為了收集並整理出相互資料的對應關係，其
採取的步驟如下（赤尾洋二，1991；陳慧鴻，2001；
劉錦輝，2002）： 
1. 收集原始資料；可藉由商展、市場滿意度調查、
問卷的設計或直接與顧客面對面溝通等方法瞭解
顧客需求，即是QFD的重要輸入與參考資料。 
2. 將原始資料變換成品質要求，並製作品質要求展
開表；市場調查所得之數據，即顧客的聲音（voice 
of customer, VOC）比較分析之後，轉換成顧客真
正的需要，再經由KJ法（又稱為親和圖法）的分
群，完成品質要求展開表。 
3. 從品質要求中抽出品質設計要素，並製作品質設
計要素展開表；一般稱為工程的聲音（voice of 
engineering, VOE），依據顧客品質要求，考慮組
織內工程、設計或企畫部門，組織內部可以掌握
的資源，提供相關的技術與服務，以達到顧客的
期望；如同品質要求展開的方法一樣。 
4. 製作品質屋，將品質要求與品質設計要素展開表
以矩陣的形式組合成二次元的關係圖，順序如下： 
(1) 將顧客品質要求展開表與品質設計要素展開
表作成矩陣形的圖表。 
(2) 就相關強度記入對應關係以◎表示強相關、○
表示中相關、△表示弱相關，以空白表示沒有相
關記載每一對品質要求與品質要素的關係。 
(3) 品質要素的檢核；將每一品質要求項進行橫向
查看，檢查是否至少有一相關強度與某一個品質
設計要素相對應；如果都沒有，這表示品質要素
抽出不周全，應加以檢討並抽出適當的品質要素。 
5. 調查品質要求的重要度；此重要度的評分準則為
「最重要的項目設為五分，最不重要的設為一
分」，以此五分制來評定。 
6. 從品質要求比重計算品質要素權重；將品質要求
與品質設計要素展開表的矩陣形式關係，依其相
關強度配以權重分數（此處採取：◎表示5、○表
示3、△表示1、以及空白表示0的方式），再乘以
品質要求比重的值，便得到各個關係所代表的權
重；累加各品質要素的權重和，並求取其相對權
重；其計算公式如下： 
∑
=
×=
n
i
ijij RIW
1
         （2.1） 
Wj：第j個品質要素之權重 
I i ：第i個品質要求之權重 
Rij：第I個品質要求與第j個品質要素關係程度 
7. 品質屋之屋頂，兩兩比較所有的品質要素，探討
其相互影響的關係，以符號●代表強烈正相關，
符號○代表正相關，符號╳代表負相關，符號＃
代表強烈負相關。 
8. 設定設計品質由於所計算出的品質設計要素之相
對權重，代表了由顧客觀點所得的品質要素重要
程度，因此可用以找出關鍵的品質要素。 
2.2.2 QFD 與 TRIZ 
由前述的介紹，對於 QFD 的品質屋與 TRIZ 方法
步驟不難發現有異曲同工之處；在品質屋的展開當
中，對於顧客的需求，必須經過二次以上的展開，才
能在品質要求上有詳細且具體化的需求細目產生，然
後將其轉換至相對應的品質設計要素，截至目前為
止，就如同 TRIZ 步驟一的「問題描述」，此步驟中，
主要問題也如同顧客需求一樣必須明確的界定出來。
品質屋之屋頂的相對關係評斷，也可以具體的指出品
質設計要素間的相互關係，若對應至 TRIZ 方法中，
就好比在判定設計目標相互間是否有衝突關係的存
在，故本研究引用 QFD 的方法，以整合 TRIZ 方法中
在找尋改善與惡化方面提供一個比較系統化的步驟。 
所以，本研究先將 TRIZ 的工程參數利用「層級
 4
但是當資料不完整、過於稀疏或是含有雜訊時，
所建立的決策樹通常會過於配合資料，以致於生成的
決策樹會有過適化的原因有兩個，一個是樣本的屬性
過多，決策樹學習法容易選用到和種類不相關的屬
性。另一個原因是偏見，不同演算法在尋找測試屬性
時，都有自己的偏好，所以非常有可能會找到演算法
所偏好，但不是真正和種類相關的屬性，因此決策樹
建構完成後還需要做適當的修剪（Berson, 1997；劉明
德等，2001；鍾碧姮，2003）。 
2.4.2 決策樹修剪 
在決策樹修剪時有二個常見方法： 
1. 預先修剪（pre-pruning）：預先修剪是以提早停
止決策樹生長來達到修剪的目的，當樹停止生長
時，末端節點即成為樹的樹葉。 
2. 事後修剪（post-pruning）：事後修剪是先建立一
個完整的樹，再移除分支的作法，移除分支的依
據是計算該分支的錯誤率，最末端未被移除的分
支節點就變成樹葉。 
目前事後修剪法比較受到歡迎，因為許多學者認
為，預先修剪法需先設定的閥值，難免過於主觀。決
策樹在經過生長和修剪後，就可讀取事例中隱藏的規
律，每個由樹根開始，到某個樹葉節點的路徑，都代
表一條分類規則。（蔡家昌，2002；劉明德等，2001；
Berson, 1997）。 
參、研究方法 
在本研究流程中，從主問題拆解至找出惡化與改
善之步驟，期望運用衝突擷取模型幫助 TRIZ 基本步
驟一進行問題的描述；針對改善與惡化的歸置，本研
究將叢集的方法發展一系統化的歸類決策模型以解決
使用者判斷的主觀性及不確定性。 
本研究之流程架構如圖 3.1，此圖同時也是 TRIZ
之衝突矩陣表的使用流程圖，圖中每一個白色的方框
代表使用者必須執行的步驟，而灰色區塊即為本研究
所欲計劃發展，用來幫助 TRIZ 方法的使用更加完善
的兩模型，其建構過程將在文中詳細介紹。 
3.1 衝突擷取模型 
3.1.1 拆解主問題 
將顧客的品質需求比擬為一設計工程系統的某些
主要問題，透過設計者理想化的思緒將其套用至品質
屋中的顧客品質要求展開表，達到將主問題拆解成更
細部具體的次要問題，經由該領域專家將顧客的要求
項目進行細部描述，再以 KJ 法的幫助予以完成展開。 
KJ 法又稱為親和圖法，是由日本川喜田二郎
（KAWAKITAJIROU）博士於 1953 年時研發出來，
它是把複雜而沒有頭緒觀念或事實，依照其相互間的
親和性加以歸納統合，使相互間的關係明朗化的一種
手法。（劉錦輝，2002）。 
以一釘槍為例，顧客的要求項目與轉換之後的品
質要求如表 3.1，將所有的品質要求，根據其內容或性
質相近者予以集合，接著給予該集合一個名稱，經過
分群過程就可得到第二層級之品質要求如圖 3.2。同樣
的步驟即可獲得第一層級的品質要求，如表 3.2 所示。 
此時在表 3.2 中，品質要求展開表中的第三層，
即為工程師將顧客之要求項目轉換而成，而這個「轉
述」的動作，在 TRIZ 的應用上，就像是使用者必須
將原本不明顯或是難以掌握的系統問題，一一考量其
可能發生的各種情況、限制，也就是將系統主要的問
題進行拆解，由較模糊的問題轉而成為較為具體的細
部問題。但是當有些問題無法直接著手進行解決時，
通常會考慮從其他方面進行，或是思考是否有易於進
行又可以解決或取代原本問題的另一種設計，而這就
是在圖2.1中TRIZ解決問題步驟的第二步—重新規劃
問題。 
3.1.2 重新定義問題 
設計要素是用來達成顧客品質要求的要徑；如
TRIZ 基本步驟二－重新規劃問題，將其原本的主要問
題以另外一種型態呈現，就好比 QFD 中此轉換顧客品
質要求至品質設計要素的動作一樣。在這一階段的展
開步驟與品質要求展開的方法相同，針對每一個品質
要求，予以分析探討，運用 KJ 法分群歸納，即可得
到與品質要求展開表相對應的品質設計要素展開表。 
對 TRIZ 而言，重新定義之後的問題陳述，可能
即可完成主要問題的解決；但是，有時卻可能存在相
互衝突的關係，若是在有許多的問題陳述時，更難找
出到底是哪一個與哪一個造成衝突，而 TRIZ 衝突矩
陣表就是專門克服這種在技術上衝突的難題。 
經由本研究將 TRIZ 衝突矩陣表上下矩陣之相同
度計算，也就是將「改善」與「惡化」的設計要素相
互對調時（改善的設計要素變成惡化的設計要素；惡
化的設計要素變成改善的設計要素）時，其大約只有
60％的相同機會，所以找出「改善」與「惡化」的設
計要素實有其必要性。 
3.1.3 找出技術衝突 
找出改善與惡化的設計要素，是 TRIZ 方法中使
用衝突矩陣表的必要條件，所以在此可分為兩小步驟
以找出改善與惡化的設計要素。 
1. 利用品質屋中顧客要求與品質要素關係矩陣，透
過矩陣的運算，可以計算出各品質設計要素對於
顧客需求的重要程度；本研究中之品質屋屋頂，
不管強弱，只要是正相關都以符號「○」顯示，
而負相關則以符號「╳」顯示，所以兩品質要素
若是負相關（╳），則表示有相衝突，之後再加
上品質要素之優先程度，即可判斷設計要素間何
者可作為改善方面，何者可作為惡化方面。 
2. 接著，必須再找出品質要求的重要度，也就是需
求的重要度；分數依重要度的強弱由高到低為 5
至 1 分，在本研究中，只著重在需求上的強弱。
接著利用相關矩陣，分析品質要求與品質設計要
素之間的關係，運用公式（2.1）即可求得品質設
計要素之重要度，再搭配品質屋之屋頂，找尋顯
示為負相關符號的兩設計要素，然後依重要度較
高者代表顧客的需求度較高，即列為改善的設計
目標；反之，較低者就列為惡化的設計目標。例
如下列圖 3.3 之品質屋中，第 1 項品質設計要素
與第 2 項品質設計要素相衝突，而顧客品質要求
 6
兩者，則以「是否為移動物體」來作為區隔。在聚類
的情形，不單只會有 2 個的相聚，同時還可能具有 3
個參數相同相似度的情況發生；經由分析所得的結
果，將會成為建構分類決策樹中的分類節點的判斷式。 
3.2.5 建立分類決策樹 
分析所得的分類規則，即是作為分類決策樹最重
要的規則，稱之為節點，每一個設計要素經過這層層
節點中的問題，就可有系統且規則化地被歸納至最後
末端節點的 TRIZ 工程設計參數。 
透過本研究之分類決策樹，只要進入分類決策
樹，隨著回答各節點中的問題，即使不熟悉 TRIZ 也
即可得到分類結果；節點問題設計的優劣決定分類樹
的好壞，因此需要之前完善的屬性分析結果來達成。 
在分類決策樹建立的同時，原本考慮因相似係數
接近而聚集的樹狀結構，在分類決策樹建構之後則不
再考慮其相似的程度，只單純考慮 39 個 TRIZ 工程設
計參數間如何階層式的聚集，例如只考慮第 1 個工程
設計參數與第 2 個工程設計參數合併，但不再關心其
合併的相似程度，其分類決策樹結構如圖 3.6 所示。 
3.2.6 決策模型的驗證 
本研究將運用歷史資料去驗證其正確性，並改善
分類決策樹中的規則，使此模型分類失誤率降至最低。 
案例一：飲料鐵罐 
飲料鐵罐是現代人使用量非常大的生活用品，若
企業欲減少每一鐵罐的材料使用量，以降低製造成本
及環境的負擔；經工程師將問題重新定義分析後，為
達成目的必須減少用料以將容器瓶壁的厚度縮減，一
旦容器瓶壁厚度縮減，則在存貨堆疊時可以承受的重
量就會減弱，此一技術衝突隨即發生，此例中欲改善
及會惡化的情況都很明顯，分別為下列(Mazur, 1995)： 
    改善：將容器瓶壁的厚度縮減 
惡化：承受的重量就會減弱 
若將此「改善」與「惡化」的情況，分別投入圖
3.6之分類決策樹中，則根據決策樹中每一個節點問答
情形，其問答過程分別如下： 
改善方面 
1. 問：與精準度有關？               答：否 
2. 問：會造成有害的影響？           答：否 
3. 問：有關系統哪些方面？           答：其他 
4. 問：有關系統構件哪些方面？       答：其他 
5. 問：會造成系統變化？             答：否 
6. 問：與光能源相關？               答：否 
7. 問：與壓力、應力相關？           答：否 
8. 問：有熱量（溫度）變化？         答：否 
9. 問：無人化程度？                 答：否 
10. 問：與運作方式、效率相關？       答：否 
11. 問：維度特徵？                   答：一維 
12. 問：移動物體？                   答：否 
13. 分類葉部節點            (4)靜止物體之長度 
惡化方面 
1. 問：與精準度有關？               答：否 
2. 問：會造成有害的影響？           答：否 
3. 問：有關系統哪些方面？           答：其他 
4. 問：有關系統構件哪些方面？       答：其他 
5. 問：會造成系統變化？             答：否 
6. 問：與光能源相關？               答：否 
7. 問：與壓力、應力相關？           答：是 
8. 分類葉部節點                (11)張力、壓力 
經過回答分類決策樹所得之結果，「改善」歸類
至39個TRIZ工程參數中的第4個參數；「惡化」則歸
類至第11個參數，此輸出的結果與案例中所歸類的工
程設計參數結果一致（Mazur,1995）。 
案例二：蒸發式冷氣機 
詮旭冷氣機是利用紡織材料科技，製造出特殊吸
濕材料作為冷卻用的媒介，將熱交換器表面散熱片附
加吸濕材料，再給予少量的水(免用冷卻水塔)，利用
水的潛熱變化，瞬間帶出大量的熱。經工程師將主要
系統問題重新分析定義，確認冷氣機最需要改善的環
境效率特性為用電量，也就是說，能提昇「熱交換器
的效率」即可改善用電量；另一方面，若加入水作為
冷卻的介質可改善熱交換的效率，卻可能造成水資源
的浪費。此例中欲改善及會惡化的情況，分別為下列： 
改善：改善熱交換的效率 
惡化：水資源的浪費 
若將此「改善」與「惡化」的情況分別投入圖3.6
之分類決策樹中，則根據決策樹中每一個節點進行問
答，其問答過程如同案例一，最終之歸類結果對應至
39個TRIZ工程設計參數如下： 
改善：(17) 溫度 
惡化：(23) 物質的浪費 
所得結果，「改善」歸類至第 17 個 TRIZ 工程參
數；「惡化」則歸類至第 23 個參數，此結果與案例中
所歸類的工程設計參數結果也一致（劉志成，2003）。 
經本研究歸納決策模型的分類之後，可正確地找
到對應的 TRIZ 工程設計參數，接著，利用 TRIZ 的衝
突矩陣表查詢，找出由 TRIZ 發展出來的 40 個創新法
則，最後設計工程師必須根據其所建議之法則方向，
轉換為自己的解決方法以解決本身的問題；但是如何
將 TRIZ 所建議之法則轉換至獨自的問題本身，此階
段涉及到每個設計者獨特的見解，創造出不同的創新
設計，礙於研究時間的限制，無法在這次的研究範圍
之內，因此在本研究方法中並未加以詳細說明之。 
肆、實例驗證 
4.1 衝突擷取模型 
本章節將實際套用一吸塵器改良案例，實際操作
整合研究流程，以證明其功效。 
4.1.1 拆解主問題 
經由市場調查、顧客回應主要問題的描述都是比
較模糊的，而且並不能夠命中核心，必須透過專家集
中發想，把顧客要求項目經過轉換成為品質要求，成
為最終品質要求展開表。經過市場及問卷的調查所得
到的結果，整個系統欲改善的目標可分為兩大方向，
如圖 4.2 所示。 
在得到相對於要求項目的系統之主要問題，經過
原本 QFD 中之 KJ 法分群之後，在品質要求展開之後
 8
但是最多只須回答 13 次問題，即可得到歸類結果，比
起沒有本分類決策樹之前的 39 次，只有 1/3 的份量，
所以可以幫助使用者省下 2/3 的問答次數及時間。 
4.3.2 以一致性為基礎 
除了時間與次數的節省之外，本節將從分類決策
樹所判斷的結果來著手。找尋 10 個不熟悉 TRIZ 參數
受試者，針對 3.2.6 節案例二中的「改善」與「惡化」
設計目標，將其分別對應至 39 個 TRIZ 工程設計參數
之其中一個，比較分類決策樹使用前後與案例二已知
的專家判斷結果之差異，所有測試結果如表 4.1 所示。 
未用分類決策樹時，每個受試者主觀歸類之 TRIZ
工程設計參數都不一樣，一致性不高，且在判斷過程
當中，由於不熟悉的緣故，所以必須一一比對，以找
出相近的答案，甚至有遇到兩者難以取捨的情形發生。 
使用分類決策樹時，受試者可快速回答樹中節點
的問題，表 4.1 中所示，大部分受試者得到的節點答
案一致性頗高，在「改善」設計目標上，幾乎都歸類
至第 17 個 TRIZ 參數（溫度）；在「惡化」設計目標
上，則幾乎都歸類在第 23 個 TRIZ 參數（物質的浪費）。 
由表 4.1 可知，透過本研究建構之分類決策樹的
幫助，對於 39 個 TRIZ 工程設計參數不熟悉的情況之
下，所有受試者的歸類結果，在「改善」與「惡化」
的對應上都蠻一致的，與案例二之結果相比較，雖不
能百分之百相同，但是與專家所歸類的結果相較之
下，相似度可達 70﹪，所以不管使用者對於 39 個 TRIZ
工程設計參數是否有一定程度上的認識，透過本研究
建立之分類決策樹的協助，所得到的結果也可以與專
家所歸類的結果相近達七成。 
伍、結論與建議 
5.1 本研究之貢獻 
本研究針對 TRIZ 之衝突矩陣表的使用上，進行
其方法本身的改善，綜合本研究可以得到的貢獻有下
列幾項： 
1. 品質屋「屋頂」的運用，可幫助 TRIZ 使用者明
確地搜尋出哪些設計要素互為衝突，進而依據重
新定義的品質設計要素之權重，判斷誰為「改善」
與誰為「惡化」設計要素。 
2. 本研究中之分類決策樹，在將「改善」與「惡化」
設計要素歸類至 39 個 TRIZ 工程參數時，可以客
觀、系統化地取代人為主觀的判斷；也可讓對於
TRIZ 參數陌生的使用者順利找出參數，以避免在
使用 TRIZ 上經驗不足造成在歸類時的錯誤。 
3. 在建立本研究中之分類決策樹的同時，也將 39
個 TRIZ 工程設計參數之各個特徵屬性作一統
整，比較出其間之相似性，區分兩者間之不同處，
提供再進一步分類時的參考。 
5.2 研究結果與討論 
本研究針對 TRIZ 使用方法上的缺失作一改良，
分別建立兩模型為「衝突擷取模型」與「歸類決策模
型」。但是在建構過程中，有一些地方可分為下列幾點
來討論。 
1. 衝突擷取模型主要是幫助設計工程師，從眾多的
設計目標當中，找出相互衝突的設計目標，以及
界定「改善」與「惡化」，透過 QFD 手法幫助
TRIZ 拆解問題，進而重新定義問題，但是利用
QFD 展開品質要求的方法針對 TRIZ 問題時，並
不是考慮的很周全，所以會有部分層面的問題無
法被發覺出來，進行轉換至品質設計要素時，必
須由專家判斷，所以一旦專家的判斷錯誤或考慮
不周，則所轉換的品質設計要素也隨之不周全。 
2. 在界定設計目標間之「改善」與「惡化」時，本
研究利用品質要求與設計要素間之關係，計算設
計要素的權重，重要度愈大就代表需求度欲高，
就當作「改善」，反之就為「惡化」，但是實際
上在企業界中，考慮到成本與利潤的關係，可能
會有原本應該作為「改善」的設計要素，卻變成
是作為「惡化」的設計要素之情形產生。 
3. 透過實際例子的驗證，可確定分類決策樹的正確
性，但是由於 39 個 TRIZ 工程設計參數是根據數
萬個專利所歸納的結果，參數之間相似性其實是
小之又小，而且又是屬於類別型資料，所以進行
群集時，必須藉用其他衡量的方法加以評斷，以
作為群集的依據，例如在本研究中是以特徵作為
指標，所以在評斷方法的選取上就須特別注意，
因為所選取的方法不同所造成的群集結果也會
有所不同，進而影響分類決策樹的正確性。 
4. 在分類決策樹的部分，由於本研究是根據 TRIZ
原本之 39 個工程設計參數所建構的，但是隨著
TRIZ 團隊的研究發展，原本的 39 個工程參數已
不夠使用，導致有些設計目標無法很準確地被歸
類至 TRIZ 參數。 
5. 第 4 章實例驗證的部分，本研究以吸塵器為例，
恰有一個已經經過專家解決的實例，由 Baessler
在 2002 年著作中提出，在實例中顯示，經過歸
類的結果將第 1 項品質設計要素（吸嘴面積），
歸類在第 5 個 TRIZ 工程設計參數，與本研究的
歸類結果相同；而第 2 項品質設計要素（吸力），
歸類在第 11 個 TRIZ 參數，與本研究結果亦相
同，但在界定「改善」與「惡化」時的認知卻不
同，由圖 4.3 中得知，顧客的需求是以清潔力強
為主要訴求，而所有的設計要素中，與此訴求最
有關係的為品質要素中第 2 項，其重要度為 81
分也是最高，同時它與重要度為 42 的第 1 項品
質設計要素相衝突，所以理當應以第 2 項品質設
計要素為「改善」才是，但是實例中，卻以第 1
項品質設計要素為改善，導致此原因可能是因為
在業界中，欲改善吸力的強弱遠比改善吸嘴面積
難多了，故不以第 2 項設計要素為改善，而這也
是本研究中所欲避免的人為主觀影響。 
5.3 未來建議 
此外，針對本研究所提出之方法，吾認為以下幾
點可以做進一步的探討與研究，使未來在此領域之研
究能更為完整。 
1. 在群集屬性分析時，本研究發展一套以特徵屬性
 10
問 題 描 述
重 新 規 劃 問 題
T R IZ  解 答
問 題 的 解 答
3 9個 工 程 設 計 參 數
衝 突 矩 陣 表
4 0個 創 新 法 則
歸類決策模型
衝突擷取模型
開 始
拆解主問題
重新定義問題
主問題
產生眾多次要問題
找出技術衝突
工程技術上的設計要素
對應至 TRIZ中
39個工程參數
改善與惡化的設計要素
利用 TRIZ衝突矩陣表
查詢 40個法則
改善與惡化分別對應到的 39個參數
轉換為自己
的解決方法
問題的解決方向
結 束
獨自的解決方法
此階段非在本次研究範圍內
圖 2.1 TRIZ 解決問題的步驟 
表 2.1  TRIZ 衝突矩陣表（部分） 
   惡化參數 
getting worse
 
 
改善參數 
feature to be 
change 1.移
動
物
體
的
重
量
 
2.靜
止
物
體
的
重
量
 
… 
21
.功
率
 …
39
.生
產
力
 
1.移動物體的重量     35,3,24,37
2.靜止物體的重量     1,28,15,35…
       
9.速度    19,35, 38,2   …
       
39.生產力 35,26, 24,37 
28,27, 
15,3     
資料來源：王仁慶，2002。 
 
具有快拆功能
螺絲固定規格少
裝釘容易
拆裝容易
重量適中
大小適中
攜帶方便
拆裝容易
易維修
力道足
擊發順暢
拆裝容易
保險行程大小
保險機構微調
吸振效果好
符合安全法規
具有消音功能
低噪音
吸振效果好
振動小
4
工程特性
間之相關分析
顧客需求─品質要素
關係矩陣
5
顧客需求
( 顧客心聲
) 
1
工程品質要素之優先順序  6
顧客需求之優先順序
2
工程品質要素 (組織之心聲 )3
 圖 2.2  品質屋 
資料來源：Besterfield, D. H., et al. ,1999 
表 3.1 要求項目-品質要求轉換表 
要求項目 品質要求 
容易裝卸 螺絲固定規格少 
 具有快拆功能 
 裝釘容易 
操作簡便 攜帶方便 
 大小適中 
 重量適中 
打釘順暢 力道足 
 擊發順暢 
容易保養 易維修 
符合法規 保險行程大小 
 吸振效果好 
 保險機構微調 
 具有消音功能 
圖 3.1 研究流程架構 
 
 
 
 
 
 
 
圖 3.2 品質要求分群圖（第二層） 
表 3.2 品質要求展開表 
第 一 層 第 二 層 第 三 層 
螺絲固定規格少 
具有快拆功能 拆裝容易 
裝訂容易 
攜帶方便 
重量適中 使用方
大小適中 操作容易 
易維修 
力道足 
面
打釘容易 擊發順暢 
保險行程大小 保險裝置 保險機構微調 
振動小 吸振效果好 安全方面
低噪音 能 具有消音功
 12
表 3.4  特徵屬性與 TRIZ 工 矩陣表
1 
程設計參數  
                   工程參數 
特徵 2
 3 4 5 6 7 9 8 10
 
11
 
1 2
 
1 3
 
14
 
1 5
 
1 6
 
1 7
 
18
 
19
 
2 0
 
21
 
22
 
23
 
24
 
2 5
 
26
 
27
 
28
 9 2 3 0
 
3 3 31
 2 3 4 3 3 5
 
36
 
37
 
38
 
39
 
變化 1  1 1 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1  1 0 0
不可變化 0 1 0 1  0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0
位置 1 1 1 1 1 1 1 1 0 0 0 0 0  0  0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 0  0 0  0 0 0 0 0 0
內在本身 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
外在環境 1 1 1 1 1 1 1 1 0 0 0 1 0 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0
重力（地心引力） 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
防止掉落 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
線性尺寸（長、寬、高） 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
面積尺寸（平方） 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
任一（部分）平面 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
體積尺寸（立方） 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
速度 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
動作(過程)、作業、功能 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 1
執行、完工 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1
時間、期間 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1
預期地、預測的 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
外力 1 1 1 1 1 1 1 1 0 0 1 1 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
交互作用 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 1 0
狀態上（系統、物體） 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
基本單位 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0張力 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
輪廓 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
表面 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
完整性 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
承受、負荷 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
抵抗 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
破壞 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
能力 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0
長度 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
成功（正常）的狀態下 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
熱量（增加或流失） 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
光能 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
光的特性 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
需求、必須性、需要 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
能源 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
創造 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
無貢獻（產出） 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
損失、喪失 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0
實體物質、元件 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0資料 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
增加 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
數量或次數 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 1
多樣性、多方面、相異性 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0
近似程度 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0
測量值 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
實際值 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0
設計規格 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
影響 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0
效能降低 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0
簡易性 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0
製造 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0
修補錯誤 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0
反應、回應 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0
難度 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0
測量 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
監控 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
容忍誤差 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
無人狀態下 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
總計 8 8 8 8 8 8 7 7 4 3 5 4 6 8 10
1
0 7 4
1
0
1
0 5 3 3 3 5 3 6 3 4 6 6 2 2 2 4 5 7 5 5
 14
