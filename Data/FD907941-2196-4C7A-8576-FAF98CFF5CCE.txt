Table 1: Applications in Grids
Type Characteristics Example
Distributed The Grids aggregate substantial Distributed interactive
computational resources to deal simulation [6]
with problems that cannot be
solved on a single system.
High-throughput The Grids attempts to maximize 3D dynamic analysis [1]
computing the number of jobs completed on
a daily or longer period of time,
and to prevent idle workstations.
On-demand The Grid attempts to deal with Trading services [42]
computing short-term requirements for resources
that are insufficient to be computed
locally.
Data-intensive The goal of Grids is to solve the data Remote access [10]
computing that is maintained in geographically
distributed storage.
Collaborative The applications that uses Grid capability Collaborative design [15]
computing to enhance terms work interactions
in distributed environment.
Table 2: Comparisons of Grid and P2P
Characteristics Grid P2P
Equipment High-end computers Desktop computers
User Trusted users Anonymous users
Scale Small size Large scale
Resource management Centralized or hierarchical Distributed
Network topology High speed dedicated network Internet TCP connections
Application areas Large scale data analysis and File sharing and video streaming
simulations such as SURFnet, such as Skype, Napster,
TerraGrid and National Grid eMule and eDonkey
Table 3: Comparison of three methods in Peer-to-Peer Grids
Characteristics Structured P2P Unstructured P2P Hybrid methods
Scalability Yes No Middle
Robustness Lower High Middle
Periodic update Yes No Uncertain
Information type Static Dynamic Uncertain
2
Table 4: List of used notations
Ri The identity of service requester i.
Pj The identity of service provider j.
Bk The identity of billboard k.
DSc The identity of data source center c.
(G, g, p) An element g of large prime order p in a finite cyclic group G
(PKi, RKi) A public key and private key of node i,
where PKi = Yi = gxi ∈ G and RKi = xi ∈ Zp.
Kji The static shared key between node i and node j,
where Kji = Y
xi
j = g
xixj = Y xji = K
i
j .
SKji The dynamic session-key shared between node i and node j.
tag# A unique tag number for a job advert.
XMLJob The XML documents, which are the descriptions of a job and the
sources of a job’s computational data.
Jobni The number of sub-jobs in a job advert, which requester i attaches,
where n = 1, 2, · · · , n.
JrRi One-time signature key of Ri in the rth sub-job.
H(.) A collision-free and public one-way hash function.
Ti A timestamp, which node i attaches.
A||B Concatenation of message A and B.
ESK [.] The symmetric encryption function with session key SK.
DSK [.] The symmetric decryption function with session key SK.
EPKi{.} The asymmetric encryption function with node i’s public keyPKi.
DRKi{.} The asymmetric decryption function with node i’s private key RKi.
Table 5: Assumptions
A-1 The links between connected nodes are bidirectional and the mapping between
the node i identifier IDi and its corresponding public key is clear to every node
that participates in super-peer networks.
A-2 The static shared key Kji is protected by node i and node j and the node never
shares its private key with anyone others for securing all future authentications.
A-3 The links between two billboard entities are secure and all the billboard nodes
and data source centers involved are trusted and non-compromised which are all
common to all grid computing protocols.
A-4 An attacker may unobtrusively eavesdrop, modify or re-send messages into the
wireless channel between two communication nodes in P2P grids. However,
we assume that the proposed protocol does not provide a mechanism against a
denial-of-sevice (DOS) attack. In this attack, an attacker can simply disrupt,
subvert, or destroy a network; this kind of attack is common to all protocols
in grid computing and the attack can be detected by enabling the network with
an intruder detection system (IDS). This issue is out of range of this paper and
we refer readers to [18, 34] for more countermeasures on this attack.
4
puting from DSi. To initiate a data download session,
Pj first initiates a data download procedure to download
required data file by performing the following operations.
Step (4) Pj creates a data download message MFD
as MFD = (tag#||XMLJob|| Ri||Pj ||TPj )||M2 and
sends EKDScPj
[(MFD,M2)] to the data source cen-
ter DSc, where M2 = ERKPj {H(tag#||XMLjob
||Ri||Pj ||TPj )} is a signature on MFD and KDScPj =
Y
xj
DSc
= gxjxc = Y xcPj = K
Pj
DSc
is the static shared key
between Pj and DSc.
Step (5) On receiving the data download message
from Pj , DSc reveals (MFD,M2) by computing
D
K
Pj
DSc
[EKDScPj
[(MFD,M2)]]. Then, DSc checks the
legitimacy of TPj ’s format. If it proves to be real,
DSc checks if (TDSc − TPj ) ≥ ∆TP or not. If it
holds, DSc drops the data download message; oth-
erwise, DSc deals with this message according to
following steps. First, according to the detailed
description of XMLjob, DSc prepares the related
data file DATAPj for Pj to job execution. Next,
DSc makes a data transmission message MDT as
MDT = (tag#||Pj ||DSc||DATAPj ||TDSc) and sends
E
K
Pj
DSc
[MDT ] to Pj . On receiving the data transmis-
sion message from DSc, Pj reveals MDT by comput-
ing DKDScPj
[EKDScPj
[MDT ]]. Upon revealing the data
file, Pj executes the job and the result of each sub-job
is reported to Ri.
2.1.4 Job Billing Phase
When the results of n pieces of sub-jobs are reported, in
the rth round of job billing phase, Pj reports the result of
rth sub-jobResultrRi toRi, andRi will send the rth round
one-time signature key JrRi to Pj , where r = 1, 2, ..., n.
After the bills of n pieces of sub-jobs are collected, Pj
bills Ri for job execution. Later, Pj shows ∆Ri =
ERKRi{J0Ri ||TRi} and the last hash-chain value JnRi is col-
lected. Ri verifies the validity of ∆Ri and computes the
hash-chain value JnRi ’ as J
n
Ri
’ = H(...H(H︸ ︷︷ ︸
n times
(J0Ri ||TRi))...).
Ri compares JnRi ’ with J
n
Ri
to decide whether or not to
accept this bill. In order to secure the communication
data between Pj and Ri, the proposed SBPSP scheme
introduces a session-key establishment mechanism for en-
suring data integrity during the job billing phase. There-
fore, Pj and Ri compute the common session-key SKRiPj
as SKRiPj = A
b = gab = Ba = SKPjRi (modp). The details
of SBPSP are briefly described as follows.
Step (6) In the first round, Pj creates a
job billing message MJB as MJB =
(tag#||Pj ||Ri||∆Ri ||Result1Ri ||TPj ) and sends
E
SK
Ri
Pj
[MJB ] to Ri.
Step (7) On receiving the job billing message from Pj ,
Ri reveals MJB by computing DSKPjRi
[E
SK
Ri
Pj
[MJB ]].
When the result of the first round sub-job is re-
ceived, Ri replies one-time signature key J1Ri to
Pj and sends ESKPjRi
[(tag#||Ri||Pj ||J1Ri ||TRi)] to Pj .
On receiving E
SK
Pj
Ri
[(tag#||Ri||Pj ||J1Ri ||TRi)] from
Ri, Pj reveals (tag#||Ri||Pj ||J1Ri ||TRi) by computing
D
SK
Ri
Pj
[E
SK
Pj
Ri
[(tag#||Ri||Pj ||J1Ri ||TRi)]] and verifies
the validity of J1Ri by computing H(J
1
Ri
) ?= J
0
Ri
. If it
holds, the one-time signature key J1Ri is legitimate;
otherwise, stop.
Step (8) In the rth round, r = 2, ..., n − 1, Pj sends
E
SK
Ri
Pj
[(tag#||Pj ||Ri||ResultrRi ||TPj )] to Ri and Ri
replies E
SK
Pj
Ri
[(tag#||Ri||Pj ||JrRi ||TRi)] to Pj . Then,
Pj verifies H(JrRi)
?
= J
r−1
Ri
to see if the one-time sig-
nature key JrRi is authentic.
Step (9) In the last nth round, Pj sends
E
SK
Ri
Pj
[(tag#||Pj ||Ri||ResultnRi ||TPj )] to Ri and
Ri replies ESKPjRi
[(tag#||Ri||Pj ||MKRi ||TRi)] to Pj ,
where MKRi is the master key. Then, Pj computes
JnRi = H(MKRi ||TRi) and verifies H(JnRi) ?= Jn−1Ri
to determine if the one-time signature key JnRi is
authentic. After receiving JnRi , Pj sends the bills
(JnRi ,∆Ri) to Ri for charge at a later time.
3 Discussion and Analysis
In this section, we analyze the essential requirements and
the security of our proposed SBPSP. Moreover, we list the
results of involved phases of SBPSP in terms of compu-
tational complexity. The details of the above-mentioned
analyzes are briefly described in the following subsections.
3.1 Security Analysis
In this subsection, we provide proof of the correctness of
SBPSP and evaluate its security with respect to its ro-
bustness in the presence of attacks. As mentioned earlier,
the proposed SBPSP does not consider DoS attacks and
all billboard nodes and data source centers involved are
trusted and non-compromised which are common though
to all grid computing protocols and SBPSP should satisfy
the following security requirements.
Theorem 1. SBPSP is secured against passive and active
attacks and maintains the data integrity of the nodes that
participate in a job submission over super-peer networks;
including the billboard, billboard cachers, data source cen-
ter, service requester, and service provider.
Proof. During job assignment phase, the service requester
Ri sends a job assignment message to its super-peer node,
and the message is encrypted with a static secret key
6
to obtain Pj ’s contribution gb. However, Eve cannot de-
rive the common session key SKPjRi = g
ab because to do
this is as difficult as solving the Diffie-Hellman problem
[13]; a compromised long-lived shared key cannot derive
the session keys used previously and thus our proposed
SBPSP provides perfect forward secrecy.
3.2 Performance Analyses
In this subsection, the computational overhead of the pro-
posed SBPSP protocol is analyzed. We briefly analyze the
computational overhead of involved phases of our pro-
posed SBPSP in Table 6. To evaluate performance, we
define several computational parameters as follows:
• TEXP denotes the time required by the modular ex-
ponentiation.
• TH denotes the time required by the hashing opera-
tion.
• TSYM denotes the time required by the symmetric
encryption/decryption operation.
• TASYM denotes the time required by the asymmetric
encryption/decryption operation.
With bandwidth consumption, except for the job as-
signment phase, SBPSP must transfer the one-time sig-
nature for every round of job billing phase, with the size
of a hash-chain value. This is much lighter than the size
of traditional digital signatures. For instance, RSA re-
quires 1024 bits for each digital signature, whereas SHA-
1 requires 192 bits for each hashed value. As for mem-
ory consumption, SBPSP requires the service requester
to prepare a block of memory to store the list of one-
time signature keys. For example, if SHA-1 is used and
n = 100, then a service provider will need 100 x 160 =
16,000 bits = 2,000 bytes of memory to store the one-
time signature keys, where n is the number of sub-jobs
in a job advert. However, if the memory space is a lack
of service requester, it can utilize the substitute method
[39] instead of keeping track of all the hash-chain values.
This method requires additional computation operations,
but it can reduce the memory consumption. As a result,
SBPSP requires much less bandwidth and memory than
traditional signature protocols and makes SBPSP quite
applicable to P2P-based grid computing networks.
From Table 6 shows that in our proposed SBPSP, the
computational loads of the service requester and the ser-
vice provider are almost equal. Furthermore, the bill-
board nodes are responsible for maintaining fundamen-
tal activities in their corresponding super-peer networks.
Thus, the computational operations that are performed
by them should be lightweight as far as possible to cope
with the real circumstances of P2P grid computing envi-
ronments. Additionally, the most time-consuming oper-
ations are public-key encryption/encryption TASYM and
we can adopt a lightweight public encryption/decryption
algorithm to perform those operations. For instance, El-
Gamal computation [14] can be applied to our SBPSP.
It is different from the RSA computation [41] because
its security depends on the amount of difficulty faced to
solve discrete logarithm problems, as opposed to factoring
problems. In ElGamal encryption, a sender A computes
X1 = gr and X2 = M ⊕ H(Y r) and sends (X1, X2) to
a receiver B, where r is a random number, (x, Y = gx)
is B’s private/public key, H(.) is a hash function and
M is a plain-text. Afterwards, a receiver B reveals the
plain-text M by computing M = X2⊕H(Xx1 ). From the
above computations, encryption TASYMEn and decryp-
tion TASYMDe can be roughly estimated as the following,
TASYMEn = 2TEXP + TH and TASYMDe = TEXP + TH ,
respectively.
On the other hand, elliptic curve cryptography (ECC)
[23, 37] is widely being adopted to provide public key
cryptography (PKC) support in resource-constrained en-
vironments so that the existing PKC-based solutions can
be exploited. As a result, we can adopt ECC-based public
key cryptography operations in grid computing applica-
tions and we believe that the performance of our proposed
SBPSP protocol is acceptable for participant nodes and
can be practically applied over super-peer environments.
4 Conclusions
In this project, we have proposed a secure communica-
tion system for charging-related affairs in grid computing
(which is called SBPSP). When a research center, com-
pany, or industry lacks sufficient resources to perform the
job in terms of software or hardware, there must be a
proper protocol that can account for demand so that their
job can be completed. Building on the original super-peer
job submission protocol, we submit our billing protocol.
It can ensure the correct charging and results in minimal
computational increase and storage load decrease. Addi-
tionally, our new method not only is easy to apply but
also is compatible with various communication systems.
References
[1] J. M. Alonso, V. Hernandez, and G. Molto. A high-
throughput application for the dynamic analysis of
structures on a grid environment. Advances in Engi-
neering Software, 39(10):839–848, 2008.
[2] Nazareno Andrade, Francisco Brasileiro, Walfredo
Cirne, and Miranda Mowbray. Automatic grid as-
sembly by promoting collaboration in peer-to-peer
grids. Journal of Parallel and Distributed Comput-
ing, 67(8):957–966, 2007.
[3] A. Andrzejak and Z. Xu. Scalable, efficient range
queries for grid information services. In The Second
International Conference on Peer-to-Peer Comput-
ing, pages 33–40, 2002.
8
[27] Chun-Ta Li. An Enhanced Remote User Authenti-
cation Scheme Providing Mutual Authentication and
Key Agreement with Smart Cards. In 5th Interna-
tional Conference on Information Assurance and Se-
curity, IEEE CS, pages 517–520, 2009.
[28] Chun-Ta Li and Min-Shiang Hwang. An online
biometrics-based secret sharing scheme for multi-
party cryptosystem using smart cards. International
Journal of Innovative Computing, Information and
Control, article in press, 2009.
[29] Chun-Ta Li. An efficient and secure communication
scheme for trusted computing environments. Journal
of Computers, 20(3):17–24, 2009.
[30] Chun-Ta Li and Min-Shiang Hwang. An efficient
biometrics-based remote user authentication scheme
using smart cards. Journal of Network and Computer
Applications, 33(1):1–5, 2010.
[31] Chun-Ta Li, Cheng-Chi Lee and Lian-Jun Wang. A
Two-Factor User Authentication Scheme Providing
Mutual Authentication and Key Agreement over In-
secure Channels. Journal of Information Assurance
and Security, 5(1):201-208, 2010.
[32] Chun-Ta Li and Min-Shiang Hwang. A Batch Veri-
fying and Detecting the Illegal Signatures. Interna-
tional Journal of Innovative Computing, Information
and Control, article in press, 2010.
[33] Chun-Ta Li, Cheng-Chi Lee and Lian-Jun Wang.
On the Security Enhancement of An Efficient and
Secure Event Signature Protocol for P2P MMOGs.
In The 2010 International Conference on Computa-
tional Science and Its Applications, pages 599-609,
Lecture Notes in Computer Science, Vol. 6016, 2010.
[34] Kejie Lu, Dapeng Wu, Jieyan Fan, Sinisa Todorovic,
and Antonio Nucci. Robust and efficient detection
of DDoS attacks for large-scale Internet. Computer
Networks, 51(18):5036–5056, 2007.
[35] Carlo Mastroianni, Domenico Talia, and Oreste
Verta. A super-peer model for resource discovery
services in large-scale grids. Future Generation Com-
puter Systems, 21(8):1235–1248, 2005.
[36] Carlo Mastroiannia, Pasquale Cozzab, Domenico
Taliab, Ian Kelleyc, and Ian Taylorc. A scal-
able super-peer approach for public scientific com-
putation. Future Generation Computer Systems,
25(3):213–223, 2009.
[37] Victor S. Miller. Use of elliptic curves in cryptog-
raphy. In Advances in Cryptology, CRYPTO’85,
pages 417–426, Lecture Notes in Computer Science,
Vol. 218, 1985.
[38] University of California. SETI@home.
http://setiathome.ssl.berkeley.edu/, 2008.
[39] Hsia-Hung Ou, Min-Shiang Hwang, and Jinn-Ke
Jan. A simple mobile communication billing system
among charged parties. Applied Mathematics and
Computation, 192(2):487–495, 2007.
[40] John Risson and Tim Moors. Survey of research to-
wards robust peer-to-peer networks: Search meth-
ods. Computer Networks, 50(17):3485–3521, 2006.
[41] R. L. Rivest, A. Shamir, and L. Adleman. A method
for obtaining digital signatures and public key cryp-
tosystems. Communications of the ACM, 21(2):120–
126, 1978.
[42] Bjorn Schnizler, Dirk Neumann, Daniel Veit, and
Christof Weinhardt. Trading grid services - a multi-
attribute combinatorial approach. European Journal
of Operational Research, 187(3):943–961, 2008.
[43] K. Sripanidkulchai, B. Maggs, and H. Zhang. Ef-
ficient content location using interest-based locality
in peer-to-peer systems. In IEEE INFOCOM 2003,
volume 3, pages 2166–2176, 2003.
[44] P. Trunfio, D. Talia, H. Papadakis, P. Fragopoulou,
M. Mordacchini, M. Pennanen, and K. Popov. Peer-
to-peer resource discovery in grids: Models and
systems. Future Generation Computer Systems,
23(7):864–878, 2007.
[45] Daniel C. Vanderster, Nikitas J. Dimopoulos, Rafael
Parra-Hernandez, and Randall J. Sobie. Resource al-
location on computational grids using a utility model
and the knapsack problem. Future Generation Com-
puter Systems, 25(1):35–50, 2009.
[46] Ming Wu and Xian-He Sun. Grid harvest service: A
performance system of grid computing. In Journal
of Parallel and Distributed Computing, volume 10,
pages 1322–1337, 2006.
[47] Beverly Yang and Hector Garcia-Molina. Designing
a super-peer network. In IEEE International Confer-
ence on Data Engineering, volume 0, page 49, 2003.
[48] Jianwei Ye, Binxing Fang, Yongzheng Zhang, and
Zhihong Tian. A quantitative method for evaluating
the security threats of grid system to tasks. Interna-
tional Journal of Innovative Computing, Information
and Control, 5(4):1125–1136, 2009.
[49] D. Zeinalipour-Yazti, Vana Kalogeraki, and Dim-
itrios Gunopulos. Exploiting locality for scalable in-
formation retrieval in peer-to-peer networks. Infor-
mation systems, 30(4):277–298, 2005.
[50] Ben Y. Zhao, Ling Huang, Jeremy Stribling, Sean C.
Rhea, Anthony D. Joseph, and John D. Kubiatow-
icz. Tapestry: A resilient global-scale overlay for ser-
vice deployment. IEEE Journal on Selected Areas in
Communications, 22(1):41–53, 2004.
10
 2
Society且會議論文集也將被收錄於EI。ISDA會議所涵蓋的主題包括：Intelligent system 
architectures and applications、Intelligent image and signal processing、Intelligent Internet 
modeling、Intelligent data mining、Intelligent Control and Automation、Intelligent Agents、
Intelligent business systems、Innovative information security、Innovative Networking and 
Communication Techniques、及 Web Intelligence 等議題。 
    此會議共邀請三位 Keynote speakers，分別為(1) Prof. Janusz Kacprzyk – Towards a 
human centric analysis of processes and system using fuzzy login, computing with words, 
and natural language processing、(2) Prof. Nikhil Pal – Identification of fuzzy rule based 
systems: some important but less-discussed issues and possible ways to address them、(3) 
Prof. Okyay Kaynak – From industrial electronics to industrial informatics。此外，ISDA
會議舉行的三天中共有 43 場發表 session，每場 session依其發表主題不同，每場 session
約有 5至 6篇論文發表。本人所發表之場次 session為Content Analysis and Protection for 
Multimedia，此 session 共有六篇論文進行發表。本人也是此 session 的主持人，參與
此發表場次之學者相當多，各篇作者針對其所接受之研究論文進行發表並和與會學者
進行學術研究之交流與探討，收穫良多。 
    
二、與會心得 
    參與這次 ISDA 的學術會議中，本人發表了兩篇有關於遠端使用者認證機制研究
的論文，分別為(1) Cryptanalysis of Khan et al.'s Dynamic ID-based Remote User 
Authentication Scheme 及(2) On Security of A More Efficient and Secure Dynamic 
ID-based Remote User Authentication Scheme。在第 1 篇論文我們提出 Khan 等人於
2010 年由 Computer Communications 期刊所接受之動態 ID 使用者認證方法具有一些
國科會補助計畫衍生研發成果推廣資料表
日期:2011/05/19
國科會補助計畫
計畫名稱: 具安全計價機制於對等式網格計算環境之研究及實作
計畫主持人: 李俊達
計畫編號: 99-2221-E-165-001- 學門領域: 資訊安全
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
本研究成果已於 2010 年發表在 International Journal of Innovative Computing, 
Information and Control 國際期刊(SCI)。 
