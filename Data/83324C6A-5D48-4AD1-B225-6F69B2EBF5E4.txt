行政院國家科學委員會專題研究計畫成果報告 
自走型機器人路徑規劃: 等位集法的改良 
Comparing Path Length by Boundary Following Fast Matching Method and Bug 
Algorithms for Path Planning 
 
計 畫 編 號：NSC 96-2221-E-001-018-MY2 
執 行 期 限：96 年 08 月 01 日至 98 年 07 月 31 日 
主 持 人：劉進興   中央研究院資訊科學研究所 
計畫參與人員：蔣佳勳  中央研究院資訊科學研究所 
              周祐行   中央研究院資訊科學研究所 
              費建業   中央研究院資訊科學研究所 
一、中文摘要 
使用探測器在未知環境中並做出路徑規
畫對機器人的領域來說是非常困難的，若是在
擁有完整地圖資訊的地圖環境中，應用 Fast 
Marching Method (FMM)並給予地圖起點與終
點的位置即可找出完整的路徑規畫。相對的在
未知環境中，根據探測器所提供的環境資訊做
出立即的反應也是必須的，其中 boundary 
following (BF) 就是一種技術。在本研究中，
混合以上兩種技術稱為 Boundary Following 
FMM (BFFMM)，此技術將提供完整的 FMM
技術之延伸並給予未知環境的路徑規畫。而
Bug 的理論也在探索未知環境並搭配 BF 之技
術進行路徑規畫，因此本研究比較我們所提
BFFMM 與 Bug1 和 Bug2 兩種方法。在未知
或者已知環境中建立路徑規畫實驗結果中証
實 BFFMM 為最穩定的方法。 
關鍵詞：路徑規劃, fast marching method,  
boundary following 
Abstract 
Local or sensor-based path planning in an 
unknown environment is a challenging problem 
for mobile robots. In completely known grid 
environments, the shortest Euclidean-length path 
connecting a given start-goal point pair can be 
generated using the Fast Marching Method 
(FMM). In contrast, in unknown environments, 
path planning must be reactive (i.e. based on 
recent sensory information) and boundary 
following (BF) is one type of reactive path 
planning technique. In [1], a hybrid method 
called Boundary Following FMM (BFFMM) 
was proposed that could extend the applicability 
of FMM to work well in an unknown 
environment using only local sensory 
perceptions. Bug algorithms are one family of 
navigation algorithms that also utilize BF 
technique in planning paths in unknown 
environments. This paper compares the path 
length of the paths generated by BFFMM with 
those by Bug1 and Bug2, the earliest versions of 
the Bug family algorithms to quantitatively 
reveal the effects of environment uncertainties 
on length of paths generated by navigation 
methods using boundary following. By 
comparison, BFFMM is a modest mobile robot 
path planner that bridges the gap between 
unknown and known terrain. 
Keywords: Path planning 
1、Introduction 
Depending on whether the prior knowledge 
of the whole environment is available, the 
problems of path planning may be divided into 
two classes: local or sensor-based and global. 
For global path planning, or similar path 
planning with complete information, it is 
assumed that the mobile robot knows a priori the 
environment, and the main concern of path 
planning is efficiently generating a collision-free 
and/or optimal path. Many different methods of 
navigating mobile robots achieving varying 
degrees of success in a variety of 
conditions/criteria of motion and environments 
have been developed [9], [6]. In contrast, for 
local path planning, or similar path planning 
with uncertainty, the mobile robot has no a priori 
1 
different types of sensors or different 
environment settings, but all Bug algorithms 
share the same basic property in that they can be 
divided into two parts: a goal pursuing mode 
and a boundary following mode. In goal 
pursuing mode, the robot in general moves 
directly toward to the goal until the robot hits an 
obstacle. When it encounters an obstacle, the 
robot switches from goal pursuing mode to 
boundary following mode and does not switch 
back to goal pursuing mode until some 
switching condition is satisfied. If the robot does 
not have a partial map generated that connects 
the start and destination points, the algorithm 
will recognize this situation, terminate its 
running process and report that the destination 
point is unreachable. 
3   Experiments and Results 
 
Fig. 1. Three single-obstacle test maps of size 200x200 
for experiment. The blue circle is the start; the red circle is 
the goal. (a) the cavity map. (b) the Sankar map. (c) the 
zigzag map. 
The three environments described by the bitmap 
file shown in Fig. 1 were used for comparative 
study of path planning performance of Bug1, 
Bug2, and BFFMM. All the simulations are run 
with MATLAB on a PC with Intel Core 2 Duo 
1.8 GHz microprocessor. 
We conduct simulations with the assumption 
that the world is perfect, noise-free, and static. 
The results of the simulations are shown in Fig. 
2-4 and summarized in Table 1. 
As a reference for evaluation of path length, 
the path generated by FMM is the geodesic 
connecting the start and the destination points on 
the obstructed map, or the shortest path between 
the two points. We express the path length as 
percentage above optimal (PAO), which is 
defined as  
 
Fig. 2. Simulations on the Cavity map: path generated by
(a) FMM (b) BFFMM (c) BUG1 (d) BUG2 
 
PAO= generated path length( 1) 100
path length generated by FMM
− ⋅  
 
to facilitate the comparison between different 
methods. The comparison is given in Table 2. 
From the results, the path length generated by 
Bug1 is the longest because the robot has to 
contour to the whole boundary curve of the 
encountered obstacle to determine the switching 
point. Bug2 generally produces shorter paths 
than Bug1 because Bug2 stops following the 
boundary of the obstacle before encircling it. 
Although the path generated by Bug 2 is shorter 
than Bug1, Bug2 does not know which side or 
which route would be better. BFFMM builds the 
partial map by contouring the boundary curves 
of obstacles, so the path length in exploring 
mode would approach the limit of Bug1.The 
total path length of BFFMM is close to that of 
Bug1, but the path length of the path planning 
phase is even shorter than that of Bug2. Besides, 
the robot could plan a shortest path for a new 
start-goal pair on the built partial map without 
resorting to the exploring phase again. Without 
following the boundary of the obstacles, the path 
length of FMM is not directly or explicitly 
 
Fig. 3. Simulations on the Sankar map: path generated by
(a) FMM (b) BFFMM (c) BUG1 (d) BUG2 
3 
5 
coordinates. 
 
Acknowledgments. The research was supported by 
National Science Council under contract NSC 
96-2221-E-001-018-MY2. 
5 References 
1. C. H. Chiang, J. S. Liu (2008). Boundary Following in 
Unknown Polygonal Environment Based on Fast Marching 
Method. IEEE International Conference on Advanced 
Robotics and its Social Impacts.   
2. C. H. Chiang, P. J. Chiang, Jerry C. C. Fei, J. S. Liu (2007). 
A Comparative Study of Implementing Fast Marching 
Method and A* Search for Mobile Robot Path Planning in 
Grid Environment: Effect of Map Resolution. IEEE 
Workshop on Advanced Robotics and its Social Impacts, pp. 
7-12. 
3. V. J. Lumelsky, A. A. Stepanov (1986). Dynamic Path 
Planning for a Mobile Automation with Limited Information 
on the Environment. IEEE Transactions on Automatic 
Control, Vol. AC-31, No. 11, pp 1058-1063. 
4. James Ng, Thomas Braunl (2007). Performance Comparison 
of Bug Navigation Algorithm. Journal of Intelligent and 
Robotic Systems, Vol. 50, pp. 73-84. 
5. Ricardo A. Langer, Leandro S. Coelho, and Gustavo H. C. 
Oliveira (2007). K-Bug, A new bug approach of mobile robot 
path planning. 16th IEEE International Conference on 
Control Application, Part of IEEE Multi-conference on 
Systems and Control, Singapore, pp. 403-408. 
6. Nageswara S. V. Rao, Srikumar Kareti Weimin Shi, S. 
Sitharama Ivengar (1999). Robot Navigation in Unknown 
Terrains: Introductory Survey of Non-Heuristic Algorithms. 
Technical Report, Oak Ridge National Laboratory. 
7. J. A. Sethian (1999). Level Set Methods, Evolving interfaces 
in geometry, fluid mechanics, computer vision, and materials 
science, Cambridge University Press. 
8. Ishay Kamon, Ehud Rivlin, Elon Rimon (1996). A New 
Range-Sensor Based Globally Convergent Navigation 
Algorithm for Mobile Robots. Proceeding for the 1996 IEEE 
International Conference on Robotics and Automation, 
Minneapolis, Minnesota. 
9. S. M. LaValle (2006). Planning Algorithms, Cambridge 
University Press. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
