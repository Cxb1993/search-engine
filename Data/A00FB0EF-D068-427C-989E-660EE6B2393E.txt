 I
目  錄 
中、英文摘要及關鍵詞……………………………………………………………………………………….II 
一、研究背景…………………………………………………………………………………………………..1 
二、研究動機…………………………………………………………………………………………………..1 
三、研究目的…………………………………………………………………………………………………..2 
四、產品生命週期知識服務之特性與塑模…………………………………………………………………..2 
五、產品知識之界定、分析與塑模…………………………………………………………………………..3 
六、系統架構…………………………………………………………………………………………………..5 
七、核心技術………………………………………………………….……………………………………….7 
八、系統實作………………………………………………………….……………………………………….56 
九、結論……………………………………………………………………………………………………….57 
參考文獻……………………………………………………………………………………………………....58 
附錄(96 至 98 年度專題研究計劃所發表之相關國際期刊(SSCI/SCI)、國內期刊與研討會論文)…….....59 
 1
一、研究背景 
二十一世紀為知識經濟時代，企業應致力於獲取、應用及管理知識，以掌握本身與市場環境
的變化，俾能及早發現問題並找出商機，更要將企業內原本以能源與設備之使用為主的營運模式
轉型為以知識與技術為主的專業化營運模式，再透過知識的累積、管理與運用來提昇企業的價值，
進而發展成不斷學習與創新的知識型企業。 
知識型企業以知識密集的活動為主，此類活動之共同點為重視知識工作者(Knowledge Worker)
對資訊與知識的獲得、運用、分配與創新，並將知識視為最重要的產出，因此如何有效地管理知
識資產，以創造他人無法模仿的競爭優勢，為知識型企業重要的課題，而『知識管理』之策略、
方法與技術亦是學界重要的研究主題[3]。 
此外，傳統將產品交付顧客手中即能滿足顧客需求的賣方市場，已轉變為以滿足顧客最大需
求之買方市場[1]。另一方面，由於市場競爭日益激烈，降低成本、提高品質、縮短上市時間、快
速反應客戶個別需求，已成為廠商努力的目標，因此產業界積極運用相關產品開發、製造及管理
策略、方法與技術，以謀求最佳的研發、生產策略，「協同商務」、「產品生命週期管理」則為其中
重要之營運策略。 
由於產品生命週期各階段活動，從產品需求分析、開發、生產等皆須運用領域相關知識與經
驗，並牽涉到管理、工程、資訊等多方面之方法與技術，故其為一具高度創造力與知識密集的企
業活動，因此在協同商務的環境下，產品開發都透過一群擁有不同專長的專家和分散在不同部門
或公司的人員所組成的多功能團隊(Multi-Functional Team)，在一合理化、協同化的作業程序下，
運用網路與資訊技術，共用與分享資訊與知識資源，並藉由溝通、協調與合作，來整合地、協同
地進行產品生命週期各階段活動或提供服務[2]。因此協同開發與產品生命週期管理之成敗多繫於
產品生命週期各階段活動的資訊與知識能否被了解與共用，而資訊與知識的被了解與共用則有賴
有效的資訊與知識之獲得、整合、管理、傳遞、分享、交換與控制[4]。 
 
二、研究動機 
     在知識經濟時代，企業除了須運用有形資源提供客戶滿意之產品與服務外，還須不斷地創新
與累積無形的知識資產，以便提昇競爭力。另外，由於技術不斷地革新，使得產品結構複雜化與
顧客需求多樣化，而顧客對服務與產品知識的需求也益形提高，因此除了提供顧客滿意之產品與
服務外，為顧客提供產品相關知識，以協助顧客透過有效之產品運用創造更大價值為知識經濟時
代企業必要之使命。 
     本計畫主要提出「產品生命週期知識服務」之概念，即整合產品生命週期相關之資訊與知識，
除提供生命週期及產業價值鏈各階段活動所需的資訊與知識以提昇產業鏈整體營運效益外，更協
助客戶透過該產品相關知識的運用創造更大的價值與提昇競爭力。 
     然而，「產品生命週期知識服務」之具體商務模式為何?個別企業如何建構能與產業價值鏈整
合之「產品知識服務模式」？此外，由於產品知識來自產品生命週期與產業價值鏈的每一個環節，
企業須尋求更適當的知識管理模式以支援知識服務。再者，現行的知識管理多以提供企業內知識
管理需求為前題，鮮少針對顧客與產品生命週期的整體需求來設計知識管理模式與系統，因此有
必要針對「產品生命週期知識服務」之概念，依據相關之理論，提出一可實現之作業模式與適當
之平台系統架構。另外，知識服務之實現首先要針對產品生命週期與產業價值鏈界定、獲取「產
品生命週期之相關知識」，再加以表達、整合與儲存，以建立產品之知識內容，進而作為知識分享
之依據，然而，如何以系統化方法進行此知識內容建置，仍是有待探討的問題。 
 
 3
置活動所提供的知識以及執行該活動所需的(供應鏈)知識； 
(5) 一個或多個產品知識來源，此知識來源又分為直接知識來源與間接知識來源兩種；前者為來
自於前一相鄰活動的產品知識，而後者則為來自於非前一相鄰活動的產品知識。 
此產品生命週期與其供應鏈之知識服務模式具以下四點特性：(a)分散性(Distributed)：產品生
命週期與其供應鏈是由許多跨地域之不同企業所組成，形成一分散式產品知識服務環境；(b)階層
性(Hierarchical)：產品生命週期中每個活動依據專業分工可再細分為數個不同的子活動，進而形
成一具有階層性結構的產品知識服務模式；(c)彈性(Flexibility)：由於產品生命週期與其供應鏈皆
由不同專業的企業所組成，因此聯盟企業可依其所擁有的專業知識選擇加入或退出該產品生命週
期與其供應鏈的產品知識服務模式；(d)產品導向(Product-oriented)：由於產品知識之形成與成長
是伴隨著該產品生命週期與其供應鏈活動的執行，因此產品生命週期與其供應鏈之產品知識服務
亦是產品為導向。 
 
圖(1)  產品知識服務作業模式 
 
         圖(1)中，產品生命週期係由市場分析、產品設計與製程開發、產品製造、產品配銷、產品使
用、售後服務以及產品再利用等活動所構成，每個活動可依據其專業再細分為數個不同的子活動，
例如產品設計活動可細分為需求分析、概念設計、初步設計及細部設計等四個子活動。另外，每
個活動亦會有一至多個供應商的參與，例如原物料供應商、元件供應商以及組裝廠等，如此形成
一完整的產品知識服務模式。 
 
五、產品知識之界定、分析與塑模 
產品生命週期內之知識可分為活動之限制知識(Constraint Knowledge)、活動之參考知識
(Reference Knowledge)以及流動知識(Flow Knowledge)等三類。這些知識亦可歸納為正規知識與實
務知識。其中，正規知識可用來執行產品生命週期之活動，包含領域概念知識、產品生命週期活
動之概念知識以及理論知識。而實務知識係產品生命週期活動中，理論知識被應用或問題解決所
 5
 
六、系統架構 
本系統之目的在於獲取、儲存、管理以及整合產品生命週期與其供應鏈各活動之相關知識，
進而分享給產品知識需求者。為了實現上述系統目的，本計畫針對協同組織形成、系統之功能以
及管理三方面進行需求分析，茲說明如下： 
(1) 協同組織形成：包括產品生命週期與其供應鏈之協同組織建立、協同組織運作以及協同組織解
散三階段。 
(2) 系統功能面：在分享產品生命週期與其供應鏈各活動的產品知識之前，先須有效取得、管理與
整合相關知識。因此，本計畫參考知識管理流程，針對知識獲取、知識儲存、知識管理、知識
整合、知識分享、知識提供者推薦以及知識交流等系統功能進行需求分析。 
(3) 系統管理面：除了考量系統之作業功能需求外，亦須考量遠端協調、協同與控制、組態管理、
安全管理以及知識維護等系統管理的需求。 
另外，依據前述之產品知識界定、種類與型態以及塑模，本計畫設計一產品知識儲存庫架構，
如圖(4)所示。產品知識儲存庫係由不同的 Library 組合而成，可將產品知識內容儲存至適當的
Library 內，系統可依照產品知識需求，直接搜尋與計算產品知識儲存庫中實務知識層之近似案例
或由正規知識層找到合適的核心概念與相關概念，之後再根據所找尋到的概念對映到所屬的深層
知識或產品知識案例，而每個案例中均可記載解決方法與程序、處理規則及工程資料等。 
 
圖(4)  產品知識儲存庫之架構 
 
根據上述系統功能需求分析與產品知識儲存庫之架構設計，本計畫設計一產品生命週期知識
服務系統架構，如圖(5)所示，此架構由上而下依序為使用者層、商業邏輯層以及實體知識層。 
 7
 
七、核心技術 
針對上述代理人為基之知識服務導向系統架構，本計畫進行知識整合與分享、知識推論以及
知識提供者(諮詢專家)推薦等核心技術之發展，茲分述如下： 
(1) 知識整合與分享機制： 
       本機制主要整合產品生命週期相關知識，以利知識工作者依據其知識需求搜尋其所需之
產品生命週期知識。圖(7)為知識整合與分享流程，可分為知識整合與知識分享兩部分，茲說
明如下： 
 
圖(7)  知識整合與分享流程 
 
(a) 知識整合機制： 
為使上述所設計的知識整合流程得以實現，須設計一本體論整合模式與整合演算法，
因此，本計畫先針對本體論整合模式(Ontology Integration Model)、本體論映對(Ontology 
Mapping)技術、本體論合併 (Ontology Merging)技術以及本體論整合流程 (Ontology 
Integration Process)進行設計與發展，再以一本體論為基之產品知識整合實例進行說明，茲
依序敘述如下： 
(i) 本體論整合模式(Ontology Integration Model)： 
本計畫將知識整合演算法分為本體論映對(Ontology Mapping)與合併(Ontology 
Merging)兩部分；個體企業提供個體本體論(Local ontology)以映對於主導企業之產品生
命週期本體論(Product Life Cycle Ontology)。透過運用本體論映對(Ontology Mapping)與
合併(Ontology Merging)的技術，此整合模式得以整合出一合併後之本體論(Global 
Ontology)如圖(8)所示，整合後之本體論可提供較完整之概念與知識連結，藉此得以整
合各個體企業下的知識物件，以達成分散式知識概念與知識連結的整合。 
 9
BA
BA
BA
CjCi
CjCi
CjCi
U
I=), NameSim(                            (1) 
    其中，CiA為 Ontology A 中第 i 個 Concept Name 單字集合，CiA={Ci1A, Ci2A,..., 
CinA}，同理 CjB亦為 Ontology B 中第 j 個 Concept Name 單字集合，CjB={Cj1B, Cj2B,..., 
CjnB}。SiA為 Ontology A 中第 i 個 Concept Synonym Name 同義字單字，集合 SiA={Si1A, 
Si2A,..., SinA}，SjB為 Ontology B 中第 j 個 Concept Synonym Name 單字集合，SjB={Sj1B, 
Sj2B,..., SjnB}。 
    先將概念名稱進行字型拆解，將其拆解為單位字詞之集合，再取出擬比對的概
念名稱集合以公式進行計算。概念名稱比對之演算法虛擬碼如圖(9)所示。 
Algorithm of Name and Synonym Similarity 
BEGIN 
    CiA : A set of words that to constitute Concept Name in Local Ontology,                             
    i=1~Na;    
    Wnl: The number of CiA words; 
    Na: The concept number of Local Ontology 
    
    CjB: A set of words that to constitute Concept Name in Global Ontology  
    j=1~Nb; 
    Wng : The number of CjB words  
    Nb:The concept number of Global Ontology  
     
    SiA: A set of words that to constitute Synonym in Local Ontology  
      Snl : The number of SiA words  
     
    SjB: A set of words that to constitute Synonym in Global Ontology  
      Sng : The number of SjB words  
 
    Name Matrix (CiA,CjB) : The Values of Name Similarity(CiA,CjB) 
    Name Matrix (SiA, CjB) : The Values of Name Similarity(SiA, CjB) 
    Name Matrix (CiA, SjB) : The Values of Name Similarity(CiA, SjB) 
    Name Matrix (SiA, SjB) : The Values of Name Similarity(SiA, SjB)  
 
 FOR k=1 to wnl; 
    CikA : A set of words that to constitute Concept Name in Local Ontology,  
        FOR h=1 to wng; 
      CjhB : A set of words that to constitute Concept Name in Global Ontology,; 
   IF CikA = CjhB THEN 
              
       Let the parameter of same s=s+1; 
   ENDIF 
   Name Sim(CiA,CjB)=
SWngWnl
S
−+
;  
  END 
 END 
 Storage Concept Name Sim(CiA,CjB) to Name Matrix(CiA,CjB); 
     FOR k=1 to wnl; 
    CikA : A set of words that to constitute Concept Name in Local Ontology,  
        FOR n=1 to Sng; 
      SjnB : A set of words that to constitute Concept Synonym Name in Global Ontology,; 
   IF CikA = SjnB THEN 
              Let the parameter of same s=s+1; 
   ENDIF 
     Name Sim(CiA,SjB)=
SSngWnl
S
−+
;  
        END 
 END 
 Storage Concept Name Sim(CiA,SjB) to Name Matrix(CiA,SjB); 
     FOR m=1 to Snl; 
      SimA : A set of words that to constitute Concept Synonym Name in Local Ontology, 
            FOR h=1 to Wng; 
      CjhB : A set of words that to constitute Concept Name in Global Ontology,; 
   IF SimA = CjhB THEN   
 11
IjB: A set of words to describe the Input of Concept(j) in Global Ontology; 
Ing: The number of words to describe the Input of Concept(i); 
OjB: A set of words to describe the Output of Concept(j) in Global Ontology; 
Onl: The number of words to describe the Output of Concept(i); 
CojB: A set of words to describe the Constraint of Concept(j) in Global Ontology; 
Cng: The number of words to describe the Constraint of Concept(i); 
RejB: A set of words to describe the Resources of Concept(j) in Global Ontology; 
Reng: The number of words to describe the Resources of Concept(j); 
 
Function Similarity 
BENGIN 
X: Denote the vector : <Xk1,…,Xkp>; 
Xkp: The appear number of keywords in Fi ; p =1 ~n; 
Y: Denote the vector : <Yk1,…,Ykq>; 
Ykq: The appear number of keywords in Fj; q=1~n; 
n: The number of keywords in Fi and Fj; 
Function Similarity (Ci,Cj)=
Yki*XkiYkiXki
Yki*Xki
n
1i
m
1i
2
n
1i
2
n
1i
∑∑∑
∑
===
=
−+
; 
Storage FunctionSim (Ci,Cj) to a Function Matrix(CiA,CjB); 
END 
 
Input Similarity 
BENGIN 
X: Denote the vector : <Xk1,…,Xkp>; 
Xkp: The appear number of keywords in IiA ; p =1 ~n; 
Y: Denote the vector : <Yk1,…,Ykq>; 
Ykq: The appear number of keywords in IjB; q=1~n; 
n: The number of keywords in IiA and IjB; 
Input Similarity(Ci,Cj)=
Yki*XkiYkiXki
Yki*Xki
n
1i
m
1i
2
n
1i
2
n
1i
∑∑∑
∑
===
=
−+
; 
Storage Input Similarity(Ci,Cj) to a Input Matrix(CiA,CjB); 
END 
 
Output Similarity 
BENGIN 
X: Denote the vector : <Xk1,…,Xkp>; 
Xkp: The appear number of keywords in OiA ; p =1 ~n; 
Y: Denote the vector : <Yk1,…,Ykq>; 
Ykq: The appear number of keywords in OjB; q=1~n; 
n: The number of keywords in OiA and OjB; 
Output Similarity (Ci,Cj)=
Yki*XkiYkiXki
Yki*Xki
n
1i
m
1i
2
n
1i
2
n
1i
∑∑∑
∑
===
=
−+
; 
Storage Output Similarity (Ci,Cj) to a Output Matrix(CiA,CjB); 
END 
 
Constraint Similarity 
BENGIN 
X: Denote the vector : <Xk1,…,Xkp>; 
Xkp: The appear number of keywords in CoiA ; p =1 ~n; 
Y: Denote the vector : <Yk1,…,Ykq>; 
Ykq: The appear number of keywords in CojB; q=1~n; 
n: The number of keywords in CoiA and CojB; 
Constrint Similarity (Ci,Cj)=
Yki*XkiYkiXki
Yki*Xki
n
1i
m
1i
2
n
1i
2
n
1i
∑∑∑
∑
===
=
−+
; 
Storage Constrint Similarity (Ci,Cj) to a Constraint Matrix(CiA,CjB); 
END 
 
Rescoures Similarity 
BENGIN 
 13
Sf: Number of the same Father Concept ; 
Sb: Number of the same Bather Concept ; 
Sc: Number of the same Children Concept ; 
 
Relation Matrix (CiA,CjB)= The Values of RelationSimilarity 
 
Father Relation Similarity 
   FOR h =1 to FAnl;  
      CiFhA: A Feather Concept of CiFA , h=1 to FAnl;  
        FOR k = 1 to FAng; 
             CjFkA: A Feather Concept of CjFA , k=1 to FAng;  
             Calculate Name Similarity(CiFhA,CjFkB); 
                IF Name Similarity(CiFhA,CjFkB) =1 THEN 
              S=S+1; 
                ENDIF 
                FeatherSimilarity=
SFangFAnl −+
S ; 
          Storage Father Relation Similarity Sim(CiA,CjB) to a Father Relation  
          Similarity Matrix(CiA,CjB); 
        END 
    END 
 
Bather Relation Similarity 
    FOR p =1 to BAnl;  
      CiBpA: A Bather Concept of CiBA, p =1 to BAnl;  
        FOR q= 1 to BAng; 
             CiBpA A Bather Concept of CjBqA , k=1 to BAng;  
             Get Name Similarity(CiBPA, CjBqB); 
             IF Name Similarity(CiBpA,CjFkB)=1; THEN 
               S=S+1; 
             ENDIF 
         FeatherSimilarity=
SBangBAnl −+
S ; 
        Storage Bather Relation Similarity Sim(CiA,CjB) to a Bather Relation;  
        Similarity Matrix(CiA,CjB); 
        END 
    END 
 
Children Relation Similarity 
    FOR p =1 to CHnl;  
         CiCmA: A Children Concept of CiCA, m =1 to CHnl; 
         FOR q = 1 to CHng; 
             CjCnB: A Childrend Concept of CjCB , k=1 to CHng;  
             Get Name Similarity(CiCmA, CjCnB); 
             IF Name Similarity(CiCmA, CjCnB)=1; THEN 
               S=S+1; 
             ENDIF 
    FeatherSimilarity=
SCHngCHnl −+
S ; 
         Storage Father Relation Similarity Sim(CiA,CjB) to a Father Relation  
         Similarity Matrix(CiA,CjB); 
      END 
    END 
 
    Relation Sim(CiA,CjB)=1/3*Father Relation Similarity + 1/3*Bather Relation Similarity +  
1/3*Children Relation Similarity; 
    Storage Relation Sim(CiA,CjB) to Relation Matrix (CiA,CjB) ; 
END 
圖(12)  本體論關係相似度比對演算法虛擬碼 
 
(iii)本體論合併(Ontology Merging) 
本體論合併為用來解決本體論重複的問題，可藉由本體論映對後的結果來進行概
念內容的合併。本體論合併之流程如圖(13)所示，其合併步驟說明如下： 
 15
圖(14) 本體論整合演算法流程 
 
圖(15)  Examples of Global and Local Ontologies 
 17
概念“Molding Product Design”。圖(17)為其合併結果。 
<Molding_Product_Design rdf:ID="global_ontology_Instance_0"> 
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >global ontology_Instance_0</rdfs:label> 
    <Definition rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >2.Task to transform functional requirements into molding product model </Definition> 
    <Essential_Information_Function rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >1.Draw a molding product model</Essential_Information_Function> 
    <Definition rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >1.Task to transform customer needs or functional requirements into molding product model</Definition> 
    <Essential_Information_Function rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >2.Design and draw a molding product model </Essential_Information_Function>    
    <Essential_Information_Resource rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >CAD、CAE、Database</Essential_Information_Resource> 
    <Is_Part_Of rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Molding Product Life Cycle</Is_Part_Of> 
    <Essential_Information_Output rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Molding product model</Essential_Information_Output> 
    <Essential_Information_Input rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Customer needs or product functional requirements </Essential_Information_Input> 
    <Essential_Information_Constraint rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Design SOP、Engineering theory</Essential_Information_Constraint> 
  </Molding_Product_Design> 
圖(17)  The Ontology Schema after Integrating the Concept ‘Molding Product Design’ 
 
Step4. 個體本體論之“Molding Product Design”有子概念，取出其子概念“Conceptual 
Design”，運用上述本體論映對演算法，將概念“Conceptual Design”映對於總體
本體論概念“Molding Product Design”之外的概念，但已合併後之概念 Molding 
Product Design”不進行映對，其相似度計算結果如表(2)所示。  
 
表(2)  Similarity Mapping between the Concept “Conceptual Design” and Global Ontology Concepts 
Essential Information                Similarity 
Concept Name Function Input Output Constraint Resource 
Relationship Similarity Sum 
Molding Product Life Cycle 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Mold Design 0.333 0.000 0.000 0.000 0.000 0.000 0.000 0.333 
Molding Process Design 0.250 0.000 0.000 0.000 0.000 0.000 0.000 0.250 
Mold Mfg Process Planning 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Production 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Preliminary Design 0333 0.000 0.000 0.000 0.000 0.000 0.670 1.000 
Mold Ability Assessment 0.000 0.000 0.000 0.000 0.000 0.000 0.670 0.040 
Parting Line Specification and 
Evaluation 0.000 0.000 0.200 0.000 0.000 0.000 0.670 0.000 
Detail Design 0.333 0.333 0.000 0.500 0.000 0.000 0.670 0.504 
 
Step5. 由於 Step4 所計算之相似度皆未符合門檻值，得知總體本體論沒有“Conceptual 
Design”概念，因此先將此概念複製至總體本體論，再利用子概念合併機制，取
出“Conceptual Design”子概念，繼續進行相似度比對與整合。但因沒有子概念，
則回到上一層概念“Molding Product Design”，取出其子概念“Preliminary 
Design”，再與總體本體論概念比對，而已合併後之總體本體論概念則不需再比
對。其相似度計算結果如表(3)所示。 
 
表(3)  Similarity Mapping between the Concept “Preliminary Design” and Global Ontology Concepts 
Essential Information             Similarity 
Concept Name Function Input Output Constraint Resource 
Relationship Similarity Sum 
Molding Product Life Cycle 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Mold Design 0.333 0.000 0.000 0.000 0.000 0.000 0.000 0.333 
 19
and Evaluation 
Detail Design 0.000 0.000 1.000 0.000 0.250 0.000 0.670 0.920 
 
Step9. 根據 Step8 之比對結果，得知只有概念“Mold Ability Assessment”符合名稱相似
度大於等於 0.8，且必要資訊相似度大於 0.5 之條件，可將此概念放置於矩陣
(Vector A)，其餘概念皆未滿足名稱相似度大於等於 0.8 且必要資訊相似度大於
0.5 或必要資訊相似度大於 0.5 的條件，則將被淘汰。 
Step10. 合併個體本體論(Local Ontology)概念“Mold Ability Assessment” 的必要資訊與
關係至總體本體論(Global Ontolgoy)概念“Mold Ability Assessment”，如圖(19)
所示。 
<Moldability_Assessment rdf:ID="global_ontology_Instance_2"> 
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >global ontology_Instance_2</rdfs:label> 
    <Essential_Information_Function      
    rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >1.Assess moldability</Essential_Information_Function> 
    <Essential_Information_Input rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Preliminary product model</Essential_Information_Input> 
    <Is_Part_Of rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Molding product design</Is_Part_Of> 
    <Cooperated_With rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Process Selection</Cooperated_With> 
    <Essential_Information_Resource rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Assessable tools</Essential_Information_Resource> 
    <Essential_Information_Constraint rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Material property 、 Surface finish 、 Lot size ， Preliminary 
specifications</Essential_Information_Constraint> 
    <Essential_Information_Output rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Moldability</Essential_Information_Output> 
    <Is_Followed_By rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Preliminary Design</Is_Followed_By> 
    <Essential_Information_Function rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >2.Identify、Evaluate、Assess、Moldability </Essential_Information_Function> 
    <Definition rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Assess if a product is suitable to produce by injection molding</Definition> 
  </Moldability_Assessment> 
圖(19)  The Ontology Schema after Integrating the Concept ‘Mold Ability Assessment’ 
 
Step11. 利用子概念合併機制，取出“Molding Product Design”的子概念“Process 
Selection”繼續進行相似度比對與合併流程，其相似度計算結果如表(5)所示。 
 
表(5)  Similarity Mapping between the concept “Process Selection” and Global Ontology Concepts 
Essential Information                Similarity 
Concept Name Function Input Output Constraint Resource 
Relationship Similarity Sum 
Molding Product Life Cycle 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Mold Design 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Molding Process Design 0.250 0.000 0.000 0.000 0.000 0.000 0.000 0.250 
Mold Mfg Process Planning 0.200 0.000 0.000 0.000 0.000 0.000 0.000 0.200 
Production 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Parting Line Specification 
and Evaluation 0.000 0.000 0.500 0.000 0.131 0.000 0.670 0.796 
Detail Design 0.000 0.000 0.323 0.000 0.615 0.000 0.670 0.858 
 
Step12. 根據 Step11 之計算結果得知所計算之相似度皆未符合標準，且若總體本體論沒
有“Process Selection”此概念，則可將此概念複製至總體本體論。由於此概念沒
有子概念，可回到上一概念“Molding Product design”中，取出子概念“Parting 
 21
Mold Design 0.333 0.000 0.000 0.000 0.000 0.000 0.000 0.333 
Molding Process Design 0.250 0.000 0.000 0.000 0.000 0.000 0.000 0.250 
Mold Mfg Process Planning 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Production 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 
Detail Design 1.000 0.800 1.000 1.000 0.800 1.000 0.444 2.364 
 
Step16. 依據 Step15 的比對結果，得知只有概念“Detail Design”符合名稱相似度大於
等於 0.8，且特徵相似度大於 0.5 之條件，可將此概念放置於矩陣(Vector A)，
其餘概念皆未滿足名稱相似度大於等於 0.8，且特徵相似度大於 0.4 或特徵
相似度大於 0.4 的條件，則將被淘汰。 
Step17. 合併個體本體論概念“Detail Design”的特徵概念至總體本體論概念“Detail 
Design”，其合併結果如圖(21)所示。 
 
<Detail_Design rdf:ID="global_ontology_Instance_4"> 
    <Essential_Information_Constraint rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Conceptual specifications、Preliminary specifications、MaterialConceptual specifications，property、
Surface finish、Lot size</Essential_Information_Constraint> 
    <Source_Company rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Parting line Specification &amp; Evaluation</Source_Company> 
    <Definition rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >1.Design a Product detail model</Definition> 
    <Essential_Information_Resource rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >CAD、CAE</Essential_Information_Resource> 
    <Essential_Information_Function rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Design detail Mold function</Essential_Information_Function> 
    <Definition rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >2. Design a complete product model </Definition> 
    <Is_Followed_By rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >3.Mold Ability Assessment</Is_Followed_By> 
    <Is_Part_Of rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Molding product design</Is_Part_Of> 
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >global ontology_Instance_4</rdfs:label> 
    <Is_Followed_By rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >1.Process Selection</Is_Followed_By> 
    <Is_Followed_By rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >2.Parting line Specification & Evaluation</Is_Followed_By> 
    <Essential_Information_Output rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Product detailed model</Essential_Information_Output> 
    <Essential_Information_Input rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >Preliminary product model</Essential_Information_Input> 
<Synonym_Name rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    > Complete Design , Exhaustive Design </Synonym_Name> 
  </Detail_Design> 
圖(21)  The Ontology Schema after Integrating the Concept ‘Detail Design’ 
 
Step18. 確認沒有其他概念。 
Step19. 結束所有動作後，其整合結果如圖(22)所示。 
 
 23
其中，Ci_F：功能(Function)之字詞集合， 
Ci_I ：輸入(Input)之字詞集合， 
Ci_O：輸出(Output)之字詞集合， 
Ci_C：限制(Constraint)之字詞集合， 
Ci_R：運用資源(Resources) 之字詞集合， 
( ) LLCi NNLFCiP /_ ,= ，L 指查詢模式之功能描述單位字詞， ( ) MMCi NNMICiP /_ ,= ，M 為查詢模式之輸入單位字詞， ( ) NNCi NNNOCiP /_ ,= ，N 係指查詢模式之輸出單位字詞， ( ) SSCi NNSCoCiP /_ ,= ，S 則為查詢模式之限制單位字詞， ( ) TTCii NNROCiP /_ ,= ， R 指所查詢模式之資源單位字詞。 
概念搜尋之相似度比對方法為將名稱相似度與必要資訊相似度進行加總，其公式
如式(7)所示。 
( )]([ ECiPrityNameSimilailarityConceptSim +=                     (7) 
(ii) 查詢與搜尋流程： 
圖(24)為本體論為基之產品生命週期知識查詢與搜尋流程，其步驟包括：(A)輸入
概念名稱；(B)輸入概念必要資訊；(C)取出總體本體論概念名稱；(D)取出總體本體論
概念必要資訊；(E)計算名稱相似度；(F)利用貝氏定理計算必要資訊相似度；(G)加總名
稱相似度與必要資訊相似度；(H)排序概念相似度；(I)輸出相似概念。 
 
圖(24)  Query and Search Process for Ontology-based Product Lifecycle Knowledge 
 
(iii)本體論為基之產品生命週期知識查詢與搜尋實例： 
本計畫以模製品之產品生命週期本體論(圖(15(a)))進行本體論為基之產品生命週期
知識查詢與搜尋實例說明，茲敘述如下： 
知識需求者輸入如下查詢： 
Name: Process Selection 
Function: Select Manufacturing Process 
Input: Product Model 
Output: Process Capability 
 25
系列程序或步驟間合作的經驗知識，其關係定義為Cooperate_with，以表示經驗知識概念間
的協同合作關係。 
 
圖(25)  本體論為基之多層次經驗知識表達模式  
 
(b) 經驗知識概念Schema： 
    針對(a)經驗知識表達模式中的經驗知識概念，運用物件導向模式設計一經驗知識概念
Schema，如圖(26)所示。此經驗知識概念Schema係由概念(Concept)、屬性(Property)及關係
(Relationship)等三種元素所組成，每一元素說明如下： 
(i) 概念(Concept)：概念係為構成經驗知識本體之基本單位名稱，以表達一有形或無形的
重要事物。 
(ii) 屬性(Property)：經驗知識屬性主要包含概念編號(Concept_ID)、基本定義(Definition)、
同義詞(Synonym)、出現原因(Appearance Reason)、結果情況(Status)與動作(Action)。 
(iii)關係(Relationship)：經驗知識概念間之關係主要包括Is_a、Part_of、Cause、Cause_by、
Follow、Is_followed_by以及Cooperative_with等七種關係。 
 
圖(26)  經驗知識概念Schema 
 
(c) OWL為基之經驗知識本體： 
根據(a)與(b)所設計之經驗知識表達模式與概念Schema，本計畫將依據OWL DL基本公
 27
    <rdfs:subClassOf> 
      <owl:Class rdf:ID="Empirical_Knowledge_Concept_B"/> 
    </rdfs:subClassOf> 
  </owl:Class> 
  <owl:TransitiveProperty rdf:ID="Part_of"> 
    <rdfs:domain rdf:resource="#Empirical_Knowledge_Concept_D"/> 
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/> 
    <rdfs:range rdf:resource="#Empirical_Knowledge_Concept_E"/> 
  </owl:TransitiveProperty> 
  <owl:TransitiveProperty rdf:about="#Cause"> 
    <rdfs:domain rdf:resource="#Empirical_Knowledge_Concept_H"/> 
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/> 
    <owl:inverseOf rdf:resource="#Caused_by"/> 
    <rdfs:range rdf:resource="#Empirical_Knowledge_Concept_I"/> 
  </owl:TransitiveProperty> 
  <owl:SymmetricProperty rdf:ID="Cooperate_with"> 
    <rdfs:domain rdf:resource="#Empirical_Knowledge_Concept_N"/> 
    <rdfs:range rdf:resource="#Empirical_Knowledge_Concept_O"/>     
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/> 
  </owl:SymmetricProperty> 
圖(27)  OWL 為基之部分經驗知識本體 (經驗知識概念與關係) 
 
    圖(28)為 OWL 為基之經驗知識本體之屬性(Property)。經驗知識概念(Empirical_ 
Knowledge_Concept)具有「出現原因(Appearance Reason)」與「結果情況(Status)」等屬性。
而「出現原因」屬性與「結果情況」屬性皆定義為資料屬性(owl:DatatypeProperty)之建構
子；然而，為了推理之合理性，限制「出現原因」之屬性值最小為 1(owl:minCardinality)，
表示未來需填入一個或一個以上的屬性值來表達出現原因，而「結果情況」之屬性值則限
制最大為 1(owl:maxCardinality)，以表示未來最多僅能填入”正常值”或”異常值”。 
 <owl:Class rdf:ID="Empirical_Knowledge_Concept"> 
    <rdfs:subClassOf> 
      <owl:Restriction> 
     <owl:maxCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int" 
        >1</owl:maxCardinality> 
        <owl:onProperty> 
          <owl:DatatypeProperty rdf:ID="Status"/> 
        </owl:onProperty> 
      </owl:Restriction> 
    </rdfs:subClassOf> 
    <rdfs:subClassOf> 
      <owl:Restriction> 
        <owl:onProperty> 
          <owl:DatatypeProperty rdf:ID="AppeareanceReason"/> 
        </owl:onProperty> 
    <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int" 
        >1</owl:minCardinality> 
      </owl:Restriction> 
    </rdfs:subClassOf> 
    <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/> 
  </owl:Class> 
  <owl:DatatypeProperty rdf:about="#Status"> 
    <rdfs:domain rdf:resource="#Empirical_Knowledge_Concept"/> 
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    >normal,abnormal</rdfs:comment> 
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/> 
  </owl:DatatypeProperty> 
  <owl:DatatypeProperty rdf:about="#AppeareanceReason"> 
    <rdfs:domain rdf:resource="#Empirical_Knowledge_Concept"/> 
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/> 
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string" 
    ></rdfs:comment> 
  </owl:DatatypeProperty> 
圖(28)  OWL 為基之部分經驗知識本體 (屬性) 
 
 29
 
圖(29)  Know-What 層次之經驗知識推論概念模式 
 
(ii) The Know-Why Layer of Empirical Knowledge 
    在 Know-Why 層次之經驗知識中，經驗知識概念 G 與經驗知識概念 H 之間存有因
果關係(Cause)，且經驗知識概念 H 與經驗知識概念 I 之間亦存在著因果關係(Cause)，
此時藉著可遞移屬性推理規則(如表(11)式(5)所示)，可推論出經驗知識概念 G 與經驗知
識概念 I 之間所隱含的因果關係(Cause)。此外，因果關係 Cause 與 Caused_by 之間屬於
逆屬性關係(如表(11)式(6)所示)，而經驗知識概念 H 與經驗知識概念 I 之間存有一因果
關係 Cause，即表示經驗知識概念 H 造成經驗知識概念 I 之結果，此時透過逆屬性推理
規則(如表(11)式(7)所示)，推論出經驗知識概念 I 係經由經驗知識概念 H 造成的因果關
係為 Caused_by，如圖(30)所示。 
 
圖(30)  Know-Why 層次之經驗知識推論概念模式 
 
(iii)The Know-How Layer of Empirical Knowledge 
    圖(31)為 Know-How 層次之經驗知識推論概念模式。其中。經驗知識概念 J 與經驗
知識概念 K 之間存有程序關係(Follow)，且經驗知識概念 K 與經驗知識概念 L 之間亦
存在著程序關係(Follow)，藉由可遞移屬性推理規則(如表(11)式(8)所示)，可推論出經驗
知識概念 J 與經驗知識概念 L 之間所隱含的程序關係(Follow)。另外，程序關係 Follow
與 Is_followed_by 之間屬於逆屬性關係(如表(11)式(9)所示)，而經驗知識概念 K 與經驗
知識概念 L 之間存在著程序關係(Follow)，即代表經驗知識概念 L 在經驗知識概念 K 之
前出現，此時則可經由逆屬性推理規則(如表(11)式(10)所示)，推論出經驗知識概念 K
在經驗知識概念 L 之後出現的程序關係為 Is_followed_by。 
 31
表(12) 本體論為基之跨層次經驗知識推論規則 
 
備註：(1) “X、Y、Z…”等變數表示經驗知識概念名稱 
      (2) “^”符號代表交集(AND)之意涵 
     (3) “⇒”符號代表推理之意涵 
     (4) “⊆” 符號代表屬於之意涵 
     (5) “∃” 符號代表存在著某關係之意涵 
 
(i) The Know-What Layer v.s. The Know-Why Layer 
    圖(33)為跨 Know-What 與 Know-Why 層次之經驗知識推論概念模式。經驗知識概
念 X 與經驗知識概念 Y 之間存在著因果關係(Cause)，且經驗知識概念 Y 與經驗知識概
念 Z 之間存在著分體關係(Part_of)，此時可藉著部分-整體推理規則(如表(12)式(1)所
示)，推論出經驗知識概念 X 與經驗知識概念 Z 之間所隱含的關係為因果關係 Cause。 
 
圖(33)  跨 Know-What 與 Know-Why 層次之經驗知識推論概念模式 
 
(ii) The Know-What Layer v.s. The Know-How Layer 
    在跨 Know-What 與 Know-How 層次之經驗知識推論中，經驗知識概念 U 與經驗
知識概念 V 之間存在著程序關係(Follow)，且經驗知識概念 V 與經驗知識概念 W 之間
亦存有分體關係(Part_of)，藉由部分-整體推理規則(如表(12)式(2)所示)，因此可推論出
經驗知識概念 U 與經驗知識概念 W 之間所隱含的程序關係(Follow)，如圖(34)所示。 
 33
 
(f) 本體論為基之經驗知識推論演算法： 
依據上述本體論經驗知識推論規則之設計結果，本節將設計本體論為基之經驗知識推
論演算法。此本體論為基之經驗知識推論演算法包括單層次(Single-Layer)經驗知識推論演
算法以及跨層次(Cross-Layer)經驗知識推論演算法，依序說明如下。 
(i) 本體論為基之單層次經驗知識推論演算流程 
以上述(d)之本體論為基之單層次經驗知識推論規則為基礎，設計一本體論為基之
單層次經驗知識推論演算流程，如圖(36)所示。其執行步驟說明如下: 
Step1. 輸入單層次經驗知識本體，以進行單層次經驗知識之推理。 
Step2. 判斷所輸入的經驗知識本體是否為 Know-What 且其關係為 Is_a、Part_of 或
Has_part。若是，則續執行關係值之判別(Step 3)，否則執行 Step4。 
Step3. 關係值若為 Is_a，則執行關係 Is_a之推論；關係值若為Part_of，則執行關係Part_of
之推論；關係值若為 Has_part，則執行關係 Has_part 之推論。 
Step4. 判斷所輸入的經驗知識本體是否為 Know-Why 且其關係為 Cause 或 
Caused_by。若是，則續執行關係值之判別(Step5)，否則執行 Step6。 
Step5. 關係值若為 Cause，則執行關係 Cause 之推論；關係值若為 Caused_by，則執行
關係 Caused_by 之推論。 
Step6. 判斷所輸入的經驗知識本體是否為 Know-How 且其關係為 Follow 或
Is_followed_by。若是，則續執行關係值之判別(Step7)，否則執行 Step8。 
Step7. 關係值若為 Follow，則執行關係 Follow 之推論；關係值若為 Is_followed_by，則
執行關係 Is_followed_by 之推論。 
Step8. 判斷所輸入的經驗知識本體是否為 Know-With 且其關係為 Cooperate_with。若
是，則續執行規則值之判別(Step9)，否則結束此演算流程。 
Step9. 規則值若為 Transitive，則執行關係 Transitive 之推論；規則值若為 Symmetric，
則執行關係 Symmetric 之推論。 
 
 35
      Reasoning by Relationship Follow; 
      Break; 
    Case 2: Is_followed_by 
      Reasoning by Relationship Is_followed_by; 
      Break; 
Else IF K. Layer is Know-With AND Relationship is Cooperate_with 
SWITCH (Rule) 
    Case 1: Transitive 
      Reasoning by Relationship Cooperative_with (Transitive); 
      Break; 
    Case 2: Symmetric 
      Reasoning by Relationship Cooperative_with (Symmetric); 
      Break; 
END 
圖(37)  單層次經驗知識推論之演算法 (Pseudo Code) 
 
(ii) 本體論為基之跨層次經驗知識推論演算流程 
以上述(e)之本體論為基之跨層次經驗知識推論規則為基礎，設計一本體論為基之
跨層次經驗知識推論演算流程，如圖(38)所示。其執行步驟說明如下: 
Step1. 輸入跨層次經驗知識本體，以進行跨單層次經驗知識之推理。 
Step2. 判斷所輸入的經驗知識是否涵蓋 Know-What 與 Know-Why 且關係為 Part_of 及
Cause。若是，則執行 Step3，否則執行 Step4。 
Step3. 進行 Know-What 與 Know-Why 之跨層次推論規則。 
Step4. 判斷所輸入的經驗知識是否涵蓋 Know-What 與 Know-How 且關係為 Part_of 及
Follow。若是，則執行 Step5，否則執行 Step6。 
Step5. 進行 Know-What 與 Know-How 之跨層次推論規則。 
Step6. 判斷所輸入的經驗知識是否涵蓋 Know-What 與 Know-With 且關係為 Part_of 及
Cooperate_with。若是，則執行 Step7，否則結束此演算流程。 
Step7. 進行 Know-What 及 Know-With 之跨層次推論規則。 
 
 
圖(38)  本體論為基之跨層次經驗知識推論演算流程 
 37
表(13)  Know-What 層次經驗知識推理規則實例 
Em
pirical K
now
ledge before R
easoning 
  <owl:Class rdf:ID="Mold_Development"/> 
  <owl:Class rdf:ID="Feed_System_Design"> 
    <rdfs:subClassOf rdf:resource="#Mold_Development"/> 
  </owl:Class> 
  <owl:Class rdf:ID="Detail_Molding_Design"> 
    <rdfs:subClassOf> 
      <owl:Class rdf:ID="Molding_Layout"/> 
    </rdfs:subClassOf> 
  </owl:Class> 
  <owl:Class rdf:ID="Mold_Base_Selection"> 
    <rdfs:subClassOf> 
      <owl:Class rdf:about="#Molding_Layout"/> 
    </rdfs:subClassOf> 
  </owl:Class> 
  <owl:Class rdf:ID="Moldability_Assessment"> 
    <rdfs:subClassOf> 
      <owl:Class rdf:ID="Pre-molding_Process"/> 
    </rdfs:subClassOf> 
  </owl:Class> 
  <owl:Class rdf:about="#Molding_Layout"> 
    <rdfs:subClassOf rdf:resource="#Mold_Development"/> 
  </owl:Class> 
  <owl:Class rdf:about="#Pre-molding_Process"> 
    <rdfs:subClassOf rdf:resource="#Mold_Development"/> 
  </owl:Class> 
  <owl:Class rdf:ID="Shrinkage_Design"> 
    <rdfs:subClassOf rdf:resource="#Pre-molding_Process"/> 
  </owl:Class> 
</rdf:RDF> 
R
easoning  
R
ules U
sed 
(?A rdfs:subClassOf ?B) ר (?B rdfs:subClassOf ?C) 
⇒ (?A rdfs:subClassOf ?C) 
 39
 
圖(41)  諮詢專家之推薦流程 
 
(a) 產品經驗知識註冊/撤銷： 
圖(42)為產品經驗知識註冊與撤銷之程序，其包括四個主要步驟，即諮詢專家的個人
資訊(Profile)與可分享的(Sharable)產品經驗知識之輸入、產品經驗知識註冊、諮詢專家個
人資訊與可分享的產品經驗知識之撤銷以及產品經驗知識撤銷。其中，產品經驗知識註冊
步驟包含個人的(Personal)知識本體建構、概念名稱與同義字(Synonym)比對、概念節點分
群以及產生一新總體的(Global)知識本體等子步驟。最後，以一產品經驗知識註冊與撤銷之
實例來進行方法之運作說明。 
 
圖(42)  產品經驗知識註冊與撤銷之程序 
 
(i) 諮詢專家的個人資訊與可分享的產品經驗知識之定義： 
 41
 
Step2. 概念關係建構 
    根據 Step1 所比對到的企業知識概念，運用 OWL 知識本體推論法則
(Ontology Reasoning Rule)[15]來建構可分享的知識概念間之關係，其建構法則如
下所示： 
(?P rdf:type owl:TransitiveProperty) ∧ (?A ?P ?B) ∧ (?B ?P ?C)⇒ (?A ?P ?C) 
    其中，“P”為及物屬性，而“A”、“B”與“C”則為企業知識概念，至於“ ∧ ”是指
交集符號。 
‧ 個人的知識本體與總體的知識本體之整合 
    完成諮詢專家之個人知識本體建構後，需將其與產品經驗知識註冊儲存庫
(Product Empirical Knowledge Registration Repository)內的總體知識本體進行整合，
以建立諮詢專家之總體產品經驗知識概念，其整合步驟依序說明如下： 
Step1. 概念名稱與同義字比對 
    概念名稱與同義字比對主要運用 Jaccard Coefficient (Eq. (1))方法來進行個
人產品經驗知識概念與總體產品經驗知識概念之名稱與同義字比對，其比對演
算程序如圖(44)所示。 
 
圖(44)  個人知識概念與總體知識概念之名稱與同義字比對的演算法 
 
Step2. 經驗知識概念節點分群 
    本計畫利用階層式聚類分群演算法(Agglomerative Hierarchical Clustering, 
AHC)[10](式(9))來進行經驗知識概念節點的階層(Level)與關係(Relationship)分
群，其演算法如圖(45)所示。 
0|)'|(min),( ', ≈−= ∈∈ ppCCS ji CpCpji                        (9) 
    其中，S 係指兩知識概念 Ci, Cj為同一分群，而 p 為知識概念 C 之父節點。 
 43
Input Consultative
Expert’s Profile
Input Sharable Product 
Empirical 
Knowledge Concepts
Name 1 Mold Development
Input Practical 
Knowledge Items
Know-What
Definition
Characterization
Sharable Product Empirical Knowledge Concept
Name 2
Name 3
Name 4
Moldability Assessment
Parting Line Design
Detail Molding Devising
Know-How
Procedure
Method &
Technology
We can use the MAGMAsoft
tool for analysis the distributing 
flow condition of melting metal 
and the appearance of aluminum 
alloy solidification.
Know-When
Domain_and_Context
This domain is focus in the 
Molding Product Design of 
aluminum alloy.
Know-Where
Activity Product design. Process development.
Know-Who
Capacity Chief of Die Casting Section 
Practical Knowledge Item
Empirical Knowledge Type Know-What, Know-How, Know-When, 
Know-Where, Know-Who
Consultative Expert’s Profile
Enterprise_ID
Name
Specialty
Auther
E035
Molding Product Design
ID
S25
The mold development includes 
three steps of mold dimension and 
material determination, parting line, 
runner, and gate determination, and 
temperature control.
Mold development mainly develops 
the hard duplicate space to mass
production the product.
The characterization of mold 
development involves technique
intensive and knowledge intensive.
 
圖(46)  輸入專家個人資訊與可分享的知識(實例) 
 
‧ 產品經驗知識註冊 
   產品經驗知識註冊主要先進行個人知識本體之建構，其再與總體知識本體整
合，茲敘述如下： 
(A)個人知識本體之建構 
Step1. 概念比對 
    利用上述概念比對方法將諮詢專家之可分享的產品經驗知識概念與其
所屬企業之知識概念進行比對，其計算結果如表(14)所示。 
 
 
 
 
 
 
 45
表(15)  個人知識概念與總體知識概念之概念名稱與同義字相似度比對 
 
 
Step2. 經驗知識概念節點之分群 
    針對表(15)之知識概念比對結果，運用上述經驗知識概念分群方法進行
知識概念分群，其依階層之分群(Cluster Concept Nodes by Level, CL)結果如
下所示： 
CL1={Mold Development} 
CL2={Moldability Assessment, Parting Line Design, Detail Molding Design} 
CL3={Pre-molding Process, Molding Layout, Feed System Design} 
CL4={Moldability Assessment, Shrinkage Design} 
CL5={Mold Base Selection, Detail Molding Design}  
    而依關係之分群(Cluster Concept Nodes by Relationship, CR)結果如下所
示： 
CR1={Mold Development, Pre-molding Process} 
CR2={Mold Development, Molding Layout} 
CR3={Mold Development, Feed System Design} 
CR4={Pre-molding Process, Moldability Assessment} 
CR5={Pre-molding Process, Shrinkage Design} 
CR6={Molding Layout, Mold Base Selection} 
CR7={Molding Layout, Detail Molding Design} 
CR8={Mold Development, Parting Line Design} 
Step3. 新總體知識本體產生  
    依據 Step2 之分群結果，先將 CL1、CL2、CL3、CL4 與 CL5 進行知識概念
之階層定位，再依據 CR1、CR2、CR3、CR4、CR5、CR6、CR7 以及 CR8 建立
各階層知識概念間的關係。 
 
 47
 
 
圖(48)  產品經驗知識撤銷(實例) 
 
(b) 諮詢專家推薦： 
    根據上述產品經驗知識註冊，本計畫描述諮詢專家推薦之發展。圖(49)中，諮詢專家
推薦程序可包含三個主要步驟，即被需求的知識解析(Requested Knowledge Parsing)、產品
經驗知識之概念比對以及實務知識物件之屬性名稱集合(Attribute Name Set)的比對。最後，
以一諮詢專家推薦之實例來說明此方法之運作。 
 
 49
知識概念之比對。若無比對結果，則再進行被需求的知識概念與總體知識概念之實務
知識物件屬性的比對，依序說明如下： 
‧ 被需求的產品經驗知識概念與總體產品經驗知識概念之比對 
    此步驟先比對概念名稱，若無比對到合適的總體知識概念，則再比對知識概念
的同義字，其概念相似度計算公式 Jaccard Coefficient 如式(8)所示，其比對演算流程
如圖(50)所示。 
 
圖(50)  被需求的知識概念與總體知識概念比對之演算法 
 
‧ 被需求的產品經驗知識概念與總體產品經驗知識概念之實務知識物件屬性的比對 
    此步驟採取 TF-IDF 方法[12]以媒合出與被需求的知識概念最近似的總體知識
概念，其計算公式如式(10)~(12)所示。 
(A)詞頻(Term Frequency, TF)：主要計算被需求的知識概念 r 在總體實務知識物件之
屬性 g 的出現頻率。 
r
gr
all
ntf
n
=                                 (10) 
    其中 nr 為被需求的知識概念 r 在總體實務知識物件之屬性 g 的出現次數，
而 nall則為總體實務知識物件之屬性 g 中具有意義的總詞數。 
(B)逆向描述頻率(Inverse Description Frequency, IDF)：IDF 為被需求的知識概念 r 在
某一總體知識概念之所有實務知識物件屬性裡所出現之頻率的倒數。 
      
r
r df
NIDF 2log=                              (11) 
    其中 N 為該總體知識概念所擁有的實務知識物件屬性的總數，而 dfr則為該
總體知識概念所擁有的實務知識物件屬性中，有出現總體知識概念 r 的實務知識
物件屬性總數。 
    將式(10)與式(11)相乘積即得權重，如式(12)所示： 
rall
r
gr df
N
n
nW 2log×=                             (12) 
(iii)實務知識物件之屬性名稱集合的比對： 
本計畫根據上述概念比對的結果，再進行屬性名稱集合的比對，其比對模式可分
 51
For RANix in RANi
RANi and GANj
Store GANjy
END
For GANjy in GANj
RANix=GANjy
YES
NO
‧RANix represents the element in set of attribute name RANi
(i.e., RANix = {RANi1, RANi2, ... , RANix})
‧GANjy represents the element in set of attribute name GANj
(i.e., GANjy = {GANj1, GANj2, ... , GANjy})  
圖(52)  過濾不同的屬性名稱之演算法 
 
 
圖(53)  單一知識專家之屬性名稱集合比對的演算法 
 
‧多知識專家之屬性名稱集合比對(Attribute Name Set Matching based on Multi-Experts) 
    此步驟運用 Power Set 方法[6]來進行多知識專家之屬性名稱集合比對，其演算
流程如圖(54)所示。 
 
 53
Step3. 詞彙的詞性與關聯性之標註：如圖(55)所示，以 Sentence_1 為例進行標註詞
彙，其步驟如下： 
(A) 標註詞性：將 Sentence_1 中的所有詞彙進行詞性標註，其結果如下： 
What<WP> are<VB> the<DT> Moldability Assessment <NNP>, Shrinkage 
Design<NNP>, and<CC> Sprue Design<NNP>? 
(B) 專有名詞標記：根據(1)之結果，再進行專有名詞標記。其結果如下： 
What<WP> are<VB> the<DT> Moldability Assessment<NNP> <Term>, 
Shrinkage Design<NNP> <Term>, and<CC> Sprue Design<NNP> <Term>? 
Step4. 句法剖析：藉由語料庫(Corpus)中所定義的需求表達樣板，並根據樣版中的
從屬標記標籤，將知識需求者的需求描述中之關鍵詞彙萃取出來，其結果如圖(55)
所示。 
 
圖(55)  詞彙的詞性與關聯性之標註以及句法剖析之步驟 
 
‧ 知識概念比對 
    由被需求的知識解析結果得知，知識需求者欲搜尋有提供 “Moldability 
Assessment”、“Shrinkage Design”以及“Sprue Design”等概念之諮詢專家，因此運用圖
(50)之演算法進行知識概念之比對，其比對結果如表(16)所示。 
 
表(16)  知識概念比對結果 
 
 55
表(18)  “Moldability Assessment”之單一知識專家的屬性名稱集合比對 
 
 
表(19)  “Shrinkage Design”之單一知識專家的屬性名稱集合比對 
 
 
表(20)  “Feed System Design”之單一知識專家的屬性名稱集合比對 
 
 
    由於表(18)中沒有出現屬性名稱集合的比對結果(即相似度值未達 1)，因此將執
行多知識專家之屬性名稱集合比對，其比對結果如表(21)所示。 
 
 
 
 
 
 
 57
 
圖(56) 產品生命週期知識服務平台介面 
 
九、結論 
本計畫之主要成果與貢獻可分為三方面來探討，茲敘述如下： 
(1) 在學術理論及方法上： 
(a) 概念與模式： 
(i) 提出一產品生命週期知識服務概念； 
(ii) 創立一整合產品生命週期、供應鏈以及知識管理之「產品生命週期知識服務模式」； 
(iii) 設計一結合物件概念與本體論工程技術之產品知識模式； 
(b) 系統架構： 
(i) 設計與建構一產品生命週期知識服務系統架構； 
(ii) 設計與建構一產品知識儲存庫。 
(c) 核心技術： 
開發知識整合與分享、知識推論以及知識提供者推薦等相關技術與軟體元件。 
綜合上述，本計畫所研發之產品生命週期知識服務模式、技術與平台，除了可作為實現產品
生命週期知識服務系統之依據，亦可為知識管理領域開闢新的研究方向。 
(2) 在實際應用上： 
(a) 提供產品相關知識，以協助顧客更有效的使用該產品而創造價值，進而為產品供應者本身
提昇競爭力； 
(b) 使產品開發從單點式提昇為生命週期協同式，使能更有效地整合產品生命週期各階段活動
資訊與知識，以進行協同式開發與生產，期縮短上市時間、降低成本以及提昇產品品質與
市場價值，進而提昇產品生命週期各階段參與廠商之營運效益與整體競爭力。 
(c) 使新進員工更快速了解產品特性與相關知識，以縮短員工訓練時間，進而幫助工程師提昇
解決問題之能力與縮短解決問題之時間。 
(d) 透過知識分享機制，不僅提高產品生命週期各階段活動參與廠商人員之知識能力，且能提
高人員與公司之價值。 
(e) 透過知識管理機制來進行產品知識之獲取、保存、整合與分享，期協助產品生命週期各階
 59
2008. 
[13] Uschold, M. and Gruninger, M., Ontologies: Principles, methods and application, Knowledge 
Engineering Review, Vol. 11, No. 2, pp. 93-155, 1996. 
[14] Wang, C. B., Chen, Y. J., Chen, Y. M., and Chu, H. C., Development of technology for customer 
requirement-based reference design retrieval, Robotics and Computer Integrated Manufacturing, 
Vol. 22, No. 1, pp. 33-46, 2006. 
[15] Wang, X. H., Zhang, D. Q., Gu, T., and Pung, H. K., Ontology based context modeling and 
reasoning using OWL, In Proceedings of the 2nd IEEE Annual International Conference on 
Pervasive Computing and Communications, pp. 18-22, 2004. 
[16] Weber, R. O. and Aha, D. W., Intelligent delivery of military lessons learned, Decision Support 
Systems, Vol. 34, No. 3, pp. 287-304, 2003. 
 
附錄(96 至 98 年度專題研究計劃所發表之相關國際期刊(SSCI/SCI)、國內期刊與研討會論文) 
一、國際與國內期刊論文： 
(1) Chen, Y. J., Chen, Y. M., and Huang, C. Y., Concept feature-based ontology construction and 
maintenance, International Journal of Innovative Computing, Information and Control, Vol. 7, No. 7, 
2011. (In Press) (SCI) [Impact Factor: 2.932] [Rank: 3/59] 
(2) Chen, Y. J., Wu, M. S., Chu, H. C., and Chen, Y. M., Distributed product knowledge service: Model 
and system framework, The Service Industries Journal, Vol. 31, No. 6, 2011. (In Press) (SSCI) 
[Impact Factor: 0.283] [Rank: 101/112] 
(3) Chen, Y. J., Chen, Y. M., Chu, H. C., and Wu, M. S., Development of an ontology-based expert 
recommendation system for product empirical knowledge consultation, Concurrent Engineering: 
Research and Applications, Vol. 18, No. 3, pp. 233-253, 2010. (SCI) [Impact Factor: 0.959] [Rank: 
19/37] 
(4) Chen, Y. J., Chen, Y. M., Su, Y. S., and Wen, C. C., Ontology-based distributed case-based reasoning 
in virtual enterprises, International Journal of Software Engineering and Knowledge Engineering, 
Vol. 19, No. 8, pp. 1039-1082, 2009. (SCI) [Impact Factor: 0.327] [Rank: 201/246] 
(5) Chen, Y. J., Chen, Y. M., and Chu, H. C., Development of a mechanism for ontology-based product 
lifecycle knowledge integration, Expert Systems with Applications, Vol. 36, No. 2, pp. 2759-2779, 
2009. (SCI) [Impact Factor: 2.596] [Rank: 1/64] 
(6) Chen, Y. J., Chen, Y. M., and Chu, H. C., Enabling collaborative product design through distributed 
engineering knowledge management, Computers in Industry, Vol. 59, No. 4, pp. 395-409, 2008. 
(SCI) [Impact Factor: 2.014] [Rank: 20/94] 
(7) 陳育仁、吳孟昇、陳裕民，虛擬企業之產品知識提供者推薦機制研發，Journal of Advanced 
Engineering (先進工程期刊)，Vol. 4，No.3，pp. 229-237，July 2009。 
 
二、研討會論文： 
(1) Chen, Y. J., Chen, Y. M., and Wu, M. S., An expert recommendation system for product empirical 
knowledge consultation, In Proceedings of the 3rd IEEE International Conference on Computer 
Science and Information Technology, pp. 23-27, 9-11 July 2010, Chengdu, China. 
(2) Chen, Y. J., Chen, Y. M., Huang, C. Y., and Chao, C. Y., Concept feature-based ontology 
國科會專題計畫 96-2221-E-006-276-MY3 
出席國際會議報告 
 
ED-MEDIA 2010-World Conference on Educational Multimedia, 
Hypermedia & Telecommunications 
 
June 29-July 2, 2010 - Toronto, Canada 
 
陳 裕 民 
國立成功大學 
製造資訊與系統研究所 教授 
 
 
壹、 ED-MEDIA 2010 
ED-MEDIA - World Conference on Educational Multimedia, Hypermedia & 
Telecommunications is an international conference, organized by the Association for the 
Advancement of Computing in Education (AACE). This annual conference serves as a 
multi-disciplinary forum for the discussion and exchange of information on the research, 
development, and applications on all topics related to multimedia, hypermedia and 
telecommunications/distance education. The ED-MEDIA 2010 has attracted more than 
one thousand participants from over 70 countries, and the conference committee have 
been formed with over two hundred and sixty committees members who are mainly 
research center heads, faculty deans, department heads, professors, and research 
scientists from over 20 countries.. 
 
貳、 ED-MEDIA Topics  
 
The scope of the conference includes the following major topics related to the 
educational and developmental aspects of multimedia/hypermedia and 
telecommunications: 
1. Infrastructure: Architectures for Educational Technology Systems、Design of 
Distance Learning Systems、Distributed Learning Environments、Methodologies 
Abstract: 
We, as a community of educators (note, I do not say ‘educational technologists’), have 
spent decades exploring uses of technology that might enhance teaching and learning. 
In the last two decades, I and my colleagues have launched ourselves enthusiastically 
into investigating a number of possibilities – online communities of learners, online 
communities of practice … (lots of communities), classrooms without walls extending 
locally and globally, multimedia-enhanced games and simulations, computer-assisted 
interactive tutorials, just-in-time training, learning repositories, etc., etc. Additionally, 
now we are exploring virtual worlds, mobile technologies and a range of social media. 
Our research has persuaded our institutions (and our governments) to change 
investment priorities; together we have changed the educational (and life?) experiences 
of thousands and thousands of students. All good … or is it? What have we learned 
from the overall experience of these last two decades? What are the highlights that have 
really increased our understanding of how to facilitate student learning? Have we really 
learnt from the false starts and downright real mistakes? 
This presentation is idiosyncratic; it is influenced by my own meanderings across 
continents and projects. By referring to actual past and present implementations of 
using technology in teaching and learning in higher education that I have been involved 
in, I will extract the enduring themes that emerge across contexts and times. These 
themes include the need to: negotiate educational beliefs in each situation; focus on the 
details of learning design; consider the importance of relevant and authentic tasks that 
enable learners to develop lifelong learning and earning capabilities; and accommodate 
shifting roles of both teachers and learners in a mutual comfort zone so that all 
participants benefit (teachers have needs too!). In the exploration, I will try to 
demonstrate how technology can support these educational goals – even the often 
downplayed so-called web 1.0 suite of options. I am optimistic that we and the domain 
of educational technology have matured (well, sort of …), and that newer web 2.0 and 
web 3.0 technologies offer new possibilities. I will conclude with laying down some 
challenges for those working in this area for the next few years of exploratory 
adventure … 
  
(2) What Would Learning in an Open World Look Like? A Vision for the Future 
By: Gráinne Conole - Professor of E-Learning in the Institute of Educational 
Technology, The Open University, UK 
  
  
(4) Technologies for Orchestration 
By: Pierre Dillenbourg - Professor of Computer Science, Swiss Federal Institute of 
Technology in Lausanne, Switzerland 
  
Abstract: 
Orchestration refers to designing and conducting 'integrated' learning scenarios, i.e. 
scenarios that combine individual activities (reading, summarizing,...), team activities 
(arguing, explaining, problem solving,...) and class-wide activities (lecturing, 
debriefing,...). The teacher has such a key role to play when conducting these complex 
scenarios that I dare to describe our technologies as being 'teacher centric'.  The 
management of activities inside and outside the classroom has a physical dimension 
that I will illustrate with environments that are integrated into everyday artifacts (lamps, 
tables,...). The learners interact by manipulating physical objects (tangibles) such as tiny 
shelves to layout a warehouse mock-up. The use of simple paper sheets as input and 
output of these environments supports an integrated workflow across the different 
phases of a pedagogical scenario, including the teacher's routines and the students' 
homework. This talk is not about virtual space, it's about the physicality of classroom 
interactions. 
 
肆、 Invited Speech 
(1) Vygotsky in Twenty-First-Century Research 
By: Irina Verenikina - Director of Graduate Teaching at the Faculty of Education, 
University of Wollongong, Australia 
  
Abstract: 
At the 2008 Ed-Media conference, a list of most often cited papers in Ed-Media 
2004-2008 was revealed (Ochoa, Mendez & Duval, 2009). Vygotsky’s theoretical work, 
originally published in Russia in the 1930s, came top of the list by a large 
margin.  This paper examines why, and how this theory still can be relevant to 
twenty-first-century research. It is argued that an effective use of modern educational 
technologies calls for the use of advanced pedagogies. Vygotsky’s theory provides a 
profound understanding of teaching and learning that reflect the complexity of social 
constructivist-based frameworks of learning (Neo & Neo, 2001, 2002,, 2004, 2007, 
2009, 2010; Neo, 2003, 2004, 2005, 2007), which included project-based learning, 
authentic learning, problem-solving learning (PSL), collaborative learning and 
cooperative learning.  By effectively marrying multimedia technology and curriculum, 
we have successfully incorporated these current and modern approaches to education 
that enabled students to become active learners, within both classroom and online 
environments.  Through our 11 years of experience in these various research projects, 
we have developed several teaching and learning frameworks in the University.  This 
talk will provide insights to the development of such teaching and learning 
environments (with 2 examples highlighted) within Malaysian curriculum-driven 
classrooms and discuss the successes and challenges of such frameworks. 
 
(3) Toward Open & Connected Learning: Transforming Pedagogy through Social 
Networking & New Digital Affordances 
By: Alec Couros - Professor of Educational Technology and Media, University of 
Regina, Canada  
  
Abstract: 
This presentation draws from research & practical experience gained through the 
development of open undergraduate and graduate courses focused on social media in 
teaching & learning. Through the development of 'open teaching' strategies,  learning 
environments can become a vibrant mixture of credit and non-credit students; 
individuals working together from locations around the world in an environment of 
sharing, transparency, and collaboration. The session facilitator will lead participants 
through a rationale and discussion of open pedagogical strategies, discuss what was 
learned through the 'open teaching' experience, and will assist individuals in 
understanding the benefits of and processes involved in becoming an open educator. 
 
(4) Environments and Assessments for an Inclusive Knowledge Society 
By: Marlene Scardamalia - Director, Institute for Knowledge Innovation and 
Technology, Canada  
  
personalise not only what tools and content are available, but also to have access to 
scaffolding to support their learning. Emerging practices with social networking 
technologies signal the need for pedagogies that are more social, personal and 
participatory. This invited address will present emerging best practice in designing 
learning environments, activities and forms of assessment tasks that engage and 
motivate students.  
 
伍、 Parallel Paper Presentation  
 
A total of 381 full papers were submitted, of which 247 were accepted for presentation. 
A further 168 brief papers were submitted and 131 were accepted. Each paper was 
peer-reviewed by at least two members of the Program Committee (over 150 people 
throughout the world.  
My paper entitled “Intention-aware-based Learning Map Development for 
Problem-oriented eLearning” was presented at Fri, Jul. 2 10:30 AM-11:00 AM in the 
session of Design of Distance Learning Systems. Approximately 2 people attended my 
presentation and six technical questions were answered. The abstract of this paper is as 
follow: 
 
This paper presented an approach to the development of learning maps based 
on users’ intention in using problem-oriented e-Learning. In this approach, 
users’ intention is first extracted and transformed into knowledge requirements, 
which is then used to develop a learning map. By using ontology technology, 
users’ intention model and a domain knowledge map are developed to facilitate 
knowledge representation and knowledge searching. The results of this 
research may help solve the problem of learning disorientation and thus fulfill 
the goals of e-Learning and realize its values. The proposed approach is 
implemented in a problem-oriented e-learning platform with an emphasis on 
mathematics learning problem solving for students with mild disabilities. 
 
 
• What electronic tools are there to facilitate e-learning, distance education and 
co-operative training?  
Since part of my current research focuses on in-service and pre-service teachers’ 
professional development, I paid more attentions on theory of professional distance 
learning and methodologies for knowledge content development.  
However, as far as the development of knowledge and competence of pre-service 
and in-service special education teachers are concerned, research efforts are still 
required in the following issues: (1). Most of the researches tended to emphasize more 
on applications of information technologies and fail to provide sufficient guidance on 
learning concepts or strategies; (2). Most of them provided only knowledge and 
teaching materials related to education theories but not practical knowledge required for 
solving students’ learning problems; and (3). Their functionality covered only 
mechanisms for storing and searching knowledge and information, but not the 
acquisition, assessment, management, and maintenance of knowledge, or teaching 
experience feedbacks.  
 
 
Control Systems Data Communications 
Data Compression Data Encryption 
Data Mining Database Systems 
Digital Library Digital Signal and Image Processing 
Digital System and Logic Design Distributed and Parallel Processing 
Distributed Systems E-commerce and E-governance 
Event Driven Programming Expert Systems 
High Performance Computing Human Computer Interaction 
Image Processing Information Retrieval 
Information Systems Internet and Web Applications 
Knowledge Data Engineering Mobile Computing 
Multimedia Applications Natural Language Processing 
Neural Networks Parallel and Distributed Computing 
Pattern Recognition Performance Evaluation 
Programming Languages Reconfigurable Computing Systems 
Robotics and Automation Security & Cryptography 
Software Engineering & CASE System Security 
Technology in Education Technology Management 
Theoretical Computer Science Ubiquitous Computing 
Wireless Sensor Networks Wireless Communication and Mobile Computing 
 
    上述主題分散於 4間會議室同時進行論文發表，本人主要參與 Session-ICCSIT-01與
Session-ICCSIT-02之論文發表場次，除此之外，並於 7月 10日下午二點在 Classroom 204進行約
十五分鐘的論文發表，順利完成報告後亦與主持人和現場聽眾進行問答互動，並於會後深入探討相
關問題，且獲取許多寶貴建議，對於未來研究有新的啟發與見解。 
 
二、與會心得 
 
    學生很榮幸能參加此次 IEEE – ICCSIT於大陸四川成都之電子科技大學所舉行的國際學術盛
會，且有機會在會議期間發表個人研究成果。在研討會會期三天中，由於與會者來自世界各國，從
各場次之論文發表中體會到不同國家報告者的特性與專長，且當報告者完成報告後聽眾與報告者之
熱絡互動亦為國內研討會中所罕見的，這點讓學生覺得很値得學習並收獲良多。由於研究不能閉門
造車。因此，參與國際會議除了可讓學生了解目前各國相關研究的發展現況與未來趨勢，且有機會
與各領域之專業人才交流之外，對個人研究亦有很大的幫助，進而拓展國際視野。 
    此外，研討會之規模也讓學生大開眼界，並深深體會台灣之渺小，作為一研究生必須要放眼全
球，努力提升自己的競爭力，才能趕上世界潮流。此次出國深感語文的重要性，英文成為與各國學
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
