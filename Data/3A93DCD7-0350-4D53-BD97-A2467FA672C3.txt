 
（一） 計畫中文摘要 
本研究計畫以聯合補貨問題為核心，主要分為三大部分：透過第一部分的分析，對影響聯
合補貨政策的核心關鍵有較深入的了解後，第二階段擬研發出一套不同於間接分群法
RAND 的啟發式演算法，此方法並將以直接分群法為架構，先將聯合補貨問題單純化，演
化為一組合式最佳化的問題，並以禁忌搜尋法為主，應用於求解此組合式最佳化問題。因
為此方法根據直接分群的概念而生，直接分群法乃直接將欲訂購之料項分群，並未考慮群
組訂購週期的關聯性，然而相對於直接分群法，RAND 所屬的間接分群法卻有此功能，即
各群組的訂購週期必須為一共同基本週期的整數倍，此乃見接分群法的最大優勢，於本研
究第三階段，擬將第二階段所開發之禁忌搜尋法融合間接分群法之訂購週期關聯性的優
點，為一整合式分群概念之啟發式演算法，此法將與 RAND 針對不同型態之聯合補貨問題
進行比較其計算效率與績效，並求解具有限制條件如有限運輸資源或預算之聯合補貨問題。 
（二） 計畫英文摘要 
The second part of this study will be focused on developing a DGS-based (Direct 
Grouping Strategy-based) heuristic. To employ the DGS for solving the JRP, each type of 
item will be assigned with a group number. The item types with the same group number will 
be grouped together within the same order batch for saving some ordering costs. Such a 
problem can be classified as a combinatorial optimization problem. A modified tabu search 
method will be then applied to this combinatorial optimization problem. The tabu search 
method starts by marching to a local optimal solution. The method records recent moves by 
building a tabu list, which is used to prevent a previous move from being repeated. 
Comparisons on the RAND method and the developed tabu search method will be conducted 
throughout solving various types of the joint replenishment problems.      
After completing the DGS-based Tabu search method, the third part of the study will be 
centered at integrating the IGS concepts into the developed tabu search method. Not like a 
DGS which provides the flexibility of grouping the items for an order batch, an IGS requires 
that the order cycle time for every item type must be a multiple of a common cycle time to 
further save more ordering costs. The searching procedures of the developed tabu search 
method will then be equipped with adding such good concepts of the IGS to become a hybrid 
grouping strategy (HGS). Computational comparisons between the RAND method and the 
HGS-based tabu search method will be carried out to evaluate the performance of the 
developed approach. The proposed method will also be tested by solving more realistic JRPs 
in which certain constraints in real-world such as delivery capacity and limited budget are 
taken into account. 
 
（三） 報告內容 
本研究對於聯合補貨問題，設計一禁忌搜尋法進行求解，並且以 C++程式語言進行程
式的撰寫，將求解的結果與 Olsen(2005)所提出的演化演算法進行比較。而問題的設定乃參
考 Olsen(2005)所採用的聯合補貨問題設定，以進行相關求解；於 Olsen(2005)所採用的聯合
補貨問題當中，料項的五項參數進行相關的假設，並且將每一個料項參數皆設定具有三水
定會使得搜尋空間過於鬆散，而較無法有效地尋獲適當的基本訂購週期」，根據上述論點所
言，Goyal(1993)對於 RAND 方法提出了搜尋下界限的修正，如公式(15)所示；除了此修正
的論點之外，RAND 方法中演算過程及觀念，皆與 Kaspi 和 Rosenblatt(1991)所提出的方法
相同。 
   ( )
( )
⎡ ⎤⎢ ⎥⎢⎢ ⎥⎢ ⎥⎣ ⎦
∑
∑
N
i
i=1 i 1
min N
i i i 1
i=1
m2(M + )k tT =
D h k t
⎥，t1 以公式(16)計算，ki以公式(5)計算      (15) 
    
⎡ ⎤⎢ ⎥⎣ ⎦
1
2
i
1
i i
2mt = min D h ，i=1,2,…,N。                                 (16) 
由於Olsen(2005)是使用Goyal(1993)所提出的RAND方法以論證其演化演算法為有效的
解決方法，而為了與 Olsen(2005)所提出的方法在同一標準之下進行比較，因此本研究所採
用的 RAND 方法為採用 Goyal(1993)所提出的相關修正；關於其搜尋的空間均等部分(W)，
Kaspi 和 Rosenblatt(1991)提出當 W 為 20 的時候，其搜尋的結果將近於最佳解，因此本研究
將 W 設定為 20。 
本研究首先將禁忌搜尋法結合 HGS 策略的搜尋結果與 RAND 所尋獲的結果進行比較，
並且將其整理分類為下列三部份： 
◎  歸納本研究所提出的方法對於 243 個料項參數組合所求解的結果當中，可以尋獲
等於或者是優於 RAND 的結果，總共有 222 項組合。 
◎  歸納本研究所提出的方法對於 243 個料項參數組合所求解的結果當中，可以尋獲
優於 RAND 的結果，總共有 96 項組合。 
◎  歸納本研究所提出的方法對於 243 個料項參數組合所求解的結果當中，可以尋獲
與 RAND 相同的結果，總共有 182 項組合。 
另一方面，在同一個料項參數組合中，可能會有部分的問題是「與 RAND 相同的結果」，
而部分的問題是「優於 RAND 的結果」，因此，在上述的第一個數據部份當中，「等於或者
是優於 RAND 的結果」的 222 項參數組合數為「優於 RAND 的結果」的 96 項組合，和「與
RAND 相同的結果」的 182 項組合之交集組合數。根據上述所提，本研究所提出之方法與
Olsen(2005)所提之演化演算法之比較可彙總於表 2： 
 
表 2 演化演算法與禁忌搜尋法搭配 HGS 策略對於 RAND 之比較 
 禁忌搜尋法搭配 HGS 策略 演化演算法-Olsen(2005) 
等於或者是優於 RAND
的料項參數組合數 222 N/A 
優於 RAND 
的料項參數組合數 96 31 
等於 RAND 
的料項參數組合數 182 N/A 
由表 2 可得知，在「優於 RAND 的料項參數組合數」之下，本研究所提出之結果優於
Olsen(2005)的結果。另一方面，在其他兩種情形之下，Olsen(2005)並無提出相關的結果；
而本研究所提出之結果可以論證，本研究所提出之方法，在 243 種料項參數組合中，可以
處理大多數的組合情形。 
比例(%)」數據；舉例而言，在表 4-3 中的第一種料項參數組合之下，0.15%為 EA 優於 RAND
的問題比例為 19.7%之下的成本節省率；換句話說，上述所言為「在 30 個問題數中，EA
可尋獲比 RAND 還要好的結果之問題數將近有 6 個，而在這 6 個問題情形之下，EA 所求之
成本結果優於 RAND 所求之成本結果的平均為 0.15%」；IV 欄的「成本節省率(%)-TS」結果
則對應於 II 欄的「TS 優於 RAND 的問題比例(%)」數據。 
根據表 3，在 I 與 II 欄的「優於 RAND 的問題比例」評估指標當中，本研究所提出的
禁忌搜尋法，在 31 種料項參數組合的求解結果當中，總共有 20 種求解結果會優於演化演
算法所提出的結果，也就是第 II 欄大於第 I 欄的數據，總共有 20 種組合；另外在「平均總
成本的節省比例」的評估指標當中，本研究所提出的禁忌搜尋法，在 31 種問題型態的求解
結果當中，總共有 17 種求解結果會優於演化演算法所提出的結果，也就是第 IV 欄大於第
III 欄的數據，總共有 20 種組合。 
根據上述所提，在「優於 RAND 的問題比例」的評估指標當中，本研究進一步觀察在
此指標之下的兩種情形，如下所列： 
◎ 在 TS 優於 EA 的 20 種情形之下，I 欄的「EA 可尋獲優於 RAND 的問題比例」數據，
與 II 欄的「TS 可尋獲優於 RAND 的問題比例」數據的平均差異為多少。 
◎ 在 EA 優於 TS 的 11 種情形之下，I 欄的「EA 可尋獲優於 RAND 的問題比例」數據，
與 II 欄的「TS 可尋獲優於 RAND 的問題比例」數據的平均差異為多少。 
本研究利用表 4 對於上述情形進行整理： 
 
表 4「優於 RAND 的問題比例」指標之探討 
 EA 優於 TS 之情形 TS 優於 EA 之情形
料項參數組合 11 20 
平均差異(%) 5.22 13.16 
 
根據上述結果，本研究所提出之方法，在兩種評估指標當中，均較優於 Olsen(2005)所
提出的演化演算法；另一方面，由表 4 的數據可以得知，本研究所提出的方法，在 31 種料
項參數組合中，可以尋獲比 Olsen(2005)所提之演化演算法還要好的組合數為 20 組；另一
方面，在這 20 組當中，本研究所提之方法可處理的問題比例，比 Olsen(2005)所提之演化
演算法還要多 13.16%；換句話說，上述所言為「在 20 組可尋獲比演化演算法還要好的結
果之組合情形之下，本研究所提之方法，在每一組組合的 30 個問題數中，可以尋獲比 RAND
好的問題數，比演化演算法還要多，多約 4 個問題數」。另一方面，演化演算法優於本研究
所提方法的組合數情形之下，其平均可以尋獲比 RAND 好的問題數，只比本研究所提方法
多約 2 個問題數；因此本研究所提方法與 Olsen(2005)所提之演化演算法，相較之下，可以
處理較多的料項參數組合，以及較多的問題數。 
與演化演算法相比之搜尋效率 
在過去學者利用萬用啟發式演算法進行問題求解，並且與其他方法進行比較的時候，
往往會考慮其求解的效率性，而效率性的考量往往會同時考慮「求解結果的優劣」以及「所
花費的搜尋次數」，因為如果花費相當多的搜尋次數而尋獲差異不多的結果，那麼也不能夠
聲稱其方法具有效率性；而本研究在利用禁忌搜尋法對於聯合補貨問題進行求解的相關討
論過程當中，也考慮到上述所提的求解效率性，並且依此論點為與 Olsen(2005)所提出的演
化演算法比較觀點之ㄧ，以下將會針對上述所提的效率性考量進行說明，藉此論證本研究
[13] Moon, I. K. and Cha, B. B., 2006, The joint replenishment problem with resource 
restriction. European Journal of Operational Research, 173(1), 190-198. 
[14] Olsen, A. L., 2005, An evolutionary algorithm to solve the joint replenishment problem 
using direct grouping. Computers and Industrial Engineering, 48(2), 223-235. 
[15] Rosenblatt M. J., 1985, Fixed cycle, basic cycle and EOQ approaches to the multi-item 
single-supplier inventory system. International Journal of Production Research, 23(6), 
1131-1139. 
[16] Silver, E. A., 1976, A simple method of determining order quantities in joint 
replenishments under deterministic demand. Management Science, 22(12), 1351-1361. 
[17] Van Eijs, M. J. G., Heuts R. M. T., and Kleijnen J. P. C., 1992, Analysis and comparison 
of two strategies for multi-item inventory systems with joint replenishment costs. 
European Journal of Operational Research, 59(3), 405-412. 
[18] Viswanathan, S., 1996, A new optimal algorithm for the joint replenishment problem. 
Journal of the Operational Research Society, 47(7), 936-944. 
 
（四） 計畫成果自評 
本計劃結果目前正積極整理中，預計將於年底投稿 SCI 國際期刊 Computers & Industrial 
Engineering。 
 
 另外，這次參加此研討會的另一重要任務為仔細觀摩各項細節、並爭取兩年後由本校逢
甲大學來主辦，經過陳鳳山教授的引見，認識了本會的發起人 Professor Sullivan，一位退休
教授(過去任教於維吉尼亞理工大學)，經過短暫介紹與討論，陳教授與我約花了半天的時間
對於未來我們若要辦此研討會的細節與困難，作了一些初步的構想及規劃，預計再未來兩個
月內要將籌劃研討會的計劃書完成，看起來成功爭取到舉辦的機會很大，這部份回國還得與
研發長與校長報告。 
 第四天在會場與幾位學者聊到關於與業界合作的可能性，其實他們所面對的情況與國內
相似，一般學界教授通常並無太多實務工作經驗，在業界的人脈並不豐富，因此除了學校教
授本身要更加積極外，跨領域組成的研究團隊應是未來能否拿到業界計劃的必要條件，學校
在這幾年越來越重視產學合作的可能，個人過去一些對產學合作的看法，在與一些前輩教授
們討教後，確實有些新的想法。 
  
二、與會心得 
本研討會已舉辦近二十年，亦是本人第三次參加，三年前認識陳鳳山教授，此次又認識
黃國全教授與另外一位王教授(Dr. Lihui Wang)，他們三位都是極為傑出之學者，再近一步的
認識後，除了專業領域的知識以外，可以由他們身上看到成為國際級的優秀學者的特質，這
應該是參與研討會最大的收穫。之後大會將挑選十來篇 paper 發表於 SCI 期刊 Robotics and 
Computer Integrated Manufacturing，該期刊近年來 impact factor 上升迅速，為一品質很好的期
刊，期待有機會被選中。 
 
三、建議 
由於這一年來國際金融海嘯，國內景氣亦非常不好，國科會專題研究案非常競爭，通過
率年年下降，即使計劃案通過每年補助的國外差旅費卻大概只能參加亞洲地區的研討會，若
會議地點於歐洲或美洲，則最低花費至少 8~10 萬台幣，建議國科會能夠提高補助金額，因為
鼓勵學校教師出國參加國際會議，除了能與國際人士交換研究心得以提升研究能量，並能夠
提升台灣能見度與增加個別學校的知名度與曝光度，對未來台灣的大學邁向國際化全球化這
有難以估計的好處。 
 
四、攜回資料名稱及內容 
本次研討會所有刊登之論文收錄於研討會論文集 “Proceedings of the 19th International 
Conference on Flexible Automation and Intelligent Manufacturing July 6-8, 2009, Teesside 
University, Middlesbrough, UK” 其 ISBN 978-0-9562303-2-4，論文內容於 USB 隨身碟內與與會
並贈含有議程的手冊一本。 
 
五、其他 
在此感謝國科會的資助，過去幾年參加研討會，本校均補助本人最多三萬元，而今年學
校方面卻稱申請人數過多金額不足而無法補助，本人認為本校為一所教育卓越且目標明確的
優質大學，且推動國際化亦為本校的重點，學校老師在現今教學與研究如此大的壓力下，仍
願意抽空出國充電與國際學人交流，實屬不易，學校應該多支持本校教師參加類似的國際研
討會，替本校爭取曝光國際機會，對本校師生的國際觀與學校知名度的提升都有相當正面的
助益。 
Joint Replenishment and Supplier Selection using Particle Swarm Optimization 
 
                                                          
Joint Replenishment and Supplier Selection using Particle Swarm 
Optimization 
Y.-C. Wang * and W.-J. Li 
Department of Industrial Engineering and Systems Management 
Feng Chia University 
Taichung, Taiwan 
ABSTRACT 
The classical joint replenishment problem (JRP) deals with the issue of determining a replenishment policy that 
minimizes the total cost of ordering multiple items from a single supplier. However, in a real supply-demand system, 
the downstream companies always look for more than one supplier to get a better deal since competition among the 
suppliers may result in lower price for the items supplied. In this study, we consider the JRP under the condition of 
sourcing items from multiple suppliers. The major objectives are two folds: selection of proper suppliers for a 
certain items and determination of the replenishment cycles for them. A particle swarm optimization (PSO) 
approach integrated with the RAND method, a heuristic that has been proven capable of finding almost as good as 
optimal solutions for the single-supplier JRP, is proposed in this paper. An illustrative example is then presented to 
implement the proposed approach to solve the multi-supplier joint replenishment problem. 
1   INTRODUCTION 
In the past few decades the joint replenishment problems (JRP) have received a lot of attention in that the JRP not 
only can be viewed a multi-item inventory problem but its concepts can also be applied to lot sizing problems in 
manufacturing applications. In practice, grouping items into the same order is not uncommon because it may provide 
some benefits such as savings on ordering costs, on unit transportation costs, and even on purchasing costs, such as 
when a discount is offered by the vendor if the order amount is greater than a certain quantity. The total cost 
considered in inventory problems usually consists of three components: the ordering costs, the costs of the ordered 
items, and the inventory holding costs. Since an order may consists of multiple items in JRP, the ordering costs are 
composed of a major ordering cost which is independent from the ordered items and the quantity and a minor ordering 
cost which depends on the ordered items and the quantity in the order. The basic idea of the JRP is to save costs by 
coordinating items when making replenishment decisions, since the items ordered in the same order share the major 
ordering cost.  
Based on the common assumptions of the traditional JRPs, the items considered in such problems are sourced from 
a single supplier. However, a downstream company in a supply-demand system always looks for more vendors for a 
single item since sourcing components from a single supplier is too risky [1]. In addition, competition among the 
suppliers could offer a lower price and better quality products purchased. In this study, we extend the classical JRPs 
into a multi-item, multi-supplier inventory model, in which the buyer no longer orders the items from a single supplier. 
Each supplier is capable of offering all the items with different minor ordering cost. Therefore the aim of our research 
is to develop a particle swam optimization (PSO) approach for selecting proper supplier for offering a certain items 
and finding the replenishment policy that incurs a lower total cost.  
2   LITERATURE REVIEW 
2.1 JOINT REPLENISHMENT PROBLEM 
* Corresponding author: Tel.: (886) 4-24517250 ext.3637; E-mail: wangyc@fcu.edu.tw  
Joint Replenishment and Supplier Selection using Particle Swarm Optimization 
 
M
N
1. The demand rate for each item is deterministic and constant. 
2. The replenishment lead time is of a known duration. 
3. Shortage is not allowed. 
4. The unit holding cost for each item type is known and constant.  
5. The different suppliers offer different minor ordering costs for each item. 
6. Each item can be purchased from only one of a few suppliers. 
The following notations are used in this model: 
: number of suppliersM  
: number of itemsN  
: index of supplier,  1,...,j j =  
: index of item, 1,...,i i =  
: the th supplier,  1,...,js j j = M
j
j
 
: demand rate of item iD i  
  : major ordering cost A
: minor ordering cost of item  that purchased from the th suplierija i  
: the holding cost for item ih i  
: the ordering cycle time of the th supplierjT j  
: binary variable equal to 1 if item  is order from the th supplier, otherwise it is 0 ijx i j  
 :integer variable that determines the replenishment frequency for item  in  th supplier ijk i  
Same as the classic JRPs, the objective is to minimize the total cost for the downstream buyer. Based on the 
assumptions mentioned early, the total cost can be given as follows: 
( )( )
1 1
1Minimize                                                                       (1)
2
j j
M Mij ij ij
j i i ij ij
j i s j i sj
A a k x
TC T D h x k
T= ⊆ = ⊆
+= +∑∑ ∑∑  
The first term of the right hand side represents the costs of ordering various items from the corresponding suppliers 
1
1             1,...,                                                                                                                               (2)
M
ij
j
x i N
=
= =∑  
Equation (2) constraints each item can only be sourced from one supplier. The replenishment common cycle time 
for the items supplied by supplier j can be determined by the following equation. 
1 2
* 2                                                                                                   (3) 
j j
ij
j ij i i ij ij
i s i sij
a
T A x D h k x
k⊆ ⊆
⎛ ⎞⎛ ⎞ ⎛ ⎞⎜ ⎟= +⎜ ⎟ ⎜ ⎟⎜ ⎟ ⎜ ⎟⎜ ⎟⎝ ⎠ ⎝ ⎠⎝ ⎠
∑ ∑  
4. THE PROPOSED PSO ALGORITHM 
4.1 INTRODUCTION OF THE PSO ALGORITHM 
The principles of the PSO algorithm can be summarized as follows: 
Joint Replenishment and Supplier Selection using Particle Swarm Optimization 
 
for all the items involves searching a best combination among MN solutions. To apply PSO to this problem, an 1 × N 
array can be used to represent that N particles for the N items are simultaneously searching for a best solution. The 
value at each element of the array (the position each particle can visit) is an integer representing which supplier the 
corresponding item is sourced from. Fig.1 illustrates an example of ordering ten different items from three individual 
suppliers. In this example, we set an array with ten places for recording the positions the particles are staying during 
traveling in the solution space. The value in the array represents the supplier where the corresponding item is sourced 
from. In Fig.1, the current position of the 10 particles is stored as (1, 3, 2, 1, 1, 3, 2, 2, 1, 3), which represents item 1, 
4, 5, and 9 are provided by supplier 1; item 3, 7, and 8 is sourced from supplier 2; item 2, 6, and 10 are sourced from 
supplier 3. 
4.3 FITNESS VALUE EVALUATION  
Initially, each particle is randomly assigned with an integer number from 1 to 5 and its initial velocity is set with a 
real number followed a uniform distribution ranging from -0.25 to +0.25. After initialization, each particle has its own 
initial position and velocity to start with.  The common ordering cycle of the items sourced from the same supplier can 
be determined by using equation (3), and then the total cost with this replenishment cycle can be obtained by using 
equation (1). This total cost is used as the fitness function of this solution. For each iteration, the particles come up 
with a new solution by moving to new positions. The fitness value of the new solution can be obtained as mentioned 
above. 
4.4 CALCULATE  AND idP gdP  
In the proposed PSO algorithm, id represents the best previous position visited by the particle  after  iterative 
searching procedures, while 
P i d
gd  represents the best position found so far among all the particles. When the position of 
particles changes, we will update its fitness value, if 1id
P
P +  is less than , , if  is more than , we 
keep the original value. The same logic is applied to update
idP 1id idP P+ → 1idP + idP
gdP . 
4.5 UPDATE VELOCITY AND POSITION 
The velocity and position are two most important components for implementing the PSO algorithm. The particles 
change its position depending on the velocity which is determined and updated by using equation (4) and (5). When 
updated, the position of a particle is initially a real number, but later it is set as an integer ranging between 0 and 
number of suppliers by taking off its fractional portion. 
5. A NUMERICAL EXAMPLE 
5.1 PARAMETER SETTING 
In this section, we present a numerical example that illustrates the proposed PSO for solving a multi-supplier JRP. 
In this example, there are 45 different items (N = 45) sourced from 5 suppliers (M = 5). The inventory manager would 
like to determine which item is sourced from which supplier, and further implement joint replenishment of the items 
supplied from the same supplier. Note that the replenishment cycles of the items supplied by one supplier are 
independent from the replenishment cycle of the items supplied by the other suppliers. The parameter setting for this 
joint replenishment problem is based on one of the problem sets adopted by Kaspi and Rosenblatt [5]. The demand 
rate for each item is generated based on a uniform distribution between 100 and 100,000. The major ordering cost for 
each replenishment is $10. The minor ordering cost for that items purchased from different suppliers have different 
price was generated from a uniform distribution between $0.5 and $5. The holding cost for each item was also 
generated from a uniform distribution between $0.2 and $3. For the proposed PSO algorithm, the acceleration 
coefficients 1C  and 2  are set 2 and 1.9, respectively. The inertia weight (W ), which controls the impact of the 
previous history of velocities on the current one, is set 0.7. Searching process is terminated after performing 700 
iterations. 
C
 
 
 
 
