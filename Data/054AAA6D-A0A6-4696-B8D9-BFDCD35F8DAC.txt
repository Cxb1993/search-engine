I中文摘要
近年來，由於網際網路(Internet)迅速地發展與多元化的需求，在工程與科學領域上相
形重要。然而網路用戶快速地增加與可用頻寬需求的限制，以及網際網路規模日漸龐大，
使得網路壅塞(traffic congestion)成為制約網路進一步發展的瓶頸。主動式佇列管理(active
queue management, AQM)是目前較常用來解決網路壅塞問題的方法，目的是為了改善
網路壅塞狀況。雖然不同的主動式佇列管理方法相繼被提出，但大部份主動式佇列管
理只適用於單調的TCP網路架構，對無回饋之多媒體通訊的強健特性並不佳。因此，如何
以提出控制理論為基礎的強健壅塞控制器設計，來確保多媒體通訊網路系統之穩定性
及強健性，是非常重要之課題。本計劃將針對多媒體通訊網路的強健資訊壅塞控制器之
設計加以討論，並達到以下計畫目標:
第一年：
(1) 考慮多媒體通訊網路系統存在許多隨機因素與雜訊干擾，應用隨機控制理論，實現隨機
強健壅塞控制器。並考慮 )(tp (probability of mark)受限於0及1之輸入飽和控制器的設
計準則，以確保網路系統在多媒體通訊網路環境下穩定、減少網路壅塞、高吞吐量和低
封包遺失率等設計目標。
(2) 在受到外部干擾與系統不確定性下，設計 H 隨機強健控制，並將結果擴展至
multi-sources-multi-link之網路系統。
(3) 使用NS2軟體分析比較各演算法之網路效能，以尋求較佳之設計。
第二年：
(4) 架構Linux 之TCP/IP網路平台，透過壅塞指標、延遲時間等數據的監控瞭解其運作並印
證第一年所設計之控制器之性能。
(5) 完成無線通訊架構，發展強健適應流量控制及壅塞控制器應用於無線網路環境。
(6) 融入協調壅塞控制機制(COCOON)整合TCP與UDP等資料流，將主動式佇列管理應用
於多媒體通訊網路。
我們相信，此專題研究的成果，對目前 TCP/AQM 壅塞控制器之研究及應用，可以有
突破性的改善。
關鍵字： 多媒體通訊，主動式佇列管理(AQM)，封包丟棄機率，隨機控制，輸入飽和。
III
Keywords: Multimedia communication, Active queue management (AQM), Packet drop
probability, Stochastic control, Input saturation.
1一、前言
近年來，由於網際網路(Internet)迅速地發展與多元化的需求，在工程與科學領域上相
形重要。然而網路用戶快速地增加與可用頻寬需求的限制，加上網際網路規模日漸龐大，
使得網路壅塞(traffic congestion)成為制約網路進一步發展的瓶頸。造成網路壅塞的原因來自
於網路資源和網路流量的不一致性，壅塞的問題不會因為路由器或伺服器的能力提高而消
除，同時，考慮控制演算法的分佈性、網路的複雜程度和演算法的性能等要求，使得控制
演算法的設計與實現難上加難，至今網路壅塞問題還沒有獲得一個較佳的解決方式。最初
在傳輸控制通訊協定(Transmission Control Protocol, TCP) [1]中，採用流量控制(flow control)
的方式改善網路壅塞問題。接收端(receiver)利用 TCP 檔頭(header)將容許接收的封包大小告
知傳送端(sender)，然而，此調整機制只考慮接收端的接收能力，並沒有考慮整體的網路之
傳輸能力，因此容易導致壅塞崩潰(congestion collapse)的現象發生。
本計畫主題為隨機程序之強健壅塞控制器設計與實現應用於多媒體通訊網路，由於多
媒體通訊網路系統存在許多隨機因素與雜訊干擾，第一年希望以控制工程領域的觀點，提
出一控制理論應用於壅塞控制系統，如：隨機控制(stochastic control)控制法則為基礎之強健
壅塞控制器(robust congestion controller)設計，以確保網路系統在多媒體通訊網路環境下穩
定、減少網路壅塞、高吞吐量和低封包遺失率等設計目標。第二年將以 TCP/IP 及乙太網路
(Ethernet)壅塞控制器設計為基礎實現通訊模組並應用於多媒體通訊網路及無線網路環境，
驗證其性能與效果。
一般而言，流量控制的目的是為了校正發送端與接收端的資料收發速度，避免接收端
因為發送端速度太快，造成接收端的緩衝記憶體溢出(buffer overflow)及資料遺失(data loss)
等問題。在相互連結的交換網路中，為了讓不同區域網路上的主機，保障其通信品質，TCP
是必備的網路協定。因此，TCP 提供了連結導向的服務型態。TCP 下位層的協定通常都被
假設為信賴度低的通訊協定，為了彌補下位層的缺失，TCP 必須是信賴度高的設計；除此
之外，TCP 也是個獨立性較高的通訊協定，所以不管下位層是在何種環境下，都可使用 TCP
協定。這就是為什麼 TCP 不僅可在網際網路環境中用，也可在乙太網路的區域網路環境中
使用的原因之一。實際上，在區域網路的環境中，通訊協定通常是指 TCP 和網際協定(Internet
Protocol, IP)兩者加在一起使用。
3壅塞檢測 (Random Early Detection, RED)等。以下將分別敘述說明。
圖 1 網路壅塞控制的機制依硬體實現位置
路由演算法(Router Algorithm)
路由演算法一般實現在網路封包交換設備，如：路由器(Router)、交換器(Switch)或閘
道(Gateway)中執行，目的是檢測網路壅塞事件與程度，並產生反饋訊息。路由演算法的研
究方向目前大多集中在主動式佇列管理(Active Queue Management, AQM)演算法，和傳統被
動式佇列管理(Passive Queue Management, PQM) ，如：Drop Tail 相比。AQM 在網路設備
的緩衝記憶體溢出之前就丟棄(Drop)或標記(Mark)封包，維持固定的佇列長度減少傳輸延遲
的振盪並消除網路壅塞造成各節點傳送速率全面同步的現象。AQM 計算出回饋大小後，需
要將回饋訊息傳遞給傳送端。路由或閘道可以採用的回饋方式包括丟棄和標記。傳統的 TCP
演算法只使用封包丟棄作為壅塞發生的指示，然而，以標記方式顯示壅塞發生通知傳送端，
可以避免 TCP 發送端調用超時處理。由實驗結果顯示標記比丟棄具有更好的性能[9]。然而
標記方式的缺點是要求路由或閘道提供特殊支持，但隨著顯著壅塞通知(Explicit Congestion
Notification, ECN)的標準化和廣泛採用[10, 11]，此一問題得以解決。
端點演算法(Source Algorithm)
端點演算法主要在主機和網路邊緣設備中執行，目的是根據反饋訊息調整發送速率。
目前端點演算法中使用最廣泛的是 TCP 協定中的壅塞控制演算法。近年來 TCP 中採用了許
5此外，由於 TCP 是屬於 OSI 模型七層架構中的第四層，在設計上並無類似第三層中
ACK 般完善、可靠的回饋(feedback)系統，對於網路環境中是否有壅塞的情況發生僅能依
靠：估算瓶頸的服務時間、監測網路流量的變化及封包延遲時間的長短等三項指標作為控
制封包流量的依據，此對於一般可靠度要求不高的服務，如 E-mail，Daily News Delivering
等服務項目雖已足夠；但是對於日漸多元化的寬頻網路服務，如：視訊會議、電子商務等
可靠度需求高的服務而言，TCP-Reno 在壅塞情況時所採取的快速重傳和快速恢復等措施，
卻無法彌補封包於閘道器被隨機丟棄所造成的時間差，甚至導致全面同步的嚴重後果。
ECN (Explicit Congestion Notification)
2001 年 Sally Floyd [11]所提出顯著壅塞通知(ECN)，如圖 3 所示，相較於現行的
TCP-Reno 以 Timer 和 ACK 作為網路壅塞評估的依據，ECN 壅塞控制機制是利用附加在 IP
header 中的 TOS 的兩個 ECN bits (bit6、bit7)作為判斷網路是否發生壅塞的依據。ECN 的目
的是減少路由器丟棄封包的動作，以避免在 TCP 的傳送端觸發不必要的 TCP 壅塞控制機
制。具體而言，當路由器出現濳在的壅塞時，一個在佇列中隨機選擇的封包就會被標記。
當接收端收到此標記的封包之後，就會據此發出一個特殊的確認訊號(ACK)。當傳送端收
到這個特殊的 ACK 後，它就會減小壅塞窗口的大小；反之，則增加窗口的大小。
圖 3 ECN 機制
雖然 ECN 壅塞控制機制改善了 TCP-Reno 對於壅塞情況只依賴 Retransmission Timer
和 Congestion Window 所造成缺失，由於 ECN 壅塞控制機制是採用 IP header 中的兩個 ECN
bits 作為壅塞情況的判斷依據，這樣的作法會造成路由器必須對每一個佇列中封包的 IP
header 執行更多的解讀動作，如此對於原本負擔沉重的路由器無疑是雪上加霜。
7導致系統不穩定。如圖 5 所示，由於 RED 的性能對演算法的參數設定十分敏感，至今仍沒
有在 Internet 中沒有得到廣泛的使用。
(a) 佇列長度( 0min q , 100max q ) (b) 佇列長度( 60min q , 80max q )
圖5 RED對參數的敏感性
透過上圖可以知道TCP/RED對網際網路的變數具有高度的敏感性。因此，如果不設計
任何控制器只調整RED的參數，將導致路由端的佇列產生複雜不可預測之抖動現象，甚至
損害網路的服務品質(QoS)。而適當的描述網路的行為，將有助於網路設計者改善RED的缺
點達到較佳的性能。N. Bigdeli透過一系列的分析，如：李雅普諾夫指數 (Lyapunov
exponents)、確定性與隨機性方法(Deterministic versus stochastic methods)等，探討同質性之
TCP/RED網路複雜的行為屬於非線性隨機過程(stochastic process)。所以，在設計強健網路
壅塞控制應考慮其隨機過程之行為。
近年來，由於多媒體的發展與應用，造成網路頻寬的使用效率的大量需求。因此，研
究 TCP 壅塞控制問題中應考慮使用者資料通訊協定(User Datagram Protocol, UDP)與其相互
作用，以解決 TCP 與 UDP 在網路頻寬的公平競爭。當 TCP 與 UDP 同時注入於網際網路時，
TCP 和 UDP 的相互作用將使得無回饋之 UDP 流影響 TCP 流的頻寬分配。為了滿足多媒體
應用的需求，並保證有回饋之 TCP 流不受無回饋之 UDP 流的影響，同時保證特定的 UDP
流得到公平對待。當 TCP 與 UDP 流共處同一保證傳輸組(Assured forwarding, AF)時，發生
壅塞時 TCP 流會降低發送速率而 UDP 流卻保持原速率發送，導致 UDP 流抑制 TCP 流並佔
有較多帶寬，因此 TCP 流無法獲得公平待遇。
另外，由於連接網際網路的網路設備的增加速度越來越快，同時，無線資料傳輸技術
97. 其他相關文獻 [31-35]。
而目前國內在以控制理論為基礎的研究單位有：傅立成教授/台灣大學、廖德祿/成功大
學、練光佑教授/中原大學等研究團隊：“大型網狀系統的強健智慧型資訊流量控制器之設
計”與“以網狀系統為觀點之混合式 T-S 模糊控制系統的設計”以適應性法則與 T-S 模糊模式
為基礎，探討以網狀連結方式交換訊息之多代理器系統的穩定性分析與控制器設計[36]。陳
博現教授/清華大學、彭先覺教授/虎尾技術學院及李柏坤教授等研究團隊：“高速網路交通
流量控制”及”無線存取 ATM 網路的流量控制”等整合型計畫，對網路提出建模、參數估測
並以 Robust PID 控制, H , 基因演算及 Fuzzy 控制完成 ATM 之 ABR 控制[37-38]，以上研
究成果相當豐碩。
11
圖 6 Dumbbell network topology
由系統理論的觀點來看，在此非線性數學模式(3.a)中之 )(tp ，可視為控制輸入。由上
述之方程式可知此 TCP flow mode 為一非線性且輸入具飽和現象之延遲系統。此外，透過
實驗證實 TCP flow model 具有複雜的隨機特性(stochastic properties) [34]，例如：傳輸延遲、
封包標記或丟棄率等。同時，在多媒體網路中，突發的 UDP 資料流也會造成影響。因此，
如何設計強健隨機控制器，維持通道之傳輸順暢並保持一定之佇列長度 dq 及整體系統之穩
定為一挑戰課題。為了解決此問題，我們方法敘述如下：
本計劃擬採用隨機控制理論來討論此控制器之設計。隨機系統指含有內部隨機參數、
外部隨機干擾和觀測雜訊等隨機變數的系統。隨機變數不能用已知的時間函數描述，而只
能瞭解它的某些統計特性。為了擷取隨機系統良好之強健性，並表現於 TCP/AQM 壅塞控
制系統中。首先，為了簡化系統，假設用戶個數 NtN )( 與封包來回時間 0)( RtR  為一定
數，並對非線性模型(3)進行線性化操作。換言之，令 0)( tw 和 0)( tq ，因此，平衡點
),,( 000 pqw 滿足 20
2
0 pw 與 NCRw 00  等條件。位於平衡點 ),,( 000 pqw 附近的線性數學模
型可由下列方程式表示：






]0,[),()(
)()(
0),()]()([)]()()([)(
0
00
Rtttx
tCxty
ttdRtxEtExdttBuRtxAtAxtdx dd


(4)
其中
13
)()( tKxtu  (12)
其中 K 為狀態迴授增益。由此可知此 TCP 壅塞控制的問題即是討論系統(11)的穩定化問
題，討論如何設計適當的控制器 )(tu ，使得 )0,0,0()],,[( 000 pqwE 。在接下來討論系統穩
定性之前，下述輔助定理將有助於證明：首先，考慮以下非線性隨機系統
)()()()( tdxgdtxftdx  (13)
其中 x 為系統狀態，為 r 維大小之標準維納過程， nnf : 與 rnng : 為區
域 Lipschitz 並滿足 0)0( f 與 0)0( g 。接下來 定義全 域概率漸近 穩定 (globally
asymptotically stable in probability)。
定義1：
對於任意 00 t 與 0 ，系統(13)的等效解 0)( tx 為全域概率漸近穩定，滿足以下方
程式
0)(supPlim
00
0)(






 

tx
tttx
及 10)(limP 





 

tx
t
(14)
輔助定理1 (Khasminiskii [40])：
對於系統(13)若存在對正定、徑向無界、二次可微分之函數 )(xV 。使用無窮小生成









 )()()(tr
2
1
)(
)(
)( 2
2
xg
x
xV
xgxf
x
xV
xLV T (15)
為一負定函數，其中 }{tr H 為矩陣H 的跡數(trace)。則系統(13)的等效解 0)( tx 為全域概率
漸近穩定。
輔助定理2 (Schur complement [41])：
對於給定的矩陣 



2212
1211
SS
SS
S T ，其中
TSS 1111  , TSS 2222  。則具有下列等效條件。
(a) 0S ; (b) 022 S , .0121221211   TSSSS (16)
接著利用李雅普諾夫穩定度準則(Lyapunov stability criterion)與線性矩陣不等式(Linear
matrix inequality)等技巧，獲得適當的輸入增益 K，使得(13)式為概率漸近穩定(asymptotically
stable in probability)。考慮以下李雅普諾夫函數：

t
Rt
TT dssQxsxtPxtxtV
0
)()()()()( (17)
透過伊藤公式(Itô’s formula) [40]，對上述李雅普諾夫函數進行隨機微分可得
15
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
time (sec)
S
F
C
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
time (sec)
S
F
C
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
I
(a) 佇列長度響應 (b) 在變動用戶個數下佇列長度響應
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
time (sec)
S
F
C
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
time (sec)
S
F
C
(c) 在短傳輸延時下佇列長度響應 (d) 在長傳輸延時下佇列長度響應
圖7 在不同網路環境下之模擬結果( H 強健控制器)
然而在實際網際網路中，存在許多隨機因素與外在雜訊之干擾，這些非線性系統所包
含的近似誤差及外在干擾等問題會響到系統的性能，因此本計劃使用 H 強健控制方法來提
高系統的穩定性和追蹤性能， H 強健控制方法是運用李雅普諾夫(Lyapunov)方程式來建立
全域穩定性而且具有排除外部干擾的條件。考慮 TCP/AQM 系統具外在干擾與輸入飽和現
象，方程式(11)可改寫如下：









]0,[),()(
)()(
0),()]()())(()())([(
)]()())(()())(()())([()(
0
0
00
Rtttx
txCty
ttdtvERtxtEEtxtEE
dttvBRtutBBRtxtAAtxtAAtdx
vdd
vdd


(22)
其中 stv )( 為干擾輸入滿足 ),0[2 L 。另外， vB 、 E 、 dE 與 vE 為具有適當大小之常數矩
陣； )(tA 、 )(tAd 、 )(tB 、 )(tE 與 )(tEd 為時變不確定函數滿足下列形式：
])[(])()()()()([ 54321 NNNNNtMFtEtEtBtAtA dd  (23)
17
足
22
)()(E tvty  ，其中
21
0
2
2
)}|)(|E{()(   dttyty (29)
則不確定性隨機 TCP/AQM 系統(25)稱為具擾動抑制之強健隨機穩定(robustly stochastically
stable with disturbance attenuation )
接著藉由 H 隨機控制追踨一所希望的佇列長度 dq ，並考慮以下狀態迴授控制器。
)()( tKxtu  (30)
其中 K 為狀態迴授增益。由此可知此 TCP 壅塞控制的問題即是討論系統(25)的穩定化問
題，討論如何設計適當的控制器 )(tu ，使得平衡點 )0,0,0()],,[( 000 pqwE 。根據李雅普諾
夫穩定度準則可知，當 0)( tLV 時，系統為概率漸近穩定。因此，利用線性矩陣不等式技
巧與前一節提出之輔助定理 2，可以得到以下結果：
(a) 當 0)( tv 時，若滿足下面線性矩陣不等式
0
00000
00000
0000
0000
0000
00
33
2
4
454
1321
3532
41
1 






























IKN
IK
PMMPEPE
IPNPN
IKNPNPN
NKKEPNPNKNPSBKAP
EPNPNPKBPA
T
d
TTTT
d
TTTTTTT
d
TTT
d





(31)
其中 SBBMMPAAP TTT  231 )(  和 04 PMM T ， 0P 與 0S 為具適當大
小之正定矩陣， 4,3,2,1,0  ii 為正常數，則系統 (25)稱為強健隨機穩定 (robustly
stochastically stable)。由上述線性矩陣不等式我們可以得到狀態迴授增益 1 PKK 。
(b) 當 0)( tv 時，若滿足下面線性矩陣不等式
0
0000000
0000000
0000000
00000
000000
000000
000000
00
00
33
2
4
454
1321
2
3532
41
2 






































IPC
IKN
IK
PMMEPEPE
IPNPN
IKNPNPN
EIB
NKKEPNPNKNPSBKAP
CPEPNPNPBKBPA
T
vd
T
v
T
v
TTTT
d
TTTTTTT
d
TTTT
vd






(32)
19
0 10 20 30 40 50 60 70 80 90 100
0
100
200
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
R
E
M
0 10 20 30 40 50 60 70 80 90 100
0
100
200
time (sec)
S
F
C
0 10 20 30 40 50 60 70 80 90 100
0
100
200
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
R
E
M
0 10 20 30 40 50 60 70 80 90 100
0
100
200
time (sec)
S
F
C
(a) R2-R3 佇列長度響應 (b) R3-R4 佇列長度響應
圖 9 Multi-sources-multi-link 之模擬結果
接著，在具輸入飽和的限制下，本計劃提出另外兩種非線性迴授控制器有效地達到期望佇
列長度及強健性。一種是倒階控制；另一種則是輸入-輸出線性化控制。倒階控制是一種透
過遞歸法的近代非線性迴授控制，基於李雅普諾夫函數與相應的控制方法，此一方法提供
了一套有系統的設計流程確保系統的穩定性。首先，考慮以下由 Prof. F. Kelly [42] 在 2001
年提出以數學方式來描述 TCP 網路的動態行為，其數學模型可由下式表示式。





0
2
22
)()(
)()
2
)(
)(
(
)(
)(
Ctrtq
tp
M
tr
t
M
t
M
tr


 (33)
其中 )(tr 單位時間到來的封包速率(packet/sec)， )(tq 為佇列長度(packets)， 0C 為網路鏈結容
量(packets/sec)， (t) 為封包來回時間(round-trip time, RTT)且 pTCtqt  0)()( (sec)， pT 為
傳輸延遲(sec)，M 為用戶個數。 10 p 為封包被標籤或丟棄的機率。第一條方程式描述
TCP AIMD (additive increase and multiplicative decrease)壅塞控制演算法；第二條方程式則是
表示佇列長度的動態。針對 TCP 網路，一個以流量為基礎(rate-based)的非線性數學模式描
述如(33)式所示。此數學模式是由單一路徑連結(single bottleneck)和M 個 TCP 資料源所構
成，並且假設在此結構下每筆資料之封包來回時間均相同。以下將介紹利用倒階控制理論
為基礎之強健壅塞控制器設計的研究方法與步驟。定義狀態向量與輸入向量 )()(1 tqtx  、
)()(2 trtx  及 )()( tutp  ，因此能向量之動態可改寫如下：
021 )()( Ctxtx  (34.a)
)(),(),()( 21212 tuxxgxxftx  (34.b)
21
)()(),(),()()()( 112121222 tzktuxxgxxfttxtz    (42)
對子系統(37)與(42)選擇適當的李雅普諾夫函數如下
)(
2
1
)()( 221 tztVtV  (43)
接著，將式(43)時間做微分可得
)))()(()(),(),()()(()(
)))()(()(),(),()(()()()(
))()(),(),()(()()()(
)()()()()()(
1121212112
2
11
112121212
2
1121
1121212
2
1121
22
2
1121
tzktzktuxxgxxftztztzk
tzktzktuxxgxxftztzktztz
tzktuxxgxxftztzktztz
tztztzktztztV










(44)
由上述倒階控制的設計流程，我們初步設計以下之控制器
)))()((),())()(((
),(
1
)( 0212121
21
Ctrkkxxfqtqkk
xxg
tu d   (45)
其中常數 02 k 將在後面討論。將以上控制器代入式(44)， )(tV 可以被表示成
0)()()( 222
2
11  tzktzktV  (46)
很明顯地，透過李雅普諾夫穩定性分析(Lyapunov stability analysis)，可以知道系統在控制器
(45)下呈漸近穩定。再來，討論輸入飽和的問題， 10 p ，由不等式關係我們可得當待選
定參數滿足 021212
max
)()( Ckkqkk
M
d 
與 ))(
2
)(())(( 21021max21 kk
M
Ckkqqkk d 
時，即可將輸入控制限制在飽和區內。另外，我們探討輸入-輸出線性化的設計方式與倒階
控制比較。首先，參考標準迴授線性化技巧[43, 44]，考慮以下單一輸入單一輸出之非線性
系統如下：
))(()(
)())(())(()(
txHty
tutxGtxFtx


(47)
其中 nx  為狀態向量， py  為輸出向量， mu  為輸入控制向量。F 、G 與H 為平滑
向量場。輸入輸出線性化的機制透過對系統輸出函數的微分，找到輸出函數與輸入函數的
關係。第一次對輸出函數 y 微分可以表示如下：
)()()(])()([)( tuxHLxHLuxGxF
x
H
ty GF 
 (48)
其中
)()( xHLxF
x
H
F

(49)
若 0)( xHLG ，則須將(48)再微分一次，直到 0)(1  xHLL FG  。因此我們可以得到以下通式
23
器的係數給定為 085.01k 與 065.02 k 。而模擬架構如圖 6 所示，其結果如圖 11 所示。
圖 10 輸出回授控制器係數範圍
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
IP
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
time (sec)
N
F
C
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
IP
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
time (sec)
N
F
C
(a) 佇列長度響應 (b) 在變動用戶個數下佇列長度響應
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
IP
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
time (sec)
N
F
C
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
A
R
E
D
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
I
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
P
IP
0 10 20 30 40 50 60 70 80 90 100
0
100
200
300
time (sec)
N
F
C
(c) 在短傳輸延時下佇列長度響應 (d) 在長傳輸延時下佇列長度響應
圖 11 在不同網路環境下之模擬結果(輸出迴授控制器)
第二年度：
本年度中將以 Linux 平台為基礎架構網路壅塞控制器，實現本計畫所提出的壅塞控制
25
橋接器時；第二種是送往上層處理，讓 TCP 或 UDP 層做處理。其中轉送過程包括：選擇
合適的網路介面、選擇下一個路徑器、封裝(encapsulation)等。封包要送出時，必須先在適
合的網路輸出佇列(output queuing)中排隊等待。
圖 13 Linux 核心實現 AQM
一般在Linux核心中輸出佇列的通訊控制包含以下四種元件：佇列法則 (queueing
discipline)、類別(class)、過濾器(filter)、監控(policing)，如圖14所示。
圖 14 Linux 核心通訊控制
而每個網路裝置至少都有一個佇列法則來組合，一個最簡單的佇列法則必須要包含一個佇
列(queue)，可採用先進先出 (FIFO)的方式來處理資料的順序。然而，一套完善且複雜的佇
列法則可搭配類別與過濾器區分不同的封包。下圖15表示的是Linux核心中之資料傳遞流程
[45]。我們可以看到Linux 核心中net/sched/sch_*.c的檔案提供通訊控制功能來支援壅塞控制
之需求。
27
表 1 網路鏈結頻寬設定
Link 1 Link 2 Link 3
Bandwidth 100Mbps 100Mbps 10Mbps
表 2 Linux 平台參數設定
Sender 1, 2 Router Receiver
OS Linux 2.4.20 Linux 2.4.20 Linux 2.4.20
Distribution Redhat 8.0 Redhat 8.0 Fedora 4.0
RAM 512MB 512MB 256MB
其中傳送端(sender)與接收端(receiver)分別掛載 iperf 套件，建立封包產生器端 client
(iperf -c)與 server 端(iperf -s)。這套工具，版本為 IPv4 的 1.21 版，這是由 A. Triumala [46]
等人製作。該工具能讓使用者調整多項 TCP 參數，如 TCP window size 等，很適合用於實
驗的測試。
在路由部份，必須掛載 iproute2 套件來支援流量控制的相關程式，並編輯第一年推導
之壅塞控制法則，且修改 tc 的控制選項。
29
0 至 1 的隨機值(Step 5)與其進行比較，若為真則將目前到來之封包放入佇列中(Step 6)，否
則判斷 ECN 機制是否被啟動，決定以標記或丟棄的方式來通知傳送端降低傳送速率(Step
7、8)。在 Linux 佇列法則 enqueue 函式中，我們將第一年推導之強健控制器(30)與(55)分別
在該函式裡實現。圖 18 為壅塞控制系統 Link3 (圖 16)之佇列長度響應圖，由圖可知本研究
提出之兩種控制器在實際網路環境下皆可以達到指定的佇列長度( dq )，透過穩定佇列長
度，有效減少網路壅塞，以確保網路穩定及低封包遺失率等目標。
0 10 20 30 40 50 60 70 80 90 100
0
50
100
150
200
250
300
time (sec)
qu
eu
e
le
ng
th
(p
ac
ke
ts
)
0 10 20 30 40 50 60 70 80 90 100
0
50
100
150
200
250
300
time (sec)
qu
eu
e
le
ng
th
(p
ac
ke
ts
)
(a) H 強健控制器之佇列長度響應 (b) 輸出迴授控制器之佇列長度響應
圖 18 Linux 壅塞控制之響應圖
接下來，本計劃將前述發展強健適應流量控制及壅塞控制器應用於無線網路環境。如
圖 19 所示為無線 Linux 壅塞控制系統架構，其中在 Link3 的部份，除非該無線網路卡支援
Ad-Hoc 無有線基礎設施支持的移動網絡，否則必須採用無線網路基地台(access point, AP)
搭配無線網卡架設。在無線網路環境中，由於訊號的衰減、障礙物的遮蔽或外在的干擾皆
會造成封包遺失，並不完全是因為網路壅塞所造成。如圖 20 為本計劃之強健壅塞控制器在
無線網路下的響應圖，由圖可知本研究提出之兩種控制器在無線網路環境下，當受到外部
干擾，如：訊號的衰減、障礙物的遮蔽等，依然可以達到指定的佇列長度( dq )。
31
Web Browser/Server、Telnet 與 Continuous Media Application 變成在同一族群下。如此，第
一年度提出之強健壅塞控制器便可應用於多媒體環境之通訊網路，圖 23 為協調壅塞控制之
程式流程。
圖 21 多媒體通訊網路環境
圖 22 協調壅塞控制機制
33
0 10 20 30 40 50 60 70 80 90 100
0
50
100
150
200
250
300
time (sec)
qu
eu
e
le
ng
th
(p
ac
ke
ts
)
0 10 20 30 40 50 60 70 80 90 100
0
50
100
150
200
250
300
time (sec)
qu
eu
e
le
ng
th
(p
ac
ke
ts
)
(a) 未加入協調壅塞控制機制 (b) 加入協調壅塞控制機制( H 強健控制器)
圖 24 協調壅塞控制的結果
三、參考文獻 References
[1] W. Stevens, TCP/IP Illustrated, volume 1: The Protocols. Addison-Wesley, 1994.
[2] V. Jacobson, Congestion Avoidance and Control, ACM Computer Communication Review
18(4), pp 314-329, 1988.
[3] R. Jain, K. K. Ramakrishnan, D. M. Chiu, Congestion Avoidance in Computer network with
a Connectionless Network Layer, Technical Report, Digital Equipment Corporation
DEC-TR-506, 1988.
[4] R. Jain, Congestion Control in Computer Network: Issues and Trends, IEEE Network
Magazine, 4(3), pp. 24-30, 1990.
[5] 彭先覺, Robust congestion control of high-speed networks, 91 年度國科會研究計畫成果報
告論文集.
[6] E. Hashem, Analysis of random drop for gateway congestion control, MIT-LCS-TR-465,
1998.
[7] S. Floyd, TCP and explicit congestion notification, ACM Computer Communication Review,
24 N. 5, pp. 10-23, 1994.
[8] W. Stevens, TCP slow start, congestion avoidance, fast retransmit, and fast recovery
algorithms, RFC2001, Jan. 1997.
[9] S. Athuraliya, V.H. Li, S.H. Low, and Q. Yin, REM: Active Queue Management, IEEE
Network 15(3), pp. 48-53, 2001.
[10] K.K. Ramakrishnan, S. Floyd, A Proposal to add Explicit Congestion Notification (ECN) to
IP, RFC 2481, 1999.
[11] K.K. Ramakrishnan, S. Floyd, D. Black, “The Addition of Explicit Congestion Notification
(ECN) to IP,”RFC 3168, 2001.
[12] J.M. Jaffe, Bottleneck Flow Control, IEEE Transactions on Communication 29(7), pp.
35
Conference, Nov. 2002, pp. 34- 43
[29] Y. Gao, J.C. Hou, P. Sanjoy, RACCOOM: A Rate-Based Congestion Control Approach for
Multicast, Computers, IEEE Transactions 52(12), pp. 1521- 1534
[30] Y. Gao and J. C. Hou, A state feedback control approach to stabilizing queues for
ECN-enable TCP connections, in prof. of IEEE INFCOM 2003, pp. 2301-2311.
[31] J. X. Wang, L. Rong, and Y. H. Liu, A robust proportional controller for AQM based on
optimized second-order system model, Computer Communications, 31, pp. 2468-2477,
2008.
[32] S. Kunniyur and R. Srikant, Analysis and Design of an Adaptive Virtual Queue (AVQ)
Algorithm for Active Queue Management, in Proc. of ACM SIGCOMM 2001, San Diego,
USA, August 2001.
[33] W. Feng, D. Kandlur, and K. Shin, Stochastic fair blue: a queue management algorithm for
enforcing fairness, in Proc. of IEEE INFOCOM’2001, Alaska, 2001, pp. 1520-1529.
[34] N. Bigdeli, M. Haeri, S. Choobkar, and F. Jannesari, Characterization of complex
behaviors of TCP/RED computer networks based on nonlinear time series analysis methods,
Physica D 233, pp. 138-150, 2007.
[35] J. B. Gao, N. S. V. Rao, J. Hu, and J. Ai, Quasiperiodic route to chaotic dynamics of Internet
Transport Protocols, Physical Review Letters 94, pp. 198702.1-198702.4, May 2005.
[36] 練光佑, 以網狀系統為觀點之混合式 T-S 模糊控制系統的設計, 93 年度國科會研究計畫
成果報告論文集.
[37] 陳博現, “Adaptive flow control of high-spped networks,” 91年度國科會研究計畫成果報
告論文集
[38] B.-S. Chen; S.-C Peng, and K.-C. Wang, “Traffic modeling, prediction, and congestion
control for high-speed networks: a fuzzy AR approach,”IEEE Trans. On Fuzzy 8(5), pp.
491-508, 2000.
[39] V. Misra, W. B. Gong, D. Towsley, Fluid-based Analysis of a Network of AQM Routers
Supporting TCP Flows with an Application to RED, in: Proc. of ACM/SIGCOM, Stockholm,
2000, pp.151-160.
[40] R. Khasminslii. Stochastic Stability of Differential Equations, Sijthoff and Noordhoff, Alpen
and Den Rijn, Holland, 1980.
[41] S. Boyd, L. Chaoui, E. I. Feron, and E. Balakrishnan, Linear Matrix Inequalities in System
and Control Theory, SIAM, Philadelphia, PA, 1994.
[42] F. Kelly, Mathematical modeling of the Internet, Mathematics Unlimited-2001 and Beyond,
Springer-Verlag, Berlin, 2001, pp. 685-702.
[43] H. K. Khalil, Nonlinear Systems, 3rd ed. Prentice-Hall, Upper Saddle River, N. J., 2002.
[44] M. Krstic, I. Kanellakopoulos, and P. V. Kokotovic, Nonlinear and Adaptive Control Design,
Wiley-Interscience, New York, 1995.
[45] Linux network traffic control ─ implementation overview. available at
http://lrcwww.epfl.ch/linux-diffserv (1999)
[46] Iperf, <http://dast.nlanr.net/Projects/Iperf/>.
  
樹德科技大學教師申請出席國際會議參加情形報告書 
 姓    名 顏錦柱 服務單位 電腦與通訊系 職 稱 特聘教授 
國際會議名稱 The International MultiConference of Engineers and Computer Scientists 2011 
(IMECS 2011) 
發表論文名稱 Quasi Sliding Mode Control of Generalized Lorenz Chaotic Systems 
, Pei-Zhi Zhang-Jian, Chih-Yung Chen, Jun-Juh Yan* (顏錦柱), Shih-Yao 
Ying, Hun-Da Pei 
參加國際會議
概況 
   此 次 由 the International Association of Engineers 
(IAENG),所舉辦之 The International MultiConference of 
Engineers and Computer Scientists 2011 (IMECS 2011)，於
香港舉行。IMECS 2011 國際會議旨在匯集學術科學家，工程師，
業界研究人員和學者學生，提供平台，以交流與分享他們的經驗
和研究成果，由十三個會議共同組成，總共投稿論文有 836 篇，
接受論文有 454 篇，接受率約 54.31%，與會的學者來自約 50 個
不同的國家，研討內容中，探討領域方面包含計算機，電子和系
統科學與工程，並討論所遇到的實際挑戰和解決方案。此次會議
議程時間由 3 月 16 日~18 日，共計三天，於 3/15 當天到達香港
機場，隨即趕往位於尖沙嘴之 Royal Garden Hotel 舉行之會場。
隔天即辦理註冊相關程序與聆聽當天 The 2011 IAENG 
International Conference on Control and Automation 之報告。會中除
發表本人之研究論文外，也至各議程，聆聽各專家學者之論文發
表。此次，參加 IAENG 所主辦之 IMECS 2011 有相當的心得，不
管是國際學術上或香港經濟建設發展上，都令人留下深刻印象。
此外本人學生張簡培智、應氏堯隨行參加，並參與討論，其表現
亦相當穩健，同時透過會場的即席討論，學生收穫很多，相信此
行對此二學生未來之研究有正面的幫助。未來研究生的訓練，參
加國際研討會，學習如何即席表達研究成果，與世界接軌，應該
是要持續加強鼓勵的。 
 學生於會場留影 
 
  
 
  
 
 
98 年度專題研究計畫研究成果彙整表 
計畫主持人：顏錦柱 計畫編號：98-2221-E-366-011-MY2 
計畫名稱：應用於多媒體通訊網路之隨機程序強健壅塞控制器設計與實現 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 2 2 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 1 1 100%  專利 已獲得件數 2 2 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
