adjustments of labels in dynamic scenarios, and so 
on. Our goal is to find solutions for the above from 
both theoretical and practical aspects, and to 
develop a software platform in which our developed 
algorithms will be implemented and tested.  
 
英文關鍵詞： Geographic visualization, metro map visualization, 
automatic label placement, boundary labeling, map 
labeling, information visualization, geographic 
information system. 
 
English Abstract 
In order to use large textual labels to highlight dense information on a map, it is very 
helpful to apply the technique of boundary labeling to a map, in which each point or 
polygonal feature is connected to a label placed on the boundary of the map by a 
rectilinear or a straight line leader. Considering a map consisting of dense 
complicated routes in geographic visualization environments (e.g., the subway map of 
a large city), the user may not be concerned with all the routes on the map; instead, 
only a portion of the routes, called the user’s customized routes, will be of importance 
to the user from a practical viewpoint. If only those customized routes are displayed 
on a map, there will be some free space available, enabling the placement of labels on 
the boundary of routes (still inside the map) instead of on the map boundary. In this 
project, we investigate a variety of boundary labeling for the customized routes in 2D 
map visualization/labeling.  
The key issues behind our project include the design of algorithms for determining the 
polygon-side boundary of routes, placing more labels outside the boundary,  
real-time graphical adjustments of labels in dynamic scenarios, and so on. Our goal is 
to find solutions for the above from both theoretical and practical aspects, and to 
develop a software platform in which our developed algorithms will be implemented 
and tested.  
 
Keywords: Geographic visualization, metro map visualization, automatic label 
placement, boundary labeling, map labeling, information visualization, geographic 
information system. 
因為四、五月間前往東京大學參訪的行程因日本311大地震而取消，因此原先規
劃的主持人的國外差旅費並未完全使用完畢。由於本人與東京大學高橋教授的團
隊仍將繼續合作，如果可能，希望國科會能同意剩餘的國外差旅費，主持人能繼
續使用於與東京大學的國際合作中。 
 
 
 
14:50-15:10: Break 
15:10-16:00: Invited talk-3（chair: Takayuki ITOH, Ochanomizu University） 
Title: Visualizing Undirected Graphs: Interactivity and Optimization 
Speaker: Hiroshi HOSOBE, Associate Professor,  
Information Systems Architecture Research Division, National Institute of Informatics 
Abstract: This talk presents two methods that the speaker developed to visualize undirected graphs. 
The first method enables fast interactive graph visualization. It uses static graph layouts in 
high-dimensional spaces to dynamically generate two-dimensional layouts. The second method 
performs force-directed graph visualization based on numerical optimization. It is sufficiently 
general to adopt different basic force models, and runs at reasonably high speed especially when 
combined with the Kamada-Kawai force model. 
 
16:00-16:50: Invited talk-4（chair: Shigeo TAKAHASHI, The University of Tokyo） 
Title: Advance in Force-Directed Graph Drawing Methods 
Speaker: Chun-Cheng LIN, Assistant Professor,  
Department of Industrial Engineering and Management, National Chiao Tung University 
Abstract: Among various graph drawing techniques reported in the literature, the so-called 
force-directed methods have received much attention and have become very popular for drawing 
undirected graphs. In such a framework, a graph is viewed as a system of particles with forces 
acting between the particles, and then a good configuration or drawing of the particles could be 
generated with locally minimal energy, i.e., the sum of the forces on each particle is zero. According 
to previous experimental and theoretical results, graph drawing methods based on the 
force-directed strategy usually enjoy the merit of producing graph layouts with a high degree of 
symmetry and uniformity of the edge length. This talk gives my results on the advance in 
force-directed methods for the following topics: 
(1) drawing graphs with nonuniform sizes 
(2) drawing huge graphs using edge-edge repulsion 
(3) drawing graphs with large crossing angles 
(4) mental map preserving graph drawing 
 
16:50-17:00: Closing (Shigeo TAKAHASHI, The University of Tokyo) 
Figure 2: Label placement from the sequence of label IDs.
we can uniquely identify the best position of each labeling box only
from the sequence of label IDs. Note that, for accelerating the com-
putation, we sort the list of label positions according to the distance
from the corresponding target site in the preprocessing stage, and
only refer to the first specific number of positions to explore the
best available position for each label.
2.2 Labeling Criteria
From an aesthetic viewpoint, each labeling box should be placed
closer to the corresponding target site, while the intersection be-
tween leaders should be avoided. When defining the fitness func-
tion, we should take into account the above aesthetic issues so that
we can fully enhance the visual readability of the input metro map.
In the definition of the fitness function, we count the number of la-
beling boxes that are blocked out from the external labeling space,
and increase the fitness score accordingly in order to penalize such
missing labeling boxes. We also compute the total sum of the nor-
malized leader lengths so that we can place each labeling box as
close as possible to the corresponding target site. The actual defini-
tion of the fitness function can be written as
λ1× fpenalty+λ2× fleader,
where fpenalty and fleader represent the penalty of the missing
labels and sum of normalized leader lengths, respectively, while λ1
and λ2 indicate to the corresponding weight values.
Furthermore, we also assign a priority value to each labeling box
in order to make important labeling boxes stay in the metro map.
This can be accomplished by just multiplying the fitness scores
fpenalty and fleader by the priority value of each labeling box in
the above definition. This effectively allows us to make important
annotation label stick to the labeling space in the final personalized
visualization of metro maps.
3 RESULTS
In this section, we will show some external label placement exam-
ples on published metro maps, obtained through interactions with
our prototype system. Figure 3(a) shows label placement on the
Tokyo metro map with the original scale, and Figure 3(b) corre-
sponds to the enlarged view of the map. In this way, our Fo-
cus+context scheme allows us to inspect an interesting region in
more detail without missing global context of the metro map. As
described earlier, our approach recalculate the optimal layout of la-
beling boxes every time when the scale and position of the map
have been changed. Note that the thickness of the bounding box
corresponds to the priority value assigned to that label. This clearly
reveal that the important labels are likely to stay in the map even
when we change the scale of the map, which retains the coherence
of the label placement over multiple scales.
Figure 4 shows how different weight values influence on the
placement of the labeling boxes over the Taipei MRT map. The
leader lengths are fully minimized so that the labels can stay close
(a)
(b)
Figure 3: Label placement on the Tokyo metro map.
(a) (b)
Figure 4: Label placement examples on the Taipei MRT map, where
(a) λ1 = 0.2 and λ2 = 0.8 and (b) λ1 = 0.8 and λ2 = 0.2.
to the target sites in Figure 4(a), while more labeling boxes are in-
corporated in the map at the cost of longer leader length in Fig-
ure 4(b). This weight assignment scheme successfully allows us to
control the visual quality of the label placement in the metro map
by adjusting the definition of the fitness value.
4 CONCLUSION
In this poster, we have presented an approach to applying supple-
mental information using rectangular labels to the existing metro
map. Our encoding of label placement has been inspired by the
famous floor-planning problem, and is implemented using genetic
algorithms in order to enable fast interactions for users. Our future
extension includes automatic extraction of labeling spaces from the
map images, persistent placement of important labels across mul-
tiple scales, and simultaneous optimization of label placement and
metro network.
REFERENCES
[1] J. Holland. Adaptation in Natural and Artificial Systems. University of
Michigan Press, Ann Arbor, 1975.
[2] C. Iturriaga and A. Lubiw. NP-hardness of some map labeling prob-
lems. Technical Report CS-97-18, University of Waterloo, 1997.
[3] C.-C. Lin. Crossing-free many-to-one boundary labeling with hyper-
leaders. In Proc. of 3rd IEEE Pacific Visualization Symposium, pages
185–192, 2010.
(a) (b)
Figure 2: (a) Octilinear directions and (b) the corresponding sectors
in the conventional MIP formulation [2].
2 METHOD
This section describes our method for designing octilinear layouts
of metro maps.
2.1 Calculation of Octilinear Layouts
In our approach, we employ the conventional MIP formulation [2]
to obtain the octilinear layouts of metro maps. As describe earlier,
this technique calculates an optimal octilinear layout by minimizing
the line bends, total line length, and similarity to the original line
orientation. Among these three aesthetic qualities, the last one has a
primary influence of the resulting shape of the metro network while
the first two are basically independent of its original geographical
layout. In practice, our key idea is to change such orientations of
metro line segments interactively through a design interface.
In the conventional MIP formulation [2], all the edge segments
are guaranteed to aligned to one of the eight octilinear directions
as shown in Figure 2(a). This is accomplished by classifying each
edge segment to one of the eight sectors of Figure 2(b) or its next
one according the orientation of that edge. In our approach, we
prepare an angle variable for each edge and allow users to freely
edit the variables for customizing the layout of the metro network.
2.2 Interface for Editing Edge Orientations
We equipped our prototype system with an interface so that users
can conduct a two-step design process. First we let the users to
rotate the original geographical layout of the metro network (Fig-
ure 1(a)) so that they can specify the orientation of the entire metro
map (Figure 1(b)). As shown in Figure 1(b), a dial metaphor ap-
pears when rotating the metro network so that the users can visually
confirm the rotation angle to adjust its plausible orientation. This
step is followed by the orientation adjustment of a local set of edges
where users can edit the relative positioning between the stations
and metro lines. Here, the users are expected to select a group of
edges by using a rubber-band selection tool (Figure 1(c)) first, and
then change the local orientations associated with the selected edges
(Figure 1(d)). This step is effective especially when we edit a star-
shaped metro network that typically exists in major cities, because
we are more likely to keep the shape of the metro network around
the central downtown area while apply drastic changes to those in
the suburb areas. The orientation adjustment is also supported in a
way that the rotation angle of each edge is adjusted according to the
distance of that edge from the center of the metro network. This is
accomplished by computing the topological distance from each sta-
tion to others first, and then finding the station having the minimum
sum of the distances. The users can apply the MIP optimization
any time when they want to see the resulting octilinear layout of
the metro map with current configuration of edge orientations (Fig-
ure 1(e)). The overall design can be carried out by trial and error
until the users can obtain satisfactory results (Figures 1(f)-(j)).
3 RESULTS
Our prototype system is implemented on a desktop PC with two
Quad-Core Intel Xeon CPUs (2.4GHz, 12MB cache) and 8GB
RAM, and the source code has been written in C++ using OpenGL
(a)
(b)
(c)
Figure 3: Design examples: the Prague metro (left) and Taipei metro
(right). (a) Geographical layouts. (b) Octilinear layouts obtained by
the conventional MIP formulation. (c) Layouts generated with our
system.
for drawing metro layouts and GLPK (GNU Linear Programming
Kit) for solving MIP problems. Figure 3 shows the design exam-
ples of the Prague and Taipei metro maps. The conventional MIP
formulation allows us to transform original geographical layouts of
the metro network (Figure 3(a)) into their corresponding octilin-
ear layouts (Figure 3(b)). Using our prototype system, we can edit
the layout so that we can change the aspect ratio of the entire map
by reorienting the entire metro network together with metro line
segments in the suburb areas (Figure 3(c)). Note that our system re-
quires 2 seconds and 5 seconds in average for the Prague and Taipei
metro maps, respectively, each time when solving a MIP problem.
Design examples in Figures 1 and 3 show that we can successfully
design the layouts of metro networks while preserving their planar
embeddings.
4 CONCLUSION
In this study, we have presented a model for interactively design the
layouts of metro maps while retaining the planar embeddings of the
corresponding geographical maps. Our design process consists of
specifying the entire orientation of the metro map and then reori-
enting local clusters of edges. Several design examples have been
also provided to demonstrate the effectiveness of the proposed ap-
proach.
REFERENCES
[1] S.-H. Hong, D. Merrick, and H. A. D. Do Nascimento. The metro map
layout problem. In In Proceedings of the 12th International Symposium
on Graph Drwaing (GD 2004), volume 3383 of Springer Lecture Notes
in Computer Science, pages 482–491, 2005.
[2] M. No¨llenburg and A. Wolff. Drawing and labeling high-quality metro
maps by mixed-integer programming. IEEE Transactions on Visualiza-
tion and Computer Graphics, 17:626–641, 2011.
[3] J. Stott, P. Rodgers, J. C. Martinez-Ovando, and S. G. Walker. Auto-
matic metro map layout using multicriteria optimization. IEEE Trans-
actions on Visualization and Computer Graphics, 17:101–114, 2011.
2(a) (b)
Fig. 1. Examples of annotation label layouts in Taipei MRT maps: (a) A conventional
layout where image labels are placed closer to the corresponding sites. (b) The proposed
layout into which commonly used design in hand-drawn maps is incorporated.
small space around the map content. External labeling overcomes this problem
by seeking more labeling space away from the map content, but at the cost of
applying leaders that often disturb the visual quality of the annotated map.
In hand-drawn metro map illustrations, the mixture of internal and external
labels is effectively employed to apply textual and image annotation labels. How-
ever, the arrangements of such textual and image labels are quite different in that
the textual labels are placed in the vicinity of the corresponding site, while the
image labels are more likely to be aligned around the corner of the map domain
or along its boundaries, so that we can fully enhance the aesthetic arrangement
of such labels on the entire map as shown in Fig. 1(b). Indeed, conventional
approaches attach image labels in the same way as the textual ones, resulting in
a map that cannot maintain a visually plausible arrangement of image labels, as
seen in Fig. 1(a). Nonetheless, formulating this kind of aesthetic map design as
a computational algorithm is still a challenging task in the sense that we have to
solve a rectangle packing problem, which usually leads to a well-known combina-
torial NP-hard problem. Furthermore, the problem becomes more complicated
especially for annotating metro maps. This because the labeling space around
the metro network often consists of multiple non-rectangular regions including
small ones, where we cannot directly apply the conventional boundary labeling
techniques neither.
In this paper, we present a new approach for placing textual and image
annotation labels on the metro maps while maintaining the above aesthetic ar-
rangement of such labels in the map domain. This is accomplished by segmenting
the entire map into content, internal, and external zones, so that we can arrange
annotation labels according to their label types. We compute such zone-based
segmentation by applying conventional image processing techniques to dilate the
network of metro lines on the map image. This segmentation also allows us to
introduce the potential field over the outermost external zone, where we can
aesthetically align the image annotation labels along the map boundaries by
referring to the potential values. Note that in our setup, we take a metro net-
4by formulating the label layouts in hand-drawn illustrations [10], which were
followed by a real-time algorithm for annotating 3D objects [9]. However, these
schemes used the external labels as the replacements of internal ones when the
labels cannot be placed close enough to the corresponding sites, and always tried
to embed both types of labels as close as possible to the sites. (See Fig. 1(a).)
Bekos et al. [2] also presented the combined use of internal and external labels
while the external labels were expected to stay on the predefined boundary
margins only. Our proposed approach differs from the conventional ones in that
it also takes advantage of a set of small empty space around the given metro
network as the labeling space, while keeping the aforementioned aesthetic layout
of textual and image annotation labels on the entire map domain. Combinations
of internal and external labels have also been employed to annotate various
targets including column charts [17], 3D virtual landscapes [15], surfaces of 3D
bumpy objects [6], and 3D illustrations [7].
Metro map visualization itself is an interesting theme that has been inten-
sively researched recently [21]. In this category, the metro map was aesthetically
deformed first and the stations were then annotated by textual labels. Hong et
al. [11] presented an approach to visualizing metro maps based on the spring
models, Bo¨ttger et al. [4] developed a scheme for distorting metro maps for an-
notation purposes, Stott et al. [19] formulated multiple criteria for optimizing
metro map layout and placing textual labels and No¨llenburg and Wolff [18] em-
ployed mixed-integer programming to draw and label metro maps in a visually
plausible manner. In our approach, we respect the original geometry of the given
metro network and focus on the optimal placement of annotation labels only.
3 Zone-Based Segmentation of the Map Domain
Our approach begins by partitioning the metro map domain into three zones:
the content, internal, and external zones. The content zone tightly encloses the
metro network and we do not place any labels in that zone. The internal zone
is next to the content zone and we can place textural labels only there. The
external zone is the complement of the previous two zones and we can embed
any types of labels there. Note that in this zone-base map segmentation, we can
lay out textual labels on both the internal and external zones while image labels
can be placed within the external zone only, as shown in Fig. 3.
3.1 Dilating Metro Lines on the Map Image
For defining the three different zones over the metro map, we first generate the
metro network image by drawing the given metro lines, then apply the mor-
phological dilation operations to the image to synthesize dilated metro network
images. Note that, in our implementation, we employed the ordinary 3× 3 rect-
angular kernel mask, which is equipped with the OpenCV library by default.
Although Cipriano and Gleicher [6] applied both the dilation and erosion op-
erations to compute the scaffold surface over the input 3D bumpy objects, our
6(a) (b)
Fig. 3. (a) Zone-based segmentation on Taipei MRT map. White, orange, and gray
colors (with gradation) indicate the content, internal, and external zones, respectively.
In the external zone, black and white colors indicate high and low potential regions,
respectively. (b) Taipei MRT map with textual and image annotation labels.
map boundary rather than in the neighborhood of the corresponding site. We
also keep potential values rather uniform in the region away from the boundary
to make image labels freely move around in that region to avoid undesirable
conflicts with other labels. The potential field has been defined in our approach
again by applying dilation operations ne times, where ne > ni, to the binary
image in Fig. 2(b), so as to obtain the sufficiently dilated metro network image as
shown in Fig. 2(e). This dilated image is then blurred with the Gaussian filter to
obtain the potential field as shown in Fig. 2(f), where the black and white colors
indicate high and low potential regions, respectively. In our implementation,
ne = 64 by default.
3.3 Discretizing the Map Domain into Grid Square Cells
Basically, we can find good positions for each label by referring to the zone-based
map partition and potential field that we have obtained. However, allowing the
annotation labels to move over the map domain pixel by pixel leads to the
excessive degree of freedom in their position. In our approach we discretize the
map domain into a set of grid square cells in order to effectively limit the number
of available positions for each label, which allows us to reduce the search space
for optimized label placements. Note that in our implementation, we fixed the
side length of the grid square to be 16 pixels. This discrete representation of the
map domain can be easily obtained by dividing the side lengths of the image
by the grid square size. We then refer to each pixel value of the resized image
for retrieving the zone-based map segmentation and potential values. In our
implementation, we use the OpenCV library again to perform the image resizing
operations. Fig. 3(a) represents an example of the resulting set of grid square
cells together with the zone-based segmentation and potential field described
previously.
8Fig. 5. Greedy search for the best positions of labels in the order of closeness to the
sites.
(a) (b)
Fig. 6. Spatial distribution of the fitness values for placing (a) textual and (b) image
labels around the transfer station in circles. White color indicates the better positions.
This way, each textual label can be matched with its corresponding site
because they are close enough to each other in general. However, if their distance
exceeds the predefined threshold, we need to draw a leader between them to fully
clarify the correspondence between the station and its name in the metro map
visualization. Such a case can be found in Fig. 3(b). For the image annotation
labels, on the other hand, we use a different strategy to find the optimal positions.
As described earlier, we already synthesized the potential field in the external
zone, which allows us to align the image labels around the corner of the map
domain or along its boundaries. For finding the best position for an image label,
we compute the sum of the potential values on the square cells that will be
covered by the label at each possible position, and then employ the position
having the optimal sum while avoiding conflicts with other existing labels on
the map.
In our framework, we place textual and image annotation labels individually
using two different chromosome pools. Actually, we place textual labels first
and then image labels, where we try to avoid overlap between the textual and
image labels while allowing crossings between the textural labels and leaders
connected to the image labels. This is because we can considerably alleviate the
visual flickers due to such crossings, by assigning different colors to the texts and
leaders of the image annotation labels, as shown in Fig. 3(b).
Moreover, we also design the arrangement of annotation labels so that all the
labels are free of conflicts with the metro network itself. In our implementation,
10
(a) (b)
Fig. 7. (a) Uniform and (b) adaptive label size adjustment for Taipei MRT maps.
Important stations are emphasized by enlarging the text and image annotation labels.
(a) (b)
Fig. 8. Influence of different weight values λ1 and λ2 on the label layouts over Tokyo
subway maps. (a) λ1 = 0.8 and λ2 = 0.2. (b) λ1 = 0.2 and λ2 = 0.8. The number of
labels is maximized in (a) while the total sum of leader lengths is minimized in (b).
Fig. 3(a) shows the zone-based segmentation of Taipei MRT map calculated
in our system and Fig. 3(b) presents the finalized layout of textual and im-
age annotation labels on the map. The synthesized map clearly shows that we
can aesthetically align image annotation labels around the corner or along the
boundaries of the map domain, while textual labels are placed close enough to
the corresponding stations. Note here that we assign higher priority to transfer
stations and terminals by default in our system, thus annotation labels are more
likely to be applied to these stations. We can also emphasize such important
stations explicitly by enlarging the corresponding annotation labels as demon-
strated in Fig. 7(b), which successfully draw more attention to some specific
stations compared to Fig. 7(a). Moreover, the label layout can be controlled by
tweaking the weight values in the objective function for our genetic-based opti-
mization. Fig. 8 exposes such an example where we can increase the number of
embeddable labels (Fig. 8(a)) or minimize the total leader lengths (Fig. 8(b)).
Fig. 9 demonstrates that our system also provides a semantic zoom interface for
12
2. Bekos, M.A., Kaufmann, M., Papadopoulos, D., Symvonis, A.: Combining tra-
ditional map labeling with boundary labeling. In: Proc. 37th International Con-
ference on Current Trends in Theory and Practice of Computer Science (SOF-
SEM2011). Springer LNCS, vol. 6543, pp. 111–122 (2011)
3. Bekos, M.A., Kaufmann, M., Symvonis, A., Wolff, A.: Boundary labeling: Models
and efficient algorithms for rectangular maps. Computational Geometry: Theory
and Applications 36, 215–236 (2007)
4. Bo¨ttger, J., Brandes, U., Deussen, O., Ziezold, H.: Map warping for the annotation
of metro maps. IEEE Comptuer Graphics and Applications 28(5), 56–65 (2008)
5. Christensen, J., Marks, J., Shieber, S.: An empirical study of algorithms for point-
feature label placement. ACM Trans. Graphics 14(3), 203–232 (1995)
6. Cipriano, G., Gleicher, M.: Text scaffolds for effective surface labeling. IEEE Trans.
Visualization and Computer Graphics 14(6), 1675–1682 (2008)
7. Cˇmol´ık, L., Bittner, J.: Layout-aware optimization for interactive labeling of 3D
models. Computers and Graphics 34, 378–387 (2010)
8. do Nascimento, H.A.D., Eades, P.: User hints for map labeling. Journal of Visual
Languages and Computing 19, 39–74 (2008)
9. Go¨tzelmann, T., Hartmann, K., Strothotte, T.: Agent-based annotation of inter-
active 3D visualization. In: Proc. 6th International Symposium on Smart Graphics
(SG2006). Springer LNCS, vol. 4073, pp. 24–35 (2006)
10. Hartmann, K., Gotzelmann, T., Ali, K., Strothotte, T.: Metrics for functional and
aesthetic label layouts. In: Proc. 5th International Symposium on Smart Graphics
(SG2005). Springer LNCS, vol. 3638, pp. 115–126 (2005)
11. Hong, S.H., Merrick, D., do Nascimento, H.A.D.: Automatic visualisation of metro
maps. Journal of Visual Language and Computing 17, 203–224 (2006)
12. Lin, C.C.: Crossing-free many-to-one boundary labeling with hyperleaders. In:
Proc. IEEE Pacific Visualization Symposium 2010 (PacificVis 2010). pp. 185–192
(2010)
13. Lin, C.C., Kao, H.J., Yen, H.C.: Many-to-one boundary labeling. Journal of Graph
Algorithm and Appplications 12(3), 319–356 (2008)
14. Lin, C.C., Wu, H.Y., Yen, H.C.: Boundary labeling in text annotation. In: Proc.
13th International Conference on Information Visualization (IV2009). pp. 110–115
(2009)
15. Maass, S., Do¨llner, J.: Efficient view management for dynamic annotation place-
ment in virtual landscapes. In: Proc. 6th International Symposium on Smart
Graphics (SG2006). Springer LNCS, vol. 4073, pp. 1–12 (2006)
16. Mote, K.: Fast point-feature label placement for dynamic visualizations. Informa-
tion Visualization 6, 249–260 (2007)
17. Mu¨ller, S., Scho¨dl, A.: A smart algorithm for column chart labeling. In: Proc.
International Symposium on Smart Graphics (SG2005). Springer LNCS, vol. 3638,
pp. 127–137 (2005)
18. No¨llenburg, M., Wolff, A.: Drawing and labeling high-quality metro maps by mixed-
integer programming. IEEE Transactions on Visualization and Computer Graphics
17(5), 626–641 (2011)
19. Stott, J., Rodgers, P., Mart´ınez-Ovando, J.C., Walker, S.G.: Automatic metro map
layout using multicriteria optimization. IEEE Transactions on Visualization and
Computer Graphics 17(1), 101–114 (2011)
20. Wall, M.: GAlib: A C++ library of genetic algorithm components,
http://lancet.mit.edu/ga/
21. Wolff, A.: Drawing subway maps: A survey. Informatik - Forschung und Entwick-
lung 22, 23–44 (2007)
 2
講之外，並邀請了御茶水女子大學的伊藤貴之(Takayuki Itoh)教授和國立情報學
研究所(National Institute of Informatics; NII)的細部博史(Hiroshi Hosobe)教授作專
題演講。藉由這次的學術交流，我們將雙方的專長和目前的成果各自表述，透過
相互瞭解，找尋可以合作的空間。 
 
10 月 9 日(週五)討論結束後，我們雙方獲得許多彼此計畫成果的交流。由於仍有
許多細節需要進一步的討論，所以我們留待回國後繼續進行。並且約定之後將用
網路視訊來作討論，並把目標放在投稿一個投稿截止日於 12 月之國際會議。 
 
10 月 8 日(週六)，我們主要是待在旅館中，檢討本次的交流與合作，並討論一些
研究計畫的議題。10 月 9 日(週日)我們即搭乘飛機回台灣。 
 
2. 學術討論 
討論的第一天，高橋教授及其實驗室的
所有學生介紹他們實驗室目前正在執行
的研究。他們主要是處理與計算機圖學
領域相關的各種議題，包含：使用者互
動介面設計、運用 tensor 計算來自動分
析網格、自動化分析動態社群之運動
等。他們向我們做完介紹完後，希望我
們提供了一些建議給他們，而進一步尋
求合作的機會。接著，高橋教授的學生
帶我們參觀他們實驗室的研究設備，當
中印象最深刻的是他們展示了 eye tracker 的設備，該設備可追蹤眼睛轉動以反應
在螢幕上，並且可以針對眼睛停留的時間作進一步的視覺分析。介紹完後，我們
到一間會議室作與本計畫研究的主要討論，首先由高橋教授的學生報告他們目前
研究進行的進度並展示他們目前撰寫的程式，然後我方也報告我們目前研究進行
到的進度。討論的結果是我們將問題分成兩個階段作處理：第一、給定一個地鐵
軌道圖(如右上圖，包含了地鐵車站與路線)，使用者會選定兩個車站做為起點和
終點，接著系統會找出起點到終點的最短路徑，盡可能的在不造成交叉且滿足其
他美學條件下將該路徑繪製成直線，則使用者根據此直線的觀看可有比較容易的
搭乘車站與轉乘車站的印象。第二、在得到此客製化地鐵地圖後，將最短路徑上
各個車站標示出邊界標籤，當中標籤與車站要用一條指線連接起來。我們採用了
幾個方案來設計地鐵圖標示的第一個部分，包含了 Mixed-Integer Programming 
(MIP)和 Spring Algorithm 兩個方案來作邊界標示。我們發現 MIP 方案繪製出來
的結果較佳，因此選定了該方案。至於第二個部分，我們討論出使用 matching
的方案來解決 crossing minimization 的指線配置。結論是我們進一步撰寫程式，
下次討論時再看成效如何。 
 
 4
在瞭解了雙方所掌握的技術之後，我們歸納出了下列幾個繼續進行的方向。 
 
3.1 地鐵地圖標示的應用 
 
雖然目前地鐵地圖平台已成功實作一些基本的功能的演算法，然而卻欠缺了用在
它上面的實際應用與分析。事實上，同樣的技術可以用在其他應用上，如社群網
路視覺化、VLSI 電路視覺化等，因此，未來我們可以嘗試把可能的應用實作在
此平台上，試圖來分析其效能與實用性。在實作這些應用的過程中，亦可能發生
我們需要某些功能的演算法沒有被地鐵地圖平台所實作的情形，則此時我們雙方
可能合作配合如何來實作。 
 
3.2 整合兩階段技術為單一技術來提升效能 
 
目前地鐵地圖平台分成兩階段技術來解決問題：第一、盡可能的在不造成交叉且
滿足其他美學條件下將起點與終點車站的最短路徑繪製成直線。第二、將最短路
徑上各個車站標示出邊界標籤。然而，兩個技術事實上是可以整合成單一技術來
提升效能的，因此，未來將研究如何整合兩個問題為單一問題作處理。 
 
3.3 實作更多地鐵地圖系統平台上的功能 
 
目前地鐵地圖平台只實作了一些基本功能，因此我們可能朝著豐富化的功能的方
向來執行。 
 
3.4 圖形使用者介面的相容性與改進 
 
地鐵地圖平台目前有一套圖形使用者介面，不過由於目前的圖形使用者介面功能
相當的陽春且其目前地圖的呈現尚未很美觀，所以我們未來會使其功能更為豐
富，並且盡可能改進其地圖標示的呈現方式。 
 
3.5 地鐵地圖平台的變形 
 
目前地鐵地圖平台只針對靜態地鐵地圖標示作實作，未來可以考慮其他該研究之
變形，如：動態地圖標示、互動地圖標示、移植至行動平台之地圖標示等。 
 
3.6 撰寫發展文件 
 
目前地鐵地圖平台牽涉了許多人員的投入，然而卻欠缺了許多詳細的發展文件以
提供全體人員在開發時的便利。因此，在開發的同時，發展文件的撰寫與修改是
一件很重要的事。 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/02/11
國科會補助計畫
計畫名稱: 動態二維/三維地理視覺化環境之邊界標示
計畫主持人: 顏嗣鈞
計畫編號: 99-2221-E-002-115- 學門領域: 計算機理論與演算法
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
 
2011 年十月五日於日本 Keio University 與日方學者共同舉辦 「2011 
Taiwanese-Japanese Workshop on Information Visualization and Graph 
Drawing」研討會。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
