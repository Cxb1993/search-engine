ii
英文摘要 Abstract
Peer-to-peer (P2P) networking model has been successfully applied in
file-sharing applications. Many research efforts have been dedicated to related issues
as indicated by increasing amount of publications on P2P networks in recent years.
This project focuses on three major issues regarding the performance of both
P2P-based searching and downloading.
First, we proposed a structured architecture and a clustered architecture based
on binary balanced tree and locality of interest respectively to improve searching
performance. The binary balanced tree controls the height of routing trees thus
reducing search latency. An adaptive fast routing scheme is suggested to trade
increased size on routing table for reduction on search time. For the clustered
architecture, interest-based grouping is employed in order for better query hit ratio,
reduced message overhead, and reduced searching latency.
Second, a two-tier locality-aware P2P architecture that integrates DHT-based
(distributed hash table) and superpeer-based structures was proposed. Landmark
servers are employed for each peer to acquire a landmark ordering number which is
used to map the peer into a group which is formed by geographically nearby peers.
Since neighboring peers are organized into the same group led by a superpeer,
performance on searching and downloading can be greatly improved.
Finally, we dealt with the last block problem of the BitTorrent, a popular P2P
file-downloading system. The last block problem occurs when some peers may not
complete their downloading because they are waiting for the last few file blocks that
no longer exist in the system due to dynamic peer joining and leaving. We proposed
an approach that aims at increasing content diversity in BitTorrent by explicitly
acquire rare pieces. Performance showed that our approach can effectively alleviate
the last block problem.
1一、前言
點對點網路服務模式在近年來獲得相當廣泛之運用，特別是在資源分享的
應用範疇。而點對點網路的架構、效能、及創新應用的發展，亦為國內外各的
學術研究單位積極探討的重要議題。點對點網路服務架構和傳統客戶端/伺服端
網路服務模式最大之不同點，在於網路應用服務不再是僅由伺服器提供，而是
分散由所有參與的成員共同提供。如此可節省伺服端在電腦硬體及網路頻寬上
的高成本，同時也避免集中式之伺服端因為故障或負載無法提供服務的潛在問
題，進而有效改善網路應用服務的品質。
分散式點對點網路系統依其網路組成架構可大致分為結構式與非結構式的
架構。分散式點對點網路架構最早最提出的是非結構式之 Gnutella 系統[1]。非
結構式點對點網路系統之網路結構是由成員採用隨機的連接方式組合而成，沒
有任何一個成員具有完整的網路結構資訊，每一個成員僅知自己的鄰近成員並
且透過這些鄰近成員連接至整個網路。在 Gnutella 系統中資源的搜尋採用訊息
泛流的方式，請求成員在搜尋資源時廣播其要求訊息，並且等待具有該分享資
源之成員在收到廣播訊息後回應，以便進行直接連線分享資源。非結構式架構
的問題在於泛流訊息會造成網路的負擔並影響其網路規模性（scalability）[2]，
結構式點對點網路架構則是此一問題的解決方式之一。
受到眾多關注之結構式點對點網路架構包含 Pastry[3], CAN[4], Chord[5]等
系統。結構式點對點網路架構的中心思想在於 consistent hashing 的概念。
Consistent hashing 在網路成員與分享資源間建立起某些關連性，用以引導資源
的搜尋，加速整個搜尋的程序，並且確保分享資源的可及性。在結構式的點對
點網路系統中，每一個成員所維護路由資訊，除了引導資源的搜尋外，同時也
記錄著成員的變動與連接方式。因此在成員動動頻繁的環境中，相較於非結構
式之 Gnutella 系統，需要額外的成員控制的機制成本與負載。
然而，不論是非結構式或結構式的點對點網路系統，都是以疊蓋網路模式
（overlay）建構於現有以 IP 為基礎之實體網際網路之上，這使得點對點網路的
連結方式與其下的 IP 網路的連結方式，產生拓撲不匹配（topology mismatch）
的現象。拓撲不匹配會造成繞路的問題，或是造成同一條實體連結上，相同訊
息重覆的經過，因此減低了點對點網路的整體效能。
此外，檔案資源之分享為點對點網路應用之大宗，因此檔案傳輸的效能，
是此類點對點網路檔案分享系統成功的相當重要關鍵，特別是對於大型檔案的
分享。目前最盛行之系統為 BitTorrent[6]，其採用多點平行下載（multi-source
parallel downloading）的概念，加快檔案下載的速度。在此類系統中，一個大檔
案被切成一塊塊較小的檔案片段，只要一節點擁有一個檔案片段，便能開始分
3二、研究目的
１、結構式與非結構式點對點網路架構之資源搜尋
本研究計畫對於結構式與非結構式點對點網路架構皆進行探討，研究內容
特別著重在針對資源搜尋的效能改良上。在結構式的網路架構方面，我們發現
相關的作法當中的成員組織方式，皆可用樹狀的結構來表示，而搜尋資源的平
均時間和樹狀結構的高度有密切的關連性，因此我們提出一個以二元平衡樹為
基礎之結構式網路架構，透過控制樹結構的高度，以及成員節點間連結的設定，
搭配可調整的跳躍式快捷搜尋，縮短搜尋資源所需的時間。
另外在非結構式的網路架構方面，將成員節點分為超級節點以及一般節點
組成群組的概念，是現行大規模系統所採用的架構[7-10]，這個具有兩個層次的
成員組成方式，運用了成員節點計算能力與網路頻寬的異質性（heterogeneity），
有效解決非結構式架構訊息負載的問題。因此在此一方向，本計畫建立一個以
群組為基礎，並且以節點興趣相似度做為分組的原則的點對點網路系統，藉由
節點的分群而侷限使用者做搜尋的範圍，同時提升整體的搜尋效率。
２、考量節點地域性之點對點網路架構
由於點對點網路是建構在疊蓋網路上，使得點對點網路的連結會和其下 IP
實體網路的連結產生拓撲不匹配的現象[11]。拓撲不匹配會使得同一條實體連
結不斷有著重覆的信息經過，進而傷害到點對點網路的效能。我們提出了一個
具有節點地域性考量的兩階層點對點網路架構，以避免或減低形成點對點網路
和實體網路的拓撲不匹配的現象。
此一架構之主要概念，是考量節點在實體網路中之地域位置，將在實體網
路上相近的節點組成一個群組。而在這個二階層架構中，上階層是由超級節點
利用使用分散雜湊表機制所建立的結構式點對點網路，而下階層則是由其他一
般節點連結鄰近的超級節點所組成之區域性群組（local group）。
5三、文獻探討
１、點對點網路架構資源搜尋效能之改良方法
點對點網路系統的搜尋法可以大致上可區分為使用於非結構式架構中之泛
流式（flooding）搜尋、以及使用於結構式架構中之繞送式（routed）搜尋。泛
流式搜尋將搜尋訊息由要求節點以廣播方式傳送至網路中：每一個節點都會接
收並轉送要求訊息給其所有相鄰的節點，最後搜尋訊息會傳播至所有的節點，
在這個過程中，分享該資源的節點皆會回傳搜尋成功的訊息給要求節點，再由
要求節點選擇資源的下載對象。Gnutella 便是泛流式搜尋的代表，它採用廣度
搜尋（BFS, Breadth First Search）的策略尋找資源，而另一個亦使用泛流式搜尋
的非結構點對點網路系統 Freenet[13]，則是採用深度搜尋（DFS, Depth First
Search）的策略尋找資源。
繞送式搜尋提供比泛流式搜尋具有更高的搜尋效能，並且具有較高的穩定
性與可得性。繞送式搜尋引入了分散式雜湊表機制來做資源與節點位址的索
引，資源的實際位址資訊依據系統訂定的規則與資源索引值分散在各個節點中
儲存，因此使得資源詢問訊息可以根據相同的規則，經由一連串的繞送到達資
源索引值所對應的網路節點。結構式點對點網路皆使用此類繞送式搜尋方法，
僅在節點之組成結構上稍有差異，例如多維空間結構之 CAN、環狀結構之 Pastry
及 Chord。
２、考量節點地域性之點對點網路架構方法
此子節簡述解決疊蓋網路和實體 IP 網路拓撲不匹配的相關作法。在[14]中
提出的 LTM（Location-Aware Topology Matching），利用 TTL-2 偵測訊息計算
每一節點與其鄰近節點的距離，透過得到之資訊，將延遲較低的節點連結（link）
保留，將較高延遲之連結切斷，以漸進方式解決拓撲不匹配的問題。而在[11]
中所提出的 ACE（Adaptive Connection Establishment），節點的主要動作是根據
連結延遲所建立之成本表（cost table）建立 Spanning Tree，並根據此 Spanning
Tree 把不需要的連結切掉，而主動建立較好的連結，來減少搜尋時重覆訊息的
產生。LTM 與 ACE 之作法主要缺點為加入測量節點間連結延遲之新訊息，而
造成系統額外訊息負載。
7四、研究方法
１、以有序二元樹建置結構式點對點網路系統
我們採用有序二元樹（圖一）來設計一個結構式點對點網路架構中成員管
理的方法[18]。所有的網路節點連成二元搜尋樹，將資源名稱與網路節點透過
雜湊方式轉送到同一邏輯空間，資源位址放置於資源索引值（index）在邏輯空
間對應到的網路節點。如此，資源搜尋可以看成是 0/1 位元之二元搜尋，搜尋
的動作可以在一定的路徑長度內完成，亦即二元樹之高度。我們就二元搜尋可
以衍生出搜尋技巧，逐漸發展出快捷式搜尋的設計，加快了在這個結構式架構
中資源搜尋的速度。
圖一、有序二元樹示意圖。
首先在簡易式搜尋中，每一個詢問訊息皆被往上送到根節點，由根節點開
始往下做二元搜尋，直到找到資源位址或者到達葉節點（leaf node）才停止。
往上送到根節點的原因是每一個節點無法確定資源索引值是否在它的下層節點
中，只有根節點可以到達所有資源索引值所在的節點。
9２、以興趣為基礎之群組架構
在非結構式的點對點網路系統中，泛流式是訊息傳遞基本的運作方式，例
如節點之在線狀態（online）和資源搜尋要求訊息的傳送。當系統規模逐漸增加
時，泛流式搜尋反而會因為過多的訊息而造成網路壅塞，導致整體效率明顯地
降低，而且在較遠處的使用者節點可能也會因為最高轉送限制（TTL）的限制
而無法搜尋到遠處的目標資源。
為了有效解決這個問題，我們建立一個以群組為基礎的點對點網路系統
[19]，其目的是為了提升在點對點網路系統的搜尋效率，包括減少傳送訊息的
量，去除不必要的連線、以及提供使用者較為明確的搜尋方向。為了達到這樣
的目的，我們定義了一套以各個使用者節點的興趣相似度（locality of interest）
為主要考量用以形成群組的架構（圖三）及其建置方法。這個架構最主要的特
性就是根據各個節點的不同性質來做適當的分類，藉由節點的分群來侷限使用
者搜尋的範圍。而使用者可以依照本身的分享資源的特徵，或系統所提供的各
個群組性質的描述與定義，來針對特定的群組做訊息的傳送，如此不但減少了
非必要連線的建立，提升整體系統的效能，同時也建立了各個節點之間良好的
溝通機制。
圖三、以興趣為基礎之群組方式網路架構圖。
2.1、興趣群組之組成
首先，我們先對興趣群組（interest group）加以定義與描述。擁有相同興
趣的使用者節點形成一個群組，也就是在同一群組裡面的所有使用者節點具有
11
圖四、跨群組搜尋之示意圖。
３、考量節點地域性之兩階層式點對點網路架構之設計
在考量節點地域性點對點網路架構之設計方面，本計畫採用兩階層式之點
對點網路架構[20]，和在[15]中所提到之架構不同之處在於本架構中，每一個節
點僅加入其中一個階層。我們結合 Pastry 結構式點對點網路及超級節點架構，
上階層是由超級節點所組成的結構式點對點網路，而下階層則是由其他一般節
點所連結上階層之超級節點所組成，而下階層的所有一般節點與其所連結之超
級節點，形成地域位置相近之區域性群組。
3.1、分散定點機制
形成群組的依據，亦即判斷節點地域性的方式，是採用在[21]中所提出之
分散式定點機制（Distributed Binning Scheme）進行。網路之中建置有多個地標
伺服器，提供節點測量本身與這些地標伺服器之距離，用以取得地標排序碼
（Landmark Ordering Number）。如圖五，目前在網路中，有四個地標伺服器 L1、
L2、L3 及 L4。為了取得地標排序碼，節點 A 依序 ping 每一個地標伺服器，並
13
圖六、兩階層式之點對點網路架構
超級節點紀錄其下所有一般節點分享之檔案資訊，節點在進行搜尋時，首
先採一般超級節點搜尋之方式，亦即尋問其所連結之超級節點。由於連結於同
一超級節點之所有節點即為鄰近節點，因此可達到優先搜尋鄰近節點之效果，
使得接下來之下載程序有較高的機會於鄰近節點進行，達到下載效能之提升。
當在同一群組內搜尋不到目標檔案，便透過該群組之超級節點，在上層之 Pastry
網路中以 Pastry 泛流[22]方式至所有超級節點進行搜尋。
3.2、節點之加入與離開
一個新節點之加入，首先量測地標伺服器以取得其地標排序碼，再以其地
標排序碼做為該節點識別碼之前置碼，以圖七為例，在使用兩等級、四地標伺
服器、以及六位元節點識別碼之設定下，一節點 SPi 之地標排序碼可能為 1011，
加上以其 IP 地址或其他資訊轉換取得後置碼為 00，則該節點 SPi 用以加入
Pastry 之識別碼即為 101100。所有節點之加入，皆以上層之 Pastry 網路做為加
入點，一節點進入後，首先檢查是否已有該地標排序碼之群組存在，做為其成
為 Pastry 環上之超級節點，或成為某超級節點下層之一般節點之判斷依據。
若目前無該群組，則此一新節點 SPi 將成為該群組之超級節點（如圖七）；
若目前已有該群組之存在，則新節點與目前超級節點進行比較，若判別其能力
優於目前超級節點，則取代之，反之，此一新節點成為其下之一般節點，如圖
八中識別碼為 101101 之 NPi 節點。
15
一個節點之離開，依其為一般節點或超級節點而不同。一般節點之離開，
僅需告知其所連結之超級節點，以便程除其相關檔案分享資訊。超級節點之離
開則必須額外處理提升該群組內另一個一般節點成為新超級節點之程序。我們
採用之方式為每一個超級節點會定期更新紀錄一個超級節點候選人列表，列表
中之節點以節點能力排序，當超級節點離開時，會由上而下告知列表中之存在
之節點成為新超級節點。
3.3、超級節點負載平衡
此外，本架構中也根據超級節點之負載狀態，進行切割與合併之負載平衡
機制。在我們的架構中，使用切割與合併機制主要是根據超級節點之狀態所控
制。每一個超級節點都會有一個連接一般節點的上限值，當連接的一般節點數
目已經到達了上限值，則超級節點就會開始進行分割群組。超級節點亦使用前
述之超級節點候選人列表來選定分切後另一新群組之超級節點。因此，每當一
個新一般節點加入網路時，超級節點會定時的更新這一個候選人名單。以圖九
為例，S1 是一個超級節點，想要切割他所管理的群組。在 S1 進行切割前，S1
會從其候選人名單中，選擇一個一般節點當做新的超級節點 S2。S2 使用相同
之地標排序碼 1011，額外加上節點識別碼之 m 個前置碼（圖７中之例 m=2），
而後進入上階層 Pastry 網路。當 S2 成為上階層的成員後，S1 便啟動移轉其下
部份一般節點至 S2 之程序。
圖九、切割叢集的例子
在合併群組方面，每一個超級節點亦設定有連接一般節點的下限值。當連
接的一般節點數目低於下限值，則超級節點就會開始進行合併叢集。以圖十為
例，S1 與 S2 同為超級節點，且其地標排序碼相同 1011，亦即此二節點為經過
17
中包含欲搜尋片段之識別碼 HPI（Hunting Piece Index）。狩獵訊息之完整格式
如下：
HUNT: <len=0006+X><id=9><HPI><HC><PPID>
狩獵訊息中包含有：訊息編號（Message ID,id）、搜尋片段之識別碼（HUNT
Piece Index, HPI）、經過節點數（Hops Count, HC）和經過節點識別碼（Passed
Peers ID, PPID），搜尋片段之識別碼和經過節點數的長度是固定的，而經過節
點編號的長度則隨著經過之節點而增長。
狩獵訊息的發送對象採用由該發送節點所有相連節點中隨機選取的方式。
因為 BitTorrent 中每個節點分散獨立建立與管理其與其他節點之連線，因此每
一個節點的所連結之其他節點是不相同的，亦即每個節點所看到的區域群組成
員不盡相同。如此一來，收到此狩獵訊息之節點，可能產生以下兩個反應。第
一，如果在其的相連節點中，可抓取得到此一目標片段，則此節點將啟動優先
抓取此片段之機制，以便迅速完成此片段之下載，同時回傳該片段給原始發送
此一狩獵訊息要求之節點。第二、，如果其相連節點中，亦無法取得此一目標
片段，則該節點會進一步轉送此狩獵訊息給其他節點，此時一樣採用隨機方式
於其相連節點中任選一傳送對象。此一程序會一直傳送出去，直到狩獵訊息於
系統中找到該目標片段為止。
如圖十一，節點 1、3、9、16 分別擁有各自不同相連節點之區域群組資訊，
當節點 1 發現其區域群組有片段是無人擁有時，便隨機的選取一在其區域群組
的節點，向其送出狩獵訊息，在此例中選取了節點 3。節點 3 發現其區域群組
同樣沒有此片段，便將狩獵訊息傳送給隨機選取之節點 9，以此一方式重覆至
當節點 16 發現節點 12 有此狩獵訊息要尋找的片段，便將訊息傳送給節點 12，
而結束了此狩獵訊息的傳遞。
圖十一、狩獵訊息之傳遞圖例。
19
除了在狩獵訊息中加入限定每一訊息可以經過之節點數外，我們亦設計一
個階層式的分群架構，其分群之依據為每個節點之下載完成度。如圖十二所示，
依照完成度，將完成百分比在 0%至 33%的節點分為第一組，33%至 66%的節
點分為第一組，而 66%至 100 的節點以及種子節點，分為第三組。而每個節點
接到到狩獵訊息後，在判定其相連節點中無法取得目標片段時，僅會向其上層
轉送狩獵訊息，因此，狩獵訊息被轉送之最大次數，即為階層中之群組個數，
包含最上層內轉送至種子節點。
而實現這個階層架構之作法，則必須 BitTorrent 中之 Tracker 進行修改，使
其可以依每個節點之下載完成度，進行分群。原始 Tracker 中已經有每個節點
回報下載量之機制，因此我們僅額外加入群組成員列表，並依照成員下載完成
度之改變，回傳其所屬群組之成員資訊即可。
21
表一、相關搜尋方法之比較。
Search Method
Comparison
Flooding CAN Chord Pastry Our Scheme
Size of R/T Unknown 2d logN (2b-1)log2b(N) logN
Overlay Structure Arbitrary d-dimension Circular Hypercube Binary Tree
Search Latency Unbound O(d) O(logN) O(log2b(N)) O((logN)/k)
d: the dimension of virtual coordinate space; b: the number of bits processed in each search
２、以興趣為基礎之群組架構之效能評估
在評估本計畫所提出之以興趣為基礎之群組架構方面，主要的效能考量指
標為搜尋的平均延遲以及平均訊息負載。比較的系統包含了非結構式、任意群
組方式（random clustered）、以及我們以興趣為基礎之群組方式三種架構。首先
我們定義了興趣搜尋指標參數（Interest Search Ratio）：
allM
groupM
ISR
_
_
該指標值用來設定實驗中一個節點所發送的所有搜尋要求訊息當中，其搜
尋目標群組為其本身興趣群組之訊息所佔的比值，因此這個指標值 0≦ISR≦
1。當 ISR 值愈接近於 0 時，代表實驗中每一個節點都不遵照自己的興趣來發
送要求訊息，特別是當 ISR=0 時，系統中完全沒有興趣導向的成份存在；當 ISR
接近於 1 時，代表節點都發送和興趣相關的搜尋訊息，換句話說，也代表使用
者節點完整依照自己的興趣選擇所加入的群組。
在其他參數的設定方面，我們建立了 2000 個節點，所有的節點可連結 3-6
個鄰近節點，而在任意群組以及以興趣群組的架構上每一個群組的大小被限定
在 50 個節點之內。另外在非結構式及任意群組中為了顯現地域概念設定了較短
的點對點延遲 20-50ms，使其略低於興趣群組所設定之 30-60ms。
圖十四顯示了興趣導向成份在這三種架構中與平均延遲之關係。非結構式
與任意群組由於完全沒有引入興趣的概念，因此和興趣搜尋指標的變化完全無
關。但由該圖可見，將節點形成群組，可有效地減少延遲至非結構式之 70%以
下。隨著興趣搜尋指標的成份高過於 20%以上，興趣群組的效果隨之顯著，最
佳的情形縮短延遲至任意群組之 28%左右。另外，圖十五顯示興趣導向成份在
這三種架構中與所產生之轉送訊息量的關係。除了顯現出群組相較於非結構式
效能上的顯著改善外，以興趣為基礎的群組方式，具有導向搜尋訊息的效果，
而非盲目地泛流搜尋訊息，因此能得到更低的訊息負載。
23
我們所設定之實驗網路在兩階層式與 Guntella 皆包含 1000~10000 個節點，
在 Gnutella 中節點為任意散佈，而在兩階層架構中，超級節點與一般節點之比
例亦可調整為 1:10、1:50、1:100 三種設定。實驗所得之數值皆取十次結果之平
均值。
圖十六、隨實驗節點數增之平均節點距離。
圖十七、隨實驗節點數增之平均搜尋時間。
在圖十六與圖十七中所顯示之縱軸數值為以 Guntella 為基底進行比例化
（normalized）後之結果，以便直接看出我們所提出之具地域性考量之兩階層架
構相較於 Gnutella 之改善幅度。由圖十六可看出兩階層架構之改良為 40-60%，
代表以地標伺服器取得地標排序碼進行分組的效果十分顯著，使在地域位置相
近的節點形成相同群組，而減低相連節點之平均距離。
25
我們的實驗設定為大小 50MB之目標檔案切割為 512KB共計 100個檔案片
段，同時我們也考量節點之異質性，使所有節點平均分散至其上傳頻寬為 32、
64、256、512 Kbps 四個等級。而每個節點在初始狀態所連結之節點數為 10，
亦即節點由 Tracker 取得之自身區域群組內節點數目。並且每個節點在開始前
皆已擁有 10%檔案大小之隨機選取檔案片段。
圖十九、穩定度比較圖。
實驗比較之對象包含隨機選擇片段方式（Random）、具全域資訊之稀有片
段優先機制（GRF，Global Rarest First）、原始 BitTorrent 之稀有片段優先機制
（LRF，Local Rarest First），與我們提出之主動式稀有片段下載機制為 EARP。
圖十九顯示在沒有節點動態離開之實驗設定下，我們所提出之 EARP 之效
果優於 BitTorrent LRF 與 Random，且十分貼近 GRF。我們進一步模擬具有節
點動態加入與離開的情境，表二計量了在三種動態率（1/300、1/200、1/100）
下，系統發生斷頭的次數。1/300 表示每 300 秒便有一個隨機選取之節點（包
含原始種子節點）離開系統，同時新增一全新節點。而斷頭現象發生次數則是
計算當穩定度值發生低於 1 之次數。由表二可看出，EARP 之效果僅約略次於
GRF，但遠優於 BitTorrent LRF 及 Random 方法。
表二、在節點具動態性下之斷頭發生次數
λ-1
Algorithm
300 200 100
Global Rarest First 0 0 21
BT with EARP 0 0 31
Local Rarest First
(BT original)
5 75 99
Random 8 77 100
27
[18] W. H. Kuo,“An Eficient Resource Search Scheme for Peer-to-Peer Network Systems”,
Technical Report, dept. of Computer Science, National Tsing Hua Univ., 2003.
[19]W. T. Chen, C. H. Chao, and J. L. Chiang. “An Interest-based Architecture for
Peer-to-Peer Network Systems,” Proc.Int’l Conf. Advanced Information Networking
and Applications (AINA), 2006.
[20] C. H. Lin,“A two-tier locality-aware peer-to-peer architecture”, Technical Report, dept.
of Computer Science, National Tsing Hua Univ., 2005
[21] S. Ratnasamy, M. Handley, R. Karp, and S. Shenker, “Topologicaly-Aware Overlay
Construction and Server Selection,” Proc. IEEE INFOCOM, 2002.
[22]M. Castro , M. B. Jones, A.-M. Kermarrec, A. Rowstron, M. Theimer, H. Wang, and A.
Wolman, “An Evaluation of Scalable Application-tier Multicast Built Using
Peer-to-peer Overlay,”Proc. IEEE INFOCOM, 2003.
[23] C. Y. Lin,“RPDM: a rare-piece downloading mechanism to increase availability in
BitTorrent”, Technical Report, dept. of Computer Science, National Tsing Hua Univ.,
2006
