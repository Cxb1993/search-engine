ii 
 
非線性 TORA 硬體建置及其基於干擾估測之智慧型適應控制機制設
計與實現(2/2) 
 
  計畫編號：NSC 95-2221-E-155-068-MY2 
  執行期間：2006 年 8 月 1 日至 2008 年 7 月 31 日 
  計畫主持人： 李慶鴻  元智大學 電機工程學系 
E-mail: chlee@saturn.yzu.edu.tw 
  計畫參與人員：張勝凱（碩士生） 
 
中文摘要 
本計畫主要探討非線性 TORA (Translational Oscillations with a Rotational Actuator)系統
控制之系統硬體建構與控制準則之實現與驗證。計畫中主要包含智慧型控制系統之設計與
簡化、系統建置、控制器實現等。在現實生活之系統中，大多存在諸多非線性現象與特性，
但人們為了方便解決問題，大都忽略並以較簡單之線性化系統(linearized system)代替，系統
穩定與控制性能將受到影響。本計劃主要研究非線性控制基準問題-TORA 系統，對此具有
高度非線性的受控系統，過去研究常用部分迴授線性化(partial feedback linearization)，定義
新的狀態變數與迴授控制轉換，得到簡化後的動態方程式，本研究基於類神經網路提出一
適應性遞迴步階控制(adaptive backstepping control)方法應用於 TORA 系統之控制(簡稱為
ABCWNN)，且系統具有參數變動或是未知的外部干擾。藉由小波類神經網路之近似特性，
來估測干擾或系統之不確定項，建立非線性適應性遞迴步階控制器，使 TORA 系統穩定。
第二年計畫中，建置硬體實現，並考慮實際系統之摩擦力影響，最後透過設計之非線性適
應性遞迴步階控制器(ABCWNN)解決 TORA 系統之控制。系統穩定分析中，藉由李亞普諾夫
定理分析可獲得網路參數的適應法則與系統閉迴路之穩定，即保證追蹤誤差之漸進收斂穩
定。最後以 PC-Base 實現控制器，並應用於所建構的受控系統。 
 
關鍵詞：遞迴步階控制、智慧型控制、里亞普諾穩定理論、適應控制、小波類神經網路 
 
 
 
 
 
iv 
Contents 
 
中文摘要 ..................................................................................................................................... II 
Abstract .....................................................................................................................................III 
Contents.....................................................................................................................................IV 
List of Figures............................................................................................................................V 
List OF Tables..........................................................................................................................VI 
CHAPTER 1  Introduction ..................................................................................................1 
CHAPTER 2  System Description of TORA System ..................................................4 
2.1  TORA System.......................................................................................................... .4 
2.2  TORA Construction............................................................................................... .8 
2.2.1  Design Specification for TORA Experimental Equipment...............9 
2.2.2  Design Considerations ............................................................................ 10 
2.3  Experimental Equipment .................................................................................... 15 
2.3.1 Friction Modeling and Identification ...................................................... 18 
Chapter 3  Adaptive Backstepping Control Using WNN....................................... 22 
3.1 Partial Feedback Linearization for TORA System .................................... 22 
3.2 Adaptive WNN Neural Control ............................................................................25 
3.3 The WNN Based Adaptive Backstepping Control Scheme ...........................29 
Chapter 4  Numerical Simulation and Eaperimental Results ............................. 36 
4.1 Simulation Results ...................................................................................................36 
4.2. Eaperimental results ...............................................................................................40 
References ................................................................................................................................. 47 
Appendix ................................................................................................................................... 52 
vi 
List of Tables 
 
Table 2.1 Part names and numbers……………………………………………….………………13 
Table 4.1 Specifications for TORA system. ................................................................................ ..37 
Table 4.2 WNN parameters setting. .............................................................................................. 37 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
2 
 
 
 
control inputs, step by step to design the virtual controllers and illustrate the stability by 
Lyapunov stability theorem. Finally, tisturbance exist, then they maybe result unstable system. 
Therefore, the wavelet neural network systems are used to approximate the unknown functions to 
solve this problem. 
 
If the internal uncertainty and external disturbance exist, then they may result in an unstable 
system. Therefore, we propose a wavelet neural network (WNN) system to approximate the 
unknown functions to solve this problem. Previous literatures developed fuzzy systems and 
neural networks to approximate the unknown functions [1, 7, 10, 21, 36]. Many projecters have 
shown that using wavelet basis can achieve superior performance in network size and learning 
ability [10, 11, 20, 31]. Therefore, wavelet functions are combined with the fuzzy neural network 
to construct the wavelet based neural network (WNN).  
 
In this project, we propose a WNN based adaptive backstepping control scheme (ABCWNN) 
for TORA system. The ABCWNN system is comprised of a backstepping controller and a robust 
controller. The backstepping controller containing a WNN uncertainty observer is designed based 
on the backstepping-control technique, and the robust controller is designed to dispel the effect of 
approximation error introduced by the uncertainty observer. In this design, a WNN is used as the 
uncertainty (or disturbance) observer, which parameter tuning, the Taylor linearization technique 
4 
 
 
 
 
CHAPTER 2  
 
System Description of TORA System 
 
2.1 TORA System 
In the early nineties, Bupp et. al. proposed a benchmark problem for nonlinear control 
design [4]. This benchmark problem consists of the control of the motion of a cart possessing one 
translational degree of freedom, which is actuated by an eccentric rotational mass actuator 
mounted on the cart. The system of cart and rotational actuator is referred to as the so-called 
TORA system (Translational Oscilator with a Rotational Actuator) or RTAC 
(Rotational/Translational ACtuator) system.  
 
The schematic representation of the TORA system is shown in Fig. 2.1 [3, 4, 6], which 
comprises a cart of mass M  that is connected with a spring of stiffness K  fixed at a wall. The 
cart is perturbed by a disturbance force F. There is a rotating arm of mass m  and length e in the 
center of the cart. The arm is actuated by the control input N. The cart and arm move in the 
horizontal plane, where and denote the normailzed translational position and velocity of the cart, 
respectively, and θ  and θ&  denote the angular position and velocity of the rotational actuator. 
6 
 
 
 
motor driver are much faster than the dynamics of the mechanical part of the setup. Therefore, in 
our experiments, the motor and fully integrated H-bridge motor driver dynamics can be neglected 
and we can assume that there is a static relation between the control signal and the motor torque 
N [27]. 
 
In mechanical system, it usually has the existence of friction. These frictions are usually the 
factor which results in bad efficiency in the systems and produces error. The assumption that the 
pendulum frictions torque Nf and the cart friction force F depends only on the angular velocity 
and cart velocity is a simplification of reality. However, taking into account all active forces and 
torques can be modelled as follows: 
( ) ( ) FsincosemxKxmM cc +−−=++ θθθθ 2&&&&&              (2.3) 
( ) fc NNθcosxmeθmeI −+−=+ &&&&2 .                  (2.4) 
In some cases, it is convenient to use a set of normalized equations of motions. A set of suitable 
normalizations is given, among others [2]:  
 ( )( ) mMemI
me
++
=
2
ε , cd x
meI
mM
x 2+
+
= , ( ) NemIK
mM
u 2+
+
= , 
t
mM
K
+
=τ , F
emI
mM
K
Fd 2
1
+
+
= , ( ) fd NmeIK
mM
u 2+
+
= .           (2.5) 
Equations (2.3) and (2.4) are equivalent to the dimensionless equations 
( ) ddd Fcos-sinxx +=+ θθθθε &&&&& 2                 (2.6) 
8 
 
 
 
The control objective of this system is to design a control torque to stabilize the system even 
in the presence of disturbances; that is, all states converge to the equilibrium point - the origin. In 
the project, based on the concepts of adaptive backstepping control using WNN is introduced to 
treat the stabilization problem. 
 
2.2 TORA Construction 
Figure 2.1 schematically depicts the TORA system which exactly represents the system that 
is to be physically constructed, i.e. the setup must satisfy the equations of motion (2.1) and (2.2). 
This section on the construction of the TORA setup starts with the setting of the design 
specifications. Subsequently, in some sense, the optimal values of design parameters (e.g. M, m, e 
and I) are determined. Based on these design parameters, the torque requirements can be 
computed. Then the possible TORA configurations (placement of the pendulum on the cart) are 
addressed, followed by a detailed mechanical design of the desired configuration. 
 
The main requirement to the TORA system can be stated as follows. The experimental 
TORA system must be a setup suitable to conduct disturbance rejection and tracking experiments 
with a variety of output regulation controllers for the largest possible set of initial conditions and 
disturbance force. Summarizing, the experimental TORA setup design should meet the following 
requirements: 
10 
 
 
 
35×20×3 mm. 
The pendulum inertia stands for I=Is+Im, which is equal to the pendulum shaft inertia 
IS  pluses the pendulum mass inertia Im.  
The pendulum shaft inertia comes from   
( )2
3
1
emI SS =  .  
where ms stands for the mass of pendulum shaft, which have 80 g; e stands for the 
length ,which changing from 0.02 m to 0.2 m. 
The pendulum mass inertia comes from  
( ) 222
12
1
mehbI m ++=  
where b stands for the length of steel plates; h
 
stands for the thickness of steel plates. 
3. Because parameter ε  can affect the stability in the system, parameters m and e adopt the 
changeable method, analyzing the effecte on the system. However, the pendulum should be 
capable of accommodating a range of masses m and pendulum lengths e. 
4. The spring stiffness K can be chosen virtually arbitrary. In the analysis of the design problem 
K is set to the realistic value of 300 N/m. 
 
2.2.2 Design Considerations 
Figure 2.4 depicts a three view drawings design of the TORA system based. The actual 
TORA system that has been built according to this design is depicted in Fig. 2.2. It depicts 
12 
 
 
 
the above problem, we set the spring in both sides of the plat (not fix in the car). 
 
The other reason is that if only single-shaft has springs, it can result unequal force and 
produce indefinite friction. We set the springs on two-shafts to solving the above problem. We use 
the following methods to reduce friction because TORA system moves on the condition which 
does not have friction. First, the surface made method of shafts is electroplated in order to reduce 
the friction as much as possible. Secondly, the car installs bearings (15) to reduce the influence on 
the friction. Thirdly, determine the cart position. We adopt open type linear scale (16) operates 
with no mechanical contact between the scale scanning head and scale tape. It can not produce 
friction when read signal as a result of this reason.  
 
 
Figure 2.2: Actual TORA system in vertical view. 
 
14 
 
 
 
 
Figure 2.4: The TORA system: three view drawings. 
 
16 
 
 
 
Rotational 
Encoder
Linear 
Scale
Rectifier Fully Integrated H-Bridge Motor Driver
3 phase
110 V
60 Hz
L
C
Encoder 
Interface 
and Timer
Parallel
I/O
Personal Computer
Control
Algorithm
D/A
Converter
D/A  Control Card
TORA System
CW,CCW PWM
 
Figure 2.5: PC-base control platform for TORA system. 
 
2.3 Firction Force Analysis 
In mechanical system, it usually has the existence of friction. These frictions are usually the 
factor which results in bad efficiency in the systems and produces error. Underwrite first to 
analyze the factor of friction effecting precision. 
1. Friction will affect the delay appearance on system output：We need to overcome static 
friction first, and then the system will operate.  
2. It will slow down when it nearly arrive destination; when it is slow down, it will access into 
static friction area. It is the nonlinear effect when dynamic friction switches to static friction. 
3. In system model, it has viscous friction. However, it has a little different in viscous friction 
with the different places for system. It is so called the effect of parameter uncertainty. 
18 
 
 
 
The frictions can be considered as disturbances on the TORA system. The practically 
observed friction phenomena as discussed are considered to be important for accurate friction 
modeling. Due to the complexity of the physical mechanisms underlying friction, most models 
are of an empirical nature. Furthermore, a distinction can be made between static and dynamic 
models depending on the inclusion of frictional memory. The frictional memory is omitted, 
because there have high moving speed and fast starting speed for static friction models. For 
dynamic friction models this memory behaviour is described with additional dynamics between 
velocity and the friction force. There have been many kinds of models of friction so far, but we 
will chose the commonly used and easier model above based on the following two reasons. 
 
2.3.1 Friction Modeling and Identification 
Cart Friction Force 
The TORA system subjected to the cart friction force F which can mathematically be 
represented as: 
F-Kxxm cc =&&                   (2.9) 
where m (kg): Mass of cart;  xc (m): Position of cart; cx&& (m/sec): Acceleration of cart; K (N/m): 
Spring of stiffness; F (N): Friction force. 
 
The cart friction force is also identified using the methods presented in [13]. The essence of 
20 
 
 
 
pendulum friction torque. 
 
The resulting identified pendulum friction torque Nf is plotted in Fig. 2.8. The identified 
pendulum friction force shows two remarkable effects. We can see that the maximum speed of 
cart is about ± 200 m/s. And then we can obtain that Coulomb friction of the cart is about 0.4 
N-m and the viscous friction coefficient is about 0.002 N-m-s/rad. 
 
-0.4 -0.3 -0.2 -0.1 0 0.1 0.2 0.3 0.4-30
-20
-10
0
10
20
30
[m/s]
[N
]
 
Figure 2.7: Inentified friction force F. 
 
22 
 
 
 
CHAPTER 3  
 
Adaptive Backstepping Control Using WNN 
 
3.1 Partial Feedback Linearization for TORA System 
For TORA system (2.8), we introduce the following new state variables [3, 5, 33] 
42
31
3422
311
cos
sin
x
x
xxx
xx
=
=
+=
+=
ξ
ξ
εη
εη
                (3.1) 
and the feedback transformation 
( )[ ]{ }uξεξηξε
ξε
v ++−
−
= 1
2
211
1
22 sin1coscos1
1
.             (3.2) 
This allows the system in (2.8) to be rewritten in the following simplified form 
( )( )
.
cos1
1
cos1
sin1cos
sin
1
22
1
22
111
2
21
112
21
u
-uF
F
d
d
ξεξε
ξξεηξεξ
ξξ
ξεηη
ηη
−
+
+
=
=
++−=
=
-
-- d
2
2&
&
&
&
             (3.3)  
Note that the state transformation from u to v is nonsingular. Therefore, the original control signal 
is 
( ) ( )[ ].sin1coscos1 12211122 ξεξηξεξε +−−−= vu               (3.4)  
In order to improve the control performance of the stabilization of TORA system, the ABCWNN 
24
 
   
 
 
Fi
gu
re
 
3.
2 
: 
W
N
N
 
ba
se
d 
ad
ap
tiv
e 
ba
sk
st
ep
pi
n
g 
co
n
tr
o
l s
ch
em
e.
 
Actual 
Control Plant 
-
+
+
- Virtual
Control 1
Virtual
Control 2
+
-
Virtual
Control 3
WNN 2
+
-
WNN 1
State 
Transformation
26 
 
 
 
are spatially localized. Therefore, the learning of WNN is more efficient than FNNs in function 
approximation. Herein, where µ  denotes the wavelet basis functions is to replace function the 
Gaussian membership functions. We indicate the signal propagation and the function of every 
node in each layer. 
 
Layer 1: Input layer 
Layer 1 accepts input variables and its nodes represent input variables. The corresponding 
output is 
( ) ( )kxkO ili =)(                  (3.5) 
where xi(k), i=1, 2, …, n, represent the input variables. The nodes in this layer only transmit input 
variables to the next layer directly. 
 
Layer 2: Hidden layer 1 (Wavelet Layer) 
Each node in this layer performs a wavelet function. A family of wavelets is constructed by 
translations and dilations performed on a single fixed function, as known the mother wavelet. 
There are many types of wavelet functions that can be used in the basis functions [9, 11, 20, 30, 
35]. In the project, the wavelet function, ie.  
 
( ) ( ) ( ) ( )








−
⋅−⋅
−
−=
211
2
2
1
exp
ij
iji
ij
i
ij
σ
mkO
σ
mkO
kO
)(
ij
)(
                (3.6) 
where ikm  and ikσ  are the translations and dilation in the kth term of the ith input ix  to the 
28 
 
 
 
can be guaranteed by Lyapunov stability theorem. 
The WNNs’ output can be described in matrix form  
( )σˆ ,ˆˆˆˆˆ md TnnTn ψwψw == .                                    (3.9)  
Therefore the unknown functions d can be defined as 
( ) ( )( ) ∆x, , σmψw∆ψwd n*n**Tnn*n*Tn +=+= .                         (3.10) 
There exists an optimal WNN approximation *d can be defined as 
∆+=∆+= *** ψw Tdd                    (3.11)  
where ∆  is the approximation errors; *w , *m , *σ  are the optimal vectors of w, m , σ  of 
the nth WNN, respectively. From(3.9), the function estimated error d~  satisfies 
 
 .ˆ
~~
ˆˆˆˆ
ˆ
ˆ
~
*
****
**
ψψ
ψψψψ
ψψ
TT
TTTT
TT
ww
wwww
ww
ddd
+∆+=
∆+−+−=
−∆+=
−=
          (3.12)   
The linearization technique is employed to partially linear form [12], we have the Taylor 
expansions of ψ~  
( ) ( ) . ˆ
~
   
~
~
ˆ
~
   
~
~
~
  
~
~
~ *
ˆ
2
1
*
ˆ
2
1
2
1
Hmm
m
m
m
R
mm
R
R
+−






















∂
∂
∂
∂
∂
∂
+−






















∂
∂
∂
∂
∂
∂
=














=
==
σσ
σ
σ
σ
σσ
ψ
ψ
ψ
ψ
ψ
ψ
ψ
ψ
ψ
ψ
MM
M
      (3.13)  
Rewrite equation (3.13) as 
30 
 
 
 
Step 1 
For the position-tracking objective, define the tracking error as 
dyz −= 11 η                              (3.16) 
where dy  is the tracking trajectory. Then, its derivative is  
dd yyz &&&& −=−= 211 ηη               (3.17)  
The 2η  can be viewed as a virtual control in above equation, i.e. 122 αη −=z . Define the 
following stabilizing function 
dyk &+−= 111 ηα                (3.18) 
where 01 >k . Then, rewrite equation (3.17) as  
1121 zkzz −=&                                     (3.19) 
Subsequently, the Lyapunov candidate function is  
.
2
1 2
11 zV =                                  (3.20) 
Then, we have 
( )
.
2
1112
1121
111
zkzz
zkzz
zzV
−=
−=
= &&
                               (3.21) 
Step 2 
The derivative of z2 is now expressed as 
.sin 111122 αξεηαη &&&& −+−=−=z                               (3.22) 
32 
 
 
 
( )
1211
11211
11111211
ˆˆ
ˆˆ
ˆˆˆˆ
wOz
wOzm
OmOzw
T
T
mm
TT
mw
σσ
σ
βσ
β
σψβ
=
=
−−=
&
&
&
                 (3.28) 
and the compentsated controller is chosen as  
( )21 sgnˆ zur δ−=                          (3.29) 
with the estimation law  
.
ˆ
212 zδβδ =&                  (3.30) 
We obtain 
( )[ ]
( )
.     
     
ˆ
~1
sgnˆ
32
2
22
2
11
11232
2
22
2
11
1121232
2
22
2
112
zzzkzk
Ozzzzkzk
zOzzzzkzkV
+−−≤
−++−−≤
−−++−−=
δ
δδβδ δ
&&
             (3.31) 
Step 3 
The derivative of 3z  is derivative is 
.cos 2123 αξεξ && −=z                       (3.32) 
Next, we consider 1ξ  subsystem and assume the ideal stabilizer for 2ξ  is 3α  
.324 αξ −=z                     (3.33) 
Then,  
( ).
cos
1
2332
1
3 zzk −−= αξεα &                          (3.34) 
Then 
( ) .cos 233143 zzkzz −−= ξε&                      (3.35) 
34 
 
 
 
( )
( )[
( ) ]
( )
( ) ( ) ( ).ˆ1ˆ~ˆ1ˆ~   
ˆ
1
ˆˆˆ
~zk-zk-
ˆ
~
1
ˆ
~
1
ˆ
~
1
~~
ˆ
   
ˆˆˆ
~zk-zk-
ˆ
~
1
ˆ
~
1
ˆ
~
1~
zk--zk--
ˆ
~1
ˆ
~
1
ˆ
~
1
ˆ
~
1
zz
2242
2
22422
2
2241
2
2
2222242
2
44
2
33
2
22
2
11
22
1
22
1
22
2
222222
222222424
2
44
2
33
2
22
2
11
22
2
22
2
22
2
224
2
44
2
33
2
22
2
11
22
2
22
2
22
2
22
2
4434
r
m
TT
m
m
TT
w
TT
m
T
TT
m
T
w
m
T
TT
m
T
r
TT
m
T
w
r
TTT
m
T
w
uOzOwzmOwzm
wOmOzwzkzk
mmwwOOmOw
OmOwzuzzkzk
mmwwduzzkzk
mmwwVV
++





−+





−+






−−−+−−=
−−−+++
−−++−−=
−−−++=
−−−−+=
σβσβ
βσψ
σσβββσ
σψ
σσβββ
θθβσσβββ
σ
σ
σ
σ
σ
σ
θσ
&&
&
&&&
&&&
&&&&&&&
  (3.41) 
The following corresponding parameters update laws are chosen 
( )
2422
2422
22222422
ˆˆ
ˆˆ
ˆˆˆˆ
wOz
wOzm
OmOzw
T
T
mm
TT
mw
σσ
σ
βσ
β
σψβ
=
=
−−=
&
&
&
             (3.42) 
Then 
( )2242442332222114 zk-zk- ruOzzkzkV ++−−=&           (3.43) 
and the compentsated controller is chosen as  
 ( )422 zsgnˆur δ−=                (3.44) 
With the estimation law  
422 z
ˆ
δβδ =&                (3.45) 
Then, (3.43) can be rewritten as follows: 
( )[ ]
( )
0
1
2
44
2
33
2
22
2
11
224
2
44
2
33
2
22
2
11
224224
2
44
2
33
2
22
2
114
≤−−−−≤
−+−−−−≤
−−+−−−−=
zkzkzkzk     
Oδzzkzkzkzk     
δˆδ
~
β
zsgnδˆOzzkzkzkzkV
δ
&&
       (3.46) 
36 
 
 
 
 
Chapter 4  
 
Numerical Simulation and Experimental Results 
 
In this chapter, several simulations and experimental results are presented to show the 
performance of our proposed adaptive backstepping control scheme.  
 
4.1 Simulation Results 
The TORA system with its controller discussed in the previous section is simulated using 
Matlab. Because the simulation results are to be compared with the experimental data, 
simulations are performed using the actual system (design) parameters are chosen as follow Table 
4.1.Herein, several illustration examples are introduced to demonstrate the effectiveness of 
ABCWNN scheme. The first part shows the comparison results between ABCWNN and backstepping 
controller. Subsequently, the robustness and adaption performance of ABCWNN are shown by 
illustration examples. In the following examples, the initial condition is set to be ( ) 0.0701 =Cx  
[m], ( ) 001 =Cx& [m/s], 0(0) =θ  [deg] and ( ) 00 =θ&  [deg/s]. The initial values of WNN 
parameters as follow Table 4.1. Besides, the parameters of backstepping controller are 0801 .k = , 
102 .k = , 93 =k , 15=4k and adaptive law are 21 =wβ , 0.11 =σβ , 0.11 =mβ , 
38 
 
 
 
Case 2: System is perturbed by impulse 
In this case, the external disturbance F  and fN  is setting as follows: 



≤≥
><
=
sec.56sec65
sec.56sec60
 , t t,N
 , t t,
F , 0=fN  
The simulation results are shown in Fig. 4.7. (－ABCWNN; -- Ｂackstepping). The same as case 1, 
all methods can stabilize the TORA system. The ABCWNN is better than the results of 
backstepping controller. The adaptation and robustness of ABCWNN are also by the comparison. 
 
Case 3 : System with friction force 
Herein, we consider the system with friction effect, which can be identified as 
( )1C1 sgn1030 CxxF += &  and ( )θθ && sgn0.0020.4 +=fN . The simulation results are shown in Fig. 
4.3. (－: ABCWNN; --: Ｂackstepping). We see that the ABCWNN controller enhances the 
performance. To reach stable effect, backstepping controller needs stabilization effect between 8 
to 9 seconds but using ABCWNN controller only need between 6 to 7 seconds. Obviously, the 
ABCWNN controller is better than backstepping controller. 
 
40 
 
 
 
 
0 1 2 3 4 5 6 7 8 9
-5
0
5
time,s
(A
)
i
 
 
0 1 2 3 4 5 6 7 8 9-1
0
1
2
A
m
pl
itu
de
(ra
d/
s)
x3
 
 
0 1 2 3 4 5 6 7 8 9-0.1
0
0.1
Ca
rt 
po
sit
io
n
(m
)
 
 
XC1
ABCWNN
Backstepping
ABCWNN
Baskstepping
ABCWNN
Backstepping
 
Figure 4.3: Numerical Simulation of Case 3, (－: ABCWNN; --: Backstepping) 
 
4.2. Experimental Results 
The aim of this study is to physically implement for the TORA system, which is a 
benchmark system in nonlinear control, and to study the ABCWNN controller performance in 
experiments. The design of the experimental TORA setup has been addressed in Chapter 2. The 
design of the controller that is implemented in this setup is discussed in Chapter 3. Simulations 
(see Section 4.1) indicate that the controller works for the ideal TORA system. The experimental 
TORA setup, however, it is not an ideal setup because friction is present. Moreover, the physical 
system parameters will differ from the nominal system parameters. , the question is whether the 
42 
 
 
 
TORA system. This demonstrates the effectiveness of the ABCWNN controller, was can reach the 
stabilization effect between 6 to 7 seconds when it is applied to TORA system. 
 
Case 3: 
The experimental result of case 3 is shown in Fig. 4.6. The ABCWNN controller can stabilize 
the TORA system. This demonstrates the effectiveness of the ABCWNN controller, was can reach 
the stabilization effect between 4 to 5 seconds when it is applied to TORA system. 
 
Case 4: 
The experimental result of case 4 is shown in Fig.4.7, the impulse disturbance is considered. 
At 12 second, the TORA system is perturbed by an impulse with amplitude 5. The ABCWNN 
controller can stabilize the TORA system. Case 4 was show that after transients the cart comes at 
a stand still at a position close. This means approximate TORA system is achieved. 
 
The results of the simulation and experiments show that after transients the cart comes at a 
stand still at a position close. This means approximate TORA system is achieved. 
1. The implementation of the controller in the physical TORA setup involves many hardware 
and controller components (motor, fully integrated H-Hridge motor driver, friction etc.) to be 
44 
 
 
 
0 1 2 3 4 5 6 7 8 9
-5
0
5
time,s
(A
)
i
 
 
0 1 2 3 4 5 6 7 8 9-1
0
1
2
A
m
pl
itu
de
(ra
d/
s)
x3
 
 
0 1 2 3 4 5 6 7 8 9-0.1
0
0.1
Ca
rt 
po
sit
io
n
(m
)
 
 
XC1
 
Figure 4.4: Experimental Result of case 1. 
0 1 2 3 4 5 6 7 8 9 10
-0.1
-0.05
0
0.05
0.1
xC1
C
ar
t p
o
sit
io
n
(m
)
0 1 2 3 4 5 6 7 8 9 10
-2
-1
0
1
x3
A
m
pl
itu
de
(ra
d/
s)
0 1 2 3 4 5 6 7 8 9 10-5
0
5
i
time,s
(A
)
 
Figure 4.5: Experimental Result of case 2. 
46 
 
 
 
Chapter 5  
 
Conclusion 
 
The main conclusion concerns the TORA setup. The design and construction of the TORA 
setup is considered to be successful that TORA system does work on a physical setup, despite the 
presence of parameter uncertainties and other unmodelled effects. Besides, the effect of the cart 
friction, which implies that the controlled TORA setup is not frictionless, is clearly visible in the 
experimental results. In fact, at the end of the transients, when the cart velocity becomes low, the 
position of cart is closed to zero, but not equal to zero. 
This project has successfully demonstrated the application of a wavelet-neural-network 
(WNN)-based adaptive-backstepping control (ABCWNN) system, which is comprised of a 
backstepping controller with a WNN uncertainty observer and a robust controller, to the position 
control of TORA system. The uncertainty observer uses a WNN to estimate the lumped 
uncertainty in real time. All the adaptive laws of the ABCWNN system are derived in the sense of 
the Lyapunov function, so that the stability of the system can be guaranteed. Moreover, 
simulation and experimental results were carried out to illustrate the effectiveness of the proposed 
control system. 
 
48 
 
 
 
[7] B. R. Chung, Fuzzy Neural Network Based Adaptive Backstepping Controller Design for a 
Class of Nonlinear Systems, Master Thesis of Yuan Ze University, Taiwan, 2007.  
[8] W. J. Chang and S. M. Wu, “State variance constrained fuzzy controller design for nonlinear 
TORA systems with minimizing control input energy,” IEEE Conf. Robotics and 
Automation, pp. 2616-2621, 2003. 
[9] C. F. Hsu, C. M. Lin, and T. T. Lee, “Wavelet adaptive backstepping control for a class of 
nonlinear systems,” IEEE Trans. on Neural Networks, Vol. 17, No. 5, pp. 1-9, 2006. 
[10] C. F. Hsu, C. M. Lin, and T. T. Lee, “Wavelet adaptive backstepping control for a class of 
nonlinear systems,” IEEE Trans. on Neural Networks, Vol. 17, No. 5, pp. 1-9, 2006. 
[11] D. C. Ho, P. A. Zhang, and J. Xu, “Fuzzy wavelet networks for function learning,”   IEEE 
Trans. on Fuzzy Systems, Vol. 9, No. 1, pp. 200-211, 2001. 
[12] H. Han, C. Y. Su, and Y. Stepanenko, “Adaptive control of a class of nonlinear systems with 
nonlinearly parameterized fuzzy approximators,” IEEE Trans. on Fuzzy Systems, Vol. 9, No. 
2, pp. 315-323, 2001. 
[13] R. H. A. Hensen and R A. V. Santen, Controlled Mechanical Systems with Friction, 
University Press Facilities, Eindhoven, Netherlands, 2002. 
[14] M. Jankovic, D. Fontaine and P. V. Kokotovic, “TORA example: cascade-and 
passivity-based control designs,” IEEE Trans. on Control systems Technology, pp. 292-297, 
50 
 
 
 
[23] K. S. Narendra and K. Parthasarathy, “Identification and control of dynamical systems 
using neural networks,” IEEE Trans. on Neural Networks, Vol. 1, No. 1, pp. 4-27, 1990. 
[24] F. J. Lin and C. H. Lin, “On-line gain-tuning IP controller using RFNN,” IEEE Trans. on 
Aerospace and Electronic Systems, Vol. 37, No. 2, pp. 655-670, 2001. 
[25] H. Olsson, Control Systems with Friction, Ph.D. thesis, Lund Institute of Techn, Sweden, 
1996. 
[26] H. Olsson, “Describing function analysis of a system with friction,” Proc. of the IEEE Conf. 
on Control Applications, Dear born, MI, pp. 310–315, 1995. 
[27] A. Pavlov, B. Janssen, N. van de Wouw, and H. Nijmeijer, “Experimental Output Regulation 
for a Nonlinear Benchmark System,” IEEE Trans. on Control Systems Techn, pp. 786-793, 
2007. 
[28] A. Pavlov, B. Janssen, N. Wouw, and H. Nijmeijer, “Experimental output regulation for the 
TORA system,” Proc. of the 44th IEEE Conf. on Decision and Control, and European 
Control Conf. 2005, pp. 1108-1113, 2005. 
[29] N. Qaiser, and N. Iqbal, “TORA stabilization via dynamic surface control technique,” IEEE 
2005 Int. Conf. on Emerging Technologies, pp. 488-493, 2005. 
[30] R. J. Wai, R. Y. Duan, J. D. Lee, and H. H. Chang, “Wavelet neural network control for 
induction motor drive using sliding-mode design technique,” IEEE Trans. on Industrial 
52 
 
 
 
Appendix 
Detailed Drawings 
 
This appendix contains the detailed design drawings of all components of the TORA system 
that have been manufactured in the workshop. The drawings are generated from a CAD model. 
 
54 
 
 
 
 
56 
 
 
 
 
58 
 
 
 
 
60 
 
 
 
 
62 
 
 
 
 
64 
 
 
 
 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC-95-E-155-068-MY2 
計畫名稱 非線性 TORA硬體建置及其基於干擾估測之智慧型適應控制機制設計與實現 
出國人員姓名 
服務機關及職稱
李慶鴻  
元智大學電機工程學系 副教授 
會議時間地點 2008/06/02～2008/06/06 
中國大陸香港 
會議名稱 
(中文) 2008 IEEE 世界計算智慧研討會 
 (英文) 2008 IEEE World Congress on Computational Intelligence, 
WCCI’08 
發表論文題目 
(中文) 使用非對稱歸屬函數之第二型模糊類神經網路應用於
非線性系統辨識 
 (英文) A Recurrent Interval Type-2 Fuzzy Neural Network with 
Asymmetric Membership Functions for Nonlinear System 
Identification 
 
一、參加會議經過 
此次會議於 2008年 6月 1日至 6月 6日假中國大陸香港市中心之國際會
議中心(Hong Kong Convention and Exhibition centre)舉行，個人於 6月 2日於
桃園國際機場搭乘 CX565班機前往香港，航行時間約 80分鐘於當天下午抵達
香港機場，隨即搭機場快線地鐵轉巴士抵達會場-香港國際會議中心。因時間
稍晚後無法完成報到，但仍於會場遇到幾位國外與台灣學者。隔日一早完成報
到手續，領取大會相關資料及未來會關會議資訊，該年會為 IEEE之模糊系統
會議、類神經網路會議及演化計算會議之聯合會議，為重要年會，有機會與重
要知名學者交換意見。今年度大會事前準備嚴謹，提供每位與會者一本精緻論
文摘要集與論文全文光碟片。為期 6天的議程中，因投稿者眾多，大會必須事
前篩選優秀論文並規劃在在幾天完成發表，可發現議程緊湊，且每一場次似乎
幾乎座無虛席，由此可見與會者都相當重視此次的會議。今年度有 
2518(1103+548 +867)篇論文投稿，接受有 1622(642+376+604)篇，約 60％，計
有 76國、上千位專家學者與會。會議結束後，於 6月 6日當日下午搭乘 CX-472
班機至台北，此行收穫良多，一切都很順利且圓滿完成整個會議之相關行程。 
 
 
 
 
Abstract— This paper proposes a recurrent interval type-2
fuzzy neural network with asymmetric membership functions
(RT2FNN-A). The RT2FNN-A uses the interval asymmetric
type-2 fuzzy sets and it implements the FLS in a five layer
neural network structure which contains four layer forward
network and a feedback layer. Each asymmetric fuzzy member
function (AFMF) is constructed by parts of four Gaussian
functions. The corresponding learning algorithm is derived by
gradient descent method. Finally, the RT2FNN-A is applied in
identification of nonlinear dynamic system. Simulation results
are shown to illustrate the effectiveness of the RT2FNN-A
systems.
I. INTRODUCTION
N recently years, the fuzzy systems and control are
regarded as the most widely used application of fuzzy logic
system [3, 4, 15, 18, 24]. In traditional fuzzy system models,
the structure is characterized by using type 1 fuzzy sets,
which are defined on a universe of discourse, map an element
of the universe of discourse onto a precise number in the unit
interval [0, 1]. The concept of type-2 fuzzy sets was initially
proposed by Zadeh as an extension of typical fuzzy sets
(called type-1) [25]. Mendel and Karnik developed a
complete theory of type-2 fuzzy logic systems (T2FLSs) [5,
14, 18]. Recently, T2FLSs have attracted more attention in
many literatures and special issues (IEEE Transactions on
Fuzzy systems [2, 4, 7, 14, 18, 19, 21-23]).
T2FLSs are more complex than type-1 ones, the major
difference being the present of type-2 is their antecedent and
consequent sets. T2FLSs result better performance than
type-1 Fuzzy Logic Systems (T1FLSs) on the applications of
function approximation, modeling, and control. Besides,
neural networks have found numerous practical applications,
especially in the areas of prediction, classification, and
control [8, 15, 20]. The main aspect of neural networks lies in
the connection weights which are obtained by training
process. Based on the advantages of T2FLSs and neural
networks, the type-2 neural fuzzy systems are presented to
handle the system uncertainty and reduce the rule number and
computation [2, 7, 18, 22, 23]. In addition, recurrent neural
network has the advantages of store past information and
speed up convergence [8].
Ching-Hung Lee is with Department of Electrical Engineering, Yuan-Ze
University, Chung-li, Taoyuan 320, Taiwan. (phone: +886-3-4638800, ext:
2427; fax: +886-3-4639355, e-mail: chlee@saturn.yzu.edu.tw).
Tzu-Wei Hu, Chung-Ta Lee, and Yu-Chia Lee, are with Department of
Electrical Engineering, Yuan-Ze University, Chung-li, Taoyuan 320,
Taiwan.
The design of a fuzzy partition and rules engine normally
affects system performance. Symmetric and fixed
membership functions (MFs) (e.g., Gaussian or triangular)
are commonly used to simplify the design procedure.
Therefore, a large number of rules should be used to achieve
the specified approximation accuracy [9, 17]. Several
approaches have been introduced to optimize fuzzy MFs and
choose an efficient scheme for structure and parameter
learning. This problem has been discussed and analyzed
using asymmetric fuzzy MFs (AFMFs) [1, 6, 9, 12, 16, 21,
22]. The results shows that using AFMFs can improve the
modeling capability. According to the previous results, our
purpose is to introduce a recurrent interval type-2 fuzzy
neural network with asymmetric membership functions
(RT2FNN-A). In the literature [11, 22], a T2FNN with
asymmetric MFs was proposed to improve the system
performance and obtained better approach ability. However,
the structure of network was a static model. In this paper, we
proposed a combining interval type-2 fuzzy asymmetric
membership functions with recurrent neural network system,
called RT2FNN-A. The proposed RT2FNN-A is a modified
version of the T2FNN [7, 10, 11, 22, 23], which provides
memoried elements to capture system dynamic response [8].
Simulations are shown to illustrate the effectiveness of the
RT2FNN-A system.
This paper is organized as follows. Section 2 introduces the
type-2 fuzzy neural network system and the construction of
asymmetric membership functions. The recurrent type-2
fuzzy neural network with asymmetric membership functions
is described in Section 3. A simulation about handling
nonlinear system identification problems is done and
introduced in Section 4. Finally, conclusion is given.
Fig. 1. Symmetric interval type-2 fuzzy MFs: (a) Gaussian MF with
uncertain mean and (b) Gaussian MF with uncertain variance.
ARecurrent Interval Type-2 Fuzzy Neural Network with
Asymmetric Membership Functions for Nonlinear System
Identification
Ching-Hung Lee, Tzu-Wei Hu, Chung-Ta Lee, and Yu-Chia Lee
I
1496
978-1-4244-1819-0/08/$25.00 c©2008 IEEE
.15.0
,
)()()()(
)()()()(






		
		
			
r
mmmm
rrll
rrll
 (4)
Figure 2(b) sketches the lower type-2 AFMF. The
corresponding constructed type-2 AFMF is shown in Fig.
2(c). This introduces the properties of uncertain mean and
variance [18]. Additionally, we can construct other type-2
asymmetric MFs by tuning the parameters. The
corresponding tuning algorithm is derived to improve system
accuracy and approximation ability.
III. RECURRENT TYPE-2 FUZZY NEURAL NETWORK WITH
ASYMMETRICMEMBERSHIP FUNCTIONS
The RT2FNN-A is implemented as the four-layer network
with feedback layer shown in Fig. 3. Below we first indicate
the signal propagation and the operation functions of the
nodes in each layer. In the following description, )(liO
denotes the ith output of a node in the lth layer.

nx1x

1y 

11
~G MG1
~
1
~
n
G
nMG
~F
MG
~FG1
~
1Z1Z
  




][ 11 ff ][ MM ff
][ 11 ww ][ MM ww
][ 1111 aa ][ 11 MM aa
][ MMMM aa][ 11 MM aa
Layer 1
Layer 2
Layer 3
Layer 4
Layer 5
Fig. 3. Recurrent Type-2 Fuzzy Neural Network with Asymmetric MFs
(multi-input and single output).
Layer 1: Input Layer
For the ith node of layer 1, the net input and output are
represented as
)1()1(
ij xO  , (5)
where )1(ix represents the ith input to the jth node. Obviously,
the nodes in this layer only transmit input values to the next
layer directly.
Layer 2: Membership Layer
In layer 2, each node performs a type-2 AFMF introduced
by (2)–(4) (shown in Fig. 3). The following simplified
notation is adopted
)(~ )1(~)2( iFij OO ji . (6)
It is clear that there are two parts in this layer, regular nodes
and feedback nodes. Their input are )1(jO and )(kg j .
Therefore, for network input ix , the output is
  TiGiG
T
ijijij OOOOO ijij 



 )()( )1(~)1(
~
)2()2()2(  (7)
For internal or feedback variable jg ,
 
,))(())(( ~
~
)2()2()2(
T
jGjG
TF
j
F
j
F
j
kgkg
OOO
F
jFj 






(8)
where the subscript ij indicates the jth term of the ith input
)1(
iO , where .,,1 Mj  The superscript F indicates the
feedback layer.
Layer 3: Rule Layer
The links in layer 3 are used to implement the antecedent
matching, and these are equal to the work in the rule layer.
Using the product t-norm, the firing strength associated with
the jth rule is
)()()(
~~1~
1
 jF
j
j
n
j GnFF
j
xxf   (9)
)()()( ~~1~
1
 jF
j
j
n
j GnFF
j
xxf   , (10)
where )( and )( are the lower and upper membership
grades of )(~ G , respectively. Therefore, a simple product
operation is used. Then, for the jth input rule node:









i
ijij
F
j
i
ijij
F
j
j OwO
OwO
O )2()3()2(
)2()3()2(
)3( (11)
where weights )3(ijw are assumed to be unity and
 
T
n
i
ij
F
j
n
i
ij
F
j
T
jjj OOOOOOO 



 
 1
)2()2(
1
)2()2()3()3()3(
. (12)
Layer 4: Output Layer
Without loss of generality, the consequent part of the
interval T2FLS is   ,~ Tjjj www  jj ww 	 . The vector
notations TMwww ][ 1  and TMwww ][ 1  are
used for clarity. The remaining works are type reduction and
defuzzification. For type reduction, we should calculate the
lower and upper bounds ],[
rl yy [5, 18]. Modifying from the
Karnik-Mendel procedure [5], let
    
.1
1
, , , ,
)4(
111 111
       
M
i iiwww www fff fffTR
wfO
MMM MMM
 (13)
Note that the normalization ( 
M
i i
f
1
) is removed here to
simplify the type reduction procedure, computation, and the
derivation of the learning algorithm by the gradient method.
We denote the maximum and minimum of  
M
i ii
wf
1
as
)4(O and )4(O ,
1498 2008 IEEE International Conference on Fuzzy Systems (FUZZ 2008)
Finally, region (III)- )()( rijilij mxm && , nothing should be done.
Therefore, we can tune one side of MF for each training
pattern. The results of lower MFs are the same as above
discussion. Besides, parameter r must be updated for all
three regions. Owing the recurrent property, the real time
recurrent learning algorithm (RTRL) is used.
-3 -2 -1 0 1 2 3
0
0.2
0.4
0.6
0.8
1
Upper MFs
)(l
m
)(rm
ix
)(x
Fig. 4. Definitions of firing regions of input variable xi (upper MF).
By the gradient method, we derive the parameters update
laws. Consider equations (14), (15), and (19), the output of
RT2FNN-A is rewritten as
 
 !  !  !  ! .
2
1
2
1
1 1 1
)3()3()3(
1
)3(
)4(
1
)4(
1
)4(







"""
"
  
"  "
M
Lj
R
j
M
Rj
jjjjjj
L
j
jj wOwOwOwO
OOO
(36)
From equations (26) and (35), our major work is to find the
partial derivation of RT2FNN-A with respect to each
parameter which can be obtained using the chain rule
(detailed derivation are omitted due to the limitation of
writing space, similar results can be found in [11, 22]).
By using the Lyapunov stability approach, we have the
following convergence theorem.
Theorem 1: Let ][
rw
%%%% be the learning rates
of the tuning parameters for RT2FNN-A. The asymptotic
convergence of RT2FNN-A is guaranteed if proper learning
rates ][
rw
%%%% are chosen satisfying the following
condition
 ! 2&"""""""" F
r
FF
a
arw
''''''''' (37)
where
0)(ˆ)(ˆ0,)(ˆ)(ˆ
0)(ˆ)(ˆ0,)(ˆ)(ˆ
0)(ˆ)(ˆ0,)(ˆ)(ˆ
(




#
#





#
#
(






#
#







#
#

(






#
#







#
#
(




#
#





#
#

(






#
#







#
#
(






#
#







#
#

a
T
a
aa
a
T
a
aa
T
rr
T
T
w
T
w
ww
kykykyky
r
ky
r
kykyky
kykykyky
WWWW
WW
WWWW
%'%'
%'%'
%'%'
.0)(ˆ)(ˆ
0)(ˆ)(ˆ0,)(ˆ)(ˆ
(






#
#







#
#

(




#
#





#
#
(






#
#







#
#

F
T
Frr
F
T
F
F
F
T
F
F
r
ky
r
ky
kykykyky
F %'
%'%'
WWWW
Proof: The proof of Theorem 1 is omitted due to the
limitation of writing space.
Nonlinear System
ART2FNN
+ e
_
)(ˆ ky
BP
%
)(kyd
Condition (37)
z-1
u
)1( kyd
RT2FN -A
Fig. 5. Series-Parallel Identification Scheme for RT2FNN-A system.
IV. SIMULATION RESULTS
Consider the following non-linear system
))1(,),(),1(,),(()1( """ mkukunkykyfky ddd 
(38)
where u and yd are systematic input and output; function f(.) is
the unknown function which is approximated by the
RT2FNN-A. And thenm and n are all positive integer number.
Here, the series-parallel training scheme is adopted, as shown
in Fig. 5. The approximated error is defined as follows
)(ˆ)()( kykyke d ) (39)
where )(ˆ ky denotes the RT2FNN-A’s output. Clearly, the
inputs of RT2FNN-A are control input u and system past
input yd(k-1). If a static network system (or feed-forward
neural network) is used, such as, Neural network, Fuzzy
Nneural Network, T2FNN, T2FNN-A, the input number of
n+m should be used. This is due to the dynamic property
(feedback layer) of RT2FNN-A system.
In general, the following Training-Mean-Square-Error
(TMSE) is adopted to be the performance index.


)
N
k
ke
N
TMSE
1
2 )(1 (40)
where N is the number of training pattern.
In this paper, the following nonlinear system is considered
1500 2008 IEEE International Conference on Fuzzy Systems (FUZZ 2008)
