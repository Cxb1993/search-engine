 2 
SCORM 2004 教材與學生學習管理系統重構 
徐偉智，李任修 
國立高雄第一科技大學  電腦與通訊研究所 
weichih@ccms.nkfust.edu.tw 
 
中文摘要 
 近年來，由於網際網路的流行，
使得網路學習成為一個熱門趨勢，許
多優良的網路學習系統也如雨後春筍
般出現。然而這些平台之間，彼此開
發的學習教材並無法互相交換使用，
形成學習資源的浪費。為了使教材可
互通不受限於使用的平台，採用 SCORM
標準來設計教材與平台便成為一種有
效方式，在 ADL 組織所釋出的 Sample 
RTE便是符合SCORM標準的簡易學習管
理系統，可用來展示與管理符合 SCORM
標準的教材。由於 Sample RTE 存在維
護不易、效能不佳及功能擴充不易等
缺失，為了有效解決這些缺失，本論
文嚐試使用 Apache 的 Struts 等技術
來重建 Sample RTE 系統，讓重建後的
系統能更符合系統開發及管理者需
求。 
 
關鍵詞：SCORM、ADL、Sample RTE、
Apache、Struts 
 
Abstract 
Recently, because of the popularity 
of the internet, web-based learning also 
become popular. There are many 
outstanding web-based learning systems 
that already existed. However, among 
them, the content of each platform is not 
interchangeable so as to waste learning 
resources. For interoperability of content 
without limited by platform, it is 
effective to design content and platform 
according to SCORM standard. The 
Sample RTE of ADL release is a simple 
learning management system supporting 
SCORM, it can present and manage 
content that fit to SCORM. However, it 
is not easy to maintain, perform and 
develop functions for Sample RTE. To 
solve these problems, we try to rebuild 
Sample RTE system with technology of 
Struts of Apache. 
 
Keywords：SCORM、ADL、Sample 
RTE、Apache、Struts 
 
壹、緒論 
近幾年來，世界各國都致力於用學習科
技推動教育變革與創新，以美國為例，
EDUCAUSE 以「運用科技提升高等教育品質」
為職志，並獲致很好的成效。 
在早期的電腦輔助教學數位學習系統設
計模式中，各家廠商均採封閉及專用模式，即
A廠商所開發的教學平台無法跑(Run)B 廠商
所開發的數位教材，數位教材與教學平台之間
有極高的相依性，類似的數位教材內容可能以
不同的設計及操控模式被不同的廠商重複開
發卻又無法在彼此開發的教學平台間互通，形
成資源的浪費，如圖 1所示，在不同平台的不
同教材無法彼此交流。 
 
 
圖 1不同平台無法交流不同教材示意圖 
因此學術界亟待能制定一套數位學習教
材交流的業界標準，讓數位教材不再受制於不
同廠商所開發的教學平台，如同撰寫 Java 程
式碼般，『只寫一次就可通行全世界 (write 
once，run anywhere)』，如圖 2 所示，雖然教學
平台 A、B 及 C 分別用不同的動態網頁程式
ASP、PHP 及 JSP 所開發，但因均掛上符合業
界標準的課程執行引擎，且其個別開發的數位
教材 A、B及 C均採用共同的業界標準，故這
些不同的教材可在不同的平台間彼此交流。當
數位學習透過網路而無遠弗界時，學習管理系
統（Learning Management System，LMS）在
其中便扮演關鍵的角色，因其肩負著系統與學
習者間訊息溝通之任務，舉凡課程之傳遞、學
習者學習歷程之記錄、課程導覽等皆是其必備
之功能；透過標準的制定，可讓學習資源作最
有效之運用，這其中又以由美國白宮科技辦公
室與國防部於 1997年所共同推動的ADL先導
計畫（Advanced Distributed Learning Initiative）
中所提出的 SCORM（Sharable Content Object 
Reference Model）標準為各界所推崇。 
 4 
圖 3 Model 1的處理模式 
 
• 模型二（Model 2）架構簡介：在模型二架
構中，servlet 處理請求(request)，建立由
JSP 檔案使用的任何 bean或物件，並將請
求(request)轉向(forward)。模型二架構通常
被稱為模型-視圖-控制器
（Model-View-Controller，MVC）架構，
它解決了許多模型一的內在問題，所使用
的方法則是將應用程式中的責任區分清
楚，如圖 4所示。在模型-視圖-控制器的
架構中，控制器負責接收及處理應用程式
所有的請求(以 Servlet 來實現)(1)，並與模
型(以 JavaBean來實現)互動(2)(5)，模型再
與後端資料庫進行資料存取動作(3)(4)，以
預備視圖(以 JSP 來實現)所需的資料，並
將資料傳給視圖(6)，視圖再產生回應
(response)給用戶端(7)。在此架構下，商業
邏輯及呈現邏輯互相獨立。 
 
圖 4 Model 2的處理模式 
 
參、以 Struts MVC Model2重建系統 
由於 ADL SCORM 2004 RTE 
1.3 是一個簡易的 LMS 展示系統，在系統小
型及快速開發的考量下，相較於適用中大型系
統開發的 Model 2而言，Model 1 便是最好的
選擇，因 Model 1將用來處理使用者請求的模
型(Model)、視圖(View)及控制器(Controller)元
件功能的程式碼全數集中於一個 JSP 頁面
中，系統開發人員可以方便直覺的將處理程序
(控制器的功能)依動作先後撰寫於 JSP 頁面
中，只要經過 JSP Container 編譯執行就可快速
得到結果。 
 
舊系統之缺點 
故 ADL SCORM 2004 RTE 1.3相對的缺
失便是維護性欠佳(針對耦合性而言)、效能欠
佳(針對後端資料庫存取而言)及系統功能擴充
不易、元件重用性不佳，以下將針對上述各項
缺失分段說明。 
• 維護性欠佳：由於 Model 1之 JSP 將商業
邏輯(Model)與展現邏輯(View)耦合在同
一個頁面中，在整個 JSP 頁面中混雜著
HTML tag及 Java code，將增加程式撰寫
的複雜度及系統建置完成後維護的困難
度，當系統功能複雜時 HTML tag及 Java 
code 互相糾結的情況更形嚴重，以 Model 
1『方便且隨心所欲』的系統開發方式，
就會成為開發前未經詳盡系統分析與規
劃的系統開發人員，在系統建置完成後維
護時揮之不去的噩夢。 
• 效能欠佳：嚴格說來，Access是屬於單機
使用的資料庫系統，並不適用於多人共同
操作。在資料庫存取效能方面，文獻上建
議，同時使用 Access的人數最好是一人，
最多不可超過五人，若超越此數則資料
表、記錄之間的 Lock 情況會非常嚴重，
而這就是造成等待及作業逾時(timeout)的
主因。RTE 1.3 使用傳統資料庫存取方
式，即依系統存取資料庫的請求重複地進
行建立連線資料庫操作關閉連線等
動作，將導致系統效能低落。 
• 元件重用性不佳：以舊系統 RTE 1.3 為
例，在刪除使用者帳號(deleteUser.jsp)及觀
看 或 修 改 一 個 存 在 的 整 體 目 標
(selectUser.jsp)功能中均須至資料庫的
userinfo 資料表取得已註冊之使用者清單
供管理員選擇，故此相同的商業邏輯程式
碼會在這兩個 JSP 頁面重複出現。因 RTE 
1.3 相同的商業邏輯無法重複使用，更嚴
重的是當相同的商業邏輯大量使用時，若
功能改變則須逐一修改相關程式碼，可能
會有掛一漏萬(即遺漏)情況發生，若能將
相同的商業邏輯以元件(函數)型態封裝成
物件使用，便可一併解決上述之問題。 
• 系統功能擴充不易：假設系統要增加一個
統計每個使用者的在課程中每個單元所
停留的時間，即先選擇使用者，再秀出所
得的資料。在舊系統 RTE 1.3 中就是將上
例中相同的商業邏輯重新撰寫一次(偷懶
的話就用 copy)，再稍微修改負責秀出資
料的 HTML tag語法即可得到想要的畫
面。若改用 Model 2，則只須在 Struts 設
定檔中增加一組類似設定即可立即得到
想要的功能，在模型(Model)部份不用撰寫
任何程式碼。單就相同的商業邏輯比較，
Model 1重新撰寫一次 Java code與 Model 
2 在 Struts設定檔中增加一組類似設定即
可立即得到想要的功能，在模型(Model)
部份不用撰寫任何程式碼，可明顯看出
Model 2的系統功能擴充性優於 Model 
1，最大優勢在於相同的商業邏輯改變時
Model 2只改一個即可，而 Model 1則有
幾份就得改幾份，不小心還會有不一致(遺
漏)的頭痛問題。 
 
組成 Struts的元件 
 
 
 6 
HTML tag 及 struts tag 所組成。此處的
courseRegister.jsp 只負責將 ActionServlet 儲存
於期程(session)中委託某個ActionClass所取得
的課程清單物件，利用 HTML tag及 Struts tag
經 JSP Container 編譯執行後回應給使用者瀏
覽器秀出圖 6 的系統選課(註冊)畫面。 
 
圖 7 courseRegister.jsp處理流程 
 
 
圖 8 從 courseRegister.jsp 抽離 View 
 
圖 9 是從圖 7中抽離擔任模型(Model)功
能的 Java code，以 getUserRegisterCourseInfo( )
修改後的處理流程概念圖，它全由 Java code
所組成，而為了提高函數元件重復使用性，故
將它與其它和課程物件操作有關的公用函數
一起封裝在課程商業邏輯物件 CourseBO 中，
供其他物件呼叫使用。 
 
圖 9 從 courseRegister.jsp 抽離 Model 
 
接 著 宣 告 一 個 ActionClass ： 
StrutsLMSListAllCourseInfoAction 來 接 受
ActionServlet 的委託(delegation)執行選課(註
冊)請求處理的工作，在其 execute( )函數中呼
叫實際處理請求的商業邏輯函數，如圖 10 所
示。最後將系統選課(註冊)功能的執行流程寫
入 Struts 設定檔(struts-config.xml)中，如圖 11
所示，便完成此功能從MVC Model 1至Model 
2 的轉換作業，其他系統功能均採此類似模式
進行轉換，成功地將混雜在 JSP 頁面的 HTML 
tag 及 Java code 分離成各自獨立 View 元件
(JSP)及 Model 元件(Java code)，再將處理流程
詳述於 Struts設定檔由 ActionServlet執行時參
考使用。 
 
圖 10 ActionClass內含的 execute( )函數處理
流程 
 
 8 
表 1 是系統重建前/後變動項目比較表，
其中有使用數個 Struts所提供套件，它說明了
使用『軟體框架(Software Framework)』開發
Web Application 系統的好處之一就是某些
Web Application系統所需的『制式功能』已以
套件(package)型式存在 Struts 的內建程式庫
中，可以如堆積木般組合出想要的功能，最重
要的一點是這些套件是將以Model 1型式撰寫
的 JSP 頁面中的 Java code 隱藏起來的最大功
臣，也是將 Model 1轉成 Model 2不可或缺的
角色，在以 Model 2 型式撰寫的 JSP 頁面中，
將這些套件與 Struts tag 結合就能得到與
Model 1 型式撰寫的 JSP 頁面相同的結果與功
能。 
 
肆、驗證與測試 
本章進行系統成果驗證，利用 ADL所釋
出符合SCORM 2004標準之PhotoShop教學範
例課程來測試重建之系統，證明利用 Struts軟
體框架來開發及改善 Web Application 的可行
性。 
 
完整流程測試 
以下將以 ADL所釋出之符合 SCORM 
2004標準之 PhotoShop範例課程中之不同的
教學策略順序導覽模式：No Sequencing 
rules(無順序規則)及 Linear(線性)來進行系統
測試，以下是這兩個不同的教學策略順序導覽
模式的簡介： 
• 無順序規則：是最基本的學習模式，讓學
員自由地選擇學習活動，並且沒有學習時
間及次數等特別限制。 
• 線性：限制學員的學習進度須依照教學設
計師所事先規劃的順序進行，即學員須完
成目前學習的教材才能往下繼續學習。 
圖 15 是登入 LMS Server 系統畫面，在
圖 16 中藉由輸入之使用者名稱，系統依判別
之使用者身份(學員或管理員)分別顯示不同之
功能選單供使用者選擇，此例輸入的是學員帳
號。 
在圖 17中，系統提供學員四個功能之選
單，當使用者選擇『選課』功能時，出現圖
18 畫面供使用者註冊選課或註銷已選課程，
系統會自動依相對動作在 SampleRTEFiles 資
料夾中新建(或刪除)以『使用者帳號』命名之
資料夾來記錄(或清除)使用者的學習歷程。 
 
圖 15 進入系統 
 
 
圖 16 使用者登入 
 
在圖 17中，當使用者選擇『選讀』功能
時，出現圖 19 畫面供使用者選讀已註冊課
程。在圖 20 是使用者選讀的課程，左側是課
表(Table of Course，TOC)，右側是相對的章節
內容，在此圖中顯示的是使用者選擇左側的
Lesson 1。在圖 21中顯示的是使用者選擇左側
的 Question 1。在此範例課程共提供 9個章節
Lesson 1 ~ Lesson 9 及 9 個問題 Question 1 ~ 
Question 9，其中的 Lesson 1 ~ Lesson 9 被歸類
為 Asset，而 Question 1 ~ Question 9 被歸類為
SCO，LMS Server 只記錄 SCO 的行為。 
 
圖 17 學員權限 
 
 
圖 18 選課 
 
 
圖 19 選讀 
 
圖 20 及 圖 21 是 當 課 程 的
imsmanifest.xml 設定在未含順序規則 (No 
 10
使用的應用領域，同時再藉由範例課程的
實際操作演練讓本地使用者對 SCORM標
準的認知及可能的應用有一個明確的概
念。 
• 提供將一個實際可操作、以 JSP M-V-C 
Model 1所建構的小型 Web Application系
統(即 Sample RTE)利用Apache Struts等相
關 Java技術成功地轉換為M-V-C Model 2
系統架構的完整實作示範，對於想學習使
用 Struts來開發Web Application及如何將
M-V-C Model 1 系統轉換成 Model 2的使
用者而言均具有極高的參考價值。 
目前國內市面上可參考講解 Struts的中
文專書約五本左右，其中只有一本是由國人自
行撰寫，其餘皆為中譯本，故可知能參考的在
地資源相當有限，初學者若能善用這些僅有的
在地資源再佐以本論文所述必能有效縮短盲
目摸索、嚐試錯誤之時程及代價，若再加上積
極的求知欲及善用網路解決問題的技能，相信
假以時日必能有豐盛之收益。 
 
未來研究方向 
 在實作本系統時是本著『先求有、再求
好』之精神，在時間有限情況下並未對程式碼
之撰寫作最佳化規劃，故在此方面尚有精進的
空間。而對數位學習成效具有決定性之影響者
當屬『學習內容(教材)之規劃與製作』，試想若
能以影視商業廣告或如益智節目 Discovery 
Channel、National geography Channel 之製作水
準，集財力及人力之匯聚來做最精緻的學習內
容規劃與製作，則在靜態(單向)學習方面，數
位學習所產生之果效可能會凌駕於實體課堂
教學之上，由於在人力物力上所費不貲，實非
一般中小企業所能承受得起，但在如此品質要
求下，再配合 SCORM 標準之可互通等特性的
加持下，若能搭配合理之軟體教材使用者付費
機制，同時保障數位教材開發者與使用者雙方
應有之權益，並著眼於市場全球化之經濟收益
之考量下，數位學習內容(教材)之規劃與製作
等相關領域之發展潛力是不容忽視的，這亦應
是對此領域發展有興趣及遠見之產、官，學三
方人士要密切注意的。 
 
參考文獻 
[1] http://www.adlnet.org，Sharable 
Content Object Reference Model 
2004 Overview 
[2] http://www.adlnet.org，Content 
Aggregation Model 
[3] http://www.adlnet.org，Run-Time 
Environment 
[4] http://www.adlnet.org，
Sequencing and Navigation 
[5] 陳建勳譯，STRUTS實作手冊，初
版，博碩文化，2003 
[6] 林鴻儒，透視 Jakarta struts架構，
初版，文魁資訊，2005 
[7] 朱仲傑，JAVA2全方位學習，初版
四刷，碁峯資訊，2005 
[8] 林上傑，林康司著，JSP 2.0技術
手冊，初版，碁峰資訊，2005 
[9] 鄭義明，SCORM 2004 教材與學生學
習管理系統重構，2007 
 
