2行政院國家科學委員會專題研究計畫成果報告
Integrating the Cadabia Database into Network Development
Environments
計畫編號：NSC 95-2221-E-194-048-
執行期限 95 年 8 月 1 日至 96 年 7 月 31 日
主持人：貝若爾
地址中正大學資訊工程研究所
dan@cs.ccu.edu.tw 電話 (05)272-0411(33103)
一、中文摘要
關鍵詞：類別代數、分散式物件導向資料庫、「是
一個」層級架構、物件識別串列。
Abstract
這個專案計畫是基於之前幾個 Cadabia 資料
庫系統的國科會專案計畫(NSC94-2213-E194-024,
NSC93-2213-E-194-010, NSC92-2213-E194-019,
NSC91-2213-E194-022)。此 project 整合 Cadabaia
資料庫系統，成為一個網路開發環境。我們的最
終目標是使它允許網路程式去使用一個能直接連
到Cadabia資料庫的元件，此元件使用了一個 query
property去表示什麼資料被顯示或者是編輯。到目
前為止，class hierarchy與用 grid dispay顯示出所搜
尋出來的物件已被實作，並且預設的使用者應用
程式計畫將於 2007 年 12 月完成。
This project is based on several previous NSC
projects for the Cadabia database system
(NSC94-2213-E194-024, NSC 93-2213-E-194-010,
NSC92-2213-E194-019, NSC91-2213-E194-022).
This project involves integrating Cadabia into network
development environments. The goal is to allow
network applications to use components which can
connect directly to Cadabia by using a query property
to tell what data to display or edit. So far, the class
hierarchy and a grid displaying the objects of a query
result have been implemented, and the complete
default user application is scheduled for completion by
December, 2007.
Keywords: Class algebra, distributed object-oriented
database, IS-A hierarchy, OidList
二、緣由與目的 Original Purpose
This project is based on the Semantic Web and the
Ontology Web Language, OWL. The goal is to allow
class definitions and their attributes, relations, and
methods to be shared easily by using class algebra. If
two distinct ontologies are to be used within one
application, then an abstract union class can be used to
define the data types of the objects in either database.
Generic cals to a “view” or “edit” method wil alow 
individual objects to be viewed or edited by the
corresponding component.
There are two implementations of Cadabia and each
Cadabia component. One is a JSF component that
creates html with editable fields. The other is a
standard Java Swing component for use by an
application or applet. Both components use Cadabia
queries to edit data in the backend SQL or XML
databases.
三、研究報告應含的內容 Research Details and
Discussion of Results
This distributed, object-oriented database is
being implemented in terms of nested kernels that
correspond to different aspects of database technology.
The inner kernel defines the standard terminology for
defining distributed databases, classes, relations, and
queries/updates. Then database, servlet, and applet
methods are defined. The third kernel defines
authentication and authorization in terms of users,
public / private keys, and user lists for methods. The
fourth kernel defines transactions. A fifth kernel will
define various aspects of trustworthiness to facilitate
users and agents in making choices of whom to deal
with.
The main idea of Cadabia is that when the kernel
definitions of two databases agree, then their results
can be easily merged. Each object has an object
identifier (oid) which involves a prefix, a class name,
and an object name. The prefix maps to a back-end
name space, and each back-end server’s name space is
unaffected by other namespaces. However, the
common kernel namespace allows the back-ends to
implement the same API so that their query results are
easily merged by a middle layer server.
四、Evaluation
The current state of the database is available at
http://hyena.cs.ccu.edu.tw/NSC and
http://sourceforge.net/projects/cadabia/ . There will
be two versions of the default database editor –a
