II 
摘要 
 
網際網路目前日益興盛，伴隨相關網路應用亦愈多元化與多樣化，其中網路電話--VoIP
亦是其中一項熱門且廣為討論的議題。 
 
然而隨著網路語音系統(VoIP)與無線隨意網路的普及，在隨意網路上布建並使用網路
語音電話已日漸受到討論與發展。所謂的行動隨意網路(Mobile Ad hoc network, MANET)
主要提供在沒有網路基礎建設時，讓使用者依舊可以相互進行網路存取之網路架構，近年
來被引伸至許多應用場合，如戰場、災後重建、臨時的會議中心…等。由於現有主要網路
語音服務之協定，如會談起始協定(SIP)，係以採用主從式架構作為系統主軸，使用者必須
仰賴事先建立之伺服器才可進行語音通話，如此一來造成 SIP 協定無法順利的導入至行動
隨意網路架構上。 
 
因此針對於目前現有之隨意網路語音系統上，大多是採用修改 SIP 標準協定或使用額
外服務探索協定(SLP)等方式，但上述所提及之解決方案，亦將造成無法與現有 SIP UA 相
容，甚至額外的負擔發生等問題。所以，在本計劃中，我們將透過使用標準的 SIP 協定，
整合使用者探索機制與所提出之虛擬 SIP 伺服器之概念，來達到與現有 SIP UA 之相容，與
降低系統設計之複雜度與額外之負擔做為實作之主軸。並且透過實作虛擬 SIP 伺服器及一
系列之量測與實驗，提出在隨意網路環境中，方便使用者使用之即時語音系統之服務 
 
關鍵字：隨意網路、VoIP、SIP、虛擬SIP 伺服器 
 
 
 
 
 
Abstract 
 
In the recent years, wireless network and IP Telephony have been widespread. How to 
deploy VoIP services over Ad hoc networks is an important issue nowadays. However, to modify 
SIP protocol or use SLP could be an easy way that makes mobile devices communication over 
Ad hoc networks, but it also cause incompatible with SIP UA. In this research, we implement 
pseudo SIP server mechanism over Ad hoc networks. It base on SIP protocol and also integrated 
SIP presence to deal with SIP signaling over non-infrastructure networks. It is also compatible 
with SIP UA. Based on those mechanisms, we implemented and analyzed the Ad hoc VoIP 
system. 
 
Keywords: Ad hoc, VoIP, SIP, Pseudo SIP Server 
 
 
 
4 
文獻探討 
1. VoIP ( Voice over Internet Protocol) 
網路語音電話，又稱 IP Telephony，主要是利用現有的分封交換(packet switch)網路傳輸
語音，在網路上使用網路語音與傳統市話之撥打相同，在傳統市話方面，利用已建置好之
電信交換(circuit switch)機制進行傳輸，在拿起話筒時，即與交換機建立好連線，矣撥打電
話時，亦透過此電話網路使我們的語音傳送到目的端。因此，對於網路語音一個重要的議
題即是如何達成信令交換，透過網路伺服器並且利用固定的訊息交換，達到協調雙方的網
路語音使用者，是近年網路語音電話重要的議題。近年來，應用於 VoIP 方面有相關的標準
制定—H.323、SIP、MEGACO[5]及 MGCP[1]等，而最廣泛討論及研究發展的即是 H.323
與 SIP。國際電信聯盟(International Telecommunication Union, ITU) 在 1996 年制定了
H.323，目的在於解決使用網路語音時信令交換之議題，及多媒體傳輸所要求的即時性與連
續性，其主要內容是在定義分封交換網路上終端機之間的壓縮和解壓縮標準，但是因為囊
括了影像、語音等機制，使得封包過於複雜且龐大，造成了不必要的網路封包浪費，取而
代之的是 2002 由 IETF 所提出之 SIP 協定。 
2. Ad-hoc VoIP 
隨意網路即在沒有網路基礎建設時，使用者依然可以相互進行存取之網路架構。在國
內外的學者亦有針對在隨意網路的環境下，針對語音傳輸及信令交換有相關的研究。在
Khlifi[6]等學者所提出的研究中，使用修改SIP 協定的方式，提出了於隨意網路中使用SIP 
協定之架構，利用SIP 進行語音通話甚至多方通話，意即使用者皆採隨意網路的方式互連，
並且在無一固定伺服器的環境之下，亦可正常提供服務。此種機制則是針對目前SIP 標準，
加入小幅度的修改，並且透過提出之協定草案[8]進行多方通訊之機制實作。 
除了修改SIP 協定的方式之外，Leggio[7]等學者利用服務探索機制，提出在隨意式網
路環境中，使用SIP 協定，達成網路語音電話之架構，其中的節點所使用的元件包括UA、
SIP 伺服器及儲存各個UA 之資訊的Cache。該系統架構提出兩種機制，其一與Khlifi 所提
出之方法相似，透過自行設計修改過之SIP 標準訊息，在沒有SIP 伺服器的隨意網路環境
中，透過廣播的方式，允許隨意網路架構下之使用者彼此交換資訊。其二為透過現有之服
務搜尋協定(SLP, Service Location Protocol, SLP)，像是 Jini[2]、 UPnP 或是
Salutation[9]等機制，透過現有的協定搜尋並交換使用者資訊。此架構雖然提供相較於
Khlifi 更為完整且整合性更高之系統，但還是存在著許多需要深入討論的問題。首先，若
使用第一種提出之機制，則將與Khlifi 之系統架構擁有相似的問題，如與標準的SIP 使用 
者相容性問題及在Ad-Hoc 中大量的廣播訊息…等。但若採用現有之服務搜尋協定，則在使
用隨意網路中的使用者與基礎建設的使用者進行交換，則會造成不相容的情形，如此造成
使用者若移動至基礎建設之SIP 伺服器環境時，無法以單一個SIP UA，同時進行兩種不同
模式網路架構之使用。 
研究方法 
1. 系統架構 
   在本論文中，分析並實作虛擬 SIP 伺服器機制，利用隨意網路及分散式系統之概
念，在隨意網路之架構中，將每台行動裝置嵌入輕量化之 SIP 伺服器，之後在隨意網路中
6 
成註冊後，即能夠啟始VoIP 的通話，採用虛擬SIP 伺服器之機制，可替代在缺乏集中式SIP 
伺服器之無線網路環境上進行VoIP 的信令交換機制。 
隨意網路架構與集中式架構最大的不同在於，隨意網路是一行動式的網路架構，使用
者可以任意移動，而此網路拓蹼(topology)則會改變，除了使用OLSR 繞路機制維護及轉送
節點資訊與封包之外，亦必需有別於基礎建設網路，針對隨意網路內不同的移動方式，做
出適當的處理。 
   
Receive INVIT E from  UA Find t he User ? Y es Froward I NVIT E
m essage
Mult icast  REGIST ER
m essage
No
Find t he User ?
Yes
Pseudo SIP Server
T im e outSIP /2 .0 404  Not  Found
No
No
 
圖四、註冊(REGISTER)示意圖                     圖五、使用者探索流程圖 
面對這樣的問題，可以分為服務啟始與節點移入兩大分類。若使用者使用虛擬伺服器
開啟VoIP 服務時，對於隨意網路內已存在的節點，造成不同時間開啟系統，則會造成時間
不同步，導致後到的使用者無法得到已開啟的使用者訊息，在集中式網路中，有SIP Proxy 
負責處理註冊問題，而雖然在隨意網路環境中可以由SIP 中Expire Time機制解決，但是卻
需讓使用者等待，違反使用語音所面臨之即時性議題。針對這樣的問題，我們在虛擬SIP 伺
服器中儲存本機UA 所發出的註冊訊息(REGISTER message)，如圖四所示，虛擬SIP伺服器
收到其它使用者所發出之群播訊息後，則將本機的註冊訊息傳送至方才送出群播的設備，
如此一來即可解決開啟系統時間不同步之問題，維護隨意網路內各節點儲存訊息的一致性。 
另外在隨意網路內考慮節點移動的問題，若節點移入時，亦不能在節點移入後等待SIP 
之Expire Time，必需設定啟動(Trigger)條件，主動尋找範圍內的使用者。其流程如圖五
所示，在虛擬SIP 伺服器收到本機UA 送來的INVITE 訊息後，若在清單中找到位址，則轉
送INVITE 封包，若無找到使用者位址，則群播UA 的REGISTER 訊息，若經過這樣的訊息交
換還沒有找到使用者，則回應404 Not Found 的訊息。透過以上的設計及節點移動性的考
量，將虛擬SIP 伺服器常駐於各個行動節點，允許現有SIP UA 相容並提供隨意網路功能之
語音電話，同時亦可減低系統設計之複雜度與額外之負擔。 
實作與結果分析 
1. 系統環境 
針對前述系統中之模組及設計之說明，接著，我們利用三台行動設備，針對本計劃所
研發之系統進行實際測試，在一連串的實驗中，我們證明VoIP 可以在隨意網路實現。 在
本論文中，實驗環境如圖六所示，在網路內節點均使用無線網路之隨意網路模式(IBSS, 
ad-hoc mode)相互連結，並使得User 1 同時涵蓋User 2 與User 3 且User 2 與User 3 無
線網路訊號不直接涵蓋，必需透過User 1 轉送網路封包，而在網路層方面，則利用IPv6 之
自動定址模式所產生的link-local 位址進行定址。 
 
8 
在本次實驗中，我們比較隨意網路及基礎建設架構此兩種不同架構之註冊時間，其比
較之網路拓蹼如圖九所示，在隨意網路方面，採用系統環境該節之Linux 命令形成隨意網
路，而在傳統網路架構方面，VoIP 節點採用無線的方式，透過Access Point(AP)，經由有
線連結至SIP server。 
經過此次之實驗，其結果如圖十所示，橫軸代表次數，總共實驗一百次，每次之實驗
皆為送出註冊訊息後，直到接收到逺端UA回應200 OK 之延遲時間，而縱軸所代表的則是時
間，單位為秒。在本次的時驗中可以發現，因為傳統SIP 架構需要透過AP 連結到SIP伺服
器，在註冊延遲時間平均為0.0016 秒，雖然在延遲時間上與隨意網路相距不大，但還是需
要花費較多的延遲時間，反觀隨意網路架構，平均的延遲時間為0.0012 秒，因為此架構為
點對點之傳輸模式，使得在信令延遲部份能夠比傳統的SIP 架構還要來的低。 
     
圖十、註冊(REGISTER)延遲時間比較圖      圖十一、跳躍點之信令延遲時間分析圖 
 
緊接著我們分析邀請(INVITE)之信令延遲時間，其信令之延遲計算包括INVITE、
TRYING、RINGING、200 OK 及ACK，意即從使用者欲邀請其它使用者，從呼叫端按下通話鍵
後到被呼叫端接起之整體的通話啟始時間，而量測之環境如圖六所示，在從傳送端開始，
經過一個跳躍點後到達接收端的邀請信令延遲時間。其分析結果如圖十一所示，橫軸為量
測之次數，共計一百次，縱軸為量測的時間，單位為秒，我們可以發現，雖然經過了兩個
跳躍點，但是整體的邀請時間介於0.016 至0.04 之間，且平均為0.022 秒，仍屬於品質優
良之範圍。 
在本計劃中，除了實現隨意網路語音系統外，並針對其可行性做完整之評估，除了標
準的SIP 信令交換的延遲，我們亦衡量語音的品質，證明在隨意網路能夠在一定的品質保
證下，實現網路語音。 
    
圖十二、點對點語音延遲分析圖       圖十三、跨越跳躍點之語音延遲分析圖 
圖十二為點對點的RTP 封包延遲時間，橫軸為量測的次數，共計一千次，而縱軸為量
10 
Taiwan, Oct. 22-25, 2007 
5. C.H. Sung, S.Z. Lee, L.H. Chung, “Implementation of the Push-to-Talk over Ad-hoc 
Network”, Proceedings of WASN 2007 Conference, pp. 219-227, Tamkang Univ, Tamshui, 
Taiwan, Sept. 6-7, 2007 
6. H.H. Tsai, C.H. Sung, S.Y. Chiu and L.H Chung, “Implementation of Pseudo SIP Server over 
Ad-Hoc VoIP System”, Proceedings of 2007 International Conference on Advanced 
Information Technologies (AIT), Chaoyang Univ. ,Tai-Chuang, Taiwan, April. 28, 2007. 
7. H.H. Tsai, C.H. Sung, S.Y. Chiu and L.H Chung, “Implementation of IPv6 Pseudo SIP Server 
over Ad-Hoc VoIP System.” Proceedings of WASN 2007 Conference, pp. 229-234, Tamkang 
Univ, Tamshui, Taiwan, Sept. 6-7, 2007 
參考文獻 
[1] F. Anderson, B. Foster, "Media Gateway Control Protocol (MGCP)", IETF Request for Comments 3435, Jan. 
2003. 
[2] M. Beveridge, P. Koopman, "Jini meets embedded control networking: a case study in portability failure", 
Proceedings of the Seventh International Workshop on Object-Oriented Real-Time Dependable Systems, p.p. 
11 – 18, 7-9 Jan. 2002 
[3] M. Day, J. Rosenberg, H. Sugano, "A Model for Presence and Instant Messaging", IETF Request for Comments 
2778, Feb. 2000 
[4] M. Day, S. Aggarwal, G. Mohr, J. Vincent, " Instant Messaging / Presence Protocol Requirements ", IETF 
Request for Comments 2779, Feb. 2000 
[5] C. Groves, M. Pantaleo, T. Anderson, T. Taylor, "Gateway Control Protocol Version 1", IETF Request for 
Comments 3525, Jun. 2003. 
[6] H. Khlifi, A. Agarwal, J-C. Grégoire, ”A Framework to Use SIP in Ad-Hoc Networks”, Proceedings of IEEE 
2003 Canadian Conference on Electrical and Computer Engineering, pp. 985-988, May 4-7, 2003. 
[7] S. Leggio, J. Manner, A. Hulkkonen, K. Raatikainen, "Session Initiation Protocol Deployment in Ad-Hoc 
Networks: A Decentralized Approach", Proceedings of the International Workshop on Wireless Ad-Hoc Networks 
(IWW AN2005), May 23 - 26, 2005, London, UK. 
[8] I. Miladinovic, J. Stadler, "SIP Extension for Multiparty Conferencing", IETF draft 
draft-miladinovic-sip-multi-party-ext-01.txt, Sep. 2002. 
[9] N. Ravi, P. Stern, N. Desai, L. Iftode, "Accessing Ubiquitous Services Using Smart Phones", Third IEEE 
International Conference on Pervasive Computing and Communications, 8-12 March 2005, pp. 383 – 393 
[10] J. Resenberg, et al., “SIP:Session Initiation Protocol”, IETF Request for Comments 3261, June 2004 
[11] J. Rosenberg, " A Presence Event Package for The Session Initiation Protocol (SIP) ", IETF Request for 
Comments 3856, Aug. 2004 
[12] ITU-T Recommendation G.711, “Pulse Code Modulation (PCM) of Voice Frequencies,” November 1988. 
[13] OLSR Multicast Forwarding Plugin, http://sourceforge.net/projects/olsr-bmf/ 
[14] olsr.org, http://www.olsr.org 
[15] Linphone, http://www.linphone.org/ 
[16] Skype, http://www.skype.com 
[17] Ubuntu Linux, http://www.ubuntu.org.tw 
[18] WIRLAB Network Research Lab, “KPhone”, http://www.wirlab.org/kphone 
[19] ITU-T Rec. H.323.v2, "Packet based multimedia communications system", Mar. 1997 
 
 
 
 
 
 
 
