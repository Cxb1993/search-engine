行政院國家科學委員會專題研究計畫成果報告 
應用多代理人服務於軟體度量系統之設計 
Development of a Software Measurement System with 
Multi-Agent Services 
計畫編號：NSC 95-2221-E-142-005- 
執行期限：95 年 8 月 1 日至 95 年 10 月 31 日 
主 持 人：范姜永益 輔仁大學資訊工程學系 
參與人員：莊智凱、陳炳洋、黃柏榕、吳崇豪 
一、摘要 
軟體發展就如同其他工程領域一樣，需要一個度量的機制提供軟體發
展過程中各種活動與產出的回饋與評估。然而，如何有效地協助軟體發展
人員實現軟體度量的程序與討論分析之結果是目前實務上最為關心的問
題。而在所有以目標為導向的軟體度量方法中，GQM是最廣為人所熟知，
也是目前業界應用最為廣泛的方法之一。GQM經由定義明確的度量目標開
始，透過問題的引導，不斷地細化度量目標，以協助度量人員根據度量目
標產生相對應的度量指標。此外，由於網路的迅速發展，訊息的存取與應
用有了革命性的改變－由原來的區域性、封閉性、與同質性擴展為全球
性、開放性、與異質性。為了有效的運用這些複雜的資訊，軟體代理人的
觀念漸漸的受到重視。由於代理人技術具備許多特性是傳統軟體所缺乏
的，其中又以自主性以及目標性更可以表現代理人技術有別於傳統軟體的
特點。因此，本研究計畫結合多代理人架構，將度量流程所牽涉之相關功
能，利用代理人服務的方式，設計一個以多代理人服務導向架構為基礎的
軟體度量系統，此系統由使用者輸入度量目標開始，協助問題的導入以及
度量指標的產生，以幫助軟體度量人員將GQM的方法導入軟體開發專案之
中。 
 
關鍵詞：軟體度量、GQM、目標導向軟體度量分析、代理人、網路服務。 
 
 
二、緣由與目的 
Victor R. Basili教授指出[3]，軟體發展就如同其他工程領域一樣，需要
一個度量的機制提供軟體發展過程中各種活動與產出的回饋 (feedback) 
與評估 (evaluation)。透過度量的機制，可以幫助發展者了解、控制、預測、
以及改善相關的流程、產出與資源。針對如何度量軟體發產過程中的產
出，許多研究人員提出許多的度量指標，協助度量軟體發展過程中的不同
同時，根據系統規格書中所定義之代理人服務以及互動關係，將代理人進
行細部分類，並且制定一個代理人服務與網際服務的對應關係圖，此對應
關係圖可以將代理人服務對應至以網際服務為基礎的服務導向架構之
中。我們採用Gaia的方法來進行多代理人系統的設計。Gaia將一個多代理
人系統分為角色模型(role model)以及互動模型(interaction model)，角色模
型描述系統具備哪些角色，而互動模型展現這些角色之間的互動關係，以
完成系統的功能。因此，根據GQM所定義的方法與步驟(原始GQM可大致
區分為三個步驟，GQ(I)M則將之擴充為10個步驟)，我們制定五個GQM的
步驟，分別由五種角色扮演，並且透過分析這五種角色之間的互動關係，
以詳細定義他們所具備的服務功能。 
 
以下我們所開發之多代理人服務導向架構的概念圖。 
 
圖1 多代理人之服務導向架構 
 
服務導向技術主要是以網際服務為底層，透過web-based的網路環境，
結合服務提供者(service provider)、服務需求者(service requester)以及服務
配對者(service matchmaker)三種角色，提供一個整合性的軟體資源整合機
制。根據服務導向技術的定義，我們初步將代理人服務分為兩大類，第一
類為使用者介面代理人(user interface agents)，此類代理人對應到服務導向
架構之服務提供者，做為系統與使用者之間的資料傳輸介面服務，負責介
 
 
圖 2:使用者介面代理人之內部架構 圖 3:服務代理人之內部架構 
 
 
本年度我們也根據上述的架構，實作一個測試平台，以作為下階段整合代
理人技術與網際服務架構的實驗平台。該平台是以Java SE 5.0為實作語
言，以Tomcat 5.0 for Java WSDP 1.4為網頁伺服器，AppServ with MySQL 5
為資料庫管理系統，以Eclipse 3.0.1為Java開發環境。系統環境如下所述。
我們配置一台Web Server與Client端溝通，一台DB Server負責資料庫處理。
我們使用Web Services以及Agent做為後端主要的架構。 
 
 
 
 
五、參考資料 
[1] V.R. Basili, C. Caldiera, and H.D. Rombach. Experience factory. in J.J. 
Marciniak (ed.), Encyclopedia of Software Engineering, Vol. 1, John Wiley & 
Sons, 1994. 
[2] V.R. Basili, C. Caldiera, and H.D. Rombach. Goal/Question/Metric paradigm. 
J.J. Marciniak, ed., Vol. 1, John Wiley, 1994.  
[3] V.R. Basili, R.W. Selby, and D.H. Huthchens. Experimentation in software 
engineering. IEEE Transactions on Software Engineering, (7):733--743, July, 
1986. 
[4] A. Dardenne, A. van Lamsweerde, and S. Fickas. Goal-directed requirements 
acquisition. Science of Computer Programming, pages 3--50, 1993. 
[5] J. Mylopoulos, L. Chung, and B. Nixon. Representing and using 
nonfunctional requirements: A process-oriented approach. IEEE Transactions 
on Software Engineering, (6):483--497, 1992. 
[6] J. Lee and N.L Xue. July/August 1999. Analyzing user requirements by use 
cases: A goal-driven approach. IEEE Software, 16 (4):92-101. 
[7] Latum, Solingen, Oivo, Rombach, Hoisl, and Ruhe. Adopting GQM-based 
measurement in an industrial environment. IEEE Software, Jan/Feb 1998. 
[8] R. van Solingen and E.W. Berghout. The Goal/Question/Metric method: a 
practical guide for quality improvement of software development. 
McGraw-Hill Publishers, 1999. 
 
表 Y04 
二、與會心得 
 
本次會議，除了發表論文以外，大會邀請的 Keynote Speech 的確提供了很多未來
科技研究與發展之展望。本人亦參加了其中多場分組論文發表，從中學習不少新的技術
與知識。並與來自世界各國之學者互相交流彼此研究之成果與心得。此乃參與國際學術
與技術發展研討會之主要收穫之一。在主題演講方面，使得本人得以獲得相當明確且目
新穎的技術主題或發展方向；在論文發表方面，參與之研究學者或工業界研發工程師之
研究成果，對於本人未來之研究以及指導研究生提供了更多想法與啟發。 
 
 
三、考察參觀活動與建議 
 
此次會議在日本九州熊本市舉行，本人利用會後時間，參觀熊本大學，對於其校園
之傳統歷史留下深刻印象。本次會議上，本人與一些研究學者、工業界研發人員以及部
分舊識交換了一些居家照應以及昌用軟體系統的創新應用資訊，將對於本人未來在研
究、教學及指導學生從事研究有相當大的幫助。因此，在此特別感謝國科會之補助出席
此次會議，也希望未來本人的持續研究能夠對學術界及國內產業界有所貢獻。並且希望
未來依舊有機會獲得此項補助。 
 
四、攜回資料名稱及內容 
 
本次國際創新計算資訊與控制會議共攜回資料如下： 
1. 研討會論文集光碟--Proceedings of The Second International Conference on
Innovative Computing, Information and Control (ICICIC 2007) CD 。 
2. 研討會紙本手冊(內含研討會簡介以及議程表) 
3. 主題演講投影片--Slides of keynote speech。  
 
五、其他 
無。 
 
In this study, the ITCBean we have defined is 
structured on JavaBean software component 
specification, which including property, method and 
event. Visualized editing ITCBean is achieved through 
method, and the current state is saved in property, while 
event prescribes interactive effect on test item template.  
Editing system will instantly connect the three 
corresponding specification and demonstrate the 
visualized effect according to the internal definition 
prescribed by the component. This study has developed 
thirteen test item templates, such as Link, Match, 
Classification, Relation, Solitaire, Jigsaw, etc... 
Following is the interface specification module of 
ITCBean component:  
 
(1). Method for actor initial: This helps ITCBean 
developer to add multimedia elements into 
ITCBean more easily. 
(2). Method for mouse control: This is a way to 
preserve mouse control. Developer can override 
these methods for defining new moue control 
functions. 
(3). Method for item input/output:  This implements 
the input and output methods of the item.  These 
methods flatten the properties of ITCBean and its 
internal multimedia actors into a file and unflatten 
back to ITCBean objects. 
(4). Method for test log: This composed of two 
methods: auto-grading() and 
actionRecord().Auto-grading() consists of two 
pre-defined functions.  Developer needs only 
override it if other demands occur. 
(5). Method for setting property:  We have two types 
of   methods. Internal method, getProperty()  and 
setProperty(), is to fulfill the purpose of 
parameterized. It applies to the internal 
parameterized process of test item template.  
Another type of method is for visualized property 
table. It can transfer the internal setup into 
property table so the process of parameterized 
items can be more convenient. This applies to 
detailed visualized set up when editing items. 
(6). Method for test management: This is for the test 
management.  TestTime() is the limitation of the 
answering time; itemShowTime() designates the 
times allowed for the testee to watch the item.  
(7). Method for interaction: Including all interactive 
methods, such as Drag and Drop, Collide, 
Overlap. The future developer can add new 
interactive methods into ITCBean. 
 
In ITCBean, several multimedia component actors form 
an item. The relationship between ITCBean and Actor 
is similar to that of component and container. The 
Actor interface specification module can be divided to 
(1) Field for actor property; (2) Method for actor 
control; (3) Method for actor mouse control; and (4) 
Method for interaction.  Through these interfaces, 
communication can be engaged between multimedia 
Actors and ITCBean, which leads to the connection 
between ITCBean and ITIS. [Figure 2] is the structure 
of Actor. 
 
 Actor
ImageActor
image
<Interface>
Audio
audioName
audioPath
recordAudio()
playAudio()
stopAudio()
StringActor
font
AudioActor
Audio
recordAudio()
playAudio()
stopAudio()
Image
Audio
Actor
String
Audio
Actor
Record Audio
Start()
Stop()
Play()
 
Figure 2 Actor system structure 
 
3. ITIS 
3.1 ITIS system flow 
The ITIS system flow is operated as follows 
[Figure 3]: 
(1). Test item template component is added into test 
item template database.  
(2). Test item template is dynamic loading through 
test item editor. Test item templates are 
parameterized through visualized editing and 
become a test item. We can use these 
parameterized items or add in the parameterized 
items into test sheet. 
(3). Save the parameterized test items into test sheet 
script file. 
(4). During the test, item-tester will start the test sheet 
script file to present the content and engage the 
testing.  
(5). The test result will be saved into answer sheet 
script file and be transmitted to auto-grader. 
(6). Auto-grader will proceed the grading task when 
an answer sheet script file is received and will 
record the test result into the database。 
 
Figure 3  System flow of ITIS system 
 
3.2. System structure 
The system structure [Figure 4] is composed of 
three parts, test sheet editor, item-tester and test result 
database. Following is the introduction of the function 
of and relationship between each module. 
 
5. Related Work 
Wand Y. [6] indicated the major difference of 
computerized test from paper & text is in its fullness of 
multimedia elements, for example, image, animation, 
audio and video. To be more effectively adding 
multimedia elements into items, the research 
incorporated object-oriented device to manage item and 
multimedia database. However, there’s an insufficiency 
of interactive function among the items. 
In the study of Huang S.M., Computer-Assisted 
Item Generation [7], test item system is developed. A 
cloze multiple choice is combined by using keywords to 
search words with similar pronunciation in the database. 
This helps accelerating the formulating item process but 
the lack of interaction among items and the monotype 
test item template still waits to be solved. 
Fabio Tambutini [8] uses XML template to 
develop test item template. Tester can transfer template 
into interactive items through simple settings. However, 
the item template cannot be dynamically increased. 
Also, test item template fails to provide software 
interface specification template for developer to adapt.  
This study has defined ITCBean template 
specification as a base template for future developer to 
inherit and further, to create new test item template.  
The study also strengthened interactive answering 
method, for which the former studies have yet 
elaborated. Following is the comparison of related 
works [Table 1]:  
 
Table 1  comparison of related works 
 
 
6. Conclusion and Future Work 
This study has defined the interface specification 
and the item script file specification of ITCBean. We 
have developed item editing system of ITIS to edit 
ITCBean. The dynamic loading technology of ITIS has 
made dynamic adding ITCBean into item template 
component database possible. A multimedia test sheet 
is combined by editing ITCBean. Finally, the function 
of testing is completed through the link of internet. 
Component-based test item editing system not 
only sustains the merits of conventional item bank 
system but also adds multimedia features and 
interactive answering method into test item. In addition 
to upgrading testing level, it helps elevating specific 
learning areas to their full. The benefits of reusability 
along with component-based test item template, and the 
assets of mutual developing and sharing correspond to 
the intention of test item system. Further, the newly 
added auto grading and test result filing function 
immensely save the time for grading and can be 
significant source for future test result sharing and 
analysis.     
It is expected that in addition to more interactive 
answering methods and functions can be extended, 
procedure control component can also be cultivated to 
promote the testing system. Further, functions like 
adaptive testing, cheat-proof, and test result analysis are 
goals to be adopted to fortify testing and analysis. 
 
7. Reference 
[1] Roever Carsten “Web-Based Language Testing. 
Language Learning & Technology,” ISSN 1094-
3501, 2001, pp. 84-94. 
[2] I. B. Isaac, R. L. René, E. M. Mary, E. W. 
Michael, E. B. Randy, and Revuelta Javier., “A 
Feasibility Study of On-the-Fly Item Generation 
in Adaptive Testing, The Journal of Technology,” 
Learning, and Assessment, vol.2, num.3. 2003. 
[3] M. Tom, A. Nicola, W. Walter, B. Peter, 
“Computer Based Testing of Medical Knowledge 
Using Short-Answer free-Text Items,” 8th 
International Computer Assisted Assessment 
(CAA) Conference, 2003. 
[4] Patelis Thanos, “An Overview of Computer-
Based Testing, Research Notes,” Office of 
Research and Development, 2000. 
[5] Sun Microsystem. Java Beans 1.01 Specification, 
1997 ,http://java.sun.com/beans. 
[6] Y. Wand, T. Dong, L. Xu, R. Lu, “An Object-
Oriented Design of a Multimedia Item Pool,” 31st 
International Conference on Technology of 
Object-Oriented Language and Systems, 1999, pp. 
471. 
[7] S.M. Huang, C.L. Liu, Z.M. Gao, “Computer-
Assisted Item Generation for Listening Cloze 
Tests in English,” Proceedings of the Fifth IEEE 
International Conference on Advanced Learning 
Technologies, 2005. 
[8] Tambutini Fabio, Paci Stefania, “Web-based 
Language Learning: Authoring and Assessment 
Technologies,” International Conference on 
Information and Communication Technologies in 
Education - ICTE2002., 2002, pp. 872-877. 
