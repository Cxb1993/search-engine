 I
目錄 
英文摘要 Abstract ........................................................................................................1 
中文摘要........................................................................................................................1 
關鍵詞............................................................................................................................1 
1. 前言與研究目的.......................................................................................................1 
2. 背景研究...................................................................................................................2 
3. 研究方法...................................................................................................................2 
4. 案例分析與討論.......................................................................................................5 
4.1 HPCF 案例分析.......................................................................................................5 
4.2 案例討論和建議.....................................................................................................8 
5. 結論...........................................................................................................................8 
6. 參考文獻.................................................................................................................10 
 
圖目錄 
圖 一：動作錯誤的子故障樹......................................................................................4 
圖 二：整合式故障樹樣版..........................................................................................5 
圖 三：HPCF 示意圖 ..................................................................................................5 
圖 四：HPCF 之套件圖 ..............................................................................................6 
圖 五：HPCF 之增添式狀態轉換圖 ..........................................................................6 
圖 六：HPCF 軟體程式片段 ......................................................................................6 
圖 七：HPCF 之故障樹 ..............................................................................................9 
圖 八：幫浦和幫浦之顯示錯誤劇情........................................................................10 
 
表目錄 
表 一：動作相關的引導詞..........................................................................................4 
 
 
 
 
 
 2
緊急處置的反應時機。 
這種「部分故障」與「遮罩效應」是已往類比控制系統不常出現的故障模式，
就數位系統的使用經驗來看，卻是造成多起重大事故的主要原因。在部分故障
中，「誤導顯示」 (false indication)為主要故障模式，其意義為硬體狀態(device 
status)和其顯示狀態(display status)不一致。本研究將針對此故障模式提出一套模
型為基礎的整合式的安全分析方法。 
現行系統安全分析多數視軟體為黑箱(black box)[2]。本研究整合軟體、硬
體、和操作員這三部分的安全分析，以「誤導顯示」為重點產生故障樹，並應用
於實際案例上。 
 
2. 背景研究 
UML(Unified Modeling Language) 統一塑模語言是由 OMG (Object 
Management Group)所公布的物件導向塑模語言[13]，它是一種定義良好、圖形視
覺化、功能強大且普遍適用於軟體發展。目前的版本包含了 13 種圖形，在本研
究方法中，我們應用了其中的套件圖(package diagram)、類別圖(class diagram)、
狀態轉換圖(state transition diagram)和循序圖(sequence diagram)。 
 HAZOP (Hazard and Operability)[1,4]害與可操作分析是一套發展在化學工業
上的安全分析方法，它製訂了一些引導詞(guide word)，例如沒有(None)、部分(part 
of)、過多(more)、過少(less)等來觀察設定的參數發生這些偏離狀態，可能會引起
的影響，其中這些引導詞可以根據分析者不同的需要而自行制定。在本研究中，
我們利用引導詞和 UML 推導出可能的軟體錯誤。 
故障樹[3,15]在安全分析上是廣泛應用的技術。故障樹分析是一種利用倒推
的方式(backward)，進行靜態的原因分析方法。故障樹根據一不想發生的事件(top 
event)，利用 AND 閘和 OR 閘來推導其所有可能發生的原因。硬體故障樹推導至
元件失效的基礎事件(basic event)為止。 
軟體故障樹分析則是由 Leveson 發展用於程式指令層次的方法[5,6,8]。依據
各程式語言控制的指令結構，提出軟體故障樹的模版。Leveson 的軟體故障樹並
未與系統安全分析緊密結合。 
至於以 UML 轉換成故障樹，現行有少數相關研究。Wallace[11,12]等人則提
出設計層次的軟體故障樹(SFTA)可直接由 UML 活動圖(activity)產生。主要考慮
未達成預期(正確)動作的可能原因。此方法以正常功能的 UML 狀態圖(及循序圖
[12])為起點，轉換成故障樹。然而此方法即僅考慮正常功能未達成(該做未做)的
原因，未考慮其它不安全的狀態及行為(例如不該做而做、或做了其他)。再者此
方法沒有實際應用案例，未見後續研究。 
 
3. 研究方法 
在歷史案例中，除了硬體的故障，軟體的錯誤亦會導致重大意外的發生。例
 4
等，而錯誤的類型則為沒有動作、非預期的動作、動作執行順序錯誤、動作未執
行完全、太早執行動作、太晚執行動作和執行額外的動作等。這些錯誤模式在故
障樹的第六層中表達。除此之外，因為軟體控制主要的為發送命令(command)，
所以相關錯誤亦必須包含資料的錯誤(data error)。皆以 HAZOP 的引導詞找出相
關的錯誤類型，如圖一所示。而觸發事件和條件亦以相同方式進行分析。 
此外，本研究亦考慮程式碼的錯誤。程式碼的錯誤可能包含回傳值錯誤、邏
輯錯誤、演算法錯誤、計算錯誤、溢位、讀取錯誤檔案等。我們所提出的整合式
故障樹樣版如圖二所示。 
步驟三：由故障樹產生意外情境 
 由於故障樹只表達不想發生的事件的靜態錯誤原因，不能顯示時序上的意外
情境。而循序圖可用來表達系統間的互動關係，因此可以藉由故障樹的錯誤原因
來產生意外情境。而這些意外情境可用來訓練操作員執行正確的動作或是用於模
擬系統發生錯誤時，可容許操作員的最長危機處理時間。 
 
表 一：動作相關的引導詞 
引導詞 意義 
沒有 None 
其他 Other than 
反轉 Reverse 
部分 Part of 
過早 Early 
過晚 Latter 
附加 As well as 
沒有動作 No action  
非預期的動作 Unexpected action 
動作執行順序錯誤 Performed actions order error 
動作未執行完全 Incomplete action performed 
太早執行動作 Early to perform action 
太晚執行動作 Late to perform the action 
執行額外的動作 Additional action performed 
 
圖 一：動作錯誤的子故障樹 
 6
步驟一：以 UML 建構系統 
 首先，我們以 UML 來塑模 HPCF 系統，圖四表示 HPCF 各子系統間的套件
圖，此套件圖表達各系統間的關係和其中包含的類別。圖五表示 HPCF 之增添式
狀態轉換圖，在正常模式中，當水位低於 L1.5 時，HPCF 會傳送開啟幫浦和注
水閥的指令，並傳送顯示相關的狀態至顯示器。當 HPCF 發生故障時，則狀態將
轉移到異常模式內。此外，HPCF 的程式碼亦必須提供，如圖六所示。 
 
 
圖 四：HPCF 之套件圖         
 
圖 五：HPCF 之增添式狀態轉換圖 
 
圖 六：HPCF 軟體程式片段 
 8
4.2 案例討論和建議 
   上面應用案例顯示本方法的確可推導出軟體相關及「誤導顯示」所導致的少
見、但具可怕後果的劇情。誤導顯示通常需要多個錯誤同時發生才會引起意外，
但此處的後果可能非常嚴重。 
在 HPCF 的分析案例中，我們根據不同的錯誤類型提出對應的限制
(constraint)，內容如下： 
1. 在執行中檢查變數。例如變數的型態，範圍等，可以確保資料維持在正常的
範圍內。 
2. 檢查操作規則。例如： 
a. if (WL <L1.5) then (pump=on and valve=open) 
b. if (WL>L8) then (pump=off  and valve=close) 
3. 檢查回饋訊息。例如當 HPCF 發送開啟閥門的指令後，必須等閥門執行後的
訊息。 
4. 檢查實際狀態和顯示狀態的一致性。例如： 
a. if (Pump.state != DisplayPump.state) then warning() 
b. if (Valve.state != DisplayValve.state) then warning() 
c. if (WL.state != DisplayWL.state) then warning() 
5. 檢查物理現象：例如當幫浦和注水閥的狀態是開啟時，則水位必須越來越高。 
a. if ((DisplayPump.state=on) and (DisplayValve.state=open) and 
(newWL-oldWL)<0) ) then warning()      
b. if ((Pump.state=on) and (Valve.state=open) and (newWL-oldWL)<0)) 
then warning() 
6. 檢查最小更新時間。顯示器的狀態必須不斷更新，以確保顯示最新的狀態。
例如 if (DisplayUpdateTime > t sec) then warning(). 
 
 
5. 結論 
 在現行的儀控控制系統中，軟體扮演著重要的角色。以往的安全分析將軟體
故障視為黑箱，並不探討軟體程式的故障細節。然而軟體故障將帶來不同於以往
的故障模式；因此本研究探討軟體安全分析，針對「誤導顯示」為主，發展一套
有系統的整合式故障樹安全分析技術。我們提出一視覺化的分析技術，此技術涵
蓋硬體、軟體和人員等三個部分，並以核電廠之高壓爐心灌水系統作為應用案
例，評估方法的可用性。應用案例顯示本方法的確可推導出軟體相關及「誤導顯
示」所導致的少見、但具可怕後果的劇情。而針對這些軟體可能發生的錯誤我們
亦提供了不同的限制(constraint)，可即時偵測錯誤的發生。此技術可以應用於系
統發展中，讓分析者辨識系統的弱點、進一步改善系統設計、加強人機的互動關
係，以提高系統的安全性。 
 
 10
 
圖 八：幫浦和幫浦之顯示錯誤劇情 
 
6. 參考文獻 
[1] D. A. Crowl, J. F Louvar, Chemical process safety. Upper Saddle River, NJ: Prentice Hall PTR; 
2001. 
[2] P.C. Elisabeth, D. Robin, “Probabilistic risk analysis for the NASA space shuttle: a brief history and 
current work”, Reliability Engineering and System Safety, No.74, pp345-352, 2001. 
[3] Fault Tree Analysis (FTA). International Technical Commission IEC Std  Publication 1025, 
(1990). 
[4] T. Kletz,: Hazop and hazan.. Taylor and Francis, Philadelphia (PA) 1999. 
[5] N. Leveson, Safeware: System Safety and Computers, Addison-Wesley Publishing  company, 
1995. 
[6] N Leveson, “Safety verification of Ada Programs using Software fault trees,” IEEE Software, Vol. 8, 
1991, pp.48-59. 
[7] N. Leveson, “The Therac-25 Accidents,” http://sunnyday.mit.edu/papers/therac.pdf. 
[8] N. Leveson, and P. R. Harvey, “Analyzing Software Safety”, IEEE Transactions on Software 
Engineering, Vol. SE-9, No. 5, September 1983, pp.569-579. 
[9] H. Sogame and P. Ladkin, “Aircraft accident investigation report 96-5: China airlines, Airbus 
Industrie A300B4-622R, B1816, Nagoya Airport, April 26, 1994,” 
http://sunnyday.mit.edu/accidents/nag-contents.html. 
[10] J.L. Lions., “ Ariane 501 Failure: Report by the Inquiry Board,” European Space Agency, 19 July, 
1996. 
[11] M. Towhidnejad, D. R. Wallace, Albert Gallo, “Fault Tree Analysis for Software Design,” Prod. Of 
the 27th annual NASA Goddard/IEEE Software Engineering workshop, 2003. 
[12] M. Towhidnejad, D. R. Wallace, Albert Gallo, “Validation of Object Oriented Software Design 
with Fault Tree Analysis,” Prod. Of the 27th annual NASA Goddard/IEEE Software Engineering 
workshop, 2003. 
[13] UML: Unified Modeling Language 2.2, http://www.omg.org/spec/UML/2.2/, 2009 
[14] U.S.-Canada Power System Outage Task Force, “Final report on the August 14, 2003 blackout in 
the United States and Canada: causes and recommendations,” April 2004. 
[15] W.E. Vesely, Goldberg, F.F., Roberts, N.H., Haasl, D.F.: Fault-Tree Handbook, Reg. 0492. US 
Nuclear Regulatory Comm., Washington, D. C. (1981) 
 12
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
 
以往的安全分析將軟體故障視為黑箱，並不分析軟體程式的故障細節。本研
究探討軟體安全分析，針對「誤導顯示」發展一套有系統的整合式故障樹安
全分析技術，涵蓋硬體、軟體和人員等三個部分；並以核電廠之高壓爐心灌
水系統作為應用案例，評估方法的可用性。應用案例顯示本方法的確可推導
出軟體相關及「誤導顯示」所導致的少見、但具可怕後果的劇情。 
 
本方法可進一步應用於實際案例上。 
 
 
 
 
 
 
 
無研發成果推廣資料 
期刊論文 1 2 100% 
一篇已被接受: 
Chin-Feng Fan, 
Shang-Lin Tsai, and 
Wan-Hui 
Tseng, ＇Development 
of safety analysis 
and constraint 
detection techniques 
for process 
interaction 
errors,＇ accepted 
for publication in 
Annals of Nuclear 
Energy, September, 
2010. 
 
一篇已投稿: 
Wan-Hui Tseng and 
Chin-Feng Fan, ＇＇
Integrated Safety 
Analysis Handling 
False Indication 
Failure ＇ ＇ , 
submitted to the 
Reliability 
Engineering &amp ；
System Safety, 
August, 2010. 
 
 
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
