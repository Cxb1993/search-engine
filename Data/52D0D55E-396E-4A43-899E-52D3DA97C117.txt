 1 
行政院國家科學委員會補助專題研究計畫 
■成果報告 
□期中進度報告 
 
雲端資安監控平台之研發 
計畫類別：□個別型計畫 ■整合型計畫 
計畫編號： 
執行期間：100 年 10 月 1 日至 101 年 10 月 31 日 
 
計畫主持人：李宗南 
共同主持人：陳嘉玫、楊中皇 
計畫參與人員：陳俊達、張福生、周庭暉、蔡明純 
成果報告類型(依經費核定清單規定繳交)：□精簡報告■完整報告 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、列 
   管計畫及下列情形者外，得立即公開查詢 
   □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
 
執行單位：國立中山大學資訊工程系 
中 華 民 國  102  年  1  月  10 日 
 3 
常流量差異之處，並取出其特徵值。(3)因為對巨量資料去做特徵萃取非常耗時，因此
我們引入雲端運算的力量以提升整體效能。(4)在特徵值分析上，須採用更有效率的特
徵做分析，以減少高維度或複雜的數學運算。(5) 希望透過一個需求量的預測方法來事
先預測系統所能負荷之需求量，以助於系統能在離峰或尖峰時刻時藉由工作遷移(Job 
migration)的方式來集中或分散處理，以達到省電之目的或提高計算效率。 
 
2、研發動機 
2.1 殭屍網路偵測 
目前是由Mcloud上的幾台虛擬機器去建置殭屍網路拓樸，我們建置了8台Bot主機，
每台Bot主機植入的病毒為Rbot，並讓Bot主機連線到裝有IRC server 軟體的虛擬機器
上，如圖一，其Domain Name為pbot，該IRC的連接埠為6667。本研究以Botmaster角色
登入與操控Bot，並於IRC server上以Wireshark來收集封包日誌檔，因為每台Bot主機都
是植入同一種程式，因此其登入帳號、密碼與功能都完全相同，Botmaster只要下達命
令，就能控制該頻道上的所有Bot主機，圖二為一個IRC-Based Botnet範例。 
 
圖一、Botmaster控制IRC server的架構示意圖 
 5 
性監視封包流量，當群體行為超過某項門檻時，我們就可以判定有Botnet流量存在的嫌
疑。 
 
          圖三、群體訊息反應                   圖四、群體行為反應 
          (e.g., IRC PRIVMSG)                    (e.g., sending spam)  
 
 
圖五、群體訊息反應(x軸:秒，y軸:封包數) 
 
圖六、群體行為反應(x軸:秒，y軸:封包數) 
 
 7 
3、研發方法 
圖九是我們的系統架構圖。主要分為兩部分，監控引擎與分析引擎。監控引擎主
要在檢查封包流量並且把日誌檔轉換成特徵向量。分析引擎則負責分析從監控引擎那所
得到的特徵向量。 
 
圖九、系統架構圖 
3.1 Monitoring Engine 
3.1.1 Preprocessing 
當網路流量進入監控引擎時，會先做前置處理，主要是過慮掉一些不相關的網路
流量以減少要分析的資料量，我們使用white list去做過濾。white list又可分為soft與
hard，hard white list是固定的，主要是希望濾掉與正常Server相關的流量，例如Google
和Yahoo；soft white list則較為動態，經由分析引擎判定為正常的IP位址會動態更新這份
白名單。 
3.1.2 Feature Extraction 
將已過濾完剩下的待測封包流量送入雲端系統的多台虛擬機器進行封包流量檢
測。檢測方法我們採用模糊辨識偵測，原因是傳統方法需要高維度的向量處理與複雜的
數學運算來達到高準確度，例如machine learning[15]，卻忽略了偵測的效率性，模糊辨
識只需要簡單的數學計算就可以在兼顧效率的情況下達到相當的偵測度。 
以圖十為例，我們取150秒到200秒的區間，分別統計前半與後半的總封包大小並
計算其前後的差值，接著將差值帶入三種成員函數，如圖十二，並以最大值代表這段區
 9 
3.1.3 Pattern Recognition 
有鑒於每台Bot所在的網路狀況不一定完全相同，當Botmaster下達命令時，某些Bot
可能會因收到的時間不同而影響反應的時間，最常見的方法是延長time window以捕捉
這些延遲的行為，但這方法會大大影響整體偵測的效率。因此我們在分析引擎內加入學
習機制，經判定為殭屍網路的特徵值會經由學習機制回饋給監控引擎的pattern list。 
3.1.4 MapReduce - Based Feature Extraction 
MapReduce是雲端運算的關鍵技術，最早是由Google所提出，後來也運用在開源
的雲端技術Hadoop中。開發人員須要先分析問題的解決流程，找出可利用平行運算來
處理資料的部分，再針對可採用平行處理的部分寫成Map程式。接著就可以使用大量機
器去同步執行Map程式，在將Map出來的結果，透過Reduce程式進行合併，最後彙整出
完整結果。Combiner則可以根據問題需求加在Map與Reduce之間，主要功能與Reduce相
同，目的是最佳化中繼鍵值序對，以節省頻寬。 
Map階段，會從封包日誌檔中擷取來源IP位址、目標IP位址、時間與封包大小，並
且輸出中繼鍵值序對，鍵值由來源IP位址、目標IP位址與時間所組成，值為封包大小。 
Combiner階段，會將Map階段所得到的相同鍵值序對合併其所有相關連的中繼值
(封包大小)，並且輸出新的中繼鍵值序對，鍵值由來源IP位址、目標IP位址所組成，值
則由時間與封包大小所組成。 
Reduce階段，會將Combine階段所得到的相同鍵值序對合併其所有相關連的中繼值
產生第一階段的特徵向量，如下 
 
接著就用先前提到的特徵萃取以模糊辨識得到第二階段的特徵向量。 
表一 、Map Operation 
Map input Map output 
 11 
3.3 Power Saving 
圖十三是Power Saving的系統架構圖。我們的雲端偵測系統就建置在雲端應用層
上。雲端平台的服務能力則根據廠商而有所不同，為了提供更有效的Datanode管理能
力，我們分析Datanode的workload pattern，並且以Kalman filter[17]去預測Datanode的
workload變化，根據pattern我們可以預測未來Datanode的workload趨勢。接著Namenode
就可以對CPU與IO做排程以達到Datanode的負載平衡且節省hosting server的能源消耗。
圖十四是energy saving Datanode management的流程圖。 
Cloud Applications
Server Farm
Cloud Infrastructure Services
Cloud Platform Services
Datanodes Management for Storage QoS
Workload PredictionPatterns Analysis
CPU & IO Bound Scheduling
Monitor
Computer 
Resources
Storage
Resources
Network 
Resources
 
圖十三、Power Saving的系統架構圖 
Workloads 
from Datanodes
(CPU, RAM etc.)
Workload 
Prediction 
via Kalman Filter
Pattern 
Analysis
Decide 
#(Datanodes)
Start
End
Power-on
Power-off
Unchange
Scheduler
Data
Migration
State estimation
Scheduler
Data
Migration
Scheduler
Data
Migration
 
圖十四、An energy saving Datanode management for storage QoS 
 13 
4.2電源管理 
實驗的模擬環境為 Intel Pentium D，CPU為 2.8GHz，配上 3.24GB的 RAM。我們
將自己提出的演算法與其它兩種做比較，傳統 history-based 演算法與 Kalman 演算法。
我們還提出三點度量做為效能與節省能量的比較量尺。(1)Difference : 預測值與實際值
間的誤差，如圖十五。(2) Error rate : 預測要 power-on的 Datanodes 誤判率，如圖十六
(3) Energy consumption : 與真實 Datanodes 的能源消耗率比較，如圖十七。  
Methods
D
if
fe
re
n
ce
(%
)
0
30.78
41.75
17.36
0
10
20
30
40
50
60
70
80
90
100
Real CPU workload Kalman algo. History algo. Proposed algo.
 
圖十五、Comparisons of difference in the CPU workload for different algorithms 
Methods
Er
ro
r r
at
e(
%
)
0    
12.99 13.34
3.16
0    
10    
20    
30    
40    
50    
60    
70    
80    
90    
100    
Real #(Datanode) Kalman algo. History algo. Proposed algo.
 
圖十六、Comparisons of Datanodes in error rate for different algorithms 
 15 
參考文獻 
[1] Cloud Computing is on the Up, but what are the Security Issues?, Mather, Tim, Secure 
Computing Magazine (UK), March 2, 2009.   
[2] Cloud Security and Privacy – An Enterprise perspective on Risks and Compliance from O’Reilly  
http://oreilly.com/catalog/9780596802776/  
[3] Cloud Standards Organization - http://cloud-standards.org/ 
[4] SNIA Storage Security Best Current Practices 
http://www.snia.org/forums/ssif/forums/ssif/programs/best_practices/  
[5] Storage Security Best Current Practices (BCPs)” by the Security Technical Working Group of 
SNIA  
[6] The Darker Side of Cloud Computing, by Matthew D. Sarrel, PC Mag.com, February 1, 2009  
Copyright ©  2009 Cloud Security Alliance 76  
[7] Copyright ©  2009 Cloud Security Alliance    73 
http://csrc.nist.gov/publications/nistpubs/800-53-Rev2/sp800-53-rev2-final.pdf  
[8] Managing Assurance, Security and Trust for Services. Online. Available: 
http://www.master-fp7.eu/ 
[9] Mcloud 
http://www.microsoft.com/taiwan/mcloud/ 
[10] Hadoop 
http://hadoop.apache.org/ 
[11] A. Ramachandran, N. Feamster, and S. Vempala. Fil-tering spam with behavioral blacklisting.  
[12] Yan Gu, and Samarjit Chakraborty, “Control Theory-Based DVS for Interactive 3D 
Games,” Design Automation Conference (DAC), Anaheim, CA, USA, 8-13 June, 2008. 
[13] Yan Gu, and Samarjit Chakraborty, “Power Management of Interactive 3D Games Using 
Frame Structures,” 21st International Conference on VLSI Design (VLSID), Hyderabad, 
India, January 2008. 
[14] Yan Gu, and Samarjit Chakraborty, “A Hybrid DVS Scheme for Interactive 3D Games,” 
IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS), pp. 
3-12, USA, April 2008. 
[15] C. Livadas, R. Walsh, D. Lapsley, W.T. Strayer, Using machine learning techniques to  
identify botnet traffic, in: Proceedings of the 31st IEEE Conference on Local Computer 
Networks, IEEE, 2006, pp. 967–974. 
[16] K-means  
http://en.wikipedia.org/wiki/K-means_clustering 
[17] R. E. Kalman, “A New Approach to Linear Filtering and Prediction Problems,” Journal 
of Basic Engineering, 1960, pp.35-45. 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：李宗南 計畫編號：100-2218-E-110-009- 
計畫名稱：雲端資安監控平台之研發--總計畫 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 2 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 0 100%  
博士生 1 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
