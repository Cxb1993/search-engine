multi-colluders.  In Wu et al.’s [9] proposal 
the digital fingerprints are designed by first 
scaling the original image and then adding its 
signal to the host’s signal.  An algorithm is 
then used to detect for the presence or 
non-presence of the original content and tied 
them to the original authorized user.  Other 
digital fingerprints include using labels or user 
identification codes (UIDs) assigned to 
individual authorized users [11]. The digital 
fingerprints are not foolproof towards pirating.  
Authorized users could still collaborate to 
create an illegal image by sharing parts of the 
images from different users.  They hope to 
break the hidden fingerprints this way.  
- 2 - 
The support vector machines (SVMs) was 
first introduced in 1995 by Vapnik [13] that had 
since been hailed for its good performance and 
solid theoretical base.  It can be applied to 
train and classify the image subsets on the UID 
codes to help identify the unreadable colluded 
UID codes.  Graf et al. [4] proposed a 
classification SVM method by normalizing the 
image subsets, while Hsu et al. [5] decomposed 
the problems to selective working sets to get a 
faster convergence for the difficult problems. 
The proposed method for this paper is to 
create unique UIDs for individual users, 
consisting of 9 digit codes.  The host image 
will be discrete cosine transformed to its 
frequency domain before hiding.  The hiding 
method makes use of the random number 
generator to scramble the UIDs and its hiding 
locations in the frequency domain where two 
copies will be hidden.  The linear 2-class 
SVM will be used to trained the colluded UIDs.  
The inputs for the SVM would be the colluded 
UIDs (those that overlapped and 
non-overlapped) and a representative sample of 
UID code in its original form. 
The following sections in this paper are 
organized as follows.  The UID will be 
discussed in section 2.  The proposed method 
is described in section 3.  Discussions on the 
experimental results are in section 4.  Lastly 
but not the least, concluding discussions are 
presented in section 5. 
 
4 User Identification (UID) Fingerprint 
For each digital image sold to an 
authorized user, it will be embedded with a 
unique User Identification code (UID).  The 
embedded UID is the fingerprint tied to a 
digital image for tracking the authorized user.  
For this paper, the UID fingerprint used is an 
m×m sized binary image.  The UID code is 
composed of nine numbers.  The first three 
numbers represents the country code, the 
middle three is the zip code and the last three is 
the serial number.  Fig. 1 shows “950” as the 
country code, “400” as Zip code and “111” as 
the serial number.  The country code is used to 
divide users by countries.  The zip code is 
used to pin-point the exact location of users in a 
specific country.  Lastly but not the least, the 
serial number is used to tie the digital image to 
a specific authorized user.  When the image is 
redistributed, the authorized user can be 
identified from the UID embedded in the image.
 
 
 
  Country code
Zip code 
Serial number
 
 Fig. 1 User Identification (UID) code 
5 The Proposed Scheme 
In the proposed scheme, the host image 
will first be transformed to its frequency 
domain using the forward discrete cosine 
transform (FDCT).  Two copies of the UID 
fingerprint will be randomly scrambled and 
then hidden in the randomly selected medium 
frequency coefficients of the transformed 
image.  The special feature in the proposed 
scheme is to use the support vector machines 
(SVMs) to identify the unreadable colluded 
UID codes. 
 
5.1 Hiding the UID fingerprint 
image by reversing the steps for hiding.  
Similarly, divide the M×M host image O' with 
the hidden UID into 8×8 sized blocks, F'ij.  
From the UID database the random seed S will 
be used to extract the W  and W1 2 hidden in the 
medium coefficients {1, 2, 3, 4} and {5, 6, 7, 
8}, respectively.  Let the extracted data be W'1 
and W' .  Once again random seeds I
- 4 - 
2 1 and I2 
from the UID database will be used to decode 
W'  and W'  to W″  and W″ , respectively.  W″1 2 1 2 1 
and W″2 are then ORed to get the UID 
fingerprint W'.  W' should be similar to the 
original UID, W. 
 
5.3 Colluded data and SVM 
Hiding the UID in a host image is a good 
way to keep track of the authorized users.  
However, colluding efforts by users are 
troublesome.  Two or more users may collude 
to break the UID fingerprints hidden in the 
images.  Collusions could be done by 
manipulating images pixel-to-pixel or by 
cutting.  For example, in the pixel-to-pixel 
collusion of two users, the first pixel is taken 
from image A and second pixel from image B 
to make image C.  Image C is the collaborated 
image used for resale or illegal use.  The 
process is as shown in Fig. 3(a).   Fig. 3(b) 
shows a simple cutting collusion where the 1/4 
upper left and the 1/4 lower right of image C 
are contributed by image A and the 1/4 upper 
right and 1/4 lower left in image C are 
contributed by image B.  The colluders’ 
purpose is to break the authorized UID so that 
it is not possible to identify the authorized user 
in image C.
 
  ••••• οοοοο 
(a) pixel-to-pixel collusion (b) cutting collusion 
Fig. 3 Collusion by two users 
There are several possible damages to the 
hidden UID from collusion.  One possibility is 
that the hidden UID in image A and image B 
are in overlapping locations.  Another 
possibility is that the locations do not overlap.  
Obviously, the UIDs in the non-overlapping 
locations are the easiest to recover.  The 
overlapped areas have the appearance of dense 
artifacts.  As illustrated in the Fig. 4, suppose 
an image Ok with hidden UID Wk and Ok+1 with 
hidden UID Wk+1.  Collusion of these two 
images might produce either O'A or O'B.  
Suppose the UIDs in O
B
k and Ok+1 overlapped 
and there is only one UID W'A extracted with 
noisy artifacts.  On the other hand, if the UIDs 
in Ok and Ok+1 did not overlap then two UIDs 
W'B1 and W'B1 can be extracted from the 
colluded image O'BB. 
 
 
 
2
ο•ο• 
Image 
B
Image 
A 
Image 
A
Image 
B 
Image 
C
Image 
C 
W'B1W'A W'B2 
s0  s1  s2 ……..  s9 
t1  …  t9       t10 …  t18  t19 …t27 
train-0 
- 6 - 
Fig. 5 Flow for training in SVM 
5.4 Predicting UID from colluded samples 
In Fig 6, two images O'k and O'k+1 are 
found to contain colluded UIDs {W'k1} and 
{W'k1+1, W'k2+1, W'k3+1}, respectively.   The 
specific UID codes that are not readable will be 
cut into 10×15 sized images.  A sample test 
data is shown in Fig. 6(a) where two 10×15 
images {u1, u2} are cut from W'k1 and W'k1+1 
respectively.
 
 
 
 
Fig. 6 Sampled colluded UIDs  
Similar to the previous subsection 3.3, the 
cut images {u1, u2} will be normalized with {s0, 
s1, …, s9}.  The normalized test data will be 
saved in files test-12 and test-9 for {u1, u2}.  
Next, test-12 will be input together with 
{train-1, train-2, …, train-19} to get a 
prediction for the unreadable UID code u1 (see 
Fig. 7).  The calculated result is positive for 
train-12 and negative for all other datasets.  
Therefore, u1 belongs to train-12 which 
represents the solution for the overlap of 
numbers 1 and 2.  The same process can be 
repeated for test-9 to get a prediction for u2.
train-1 
 
train-9
 
train-10
 
train-11 train-19 • • • • • •   
O' O'k k+1
W' W' W'W'k1 k2+1 k3+2 k1+1
u u(a) 1 2 
increases the chances of recovering the UIDs.  
Therefore, the UID codes extracted from the 
colluded image were not distorted.  Fig. 9(b) 
shows collusion attacks with alternate pixels 
sharing from images O  and Ob e, respectively.  
Although, the recovered UIDs, W  and Wb e 
showed more noisy artifacts than the previous 
test, the UIDs can be clearly identified.
  
- 8 - 
 
 
 
W'b, Ob, S=2 
 
W'e, Oe, S=1 
(a) Shared upper half Ob and lower half of Oe
  
  
W' , O , S=2 W' b b e, Oe, S=1 
(b) Shared alternate pixels from O  and Ob e
Fig. 9 Collusion attacks by 2 authorized users  
(2) Collusion attacks by three authorized users 
Fig. 10 showed collusion attacks by three 
authorized users with images, Oa, Ob and Od.  
In Fig. 10(a), the newly created image shares 
1/3 upper part of Oa, 1/3 middle part of Ob and 
1/3 lower part of Od.  The extracted UIDs, W'a, 
W'b and W'd were hidden using S= {3, 2, 4} 
with less chances for hiding in the same 
locations.  Since collusions are increased, the 
extracted UIDs showed more noisy artifacts 
than the previous two tests.  However some 
codes can be seen clearly while others are quite 
difficult to identify with too many artifacts; for 
example the “9” marked in dotted rectangle in 
W'a.  Fig. 10(b) colludes by alternately sharing 
by pixel-by-pixel between O , O  and Oa b d, 
respectively.  Although there were noisy 
artifacts in the background, the extracted UIDs, 
W' , W'  and W'a b d are clear except for the “3” 
marked with a rectangular square in W'b.  The 
clear UID codes stemmed from the 
pixel-to-pixel sharing are less affected even if 
the number of colluders is increased.  This 
shows that the proposed hiding scheme is 
robust to this kind of attack. 
 
 
 
 
 
 
 
 
 
 
 
 
ambivalent prediction: involves two calculated 
classifications that are positive.  Only one is 
judged to be the correct image, and (3) wrong 
prediction: although one calculated 
classification is positive but is judged as not the 
correct UID code.  Table 3 illustrates the 
predicting success rate.  Out of the 
non-overlapping UID images 20 UIDs were 
identified with accurate predictions, 3 UIDs 
were identified from ambivalent predictions, 
and 2 UIDs were not accurately identified and 
were categorized as wrong predictions.  From 
the images with two overlapping UIDs, 17 
UIDs were accurately identified, 4 UIDs were 
identified but in ambivalent mode and none 
wrongly identified.  The correct predictions 
(including ones from ambivalent prediction) is 
95.65% and the wrong predictions is 4.35%.
- 10 - 
     
  
Fig. 12 A Sample of five 10×15 test images 
 
 Table 2: Predicting success rate 
Image Predictions Number of 10×15  images 
Accurate 20 
Ambivalent 3 
Singly  
U
ID
s 
Wrong 2 
Accurate 17 
Ambivalent 4 
O
verlapped 
U
ID
s 
Wrong 0 
7 Conclusions  
References Active trading of digital images on the 
Internet has create an urgent need to manage 
and track the traded merchandise.  It is easy to 
sell and resell the images even though a 
specific user is authorized for limited use.  
Digital watermarking is a solution but cannot 
protect the image from collusion attacks.  In a 
collusion attack, it would be desirable to track 
an illegal image to its original owners.  By 
applying SVM with the proposed hiding 
technique for UID fingerprint, the colluded 
UIDs can be identified with a success 
predicting rate of 95.65%.  The vigorous 
experiments done also showed that the 
proposed hiding scheme is robust to collusion.  
The fingerprinting technique can be used to 
protect the music and movie industry from 
piracies. 
[1] R.C. Chen, M.L. Chiu, Y.L. Huang and L.T. 
Chen, “Detecting Credit Card Fraud by 
Using Questionnaire-Responded 
Transaction Model based on Support Vector 
Machines,” Lecture Notes in Computer 
Science (LNCS), Vol. 3177, pp. 800-806, 
2004. 
[2] T.S. Chen, J. Chen and J.G. Chen, “A Simple 
and Efficient Watermark Technique Based on 
JPEG2000 Codec,” ACM Multimedia Systems 
Journal, Springer-Verlag, June 2004, vol.10 
no.1, p.16-26. 
[3] B. Chor, A. Fiat, M. Naor and B. Pinkas, 
“Tracing Traitors,” Information Theory, 
IEEE Transactions on, vol. 46, Issue: 3, pp. 
893 – 910, May 2000. 
[4] A. Graf, A.J. Smola and S. Borer, 
“Classification in a Normalized Feature 
Space Using Support Vector Machines, 
“ IEEE Transactions on Neural Networks, 
Future work could involve using a 
different UID coding method that is robust to 
attacks. 
