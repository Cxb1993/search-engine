 
  I 
中文摘要 
在無線感測網路中，感測點因不同的應用需求，可能需尋找多(k)個匯集點，此即為
manycast 問題。目前在無線感測網路上的 manycast 研究並不多，由於感測點的能量有
限且匯集點可能分散於網路各處，來源點如何在省能的情況下找到較近的 k 個匯集點，
是一個重要且具挑戰的議題。因此，本計畫在具行動匯集點的無線感測網路上，提出有
效省能的 manycast 機制。我們以匯集點所建立之 Voronoi 圖為基礎，設計有效的匯集點
位置資訊之儲存機制，並提出有效的位置查詢封包之傳遞策略，減少尋找 k 個匯集點的
時間及感測點的能量消耗。此外，針對匯集點分佈不平均而可能造成搜尋時間較長的問
題，考量 Voronoi 區域面積來調整封包傳遞策略，以縮短搜尋時間，並增加找到較近匯
集點之機率。模擬結果顯示我們的方法相較於 scoped-flood 和 circle line path 方法，有較
少的能量消耗及較短的平均路徑長度。 
 
關鍵詞：無線感測網路、Voronoi 圖、manycast、行動匯集點、省能 
 
 
 
Abstract 
In wireless sensor networks, sensor nodes may need to communicate with any k sinks for 
different applications. This is just the manycast problem. Studies on manycast problem in 
wireless sensor networks are few currently. Since sensor nodes have a limited energy and 
sinks may be located randomly, how to find k sinks near the source in an energy-efficient way 
is an important and challenging issue. In this project, we propose an energy-efficient 
Voronoi-based manycast (EEVM) in wireless sensor networks with mobile sinks. We design 
an efficient sink location information management mechanism based on a Voronoi diagram of 
sinks to reduce the delay time and the energy consumption, and develop an efficient query 
forwarding strategy for finding k sinks. Moreover, we adjust the query forwarding strategy by 
considering the areas of Voronoi regions to further reduce the delay time and increase the 
probability of finding k sinks near the source. Simulation results show that the EEVM scheme 
is more energy efficient, and has a shorter average hop counts than the scoped-flood and 
circle line path schemes. 
 
Keywords ： wireless sensor networks, Voronoi diagram, manycast, mobile sink, 
energy-efficient 
 
  2 
3.1 網路架構 
在網路架構的部分，我們首先對無線感測網路的環境做了下列假設： 
 感測網路環境中有 n 個(可移動)匯集點。而每個感測點均為靜止且有相同的能量
限制。 
 每一感測點均可利用 GPS 或其他定位機制[4][5]得知自己的位置資訊。 
 沒有任意三個匯集點共線或任意四個匯集點共圓 (可透過隨機擾動(random 
perturbation)的方式來避免)。 
我們以匯集點為主，採用 Y. Núñez-Rodríguez 等人[6]的分散式演算法，將網路分成
n 個 Voronoi 區域，且每個區域有一個匯集點(假設沒有任意三個匯集點共線或任意四個
匯集點共圓)。此外，每一個 Voronoi 區域為一凸多邊形，如圖 1 所示，網路中有六個匯
集點，可分成六個 Voronoi 區域 A、B、C、D、E 和 F，而區域 D 的頂點為 u、v、x、y
和 z (指最靠近的感測點)。當每個 Voronoi 區域形成後，匯集點會廣播訊息讓區域內的
感測點知道其頂點之位置。 
 
3.2 位置伺服器之設置 
由於匯集點可移動，為了降低因匯集點移動而產生的位置更新成本，每個匯集點會
選擇最靠近自己的感測點作為代理點(sink agent)，以其位置作為該匯集點之位置並儲存
於位置伺服器。為了方便感測點取得匯集點之位置資訊，我們在每個 Voronoi 區域選擇
最靠近網路中心點(center)的頂點，作為此區域內匯集點的位置伺服器，如圖 2 所示，區
域 A、C 和 D 之位置伺服器均為 u 點，區域 B 和 E 之位置伺服器為 x 點，而區域 F 的
位置伺服器則為 z 點，如此不僅儲存成本低，每個感測點也能清楚至何處查詢匯集點資
訊，節省不必要的查詢封包。另外，由於 Voronoi 區域之間會有共邊或共頂點的情形，
因此，有可能兩個或以上區域的位置伺服器是相同的，在此情形下，匯集點位置查詢之
效能將更為提升。當一個 Voronoi 區域的位置伺服器被選出後，該區域內匯集點透過其
代理者傳送一個位置註冊封包(location registration packet)至位置伺服器，位置伺服器將
匯集點 ID 及其位置資訊記錄於自己的匯集點資訊表(sink information table)，以供來源點
查詢，如圖 2 所示。 
 
匯集點
頂點
區域 A
u
v
x
y
z
區域 B
區域 C
區域 D
區域 E區域 F
 
匯集點
位置伺服器
位置註冊封包
網路中心
頂點
代理點
u
v
x
y
z
區域 A 區域 B
區域 C
區域 D
區域 E區域 F
 
圖 1 Voronoi 區域之劃分 
 
圖 2 位置伺服器的建置及匯集點資訊儲
存 
 
3.3 有效省能之 manycast 機制 
當網路中某一感測點需要尋找 k 個(k≧1)匯集點時，此感測點會成為來源點，並傳
送一個位置查詢封包 LQuery (location query packet)至其 Voronoi 區域的位置伺服器。為
了增加 manycast 成功率以及找到較近的匯集點，我們令來源點在位置查詢封包內夾帶所
需匯集點個數 K 大於等於其需要的個數 k，即 K≧k 且 K = k + k × c，c 值可視來源點的
需求及網路環境決定其比例。若來源點之位置伺服器存有大於等於 K 個匯集點的位置資
  4 
接下來我們將以圖 4 為例，詳細說明位置查詢封包的傳遞策略。假設來源點需要 22
個匯集點的位置資訊，且我們定 c = 14%，則 K = 25。圖中位置伺服器旁之數字表示其
所儲存之匯集點個數。首先來源點發送位置查詢封包<K=25, C=0, N=25>至其位置伺服
器 a，因為 a的 L(a)值(=3)小於 N值(=25)，則更新位置查詢封包內記錄的資訊(即 K = 25–
0–3 = 22)後，會將二個位置查詢封包分別以逆時針(LQueryL)和順時針(LQueryR)的方向
拜訪該 Voronoi 區域內其他的頂點，即傳遞路徑為 a→ b → c → f 及 a → d → e → 
f。為了平均分配兩個方向需尋找的匯集點個數，分歧點 a 將二個位置查詢封包內的 N
值更新為，即二個方向的位置查詢封包為<K=22, CL=0, N=11>和<K=22, CR=0, N=11>，
其會各自負責尋找 11 個匯集點。在此例中，當位置伺服器 b 收到位置查詢封包後，會
更新位置查詢封包的 CR值為 CR+L(b)，並檢查新的 CR值是否大於等於 N 值，若是，則
產生位置回應封包傳至來源點；否則，位置伺服器 b 將位置查詢封包傳送至下一個頂點
c。頂點 c、d 及 e 也是同樣的作法。此外，二個查詢封包在不同方向尋找所需匯集數量
時，一旦有一封包先行滿足需求數量並回傳，則此回傳的感測點內必須記錄回傳數量，
以便另一方向封包到達此感測點後可取得目前尋找總數並更新其需求數量。 
當頂點 f 收到二個不同方向的位置查詢封包(LQueryL 和 LQueryR)後，其成為會合
點，並整合這二個封包內記錄的 CL和 CR值產生新的 C 值，即 C=CL+CR=2+2=4，由於
C(=4) < K(=22)，表示還缺少 22－4=18 個匯集點，便將 K 值設為 18(K=K–C)，並重設
C 值為 0，故頂點 f 產生新的位置查詢封包<K=18, C=0, N=18>，並傳送至鄰近尚未被拜
訪的頂點 g；由於頂點 g 為分歧點，故更新其 K 值為 K–C–L(g)=18–0–1=17，表示
仍需要 17 個匯集點才足夠，並設 N 值為 ，而產生二個位置查詢封包<K=17, CL=0, N=9>
和<K=17, CR=0, N=9>往逆時針和順時針的方向去拜訪外圍 Voronoi 區域的頂點，依照上
述相同的作法，會合點 h 會收到二個查詢封包分別為<K=17, CL =4, N=9>及<K=17, CR=7, 
N=9>，其計算新的 C 值為 4+7=11，因 h 為會合點，便計算 K 值為 K–C–L(h)=17–11–
1=5，會合點 h 發送位置查詢封包<K=5, C=0, N=5>至頂點 i，頂點 i 也會成為分岐點，並
重覆上述作法(參考分歧點 g)，繼續尋找不足的匯集點個數(此時每個方向需要 2 個匯集
點個數，即 N=2)。最終，頂點 s 會發現更新後的 C 值(=2)等於 N 值(=2) (如上述位置伺
服器 b 的作法)，即滿足此方向所需的匯集點個數，故頂點 s 會回傳位置回應封包至來源
點；而在頂點 t 也是相同的情形，因此，來源點可整合頂點 s 與 t 的位置回應封包後，
得知 25 個匯集點的位置資訊。 
 
Source
a
b c
d
e
f
3
1
1
1
1
g
1
11
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
h
i
s
t
匯集點 位置伺服器
位置查詢封包網路中心
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
 
圖 4 來源點尋找所需匯集點之路線(來源點靠近網路中心) 
 
  6 
3.5 匯集點移動時的更新策略 
由於匯集點可移動，因此，當其移動時，我們希望匯集點能依自己與其代理者之間
的距離，來決定是否選擇新的代理點。以下我們分兩種情形來說明。 
(1) 匯集點在移動後，若仍位於其代理者的二倍傳輸半徑(2R)範圍內，則不管此匯
集點有無移出其 Voronoi 區域，匯集點只需與其代理者保持溝通即可，而不需
做任何的更新，如圖 7 所示之匯集點 S1 及 S2。 
(2) 若匯集點移出其代理者的二倍傳輸半徑範圍，則匯集點會選擇新的代理點，而
新的代理點會判斷匯集點所屬的位置伺服器是否有改變，若否，則新的代理點
傳送位置更新封包(location update packet)至原有的位置伺服器，以更新匯集點
的位置資訊，如圖 8 中的匯集點 S1；而若匯集點所屬的位置伺服器已改變，
則新的代理點會發送位置註冊封包至新的位置伺服器，另外新的代理者也會通
知舊的代理者，由舊的代理者通知原有的位置伺服器刪除此匯集點的相關資
訊，如圖 8 中的匯集點 S2。 
 
匯集點
位置伺服器
頂點
u
v
x
y
z 代理點
2R
匯集點移動路徑
S1
S2
 
u
v
x
y
z
2RS2 S1
位置註冊封包
位置刪除封包
匯集點
位置伺服器
頂點
新代理點
匯集點移動路徑
舊代理點
 
圖 7 匯集點在其代理者兩倍傳輸範圍內
移動時位置資訊不需更新 
圖 8 匯集點移出代理者兩倍傳輸範圍
外之維護 
 
四、模擬結果及分析 
本節介紹我們的模擬環境，以及基本的參數設定。同時將我們提出的方法與
scoped-flood[7]和 E. Lee 等人所提出之匯集點服務方法(以下簡稱為 circle line path)[2]針
對總能量消耗及平均路徑長度進行比較分析。我們使用 C++程式語言設計一無線感測網
路之模擬環境，網路大小設為 800×800m2，2000 個感測點被均勻散佈在網路中，並隨機
散佈 50 個匯集點，每一個感測點的傳輸半徑為 50m。 
Scoped-flood機制利用TTL(Time-To-Live)值之設定在網路中範圍性廣播並尋找至少
k 個匯集點，如果初始之 TTL 值範圍中未包含 k 個匯集點，則 TTL 值將逐步增加直到
找到滿足 k 個匯集點數量的需求為止。 
相關模擬項目的定義如下： 
(1) 能量消耗：從 manycast 的啟動到完成，感測點的總能量消耗。 
(2) 平均路徑長度：來源點找到的 k 個匯集點之平均路徑長度。 
 
在能量消耗計算方面，我們採用 LEACH[8]中所提出的 first order radio model，其中
Eelec= 50nJ/bit，εamp = 100pJ/bit/m
2，K 為封包大小(bit)，d 為兩點距離。傳送(ETx)與接
收(ERx)的能量消耗公式如下： 
ETx (k,d) = Eelec × K ＋εamp × K × d 
2
  
ERx (k,d) = Eelec × K 
  8 
圖 11 為針對感測點的總能量消耗進行模擬與分析，總能量消耗包含網路初始架構
建置耗能與 manycast 機制耗能。如圖 11 所示，scoped-flood 在逐步增加 k 值的同時，其
所消耗的總能量上升最為急劇和明顯，這是由於 scoped-flood 透過區域性步數的廣播直
到此廣播步數範圍內包含至少 k 個匯集點為止，因此產生過多的封包傳輸並造成不必要
的能量耗費。在 circle line path 的方法中，因為每一個匯集點需選定某一個高度的感測
點來散佈其位置資訊，故能量消耗較高。在能量消耗當中，我們所提出的 EEVM 方法
在 manycast 機制上有較低的能量耗費，原因在於 EEVM 方法利用 Voronoi 圖概念選擇
並建立有效的匯集點位置儲存機制，在後來搜尋的步驟即能利用預先建立之儲存點做一
有效位置查詢，大量地減少了網路中位置詢問封包數量與總傳輸次數。 
 
3
4
5
6
7
8
9
5 10 15 20 25
平
均
路
徑
長
度
匯集點需求數量k
EEVM
EEVM with r=1
EEVM with r=2
EEVM with r=3
 
0
0.5
1
1.5
2
2.5
5 10 15 20 25
能
量
消
耗
(m
J)
匯集點需求數量k
EEVM
EEVM with r=1
EEVM with r=2
EEVM with r=3
 
(a) 不同 r 值之平均路徑長度 (b) 不同 r 值之能量消耗 
圖 12 r 值影響之分析(網路中央區域較密環境) 
 
4
5
6
7
8
9
10
5 10 15 20 25
平
均
路
徑
長
度
匯集點需求數量k
EEVM
EEVM with r=1
EEVM with r=2
EEVM with r=3
 
0
0.5
1
1.5
2
2.5
3
5 10 15 20 25
能
量
消
耗
(m
J)
匯集點需求數量k
EEVM
EEVM with r=1
EEVM with r=2
EEVM with r=3
 
(a) 不同 r 值之平均路徑長度 (b) 不同 r 值之能量消耗 
圖 13 r 值影響之分析(網路右上區域較密環境) 
 
圖 12 及圖 13 為針對在 EEVM 方法基礎下考慮連續面積門檻值(r)所得到的匯集點
平均路徑長度與網路能量消耗之模擬結果。我們以匯集點於網路中央及網路右上區域較
密的環境來進行模擬，並從模擬數據中取得最佳的設定。我們分佈較為密集的 25 個匯
集點於網路的特定區域中，其餘 25 個匯集點則隨機分散於網路。令較為密集匯集點 i
的坐標為(xi,yi)，1≦i≦25，在網路中央區域較密環境中：(300,300)≦(xi,yi)≦(500,500)，
而在網路右上區域較密環境中：(500,500)≦(xi,yi)≦(700,700)。如前述所提到，網路中因
為匯集點的分佈不均所產生 Voronoi 區域面積的差異，會影響搜尋路徑的走向，進而對
網路能量消耗有直接的影響。藉由小面積區域的聚集，我們可以推測在此區域附近有較
密集的匯集點聚集的可能，透過 r 個連續面積總合小於平均面積的考慮，將搜尋路徑修
正並優先拜訪這些區域使其有更好的尋找結果。 
總體來說，當 r = 2 時有最好的平均路徑長度與能量消耗。在平均路徑長度方面，
  10 
邊緣而使得廣播尋找範圍急劇加大，能量消耗也隨之大量的提高，EEVM 由於考量面積
區域機制使能量消耗仍能維持在最好的表現。 
 
五、結論 
本計畫提出有效省能的 manycast 機制，以 Voronoi 架構為基礎的匯集點位置儲存機
制來降低儲存成本，並提高來源點尋找匯集點位置的效率。我們設計有效的位置查詢封
包之傳遞策略，減少尋找 k 個匯集點的時間及降低感測點的能量消耗。而在匯集點分散
不平均的情形下，藉由考量區域面積的查詢封包之傳遞策略，更能增加尋找距離來源點
較近的匯集點之機率。最後模擬結果顯示 EEVM 方法在能量消耗與平均路徑長度皆有
良好的表現。 
 
六、學術論文 
本計畫已發表之相關學術論文如下： 
1. Shiow-Fen Hwang, Nan-Han Liang, Kun-Hsien Lu and Chyi-Ren Dow, “Energy-Efficient Voronoi-Based 
Manycast in Wireless Sensor Networks with Mobile Sinks,” Proceedings of 3rd International Conference on 
Computer Engineering and Applications (ICCEA), pp. 361-365, Haikou, China, July 15-17, 2011. 
2. 黃秀芬, 梁乃翰, 呂坤憲, 竇其仁, “在具行動匯集點之無線感測網路上以 Voronoi 架構為基礎之省能 
manycast 機制,” Proceedings of the 16th Mobile Computing Workshop, Kaohsiung, Taiwan, June 17, 2011. 
 
七、計畫成果自評 
本人所提之研究計畫在一年執行期間已順利完成，並達原計畫目標，而研究成果已
發表於國內外相關學術會議。 
 
參考文獻 
[1] I. F. Akyildiz, S. Weilian, Y. Sankarasubramaniam, and E. Cayirci, “A Survey on Sensor Networks. IEEE 
Communications Magazine,” vol. 40, no. 8, pp. 102-114, 2002. 
[2] E. Lee, F. Yu, S. Park, J. Jung, S.-H. Kim, and S. Noh, “General Sink Location Service Based on Circle and 
Line Paths in Wireless Sensor Networks,” In Proc. of IEEE Wireless Communications and Networking 
Conference (WCNC), pp. 1-6, 2010. 
[3] X. Zhu and H. Gupta, “Fault-Tolerant Manycast to Mobile Destinations in Sensor Networks,” In Proc. of 
IEEE International Conference on Communications, pp. 3596-3603, 2007. 
[4] N. Bulusu, J. Heidemann, and D. Estrin, “GPS-less Low-Cost Outdoor Localization for Very Small 
Devices,” IEEE Personal Communications, vol. 7, no.5, pp. 28-34, 2000. 
[5] G. Mao, B. Fidan, and B.D.O. Anderson, “Wireless Sensor Network Localization Techniques,” Computer 
Networks, vol. 51, no. 10, pp. 2529-2553, 2007. 
[6] Y. Núñez-Rodríguez, H. Xiao, K. Islam, and W. Alsalih, “A Distributed Algorithm for Computing Voronoi 
Diagram in the Unit Disk Graph Model,” In Proc. of the Canadian Conference on Computational Geometry 
(CCCG), pp. 199-202, 2008. 
[7] C. Carter, S. Yi, P. Ratanchandani, and R. Kravets, “Manycast: Exploring the Space Between Anycast and 
Multicast in Ad Hoc Networks,” In Proc. of the 9th Annual International Conference on Mobile Computing 
and Networking, pp. 273-285, 2003. 
[8] W. R. Heinzelman, A. Chandrakasan, and H. Balakrishnan, “Energy-Efficient Communication Protocol for 
Wireless Microsensor Networks,” In Proc. of the 33rd Hawaii International Conference on System Sciences, 
pp. 3005-3014, 2000. 
 2 
二、與會心得 
有榮幸可以參加此次的國際研討會，在此特別感謝國科會所提供的經費補助。此次研討
會中除了有相同來自台灣的學者之外，也與各國的學者專家請教討論，藉此交流有關無線感
測網路領域的研究。在國際會議中，更是讓我體會到英文能力的重要性，各個來自不同國家
的學者皆是透過英文做溝通，因此，培養好的語文能力也是相當重要。 
此會議為網路通訊領域的研究學者、產業界及相關研究人員提供一個國際性的交流平
台，對我們未來的研究領域、方向與內容都有所啟發。此外，眼見他國學者致力於學術與應
用的研究，期望我們也能獲得更具前瞻性與應用價值的研究成果，以對我國的科技發展有所
助益。 
三、攜回資料名稱及內容 
會議議程表一份及隨身碟一個。 
 
 
 
 
 

An Energy-Efficient Routing Protocol in Wireless Sensor Networks with Holes 
 
Shiow-Fen Hwang  Hsin-Hui Lin   Chyi-Ren Dow 
Department of Information Engineering and Computer Science 
Feng Chia University 
Taichung, Taiwan 40724, R.O.C. 
sfhwang@mail.fcu.edu.tw, m9903453@fcu.edu.tw, crdow@fcu.edu.tw
 
 
Abstract—In wireless sensor networks, holes may exist due to 
uneven deployment, energy exhaustion and physical obstacles. 
How to establish the energy-efficient routing mechanism in 
wireless sensor networks with holes is a practical and 
challenging issues. Many researches employ hole detection 
algorithm to determine boundary nodes, and then the holes are 
covered by some virtual shapes such as circles and ellipses. 
This usually leads to longer path length and more energy 
exhaustion. In this paper, we propose an energy-efficient 
routing protocol in wireless sensor networks with holes. Only a 
few nodes need to determine whether it is a boundary node and 
a few anchor nodes are used to record the information of holes, 
thus reducing the energy consumption. In addition, the anchor 
nodes will be replaced when their residual energy is less than a 
threshold to prolong the network lifetime. Simulation results 
demonstrate that our proposed scheme has good performance 
in terms of energy consumption, control overhead and path 
length. 
Keywords— wireless sensor networks, holes, anchor nodes 
I.  INTRODUCTION 
Recently, wireless sensor networks (WSNs)[2,3] have 
been used in many applications such as environmental 
monitoring, object tracking etc. WSNs are composed of a lot 
of sensor nodes with limited energy, hence how to use 
energy efficiently is a critical issue. Geographic greedy 
routing method is widely used for routing, since it usually 
uses a shortest path to deliver data packets and has low 
control overhead. But holes may exist due to uneven 
deployment, node failures, energy exhaustion and physical 
obstacles[1]. Data packets may get stuck at the nodes near 
holes when the sources deliver data packet to the destination. 
In order to solve this problem, many schemes had been 
proposed[5-17]. Generally, these can be classified into two 
methods: passive and active. In the passive methods, it deals 
with the hole problem only when data packets are stuck at 
nodes. In the active methods, it generates boundary nodes by 
the hole detection algorithms[4,14], and then establishes the 
hole information in advance. 
In this paper, we propose an energy-efficient routing 
protocol in WSNs with holes which belongs to passive 
method. If every node need to construct the hole information 
at first, this will waste energy since holes may be not 
encountered when a source transmits data to a destination. 
Therefore, we will construct the hole boundary information 
only when nodes encounter holes. As a result, the energy 
consumption and control overhead can be reduced. 
The rest of this paper is organized as follows. Section II 
introduces several related work. Section III presents the 
proposed scheme in detail. Section IV evaluates the 
performance. The conclusion and future work are in Section 
V. 
II. RELATED WORK 
Many protocols for hole bypassing problem have been 
proposed. B. Karp et al. proposed a routing protocol to solve 
the phenomenon of local minimum which is called Greedy 
Perimeter Stateless Routing (GPSR)[5]. At first, it uses 
greedy algorithm and enters to perimeter mode when the data 
packet is blocked at the node called stuck node. In perimeter 
mode, a stuck node records its distance to the destination and 
uses right-hand rule to look for the next forwarding node in 
the counterclockwise direction. The distance between the 
stuck node and the destination is the basis for returning to 
greedy mode. GPSR does not record any information about 
holes, therefore it need to retry the routing path every time as 
it encounters a same hole. This will result in longer path 
length and energy dissipation. F. Li et al. designed a new 
geographic hole bypassing forwarding (HBF) protocol[7]. 
The node detects whether it is a boundary node at the 
beginning and then sends the message to exchange the hole 
information. HBF models an inside virtual circle according 
to the position of boundary nodes to cover the hole and 
floods this message across the whole networks. The source 
decides the radius of outside virtual circle according to its 
distance to the center of inside virtual circle. It can find two 
intersection points when drawing the tangents from the 
source and the destination to the outside virtual circle. The 
one that leads to the shorter path from the source to the 
destination is selected as the anchor point. The data packet 
will be forwarded from the source to a node that is closest to 
the anchor point, then forwards to the destination. The radius 
of outside virtual circle is adjustable, so it balances the 
energy of nodes near the anchor. However, the anchor may 
be far from the hole, and thus detouring the hole in a longer 
path. In addition, it floods the information of the hole to the 
entire network may burden the energy consumption of nodes. 
J. You et al. proposed the Virtual Position (ViP) to avoid the 
local minimum phenomenon[15]. Each node calculates the 
virtual position according to its one hop neighbors’ 
information and then broadcasts its virtual position to its 
Hence, the source obtains all anchor nodes information (a1、
a2、b1、c1、c2 、d1、d2). 
 
S
D
m
b1
a1
a2
Hole
v1
   
S   source
D  destination
     sensor node
     local minimum node
     anchor node
     virtual target
      
 
Figure 3. The virtual target. 
 
 
S
D
b1
a1
a2 v1
d1
d2
c1
c2
   
S   source
D  destination
     sensor node
     local minimum node
     anchor node
     anchor node
     virtual target
      
Hole
(S    D)
(D    S)
 
Figure 4. Routing paths from the destination to the source. 
 
 
Step3: Build the hole boundary information 
All anchor nodes can be separated into two parts (right 
and left) according to line SD. The source calculates the 
distance between itself and 1
st
-left and 1
st
-right anchor nodes, 
and chooses the one with smaller distance as the starting 
node for building the hole boundary information. The 
starting node utilizes greedy routing algorithm to notify the 
next anchor node that the locations and hop counts of all 
anchor nodes in the clockwise (or counterclockwise) 
direction. Repeat the above step until the packet returns to 
the starting node. This means the hole boundary information 
has been built. All nodes in the routing path will be identified 
as the hole boundary nodes. In Fig. 5, S chooses b1 as the 
starting node and the direction for notifying is 
b1→d2→d1→c1→c2→a2→a1→b1. The boundary nodes only 
record related locations and hop counts between anchor 
nodes. Moreover, the notification of the hole information is 
peer-to-peer, not local flooding, thus reducing energy 
consumptions and control overheads of nodes. 
 
       
 
S
D
b1
a1
a2
d1
d2
c1
c2
Hole
   
S   source
D  destination
     sensor node
     anchor node
     anchor node
     boundary node
      
(S    D)
(D    S)
 
Figure 5. Build the hole boundary information. 
 
B.  The Routing Mechanism 
When the hole boundary information is constructed, the 
source (S) chooses the shorter path to the destination (D) 
according to line SD, for example, the data transmission path 
from the source (S) to the destination (D) is 
S→b1→d2→d1→D in Fig. 5. If another source    sends a 
packet to its destination    and meets a boundary node, it can 
obtain the hole boundary information from the boundary 
node. Hence, it will choose the shorter path according to line 
    , for example, in Fig. 6,    gets the hole boundary 
information from the boundary node x, thus, it will choose 
the shorter path   →c2→a2→a1→    as the data transmission 
path to   .      
 
 
 
b1
a1
a2
d1
d2
c1
c2
S'
x
D'
Hole
   
S   source
D  destination
     sensor node
     anchor node
     anchor node
     boundary node
      
(S    D)
(D    S)
S
D  
Figure 6. Another source   finds a shorter path to its destination 
   by a hole boundary node. 
 
 
 
 
 
 
every time. In HBF, the location of the anchor may be far 
away from the hole, so its path length is longer. 
 
 
Figure 10. Total path length (U-shape). 
 
 
Figure 11. Total path length (rectangle). 
         
The control overhead is the total number of control 
message when nodes build the hole information and forward 
the data packet. In Fig. 12 and 13, the control overhead of 
the proposed scheme has a little more than GPSR. This is 
because the construction of the hole boundary information 
when nodes encounter the hole problem, and therefore it may 
cause additional overhead of nodes. HBF always has to flood 
the hole message across the whole network when the hole 
information is constructed. Consequently, the overhead of 
HBF is much more than the proposed scheme and GPSR.  
 
 
Figure 12. Control overhead (U-shape). 
 
 
Figure 13. Control overhead (rectangle). 
 
The energy consumption is the total energy consumed for 
transferring and receiving data packets from the source to the 
destination. Fig. 14 and Fig. 15 show that the energy 
consumption of proposed scheme is better than the others. In 
the proposed scheme anchor nodes are used to achieve the 
shorter path, thus reducing energy consumption. HBF is the 
highest one since every node is aware of the hole information 
by flooding, thus increasing the energy consumption of 
nodes. 
 
 
 
Figure 14. Energy consumption (U-shape). 
 
 
 
Figure 15. Energy consumption (rectangle). 
 
 
 
400
500
600
700
800
900
1000
1100
1200
1300
1400
1 2 3
T
o
ta
l P
a
th
 L
en
g
th
(m
)
Communication Sessions
HBF
GPSR
Proposed
400
500
600
700
800
900
1000
1100
1200
1300
1400
1 2 3
T
o
ta
l P
a
th
 L
en
g
th
(m
)
Communication Sessions
HBF
GPSR
Proposed
0
200
400
600
800
1000
1200
1 2 3
C
o
n
tr
o
l O
v
er
h
ea
d
(p
a
ck
et
s)
Communication Sessions
HBF
GPSR
Proposed
0
200
400
600
800
1000
1200
1 2 3
C
o
n
tr
o
l O
v
er
h
ea
d
(p
a
ck
et
s)
Communication Sessions
HBF
GPSR
Proposed
國科會補助計畫衍生研發成果推廣資料表
日期:2012/08/24
國科會補助計畫
計畫名稱: 在具行動匯集點之無線感測網路上以Voronoi架構為基礎之省能的manycast機
制
計畫主持人: 黃秀芬
計畫編號: 100-2221-E-035-056- 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
