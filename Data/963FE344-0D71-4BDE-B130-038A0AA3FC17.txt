2suggested.
For the adaptive approaches, although
these control laws can give proper tracking
performance under various uncertainties, most
of them require computation of the regressor
matrix. This is because, with the regressor
matrix, the robot dynamics is able to be
expressed in a linearly parameterized form so
that a proper Lyapunov function candidate can
be found to give stable update laws for
uncertain parameters. Since the regressor
matrix depends on the joint position, velocity
and acceleration, it should be updated in every
control cycle. Due to the complexity in the
regressor computation, these approaches may
have difficulties in practical implementation.
Sadegh and Horowitz (1990) proposed a
method to allow off-line computation of the
regressor using the desired trajectories instead
of actual measurements. Sometimes a large
memory space should be allocated to store the
look-up table containing the regressor. Lu and
Meng (1991a, 1993) proposed some recursive
algorithms for general n DOF robots. Kawasaki
et al. (1996) presented a model-based adaptive
control for a robot manipulator whose regressor
was computed explicitly by a recursive
algorithm based on the Newton-Euler
formulation. Yang (1999) proposed a robust
adaptive tracking controller for manipulators
whose regressor depends only on the desired
trajectory and hence can be calculated off-line.
Some regressor-free approaches for the
adaptive control of robot manipulators are
available. In Qu and Dorsey (1991), a
non-regressor based controller was proposed
using linear state feedback. To confirm robust
stability of the closed loop system, one of their
controller parameters should be determined
based on variation bounds of some complex
system dynamics. However, it is generally not
easy to find such a parameter for robots with
more than 3 DOF. Song (1994) suggested an
adaptive controller for robot motion control
without using the regressor. In his design, some
bounds of the system dynamics should be found,
and the tracking error can not be driven to
arbitrary small in the steady state. Park et al.
(1994) designed an adaptive sliding controller
which does not require computation of the
regressor matrix, but some critical bounded time
functions are to be determined to have bounded
tracking error performance. Yuan and Stepanenko
(1993) suggested an adaptive PD controller for
flexible joint robots without using the high-order
regressor, but the usual regressor is still needed.
Su and Stepanenko (1996) designed a robust
adaptive controller for constrained robots without
using the regressor matrix, but bounds of some
system dynamics should be available. Huang et al.
(2006) proposed an adaptive controller for robot
manipulators without computation of the
regressor matrix.
In this project, we design a regressor-free
adaptive control strategy for the rigid robot
manipulators with consideration of the actuator
dynamics. Significant performance improvement
can be seen in the simulation results to verify the
efficacy of the regressor-free design.
2. Controller Design
In this section, we are going to derive
adaptive controllers for the rigid-link
electrically-driven robot
HiqgqqqCqqD  )(),()(  (1a)
uqKRiiL   b (1b)
where nq is a vector of generalized
coordinates, )(qD is the nn inertia matrix,
qqqC ),( is the n-vector of centrifugal and
Coriolis forces, g(q) is the gravitational force
vector. ni is the vector of motor armature
currents, nu is the control input voltage,
nnH is an invertible constant diagonal
matrix characterizing the electro-mechanical
conversion between the current vector and the
torque vector, nnL is a constant diagonal
matrix of electrical inductance, nnR
represents the electrical resistance matrix, and
nn
b
K is a constant matrix for the motor
back-emf effect. Inclusion of the actuator
dynamics greatly increases the system order
which gives large impact on the complexity of
the controller design; especially, when the system
contains uncertainties and disturbances.
Here,We firstly consider the case when all
robot parameters are known, and then the
regressor-based adaptive controller is derived if
the robot parameters are not available. Finally, a
4and Kb, respectively. For convenience, let use
define
nnTT
b
TT
i
nnTT
b
TT
i
nTTTT
d





3
3
3
]ˆˆˆ[ˆ
][
][
KRLp
KRLp
qiiφ 
Therefore, the controller (12) becomes
ic
T
i eKφpu ˆ (13)
Substituting (13) into (1b), we may have the
dynamics in the current tracking loop
φpeKeL Tiici ~ (14)
where iii ppp ˆ~  . To proof the closed loop
stability and to find appropriate update laws, let
us consider the Lyapunov-like function
candidate
)]~~(~~[
2
1
ii
T
i
T
i
T
i
T TrV pΓppΓpLeeDss  (15)
where rrΓ and nni 33 Γ are positive
definite matrices. Along the trajectories of (11)
and (14), the time derivative of V is
)]ˆ(~[)ˆ(~ Tiii
T
i
TT
ic
T
ii
T
d
T
Tr
V
φepΓpsYpΓp
eKeHessKs




(16)
The update laws can thus be picked as
T
iii
T
φeΓp
sYΓp
1
1
ˆ
ˆ






(17)
Therefore, (16) can be further written as
0][ 



i
T
i
TV
e
s
Qes (18)
Equation (18) implies that s and ei are
uniformly bounded and square integrable. Their
time derivatives can also be proved to be
bounded. Hence, asymptotic convergence of s
and ei can be obtained by the Barbalat’s lemma.
This implies dqq and dii as t .
Remark: Realization of controller (13) and
update law (17) needs to know the time
derivative of the desired current which implies
the need for the joint acceleration feedback and
the time derivative of the regressor matrix. All
of these requirements will be eliminated in the
following design of the FAT-based
regressor-free adaptive controller.
2.2 Regressor-free Adaptive Control
Now, let us consider the case when D, C, g,
L, R and Kb are not available, and qis not
easy to measure, we would like to design a
desired current di so that a FAT-based adaptive
controller u can be constructed without using the
regressor matrix to have dii which further
implies convergence of the output error as desired.
Instead of (6), let us consider the desired current
di in (10) as
)ˆˆˆ(1 sKvCvDgHi dd    (19)
The dynamics of the output tracking loop can
thus be found as
)ˆ()ˆ()ˆ(
)(
ggvCCvDD
iiHsKCssD



 dd (20)
If a proper controller u and update laws for Dˆ ,
Cˆ and gˆ can be designed, we may have
,dii ,ˆ DD CC ˆ and gg ˆ so that (20)
can give desired performance. Here, according to
(4), let us select the control input to be
iceKfu ˆ (21)
where fˆ is an estimate of the function
qKRiiLqiif  bdd ),,( . Substituting (21)
into (1b), we may have the dynamics of the
current tracking loop
ffeKeL  ˆici (22)
If an appropriate update law for fˆ can be
designed, we may ensure dii as t . Let
us apply the function approximation
representation for D, C, g and f as
fff
ggg
CCC
DDD
εzWf
εzWg
εZWC
εZWD




T
T
T
T
(23)
where ,DW ,CW ,gW and fW are weighting
matrices, ,DZ ,CZ ,gz and fz are matrices of
basis functions, and )(ε are approximation error
matrices. Using respectively the same set of basis
functions, the corresponding estimates can also
be represented as
ff
gg
CC
DD
zWf
zWg
ZWC
ZWD
T
T
T
T
ˆˆ
ˆˆ
ˆˆ
ˆˆ




(24)
then equation (20) and (22) becomes
6performance would, of course, be unsatisfactory
which will be presented in case 2. In the last
case, we consider the same configuration in
case 2, but with improvements in the tracking
performance via controller gain adjustments. It
is seen that although the tracking error can be
limited to some range, the control effort would
become impractically huge. Hence, we may
arrive at a conclusion later that consideration of
the actuator dynamics is very important if good
performance is required.
Case 1: Controller for EDRR applied to
EDRR: The controller in (21) is applied with
the gain matrices
)50,50(
)10,10(
)20,20(
diag
diag
diag
c
d



K
Λ
K
,
The initial value for the desired current can be
found by calculation as
T
d ]3570.35498.1[)0()0( ii
The 11-term Fourier series is selected as the
basis function for the approximation. The initial
weighting vectors for the entries are assigned as
111
111
111
111
111
111
111
111
]000[)0(ˆ)0(ˆ
]000[)0(ˆ)0(ˆ
]001.0[)0(ˆ
]0005.0[)0(ˆ)0(ˆ
]0005.0[)0(ˆ
]001.0[)0(ˆ
]0005.0[)0(ˆ)0(ˆ
]0005.0[)0(ˆ
21
21
22
2112
11
22
2112
11
















T
ff
T
gg
T
C
T
CC
T
C
T
D
T
DD
T
D








ww
ww
w
ww
w
w
ww
w
The gain matrices in the update laws are
22
1
22
1
44
1
44
1
100
100
IQ
IQ
IQ
IQ
f
g
C
D








The approximation error is assumed to be
neglected, and the -modification parameters
are all zero. Figure 1 shows the tracking
performance of the robot endpoint and its
desired trajectory in the Cartesian space. It is
observed that the endpoint trajectory converges
smoothly to the desired trajectory, although the
initial position error is quite large and most
plant parameters are uncertain. This justifies the
effectiveness of the consideration of the actuator
dynamics when high performance control is
required. The control efforts to the two joints are
reasonable that are presented in Figure 2.
Case 2: Controller for RR applied to EDRR. The
purpose of using the same set of parameters is to
have an effective comparison. In the following
figures we may observe that the controller
designed for RR is not able to give acceptable
performance to an EDRR under the conditions
when the actuator dynamics is important such as
the fast motion trajectory tested here. Figure 3
shows that the endpoint motion does not
converge to the desired trajectory. Figure 4
presents the motor current which is impractically
large.
Case 3: Same as case 2 but with adjusted control
parameters. Select the gain matrices as
)100,100(
)200,200(
diag
diagd


Λ
K
22
1
44
1
44
1
01.0
01.0
IQ
IQ
IQ
g
C
D






The Cartesian space tracking performance in
Figure 5 shows significant improvement
(compared with Figure 3), but the tracking error
is still large (compared with Figure 1). The motor
current shown in Figure 6 is still unacceptably
large.
Conclusions
In this project, we consider the adaptive
control of rigid robots in the free space. A
regressor based adaptive controller is derived first.
Since the computation of the regressor matrix is
tedious in general; a regressor-free adaptive
controller is derived based on the function
approximation technique. Finally, a regressor-free
adaptive controller is derived with consideration
of the actuator dynamics. The closed loop
stability of the system has been proved with
rigorous mathematical derivations, and the
feasibility of the proposed controller is justified
to have good performance.
References
A. Abdallah, D. Dawson, P. Dorato and M.
Jamishidi, “Survey of Robust Control for Rigid
Robots,”IEEE Control System Magazine, vol. 11,
8Figure 2 Control efforts in Case 1
Figure 3 Robot endpoint tracking
performance in the Cartesian space. It can be
observed that the endpoint motion does not
converge to the desired trajectory in Case 2
Figure 4 Motor currents go to impractically
large values after 1.8 seconds in Case 2
Figure 5 Robot endpoint tracking performance
in the Cartesian space in Case 3
Figure 6 Motor currents go to impractically
large values in Case 3
