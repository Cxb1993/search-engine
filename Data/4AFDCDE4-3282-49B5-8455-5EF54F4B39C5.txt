a Facebook application. With the authored declaration 
from user of this app, it then will collect user｀s 
detail information and interest etc... ,convert them 
into semantic format and store it in the Resource 
Description Framework (RDF) text file. Finally 
forward it to the database, as the form of one 
triple, which later provide the source for 
information searching work. Throughout the amount of 
searching result by this application, user can 
accurately acquire the requested information related 
to the intended-to-earn information. The list to 
display will be decided by the priority customed by 
designer. The advantage of this system is that user 
can make a combination between more than two key 
words at the same time for doing searching work. 
After received key words from user, the system will 
automatically operate the matching and searching work 
within its database and pick up suitable information 
that will be further to user as the searching result. 
Nevertheless, the RDF-format output of this system 
will also be a good resource that could be shared 
with other templates. 
英文關鍵詞： Semantic technology、Semantic search tool、Social 
Network、Facebook Application、FOAF 
 
 2 
 
 
摘要 
本研究計畫使用語意技術(semantic technology)分析 Facebook(FB)社群網站
上的資料，透過使用 Facebook 這個平台來實作語意技術的相關應用程式，並發
展一個多人的共同朋友與興趣的語意檢索工具(semantic search tool)。社群網站是
網路的潮流，使用人數不斷增加，也創造出大量的資訊與相當雜亂的資料，而資
料本身也被社群網站的平台給限制住了，藉由語意技術將社群網站上的資料變成
可以被其他平台所共享，是本計畫研究的目的。透過最多人使用的社群網站
Facebook，設計一個 FB應用程式，提供給 Facebook 用戶使用，使用者授權為前
提，得以存取該用戶的基本個人資料、興趣......等相關資料，動態把資料轉換成
語意格式，存成資源描述框架(Resource Description Framework，RDF)文件檔，然
後再匯入資料庫，以 RDF三元素(Triple) 方式做儲存，做為本計畫檢索工具的查
詢項目來源。此語意檢索工具，針對「多人的共同朋友與興趣」為檢索主軸，填
入要檢索的喜好項目，可以填入數個一起檢索，檢索工具會到資料庫進行分析且
檢索有這些喜好的人按照興趣數列出。除此之外，應用程式所匯出的 RDF檔案，
將會存在我們的伺服器，可以被其他平台分享。 
 
關鍵字：語意技術、語意檢索工具、社群網站、Facebook 應用程式、FOAF 
 
 III 
 
目錄 
一、簡介........................................................................................................................ 1 
二、研究目的................................................................................................................ 2 
三、文獻探討................................................................................................................ 2 
3.1 語意網............................................................................................................. 2 
3.1.1知識本體............................................................................................... 5 
3.1.2 RDF & RDFS ........................................................................................ 6 
3.1.3 OWL ..................................................................................................... 7 
3.1.4 FOAF .................................................................................................... 9 
3.1.5 SPARQL .............................................................................................. 10 
3.2 社群網站....................................................................................................... 11 
3.3 語意搜尋引擎............................................................................................... 12 
四、研究方法.............................................................................................................. 18 
4.1 開發環境需求............................................................................................... 18 
4.1.1 執行需求環境.................................................................................... 18 
4.1.2 開發環境需求.................................................................................... 18 
4.2 研究方法與步驟........................................................................................... 19 
4.3 使用教學....................................................................................................... 23 
4.4 程式碼........................................................................................................... 27 
4.4.1 Autocomplete & SPARQL語法 ......................................................... 27 
4.4.2尋找共同興趣的所有使用者............................................................. 27 
五、結果與討論.......................................................................................................... 29 
六、參考文獻.............................................................................................................. 30 
七、附錄...................................................................................................................... 31 
7.1 匯出的 RDF檔案實例 .................................................................................. 31 
7.2 計畫已發表之論文列表................................................................................ 33 
 
 
 
 
  
 2 
 
二、研究目的 
我們預期開發一個 Facebook 語意檢索工具，以使用者為導向的社群網
站資料語意化建構與分析，從尋找多人共同朋友與興趣的角度出發，發展一
個社群網站結合語意技術的應用。此應用程式，提供給 Facebook 用戶使用，
隱私權機制下，經過使用者同意，存取該使用者之基本個人資料、興趣，把
資料轉換成語意格式，存成 RDF檔，然後再匯入資料庫，以 RDF 三元組
( Triple) 方式做儲存，做為本計畫檢索工具的查詢項目來源，檢索項目以多
人的共同朋友與興趣為主軸，填入要檢索的喜好項目，可以同時填入數個項
目，檢索工具會到資料庫進行分析且檢索有這些喜好的人按照興趣數列出。
除此之外，使用者的 RDF檔會存放在伺服器端，能達到語意網的資料共享、
整合，而可被用到其它應用上。 
1. 希望能發展出一個能夠將 Facebook 個人資料、興趣等社群資料語
意化的應用程式。 
2. 利用應用程式取出的語意格式資料來實作語意檢索工具，讓使用者
可檢索共同朋友的喜好項目。 
3. 語意化過後的檔案，將能夠擴展到其它平台上應用，達到資料共享、
整合。 
三、文獻探討 
3.1 語意網 
語意網 (Semantic Web) 是由全球資訊網聯盟（World Wide Web 
Consortium，W3C）的發明人 Tim Berners-Lee在 1998年提出的一個概
念[4]。 
全球資訊網（World Wide Web，WWW）的基礎建設是由URI、HTTP、
HTML所組成，講究的是文件連結，然而人們瀏覽網頁時，在乎的是文
件裡的東西(Web of Things)[5]，例如，當你在團購網站(文件)上購物時，
你注意的是商品的相關資訊，像是商品用途、規格、價錢(東西)；更明
顯的例子是，當你使用搜尋時，搜尋出來的結果是一個個有相同關鍵字
的網頁連結(文件)，但是這些連結通常都是數量非常多且未經整理過，
有時候還可能因為不同領域、不同時代，一個詞有不同用法，之所以搜
尋出來的結果還會出現與你所要查詢的不相關，而且你想找的東西沒有
出現，所以你還要點進去連結，瀏覽是否有你想要的資訊(東西)。依目
前的情況來看，當我們把網頁(文件)放到網路上某一端，而網路只是文
件的傳送者，對文件其中的資訊不了解，也不能自動運用，也因為如此，
單純的文字連結，常常無法搜尋到最符合使用者需求的資訊。而語意網
的概念，就是要解決這些問題。 
語意網是一個能理解人類語言的新網路內容形式，除了能夠理解人
類的語言，還能讓人與電腦之間的交流就好像人與人之間交流一樣輕鬆。
語意網如同是一個巨型的大腦，不但能夠理解詞語和概念，而且還能夠
 4 
 
將 triples 的 RDF 資料模組型態轉換成各種的 Serialization formats 格
式。 
RDF Store是一個資料庫被用來儲存、取得 triple的資料格式。除了
擁有與一般資料庫相似的功能，RDF Store擁有額外的能力去合併來自
多個來源的資料。 
RDF Query Engine 與 RDF Store息息相關，使用一個結構化的查詢
語言，提供了能力從 RDF Store中取得資訊。 
Application是一個應用程式，可以透過這些資料作一些處理；分析、
使用者之間的互動、存檔 … 等等。必須透過一些程式語言去達成這些
能力，透過 RDF query engine去存取這些 RDF store，架構圖如圖 2。 
 
圖 2、應用程式擁有一個資料庫，透過 Query Engine，去對資料庫進行操作。 
 
綜合以上，應用程式要透過一個 RDF Query Engine去進行操作 RDF 
Store，RDF Store將網頁上的頁面、電子表格、表單，資料庫等等存在
網路上的各種資料格式，透過 Converters and Scrapers 轉換進 RDF Store
之中進行合併，並利用 Parser and Serializer 將資料透轉換成 RDF格式的
檔案，並隨時進行更新，使得 RDF資源可以被共享使用。由 RDF 
Parser/Serializer、 RDF Store、RDF Query Engine、Application 所組合而
成的理想語意網應用程式之架構圖如圖 3。 
 6 
 
知識本體在語意網中是很重要的角色，而它的建置決定了語意網裡
的知識架構，一般而言，建構知識本體之步驟主要有下列八項[7][9]： 
1. 決定領域和範圍。 
2. 考慮再使用已存在的知識本體。 
3. 列舉項目，匯集重要的詞彙。 
4. 定義分類。 
5. 定義類別屬性。 
6. 定義屬性之片面(facets)。 
7. 定義樣立、建議知識節點。 
8. 檢查異常 
  
3.1.2 RDF & RDFs 
RDF(Resource Description Framework，中文為資源描述框架 )是
W3C 語意網標準的資料模型(data-model)，用來描述網路資源的內容與
架構，是一種普遍的方法，透過多種的語法格式，實做在網頁的資源上，
來處理概念性的描述、模組的資訊。在 RDF 中的術語中，他的表示方
式稱為 Triple(三元組、三元素)，擁有主詞 Subject、謂詞 Predicate、受
詞 Object，這三項元素，主詞表示為一個資源，謂詞用來敘述主詞和受
詞之間的關係，使用這種表示方式，使 RDF 容易用於典型表示法 EAV
（Entity–attribute–value model）、物件導向設計（Object-oriented design）。 
World Wide Web目前正朝著，軟體可以自動地儲存、交換和使用機
器可以閱讀的資訊，分散式的分佈在世界各地的網頁上，反過來讓使用
者在資訊的處理上，達到更高的效率和準確性，而這種 RDF 用來描述
資源的方式，正是 W3C 語意網正在發展的主要元件。並透過 RDF的簡
單資料的特性，和不同模組（model disparate）、抽象概念的能力，促使
RDF越來越多使用於知識管理相關領域的應用上。 
RDF作為語意網的基礎，利用此種訊息格式，將分散於網路上的資
料，撰寫成一種可以共享的格式，跨越網頁與網頁之間的隔閡，使網頁
與網頁之間可以產生通訊，彼此分享既有的資料和資源，並可以從多種
的來源中，合併這些資料。RDF 所敘述的一個資源，被成為一個節點
（node），透過 URI的方式，同一個 URI存在於不同的網頁中，視同同
一個節點。一個被縮寫的 URI 稱為 qnames，qnames 包含了兩個部份
namespace、identifier，以一個:作為分隔，例如：foaf:name。 
RDFs (Resource Description Framework Schema，RDF Schema，資源
描述框架基模)，是一個類別的集合，使用 RDF 可擴展性的知識表現語
言，提供基本的元素去描述知識本體，亦被稱為 RDF 的詞彙庫，目標
為結構化 RDF 資源，這些資源可以被儲存於 Triplestore[10]，並透過
SPARQL查詢語言去使使用。 
 8 
 
<owl:Restriction> 
<owl:onProperty rdf:resource="P" /> 
<owl:someValuesFrom rdf:resource="C" /> 
</owl:Restriction> 
 
   allValuesFrom 
產生一個範圍，只要是 Property P，全部的 value都是來自 C。 
<owl:Restriction> 
<owl:onProperty rdf:resource="P" /> 
<owl:allValuesFrom rdf:resource="C" /> 
</owl:Restriction> 
 
owl:hasValue 
產生一個範圍，只要 Property P，全部的 value 是 V。 
<owl:Restriction> 
<owl:onProperty rdf:resource="P" /> 
<owl:hasValue rdf:resource="V" /> 
</owl:Restriction> 
 
Restricted Cardinality 
OWL提供了一種方法去限制 Property的 value，限制 value屬性，
以及他的上限 owl:maxCardinality、下限 owl:minCardinality。 
Complex Classes  
OWL提供了額外的建構方法，去形成類別；有基本的集合操作，
包含：聯集 owl:unionOf、交集 owl:intersectionOf、補集或稱為差集
owl:complementOf；還有列舉，使得類別的擴展，可以被明確的聲明為
「其中之一」owl:oneOf；有可能可以斷言類別是不相交的
owl:disjointWith。 
<owl:intersectionOf rdf:parseType="Collection"> 
    <owl:Class rdf:about="#Wine" /> 
    <owl:Restriction> 
      <owl:onProperty rdf:resource="#hasColor" /> 
      <owl:hasValue rdf:resource="#White" /> 
    </owl:Restriction> 
  </owl:intersectionOf> 
  
 10 
 
 
圖 4、對 FOAF Vocabulary Specification 0.98 所表現出的關係畫出的關聯圖 
 
3.1.5 SPARQL 
SPARQL(SPARQL Protocol and Query Language)是一種 SQL-like語
言，用於 RDF 的查詢和協定，由 RDF Data Access Working 
Group(DAWG)of World Wide Web 聯盟所定義的標準，同時也是語義網
 12 
 
概念是使得每個人都能有互相交流的平台，也因為如此，Web 2.0的興
起帶來社群網站的熱潮。 
社交網絡服務(Social Network Service，SNS)的核心價值在於提供使
用者與他人進行各種聯繫、交流的互動通路，如電子郵件、即時訊息服
務等溝通，通過朋友展延將訊息擴散，因此網站內的各個功能，必須符
合使用者需求，將相關訊息正確地傳遞，才能達到最佳化的社交互動最
佳化。  
多數社交網路會提供多種讓使用者互動起來的方式，早期有電子佈
告欄、討論區、新聞群組等，網站服務興起後，社群網路的服務網站變
成最普遍的線上社群的形式。使用者透過聊天室進行交流；透過部落格
與維基百科建立的個人首頁來分享喜愛的資訊，並與朋友間相互連結、
分享與共創，使得人人皆可在網路發聲，在網上聚眾，發表文章、網上
日誌、相片、錄像分享，早已成為許多人每天的生活的一部分，互相影
響著現實生活中人們的思想、意識、文化、性取向等。社交服務網站的
發展驗證了「六度分隔理論」（Six Degrees of Separation），即「人際關
聯脈絡方面你必然可以透過不超出六位中間人間接與世上任意先生女
士相識」。個體的社交圈會不斷地擴大和重疊並在最終形成大的社群網
路。  
2002 年至 2004年間，世界上三大最受歡迎的社群網路服務類網站
是 Friendster、MySpace、Bebo。在 2005年之際MySpace 成為了世上最
巨大的社群網路服務類網站。傳聞當時其頁面存取量超越了作為著名搜
尋引擎的 Google。2006 年第三方被允許開發基於 Facebook 的網站 API
的應用，使得 Facebook 隨後一躍成為全球使用者量增長最快的網站。
眾多網站隨後開始仿效開發自己網站的 API。  
這樣的社群網路，是一個以人為本、以人為操作體、亦以人為接受體
的環境，是網際網路使用者互動後，產生的一種社會群體。一群人在網路
上從事公眾討論，經過一段時間，彼此擁有足夠的情感後，所形成人際關
係的網絡。社群網路有以下四種特質：1.表達的自由；2.缺乏集中的控制；
3.多對多的傳播；4.成員出自於自願的行為。在加上人的語言模式，往往地
區、文化等等差異性，有許多不同的表達方式[11]。這樣的分散性與差異
性，造成了社群網路上的資料，即便代表的意義相同，卻可能會有差異
極大的語意結構，使得電腦無法進行準確的關聯性分析與連結[12]-[15] 。
隨之而來的是相關的研究也著手於社群的範疇。 
 
3.3 語意搜尋引擎 
在全球資訊網還沒被發明以前的 1990年初，已經有搜索工具存在
－－Archie、Gopher等，但只能用來查詢散佈在各個分散主機裡的文件。
而之後網際網路快速發展，有了Web 技術之後，搜索工具也有些進步，
 14 
 
 
圖 5、Bing中文版網頁上搜尋「how old is Tim Berners-Lee」的結果 
 
而用相同的字串在 Google英文版上面搜尋，搜尋結果如圖 6，因為
Google並不是把關鍵字搜尋替換掉，而是加入語意搜尋技術做結合，所
以還是會出現一般搜尋的結果。Knowledge Graph 可以讓使用者搜尋
Google知道的各種人物、地點或事物，包括地標、名人、城市、運動隊
伍、建築、地理景觀、電影、天體、藝術品等，並即時地將相關資訊顯
示出來[16]。圖 6中，紅色框框為新功能加入之後新增的區塊，左、右
框分別為問題解答和特別整理過的相關資訊，但是這兩個框框並不是搜
尋任何問題時都會出現 。  
 16 
 
 
圖 7、Wolfram Alpha對於「how is Tim Berners-Lee」的計算結果 
 
三個不同的網路搜尋/計算引擎，用相同的問題去做提問，因為所
用的技術不同，而結果有非常大的不同。現今時代知識量暴增，在網路
上的資源也大爆炸，根據 Netcraft 從 1995年 8月至 2012 年 7月的網頁
數量統計表如圖 8，尤其近年來網頁數增加的非常驚人，如何從
665,916,461 個網頁精確得找尋出想要的資訊，「了解你問的，給你想要
的」絕對是現今搜尋引擎能繼續保有市場的條件，而這非語意搜尋、知
識型引擎莫屬。 
 18 
 
當搜尋形式為(what, where, how, why, etc.)語意搜尋引擎應該理
智回應，需要注意的一點是搜尋引擎本身並不是回答問題，而是評
筆最合乎邏輯和相關的結果。 
7. 指向不間斷段落和最相關句子的能力 
不同於傳統搜尋文件，語意搜尋更能在一篇文件中，搜尋到相
關的段落。 
8. 自定義能力和組織進展 
每個搜尋應用程序都被連結到特定的業務目標，而部分細節並
不適用於一般的搜索心態，常規的方法”one size fits all”卻因缺乏進
步而限制住性能，語意搜尋則允許使用者依照不同情況來定制。 
9. 不依賴統計，用戶行為，以及其他人為方式的操作能力 
語意搜尋引擎依照分析頁面的內容、來源、作者、以及其他可
信資料來顯示相關的結果。依照鏈結、使用者行為/標籤、以及其他
人為的方式，當這些資料有用時顯示的結果可能會是正確的，但這
些資料卻是在語意搜尋的範圍之外。只有透過非人為的輸入，語意
搜尋的技術才會更具有普遍性且適用於任何情況。 
10. 自我檢測的能力 
語意搜尋引擎應該產生相關分數來顯示匹配的程度，因此搜尋
引擎則能找到性能較差且自動標記需要改善的地方。 
 
四、研究方法 
4.1 開發環境需求 
4.1.1執行需求環境 
Client 端： 
Google Chrome 21 版以上瀏覽器 
IE 8版以上瀏覽器 
作業系統不限 
 
Server 端： 
Linux 電腦作業系統  
MySQL 5.1 版以上資料庫系統  
Arc 2版本以上之資源描述框架系統(RDF System) 
 
4.1.2開發環境 
軟體環境： 
Facebook SDK for JavaScript & PHP 之開發套件 
硬體環境： 
Linux 電腦作業系統 
 20 
 
 
圖 9、研究步驟的階段架構圖 
 
由於 Facebook 並沒有提供相關的語意技術支援，只有提供支援
JavaScript、PHP、Android 與 iOS 的 SDK，我們選擇了 JavaScript 和 PHP
的 SDK來完成我們將 Facebook 資料轉成語意格式的應用程式。 
然而依照現今的網頁伺服器、資料庫，並未將相關的語意工具整合
融入，所以我們決定，將藉由現有的 RDF System 去實作，將 RDF 檔
案以 Triple 格式去儲存 Facebook 的大量資料到資料庫中。從
http://www.w3.org/RDF/網站中，見到許多現今正在開發的工具，而 RAP、
ARC2、Jena、4Store是比較熱門的工具，在這之中 ARC2 是比較成熟並
持續在發展中的工具。於是我們選擇了 ARC2 做為我們將 RDF 檔案分
析成 Triple格式存入資料庫的工具。 
簡單介紹 ARC2 工具。ARC2 是一個基於 LAMP system（Linux、
Apache、MySQL、PHP），一個整合型的 RDF System，包含了多種的語
法分析器，如：RDF/XML, N-Triples, Turtle, SPARQL + SPOG, Legacy 
XML, HTML tag soup, RSS 2.0, Google Social Graph API JSON…，並擁有
網頁閱讀器，支援 Proxies、Redirects、Content Negotiation，將網頁內的
RDF內容匯入，將 RDF資料儲存進 MySQL 的資料庫內[19]。 
使用 ARC2 可以透過兩種方式：1. ARC2 所產生的網頁控制介面
SPARQL endpoint 2. 透過 Command Line 的方式去使用 ./cli.php，以上
兩種方法皆可以將一個 RDF 檔案格式的檔案、網頁內含有 RDF 文件，
 22 
 
 
圖 11、ARC2 RDF Store in MySQL table[20] 
 s ：the subject value (a URI, Bnode ID, or Variable) 
 p ：the property URI (or a Variable) 
 o ：the subject value (a URI, Bnode ID, Literal, or Variable) 
 s_type："uri", "bnode", or "var" 
 o_type : "uri", "bnode", "literal", or "var" 
 o_datatype ：a datatype URI 
 o_lang：a language identifier, e.g. ("en-us") 
 
圖 11 中共有 g2t, triple, id2val, a2val, o2val, setting這些 table，去描
述一個 RDF Store，每一項被匯入的 RDF entity在 ARC2 使用變數名稱
g，g含有很多的 triple，每一個 triple變數名稱為 t，在 g2t 中，以 g和 t
的 ID來表示其關係式；g和 t 的實際的值，須經過 id2val，來查詢其 id
所對映的 val 值；每一個 triple的 subject, property, object，都描述於 triple
這個 table中，以 s, p, o變數名稱做表示，其內容只是 ID，須經過 id2val, 
s2val, o2val，來查詢對映的 val 值。 
 24 
 
步驟三：應用程式將會存取你的基本資料，並做成 RDF 檔案提供
查詢興趣。 
 
步驟四：進入成功後顯示畫面如圖 14。同時可以輸入你想搜尋的
興趣。 
 
圖 14、進入應用程式後的畫面 
 
 
 26 
 
範例二：如果同時選取多個興趣查詢，結果關於這些人感到有興趣
的數量有了變化，如圖 16。其中 Ting-Han Su 在選取的興趣”阿福 Afu
樂福星球 Official”、”FHM Taiwan 男人幫國際中文版”以及”台東大學資
工學系”中，對於其中兩個有興趣，而 HsiHo Huang也是對其中兩個有
興趣，馬俊鵬則只有一個。 
 
圖 16、輸入多個興趣檢索之後的結果 
  
 28 
 
4.4.2尋找共同興趣的所有使用者 
以下 SPARQL語法(二)是當使用者輸入檢索項目後，執行尋找共同
興趣的所有使用者的語法。 
 
SPARQL語法(二)、尋找共同興趣的所有使用者的語法 
 
SPARQL語法(二)說明： 
查詢每一個檔案?rdf的使用者，留下擁有興趣 interest1 或興趣
(interest2 的使用者?person，並利用 count(?interest)計算出每一個使
用者，所擁有這些的興趣數。 
 
在 這 個 rdf 檔 案 中 ， 主 要 的 entity 是 一 個
foaf:PersonalProfileDocument個人資料文件，主題為一個 foaf:Person
人擁有 foaf:name, foaf:title, foaf:givenname, foaf:family_name, 
foaf:mbox_sha1sum這些屬性，擁有線上的帳號 foaf:OnlineAccount，
帳號名稱為 foaf:accountName，感興趣的主題為 foaf:Docuument，
這個主題的名稱為 foaf:title，以及這個人擁有很多認識的人
foaf:Person，此 RDF檔案架構以 UML圖型表示如圖 18。 
PREFIX foaf: <http://xmlns.com/foaf/0.1/> 
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
 
SELECT ?name count( ?interest ) AS ?weight WHERE { 
  GRAPH ?rdf { 
        ?rdf foaf:primaryTopic ?person . 
        ?person foaf:name ?name . 
        ?person foaf:interest ?interest . 
        ?interest dc:title ?interest_name . 
        FILTER (  
        ( regex ( ?interest_name, "interest1" ) ) 
        || ( regex ( ?interest_name, "interest2" ) ) 
        ) 
  } 
} GROUP BY ?person ORDER BY DESC(?weight) LIMIT 500 
 30 
 
六、參考文獻 
  [1]  Wikipedia, Facebook , http://en.wikipedia.org/wiki/Facebook  
  [2]  Yahoo! Finace, Number of active users at Facebook over the years, 2012, 
http://finance.yahoo.com/news/number-active-users-facebook-over-years-
214600186--finance.html 
  [3]  Wikipedia, Timeline of Facebook , 
http://en.wikipedia.org/wiki/Timeline_of_Facebook 
  [4]  Wikipedia , Semantic web, http://en.wikipedia.org/wiki/Semantic_Web 
  [5]  Wikipedia, Web of Things, http://en.wikipedia.org/wiki/Web_of_Things 
  [6]  Sience American  Tim Berners-Lee, James Hendler, Ora Lassila, 
semantic web, 2001 年 5 月。 
  [7]  Grigoris Antoniou, Frank van Harmelen, A Semantic Web Primer, 2004 
  [8]  Berners-Lee & Fischetti, Weaving the Web, 1999 
  [9]  陳昭珍,The Development Trend of Ontology and Knowledge 
Organization 
  [10]  Wikipedia, Triplestore, http://en.wikipedia.org/wiki/Triplestore 
  [11]  A. Hanneman and M. Riddle, "Introduction to social network methods", 
http://www.faculty.ucr.edu/hanneman/nettext/, 2005  
  [12]  S. Wasserman, K. Faust, D. Iacobucci, and M. Granovetter. Social 
Network Analysis: Methods and Applications. Cambridge University 
Press, 1994.  
  [13]  M. Newman. Models of the Small World: A Review. Journal of Statistical 
Physics, 101:819–841, November 2000.  
  [14]  J. P. Scott. Social Network Analysis: A Handbook. Sage Publications, 2nd 
edition, 2000.  
  [15]  Mohsen Jamali and Hassan Abolhassani, "Different Aspects of Social 
Network Analysis", Proceedings of the 2006 IEEE/WIC/ACM 
International Conference on Web Intelligenc, pp. 66 – 72, Dec. 2006  
  [16]  Google 語意搜尋 Knowledge Graph 讓搜尋不再是字串, 
2012 ,http://mag.udn.com/mag/digital/storypage.jsp?f_ART_ID=390130 
  [17]  2012 Total Sites Across All Domains August 1995 - May 2012 
http://news.netcraft.com/archives/2012/05/02/may-2012-web-server-surve
y.html 
  [18]  Hakia 語意搜尋引擎, http://hakia.com/ 
  [19]  Arc2 https://github.com/semsol/arc2/wiki/ 
  [20]  Arc2, Internal-Structures, 
https://github.com/semsol/arc2/wiki/Internal-Structures 
  
 32 
 
    <foaf:OnlineAcount> 
    <foaf:AcountName>507751104</foaf:AcountName> 
  </foaf:OnlineAcount> 
  </foaf:acount> 
    </foaf:Person> 
  </foaf:knows> 
</foaf:Person> 
</rdf:RDF> 
  
 1 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：101 年 10月 日 
                                 
一、參加會議經過 
這次到加拿大參加第七屆未來資訊科技國際研討會 FutureTech 2012，身兼了三
個不同的角色：論文發表者、會議主持人(Session Chair)，與議程委員(Program 
Committee Member)，會議是在溫哥華素里地區的 Sheraton Vancouver Guildford  飯
店舉辦。 
這次的大會除了 FutureTech 2012主會議外，另有 8個 workshops 同時舉辦，
所以幾乎是把整個飯店給包了下來，兩天半的議程中除了 Keynote的時間外，都是
6個平行議程同時舉辦。 
第一天早上的議程，圍繞在晶片設計、短距離通訊、與網頁技術上，在 1-B 場
次剛好遇到來自臺灣工研院團隊的論文發表。簡單的午餐後，由韓國白石大學的
Shungmin Rho教授代表大會致開幕詞，便接著第一場的 Keynote。第一場 Keynote
計畫編號 NSC 100－2221－E－143－002－ 
計畫名稱 以使用者為導向的社群網絡建構與分析--子計畫六：結合語意網應用
的社群網絡(I) 
出國人員
姓名 
王忍成 
服務機構
及職稱 
國立臺東大學資訊工程學系助理
教授 
會議時間 
101年 6月 26日
至 
101年 6月 28日 
會議地點 加拿大溫哥華 
會議名稱 
The 7th FTRA International Conference on Future Information 
Technology (FutureTech 2012) 
發表論文
題目 
User-Centric Identification Management for Cross Realm Cloud and 
Ubiquitous Computing 
 3 
和水使他們更環保，比方說，減少的碳排放量。智慧建築則著眼於建築物傳感器的
監測應用，最後，講者用全球知名的標竿建築為例，包括加拿大，中國，德國，意
大利，馬來西亞，新加坡，西班牙，瑞典，台灣，阿拉伯聯合酋長國，美國和越南，
說明智慧建築與可持續設計的結合實現，其中也包含了臺北 101 大樓，還特別針
對了 101 大樓的防震監測與設計做了詳盡的說明。 
之後的 4-E 場次由我負責主持，其中共有 9篇論文發表，三篇來自臺灣(含我
自己的)、一篇來自大陸、一篇來自印度、另五篇來自韓國，其內容不在此贅述。
第五場時段安排的都是大會的 Workshop，因為這次並沒有參加，就稍事休息，晚
上是大會的晚宴，大會頒發了一些最佳論文獎、大會貢獻獎等等，主席也針對這次
的會務進行了簡要的摘要報告，這次共 266 篇論文投稿，錄取 92 篇，約占 34.5%。 
最後一天的活動多半也是 Workshop，儘在 6-C 場次聽了些資訊安全相關的議
題，因為要趕飛機的關係，便離開了會場。 
 
二、與會心得 
FutureTech 因為本身的歷史才 7 年左右的時間，又不是 IEEE、ACM 等主要
組織辦理的活動，還稱不上一個大型的研討會，但在大會限制論文接受率，並與 
Springer 合作出版會議論文(Lecture Note in Electronic Engineering) 的情況下，整體
水準還不差，加上與多個 Workshops 結合辦理，整體出席人數也拉到了四、五百
人，這是目前許多中小型研討會常見的模式，但前提是主辦單位的人力要充足。 
這次活動的地點，其實並不理想，雖然是在溫哥華，但素里的 Guildford 地區
在抵達溫哥華國際機場後，需轉 Skyline 捷運到市中心、再轉乘到 Surrey Central、
 5 
四、建議 
這次很感謝國科會的補助，讓此行可以順利，但補助款的額度如果能與實際花
費更接近些就更好了，畢竟以現階段 IT 領域的國際會議而言，報名費幾乎都要到 
US$500-700 之間，美加的機票 4-5 萬跑不掉，再加上簽證、生活日支與住宿等，
一趟實際花費都至少 7-9 萬元，扣除補助款對各人的負擔還是很大。 
另外一方面，國科會從前有研究彙刊的發行，彙整各領域的研究成果，如果可
以把這部份的資源與能量，轉換成國際學術期刊的方式發行，相信可以使國內學研
界的國際影響力提升不少。如果有機會的話，個人倒十分願意盡一己之力協助的。 
 
 
五、攜回資料名稱及內容 
Future Information Technology, Application, and Service 論文集一本。 
 
六、其他 
參加證明(掃描縮圖)： 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：王忍成 計畫編號：100-2221-E-143-002- 
計畫名稱：以使用者為導向的社群網絡建構與分析--子計畫六：結合語意網應用的社群網絡(I) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
