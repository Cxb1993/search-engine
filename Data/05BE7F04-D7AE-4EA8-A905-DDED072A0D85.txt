 2 
摘要 
同儕式網路由於具有高擴充性已成為媒體串流一新興解決方案，而其高擴充
性來自於儕點間彼此合作與貢獻。過去已有許多研究投注於同儕式媒體串流此一
議題，然而大部分研究都著重於如何有效率地利用各個儕點所貢獻的資源。至於
同儕式網路所特有的特質所引發的問題則有待解決，包含：非對稱性、異質性及
變動性。儕點的非對稱性網路連線限制了下游儕點資料的可得性，同時也使得儕
點的上傳及下載頻寬無法有效地被利用。儕點間不一致的下載頻寬使得儕點受限
於一既定的觀看品質，無法依據自身下載頻寬的大小來獲得自己所希冀的觀看品
質。而同儕式網路固有的變動性可能會造成某些儕點由於其父節點的離開而觀看
中斷。簡而言之，非對稱性、異質性及變動性等三項同儕式網路所具有的特質會
削減同儕式網路所帶來的效益並阻礙同儕式每體串流系統的推廣。在本計畫中，
我們打算利用多重描述編法此一技術提出一嶄新的同儕式媒體串流架構。藉由多
重描述編碼，伺服端可將一部影片編碼成多條串流(描述)，客戶端只要收到部分
的串流即可解碼觀看。因此，多重描述編碼允許精細逐級擴充(fine granular 
Scalability)。藉由此一特性，我們所提出的方法將能允許使用者依照自身下載頻
寬的大小獲得所期望的觀看品質，同時能充分利用各儕點的上傳及下載頻寬。 
 
關鍵詞：同儕式、媒體串流、非對稱性、異質性、變動性 
 4 
1. Introduction 
 
With the rapid advances in computing and networking technologies, there has 
been a dramatic proliferation in the demand from users for a variety of multimedia 
applications, especially for media streaming applications. Providing media content in 
a streaming manner allows users to watch the requested media content on the fly. 
More specifically, users are enabled to start playing what they have received before 
the requested content is completely downloaded into their local storage space. Such a 
play-while-downloading mode not only greatly shortens the waiting time that users 
experience before enjoying the requested media content, but also significantly reduces 
the storage requirement for users [1]. Streaming is an efficient means of disseminating 
media content especially when the media content is large-sized or users are equipped 
with a limited amount of storage space.  
 
In a typical media streaming system, a streaming server is set up, and equipped 
with a limited amount of forwarding bandwidth as well as a set of media items. Users 
are allowed to issue requests to select any one of the provided media items to watch. 
On receipt of users’ requests, the streaming server is required to ensure users a 
continuous playback of the requested media content. Media streaming can be further 
classified into two categories: 
 On-Demand Streaming: In an on-demand streaming system, the streaming 
contents are pre-recorded and pre-stored at the streaming server in their entirety 
before being made available to users, such as movies, music, videos and the like. 
In addition to the continuity requirement, the streaming server is required to 
provide the requested media contents in their entirety. In other words, the 
streaming server has to ensure users a complete and continuous playback of the 
requested media content. The main challenge of providing on-demand streaming 
services is how to efficiently provide the entirety of requested media contents for 
asynchronously arriving users. 
 Live Streaming: Not as in an on-demand streaming system, the streaming 
contents disseminated in a live streaming system are typically captured from live 
events on the fly, such as ball games and news. The primary characteristic 
distinguishing live streaming from on-demand streaming is the absence of the 
entirety requirement. For latecomers in a live streaming system, the missing 
initial part of the requested media content is irrelevant to the QoS they perceive 
and thus ignored. Users watch the requested media content from the point where 
they join. However, the end-to-end delay from the streaming server to users is 
 6 
capable of receiving the desired media stream may not have the sufficient 
uploading bandwidth to relay the received media stream to others. If it is the case, 
peers cannot cooperate in a cache-and-relay manner as expected and leaves their 
uploading bandwidth sitting idle. 
 Heterogeneous Downloading Capacities: In a P2P network, peers usually have 
various downloading capabilities, and thus may specify different quality levels 
for the same requested media. With a fixed-bit-rate stream, it is hard to meet 
each peer's individual demand on media quality. If the provided media is 
encoded as a high-quality stream with a large bit rate, bandwidth-lean peers will 
not be able to watch the provided video. On the other hand, if the provided video 
is encoded as a low-quality stream with a small bit rate so as to accommodate 
bandwidth-lean peers, peers that are bandwidth-rich and desire a high viewing 
quality will be limited to a poor viewing quality. From peers' perspective, they 
should be allowed to determine their viewing quality according to their 
individual downloading capability, instead of passively receiving the given fixed 
quality. 
 Dynamics: In general, peers are allowed to join and leave a P2P system at any 
time without any restriction and thus often lead to a high churn rate, especially in 
a P2P live streaming system. A peer's early departure may cause service 
interruption of other peers. Therefore, a failure recovery mechanism is necessary 
for affected peers to find new parent peers or even ask the server for subsequent 
media stream. An effective and efficient failure recovery mechanism is crucial to 
maintaining a reliable P2P streaming network. 
 Resource Utilization: The advantage of P2P networks is to aggregate resources 
of peers into a collective resource pool and delegate some of the server workload 
to other capable peers, thereby enhancing the system scalability. Nevertheless, 
the aggregated resources may be quickly used up or under-utilized if they are not 
properly managed. Therefore, the resources of peers must be carefully managed 
and efficiently utilized to increase the number of served users and prolong the 
life time of the P2P network. 
 
This project can be divided into two parts. In the first part, we intend to deal with 
the challenges caused by peers’ asymmetric access links, heterogeneous downloading 
capacities and dynamics, as well as to improve the system resource utilization in a 
P2P live media streaming systems. Accordingly, we propose a balancing scheme and 
a fine-grained balancing scheme, both of which use the recently emerging coding 
technique, Multiple descriptions Coding (MDC), in conjunction with multi-source 
downloading to tackle peers’ asymmetric access links, heterogeneous downloading 
 8 
conventional cache-and-relay scheme [23-25]. The primary characteristic 
distinguishing CoopNet from previous work lies in its attempt to enhance the 
robustness of the streaming services by means of MDC. In CoopNet, the streaming 
server encodes the streaming content into multiple descriptions using MDC and 
distributes these descriptions among peers. Each peer is expected to receive the 
required descriptions from as different parents as possible. With such a multi-parent 
transmission paradigm, peers are enabled to continue receiving parts of the streaming 
content and watching at a lower quality level even if some of their parents stop 
forwarding the streaming data due to either accidental failure or intentional departure. 
However, CoopNet suffers from the asynchronous arrivals and potentially inefficient 
peer resource utilization as most existing work based on the convention 
cache-and-relay scheme. For example, suppose that the provided video is encoded 
into multiple descriptions of the same bit rate r, and consider a peer pi receiving ni 
descriptions and having a buffer of size bi. In CoopNet, pi will cache all the received 
descriptions and its buffer will be saturated with the streaming content bi=( ni * r) 
time units later after its arrival. Afterwards, the initial parts of all the received 
descriptions will be squeezed out of the buffer by incoming streaming data and pi will 
no long be able to forward the entire video to any newly arrived peer in a pipelining 
manner. Therefore, the outbound bandwidth of pi tends to be leaved idle and the 
server will be burdened with more workload if peers subsequent to pi arrive too late, 
for example, in the case of non-peak times or unpopular videos. In performance study, 
we evaluate the performance of our proposed Dynamic Buffering scheme by 
comparing it with CoopNet to show how effectively the Dynamic Buffering scheme 
can address the asynchronous arrivals of peers and how much workload can be shifted 
from the streaming server to peers with the Dynamic Buffering scheme. 
 
4. Proposed Approaches 
4.1 The Balancing Scheme 
In the balancing scheme, the streaming server pre-encodes the provided video 
into m descriptions using MDC, denoted as Si (i = 1, 2, …, m). For simplicity of 
explanation, we assume hereafter that all the descriptions constituting the provided 
video are of the same bit rate and equally contribute to the quality of the decoded 
video, although it is possible to encode a video into a set of descriptions of different 
bit rates and unequal importance. Despite the assumption made here, the balancing 
scheme and fine-grained balancing scheme presented in this project can be easily 
adapted to the situation where the provided video is comprised of descriptions with 
 10 
maximum aggregated forwarding bandwidth should be selected. Similar to the 
selection of source peer of designated description, we choose the source peer with the 
largest forwarding bandwidth to provide the service. The above process is repeated 
until the desired number of descriptions is reached. 
 
In Fig. 1, an example is given to illustrate the join process of a new peer in the 
balancing scheme. In the example, the provided video is encoded into four 
descriptions, denoted as S1, S2, S3 and S4. There are 8 peers, P1, P2, …, P8 arriving in 
ascending order of indices. Their required quality and forwarding capacity are as 
shown in Table 1. Suppose that the first 7 peers, P1 to P7, has joined the system 
according to the balancing scheme and take P8 for example. Fig. 1(a) shows the 
description delivery topology in the system before P8 joins the system. In the figure, 
the four descriptions are represented by different line types. The line type of the outer 
edge of a circle indicates which description the corresponding peer is designated to 
forward. The server is denoted as P0 with no outer edge, which can provide all the 
four descriptions if it has available forwarding bandwidth. Fig. 1(a) also shows the 
aggregate forwarding bandwidth of each description and the number of potential 
supplying peers, denoted as Ri and Ki respectively. On receipt the request from P8, the 
server first determines which description P8 should be designated to forward as 
described before. From Fig. 1(a), it can be observed that S3 is the least available 
description since its aggregate forwarding bandwidth, R3, is 0, that is, no peer can 
supply S3. Therefore, the server chooses S3 as the one description P8 is designated to 
forward. Then, the server proceeds to determine which peer P8 should receive S3 from. 
Since the only one peer designated to forward S3, i.e. P1, has no available forwarding 
bandwidth, P8 has to rely on the server for the provision of S3. Since P8 require only 
one-description quality, it has achieved its specified quality after receiving S3 from the 
server, and thus there is no need for the server to allocate other non-designated 
descriptions for P8 to receive. The resulting delivery topology and updated summary 
of various descriptions are as shown in Fig. 1(b). From Fig. 1(b), it can be observed 
that the server spends 9-description bandwidth in total to accommodate all the 8 peers 
and there is 6-description peer forwarding bandwidth left. 
 
Table 1 An example of P2P live streaming. 
 
 12 
services, and extra server bandwidth is consumed. If we relax the restriction in the 
balancing scheme to provide finer-grained description balancing, i.e., the peer can 
forward whichever buffered descriptions instead of only one designated description, 
there is no doubt that the utilization of aggregate bandwidth on the P2P network can 
be further improved. Fig. 2 shows the resulting delivery topology when the 
fine-grained balancing scheme is applied in the same scenario as Fig. 1. With the 
fine-grained balancing scheme, the server consumption decreases to only 7 
descriptions and only 4-description peer bandwidth is left, which implies better peer 
bandwidth utilization. This example is used to show the advantage of relaxing the 
description provision restriction imposed on peers. More details on the fine-grained 
balancing scheme are given in the following section. 
 
 
Fig. 2 The final delivery topology and summary of various descriptions when the 
fine-grained balancing scheme is applied in the same scenario as Fig. 1. 
 
4.2 The Fine-Grained Balancing Scheme 
In the project, we assume that a video stream is encoded as m descriptions of the 
same rate and equal importance, and the server is responsible for allocating desired 
descriptions to peers. When a new peer, say Pk, wants to join a P2P streaming 
network, it contacts the server for streaming services by specifying its desired video 
quality and contributed forwarding bandwidth in terms of the number of descriptions, 
denoted as Qk and Bk respectively. Then, the server needs to determine which 
descriptions the new peer needs to receive to satisfy its desired video quality and 
which source peers to provide the streaming services. All the received descriptions 
must come from different peers. Those two selection problems are solved by our 
proposed fine-grained balancing scheme. A peer may contact the server for 
 14 
Ok. Let T denote the set of candidate source peers which can be computed by Eq. 4. 
 
:
{ | ,    }
x
j k j x
x c H
T j c H j O and B MAX B

                              (4) 
arg  min i
i T
j Q

                                                 (5) 
 
If there are more than one candidate source peer in T, i.e., |T| > 1,we select the 
one requesting the least number of descriptions as shown in Eq. 5. When a peer is 
chosen to forward a description to a new peer, its available forwarding bandwidth for 
each buffered description is reduced by one. Therefore, the reduction of forwarding 
bandwidth on the peer with the least number of requesting descriptions definitely has 
the least impact on the degradation of aggregate bandwidth of descriptions on the P2P 
network. On the other hand, if there is no available bandwidth for the chosen 
description, the new peer turns to the server for the provision of the description. The 
new peer is rejected if the server has no available bandwidth left. Fig.3 shows the 
pseudocode of determination of the received descriptions and source peers for a new 
peer. 
 
4.2.3 An Example of the Fine-Grained Balancing Scheme 
 
Fig. 4 and Fig. 5 show an example of the join process for a new peer. Assume 
that a video is encoded into four descriptions, S1, S2, S3 and S4 and there has been 5 
peers, P1, P2, P3, P4, and P5 sequentially joining the P2P streaming network with 
different quality requirements and forwarding bandwidth listed in Table 2. The 
aggregate forwarding bandwidths of S1, S2, S3 and S4 is 4, 3, 3 and 4 and the numbers 
of peers possessing description S1, S2, S3, and S4 are 2, 2, 3 and 2, respectively. Fig. 4 
shows the description delivery topology of the system and the summary of various 
descriptions before a new peer P6 joins. Assume that a new peer wants to join the P2P 
network, say P6, who requires one-description video quality and is willing to 
contribute 2-description forwarding bandwidth. Since S2 has the least forwarding 
bandwidth and the least number of possessing peers, it is chosen as the received 
description of P6. The set of candidate source peers contains only P4 because it has the 
most forwarding bandwidth and does not exist in the set of source peers of P6. Finally, 
P4 is chosen as a source peer for forwarding S2 to P6. Fig.5 shows the final schedule 
of P2P streaming after P6 joins. 
 16 
 
 
Fig. 4 The delivery topology of the system before P6 joins. 
 
 
Fig. 5 The delivery topology of the system after P6 joins. 
 
4.2.4 Failure Recovery for the Fine-Grained Balancing Scheme 
 
When a peer leaves the P2P network, regardless of graceful or unexpected 
disconnection, its child peers, if any, will lose descriptions forwarded by it. Such a 
failure of providing descriptions needs to be properly recovered in order to maintain 
the quality of services. In the fine-grained balancing scheme, from a child peer's 
perspective, the descriptions possessed by the failed source peer, say x, must be 
recovered to avoid the chain reaction if they were already forwarded to its child peers. 
In other words, all the peers having the same descriptions in its subtree, say DX, will 
lose those descriptions, too. Notice that the new source peer j for each recovering 
description cannot be in the subtree DX, i.e., jDX, to avoid so-called false loop. The 
failure recovery is similar to the process of determining the source peer for a new peer. 
For each recovering description, the peer with the largest forwarding bandwidth and 
 18 
 
4.3 Dynamic Buffering 
 
In the past years, there has been much work on providing on-demand streaming 
services in a P2P manner [3]–[7]. Most of them employ the cache-and-relay scheme 
[8], [9], which specifies that each peer has to cache the most recent video stream it 
receives in its buffers, and relay the cached stream to late-arriving peers with the same 
request in a pipelining manner if it still keeps the initial part of the video stream in its 
buffer. Fig. 8 shows an example illustrating the cache-and-relay scheme. To make 
clear the sequence of a video stream, a video is conceptually divided into a series of 
blocks, numbered from 1 to the length of the video according to their temporal 
position in the video. A peer’s buffer is represented as a concatenation of rectangles, 
each of which can accommodate a video block. In the example, there are three peers 
p1, p2 and p3 requesting the same video and arriving at time 0, 2, 5 respectively. Each 
peer, except for the first one, arrives when the preceding peer has not yet filled its 
buffer up and still keeps the initial part of the video. Therefore, each peer can receive 
the entire requested video from its preceding peer in a pipelining manner. With the 
cache-and-relay scheme, the workload of the system can be effectively shifted from 
the streaming server to other capable peers, and the streaming server can avoid 
spending its limited outbound bandwidth on delivering duplicate video streams to 
peers with the same request.  
 
 
Fig. 8 An example illustrating the cache-and-relay scheme. 
 
Based on the cache-and-relay scheme described above, the service capability of a 
peer depends not only on the amount of available forwarding bandwidth of the peer 
but also on whether the peer still keeps the initial part of the video stream in its buffer. 
For example, consider a peer, pi, arriving at time ti and equipped with a buffer capable 
of caching si time units of the requested video stream. The peer cannot serve any peer 
 20 
4.3.1 Basic Idea 
 
For simplicity of explanation, we assume there is only one video provided for 
users to select and watch, and the video is encoded into m descriptions of equal bit 
rate r, denoted as d1, d2, …, dm. Despite the assumptions made here, the Dynamic 
Buffering scheme presented in this project can be easily adapted to situations, where 
more than one video is provided and encoded into multiple descriptions of different 
bit rates. Similar to the conventional cache-and-relay scheme, the Dynamic Buffering 
scheme requires each peer to cache all the descriptions it receives until its buffer is 
filled up. Once the buffer of a peer is saturated with the streaming data, the peer is 
required to cease keeping one of the descriptions it receives and to discard all the 
cached streaming data of the description to make room for accommodating 
subsequent streaming data of the other descriptions. To avoid disrupting the video 
playback at a peer’s children, the description a peer is allowed to cease keeping and 
discard is restricted to the ones that have not been forwarded to any peer. Each peer is 
required to repeat the above process every time its buffer is filled up with the 
descriptions it keeps and until there is no description allowed to be discarded or only 
one description left in its buffer. Fig. 9 shows a general example to illustrate the 
Dynamic Buffering scheme. In Fig. 9, a peer pi arrives at time ti and receives ni 
descriptions from other peers and/or the server. Suppose pi is equipped with a buffer 
of size bi. The buffer will be filled up with the streaming data of the ni descriptions at 
time ti + bi / (ni * r) as shown in Fig. 9(a). Instead of trying to keep but eventually 
losing the initial parts of all the ni descriptions as in the conventional cache-and-relay 
scheme, pi will choose one description to discard so as to preserve the integrity of the 
other (ni – 1) descriptions. Note that ceasing to keep and discarding one description 
will not degrade pi’s viewing quality. pi still enjoys ni-description viewing quality 
since it merely chooses not to cache one of the ni descriptions it receives after 
playback. As shown in Fig. 9(b), after sacrificing one description, pi is able to 
continue keeping the initial parts of the other (ni – 1) descriptions until time ti + bi / (ni 
* r) + (bi / (ni * r)) * r / ((ni – 1) * r) = ti + bi / ((ni – 1) * r), where (bi / (ni * r)) * r 
indicates the room made by discarding one description and (bi / (ni * r)) * r / ((ni – 1) 
* r) the additional time period for which the other (ni – 1) descriptions can be 
preserved. If no peer arrives and requests descriptions from pi all the while, ultimately 
there will be only one description left in pi’s buffer, and pi will not be able to preserve 
the initial part of the description that it has ever received and thus will lose its service 
capability after time ti + bi / r, as shown in Fig. 9(c). 
 
 22 
4.3.2 Description distribution balancing 
 
So far, we have shown how a peer manages to preserve the descriptions it 
receives by means of the Dynamic Buffering scheme in an attempt to maintain its 
service capability. However, the service capability of a peer is evaluated not only by 
whether it can provide descriptions in their entirety but also by which descriptions it 
can provide. If the descriptions a peer preserves and thus is able to provide are widely 
available in the system, that is, the peer keeps the same descriptions as most other 
peers, the peer may be useless in serving subsequent peers and alleviating the 
workload of the server since it cannot provide newcomers with descriptions that other 
peers are deficient in. Such a skewed distribution in the availability of various 
descriptions would diminish the cooperation level among peers in on-demand 
streaming approaches employing MDC, including our proposed Dynamic Buffering 
scheme. In the following, we focus our efforts on achieving a balanced description 
distribution among peers and incorporating such considerations into the design of the 
Dynamic Buffering scheme to further improve its performance. The goal can be 
achieved from two aspects: 1) description dropping and 2) parent and description 
selection. We first show how arbitrary description dropping, as well as unadvised 
parent and description selection, cause a skewed distribution in the availability of 
various descriptions and then describe how the Dynamic Buffering scheme achieves 
what we expect of it.  
 
In the Dynamic Buffering scheme, a peer has to discard some description to 
preserve the other ones every time its buffer is filled up. Randomly choosing one 
description to discard may lead peers to preserve almost the same descriptions and 
thus restrict the provision of descriptions from peers to a small set of descriptions. If 
this is the case, newly arrived peers, especially the ones requesting high viewing 
quality, will hardly acquire all their needed descriptions from existing peers. They 
have to rely on the server to provide the descriptions that are absent among existing 
peers in order to achieve their desired viewing quality. As a result, the resources of 
peers cannot be fully and efficiently utilized to alleviate the workload of the server 
despite the fact that peers indeed preserve some descriptions for the provision of 
streaming services. Even worse, arbitrary description dropping may make certain 
descriptions tend to vanish from peers. In a P2P on-demand streaming system, there 
often exist peers whose service capability is about to expire, i.e., those peers who still 
preserve some descriptions in their buffer but cannot continue to keep any of them 
unabridged once their buffer is filled up since there is only one description left or 
there is no description allowed to be discarded to keep the others. Arbitrary 
 24 
shows the resulting hierarchical organization formed by classifying peers into groups 
according to the number of descriptions they preserve in their buffer. The service 
capability of peers in the same group tends to expire at the same or similar time 
instances. The server should attempt to select peers in Gi as the parents of new peers 
since they will soon lose their service capability. Within each group Gi, peers in Gi 
should keep the descriptions they preserved as different and as equally available as 
possible. In this paper, the availability of a description, dj, in a group Gi is defined as: 
   
 : ,k k i j k
i j k
p p G d H p
A d F p
 
   
, where H(pk) denotes the set of descriptions that peer pk keeps in its buffer and F(pk) 
the amount of available forwarding bandwidth at pk, measured by the number of 
descriptions it can provide. In other words, the availability of a description in Gi 
indicates the maximum potential supply of the description that peers in Gi collectively 
can offer. 
 
 
Fig. 10 The hierarchical organization formed by classifying peers into groups 
according to the number of descriptions preserved in the buffer. 
 
To construct the aforementioned hierarchical organization and evaluate the 
availability of various descriptions in each group, the server needs to collect necessary 
information from peers, including the available forwarding bandwidth of each peer, 
the descriptions preserved in the buffer. Any update on those information is triggered 
by peers. Note that only those peers that 1) have available forwarding bandwidth and 
2) still preserve at least one description in the buffer are involved in the hierarchical 
organization. 
 
2) Description Dropping: By maintaining a hierarchical organization as shown in 
 26 
from the selected parents, the server should give priority to those descriptions with the 
least availability in the group that the selected parents belong to, in order to enhance 
the diversity of descriptions available in the system. Based on the above rationale, the 
algorithm for parent and description selection is developed as shown in Fig. 12. 
 
 
Fig. 12 The parent and description selection algorithm of the Dynamic Buffering 
scheme. 
 
 28 
experimental simulation with the aim of investigating in which order applying the two 
parent selection criteria would lead to better performance and how significant the 
improvement in the performance would be. First, we conduct an experimental 
simulation to evaluate the system performance for the three approaches in terms of the 
utilization of server bandwidth and the rejection rate. The results are described as 
follows. 
 
Fig. 13 shows the utilization of server bandwidth for these three approaches with 
the increase of the arrival rates. The utilization of server bandwidth increases as the 
arrival rate increases for all the three approaches. The server bandwidth is least 
consumed with the fine-grained balancing scheme and most consumed with the 
balancing scheme. Because with the fine-grained balancing scheme a peer can 
forward whichever buffered descriptions to the requesting peers, it is obvious that the 
aggregated bandwidth on P2P network can be efficiently utilized. Consequently, the 
utilization of server bandwidth is greatly reduced. On the other hand, with the 
balancing scheme, a peer is designated to forward only one description. As mentioned 
before, a peer with the desired descriptions of other peers may not be able to provide 
services to them even though it has sufficient bandwidth. Such requests are forced to 
turn to the server for providing services and consume extra server bandwidth. The 
MGBRF scheme possesses the same flexibility of forwarding buffered descriptions so 
that the aggregated bandwidth on the P2P network is better utilized than the balancing 
scheme. However, the intention of minimizing the global bandwidth reduction may 
compromise the balance of aggregated forwarding bandwidth of descriptions. Instead 
of selecting the peer with the most forwarding bandwidth to provide the desired 
description, a peer requesting the least number of descriptions is selected and it may 
not have the most forwarding bandwidth. As a result, the aggregated bandwidth of 
various descriptions will not be balanced as in the fine-grain balancing scheme, and 
thus the consumption of server bandwidth increases. As shown in Fig. 13, at the 
largest arrival rate, 180 clients/sec., the utilization of server bandwidth of the 
fine-grained balancing scheme is about 10% and 22% less than that of MGBRF and 
the balancing scheme, respectively. 
 
 30 
 
Fig. 14 The system rejection rate. 
 
The following experiments are conducted with peer departures enabled in order 
to evaluate how resilient the three approaches are to peer failures. Initially, 54000 
peers are made to join the system at the arrival rate of 180 peers/sec. in 300 seconds 
and then to departure at a rate ranging from 5% to 30%. First, we examine the impact 
of a peer departure on the system in the three approaches by means of the average 
number of peers impacted by a peer departure, which is calculated by summing up the 
number of peers impacted during each failure (i.e. the number of descendants of each 
leaving peer) and then dividing the total sum by the number of failures. Fig. 15 shows 
the average number of affected peers of these three schemes under various departure 
rates. It can be observed that the impact caused by a peer departure lessens with the 
increase of the departure rate. This is because the total number of peers diminishes as 
more and more peers leave the system, and thus a late peer departure has little chance 
of affecting a number of peers larger than before. Therefore, the average number of 
affected peers goes down with the increase of the departure rate. Furthermore, we can 
observe that the impact of a peer departure in the balancing scheme is the least among 
the three approaches. For example, at the departure rate of 30%, the average number 
of affected peers in the fined-grained balancing scheme and MGBRF are about 2.5 
times that of the balancing scheme. The surprisingly little impact of peer departures in 
the balancing scheme can be attributed to the description-provision restriction 
imposed by the balancing scheme on peers, which do not allow peers to provide 
descriptions other than their designated ones. Consequently, a peer transmits only one 
description to others, and only peers of the subtree rooted at it in one 
description-delivery tree will be affected if it leaves the system. On the contrary, the 
description-provision restriction is relaxed in the fine-grained balancing scheme and 
 32 
 
Fig. 16 The average number of lost descriptions for a peer's leave. 
 
Finally, we investigate the self-recovery ability of peers in the three approaches, 
i.e., how well the peers impacted by peer departures can recover their original quality 
through the aid of other peers. Fig. 17 shows support from the server for recovering 
all the impacted peers from quality degradation for the three approaches with the 
increase of the departure rate. Support from the server is measured by the percentage 
of descriptions provided by the server for all the impacted peers to recover from 
quality degradation over the total descriptions required by all the impacted peers. 
Note that in all the three approaches an impacted peer will not turn to the server for 
the provision of lost descriptions until it can not obtain the lost descriptions from 
other peers. Therefore, a higher support from the server for recovery indicates a 
poorer self-recovery ability of peers. From Fig. 17, it can be observed that all the three 
approaches require more and more support from the server for recovery as more and 
more peers depart. This observation is mainly caused by the parent diversity 
constraint, which specifies that all the descriptions received by a peer must come from 
different parent peers. Although a leaving peer will release the outbound bandwidth of 
its parent peers occupied by it, the parent diversity constraint may prohibit the 
released bandwidth from being utilized to provide lost descriptions for child peers 
abandoned by the leaving peer. Besides, the required quality of a leaving peer may be 
less than its forwarding capacity and therefore, the bandwidth released by a leaving 
peer may not be sufficient to cover the requirement of child peers abandoned by the 
leaving peer. The second observation we can make from Fig. 17 is that the 
fine-grained balancing scheme has the least server involvement in failure recovery 
among the three approaches, whereas the balancing scheme requires the most support 
from the server. As in the previous two experiments, this distinction between the two 
 34 
peers than in the balancing scheme and each affected downstream peer loses up to 8 
descriptions as shown in Fig. 15 and 16. Nevertheless, the high scalability of the 
fine-grained balancing scheme can compensate for its poorer robustness since the 
high scalability enables affected peers to recover from failure without less support 
from the server as shown in Fig. 17. Furthermore, there is a clear and non-trivial 
trade-off between system scalability and service robustness. Some restrictions on peer 
description provision, such as the one imposed in the balancing scheme, can 
effectively confine the impact of peer departures on the system below a surprisingly 
low level and endow the system with great robustness against peer departures. 
However, accompanying the great robustness is the inefficient utilization of peers 
outbound bandwidth and poor self-recovery ability of peers. On the contrary, relaxing 
the restriction on peers description provision can allow for flexible and efficient 
utilization of peers outbound bandwidth but inevitably enlarges the impact of peer 
departure on the system. Which one characteristic outweighs the other and should be 
incorporated into the design of a P2P streaming system depends on the specific 
situation for which the system is designed. 
 
5.2 Dynamic Buffering 
 
We evaluate the performance of the proposed Dynamic Buffering scheme (called 
Dynamic Buffering-Balance hereafter) by comparing it with CoopNet and its two 
variations, Dynamic Buffering-Sequence and Dynamic Buffering-Random. The main 
differences among the four approaches are summarized as follows. 
 CoopNet. CoopNet employs the conventional cache-and-relay scheme. When 
the buffer of a peer is filled up, the peer will lose the initial part of all the 
descriptions it receives, and thus will no longer be able to serve any subsequent 
peer. 
 Dynamic Buffering-Balance. It is the approach presented in this paper. A peer 
will perform the Dynamic Buffering scheme to prolong the expiration time of its 
service capability once its buffer is filled up. 
 Dynamic Buffering-Sequence. The difference between it and Dynamic 
Buffering-Balance lies in the description dropping procedure. In this approach, a 
peer discards description in sequence, instead of based on the description 
availability. 
 Dynamic Buffering-Random. In this approach, a peer randomly chooses one 
from all the descriptions it preserves to discard if its buffer is filled up. 
 
 36 
Buffering-Balance. When the buffer size is restricted, the Dynamic Buffering which 
applies resource balancing can reduce the bandwidth consumption of the server. 
 
 
Fig. 19 While buffer size is 2-10 minutes and arrival rate is 10(requests/min), the 
server bandwidth utilization of CoopNet, Dynamic Buffering-Sequence, Dynamic 
Buffering-Random, and Dynamic Buffering-Balance at various buffer sizes. 
 
6. Project Results 
 
Our work has been accepted and published in the following conferences: 
1. “Enhancing P2P Live Streaming Performance by Balancing Description 
Distribution and Peer Loading,” International Conference on High 
Performance Computing Networking and Communication Systems 
(HPCNCS-07), pp. 104-111, July 7-12, 2007, Orlando, Florida. 
2. "Improving the Scalability of P2P Streaming Based on Fine-Grained 
Balancing Scheme", The IEEE 22nd International Conference on Advanced 
Information Networking and Applications (AINA2008) , Okinawa, Japan, 
Mar. 2008. 
3. “Improving the Availability of Streams by Dynamic Buffering on VoD P2P 
Network”, The 5th Workshop on Grid Technologies and Applications 
(WoGTA’08), Tainan, Dec. 2008. (accepted) 
4. " 藉 由 平 衡 Description 分 佈 與 節 點 負 擔 提 升 P2P 網 路 效 能 ", 2007 
International Conference on Advanced Information Technologies (AIT), 
Taichung, Taiwan, Apr. 2007. (Selected as one of the best paper and 
published in International Journal of Advanced Information Technologies 
(IJAIT). 
 38 
Proceedings. First International Conference on, pp.101{102, Aug 2001. 
[9] S. Androutsellis-Theotokis and D. Spinellis, “A survey of peer-to-peer content 
distribution technologies,” ACM Comput. Surv., vol.36, no.4, pp.335{371, 2004. 
[10] J.A. Pouwelse, P. Garbacki, D.H.J. Epema, and H.J. Sips, “The bittorrent p2p 
file-sharing system: Measurements and analysis,” 4th Int'l Workshop on 
Peer-to-Peer Systems (IPTPS), Feb 2005. 
[11] N. Leibowitz, M. Ripeanu, and A. Wierzbicki, “Deconstructing the kazaa 
network,” Internet Applications. WIAPP 2003. Proceedings. The Third IEEE 
Workshop on, pp.112{120, 23-24 June 2003. 
[12] D. Tran, K. Hua, and T. Do, “A peer-to-peer architecture for media streaming,” 
Selected Areas in Communications, IEEE Journal on, vol.22, no.1, pp.121{133, 
Jan. 2004. 
[13] S. Banerjee, B. Bhattacharjee, and C. Kommareddy, “Scalable application layer 
multicast,” SIGCOMM '02: Proceedings of the 2002 conference on Applications, 
technologies, architectures, and protocols for computer communications, New 
York, NY, USA, pp.205{217, ACM, 2002. 
[14] V. K. Goyal, “Multiple description coding: compression meets the network,” 
IEEE Signal Processing Magazine, vol. 18, no. 5, pp. 74–93, 2001. 
[15] Z. Lu and W. A. Pearlman, “An efficient, low-complexity audio coder delivering 
multiple levels of quality for interactive application,” in IEEE Multimedia Signal, 
1998, pp. 529–534. 
[16] J. E. M. L. A. Albanese, J. Blomer and M. Sudan, “Priority encoding 
transmission,” IEEE Information Theory, vol. 42, no. 6, pp. 1737–1744, 1996. 
[17] Y. Wang, A. Reibman, and S. Lin, “Multiple description coding for video 
delivery,” Proceedings of the IEEE, vol. 93, no. 1, pp. 57–70, Jan. 2005. 
[18] R. Rejaie, M. Handley, D. Estrin, Layered quality adaptation for internet video 
streaming, IEEE Journal on Selected Areas in Communications(JSAC) 18 (2000) 
2530 – 2543. 
[19] Y. Cui, K. Nahrstedt, Layered peer-to-peer streaming, in: Proceedings of ACM 
NOSSDAV, 2003, pp. 162 – 171. 
[20] V. N. Padmanabhan, H. J. Wang, P. A. Chou, p. . K. Sripanidkulchai , Proc. of 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 95－2221－E－218－015－MY2 
計畫名稱 運用多重描述編碼解決同儕式媒體串流之非對稱性、異質性及變動性 
出國人員姓名 
服務機關及職稱 
林朝興 (Chow-Sing Lin), 副教授 
資訊管理系所，南台科技大學 
會議時間地點 Okinawa, Japan, March 25-28, 2008. 
會議名稱 
The IEEE 22nd International Conference on Advanced Information Networking 
and Applications (AINA2008) 
發表論文題目 
Improving the Scalability of P2P Streaming Based on Fine-Grained Balancing 
Scheme 
 
 
As one of the most important international conferences sponsored by the TCDP of the IEEE 
Computer Society, the International Conference on Advanced Information Networking and 
Applications (AINA-08) was held in Ginowan City , Okinawa, Japan. March 25-28, 2008. The 
conference covers theory, design and application of computer networks and distributed computing 
systems. Aside from the regular presentations, the conference includes keynote addresses with 
speakers from both industry and academia, such as “Synchronized is coming back, but is it the 
same?” by Dr. Michel Raynal from France and “Cyber Science Infrastructure (CSI) for Promoting 
Research Activity of Academia and Industries in Japan” by Dr. Shigeki Yamada from Japan. We 
submitted the paper “Improving the Scalability of P2P Streaming Based on Fine-Grained Balancing 
Scheme” to the conference and was arranged to present the paper on March 28 in the session 8B for 
30 minutes. At the end of the presentation, two scholars from United States asked the questions 
regarding the concepts of balancing descriptions distribution among peers and some implementation 
details of the simulation. I briefly explain the key concepts again to clear the confusion. After the 
session, we also further discuss the research direction which our paper might extend to, such as the 
feasibility of applying our balancing scheme on layer encoded media and the possibility to build a 
prototype for performance testing. The process of the discussion really inspired me to do some 
further study on this paper.  
In addition to presenting our paper to interested attendees, I also took this opportunity to 
survey other researchers’ works related to our research area, such as “A Distributed Coordination 
Protocol for Multiple Peer Processes” by A. Aikebaier et al, “FAN: A Scalable Flabellate P2P 
Overlay Supporting Multi-Dimensional Attributes” by W. Song et al, and “Efficient Peer Selection 
in P2P JXTA-Based Platforms” by F. Xhafa. When I showed my interests in these papers, the 
presenters gave me fervent introductions of the proposed methods in response to my curiosity. We 
all exchanged a lot of ideas with each other. I reaped some valuable suggestions useful for my 
research work. 
Improving the Scalability of P2P Streaming Based on Fine-Grained Balancing
Scheme
Chow-Sing Lin, Wei-Ting Syu and I-Ting Lee
Department of Information Management
Southern Taiwan University
Tainan Shien, Taiwan (R.O.C.) 710
Email: {mikelin, swkca, eting}@msrg.mis.stut.edu.tw
Abstract
In this paper, we relax the restriction of only one
designated description forwarded by a peer described in
our previously proposed balancing scheme and propose
the fine-grained balancing scheme to further improve the
scalability of P2P live streaming network based on multiple
description coding (MDC) techniques. Like the balancing
scheme, the fine-grained balancing scheme is capable of
balancing the distribution of descriptions and peer loading
by a centralized description allocation scheme. In addition,
according to our analysis, its flexibility of selecting desired
descriptions and source peers favors the utilization of the
aggregate bandwidth of P2P network. The performance
study shows that our fine-grained balancing scheme can
successfully reduce the consumption of server bandwidth
and the rejection rate so that more clients can be served.
1 Introduction
Because of the rapid advances of computing, network-
ing, and storage technologies, nowadays a computer con-
nected to the Internet not only passively receives data from
remote sites but also is capable of actively relaying cached
data to other computers as a server. Such a Peer-to-Peer
(P2P) network successfully aggregates network bandwidth,
computing power, and storage of peers to provide more
services to clients. It can effectively reduce the loading
of servers such that more clients can be served, and thus
a high system scalability is achieved. As a result, more
and more systems that demand excessive resources have
deployed based on P2P networking scheme instead of tra-
ditional client-server platform. At the beginning, most ap-
plications on P2P networks provide non-realtime file shar-
ing services [12]. As the demand for multimedia services
rapidly increases, especially as traditional centralized multi-
media systems [14] cannot scale well to accommodate such
an explosive growth of requests, the highly scalable P2P
streaming schemes naturally become a feasible solution to
address the issues.
On a P2P network, depending on the buffer space in a
peer, a peer normally continuously caches a certain length
of most recently watched video blocks. It then forwards
cached video blocks to other peers who require those to
watch videos without interruption. This approach is gen-
erally called ”cache-and-relay” [3,7]. This kind of peer col-
laboration significantly alleviates the loading of servers in
terms of network bandwidth and storage space.
There are many research works studying the feasibility
of streaming realtime videos on P2P networks [1,13], which
can be categorized as two kinds.
• On-Demand Streaming. In a on-demand streaming
system, the streaming contents are pre-recorded and
available at the streaming server. Users are allowed to
select the desired media from the server to watch. The
system is required to ensure users a complete and con-
tinuous playback of the desired media contents. The
main challenge for on-demand streaming services is
how to efficiently provide the entirety of requested me-
dia contents for asynchronously arriving users [6].
• Live Streaming. Unlike on-demand streaming , the
streaming contents disseminated in a live streaming
system are typically captured from live events, such
as ball games and news. For latecomers, the miss-
ing initial part of the streaming content is irrelevant to
the QoS they perceive and thus ignored. Users watch
the streaming content from the point where they join
[16]. However, the end-to-end delay from the stream-
ing server to users is critical to the QoS, which indi-
cates how lively they watch the streaming content.
In spite of obvious advantages of streaming videos on
22nd International Conference on Advanced Information Networking and Applications
1550-445X/08 $25.00 © 2008 IEEE
DOI 10.1109/AINA.2008.105
795
scriptions. To reduce the dependency of a peer, all the re-
quested descriptions must come from different peers. Given
a desired video quality in terms of the number of descrip-
tions, the selection of requested descriptions and source
peers are determined by our proposed Fine-Grained Bal-
ancing scheme. The experimental results show that the
Fine-Grained Balancing Scheme can further reduce the con-
sumption of server bandwidth and the rejection rate.
The remainder of the paper is organized as follows. In
Section II, we describe our previously proposed Balancing
scheme . In Section III, we discuss the fine-grained balanc-
ing scheme. Failure recovery with fine-grained balancing
scheme is presented in Section IV. In Section V we present
the performance evaluation and analysis. Finally, in Section
VI we conclude this paper and discuss our future work.
2 The Balancing Scheme
In Balancing Scheme [8], it adopts the centralized
schemes to allocate descriptions for join operation. To sim-
plify our analysis, the Balancing Scheme assumes that a
peer is designated to forward only one description, like
SplitStream. All the desired descriptions must come from
different peers. When a new client joins the P2P streaming
network, it contacts the media server for streaming service
by specifying its desired video quality and the contributed
forwarding bandwidth in terms of the number of descrip-
tions. Then, the server determines the designated forward-
ing description and the source peers according to our pro-
posed balancing scheme. A peer may contact the server to
acquire missing descriptions if necessary. To determine the
designated forwarding description of a new peer, first, sum
up the available forwarding bandwidth of each description
in the P2P streaming network. Then, The description with
the least amount of available forwarding bandwidth is cho-
sen for forwarding. For the sake of balancing loading, the
peer with the most forwarding capability is chosen as the
source peer to provide the designated forwarding descrip-
tion. If there is no available bandwidth for the chosen de-
scription, the peer turns to the server for the provision of
the description. If the server has no available bandwidth
left, the new peer will be rejected. Following this policy of
selecting source peers, we are able to balance forwarding
loads among peers to avoid hot spots where most descrip-
tions are provided by a small number of peers.
After determining the designated forwarding descrip-
tion, we next need to determine other non-designated for-
warding descriptions of a new peer in order to satisfy the
desired number of descriptions. To maintain even distribu-
tion of forwarding bandwidth among descriptions, the de-
scription which is not yet acquired with the maximum ag-
gregated forwarding bandwidth should be selected. Simi-
lar to the selection of source peer of designated forwarding
description, we choose the source peer with the largest for-
warding bandwidth to provide the service. The above pro-
cess is repeated until the desired number of descriptions is
reached.
In spite of the balancing scheme can save the server
bandwidth and serve more users, the restriction of forward-
ing only one description for each peer limits the optimiza-
tion of bandwidth utilization on P2P networks. A peer with
the descriptions desired by others cannot provide services to
them even though it has sufficient bandwidth. Such requests
are forced to turn to the server for providing services, and
extra server bandwidth is consumed.
Table 1. An example of P2P live streaming
Peer Number P1 P2 P3 P4 P5 P6 P7 P8 total
Required Quality
(descriptions) 2 1 2 3 3 4 2 1 18
Contributed
Bandwidth
(descriptions) 2 1 2 5 1 1 2 1 15
Fig. 1 illustrates an example of the description distribu-
tion in a P2P streaming network for the Balancing Scheme.
We assume that a video is encoded as four descriptions, S1,
S2, S3, and S4. Assume that there are 8 peers, P1, P2,
...., P8, with asymmetric access links, and they arrive in as-
cending order of indices. The forwarding capability of each
peer is listed in Table I. Suppose that P8 is joining this ses-
sion. According to the balancing scheme, it is designated
to forward description S3. The peers in the session able to
provide description S3 are P3, P4 and P6. P3 is designed
to forward description S3 but has no available uploading
bandwidth. P4 and P6 have available bandwidth but they
are not designated to forward description S3. As a result,
P8 has to turn to the server for acquiring description S3. In
this case, the aggregate bandwidth on the P2P network is
under-utilized and the extra server bandwidth is consumed
to provide description S3.
If we relax the restriction in the balancing scheme to
provide finer grained description balancing, i.e., the peer
can forward whichever buffered descriptions instead of only
one designated description, there is no doubt that the utiliza-
tion of aggregate bandwidth on the P2P network can be fur-
ther improved. Fig. 2 shows an example of P2P streaming
and description distribution for the fine-grained balancing
scheme with the same scenario as Fig. 1. With the fine-
grained balancing scheme only seven descriptions of server
bandwidth is used while nine descriptions of server band-
width is used with the balancing scheme.
797
for each buffered description is reduced by one. Therefore,
the reduction of forwarding bandwidth on the peer with the
least number of requesting descriptions definitely has the
least impact on the degradation of aggregate bandwidth of
descriptions on the P2P network. On the other hand, if there
is no available bandwidth for the chosen description, the
new peer turns to the server for the provision of the descrip-
tion. The new peer is rejected if the server has no available
bandwidth left. Fig. 3 shows the pseudopod of determina-
tion of the received descriptions and source peers for a new
peer.
3.3 An Example of the Fine-Grained Bal-
ancing Scheme
Fig. 4 and Fig. 5 show an example of the join process for
a new peer. Assume that a video is encoded as four descrip-
tions, S1, S2, S3 and S4 and initially there are 5 peers, P1,
P2, P3, P4 and P5 sequentially joining the P2P streaming
network with different quality requirements and forward-
ing bandwidth listed in Table 2. The aggregate forwarding
bandwidths of S1, S2, S3 and S4 is 4, 3, 3 and 4 and the
numbers of peers possessing description S1, S2, S3 and S4
are 2, 2, 3, and 2, respectively. Fig. 4 shows the schedule of
P2P streaming before the new peer P6 joins.
Table 2. An example of P2P streaming to
demonstrate proposed fine-grained balanc-
ing scheme
Peer Number P1 P2 P3 P4 P5 P6 total
Required Quality
(descriptions) 3 2 2 1 1 1 10
Contributed Bandwidth
(descriptions) 4 4 2 2 1 2 15
Assume that a new peer wants to join the P2P network,
say P6, who requires one-description video quality and is
willing to contribute 2-description forwarding bandwidth.
Since S2 has the least forwarding bandwidth and the least
number of possessing peers, it is chosen as the received de-
scription of P6. The set of candidate source peers only have
peer P4 because it has the most forwarding bandwidth and
does not exist in the set of source peers of P6. Finally, P4
is chosen as a source peer for forwarding S2 to P6. Fig. 5
shows the final schedule of P2P streaming after P6 joined.
4 Failure Recovery for the Fine-Grained Bal-
ancing Scheme
When a peer leaves the P2P network, regardless of grace-
ful or unexpected disconnection, its child peers, if any, will
For a newly arrived peer k
Qk =Request Quality of new peer k
sum← Qk
Repeat
1. T = φ
2. For each description s, s← 1 to m
3. Rs ←
∑
x:s∈Hx
Bx
4. θ = {e|e /∈ Hk and Re = MIN
1≤i≤m
Ri}
5. υ = {c|c ∈ θ and Kc =MIN
i∈θ
Ki}
6. Find a description c, c ∈MK
7. If Rc = 0 Then
//The bandwidth of description c is not available
8. If SB > 0 Then
//The server bandwidth is available
9. SB ← SB − 1
10. sum← sum− 1
11. Hk ← Hk ∪ c
12. Kc ← Kc + 1
13. Else reject request
14. Else
15. T ← {j|c ∈ Hj , j /∈ Ok and Bj =MAX
x:c∈Hx
Bx}
16. If T = φ Then
//The set of candidate source peers is null
17. If SB > 0 Then
18. SB ← SB − 1
19. sum← sum− 1
20. Hk ← Hk ∪ c
21. Kc ← Kc + 1
22. Else reject request
23. Else
//The set of candidate source peers is not null
24. Find a peer j , j subject toMIN
j∈T
Qj
25. Ok ← Ok ∪ j
26. Bj ← Bj − 1
27. sum← sum− 1
28. Hk ← Hk ∪ c
29. Kc ← Kc + 1
Until sum = 0
Figure 3. The pseudocode of determination
of the received description and its source
peer for a new peer.
799
from 0 to 16 descriptions. The arrival rate of clients is varied
from 30 to 180 clients/sec. The number of descriptions re-
quested by a client follows the normal distribution N(9, 3)
as listed in Table 4.
Table 3. Simulation Parameters
Parameter Value
Simulation Time 300 seconds
# of Descriptions 16 descriptions
Arrival Rate 30 to 180 clients/sec.
Qj 2 to 16 descriptions
Bj 0 to 16 descriptions
We compare the fine-grained balancing scheme with
the balancing scheme and Minimum-Global-Bandwidth-
Reduction-First (MGBRF). Basically, the MGBFR scheme
is like the fine-grained balancing scheme except in the
process of selecting source peer MGBRF prefers the peer
with the minimum impact on the degradation of aggregated
bandwidth of descriptions on the P2P network to forward
the desired description. That is, the source peer with the
least number of requesting descriptions is selected first. If
there is a tie, the peer with the most forwarding bandwidth
is then selected. In this research work, we conduct an ex-
perimental simulation to evaluate the system performance
for the three approaches in terms of the utilization of server
bandwidth and the rejection rate. The results are described
as follows.
 0
 20
 40
 60
 80
 100
 120
 140
 0  30  60  90  120  150  180
S e
r v
e r
 B
a n
d w
i d
t h
( d e
s c
r i p
t i o
n )
Request Rate(client/sec)
Fine-Grained Balancing
MGBRF
Balancing
Figure 8. The utilization of server bandwidth
Fig. 8 shows the utilization of server bandwidth for these
three approaches with the increase of the arrival rates. The
utilization of server bandwidth increases as the arrival rate
increases for all the three approaches. The server bandwidth
is least consumed with the fine-grained balancing scheme
and most consumed with the balancing scheme. Because
with the fine-grained balancing scheme a peer can forward
whichever buffered descriptions to the requesting peers, it
Table 4. The distribution of the video quality
requested by peers
Required Quality
(descriptions) 2 4 6 8 10 12 14 16
Percentage(%) 3 7 17 23 23 17 7 3
is obvious that the aggregate bandwidth on P2P network
can be efficiently utilized. Consequently, the utilization of
server bandwidth is greatly reduced. On the other hand,
with the balancing scheme, a peer is designated to forward
only one description. As mentioned before, A peer with
the desired descriptions of other peers may not be able to
provide services to them even though it has sufficient band-
width. Such requests are forced to turn to the server for pro-
viding services and consume extra server bandwidth. The
MGBRF scheme possesses the same flexibility of forward-
ing buffered descriptions so that the aggregate bandwidth
on the P2P network is better utilized than the balancing
scheme. However, the intention of minimizing the global
bandwidth reduction may compromise the balance of ag-
gregate forwarding bandwidth of descriptions. Instead of
selecting the peer with the most forwarding bandwidth to
provide the desired description, a peer requesting the least
number of descriptions is selected and it may not have the
most forwarding bandwidth. As a result, the aggregate
bandwidth of various descriptions will not be balanced as
in the fine-grain balancing scheme, and thus the consump-
tion of server bandwidth increases. As shown in Fig. 8,
at the largest arrival rate, 180 clients/sec., the utilization of
server bandwidth of the fine grained balancing scheme is
about 10% and 22% less than that of MGBRF and the bal-
ancing scheme, respectively.
 0
 10
 20
 30
 40
 50
 60
 70
 80
 90
 100
 0  30  60  90  120  150  180
R
e j e
c t i
o n
 R
a t e
( %
)
Request Rate(client/sec)
Fine-Grained Balancing
MGBRF
Balancing
Figure 9. The system rejection rate
Fig. 9 shows the rejection rates of the three approaches
with the increase of the arrival rates. In order to evaluate
801
