1 
 
中文摘要 
 
隨機系統最佳化由於實務上許多成功之應用，近年來為相當熱門之主題。然而，處
理系統之隨機性本身即為一相當困難之問題，對於大型隨機系統，其困難度更是大幅之
增加。Chang et al. (2009) 提出了一以反應曲面法(Response Surface Methodology)為基礎
之隨機最佳化方法稱為 STRONG (Stochastic Trust Region Response Surface Method)。
STRONG 結合了反應曲面法和非線性規劃之信賴區域法(Trust Region Method )之優點，
不但保存了原始反應曲面法之優點並且消除了其缺點，為一相當吸引人之方法。然而，
當 STRONG 用於處理實務上極為大型之隨機系統時，由於其於每次運行中頇相當大之
計算量，因此在應用上有其困難性。本研究發展了一套以 STRONG 為基礎之大型隨機
系統模擬最佳化之演算法，用以處理大型隨機系統之最佳化問題。我們發展了一個有效
之篩選方法並將其與 STRONG 進行整合，稱之 STRONG-LS，以減少處理大型問題時所
需之計算量。詳細的說，我們利用篩選方法於每次運行時篩選出重要因子，再利用篩選
出之重要因子建構出小型之反應曲面並進行最佳化，由於大型問題已被拆解為小型問題，
因此可以避免直接處理大型問題時所需要之大量的計算量。透過實證研究，我們證實新
的方法確實可用來處理大型之問題。 
關鍵字：隨機系統；實驗設計；模擬最佳化；反應曲面法； 
  
3 
 
1. 緒論 
隨機最佳化旨處理在隨機環境下之最佳決策問題，目前在現實生活中已有很多廣泛
的應用，例如：大賣場的管理者要決定適當數量之收銀櫃檯能使得賣場之總期望成本最
低，其中光顧的顧客數量為隨機變數；一化學工程師要設計生產線之最佳溫度和壓力來
使得製程的期望良率最大化，其中良率會受隨機的雜音或誤差所影響。在隨機最佳化問
題中，當目標式無法用解析函數來表示而只能透過隨機模擬來估計其值時，文獻上即稱
此種問題為模擬最佳化(Simulation Optimization) 問題(Bank (1998), Fu (2002), Tekin and 
Sabuncuoglu (2004), and Fu(2006))。  
在模擬最佳化時通常藉由電腦建構模擬模型來取代真實的系統，運用最佳化演算法
使得此模擬系統能達到所期望之最佳參數。但在每次要達到最佳化前都必頇進行重複模
擬的程式，這樣的方式可能導致求解的效率不佳，因此，以後設模型(metamodel)為基礎
的策略(Barton and Meckesheimer(2006))利用實驗設計之技巧建立起一後設模型，並利用
此來進行最佳化，以有效縮減重複模擬所耗的時間。 
模擬是建構於電腦上之真實系統的代表模型，故在建立時要深入觀察真實系統的細
節，才能使模擬系統更貼切真實系統。模擬最佳化演算法基本上可分為兩類:第一類型稱
之為白盒子演算法(white box algorithm)，此種演算法假設在模擬模型中可以直接觀察系
統本身，例如可導出所研究之隨機系統之梯度估計量並應用於最佳化之過程；第二種類
型稱之為黑盒子演算法(black-box algorithm)，此類型之演算法假設隨機系統為一黑盒子，
使用者只能藉由觀察此系統之輸入(input)與輸出(output)來最佳化此隨機系統。本研究所
探討的範圍注重在黑盒子演算法，也就是說，使用者無法直接觀察到問題的型態，只能
藉由每次的輸入值和輸出值以推測兩者之間的關係，進而估計真實系統之反應變數
(response variable)與因子(factor)之關係。目前在文獻上之黑盒子演算法最受歡迎也最為
世人所熟知的，包括反應曲面法(Myers and Montgomery(2002))以及很多啟發式演算法，
如Nelder Mead Simplex method、genetic algorithm和 tabu search等(Barton and Ivey (1996))。
本篇論文之焦點為反應曲面法。反應曲面法為一包含了大量數學與統計技巧之方法，用
於處理隨機系統之最佳化，數十年來在學術界與產業界有許多成功之應用。許多隨機系
統由於其反應變數與獨立變數之真實關係相當複雜且未知，反應曲面法因此利用一階或
二階多項式在鄰近區域建構近似模式，並利用此近似模式搜尋改善區域 (improved 
region)，並逐步往最佳解移動。反應曲面法的優點為利用許多強而有力之統計方法
(Kleijnen (1998))，例如實驗設計以及迴歸分析等，因此在處理大規模之問題時，計算效
率遠較其他方法為佳。反應曲面法之所以能廣泛運用在模擬最佳化的應用，是因為模擬
實驗比真實做實驗更快速及更便宜，每執行一次電腦的模擬實驗只需花上幾分鐘。然而，
反應曲面法有三項顯著的缺點局限了其應用：第一，反應曲面法並非自動化之演算法，
在搜尋過程中的每一步均頇要使用者的介入，例如使用者頇自行定義適當鄰近區域
(region of interest) 和適當之實驗設計，這在動輒數萬次運行之模擬實驗中，這是不可行
的；第二，反應曲面法本質上為一啟發式之演算法，因此無收斂性之保證，換言之，即
使使用者施行了大量的計算，最終解無法保證為最佳解；第三，反應曲面法中假設反應
曲面為同質變異(homogeneous variances)，但在大多數之模擬實驗中，這是不夠實際之假
5 
 
賴區域的大小。在第一階段時，施展實驗設計後建構一個一階的區域模型，藉由建構的
一階模型在信賴區域內找尋更好的解，再經由兩種測詴可以達成檢驗新解是否被接受以
及信賴區域的更新。而在第二階段時，也施展實驗設計但要建構一個二階的區域模型，
利用同樣的方法在信賴區域內找尋更好的解，但如果無法找到更好的解時就必頇進入內
迴圈，藉由增加樣本數的大小直到找到最佳解為止。通常在 STRONG 中施展實驗設計
技巧時，會使用    部分因子設計，特別在第一階段的實驗設計中使用解析度Ⅲ的部份
因子設計，在第二階段的實驗設計則改使用加上軸點的中央合成設計(Central Composite 
Design)及其解析度為Ⅴ。舉例說明，當所遇到的問題因子數 k=10 時，在第一階段必頇
要花上             個實驗點的成本，而在第二階段則要增加為         
              個實驗點的成本(此處暫時省略中心點的部份)。因此，在因子數為
10 的情況下，STRONG 可以表現的很優異，但如果將因子數提升到 40 因子，在此即稱
為大規模問題，重複以上的設計方式，卻會使得所建構的設計矩陣超出電腦所能負荷的
計算量，並且無法順利求得問題的最佳解。 
STRONG-LS 用以解決 STRONG 面對大規模問題時，所造成電腦計算量負荷過高的
情況。本研究藉著在每次 STRONG 迭代運算之前，發展一個有效率的篩選步驟加入其
中，可以將面對的大型問題轉為若干個小型問題，再藉著變異數分析(analysis of variance)
找出重要的因子，進而將大型問題轉成小型問題，這樣的步驟使得電腦得以負荷，以解
決 STRONG 直接處理大規模問題所遇到的困擾。 
 
3. 演算方法 
 
3.1 STRONG 演算法 
在 Chang et al. (2009)的演算法 STRONG 中共分為兩階段，外迴圈和內迴圈。首先
透過信賴區域判斷要進入第一階段或第二階段，如果信賴區域比設定門檻大時，表示使
用第一階段就足以找到改善的空間，此階段是以一階的模型建構反應曲面；而當信賴區
域比設定門檻小時，則要使用第二階段建構二階的模型來找到更好的解。如果在第二階
段無法找到一個更好的解時，就必頇進入內迴圈以增加模擬的觀察數，進而建構二階模
型直到找到更好的解為止。 
STRONG 演算法在每次的迭代運算如以下的步驟及流程圖(如圖 1)： 
Step 1. (外迴圈)在目前解鄰近建構一個區域模型。根據目前信賴區域大小判斷進入第一或
是第二階段，也就是決定要建構一階或是二階模型的關鍵。 
Step 2. 利用 Step1 建構的區域模型在信賴區域內找尋更好的新解。 
Step 3. 使用兩個測詴來檢定新解是否被接受，分別為 ratio-comparison 測詴和 sufficient- 
reduction 測詴，進而更新目前解和信賴區域大小。其中在第二階段時，只要兩種
測詴其一測詴未通過，則要進入 Step4；否則，進入 Step5。 
Step 4. (內迴圈)藉由增加目前解和新解以及估計梯度的樣本大小後，進而建構更精準的二
階模型，以使得能找到更滿意的解後才進入 Step5。 
Step 5. 判斷停止條件是否成立，如果成立則停止；否則，回到 Step1。 
7 
 
進一步介紹篩選的步驟，選篩步驟首先針對問題進行分群，分群的方式為依照因子
的順序依序分群稱為固定分群，會使得原問題會分成若干群，再對每群施展實驗設計以
及變異數分析，由變異數分析表中之 P 值來判定該群內因子的重要程度，在每次運行時
篩選出各群之重要因子，再利用篩選出之重要因子建構出小型之反應曲面，以完成篩選
的步驟。以下將詳細說明各步驟的做法。 
Step1. 因子分群： 
在面對大型問題的情況下，首先將其進行分群的動作，而分群的數目在初始時使用
者可以自行先設定，分群的方式是依照因子排列的順序依序進行分群的指派，經過這步
驟就可使原大型問題，被分成若干群小型問題。但因為分群的方式是依照因子順序分群，
因此，在每一次的迭代運算中各因子都會被分配到相同的群中。舉例說明，當遇到的問
題為 20 因子而欲將其分成 4 群時，會依照因子順序依序將因子指派到群中，也就是說，
1 到 5 個因子會被分成第 1 群，6 到 10 個因子會被分成第 2 群，依此類推，直至所有因
子都被分配完為止，以完成此步驟的動作。 
Step2. 實驗設計： 
將原大型問題分成若干群小型問題後，接著就分別針對每群小型問題進行實驗設計
的動作，而通常較為廣泛且有效率的實驗設計為  或是    部分因子設計(Montgomery, 
1991)，其中    部分因子設計利用交絡(confounding)的觀念以較少的實驗組合及實驗次
數進行多個因子的實驗，用以減少許多實驗的成本及次數。因此，分別針對每群小型問
題使用解析度Ⅲ的    部分因子設計作為實驗設計的方式。舉例說明，接續 Step1 的例
子，將 20 個因子分成 4 群後，每群內的因子數為 5 個，就會施展         部份因子
設計。 
Step3. 因子篩選： 
在針對每群小型問題施展實驗設計後，接著利用變異數分析對每群小型問題中的每
個因子求得 P 值，以得知每個因子在所屬的群中所占的重要程度，也就是說，P 值愈低
的因子表示其在所屬分群中愈重要。因此，在進行篩選因子的時候，會優先篩選出 P 值
最低的，依序次低，依此類推，直到篩選出指定的各群重要因子個數為止，而重要因子
的個數是由使用者在初始時設定。其中在迭代運算中未被篩選到的因子則維持其值不變，
直到下次篩選因子步驟時，才有更動的可能性。在 Step1 中將因子分配到各組，經過每
一次迭代運算後，重要因子的解會被更新，但在這次迭代運算中被選為重要因子的，在
下一次重新分群且迭代運算進行篩選因子時，其不一定還為重要因子。因此，各因子都
有被挑到的可能性。接續上述例子說明，在經過前兩步驟後各群的因子數為 5 個，欲在
各群中挑選出 2 個重要因子，就會挑出在 5 個因子中 P 值最低和次低的為該群的重要因
子。 
Step4. 合併重要因子： 
由各群篩選出重要因子後，將各群的重要因子組合成縮減的小型問題，進而利用此
小型問題就可建構出小型的反應曲面，以此小型的反應曲面求得新解，也就是說，將縮
減的小型問題帶入 STRONG 中，進行一次的迭代運算找到小型問題的新解後，將其小
型問題的新解更新到原問題中，接著判斷其是否達到停止條件，如果是則停止，否則必
9 
 
在此實驗中我們運用了非線性規劃上有名之 Rosenbrock function 當作目標式並加上
人為之隨機項以建構成反應變數，為了驗證加入篩選步驟的 STRONG-LS 是否有助於增
進求解的效率，本節將進行 STRONG 與 STRONG-LS 和 NM 的比較。以下為比較三種
演算法的實驗說明。 
 目標函數：此小節所運用的目標函數為 Rosenbrock function，其型式如下： 
 
       
               
     
          
  
   
        (2)  
 
其中 p 為因子個數。當 p=2 時，此函數的全域最佳解為        ，以及最佳值為       。 
 
 隨機反應值的建構：隨機反應值是由目標式加上人為之隨機項以構成，其型式如下：    
 
                 (3) 
 
其中 g(x)為目標函數和  為隨機項且              
  。而  的變異數有兩種設定方式，
分為同質變異數和異質變異數，兩種方式根據是否會受目標式影響而區分，同質變異數
因不會受目標式的影響而改變，故設定為一個固定的值；反之，異質變異數就會受目標
式的影響，通常會設定成         ，其中 可設成 0.1 或是 1 皆可。因此，當目前的
解離最佳解愈遠的時候，其變異數就會愈大，使得演算法較不容易往好的方向收斂；反
之，當收斂到靠近最佳解附近時，此隨機項會越來越小，也就越容易收斂到最佳解。 
 
 參數設定：在本節中 STRONG 和 NM 所使用的參數設定如表 1。 
 
表 1 STRONG 和 NM 之參數設定 
STRONG參
數 
設定 NM
參數 
設定 
   3   1 
   2   0.5 
  
 
 2   2 
    1.2   0.5 
 
 
 0.01   
 
 
 0.3   
 
 
 0.9   
 
 
 1.11   
           
    
 
其中  為初始中心點的樣本個數，  為設計點的樣本個數，   
 為初始的信賴區域大小，
11 
 
已經使得電腦執行上到達無法承擔的計算量，因此，這樣的問題更能顯得本研究的貢獻，
但為了能夠比較兩方法收斂效率是否有差異，故本研究在設定小規模問題為 6 因子後，
將 16 因子問題視為此處的大規模問題。將初始解設定為如上表所示，至於變異數的設
定，本研究不但考慮同質變異數以外，還加入異質變異數的考慮，同質變異數將其標準
差設為 200，而異質變異數的標準差設定方式為     乘上目前解的目標值。  
 
4.2. 實驗結果 
STRONG與STRONG-LS和NM三種演算法在根據前一節的實驗說明進行測詴後，
將實驗結果整理如表 3。 
表 3 STRONG-LS 和其他演算法收斂結果的比較表 (*：表示三個演算法中表現較優異
者。) 
OG STRON
G 
STRONG-
LS 
NM 
情境
1 
1.951e-5 *8.784e-7 6.727e-
6 
情境
2 
2.597e-5 *1.962e-6 3.082e-
5 
 
本節實驗結果發現，觀察在此兩種情境下的 OG，本研究的方法 STRONG-LS 將會
比 STRONG 和 NM 收斂到較好的解，差距最多發生在情境 1，有差距到 e-2=0.01 的比
例，而在情境 2 中也有差距到 e-1=0.1 的比例，這樣的差距很明顯發現 STRONG-LS 比
STRONG 和 NM 表現的更好，在兩情境中皆能優於 STRONG 和 NM。進一步觀察三種
演算法整體收斂的情況，故以圖表示，圖 3 中的橫軸為評估目標函數之次數以 N_obs
表示，縱軸為未加入隨機項的目標式加 1 再取以 10 為底的對數(log)，以 log(1+obj ft.)
表示。 
 
  
 
圖 3 STRONG-LS 和其他演算法在各種情境下整體收斂的比較圖 
0 0.5 1 1.5 2 2.5 3 3.5 4
0
2
4
6
8
N obs
lo
g
(1
+
o
b
j 
ft
.)
情 境 1
 
 
STRONG
STRONG-LS
NM
0 0.5 1 1.5 2 2.5 3 3.5 4
2
3
4
5
6
7
8
9
N obs
lo
g
(1
+
o
b
j 
ft
.)
情 境 2
 
 
STRONG
STRONG-LS
NM
103 103 
13 
 
參考文獻 
 
[1] Banks, J., ed. Handbook of Simulation. New York: John Wiley and Sons. (1998). 
[2] Barton, R.R., J.S. Ivey. Nelder - Mead simplex modifications for simulation optimization. 
Management Science, 42(7): 954-973 (1996) 
[3] Barton, R.R., M. Meckesheimer. Metamodel - based simulation optimization. Handbooks 
in Operations Research and Management Science 13:535–574 (2006). 
[4] Chang, K.H., L.J. Hong, H. Wan. Stochastic trust-region response-surface 
method(STRONG) – A new response-surface framework for Simulation 
Optimization(working paper). (2009). 
[5] Conn, A.R., N.L.M. Gould, P.L. Toint. Trust-Region Methods. SIAM. (2000). 
[6] Fu, M.C. Optimization for simulation: Theory vs. practice. INFORMS Journal on 
Computing, 14: 192–227 (2002). 
[7] Fu, M.C. Gradient estimation. Handbooks in Operations Research and Management 
Science, 13:575–616 (2006). 
[8] Kleijnen, J.P.C. Experimental design for sensitivity analysis, optimization, and validation 
of simulation models. Handbook of Simulation, 173-223 (1998). 
[9] Montgomery, D.C. Design and Analysis of Experiments. New York: John Wiley and Sons, 
(1991). 
[10] Myers, R.H., D.C. Montgomery. Response Surface Methodology. New York: John Wiley 
and Sons, (2002). 
[11] Tekin, E., I. Sabuncuoglu. Simulation optimization: A comprehensive review on theory 
and applications. IIE Transactions, 36: 1067–1081 (2004). 
 
行討論。我們詳細的走了一遍了有關於我們發展之演算法的相關細
節以及其證明，其間我們並與學生Lung Zhao 進行conference call，
討論如何使演算法的效率在既有的基礎上再提升。這三天雖然每天
行程極為緊湊但感覺收穫頗豐。第五天後，本人前往科羅拉多州拜
訪以前於美國求學之朋友 Dr. Liu，其目前於 UIUC (University of 
Illinois Urbana Champaign 任職，其專長為 BioMEMS (微機電)，目
前在生物產業有極為重要之應用。Dr. Liu 是普渡大學之電機博士，
當年是我在普渡大學時求學之學長。我們見面後愉快的聊天並交換
了許多心得，其中包括了這幾年來台灣產業的變遷，以及許多製造
業之出走大陸，我們一致認為未來生物產業為台灣之新興產業，希
望未來在這一個領域大家有許可能共同參與之計畫題目與方向。 
另外，於科羅拉多州其間本人亦與以前的指導教授 Professor Wan 
conference call 討論目前已送審之論文審查意見與修改，並討論目
前撰寫中之 paper draft，近期內將投稿至國際知名的期刊。 
 
總體而言，此行不但有許多豐富之學術討論，亦見到了許多當年之
老朋友與老師，收穫甚豐，非常感謝國科會賜與這樣的機會使得我
們可以與國際做良好之交流，希望機來還有機會繼續這樣的學術交
流，增進國際視野並提高研究能量。 
98 年度專題研究計畫研究成果彙整表 
計畫主持人：張國浩 計畫編號：98-2218-E-007-015- 
計畫名稱：大型隨機系統模擬最佳化演算法之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 40%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 40%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
