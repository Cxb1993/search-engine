1 
 
行政院國家科學委員會專題研究計畫成果報告 
適用於分散式網路的秘密影像分享機制之研究 
(計畫部分成果發表了一篇期刊論文"C.N. Yang, J.F. Ouyang, and L. Harn, "Steganography and 
Authentication in Image Sharing without Parity Bits, Optics Communications, Vol. 285, Issue 7, 
pp. 1725-1735, Apr., 2012"，論文附於成果報告後) 
計畫編號：NSC 100-2221-E-259-025 
執行期間：100年 8月 1日至 101年 7月 31日 
主持人：楊慶隆  國立東華大學資訊工程學系 
 
一、中文摘要 
本計畫是設計、研製適用於分散式網路
的秘密影像分享機制。我們的方法整體而言
提高了秘密影像分享在網路上使用時的安
全性。第一個功能是讓參與者在分散式網路
上安全地傳送子影像。第二個功能則是利用
網路社群信賴度代替認證子影像的正確
性。我們利用對稱性雙變數多項式讓分享的
子影像有對稱特性，讓兩兩使用者可以分享
個別的秘密金鑰，以便安全傳送子影像。另
外，利用網路的社群信賴度以確保解碼時子
影像是正確，以省略認證子影像時所需的檢
查位元，提高子影像的影像品質。這兩種功
能所使用的技術是一致性的(均植基於多項
式的秘密分享)，他們應用的環境是相同的
(均適用於分散式網路)。兩種機制整合使用
可同時達到在分散式網路，執行秘密影像分
享時的安全性與正確性。 
 
二、緣由與目的 
隨著科技突飛猛進，網路的蓬勃發展，
電腦、資訊裝置的大眾化、平價化，使得數
位影像的用途愈來愈廣。數位影像常具有隱
私性或機密性，其安全及保護一直以來是密
碼學及影像處理的重要研究議題。為了確保
傳輸過程，秘密影像資訊不被竊取或破壞。
我們通常用加密技術將來保護數位影像。 
若加密後的影像資料遺失或遭到攻擊
者惡意地破壞，則原影像將無法回復。所以
另一個資訊安全技術「秘密影像分享」因應
而生，將數位影像分成多份子影像，分散給
參與者保管。結合特定組合的子影像，就能
解回秘密影像，否則秘密影像無法回復。最
常使用的秘密影像分享機制是(k, n)門檻式
機制，k為解回秘密的門檻值，n為子影像的
數目。k張以上的子影像可解回秘密影像，
若是少於k張子影像則不能解回。此機制可
克服拷貝多份相同的秘密影像分散保管，所
導致的安全性風險，另一方面藉由門檻值也
提供子影像的容錯能力 (註:容錯能力為nk
張子影像)。 
秘密影像分享主要有兩大類：「視覺密
碼機制」和「多項式秘密影像分享機制」。
本計畫的主題為多項式秘密影像分享機
制，多項式秘密影像分享機制是利用(k1)
次方多項式的係數來嵌入秘密像素，所以需
要k個點才能解回(k1)次多項式的特性，並
進而回復原影像。多項式秘密影像分享的方
法可以得到無失真影像，但是解密時需要運
算(解多項式)。若考慮到在分散式網路使用
秘密影像分享機制的安全性，第一我們需要
確保的是在公開的網路上能安全地傳送子
影像，第二我們需要確保子影像是正確不是
假冒的。本計畫原為兩年期，預定研製完成
的目標，分別為: (1)在分散式網路安全傳送
子影像的秘密影像分享機制 (2) 利用網路
的社群信賴度以確保子影像的正確性。經核
定之後為一年期計畫，我們在計劃期間內以
原計畫第一年的內容為主要完成標的，並儘
可能也完成原計畫第二年的內容。 
 
3 
 
 
3.2 利用網路的社群信賴度確保子影
像的正確性 
一般的(k, n)-PSISS 要認證子影像時需
要加入額外的檢查位元。我們擬用網路的社
群信賴度以確保子影像的正確性。我們設計
了一種新型的(k, s, n)-PSISS，需符合社群信
賴度及門檻值。其中 s是參與者的社群信賴
深度。網路的社群信賴度在 s 範圍之內的 k
位參與者才能重建秘密影像。下面，我們從
應用情境、網路社群信賴度、系統建置等描
述(k, s, n)-PSISS。 
 
(1) 應用情境 : 
當網路的 k 位參與者要重建秘密影像
時，若這 k位的社群信賴度在 s範圍內，才
能執行秘密影像的回復。若參與者不在社群
信賴度 s範圍之內，即使門檻值達到，依然
不能解回秘密影像。圖二所示的情況，在{#2, 
#3, …, #s+1}，{#1, #2, …, #s}，{#n, #1, …, 
#s1}，或{# n1, # n, …, #s2}範圍內的任意
k 個參與者均在信賴區間內，他們彼此信
任，所以也相信彼此提供的子影像。 
 
圖二、(k, s, n)-PSISS示意圖 
 
(2) 網路社群信賴度： 
隨著Web2.0概念的興起，社群網路也更
加的蓬勃，它的特點是可以增加人與人之間
的互動，擁有相同興趣與活動的網友，可以
建立互動熱絡的社群。社群網絡一般會提供
許多方式讓使用者進行互動，包括聊天、寄
信、影音、分享檔案、寫部落格、參加討論
群組等等。一般而言，在社群網路中我們對
自己的朋友，當然比朋友的朋友信任度高。
在分散式網路我們可以利用社群信賴度，來
增加安全條件。以圖三中的社群網路示意圖
為例，IDA的朋友有 IDB和 IDC，而 IDD則是
IDA朋友的朋友(IDAIDCIDD)。一般而言，
IDA對 IDB和 IDC的信任度當然比對 IDD的信
任度高。我們的設計理念就是在信賴區間範
圍內的參與者，他們彼此信任所以也相信彼
此提供的子影像。 
 
 
圖三、網路社群信賴度示意圖 
 
(3) (k, s, n)-PSISS機制： 
我們將一張秘密影像根據社群信賴度的
範圍 s 的群組(註: 一個參與者會有 s個可能
的群組，而全部會有 n個可能的群組)，以傳
統的(k, s)-PSISS做出「分享子影像」，在分
送給每個群組的參與者。若 n個參與者社群
信賴度為連續環狀關係，每個參與者會有 s
張「分享子影像」。因為每張「分享子影像」
的大小為秘密影像的 1/k 倍，所以參與者最
後子影像為秘密影像的 s/k。這樣的設計符合
了兩個條件，(1) 需要 k 個參與者才能解回
秘密的門檻值 (2) 參與者必須在社群信賴
度的連續範圍之內。第一個條件是因為我們
使用傳統的(k, s)-PSISS做「分享子影像」，
而第二個條件是因為我們只對所有滿足社
群信賴度範圍 s 的 n 個可能的群組做(k, 
s)-PSISS。 
 
3.3 實驗結果 
我們實作一個(2, 3)-PSISS，展示我們方
法的可行性。每次我們可以嵌入 6 個 
(=k(2k1)) 秘密像素，假設 6個 (=k(2k1)) 
秘密像素為 (28, 123, 56, 49, 88, 95)，使用的
加洛瓦場 GF(28) 質多項式 x8+x4+x3+x2+1，
5 
 
International Journal of Imaging Systems and 
Technology 17 (2007) 40-47. 
[6] C.C. Lin and W.H. Tsai, Secret image sharing with 
steganography and authentication, Journal of Systems & 
Software 73 (2004) 405-414. 
[7] C.N. Yang, T.S. Chen, K.H. Yu, C.C. Wang, 
Improvements of image sharing with steganography and 
authentication, Journal of Systems & Software 80 (2007) 
1070-1076. 
[8] C.C. Chang, Y.P. Hsieh, C.H. Lin, Sharing secrets in 
stego images with authentication. Pattern Recognition 
41 (2008) 3130-3137. 
[9] C.C. Wu, S.J. Kao, W.C. Kuo, M.S. Hwang, 
Enhance the image sharing with steganography and 
authentication, Proceedings of Intelligent Information 
Hiding and Multimedia Signal Processing (2008) 
1177-1181. 
[10] Z. Eslami, S.H. Razzaghi and J.Z. Ahmadabadi, 
Secret image sharing based on cellular automata and 
steganography, Pattern Recognition 43 (2010) 397-404. 
[11] R.Z. Wang, S.J. Shyu, Scalable secret image 
sharing, Signal Processing: Image Communication 22 
(2007)363-373. 
[12] C.N. Yang and S.M. Huang, Constructions and 
Properties of k out of n Scalable Secret Image Sharing, 
Optics Communications 283 (2010) Issue 9, 1750–1762. 
[13] S.J. Lin and J.C. Lin, VCPSS: A two-in-one 
two-decoding-options image sharing method combining 
visual cryptography (VC) and polynomial-style sharing 
(PSS) approaches, Pattern Recognition 40 (2007) 
3652-3666. 
[14] C.N. Yang, C.B. Ciou, Image Secret Sharing 
Method with Two-Decoding-Options: Lossless 
Recovery and Previewing Capability,  Image and 
Vision Computing 28 (2010) 1600-1610. 
[15] C.N. Yang, J.F. Ouyang and , L. Harn 
Steganography and Authentication in Image Sharing 
without Parity Bits, Optics Communications 285 (2012) 
Issue 7, 1725–1735 
Some (k, n)-SAIS schemes were proposed in [4–7]. Lin et al. em-
bedded eight shared bits and one parity bit (for a total of nine bits)
in a four-pixel block to construct a (k, n)-SAIS scheme [4]. For precise
presentation, in this paper we refer to the parity bits as authentica-
tion bits. Embedding nine bits in a four-pixeled block is intended to
make the stego-image look like the cover image. On the other hand,
one parity bit is used to detect whether this block has been tampered
with. Although any accidentally generating wrong stego-images can
be detected, the intentionally modifying stego-images by dishonest
shareholders can be hard to detect. In [5], Yang et al. solved this dis-
honesty problem and simultaneously improved the visual quality of
stego-images by rearranging nine bits in a block. Afterward, the
schemes in [6,7] enhanced authentication ability and the visual qual-
ity of stego-images. Chang et al. [6] enhanced the detection ratio of
manipulated blocks in a fake stego-image by using four authentica-
tion bits in a block based on the Chinese remainder theorem. In [7],
the authors employed linear cellular automata, digital signatures,
and hash functions to reduce the number of modiﬁed bits in a block
so that better visual quality can be guaranteed.
All existing (k, n)-SAIS schemes [4–6] require additional authentica-
tion bits to authenticate stego-images. In [7], the SAIS scheme enables
double authentication. One can verify the signature of a stego-image
to assure the integrity of each stego-image by using a public key. How-
ever, an invalid signature only shows the stego-image that has been
modiﬁed; but not the tampered stego-blocks. In this paper, we consider
a (k, n)-SAIS scheme without any additional authentication bits. All in-
volved participants perform authentication with a vote-based protocol.
Every participant authenticates other shadows, and votes for stego-
images that he/she trusts. According to the result of a majority vote,
the authenticity of the stego-images is then determined by peers. The
proposed (k, n)-SAIS is based on symmetric bivariate polynomials and
it enhances the visual quality of stego-images. The following sections
are organized as follows. In Section 2, we review existing (k, n)-SAIS
schemes. The motivation and key contributions of our paper are de-
scribed in Section 3. The proposed (k, n)-SAIS scheme and the concept
of bivariate polynomial are introduced in Section 4. Details on the eval-
uation and experiment are given in Section 5, and Section 6 is the
conclusion.
2. Related works
2.1. Shamir's Secret Sharing Scheme
In 1979, Shamir [1] published a landmark paper that a (k, n)
secret-sharing scheme can be constructed by hiding a secret data in
the constant term f0 of a (k−1)-degree polynomial f(x)=(f0+ f1x+
…+ fk−1xk−1)mod P, where P is a prime number. By using i∈[1, n],
a dealer can generate n shadows as (i, f(i)), for i=1, 2, …, n. Any k
shadows (say (1, f(1)), …, (k, f(k))) can jointly reconstruct this (k
−1)-degree polynomial f(x) following Lagrange interpolation formu-
la and the secret data can be derived from f0= f(0).
f xð Þ ¼
Xk
i¼1
f ið Þ ∏
1≤j≤k; j≠i
x−ið Þ
j−ið Þ modP:
With this (k−1)-degree univariate polynomial, Thien et al. [2] em-
bedded secret pixels into k coefﬁcients in f(x). Thien et al.'s (k, n) secret
image sharing scheme is brieﬂy described below. We ﬁrst divide a secret
image into b non-overlapping k-pixel blocks, and every j-th (0≤ j≤b−1)
block includes the secret pixels (sjk, sjk+1,…, sjk+k-1). The (k−1)-degree
polynomial fj(x)= (sjk+sjk+1x+sjk+2x2+…+sjk+k−1xk−1)GF(28)
represents a shadow pixel associated with this j-th block, where x is
often a shadow identity. By choosing n shadow identities i∈[1, n], we
then obtain n shadow pixels fj(i). We repeat this process for all b blocks
to generate n shadows. Obviously, shadow size is 1/k of the size of the
secret image since we embed k secret pixels to one shadow pixel each
time. In decryption, the polynomial fj(x) can be reconstructed from
any k shadow pixels so that we can recover the secret image. Here, we
use the Galois Field GF(28) to embed 256 grayscales in a secret image
without distortion. Some schemes adopt an ordinary arithmetic opera-
tion (i.e., mod 251) for simple calculation. However, undermod251, the
gray-scale values >250 should be truncated to 250 and this causes dis-
tortion. In this paper, we use GF(28) for our experiment to derive a loss-
less secret image.
2.2. Lin et al.'s (k, n)-SAIS Scheme
Lin et al. proposed a (k, n)-SAIS scheme [4] by combining stega-
nography and authentication to prevent fake stego-images. Every k
secret pixel is embedded into (f0, f1,…, fk−1) in a (k−1)-degree Sha-
mir's polynomial f(x). The output of f(x) is an eight-bit tuple (s1, s2, ⋯,
s8), and one parity bit p for authentication which is even or odd parity
depending on the binary parity sequence generated by the secret key.
To reduce the distortion of image as much as possible, nine bits (i.e.,
eight shared bits and one parity bit) are embedded into a four-
pixeled stego-block. The input of the polynomial is chosen from the
upper left pixel in this stego-block, and nine bits replace the last
three least signiﬁcant bits (LSBs) in the other three pixels to construct
a stego-image.
Suppose that the original four-pixeled block in a cover image is
, where X=(x1, x2, ⋯, x8), V=(v1, v2, ⋯, v8), W=(w1, w2, ⋯, w8),
and Z=(z1, z2, ⋯, z8). Then, insert (s1, s2, ⋯, s8) and p into to derive
X^ , V^ , W^ , and Z^ as follows.
X^ ¼ x^1; x^2; ⋯; x^8ð Þ ¼ x1; x2; ⋯; x8ð Þ;
V^ ¼ v^1; v^2; ⋯; v^8ð Þ ¼ v1; v2; ⋯; v5; p; s1; s2ð Þ;
W^ ¼ w^1; w^2; ⋯; w^8ð Þ ¼ w1;w2; ⋯;w5; s3; s4; s5ð Þ;
Z^ ¼ z^1; z^2; ⋯; z^8ð Þ ¼ z1; z2; ⋯; z5; s6; s7; s8ð Þ:
8>><
>>:
ð1Þ
The stego-block block of the Lin et al.'s (k, n)-SAIS scheme is
shown in Fig. 1, where the underlining of x^=(x1, x2, ⋯, x8) implies
that (x1, x2, ⋯, x8) is the input of f(x).
2.3. Yang et al.'s (k, n)-SAIS Scheme
Because a participant can derive parity information from his/her
own stego-image, he/she can maliciously make a fake stego-image
that can pass authentication but compromises the reconstruction.
In [5], Yang et al. avoided this authentication weakness to prevent
dishonest participants from cheating. The enhanced authentication
ability comes from the use of a hash function with a secret key to
generate the authentication bit p. The inputs of HMAC are the
block ID and all 31 bits in the stego-block exclusive to the authenti-
cation bit. Yang et al.'s (k, n)-SAIS scheme also rearranged nine bits
in the stego-block to improve the visual quality of the stego-image.
Fig. 1. The stego-block of Lin et al.'s (k, n)-SAIS scheme.
1726 C.-N. Yang et al. / Optics Communications 285 (2012) 1725–1735
4. The Proposed (k, n)-SAIS Scheme
A (k−1)-degree univariate polynomial is used to construct (k, n)-
SAIS schemes in [4–6]. Our (k, n)-SAIS scheme is based on a symmet-
ric bivariate polynomial. We use the symmetric property to verify
stego-images without using authentication bits.
4.1. Secret Sharing Scheme using Bivariate Polynomial
A bivariate polynomial is a polynomial with two variables. A (k−1)-
degree bivariate polynomial has the form f x; yð Þ ¼∑0≤i;j≤ k−1ð Þaijxiyj, on
which some (k, n) veriﬁable secret sharing schemes and proactive secret
sharing schemes were proposed [8–13]. Most of them used non-
symmetric bivariate polynomials to achieve different features of veriﬁ-
able secret sharing schemes. In [9], the authors also showed an uncondi-
tionally secure (k, n) veriﬁable secret sharing scheme based on
symmetric bivariate polynomial. A so-called bivariate polynomial
f(x, y) of degree (k−1) is said to be symmetric if f(x, y)= f(y, x).
This symmetric polynomial can be easily implemented by setting all co-
efﬁcients aij and aji, 0≤ i, j≤(k−1), to be equal.
It can be easily veriﬁed that f x; yð Þ ¼∑0≤i;j≤ k−1ð Þaijxiyj=
∑0≤i;j≤ k−1ð Þajixiyj= f(y, x) since aij=aji. In this paper, we use this sym-
metric bivariate polynomial in Eq. (5) to construct our (k, n)-SAIS
scheme.
f x; yð Þ ¼
a00 a01y … a0 k−1ð Þy
k−1
a01x a11xy ⋯ a1 k−1ð Þxyk−1
⋮ ⋮ ⋱ ⋮
a0 k−1ð Þx
k−1 a1 k−1ð Þx
k−1y ⋯ a k−1ð Þ k−1ð Þxk−1yk−1
0
BBB@
1
CCCA GFð2
8Þ: ð5Þ
In Eq. (5), there are only 1+2+3+…+k=k(k+1)/2 distinct
coefﬁcients in f(x, y). Therefore, we can embed secret data into
these distinct coefﬁcients by sharing f(j, y), 1≤ j≤n, to n stego-
images where j is the identiﬁer of participant j. From (5), the polyno-
mial f(j, y) is reduced to bj0+ bj1y+…+bj(k−1)yk−1.
This symmetric bivariate (k−1)-degree polynomial also has the
same threshold property as Shamir's polynomial [9]. The threshold
property implies that one can reconstruct f(x, y) from any k polyno-
mials (say f(1, y),f(2, y), …, f(k, y)). We then have the following k
polynomials.
f 1; yð Þ ¼ b10 þ b11yþ…þ b1 k−1ð Þyk−1;
f 2; yð Þ ¼ b20 þ b21yþ…þ b2 k−1ð Þyk−1;
⋮
f k; yð Þ ¼ bk0 þ bk1yþ…þ bk k−1ð Þyk−1:
8>><
>>:
ð6Þ
By using the symmetric bivariate (k−1)-degree polynomial, we can
encrypt k(k+1)/2 pixels into k shared pixels (bj0, bj1, …, bj(k−1)) for
the j-th stego-image, 1≤ j≤n. So, the shadow size is k/(k(k+1)/2)=2/
(k+1) times the secret image, which is different from 1/k by using Sha-
mir's scheme. However, the symmetric property of bivariate polynomial
can be used in our vote-based SAIS scheme to save the authentication
bits.
4.2. The Encryption/Decryption Algorithm
The proposed (k, n)-SAIS scheme is based on symmetric bivariate
polynomial f(x, y) of degree (k−1). Every k(k+1)/2 secret pixels are
embedded into the coefﬁcients in f(x, y). The k shared pixels are ar-
ranged carefully in k(k+1)/2 stego-blocks for the j-th stego-image
in order to obtain a better PSNR. On the other hand, the symmetric
property is adopted to authenticate the validity of a stego-image mu-
tually among all participants. Algorithm 1 and Algorithm 2 are en-
cryption and decryption procedures, respectively. Description and
diagrammatical representation of notations in our algorithms are de-
ﬁned below.
Algorithm 1. Encryption of the proposed (k, n)-SAIS scheme
Input: I; O(j), j∈[1, n]; /* a secret image and n cover images */
Output: O^ jð Þ, j∈[1, n]; /* n stego-images */
For i=1 to (W×H)/(k(k+1)/2) do /* process every k(k+1)/2-
pixeled unit at each iteration */
{ Gain I(i); /* obtain an unit from I */
{ For j =1 to n do
{ Gain B(i, j); /* obtain an extended block from O(j) */
F(I(i), B′(i, j))=(s1(i, j), …, sk(i, j)); /* ﬁnd k shared pixels (i.e., 8 k
shared bits) */
Put back 8 k shared bits into the null LSBs in B′(i, j) to obtain a stego-
extended block B^ i; jð Þ;
/* As an example, for the proposed (3, n)-SAIS scheme, a stego-
extended block (embracing 6 stego-blocks) is shown in Fig. 5. The bi-
nary form of a shared pixel is s1(i, j)=(s1, 1(i, j), …, s1, 8(i, j)). There
are total 24 shared bits (i.e., 3 shared pixels) in (3, n)-SAIS scheme.
For simplicity, Fig. 5 shows the structure of B^ 1; jð Þ. */
Put the stego- extended block B^ i; jð Þ on O^ jð Þ;
}; /* end for j */
}; /* end for i */
The ﬂow chart of our decryption is shown in Fig. 6. Any k stego-
images are ﬁrst mutually veriﬁed by using the symmetric bivariate
polynomial. Suppose that the k stego-images are all valid. Every
stego-image should obtain (k−1) votes from others. Therefore, if
any one stego-image gains less than (k−1) votes we stop reconstruc-
tion and proceed with the authentication procedure with the help of
other (n−k) stego-images. Other participants vote for these k stego-
images. If the stego-image gains less than T votes from (n−1) partic-
ipants we consider this stego-image fake; otherwise it is a valid stego-
image.
At this time, a majority vote is used to carry out the authentica-
tion. Majority rule is a decision rule that selects the valid stego-
images which have a majority (more than half the votes). It is
reasonable to suppose more than half participants are honest. We
identify whether the involved stego-images obtain a plurality of
votes more numerous than manipulated stego-images. The number
of the most votes from other participants is (n−1) votes. Therefore,
a majority-voting threshold is chosen as T= ⌈(n−1)/2⌉. Since ⌈(n−
1)/2⌉= ⌊n/2⌋, it implies that we need a majority ⌊n/2⌋+1 honest par-
ticipants among all n participants to achieve the threshold. Obviously,
the collusion of participants above a certain threshold can allow a
fake stego-image to pass authentication. When choosing the thresh-
old T= ⌈(n−1)/2⌉, our (k, n)-SAIS can tolerate ⌊n/2⌋ colluded partici-
pants to compromise the authentication procedure.
Algorithm 2. Decryption of the proposed (k, n)-SAIS scheme
Input: Any k stego-images (say O^ 1ð Þ, O^ 2ð Þ, …, O^ kð Þ;
Output: I; /* veriﬁcation of k stego-images and reconstruction of
the secret image */
Phase 1–1 (Veriﬁcation Phase: k participants involved in
reconstruction):
For i=1 to (W×H)/(k(k+1)/2) do
{For j =1 to k do
{Every participant obtain polynomial f(A(i, j), y) from
his/her own B^ i; jð Þ;
k participants mutually check the validity of the
B^ i; j1ð Þ and B^ i; j2ð Þ by f(A(i, j1), A(i, j2))= f(A(i, j2), A(i, j1)), where
j1, j2∈ [1, k] and j1≠ j2;
/* using the symmetric property of f(x, y) */
}; /* end for i */
1728 C.-N. Yang et al. / Optics Communications 285 (2012) 1725–1735
and s3(i, 3)=92 for stego-image #3) into one stego-extended block
(24 pixels). Fig. 7(b–d) shows 24 pixels in cover image and the
modiﬁed pixels in stego-image, and show how to embed the 24
shared bits.
Here, we demonstrate that every participant can authenticate
the validity of other stego-images. For example, participant #1 can
derive f(48, y), f(184, y), f(90, y), and A(i, 1)=48, A(i, 2)=184,
and A(i, 3)=90 from his/her stego-image and other two stego-
images. By verifying f(48, 184)= f(184, 48)=174 and f(48, 90)=
f(90, 48)=118, he/she can successfully authenticate stego-images #2
and #3. Consider the case in which a stego-extended block is tampered
with (say B^ i;2ð Þ). There are three possible cases for tampering with
B^ i;2ð Þ as follows.
Case (1) modiﬁed bits are in B′(i, 2) and do not include the shared
bits.
In this case, the polynomial f(184, y) is not modiﬁed since
the coefﬁcients of f(184, y) are obtained from the shared
bits of s1(i, 2), s2(i, 2), and s3(i, 2). However, the modiﬁca-
tions in B′(i, 2) result in A′(i, 2), which equals A(i, 2) with
the probability 1/256. So, f(48, A′(i, 2)) only has the same
value of f(148,48) =174 with a probability of 1/256 to
pass authentication. For example, if A′(i, 2)=183, then
f(48, 183)=14, and thus f(48, 183)≠ f(184, 48). Participant
#1 then successfully detects tampering in stego-image #2.
Case (2) modiﬁed bits are located in the shared bits of s1(i, 2), s2(i, 2),
and s3(i, 2).
In this case, the polynomial f(184, y) is modiﬁed to f′(184,
y), while the value of A(i, 2)=184 is not changed. Suppose
only one shared bit s1, 1(i, 2). Thus, we have s1, 1(i, 2)=73,
and then f′(184, y)=73+126y+53y2. Since f′(184, 48)=
46, participant #1 ﬁnds that f′(184, 48)≠ f(48, 84) and
then detects tampering.
Case (3) modiﬁed bits are located in both B′(i, 2) and the shared
bits (s1(i, 2),s2(i, 2),s3(i, 2)).
In this case, the polynomial f(184, y) and the value of A(i,
2) are both changed to f′(184, y) and A′(i, 2), respectively.
f(48, A′(i, 2)) and f′(184, A(i, 1)) have the same value
with probability 1/256. For example, if f′(184, y)=73+
126y+53y2 and A′(i, 2)= 183, then f(48, 183)=46 and
f′(184, 48)=46. Since they are not equal, tampering is
detected.
If every shadow gain two votes from other two participants, the
stego-images are authenticated successfully. We then proceed to
reconstruct f(x, y) from f(48, y), f(184, y) and f(90, y). Suppose we
only have two polynomials (say f(48, y) and f(184, y)). From f(48, y)
and f(184, y), we could derive six equations in Eq. (9). One can easily
verify the rank of these six equations is only 5. Actually, we cannot
solve these equations for six variables. By adding Eq. (10) from
f(90, y), we can solve a00=28, a01=123, a02=56, a11=49,
a12=88, and a22=95 fromEqs. (9) and (10). Finally,we recover six se-
cret pixels.
a00 þ 48 a01 þ 482  a02 ¼ 52⇒a00 þ 48 a01 þ 105 a02 ¼ 52
a01 þ 48 a11 þ 482  a12 ¼ 204⇒a01 þ 48 a11 þ 105 a12 ¼ 204
a02 þ 48 a12 þ 482  a22 ¼ 242⇒a02 þ 48 a12 þ 105 a22 ¼ 242
a00 þ 184 a01 þ 1842  a02 ¼ 201⇒a00 þ 184 a01 þ 58 a02 ¼ 201
a01 þ 184 a11 þ 1842  a12 ¼ 126⇒a01 þ 184 a11 þ 58 a12 ¼ 126
a02 þ 184 a12 þ 1842  a22 ¼ 53⇒a02 þ 184 a12 þ 58 a22 ¼ 53
8>>>><
>>>>:
ð9Þ
(a-1) (a-2) (a-3)
(b-1) (b-2)
(c-1) (c-2)
(d-1) (d-2)
Fig. 7. Generation of stego-blocks for the proposed (3, 3)-SAIS scheme: (a) six secret pixels, f(x, y), and f(A(i, j), y), j=1, 2, 3 (b) stego-image #1 (c) stego-image #2 (d) stego-image #3.
1730 C.-N. Yang et al. / Optics Communications 285 (2012) 1725–1735
one MB and 4 modiﬁed bits in one AB. Eslami et al.'s scheme has
8 modiﬁed bits in one SB and (k−2) NB. The proposed scheme em-
beds 8 k shared bits into k(k+1)/2 stego-blocks. So, it has k(k+1)/
2 SB.
From the above description, we can easily derive the average
modiﬁed bits per stego-block for all (k, n)-SAIS schemes. Let the num-
ber of average modiﬁed bits per stego-block for Lin et al.'s scheme,
Yang et al.'s scheme, Chang et al.'s scheme, Eslami et al.'s scheme,
Table 1
Description and diagrammatical representation of notations.
notation description diagrammatical representation
I I(i) I is the secret image with (W×H) pixels, which is divided into I(i) units, 1≤ i≤(W×H)/
(k(k+1)/2). Every unit I(i) has k(k+1)/2 pixels.
O(j) O^ jð Þ O(j), 1≤ j≤n, is the j-th cover image with (2W×2H) pixels. There are (W×H) blocks.
Every block has four pixels Xi, Wi, Vi and Ui, 1≤ i≤(W×H). Suppose that xi is the pixel
value for Xi and its binary representation is (xi, 1, xi, 2,…, xi, 8). Other notations wi, vi and ui
follow similarly. On the other hand, O^ jð Þis the j-th stego-image after embedding the secret
image. Every stego-block has four pixels X^ i , W^ i , V^ i and U^ i .
B(i, j) B^ i; jð Þ B(i, j), 1≤ i≤(W×H)/(k(k+1)/2), is the i-th extended block in O(j). Every extended block
has k(k+1)/2 blocks. On the other hand, B^ i; jð Þis the i-th stego-extended block in O^ jð Þ.
Every stego-extended block has k(k+1)/2 stego-blocks.
B′(i, j) B′(i, j) are the remaining bits which 8 k least signiﬁcant bits are excluded from B(i, j).
F(⋅, ⋅) By using the unit I(i) (k(k+1)/2 pixels) as the k(k+1)/2 distinct coefﬁcients in a bivariate
polynomial to generate a (k−1)-degree symmetric polynomial f(x, y). Then, we gain a
pixel A(i, j)=HK((B′(i, j))∥ i∥ j ∥W∥H)8, which is an eight-bit hash result of B′(i, j), the ex-
tended block ID “i”, the stego-image ID “j”, and the secret image sizeW and H. Suppose that
HK(·) is a keyed hash function, e.g., HMAC deﬁned in RFC2104 requiring a secret K for
operation. Afterwards, we use A(i, j) in substitution for x in f(x, y) to calculate f(A(i, j), y)=
s1(i, j)+s2(i, j)y+…+sk(i, j)yk−1. = bk−1. Finally, we get 8 k shared bits F(I(i), B′(i, j))=
(s1(i, j), …, sk(i, j)).
1732 C.-N. Yang et al. / Optics Communications 285 (2012) 1725–1735
(3) the size of the detection unit, (4) the authentication bits in a
stego-block, (5) the average number of modiﬁed bits per stego-
block, and (6) the number of processed stego- blocks.
To consist with the ﬁrst SAIS scheme [4], all schemes use a stego-
image four times larger than the secret image, even though some
schemes do not need to expand their stego-images by four times. For
example, when discarding the AB, the stego-image size in [4–6] can
be reduced by 4/k times of the secret image because AB is not required
in them in order to share secret pixels. Considering authentication capa-
bility, Lin et al.'s scheme is compromised by the dishonest participant
problem. As shown in [4], a dishonest participant can perform three
types of manipulations, namely, the unobvious modiﬁcation of the
stego-image, the obvious modiﬁcation of the stego-image, and the re-
placement of the stego-image. Any modiﬁcation of stego-image in
Eslami et al.'s scheme is detected by verifying the signature, but it
only detects the invalidity of SB with probability 255/256 and cannot
locate modiﬁcation areas if the tampering occurs at NB. Because of re-
moving authentication bits from the stego- extended block, our scheme
only coarsely indicates tampered areas with the size of k(k+1)/2
stego-blocks. In the proposed SAIS scheme, it is possible to reduce the
size of detection unit by changing some SB to MB. However, our small
PSNR is due to the fact that authentication bits are not required. The
changing some SB to MB apparently will degrade the PSNR of stego-
images. Our scheme enhances the PSNR at the cost of increasing the de-
tection size. All in all, form Table 3, our SAIS scheme outperforms other
SAIS schemes.
6. Conclusion
In this paper, we discuss the visual quality of stego-image (i.e., the
PSNR) and authentication ability (i.e., DR) of a (k, n)-SAIS scheme. A
(k, n)-SAIS scheme is proposed based on symmetric bivariate polyno-
mial. We combine both authentication and secret sharing features
into shared bits without needing additional authentication bits. The
validity of a stego-image is authenticated by a vote-based protocol.
Our (k, n)-SAIS scheme achieves high PSNR and DR as compared
with existing SAIS schemes.
Acknowledgment
This workwas supported in part by the National Science Council pro-
ject under Grant NSC 99-2631-H-259-001-, and the Testbed@TWISC,
National Science Council under the Grant NSC 100-2219-E-006-001.
Fig. 10. Authentication results: (a) a fake stego-image (b) authentication of the proposed scheme (c) authentication of Yang et al.'s scheme (d) authentication of Chang et al.'s
scheme.
Table 2
PSNRs of stego-images for ﬁve (3, 5)-SAIS schemes.
Lin et al.'s
scheme
Yang et al.'s
scheme
Chang et al.'s
Scheme
Eslami et al.'s
scheme
The proposed
scheme
Lena 43.82 dB 46.11 dB 42.28 dB 47.59 dB 52.91 dB
Pepper 43.78 dB 46.14 dB 42.30 dB 47.53 dB 52.91 dB
Baboon 43.81 dB 46.14 dB 42.31 dB 47.55 dB 52.91 dB
Elaine 43.77 dB 46.12 dB 42.29 dB 47.50 dB 52.90 dB
Boat 43.80 dB 46.10 dB 42.22 dB 47.51 dB 52.91 dB
1734 C.-N. Yang et al. / Optics Communications 285 (2012) 1725–1735
 
 
 
 
 
1. 出國補助經費分成兩次使用，如下: 
ICITIS 2011 
1. 會議名稱: 2011 International Conference on Information Theory and 
Information Security (ICITIS 2011). 
2. 日期、地點: 4-6 Nov., 2011; Hangzhou, China. 
3. 發表論文名稱: Applying Dynamic Partition in IRC-Based Botnet 
Detection 
ACSA 2011 
1. 會議名稱: 2011 FTRA International Symposium on Advances in 
Cryptography, Security and Applications for Future Computing (ACSA 
2011). 
2. 日期、地點: 12-14 Dec., 2011; Jiju, Korea. 
3. 發表論文名稱:  Aspect Ratio Invariant Visual Cryptography by 
Image Filtering and Resizing 
 
2. 出國報告 
3. 論文接受函 
4. 論文全文 
 
 
 
4. 論文發表與主持會議: 
   本人論文 “Applying Dynamic Partition in IRC-Based Botnet Detection”，是屬於會議主題
Network Theory and Technology，為 oral presentation。論文並刊載於 IEEE ICITIS 2011
Proceeding, Vo. II, pp. 655-660。本人並應主辦單位的邀請擔任會議主持人，主持 Session 4: 
Network Theory and Technology。 
 
二、 與會心得 
1. 此次會議主要是由北郵大學信息安全中心主任楊義先教授所領導的靈創國際交流中心所負
責籌辦規畫。楊教授是大陸長江學者，在資訊安全與密碼領域有卓越的表現。本人與教授楊
義先教授，及今年主辦ICITIS2011的浙江工業大學毛家發教授有進一步的學術合作。他們倆
位在我擔任主編的專書“Steganography and Watermarking” (to be published in Nova Science 
Publishers)中，撰寫兩篇專章。 
2. 會議中有許多學者發表影像安全相關論文，例如: 金鑰管理、簽章、網路安全等，對本實驗
室後續研究有十分的助益。有些論文和本實驗室目前研究方向吻合，值得參考，特摘選數篇
論文如下： 
(1) Detecting DDoS Attack in Spam Emails using Density-Weight Model 
(2) Novel Model for P2P Botnet Detection 
(3) Oblivious Transfer Protocol Based on Blind Signature 
(4) Analysis and Improvement of Provable Secure Hierarchical Identity Based Signature Scheme in 
the Standard Model 
(5) A EBS-Based Self-Healing Dynamic Key Management Scheme for Wireless Sensor Networks
(6) Attacks on the Santi-Magda ECC-Based RFID Protocol 
(7) A Data Hiding Algorithm for Video Image Based on Three Dimensional Spaces 
(9) A New Authentication and Key Agreement Based on Kerberos 
(10) The Application of Information Hiding in Remote Sensing Image 
3. 與參加會議之學者互動: 
此次國際會議與會者多為資訊安全與通訊之專家學者。與會過程中與各國學者交換研究心得
與聯繫方式。主要有大會主講者，美國 University of Arizona 的 Prof. Christian Collberg。另外
還有西安電子科技大學王新梅教授，王老師為大陸在密碼與糾錯碼領域非常知名的學者。還
有重慶郵電大學的謝顯中教授、上海大學的牛志華教授、浙江工業大學毛家發教授、泰國 TOT 
Innovation Institute 的 Dr. Doy Sundarasaradult。 
 
 
 
       
  (c) 大會主講美國的Prof. Christian Collberg             (d) 本人主持的Session 4 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
0940222 修訂/表 RD104 
(iii) 產業安全與相關服務: 電子商務安全、風險評估和安全準則、 安全政策、智能手機安
全、IPTV 安全服務、BCN 的安全問題、...等。 
大會總共有 15 個 oral sessions，4 場 keynote speeches。第一場 Dr. Mohammad S. Obaidat 的講
題是綠色資通技術的發展與相關研究，而第三場 keynote speech，則是台灣宜蘭大學趙涵捷
校長，介紹台灣 WiMAX 的發展、建置現況。 
4. 論文發表與主持會議: 
   本人論文 “Aspect Ratio Invariant Visual Cryptography by Image Filtering and Resizing”，是屬於
會議主題安全協議與應用中的 “信息隱藏”，為 oral presentation，並且論文已確定被 Personal 
and Ubiquitous Computing 期刊(SCI IF: 1.137)接受，將於會議後刊登。本人並應主辦單位的
邀請擔任會議主持人，主持 Session 4-E。在國際會議提供服務，除了善盡本分，也收穫良
多。本 Session 共有四篇論文報告: (i) Compact and Unified Hardware Architecture for SHA-1 
and SHA-256 of Trusted Mobile Computing (ii) Polynomial-based Key Management for Secure 
Intra-group and Inter-group Communication (iii) A novel user authentication scheme with 
anonymity for wireless communications (iv) Go Anywhere: User-Verifiable Authentication over 
Distance-Free Channel for Mobile Devices。 
   另外，本人與韓國世宗大學 Cheonshik Kim 合作之文章“A Secret Sharing Scheme for EBTC 
using Steganography”，亦在 ACSA2011 發表。 
 
二、 與會心得 
1. 此次會議還有七個不同workshops，對參與者而言，能有機會同時聽到各種領域的研究，對跨
領域的整合研究，有相當幫助。 
2. 會議中有許多學者發表資訊安全相關論文，例如: 金鑰管理、簽章、認證、網路安全、影像
安全等，對本實驗室後續研究有十分的助益。特摘選數篇論文如下： 
(1) A Sensitive Data Aggregation Scheme for Body Sensor Networks Based on Data Hiding 
(2) Secure and Efficient Data Retrieval over Encrypted Data Using Attribute-Based Encryption in 
Cloud Storage 
(3) Polynomial-based Key Management for Secure Intra-group and Inter-group Communication 
(4) Go Anywhere: User-Verifiable Authentication over Distance-Free Channel for Mobile Devices
(5) Fault Attacks on CBC-MAC and its Variants based on AES-128 
(6) UFLE: A User-friendly Location-free Encryption System for Mobile Users 
(7) An Efficient CCA-Secure Cryptosystem Over Ideal Lattice from Identity-Based Encryption 
(8) A New Way to Generate a Ring: Universal Ring Signature 
 
六、 其他  
(會議相關照片) 
      
    (a) Dr. Mohammad S. Obaidat大會主講             (b) ACSA 2011 歡迎晚宴 
 
         
   (c) 與韓國Prof. Kim、台灣左瑞麟教授合影 (d) 與本人有學術合作的的Prof. Kim發表論文 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
0940222 修訂/表 RD104 
Dear Ching-Nung Yang, Pin-Wei Chen, Hsiang-Wen Shih, Cheonshik Kim,
Congratulations!!
We are happy to inform you that your paper entitled "Aspect Ration Invariant Visual 
Cryptography by Image Filtering and Resizing", has been finally accepted for being 
presented at the 2011 FTRA International Symposium on Advances in Cryptography, Security and 
Applications for Future Computing (ACSA 2011) (http://www.ftrai.org/wcc2011/acsa).
Also, your paper will be included in a special issue of Personal and Ubiquitous Computing -
Springer (SCIE)  after the minor revision if you keep the following important instructions 
(as for the minor revision, the review reports will be sent later to you). 
======================
IMPORTANT INSTRUSTIONS
======================
1) This is a mandatory rule for citation. 
- You should cite at least 2 references from each of the following journals: JoC, IJITCC, 
and JIPS (totally, you should cite at least 6 references in your paper).
- - We have checked that your revised paper has cited at least 2 references of the 
journals JoC, IJITCC each, but not cited at least 2 references of the journal JIPS. 
- You could find their titles and summaries at http://www.ftrai.org/publication-
summary.htm and http://www.jips-k.org/jips-publication-summary.html
- You should follow this mandatory rule when preparing your final manuscript (this 
preparation can be done after you receive the review reports which will be sent later to 
you).
2) Presentation Material and Guideline
(a) In order to avoid copyright problems, the accepted papers will not be included in 
the workshop proceedings, but only presentation slides of the accepted papers will be 
included in the proceedings. So, please prepare a material (PPT file, page limitation: 
maximum 20 pages) for your presentation in ACSA 2011 and then send it to 
김종성 <acsa2011.puc@gmail.com>
來源: 김종성 <acsa2011.puc@gmail.com> 
收信: cnyang@mail.ndhu.edu.tw 
日期: Thu, 06 Oct 2011 20:00:21
標題: Final Notification of Your Paper from ACSA-11 (paper id: 188) 
頁 1 / 2
2012/10/5https://mail.ndhu.edu.tw/cgi-bin/msg_read?cmd=print_mail&m=78531742&mbox=@...
 Applying Dynamic Partition in IRC-Based Botnet Detection 
Ching-Nung Yang1), Tsung-Yu Wu1) , Li-Jen Hu1), Ping Wang2) , Chi-Hsuan Lee2) 
1) Dept. of Computer Science and Information Engineering, National Dong Hwa University, Hualien, Taiwan 
2) Dept. of Information Management, Kun Shan University, Tainan, Taiwan 
 
 
Abstract—IRC-based botnet is a serious cyber-security 
threat. Recently, Wang et al. proposed an IRC-based botnet 
detection by evaluating channel distance, which calculates 
differences among nicknames within one channel. Wang et 
al.’s scheme provided real-time detection. However, this 
method only works when the number of clients in a channel is 
greater than 20. In this paper, we propose a dynamic partition 
approach for any M. Our detection algorithm achieves 
timeliness and accuracy for detecting IRC-based botnets. In 
addition, our scheme has the less false positive rate compared 
with Wang et al.’ scheme.  
Keywords- IRC; nickname; channel distance; dynamic 
partition 
I.  INTRODUCTION 
Botnet is a computer or network security threat [1, 2]. It 
is a distributed platform to conduct illegal activities. A 
botnet consists of zombie (infected host), bot (malicious 
software), botmaster (hacker), C&C channel (command and 
control channel). Zombies are infected through a bot, and 
then controlled through a C&C channel by a botmaster to 
perform some predefined functions. The C&C channel is 
often over some existing protocols, such as IRC protocol, 
P2P protocol, and HTTP protocol. As we know, one can 
chat with people who have similar interests as you in 
Internet Relay Chat (IRC). This social chatting room, since 
its birth in 1989, has become increasingly more popular 
today. People login into an IRC server by their nicknames, 
unique IDs of clients, and then meet at channels to talk in 
groups, or privately chat with somebody. IRC servers have 
become the most common C&C, on which the botmaster can 
communicate with zombies. 
IRC bot is an assembly of programmed codes that 
behave as a client in an IRC channel. However, it does not 
provide interactive access but only performs predefined 
functions [2]. An IRC-based botnet operates as follow. A 
zombie first joins a channel, and then receives instructions 
from the botmaster. Normal users freely choose their 
nicknames according to their usual practices (note: clients 
are distinguished from each other by their nickname), while 
most bot nicknames are composed of a constant string and a 
random string. Botnets will spread, and thus the botmaster 
confirm its zombies by nickmaes and kick out others from 
the channel if their nicknames do not match the format of 
the botnet. Afterward, bots are controlled by the botmaster, 
to perform some illegal activities, such as DDoS, malware 
dissemination, phishing, …, etc. 
Since botnet is a serious cyber-security threa, botnet 
detection has been an important research issue. There are 
some methods on botnet detection: signature-based, 
anomaly-based, DNS-based, and mining-base [1]. Some 
botnet detections are briefly described as follows. The 
authors in [3] examined the behavior of bots connecting to 
an IRC server, which is different to other IRC clients; for 
example bots often tried to reconnect to an IRC server at 
certain intervals when the server refused the connection 
from the bot. By the flow correlation [4], the packet size 
sequence [5], and the port number [6], the normal IRC and 
abnormal IRC traces can be identified. In [7, 8], the k-means 
clustering method and one-class support vector classifier 
were, respectively, used to achieve a high accuracy. For 
achieving online botnet detection, Discrete Fourier 
Transform was adopted to efficiently calculate the feature 
streams of network traffic. 
The above botnet detections are based on passive 
network traffic monitoring and analysis. These algorithms 
need to analyze the existing bots first. Recently, some 
detection algorithms used IRC nicknames to detect IRC-
based botnets [9, 10]. These schemes do not need any 
analysis. Rishi scheme evaluates specific patterns in 
nicknames [9]. Wang et al.’s detection algorithm [10] uses 
the similarity of nicknames in a channel. Both of them used 
the nicknames of clients for evaluation and detect whether 
the channel is infected or not. In [10], the authors define a 
so-called channel distance which the values will be quietly 
different between normal channel and bot channel. The 
reason is that a normal client freely chooses the nickname 
but bot nicknames are generated by the same bot fixedly. 
Based on this channel distance, Wang et al.’s detection 
algorithm can achieve real-time botnet detection without any 
delay. Real-time detection makes us detect an IRC-based 
botnet during the construction period, so that we can prevent 
botnet in advance. However, Wang et al.’s algorithm only 
works when the number of clients in a channel is larger than 
20. In this paper, we enhance Wang et al.’s algorithm to 
propose a dynamic partition approach for any M. Also, our 
algorithm has a less false positive rate. The rest is organized 
as follows. Wang et al.’s method is introduced in Section II. 
The proposed scheme is described in Section III. Evaluation 
and result are given in Section IV. Finally, our conclusion is 
drawn in Section V. 
II. PREVIOUS WORK 
Wang et al. recently proposed a novel approach to detect 
IRC-based botnets based on the similarity of nicknames [10]. 
A normal client freely chooses the nickname, but most bot 
nicknames are composed of a constant string and a random 
string generated by the same bot fixedly. Thus, the 
655
  ___________________________________ 
  978-1-61284-744-3/11/$26.00 ©2011IEEE   
 ( ) ⎣ ⎦( ) ( )2 / ( 1) / 2i M i M i× ≈ × −
1,1
1,2
1, /M i
m
m
m ⎢ ⎥⎣ ⎦
#
2,1
2,2
2, /M i
m
m
m ⎢ ⎥⎣ ⎦
#
,1
,2
, /
i
i
i M i
m
m
m ⎢ ⎥⎣ ⎦
#
( )
1,1 2 ,1
1,1 3,1
1,1 ,1
calculations
2
( , )
( , )
( , )
    
   
i i
i
d m m
d m m
d m m−
⎧⎪⎨⎪⎩
#
 
Figure 3.  The i-set partition, 2≤i≤M, with ( ) ⎣ ⎦/2i M i×  calculations of 
nickname differences 
( )( )1 2
1 2 1 2
/
, ,
1 , [1, ],  
( , ) /   (3)2
M i
i i j i j
j i i i i i
iD d m m M i
⎢ ⎥⎣ ⎦
= ∈ ≠
⎛ ⎞= × ⎢ ⎥⎜ ⎟ ⎣ ⎦⎜ ⎟⎝ ⎠∑ ∑  
For i=M, M-set partition case, it calculates all ( )2M = 
( 1) / 2M M −  nickname differences and gain the best 
correctness but have the complexity order of computation 
O(M2). Figure 4 shows the case i=M, and Eq. (4) gives DM. 
1m 2m Mm
 
Figure 4.  M-set partition with ( 1) / 2M M −  calculations of nickname 
differences 
( )1 2
1 2 1 2, [1, ], 
( , ) .              (4)2M i i
i i M i i
MD d m m
∈ ≠
⎛ ⎞= ⎜ ⎟⎝ ⎠∑  
We try out the value of i for our dynamic partition (the 
different i for the different M) to achieve the optimum 
performance, which has the less false positive rate to 
distinguish bot channels and normal channels and meantime 
without causing serious delays. A precision measurement, 
the standard deviation of Di, is adopted to evaluate our 
correctness of detecting botnets. The small deviation means 
that the channel distance for this M is almost fitting for all 
channels. To enhance both timeliness and accuracy, through 
experiments, an appropriate choice for our dynamic partition 
is using i=5 (5-set partition) for M≥6. On the other hand, for 
M≤5, there will be the high false alarm when using 2-set 
partition, due to the variances in channel distance. Therefore 
the better way is to calculate ( )2M  nickname differences 
(M-set partition) for M≤5. The complexity order of our 5-set 
partition is still O(M) less than O(M2) when using M-set 
partition for large M. Meantime, our approach (5-set 
partition) has the almost variances in channel distance as the 
M-set partition. However, Wang et al.’s 2-set partition may 
cause the high false alarm. A formal detection algorithm 
using dynamic partition is shown follows. 
 
IV. EVALUATION AND RESULT 
A. Performance Evaluation 
The nicknames of normal and botnet channels used for 
evaluating our dynamic partition approach are described as 
follows. The normal IRC data set is generated by collecting 
nicknames from the well-known website AVPClub Security 
Forums [11] and some IRC servers. Totally, we gain 1000 
normal nicknames as the normal channel data set. About the 
bot nicknames, the Honeynet project [12] was to study the 
botnet problem. We adopt the bot nicknames in [12], which 
describes how two hackers generate the bot nicknames. In 
this paper we adopt these nicknames in the botnet channel 
data set. Figure 5 shows both channel distances of normal 
channel and bot channels fluctuate seriously for the small M. 
This is why the authors in [10] only calculate channel 
distance for M≥20. 
The value of D2 for normal channel in Figure 5(a) is 
similar to Figure 1 in [10], our D2 for bot channel in Figure 
5(b) is greater than the value in [10]. This difference is 
caused by the choice of bot channel data set. Our simulation 
adopts the nicknames in [12], which a hacker has changed 
the nicknames. Even though the value is different, we still 
can distinguish a bot channel from a normal channel.  
 
(a) normal channel 
657
  
(a) 5-set partition                              (b) 2-set partition 
Figure 9.  The false positive rate of detecting botnets 
In our evaluation, we use a botnet channel data set from 
[12]. If we use the bot nicknames in [9], we will have the 
small channel distance like the result in [10], so that the false 
positive rate will enhanced. Choosing the bot nicknames 
which some nicknames are changed by the hacker will even 
meet the real network environment. No matter which test 
data set we use, simulation shows that our dynamic partition 
has better performance than Wang et al.’s 2-set partition. 
B. Experimental Planning and Exercise 
To reproduce network activities of the bot for evaluating 
our dynamic partition approach, we conducted an 
experiment simulating the process of infection of IRC-based 
botnet in our laboratory. Simulated network topology is 
constructed by four segments via VMware tool to deploy 
IRC servers, zombies and uninfected hosts over the 
networks, as shown in Figure 10. Simulations were carried 
out on four PCs equipped with a dual-core CPU 3.0 GHz, 
2G memory and a 16-port 10/100M switch. 
 
Figure 10.  network topology of IRC-based botnet detection  
Tools used in our simulation are IRC server consists of 
JoinMe v1.41 (http://joinme.sourceforge.net/) (see Figure 
11) and packet capture: DiamondCS Port Explorer v2.2.0 
Wireshark v1.0.7. 
 
Figure 11.  Control panel of JoinMe 
Figure 12 shows that each zombie and normal host sends 
single-line messages to the IRC server. Those messages will 
be collected by Wireshark tool and further examined to 
derive the nicknames in a channel. The server receives 
approximately 20,000 messages per day which were stored 
into a database. These information are used to distinguish a 
bot channel from a normal channel with the help of channel 
distances in Eqs. (3) and (4).  
 
Figure 12.  Simulated replies of zombies and normal channels to IRC 
server 
Table 1 and Table 2 shows the infection records for the 
total number of IRC bots for a 2-day time period, from 
March 10 to March 11, 2010. The host-ip field indicates the 
IP address of IRC server. The channel field indicates the 
communication channel between zombie and IRC server.  
TABLE 1. RECORD OF  15:46:10~16:45:27, MAR 10, 2011. 
Host IP Dest. port source IP port channel nickname
192.168.1.6 6667 192.168.5.8 2083 starbar egsd 
192.168.1.6 6667 192.168.1.7 2009 foobar yyad 
192.168.1.6 6667 192.168.3.12 1610 rebecca_wu Arlene
192.168.1.6 6667 192.168.3.9 1151 smallmento Cash 
192.168.1.6 6667 192.168.4.11 1561 shuchi0729 Kerwin
192.168.1.6 6667 192.168.3.7 1154 steve32978 Noel 
TABLE 2. RECORD OF  10:07:22~10:47:39, MAR 11, 2011. 
Host IP Dest. port source IP port channel nickname
192.168.1.6 6667 192.168.4.9 2002 shoshoman Clementine
192.168.1.6 6667 192.168.2.9 2010 starbar aabd 
192.168.1.6 6667 192.168.3.12 1555 starbar ddea 
192.168.1.6 6667 192.168.5.8 1151 starbar yyae 
192.168.1.6 6667 192.168.4.7 1562 foobar ttye 
 
Figure 13 shows the captured packets of botnet whose 
content reveals the related information consisting of source 
IP, destination IP, protocol and information (channel 
nicknames, commands, and paths) in each network 
connection. 
659
1 
 
Aspect Ration Invariant Visual Cryptography by Image Filtering and 
Resizing 
 
CHING-NUNG YANGa,  PIN-WEI CHENa, HSIANG-WEN SHIHa, and CHEONSHIK KIMb 
 
a) Dept. of Computer Science and Information Engineering, 
National Dong Hwa University, TAIWAN 
cnyang@mail.ndhu.edu.tw 
b) Dept. of Computer Engineering, 
Sejong University, KOREA  
 
 
 
Abstract 
 
A (k, n) visual cryptograph scheme (VCS) was 
proposed to share a secret image into n shadows. At 
the same time, one can print out any k or more than k 
shadows on transparencies and stack them to visually 
reveal the secret image; but, one cannot obtain any 
information of the secret image from fewer than k 
shadows. In (k, n)-VCS, each secret pixel is expanded 
to m subpixels in shadows. Apparently, we should 
put these m subpixels as a rectangle such that the 
blocks can be arranged compactly with each other, 
and meantime make shadows approximate the aspect 
ratio of the secret image. A so-called aspect ratio 
invariant VCS (ARIVCS) was accordingly proposed 
to address the arrangement of subpixels. However, 
the existing ARIVCS needs dummy pixels and a 
mapping pattern for arranging the subpixels. In this 
paper, we propose an easy solution to construct 
ARIVCS by image filtering and resizing. 
 
Keywords: visual cryptography; visual secret 
sharing; aspect ratio 
 
1   Introduction 
 
A (k, n) visual cryptography scheme (VCS), where 
k  n, divides a secret image into n shadows. One can 
reconstruct the secret image with any k or more than k 
shadows; but, one cannot obtain any information of 
the secret image from fewer than k shadows. The 
appealing property of VCS is the ease of decoding 
(the stacking-to-see property). In VCS, any k 
participants may photocopy their shadows on 
transparencies and stack them on an overhead 
projector to visually decode the secret through the 
human visual system without hardware and 
computation. Each secret pixel in the secret image is 
expanded into m (known as the pixel expansion) 
subpixels. The difference between the pixel and the 
subpixel is that the “pixel” denotes the secret pixel 
located in the secret image, and the “subpixel” means 
the pixel located in shadows. Actually, the size of a 
subpixel is the same as that of the secret pixel, and 
thus the shadow will be expanded m times. 
The first VCS was proposed by Naor and Shamir 
[1], which used the whiteness to distinguish the black 
color from the white color. The visual quality of a 
reconstructed image in VCS is degraded by a large 
pixel expansion, so that most studies try to enhance 
the visual quality or reduce the pixel expansion. 
Size-reduced VCSs schemes were proposed 
accordingly. Some of them even had no pixel 
expansion (m=1) which are known as the probabilistic 
VCS (PVCS) [2-5]. The conventional VCS with the 
fixed m (>1) unlike the PVCS is referred to as the 
deterministic VCS (DVCS). Other VCSs with 
specific features (such as sharing multiple secrets, 
cheating prevention, solving misalignment problem, 
achieving the ideal contrast,) were accordingly 
proposed [6-14]. Some novel applications of VCS 
combining watermark, fingerprint, Google street view, 
and bar code were also introduced [15-18]. Up to date, 
there are vast research papers on VCS in the literature, 
and recently a book covering an extensive range of 
topics related to VCS is published [19]. 
In VCS, we expand a secret pixel into m (say 
m=m1m2) subpixels. Apparently, we should put these 
m subpixels into the m1m2 rectangular block, such 
that the block has an aspect ratio near one to make the 
shadow image have the approximate aspect ratio of 
the secret image. Obviously, the distortion of aspect 
ratio occurs at the case that m is not a square. PVCS 
has no pixel expansion, and thus it has the property of 
the invariant aspect ratio. A so-called aspect ratio 
invariant VCS (ARIVCS) explores the possibilities of 
sharing the secret image with the invariant aspect 
ratio even with a pixel expansion m. Two ARIVCSs 
were proposed to arrange the subpixels in VCS [20, 
21]; however, they need dummy pixels in shadows to 
keep the aspect ratio. Also, the ARIVCS in [21] needs 
to find out the mapping pattern by the complex 
algorithm. 
3 
 
 
(a-1) 
 
(a-2) (b) 
Figure 2. The (2, 2)-DVCS using 21 rectangle: (a) 
two shadows (b) the stacked result 
 
Example 2: Construct the (2, 2)-PVCS by (2, 
2)-DVCS in Example 1. 
By choosing the column matrices in B1 and B0, we 
have 1C =  0 1,  1 0           and 0C =  1 0,  1 0           in (2, 
2)-PVCS. Since  1OR | 2C = {1, 1} and 
 0OR | 2C ={1, 0}, thus we have   1OR | 2P C =0 
and   0OR | 2P C =1/2. This satisfies Condition 
(P-1). Obviously,   1OR | 1P C =   0OR | 1P C = 
1/2 satisfies Condition (P-2). When using VCS in 
Figure 1(a) as the secret image. Two shadows and the 
stacked result of (2, 2)-PVCS are shown in Figure 3. It 
is observed that the shadow size is not expanded; but 
the edge of printed text in the reconstructed image is 
blurred (Figure 3(b)) when compared with Figure 1(c) 
or Figure 2(b).  
 
 
(a-1) 
 
(a-2) 
 
(b) 
Figure 3. The (2, 2)-VCS using 21 rectangle: (a) two 
shadows (b) the stacked result 
 
Example 1 (DVCS) shows that the different 
arrangements of m subpixels will cause a different 
aspect ratio of the shadow image. Although Example 
2 (PVCS) has the poor reconstructed image, it has the 
invariant aspect ratio. Generally, we put these m (the 
pixel expansion in VCS) subpixels into a rectangular 
block, such that the block can be arranged compactly 
with each other. Suppose that the secret image is a 
circle (see Figure 4(a)). Considering the scheme in 
Example 1 (m=2), the reconstructed image is an 
ellipse (see Figures 4(b) and (c)). If the shape is the 
secret information, this distortion (from a circle to an 
ellipse) compromises our secret. Obviously, the 
distortion occurs at the case that the value of is a 
square. For example, for m=6, there are four possible 
arrangements of a rectangular block, 16 
( ), 61(

), 23 ( ) and 32 ( ) 
rectangular blocks, respectively. We can choose the 
arrangements of 23 and 32 to keep the aspect ratio 
near the original image for reducing the distortion. 
However, to completely solve this problem, we need 
ARIVCS which the shadow has the same aspect ratio 
as the secret image. 
 
 
 
 
 
(a) 
 
 
 
 
 
(b) (c) 
Figure 4. The reconstructed images of (2, 2)-DVCS 
using a circle as the secret image: (a) the secret image 
(b) an ellipse using 12 rectangle (c) an ellipse using 
21 rectangle 
 
2.2 ARIVCS 
Two ARIVCSs using block-wise operation are 
introduced [20, 21]. Every secret pixels in an (a×a) 
square block in the secret image are represented by m 
subpixels to construct a (b×b) square block in 
shadows, where b2(m×a2). Moreover, the subpixels 
are arranged at the almost same position relative to 
the corresponding secret pixel in the secret image. In 
[21], a merit (the average position weighting) was 
defined to measure the distortion of the reconstructed 
image. The re-sampling method in image scaling was 
used to achieve the same relative position between 
two square blocks, the (aa) square block and the 
(bb) square block, to avoid distortion. Based on this 
measurement, an optimal pattern Ma,b is found to 
achieve the small distortion of the reconstructed 
image. The pattern Ma,b of arranging (a2×m) 
subpixels and (b2a2×m) dummy pixels in a (b×b) 
square block can be found in [21]. 
One can accomplish the (k, n)-ARIVCS based on 
these mapping patterns. We process each (a×a) block 
in a secret image, and put b2 pixels in shadows 
according to the positions in Ma,b. Finally, we have 
shadows with the size b a m    . The ARIVCS in 
[20] is a special case for a=2 in [21]. If we construct a 
(k, n)-ARIVCS by adding Nd all-1 (or all-0) columns 
5 
 
 
 
 
 
 
 
 
 
 
 
(a) 
 
(b-1) (b-2) 
(c-1) 
(c-2) 
Figure 8. The resized result of a black-and-white 
image: (a) the original image (b) the resized image 
with the aspect ratio 5:1 (c) the resized image with 
the aspect ratio 1:5. 
 
3.2 The Proposed ARIVCS 
 
By the observation of Figure 8, the encoding 
procedure of (k, n)-ARIVCS in Figure 6(a) is not 
suitable for the black-and-white image. Applying the 
image resizer, the halftoning function and the VCS 
(denoted as R()H()V()) for the grey-level 
image should be modified as F()R()H()V() 
for the black-and-white image. A filtering function 
F() is to covert a black-and-white image into a 
gray-level-image. The formal encoding procedure of 
our black-and-white (k, n)-ARIVCS with the pixel 
expansion m is shown as follows. 
 
Encoding Procedure: 
Input: The secret image I with the size xy; the pixel 
expansion m. 
Output: n shadows S1 Sn. 
Step (1): Find the suitable arrangement m1m2 for the 
pixel expansion m.  
/* (1) m = m1m2 
(2) the ratio m1:m2 is chosen to approximate 1:1 
such that the resizing in x-direction or 
y-direction in the secret image will cause the 
similar effect */ 
Step (2): Ig=F(I);  
/* Ig is a grey-level image with the same size of I */ 
Step (3):  
2 1
' , ( );g xm ym gI R I  
/* (1) 
2 1
' , ( )g xm ym gI R I is a resized grey-level  
image with the aspect ratio xm2 : ym1 
(2) 'gI  has the almost same size with I 
(3) 
2 1, ( )xm ymR   is an image resizer in Figure 6(a) 
*/ 
Step (4): '' '( )g gI H I  
/* (1) ''gI  is a black-and-white image with the same 
aspect ratio as 'gI  
(2) ''gI  has the same size with 'gI  
(3) ( )H   is halftoning function in Figure 6(a) */ 
Step (5) : 
1 2
"
1 2, ( ) , ,..., ;m m g nV I S S S  
/* (1) Apply (k, n)-VCS on ''gI  to gain n shadows 
        (2) Si has the size about x m y m   */ 
 
3.3 Extension to Arbitrary-Size VCS 
The proposed ARIVCS can be extended to an 
arbitrary-size VCS (ASVCS) with any desired size, to 
provide the more potential applications. By 
modifying the Step (3) as: , ( )g gX YI R I   in the 
proposed ARIVCS, we can obtain the image gI   with 
the aspect ratio X : Y and the size XY. Finally, the 
shadows have the arbitrary size  1 2Xm Ym  when 
we choose the desired X and Y. For example, If we 
select X and Y to make 1 2 and Xm x Ym y  , the 
ASVCS has the same feature like the PVCS that 
shadow size is same to that of the secret image. 
 
4   Experimental Results 
Experiments AD are conducted to evaluate the 
performance of the proposed (k, n)-ARIVCS for m=2, 
3, and 6. The basis matrices used for these schemes 
are Naor and Shamir’s (2, n)-VCS and (3, n)-VCS in 
[1]. A black-and-white image 512512-pixel “ruler” 
is used as a secret image. To test the proposed 
ARIVCS for the natural image, we also use a 
halftoned 512512-pixel Lena as a secret image.  
Experiment A compares the proposed (2, 
2)-ARIVCS, the (2, 2)-ARIVCS by direct resizing 
without filtering, and the (2, 2)-ARIVCS in [20, 21] to 
try out our filtering effect and also shows our scheme 
has the small shadow size compared with the (2, 
2)-ARIVCS in [20, 21]. In Experiment B, we use the 
(2, 3)-ARIVCS with m=3 and (3, 4)-ARIVCS with 
m=6. Two arrangements are used to study how the 
7 
 
 
(b-1) 888×888 pixels 
 
(b-2) 1254×1254 pixels 
Figure 10. The reconstructed images for m=3 (using 
13 arrangement) and m=6 (using 23 arrangement): 
(a) the proposed scheme (b) the scheme using direct 
resizing without filtering. 
 
 
 
 
 
(a-1) 888×888 pixels (a-2) 1254×1254 pixels 
 
 
 
 
(b-1) 888×888 pixels (b-2) 1254×1254 pixels 
 
Figure 11. The reconstructed images for m=3 (using 
31 arrangement) and m=6 (using 32 arrangement): 
(a) the proposed scheme (b) the scheme using direct 
resizing without filtering. 
 
Experiment C: Consider the proposed (2, 2)- 
ARIVCS and the (2, 2)-ARIVCS using direct resizing 
without filtering. And, the secret image is a halftoned 
Lena. 
    In the proposed scheme, we first convert the 
black-and-white Lena to a grey-level image. Then we 
resize and halftone it into a black-and-white Lena 
with the size 724362 pixels. We directly resize the 
secret image into a black-and-white Lena with the 
size 724362 pixels for the (2, 2)-ARIVCS using 
direct resizing without filtering. In this experiment, 
we use the arrangement 12 ( ) for both schemes. 
Figure 12 shows the reconstructed images. It is 
observed that our scheme has the better visual quality 
than the scheme by direct resizing without filtering. 
 
 
(a) 724×724 pixels 
 
(b) 724×724 pixels 
Figure 12. The reconstructed images for m=2: (a) the 
proposed scheme (b) the scheme by direct resizing 
without filtering and halftoning. 
 
Experiment D: Consider the proposed (2, 2)-ASVCS 
with the non-expanded shadow and the (2, 2)-PVCS 
with m=1. Two secret images “ruler” and “Lena” are 
tested. 
    We use the arrangement 12 ( ) for the proposed 
(2, 2)-ASVCS. We first derive gI   with the size XY 
pixels, where X=512 and Y=256. Finally we can 
obtain the shadows with the size 512512 pixels, 
which is same to the secret image. The (2, 2)-PVCS in 
Example 2 is used to share the secret image. Both 
schemes have non-expanded shadows. Figure 13 
shows the reconstructed images. It is observed that 
our reconstructed images (Figure 13(a)) are clearer 
than the reconstructed images (Figure 13(b)) of (2, 
2)-PVCS. 
 
   
(a-1)               (a-2)              (b-1)              (b-2)  
Figure 13. The reconstructed images for The 
proposed (2, 2)-ASVCS and (2, 2)-PVCS: (a) the (2, 
2)-ASVCS using ruler and Lena as secret images (b) 
the (2, 2)-PVCS using ruler and Lena as secret 
images. 
 
5   Conclusion 
We give another view to construct the ARIVCS by 
resizing the secret image to keep the aspect ratio 
invariant. However, resizing the black-and-white 
image will lose the informative information of pixel. 
Thus, we propose an ARIVCS based on image 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/05
國科會補助計畫
計畫名稱: 適用於分散式網路的秘密影像分享機制之研究
計畫主持人: 楊慶隆
計畫編號: 100-2221-E-259-025- 學門領域: 資訊安全
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
