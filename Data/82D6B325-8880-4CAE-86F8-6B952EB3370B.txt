1 
 
行政院國家科學委員會補助專題研究計畫 
■ 成 果 報 告   
□期中進度報告 
 
硬體惡意行為檢測技術研究 
計畫類別：■ 個別型計畫  □ 整合型計畫 
計畫編號：NSC-100-2623-E-009-007-D 
執行期間：100 年 1 月 1 日至 100 年 12 月 31 日 
 
計畫主持人：陳穎平 副教授 
共同主持人：許騰尹 副教授，范倫達 副教授 
計畫參與人員：林祐賢、趙冠傑、陳盈良、丁張玉、張家榮、陳柏憲、
許凱閔、陳振國 
 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  ■完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、
列管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
          
執行單位：國立交通大學 資訊工程系 
 
中   華   民   國   101  年  3   月   31   日 
  
3 
 
目錄 
中文摘要---------------------------------------------------------------------------------------2 
Abstract----------------------------------------------------------------------------------------2 
目錄---------------------------------------------------------------------------------------------3 
1. 前言-----------------------------------------------------------------------------------------4 
2. 硬體木馬之相關簡介--------------------------------------------------------------------5 
3. 研究方法-----------------------------------------------------------------------------------9 
4. 研究成果----------------------------------------------------------------------------------12 
5. 結論----------------------------------------------------------------------------------------15 
6. 參考文獻----------------------------------------------------------------------------------15 
  
5 
 
2. 硬體木馬之相關簡介 
2.1 硬體木馬分類 
    在這個節列出不同硬體木馬的分類架構，了解木馬電路的行為，先得了解其種類，因
此先參考國內外研究情形將諸種型態與攻擊模式予以分類。 
Yun 等人在 2010 年提出被攻擊後的影響(Payload)和觸發條件(Trigger)的分類架構[3]，
其中觸發部分如圖 2 所示。電路被攻擊者植入木馬後，在特定條件觸發後將會對電路造成
影響，稱之為攻擊效果(Payload)。根據攻擊者目的會造成不同的效果。主要為以下三種: (1)
洩露機密資訊：通常都是較敏感的訊息，如未加密過的私人資料；(2)更改電路功能：讓電
路功能違反原本的設定，輸出非預期中的結果；(3)毀壞晶片：使其癱瘓停止運行。這些攻
擊會在特定條件被觸發(Trigger)，又可分成觸發途徑(Accessibility)、觸發位置(Location)、
觸發媒介(Medium)。 攻擊者若把硬體木馬植入於易被偵測的區域中，很容易硬體木馬運
作前被發現且丟棄，因此攻擊者必會將硬體木馬植入在較難偵測的路徑。如在電路中較少
出現的輸出(output)去觸發硬體木馬，抑或是特定計數器(dedicated counter)計數到特定值而
觸發等的罕見條件。另一種可能是硬體木馬一直保持運作的狀態，對電路運作功能不造成
影響，但卻耗損電路壽命。 
 
於[4]中 Wang 等人提出依照(1)實體情況(Physical)、(2)活化方式(Activation)、(3)行為模
式(Action)三層面之分類架構，其分類架構如圖 3 所示。 
Trojan 
Classification
Physical 
Characteristics
Activation
Characteristics
Action 
Characteristics
Distribution
Structure
Size
Type
Parametric Functional
Layout 
Change
Layout 
Same
Externally
Activated
Internally 
Activated
Conditional Always On
Logic Sensor
Antenna
Sensor
Transmit 
Information
Modify 
Specifiction
Modify 
Function
Disable Change
 
圖 2.硬體木馬分類[3] 
7 
 
者只要修改程式碼，就可以達到讓電路不正常運作的目的。細分為 a.系統層級 b. 暫存器
轉換階層 c. 邏輯閘階層 d. 電晶體階層 e. 佈局層面 
(3) 觸發層面(Activation mechanism)：少部分硬體木馬的設計是永遠處於執行狀態中，而
其他的設計在一開始會處於休眠狀態，當硬體木馬被觸發後才開始有執行運作。一般來說，
觸發有分成內部跟外部觸發兩種，內部觸發可能是經由時間或是物理上的特性來作為其觸
發條件。另一方面外部觸發通常是由攻擊者或周邊設備輸入特定指令後，觸發硬體木馬，
由攻擊者觸發方式如使用開關或鍵盤輸入特定字串讓硬體木馬發動，周邊設備的觸發方式
是該設備的輸出透過 RS232 或其他傳輸方式連接至存在硬體木馬之裝置啟動硬體木馬。 
(4) 影響層面(Effects)：這個分類分為四大項: a.改變設備的功能 b.改變規格 c.洩漏敏感的信
息以及d.拒絕服務。硬體木馬的影響輕則是造成非預期輸出，重者會危害整個系統的運作。
洩露資訊就是一項相當重要的議題，可能外洩客戶資料或國家情報給攻擊者。 
(4) 植入位置(Location)：硬體木馬可能潛在一個或多個元件中，處理器、記憶體、輸入/
輸出端等等。若硬體木馬分佈在多個元件中，這些硬體木馬可能是獨立或集體運作而完成
攻擊的任務。 
在[6]-[9]中，也提出了類似的分類方法，綜合近幾年的研究，硬體木馬的分類主要以[5]
為主流依照觸發條件與電路受影響之情況的架構去進行硬體木馬之相關研究。  
 
2.2 硬體木馬偵測法  
本節簡介幾種常見的硬體惡意行為檢測方法，。遍將硬體惡意行為檢測方法概分為下列三
種： 
1. 物理檢查(Physical Inspection) 和 
逆向工程(Engineering Extremely)[4][10] 
    物理性質的分析技巧，是指使用儀器去測試晶片，然後分析收集來的資料去確認正確
性。此類的分析儀器有很多種，例如掃描式光學顯微鏡(scanning optical microscopy (SOM))、
掃描式電子顯微鏡(scanning electron microscopy (SEM))、微微秒成像電路分析(pico-second 
imaging circuit analysis (PICA))、電壓比對成像(voltage contrast imaging (VCI))、光束誘發電
壓調變 (light-induced voltage alternation (LIVA))、施感電壓調變 (charge-induced voltage 
alternation (CIVA))等。在硬體木馬的攻擊中，通常攻擊者會將木馬隨機的植入晶片，所以
每一片晶片都需要驗證，使用以上這些方法雖然可以百分之百的達到硬體惡意行為檢測的
目的，但同時這些方法會耗費大量的時間及金錢成本，除此之外，這些方法還需要晶片背
面薄化及反製程操作，會造成晶片本身無法還原之傷害。且另一個很重要的缺點是在奈米
領域中，由於晶片尺寸的縮小，有些技巧逐漸失去效用。 
2. 功能測試(Functional Testing) 
(1) ATPG 木馬檢測技術(ATPG-based Trojan Detection Techniques) [11] 
ATPG 檢測技巧是使用標準超大型積體電路(VLSI)除錯檢測工具，自動測試樣本產生工具
(automatic test pattern generation (ATPG))來檢測晶片的正確性。此種方法主要是給予晶片或
模型一組數位測試向量，檢查其輸出資料來達到硬體惡意行為的檢測。因為詳盡的測試非
常耗時，大型 IC 的木馬觸發機率很低且需要龐大的連續測資時間。 
(2) 內建自我測試電路檢測技術(Built-In-Self-Test Techniques)[12][13][14] 
9 
 
3. 研究方法  
    此研究如何偵測硬體木馬之方法，是採用旁通道訊號分析模式來進行模擬無硬體木馬
之電路與有硬體木馬存在之電路中，檢測統計其旁通道訊號之變化差異(如圖5.)。其中較常
使用之旁通道訊號可分為是基於電力特性(power-based)或時間特性(timing-based)之訊號兩
種。 
 
圖 5.檢測流程 
3.1 時間特性分析  
    本研究實驗目標是量測分析路徑延遲時間此為時間特性旁通道訊號，此方法的關鍵點
在於輸入測資必須盡量涵蓋整個電路，進行方式是同時對安全電路與未檢測電路施予相同
測資並量測輸出訊號，比對輸出訊號之延遲時間之差異是否是在可接受的變化範圍(考慮製
程飄移因素)，藉此判斷未檢測電路存在硬體木馬的可能性。 
𝐷 = Ʃ𝑑𝑖               (1) 
∆𝐷 = 𝐷2 − 𝐷1          (2) 
    𝐷 為各階延遲時間𝑑𝑖的總和。安全電路的延遲時間總和為𝐷1，未檢測電路的延遲總和
為𝐷2，∆𝐷為兩者的差異，由該值的數值大小是否合理，判斷未檢測電路是否遭受到惡意攻
擊。 
3.2 實作惡意行為電路 
    DES3模組與硬體木馬植入：DES/DES3(Data Encryption Standard)：是一個加解密電路，
加解密電路最注重的就是資料的安全性，且要加密的資料一定有一定程度的重要性，所以
攻擊者要針對這個IP攻擊就可以針對未加密的資料竊取。 
11 
 
    在開發平台確認後，使用Xilinx ISE Design Suite上模擬 IP的行為是否正常，透過 nWave
來清楚看到模擬波型來驗證正確性，以下是 ISE 驗證整個 IP 的流程： 
    
圖 8 ISE 設計流程 
    第一個步驟是將 Design Entry 拿去 Functional Simulation 執行原本設計的模擬，確認程
式的正確性，在執行 Design Synthesis，也就做合成的動作，產生 netlist 再餵給 Design 
Implementation 去對應到整個 FPGA 實際的內容，在 Design Implementation 中先做一些最佳
化後，會執行三個大動作，就是 Mapping、Placement、Routing，Mapping 的過程就是將一
開始產生的 netlist 對應到 FPGA 上的真正的 slice 和一些特徵元件，Placement 根據你的 PCF
檔(設定一些原件限制的檔案)放到 FPGA 上，最後在 Routing 將 timing constrains 考量進去，
在將過程拿到 Timing Simulation 做確認正確性，再產生 Bitstream 燒入至 FPGA 上。 
    在整個模擬完 IP 且燒入至 FPGA 上後，使用 Xilinx ChipScope 來監測燒入至 FPGA 上
後的運作是否正做，符不符合當初的要求，ChipScope 的概念大致如下圖： 
    
圖 9 Xilinx ChipScope 驗證流程 
13 
 
(a) (b)
(c) (d)
(e) 
圖 11.路徑延遲波形圖(a-e 各波形由左至右分別為原始電路、含木馬一電路、含木馬二電路、
含木馬三電路) 
於0℃時增加的路徑延遲時間分別為 
木馬一：6.4ps、木馬二：55.6ps、木馬三：117.2ps。 
於20℃時增加的路徑延遲時間分別為 
木馬一：6.4ps、木馬二：56.2ps、木馬三：118.6ps。 
於40℃時增加的路徑延遲時間分別為 
木馬一：6.3ps、木馬二：56.8ps、木馬三：120.0ps。 
於60℃時增加的路徑延遲時間分別為 
木馬一：6.3ps、木馬二：57.5ps、木馬三：121.5ps。 
於80℃時增加的路徑延遲時間分別為 
木馬一：6.3ps、木馬二：58.1ps、木馬三：122.9ps。 
這其中我們可以發現被插入一硬體木馬後，我們可以發現其輸出延遲已經造成ps，我
們可以借由此延遲來偵測出硬體木馬之存在可能性。另外我們也可以在此模擬硬體木馬側
錄出中斷通道之編碼訊號，進而得知中斷會發給那一個通道，並且竄改訊號，造成硬體之
功能運作出錯。 
4.2 實作惡意行為電路成果 
目前已經成功的植入硬體木馬在 DES3 上，以下是實作的成果： 
• IP testing： 
• Decrypt data： 
1.  8000000000000000    2.  0000001000000000 
3.  7178876E01F19B2A   4.  AF37FB421F8C4095 
5.  3D124FE2198BA318   6.  FBABA1FF9D05E9B1 
7.  18d748e563620572    8.  C07d2a0fa566fa30 
9.  E6e6dd5b7e722974   10.  e1ef62c332fe825b 
15 
 
5. 結論 
    在今年度的研究議題上，主要分為旁通道訊號分析與設計硬體木馬。在旁通道訊號分
析操作過程中，使用 ISCAS'85 C432 為原始電路，利用不同大小之延遲電路為木馬電路，
由模擬結果可以得知量測旁通道訊號，並比對原始電路以及含木馬電路其旁通道訊號數值
參數表徵，用以判斷硬體木馬存在可能性具有一定的可靠度，但但如果考慮製程飄移所產
生的誤差，含木馬一之 c432 電路所產生的波形圖與原始 c432 電路之波形圖相近，容易發
生錯誤判斷，所以目前偵測方式僅適用於原始電路屬於小電路，且使用該方式有種種因素
需要克服，例如惡意電路植入位置、原始電路或惡意電路之大小與是否能取得原始電路編
碼，後續研究將採取在原始電路中加入內建訊號，將大型電路劃分不同區域進行硬體惡意
行為檢測。於惡意電路實作部分，已成功針對 DES 作出可竊取其資訊之硬體木馬，接著將
持續進行影響功能單元之硬體木馬設計架構降低執行效能之硬體木馬設計架構的研究，並
繼續收尋設計硬體木馬的案例，將可以拿來作為測試的對象。 
    此計畫為國防科技學術合作計畫，校方繳交下列產出給中山科學研究院 
 報告產出 
1.惡意電路檢測技術蒐集與研析報告 
2.Power-based訊號分析報告 
3.Timing-based訊號分析報告 
4.旁通道訊號分析演算法之效能評估報告 
5.硬體木馬電路案例蒐集與研析報告 
6.設計硬體木馬電路報告 
7.硬體木馬偵測雛型規劃報告 
 相關程式碼 
針對DES之惡意電路設計流程相關程式碼 
路徑延遲旁通道訊號分析相關程式碼 
 
6.參考文獻 
[1]  Defense Science Board, “DSB Task Force on High Performance Microchip Supply” , 2005. 
[2]  Beaumont, M.; Hopkins, B.; Newby, T., “Hardware Trojans - Prevention, Detection, 
Countermeasures (A Literature Review)”, 2011 
[3]  Song Yun, Qingbao Li, Hongbo Gao, Zhang Ping, "Towards Hardware Trojan：Problem 
analysis andTrojan Simulation " Information Engineering and Computer Science (ICIECS), 
2010 2nd International Conference on , vol., no., pp.1-4, 25-26 DEC. 2010 
[4]  X. Wang; M. Tehranipoor; F. Koushanfar; , " Detecting malicious inclusions in secure 
hardware: Challenges and solutions" Hardware-Oriented Security and Trust, IEEE2008. 
HOST 2008. IEEE International Workshop on ,  pp.15, 9-9 June 2008 
[5] R. Karri; J. Rajendran; K. Rosenfeld; M. Tehranipoor; , "Trustworthy Hardware: Identifying 
and Classifying Hardware Trojans," Computer , vol.43, no.10, pp.39-46, Oct. 2010 
[6] R.S. Chakraborty; S. Narasimhan; S. Bhunia; , "Hardware Trojan: Threats and emerging 
solutions," High Level Design Validation and Test Workshop, 2009. HLDVT 2009. IEEE 
International , vol., no., pp.166-171, 4-6 Nov. 2009 
[7] Y. Jin; N. Kupp; Y. Makris; , "Experiences in Hardware Trojan design and implementation," 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/03/14
國科會補助計畫
計畫名稱: 硬體惡意行為檢測技術研究
計畫主持人: 陳穎平
計畫編號: 100-2623-E-009-007-D 學門領域: 電子與資訊系統
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
