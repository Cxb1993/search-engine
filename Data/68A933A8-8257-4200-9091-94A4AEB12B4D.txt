experiences are also reported. 
 
II 
 
中英文摘要 
 
無線感測網路相關的研究議題得到許多研究單位及學者的關注，近年來ZigBee通訊協
定被視為最適用於感測網路的通訊協定，本計畫將研究以ZigBee 樹狀網路為基礎之無線感
測網路相關通訊協定，本計畫為三年之計畫，其目標主要包含三個面向：(1) ZigBee無線感
測網路生成之研究，(2) ZigBee樹狀網路資料傳遞排程，(3) ZigBee基礎之長鏈狀網路研究。
在第三年中，我們探討了一個新的網路型態：長鏈狀網路(Long-Thin Network)。在這類的
網路中，節點們由幾個網路的骨幹(Backbone)所連結，而這些骨幹則由幾個連接點給連接住 
進而散佈到整個所要監控檢測之區域。乍看之下，此網路型態於無線感測網路中似乎不常
看見，然而，於實際中，我們可以發現此種網路型態遍佈於各式各樣的現實應用中。同時，
我們發現，於長鏈狀網路下，ZigBee 標準所規範之網路生成及資料匯集協定皆不適用且
擁有極差之效果，因此，我們重新設計了一符合ZigBee規範之網路生成協定，並設計了一
資料匯集演算法於此網路型態下。同時，我們進一步的將此成果以實作成品展現，並可看
出我們方法所帶來的實際效益。 
 
關鍵字：位址分派、長鏈狀網路、資料收集、無線感測器網路、ZigBee 
 
Recently, a lot of research works have been dedicated to the wireless sensor networks 
(WSNs) field. ZigBee is a communication standard which is considered to be suitable for WSNs. 
In this project, we discuss initialization and communication protocols for ZigBee tree-based 
WSNs. This project contains three research topics including 1) formation of a ZigBee-based 
WSN, 2) scheduling for ZigBee tree-based networks considering data flows, and 3) ZigBee-based 
long thin networks. In the last year, we promote a new concept of long-thin (LT) topology for 
WSNs, where a network may have a number of linear paths of nodes as backbones connecting to 
each other. These backbones are to extend the network to the intended coverage areas. At the first 
glance, a LT WSN only seems to be a special case of numerous WSN topologies. However, we 
observe, from real deployment experiments, that such a topology is quite general in many 
applications and deployments. We show that the address assignment and thus the data 
aggregation scheme defined in the original ZigBee specification may work poorly, if not fail, in a 
LT topology. We thus propose simple, yet efficient, address assignment and routing schemes for 
a LT WSN. Implementation results and prototyping experiences are also reported. 
 
Keywords: address assignment, long-thin network, aggregation, wireless sensor network, ZigBee 
 
 
 
 
 
 
 
1 
 
一、 前言 
近年來，隨著無線通訊、電池技術與嵌入式微處理器技術的進步與整合，帶動了無線
感測器網路(Wireless Sensor Networks, WSNs)的發展。無線感測器網路是由許多的感測器節
點(Sensor node)所組成，這些節點能夠在其感測範圍(Sensing range)內偵測目前的環境變
數，例如：溫度、光度、濕度及磁場等。除此之外，節點們也能與其傳輸範圍(Communication 
rage)內的鄰居節點，透過無線通訊方式來溝通，並且也能把收集到的資訊使用多點跳躍的
方式回報給資料收集端(Sink or Data collector)，接著網路管理者可分析感測器所回報的資料
用於特定的應用，如環境監控、軍事或醫療用途等，圖一為無線感測器網路的基本架構圖。 
資料收集器
後端伺服器 感測器
感測網路
網際網路(Internet)、衛星、
或其他傳輸媒介
 
圖一、無線感測器網路基本架構圖。 
 
在許多無線感測網路之應用中，網路建置者需要將網路部署成一長鏈狀之網路。長鏈
狀無線網路是由一些擁有線性路徑節點的骨幹連接彼此所形成，換句話說，此網路多數之
網路節點以類似於長鏈方式連結，少部分之節點可與其他長鏈上之節點連接，作為長鏈間
溝通之橋樑。長鏈狀網路型態常見於無線感測網路監測(Surveillance)應用中，例如圖二(a)
為一個瓦斯管線偵測漏氣應用，圖二(b)為隧道內二氧化碳濃度偵測應用，圖二(c)為下水道
水位偵測應用，圖二(d)為高速公路路燈或車況監控應用，圖二(e)為河流防洪水位監控，圖
二(f)為橋樑震動監控應用。ZigBee 基礎之長鏈狀網路研究，其目的為探討該如何將ZigBee 
協定用於此一特殊但卻常見之樹狀拓樸中。在這一部份的計畫中，我們將探討一個特殊但
是卻又常見之網路拓樸—長鏈狀網路(Long Thin network, LT)。 
 
在這類的網路中，節點們由幾個網路的骨幹(Backbone)所連結，而這些骨幹則由幾個連
接點給連接住 進而散佈到整個所要監控檢測之區域，每一個骨幹為一個線性的網路拓樸，
並且可能包含數十甚至數百個節點，網路的範圍相當的大。因此，本計畫將以網路層的角
度來切入研究適用於長鏈狀無線感測器網路的通訊協定，以下以不同層次的面向來討論： 
 
 網路生成(Formation)：在建置長鏈狀網路時，一個最重要的課題是我們該如何形成這 
3 
 
二、 背景知識 
C
A
B
Cm=6
Rm=4
Lm=3
Addr = 0, 
Cskip = 31
Addr = 1, 
Cskip = 7
Addr = 32, 
Cskip = 7
Addr = 63, 
Cskip = 7
Addr = 125
Addr = 126
Addr = 30
Addr = 31
Addr = 33, 
Cskip = 1
Addr = 38
Addr = 40, 
Cskip = 1
Addr = 39
Addr = 45
Addr = 64, 
Cskip = 1
Addr = 92
 
圖三、 ZigBee 網路位址分配。 
 ZigBee 網路生成 
在網路一啟動時，網路中的 FFD 們競爭成為 ZigBee 協調者，假定一裝置成功地成為
協調者，該協調者將掃描所有的無線頻道並且決定一個合適的作為操作頻道，接著該協調
者開始廣播 Beacon 訊框來讓其他的裝置能夠加入它所形成的網路。當裝置接收到一 Beacon
訊框，該裝置執行加入網路的步驟成為 ZigBee 路由器或者作為一個 ZigBee 末端設備。如
果成為一 ZigBee 路由器，此路由器也能夠發送 Beacon 訊框來讓尚未加入網路的裝置加入
此網路。當裝置成功加入一個網路後 Beacon 訊框的傳送者將會給定一網路位址，作為日後
資料傳輸之識別碼。 
ZigBee 網路層協定中規範了一分散式網路位址分配演算法用以分配網路位址給加入該
網路之裝置。當網路形成時，ZigBee 協調者先定義一 ZigBee 路由器最多可容許連線之裝置
個數(Cm)以及最多的子 ZigBee 路由器的數量(Rm)，以及網路的深度(Lm)。ZigBee 規定
Cm≧Rm，因此一 ZigBee 路由器至少可供(Cm-Rm) ZigBee 終端設備連結上它。在此規範中，
裝置的網路位址是由其父節點(Parent router)所給定的。對 ZigBee 協調者而言，整個網路的
位址空間被劃分成 Rm+1 塊，前 Rm 塊位址空間將會分配給其 Rm 個子路由器，而最後一部
份則保留給與之連線之(Cm-Rm)個 ZigBee 終端設備。在此演算法中，ZigBee 路由器利用
Cm、Rm 和 Lm 來計算一個稱為 Cskip 的參數，接著再利用 Cskip 來計算其子路由器以及終
端設備的網路位址，假定一路由器位於網路的第 d 層，Cskip 的數值可經由下式得到： 







 
(b)   Otherwise               ,
1
1
(a)    1 if                              ),1(1
)( 1
Rm
RmCmRmCm
RmdLmCm
dCskip dLm    (1) 
5 
 
複雜度為 O(1)。但是此方法的 network model 假設所有的點跟群組的領導者只有 1-hop 的距
離，在長鍊狀感測網路中，一個群可能包含了數個成員，且是以 multi-hop 的形式組成。文
獻 [7]根據感測點記憶體及電量使用情況動態地調整感測點感測的間隔時間 (sense 
interval)，以及回報的間隔時間(send interval)，希望增加網路生命週期。文獻[7]的分群概念
跟文獻[6]一樣，群內的感測點跟群內的領導者只有 1-hop 的距離。 
文獻[8]根據網路大小以及感測點數量分成數個環形區域(ring)，再將每個環形區域分成
數個區塊(section)，每個區塊內的感測點集結成一個群組，再從這些群組中挑選一個感測點
當作群組的領導者負責群內感測點的資料匯集工作。但是該文獻分區塊的方法並不適用於
長鍊狀網路的結構，並且該方法組內感測點的數量被區塊所限制，無法根據群內網路的流
量動態調整群組的大小。 
文獻 [9] 根據感測點記憶體以及電量使用的情形動態調整感測點收集資料
(data-collection)以及傳送資料(data-sending)的時間間隔，藉以降低感測點能量的消耗，延長
網路的生命週期。雖然該方法可以根據感測點的使用情境減少封包的傳遞。但在使用者的
角度，我們希望由資料匯集的機制減少網路中封包的傳遞，而不是減少感測點收集資料及
傳送資料的時間間隔影響資料收集的完整性。 
文獻[10]根據能量消耗的預測建立樹狀匯集結構，並提供一個公式預測能量的消耗，而
每個感測點根據該公式選擇父節點以建構樹狀匯集網路。但在長鍊狀網路中，每個節點通
常沒有多條路可供選擇，所以該方法並不完全適用。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
7 
 
四、 研究方法 
 ZigBee 網路生成 
 
首先，我們先定義 LT Network 之網路型態。在這類的網路中，節點們由幾個網路的
骨幹 (Backbone) 所連結，而這些骨幹則由幾個連接點給連接住 進而散佈到整個所要監控
檢測之區域，每一個骨幹為一個線性的網路拓樸 (linear path)，並且可能包含數十甚至數百
個 ZigBee Router 節點，如圖五(a)所示。而在本問題中，我們進一步假設所有的網路節點
皆為 ZigBee Routers。於此網路架構中，我們會將整個網路切割成多個群集(Cluter)，每一
個群集皆為一個線性拓樸，不存在有分支網路。而針對每一個群集，我們分別定義兩個特
殊的節點型態：cluster head (群集領袖) 及 bridge (橋接點)，其中 cluster head 便為一群集
中至網路協調中心最近之節點，而 bridge 為一群集中至網路協調中心最遠之節點，其他非
此兩種型態之節點，我們統一定義為 network node。圖五(b)便為一個長鏈狀網路，經由我
們節點型態定義後的示意圖。此外，如果群集領袖節點之父節點為另一群集中的橋接點時，
我們稱此群集為橋接點所在群集之子群集(child cluster)；而橋接點所在群集為父群集(parent  
 
圖五、(a) 長鏈狀感測網路範例。(b) 網路節點角色定義。 
 
cluster)。如圖五(b)中，群集 C 為群集 A 之子群集(child cluster)。同時，為了使得我們的設
計可以相容於 ZigBee 標準之規範，我們將 ZigBee 16 位元之網路位址分成兩個部份：m
位元的 cluster ID (群集位址)，及 (16-m)位元的 node ID 節點位址。所以，網路中任一節點
v 之網路位址可以用下列的表示法下示：(Cv, Nv)，其中 Cv 為 v 節點之群集位址，而 Nv
為 v 之節點位址。 
 
    本方法中，於網路佈建階段，網路佈建者必需細心的佈建，且事先設置網路節點之角
色，而其佈建及設置角色之基本原則如下： 
 
1. 整個網路是由多個線性拓樸所組成。 
2. 於每一個群集中，第一個節點為其 cluster head，而最後一個節點為 bridge。 
3. 非網路協調中心節點之 cluster head 必定和一 bridge 互為通訊鄰居，而此 bridge 所在群
集為其父群集。 
4. 相反的，如果一 bridge 非 leaf 節點，則必有一 cluster head 為其通訊鄰居，而此 cluster head
所在之群集為其群集之子群集。 
5. 於一群集中之網路節點，不會存在有別的群集之網路節點為其通訊鄰居。 
 
9 
 
 資料匯集及資料壓縮 
為了降低整個網路的傳輸量，首先將感測器分群(Group)，分群之後每個群會有一個領
導者(Leader)負責群內的資料排程、資料匯集及資料壓縮，每個群應該有能力依目前網路狀
況動態地選擇最適合自己的匯集演算法或壓縮演算法，當然這樣的選擇還必須將使用者的
需求考慮進去，在本計畫中我們預計會設計一個演算法使得群的領導者可以選擇相關的匯
集演算法或壓縮演算法。 
首先用一個例子來說明分群的好處，圖七顯示了一個長鏈狀感測網路的例子，假設每
個感測器皆想傳送一個封包，根據前面的說明，我們已經提到如果沒有適當的資料匯集或
資料壓縮，整個網路上需要傳送 45 個封包，現在我們假設每個 Group 皆有個領導者 L，群
內的感測器會先將資料送給群的領導者，領導者最後只會送一個封包給 Sink，依此傳送機
制，只會有 21 個封包需要被傳送，由此例子我們可看出分群的確可以降低傳送封包的數量。 
進一步觀察上述的例子，不難發現，這樣的運作類似於運河的運作，每個領導者扮演
著水閘(Lock)的角色，控制著感測器的流量，使得長鏈網路中的資料流得以匯集在水閘處，
領導者等待適當的時機將整群的資料作壓縮後送出，如同開放水閘般讓水流通過。以下說
明資料匯集及壓縮方法。 
 
圖七、分群過後的長鏈狀無線感測網路。 
 
在資料匯集與壓縮上，我們先說明我們所考慮的資料匯集型態，長鏈狀網路大致上可
以分成兩種資料匯集型態。第一種型態如圖八所示，每個群組的閘門(Lock gate)除了負責自
己群組的資料匯集及壓縮之外，也要順便處理下游群組的資料匯集；至於第二種型態如圖
九所示，每個群組的閘門只要負責自己群組的資料匯集及壓縮，其他群組的封包只要幫忙
傳遞(relay)即可。 
第一種資料匯集型態的好處在於能夠最有效地減少長鏈狀網路的資料量，但是由於無
線感測網路(Wireless Sensor Network)有時間相關性及空間相關性的特性，每個感測區域會
有不同的代表值，如果採用型態一資料匯集模式會破壞這個特性，以圖 4.2 舉例子說明，
假設每個群組的感測資料是環境的溫度，又閘門壓縮的方式是採用簡單地將收集到的溫度
資料作平均之後傳給 sink，然而每個 Groups 之間的溫度可能相差甚遠(假設 Group 3 在冷氣
房，Group 4 在暖氣室中)，如果 Group 3 將 Group 4 傳來的資料作平均，會變成最後 Sink
接收到的溫度值是介於冷氣房及暖氣室之間，這並不是我們所希望的結果，我們希望能夠
知道冷氣房以及暖氣室溫度分別為多少。所以我們決定採用第二種資料匯集模式，保留無
線感測網路的時間空間相關性，也保有資料匯集及壓縮的功能。 
 
S L L L
Group 2 Group 3
Group 4
Group 1
 
圖八、長鏈狀網路資料匯集型態一。 
 
11 
 
即為水閘 L 的上一層水閘。 
 
為了達到動態分群的最佳化效果，本方法對於網路中的水閘點做動態調整，移動水閘
點的位置能夠調節各個感測點群的成員數量，也能平衡水閘處理的資料流量。為此我們針
對樹狀網路結構設計一個機制讓長鏈狀網路中的水閘能夠定期的檢查群內感測點的資料傳
送量，根據群內的資料傳送量來移動水閘的位置以調節成員數量。 
 
我們定義 T 匯集時間、CR(Compression Rate)封包壓縮率、PS(Packet Size)封包大小。在每
個水閘點週期性的檢查以下公式: 
 
 
 
 
 
爲了節省電量及減少封包的傳送量，水閘會對匯集的資料作壓縮，並在匯集資料收集到一
給定的封包大小 PS 時向下游轉送。匯集時間 T 代表水閘收集到給定的封包大小 PS 所需要
的時間，群體內各感測節點的資料傳送率(data rate)則作為調整感測節點群大小的指標。由
上述公式可以看出匯集時間 T 跟群內感測點資料傳送率的總和成反比，因此匯集時間 T 也
間接地反應感測節點群的大小。 
Tmin 及 Tmax定義為能容忍的最小及最大匯集時間。當 T < Tmin 時，代表此群組中的感測
點資料傳送率偏高，應該要減低該群組感測點的數目，提高水閘匯集壓縮的效率；反之 T > 
Tmax時，群組中的感測點資料傳送偏低，應該要增加群組感測點的數目，以最佳化整體匯
集效率。那要如何增加或是減少群內感測點的數目呢？在這裡我們希望藉由 lock gate 也就
是群組負責人的移動來達到這個效果。移動的方向有兩種，一為上拉(pull)，水閘向下游方
向移動，如圖十一(a)所示，此動作減少 cluster 1 的負責範圍。一為下推(push)，水閘向上游
方向移動，如圖十一(b)所示，此動作擴大了 cluster 1 的負責範圍。由上述兩個例子可得知
利用上一層水閘(next lock gate)的移動可以增加或是減少群內感測點的數目，進而增加匯集
壓縮的效率。 
 
L L
Cluster 1 Cluster 2
L L
Cluster 1 Cluster 2
 
圖十一(a)、水閘上拉移動(pull)。 
 
L L
Cluster 1 Cluster 2
L L
Cluster 1 Cluster 2
 
圖十一(b)、水閘下推移動(push)。 
 
因此我們的作法就是希望水閘定期地經由上述公式來判斷群內感測點數目是否需要作調
整，若需要，則藉由上一層水閘(next lock gate)的移動來調整群內感測點的數目。當水閘經
由上述公式的判斷發現群內感測點過多或過少而需要調整時，水閘 L 會向上游各分支傳送
詢問封包(request packet)，詢問上一層水閘(Ln)的狀態，若 Ln 也在調整狀態，則 Ln 視為忙
碌，不回覆此詢問封包，反之，Ln 將回傳本身的匯集時間 T 以及群內所有感測點的資料傳
送率(data rate)給 L。若 L 收到至少一回覆封包，此水閘 L 則根據收到的回覆候選之中，決
定選擇要移動的 Ln。舉例來說，當 T < Tmin 時，L 會優先上拉(pull)T 值最大的 Ln，反之當
T < Tmin 時，L 會優先下推(push)T 值最小的 Ln。當水閘 L 選擇好移動的 Ln 以及移動的方向
之後，就開始進行移動的動作，每次的移動 L 都必須更新群組的 T 值，直到 L 所負責的群
組匯集時間 T 回歸正常值。 
PSCRT
LClusteri
i 







 
 )(

13 
 
五、 實驗與分析 
 
圖十二、長鏈狀網路佈建實測。 
 
 長鏈狀網路生成實作 
 
實作環境 
 硬體： 
 III ZigBee Advanced Platform (iZAP) [13] 
 RF module：Jennic JN5121 
 Battery：感測節點上的充電電池 
 
 軟體： 
 JN-SW-4031 SDK Toolchain：Jennic 平台的標準化開發工具。 
 JN-SW-4030 802.15.4 MAC：802.15.4 通訊協定媒體存取控制的 package。 
 Microsoft Visual Studio 2005：開發 PC 端程式使用的軟體。 
 
於台北市中偵測一河流之水平面高度。而整個網路有41個節點，每個節點皆距離100 meters
而網路深度為 20，如圖十二所示。整個網路共有三個群集，其中Coordinator所在之群集只
有自己本身一個節點，而網路生成結果如圖十三所示。因此，透過實測的結果，可以看出
我們的網路生成演算法可以適用於長鍵狀網路。 
 
  
15 
 
0
2000
4000
6000
8000
10000
12000
14000
16000
1 3 5 7 9 11 13 15 17 19 21 23 25 27 29
time(min)
to
ta
l p
ac
ke
ts
DLS
dummy
no lock gate
 
實作數據 
 測量參數： 
1. 總封包量 
2. 總傳輸量（bytes） 
 比較對象： 
i. DLS (Dynamic Lock Gate Selection) 
水閘式資料匯集與壓縮並依負載平衡動態分群，水閘會跟據網路流量調整網
路中水閘的數量以及位置。 
 
ii. Dummy (Fixed Lock Gate Selection) 
水閘固定在分支點位置，並不根據網路流量調整水閘數量及位置。 
 
iii. No lock gate 
感測節點單純地將資料封包傳送給 sink，沒有任何封包匯集壓縮機制。 
 
 
實驗一：總傳送封包 
 參數設定： 
 實驗時間：30 分鐘（半小時） 
 每隔 2 秒傳送一個資料封包 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖十五、總封包量與時間關係圖。 
 
 
 
 
 
 
 
 
 
 
 
17 
 
六、 結果與討論 
在這第三年度的計畫中，針對長鏈狀網路做了一些探討，此網路是由一些擁有線性路
徑節點的骨幹連接彼此所形成，少部分之節點可與其他長鏈上之節點連接，作為長鏈間溝
通之橋樑。長鏈狀網路型態雖然和一般正常的無網感測器網路型態大為不同，卻常見於無
線感測網路監測(Surveillance)應用中。而針對此種網路型態，我們發現了兩種問題：1) ZigBee
網路生成問題，及 2) 資料匯集及資料壓縮問題。於 ZigBee 所規範網路生成演算法中，
我們不難發現其不適用於長鏈狀網路，並會導致大量的網路節點無法連上 ZigBee 網路。
而於長鏈狀網路的資料匯集上，我們分析長鏈狀網路所衍生出來之傳輸問題，發現若沒有
資料匯集及資料壓縮的機制，長鏈狀網路封包的數量遠比其他一般無線感測網路架構的封
包數量還要高，因此資料匯集及資料壓縮在長鏈狀網路中格外重要。因此，我們分別此兩
個問題中，設計了一相容於 ZigBee 標準規範，且適用於長鏈狀網路型態之網路生成演算
法；同時，於此生成的網路中，我們更進一步設計了一支援長鏈狀感測網路的動態分群、
資料匯集、資料壓縮等功能。由實驗數據可看出，長鏈狀網路加入我們設計的演算法之後
可以明顯地減少長鏈狀網路特殊架構所造成的大量資料量，間接降低該網路架構下無線感
測網路電量的消耗，提高網路使用的生命週期。 
 
在此次的三年計畫中，我們完整地探討了以 ZigBee 樹狀網路為基礎之無線感測網路
相關議題：網路生成問題及資料收集回報問題。於無線感測器網路中，這兩個問題為其最
基本且重要的議題，首先於網路生成上，ZigBee 所設計之分散式位址分配演算法，由於
Cm、Rm 及Lm 的限制可以簡化網路位址分派的複雜度，但是這三個參數亦可能使得裝置
無法加入此網路，即使還有父節點有剩餘的位址空間，而造成了孤兒問題 (orphan 
problem)。同時，針對此問題，利用我們所提出的觀察，加上實測的結果，得知此問題並無
法透過簡單的參數調整等方法來解決 orphan 的情形。因此，我們將此問題重新定義，並
依照路由節點及終端節點兩種不同節點的特性，將此問題分成兩個子問題，分別為：分支
度及深度受限之延展樹(BDDTF) 問題及終端設備最大的配對數 (EDMM) 問題。同時，我
們也證明了 BDDTF 為一個複雜的問題 (NP-Complete)，因為我們提供了一集中式的 
BDDTF 演算法來降低孤兒之數量，而因應無感感測器硬體限制，也提供了一分散式演算
法。而針對 EDMM 問題，本計畫證明了其為一最大分配 (maximum matching) 的問題，
因此可以簡單的利用最大分配演算法來得到最佳解，也就是使得終端節點成為孤兒的情形
最小。同樣地，我們也提供了一分散式的分配演算法，使得 ZigBee 網路可以利用較輕量 
(lightweight) 的方式，使得網路位址可以最有效的應用，降低節點形成孤兒的機會。 
 
而上述的方法，雖然解決了 ZigBee 於一般網路上的 Orphan Problem，然而由於其仍
保有 ZigBee 網路生成中所設定的三個網路參數：最多可容許連線之裝置個數(Cm)以及最
多的子ZigBee路由器的數量(Rm)，以及網路的深度(Lm)。因此，當網路型態為長鏈狀網路
時，上述的方法仍然會造成大量的網路節點無法連接上網路，使得無線感測網路無法正常
運作。因此，我們透過將ZigBee網路位分割為兩個部份：m-bit cluster ID及(16-m)-bit node 
ID，提出了一個位址分派演算法，解決了 ZigBee 無線感測網路於長鏈狀網路架構下無法
生成的問題。 
 
接著，在許多無線網路的應用中，網路上的裝置需要將應用層所產生的感測資料回報
至一資料收集基地台(Sink)。此時，網路上的節點不能恣意地選擇時槽，當一網路上的節點
19 
 
  
附錄三： 
Y.-C. Wang, C.-H. Chuang, Y.-C. Tseng, and C.-C. Shen, "Dynamic Water Gate Assignment 
Scheme for Data Aggregation in Long-Thin Sensor Networks", Int'l Computer Symp., 2010, 
Tainan, Taiwan.  
附錄四： 
M.-S. Pan, H.-W. Fang, Y.-C. Liu, and Y.-C. Tseng, "Address Assignment and Routing Schemes 
for ZigBee-Based Long-Thin Wireless Sensor Networks", IEEE VTC, 2008-Spring.  
  
 計畫成果自評 
第二年的主要工作目標有兩項：(1) ZigBee網路快速回報之研究方法及問題定義，(2) 針
對所定義之問題提出適切的解決方案。而在本計畫中，針對 ZigBee快速回報問題，除了考
慮了降低回報延遲及能源的消耗，並且符合了ZigBee標準的規範，因為本計畫定義了一個
MDBS的問題。同時，我們提出了定理一來證明 MDBS為一個困難的問題。 
此外，針對MDBS問題，針對特殊的網路型態：線狀網路及環狀網路，我們提出了一
個多項式時間之最佳同，同時，針對一般的網路型態，我們也分別提出了集中式及分散式
演算法來解之，因此本研究可利用我們所提出之方法來降低 ZigBee網路回報的時間。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
附錄一 
 
 
 
 
 
 
 
 
出國報告書 
 
On Optimization of Accelerometers Deployment for 
Human Posture Tracking 
 
 
 
 
 
 
 
 
 
 
 
 
C.-H. Wu, Y.-T. Chang, and Y.-C. Tseng 
 
Int'l Conf. on Body Sensor Networks, 2011, Dallas, USA. 
 
報告內容應包括下列各項： 
一、參加會議經過 
BSN2011 辦在美國中部的城市 Dallas, 加上開場的 reception及之後的 tutorial，一共舉行了
四天。主辦單位是 UTDallas，感覺還蠻用心的，有精美的海報範本、書包、及小冊子。在漫長的
飛行後，會議過程如它的議程所示，第一天是 pre-conference reception，第二天是正式開始，
有 opening，有 best paper session，poster session，和晚宴。Best paper 的得主是泰國的
年輕女教授，做 ASL的辨識。不過只做了 26個英文字母，並不完全能用來溝通。我要報告的是
第二天的 poster session，一開始有個 teaser，chair 要我們準備兩三張投影片，用五分鐘跟
大家介紹一下。因為我們的題目頗數學的，希望我的解說能幫助其它人了解這個題目。再來就是
在海報前跟其它人解說，陸續就有人來參觀了。會議第三天續繼聽 paper報告，還有展示他們的
系統，教大家怎麼用。 
 
二、與會心得 
這次參加 BSN發現 MIT的學生也會來這個 conference，還蠻酷的。聽 keynote speaker 講
tele-medicine，這個有點不切實際的方向，似乎還蠻有道理的。只是不知道台灣有沒有產業要
發展。 
 
三、考察參觀活動(無是項活動者省略) 
無 
 
四、建議 
希望能在國內帶動 BSN相關的產業，也提升我們專利佈署的廣度。 
 
五、攜回資料名稱及內容 
他們有發議程介紹，及會議的論文。另外也跟一些學者、業界交換了名片。 
 
六、其他 
 
 
 
gx
x
g
y
y
(a)
sensor
joint
rigid
body
}
}
}
rigid
body
rigid
body
}
rigid
body
(b)
Figure 1. Gravity measurement and rigid body modeling.
( )r t
ip
ө-coordinate
system
r-coordinate 
system
sensor 
g
z
q
x
q
y
q
rz
rx
ry
jp
Figure 2. The kinematical model for a rigid body.
Let s1, s2, . . . , sm be m accelerometers deployed on the
rigid part and p1, p2, . . . , pm be their locations with respect
to the r-coordinate, respectively. Without loss of generality,
we assume that these accelerometers are properly placed in
the sense that their x-, y-, and z-axes are perfectly aligned
to the xr , yr, and zr axes of the r-coordinate, respectively
(Otherwise, a rotation matrix from the r-coordinate to each
sensor’s coordinate would do the translation). This implies
that the gravity being observed in the r-coordinate is the
same as that being observed by any sensor.
Now, consider any sensor si, i = 1, 2, . . . ,m. Its location
in the θ-coordinate at time t is p′
i
(t) = r(t) +R(t)pi (note
that pi is time-invariant). Taking the second derivative of
p′
i
(t), we have its acceleration in the θ-coordinate:
p¨′
i
(t) = r¨(t) + R¨(t)pi. (1)
Since si is aligned to the r-coordinate and noise should be
included, the actual reading ai(t) of si should be ai(t) =
RT (t) (−p¨′
i
(t) + g) + ni(t). Note that both ai(t) and ni(t)
are 3 × 1 vectors, and each element of ni(t) has a zero
mean with a standard deviation σn. (For example, when the
rigid part is at rest, the reading of si should consist of only
gravity, giving ai(t) = RT (t)g + ni(t); when it falls freely,
the reading should be ai(t) = ni(t).)
Below, assuming a fixed t, we will omit time information
in our formulation. Plugging Eq. (1) into ai, we have
ai = R
T
(
−r¨ − R¨pi + g
)
+ ni
=
[
RT (−r¨ + g) , −RT R¨
] [ 1
pi
]
+
[
ni
]
.
Putting these m equations together, we have the equality:
A = QP +N, (2)
where
A =
[
a1 . . . am
]
∈ ℜ3×m,
Q =
[
RT (−r¨ + g) , −RT R¨
]
∈ ℜ3×4,
P =
[
1 . . . 1
p1 . . . pm
]
∈ ℜ4×m,
N =
[
n1 . . . nm
]
∈ ℜ3×m.
Here, A and P are known and Q is to be determined. P is
called the deployment matrix of sensors s1, s2, . . . , sm.
Since r¨ ≪ g in Q, which is common for human motion,
Q’s first column vector RT (−r¨+ g) ≈ RT g. By estimating
Q, we can determine RT g. Let Qˆ be an estimation of Q.
Following [2], a Qˆ that makes Qˆ−Q as small as possible can
be found by Qˆ = AP+, where P+ is the Moore-Penrose
pseudoinverse of P when m > 4 and P+ = P−1 (the
inverse of P ) when m = 4 [15]. This implies that to find Qˆ
we need at least four sensors. Since Qˆ −Q is a zero-mean
vector, one needs to measure how Qˆ is close to Q. In [2],
an error variance, which solely depends on the deployment
matrix P , is defined:
σ2e(P ) = 3σ
2
n
4∑
k=1
1
ρ2
k
(P )
, (3)
where ρk(P ) is the kth largest singular value of P . It
is claimed that a smaller σ2
e
(P ) implies a more accurate
Qˆ. Therefore, we formulate the deployment optimization
problem as follows: given a rigid part and m accelerometers
to be deployed on the surface of the part, the goal is to find
the deployment matrix P such that the error variance σ2e(P )
is minimized. Note that since the 3σ2
n
in Eq. (3) is a constant,
we only need to focus on the summation part.
1p
2p 3
p
4p( 6,2,8.5)-
(0,0,0)
(6,2,-8.5)
5p
6p 7p
8p
(6,28,8.5)
(6,28,-8.5)
( 6,2,-8.5)-
(6,2,8.5)
( 6,28,-8.5)-
( 6,28,8.5)-
Figure 5. Sensors’ locations on the box in Fig. 4.
10 20 30 40 50 60
0
1000
2000
3000
time
le
ng
th
 o
f g
ra
vit
y 
(m
g)
 
 
s7 {s1, s3, s6, s8}
Figure 6. Comparison of using one sensor and four sensors.
IV. CONCLUSIONS AND FUTURE WORK
In this paper, we have investigated how to perceive gravity
by deploying multiple accelerometers on a rigid part. We
have modeled the readings of an accelerometer in terms of
the gravity and the sensor’s own acceleration seen by an
outside observer. Based on using the pseudoinverse scheme
to extract the gravity from these readings, we have formu-
lated the deployment optimization problem as one to find
a deployment that minimizes the measurement error, which
can be large for intuitive deployments. We have conducted
experiments to observe solutions of this problem. It seems
that deploying at the vertices of a box is the optimal. In our
future work, we will investigate the optimal solutions for
different geometries.
ACKNOWLEDGEMENT
Y.-C. Tseng’s research is co-sponsored by MoE ATU
Plan, by NSC grants 97-3114-E-009-001, 97-2221-E-009-
142-MY3, 98-2219-E-009-019, and 98-2219-E-009-005, 99-
2218-E-009-005, by ITRI, Taiwan, by III, Taiwan, by D-
Link, and by Intel.
REFERENCES
[1] C.-H. Wu, Y.-T. Chang, and Y.-C. Tseng, “Multi-screen cyber-
physical video game: An integration with body-area inertial
sensor networks,” in Proc. of Int’l Conf. on Pervasive Comput.
and Commun. (PerCom), 2010.
[2] S. Trimpe and R. D’Andrea, “Accelerometer-based tilt estima-
tion of a rigid body with only rotational degrees of freedom,”
in Proc. of IEEE Int’l Conf. on Robotics and Automation
(ICRA), 2010.
1 2 3 4 5 6 7 8
300
400
500
600
700
800
sensor ID
st
an
da
rd
 e
rro
r (
mg
)
Figure 7. The errors of each sensor’s measurement.
 1 2 3 4 5  
0
100
200
300
400
500
600
deployment number
st
an
da
rd
 e
rro
r (
mg
)
Figure 8. Comparison of different deployments.
[3] M. Sippel, A. Abduhl-Majeed, W. Kuntz, and L. Reindl, “En-
hancing accuracy of an indoor radar by the implementation of
a quaternion- and unscented kalman filter- based lightweight,
planar, strapdown IMU,” in Proc. of the European Navigation
Conf. (ENC-GNSS), 2008.
[4] D. T. W. Fong, J. C. Y. Wong, A. H. F. Lam, R. H. W. Lam,
and W. J. Li, “A wireless motion sensing system using ADXL
MEMS accelerometers for sports science applications,” in
Proc. of World Congress on Intelligent Control and Automa-
tion, 2004.
[5] C.-H. Wu and Y.-C. Tseng, “Data compression by temporal
and spatial correlations in a body-area sensor network: A
case study in pilates motion recognition,” IEEE Trans. Mobile
Comput., to appear.
[6] D. Vlasic, R. Adelsberger, G. Vannucci, J. Barnwell,
M. Gross, W. Matusik, and J. Popovic´, “Practical motion
capture in everyday surroundings,” ACM Trans. on Graphics,
vol. 26, no. 3, p. 35, 2007.
[7] J. K. Lee and E. J. Park, “A minimum-order kalman filter
for ambulatory real-time human body orientation tracking,”
in Proc. of IEEE Int’l Conf. on Robotics and Automation
(ICRA), 2009.
[8] B. Huyghe, J. Doutreloigne, and J. Vanfleteren, “3D ori-
entation tracking based on unscented kalman filtering of
accelerometer and magnetometer data,” in IEEE Sensors
Applications Symposium (SAS), 2009.
[9] Z. Zhang, L. W. Wong, and J.-K. Wu, “3d upper limb motion
modeling and estimation using wearable micro-sensors,” in
  
 
 
 
附錄二 
 
 
 
 
 
 
 
 
A Lightweight, Self-Adaptive Lock Gate 
Designation Scheme for Data Collection in 
Long-Thin Wireless Sensor Networks 
 
 
 
 
 
 
 
 
 
 
Y.-C. Wang, C.-H. Chuang, Y.-C. Tseng, and C.-C. Shen 
 
 
 
Wireless Communications and Mobile Computing 
sink
(a) the physical deployment of sensor nodes along streets
downstream
direction
upstream
direction
branch 1
branch 2
sink
branch node
(b) the corresponding long-thin topology
Fig. 1. An example of long-thin WSNs.
or even hundreds of nodes. The structure of a branch is
recursively defined, where a branch may contain other
(sub)branches. For each sensor node along a branch,
there exists only one potential parent node toward the
sink node. Branches are grafted at branch nodes, and
Fig. 1(b) shows an example where a branch node is
denoted with double circles.
Let {s1, s2, · · · , sN} denote the node IDs of a long-
thin WSN, where N is the number of sensor nodes.
By viewing a long-thin topology as a shortest-path
tree rooted at the sink node, let di be the depth of
sensor node si from the sink node. Assuming that each
sensor node in the long-thin WSN delivers one sensor
reading to the sink node without aggregating data, the
network will incur
∑N
i=1 di transmissions to collect
all of the sensor readings. For instance, the long-thin
WSN of Fig. 1 incurs 62 transmissions without data
aggregation. Even worse, a long-thin WSN may suffer
from the funneling effect where the hop-by-hop traffic
over a long branch results in an increase in transit
traffic intensity, collision, congestion, packet loss, and
energy drain as packets move closer toward the sink
node [5].
Now consider the following collection scheme. The
leaf nodes start transmitting their sensor readings
first. Each intermediate node waits to collect both its
own sensor reading and the collected sensor readings
sent from its children (or upstream nodes), and then
forwards the collected packet toward the sink node.
Such a scheme may result in only N transmissions
in the network, assuming that successively collected
sensor readings could be loaded into one huge packet.
For instance, the long-thin WSN of Fig. 1 may incur
only 12 transmissions using such a collection scheme.
g1
sink r
g2
g3
cluster 1
cluster 3
cluster 2
sensor reading
Fig. 2. A long-thin WSN and its lock gates.
Fewer transmissions benefit WSNs by reducing
contention and conserving energy.
Although the above collection scheme maximally
reduces the number of transmissions in a long-thin
WSN, constraints imposed by the maximum payload
size Lmax of a packet and the compression ratio δ
(0 < δ ≤ 1) make such a scheme impractical for a
long-thin topology where a node can only collect
up to ⌊Lmaxδ ⌋ bytes of sensor readings, while the
total data size of sensor readings generated by sensor
nodes along a long branch can easily exceed this
bound. Besides, many practical applications of long-
thin WSNs demand the exact sensor readings of
each location along the deployment areas for data
monitoring and analysis purposes, so that sensor
readings are not aggregated (such as computing the
average, the minimum, or the maximum value) while
they are being collected.
To mitigate the funneling effect and to comply with
the maximum payload size, this paper suggests that in
a long-thin network, multiple collection nodes, termed
lock gates∗, should be designated, where each lock
gate collects both its own sensor readings and all of the
sensor readings sent from its upstream sensor nodes
(up to immediate, upstream lock gates or the end of the
branches) subject to the ⌊Lmaxδ ⌋ bound. For instance,
as shown in Fig. 2, assuming Lmax is 3 bytes, δ is 0.5,
and the size of sensor readings is 1 byte, we designate
one lock gate every six sensor nodes so that lock gate
g1 collects the sensor readings of itself and its five
upstream nodes into one collected packet†. Similar
collections are done by lock gates g2 and g3. Such a
collected packet (of maximum payload size Lmax) is
∗We are inspired by the lock gates used in canals to withstand the
water pressure arising from the level difference between adjacent
pounds. In the context of long-thinWSNs, (irregular) network traffic
from sensor readings corresponds to water pressure, which should
be regulated to mitigate funneling effect, for instance.
†For the ease of explanation, in this example we simply assume that
there is no ‘protocol overhead’ (or packet header/trailer) so that the
size of a packet is exactly the same as the size of its payload.
2
analysis. We also validate the correctness of our
analysis with measurements from real experiments.
The remainder of this paper is organized as follows.
Section 2 reviews related work. Section 3 gives
our problem statement. ALT and the analysis of
its expected extra packet latency are described in
Section 4. Section 5 presents our prototyping efforts
and discusses experimental results. Conclusions are
drawn in Section 6.
2. Related Work
Long-thin WSNs are widely used in many monitoring
applications such as leakage detection within fuel
pipes, stage measurements inside sewer, traffic
adjustment along tunnels or highways, vibration
detection of bridges, and flood protection of rivers.
The long-thin topology is first studied in [4], which
considers how to assign network addresses to sensor
nodes in ZigBee-based long-thin WSNs to facilitate
routing. In addition, a long-thin WSN is deployed
along a river to monitor its water level. The work in
[8] discusses how to detect and correct localization
errors in a long-thin WSN. In addition, it adopts
a weighted voting scheme to detect possible faulty
sensor readings. However, none of the existing work
on long-thin WSNs addresses the issue of data
aggregation/compression.
The subject of data aggregation/compression in
WSNs with random topologies has been extensively
studied in the literature. Below, we categorize and
review existing solutions.
Tree-based aggregation: The objective of tree-
based aggregation schemes is to maximize a WSN’s
lifetime by jointly optimizing data aggregation and
routing tree formation [9]. For instance, the work of
[10] discusses how to find a set of data aggregation
schedules to maximize the system’s lifetime, where a
schedule is defined as a collection of spanning trees
rooted at the sink node. The work of [11, 12] proposes
a data-centric approach to select an appropriate
routing path to reduce energy consumption. TAG [13]
organizes a WSN into a tree and proposes SQL-like
semantics to aggregate streaming data into histograms.
The work of [14] builds an aggregation tree according
to the energy consumption of sensor nodes. Each
node predicts the energy consumption of its potential
parents and selects the one that can be left with the
most energy as its parent. In the work of [15], one
coding tree for raw data aggregation and one shortest-
path tree for transmitting compressed data are built to
deliver data to the sink node. In the work of [16], the
effect of data aggregation on different routing schemes
is studied. The work also proposes a static clustering
scheme to achieve a near-optimal performance for
various spatial correlations. The above research efforts
focus on how to choose a good routing metric based
on data attributes to facilitate aggregation. However, in
long-thin WSNs, there usually exists at most one route
from a sensor node to the sink node (i.e., each sensor
node has at most one potential parent node toward the
sink node), so these existing tree-based solutions may
not be directly applied.
Clustering-based aggregation: This category of
schemes first group sensor nodes into clusters and
then perform data aggregation within each cluster. The
critical issue is how to select the cluster head in each
cluster to aggregate data for its cluster members [17].
For instance, the scheme in [18] assigns weights to
each node and the nodes with larger weights may
become cluster heads, while the work of [19] favors
nodes with more neighbors (i.e., higher degrees) to
become cluster heads. LEACH [20] assumes that each
sensor node can be reachable in one hop and then
assigns a fixed probability for each node to elect itself
as a cluster head. In HEED [21], each sensor node uses
its residual energy as the parameter to probabilistically
select itself as a cluster head. The above research
efforts discuss how to organize clusters such that
nodes within a cluster are one-hop or k-hop away from
the cluster head. In addition, SCT [22] proposes a ring-
sector division clustering scheme, where sensor nodes
in the same section are assembled into one cluster.
Clearly, this ring-based approach cannot be used for
long-thin WSNs. In contrast, ALT adaptively adjusts
the size of clusters according to the amount of traffics
generated from sensor nodes.
Chain-based aggregation: In these schemes,
sensor nodes are organized into a linear chain for data
aggregation. For instance, PEGASIS [23] organizes
such a chain by adopting a greedy algorithm, where
each sensor node selects its nearest neighbor (closer
to the sink) as its successor along the chain and then
sends its sensing readings to the successor. However,
PEGASIS may not guarantee to minimize the total
energy consumption of sensor nodes. Therefore, the
work of [24] proposes a chain-construction scheme
that minimizes the total energy consumption of sensor
nodes by reducing the value of
∑
D2, where D is the
distance between any two adjacent sensor nodes along
the chain. The chain-based topology can be viewed
as one special instance of the long-thin topology.
Nevertheless, in the chain-based aggregation schemes,
except for the node(s) at the end of the chain, all the
4
Table I. Summary of notations.
notation definition
λj the sensor reading generation rate of sensor node sj
C(gi) the cluster of nodes containing lock gate gi and its upstream sensor nodes
Lmax the maximum payload size of a packet
δ the compression ratio (0 < δ ≤ 1)
Ti the amount of time for lock gate gi to fill up one collected packet of payload size Lmax
Tmin the lower-bound threshold for a lock gate to shrink its cluster
Tmax the upper-bound threshold for a lock gate to expand its cluster
∆t the waiting time for a lock gate to adjust one of its next lock gate if all of its next lock gates are busy
β a system parameter to determine whether a lock gate enters the oscillating state or not
4. The Operations and Analysis of ALT
Given a long-thin WSN, ALT first randomly groups
sensor nodes into several non-overlapping clusters
that cover the entire network, and then designates
their corresponding lock gates. Note that the sensor
node closest to the sink node is always designated
as a lock gate. Upon generating one sensor reading,
each regular sensor node will send the reading toward
its corresponding lock gate. Each lock gate gi then
collects the sensor readings from the regular sensor
nodes within its clusterC(gi). After collecting enough
sensor readings to fill up one packet of maximum
payload size Lmax, lock gate gi sends the collected
packet toward the sink node. To reduce the latency
of waiting to collect enough sensor readings to fill
up one packet of maximum payload size Lmax, lock
gate gi may dynamically adjust the size of its cluster
according to the duration Ti that it took to generate
the previous collected packet (referring to Eq. (1)).
When Ti is below the given lower-bound threshold
Tmin, the total sensor reading generation rate within
this cluster (i.e.,
∑
sj∈C(gi) λj) has become too high,
and the collected packets will be sent to the sink node
more often. In this case, lock gate gi ‘shrinks’ its
cluster by excluding certain sensor nodes to lower the
total sensor reading generation rate. In contrast, when
Ti is above the given upper-bound threshold Tmax, the
total sensor reading generation rate within this cluster
becomes too low. In this case, lock gate gi ‘expands’
its cluster by including more sensor nodes to lower
the latency of generating collected packets. Notice that
within each cluster C(gi), the sensor readings sent
from each regular sensor node sj ∈ C(gi) may be
relayed to lock gate gi in a ‘pipelining’ manner subject
to the contention of wireless transmissions. Thus, right
before lock gate gi sends out each (completely filled)
collected packet toward the sink node, the percentage
of sensor readings received from sensor sj within this
packet is approximately equal to
λj∑
sk∈C(gi) λk
. (2)
In other words, the amount of reported sensor readings
from each sensor node is fairly proportional to the
sensor reading generation rate of that sensor node.
Before describing ALT in details, we first define the
terms used in the remainder of the paper. A lock gate
gk is called a next lock gate of lock gate gi if gk is an
immediate upstream lock gate of gi. In this case, gi is
the previous lock gate of gk. For instance, in Fig. 2, g2
is a next lock gate of g1 while g1 is a previous lock gate
of g2. Notice that each lock gate may have multiple
next lock gates but has at most one previous lock gate.
In addition, a lock gate is called a leaf lock gate if it
has no next lock gate; otherwise, it is a non-leaf lock
gate.
4.1. Adaptation of Lock Gate Designation
From an initial (random) lock gate designation,
lock gates execute ALT asynchronously, while
coordinating with previous and next lock gates. Each
lock gate gi measures its current Ti value, ‘moves’ one
of its next lock gates (if necessary) either downstream
or upstream by one hop, and recalculates its Ti value.
This process is repeated until lock gate gi settles at the
condition of Tmin ≤ Ti ≤ Tmax. Specifically, for each
non-leaf lock gate gi, two possible cases need to be
addressed: Ti < Tmin and Ti > Tmax.
4.1.1. Case of Ti < Tmin
In this case, lock gate gi ‘shrinks’ its cluster by first
querying each of its next lock gates gk for its Tk value.
If lock gate gk is also in the state of adjusting its own
next lock gates, lock gate gk will reply to lock gate gi
that itself is busy; otherwise, lock gate gk will reply to
lock gate gi with its Tk value. If lock gate gi concludes
that all of its next lock gates are busy, it will wait for
6
g1
sink r
g2
g3
cluster C(g1)
cluster C(g2)
cluster C(g3)
(a)
g1
sink r
g2
g3
cluster C(g1)
cluster C(g2)
cluster C(g3)
(b)
g1
sink r
g3
cluster C(g1)
cluster C(g2)
cluster C(g3)
g2
(c)
Fig. 4. Counterexamples of moving next lock gates: (a)
the original clustering result, (b) g1 simply moves g2
downstream and thus drastically decreases the size of C(g1)
while drastically increases the size of C(g2), and (c) g1
simply moves g2 upstream and thus drastically increases the
size of C(g1) while drastically decreases the size of C(g2).
all of the next lock gates are branch nodes, as shown in
Fig. 3(d), assuming that T3 < T2, lock gate g3 will be
asked to move to node s. Notice that in the latter case,
the node in which lock gate g3 used to reside, node t,
and some of node t’s upstream nodes will be merged
into cluster C(g1).
In contrast to shrinking a cluster, ALT gives
priority to move a lock gate (one-hop upstream)
that is not a branch node when expanding a cluster.
Doing so avoids including too many sensor nodes
all at once when expanding a cluster, which may
otherwise drastically decrease its Ti value due to
merging of branches, and/or creating a new cluster
with drastically decreased cluster size (or increased Ti
value). Fig. 4(a) and Fig. 4(c) together show a different
counterexample with the assumption that T2 < T3.
When lock gate g1 simply moves its next lock gate
whose Ti value is the smallest, lock gate g2 will be
moved one-hop upstream, as shown in Fig. 4(c). As a
result, the size of cluster C(g1) increases drastically
from 7 to 12, while the size of cluster C(g2) decreases
drastically from 8 to 3. In fact, ALT moves g3 one-hop
upstream instead.
In ALT, sensor nodes do not need to report
their sensor reading generation rates λj to their
corresponding lock gates. Thus, the control overhead
is only incurred by transmitting query, reply, push,
and pull messages between two adjacent lock gates. In
Section 5.1, we will show that ALT’s control overhead
is only a small portion compared to the actual amount
of data payloads.
4.2. Handling of Leaf Lock Gates
For each leaf lock gate gl, it will be only moved
according to the push or pull requests from its previous
lock gate. However, two special cases should be
considered. First, when lock gate gl is asked to move
upstream but itself is already a leaf node on G, gl will
simply cease being a lock gate and work as a regular
sensor node. In this case, the total number of lock gates
in the network decreases by one. Second, after lock
gate gl has been moved downstream and computes that
Tl < Tmin, lock gate gl will select one leaf node, say,
sj from its cluster and designate sj as a new (leaf) lock
gate. In this case, the total number of lock gates in the
network increases by one.
4.3. Handling of Oscillating Lock Gates
To prevent lock gates from ‘oscillating’ or moving
back and forth between two adjacent nodes, each
lock gate gi maintains a short list recording its
past positions on G. If lock gate gi finds that it
has moved between two adjacent nodes (termed
oscillating nodes) more than β times§ and its previous
lock gate still asks it to move to one of the oscillating
nodes, lock gate gi enters the oscillating state and
requests its previous lock gate to stop asking it to
move. Lock gate gi will exit the oscillating state when
either its previous lock gate asks it to move to one non-
oscillating node or a pre-configured oscillating timer
expires.
When each sensor node has a fixed sensor reading
generation rate, the lock gates designated by ALT
will eventually stabilize and converge (from an initial
random designation) due to the following two factors.
First, a lock gate can only move its next lock gates
but cannot move its previous lock gate. In this case,
clusters can stabilize in sequence from the downstream
direction to the upstream direction. Second, ALT
employs the above oscillation avoidance technique. In
§The β value will affect the convergence speed of ALT. When a fast
convergence is desired, a smaller β can be set.
8
...s1 s2 ...
packet
latency
lock gate
1st packet:
2nd packet:
3rd packet:
.
.
.
nj-th packet:
1
i
L
T
l
-
1
2i
L
T
l
-
1
3i
L
T
l
-
1
1
i
L
T n
l
-
2
i
L
T t
l
- -
2
2i
L
T t
l
- -
2
3i
L
T t
l
- -
.
.
.
.
.
.
2
2
i
L
T n t
l
-
( 1)
i
j
L
T j t
l
- - -
2 ( 1)i
j
L
T j t
l
- - -
3 ( 1)
i
j
L
T j t
l
- - -
.
.
.
( 1)
i j
j
L
T n j t
l
- - -
( 1)
i
K
L
T K t
l
- - -
2 ( 1)i
K
L
T K t
l
- - -
3 ( 1)i
K
L
T K t
l
- - -
.
.
.
( 1)
i K
K
L
T n K t
l
- - -
total
latency
average
latency
1
1
1
2
i
n L
T
l
+
- ´
sKsj
2
2
1
2
i
n L
T
l
t
+
- ´
-
1
2
( 1)
j
i
j
n L
T
j
l
t
+
- ´
- -
1
2
( 1)
K
i
K
n L
T
K
l
t
+
- ´
- -
t t t t t
1
1
1 1
n
i
L
nT
a
a
l=
- å
2
2
1 2
2
n
i
L
n T
n
a
a
l
t
=
-
-
å
1
( 1)
jn
j i
j
j
L
n T
n j
a
a
l
t
=
-
- -
å
1
( 1)
Kn
K i
K
K
L
n T
n K
a
a
l
t
=
-
- -
å
Fig. 6. Analysis of extra packet latency by a lock gate.
since λj does not change during Ti, we have λj =
nj
Ti
.
For node s1, its first packet is generated after time Lλ1 .
Since node s1 is the lock gate, this first packet has
to wait a duration of Ti − Lλ1 before s1 sends out a
collected packet. Similarly, the second packet of node
s1 has to wait a duration of Ti − 2 Lλ1 and the last
packet of node s1 has to wait a duration of Ti − n1 Lλ1 .
In this case, the average extra packet latency of node
s1 is
1
n1
(
(Ti − L
λ1
) + (Ti − 2 L
λ1
) + · · ·+ (Ti − n1 L
λ1
)
)
=
1
n1
(
n1Ti −
n1∑
α=1
α
L
λ1
)
= Ti − n1 + 1
2
× L
λ1
.
For node s2, since it takes time τ to send a packet to
node s1, node s2’s first packet has to wait a duration
of Ti − Lλ2 − τ . Similarly, the second packet and the
last packet of node s2 have to wait durations of Ti −
2 Lλ2 − τ and Ti − n2 Lλ2 − τ , respectively. Thus, the
average extra packet latency of node s2 is
Ti − n2 + 1
2
× L
λ2
− τ.
Similarly, the average extra packet latency of node sj
is
Ti − nj + 1
2
× L
λj
− (j − 1)τ.
Fig. 6 shows the extra packet latency of each sensor
node. Therefore, the average extra packet latency of
all sensor nodes within cluster C(s1) incurred by lock
gate s1 is
1
K
(
(Ti − n1 + 1
2
× L
λ1
) + (Ti − n2 + 1
2
× L
λ2
− τ)
+ · · ·+ (Ti − nK + 1
2
× L
λK
− (K − 1)τ)
)
=
1
K
(
KTi − L
2
K∑
α=1
nα + 1
λα
−
K−1∑
α=1
ατ
)
= Ti − L
2K
K∑
α=1
nα + 1
λα
− K − 1
2
τ. (3)
According to Eq. (1), we can derive that
Ti =
Lmax
δ ×∑Kα=1 λα . (4)
Let ntotal be the total number of packets ‘generated’
by all sensor nodes during Ti, so we have ntotal =∑K
j=1 nj . Since each packet has a payload size of L,
we can obtain that
(ntotal × L)× δ = Lmax ⇒ ntotal =
⌈
Lmax
L× δ
⌉
.
From Eq. (2), each sensor node sj , j = 1..K, will
generate nj packets during Ti:
nj =
λj∑K
α=1 λα
× ntotal
=
⌈
λj∑K
α=1 λα
× Lmax
L× δ
⌉
. (5)
Therefore, the average extra packet latency of all
sensor nodes within a cluster can be calculated by
substituting Eqs. (4) and (5) into Eq. (3).
5. Implementation and Experimental Results
In this section, we describe our prototyping efforts and
discuss the experimental results. We use one hundred
sensor nodes and one sink node. Fig. 7 pictures one
deployment scenario of our prototype. Each sensor
node is equipped with a Jennic JN5139 chip [7]
containing a micro-controller and an IEEE 802.15.4
transceiver. The transmission power of each sensor
node has been adjusted to have a communication
distance of approximately 30 centimeters (cm). We
place two adjacent nodes with a distance of 15 cm
so that network connectivity can be guaranteed. An
10
Table II. Comparison on the total amount of messages (in bytes)
sent by sensor nodes in different network topologies.
γ value scheme balanced unbalanced cross
ALT 498,530 581,550 468,982
γ = 0 FLS 668,962 785,707 572,769
BF 928,926 1,022,398 864,898
ALT 525,009 606,598 502,592
γ = 0.3 FLS 680,349 801,486 596,287
BF 943,384 1,096,538 871,232
Table III. Comparison on the total number of packets sent by sensor
nodes in different network topologies.
γ value scheme balanced unbalanced cross
ALT 33,865 35,517 32,225
γ = 0 FLS 99,915 128,396 78,767
BF 238,899 267,690 217,392
ALT 35,878 35,788 33,033
γ = 0.3 FLS 103,750 128,563 81,621
BF 240,855 282,288 218,911
of lock gates according to the network condition, ALT
enjoys a lower amount of messages compared with
FLS. It can be observed that when γ = 0, ALT saves
18.1% ∼ 26.0% and 43.1% ∼ 46.3% of the amount
of messages compared with FLS and BF, respectively.
When γ = 0.3, ALT saves 15.7%∼ 24.3% and 42.3%
∼ 44.7% of the amount of messages compared with
FLS and BF, respectively. These results show the
effectiveness of ALT. Notice that the three schemes
all suffer from the highest amount of messages under
the unbalanced topology, because this topology has the
longest branch (with 51 sensor nodes).
Table III lists the total number of packets
successfully forwarded to the sink node by sensor
nodes in different network topologies. Using BF,
sensor nodes forward the most number of packets,
because they simply relay sensor readings to the sink
node. ALT incurs the smallest number of packets
among all three schemes because it adaptively clusters
sensor nodes via lock gates and collects their packets
accordingly. It can be observed that when γ = 0,
ALT saves 59.1% ∼ 72.3% and 85.2% ∼ 86.7%
of the number of packets compared with FLS and
BF, respectively. When γ = 0.3, ALT saves 59.5% ∼
72.2% and 84.9% ∼ 87.3% of the number of packets
compared with FLS and BF, respectively. These
results demonstrate that ALT significantly reduces the
number of packets forwarded by sensor nodes, which
can greatly alleviate network congestion and conserve
energy.
Note that our measurement includes all the control
messages. From Tables II and III, we can observe
that ALT incurs very low traffics even when control
overheads are included. Thus, the impact of control
overheads caused by ALT’s adaption of lock gates is
light-weight.
5.2. Adaptive Designation of Lock Gates
To demonstrate the adaptability of ALT to varying
sensor reading generation rates, we deploy a sink
node (of ID 0) and a line of 50 sensor nodes
(of IDs 1 to 50), where the node with ID 1 is
the most downstream sensor node. The duration of
the experiment is 126minutes and we monitor the
(changing) number of lock gates and their designation
(or positions) over time. All of the sensor nodes have
the same sensor reading generation rate (λ), which
changes every 3minutes as shown in Fig. 9(a). For
instance, starting at 0.2 bytes/second, λ remains at
the same rate until the 36th minute, increases to
0.6 bytes/second at the 66th minute, remains at the
same rate until the 81st minute, and then decreases.
Fig. 9(b) depicts the changing designation of lock
gates, as dots, over time. For instance, at the 0th
minute, there are 6 lock gates randomly designated
at nodes of IDs 1, 4, 18, 20, 25, and 48. Before the
36th minute, λ is not changed and thus the positions of
lock gates stabilize at nodes of IDs 1, 16, 31, and 45
at the 24th minute. When λ increases, the size of the
clusters decreases and thus the number of lock gates
increases accordingly. Between the 66th and the 81st
minutes, λ remains stable and thus the designation of
lock gates are only slightly adjusted. For instance, at
the 72nd minute, 8 lock gates are designated at nodes
of IDs 1, 6, 12, 18, 25, 32, 38, and 47. After the
81st minute, when λ decreases, the number of lock
gates also decreases and the size of clusters increases.
After the 117th minute, the designation of lock gates
remains stable because λ does not change. Since all
of the sensor nodes have the same λ value, we also
observe that the distance between any two adjacent
lock gates is quite similar at most time instances. Such
a phenomenon is more visible when the number of
lock gates is smaller. These observations demonstrate
that ALT can efficiently adjust the size of each cluster
(and designate the lock gate accordingly) based on the
traffic sent from the sensor nodes in that cluster.
Using the same network topology in the previous
experiment, we also demonstrate the adaptability of
ALT when sensor nodes have different sensor reading
generation rates (λ). Specifically, the λ value of sensor
nodes of IDs 1 to 25 increases while that of sensor
nodes of IDs 26 to 50 decreases over time, as shown
in Fig. 10(a). For convenience, we use the terms
‘downstream part’ and ‘upstream part’ to represent
12
02000
4000
6000
8000
10000
12000
14000
0 20 40 60 80 100
node ID
n
u
m
b
e
r 
o
f 
re
tr
a
n
s
m
is
s
io
n
s
ALT
BF
Branch 1 Branch 2
(a) the balanced topology
0
2000
4000
6000
8000
10000
12000
14000
0 20 40 60 80 100
node ID
n
u
m
b
e
r 
o
f 
re
tr
a
n
s
m
is
s
io
n
s
ALT
BF
Branch 1 Branch 2
(b) the unbalanced topology
0
2000
4000
6000
8000
10000
12000
14000
0 20 40 60 80 100
node ID
n
u
m
b
e
r 
o
f 
re
tr
a
n
s
m
is
s
io
n
s ALT
BF
Branch 1 Branch 2 Branch 3
(c) the cross topology
Fig. 11. Comparison on the numbers of packet retransmis-
sions under ALT and BF.
number of retransmissions is not only reduced but
also not affected by the topology. In Fig. 11, the
numbers of retransmissions incurred by ALT in all
three topologies exhibit very similar saw-tooth curves
with valleys occurring at the lock gate nodes due
to the fact that lock gates collect the packets within
the corresponding clusters and reduce the number of
transmissions.
We now compare the number of packet losses at
each sensor node in the three network topologies.
As shown in Fig. 12, using BF, sensor nodes closer
to the sink node incur a higher number of packet
losses because these sensor nodes have to relay more
0
200
400
600
800
1000
1200
1400
0 20 40 60 80 100
node ID
n
u
m
b
e
r 
o
f 
p
a
c
k
e
t 
lo
s
s
ALT
BF
Branch 1 Branch 2
lo
s
s
e
s
(a) the balanced topology
0
200
400
600
800
1000
1200
1400
0 20 40 60 80 100
node ID
n
u
m
b
e
r 
o
f 
p
a
c
k
e
t 
lo
s
s
ALT
BF
Branch 1 Branch 2
lo
s
s
e
s
(b) the unbalanced topology
0
200
400
600
800
1000
1200
1400
0 20 40 60 80 100
node ID
n
u
m
b
e
r 
o
f 
p
a
c
k
e
t 
lo
s
s
ALT
BF
Branch 1 Branch 2 Branch 3
lo
s
s
e
s
(c) the cross topology
Fig. 12. Comparison on the numbers of packet losses under
ALT and BF.
sensor readings from upstream nodes. In particular,
the unbalanced topology suffers more packet losses
than the other two topologies due to the existence of
the longest branch and hence the highest contention.
The branch node with ID 34 incurs more packet losses
than its upstream neighboring nodes due to higher
contention. In contrast, using ALT, the numbers of
packet losses are quiet small in all three topologies,
which indicates that lock gates significantly reduce the
number of transmissions and mitigate the contention.
14
01
2
3
4
5
6
7
8
0 20 40 60 80 100
node ID
a
v
e
ra
g
e
 l
a
te
n
c
y
 (
s
e
c
o
n
d
)
ALT
BF
Branch 1 Branch 2
a
v
e
ra
g
e
 l
a
te
n
c
y
 (
s
e
c
o
n
d
s
)
(a) the balanced topology
0
1
2
3
4
5
6
7
8
0 20 40 60 80 100
node ID
a
v
e
ra
g
e
 l
a
te
n
c
y
 (
s
e
c
o
n
d
)
ALT
BF
Branch 1 Branch 2
a
v
e
ra
g
e
 l
a
te
n
c
y
 (
s
e
c
o
n
d
s
)
(b) the unbalanced topology
0
1
2
3
4
5
6
7
8
0 20 40 60 80 100
node ID
a
v
e
ra
g
e
 l
a
te
n
c
y
 (
s
e
c
o
n
d
)
ALT
BF
Branch 1 Branch 2 Branch 3
a
v
e
ra
g
e
 l
a
te
n
c
y
 (
s
e
c
o
n
d
s
)
(c) the cross topology
Fig. 13. Comparison on the average packet latency under
ALT and BF.
3. Y. C. Tseng, Y. C. Wang, K. Y. Cheng, and Y. Y. Hsieh,
“iMouse: an integrated mobile surveillance and wireless
sensor system,” IEEE Computer, vol. 40, no. 6, pp. 60–66,
June 2007.
4. M. S. Pan, H. W. Fang, Y. C. Liu, and Y. C. Tseng, “Address
assignment and routing schemes for ZigBee-based long-thin
wireless sensor networks,” in IEEE Vehicular Technology
Conference, May 2008, pp. 173–177.
5. G. S. Ahn, S. G. Hong, E. Miluzzo, A. T. Campbell, and
F. Cuomo, “Funneling-MAC: a localized, sink-oriented MAC
for boosting fidelity in sensor networks,” in ACM International
Conference on Embedded Networked Sensor Systems, October
2006, pp. 293–306.
6. I. F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci,
“A survey on sensor networks,” IEEE Communications
Magazine, vol. 40, no. 8, pp. 102–114, August 2002.
7. Jennic wireless microcontrollers. [Online]. Available:
http://www.jennic.com/
8. D. De, “A distributed algorithm for localization error
detection-correction, use in in-network faulty reading detec-
tion: applicability in long-thin wireless sensor networks,” in
IEEE Wireless Communications and Networking Conference,
April 2009.
9. C. Hua and T. S. P. Yum, “Optimal routing and data
aggregation for maximizing lifetime of wireless sensor
networks,” IEEE/ACM Transactions on Networking, vol. 16,
no. 4, pp. 892–903, August 2008.
10. K. Kalpakis, K. Dasgupta, and P. Namjoshi, “Efficient
algorithms for maximum lifetime data gathering and
aggregation in wireless sensor networks,”Computer Networks,
vol. 42, no. 6, pp. 697–716, August 2003.
11. B. Krishnamachari, D. Estrin, and S. Wicker, “The impact
of data aggregation in wireless sensor networks,” in IEEE
International Conference on Distributed Computing Systems
Workshops, July 2002, pp. 575–578.
12. C. Intanagonwiwat, R. Govindan, D. Estrin, J. Heidemann, and
F. Silva, “Directed diffusion for wireless sensor networking,”
IEEE/ACM Transactions on Networking, vol. 11, no. 1, pp.
2–16, February 2003.
13. S. Madden, M. J. Franklin, J. M. Hellerstein, and W. Hong,
“TAG: a tiny aggregation service for ad-hoc sensor networks,”
ACM SIGOPS Operating Systems Review, vol. 36, pp. 131–
146, December 2002.
14. A. F. Harris III, R. Kravets, and I. Gupta, “Building trees based
on aggregation efficiency in sensor networks,” ACM Ad Hoc
Networks, vol. 5, no. 8, pp. 1317–1328, November 2007.
15. P. von Rickenbach and R. Wattenhofer, “Gathering correlated
data in sensor networks,” in ACM Workshop on Discrete
Algorithms and Methods for Mobile Computing and Commu-
nications, October 2004, pp. 60–66.
16. S. Pattem, B. Krishnamachari, and R. Govindan, “The impact
of spatial correlation on routing with compression in wireless
sensor networks,” ACM Transactions on Sensor Networks,
vol. 4, no. 4, pp. 1–33, August 2008.
17. O. Younis, M. Krunz, and S. Ramasubramanian, “Node
clustering in wireless sensor networks: recent developments
and deployment challenges,” IEEE Network, vol. 20, no. 3, pp.
20–25, May/June 2006.
18. S. Basagni, “Distributed clustering for ad hoc networks,”
in IEEE International Symposium on Parallel Architectures,
Algorithms and Networks, June 1999, pp. 310–315.
19. F. Kuhn, T. Moscibroda, and R. Wattenhofer, “Initializing
newly deployed ad hoc and sensor networks,” in ACM Inter-
national Conference on Mobile Computing and Networking,
September 2004, pp. 260–274.
20. W. B. Heinzelman, A. P. Chandrakasan, and H. Balakrishnan,
“An application-specific protocol architecture for wireless
microsensor networks,” IEEE Transactions on Wireless
Communications, vol. 1, no. 4, pp. 660–670, October 2002.
21. O. Younis and S. Fahmy, “HEED: a hybrid, energy-efficient,
distributed clustering approach for ad hoc sensor networks,”
IEEE Transactions on Mobile Computing, vol. 3, no. 4, pp.
366–379, October–December 2004.
22. Y. Zhu, R. Vedantham, S. J. Park, and R. Sivakumar, “A
scalable correlation aware aggregation strategy for wireless
sensor networks,” in IEEE International Conference on
Wireless Internet, July 2005, pp. 122–129.
23. S. Lindsey, C. Raghavendra, and K. M. Sivalingam, “Data
gathering algorithms in sensor networks using energy
metrics,” IEEE Transactions on Parallel and Distributed
Systems, vol. 13, no. 9, pp. 924–935, September 2002.
16
  
 
 
 
附錄三 
 
 
 
 
 
 
 
 
Dynamic Water Gate Assignment Scheme 
for Data Aggregation in Long-Thin Sensor 
Networks 
 
 
 
 
 
 
 
 
 
 
Y.-C. Wang, C.-H. Chuang, Y.-C. Tseng, and C.-C. Shen 
 
 
 
International Computer Symposium (ICS) 
Figure 2: An LT WSN with three clusters.
gate aggregates its own sensing data with all of the sens-
ing data from its upstream sensors (up to the immediate,
upstream water gate(s) or the end of the branch) subject to
the Lmaxδ  bound. Fig. 2 shows an example. Considering
that Lmax is 3 bytes, δ is 0.5, and the size of sensing data
is 1 byte, we designate one water gate every 6 sensors so
that water gate g1 aggregates its own sensing data with
those from its 5 upstream nodes into one aggregated packet.
Similarly, this can be done by water gates g2 and g3. Such
an aggregated packet (of payload size Lmax) is said to be
completely filled up with sensing data and is forwarded to
the sink without being aggregated with any other sensing
data along the branch. Besides, water gates help reduce
contention among traffics by spatially separating areas where
packets are transmitted. In Fig. 2, since water gates g2 and
g3 hold their transmissions until enough sensing data from
their upstream sensors have been collected, the sensors in
cluster 1 can transmit their sensing data to g1 with almost
no interference from other sensors in clusters 2 and 3.
However, because sensors may generate sensing data at
different rates, each water gate should wait for a different
amount of time to completely fill up an aggregated packet of
size Lmax. Let λj denote the sensing data generating rate (or
data rate for short) of sensor sj and c(gi) denote the cluster
of nodes containing water gate gi and its upstream sensors.
Assuming that each λj is a constant and the WSN operates
at a steady state, Eq. (1) indicates the amount of time ti
taken by water gate gi to completely fill up an aggregated
packet of size Lmax:
ti =
Lmax
δ ×∑sj∈c(gi) λj . (1)
When ti is large, the sink will wait for a longer time to
receive an aggregated packet from gi, which increases the
network response time. Large ti implies either the size of
c(gi) is small or the total data rate of the sensor nodes in
c(gi) is low. On the contrary, small ti implies either the
size of c(gi) is large or the total data rate of the sensors in
c(gi) is high. In this case, too many packet transmissions
will congest the network.
Therefore, this paper proposes a dynamic Water gate
Assignment scheme for Data Aggregation (WADA) to facil-
itate effective data aggregation in LT WSNs. Given time
thresholds tlower and tupper specified by the WSN appli-
cation to reduce the network response time while avoid the
congestion caused by transmitted packets, WADA designates
water gates in an LT WSN such that for each water gate gi,
we have tlower ≤ ti ≤ tupper. Moreover, when data rate λi
varies over time, WADA can adaptively adjust the locations
of water gates to balance response time and congestion.
In the literature, the subject of data aggregation in WSNs
has been extensively studied. However, most studies adopt
either a tree-based or a cluster-based structure to aggregate
data in WSNs, and none of them consider the LT topology.
Tree-based aggregation schemes construct the shortest-path
routing trees, and focus on how to choose a good routing
metric to facilitate data aggregation. For example, the studies
of [10], [11] propose data-centric schemes to select an
appropriate path to reduce energy consumption. The study in
[12] constructs an aggregation tree based on sensors’ energy
consumption. Each sensor predicts the energy consumption
of its potential parents and selects the one that can remain
the most energy as its parent. In contrast, there exists at
most one route from a sensor to the sink in LT WSNs (i.e.,
each sensor has at most one potential parent node toward the
sink) so that existing solutions may not be directly applied.
In comparison, cluster-based aggregation schemes group
sensors into clusters and conduct data aggregation within
each cluster. For example, in LEACH [13] and PEGASIS
[14], sensors relay the sensing data to their cluster heads,
which are assumed to be able to directly communicate
with the sink. However, this assumption is not valid in
LT WSNs. HEED [15] groups sensors into clusters such
that sensors within a cluster are single-hop away from the
cluster head. However, in an LT WSN, sensors within a
cluster are located along a long branch that are multi-hop
away from their cluster head. SCT [16] proposes a ring-
sector division clustering scheme, where sensors in the same
section are grouped into one cluster. Explicitly, this scheme
cannot be used in LT WSNs. To the best of our knowledge,
the proposed WADA scheme is the first effort that addresses
efficient data aggregation in LT WSNs.
We organize the rest of this paper as follows: Section II
proposes our WADA scheme. Section III reports our pro-
totyping experience and experimental results. Section IV
concludes the paper.
II. THE PROPOSED WADA SCHEME
An LT WSN can be modeled as a graph G = (V, E),
where V includes the sink and all sensors, and E includes
all of the communication links. We represent the topology
of G as a tree rooted at the sink. Each sensor sj has a data
rate of λj that may vary over time, j = 1..n. A sensor is
called a branch node if it has more than one child in G.
Fig. 2 shows an example, where there are three clusters and
sensors g1, g2, and g3 are water gates.
Given an LT WSN, WADA arbitrarily groups sensors into
non-overlapping clusters and assigns their water gates. Note
that the sensor nearest to the sink is always assigned as
Figure 4: Bad examples of moving child water gates.
parent node is a branch node. Fig. 4(a) shows a bad
example, where t2 > t3. If g1 simply moves its child
water gate with the maximum ti value, g2 will be asked
to move downstream, as shown in Fig. 4(b). In this
case, the size of cluster c(g1) drastically decreases from
7 to 3. Moreover, the size of cluster c(g2) drastically
increases from 9 to 13. Instead, WADA moves g3 one-
hop downstream.
• Case of ti > tupper: Water gate gi expands its cluster
by querying each child water gate gk for its tk value.
Then, gi sends a push message to ask the non-busy
child water gate gk that is not a branch node and has the
minimum tk value to move one-hop upstream. When gi
cannot find such a child water gate (which means that
all of its non-busy child water gates are branch nodes),
the non-busy child water gate gk with the minimum tk
value is asked to move upstream. These operations are
repeated until gi calculates that ti ≤ tupper. Fig. 3(c)
gives an example, where g1 wants to adjust its child
water gates. Since g2 is not a branch node, it will be
moved upstream. When all child water gates are branch
nodes, as shown in Fig. 3(d), WADA asks g3 to move
to node e (assuming that t3 < t2).
To avoid including too many sensors when expanding
a cluster, which may make its ti value decrease drasti-
cally, WADA avoids moving a child water gate that is
a branch node. Fig. 4(a) shows a bad example, where
t2 < t3. If g1 simply moves its child water gate with the
minimum ti value, g2 will be asked to move upstream,
as shown in Fig. 4(c). In this case, the size of cluster
c(g1) drastically increases from 7 to 13. Moreover, the
size of cluster c(g2) drastically decreases from 9 to 3.
Instead, WADA moves g3 one-hop upstream.
When moving a leaf water gate gi, two cases should be
considered:
• If gi is asked to move downstream but finds that ti <
tlower, it selects one leaf node, say, sj in its cluster and
designates sj as a new water gate. Thus, the number
of water gates will increase by one.
• If gi is a leaf node but is still asked to move upstream,
gi clears itself as a water gate. Thus, the number of
water gates will decrease by one.
To avoid oscillating water gates, each water gate gi should
maintain a list recording its past locations on G. When gi
finds that it has moved between two adjacent oscillating
nodes more than α times and its parent water gate still
asks it to move to one of the oscillating nodes, it enters the
oscillating state. Then, gi notifies its parent water gate of
stopping moving it in that direction. Water gate gi will exit
the oscillating state if its parent water gate asks it to move
to one non-oscillating node or a predefined timer expires.
III. EXPERIMENTAL RESULTS
We deploy 100 sensors to collect the environmental data,
as shown in Fig. 5. Each sensor has a Jennic chip [17],
which is a low power, wireless microcontroller supporting
the ZigBee protocol [18]. Each sensor has a communication
distance of 30 cm but two adjacent sensors are placed with
a distance of 15 cm to ensure the network connectivity. We
consider two LT topologies: x-topology and y-topology. As
shown in Fig. 6, x-topology has four branches, where three
branches have 22 nodes while one branch has 33 nodes; y-
topology has three branches, where branch 1 has 15 node,
branch 2 has 33 nodes, and branch 3 has 51 nodes. We
compare WADA against the Direct Relay (DR) scheme and
the Static Water gate Assignment (SWA) scheme. DR does
not adopt any data aggregation and each sensor simply relays
the sensing data from its upstream nodes to the sink. In
SWA, each branch node is assigned as a water gate and
we do not adjust the assignment of water gates during the
experiments.
The packet size is 15 bytes, which contains a header
of 12 bytes and a payload of 3 bytes. Each sensor reports
its sensing data every Δs ∈ [7, 13] seconds and Δs will
change every 30 seconds. We remove the headers of all
received packets and concatenate their payloads into one
single packet, so we have δ = 1. In our experiments, we
set Lmax to 118 bytes, which is the maximum payload
size defined in ZigBee. The experiment time is 10 minutes.
In the experiments of executing WADA, the measurement
0.2
0.3
0.4
0.5
0.6
0 12 24 36 48 60 72 84 96 108 120
time (minute)
da
ta
 r
at
e 
(by
te
s/
se
co
nd
)
nodes with IDs 1-25
nodes with IDs 26-50
0
5
10
15
20
25
30
35
40
45
50
0 12 24 36 48 60 72 84 96 108 120
time (minute)
lo
ca
tio
ns
 
of
 
w
at
er
 
ga
te
s 
(no
de
 ID
)
Figure 8: The locations of water gates (marked by ‘x’) under different data
rates.
the amount of data transmissions of sensors and adaptively
adjusts the assignment of water gates according to various
network conditions.
ACKNOWLEDGEMENT
Y.-C. Tseng’s research is co-sponsored by MoE ATU
Plan, by NSC grants 97-3114-E-009-001, 97-2221-E-009-
142-MY3, 98-2219-E-009-019, and 98-2219-E-009-005, by
MOEA 98-EC-17-A-02-S2-0048, and 98-EC-17-A-19-S2-
0052, by ITRI, Taiwan, by III, Taiwan, and by Intel.
REFERENCES
[1] S. Helal, W. Mann, H. El-Zabadani, J. King, Y. Kaddoura,
and E. Jansen, “The gator tech smart house: a programmable
pervasive space,” IEEE Computer, vol. 38, no. 3, pp. 50–60,
2005.
[2] Y. C. Tseng, Y. C. Wang, K. Y. Cheng, and Y. Y. Hsieh,
“iMouse: an integrated mobile surveillance and wireless sen-
sor system,” IEEE Computer, vol. 40, no. 6, pp. 60–66, 2007.
[3] L. W. Yeh, Y. C. Wang, and Y. C. Tseng, “iPower: an energy
conservation system for intelligent buildings by wireless
sensor networks,” International Journal of Sensor Networks,
vol. 5, no. 1, pp. 1–10, 2009.
[4] S. C. Hu, Y. C. Wang, C. Y. Huang, and Y. C. Tseng, “A
vehicular wireless sensor network for co2 monitoring,” in
IEEE Conference on Sensors, 2009, pp. 1498–1501.
[5] A. Cerpa and D. Estrin, “ASCENT: adaptive self-configuring
sensor networks topologies,” in IEEE INFOCOM, 2002, pp.
1278–1287.
[6] H. Zhang and J. C. Hou, “Maintaining sensing coverage and
connectivity in large sensor networks,” International Journal
of Wireless Ad Hoc and Sensor Networks, vol. 1, no. 1–2, pp.
89–124, 2005.
[7] Y. C. Wang, C. C. Hu, and Y. C. Tseng, “Efficient placement
and dispatch of sensors in a wireless sensor network,” IEEE
Transactions on Mobile Computing, vol. 7, no. 2, pp. 262–
274, 2008.
[8] Y. C. Wang and Y. C. Tseng, “Distributed deployment
schemes for mobile wireless sensor networks to ensure mul-
tilevel coverage,” IEEE Transactions on Parallel and Dis-
tributed Systems, vol. 19, no. 9, pp. 1280–1294, 2008.
[9] M. S. Pan, H. W. Fang, Y. C. Liu, and Y. C. Tseng, “Address
assignment and routing schemes for ZigBee-based long-thin
wireless sensor networks,” in IEEE Vehicular Technology
Conference, 2008, pp. 173–177.
[10] C. Intanagonwiwat, R. Govindan, and D. Estrin, “Directed
diffusion: a scalable and robust communication paradigm
for sensor networks,” in ACM International Conference on
Mobile Computing and Networking, 2000, pp. 56–67.
[11] B. Krishnamachari, D. Estrin, and S. Wicker, “The impact
of data aggregation in wireless sensor networks,” in IEEE
International Conference on Distributed Computing Systems
Workshops, 2002, pp. 575–578.
[12] A. F. Harris III, R. Kravets, and I. Gupta, “Building trees
based on aggregation efficiency in sensor networks,” ACM
Ad Hoc Networks, vol. 5, no. 8, pp. 1317–1328, 2007.
[13] M. J. Handy, M. Haase, and D. Timmermann, “Low energy
adaptive clustering hierarchy with deterministic cluster-head
selection,” in IEEE International Workshop on Mobile and
Wireless Communications Network, 2002, pp. 368–372.
[14] S. Lindsey and C. S. Raghavendra, “PEGASIS: power-
efficient gathering in sensor information systems,” in IEEE
Aerospace Conference, 2002, pp. 1125–1130.
[15] O. Younis and S. Fahmy, “Distributed clustering in ad-hoc
sensor networks: a hybrid, energy-efficient approach,” in
IEEE INFOCOM, 2004, pp. 629–640.
[16] Y. Zhu, R. Vedantham, S. J. Park, and R. Sivakumar, “A
scalable correlation aware aggregation strategy forwireless
sensor networks,” in IEEE International Conference on Wire-
less Internet, 2005, pp. 122–129.
[17] Jennic microcontrollers. [Online]. Available: http://www.
jennic.com/
[18] LAN/MAN Standards Committee of the IEEE Computer
Society, “IEEE Std 802.15.4-2003, Wireless medium ac-
cess control (MAC) and physical layer (PHY) specifications
for low-rate wireless personal area networks (LR-WPANs),”
IEEE, 2003.
Address Assignment and Routing Schemes for
ZigBee-Based Long-Thin Wireless Sensor Networks
Meng-Shiuan Pan∗1, Hua-Wei Fang†‡2, Yung-Chih Liu†3, and Yu-Chee Tseng∗4
∗Department of Computer Science
National Chiao Tung University, Hsin-Chu, Taiwan
† Networks and Multimedia Institute
Institute for Information Industry, Taipei, Taiwan
‡ Department of Computer Science and Information Engineering
National Taiwan University, Taipei, Taiwan
Email:{1mspan, 4yctseng}@cs.nctu.edu.tw, 2d95030@csie.ntu.edu.tw, 3ulysses@nmi.iii.org.tw
Abstract—Wireless sensor networks (WSNs) have been exten-
sively researched recently. This paper makes two contributions
to this field. First, we promote a new concept of long-thin (LT)
topology for WSNs, where a network may have a number of
linear paths of nodes as backbones connecting to each other.
These backbones are to extend the network to the intended
coverage areas. At the first glance, a LT WSN only seems to
be a special case of numerous WSN topologies. However, we
observe, from real deployment experiments, that such a topology
is quite general in many applications and deployments. The
second contribution is that we show that the address assignment
and thus the tree routing scheme defined in the original ZigBee
specification may work poorly, if not fail, in a LT topology. We
thus propose simple, yet efficient, address assignment and routing
schemes for a LT WSN. Simulation results and prototyping
experiences are also reported.
Index Terms—address assignment, long-thin network, routing
protocol, wireless sensor network, ZigBee.
I. INTRODUCTION
The rapid progress of wireless communication and embed-
ded micro-sensing MEMS technologies has made wireless
sensor networks (WSN) possible. A WSN usually needs to
configure itself automatically and support ad hoc routing.
A lot of research works have been dedicated to WSNs,
including power management [15], routing and transportation
[3], coverage issue [7], and localization [1]. In the application
side, habitat monitoring is explored in [4], wildfire monitoring
is addressed in [6], and navigation is studied in [14].
Recently, several WSN platforms have been developed, such
as MICA [11] and Dust Network [5]. For interoperability
among different systems, standards such as ZigBee [17] have
been developed. In the ZigBee protocol stack, physical and
MAC layer protocols are adopted from the IEEE 802.15.4
standard [8]. ZigBee solves interoperability issues from the
physical layer to the application layer.
ZigBee supports three kinds of networks, namely star, tree,
and mesh networks. A ZigBee coordinator is responsible for
initializing, maintaining, and controlling the network. A star
network has a coordinator with devices directly connecting
to the coordinator. For tree and mesh networks, devices can
communicate with each other in a multihop fashion. The
network is formed by one ZigBee coordinator and multiple
ZigBee routers. A device can join a network as an end device
by associating with the coordinator or a router. In ZigBee, a
device is said to join a network successfully if it can obtain
a 16-bit network address from the coordinator or a router.
ZigBee specifies a distributed address assignment scheme,
which allows a parent device to locally compute addresses
for child devices. While the assignment scheme has low
complexity, it also prohibits the network from scaling up and
thus cannot be used in LT networks.
In this paper, we discuss the LT network, which is con-
sidered as a specific but common network topology in many
surveillance applications, such as gas leakage detection of
fuel pipes, carbon dioxide concentration monitoring in tunnels,
stage measurements in sewers, street lights monitoring in
highway systems, flood protection of rivers, and vibration
detection of bridges. In such a network, nodes may form
several long backbones and these backbones are to extend the
network to the intended coverage areas. A backbone is a linear
path which may contain tens or hundreds of ZigBee routers.
So the network can be scaled up with limited hardware cost.
In this work, we propose address assignment and routing
schemes for ZigBee-based LT WSNs. To assign addresses to
nodes, we design rules to divide nodes into clusters. Each node
belongs to one cluster and each cluster has a unique cluster
ID. All nodes in a cluster will have the same cluster ID, but
different node IDs. The structure of ZigBee network address
is divided into two parts: one is cluster ID and the other is
node ID. Following the same ZigBee design philosophy, the
proposed scheme is simple and has low complexity. Existing
works [2][12][13][16] have discussed address assignment for
WSNs, but they are not designed for ZigBee or LT WSNs. To
the best of our knowledge, this is the first work addressing this
issue. Moreover, similar to the ZigBee tree routing protocol,
the proposed routing protocol can also utilize nodes’ network
addresses to facilitate routing. In addition, routing can take
advantage of shortcuts for better efficiency, so our scheme
does not restrict nodes to relay packets only to their parent or
child nodes as ZigBee does.
The rest of this paper is organized as follows. Preliminaries
AB C
D E
F
B1 B2 B3
A1 A2 A3
(a) (b)
Node
A highway system
Coordinator
Coordinator
Network node
Cluster head node
Bridge node
Fig. 2. (a) A LT WSN. (b) Role assignment.
A
B
C
D
E
F
CCoor: 0
CCskip=15
CA: 1
CCskip=7
CB: 16
CCskip=7
CC: 17
CCskip=3
CD: 24
CCskip=3
CE: 25
CCskip=1
CF: 28
CCskip=1
CCm=2
CLm=4
Fig. 3. The logical network of Fig. 2(b).
3) A cluster head that is not the coordinator should have a
link to the bridge of its parent cluster.
4) Conversely, the bridge of a cluster which has child
clusters should have a link to the cluster head of each
child cluster.
5) A cluster does not cross other clusters and does not have
links with other clusters except those locations nearby
the cluster head and bridge areas.
After planing the placements, the network manager can con-
struct a logical network GL, in which each cluster is converted
into a single node and the parent-child relationships of clusters
are converted into edges. For example, Fig. 3 is the logical
network of Fig. 2(b). Then the network manager can determine
two parameters: the maximum number of children CCm of a
node in GL and the depth CLm of GL.
B. Address Assignment
Network addresses are assigned in two stages. With the
above planning, the network manager first mutually assigns
a cluster ID to each node. Then node IDs are assigned in a
distributed manner after network deployment.
The network manager assigns cluster IDs as follows. If
CCm = 1, there is no branch in the network and the cluster
ID assignment is a trivial case. If CCm ≥ 2, the cluster
IDs are assigned following the style of ZigBee in a recursive
manner. The nodes in the coordinator’s cluster have a cluster
ID of 0. For each node at depth d in GL, if its cluster ID
is C, then its i-th child cluster is assigned a cluster ID of
C + (i− 1)× CCskip(d) + 1, where
CCskip(d) =
1− CCmCLm−d
1− CCm . (2)
Fig. 3 shows an example of cluster ID assignment of Fig. 2(b).
Note that, in our scheme, for a cluster head in GL with depth
d, we also set each node in this cluster has a logical depth d.
After cluster ID assignment and node deployment, each
node periodically broadcasts HELLO packets including its
IEEE 64-bit MAC address, 16-bit network address (with its
cluster ID but node ID is initiated to NULL), and role. Each
node maintains a neighbor table to record its neighbors’
information. Then the node ID assignment is started by the
coordinator broadcasting its beacon with its node ID setting
to 0. When a node without a node ID receives a beacon,
it will send an Association Request to the beacon sender. If
there are multiple beacons, the node with the strongest signal
strength will be selected. When the beacon sender, say, v
with a network address (Cv, Nv), receives the association
request(s), it will do the following steps.
1) If v is not a bridge node, it sets a parameter N = Nv+1.
Then it sorts request senders according to the received
signal strength of their request packets in an descending
order into a list L. Then v sequentially examines each
node u ∈ L by the following rules:
• If Cu = Cv , v skips u and continues to examine
the next node in L.
• Otherwise, v assigns Nu = N and increments N
by 1. Then v replies an Association Response to u
with its address. If L is not empty, v loops back and
continues to examine the next node in L.
After finishing the above iteration, v further selects a
node u, from the accepted ones, using the following
rules: i) If there is a bridge node in the accepted ones, v
selects the bridge node. ii) Otherwise, v selects the last
node in L. Then v delegates u as the next beacon sender
by sending a command next beacon sender(u) to u.
Network address
64-bit MAC address
Node list
Node property
History log
Topology
Fig. 5. The graphical user interface of the monitor server.
1000
1500
2000
2500
3000
3500
1 5 9 13 17 21 25 29 33 37 41 45 49
Run time (hour)
A
ve
ra
ge
 re
po
rt 
la
te
nc
y 
(m
s)
ZigBee protocol
Our protocol
Fig. 6. Comparison on the measured report latency.
records the averaged hop counts from sources to destinations.
Fig. 7 shows the simulation results. We can observe that,
when transmission ranges become large, the average number
of hop count decreases. This result indicates that shortcuts can
effectively reduce the number of transmissions.
V. CONCLUSIONS
We have proposed address assignment and routing schemes
for ZigBee-based LT WSNs. The proposed address assignment
scheme divides nodes into several clusters and then assigns
each node a cluster ID and a node ID as its network address.
The routing protocol uses addresses of nodes to find routing
paths and allows nodes to utilize shortcuts. We verify both our
schemes by real implementation and simulations. In the future,
we plan to discuss address assignment and routing schemes
for other specific but common topologies such as hypercube
networks.
ACKNOWLEDGEMENTS
Y.-C. Tseng’s research is co-sponsored by Taiwan MoE
ATU Program, by NSC grants 93-2752-E-007-001-PAE, 96-
2623-7-009-002-ET, 95-2221-E-009-058-MY3, 95-2221-E-
˼˺˕˸˸ ˅ˊˁˉˆ ˇ˃ˁˊˉ ˈˇˁˆ˄ ˉˊˁˆ ˋ˃ˁ˅ ˌˇˁˉ˄
̋ʳ̅˴́˺˸ˍʳ˅ˈʳ̀ ˅ˊˁˇˊ ˇ˃ˁˈˋ ˈˇˁ˅ˋ ˉˉˁˌ˅ ˋ˅ˁ˃˅ ˌˈˁˇˌ
̋ʳ̅˴́˺˸ˍʳˇˈʳ̀ ˄ˇˁˈ ˅˄ˁ˃ˋ ˅ˊˁˊˌ ˆˇˁˇˉ ˇ˄ˁ˅˄ ˇˋˁ˅ˋ
̋ʳ̅˴́˺˸ˍʳˉˈʳ̀ ˄˃ˁˆ ˄ˇˁˇˊ ˄ˌˁˆ˄ ˅ˆˁˊ˄ ˅ˋˁ˃ˉ ˆ˅ˁˉˉ
̋ʳ̅˴́˺˸ˍʳˋˈʳ̀ ˊˁˋˋ ˄˄ˁˈˊ ˄ˇˁˉˈ ˄ˋˁˆˌ ˅˄ˁ˄ˇ ˅ˇˁˋˌ
0
20
40
60
80
100
120
20 30 40 50 60 70
Number of cluster members
A
ve
ra
ge
 h
op
 c
ou
nt
s
Tx range: 25 m
Tx range: 45 m
Tx range: 65 m
Tx range: 85 m
Fig. 7. Simulation on averaged number of hop counts when transmission
ranges of nodes and the number of cluster members are varied.
009-060-MY3, 95-2219-E-009-007, 95-2218-E-009-209, and
94-2219-E-007-009, by Realtek Semiconductor Corp., by
MOEA under grant number 94-EC-17-A-04-S1-044, by ITRI,
Taiwan, by Microsoft Corp., and by Intel Corp.
REFERENCES
[1] A. A. Ahmed, H. Shi, and Y. Shang. SHARP: A new approach to relative
localization in wireless sensor networks. In Proc. of Int’l Conference
on Distributed Computing Systems Workshops (ICDCSW), 2005.
[2] M. Ali and Z. A. Uzmi. An energy-efficient node address naming scheme
for wireless sensor networks. In Proc. of IEEE Int’l Networking and
Communications Conference (INCC), 2004.
[3] D. Braginsky and D. Estrin. Rumor routing algorithm for sensor
networks. In Proc. of ACM Int’l Workshop on Wireless Sensor Networks
and Applications (WSNA), 2002.
[4] Habitat monitoring on great duck island.
http://www.greatduckisland.net/technology.php.
[5] Dust network Inc. http://dust-inc.com/flash-index.shtml.
[6] Design and construction of a wildfire instrumentation system using
networked sensors. http://firebug.sourceforge.net/.
[7] C.-F. Huang, Y.-C. Tseng, and L.-C. Lo. The coverage problem in
three-dimensional wireless sensor networks. In Proc. of IEEE Global
Telecommunications Conference (Globecom), 2004.
[8] IEEE standard for information technology - telecommunications and
information exchange between systems - local and metropolitan area
networks specific requirements part 15.4: wireless medium access con-
trol (MAC) and physical layer (PHY) specifications for low-rate wireless
personal area networks (LR-WPANs), 2003.
[9] III ZigBee Advanced Platform (iZAP). http://zigbee.iii.org.tw/.
[10] Jennic JN5121. http://www.jennic.com/.
[11] Motes, smart dust sensors, wireless sensor networks.
http://www.xbow.com/.
[12] E. Ould-Ahmed-Vall, D. M. Blough, B. S. Heck, and G. F. Riley.
Distributed unique global ID assignment for sensor networks. In Proc.
of IEEE Mobile Adhoc and Sensor Systems Conference (MASS), 2005.
[13] C. Schurgers, G. Kulkarni, and M. B. Srivastava. Distributed on-demand
address assignment in wireless sensor networks. IEEE Trans. Parallel
Distributed System, 13(10):1056–1065, 2002.
[14] Y.-C. Tseng, M.-S. Pan, and Y.-Y. Tsai. Wireless sensor networks for
emergency navigation. IEEE Computer, 39(7):55–62, 2006.
[15] W. Ye, J. Heidemann, and D. Estrin. An energy-efficient MAC protocol
for wireless sensor networks. In Proc. of IEEE INFOCOM, 2002.
[16] H. Zhou, M. W. Mutka, and L. M. Ni. Reactive ID assignment for
sensor networks. In Proc. of IEEE Mobile Adhoc and Sensor Systems
Conference (MASS), 2005.
[17] ZigBee-2006 specification, ZigBee document 064112, 2006.
報告內容應包括下列各項： 
一、參加會議經過 
BSN2011 辦在美國中部的城市 Dallas, 加上開場的 reception及之後的 tutorial，一共舉行了
四天。主辦單位是 UTDallas，感覺還蠻用心的，有精美的海報範本、書包、及小冊子。在漫長的
飛行後，會議過程如它的議程所示，第一天是 pre-conference reception，第二天是正式開始，
有 opening，有 best paper session，poster session，和晚宴。Best paper 的得主是泰國的
年輕女教授，做 ASL的辨識。不過只做了 26個英文字母，並不完全能用來溝通。我要報告的是
第二天的 poster session，一開始有個 teaser，chair 要我們準備兩三張投影片，用五分鐘跟
大家介紹一下。因為我們的題目頗數學的，希望我的解說能幫助其它人了解這個題目。再來就是
在海報前跟其它人解說，陸續就有人來參觀了。會議第三天續繼聽 paper報告，還有展示他們的
系統，教大家怎麼用。 
 
二、與會心得 
這次參加 BSN發現 MIT的學生也會來這個 conference，還蠻酷的。聽 keynote speaker 講
tele-medicine，這個有點不切實際的方向，似乎還蠻有道理的。只是不知道台灣有沒有產業要
發展。 
 
三、考察參觀活動(無是項活動者省略) 
無 
 
四、建議 
希望能在國內帶動 BSN相關的產業，也提升我們專利佈署的廣度。 
 
五、攜回資料名稱及內容 
他們有發議程介紹，及會議的論文。另外也跟一些學者、業界交換了名片。 
 
六、其他 
 
 
 
Congratulations on your fine work!
Sincerely,
BSN 2011 TPC Co-chairs
Roozbeh Jafari, University of Texas at Dallas
John Lach, University of Virginia
======= Review 1 =======
> *** Expertise: Your expertise in the topic area of this paper
Passing knowledge (2)
> *** Recommendation: Overall recommendation to the chairs
Borderline (3)
> *** Relevance: Relevance of this work for BSN
Exemplary BSN topic (4)
> *** Originality and Impact: How novel and important is this work?
Novel direction and contribution (4)
> *** Technical Validity: How valid and technically correct are work, methods, and results?
Minor flaws that could be easily fixed (3)
> *** Validity in the Context of BSN Applications: Technical contributions validated in the
context of a real application (e.g. a clinical application)?
Some simulation results developed based on real applications (2)
> *** Presentation: Clarity and quality of presentation
Some organization or clarity difficulties (2)
> *** Summary: Briefly summarize the main contributions of this paper
The focus of the paper is to find the optimal deployment of sensors
that minimizes the estimation error of the gravity is still an
open problem. The paper formulates the deployment
optimization problem and propose some heuristics that
can be applied to complicated geometries.
> *** Strengths: What are the main strengths of this paper? [1-3 sentences]
This seems like an interesting and important problem to solve for the BSN community.
> *** Weaknesses: What are the main weaknesses of this paper? [1-3 sentences]
I fail to understand what the cube and sphere is about. Can't the method not be directly
2011/3/26 Gmail - [BSN11] Your paper 'On Optim…
https://mail.google.com/mail/?ui=2&ik… 2/5
======= Review 3 =======
> *** Expertise: Your expertise in the topic area of this paper
Knowledgeable (3)
> *** Recommendation: Overall recommendation to the chairs
Borderline (3)
> *** Relevance: Relevance of this work for BSN
Clearly related to BSN (3)
> *** Originality and Impact: How novel and important is this work?
Modification of existing work (2)
> *** Technical Validity: How valid and technically correct are work, methods, and results?
Minor flaws that could be easily fixed (3)
> *** Validity in the Context of BSN Applications: Technical contributions validated in the
context of a real application (e.g. a clinical application)?
Some real data was used (3)
> *** Presentation: Clarity and quality of presentation
Organized and readable with minor difficulties (3)
> *** Summary: Briefly summarize the main contributions of this paper
This paper presents a technique to "optimize" deployment of inertial sensors for human
posture tracking. The method is explained in the context of posture tracking, although it can
be applicable in many related situations.
> *** Strengths: What are the main strengths of this paper? [1-3 sentences]
The topic is relevant to the conference and is timely. In addition, the paper is fairly well-
written (although a rewrite will be very helpful).
> *** Weaknesses: What are the main weaknesses of this paper? [1-3 sentences]
The author(s) discuss the optimization problem and then resort to heuristics without
explaining why optimal algorithms are not developed. Is the general optimization problem
NP-hard? What is known about the tractability of the problem?
> *** Comments to the Authors: Detailed comments to the authors
======= Review 4 =======
> *** Expertise: Your expertise in the topic area of this paper
Knowledgeable (3)
2011/3/26 Gmail - [BSN11] Your paper 'On Optim…
https://mail.google.com/mail/?ui=2&ik… 4/5
On Optimization of Accelerometers Deployment for Human Posture Tracking
Chun-Hao Wu∗, Yuan-Tse Chang∗, and Yu-Chee Tseng∗†
∗Department of Computer Science, National Chiao Tung University, Hsin-Chu, 300, Taiwan
†Research Center for Information Technology Innovation, Academia Sinica, Taipei, 115, Taiwan
Email: {wchunhao, yuantse, yctseng}@cs.nctu.edu.tw
Abstract—We are interested in tracking human postures by
deploying accelerometers on a human body. One fundamental
issue in such scenarios is how to calculate the gravity, no matter
when human body parts are moving or not. Assuming multiple
accelerometers being deployed on a rigid part of a human body,
a recent work proposes a data fusion method to estimate the
gravity on that rigid part. However, how to find the optimal
deployment of sensors that minimizes the estimation error of
the gravity is still an open problem. In this paper, we formulate
the deployment optimization problem. Since the problem is
hard, we conduct experiments to observe what the optimal
deployments should be.
I. INTRODUCTION
A body-area inertial sensor network (BISN) consists of
multiple accelerometers, magnetometers, and gyroscopes
connected by wired/wireless links. An important usage in
a BISN is to track human motions through these inertial
sensors. Its applications include cyber-physical video game
[1], robotic balancing [2], localization [3], sports training
[4], medical care [5], and computer graphics [6].
A lot of works have studied how to track human postures.
Basically, human motions can be tracked by estimating
rotations of joints, via accelerometers, electric compasses,
and/or gyroscopes [7]. Accelerometers sense the directions
of the gravity, compasses sense the directions of the North,
and gyroscopes estimate angular velocities. However, since a
human body may continuously move, this is not an easy task.
When the structures of articulated objects are unavailable,
orientation tracking based on Kalman filtering data fusion
techniques is studied in [3], [7], [8]. With the knowledge
of human body structures, [9], [10] consider incorrect esti-
mations of rotations that are out of the reachable regions of
joints in a wearable micro-sensor network. Reference [11]
further uses body model constraints to improve accuracy in
motion capture. For velocity estimation in areas with mag-
netic disturbances, [12] uses four magnetometers forming an
orthogonal trihedron to perceive the magnetic fields.
In this paper, we consider a fundamental issue in a BISN,
the gravity measurement problem. Regarding a human body
as multiple rigid parts connected by joints, we study the
deployment of accelerometers on one rigid part and the
estimation of the gravity on that rigid part. The acceleration
perceived by an accelerometer is the gravity (which is
the same for all accelerometers on the rigid part) plus its
own acceleration seen by an outside observer. Since the
orientation of the rigid part is unknown, how to measure the
gravity is a challenging problem. Given a sensor deployment,
[2] shows a data fusion scheme to extract the gravity. Based
on [2], we formulate the deployment optimization problem
as one of finding the best locations of accelerometers that
minimize the estimation error of the gravity. Since the
problem is hard, we conduct experiments to observe what
the optimal deployments should be.
The rest of paper is organized as follows. Section II
formulates the gravity measurement problem. Experimental
results are given in Section III, and conclusions are drawn
in Section IV.
II. GRAVITY MEASUREMENT PROBLEM
We are interested in tracking human postures by deploying
accelerometers on a human body. One fundamental issue in
such scenarios is how to calculate the gravity, no matter
when the body parts are moving or not. Fig. 1(a) shows
an example. Clearly, the gravity as being measured by each
sensor is relative to its placement and angle. We regard a
human body as multiple movable parts, each being a rigid
body connected to another part by a rotational joint [13],
[14]. Accelerometers are placed on a human body for posture
tracking. The concept is shown in Fig. 1(b).
To formulate the gravity measurement problem, we con-
sider one rigid part and the sensors on it, as illustrated
in Fig. 2. We assume that there is an Earth-fixed coordi-
nate system, representing views of a fixed observer, with
θ = (0, 0, 0) as its origin and xθ , yθ , and zθ as its axes. The
gravity g with respect to this θ-coordinate is thus −1 Guass
along the zθ axis. Let the joint of the rigid part be at location
r(t) at time t. For the rigid part, we assume a part-fixed
coordinate with respect to the joint with r(t) as its origin
and xr, yr, and zr as its axes. Therefore, for any point on the
body, its coordinate with respect to the r-coordinate remains
unchanged no matter how the body moves. For any point at
location p with respect to the r-coordinate, its location with
respect to the θ-coordinate changes over time t and can be
written as p′(t) = r(t) + R(t)p, where R(t) is the 3 × 3
rotation matrix translating from (xr, yr, zr) to (xθ, yθ, zθ)
[13].
0 2 4 6 8 10 12
0
2
4
6
8
σ
e2 (P
)
Sphere radius
 
 
Deployment 1 Deployment 2
Figure 3. The radius of a sphere effects error variances.
III. EXPERIMENTAL RESULTS
Since the problem is hard, we conduct experiments to
observe what the optimal deployments should be.
A. Effects of Object Sizes
It is natural to ask how the size of a rigid part effects
the estimation errors. To observe it, we vary the radius of a
sphere from 1 to 10 and measure the error variance of some
fixed deployment. That is, if the location of sensor si is pi on
a unit sphere, it becomes 10pi on a sphere whose radius is
10. The results are shown in Fig. 3 for two deployments. We
can see that the error variances decrease as the radius grows.
The slope is quite steep at the beginning, implying that small
objects are more vulnerable to sensor deployments.
B. Gravity Estimation Results
We deploy eight accelerometers at the vertices of the box
in Fig. 4 and want to measure the gravity when the box is
moving. As shown in Fig. 4(a), a joint with one degree of
freedom is at the left face of the box. We rotate the box
quickly from Fig. 4(a) to Fig. 4(b) for many times, and
record the sensing data for gravity measurement. The box
and sensor positions in Fig. 4 are modeled as in Fig. 5.
Because the length of the true gravity ‖RT (t)g‖ is always
1000 mg (milliguass) no matter how we rotate the box,
we compare different deployments by the lengths of their
measured gravities. Fig. 6 compares the results of one sensor
and four sensors. The estimated gravity of s7 is its raw
sensing data, and the estimated gravity of the four sensors is
the first column of its Qˆ. Clearly, the measurement made by
s7 is significantly disturbed by motion, while the disturbance
is reduced by using four sensors.
Let gˆ(t) be the estimated gravity of a deployment at
time t. We summarize its performance (as in Fig. 6) by
the standard deviation of its errors ‖gˆ(t)‖ − ‖RT (t)g‖
(also called its standard error). The errors of each sensor’s
measurement is compared in Fig. 7. The sensors s1, s2,
s6, and s8 have lower errors, whereas s3, s4, s5, and s7
have higher errors. It is natural to ask whether the four best
(a)
(b)
Figure 4. Experiment setup.
positions result in an optimal measurement. Therefore, we
compare the following five deployments:
1) Using one sensor at the position p6.
2) Using four sensors at the positions p3, p4, p5, and p7.
3) Using four sensors at the positions p1, p2, p6, and p8.
4) Using four sensors at the positions p1, p3, p6, and p8.
5) Using all eight sensors.
The results are shown in Fig. 8. Using the four worst
positions in deployment 2 is even worse than using only
one sensor at p6. Deploying at the four best positions, as in
deployment 3, significantly reduces the errors. However, a
better deployment can be found at deployment 4, which sur-
prisingly combines a seemly erroneous position p3. Finally,
using all sensors is even more accurate.
Proc. of Int’l Workshop on Wearable and Implantable Body
Sensor Networks (BSN), 2010.
[10] Z. Zhang, “Ubiquitous human motion capture using wearable
micro-sensors,” in Proc. of Int’l Conf. on Pervasive Comput.
and Commun. (PerCom), 2009.
[11] A. D. Young, “Use of body model constraints to improve ac-
curacy of inertial motion capture,” in Proc. of Int’l Workshop
on Wearable and Implantable Body Sensor Networks (BSN),
2010.
[12] D. Vissie´re, A. Martin, , and N. Petit, “Using distributed
magnetometers to increase IMU-based velocity estimation in
perturbed areas,” in Proc. of IEEE Int’l Conf. on Decision
and Control, 2007.
[13] J. Carig, Introduction to Robotics. Prentice Hall, New Jersey,
2005.
[14] A. D. Young, “Comparison of orientation filter algorithms
for realtime wireless inertial posture tracking,” in Proc. of
Int’l Workshop on Wearable and Implantable Body Sensor
Networks (BSN), 2009.
[15] D. R. Basu and A. Lazaridi, “Stochastic optimal control by
pseudo-inverse,” The Review of Economics and Statistics,
vol. 65, no. 2, pp. 347–350, 1983.
	  
Conference Program and Information 
 
 
 
International Conference on Body Sensor Networks 	  
Conference	  Sponsors	  	  
	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	   	  	  	  	  	  	  	  	  	  	  	  	  	  	   	  	  	  	  	  
Event	  Sponsor	  
	  
	  	  	  
Award	  Sponsor	  	   	  	  	  	  	  
	  	  
 
 
 
Monday, May 23, 2011 
 
Welcome Messages – 8:30-9:00 AM 
 
Conference Opening Remarks 
Dinesh Bhatia, General Chair 
 
Welcome Address 
Mark W. Spong, Dean, Erik Jonsson School of Engineering and Computer Science 
 
Technical Program Chair Remarks 
Roozbeh Jafari and John Lach   
 
Best Paper Session – 9:00 – 10:15 AM 
Session Chair: John Lach, University of Virginia 
 
GeM-REM: Generative Model-driven Resource efficient ECG Monitoring in Body Sensor Networks 
Sidharth Nabar, Ayan Banerjee, Sandeep Gupta, Radha Poovendran 
 
An Assistive Body Sensor Network Glove for Speech- and Hearing- Impaired Disabilities 
Satjakarn Vutinuntakasame, V-ris Jaijongrak, Surapa Thiemjarus 
 
Human Back Movement Analysis Using BSN 
Zhi-Qiang Zhang, Julien Pansiot, Benny Lo, Guang-Zhong Yang 	  
Wild and Crazy Ideas (WACI) Paper Session – 10:30 – 11:45 AM 
Session Chair: Sourabh Ravindran, Texas Instruments 
 
Power Aware Wireless Data Collection for BSN Data Repositories 
Vitali Loseu, Roozbeh Jafari 
 
Low Power Tiered Wake-up Module for Lightweight Embedded Systems using Cross Correlation 
Roozbeh Jafari	  
 
Signal Regeneration and Function Rebuilding using Microelectronic Neural Bridge between two Far-
Separated Nervous Systems 
Zhi-Gong Wang, Xiao-Ying L, Wen-Yuan Li, Xiaoyan Shen, Zonghao Huang, Xintai Zhao, Liangjie Du, Zheng-Lin 
Jiang, Xingya Gao, Guohua Wang, Pan Haixian, Cunliang Zhu, Xin Gong, Lei Qiu 
 
Panel: BSN in Harsh Environments – 1:15 – 2:15 PM 
Guang-Zhong Yan, Imperial College 
Srinath Hosur, Texas Instruments 
Ravi Prakash, UT Dallas 
 
Poster Madness 1 – 2:25 – 4:25 PM 
Session Chair: Hassan Ghasemzadeh, West Wireless Institute 
 
Radio Channel Characterisation and OFDM-based UltraWideband System Modeling for Body-
CentricWireless Networks 
Qammer H. Abbasi, Mohammad Monirrujjman Khan, Akram Alomainy, Yang Hao 
 
Accelerometer-based respiratory measurement during speech 
Andrew Bates, Martin J. Ling, Christian Geng, Alice Turk, D. K. Arvind 
	  
	  	  
 
 
 
Tuesday, May 24, 2011 
 
Invited Talk – 8:15-9:15 AM 
Barry Daltof, US Army Medical Research and Materiel Command      
Paper Session: Applications – 9:30 – 10:20 AM 
Session Chair: Mike Chi, University of California San Diego 
 
Accurate Activity Recognition using a Mobile Phone regardless of Device Orientation and Location 
Apiwat Henpraserttae, Surapa Thiemjarus, Sanparith Marukatat 
 
A Multi-Technology approach to identifying the reasons for Lateral Drift in Professional and 
Recreational Darts 
Michael Walsh, Magdalena Tyndyk, John Barton, Brendan O'Flynn, Cian O'Mathuna 
 
Paper Session: Electrical and Acoustic Signal Monitoring – 10:30 – 11:20 AM 
Session Chair: Prof. Zhi-Gong Wang, Southeast University, Nanjing, China 
 
Compressive Sensing of Neural Action Potentials Using a Learned Union of Supports 
Zainul Charbiwala 
 
Methods to Characterize Sensors for Capturing Body Sounds 
Bernard Grundlehner, Dilpreet Buxi 
 
Panel: Research, Funding, and Opportunities in BSN – 11:30 AM – 12:30 PM 
Shekar Rao, Center for Innovation/TechComm 
Clara Asmail, National Institute of Standards and Technology 
James McClain, NIH/National Cancer Institute 
Jim Jaffe, National Association of Seed and Venture Funds	  
Barry Daltof, US Army Medical Research and Materiel Command  
 
Paper Session: Clinical Applications – 1:30 – 2:45 PM 
Session Chair: Guang-Zhong Yang, Imperial College, London, UK 
 
 
Robust Hierarchical System for Classification of Complex Human Mobility Characteristics in the 
Presence of Neurological Disorders 
Xiaoyu Xu, Maxim A. Batalin, Bruce Dobkin, William J. Kaiser 
 
Extracting Spatio-Temporal Information from Inertial Body Sensor Networks for Gait Speed 
Estimation 
Shanshan Chen, Christopher L. Cunningham, John Lach, Bradford C. Bennet 
 
Poster Madness 2 – 3:15 – 5:15 PM 
Session Chair: Krishna Venkatasubramanian, University of Pennsylvania 
 
Estimation of Center of Mass Displacement based on Gait Analysis 
Xiaoli Meng, Shuyan Sun, Lianying Ji, Jiankang Wu, Wai-Choong Wong 
 
A Non-invasive Wearable Neck-cuff System for Real-time Sleep Monitoring 
Mahsan Rofouei 
 
 
	  	  
 
 
 
BSN 2011 Conference Tutorials 
 
BSN Platform Tutorial 2011 
Guang-Zhong Yang and Benny Lo 
Imperial College London 
 
Wednesday, May 25, 2011. 
8AM-5PM 
 
The aim of the daylong tutorial is to provide an introduction of the BSN concept, the associated 
technologies and the theories behind the concept to researchers and academics that are interested in 
the BSN related research. In addition, the tutorial will include a number of hands-on sessions to give 
the participants an opportunity to implement and gain some first hand experience in building BSN 
applications using the BSN development kit. Each registered attendee will receive a BSN development 
kit for free. Cost for this daylong tutorial is $400. 
 
 
Ensuring Safety, Sustainability and Security in Body Area Networks 
S. K. S. Gupta and T. Mukherjee, Arizona State University 
K. Venkatasubramanian, University of Pennsylvania 
 
Wednesday, May 25, 2011. 
8AM-12 Noon 
 
A major concern with using BANs however is the potential hazard to the environment (human body) 
from interruptions in and side-effects of its operations. We view the challenge of addressing the 
potential hazards as the satisfaction of three properties: Safety (i.e. ensuring side-effects of operation 
are within desired limits), Sustainability (i.e. ensuring uninterrupted operations) and Security (i.e. 
ensuring authorized access to private health data). Solutions for BAN satisfying the S3 criteria should 
cover its five principal operations sensing, communication, storage, processing, and actuation; and 
take into account the interactions among the sensors and the environment. In this regard, from a 
safety and sustainability perspective, novel formal methods will be presented that model the behavior 
of the BANs and analyze them for requirement verification. Further, new analysis methodologies are 
presented to verify the safety and sustainability requirements in a computationally feasible manner, 
especially for large-scale BANs before they are deployed. From a security stand-point, given the deeply 
embedded nature of the BANs, a new paradigm for security is covered that is both usable and secure, 
and makes use of the complexity of the BAN environment (human body) to meet its security 
requirements. 
 
Energy Scavenging and Battery Power for Long Term Medical Monitoring 
Elizabeth K. Reilly  
Exponent, Menlo Park, CA 
 
Wednesday, May 25, 2011. 
8AM-12 Noon 
 
The tutorial will begin by identifying the different types of ambient energy available for scavenging in 
the context of Body Sensor Networks. The different types of conversion mechanisms will be discussed 
and examined in some detail. The physics behind the conversion mechanisms will be explored so that 
the audience may achieve a greater understanding of how best to design and implement scavenging 
systems. The tutorial will cover current examples of the different types of scavenging systems and 
discuss the pros and cons of the state of the art technologies. The tutorial will continue with energy 
storage systems that are a part of complete energy scavenging system designs. The second part of the 
tutorial will begin with an overview of current battery design technology for medical devices. Special 
attention will be paid to the differences in construction for implantable devices versus those used 
externally. We will also discuss battery lifetime and failure issues. 
	  	  
 
Directions to the Venue 
 
 
 
 
From Central Expressway (US 75) 
Take the Campbell Road exit and go west to University Parkway (between Floyd Road and Waterview 
Parkway). Turn north on University Parkway. 
 
From LBJ Freeway (I-635) 
Take the Coit Road exit and go north to Campbell Road. Turn east on Campbell Road to University 
Parkway (between Waterview Parkway and Floyd Road). Turn north on University Parkway. 
 
From DFW Airport 
Drive toward the north airport exit. Once you are through the toll booths, take the I-635 east exit. 
Merge on to I-635 east. Take the Coit Road exit and go north to Campbell Road. Turn east on Campbell 
Road to University Parkway (between Floyd Road and Waterview Parkway). Turn north on University 
Parkway. 
 
From Love Field Airport 
Start going towards the Airport exit at Cedar Springs Road. Turn east (left) on Mockingbird Lane 
towards Mockingbird/Lemmon South. Continue east on Mockingbird Lane. Turn north on Inwood Road. 
Turn east at Northwest Highway/Loop 12. Take Central Expressway (US 75) north. Take the Campbell 
Road Exit and go west to University Parkway (between Floyd Road and Waterview Parkway). North on 
University Parkway. 
From Love Field via Dallas North Tollway and George Bush Turnpike 
Head southeast on Cedar Springs Road. Turn left at Mockingbird Lane. Turn left to merge onto Dallas 
North Tollway. Take the exit onto President George Bush Turnpike East. Take the exit and turn right at 
Waterview Parkway. Turn left at Campbell Road. Turn left at University Parkway. 
 
From George Bush Turnpike (SH 190) 
Turn south on Independence Parkway to Campbell Road. Turn east on Campbell Road to University 
Parkway (between Floyd Road and Waterview Parkway). North on University Parkway. 
                          The University of Texas at Dallas 
                             Department of Parking & Transportation 
 
 
 
 
 
 
 
                       PARKING	  PERMIT	  
	  
	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  VALID	  	  DATE(S)	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  PLEASE	  PARK	  IN	  ASSIGNED	  LOT	  AND	  DESIGNATED	  PARKING	  SPACE	  COLOR	  	  
	   	   	   	   	   	   	   	  
	   	   	   	   	   	   	   	  	  	  	  	  	   	  
	  	  	  	  DPT	  E-­‐UID	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  T2Flex	   	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  DPT	  AUTHORIZED	  SIGNATURE	  	  
	  
	  	  	  	  	  	  	  	  	  	  	  
	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	   	   	   FOLD	  HERE	  	  
	  
Fold	  and	  place	  permit	  on	  
dashboard	  near	  steering	  wheel.	  
	  
	  	  	  	  	  	  	  	  	  All	  information	  above	  fold	  must	  remain	  visible.	  
	  
This	  permit	  is	  valid	  only	  for	  dates,	  
parking	  lots,	  and	  spaces	  designated	  above.	  
	  
	  	  	  	  	  	  For	  DIRECTIONS	  or	  ASSISTANCE	  
	  	  	  	  	  	  	  	  	  	  Please	  call	  (972)	  883-­‐2344	  	  
	  
UT-­‐Dallas	  Department	  of	  Parking	  &	  Transportation	  	  
 
May	  22,	  2011	   Lot	  G	  –	  PURPLE	  Spaces	  Only	  
	  
2773 
	  
	  
	  
Department	  of	  Electrical	  Engineering	  
 
                          The University of Texas at Dallas 
                             Department of Parking & Transportation 
 
 
 
 
 
 
 
                       PARKING	  PERMIT	  
	  
	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  VALID	  	  DATE(S)	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  PLEASE	  PARK	  IN	  ASSIGNED	  LOT	  AND	  DESIGNATED	  PARKING	  SPACE	  COLOR	  	  
	   	   	   	   	   	   	   	  
	   	   	   	   	   	   	   	  	  	  	  	  	   	  
	  	  	  	  DPT	  E-­‐UID	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  T2Flex	   	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  DPT	  AUTHORIZED	  SIGNATURE	  	  
	  
	  	  	  	  	  	  	  	  	  	  	  
	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	   	   	   FOLD	  HERE	  	  
	  
Fold	  and	  place	  permit	  on	  
dashboard	  near	  steering	  wheel.	  
	  
	  	  	  	  	  	  	  	  	  All	  information	  above	  fold	  must	  remain	  visible.	  
	  
This	  permit	  is	  valid	  only	  for	  dates,	  
parking	  lots,	  and	  spaces	  designated	  above.	  
	  
	  	  	  	  	  	  For	  DIRECTIONS	  or	  ASSISTANCE	  
	  	  	  	  	  	  	  	  	  	  Please	  call	  (972)	  883-­‐2344	  	  
	  
UT-­‐Dallas	  Department	  of	  Parking	  &	  Transportation	  	  
May	  25,	  2011	   Lot	  I	  –	  WHITE	  or	  GREEN	  Spaces	  
Only	  
	  
2757 
	  
	  
	  
Department	  of	  Electrical	  Engineering	  
 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/29
國科會補助計畫
計畫名稱: ZigBee無線樹狀感測網路之初始化及通訊問題研究
計畫主持人: 曾煜棋
計畫編號: 97-2221-E-009-142-MY3 學門領域: 計算機網路與網際網路
無研發成果推廣資料
博士生 5 0 100%  
博士後研究員 0 0 100%  
（外國籍） 
專任助理 0 0 100%  
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
