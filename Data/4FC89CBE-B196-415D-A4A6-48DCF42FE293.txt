 2
張樹 (Min-Span Tree) 。因此， Min-Span, 
Min-Cut/ Max Flow 等題目之數值方法最佳
化解答皆可完成。 
  上述結果在經由 matrix transposition 處
理，則得到基本連集(fundamental tie-set)及最
短路徑之可行解。 
  在本計劃中我們研究提出三個演繹法：最
小 擴 展 樹 演 繹 法 （ Minimum-Span 
Algorithm），及最小切割演繹法（Minimum- 
Cut Algorithm ） 及 最 短 路 徑 演 繹 法
(Shortest-Path Algorithm)。  
  本計劃所提倡出來的方法與演繹法將分別
以數個數值型例題解釋之，其所表現之優越
處亦將ㄧ併說明之。 
1. Introduction 
  Optimization problems in network models 
[1] analysis includes: minimum-span problems, 
minimum-cut problems, maximum-flow 
problems, and shortest-path problems, etc., and 
are briefly described as follows. 
 
A. Minimum-Span Problem (MSP) 
 
The objective of MSP is to identify a tree 
so that the sum of costs of the associated tree 
branches is a minimum. The optimization 
algorithms for the solution known so far may 
be classified into three categories: cut-set 
optimization, routing-path optimization, and 
the numerical method by row-reduced 
echelon-form flow table. Kruskal [2] found the 
minimum-span tree, based on the concept of 
routing-path optimization, in his Kruskal’s 
algorithm. Later on, Prim’s algorithm [3] was 
devised based on the concept of cut-set 
optimization. These two concepts were 
modified in Sollin’s algorithm [4] with 
proposed mini-mum-cost branch so as to find a 
minimum-span tree. These two algorithms 
have been developed based on heuristic and 
searching concepts.  
  In recently, the numerical method 
identifying mini-mum-span for a graph has 
been proposed by Juang [15] instead. The 
network model that represents a graph is 
created by a flow-table [6], in which columns 
of an incidence matrix [5] for this network are 
arranged based on the branch-cost. Then the 
fundamental cut-set [5], [7], [9] can be 
identified through row-reduced echelon-form 
(RREF) processing [6], [7], [8] of this matrix. 
Accordingly, a tree with possibly minimal cost 
(MST) can be found. 
B. Minimum-Cut Problem (MCP) 
The objective of MCP is to find a cut that 
separates the source node from the sink, 
wherein the equipped cut value is a minimum. 
[5] 
C. Maximum-Flow Problem (MFP) 
The objective of MFP is to develop a 
shipping schedule that maximizes the amount 
of material sent from the source (the origin 
node) to the sink (the destination node). MFP 
can be solved by linear programming [1] or by 
the Ford-Fulkerson method [10]. An artificial 
arc (branch) is proposed from sink to source, 
and the linear programming method for MFP 
becomes to maximize the flow of this artificial 
arc subjecting to some linear constraints. 
  The maximum flow of a transportation 
network can also be obtained from the 
minimum cut of the network; this is known as 
min-cut max-flow [5, 9] property. Therefore, 
MFP can be solved via MCP. 
D. Shortest-Path Problem (SPP) 
The objective of SPP is to determine a 
path joining the source and the sink such that 
the sum of the costs associated with those 
branches in this proposed path is a minimum. 
As surveying from the existing literature, the 
following algorithms have been used: 
Dijkstra’s algorithm [11], Dial’s algorithm [12], 
and Label Correcting algorithm [13], [14]. 
  Labeling process for the proposed node is 
used in the Dijkstra’s algorithm, and shortest 
path is thus evaluated. A temporally label is 
used for the successive node before a possible 
shortest path is achieved. Thus labeling and 
 4
graph into two parts. It follows that for every 
tree-branch there is a corresponding cut-set. 
And, for a given tree, the set of N-1 cut-sets 
corresponding to the N-1 tree-branches forms 
the fundamental system of cut-sets. 
   
C. Flow 
A flow in a transport network, φ, is an 
assignment of a nonnegative number φ(i,j) to 
each branch(i,j) such that the following 
conditions are satisfied: 
1. The amount of material to be shipped 
through a route cannot exceed the capacity 
of the route. 
   ( ) ( )j,ij,i α≤φ  for each branch(i,j).     
2. Except at the source and at the sink, the 
amount of material flowing into a node must 
equal the amount of material flowing out of 
that node. 
   ( ) ( )∑∑ φ=φ
ki
j,ki,j
 all all
    
3. Therefore, the total outgoing flow at the 
source is equal to the total incoming flow at 
the sink: 
   ( ) ( )∑∑ φ=φ
ki
z,ki,a
 all all
    
D. Cut 
A cut in a transport network is a cut-set of 
the undirected graph that separates the source 
from the sink. The notation ( )P,P  is used to 
denote a cut that divides the nodes into two 
subsets P and P ; the subset P contains the 
source a, and P  contains the sink z. 
The capacity of a cut, the cut value, is 
denoted by ( )P,Pα , and is defined to be the 
sum of capacities of those branches incident 
from the nodes in P to the nodes in P , hence  
  ( ) ( )∑
∈∈
α=α
Pj;Pi
j,iP,P
 
       (2) 
  The maximum flow of a network is related 
to its minimum cut by the following theorem. 
Theorem 1 [5]  (The Max-Flow Min-Cut Theorem)  
In a transport network, the maximum value 
that a flow can achieve is equal to the minimal 
value of the capacities of all the cuts in the 
network. ▓   
3. Minimum- Span Algorithm  
In this section the numerical solution to the 
minimum-span problem (MSP) is discussed. 
We first illustrate the proposed procedures for 
solving this problem by a numerical example, 
and then the pertinent MSP algorithm will be 
summarized.  
A. An illustrative example 
Consider the graph shown in Fig.1, let each 
arc (branch) be equipped with a cost. A flow 
table based on the ascending orders of the cost 
of each arc is represented by Table 1. 
After Gauss-Jordan elimination, the row 
reduced echelon-form (RREF [8]) flow table is 
as follows (Table 2). Note there are only 4-1=3 
rows in the matrix. Immediately one finds 
three independent cut sets: f1, f2, and f3 from 
the RREF flow table. 
Table 2.  RREF Flow table. 
cost 2 5 6 6 8 10 
arc cz ab bc cb ac bz 
cut f1 1 0 0 0 0 1 
cut f2 0 1 0 0 1 0 
cut f3 0 0 1 -1 1 1 
 
The above table falls into the reduced-Jordan 
form [ ]FI , where I is an identify matrix of 
order N-1. One immediately figures out that 
the tree-branch is {cz, ab, bc}, see the bold 
arcs depicted in Fig. 2. Also, this is a possible 
minimum-span tree (MST) because the sum of 
 6
A. An illustrative example 
Consider the graph shown in Fig.1, let source 
node be a, sink node z, and each arc (branch) 
be equipped with a number as the capacity. For 
the proposed MCP solution, we first append a 
hypothetical link, za, from the sink to the 
source node, initially set its capacity  to be 
999  ( ∞  in mathematical sense). The 
network now has B+1 branches instead of B. 
A flow table for the network, where the 
columns of the incidence matrix have been 
arranged based on the descending orders of the 
capacity of each arc, is represented by Table 3. 
Table 3.  Flow table Q (with hypothetical link added) 
α 999 10 8 6 6 5 2 
arc za bz ac bc cb ab cz
a -1 0 1 0 0 1 0 
b 0 1 0 1 -1 -1 0 
c 0 0 -1 -1 1 0 1 
z 1 -1 0 0 0 0 -1
 
Secondly, Gauss-Jordan elimination, and 
then reduced-Jordan elimination is executed. 
The capacity of the first column is reset to zero, 
and the first row in the matrix is sign inverted, 
this results in Table 4. Note there are only 
4-1=3 rows in the matrix. Immediately one 
finds 3 independent cuts: f1, f2, and f3 from 
the reduced-Jordan-form flow table. 
Table 4.  RREF flow table. 
α 0 10 8 6 6 5 2 
arc za bz ac bc cb ab cz 
f1 -1 0 0 -1 1 1 1 
f2 0 1 0 1 -1 -1 0 
f3 0 0 1 1 -1 0 -1 
 
By the definition claimed in section II, a cut 
C = ( )P,P  is used to divide the nodes into two 
subsets P and P ; the subset P contains the 
source a, and the sink z must be in P . The 
cut-sets f2 and f3 can not be qualified as 
feasible cuts, however f1 does. This can be 
identified from the za-column, with pivot -1, in 
which the f1-cut separates the source node, a, 
from the sink, z. 
To derive all the possibly feasible cuts for the 
network, linear combination of f1-cut with 
others are taken, and the result is shown in 
Table 5. These cuts along with their related 
cut-set of nodes and the cut-value ( )P,Pα  are 
all summarized in Table 6, also depicted in Fig. 
3. From Table 6, one figures out that the value 
of minimum-cut for the network is 12, at the 
candidate cut C2= ({a,b,c}, {z}). 
Table 5.  Feasible cuts and cut-value 
α 0 10 8 6 6 5 2 
arc za bz ac bc cb ab cz
cut- 
value 
C1 -1 0 0 -1 1 1 1 13 
C2 -1 1 0 0 0 0 1 12 
C3 -1 0 1 0 0 1 0 13 
C4 -1 1 1 1 -1 0 0 24 
 
Table 6.  Candidates of feasible cut sets, and cut-value. 
cut cut set  ( )ii P,P=Ci cut-value remarks 
C1 ({a,c}, {b,z}) 5+6+2=13 - 
C2 ({a,b,c}, {z}) 10+2=12 minimum-cut
C3 ({a}, {b,c,z}) 5+8=13  
C4 ({a,b}, {c,z}) 8+10+6=24 - 
 
 
 
 
 
 
 
 
 
 
Remark 1   It follows, by theorem 1, for the 
Fig.3  The feasible cut sets (dash lines). 
c
a b z
5
10 
6
6 8
2 
C2C3
C4
0 
C1 
 8
A. An illustrative example 
Consider the network shown in Fig.1.  For 
the proposed SPP, we first append a 
hypothetical link, za, from the sink to the 
source node, with capacity set to be 0, as 
depicted by the dotted line in Fig. 4. The 
network now has 7 branches instead of 6, 
accordingly we reiterate B = 7. 
The MSP algorithm (Algorithm 1) proposed 
in section III can be utilized to find the MST. 
The flow table Q for the network is described 
in Table 7, and matrix S representing the 
fundamental cut-sets is in Table 8, also 
depicted in Fig. 5, where tree-branches are in 
bold arcs and dash lines for the feasible 
cut-sets. The tree-branch is {za,  ab,  cz }. 
 
 
 
 
 
 
 
 
 
Table 7.  Flow table Q.  
cost 0 2 5 6 6 8 10 
arc za cz ab bc cb ac bz 
a -1 0 1 0 0 1 0 
b 0 0 -1 1 -1 0 1 
c 0 1 0 -1 1 -1 0 
z 1 -1 0 0 0 0 -1 
Table 8. The matrix S = [ I : F ] 
cost 0 2 5 6 6 8 10 
arc za cz ab bc cb ac bz 
Cut f1 1 0 0 -1 1 -1 -1 
Cut f2 0 1 0 -1 1 -1 0 
Cut f3 0 0 1 -1 1 0 -1 
 
 
 
 
 
 
 
 
 
 
 
 
 
Thirdly, the matrix S = [ I : F ] is rearranged into 
the following matrix T: 
 T = [ ]LT IF−  (4) 
Where IL is an identity matrix of order 
(B-N+1), and there are (B-N+1) = 4 
independent tie-sets, L1 to L4, each embedded 
with the path za, see Table 9. Note that the arcs 
(branches) of a tie-set form a closed-path 
circuit. It happens that a fundamental tie-set 
can be formed by adding a link to the tree of 
the graph. And, for a given network model, 
there are B-N+1 independent tie-sets 
corresponding to (B-N+1) links. 
In Table 9, depicted by the matrix T, the 
element under the L2-row of the first column 
(za-column) is a -1, and this indicates that L2 is 
not a feasible tie-set to be considered. 
Table 9. The matrix T.  
cost 0 2 5 6 6 8 10
arc za cz ab bc cb ac bz
Total 
cost 
L1 1 1 1 1 0 0 0 13 
L2 -1 -1 -1 0 1 0 0 NA 
L3 1 1 0 0 0 1 0 10 
L4 1 0 1 0 0 0 1 15 
 
All the feasible tie-sets and their path-costs 
are summarized in Table 10, from which one 
identifies that the tie-set L3, {ac, cz, za}, with 
Fig.4  The network with hypothetical link embedded. 
a b
c
z5 10 
6 6 
8 2 
0 
Fig.5  The fundamental cut-sets of the network. 
a b
c
z5 10 
6
6 8
2 
0
f3 
f1
f2 
 10
2. Juang, J. Y., S. S. Hu, and P. H. Yang, 2005, “On the 
Hypothetical Loop-Decoupling Design for a 
Nonlinear System”, Proceedings of IEEE ICSS2005, 
International Conference of Systems & Signals , pp. 
655-660, I-Shou University, Kaohsiung, Taiwan, 
April 2005. 
3. Hu, S. S., P. H. Yang, and Juang, J. Y., 2005, 
“ Nonlinear Ship Maneuvering Control by Feedback 
and H ∞  I/O Linearization with µ-Synthesis”, 
Proceedings of IEEE ICSS2005, International 
Conference of Systems & Signals, pp. 945-950, 
I-Shou University, Kaohsiung, Taiwan, April 2005.  
4. Juang, J. Y., 2005, Hypothetical Loop-Decoupling 
Design for a Nonlinear System”, Proceedings of the 
2005CACS Int. Automatic Control Conference, 
D00010i, Southern Taiwan University of Technology, 
Tainan, Taiwan, November 2005. 
 
 
9. References 
[1] W. L. Winston, Operations Research: 
Applications and Algorithms 3rd ed., 
Duxbury Press, CA, 1994. 
[2] J. B. Kruskal, “On the shortest spanning 
tree of graph and the traveling salesman 
problem,” Pro. of the American 
Mathematical Society, Vol. 7, pp. 48-50, 
June 1956. 
[3] R. C. Prim, “Shortest connection networks 
and some generalization,” Bell System 
Technical Journal, Vol. 36, pp. 1389-1401, 
1957. 
[4] C. Berge, and A. Ghouila-Houri, 
Programming and transportation 
Networks, N.Y., Wiley, 1962. 
[5] C. L. Liu, Introduction to Combinatorial 
Mathematics, McGraw-Hill Book Co., 
1968. 
[6] J. Y. Juang, “Identifying Minimum Span 
of a Network by Flow Table,” Proc. 
International Computer Symposium, 
1984ICS, Taipei, pp. 1130-1135, 1984. 
[7] J. Y. Juang, “Identifying Topological 
Structure of a Large Scale Dynamic 
Network,” Proc. International Conference 
of Advanced Automation, 1983ICAA, 
Taipei, pp. 398-402, 1983. 
[8] B. Noble and J. W. Daniel, Applied Linear 
Algebra, Prentice-Hall, N. J., 1988. 
[9] R. Bronson, Theorem and Problems of 
Operations Research, McGraw-Hill Book 
Co., 1982.  
[10]  L. R. Ford and D. R. Fulkerson, Flow in 
Network, Princeton, N.J.: Princeton 
University Press, 1962. 
[11]  E. Dijkstra, “A note on two problems in 
connection with graphs,” Numeriche 
Mathematics, Vol. 1. pp. 269-271, 1959. 
[12]  R. Dial, “Shortest path forest with 
topological ordering,” Communication of 
ACM, Vol. 12, pp. 632-633, 1969. 
[13]  J. J. Diviky and M.S. Hung, 
“Performance of shortest path algorithms 
in network flow problems,” Management 
Science, Vol. 36, pp.661-673, 1990. 
[14]  L. R. Ford and D. R. Fulkerson, “Solving 
the transportation problem,” Management 
Science, Vol. 3, pp. 24-32, 1956. 
[15]  J. Y. Juang, “Numerical Method for the 
Solution of Min-Cut/Max-Flow 
Problems,” Proc. 2006 CACS Automatic 
Control Conference, 2006-IACC, St. 
John’s University, Tamsui, Taiwan, pp. 
111-115, 2006. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
