此外，如果兩兩測試片段在對應的位置上，沒有任何衝突值的存在，我們稱之為正向相
容 (p-compatible)。反之，如果在每個對應的位置上皆為相反值，則稱之為反向相容
(n-compatible)。例如: 測試片段2和6是正向相容關係，而測試片段1和3是反向相容關係。 
 
Test slice reordering程序 
我們提出四種不同的test slice reordering程序，在方法一中，我們同時考慮正向相容與反
向相容，並且使用我們所提出的test slice reordering演算法，直接重新排列測試片段，因此可
以得到測試片段新的排列順序。重新排列後，我們將連續且相容的測試片段合併在一起。方
法二是接續方法一，重新排列後，將連續且相容的測試片段合併在一起。 
Test slice reordering 程序 (a) 方法一 (b) 方法二 (c) 方法三 (d) 方法四 
        
              (a)                                      (b) 
        
(a)                                     (d) 
方法三我們僅考慮正向相容的情況。首先必須建立測試片段的衝突圖，並使用在文獻[55]
中所提出來的heuristic演算法來將測試片段做分群的動作。同測試片段群組(test slice group, 
TSG)中的測試片段是可相容的，因此可使用群組中任一測試片段代表群組中其它的測試片
段。接下來使用test slice reordering演算法重新排列測試片段，以得到新的排列順序。方法四
考慮正向及反向相容。因此必須在測試片段分群前，檢查測試片段間是否有衝突的問題發生。 
 
Test slice reordering演算法 
Test slice reordering演算法的虛擬碼是我們計算每個測試片段中0與1的數量，並選擇0的
數量與1的數量差距最小的測試片段當作第一順位。如果0與1的數量一樣多，則選擇未明確
值較多的測試片段。 
 
 
 
 
 
在修正後的結果檢查出有三組衝突，第一組為測試片段0、1之間在第三行有衝突。檢查並修
正之後將相容表轉換成衝突表。在相容表中1與-1表示正向相容與反向相容，0表示衝突。最
後我們使用在文獻[55]中所提出來的heuristic演算法來將測試片段做分群動作。 
實驗結果 
我們使用C++程式語言來實現所提出的編碼策略。得到的實驗數據是利用MinTest與
TetraMAX這兩個ATPG工具所產生的測試向量來做實驗。 
我們將一些有名的方法的實驗數據展現出來，並且與我們的實驗結果做比較。 
測試資料壓縮效率的比較 
Circuit [20] [24] [33] [34] [35] [36] [37] [39] [40] Our_M Our_T
s5378 6,345 N/A 11,592 11,180 7,807 9,247 N/A N/A N/A 10,950 9,082
s9234 11,498 N/A 18,908 18,410 17,776 15,722 N/A N/A N/A 16,209 14,064
s13207 8,517 1,728 31,772 14,087 15,596 18,153 10,290 19,608 4,980 15,835 13,673
s15850 13,873 6,980 27,721 15,907 19,599 19,313 7,072 12,024 7,720 18,306 22,866
s35932 1,400 2,972 N/A 3,308 5,095 N/A 8,045 2,583 1,260 977 2,553
s38417 62,939 62,832 84,896 69,274 63,590 58,706 29,550 54,207 19,376 42,480 85,522
s38584 53,287 57,240 65,396 54,878 41,809 57,801 21,020 28,120 12,888 56,873 57,985
 
測試資料壓縮率(MinTest) 
[6] Our 
Circuit # SC 
#AC SSS 0 1 #AC DV AI(%)
16 6 14,070 20,190 17,796 5 10,950 35 
s5378 
32 7 15,078 20,524 18,277 6 11,037 38 
16 6 23,010 30,564 33,546 6 16,209 43 
s9234 
32 7 26,201 31,262 35,294 6 16,987 44 
64 8 35,480 37,976 48,592 7 16,780 58 
s13207 
128 9 35,118 39,483 49,401 8 17,558 57 
64 8 31,856 36,088 44,480 7 18,282 50 
s15850 
128 9 34,425 37,359 46,620 7 19,128 51 
128 9 30,645 35,082 28,188 6 1,179 96 
s35932 
256 10 26,060 30,460 26,690 6 977 96 
128 9 153,243 176,787 165,699 7 43,749 73 
s38417 
256 10 152,420 170,010 159,340 8 44,779 72 
128 9 97,299 107,379 117,675 7 59,568 44 
s38584 
256 10 105,090 111,380 122,700 7 64,848 42 
 
 
關係。在測試實例部分，我們使用 ISCAS’89 測試電路來模擬。在實驗結果中顯示，我們所
提出的方法優於 selective scan slice encoding [6]。其資料壓縮率與功率消耗分別改善了 57%
與 77%。 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/28
國科會補助計畫
計畫名稱: 針對低功耗系統晶片考量之測試樣本壓縮技術之探討
計畫主持人: 饒建奇
計畫編號: 99-2221-E-032-071- 學門領域: 積體電路及系統設計
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
